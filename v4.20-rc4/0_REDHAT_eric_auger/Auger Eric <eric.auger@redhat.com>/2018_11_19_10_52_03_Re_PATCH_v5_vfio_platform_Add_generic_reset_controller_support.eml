Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:29:50 -0000
Received: from icoremail.net (unknown [209.85.210.171])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_4_9lfJbY1W4AQ--.20818S3;
	Mon, 19 Nov 2018 18:52:46 +0800 (CST)
Received: from mail-pf1-f171.google.com (unknown [209.85.210.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3FkL7lfJbdaxXAA--.189S3;
	Mon, 19 Nov 2018 18:52:43 +0800 (CST)
Received: by mail-pf1-f171.google.com with SMTP id h3so8131025pfg.1
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 02:52:43 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=PU9feu6JMLsHdW+a973Bm2sbdo7K/BV67QXsUNneAo8=;
        b=tWGia07pxoHqpl+ZABsav1tNRv5AmqIK8YqEwzfp/096ds+yPSm5G2yB781S2iiFdU
         LGqB/TLj3PWbJdd4tnA7uK9C+X/FgC61/F3nuuE9xVItGXZyrAHvvZyyss3QommrBa3M
         39mHymi6QpJeeZ7oc4oF3yuW0Hv+p3k4vN7VgbBW68rynejdttR3Ese1vUgjAWvqxh0N
         8BHqBWXx6u6MZ8V6MuyDzk5xxPvpUYM0sLJYw5FNCEF4V9b3fdH+kBbdBlg7eLW4IS8t
         MKcLLg7gJtlMv4R3S8od/XP+zt0BBECJouZvCBh9Jr2awigZ/+gaem2BF7w4IxQYnn62
         Rg8g==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gLeJ1Lf3p6g0e0WDzozyEg012qfOt9XzTN3guMRjn8bYQAMAVow
	yhGDbVWJFs6emYCsos8AhWmCgYN7Umadx/d5VgDn/WhoeCZijis=
X-Received: by 2002:a62:6a88:: with SMTP id f130mr1452087pfc.201.1542624763325;
        Mon, 19 Nov 2018 02:52:43 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2498628pju;
        Mon, 19 Nov 2018 02:52:42 -0800 (PST)
X-Google-Smtp-Source: AJdET5fNrOR8mLQSooiSeitm5TyzkvjTJwGZA9HYOsq00Vt2rgX2I7rfSLzRc1NBmU9UDLaVsyTM
X-Received: by 2002:a63:30c8:: with SMTP id w191mr20255994pgw.120.1542624762203;
        Mon, 19 Nov 2018 02:52:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542624762; cv=none;
        d=google.com; s=arc-20160816;
        b=jR2KcChJ396uT3+b943HnO1B/dQsTC+co0BC7mg+kTEY0SSiBI5V34/GSGGqKe1DlU
         f7cFDXJtiUeY0lx2MaQwaAyet3vJUlqn3fJyg12z2SxxF0NCpDMBfQnAcG4ALm/O6mIT
         3mOPW2x0cfUGHwQqvVQqJDVJt42nmhoipt5BbmJke+G1lDmtopJZM3VbQU94NkPAuovx
         lqzZsSutiiwidJoUPCfCYEs5ig/L+yNTJH4U63yAZn6UtQePg69BQtqqNNrjOsxAHnw3
         mqduWqDJC3iyt9Nw0eIMPAlVtWKKPKG042nnhS0p7P8Bw9kG2fEIUIPKX5Brq9jx5zGe
         47Ew==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=PU9feu6JMLsHdW+a973Bm2sbdo7K/BV67QXsUNneAo8=;
        b=ccDj8SPrLCBVhxGCv3Ss8Nqm5SAlKmjNkRhO9nHLJneIlSCEddEsjNG8wARR/Lfnin
         QX2BrRtNO0TmZFKqTTsUVUaY5VzTOg2jbb13yqG1v3E4B9ZKExU4EIKw8gXBB9Y/g9mZ
         xTjn+jJ+2l2cg7LF7/Gmzo/ZJDxwDOSpeeChitguwRFA8i7gkzqvjrkJ3NjR9//ht1tB
         WMhpKTkJPHzp+UXKlS0PgGlZRGyXPk34rVIsuBEAfj58fMXd1nIHv0RIulXfiyRRfxjT
         UZTXFX5NtpuvOAC+O0JCzwQIL2rwIlJE+j5/+X3Hc/dDappAtC4g4RrJEvoZ5hcZpK+q
         ZWRQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m3si6375865pgc.232.2018.11.19.02.52.27;
        Mon, 19 Nov 2018 02:52:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728099AbeKSVP0 (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 16:15:26 -0500
Received: from mx1.redhat.com ([209.132.183.28]:44932 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727873AbeKSVP0 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 16:15:26 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com [10.5.11.12])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 9E30B308AA12;
        Mon, 19 Nov 2018 10:52:10 +0000 (UTC)
Received: from [10.36.116.185] (ovpn-116-185.ams2.redhat.com [10.36.116.185])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 5FB2460BE7;
        Mon, 19 Nov 2018 10:52:05 +0000 (UTC)
Subject: Re: [PATCH v5] vfio: platform: Add generic reset controller support
To: Geert Uytterhoeven <geert+renesas@glider.be>,
        Alex Williamson <alex.williamson@redhat.com>
Cc: Philipp Zabel <p.zabel@pengutronix.de>, kvm@vger.kernel.org,
        linux-renesas-soc@vger.kernel.org, linux-kernel@vger.kernel.org
References: <20181113131508.18246-1-geert+renesas@glider.be>
From: Auger Eric <eric.auger@redhat.com>
Message-ID: <12064722-6e85-c40c-12c9-7c7d4e1e2677@redhat.com>
Date: Mon, 19 Nov 2018 11:52:03 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181113131508.18246-1-geert+renesas@glider.be>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.41]); Mon, 19 Nov 2018 10:52:10 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3FkL7lfJbdaxXAA--.189S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKr43JFWUJF1fZr4xtw4xJFb_yoWxJr1DpF
	WUGFyfJFW8Gr15ta12vw4UZFW5uF1aqw1xK3sxK3W2k3sIqr98JryYkF1FqF9rAryUAay5
	tF4xKF48ZF4Y9FJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r4DMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVW5JVW7JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E
	87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2
	Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_
	Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1V
	AY17CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIY
	CTnIWIevJa73UjIFyTuYvjxUQEdyDUUUU

Hi Geert,
On 11/13/18 2:15 PM, Geert Uytterhoeven wrote:
> Vfio-platform requires dedicated reset support, provided either by ACPI,
> or, on DT platforms, by a device-specific reset driver matching against
> the device's compatible value.
> 
> On many SoCs, devices are connected to an SoC-internal reset controller.
> If the reset hierarchy is described in DT using "resets" properties, or
> in lookup tables in platform code, and devices have exactly one
> dedicated reset each, such devices can be reset in a generic way through
> the reset controller subsystem.  Hence add support for this, avoiding
> the need to write device-specific reset drivers for each single device
> on affected SoCs.
> 
> Devices that do require a more complex reset procedure can still provide
> a device-specific reset driver, as that takes precedence.
> 
> Note that this functionality depends on CONFIG_RESET_CONTROLLER=y, and
> becomes a no-op (as in: "No reset function found for device") if reset
> controller support is disabled.
> 
> Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
> Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
> Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
> ---
> This depends on "[PATCH] reset: Add reset_control_get_count()"
> (https://lore.kernel.org/lkml/20181113124744.7769-1-geert+renesas@glider.be/).
> 
> v5:
>   - Use reset_control_get_exclusive() instead of rejected
>     reset_control_get_dedicated(), as exclusive already implies a
>     dedicated reset line,
>   - Ensure the device has exactly one reset,
> 
> v4:
>   - Add Reviewed-by,
>   - Use new RFC reset_control_get_dedicated() instead of
>     of_reset_control_get_exclusive(), to (a) make it more generic, and
>     (b) make sure the reset returned is really a dedicated reset, and
>     does not affect other devices,
> 
> v3:
>   - Add Reviewed-by,
>   - Merge similar checks in vfio_platform_has_reset(),
> 
> v2:
>   - Don't store error values in vdev->reset_control,
>   - Use of_reset_control_get_exclusive() instead of
>     __of_reset_control_get(),
>   - Improve description.
> ---
>  drivers/vfio/platform/vfio_platform_common.c  | 29 +++++++++++++++++--
>  drivers/vfio/platform/vfio_platform_private.h |  1 +
>  2 files changed, 28 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/vfio/platform/vfio_platform_common.c b/drivers/vfio/platform/vfio_platform_common.c
> index c0cd824be2b767be..ce2aad8e0a8159f9 100644
> --- a/drivers/vfio/platform/vfio_platform_common.c
> +++ b/drivers/vfio/platform/vfio_platform_common.c
> @@ -18,6 +18,7 @@
>  #include <linux/module.h>
>  #include <linux/mutex.h>
>  #include <linux/pm_runtime.h>
> +#include <linux/reset.h>
>  #include <linux/slab.h>
>  #include <linux/types.h>
>  #include <linux/uaccess.h>
> @@ -113,11 +114,14 @@ static bool vfio_platform_has_reset(struct vfio_platform_device *vdev)
>  	if (VFIO_PLATFORM_IS_ACPI(vdev))
>  		return vfio_platform_acpi_has_reset(vdev);
>  
> -	return vdev->of_reset ? true : false;
> +	return vdev->of_reset || vdev->reset_control;
>  }
>  
>  static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
>  {
> +	struct reset_control *rstc;
> +	int count;
> +
>  	if (VFIO_PLATFORM_IS_ACPI(vdev))
>  		return vfio_platform_acpi_has_reset(vdev) ? 0 : -ENOENT;
>  
> @@ -128,8 +132,24 @@ static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
>  		vdev->of_reset = vfio_platform_lookup_reset(vdev->compat,
>  							&vdev->reset_module);
>  	}
> +	if (vdev->of_reset)
> +		return 0;
> +
> +	/* Generic reset handling needs a single, dedicated reset line */
> +	count = reset_control_get_count(vdev->device);
> +	if (count < 0)
> +		return count;
> +
> +	if (count != 1)
> +		return -EINVAL;
>  
> -	return vdev->of_reset ? 0 : -ENOENT;
> +	rstc = reset_control_get_exclusive(vdev->device, NULL);
So I understand the semantics of reset_control_get_exclusive() is now
agreed and this means the reset line is not shared with other devices,
correct?

A question about the usage of reset_control_get_count(). Why is it an
issue if the count is > 1? Does it check there are several reset lines,
each of then being used for resetting something different or does it
check there are several reset controllers are able to do the reset job?
My point behind is what's the issue as long as one non shared line can
be grabbed with reset_control_get_exclusive().
> +	if (!IS_ERR(rstc)) {
> +		vdev->reset_control = rstc;
> +		return 0;
> +	}
> +
> +	return PTR_ERR(rstc);
>  }
>  
>  static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
> @@ -139,6 +159,8 @@ static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
>  
>  	if (vdev->of_reset)
>  		module_put(vdev->reset_module);
> +
> +	reset_control_put(vdev->reset_control);
Most of the drivers use devm_reset_control_get_exclusive(), can't we use
that instead and benefit from the fact the reset_control_put() is called
automatically on driver detach?

Thanks

Eric
>  }
>  
>  static int vfio_platform_regions_init(struct vfio_platform_device *vdev)
> @@ -218,6 +240,9 @@ static int vfio_platform_call_reset(struct vfio_platform_device *vdev,
>  	} else if (vdev->of_reset) {
>  		dev_info(vdev->device, "reset\n");
>  		return vdev->of_reset(vdev);
> +	} else if (vdev->reset_control) {
> +		dev_info(vdev->device, "reset\n");
> +		return reset_control_reset(vdev->reset_control);
>  	}
>  
>  	dev_warn(vdev->device, "no reset function found!\n");
> diff --git a/drivers/vfio/platform/vfio_platform_private.h b/drivers/vfio/platform/vfio_platform_private.h
> index 85ffe5d9d1abd94e..a56e80ae5986540b 100644
> --- a/drivers/vfio/platform/vfio_platform_private.h
> +++ b/drivers/vfio/platform/vfio_platform_private.h
> @@ -60,6 +60,7 @@ struct vfio_platform_device {
>  	const char			*compat;
>  	const char			*acpihid;
>  	struct module			*reset_module;
> +	struct reset_control		*reset_control;
>  	struct device			*device;
>  
>  	/*
> 
