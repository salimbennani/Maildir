Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:05:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6A684580332;
	Thu, 22 Nov 2018 02:59:44 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 02:59:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AijRSchd5Z6yoeub8AHO+nDRvlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZxeN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FDr4nlpVYDtgeyCRW2Ce/z0DJEmmP60Ksn2OohCwHG2wkgEsoTvn?=
 =?us-ascii?q?vOrNX1NbsSUOCvw6LV0zvDcvZW2TLn54jMaB8qvPaBXalsccrMzEkvEhnKjlGK?=
 =?us-ascii?q?poH+IzyV0fkCvHaB4Op9T+KvjHQnpBtrrjio3McshZDEi4QIwV7H7SV02Jg5Kc?=
 =?us-ascii?q?G8RUJhfNKpHoVcuzuHO4Z1Xs8uWWBltSQixrEbpZK2cjIGxIo5yxPbcfCLboyF?=
 =?us-ascii?q?7gj+WOuVJzpzmWhrd6ilhxmo9Eit0u38Wdew0FZNtidFjNbMuW4X1xDJ6ciIVO?=
 =?us-ascii?q?F9/kG/1jaLzQzT7ftEIU8smaraLZ4u3KIwm4INvUjfGiL6glj6gaGIekk+5+Sl?=
 =?us-ascii?q?6Pjrbq/nq5KeL4N0jxvxMqUqmsyxG+Q4NQ0OUnCf+eS90r3j4EL4TKxJjvIoiK?=
 =?us-ascii?q?nZto7VJcACqq6+DQ5V1Jgs6wykAje439QXg2MHIEhGeB2ZlYjpPU/BIPTiAfe4?=
 =?us-ascii?q?mVSsny9nx+raMb35HpXNMn/Dna/lfbZ86E5T1hA/zN9C559PDrEBIfTzWlL+td?=
 =?us-ascii?q?DCDx85NRC0zPjjCNlnyoweXmePCLeDMKzOqV+I+v4vI+6UaY8Vojn9KuQl6OTp?=
 =?us-ascii?q?jXMjmV8dYLOm3Z0YaH2jGvRmIkOZYWfjg9sbEGcKuBY+Q/LuiFGYTTFTYHOyVb?=
 =?us-ascii?q?om5j4nEIKmEZvDRoe1jbyD2ye0AIdaZmNBClCKF3focJ6JW/MNaCKUP89gnSYI?=
 =?us-ascii?q?VbmnS489yx6usBX2xKZgLurR4icYr47s1MBp5+3PkhE/7SZ7D9+d02GKTGF4hH?=
 =?us-ascii?q?kISCU03K1kpUx9y1GD0bV3gvBCFNxT4e9JXRk+NZLG0+N6DNXyUBrbftiVUFam?=
 =?us-ascii?q?XsmmATYpQ9Iy2dAOZVxxG9Gjjh/Z2SqqDKQYl7iKBJwy76Ld0GL9J8d7y3bayq?=
 =?us-ascii?q?Yhi0MqTddINW2jnqR/7RTcB5bVk0WFkKanbbkT0zTT9Gid12aOvFtXUAhrUarb?=
 =?us-ascii?q?W3ATYU/Wrdf85kPGVLKuDbUnMg1cyc+NMKdKa9vpjUlYS/fnItjRf2Wxm2KoDx?=
 =?us-ascii?q?aS2ryMdJbqe3ka3CjFFUcLiR4T8micOQg+HCihpXneAyJoFV/0Z0Ps8O9+qG60?=
 =?us-ascii?q?T0MuzgGKaVFh2KSx+hIPmfOcTPYT1KoeuCg9szV0AEq939XOBtqcpgpheaJcYc?=
 =?us-ascii?q?894FZHz27ZqxZxPpu6L6Bmh14edQt3sljq1xV2DIVAjMcroGkrzAp0NaKXzldB?=
 =?us-ascii?q?eymE0pD3P73dMnPy8wy3a67KxlHe186b9b0L6PsmpFTsogGoGlA5/HV6ztZayX?=
 =?us-ascii?q?2c5pbNDAoMSp/xVkc39x5np7DVeCU95oXU1WFyPqmwqDPNx9UpBO49wBa6Y9hf?=
 =?us-ascii?q?KL+EFBP1E8ACB8muNfYmlESzYhMFPOBd7qg0P8y9evuC2a6rOvtgnT28gWRG5o?=
 =?us-ascii?q?B9zlyD9y5mRuHU2JYFxumS3hGbWDfkkFehrsf3lJheZTETAmWw0zLkC5NWZqFo?=
 =?us-ascii?q?e4YEF32uI8yuytpinZHtX2NX+0C5B1MB3s+kYh6Sb1373Q1N2kUbu32nmS2kzz?=
 =?us-ascii?q?NqlzEltLaQ3CvLw+76bhoIJnZLRHV+jVfrOYW1j9EaUFKobgQzjxul+ED6yrNf?=
 =?us-ascii?q?pKR+KWnTXEhJczL3L2FkTqu/qL6Cb9RT55MvtCVdSP68bkyCSr7hvxsa1DvuH2?=
 =?us-ascii?q?lEyzAhdDGquZL5kwZhiG2HL3Zzr3vZecduyhfZ/9HcQf9R3jwbRCh3kzXXB168?=
 =?us-ascii?q?P8W38tWQjZvMrue+V2e5XJ1JbSbr1Z+AtDe85WByARywhfezlsflEQg71y/2zN?=
 =?us-ascii?q?1qVSTOrBbhbYjnzaW6MeR7fkZ2AF/w8dZ1GoZ7koEonpEfxWAahomJ/XoAiWrz?=
 =?us-ascii?q?Ms9U2aPkYHoNWD4E2djV4Af+1U1nL3KJwZ/5V3qHzstgYdm6fn0Z2iYn489WD6?=
 =?us-ascii?q?eU6aROnTFprVqgsQLRff99ky8Yyfsv634VmfsFuQQzwSWGHrAdA1NYMjfymBSS?=
 =?us-ascii?q?4NCzt6FXZGepcbit20tyh9GhDLeeog5CXHb1YIstHSh17s9nKlLDzGXz6p34eN?=
 =?us-ascii?q?nXdd8TqhqUkxLag+lUMp0xkOcKhTF8OWL8pnAlz+87jRpz3ZC1poSHKmNt/L6n?=
 =?us-ascii?q?DR5cLDH6e8QT+jT1h6ZEgsmWx5yvHolmGjgTR5TnV/WoEDYPtfj9MwaODSYxqn?=
 =?us-ascii?q?OaGbrZAA+e511qr3PJE5C3KX6XIGMVwsllRBmYPEZfmhwbXC0mnp4lEQCn3M7h?=
 =?us-ascii?q?f1185j8P/V70sAdMxvhrNxniUWffuQGoZS0vSJWEKBpW7wdC51raMMCE7+JzGT?=
 =?us-ascii?q?1Y8YOlrACXNmObYAFIB3kTWkOYH1DjIqWu5d7Y/umYAeq+MuLOYaiUpuxYTfuI?=
 =?us-ascii?q?3pWv0o1p/zuXMsWPP39iD+A020ZZXHB5HdjZlCsLSyANiy3NaMubrg+m+iJrts?=
 =?us-ascii?q?C/7OjrWAX36IuPFbRSMNZv+xO3gauZNO6QniF5KTlG2ZMW2H/I06MS3FoTiyFo?=
 =?us-ascii?q?ajmsHq4MtS/LTKLMhKBXCwQXZD90NMtN96g8xBVCOdbHitPp0b51luQ6C0peWl?=
 =?us-ascii?q?z7hM6oZdYGI2W8NF7cAEaLNbKGJSDEws3tYKO8T6FQg/tQtxGqpTmbFErjNCyZ?=
 =?us-ascii?q?lzb1TxCvLf1MjCaDMRxCuYG9dwxhBnT5QN36ah20Ltl3gCYywb01gHPKKGEdPS?=
 =?us-ascii?q?J9c0NLsr2f8ydYju9jFGxG63pvNfOElDqB7+nENpYWtuNmAyRumOJc5XQ6yr1V?=
 =?us-ascii?q?4zlFRfx1giTSqNFurkqikumOzDpnTRVPpixKhIKNoUVtJ6HZ+oNcVnbD+RJepV?=
 =?us-ascii?q?mXXjYDqtRoF96nmKFVgozNna/8JSpB29HZ580RA47TMs3RdDIKMRPuUA/JRF8U?=
 =?us-ascii?q?UDWrPGaHr0xAme6f9zueqZ1s7tDomZwTWvpVDlIuU/8XFElhNNgDO4tsGCgjjK?=
 =?us-ascii?q?SQgcAP/3Wz6h/cWJZ0pJfCA8mbAfTzOT/RsaRBYhIMyPusNpgOM4jy30VKYV52?=
 =?us-ascii?q?kY3XAU3KVJZKuCI3PVx8m1lE7HUrFj574EnicA74pSZLTfM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AqAQDjivZbh0O0hNFjgheCAYFrJ4xvi?=
 =?us-ascii?q?yKCIZcmgXMUGBMBiFEiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJpAiQ?=
 =?us-ascii?q?ZAQE3AQUJAlADKTEBCggFgxyCAQEFqQSBbDOCdgEBBYciCIdegw+BHBeBQD+Ie?=
 =?us-ascii?q?oYCkBGPLUYJkTEWiVGHNyyYBIFGgg0zGggoCDuCbIInF4hehUY4MoEEAQEBily?=
 =?us-ascii?q?CTQEB?=
X-IPAS-Result: =?us-ascii?q?A0AqAQDjivZbh0O0hNFjgheCAYFrJ4xviyKCIZcmgXMUGBM?=
 =?us-ascii?q?BiFEiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJpAiQZAQE3AQUJAlADK?=
 =?us-ascii?q?TEBCggFgxyCAQEFqQSBbDOCdgEBBYciCIdegw+BHBeBQD+IeoYCkBGPLUYJkTE?=
 =?us-ascii?q?WiVGHNyyYBIFGgg0zGggoCDuCbIInF4hehUY4MoEEAQEBilyCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="139199350"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 02:59:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405424AbeKVVib (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 16:38:31 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:51268 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2405411AbeKVVia (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 16:38:30 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id BA8BD601D1; Thu, 22 Nov 2018 10:59:36 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542884376;
        bh=8z5ySr8rYwxZO/DhtzMDEWwz+t52kWpV7dd9bmEt/5I=;
        h=From:To:Cc:Subject:Date:From;
        b=l2iL7lLhwMSjMg9lQ5PbLN/V+acLSdXC5sfEqZB3pH8jktZ+Tz6+9UcBezhcDjyrC
         VPkLvRuexTnRfM+wWgdgthzQHGOdOmygFYTry4rNGBaGxybUJBxHiPUe9lGKsKlpZ4
         b4BvYRVm97yB+CZhh6dTiZjI0PygY2NXoqVdZYUU=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from codeaurora.org (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: stummala@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 492766035F;
        Thu, 22 Nov 2018 10:59:34 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542884375;
        bh=8z5ySr8rYwxZO/DhtzMDEWwz+t52kWpV7dd9bmEt/5I=;
        h=From:To:Cc:Subject:Date:From;
        b=d5iQcpYjMC8m/4hPOl4qYdKFq3gujcOhvwN1WHYIP612yJiipjvctOVD5ppk26nWD
         i/BTH6WzqZkN7ZHLk6HQGGH5XKTr1ZHytfTbkOILBRmWxbh7tdEGMiz+twJSgLL8DY
         ytq21IL44AGUstjkqOkcR4ZfukKyczLxL5JBIPlM=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 492766035F
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=stummala@codeaurora.org
From: Sahitya Tummala <stummala@codeaurora.org>
To: Jaegeuk Kim <jaegeuk@kernel.org>, Chao Yu <yuchao0@huawei.com>,
        linux-f2fs-devel@lists.sourceforge.net
Cc: linux-kernel@vger.kernel.org,
        Sahitya Tummala <stummala@codeaurora.org>
Subject: [PATCH 1/2] f2fs: fix sbi->extent_list corruption issue
Date: Thu, 22 Nov 2018 16:29:19 +0530
Message-Id: <1542884360-19470-1-git-send-email-stummala@codeaurora.org>
X-Mailer: git-send-email 1.9.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

When there is a failure in f2fs_fill_super() after/during
the recovery of fsync'd nodes, it frees the current sbi and
retries again. This time the mount is successful, but the files
that got recovered before retry, still holds the extent tree,
whose extent nodes list is corrupted since sbi and sbi->extent_list
is freed up. The list_del corruption issue is observed when the
file system is getting unmounted and when those recoverd files extent
node is being freed up in the below context.

list_del corruption. prev->next should be fffffff1e1ef5480, but was (null)
<...>
kernel BUG at kernel/msm-4.14/lib/list_debug.c:53!
task: fffffff1f46f2280 task.stack: ffffff8008068000
lr : __list_del_entry_valid+0x94/0xb4
pc : __list_del_entry_valid+0x94/0xb4
<...>
Call trace:
__list_del_entry_valid+0x94/0xb4
__release_extent_node+0xb0/0x114
__free_extent_tree+0x58/0x7c
f2fs_shrink_extent_tree+0xdc/0x3b0
f2fs_leave_shrinker+0x28/0x7c
f2fs_put_super+0xfc/0x1e0
generic_shutdown_super+0x70/0xf4
kill_block_super+0x2c/0x5c
kill_f2fs_super+0x44/0x50
deactivate_locked_super+0x60/0x8c
deactivate_super+0x68/0x74
cleanup_mnt+0x40/0x78
__cleanup_mnt+0x1c/0x28
task_work_run+0x48/0xd0
do_notify_resume+0x678/0xe98
work_pending+0x8/0x14

Fix this by cleaning up the extent tree of those recovered files
before freeing up sbi and before next retry.

Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
---
 fs/f2fs/extent_cache.c |  6 +++++-
 fs/f2fs/f2fs.h         |  2 +-
 fs/f2fs/inode.c        |  2 +-
 fs/f2fs/super.c        | 10 ++++++++++
 4 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/fs/f2fs/extent_cache.c b/fs/f2fs/extent_cache.c
index 1cb0fcc..763ba83 100644
--- a/fs/f2fs/extent_cache.c
+++ b/fs/f2fs/extent_cache.c
@@ -743,7 +743,7 @@ void f2fs_drop_extent_tree(struct inode *inode)
 		f2fs_mark_inode_dirty_sync(inode, true);
 }
 
-void f2fs_destroy_extent_tree(struct inode *inode)
+void f2fs_destroy_extent_tree(struct inode *inode, bool force)
 {
 	struct f2fs_sb_info *sbi = F2FS_I_SB(inode);
 	struct extent_tree *et = F2FS_I(inode)->extent_tree;
@@ -752,6 +752,9 @@ void f2fs_destroy_extent_tree(struct inode *inode)
 	if (!et)
 		return;
 
+	if (force)
+		goto destroy_et;
+
 	if (inode->i_nlink && !is_bad_inode(inode) &&
 					atomic_read(&et->node_cnt)) {
 		mutex_lock(&sbi->extent_tree_lock);
@@ -761,6 +764,7 @@ void f2fs_destroy_extent_tree(struct inode *inode)
 		return;
 	}
 
+destroy_et:
 	/* free all extent info belong to this extent tree */
 	node_cnt = f2fs_destroy_extent_node(inode);
 
diff --git a/fs/f2fs/f2fs.h b/fs/f2fs/f2fs.h
index 1e03197..db8a919 100644
--- a/fs/f2fs/f2fs.h
+++ b/fs/f2fs/f2fs.h
@@ -3410,7 +3410,7 @@ bool f2fs_check_rb_tree_consistence(struct f2fs_sb_info *sbi,
 bool f2fs_init_extent_tree(struct inode *inode, struct f2fs_extent *i_ext);
 void f2fs_drop_extent_tree(struct inode *inode);
 unsigned int f2fs_destroy_extent_node(struct inode *inode);
-void f2fs_destroy_extent_tree(struct inode *inode);
+void f2fs_destroy_extent_tree(struct inode *inode, bool force);
 bool f2fs_lookup_extent_cache(struct inode *inode, pgoff_t pgofs,
 			struct extent_info *ei);
 void f2fs_update_extent_cache(struct dnode_of_data *dn);
diff --git a/fs/f2fs/inode.c b/fs/f2fs/inode.c
index 91ceee0..39e3ade3 100644
--- a/fs/f2fs/inode.c
+++ b/fs/f2fs/inode.c
@@ -649,7 +649,7 @@ void f2fs_evict_inode(struct inode *inode)
 	f2fs_bug_on(sbi, get_dirty_pages(inode));
 	f2fs_remove_dirty_inode(inode);
 
-	f2fs_destroy_extent_tree(inode);
+	f2fs_destroy_extent_tree(inode, false);
 
 	if (inode->i_nlink || is_bad_inode(inode))
 		goto no_delete;
diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
index af58b2c..f41ac43 100644
--- a/fs/f2fs/super.c
+++ b/fs/f2fs/super.c
@@ -3016,6 +3016,15 @@ static void f2fs_tuning_parameters(struct f2fs_sb_info *sbi)
 	sbi->readdir_ra = 1;
 }
 
+void f2fs_cleanup_extent_cache(struct f2fs_sb_info *sbi)
+{
+	struct super_block *sb = sbi->sb;
+	struct inode *inode, *next;
+
+	list_for_each_entry_safe(inode, next, &sb->s_inodes, i_sb_list)
+		f2fs_destroy_extent_tree(inode, true);
+}
+
 static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 {
 	struct f2fs_sb_info *sbi;
@@ -3402,6 +3411,7 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 	 * falls into an infinite loop in f2fs_sync_meta_pages().
 	 */
 	truncate_inode_pages_final(META_MAPPING(sbi));
+	f2fs_cleanup_extent_cache(sbi);
 	f2fs_unregister_sysfs(sbi);
 free_root_inode:
 	dput(sb->s_root);
-- 
Qualcomm India Private Limited, on behalf of Qualcomm Innovation Center, Inc.
Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum, a Linux Foundation Collaborative Project.

