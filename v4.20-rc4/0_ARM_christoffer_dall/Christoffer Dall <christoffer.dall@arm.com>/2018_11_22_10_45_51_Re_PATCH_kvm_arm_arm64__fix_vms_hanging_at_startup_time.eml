Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:05:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F2D17580332;
	Thu, 22 Nov 2018 02:46:35 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga003-1.jf.intel.com with ESMTP; 22 Nov 2018 02:46:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfCPeWhyZGlzSOyvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8XIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJcAY28?=
 =?us-ascii?q?YYQAAPYcMulaoYb9vEMOoBmlCAmwGO/i0CNEimPs0KEk1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nZstX1NL0TUeCu0KnIyjvDb/1I1jfn9YPGfAouofWIXbltdsfe1UkvFxnEjlWL?=
 =?us-ascii?q?tYzlOD2V1uoTvGiB9eZvSPigi2ojqwxquDev3MIshpPViYISz1DJ7CN0y5s7K9?=
 =?us-ascii?q?2/TU50e9+kEJ1IuiGeKYt2R9kuQ2V2uCs817YIuoa7cTAUxJg7wxPTceGLfoaW?=
 =?us-ascii?q?7h75SeqcIit0iGhkdb+9nxq+71Wsx+/mWsWp31tGsjBJnsTQunwQzRDe6NSLR/?=
 =?us-ascii?q?1g9Um7wzmPzRrc6uRcLEA0i6XbL5khz6Yulpocr0vDBDX6mEbog6+McEUr5Oyo?=
 =?us-ascii?q?5/7gYrX8qZ+QL450igfgPaQygsGzH/g0PwwUU2SG9+mwyqfv8VD6TblWlPE7k6?=
 =?us-ascii?q?vUvIjfJcsBp665BwFV0pwk6xa6Fzqm1NUYnX8aLFNKYR6HjJbmO0vIIP/mCfez?=
 =?us-ascii?q?mlOskTltx//YJL3sGYvNLnfdn7f7Z7p96FBTyBA1zd9B45JYELYBIOj8WkPprt?=
 =?us-ascii?q?zXEgc5MxCow+bgENh90oIeWWGRDaODP6LSrESF5uYuI+mKeY8UtyzxK/kj5/7y?=
 =?us-ascii?q?k3A5nUURcrWu3ZsScHq4BOhpI12FYXrwhdcMCWcKsRA/TOz2klKCViRfZ3avX6?=
 =?us-ascii?q?0m4DE7B5mrDYPCRoCrnbyA0z23HpxQZmBaFF+MFW3keJmDW/cJcCiSONNukiQY?=
 =?us-ascii?q?Vbi9TI8szROutAjkxLZ9LerU/SsYtZTk1NVu4+3TlBcy9SF7DsiH0mGNSX10kX?=
 =?us-ascii?q?0MRzMswK9/pkl9wE+Z0adkm/xYCcBT5/RRXwggLp7cz+t6C9PoVgLbZNiJSk2r?=
 =?us-ascii?q?QtGnATE3U9IwzMUCY0d7G9W+kB/D2zCmDKMSl7yOHJY06L7T32DtJ8ZhzHbLzK?=
 =?us-ascii?q?ohgEMgQsdVMW2mh7Rw9w7cB4PSl0WZlqCqdbkT3SLX9WeDy3aOs19cUAJqTarF?=
 =?us-ascii?q?WnUfbFPMrdvl/kPCU6OuCbM/PwRc08GCNLVFZsfpjVpcQvfjI8rRY2S2l2e0Bh?=
 =?us-ascii?q?aIw7eMYZHue2Uc2iXdFUcFnxoS/XaAKQgxGCOhr3jCAzxpEFLle1ns/vVmqHOn?=
 =?us-ascii?q?Uk80yBmHYFB72Lqr5BEZn/ycROkV3rIfpighrS55HFK839LQFtqBqBBtfKRaYd?=
 =?us-ascii?q?Mh/lhH0XjVuBB6PpylN6pinEIRcxxrv0Py0BV6EplAkckvrHMt0ApyKaKZ3Eld?=
 =?us-ascii?q?dz+C2pDwILnXKmj0/BCgcKPW3lDe0NCL+qYA8vg4qlPjvB23GUom6Xloz95V03?=
 =?us-ascii?q?6E7JXQEAUSSY7xUlow9xVivb7aZjcy5ozK2nxsK6W7qSLC1M8zC+sjyRageMlf?=
 =?us-ascii?q?PbiAFA/zFc0aGsevJPYrm1ivchILIuRS+LQoMMOhcvuMwLSrM/p4nDK6kWRH55?=
 =?us-ascii?q?hw00KR9yZmVuHExZcEw/GC0QuBWDfxl1OhssHxmYBZajAeBGu/yS74BIFPYq1+?=
 =?us-ascii?q?Z5oECWCrI8ev3NVxm4btW2JE9F6kH14Gws6pdgaIYFznwAJQ0l4boXq5liuizj?=
 =?us-ascii?q?x4ii0mobCb3CPT3evibh0HOmhQSWlmjFfsJ5W0jt8AUEipaQgpiAWq5ULgy6dH?=
 =?us-ascii?q?o6R/KnHZQV1UcCjuM2FiTqywu6KCYs5O8p8psT9bUP+hYVCcUbP9pxoa0yX+H2?=
 =?us-ascii?q?pR3jw7djequonnkBx+km6SMHFzrH/Bc8Fq2Rjf/MDcReJW3jceRil3kyPXBlu/?=
 =?us-ascii?q?P9mu59mUjI3MsuO9V2KgUJ1cby/rwJiEtCu6421qHBK+k+qymt3hDQg1zyv728?=
 =?us-ascii?q?N2WiXPqRb2epPr2LiiMeJ7YkloA0fx6spgFYF5iIcwhpAQ2X4Bi5WR/HoHl3rz?=
 =?us-ascii?q?MNpB1aL/anoNWSAEw9rP7Af5301jK2qDx5jlWXWF3sthe966b3sV2i0n7sBGEq?=
 =?us-ascii?q?eU7KFekitzrVq1tgbRYfl7njcAxvoi8n8ag+cVuAUzyiWRGKwdHU5dPSb0jRSH?=
 =?us-ascii?q?88i+rLlLZGaoabWw0Ut+ndO7A72YrABTRm35eos8Ei9q9cpwLkjM0HLo54Hged?=
 =?us-ascii?q?nQa88TtxKOnxfBiehVNIw+lv4QiSV7PmL9uGUvy/Qnghx2wZG6oI+HJn1x/KK+?=
 =?us-ascii?q?Bx5ULDz0aNkV+jHwlqZehceW0purHpVgHDULQZTpQeipEDIUqfToKQKOHCcgpX?=
 =?us-ascii?q?ecHLrVBRWf51t+r3LTD5CrMGmaK2IDwtVlQBmdOVZTgAQJXDghmp45FwaqxNHu?=
 =?us-ascii?q?cUtj5zAR4EL4pQVIyu5yKxb/VWLfrh+yajgoUJifMAZW7gZa6kfXK8Oe6/x8Hz?=
 =?us-ascii?q?pC8p29tgCNKXGbZwdVDWEPQEOEHEvuPr2v5dnG7uiZCfCyL/rIYbWSt+NeU+2E?=
 =?us-ascii?q?yo6o0otj5zyMLNmAPmF+D/0n3UpORXB4G8PEmzUWViwYjSTNY9SApBe7/C13od?=
 =?us-ascii?q?uy8PDqWALp+IuOBKFeMdRp+xCqn6iDM/Scizp+KTZdzpkM32PHyKAD3F4OjCFj?=
 =?us-ascii?q?bzmtHqoBtS7OT6LQm7VbDx0BayN0O8tH8bg83hRWOcPAjtP117h4juM6CltfVF?=
 =?us-ascii?q?zhnN2patIOI22nKFzHA0OLPqycJTLX28H3fb+8SbpIgepOqh2/oiybHFHjPziZ?=
 =?us-ascii?q?kznpVguiMeVNjCGdIRxft5uxchdrCWj/Ut3mbge3P8NwjT0z2bc0nG/FNXYAMT?=
 =?us-ascii?q?hgdENAtqGQ7SJdgvllB2NN9GZqLemalCaf9OTYLpcWsf12AiV7je5a4XI6y6dL?=
 =?us-ascii?q?4yFAXvB6hCzSrtt2qVG8juaP0iZnUAZJqjtThIOEp0NiOaDY9plGQXnF/RIN4n?=
 =?us-ascii?q?+WCxQFvNZlDtzvu6ZNytnAjq7zKTFC887K8ssYHcTbNMWHMH9yeSbuTRzJCAoI?=
 =?us-ascii?q?S3aXNWDSnVZM2KWQ63mUo558tpjtlYAUW5dSTllzHfQfXBdLBtsHdbx3RDI/jb?=
 =?us-ascii?q?mVgsMSrVa3qB2ZEM5apJHcSvWcD/j1bjqQib1sbgENh7j/KNJAZcXAx0V+Zwwi?=
 =?us-ascii?q?z8zxEE3KUIUI+3U5Yw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAAiPZbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDaxQTjBBfiyKCDRSXJoF2KRMBiFAiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKGAklAwwFSRMFgxyCA?=
 =?us-ascii?q?gQBqnUziieMCYFXP4ERgxKER4NsgiYCiRmHRY8kBwKCHASPBCORCJl2gg1NI4M?=
 =?us-ascii?q?8gicXjh0+AQExgQUBAYpcgk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAAiPZbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDaxQTjBBfiyKCDRSXJoF2KRMBiFAiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKGAklAwwFSRMFgxyCAgQBqnUziieMCYF?=
 =?us-ascii?q?XP4ERgxKER4NsgiYCiRmHRY8kBwKCHASPBCORCJl2gg1NI4M8gicXjh0+AQExg?=
 =?us-ascii?q?QUBAYpcgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="41177087"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 02:45:58 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405326AbeKVVYq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 16:24:46 -0500
Received: from foss.arm.com ([217.140.101.70]:45230 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732079AbeKVVYp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 16:24:45 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 70B6E3617;
        Thu, 22 Nov 2018 02:45:53 -0800 (PST)
Received: from localhost (e113682-lin.copenhagen.arm.com [10.32.144.41])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 098253F5CF;
        Thu, 22 Nov 2018 02:45:52 -0800 (PST)
Date: Thu, 22 Nov 2018 11:45:51 +0100
From: Christoffer Dall <christoffer.dall@arm.com>
To: Julien Thierry <julien.thierry@arm.com>
Cc: peng.hao2@zte.com.cn, marc.zyngier@arm.com, andre.przywara@arm.com,
        linux-kernel@vger.kernel.org, leif.lindholm@linaro.org,
        ard.bieshseuvel@linaro.org, kvmarm@lists.cs.columbia.edu,
        linux-arm-kernel@lists.infradead.org
Subject: Re: [PATCH] kvm: arm/arm64 : fix vm's hanging at startup time
Message-ID: <20181122104551.GE17441@e113682-lin.lund.arm.com>
References: <01746207-c9bb-dc91-58d7-a66c0d971f88@arm.com>
 <201811211656540883310@zte.com.cn>
 <20181121110620.GC18678@e113682-lin.lund.arm.com>
 <26c4ad81-f808-5a84-c725-72db8de7cd2b@arm.com>
 <20181121152409.GC17441@e113682-lin.lund.arm.com>
 <84693a4d-34a5-8847-818a-9c05461f0ac8@arm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <84693a4d-34a5-8847-818a-9c05461f0ac8@arm.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Nov 21, 2018 at 03:53:03PM +0000, Julien Thierry wrote:
> 
> 
> On 21/11/18 15:24, Christoffer Dall wrote:
> >On Wed, Nov 21, 2018 at 12:17:45PM +0000, Julien Thierry wrote:
> >>
> >>
> >>On 21/11/18 11:06, Christoffer Dall wrote:
> >>>Hi,
> >>>
> >>>On Wed, Nov 21, 2018 at 04:56:54PM +0800, peng.hao2@zte.com.cn wrote:
> >>>>>On 19/11/2018 09:10, Mark Rutland wrote:
> >>>>>>On Sat, Nov 17, 2018 at 10:58:37AM +0800, peng.hao2@zte.com.cn wrote:
> >>>>>>>>On 16/11/18 00:23, peng.hao2@zte.com.cn wrote:
> >>>>>>>>>>Hi,
> >>>>>>>>>>>When virtual machine starts, hang up.
> >>>>>>>>>>
> >>>>>>>>>>I take it you mean the *guest* hangs? Because it doesn't get a timer
> >>>>>>>>>>interrupt?
> >>>>>>>>>>
> >>>>>>>>>>>The kernel version of guest
> >>>>>>>>>>>is 4.16. Host support vgic_v3.
> >>>>>>>>>>
> >>>>>>>>>>Your host kernel is something recent, I guess?
> >>>>>>>>>>
> >>>>>>>>>>>It was mainly due to the incorrect vgic_irq's(intid=27) group value
> >>>>>>>>>>>during injection interruption. when kvm_vgic_vcpu_init is called,
> >>>>>>>>>>>dist is not initialized at this time. Unable to get vgic V3 or V2
> >>>>>>>>>>>correctly, so group is not set.
> >>>>>>>>>>
> >>>>>>>>>>Mmh, that shouldn't happen with (v)GICv3. Do you use QEMU (which
> >>>>>>>>>>version?) or some other userland tool?
> >>>>>>>>>>
> >>>>>>>>>
> >>>>>>>>>QEMU emulator version 3.0.50 .
> >>>>>>>>>
> >>>>>>>>>>>group is setted to 1 when vgic_mmio_write_group is invoked at some
> >>>>>>>>>>>time.
> >>>>>>>>>>>when irq->group=0 (intid=27), No ICH_LR_GROUP flag was set and
> >>>>>>>>>>>interrupt injection failed.
> >>>>>>>>>>>
> >>>>>>>>>>>Signed-off-by: Peng Hao <peng.hao2@zte.com.cn>
> >>>>>>>>>>>---
> >>>>>>>>>>>   virt/kvm/arm/vgic/vgic-v3.c | 2 +-
> >>>>>>>>>>>   1 file changed, 1 insertion(+), 1 deletion(-)
> >>>>>>>>>>>
> >>>>>>>>>>>diff --git a/virt/kvm/arm/vgic/vgic-v3.c b/virt/kvm/arm/vgic/vgic-v3.c
> >>>>>>>>>>>index 9c0dd23..d101000 100644
> >>>>>>>>>>>--- a/virt/kvm/arm/vgic/vgic-v3.c
> >>>>>>>>>>>+++ b/virt/kvm/arm/vgic/vgic-v3.c
> >>>>>>>>>>>@@ -198,7 +198,7 @@ void vgic_v3_populate_lr(struct kvm_vcpu *vcpu,
> >>>>>>>>>>>struct vgic_irq *irq, int lr) if (vgic_irq_is_mapped_level(irq) &&
> >>>>>>>>>>>(val & ICH_LR_PENDING_BIT)) irq->line_level = false;
> >>>>>>>>>>>
> >>>>>>>>>>>-    if (irq->group)
> >>>>>>>>>>>+    if (model == KVM_DEV_TYPE_ARM_VGIC_V3)
> >>>>>>>>>>
> >>>>>>>>>>This is not the right fix, not only because it basically reverts the
> >>>>>>>>>>GICv3 part of 87322099052 (KVM: arm/arm64: vgic: Signal IRQs using
> >>>>>>>>>>their configured group).
> >>>>>>>>>>
> >>>>>>>>>>Can you try to work out why kvm_vgic_vcpu_init() is apparently called
> >>>>>>>>>>before dist->vgic_model is set, also what value it has?
> >>>>>>>>>>If I understand the code correctly, that shouldn't happen for a GICv3.
> >>>>>>>>>>
> >>>>>>>>>Even if the value of  group is correctly assigned in kvm_vgic_vcpu_init, the group is then written 0 through vgic_mmio_write_group.
> >>>>>>>>>   If the interrupt comes at this time, the interrupt injection fails.
> >>>>>>>>
> >>>>>>>>Does that mean that the guest is configuring its interrupts as Group0?
> >>>>>>>>That sounds wrong, Linux should configure all it's interrupts as
> >>>>>>>>non-secure group1.
> >>>>>>>
> >>>>>>>no, I think that uefi dose this, not linux.
> >>>>>>>1. kvm_vgic_vcpu_init
> >>>>>>>2. vgic_create
> >>>>>>>3. kvm_vgic_dist_init
> >>>>>>>4.vgic_mmio_write_group: uefi as guest, write group=0
> >>>>>>>5.vgic_mmio_write_group: linux as guest, write group=1
> >>>>>>
> >>>>>>Is this the same issue fixed by EDK2 commit:
> >>>>>>
> >>>>>>66127011a544b90e ("ArmPkg/ArmGicDxe ARM: fix encoding for GICv3 interrupt acknowledge")
> >>>>>>
> >>>>>>... where EDK2 would try to use IAR0 rather than IAR1?
> >>>>>>
> >>>>>>The commit messages notes this lead to a boot-time hang.
> >>>>>
> >>>>>I managed to trigger an issue with a really old EFI implementation that
> >>>>>doesn't configure its interrupts as Group1, and yet tries to ACK its
> >>>>>interrupts using the Group1 accessor. Guess what? It is not going to work.
> >>>>>
> >>>>>Commit c7fefb690661f2e38afcb8200bd318ecf38ab961 in the edk2 tree seems
> >>>>>to be the fix (I only assume it does, I haven't actually checked). A
> >>>>>recent build, as found in Debian Buster, works perfectly (tested with
> >>>>>both QEMU v2.12 and tip of tree).
> >>>>>
> >>>>>Now, I really don't get what you're saying about Linux not getting
> >>>>>interrupts. How do you get to booting Linux if EFI is not making any
> >>>>>forward progress? Are you trying them independently?
> >>>>>
> >>>>I start linux with bypassing uefi, the print info is the same.
> >>>>[507107.748908]  vgic_mmio_write_group:## intid/27 group=0
> >>>>[507107.752185]  vgic_mmio_write_group:## intid/27 group=0
> >>>>[507107.899566]  vgic_mmio_write_group:## intid/27 group=1
> >>>>[507107.907370]  vgic_mmio_write_group:## intid/27 group=1
> >>>>the command line is like this:
> >>>>/home/qemu-patch/linshi/qemu/aarch64-softmmu/qemu-system-aarch64  -machine virt-3.1,accel=kvm,usb=off,dump-guest-core=off,gic-version=3  -kernel /home/kernelboot/vmlinuz-4.16.0+ -initrd /home/kernelboot/initramfs-4.16.0+.img -append root=/dev/mapper/cla-root ro crashkernel=auto rd.lvm.lv=cla/root rd.lvm.lv=cla/swap.UTF-8  -drive file=/home/centos74-ph/boot.qcow2,format=qcow2,if=none,id=drive-scsi0-0-0-0 -device scsi-hd,bus=scsi0.0,channel=0,scsi-id=0,lun=0,drive=drive-scsi0-0-0-0,id=scsi0-0-0-0,bootindex=1  -vnc 0.0.0.0:0 -k en-us -device virtio-gpu-pci,id=video0,max_outputs=1,bus=pci.3,addr=0x0 -device pvpanic-mmio -msg timestamp=on
> >>>>
> >>>>This is strange. That's probably the Linux 4.16  kernel setting group to 0, and I'll continue to track in guest.
> >>>
> >>>Could you try the following patch:
> >>>
> >>>diff --git a/virt/kvm/arm/vgic/vgic-init.c b/virt/kvm/arm/vgic/vgic-init.c
> >>>index c0c0b88af1d5..6fa858c7a5a6 100644
> >>>--- a/virt/kvm/arm/vgic/vgic-init.c
> >>>+++ b/virt/kvm/arm/vgic/vgic-init.c
> >>>@@ -231,13 +231,6 @@ int kvm_vgic_vcpu_init(struct kvm_vcpu *vcpu)
> >>>  			irq->config = VGIC_CONFIG_LEVEL;
> >>>  		}
> >>>-		/*
> >>>-		 * GICv3 can only be created via the KVM_DEVICE_CREATE API and
> >>>-		 * so we always know the emulation type at this point as it's
> >>>-		 * either explicitly configured as GICv3, or explicitly
> >>>-		 * configured as GICv2, or not configured yet which also
> >>>-		 * implies GICv2.
> >>>-		 */
> >>>  		if (dist->vgic_model == KVM_DEV_TYPE_ARM_VGIC_V3)
> >>>  			irq->group = 1;
> >>>  		else
> >>>@@ -298,6 +291,16 @@ int vgic_init(struct kvm *kvm)
> >>>  	if (ret)
> >>>  		goto out;
> >>>+	/* Initialize groups on CPUs created before the VGIC type was known */
> >>>+	kvm_for_each_vcpu(i, vcpu, kvm) {
> >>>+		struct vgic_cpu *vgic_cpu = &vcpu->arch.vgic_cpu;
> >>>+
> >>>+		for (i = 0; i < VGIC_NR_PRIVATE_IRQS; i++) {
> >>>+			struct vgic_irq *irq = &vgic_cpu->private_irqs[i];
> >>>+			irq->group = 1;
> >>>+		}
> >>>+	}
> >>>+
> >>>  	if (vgic_has_its(kvm)) {
> >>>  		ret = vgic_v4_init(kvm);
> >>>  		if (ret)
> >>>
> >>>
> >>
> >>If the value of dist->vgic_model is not properly initialized at the time we
> >>call kvm_vgic_vcpu_init is call, won't we still overwrite the irq->group
> >>when we get there?
> >
> >I don't understand this question.  When we get where?
> 
> Sorry, I meant when we get to the irq->group initialization in
> kvm_vgic_vcpu_init.
> 
> >
> >>(I still haven't seen why we could consider
> >>dist->vgic_model is initialized at that point).
> >
> >Because there is no enforced ordering between creating VCPUs and
> >creating the VGIC.
> 
> Hmmm, I think that's what I am saying, so we shouldn't look at the value of
> vgic_dist->vgic_model since it could be uninitialized (or 0).
> 
> >
> >>
> >>Shouldn't we do the irq->group initialization somewhere in
> >>kvm_arch_vcpu_ioctl_vcpu_init? (with some vgic_* function to encapsulate it
> >>of course). At that point I believe we know that dist->vgic_model is
> >>initialized.
> >>
> >
> >See above.  AFAICT we don't have a single point at which we can do
> >everything because creation of the two components can be interleaved.
> >
> >We could hook into kvm_vcpu_first_run_init(), but then userspace can
> >observe uninitialized values if it looks at the GIC state prior to
> >running the VCPUs, which is also not great.
> >
> >In other words, I think the problem is that you can do:
> >
> >   create_vcpu(0);
> >   create_vgic(v3);
> >   create_vcpu(2);
> >
> >Now you'll have vcpu0 have its private IRQs set to group 0, and you'll
> >have vcpu1 have its private IRQs set to group 1 (prior to my patch).
> >
> >
> >Am I missing something?
> >
> 
> No, I just got confused between create_vgic and vgic_init. So the place
> looks fine. Sorry for the confusion.
> 
> The fact that we still check dist->vgic_model in kvm_vgic_vcpu_init (twice
> actually), however seems dodgy to me since it might not have been
> initialized.
> 
It might not, but it might also be.  In which case you want to
initialize the CPU to the right values.  So you have:

1. VCPUs created before the VGIC are initialized according to the model
   version when the VGIC is created.

2. VCPUs created after the VGIC is initialized are initialized according
   to the model as they are created.

The alternative is to have a sync-point after the two above, but I
haven't been able to find a good API-backwards way of doing that.


Thanks,

    Christoffer
