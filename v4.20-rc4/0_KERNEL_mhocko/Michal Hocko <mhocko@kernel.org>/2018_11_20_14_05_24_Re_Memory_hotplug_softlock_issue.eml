Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:39:44 -0000
Received: from icoremail.net (unknown [209.85.210.180])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn3zDpFPRbVSngAQ--.33902S3;
	Tue, 20 Nov 2018 22:06:34 +0800 (CST)
Received: from mail-pf1-f180.google.com (unknown [209.85.210.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3FUHoFPRbA4ReAA--.1686S3;
	Tue, 20 Nov 2018 22:06:32 +0800 (CST)
Received: by mail-pf1-f180.google.com with SMTP id 64so1042837pfr.9
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 06:06:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=vwh4qQA414NCkAUHO+DEvlO1yXzcLYLWqwXYWf905WI=;
        b=lqptUxhXMotcV0V1OguMpySJT7E7W0AgI80fS+T6HLVBitAjA8zvyqy555s4na+yCE
         4vNf2p5H25NkgLlC+wlW2WeMpR7FRB8njpONTlCNknixnQnrWT0D6DSrBATLkcssmhV5
         r78HWFI6aSu5Y1ZA9YRSow0HyJkOGeBHoF6ONAN4iz6X1UpFAg3Q/mV/SWT896NdjSO9
         yrR7DOPE6NeXfCJ2XnOgheg8STi0H5RCTq/8Cyoy6Q6/JfrX5lEM3xyNV3GTKWmDV/tn
         WdHr3FRdAAB6KENVKO6/R7TfNv3cyKLiwo6vFUnFqVpfVc0+oGJ/o+iSTZxKa2zjwSyS
         kFHQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
X-Gm-Message-State: AGRZ1gIDn4u8F6i4Evl/zHcWdQfs+ot7ow4Taa+en0dQaudkqfR8ZUl0
	8S87aBYe3TYk2O1j7PF5VJoaKKa0XC+01UKtsw6JfB149WBeL+Q=
X-Received: by 2002:a62:9712:: with SMTP id n18-v6mr2295760pfe.69.1542722791896;
        Tue, 20 Nov 2018 06:06:31 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp641059pju;
        Tue, 20 Nov 2018 06:06:31 -0800 (PST)
X-Google-Smtp-Source: AFSGD/UU/Jd+aF595pU3bvGSdWZ/w8QyOCeYz6ZRZSILOBYnSM1AN1eu3JqUHRFzTLy5UQY3YGu+
X-Received: by 2002:a17:902:6a3:: with SMTP id 32-v6mr2389926plh.337.1542722790970;
        Tue, 20 Nov 2018 06:06:30 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542722790; cv=none;
        d=google.com; s=arc-20160816;
        b=d0IylCv1onDUHHp7tnXYNVqnJDQNolgD5/HxHpHkB6+JuM00IlvJY2nzpxL6jlO7fC
         9BzGu0ryac7oh4eGtzzSpPCK6wjKYEO/Kvba57kMZ/Ibocmzgvw19nbn+wrWkkP9NkAZ
         +OFpxkg2zutjh/YsWJ+wyV9B4JEOrybLRbdnpGLWI8F6GHgBqbx8cu5KP5dwuBX1XpC8
         5Fhgn4WZ3GE48uBixeM7SoXrbzSQjGVFtloNhMMSN4Bj0+aSdg6PF9Fssf/fG2G7ClYC
         bcDbcMNqcb6rBaWwzZChIJdvpIRqRLAYhzmUWAUD+7KqgAC1Sqgt8qP9KdO8fkYbsELX
         WHfg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=vwh4qQA414NCkAUHO+DEvlO1yXzcLYLWqwXYWf905WI=;
        b=z+d67u1znlZZieg7vIto+5BwmuYa9FVAFzRHpeGixL9jKNCuJQVtW2KvVbmZtoXEM3
         DOGNrjcenkSzRYohDdl4O/8q+X8CFnqNT+hPUpFNWUMX4Dfv20cCdL4i+FX1qnC7vaq+
         e8CqF5NxJwgnyCoQmOpSAjR+mMjB0KX5jQqjds+HNWgSqYr3kOyAdbOQ28Sx0kDQihY/
         Y8oMjyCjC2omSg5taA/iM9HGPcWcdyrEfDRzz02UIVreaztwjLix3vjhVZJVFeXgTriZ
         XQv11exSxH1akGQU1ShTaKmGL5bL+RsXLzLZG0VGK+VPo/qtmUwvITjJxjkRHQY6bw67
         VQLA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 2si43549074pgz.395.2018.11.20.06.06.15;
        Tue, 20 Nov 2018 06:06:30 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729134AbeKUAep (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 19:34:45 -0500
Received: from mx2.suse.de ([195.135.220.15]:57434 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725846AbeKUAep (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 19:34:45 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 12C22ABE7;
        Tue, 20 Nov 2018 14:05:25 +0000 (UTC)
Date: Tue, 20 Nov 2018 15:05:24 +0100
From: Michal Hocko <mhocko@kernel.org>
To: Baoquan He <bhe@redhat.com>
Cc: Hugh Dickins <hughd@google.com>, Vlastimil Babka <vbabka@suse.cz>,
        pifang@redhat.com, David Hildenbrand <david@redhat.com>,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        akpm@linux-foundation.org, aarcange@redhat.com,
        Mel Gorman <mgorman@suse.de>
Subject: Re: Memory hotplug softlock issue
Message-ID: <20181120140524.GI22247@dhcp22.suse.cz>
References: <20181119124033.GJ22247@dhcp22.suse.cz>
 <20181119125121.GK22247@dhcp22.suse.cz>
 <20181119141016.GO22247@dhcp22.suse.cz>
 <20181119173312.GV22247@dhcp22.suse.cz>
 <alpine.LSU.2.11.1811191215290.15640@eggly.anvils>
 <20181119205907.GW22247@dhcp22.suse.cz>
 <20181120015644.GA5727@MiWiFi-R3L-srv>
 <alpine.LSU.2.11.1811192127130.2848@eggly.anvils>
 <3f1a82a8-f2aa-ac5e-e6a8-057256162321@suse.cz>
 <20181120135803.GA3369@MiWiFi-R3L-srv>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181120135803.GA3369@MiWiFi-R3L-srv>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3FUHoFPRbA4ReAA--.1686S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJF1xuryrJF4fXrWrCFy3urg_yoWrXw4xpF
	WrG3WDKF4kJw1SgwsFqw4DZ3WYq393trW3Zry5GrnrZas0vF9akryIkw4DuF93urs3GF40
	yF4jqasxZF1YyaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9Kb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW5XwCY0x0Ix7I2Y4AK
	64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxV
	W8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE
	3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I
	0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWU
	GVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcI
	k0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUByEEDUUUU

On Tue 20-11-18 21:58:03, Baoquan He wrote:
> Hi,
> 
> On 11/20/18 at 02:38pm, Vlastimil Babka wrote:
> > On 11/20/18 6:44 AM, Hugh Dickins wrote:
> > > [PATCH] mm: put_and_wait_on_page_locked() while page is migrated
> > > 
> > > We have all assumed that it is essential to hold a page reference while
> > > waiting on a page lock: partly to guarantee that there is still a struct
> > > page when MEMORY_HOTREMOVE is configured, but also to protect against
> > > reuse of the struct page going to someone who then holds the page locked
> > > indefinitely, when the waiter can reasonably expect timely unlocking.
> > > 
> > > But in fact, so long as wait_on_page_bit_common() does the put_page(),
> > > and is careful not to rely on struct page contents thereafter, there is
> > > no need to hold a reference to the page while waiting on it.  That does
> > 
> > So there's still a moment where refcount is elevated, but hopefully
> > short enough, right? Let's see if it survives Baoquan's stress testing.
> 
> Yes, I applied Hugh's patch 8 hours ago, then our QE Ping operated on
> that machine, after many times of hot removing/adding, the endless
> looping during mirgrating is not seen any more. The test result for
> Hugh's patch is positive. I even suggested Ping increasing the memory
> pressure to "stress -m 250", it still succeeded to offline and remove.
> 
> So I think this patch works to solve the issue. Thanks a lot for your
> help, all of you. 

This is a great news! Thanks for your swift feedback. I will go and try
to review Hugh's patch soon.

> High, will you post a formal patch in a separate thread?
> 
> Meanwhile we found sometime onlining page may not add back all memory
> blocks on one memory board, then hot removing/adding them will cause
> kernel panic. I will investigate further and collect information, see if
> it's a kernel issue or udev issue.

It would be great to get a report in a new email thread.
> 
> Thanks
> Baoquan
> 
> > 
> > > mean that this case cannot go back through the loop: but that's fine for
> > > the page migration case, and even if used more widely, is limited by the
> > > "Stop walking if it's locked" optimization in wake_page_function().
> > > 
> > > Add interface put_and_wait_on_page_locked() to do this, using negative
> > > value of the lock arg to wait_on_page_bit_common() to implement it.
> > > No interruptible or killable variant needed yet, but they might follow:
> > > I have a vague notion that reporting -EINTR should take precedence over
> > > return from wait_on_page_bit_common() without knowing the page state,
> > > so arrange it accordingly - but that may be nothing but pedantic.
> > > 
> > > shrink_page_list()'s __ClearPageLocked(): that was a surprise! this
> > > survived a lot of testing before that showed up.  It does raise the
> > > question: should is_page_cache_freeable() and __remove_mapping() now
> > > treat a PG_waiters page as if an extra reference were held?  Perhaps,
> > > but I don't think it matters much, since shrink_page_list() already
> > > had to win its trylock_page(), so waiters are not very common there: I
> > > noticed no difference when trying the bigger change, and it's surely not
> > > needed while put_and_wait_on_page_locked() is only for page migration.
> > > 
> > > Signed-off-by: Hugh Dickins <hughd@google.com>
> > > ---
> > 
> > ...
> > 
> > > @@ -1100,6 +1111,17 @@ static inline int wait_on_page_bit_common(wait_queue_head_t *q,
> > >  			ret = -EINTR;
> > >  			break;
> > >  		}
> > > +
> > > +		if (lock < 0) {
> > > +			/*
> > > +			 * We can no longer safely access page->flags:
> > 
> > Hmm...
> > 
> > > +			 * even if CONFIG_MEMORY_HOTREMOVE is not enabled,
> > > +			 * there is a risk of waiting forever on a page reused
> > > +			 * for something that keeps it locked indefinitely.
> > > +			 * But best check for -EINTR above before breaking.
> > > +			 */
> > > +			break;
> > > +		}
> > >  	}
> > >  
> > >  	finish_wait(q, wait);
> > 
> > ... the code continues by:
> > 
> >         if (thrashing) {
> >                 if (!PageSwapBacked(page))
> > 
> > So maybe we should not set 'thrashing' true when lock < 0?
> > 
> > Thanks!
> > Vlastimil

-- 
Michal Hocko
SUSE Labs
