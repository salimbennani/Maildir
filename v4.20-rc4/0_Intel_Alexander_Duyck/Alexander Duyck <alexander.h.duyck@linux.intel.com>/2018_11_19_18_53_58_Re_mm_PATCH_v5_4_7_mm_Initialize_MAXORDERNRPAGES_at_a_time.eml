Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:34:45 -0000
Received: from icoremail.net (unknown [209.85.215.176])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn37jeBvNbRNbZAQ--.55575S3;
	Tue, 20 Nov 2018 02:54:23 +0800 (CST)
Received: from mail-pg1-f176.google.com (unknown [209.85.215.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB38EzbBvNbV8dZAA--.3328S3;
	Tue, 20 Nov 2018 02:54:19 +0800 (CST)
Received: by mail-pg1-f176.google.com with SMTP id n2so7048076pgm.3
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 10:54:19 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :message-id:subject:from:to:cc:date:in-reply-to:references
         :mime-version:content-transfer-encoding:sender:precedence:list-id;
        bh=QTS7RLr/HyAixDt2q0QhnA3s8h6UL93ygbnFLX6FJXk=;
        b=g0khVr/r8pvEzjv1T5gjrG8BOWB/YJ755+JM1l3Mfihda5WrF9v91DxGr1xvCn3Wyn
         FALI77Pj1cSEab57O7b/MAhp8nqZA5Ykx9Ai3tZXROd3mnBdTS4Koek5xh3M1327hSGA
         OgQTMfIdaasi3XSg6+xFZvQo/k56GdyNNRNZUYWeZf2AiKYdzHyDVZ9M2R8icPH6AISl
         SoCzEcKDx2PHHxQWItZG1mguDtlysYagkBiMctZrFnCeiAT1sQOCcSDWENyBQTCgFzwF
         9v0wcaaxxKFInBMh0WIDJEQiujGhU26/8G7rLUuuod4Lhzi0YrTlbVfRynzosV19kXhj
         ocMA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gJKYwMSIeerpEcpsTVOI6fJLHdzInQISeCZ2l9Vd1Do2ajWLeWS
	BRJde8NdxspAPBskPSt7lAVmdb4NDHpeDSmPzg72KBI8rpuGmwY=
X-Received: by 2002:a63:2315:: with SMTP id j21mr21319441pgj.297.1542653658808;
        Mon, 19 Nov 2018 10:54:18 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3046125pju;
        Mon, 19 Nov 2018 10:54:17 -0800 (PST)
X-Google-Smtp-Source: AJdET5dr1JkX+5BH2IXpRm/YsKRaIbWxXE6aZHtOCGaxclmYB7rLFE3KNoMKugYQyRAb+4Hr81Yq
X-Received: by 2002:a63:a401:: with SMTP id c1mr21237670pgf.403.1542653657881;
        Mon, 19 Nov 2018 10:54:17 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542653657; cv=none;
        d=google.com; s=arc-20160816;
        b=iPQJB/4RJt7POWTK7qZi2XrWRFbuFXy+cUoEQKJ7a6/xhkB+e+8FTX6eAsk1SlRDf5
         QZVsxSenTQmQyxMh4CA6rsr+6ZkBNa2IGfYUzaaO9DFHZJGfUkTuY5TqQ8WyHSteOvC1
         KTmuEkvc4jpu/CHkk0V6Ymb3WXPOLiKSKzBcptohiH8+WtALv3PR4rb75QyoIZHoCcFu
         dsJ/93uvmcAsYsz5gEJ//hJbeMJoj8rkqaGW+cZKqlM7qyphKKhCPv2PLCGVjC7VErb1
         OPSVRvd5y2hTKPLejNbIOehsQ23nn845pqrRsY0N1IZ3PIdIpQUkeaPxM4Cdmbqu9wv4
         zNxw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:date:cc:to:from:subject:message-id;
        bh=QTS7RLr/HyAixDt2q0QhnA3s8h6UL93ygbnFLX6FJXk=;
        b=PK2AtutV0ryr2acCZglSAhvKCrjnH1wZdBbUk3IoROftij1NObxwtefguk6lUELpIg
         baKkXs3Ld2BK19+gZK9tdUEvYCbjc5IFkC71IBMwC9YCddyXV0imo2KyPNhZRLogtla3
         Q5pOoWbzFzptqqkKqhYMFvaK4j6Jf3PboAl1yj4LwGpeqLbnRMY6cM/fjdJzsrBN5SQR
         0BI8g9n2DLyJ0WstYUd+mXk1Wesp6cTxgZ47llfnAuYjDOCSsbuWUrbi3q+LGvwy6je/
         6hFqeIBbV0+RZr7fgi0zGnUfRZperhJvSOeZ3+egI4oQquSQhpGqtT9QQixNVOZzTFJD
         7nmA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e6si32619692pgd.428.2018.11.19.10.54.02;
        Mon, 19 Nov 2018 10:54:17 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730622AbeKTFSv (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 00:18:51 -0500
Received: from mga06.intel.com ([134.134.136.31]:32124 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726425AbeKTFSu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 00:18:50 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
  by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Nov 2018 10:53:58 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,253,1539673200"; 
   d="scan'208";a="93283070"
Received: from ahduyck-desk1.jf.intel.com ([10.7.198.76])
  by orsmga008.jf.intel.com with ESMTP; 19 Nov 2018 10:53:58 -0800
Message-ID: <5815470723f5e97bc26bad42da219598e2775837.camel@linux.intel.com>
Subject: Re: [mm PATCH v5 4/7] mm: Initialize MAX_ORDER_NR_PAGES at a time
 instead of doing larger sections
From: Alexander Duyck <alexander.h.duyck@linux.intel.com>
To: Pavel Tatashin <pasha.tatashin@soleen.com>
Cc: akpm@linux-foundation.org, linux-mm@kvack.org,
        sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-nvdimm@lists.01.org, davem@davemloft.net,
        pavel.tatashin@microsoft.com, mhocko@suse.com, mingo@kernel.org,
        kirill.shutemov@linux.intel.com, dan.j.williams@intel.com,
        dave.jiang@intel.com, rppt@linux.vnet.ibm.com, willy@infradead.org,
        vbabka@suse.cz, khalid.aziz@oracle.com, ldufour@linux.vnet.ibm.com,
        mgorman@techsingularity.net, yi.z.zhang@linux.intel.com
Date: Mon, 19 Nov 2018 10:53:58 -0800
In-Reply-To: <20181110010238.jnabddtfpr5kjhdz@xakep.localdomain>
References: <154145268025.30046.11742652345962594283.stgit@ahduyck-desk1.jf.intel.com>
         <154145278583.30046.4918131143612801028.stgit@ahduyck-desk1.jf.intel.com>
         <20181110010238.jnabddtfpr5kjhdz@xakep.localdomain>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.28.5 (3.28.5-1.fc28) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB38EzbBvNbV8dZAA--.3328S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF48urW5Ww17KrWfXw4UXFb_yoW5ZF43pa
	y7W3ZrAr4kJa909rZrZw4DZa4xtrZ7Za1UJrW3Jw1fA3Z5CrySvr1xtF43CFyUCrWrKa1f
	tF40vwnIkw1DZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1j6r1xMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAI
	cVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUqBHq
	UUUUU

On Fri, 2018-11-09 at 20:02 -0500, Pavel Tatashin wrote:
> On 18-11-05 13:19:45, Alexander Duyck wrote:
> >  	}
> > -	first_init_pfn = max(zone->zone_start_pfn, first_init_pfn);
> > +
> > +	/* If the zone is empty somebody else may have cleared out the zone */
> > +	if (!deferred_init_mem_pfn_range_in_zone(&i, zone, &spfn, &epfn,
> > +						 first_init_pfn)) {
> > +		pgdat_resize_unlock(pgdat, &flags);
> > +		pgdat_init_report_one_done();
> > +		return 0;
> 
> It would make more sense to add goto to the end of this function and report
> that in Node X had 0 pages initialized. Otherwise, it will be confusing
> why some nodes are not initialized during boot. It is simply because
> they do not have deferred pages left to be initialized.

This part makes sense and will be implemented for v6.

> 
> > +	}
> >  
> >  	/*
> > -	 * Initialize and free pages. We do it in two loops: first we initialize
> > -	 * struct page, than free to buddy allocator, because while we are
> > -	 * freeing pages we can access pages that are ahead (computing buddy
> > -	 * page in __free_one_page()).
> > +	 * Initialize and free pages in MAX_ORDER sized increments so
> > +	 * that we can avoid introducing any issues with the buddy
> > +	 * allocator.
> >  	 */
> > -	for_each_free_mem_pfn_range_in_zone(i, zone, &spfn, &epfn) {
> > -		spfn = max_t(unsigned long, first_init_pfn, spfn);
> > -		nr_pages += deferred_init_pages(zone, spfn, epfn);
> > -	}
> > -	for_each_free_mem_pfn_range_in_zone(i, zone, &spfn, &epfn) {
> > -		spfn = max_t(unsigned long, first_init_pfn, spfn);
> > -		deferred_free_pages(spfn, epfn);
> > -	}
> > +	while (spfn < epfn)
> > +		nr_pages += deferred_init_maxorder(&i, zone, &spfn, &epfn);
> > +
> >  	pgdat_resize_unlock(pgdat, &flags);
> >  
> >  	/* Sanity check that the next zone really is unpopulated */
> > @@ -1602,9 +1689,9 @@ deferred_grow_zone(struct zone *zone, unsigned int order)
> >  {
> 
> How about order = max(order, max_order)?

I'm not sure what you are getting at here? The "order" variable passed
is only really used to get the nr_pages_needed, and that value is
rounded up to PAGES_PER_SECTION which should always be equal to or
greater than MAX_ORDER pages.

If order is greater than MAX_ORDER we would want to process some number
of MAX_ORDER sized blocks until we get to the size specified by order.
If we process it all as one large block it will perform worse as we
risk pushing page structs out of the cache.

> >  	unsigned long nr_pages_needed = ALIGN(1 << order, PAGES_PER_SECTION);
> 
> 
> > -	first_init_pfn = max(zone->zone_start_pfn, first_deferred_pfn);
> > -
> > -	if (first_init_pfn >= pgdat_end_pfn(pgdat)) {
> > +	/* If the zone is empty somebody else may have cleared out the zone */
> > +	if (!deferred_init_mem_pfn_range_in_zone(&i, zone, &spfn, &epfn,
> > +						 first_deferred_pfn)) {
> >  		pgdat_resize_unlock(pgdat, &flags);
> > -		return false;
> > +		return true;
> 
> I am OK to change to true here, please also set
> pgdat->first_deferred_pfn to ULONG_MAX to indicate that there are no
> more deferred pages in this node.

Done for v6 of the patch set.

> 
> Overall, I like this patch, makes things a lot easier, assuming the
> above is addressed:
> 
> Reviewed-by: Pavel Tatashin <pasha.tatashin@soleen.com>
> 
> Thank you,
> Pasha
