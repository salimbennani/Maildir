Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:34 -0000
Received: from icoremail.net (unknown [209.85.210.173])
	by mail-app2 (Coremail) with SMTP id by_KCgCHv+Q66fJb2nq6AQ--.54944S3;
	Tue, 20 Nov 2018 00:47:54 +0800 (CST)
Received: from mail-pf1-f173.google.com (unknown [209.85.210.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTUk56fJbPGZZAA--.2612S3;
	Tue, 20 Nov 2018 00:47:53 +0800 (CST)
Received: by mail-pf1-f173.google.com with SMTP id w73so5793372pfk.10
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:47:53 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=Ei7akuJABMBxhjnGibvI/PvjXU0A5YElESAf0Jg/nX0=;
        b=JgDy4ee6Y389fd44RytZzAvs5vlfgRX0FWLMjMS8pv7bKkCut2zkUe2ya1BSIh+eoe
         HEX/8/JGUVMDEEDX6w5SR9q5gcYcjRS9SCdX0RmTTApJow36uRvVw0HtoRc3po0w1/5G
         KRRm1LiDwBghJMb35XlOUAEKuu/QFfReSFg3i9npm08BemyjIixzIVZoSV0+05bsPbXh
         2lpI0VwYKInWj791ZVIHJj3IiFTCkALb5a29cHdbKJ0Hgmzfo4GkmFu0DdbE4kdX3U7C
         kgtfy9P43t8ULf2eqO3ocVHHrEiypoii6Hll4uhGuUpdXptIKjePd5A49n8GQziiSog6
         Ei2w==
X-Gm-Message-State: AGRZ1gJGW8FUavmrgOgP9UiMjGScDUMX86TQxruL8YekMZWjdeW86Qk1
	dI+WsmdzRTUqkAkJpVAfQBDVWEW0AFmzIB7PZUdeIIX6QguDhec=
X-Received: by 2002:a63:9402:: with SMTP id m2mr20066060pge.93.1542646073149;
        Mon, 19 Nov 2018 08:47:53 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2897250pju;
        Mon, 19 Nov 2018 08:47:52 -0800 (PST)
X-Google-Smtp-Source: AJdET5fASa8+XjkZXAz7GL6QkvXphUEsTFzowtPwf5mRsEzbu/ocJp0FZh3CWw3PypAnkm7jMP6f
X-Received: by 2002:a63:5d55:: with SMTP id o21mr20321939pgm.92.1542646072318;
        Mon, 19 Nov 2018 08:47:52 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646072; cv=none;
        d=google.com; s=arc-20160816;
        b=aHHziLrcRMtBX0PLQ+NXY7Rqg/RR2KwnbdPgtGSZ/J+JaJc9TwFtjGvhAK9p9ymdQF
         oVNtTUAAH+/u1kETgN4SKzVWSWFqXYXdU0PpkkoFebk9I65nJjHId8Wlg2xTclI6Gkh4
         CoO2OQHRfol5hevZH1C+J3y3uLrSZzSS4LwkGIzki9Lh0uxuv8UxInXMvZB/XEkgE01J
         QvqKewWaHDK71UlycO5Mk/TA8oO/9OTRD1y5YXhZfdbhGYOnp0nS2bCGsvvgv6trk2NA
         omawGortNXY0gIc8SbqMNa3/CnTjIappoVFPB4Tu+yMiiUCJmJn1KlX7BdCgno+vZkGx
         nnTQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=Ei7akuJABMBxhjnGibvI/PvjXU0A5YElESAf0Jg/nX0=;
        b=BSLSFTGEzZs1ILZxQK4GkpAi9h297PjG2SRCzlP9svkCN2xd5Ilg/ijuwWir3UdmSN
         9fVnAOGDjX6g2fHZBVbg3jT4DJrLOOAMMCkG9P4/qZvOf2jwAtNvWPDiAxsNz/8gfN0D
         NLS7h2t961xohLZ3eGmXCUv1FQmMwOTKPvuzLt8+2ZNeaJVUdmXmgBL/6/AnSVvNgF0G
         XTCa1na4LN8Zyo8Mbfmyy/M+jyi2M0pA/cZ082Bya9vBAsQuoRNPVpJoWG3i5Vh/hhCp
         lDuhjiKz1772EWeVBqov2k4kezuE8jAm1wYaJFuKJf/RE4kAxY7JvDSgJA3uPMusMt97
         HEnw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=vW86Yx1a;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id c10si41033847pgj.416.2018.11.19.08.47.38;
        Mon, 19 Nov 2018 08:47:52 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389124AbeKTDLl (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:11:41 -0500
Received: from mail.kernel.org ([198.145.29.99]:47666 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2388196AbeKTDLl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:11:41 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id BA2712145D;
        Mon, 19 Nov 2018 16:47:28 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646049;
        bh=Fh8SQSfRPT2SQNlcmYT2LCA1YqKA3ESVt+IW6vVjG+Q=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=vW86Yx1ai7UUyXZv5GO1MJpmb1G/AEjtmtHbn9CgaBRYUAUyAknubv+uiOgMgxaNF
         ljVqFilyeiQpOZVxnbmthNt4nHH6M1rKBu9ESzHpFoNomgu+fZGkr6WpaxrC+1H0F/
         FUkI2BXNizizqsLAVe2e04sfgI2Ng3XXeTydxGKQ=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Phil Elwell <phil@raspberrypi.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.14 017/124] sc16is7xx: Fix for multi-channel stall
Date: Mon, 19 Nov 2018 17:27:51 +0100
Message-Id: <20181119162616.519779156@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162612.951907286@linuxfoundation.org>
References: <20181119162612.951907286@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTUk56fJbPGZZAA--.2612S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrW3Gr17Xr1ruFyDKrW7Arb_yoWrtFW3pF
	W3Ga4q9r4kJF4UuwnrJa10kF90kwn5JrW5CryktwnYywn0qr1FqrW3Ka4FvrW5CrykJ348
	Zr4Y9w18Ga9rZrJanT9S1TB71UUUUUDqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1q6rW5McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWx
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20x
	vEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02
	F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw
	1lIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZF
	pf9x07bJF4iUUUUU=

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Phil Elwell <phil@raspberrypi.org>

[ Upstream commit 8344498721059754e09d30fe255a12dab8fb03ef ]

The SC16IS752 is a dual-channel device. The two channels are largely
independent, but the IRQ signals are wired together as an open-drain,
active low signal which will be driven low while either of the
channels requires attention, which can be for significant periods of
time until operations complete and the interrupt can be acknowledged.
In that respect it is should be treated as a true level-sensitive IRQ.

The kernel, however, needs to be able to exit interrupt context in
order to use I2C or SPI to access the device registers (which may
involve sleeping).  Therefore the interrupt needs to be masked out or
paused in some way.

The usual way to manage sleeping from within an interrupt handler
is to use a threaded interrupt handler - a regular interrupt routine
does the minimum amount of work needed to triage the interrupt before
waking the interrupt service thread. If the threaded IRQ is marked as
IRQF_ONESHOT the kernel will automatically mask out the interrupt
until the thread runs to completion. The sc16is7xx driver used to
use a threaded IRQ, but a patch switched to using a kthread_worker
in order to set realtime priorities on the handler thread and for
other optimisations. The end result is non-threaded IRQ that
schedules some work then returns IRQ_HANDLED, making the kernel
think that all IRQ processing has completed.

The work-around to prevent a constant stream of interrupts is to
mark the interrupt as edge-sensitive rather than level-sensitive,
but interpreting an active-low source as a falling-edge source
requires care to prevent a total cessation of interrupts. Whereas
an edge-triggering source will generate a new edge for every interrupt
condition a level-triggering source will keep the signal at the
interrupting level until it no longer requires attention; in other
words, the host won't see another edge until all interrupt conditions
are cleared. It is therefore vital that the interrupt handler does not
exit with an outstanding interrupt condition, otherwise the kernel
will not receive another interrupt unless some other operation causes
the interrupt state on the device to be cleared.

The existing sc16is7xx driver has a very simple interrupt "thread"
(kthread_work job) that processes interrupts on each channel in turn
until there are no more. If both channels are active and the first
channel starts interrupting while the handler for the second channel
is running then it will not be detected and an IRQ stall ensues. This
could be handled easily if there was a shared IRQ status register, or
a convenient way to determine if the IRQ had been deasserted for any
length of time, but both appear to be lacking.

Avoid this problem (or at least make it much less likely to happen)
by reducing the granularity of per-channel interrupt processing
to one condition per iteration, only exiting the overall loop when
both channels are no longer interrupting.

Signed-off-by: Phil Elwell <phil@raspberrypi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/sc16is7xx.c |   19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -662,7 +662,7 @@ static void sc16is7xx_handle_tx(struct u
 		uart_write_wakeup(port);
 }
 
-static void sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
+static bool sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
 {
 	struct uart_port *port = &s->p[portno].port;
 
@@ -671,7 +671,7 @@ static void sc16is7xx_port_irq(struct sc
 
 		iir = sc16is7xx_port_read(port, SC16IS7XX_IIR_REG);
 		if (iir & SC16IS7XX_IIR_NO_INT_BIT)
-			break;
+			return false;
 
 		iir &= SC16IS7XX_IIR_ID_MASK;
 
@@ -693,16 +693,23 @@ static void sc16is7xx_port_irq(struct sc
 					    port->line, iir);
 			break;
 		}
-	} while (1);
+	} while (0);
+	return true;
 }
 
 static void sc16is7xx_ist(struct kthread_work *ws)
 {
 	struct sc16is7xx_port *s = to_sc16is7xx_port(ws, irq_work);
-	int i;
 
-	for (i = 0; i < s->devtype->nr_uart; ++i)
-		sc16is7xx_port_irq(s, i);
+	while (1) {
+		bool keep_polling = false;
+		int i;
+
+		for (i = 0; i < s->devtype->nr_uart; ++i)
+			keep_polling |= sc16is7xx_port_irq(s, i);
+		if (!keep_polling)
+			break;
+	}
 }
 
 static irqreturn_t sc16is7xx_irq(int irq, void *dev_id)

