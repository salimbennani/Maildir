Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:34:27 -0000
Received: from icoremail.net (unknown [209.85.215.179])
	by mail-app2 (Coremail) with SMTP id by_KCgA3cI56+fJbCNu6AQ--.58903S3;
	Tue, 20 Nov 2018 01:57:15 +0800 (CST)
Received: from mail-pg1-f179.google.com (unknown [209.85.215.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnyER3+fJbCZpZAA--.3899S3;
	Tue, 20 Nov 2018 01:57:11 +0800 (CST)
Received: by mail-pg1-f179.google.com with SMTP id t13so5499248pgr.11
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 09:57:11 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=7wMMihDKYEhBTjkFhRRUU4CqPlEXitxYKqyn462crP4=;
        b=UDHlhzdDs0ypXppbVpV86202bsOPqAb7e6Xmxkvadb56P37Uk2V9fohRy2zc6+oMW0
         LwzLLuZgP1aCDyejOGmZQnb1/1blz3FnYcLQo2iJ+AgU8m2+3oLFl2GmRDPigNLiDumK
         ujnW13/5FvjwPEKX9ssdUeR/EguKrtXixVITagnCZ8rvazS7r0GH2WLzBpkGl4C10xzT
         P4W28VSb+UGjTQiCie40ixNy/18hKIPsRMHDky+unIemiLzuERZkJoNH50ib1xoi6pdI
         ya/1aucBSYFAhF0vKxp+Gafbp/sSgWLi49BmEwKKct0pbRH2+z6SeBXRsO72qHZVk6G3
         VOJw==
X-Gm-Message-State: AGRZ1gLphKYMPlOUSMS3gLRwGu/SjDVOTDxB+6Ui2eWcjtDuIQ7PzOa0
	gn17xrf3XX13OIRgN04PO0c95mI0ZVd+JYoZ4OsIYcXfH7f85wI=
X-Received: by 2002:a63:4044:: with SMTP id n65mr20341470pga.90.1542650231215;
        Mon, 19 Nov 2018 09:57:11 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2981052pju;
        Mon, 19 Nov 2018 09:57:10 -0800 (PST)
X-Google-Smtp-Source: AJdET5fY0wxNUOckjpNvS4DGZCnnUhXkqpr3SJbAUZqlsJP2YPy51PbsDuuP3HVQdJ34fMUw8DRB
X-Received: by 2002:a63:6483:: with SMTP id y125mr20643835pgb.91.1542650230293;
        Mon, 19 Nov 2018 09:57:10 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542650230; cv=none;
        d=google.com; s=arc-20160816;
        b=ebB6VBdjGsXtEa3yxzGitaHYvm1nESaqOwt5eA59P5lnQD3iaWWW4S25m5G9R++F5i
         jqdqb/pc010FM7ZZDffJU/2JtcJtQEZaWPSclUoAJAOhvvGb4aEhhEQLXrYQPRX+Ip1K
         dvJa2kvb8k+DuWcLzZShy5udBS3VDy3s8xgHXqmS+QCVf8cAT6bUuDFX8Q/pYy44S/0Q
         hjlSCnBdiWgn3Ht5jSuf0kj9E5RbjEUcc2zH+qHCA1wdyO7OXF0VLvATfNDUsaVO06Yn
         zwDE3/LZ7Kfe3F/5oo18PuzGMHPBtOaiBuc02DkuF5aAIbaJFRYoiar2oDE5NaCbA8V5
         3fxg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=7wMMihDKYEhBTjkFhRRUU4CqPlEXitxYKqyn462crP4=;
        b=k1RYJ3mIQgvXZdEmTy7HnjdyeHxSidFYCSkcxALzBm+POsPBc7Zn1MMZBGRo434TL/
         JYOX55b5SW3rRg26ZaaLBMNFJF8nKnE1qA34HrPF/tRUY4XjcCKmt2xtjULtnAaMpRDJ
         JWXxeP5IK2x7MlWM5FDRkpK/IKEB3epDfSWAeIFYtB7GRjDyo9waRTsfJEwsoOeySp8Z
         KcKAfosCA99KQ4qDAlszN+EQAWJvMpSUc4gZe5lE6nO3hnUQCTkTIX8jBiKS9Hj5KeIB
         X3sCUgSeFW+uqXDsdFc7/NusRz9Lfn/5fcPWxg2p6CmyKfWE4Ikh5DjHcpyqIIMHXlKE
         4opw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="Ta5ZL/W/";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id v5si38128331pgg.1.2018.11.19.09.56.56;
        Mon, 19 Nov 2018 09:57:10 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732661AbeKTDDS (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:03:18 -0500
Received: from mail.kernel.org ([198.145.29.99]:35838 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731712AbeKTDDR (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:03:17 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id C9E79208E4;
        Mon, 19 Nov 2018 16:39:07 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542645548;
        bh=Y+1pVrf6Z5K1cS6XMUOjM3hGRXZYSvJgeHB+AMZiYq4=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=Ta5ZL/W/LjM4w4Xbi8HrG1xkHn8Eq8Exmqxr9LmfCm0Tq4erPoccSysp5gK9BYeyH
         VK72paJK+RWVz1tzaqXUFnlagTNDYzDuEsja6uy9xL0tdaX4R+EpqWue4TC9koHb9S
         a8KiEwqWTtlZ0z/eBQNDfsdq3qPbG7emIoFoJHuY=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Lyude Paul <lyude@redhat.com>,
        Rodrigo Vivi <rodrigo.vivi@intel.com>,
        =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= 
        <ville.syrjala@linux.intel.com>,
        Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Subject: [PATCH 4.19 204/205] drm/i915: Fix hpd handling for pins with two encoders
Date: Mon, 19 Nov 2018 17:28:31 +0100
Message-Id: <20181119162642.910423580@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162616.586062722@linuxfoundation.org>
References: <20181119162616.586062722@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnyER3+fJbCZpZAA--.3899S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XF4ruF4xKr4kXryUJFWDJwb_yoW7Gw17pF
	45Gw1ftrZ5ZF1xZ3sava4xJr1Fq3WkAFWagwn7tw10v3y5ZryYqrWIkF9rKFykXFnxWF9x
	XrZ0v395WF18CFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW8MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW7JVWDJwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IUO96
	pPUUUUU==

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Ville Syrj채l채 <ville.syrjala@linux.intel.com>

commit 44a7276b30c3c15f2b7790a5729640597fb6a1df upstream.

In my haste to remove irq_port[] I accidentally changed the
way we deal with hpd pins that are shared by multiple encoders
(DP and HDMI for pre-DDI platforms). Previously we would only
handle such pins via ->hpd_pulse(), but now we queue up the
hotplug work for the HDMI encoder directly. Worse yet, we now
count each hpd twice and this increment the hpd storm count
twice as fast. This can lead to spurious storms being detected.

Go back to the old way of doing things, ie. delegate to
->hpd_pulse() for any pin which has an encoder with that hook
implemented. I don't really like the idea of adding irq_port[]
back so let's loop through the encoders first to check if we
have an encoder with ->hpd_pulse() for the pin, and then go
through all the pins and decided on the correct course of action
based on the earlier findings.

I have occasionally toyed with the idea of unifying the pre-DDI
HDMI and DP encoders into a single encoder as well. Besides the
hotplug processing it would have the other benefit of preventing
userspace from trying to enable both encoders at the same time.
That is simply illegal as they share the same clock/data pins.
We have some testcases that will attempt that and thus fail on
many older machines. But for now let's stick to fixing just the
hotplug code.

Cc: stable@vger.kernel.org # 4.19+
Cc: Lyude Paul <lyude@redhat.com>
Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
Fixes: b6ca3eee18ba ("drm/i915: Nuke dev_priv->irq_port[]")
Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20181108200424.28371-1-ville.syrjala@linux.intel.com
Reviewed-by: Lyude Paul <lyude@redhat.com>
(cherry picked from commit 5a3aeca97af1b6b3498d59a7fd4e8bb95814c108)
Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/gpu/drm/i915/intel_hotplug.c |   66 ++++++++++++++++++++++++-----------
 1 file changed, 47 insertions(+), 19 deletions(-)

--- a/drivers/gpu/drm/i915/intel_hotplug.c
+++ b/drivers/gpu/drm/i915/intel_hotplug.c
@@ -397,37 +397,54 @@ void intel_hpd_irq_handler(struct drm_i9
 	struct intel_encoder *encoder;
 	bool storm_detected = false;
 	bool queue_dig = false, queue_hp = false;
+	u32 long_hpd_pulse_mask = 0;
+	u32 short_hpd_pulse_mask = 0;
+	enum hpd_pin pin;
 
 	if (!pin_mask)
 		return;
 
 	spin_lock(&dev_priv->irq_lock);
+
+	/*
+	 * Determine whether ->hpd_pulse() exists for each pin, and
+	 * whether we have a short or a long pulse. This is needed
+	 * as each pin may have up to two encoders (HDMI and DP) and
+	 * only the one of them (DP) will have ->hpd_pulse().
+	 */
 	for_each_intel_encoder(&dev_priv->drm, encoder) {
-		enum hpd_pin pin = encoder->hpd_pin;
 		bool has_hpd_pulse = intel_encoder_has_hpd_pulse(encoder);
+		enum port port = encoder->port;
+		bool long_hpd;
 
+		pin = encoder->hpd_pin;
 		if (!(BIT(pin) & pin_mask))
 			continue;
 
-		if (has_hpd_pulse) {
-			bool long_hpd = long_mask & BIT(pin);
-			enum port port = encoder->port;
+		if (!has_hpd_pulse)
+			continue;
 
-			DRM_DEBUG_DRIVER("digital hpd port %c - %s\n", port_name(port),
-					 long_hpd ? "long" : "short");
-			/*
-			 * For long HPD pulses we want to have the digital queue happen,
-			 * but we still want HPD storm detection to function.
-			 */
-			queue_dig = true;
-			if (long_hpd) {
-				dev_priv->hotplug.long_port_mask |= (1 << port);
-			} else {
-				/* for short HPD just trigger the digital queue */
-				dev_priv->hotplug.short_port_mask |= (1 << port);
-				continue;
-			}
+		long_hpd = long_mask & BIT(pin);
+
+		DRM_DEBUG_DRIVER("digital hpd port %c - %s\n", port_name(port),
+				 long_hpd ? "long" : "short");
+		queue_dig = true;
+
+		if (long_hpd) {
+			long_hpd_pulse_mask |= BIT(pin);
+			dev_priv->hotplug.long_port_mask |= BIT(port);
+		} else {
+			short_hpd_pulse_mask |= BIT(pin);
+			dev_priv->hotplug.short_port_mask |= BIT(port);
 		}
+	}
+
+	/* Now process each pin just once */
+	for_each_hpd_pin(pin) {
+		bool long_hpd;
+
+		if (!(BIT(pin) & pin_mask))
+			continue;
 
 		if (dev_priv->hotplug.stats[pin].state == HPD_DISABLED) {
 			/*
@@ -444,11 +461,22 @@ void intel_hpd_irq_handler(struct drm_i9
 		if (dev_priv->hotplug.stats[pin].state != HPD_ENABLED)
 			continue;
 
-		if (!has_hpd_pulse) {
+		/*
+		 * Delegate to ->hpd_pulse() if one of the encoders for this
+		 * pin has it, otherwise let the hotplug_work deal with this
+		 * pin directly.
+		 */
+		if (((short_hpd_pulse_mask | long_hpd_pulse_mask) & BIT(pin))) {
+			long_hpd = long_hpd_pulse_mask & BIT(pin);
+		} else {
 			dev_priv->hotplug.event_bits |= BIT(pin);
+			long_hpd = true;
 			queue_hp = true;
 		}
 
+		if (!long_hpd)
+			continue;
+
 		if (intel_hpd_irq_storm_detect(dev_priv, pin)) {
 			dev_priv->hotplug.event_bits &= ~BIT(pin);
 			storm_detected = true;

