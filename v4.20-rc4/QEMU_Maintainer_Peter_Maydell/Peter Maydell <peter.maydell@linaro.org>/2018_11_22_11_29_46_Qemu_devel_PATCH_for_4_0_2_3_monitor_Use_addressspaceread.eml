Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 21:39:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C529658037D
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 03:30:53 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 03:30:53 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AdTCf6BWo3kMmT4TWXq3cgKZFG3XV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbROBt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cYUBAekGM+laoYnyqFQAowamBQSuBu3ixSJEi3Hq0aIkyOQsCh3K0Q86Et4Sqn?=
 =?us-ascii?q?nYsMn5OaEPWu611qnIyjDDYutM1zjj9IjHbAohquyLU71qccve1FcgFwfBjl6N?=
 =?us-ascii?q?roHlJy2a1vgTvGiB9eZgUPigim46pA5vpjivwtwhio3IhoIT0F/E7yJ5zJwyJd?=
 =?us-ascii?q?2iR052eNipG4ZTuSGCL4Z6XN8uTmJytCon17ELuoS3cDYExZkn3RLTdv6Kf5CW?=
 =?us-ascii?q?7h7/SOqdPDJ1iXF+d76jghu+7FWvxvH5W8SxzlpHqDdOnMPWuXAXzRPT79CKSv?=
 =?us-ascii?q?tj8Uel3jaCzwTT6uBfIUAojqrXMZEhwrgtlpYJtkTDBCD2lF33jK+QaEok5vCl?=
 =?us-ascii?q?5/r7brjlvJOQKpJ4hwLkPqgwlMGyAf40PhUMUmSD/OSzzrzj/Un3QLVQif02l7?=
 =?us-ascii?q?HUsInEKsQeu661GhJa3Zg96xmhCzeqyc8XnX4aLFJDZB2IkZPpN1bKIPD5Dvew?=
 =?us-ascii?q?nU6gkTh2x/3eOr3hA5PNLmXMkbv7fLZ97VJcxxQ3zdxF+51UDbQBLen1Wk/2st?=
 =?us-ascii?q?zYARk5MxGuz+bgEtV92ZsSWXiTDa+BLKPSrViI6/orI+mNZ48apizxKvc45/P1?=
 =?us-ascii?q?iX85mFkdfbSm3JcNaXC4GOhmLFudYXb2ntgBFmIK7UIDSvf3ggiCTSJLfCT1GK?=
 =?us-ascii?q?Y9/S0gToShC4jFW8aqmrPG2S66GphfYCdBEkyNFnHzMJyJXupJZC+ML8syrzof?=
 =?us-ascii?q?SLL0ToYg0Q2p5hb3zqciIufK9yldr5/6ydVu+8XVkhc98yEyCN6ShHqQRWN5lX?=
 =?us-ascii?q?9dWjktwapkqlZ8wFrQ7a8tmvFdCJlf6u1EVi88MpjTyfE8DMr9CSzbedLccFu6?=
 =?us-ascii?q?T8/uJDggQt81x5dae0thFs/kixnS0yeuB5cRlrqCHpty9bjTiSuib/1hwmrLgf?=
 =?us-ascii?q?Fyx2ItRdFCYCj/3vZy?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAAClkvZbhxHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJijBBfiyKUUIR3gXAXGBSIUSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pL4I2BQIDGgEGglwDAwECJAsBEwopAwMBAgYBAUgIAwFTGQWDHIICAQSqcjOFQ?=
 =?us-ascii?q?IRnh16EK4FXP4hqgQSFDgKgAgcCghwEjwQLGIFZiC6HASyYBIFGgg0zGjCDL4I?=
 =?us-ascii?q?nFxKOCkExgQeKXFaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ATAAClkvZbhxHrdtBjHQEBBQEHBQGBUQgBCwGBMIJijBB?=
 =?us-ascii?q?fiyKUUIR3gXAXGBSIUSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2BQIDGgEGg?=
 =?us-ascii?q?lwDAwECJAsBEwopAwMBAgYBAUgIAwFTGQWDHIICAQSqcjOFQIRnh16EK4FXP4h?=
 =?us-ascii?q?qgQSFDgKgAgcCghwEjwQLGIFZiC6HASyYBIFGgg0zGjCDL4InFxKOCkExgQeKX?=
 =?us-ascii?q?FaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="53345113"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 03:30:42 -0800
Received: from localhost ([::1]:45278 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPnBx-0002O9-VU
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 06:30:42 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:32811)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gPnBL-0002JD-SJ
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 06:30:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gPnBL-0005sC-5C
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 06:30:03 -0500
Received: from orth.archaic.org.uk ([2001:8b0:1d0::2]:52716)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pm215@archaic.org.uk>)
	id 1gPnBK-0004lO-TV
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 06:30:03 -0500
Received: from pm215 by orth.archaic.org.uk with local (Exim 4.89)
	(envelope-from <pm215@archaic.org.uk>)
	id 1gPnBB-0004v4-CD; Thu, 22 Nov 2018 11:29:53 +0000
From: Peter Maydell <peter.maydell@linaro.org>
To: qemu-devel@nongnu.org
Date: Thu, 22 Nov 2018 11:29:46 +0000
Message-Id: <20181122112947.7586-3-peter.maydell@linaro.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181122112947.7586-1-peter.maydell@linaro.org>
References: <20181122112947.7586-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2001:8b0:1d0::2
Subject: [Qemu-devel] [PATCH for-4.0 2/3] monitor: Use address_space_read()
 to read memory
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Markus Armbruster <armbru@redhat.com>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>, patches@linaro.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Currently monitor.c reads physical memory using
cpu_physical_memory_read(). This effectively hard-codes
assuming that all CPUs have the same view of physical
memory. Switch to address_space_read() instead, which
lets us use the AddressSpace for the CPU we're
reading memory for (falling back to address_space_memory
if there is no CPU, as happens with the "none" board).
As a bonus, this allows us to detect failures to read memory.

Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
---
 monitor.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/monitor.c b/monitor.c
index d39390c2f2f..b0e8f2c490a 100644
--- a/monitor.c
+++ b/monitor.c
@@ -1604,7 +1604,13 @@ static void memory_dump(Monitor *mon, int count, int format, int wsize,
         if (l > line_size)
             l = line_size;
         if (is_physical) {
-            cpu_physical_memory_read(addr, buf, l);
+            AddressSpace *as = cs ? cs->as : &address_space_memory;
+            MemTxResult r = address_space_read(as, addr,
+                                               MEMTXATTRS_UNSPECIFIED, buf, l);
+            if (r != MEMTX_OK) {
+                monitor_printf(mon, " Cannot access memory\n");
+                break;
+            }
         } else {
             if (cpu_memory_rw_debug(cs, addr, buf, l, 0) < 0) {
                 monitor_printf(mon, " Cannot access memory\n");
-- 
2.19.1


