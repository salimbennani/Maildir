Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 04:18:19 -0000
Received: from icoremail.net (unknown [209.85.214.180])
	by mail-app4 (Coremail) with SMTP id cS_KCgDHH06rIPZbcP7qAQ--.39969S3;
	Thu, 22 Nov 2018 11:21:16 +0800 (CST)
Received: from mail-pl1-f180.google.com (unknown [209.85.214.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBkJvH_Zb8flmAA--.4182S3;
	Thu, 22 Nov 2018 11:15:59 +0800 (CST)
Received: by mail-pl1-f180.google.com with SMTP id s5-v6so8288788plq.11
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 19:15:59 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:message-id
         :mime-version:subject:from:to:cc:sender:precedence:list-id;
        bh=xIMtPBW8a0JPaAEp9wLSnMQUqC2A5vjNXxobCvOXQ3E=;
        b=AAJxZD9EJPb7XJKuJFgFP47uhqAcStIixc7eVN2gF3ONrqMf8RcI/tf0I+QOcOsSdL
         50KnkLKCaVPzJzrOjDblCxle1r9zY4Di0uyiuvwM28oHYlsiwJqg6teu3GvtEfAAMT2c
         ADGbxiS3eP9DX2Zc4Uvw7LyMUd+NPrU4jOfgwk9vqCZHJAJ6EPEvbbw6f9/7I0gb+nDZ
         J0Tn4KwgD2InI/bOLCv+U8Z3MQlMTEjxKEQMLOHKlOH6lNR3yBmO8G9zf5TSaRvdHfoa
         Zbfn6dVnq1Ai4SDsoI9Bw+niPmxkw2fAkcEIL48QbfLx3HtwStVKnpLHKeVp1LgC69+x
         fNOg==
X-Gm-Message-State: AA+aEWapuoPzTS5+n2DFloMMpdHY9qfsFH50KKnMeDtBwb/Zgh6XjF7A
	VgWqf61vGj8ErUtdj/lvmgXZ0XSrzreiz27RLzKH5KnxpKhKbBjjEw==
X-Received: by 2002:a63:1e17:: with SMTP id e23mr8344711pge.130.1542856559400;
        Wed, 21 Nov 2018 19:15:59 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp197396pju;
        Wed, 21 Nov 2018 19:15:58 -0800 (PST)
X-Google-Smtp-Source: AJdET5cD0/9iYAxyyUK9QUmQPWiNt+Fd17+igXBPFWhiZ70GGIdw2EJUZsemM+bcNteIh9Uqbeyl
X-Received: by 2002:a62:401:: with SMTP id 1-v6mr9453688pfe.156.1542856558491;
        Wed, 21 Nov 2018 19:15:58 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542856558; cv=none;
        d=google.com; s=arc-20160816;
        b=VjVAEDuFclHZw0XX9FTsBYO22csl4qPu85bLCZCbDz/DWJ5nTWvDz65TLLwv8ssrbw
         lzC64akIsZWyTgZb26LJsD1dvN6EsGKA/WsoY3MfaoW7WWIa8SWs1e6y5Sg1vUDVjnMv
         MXHXrldVAc61Rp5ieUWKFvU+Lwx7uX9bsT5/Sdq5e5re1sCYmCI/oPeoqVz3lT0dpVCR
         GaUmFgIMsE+RwFtCIOFKKSS6T/le/7Haeww/sKKgi+GcQKXwzqx7A69rjeZzT+RX04BV
         PVSoACmk8i4cVxl4Q1+i+yiidLEpjcmL992YatQTe4J663YUB2XPYy22Y16jB7qtIZvU
         Th2Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:from:subject:mime-version
         :message-id:date:dkim-signature;
        bh=xIMtPBW8a0JPaAEp9wLSnMQUqC2A5vjNXxobCvOXQ3E=;
        b=vakG1yU3ZX06aKmwyQjq56zw073QAGAJm0hTYQ6WdRSIftJAKWklCH62MhV0jdnowG
         LV+okNI2aqVd47Pxix36C4FhoXbtokwL50ehw/KXfZP+qBqaqSP9lP5c06uPz61eiCAz
         o+ol1HLHRd7g1H0SG9IYOfXCEghZsLC3E8khY0EudSolqbvUH3aepC9xU+w9Cn5gbjbM
         2ZcSbt+H0DRdE1rhlVTljacGaOMyE1MxrFatcrtkVF+Eh3ZlhJ61Omk7uRpUK88U8pTs
         HFexTxLB9MgAjld+bX4CLYzvJ2FoyAglpR1lw8cGUmSPb+jy5iqpE6BicDKU9X2JayAR
         IC9A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=N1Kg7Onf;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l68-v6si56161338pfl.56.2018.11.21.19.15.44;
        Wed, 21 Nov 2018 19:15:58 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389157AbeKVGvp (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Thu, 22 Nov 2018 01:51:45 -0500
Received: from mail-io1-f73.google.com ([209.85.166.73]:33328 "EHLO
        mail-io1-f73.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2389115AbeKVGvo (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 01:51:44 -0500
Received: by mail-io1-f73.google.com with SMTP id u13-v6so6353272iob.0
        for <linux-kernel@vger.kernel.org>; Wed, 21 Nov 2018 12:15:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:message-id:mime-version:subject:from:to:cc;
        bh=xIMtPBW8a0JPaAEp9wLSnMQUqC2A5vjNXxobCvOXQ3E=;
        b=N1Kg7OnfSXuDOEDZPe9dwII7GqEoo8PVROF/zyTGpDzWwoyv0qCvfuML8wo4JLkN6X
         wg/o5RJwV1uiSn7JLevvz6yT6IRLunmNNgyrIGA490tzYKIJoPgWzaszqDVo906MGgPJ
         gPTCOo1lQnTrDY+8rxY2CF6A1yIRNFzXagGj07ha6bUs7/HYaUklmulx53L57NOpBnRn
         kwAWbOpgFEQOLm0cPCj79kTXvqA3fgZvBe5KhtkxaK/y7zLr8fG+1phyLpQpFcRcFEIj
         NGy77dUUHGumbVgj5Lc91i0/pbPp6S9q/d2nMHMFPjelqk5HrHDorzEZ4P+HpoIe1fgH
         ajJg==
X-Received: by 2002:a24:2c11:: with SMTP id i17-v6mr5140974iti.21.1542831356162;
 Wed, 21 Nov 2018 12:15:56 -0800 (PST)
Date: Wed, 21 Nov 2018 12:14:44 -0800
Message-Id: <20181121201452.77173-1-dancol@google.com>
Mime-Version: 1.0
X-Mailer: git-send-email 2.19.1.1215.g8438c0b245-goog
Subject: [PATCH] Add /proc/pid_generation
From: Daniel Colascione <dancol@google.com>
To: linux-kernel@vger.kernel.org, linux-api@vger.kernel.org
Cc: timmurray@google.com, primiano@google.com, joelaf@google.com,
        Daniel Colascione <dancol@google.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Andrew Morton <akpm@linux-foundation.org>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        Roman Gushchin <guro@fb.com>, Vlastimil Babka <vbabka@suse.cz>,
        "Dennis Zhou (Facebook)" <dennisszhou@gmail.com>,
        Prashant Dhamdhere <pdhamdhe@redhat.com>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        "Steven Rostedt (VMware)" <rostedt@goodmis.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@kernel.org>,
        Dominik Brodowski <linux@dominikbrodowski.net>,
        Pavel Tatashin <pasha.tatashin@oracle.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Michal Hocko <mhocko@suse.com>,
        Matthew Wilcox <willy@infradead.org>,
        David Howells <dhowells@redhat.com>,
        KJ Tsanaktsidis <ktsanaktsidis@zendesk.com>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBkJvH_Zb8flmAA--.4182S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Wr47tw18AF48GrW7Ww1fXrb_yoW7trW3pF
	WSvrn3Jw4UGr1UCr9rJr97Z343uw1kKayxJrWxWw4fAr129r1fKrsFqr15ZF1rJr4DuFW5
	XFWDKrWxCryUZrDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmvb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M280x2IEY4vE77IFxVWUZVW8XwA2ocxC64kIII0Yj41l84x0c7CEw4AK67
	xGY2AK021l84ACjcxK6xIIjxv20xvE14v26ryj6F1UM28EF7xvwVC0I7IYx2IY6xkF7I0E
	14v26r4j6F4UM28EF7xvwVC2z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14
	v26rxl6s0DM2AIxVAIcxkEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xf
	McIj6xIIjxv20xvE14v26r1j6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7
	v_Jr0_Gr1lF7xvr2IYc2Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca
	8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VW8GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2I
	x0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2
	z280aVAFwI0_Gr1j6F4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28Icx
	kI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY
	6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17
	CEb7AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7v
	cSsGvfC2KfnxnUUI43ZEXa7IUo8b17UUUUU==

Trace analysis code needs a coherent picture of the set of processes
and threads running on a system. While it's possible to enumerate all
tasks via /proc, this enumeration is not atomic. If PID numbering
rolls over during snapshot collection, the resulting snapshot of the
process and thread state of the system may be incoherent, confusing
trace analysis tools. The fundamental problem is that if a PID is
reused during a userspace scan of /proc, it's impossible to tell, in
post-processing, whether a fact that the userspace /proc scanner
reports regarding a given PID refers to the old or new task named by
that PID, as the scan of that PID may or may not have occurred before
the PID reuse, and there's no way to "stamp" a fact read from the
kernel with a trace timestamp.

This change adds a per-pid-namespace 64-bit generation number,
incremented on PID rollover, and exposes it via a new proc file
/proc/pid_generation. By examining this file before and after /proc
enumeration, user code can detect the potential reuse of a PID and
restart the task enumeration process, repeating until it gets a
coherent snapshot.

PID rollover ought to be rare, so in practice, scan repetitions will
be rare.

Signed-off-by: Daniel Colascione <dancol@google.com>
---
 Documentation/filesystems/proc.txt |  1 +
 include/linux/pid.h                |  1 +
 include/linux/pid_namespace.h      |  2 ++
 init/main.c                        |  1 +
 kernel/pid.c                       | 36 +++++++++++++++++++++++++++++-
 5 files changed, 40 insertions(+), 1 deletion(-)

diff --git a/Documentation/filesystems/proc.txt b/Documentation/filesystems/proc.txt
index 12a5e6e693b6..f58a359f9a2c 100644
--- a/Documentation/filesystems/proc.txt
+++ b/Documentation/filesystems/proc.txt
@@ -615,6 +615,7 @@ Table 1-5: Kernel info in /proc
  partitions  Table of partitions known to the system           
  pci	     Deprecated info of PCI bus (new way -> /proc/bus/pci/,
              decoupled by lspci					(2.4)
+ pid_gen     PID rollover count
  rtc         Real time clock                                   
  scsi        SCSI info (see text)                              
  slabinfo    Slab pool info                                    
diff --git a/include/linux/pid.h b/include/linux/pid.h
index 14a9a39da9c7..2e4b41a32e86 100644
--- a/include/linux/pid.h
+++ b/include/linux/pid.h
@@ -112,6 +112,7 @@ extern struct pid *find_ge_pid(int nr, struct pid_namespace *);
 int next_pidmap(struct pid_namespace *pid_ns, unsigned int last);
 
 extern struct pid *alloc_pid(struct pid_namespace *ns);
+extern u64 read_pid_generation(struct pid_namespace *ns);
 extern void free_pid(struct pid *pid);
 extern void disable_pid_allocation(struct pid_namespace *ns);
 
diff --git a/include/linux/pid_namespace.h b/include/linux/pid_namespace.h
index 49538b172483..fa92ae66fb98 100644
--- a/include/linux/pid_namespace.h
+++ b/include/linux/pid_namespace.h
@@ -44,6 +44,7 @@ struct pid_namespace {
 	kgid_t pid_gid;
 	int hide_pid;
 	int reboot;	/* group exit code if this pidns was rebooted */
+	u64 generation;  /* incremented on wraparound */
 	struct ns_common ns;
 } __randomize_layout;
 
@@ -99,5 +100,6 @@ static inline int reboot_pid_ns(struct pid_namespace *pid_ns, int cmd)
 extern struct pid_namespace *task_active_pid_ns(struct task_struct *tsk);
 void pidhash_init(void);
 void pid_idr_init(void);
+void pid_proc_init(void);
 
 #endif /* _LINUX_PID_NS_H */
diff --git a/init/main.c b/init/main.c
index ee147103ba1b..20c595e852c6 100644
--- a/init/main.c
+++ b/init/main.c
@@ -730,6 +730,7 @@ asmlinkage __visible void __init start_kernel(void)
 	cgroup_init();
 	taskstats_init_early();
 	delayacct_init();
+	pid_proc_init();
 
 	check_bugs();
 
diff --git a/kernel/pid.c b/kernel/pid.c
index b2f6c506035d..cd5f4aa8eb55 100644
--- a/kernel/pid.c
+++ b/kernel/pid.c
@@ -174,6 +174,7 @@ struct pid *alloc_pid(struct pid_namespace *ns)
 
 	for (i = ns->level; i >= 0; i--) {
 		int pid_min = 1;
+		unsigned int old_cursor;
 
 		idr_preload(GFP_KERNEL);
 		spin_lock_irq(&pidmap_lock);
@@ -182,7 +183,8 @@ struct pid *alloc_pid(struct pid_namespace *ns)
 		 * init really needs pid 1, but after reaching the maximum
 		 * wrap back to RESERVED_PIDS
 		 */
-		if (idr_get_cursor(&tmp->idr) > RESERVED_PIDS)
+		old_cursor = idr_get_cursor(&tmp->idr);
+		if (old_cursor > RESERVED_PIDS)
 			pid_min = RESERVED_PIDS;
 
 		/*
@@ -191,6 +193,8 @@ struct pid *alloc_pid(struct pid_namespace *ns)
 		 */
 		nr = idr_alloc_cyclic(&tmp->idr, NULL, pid_min,
 				      pid_max, GFP_ATOMIC);
+		if (unlikely(idr_get_cursor(&tmp->idr) <= old_cursor))
+			tmp->generation += 1;
 		spin_unlock_irq(&pidmap_lock);
 		idr_preload_end();
 
@@ -246,6 +250,16 @@ struct pid *alloc_pid(struct pid_namespace *ns)
 	return ERR_PTR(retval);
 }
 
+u64 read_pid_generation(struct pid_namespace *ns)
+{
+	u64 generation;
+
+	spin_lock_irq(&pidmap_lock);
+	generation = ns->generation;
+	spin_unlock_irq(&pidmap_lock);
+	return generation;
+}
+
 void disable_pid_allocation(struct pid_namespace *ns)
 {
 	spin_lock_irq(&pidmap_lock);
@@ -449,6 +463,17 @@ struct pid *find_ge_pid(int nr, struct pid_namespace *ns)
 	return idr_get_next(&ns->idr, &nr);
 }
 
+#ifdef CONFIG_PROC_FS
+static int pid_generation_show(struct seq_file *m, void *v)
+{
+	u64 generation =
+		read_pid_generation(proc_pid_ns(file_inode(m->file)));
+	seq_printf(m, "%llu\n", generation);
+	return 0;
+
+};
+#endif
+
 void __init pid_idr_init(void)
 {
 	/* Verify no one has done anything silly: */
@@ -465,4 +490,13 @@ void __init pid_idr_init(void)
 
 	init_pid_ns.pid_cachep = KMEM_CACHE(pid,
 			SLAB_HWCACHE_ALIGN | SLAB_PANIC | SLAB_ACCOUNT);
+
+}
+
+void __init pid_proc_init(void)
+{
+	/* pid_idr_init is too early, so get a separate init function. */
+#ifdef CONFIG_PROC_FS
+	WARN_ON(!proc_create_single("pid_gen", 0, NULL, pid_generation_show));
+#endif
 }
-- 
2.19.1.1215.g8438c0b245-goog
