Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:28:25 -0000
Received: from icoremail.net (unknown [209.85.215.176])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_4_JEPJbhKm0AQ--.19682S3;
	Mon, 19 Nov 2018 09:24:26 +0800 (CST)
Received: from mail-pg1-f176.google.com (unknown [209.85.215.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnB0PFEPJbSA1UAA--.2155S3;
	Mon, 19 Nov 2018 09:24:21 +0800 (CST)
Received: by mail-pg1-f176.google.com with SMTP id v28so2551283pgk.10
        for <xuliker@zju.edu.cn>; Sun, 18 Nov 2018 17:24:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :to:cc:message-id:in-reply-to:references:from:subject:date:sender
         :precedence:list-id;
        bh=Mi/XOo9REizw7t24wub0cKSeALdch0vOTDst83YO3bM=;
        b=rPD2jgIHZfm2woIS/zbJTTNiV83Uc9V2BNqqVq00iiHkWfOXN7v8QJXX1lYmKN00vv
         JokK3vOXOrHzr+pBiMvmFoXD9HvH7zy5178CZZCkJ7Yx9hAjOMx0lHD2Ft/unwLiDxIY
         9qdZJgKt+3gNNYZNun1YAv9HMA5EMSbxHuwySaXH1GfvTGIy3injosIDjKKnHgwmBp6Z
         pmMErJvh/+pOKKnqSPn712dhl8XJ8mKTYXwPyODTpqMzn6qqUfZ7zNgfanY26WCHPg2z
         9ZpSp6DiE2ge2MR2PST15zl7tQDEa0VrILe8e+e/o4johCi6pDa9grmrHXTW2/aCnPX6
         K+lA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLQVUi5ih21fKSnD6k46yWHs/Y4mraDziy7yHPSMSA613c7wo/N
	pmNqSLoNEC39xZxnPZVeEv5HZRbDi7T2zwIsq/YunBSEBsFHOCU=
X-Received: by 2002:a63:2315:: with SMTP id j21mr18426431pgj.297.1542590661529;
        Sun, 18 Nov 2018 17:24:21 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2075903pju;
        Sun, 18 Nov 2018 17:24:20 -0800 (PST)
X-Google-Smtp-Source: AFSGD/WN78SsZh7lpBKV4TvJIr2c1CaLOOgQkVqzHU1AaGi9n5hnB7vZwAFOJZkX4CSPQLCYNh+C
X-Received: by 2002:a65:6094:: with SMTP id t20mr2888209pgu.285.1542590660552;
        Sun, 18 Nov 2018 17:24:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542590660; cv=none;
        d=google.com; s=arc-20160816;
        b=SwgCA8yqhbi1VLFLQFX9bjEeH2po+Ve9PV1/zj7Mvwb0NkUDZQ7LB3zLozM/piLOEj
         3qDJH8qklGvs15HVI9Dtmaksnq2u8xK0EV6YyTTz5jEDKMqbbWGdciP1TuV972hCGoTt
         cAke4ZgCjHbEJLWJTj9Kdecv2YYL11z/ImYuqIeW+tCvrzZUdwMiJOnmfAIJFZ0qLMRA
         LfCbdhH1nDa2ws3D94VybJ4N2Zo1WRoOmb1/292GALjOXb/Lyo2AvmnQedjgtCCo88+w
         dp9HmeFI6ViGTrhsJstxMlVOZmMcqgLz8cQY8RI9sG4Ad+pLyr6+D5+Tw8DEwoSL88gQ
         ttkg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:date:subject:from:references:in-reply-to
         :message-id:cc:to;
        bh=Mi/XOo9REizw7t24wub0cKSeALdch0vOTDst83YO3bM=;
        b=YBShJ2M/F2bJZ7UdU+P2EUW04zpMQf0Rr6quCBDObcGF3gxPuh110RaBpmY71E+nOh
         g8Bqu1awcj3NUkkAKKAGaeFok+xSBfM9vKxxSQoImIbVU2mE5hFqG9fvXNShOtvOFsxk
         0lnPNiXkT3SfHXZeg570YVu5sXeHdF2MieyczozqpsN+AL/d+ZERB4oDv3EKKtTFeDb1
         86G4AFHED5iNoEi5rdLTj6T9GvoB/brwbuWoZdtAII7AOMOM/HVvrh/6kzqFTMErYvkU
         3AycIytQO4MA0JTL6G9GIT8eTfifXZbZOUgZw0lizIfq8GjuonDWbtOwk88cZOifiAc3
         xT6Q==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e9si25503896plt.330.2018.11.18.17.24.06;
        Sun, 18 Nov 2018 17:24:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727944AbeKSLoR (ORCPT <rfc822;piyush.popli@gmail.com>
        + 99 others); Mon, 19 Nov 2018 06:44:17 -0500
Received: from kvm5.telegraphics.com.au ([98.124.60.144]:49114 "EHLO
        kvm5.telegraphics.com.au" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726235AbeKSLoR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 06:44:17 -0500
Received: by kvm5.telegraphics.com.au (Postfix, from userid 502)
        id 7960B29DF6; Sun, 18 Nov 2018 20:22:17 -0500 (EST)
To: Geert Uytterhoeven <geert@linux-m68k.org>,
        Joshua Thompson <funaho@jurai.org>
Cc: Andreas Schwab <schwab@linux-m68k.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Stephen N Chivers <schivers@csc.com.au>,
        Thomas Gleixner <tglx@linutronix.de>,
        Daniel Lezcano <daniel.lezcano@linaro.org>,
        Michael Schmitz <schmitzmic@gmail.com>,
        John Stultz <john.stultz@linaro.org>,
        Linus Walleij <linus.walleij@linaro.org>,
        linux-m68k@lists.linux-m68k.org, linux-kernel@vger.kernel.org
Message-Id: <423caba434560f3cff60ab68ae0b71d5e635663c.1542589838.git.fthain@telegraphics.com.au>
In-Reply-To: <cover.1542589838.git.fthain@telegraphics.com.au>
References: <cover.1542589838.git.fthain@telegraphics.com.au>
From: Finn Thain <fthain@telegraphics.com.au>
Subject: [RFC PATCH v2 02/14] m68k: mac: Fix VIA timer counter accesses
Date: Mon, 19 Nov 2018 12:10:38 +1100
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnB0PFEPJbSA1UAA--.2155S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCFykKr47Wr15AF15WF4fuFg_yoWrZw43p3
	ySkasxAw4vqws29w4kAa1DAF1fG3WkXFW5GFZrGr18Cw1a9r1fXa48Ka4FqFy8GrWkWw1r
	XFy5uay3u3y2vw7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jrv_
	JF1lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6w4lc2IjII80
	xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxV
	AFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480
	Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04
	k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bQE_iUUUUU=

This resolves some bugs that affect VIA timer counter accesses.
Avoid lost interrupts caused by reading the counter low byte register.
Make allowance for the fact that the counter will be decremented to
0xFFFF before being reloaded.

Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
---
Changed since v1:
 - Test the timer interrupt flag unconditionally.
 - Drop some extraneous clean up.
 - Don't try to recover from lost timer interrupts. Don't lose them
in the first place. That means giving up on the timer counter low byte.
The extra precision is probably not worth the extra complexity and
I couldn't make it work anyway.
---
 arch/m68k/mac/via.c | 105 +++++++++++++++++++++++---------------------
 1 file changed, 56 insertions(+), 49 deletions(-)

diff --git a/arch/m68k/mac/via.c b/arch/m68k/mac/via.c
index 2ab85b6eb4fe..d1dbf9017300 100644
--- a/arch/m68k/mac/via.c
+++ b/arch/m68k/mac/via.c
@@ -54,16 +54,6 @@ static __u8 rbv_clear;
 
 static int gIER,gIFR,gBufA,gBufB;
 
-/*
- * Timer defs.
- */
-
-#define TICK_SIZE		10000
-#define MAC_CLOCK_TICK		(783300/HZ)		/* ticks per HZ */
-#define MAC_CLOCK_LOW		(MAC_CLOCK_TICK&0xFF)
-#define MAC_CLOCK_HIGH		(MAC_CLOCK_TICK>>8)
-
-
 /*
  * On Macs with a genuine VIA chip there is no way to mask an individual slot
  * interrupt. This limitation also seems to apply to VIA clone logic cores in
@@ -267,22 +257,6 @@ void __init via_init(void)
 	}
 }
 
-/*
- * Start the 100 Hz clock
- */
-
-void __init via_init_clock(irq_handler_t func)
-{
-	via1[vACR] |= 0x40;
-	via1[vT1LL] = MAC_CLOCK_LOW;
-	via1[vT1LH] = MAC_CLOCK_HIGH;
-	via1[vT1CL] = MAC_CLOCK_LOW;
-	via1[vT1CH] = MAC_CLOCK_HIGH;
-
-	if (request_irq(IRQ_MAC_TIMER_1, func, 0, "timer", func))
-		pr_err("Couldn't register %s interrupt\n", "timer");
-}
-
 /*
  * Debugging dump, used in various places to see what's going on.
  */
@@ -310,29 +284,6 @@ void via_debug_dump(void)
 	}
 }
 
-/*
- * This is always executed with interrupts disabled.
- *
- * TBI: get time offset between scheduling timer ticks
- */
-
-u32 mac_gettimeoffset(void)
-{
-	unsigned long ticks, offset = 0;
-
-	/* read VIA1 timer 2 current value */
-	ticks = via1[vT1CL] | (via1[vT1CH] << 8);
-	/* The probability of underflow is less than 2% */
-	if (ticks > MAC_CLOCK_TICK - MAC_CLOCK_TICK / 50)
-		/* Check for pending timer interrupt in VIA1 IFR */
-		if (via1[vIFR] & 0x40) offset = TICK_SIZE;
-
-	ticks = MAC_CLOCK_TICK - ticks;
-	ticks = ticks * 10000L / MAC_CLOCK_TICK;
-
-	return (ticks + offset) * 1000;
-}
-
 /*
  * Flush the L2 cache on Macs that have it by flipping
  * the system into 24-bit mode for an instant.
@@ -618,3 +569,59 @@ int via2_scsi_drq_pending(void)
 	return via2[gIFR] & (1 << IRQ_IDX(IRQ_MAC_SCSIDRQ));
 }
 EXPORT_SYMBOL(via2_scsi_drq_pending);
+
+/* timer and clock source */
+
+#define VIA_CLOCK_FREQ     783360                /* VIA "phase 2" clock in Hz */
+#define VIA_TIMER_INTERVAL (1000000 / HZ)        /* microseconds per jiffy */
+#define VIA_TIMER_CYCLES   (VIA_CLOCK_FREQ / HZ) /* clock cycles per jiffy */
+
+#define VIA_TC             (VIA_TIMER_CYCLES - 2) /* including 0 and -1 */
+#define VIA_TC_LOW         (VIA_TC & 0xFF)
+#define VIA_TC_HIGH        (VIA_TC >> 8)
+
+void __init via_init_clock(irq_handler_t timer_routine)
+{
+	if (request_irq(IRQ_MAC_TIMER_1, timer_routine, 0, "timer", NULL)) {
+		pr_err("Couldn't register %s interrupt\n", "timer");
+		return;
+	}
+
+	via1[vT1LL] = VIA_TC_LOW;
+	via1[vT1LH] = VIA_TC_HIGH;
+	via1[vT1CL] = VIA_TC_LOW;
+	via1[vT1CH] = VIA_TC_HIGH;
+	via1[vACR] |= 0x40;
+}
+
+u32 mac_gettimeoffset(void)
+{
+	unsigned long flags;
+	u8 count_high;
+	u16 count, offset = 0;
+
+	/*
+	 * Timer counter wrap-around is detected with the timer interrupt flag
+	 * but reading the counter low byte (vT1CL) would reset the flag.
+	 * Also, accessing both counter registers is essentially a data race.
+	 * These problems are avoided by ignoring the low byte. Clock accuracy
+	 * is 256 times worse (error can reach 0.327 ms) but CPU overhead is
+	 * reduced by avoiding slow VIA register accesses.
+	 */
+
+	local_irq_save(flags);
+	count_high = via1[vT1CH];
+	if (count_high == 0xFF) {
+		count_high = 0;
+		while (via1[vT1CH] == 0xFF)
+			/* spin */;
+	}
+	if (via1[vIFR] & VIA_TIMER_1_INT)
+		offset = VIA_TIMER_CYCLES;
+	local_irq_restore(flags);
+
+	count = count_high << 8;
+	count = VIA_TIMER_CYCLES - count + offset;
+
+	return ((count * VIA_TIMER_INTERVAL) / VIA_TIMER_CYCLES) * 1000;
+}
-- 
2.18.1
