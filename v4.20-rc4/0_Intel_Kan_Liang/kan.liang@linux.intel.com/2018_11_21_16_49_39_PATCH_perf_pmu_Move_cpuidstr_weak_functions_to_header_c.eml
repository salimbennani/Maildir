Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:34:40 -0000
Received: from icoremail.net (unknown [209.85.214.179])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnX+dtpfVbHlvoAQ--.35165S3;
	Thu, 22 Nov 2018 02:35:26 +0800 (CST)
Received: from mail-pl1-f179.google.com (unknown [209.85.214.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXPkpnpfVb0shkAA--.152S3;
	Thu, 22 Nov 2018 02:35:20 +0800 (CST)
Received: by mail-pl1-f179.google.com with SMTP id t13so6671710ply.13
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 10:35:20 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=jk2rLd37ETFXWWM2U6Bhpebpw5XyCPob86t+wMMqQ2g=;
        b=TAovbshM683rsuOMem0dFgbVfjWLUFUC4W01BqydgTWWpLlLWW5e+q+tqyZXd0b0L5
         i4R7Hu+h0vDK96+4+1ebDzsr6cdkPP44PGRXsnCkqJLb8hqgKDlUu4xBTpRxE27kdl9S
         4idc+plFuTr7My2Qkv2PhTVCu/cny68EHa4/5B45XvqMRlzBPeOqyqESBTGDZzQ3DcF2
         D0cvD2qz9gB1QYz8TFNf/IMZw0k0o2DXDnCEMXQ+YSwEhYQLTUX6a15Z13kXH/GHkKsx
         uisr1OX8hWQVmCLDMt1HVssBvrTwWeP5QY/85cXSnW6oiumcJV1TvgjwMNqo+jXlNACy
         IKfw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AA+aEWbSeCX/mKd6/NiyjvYVVjIYcXLH0ZlYmzwbVVByGyL/iSvWXuer
	1JNIQu3pRzhRQipJlG51YEKOMOQHJwUjHVZ2gdWQIohsIZMKI1k=
X-Received: by 2002:a63:cd17:: with SMTP id i23mr6933761pgg.13.1542825319758;
        Wed, 21 Nov 2018 10:35:19 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2317209pju;
        Wed, 21 Nov 2018 10:35:18 -0800 (PST)
X-Google-Smtp-Source: AFSGD/WdwIIC2vt5EH2FhBP+X4yKSQcc3vy9LswKtkupfRnCHbnOHsFLKOYEeooAWcrES83zdXCb
X-Received: by 2002:a17:902:30f:: with SMTP id 15-v6mr8009442pld.155.1542825318477;
        Wed, 21 Nov 2018 10:35:18 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542825318; cv=none;
        d=google.com; s=arc-20160816;
        b=Y8XIRViSJm8mcFUrdH4FIylvKGCsBZ5JCgJ/SKWH8lHJ2CMI57X2i096ulUDqjW96F
         ao27/O4QYWquRrGnppz6xKR+aJuYfYRdMrvPhe6GjaIo9gBp77Aq/lYJiXxg15WGqm+Z
         JrxC2MIYkABHsMy3ePNIpjothxlQSiygpYUtxvF3HuOsJtiESW4eIqq57SD2VVrQ2hcc
         hrQ/7w9T0bo5VALfTiA5dMicMQ+wxr3JKA6QcADWDJZOWb07mG9VDwlWxKWXdYG9GZfp
         +ox1Jlp78yhsyNk4MgK6umn6VfIBqqwtpqHtEHUjOZqAqdam71Ytm/ABn2t0JBDVEf5x
         PNwQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=jk2rLd37ETFXWWM2U6Bhpebpw5XyCPob86t+wMMqQ2g=;
        b=Blk8OCD19+GG+EvKwpbZ4GA6Vq4P5LeIwyVExqCmY/oXP24oe+nubBi9dBNgGk3OFh
         AvH9f5K0lUYuHEOFK37D1ROW/k7bjc3CBUiYkQHQyohUDM9pAFVf/4R6cIA/eeNBmn8J
         GK2uwGKOXLKWF2YRckk0U0tR0FWQBRCEbfwM+TSIhVuDes2flRR4bB9NvjYnBdRwT1m8
         sf95oauSMF4bdHTl8HDH7LUNIJzIIASSoUzKNmPBTtGnqrrcrD8F3T4Mhcn6nBZxg1hD
         gqSozMEjHdynvnE2f5dZJHYTeY2uU4dzcBxC5VROMqH+z2vMUgPbFBSHFLxoM2QlLMye
         aa2A==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d187-v6si52730600pfa.68.2018.11.21.10.35.04;
        Wed, 21 Nov 2018 10:35:18 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732003AbeKVDZf (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Wed, 21 Nov 2018 22:25:35 -0500
Received: from mga17.intel.com ([192.55.52.151]:56272 "EHLO mga17.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726941AbeKVDZf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 22:25:35 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
  by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Nov 2018 08:50:23 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,261,1539673200"; 
   d="scan'208";a="283036388"
Received: from unknown (HELO localhost.jf.intel.com) ([10.54.55.47])
  by fmsmga006.fm.intel.com with ESMTP; 21 Nov 2018 08:50:23 -0800
From: kan.liang@linux.intel.com
To: acme@kernel.org, linux-kernel@vger.kernel.org
Cc: jolsa@kernel.org, Kan Liang <kan.liang@linux.intel.com>
Subject: [PATCH] perf pmu: Move *_cpuid_str() weak functions to header.c
Date: Wed, 21 Nov 2018 08:49:39 -0800
Message-Id: <20181121164939.13482-1-kan.liang@linux.intel.com>
X-Mailer: git-send-email 2.14.5
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXPkpnpfVb0shkAA--.152S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAF18Xr45Ww4rGw18tFWxXrb_yoW5Kr4xpr
	sxC3y3A3ykJr1fJwnayayrXFnxZr4fX3ZIv34Sk397u393Zw1kXr4fGF1fXr98Jry8Ww15
	ZrnFqr4vkF18AaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmIb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUXVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48Icx
	kI7VAKI48JM4kE6xkIj40Ew7xC0wCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2
	jsIE14v26F4j6r4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8JVW8Jr1l42xK82IYc2Ij64
	vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_
	Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUCVW8JbIYCTnI
	WIevJa73UjIFyTuYvjxUqvPfDUUUU

From: Kan Liang <kan.liang@linux.intel.com>

The weak functions, strcmp_cpuid_str() and get_cpuid_str(), are defined
in pmu.c.
Most of the cpuid related functions, including *_cpuid_str()'s
declaration and platform specific definition, are in header.c/h.

To make the declaration and definition of all cpuid related functions in
a consistent place, move the weak functions to header.c.

There is no functional change.

Suggested-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Kan Liang <kan.liang@linux.intel.com>

---

Based on tmp.perf/core branch, on top of
commit 	649d656ba01f ("perf vendor events: Add JSON metrics for Cascadelake server")

 tools/perf/util/header.c | 39 +++++++++++++++++++++++++++++++++++++++
 tools/perf/util/pmu.c    | 39 ---------------------------------------
 2 files changed, 39 insertions(+), 39 deletions(-)

diff --git a/tools/perf/util/header.c b/tools/perf/util/header.c
index 4fd45be95a43..e31f52845e77 100644
--- a/tools/perf/util/header.c
+++ b/tools/perf/util/header.c
@@ -987,6 +987,45 @@ static int write_group_desc(struct feat_fd *ff,
 	return 0;
 }
 
+/*
+ * Return the CPU id as a raw string.
+ *
+ * Each architecture should provide a more precise id string that
+ * can be use to match the architecture's "mapfile".
+ */
+char * __weak get_cpuid_str(struct perf_pmu *pmu __maybe_unused)
+{
+	return NULL;
+}
+
+/* Return zero when the cpuid from the mapfile.csv matches the
+ * cpuid string generated on this platform.
+ * Otherwise return non-zero.
+ */
+int __weak strcmp_cpuid_str(const char *mapcpuid, const char *cpuid)
+{
+	regex_t re;
+	regmatch_t pmatch[1];
+	int match;
+
+	if (regcomp(&re, mapcpuid, REG_EXTENDED) != 0) {
+		/* Warn unable to generate match particular string. */
+		pr_info("Invalid regular expression %s\n", mapcpuid);
+		return 1;
+	}
+
+	match = !regexec(&re, cpuid, 1, pmatch, 0);
+	regfree(&re);
+	if (match) {
+		size_t match_len = (pmatch[0].rm_eo - pmatch[0].rm_so);
+
+		/* Verify the entire string matched. */
+		if (match_len == strlen(cpuid))
+			return 0;
+	}
+	return 1;
+}
+
 /*
  * default get_cpuid(): nothing gets recorded
  * actual implementation must be in arch/$(SRCARCH)/util/header.c
diff --git a/tools/perf/util/pmu.c b/tools/perf/util/pmu.c
index c660625d7d4b..11a234740632 100644
--- a/tools/perf/util/pmu.c
+++ b/tools/perf/util/pmu.c
@@ -655,45 +655,6 @@ static int is_arm_pmu_core(const char *name)
 	return 0;
 }
 
-/*
- * Return the CPU id as a raw string.
- *
- * Each architecture should provide a more precise id string that
- * can be use to match the architecture's "mapfile".
- */
-char * __weak get_cpuid_str(struct perf_pmu *pmu __maybe_unused)
-{
-	return NULL;
-}
-
-/* Return zero when the cpuid from the mapfile.csv matches the
- * cpuid string generated on this platform.
- * Otherwise return non-zero.
- */
-int __weak strcmp_cpuid_str(const char *mapcpuid, const char *cpuid)
-{
-	regex_t re;
-	regmatch_t pmatch[1];
-	int match;
-
-	if (regcomp(&re, mapcpuid, REG_EXTENDED) != 0) {
-		/* Warn unable to generate match particular string. */
-		pr_info("Invalid regular expression %s\n", mapcpuid);
-		return 1;
-	}
-
-	match = !regexec(&re, cpuid, 1, pmatch, 0);
-	regfree(&re);
-	if (match) {
-		size_t match_len = (pmatch[0].rm_eo - pmatch[0].rm_so);
-
-		/* Verify the entire string matched. */
-		if (match_len == strlen(cpuid))
-			return 0;
-	}
-	return 1;
-}
-
 static char *perf_pmu__getcpuid(struct perf_pmu *pmu)
 {
 	char *cpuid;
-- 
2.14.5
