Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:31:29 -0000
Received: from icoremail.net (unknown [209.85.214.180])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX_tT3_Jb7z26AQ--.55292S3;
	Tue, 20 Nov 2018 00:05:44 +0800 (CST)
Received: from mail-pl1-f180.google.com (unknown [209.85.214.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_klS3_Jb2EdZAA--.3290S3;
	Tue, 20 Nov 2018 00:05:38 +0800 (CST)
Received: by mail-pl1-f180.google.com with SMTP id b5-v6so14803863pla.6
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:05:38 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:mime-version:content-disposition
         :content-transfer-encoding:user-agent:sender:precedence:list-id;
        bh=06DH/4LMdO0rallmVeRxOZJ5m0WGwdeIsfxvLfS++lw=;
        b=Dp0PZMK0dxSq3NFQ7sn3JUzZDSLQtvrrrqgP0sJas6IA5fNpETpxXzbUc6R7O8aJsM
         MkqadTIcCA4pmmY5+lxSSNmkunZdHt5BEG3cYh83vQSOTG9s9qPeRRgGMgeC1R6ZFpzB
         Nfh8AeZTQ10hjqlrNzHWtBKi1PlVv0rQ5Cp+5RQZ3Qby5bEnqTCU4IDWHbCnkq5AV85+
         lMTm7oTDJOmcVqn6XHx5sRkv7LXcNVWKWgA5j7cvrrezwo/905nVCXkONhS2nGND9wNE
         FSEnFGv2YitdIX0G0BxfzyQo7rMOB+1qH20QeQTIsy6ENKwyowTq2k88GKfDT9eKf9a0
         kznQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJPgcOOkFIZEqNokCcKIbXx92HCdQnHJDE9HO8l6cHZlkqetpue
	8JXCQlEyIz3QWNz8tM1KI/SyNcr67SDiS1RJpbq8yYxSuuVECF0=
X-Received: by 2002:a17:902:560f:: with SMTP id h15-v6mr23551191pli.160.1542643538236;
        Mon, 19 Nov 2018 08:05:38 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2846008pju;
        Mon, 19 Nov 2018 08:05:37 -0800 (PST)
X-Google-Smtp-Source: AJdET5c1z3ybDT1O7RH/OhZ3KefeqYohSkIQcxOBQ5Wwsrnu1f8eOYlSsSUCvHQnCWhfPqqACG6o
X-Received: by 2002:a63:e655:: with SMTP id p21mr20418118pgj.70.1542643537443;
        Mon, 19 Nov 2018 08:05:37 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542643537; cv=none;
        d=google.com; s=arc-20160816;
        b=Z04SVcejW/ggSCss7Y+aPvIqaZsNXhtkDsC7Wn0wj+bqtXswST4F1ZXlgiOT+E6a4W
         Xw6TSYpsVFq0Df/SjPGVY9O/CNwDV0f22GdyZ3fNdn8A2Zk947U7rkNHJniViho/FU/w
         bsLXeGbW3VL5jaKCvc//NG14MwKe6VmHLBVDHKqtbYtCJC2+45aUD8noAdXlRoMy0HMr
         qaQMSm1jzNIL3bRVCLxmd5eFh/YA/xl2WS8tN5KAM98yfDkP2paEvYmXUxZ+F2xUppnf
         m01kUOmZEt2KyRy1t2zWuIDuBTZkiFeIbkqbtzKDvQrLNCYcqSmYSOmXHvI8b/bBVpSA
         6zHQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:content-transfer-encoding
         :content-disposition:mime-version:message-id:subject:cc:to:from:date;
        bh=06DH/4LMdO0rallmVeRxOZJ5m0WGwdeIsfxvLfS++lw=;
        b=o36aRGGncGuODy10ffymVKN9UBf8mDmniINf8Kvx5sjKu3U/wUmzuV7ikgegBMq6R3
         B1v35eMA57JJFSsCfqbokAoEdHDnYl8TA6GW32v1AudihJGweL9uElAO0l/lAgchDxOq
         Iw51k8q1tPjt7SbyevpgrHGRheLJJft75Np4p9HmQeonxpUAgGrz7SecLklBHpfWZKo2
         /O2DVGr37DLW2OAKDJE/V/0OnkN6CEVJ4w0grcVdd+2tKjFkth1D2XKKKbOzhveYLZ1H
         SucTLo/mx6Hu+D+I/Tmul5buJTMIrsAsQ6LPLueEgSUYJCwu7OdKRNlA0qRYFj9lGZSv
         YZjA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z1si8685652plo.202.2018.11.19.08.05.19;
        Mon, 19 Nov 2018 08:05:37 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730009AbeKTC2Q convert rfc822-to-8bit (ORCPT
        <rfc822;nullbytes00@gmail.com> + 99 others);
        Mon, 19 Nov 2018 21:28:16 -0500
Received: from Galois.linutronix.de ([146.0.238.70]:38931 "EHLO
        Galois.linutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729796AbeKTC2Q (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 21:28:16 -0500
Received: from bigeasy by Galois.linutronix.de with local (Exim 4.80)
        (envelope-from <bigeasy@linutronix.de>)
        id 1gOm1y-0001lo-Vn; Mon, 19 Nov 2018 17:04:11 +0100
Date: Mon, 19 Nov 2018 17:04:10 +0100
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
To: Borislav Petkov <bp@alien8.de>, x86@kernel.org
Cc: Ingo Molnar <mingo@kernel.org>, linux-kernel@vger.kernel.org,
        Andy Lutomirski <luto@kernel.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Radim =?utf-8?B?S3LEjW3DocWZ?= <rkrcmar@redhat.com>,
        kvm@vger.kernel.org, "Jason A. Donenfeld" <Jason@zx2c4.com>,
        Rik van Riel <riel@surriel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>
Subject: [PATCH v2] x86/fpu: Disable BH while while loading FPU registers in
 __fpu__restore_sig()
Message-ID: <20181119160410.ne7oiq2gkwt6jiqg@linutronix.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8BIT
User-Agent: NeoMutt/20180716
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_klS3_Jb2EdZAA--.3290S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW7Ww1rCr15uFy3uFyfXrykAFb_yoW8tFW8pr
	ZrWrn3Kr1DXa4Iya97Ar10qF95Cw4kJ34xG34UC34rAa1YgFyqyrnayanIqayY9ryxGF4S
	yFWDt3yjqFWkAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr0_Cr1l84ACjcxK6I8E87Iv6xkF7I0E14v26r4j6r4UJwAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	JVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UMx02cVCv0xWlc7
	CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Avz4vEIxC_JwCY0x0I
	x7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcIIF0xvE2Ix0cI8IcVCY1x
	0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_Gr0_Gr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjx
	CrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xv
	wVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw2
	0EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IUOAku3UUUUU==

The sequence
   fpu->initialized = 1; /* step A */
   preempt_disable();	 /* step B */
   fpu__restore(fpu);
   preempt_enable();

is racy in regard to a context switch.
For 32bit frames __fpu__restore_sig() prepares the FPU state within
fpu->state. To ensure that a context switch (switch_fpu_prepare() in
particular) does not modify fpu->state it uses fpu__drop() which sets
fpu->initializes to 0. With this change the CPU's FPU state is not saved
to fpu->state during a context switch. It then loads the state to
fpu->state from userland and ensures it sane. The new state is loaded
via fpu__restore(). The code sets then fpu->initializes to 1 in order
to avoid fpu__initialize() doing anything (overwrite the new state)
which is part of fpu__restore().
A context switch between step A and B would save CPU's current FPU
registers to fpu->state and overwrite the newly prepared state. This
looks like tiny race window but the Kernel Test Robot reported this back
in 2016 while we had lazy FPU support. Borislav Petkov made the link
between that report and another patch that has been posted.
Since the removal of the lazy FPU support, this race goes unnoticed
because the warning has been removed.

Use local_bh_disable() around the restore sequence to avoid the race. BH
needs to be disabled because BH is allowed to run (even with preemption
disabled) and might invoke kernel_fpu_begin().

Link: https://lkml.kernel.org/r/20160226074940.GA28911@pd.tnic
Cc: stable@vger.kernel.org
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
v1â€¦v2: A more verbose commit as message.

 arch/x86/kernel/fpu/signal.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kernel/fpu/signal.c b/arch/x86/kernel/fpu/signal.c
index 61a949d84dfa5..d99a8ee9e185e 100644
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@ -344,10 +344,10 @@ static int __fpu__restore_sig(void __user *buf, void __user *buf_fx, int size)
 			sanitize_restored_xstate(tsk, &env, xfeatures, fx_only);
 		}
 
+		local_bh_disable();
 		fpu->initialized = 1;
-		preempt_disable();
 		fpu__restore(fpu);
-		preempt_enable();
+		local_bh_enable();
 
 		return err;
 	} else {
-- 
2.19.1
