Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:35:00 -0000
Received: from icoremail.net (unknown [209.85.214.174])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn3_wqDvNbgP_ZAQ--.56370S3;
	Tue, 20 Nov 2018 03:25:30 +0800 (CST)
Received: from mail-pl1-f174.google.com (unknown [209.85.214.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHLkolDvNbyOBZAA--.3398S3;
	Tue, 20 Nov 2018 03:25:25 +0800 (CST)
Received: by mail-pl1-f174.google.com with SMTP id a14so10438888plm.12
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 11:25:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:sender:precedence:list-id;
        bh=g/OuywwHFEpwbTCGenhgZ7vysLTbff7ypsHMhrj4ENk=;
        b=UmgpXaQ1zmuDFIQ52dMHduXuhMTKtDqKCbaB7xzbeBeYSER6AwRwFBn1/NNZKkeKIo
         qSeZMCAJnV8+zmuB3UaZJBioI7mL+9DaqXbPg9sBnyFPnoqhL6lnjXSDI+4Me6pxj3ZN
         iiKsV2Q2G6vu0ylxV3okIVYfyud6+JcM1/DYrNWJFSHwd6NYAHPxCVdIUV8mdtieQxrc
         A+Xcbo5g02puWpkRSB5uWWBekZ4HqvNTfZjylO+NERGfmqrrmsOqDUcYN2+N/YezZRdj
         OybDDENgwR0bdkmoLfVmSKYWf3j+lLy7JMVjsOH4SuhUCv0mMfTUn4ki8gszV2E/uDn4
         w5Sg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLf6THnQFtVX78P67ySLy0/gfe4giTxR+yWoNiGgeXf4C9PWnVL
	3zqatGNLQBx0vZA75yQKRgf9mLBYtz0UJ+ex1xwOFVYT7gO4owA=
X-Received: by 2002:a17:902:bd46:: with SMTP id b6mr23517377plx.231.1542655525257;
        Mon, 19 Nov 2018 11:25:25 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3078547pju;
        Mon, 19 Nov 2018 11:25:24 -0800 (PST)
X-Google-Smtp-Source: AFSGD/VnZs+scETevOdfQAY6wA4qR8pu/kGVSuINLjpN0Uls3blcTg+eY3FLr3Almmp6Rzb1Ofwn
X-Received: by 2002:a17:902:142:: with SMTP id 60mr9043565plb.330.1542655524209;
        Mon, 19 Nov 2018 11:25:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542655524; cv=none;
        d=google.com; s=arc-20160816;
        b=EMQ0VfzUxlXLeUG3yl9Zswfb4ov9N38WtCiazANUJwjpFvjvhWzaRM5DIedi9i0a2z
         4R/0Kqrwa3ePkHts4ya/HqJ8gcOJfm0xQFvAKKWVIqP6jk3NLhSZZ9PLIvdT5aUD2WGK
         wyPTa9TsahPM4mtp39vQiEDrQDOHKD4q35Qx0tnzy4o/bxNm67s6vNwhoK502aCpRpXe
         trbU/blnzvnm8vg1StcEmK7ribs+8YWSbyCW58RWxDk2CHLFS2BIFX2yeDGeGdENtvI4
         bbDLxUjBszZv3sQrCx9OWZxxhAAw5EHf/Gr5y7sx5ny//RAX7PV9NbSrLaJKtZee5Ni9
         TDLA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version;
        bh=g/OuywwHFEpwbTCGenhgZ7vysLTbff7ypsHMhrj4ENk=;
        b=FgOhKbdkgBQuJGurXTZa6Fk/lcc2a/8rSJ9KSdvxXTRu6pAdma9m6rLUkOFo9Sb4Ll
         P7GqJMkut5Fo9xcdrplq8M0aX8WOJJs/roSeoIwW6gTpV8eo5BraJCyopsrSoo4AuvZ+
         EUizGkyBAIKeGUTYC4xzohPvGvZ4U+U57W1bmGB9lCqcJ6bzMOboefqgtXLjNjC/m3gJ
         TgR1voJOqkEsKZL6R9VsybMYVAd8Z0NuWJalWQe7qV3ymefbXtIsHThQXFLYDml9c0ab
         rw68+cHHWTKa6pQiPJ67lNJoTRaZD0Mq58F9hhqkiJpDCDD+sbZopuiIaMmxl8KCWN59
         /x+g==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id v19si2020435pgl.30.2018.11.19.11.25.07;
        Mon, 19 Nov 2018 11:25:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730030AbeKTFuD (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 00:50:03 -0500
Received: from mail-vs1-f66.google.com ([209.85.217.66]:42193 "EHLO
        mail-vs1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725987AbeKTFuD (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 00:50:03 -0500
Received: by mail-vs1-f66.google.com with SMTP id b74so18442795vsd.9;
        Mon, 19 Nov 2018 11:25:01 -0800 (PST)
X-Received: by 2002:a67:b60d:: with SMTP id d13mr6491846vsm.152.1542655500613;
 Mon, 19 Nov 2018 11:25:00 -0800 (PST)
MIME-Version: 1.0
References: <20181113131508.18246-1-geert+renesas@glider.be> <12064722-6e85-c40c-12c9-7c7d4e1e2677@redhat.com>
In-Reply-To: <12064722-6e85-c40c-12c9-7c7d4e1e2677@redhat.com>
From: Geert Uytterhoeven <geert@linux-m68k.org>
Date: Mon, 19 Nov 2018 20:24:48 +0100
Message-ID: <CAMuHMdV8UXPVMcQx17rwVrnQ8XnE6jhproTwO4SY=WnPT+2Hyg@mail.gmail.com>
Subject: Re: [PATCH v5] vfio: platform: Add generic reset controller support
To: Auger Eric <eric.auger@redhat.com>
Cc: Geert Uytterhoeven <geert+renesas@glider.be>,
        Alex Williamson <alex.williamson@redhat.com>,
        Philipp Zabel <p.zabel@pengutronix.de>,
        KVM list <kvm@vger.kernel.org>,
        Linux-Renesas <linux-renesas-soc@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHLkolDvNbyOBZAA--.3398S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Ar1DZF47XrWrJr1UCw4kJFb_yoWxur4fpF
	WUGFW3tFWkGryUtw42vw4UZFWYvF43tw1UKr9xKw12k3s8Zr98Jr9YkF1Fyas7Ar18Ca4Y
	yF47GF48uFyY9FJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6rWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY6I8E
	87Iv6xkF7I0E14v26rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082
	I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4l
	x2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrw
	CI42IY6xAIw20EY4v20xvaj40_Wr1j6rW3JrUvcSsGvfC2KfnxnUUI43ZEXa7IUoFksPUU
	UUU==

Hi Eric,

On Mon, Nov 19, 2018 at 11:52 AM Auger Eric <eric.auger@redhat.com> wrote:
> On 11/13/18 2:15 PM, Geert Uytterhoeven wrote:
> > Vfio-platform requires dedicated reset support, provided either by ACPI,
> > or, on DT platforms, by a device-specific reset driver matching against
> > the device's compatible value.
> >
> > On many SoCs, devices are connected to an SoC-internal reset controller.
> > If the reset hierarchy is described in DT using "resets" properties, or
> > in lookup tables in platform code, and devices have exactly one
> > dedicated reset each, such devices can be reset in a generic way through
> > the reset controller subsystem.  Hence add support for this, avoiding
> > the need to write device-specific reset drivers for each single device
> > on affected SoCs.
> >
> > Devices that do require a more complex reset procedure can still provide
> > a device-specific reset driver, as that takes precedence.
> >
> > Note that this functionality depends on CONFIG_RESET_CONTROLLER=y, and
> > becomes a no-op (as in: "No reset function found for device") if reset
> > controller support is disabled.
> >
> > Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
> > Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
> > Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
> > ---
> > This depends on "[PATCH] reset: Add reset_control_get_count()"
> > (https://lore.kernel.org/lkml/20181113124744.7769-1-geert+renesas@glider.be/).
> >
> > v5:
> >   - Use reset_control_get_exclusive() instead of rejected
> >     reset_control_get_dedicated(), as exclusive already implies a
> >     dedicated reset line,
> >   - Ensure the device has exactly one reset,
> >
> > v4:
> >   - Add Reviewed-by,
> >   - Use new RFC reset_control_get_dedicated() instead of
> >     of_reset_control_get_exclusive(), to (a) make it more generic, and
> >     (b) make sure the reset returned is really a dedicated reset, and
> >     does not affect other devices,
> >
> > v3:
> >   - Add Reviewed-by,
> >   - Merge similar checks in vfio_platform_has_reset(),
> >
> > v2:
> >   - Don't store error values in vdev->reset_control,
> >   - Use of_reset_control_get_exclusive() instead of
> >     __of_reset_control_get(),
> >   - Improve description.
> > ---
> >  drivers/vfio/platform/vfio_platform_common.c  | 29 +++++++++++++++++--
> >  drivers/vfio/platform/vfio_platform_private.h |  1 +
> >  2 files changed, 28 insertions(+), 2 deletions(-)
> >
> > diff --git a/drivers/vfio/platform/vfio_platform_common.c b/drivers/vfio/platform/vfio_platform_common.c
> > index c0cd824be2b767be..ce2aad8e0a8159f9 100644
> > --- a/drivers/vfio/platform/vfio_platform_common.c
> > +++ b/drivers/vfio/platform/vfio_platform_common.c
> > @@ -18,6 +18,7 @@
> >  #include <linux/module.h>
> >  #include <linux/mutex.h>
> >  #include <linux/pm_runtime.h>
> > +#include <linux/reset.h>
> >  #include <linux/slab.h>
> >  #include <linux/types.h>
> >  #include <linux/uaccess.h>
> > @@ -113,11 +114,14 @@ static bool vfio_platform_has_reset(struct vfio_platform_device *vdev)
> >       if (VFIO_PLATFORM_IS_ACPI(vdev))
> >               return vfio_platform_acpi_has_reset(vdev);
> >
> > -     return vdev->of_reset ? true : false;
> > +     return vdev->of_reset || vdev->reset_control;
> >  }
> >
> >  static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
> >  {
> > +     struct reset_control *rstc;
> > +     int count;
> > +
> >       if (VFIO_PLATFORM_IS_ACPI(vdev))
> >               return vfio_platform_acpi_has_reset(vdev) ? 0 : -ENOENT;
> >
> > @@ -128,8 +132,24 @@ static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
> >               vdev->of_reset = vfio_platform_lookup_reset(vdev->compat,
> >                                                       &vdev->reset_module);
> >       }
> > +     if (vdev->of_reset)
> > +             return 0;
> > +
> > +     /* Generic reset handling needs a single, dedicated reset line */
> > +     count = reset_control_get_count(vdev->device);
> > +     if (count < 0)
> > +             return count;
> > +
> > +     if (count != 1)
> > +             return -EINVAL;
> >
> > -     return vdev->of_reset ? 0 : -ENOENT;
> > +     rstc = reset_control_get_exclusive(vdev->device, NULL);
>
> So I understand the semantics of reset_control_get_exclusive() is now
> agreed and this means the reset line is not shared with other devices,
> correct?

Yes, it has been clarified that the intended semantics of an exclusive
reset are that the reset line is not shared with other devices.
However, currently the reset controller subsystem does not enforce this.

Given the clarification, this is something to fix in the reset
controller subsystem, and thus orthogonal to this vfio patch.
My patch "[PATCH v3] reset: Exclusive resets must be dedicated to a
single hardware block"
(https://lore.kernel.org/lkml/20181113133520.20889-1-geert+renesas@glider.be/)
is meant to fix this.

> A question about the usage of reset_control_get_count(). Why is it an
> issue if the count is > 1? Does it check there are several reset lines,
> each of then being used for resetting something different or does it
> check there are several reset controllers are able to do the reset job?
> My point behind is what's the issue as long as one non shared line can
> be grabbed with reset_control_get_exclusive().

A device may have multiple resets[*].  If this is the case, a specific
procedure (e.g. reset order) may be needed to reset the device fully.
Assuming that just asserting the first reset will do the job may lead
to failure.
Hence the generic method, which is the target of my patch, should only
be applied for devices with a single reset.
Devices that do require a more complex reset procedure can still provide
a device-specific reset driver, as that takes precedence.

[*] git grep "\<resets\>.*=.*," -- "*dts*" gives +200 hits.

> > +     if (!IS_ERR(rstc)) {
> > +             vdev->reset_control = rstc;
> > +             return 0;
> > +     }
> > +
> > +     return PTR_ERR(rstc);
> >  }
> >
> >  static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
> > @@ -139,6 +159,8 @@ static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
> >
> >       if (vdev->of_reset)
> >               module_put(vdev->reset_module);
> > +
> > +     reset_control_put(vdev->reset_control);
>
> Most of the drivers use devm_reset_control_get_exclusive(), can't we use
> that instead and benefit from the fact the reset_control_put() is called
> automatically on driver detach?

Yes, we could use devm_reset_control_get_exclusive() instead.
Given we still need manual release of a device-specific reset_module,
and a manual call to vfio_iommu_group_put(), it wouldn't simplify the error
and removal path much, though, and even lead to confusion.

Gr{oetje,eeting}s,

                        Geert

-- 
Geert Uytterhoeven -- There's lots of Linux beyond ia32 -- geert@linux-m68k.org

In personal conversations with technical people, I call myself a hacker. But
when I'm talking to journalists I just say "programmer" or something like that.
                                -- Linus Torvalds
