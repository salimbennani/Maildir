Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:32:51 -0000
Received: from icoremail.net (unknown [209.85.214.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv95RRfVbUIrHAQ--.58229S3;
	Wed, 21 Nov 2018 19:45:22 +0800 (CST)
Received: from mail-pl1-f181.google.com (unknown [209.85.214.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3WERORfVbdTZjAA--.281S3;
	Wed, 21 Nov 2018 19:45:18 +0800 (CST)
Received: by mail-pl1-f181.google.com with SMTP id y6-v6so5203335plt.3
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 03:45:18 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:sender:precedence:list-id;
        bh=ylCHwBAJTmPIaOdxe6D4qpf2xk7cxDYmrUoJdcdixoc=;
        b=qu6sk1Yja61P5L943UOBVIyFCyDOfiAlckoyJAzo76f0IEqpq/tecQnCTJkXAphLFO
         ES2LZvmf7af5CQPOOl9lsk/Dca/yylhimfeQlSeitStac+XjmlAvJliTDXt+7305fKt9
         rLfPSijq2l+T5YPZCXIHZCua+Npi8OLheclh8cutdwYUUkxl4PjUNhMQDf6LikvsKp5G
         C01N2ZoqBL+mZe3R9L837JjbrPt3KGJlXShyd8b8+sCGOm3iiY3LhNGbbvXhrs6y0aGO
         tH+UeCBSjwJt2+Y4CxYKIaxkRcFC9dKZd5ZJvU8WSBXBQKr4sZFVX1NB0Mdf8/yBQL70
         OFww==
X-Gm-Message-State: AA+aEWb5dgrchTIyDfLNHHLK861JKTT3yhwkgUHoRPcyCr1pm8SKBcUf
	NePRgMqJBIBm9/m8hlC9/aOk5W6APiDhG/IQ1IZEYcKghT0RAOQ=
X-Received: by 2002:a17:902:7e44:: with SMTP id a4mr6468689pln.338.1542800718140;
        Wed, 21 Nov 2018 03:45:18 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1835095pju;
        Wed, 21 Nov 2018 03:45:17 -0800 (PST)
X-Google-Smtp-Source: AFSGD/XafTS/91EJKdOiqruTshcvAkM0E6RIPrksJFNlmdrgQrCw9PFbKfWKT4iWtlgPD85Pn1zb
X-Received: by 2002:a17:902:6b82:: with SMTP id p2-v6mr6540691plk.50.1542800717421;
        Wed, 21 Nov 2018 03:45:17 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542800717; cv=none;
        d=google.com; s=arc-20160816;
        b=OLO01nkBDKHtVKyhzbezfutCQnAZTAehbzzJdEEiLzMNhM1HHMIc2sSM0Zfi8Cayhy
         R1HtHLlQOxhJgV2L6z4+agydApDs9OPqjSP34yjMgyvBagaByI3QvNwtZbqQVaRQ3jDg
         0VdyKTxG10HC7xJk862WDtPFzdcXzO2vGKdXtTVNNL/OXXP4LeAgfC/oKeFmrPmdtGbh
         BXjYPql1N2rfsgB04/XG/V8ntYp+blrpmEEyu/HCDD1f6Zjhmkdp1eorv7qJS1rfYDmP
         SO7GlAZ61mIG5c2GHl4B+88nJqqEXyrWsbDAjqWsb8LxdgErEzGeH9HFgONBGnDrrY9t
         UxUA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dkim-signature;
        bh=ylCHwBAJTmPIaOdxe6D4qpf2xk7cxDYmrUoJdcdixoc=;
        b=ZiYZZPr/OmBX6fs5O0COJX3wiUBbEj3qpQIYNH1LjuQ9fleaMgcqm2HBUpLbHfV4c0
         SzSntKWw82Z8/E0Ne6gLsAjTtzkU1KDcPDnjZnQ8ZnsByD+SGZftzXiwAGd6U7/DiKRH
         MjQQCz23pxl9mYZEBHNQbRuEm75+ZoWo2c6RpV/NUi/tP1wo0+2sfcFJF7RQSHwv5DUU
         WQ8Uao9Q5i0VmLe3ZtSBLk3keR1AUcU28s22+RsFW/43545jd6bgeaL6eAJGrDO3i15O
         o7JSKQFXvki0YxfCug+yqVDRjO+ltPRStyUeDxDQQxLFqi+ksoTI6Y5ZVj0ZdwZ5spWG
         zVGQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=dE+70IAL;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b60si9252352plc.95.2018.11.21.03.45.02;
        Wed, 21 Nov 2018 03:45:17 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730270AbeKUWEU (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Wed, 21 Nov 2018 17:04:20 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:38555 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729179AbeKUWET (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 17:04:19 -0500
Received: by mail-pl1-f194.google.com with SMTP id e5so5146358plb.5
        for <linux-kernel@vger.kernel.org>; Wed, 21 Nov 2018 03:30:17 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=ylCHwBAJTmPIaOdxe6D4qpf2xk7cxDYmrUoJdcdixoc=;
        b=dE+70IALVpR1aU8LFaUxI3u+s7wupMAQa3upaWdKnXgbxVyFfxyKO//GRnBuegoZ2Y
         RzbauJitgakVMQAezGHkgD+KFKpz1s+CJS2ltSbksoxKCx1wsYd8HAo22mXzK5329dcc
         BiJNqqCZ9X+jZYsetmrUjx1nJdsr5tzxoUlWPyYEljRnCGmuAxQ4fWyVUoG2yjIdQzLu
         BoMW2qY/deUCW2t4y6lqscI2ZDppauzhIAwiNz/DDlTfPXplzT6wnNzvg7L1/a2nZh7n
         UETEshCdL/CxujxniADeidHs34S5/Wg/0do6o98t/J92hGSAcgK0joD2dfjnHImykACG
         Znlg==
X-Received: by 2002:a63:ce50:: with SMTP id r16mr5569991pgi.217.1542799817296;
        Wed, 21 Nov 2018 03:30:17 -0800 (PST)
Received: from dest.didichuxing.com ([203.100.54.194])
        by smtp.gmail.com with ESMTPSA id t13sm90753952pgr.42.2018.11.21.03.30.14
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 21 Nov 2018 03:30:16 -0800 (PST)
From: ufo19890607@gmail.com
To: akpm@linux-foundation.org, mhocko@suse.com, rientjes@google.com,
        kirill.shutemov@linux.intel.com, aarcange@redhat.com,
        penguin-kernel@i-love.sakura.ne.jp, guro@fb.com,
        yang.s@alibaba-inc.com
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        yuzhoujian@didichuxing.com
Subject: [PATCH v15 2/2] Add oom victim's memcg to the oom context information
Date: Wed, 21 Nov 2018 19:29:59 +0800
Message-Id: <1542799799-36184-2-git-send-email-ufo19890607@gmail.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1542799799-36184-1-git-send-email-ufo19890607@gmail.com>
References: <1542799799-36184-1-git-send-email-ufo19890607@gmail.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3WERORfVbdTZjAA--.281S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZrykAw18tr4rZFWkAr4ruFg_yoW7Jw48p3
	Zay3W5Jws5AFWagF1fKa4qva4rZa1kK3W3C3srJw1fZrnxtw1DXF9Fyw1DAFW5uFy3trnr
	Xrn0kr18Gr4qy3JanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm0b7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1lnxkEFVAIw20F6c
	xK64vIFxWle2I262IYc4CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2Wl
	Yx0E2Ix0cI8IcVAFwI0_JrI_JrylYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7
	v_Jr0_Gr1lF7xvr2IYc2Ij64vIr41lw4CEc2x0rVAKj4xxMx02cVCv0xWlc7CjxVAKzI0E
	Y4vE52x082I5MxkIecxEwVCI4VW8KwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcV
	AFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAF
	wI0_Cr1j6rxdMxvI42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrw
	CF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC2
	0s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI
	0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVj
	vjDU0xZFpf9x07jKiifUUUUU=

From: yuzhoujian <yuzhoujian@didichuxing.com>

The current oom report doesn't display victim's memcg context during the
global OOM situation. While this information is not strictly needed, it
can be really helpful for containerized environments to locate which
container has lost a process. Now that we have a single line for the oom
context, we can trivially add both the oom memcg (this can be either
global_oom or a specific memcg which hits its hard limits) and task_memcg
which is the victim's memcg.

Below is the single line output in the oom report after this patch.
- global oom context information:
oom-kill:constraint=<constraint>,nodemask=<nodemask>,cpuset=<cpuset>,mems_allowed=<mems_allowed>,global_oom,task_memcg=<memcg>,task=<comm>,pid=<pid>,uid=<uid>
- memcg oom context information:
oom-kill:constraint=<constraint>,nodemask=<nodemask>,cpuset=<cpuset>,mems_allowed=<mems_allowed>,oom_memcg=<memcg>,task_memcg=<memcg>,task=<comm>,pid=<pid>,uid=<uid>

Signed-off-by: yuzhoujian <yuzhoujian@didichuxing.com>
---
 include/linux/memcontrol.h | 11 +++++++++--
 mm/memcontrol.c            | 33 ++++++++++++++++++++-------------
 mm/oom_kill.c              |  3 ++-
 3 files changed, 31 insertions(+), 16 deletions(-)

diff --git a/include/linux/memcontrol.h b/include/linux/memcontrol.h
index 7ab2120..83ae11c 100644
--- a/include/linux/memcontrol.h
+++ b/include/linux/memcontrol.h
@@ -526,9 +526,11 @@ unsigned long mem_cgroup_get_zone_lru_size(struct lruvec *lruvec,
 
 unsigned long mem_cgroup_get_max(struct mem_cgroup *memcg);
 
-void mem_cgroup_print_oom_info(struct mem_cgroup *memcg,
+void mem_cgroup_print_oom_context(struct mem_cgroup *memcg,
 				struct task_struct *p);
 
+void mem_cgroup_print_oom_meminfo(struct mem_cgroup *memcg);
+
 static inline void mem_cgroup_enter_user_fault(void)
 {
 	WARN_ON(current->in_user_fault);
@@ -970,7 +972,12 @@ static inline unsigned long mem_cgroup_get_max(struct mem_cgroup *memcg)
 }
 
 static inline void
-mem_cgroup_print_oom_info(struct mem_cgroup *memcg, struct task_struct *p)
+mem_cgroup_print_oom_context(struct mem_cgroup *memcg, struct task_struct *p)
+{
+}
+
+static inline void
+mem_cgroup_print_oom_meminfo(struct mem_cgroup *memcg)
 {
 }
 
diff --git a/mm/memcontrol.c b/mm/memcontrol.c
index 6e1469b..b860dd4 100644
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@ -1293,32 +1293,39 @@ static bool mem_cgroup_wait_acct_move(struct mem_cgroup *memcg)
 
 #define K(x) ((x) << (PAGE_SHIFT-10))
 /**
- * mem_cgroup_print_oom_info: Print OOM information relevant to memory controller.
+ * mem_cgroup_print_oom_context: Print OOM information relevant to
+ * memory controller.
  * @memcg: The memory cgroup that went over limit
  * @p: Task that is going to be killed
  *
  * NOTE: @memcg and @p's mem_cgroup can be different when hierarchy is
  * enabled
  */
-void mem_cgroup_print_oom_info(struct mem_cgroup *memcg, struct task_struct *p)
+void mem_cgroup_print_oom_context(struct mem_cgroup *memcg, struct task_struct *p)
 {
-	struct mem_cgroup *iter;
-	unsigned int i;
-
 	rcu_read_lock();
 
+	if (memcg) {
+		pr_info(",oom_memcg=");
+		pr_cont_cgroup_path(memcg->css.cgroup);
+	} else
+		pr_info(",global_oom");
 	if (p) {
-		pr_info("Task in ");
+		pr_cont(",task_memcg=");
 		pr_cont_cgroup_path(task_cgroup(p, memory_cgrp_id));
-		pr_cont(" killed as a result of limit of ");
-	} else {
-		pr_info("Memory limit reached of cgroup ");
 	}
-
-	pr_cont_cgroup_path(memcg->css.cgroup);
-	pr_cont("\n");
-
 	rcu_read_unlock();
+}
+
+/**
+ * mem_cgroup_print_oom_meminfo: Print OOM memory information relevant to
+ * memory controller.
+ * @memcg: The memory cgroup that went over limit
+ */
+void mem_cgroup_print_oom_meminfo(struct mem_cgroup *memcg)
+{
+	struct mem_cgroup *iter;
+	unsigned int i;
 
 	pr_info("memory: usage %llukB, limit %llukB, failcnt %lu\n",
 		K((u64)page_counter_read(&memcg->memory)),
diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index 2c686d2..6fd1ead 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -435,6 +435,7 @@ static void dump_oom_summary(struct oom_control *oc, struct task_struct *victim)
 			oom_constraint_text[oc->constraint],
 			nodemask_pr_args(oc->nodemask));
 	cpuset_print_current_mems_allowed();
+	mem_cgroup_print_oom_context(oc->memcg, victim);
 	pr_cont(",task=%s,pid=%d,uid=%d\n", victim->comm, victim->pid,
 		from_kuid(&init_user_ns, task_uid(victim)));
 }
@@ -449,7 +450,7 @@ static void dump_header(struct oom_control *oc, struct task_struct *p)
 
 	dump_stack();
 	if (is_memcg_oom(oc))
-		mem_cgroup_print_oom_info(oc->memcg, p);
+		mem_cgroup_print_oom_meminfo(oc->memcg);
 	else {
 		show_mem(SHOW_MEM_FILTER_NODES, oc->nodemask);
 		if (is_dump_unreclaim_slabs())
-- 
1.8.3.1
