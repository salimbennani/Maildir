Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:35:01 -0000
Received: from icoremail.net (unknown [209.85.215.179])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnXyeoDvNbhALaAQ--.38318S3;
	Tue, 20 Nov 2018 03:27:37 +0800 (CST)
Received: from mail-pg1-f179.google.com (unknown [209.85.215.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXPEilDvNbF+NZAA--.6761S3;
	Tue, 20 Nov 2018 03:27:33 +0800 (CST)
Received: by mail-pg1-f179.google.com with SMTP id z11so11629570pgu.0
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 11:27:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=2ffcji7ue/Hp1t56ByEEtf4/Un+Z9yLMJa/K23r0V5M=;
        b=C9WcV34Ohs7soKLTt+w+Y6xZdU7hR9XM6SZXRQd0kvTi+B49qWDEVnlIpQubNOrWAv
         dhXzmRBi+pEF7u5ePNZ2TU/30mB972KUgOOMp/+aY/7NmofJSVXitJxTkUyXbZny7j/u
         JbUCNK+N91TMpnRvTnsDIOONynbIWTuoBvbNwFvBC1XA7UitVK52aUt+hovKH0IWuVDV
         HUz5xLPbLuEG/Iz4SbHTBw1BCurDeYXB26+SV6iI2JikWJ6JFs19uFFIsfPfFxoMiwFT
         GfaeEZuFmhHy1Y0B3Jxzi2EqVEd66cfVT8t71UifSDsF7TFi7akzdJgTw2FnYSutMv2w
         RDXg==
X-Gm-Message-State: AGRZ1gLLi10t4RFBIUBzIc3xu6FBhfsmbmUWW1A1fmmDQG653dK6qlfs
	ri/T5Dlgn6WC/wtjpq2b1GgfvzXVAesypiqkg7CvUqb0O1LWcCE=
X-Received: by 2002:a62:5e83:: with SMTP id s125-v6mr24038638pfb.232.1542655652883;
        Mon, 19 Nov 2018 11:27:32 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3080620pju;
        Mon, 19 Nov 2018 11:27:32 -0800 (PST)
X-Google-Smtp-Source: AJdET5e46f9W/RYFpl6HFW+17CTY+T5MiMspidMHn5S62yC8NOZmYF/wcA3UqcoymaskZgOf6Sfh
X-Received: by 2002:a17:902:2867:: with SMTP id e94-v6mr23830673plb.317.1542655651974;
        Mon, 19 Nov 2018 11:27:31 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542655651; cv=none;
        d=google.com; s=arc-20160816;
        b=FhMmtC8AIyXjI9L4sPS/xAnfY6MInU7uM1BgzSYYQcN7W+7CtfcZeHqZATjfjluzNt
         h8CqEYS42d6RemycFELPKo7znE9yxJrGquN946i0upxZV1Ry/cMP8pawliAcc6dcD7cp
         sYpQ5YvtIV57Y77TcGtJsI208fgR4AmXRS3k8kB3Zr3pcx0ZePM4Z9pG49vM4BWNE9XO
         gw/u8tuvRNl4hKkkOsfN2fIedDmbxtLqjuOtuqB+KkgSLztTovMAX99pggQLlGJx/cam
         1BTbuLhizBLl56IrN6Ah7S8Y0YEfp32lWjNPPsS33Gj+we8/7ukOCMeFa7RNJVxvH/y+
         7Q9g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=2ffcji7ue/Hp1t56ByEEtf4/Un+Z9yLMJa/K23r0V5M=;
        b=L4VJszEstp9ijpT/c63Z56KLvIfrNmaJdBB3dHgkE6PYjz5TV9D/ZP1w23t4Rx6Efj
         reFD8BDCMSEllh5JVZ5r1+8c3aeHpUnfO1e/Ozu/e6z3/Wkd5p/VxPGeSnLVss+NVmw5
         3ey2Ef1zU89c6UmLGXI9IzL2w6Fm5Q8qngEY2MR0cyovzRCla+dzZSh5afPptMwzcQQx
         E76LIXA1+1rOrlvU+w/mAVAtQREGG7zz1J1vGgqSm7cCyDBVd050SYIKEEIIhu13xuUV
         JAISQVqcrANrgknlIHmUx5tcEWmr+PO3AcUeMZ0Cq7XVLRvpCTO5NlVIGOrv8lFsDuVR
         bvEg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@ziepe.ca header.s=google header.b=LvzdXXuv;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 37-v6si42952735ple.389.2018.11.19.11.27.16;
        Mon, 19 Nov 2018 11:27:31 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730137AbeKTFwH (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 00:52:07 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:34687 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726350AbeKTFwH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 00:52:07 -0500
Received: by mail-pl1-f193.google.com with SMTP id f12-v6so15059086plo.1
        for <linux-kernel@vger.kernel.org>; Mon, 19 Nov 2018 11:27:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ziepe.ca; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=2ffcji7ue/Hp1t56ByEEtf4/Un+Z9yLMJa/K23r0V5M=;
        b=LvzdXXuvmL5fUmhM6yyZTTPALf1vCGtJyXmdhJbPk97i+ZlbeVUy4iOYXXDO9SwHy9
         Gw9yV8Ami4AygT5rxImw7SGSBhVb1kmXEkZE75WtQvP8v45zqhFLk6Dmv/DHZ7VVSNId
         TMjoxv2yPIluRAHcA8O+Kws0RqNUUWxwFTvf8Ktqo0xGA2VrqeuBUxab3u3OY0037KZ2
         cKOG6Lne6BRXkd/b2pz6XjeHW+yKdfOIeD7yPYGdf/mKmfj6/JTlAKwqKIoKL80YWIg7
         liIhF9q5yAI9s8gP0hWHOBGFu7h2F9+KWkaDg7/i6agn0Gsk8lvChlcpoxRCDO9YJty/
         Y10w==
X-Received: by 2002:a17:902:a70b:: with SMTP id w11mr19521515plq.84.1542655624079;
        Mon, 19 Nov 2018 11:27:04 -0800 (PST)
Received: from ziepe.ca (S010614cc2056d97f.ed.shawcable.net. [174.3.196.123])
        by smtp.gmail.com with ESMTPSA id w5sm9126864pfn.89.2018.11.19.11.27.02
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 19 Nov 2018 11:27:03 -0800 (PST)
Received: from jgg by mlx.ziepe.ca with local (Exim 4.90_1)
        (envelope-from <jgg@ziepe.ca>)
        id 1gOpCI-0005Wy-63; Mon, 19 Nov 2018 12:27:02 -0700
Date: Mon, 19 Nov 2018 12:27:02 -0700
From: Jason Gunthorpe <jgg@ziepe.ca>
To: Jerome Glisse <jglisse@redhat.com>
Cc: Leon Romanovsky <leon@kernel.org>,
        Kenneth Lee <liguozhu@hisilicon.com>,
        Tim Sell <timothy.sell@unisys.com>, linux-doc@vger.kernel.org,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Zaibo Xu <xuzaibo@huawei.com>, zhangfei.gao@foxmail.com,
        linuxarm@huawei.com, haojian.zhuang@linaro.org,
        Christoph Lameter <cl@linux.com>,
        Hao Fang <fanghao11@huawei.com>,
        Gavin Schenk <g.schenk@eckelmann.de>,
        RDMA mailing list <linux-rdma@vger.kernel.org>,
        Zhou Wang <wangzhou1@hisilicon.com>,
        Doug Ledford <dledford@redhat.com>,
        Uwe =?utf-8?Q?Kleine-K=C3=B6nig?= 
        <u.kleine-koenig@pengutronix.de>,
        David Kershner <david.kershner@unisys.com>,
        Kenneth Lee <nek.in.cn@gmail.com>,
        Johan Hovold <johan@kernel.org>,
        Cyrille Pitchen <cyrille.pitchen@free-electrons.com>,
        Sagar Dharia <sdharia@codeaurora.org>,
        Jens Axboe <axboe@kernel.dk>, guodong.xu@linaro.org,
        linux-netdev <netdev@vger.kernel.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        linux-kernel@vger.kernel.org, Vinod Koul <vkoul@kernel.org>,
        linux-crypto@vger.kernel.org,
        Philippe Ombredanne <pombredanne@nexb.com>,
        Sanyog Kale <sanyog.r.kale@intel.com>,
        "David S. Miller" <davem@davemloft.net>,
        linux-accelerators@lists.ozlabs.org
Subject: Re: [RFCv3 PATCH 1/6] uacce: Add documents for WarpDrive/uacce
Message-ID: <20181119192702.GD4890@ziepe.ca>
References: <20181115085109.GD157308@Turing-Arch-b>
 <20181115145455.GN3759@mtr-leonro.mtl.com>
 <20181119091405.GE157308@Turing-Arch-b>
 <20181119091910.GF157308@Turing-Arch-b>
 <20181119104801.GF8268@mtr-leonro.mtl.com>
 <20181119164853.GA4593@redhat.com>
 <20181119182752.GA4890@ziepe.ca>
 <20181119184215.GB4593@redhat.com>
 <20181119185333.GC4890@ziepe.ca>
 <20181119191721.GC4593@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181119191721.GC4593@redhat.com>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXPEilDvNbF+NZAA--.6761S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Ar4fCFW5Jw1ftw17Aw15CFg_yoW7Ar48p3
	yrKF4UtF4DJrWayrnFvr1kurn5twn5JFW5WF95Zryakw1q9F97ZryFqa15uFsxWr4kJryY
	qF40vas7Zw4DA3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6rWlc2IjII80
	xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxV
	AFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E14v2
	6rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMx
	C20s026xCaFVCjc4AY6r1j6r4UMxCIbckI1I0E14v26r126r1DMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWrXVW8Jr1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxU
	dZ2-DUUUU

On Mon, Nov 19, 2018 at 02:17:21PM -0500, Jerome Glisse wrote:
> On Mon, Nov 19, 2018 at 11:53:33AM -0700, Jason Gunthorpe wrote:
> > On Mon, Nov 19, 2018 at 01:42:16PM -0500, Jerome Glisse wrote:
> > > On Mon, Nov 19, 2018 at 11:27:52AM -0700, Jason Gunthorpe wrote:
> > > > On Mon, Nov 19, 2018 at 11:48:54AM -0500, Jerome Glisse wrote:
> > > > 
> > > > > Just to comment on this, any infiniband driver which use umem and do
> > > > > not have ODP (here ODP for me means listening to mmu notifier so all
> > > > > infiniband driver except mlx5) will be affected by same issue AFAICT.
> > > > > 
> > > > > AFAICT there is no special thing happening after fork() inside any of
> > > > > those driver. So if parent create a umem mr before fork() and program
> > > > > hardware with it then after fork() the parent might start using new
> > > > > page for the umem range while the old memory is use by the child. The
> > > > > reverse is also true (parent using old memory and child new memory)
> > > > > bottom line you can not predict which memory the child or the parent
> > > > > will use for the range after fork().
> > > > > 
> > > > > So no matter what you consider the child or the parent, what the hw
> > > > > will use for the mr is unlikely to match what the CPU use for the
> > > > > same virtual address. In other word:
> > > > > 
> > > > > Before fork:
> > > > >     CPU parent: virtual addr ptr1 -> physical address = 0xCAFE
> > > > >     HARDWARE:   virtual addr ptr1 -> physical address = 0xCAFE
> > > > > 
> > > > > Case 1:
> > > > >     CPU parent: virtual addr ptr1 -> physical address = 0xCAFE
> > > > >     CPU child:  virtual addr ptr1 -> physical address = 0xDEAD
> > > > >     HARDWARE:   virtual addr ptr1 -> physical address = 0xCAFE
> > > > > 
> > > > > Case 2:
> > > > >     CPU parent: virtual addr ptr1 -> physical address = 0xBEEF
> > > > >     CPU child:  virtual addr ptr1 -> physical address = 0xCAFE
> > > > >     HARDWARE:   virtual addr ptr1 -> physical address = 0xCAFE
> > > > 
> > > > IIRC this is solved in IB by automatically calling
> > > > madvise(MADV_DONTFORK) before creating the MR.
> > > > 
> > > > MADV_DONTFORK
> > > >   .. This is useful to prevent copy-on-write semantics from changing the
> > > >   physical location of a page if the parent writes to it after a
> > > >   fork(2) ..
> > > 
> > > This would work around the issue but this is not transparent ie
> > > range marked with DONTFORK no longer behave as expected from the
> > > application point of view.
> > 
> > Do you know what the difference is? The man page really gives no
> > hint..
> > 
> > Does it sometimes unmap the pages during fork?
> 
> It is handled in kernel/fork.c look for DONTCOPY, basicaly it just
> leave empty page table in the child process so child will have to
> fault in new page. This also means that child will get 0 as initial
> value for all memory address under DONTCOPY/DONTFORK which breaks
> application expectation of what fork() do.

Hum, I wonder why this API was selected then..

> > I actually wonder if the kernel is a bit broken here, we have the same
> > problem with O_DIRECT and other stuff, right?
> 
> No it is not, O_DIRECT is fine. The only corner case i can think
> of with O_DIRECT is one thread launching an O_DIRECT that write
> to private anonymous memory (other O_DIRECT case do not matter)
> while another thread call fork() then what the child get can be
> undefined ie either it get the data before the O_DIRECT finish
> or it gets the result of the O_DIRECT. But this is realy what
> you should expect when doing such thing without synchronization.
> 
> So O_DIRECT is fine.

?? How can O_DIRECT be fine but RDMA not? They use exactly the same
get_user_pages flow, right? Can we do what O_DIRECT does in RDMA and
be fine too?

AFAIK the only difference is the length of the race window. You'd have
to fork and fault during the shorter time O_DIRECT has get_user_pages
open.

> > Really, if I have a get_user_pages FOLL_WRITE on a page and we fork,
> > then shouldn't the COW immediately be broken during the fork?
> > 
> > The kernel can't guarentee that an ongoing DMA will not write to those
> > pages, and it breaks the fork semantic to write to both processes.
> 
> Fixing that would incur a high cost: need to grow struct page, need
> to copy potentialy gigabyte of memory during fork() ... this would be
> a serious performance regression for many folks just to work around an
> abuse of device driver. So i don't think anything on that front would
> be welcome.

Why? Keep track in each mm if there are any active get_user_pages
FOLL_WRITE pages in the mm, if yes then sweep the VMAs and fix the
issue for the FOLL_WRITE pages.

John is already working on being able to detect pages under GUP, so it
seems like a small step..

Since nearly all cases of fork don't have a GUP FOLL_WRITE active
there would be no performance hit.

> umem without proper ODP and VFIO are the only bad user i know of (for
> VFIO you can argue that it is part of the API contract and thus that
> it is not an abuse but it is not spell out loud in documentation). I
> have been trying to push back on any people trying to push thing that
> would make the same mistake or at least making sure they understand
> what is happening.

It is something we have to live with and support for the foreseeable
future.

> What really need to happen is people fixing their hardware and do the
> right thing (good software engineer versus evil hardware engineer ;))

Even ODP is no pancea, there are performance problems. What we really
need is CAPI like stuff, so you will tell Intel to redesign the CPU??
:)

Jason
