Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:04:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5A29F580474;
	Thu, 22 Nov 2018 00:58:35 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 00:58:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUX7Jnx/rJ6AQ8/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+MRIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOM+lDr4nlpVYDtge+BRC2Ce/z1jNEmn370Ksn2OohCwHG2wkgEsoSvX?=
 =?us-ascii?q?TOsdr+KbofUeGrw6nTzTXMce5W2Snj54jMbxsspuuDXahtfsbL0kYvFh3Kjk6Q?=
 =?us-ascii?q?qYP7IjOVyPoCs2yA4upkVOKvjXQoqxt2ojS1wccskIbJi5sTx1vZ+yt5x4M1Ks?=
 =?us-ascii?q?e5SE59edOrDIFQuD2UOodoWM8iWHpntSAnwbMFoZ62ZDYGxIgjyhLFdvCKfZaE?=
 =?us-ascii?q?7gj+WOuSPTt0nnNodbCnixqs7UStzvfwW8q03VpQsyZIk9jBumoQ2xHX68WKTO?=
 =?us-ascii?q?Z28F271jaVzQ/T7/lJIUAqmqrfLJ4s2qAwlpUNvkTZBCP2m1v5jLWQdko6/uik?=
 =?us-ascii?q?8ePnYq/pppOENo90jB/xMrg2l8ChHeg1NhICU3WV9OiizrHv4E70TKlQgvA3kK?=
 =?us-ascii?q?TVqJXaKt4apq69DQ9VyIEj6xOnAjei0dQYm2QHLV1cdBKEkYfpIVfOL+78Dfum?=
 =?us-ascii?q?hFStnjFryO7cPrD6HJXNIWbMkK37cbZ+9UFc0gwzws5b555ODbEBOv3zVlfrtN?=
 =?us-ascii?q?PEFh85LxC0w+H/BdV514MeWnyADrWWMaPPqlKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z4PYnCiAvtmO1mZYWbrgtoZEWcFpAs+TPDwh12FSzJTZ2uyUL?=
 =?us-ascii?q?g65jE0E4+mCYbDRoawgL2Oxiu7H5tWZnxYBVCIC3vna4KEW/IUYiKIPsBhiiAE?=
 =?us-ascii?q?VaSmS4I51xGusxH1x6BkLurT/C0Ys5Xj2cNx5+3SkxEy6DN1A96c02GLU2F7gG?=
 =?us-ascii?q?cISyUq06B4pEx30k2D3rRgg/xECdxT4OtEXR0hNZ7cyOx6CMr+WhjbcdeLU1um?=
 =?us-ascii?q?RtSmATcsTtM+2dMOYkB9G8m8gRDHxSalH7gVl7mTDpwu7q3cx2TxJ9p6y3ve16?=
 =?us-ascii?q?kulV8mTtFLNW2nnKF/8QfTCpXNk0WYkaaqaKsd0DTM9GeF0WqBokVYXBRsXqXC?=
 =?us-ascii?q?WHAVflHWosjh5kPeU7+uDqwqPRZbxs6cNKRGcN3pgk9ARPf4JtveZWW9m2OzBR?=
 =?us-ascii?q?aNwrOBd47qe2Qb3CXAB0kIiQET/XCaNQcgAietuX7RDDtrFVj3eUPj7fF+qG+n?=
 =?us-ascii?q?Tk8z1wyFcldu16Sr9RIPhfyTUfUT3qkatycnsDh0GFe939TLC9uPvQZhfaNcYc?=
 =?us-ascii?q?8j71dDz27Wqwt9Ppm4JaB4mlEeaxh3v1/p1xhvFoVAkM0qrHQ2zApyKaOUyk9B?=
 =?us-ascii?q?eymf3ZDqPr3XK2/y/B+0Zq7S21He1suW+6gV5PQ5rVXjoB+mFk44/3p71NlV1m?=
 =?us-ascii?q?OW5o/WAwoKTZLxTkE3+gBgqLHefCY86J3b1H12Paavrz/NxsgmBO0myhanYddS?=
 =?us-ascii?q?K6eEFA70E80HCMmiMu0qm161bh0aOOBe7rI7P8Sjd/Gewq6kIP5gnC66jWRA+I?=
 =?us-ascii?q?180l+M+zBgReLS3pcFw+uX3g2IVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClMc2c+mZQCdb0bg0g1Xz0gXp2KomTG5zz?=
 =?us-ascii?q?Btjz4mtK6f0zHQzOT4cxoHPHVGRG1jjVfqPIi1gMoWXEmubwg1ihSl4Vz2yLRc?=
 =?us-ascii?q?pKR6N2PTW1tHfzDqL2F+Vau9rrqDY89V5JIoqylXS/m8YVaBR775ohsa1T7jHm?=
 =?us-ascii?q?REyDA6cTGqpov2nxhghG2BK3ZzqWLTedtsyhfH+NzcWflR0yIERCZikznXBVu8?=
 =?us-ascii?q?P96z8dWPjZjDseO+V2OnVpJNdynm1oeAtCq95W13DhyzhfGzmtv7EQck1S/3zc?=
 =?us-ascii?q?VlVSLNrBzkeInky7y6Mf57fklvHFL969B1GoZknosyhZEQ32MXhpGU/XoBjGfy?=
 =?us-ascii?q?Ps9X2aP4bHoRWzELx8TZ7xTi2E1mNniJ3Z72Vm2Bwst9YNm3emAW1Tg878xQCK?=
 =?us-ascii?q?eU8aZLnS16olejqQLRYP59nioSyPc06X4ahf0JtxQpzimHHr8SGkxYNzT2lxuU?=
 =?us-ascii?q?99C+sLlXZGG3fLi11Up+nsquAKuMow5CQ3b5ZoktHTVr4cphKlLM32b+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM3lt/KW8?=
 =?us-ascii?q?AhJCNzz6fcUT+iz2jaZFn8abxISvHpRnGjUWU5rkV/OoEDQOtfv5MwaCCiEzqn?=
 =?us-ascii?q?CeGbDHBw+Q9F9mr27TE5CsL3yYP2MWzdJmRBmAPkBfhB0UUS4+np44EACq2cPg?=
 =?us-ascii?q?fF145jAX+l73tB9Mxvh0OBn4V2fVvB2oZSssSJiDMBpW6RlP50XPPsyb8O1zBD?=
 =?us-ascii?q?tU/oG7oAyON2ybZBlIDWcTVUyfHF3jOriu5d/d8+mXHOa+Lv3OYamQpuxaTfuH?=
 =?us-ascii?q?2ZWv0o5+9TaWKsqPJmViD+E82kdbXXF5HNnZmywSSyMNkSLBddWbpBC6+i14tc?=
 =?us-ascii?q?2/9PXrWATy5YqAEbdSMNNv+wyojqeHLeKfmCF5KTNA3JMW2XDI0KQf3EIViyx2?=
 =?us-ascii?q?dzmiD7UAtS3OTKLRgKNXDAQbayR8NMRW9aI8wxJNNNXfitP00L54k/E0B01EVV?=
 =?us-ascii?q?znhsGme8gKL3uhO1PAAUaBLK6GKiHTw8HrfaO8TqVdg/9JtxKrozaUDU/iMi6H?=
 =?us-ascii?q?lznoTB2vNeBMjCeGPB1Roo29cxBtCXT9Q9LicBG0LNh3jTguy70umnzKLXIcMS?=
 =?us-ascii?q?R7c05Vsr2Q7CZYju9jFGBb8nVlLfeLmyCC4uncK5YWt+ZrAytum+Jb5nQ616Va?=
 =?us-ascii?q?7CVeSPNpnyvSq8Zko0u6nemX1jpnTB1Opy5LhY2Ru0ViPKTZ9p9YVnfF/BIC92?=
 =?us-ascii?q?OQCxsRqtthC93vvb1Qy9fVmKLyLjdC78zb/c8GC8fIL8KHNSlpDR28AyPSFhYE?=
 =?us-ascii?q?F2CDNXzWmEFc1vqV8y67tJ8//7H2lNIkS7JAVFEoCP4eQhBsBtBEKpZ6RTMpjK?=
 =?us-ascii?q?CWiOYM5Hy3th6XQ99V6MOUHsmOCOnifW7KxYJPYAEFlPahddwe?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAADObvZbh0O0hNFiHgEGBwaBUwcLA?=
 =?us-ascii?q?YJpgQIng3iUGYINFJcmgXMsAxABhECEDSI2Bw0BAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiQBgmIBAgMBAiAdAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcAYIBB?=
 =?us-ascii?q?Z5iPIodcIEvgnYBAQWHIggSeYp+gVc/hCOEfoMEglegBAcCghwEjw8YgVmFC4o?=
 =?us-ascii?q?kkECHYTCBLASCAn10BoI1CYISCQMXhzJvPYU/PjOBBQEBjRwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AnAADObvZbh0O0hNFiHgEGBwaBUwcLAYJpgQIng3iUGYI?=
 =?us-ascii?q?NFJcmgXMsAxABhECEDSI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBA?=
 =?us-ascii?q?gMBAiAdAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcAYIBBZ5iPIodcIEvgnY?=
 =?us-ascii?q?BAQWHIggSeYp+gVc/hCOEfoMEglegBAcCghwEjw8YgVmFC4okkECHYTCBLASCA?=
 =?us-ascii?q?n10BoI1CYISCQMXhzJvPYU/PjOBBQEBjRwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,264,1539673200"; 
   d="scan'208";a="52259397"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 00:58:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389877AbeKVTeC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 14:34:02 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:35907 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731706AbeKVTeC (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 14:34:02 -0500
Received: by mail-it1-f196.google.com with SMTP id c9so12834028itj.1
        for <linux-kernel@vger.kernel.org>; Thu, 22 Nov 2018 00:55:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=QUTvpgJrS8L+IA2wq7JwWDafJ+iU2B32UsdVCezpGlA=;
        b=AH1oKCIjGnpP4iY6NLTyLW6KSNgBW1/C15IwOEEntL9CkoRg4qgaswGQB8h3K5qS/3
         mAjaPPqXpClp0rbBya6FAajaOEVz0TmGcn9FMqHwMYXSPNg7q+GNoZ2IAWNK/bGyGpCI
         4jiESvB5PFqziIprel5ODFIk9W/rPFTyAsMS8=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=QUTvpgJrS8L+IA2wq7JwWDafJ+iU2B32UsdVCezpGlA=;
        b=f9N7hnJcAaF5KooxMwfAPl5xKYYHW8k6VyeztXteAPNfFN4isAfPj0ntLIquX34i6r
         8piQr7czdf93Q+ARFhYFnLjM+ym0U3I6fa0WDC0abP3Ch+q0e0LPxMl68Mv9LqegFmJa
         36qMXz+CHfOfCbgcF6rPLyAjJAHWLKkYNK6dLRCrV9QpP/h6gTNtE4Xi9mI2h6P/YG28
         gPzsV0k8Fo9NKawiNbIB/pDsTKr4Z8bquO1FU/jvhb8PQYE98xzG4FyrzW8Cu02Qy+PA
         wWDloj8gup/WKp/BIV+yl5HzFDZFfLhigGRfA7Saz6PBk0OuEKhEg5srSS4ngiRI84Uw
         wb3Q==
X-Gm-Message-State: AGRZ1gLRF3eMyxogpG/expJ7YFPhNI42xMRYV+owtAXYwKPZcNt9Anm9
        YMnPs4srU28iNNZYb30iJZIGByQ+M9XlfkPuuR4KqA==
X-Google-Smtp-Source: AFSGD/UZAYufP7FAJWyk5iRpMWcExtiTIVzmHk40FbvRjYpv4sDxl71jLh1Z2FpL6g1SZpVLYz7+hXK3IV6c7SXb3/w=
X-Received: by 2002:a24:edc4:: with SMTP id r187mr9681080ith.158.1542876929973;
 Thu, 22 Nov 2018 00:55:29 -0800 (PST)
MIME-Version: 1.0
References: <0DF8AA8C9CD0FB4ABF4E83674055F7E2D7FFCC@dggemi508-mbx.china.huawei.com>
In-Reply-To: <0DF8AA8C9CD0FB4ABF4E83674055F7E2D7FFCC@dggemi508-mbx.china.huawei.com>
From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Thu, 22 Nov 2018 09:55:18 +0100
Message-ID: <CAKv+Gu_fvcmAKMdj9RyR43ZWC7KQdqo4m=fwAHfN+7u-KXyEWw@mail.gmail.com>
Subject: Re: Re: [PATCH] arm64: crc: accelerated-crc32-by-64bytes
To: sunrui26@huawei.com
Cc: Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 22 Nov 2018 at 02:50, sunrui <sunrui26@huawei.com> wrote:
>
>
>
> On Sun, 18 Nov 2018 at 23:30, Rui Sun <sunrui26@huawei.com> wrote:
>
> >
>
> > add 64 bytes loop to acceleration calculation
>
> >
>
>
>
> Can you share some performance numbers please?
>
>
>
> Also, we don't need 64 byte, 32 byte and 16 byte code paths: just make th=
e 8 byte one a loop as well, and drop the 32 byte and 16 byte ones.
>
>
>
> --
>
>
>
> Consider of some processor has instruction N-way parallel function, with =
the increase of the data buf=E2=80=99s size, 64B loop will performance bett=
er than 16B loop.
>
>
>
> On the other hand, in the same environment I tested the 8B loop, which is=
 worse than the 16-byte loop.
>
>
>
> The test result is shown in the fellow excel(crc test result.xlsx) sheet1=
(64B loop) and sheet2(8B loop)
>

Maybe I phrased that wrong: if we add the 64-byte loop, there is no
need for a 32-byte block, a 16 byte block and a 8 byte block, since
they all use the same crc32x instruction. After the 64-byte loop, just
loop in the 8-byte sequence until the remaining data is less than 8
bytes.


>
>
> --
>
>
>
> > Signed-off-by: Rui Sun <sunrui26@huawei.com>
>
> > ---
>
> >  arch/arm64/lib/crc32.S | 54
>
> > ++++++++++++++++++++++++++++++++++++++++++++++----
>
> >  1 file changed, 50 insertions(+), 4 deletions(-)
>
> >
>
> > diff --git a/arch/arm64/lib/crc32.S b/arch/arm64/lib/crc32.S index
>
> > 5bc1e85..2b37009 100644
>
> > --- a/arch/arm64/lib/crc32.S
>
> > +++ b/arch/arm64/lib/crc32.S
>
> > @@ -15,15 +15,61 @@
>
> >         .cpu            generic+crc
>
> >
>
> >         .macro          __crc32, c
>
> > -0:     subs            x2, x2, #16
>
> > -       b.mi            8f
>
> > +
>
> > +64: cmp     x2, #64
>
> > +    b.lt    32f
>
> > +
>
> > +    adds    x11, x1, #16
>
> > +    adds    x12, x1, #32
>
> > +    adds    x13, x1, #48
>
> > +
>
> > +0 : subs    x2, x2, #64
>
> > +    b.mi    32f
>
> > +
>
> > +    ldp     x3, x4, [x1], #64
>
> > +    ldp     x5, x6, [x11], #64
>
> > +    ldp     x7, x8, [x12], #64
>
> > +    ldp     x9, x10,[x13], #64
>
> > +
>
>
>
> Can we do this instead, and get rid of the temp variables?
>
>
>
>     ldp     x3, x4, [x1], #64
>
>     ldp     x5, x6, [x1, #-48]
>
>     ldp     x7, x8, [x1, #-32]
>
>     ldp     x9, x10,[x1, #-16]
>
>
>
> > + CPU_BE( rev     x3, x3      )
>
> > + CPU_BE( rev     x4, x4      )
>
> > + CPU_BE( rev     x5, x5      )
>
> > + CPU_BE( rev     x6, x6      )
>
> > + CPU_BE( rev     x7, x7      )
>
> > + CPU_BE( rev     x8, x8      )
>
> > + CPU_BE( rev     x9, x9      )
>
> > + CPU_BE( rev     x10,x10     )
>
> > +
>
> > +    crc32\c\()x w0, w0, x3
>
> > +    crc32\c\()x w0, w0, x4
>
> > +    crc32\c\()x w0, w0, x5
>
> > +    crc32\c\()x w0, w0, x6
>
> > +    crc32\c\()x w0, w0, x7
>
> > +    crc32\c\()x w0, w0, x8
>
> > +    crc32\c\()x w0, w0, x9
>
> > +    crc32\c\()x w0, w0, x10
>
> > +
>
> > +    b.ne       0b
>
> > +    ret
>
> > +
>
> > +32: tbz     x2, #5, 16f
>
> > +    ldp     x3, x4, [x1], #16
>
> > +    ldp     x5, x6, [x1], #16
>
> > +CPU_BE( rev     x3, x3      )
>
> > +CPU_BE( rev     x4, x4      )
>
> > +CPU_BE( rev     x5, x5      )
>
> > +CPU_BE( rev     x6, x6      )
>
> > +    crc32\c\()x w0, w0, x3
>
> > +    crc32\c\()x w0, w0, x4
>
> > +    crc32\c\()x w0, w0, x5
>
> > +    crc32\c\()x w0, w0, x6
>
> > +
>
> > +16: tbz     x2, #4, 8f
>
> >         ldp             x3, x4, [x1], #16
>
> >  CPU_BE(        rev             x3, x3          )
>
> >  CPU_BE(        rev             x4, x4          )
>
> >         crc32\c\()x     w0, w0, x3
>
> >         crc32\c\()x     w0, w0, x4
>
> > -       b.ne            0b
>
> > -       ret
>
> >
>
> >  8:     tbz             x2, #3, 4f
>
> >         ldr             x3, [x1], #8
>
> > --
>
> > 1.8.3.1
>
> >
>
>
