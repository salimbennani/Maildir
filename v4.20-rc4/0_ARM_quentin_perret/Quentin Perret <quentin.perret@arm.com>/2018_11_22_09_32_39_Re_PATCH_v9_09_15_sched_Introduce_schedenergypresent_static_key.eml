Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:04:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4D2AA580332;
	Thu, 22 Nov 2018 01:32:52 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 01:32:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjsoVJBeDeiVu1tCgWR7X13gzlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YxCN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX/uozKbWyzXDc/JW2THg44bSbB8hu+uMUqxsccHMzkQvDh7FgUuW?=
 =?us-ascii?q?qYz5PjOV0P4Bs3CF4Op6T+KglXInphprrTi1w8cgkJXGhoUQyl3d8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpFIFcuzyUOodoWM8uXmJltDogxrAHu5O3ZDYGxIklyhLFdvCKfJSE?=
 =?us-ascii?q?7gj+WOqNPDt0nnBodK65ih2v60av0Pf8WdOx0FtSripKjN3MtncV2hzN5ciIVO?=
 =?us-ascii?q?F98l2i2TmRzQDT7P9LIUQumarcMZ4hzaY8lpsVsUvdAi/7gFv6gLOSe0k+5+Sl?=
 =?us-ascii?q?5frrbq/7qpKfK4N4kADzP6Y2lsy6G+s4MwwOX2aB+eS70b3u5Un5QLRMjv0rna?=
 =?us-ascii?q?jVqZPaKtoBpq6/HQBV1p8v6xGxDjegztsYh2IKLExKeB2ZlYjlIVLOL+7iDfe5?=
 =?us-ascii?q?nVuslC1nx/fcPr3uGpnNNGTMkK/9fbZh7E5R0A4zzdFc551KEL0AL+/zV1T1tN?=
 =?us-ascii?q?zZCB85LgO1z/zmCNV7yoMRR2aPDrWFP6PVtF+C/vgvLPWUZI8JpDb9LOAo5/70?=
 =?us-ascii?q?gn84hV8SZ66p0YEXaHClBPtmJUqZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYKsFZ3DSZy1gLydwCe7GYVbZmJBCl+SC3vodIKEW/EKaCKVOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVVW50hW?=
 =?us-ascii?q?MIRzg13Kxlu0xy0FWD3LN8g/xZE9xT+vxIXh07NZ7a0+x1FdTyVhjdcdeOTVas?=
 =?us-ascii?q?Ws+mDi0pTtIt398OZF5wG9a4gRDFxSaqB74VmKaNBJw76a/c23nxJ8Bgy3fJzq?=
 =?us-ascii?q?Uhjl8mQtdROm2inKJw6w/TB4vRmUWDi6mqbbgc3DLK9Gqb0GWBpl9YXxBqXaXF?=
 =?us-ascii?q?R38fYFDWosr/5k/FS7+uCrEnMg9axM6GK6tKbMDpjFpcSPfiPtTef3y+m2OqCR?=
 =?us-ascii?q?mUwbOMaZLge38B0yXFFEgEjwcT8G6bOgckGCeuvXjSDDx0GlLpeEPj7+9+pWi/?=
 =?us-ascii?q?Tk81yQGKckJg26C0+h4TmfyTVfcT0qgYtycmrjV+BEy90M7OC9qcuwphe71RYc?=
 =?us-ascii?q?884FdC0mLZqwx9P5y6I6B+nFIedB53v0fv1xVxBYVNiswqrHIszApvJqOUylJB?=
 =?us-ascii?q?dzWE3Z/uPr3bMHX9/Beqa6TOwFHRzM6W+rsT6PQ/s1jspgWpGVQt8np509hZyW?=
 =?us-ascii?q?CT5ojXAwUIV5LxUUE39wZhqrHeYyk94Z7U1HJ2Pam1tD/Cx8wmBO8/xhm8eNdf?=
 =?us-ascii?q?NbuOFBXuHM0CG8iuNOsqlkCpbxIZJuxd6LQ4PsKmd/Sc3q6rM/1tnDanjWRB/Y?=
 =?us-ascii?q?B83ViA9yt6Su7UwZkFx+uU0ReAVzf5lF2hqNz4mZhYZTEOGWqy0TLkBI9NaaJo?=
 =?us-ascii?q?Z4YEFGCuL9exxtpgnZ7tWmdU+0K5CFMCxcCmZwCSb1v73QBL0UQXoHqnmTa3zj?=
 =?us-ascii?q?BukjEpqLaf0zLKw+j4aBUHPWtLTnF4jVjwOYi0k8waXE+wYgkplRup/0b7y7JA?=
 =?us-ascii?q?pKRiKWneWkNIfynwL2F/Xaq8rLuCY8hT6Jw2tSVbSvizYVefSrTluRsVzzvjH3?=
 =?us-ascii?q?dCxDA8bzyquI/2nwZ5iGKeK3Z/tmHZdttzxRfc5dzcQ+Be3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XnEAcg1i/3zd?=
 =?us-ascii?q?tqVSTOrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXoOXzELwsTZ4Aj42EJ5KHKJyJn0VnGcwstnetm7bXka2iM778BWFq?=
 =?us-ascii?q?iU6KZIkjdyolq9tQjRe+Ryni8Byfsy734Xm+QJuAsuziqHGLwTE1dXPTfwlxuW?=
 =?us-ascii?q?9dCxt7tYZHygcbWr0Ep+nNahDKyNow1GWXb5fIsiEjF07sllLF3M13jz4Jn+eN?=
 =?us-ascii?q?bMddITqgGUkxDYguhJL5Ixk+AGhCt9NmL7oH0l0PU7jR110JG+vYiHLXht/a2j?=
 =?us-ascii?q?Dh5ZMD31e90c+jX3galCmcaW2pilHo99FTUTQJvoUfWoHSoJuvv9MAaOFCA8pm?=
 =?us-ascii?q?2fGbrCBgKf7EZmr3TSE5GkLX2XJX8Zzcl8SxmZPkBQnAcUXDAilJ4jCg+q3NDh?=
 =?us-ascii?q?cFt+5j0J5F73sB5MxfxzNxXlTmfTvgSoaio3SJiCKhpZ9BpC6lzRMcyf6OJzAi?=
 =?us-ascii?q?5Z8oegrAyLNmyUeQBIAXsVVUyDAlDpJqOu6sXY8+iEGuq+KOPDYLWJqexDTveI?=
 =?us-ascii?q?2Iig0o188zaXMcWPOHZiAuY/2kpCW3B5BsvYly8OSywRiyLCccqbqA2g9S1wq8?=
 =?us-ascii?q?C16O7rVx735YuTF7tSNs1i+xCojqeCNO6Qhyd5JSxb1pMWwn/Ix6YQ3EQPiyF1?=
 =?us-ascii?q?bDStFbUAtSjQTKPfgKNXDhgbaz9tO8tM9a4zwg5NOcvDgNPvyrF4luI1C0tCVV?=
 =?us-ascii?q?H5gM6peNcFI3ujO1LHHkqLMLWGKCbPw8H2Z6O8VLJRgP9Vtx22pTaUDUvjMi6f?=
 =?us-ascii?q?mDnuUhClKftMgz2DPBxCpIG9dQ5gCXTiTNLjcBG0LMV7giE2wbIqgHPHLmocMT?=
 =?us-ascii?q?l6c0NQobyc9yJYgvNjG2Nf6nppN/WLmyGc7+PAMJYZreNrAjhol+Jd+Hk7y6Fa?=
 =?us-ascii?q?7CdBRPx0nivdtt9vo1G8nemJxTpqSx5OqjdNhIKWskRuI6TZ9p9cWXna+BIB93?=
 =?us-ascii?q?mfCxMPp4gtNtq6g61Mx8KHpqPxLCxe6ducqdMRG8XOOuqGNnQ7OBbkETKSCxEK?=
 =?us-ascii?q?G22FL2ba0nVAnfeO93vdlpUgsJXw0M4XV7JdSF0zUOsXEF5oAPQLOpIxVTQhx+?=
 =?us-ascii?q?3IxPUU7Gaz+UGCDP5RuYrKA7fLWa3i?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AVAADQdvZbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2uNFosigg0Uki+Ed4IyAYhQIjUIDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYkAYJiAQIDAQIkEz8GCQEBChgJJQMMSAYYFoMGggIEAasTM4onjAmBV?=
 =?us-ascii?q?z+BEYMSilkCiH+XAwcCghwEjwQjCgKQfCyZTAOCCDMaI1CCbYImF44cPwEBgTY?=
 =?us-ascii?q?BAY0mAwEB?=
X-IPAS-Result: =?us-ascii?q?A0AVAADQdvZbh0O0hNFiHAEBAQQBAQcEAQGBUgYBAQsBg2u?=
 =?us-ascii?q?NFosigg0Uki+Ed4IyAYhQIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiA?=
 =?us-ascii?q?QIDAQIkEz8GCQEBChgJJQMMSAYYFoMGggIEAasTM4onjAmBVz+BEYMSilkCiH+?=
 =?us-ascii?q?XAwcCghwEjwQjCgKQfCyZTAOCCDMaI1CCbYImF44cPwEBgTYBAY0mAwEB?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="41863541"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 01:32:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2393507AbeKVULZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 15:11:25 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:43576 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2387669AbeKVULZ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 15:11:25 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id E11AB3622;
        Thu, 22 Nov 2018 01:32:44 -0800 (PST)
Received: from queper01-lin (queper01-lin.cambridge.arm.com [10.1.195.48])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id E701D3F5CF;
        Thu, 22 Nov 2018 01:32:40 -0800 (PST)
Date: Thu, 22 Nov 2018 09:32:39 +0000
From: Quentin Perret <quentin.perret@arm.com>
To: Peter Zijlstra <peterz@infradead.org>
Cc: rjw@rjwysocki.net, linux-kernel@vger.kernel.org,
        linux-pm@vger.kernel.org, gregkh@linuxfoundation.org,
        mingo@redhat.com, dietmar.eggemann@arm.com,
        morten.rasmussen@arm.com, chris.redpath@arm.com,
        patrick.bellasi@arm.com, valentin.schneider@arm.com,
        vincent.guittot@linaro.org, thara.gopinath@linaro.org,
        viresh.kumar@linaro.org, tkjos@google.com, joel@joelfernandes.org,
        smuckle@google.com, adharmap@codeaurora.org,
        skannan@codeaurora.org, pkondeti@codeaurora.org,
        juri.lelli@redhat.com, edubezval@gmail.com,
        srinivas.pandruvada@linux.intel.com, currojerez@riseup.net,
        javi.merino@kernel.org
Subject: Re: [PATCH v9 09/15] sched: Introduce sched_energy_present static key
Message-ID: <20181122093237.goxmr4p5l4h2izid@queper01-lin>
References: <20181119141857.8625-1-quentin.perret@arm.com>
 <20181119141857.8625-10-quentin.perret@arm.com>
 <20181121130822.GE2113@hirez.programming.kicks-ass.net>
 <20181121151444.t3zye5l5iycfni2s@queper01-lin>
 <20181122091715.6kvhcbgoqrd54nbs@queper01-lin>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181122091715.6kvhcbgoqrd54nbs@queper01-lin>
User-Agent: NeoMutt/20171215
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thursday 22 Nov 2018 at 09:17:16 (+0000), Quentin Perret wrote:
> On Wednesday 21 Nov 2018 at 15:14:45 (+0000), Quentin Perret wrote:
> > Hi Peter,
> > 
> > On Wednesday 21 Nov 2018 at 14:08:22 (+0100), Peter Zijlstra wrote:
> > > On Mon, Nov 19, 2018 at 02:18:51PM +0000, Quentin Perret wrote:
> > > 
> > > > +static void sched_energy_start(int ndoms_new, cpumask_var_t doms_new[])
> > > > +{
> > > > +	/*
> > > > +	 * The conditions for EAS to start are checked during the creation of
> > > > +	 * root domains. If one of them meets all conditions, it will have a
> > > > +	 * non-null list of performance domains.
> > > > +	 */
> > > > +	while (ndoms_new) {
> > > > +		if (cpu_rq(cpumask_first(doms_new[ndoms_new - 1]))->rd->pd)
> > > > +			goto enable;
> > > > +		ndoms_new--;
> > > > +	}
> > > 
> > > That seems quite ugly; can't you simply return a bool from
> > > build_perf_domains() ?
> > > 
> > > Something like the below, but less fugly ;-)
> > > 
> > > --- a/kernel/sched/topology.c
> > > +++ b/kernel/sched/topology.c
> > > @@ -299,7 +299,7 @@ static void destroy_perf_domain_rcu(stru
> > >  #define EM_MAX_COMPLEXITY 2048
> > >  
> > >  extern struct cpufreq_governor schedutil_gov;
> > > -static void build_perf_domains(const struct cpumask *cpu_map)
> > > +static bool build_perf_domains(const struct cpumask *cpu_map)
> > >  {
> > >  	int i, nr_pd = 0, nr_cs = 0, nr_cpus = cpumask_weight(cpu_map);
> > >  	struct perf_domain *pd = NULL, *tmp;
> > > @@ -365,7 +365,7 @@ static void build_perf_domains(const str
> > >  	if (tmp)
> > >  		call_rcu(&tmp->rcu, destroy_perf_domain_rcu);
> > >  
> > > -	return;
> > > +	return !!pd;
> > >  
> > >  free:
> > >  	free_pd(pd);
> > > @@ -373,6 +373,8 @@ static void build_perf_domains(const str
> > >  	rcu_assign_pointer(rd->pd, NULL);
> > >  	if (tmp)
> > >  		call_rcu(&tmp->rcu, destroy_perf_domain_rcu);
> > > +
> > > +	return false;
> > >  }
> > >  #else
> > >  static void free_pd(struct perf_domain *pd) { }
> > > @@ -2173,6 +2175,9 @@ void partition_sched_domains(int ndoms_n
> > >  	}
> > >  
> > >  #if defined(CONFIG_ENERGY_MODEL) && defined(CONFIG_CPU_FREQ_GOV_SCHEDUTIL)
> > > +	{
> > > +	bool has_eas = false;
> > 
> > That one wants to be declared '__maybe_unused' at the top of
> > partition_sched_domains() perhaps ? Just to avoid the { } section.
> > Hopefully the compiler will be smart enough to not use stack space for
> > it if not needed.
> > 
> > > +
> > >  	/* Build perf. domains: */
> > >  	for (i = 0; i < ndoms_new; i++) {
> > >  		for (j = 0; j < n && !sched_energy_update; j++) {
> > > @@ -2181,10 +2186,13 @@ void partition_sched_domains(int ndoms_n
> > >  				goto match3;
> > 
> > And we want to do 'has_eas = true' just before 'goto match3' here.
> > Otherwise we'll end up disabling EAS if we hit 'goto match3' for all
> > root domains.
> > 
> > >  		}
> > >  		/* No match - add perf. domains for a new rd */
> > > -		build_perf_domains(doms_new[i]);
> > > +		has_eas |= build_perf_domains(doms_new[i]);
> > >  match3:
> > >  		;
> > >  	}
> > > +
> > > +	sched_energy_set(has_eas);
> > > +	}
> > >  #endif
> > >  
> > >  	/* Remember the new sched domains: */
> > 
> > Other than that I guess that should work OK :-)
> 
> So I actually just came across your patch that does
> static_branch_{inc,dec} on sched_smt_present. Maybe I could do something
> similar here ?
> 
> How about something like the below (totally untested):
> 
> diff --git a/kernel/sched/topology.c b/kernel/sched/topology.c
> index 8f9dfea60344..10ac32a0dc2e 100644
> --- a/kernel/sched/topology.c
> +++ b/kernel/sched/topology.c
> @@ -298,6 +298,7 @@ static void destroy_perf_domain_rcu(struct rcu_head *rp)
>  
>         pd = container_of(rp, struct perf_domain, rcu);
>         free_pd(pd);
> +       static_branch_dec_cpuslocked(&sched_energy_present);
>  }
>  
>  static void sched_energy_start(int ndoms_new, cpumask_var_t doms_new[])
> @@ -421,6 +422,8 @@ static void build_perf_domains(const struct cpumask *cpu_map)
>         /* Attach the new list of performance domains to the root domain. */
>         tmp = rd->pd;
>         rcu_assign_pointer(rd->pd, pd);
> +       static_branch_inc_cpuslocked(&sched_energy_present);
> +
>         if (tmp)
>                 call_rcu(&tmp->rcu, destroy_perf_domain_rcu);
>  
> @@ -2246,7 +2249,6 @@ void partition_sched_domains(int ndoms_new, cpumask_var_t doms_new[],
>  match3:
>                 ;
>         }
> -       sched_energy_start(ndoms_new, doms_new);
>  #endif
>  
>         /* Remember the new sched domains: */
> 

Hmm, I went too fast, that's totally broken. But there's still something
we can do with static_branch_{inc,dec} I think. I'll come back later
with a better solution.

Sorry for the noise :/
