Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 10:59:14 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3yRQ6_Rb+Q3FAQ--.57547S3;
	Wed, 21 Nov 2018 13:21:21 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3XUlN6_RbMZBhAA--.12006S3;
	Wed, 21 Nov 2018 13:21:18 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id z23so3737504plo.0
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 21:21:18 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=dLEOOOvU1S8wrzusm/vDttLM/caUgFpmaRqEayFjTPU=;
        b=MdSs6IgdluSmXBArBb/2MgIlQjIwQnFu+SChOG7J7y2eDI+EofbtmWtd/bt2BDK4HK
         waKqMSFiWxG1Zdgs1+dqOf2b54F+heocylgjZNqNHxTwh+NKDh7L89ZC3Aeq40VdynfB
         aVJ29fauosny6fyJPXyGZdZSmyyKFt3CXHILVBPYKpW/pwCi2DJNA1H+qvzeSyQB9De7
         tQYOslf1PVqmAmpowVo07mUsFNNUxMfxMS/4fp7Lx7SuNiQzDMgoriI+iNqDC75xmMkn
         UhXC3gfFq5MmoM69Z+UVDgbkJgcyhX2lpNgyxQKBBboHqDX90pYVOSsR7S8BTIXso778
         oxjA==
X-Gm-Message-State: AA+aEWZq8KvBxI/jOP8C+XaWAWsQGJ1wtKBHGZ376WF5R6Kq7o2RcLFz
	2BqfbTkEBfL734rl3A5E1wFmxszDJWu8+aSITMBZyf4HPVEEfcE=
X-Received: by 2002:a63:a91a:: with SMTP id u26mr4597106pge.349.1542777677739;
        Tue, 20 Nov 2018 21:21:17 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1508555pju;
        Tue, 20 Nov 2018 21:21:16 -0800 (PST)
X-Google-Smtp-Source: AFSGD/XezQHpz93ohyF6tW/Kk6P0UXAUU2vd6yFxdmU56dECG3Ok21YZBoxcW4SVSQ3fEK6BtiSF
X-Received: by 2002:a65:62da:: with SMTP id m26mr4695060pgv.278.1542777676936;
        Tue, 20 Nov 2018 21:21:16 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542777676; cv=none;
        d=google.com; s=arc-20160816;
        b=qitYcWA/RdOqe0GPjy5PSAXWk4Uco8mmFYFW6+DHTvwtylUe60vCQwTg1uBXz8CfeE
         /w9Ukt/ShJPHF8ajiw1yVRoDs8bNWztYq+c6VYdMUpia2gASGP7kiU4BaGpbj7BELw6u
         mqz8doMuiGX8LOA9dXhTmTeo6EXbmncYhj6xD4gB+CPCUfQJyQyletwfiYqAPTOoBFp3
         psNRy/b66u61InMn0OzHn2GQVW10KrDvGaABCZy5iH8+TUr5sQCLxFAfvUSA0VxOYHyR
         bPz50IUcObKwlcz4+2bptH55jp0v8PmjF/zPZVZHr1kdSpy2PHoIXjwL0wIgJRYGmBh8
         vo0Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=dLEOOOvU1S8wrzusm/vDttLM/caUgFpmaRqEayFjTPU=;
        b=DWUDyWCgg+Ow1LKLBWuz5BtBPncjfKQbzwne/HMJl6FzgGgPDNrDUU9xGaP0Bw2/M8
         5qbJZFGoyyHTrv0ypULX2iz22/0U6xDp6I6yU+gJ0BST5NHrfQUEsGBH+voENxq9oiYq
         rCID6Om5ejC8AYh/1O+fVECTjVJXISK0+T9HDcaks2mDyNRuL+GhTeCLLIjA8enqKLF+
         fwal+VBnjsztrxjHzLQf43FWoW7HOOpwDQTTKAA8gGG4TrSoTBvCGqzhVOOWbOqpPiZn
         JmNWcfUH+JqdUmk9+jL6Iz+e62vzj1ySBxQxq8VHDgG5TaU7HsWETrr5XY+jR5aDkj+W
         UdPw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=NbULccdh;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k190-v6si43920283pgk.261.2018.11.20.21.21.02;
        Tue, 20 Nov 2018 21:21:16 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727788AbeKUPxw (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Wed, 21 Nov 2018 10:53:52 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:44277 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726778AbeKUPxw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 10:53:52 -0500
Received: by mail-pl1-f194.google.com with SMTP id s5-v6so3716400plq.11
        for <linux-kernel@vger.kernel.org>; Tue, 20 Nov 2018 21:20:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=dLEOOOvU1S8wrzusm/vDttLM/caUgFpmaRqEayFjTPU=;
        b=NbULccdhf7U1wVaS0oyDGykiumtDQCapIiBJOgEZ4EdUZPHAThHJjmaJCmWuh/TRp0
         DnV7opNPjAQx4h3z6iGDW2iaXYwDNkkZI6/J/USfaoG9RZsaSpbZlD1q4HOfWMoW9epB
         P9StL3zyCPQGey3OGtihB3sLAhcRHTSn3zSiw=
X-Received: by 2002:a63:8043:: with SMTP id j64mr4728492pgd.405.1542777656204;
        Tue, 20 Nov 2018 21:20:56 -0800 (PST)
Received: from localhost ([122.172.88.116])
        by smtp.gmail.com with ESMTPSA id x7sm44397354pga.68.2018.11.20.21.20.55
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 20 Nov 2018 21:20:55 -0800 (PST)
Date: Wed, 21 Nov 2018 10:50:53 +0530
From: Viresh Kumar <viresh.kumar@linaro.org>
To: Anson Huang <anson.huang@nxp.com>
Cc: "rui.zhang@intel.com" <rui.zhang@intel.com>,
        "edubezval@gmail.com" <edubezval@gmail.com>,
        "daniel.lezcano@linaro.org" <daniel.lezcano@linaro.org>,
        "linux-pm@vger.kernel.org" <linux-pm@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "l.stach@pengutronix.de" <l.stach@pengutronix.de>,
        dl-linux-imx <linux-imx@nxp.com>
Subject: Re: [PATCH V4] thermal: imx: fix for dependency on cpu-freq
Message-ID: <20181121052053.hcc3xgfx4dgkydd2@vireshk-i7>
References: <1542776563-6716-1-git-send-email-Anson.Huang@nxp.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1542776563-6716-1-git-send-email-Anson.Huang@nxp.com>
User-Agent: NeoMutt/20180323-120-3dd1ac
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3XUlN6_RbMZBhAA--.12006S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXF1xtFy5Wr4xJFy3WFyxAFb_yoWrKr4kpa
	yUGFWFyFZrXF4kua13Ar4DuF90yrn7KayxZryfG34agrW3GrySqry8Gry8XFyFyrWkCF18
	AF45trWq9Fs8trJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4rMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07b5ksDU
	UUUU=

On 21-11-18, 05:08, Anson Huang wrote:
> The thermal driver is a standalone driver for monitoring SoC temperature
> by enabling thermal sensor, so it can be enabled even when CONFIG_CPU_FREQ
> is NOT set. So remove the dependency with CPU_THERMAL.
> 
> Introduce dummy function of legacy cooling register/unregister to make
> thermal driver probe successfully when CONFIG_CPU_FREQ is NOT set.
> 
> Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
> ---
> changes since V3:
> 	rename the label of "cpufreq_put" with "legacy_cleanup".
>  drivers/thermal/Kconfig       |  2 +-
>  drivers/thermal/imx_thermal.c | 44 +++++++++++++++++++++++++++++++------------
>  2 files changed, 33 insertions(+), 13 deletions(-)
> 
> diff --git a/drivers/thermal/Kconfig b/drivers/thermal/Kconfig
> index 5422523..93bd3bb 100644
> --- a/drivers/thermal/Kconfig
> +++ b/drivers/thermal/Kconfig
> @@ -212,7 +212,7 @@ config HISI_THERMAL
>  
>  config IMX_THERMAL
>  	tristate "Temperature sensor driver for Freescale i.MX SoCs"
> -	depends on (ARCH_MXC && CPU_THERMAL) || COMPILE_TEST
> +	depends on ARCH_MXC || COMPILE_TEST
>  	depends on NVMEM || !NVMEM
>  	depends on MFD_SYSCON
>  	depends on OF
> diff --git a/drivers/thermal/imx_thermal.c b/drivers/thermal/imx_thermal.c
> index 1566154..328ee05 100644
> --- a/drivers/thermal/imx_thermal.c
> +++ b/drivers/thermal/imx_thermal.c
> @@ -648,15 +648,24 @@ static const struct of_device_id of_imx_thermal_match[] = {
>  };
>  MODULE_DEVICE_TABLE(of, of_imx_thermal_match);
>  
> +#ifdef CONFIG_CPU_FREQ
>  /*
>   * Create cooling device in case no #cooling-cells property is available in
>   * CPU node
>   */
>  static int imx_thermal_register_legacy_cooling(struct imx_thermal_data *data)
>  {
> -	struct device_node *np = of_get_cpu_node(data->policy->cpu, NULL);
> +	struct device_node *np;
>  	int ret;
>  
> +	data->policy = cpufreq_cpu_get(0);
> +	if (!data->policy) {
> +		pr_debug("%s: CPUFreq policy not found\n", __func__);
> +		return -EPROBE_DEFER;
> +	}
> +
> +	np = of_get_cpu_node(data->policy->cpu, NULL);
> +
>  	if (!np || !of_find_property(np, "#cooling-cells", NULL)) {
>  		data->cdev = cpufreq_cooling_register(data->policy);
>  		if (IS_ERR(data->cdev)) {
> @@ -669,6 +678,22 @@ static int imx_thermal_register_legacy_cooling(struct imx_thermal_data *data)
>  	return 0;
>  }
>  
> +static void imx_thermal_unregister_legacy_cooling(struct imx_thermal_data *data)
> +{
> +	cpufreq_cooling_unregister(data->cdev);
> +	cpufreq_cpu_put(data->policy);
> +}
> +#else
> +static inline int imx_thermal_register_legacy_cooling(struct imx_thermal_data *data)
> +{
> +	return 0;
> +}
> +
> +static inline void imx_thermal_unregister_legacy_cooling(struct imx_thermal_data *data)
> +{
> +}
> +#endif
> +
>  static int imx_thermal_probe(struct platform_device *pdev)
>  {
>  	struct imx_thermal_data *data;
> @@ -743,13 +768,9 @@ static int imx_thermal_probe(struct platform_device *pdev)
>  	regmap_write(map, data->socdata->sensor_ctrl + REG_SET,
>  		     data->socdata->power_down_mask);
>  
> -	data->policy = cpufreq_cpu_get(0);
> -	if (!data->policy) {
> -		pr_debug("%s: CPUFreq policy not found\n", __func__);
> -		return -EPROBE_DEFER;
> -	}
> -
>  	ret = imx_thermal_register_legacy_cooling(data);
> +	if (ret == -EPROBE_DEFER)
> +		return ret;
>  	if (ret) {

Sorry for not noticing earlier, but wouldn't it be better to move the
EPROBE_DEFER check inside of this if block ? Otherwise we will have
two conditional blocks in the success (normal) case.

Something like this:

if (ret) {
        if (ret == -EPROBE_DEFER)
                return ret;

        dev_err(..);
        ...
}

>  		dev_err(&pdev->dev,
>  			"failed to register cpufreq cooling device: %d\n", ret);
> @@ -762,7 +783,7 @@ static int imx_thermal_probe(struct platform_device *pdev)
>  		if (ret != -EPROBE_DEFER)
>  			dev_err(&pdev->dev,
>  				"failed to get thermal clk: %d\n", ret);
> -		goto cpufreq_put;
> +		goto legacy_cleanup;
>  	}
>  
>  	/*
> @@ -775,7 +796,7 @@ static int imx_thermal_probe(struct platform_device *pdev)
>  	ret = clk_prepare_enable(data->thermal_clk);
>  	if (ret) {
>  		dev_err(&pdev->dev, "failed to enable thermal clk: %d\n", ret);
> -		goto cpufreq_put;
> +		goto legacy_cleanup;
>  	}
>  
>  	data->tz = thermal_zone_device_register("imx_thermal_zone",
> @@ -829,9 +850,8 @@ static int imx_thermal_probe(struct platform_device *pdev)
>  	thermal_zone_device_unregister(data->tz);
>  clk_disable:
>  	clk_disable_unprepare(data->thermal_clk);
> -cpufreq_put:
> -	cpufreq_cooling_unregister(data->cdev);
> -	cpufreq_cpu_put(data->policy);
> +legacy_cleanup:
> +	imx_thermal_unregister_legacy_cooling(data);
>  
>  	return ret;
>  }
> -- 
> 2.7.4

-- 
viresh
