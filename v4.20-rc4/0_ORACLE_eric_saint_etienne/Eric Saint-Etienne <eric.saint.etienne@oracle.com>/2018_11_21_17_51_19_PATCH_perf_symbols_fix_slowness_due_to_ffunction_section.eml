Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:34:46 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app4 (Coremail) with SMTP id cS_KCgD3_+c_p_VbLmToAQ--.34989S3;
	Thu, 22 Nov 2018 02:43:12 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD32kY5p_VbuM9kAA--.127S3;
	Thu, 22 Nov 2018 02:43:05 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id f12-v6so6722584plo.1
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 10:43:05 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:sender:precedence:list-id;
        bh=oI4kmYkzYMvDuA6Bkgxf5DUWQF7a8R3IaiVt46a1TaM=;
        b=Zc/5DWt1MzmiVcejlO5LtjZ1QngRWnghYeqmCU3/gC/wfKwS6xUzRyyhsgVi60K/6R
         izt/qNoXaNgJIiC2LfxDAhqJQity+Y3bEOBT+Tg7MkmNJ1LbUpDL/TTpuRwm/NsHIUn2
         0GDDnpUzi6HJO4RWy5/1KutYd4uqfKpiC/4DoqXaW4xYQR0bguUd/nWKLeG07UdrKRKz
         K6Wc8SW91nTx1raPI6jTszSKRmyGeT/9tz4GNEz8ESVOy3lwNWc/C+XuZ+0NGRkHTr8S
         qDnqCkEXNOae7iqGhFj4W3dV/sv/hnWRdoj3ZskGENexV696dnptCP55jR3Bj6389JVy
         ptkQ==
X-Gm-Message-State: AA+aEWau9uKbEoOhB2Pm/YpThHTQtZ7xBmJkkyf6gtCl89zhpB6CdJ8i
	+tO4M0YbeMpxZwRG7ZNKUqIb8GzfEi+9ZlU1PPiYTfsXGkVJtFI=
X-Received: by 2002:a17:902:8f97:: with SMTP id z23mr8061865plo.283.1542825785421;
        Wed, 21 Nov 2018 10:43:05 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2325034pju;
        Wed, 21 Nov 2018 10:43:04 -0800 (PST)
X-Google-Smtp-Source: AFSGD/Vlf7804J1Ticzn2oO+wFCu17CaRgDdFkghSGw+4oNGKE/PgkD1L3FBo7M3X8RqwlrR5iDo
X-Received: by 2002:a17:902:209:: with SMTP id 9mr6921691plc.288.1542825784479;
        Wed, 21 Nov 2018 10:43:04 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542825784; cv=none;
        d=google.com; s=arc-20160816;
        b=VdTNrP7aaroSe69rXcTNOyGvGJFocVwjo8eEs/94WVuNNFpRabfHmaoZUSaW4IgSnH
         CExD1GHdTdJYgjgjsVh3Y65CZK263ILly3vl/Ig8Ba8AvFwT6qWtY4UMm0hstwQxJeX/
         0UDHFMe+QxYBll//Ktl3u7TpRMdK6qwVXzB/lXYHcsE1bOZ0bExKUrCSJnfcQ1uLCO2M
         ctsg1376ATKhlhks/ysUDKD+3SQ5Ypl6O3Ozfihl5SRGwC5BjYbPB84LYgeN8ElCYm1l
         DIik6OSCBpG9UErc5UUaiQ0Ac8utW3T2FWkOBkN15DyWMphGHcqKU4du7qrh3VhAqhpz
         EqsQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=oI4kmYkzYMvDuA6Bkgxf5DUWQF7a8R3IaiVt46a1TaM=;
        b=vdn4mJT81WUmZX6b7QX286MYo2PlP42p2S0bmqKJdCAABmRMMbUJVDSeRDuT5MwPou
         Yh9YoVZlfFMX3dr3tZjiAIua6dIZ+kQ8IIxwDprhwZVqACk6fwgQph7l/imnCD1K5vAs
         Vf4o7IfYP0x6KIHfpAKWRtM+jZi/0n8JmdDqCXX1x8jldvVXkzZ5Vvv6HzqnhT2sTDDB
         SnySIAytfogRkoVaA7UMECSlt9RSJBt64n2Hhwei7slMpA29vQpgwUYo+ol227v57jpi
         iBnlVB/FCLpZPujvhNEv9RUBDCVRnxYjSUoIJGGyiLB7d4F2kFxA1Lc40voqP7dPFcCc
         ziBw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@oracle.com header.s=corp-2018-07-02 header.b=yf+6Yiim;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=oracle.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g15si3306545pgl.141.2018.11.21.10.42.49;
        Wed, 21 Nov 2018 10:43:04 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730891AbeKVEBg (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Wed, 21 Nov 2018 23:01:36 -0500
Received: from userp2130.oracle.com ([156.151.31.86]:44054 "EHLO
        userp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726711AbeKVEBf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 23:01:35 -0500
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
        by userp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wALHOPh1045560;
        Wed, 21 Nov 2018 17:25:56 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id; s=corp-2018-07-02;
 bh=oI4kmYkzYMvDuA6Bkgxf5DUWQF7a8R3IaiVt46a1TaM=;
 b=yf+6YiimRQuPjzLSyg9ftjlMIIcLfHI9x8csHNdHN7MXT8SpboC1RlVVoP3bEQM4uDyF
 35kfOUVXl4ccdT3+6y2uh08romjt4LIAjHaxeVT+o1ACvDT7IictcXB0szM5SYZ7afon
 84ZsFCGVA2wh2xbJICv+6GEJ+DeWMEIRK1Ax3EH2TAGtnkPcClq85GHJgO12GsndVPn4
 ZHKd5gdn/zdZK1p4YWb/UKZZ/ZKRsKWoeXZGjAYQ78D7ThKHce9kcDCujnaGsjICzeUv
 Rra7S7t7Cil843DvVVRhe7R4wAuRZiFQQhPyVfZu1AoOKok9GYsyd6t4IeJ7chHa4AfU RA== 
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
        by userp2130.oracle.com with ESMTP id 2ntadu2wk2-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Wed, 21 Nov 2018 17:25:56 +0000
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
        by aserv0021.oracle.com (8.14.4/8.14.4) with ESMTP id wALHPtk8024738
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Wed, 21 Nov 2018 17:25:55 GMT
Received: from abhmp0013.oracle.com (abhmp0013.oracle.com [141.146.116.19])
        by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wALHPsPw007030;
        Wed, 21 Nov 2018 17:25:54 GMT
Received: from ca-dev-arm44.us.oracle.com (/10.211.8.237)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Wed, 21 Nov 2018 09:25:54 -0800
From: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
To: Linux Kernel <linux-kernel@vger.kernel.org>
Cc: Alexander Shishkin <alexander.shishkin@linux.intel.co>,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        Ingo Molnar <mingo@redhat.com>, Jiri Olsa <jolsa@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Shaggy <dave.kleikamp@oracle.com>,
        David Aldridge <david.j.aldridge@oracle.com>,
        Rob Gardner <rob.gardner@oracle.com>,
        Eric Saint-Etienne <eric.saintetienne@gmail.com>
Subject: [PATCH] perf symbols: fix slowness due to -ffunction-section
Date: Wed, 21 Nov 2018 09:51:19 -0800
Message-Id: <1542822679-25591-1-git-send-email-eric.saint.etienne@oracle.com>
X-Mailer: git-send-email 1.8.3.1
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9084 signatures=668683
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1811210151
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD32kY5p_VbuM9kAA--.127S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZFW8Zr45AF4UJry3CrW7Arb_yoWrCFy3pa
	1jkay5Cws3XF4agw1fGay5ZFZxur1fZrW3A34rtws5urn2vr9rJF1fXFyYkry5Xa1kKF13
	ZF4jgryUCF1xAr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUAVWUtwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48Icx
	kI7VAKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80
	FwCY02Avz4vEIxC_XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar
	1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr0_Gr1U
	MxvI42IY6I8E87Iv6xkF7I0E14v26r4j6r4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4
	C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E
	14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIx
	kGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x
	07bP-erUUUUU=

Perf can take minutes to parse an image when -ffunction-section is used.
This is especially true with the kernel image when it is compiled this way,
which is the arm64 default since the patcheset "Enable deadcode elimination
at link time".

Perf organize maps using a rbtree. Whenever perf finds a new symbols, it
first searches this rbtree for the map it belongs to, by strcmp()'aring
section names.  When it finds the map with the right name, it uses it to
add the symbol. With a usual image there aren't so many maps but when using
-ffunction-section there's basically one map per function.
With the kernel image that's north of 40,000 maps. For most symbols perf
has to parses the entire rbtree to eventually create a new map and add it.
Consequently perf spends most of the time browsing a rbtree that keeps
getting larger.

This performance fix introduces a secondary rbtree that indexes maps based
on the section name.

Signed-off-by: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
Reviewed-by: Dave Kleikamp <dave.kleikamp@oracle.com>
Reviewed-by: David Aldridge <david.aldridge@oracle.com>
Reviewed-by: Rob Gardner <rob.gardner@oracle.com>
---
 tools/perf/util/map.c    | 27 +++++++++++++++++++++++++++
 tools/perf/util/map.h    |  2 ++
 tools/perf/util/symbol.c | 15 +++++++++++++--
 3 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/tools/perf/util/map.c b/tools/perf/util/map.c
index 354e545..781eed8 100644
--- a/tools/perf/util/map.c
+++ b/tools/perf/util/map.c
@@ -21,6 +21,7 @@
 #include "unwind.h"
 
 static void __maps__insert(struct maps *maps, struct map *map);
+static void __maps__insert_name(struct maps *maps, struct map *map);
 
 static inline int is_anon_memory(const char *filename, u32 flags)
 {
@@ -496,6 +497,7 @@ u64 map__objdump_2mem(struct map *map, u64 ip)
 static void maps__init(struct maps *maps)
 {
 	maps->entries = RB_ROOT;
+	maps->names = RB_ROOT;
 	init_rwsem(&maps->lock);
 }
 
@@ -664,6 +666,7 @@ size_t map_groups__fprintf(struct map_groups *mg, FILE *fp)
 static void __map_groups__insert(struct map_groups *mg, struct map *map)
 {
 	__maps__insert(&mg->maps, map);
+	__maps__insert_name(&mg->maps, map);
 	map->groups = mg;
 }
 
@@ -824,10 +827,34 @@ static void __maps__insert(struct maps *maps, struct map *map)
 	map__get(map);
 }
 
+static void __maps__insert_name(struct maps *maps, struct map *map)
+{
+	struct rb_node **p = &maps->names.rb_node;
+	struct rb_node *parent = NULL;
+	struct map *m;
+	int rc;
+
+	while (*p != NULL) {
+		parent = *p;
+		m = rb_entry(parent, struct map, rb_node_name);
+		rc = strcmp(m->dso->short_name, map->dso->short_name);
+		if (rc < 0)
+			p = &(*p)->rb_left;
+		else if (rc  > 0)
+			p = &(*p)->rb_right;
+		else
+			return;
+	}
+	rb_link_node(&map->rb_node_name, parent, p);
+	rb_insert_color(&map->rb_node_name, &maps->names);
+	map__get(map);
+}
+
 void maps__insert(struct maps *maps, struct map *map)
 {
 	down_write(&maps->lock);
 	__maps__insert(maps, map);
+	__maps__insert_name(maps, map);
 	up_write(&maps->lock);
 }
 
diff --git a/tools/perf/util/map.h b/tools/perf/util/map.h
index e0f327b..5c792c9 100644
--- a/tools/perf/util/map.h
+++ b/tools/perf/util/map.h
@@ -25,6 +25,7 @@ struct map {
 		struct rb_node	rb_node;
 		struct list_head node;
 	};
+	struct rb_node          rb_node_name;
 	u64			start;
 	u64			end;
 	bool			erange_warned;
@@ -57,6 +58,7 @@ struct kmap {
 
 struct maps {
 	struct rb_root	 entries;
+	struct rb_root	 names;
 	struct rw_semaphore lock;
 };
 
diff --git a/tools/perf/util/symbol.c b/tools/perf/util/symbol.c
index d188b75..dcce74b 100644
--- a/tools/perf/util/symbol.c
+++ b/tools/perf/util/symbol.c
@@ -1680,11 +1680,22 @@ struct map *map_groups__find_by_name(struct map_groups *mg, const char *name)
 {
 	struct maps *maps = &mg->maps;
 	struct map *map;
+	struct rb_node *node;
 
 	down_read(&maps->lock);
 
-	for (map = maps__first(maps); map; map = map__next(map)) {
-		if (map->dso && strcmp(map->dso->short_name, name) == 0)
+	for (node = maps->names.rb_node; node; ) {
+		int rc;
+
+		map = rb_entry(node, struct map, rb_node_name);
+
+		rc = strcmp(map->dso->short_name, name);
+		if (rc < 0)
+			node = node->rb_left;
+		else if (rc > 0)
+			node = node->rb_right;
+		else
+
 			goto out_unlock;
 	}
 
-- 
1.8.3.1
