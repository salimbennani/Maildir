Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:57:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CAB6A580380;
	Tue, 11 Dec 2018 14:23:47 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 14:23:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A7DJZaRDzLLDBnDLwDRoTUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pcuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH42y?=
 =?us-ascii?q?YYgBAe0DMuZWoIbzqEAOrQO8CAS3GO/iySVFimPs0KEmz+gsFxzN0gw6H9IJtX?=
 =?us-ascii?q?TZtMj4NKAIUeC016nIyS/Mb+1L0jnn9ofIbhMhofaSXbltdsfe0lEvGhjfgVWU?=
 =?us-ascii?q?qIzqITWV2+cXv2eG8eVtTOSigHMppQF2pzig3MYsio/Ri4IW1F/E7yN5z5gxJd?=
 =?us-ascii?q?GiT057e9GkHZ1NvC+ZL4t7Wt0uT31stSog17ELt4C3cDIXxJkk2xLTcf2KfoqQ?=
 =?us-ascii?q?7h79SOqdPTl1iXd7d72jghu+71OvxfHhWcSxzlpFtTZJnsXJu3wQyxDT5MmKR/?=
 =?us-ascii?q?5j8Uu8xzmAywXe5+BHLE8plKfWLoUuzaQxm5UPt0nIAzX4l1/sjKCMc0Up4uio?=
 =?us-ascii?q?5PrjYrXhvpKcKYB0hR/kMqg0mcywH/44Mg4QUGif4+i806fj/ULhTLVLiP05jL?=
 =?us-ascii?q?XZvYjEKcgHoqO1GRJZ34g95xqlEjur08gUkWMGIV9HYB6HipLmO1DKIPD2F/e/?=
 =?us-ascii?q?hFGsnS9vx/DHOL3hH5rMImHAkLj/Z7Z97VBTyA4qwdBY6ZNUDK8OIOjoV0/vu9?=
 =?us-ascii?q?zXEAU5Pxa3w+n5EtV90J0RWWaVDq+eKqPSvkeE5vgzLOmUeI8VpDH9JuAh5/7v?=
 =?us-ascii?q?jn82h0URfKa03ZYMbHC4H/JmI1iWYHb2g9cBF3sKsRQ6TODwlFKCVjtTbW6oX6?=
 =?us-ascii?q?0g/jE7FJ6mDYDbS4CtmrOB3Tu7EYdRZmxcClCMDG3nd4OLW/oXbCKSI8lhkiEL?=
 =?us-ascii?q?VLS7So8h0w2uuxH+y7Z9MuXU/SgYv4r51Ndp/+3TiQ0y9TtsAsSf1GGCUXt4nm?=
 =?us-ascii?q?APRz8w2qB/pldwylOC0ah+nvxZGsZf5/JPUgcmK5Hcy/Z2BMz1WgLEZt2JUkqp?=
 =?us-ascii?q?Qs26ATEtSdI828UBY119G9WljRDPxTCqDKUXl7GQAJw086Tc32X+JspnynbG0r?=
 =?us-ascii?q?UhgEciQsdVKWKmgat//RDJB4HVi0WZi7qqdaME0S7O7miDy3CCvEVZUAFqV6XF?=
 =?us-ascii?q?UmsSZk/XrdT/+0PDQKWiCbUhMgtd18GCLrFGZcHujVVDXP3jIsjRY3qtm2esAh?=
 =?us-ascii?q?aF3q6DY5D0e2oDxindCFILkwYI/XmYMwgyASOho2HbDDxqDl/vZ0Ls8e9jqHK0?=
 =?us-ascii?q?VEM0zgeKb1F/2Lqx4BIamfucS/YL1LIepCghsyl0HEq639/OFtWPvRRhc7tGbd?=
 =?us-ascii?q?M9+lhH03nZuBJ7PpG7K6Bih1gecxl4vk/01hV3DJlAntYurH8w0AVyLqeY2ktb?=
 =?us-ascii?q?dzyExZDwJqHXKm7q8RCzaq7W31be0MqW+qYP8vg4t0/vvAazFkom8nVn1dZV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?P7mAFADsHMwVGcivJPYxlFi0cx0LJuZS9K0zP8O4bPaG3K+rPOB9nDOpl2hH4Y?=
 =?us-ascii?q?Z90l6S+Cp4UOLHw5EFw/SA1AudSzj8lEuhstzwmY1cZTASA3CzxjT+CI9QZq19?=
 =?us-ascii?q?Z4ALCWi1Ls2zx9V+gYPtWnFC+F6iAVMGxNGmeR6IY1Ph2g1Q0FwdoWa7liug0z?=
 =?us-ascii?q?x0jzYpo7KF3CzP3+vtbgAHNXNMRGV4i1fjP5K0j9EDUEe0dQcpkAaq6ljgx6hc?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D06dzCqto/5nhBgk2KdMXBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzYGauyuh5m1qAhq/k+qomtL9Egg60i7719?=
 =?us-ascii?q?90WiXOtxv8Zojr16KnMeNoZEVoBVn869ZkFYF6iIc/mJYQ2X0CjJWP4XUHiXvz?=
 =?us-ascii?q?Mclc2a/mbHsCXzkLz8TX4Ajk3k1uNXaJx4P/VnWAzcptfdi6YmUK2i0j68BGEr?=
 =?us-ascii?q?ub7LtBnSFtuFq3sRrRYeRhnjca0fYu62QVg+ATtAot0yWSGLYSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WX26oHle9?=
 =?us-ascii?q?nfd8gftxOKnBfbk+haNogxmeEUiip9NmLwpnkly+89jRxz0pC2pomHK2Nx/K2n?=
 =?us-ascii?q?Bh5ULCH6Z8QW+jv1l6ZRgt6W35yzHpVmAjgLQJzoTfeyHDMTr/vnMRuOECYnqn?=
 =?us-ascii?q?eaArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph/T8e/Fn4qh9Ryu5yMxn/T3zSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1LjMaOr5dbe6OiUHPa+I+HNYbWTquxeSvGI?=
 =?us-ascii?q?yoi00oZ9+zaMN8OPPmRtDvEh20pDW2x5FNrdmzkVVyMXkCfNZdaBpBig4i13st?=
 =?us-ascii?q?y/8PPzVQPv4ouPFqJSMch19BCwm6uDLOmQhCB2KTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNM7blNz11714jv00C1tfVl?=
 =?us-ascii?q?zhgMapZcMULGGnKVPHH12GNLCHJT3N3sH2brmwSbxWjOVIqRKwvSyXHFPkPjSG?=
 =?us-ascii?q?jzPpTQygMflQjCGHOxxToJuycgt2Bmj5Ut3nage3MNt2jTAtxb00h3XKNXMTMD?=
 =?us-ascii?q?RmckNNqKGQ4j1cgvllB2NB6X9lJ/GemymF9+nYNooWsfxzDyRoluJa5W42xKdP?=
 =?us-ascii?q?4C5YRPx6hi3So8Vqo1GnlOmP1zVmXABPqjZNmIKEo0FiNb/F+ZlHXHbO5AgN4n?=
 =?us-ascii?q?mICxQWu9tlDcXiuqBKxdjJkaLzKTFC/MrV/MscHcfULs2HPWElMRroHj7UEQQE?=
 =?us-ascii?q?QSSqNWHZm0xSjvWS+meJoZg9r5i/0KYJH5t4cXh9QvcbDFl1Wd8POpF6Whs6nr?=
 =?us-ascii?q?OBys0F/3yzqF/WXsoM7b7dUffHK/L1KS2dhKcMXxYUwrTmZdAZLqXy301vbAk8?=
 =?us-ascii?q?kImcSBmYZsxEviA0Nlx8m05K6nUrCzRrg08=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAANOBBch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBOYECJ4wUX4szgg0Ulz6BcRYYCwgBhy4iNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJiAwMBAi8BDQEBNwEFCQEBHzEDVAYTBYMcAYIBA?=
 =?us-ascii?q?QMBCqUJgh+CdgEBBYEwAYV5AwWHfIMjgRwXgUA/jn+JGVWBP5VQCYEVhXSKPQs?=
 =?us-ascii?q?YiXGHT44Wix2BRoIOMxoIHBSDJxOCCAwXg32EYYVAPzIBAYECAQEBimQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAAANOBBch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BOYECJ4wUX4szgg0Ulz6BcRYYCwgBhy4iNAkNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJiAwMBAi8BDQEBNwEFCQEBHzEDVAYTBYMcAYIBAQMBCqUJgh+CdgE?=
 =?us-ascii?q?BBYEwAYV5AwWHfIMjgRwXgUA/jn+JGVWBP5VQCYEVhXSKPQsYiXGHT44Wix2BR?=
 =?us-ascii?q?oIOMxoIHBSDJxOCCAwXg32EYYVAPzIBAYECAQEBimQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="66381501"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 11 Dec 2018 14:23:46 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726387AbeLKWXn (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 17:23:43 -0500
Received: from mail.skyhub.de ([5.9.137.197]:46274 "EHLO mail.skyhub.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726346AbeLKWXe (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 17:23:34 -0500
Received: from zn.tnic (p200300EC2BCD2B0010F6E1EC68D6BA6C.dip0.t-ipconnect.de [IPv6:2003:ec:2bcd:2b00:10f6:e1ec:68d6:ba6c])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.skyhub.de (SuperMail on ZX Spectrum 128k) with ESMTPSA id DF11F1EC0C11;
        Tue, 11 Dec 2018 23:23:32 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=alien8.de; s=dkim;
        t=1544567013;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=GKywmujzPhFneQ5I17/1RpzWlb/UISTliKsdCm3/o3U=;
        b=LNTpgDMYzGmXbBMPkw4FU+nOeHJjP+76PyTeTXM6lG0VG/QcRnHBqPql5QgM3Vu4EpSGrR
        cNQekHLkZz3te/4omAgWnIBtNL6TILRDM9UCeHaSuY/kTTR/vbdOx1UyzQSBPZ9F0SVgkq
        /9NIm0Ecy+K3T3IEAFhZfVirZ+kJEyI=
From: Borislav Petkov <bp@alien8.de>
To: LKML <linux-kernel@vger.kernel.org>
Cc: X86 ML <x86@kernel.org>, Andy Lutomirski <luto@amacapital.net>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        Andy Lutomirski <luto@kernel.org>,
        John Stultz <john.stultz@linaro.org>
Subject: [RFC PATCH 4/4] x86/TSC: Use RDTSCP
Date: Tue, 11 Dec 2018 23:23:26 +0100
Message-Id: <20181211222326.14581-5-bp@alien8.de>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181211222326.14581-1-bp@alien8.de>
References: <20181211222326.14581-1-bp@alien8.de>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Borislav Petkov <bp@suse.de>

Currently, the kernel uses

  [LM]FENCE; RDTSC

in the timekeeping code, to guarantee monotonicity of time where the
*FENCE is selected based on vendor.

Replace that sequence with RDTSCP which is faster or on-par and gives
the same guarantees.

A microbenchmark on Intel shows that the change is on-par.

On AMD, the change is either on-par with the current LFENCE-prefixed
RDTSC and some are slightly better with RDTSCP.

The comparison is done with the LFENCE-prefixed RDTSC (and not with the
MFENCE-prefixed one, as one would normally expect) because all modern
AMD families make LFENCE serializing and thus avoid the heavy MFENCE by
effectively enabling X86_FEATURE_LFENCE_RDTSC.

Co-developed-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Borislav Petkov <bp@suse.de>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: John Stultz <john.stultz@linaro.org>
Cc: x86@kernel.org
Link: https://lkml.kernel.org/r/20181119184556.11479-1-bp@alien8.de
---
 arch/x86/include/asm/msr.h | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/arch/x86/include/asm/msr.h b/arch/x86/include/asm/msr.h
index 91e4cf189914..5cc3930cb465 100644
--- a/arch/x86/include/asm/msr.h
+++ b/arch/x86/include/asm/msr.h
@@ -217,6 +217,8 @@ static __always_inline unsigned long long rdtsc(void)
  */
 static __always_inline unsigned long long rdtsc_ordered(void)
 {
+	DECLARE_ARGS(val, low, high);
+
 	/*
 	 * The RDTSC instruction is not ordered relative to memory
 	 * access.  The Intel SDM and the AMD APM are both vague on this
@@ -227,9 +229,19 @@ static __always_inline unsigned long long rdtsc_ordered(void)
 	 * ordering guarantees as reading from a global memory location
 	 * that some other imaginary CPU is updating continuously with a
 	 * time stamp.
+	 *
+	 * Thus, use the preferred barrier on the respective CPU, aiming for
+	 * RDTSCP as the default.
 	 */
-	barrier_nospec();
-	return rdtsc();
+	asm volatile(ALTERNATIVE_3("rdtsc",
+				   "mfence; rdtsc", X86_FEATURE_MFENCE_RDTSC,
+				   "lfence; rdtsc", X86_FEATURE_LFENCE_RDTSC,
+				   "rdtscp", X86_FEATURE_RDTSCP)
+			: EAX_EDX_RET(val, low, high)
+			/* RDTSCP clobbers ECX with MSR_TSC_AUX. */
+			:: "ecx");
+
+	return EAX_EDX_VAL(val, low, high);
 }
 
 static inline unsigned long long native_read_pmc(int counter)
-- 
2.19.1

