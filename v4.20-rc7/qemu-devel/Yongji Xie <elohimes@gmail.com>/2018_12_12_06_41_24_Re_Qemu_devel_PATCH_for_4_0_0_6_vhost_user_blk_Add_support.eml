Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:42:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8D32758079D
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 22:42:58 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 22:42:58 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AK454aBfi4nzCwPemsUCawlKvlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW8ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyNOAo2+?=
 =?us-ascii?q?YIUPAeQPPvhWoJXyqVUTtRuzBwuiCezyxjJGmnP5w7Y63v89EQHfxgEsA84CvG?=
 =?us-ascii?q?jWodjzKawcUfq1zK7NzTjbbfxW3jH96IfKchAgvPqDXLNwftTMwkQoCQzFilKQ?=
 =?us-ascii?q?qYzkPzOQyOsNqHOW7+VlVe21im4nrxt9rSSoxscpk4TEgJ8exFPc9Shh3oo5Od?=
 =?us-ascii?q?61RFRmbdK5E5ZcrT+WOoV2T884Xm1luj42xqMHtJKnfiUHzZonyh3EZPCbdoWF?=
 =?us-ascii?q?7RHuWeeeLDp9mn5pZLeyihOp/kWvxeDxUNS/3kxQoSpfiNbMs2gA1xzN5ciDTf?=
 =?us-ascii?q?tw5kOh2TeU1wDP8eFIO080lazGK5I7xb4wjJUTvVzCHi/whkr2kLebels49uWr?=
 =?us-ascii?q?8ejrf6jqq5yGO4NqhAzzMr4iltG9DOggNwgBRWmb+eCy1L35+k35Ra1HjuQona?=
 =?us-ascii?q?ncrZDWPNkUqbCnAwBL1oYv8g2wDzC70NQegXYIMklFdBWDj4joOFHBPur0DPii?=
 =?us-ascii?q?g1m0lDdrxvbGPqDuA5nXL3jDlqvhcqh560JG1AUzytVf6olSCrEGJvLzVUnxtM?=
 =?us-ascii?q?HCAh8+KQy0zP7rCM9h2YMGRWKPHqiZPbvWsV+J5eIgPfOAZYAIuDvmL/gl5vju?=
 =?us-ascii?q?jWI2mFMHfKmp24cXZ268Hvh8P0qZZn/s0Z88F3wXtF8+UPDykw/FFjpSfGqpGa?=
 =?us-ascii?q?Q74D49FcShF4iEQ4mshLmI2mC8BoFXYWZdTUmBFGqte4iaVvNfVSSJP8U0lzUF?=
 =?us-ascii?q?UaSmGZYs0AzruALkxr4iNOfN5yADqbrl09564fCVkgs9oidpBcaQ2H3YUmdvg2?=
 =?us-ascii?q?kTTCU31q0snUsoyF6Y1rdxhfNwD9Ff5/pVFAw9MM3y1et/XuH1XA3Df5+5SVvu?=
 =?us-ascii?q?FtiiBjEwS98q69ALakd5Xd6li0aQjGKRH7YJmunTV9QP+aXG0i20fp4lxg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B3AAChrBBcmBHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?QGBL4EtgTWDe4h4jAUGgTWJIQOOLoFzFBgUhECCdCI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQEBCAsLBhsOIwxCAQ4BgWQFAgMaAQaCWwEBAQEDAQIgHQEFCgwdAQIBAgECB?=
 =?us-ascii?q?gEBBQMCCwoDAgIiBAICAwEdAQERAQUBHBkFgxyBaQEDCA0BBIoYkAc8iw2BEgU?=
 =?us-ascii?q?BF4J3BYRBChknDV2BNwIGEnmLMBd4gQeBEYMSgleCKoMEglcCiTeHBIRUiz4uC?=
 =?us-ascii?q?YpGg12DMBiBXI9miiiEfIoBDyGBJYIOMxoIGxVsgjuCGwwXEoM4imA0MYEHhRG?=
 =?us-ascii?q?ESIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0B3AAChrBBcmBHrdtBkHgEGBwaBUQkLAQGBL4EtgTWDe4h?=
 =?us-ascii?q?4jAUGgTWJIQOOLoFzFBgUhECCdCI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOI?=
 =?us-ascii?q?wxCAQ4BgWQFAgMaAQaCWwEBAQEDAQIgHQEFCgwdAQIBAgECBgEBBQMCCwoDAgI?=
 =?us-ascii?q?iBAICAwEdAQERAQUBHBkFgxyBaQEDCA0BBIoYkAc8iw2BEgUBF4J3BYRBChknD?=
 =?us-ascii?q?V2BNwIGEnmLMBd4gQeBEYMSgleCKoMEglcCiTeHBIRUiz4uCYpGg12DMBiBXI9?=
 =?us-ascii?q?miiiEfIoBDyGBJYIOMxoIGxVsgjuCGwwXEoM4imA0MYEHhRGESIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="55994713"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 22:41:53 -0800
Received: from localhost ([::1]:42820 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWyDQ-0005sp-SC
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 01:41:52 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49079)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <elohimes@gmail.com>) id 1gWyDC-0005sg-Gt
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 01:41:39 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <elohimes@gmail.com>) id 1gWyDB-0002Dp-7O
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 01:41:38 -0500
Received: from mail-yb1-xb44.google.com ([2607:f8b0:4864:20::b44]:46536)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <elohimes@gmail.com>) id 1gWyDB-0002DO-1E
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 01:41:37 -0500
Received: by mail-yb1-xb44.google.com with SMTP id f9so4255284ybm.13
	for <qemu-devel@nongnu.org>; Tue, 11 Dec 2018 22:41:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc:content-transfer-encoding;
	bh=0j7El4IBz8xetnMIgrc12PhFpM34nbL+mrgYXv8Lq90=;
	b=c5JOoS6sy1tF9y9mxZ8fosBvFCoxEsYoV3KIyjaTDS+EHWgH7vC5nrWHH90BfknblZ
	U8g3qTJGrTEbTi3NH3wWzjULMOlfxa3DGZ1un+SjgyXK5D/YEii+VQ+Tp1SrXqefXJYO
	biHXwrvb45LcCwhYzdcFICf1NWE0Gf/fog2yC0IppKYMXko6a0QAtE22UJwZx71Rlq1D
	Ye/55HASY/k7EYE3q2ekLsg/uYX7gFbWeL1riZOpx0AZGtZqbYRzlGGVw5YsVmuP7Ys6
	hVDLMH7OshLaU+ZXHn3DZWvqkh5XvTU0KkFZ0+/N8mHTGY0Bc7cX44PvgThh685Z+Sc7
	DBmg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=0j7El4IBz8xetnMIgrc12PhFpM34nbL+mrgYXv8Lq90=;
	b=QMH7oynprM8MuSZMtxFLSKtbqoaLDu+5JjvC72+7k/C7ND7Ub4ziQBCvGYZuNMO0ic
	Z192x3LAb6puWFvg+WPUCnJda95S5dVVycX1MlJ6maMaDYaVuAWKJ52fD0x6txx6xGOW
	5MJnmmNZ0SGBmYOxbHWTlJxcHs+FLUerU4RxhG9tdOBVuQq5dNFhYu7BMlK0U2H4eRXJ
	iMpstSHT1lMzc2joesbmsbp3rg2vRTQY4wPhgvfRfxkU6cHMHBRaj5ib+onuTVBhkU9I
	pYsQA/cq9l+FnRiOuzCEEURaLPp9PdrQLYthM+1oAxSYHqdavJCSLJe0l0mCU0tYXrDt
	58Og==
X-Gm-Message-State: AA+aEWZkgn1cSaKd3HiTkai8MDetn3mcZdZuRYL6VHZrGtxycqinta3f
	AinC6CsWyKARQLZ48LyK7/f2R1D4lT8IR3tWHAs=
X-Google-Smtp-Source: AFSGD/XplLek8+gXvuJJhNQbfvUitGkdj13w6mtcXQstwtlIRA4OYzpctD7xswGgAUDzb04yY/Lvu/6uSGlTdQvrUk0=
X-Received: by 2002:a25:bcc1:: with SMTP id l1mr311441ybm.382.1544596896464;
	Tue, 11 Dec 2018 22:41:36 -0800 (PST)
MIME-Version: 1.0
References: <20181206063552.6701-1-xieyongji@baidu.com>
	<561e0d7a-af2f-caad-aec3-c15952665687@redhat.com>
	<20181206085849-mutt-send-email-mst@kernel.org>
	<cf555a3d-0312-0b61-d18a-12ca295520a0@redhat.com>
	<CAONzpcaXTBgPTH0WSfq-=RwHLkuqi1mhKcv4C=0_O67_hV8A2Q@mail.gmail.com>
	<5794e090-9a9b-ca30-1066-ef697c9b67be@redhat.com>
	<CAONzpcZKAXrgbJc6H3d82zUt6VUVSo36HLg__OvuDWoBk9zTvg@mail.gmail.com>
	<7520e2cd-59cc-c133-f913-e7397df684dd@redhat.com>
In-Reply-To: <7520e2cd-59cc-c133-f913-e7397df684dd@redhat.com>
From: Yongji Xie <elohimes@gmail.com>
Date: Wed, 12 Dec 2018 14:41:24 +0800
Message-ID: <CAONzpcbekTuN80r3Vb3CA7MqYBuVOOmV=6wfCNOb5z6QyrLZvg@mail.gmail.com>
To: jasowang@redhat.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::b44
Subject: Re: [Qemu-devel] [PATCH for-4.0 0/6] vhost-user-blk: Add support
 for backend reconnecting
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: zhangyu31@baidu.com, "Michael S. Tsirkin" <mst@redhat.com>, nixun@baidu.com,
	qemu-devel@nongnu.org, lilin24@baidu.com, chaiwen@baidu.com,
	marcandre.lureau@redhat.com, Xie Yongji <xieyongji@baidu.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, 12 Dec 2018 at 12:07, Jason Wang <jasowang@redhat.com> wrote:
>
>
> On 2018/12/12 =E4=B8=8A=E5=8D=8811:21, Yongji Xie wrote:
> > On Wed, 12 Dec 2018 at 11:00, Jason Wang <jasowang@redhat.com> wrote:
> >>
> >> On 2018/12/12 =E4=B8=8A=E5=8D=8810:48, Yongji Xie wrote:
> >>> On Mon, 10 Dec 2018 at 17:32, Jason Wang <jasowang@redhat.com> wrote:
> >>>> On 2018/12/6 =E4=B8=8B=E5=8D=889:59, Michael S. Tsirkin wrote:
> >>>>> On Thu, Dec 06, 2018 at 09:57:22PM +0800, Jason Wang wrote:
> >>>>>> On 2018/12/6 =E4=B8=8B=E5=8D=882:35,elohimes@gmail.com  wrote:
> >>>>>>> From: Xie Yongji<xieyongji@baidu.com>
> >>>>>>>
> >>>>>>> This patchset is aimed at supporting qemu to reconnect
> >>>>>>> vhost-user-blk backend after vhost-user-blk backend crash or
> >>>>>>> restart.
> >>>>>>>
> >>>>>>> The patch 1 tries to implenment the sync connection for
> >>>>>>> "reconnect socket".
> >>>>>>>
> >>>>>>> The patch 2 introduces a new message VHOST_USER_SET_VRING_INFLIGH=
T
> >>>>>>> to support offering shared memory to backend to record
> >>>>>>> its inflight I/O.
> >>>>>>>
> >>>>>>> The patch 3,4 are the corresponding libvhost-user patches of
> >>>>>>> patch 2. Make libvhost-user support VHOST_USER_SET_VRING_INFLIGHT=
.
> >>>>>>>
> >>>>>>> The patch 5 supports vhost-user-blk to reconnect backend when
> >>>>>>> connection closed.
> >>>>>>>
> >>>>>>> The patch 6 tells qemu that we support reconnecting now.
> >>>>>>>
> >>>>>>> To use it, we could start qemu with:
> >>>>>>>
> >>>>>>> qemu-system-x86_64 \
> >>>>>>>             -chardev socket,id=3Dchar0,path=3D/path/vhost.socket,=
reconnect=3D1,wait \
> >>>>>>>             -device vhost-user-blk-pci,chardev=3Dchar0 \
> >>>>>>>
> >>>>>>> and start vhost-user-blk backend with:
> >>>>>>>
> >>>>>>> vhost-user-blk -b /path/file -s /path/vhost.socket
> >>>>>>>
> >>>>>>> Then we can restart vhost-user-blk at any time during VM running.
> >>>>>> I wonder whether or not it's better to handle this at the level of=
 virtio
> >>>>>> protocol itself instead of vhost-user level. E.g expose last_avail=
_idx to
> >>>>>> driver might be sufficient?
> >>>>>>
> >>>>>> Another possible issue is, looks like you need to deal with differ=
ent kinds
> >>>>>> of ring layouts e.g packed virtqueues.
> >>>>>>
> >>>>>> Thanks
> >>>>> I'm not sure I understand your comments here.
> >>>>> All these would be guest-visible extensions.
> >>>> Looks not, it only introduces a shared memory between qemu and
> >>>> vhost-user backend?
> >>>>
> >>>>
> >>>>> Possible for sure but how is this related to
> >>>>> a patch supporting transparent reconnects?
> >>>> I might miss something. My understanding is that we support transpar=
ent
> >>>> reconnects, but we can't deduce an accurate last_avail_idx and this =
is
> >>>> what capability this series try to add. To me, this series is functi=
onal
> >>>> equivalent to expose last_avail_idx (or avail_idx_cons) in available
> >>>> ring. So the information is inside guest memory, vhost-user backend =
can
> >>>> access it and update it directly. I believe this is some modern NIC =
did
> >>>> as well (but index is in MMIO area of course).
> >>>>
> >>> Hi Jason,
> >>>
> >>> If my understand is correct, it might be not enough to only expose
> >>> last_avail_idx.
> >>> Because we would not process descriptors in the same order in which t=
hey have
> >>> been made available sometimes. If so, we can't get correct inflight
> >>> I/O information
> >>> from available ring.
> >>
> >> You can get this with the help of the both used ring and last_avail_id=
x
> >> I believe. Or maybe you can give us an example?
> >>
> > A simple example, we assume ring size is 8:
> >
> > 1. guest fill avail ring
> >
> > avail ring: 0 1 2 3 4 5 6 7
> > used ring:
> >
> > 2. vhost-user backend complete 4,5,6,7 and fill used ring
> >
> > avail ring: 0 1 2 3 4 5 6 7
> > used ring: 4 5 6 7
> >
> > 3. guest fill avail ring again
> >
> > avail ring: 4 5 6 7 4 5 6 7
> > used ring: 4 5 6 7
> >
> > 4. vhost-user backend crash
> >
> > The inflight descriptors 0, 1, 2, 3 lost.
> >
> > Thanks,
> > Yongji
>
>
> Ok, then we can simply forbid increasing the avail_idx in this case?
>
> Basically, it's a question of whether or not it's better to done it in
> the level of virtio instead of vhost. I'm pretty sure if we expose
> sufficient information, it could be done without touching vhost-user.
> And we won't deal with e.g migration and other cases.
>

OK, I get your point. That's indeed an alternative way. But this feature se=
ems
to be only useful to vhost-user backend. I'm not sure whether it make sense=
 to
touch virtio protocol for this feature.

Thanks,
Yongji

