Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:55:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0881758079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 12:23:17 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 12 Dec 2018 12:23:16 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AggN3YRGYXsUq6V2RR1jCeZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p8y+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCI+hXs4bzqUYWrRa8BwehC/7jxzFUinDoxq03yPghERjc0QA8A94CrH?=
 =?us-ascii?q?bZodPoP6kSS+C1y6zIwC3EYfxMwzfy9JHEfwwnof6RR7J3a9fax08yFwPfkFqf?=
 =?us-ascii?q?s5HlNC6S2+QIqWeb9fZvWvipi2E6sQF+vCKjxsMxionTmI0a0E3E+D52wIYwP9?=
 =?us-ascii?q?K4SUp7bcS4H5tXsiGXLo17Sd4hTWFwoCs21KEKtJ2hcCQX1ZgqxATTZ+KJfoWI?=
 =?us-ascii?q?+B7vSeScLS9miH1/ZL6zmxO//VWvx+D8SsW51VlHoylEn9TDs30ByQDf582CR/?=
 =?us-ascii?q?Zy8UqtxDCC3B3J5O5eO0A7j6/bJoYhwrEukpoTtlzOHiv3mEXtkK+WbV8o+ueu?=
 =?us-ascii?q?6+T6eLnmoYWcN4BshgH/NKQhhNC/DPwmPgQSXGWX4/mw2KDg8EHjXrlHgP07nr?=
 =?us-ascii?q?PEvJ3YPcgbo7S2Aw5R0oYt8Ra/CDKm3cwBnXYZKVJFZQuLgJX3NFHQPv/4Ce6z?=
 =?us-ascii?q?jE+rkDd2wfDJIqPuAo7KInjHkbfhfqhy51RTyQou1d1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYFVGKJBa+ZNqzSsVmV5u41JOmMfoAVtC7nK/c5//7u?=
 =?us-ascii?q?kWM5mVgFcKmt3JsXa263Eu5pIkWEenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIf1RbrFXZ2n1bydwD+gTNoRYmFdFkvKF3DueIOZHfAWZ2WXK85llzUC?=
 =?us-ascii?q?Er+5V44m0wrprQL/1v9rI/TZ/n4ls4n+3o1w7uzXiRZg7DFxEoGR3n+ASyRuk3?=
 =?us-ascii?q?oVSiQq9KZ4p0N71xGEy6cvmOFSF9FY+6ZUVBwnP4XX1e1wBoPOXVfZftaNTVqO?=
 =?us-ascii?q?WNiqATgtCNk2xowgeUF4TvCrlBuG9iymGT5ds6GRCZUpuvbZ1mL6LsBx0XuA0L?=
 =?us-ascii?q?Q7glA7asRKPGyiwKV48l6AVMbyj0yFmvPyJuwn1ynX+TLGlDLWsQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AdAAAXbRFcmBHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJig3yIGV+LM4INiSRlCY1BFIFfFBgUhECCfiI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQEBCAsLBhsOIwyCNgUCAxoBBoJbAQEBAQIBAQIgBBkBBQoMHQECAQEBA?=
 =?us-ascii?q?QIGAQEFBQsKAwICIgQCAgMBHgERAQUBHBkFA4MZgWkBAw0IAQSbJDyLDXwWBQE?=
 =?us-ascii?q?XgncFhDkKGScNXTGBBgIGEnmLMYIWgRGDEoRGJBeDBIJXAoswhCZqhFeLdQcCk?=
 =?us-ascii?q?VcYkUaZMA8hgSVggS4zGiOBAYI7ghsMFxKDOIpYPDEBgQaLCYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AdAAAXbRFcmBHrdtBkHQEBBQEHBQGBUQgBCwGBMIJig3y?=
 =?us-ascii?q?IGV+LM4INiSRlCY1BFIFfFBgUhECCfiI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLB?=
 =?us-ascii?q?hsOIwyCNgUCAxoBBoJbAQEBAQIBAQIgBBkBBQoMHQECAQEBAQIGAQEFBQsKAwI?=
 =?us-ascii?q?CIgQCAgMBHgERAQUBHBkFA4MZgWkBAw0IAQSbJDyLDXwWBQEXgncFhDkKGScNX?=
 =?us-ascii?q?TGBBgIGEnmLMYIWgRGDEoRGJBeDBIJXAoswhCZqhFeLdQcCkVcYkUaZMA8hgSV?=
 =?us-ascii?q?ggS4zGiOBAYI7ghsMFxKDOIpYPDEBgQaLCYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,346,1539673200"; 
   d="scan'208";a="43817729"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 12:22:44 -0800
Received: from localhost ([::1]:47945 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXB1n-0002Jh-PG
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 15:22:43 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60066)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@gmail.com>) id 1gXB1e-0002Jc-0j
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 15:22:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@gmail.com>) id 1gXB1c-000098-T4
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 15:22:34 -0500
Received: from mail-wr1-x441.google.com ([2a00:1450:4864:20::441]:44124)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <marcandre.lureau@gmail.com>)
	id 1gXB1c-00006L-IN
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 15:22:32 -0500
Received: by mail-wr1-x441.google.com with SMTP id z5so18964187wrt.11
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 12:22:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc:content-transfer-encoding;
	bh=w0B8iA9uH6ZoaWB8EqbCtJkLaSozkILMjGYDlXD1RSI=;
	b=PQzQm/Rsym3cKfl/N5vaFC54kuKEdwLDUZojdmLzWxTzWCW1Q9jteSdsFBVvACHC4X
	leSjklhdtWatZUUsTFk++QUSh6+1caVCEPX+//9ujsrTg0GleIO/+bIv772BJ8XJAU88
	yGrrlCTvcBiw7ubM2sWdwGNNJTK93+IazkZhmBeZrMXUsVsvdQ4jas6A0ovrqaAREmro
	KOMz4/m9tut3qLCbYDGVifzuoSeAxOW+PBzIDCIW2WNi2GTdPUwCWOhtf7H1pUKWkykT
	FqLBwN1+Hi4zSedrfoD0Cry9WiP6fS5hBdxmKSjPHj62iaXcrSvdUmdZxyAlggB715RQ
	Ho0Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=w0B8iA9uH6ZoaWB8EqbCtJkLaSozkILMjGYDlXD1RSI=;
	b=UsyglysGSIJ/95N4HrzBu+H1SiQbOekDyaztz5EW1ayJ7yC9pd2jqAT2X2jmSTR0Pi
	7SCEycyB7SQxvWh/BYTCSONpyEllVMCWiZg8HipedHD2wfxkuFc2aVAYaI/LjSY01Rif
	CX8FiblgEhP+bdxFiqYuvoNNnWF9Iy4dCBUuAqDUmOodRyyRsrtbhJsUydksrVfPRiJc
	zWum9vuO5yHQ6L4VBkSimAgkLhb9Esh0jqS1zFuwbVAAT42joYbpgCrXRM6HYbe233bk
	5haCSbmh+9EwwpbYm7lCRQkOKNFBY5lLoz1XV/0K9uEGz/FkCSibhu08FDnA43oiit2H
	7xCw==
X-Gm-Message-State: AA+aEWazcOyaGsqHVOEe6b5C5vxnwVvwMLz9zj8Iw/omQuh44IKiU5sf
	gCDb3EtyreECS+2JoU+wWanmHgwMUTTtzimZfOk=
X-Google-Smtp-Source: AFSGD/XK3+GfZdam6xXvsbPnlUTX4Y3eN+dWFqNeMAOEuljZcKM0yOJWTHtQ1GTfrzT5mdQZWRrOVWXyQ4duI/yE6HY=
X-Received: by 2002:a5d:5351:: with SMTP id t17mr18372110wrv.288.1544646150893;
	Wed, 12 Dec 2018 12:22:30 -0800 (PST)
MIME-Version: 1.0
References: <20180910083222.8245-1-marcandre.lureau@redhat.com>
	<20180910083222.8245-4-marcandre.lureau@redhat.com>
	<d67240e3-7dd0-732f-62b4-bb6b332d8dfe@redhat.com>
In-Reply-To: <d67240e3-7dd0-732f-62b4-bb6b332d8dfe@redhat.com>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@gmail.com>
Date: Thu, 13 Dec 2018 00:22:18 +0400
Message-ID: <CAJ+F1CJXwF3Gtd1G4GK3AfOYAEs7aNLBUhtRMksHNkpESdpiDw@mail.gmail.com>
To: philmd@redhat.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::441
Subject: Re: [Qemu-devel] [PATCH v12 3/6] tpm: allocate/map buffer for TPM
 Physical Presence interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>,
	Stefan Berger <stefanb@linux.vnet.ibm.com>,
	"Michael S. Tsirkin" <mst@redhat.com>, QEMU <qemu-devel@nongnu.org>,
	Paolo Bonzini <pbonzini@redhat.com>, Igor Mammedov <imammedo@redhat.com>,
	Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi

On Wed, Dec 12, 2018 at 8:13 PM Philippe Mathieu-Daud=C3=A9
<philmd@redhat.com> wrote:
>
> Hi Stefan, Marc-Andr=C3=A9,
>
> On 9/10/18 10:32 AM, Marc-Andr=C3=A9 Lureau wrote:
> > From: Stefan Berger <stefanb@linux.vnet.ibm.com>
> >
> > Implement a virtual memory device for the TPM Physical Presence interfa=
ce.
> > The memory is located at 0xFED45000 and used by ACPI to send messages t=
o the
> > firmware (BIOS) and by the firmware to provide parameters for each one =
of
> > the supported codes.
> >
> > This interface should be used by all TPM devices on x86 and can be
> > added by calling tpm_ppi_init_io().
> >
> > Note: bios_linker cannot be used to allocate the PPI memory region,
> > since the reserved memory should stay stable across reboots, and might
> > be needed before the ACPI tables are installed.
> >
> > Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>
> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> > Reviewed-by: Igor Mammedov <imammedo@redhat.com>
> > ---
> >  hw/tpm/tpm_ppi.h      | 26 ++++++++++++++++++++++++++
> >  include/hw/acpi/tpm.h |  6 ++++++
> >  hw/tpm/tpm_crb.c      |  8 ++++++++
> >  hw/tpm/tpm_ppi.c      | 32 ++++++++++++++++++++++++++++++++
> >  hw/tpm/tpm_tis.c      |  8 ++++++++
> >  hw/tpm/Makefile.objs  |  1 +
> >  6 files changed, 81 insertions(+)
> >  create mode 100644 hw/tpm/tpm_ppi.h
> >  create mode 100644 hw/tpm/tpm_ppi.c
> >
> > diff --git a/hw/tpm/tpm_ppi.h b/hw/tpm/tpm_ppi.h
> > new file mode 100644
> > index 0000000000..c2ab2ed300
> > --- /dev/null
> > +++ b/hw/tpm/tpm_ppi.h
> > @@ -0,0 +1,26 @@
> > +/*
> > + * TPM Physical Presence Interface
> > + *
> > + * Copyright (C) 2018 IBM Corporation
> > + *
> > + * Authors:
> > + *  Stefan Berger    <stefanb@us.ibm.com>
> > + *
> > + * This work is licensed under the terms of the GNU GPL, version 2 or =
later.
> > + * See the COPYING file in the top-level directory.
> > + */
> > +#ifndef TPM_TPM_PPI_H
> > +#define TPM_TPM_PPI_H
> > +
> > +#include "hw/acpi/tpm.h"
> > +#include "exec/address-spaces.h"
> > +
> > +typedef struct TPMPPI {
> > +    MemoryRegion ram;
> > +    uint8_t *buf;
> > +} TPMPPI;
> > +
>
> Can you add a description for this public function?

ok

>
> > +bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
> > +                  hwaddr addr, Object *obj, Error **errp);
> > +
> > +#endif /* TPM_TPM_PPI_H */
> > diff --git a/include/hw/acpi/tpm.h b/include/hw/acpi/tpm.h
> > index 3580ffd50c..b8796df916 100644
> > --- a/include/hw/acpi/tpm.h
> > +++ b/include/hw/acpi/tpm.h
> > @@ -188,4 +188,10 @@ REG32(CRB_DATA_BUFFER, 0x80)
> >  #define TPM2_START_METHOD_MMIO      6
> >  #define TPM2_START_METHOD_CRB       7
> >
> > +/*
> > + * Physical Presence Interface
> > + */
> > +#define TPM_PPI_ADDR_SIZE           0x400
> > +#define TPM_PPI_ADDR_BASE           0xFED45000
> > +
> >  #endif /* HW_ACPI_TPM_H */
> > diff --git a/hw/tpm/tpm_crb.c b/hw/tpm/tpm_crb.c
> > index d5b0ac5920..b243222fd6 100644
> > --- a/hw/tpm/tpm_crb.c
> > +++ b/hw/tpm/tpm_crb.c
> > @@ -29,6 +29,7 @@
> >  #include "sysemu/reset.h"
> >  #include "tpm_int.h"
> >  #include "tpm_util.h"
> > +#include "tpm_ppi.h"
> >  #include "trace.h"
> >
> >  typedef struct CRBState {
> > @@ -43,6 +44,7 @@ typedef struct CRBState {
> >      size_t be_buffer_size;
> >
> >      bool ppi_enabled;
> > +    TPMPPI ppi;
> >  } CRBState;
> >
> >  #define CRB(obj) OBJECT_CHECK(CRBState, (obj), TYPE_TPM_CRB)
> > @@ -294,6 +296,12 @@ static void tpm_crb_realize(DeviceState *dev, Erro=
r **errp)
> >      memory_region_add_subregion(get_system_memory(),
> >          TPM_CRB_ADDR_BASE + sizeof(s->regs), &s->cmdmem);
> >
> > +    if (s->ppi_enabled &&
> > +        !tpm_ppi_init(&s->ppi, get_system_memory(),
> > +                      TPM_PPI_ADDR_BASE, OBJECT(s), errp)) {
> > +        return;
> > +    }
> > +
> >      qemu_register_reset(tpm_crb_reset, dev);
> >  }
> >
> > diff --git a/hw/tpm/tpm_ppi.c b/hw/tpm/tpm_ppi.c
> > new file mode 100644
> > index 0000000000..f2f07f895e
> > --- /dev/null
> > +++ b/hw/tpm/tpm_ppi.c
> > @@ -0,0 +1,32 @@
> > +/*
> > + * tpm_ppi.c - TPM Physical Presence Interface
> > + *
> > + * Copyright (C) 2018 IBM Corporation
> > + *
> > + * Authors:
> > + *  Stefan Berger <stefanb@us.ibm.com>
> > + *
> > + * This work is licensed under the terms of the GNU GPL, version 2 or =
later.
> > + * See the COPYING file in the top-level directory.
> > + *
> > + */
> > +
> > +#include "qemu/osdep.h"
> > +
> > +#include "qapi/error.h"
> > +#include "cpu.h"
> > +#include "sysemu/memory_mapping.h"
> > +#include "migration/vmstate.h"
> > +#include "tpm_ppi.h"
> > +
> > +bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
> > +                  hwaddr addr, Object *obj, Error **errp)
> > +{
> > +    tpmppi->buf =3D g_malloc0(HOST_PAGE_ALIGN(TPM_PPI_ADDR_SIZE));
> > +    memory_region_init_ram_device_ptr(&tpmppi->ram, obj, "tpm-ppi",
> > +                                      TPM_PPI_ADDR_SIZE, tpmppi->buf);
> > +    vmstate_register_ram(&tpmppi->ram, DEVICE(obj));
> > +
> > +    memory_region_add_subregion(m, addr, &tpmppi->ram);
> > +    return true;
> > +}
> > diff --git a/hw/tpm/tpm_tis.c b/hw/tpm/tpm_tis.c
> > index d9ddf9b723..70432ffe8b 100644
> > --- a/hw/tpm/tpm_tis.c
> > +++ b/hw/tpm/tpm_tis.c
> > @@ -31,6 +31,7 @@
> >  #include "sysemu/tpm_backend.h"
> >  #include "tpm_int.h"
> >  #include "tpm_util.h"
> > +#include "tpm_ppi.h"
> >  #include "trace.h"
> >
> >  #define TPM_TIS_NUM_LOCALITIES      5     /* per spec */
> > @@ -83,6 +84,7 @@ typedef struct TPMState {
> >      size_t be_buffer_size;
> >
> >      bool ppi_enabled;
> > +    TPMPPI ppi;
> >  } TPMState;
> >
> >  #define TPM(obj) OBJECT_CHECK(TPMState, (obj), TYPE_TPM_TIS)
> > @@ -979,6 +981,12 @@ static void tpm_tis_realizefn(DeviceState *dev, Er=
ror **errp)
> >
> >      memory_region_add_subregion(isa_address_space(ISA_DEVICE(dev)),
> >                                  TPM_TIS_ADDR_BASE, &s->mmio);
> > +
> > +    if (s->ppi_enabled &&
> > +        !tpm_ppi_init(&s->ppi, isa_address_space(ISA_DEVICE(dev)),
> > +                      TPM_PPI_ADDR_BASE, OBJECT(s), errp)) {
> > +        return;
> > +    }
> >  }
> >
>
> Shouldn't you implement the unrealize() function, destroying the PPI buff=
er?

I don't think it's necessary since the TPM and PPI are not hotpluggable.

> Patch looks good otherwise.
>
> >  static void tpm_tis_initfn(Object *obj)
> > diff --git a/hw/tpm/Makefile.objs b/hw/tpm/Makefile.objs
> > index 1dc9f8bf2c..700c878622 100644
> > --- a/hw/tpm/Makefile.objs
> > +++ b/hw/tpm/Makefile.objs
> > @@ -1,4 +1,5 @@
> >  common-obj-y +=3D tpm_util.o
> > +obj-y +=3D tpm_ppi.o
> >  common-obj-$(CONFIG_TPM_TIS) +=3D tpm_tis.o
> >  common-obj-$(CONFIG_TPM_CRB) +=3D tpm_crb.o
> >  common-obj-$(CONFIG_TPM_PASSTHROUGH) +=3D tpm_passthrough.o
> >
>


--=20
Marc-Andr=C3=A9 Lureau

