Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 19:47:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A25685807C6
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 01:01:30 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga007-1.jf.intel.com with ESMTP; 11 Dec 2018 01:01:30 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A+zwHmBHfjpydQcPPZGSb6p1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p82+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/ZhM9+gqVZrxKvuhJ/24zZboOaOfZjcK7RYc0VRXFaU8pNSyBMGJ+w?=
 =?us-ascii?q?YpETA+YdO+tTsonzp0EJrRu7HQSjBP3gyj5VjXD2x6I61eshGhzB0Q0uAd0OsW?=
 =?us-ascii?q?7YrdvvOKYcS++1yqbIwC7Cb/NQxTfy9ozIfgo9rvGLWLJ9aMzcwlQsGQPdllic?=
 =?us-ascii?q?t5DpMjCP2ugQrmSW7PBsWfyhhmMnsQ19vzqiyt8xhoTHiY8Z0E3I+Ct2zYovON?=
 =?us-ascii?q?G1Rk92bcS5HJdMqy2XMZZ9TNk4TGFyoik6z6ULuZ6lcygOz5Qq3xrfa/2cc4iU?=
 =?us-ascii?q?+RLvTumRITFlhH5/f7K/nRmy/VChyu36SMa0zE5HojRZntTPrHwBygHf58udRv?=
 =?us-ascii?q?dj8Eqs2SyD2x3R5+1cJEA7j6vbK5ovwr4qkZoTtFzOHjbol0Xzka+ab1gr9fa2?=
 =?us-ascii?q?6+v5ZrXqv4STN4hpigH4LqshhNe/DeM8MggPXGiU5/6w1bL+/UDhRLVKj/s2kr?=
 =?us-ascii?q?TWsZzAJMQboLK5DBFR0oo59xm/CDKm3c8enXkAKlJFdxSHj5XzN1HJOvD4Au+z?=
 =?us-ascii?q?g06wnzdz2/DGIrrhD43JLnjCk7fuY6xx6kFByAcoydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B9hcsjX3mSCPqZLL/Kqg3PoeYuOPWXIokSvjn7Nr4i/fGp?=
 =?us-ascii?q?iHY4nVoUe+6uxYcWb3ajWe1rJljcbXfyj9NSLGERowBrSeXrjEGFAydeYmv3U6?=
 =?us-ascii?q?8i6zV+Eo+/EIrYWqirh7qO2jr9GYdZMXtbAFKBGmu9aoOfRv0XYziTKMIyrjtR?=
 =?us-ascii?q?TLWkVsot2A+jsCf8zLxoKPeS/TcX8dr91cJp5uqWmRws3Th1FNiGlWaEVGBv22?=
 =?us-ascii?q?QQSjlw27pw5QR40Uury6V0g/VEU9dU4rcBSxo7M4LRy+VSEd3+WgvdONyOTRLu?=
 =?us-ascii?q?TtqnBTs8VM4Z2dICY09hXd6li1SLxye2DqUFv6aGCJw97uTX2H2iCdx6ziP52a?=
 =?us-ascii?q?hpsFAgTYMbKmCnwLE56AHVCKbIlVmUk+ChcqFKj32Fz3uK0Wfb5BIQawV3S6iQ?=
 =?us-ascii?q?BX0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CJAQB5fA9cmBHrdtBkHgEGBwaBVAYLA?=
 =?us-ascii?q?YEwgmKMc4sxKYE/mWgWGBSHeCI3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwy?=
 =?us-ascii?q?CNgUCAxgJglwDAwECJB8KKQMDAQIGAQFFAwgDAVMHEgWDHIICAQSmMTOKLYd7h?=
 =?us-ascii?q?D96gRyBETONOwKQOpA9BwKCJo8qAhaRP4hYS5AQgVyBeE0jgzyCJAMXEotlgjM?=
 =?us-ascii?q?0MQGBBohtgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CJAQB5fA9cmBHrdtBkHgEGBwaBVAYLAYEwgmKMc4sxKYE?=
 =?us-ascii?q?/mWgWGBSHeCI3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxgJglwDA?=
 =?us-ascii?q?wECJB8KKQMDAQIGAQFFAwgDAVMHEgWDHIICAQSmMTOKLYd7hD96gRyBETONOwK?=
 =?us-ascii?q?QOpA9BwKCJo8qAhaRP4hYS5AQgVyBeE0jgzyCJAMXEotlgjM0MQGBBohtgXcBA?=
 =?us-ascii?q?Q?=
X-IronPort-AV: E=Sophos;i="5.56,341,1539673200"; 
   d="scan'208";a="43555766"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 01:01:29 -0800
Received: from localhost ([::1]:36632 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWduz-0004ph-3p
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 04:01:29 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51611)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <wei.w.wang@intel.com>) id 1gWdre-0002TP-Hc
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 03:58:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <wei.w.wang@intel.com>) id 1gWdrd-0006Ir-1Y
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 03:58:02 -0500
Received: from mga07.intel.com ([134.134.136.100]:27021)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <wei.w.wang@intel.com>)
	id 1gWdrc-0006FH-M8
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 03:58:00 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
	by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	11 Dec 2018 00:58:00 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,341,1539673200"; d="scan'208";a="117803126"
Received: from devel-ww.sh.intel.com ([10.239.48.119])
	by orsmga001.jf.intel.com with ESMTP; 11 Dec 2018 00:57:58 -0800
From: Wei Wang <wei.w.wang@intel.com>
To: qemu-devel@nongnu.org, virtio-dev@lists.oasis-open.org, mst@redhat.com,
	quintela@redhat.com, dgilbert@redhat.com, peterx@redhat.com
Date: Tue, 11 Dec 2018 16:24:50 +0800
Message-Id: <1544516693-5395-5-git-send-email-wei.w.wang@intel.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544516693-5395-1-git-send-email-wei.w.wang@intel.com>
References: <1544516693-5395-1-git-send-email-wei.w.wang@intel.com>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 134.134.136.100
Subject: [Qemu-devel] [PATCH v11 4/7] migration: API to clear bits of guest
 free pages from the dirty bitmap
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: pbonzini@redhat.com, liliang.opensource@gmail.com, nilal@redhat.com,
	wei.w.wang@intel.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This patch adds an API to clear bits corresponding to guest free pages
from the dirty bitmap. Spilt the free page block if it crosses the QEMU
RAMBlock boundary.

Signed-off-by: Wei Wang <wei.w.wang@intel.com>
CC: Dr. David Alan Gilbert <dgilbert@redhat.com>
CC: Juan Quintela <quintela@redhat.com>
CC: Michael S. Tsirkin <mst@redhat.com>
CC: Peter Xu <peterx@redhat.com>
Reviewed-by: Peter Xu <peterx@redhat.com>
---
 include/migration/misc.h |  2 ++
 migration/ram.c          | 47 +++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+)

diff --git a/include/migration/misc.h b/include/migration/misc.h
index 4ebf24c..113320e 100644
--- a/include/migration/misc.h
+++ b/include/migration/misc.h
@@ -14,11 +14,13 @@
 #ifndef MIGRATION_MISC_H
 #define MIGRATION_MISC_H
 
+#include "exec/cpu-common.h"
 #include "qemu/notify.h"
 
 /* migration/ram.c */
 
 void ram_mig_init(void);
+void qemu_guest_free_page_hint(void *addr, size_t len);
 
 /* migration/block.c */
 
diff --git a/migration/ram.c b/migration/ram.c
index 01d267f..c13b44f 100644
--- a/migration/ram.c
+++ b/migration/ram.c
@@ -3131,6 +3131,53 @@ static void ram_state_resume_prepare(RAMState *rs, QEMUFile *out)
 }
 
 /*
+ * This function clears bits of the free pages reported by the caller from the
+ * migration dirty bitmap. @addr is the host address corresponding to the
+ * start of the continuous guest free pages, and @len is the total bytes of
+ * those pages.
+ */
+void qemu_guest_free_page_hint(void *addr, size_t len)
+{
+    RAMBlock *block;
+    ram_addr_t offset;
+    size_t used_len, start, npages;
+    MigrationState *s = migrate_get_current();
+
+    /* This function is currently expected to be used during live migration */
+    if (!migration_is_setup_or_active(s->state)) {
+        return;
+    }
+
+    for (; len > 0; len -= used_len, addr += used_len) {
+        block = qemu_ram_block_from_host(addr, false, &offset);
+        if (unlikely(!block || offset >= block->used_length)) {
+            /*
+             * The implementation might not support RAMBlock resize during
+             * live migration, but it could happen in theory with future
+             * updates. So we add a check here to capture that case.
+             */
+            error_report_once("%s unexpected error", __func__);
+            return;
+        }
+
+        if (len <= block->used_length - offset) {
+            used_len = len;
+        } else {
+            used_len = block->used_length - offset;
+        }
+
+        start = offset >> TARGET_PAGE_BITS;
+        npages = used_len >> TARGET_PAGE_BITS;
+
+        qemu_mutex_lock(&ram_state->bitmap_mutex);
+        ram_state->migration_dirty_pages -=
+                      bitmap_count_one_with_offset(block->bmap, start, npages);
+        bitmap_clear(block->bmap, start, npages);
+        qemu_mutex_unlock(&ram_state->bitmap_mutex);
+    }
+}
+
+/*
  * Each of ram_save_setup, ram_save_iterate and ram_save_complete has
  * long-running RCU critical section.  When rcu-reclaims in the code
  * start to become numerous it will be necessary to reduce the
-- 
1.8.3.1


