Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:24:00 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3A65758061F
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 04:47:09 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 04:47:09 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ARxWgbxN6AgU0j5zruZkl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/X7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhc5+jK1UvB2vqAFxw5bWbY+XO/dyY63Qcc8ESmpaRctRSzVBD5mg?=
 =?us-ascii?q?Y4cTE+YMP+BVpJT9qVsUqhu+ABGhCuT1xT9SmnD6xLE30+I8HgHcxgsrAtQAsG?=
 =?us-ascii?q?nOrNrrLqgSTP2+wa7NzTrZdfNZxS3y6I7VfRA7v/6AR7ZwcdfLyUYxDQzFk06d?=
 =?us-ascii?q?qZb7MDyI1uQCqXSb4/B8WuKojm4qsgd8qSWhyMcrj4nGnIMVylbc+CVlwIc1Pc?=
 =?us-ascii?q?O3RFR9YdG+FZtfqSeXPJZ1TMM6W2xkpjo2x74ctZKmYSQHy44rywDRZvGHaYSE?=
 =?us-ascii?q?/xDuWP6PLTtkgH9pYq+zihis/US61+HxVce53ExUoidGlNTHq2oD2AbJ6sedT/?=
 =?us-ascii?q?tw5keh1iiL1wDU8uxEJUE0lbHHK5462LIwmZwTsVnZEi/xgkX2g7eadkQi+ue2?=
 =?us-ascii?q?9+TqeqvqqoOfOoNulw3yL6cjltahDek2MgUCRXWX9Oak2L3m50L5QbFKjvMskq?=
 =?us-ascii?q?netZDXPd0bqbC8Aw9Iy4os9giwDym439QchHUIN1VFeA+Bj4f1JV7OO/f0DfO+?=
 =?us-ascii?q?g1Svjjhn3f/HPqD5D5XJL3jDlqrhfLln505dzgoz0c5Q55ZOBr4dJ/LzX1T8tN?=
 =?us-ascii?q?rfDh8/PAy0xfvnBM961oMEVmKDGrWZP7/KsV+U+uIvJPGBZIsUuDb+Nfcp/fHv?=
 =?us-ascii?q?jWIilF8ZfKmp24YXaX+iEvRnJUWZfWTjgtMbHWgWuQo+Sb+itVuZTDQGZ2quR7?=
 =?us-ascii?q?luoXY/CZm6FsHFQYaihqHH2z20WZhfZ2RDA1bLFm/0doKCQLAVZSePZ8NsjDEA?=
 =?us-ascii?q?BoWnUJIrgBSntQvmzOh+I+/JvyEVq5/nkcJ4/vDejg0a8ztyAMKAlWaXQDZvg2?=
 =?us-ascii?q?kKSjQqib15ulF30VyZ0KJ10MBfQMVe4u4MXgokOJr0yet8BNbvHAXbcYSnUlGj?=
 =?us-ascii?q?F/CvGzp0Z9Q92V5GR1tnFty/xkTG1jChCrkZjbHNAIEu/6vB92L8K8Z01zDN06?=
 =?us-ascii?q?x33ApueddGKWDz3v03zAPUHYOcy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DWAgDkUxJcmBHrdtBjHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBKYN8iHinBxQYAxGHRCI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII?=
 =?us-ascii?q?2BQIDGAmCXAMDAQIgIwopAwMBAgYBASQCIgQCAgMBUxkFgxwBggABBKZ8gS+FQ?=
 =?us-ascii?q?INkgQ2BC4dHg2qCFoERixeCVwKPR3uQTQcChw2KQQsYgimHQ4deiAKJSYd+gV2?=
 =?us-ascii?q?BdzMaI1CCbAmKUIEUhHM8MYEHHIo1gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DWAgDkUxJcmBHrdtBjHQEBBQEHBQGBZYExgTmBKYN8iHi?=
 =?us-ascii?q?nBxQYAxGHRCI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGAmCXAMDA?=
 =?us-ascii?q?QIgIwopAwMBAgYBASQCIgQCAgMBUxkFgxwBggABBKZ8gS+FQINkgQ2BC4dHg2q?=
 =?us-ascii?q?CFoERixeCVwKPR3uQTQcChw2KQQsYgimHQ4deiAKJSYd+gV2BdzMaI1CCbAmKU?=
 =?us-ascii?q?IEUhHM8MYEHHIo1gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="66660045"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 04:47:08 -0800
Received: from localhost ([::1]:52169 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXQOR-0000AS-HQ
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 07:47:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47341)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gXQGT-0000ww-5W
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 07:38:55 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gXQGO-0007k3-CS
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 07:38:53 -0500
Received: from mx1.redhat.com ([209.132.183.28]:48762)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gXQGO-0007io-2d
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 07:38:48 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 6FCD089AD4
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 12:38:47 +0000 (UTC)
Received: from localhost (ovpn-112-51.ams2.redhat.com [10.36.112.51])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 06E425D6A9;
	Thu, 13 Dec 2018 12:38:45 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 16:37:17 +0400
Message-Id: <20181213123724.4866-16-marcandre.lureau@redhat.com>
In-Reply-To: <20181213123724.4866-1-marcandre.lureau@redhat.com>
References: <20181213123724.4866-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Thu, 13 Dec 2018 12:38:47 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v8 15/22] qapi: add 'if' to union members
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: armbru@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Add 'if' key to union members:

{ 'union': 'TestIfUnion', 'data':
    'mem': { 'type': 'str', 'if': 'COND'} }

The generated code remains unconditional for now. Later patches
generate the conditionals.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Reviewed-by: Markus Armbruster <armbru@redhat.com>
---
 scripts/qapi/common.py                  | 15 ++++++++-------
 docs/devel/qapi-code-gen.txt            |  2 +-
 tests/qapi-schema/qapi-schema-test.json |  4 +++-
 tests/qapi-schema/qapi-schema-test.out  |  4 ++++
 tests/qapi-schema/test-qapi.py          |  1 +
 5 files changed, 17 insertions(+), 9 deletions(-)

diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
index 8ea1dde03b..5c57eca953 100644
--- a/scripts/qapi/common.py
+++ b/scripts/qapi/common.py
@@ -803,7 +803,7 @@ def check_union(expr, info):
         check_name(info, "Member of union '%s'" % name, key)
=20
         check_known_keys(info, "member '%s' of union '%s'" % (key, name)=
,
-                         value, ['type'], [])
+                         value, ['type'], ['if'])
         # Each value must name a known type
         check_type(info, "Member '%s' of union '%s'" % (key, name),
                    value['type'],
@@ -1484,8 +1484,8 @@ class QAPISchemaObjectTypeVariants(object):
 class QAPISchemaObjectTypeVariant(QAPISchemaObjectTypeMember):
     role =3D 'branch'
=20
-    def __init__(self, name, typ):
-        QAPISchemaObjectTypeMember.__init__(self, name, typ, False)
+    def __init__(self, name, typ, ifcond=3DNone):
+        QAPISchemaObjectTypeMember.__init__(self, name, typ, False, ifco=
nd)
=20
=20
 class QAPISchemaAlternateType(QAPISchemaType):
@@ -1757,14 +1757,14 @@ class QAPISchema(object):
     def _make_variant(self, case, typ):
         return QAPISchemaObjectTypeVariant(case, typ)
=20
-    def _make_simple_variant(self, case, typ, info):
+    def _make_simple_variant(self, case, typ, ifcond, info):
         if isinstance(typ, list):
             assert len(typ) =3D=3D 1
             typ =3D self._make_array_type(typ[0], info)
         typ =3D self._make_implicit_object_type(
             typ, info, None, self.lookup_type(typ),
             'wrapper', [self._make_member('data', typ, None, info)])
-        return QAPISchemaObjectTypeVariant(case, typ)
+        return QAPISchemaObjectTypeVariant(case, typ, ifcond)
=20
     def _def_union_type(self, expr, info, doc):
         name =3D expr['union']
@@ -1782,9 +1782,10 @@ class QAPISchema(object):
                         for (key, value) in data.items()]
             members =3D []
         else:
-            variants =3D [self._make_simple_variant(key, value['type'], =
info)
+            variants =3D [self._make_simple_variant(key, value['type'],
+                                                  value.get('if'), info)
                         for (key, value) in data.items()]
-            enum =3D [{'name': v.name} for v in variants]
+            enum =3D [{'name': v.name, 'if': v.ifcond} for v in variants=
]
             typ =3D self._make_implicit_enum_type(name, info, ifcond, en=
um)
             tag_member =3D QAPISchemaObjectTypeMember('type', typ, False=
)
             members =3D [tag_member]
diff --git a/docs/devel/qapi-code-gen.txt b/docs/devel/qapi-code-gen.txt
index 3895808b4a..0a0e53ede5 100644
--- a/docs/devel/qapi-code-gen.txt
+++ b/docs/devel/qapi-code-gen.txt
@@ -754,7 +754,7 @@ gets its generated code guarded like this:
=20
 Where a member can be defined with a single string value for its type,
 it is also possible to supply a dictionary instead with both 'type'
-and 'if' keys. (TODO: union and alternate)
+and 'if' keys. (TODO: alternate)
=20
 Example: a conditional 'bar' member
=20
diff --git a/tests/qapi-schema/qapi-schema-test.json b/tests/qapi-schema/=
qapi-schema-test.json
index c46f3b5732..a33eff8f86 100644
--- a/tests/qapi-schema/qapi-schema-test.json
+++ b/tests/qapi-schema/qapi-schema-test.json
@@ -210,7 +210,9 @@
   [ 'foo', { 'name' : 'bar', 'if': 'defined(TEST_IF_ENUM_BAR)' } ],
   'if': 'defined(TEST_IF_ENUM)' }
=20
-{ 'union': 'TestIfUnion', 'data': { 'foo': 'TestStruct' },
+{ 'union': 'TestIfUnion', 'data':
+  { 'foo': 'TestStruct',
+    'union_bar': { 'type': 'str', 'if': 'defined(TEST_IF_UNION_BAR)'} },
   'if': 'defined(TEST_IF_UNION) && defined(TEST_IF_STRUCT)' }
=20
 { 'command': 'TestIfUnionCmd', 'data': { 'union_cmd_arg': 'TestIfUnion' =
},
diff --git a/tests/qapi-schema/qapi-schema-test.out b/tests/qapi-schema/q=
api-schema-test.out
index 7987b23403..f4c11f1e6a 100644
--- a/tests/qapi-schema/qapi-schema-test.out
+++ b/tests/qapi-schema/qapi-schema-test.out
@@ -280,11 +280,15 @@ object q_obj_TestStruct-wrapper
     member data: TestStruct optional=3DFalse
 enum TestIfUnionKind
     member foo
+    member union_bar
+        if ['defined(TEST_IF_UNION_BAR)']
     if ['defined(TEST_IF_UNION) && defined(TEST_IF_STRUCT)']
 object TestIfUnion
     member type: TestIfUnionKind optional=3DFalse
     tag type
     case foo: q_obj_TestStruct-wrapper
+    case union_bar: q_obj_str-wrapper
+        if ['defined(TEST_IF_UNION_BAR)']
     if ['defined(TEST_IF_UNION) && defined(TEST_IF_STRUCT)']
 object q_obj_TestIfUnionCmd-arg
     member union_cmd_arg: TestIfUnion optional=3DFalse
diff --git a/tests/qapi-schema/test-qapi.py b/tests/qapi-schema/test-qapi=
.py
index 27081cb50c..d592854601 100644
--- a/tests/qapi-schema/test-qapi.py
+++ b/tests/qapi-schema/test-qapi.py
@@ -68,6 +68,7 @@ class QAPISchemaTestVisitor(QAPISchemaVisitor):
             print('    tag %s' % variants.tag_member.name)
             for v in variants.variants:
                 print('    case %s: %s' % (v.name, v.type.name))
+                QAPISchemaTestVisitor._print_if(v.ifcond, indent=3D8)
=20
     @staticmethod
     def _print_if(ifcond, indent=3D4):
--=20
2.20.0


