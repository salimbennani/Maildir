Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:25:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8A55258079D;
	Thu, 13 Dec 2018 23:09:57 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 13 Dec 2018 23:09:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ah6UaBBSICG3vbIReLiHU+9vTLNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRODt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZH42y?=
 =?us-ascii?q?cYUPAeoCM+hWoYbyqFkBogexCwm3HOPiyCRFhmP00KAgz+gtDQ/L0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6syKnH0zbDb+hM1jf79YfIaA0qrO2KXb1ta8rR1FIvFwPZgVWQ?=
 =?us-ascii?q?t4PlOTCV1uMQuGWc9eVgU/+gi3Q5pw1tvjSj2twhiobMho0Py1DE8T91z5oyJd?=
 =?us-ascii?q?29UUN2Z8OvHpVXtyGfLYR2Q8UiTnlmuCYg1LIJp4O0czYRyJQk2x7fbOSHf5KP?=
 =?us-ascii?q?4hL5W+adOTR4i2x/eLK5mRmy9VKsyurmVsm7yFpLoTRKkt/WunAKzRzT5c6KQe?=
 =?us-ascii?q?Z+8Ee5wTuDyRzf5+VeLUwpm6fXNYQtzqMzm5YPq0jOHy37lF31gaKWbEko5Pak?=
 =?us-ascii?q?5ur9brn4upORM5V4hh/gPqkoh8exG/43MhIUUGie4em81KPs/Un+QLhSkP02nb?=
 =?us-ascii?q?fWsIrAKcQYuKG5GQlV3Zgn6xqlCDemytsYkWEGLFJDZh2Hk5DkN0/SLP38F/uz?=
 =?us-ascii?q?nlqhnClxy/zbPbDtHo/BI3nBnbv5eLZy8U9cyA49zdBF4JJUD6kMIPbyWk/3qd?=
 =?us-ascii?q?zZAQY1Mw+qzOb9DtVyyIceVXuIAq6XNqPdr0WI6/kxI+mDeoAVoizxK/s76P70?=
 =?us-ascii?q?i382h1sdcbOu3ZsNZ3C0Bu5mLFmBYXrwntcBFn8Hvg4/TOzpllKOSzFSZ2upUq?=
 =?us-ascii?q?I45zE7Dp+mDIjZSoCshryBwDm0HplMam9aDVCMFG/id5+YVPcUdCKSPshhnyQE?=
 =?us-ascii?q?Vbe7So8hyQuhtAjgx7pnM+rb4CsYtZ342dhx5u3Tkwwy9DNuA8Sc1WGNU397nm?=
 =?us-ascii?q?cSSzAq26B/pFR3yk2f3qhgn/xYCdtT6utLUgc9K5HQ1e96C9f0WgLHedeEU1Km?=
 =?us-ascii?q?QtSgATEsQdM92d4OY0BhG9q8ihDPxTalA7gQl7aTHpw77rrc32TtJ8Z603vJzr?=
 =?us-ascii?q?Ihj1khQstML2GmnLRw9wrICo7NkkWZkbuqdKsG0C7M8meD0XSBvEVCXAFsVqXF?=
 =?us-ascii?q?WGgVZlHKotTh+kPCU7iuBKwkMgRbz86OMK9KatzzglVAS/fuI9DeY2O3m2etCh?=
 =?us-ascii?q?eE3LKMbIz2e2oD2CXRElQLkwcW/XyeLwgxGj+ho37CDDxpDV/gflnj8fdgp3+h?=
 =?us-ascii?q?Tk871QeKb1Z/2Lqz/RIVgf+cS/YX3r8fvCchqjN0HEuy3t7MCtqAoRZhc7tYYd?=
 =?us-ascii?q?8n/FhH0mfZvRRnPpO8N6BimkIecwNvskzzzRp3FJtPndIqrHwwygpyMryX0FVa?=
 =?us-ascii?q?ejOc3JDwPKDXK2bo8BCuba7Wxk/R0NKM9qgT7/Q4rk3pvBu1GUo673Vnz95V3m?=
 =?us-ascii?q?OA5pXLCQoSVo7xUkY39hRgu7HWeC4955nQ1X1tN6m0vSTP29YoBOsj1xahcM1T?=
 =?us-ascii?q?MKKCFA/uDcIaA9KiJ/Atm1isdhgEJvxd9LYoP8O6cPuLwLSkPOJ+kzOpk2tG4J?=
 =?us-ascii?q?px3VmR9yVhUOHI2ZUFw/aG3gacUzf8jVGhst34mIxeZDESGHa/xjbgBIJLeqJy?=
 =?us-ascii?q?eoMLA3+0I8Kr3tV+m4LtW3lA+V+jGlMKwtOmdQCTblz9xwJQ00sXrGejmSu5yT?=
 =?us-ascii?q?x0jj4oorCe3CzI3+Ttah4HNnRXS2lliFfmOZK0gMwCXEi0cwgpkwOo5Vz7x6dH?=
 =?us-ascii?q?vqt/NXTcQUBScyjwMW5iSKqwuqOebMFV7JMnrDtYUP67YVCcUbP9pxoa0yX+H2?=
 =?us-ascii?q?pR3jw7djequonnkBx+km6SMHFzrH/Bc8Fq2Rjf/MDcReJW3jceRCh4iCPbB1im?=
 =?us-ascii?q?M9my4NWUkYzOsuS/V2KnS51SfjPnzYKGtCun+2JqBQezkOy0mt3iCQI6yzP018?=
 =?us-ascii?q?F2VSXUqxbxeovr2L6gMeJkfUloA0Xw69FgFYF9kYswhZcQ1mYchpiO+XoHkGHz?=
 =?us-ascii?q?MchU2K7kbXoNQyILzMDR4AT/xEJjKXeJzZrjVnqB2sthe8W6YmQO1yM99c9KD7?=
 =?us-ascii?q?2Y7L5FnStzuVe4qQPRYf5gnjYS0/cu6Xgag/0Xtwop1CmSHrcSHUxANyz2ixuI?=
 =?us-ascii?q?98y+rLlQZGu3cri/zkt+kcqhDLGfuA5cXnn5d4wmHS9x6MV/LV3N3Gfy6oHiZN?=
 =?us-ascii?q?nfc9YTugeInBfHiuhfMIgxmeYShSp7JWL9umUoy+s6jRxtx562poaGJHt2/KKl?=
 =?us-ascii?q?HBFYLCb6aN0J+jHilqtemseW34ayHpRuADkLXZ3oTe62HzIWr/joKwGOEDgkoH?=
 =?us-ascii?q?eBBbXfBROf6Fthr3/XD5CrMHSXKGMYzNp4QhmdOVdfgBsVXDghmp45FwaqxNHu?=
 =?us-ascii?q?cUtj5zAR4EL4pQVIyu5yKxb/VWLfrh+yajgoUJifMAZW7gZa6kjOK8Oe6eZzHz?=
 =?us-ascii?q?xC8p2lsQyAMWibZwVODWEUVU2IHVHjPr+y5dbe9+iUHPaxL/zLYb+Ws+xRS++I?=
 =?us-ascii?q?xY6z0oth5zuMNN+APnx8AP0gwEZDQWp1G8fEmzUMViwXkTjCb9WAqRe4+y13qN?=
 =?us-ascii?q?2/8fvxVALu44uPF6VdMdF19x+qhqeDMvaahDxlJjZAypMM2XjIxaAf3V4VliFu?=
 =?us-ascii?q?biStHq4GtSLXV6LQnalXDxEAZiN3NctI6b883wZXNc7ajNP1yqB3jvovB1hZUl?=
 =?us-ascii?q?zhn9mjZdYWLGGlKFPHGEGLOayGJTLVwsH3YqC8SbxKgOVXrR2wvjmbHFH5PjSe?=
 =?us-ascii?q?jDnkTBSvMeBKjCGGMx1SooC9chBxCWf9SNLqcAG0MNhyjTcu2707mmvKNXIAMT?=
 =?us-ascii?q?h7a05CtKCQ4jhCgvphG21N9H5lLeifliad7unYLIsWsPRxDiR1keJa/Go1y79P?=
 =?us-ascii?q?4C5YQ/x1nTPYrsRyrFG+jumP1j1nXQJSqjZKgYKHp1ltNb/F+ZlAR3nE+gkA7W?=
 =?us-ascii?q?GRCxQMuttkBcfju6FWytjTiq3zLC1O/M7T/csZH8LUMt6IMGI9MRr1Hz7ZFAsE?=
 =?us-ascii?q?QiStNWHahkxdlumd93yVrpcgrJjsl4EDSrtaVFwzC/MbBV5pHN0EIJdrQDwkla?=
 =?us-ascii?q?SXg9IP5Xq7/1HtQ5B2t5bGW/baP/jzNDuDxe1Ibh0JzLe+M4kPKoDh80JsdV1+?=
 =?us-ascii?q?2o/KTRn+R9dI9wplYwwvqUNB6jBXSGEpxlnlYQOg5nwUXaq9mBIs0FMmOcwi8T?=
 =?us-ascii?q?7t5xE8IV+c93h4q1U4hdiw2WPZSzX2NqrlGNgOUyc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAD6VRNch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgmmBAieDfIN7hB6MEVIGgQgtFIhtIQhpjUK?=
 =?us-ascii?q?BcxIBARgLCAGHRSI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBA?=
 =?us-ascii?q?gEBAQEgBBEIARsSCwEDAgkBAQUFCwoDAgImAgIDIAQBDAEFARwGDQYCAQEBgxw?=
 =?us-ascii?q?BgWcBAwgFCAQBCpsNPIsNfBYFAReCdwWBMQEDAgxCgjwKGScNXVBnAgEFEnmLM?=
 =?us-ascii?q?4EPgQeBESeCPS6DHgECAoFKgxiCVwKBKgEBAYgKhlmBCI96AQYCAYFWBYUyhiy?=
 =?us-ascii?q?EGgYYgV2FHIJ0EIdOjiaLAwIEAgQFAgUPIYElgg5wUDFtgU6CGwwXg0qFFIVBP?=
 =?us-ascii?q?jIBgQQBAYoZgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ADAAD6VRNch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgmmBAieDfIN7hB6MEVIGgQgtFIhtIQhpjUKBcxIBARgLCAGHR?=
 =?us-ascii?q?SI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAQEgBBEIARs?=
 =?us-ascii?q?SCwEDAgkBAQUFCwoDAgImAgIDIAQBDAEFARwGDQYCAQEBgxwBgWcBAwgFCAQBC?=
 =?us-ascii?q?psNPIsNfBYFAReCdwWBMQEDAgxCgjwKGScNXVBnAgEFEnmLM4EPgQeBESeCPS6?=
 =?us-ascii?q?DHgECAoFKgxiCVwKBKgEBAYgKhlmBCI96AQYCAYFWBYUyhiyEGgYYgV2FHIJ0E?=
 =?us-ascii?q?IdOjiaLAwIEAgQFAgUPIYElgg5wUDFtgU6CGwwXg0qFFIVBPjIBgQQBAYoZgkw?=
 =?us-ascii?q?BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,351,1539673200"; 
   d="scan'208";a="57452966"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 23:09:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726890AbeLNHJw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 02:09:52 -0500
Received: from mail-lj1-f193.google.com ([209.85.208.193]:32935 "EHLO
        mail-lj1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726520AbeLNHJv (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 02:09:51 -0500
Received: by mail-lj1-f193.google.com with SMTP id v1-v6so4029813ljd.0
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 23:09:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:references:from:cc:message-id:date:user-agent
         :mime-version:in-reply-to:content-transfer-encoding:content-language;
        bh=FS/IqNQl5h0fDnRQkZ5neXYZbjLANhSCRHdXKL9WMno=;
        b=OWU9DPRgFxjFj3lws0fiQI3VeUTPewNiv6mBoFj1X6D8gYDcDjWNVHMC78CJp3ZaVQ
         neDkpYmEC6pAtF76IyYihHT2PFtgzhcZ/bL+Vl8mIY0KEW/RaV3UHZ0ovkI6mdnkEqfo
         +3ZbO/xMzgPJ2BdKjwL6SNGZuqF2BqB2OQ8f1v3Ua/5Qnj94tz3xPw3C0g8trOZXnCVP
         z2OXxR6iCOqC1XhClyobTs+Rp4VLvqsTnl+174jXfv6M/JZLhyKW5ZFoJ3pZQ5Ruc05j
         mmFs3KlkPQZE4CwnDunCiWhvNXjCX0agmXBaEJ6pdRpvVmRwg7HOJLOWRxCEWv2ybKWD
         JWFQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:references:from:cc:message-id:date
         :user-agent:mime-version:in-reply-to:content-transfer-encoding
         :content-language;
        bh=FS/IqNQl5h0fDnRQkZ5neXYZbjLANhSCRHdXKL9WMno=;
        b=Y8bReZCauJuMbLTzvylMzMnZ1i0awX7UkcvTDy1pIWIlcLb/wKC/Tise4rD5qDDau4
         cw3VtyXMAySc0QT96+IjpV5rz2AgsdfkqQmQFOpouQpk+g49tjIfQjtVRLjPMLysjc6P
         RkqlZN8Ux5iKtmzHN9kOz06WtKmDBsFu4tOdupA3zmPkXXCi3iic6ptkDi9Q3UJPTiiG
         C6q0uu8GKWnMRDyxXH4pq7jv9HI+H2YOYPO8cdhab9FB/jx23UeCTumXdp8d3CnX9ljj
         33K1y7cNN3or918SW/hkfezbE8FXWi6jCujaMedobXyZfVAOkr43ogFQPBBcbW5sWUkf
         EWdw==
X-Gm-Message-State: AA+aEWaJnH0HUdnekD4iBwmYhlBwG135L4KzBlckTj2u7QEWnhzXPNzb
        pLOtFrh/NZvHv2wBcb1WxrA=
X-Google-Smtp-Source: AFSGD/UNMrq1EWr6VBUY1fa2JwwPSeAFCIar/Naf5pRKywpW/DQ6DbxFOCBWilp1qqwg/1uuDegSFg==
X-Received: by 2002:a2e:841:: with SMTP id g1-v6mr1141936ljd.21.1544771388148;
        Thu, 13 Dec 2018 23:09:48 -0800 (PST)
Received: from [10.17.182.20] (ll-22.209.223.85.sovam.net.ua. [85.223.209.22])
        by smtp.gmail.com with ESMTPSA id q67sm772381lfe.19.2018.12.13.23.09.46
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 13 Dec 2018 23:09:46 -0800 (PST)
Subject: Re: [PATCH] drm/xen-front: Make shmem backed display buffer coherent
To: Daniel Vetter <daniel.vetter@ffwll.ch>
References: <20181127103252.20994-1-andr2000@gmail.com>
 <b8f34c60-5692-c40d-3635-071d214bfeed@gmail.com>
 <20181213154845.GF21184@phenom.ffwll.local>
From: Oleksandr Andrushchenko <andr2000@gmail.com>
Cc: xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org,
        dri-devel@lists.freedesktop.org, jgross@suse.com,
        boris.ostrovsky@oracle.com,
        Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Message-ID: <57b468f5-cf7a-0dcd-fef8-fd399025fb45@gmail.com>
Date: Fri, 14 Dec 2018 09:09:45 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181213154845.GF21184@phenom.ffwll.local>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/13/18 5:48 PM, Daniel Vetter wrote:
> On Thu, Dec 13, 2018 at 12:17:54PM +0200, Oleksandr Andrushchenko wrote:
>> Daniel, could you please comment?
> Cross-revieweing someone else's stuff would scale better,
fair enough
>   I don't think
> I'll get around to anything before next year.

I put you on CC explicitly because you had comments on other patch [1]

and this one tries to solve the issue raised (I tried to figure out

at [2] if this is the way to go, but it seems I have no alternative here).

While at it [3] (I hope) addresses your comments and the series just

needs your single ack/nack to get in: all the rest ack/r-b are already

there. Do you mind looking at it?

> -Daniel

Thank you very much for your time,

Oleksandr

>> Thank you
>>
>> On 11/27/18 12:32 PM, Oleksandr Andrushchenko wrote:
>>> From: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
>>>
>>> When GEM backing storage is allocated with drm_gem_get_pages
>>> the backing pages may be cached, thus making it possible that
>>> the backend sees only partial content of the buffer which may
>>> lead to screen artifacts. Make sure that the frontend's
>>> memory is coherent and the backend always sees correct display
>>> buffer content.
>>>
>>> Fixes: c575b7eeb89f ("drm/xen-front: Add support for Xen PV display frontend")
>>>
>>> Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
>>> ---
>>>    drivers/gpu/drm/xen/xen_drm_front_gem.c | 62 +++++++++++++++++++------
>>>    1 file changed, 48 insertions(+), 14 deletions(-)
>>>
>>> diff --git a/drivers/gpu/drm/xen/xen_drm_front_gem.c b/drivers/gpu/drm/xen/xen_drm_front_gem.c
>>> index 47ff019d3aef..c592735e49d2 100644
>>> --- a/drivers/gpu/drm/xen/xen_drm_front_gem.c
>>> +++ b/drivers/gpu/drm/xen/xen_drm_front_gem.c
>>> @@ -33,8 +33,11 @@ struct xen_gem_object {
>>>    	/* set for buffers allocated by the backend */
>>>    	bool be_alloc;
>>> -	/* this is for imported PRIME buffer */
>>> -	struct sg_table *sgt_imported;
>>> +	/*
>>> +	 * this is for imported PRIME buffer or the one allocated via
>>> +	 * drm_gem_get_pages.
>>> +	 */
>>> +	struct sg_table *sgt;
>>>    };
>>>    static inline struct xen_gem_object *
>>> @@ -77,10 +80,21 @@ static struct xen_gem_object *gem_create_obj(struct drm_device *dev,
>>>    	return xen_obj;
>>>    }
>>> +struct sg_table *xen_drm_front_gem_get_sg_table(struct drm_gem_object *gem_obj)
>>> +{
>>> +	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
>>> +
>>> +	if (!xen_obj->pages)
>>> +		return ERR_PTR(-ENOMEM);
>>> +
>>> +	return drm_prime_pages_to_sg(xen_obj->pages, xen_obj->num_pages);
>>> +}
>>> +
>>>    static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
>>>    {
>>>    	struct xen_drm_front_drm_info *drm_info = dev->dev_private;
>>>    	struct xen_gem_object *xen_obj;
>>> +	struct address_space *mapping;
>>>    	int ret;
>>>    	size = round_up(size, PAGE_SIZE);
>>> @@ -113,10 +127,14 @@ static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
>>>    		xen_obj->be_alloc = true;
>>>    		return xen_obj;
>>>    	}
>>> +
>>>    	/*
>>>    	 * need to allocate backing pages now, so we can share those
>>>    	 * with the backend
>>>    	 */
>>> +	mapping = xen_obj->base.filp->f_mapping;
>>> +	mapping_set_gfp_mask(mapping, GFP_USER | __GFP_DMA32);
>>> +
>>>    	xen_obj->num_pages = DIV_ROUND_UP(size, PAGE_SIZE);
>>>    	xen_obj->pages = drm_gem_get_pages(&xen_obj->base);
>>>    	if (IS_ERR_OR_NULL(xen_obj->pages)) {
>>> @@ -125,8 +143,27 @@ static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
>>>    		goto fail;
>>>    	}
>>> +	xen_obj->sgt = xen_drm_front_gem_get_sg_table(&xen_obj->base);
>>> +	if (IS_ERR_OR_NULL(xen_obj->sgt)){
>>> +		ret = PTR_ERR(xen_obj->sgt);
>>> +		xen_obj->sgt = NULL;
>>> +		goto fail_put_pages;
>>> +	}
>>> +
>>> +	if (!dma_map_sg(dev->dev, xen_obj->sgt->sgl, xen_obj->sgt->nents,
>>> +			DMA_BIDIRECTIONAL)) {
>>> +		ret = -EFAULT;
>>> +		goto fail_free_sgt;
>>> +	}
>>> +
>>>    	return xen_obj;
>>> +fail_free_sgt:
>>> +	sg_free_table(xen_obj->sgt);
>>> +	xen_obj->sgt = NULL;
>>> +fail_put_pages:
>>> +	drm_gem_put_pages(&xen_obj->base, xen_obj->pages, true, false);
>>> +	xen_obj->pages = NULL;
>>>    fail:
>>>    	DRM_ERROR("Failed to allocate buffer with size %zu\n", size);
>>>    	return ERR_PTR(ret);
>>> @@ -149,7 +186,7 @@ void xen_drm_front_gem_free_object_unlocked(struct drm_gem_object *gem_obj)
>>>    	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
>>>    	if (xen_obj->base.import_attach) {
>>> -		drm_prime_gem_destroy(&xen_obj->base, xen_obj->sgt_imported);
>>> +		drm_prime_gem_destroy(&xen_obj->base, xen_obj->sgt);
>>>    		gem_free_pages_array(xen_obj);
>>>    	} else {
>>>    		if (xen_obj->pages) {
>>> @@ -158,6 +195,13 @@ void xen_drm_front_gem_free_object_unlocked(struct drm_gem_object *gem_obj)
>>>    							xen_obj->pages);
>>>    				gem_free_pages_array(xen_obj);
>>>    			} else {
>>> +				if (xen_obj->sgt) {
>>> +					dma_unmap_sg(xen_obj->base.dev->dev,
>>> +						     xen_obj->sgt->sgl,
>>> +						     xen_obj->sgt->nents,
>>> +						     DMA_BIDIRECTIONAL);
>>> +					sg_free_table(xen_obj->sgt);
>>> +				}
>>>    				drm_gem_put_pages(&xen_obj->base,
>>>    						  xen_obj->pages, true, false);
>>>    			}
>>> @@ -174,16 +218,6 @@ struct page **xen_drm_front_gem_get_pages(struct drm_gem_object *gem_obj)
>>>    	return xen_obj->pages;
>>>    }
>>> -struct sg_table *xen_drm_front_gem_get_sg_table(struct drm_gem_object *gem_obj)
>>> -{
>>> -	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
>>> -
>>> -	if (!xen_obj->pages)
>>> -		return ERR_PTR(-ENOMEM);
>>> -
>>> -	return drm_prime_pages_to_sg(xen_obj->pages, xen_obj->num_pages);
>>> -}
>>> -
>>>    struct drm_gem_object *
>>>    xen_drm_front_gem_import_sg_table(struct drm_device *dev,
>>>    				  struct dma_buf_attachment *attach,
>>> @@ -203,7 +237,7 @@ xen_drm_front_gem_import_sg_table(struct drm_device *dev,
>>>    	if (ret < 0)
>>>    		return ERR_PTR(ret);
>>> -	xen_obj->sgt_imported = sgt;
>>> +	xen_obj->sgt = sgt;
>>>    	ret = drm_prime_sg_to_page_addr_arrays(sgt, xen_obj->pages,
>>>    					       NULL, xen_obj->num_pages);
>> _______________________________________________
>> dri-devel mailing list
>> dri-devel@lists.freedesktop.org
>> https://lists.freedesktop.org/mailman/listinfo/dri-devel

[1] https://patchwork.kernel.org/patch/10693787/

[2] https://lists.xen.org/archives/html/xen-devel/2018-11/msg02882.html

[3] https://patchwork.kernel.org/patch/10705853/


