Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:23:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D95DB5803DC;
	Thu, 13 Dec 2018 17:52:10 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 17:52:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6gw8nx/D9Rxr4P9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+MUIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIyz?=
 =?us-ascii?q?c4QPFPIBMORDoonyu1cDtwGzCRWwCO/xzDJDm3/43bc90+QkCQzIwRAgEMwWsH?=
 =?us-ascii?q?TUstr1MroZX/yyzKnUzTXCYe1Z2TP56IPVdR0huv+MXahrfMXN00YvERjKgk+K?=
 =?us-ascii?q?poz4IjOV2f4Bs2+B7+pvT+6gkXMnphh3rzOyxckskpHEipwJxl3A7yl13Yg4Kc?=
 =?us-ascii?q?OiREJmYtOoDIFcuiCYOoduXM8uX29ltDwnxrEbo5K2fjUGxI46yxPZdveJaZKH?=
 =?us-ascii?q?4gj5W+aUOTp4hGxqeLa4hxuq70igxfPzVtOu3FZJsCVFiN/MuW4J1xDJ7ciHUP?=
 =?us-ascii?q?R98l+g2TaJyQ/T9vlJLV4omaffMZIt37A9moQJvUjeHSL6hF/6ga6Ue0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMqAvmsy5HOQ5PRECX2uF9uSm0r3s40n5TKxNjvw4lK?=
 =?us-ascii?q?nWroraKN8Fpq62HQBVyJwv6xWhADe81tQXg30HIEhCeBKdgIjlI0vOL+zgDfej?=
 =?us-ascii?q?n1Ssly9mx/THPr3iHJrBNHfCkKr6cLZ56k5czhczzN9F65JVDLEBPOz8WkvruN?=
 =?us-ascii?q?PECR85NhS+w/z7B9VlyoMeRWWPD7eZMKzIsF+I+vggI+6WaI8VpTbyMf4l5/H1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o+5jE8Fo2qF4TDRoergLyH2ye2BZlWZmFAClCRHnbkbYSEW/EQaC2MJs9tiCAL?=
 =?us-ascii?q?Vb+kS4U5zxGhqBf6y6Z7LurT4iAXr4nj1Nhy5+3Qjx0y7yZ7D8aG3mGJTmF0mH?=
 =?us-ascii?q?4IRjAs0KB+p0x91kmM0axij/NEEtxT4utDUh0mOp7E0+x6F9fyVxrCftiTTlaq?=
 =?us-ascii?q?WNGmATArQdI3zN8DeEJ9G9SkjhDe0CumGb4Vl7qXBJMq9qLQxWT+J8F4y3zezq?=
 =?us-ascii?q?kuk0EmQtdTNW2hnqNw6hLcB5DXnEmDl6alb6Ic3DXT+2eFymaOuEJYUAt0Uaje?=
 =?us-ascii?q?WXAfZ03Wrcn250/YTr+uD6gnPRVFycKYNqRKbdjph01cRPj/INTef36xm2CoCB?=
 =?us-ascii?q?mV3LyMcpTld38d3CrHDkgEiB4c/XCdOAg6ByehpX/eDTN0GVLuZUPs7fdxqHeh?=
 =?us-ascii?q?QkAoyAGKalVr16Cp9R4NmfycV/QT06oYuCcgrjV0G0q939LWCtaauwptZqJcYc?=
 =?us-ascii?q?k54FdG02LZuBdwPpihL6Bkm14ffB57v0Lo1xVrFIpAldImo28tzAp3MaiYyk9O?=
 =?us-ascii?q?dyuE3ZDsPb3aMnP9/BSxZK/ZxF7f0Mya9bwS6PslsVrjugKpFk0883h819lV0n?=
 =?us-ascii?q?2c5ojFDQYIUJLxVFo3+AZ+p73AfiY94IbU32V2Maaoqj/Cx84pBOw9xxegYtdT?=
 =?us-ascii?q?Kr+LGBXzEs0aHceuLuMqlkOtbhIFOuBS6aE1M9mnd/uAxK6kIuJgkCi6gmRA5Y?=
 =?us-ascii?q?B3yliM+DZkSu7Uw5YFxOmV3hGGVzjgllihqN34mYdeaTEUAGW/0ynkCJdNaaJo?=
 =?us-ascii?q?eYYEFHmhI9ewxtV4nJPtX39Y9Fi+B1IJwsOpeBySb0Dj0g1Uz0gYvXunmS6gxT?=
 =?us-ascii?q?xujz4ptraf3DDJw+n6dBsHO3RHRWl4gVf3PIi0icsXXEypbwgviRuk6lz2x6ld?=
 =?us-ascii?q?pKRjMWbTRV1EcDTxL2FnSqGwrKaNY9ZT6JM0tiVaSOa8bkqASr7+oBsa1DnvH3?=
 =?us-ascii?q?BEyzA4dDGqu5P5kAJ8iG+GKHZzrXzZedx/xBvF5dzcQ+JR0SQCRCVilTbXAV28?=
 =?us-ascii?q?NcGz/dqIj5fDrvy+V2W5W5xTaybrypmMtCm65W1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYoh5Efw3kaio+V/Xoai2jz?=
 =?us-ascii?q?N9pb1Ln6bHoMQz4L3tHU7BLk2E1lMnKG2Yb5Wm+BzctmYtmwenkW1T4l78BWFK?=
 =?us-ascii?q?eU66RJnS50olq7tw3de/Z8kSkGyfsy9nEamfoGtxQ3ziWSGb0SGUhYPSrxlxWH?=
 =?us-ascii?q?9dy+raNXZHqxfri0zkZxgdehDLSaqAFGRHn5YosiHTN37shnLFLM13jz5pvled?=
 =?us-ascii?q?bKa9ITqwaUkwzBj+VOLJIxl/wKhTdoOG7nvH0lzfI7ggJq3Z2goIeHLGBt9rqj?=
 =?us-ascii?q?AhFELj31e98T+jb1gKlFhMmW2ISvHoh7FjUPQZvlVvaoEDMUtfT6OAeCCjw8qn?=
 =?us-ascii?q?GHGbXBGQ+T8ltpr3XKE5qzLXGYOGEZzcl+RBmaPEFfghobXDAkkZ4iDAyq2Nbt?=
 =?us-ascii?q?cERk5jAS+174rAFDyvlzOhn7U2ffohqoazguRJieKhpW8h9N50PPPcOC6eJzGj?=
 =?us-ascii?q?lS/oe9owyVNmybewNIAHkJW0yDGlDjJ6Su6sPG8+SCHeq+KP3OYbqVpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+iJpr8?=
 =?us-ascii?q?C/8/frWAP16YuMEbtSNtpv9A6sgaeeLO6dnyJ5KTde1pMRyn7E0rkf3FgOiy5w?=
 =?us-ascii?q?czmhC6gPtSnITKjIgK9YEwYbaz9vNMtP968zxBRNNtXBitzr1r90lPo1C1ZeWF?=
 =?us-ascii?q?zlm8GpY9EKIm6nOFPGAkaLKKqJJTnRz87rZqO8TKVajP9IuB2opTabD0jjMyyf?=
 =?us-ascii?q?lznoUhCjK/1DgDuHMxxepo69dA1gCWziTNLgdx26P8V7jTwwwb0omHzKMXQQPi?=
 =?us-ascii?q?R7c0NItreQ9z9Xgu1jG2xd6XpoNemFlDyf7+ndK5YWt+NkAyV0l+1A5nQ6xKBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKO7g1ePvD1/4dNEV/F5hYM4C?=
 =?us-ascii?q?3EAhUQo9poBvXruqZN2p7OmfS3YBt40pqA8dEdQsTZNs+DGH4gKgbyXjDOAQYJ?=
 =?us-ascii?q?QCWoKWbHwUtHn6fB2GeSq80BtpX0mJcIAoVcSFwqG/ceQhB+EsYqK55xVHUtjK?=
 =?us-ascii?q?OUyskS6jy3sU+CF41hopnbW6fKUr3UIzGDgOwBPkNQzA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAB5DBNch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCAIFrJ4wVX4syUAEBBoFJiQ2OM4ICBSsBh0UiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJpAiQZAQE3AQUJAislAwxOAReDH?=
 =?us-ascii?q?IF0DAEFpmCBbDOCdgEBBYciBwiCbYgzgRwXeIEHjn+JNziBRYVkhGqLDwmRTgs?=
 =?us-ascii?q?YjlGCeYkukBuBRoIOTR8ZgyeCGwwXggSMLSsBMoEEAQEBiXQrgiABAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAB5DBNch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCAIFrJ4wVX4syUAEBBoFJiQ2OM4ICBSsBh0UiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEIDQkIKSMMgjYkAYJpAiQZAQE3AQUJAislAwxOAReDHIF0DAEFpmCBbDO?=
 =?us-ascii?q?CdgEBBYciBwiCbYgzgRwXeIEHjn+JNziBRYVkhGqLDwmRTgsYjlGCeYkukBuBR?=
 =?us-ascii?q?oIOTR8ZgyeCGwwXggSMLSsBMoEEAQEBiXQrgiABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,351,1539673200"; 
   d="scan'208";a="55136537"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 17:51:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728820AbeLNBvv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 20:51:51 -0500
Received: from ozlabs.org ([203.11.71.1]:39685 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728130AbeLNBvv (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 20:51:51 -0500
Received: from authenticated.ozlabs.org (localhost [127.0.0.1])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ozlabs.org (Postfix) with ESMTPSA id 43GD754TGbz9sBZ;
        Fri, 14 Dec 2018 12:51:43 +1100 (AEDT)
Authentication-Results: ozlabs.org; dmarc=none (p=none dis=none) header.from=canb.auug.org.au
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=canb.auug.org.au;
        s=201702; t=1544752307;
        bh=Ls236OSyXvNxmnsC2bBx2LjZqg43VKdCynJwFy7fPsg=;
        h=Date:From:To:Cc:Subject:From;
        b=VUiNKLDtAK5Zjd7bB2g/5FBURbxIUkK0eiptw7XiQwvEghgruF7qkcYdFAS8h/qdw
         sinq7Mf0sYeWE1dDfSL0aLcWVKeIYnLxQapNO8pYEnte0ywKGrvIsWK0/S+djLSSxV
         kSjEVxf2TvFDGfezj6wdIsAqS4V3WQw3GqQNz4Y2T8HeVgy1SQJzuSX1hyc+ulmUq2
         LVD4GaR39L4dZfQuAn8rOWmEHMIRV3tbbQ5yXmB0/tx4xfdkUUyUUJS2m0ZLQF6L9G
         FMeMA30iVQBxw//+nkpYF1pbRwL/XqM54H8GqcfykvugDo01O1mjL4Aqgzu4UKyvpq
         hfTyfl/wu7JSg==
Date: Fri, 14 Dec 2018 12:51:43 +1100
From: Stephen Rothwell <sfr@canb.auug.org.au>
To: Dave Airlie <airlied@linux.ie>,
        DRI <dri-devel@lists.freedesktop.org>
Cc: Linux Next Mailing List <linux-next@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Thomas Hellstrom <thellstrom@vmware.com>,
        Christian =?UTF-8?B?S8O2bmln?= <christian.koenig@amd.com>,
        Alex Deucher <alexander.deucher@amd.com>
Subject: linux-next: manual merge of the drm tree with the drm-fixes tree
Message-ID: <20181214125143.3ecb367b@canb.auug.org.au>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 boundary="Sig_/gp/1vY5NFFltj0I6Ijc1CqF"; protocol="application/pgp-signature"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--Sig_/gp/1vY5NFFltj0I6Ijc1CqF
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable

Hi all,

Today's linux-next merge of the drm tree got a conflict in:

  drivers/gpu/drm/vmwgfx/vmwgfx_ttm_glue.c

between commit:

  fd567467753f ("drm/vmwgfx: Protect from excessive execbuf kernel memory a=
llocations v3")

from the drm-fixes tree and commit:

  a64f784bb14a ("drm/ttm: initialize globals during device init (v2)")

from the drm tree.

I fixed it up (see below) and can carry the fix as necessary. This
is now fixed as far as linux-next is concerned, but any non trivial
conflicts should be mentioned to your upstream maintainer when your tree
is submitted for merging.  You may also want to consider cooperating
with the maintainer of the conflicting tree to minimise any particularly
complex conflicts.

--=20
Cheers,
Stephen Rothwell

diff --cc drivers/gpu/drm/vmwgfx/vmwgfx_ttm_glue.c
index f88247046721,154eb09aa91e..000000000000
--- a/drivers/gpu/drm/vmwgfx/vmwgfx_ttm_glue.c
+++ b/drivers/gpu/drm/vmwgfx/vmwgfx_ttm_glue.c
@@@ -42,93 -42,3 +42,39 @@@ int vmw_mmap(struct file *filp, struct=20
  	dev_priv =3D vmw_priv(file_priv->minor->dev);
  	return ttm_bo_mmap(filp, vma, &dev_priv->bdev);
  }
 +
- static int vmw_ttm_mem_global_init(struct drm_global_reference *ref)
- {
- 	DRM_INFO("global init.\n");
- 	return ttm_mem_global_init(ref->object);
- }
-=20
- static void vmw_ttm_mem_global_release(struct drm_global_reference *ref)
- {
- 	ttm_mem_global_release(ref->object);
- }
-=20
- int vmw_ttm_global_init(struct vmw_private *dev_priv)
- {
- 	struct drm_global_reference *global_ref;
- 	int ret;
-=20
- 	global_ref =3D &dev_priv->mem_global_ref;
- 	global_ref->global_type =3D DRM_GLOBAL_TTM_MEM;
- 	global_ref->size =3D sizeof(struct ttm_mem_global);
- 	global_ref->init =3D &vmw_ttm_mem_global_init;
- 	global_ref->release =3D &vmw_ttm_mem_global_release;
-=20
- 	ret =3D drm_global_item_ref(global_ref);
- 	if (unlikely(ret !=3D 0)) {
- 		DRM_ERROR("Failed setting up TTM memory accounting.\n");
- 		return ret;
- 	}
-=20
- 	dev_priv->bo_global_ref.mem_glob =3D
- 		dev_priv->mem_global_ref.object;
- 	global_ref =3D &dev_priv->bo_global_ref.ref;
- 	global_ref->global_type =3D DRM_GLOBAL_TTM_BO;
- 	global_ref->size =3D sizeof(struct ttm_bo_global);
- 	global_ref->init =3D &ttm_bo_global_init;
- 	global_ref->release =3D &ttm_bo_global_release;
- 	ret =3D drm_global_item_ref(global_ref);
-=20
- 	if (unlikely(ret !=3D 0)) {
- 		DRM_ERROR("Failed setting up TTM buffer objects.\n");
- 		goto out_no_bo;
- 	}
-=20
- 	return 0;
- out_no_bo:
- 	drm_global_item_unref(&dev_priv->mem_global_ref);
- 	return ret;
- }
-=20
- void vmw_ttm_global_release(struct vmw_private *dev_priv)
- {
- 	drm_global_item_unref(&dev_priv->bo_global_ref.ref);
- 	drm_global_item_unref(&dev_priv->mem_global_ref);
- }
-=20
 +/* struct vmw_validation_mem callback */
 +static int vmw_vmt_reserve(struct vmw_validation_mem *m, size_t size)
 +{
 +	static struct ttm_operation_ctx ctx =3D {.interruptible =3D false,
 +					       .no_wait_gpu =3D false};
 +	struct vmw_private *dev_priv =3D container_of(m, struct vmw_private, vvm=
);
 +
 +	return ttm_mem_global_alloc(vmw_mem_glob(dev_priv), size, &ctx);
 +}
 +
 +/* struct vmw_validation_mem callback */
 +static void vmw_vmt_unreserve(struct vmw_validation_mem *m, size_t size)
 +{
 +	struct vmw_private *dev_priv =3D container_of(m, struct vmw_private, vvm=
);
 +
 +	return ttm_mem_global_free(vmw_mem_glob(dev_priv), size);
 +}
 +
 +/**
 + * vmw_validation_mem_init_ttm - Interface the validation memory tracker
 + * to ttm.
 + * @dev_priv: Pointer to struct vmw_private. The reason we choose a vmw p=
rivate
 + * rather than a struct vmw_validation_mem is to make sure assumption in =
the
 + * callbacks that struct vmw_private derives from struct vmw_validation_m=
em
 + * holds true.
 + * @gran: The recommended allocation granularity
 + */
 +void vmw_validation_mem_init_ttm(struct vmw_private *dev_priv, size_t gra=
n)
 +{
 +	struct vmw_validation_mem *vvm =3D &dev_priv->vvm;
 +
 +	vvm->reserve_mem =3D vmw_vmt_reserve;
 +	vvm->unreserve_mem =3D vmw_vmt_unreserve;
 +	vvm->gran =3D gran;
 +}

--Sig_/gp/1vY5NFFltj0I6Ijc1CqF
Content-Type: application/pgp-signature
Content-Description: OpenPGP digital signature

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEENIC96giZ81tWdLgKAVBC80lX0GwFAlwTDK8ACgkQAVBC80lX
0GwWKQf/f9Tlmbt5Jvzi1hkZTvwBluO3OQ1eX7ahLgUiA3gD/LDgBUI7YHnkU705
+zWqxFeY9rJAMAr5ZTdxOjkPK2e/qXIxIeSm9Wj02Vd+qAJiWQf1IBGw50o3xfEm
OvtJI2/dsA+DtaGeLNBClurlYcizMZvBybdxwQ/6vZPXZ7v1H+6AmTr2w1VWGIII
ZmsIHo1pHBt/9Oa45A3wLrUQGPkqLTLVG1MD77AEJfClEVf0YXOK8gsXzZTujt5Q
gCEcGk0ZxkXnHHV46g5JQ6iW9VXsxgKq5DRxpNk5nsI8+aT+WLWaT6CNCxr5W/LV
1TRoAzz5Aw2U2925h7XwvxzNNf4M/Q==
=1amb
-----END PGP SIGNATURE-----

--Sig_/gp/1vY5NFFltj0I6Ijc1CqF--
