Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EEAFC58079C;
	Thu, 13 Dec 2018 00:51:32 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 00:51:32 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AP4tTKBGJYUzdCEzvVF8K9p1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osi/bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YZYMAeoPMulXs5TyqFkAohulHQmhBvjiyiNUinLswaE2z/4sHR/A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakQT++11rLHwivZb/NKxDzy6ZXIeQ0mrPGMQ71wa9Hexlc1FwPZlViQ?=
 =?us-ascii?q?povlPzWI2eQKqWiX9fBvVfq1hG4hsQ59uD+vxt0jioXTnI0V10nJ+CNky4g7It?=
 =?us-ascii?q?24TVR0Yd+iEJZItCGVKZF2QsU8TGFsoio6zacGuZGjcCcQ0JQo3RjfZOadf4iP?=
 =?us-ascii?q?+BLjW/ydLi1lhH9jZbmxhA6y/FC+xuHgUsS4yktGoyRbntXWq3wA1ADf5tKGR/?=
 =?us-ascii?q?Z/5kutxCqD2g/J5u1aP0w5m7DXJpEiz7Iqi5YesUvOEynrk0vslqCWbF8r+u2w?=
 =?us-ascii?q?5uTnfLrmopicOpdqigHxLKsugNazAecmPQgUWWiU5+C82Kfk/U3jT7VGlvw2kq?=
 =?us-ascii?q?/Hv5DGPckXuLK1DgtP3oo+5RuzES2q3MkbkHUbNl5IeRCKg5DsO17UIfD4Cfm/?=
 =?us-ascii?q?g06rkDdu3/3GOrzhApPQLnnMibvhfqhy61RayAUtydBT/pVUC78HIP3tQE/8r8?=
 =?us-ascii?q?LYDhAnPAyu2ernC8ty1pkYWW2RBq+VKqTSsUWH5u43OemDeJcVuCrhK/gi//Pu?=
 =?us-ascii?q?iX45mVwDcqWz0poXdWu1HvBnI0WffHrtjc0NEWYMvgoiUuPqjEeOXiJUZ3a3R6?=
 =?us-ascii?q?g8/C00CJq6DYffQYCgmLyB0z26Hp1KfG9GDUqAEXf1d4qeXfcMZzmfIstgkjwC?=
 =?us-ascii?q?SLigRJUt1RCotA/m1bVnKvDY9TEftZLmzNJ1/fHclQku9TxoCMSQy2ONT2ZqkW?=
 =?us-ascii?q?8SRD8226Z/oUp6ylqY1ah4gvpYFcFc5v9TUwc6M4LcwPJ+C9zoRg3BedKJQk68?=
 =?us-ascii?q?Qtq6GTExUs4xw9gWbklnANWijhfD3ymwD78PjbOLBoc58qbd33j3OsZ8xGzK1K?=
 =?us-ascii?q?gnj1k6XMRPMXeqibJ49wjWH4TJiVmWl762daQA2y7A7GSDwnCIvE1CVA5wUL/K?=
 =?us-ascii?q?XXYQZkbNqdT550XCT6KhCLg9MwtBz9KCJbVOatHzkVpGQ/LjMszEY22tg2ewGQ?=
 =?us-ascii?q?qIxrSUYYX3YWodwjvSBFIEkw8J+3aGLhYxBiGmr2LaDzxuEFbvbljo8el/rnO7?=
 =?us-ascii?q?U0A1wxuLb01ny7q65BoVieaARPMU27IOoD0hpClsHFahw9LWDMKNqBd7c6VCf9?=
 =?us-ascii?q?wx+ldH2njftwxmIJOgKbtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic7LW2lDb0NaR5qcP6PQ5p0//vA2zEUoi6XFn09hT03?=
 =?us-ascii?q?uT/ZjKCAsSUZTsUkc47RR6prfaYjUj6IPQz3FjLa60sjra0dIzGOQl0gqgf8tY?=
 =?us-ascii?q?MK6cDgDyF9MVBsewJ+0qgVSmdQ8EM/1I+64yPMOmcOWG1bWvPOZhmjKmkGtG7J?=
 =?us-ascii?q?p80kKK6ypzVOrI04wZzPGf2wuNTy38g0u5ssDrhYBEYikfH2qiyST+GIFdfKxz?=
 =?us-ascii?q?fYYRBmeoLM263dF+h5/rW35F+1+vHVIG2Mm1eRWMa1zxxxFf1UMSoXa/gyu30y?=
 =?us-ascii?q?R0ky01rqqYxCHO2eXiewYdNW5RWWZiik3gIY6qgNAAXUikdhQmmwGh5Unn2adb?=
 =?us-ascii?q?vqN/L2/ITEdMfij2KXxiU6SqurqDZc5P9I0nsSFNXOugZlCaT6b3owEG3CP7A2?=
 =?us-ascii?q?te2Dc7eimqu5X4hRB7iHiRLG1urHrfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6Ytiu0/3dqAR68n/C0gNHnChI10Sz419?=
 =?us-ascii?q?lrUyXHshD8b5Lv16S7N+JnY0ZpCEX968p8BoFxjI8wiIsM1ngdg5Wf5WAHnnvr?=
 =?us-ascii?q?MdVHxaL+a2IARD4RzN7S+gTl2kxjLnSSyoL9V3WdxNZhZtagbmMX3CI9895FCK?=
 =?us-ascii?q?OO4LNYmit1p0KyrRjNbvhlgjcd1fwu5WYZg+4TuQoh1CWdAq0IEkleMizhjBCI?=
 =?us-ascii?q?79G4rKVKa2eja7mw1Exind+/CLGOuB1TWHH8ep06By9/8t1/ME7Q0H308ozkfd?=
 =?us-ascii?q?jQbdEJuRGOnRbPkfNVKI4vmfoQniVoJ3j9vXI+xu4/jBxu24y6vYedJ2Vs+qK5?=
 =?us-ascii?q?HgBXNjnva8wP/THtiL5UntyK0IC3ApVhBjILUYP0TfKvFTIer/XmOByIED0hsX?=
 =?us-ascii?q?ebArvfEBSb6EdnqXLPDp+qO2uWJHkf0dVtWh2dKFZDjwATWTUwhoQ5GRyyxMz9?=
 =?us-ascii?q?bEd54Sgc6UXipRtLzuJoKgPzUmPCpAqzbjc0SZ6fLAdZ7w1Y5kfVN9Ce4fx3Hy?=
 =?us-ascii?q?1C4pKhqwmNIHSBZwtUFWEJRlCEB1f7M7ms/9bA9vaXBvGkI/vSe7mOqvFeV/SV?=
 =?us-ascii?q?xZKpyIRm5C2BNsGOPnlkEv061VBPXXF/G8TFhToPTzYbmD7Kb86evB284DF4rt?=
 =?us-ascii?q?ij8PT3XwLi/YuOC7xPMdV25hC5m6GDO/SLhCZ+LzZY2YgBxXvJyLgZwV4ThDti?=
 =?us-ascii?q?dzirEbQcqyHNSLjclbNQDx4ecylzLtdH77og3glRPs7WktP12aB5jv42CFdFVE?=
 =?us-ascii?q?btmsKzZcwNLGGyKknHBFuQNLmdIT3Lwsf3Yb6zSLFKjeVUsQGwtiifE0P5IjuD?=
 =?us-ascii?q?kDzpXQi1Me5QlCGbIABeuIalfxl3FGjsV8jmZQO7MdNtiT02wKY5hnfLNW4aLD?=
 =?us-ascii?q?h9fFlBrryW7SNEnPp/H3ZN4WZiLemBgyyZ9fXXKo4Ksft3BSR5j/5a4HU/y7dP?=
 =?us-ascii?q?8C5IXuB6mCvMod5ouFymluiPyjx6UBtBsDpLhYSLvVl8NqXd7JVPRXHE/BcV52?=
 =?us-ascii?q?WKFxsKv8dlCsHou61IytnAjqTzKDJD89LS5cQdBsjUJ9iBMHouKhfpHD/UDA0Y?=
 =?us-ascii?q?TT+kL23fhkpdkO2M+X2RtJQ1tp/smJ9dAoNcAXgyC/IBQm9iGNgLOps/CjcjjL?=
 =?us-ascii?q?+Ah8kM4XOkoDHaRN9du5HaU7SVG/q5exiDirwRRxYSy77iMcwjK8Wv20F4YFRg?=
 =?us-ascii?q?gKzFHEzcWsoLqzVoaAZyp19CtnFjGD5gk3n5Yx+gtSdAXcW/mQQ7304nObwg?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAADJHBJch0O0hNFjFgYBAQEEAQEHB?=
 =?us-ascii?q?AEBgVMFAQELAYJpgQInjHSNQBSXQBSBXS4LCAGHQyI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIBAgMBAjc/BgkBAQoYCSUDDC0bBhMFgxwBggAFCqgPh?=
 =?us-ascii?q?C0BhgeKeoFCF4F/hCOETgESAYV6AosyhRKPdlUJDYIbhGWKQQsYgVxNh3mHKI4?=
 =?us-ascii?q?kjHINgQlxbBk7gmwJgh4XggSGWoVMMgEyAYEEAQGKE4I+AQE?=
X-IPAS-Result: =?us-ascii?q?A0AeAADJHBJch0O0hNFjFgYBAQEEAQEHBAEBgVMFAQELAYJ?=
 =?us-ascii?q?pgQInjHSNQBSXQBSBXS4LCAGHQyI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIBAgMBAjc/BgkBAQoYCSUDDC0bBhMFgxwBggAFCqgPhC0BhgeKeoFCF4F?=
 =?us-ascii?q?/hCOETgESAYV6AosyhRKPdlUJDYIbhGWKQQsYgVxNh3mHKI4kjHINgQlxbBk7g?=
 =?us-ascii?q?mwJgh4XggSGWoVMMgEyAYEEAQGKE4I+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="56724652"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 00:51:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727448AbeLMIv2 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 03:51:28 -0500
Received: from orcrist.hmeau.com ([104.223.48.154]:50056 "EHLO
        deadmen.hmeau.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726416AbeLMIv2 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 03:51:28 -0500
Received: from gondobar.mordor.me.apana.org.au ([192.168.128.4] helo=gondobar)
        by deadmen.hmeau.com with esmtps (Exim 4.89 #2 (Debian))
        id 1gXMi8-0001IE-Qg; Thu, 13 Dec 2018 16:51:12 +0800
Received: from herbert by gondobar with local (Exim 4.89)
        (envelope-from <herbert@gondor.apana.org.au>)
        id 1gXMhy-0004Rj-JT; Thu, 13 Dec 2018 16:51:02 +0800
Date: Thu, 13 Dec 2018 16:51:02 +0800
From: Herbert Xu <herbert@gondor.apana.org.au>
To: Louis Collard <louiscollard@chromium.org>
Cc: linux-crypto@vger.kernel.org, Matt Mackall <mpm@selenic.com>,
        Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Gary R Hook <gary.hook@amd.com>, Michael Buesch <m@bues.ch>,
        PrasannaKumar Muralidharan <prasannatsmkumar@gmail.com>,
        "Michael S . Tsirkin" <mst@redhat.com>,
        linux-kernel@vger.kernel.org, apronin@chromium.org,
        jarkko.sakkinen@linux.intel.com, linux@mniewoehner.de,
        david.bild@xaptum.com, Theodore Ts'o <tytso@mit.edu>
Subject: Re: [RESEND PATCH] Allow hwrng to initialize crng.
Message-ID: <20181213085102.aiw64pubxgoohlo3@gondor.apana.org.au>
References: <20181213084017.80850-1-louiscollard@chromium.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181213084017.80850-1-louiscollard@chromium.org>
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 13, 2018 at 04:40:17PM +0800, Louis Collard wrote:
> Some systems, for example embedded systems, do not generate
> enough entropy on boot through interrupts, and boot may be blocked for
> several minutes waiting for a call to getrandom to complete.
> 
> Currently, random data is read from a hwrng when it is registered,
> and is loaded into primary_crng. This data is treated in the same
> way as data that is device-specific but otherwise unchanging, and
> so primary_crng cannot become initialized with the data from the
> hwrng.
> 
> This change causes the data initially read from the hwrng to be
> treated the same as subsequent data that is read from the hwrng if
> it's quality score is non-zero.
> 
> The implications of this are:
> 
> The data read from hwrng can cause primary_crng to become
> initialized, therefore avoiding problems of getrandom blocking
> on boot.
> 
> Calls to getrandom (with GRND_RANDOM) may be using entropy
> exclusively (or in practise, almost exclusively) from the hwrng.
> 
> Regarding the latter point; this behavior is the same as if a
> user specified a quality score of 1 (bit of entropy per 1024 bits)
> so hopefully this is not too scary a change to make.
> 
> This change is the result of the discussion here:
> https://patchwork.kernel.org/patch/10453893/
> 
> Signed-off-by: Louis Collard <louiscollard@chromium.org>
> Acked-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
> ---
>  drivers/char/hw_random/core.c | 9 +++++++--
>  1 file changed, 7 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/char/hw_random/core.c b/drivers/char/hw_random/core.c
> index 95be7228f327..99c3e4127949 100644
> --- a/drivers/char/hw_random/core.c
> +++ b/drivers/char/hw_random/core.c
> @@ -24,6 +24,7 @@
>  #include <linux/sched.h>
>  #include <linux/slab.h>
>  #include <linux/uaccess.h>
> +#include <crypto/chacha20.h>
>  
>  #define RNG_MODULE_NAME		"hw_random"
>  
> @@ -64,13 +65,17 @@ static size_t rng_buffer_size(void)
>  static void add_early_randomness(struct hwrng *rng)
>  {
>  	int bytes_read;
> -	size_t size = min_t(size_t, 16, rng_buffer_size());
> +	/* Read enough to initialize crng. */
> +	size_t size = 2*CHACHA20_KEY_SIZE;
>  
>  	mutex_lock(&reading_mutex);
>  	bytes_read = rng_get_data(rng, rng_buffer, size, 1);
>  	mutex_unlock(&reading_mutex);
>  	if (bytes_read > 0)
> -		add_device_randomness(rng_buffer, bytes_read);
> +		/* Allow crng to become initialized, but do not add
> +		 * entropy to the pool.
> +		 */
> +		add_hwgenerator_randomness(rng_buffer, bytes_read, 0);
>  }
>  
>  static inline void cleanup_rng(struct kref *kref)
> -- 
> 2.13.5
> 

Adding Ted Ts'o to the cc list.
-- 
Email: Herbert Xu <herbert@gondor.apana.org.au>
Home Page: http://gondor.apana.org.au/~herbert/
PGP Key: http://gondor.apana.org.au/~herbert/pubkey.txt
