Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C0D10580380;
	Mon, 10 Dec 2018 10:25:18 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 10:25:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A/gLixhcFUy/AXfsSTA0DnelmlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZReN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+SyzKnT0zrDYe5d1Crn54fUcxAhouyHULVyccrW0kkgCQ3Fg06M?=
 =?us-ascii?q?qYziMDKV1/gCs3CB4OpmSO2gkXQrpB12ojiq38ohjJTCiIwSylDB7yp5wYA1KM?=
 =?us-ascii?q?W7SEFle96kFoVftyWAO4txWMMiTGdlszs5xL0eoZO3YjQGxZA9yxLCZfGLbZKE?=
 =?us-ascii?q?7g/gWeqNOzt1hXBodKqhixuz70Ss1ujxWtSo3FlXqydKjsXAu3QQ2xHW98SKSe?=
 =?us-ascii?q?dx80Kk1DqS0g3e7v9ILEEomafdNpUv2KQ/loAJvkTGBiL2mFv5jKuRdkg85Oio?=
 =?us-ascii?q?5ProYq/8qp+fKYB0kAf+PboqmsClBuQ4KAcOU3Ca+eS6yrLj4VX0TKtWgvAyiK?=
 =?us-ascii?q?XVrZ7XKdoBqqKkAAJZzpwv5he9Aju+1dQXh3gHLFZLeBKdiIjpPknDIPT5Dfe5?=
 =?us-ascii?q?nlStny5nx/PYMb37BJXCMHzDnK7mfbdz7U5T1hAzwMtB55JbFL4BOuj/Wkzvu9?=
 =?us-ascii?q?zCCB82LQi0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o85j4hCYKmEZ3MRoe3jLyBwSe0BJtWZm9dB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cB35+3Uix4+7z90D8Ob02GLSGF5hW?=
 =?us-ascii?q?cIRz4w3KBirk1x0FaD0a5kg/NGEdxf/e9GUgA/NZTE1ex1F8jyWh7dfteOUFup?=
 =?us-ascii?q?WM6mATE2TtIy2dMOeVxyG9e5gxDH3iqqBaIVlrORCJw19KLcw2b+J8Jnx3na06?=
 =?us-ascii?q?khikEsQtFTOm2+mq5/6w/TCpbKk0qDkaamb6Ac3C/X+2eFwmqDp0VYUA92UaXY?=
 =?us-ascii?q?UnETfErWrdLl5kzcS7+iE6goMgxEycSaMKtFdsXpjUlaRPfkINnRfni+m3muCh?=
 =?us-ascii?q?qSxrODdozqe34D0yXbD0QElwMT/XOCNQUlAiehomTeDCFhFF71YkPs9/V+p22/?=
 =?us-ascii?q?TkMu0w6KaEhh3aKv+hEJnfycV+8T3rUctSg8sTp0Akiy08jWC9WaoQphZ7tTYd?=
 =?us-ascii?q?Um7VdD1GLZsRF9P5O6I6BjgF4ebxp4v0f02xprDYVAlNAgrGk2wwpqNaKYzFRB?=
 =?us-ascii?q?eiuE3ZDxP73XLXXy/BCvaqLMxlHSytGW+r0L6PQ5rVXjsxqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw8gmBO87xRevYdhe?=
 =?us-ascii?q?MLmIGxTvE8IHHceuLu8qm1+3bh8fOOBS9ag0P96pdvec2a6rOvpgkyyijWhd/I?=
 =?us-ascii?q?991UeM/TJmSuHUx5YF3+2Y3gyfWjb8kVetqNz4lZpFZDESBGW/zyfkCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmTG5zz?=
 =?us-ascii?q?NoiT4ptLeQ3CvUz+TkahUHIG9LSHB+glj2JYi7ks4VXFKvbwgvjxal4Uf6x65G?=
 =?us-ascii?q?pKVwNWXTQEFIfzToIGFmSKe/qr2CY8tX4pMyrSpXSPi8YUydSrPloxoa0jnvHm?=
 =?us-ascii?q?tEyDAgajGqvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquK+WHi7Vp1QcinrypmMtDCh6m1pAh2/nvazlcPhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HsHi2jz?=
 =?us-ascii?q?Ns9X2aD/bHoLXjMLx9/V4A742ExsNH6JxoT5VmmDzctlfdW1fmQW2icl5cBQFK?=
 =?us-ascii?q?iU9KBEnTdyolegrgLee/l9ki0dyfsz8nEahe4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHSpx7sV8Kl3AynPy5Z//eN?=
 =?us-ascii?q?nMc90TrAabnAnaj+haM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGgsaW2IWvEo9gGzoRWpvoUOmoECkTtfn8MwaOETs8qm?=
 =?us-ascii?q?qUGLbFHA+f7ltmoGzLE5yxK36XI3wZx814RBaBPExfnBwUXDIik5EiDA+qw8jh?=
 =?us-ascii?q?cFpj6jAV+171sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGbZR5HDWQXVUyfHVzjIqOi5drd8+ibG+q+KeHBYa6VpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+y1ws8?=
 =?us-ascii?q?C/6enrVxjp5YeVELtSNtNv+x+tjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtzNMRW7qI83QpNOc/BhtP2zL54ifE1BElfVV?=
 =?us-ascii?q?z8gcGkfsgKI2C7NFPaC0eHLrWGJTvXw87pZaOwU6FfjOJRtxeoozaUD1fjPiif?=
 =?us-ascii?q?lznuTx2gK/xMgzqBPBNAuICxaBJtCWn4QdLiax27NsJ3jDIszb01gHPKKXATMT?=
 =?us-ascii?q?xmf0xRqb2Q6DtSgu9jFGxZ8nplMe6Elj6F7+nZL5Yaq+dkDj5omOJa/ns6zaBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKOpU9iI7nW9oFcWXbY+xIA9W?=
 =?us-ascii?q?WRBA4Mp9tgC93vvbhfy9nPlK3pLjdC/MnZ/c8dB8jSNcKGP2AtMRvvGD7IEgQF?=
 =?us-ascii?q?SSSnOn3Yh0xYw7mu8Si5o548q4OkqpoJV/cPWFEzEPIBIkdoBtoPJNFwRDxywp?=
 =?us-ascii?q?CBi8tdx32loReZbsxRv5OPAvCVGvjhACqenbhPfxIOzbq+JoMWYN6ok3d+Y0V3?=
 =?us-ascii?q?ydyZU3HbWspA92g4Nlc5?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAALrw5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCBOYECJ5gigg0Ulz2BJANMEgEBGAsIAYdtIjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKGAklAwwlAQUBH?=
 =?us-ascii?q?AYTBRSDCAGCAQEECppnPIodgWwzgnYBAQWBMAGFbAMFEopzgRwXgX+EI4MFh1e?=
 =?us-ascii?q?JO4cBkDsJgiWEY4o8I2CJBodXjhWKdAIEAgQFAgUPIYEmAYIMMxoIGxWDJxIBg?=
 =?us-ascii?q?ggMF4NKhRSFXSIyAQGBAAMBASETi2QBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AUAAALrw5ch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?BOYECJ5gigg0Ulz2BJANMEgEBGAsIAYdtIjUIDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKGAklAwwlAQUBHAYTBRSDCAGCAQE?=
 =?us-ascii?q?ECppnPIodgWwzgnYBAQWBMAGFbAMFEopzgRwXgX+EI4MFh1eJO4cBkDsJgiWEY?=
 =?us-ascii?q?4o8I2CJBodXjhWKdAIEAgQFAgUPIYEmAYIMMxoIGxWDJxIBgggMF4NKhRSFXSI?=
 =?us-ascii?q?yAQGBAAMBASETi2QBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="141522439"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 10:25:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728617AbeLJSZN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 13:25:13 -0500
Received: from mail-qt1-f193.google.com ([209.85.160.193]:45912 "EHLO
        mail-qt1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727567AbeLJSZM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 13:25:12 -0500
Received: by mail-qt1-f193.google.com with SMTP id e5so13378629qtr.12
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 10:25:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=toxicpanda-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=6sOnz/4vgAk2eH1xfravzxXZdhKh8tythlohwKwR+IE=;
        b=AgzPf1Wv/ITlr1cVgvVofeRippKx7t4YdEh5qR+OYpPI6TM6j5PimSAZz3yW4FNZF1
         5GrAdWygE8mDZe4r1S4IU9dbVJ53CnVKwWVDbIoqPWwLn1MUWp6b1GkuRuijq03LlLyi
         YbVVJaIlNFvX3+qYn8cL5aQ88Pyp0ZFWFqqm1S8le8bheqbc/X9PBSURrSMioYa7R082
         QgGFC2eeG32/lKEm0wAud51Q2K8ElR/gmnXhhfV0JARswyJTZUhYsUMWz0825PYDBc39
         CIQEjDSLcFB72qdFpOOyhK8kCvuG7nZTb0OXJpYb+arGPT31crZZWQC//0R17YHDV60Z
         Mi5g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=6sOnz/4vgAk2eH1xfravzxXZdhKh8tythlohwKwR+IE=;
        b=NyMTIU547QNUStZwlv99h1OIR0GLM/5bje1BPxoJ3mVxbn9dwa/NgFiAG3148SBFBi
         P/ZuR0zz97ImgZX/86HAV9rpSoI2iArjG7unFgW43s54IyYhlhbfZO7aGQbyhyZn2dVo
         Gj24JbtvxEpovywCQvBZa3kJFEZJfIfY4kMV867y12PLeu9n43cslo85kaWBpmrLDxMS
         aqG5Gss9sdcfU4H2K775tEVZJf28dWi60NNDhy5yaJoo3CWYiiZdHm65A90z0wTrr7aJ
         qDKA7NrShw2WGRJz0dmNJ0YYpn3g90BwGqJ5BIkbnXIU8nBNDsKV/YxsOBXgiQJkCZNj
         W7kg==
X-Gm-Message-State: AA+aEWb/ldR+63O6uuAZDORpiaBiJA6gdGOdIuJxh1hYZJGk7tdsLBuK
        /ZaiezPMQK+OzHq5q7MEGKJ45A==
X-Google-Smtp-Source: AFSGD/UNB7AW9C3+prtytXJ2ODYiAlNlzeXAfgVqseeGOUdHmAMYzx+Z+K80j3VFKK7RZGWowxJgxg==
X-Received: by 2002:a0c:fb4c:: with SMTP id b12mr12508581qvq.177.1544466311230;
        Mon, 10 Dec 2018 10:25:11 -0800 (PST)
Received: from localhost ([2620:10d:c091:180::1:9260])
        by smtp.gmail.com with ESMTPSA id c49sm8746456qtc.94.2018.12.10.10.25.09
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 10 Dec 2018 10:25:09 -0800 (PST)
Date: Mon, 10 Dec 2018 13:25:08 -0500
From: Josef Bacik <josef@toxicpanda.com>
To: Dennis Zhou <dennis@kernel.org>
Cc: Jens Axboe <axboe@kernel.dk>, Tejun Heo <tj@kernel.org>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Josef Bacik <josef@toxicpanda.com>, kernel-team@fb.com,
        linux-block@vger.kernel.org, cgroups@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] block: fix iolat timestamp and restore accounting
 semantics
Message-ID: <20181210182507.qtoj5egbflr5s366@macbook-pro-91.dhcp.thefacebook.com>
References: <20181210163510.58985-1-dennis@kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181210163510.58985-1-dennis@kernel.org>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 10, 2018 at 11:35:10AM -0500, Dennis Zhou wrote:
> The blk-iolatency controller measures the time from rq_qos_throttle() to
> rq_qos_done_bio() and attributes this time to the first bio that needs
> to create the request. This means if a bio is plug-mergeable or
> bio-mergeable, it gets to bypass the blk-iolatency controller.
> 
> The recent series, to tag all bios w/ blkgs in [1] changed the timing
> incorrectly as well. First, the iolatency controller was tagging bios
> and using that information if it should process it in rq_qos_done_bio().
> However, now that all bios are tagged, this caused the atomic_t for the
> struct rq_wait inflight count to underflow resulting in a stall. Second,
> now the timing was using the duration a bio from generic_make_request()
> rather than the timing mentioned above.
> 
> This patch fixes the errors by accounting time separately in a bio
> adding the field bi_start. If this field is set, the bio should be
> processed by blk-iolatency in rq_qos_done_bio().
> 
> [1] https://lore.kernel.org/lkml/20181205171039.73066-1-dennis@kernel.org/
> 
> Signed-off-by: Dennis Zhou <dennis@kernel.org>
> Cc: Josef Bacik <josef@toxicpanda.com>
> ---
>  block/blk-iolatency.c     | 17 ++++++-----------
>  include/linux/blk_types.h | 12 ++++++++++++
>  2 files changed, 18 insertions(+), 11 deletions(-)
> 
> diff --git a/block/blk-iolatency.c b/block/blk-iolatency.c
> index bee092727cad..52d5d7cc387c 100644
> --- a/block/blk-iolatency.c
> +++ b/block/blk-iolatency.c
> @@ -463,6 +463,8 @@ static void blkcg_iolatency_throttle(struct rq_qos *rqos, struct bio *bio)
>  	if (!blk_iolatency_enabled(blkiolat))
>  		return;
>  
> +	bio->bi_start = ktime_get_ns();
> +
>  	while (blkg && blkg->parent) {
>  		struct iolatency_grp *iolat = blkg_to_lat(blkg);
>  		if (!iolat) {
> @@ -480,18 +482,12 @@ static void blkcg_iolatency_throttle(struct rq_qos *rqos, struct bio *bio)
>  }
>  
>  static void iolatency_record_time(struct iolatency_grp *iolat,
> -				  struct bio_issue *issue, u64 now,
> +				  struct bio *bio, u64 now,
>  				  bool issue_as_root)
>  {
> -	u64 start = bio_issue_time(issue);
> +	u64 start = bio->bi_start;
>  	u64 req_time;
>  
> -	/*
> -	 * Have to do this so we are truncated to the correct time that our
> -	 * issue is truncated to.
> -	 */
> -	now = __bio_issue_time(now);
> -
>  	if (now <= start)
>  		return;
>  
> @@ -593,7 +589,7 @@ static void blkcg_iolatency_done_bio(struct rq_qos *rqos, struct bio *bio)
>  	bool enabled = false;
>  
>  	blkg = bio->bi_blkg;
> -	if (!blkg)
> +	if (!blkg || !bio->bi_start)
>  		return;
>  
>  	iolat = blkg_to_lat(bio->bi_blkg);
> @@ -612,8 +608,7 @@ static void blkcg_iolatency_done_bio(struct rq_qos *rqos, struct bio *bio)
>  		atomic_dec(&rqw->inflight);
>  		if (!enabled || iolat->min_lat_nsec == 0)
>  			goto next;
> -		iolatency_record_time(iolat, &bio->bi_issue, now,
> -				      issue_as_root);
> +		iolatency_record_time(iolat, bio, now, issue_as_root);
>  		window_start = atomic64_read(&iolat->window_start);
>  		if (now > window_start &&
>  		    (now - window_start) >= iolat->cur_win_nsec) {
> diff --git a/include/linux/blk_types.h b/include/linux/blk_types.h
> index 46c005d601ac..c2c02ec08d7c 100644
> --- a/include/linux/blk_types.h
> +++ b/include/linux/blk_types.h
> @@ -181,6 +181,18 @@ struct bio {
>  	 */
>  	struct blkcg_gq		*bi_blkg;
>  	struct bio_issue	bi_issue;
> +#ifdef CONFIG_BLK_CGROUP_IOLATENCY
> +	/*
> +	 * blk-iolatency measure the time a bio takes between rq_qos_throttle()
> +	 * and rq_qos_done_bio().  It attributes the time to the bio that gets
> +	 * the request allowing any bios that can tag along via plug merging or
> +	 * bio merging to be free (from blk-iolatency's perspective). This is
> +	 * different from the time a bio takes from generic_make_request() to
> +	 * the end of its life.  So, this also serves as a marker for which bios
> +	 * should be processed by blk-iolatency.
> +	 */
> +	u64			bi_start;
> +#endif /* CONFIG_BLK_CGROUP_IOLATENCY */

So now we have bi_issue and bi_start, both count basically the same thing.  Does
using bi_issue actually matter?  I assume that it's going to be basically the
same as bi_start for the most part, you are just getting us to only care about
the bio's that we care about.

What if we just add a bio flag to indicate that we've gone through io-latency?
Once that's in place do these problems go away?  Or is the extra time counted
from make_request_time to rq_qos_throttle() actually matter?  I feel like it
shouldn't since it's mostly just checks, but I could be mistaken.  Thanks,

Josef
