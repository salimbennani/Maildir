Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:56:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C072C580380;
	Tue, 11 Dec 2018 14:03:30 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 14:03:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAU0oNBKLZ9Cd8KxZNtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/3/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjJSmnP6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvoKqgdS+a1x7TWwDXDdfNW2Cz96JTPchA5ofGDQ6hwcdHWyUkpCgjIiU6Q?=
 =?us-ascii?q?ppL/MDOTzOgNsXKX4PZgVeK1im4nsB1xoj+3xscslIbJnJkVylfC9ShiwYY1I8?=
 =?us-ascii?q?G4R1B/YdK+DJRQsCSaOpJwT8g/QG9ooD43xqMatZO/ZiQG1ZoqywDFZ/CacIWE?=
 =?us-ascii?q?/gjvWeeTLDtgmX5odr2yiwyv/UWuxeDwTNS43VhLoyZfj9XAqHEA2hrO4cadUP?=
 =?us-ascii?q?R95F2u2TOX2gDT9O5EJUc0mLLFK54u3LEwjIAfsUfdES/snkX5kquWel8j+uiy?=
 =?us-ascii?q?5OTrerTmppmCOI9okgzyLLgil8ilDeglPAUCQXKX9fm/2bH/50H0QbdHguUzkq?=
 =?us-ascii?q?bDsZDaIcobprS+Aw9Qyosj7xe/DzG70NUXhHUHL0xKeAiBj4f3P1HCOff4DPm5?=
 =?us-ascii?q?g1uyijdm3O7GPrL/DZXXNHTDk6nufax760FCzAo/19df54hbCr0ZOvL8RlfxtM?=
 =?us-ascii?q?DEDh8+KwG0x+fnCNZj2Y8EVmOPH7SUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YZaOpx4cYaGikHvR6JEWUeXrsjc0AEWcWpAU+S/bmiF2fUTFJYXayUL?=
 =?us-ascii?q?kx5jU6CIKgEIfCSZqhgL2H3CenAJJWYnpKBUyLEXftb4+EQesDaDqOIs99lTwJ?=
 =?us-ascii?q?TbqhS4g/2h20tw/6zLxnLuzT+iADsZLj1d515/DclB0o9Dx0Cdid3H+JT21ugm?=
 =?us-ascii?q?wIQDo21rhloUNh0leDzbR4g/tAGNNJ/PNJUgA6NZ3Gw+xgEd/yWBnMftOISFag?=
 =?us-ascii?q?X9WnDis9TtM3w98SfUl9H8+ugQzE3yqvG7UVjaCEBIQo8qLA2Hj8P8V9xGzA1K?=
 =?us-ascii?q?U7i1kmQ9FANWuphqNk8wjTBojJk1iWlqqwdKQc2jLN+3mHzWaUoE5YVwtwW73f?=
 =?us-ascii?q?XX8DfkvWscj55kTaQrCzE7snLBVOxdSCKqRQbN3plktJRPHkNNTaYGKxnmOwCA?=
 =?us-ascii?q?2MxrONaorqZmoc0D/cCEgCjwAc43KGORIiCSempmLUFCZuGk73Y0Pw7el+r2u2?=
 =?us-ascii?q?QVIuwAGUcUJtzbq19QQThfyHVfwT2KkJuCMgqzVyAVa80MjaC9uGpwp9YqpcZc?=
 =?us-ascii?q?kx70tA1WLcrwZ9JICvL7h+hl4CdAR6p1/u1xRyCoVHjcgqrHMrwBBuKa6C11NB?=
 =?us-ascii?q?bTeY3ZH2Or3YMWTy+BGva6jL2lDRytqW+6EP6OgmpFXnpg2mCk0i83B/2dlPz3?=
 =?us-ascii?q?Sc/onKDBYVUZ/pSEk38wZ1pr7EbSg9/Y/bzmBsPrSuvT/E2NIpA/Ulxw2kf9de?=
 =?us-ascii?q?NqOECQDzH9cbB8ioNOwlhVypYggYM+BV8a4+J9mmeOee2K63IOZgmyqrjGRa4I?=
 =?us-ascii?q?xnzk2A7St9Su7S0JYDzPGVxQ+HVzb6jFe8vcH7g4FEZTcOHmWhzSjoHpJeZqp3?=
 =?us-ascii?q?fYwTE2ehP9W3xslih57qQ3NY7l+jCE8c18+zZBWSaEbx3QtO2kQNoHyrgDe3wC?=
 =?us-ascii?q?Zwkz40sKWfxivOw+L5eRoDO25LQnRijFj2LYi1idAaQFanbwwzmBS54kb6wrBR?=
 =?us-ascii?q?pL5jIGnLXUdIYy/2InliU6uxrLaDY9RD6Ig1sSVRS+m8ZVGaSrjgoxoVyS/jHm?=
 =?us-ascii?q?1exCwleDGuoJn2gxt6iGeFJnZpsHXZYd1wxQvY5NHER/5exCAGRCp7iTnQHFS8?=
 =?us-ascii?q?JMOm/daXl5fCtOCxSWShW4ZXcSnqy4OAqSS66XdrAR25g/C8hNnnHRIm3i/80t?=
 =?us-ascii?q?lgTT/IowrkYon3y6S6Nvpqf0lyC1/78cZ6GIB+ko0riZEU2HgagIiV/HUdnWfy?=
 =?us-ascii?q?N9VbxbzxbH4XSTEXxN7V5RDv2Fd/IXKR24L5SnKdz9NiZ9agY2MawCI9791QB6?=
 =?us-ascii?q?eS47xJhi91olu+rQLMbvlxhDYdyf0y6HEEh+EFohYiziKYAroKB0lXITTslwiU?=
 =?us-ascii?q?79C5tKhXYWevcbuq20Zkk9GuEqqCoh1CV3bjYZgtAzVw7spkPVLI0X3z7Jzked?=
 =?us-ascii?q?bKYdISsB2UjwnPj+xPJJ0tkfoKgDJtOXjhsn091+47kRtu0ImmvIiALmVh5qO4?=
 =?us-ascii?q?DQReNj3ofMMT4TDtgL1ansaX2YCvA5pgFi8KXJvuUfKnDjYSue77OAaJFT02sm?=
 =?us-ascii?q?2bFqbHHQ+D9EdmqGrCHIuxOHGQIHkZ0M9uRB2AJEFEhAAUXTM6noM2Fwywxczh?=
 =?us-ascii?q?dlt56S4V5lLithRMzedoPQHlUmjDvAeodis0SJ+HIRpU9A5C4lnaMdeE4uJvBS?=
 =?us-ascii?q?1Y/YChrA+QKmydfQtIFnoEWkiFB1DlI7mv6sPM8+meBuqiMfTOZa+CpvBZV/eN?=
 =?us-ascii?q?3ZivyJdp/y6QNsWTOXlvF/062k1eXXBgBsTWgTMPRzYMlyLKac6bqwyx+il2rs?=
 =?us-ascii?q?C57fTqVxjj5YqJC7tOL9pv/wq6jruEN+6VnCx5MypX1osQxX/Uz7gSxF4ShD9v?=
 =?us-ascii?q?dzmuErQAtDTBTKHKmq9QAB4UdTlzNNZT768n2glNOMjbis7617Jij/41DUtFWk?=
 =?us-ascii?q?Llms2zecMKJGS9PkvdBEmXLLSGOSHLw8bvbKymVL1fl/9UuAOwuDqBF0/jPy+O?=
 =?us-ascii?q?lz3oVxCpLOFNgzuXPB1YuIGhbBltDXLvQ87hah2+KNV3lyE5waUohnPWMm4RKS?=
 =?us-ascii?q?R8c0JIrrGK8SxUmOlwG2xf4XpjNuSEnyeZ7+/FKpcZq/drAyJ0l/5E73Q+0bda?=
 =?us-ascii?q?8CZERPltkivIstFuu02mkvWIyjd/UBtBsDBLhIeKvUVkIarY95lAVmzC/BIC9m?=
 =?us-ascii?q?iQDxUKp914CtzgoaxQy97PlL7tJzdG6d7b4cwcB82HYP6AZVMnPQuhPCPICw4E?=
 =?us-ascii?q?VyWoNCmLg1FBl9mR+2eTo5x8rYLjzskgULheAWc4H/VSIUR/HcceJ493Uyk/lr?=
 =?us-ascii?q?jT2NUF7Hz4rl/aRN9bpYzATvKfG+7oLh6Yi6VJY10DxrauftdbDZHyx0E3Mgoy?=
 =?us-ascii?q?p4/NAUeFGIkV+iA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAADVMxBch0O0hNFlGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUgMBAQEBAQsBg2snjHOLMymBZBEDkkKEfIFxFhgTAYcuIjU?=
 =?us-ascii?q?IDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiAQIDAQI3PwYJAQEKDgoJJQMMB?=
 =?us-ascii?q?UkTBYMcggIFpyuKMIw7eoEchCOKXAKLK4URkD8HApFGCxiRQCyZB4FIA4IJcIM?=
 =?us-ascii?q?8giYBFxKOLB4BATEBgQQBAYpkAQE?=
X-IPAS-Result: =?us-ascii?q?A0AHAADVMxBch0O0hNFlGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUgMBAQEBAQsBg2snjHOLMymBZBEDkkKEfIFxFhgTAYcuIjUIDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkvgjYkAYJiAQIDAQI3PwYJAQEKDgoJJQMMBUkTBYMcggIFpyu?=
 =?us-ascii?q?KMIw7eoEchCOKXAKLK4URkD8HApFGCxiRQCyZB4FIA4IJcIM8giYBFxKOLB4BA?=
 =?us-ascii?q?TEBgQQBAYpkAQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="55502170"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 14:03:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726285AbeLKWAN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 17:00:13 -0500
Received: from mga18.intel.com ([134.134.136.126]:34371 "EHLO mga18.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726146AbeLKWAM (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 17:00:12 -0500
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
  by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 14:00:11 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="106688496"
Received: from sjchrist-coffee.jf.intel.com (HELO linux.intel.com) ([10.54.74.154])
  by fmsmga007.fm.intel.com with ESMTP; 11 Dec 2018 14:00:10 -0800
Date: Tue, 11 Dec 2018 14:00:11 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Andy Lutomirski <luto@kernel.org>
Cc: Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        X86 ML <x86@kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Josh Triplett <josh@joshtriplett.org>,
        linux-sgx@vger.kernel.org,
        Haitao Huang <haitao.huang@linux.intel.com>,
        Jethro Beekman <jethro@fortanix.com>,
        "Dr. Greg Wettstein" <greg@enjellic.com>
Subject: Re: [RFC PATCH v2 4/4] x86/vdso: Add __vdso_sgx_enter_enclave() to
 wrap SGX enclave transitions
Message-ID: <20181211220010.GH14731@linux.intel.com>
References: <20181207165145.GB10404@linux.intel.com>
 <CALCETrVkEW82PzQZhJ5iS849DLY1gbd8YjH5F7P1J7hgjkjiOQ@mail.gmail.com>
 <20181207190257.GC10404@linux.intel.com>
 <EFA99261-BE93-49DA-9A8F-E6FD28069AFC@amacapital.net>
 <20181207200935.GE10404@linux.intel.com>
 <4CEB5945-9562-40FA-8CCA-A1675D55B001@amacapital.net>
 <20181207212649.GG10404@linux.intel.com>
 <CALCETrVBR+2HjTqX=W4r9GOq69Xg36v4gmCKqK0wUjzAqBJnrw@mail.gmail.com>
 <20181211193144.GG14731@linux.intel.com>
 <CALCETrXbCFRQ_8Uu8Yh9EDeWJMEzZ+Dr386XrAprz1E6g+3X+Q@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CALCETrXbCFRQ_8Uu8Yh9EDeWJMEzZ+Dr386XrAprz1E6g+3X+Q@mail.gmail.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 11, 2018 at 12:04:15PM -0800, Andy Lutomirski wrote:
> On Tue, Dec 11, 2018 at 11:31 AM Sean Christopherson
> <sean.j.christopherson@intel.com> wrote:
> >
> > On Fri, Dec 07, 2018 at 03:33:57PM -0800, Andy Lutomirski wrote:
> > > On Fri, Dec 7, 2018 at 1:26 PM Sean Christopherson
> > > <sean.j.christopherson@intel.com> wrote:
> > > >
> > > > Running a checksum on the stack for every exit doesn't seem like it'd
> > > > be worth the effort, especially since this type of bug should be quite
> > > > rare, at least in production environments.
> > > >
> > > > If we want to pursue the checksum idea I think the easiest approach
> > > > would be to combine it with an exit_handler and do a simple check on
> > > > the handler.  It'd be minimal overhead in the fast path and would flag
> > > > cases where invoking exit_handle() would explode, while deferring all
> > > > other checks to the user.
> > >
> > > How about this variant?
> > >
> > > #define MAGIC 0xaaaabbbbccccddddul
> > > #define RETADDR_HASH ((unsigned long)__builtin_return_address(0) ^ MAGIC)
> > >
> > > void foo(void)
> > > {
> > >     volatile unsigned long hash = RETADDR_HASH;
> > >
> > >     /* placeholder for your actual code */
> > >     asm volatile ("nop");
> > >
> > >     if (hash != RETADDR_HASH)
> > >         asm volatile ("ud2");
> > > }
> > >
> > > But I have a real argument for dropping exit_handler: in this new age
> > > of Spectre, the indirect call is a retpoline, and it's therefore quite
> > > slow.
> >
> > Technically slower, but would the extra CALL+RET pair even be noticeable
> > in the grand scheme of SGX?
> 
> But it's CALL, CALL, MOV to overwrite return address, intentionally
> midpredicted RET, and RET because Spectre.  That whole sequence seems
> to be several tens of cycles, so it's a lot worse than just CALL+RET.
> Whether it's noticeable overall is a fair question, though.

I was thinking of the case where the handler re-entered the enclave vs.
leaving and re-calling the vDSO, which would be RET+CALL and some other
stuff.
