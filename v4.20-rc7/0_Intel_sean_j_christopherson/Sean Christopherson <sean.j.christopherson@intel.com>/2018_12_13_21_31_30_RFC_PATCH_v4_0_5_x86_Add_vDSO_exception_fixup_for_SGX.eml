Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:42:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C68B158079D;
	Thu, 13 Dec 2018 13:35:06 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 13:35:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AktlnCx9WjgKMWP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1OMTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQNtfWSJCDI27?=
 =?us-ascii?q?YIQBAPEBPf5aooTmu1cDrgGzCRW2Ce/z1jNFgGL9060g0+QmFAHLxBEuEMwUv3?=
 =?us-ascii?q?TSsd74KqcSUfq0zKnT0TXDaOtW2Tfj54jSaRAhpveMVq93fMrK10YgDQXFgk+S?=
 =?us-ascii?q?qYD/IzyV1v4Ns2mA7+p8UuKvk24npB9roji0wccsjJLEhoMTylDY6yp5xJw5Ks?=
 =?us-ascii?q?G/SE5+eNOpFoZbuS+dN4tzWMwiQmdotT45yrIYo567ejYFyJA9yx7YcfyHfI6F?=
 =?us-ascii?q?6Q/gWuaJOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgQ2xHd5cWLUO?=
 =?us-ascii?q?Zx80mu1DqVygze5OBJLVo1mKfbLZMq36Q+mYAJsUvZGy/7gEX2g7GSdkUj4uWo?=
 =?us-ascii?q?9evnbav8ppOGNI97lBv+MqIwlcy7G+g4NRIOX2eD9eS90r3s41H5Ta1UgvEqlq?=
 =?us-ascii?q?TVqo3WKMoFqqKjHgNY0Zov5wy+AjqkyNgYmGMILFNBeBKJlYjpPFTOLej8Dfe+?=
 =?us-ascii?q?hVSsjThqy+nFPrL/GJXNKGbMkLP4cbZ65U9czhQ8zcpE6pJKBbEOPujzVlXytN?=
 =?us-ascii?q?PGFB85NRK7w+L9BNV6zIMeVnqDArWFP6PKrV+I+uUvLvGIZI8UuzbyNeIp5vHz?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+RvTwiFKeST5Te2qyX6?=
 =?us-ascii?q?Uk6zE7Eo2mDJvDSZqqgLCb3Ce7A4dZZmZJCl2XFXfodoOEW+oDaS6II89hlCAE?=
 =?us-ascii?q?WqalS4M7yR6uswr6waJ9LuXI4i0YqY7j1N9t6u3RkhE96yZ4D8ea02GLSWF0mX?=
 =?us-ascii?q?gFRzs33KB5vEx8xU2P0al+g/xEC9NT4+lFXRs9NZ7Z1+Z6Ecz9WhrdfteVT1ar?=
 =?us-ascii?q?Ws+pASoxTtI2wN8CeVx9FM+gjh3Y2yqqArkVl6GEBZAu86Lc2WTxKNh5y3rcyK?=
 =?us-ascii?q?YhiFwmSNNVNWK6nq5/6xTTB4nRnkWajamqc74Q3CrM9GiZy2qOs1pVUApxUaXD?=
 =?us-ascii?q?QHAeaVHardX/5kPeUbCuDa4rPRdGyc6HMqFKcMHmjU1aRPf/P9TTe3++lH2uBR?=
 =?us-ascii?q?mW3L+MbJDle2MG3CrDDkgIlAQT/XWDNQg6HSqhp2PeDDpzFVPgeU/s8O9+qG+l?=
 =?us-ascii?q?QU8w1Q2Fc0ph17+t8B4PmfOcU+8T3q4DuCo5tjp7Bki90MzMB9qAvQVher5cbs?=
 =?us-ascii?q?074Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0JDsO73XL27y/Ayva6/WwF3ezMya+qAV6PQ8qlXjug6pG1Em83Vm1dlVzn?=
 =?us-ascii?q?Sd6o/LDAoUTZL+TEI3+wJmqLHdZyk3/5nU2mF0Mamorj/C3MokC/Ehyhm+cNZQ?=
 =?us-ascii?q?LqOFGBXpHM0HGsehMuoqm1uubhIaJ+1S8K80P8W7d/qJwqKrPeBgnC64gmRD+o?=
 =?us-ascii?q?xyzkWM9y9kQO7Sw5kF2+2Y3heAVzrkjFahr9r7lpxeaTATHmqw0y7kBIFKa612?=
 =?us-ascii?q?fIYLD3quIsKtytV/gZ7tR2BX9Fq5C1wa38+pfAKYb0bh0g1IyUQXvXunlDOizz?=
 =?us-ascii?q?x1jz4mtLCf0zHJw+j4choIJHRLRGh7gVjwO4e0i80VU1aybwgukhuo/kL6x6ld?=
 =?us-ascii?q?pKRiIGjfW0ZIfy7qL258Vqu8rKaNY8lK6JkwqyVYTPy8YUyGSr76uxYb0yLjE3?=
 =?us-ascii?q?FexTwhbDGqp5P5kgd+iGKcKnZzsXXYddtxxRfZ+NzTW/pR0iAaSyl/jDndHkK8?=
 =?us-ascii?q?MMWx/dWIi5fDtfizV2C7WZ1JcinrzoSAuDGg5WJwAh2/nPGzmtv5Hgg8yiL709?=
 =?us-ascii?q?hqVSPVrBfzeIXr1qK6Mf55cUlsHlPz9816GoRmmIsqmJ4QwWQahomS/XcfkWb8?=
 =?us-ascii?q?K9Jb1bj8bHoMQz4G2NrV4Anj2E1+IXOF3YP5VnOBwsR/Y9m2eH8Z2iU478pSEq?=
 =?us-ascii?q?eb8KREnTdpolq/tQ/RYuJynjYHxfsu9X4VmecJuAU2wyWZA7ASG1RYPCP2mxSJ?=
 =?us-ascii?q?6dC+sLtYZGK1fbes00p+mMirDKuerQFERHb5ZpAiEDd17sV+M1LDymf/64/6d9?=
 =?us-ascii?q?nLcdIcqAeUnAzegOhPJ5I8jf4KhSthOWLgsnwp0e87jRpy3Z6kuIiLMXli/KW8?=
 =?us-ascii?q?AhRALD36e9sT+i3xjaZZhsuWw4evHpB7FjQKRpToS++oECkJtfTmLAuOFDw8qn?=
 =?us-ascii?q?GGGbvQBwOf6UFmr27RHJCvLX2YOH4ZzdB6ThmHOENfmBwUXCk9npMhDQ+l3svh?=
 =?us-ascii?q?cENk5jwL4l74twBByuZpNxn5T2feqx2kajYySJiDMhVW6htO6FvSMcyb9uhzBT?=
 =?us-ascii?q?1X/oW9rAyRLWyWfwZIAnsMWkOaHFDvJKWu6cPD8+iFBeq+Mv3Obq+VqeFFU/eI?=
 =?us-ascii?q?xJSv0pZp/jqWN8WPOGViAOM/2kZZQX95HMHZkS0VSyMLjyLNc9KbpBCk9yx3qc?=
 =?us-ascii?q?C/7e3rWB/16ouJEbdSKtJv+xa5gaqYM+6QhSB5KStX158WxH/IzqQf00AWiy10?=
 =?us-ascii?q?azatFrEAvzbXTK3Mgq9XEwIbayRrOctI8a083wpNOc3ait/v1b54lPk1C1hbWl?=
 =?us-ascii?q?z7h8GpftcHI2W8NFPBGUaKO66KJTzNw8Hrf6y8Tadcg/lTtx21oTybCVPsPiyf?=
 =?us-ascii?q?lzn1UBCiKftDjDyAMxxEpo68cgxhCWziTN/9bh27Mdl3jSA5wLEuh3PKM3IcPi?=
 =?us-ascii?q?Z4c09XsrKQ6iZYiO1lG2Nd9nplMfWEmyGB4unEK5YWtOFnDThum+1G4HQ11b1V?=
 =?us-ascii?q?4TpARPx0nivSs9Fvr0unkumJ1jpoTh5OpixXi4KMuEVoIb/Z+YVYWXbY4BIN6n?=
 =?us-ascii?q?2dChQQqNtjD93vuqZQxcDOlaLzMjhC9d3U8NAYB8jVLsKHLXUgPQDoGD7SEAsK?=
 =?us-ascii?q?UzqrOXvDiExalfHBvkGS+7E8pomkvIcSTbpaTkc2F7tODll5G/QBLY1xUzdilq?=
 =?us-ascii?q?SU2opA2Xq5qRDKDOpes5HXUP+ISaHzJzKJpb1FYQYU27T+LJRVOoCtnwRDbFZ9?=
 =?us-ascii?q?1KHNH0zZR5gZpyxnYQgcukhB8HFiCGY03hShIimq+n4IEfeq1iY7lgh5f6x5/i?=
 =?us-ascii?q?/E6lM2K1ya4ic9xg15iYW7qTOcajj8KOG3R44SQwb9qUV5Epr9WAtzJVm+lFJp?=
 =?us-ascii?q?cjfNQalciZNkdGZ2mEndv4dCHbhXSqgSJFcoyO2afb0a0FZYsTm9zAcT/ebZBI?=
 =?us-ascii?q?FwvAosf4Slo39J10RkdtFjYeTyLbBKzV8YvauNvS6u2+Z5lA0XPUUO9yWJcS0L?=
 =?us-ascii?q?uUoFMJEiJiy17qpt7xCPn31If21aBNQwpfc/zU40PayrzzjhyKJEMkC8LfeYKe?=
 =?us-ascii?q?vNoGXJk4iKBFgwzEITi05d/bVsysAlW0uSS00rirCWEkJaZoL5NQhJYp8KpzDo?=
 =?us-ascii?q?diGUvLCImMotMg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAAAjzxJch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJpgQInjBWMEimBPzmXQIFzFBgNBgGHRSI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmkCLwFGBgkCGDgDWgESBYMcAYIABQqpboQCA?=
 =?us-ascii?q?SoBEUKFJAWHfYQ/eoEcgUSCMYsKAosyhROQSgcChw2KQQsYkUqJLoR2iyWBRoI?=
 =?us-ascii?q?OcIM8E4sJhQgBVx4BATEBAQEBgQEBAYxCAQE?=
X-IPAS-Result: =?us-ascii?q?A0AIAAAjzxJch0O0hNFjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJpgQInjBWMEimBPzmXQIFzFBgNBgGHRSI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmkCLwFGBgkCGDgDWgESBYMcAYIABQqpboQCASoBEUKFJAWHfYQ?=
 =?us-ascii?q?/eoEcgUSCMYsKAosyhROQSgcChw2KQQsYkUqJLoR2iyWBRoIOcIM8E4sJhQgBV?=
 =?us-ascii?q?x4BATEBAQEBgQEBAYxCAQE?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="66747302"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 13 Dec 2018 13:35:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727449AbeLMVbl (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 16:31:41 -0500
Received: from mga03.intel.com ([134.134.136.65]:43547 "EHLO mga03.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726442AbeLMVbl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 16:31:41 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
  by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 13:31:40 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="127709232"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.154])
  by fmsmga004.fm.intel.com with ESMTP; 13 Dec 2018 13:31:39 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Andy Lutomirski <luto@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        x86@kernel.org, Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Cc: "H. Peter Anvin" <hpa@zytor.com>, linux-kernel@vger.kernel.org,
        linux-sgx@vger.kernel.org, Andy Lutomirski <luto@amacapital.net>,
        Josh Triplett <josh@joshtriplett.org>,
        Haitao Huang <haitao.huang@linux.intel.com>,
        Jethro Beekman <jethro@fortanix.com>,
        "Dr . Greg Wettstein" <greg@enjellic.com>
Subject: [RFC PATCH v4 0/5] x86: Add vDSO exception fixup for SGX
Date: Thu, 13 Dec 2018 13:31:30 -0800
Message-Id: <20181213213135.12913-1-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.19.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Episode IV: The vDSO Strikes Back

After a brief detour into ioctl-based fixup, the vDSO implementation
is back.  Relative to v2 (the previous vDSO RFC), patch 4/4 once again
contains the vast majority of changes.

__vdso_sgx_enter_enclave() is now written entirely in straight assembly.
Implementing the expanded enclave ABI in inline assembly was an absolute
train wreck as GCC's contraints don't play nice with the full spectrum
of registers.  And I suspect the previous vDSO RFCs were likely broken
due to incorrect register clobbering (I never tested them end-to-end).

The exit_handler() concept proposed in v2 is gone.  I expect most SGX
libraries will directly call __vdso_sgx_enter_enclave(), at which point
the overhead of returning effectively boils down to restoring the
non-volatile registers, which is likely outweighed by the cost of the
retpoline call (to the handler) alone.  In other words, I doubt anyone
will actually use the exit_handler()...

...except for libraries that want to manipulate the untrusted stack,
i.e. force __vdso_sgx_enter_enclave() to treat RSP as volatile.  At that
point we're effectively maintaining two separate ABIs since the normal
ABI would be e.g. "RBP, RSP and the red zone must be preserved" vs. the
exit_handler() ABI's "RBP must be preserved".  And *if* we want to deal
with maintaining two ABIs, supporting the kernel's existing signal ABI
is a lot cleaner (from a kernel perspective) than polluting the vDSO.

v1: https://lkml.kernel.org/r/20181205232012.28920-1-sean.j.christopherson@intel.com
v2: https://lkml.kernel.org/r/20181206221922.31012-1-sean.j.christopherson@intel.com
v3: https://lkml.kernel.org/r/20181210232141.5425-1-sean.j.christopherson@intel.com
v4:
  - Back to vDSO
  - Implement __vdso_sgx_enter_enclave() directly in assembly
  - Modify effective enclave register ABI to follow x86-64 kernel ABI
  - Split __vdso_sgx_enter_enclave input into separate non-union params
  - Drop the exit_handler() concept

Sean Christopherson (5):
  x86/vdso: Add support for exception fixup in vDSO functions
  x86/fault: Add helper function to sanitize error code
  x86/fault: Attempt to fixup unhandled #PF on ENCLU before signaling
  x86/traps: Attempt to fixup exceptions in vDSO before signaling
  x86/vdso: Add __vdso_sgx_enter_enclave() to wrap SGX enclave
    transitions

 arch/x86/entry/vdso/Makefile             |   6 +-
 arch/x86/entry/vdso/extable.c            |  37 ++++++
 arch/x86/entry/vdso/extable.h            |  29 +++++
 arch/x86/entry/vdso/vdso-layout.lds.S    |   9 +-
 arch/x86/entry/vdso/vdso.lds.S           |   1 +
 arch/x86/entry/vdso/vdso2c.h             |  58 ++++++++--
 arch/x86/entry/vdso/vsgx_enter_enclave.S | 136 +++++++++++++++++++++++
 arch/x86/include/asm/vdso.h              |   5 +
 arch/x86/include/uapi/asm/sgx.h          |  44 ++++++++
 arch/x86/kernel/traps.c                  |  14 +++
 arch/x86/mm/fault.c                      |  33 ++++--
 11 files changed, 349 insertions(+), 23 deletions(-)
 create mode 100644 arch/x86/entry/vdso/extable.c
 create mode 100644 arch/x86/entry/vdso/extable.h
 create mode 100644 arch/x86/entry/vdso/vsgx_enter_enclave.S

-- 
2.19.2

