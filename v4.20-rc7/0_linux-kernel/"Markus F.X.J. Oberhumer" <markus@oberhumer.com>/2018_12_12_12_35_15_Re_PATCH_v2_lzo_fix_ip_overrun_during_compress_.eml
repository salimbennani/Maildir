Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:49:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9004A580380;
	Wed, 12 Dec 2018 04:35:24 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 04:35:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyLU+jxZ2JmnVkYnAIl2h/d//LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcu5Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPCOoPPuhWoIfyqFQMsRSwChKsBPvtxzJTmn/737c13/g9HQzI3AEtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSe65wq7SwjXZbPNWxCz945XIfBw7oP6AR7Z+fdDMwkc2DAzKkE+Q?=
 =?us-ascii?q?qYz4PzOQyOsNqWaX5PdnWOKqkWEnsQJxoiW0xso3jYnGnZwaykrE9SVkxYY6O8?=
 =?us-ascii?q?e4RFRnbt6jFZtdrieXPJZ4TMMlRmFnoic6yrsetJ68ZycF1o4nxx7Ca/yCbYeI?=
 =?us-ascii?q?+AjvW/qWITd9gn9uZbGxhw6q/ES+1uHxUtO43EtEoyZbiNXAq3MA2wDJ5sWGSP?=
 =?us-ascii?q?Zx5kSs1SuV2wzO9u1IO144mbTYJpI737I8iJkevELeFSHsgkr2lrWZdkA89+io?=
 =?us-ascii?q?9evnZrLmq4eCN497lA7+KL4ims+hDuQiNAgBQWyb9f671L358k31WLRKjvsona?=
 =?us-ascii?q?nFqJ3WO9gXq6qjDwNI3Isv9QyzAyql3dgEh3UKLVBIdAqCj4fzOlHOJP74De24?=
 =?us-ascii?q?g1SpiDprw/HGPrv8ApTCN3TDk6nufax760FCzAo/1Ndf5pxSCr4fOvL+QVHxtN?=
 =?us-ascii?q?PGAR8jKQC0wPjoCM971owAXWKDGKiZMLndsVOQ/OIgP/GMZJMJuDb6M/Ul4//u?=
 =?us-ascii?q?jXwnllMHcqipwIAaaHS5HvRgPkWYbmDggtYHEWcWoAU+SPbmh0GFUT5Wf3yyRb?=
 =?us-ascii?q?4z5iknCIK6CofOXoCtj6aA3CenBJJWYXpKClCREXjycYWEVOwBaCaTIs9njzwF?=
 =?us-ascii?q?WqKtS44n1RGyqgD6z6BrIfbT+i0drZjjzsR65/XPlREu8jx5F8ad02aTQG1unW?=
 =?us-ascii?q?MIQDk23KZ4oUFmzleD0K54g+FXFNBJ5vNJVBs6OoDYz+BgF9/yXQfBdM+TSFm6?=
 =?us-ascii?q?WtWmHS0xTtUpztAUeEZ9G9KijhPZ0yqwGbAVlaeGBJg18qLawnjwKNxxy3fA1K?=
 =?us-ascii?q?k9kVYmRtFDOnGhhq567wLTHZLGk12Fl6a2cqQRxC3N+32FzWaUuEFYURR/UaPK?=
 =?us-ascii?q?XX0EYkvWrNL55l7NTrO0CLQnNBdBxtCGKqdQdtLpilBGTu/5ONvCe2Kxh3uwBR?=
 =?us-ascii?q?GQy7yRdoXqZXsS0D/dCEcelQAT5miJNQ45CieloGLeCThuGEnrY0Pt9+l+tXy6?=
 =?us-ascii?q?QlU1zwGMc01uyb619gQJivybTvMZxqgEtzs5qzVoAFa92MrbBMeaqAp/YqpQe9?=
 =?us-ascii?q?M9701B1WLCqQN9OIetL6Rjhl4YbgR2sFni1xRxCoVcj8cqqGkmwxZ1KaKdyFlB?=
 =?us-ascii?q?bS+X3YjsOr3LLWn/5Ayva6/T2lHZzNaW+qcO5O4kq1n5uwGpDE4i83Rh09layH?=
 =?us-ascii?q?ac4pTKDAwPUZP+SEo39h56p63EbSk5/Y/byXpsMaysuD/Yx90pHPclygqnf9pH?=
 =?us-ascii?q?KqyEEBH9EsIECMmuMuAlgEWpYQ8eM+BU9640ON2meuCC2K6qOuZggT2ngX5G4I?=
 =?us-ascii?q?B7zkKD6S58RvTU0JYCxvGSxhGHWCvkjFe9rsD3nphJZDEPHmal1SfoHo9QZq1o?=
 =?us-ascii?q?coYNBmejOMm3xtR4h57wVH9U7l+jB1Ua2MC3fRqedUDy3QpV1U4Pu3yohTO4zy?=
 =?us-ascii?q?BokzEutqefxi3OzPj4exodJ2FLQ3NujVHyLoiujtAWRVSnYBItlBS4+0n63a9b?=
 =?us-ascii?q?pKJkImnXQEdIeTX2Lm54XquxsLqCf9BA6JcyvSpLV+S8ZEiQSqThrBsCzyPjA2?=
 =?us-ascii?q?xeySg7djGroJn4nwZ2iHmALHZ1t3fZfcBwxRHC5N3TX/JR3zwGRDVmhjnTHFSz?=
 =?us-ascii?q?I96p/dCMnZfZru++T36hVoFUcSTzz4OPrjG75W5pAR24hfyzgcfoEQs50S/60d?=
 =?us-ascii?q?llSyPIoQ34Yonq0aS6LO1mclNpBF/698p1BIV+npEsi5EX3HgQno+V8mYfkWfv?=
 =?us-ascii?q?LdVb3rrzbXoXSj4M2dLV4gnl2Et4I3KNxoL5UGidw8R7a9m7ZGMWxjwy78RQBK?=
 =?us-ascii?q?iI67xEmDN/okCkogLJffh9gjAdxOMt6HEAguEFogotzjiHDbAUEklVJijslxWO?=
 =?us-ascii?q?79Cjo6Rbfmevcb6s1EVgmdCtFq2NogZZWHzhYJctATdw7tljMFLLyHDz74DkeN?=
 =?us-ascii?q?rKYt4JuBybjQzAj/RLJ5IrjfUFmzBnOW3msH0hyu47iwFu3J6gsIiGLWVt4Ly2?=
 =?us-ascii?q?AhpCOjLpYMMT/ynnjbxCkcaOw4CvApJhFy0XXJvvSPKkCjMTuu7hNwaTCz08sX?=
 =?us-ascii?q?abFKHbHQ+e7kdmsn3OH4qqN3GROHkW09FiSAOBK0xYhQAeRC86kYIhFgC22Mzh?=
 =?us-ascii?q?d1906SsL6V7/rhtM1/hkNx3iUmrEoAeoazE0SIWQLRZM7wFC4VvVPtKa7u5pAy?=
 =?us-ascii?q?5Y+ZihphSXKmOHfwRIEX0JWkucClDhJLau4MfP8/OCCuqiNffOYqiOqe9DV/eO?=
 =?us-ascii?q?352vyZBr/zKNNsWJI3ljAOc32ktFXXBlBcvZny8DRDAQlyLId8Sbvguz+jVrrs?=
 =?us-ascii?q?Cj9/TmQALu5YySC7tLLNVg4Ra2jb2YN+6XgiZ5Ji1V1pcNxX/O1bge00QeiyBo?=
 =?us-ascii?q?dzmxD7sAsTTBQ77Xmq9SFxQbcT98NNNU76Ig2QlAIc7bhc301r57jf41Ck1JVV?=
 =?us-ascii?q?/7msGuaswFPXu9NE7cBEuQMLSGJDvLw9z4YK+mSL1QivlUuAO0uTqBD0DjOTGD?=
 =?us-ascii?q?nSHzVx+zKeFMkD2bPBtGtY6nbxZiEnLjQ8zmaxGhNN93jCY7wbk1hnPMKG4dPi?=
 =?us-ascii?q?Jwc0JLrr2M8yxYhu9zFHBG7npgNeOEgTqW7/HEKpYKtvtmGjh0l+Nf4Hgg17RZ?=
 =?us-ascii?q?9j1LRPxrlyvUtdNup1Cmku+SyjtoShZOqzBLhJ6VskVmI6nW6p5AWXPc9hIX8W?=
 =?us-ascii?q?qQEwgKp8diCtD3u6Ff0N7PlKfyKDdE693V/MscCNLSKMKIK3chNRvpGDjJDAoK?=
 =?us-ascii?q?VzKrNGffh1BDn/GW7HGasp86qp2/0KYJH45GWU00XtcbQhBhHc0fLYZ2djclj7?=
 =?us-ascii?q?Pdh8kNsz725hXKWMhAtJnvTe+JDLPkOnzR2bVfexYSy7rQNpkIO8vwyRomIhN1?=
 =?us-ascii?q?honFGEr4WdFLvz1vaRIyrExR8X94CGop1AitPgy37XAQFdawnxgrmgV5fOIh/S?=
 =?us-ascii?q?vt5FFxIUDF8m942lYZwMr5xz2MOnalM4/pQp0QBjei8wB7PpT9SS5uYAavh014?=
 =?us-ascii?q?JTLDWqlcybBncCoj3APbv5FnAvNXULdFfA4VwuyMarMj1lEK7m2FxFVGrcjCEp?=
 =?us-ascii?q?pknUN+c5+vqGlo2A95atMxY6vKK/wa4EJXg/fEmyay1f0qiCFYFwAvtiu1ciMS?=
 =?us-ascii?q?uFENO6Nsb36t9/Zv9BeqnDFOYmgRUvcw5Plt8xVuaKy70yv83usbeQiKPOuFIv?=
 =?us-ascii?q?bc4jCYmA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AoAgC1/xBch0O0hNFbCIIXgmoDfyeYJ?=
 =?us-ascii?q?oINFJc/gXMsBwwBhzsiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQI?=
 =?us-ascii?q?DAQI9AQE2AQEFCQEBCgcRCRYPAwYDAgECAUUGAQwGAgEBAYMcAYIBBAGkaIIRD?=
 =?us-ascii?q?oJ2AQEFgQQBAYE9hGgIjDwRBoF/gRGDEoRchgCJa4VbSJAwUAcCApFtgVyFGoM?=
 =?us-ascii?q?Dh02JKZE8IIIOcBWDJwmCHheDSoocATc/ATGBBQEBjHwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AoAgC1/xBch0O0hNFbCIIXgmoDfyeYJoINFJc/gXMsBww?=
 =?us-ascii?q?BhzsiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQI9AQE2AQEFC?=
 =?us-ascii?q?QEBCgcRCRYPAwYDAgECAUUGAQwGAgEBAYMcAYIBBAGkaIIRDoJ2AQEFgQQBAYE?=
 =?us-ascii?q?9hGgIjDwRBoF/gRGDEoRchgCJa4VbSJAwUAcCApFtgVyFGoMDh02JKZE8IIIOc?=
 =?us-ascii?q?BWDJwmCHheDSoocATc/ATGBBQEBjHwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="56578436"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 04:35:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727401AbeLLMfU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 07:35:20 -0500
Received: from mail.servus.at ([193.170.194.20]:60630 "EHLO mail.servus.at"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727155AbeLLMfT (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 07:35:19 -0500
Received: from localhost (localhost [127.0.0.1])
        by mail.servus.at (Postfix) with ESMTP id 91DEB301A5C8;
        Wed, 12 Dec 2018 13:35:17 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=oberhumer.com; h=
        content-transfer-encoding:content-type:content-type:in-reply-to
        :mime-version:user-agent:date:date:message-id:organization:from
        :from:references:subject:subject:received:received; s=main; t=
        1544618115; x=1546432516; bh=qb2Chckqtmc3bQ4jj67gsclV812xFuSP6lI
        9wl5f670=; b=jq0ueuUtHOZmEgDh5T9Ooa3sS/y3cnvNOmo7Nhp3FPw2mHQPslK
        8MwQUIdp/GgI7/12Ge0TnejPCGM0Nh04MURGYZp5q36/RGL4eevA6OyuYRVdxmQk
        2b06ukVGOoN505jM1Gnuxdgerxv/SFlXjXUoIKXMdiPdImz5Da1RFXG4=
X-Virus-Scanned: amavisd-new at servus.at
Received: from mail.servus.at ([127.0.0.1])
        by localhost (mail.servus.at [127.0.0.1]) (amavisd-new, port 10024)
        with ESMTP id WCRBeIks3PeO; Wed, 12 Dec 2018 13:35:15 +0100 (CET)
Received: from [192.168.216.53] (unknown [81.10.228.128])
        (Authenticated sender: oh_markus)
        by mail.servus.at (Postfix) with ESMTPSA id 5018A301A5C0;
        Wed, 12 Dec 2018 13:35:15 +0100 (CET)
Subject: Re: [PATCH v2] lzo: fix ip overrun during compress.
To: Yueyi Li <liyueyi@live.com>, "dsterba@suse.cz" <dsterba@suse.cz>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "w@1wt.eu" <w@1wt.eu>,
        "donb@securitymouse.com" <donb@securitymouse.com>,
        Jiri Kosina <jikos@kernel.org>
References: <BLUPR13MB0289EFEB79833470EE62F48EDFD10@BLUPR13MB0289.namprd13.prod.outlook.com>
 <20181128135242.gy3avmbp2pdmjaka@twin.jikos.cz>
 <5C0654EE.5040001@oberhumer.com>
 <SN1PR13MB030484F09EE8A00DB094CDFADFA80@SN1PR13MB0304.namprd13.prod.outlook.com>
 <5C093A30.4020705@oberhumer.com>
 <BLUPR13MB0289EC81589A10E95912675FDFA70@BLUPR13MB0289.namprd13.prod.outlook.com>
Cc: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
From: "Markus F.X.J. Oberhumer" <markus@oberhumer.com>
Organization: oberhumer.com
Message-ID: <5C110083.8060502@oberhumer.com>
Date: Wed, 12 Dec 2018 13:35:15 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.3.0
MIME-Version: 1.0
In-Reply-To: <BLUPR13MB0289EC81589A10E95912675FDFA70@BLUPR13MB0289.namprd13.prod.outlook.com>
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

I still claim that (0xfffffffffffff000, 4096) is not a valid C "pointer
to an object" according to the C standard - please see my reply below.

And I thought ASLR was introduced to improve security and not to create
new security problems - someone from the ASLR team has to comment on this.

Cheers,
Markus


On 2018-12-12 06:21, Yueyi Li wrote:
> Hi Markus,
> 
> OK, thanks. I`ll change it in v3.
> 
> Thanks,
> Yueyi
> 
> On 2018/12/6 23:03, Markus F.X.J. Oberhumer wrote:
>> Hi Yueyi,
>>
>> yes, my LZO patch works for all cases.
>>
>> The reason behind the issue in the first place is that if KASLR
>> includes the very last page 0xfffffffffffff000 then we do not have a
>> valid C "pointer to an object" anymore because of address wraparound.
>>
>> Unrelated to my patch I'd argue that KASLR should *NOT* include the
>> very last page - indeed that might cause similar wraparound problems
>> in lots of code.
>>
>> Eg, look at this simple clear_memory() implementation:
>>
>> void clear_memory(char *p, size_t len) {
>>          char *end = p + len;
>>          while (p < end)
>>                  *p++= 0;
>> }
>>
>> Valid code like this will fail horribly when (p, len) is the very
>> last virtual page (because end will be the NULL pointer in this case).
>>
>> Cheers,
>> Markus
>>
>>
>>
>> On 2018-12-05 04:07, Yueyi Li wrote:
>>> Hi Markus,
>>>
>>> Thanks for your review.
>>>
>>> On 2018/12/4 18:20, Markus F.X.J. Oberhumer wrote:
>>>> Hi,
>>>>
>>>> I don't think that address space wraparound is legal in C, but I
>>>> understand that we are in kernel land and if you really want to
>>>> compress the last virtual page 0xfffffffffffff000 the following
>>>> small patch should fix that dubious case.
>>> I guess the VA 0xfffffffffffff000 is available because KASLR be
>>> enabled. For this case we can see:
>>>
>>> crash> kmem 0xfffffffffffff000
>>>         PAGE               PHYSICAL      MAPPING       INDEX CNT FLAGS
>>> ffffffbfffffffc0        1fffff000 ffffffff1655ecb9  7181fd5  2
>>> 8000000000064209 locked,uptodate,owner_priv_1,writeback,reclaim,swapbacked
>>>
>>>> This also avoids slowing down the the hot path of the compression
>>>> core function.
>>>>
>>>> Cheers,
>>>> Markus
>>>>
>>>>
>>>>
>>>> diff --git a/lib/lzo/lzo1x_compress.c b/lib/lzo/lzo1x_compress.c
>>>> index 236eb21167b5..959dec45f6fe 100644
>>>> --- a/lib/lzo/lzo1x_compress.c
>>>> +++ b/lib/lzo/lzo1x_compress.c
>>>> @@ -224,8 +224,8 @@ int lzo1x_1_compress(const unsigned char *in, size_t in_len,
>>>>    
>>>>           while (l > 20) {
>>>>                   size_t ll = l <= (M4_MAX_OFFSET + 1) ? l : (M4_MAX_OFFSET + 1);
>>>> -               uintptr_t ll_end = (uintptr_t) ip + ll;
>>>> -               if ((ll_end + ((t + ll) >> 5)) <= ll_end)
>>>> +               // check for address space wraparound
>>>> +               if (((uintptr_t) ip + ll + ((t + ll) >> 5)) <= (uintptr_t) ip)
>>>>                           break;
>>>>                   BUILD_BUG_ON(D_SIZE * sizeof(lzo_dict_t) > LZO1X_1_MEM_COMPRESS);
>>>>                   memset(wrkmem, 0, D_SIZE * sizeof(lzo_dict_t));
>>> I parsed panic ramdump and loaded CPU register values,  can see:
>>>
>>> -000|lzo1x_1_do_compress(
>>>       |    in = 0xFFFFFFFFFFFFF000,
>>>       |  ?,
>>>       |    out = 0xFFFFFFFF2E2EE000,
>>>       |    out_len = 0xFFFFFF801CAA3510,
>>>       |  ?,
>>>       |    wrkmem = 0xFFFFFFFF4EBC0000)
>>>       |  dict = 0xFFFFFFFF4EBC0000
>>>       |  op = 0x1
>>>       |  ip = 0x9
>>>       |  ii = 0x9
>>>       |  in_end = 0x0
>>>       |  ip_end = 0xFFFFFFFFFFFFFFEC
>>>       |  m_len = 0
>>>       |  m_off = 1922
>>> -001|lzo1x_1_compress(
>>>       |    in = 0xFFFFFFFFFFFFF000,
>>>       |    in_len = 0,
>>>       |    out = 0xFFFFFFFF2E2EE000,
>>>       |    out_len = 0x00000001616FB7D0,
>>>       |    wrkmem = 0xFFFFFFFF4EBC0000)
>>>       |  ip = 0xFFFFFFFFFFFFF000
>>>       |  op = 0xFFFFFFFF2E2EE000
>>>       |  l = 4096
>>>       |  t = 0
>>>       |  ll = 4096
>>>
>>> ll = l = in_len = 4096 in lzo1x_1_compress,  so your patch is working
>>> for this panic case, but, I`m
>>> not sure, is it possible that in = 0xFFFFFFFFFFFFF000 and  in_len < 4096?
>>>
>>>
>>> Thanks,
>>> Yueyi
>>>
> 
> 

-- 
Markus Oberhumer, <markus@oberhumer.com>, http://www.oberhumer.com/
