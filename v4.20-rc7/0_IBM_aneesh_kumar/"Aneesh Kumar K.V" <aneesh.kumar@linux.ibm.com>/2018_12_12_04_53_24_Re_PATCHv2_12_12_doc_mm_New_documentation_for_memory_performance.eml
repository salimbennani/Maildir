Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:41:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 21ED65803DC;
	Tue, 11 Dec 2018 20:56:39 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 20:56:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ADq75XR0y8FqUCN68smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segQKvzxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJcUMhPWSxPAo2y?=
 =?us-ascii?q?YIUAAOUDIelWoIrzp0AWrRa8HgSsGOHixyVUinPq06A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZoNvpOacUT++60rLIzTXeZP1TxDf97ZLHcgo8qv+JR75/fsTdwlQoGgzfiFWf?=
 =?us-ascii?q?t5LqPyiV1ugXsGib8u9gWvi1i2M8rwFxoz6vxtoji4XTh4Ia0VXE+T9lz4YyIN?=
 =?us-ascii?q?21UUh2asOqHptXsiGVLYp2QsU6TmF1pik6xLwGtYS8fCgQx5QqwQPUZf+fc4WQ?=
 =?us-ascii?q?/B7vSOKcLS1liH9rZr6znQu+/Eu8xuHmV8S50k5Goy5fntTPtn0BzR7e58adRv?=
 =?us-ascii?q?dg4kus3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqVrDHiDol0XslqOWdVsr+vKu?=
 =?us-ascii?q?6+v5ZrXqvJicN5V7ig3mM6QunNKwAfggPwQQQ2SW/f6w2KDt8EHnWrlGk/47nr?=
 =?us-ascii?q?XDvJ3bJ8kXvqu5DBVU0oYn5Ra/FTCm0NEAkHkDLVJFfg+HjofwN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtywPDHMLvhDYvXLnXYjrfhcqhy61RGxAow099f/ZRUBa8FIP7pXU/xrt?=
 =?us-ascii?q?PYAgcjMwOo2+bnFMl91oQGVGKLA6+ZM73dvUWH5+IyOOSMYI4VuDDgK/kq/fLu?=
 =?us-ascii?q?jHk5mUMDcqmtx5cYdHe4HvF+KUWDfXXsmssBEXsNvgcmTOzlklyCUSJJaHa1Ra?=
 =?us-ascii?q?485iw7B5igDYfMXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsp5mDwe?=
 =?us-ascii?q?SbehU5Mh1Q2ptALiybpnKfTb9jcbtZLk0th14erTmAo29Tx1CcSdzm6MQ3t1nm?=
 =?us-ascii?q?MOWz85wqR/rVZhxVeE1Khym+ZYGsBL5/NVTgc6MobRwPZhC9DyXQLBfc2FSEy8?=
 =?us-ascii?q?TdWkGjwxStMxw9kTY0dyAdmijxbD3za0DL8RjbCEGJs08qfE1XjrO8l902rG1L?=
 =?us-ascii?q?Umj1Q+QctAL2umirR79wjSHYHJlUqZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAx?=
 =?us-ascii?q?GExrePbIrvf2UQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e65wQaheKCRP8J3rILoiEhqy5qE1a7xN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUysHMqzQ9yKaWE0FNB?=
 =?us-ascii?q?dzKUx4zwNqfQKmno+BCvaqjW2l7F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzEn6IPQy3JtPre7sz/Y190yGesq1wyvf9Fc?=
 =?us-ascii?q?MKODCg//CMkaB8moKOw3lFmldBMEPOZO9KEqO8OqbeeJ2KmuPOx4hjKpkXxH4J?=
 =?us-ascii?q?xh0kKL7yd9SvPI04wZzP2C3wqHVy3zjFGuss3snYBEZDcSHnewyCT+BY5RYLFy?=
 =?us-ascii?q?cpgPCWu0P8K3wdB+jYb3W3FE7F6jG08G2MixdBqIblzywRdf1V4Krnyggye4yS?=
 =?us-ascii?q?J7kysorqaGwCPB2eDiewcZNW5RQ2lii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JMpsSRNXOW8e1yaUaP9ox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHVBlem?=
 =?us-ascii?q?Jdmp/taUl5DZvuClTW2hVZ5TcSjtzYyesiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox/kpE/hJYK1XgYh5WV+2EKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98NKB7?=
 =?us-ascii?q?2V7LBenSt1v0C3rQTeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNCkDbGCoRtTVGz3e5g8Bi9w8ttwMEjX33Lt8IHkd8?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GgJYNjrwZ88J+zDil6BentuN34C0H5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhtXwOSJEtbgAAJRjk6moM5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7uBpEC?=
 =?us-ascii?q?Fd4JKhtxaBKnCBawRLEGEJWVGEB1b5Mbm1/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBmzQPTDEXlzvQb8GBohew4DZ3rs?=
 =?us-ascii?q?e58PTkQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYtS7CUqPQmqxUDx4acS9zN9FI76Uz3gZTI87bl8j126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9tiyGE0D4JDSM?=
 =?us-ascii?q?iTnoWwqrMeFNlyybOB1euIegchdiE2TjTdTmagGlP99zlzE53bo0hnbSP24GLT?=
 =?us-ascii?q?d8a19NrqGX7S5AnvV/GmlB4mB5IuWehymZ7/fXKpANvPtvAyR0kf9a4Xsgx7tU?=
 =?us-ascii?q?6iFEWOJ6mC/IotFypFGml/GFyiB7XxpWtjZLmIWLsF1iOKrD8JlAXHfE/BQV4m?=
 =?us-ascii?q?SRCxQFvd1lCtL0tqBUy9jPkr/zKThY/9LV+8scG9bbKMadPHU9NhrpHW2cMAxQ?=
 =?us-ascii?q?bjOqKWGXrVFGm/Haon6Yr4Q67JLxg5EOYr5dSFExUPgdDxIhVNgDJopnGzApi7?=
 =?us-ascii?q?iWiOYW6nek6hrcXsNXutbATP3WSfHuLiuJyLBPfxog37z1N8IQO5f91kgkbUN1?=
 =?us-ascii?q?2MzOGkzNTZVIpwVicAY/owNK6nctYHc03hevQwWg7WQTXd2pmxcswig4X65loD?=
 =?us-ascii?q?7q7losJhzJuS45imE1mNP4kXaQeju3J6C1C9IFQxHovlQ8Z8uoCz1+ahe/yAk9?=
 =?us-ascii?q?bG/J?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAAC2lBBch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgmmBAieDe4h4jRMtFGiWVoF2DwEBGAsIAYFLgnWCbiI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAQEBAQIPEQQRQQUBCQEBChgCA?=
 =?us-ascii?q?iYCAgNUBgEKAgYCAQEBHYJ/AYF5CAMCCpseiVgBAQFufDOEQAI7AwGFLAWBC4s?=
 =?us-ascii?q?wgVc/gREngjY1gx4BAoEaRoMEgjUiAok7hko2j2tVBwICikSHBwYYiXiHSokjj?=
 =?us-ascii?q?2oCBAYFAhMBgUgBggtwUIJsgiQDF4hehUdqAYEEAQGJEoI+AQE?=
X-IPAS-Result: =?us-ascii?q?A0AZAAC2lBBch0O0hNFlHAEBAQQBAQcEAQGBUgYBAQsBgmm?=
 =?us-ascii?q?BAieDe4h4jRMtFGiWVoF2DwEBGAsIAYFLgnWCbiI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmEBAQEBAQEBAQIPEQQRQQUBCQEBChgCAiYCAgNUBgEKAgY?=
 =?us-ascii?q?CAQEBHYJ/AYF5CAMCCpseiVgBAQFufDOEQAI7AwGFLAWBC4swgVc/gREngjY1g?=
 =?us-ascii?q?x4BAoEaRoMEgjUiAok7hko2j2tVBwICikSHBwYYiXiHSokjj2oCBAYFAhMBgUg?=
 =?us-ascii?q?BggtwUIJsgiQDF4hehUdqAYEEAQGJEoI+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="66421584"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 11 Dec 2018 20:56:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726317AbeLLE4e (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 23:56:34 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:51054 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726218AbeLLE4e (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 23:56:34 -0500
Received: from pps.filterd (m0098410.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wBC4uToI051409
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 23:56:33 -0500
Received: from e12.ny.us.ibm.com (e12.ny.us.ibm.com [129.33.205.202])
        by mx0a-001b2d01.pphosted.com with ESMTP id 2par2q7xg2-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 23:56:31 -0500
Received: from localhost
        by e12.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <aneesh.kumar@linux.ibm.com>;
        Wed, 12 Dec 2018 04:53:32 -0000
Received: from b01cxnp23032.gho.pok.ibm.com (9.57.198.27)
        by e12.ny.us.ibm.com (146.89.104.199) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Wed, 12 Dec 2018 04:53:29 -0000
Received: from b01ledav005.gho.pok.ibm.com (b01ledav005.gho.pok.ibm.com [9.57.199.110])
        by b01cxnp23032.gho.pok.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wBC4rSTp23658522
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Wed, 12 Dec 2018 04:53:28 GMT
Received: from b01ledav005.gho.pok.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 1FB63AE05C;
        Wed, 12 Dec 2018 04:53:28 +0000 (GMT)
Received: from b01ledav005.gho.pok.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id ED725AE05F;
        Wed, 12 Dec 2018 04:53:25 +0000 (GMT)
Received: from [9.85.73.10] (unknown [9.85.73.10])
        by b01ledav005.gho.pok.ibm.com (Postfix) with ESMTP;
        Wed, 12 Dec 2018 04:53:25 +0000 (GMT)
Subject: Re: [PATCHv2 12/12] doc/mm: New documentation for memory performance
To: Keith Busch <keith.busch@intel.com>, linux-kernel@vger.kernel.org,
        linux-acpi@vger.kernel.org, linux-mm@kvack.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Rafael Wysocki <rafael@kernel.org>,
        Dave Hansen <dave.hansen@intel.com>,
        Dan Williams <dan.j.williams@intel.com>
References: <20181211010310.8551-1-keith.busch@intel.com>
 <20181211010310.8551-13-keith.busch@intel.com>
From: "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>
Date: Wed, 12 Dec 2018 10:23:24 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181211010310.8551-13-keith.busch@intel.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-TM-AS-GCONF: 00
x-cbid: 18121204-0060-0000-0000-000002E2AE1A
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010214; HX=3.00000242; KW=3.00000007;
 PH=3.00000004; SC=3.00000270; SDB=6.01130525; UDB=6.00587459; IPR=6.00910658;
 MB=3.00024660; MTD=3.00000008; XFM=3.00000015; UTC=2018-12-12 04:53:31
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18121204-0061-0000-0000-00004781D05C
Message-Id: <681f14eb-def4-bf40-fdfd-b5fb89045132@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-12_01:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1812120041
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/11/18 6:33 AM, Keith Busch wrote:
> Platforms may provide system memory where some physical address ranges
> perform differently than others, or is side cached by the system.
> 
> Add documentation describing a high level overview of such systems and the
> performance and caching attributes the kernel provides for applications
> wishing to query this information.
> 

The series looks good with the examples in the commit messages

> Signed-off-by: Keith Busch <keith.busch@intel.com>
> ---
>   Documentation/admin-guide/mm/numaperf.rst | 171 ++++++++++++++++++++++++++++++
>   1 file changed, 171 insertions(+)
>   create mode 100644 Documentation/admin-guide/mm/numaperf.rst
> 
> diff --git a/Documentation/admin-guide/mm/numaperf.rst b/Documentation/admin-guide/mm/numaperf.rst
> new file mode 100644
> index 000000000000..846b3f991e7f
> --- /dev/null
> +++ b/Documentation/admin-guide/mm/numaperf.rst
> @@ -0,0 +1,171 @@
> +.. _numaperf:
> +
> +=============
> +NUMA Locality
> +=============
> +
> +Some platforms may have multiple types of memory attached to a single
> +CPU. These disparate memory ranges share some characteristics, such as
> +CPU cache coherence, but may have different performance. For example,
> +different media types and buses affect bandwidth and latency.
> +
> +A system supporting such heterogeneous memory by grouping each memory
> +type under different "nodes" based on similar CPU locality and performance
> +characteristics.  Some memory may share the same node as a CPU, and others
> +are provided as memory only nodes. While memory only nodes do not provide
> +CPUs, they may still be directly accessible, or local, to one or more
> +compute nodes. The following diagram shows one such example of two compute
> +noes with local memory and a memory only node for each of compute node:
> +
> + +------------------+     +------------------+
> + | Compute Node 0   +-----+ Compute Node 1   |
> + | Local Node0 Mem  |     | Local Node1 Mem  |
> + +--------+---------+     +--------+---------+
> +          |                        |
> + +--------+---------+     +--------+---------+
> + | Slower Node2 Mem |     | Slower Node3 Mem |
> + +------------------+     +--------+---------+
> +
> +A "memory initiator" is a node containing one or more devices such as
> +CPUs or separate memory I/O devices that can initiate memory requests. A
> +"memory target" is a node containing one or more accessible physical
> +address ranges from one or more memory initiators.
> +
> +When multiple memory initiators exist, they may not all have the same
> +performance when accessing a given memory target. The highest performing
> +initiator to a given target is considered to be one of that target's
> +local initiators. Any given target may have one or more local initiators,
> +and any given initiator may have multiple local memory targets.
> +

Can you also add summary here suggesting node X is compute and Node y is 
memory target

> +To aid applications matching memory targets with their initiators,
> +the kernel provide symlinks to each other like the following example::
> +
> +	# ls -l /sys/devices/system/node/nodeX/local_target*
> +	/sys/devices/system/node/nodeX/local_targetY -> ../nodeY
> +
> +	# ls -l /sys/devices/system/node/nodeY/local_initiator*
> +	/sys/devices/system/node/nodeY/local_initiatorX -> ../nodeX
> +

the patch series had primary_target and primary_initiator

> +The linked nodes will also have their node number set in the local_mem
> +and local_cpu node list and maps.
> +
> +An example showing how this may be used to run a particular task on CPUs
> +and memory that are both local to a particular PCI device can be done
> +using existing 'numactl' as follows::
> +
> +  # NODE=$(cat /sys/devices/pci:0000:00/.../numa_node)
> +  # numactl --membind=$(cat /sys/devices/node/node${NODE}/local_mem_nodelist) \
> +      --cpunodebind=$(cat /sys/devices/node/node${NODE}/local_cpu_nodelist) \
> +      -- <some-program-to-execute>
> +
> +================
> +NUMA Performance
> +================
> +
> +Applications may wish to consider which node they want their memory to
> +be allocated from based on the node's performance characteristics. If the
> +system provides these attributes, the kernel exports them under the node
> +sysfs hierarchy by appending the local_initiator_access directory under
> +the memory node as follows::
> +
> +	/sys/devices/system/node/nodeY/local_initiator_access/
> +


Same here s/local/primary?

> +The kernel does not provide performance attributes for non-local memory
> +initiators. These attributes apply only to the memory initiator nodes that
> +have a local_initiatorX link, or are set in the local_cpu_nodelist. A
> +memory initiator node is considered local to itself if it also is
> +a memory target and will be set it its node list and map, but won't
> +contain a symlink to itself.
> +
> +The performance characteristics the kernel provides for the local initiators
> +are exported are as follows::
> +
> +	# tree /sys/devices/system/node/nodeY/local_initiator_access
> +	/sys/devices/system/node/nodeY/local_initiator_access
> +	|-- read_bandwidth
> +	|-- read_latency
> +	|-- write_bandwidth
> +	`-- write_latency
> +
> +The bandwidth attributes are provided in MiB/second.
> +
> +The latency attributes are provided in nanoseconds.
> +
> +==========
> +NUMA Cache
> +==========
> +
> +System memory may be constructed in a hierarchy of elements with various
> +performance characteristics in order to provide large address space
> +of slower performing memory side-cached by a smaller higher performing
> +memory. The system physical addresses that initiators are aware of is
> +provided by the last memory level in the hierarchy, while the system uses
> +higher performing memory to transparently cache access to progressively
> +slower levels.
> +
> +The term "far memory" is used to denote the last level memory in the
> +hierarchy. Each increasing cache level provides higher performing
> +initiator access, and the term "near memory" represents the fastest
> +cache provided by the system.
> +
> +This numbering is different than CPU caches where the cache level (ex:
> +L1, L2, L3) uses a CPU centric view with each increased level is lower
> +performing. In contrast, the memory cache level is centric to the last
> +level memory, so the higher numbered cache level denotes memory nearer
> +to the CPU, and further from far memory.
> +
> +The memory side caches are not directly addressable by software. When
> +software accesses a system address, the system will return it from the
> +near memory cache if it is present. If it is not present, the system
> +accesses the next level of memory until there is either a hit in that
> +cache level, or it reaches far memory.
> +
> +An application does not need to know about caching attributes in order
> +to use the system, software may optionally query the memory cache
> +attributes in order to maximize the performance out of such a setup.
> +If the system provides a way for the kernel to discover this information,
> +for example with ACPI HMAT (Heterogeneous Memory Attribute Table),
> +the kernel will append these attributes to the NUMA node memory target.
> +
> +When the kernel first registers a memory cache with a node, the kernel
> +will create the following directory::
> +
> +	/sys/devices/system/node/nodeX/side_cache/
> +

This is something even the patch commit message didn't explain we create 
side_cache directory in memory target nodes or initiator nodes? I assume 
it is part of memory target nodes. If so to be consistent can you use nodeY?


> +If that directory is not present, the system either does not not provide
> +a memory side cache, or that information is not accessible to the kernel.
> +
> +The attributes for each level of cache is provided under its cache
> +level index::
> +
> +	/sys/devices/system/node/nodeX/side_cache/indexA/
> +	/sys/devices/system/node/nodeX/side_cache/indexB/
> +	/sys/devices/system/node/nodeX/side_cache/indexC/
> +
> +Each cache level's directory provides its attributes. For example,
> +the following is a single cache level and the attributes available for
> +software to query::
> +
> +	# tree sys/devices/system/node/node0/side_cache/
> +	/sys/devices/system/node/node0/side_cache/
> +	|-- index1
> +	|   |-- associativity
> +	|   |-- level
> +	|   |-- line_size
> +	|   |-- size
> +	|   `-- write_policy
> +
> +The "associativity" will be 0 if it is a direct-mapped cache, and non-zero
> +for any other indexed based, multi-way associativity.
> +
> +The "level" is the distance from the far memory, and matches the number
> +appended to its "index" directory.
> +
> +The "line_size" is the number of bytes accessed on a cache miss.
> +
> +The "size" is the number of bytes provided by this cache level.
> +
> +The "write_policy" will be 0 for write-back, and non-zero for
> +write-through caching.
> +
> +See also: https://www.uefi.org/sites/default/files/resources/ACPI_6_2.pdf
> 

