Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:53:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AAF69580380;
	Tue, 11 Dec 2018 09:12:35 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga006-1.jf.intel.com with ESMTP; 11 Dec 2018 09:12:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Am1CxXhe/NxsC6fB7/Hzi6EuAlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+ZxaN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJtgqxVoxWvqB5xw47PeIGYNuFzcr/Bcd4AWWZMRNpdWzBHD4ih?=
 =?us-ascii?q?b4UPFe0BPeNAoofgulsPrAa+BQqtBOjyzzFDm2X43aon0+QlFgHGxxIvFM8JvX?=
 =?us-ascii?q?TPsdX0NboSUeO0zKXS1TXDaO5W2TP66IjTbB8suuuDXah1ccbL1UYvEAbFg0yW?=
 =?us-ascii?q?pIf4PD2VzvwAv3aH4+dkT+6jlmAqpx9rrjSyxcoglpPFi4MXx1zc6yl13YQ4Kc?=
 =?us-ascii?q?elREN0fdKoCoZcuz2HO4dsQM4uX2dlszsgxLIco560Zi0KxYwnxxHBb/yHdJCF?=
 =?us-ascii?q?4gzsVOmPOzd0nnFld6ylhxa070egzvfwVs6u0FZFtiZFk9/MuW4R1xHL9MSLVv?=
 =?us-ascii?q?9w8l281TuByQzf8PxILEMomabBKpMswKY8lp8JvkTCGi/2ll/2jKiTdkg8/uio?=
 =?us-ascii?q?6uLnYqjpp5OFNI97lBv+MqIwlcy7GOg4NQYPX26F9uSmz7Dj40L5T6tQjvEska?=
 =?us-ascii?q?nWroraJcIFqa69GQNV1Zwj6xmnAze8zNsYhWUHLE5CeB+fi4jpOlLOL+7iAfaw?=
 =?us-ascii?q?nlShizNrx/HAPr38DZTBNHnDkLH9fblj705Q0hY8zdda55hMELEOPOrzWlPttN?=
 =?us-ascii?q?zfFhI5Mxa7w+f7CNpn0YMSQ2KPArKDP6PUvl+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaHqgBPRpP12ZYWbwgtcGCWoKvA0+Q/LwhF2BVj5TYXCyX6?=
 =?us-ascii?q?Un6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfocp2OW+0QZyKKPs9hjjsE?=
 =?us-ascii?q?WKC7RI861RGuswz6x6B9LuXO+C0Vrpbj1Nlz5+3OmhA+7z10D8KB026TS2F4hH?=
 =?us-ascii?q?8HRzgz3Kpnu0xy1k+D0bRkg/xfDdFT5OlGUgEgOZ7Yzux1EdbyWg3ac9eNSVam?=
 =?us-ascii?q?RMimAD4rQtIwxd8Of1hyG9G4gh/f2CqqBqcfl6aXC5ws7qLcw3/xKt5gxHncyq?=
 =?us-ascii?q?kukUMqQstVOm2gna5w6Q7TC4nNk0Wakqaqcb8R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsDmgk9YRPj9ItjeY3i+m2GrBR?=
 =?us-ascii?q?mWwLOBd47qe2Qb3CXAB0kIiQET/XCaNQcgAietuX7RDDtrFVj3eUPj7fF+qG+n?=
 =?us-ascii?q?Tk8z1wyKc0xh17+y+h4JhfydS+kf3q4etCcmsTV0GFe939TZC9ebowphfaNcYc?=
 =?us-ascii?q?4y4Vtd1GLZsRB9MYKkL6x4mlEedAF3tVv01xprEoVAjdQqrHQywQVoLaKXzlxA?=
 =?us-ascii?q?eC2Y3JzqIbLXN3T98wqpa67V3VHezs2b+qMO6PQ+tlXisxulFksk83V7zdZV12?=
 =?us-ascii?q?GQ6YnNDAoXSZjxSFo49wBmp7HGZSkw/4PV1WB2PaaoqDPD2tIpC/EjyhavZNpf?=
 =?us-ascii?q?NKKEFAnvE8wVHcSuKeoqm0S3YRIAJuxd6Kk0P8a+ffucxKGrJPpgnC6hjWlf+o?=
 =?us-ascii?q?B9016D+DBmSuHV2JYJ2feY0RWdVzf9lVuurtr4mYRZaj4MBGq/zi7kCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmCu5zz?=
 =?us-ascii?q?BukzAltLGf3DHIw+n5cBoHO2hLRHRtjFv2IIi0icwaU1asbwQziBSl4kP6zbBB?=
 =?us-ascii?q?pKtjN2nTXVtIfy/uImFgSKSwrLmCY81I6J8yqiVYSue8YVObSr77vRQa1TjuH2?=
 =?us-ascii?q?9fxDA9ajGrtY/1nx18iGKBMnlzqGDVdt13xRfa/NbcX+Je3iIaRClkjjnaHli9?=
 =?us-ascii?q?MMOu/dmOlZfDs+a+WnmlVp1Sdynr0IyBuDG65W1sHR2wgfSzlsf7Hgg91C/xz8?=
 =?us-ascii?q?NqWjnQrBbgfonr0Ly3MeF9cUlpHlP869d6FZt4kos/n5wQ3XkahpOI/XsIi2vz?=
 =?us-ascii?q?MNNb2b7gY3oJXzIE39nV4A390k15Mn2J3575VmmawsZ5Ytm6Y2AW1Tgn48FEFq?=
 =?us-ascii?q?iU96BEkjVvolWjsw3Re/d9kywZyfsv7n4anu4ItBAsziWbHrAdA01YMTbwmBSP?=
 =?us-ascii?q?6tC0tL9Xa3q3cbisyEp+msisDK2FogFZQnr4e40tHSlt7sVkK1LM0Wb+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM35i87i+?=
 =?us-ascii?q?Ah5cKz35fccT+iz2gKZan8aW2Z2vH5p7FjUKWpvoUeynEDYIufv7MAaOFSU2qm?=
 =?us-ascii?q?2HFrrHAQ+f9EBmomrNE5+xMnGYOmIZwc9+RBWHJ0xfnQMUXCg8npEjDQCn38jh?=
 =?us-ascii?q?cEZ/5jAM6V/0sBpMyuR0NxbhVmfTvhunajAxSJKHNhpZ8hlC51vJMcyZ9u9yHy?=
 =?us-ascii?q?ZY/oC4rAyQMGObYR5EDXoOWkyCCFDuJb2u5djG8+iFCeuyNfrOYbOSqeNAU/eE?=
 =?us-ascii?q?346g0oxj/zyULMWAImFiD+En2kpERX15G9rWmzQMSywUliLBdc2bpA27+i14sM?=
 =?us-ascii?q?+/6unrWBn06IuLCrtSN8hv+h+sjaeCMe6QmDh2KTJC2pwQwn/IzaAV3EQOhCF2?=
 =?us-ascii?q?azmtDbMAuDbXQ6LNgaBXFQAUaiNpOMtM7qIxxQ1NOc/ditPo2b90lP81C1FZVV?=
 =?us-ascii?q?P/nsGlf9AFI2a4NFnfHkaEKKyGJSHXw8Hwea68VbxQjOBOuxKsozqUD0/jMSqF?=
 =?us-ascii?q?lzTyUxCvMOdMjDyUPRBEuYG9dAptBnbnTN78dhK7N9p3hyUswbIonnPKKXIcMT?=
 =?us-ascii?q?9kfkJNtLKQ6yZYgvR5G2NZ73tlLfOLmyCW7+TDLpYWsP1rAjl7lu5A4XQ6zadV?=
 =?us-ascii?q?4z9ARPBvhCTSqdtu8BmalbyLyzx6QF9HsDMOh4+Ru0hmEaHY7YVbH3fC8ggE4W?=
 =?us-ascii?q?iZB1INvdQ2JMfovvVr18rSl6O7C3969M/Q+tART5zPNdCaM3tnKR30HDnPASMM?=
 =?us-ascii?q?VzvtPmba0R8O2MqO/2GY+8Bp4qPnn4ADH+dW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A5AAB+7w9ch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGDayeYJIINFGiWVoFzLBMBhy4iNgcNAQMBAQEBAQECARMBAQEIDQkIKS+?=
 =?us-ascii?q?CNiKCZQMDAQIkTQUGCQEBHzEDVBkFgxyCAgQBpwEzii2HfIQ/gVc/gRGCXQeLC?=
 =?us-ascii?q?gKgewcCkVMWgVyIQIckmwAOgXlNI4M8gicXjh0/AQExgQUBAYpjAQE?=
X-IPAS-Result: =?us-ascii?q?A0A5AAB+7w9ch0O0hNFkHQEBBQEHBQGBUwYBCwGDayeYJII?=
 =?us-ascii?q?NFGiWVoFzLBMBhy4iNgcNAQMBAQEBAQECARMBAQEIDQkIKS+CNiKCZQMDAQIkT?=
 =?us-ascii?q?QUGCQEBHzEDVBkFgxyCAgQBpwEzii2HfIQ/gVc/gRGCXQeLCgKgewcCkVMWgVy?=
 =?us-ascii?q?IQIckmwAOgXlNI4M8gicXjh0/AQExgQUBAYpjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="43620427"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 09:12:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727829AbeLKRMP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 12:12:15 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:53580 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727535AbeLKRMP (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 12:12:15 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 3E5581688;
        Tue, 11 Dec 2018 09:12:14 -0800 (PST)
Received: from en101.cambridge.arm.com (en101.cambridge.arm.com [10.1.196.93])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 724853F6A8;
        Tue, 11 Dec 2018 09:12:12 -0800 (PST)
From: Suzuki K Poulose <suzuki.poulose@arm.com>
To: linux-arm-kernel@lists.infradead.org
Cc: suzuki.poulose@arm.com, linux-kernel@vger.kernel.org,
        kvmarm@lists.cs.columbia.edu, kvm@vger.kernel.org,
        marc.zyngier@arm.com, christoffer.dall@arm.com,
        will.deacon@arm.com, catalin.marinas@arm.com,
        anshuman.khandual@arm.com
Subject: [PATCH v10 4/8] KVM: arm64: Support dirty page tracking for PUD hugepages
Date: Tue, 11 Dec 2018 17:10:37 +0000
Message-Id: <1544548241-6417-5-git-send-email-suzuki.poulose@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544548241-6417-1-git-send-email-suzuki.poulose@arm.com>
References: <1544548241-6417-1-git-send-email-suzuki.poulose@arm.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Punit Agrawal <punit.agrawal@arm.com>

In preparation for creating PUD hugepages at stage 2, add support for
write protecting PUD hugepages when they are encountered. Write
protecting guest tables is used to track dirty pages when migrating
VMs.

Also, provide trivial implementations of required kvm_s2pud_* helpers
to allow sharing of code with arm32.

Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
Reviewed-by: Christoffer Dall <christoffer.dall@arm.com>
Cc: Marc Zyngier <marc.zyngier@arm.com>
Cc: Russell King <linux@armlinux.org.uk>
Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: Will Deacon <will.deacon@arm.com>
[ Replaced BUG() => WARN_ON() in arm32 pud helpers ]
Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
---
 arch/arm/include/asm/kvm_mmu.h   | 15 +++++++++++++++
 arch/arm64/include/asm/kvm_mmu.h | 10 ++++++++++
 virt/kvm/arm/mmu.c               | 11 +++++++----
 3 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/arch/arm/include/asm/kvm_mmu.h b/arch/arm/include/asm/kvm_mmu.h
index e6eff8b..9fe6c30 100644
--- a/arch/arm/include/asm/kvm_mmu.h
+++ b/arch/arm/include/asm/kvm_mmu.h
@@ -87,6 +87,21 @@ void kvm_clear_hyp_idmap(void);
 
 #define kvm_pmd_mkhuge(pmd)	pmd_mkhuge(pmd)
 
+/*
+ * The following kvm_*pud*() functions are provided strictly to allow
+ * sharing code with arm64. They should never be called in practice.
+ */
+static inline void kvm_set_s2pud_readonly(pud_t *pud)
+{
+	WARN_ON(1);
+}
+
+static inline bool kvm_s2pud_readonly(pud_t *pud)
+{
+	WARN_ON(1);
+	return false;
+}
+
 static inline pte_t kvm_s2pte_mkwrite(pte_t pte)
 {
 	pte_val(pte) |= L_PTE_S2_RDWR;
diff --git a/arch/arm64/include/asm/kvm_mmu.h b/arch/arm64/include/asm/kvm_mmu.h
index 13d4827..8da6d1b 100644
--- a/arch/arm64/include/asm/kvm_mmu.h
+++ b/arch/arm64/include/asm/kvm_mmu.h
@@ -251,6 +251,16 @@ static inline bool kvm_s2pmd_exec(pmd_t *pmdp)
 	return !(READ_ONCE(pmd_val(*pmdp)) & PMD_S2_XN);
 }
 
+static inline void kvm_set_s2pud_readonly(pud_t *pudp)
+{
+	kvm_set_s2pte_readonly((pte_t *)pudp);
+}
+
+static inline bool kvm_s2pud_readonly(pud_t *pudp)
+{
+	return kvm_s2pte_readonly((pte_t *)pudp);
+}
+
 #define hyp_pte_table_empty(ptep) kvm_page_empty(ptep)
 
 #ifdef __PAGETABLE_PMD_FOLDED
diff --git a/virt/kvm/arm/mmu.c b/virt/kvm/arm/mmu.c
index fb5325f..1c669c3 100644
--- a/virt/kvm/arm/mmu.c
+++ b/virt/kvm/arm/mmu.c
@@ -1347,9 +1347,12 @@ static void  stage2_wp_puds(struct kvm *kvm, pgd_t *pgd,
 	do {
 		next = stage2_pud_addr_end(kvm, addr, end);
 		if (!stage2_pud_none(kvm, *pud)) {
-			/* TODO:PUD not supported, revisit later if supported */
-			BUG_ON(stage2_pud_huge(kvm, *pud));
-			stage2_wp_pmds(kvm, pud, addr, next);
+			if (stage2_pud_huge(kvm, *pud)) {
+				if (!kvm_s2pud_readonly(pud))
+					kvm_set_s2pud_readonly(pud);
+			} else {
+				stage2_wp_pmds(kvm, pud, addr, next);
+			}
 		}
 	} while (pud++, addr = next, addr != end);
 }
@@ -1392,7 +1395,7 @@ static void stage2_wp_range(struct kvm *kvm, phys_addr_t addr, phys_addr_t end)
  *
  * Called to start logging dirty pages after memory region
  * KVM_MEM_LOG_DIRTY_PAGES operation is called. After this function returns
- * all present PMD and PTEs are write protected in the memory region.
+ * all present PUD, PMD and PTEs are write protected in the memory region.
  * Afterwards read of dirty page log can be called.
  *
  * Acquires kvm_mmu_lock. Called with kvm->slots_lock mutex acquired,
-- 
2.7.4

