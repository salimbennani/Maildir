Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:26:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B5F5D58079D;
	Fri, 14 Dec 2018 01:53:13 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 01:53:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ad5pZsR/XsUKuYv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?0OMWIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJKjA3/mLQhMNygqJUrw6upwdnw4PWe4yVKOZyc7nBcd4AWWZNQsBcXDFBDIOm?=
 =?us-ascii?q?aIsPCvIMMuZGoIn8ulAAtRq+DhSrCeLhzD9Ih2T73ask0+QgDA7G3RYvE8gSv3?=
 =?us-ascii?q?TTqdX4LaEfWv22wqnQ1TjPce9a1DPn5ITVfB0tv+uAUa9zfMbN00UiFgHIgk2O?=
 =?us-ascii?q?pYD4Pj6ZzPoBv3aY4uZ6SO6jlXMrpxtwrzWgwMonl5PHiZgPyl/e8CV02IY1Ks?=
 =?us-ascii?q?O8SE58edOkDpRQuD+AN4dsQcMtXXtouCAkxb0Co5K7ezIKyJs/yx7ebfyIbZSI?=
 =?us-ascii?q?7wr9WOqNJTp0nm9pdbyhixqo7EStyfHwWtO13VtItiZFl8PDtnEJ1xzd8MiHTf?=
 =?us-ascii?q?5981+l2TaO0QDT9+5FLVk3laXFMZ4hxKA/lp4KvUTEEC72nlv5jLWNe0U69ein?=
 =?us-ascii?q?9f7nbq/lppCCLY90jB/xMqA0lsy4G+Q4PRACX3KH9uSkyL3j4Ur5Ta1Ojv03ka?=
 =?us-ascii?q?nWrorWJMsGpqOiBw9V04Aj6wuwDju80dQYm2UHI0xBeB6dk4fpPFTOKujiDfij?=
 =?us-ascii?q?m1SsjCtrx/feM73hGJrNL2TDn63mfbpn605c1RA8zdZQ559PDrEBIfTzWlL+td?=
 =?us-ascii?q?DCDx85NRC0zPjjCNlnyoweXmePCLeDMKzOqV+I+v4vI+6UaY8XvzbyNeIp5/3p?=
 =?us-ascii?q?jX8/n18derKk3Z8WaHC+A/RnLF+VYXvqgtcdD2gKuhAyQ/DtiF2HSTRTfWq9X7?=
 =?us-ascii?q?og5jEnD4KrFZ3MRputgLyG3ye3BIdWaXpECl2XFXfodoOEW+oDaS6II89hlCAE?=
 =?us-ascii?q?WqalS4M7yR6uswr6waJ9LuXI4i0YqY7j1N9t6u3Qjx4y8yZ4D8Cc026XSWF0kX?=
 =?us-ascii?q?gFRzs33KB5vEx8xU2P0al+g/xEC9NT4+lFXRs9NZ7Z1+Z6Ecz9WhrdfteVT1ar?=
 =?us-ascii?q?WsipDisvTt0v2dMOY1xyG9O5jh/d2SqmBLsVl7+OBJww6a/c23nxJ8Bgy3fJzq?=
 =?us-ascii?q?Uhjl8mQtdROm2inKJw6w/TB4vRmUWDi6mqbbgc3DLK9Gqb0GWBpl9YXxBqXaXF?=
 =?us-ascii?q?R38fYFDWosr/5k7ZS7+uCLInMhZOyMKYK6tKbMHpgktCRPv5JNveZGexkX+qBR?=
 =?us-ascii?q?mU3rOMcJbqe2IF0SXBCUgElgcT/WqGNQk+HCuhv3jSDDt0FVLrYkPs9+Z+pWi/?=
 =?us-ascii?q?Tk81yQGKckJg26C0+h4TmfyTVfcT0qgYtycmrjV+BEy90M7OC9qcuwphe71Rbs?=
 =?us-ascii?q?k54FhZ2mPWqQx8Moa7IKB/m1ERaQJ3v0Dp1xVpEYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6Pkgq1TjoRulGVY4/3Rm09layX?=
 =?us-ascii?q?2c5prRAQoWUJLxVFs39hdgq7HbZCk9+53b1Xl2PaaotT/C3sojBPE5xRa4Y9df?=
 =?us-ascii?q?LKSEGRfoE80bG8ehMvYqlEWubh4eOuBd6rQ0P8K/e/SawqGrOPtvkyy8jWRA5o?=
 =?us-ascii?q?BwyUaM9yt6Su7V0JcJ2fCY3g2bVzjiiFetqNz4mYdBZTsKBGqw1TDkBJJNZq11?=
 =?us-ascii?q?ZYsKCWauL9e3x9lknJ7tRnhY+UWnB1MH3s+pZBWTY0b83Q1WyUQYv3inlTGkwD?=
 =?us-ascii?q?xzljEjtrCf0zDWw+T+aBoHPXZGRGt4glf2Ioi0jNcaUFKzbwczlxul5kf6x65F?=
 =?us-ascii?q?q6R5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdzCloJL5kwZ4iGKcKnZ+t37ZecB2xRfC693QX/9R3jwaRCZmjTnbHESz?=
 =?us-ascii?q?P96s/d+MjZfMrvi+V369Vp1UaSTrzpmPtCqh6W1qHB2whfazmtL8HAg+0C/70c?=
 =?us-ascii?q?RqVCrSoBb9ZInry7q1MeZ9ckZ0A1/87tJwGptinYsomJEQxX8ai42Q/XoGkmf8?=
 =?us-ascii?q?K89X2KzgY3oWWT4E3cTV7xP71015IXKE3Ib5VnSbwst8aNi2eGIW2iQh789UDK?=
 =?us-ascii?q?eY9qBLnSxwolCgtwLefeB9nisByfsp8HMan+YJuA83wiScGL8SG1RYPTf3lxSJ?=
 =?us-ascii?q?9N2+qKRXZGCycbm/zkZ+nNahDK2crQFYQnr2ZpAiHSpo5MVlLF3MyGHz6p3jeN?=
 =?us-ascii?q?TIdt0crBqUkxPdj+RPLJIxi+EHhS5mOWL7oH0kxPQ3jR1o3ZGmooeHL39h876+?=
 =?us-ascii?q?Ah5dLjf1fd8c+inxjaZCmcabx4KvEY9kGjoVR5vkV+6oHCgRtfT6NAaODTs8pW?=
 =?us-ascii?q?2AGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6zER4V74twJMyv9yOBn5SGvfvwCoajE7SJWEKBpW7wdC51raMMCE7+JzGT?=
 =?us-ascii?q?1Y8YOlrACXNmObYAFIB3kTWkOYH1DjIqWu5d7Y/uiYGOW+LvjOYbaPqeBEVPeI?=
 =?us-ascii?q?35Wv0oR48DaWK8WPJWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKc9g+w2tjqeZKeGRhDx1KTJZ1p4XwX/Iyb4f3EMdii10?=
 =?us-ascii?q?djmtF6gAujDJTK7KhqBXCBsbYTtpNMRU96I8whVNOcnDh9Pp1754i+Q5BEtfWV?=
 =?us-ascii?q?P9msGme8oKLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBjSGBMxxYvYG9cxBtBnDiTdLmcBK7NtB3gCYywb01gHPKKGEdPS?=
 =?us-ascii?q?J9c0NLsr2f8ydYju9jFGxG63o2ZdWDznKD8uieOJYft/RDAyJomuYc63M/nf8d?=
 =?us-ascii?q?uCxIWfZ4ijXbqvZhplinlq+EzT8xAzRUrTMeu4+K9WNjcfHG8JhoX2jF8BMEq2?=
 =?us-ascii?q?6XDkJZ9JNeFtTztvUImZD0n6XpJWIa/g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAAqfRNch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBWMEoIhl0GBcRYYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUBgENBQWDHIIBBaUigWwzgnYBA?=
 =?us-ascii?q?QWHKwiHfYMlgRwXgUA/gRGNbok6gX6EFn1Sj30JDZFNAhaRTYkzkCWBRoIOcBW?=
 =?us-ascii?q?DJ4IbDBeDSopgMwExgQUBAYxWAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAAAqfRNch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBWMEoIhl0GBcRYYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZ?=
 =?us-ascii?q?QMDAQIkGQEBNwEFCQEBUANUBgENBQWDHIIBBaUigWwzgnYBAQWHKwiHfYMlgRw?=
 =?us-ascii?q?XgUA/gRGNbok6gX6EFn1Sj30JDZFNAhaRTYkzkCWBRoIOcBWDJ4IbDBeDSopgM?=
 =?us-ascii?q?wExgQUBAYxWAQE?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="142119948"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 01:53:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729351AbeLNJuJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 04:50:09 -0500
Received: from hqemgate15.nvidia.com ([216.228.121.64]:10582 "EHLO
        hqemgate15.nvidia.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729301AbeLNJuG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 04:50:06 -0500
Received: from hqpgpgate101.nvidia.com (Not Verified[216.228.121.13]) by hqemgate15.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
        id <B5c137cca0000>; Fri, 14 Dec 2018 01:50:02 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
  by hqpgpgate101.nvidia.com (PGP Universal service);
  Fri, 14 Dec 2018 01:50:05 -0800
X-PGP-Universal: processed;
        by hqpgpgate101.nvidia.com on Fri, 14 Dec 2018 01:50:05 -0800
Received: from HQMAIL102.nvidia.com (172.18.146.10) by HQMAIL101.nvidia.com
 (172.20.187.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Fri, 14 Dec
 2018 09:50:05 +0000
Received: from hqnvemgw02.nvidia.com (172.16.227.111) by HQMAIL102.nvidia.com
 (172.18.146.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4 via Frontend
 Transport; Fri, 14 Dec 2018 09:50:05 +0000
Received: from niwei-ubuntu.nvidia.com (Not Verified[10.19.225.182]) by hqnvemgw02.nvidia.com with Trustwave SEG (v7,5,8,10121)
        id <B5c137cca0003>; Fri, 14 Dec 2018 01:50:04 -0800
From: Wei Ni <wni@nvidia.com>
To: <rui.zhang@intel.com>, <edubezval@gmail.com>
CC: <thierry.reding@gmail.com>, <daniel.lezcano@linaro.org>,
        <linux-tegra@vger.kernel.org>, <srikars@nvidia.com>,
        <linux-kernel@vger.kernel.org>, Wei Ni <wni@nvidia.com>
Subject: [PATCH v6 3/4] thermal: tegra: parse sensor id before sensor register
Date: Fri, 14 Dec 2018 17:49:52 +0800
Message-ID: <1544780993-20744-4-git-send-email-wni@nvidia.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544780993-20744-1-git-send-email-wni@nvidia.com>
References: <1544780993-20744-1-git-send-email-wni@nvidia.com>
X-NVConfidentiality: public
MIME-Version: 1.0
Content-Type: text/plain
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
        t=1544781002; bh=nWT8IrVMku4kJkV9k0/1Ook9xqT9hpmJKbC602i8z5Q=;
        h=X-PGP-Universal:From:To:CC:Subject:Date:Message-ID:X-Mailer:
         In-Reply-To:References:X-NVConfidentiality:MIME-Version:
         Content-Type;
        b=kciNjGjaQdqcdRRceLZE1lHp+SYxdpg2Ytj8xK0+66ybZlfx/FWFFyqJ5DvhBxL5n
         DNogZUTI43DZQ5R29etFjgODA9wCBw+uFmwVLYm4zkZMafjs6l2c1X5E9uB68aXm5i
         ypEbLAHDIrW9JDraaDJ0F0PIN0RzGnBatPweBSL1cF+l0y/KJs61TpH58poZh7/l7v
         +fYHVhFXWIbAOs+34y40QF9CFHJcm2WSJ9qFIFLLLtOPA5bUNcuIjS3H/2iTnM79Hm
         moAHJ51KxI0eKq2jleGRwwkY+MBFr0CnwJVwjM1kgthT+r0MGN34SBAq7vfGkTHb4y
         n8ZXyCv86W68w==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Since different platforms may not support all 4
sensors, so the sensor registration may be failed.
Add codes to parse dt to find sensor id which
need to be registered. So that the registration
can be successful on all platform.

Signed-off-by: Wei Ni <wni@nvidia.com>
---
 drivers/thermal/tegra/soctherm.c | 45 ++++++++++++++++++++++++++++++++++++++--
 1 file changed, 43 insertions(+), 2 deletions(-)

diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soctherm.c
index fd2703c0cfc5..6bee31cd4621 100644
--- a/drivers/thermal/tegra/soctherm.c
+++ b/drivers/thermal/tegra/soctherm.c
@@ -1224,6 +1224,41 @@ static void soctherm_init(struct platform_device *pdev)
 	tegra_soctherm_throttle(&pdev->dev);
 }
 
+static bool tegra_soctherm_find_sensor_id(unsigned int sensor_id)
+{
+	bool ret = false;
+	struct of_phandle_args sensor_specs;
+	struct device_node *np, *sensor_np;
+
+	np = of_find_node_by_name(NULL, "thermal-zones");
+	if (!np)
+		return ret;
+
+	for_each_available_child_of_node(np, sensor_np) {
+		if (of_parse_phandle_with_args(sensor_np, "thermal-sensors",
+						 "#thermal-sensor-cells",
+						 0, &sensor_specs))
+			continue;
+
+		if (sensor_specs.args_count != 1) {
+			WARN(sensor_specs.args_count != 1,
+			     "%s: wrong cells in sensor specifier %d\n",
+			     sensor_specs.np->name, sensor_specs.args_count);
+			continue;
+		}
+
+		if (sensor_specs.args[0] == sensor_id) {
+			of_node_put(sensor_np);
+			ret = true;
+			break;
+		}
+	}
+
+	of_node_put(np);
+
+	return ret;
+}
+
 static const struct of_device_id tegra_soctherm_of_match[] = {
 #ifdef CONFIG_ARCH_TEGRA_124_SOC
 	{
@@ -1365,13 +1400,16 @@ static int tegra_soctherm_probe(struct platform_device *pdev)
 		zone->sg = soc->ttgs[i];
 		zone->ts = tegra;
 
+		if (!tegra_soctherm_find_sensor_id(soc->ttgs[i]->id))
+			continue;
+
 		z = devm_thermal_zone_of_sensor_register(&pdev->dev,
 							 soc->ttgs[i]->id, zone,
 							 &tegra_of_thermal_ops);
 		if (IS_ERR(z)) {
 			err = PTR_ERR(z);
-			dev_err(&pdev->dev, "failed to register sensor: %d\n",
-				err);
+			dev_err(&pdev->dev, "failed to register sensor %s: %d\n",
+				soc->ttgs[i]->name, err);
 			goto disable_clocks;
 		}
 
@@ -1434,6 +1472,9 @@ static int __maybe_unused soctherm_resume(struct device *dev)
 		struct thermal_zone_device *tz;
 
 		tz = tegra->thermctl_tzs[soc->ttgs[i]->id];
+		if (!tz)
+			continue;
+
 		err = tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);
 		if (err) {
 			dev_err(&pdev->dev,
-- 
2.7.4

