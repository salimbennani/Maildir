Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:23:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4B39B58079D;
	Thu, 13 Dec 2018 18:31:17 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 18:31:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANIKiOxIgnCKjkc86XdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv36rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kaKTA5/mHZhM9+gq1Vrx2upQBwzYHVYIGOLPpzfLjQfc8YSGdbQspdSyJMD4O6?=
 =?us-ascii?q?YoASD+QBJ+FYr4zlqlYQrRuxHw6sD/7txT9Vm3T72q070/k9HgHGxgMgGM4CvW?=
 =?us-ascii?q?/UrNXoLqgTX/66zKjSwTrfaPNW3C7w5Y7VeR4iufGBRax8fdbVxEU1Cg/IgEuc?=
 =?us-ascii?q?pZb4Mz6WyugBqWmW4uh4We6yl2IrsRx9rzagy8s2lIXFmJgZxk3A+Ch52Io4Kt?=
 =?us-ascii?q?21RFRlbdOrFJZcrT+WO5ZoTs84TWxkpiA3waAct5GhZigF0pEnygbfa/OZd4iI?=
 =?us-ascii?q?5QruVPieIThmnnJpYrG/iAio8Uim1OL8UtO40FFQripKitXMt3YN2ALP6sWfVP?=
 =?us-ascii?q?dx4kOs1SyS2w3d9O1IO104mKnHJ5I7w7M9lIIfsUHZES/3nEX2grWWdkIh+uWw?=
 =?us-ascii?q?7+TnY7PmpoKTNoNtiQHxLL4umsqhDuQ8KwQOWGaa+eKi27355kD5XrpKgeMskq?=
 =?us-ascii?q?XDs5DVO94bpqinDA9RyIoj7Ay/Dzi+3NQCgXYHNE5FeA6Aj4XxP1HOIfP4Auml?=
 =?us-ascii?q?j1WjjTdm3PTGPrznApXQIXnPirbhfbBh60FCzAo/18xQ55VRCrsZOvL8RlfxtM?=
 =?us-ascii?q?DEDh8+KwG0w/zoCNRh1owEXmKDGK+ZML7Ivl+O6eIiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9Hv5+OUWWfWLsgssdEWcNpgc+Tuvqh0OYXT5QYHayWa?=
 =?us-ascii?q?Q85jYgBYKiDIfDQJ2tgbOb0Ce6GJ1Wen5JClSWHXj0cIWEXu8GaDiOLc95jjwE?=
 =?us-ascii?q?Sb+hRpc72hG1tA/6zLlnIvDO+iICt5Luz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5JUR01NZjGw+x+CtD9QATBftiSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7b26?=
 =?us-ascii?q?Y7kVkpXNFDNW28ia557AjcGYjJn0Kdl6apcKQc2DXA9GOCzWqIoUFZXxR8UaTD?=
 =?us-ascii?q?XXADeETWqc716V/FT7+rEb4nKBdOydaeKqtWbd3klUhJS+39ONvAeW6xm32/BR?=
 =?us-ascii?q?CTxrySaornYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0Bhy7u1+hsShfyAS/MS3qgIuDs7pzVzBla929PWC9yPpwd6eKVcYN?=
 =?us-ascii?q?U94EpI1G7Dtgx9OICgIL5mhlIEbwt3uEbu3Q1tCopcicgqsG8qzA1qJK2C1FNO?=
 =?us-ascii?q?aTyZ0o7wO7HNMWby4Q2gZLTQ2lHd19aW5LwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzX1tMbSuvjDewd4oBeslxQymf9dQ?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1lyEKM9jZzRfTS35kYxPGUxA2HWCnmjFegq8z4hZpLZTUPEWWh0yjkA4hRa7Z2?=
 =?us-ascii?q?fYYKD2euPsK2ys9/h57rR35X6lqjC0ka18+ufBqYd0b90hFI1UQLvXynnjO1zj?=
 =?us-ascii?q?x1kz0zrquTxjfOw/nkdBccPm5LRW9ijUrjIISujtAaWlSoYBYtlBe/+Un6wK1b?=
 =?us-ascii?q?rrxlL2bPWUdIYzT2L2Z6X6uyrLWCec1P6JAvsSlNS+Sze1OaSr38oxsczSzjGX?=
 =?us-ascii?q?BTxDQ6dzGsp5X4kAZ2iGObLHZvsnXZfdt8ygvY5NzZXfRRxCYJRDFkiTnLAVix?=
 =?us-ascii?q?J9mo8s+Tl5vZsOC+VmShW4ZXcSnqy4OAqSS66XdrAR25g/C8hNnnHRIm3i/80t?=
 =?us-ascii?q?lgTT/IowrkYon3y6S6NvpqfkpyC1/98cZ6Gpx+nZE2hJEfwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiZ2MW2yE94NpQBK?=
 =?us-ascii?q?aa8rNEhjd1rUSirQ3Kf/d9hDgdxOAq6H4bheEJpQUswj+cArAUAUlXIyjsmw6U?=
 =?us-ascii?q?4NC5qaVdfHyvfqSo1EpigdChC6mPoh1bWHb8YJsjHDV/7sNiMFLXy33z65rpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5Lm2?=
 =?us-ascii?q?DQRfNj3xesMf4DXtjbtFk8aS3oCvGIhhGzoRUJvpS/KoDCwdtfD9OwmSFz08r2?=
 =?us-ascii?q?+RGaDDEg+H9Edms3XPHoipN36NIXkW085iSAOBJEBFgwAUQTY6noM/Fg+w38zs?=
 =?us-ascii?q?a0N55jEX5l7lpRpA0ONoNx/jUmjBoAekcCs7SJ+aLBBO9AFN+1/VMdCC7uJ0By?=
 =?us-ascii?q?xZ/pqhrBGUKmyGfQtIC3sFWleDB1DlMbmj/t3A8+meBuqjIPrCe7SOqepCV/iW?=
 =?us-ascii?q?wZKjyJdp/zGJNs+XJHltE+U72lZfXXB+A8nZmysASy0UlyLObs6XvhS8+jdwrs?=
 =?us-ascii?q?Cw7vvrQh/v5ZCUBrtWMNVv/Q22gKiZO+6RgiZ5NShX1pcWyXDUz7gf2UYYizty?=
 =?us-ascii?q?eDm1DbQAqSnNQbrKla9KFBEbcT18NctS46I43wlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBQkORUtxiqtTmHCUPsIjSD?=
 =?us-ascii?q?mCfvVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo7yQ9yxYhPB/G21H7nV9LOiEmzyW7+/XKpsNtftrAyJ0l/9V4XggyrtV?=
 =?us-ascii?q?6j1ES+JxmCfIstFupFSmwaGzzW8zUhNDpTtWh6qIsF9kNKGf8YNPDyXq5hUIuE?=
 =?us-ascii?q?6QAhNClsYtXszysKBZzYDnlL/6NzpDtdnT+J1PVIDvNMubPS95YlLSEznOAV5d?=
 =?us-ascii?q?QA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BUAACPFRNch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCbH8nCowLjBGBYC0Ul0GBcywTAYdFIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYigmUBAgMBAiRSBgkBAQoYLgNUBg0BBQIBAQGDHIIBBag+M4VAhG6MP?=
 =?us-ascii?q?oIWgREngmuKXAKBKgGIDIZZNlKPewYDDZFGBhiBXYUcgwSHToo1iC+IMoIOcIF?=
 =?us-ascii?q?ugU6CJxeOKjIBATGBBAEBAQ6KCiqBBIEfAQE?=
X-IPAS-Result: =?us-ascii?q?A0BUAACPFRNch0O0hNFjHQEBBQEHBQGBUQgBCwGCbH8nCow?=
 =?us-ascii?q?LjBGBYC0Ul0GBcywTAYdFIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYigmUBA?=
 =?us-ascii?q?gMBAiRSBgkBAQoYLgNUBg0BBQIBAQGDHIIBBag+M4VAhG6MPoIWgREngmuKXAK?=
 =?us-ascii?q?BKgGIDIZZNlKPewYDDZFGBhiBXYUcgwSHToo1iC+IMoIOcIFugU6CJxeOKjIBA?=
 =?us-ascii?q?TGBBAEBAQ6KCiqBBIEfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,351,1539673200"; 
   d="scan'208";a="44928272"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 18:31:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729012AbeLNCbN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 21:31:13 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:56456 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728612AbeLNCbM (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 21:31:12 -0500
Received: from DGGEMS405-HUB.china.huawei.com (unknown [172.30.72.60])
        by Forcepoint Email with ESMTP id D8A032ECCBB7C;
        Fri, 14 Dec 2018 10:31:08 +0800 (CST)
Received: from [127.0.0.1] (10.134.22.195) by DGGEMS405-HUB.china.huawei.com
 (10.3.19.205) with Microsoft SMTP Server id 14.3.408.0; Fri, 14 Dec 2018
 10:31:06 +0800
Subject: Re: [PATCH v2] f2fs: add bio cache for IPU
To: <jaegeuk@kernel.org>
CC: <linux-f2fs-devel@lists.sourceforge.net>,
        <linux-kernel@vger.kernel.org>, <chao@kernel.org>
References: <20181119032924.12587-1-yuchao0@huawei.com>
From: Chao Yu <yuchao0@huawei.com>
Message-ID: <ba61f507-a209-76c9-a10e-c847b07caf40@huawei.com>
Date: Fri, 14 Dec 2018 10:31:05 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181119032924.12587-1-yuchao0@huawei.com>
Content-Type: text/plain; charset="windows-1252"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.134.22.195]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Jaegeuk,

I guess ("f2fs: clear PG_writeback if IPU failed") and v2 patch can fix
hang issue caused by v1 one, could you please have a try with v2?

Thanks,

On 2018/11/19 11:29, Chao Yu wrote:
> SQLite in Wal mode may trigger sequential IPU write in db-wal file, after
> commit d1b3e72d5490 ("f2fs: submit bio of in-place-update pages"), we
> lost the chance of merging page in inner managed bio cache, result in
> submitting more small-sized IO.
> 
> So let's add temporary bio in writepages() to cache mergeable write IO as
> much as possible.
> 
> Test case:
> 1. xfs_io -f /mnt/f2fs/file -c "pwrite 0 65536" -c "fsync"
> 2. xfs_io -f /mnt/f2fs/file -c "pwrite 0 65536" -c "fsync"
> 
> Before:
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65544, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65552, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65560, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65568, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65576, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65584, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65592, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65600, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65608, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65616, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65624, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65632, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65640, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65648, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65656, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65664, size = 4096
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), NODE, sector = 57352, size = 4096
> 
> After:
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65544, size = 65536
> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), NODE, sector = 57368, size = 4096
> 
> Signed-off-by: Chao Yu <yuchao0@huawei.com>
> ---
> v2:
> - submit cached bio for cp error case.
>  fs/f2fs/data.c    | 61 +++++++++++++++++++++++++++++++++++++++++++++--
>  fs/f2fs/f2fs.h    |  3 +++
>  fs/f2fs/segment.c |  5 +++-
>  3 files changed, 66 insertions(+), 3 deletions(-)
> 
> diff --git a/fs/f2fs/data.c b/fs/f2fs/data.c
> index 8780f3d737c4..7dffafb8b2c5 100644
> --- a/fs/f2fs/data.c
> +++ b/fs/f2fs/data.c
> @@ -474,6 +474,49 @@ int f2fs_submit_page_bio(struct f2fs_io_info *fio)
>  	return 0;
>  }
>  
> +int f2fs_merge_page_bio(struct f2fs_io_info *fio)
> +{
> +	struct bio *bio = *fio->bio;
> +	struct page *page = fio->encrypted_page ?
> +			fio->encrypted_page : fio->page;
> +
> +	if (!f2fs_is_valid_blkaddr(fio->sbi, fio->new_blkaddr,
> +			__is_meta_io(fio) ? META_GENERIC : DATA_GENERIC))
> +		return -EFAULT;
> +
> +	trace_f2fs_submit_page_bio(page, fio);
> +	f2fs_trace_ios(fio, 0);
> +
> +	if (bio && (*fio->last_block + 1 != fio->new_blkaddr ||
> +			!__same_bdev(fio->sbi, fio->new_blkaddr, bio))) {
> +		__submit_bio(fio->sbi, bio, fio->type);
> +		bio = NULL;
> +	}
> +alloc_new:
> +	if (!bio) {
> +		bio = __bio_alloc(fio->sbi, fio->new_blkaddr, fio->io_wbc,
> +				BIO_MAX_PAGES, false, fio->type, fio->temp);
> +		*fio->last_block = fio->new_blkaddr;
> +		bio_set_op_attrs(bio, fio->op, fio->op_flags);
> +	}
> +
> +	if (bio_add_page(bio, page, PAGE_SIZE, 0) < PAGE_SIZE) {
> +		__submit_bio(fio->sbi, bio, fio->type);
> +		bio = NULL;
> +		goto alloc_new;
> +	}
> +
> +	if (fio->io_wbc)
> +		wbc_account_io(fio->io_wbc, page, PAGE_SIZE);
> +
> +	*fio->last_block = fio->new_blkaddr;
> +
> +	inc_page_count(fio->sbi, WB_DATA_TYPE(fio->page));
> +
> +	*fio->bio = bio;
> +	return 0;
> +}
> +
>  void f2fs_submit_page_write(struct f2fs_io_info *fio)
>  {
>  	struct f2fs_sb_info *sbi = fio->sbi;
> @@ -1894,6 +1937,8 @@ int f2fs_do_write_data_page(struct f2fs_io_info *fio)
>  }
>  
>  static int __write_data_page(struct page *page, bool *submitted,
> +				struct bio **bio,
> +				sector_t *last_block,
>  				struct writeback_control *wbc,
>  				enum iostat_type io_type)
>  {
> @@ -1919,6 +1964,8 @@ static int __write_data_page(struct page *page, bool *submitted,
>  		.need_lock = LOCK_RETRY,
>  		.io_type = io_type,
>  		.io_wbc = wbc,
> +		.bio = bio,
> +		.last_block = last_block,
>  	};
>  
>  	trace_f2fs_writepage(page, DATA);
> @@ -2020,6 +2067,10 @@ static int __write_data_page(struct page *page, bool *submitted,
>  		f2fs_balance_fs(sbi, need_balance_fs);
>  
>  	if (unlikely(f2fs_cp_error(sbi))) {
> +		if (bio && *bio) {
> +			__submit_bio(sbi, *bio, DATA);
> +			*bio = NULL;
> +		}
>  		f2fs_submit_merged_write(sbi, DATA);
>  		submitted = NULL;
>  	}
> @@ -2046,7 +2097,7 @@ static int __write_data_page(struct page *page, bool *submitted,
>  static int f2fs_write_data_page(struct page *page,
>  					struct writeback_control *wbc)
>  {
> -	return __write_data_page(page, NULL, wbc, FS_DATA_IO);
> +	return __write_data_page(page, NULL, NULL, NULL, wbc, FS_DATA_IO);
>  }
>  
>  /*
> @@ -2062,6 +2113,8 @@ static int f2fs_write_cache_pages(struct address_space *mapping,
>  	int done = 0;
>  	struct pagevec pvec;
>  	struct f2fs_sb_info *sbi = F2FS_M_SB(mapping);
> +	struct bio *bio = NULL;
> +	sector_t last_block;
>  	int nr_pages;
>  	pgoff_t uninitialized_var(writeback_index);
>  	pgoff_t index;
> @@ -2149,7 +2202,8 @@ static int f2fs_write_cache_pages(struct address_space *mapping,
>  			if (!clear_page_dirty_for_io(page))
>  				goto continue_unlock;
>  
> -			ret = __write_data_page(page, &submitted, wbc, io_type);
> +			ret = __write_data_page(page, &submitted, &bio,
> +						&last_block, wbc, io_type);
>  			if (unlikely(ret)) {
>  				/*
>  				 * keep nr_to_write, since vfs uses this to
> @@ -2198,6 +2252,9 @@ static int f2fs_write_cache_pages(struct address_space *mapping,
>  	if (nwritten)
>  		f2fs_submit_merged_write_cond(F2FS_M_SB(mapping), mapping->host,
>  								NULL, 0, DATA);
> +	/* submit cached bio of IPU write */
> +	if (bio)
> +		__submit_bio(sbi, bio, DATA);
>  
>  	return ret;
>  }
> diff --git a/fs/f2fs/f2fs.h b/fs/f2fs/f2fs.h
> index 26ad1de8641c..d0bb679fd668 100644
> --- a/fs/f2fs/f2fs.h
> +++ b/fs/f2fs/f2fs.h
> @@ -1051,6 +1051,8 @@ struct f2fs_io_info {
>  	bool retry;		/* need to reallocate block address */
>  	enum iostat_type io_type;	/* io type */
>  	struct writeback_control *io_wbc; /* writeback control */
> +	struct bio **bio;		/* bio for ipu */
> +	sector_t *last_block;		/* last block number in bio */
>  	unsigned char version;		/* version of the node */
>  };
>  
> @@ -3093,6 +3095,7 @@ void f2fs_submit_merged_write_cond(struct f2fs_sb_info *sbi,
>  				nid_t ino, enum page_type type);
>  void f2fs_flush_merged_writes(struct f2fs_sb_info *sbi);
>  int f2fs_submit_page_bio(struct f2fs_io_info *fio);
> +int f2fs_merge_page_bio(struct f2fs_io_info *fio);
>  void f2fs_submit_page_write(struct f2fs_io_info *fio);
>  struct block_device *f2fs_target_device(struct f2fs_sb_info *sbi,
>  			block_t blk_addr, struct bio *bio);
> diff --git a/fs/f2fs/segment.c b/fs/f2fs/segment.c
> index 204d31e58967..b0e6331a5d95 100644
> --- a/fs/f2fs/segment.c
> +++ b/fs/f2fs/segment.c
> @@ -3158,7 +3158,10 @@ int f2fs_inplace_write_data(struct f2fs_io_info *fio)
>  
>  	stat_inc_inplace_blocks(fio->sbi);
>  
> -	err = f2fs_submit_page_bio(fio);
> +	if (fio->bio)
> +		err = f2fs_merge_page_bio(fio);
> +	else
> +		err = f2fs_submit_page_bio(fio);
>  	if (!err)
>  		update_device_state(fio);
>  
> 

