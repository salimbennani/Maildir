Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:57:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6D8AD58079D;
	Tue, 11 Dec 2018 15:04:26 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga004-1.jf.intel.com with ESMTP; 11 Dec 2018 15:04:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKAxPghPri5fLUzZZf20l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn4pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCPEBPf5aooTmu1cCsQGzCRW2Ce/z1jNFgGL9060g0+QmFAHLxAIuEMwIsH?=
 =?us-ascii?q?TSrdX1L7oZXuO1zKnP0DXIcvRb1irj54jOdBAhoOqMUKlzccXP00kvER3KjlGK?=
 =?us-ascii?q?pYziJTOV2f0Avm6G5ORuUuKvjnQoqwB3ojW3xccjlJPJhoQLxVDA7yl5x5w1Jd?=
 =?us-ascii?q?K+RUVmYtCkCINduz+GO4ZyWM8uXm9ltDggxrEbupO3YDIGxZUlyhLHdvCKd4yF?=
 =?us-ascii?q?7gj9WOqNPDt0nnNodbKlixqv/0WtyuvxXdSu3llQtCpKiNzMu2gN1xPN7siHTe?=
 =?us-ascii?q?Nw/lmu2TmRzQDf8OJELl4ulardNZEhxqQ8lp0JsUTMBiP2mUP2g7GKdkg85OSk?=
 =?us-ascii?q?9+Dqbq/7qpKSKYN4kBzyP6cylsClAOk1MBACX22B9uS90L3j81f5QLJPjvAulq?=
 =?us-ascii?q?nZsZbaJdkUp6KgAA9azJwj6xChADeiydgYmncGLFRbdxKdlIXpJV7OL+7iDful?=
 =?us-ascii?q?gFSjji1rx/bYMb3lGJnNKWLDkLj5cbZn90Fc0BYzzcxY559MDrEBIfHzVVHruN?=
 =?us-ascii?q?3XEx80KAi0w+fhCNVg2YISQ2OPAqmFMKzMtV+E/P4gI+6JZIUNojbyN+Al5+Ly?=
 =?us-ascii?q?jX8+gVIdfbOm3ZoLaH+iGfRqOUWZYWf2jdcHHmcHpQ4+TO3siF2fXj9ffXeyX6?=
 =?us-ascii?q?Qg5j4lDIKqF5vMRoeogLaZxie0AoVWZnxaClCLCXrodYKEVOkWZCKRJc9hlDoE?=
 =?us-ascii?q?Vb+6Ro8l1BGushL6yrV9IurV/C0YqYzs1Nxv6+LPkhEy8CR+D96B3GGVU2F0gm?=
 =?us-ascii?q?QISics06BkoUx9zVSD3bJig/NCF9xe/PdJUgY8NZ7BwO12EdHyWgTdftiXTFaq?=
 =?us-ascii?q?WMmpATY0Ttgp2d8Bf159G8m+jhDExyeqAKUal7qRCJww86LTxX7xJ8lmxnbC1a?=
 =?us-ascii?q?khiUQmQ8RVOW2ngK5/6xbcB4rTn0qFkKaqcLwW3DTR+2eb0WqOoEZYXRZtXqrf?=
 =?us-ascii?q?Q3AQeFHardTj6UPEVL+hF7InPgxFyc6BL6tKbsbkjVFHRPflJdTfbHi9m2a2BR?=
 =?us-ascii?q?aU2LyMaJDmdHka3CXYEEIEiRwc/W6aNQgiASesu3/RAyZwFV3xeU/s8fNxqHWg?=
 =?us-ascii?q?TkAqyQGHdElh17uz+h4Iiv2QUfIT3rQYuCg/rzV4Bkqy39XTC9CYvQpuYL1cYc?=
 =?us-ascii?q?8h4FdAzW/Zqw19PpmnL6B+hl4fcx57v1/02xVwEIVAlckqrHUlzAdpLaKY0VVB?=
 =?us-ascii?q?dy6X3JzqO73XLHXy8w6ra6LMxl7e19OW8L8V6Psks1XjoB2pFk06/np919lazX?=
 =?us-ascii?q?Sd6YvKDQYISp3xT1s4+AJ8p7HZZSk9+ZjZ1XltMamyrz/D1MglBOojyha8Ydhf?=
 =?us-ascii?q?NLmIGxP1E80fH8KuMvAlm0C1bhIYO+Bf7K41P968e/SawqKqPeZgkyigjWRI+4?=
 =?us-ascii?q?191kOM9yxhSu/HxZoFwveY3heZWDf4lluursf3mYVcbzEIAmW/0TTkBJJWZqBq?=
 =?us-ascii?q?Z4YLCHuhLNetxtpjgJ7hQXhY+0C5B1MHwcOmZQCdb1jg0gJOz0QXpnqnlDC8zz?=
 =?us-ascii?q?x1lTEps6We0DbPw+TkaBoIJGpLSHN+glfrJIi+l8oaU1Swbwg1iBul4l73xqha?=
 =?us-ascii?q?pKhlL2jfW1xIfzXwL2x5Vquwt7yCY9NA6Z8ysCVXVvi8bk6eSrLnvxQa1CbjFX?=
 =?us-ascii?q?NExD8nbzGqpon5nxtihWKfNnlztnnZecJ3xRvF/9zTX/1R3jkHRCl+lzbXAEOx?=
 =?us-ascii?q?P92o/dWSipfCvfqyV2OnVp1PbybryZmMuze85W1vGRe/hey8msX7EQgm1i/2z9?=
 =?us-ascii?q?lrWj/PrBrmYInr1qK6PPljfklpAl/89sV7Fpt/kos2mJEfx3waio+J8noAlGf5?=
 =?us-ascii?q?Kc9b1r7mbHoRWT4LxMbY4Av/101iNH6Jx5/5WW+bwstufNS6ZmIW2iQg78FFEq?=
 =?us-ascii?q?uU7bpEnTdrrVq8tw7eff99njIFw/s09HEam/0JuBYqziiFB7ASHEpYMjb2mxWG?=
 =?us-ascii?q?8d++t7lXa3i1cberykV+h9+hAaqGogFdXnb5Z5gjETVx7sV5LFLDznnz5pv4d9?=
 =?us-ascii?q?nXaNIZrgeUnAvYj+hJNJIxkeIHhTZgOWL4p3EkyvQ0jRpz3ZGhp4iHKn5g/Ka4?=
 =?us-ascii?q?Ah5eKz30aNkf+jDrjaZCgMmW25qjEYlmGjUORJHoV+6nECoOtfT7MAaDCCYzpW?=
 =?us-ascii?q?2cGbrbAA+T8kNmr2/UHpCvNnGXImQZzNp4SBmcIkxfnB4bXDEgkpElEQCqwdTr?=
 =?us-ascii?q?cF1l6TAJ+l74thxMx/pqNxblV2fQuhyoZi0oSJSFLxpW8wJC51rTMcOE9eJ+BC?=
 =?us-ascii?q?VY/pynrAyQJW2XfQVIDWcVWkOaA1DvJKWh5d7F8+KAHOqxM+POYamSqexZT/qJ?=
 =?us-ascii?q?xZWv0pZ//zaRLMqPOGNuD+Y82kpFUnB0AMDZmzQJSywKmCPBdc+bpBGg+iJpqs?=
 =?us-ascii?q?Cz6ujkWAXq5YGXEbtdLc1v+wyqgaeEL+OQhDh2KTdb1pMPxH/E0rsf3EQViyFh?=
 =?us-ascii?q?aTatC6kAtTXWQaLUm69XCQMbaixpOMtJ6aI8whdCOcrBhtzp0b54i+Y/C01ZWl?=
 =?us-ascii?q?z5hsGpecsKLnmnO1PaH0mLLqqJJD3Rz8HzYKOxUrlQjORStx2ttjeXCU7jPjKf?=
 =?us-ascii?q?lzb3UxCjK/1DjCaePBZGooGybg5tCXT/TNLhchC7LN53jTgszbIonH/FKW4cPi?=
 =?us-ascii?q?Z6c05Wqr2Q7CVYguhwGmBb73plK/WElDid7+XCNpkWtv5rCDxul+1G+HQ616dV?=
 =?us-ascii?q?7CZcSf11giTSqNtuo1CgkuaXyztnUABBqjBEhI+QuUViOKPZ9oRPWHre/RIN63?=
 =?us-ascii?q?mQBAoOp9d/FtLvvKVQmZDzk/fRJTFZu/vE98wRT5zdOMiAPVIiPADvFTqSAAhT?=
 =?us-ascii?q?CXaXOGPCgQR9nfbaomGXhps3sJ7hnNwJULANEBQXEegXBAxPFdcDI98jXDQ/nL?=
 =?us-ascii?q?CzkMkY5HGmpR/dTYNRuZWRBdyIBvC6BDufi7hfLykIxq6weYgeMIv6wGRhZ0N8?=
 =?us-ascii?q?kYCMHFDfC4Me6hZ9ZxM59R0euEN1SXc+jge8Mlug?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACyQRBch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieMFIwSgiGXPoFzEgEBGAsIAYcuIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCaQIkUgYJAlADMQEFASIBEgWDHAGCAQUKmic8jAkzh?=
 =?us-ascii?q?C0BhXsFEodqhD8XgX+BEYYXgUWGEgKQPJA/CYImhGOKPQsYYIkGh1qJI4RzinY?=
 =?us-ascii?q?CBAIJAgUPIYElgg4zGggoCIMnEgGCFBeIXoVdIjIBAYEDAQGIF4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACyQRBch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieMFIwSgiGXPoFzEgEBGAsIAYcuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCaQIkUgYJAlADMQEFASIBEgWDHAGCAQUKmic8jAkzhC0BhXsFEodqhD8?=
 =?us-ascii?q?XgX+BEYYXgUWGEgKQPJA/CYImhGOKPQsYYIkGh1qJI4RzinYCBAIJAgUPIYElg?=
 =?us-ascii?q?g4zGggoCIMnEgGCFBeIXoVdIjIBAYEDAQGIF4JNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="43671663"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 15:04:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726296AbeLKXBW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 18:01:22 -0500
Received: from mail-yb1-f196.google.com ([209.85.219.196]:34378 "EHLO
        mail-yb1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726211AbeLKXBV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 18:01:21 -0500
Received: by mail-yb1-f196.google.com with SMTP id k136so3787079ybk.1;
        Tue, 11 Dec 2018 15:01:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=GaHalUQN5CBpxDu6FDNAS9ymKp2tTj7f/LYcrudYJgE=;
        b=peot/HoX9uykDgUGvQKg9x6DEtqpPlUu6EeU7dmnQBgQ88AgPC8DvxIQAl7wvD6y1V
         pO3mcyDFnrQPA6EJuVI3WTsHL5Qq3xGbLqG5Jmyrb7Yi0aKaDLNET8tTXZBscTHgzB1B
         TyPjAh6EwBM1CD+7GsD/HRp5n0EmmpropsTsYsvdb0vp7NAg4+ZIVFd6QECJPXSdKM0u
         BfRmj25V1dG5mip50IEIHjjW/IqhCKZlng1UTTqcbXBo5CfxhLFUJsn/THb8V1fAUrs/
         IPYg7eu4i6YbWhL6/K0jV8cgWGF8qHqeRF7ntWn78CrHahwk5BenACH/JxMIB9jxx/8x
         Xt5w==
X-Gm-Message-State: AA+aEWYQznHIZBNmI180tqa/SCiq49Lk1JTDJpVrfEbUCNOeQgUUXS+Q
        rod8y8ALDVFbVsvX7/+qcWY=
X-Google-Smtp-Source: AFSGD/ViLF9UGxJyhqvghhqcfWbjGK744cVcF5Hx3acGBOl3FId+FYeIqX68YuKU7PsJlX1r602Jrw==
X-Received: by 2002:a25:5bd6:: with SMTP id p205mr17894621ybb.283.1544569280779;
        Tue, 11 Dec 2018 15:01:20 -0800 (PST)
Received: from dennisz-mbp.thefacebook.com ([199.201.65.135])
        by smtp.gmail.com with ESMTPSA id q187sm4957156ywb.40.2018.12.11.15.01.19
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 11 Dec 2018 15:01:19 -0800 (PST)
From: Dennis Zhou <dennis@kernel.org>
To: Jens Axboe <axboe@kernel.dk>, Tejun Heo <tj@kernel.org>,
        Josef Bacik <josef@toxicpanda.com>
Cc: kernel-team@fb.com, linux-block@vger.kernel.org,
        cgroups@vger.kernel.org, linux-kernel@vger.kernel.org,
        Dennis Zhou <dennis@kernel.org>
Subject: [PATCH v2] block: fix iolat timestamp and restore accounting semantics
Date: Tue, 11 Dec 2018 18:01:14 -0500
Message-Id: <20181211230114.65967-1-dennis@kernel.org>
X-Mailer: git-send-email 2.13.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The blk-iolatency controller measures the time from rq_qos_throttle() to
rq_qos_done_bio() and attributes this time to the first bio that needs
to create the request. This means if a bio is plug-mergeable or
bio-mergeable, it gets to bypass the blk-iolatency controller.

The recent series, to tag all bios w/ blkgs in [1] changed the timing
incorrectly as well. First, the iolatency controller was tagging bios
and using that information if it should process it in rq_qos_done_bio().
However, now that all bios are tagged, this caused the atomic_t for the
struct rq_wait inflight count to underflow resulting in a stall. Second,
now the timing was using the duration a bio from generic_make_request()
rather than the timing mentioned above.

This patch fixes these issues by reusing the BLK_QUEUE_ENTERED flag to
determine if a bio has entered the request layer and is responsible for
starting a request. Stacked drivers don't recurse through
blk_mq_make_request(), so the overhead of using time between
generic_make_request() and the blk_mq_get_request() should be minimal.
blk-iolatency now checks if this flag is set to determine if it should
process the bio in rq_qos_done_bio().

[1] https://lore.kernel.org/lkml/20181205171039.73066-1-dennis@kernel.org/

Fixes: 5cdf2e3fea5e ("blkcg: associate blkg when associating a device")
Signed-off-by: Dennis Zhou <dennis@kernel.org>
Cc: Josef Bacik <josef@toxicpanda.com>
---
v2:
- Switched to reusing BIO_QUEUE_ENTERED rather than adding a second
  timestamp to the bio struct.

 block/blk-iolatency.c |  2 +-
 block/blk-mq.c        | 12 ++++++++++++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/block/blk-iolatency.c b/block/blk-iolatency.c
index bee092727cad..e408282bdc4c 100644
--- a/block/blk-iolatency.c
+++ b/block/blk-iolatency.c
@@ -593,7 +593,7 @@ static void blkcg_iolatency_done_bio(struct rq_qos *rqos, struct bio *bio)
 	bool enabled = false;
 
 	blkg = bio->bi_blkg;
-	if (!blkg)
+	if (!blkg || !bio_flagged(bio, BIO_QUEUE_ENTERED))
 		return;
 
 	iolat = blkg_to_lat(bio->bi_blkg);
diff --git a/block/blk-mq.c b/block/blk-mq.c
index 9690f4f8de7e..05ac940e6671 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1920,6 +1920,17 @@ static blk_qc_t blk_mq_make_request(struct request_queue *q, struct bio *bio)
 	struct request *same_queue_rq = NULL;
 	blk_qc_t cookie;
 
+	/*
+	 * The flag BIO_QUEUE_ENTERED is used for two purposes.  First, it
+	 * determines if a bio is being split and has already entered the queue.
+	 * This happens in blk_queue_split() where we can recursively call
+	 * generic_make_request().  The second use is to mark bios that will
+	 * call rq_qos_throttle() and subseqently blk_mq_get_request().  These
+	 * are the bios that fail plug-merging and bio-merging with the primary
+	 * use case for this being the blk-iolatency controller.
+	 */
+	bio_clear_flag(bio, BIO_QUEUE_ENTERED);
+
 	blk_queue_bounce(q, &bio);
 
 	blk_queue_split(q, &bio);
@@ -1934,6 +1945,7 @@ static blk_qc_t blk_mq_make_request(struct request_queue *q, struct bio *bio)
 	if (blk_mq_sched_bio_merge(q, bio))
 		return BLK_QC_T_NONE;
 
+	bio_set_flag(bio, BIO_QUEUE_ENTERED);
 	rq_qos_throttle(q, bio);
 
 	rq = blk_mq_get_request(q, bio, &data);
-- 
2.17.1

