Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 10:42:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 303C65805F0;
	Sat, 15 Dec 2018 12:56:55 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 12:56:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+MNP3RMj9+wK33JVovcl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj9pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPcPM/hEoInmv1sDrwCzBRWwCO711jNEmmP60K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rastr6Kr8SXvqox6fGzDXDaelZ2TLn54jOcxAqvPaBUq9ufsXP0UkgDRnJjlaO?=
 =?us-ascii?q?poz/OTOayOANvnOU7+plT+2vimonpxttrTiow8chk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrEavZO3ZisHxZQ9yxLCavGKcpKE?=
 =?us-ascii?q?7xL9WOuXPDx2nmhqeKiliBa36UWgyvPzVs2z0FtSsCpFncfDtmoX2xzQ9MeHUP?=
 =?us-ascii?q?198Vml2TqV0ADT8O5ELVg1lardNZEh3qY9moQPvUnHBCP6hUv7gLGMekk5+eWk?=
 =?us-ascii?q?9/7rb7Tkq5OEMo97kAD+MqAgmsylBuQ4NxADX2ya+eS6yb3i8lT1QLZUgf0slK?=
 =?us-ascii?q?nWrpTaKd0cpq+3BQ9azJwj5g2hDzepztsYh2MLLFFbdxKdiYjmJVXOLOr/Dfel?=
 =?us-ascii?q?jFSgiC1ryOzePr39HpXNKWDOkLPgfbZ+9UFQ0gUyzc1E6pJQC7EBJu/zW0DruN?=
 =?us-ascii?q?zZCB85LxK7w+L9BNph0YMeXHqFArWFP6PKrV+I+uUvLvGMZIAPuTb9N+Iq5/n0?=
 =?us-ascii?q?gX85hF8SZ6+p3ZQMZXC8H/RmJViZYHX2jtcAF2cKohQxTOjwhFKeVj5TYm64X7?=
 =?us-ascii?q?gg6TEjFIKmEYDDS5ivgLyGwii3BJ5WZmdAClCKFnflbIGEW/YKaCKPLc5tiD0E?=
 =?us-ascii?q?Vb69S4A/0RGirhP1y71iLuDM4C0XqYrj1MRp5+3UjRw97yd0D8Sa02GOVW10hH?=
 =?us-ascii?q?kHRz0t0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCkyTt0rxd8CeUJ9G9S4gRDF0CqnGLsVl72NBJwp/aPQxXnxJ8Bhy3nY0K?=
 =?us-ascii?q?ktlUUpQsxKNWe+nK5w6xDTB5LVk0Wej6ulaL4T3DDT+2uZzWqBpkdYUBVuXqXD?=
 =?us-ascii?q?WnwfYkjWrdH95k7ZS7+uCLInMhZOyMKYK6tKbMHpgktCRPv5JNveZGexkX+qBR?=
 =?us-ascii?q?mU3rOMcJbqe2IF0SrAEkcEjR4c8WyGNQckACehuHzRDDp1GFLrYkPs9/R+qXyh?=
 =?us-ascii?q?Qk81yQGKc1Nu176v9hEJgvycTusZ3qgYtyc5tzV0AFG90srKC9qBogphe7lcYd?=
 =?us-ascii?q?M94VtdyWLVrQt9PoakL6BjgF4efB96v0fv1xVxF4VBntImrHIszApuN62Y1ElN?=
 =?us-ascii?q?eC+f3ZD1IrfXMHX9/Aiza67K3VHTyMyZ+qMR5/U3tVrivBulGVE/83p6ydZV1X?=
 =?us-ascii?q?ic5pLUDAcJVZLxU0A39wV1pr3AYyk94Z/U2mNoMaWurjDC3NcpDvM/yhm8Z9df?=
 =?us-ascii?q?LL+EFAjqHswaGsiiMvAll0KobxIEJu9S8qE0Mtiid/uH3q6rIelhkCinjWRB/I?=
 =?us-ascii?q?ByzEaM+zBgRe7P2pYP2+uY0RefVzfgkFehtdj6mZpFZT4OBGW/0zXrBIlLaq10?=
 =?us-ascii?q?Y4kLE2auL9Srydpkg57iRmBX9ESkB1MAw8KpfRuSb1rg3Qxfz0gXoHqnmTemwD?=
 =?us-ascii?q?xwiT0msq2f3CnWyeT4aBUHInJLRHVljVr0IYm0jsoWXUiyYwgyiRul4133x6xa?=
 =?us-ascii?q?pKR5MmnSTl1EfynwL2F+TKSwsqCObNJI6JMtqS9XSvizYUiGSr7hpBsXyyHjEH?=
 =?us-ascii?q?FExDA4dDGqvY/1nwdgh2KeL3ZzrXzZdt92xRrE4NzcRPhR3icJRSViiDnXAES8?=
 =?us-ascii?q?MMet/dmOi5jDteW+XXq7VpJPaSnr0Z+AtCyj6GxqGxK/mOq/mt/mEQg8yiL709?=
 =?us-ascii?q?hqVSPVrBfzeIXr1qK6Mf55cUlsHlPz9816GoRmmIsqmJ4QwWQahomS/Xcfkmf8?=
 =?us-ascii?q?K9Rb1bj+bHoQXzELxdHV7RPh2E1iKHKJ2o34Wm+cwstne9m1fGcW1jgh4MBNDa?=
 =?us-ascii?q?ee9KZEkjdtolqksQLRZuBwnjIcyfst8nEWme8ItxQ2ziWBHL8SB1JXMjL2lxSH?=
 =?us-ascii?q?9N2+qKRXZGCycbm/zkZ+nNahDK2crQFYQnr2ZpAiHSpo5MVlLF3MyGHz6p3jeN?=
 =?us-ascii?q?TIcdITsRiUnw3BjudPLpIxi+EKhTFmOW/muX0lyug7jQFh3J2gvYiHLXlt87y9?=
 =?us-ascii?q?AhJCKjL1YMYT8Cn3jalChsaWw5yvHpJ5FzoQRpToSvaoEC8IufTjKgaDCzk8qn?=
 =?us-ascii?q?adGbrCEg6T8kZmr3TTE5+1M3GbPmUWzdJnRBOFPkxQnBgUXCkmnp4+Dg2qxtbu?=
 =?us-ascii?q?cEJn6TAK/FL4tgFAyuF1Nxn8T2ffoh2naiwvRZibLRpW6BxC5kjPPcyf6OJzAz?=
 =?us-ascii?q?9X/pm7oAORLWybYhxCDXsVVUycG1DjIr6u6MHA8uifG+q+NubObq+IqeBETPeI?=
 =?us-ascii?q?wpSv0oR98jaIN8WPOGRiDvIh1kpCW3B5B9rWmzEVRyMLkCLNataRpA2g9S1vss?=
 =?us-ascii?q?C/7PPrVRrv5YSRCrtSMtZv+xGsjaeALe6Qgyl5JihC1pMR3n/F07wf3F8UiyFz?=
 =?us-ascii?q?eDihC7UAtSjRTK3Onq9bFQIUayR2NMFQ9aIzwhFNOdLHitPyzrN3lOM1BExfVV?=
 =?us-ascii?q?P/msClf8gKI2CmOVPDBUaLMqmGJDLRz8H2Z6O8VaNfjOFOuxKsvjabFlfpPi6f?=
 =?us-ascii?q?mDnxSxCvLeZMgTmHPBxfvYGxaApiBXL/Q9LmdBK7NsR6jTk3wb0ym3PLOnQQMT?=
 =?us-ascii?q?l6c0NRsLKQ6TlUjel4G2xE9nBlN/WLmz6F7+nELZYbqftqDT5yl+Jf4XQ6zaNa?=
 =?us-ascii?q?7SBERPNvnivSocVjo1WnkumJ1zpmXwBCqjdNhIKXo0piPb/V+YVHWXbBr1ox6j?=
 =?us-ascii?q?CPChAOqt5pB9f1pqFSzJ7Mmbj1JTNq/Nfd/M9aDM/Re+ydN390HRfkADecIAoD?=
 =?us-ascii?q?RDuiM2CX00BQnembsH6YtJ43rrDjnZMPTvlQU1ljRaBSMVhsANFXeMQ/ZTgji7?=
 =?us-ascii?q?POyZdQvXc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ChAAAnahVch0O0hNFjHgEGBwaBVAYLA?=
 =?us-ascii?q?YFaghEUE4N8g3uQFoINFIkSbo92AYdHIjcGDQEDAQEBAQEBAgETAQEBCgsJCCk?=
 =?us-ascii?q?jDII2JAGCYgECAgEBAiAEGQEbHQEDAQEJAQEFBQsPAiYCAgMfAREBBQEcHgODG?=
 =?us-ascii?q?oFoAQMNCAWZLTyLEHwWBQEXgncFhDEKGScNXYE3AgYSeYszghaEI4VOgjuCVwK?=
 =?us-ascii?q?LNoUVkE4HAoIoiCWHDRiRUiyZKTCBO4F4TSOBAYI7ghuBIgEMgj6KdB4zgQUBA?=
 =?us-ascii?q?Y0PAQE?=
X-IPAS-Result: =?us-ascii?q?A0ChAAAnahVch0O0hNFjHgEGBwaBVAYLAYFaghEUE4N8g3u?=
 =?us-ascii?q?QFoINFIkSbo92AYdHIjcGDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECA?=
 =?us-ascii?q?gEBAiAEGQEbHQEDAQEJAQEFBQsPAiYCAgMfAREBBQEcHgODGoFoAQMNCAWZLTy?=
 =?us-ascii?q?LEHwWBQEXgncFhDEKGScNXYE3AgYSeYszghaEI4VOgjuCVwKLNoUVkE4HAoIoi?=
 =?us-ascii?q?CWHDRiRUiyZKTCBO4F4TSOBAYI7ghuBIgEMgj6KdB4zgQUBAY0PAQE?=
X-IronPort-AV: E=Sophos;i="5.56,358,1539673200"; 
   d="scan'208";a="55333236"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 15 Dec 2018 12:56:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729508AbeLOU4W (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 15 Dec 2018 15:56:22 -0500
Received: from mail-io1-f52.google.com ([209.85.166.52]:43278 "EHLO
        mail-io1-f52.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727206AbeLOU4V (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 15 Dec 2018 15:56:21 -0500
Received: by mail-io1-f52.google.com with SMTP id l3so7161446ioc.10;
        Sat, 15 Dec 2018 12:56:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=RxUIYK5jq5UFHGA9uu0rZ7mZo30FH8h4myjB1K/gJPk=;
        b=EaE57+j5uiOByuwN6hqdu1RyKysSVPETULK74LbAvzHx9c3ARjSCow5D3a7EBWh+Ri
         zJJ4pQQ5az5tbEa70GAw8ejjYnYFu9cPkcCCAE86IiYPbqb7SEQRbPU+1/H3YX4+pDC4
         3TTzM+uRMvUv+rEOZG+zcykyjUMDpfufsvONSMY09uRjn1H+OG91HHzfkHawe3wWMrIe
         JMmkE5onTp/Ge+GVfU/A1yzzE3yz8VUAGMGMj3JZGoPMRRVRx/9qWgVqRvNDFycaDRxy
         a+nSG2FzC5qi/cNws9yu2dsPCw2d/cba/InvuOWzdDuVuK1LwphU8Xu64Ejqal8Bzkee
         vx2Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=RxUIYK5jq5UFHGA9uu0rZ7mZo30FH8h4myjB1K/gJPk=;
        b=aNZR8a1kfqD1yV/E9uZtiKxZ6tz9pbGKdgLV0SoZmngUCjrnFJ43BU5zjdjjMnSKxW
         rYoVDG+64fkQDgZbnX15zxgFIM058PCLp8Eety0/vMXztBUZRcZb6A/9NP+aH2/nzHv4
         g584GPh1shRNiNjZsLbRiuO0onjUe8hyelBMwg/ZYevwExOQ1D/gD8xeWaN1AbCJ+ak5
         OQce1kUnvRsbJrEIdGm+yB7o4nK8/76cSinA86Gb4jHLVF6D4d43D8DaUw74wXATWpDu
         N5xQ8hJnpKCkqayPIYUhX3yFHjyxw28L/PyoiCaric95lnhPs898VPxWbOrOhfRwAz99
         ZNeg==
X-Gm-Message-State: AA+aEWYGLTrdpeQh76y9NruOI8ijki8oUN5vmql1gmnCw/O4Qi0WmT4e
        7FdAgCf5ij2VuGkqqS7dKPNC39wHu61OTgBcSbs=
X-Google-Smtp-Source: AFSGD/XizO6+SosvWysC4HJY/uLigM+kNpJUHJrJa7Z+a4hSMTmMfRrE3hAkm9ZRP7SVtvFZ19fQtRcMN1GGkX0FkMQ=
X-Received: by 2002:a6b:4001:: with SMTP id k1mr7176331ioa.34.1544907380181;
 Sat, 15 Dec 2018 12:56:20 -0800 (PST)
MIME-Version: 1.0
References: <20181211202520.16799-1-deepa.kernel@gmail.com>
 <20181211202520.16799-7-deepa.kernel@gmail.com> <CAF=yD-LDWrjxK+XFv-KNAoyP7NCOZiL00n5PkzQ-5aEzq+eCLQ@mail.gmail.com>
 <CABeXuvpAZfd6gAdJbKxsOowXnDnwyQQRuYMJ-6LDo9BsRDDj-g@mail.gmail.com>
 <CAF=yD-L4xTU-KXsQ=uU36fEKv5St=69mmKqT8sD1mAmT_hfuVQ@mail.gmail.com>
 <CABeXuvqrZgEDF5RYQEPJ8RyXDg0uvXx_qMq=2ER8Bc9RXFPDGQ@mail.gmail.com> <CAF=yD-KFYdXRgL-HpAJLLHuywMcaBGfz7sDL35DBNs0hoq+zxQ@mail.gmail.com>
In-Reply-To: <CAF=yD-KFYdXRgL-HpAJLLHuywMcaBGfz7sDL35DBNs0hoq+zxQ@mail.gmail.com>
From: Deepa Dinamani <deepa.kernel@gmail.com>
Date: Sat, 15 Dec 2018 12:56:07 -0800
Message-ID: <CABeXuvr7je=LG9+xO286b7HH2WNLSfoOL4V6nN0AkjsGr_SoCQ@mail.gmail.com>
Subject: Re: [PATCH v2 6/8] socket: Add SO_TIMESTAMP[NS]_NEW
To: willemdebruijn.kernel@gmail.com
Cc: "David S. Miller" <davem@davemloft.net>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Linux Network Devel Mailing List <netdev@vger.kernel.org>,
        Arnd Bergmann <arnd@arndb.de>,
        y2038 Mailman List <y2038@lists.linaro.org>,
        "James E.J. Bottomley" <jejb@parisc-linux.org>,
        Ralf Baechle <ralf@linux-mips.org>, rth@twiddle.net,
        linux-alpha@vger.kernel.org,
        "open list:RALINK MIPS ARCHITECTURE" <linux-mips@linux-mips.org>,
        Parisc List <linux-parisc@vger.kernel.org>,
        linux-rdma@vger.kernel.org, sparclinux <sparclinux@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

> > Also for the other comment. The reason the conditionals were not
> > consistent is because they were not consistent to begin with.
>
> The only difference I see is an inversion of the test. Nesting order
> is the same:
>
>         int need_software_tstamp = sock_flag(sk, SOCK_RCVTSTAMP);
>         ...
>         if (need_software_tstamp) {
>                 if (!sock_flag(sk, SOCK_RCVTSTAMPNS)) {
>                 } else {
>                 }
>         }
>
> vs
>
>                 if (sock_flag(sk, SOCK_RCVTSTAMP)) {
>                         if (sock_flag(sk, SOCK_RCVTSTAMPNS)) {
>                         } else {
>                         }
>                 }
>
> I suggest just adding something like
>
>         if (need_software_tstamp) {
> +              if (sock_uses_new_tstamp(sk) {
> +                   __sock_recv_timestamp_new(msg, sk,
> ktime_to_timespec64(skb->tstamp));
> +              } else if (!sock_flag(sk, SOCK_RCVTSTAMPNS)) {
> -               if (!sock_flag(sk, SOCK_RCVTSTAMPNS)) {
>                 } else {
>                 }
>
> and
>
>                 if (sock_flag(sk, SOCK_RCVTSTAMP)) {
> +                      if (sock_uses_new_tstamp(sk) {
> +                           __sock_recv_timestamp_new(msg, sk, ts);
> +                      else if (sock_flag(sk, SOCK_RCVTSTAMPNS)) {
> -                       if (sock_flag(sk, SOCK_RCVTSTAMPNS)) {
>                         } else {
>                         }
>
> I think we can use the same helper for both the sock and tcp variant.
> The only intended difference between the two functions, as described
> in the tcp_recv_timestamp function comment, is the absence of an skb
> in the tcp case. That is immaterial at this level.

I will just not refactor things into a function: __sock_rescv_timestamp_new().
I will just add new conditionals for the new timestamps.
When you guys refactor the other timestamp stuff like you mentioned
below maybe you can move the new timestamps to a new funtcion as you
see fit.

The helper functions in skbuff.h might first need to be refactored
first. But I again leave this to you guys.

> Note also (2) tentative helper function sock_uses_new_tstamp(const
> struct sock *sk) instead of testing sock_flag(sk, SOCK_TSTAMP_NEW)
> directly. Since the .._NEW variants are equivalent to .._OLD on 64-bit,
> I wonder if we can just compile out the branch. Something like
>
>     static inline bool sock_uses_new_tstamp(const struct sock *sk) {
>             return (sizeof(time_t) != sizeof(__kernel_long_t)) &&
>                        sock_flag(sk, SOCK_TSTAMP_NEW);
>     }
>

You could just ifdef CONFIG_64BIT if you are worried about branching.
Note that SO_TIMESTAMP is by default SO_TIMESTAMP_OLD on 64 bit machines.
But, I will again leave the optimization to you. I will implement in a
straight forward way and you guys can deicde how you want to optimize
the fast path or what should it even be.

-Deepa
