Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:44:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6C5B35803DC;
	Wed, 12 Dec 2018 02:05:53 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 02:05:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AQZEb/hddMgBZeF01QH0YUQAWlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+ZxCN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60bEm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+Svw6nO0D7NaulZ2S3n54PVdR0ho+uDUq5zccfK0kkvChjFgUuK?=
 =?us-ascii?q?pYP5PjKYz+IAuHWY4ep4Te+jlXIrpgVrrjSyyMoglJPFip8Wx1zY7yl0wYQ4Kc?=
 =?us-ascii?q?WlREN/YdOoCoZcui+aOodsXM8uXX1ktDwkxrAGtpO2ejUBxo49yB7FcfOHdpCF?=
 =?us-ascii?q?4hL9W+aVJjd1nGxleL2hiBao60SgyfPzVtOy0FlUqipJiN7MtmoC1xDL68iHTO?=
 =?us-ascii?q?Vy/lu51DqRywze7vtILV06mKbFMZIt3709moYJvUnCHCL6gED2g7WXdkUg9Oio?=
 =?us-ascii?q?8ePnYrD+q5+YNo90jBz+M6s3lsy8H+s4KA4OUHaf+eil073i80v5T6tQjvAtjK?=
 =?us-ascii?q?nZv47VJd4Bqq66HQBVyIAj5Ai7Dzu819QYh3YHIEpfeB2bl4jpJ03OIPfgAPe7?=
 =?us-ascii?q?glSskylky+rJP738GZjNKnnDkLH8fbdy8UJcyQwzzcxB6JJQEL0OPPXzWkrpvt?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl1oMRQ2OPArODP6PVq1OI5v8vLPOKZI8aozv9L/kl5/jz?=
 =?us-ascii?q?jX42g1MdfK+p3YcJZ3C8BPhpP0KZYX/0iNcbDWgKphY+TPDtiFCaUz5TYGi9U7?=
 =?us-ascii?q?g/5jE8DoKmC4DDS5upgLyA2ie7A5JXanpHClCKDXfnaYGEV+0QZyKVJ89riiYE?=
 =?us-ascii?q?WqS5S489yRGusxf3xKB8LurU/S0Ytojv1MJv6O3Rjhwy8T10D8KA02CCVW10n2?=
 =?us-ascii?q?UIRyMo06B7u0By1lCD0a1gifxCCdNT/+9JUhs9NZPEzOx1EdbyVhjFfteIUlmm?=
 =?us-ascii?q?RNqmDCo1TtIwxd8Ofkl8F8+jjhDFwyqlHbsVm6aXC5wz96LWx2LxKNply3bayK?=
 =?us-ascii?q?khiEErTdZVOm24mKFz7QjTCJTPk0WCiamqc6MQ3CrO9GeGyWqDp0VYUA92UaXY?=
 =?us-ascii?q?UnETfErWrdLl5kzcS7+iE6goMgxEycSaMKtFdsXpjUlaRPfkINnRfni+m3muCh?=
 =?us-ascii?q?qSxrODdozqe34D0yXbE0UElwET/XCbNQkxHCuhomTeDCBwGlLreU/j7e5+qHaj?=
 =?us-ascii?q?RE8u0w6Kd1Fh16ay+hMNmfycSvYT3rUYuCchqzR4Bkq908jRC9qaowphfaNcYd?=
 =?us-ascii?q?wm7VdD1GLZsRF9P5O6I6BjgF4ebxp4v0f02xprDYVAlNAgrGk2wwpqNaKYzFRB?=
 =?us-ascii?q?eiuC0pD0JLLWJXf9/RC1Z6HNx1HRzcyZ+qEM6PQ/tVXupwWpFksk83V63NhZyX?=
 =?us-ascii?q?qc5pPWDAUMVZL9SFo49x9/p7vCeCky+5vU1WFwMamzqjLD288pCPE5xRq6ftZf?=
 =?us-ascii?q?MLmLFAn9E8ABA8iuKeoqm0Wmbx4ePeBS8rI0MN2id/ecxKGrO+Ngliq8jWtb+I?=
 =?us-ascii?q?B9zl6M9y1kR+7S3pYK3+uX3hGaWDf7lluhtN74mZpFZT0LAmWw0yzkC5NPaa1o?=
 =?us-ascii?q?eoYLD3yjI8m2xtV4mp7sVGRU9F+lB1MaxsCpfQCeYED63Q1VzU4Xu2ComTOkzz?=
 =?us-ascii?q?xolDEktqqe3C3Uz+XibhYHIXNLRG95gFfoIIi0ic0aXUeyYwgokhul+Vj1x6xB?=
 =?us-ascii?q?qKtjKGnTRF9CfzLqIGF6Tquwqr2CbtZN6JwyqyVXU+e8YVeARr7muRQa0CDjH2?=
 =?us-ascii?q?pYxD8lcTGnoZH5nx18iGKAI3d/tnvZecdsxRjB4NzQX+Je3j0DRCNgkznYGkC8?=
 =?us-ascii?q?P8W1/dWTj5rCsvqxV2W7Wp1RcCnry5iNtC+65W1sHB2+kOq/mtzhEQgmzyD708?=
 =?us-ascii?q?NmWjnPrBb5eoPrzbi1Mfp7fkl0A1/x88l6FZt/kocqhJEQxGIVhpOa/XcclWfz?=
 =?us-ascii?q?MNNb2b/xbXYXRD4LxcLV7xbh2EF5Mn2JwIf5XG2HwsR9f9m6fn8W2iUl4sBPCa?=
 =?us-ascii?q?eU76ZLkTF7o1WmtgLRfeZyni0GxvQw8n4ajPoEuA4sziWbH7ATElNUPS3qlxSU?=
 =?us-ascii?q?8d++qL9ba3qocbi1zEB+h8yuDKmeogFAX3b0YosiHSh17sllMVPDynvz6pz/eN?=
 =?us-ascii?q?nLbNIerRmUkxbGj+hIJ5M9jPsKhSx7OW3juX0p0fI0jRtr3ZuipoiIN31t/L6l?=
 =?us-ascii?q?Ah5fLjD6fNkc+jbpjaZDhMqW252vE45lGjUKWpvoUP2pHCgTtfThKwaBDjk8pm?=
 =?us-ascii?q?2HFrrYGA+V8F1moG7XE5C3K3GXI2EUzdd4SxmYOkNfmxoYXCkgkp46CwCqx9Hh?=
 =?us-ascii?q?cEFj6TAK/VP4rhpMyuR1NxjwSGvfpQGoaisqR5ibNhZZ8gZC50LNO8yE8u1zBz?=
 =?us-ascii?q?1Y/oGmrAGVKm2bYBlIDXgUWkOeAVDvJKKu5d7G8+iXHee+K/rOYbOTqe1RTfuI?=
 =?us-ascii?q?xJSv0pd48DaILMmAIn5iD/gj0EpZQX95A9jZmykISyEPlyLCcc+bpBS/+i12tM?=
 =?us-ascii?q?y/8+7rWAXg5YSREbtSLM5v9guygaeCMe6QmSl4JSxZ1pMK2X/H1rwf0EQOhCFp?=
 =?us-ascii?q?cjmnCa4AujLVTKLMhq9XCAYWZDluNMRT9aIzwAlMNdTfitP0zbN4iv81C1FYVV?=
 =?us-ascii?q?3ugM2pZMoKI32jO1PDHkqEKLOGJTjTycHtfay8UaFQjPlTtxCopTabEkrjMi6f?=
 =?us-ascii?q?mDXzSx+vMf9DjCeAMRxauYG9dAttCGf5QNLnbB27LMF4jTkszbIogXPKMHYWMS?=
 =?us-ascii?q?JgfENVsr2Q8SRYj+1/GmNb6HplKOiEmyCB4OjZKpYZq/1rAitvmuJe4XQ6zaZV?=
 =?us-ascii?q?7S5eSPx0nivSssBho1W8nuaTzTpnVUkGljEezqGKp0RmPe3wsNF7WWvY8RcK8y?=
 =?us-ascii?q?/YXxcLvdphDvX0u71Mx93IiuT1ITJPpYH658wZUurdLoqkOWAoeU7rETXXJBAY?=
 =?us-ascii?q?VjPtPnOJ1B8Vq+2b6nDA9stykZPrgpdbD+YDDFE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACI3BBch0O0hNFbCBoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgVWCFieMFIwSUAEBBoE1FIkNjjKBcywTAYc7IjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQIkEz8FAQkBAQoVA?=
 =?us-ascii?q?wkTEgMMBRgxEwWDHIF1BQgEAaZYM4hXgVmMPBd4gQeBEYMShFsBg1qCJgKLLpV?=
 =?us-ascii?q?ZCZFKCxiJdIdQmn+CDk04gyeQXD8ygQUBAYpbgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAACI3BBch0O0hNFbCBoBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgVWCFieMFIwSUAEBBoE1FIkNjjKBcywTAYc7IjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQIkEz8FAQkBAQoVAwkTEgMMBRgxEwW?=
 =?us-ascii?q?DHIF1BQgEAaZYM4hXgVmMPBd4gQeBEYMShFsBg1qCJgKLLpVZCZFKCxiJdIdQm?=
 =?us-ascii?q?n+CDk04gyeQXD8ygQUBAYpbgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="141795037"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 02:05:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727040AbeLLKFt (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 05:05:49 -0500
Received: from mx2.suse.de ([195.135.220.15]:36430 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726727AbeLLKFq (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 05:05:46 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 8D557AE88;
        Wed, 12 Dec 2018 10:05:43 +0000 (UTC)
Received: by quack2.suse.cz (Postfix, from userid 1000)
        id 9E9B61E11DB; Wed, 12 Dec 2018 11:05:42 +0100 (CET)
Date: Wed, 12 Dec 2018 11:05:42 +0100
From: Jan Kara <jack@suse.cz>
To: "Kirill A. Shutemov" <kirill@shutemov.name>
Cc: Michal Hocko <mhocko@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Liu Bo <bo.liu@linux.alibaba.com>, Jan Kara <jack@suse.cz>,
        Dave Chinner <david@fromorbit.com>,
        Theodore Ts'o <tytso@mit.edu>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Vladimir Davydov <vdavydov.dev@gmail.com>, linux-mm@kvack.org,
        linux-fsdevel@vger.kernel.org, LKML <linux-kernel@vger.kernel.org>,
        Michal Hocko <mhocko@suse.com>, Hugh Dickins <hughd@google.com>
Subject: Re: [PATCH] mm, memcg: fix reclaim deadlock with writeback
Message-ID: <20181212100542.GA10902@quack2.suse.cz>
References: <20181211132645.31053-1-mhocko@kernel.org>
 <20181212094249.cw4xjrdchqsp2tkt@kshutemo-mobl1>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181212094249.cw4xjrdchqsp2tkt@kshutemo-mobl1>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed 12-12-18 12:42:49, Kirill A. Shutemov wrote:
> On Tue, Dec 11, 2018 at 02:26:45PM +0100, Michal Hocko wrote:
> > From: Michal Hocko <mhocko@suse.com>
> > 
> > Liu Bo has experienced a deadlock between memcg (legacy) reclaim and the
> > ext4 writeback
> > task1:
> > [<ffffffff811aaa52>] wait_on_page_bit+0x82/0xa0
> > [<ffffffff811c5777>] shrink_page_list+0x907/0x960
> > [<ffffffff811c6027>] shrink_inactive_list+0x2c7/0x680
> > [<ffffffff811c6ba4>] shrink_node_memcg+0x404/0x830
> > [<ffffffff811c70a8>] shrink_node+0xd8/0x300
> > [<ffffffff811c73dd>] do_try_to_free_pages+0x10d/0x330
> > [<ffffffff811c7865>] try_to_free_mem_cgroup_pages+0xd5/0x1b0
> > [<ffffffff8122df2d>] try_charge+0x14d/0x720
> > [<ffffffff812320cc>] memcg_kmem_charge_memcg+0x3c/0xa0
> > [<ffffffff812321ae>] memcg_kmem_charge+0x7e/0xd0
> > [<ffffffff811b68a8>] __alloc_pages_nodemask+0x178/0x260
> > [<ffffffff8120bff5>] alloc_pages_current+0x95/0x140
> > [<ffffffff81074247>] pte_alloc_one+0x17/0x40
> > [<ffffffff811e34de>] __pte_alloc+0x1e/0x110
> > [<ffffffffa06739de>] alloc_set_pte+0x5fe/0xc20
> > [<ffffffff811e5d93>] do_fault+0x103/0x970
> > [<ffffffff811e6e5e>] handle_mm_fault+0x61e/0xd10
> > [<ffffffff8106ea02>] __do_page_fault+0x252/0x4d0
> > [<ffffffff8106ecb0>] do_page_fault+0x30/0x80
> > [<ffffffff8171bce8>] page_fault+0x28/0x30
> > [<ffffffffffffffff>] 0xffffffffffffffff
> > 
> > task2:
> > [<ffffffff811aadc6>] __lock_page+0x86/0xa0
> > [<ffffffffa02f1e47>] mpage_prepare_extent_to_map+0x2e7/0x310 [ext4]
> > [<ffffffffa08a2689>] ext4_writepages+0x479/0xd60
> > [<ffffffff811bbede>] do_writepages+0x1e/0x30
> > [<ffffffff812725e5>] __writeback_single_inode+0x45/0x320
> > [<ffffffff81272de2>] writeback_sb_inodes+0x272/0x600
> > [<ffffffff81273202>] __writeback_inodes_wb+0x92/0xc0
> > [<ffffffff81273568>] wb_writeback+0x268/0x300
> > [<ffffffff81273d24>] wb_workfn+0xb4/0x390
> > [<ffffffff810a2f19>] process_one_work+0x189/0x420
> > [<ffffffff810a31fe>] worker_thread+0x4e/0x4b0
> > [<ffffffff810a9786>] kthread+0xe6/0x100
> > [<ffffffff8171a9a1>] ret_from_fork+0x41/0x50
> > [<ffffffffffffffff>] 0xffffffffffffffff
> > 
> > He adds
> > : task1 is waiting for the PageWriteback bit of the page that task2 has
> > : collected in mpd->io_submit->io_bio, and tasks2 is waiting for the LOCKED
> > : bit the page which tasks1 has locked.
> > 
> > More precisely task1 is handling a page fault and it has a page locked
> > while it charges a new page table to a memcg. That in turn hits a memory
> > limit reclaim and the memcg reclaim for legacy controller is waiting on
> > the writeback but that is never going to finish because the writeback
> > itself is waiting for the page locked in the #PF path. So this is
> > essentially ABBA deadlock.
> 
> Side node:
> 
> Do we have PG_writeback vs. PG_locked ordering documentated somewhere?
> 
> IIUC, the trace from task2 suggests that we must not wait for writeback
> on the locked page.

Well, waiting on writeback of page A when A is locked has always been fine.
After all that's the only easy way to make sure you really have a page for
which no IO is running as page lock protects you from new writeback attempt
starting.

Waiting on writeback of page B while having page A locked *is* problematic
and prone to deadlocks due to code paths like in task2.

> But that not what I see for many wait_on_page_writeback() users: it usally
> called with the page locked. I see it for truncate, shmem, swapfile,
> splice...
> 
> Maybe the problem is within task2 codepath after all?

So ->writepages() methods in filesystems have the property that to complete
writeback on page with index X, they may need page lock from page X+1. I
agree that this is a bit hairy but from fs point of view it makes a lot of
sense and AFAIK nothing besides that memcg IO throttling can create
deadlocks with such a locking scheme.

								Honza
-- 
Jan Kara <jack@suse.com>
SUSE Labs, CR
