Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 19:54:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9E35258079D;
	Tue, 11 Dec 2018 03:56:10 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 11 Dec 2018 03:56:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aj3dojREST4g2cYaITtcYrZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8u+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjul8qdrThvoiC?=
 =?us-ascii?q?YcNz4l7m7Yl9F7gKZUrR69ohByxZPfboOIO/pkZq7Tfc4US2RCUMhWVSNBDIyz?=
 =?us-ascii?q?YYQRAeoaJeZVrZLwq0cNoBakGQWhHv/jxiNOi3Tr3aM6yeMhEQTe0QE8G9IOsW?=
 =?us-ascii?q?jbo8voP6kST++11rPIwi/CbvJX2Df29Y/FfQolofGNQb1/b9DdyUcxGAPflFWf?=
 =?us-ascii?q?s43kPjKU1ukWvGib6vBvVeOri2I9tw5xpT2vy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wpio217kLtYSmcCQUxpkr3QDTZv6df4SV?=
 =?us-ascii?q?5h/uW+CcKipiin1/YrKwnROy/FCgyuLiUsm0105HrjRKktbSrHABzR/T5dadSv?=
 =?us-ascii?q?t74Eih3SyD1wfJ6uFLOUw0lKzbJIA9wrMoiJYfrUDOEjXrlEj4kqOabFgo9+u0?=
 =?us-ascii?q?5+j9Y7jrpIeQN4puhQH/NqQulNa/AeM9MgUWW2ib+OK81KDs/EHgQ7VFkOc2kq?=
 =?us-ascii?q?/Hv5DePMgboaC4AwlL3YY58Bu/ETim38oCnXUdL1JKZgiHj473NFHKOvz4Cu2/?=
 =?us-ascii?q?g1u0nDdx2//GJqHhAonKLnXblLfhfLV95FBGxAs80NBS/JZUCrAHIPLuVU79rt?=
 =?us-ascii?q?3YDhklMwOqx+brEsly1oQbWWiXGK+WLLvSsUOU5uIoO+SMZJUauDfhK/c/4P7i?=
 =?us-ascii?q?l385mUIHcqmv0psac3S4HvVgI0WEbnvgmNYBEWEWvgUgSOzmkkGNUTlWZ3yqRa?=
 =?us-ascii?q?Iz+ik7CJ66DYfEXo2tgruB0zmhEp1VYWBGDFaMEXDzeoWAWvcMbj+SI8B7njwF?=
 =?us-ascii?q?U7ihV5Eu1RW0uADmzLpnK/Le+jcEupL7yNh1++rTmAko+jxvD8Sd1GKNQ3tunm?=
 =?us-ascii?q?wSRT87x6R/oU17ylee3ql0mf1YFdpP5/xXVgc2L4LTz+t/C9rqQALOYs+JSEq6?=
 =?us-ascii?q?QtWhGTwxTcg+w9kUb0Z5GtWtlBbD3yWxDr8RlryLAoE0863G03jwIcZ912jJ1K?=
 =?us-ascii?q?07g1Y6RctPMHWshrRj+AjLG47Jj0KZmr63eqsGwi7C6n2PzWqUs0FeSw5/T6PF?=
 =?us-ascii?q?UXcbZkvVqNT54ljPT7uvCbQhLwtAxtSOKqpMat31k1pGQO3vN8jZY2K0g22wHw?=
 =?us-ascii?q?qHxquQbIr2fGUQxDjSB1Iakw8N53qGNRIxBiG6o23ACjxjDlbvY0Lq8eljp3K3?=
 =?us-ascii?q?VE40zweWb0J/07q54AIahfuZS/kLxLILpD8hqyloHFa6x9/WF9uApw9mfKVAYd?=
 =?us-ascii?q?M84E1L1X7Duwx6JJygK6FihlgRcwlsu0Pu1hN3CphPkMQwrXMqyhZyJryc0F9b?=
 =?us-ascii?q?azyY2pXwMKXNKmbu5BCvd7LW2lbG3dmM/qcA9vs5pEvjvQ2zDUUi7mho3MNT03?=
 =?us-ascii?q?uf4ZXKEhEfUZbwUkYx6hh7qKvWYig754PIy3JsNbO4vSPF29IsHOEl0Aqvf89D?=
 =?us-ascii?q?MKOYEw//C80bB9W0JOM2gVSobxIEM/pU9K47JM6mc/qG2Ki2POdvhj6mjGJH4J?=
 =?us-ascii?q?xj3UKI7SZzVunI35MdyfGCwgSHTyv8jEumss3vg4BEZC0dEXClySf5A45dfKty?=
 =?us-ascii?q?cpgRCWevOsG42s9xh5rwVHFG7l6jAFUG1dSteRqTaVz9wAJR2V4WoXyhhSu30T?=
 =?us-ascii?q?h0nys1oaqY2SzE2/7iewYfOm5XWGliik/hIIi1j9wAXEmkdRMplAaj5Uvhw6hb?=
 =?us-ascii?q?paJ/L3TcQEtSfij2KX1iXbW0traYf8FP75Youz1NUOugeVCaVqL9oxwC3iPhBW?=
 =?us-ascii?q?Re3jM7dzKtupnjhBx1kmGdLHVyrHrfZ85wwwzS5NjdRf5XwzoHSzN0iTjRBlig?=
 =?us-ascii?q?Idap+c+YmIvEsuC7T2ihTIFccTH3zYOcsyu2/W1rDge4n/ypmN3nEA463DT/19?=
 =?us-ascii?q?lrUyXIsRn9bpPq16S8LeJoYE1oCEXg5Mp9H4F0ipEwi40I2XgGmpWV+mIKkWTp?=
 =?us-ascii?q?PtVaw67+bGcNSiQNw97a+wXl3ExjLnSUx4P2THmdw81hZ8WkbWMSwC4y88dKCK?=
 =?us-ascii?q?KM5rxegSR1uka4rR7WYfVlmzcdyPgu52QAj+AHpgUt1TmdDa4IHUZDIyPsjRuI?=
 =?us-ascii?q?4su6rKVWYmavbLex2FB/ndCnELGNvAVcVGzldZclGC969t9/P07U0H3v9oHkf8?=
 =?us-ascii?q?Hdbc4Uth2RiRvBjvJaKJQslvoRnipnOHnwvXkky+49kBxv0ou2vImBK2Vx4q25?=
 =?us-ascii?q?BgRUOSHyZ8MW4jvtl7pRnt6K34CzGZVsAi4EU4HvTfKsDTIer/DnNxuVHT04q3?=
 =?us-ascii?q?ebH6ffHACF5EdnqXLPD46kN3WNKHYFytViQQGXJFZDjwAMQDU6gpk5GxioxMP7?=
 =?us-ascii?q?dUd2+CsR6kTkqhdWyeJoKhr/UnrZpAiycTc5U5yfLBtQ7gFf6EbZK82e7uRvHy?=
 =?us-ascii?q?5G+p2tthCCKmueZw5QF2EGRlSEB0z/Prmp/dTB8++YBvenL/vTe7qOr/ZSV+yP?=
 =?us-ascii?q?xZKp3Ytr5DKMNsSJPnl/APw3wEtDXXZlG8vHnzUDUTAYlyXIb8SDvhez5jV3rt?=
 =?us-ascii?q?yj8PTsQA/v5ZWAC7pRMdVs+hC6m6SDN/SXhCZ2NzlYzI4MxWTTxbgb3V4SjTxu?=
 =?us-ascii?q?dja3HbQBsy7NULzfmqtNAxEHbCNzMdNC77gg0QlVJc7bltT126Zigf4oEFhFT0?=
 =?us-ascii?q?Lum8GzacwOImGwL1fHBEeNNLSbKjzH2cD3YaWgSbJOiOVYrQG/uTGeE0X7JDSM?=
 =?us-ascii?q?iyHpVwyzMeFLlCybIB1euISnfhlxE2TsUNLmZQO9MNJsiT02wLs0hm7FNGIGMD?=
 =?us-ascii?q?h8dV9NoaOU7S9Cnvp/HGlB5GJ/LeaYgyaZ8/XYKpEOvPprGCt0keda4HU8y7RN?=
 =?us-ascii?q?7SBEROZ6mC3drtN1p1Gmk++PyidoURZUqzZLgp6LsltmOanD6pZAXnPEr1ox6j?=
 =?us-ascii?q?CNDRALvMdoBpj1tqtR0tnCkr7oemQKs9TTtfcbQsjZIc6KKjImN1LoHibJEEpW?=
 =?us-ascii?q?YySsMDT2g01Wnbm8+2ePp4ooq9C4kZ4PQbIdWlEvDPoIGEVNE9kLIZMxVTQhx+?=
 =?us-ascii?q?3IxPUU7Gaz+UGCDP5RuYrKA67KDA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D7AQBMpA9ch0O0hNFkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YJqgQIniBiEW4p8NYIhmTESAQEYAxABgUuGLiI4EgEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2DIJ7AwMBAi8BDQEbHQEDAgkBAQUQOwMeAhEBBQEcGQWDHAGBaAEDF?=
 =?us-ascii?q?AEFmVY8jB8FAReCdwWEPgoZJw1dgTcCBhKHaoMjgRyBVz+GeoVCgkMCiTcqhlp?=
 =?us-ascii?q?Sj0AuBwKCIgSEY4cZgyQLGIlmh1qPJIloAgQCBAUCBQ8hgTyBd00jgQGCOwmCE?=
 =?us-ascii?q?oNtimIxMoECAwEBIROKLQEB?=
X-IPAS-Result: =?us-ascii?q?A0D7AQBMpA9ch0O0hNFkHQEBBQEHBQGBZYJqgQIniBiEW4p?=
 =?us-ascii?q?8NYIhmTESAQEYAxABgUuGLiI4EgEDAQEBAQEBAgETAQEBCA0JCCkjDII2DIJ7A?=
 =?us-ascii?q?wMBAi8BDQEbHQEDAgkBAQUQOwMeAhEBBQEcGQWDHAGBaAEDFAEFmVY8jB8FARe?=
 =?us-ascii?q?CdwWEPgoZJw1dgTcCBhKHaoMjgRyBVz+GeoVCgkMCiTcqhlpSj0AuBwKCIgSEY?=
 =?us-ascii?q?4cZgyQLGIlmh1qPJIloAgQCBAUCBQ8hgTyBd00jgQGCOwmCEoNtimIxMoECAwE?=
 =?us-ascii?q?BIROKLQEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="56968806"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 03:56:08 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726564AbeLKL4F (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 06:56:05 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:34429 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726130AbeLKL4D (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 06:56:03 -0500
Received: by mail-pg1-f194.google.com with SMTP id 17so6544453pgg.1;
        Tue, 11 Dec 2018 03:56:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=2YPMnrZvb/ynXn//cGGy9dniHzNzN3agBhFSIWj+m/Y=;
        b=scub+JjWu816DwOm7gKbzY6eTQJni0wcPZNApNxW1vYBfo9nysd+3hPxTtpsQJAsiS
         iI/N4UxfstUj0Ts9CgKf5xx0diZ8zCAh7/u+XqC7Y/6ic9A9dHLl4c581SKuweGMx4hy
         a1nfSmlszeoI/c4kRKs9ZQLeZZRG4DbCQ2T8n2UwzHO3JO5i7S5pom5EomgKn4riFRi3
         17KuQyce3w0vJFx++xv867dHGw+92Tzoc06XrITUWiRaDyZoMd1yX1bx+XfgVZ561aaF
         M/SjmWxQdN60JfTGYguZTq2lZfFO3V9lt4TJzoXDPYCyxYgYZ0YV8X+M2E60CTy1Z0KJ
         n3IQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=2YPMnrZvb/ynXn//cGGy9dniHzNzN3agBhFSIWj+m/Y=;
        b=SXQHbQy5mn64goDpR9jC55tT0NA/PrhWZs1uE51FmzRfNWG4RuunQOMjEt/Xu9UaFu
         qUCJVlf/SPfPQeu1LF0J3lvaoTLcmUWCESAvE3gygilJt4Yg2btyasyKpYiNvN9oL8/L
         /z+7Ax3SyCgc/MnNISluKSM5BDtnfcfsn/RmQdJIZzQYoMgj8kf1zkMIqRBOe2XRdG7b
         LFvcQEDbZ3U3ovdfCxEFMaFIxYF6eq8Wr93vE9LhYa7JYVe18uLGaw6x1FwMo3SEucjv
         In8bp0LfNXtf8HjQGoZcNhpSVHHZeylZfTedsvCO5Rtfw0N+ZurdhGHDs/K9rVq4kW3u
         MOMQ==
X-Gm-Message-State: AA+aEWZLa825zuc+r4TclqiNtlQ/OlHG+HIDg9g63mKp8628zBq3OZJl
        32NR7O/w5cifeaDVtBggqkOsFoyE
X-Google-Smtp-Source: AFSGD/XdTftpYxdBi8BETy9Pl9MYcZuCsVuTMqN8o/TMJmfDcpvF8BCaqS2jO8Ekgu9jkTk/oau/bQ==
X-Received: by 2002:a63:a84a:: with SMTP id i10mr14543305pgp.263.1544529362854;
        Tue, 11 Dec 2018 03:56:02 -0800 (PST)
Received: from localhost (219x123x27x194.ap219.ftth.ucom.ne.jp. [219.123.27.194])
        by smtp.gmail.com with ESMTPSA id u8sm19581710pfl.16.2018.12.11.03.56.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 11 Dec 2018 03:56:02 -0800 (PST)
From: Alice Ferrazzi <alice.ferrazzi@gmail.com>
Cc: ast@kernel.org, daniel@iogearbox.net, shuah@kernel.org,
        netdev@vger.kernel.org, linux-kernel@vger.kernel.org,
        Alice Ferrazzi <alice.ferrazzi@gmail.com>
Subject: [PATCH 7/7] selftest/bpf: fix E501 line too long
Date: Tue, 11 Dec 2018 20:56:07 +0900
Message-Id: <20181211115607.13774-8-alice.ferrazzi@gmail.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181211115607.13774-1-alice.ferrazzi@gmail.com>
References: <20181211115607.13774-1-alice.ferrazzi@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
To: unlisted-recipients:; (no To-header on input)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

fix PEP8 style issues

Signed-off-by: Alice Ferrazzi <alice.ferrazzi@gmail.com>
---
 tools/testing/selftests/bpf/test_offload.py | 35 +++++++++++++--------
 1 file changed, 22 insertions(+), 13 deletions(-)

diff --git a/tools/testing/selftests/bpf/test_offload.py b/tools/testing/selftests/bpf/test_offload.py
index b06cc0eea0eb..3f78da0f87d5 100755
--- a/tools/testing/selftests/bpf/test_offload.py
+++ b/tools/testing/selftests/bpf/test_offload.py
@@ -208,7 +208,8 @@ def bpftool_prog_list_wait(expected=0, n_retry=20):
         if nprogs == expected:
             return
         time.sleep(0.05)
-    raise Exception("Time out waiting for program counts to stabilize want %d, have %d" % (expected, nprogs))
+    raise Exception("Time out waiting for program counts \
+to stabilize want %d, have %d" % (expected, nprogs))
 
 
 def bpftool_map_list_wait(expected=0, n_retry=20):
@@ -217,7 +218,8 @@ def bpftool_map_list_wait(expected=0, n_retry=20):
         if nmaps == expected:
             return
         time.sleep(0.05)
-    raise Exception("Time out waiting for map counts to stabilize want %d, have %d" % (expected, nmaps))
+    raise Exception("Time out waiting for map counts to \
+stabilize want %d, have %d" % (expected, nmaps))
 
 
 def bpftool_prog_load(sample, file_name, maps=[], prog_type="xdp", dev=None,
@@ -413,7 +415,8 @@ class NetdevSim:
             if nbound == bound and nprogs == total:
                 return
             time.sleep(0.05)
-        raise Exception("Time out waiting for program counts to stabilize want %d/%d, have %d bound, %d loaded" % (
+        raise Exception("Time out waiting for program counts to \
+stabilize want %d/%d, have %d bound, %d loaded" % (
             bound, total, nbound, nprogs))
 
     def set_ns(self, ns):
@@ -533,7 +536,7 @@ class NetdevSim:
         return ethtool(self, "-K", args, fail=fail)
 
 
-################################################################################
+###############################################################################
 def clean_up():
     global files, netns, devs
 
@@ -617,7 +620,8 @@ def check_extack_nsim(output, reference, args):
 
 
 def check_no_extack(res, needle):
-    fail((res[1] + res[2]).count(needle) or (res[1] + res[2]).count("Warning:"),
+    fail((res[1] + res[2]).count(needle) or (res[1] +
+         res[2]).count("Warning:"),
          "Found '%s' in command output, leaky extack?" % (needle))
 
 
@@ -778,8 +782,9 @@ try:
     start_test("Test TC replace bad flags...")
     for i in range(3):
         for j in range(3):
-            ret, _ = sim.cls_bpf_add_filter(obj, op="replace", prio=1, handle=1,
-                                            skip_sw=(j == 1), skip_hw=(j == 2),
+            ret, _ = sim.cls_bpf_add_filter(obj, op="replace", prio=1,
+                                            handle=1, skip_sw=(j == 1),
+                                            skip_hw=(j == 2),
                                             fail=False)
             fail(bool(ret) != bool(j),
                  "Software TC incorrect load in replace test, iteration %d" %
@@ -824,9 +829,11 @@ try:
     fail(dprog["state"] != "xlated", "Offloaded program state not translated")
     fail(dprog["loaded"] != "Y", "Offloaded program is not loaded")
 
-    start_test("Test disabling TC offloads is rejected while filters installed...")
+    start_test("Test disabling TC offloads is rejected while \
+filters installed...")
     ret, _ = sim.set_ethtool_tc_offloads(False, fail=False)
-    fail(ret == 0, "Driver should refuse to disable TC offloads with filters installed...")
+    fail(ret == 0, "Driver should refuse to disable TC offloads with filters \
+installed...")
 
     start_test("Test qdisc removal frees things...")
     sim.tc_flush_filters()
@@ -922,7 +929,8 @@ try:
     offload = bpf_pinned("/sys/fs/bpf/offload")
     ret, _, err = sim.set_xdp(offload, "drv", fail=False, include_stderr=True)
     fail(ret == 0, "attached offloaded XDP program to drv")
-    check_extack(err, "using device-bound program without HW_MODE flag is not supported.", args)
+    check_extack(err, "using device-bound program without HW_MODE flag is not \
+supported.", args)
     rm("/sys/fs/bpf/offload")
     sim.wait_for_flush()
 
@@ -1072,8 +1080,8 @@ try:
     delay_msec = 500
     sim.dfs["bpf_bind_verifier_delay"] = delay_msec
     start = time.time()
-    cmd_line = "tc filter add dev %s ingress bpf %s da skip_sw" % \
-               (sim['ifname'], obj)
+    cmd_line = "tc filter add dev %s ingress bpf %s da skip_sw" %
+    (sim['ifname'], obj)
     tc_proc = cmd(cmd_line, background=True, fail=False)
     # Wait for the verifier to start
     while sim.dfs_num_bound_progs() <= 2:
@@ -1244,7 +1252,8 @@ try:
     ret, _ = simA.set_xdp(progB, "offload", force=True, JSON=False, fail=False)
     fail(ret == 0, "cross-ASIC program allowed")
     for d in simB:
-        ret, _ = d.set_xdp(progA, "offload", force=True, JSON=False, fail=False)
+        ret, _ = d.set_xdp(progA, "offload", force=True, JSON=False,
+                           fail=False)
         fail(ret == 0, "cross-ASIC program allowed")
 
     start_test("Test multi-dev ASIC cross-dev install...")
-- 
2.19.2

