Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:11:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DBCC55807A0;
	Fri, 14 Dec 2018 19:17:57 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 19:17:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AkoRyBhaf+QC5A/3psUxlvbT/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci7Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhNF+gqxYpxyupRJ/zIHIb4GUL/p+ZqHQcMgGRWZdRMtdSzZMDp+g?=
 =?us-ascii?q?Y4YJEuEPPfxYr474p1YWtxWxGw+sBOzywTFOh3/9wKo30+AgEQHewgMgGd0OvX?=
 =?us-ascii?q?rKoNnoL6oSUf21w7PGzDrdbvNawyvy6I/Nch04p/yHQLF+cdLJxEUxCw/Iik+c?=
 =?us-ascii?q?pZHrMj+LzOgBrmuW4/Z6We+uiWMrsxx9riS1ysoul4XFnJwZxkzY+Sljzos5OM?=
 =?us-ascii?q?W0RUF7bNK+DpdduCWXO5FoTs8/XW1kojs2x7kbtZO9YSME0o4oxwTFZPyCa4WI?=
 =?us-ascii?q?4gzsVOKWITpgmnJld6ywhwyo/Uij1OL8TM+030hOriZfldnMrH8N2wTS6siBVP?=
 =?us-ascii?q?R94l+s1SiT2w3X8O1IPE45mbTBJ5I8wbM8ioAfvEXBEyPunUX5lq6WdkEq+uiy?=
 =?us-ascii?q?7OTnZ63rppudN49ylwH/Pb0ims+hDuQiNAgBQWyb9f271Lzt+032Xq9Kg+Yokq?=
 =?us-ascii?q?nWrp/aP94Xpq2nDA9P1IYs9RK/Ay2h0NQCknkLNEhFdw6fj4j1J1HOJ+j1DfO+?=
 =?us-ascii?q?g1Svjjhn3f/HPqD6D5XJL3jDlqrhfLln505dzgoz0c5Q55ZOBr4dJ/LzX1f7tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc191owEWGKPHrWWMKTIvV+I++IgOe+MZIAOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWAUT5UeXm+Ra?=
 =?us-ascii?q?E85jY9CIKgCofOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIsV5iDwL?=
 =?us-ascii?q?SaChS5M91RGprAL10aFnLurT+i0br57jzsJ65+/ImBE29Dx0Cdmd0m6XQ2F1mG?=
 =?us-ascii?q?MIWyE53KRlrUNhzVeD1LByg+ZEGtxL+/NJTgA6OIbfz+NgDdD+QAbBftaTR1ag?=
 =?us-ascii?q?TdWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QpX9FANXO4iaJl9wjcHYjJk16HmKascqgc2C3N9GKHzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYJhfydTvMT2a4EuCchqjluAFaxxdXWC8CEpwpgeqVcbs?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?bymX3ZTuNbzYNGbz/AqjZLXL2l7DytmW/KQP6PMmq1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svz7CxtIlHvcqxgyhftdf?=
 =?us-ascii?q?KqyEEgDyHtYeB8ivLuwqhleoYggFPOBU6K47Iceme+Ga166sOeZqhCimgnhf4I?=
 =?us-ascii?q?BhzkKM8DJxSvTJ35kZ2f6YxBaIVzDmgFenrM/3g4FEaSgOEWWlzSjrGZBeZrd1?=
 =?us-ascii?q?fYYNEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?Bzkzwxrquf3TbCwuT4eBocJ25LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe8xP54kysSVUU+S8ZkqWSqXnrBsZ0CPjHm?=
 =?us-ascii?q?1eyy49dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpbDqO++UHitVp9ScSnt1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk6Mp1AIB+npEwhJENw3cagJqV8GEDkWfy?=
 =?us-ascii?q?N9VbxK3/YGAMRT4N397a/gzl1Fd/IXKOwoLzTm+dzdd5Z9mmfmMW3Tow78VLCK?=
 =?us-ascii?q?eX9rNIhyV0rUSjrQLNf/d9hCwSxuU06H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhZpciGipw4t9+MV3W1n3z95rkeM?=
 =?us-ascii?q?LRbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOzLufcwT/TXtjbtEksaSwoCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQZz89tRByDK0xEmgwUQC82np0kFgCp2czh?=
 =?us-ascii?q?dl125isK6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSNK2ycegRIFHwJVVaCB1z5Jbmu4t/A8+eDC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXly3Tbs6bpxS8+ixtos?=
 =?us-ascii?q?C86vTrXw3v6pWVC7tPKtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMUcT5zO9BS760i3ghBI8rbitLu2758j/41DUpFVF?=
 =?us-ascii?q?P7lsGoY8wKP3+yNFfdCEmXM7SGICXBw9vrbqOkVb1QkOJUugWsuTaaFk/vJCiM?=
 =?us-ascii?q?myP1WBCvL+5MijqWPBhfuIG7bxZsBnLvTNPgah2nLtB3iSc6zqEzhnPPLWQcKy?=
 =?us-ascii?q?Rzc1tRrr2M6iNVmvV+FHZH7npgLOmEnT6W7ujYKpkMt/trDT95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiA1JyrWMfiIuVsEBKNazH+5xEXnjYuhQA8T?=
 =?us-ascii?q?PDJQ4Noo5dB9vg84RRgozLlbr+LjgZqYv8/dYVGMXVbsmANSxyYlLSBDfIAV5d?=
 =?us-ascii?q?HnaQPmbFihkFnQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAAA3cRRch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBWoIRJwqYA4INFJdDgXEuEwGHRyI1CA0BAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pL4I2IoJlAwMBAiRSBgkBAR8xA1QGDgUFglFLggEFpjszijCHfYRBghaDdYV8h?=
 =?us-ascii?q?RACgSoBAQGIC4F+hRNSj3wBBgIBDYFOj38CFpFSmykCggpwgW6BToInF44qMgE?=
 =?us-ascii?q?BMYEEAQEBDowRgR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AnAAA3cRRch0O0hNFkHQEBBQEHBQGBUgcBCwGBWoIRJwq?=
 =?us-ascii?q?YA4INFJdDgXEuEwGHRyI1CA0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2IoJlAwMBA?=
 =?us-ascii?q?iRSBgkBAR8xA1QGDgUFglFLggEFpjszijCHfYRBghaDdYV8hRACgSoBAQGIC4F?=
 =?us-ascii?q?+hRNSj3wBBgIBDYFOj38CFpFSmykCggpwgW6BToInF44qMgEBMYEEAQEBDowRg?=
 =?us-ascii?q?R8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,355,1539673200"; 
   d="scan'208";a="142232973"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 19:17:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730406AbeLODRx (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 22:17:53 -0500
Received: from szxga05-in.huawei.com ([45.249.212.191]:16136 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1729812AbeLODRe (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 22:17:34 -0500
Received: from DGGEMS411-HUB.china.huawei.com (unknown [172.30.72.59])
        by Forcepoint Email with ESMTP id 00E96B0FFFE00;
        Sat, 15 Dec 2018 11:17:30 +0800 (CST)
Received: from linux-ioko.site (10.71.200.31) by
 DGGEMS411-HUB.china.huawei.com (10.3.19.211) with Microsoft SMTP Server id
 14.3.408.0; Sat, 15 Dec 2018 11:17:23 +0800
From: Peng Li <lipeng321@huawei.com>
To: <davem@davemloft.net>
CC: <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <linuxarm@huawei.com>, <yisen.zhuang@huawei.com>,
        <salil.mehta@huawei.com>, <lipeng321@huawei.com>
Subject: [Patch net 04/10] net: hns: Fixed bug that netdev was opened twice
Date: Sat, 15 Dec 2018 11:53:23 +0800
Message-ID: <1544846009-50276-5-git-send-email-lipeng321@huawei.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1544846009-50276-1-git-send-email-lipeng321@huawei.com>
References: <1544846009-50276-1-git-send-email-lipeng321@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.71.200.31]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Yonglong Liu <liuyonglong@huawei.com>

After resetting dsaf to try to repair chip error such as ecc error,
the net device will be open if net interface is up. But at this time
if there is the users set the net device up with the command ifconfig,
the net device will be opened twice consecutively.

Function napi_enable was called when open device. And Kernel panic will
be occurred if it was called twice consecutively. Such as follow:
static inline void napi_enable(struct napi_struct *n)
{
         BUG_ON(!test_bit(NAPI_STATE_SCHED, &n->state));
         smp_mb__before_clear_bit();
         clear_bit(NAPI_STATE_SCHED, &n->state);
}

[37255.571996] Kernel panic - not syncing: BUG!
[37255.595234] Call trace:
[37255.597694] [<ffff80000008ab48>] dump_backtrace+0x0/0x1a0
[37255.603114] [<ffff80000008ad08>] show_stack+0x20/0x28
[37255.608187] [<ffff8000009c4944>] dump_stack+0x98/0xb8
[37255.613258] [<ffff8000009c149c>] panic+0x10c/0x26c
[37255.618070] [<ffff80000070f134>] hns_nic_net_up+0x30c/0x4e0
[37255.623664] [<ffff80000070f39c>] hns_nic_net_open+0x94/0x12c
[37255.629346] [<ffff80000084be78>] __dev_open+0xf4/0x168
[37255.634504] [<ffff80000084c1ac>] __dev_change_flags+0x98/0x15c
[37255.640359] [<ffff80000084c29c>] dev_change_flags+0x2c/0x68
[37255.769580] [<ffff8000008dc400>] devinet_ioctl+0x650/0x704
[37255.775086] [<ffff8000008ddc38>] inet_ioctl+0x98/0xb4
[37255.780159] [<ffff800000827b7c>] sock_do_ioctl+0x44/0x84
[37255.785490] [<ffff800000828e04>] sock_ioctl+0x248/0x30c
[37255.790737] [<ffff80000026dc6c>] do_vfs_ioctl+0x480/0x618
[37255.796156] [<ffff80000026de94>] SyS_ioctl+0x90/0xa4
[37255.801139] SMP: stopping secondary CPUs
[37255.805079] kbox: catch panic event.
[37255.809586] collected_len = 128928, LOG_BUF_LEN_LOCAL = 131072
[37255.816103] flush cache 0xffff80003f000000  size 0x800000
[37255.822192] flush cache 0xffff80003f000000  size 0x800000
[37255.828289] flush cache 0xffff80003f000000  size 0x800000
[37255.834378] kbox: no notify die func register. no need to notify
[37255.840413] ---[ end Kernel panic - not syncing: BUG!

This patchset fix this bug according to the flag NIC_STATE_DOWN.

Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
Signed-off-by: Peng Li <lipeng321@huawei.com>
---
 drivers/net/ethernet/hisilicon/hns/hns_enet.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/net/ethernet/hisilicon/hns/hns_enet.c b/drivers/net/ethernet/hisilicon/hns/hns_enet.c
index c205a0e..c9454c4 100644
--- a/drivers/net/ethernet/hisilicon/hns/hns_enet.c
+++ b/drivers/net/ethernet/hisilicon/hns/hns_enet.c
@@ -1333,6 +1333,9 @@ static int hns_nic_net_up(struct net_device *ndev)
 	int i, j;
 	int ret;
 
+	if (!test_bit(NIC_STATE_DOWN, &priv->state))
+		return 0;
+
 	ret = hns_nic_init_irq(priv);
 	if (ret != 0) {
 		netdev_err(ndev, "hns init irq failed! ret=%d\n", ret);
-- 
1.9.1

