Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:39:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C43025807A2;
	Mon, 10 Dec 2018 08:06:28 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 08:06:28 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtsNAeREVzt9rNLpbjl0+g51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os2ybnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjAk8G/ZlMJ+gqFVrx2uuxNxzJXUYJmXOfdlYqPQf8kXSXZdUstLVSFMBJ63?=
 =?us-ascii?q?YYsVD+oGOOZVt4zzp1oUrRu/AQmsAP7kxCFLhn/2x6I60vkqHAbF3Aw8HNIOsG?=
 =?us-ascii?q?7brNTuOacMUOC11rXIzSjEb/JX2Db975LEfQwmofGJRL99d9fax0o3Fw7dkFmc?=
 =?us-ascii?q?tYjoMymI2ukDrWSX9fdsWOGzh2I9qgx8oCCjytovh4TJnI4Z1F7J+ThjzIorKt?=
 =?us-ascii?q?C0VFR3bNykHZZWqiqULZF5Qtk4TGFtoCs6yqMJuZq8fCUS1pQnyADQa+adf4iL?=
 =?us-ascii?q?/B3jTuCRLil8hH5/f7K/nRmy/VChyu36SMa0zE5HojRZntTIrHwByhLe5tadRv?=
 =?us-ascii?q?dg/UqtxSyD2gHR5+1cJEA7j6vbK5ovwr4qkZoTtFzOHiv3mEXwka+XeVwo+uu2?=
 =?us-ascii?q?5OT9ZLXpuJucO5ZzigDwNKQhhNa/DP8mMggBQWeb4/6w1L798k3jRrVFkPk2nr?=
 =?us-ascii?q?PesJDAKsQXvrS5DBNN0oY/9xa/CC+r0NAZnXkEMl1JYh2Gj5XyNlHKIfD4C+q/?=
 =?us-ascii?q?glu2nDdqwfDGIqPuApHXInffl7fheK5361RAxwor0dBf+5VUB6kBIP3pW0/xqM?=
 =?us-ascii?q?bXDhgjPwy03uboEtN91owFVGKLA6+ZNr7SsFCS6uIuJemMeJEauDLnJ/c54P7u?=
 =?us-ascii?q?iGczmUUBcqmxwZsXdHe4E+xkI0Wef3XgmNQBEWAMvgo4S+znk1mCUT9VZ3avUK?=
 =?us-ascii?q?Mw/DA7CIS6DYjdQoChmqCO3CC+HpdOfGBJFkiMEWv0d4WDQ/oDcjmSIs9mkjwH?=
 =?us-ascii?q?T7ShUZUu1RO1uQ/+yrpnKPfU+yICuZLi0th1+/PclRUo+TNoCMSd1nmHT3tokW?=
 =?us-ascii?q?MQWz82wKd/rFR+yliZ16h0mfhYFd1J6PNPXQc3Lprcz+18C9DvVQPNZNaJSFC6?=
 =?us-ascii?q?Qtq4BTE9VM4+w9gLY0xlAdWtkgjD3za2A78Sj7GEGYY78rzC0HTrJ8Zy0XDG1L?=
 =?us-ascii?q?I/gFkgRcdPMW6mhqt79wXIA47JkkOZl7uldKgG3S7N8nuDwnSKvE1CTAFwVqDF?=
 =?us-ascii?q?V2gFZkTKtdT5+l/CT7i2BLs6KARB19CNJrFKatLzi1VGX+nsONLFbmK1mmewAw?=
 =?us-ascii?q?uIx7yWYIrrfWUdwDvSCEwenw8P+naGMBA0Bj29rGLGEDxuCVXvblvw8el/rXO7?=
 =?us-ascii?q?SVM0zwGKbkF7y7q54BkVheaYS/MS2LIEtzwsqzF1HFa7wtLXBMCMpwtnfKVAf9?=
 =?us-ascii?q?w95E1L2n7etwx4JpagNbxthkYCcwRruEPjzw94CoFensklsnwrzBB+JrmF0Fxc?=
 =?us-ascii?q?bTyY25PwOrrJKmTp+BCvaqjW2kzR0dqM+6cP7ug4pEvnvA2zCkUi9HBn2cFP03?=
 =?us-ascii?q?SA/pXKEBYSUZXpX0c36hh2va3VbjM85oPUz3JsN6a0vyTG29IoAusl1xmhc81e?=
 =?us-ascii?q?MKOCCA/9DckaC9KyJ+wtnlijdggEM/xK9K4oI8OmcOOL2LSqPOl8hj2ml3lI4I?=
 =?us-ascii?q?dn3kKK6SV8UO/I048ZzP6C2guISinzjE2mssDxgo1EYTASHmyiySnrHoJRZ6ty?=
 =?us-ascii?q?fZoVBmeqOcG42tJ+h5v1UX5C6FGjH08G2NOueReKb1393Bdc1EQNrXy8hCu4yS?=
 =?us-ascii?q?d5kzUorqqZwSzPzP7udBsBOm5XWmZiiU3gLpSzj9AfREKodRQmlAO55UbmwKhW?=
 =?us-ascii?q?vKZ/IHPJQUdLfCj2KHtuUrCqubqBYM5P6ZUovjtRUOmnZVCaS7j9owYV0i/5Hm?=
 =?us-ascii?q?tewiw7eC+uupnjgxN6j2edJm5prHXFYcFw2Qvf5NvESP9RxDUGQzN0iTvWBli6?=
 =?us-ascii?q?JNSp+dSUl5HesuGxTW6hV5tTcTX1woOErie0+WpqARinlfCphtLnCRQ60TP819?=
 =?us-ascii?q?RyViXHthf8bpPr16SnK+1neEZoCUT468p7HIF+j4QxiIsR2XgcmpWa434HnX3v?=
 =?us-ascii?q?PtVc3KL0dGANSiITw97J/Ajl31VuLneIx4L6THqR2MVgaMehYmMKxC099dtFB7?=
 =?us-ascii?q?mO7LxLhiZ1plu4rQTMYflyhDsdyP0u6GIEjOENogYi0iKdArUKF0lCISPsjwiI?=
 =?us-ascii?q?78y5rKhPeGavdr2w2FB/nN+7CrGCvxpcWG34epo5GS9w78N/ME/D0XHp64Hkfs?=
 =?us-ascii?q?XQYswXthGOjxjAiO1VIoorlvUWnSpnJX79vXo9xuEglxNu2pW6vJWdJ2Vp4aK0?=
 =?us-ascii?q?GRpYNjzzZ8MO9TDhl6densCK34+xGpVtACkEXJztTfiwCjIdqeznNxqSED07sn?=
 =?us-ascii?q?qbG6DQHQqB50d9tX7PD4qnN3KKJHka0NViQgOSJFdEjQAQXTU6mIM5Fw+wyMzg?=
 =?us-ascii?q?dkd5+i4e5lriphRQzeJoMgH1Un3Dqwewdjc0VJ+fIQJW7wFF+kfVKNGe4fh1Hy?=
 =?us-ascii?q?1C5Z2hqwqNKmOAagRMDGEJXFGEBl/5Mrmv49nA7/aXBu6kI/TSZrWOrPRUV+2U?=
 =?us-ascii?q?ypK3zotm4zGMO92PPnZ8Dv072UlDXXFjF8TagTUPTCMXmDzXb86Gvxex4Sl3rs?=
 =?us-ascii?q?G58PT2VwPj/4qPC71OMdpx/xC6m7uMN+mVhCxhMzZXyosMxWPUyLgYxFMdkTxu?=
 =?us-ascii?q?eCK3EbsetS/BVqbQmq5MAh4faiNzMtZI7q0m0glMP87bls361rpigvEpDFdFUE?=
 =?us-ascii?q?Trmtu1aswSP2G9KFTHCV6XNLSHID3H2d34bbmgRr1QkupUsQa9uTKaE0/lIzSC?=
 =?us-ascii?q?mCPlVxGpMeFQki6bOAZSt526chZoEWLjVs7pagWnMN9rij072b01iWnMNW4ZMD?=
 =?us-ascii?q?h8dVtCr7yQ7SxChPV/FHdM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?v2l4Q6l8mzPXhtpvpUy21+eI1zxrWQZPrTANg5iE+Q1nOaLS9Z5oQmvf8VQG6m?=
 =?us-ascii?q?DUQxcWpNtsC/XxurpM19/dhqW1IzBHt5rQ/M0BF43RLeqELnMqMlzuAjGQRA8E?=
 =?us-ascii?q?SyO7cGLSnUpQlNmM+XCP6Js3sJ7hnNwJULAfHFMyDPgHDEN7NMIDOotqWSE2lv?=
 =?us-ascii?q?iQi8tby2C5qUzyRd9bupSPavGSCPSnfDWFjrlNZjMWwKnkMIMBJIq90EtnPAop?=
 =?us-ascii?q?1L/WElbdCIge6hZqaRU59R1A?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABBgD8jQ5ch0O0hNFjHgEfBg2BRgKDa?=
 =?us-ascii?q?hUSg3qUKIFoOYMxlX0uEwGEOwODLyI3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?2IoJsAiBcCQIkAiYCAgNEFxIFgxyCAgQBpWmBL4oggQuLFheBQD+BETOHKYM7g?=
 =?us-ascii?q?lcCkAM0kD4JhkiLH4l2W4ZrASyIdpFqgXgzGggbFYMngicXjiA8ATKBBQEBiUu?=
 =?us-ascii?q?CTQEB?=
X-IPAS-Result: =?us-ascii?q?A0ABBgD8jQ5ch0O0hNFjHgEfBg2BRgKDahUSg3qUKIFoOYM?=
 =?us-ascii?q?xlX0uEwGEOwODLyI3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJsAiBcCQIkA?=
 =?us-ascii?q?iYCAgNEFxIFgxyCAgQBpWmBL4oggQuLFheBQD+BETOHKYM7glcCkAM0kD4Jhki?=
 =?us-ascii?q?LH4l2W4ZrASyIdpFqgXgzGggbFYMngicXjiA8ATKBBQEBiUuCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55709030"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 08:06:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727229AbeLJQGX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 11:06:23 -0500
Received: from relay.sw.ru ([185.231.240.75]:41316 "EHLO relay.sw.ru"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726146AbeLJQGX (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 11:06:23 -0500
Received: from [172.16.25.169] (helo=localhost.localdomain)
        by relay.sw.ru with esmtp (Exim 4.91)
        (envelope-from <ktkhai@virtuozzo.com>)
        id 1gWO4Z-0005ja-Bu; Mon, 10 Dec 2018 19:06:19 +0300
Subject: [PATCH] ksm: React on changing "sleep_millisecs" parameter faster
From: Kirill Tkhai <ktkhai@virtuozzo.com>
To: akpm@linux-foundation.org, mhocko@suse.com, ktkhai@virtuozzo.com,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        gorcunov@virtuozzo.com
Date: Mon, 10 Dec 2018 19:06:18 +0300
Message-ID: <154445792450.3178.16241744401215933502.stgit@localhost.localdomain>
User-Agent: StGit/0.18
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

ksm thread unconditionally sleeps in ksm_scan_thread()
after each iteration:

	schedule_timeout_interruptible(
		msecs_to_jiffies(ksm_thread_sleep_millisecs))

The timeout is configured in /sys/kernel/mm/ksm/sleep_millisecs.

In case of user writes a big value by a mistake, and the thread
enters into schedule_timeout_interruptible(), it's not possible
to cancel the sleep by writing a new smaler value; the thread
is just sleeping till timeout expires.

The patch fixes the problem by waking the thread each time
after the value is updated.

This also may be useful for debug purposes; and also for userspace
daemons, which change sleep_millisecs value in dependence of
system load.

Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>
---
 mm/ksm.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/mm/ksm.c b/mm/ksm.c
index 723bd32d4dd0..31452122e52b 100644
--- a/mm/ksm.c
+++ b/mm/ksm.c
@@ -294,6 +294,7 @@ static int ksm_nr_node_ids = 1;
 #define KSM_RUN_OFFLINE	4
 static unsigned long ksm_run = KSM_RUN_STOP;
 static void wait_while_offlining(void);
+static struct task_struct *ksm_task = NULL;
 
 static DECLARE_WAIT_QUEUE_HEAD(ksm_thread_wait);
 static DEFINE_MUTEX(ksm_thread_mutex);
@@ -2435,8 +2436,9 @@ static int ksm_scan_thread(void *nothing)
 	set_freezable();
 	set_user_nice(current, 5);
 
+	mutex_lock(&ksm_thread_mutex);
+	ksm_task = current;
 	while (!kthread_should_stop()) {
-		mutex_lock(&ksm_thread_mutex);
 		wait_while_offlining();
 		if (ksmd_should_run())
 			ksm_do_scan(ksm_thread_pages_to_scan);
@@ -2451,7 +2453,10 @@ static int ksm_scan_thread(void *nothing)
 			wait_event_freezable(ksm_thread_wait,
 				ksmd_should_run() || kthread_should_stop());
 		}
+		mutex_lock(&ksm_thread_mutex);
 	}
+	ksm_task = NULL;
+	mutex_unlock(&ksm_thread_mutex);
 	return 0;
 }
 
@@ -2864,7 +2869,11 @@ static ssize_t sleep_millisecs_store(struct kobject *kobj,
 	if (err || msecs > UINT_MAX)
 		return -EINVAL;
 
+	mutex_lock(&ksm_thread_mutex);
+	if (ksm_task)
+		wake_up_state(ksm_task, TASK_INTERRUPTIBLE);
 	ksm_thread_sleep_millisecs = msecs;
+	mutex_unlock(&ksm_thread_mutex);
 
 	return count;
 }

