Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:40:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 56F7558079D;
	Thu, 13 Dec 2018 10:11:47 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 10:11:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AkgPToxH8V7FX3VR5r2o7Sp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8u+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YIkMAeQPJuZYt4vwqkASoReiGQWgGP/jxiNUinLwwKY00/4hEQbD3AE4GNwBqm?=
 =?us-ascii?q?7UrNboP6oPS+C1y6fJzTPeZP5Rwjj98o/IchcnofGNQ719asnRxlc1FwPDkFqQ?=
 =?us-ascii?q?rZbpPzSP1uQCqmWW6fdrW+yoi24isQ5xoz6vy98viobXnIIVzE7L9SFjzIYyP9?=
 =?us-ascii?q?24R0h2asOnHptIryyWKZd6T8c4T211tis21KcKtYO4cSQW0pgqxhzSZ+SEfoSW?=
 =?us-ascii?q?+B7uWuScLS1liH9ke7+znRm//Eqmx+bhTMe7ykxKoTBAktTUtnACyRjT6s+fR/?=
 =?us-ascii?q?tj8UeuxyyP2xrQ6u5aO0A0k7TUK5o7zr43jJoTvlzPHi7wmErokK+bblso9vSs?=
 =?us-ascii?q?5uj9f7nrqIGQO5Vphgz9LqgigM2yDOYgPggLRWeb+OC81LP5/U3+RbVHlvk2kq?=
 =?us-ascii?q?jfsJDHKsUXv625DBFP0oYl9Rm/Cy6q0NMWnHkBMl1FYgmKj5bmO17QOvD0F/S/?=
 =?us-ascii?q?jEq2kDdt2f/GOqftApLXLnjMiLvhZ6py61ZAyAovytBS/5ZUCrACIP3tQEPwu8?=
 =?us-ascii?q?HYAwQ9Mwy1xebnFdp82pkfWWKJHq+WLqfSvUWU6eIoJumGfJUVtyrlK/g5+/7u?=
 =?us-ascii?q?imc0mV8HcqmowZsYcne4Eu5mI0WEe3XshNgBHHwOvgo/SuzqlVKDXSRSZ3a0Q6?=
 =?us-ascii?q?Iz+DU7BJi6AofEQ4CnmKaB0zujHp1KemBGDUiBEXXvd4qaQfsMayWSIslnkjwD?=
 =?us-ascii?q?TrWhT44h1ReztA710bZnL+zU+jEGupLnztR6++rTlRQq/zxuE8udy32NT31znm?=
 =?us-ascii?q?4QXTA2x6B/oUt+yluZy6h3mf5YGMdX5/NIVAc6KJHdw/Z7C9D0RgLOYNOJREy6?=
 =?us-ascii?q?TdWhBDE7VsgxzMMWY0ZhB9WiiQjO3ymwDL8TjbCLAJ00/bja33j+PMt9z3fG1K?=
 =?us-ascii?q?88j1gpWMdPNGumhrJh+AjXHYLGj0KZl6Oyf6QGwCHN7HuDzXaJvExATQF/S7vF?=
 =?us-ascii?q?Um4FakvWt9v54FjCQKGoCbggNgtBysuCKq9RZ93tjFVGQurjOdvEb2KwnWewGQ?=
 =?us-ascii?q?iHxreWYIX2fGUd2T3XCFIYnAAL4XaGKQ8+Cz+8rG3EEjxhC0jjY0P2/ul4s3O0?=
 =?us-ascii?q?UEk0whqOb01g0bq15xEUieadS/MVwrILpiMhpy9oE1a62tLcE8CAqBZ5fKVAfd?=
 =?us-ascii?q?M9509K1X7Ytwx4OZygM6Bih14EfwRrpU/u0A93CoFBkcgso3Mn1w5yKaOe0FNc?=
 =?us-ascii?q?eDKUx5HwOrvLKmbs+BCjcbLZ2lbb0NyO4KcA9Ow4q0n/vAGuDkct6XFn3Mda0n?=
 =?us-ascii?q?SC5pTGFhEdUY/sXUkt8Rh6pLbaYjcm6oPQ1H1sN7S0szDY19IoAusl1givf9NF?=
 =?us-ascii?q?PKyYEw/yFtUQB9KyJ+wyh1ipchUEMfhS9a4pJc+pa+GK2a+rPOl6mjKmgn9K4I?=
 =?us-ascii?q?R80kKK6ip9RfTE35cDw/GEwASHUy3wg0umssDygYpEfy0dHnKjySj4A45cfrdy?=
 =?us-ascii?q?fYcXBmi0Oc2429J+i4TrW3FG7l6jBkoK19OzdhqWclPywxdQ1UMRoXG8nSu4zj?=
 =?us-ascii?q?p0kywmr6aF3SzOxfjiewQDOmJRWGZiilLsK5Cuj98GREiocxQplBy96Ef6xqhX?=
 =?us-ascii?q?vqR+I3PIQUdVeSj7NGViUqq2trqfbM9D8pIosSNLUOuiZVCWUKLyoxwf0yn7BW?=
 =?us-ascii?q?tR2Cg7dy22upX+hxF6iniSLGxwrHrafsF83wzf68bfRf5S3zoGQjd3iT/MC1i4?=
 =?us-ascii?q?Ptmp+8iUlpjZvuC/UWKhSoNccS3xwYycsyu74HVgAQejkPCrht3nDQ863Df71t?=
 =?us-ascii?q?ZwUiXEthT8Yojt16mhNeJnf09oBELz6sZgG4F+lJcwi48U2XQAmpqV+n8Hm3/p?=
 =?us-ascii?q?MdpHwaL+cGYNRTkTzt7W+gfl2VdvLnKUx43jUHWdzdBsZ927YmMQxyI84NpGCK?=
 =?us-ascii?q?aS7LxYgyR1pkC0oh7WYfh4hj0d0+ch6GYGg+EVvwog1iCdArERHUZCJyDtmQqH?=
 =?us-ascii?q?78uirKpJfmagaqa/1FBxnd26CLGCowdcWGv2e5s4HC9w6Nl/P0zI0HHp9o7kf9?=
 =?us-ascii?q?zQZ8oJthKIixfAk/RVKJUpm/oWgipnPHjxvHw/xO49kBxuxoq6vImcJmVp/aK5?=
 =?us-ascii?q?BANYNzLva8MS/DHtkbhRnsKM04+zGZVhHy0BXIH0QvKwDDISqfPnOh6VHzImrX?=
 =?us-ascii?q?ebHaffERWb6Ed7tH/PF5GrN3eKJHgW19liRR+dJFBBjwAQRjk1gpk5FgWyzsz7?=
 =?us-ascii?q?bEh5/iwR5kL/qhZUyOJnLRz/XXnEpAuydjc4UpufLAdV7gFf4UfaK9ee4/l3Hy?=
 =?us-ascii?q?FZ+J2hsQOMJnaaZwROEWEGREiEC0r/Mbmp4NnK6/KYCfamL/vSfbWOrvRTVveP?=
 =?us-ascii?q?xZKyy4tm4iyDNsOVMnl5CP073EVDUGt9G8TYnTUPViMWmzjMb86duBez5Cl3ot?=
 =?us-ascii?q?qj//TsXQLl/ZGPBKdKMdVz5xC2hr+ON+6OiyZ4KjZY1ZIMyWXLyLgF214ShD9h?=
 =?us-ascii?q?dyOwEbQbriPNSKPQmqlKDx8UcS9zNc1I774i0QlJI8LUltT11rtghP4vF1hFTU?=
 =?us-ascii?q?Dhmt2uZcESOW69KUjIBFyVO7WGPzHLx8D3bLi4Sb1RiuVUqhKxtSyaE0/lIjSM?=
 =?us-ascii?q?iT3pWwqzPuFLiSGRJAZet52lchZxFWjjS8rragG6MN9ylzE53ac4iW/KNWECNz?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsfFzGCR7i/pa4Ggmy7tS?=
 =?us-ascii?q?9CxFROZ6mC3Xrt5vpVGpiuiOyjp9XxpIpTZGn4aLvURkOaXE+ZhMQ3fE/BQR7W?=
 =?us-ascii?q?qODxQGvcdqCtrqu/MY9t+as6b3KSlP6Zrv9ssdAcHbLIrTN34gLxfzMCXfDAoD?=
 =?us-ascii?q?RDGvc2fb0R9zivaXo1ictJtygILrh5xGHrVBU1szF/4yCUl/GtEGZpBtUWV3wv?=
 =?us-ascii?q?agkMcU6C/m/1HqT8JAs8WCD6rKDA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BhAQB4oBJch0O0hNFkHgEfBgeBTAKCa?=
 =?us-ascii?q?IECJ4x0izRQAQeBSYkNjjOBcywLCAGBS4V6IjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYQEDAwECJBkBATcBBQkCGAMDAQIKExIDDB0jCAYTBYMcAYFzD?=
 =?us-ascii?q?QQBCqdhgWwzgnYBAQWHLwMFjDwXeIEHgRGEU4FEgUUXAQETg0CCJqA8VQmHDYZ?=
 =?us-ascii?q?fg2IjgVwjhHkFik0sjXiMa4IOMxoIKAiDJ4IzHYhMgmaCWUAyAYEEAQGJdQ8Xg?=
 =?us-ascii?q?icBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BhAQB4oBJch0O0hNFkHgEfBgeBTAKCaIECJ4x0izRQAQe?=
 =?us-ascii?q?BSYkNjjOBcywLCAGBS4V6IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?QEDAwECJBkBATcBBQkCGAMDAQIKExIDDB0jCAYTBYMcAYFzDQQBCqdhgWwzgnY?=
 =?us-ascii?q?BAQWHLwMFjDwXeIEHgRGEU4FEgUUXAQETg0CCJqA8VQmHDYZfg2IjgVwjhHkFi?=
 =?us-ascii?q?k0sjXiMa4IOMxoIKAiDJ4IzHYhMgmaCWUAyAYEEAQGJdQ8XgicBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="56794409"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 10:11:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729794AbeLMSLo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 13:11:44 -0500
Received: from heliosphere.sirena.org.uk ([172.104.155.198]:37616 "EHLO
        heliosphere.sirena.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729775AbeLMSLl (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 13:11:41 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=sirena.org.uk; s=20170815-heliosphere; h=Date:Message-Id:In-Reply-To:
        Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:References:
        List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:
        List-Archive; bh=mnNOdcqlt8iupjbK3COqC7rtgPkWtpGCJDy7F4QPLnM=; b=tFxlUFVC9Cio
        9sg7WpG1zRzopEJIyPX5d5pkw8q2B3jbQ6Lg8qfGuF1aw+BSzuhRKBOXqe7cEX5nzbLLijIF6SyVh
        wdGAp5Qsi7wwKgvlmg33wTYxiyq/VXHDnjOBevTPrU1tvoyOWgvsCMS0GFxUFVFt7+s1jTd4VZV9Q
        NYy4o=;
Received: from cpc102320-sgyl38-2-0-cust46.18-2.cable.virginm.net ([82.37.168.47] helo=debutante.sirena.org.uk)
        by heliosphere.sirena.org.uk with esmtpa (Exim 4.89)
        (envelope-from <broonie@sirena.org.uk>)
        id 1gXVSV-0002RN-Mh; Thu, 13 Dec 2018 18:11:39 +0000
Received: by debutante.sirena.org.uk (Postfix, from userid 1000)
        id 5F16011254D1; Thu, 13 Dec 2018 18:11:39 +0000 (GMT)
From: Mark Brown <broonie@kernel.org>
To: Olliver Schinagl <oliver@schinagl.nl>
Cc: Priit Laes <plaes@plaes.org>, Mark Brown <broonie@kernel.org>,
        linux-kernel@vger.kernel.org
Subject: Applied "regulator: axp20x: add software based soft_start for AXP209 LDO3" to the regulator tree
In-Reply-To: 
X-Patchwork-Hint: ignore
Message-Id: <20181213181139.5F16011254D1@debutante.sirena.org.uk>
Date: Thu, 13 Dec 2018 18:11:39 +0000 (GMT)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The patch

   regulator: axp20x: add software based soft_start for AXP209 LDO3

has been applied to the regulator tree at

   https://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git 

All being well this means that it will be integrated into the linux-next
tree (usually sometime in the next 24 hours) and sent to Linus during
the next merge window (or sooner if it is a bug fix), however if
problems are discovered then the patch may be dropped or reverted.  

You may get further e-mails resulting from automated or manual testing
and review of the tree, please engage with people reporting problems and
send followup patches addressing any issues that are reported if needed.

If any updates are required or you are submitting further changes they
should be sent as incremental updates against current git, existing
patches will not be replaced.

Please add any relevant lists and maintainers to the CCs when replying
to this mail.

Thanks,
Mark

From 77e3e3b165db94dc48c0de30498f51fa38f19d4d Mon Sep 17 00:00:00 2001
From: Olliver Schinagl <oliver@schinagl.nl>
Date: Tue, 11 Dec 2018 17:17:08 +0200
Subject: [PATCH] regulator: axp20x: add software based soft_start for AXP209
 LDO3

In the past, there have been words on various lists that if LDO3 is
disabled in u-boot, but enabled in the DTS, the axp209 driver would
fail to continue/hang. Several enable/disable patches have been
issues to devicetree's in both the kernel and u-boot to address
this issue.

What really happened however, was that the AXP209 shuts down without
a notice and without setting an interrupt. This is caused when LDO3
gets overloaded, for example with large capacitors on the LDO3 output.

Normally, we would expect that AXP209 would source 200 mA as per
datasheet and set and trigger an interrupt when being overloaded.
For some reason however, this does not happen.

As a work-around, we use the soft-start constraint of the regulator
node to first bring up the LDO3 to the lowest possible voltage and
then enable the LDO. After that, we can set the requested voltage
as usual.

Combining this setting with the regulator-ramp-delay allows LDO3 to
enable voltage slowly and staggered, potentially reducing overall
inrush current.

Signed-off-by: Olliver Schinagl <oliver@schinagl.nl>
Signed-off-by: Priit Laes <plaes@plaes.org>
Signed-off-by: Mark Brown <broonie@kernel.org>
---
 drivers/regulator/axp20x-regulator.c | 57 +++++++++++++++++++++++++++-
 1 file changed, 56 insertions(+), 1 deletion(-)

diff --git a/drivers/regulator/axp20x-regulator.c b/drivers/regulator/axp20x-regulator.c
index 1d9fa6238aec..e8a895b81c90 100644
--- a/drivers/regulator/axp20x-regulator.c
+++ b/drivers/regulator/axp20x-regulator.c
@@ -14,6 +14,7 @@
  */
 
 #include <linux/bitops.h>
+#include <linux/delay.h>
 #include <linux/err.h>
 #include <linux/init.h>
 #include <linux/mfd/axp20x.h>
@@ -23,6 +24,7 @@
 #include <linux/platform_device.h>
 #include <linux/regmap.h>
 #include <linux/regulator/driver.h>
+#include <linux/regulator/machine.h>
 #include <linux/regulator/of_regulator.h>
 
 #define AXP20X_GPIO0_FUNC_MASK		GENMASK(3, 0)
@@ -430,6 +432,59 @@ static int axp20x_set_ramp_delay(struct regulator_dev *rdev, int ramp)
 	return regmap_update_bits(axp20x->regmap, reg, mask, cfg);
 }
 
+static int axp20x_regulator_enable_regmap(struct regulator_dev *rdev)
+{
+	struct axp20x_dev *axp20x = rdev_get_drvdata(rdev);
+	const struct regulator_desc *desc = rdev->desc;
+
+	if (!rdev)
+		return -EINVAL;
+
+	switch (axp20x->variant) {
+	case AXP209_ID:
+		if ((desc->id == AXP20X_LDO3) &&
+		    rdev->constraints && rdev->constraints->soft_start) {
+			int v_out;
+			int ret;
+
+			/*
+			 * On some boards, the LDO3 can be overloaded when
+			 * turning on, causing the entire PMIC to shutdown
+			 * without warning. Turning it on at the minimal voltage
+			 * and then setting the voltage to the requested value
+			 * works reliably.
+			 */
+			if (regulator_is_enabled_regmap(rdev))
+				break;
+
+			v_out = regulator_get_voltage_sel_regmap(rdev);
+			if (v_out < 0)
+				return v_out;
+
+			if (v_out == 0)
+				break;
+
+			ret = regulator_set_voltage_sel_regmap(rdev, 0x00);
+			/*
+			 * A small pause is needed between
+			 * setting the voltage and enabling the LDO to give the
+			 * internal state machine time to process the request.
+			 */
+			usleep_range(1000, 5000);
+			ret |= regulator_enable_regmap(rdev);
+			ret |= regulator_set_voltage_sel_regmap(rdev, v_out);
+
+			return ret;
+		}
+		break;
+	default:
+		/* No quirks */
+		break;
+	}
+
+	return regulator_enable_regmap(rdev);
+};
+
 static const struct regulator_ops axp20x_ops_fixed = {
 	.list_voltage		= regulator_list_voltage_linear,
 };
@@ -447,7 +502,7 @@ static const struct regulator_ops axp20x_ops = {
 	.set_voltage_sel	= regulator_set_voltage_sel_regmap,
 	.get_voltage_sel	= regulator_get_voltage_sel_regmap,
 	.list_voltage		= regulator_list_voltage_linear,
-	.enable			= regulator_enable_regmap,
+	.enable			= axp20x_regulator_enable_regmap,
 	.disable		= regulator_disable_regmap,
 	.is_enabled		= regulator_is_enabled_regmap,
 	.set_ramp_delay		= axp20x_set_ramp_delay,
-- 
2.19.0.rc2

