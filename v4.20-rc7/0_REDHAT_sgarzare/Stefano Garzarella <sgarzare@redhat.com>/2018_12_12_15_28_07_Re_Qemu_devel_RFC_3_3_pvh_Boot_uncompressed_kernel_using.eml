Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:52:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 129925807A2
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 08:00:12 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga007-1.jf.intel.com with ESMTP; 12 Dec 2018 08:00:11 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AR/4i7xLINSCZM9sOp9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfLf7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgRAeUdIOhYt4vwqVkBoBejCwSgGP3gyiRTi3/qwaE3yfgtHR3a0AEiGd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe270bXIwivNb/xM3zf975XDfBE7rvGWXLN/a9DRxlcrFwPBlFqb?=
 =?us-ascii?q?tIvoPyia1usXqWia7vBvVfixhGM8sQF+vCWgxsc2hYnVnI4a1lfE9SBgzYszON?=
 =?us-ascii?q?a2S1Z7bMa6HJdMtCyWLZZ6Tt4hTm1ypio3xL0LtYSmcCUI0Jgr2QLTZvidf4WL?=
 =?us-ascii?q?4h/vTvidLSpkiH5/eb+yhBC/+lW6xOLmTMm7ylNKozJFktbSsnAN0ATe6syGSv?=
 =?us-ascii?q?tm4kehwiyD1w/V6uFZO0w0krDbK5E5zr4xkJocr1jDEzfolEnqj6KabFgo9vWr?=
 =?us-ascii?q?5uj9fLnrqJ+RO5Vphgz8Kqgun9awAeU8MggARWib/uG82aX6/ULnRbVKk+Q6nb?=
 =?us-ascii?q?THv5DEO8sbore1DBRS0oY+7RawEymp0M8fkXkDLVJFewyIg5LmOlHTOP34Cfa/?=
 =?us-ascii?q?g1KxkDZk3fzGP7vhAonTIXjHirvuYbF960tHxQo1ytBf4Z1UCrccIP7pXU/xrt?=
 =?us-ascii?q?PYAgcjMwOo2+bnFMl91oQGVGKLA6+ZM73dvUWH5+IyOOSMYI4VuDDgK/kq/fLu?=
 =?us-ascii?q?jHk5mUMDcqmtx5cYdHe4HvE1a3ifemfm19cdDX8R7E15SO3xlEbEVzlVaHCvGa?=
 =?us-ascii?q?Um6XY+AYOiCI7FAYe1nL2G2jz8B5BTeyVKB06BFSTVcZ6ZUaIJYSOWPsgzizEB?=
 =?us-ascii?q?SP2tRpEs0VS0uRbnxqF7BuzT/CIeqNTkztci/PDZlxw56WlpCd+A2XqGVWB+kz?=
 =?us-ascii?q?A0QGoz1bp2pwpiy1OY1q5QhOZRHtheofhOV1QUL5nZmtdmBt77XAWJUd6TWl+8?=
 =?us-ascii?q?T9GiCHllVd042c0HeUtVAdiujhnfmSGtBulGxPSwGJUo//eEjDDKLMFnxiODjf?=
 =?us-ascii?q?F5gg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A+AAD3LxFcmBHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDe4h4izOCDYkhjjKBcxQYFIc+IjQJDQEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4vgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAwECBgEBCgsNAgIiBAICAwEeE?=
 =?us-ascii?q?gEFARwZBRaDBoF1BQgBBJosPIsNfDOKLRJ5izEXgUA/gRGDEogFglcCiSuXYQm?=
 =?us-ascii?q?IJ4Ijhw0YgVyFGoMphyeZMA8hgSWCDnAVbAaCNYInF44eQDGBB4sFgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A+AAD3LxFcmBHrdtBkHgEGBwaBUQkLAYEwgmKDe4h4izO?=
 =?us-ascii?q?CDYkhjjKBcxQYFIc+IjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFAgMaA?=
 =?us-ascii?q?QaCWwEBAQECAQECIAQfCikDAwECBgEBCgsNAgIiBAICAwEeEgEFARwZBRaDBoF?=
 =?us-ascii?q?1BQgBBJosPIsNfDOKLRJ5izEXgUA/gRGDEogFglcCiSuXYQmIJ4Ijhw0YgVyFG?=
 =?us-ascii?q?oMphyeZMA8hgSWCDnAVbAaCNYInF44eQDGBB4sFgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="43771528"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 08:00:11 -0800
Received: from localhost ([::1]:45748 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX6vi-00063W-5Q
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 11:00:10 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54084)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <sgarzare@redhat.com>) id 1gX6R0-00055j-2p
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:28:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <sgarzare@redhat.com>) id 1gX6Qv-0003GP-3v
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:28:26 -0500
Received: from mail-ot1-f68.google.com ([209.85.210.68]:46436)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <sgarzare@redhat.com>) id 1gX6Qu-0003Fv-RT
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:28:20 -0500
Received: by mail-ot1-f68.google.com with SMTP id w25so17921816otm.13
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 07:28:20 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc;
	bh=mX56/nM5hpCEAcvKxeDcvBd2sNlHHtxdxUV3Ua5LWrw=;
	b=qr45C41qFqxZ3ItAF8rZRmyNonJBvycm69KT3DGH+eEw0lOJJJP1kzKECx5WPHmDHr
	nTIwzr5d1cXh/S21J7/5CHl0Om7Lhbucg5a6PaO3MrmYo8TwlB8S+TLxwsuusiifRBIJ
	3f6G74+7vcDzKxtzfouUNMZrbm3eO1uqgVDbNDx9iQ+NdNrFi9R4bAU0L+UJPjK0w3Ml
	X99E4EH3J1bB1l8G8QC+6n/ePM/psb2HWOkq3DIi5Q/r6iSbydmAeJcmvHRnvoxXFKC7
	DdPIZNwIeTvJi/DIRSLPRBxbQVbB2DqyeI9eWO6zXHy5agaONE2XOokOz14THMScuuru
	PnNA==
X-Gm-Message-State: AA+aEWYfCb+e5gaIaTu//mhdEaqoKdLDrIjSED8Q2mw/5JtBOO01E6H6
	aqFNMUvJ8im6L0copi/Wz+CCoUG5SPN8PzmkKxvD4g==
X-Google-Smtp-Source: AFSGD/W20dC8vzkD4bxZXu2DdzHI5KmBrhbaBtb13yaH7hU1KKQQxQ/AX/omOGept4cBDdxqC0Qpeb09aCEwv6a6UB4=
X-Received: by 2002:a9d:6108:: with SMTP id i8mr15087279otj.278.1544628499953; 
	Wed, 12 Dec 2018 07:28:19 -0800 (PST)
MIME-Version: 1.0
References: <1544049446-6359-1-git-send-email-liam.merwick@oracle.com>
	<1544049446-6359-4-git-send-email-liam.merwick@oracle.com>
	<CAGxU2F4j11wVoDktowJwXDy42_PWbjwF0qAueFg+He4Tb86wgQ@mail.gmail.com>
	<33fb9ea4-d6c5-ed23-2fb5-6f818e250043@oracle.com>
In-Reply-To: <33fb9ea4-d6c5-ed23-2fb5-6f818e250043@oracle.com>
From: Stefano Garzarella <sgarzare@redhat.com>
Date: Wed, 12 Dec 2018 16:28:07 +0100
Message-ID: <CAGxU2F793nfiFADnJW-j-vLSS0Mp-XP54JFEq++0_JunHQj50w@mail.gmail.com>
To: maran.wilson@oracle.com
Content-Type: text/plain; charset="UTF-8"
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.210.68
Subject: Re: [Qemu-devel] [RFC 3/3] pvh: Boot uncompressed kernel using
 direct boot ABI
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>, Michael Tsirkin <mst@redhat.com>,
	qemu-devel@nongnu.org, Paolo Bonzini <pbonzini@redhat.com>,
	Stefan Hajnoczi <stefanha@redhat.com>,
	xen-devel@lists.xenproject.org, rth@twiddle.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Dec 11, 2018 at 7:35 PM Maran Wilson <maran.wilson@oracle.com> wrote:
>
> On 12/11/2018 9:11 AM, Stefano Garzarella wrote:
> > Hi Liam,
> > in order to support PVH also with SeaBIOS, I'm going to work on a new
> > option rom (like linuxboot/multiboot) that can be used in this case.
>
> That is awesome. Yes, please keep us posted when you have something working.

Yes, I'll keep you updated!

>
> Just FYI, before switching over to using Qemu+qboot, we had been using a
> Qemu only solution (but not using an option rom) internally that worked
> very well using no FW at all. We had Qemu simply parse the ELF file and
> jump to the PVH entry point if one is found. The only gotcha was that we
> had to include a pair of patches that were originally written by folks
> at Intel as part of the clear containers work. Specifically, in order to
> be able to skip firmware entirely, we had to do 2 additional things: (1)
> ACPI tables generated by Qemu are usually patched up by FW. Since we
> were running no FW, we needed to do that patching up of the ACPI tables
> in Qemu when it was detected that we were going to enter the OS via the
> PVH entry point. (2) We also needed to add a patch to Qemu to enable a
> few PM registers -- something typically done by FW.

I had a look of qemu-lite, are you referring to this?

>
> But if SeaBIOS is involved in the solution you are working on, I guess
> you won't really need those extra patches. Just figured I'd mention it
> so you have the full picture.

Thank you very much to share with me these details!

Cheers,
Stefano

>
> Thanks,
> -Maran
>
> > I'll keep you updated on it!
> >
> > Cheers,
> > Stefano
> > On Wed, Dec 5, 2018 at 11:38 PM Liam Merwick <liam.merwick@oracle.com> wrote:
> >> These changes (along with corresponding qboot and Linux kernel changes)
> >> enable a guest to be booted using the x86/HVM direct boot ABI.
> >>
> >> This commit adds a load_elfboot() routine to pass the size and
> >> location of the kernel entry point to qboot (which will fill in
> >> the start_info struct information needed to to boot the guest).
> >> Having loaded the ELF binary, load_linux() will run qboot
> >> which continues the boot.
> >>
> >> The address for the kernel entry point has already been read
> >> from an ELF Note in the uncompressed kernel binary earlier
> >> in pc_memory_init().
> >>
> >> Signed-off-by: George Kennedy <George.Kennedy@oracle.com>
> >> Signed-off-by: Liam Merwick <Liam.Merwick@oracle.com>
> >> ---
> >>   hw/i386/pc.c | 72 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
> >>   1 file changed, 72 insertions(+)
> >>
> >> diff --git a/hw/i386/pc.c b/hw/i386/pc.c
> >> index 056aa46d99b9..d3012cbd8597 100644
> >> --- a/hw/i386/pc.c
> >> +++ b/hw/i386/pc.c
> >> @@ -54,6 +54,7 @@
> >>   #include "sysemu/qtest.h"
> >>   #include "kvm_i386.h"
> >>   #include "hw/xen/xen.h"
> >> +#include "hw/xen/start_info.h"
> >>   #include "ui/qemu-spice.h"
> >>   #include "exec/memory.h"
> >>   #include "exec/address-spaces.h"
> >> @@ -1098,6 +1099,50 @@ done:
> >>       return pvh_start_addr != 0;
> >>   }
> >>
> >> +static bool load_elfboot(const char *kernel_filename,
> >> +                   int kernel_file_size,
> >> +                   uint8_t *header,
> >> +                   size_t pvh_xen_start_addr,
> >> +                   FWCfgState *fw_cfg)
> >> +{
> >> +    uint32_t flags = 0;
> >> +    uint32_t mh_load_addr = 0;
> >> +    uint32_t elf_kernel_size = 0;
> >> +    uint64_t elf_entry;
> >> +    uint64_t elf_low, elf_high;
> >> +    int kernel_size;
> >> +
> >> +    if (ldl_p(header) != 0x464c457f) {
> >> +        return false; /* no elfboot */
> >> +    }
> >> +
> >> +    bool elf_is64 = header[EI_CLASS] == ELFCLASS64;
> >> +    flags = elf_is64 ?
> >> +        ((Elf64_Ehdr *)header)->e_flags : ((Elf32_Ehdr *)header)->e_flags;
> >> +
> >> +    if (flags & 0x00010004) { /* LOAD_ELF_HEADER_HAS_ADDR */
> >> +        error_report("elfboot unsupported flags = %x", flags);
> >> +        exit(1);
> >> +    }
> >> +
> >> +    kernel_size = load_elf(kernel_filename, NULL, NULL, &elf_entry,
> >> +                           &elf_low, &elf_high, 0, I386_ELF_MACHINE,
> >> +                           0, 0);
> >> +
> >> +    if (kernel_size < 0) {
> >> +        error_report("Error while loading elf kernel");
> >> +        exit(1);
> >> +    }
> >> +    mh_load_addr = elf_low;
> >> +    elf_kernel_size = elf_high - elf_low;
> >> +
> >> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_ENTRY, pvh_xen_start_addr);
> >> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_ADDR, mh_load_addr);
> >> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_SIZE, elf_kernel_size);
> >> +
> >> +    return true;
> >> +}
> >> +
> >>   static void load_linux(PCMachineState *pcms,
> >>                          FWCfgState *fw_cfg)
> >>   {
> >> @@ -1138,6 +1183,33 @@ static void load_linux(PCMachineState *pcms,
> >>       if (ldl_p(header+0x202) == 0x53726448) {
> >>           protocol = lduw_p(header+0x206);
> >>       } else {
> >> +        /* If the kernel address for using the x86/HVM direct boot ABI has
> >> +         * been saved then proceed with booting the uncompressed kernel */
> >> +        if (pvh_start_addr) {
> >> +            if (load_elfboot(kernel_filename, kernel_size,
> >> +                             header, pvh_start_addr, fw_cfg)) {
> >> +                struct hvm_modlist_entry ramdisk_mod = { 0 };
> >> +
> >> +                fclose(f);
> >> +
> >> +                fw_cfg_add_i32(fw_cfg, FW_CFG_CMDLINE_SIZE,
> >> +                    strlen(kernel_cmdline) + 1);
> >> +                fw_cfg_add_string(fw_cfg, FW_CFG_CMDLINE_DATA, kernel_cmdline);
> >> +
> >> +                assert(machine->device_memory != NULL);
> >> +                ramdisk_mod.paddr = machine->device_memory->base;
> >> +                ramdisk_mod.size =
> >> +                    memory_region_size(&machine->device_memory->mr);
> >> +
> >> +                fw_cfg_add_bytes(fw_cfg, FW_CFG_KERNEL_DATA, &ramdisk_mod,
> >> +                                 sizeof(ramdisk_mod));
> >> +                fw_cfg_add_i32(fw_cfg, FW_CFG_SETUP_SIZE, sizeof(header));
> >> +                fw_cfg_add_bytes(fw_cfg, FW_CFG_SETUP_DATA,
> >> +                                 header, sizeof(header));
> >> +
> >> +                return;
> >> +            }
> >> +        }
> >>           /* This looks like a multiboot kernel. If it is, let's stop
> >>              treating it like a Linux kernel. */
> >>           if (load_multiboot(fw_cfg, f, kernel_filename, initrd_filename,
> >> --
> >> 1.8.3.1
> >>
> >
>


-- 
Stefano Garzarella
Red Hat

