Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 22:12:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EB14158061F
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 06:08:29 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 06:08:29 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJ/nC0BNJBEN7RGJSxg8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z/oMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRthfVyJBDI2/?=
 =?us-ascii?q?YYUAAeUOMuREoIfyulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9EgzLxhAsE84AvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjNdfNW2Tb56IjJahAhue+DUqp3f8XL1UkvFwLFgUuN?=
 =?us-ascii?q?qYD8MT2azPkNvHWB6OF9Uu+vk24nqwB1ojiq28ghkZPJiZwIxVDE7yp53Jw5Ks?=
 =?us-ascii?q?G/SE5+eNOpFoZbuSKCN4ZuXM8uX2JltDwnxrEbupO3ZjYGxZonyhLFdvCKcZCE?=
 =?us-ascii?q?7g/nWeuROzt0mXNodbOlixqv70StyPfwWtep3FpWqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3T7uBEIVsolarAMZIhzbgwlocJvUTEBC/2l136jK6Qdko65uil?=
 =?us-ascii?q?8/rrbqnlq5OGKoN4lwLzPr4wlsGxAek0KBUCUmqD9eS5zrLj/En5QLtQjv0xl6?=
 =?us-ascii?q?nUqInaKtoepq6kGgNaz5gs6wihADeiydgXhn4HLE9DeB2bkYfpIFbCIPT5Dfe8?=
 =?us-ascii?q?nVugijhqx+3eM73lA5XNKGXDkbj7cbZ87U5c1BQ8zdRF651IDbEBJen+Wkn2tN?=
 =?us-ascii?q?zeAR85NRG0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKu1l2cerxlVfXUSJPf23gGO?=
 =?us-ascii?q?U45yonE8SgCoHMQJ3rh6aOmyKyH5lTb2YBDUiQEHDubMKdVvIRLS6fPMJlwQEC?=
 =?us-ascii?q?TqWrHooo1BWys13jxr96a+bZ5CAc8IjuzcV4/PH7kxY0+jppScOH3DaWUmt2k2?=
 =?us-ascii?q?gUEiIwx711ukdny12OgpR/1tlRD9cWzvVFSIYNEYPGwuVnQ4T3UxjKd9GFUlvg?=
 =?us-ascii?q?Rsi8DDgsZsg8z98HfwB2HND0ylji0C2wS5ockrmGCJsquvbd2nH0IstxzF7c2a?=
 =?us-ascii?q?UhhkVgScxKYz6InKl6ojDTBorIi12UoIOjaaQd0TOI2G6ewevG6FlYUQp1XY3f?=
 =?us-ascii?q?UHwfb1eQptP8sBCRB4SyAKgqZ1MSgfWJLbFHP5iw1Q1L?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BnAAC9ZhJcmBHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZQKBL4JPE4N8iHiNEy18lmyBXxIBARgUh0QiOBIBAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQEBCAsLBhsOL0IBDgGBZAUCAxoBBoJbAQEBAQIBAQIgBAsBEwopAwMBA?=
 =?us-ascii?q?gYBAQoYAgIiBAICAwEwAQUBDgENBgEMBgIBAQGDHIF0BQgBAwGbMjyLDXwziSO?=
 =?us-ascii?q?BDRJ5iGmCSBeBf4ERJ4I2NYRqgxuCVwKJP4Fzik6LDwmRUwYYiWwQh06JLo90A?=
 =?us-ascii?q?gQCBAUCBQ8hgTyBdzMiGxWDJ4InF44ecYEHgymHKIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BnAAC9ZhJcmBHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBZQK?=
 =?us-ascii?q?BL4JPE4N8iHiNEy18lmyBXxIBARgUh0QiOBIBAwEBAQEBAQIBEwEBAQEBCAsLB?=
 =?us-ascii?q?hsOL0IBDgGBZAUCAxoBBoJbAQEBAQIBAQIgBAsBEwopAwMBAgYBAQoYAgIiBAI?=
 =?us-ascii?q?CAwEwAQUBDgENBgEMBgIBAQGDHIF0BQgBAwGbMjyLDXwziSOBDRJ5iGmCSBeBf?=
 =?us-ascii?q?4ERJ4I2NYRqgxuCVwKJP4Fzik6LDwmRUwYYiWwQh06JLo90AgQCBAUCBQ8hgTy?=
 =?us-ascii?q?BdzMiGxWDJ4InF44ecYEHgymHKIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="66671527"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 06:08:28 -0800
Received: from localhost ([::1]:52840 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXRf9-0002Qv-Hl
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 09:08:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:48514)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXRdD-00013N-7A
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:06:29 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXRd8-0000Yx-Ah
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:06:27 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:39093)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gXRd7-0000VV-TD
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:06:22 -0500
Received: by mail-wm1-f68.google.com with SMTP id f81so2502833wmd.4
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 06:06:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=7HV5mccNpS32XeAnI/C9Nox3wX/Xc1r9kwLX84Y+rhM=;
	b=qupNIeYxD0iMwPKcVjfkqudGz5qc2e9KObxTDQUg+wgA2TA+K2Zotl4K0ixkDP+UdN
	7HfyLQrSFYCZ+ge9yNbdExL7pLHhHYTpvUYTROJMx3tGHKFU4kS7yacJfQlaXVUEo6kM
	jkbpws7JW6aCltIToU8re9QM/oZhMMqhy+Gt3DO5Ih22O2L635GhPTM8dR/HbpNy1LLt
	RdU2zZgsuBXYwFPpoKRkEltuljiYmzsO+7T03c4l99IbyVCdh8I5QmLneUOlg/w9RnEB
	6z6MDOtO+7oYIsbdIuC7OPjtqAyx2WbhleYGsbvP8jHIfpLlstXOddCwSX7TxDWug9ID
	taCw==
X-Gm-Message-State: AA+aEWavNnozaT5zUfKGDG1V74aMJ82zNt4Wfp1NSYbnuoSN+j/UFlsz
	P0HsUj5mjfEkaLLhAAnp23g4ZQ==
X-Google-Smtp-Source: AFSGD/XID4zH5fei3Sug6FCF2PQIXz0cpy/9GND1j0o2B0paduD8ElXke/WLp5IGlVoNUcfzOqrFQw==
X-Received: by 2002:a1c:c008:: with SMTP id q8mr9390819wmf.99.1544709980556;
	Thu, 13 Dec 2018 06:06:20 -0800 (PST)
Received: from [10.201.33.118] ([195.166.127.210])
	by smtp.gmail.com with ESMTPSA id o4sm1966158wmh.40.2018.12.13.06.06.19
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 13 Dec 2018 06:06:19 -0800 (PST)
To: =?UTF-8?Q?Marc-Andr=c3=a9_Lureau?= <marcandre.lureau@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>
References: <20180910083222.8245-1-marcandre.lureau@redhat.com>
	<20180910083222.8245-7-marcandre.lureau@redhat.com>
	<62b5734c-c23e-cfc2-701e-45692a7f1bd1@redhat.com>
	<20181213130130.40a31420@redhat.com>
	<CAMxuvayALT-jFsQxjLuO18Gz8y3444ZtJLx0wt4GzpV3nnUbnQ@mail.gmail.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <de219992-ad90-ab51-6670-19d61709c5d9@redhat.com>
Date: Thu, 13 Dec 2018 15:06:17 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <CAMxuvayALT-jFsQxjLuO18Gz8y3444ZtJLx0wt4GzpV3nnUbnQ@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.68
Subject: Re: [Qemu-devel] [PATCH v12 6/6] tpm: add ACPI memory clear
 interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>,
	Stefan Berger <stefanb@linux.vnet.ibm.com>,
	"Michael S . Tsirkin" <mst@redhat.com>,
	qemu-devel <qemu-devel@nongnu.org>, "Bonzini,
	Paolo" <pbonzini@redhat.com>, Laszlo Ersek <lersek@redhat.com>,
	Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/13/18 1:18 PM, Marc-André Lureau wrote:
> On Thu, Dec 13, 2018 at 4:01 PM Igor Mammedov <imammedo@redhat.com> wrote:
>>
>> On Wed, 12 Dec 2018 17:22:21 +0100
>> Philippe Mathieu-Daudé <philmd@redhat.com> wrote:
>>
>>> On 9/10/18 10:32 AM, Marc-André Lureau wrote:
>>>> This allows to pass the last failing test from the Windows HLK TPM 2.0
>>>> TCG PPI 1.3 tests.
>>>>
>>>> The interface is described in the "TCG Platform Reset Attack
>>>> Mitigation Specification", chapter 6 "ACPI _DSM Function". According
>>>> to Laszlo, it's not so easy to implement in OVMF, he suggested to do
>>>> it in qemu instead.
>>>>
>>>> Signed-off-by: Marc-André Lureau <marcandre.lureau@redhat.com>
>>>> ---
>>>>  hw/tpm/tpm_ppi.h     |  2 ++
>>>>  hw/i386/acpi-build.c | 46 ++++++++++++++++++++++++++++++++++++++++++++
>>>>  hw/tpm/tpm_crb.c     |  1 +
>>>>  hw/tpm/tpm_ppi.c     | 22 +++++++++++++++++++++
>>>>  hw/tpm/tpm_tis.c     |  1 +
>>>>  docs/specs/tpm.txt   |  2 ++
>>>>  hw/tpm/trace-events  |  3 +++
>>>>  7 files changed, 77 insertions(+)
>>>>
>>>> diff --git a/hw/tpm/tpm_ppi.h b/hw/tpm/tpm_ppi.h
>>>> index c2ab2ed300..b8f67962c7 100644
>>>> --- a/hw/tpm/tpm_ppi.h
>>>> +++ b/hw/tpm/tpm_ppi.h
>>>> @@ -23,4 +23,6 @@ typedef struct TPMPPI {
>>>>  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
>>>>                    hwaddr addr, Object *obj, Error **errp);
>>>>
>>>
>>> Can you add documentation?
>>>
>>>> +void tpm_ppi_reset(TPMPPI *tpmppi);
>>>> +
>>>>  #endif /* TPM_TPM_PPI_H */
>>>> diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
>>>> index c5e9a6e11d..2ab3e8fae7 100644
>>>> --- a/hw/i386/acpi-build.c
>>>> +++ b/hw/i386/acpi-build.c
>>>> @@ -1824,6 +1824,13 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
>>>>      pprq = aml_name("PPRQ");
>>>>      pprm = aml_name("PPRM");
>>>>
>>>> +    aml_append(dev,
>>>> +               aml_operation_region("TPP3", AML_SYSTEM_MEMORY,
>>>> +                                    aml_int(TPM_PPI_ADDR_BASE + 0x15a),
>>>
>>> Can you add a definition for this magic value?
>>> Maybe:
>>>
>>> #define TPM_PPI_MEMORY_OVERWRITE_OFFSET 0x15a
>>>
>>> or
>>>
>>> #define TPM_PPI_MOVV_OFFSET 0x15a
>> I'd prefer explicit numeric values there as it's a bit easier to review
>> and grep in 'spec' since one doesn't have to jump to define definition
>> first to find out value to compare with spec.
>> What I'd add though is verbatim comment from spec like we do
>> in APCI code so we could jump to the field of interest in spec
>> just doing copy&paste&search
> 
> I don't mind.
> Philippe, are you okay going back to numeric values?

Can we have a consensus using:

#define TPM_PPI_MEMORY_OVERWRITE_OFFSET_0x15A 0x15a

Joking!

I prefer definitions but since Igor maintains ACPI, he rules and I have
no problem accepting this numeric value :)

> 
> Igor, is this comment what you would expect where the 0x15a value is used:
> /* 0x15a: movv field in ACPI PPI Interface, see specs/tpm.txt */
> 
> thanks
>>
>>>
>>>> +                                    0x1));
>>>> +    field = aml_field("TPP3", AML_BYTE_ACC, AML_NOLOCK, AML_PRESERVE);
>>>> +    aml_append(field, aml_named_field("MOVV", 8));
>>>> +    aml_append(dev, field);
>>>>      /*
>>>>       * DerefOf in Windows is broken with SYSTEM_MEMORY.  Use a dynamic
>>>>       * operation region inside of a method for getting FUNC[op].
>>>> @@ -2166,7 +2173,46 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
>>>>              aml_append(ifctx, aml_return(aml_buffer(1, zerobyte)));
>>>>          }
>>>>          aml_append(method, ifctx);
>>>> +
>>>> +        ifctx = aml_if(
>>>> +            aml_equal(uuid,
>>>> +                      aml_touuid("376054ED-CC13-4675-901C-4756D7F2D45D")));
>>>> +        {
>>>> +            /* standard DSM query function */
>>>> +            ifctx2 = aml_if(aml_equal(function, zero));
>>>> +            {
>>>> +                uint8_t byte_list[1] = { 0x03 };
>>>> +                aml_append(ifctx2, aml_return(aml_buffer(1, byte_list)));
>>>> +            }
>>>> +            aml_append(ifctx, ifctx2);
>>>> +
>>>> +            /*
>>>> +             * TCG Platform Reset Attack Mitigation Specification 1.0 Ch.6
>>>> +             *
>>>> +             * Arg 2 (Integer): Function Index = 1
>>>> +             * Arg 3 (Package): Arguments = Package: Type: Integer
>>>> +             *                  Operation Value of the Request
>>>> +             * Returns: Type: Integer
>>>> +             *          0: Success
>>>> +             *          1: General Failure
>>>> +             */
>>>> +            ifctx2 = aml_if(aml_equal(function, one));
>>>> +            {
>>>> +                aml_append(ifctx2,
>>>> +                           aml_store(aml_derefof(aml_index(arguments, zero)),
>>>> +                                     op));
>>>> +                {
>>>> +                    aml_append(ifctx2, aml_store(op, aml_name("MOVV")));
>>>> +
>>>> +                    /* 0: success */
>>>> +                    aml_append(ifctx2, aml_return(zero));
>>>> +                }
>>>> +            }
>>>> +            aml_append(ifctx, ifctx2);
>>>> +        }
>>>> +        aml_append(method, ifctx);
>>>>      }
>>>> +
>>>>      aml_append(dev, method);
>>>>  }
>>>>
>>>> diff --git a/hw/tpm/tpm_crb.c b/hw/tpm/tpm_crb.c
>>>> index b243222fd6..48f6a716ad 100644
>>>> --- a/hw/tpm/tpm_crb.c
>>>> +++ b/hw/tpm/tpm_crb.c
>>>> @@ -233,6 +233,7 @@ static void tpm_crb_reset(void *dev)
>>>>  {
>>>>      CRBState *s = CRB(dev);
>>>>
>>>> +    tpm_ppi_reset(&s->ppi);
>>>>      tpm_backend_reset(s->tpmbe);
>>>>
>>>>      memset(s->regs, 0, sizeof(s->regs));
>>>> diff --git a/hw/tpm/tpm_ppi.c b/hw/tpm/tpm_ppi.c
>>>> index f2f07f895e..ac05ba8d3c 100644
>>>> --- a/hw/tpm/tpm_ppi.c
>>>> +++ b/hw/tpm/tpm_ppi.c
>>>> @@ -16,8 +16,30 @@
>>>>  #include "qapi/error.h"
>>>>  #include "cpu.h"
>>>>  #include "sysemu/memory_mapping.h"
>>>> +#include "sysemu/reset.h"
>>>>  #include "migration/vmstate.h"
>>>>  #include "tpm_ppi.h"
>>>> +#include "trace.h"
>>>> +
>>>> +void tpm_ppi_reset(TPMPPI *tpmppi)
>>>> +{
>>>> +    if (tpmppi->buf[0x15a] & 0x1) {
>>>
>>> TPM_PPI_MOVV_OFFSET
>>>
>>>> +        GuestPhysBlockList guest_phys_blocks;
>>>> +        GuestPhysBlock *block;
>>>> +
>>>> +        guest_phys_blocks_init(&guest_phys_blocks);
>>>> +        guest_phys_blocks_append(&guest_phys_blocks);
>>>> +        QTAILQ_FOREACH(block, &guest_phys_blocks.head, next) {
>>>> +            trace_tpm_ppi_memset(block->host_addr,
>>>> +                             block->target_end - block->target_start);
>>>> +            memset(block->host_addr, 0,
>>>> +                   block->target_end - block->target_start);
>>>> +            memory_region_set_dirty(block->mr, 0,
>>>> +                                    block->target_end - block->target_start);
>>>> +        }
>>>> +        guest_phys_blocks_free(&guest_phys_blocks);
>>>> +    }
>>>> +}
>>>>
>>>>  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
>>>>                    hwaddr addr, Object *obj, Error **errp)
>>>> diff --git a/hw/tpm/tpm_tis.c b/hw/tpm/tpm_tis.c
>>>> index 70432ffe8b..d9bfa956cc 100644
>>>> --- a/hw/tpm/tpm_tis.c
>>>> +++ b/hw/tpm/tpm_tis.c
>>>> @@ -868,6 +868,7 @@ static void tpm_tis_reset(DeviceState *dev)
>>>>      s->be_buffer_size = MIN(tpm_backend_get_buffer_size(s->be_driver),
>>>>                              TPM_TIS_BUFFER_MAX);
>>>>
>>>> +    tpm_ppi_reset(&s->ppi);
>>>>      tpm_backend_reset(s->be_driver);
>>>>
>>>>      s->active_locty = TPM_TIS_NO_LOCALITY;
>>>> diff --git a/docs/specs/tpm.txt b/docs/specs/tpm.txt
>>>> index 332c2ae597..ce9bda3c89 100644
>>>> --- a/docs/specs/tpm.txt
>>>> +++ b/docs/specs/tpm.txt
>>>> @@ -121,6 +121,8 @@ layout:
>>>>   +----------+--------+--------+-------------------------------------------+
>>>>   | next_step|   0x1  |  0x159 | Operation to execute after reboot by      |
>>>>   |          |        |        | firmware. Used by firmware.               |
>>>> + +----------+--------+--------+-------------------------------------------+
>>>> + | movv     |   0x1  |  0x15a | Memory overwrite variable                 |
>>>>   +----------+--------+--------+-------------------------------------------+
>>>>
>>>>     The following values are supported for the 'func' field. They correspond
>>>> diff --git a/hw/tpm/trace-events b/hw/tpm/trace-events
>>>> index 25bee0cecf..920d32ad55 100644
>>>> --- a/hw/tpm/trace-events
>>>> +++ b/hw/tpm/trace-events
>>>> @@ -51,3 +51,6 @@ tpm_tis_mmio_write_init_abort(void) "Initiating abort"
>>>>  tpm_tis_mmio_write_lowering_irq(void) "Lowering IRQ"
>>>>  tpm_tis_mmio_write_data2send(uint32_t value, unsigned size) "Data to send to TPM: 0x%08x (size=%d)"
>>>>  tpm_tis_pre_save(uint8_t locty, uint32_t rw_offset) "locty: %d, rw_offset = %u"
>>>> +
>>>> +# hw/tpm/tpm_ppi.c
>>>> +tpm_ppi_memset(uint8_t *ptr, size_t size) "memset: %p %zu"
>>>>
>>>
>>> I'd split this patch in 2: Add ACPI, Add tpm_ppi_reset.
>>

