Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 12:56:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 080FB58028E;
	Mon, 10 Dec 2018 19:56:31 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 19:56:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANBWD2hx0ifX8sCbXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0eMUKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwB+7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nattX1NKYWUeuo0KfH0zTDYO5L0jr68IjIaA4uofCRUr9rb8XRzVcgGB/ZjlWK?=
 =?us-ascii?q?rozlOima1usXv2eH6OpgUPijhHQ6qwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt0uT31mtSogxLAKpYS3cScLxZg92hLSZPyKfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/XiVsm7zllKtDBJktrSuXAX0Rzc9MyHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz7oqmpYOv0nPADX6lFj1gaOKbEkp++ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/BeU4Mg4TX2mU4Oi816Ps/Vf/QLpUiv06i6?=
 =?us-ascii?q?7ZsZ7cJcsFvK60GBFV0ok95BalFTum08oXnWMBLF1bfBKLlY/pO0vBIPzgF/ew?=
 =?us-ascii?q?n0yskCt3x/DBJrDhBpTNLnvdn7v7crd99lVRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biEN99zJ8RWXqTAq+FN6PfqV+I6fguI+mQfoAVvyzxK/g45/H0?=
 =?us-ascii?q?i385lkQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EICmDYDdSYy3g7yB2yG7HptRZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddv/O3TlRYy9T9uA8SHyW6NTXp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUFWm?=
 =?us-ascii?q?Tc+gAT0rStIxwsUBY0ByG9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCoHUiUqZibileb4c3CHX8meD1nSBvEdfXA50UqXF?=
 =?us-ascii?q?WHQfa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ADyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyl0HFe439LRF9qApwpgcL9AYd?=
 =?us-ascii?q?8n51dHz2bZtw17PpyvNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23caHW3k/R0dmI9aYP8vg3sEjjsxyzGUok8HVn1MdV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?MaOZFAPoD8IWHcmvKOwwlFivYRIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr8llahvdztloBeeD4SGXCzyS76C45LZ61+?=
 =?us-ascii?q?ZJoEBn2qI8Kq2Np+nZntW3hD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZLRWljl1vtIZK4j8sHXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSL7yuQEa0yDgH2?=
 =?us-ascii?q?tZ3jw7bCulupb6nxx7jmKSMnBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzIOauyu8/2FqAxy/n/aol93jEAg61zL71t?=
 =?us-ascii?q?ZwWSXJqhb8fpfk16CgPe17eUloAUf269BmFYFmjoswmJYQ1GAZhpqP/HoLi2fz?=
 =?us-ascii?q?MchB1qL4Y3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4qAPRYftnkTsHx/oh9mUag/0Xtwo31SqSHKoSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WXv6oHjfd?=
 =?us-ascii?q?ncd9MSuQeSkxfdlOhVM5Mxm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b0Ju1EZVmHjULQYHkTfa1ED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTU4hJE5Ex6lxNf7?=
 =?us-ascii?q?fEdl/DwR5UP4qhhRyuJuLRb/SXzSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1DiPr6z5dnZ7uiXHOy+I+HVYbWJr+xeWOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C//+rqWALs5ouPCqFeMdZ1+xCxjqeMKfSQhDtiKTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNMHBl9P6zaR4geA1CltfUV?=
 =?us-ascii?q?zhm9qkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwyvMeBJjC2BIBNSop2ychZzBmjlV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB7+jXMJAWsf5qAiRyj+1b4XQ6xKFT?=
 =?us-ascii?q?7CFLX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaCKvqVHDF/C5xULpU?=
 =?us-ascii?q?WNAhIF749sDMboveZQ19HJm4r1OC8E+NXRq49UTcrVI5jcGHksKxzkHHjTFgRP?=
 =?us-ascii?q?BWqpNGqF3GReneuU+3nTqYI1/Nyk0pkIQ7ZQVxo1PvwfGgJpEZZKdJRxVzovkv?=
 =?us-ascii?q?ibpMEN9TyyoU+VDI9et4rcfvefHfzhLzHfgbQOL08MyKnjBYEeKoT13EskZlQs?=
 =?us-ascii?q?2MyAA0/dUMpSijVkYwIuvwNL/WQ0Bjkr3k/ocByF+HoeGOSr2Bg7ll06Ka438z?=
 =?us-ascii?q?3soFsrDlnHvi09lA82g9qvyWSLdzTxb6usdYJbESz5sw42KJytB04/aASongp+?=
 =?us-ascii?q?KSvATrRdp7J6cCZgjwqW8c9KEORfC7dZfBsZw/2/bu8tl19br3PjjQVD5O3YGd?=
 =?us-ascii?q?5jlQwCb5GhtTRD1hhlYdpzIrbfbuIdyllWm7LLvy6v/v4+zRVYJEsX9m6WPikS?=
 =?us-ascii?q?txpMfvMqKjSp9eFw8wGPsyVMdXJKVPcwpP9usEQnNK7Imy7tzb9IJ1yrOuG3Ma?=
 =?us-ascii?q?yUoS7DmNSOT1d20VkHwQ0Nt7x319ozNkmZTUYiyJOPGBkTc8nPMwdYa4xV7neZ?=
 =?us-ascii?q?NXKKsOPQ0dd2Mp+7G+TAU+CDruAXj1iiEQJvGJ4DuIBJVJehy13VM87iBLEAwB?=
 =?us-ascii?q?Qpog/sIR/NWPpEYw6Gjj4Ci866xZ5zm4JaI2dOL396NHCP5rfT7jUngfbLCM8s?=
 =?us-ascii?q?b3YWdoYAO3kqQsq/kiEftHNFSjCqhLFKgDOe5iPx83yDRAL3aMBuMbLNPUth?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAACdNA9ch0O0hNFdBxoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVMDAQEBAQsBg1QFEieDe5QpgWAIJRSIfo4/gXMsEwGEQAKDKyI?=
 =?us-ascii?q?2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYQEBAQECAQECIAQLAQVBBgYDA?=
 =?us-ascii?q?QEKEQQBAQECAiMDAgIDHiUJCAYBDAYCAQEBgxyBagMNBwEFpgB8MxqDZwEBgT2?=
 =?us-ascii?q?CRA2CHIELixYXgUA/gREnDIFCgR2CV4IOCYMXglcCiS+HClKPPC4JgQKJQYNdg?=
 =?us-ascii?q?ykegVyFF4MXA4Q4gniHeIEqhgGDJIg1AYIHMxoIFxmDJ4InFxKNVAFDMzKBBQE?=
 =?us-ascii?q?BiBIpgiQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0APAACdNA9ch0O0hNFdBxoBAQEBAQIBAQEBBwIBAQEBgVM?=
 =?us-ascii?q?DAQEBAQsBg1QFEieDe5QpgWAIJRSIfo4/gXMsEwGEQAKDKyI2Bw0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpL4I2JAGCYQEBAQECAQECIAQLAQVBBgYDAQEKEQQBAQECAiM?=
 =?us-ascii?q?DAgIDHiUJCAYBDAYCAQEBgxyBagMNBwEFpgB8MxqDZwEBgT2CRA2CHIELixYXg?=
 =?us-ascii?q?UA/gREnDIFCgR2CV4IOCYMXglcCiS+HClKPPC4JgQKJQYNdgykegVyFF4MXA4Q?=
 =?us-ascii?q?4gniHeIEqhgGDJIg1AYIHMxoIFxmDJ4InFxKNVAFDMzKBBQEBiBIpgiQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="66219571"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 10 Dec 2018 19:56:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730055AbeLKD4N (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 22:56:13 -0500
Received: from anchovy1.45ru.net.au ([203.30.46.145]:55834 "EHLO
        anchovy1.45ru.net.au" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728751AbeLKD4M (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 22:56:12 -0500
Received: (qmail 11471 invoked by uid 5089); 11 Dec 2018 03:56:10 -0000
Received: by simscan 1.2.0 ppid: 11326, pid: 11328, t: 0.0472s
         scanners: regex: 1.2.0 attach: 1.2.0 clamav: 0.88.3/m:40/d:1950
Received: from unknown (HELO ?192.168.0.122?) (preid@electromag.com.au@203.59.235.95)
  by anchovy1.45ru.net.au with ESMTPA; 11 Dec 2018 03:56:10 -0000
Subject: Re: [PATCH V4 2/2] iio: light: isl29018: add optional vdd/vdda
 regulator operation support
To: Anson Huang <anson.huang@nxp.com>,
        "jic23@kernel.org" <jic23@kernel.org>,
        "knaack.h@gmx.de" <knaack.h@gmx.de>,
        "lars@metafoo.de" <lars@metafoo.de>,
        "pmeerw@pmeerw.net" <pmeerw@pmeerw.net>,
        "robh+dt@kernel.org" <robh+dt@kernel.org>,
        "mark.rutland@arm.com" <mark.rutland@arm.com>,
        "linux-iio@vger.kernel.org" <linux-iio@vger.kernel.org>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "festevam@gmail.com" <festevam@gmail.com>
Cc: dl-linux-imx <linux-imx@nxp.com>
References: <1544498291-2716-1-git-send-email-Anson.Huang@nxp.com>
 <1544498291-2716-2-git-send-email-Anson.Huang@nxp.com>
 <d07b5970-5825-2ea6-9e27-538386927923@electromag.com.au>
 <DB3PR0402MB39161ED492C863BB48D48E2FF5A60@DB3PR0402MB3916.eurprd04.prod.outlook.com>
From: Phil Reid <preid@electromag.com.au>
Message-ID: <0b08c0d1-afe2-5ade-9333-2eb7d57d4db6@electromag.com.au>
Date: Tue, 11 Dec 2018 11:56:09 +0800
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <DB3PR0402MB39161ED492C863BB48D48E2FF5A60@DB3PR0402MB3916.eurprd04.prod.outlook.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-AU
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

G'day Anson,

Just pulled up the datasheet for this chip.

The absolute max for Vdda is speced as Vddd +/-0.5
With a note that Vdda should be externally shorted to Vddd.


On 11/12/2018 11:43 am, Anson Huang wrote:
> Hi, Phil
> 
> Best Regards!
> Anson Huang
> 
>> -----Original Message-----
>> From: Phil Reid [mailto:preid@electromag.com.au]
>> Sent: 2018年12月11日 11:36
>> To: Anson Huang <anson.huang@nxp.com>; jic23@kernel.org;
>> knaack.h@gmx.de; lars@metafoo.de; pmeerw@pmeerw.net;
>> robh+dt@kernel.org; mark.rutland@arm.com; linux-iio@vger.kernel.org;
>> devicetree@vger.kernel.org; linux-kernel@vger.kernel.org;
>> festevam@gmail.com
>> Cc: dl-linux-imx <linux-imx@nxp.com>
>> Subject: Re: [PATCH V4 2/2] iio: light: isl29018: add optional vdd/vdda
>> regulator operation support
>>
>> On 11/12/2018 11:24 am, Anson Huang wrote:
>>> The light sensor's power supply could be controlled by regulator on
>>> some platforms, such as i.MX6Q-SABRESD board, the light sensor
>>> isl29023's power supply is controlled by a GPIO fixed regulator, need
>>> to make sure the regulator is enabled before any operation of sensor,
>>> this patch adds optional vdd/vdda regulator operation support.
>>>
>>> Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
>>> ---
>>> ChangeLog since V3:
>>> 	- improve the error handling of devm_regulator_get_optional;
>>> 	- make sure regulators are disabled in error path.
>>> ---
>>>    drivers/iio/light/isl29018.c | 83
>> ++++++++++++++++++++++++++++++++++++++++++--
>>>    1 file changed, 80 insertions(+), 3 deletions(-)
>>>
>>> diff --git a/drivers/iio/light/isl29018.c
>>> b/drivers/iio/light/isl29018.c index b45400f..a21652b 100644
>>> --- a/drivers/iio/light/isl29018.c
>>> +++ b/drivers/iio/light/isl29018.c
>>> @@ -23,6 +23,7 @@
>>>    #include <linux/mutex.h>
>>>    #include <linux/delay.h>
>>>    #include <linux/regmap.h>
>>> +#include <linux/regulator/consumer.h>
>>>    #include <linux/slab.h>
>>>    #include <linux/iio/iio.h>
>>>    #include <linux/iio/sysfs.h>
>>> @@ -95,6 +96,8 @@ struct isl29018_chip {
>>>    	struct isl29018_scale	scale;
>>>    	int			prox_scheme;
>>>    	bool			suspended;
>>> +	struct regulator	*vdd_reg;
>>> +	struct regulator	*vdda_reg;
>>>    };
>>>
>>>    static int isl29018_set_integration_time(struct isl29018_chip *chip,
>>> @@ -735,6 +738,34 @@ static int isl29018_probe(struct i2c_client
>>> *client,
>>>
>>>    	mutex_init(&chip->lock);
>>>
>>> +	chip->vdd_reg = devm_regulator_get_optional(&client->dev, "vdd");
>>> +	if (!IS_ERR(chip->vdd_reg)) {
>>> +		err = regulator_enable(chip->vdd_reg);
>>> +		if (err) {
>>> +			dev_err(&client->dev, "failed to enable VDD regulator\n");
>>> +			return err;
>>> +		}
>>> +	} else {
>>> +		err = PTR_ERR(chip->vdd_reg);
>>> +		if (err != -ENODEV)
>>> +			return err;
>>> +	}
>>> +
>>> +	chip->vdda_reg = devm_regulator_get_optional(&client->dev, "vdda");
>>> +	if (!IS_ERR(chip->vdda_reg)) {
>>> +		err = regulator_enable(chip->vdda_reg);
>>> +		if (err) {
>>> +			dev_err(&client->dev, "failed to enable VDDA regulator\n");
>>> +			if (!IS_ERR(chip->vdd_reg))
>>> +				regulator_disable(chip->vdd_reg);
>>> +			return err;
Not sure about this case at the call to enable failed so I think
you only want the first one to be disabled.
You could add another goto statement thou, see below.


>>> +		}
>>> +	} else {
>>> +		err = PTR_ERR(chip->vdda_reg);
>>> +		if (err != -ENODEV)
>>> +			return err;
>> maybe goto disable_regulators; to disable vdd.
> 
> Agree, I will use " goto disable_regulators;" in both here and upper regulator enable fail case.
> Please help review V5, thanks.

Here its safe to call both as vdda_reg will be an error ptr.

> 
> Anson
> 
>>
>>> +	}
>>> +
>>>    	chip->type = dev_id;
>>>    	chip->calibscale = 1;
>>>    	chip->ucalibscale = 0;
>>> @@ -747,12 +778,12 @@ static int isl29018_probe(struct i2c_client *client,
>>>    	if (IS_ERR(chip->regmap)) {
>>>    		err = PTR_ERR(chip->regmap);
>>>    		dev_err(&client->dev, "regmap initialization fails: %d\n", err);
>>> -		return err;
>>> +		goto disable_regulators;
>>>    	}
>>>
>>>    	err = isl29018_chip_init(chip);
>>>    	if (err)
>>> -		return err;
>>> +		goto disable_regulators;
>>>
>>>    	indio_dev->info = isl29018_chip_info_tbl[dev_id].indio_info;
>>>    	indio_dev->channels = isl29018_chip_info_tbl[dev_id].channels;
>>> @@ -761,13 +792,24 @@ static int isl29018_probe(struct i2c_client *client,
>>>    	indio_dev->dev.parent = &client->dev;
>>>    	indio_dev->modes = INDIO_DIRECT_MODE;
>>>
>>> -	return devm_iio_device_register(&client->dev, indio_dev);
>>> +	err = devm_iio_device_register(&client->dev, indio_dev);
>>> +	if (!err)
>>> +		return 0;
>>> +
>>> +disable_regulators:
>>> +	if (!IS_ERR(chip->vdd_reg))
>>> +		regulator_disable(chip->vdd_reg);
>>> +	if (!IS_ERR(chip->vdda_reg))
>>> +		regulator_disable(chip->vdda_reg);
>>> +
eg: extra label here.
Order is changed thou, which may be a problem.
It's in the reverse order to the enable, which is usually what you want but the
datasheet concerns above may be an issue.


disable_regulators:
	if (!IS_ERR(chip->vdda_reg))
		regulator_disable(chip->vdda_reg);
disable_regulator_vdd:
	if (!IS_ERR(chip->vdd_reg))
		regulator_disable(chip->vdd_reg);

>>> +	return err;
>>>    }
>>>
>> [snip]
>>



-- 
Regards
Phil
