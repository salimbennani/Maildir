Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:07:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8A0995805FC;
	Fri, 14 Dec 2018 09:19:58 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 09:19:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnkfoGxMrNOu6Uuvp96kl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj9psbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xUohyhqBNwzY7PeIGYNuFzcr/ecN4AWWZMRNpdWzBHD4ih?=
 =?us-ascii?q?b4UPFe0BPeNAoofgulsOtwWxBQ+xD+7y0DBIiX/20rAg3OQ6Cw7GxgwhEMgIsH?=
 =?us-ascii?q?/Jq9j1L7oSUfqrw6nO1jrOdPxW2TD66IjHdhAuv+uAUq53ccrU0EQiER7OgFaI?=
 =?us-ascii?q?qYH9IT+ZyuAAv3KG4+duS+6jkXMrpgJtrjS1x8ohiJHFipwUx1za6Sl0xZo5KN?=
 =?us-ascii?q?ilREJnfdKoDJ5duzybOodrXM8vRm9ltSgkxrEavJO2cyYHxZQlyhPaZPGKcZWH?=
 =?us-ascii?q?4hzmWeqPIzp1hWlqdbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gT1xzc9MeHUO?=
 =?us-ascii?q?Fx/kS/1jaV0QDc9OVELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gauMekk59OWk?=
 =?us-ascii?q?9f7rbqjlq5OALYN5iwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj+Uz5QLNXjvw5i6?=
 =?us-ascii?q?XZs47VJd4dpqGnBw9Zy4Ej6hi5Dzi4ytQVhmcHLF1bdxKdlYTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgijBrx+rJPrH5GJXCMmDDkKv9fbZ680NczAszzdNB6J5OBbABPen+WkvwtN?=
 =?us-ascii?q?zeEx84PBa4w+fhCNVhyIweXXiDDbOeMKPXqVWI/P4gI/GQZI8JvzbwM/gl6OTv?=
 =?us-ascii?q?jX8lg1AderOl3ZsKaH+iGPRmLF6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+EIimF5vMRpixgLyd2ye2Bp9WZmdYBVyWEnfocIOEW/ELaC+JJs9hkzoE?=
 =?us-ascii?q?VaWuSoM71BGushP6xKRjLubO5iIYspfj3sBv5+LPjREy6SB0D8OF3m6XVGF0nm?=
 =?us-ascii?q?QIRzws0KBlu0N9yEyO0ax5g/xeCNxS6OlFUgY8NZ7A0eN6D8r+VR7GfteMUFym?=
 =?us-ascii?q?WMmpASktTtItxN8De0V9FM+kjhzZ2yqqAqUal7qEBJEv9qLc3n7xJ9tyynrc1a?=
 =?us-ascii?q?khiUUmTdVLNWG8mqF/8A3TDZbTk0qFj6aqabgc3CnV+Wie12WOol9XXBRwUarf?=
 =?us-ascii?q?W3AffVXZrdL+6kPGTL+uDLAnPxBFyc6DLKtKd9LogU9HRPflJNTRfWaxl32sCh?=
 =?us-ascii?q?aPw7OGdJDqdHkF3CXBFEgElBge8mucOgggGCituWLeAyZoFVL0fUzs9/JzqHe6?=
 =?us-ascii?q?Tk8y0gGLYFdt17uz+h4Jm/OcT+kf0a4DuCcksz90Bkqy38rKC9qcoApsZLlcYd?=
 =?us-ascii?q?I44FdAyWLZtwx8Moa8L6x4gV4eaQB3v0Lo1xV4EYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6PkgsVrjuB+mF0U8/HRnydVayG?=
 =?us-ascii?q?ac6YjQAwoUUpLxVVg3+gN+p7HbZCk9+ozV2WdtMamyrj/NxdYpCPE5xRanetdV?=
 =?us-ascii?q?KLmEGxPqE80GG8iuL/Qnmli0bh4eIO9e7q81P8O8ePuA166mJ+JgnDOgjWRa74?=
 =?us-ascii?q?FxyEOM9yxgSuHW25YJ2e2X3gyCVz3klleurtj3mZxYZTEVBme/0ynkC5JLaa1o?=
 =?us-ascii?q?YIkLDn2iI8upydVkhp7hQmJX+0SnB1wbxsCpYx2Sb1rm0A1U1EQXp2GnmCSiwz?=
 =?us-ascii?q?x1lTEpsrSQ3CjUz+v+cxoHP3ZBRHN+glf0PYi0k9caUVCobggojhek5Vz2x7NG?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdTGloI/5nx95iGKaNnpzt2DWecJzxRfe4tzTW/hR0yECRCl5jznXG1e9?=
 =?us-ascii?q?M8Oo/dWSi5fMrOS+W3i9WZ1UdCnh1ZmAuzej5W12HR2/mOi+m939Hgg9yyP71d?=
 =?us-ascii?q?hqVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr9bHUXRD4H2d7V4BX/101lIXKE3Ib5VnSbwst8aNi2eGIW2iQh789UDK?=
 =?us-ascii?q?eY9qBLnSxwolCgtwLefeB9nisByfsp8HMahuAJuAk3wSmHDLEdA1JYPTDymBSS?=
 =?us-ascii?q?9N+xsr9XZGm0fLi01Up+m82hDb6YrgFdXnb5ZoktHStq4spjN1LM1WX56pv4d9?=
 =?us-ascii?q?nIcdITqhqUng/cj+hSLZI9jPsLijBhOWLgpn0l0O87gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlHykIuvTgMwaODScwqn?=
 =?us-ascii?q?OGGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6zAT/FH4rwVDyvlyOxnjSGvfpxqoajQpSJiZNhVW9RpP50PUMcyY8+JyED?=
 =?us-ascii?q?tU/pynrAyRNGObYx5EAn0OWkyBH1rjJKWh5cHc8+iEAeqzN/vPYbKTqexHSveH?=
 =?us-ascii?q?35Sv3pF9/zaLMMWPMWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKdVv9A63gaeANO6QhTx1KTVC1pMLyn/H1qIf3EMJiyx1?=
 =?us-ascii?q?czmtELIAtTPCTa7Km69XCQIbZD13NMdS86082QxNM9bBitzpzr54kuI1C1BdWF?=
 =?us-ascii?q?P7h8GmftYKLH+9NV/dAEaLNa+LJTnKw8HxfKO9RqdcjORStx2spzmbF1XvMSiE?=
 =?us-ascii?q?lznsTxqvK/1DjDmHPBxCv4GwagptCWnmTN78dhK3KsN4jT0ozr0ynX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyOB5enCNpkWqedrAjhzl+9C4HU10b1V?=
 =?us-ascii?q?7CRFRPxzgCTTr95urEugkumA0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxFZ7+diX9L1tq9TyvDLlaTuODlF7tTY9NcdAM6SL9iIY1Q7Nh+8IyPOAQ1N?=
 =?us-ascii?q?ZzekNW3WnEVHgfiUvimOs4I3rJLEl50JRbtWElcyE6VJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtQ6A=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BGAQC+5BNch0O0hNFkHgEfBgeBTAKBL?=
 =?us-ascii?q?4I7J5gNgiGYZwVKEgEBGBMBh0ciNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMgjY?=
 =?us-ascii?q?igmUDAwECJAsBDQEBNwEFCQEBUAMxAQUBHBkFgxyCAQEEmkY8ih+BbDOCdgEBB?=
 =?us-ascii?q?YcmCBKHa4MlgRwXgUA/h0EChz6JICSHCJBOCYIogxWMEgsYiXOHXyyZDgIEAgQ?=
 =?us-ascii?q?FAgUPIYE7V4EhcBWDJ4InF4NKinQfMoEFAQGNLgEB?=
X-IPAS-Result: =?us-ascii?q?A0BGAQC+5BNch0O0hNFkHgEfBgeBTAKBL4I7J5gNgiGYZwV?=
 =?us-ascii?q?KEgEBGBMBh0ciNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYigmUDAwECJAsBD?=
 =?us-ascii?q?QEBNwEFCQEBUAMxAQUBHBkFgxyCAQEEmkY8ih+BbDOCdgEBBYcmCBKHa4MlgRw?=
 =?us-ascii?q?XgUA/h0EChz6JICSHCJBOCYIogxWMEgsYiXOHXyyZDgIEAgQFAgUPIYE7V4Ehc?=
 =?us-ascii?q?BWDJ4InF4NKinQfMoEFAQGNLgEB?=
X-IronPort-AV: E=Sophos;i="5.56,353,1539673200"; 
   d="scan'208";a="56391003"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 09:19:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730481AbeLNRQk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 12:16:40 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:37479 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730409AbeLNRQY (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 12:16:24 -0500
Received: by mail-pl1-f193.google.com with SMTP id b5so3021390plr.4
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 09:16:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=YwSYAI43KM10GrnM4hZ3Qtd3y6BkTcR7ZHO9M+skX2s=;
        b=akXIWndiUHaos9TbyNLP3xeaC0ZtOOtr3cSf/ilsoUM7WywehoLoqyXEZzuFIORB9M
         OvxzyeHc32Q4lx447L/4jMQROuD8Tpifnb+eTjanco+ff7o+IwZScCVw5XFu71NXZHQx
         h65SJNlG1uCZ+LcxQFWTzPj27rLKDsz7X5nBwYOPjf33icL9nUeUcN8H4DxeA2dJ2CoJ
         u04GoPkgs3B2NaoDOzsMLnvT61RyHEVW0r29CnBfMfhJUd+xuXxPuur/lVVYkfCIPun7
         /axdZ+sXYAdccL5hZ+AL8HqqFeX7QG3R9jGqHbyBu5W6pW9dZ01ISpGwMqGQkIolMen/
         1COA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=YwSYAI43KM10GrnM4hZ3Qtd3y6BkTcR7ZHO9M+skX2s=;
        b=XCCb6+DKaZG3r4usBIIWBVc88tcpt6hAI1TZ/LpZGKCVy6zoclWuLo/4O4KVDeE61f
         4n36AvHFgfeI4gtWuLebRH8zTTyK2Mao9yXDLv4KdCx/RjN+JJhdQpjfQpEspfosnb7/
         LXg0midSKnI9KGJaoaim3EiiQKGCeQCGfKLEkUZljiS+h2VNqyaoj0yO8Q32bFvs1+Dm
         LKuvYH9mcSi8q97crInyV7UZdTyrag4Tj0QcRYK3Of/Uvc6vYnIZNBHpnE2U19sOh6uP
         rsIg8XtrU8uM5rrp+2bVPcCwJcQDrD6goo5ePawv68pr407LOxl3/uMqgUoeXFYb25n9
         R+bg==
X-Gm-Message-State: AA+aEWZiDS97PCIg138I+RJnU/TiNDbISrG7Se9odIQm1C+ok8/NZHxX
        bETQ7TrvwSDC3rOWyS/LpOMGTg==
X-Google-Smtp-Source: AFSGD/UnqpC986vJpvC7OunDuj94mE83rlw4ebocm39rs/p+lo9QYqHHDyqOGddBMnR+LPZQxbTwJQ==
X-Received: by 2002:a17:902:b20e:: with SMTP id t14mr3653918plr.128.1544807783288;
        Fri, 14 Dec 2018 09:16:23 -0800 (PST)
Received: from surenb0.mtv.corp.google.com ([2620:0:1000:1612:3320:4357:47df:276b])
        by smtp.googlemail.com with ESMTPSA id g185sm7605761pfc.174.2018.12.14.09.16.20
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 14 Dec 2018 09:16:21 -0800 (PST)
From: Suren Baghdasaryan <surenb@google.com>
To: gregkh@linuxfoundation.org
Cc: tj@kernel.org, lizefan@huawei.com, hannes@cmpxchg.org,
        axboe@kernel.dk, dennis@kernel.org, dennisszhou@gmail.com,
        mingo@redhat.com, peterz@infradead.org, akpm@linux-foundation.org,
        corbet@lwn.net, cgroups@vger.kernel.org, linux-mm@kvack.org,
        linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
        kernel-team@android.com, Suren Baghdasaryan <surenb@google.com>
Subject: [PATCH 4/6] psi: introduce state_mask to represent stalled psi states
Date: Fri, 14 Dec 2018 09:15:06 -0800
Message-Id: <20181214171508.7791-5-surenb@google.com>
X-Mailer: git-send-email 2.20.0.405.gbc1bbc6f85-goog
In-Reply-To: <20181214171508.7791-1-surenb@google.com>
References: <20181214171508.7791-1-surenb@google.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The psi monitoring patches will need to determine the same states as
record_times(). To avoid calculating them twice, maintain a state mask
that can be consulted cheaply. Do this in a separate patch to keep the
churn in the main feature patch at a minimum.

Signed-off-by: Suren Baghdasaryan <surenb@google.com>
---
 include/linux/psi_types.h |  3 +++
 kernel/sched/psi.c        | 29 +++++++++++++++++++----------
 2 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/include/linux/psi_types.h b/include/linux/psi_types.h
index 2cf422db5d18..2c6e9b67b7eb 100644
--- a/include/linux/psi_types.h
+++ b/include/linux/psi_types.h
@@ -53,6 +53,9 @@ struct psi_group_cpu {
 	/* States of the tasks belonging to this group */
 	unsigned int tasks[NR_PSI_TASK_COUNTS];
 
+	/* Aggregate pressure state derived from the tasks */
+	u32 state_mask;
+
 	/* Period time sampling buckets for each state of interest (ns) */
 	u32 times[NR_PSI_STATES];
 
diff --git a/kernel/sched/psi.c b/kernel/sched/psi.c
index d2b9c9a1a62f..153c0624976b 100644
--- a/kernel/sched/psi.c
+++ b/kernel/sched/psi.c
@@ -212,17 +212,17 @@ static bool test_state(unsigned int *tasks, enum psi_states state)
 static void get_recent_times(struct psi_group *group, int cpu, u32 *times)
 {
 	struct psi_group_cpu *groupc = per_cpu_ptr(group->pcpu, cpu);
-	unsigned int tasks[NR_PSI_TASK_COUNTS];
 	u64 now, state_start;
+	enum psi_states s;
 	unsigned int seq;
-	int s;
+	u32 state_mask;
 
 	/* Snapshot a coherent view of the CPU state */
 	do {
 		seq = read_seqcount_begin(&groupc->seq);
 		now = cpu_clock(cpu);
 		memcpy(times, groupc->times, sizeof(groupc->times));
-		memcpy(tasks, groupc->tasks, sizeof(groupc->tasks));
+		state_mask = groupc->state_mask;
 		state_start = groupc->state_start;
 	} while (read_seqcount_retry(&groupc->seq, seq));
 
@@ -238,7 +238,7 @@ static void get_recent_times(struct psi_group *group, int cpu, u32 *times)
 		 * (u32) and our reported pressure close to what's
 		 * actually happening.
 		 */
-		if (test_state(tasks, s))
+		if (state_mask & (1 << s))
 			times[s] += now - state_start;
 
 		delta = times[s] - groupc->times_prev[s];
@@ -390,15 +390,15 @@ static void record_times(struct psi_group_cpu *groupc, int cpu,
 	delta = now - groupc->state_start;
 	groupc->state_start = now;
 
-	if (test_state(groupc->tasks, PSI_IO_SOME)) {
+	if (groupc->state_mask & (1 << PSI_IO_SOME)) {
 		groupc->times[PSI_IO_SOME] += delta;
-		if (test_state(groupc->tasks, PSI_IO_FULL))
+		if (groupc->state_mask & (1 << PSI_IO_FULL))
 			groupc->times[PSI_IO_FULL] += delta;
 	}
 
-	if (test_state(groupc->tasks, PSI_MEM_SOME)) {
+	if (groupc->state_mask & (1 << PSI_MEM_SOME)) {
 		groupc->times[PSI_MEM_SOME] += delta;
-		if (test_state(groupc->tasks, PSI_MEM_FULL))
+		if (groupc->state_mask & (1 << PSI_MEM_FULL))
 			groupc->times[PSI_MEM_FULL] += delta;
 		else if (memstall_tick) {
 			u32 sample;
@@ -419,10 +419,10 @@ static void record_times(struct psi_group_cpu *groupc, int cpu,
 		}
 	}
 
-	if (test_state(groupc->tasks, PSI_CPU_SOME))
+	if (groupc->state_mask & (1 << PSI_CPU_SOME))
 		groupc->times[PSI_CPU_SOME] += delta;
 
-	if (test_state(groupc->tasks, PSI_NONIDLE))
+	if (groupc->state_mask & (1 << PSI_NONIDLE))
 		groupc->times[PSI_NONIDLE] += delta;
 }
 
@@ -431,6 +431,8 @@ static void psi_group_change(struct psi_group *group, int cpu,
 {
 	struct psi_group_cpu *groupc;
 	unsigned int t, m;
+	enum psi_states s;
+	u32 state_mask = 0;
 
 	groupc = per_cpu_ptr(group->pcpu, cpu);
 
@@ -463,6 +465,13 @@ static void psi_group_change(struct psi_group *group, int cpu,
 		if (set & (1 << t))
 			groupc->tasks[t]++;
 
+	/* Calculate state mask representing active states */
+	for (s = 0; s < NR_PSI_STATES; s++) {
+		if (test_state(groupc->tasks, s))
+			state_mask |= (1 << s);
+	}
+	groupc->state_mask = state_mask;
+
 	write_seqcount_end(&groupc->seq);
 }
 
-- 
2.20.0.405.gbc1bbc6f85-goog

