Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 09:44:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 571CB5807C6
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 17:08:52 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 17:08:52 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AwGC+uRS46by1zJ7+L0nZNxAWjNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBWAt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/ZisJ+kqFVoByuqBNj3oHbYo+aOudmfq7ff90XSndNU8hNWyNfGYOx?=
 =?us-ascii?q?dIQPA/YbMOtCs4XwvUYCoB2jDgesHuPvzTpIi2f406IgzeQhEBzJ1xEhEdIPq3?=
 =?us-ascii?q?vUt9L1NKEPWu2y0abH1yvDb/JL1jrm54jIcwsuoeqLXbJ2a8be1FMvFwTdjlqL?=
 =?us-ascii?q?t4PqJSmV2v4Ms2eG9eZvT/+vhnchpgpsrDavwcIshZPIhoIT0l3E8iR4wIIvKt?=
 =?us-ascii?q?KjU053e9mkEIFfty2CKoR2WMQiQ3lztykk0LIGo4S3fCkXx5kh2hXRaOSHfpCW?=
 =?us-ascii?q?7h7/V+udOyp0iG9mdb6lmRq//0itxvfhWsS2yFpGsCVInsXRun0I2RHe7tSLRu?=
 =?us-ascii?q?d480u/3DuDygXe5+RaLU0yiKHVMYQuwqQqmZoWqUnDHjH5mEHxjKKOckUk+/Oo?=
 =?us-ascii?q?6/j8Yrn8qZ+cMZJ0hhv5MqQ0lcyzGeU4Mg4QUGiH4emwyqHv8E7jTLlXk/E7kb?=
 =?us-ascii?q?PVvI7UKMkbvKK1Hg1Y3p4m6xmlDjem1NoYnWMALFJAYB+HlpbmO1TTIPzhEPiw?=
 =?us-ascii?q?nUqsnylvx/zfJbLhBYjNLn7fn7j/ZrZx7EpcyAswzd9B/Z5VBawBLer3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPfqlmI5uUpI+mDYo8VpSzxK/8/5/7h?=
 =?us-ascii?q?lXM5g0MSfbG13ZsLb3C1BvBmI0SaYXXymNsAHnoKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbzSlBq9BYBcM2BaFkiXQzCvc4SfR+xKbiWULcl81Dse?=
 =?us-ascii?q?Wv+kQo4l0Bio8wji17tgKPGT4yAdqNfv2cZ4477ukwov/2lxBsWZz2bfVmxxgy?=
 =?us-ascii?q?YESiE72OVlrFVgx0yf+a5/hfNeCJpU/fweSRowN5PX07lnDcvvUBnKZNaDRQWa?=
 =?us-ascii?q?RYCNgD0rT9l559JGTEF0B9i4xkTI2yWCALYSm/qMHpNioYzG2H2kC89jynqO+6?=
 =?us-ascii?q?grlF4gCp9DPHOnioZw9gLIAIiPn1+ej6ynfL5a3SKL/XrVnjnGh11RTAMlCfaN?=
 =?us-ascii?q?ZnsYfEaD9dk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAD1DQ9cmBHrdtBkFgMBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgVEEAQEBAQELAYEwKoEPgSmME1+NP3yWVRSBXwINBRgHDYd?=
 =?us-ascii?q?tIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGAmCWwEBAQECAQECJ?=
 =?us-ascii?q?BkBAQQKKQECAgEBAgYBAQoYCQwRCAMBCwUYMRMFBIJNSwGBeQgBBKUVgWwzgnY?=
 =?us-ascii?q?BAQWHHwcIgm2IGIEcF4F/gRGCFEk1hDwfEFWFHIkXUpcOCYIlhGODO4cBCxhgg?=
 =?us-ascii?q?UmPFIMCjX6IMIFGgg4zGggXGTuCbAmCEgwXEm0BAwR9hlqFUy0xgQQDiVBVgXc?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAD1DQ9cmBHrdtBkFgMBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgVEEAQEBAQELAYEwKoEPgSmME1+NP3yWVRSBXwINBRgHDYdtIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBAQEICwsGGw4jDII2BQIDGAmCWwEBAQECAQECJBkBAQQKKQECAgE?=
 =?us-ascii?q?BAgYBAQoYCQwRCAMBCwUYMRMFBIJNSwGBeQgBBKUVgWwzgnYBAQWHHwcIgm2IG?=
 =?us-ascii?q?IEcF4F/gRGCFEk1hDwfEFWFHIkXUpcOCYIlhGODO4cBCxhggUmPFIMCjX6IMIF?=
 =?us-ascii?q?Ggg4zGggXGTuCbAmCEgwXEm0BAwR9hlqFUy0xgQQDiVBVgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="asc'?scan'208";a="66204247"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 17:08:33 -0800
Received: from localhost ([::1]:35360 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWWXI-0002ti-Io
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 20:08:32 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:35574)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gWWUx-0001TM-B3
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 20:06:09 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gWWUv-0004Tg-MD
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 20:06:07 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:42555)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gWWUu-0004S5-6m; Mon, 10 Dec 2018 20:06:05 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43DMFg4pWbz9sBZ; Tue, 11 Dec 2018 12:05:59 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1544490359;
	bh=x+imcfJ00a6aDRsKqC6fE29OwMqHaoTGIckiCMCFNJg=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=pN9o0yQZ7oRdH1R9uuHGur2+2cOi2WGdgHQ13GRFpl0uhE6tk4h9rrQOpdvp22CGI
	h3O02lQ9ICmCyMl3O2oVZxvnBrKzypmL/UAKRmxjBAfJstxjZPFUHCzNi17pnjbknA
	2s9I2jRTHGwXbpr8O3UskVUIjDBJA3GBOR/fCRc4=
Date: Tue, 11 Dec 2018 11:38:57 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181211003857.GY4261@umbus.fritz.box>
References: <20181209194610.29727-1-clg@kaod.org>
	<20181209194610.29727-10-clg@kaod.org>
	<20181210063919.GU4261@umbus.fritz.box>
	<dc1104f1-0809-e7df-b145-e7faa2255fe6@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="bW7Nw90iaNQhVLQB"
Content-Disposition: inline
In-Reply-To: <dc1104f1-0809-e7df-b145-e7faa2255fe6@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v7 09/19] spapr: add device tree support
 for the XIVE exploitation mode
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--bW7Nw90iaNQhVLQB
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Dec 10, 2018 at 08:53:17AM +0100, C=E9dric Le Goater wrote:
> On 12/10/18 7:39 AM, David Gibson wrote:
> > On Sun, Dec 09, 2018 at 08:46:00PM +0100, C=E9dric Le Goater wrote:
> >> The XIVE interface for the guest is described in the device tree under
> >> the "interrupt-controller" node. A couple of new properties are
> >> specific to XIVE :
> >>
> >>  - "reg"
> >>
> >>    contains the base address and size of the thread interrupt
> >>    managnement areas (TIMA), for the User level and for the Guest OS
> >>    level. Only the Guest OS level is taken into account today.
> >>
> >>  - "ibm,xive-eq-sizes"
> >>
> >>    the size of the event queues. One cell per size supported, contains
> >>    log2 of size, in ascending order.
> >>
> >>  - "ibm,xive-lisn-ranges"
> >>
> >>    the IRQ interrupt number ranges assigned to the guest for the IPIs.
> >>
> >> and also under the root node :
> >>
> >>  - "ibm,plat-res-int-priorities"
> >>
> >>    contains a list of priorities that the hypervisor has reserved for
> >>    its own use. OPAL uses the priority 7 queue to automatically
> >>    escalate interrupts for all other queues (DD2.X POWER9). So only
> >>    priorities [0..6] are allowed for the guest.
> >>
> >> Extend the sPAPR IRQ backend with a new handler to populate the DT
> >> with the appropriate "interrupt-controller" node.
> >>
> >> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> >> ---
> >>  include/hw/ppc/spapr_irq.h  |  2 ++
> >>  include/hw/ppc/spapr_xive.h |  2 ++
> >>  include/hw/ppc/xics.h       |  4 +--
> >>  hw/intc/spapr_xive.c        | 64 +++++++++++++++++++++++++++++++++++++
> >>  hw/intc/xics_spapr.c        |  3 +-
> >>  hw/ppc/spapr.c              |  3 +-
> >>  hw/ppc/spapr_irq.c          |  3 ++
> >>  7 files changed, 77 insertions(+), 4 deletions(-)
> >>
> >> diff --git a/include/hw/ppc/spapr_irq.h b/include/hw/ppc/spapr_irq.h
> >> index 23cdb51b879e..e51e9f052f63 100644
> >> --- a/include/hw/ppc/spapr_irq.h
> >> +++ b/include/hw/ppc/spapr_irq.h
> >> @@ -39,6 +39,8 @@ typedef struct sPAPRIrq {
> >>      void (*free)(sPAPRMachineState *spapr, int irq, int num);
> >>      qemu_irq (*qirq)(sPAPRMachineState *spapr, int irq);
> >>      void (*print_info)(sPAPRMachineState *spapr, Monitor *mon);
> >> +    void (*dt_populate)(sPAPRMachineState *spapr, uint32_t nr_servers,
> >> +                        void *fdt, uint32_t phandle);
> >>  } sPAPRIrq;
> >> =20
> >>  extern sPAPRIrq spapr_irq_xics;
> >> diff --git a/include/hw/ppc/spapr_xive.h b/include/hw/ppc/spapr_xive.h
> >> index 9506a8f4d10a..728a5e8dc163 100644
> >> --- a/include/hw/ppc/spapr_xive.h
> >> +++ b/include/hw/ppc/spapr_xive.h
> >> @@ -45,5 +45,7 @@ qemu_irq spapr_xive_qirq(sPAPRXive *xive, uint32_t l=
isn);
> >>  typedef struct sPAPRMachineState sPAPRMachineState;
> >> =20
> >>  void spapr_xive_hcall_init(sPAPRMachineState *spapr);
> >> +void spapr_dt_xive(sPAPRMachineState *spapr, uint32_t nr_servers, voi=
d *fdt,
> >> +                   uint32_t phandle);
> >> =20
> >>  #endif /* PPC_SPAPR_XIVE_H */
> >> diff --git a/include/hw/ppc/xics.h b/include/hw/ppc/xics.h
> >> index 9958443d1984..14afda198cdb 100644
> >> --- a/include/hw/ppc/xics.h
> >> +++ b/include/hw/ppc/xics.h
> >> @@ -181,8 +181,6 @@ typedef struct XICSFabricClass {
> >>      ICPState *(*icp_get)(XICSFabric *xi, int server);
> >>  } XICSFabricClass;
> >> =20
> >> -void spapr_dt_xics(int nr_servers, void *fdt, uint32_t phandle);
> >> -
> >>  ICPState *xics_icp_get(XICSFabric *xi, int server);
> >> =20
> >>  /* Internal XICS interfaces */
> >> @@ -204,6 +202,8 @@ void icp_resend(ICPState *ss);
> >> =20
> >>  typedef struct sPAPRMachineState sPAPRMachineState;
> >> =20
> >> +void spapr_dt_xics(sPAPRMachineState *spapr, uint32_t nr_servers, voi=
d *fdt,
> >> +                   uint32_t phandle);
> >>  int xics_kvm_init(sPAPRMachineState *spapr, Error **errp);
> >>  void xics_spapr_init(sPAPRMachineState *spapr);
> >> =20
> >> diff --git a/hw/intc/spapr_xive.c b/hw/intc/spapr_xive.c
> >> index 982ac6e17051..a6d854b07690 100644
> >> --- a/hw/intc/spapr_xive.c
> >> +++ b/hw/intc/spapr_xive.c
> >> @@ -14,6 +14,7 @@
> >>  #include "target/ppc/cpu.h"
> >>  #include "sysemu/cpus.h"
> >>  #include "monitor/monitor.h"
> >> +#include "hw/ppc/fdt.h"
> >>  #include "hw/ppc/spapr.h"
> >>  #include "hw/ppc/spapr_xive.h"
> >>  #include "hw/ppc/xive.h"
> >> @@ -1381,3 +1382,66 @@ void spapr_xive_hcall_init(sPAPRMachineState *s=
papr)
> >>      spapr_register_hypercall(H_INT_SYNC, h_int_sync);
> >>      spapr_register_hypercall(H_INT_RESET, h_int_reset);
> >>  }
> >> +
> >> +void spapr_dt_xive(sPAPRMachineState *spapr, uint32_t nr_servers, voi=
d *fdt,
> >> +                   uint32_t phandle)
> >> +{
> >> +    sPAPRXive *xive =3D spapr->xive;
> >> +    int node;
> >> +    uint64_t timas[2 * 2];
> >> +    /* Interrupt number ranges for the IPIs */
> >> +    uint32_t lisn_ranges[] =3D {
> >> +        cpu_to_be32(0),
> >> +        cpu_to_be32(nr_servers),
> >> +    };
> >> +    uint32_t eq_sizes[] =3D {
> >> +        cpu_to_be32(12), /* 4K */
> >> +        cpu_to_be32(16), /* 64K */
> >> +        cpu_to_be32(21), /* 2M */
> >> +        cpu_to_be32(24), /* 16M */
> >=20
> > For KVM, are we going to need to clamp this list based on the
> > pagesizes the guest can use?
>=20
> I would say so. Is there a KVM service for that ?

I'm not sure what you mean by a KVM service here.

> Today, the OS scans the list and picks the size fitting its current=20
> PAGE_SIZE/SHIFT. But I suppose it would be better to advertise=20
> only the page sizes that QEMU/KVM supports. Or should we play safe=20
> and only export : 4K, 64K ?=20

So, I'm guessing the limitation here is that when we use the KVM XIVE
acceleration, the EQ will need to be host-contiguous?  So, we can't
have EQs larger than the backing pagesize for guest memory.

We try to avoid having guest visible differences based on whether
we're using KVM or not, so we don't want to change this list depending
on whether KVM is active etc. - or on whether we're backing the guest
with hugepages.

We could reuse the cap-hpt-max-page-size machine parameter which also
relates to backing page size, but that might be confusing since it's
explicitly about HPT only whereas this limitation would apply to RPT
guests too, IIUC.

I think our best bet is probably to limit to 64kiB queues
unconditionally.  AIUI, that still gives us 8192 slots in the queue,
which is enough to store one of every possible irq, which should be
enough.

There's still an issue if we have a 4kiB pagesize host kernel, but we
could just disable kernel_irqchip in that situation, since we don't
expect people to be using that much in practice.

> >> +    };
> >> +    /* The following array is in sync with the reserved priorities
> >> +     * defined by the 'spapr_xive_priority_is_reserved' routine.
> >> +     */
> >> +    uint32_t plat_res_int_priorities[] =3D {
> >> +        cpu_to_be32(7),    /* start */
> >> +        cpu_to_be32(0xf8), /* count */
> >> +    };
> >> +    gchar *nodename;
> >> +
> >> +    /* Thread Interrupt Management Area : User (ring 3) and OS (ring =
2) */
> >> +    timas[0] =3D cpu_to_be64(xive->tm_base +
> >> +                           XIVE_TM_USER_PAGE * (1ull << TM_SHIFT));
> >> +    timas[1] =3D cpu_to_be64(1ull << TM_SHIFT);
> >> +    timas[2] =3D cpu_to_be64(xive->tm_base +
> >> +                           XIVE_TM_OS_PAGE * (1ull << TM_SHIFT));
> >> +    timas[3] =3D cpu_to_be64(1ull << TM_SHIFT);
> >=20
> > So this gives the MMIO address of the TIMA. =20
>=20
> Yes. It is considered to be a fixed "address"=20
>=20
> > Where does the guest get the MMIO address for the ESB pages from?
>=20
> with the hcall H_INT_GET_SOURCE_INFO.

Ah, right.

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--bW7Nw90iaNQhVLQB
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwPBx4ACgkQbDjKyiDZ
s5IPOw/7BiFaM7KuIbvM/hHkm31hRHlWZMmhX69SkLmEs0hibq4nfkiQolGod0n9
wYTtRbsuwDp+w7AjsMJbEWu/mj/xWwz8rCqxQ3Zy0SlhhrjXkwsCukQdFEWJ7cUv
5t79BkSHqHoU+zjV99yW+u1u74FU+SO28ZhSPXtbsocx35bApMJVn4drGSujJ2jb
qIml4bNoSy1eratiIlX54jWaOLpK3fIufe1lGye2S+A9qPbRdtfSzP3ivLWbIE2g
j3jbX4VCA0N0GR8uvJ83SThjLxa3M7+iPM6AivUNho427jMfUQgcQy9glSOF/p5z
LX0zZ/h9purOMmYFc1e3/shikNWYEItbAtcte7tKIoaYnSyQgbMmzwZJ7MTwL012
r7RLkebOWWQZWTOj/A1vxxgH4zkKpOkIR0xscFm6NJdizC7iNXpUN+nWvZdXCpOK
l3aEJG9An4ApXrT50FTeiHD+tbHzDfszk5Sz51i/cbJv3xAAxhdd0zmbfLBNF1tB
+Fx0br4HQQAORMkwWcz/QadMhxrM0TVR+sSMPpy41p2BIiZNHW21+1sbhEKdHt3u
k66Tfjw4Vmzul5s9FWX1S+IT9XUPI/u7Hv+dtjwwGU9Tv+AM81SB4TcY4bTi/vxH
Bm2+Hxi/8zq5MqGuLhkgm9XcWblKCa4iRlxrzOSvdknnfhMwwlg=
=d8yf
-----END PGP SIGNATURE-----

--bW7Nw90iaNQhVLQB--

