Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:22:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 62BB85807A0;
	Thu, 13 Dec 2018 02:33:53 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 13 Dec 2018 02:33:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Awp8LPxb2yMWY57e5JjLY8kX/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcq+Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOuRXr4fmp1sWrxazHhWgCP/1xzNUnHL6wbE23uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zJotXvNacSV/q6zLXIzT7eaP1ZwzH96I7SfRAkvPqBWqlwcdDQyUkpDQzFklWQ?=
 =?us-ascii?q?pZbgPzyP0OQNtXKU7+97WO20kW4nrBt+rSWzyccrj4nFnJ4aylfB9Shgxos+ON?=
 =?us-ascii?q?62SFZjbNK6DJddszuWO5Z4T888WW1kpSU3xqEctZO6fiUG0IkryhrBZ/CdboSF?=
 =?us-ascii?q?5gjvWPifLDp3nn5pZrKyiwq0/EO90OPzTNO030xPriddktnDqHQN1xvL58iZRf?=
 =?us-ascii?q?ty4F2h1SyM1w/N8OFEJ147la7BJ54m2L4wmYIfsUXFHiDohEX7lLGaelkg9+Sy?=
 =?us-ascii?q?9ujqbKvqqoWBO4J3lg3yKKUjl86nDeQ9KAcOXmyb+eqm1L3k+E30WLFKjvwwkq?=
 =?us-ascii?q?nEv5HWPMcbqbCjAw9TzIkj7w+zDzCo0dQeg3YHNklIeAyIj4f3IVHCOvP4Auml?=
 =?us-ascii?q?g1Sqjjhrw+rKPrr7ApXCNnTDiqvufa5h605Azwo+1dRf55NXCr4fOv7yVVLxuc?=
 =?us-ascii?q?fcDh84NQy03unmBM981oMYRWKAHKuZPLnOvl+P4+IlO/OMa5MNuDbhN/gl4Obj?=
 =?us-ascii?q?jX8jll8cYammx5wXZGq4HvR7OUqZZ3Xsj8wFEWcLuAo+UePrhEeDUT5Ve3a9Qa?=
 =?us-ascii?q?Y86isnB4KhCIfJXpqtj6CZ3CenAp1WYXhLClKLEXj2bYmEWPAMaCSUIs9miTEE?=
 =?us-ascii?q?UbmhS4k81RChrgP6yrxnLvbK9S0cr57syN915+jLnxEo6TN0F9id032KT2xshG?=
 =?us-ascii?q?wIXD823Kd8oUBn0FeMy6p4judcFdxS4fNJTwg7OYTdz+x8F9D9RAbBcs2VR1ah?=
 =?us-ascii?q?R9WsGSsxQc4pw98Sf0Z9HM2vjhPZ0CqsGbMVk72LC4Yy8qLTxHXxI8d9y3Db1K?=
 =?us-ascii?q?gulVUmQ81PNXG4ia577QTcG4nJk0CBnaawaascxDLN9HuEzWeWoU5XShBwXrvf?=
 =?us-ascii?q?UXAffETWq8/56V3ET7OpDbQnMQ5BycqZJ6tOa93pi0hGRfj5NNTfZWKxh3m/BR?=
 =?us-ascii?q?KSyryQa4rqfn0X3D/BB0gcjwAT4XGGOBAjCSi7vWLREiZiFVL1bEPq6ulxtnW7?=
 =?us-ascii?q?Q1QwzwGLaU1hyrW09gQUhfyaV/McwLYEtD09pDVzGVa3x8jWBMaYpwp9YKVcZs?=
 =?us-ascii?q?sw4EtG1WLcsAx9IpygLqB4il4CaQh3uFnu1xF2CoVGnsgnt3cqzAt0KaKF31JN?=
 =?us-ascii?q?bTKY3ZbsOrLJLmn+5gyga6nT2lvGytaZ5r8P6Ogkq1XkpAymDE4i/Gto0tZL03?=
 =?us-ascii?q?qQ/I7FDBcPXp3rVEY39B96p6/Bbyk55oPU02BsMKauvj/D3dIpGPUqyhK6c9hD?=
 =?us-ascii?q?N6OEERf4E9cGCMi2NOwqh1+pYwoEPeBP7qI7I9mqdvqG2KGxOuZgkymrjWBG4I?=
 =?us-ascii?q?B7z0KN+DBwSu/O35YZ3f6Y2hGLWCv7jFekqsr3g5xLZSkOHmqjzijpHJRRZqxu?=
 =?us-ascii?q?cokRE2ehPsq3ys94h5HzQX5Y9UevCE8c18+tZBWdcUb93QpW1UkMpXynmC24zy?=
 =?us-ascii?q?F7kj0zr6qf2jDOzPrmdBYdJmFLQ2xih0/2IYeol9AaQFSobw8xmRql5Eb23aha?=
 =?us-ascii?q?qL5kL2nOR0dFZCz2L2BkUqutubuOec9P6JU0sSpJVOSwe0yVSrn4oxECySPsA3?=
 =?us-ascii?q?NexCwndzGtopj5nQZ1iHieLHZwq3rVY9pwyg3c5NzfRP5R2CQJRC9jhDnTB1i8?=
 =?us-ascii?q?OcSp/NqOm5fCtOC+S3yuVplJfSb3yoOAsTOx5Xd2Dh2ng/CzhtrnHBA60CDh0N?=
 =?us-ascii?q?lmTyfIrBf6YoTw06S6MORnflRnBVPm6sp6HJ1+nZU0hJ0KxXcagZCV92IdkWjv?=
 =?us-ascii?q?KdVbxb7+bH0VSD4I2dHV4RLp2E1+Ln2TwYL5WW6Qws9gZ9m8f2MX1Tgx78FMCK?=
 =?us-ascii?q?eI8rNEmTF5rUa/rQLUefJ9hCsSyeMy6H4GhOEEoA8tziSeAr8IB0VZMzLjlw+U?=
 =?us-ascii?q?79+gtqVYf3igcaK/1EdlmdChDbeCohxTWXrje5ciGzNw4dt7MF7WzHLz7YTkcs?=
 =?us-ascii?q?HKbd0Prh2UjwvAj+9NJZItkfoKgDBrOGPnsn0j1u47lgdu3ZChsYiDKmVt+r+5?=
 =?us-ascii?q?AxFCOj30YcMT5i/ijaJEksmK2ICvG41rGi8XU5vwUfKoDDUSuOz8OAmUFz08rm?=
 =?us-ascii?q?qbFaDbHQ+C80pmq3PPE5a2N3CYPnUZzNNiRAWDK0xbmgwbQDI6npshHACw2MPh?=
 =?us-ascii?q?aFt55iwW5lPgqBtD0OdoOAfkUmvFuAekcDQ0SIWcLBpL6AFN/VzVPNea7uJyGS?=
 =?us-ascii?q?FY45KgoBaMKmydewRHE2UJVlaYCFDkO7mk/cPA/PSABuqiM/vOZq2DqOxZV/eV?=
 =?us-ascii?q?3JKvz5Fp/zCWOsWUOXliCfI711FHXXB4HcTZhjoORzYWlyLLc86UuhO89jdroc?=
 =?us-ascii?q?C49fThQBjv6peXC7tOLdVv/Ai7gaedOO6RhyZ5KjdY2okPxX/Sz7gf00Adiztz?=
 =?us-ascii?q?dzm2CrkAsS/NTKTNmq5YFRIbaiVzNNdW4KI4xAVCJcnbitbt3L5ikvE1E0tFVU?=
 =?us-ascii?q?Dmmsyxf8MKPnqyNEnZC0eLLriGITzLztrzYaO9T71QkepVuwexuTadD0/sIDCD?=
 =?us-ascii?q?myP1WBCoNOFGlDubMwBGuIGhbhZtDnDuTM7nah2+KtN4kSc6zqE0hnzUM24RKj?=
 =?us-ascii?q?x8c0JLrr2N4iJUmPR/G2pd7nV7KemIgTqW7+7dKpwOq/tkHjx0l/5G4HQ907ZU?=
 =?us-ascii?q?7DtLRPpwmCvTqN5hu1CnkumVxTphXxpDsTJLhIONvUV/NqTV7JhAWXDY/B0T6W?=
 =?us-ascii?q?WcEQgFp9xgCo6nh6cF4NrIjqS7CDpG/Nvd5oNIDcjZLM2OOWEJPh3uFzrZSgAC?=
 =?us-ascii?q?SGjvfVvYjU1b2NSP7GWVv9BusJ/mmZxIT6JBTFwkPvoADwJuG9lUZN9vWSEtub?=
 =?us-ascii?q?WcgMMB+GC5thCXQ99V+tjlUf+IDr3VLzuVgL0MMxkP27TQfY4CKoDgnUt4ZQ8+?=
 =?us-ascii?q?1KDNAUfWT9cFmixsdAYwoV5MuCx6SXc+3VDiLBus7WUaEf+vnzY/kA44auMoon?=
 =?us-ascii?q?Ok2V4mbnjXpWNkikssmP3vmzeYfDX2KeG7WoQAWATusE1kCYn6RQ9pbUWXlEpi?=
 =?us-ascii?q?PTKME6lLjr1paWAtjQbav5JKMfRGSqRIaxgVg/qQYqN7ghxntiy7yBoftqP+Ap?=
 =?us-ascii?q?x4mV5vKMb0og=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A2AADONBJch0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?YNrJ5pIl0CBcxIBARgTAYdDIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAG?=
 =?us-ascii?q?CYgMDAQIkGQEBNwEFCQEBGDgDMQEFARwGAQoIBYMcggEFmxI8ih2BbDOCdgEBB?=
 =?us-ascii?q?YEFAYYpCBKHa4MjgRyBVz+BEYJkhHiGEpBGkEsHAoIkBIgkhw8WiWyHXokuj3Q?=
 =?us-ascii?q?CBAIJAgUPIYEsB4IAMxojUIJsghuDbYocAT44MoEFAQGKBIJNAQE?=
X-IPAS-Result: =?us-ascii?q?A0A2AADONBJch0O0hNFjHgEGBwaBUwcLAYNrJ5pIl0CBcxI?=
 =?us-ascii?q?BARgTAYdDIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkGQEBN?=
 =?us-ascii?q?wEFCQEBGDgDMQEFARwGAQoIBYMcggEFmxI8ih2BbDOCdgEBBYEFAYYpCBKHa4M?=
 =?us-ascii?q?jgRyBVz+BEYJkhHiGEpBGkEsHAoIkBIgkhw8WiWyHXokuj3QCBAIJAgUPIYEsB?=
 =?us-ascii?q?4IAMxojUIJsghuDbYocAT44MoEFAQGKBIJNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="43893632"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 02:33:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728664AbeLMKdc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 05:33:32 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:34433 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727374AbeLMKdb (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 05:33:31 -0500
Received: by mail-wr1-f67.google.com with SMTP id j2so1457118wrw.1
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 02:33:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=broadcom.com; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=KsLuq/w2+4wqAK3w1JgIljoenhpHR4ZyQN2xHQt5mAo=;
        b=BuYqOYAGhory4gRz4+f3zZ1cpevXvNvZRNWlLzPUD53iF/w8IlaDeHT0wOw3Vplr10
         6WUvAg/kMiKqusZhcf9IU0jadnGSg4OflOBOPghzbU3NISvlQNgUpSKLZQ7ybqK/VRd0
         BraSgBOqy1xDUlmAwu2nFtf7JJTravNmW8z6g=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=KsLuq/w2+4wqAK3w1JgIljoenhpHR4ZyQN2xHQt5mAo=;
        b=OhTVHAPR3167artrvAwNP8k3cmR+y9YFjH806/vp+uDdXLE0x+2YIQJkY4HlU06IwL
         o2SM1PQyiDfiPsXKVTI+aIvW0kZJpoD3xdqIcO6UMB33SFMQSoV4GFq8Z05mK98eY8is
         VvhfsH+lg+wIUfDNyWp916+wxaFOEUrBN/pXEKze8CzeCB9JxFnTMMA55IsHLcOivnBE
         aF2HjNWf76fSr/nwXrCRjjqlqi74WtOnL4JoPSzQpE5QPNc+BaHtI93riXyrdL/BP7Fi
         1wYNlICwPWEglDqczZYRAM5BPyrr9PCJCG9ZqGdK/McYaK+t6i6Hs4J2BpPLtagY2mth
         4CBg==
X-Gm-Message-State: AA+aEWa1m9UoPEE92b95zgcv2YIQ6eXUytwEoBFBxkD1A82FfiNwhYt3
        qmLQU7qGGUz5RsCX0kBt8PZBfQ==
X-Google-Smtp-Source: AFSGD/UELeyC7vWsdTldPryopCXnyHUgRP0R9wNEeFAeaSxQ5osycF83oKahNPiRilY7IcU8mZWnIQ==
X-Received: by 2002:adf:84e4:: with SMTP id 91mr20254748wrg.237.1544697209674;
        Thu, 13 Dec 2018 02:33:29 -0800 (PST)
Received: from mannams-OptiPlex-7010.dhcp.broadcom.net ([192.19.234.250])
        by smtp.gmail.com with ESMTPSA id x76sm3327058wmd.27.2018.12.13.02.33.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 13 Dec 2018 02:33:28 -0800 (PST)
From: Srinath Mannam <srinath.mannam@broadcom.com>
To: Bjorn Helgaas <bhelgaas@google.com>,
        Robin Murphy <robin.murphy@arm.com>, poza@codeaurora.org,
        Joerg Roedel <joro@8bytes.org>,
        Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        Ray Jui <rjui@broadcom.com>
Cc: bcm-kernel-feedback-list@broadcom.com, linux-pci@vger.kernel.org,
        iommu@lists.linux-foundation.org, linux-kernel@vger.kernel.org,
        Srinath Mannam <srinath.mannam@broadcom.com>
Subject: [PATCH v2 3/3] PCI: iproc: Add dma reserve resources to host
Date: Thu, 13 Dec 2018 16:02:54 +0530
Message-Id: <1544697174-6029-4-git-send-email-srinath.mannam@broadcom.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544697174-6029-1-git-send-email-srinath.mannam@broadcom.com>
References: <1544697174-6029-1-git-send-email-srinath.mannam@broadcom.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

IPROC host has the limitation that it can use only those address ranges
given by dma-ranges property as inbound address.
So that the memory address holes in dma-ranges should be reserved to
allocate as DMA address.

Inbound address of host accessed by pcie devices will not be translated
before it comes to IOMMU or directly to PE.
But the limitation of this host is, access to few address ranges are
ignored. So that IOVA ranges for these address ranges have to be reserved.

All such addresses ranges are created as resource entries by parsing
dma-ranges DT parameter and add to dma_resv list of pci host bridge.

Ex:
dma-ranges = < \
  0x43000000 0x00 0x80000000 0x00 0x80000000 0x00 0x80000000 \
  0x43000000 0x08 0x00000000 0x08 0x00000000 0x08 0x00000000 \
  0x43000000 0x80 0x00000000 0x80 0x00000000 0x40 0x00000000>

In the above example of dma-ranges, memory address from
0x0 - 0x80000000,
0x100000000 - 0x800000000,
0x1000000000 - 0x8000000000 and
0x10000000000 - 0xffffffffffffffff.
are not allowed to use as inbound addresses.
So that we need to add these address ranges to dma_resv list to reserve
corresponding IOVA address ranges.

Signed-off-by: Srinath Mannam <srinath.mannam@broadcom.com>
Based-on-patch-by: Oza Pawandeep <oza.oza@broadcom.com>
---
 drivers/pci/controller/pcie-iproc.c | 51 ++++++++++++++++++++++++++++++++++++-
 1 file changed, 50 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/controller/pcie-iproc.c b/drivers/pci/controller/pcie-iproc.c
index 3160e93..636e92d 100644
--- a/drivers/pci/controller/pcie-iproc.c
+++ b/drivers/pci/controller/pcie-iproc.c
@@ -1154,25 +1154,74 @@ static int iproc_pcie_setup_ib(struct iproc_pcie *pcie,
 	return ret;
 }
 
+static int
+iproc_pcie_add_dma_resv_range(struct device *dev, struct list_head *resources,
+			      uint64_t start, uint64_t end)
+{
+	struct resource *res;
+
+	res = devm_kzalloc(dev, sizeof(struct resource), GFP_KERNEL);
+	if (!res)
+		return -ENOMEM;
+
+	res->start = (resource_size_t)start;
+	res->end = (resource_size_t)end;
+	pci_add_resource_offset(resources, res, 0);
+
+	return 0;
+}
+
 static int iproc_pcie_map_dma_ranges(struct iproc_pcie *pcie)
 {
+	struct pci_host_bridge *host = pci_host_bridge_from_priv(pcie);
 	struct of_pci_range range;
 	struct of_pci_range_parser parser;
 	int ret;
+	uint64_t start, end;
+	LIST_HEAD(resources);
 
 	/* Get the dma-ranges from DT */
 	ret = of_pci_dma_range_parser_init(&parser, pcie->dev->of_node);
 	if (ret)
 		return ret;
 
+	start = 0;
 	for_each_of_pci_range(&parser, &range) {
+		end = range.pci_addr;
+		/* dma-ranges list expected in sorted order */
+		if (end < start) {
+			ret = -EINVAL;
+			goto out;
+		}
 		/* Each range entry corresponds to an inbound mapping region */
 		ret = iproc_pcie_setup_ib(pcie, &range, IPROC_PCIE_IB_MAP_MEM);
 		if (ret)
-			return ret;
+			goto out;
+
+		if (end - start) {
+			ret = iproc_pcie_add_dma_resv_range(pcie->dev,
+							    &resources,
+							    start, end);
+			if (ret)
+				goto out;
+		}
+		start = range.pci_addr + range.size;
 	}
 
+	end = DMA_BIT_MASK(sizeof(dma_addr_t) * BITS_PER_BYTE);
+	if (end - start) {
+		ret = iproc_pcie_add_dma_resv_range(pcie->dev, &resources,
+						    start, end);
+		if (ret)
+			goto out;
+	}
+
+	list_splice_init(&resources, &host->dma_resv);
+
 	return 0;
+out:
+	pci_free_resource_list(&resources);
+	return ret;
 }
 
 static int iproce_pcie_get_msi(struct iproc_pcie *pcie,
-- 
2.7.4

