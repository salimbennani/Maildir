Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:41:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5124558079D;
	Thu, 13 Dec 2018 11:55:15 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 11:55:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASJm0LREN+4TKGsicvBOHcJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osi6bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YZYMAeoPMulXs5TyqFkAohulHQmhBvjiyiNUinLswaE2z/4sHR/A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakPT++61q/IxijZYfxMxDf97JXDfxc6of6SR71wd9HcyVEoFwPClFWQ?=
 =?us-ascii?q?rYzkMymP1uQQtWiW9uxtXv+hhW4grgF+uDmvxsE0h4nGh4IV1lTE+j9iz4ovOd?=
 =?us-ascii?q?K4T0t7bca8EJtRsSGVKYp7T8w4T2FvoiY6xbsLsoO4cigS0Jkr2QLTZvidf4SV?=
 =?us-ascii?q?7B/vSvydLSp7iX55Yr6yhhS//VC+xuD9SMW4zFNHojZAn9XRqnwByhLe582aRv?=
 =?us-ascii?q?dg+0quwyuA2gDT5+xBOk84iLfUJIUkz7Eqi5UTv1rMEyr4lUrtiKKWeEMp8fWy?=
 =?us-ascii?q?5ev9eLXpvJqcOpd0ig7gNqQundSyAfo3MgcQRWiX4+e826P5/U3/XrpKiuc6kq?=
 =?us-ascii?q?7DsJDVPcgbp6i5DBFJ0os79RqzEzOr3M4FkXQJMl5JYg+Lgov1N13UIf31D++z?=
 =?us-ascii?q?g1G2nzdqw/DGMKfhApLILnXblLfhfLB961NTyQYqztBQ+YhUCrcfL/L3Q0Pxs9?=
 =?us-ascii?q?LZDhknPAyu2OvnFtp92Z0EWW6VAa+WLrnSsVmW6eIrOeWMY5UVuDnlJ/g/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx2ZsXaXO4Eep8L0SWfHrhmdMBEWYMvgojQ+3mklyCUThPZ3msW6?=
 =?us-ascii?q?Iw/C00CIWjDY3bXICinKSB3DunHp1Rfm1GCkqDEXb0d4qeXPcAciKSItJ7nTwC?=
 =?us-ascii?q?WrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI23qd/rlJnxleA1qh4hfpYFdtI6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKwDL8Ol7yLA580/rjG33frJcZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSANwUr/K?=
 =?us-ascii?q?XXYFakvSrNT2/EXCT7C1BLQjMwtBz9OCK6RQZt3oi1VGWOnsONDEb22tnGewAA?=
 =?us-ascii?q?6CxqmQY4ryZ2UdwCLdBVAZnA8J43aJKxIyBie7rGLYFzxhC1Tvb0To8el9rXO7?=
 =?us-ascii?q?SlQ5zwWLb01nyrq09QQZhf2aS/MPwL0EvD0tpClzHFa4x9jWEcaPpxJ9fKVAZt?=
 =?us-ascii?q?Mw+EpI2njHtwNjJJCgL7pthlgFcwtpuUPjzBF3CoRGkcg3o3Im1gtyKaSE0Fxf?=
 =?us-ascii?q?czOUx4z/OrrSKmPq5hCgd7bW2k3C0NaR4qoP9PU4q1DkvAG1Fkoj829r08VP33?=
 =?us-ascii?q?ub/JXKCAsSUZT+Ukss8xh6prfaYjQy5o/O1H1sN7W0vSHG294zGOQlzROgdc9F?=
 =?us-ascii?q?MKyYDA/yD9EaB8+2JeMwn1imcB0FM/5S9aIuJMymauaJ17StPOZjmzKmk39K4I?=
 =?us-ascii?q?R80kKK6ip9RfTE35cDw/GEwASHUy3wg0umssDygYpEfy0dHnKjySj4A45cfq1z?=
 =?us-ascii?q?fZsRBWiyOcG2x9V+iITrW35X71OjA1IG2Mm0eRuddVD93AtQ1VgJrnyjgye30z?=
 =?us-ascii?q?t0kzQxpKqFwCPO2/jidAYAOmNTXmlijEvjLpKuj98HW0ikdQ4pmwW/5Ub73qRU?=
 =?us-ascii?q?uL5wL23OTkhWZSj2KGdiX7C0trqDZc5P9ZwpvT9WUOS6fVCVVLr9rwEG3CPkGm?=
 =?us-ascii?q?tU3Co7eC2yupXlgxx6j3qQLXZyrHbDecB83wzf5MHaRfNK2joGRS94iSTYB1Sm?=
 =?us-ascii?q?Ptmp+8mUmInHsuykS22hUZhTezHxzYycrCu7+XFqARqnkvCxgNLnCws60Sz819?=
 =?us-ascii?q?VwTiXHthX8Yorq16S8L+1neFJlBFv968p8B4F/nZE8hJAW2XgGmJqV+WALnnv0?=
 =?us-ascii?q?MdVewaj+dmYCRSYXw97J5wjowE1iIWiOx47jVHWdw81hasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArMIEklZJyDslwmI?=
 =?us-ascii?q?4Mq4rKVYf2uvdbmw1ExjndGuFr2CowdcWGrndZcmByN/8sJ/MFfU2n3p9o7kYM?=
 =?us-ascii?q?XQbc4UthCMlhfAjutVJ4grmvsEmyVnIn79smM/y+EgkxNux566sZODK2Vs+qK5?=
 =?us-ascii?q?HxFZOif0Z8MV5jHik6JektyK0ICoG5VrAi8LU4fwTfK0DDISsuzqNxqJED05sH?=
 =?us-ascii?q?uaGKDQHQmC6Ed9tHLPEoumN3WWJHkf0NVjSwORJE1ZgAAIQjo6moQ1GRytxMzk?=
 =?us-ascii?q?aE15/Cwe5kbkqhtQzeJlLwLwXX3YpAesdzc4UpyfLAdN4wFG5kfVN9Ge7+1pEy?=
 =?us-ascii?q?FZ+J2hsBKCKmiBawtUCmEJX1SOB0r/Mbm2+dnA7++YC/K8L/TUZLWBt/deW+2U?=
 =?us-ascii?q?xZ610Ytm4jWMNtiJPnZ4FP02wU5DXXF/G8TElDQDUS0XlyTRb8GFoBew4DF4rs?=
 =?us-ascii?q?e68P7zQgLg+ZOPC6dOMdVo4x23gaCDN/OJhCZkMzlY0IkAxWTPyLgZ014fkCVu?=
 =?us-ascii?q?dzirEbQdui/BVqPQmqlLDxEFbyN/LtdH76U53gNVI87Ulsv11qJkjv4yE1pFVU?=
 =?us-ascii?q?LumsCqZcwJImGxLlDHBFyMNLSJOzLL2dz3YbinRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWhP99qljI226M7h3PQOW4YMD?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsfFzGCR7i/pa4Ggmy7tS?=
 =?us-ascii?q?9CxEWP11mC7IotFyuV2pjumPxSRhUBdVrjZLhYSLvVhtOKnD95lAX2rE8wwJ7W?=
 =?us-ascii?q?mKFxsKoN5lAMX1u69M0tjPiL7zKDBa/tPU58QcAc3UKMOBMHU5MBvpGCTbDA0K?=
 =?us-ascii?q?TTOwMWHfhkpdkOyd93GPr5g6rITsl4QKSrNBSFM1EfYaWQxZG4kgKZh+WHsYnL?=
 =?us-ascii?q?2axJoK7HW3qjHYQcxAo5TOTfWWHOnuLzCCy7JDYk1b76n/KNEoO4T9k3Rrd10y?=
 =?us-ascii?q?yJ/HEkz4RddKuClwKBUpphMeozBFUmQv1he9OUuW63gJGKvxx0Zuhw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAGuBJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECJ4wVjBKCDRSXQBSBXxIBARgGDQG?=
 =?us-ascii?q?BS4Ivg0siNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQEBAQECJ?=
 =?us-ascii?q?BMGAQE3AQUJAQEKGAklAwwFIAEFASITBYMcAYF4CAEECpx+PIodgWwzgnYBAQW?=
 =?us-ascii?q?BMAETAT4BhSgIEosOgRwXgX+BEYMSgUGBXQECAQEBgUEFhXKJNweBdoUTUY95C?=
 =?us-ascii?q?YIohGWKQSMKAlSBSYdDh16OJIp+BgIJBw8hgSVtgSEzGggwgycJghIYg1WFFIE?=
 =?us-ascii?q?GhFciMgEJeAMBASETjA4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAGuBJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECJ4wVjBKCDRSXQBSBXxIBARgGDQGBS4Ivg0siNAkNA?=
 =?us-ascii?q?QMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQEBAQECJBMGAQE3AQUJAQE?=
 =?us-ascii?q?KGAklAwwFIAEFASITBYMcAYF4CAEECpx+PIodgWwzgnYBAQWBMAETAT4BhSgIE?=
 =?us-ascii?q?osOgRwXgX+BEYMSgUGBXQECAQEBgUEFhXKJNweBdoUTUY95CYIohGWKQSMKAlS?=
 =?us-ascii?q?BSYdDh16OJIp+BgIJBw8hgSVtgSEzGggwgycJghIYg1WFFIEGhFciMgEJeAMBA?=
 =?us-ascii?q?SETjA4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="55094167"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 11:55:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729071AbeLMTzJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 14:55:09 -0500
Received: from mail-yw1-f65.google.com ([209.85.161.65]:38449 "EHLO
        mail-yw1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728069AbeLMTzJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 14:55:09 -0500
Received: by mail-yw1-f65.google.com with SMTP id i20so1328797ywc.5
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 11:55:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=poorly.run; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=94iF7LkuxJObcikGEQB4tq+75E7LrVuG+cW9WkhdMDo=;
        b=XL04eIu8AI2POrKcGoM8eB4Dy45hospI1o11mx68sB1nAOJxGIIFag16ayGHRN/yqQ
         yYcnoSUES9gOnsrlExzsMclXvenO8GTus/2ua/F06Ko6I+Z9hOFrBN9eWf3Y2EMd6Eme
         UUz50tiM9im4RaMFT2epAAZLIh8uDsQzD8jJXGCmMa3RONa9mwdpqhSga2dKu3qq8Pdw
         Z/yWyu50n0V+PYcFLMH7Bkr/lJEIxFkaQoWlTsZonRezlnQ15KLplFsPiEtMw/rarDsc
         oIx6h6tqO9OiwzGV88gsiHthALkphzHkhrQcY5VWo2knsedkRybkH8NB8A8IX7o3yBTe
         1PSQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=94iF7LkuxJObcikGEQB4tq+75E7LrVuG+cW9WkhdMDo=;
        b=EIzVpiojn594luUMTtj4U1cQFzP/ZP4qJlunQ4cwYN+XoQ3oo6oPxLxFGmT+ONrtHl
         uA/TGcvTSP03PXT9Q1ZC0m62Ek4Ql8/XCRJTSErZmsx/1VOrZgnW+vushllhWwlUQQxs
         GP0xEyFJMtH2YHLmq7NHtBpmPE0R3raEZADstKmvUOidYmRrXYN7Eb2oKE/HZCHowRQA
         HNMMNRmtVucxQ8lDP4DpXYZ420ngk9bA/SvcPHl+gmPtKsY1ZB3lNS9Dj63Cvab0rvsT
         6ehCkf4y7uY/IVBYfgMtxfh7ab1Xc2Q1eRXIyxu5pJeMPoIfBYIaq+2wRZi4AvYIgfDP
         LO1g==
X-Gm-Message-State: AA+aEWYnpq2iubF4C7Fp2U2V421zFTgBpX5N6KmKn5sKhxm/AtN/3xl3
        QHEoC46XPs06TIDW4PLEonY0WA==
X-Google-Smtp-Source: AFSGD/XdMfN3GVM5Mb9RNKWgCS88185qYfZS8frAmLJfUBgYuZ9vtbSa82HXcSJGdvZpS0X+iXW9Fw==
X-Received: by 2002:a81:2209:: with SMTP id i9mr196812ywi.2.1544730907829;
        Thu, 13 Dec 2018 11:55:07 -0800 (PST)
Received: from localhost ([2620:0:1013:11:ad55:b1db:adfe:3b9f])
        by smtp.gmail.com with ESMTPSA id x82sm937250ywb.34.2018.12.13.11.55.06
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 13 Dec 2018 11:55:07 -0800 (PST)
Date: Thu, 13 Dec 2018 14:55:06 -0500
From: Sean Paul <sean@poorly.run>
To: Jagan Teki <jagan@amarulasolutions.com>
Cc: Sean Paul <sean@poorly.run>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        David Airlie <airlied@linux.ie>,
        Rob Herring <robh+dt@kernel.org>, Chen-Yu Tsai <wens@csie.org>,
        Icenowy Zheng <icenowy@aosc.io>,
        Jernej Skrabec <jernej.skrabec@siol.net>,
        Vasily Khoruzhick <anarsoul@gmail.com>,
        Thierry Reding <thierry.reding@gmail.com>,
        Mark Rutland <mark.rutland@arm.com>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        devicetree <devicetree@vger.kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Michael Trimarchi <michael@amarulasolutions.com>,
        TL Lim <tllim@pine64.org>,
        linux-sunxi <linux-sunxi@googlegroups.com>,
        linux-amarula@amarulasolutions.com
Subject: Re: [PATCH v2 11/12] drm/panel: Add Feiyang FY07024DI26A30-D
 MIPI-DSI LCD panel
Message-ID: <20181213194804.GM154160@art_vandelay>
References: <20181116163916.29621-1-jagan@amarulasolutions.com>
 <20181116163916.29621-12-jagan@amarulasolutions.com>
 <20181213150736.GL154160@art_vandelay>
 <CAMty3ZAv1dHCRCShXYbxqMm4wV9WGDpAKPji+3G21eWq34ODaA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAMty3ZAv1dHCRCShXYbxqMm4wV9WGDpAKPji+3G21eWq34ODaA@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 14, 2018 at 12:56:03AM +0530, Jagan Teki wrote:
> On Thu, Dec 13, 2018 at 8:37 PM Sean Paul <sean@poorly.run> wrote:
> >
> > On Fri, Nov 16, 2018 at 10:09:15PM +0530, Jagan Teki wrote:
> > > Feiyang FY07024DI26A30-D is 1024x600, 4-lane MIPI-DSI LCD panel.
> > >
> > > Add panel driver for it.
> > >
> > > Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
> > > ---
> > >  MAINTAINERS                                   |   6 +
> > >  drivers/gpu/drm/panel/Kconfig                 |   9 +
> > >  drivers/gpu/drm/panel/Makefile                |   1 +
> > >  .../drm/panel/panel-feiyang-fy07024di26a30d.c | 286 ++++++++++++++++++
> > >  4 files changed, 302 insertions(+)
> > >  create mode 100644 drivers/gpu/drm/panel/panel-feiyang-fy07024di26a30d.c
> > >

/snip

> > > diff --git a/drivers/gpu/drm/panel/panel-feiyang-fy07024di26a30d.c b/drivers/gpu/drm/panel/panel-feiyang-fy07024di26a30d.c
> > > new file mode 100644
> > > index 000000000000..a4b46bd8fdbe
> > > --- /dev/null
> > > +++ b/drivers/gpu/drm/panel/panel-feiyang-fy07024di26a30d.c

/snip

> > > +static int feiyang_prepare(struct drm_panel *panel)
> > > +{
> > > +     struct feiyang *ctx = panel_to_feiyang(panel);
> > > +     struct mipi_dsi_device *dsi = ctx->dsi;
> > > +     unsigned int i;
> > > +     int ret;
> > > +
> > > +     ret = regulator_enable(ctx->dvdd);
> > > +     if (ret)
> > > +             return ret;
> > > +
> > > +     msleep(100);
> >
> > nit: You should do your best to correlate the sleeps with the timing parameters
> > from the datasheet with a comment.
> >
> > ie:
> >         /* T1: > 100ms */
> >         msleep(100);
> 
> Sorry, what does this mean?

On page 9 of the datasheet you sent me [1], it has the delays required to safely
power up the panel. This delay is the time between dvdd going high and avdd
going high. On the figure in the datasheet, this would be T2 (T1 is dvdd rise
time and should be handled in the regulator subsystem (iirc)). Also according to
the datasheet, T2 just needs to be > 0, so you don't even need this delay. You
could replace this with a comment like:

        /* T1 (dvdd rise time) + T2 (dvdd->avdd) > 0 */

So for all of the msleeps below you should get the delays from the datasheet and
add a comment referencing them.

Sean

[1] - http://files.pine64.org/doc/datasheet/pine64/FY07024DI26A30-D_feiyang_LCD_panel.pdf

> 
> >
> > > +
> > > +     ret = regulator_enable(ctx->avdd);
> > > +     if (ret)
> > > +             return ret;
> > > +
> > > +     msleep(20);
> > > +
> > > +     gpiod_set_value(ctx->reset, 1);
> > > +     msleep(50);
> > > +
> > > +     gpiod_set_value(ctx->reset, 0);
> > > +     msleep(20);
> > > +
> > > +     gpiod_set_value(ctx->reset, 1);
> > > +     msleep(200);
> > > +
> > > +     for (i = 0; i < ARRAY_SIZE(feiyang_init_cmds); i++) {
> > > +             const struct feiyang_init_cmd *cmd =
> > > +                                             &feiyang_init_cmds[i];
> > > +
> > > +             ret = mipi_dsi_dcs_write_buffer(dsi, cmd->data, cmd->len);
> >
> >                 ret = mipi_dsi_dcs_write_buffer(dsi, cmd->data,
> >                                                 FEIYANG_INIT_CMD_LEN);
> >
> > > +             if (ret < 0)
> > > +                     return ret;
> > > +     }
> > > +
> > > +     return 0;
> > > +}
> > > +
> > > +static int feiyang_enable(struct drm_panel *panel)
> > > +{
> > > +     struct feiyang *ctx = panel_to_feiyang(panel);
> > > +
> > > +     msleep(120);
> > > +
> > > +     mipi_dsi_dcs_set_display_on(ctx->dsi);
> > > +     backlight_enable(ctx->backlight);
> > > +
> > > +     return 0;
> > > +}
> > > +
> > > +static int feiyang_disable(struct drm_panel *panel)
> > > +{
> > > +     struct feiyang *ctx = panel_to_feiyang(panel);
> > > +
> > > +     backlight_disable(ctx->backlight);
> > > +     return mipi_dsi_dcs_set_display_on(ctx->dsi);
> >
> > set_display_on? You probably want set_display_off here :)
> >
> > > +}
> > > +
> > > +static int feiyang_unprepare(struct drm_panel *panel)
> > > +{
> > > +     struct feiyang *ctx = panel_to_feiyang(panel);
> > > +     int ret;
> > > +
> > > +     ret = mipi_dsi_dcs_set_display_off(ctx->dsi);
> > > +     if (ret < 0)
> > > +             DRM_DEV_ERROR(panel->dev, "failed to set display off: %d\n",
> > > +                           ret);
> > > +
> > > +     ret = mipi_dsi_dcs_enter_sleep_mode(ctx->dsi);
> > > +     if (ret < 0)
> > > +             DRM_DEV_ERROR(panel->dev, "failed to enter sleep mode: %d\n",
> > > +                           ret);
> > > +
> > > +     msleep(100);
> > > +
> > > +     regulator_disable(ctx->avdd);
> > > +
> > > +     regulator_disable(ctx->dvdd);
> > > +
> > > +     gpiod_set_value(ctx->reset, 0);
> > > +
> > > +     gpiod_set_value(ctx->reset, 1);
> > > +
> > > +     gpiod_set_value(ctx->reset, 0);
> >
> > Presumably this reset line toggle isn't needed since the rails are already
> > disabled?
> 
> Yes, rails need to reset and turn off. will swap.
> 
> >
> > > +
> > > +     return 0;
> > > +}
> > > +
> > > +static const struct drm_display_mode feiyang_default_mode = {
> > > +     .clock = 55000,
> > > +     .vrefresh = 60,
> >
> > This doesn't add up correctly. The pixel clock should be equal to:
> >
> >         (htotal * vtotal * vrefresh) / 1000
> >
> > For this reason, we usually don't specify the refresh rate since it can be
> > misleading. Your actual refresh rate with the pixel clock you specified is
> > actually going to be 56.2Hz instead of the 60 you want.
> 
> The actual BSP do work 55MHz[1], I do specify refresh rate unnecessarily.

Well, the BSP has a bug in it then :) You either want the refresh rate to be
60Hz or you want the pixel clock to be 55MHz, you can't have both with the
timing you have now. You'll need to alter the pixel clock or porches to get
60Hz.

Sean

> 
> [1] https://gitlab.com/pine64-android/tools/blob/01b3d9388439106bdd9985cf738c1b876bd617d3/pack/chips/sun50iw1p1/configs/db1000_lcd/sys_config_rgmii.fex#L483

-- 
Sean Paul, Software Engineer, Google / Chromium OS
