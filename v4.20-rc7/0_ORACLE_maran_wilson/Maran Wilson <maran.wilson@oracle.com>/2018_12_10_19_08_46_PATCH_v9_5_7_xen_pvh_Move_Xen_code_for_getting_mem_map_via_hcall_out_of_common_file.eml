Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:42:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5F0CA580380;
	Mon, 10 Dec 2018 11:09:29 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 11:09:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ac8c9TxYc3elvYlbg2WPWuS7/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm4Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhNF+gqxYpxyupRJ/w5XMYIyXL/dyYr/RcMkGSWdbQspdSypMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5VoY7nqFsUtxS+AxSnC+Puyj9MnX/22qs62PkmHAHDxgMgBcgBsH?=
 =?us-ascii?q?LOoNT7NacSVfu1zK7OzTjYaPNWwy3y55TMch8/u/2DQbVwcc/IxEQpCgjLjU2Q?=
 =?us-ascii?q?pJT7Mz+J0ukBqXWX4uR+We61lmIqqB19riKuy8oukoXFm40Yxk3e+Slkz4s4JM?=
 =?us-ascii?q?e0RFNmbdOlCpdcqTyWOo1rSc04WW5oojw1yrgetJ67YicKzJMnygbBa/yIbYeI?=
 =?us-ascii?q?+AjvVOWPLjdignJqZra/iwy18Ui6xe3wTsi00FBUoSpZitTAqGwB2hjJ5sSaRP?=
 =?us-ascii?q?Zx4F2t1SuM2gzP8O1JIEI5mbLeK5E7w74wkpQTsV7EHi/zgEj2iK6WdkM5+umn?=
 =?us-ascii?q?8ujnYavppoWaN4BqjgHyK6Mum8K5AesmKAgDRHab+eui273550H5Q6tFjucwkq?=
 =?us-ascii?q?bHtJDWP8MbprS2AwNNyIYs9w6/Dyu60NQfhXQHKFNFeBGZgITzNFDOPev1DfO+?=
 =?us-ascii?q?g1SqjTdqyOrKPrznApXRMHfDlK3tcqp6605Z0AAz18xQ54pICrEdJ/L+Qk/xu8?=
 =?us-ascii?q?bZDh8lKQO0xPzrCNVg1owEX2KPDbSUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YZaOpx4cYaGikHvR6JEWUeXjsgtAfHmsQvQo+S+rqiFuFUTNIY3ayXq?=
 =?us-ascii?q?Q85iw0CY68DIfDQJytj6KF3CuhApJWYWVGAEiWEXj0b4WER+sMaCWKL8B7iTwE?=
 =?us-ascii?q?Vb+hS4w72RG0rgD6yaFqLu7V+i0eqJLi28J55+zVlREu6zN0C96R3H2KT2Fxhm?=
 =?us-ascii?q?kIXSM53LhjoUxhzVeOyat4jOZeFdBJ4/NJUx01NZjTz+FhD9DyWwTBfsqGSVq8?=
 =?us-ascii?q?Q9WmBy0xQcw1w9MUf0l9HNCihAjZ3yW2G78Vi6CLBJss/63BxXfxOdhyx2zG1K?=
 =?us-ascii?q?Y7iVkmWdVANWuhiq579AjTAorJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnXy9BR?=
 =?us-ascii?q?KJxrOKcYrrdH8R3CTbCEgYjQ8T+WyKOhQ5Bieku2jeFiBhFUrzY0Pw9ulzsG+7?=
 =?us-ascii?q?Tk4xzwGNc01h17q09gQJhfCGTPMTxLYEuCYnqzV7B1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYi8cqqG0lzQVsJqOYyl9O?=
 =?us-ascii?q?bC6Y0o3qNb3RKWny+w6vZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3prHHYiUn+4zYz3xtMamuvT/E1NIkH+8lyhemf9dC?=
 =?us-ascii?q?P6KIDg7yE8sGB8ewLOwmgUSmbhUBPOpK7q47I9umd+ea2K6sJOtghjOmgnhd74?=
 =?us-ascii?q?Bnz02M8DBwSujW0JYfwvGUxxeIWC34jFi8rM/3g4dEZTcJE2q7yCjkApNRZ6Jo?=
 =?us-ascii?q?cYYKD2euP9O4xtFki5HxXH5Y8UapB0ka18+xZRqSc1v90BVQ1EQWu3CmmTG0zy?=
 =?us-ascii?q?dpkzEvtaef2C3Ow+L/dBsIIGJLRW9ijUvyLoiwldwVQE+obw0xnhu/+Un637Rb?=
 =?us-ascii?q?pLh4L2TLQ0dHZTL2L2JhUqu3rLaCeNRA6JArsSVWVuSzf1aaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRSlihjnQHFS8?=
 =?us-ascii?q?Pdip/dOPmpfHs+C+UX+hV5JJfSnqy4OAqDW05WlwDRKjmPCzn8XtERIm3i/jy9?=
 =?us-ascii?q?lqSSLIoQ7/Yobx1qS2K+JnflRyC1/65Mp3AYV+koo2hJEN1nkWnJSV/XwbkWjt?=
 =?us-ascii?q?NdVXw77xbH0IRTQT2d7a/BDl2FF/LnKO34/5U3Sdwsh7aNWgbGIZxDk979xUB6?=
 =?us-ascii?q?eO97NLgzF1olWjoALVYPh9mCodyPQ05H4bheEJpBQiziGHDr8OGklYODTmlw6U?=
 =?us-ascii?q?4NCmsKVXeGGvfKCs1Ep5mNCtFrCDrRtaWHbkYZciBi5w4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj0oqgs4iAL2Vt4bi1?=
 =?us-ascii?q?AhpFNjDuY8MT+zftjbtRn8qM3oCvGIlhFSsPXJfyUf2oFzcSv+z9NwmSCD08tm?=
 =?us-ascii?q?ubGb3HEA+d8khmqmzAE4uxO3GLPnUZzshiRBqAJExZmg8URy43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/0fUMcuD7uJqAi?=
 =?us-ascii?q?FX5JuhoBaWKmycYQRIAnoEWkiFB1DlI7mv6sPM8+meBuqiMfTOZa+CpvBZV/eN?=
 =?us-ascii?q?3ZivyJdp/y6QNsWTOXlvF/071VRCXXB6GMTZmi8DSy8NlyLKYM6Uug28+jBsrs?=
 =?us-ascii?q?2k9PTrWQTv5ZaACrdIMNVv/Qy2jrmHN+KKmCl5LjNY3IsWxXDU0LgfwEISiyZ2?=
 =?us-ascii?q?eja3DLQPrjTNQ7zQm6NNCx4bajh+NM9J76I6wwlMNtTXitLz1r5kkPE1D01JWk?=
 =?us-ascii?q?DmmsGsfcYKOX2yNEvbBEaXM7SLPSHLw8DyYa+mVbJclvlbtx2utjadCELjOjWD?=
 =?us-ascii?q?lz/0VxGgK+1MjSebPABAt4G5aBpiFW/jTNf+YB2hLNB3lSE2waEzhn7SNW8TKz?=
 =?us-ascii?q?58c0ZMrr2W9SxZg/V/FHZH7npqNuSEnyeZ7+/FKpcZq/drAyJ0l/5E73Q+0bda?=
 =?us-ascii?q?8CZERPkm0BfV+84+/Xmln/OJxz4hVwBB7n5biYTOsUh8NKHx8phbRW2C7B8L9X?=
 =?us-ascii?q?+XCRkBu51iENKr86RRzMXf0aH+MjFP9/rK8sYGQcvZMsSKNDwmKxWtUD3KCSMb?=
 =?us-ascii?q?QjOxc2LSnUpQlLeV7HLR5oAwrZ7+mZwPYqVWWFw8CrURDUEhVN4NOpBsRRs/jK?=
 =?us-ascii?q?WWysUP4CmQth7UEeBTpJnBHs2TBe7oLn7NiLBebh1O3rL8NoMVHorh0kdmZx9x?=
 =?us-ascii?q?m4GcSBmYZsxEviA0Nlx8m05K6nUrFmA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACWuQ5ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBNfizCCIZc9gXMSAQEYEwGHbSI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUBxIFg?=
 =?us-ascii?q?xyCAgQBpVGBbDOCdgEBBYcgCIdyhC+BVz+BEYJkimgiiTEKhwFRj2oHAoIhBI8?=
 =?us-ascii?q?qGJE9iSKPZwIEAgQFAhMBgUaCDjMaBB+DPIIbDBcSgziKdFGBBQEBjBgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAACWuQ5ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBNfizCCIZc9gXMSAQEYEwGHbSI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQgNCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUBxIFgxyCAgQBpVGBbDO?=
 =?us-ascii?q?CdgEBBYcgCIdyhC+BVz+BEYJkimgiiTEKhwFRj2oHAoIhBI8qGJE9iSKPZwIEA?=
 =?us-ascii?q?gQFAhMBgUaCDjMaBB+DPIIbDBcSgziKdFGBBQEBjBgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55742921"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 11:09:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729163AbeLJTJL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 14:09:11 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:41926 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727725AbeLJTJK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 14:09:10 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wBAJ8YEC121067;
        Mon, 10 Dec 2018 19:08:54 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id : in-reply-to : references; s=corp-2018-07-02;
 bh=9SQ9C4gx7/tSUpU1UOAJA1wHr3nxmNx8qjsppVdb7/A=;
 b=jgxyqS2AzfyVe9IXXzm9qWGB/9FODbaTiBN7UfPTWqSkWC7uxtlVvWZWZB8cvqr/TCLw
 KNSFd7D6+WsDa7vhNB4S1iEpq4M/6P3O5hnGlJY0dEOEJY6CtVcgwNcF2f2FX1QMopwB
 S/yQqQdPJ9lZNrN9wgASIvv7091PYHVqXbN9biXb5pWnPZFKXk1DLrhgGms2NpuI6xJH
 0O/V6IPAxr5gRa19cjIbqElhlggMGLkWa3BstPc3ZcYWHxVDiz6b5mylZZZMOMcpE8zW
 ZuMGoMhwpRR+2b3FsZ8nXIm7+zupG5aCc0fRwBKWsKm37T/3s3kqK36JWz+IqEM8tvwf mA== 
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
        by userp2120.oracle.com with ESMTP id 2p86kqqtdf-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Mon, 10 Dec 2018 19:08:54 +0000
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
        by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wBAJ8rWn006400
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Mon, 10 Dec 2018 19:08:54 GMT
Received: from abhmp0015.oracle.com (abhmp0015.oracle.com [141.146.116.21])
        by aserv0121.oracle.com (8.14.4/8.13.8) with ESMTP id wBAJ8rZR024745;
        Mon, 10 Dec 2018 19:08:53 GMT
Received: from marawils-linux.us.oracle.com (/10.141.196.37)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Mon, 10 Dec 2018 11:08:53 -0800
From: Maran Wilson <maran.wilson@oracle.com>
To: x86@kernel.org, xen-devel@lists.xenproject.org,
        linux-kernel@vger.kernel.org, kvm@vger.kernel.org,
        pbonzini@redhat.com, jgross@suse.com
Cc: boris.ostrovsky@oracle.com, tglx@linutronix.de, mingo@redhat.com,
        hpa@zytor.com, roger.pau@citrix.com, rkrcmar@redhat.com,
        maran.wilson@oracle.com
Subject: [PATCH v9 5/7] xen/pvh: Move Xen code for getting mem map via hcall out of common file
Date: Mon, 10 Dec 2018 11:08:46 -0800
Message-Id: <1544468926-737-3-git-send-email-maran.wilson@oracle.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1544468734-32763-1-git-send-email-maran.wilson@oracle.com>
References: <1544468734-32763-1-git-send-email-maran.wilson@oracle.com>
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9103 signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1812100170
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

We need to refactor PVH entry code so that support for other hypervisors
like Qemu/KVM can be added more easily.

The original design for PVH entry in Xen guests relies on being able to
obtain the memory map from the hypervisor using a hypercall. When we
extend the PVH entry ABI to support other hypervisors like Qemu/KVM,
a new mechanism will be added that allows the guest to get the memory
map without needing to use hypercalls.

For Xen guests, the hypercall approach will still be supported. In
preparation for adding support for other hypervisors, we can move the
code that uses hypercalls into the Xen specific file. This will allow us
to compile kernels in the future without CONFIG_XEN that are still capable
of being booted as a Qemu/KVM guest via the PVH entry point.

Signed-off-by: Maran Wilson <maran.wilson@oracle.com>
Reviewed-by: Juergen Gross <jgross@suse.com>
---
 arch/x86/platform/pvh/enlighten.c | 29 ++++++++++++++---------------
 arch/x86/xen/enlighten_pvh.c      | 20 ++++++++++++++++++++
 2 files changed, 34 insertions(+), 15 deletions(-)

diff --git a/arch/x86/platform/pvh/enlighten.c b/arch/x86/platform/pvh/enlighten.c
index 637bd74ba32d..8040b3fbf545 100644
--- a/arch/x86/platform/pvh/enlighten.c
+++ b/arch/x86/platform/pvh/enlighten.c
@@ -8,11 +8,7 @@
 #include <asm/e820/api.h>
 #include <asm/x86_init.h>
 
-#include <asm/xen/interface.h>
-#include <asm/xen/hypercall.h>
-
 #include <xen/xen.h>
-#include <xen/interface/memory.h>
 #include <xen/interface/hvm/start_info.h>
 
 /*
@@ -31,21 +27,24 @@ static u64 pvh_get_root_pointer(void)
 	return pvh_start_info.rsdp_paddr;
 }
 
+/*
+ * Xen guests are able to obtain the memory map from the hypervisor via the
+ * HYPERVISOR_memory_op hypercall.
+ * If we are trying to boot a Xen PVH guest, it is expected that the kernel
+ * will have been configured to provide an override for this routine to do
+ * just that.
+ */
+void __init __weak mem_map_via_hcall(struct boot_params *ptr __maybe_unused)
+{
+	xen_raw_printk("Error: Could not find memory map\n");
+	BUG();
+}
+
 static void __init init_pvh_bootparams(void)
 {
-	struct xen_memory_map memmap;
-	int rc;
-
 	memset(&pvh_bootparams, 0, sizeof(pvh_bootparams));
 
-	memmap.nr_entries = ARRAY_SIZE(pvh_bootparams.e820_table);
-	set_xen_guest_handle(memmap.buffer, pvh_bootparams.e820_table);
-	rc = HYPERVISOR_memory_op(XENMEM_memory_map, &memmap);
-	if (rc) {
-		xen_raw_printk("XENMEM_memory_map failed (%d)\n", rc);
-		BUG();
-	}
-	pvh_bootparams.e820_entries = memmap.nr_entries;
+	mem_map_via_hcall(&pvh_bootparams);
 
 	if (pvh_bootparams.e820_entries < E820_MAX_ENTRIES_ZEROPAGE - 1) {
 		pvh_bootparams.e820_table[pvh_bootparams.e820_entries].addr =
diff --git a/arch/x86/xen/enlighten_pvh.c b/arch/x86/xen/enlighten_pvh.c
index 41a7d6ad74e0..35b7599d2d0b 100644
--- a/arch/x86/xen/enlighten_pvh.c
+++ b/arch/x86/xen/enlighten_pvh.c
@@ -1,13 +1,18 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/acpi.h>
 
+#include <xen/hvc-console.h>
+
 #include <asm/io_apic.h>
 #include <asm/hypervisor.h>
+#include <asm/e820/api.h>
 
 #include <xen/xen.h>
 #include <asm/xen/interface.h>
 #include <asm/xen/hypercall.h>
 
+#include <xen/interface/memory.h>
+
 /*
  * PVH variables.
  *
@@ -28,3 +33,18 @@ void __init xen_pvh_init(void)
 	pfn = __pa(hypercall_page);
 	wrmsr_safe(msr, (u32)pfn, (u32)(pfn >> 32));
 }
+
+void __init mem_map_via_hcall(struct boot_params *boot_params_p)
+{
+	struct xen_memory_map memmap;
+	int rc;
+
+	memmap.nr_entries = ARRAY_SIZE(boot_params_p->e820_table);
+	set_xen_guest_handle(memmap.buffer, boot_params_p->e820_table);
+	rc = HYPERVISOR_memory_op(XENMEM_memory_map, &memmap);
+	if (rc) {
+		xen_raw_printk("XENMEM_memory_map failed (%d)\n", rc);
+		BUG();
+	}
+	boot_params_p->e820_entries = memmap.nr_entries;
+}
-- 
2.16.1

