Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:53:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E48A0580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 09:38:30 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 09:38:30 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A6cRZSByc1Niqi5jXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uMVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfVytCDI2y?=
 =?us-ascii?q?YYQAAOgOMvpXoYbnulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9CAHLxhAsE84AvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjNaOlZ2S3n54jObxsuofCMXbZrccrWz0kkCgTIjlCK?=
 =?us-ascii?q?poz/JTyV0P4Bsmaa7+pkTuKvjGgnphp2oji13Mgjlo3JiZwPxl/Y8iV5xZ84KN?=
 =?us-ascii?q?ulQ0B4ed6pCIVcuz2ZOodsX88uXmJltDwkxrAIuZO3ZjUGxZY/yxLCZPGLbpKE?=
 =?us-ascii?q?7g/sWeuQOzt0mW9pdbOlixqv/0WtzPD3WNOu31ZQtCVFl8HBtnAT2BzX7ciKUv?=
 =?us-ascii?q?99/ka62TaTzADf8O5EIUYplabBLJ4h2LEwmoISsUTFACD2hF37gLGKekgn4OSk?=
 =?us-ascii?q?9vnrb7b8qpOCOYJ5ihvyPrksl8CnBOQ3KAkOX2yV+eSm073j+FX0QKxUgf0zj6?=
 =?us-ascii?q?nVqY3VKtoFpqGnBw9Zy50s6xGiDzegzNsXg2IHIFVBeBKGjIjmJUvCIf/lDfqn?=
 =?us-ascii?q?h1SskTFrx+3JP7H7A5XNKGTDn6nlfbpn90Fczw8zwMtZ55JTDLEBL/TzWlLruN?=
 =?us-ascii?q?zfFB85PBS4w/z7B9VlyoMeRWWPD7edMKPTsl+H+PgjIuaRZIIOvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMjmF8de7Wp0oUTaHyiAvtmJECZMjLRhMwcGzIKohYmV76tz1mDSiJIIXC1Wa?=
 =?us-ascii?q?06+3c8Eo3hCI7CQoWkhvuGxDu6GZtNIXlLD03JHXr2eoHXZvEXdSjHJ8ZgliAD?=
 =?us-ascii?q?B6GsTpJk2RywuQu/0bd+M+fP5gUespTs0sUz4Pfcwgov/z55BNjIzmeWUmtvlX?=
 =?us-ascii?q?kJTTJl4KcqmlBwxF6F1uBXiuZKHMZe4/dAGlMhOpfG3eVgBvjoVw7Bd8vPQ1Gj?=
 =?us-ascii?q?FIaIGzY0G/c42dYIK3l8H86liFiX2iOwCrlTiL2PH5sy2qXG1nP1KoB2zHOQh/?=
 =?us-ascii?q?pptEUvXsYabT7uvaV47QWGQteRy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAB5RhFcmBHrdtBkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCCYoN8iBlfizOBYC2XU4FzEgEBGBSEQIJ?=
 =?us-ascii?q?+IjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBA?=
 =?us-ascii?q?iAEEQgBAQQKKQECAwECBgEBCg4KAgIiBAICAwFTBg0GAgEBARaDBoF6CAEDAaV?=
 =?us-ascii?q?EcHwzgnYBAQWCQ4RkCIELizGBVz+BESeCa4UBgwSCV4kthxiQSQcCgiMEhgCCI?=
 =?us-ascii?q?4cHBhiBXIUagwMmhyeSVoZCAgQCBAUCEwGBRoIOMxoEH4M8ghsMF4NKinRRgQe?=
 =?us-ascii?q?LCYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAB5RhFcmBHrdtBkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCCYoN8iBlfizOBYC2XU4FzEgEBGBSEQIJ+IjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBAiAEEQgBAQQKKQE?=
 =?us-ascii?q?CAwECBgEBCg4KAgIiBAICAwFTBg0GAgEBARaDBoF6CAEDAaVEcHwzgnYBAQWCQ?=
 =?us-ascii?q?4RkCIELizGBVz+BESeCa4UBgwSCV4kthxiQSQcCgiMEhgCCI4cHBhiBXIUagwM?=
 =?us-ascii?q?mhyeSVoZCAgQCBAUCEwGBRoIOMxoEH4M8ghsMF4NKinRRgQeLCYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="56074939"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 09:38:29 -0800
Received: from localhost ([::1]:46441 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX8Sq-0004VR-SL
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 12:38:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37544)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <maran.wilson@oracle.com>) id 1gX8Qu-00035M-BO
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 12:36:29 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <maran.wilson@oracle.com>) id 1gX8Ql-0006Mo-HR
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 12:36:28 -0500
Received: from aserp2130.oracle.com ([141.146.126.79]:44770)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <maran.wilson@oracle.com>)
	id 1gX8Qi-0006L4-AC
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 12:36:18 -0500
Received: from pps.filterd (aserp2130.oracle.com [127.0.0.1])
	by aserp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id
	wBCHYlTP100876; Wed, 12 Dec 2018 17:36:13 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
	h=subject : to : cc :
	references : from : message-id : date : mime-version : in-reply-to :
	content-type : content-transfer-encoding; s=corp-2018-07-02;
	bh=nDzBgYugFFomRMbXBCqd1aA5DJb0pnprBFebdCwuYzQ=;
	b=dEZ6ziai9Mq13v/KL2ahmUFAj2CfVCsr5uDQDP+ivYdcdaaDZfTP8jxpNOKJTRgIPWH3
	FACAf20KmpfgWc4PCnhfX3vv3XHEDztj4yplvUU1deY/MobKXIXi453wwDMqtbpwduF5
	Vjmy3E3qPsM5KEihxdyY01kv27+hZWxBTP8r62xOWDZrkHh8eQPYrPSoS5YaLeKyA2rJ
	1uZpkPF3fBKZ+bIPZCdad9vIMXhPC5ufG8dibocWQTWPF/vgjxwpLxwnq9DyZqD/5cUj
	Xb7pqNTUB5ddPG9q5bg0fHjCyJRcBNxF0UG71KTPilBnApRZJ6EGDYNNgIstulpumdyu
	1g== 
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
	by aserp2130.oracle.com with ESMTP id 2pawwp37kr-1
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
	Wed, 12 Dec 2018 17:36:13 +0000
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
	by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wBCHaDEQ002479
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Wed, 12 Dec 2018 17:36:13 GMT
Received: from abhmp0007.oracle.com (abhmp0007.oracle.com [141.146.116.13])
	by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wBCHaDsl007569;
	Wed, 12 Dec 2018 17:36:13 GMT
Received: from [10.141.199.39] (/10.141.199.39)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Wed, 12 Dec 2018 09:36:12 -0800
To: Stefano Garzarella <sgarzare@redhat.com>
References: <1544049446-6359-1-git-send-email-liam.merwick@oracle.com>
	<1544049446-6359-4-git-send-email-liam.merwick@oracle.com>
	<CAGxU2F4j11wVoDktowJwXDy42_PWbjwF0qAueFg+He4Tb86wgQ@mail.gmail.com>
	<33fb9ea4-d6c5-ed23-2fb5-6f818e250043@oracle.com>
	<CAGxU2F793nfiFADnJW-j-vLSS0Mp-XP54JFEq++0_JunHQj50w@mail.gmail.com>
From: Maran Wilson <maran.wilson@oracle.com>
Organization: Oracle Corporation
Message-ID: <39cae0a5-954d-c6ea-86a8-c6a6cdb8ccdf@oracle.com>
Date: Wed, 12 Dec 2018 09:36:11 -0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.2
MIME-Version: 1.0
In-Reply-To: <CAGxU2F793nfiFADnJW-j-vLSS0Mp-XP54JFEq++0_JunHQj50w@mail.gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9105
	signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0
	malwarescore=0
	phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
	adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
	engine=8.0.1-1810050000 definitions=main-1812120151
Content-Transfer-Encoding: quoted-printable
X-MIME-Autoconverted: from 8bit to quoted-printable by aserp2130.oracle.com id
	wBCHYlTP100876
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 141.146.126.79
Subject: Re: [Qemu-devel] [RFC 3/3] pvh: Boot uncompressed kernel using
 direct boot ABI
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>, Michael Tsirkin <mst@redhat.com>,
	qemu-devel@nongnu.org, Paolo Bonzini <pbonzini@redhat.com>,
	Stefan Hajnoczi <stefanha@redhat.com>,
	xen-devel@lists.xenproject.org, rth@twiddle.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/12/2018 7:28 AM, Stefano Garzarella wrote:
> On Tue, Dec 11, 2018 at 7:35 PM Maran Wilson <maran.wilson@oracle.com> =
wrote:
>> On 12/11/2018 9:11 AM, Stefano Garzarella wrote:
>>> Hi Liam,
>>> in order to support PVH also with SeaBIOS, I'm going to work on a new
>>> option rom (like linuxboot/multiboot) that can be used in this case.
>> That is awesome. Yes, please keep us posted when you have something wo=
rking.
> Yes, I'll keep you updated!
>
>> Just FYI, before switching over to using Qemu+qboot, we had been using=
 a
>> Qemu only solution (but not using an option rom) internally that worke=
d
>> very well using no FW at all. We had Qemu simply parse the ELF file an=
d
>> jump to the PVH entry point if one is found. The only gotcha was that =
we
>> had to include a pair of patches that were originally written by folks
>> at Intel as part of the clear containers work. Specifically, in order =
to
>> be able to skip firmware entirely, we had to do 2 additional things: (=
1)
>> ACPI tables generated by Qemu are usually patched up by FW. Since we
>> were running no FW, we needed to do that patching up of the ACPI table=
s
>> in Qemu when it was detected that we were going to enter the OS via th=
e
>> PVH entry point. (2) We also needed to add a patch to Qemu to enable a
>> few PM registers -- something typically done by FW.
> I had a look of qemu-lite, are you referring to this?

Yes. More specifically, we were using a modified version of this patch:
 =C2=A0=C2=A0 acpi: patch guest ACPI when loading firmware is skipped
But unlike qemu-lite, we were not using a -nofw flag, instead, just=20
choosing PVH vs legacy boot based on which -kernel binary was provided=20
and whether it contained the PVH ELF note.

So apply the above patch, you also need to pick up:
 =C2=A0=C2=A0 acpi: expose acpi_checksum()

For a while, we had also been using patch:
 =C2=A0=C2=A0 ich9: enable pm registers when there is no firmware
But that last patch can be avoided by simply selecting Hardware-Reduced=20
ACPI mode when building the FADT in Qemu, when PVH boot is selected.

But you probably wont need those patches at all if you are actually=20
running some version of minimized SeaBIOS.

Thanks,
-Maran


>> But if SeaBIOS is involved in the solution you are working on, I guess
>> you won't really need those extra patches. Just figured I'd mention it
>> so you have the full picture.
> Thank you very much to share with me these details!
>
> Cheers,
> Stefano
>
>> Thanks,
>> -Maran
>>
>>> I'll keep you updated on it!
>>>
>>> Cheers,
>>> Stefano
>>> On Wed, Dec 5, 2018 at 11:38 PM Liam Merwick <liam.merwick@oracle.com=
> wrote:
>>>> These changes (along with corresponding qboot and Linux kernel chang=
es)
>>>> enable a guest to be booted using the x86/HVM direct boot ABI.
>>>>
>>>> This commit adds a load_elfboot() routine to pass the size and
>>>> location of the kernel entry point to qboot (which will fill in
>>>> the start_info struct information needed to to boot the guest).
>>>> Having loaded the ELF binary, load_linux() will run qboot
>>>> which continues the boot.
>>>>
>>>> The address for the kernel entry point has already been read
>>>> from an ELF Note in the uncompressed kernel binary earlier
>>>> in pc_memory_init().
>>>>
>>>> Signed-off-by: George Kennedy <George.Kennedy@oracle.com>
>>>> Signed-off-by: Liam Merwick <Liam.Merwick@oracle.com>
>>>> ---
>>>>    hw/i386/pc.c | 72 +++++++++++++++++++++++++++++++++++++++++++++++=
+++++++++++++
>>>>    1 file changed, 72 insertions(+)
>>>>
>>>> diff --git a/hw/i386/pc.c b/hw/i386/pc.c
>>>> index 056aa46d99b9..d3012cbd8597 100644
>>>> --- a/hw/i386/pc.c
>>>> +++ b/hw/i386/pc.c
>>>> @@ -54,6 +54,7 @@
>>>>    #include "sysemu/qtest.h"
>>>>    #include "kvm_i386.h"
>>>>    #include "hw/xen/xen.h"
>>>> +#include "hw/xen/start_info.h"
>>>>    #include "ui/qemu-spice.h"
>>>>    #include "exec/memory.h"
>>>>    #include "exec/address-spaces.h"
>>>> @@ -1098,6 +1099,50 @@ done:
>>>>        return pvh_start_addr !=3D 0;
>>>>    }
>>>>
>>>> +static bool load_elfboot(const char *kernel_filename,
>>>> +                   int kernel_file_size,
>>>> +                   uint8_t *header,
>>>> +                   size_t pvh_xen_start_addr,
>>>> +                   FWCfgState *fw_cfg)
>>>> +{
>>>> +    uint32_t flags =3D 0;
>>>> +    uint32_t mh_load_addr =3D 0;
>>>> +    uint32_t elf_kernel_size =3D 0;
>>>> +    uint64_t elf_entry;
>>>> +    uint64_t elf_low, elf_high;
>>>> +    int kernel_size;
>>>> +
>>>> +    if (ldl_p(header) !=3D 0x464c457f) {
>>>> +        return false; /* no elfboot */
>>>> +    }
>>>> +
>>>> +    bool elf_is64 =3D header[EI_CLASS] =3D=3D ELFCLASS64;
>>>> +    flags =3D elf_is64 ?
>>>> +        ((Elf64_Ehdr *)header)->e_flags : ((Elf32_Ehdr *)header)->e=
_flags;
>>>> +
>>>> +    if (flags & 0x00010004) { /* LOAD_ELF_HEADER_HAS_ADDR */
>>>> +        error_report("elfboot unsupported flags =3D %x", flags);
>>>> +        exit(1);
>>>> +    }
>>>> +
>>>> +    kernel_size =3D load_elf(kernel_filename, NULL, NULL, &elf_entr=
y,
>>>> +                           &elf_low, &elf_high, 0, I386_ELF_MACHINE=
,
>>>> +                           0, 0);
>>>> +
>>>> +    if (kernel_size < 0) {
>>>> +        error_report("Error while loading elf kernel");
>>>> +        exit(1);
>>>> +    }
>>>> +    mh_load_addr =3D elf_low;
>>>> +    elf_kernel_size =3D elf_high - elf_low;
>>>> +
>>>> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_ENTRY, pvh_xen_start_addr)=
;
>>>> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_ADDR, mh_load_addr);
>>>> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_SIZE, elf_kernel_size);
>>>> +
>>>> +    return true;
>>>> +}
>>>> +
>>>>    static void load_linux(PCMachineState *pcms,
>>>>                           FWCfgState *fw_cfg)
>>>>    {
>>>> @@ -1138,6 +1183,33 @@ static void load_linux(PCMachineState *pcms,
>>>>        if (ldl_p(header+0x202) =3D=3D 0x53726448) {
>>>>            protocol =3D lduw_p(header+0x206);
>>>>        } else {
>>>> +        /* If the kernel address for using the x86/HVM direct boot =
ABI has
>>>> +         * been saved then proceed with booting the uncompressed ke=
rnel */
>>>> +        if (pvh_start_addr) {
>>>> +            if (load_elfboot(kernel_filename, kernel_size,
>>>> +                             header, pvh_start_addr, fw_cfg)) {
>>>> +                struct hvm_modlist_entry ramdisk_mod =3D { 0 };
>>>> +
>>>> +                fclose(f);
>>>> +
>>>> +                fw_cfg_add_i32(fw_cfg, FW_CFG_CMDLINE_SIZE,
>>>> +                    strlen(kernel_cmdline) + 1);
>>>> +                fw_cfg_add_string(fw_cfg, FW_CFG_CMDLINE_DATA, kern=
el_cmdline);
>>>> +
>>>> +                assert(machine->device_memory !=3D NULL);
>>>> +                ramdisk_mod.paddr =3D machine->device_memory->base;
>>>> +                ramdisk_mod.size =3D
>>>> +                    memory_region_size(&machine->device_memory->mr)=
;
>>>> +
>>>> +                fw_cfg_add_bytes(fw_cfg, FW_CFG_KERNEL_DATA, &ramdi=
sk_mod,
>>>> +                                 sizeof(ramdisk_mod));
>>>> +                fw_cfg_add_i32(fw_cfg, FW_CFG_SETUP_SIZE, sizeof(he=
ader));
>>>> +                fw_cfg_add_bytes(fw_cfg, FW_CFG_SETUP_DATA,
>>>> +                                 header, sizeof(header));
>>>> +
>>>> +                return;
>>>> +            }
>>>> +        }
>>>>            /* This looks like a multiboot kernel. If it is, let's st=
op
>>>>               treating it like a Linux kernel. */
>>>>            if (load_multiboot(fw_cfg, f, kernel_filename, initrd_fil=
ename,
>>>> --
>>>> 1.8.3.1
>>>>
>


