Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:45:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 597FD58028E;
	Mon, 10 Dec 2018 16:02:40 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 16:02:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0g0cZR9yJTRLKv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+IRIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsLxUb46WSqv475yRBHqlS?=
 =?us-ascii?q?gHLSc1/nzKisxrlKJUvg6upwBmz47QZ4GUOud1cqfdcN8fQ2dOWdpfWSxfD4+l?=
 =?us-ascii?q?docBDfcOPfxBo4fgulsOtgO+ChewC+Pz1zREgmH60bE/3+knDArI3hEvH8gWvX?=
 =?us-ascii?q?rUstv7KakcX+OywqbKwzXMbf1W2Szl6IXKaR0tve2AUKhsfcfL1UUjCwXIhUiQ?=
 =?us-ascii?q?p4z/ODOV0/wAvXac7+plSOmgiHQoqwdsoji03ccsi5TCi4UUy1/e8yV53Z01Jc?=
 =?us-ascii?q?a5SENgYt6rDoFQtyeEOItyWM8iRHtouCkjx7AApJW1fzAKxYw5yxLDb/GLaZWE?=
 =?us-ascii?q?7xz9WOqLPDt1h25pdKi+ihuw6UStzu7xWtOq3FpUsiZJiMfAu34O2hDJ6cWLV/?=
 =?us-ascii?q?1w9Vq71zmVzQDc8ORELFg0laXFL54hxaY9loQcsUvdBC/6gkb2g7GMdkUi5Oeo?=
 =?us-ascii?q?7/7rYrL8pp+TL4N0iwf+PboymsGnH+g0LgwDU3KG9emyyrHv51D1TbZWgvEsk6?=
 =?us-ascii?q?TUsojWJcEBqa64Bw9V3Jwj6xG6Dzq+1NQYnH8HLE9KeR6ejIjmJUvOIPbmAve7?=
 =?us-ascii?q?mlislzlqx/bYMb37GZjNMHfDn6n7fbpn6E5T1hAzzdZB6JJQEL0BJ+jzWkDpuN?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl0oMeWGGPDbGDPKLdrF+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaHqgBPRpP12ZYWbwgtcGCWoKvhAxTO32iFKYVj5ffXayX7?=
 =?us-ascii?q?8m6TE9B4KrFoPDRoGrgLyc0ya3BJxWZmZaCl+SFXfkbZmLW/AJaCiKOM9ujiQE?=
 =?us-ascii?q?VaS9S48mzRyutgj6xKR9IurX/S0Ys5Tj1N9u6u3XlBEy8yF0DsuH32GMSWF0gn?=
 =?us-ascii?q?0HRzss0K9jpkx9z0+J0bJkjPxACdxT+/RJXx8gOp7Hz+x6DNPyVhjbftiTSlar?=
 =?us-ascii?q?WdGmATA3TtIszN4CeUd9G9O+jh/d2yqmGaMal7uOBJYs6KLTw2DxJ9phy3bBzK?=
 =?us-ascii?q?QhjEMpQs1VOW2ih65w7Q7TB4HSnkWdlqaqc7kc3SHX+GeCy2qOoF9XUApqXarZ?=
 =?us-ascii?q?WnAfY1Pcrc7l6UPaU7+uFbMnPxNcxsGYNKtFdMfljVVcS/flI9TRfWSxl2C0BR?=
 =?us-ascii?q?aLw7OMaJHne2Ec3CXbFUgFnBof/XeANQgiGCihp3jSAyBpFVLqe0ns6/VxqGun?=
 =?us-ascii?q?Tk8oyAGHd1Bu2KCr+hELn/CcS+kc3rQfuCg/rTV5B1K939PQC9qdqAttZqRcYd?=
 =?us-ascii?q?Uh4FhZ0WLVrRByPpulL6p6nF4Rbxx3v1/y1xVwEohAjckqrHYtzApuKaKZ0ElN?=
 =?us-ascii?q?dy+C0ZD3IL3XLmjy/Baga6PN3lHe0dCW+roA6fgiqlXjuh2pGVQm83l9z9ZV1H?=
 =?us-ascii?q?6c7I3QDAUOSZLxTlo39x9iqr7AZiky+YzV2mNsMKWuqTDCxs8mC/EjyhajeNdf?=
 =?us-ascii?q?LriJFAvzE80cGsivJ/Ymm1mvbhIYIu9S8LQ4MN+hd/uDwKSrJvpvnCq6jWRb54?=
 =?us-ascii?q?BwykKN9zdmRuHUxZoEwvGY0RGBVzfzl1qhtsH3mYZZZTAdBGa/yC7kBJJPaa12?=
 =?us-ascii?q?Z4oEFWCuI8ivzNVkm5HtQ2JY9EKkB14ews+peAadYEbn3QJN0kQbu3qnljWizz?=
 =?us-ascii?q?x1ij0msrCQ3CjTzOv8bhoHPWhLSXJmjVftJ4i0kt8bUFKpbwgviBuq+0L6y7JH?=
 =?us-ascii?q?q6R4KmnZWV1IcDTuL2F+TquwsaKPYs5O6J8ysSRbSv+8YU2cSrPmpxsa0iXjH3?=
 =?us-ascii?q?ZRxTwhdjGqvIn5kAJ+iG6HMHlzq3/Zc9lqxRjD/NzcWeJR3j0eSSl6kzbXHFu8?=
 =?us-ascii?q?P9qu/dmOjJfMqOO+V2GgVp1Vbybry5iNtC+65W1sHB2+kOq/mtzhEQgmzyD708?=
 =?us-ascii?q?NmWjnPrBb5eoPrzbi1Mfp7fkl0A1/x88p7FZt5kocqhpEQ2H4ai46R/XoGl2fz?=
 =?us-ascii?q?LNpa1bj/bHoLWT4E3drV7BL5101kK3KD35j5WWmFwst9e9m6ZXsb2iEn4MBLEq?=
 =?us-ascii?q?uU7KFEkjFzolq3tg/RZfl9njEAyfoh8nIagucJuBYzwSWZGLwdAU5YPSn0nRSS?=
 =?us-ascii?q?89++tLlXZHqocbWo0Up+nNOhA6uYrgBSRnn5YYsiEjFq7spkLl3MynLz55rgeN?=
 =?us-ascii?q?nRa9ITqxKVnw3Bj+hTNJI+iP4KiTB7NmL6uH0v0/Q7ggB23ZGmoIiHLH1g/L6+?=
 =?us-ascii?q?Ah5dLDH0Ztkc+jfwjaZFhcaW3puiHpFgGjUNQZvpQuikEDMUtfT7KQmOFCcwpW?=
 =?us-ascii?q?ucGbraBQWf8ltpr2rTE5C3MHGaPGIWws9lRBmZOUxTmgQUXCghk549FwCqwtHh?=
 =?us-ascii?q?cUhj6jAQ4F74tgVDyuZyOxbjVWffoR+iai0oR5iHMBpW8gZC6l/XMcOE6+J8AT?=
 =?us-ascii?q?pY8oe9rACXKWybegdIDXwPWkOeHFDuJb2u5djG8+iFCeuyNfrOYbOSqeNAU/eE?=
 =?us-ascii?q?346g0oxj/zyULMWAImFiD+En2kpERX14G8PZmygWSywKjS3NadSXpAy7+i1xoc?=
 =?us-ascii?q?Cy6/DrWAPp5YuSBLpeK9Rv+xaqgaidM+6cnjp2KTFd1pkU33/H1KAf3EIOiyFp?=
 =?us-ascii?q?bzStEaoPtS/OTKLTm69bFR0bazl0NMtH8a08xBRNOdXAh9Px1754iOM1ClhfWV?=
 =?us-ascii?q?zgnMGpedIFI2WnOFzbA0aLMayMJSfXzMHvfaO8VbpQgf1OuB2tojmbCVHsPzSZ?=
 =?us-ascii?q?mzntVhCiKuVMjCCdPBxDt4CxaBdtCW7/TN34bh23KsN4jTozwbcsnHPFKXYcMS?=
 =?us-ascii?q?Rgc0NKtrCQ8SJYgvBlF2Nd9HZqMemElDif7+TDLpYWsP1rAjl7lu5A4XQ6zadV?=
 =?us-ascii?q?4z9ARPBvhCTSqdtuqUm8kuaT0jpnTAZOqjFTiYOLp0piP6DZ9phGWXnc/RMN7X?=
 =?us-ascii?q?+fCxIFp9Z+Dt3vuqZQysXAla7pKTdC9c7U8tUYB8TONM2HN38hYlLVH2vOCxAZ?=
 =?us-ascii?q?QDK3HW7YgEBYkerU8Wea/bYgrZ25pJ0LAo1SUkEuDfJSXlZsGsEZO5ZfXT4+l7?=
 =?us-ascii?q?OfyskS6izt/1HqWMxGs8WfBbqpCvL1JWPD0LQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A3AADt/Q5ch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGDayeEXIgWjRslFJc9gXEWGBMBh20iNgcNAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKSMMgjYMgnsDAwECJBkBATcBBQkBAR8xA1QZBYMcggIFpS6BbDOCdgEBBYEAh?=
 =?us-ascii?q?icIh3KDE4EcF4F/gREziC2FDok7hwGQOwmGSIsHGJE9LJkEgU0BggZNMAiDJ4I?=
 =?us-ascii?q?bDBeIXoVeITIBgQMBAQE7i2EBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A3AADt/Q5ch0O0hNFkHQEBBQEHBQGBUwYBCwGDayeEXIg?=
 =?us-ascii?q?WjRslFJc9gXEWGBMBh20iNgcNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYMgnsDA?=
 =?us-ascii?q?wECJBkBATcBBQkBAR8xA1QZBYMcggIFpS6BbDOCdgEBBYEAhicIh3KDE4EcF4F?=
 =?us-ascii?q?/gREziC2FDok7hwGQOwmGSIsHGJE9LJkEgU0BggZNMAiDJ4IbDBeIXoVeITIBg?=
 =?us-ascii?q?QMBAQE7i2EBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="55341348"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 16:02:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730427AbeLKACY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 19:02:24 -0500
Received: from mail.kernel.org ([198.145.29.99]:41556 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730384AbeLKACO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 19:02:14 -0500
Received: from localhost.localdomain (c-98-220-238-81.hsd1.il.comcast.net [98.220.238.81])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id CD4EC214D9;
        Tue, 11 Dec 2018 00:02:12 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544486533;
        bh=BVRV8Sk3npvAJkum1VQb0/QzGzMsLY38YHioXENz44s=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:In-Reply-To:
         References:From;
        b=DpF8BcwIBXoRY5Y1bWNw/xIxUYKqwkNSuvu5HneQTMn1Sr6b5h3dil6d9skuzz+bj
         FPt0wNnlSMAFaDIfKT/pOg0vceJQ0CecE+/pGjH6YY+U+aQ86jkQVA/N/41tiY+luC
         6ddUsJoagNqQvlYY741AJ4YUtCWbcEx3w9SS/kwQ=
From: Tom Zanussi <zanussi@kernel.org>
To: rostedt@goodmis.org
Cc: tglx@linutronix.de, mhiramat@kernel.org, namhyung@kernel.org,
        vedang.patel@intel.com, bigeasy@linutronix.de,
        joel@joelfernandes.org, mathieu.desnoyers@efficios.com,
        julia@ni.com, linux-kernel@vger.kernel.org,
        linux-rt-users@vger.kernel.org
Subject: [PATCH v8 18/22] tracing: Use var_refs[] for hist trigger reference checking
Date: Mon, 10 Dec 2018 18:01:32 -0600
Message-Id: <fe1901c79da40f54471e37d4c1ca9b61eea8dc89.1544483273.git.tom.zanussi@linux.intel.com>
X-Mailer: git-send-email 2.14.1
In-Reply-To: <cover.1544483272.git.tom.zanussi@linux.intel.com>
References: <cover.1544483272.git.tom.zanussi@linux.intel.com>
In-Reply-To: <cover.1544483272.git.tom.zanussi@linux.intel.com>
References: <cover.1544483272.git.tom.zanussi@linux.intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Tom Zanussi <tom.zanussi@linux.intel.com>

Since all the variable reference hist_fields are collected into
hist_data->var_refs[] array, there's no need to go through all the
fields looking for them, or in separate arrays like synth_var_refs[],
which will be going away soon anyway.

This also allows us to get rid of some unnecessary code and functions
currently used for the same purpose.

Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
---
 kernel/trace/trace_events_hist.c | 57 +++++-----------------------------------
 1 file changed, 7 insertions(+), 50 deletions(-)

diff --git a/kernel/trace/trace_events_hist.c b/kernel/trace/trace_events_hist.c
index 130ac2cf6893..268f56bc12de 100644
--- a/kernel/trace/trace_events_hist.c
+++ b/kernel/trace/trace_events_hist.c
@@ -1423,45 +1423,11 @@ check_field_for_var_ref(struct hist_field *hist_field,
 {
 	struct hist_field *found = NULL;
 
-	if (hist_field && hist_field->flags & HIST_FIELD_FL_VAR_REF) {
-		if (hist_field->var.idx == var_idx &&
-		    hist_field->var.hist_data == var_data) {
-			found = hist_field;
-		}
-	}
-
-	return found;
-}
-
-static struct hist_field *
-check_field_for_var_refs(struct hist_trigger_data *hist_data,
-			 struct hist_field *hist_field,
-			 struct hist_trigger_data *var_data,
-			 unsigned int var_idx,
-			 unsigned int level)
-{
-	struct hist_field *found = NULL;
-	unsigned int i;
-
-	if (level > 3)
-		return found;
-
-	if (!hist_field)
-		return found;
+	WARN_ON(!(hist_field && hist_field->flags & HIST_FIELD_FL_VAR_REF));
 
-	found = check_field_for_var_ref(hist_field, var_data, var_idx);
-	if (found)
-		return found;
-
-	for (i = 0; i < HIST_FIELD_OPERANDS_MAX; i++) {
-		struct hist_field *operand;
-
-		operand = hist_field->operands[i];
-		found = check_field_for_var_refs(hist_data, operand, var_data,
-						 var_idx, level + 1);
-		if (found)
-			return found;
-	}
+	if (hist_field && hist_field->var.idx == var_idx &&
+	    hist_field->var.hist_data == var_data)
+		found = hist_field;
 
 	return found;
 }
@@ -1473,18 +1439,9 @@ static struct hist_field *find_var_ref(struct hist_trigger_data *hist_data,
 	struct hist_field *hist_field, *found = NULL;
 	unsigned int i;
 
-	for_each_hist_field(i, hist_data) {
-		hist_field = hist_data->fields[i];
-		found = check_field_for_var_refs(hist_data, hist_field,
-						 var_data, var_idx, 0);
-		if (found)
-			return found;
-	}
-
-	for (i = 0; i < hist_data->n_synth_var_refs; i++) {
-		hist_field = hist_data->synth_var_refs[i];
-		found = check_field_for_var_refs(hist_data, hist_field,
-						 var_data, var_idx, 0);
+	for (i = 0; i < hist_data->n_var_refs; i++) {
+		hist_field = hist_data->var_refs[i];
+		found = check_field_for_var_ref(hist_field, var_data, var_idx);
 		if (found)
 			return found;
 	}
-- 
2.14.1

