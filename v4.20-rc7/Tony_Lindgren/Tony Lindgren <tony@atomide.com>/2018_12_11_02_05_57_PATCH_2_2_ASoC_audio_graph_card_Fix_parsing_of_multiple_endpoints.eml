Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 12:55:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5191C5807A2;
	Mon, 10 Dec 2018 18:06:25 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 18:06:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6KiF2BO1L5OFJCZPm4Al6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn7osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCOgOPehXoIfyvFsOtRmzCBKwCO7s0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMstv1M6ESUOCox6fOzDXDae5Z2Tjn6IfWdBAqvPaBXa53ccrXyUgiDBnKjkmX?=
 =?us-ascii?q?qYzgPjOay/oCv3KH4OpnUOKikmgqoBx/rDiow8cjkIjJhoQNx1/e6CV23Yc1Jd?=
 =?us-ascii?q?qhRE50e96rCoNQtyGDO4RqWMwiWXxntDwmxbEfoJK3ZTIFxZI6zBDcc/yKa5aE?=
 =?us-ascii?q?7g7nWeqLPDt1imxpdKiiixux7USs0OzxW8us3FtIsCZJiMfAu38J2hDJ9MSKRO?=
 =?us-ascii?q?Fx8lq/1TuP0Q3Y9/tKLloulaXBLp4s2r4wmYQXsUTEBiL2hkr2g7GMdkk++ein?=
 =?us-ascii?q?9f7nYrP4qZ+YLYN0jRv+Mqs2lsy+B+Q3LBQOUnCF9eig0LDv51D1TbtUgvEsj6?=
 =?us-ascii?q?XUs4zWKd4aq6O7GwNV15ws6xe7DzeoytQYmnwHIUpBeBKGiYjpJl7PLOn7Dfih?=
 =?us-ascii?q?mVSslilkx/TfMr3mDJTNKGbMkK36cLZj5E5T1hAzwcpc551KELEBJuz8WkvruN?=
 =?us-ascii?q?zfFB85PBS4w/z7B9VlyoMeRWWPD7edMKPTsl+H+PgjIuaRZIIOvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMjmF8de7Wp0oUTaHyiAvtmJECZa2L2gtgdCWcKohY+TOvyhV2CSzFTZmqyUL?=
 =?us-ascii?q?g75j0hCIKmEJ3MRoaigLGa2Ce7H5tWZn1JC1yWEHfocZmEVOkIaC6IPsBhlTkE?=
 =?us-ascii?q?X6C7S4A9zRGuqBP6y71/I+rW/S0Xq4jv1Nty5+3VkxEy8id5D8Cc02GLUmF1kX?=
 =?us-ascii?q?kERz4w3KBjv0N9zk2P3rR/g/xdDdZT/e9GUh8mNZ7AyOx3E8r9WhnBfteOS1aq?=
 =?us-ascii?q?WM+mDiszTt8qx98OYkB9G8itjxzZ3iqqBaMVmKKPBJAu7q3c2H3xLd5ny3nazK?=
 =?us-ascii?q?khk0UmQsxXOG2lnKF/8RLfB4rIk0qDkaaqer8R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsDmgk9YRPj9ItjeY3i+m2GrBR?=
 =?us-ascii?q?mWwLOAa47qe2YY3CXZE0UElwET/XCbNQkxHCuhomTeDCBwGlLreU/j7e5+qHaj?=
 =?us-ascii?q?RE8u0w6Kd1Fh16ay+hMNmPOTUe0T0awetCchsTp0Gk290MzQC9ebowphfaNcYc?=
 =?us-ascii?q?4y4Vtd1GLZsRB9MYKkL6x4mlEedAF3tVv01xprEoVAjdQqrHQywQpuKKKY1VRB?=
 =?us-ascii?q?dy+Y3ZHwILHXNnP+/Be1a67S21He1tmW97wL6PQ5rVXjoQ6oGlAj83Vhz9lazX?=
 =?us-ascii?q?+c6o/WAwoVVJL7Slw3+ARip7HGfik94JvZ2mdoMaaqvT7NxdIoCPE+xRa9YthQ?=
 =?us-ascii?q?KqWEFAz1E80EHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQ35cF3uuU0RedWzb9jFeuqMb3mY9faDEWH2q/zzXkBYFLaq1z?=
 =?us-ascii?q?e4YLFXmhI8mtytpigJ7tXmZS9ES/CFMexM+pZR2SYkTn3Q1RyUsYu2anlja/zz?=
 =?us-ascii?q?BulTEmsLCf3C3Xz+v+bhUHPnNES3d4jVfrJ4i5lNQaXEmubwg0mxqp/0f6x65H?=
 =?us-ascii?q?pKthK2nfW1tHfy/zL2t6SKu/qqKCY9JT6JMvqShWUOW8bUqaS7LnuBsaziXjEn?=
 =?us-ascii?q?BaxDA6cTGqp5r4kwZ7iGKbMHZ8sn7ZddtsyhfY4dzWXeRR0SYeRClklTnXAUCx?=
 =?us-ascii?q?P9uz8tWOlJfDsee+W3i6VpJJcinrzoKAtC2l6m1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYohJAfw38aio+X/XoGl2f+?=
 =?us-ascii?q?KtFb2aP4bHoQSj8H2d/V4A752EJ9KnKF3Z72VnKYwsF5fdm1fnsW2j4h78BNEK?=
 =?us-ascii?q?qU76ZLnSpvrlq4sALee/59njgGxPsq6X4ahfwJuQU3wiWcBLASAVdXPSj2mxuU?=
 =?us-ascii?q?6NC+qb1dZHyzfrioyEp+gdehAamHogFdW3b2YI0uHCFu4cVkLFLDzmfz5Zr6d9?=
 =?us-ascii?q?nKYtIerRmUkxbGj+hIJ5M9jPsKhSx7OW3juX0p0fI0jRtr3ZuipoiIN31t/L6l?=
 =?us-ascii?q?Ah5fLjD1e8QT+jT3gadfhMmW2Z2vHo56GjUKR5boSfOoEDQPtfXoLQqOETs8qm?=
 =?us-ascii?q?uFFrrbBwOQ9EBmr3fXGZCxK36XPGUZzcllRBSFP0NQmgcUXDEnnpIjEgCq2dfs?=
 =?us-ascii?q?cEN45jAX+175pQFAyuNuNxnjTGjfoB2kZSszSJiaNBBW9B1N51/JMcyC6eJ+By?=
 =?us-ascii?q?NY8YekrAOTMWyXfRhIAXsKWkyZBFDjI7+u6sPb8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRi0XkCLNctebpAqm9S1xtM?=
 =?us-ascii?q?y/6/PrWATg5YaUD7tSMNNv+w25gKuZNu6Qgjp5Jihc1p8W2XDIz70f1kYIiy5y?=
 =?us-ascii?q?bzmtDagAtSnVQaLQhKBXDh0bayByNMdS7KI8xA5NOcHFhdPvy754leU4C1NEVV?=
 =?us-ascii?q?znh8GoatYGI2C7NFPbGkmLMK6KKiHMw8Hyeam8U6FfjP1Itx2svjaWC1XsPimY?=
 =?us-ascii?q?mDnzSR+uMftAjCWaPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFmxd73plKPOIlDqD4+bEKpYZr/1rDz9wl+Jb5nQ61rRU?=
 =?us-ascii?q?4DtFRPxzhCvdsNpur0u6nemIzzptSABOpSpThIKXoUViPr3U95laVnbC+RIN7G?=
 =?us-ascii?q?OQBAwLpttlENLvva9Qx8PLlKLyLjdC7t3V8dEdB8jSNMKILn4hPQD1Fz7TCQtW?=
 =?us-ascii?q?BQKsYETWnU8VuuuV6Xvd+pIgrZ/qmZcmSbJBUlExUPQABRI2MsYFJcJLWTU12Z?=
 =?us-ascii?q?qaisIH/3e45E3NQ8NLlpnbUfeTDfipIzGc2+oXLyAUyK/1eNxAfrbw3FZvPxwj?=
 =?us-ascii?q?xNzH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CDAQDnGg9ch0O0hNFkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YNsJ4xzizKCIZkwLBMBh20iOBIBAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYgM?=
 =?us-ascii?q?DAQIvAUYGCQEBGDgDVAYTBYMcggIFpziKLIdyhC8XgX+BEY1uApA6j2ZVCYIlj?=
 =?us-ascii?q?x8jYJBdmw2Bd00jFYMnkHweATIBgQMBAQEOilEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CDAQDnGg9ch0O0hNFkHQEBBQEHBQGBZYNsJ4xzizKCIZk?=
 =?us-ascii?q?wLBMBh20iOBIBAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYgMDAQIvAUYGCQEBG?=
 =?us-ascii?q?DgDVAYTBYMcggIFpziKLIdyhC8XgX+BEY1uApA6j2ZVCYIljx8jYJBdmw2Bd00?=
 =?us-ascii?q?jFYMnkHweATIBgQMBAQEOilEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="56344607"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 18:06:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729422AbeLKCGP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 21:06:15 -0500
Received: from muru.com ([72.249.23.125]:57258 "EHLO muru.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729389AbeLKCGN (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 21:06:13 -0500
Received: from hillo.muru.com (localhost [127.0.0.1])
        by muru.com (Postfix) with ESMTP id 48DB68138;
        Tue, 11 Dec 2018 02:06:16 +0000 (UTC)
From: Tony Lindgren <tony@atomide.com>
To: Mark Brown <broonie@kernel.org>
Cc: Liam Girdwood <lgirdwood@gmail.com>,
        Jaroslav Kysela <perex@perex.cz>,
        Takashi Iwai <tiwai@suse.com>, alsa-devel@alsa-project.org,
        linux-kernel@vger.kernel.org, linux-omap@vger.kernel.org,
        Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Subject: [PATCH 2/2] ASoC: audio-graph-card: Fix parsing of multiple endpoints
Date: Mon, 10 Dec 2018 18:05:57 -0800
Message-Id: <20181211020557.61783-3-tony@atomide.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181211020557.61783-1-tony@atomide.com>
References: <20181211020557.61783-1-tony@atomide.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

We currently use only the first endpoint even if multiple endpoints
are configured for a port.

We should follow what's specified in the device graph binding
document Documentation/devicetree/bindings/graph.txt in paragraph
"Organisation of ports and endpoints":

"If a single port is connected to more than one remote device, an
 'endpoint' child node must be provided for each link."

This is the case for example for I2S where multiple devices can be
connected to a single I2S port sharing it using TDM (Time-Division
Multiplexing).

To fix this, we need to iterate over each endpoint for a port.

Note that the dts "dais" property should still contain a single
property for each port, and not for each endpoint.

Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Signed-off-by: Tony Lindgren <tony@atomide.com>
---
 sound/soc/generic/audio-graph-card.c | 41 ++++++++++++++++++++++++----
 1 file changed, 36 insertions(+), 5 deletions(-)

diff --git a/sound/soc/generic/audio-graph-card.c b/sound/soc/generic/audio-graph-card.c
--- a/sound/soc/generic/audio-graph-card.c
+++ b/sound/soc/generic/audio-graph-card.c
@@ -156,17 +156,17 @@ static int asoc_graph_card_dai_init(struct snd_soc_pcm_runtime *rtd)
 	return 0;
 }
 
-static int asoc_graph_card_dai_link_of(struct device_node *cpu_port,
+static int asoc_graph_card_ep_of(struct device_node *cpu_port,
+					struct device_node *cpu_ep,
 					struct graph_card_data *priv,
 					int *dai_idx, int link_idx)
 {
 	struct device *dev = graph_priv_to_dev(priv);
 	struct snd_soc_dai_link *dai_link = graph_priv_to_link(priv, link_idx);
 	struct graph_dai_props *dai_props = graph_priv_to_props(priv, link_idx);
+	struct device_node *codec_ep = of_graph_get_remote_endpoint(cpu_ep);
 	struct asoc_simple_dai *cpu_dai;
 	struct asoc_simple_dai *codec_dai;
-	struct device_node *cpu_ep    = of_get_next_child(cpu_port, NULL);
-	struct device_node *codec_ep = of_graph_get_remote_endpoint(cpu_ep);
 	int ret;
 
 	cpu_dai			=
@@ -230,6 +230,31 @@ static int asoc_graph_card_dai_link_of(struct device_node *cpu_port,
 	return ret;
 }
 
+static int asoc_graph_card_dai_link_of(struct device_node *cpu_port,
+					struct graph_card_data *priv,
+					int *dai_idx, int link_idx)
+{
+	struct device *dev = graph_priv_to_dev(priv);
+	struct device_node *ep = NULL;
+	int num_ep, ep_idx, ret;
+
+	num_ep = of_get_child_count(cpu_port);
+	if (!num_ep) {
+		dev_err(dev, "no cpu endpoints found for %pOf\n", cpu_port);
+		return -ENODEV;
+	}
+
+	for (ep_idx = 0; ep_idx < num_ep; ep_idx++) {
+		ep = of_get_next_child(cpu_port, ep);
+		ret = asoc_graph_card_ep_of(cpu_port, ep, priv,
+					    dai_idx, link_idx + ep_idx);
+		if (ret)
+			return ret;
+	}
+
+	return ret;
+}
+
 static int asoc_graph_card_parse_of(struct graph_card_data *priv)
 {
 	struct of_phandle_iterator it;
@@ -272,8 +297,14 @@ static int asoc_graph_get_dais_count(struct device *dev)
 	int count = 0;
 	int rc;
 
-	of_for_each_phandle(&it, rc, node, "dais", NULL, 0)
-		count++;
+	of_for_each_phandle(&it, rc, node, "dais", NULL, 0) {
+		int ep_count = of_get_child_count(it.node);
+
+		if (ep_count)
+			count += ep_count;
+		else
+			count++;
+	}
 
 	return count;
 }
-- 
2.19.2
