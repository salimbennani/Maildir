Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:26:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A035F58079D;
	Fri, 14 Dec 2018 01:42:07 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 01:42:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnS5hdBPAhZPWvOijZYgl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj+r8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyDJHnGP60bE03ukhFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7KKASUe+rw6nS0D7NdO5W1i3g54jSdRAhuuyHULVqccrWxkkgCRnFjkyL?=
 =?us-ascii?q?pIz5PjOZzPgCs2+e7+d5U++klm0pqxlprzSx2sshjpPFip8bx1za7yl13YU4Kc?=
 =?us-ascii?q?GiREN6Y9OoCIZcuiGYOodsX88vQX1ktDwnxrAEpZK3ZjUGxIg7yxPZdveJaZKH?=
 =?us-ascii?q?4gj5W+aUOTp4hGxqeLa4hxuq70igxfPzVtOu3FZJsCVFiN/MuW4J1xDJ7ciHUP?=
 =?us-ascii?q?R98l+g2TaJyQ/T9vlJLV4omaffMZIt37A9moQJvUjeHSL6hF/6ga6Ue0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMqAvmsy5HOQ5PRECX2uF9uSm0r3s40n5TKxNjvw4lK?=
 =?us-ascii?q?nWroraKN8Fpq62HQBVyJwv6xWhADe81tQXg30HIEhCeBKdgIjlI0vOL+zgDfej?=
 =?us-ascii?q?n1Ssly9mx/THPr3iHJrBNHfCkKr6cLZ56k5czhczzN9F65JVDLEBPOz8WkvruN?=
 =?us-ascii?q?PECR85NhS+w/z7B9VlyoMeRWWPD7eZMKzIsF+I+vggI+6WaI8VpTbyMf4l5/H1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o+5jE8Fo2qF4TDRoergLyH2ye2BZlWZmFAClCRHnbkbYSEW/EQaC2MJs9tiCAL?=
 =?us-ascii?q?Vb+kS4U5zxGhqBf6y6Z7LurT4iAXr4nj1Nhy5+3Qjx0y7yZ7D8aG3mGJTmF0mH?=
 =?us-ascii?q?4IRjAs0KB+p0x91kmM0axij/NEEtxT4utDUh0mOp7E0+x6F9fyVxrCftiTTlaq?=
 =?us-ascii?q?WNGmATArQdI3zN8DeEJ9G9SkjhDe0CumGb4Vl7qXBJMq9qLQxWT+J8F4y3zezq?=
 =?us-ascii?q?kuk0EmQtdTNW2hnqNw6hLcB5DXnEmDl6alb6Ic3DXT+2eFymaOuEJYUAt0Uaje?=
 =?us-ascii?q?WXAfZ03Wrcn250/YTr+uD6gnPRVFycKYNqRKbdjph01cRPj/INTef36xm2CoCB?=
 =?us-ascii?q?mV3LyMcpTld38d3CrHDkgEiB4c/XCdOAg6ByehpX/eDTN0GVLuZUPs7fdxqHeh?=
 =?us-ascii?q?QkAoyAGKalVr16Cp9R4NmfycV/QT06oYuCcgrjV0G0q939LWCtaauwptZqJcYc?=
 =?us-ascii?q?k54FdG02LZuBdwPpihL6Bkm14ffB57v0Lo1xVrFIpAldImo28tzAp3MaiYyk9O?=
 =?us-ascii?q?dyuE3ZDsPb3aMnP9/BSxZK/ZxF7f0Mya9bwS6PslsVrjugKpFk0883h819lV0n?=
 =?us-ascii?q?2c5ojFDQYIUJLxVFo3+AZ+p73AfiY94IbU32V2Maaoqj/Cx84pBOw9xxegYtdT?=
 =?us-ascii?q?Kr+LGBXzEs0aHceuLuMqlkOtbhIFOuBS6aE1M9mnd/uAxK6kIuJgkCi6gmRA5Y?=
 =?us-ascii?q?B3yliM+DZkSu7Uw5YFxOmV3hGGVzjgllihqN34mYdeaTEUAGW/0ynkCJdNaaJo?=
 =?us-ascii?q?eYYEFHmhI9ewxtV4nJPtX39Y9Fi+B1IJwsOpeBySb0Dj0g1Uz0gYvXunmS6gxT?=
 =?us-ascii?q?xujz4ptraf3DDJw+n6dBsHO3RHRWl4gVf3PIi0icsXXEypbwgviRuk6lz2x6ld?=
 =?us-ascii?q?pKRjMWbTRV1EcDTxL2FnSqGwrKaNY9ZT6JM0tiVaSOa8bkqASr7+oBsa1DnvH3?=
 =?us-ascii?q?BEyzA4dDGqu5P5kAJ8iG+GKHZzrXzZedx/xBvF5dzcQ+JR0SQCRCVilTbXAV28?=
 =?us-ascii?q?NcGz/dqIj5fDrvy+V2W5W5xTaybrypmMtCm65W1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYoh5Efw3kaio+V/Xoai2jz?=
 =?us-ascii?q?N9pb1Ln6bHoMQz4L3tHU7BLk2E1lMnKG2Yb5Wm+BzctmYtmwenkW1T4l78BWFK?=
 =?us-ascii?q?eU66RJnS50olq7tw3de/Z8kSkGyfsy9nEamfoGtxQ3ziWSGb0SGUhYPSrxlxWH?=
 =?us-ascii?q?9dy+raNXZHqxfri0zkZxgdehDLSaqAFGRHn5YosiHTN37shnLFLM13jz5pvled?=
 =?us-ascii?q?bKa9ITqwaUkwzBj+VOLJIxl/wKhTdoOG7nvH0lzfI7ggJq3Z2goIeHLGBt9rqj?=
 =?us-ascii?q?AhFELj31e98T+jb1gKlFhMmW2ISvHoh7FjUPQZvlVvaoEDMUtfT6OAeCCjw8qn?=
 =?us-ascii?q?GHGbXBGQ+T8ltpr3XKE5qzLXGYOGEZzcl+RBmaPEFfghobXDAkkZ4iDAyq2Nbt?=
 =?us-ascii?q?cERk5jAS+174rAFDyvlzOhn7U2ffohqoazguRJieKhpW8h9N50PPPcOC6eJzGj?=
 =?us-ascii?q?lS/oe9owyVNmybewNIAHkJW0yDGlDjJ6Su6sPG8+SCHeq+KP3OYbqVpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+iJpr8?=
 =?us-ascii?q?C/8/frWAP16YuMEbtSNtpv9A6sgaeeLO6dnyJ5KTde1pMRyn7E0rkf3FgOiy5w?=
 =?us-ascii?q?czmhC6gPtSnITKjIgK9YEwYbaz9vNMtP968zxBRNNtXBitzr1r90lPo1C1ZeWF?=
 =?us-ascii?q?zlm8GpY9EKIm6nOFPGAkaLKKqJJTnRz87rZqO8TKVajP9IuB2opTabD0jjMyyf?=
 =?us-ascii?q?lznoUhCjK/1DgDuHMxxepo69dA1gCWziTNLgdx26P8V7jTwwwb0omHzKMXQQPi?=
 =?us-ascii?q?R7c0NItreQ9z9Xgu1jG2xd6XpoNemFlDyf7+ndK5YWt+NkAyV0l+1A5nQ6xKBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKO7g1ePvCN9ZhbWXHC1A4Mq2?=
 =?us-ascii?q?6XDkJO7+diDMynn6FWxtfVmaS7fCtF9cP89NcbAsnYJYSMN393YjTzHzuBNgwK?=
 =?us-ascii?q?QCTjDHzWi1Zai7nG7Hqao4IjgoTt3pEJT+kIBxQOCvoGBxE9T5Q5K5BtU2ZhyO?=
 =?us-ascii?q?bDgQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AsAABzehNch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgmx/FBOYJoINFGiWWYFzEgEBGBMBh0ciNQgNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAQIDAQIkGQEBNgEBBQkBAQoYCRYPAwYDAgECAUUGA?=
 =?us-ascii?q?QwBBQIBAQGDHIIBBaUqgWwzgnYBAQWCQ4RoCIw+F4FAP4ERgl01ilyJOgqGCke?=
 =?us-ascii?q?BCI99CYIoj0qBXYUcgwaHTiyJB49+AgICAgQFAhSBSAOCCTMaCBsVgyeCG4Nti?=
 =?us-ascii?q?lVwgQUBAYxWAQE?=
X-IPAS-Result: =?us-ascii?q?A0AsAABzehNch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBgmx?=
 =?us-ascii?q?/FBOYJoINFGiWWYFzEgEBGBMBh0ciNQgNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAQIDAQIkGQEBNgEBBQkBAQoYCRYPAwYDAgECAUUGAQwBBQIBAQGDHII?=
 =?us-ascii?q?BBaUqgWwzgnYBAQWCQ4RoCIw+F4FAP4ERgl01ilyJOgqGCkeBCI99CYIoj0qBX?=
 =?us-ascii?q?YUcgwaHTiyJB49+AgICAgQFAhSBSAOCCTMaCBsVgyeCG4NtilVwgQUBAYxWAQE?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="44961253"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 01:42:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728955AbeLNJmC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 04:42:02 -0500
Received: from fllv0015.ext.ti.com ([198.47.19.141]:51124 "EHLO
        fllv0015.ext.ti.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726344AbeLNJmB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 04:42:01 -0500
Received: from fllv0035.itg.ti.com ([10.64.41.0])
        by fllv0015.ext.ti.com (8.15.2/8.15.2) with ESMTP id wBE9fvPB079732;
        Fri, 14 Dec 2018 03:41:57 -0600
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ti.com;
        s=ti-com-17Q1; t=1544780517;
        bh=RgMEplXqcA7XenvE7kXXnkZ16PUgjZH6e7t4XYV6eXQ=;
        h=Subject:To:References:CC:From:Date:In-Reply-To;
        b=blauWLTn2sR8Hhe8+2l45RVe8UpqMO1h0FGWd8cP8Nv20/rzWycMoYFgqI14PVW4v
         CC6vdR2nojF6de334RnPPXaKSERwH1CqWxpkzstUbqh2g7eP9EhLO+pAzBHHJxPDnA
         I8CDZrzPFw+soXuQ5i2jRcis0aBTsmOzlCA/HuQM=
Received: from DLEE114.ent.ti.com (dlee114.ent.ti.com [157.170.170.25])
        by fllv0035.itg.ti.com (8.15.2/8.15.2) with ESMTPS id wBE9fvWe000958
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=FAIL);
        Fri, 14 Dec 2018 03:41:57 -0600
Received: from DLEE109.ent.ti.com (157.170.170.41) by DLEE114.ent.ti.com
 (157.170.170.25) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id 15.1.1591.10; Fri, 14
 Dec 2018 03:41:56 -0600
Received: from dlep32.itg.ti.com (157.170.170.100) by DLEE109.ent.ti.com
 (157.170.170.41) with Microsoft SMTP Server (version=TLS1_0,
 cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.1591.10 via Frontend Transport;
 Fri, 14 Dec 2018 03:41:56 -0600
Received: from [192.168.2.6] (ileax41-snat.itg.ti.com [10.172.224.153])
        by dlep32.itg.ti.com (8.14.3/8.13.8) with ESMTP id wBE9fsvi003151;
        Fri, 14 Dec 2018 03:41:55 -0600
Subject: Re: [PATCH 1/4] phy: ti: usb2: Fix logic on -EPROBE_DEFER
To: <kishon@ti.com>, Tony Lindgren <tony@atomide.com>
References: <1544022206-2300-1-git-send-email-rogerq@ti.com>
 <1544022206-2300-2-git-send-email-rogerq@ti.com>
CC: <robh+dt@kernel.org>, <nsekhar@ti.com>,
        <linux-kernel@vger.kernel.org>, <devicetree@vger.kernel.org>,
        <linux-omap@vger.kernel.org>
From: Roger Quadros <rogerq@ti.com>
Message-ID: <5C137AE2.4080803@ti.com>
Date: Fri, 14 Dec 2018 11:41:54 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.6.0
MIME-Version: 1.0
In-Reply-To: <1544022206-2300-2-git-send-email-rogerq@ti.com>
Content-Type: text/plain; charset="windows-1252"
Content-Transfer-Encoding: 7bit
X-EXCLAIMER-MD-CONFIG: e1e8a2fd-e40a-4ac6-ac9b-f7e9cc9ee180
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Kishon,

On 05/12/18 17:03, Roger Quadros wrote:
> If clk_get() returns -EPROBE_DEFER then we should just
> return instead of falling back to old clock name.
> 
> Use clk_prepare_enable() and clk_disable_unprepare() instead
> of splitting up prepare/unprepare from enable/disable.
> 
> Signed-off-by: Roger Quadros <rogerq@ti.com>

I think you should pick this one for -next independently of the rest
of the series as Tony's ti-sysc patches might cause this issue to trigger
due to re-ordering of devices.


cheers,
-roger

> ---
>  drivers/phy/ti/phy-omap-usb2.c | 88 ++++++++++++++++++++++--------------------
>  1 file changed, 47 insertions(+), 41 deletions(-)
> 
> diff --git a/drivers/phy/ti/phy-omap-usb2.c b/drivers/phy/ti/phy-omap-usb2.c
> index fe909fd..418e7f1 100644
> --- a/drivers/phy/ti/phy-omap-usb2.c
> +++ b/drivers/phy/ti/phy-omap-usb2.c
> @@ -135,9 +135,9 @@ static int omap_usb_power_on(struct phy *x)
>  
>  static int omap_usb2_disable_clocks(struct omap_usb *phy)
>  {
> -	clk_disable(phy->wkupclk);
> +	clk_disable_unprepare(phy->wkupclk);
>  	if (!IS_ERR(phy->optclk))
> -		clk_disable(phy->optclk);
> +		clk_disable_unprepare(phy->optclk);
>  
>  	return 0;
>  }
> @@ -146,14 +146,14 @@ static int omap_usb2_enable_clocks(struct omap_usb *phy)
>  {
>  	int ret;
>  
> -	ret = clk_enable(phy->wkupclk);
> +	ret = clk_prepare_enable(phy->wkupclk);
>  	if (ret < 0) {
>  		dev_err(phy->dev, "Failed to enable wkupclk %d\n", ret);
>  		goto err0;
>  	}
>  
>  	if (!IS_ERR(phy->optclk)) {
> -		ret = clk_enable(phy->optclk);
> +		ret = clk_prepare_enable(phy->optclk);
>  		if (ret < 0) {
>  			dev_err(phy->dev, "Failed to enable optclk %d\n", ret);
>  			goto err1;
> @@ -346,63 +346,72 @@ static int omap_usb2_probe(struct platform_device *pdev)
>  		}
>  	}
>  
> -	otg->set_host		= omap_usb_set_host;
> -	otg->set_peripheral	= omap_usb_set_peripheral;
> -	if (phy_data->flags & OMAP_USB2_HAS_SET_VBUS)
> -		otg->set_vbus		= omap_usb_set_vbus;
> -	if (phy_data->flags & OMAP_USB2_HAS_START_SRP)
> -		otg->start_srp		= omap_usb_start_srp;
> -	otg->usb_phy		= &phy->phy;
> -
> -	platform_set_drvdata(pdev, phy);
> -	pm_runtime_enable(phy->dev);
> -
> -	generic_phy = devm_phy_create(phy->dev, NULL, &ops);
> -	if (IS_ERR(generic_phy)) {
> -		pm_runtime_disable(phy->dev);
> -		return PTR_ERR(generic_phy);
> -	}
> -
> -	phy_set_drvdata(generic_phy, phy);
> -	omap_usb_power_off(generic_phy);
> -
> -	phy_provider = devm_of_phy_provider_register(phy->dev,
> -			of_phy_simple_xlate);
> -	if (IS_ERR(phy_provider)) {
> -		pm_runtime_disable(phy->dev);
> -		return PTR_ERR(phy_provider);
> -	}
>  
>  	phy->wkupclk = devm_clk_get(phy->dev, "wkupclk");
>  	if (IS_ERR(phy->wkupclk)) {
> -		dev_warn(&pdev->dev, "unable to get wkupclk, trying old name\n");
> +		if (PTR_ERR(phy->wkupclk) == -EPROBE_DEFER)
> +			return -EPROBE_DEFER;
> +
> +		dev_warn(&pdev->dev, "unable to get wkupclk %ld, trying old name\n",
> +			 PTR_ERR(phy->wkupclk));
>  		phy->wkupclk = devm_clk_get(phy->dev, "usb_phy_cm_clk32k");
> +
>  		if (IS_ERR(phy->wkupclk)) {
> -			dev_err(&pdev->dev, "unable to get usb_phy_cm_clk32k\n");
> -			pm_runtime_disable(phy->dev);
> +			if (PTR_ERR(phy->wkupclk) != -EPROBE_DEFER)
> +				dev_err(&pdev->dev, "unable to get usb_phy_cm_clk32k\n");
>  			return PTR_ERR(phy->wkupclk);
>  		} else {
>  			dev_warn(&pdev->dev,
>  				 "found usb_phy_cm_clk32k, please fix DTS\n");
>  		}
>  	}
> -	clk_prepare(phy->wkupclk);
>  
>  	phy->optclk = devm_clk_get(phy->dev, "refclk");
>  	if (IS_ERR(phy->optclk)) {
> +		if (PTR_ERR(phy->optclk) == -EPROBE_DEFER)
> +			return -EPROBE_DEFER;
> +
>  		dev_dbg(&pdev->dev, "unable to get refclk, trying old name\n");
>  		phy->optclk = devm_clk_get(phy->dev, "usb_otg_ss_refclk960m");
> +
>  		if (IS_ERR(phy->optclk)) {
> -			dev_dbg(&pdev->dev,
> -				"unable to get usb_otg_ss_refclk960m\n");
> +			if (PTR_ERR(phy->optclk) != -EPROBE_DEFER) {
> +				dev_dbg(&pdev->dev,
> +					"unable to get usb_otg_ss_refclk960m\n");
> +			}
>  		} else {
>  			dev_warn(&pdev->dev,
>  				 "found usb_otg_ss_refclk960m, please fix DTS\n");
>  		}
>  	}
>  
> -	if (!IS_ERR(phy->optclk))
> -		clk_prepare(phy->optclk);
> +	otg->set_host = omap_usb_set_host;
> +	otg->set_peripheral = omap_usb_set_peripheral;
> +	if (phy_data->flags & OMAP_USB2_HAS_SET_VBUS)
> +		otg->set_vbus = omap_usb_set_vbus;
> +	if (phy_data->flags & OMAP_USB2_HAS_START_SRP)
> +		otg->start_srp = omap_usb_start_srp;
> +	otg->usb_phy = &phy->phy;
> +
> +	platform_set_drvdata(pdev, phy);
> +	pm_runtime_enable(phy->dev);
> +
> +	generic_phy = devm_phy_create(phy->dev, NULL, &ops);
> +	if (IS_ERR(generic_phy)) {
> +		pm_runtime_disable(phy->dev);
> +		return PTR_ERR(generic_phy);
> +	}
> +
> +	phy_set_drvdata(generic_phy, phy);
> +	omap_usb_power_off(generic_phy);
> +
> +	phy_provider = devm_of_phy_provider_register(phy->dev,
> +						     of_phy_simple_xlate);
> +	if (IS_ERR(phy_provider)) {
> +		pm_runtime_disable(phy->dev);
> +		return PTR_ERR(phy_provider);
> +	}
> +
>  
>  	usb_add_phy_dev(&phy->phy);
>  
> @@ -413,9 +422,6 @@ static int omap_usb2_remove(struct platform_device *pdev)
>  {
>  	struct omap_usb	*phy = platform_get_drvdata(pdev);
>  
> -	clk_unprepare(phy->wkupclk);
> -	if (!IS_ERR(phy->optclk))
> -		clk_unprepare(phy->optclk);
>  	usb_remove_phy(&phy->phy);
>  	pm_runtime_disable(phy->dev);
>  
> 

-- 
Texas Instruments Finland Oy, Porkkalankatu 22, 00180 Helsinki.
Y-tunnus/Business ID: 0615521-4. Kotipaikka/Domicile: Helsinki
