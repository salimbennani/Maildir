Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:46:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B342358079D;
	Tue, 11 Dec 2018 05:27:03 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 11 Dec 2018 05:27:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AxOQLHxDhkvFwnyco7g5zUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pMiwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH42y?=
 =?us-ascii?q?YYgBAe0OMuhXtIn9v1kDoACiCQSvHu7j1iVFimPq0aA8zu8vERvG3AslH98Wt3?=
 =?us-ascii?q?rUrcn6NKcIXuCx0aLGzzLDYO9V2Tf69YPFdRUhofGLXb1scsrRzlIiFwDbgVWK?=
 =?us-ascii?q?r4zqITeV2v4Ks2iB4OptTOSigHMppQF2pzig3MYsio/Ri4IW1F/E7yN5z5gxJd?=
 =?us-ascii?q?GiT057e9GkHZ1NvC+ZL4t7Wt0uT31stSog17ELt4C3cDIXxJkk2xLTcf2KfoqQ?=
 =?us-ascii?q?7h79SeqcLy10iG9ldb6inRq/9UitxvfhWsS6zFpHqDdOnMPWuXAXzRPT79CKSv?=
 =?us-ascii?q?tj8Uel3jaCzx7T6u5aLkAuj6bbKIAuwqQ2lpUNtUTPBCj2mF/5jKOOd0Uk/Pan?=
 =?us-ascii?q?6/j/b7n4upORM5V4hhzwP6gwgMCzHOc1PhQUU2Wa++mwzLjj8lf4QLVOgP02iK?=
 =?us-ascii?q?7ZsJXCKMQfp665BRJV04k65xa8ETimytIYkmcDLF5cfxKGgY7pNE/UIP3jE/e/?=
 =?us-ascii?q?jEqjkC1xy/DFILLhGJPNIWbHkLv7erZ98UFcxBIpzd9D/5JUFq0BIPXrV0/1td?=
 =?us-ascii?q?zYDQE2Pxa7wub6E9h90oIeWWSSAq6WKq/SsFmI5v4xLOmIfoMapDH9K/097f70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPaHC3BPVmI1mDbnrrmNsBEXoKsRA4TOzlk1CCVT9TZ3CvX6?=
 =?us-ascii?q?Mz/D07CYSmDZvdSYCpmrCOwCC7HphObGBcFl+MCWvod5mDW/oUaiKSJdFuniYH?=
 =?us-ascii?q?VbimTY8h0xauuRT+y7pmKOrU5yIZuYji1Nhz++3cixUy+SZoAMSa1mGHV3t0kX?=
 =?us-ascii?q?8QRz8qwKB/plRwxU2Y0ah4hPxYFsZf5+lTXQc4LpPcy+16C9bvWgPOZNuJSVCm?=
 =?us-ascii?q?Qsm4DjE1VN4+39gOY0NlEdW4kh/DxzaqA6MSl7GTB5w76KTc02L1J8Z80XnG0q?=
 =?us-ascii?q?YhgkIiQstOM22mm6F++xLSB47Pj0WWiaKqeb4A0y7K8WeJ1XCOs11AUA5sTaXF?=
 =?us-ascii?q?WmgSaVbMotTn+EzOVb+uBq4hMgta18GCLKxGatnqjVVDQPfuI9DeY2O3m2etCh?=
 =?us-ascii?q?eE3LKMbIz2e2oD2CXRElQLkwcW/XyeLwgxGj+ho37CDDxpDV/gflnj8fdgp3+h?=
 =?us-ascii?q?Tk871QeKb1Z/2Lqz4RMVgf2cS/UO3rMLoishqjN0HEqj0NLSEdaPuw1hfKBEa9?=
 =?us-ascii?q?Mn/FhHzX7ZtxB6PpG4M6Bih1secwNrv0Pu1xR7EJlAndItrHMwyApyKKSY0Fxa?=
 =?us-ascii?q?ejOc3JDwPKDXK2bo8BCuba7Wxk/R0NKM9qgT7/Q4rk3pvBu1GUo673Vnz95V3m?=
 =?us-ascii?q?OG6ZXOEgUTXoz+U0Yt+xdhurHVfzMy54XX1X1rL6m5qTvC29MvBOs4xResZdZf?=
 =?us-ascii?q?MKWYFADsF80WHdShKOsvm1KxdBILIPhS9LIoP8Ohb/aH2LOrMPx8kz68jGVH4J?=
 =?us-ascii?q?py0kSD9ydnTu7I3pAFw+yX3wedVjf8ikuhvd7zmYxeeT4SGW+/wzD+BIFNfq1y?=
 =?us-ascii?q?YZoLCWC2Ls2tx9Vxm4TiW2RF+16kHV8G3tGmeQCTb1DkwQJfz0AXrmG5liuiyD?=
 =?us-ascii?q?x0lSokrq6e3CzI3uTjewALOm9NRGl+k1jsJZK4gMwdXEitdwIpjgeq5V7mx6hH?=
 =?us-ascii?q?o6RyN2nSQUZScyn2NW1iSbawtryZbs5L6ZMotzhXUeumbVCbTL79vwUV0yf5E2?=
 =?us-ascii?q?RCwzA7cimguo/lkBxilGKdMHFzoWLbec5q3xff59/cRflL0jodXiZ4ijrXBlm6?=
 =?us-ascii?q?P9a3+9WZjJPDsuG4V2K8WZxfayjrzYWctCSl4W1mGwGwn/e2mtf/Cwg1zTf718?=
 =?us-ascii?q?V2VSXPtBv9YpPk16OgPeJlf0loAkTx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNnGJyJj4VnmHwsthesO1YmUZ2i8m68BKCa?=
 =?us-ascii?q?GU7KFLnCdvo1q4qx7RbuZ5njsH1fQu73saifkTuAUx1iWdHqwSHU5AMCzplhSI?=
 =?us-ascii?q?7MqxoL9ZZWmxariwyFRxncq6A76cuAFcV230epMjHS9288V+P0jA0Hz16oH4Zt?=
 =?us-ascii?q?bQacgfuQGTkxfFl+JVMo4+luIWhSp7PmLwpWEly+k+jRB03JC1po6HK3h2/KKi?=
 =?us-ascii?q?Ax5VLTn1Z8IV+jHwgqdShMeW34azHpp/HjUHRofnTfWtEDgKr/ToKx6OECEgqn?=
 =?us-ascii?q?ecAbfQBhWQ6EBir3LSCZyrM2yXKWIdzdVjQhmdOUNejBoVXDU8gp42CASqyNb9?=
 =?us-ascii?q?f0d+4zAb/kT4pQdUyuJ0Kxn/VX/SpAWyZTcxVpefNwBa7h1Y60fWLMye7f9zHy?=
 =?us-ascii?q?dC8Z26twGNLm2bZwJVDWAGQECEBlbjPqWw6tnE6eSXGu2+L/7Wa7WUteNeT+uI?=
 =?us-ascii?q?xY6o0oZ+/zeMMdiPPmB/D/Ih3EpPR2t5G8PfmzUAUCEXkyPNb8iGpBaz4CF3r8?=
 =?us-ascii?q?a/8Oj1VwLr/4eAF7xSMdB38RCsnaiDL/KQhDp+KTtA1pMD237IyLsc3F4TkS1u?=
 =?us-ascii?q?dCOtEbMPtSHTVqLQh7RXAgUfayNyMstI8q090hNMOc7dltP6yLp4guQpBFdCUF?=
 =?us-ascii?q?zrgtupatASI2GhKFPHA16GO66bJTLQ2cH4f6O9RadUjOVVrBCwvTebE0n+PjWM?=
 =?us-ascii?q?jTXpVhavMf1SgyGfJhBRpIa9chN1A2j5UN3mcgG7MMNwjTAu3b00h3bKOXQAPj?=
 =?us-ascii?q?Rmb0xNrqOf7SVDj/V7GmxB6GdlLOaelyaY6enYNogZsf9xDitokOJa5Wwwy6FJ?=
 =?us-ascii?q?4yFcWPx1hCzSo8Zuol68lOmPzztnUBxWpTdKhIKEp0NiOarC+5lEWHbE+g8N7G?=
 =?us-ascii?q?qKBxQLodtlFsPgu6RKxtfTk6LzLWQKz9WB1M0QHcXLYOeAKmYmN1K9ET3MCSMB?=
 =?us-ascii?q?TDi2JSTRgFFbnPiO93qT6J8gpc6o0NAtS6VaUFh9P7VSMUR4ANEHJ4k9FmcnkK?=
 =?us-ascii?q?SaiMog/nqjsBTUQ9scuJnCW6TBL+/oLWO8jLJEbh9A4bTzLoNbYoj73EdhbXF5?=
 =?us-ascii?q?kZ7MFk6WWspC9H4yJjQoqVlApSAtBlY43FjoP0b0uCce?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAC6ug9ch0O0hNFdCB0BAQUBBwUBg?=
 =?us-ascii?q?VEIAQsBgVWBFIECJ4wUX4sxgiGXPhSBXxIBARgNBgGHTiI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmkCJAsBRgYJAhgHMQMxAQUBCxcBEgUWgwYBggEEA?=
 =?us-ascii?q?QqZSTyMCTOELQGFfhKHaoQ/F4FAP4ERh2ABDAEFAYV6AosrlVAJhwmKPQsYgim?=
 =?us-ascii?q?HPYdZAYkjgXKDAYp2AgQCBAUCBQ8hgSWBHXEzGggoCIMnCQqLCYVAPzIBAQGBA?=
 =?us-ascii?q?gEBiBUOF4InAQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAAC6ug9ch0O0hNFdCB0BAQUBBwUBgVEIAQsBgVWBFIE?=
 =?us-ascii?q?CJ4wUX4sxgiGXPhSBXxIBARgNBgGHTiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmkCJAsBRgYJAhgHMQMxAQUBCxcBEgUWgwYBggEEAQqZSTyMCTOELQG?=
 =?us-ascii?q?FfhKHaoQ/F4FAP4ERh2ABDAEFAYV6AosrlVAJhwmKPQsYgimHPYdZAYkjgXKDA?=
 =?us-ascii?q?Yp2AgQCBAUCBQ8hgSWBHXEzGggoCIMnCQqLCYVAPzIBAQGBAgEBiBUOF4InAQE?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="43580991"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 05:27:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726533AbeLKN07 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 08:26:59 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:39872 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726170AbeLKN06 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 08:26:58 -0500
Received: by mail-pf1-f194.google.com with SMTP id c72so7136150pfc.6;
        Tue, 11 Dec 2018 05:26:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=jxbynfRZF3X6tSvesQ9hBhsSdCVxDV0cRayMv8c1614=;
        b=q3/Mm1FzPnqvdTh1AkN6LUGEzCcL9evRf6JrEWAnkEUSWaOitD7CX6jmTgFnHff08J
         R1uz8Nt2z5/rtgfc2bqWvLRdZFNNZrykaZNqxPEXX7RscTeln9ys6aQOAyXZODEPIMqH
         0BwoeQ3OtgCGO3LvownOHaNdQy6vbw0uQIA2cQAmBp72/65/j7hHFYTHQyJ3+XipioSM
         eixcnxVa29IWay5B1cHR8jc5fmQEuMBMyS/YJ5tpGH4wxZFzJTOeBNUy9d8Wk5PlGLZ4
         ypYxUWn9yWT7GKjf3WBpf1CscAabgZ9Lj1X04X8QqFsS1BWXSmhpPqC8jPg+eUyKkf0K
         4MOg==
X-Gm-Message-State: AA+aEWbV/fpuy4pSGqADrkBelIIRsWGTiF2tcEMRCqppJMp5yKbZh6em
        ykSN9CJrqQsv8lkgqPWVukk=
X-Google-Smtp-Source: AFSGD/W5JvJTtNsYhqZ89uUnjHbTW+iv+BfZ7C5Sp303eExqcx99HohPFxw2cfCr05CMj5yUC/vUww==
X-Received: by 2002:a62:5444:: with SMTP id i65mr16903077pfb.193.1544534817855;
        Tue, 11 Dec 2018 05:26:57 -0800 (PST)
Received: from tiehlicka.suse.cz (prg-ext-pat.suse.com. [213.151.95.130])
        by smtp.gmail.com with ESMTPSA id v62sm28677411pfd.163.2018.12.11.05.26.54
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 11 Dec 2018 05:26:56 -0800 (PST)
From: Michal Hocko <mhocko@kernel.org>
To: Andrew Morton <akpm@linux-foundation.org>,
        "Kirill A. Shutemov" <kirill@shutemov.name>
Cc: Liu Bo <bo.liu@linux.alibaba.com>, Jan Kara <jack@suse.cz>,
        Dave Chinner <david@fromorbit.com>,
        "Theodore Ts'o" <tytso@mit.edu>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Vladimir Davydov <vdavydov.dev@gmail.com>,
        <linux-mm@kvack.org>, <linux-fsdevel@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Michal Hocko <mhocko@suse.com>
Subject: [PATCH] mm, memcg: fix reclaim deadlock with writeback
Date: Tue, 11 Dec 2018 14:26:45 +0100
Message-Id: <20181211132645.31053-1-mhocko@kernel.org>
X-Mailer: git-send-email 2.19.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Michal Hocko <mhocko@suse.com>

Liu Bo has experienced a deadlock between memcg (legacy) reclaim and the
ext4 writeback
task1:
[<ffffffff811aaa52>] wait_on_page_bit+0x82/0xa0
[<ffffffff811c5777>] shrink_page_list+0x907/0x960
[<ffffffff811c6027>] shrink_inactive_list+0x2c7/0x680
[<ffffffff811c6ba4>] shrink_node_memcg+0x404/0x830
[<ffffffff811c70a8>] shrink_node+0xd8/0x300
[<ffffffff811c73dd>] do_try_to_free_pages+0x10d/0x330
[<ffffffff811c7865>] try_to_free_mem_cgroup_pages+0xd5/0x1b0
[<ffffffff8122df2d>] try_charge+0x14d/0x720
[<ffffffff812320cc>] memcg_kmem_charge_memcg+0x3c/0xa0
[<ffffffff812321ae>] memcg_kmem_charge+0x7e/0xd0
[<ffffffff811b68a8>] __alloc_pages_nodemask+0x178/0x260
[<ffffffff8120bff5>] alloc_pages_current+0x95/0x140
[<ffffffff81074247>] pte_alloc_one+0x17/0x40
[<ffffffff811e34de>] __pte_alloc+0x1e/0x110
[<ffffffffa06739de>] alloc_set_pte+0x5fe/0xc20
[<ffffffff811e5d93>] do_fault+0x103/0x970
[<ffffffff811e6e5e>] handle_mm_fault+0x61e/0xd10
[<ffffffff8106ea02>] __do_page_fault+0x252/0x4d0
[<ffffffff8106ecb0>] do_page_fault+0x30/0x80
[<ffffffff8171bce8>] page_fault+0x28/0x30
[<ffffffffffffffff>] 0xffffffffffffffff

task2:
[<ffffffff811aadc6>] __lock_page+0x86/0xa0
[<ffffffffa02f1e47>] mpage_prepare_extent_to_map+0x2e7/0x310 [ext4]
[<ffffffffa08a2689>] ext4_writepages+0x479/0xd60
[<ffffffff811bbede>] do_writepages+0x1e/0x30
[<ffffffff812725e5>] __writeback_single_inode+0x45/0x320
[<ffffffff81272de2>] writeback_sb_inodes+0x272/0x600
[<ffffffff81273202>] __writeback_inodes_wb+0x92/0xc0
[<ffffffff81273568>] wb_writeback+0x268/0x300
[<ffffffff81273d24>] wb_workfn+0xb4/0x390
[<ffffffff810a2f19>] process_one_work+0x189/0x420
[<ffffffff810a31fe>] worker_thread+0x4e/0x4b0
[<ffffffff810a9786>] kthread+0xe6/0x100
[<ffffffff8171a9a1>] ret_from_fork+0x41/0x50
[<ffffffffffffffff>] 0xffffffffffffffff

He adds
: task1 is waiting for the PageWriteback bit of the page that task2 has
: collected in mpd->io_submit->io_bio, and tasks2 is waiting for the LOCKED
: bit the page which tasks1 has locked.

More precisely task1 is handling a page fault and it has a page locked
while it charges a new page table to a memcg. That in turn hits a memory
limit reclaim and the memcg reclaim for legacy controller is waiting on
the writeback but that is never going to finish because the writeback
itself is waiting for the page locked in the #PF path. So this is
essentially ABBA deadlock.

Waiting for the writeback in legacy memcg controller is a workaround
for pre-mature OOM killer invocations because there is no dirty IO
throttling available for the controller. There is no easy way around
that unfortunately. Therefore fix this specific issue by pre-allocating
the page table outside of the page lock. We have that handy
infrastructure for that already so simply reuse the fault-around pattern
which already does this.

Reported-and-Debugged-by: Liu Bo <bo.liu@linux.alibaba.com>
Signed-off-by: Michal Hocko <mhocko@suse.com>
---
Hi,
this has been originally reported here [1]. While it could get worked
around in the fs, catching the allocation early sounds like a preferable
approach. Liu Bo has noted that he is not able to reproduce this anymore
because kmem accounting has been disabled in their workload but this
should be quite straightforward to review.

There are probably other hidden __GFP_ACCOUNT | GFP_KERNEL allocations
from under a fs page locked but they should be really rare. I am not
aware of a better solution unfortunately.

I would appreciate if Kirril could have a look and double check I am not
doing something stupid here.

Debugging lock_page deadlocks is an absolute PITA considering a lack of
lockdep support so I would mark it for stable.

[1] http://lkml.kernel.org/r/1540858969-75803-1-git-send-email-bo.liu@linux.alibaba.com
 mm/memory.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/mm/memory.c b/mm/memory.c
index 4ad2d293ddc2..1a73d2d4659e 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -2993,6 +2993,17 @@ static vm_fault_t __do_fault(struct vm_fault *vmf)
 	struct vm_area_struct *vma = vmf->vma;
 	vm_fault_t ret;
 
+	/*
+	 * Preallocate pte before we take page_lock because this might lead to
+	 * deadlocks for memcg reclaim which waits for pages under writeback.
+	 */
+	if (pmd_none(*vmf->pmd) && !vmf->prealloc_pte) {
+		vmf->prealloc_pte = pte_alloc_one(vmf->vma->vm>mm, vmf->address);
+		if (!vmf->prealloc_pte)
+			return VM_FAULT_OOM;
+		smp_wmb(); /* See comment in __pte_alloc() */
+	}
+
 	ret = vma->vm_ops->fault(vmf);
 	if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE | VM_FAULT_RETRY |
 			    VM_FAULT_DONE_COW)))
-- 
2.19.2

