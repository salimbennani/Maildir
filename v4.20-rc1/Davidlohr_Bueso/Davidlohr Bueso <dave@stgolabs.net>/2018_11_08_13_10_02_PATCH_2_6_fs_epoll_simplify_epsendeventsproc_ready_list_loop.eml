Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 10:27:48 -0000
Received: from icoremail.net (unknown [209.85.214.171])
	by mail-app2 (Coremail) with SMTP id by_KCgCn36SFxeNbiH5dAQ--.27915S3;
	Thu, 08 Nov 2018 13:11:34 +0800 (CST)
Received: from mail-pl1-f171.google.com (unknown [209.85.214.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_kmDxeNbQgcbAA--.5344S3;
	Thu, 08 Nov 2018 13:11:31 +0800 (CST)
Received: by mail-pl1-f171.google.com with SMTP id c13-v6so8954887plz.13
        for <xuliker@zju.edu.cn>; Wed, 07 Nov 2018 21:11:31 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=0xGAVZPJeSeZOz56caYWEUo3z82lFfLFOrOaIIfQQy8=;
        b=P05RsSzw77SDYKEpb5VMaPx15SF/325fI/yPfU1a0wgvaIvG0GFAr0yABkCqQ1CnjV
         KB48IRhTaJ+AjjbQWLhG/p1q1doJlqPCfbpAi8QzTMdpcFFqiCxQC5QcD+jukVj/l02u
         UchazkIAi2PRvEaC02IxympGeXozHLrcyyDO7ATWg6UeH5s7N2UbXeI/LA7f/zxfwH68
         FcNOdK8r7Kvn2iQjBKlw9S/hxi26dKUO3elV+L/mG4/cKCx/OPLCoioBX+FvCQ7L3Gth
         OWbZ9ynaz7LzAXbIx6VdXfJ4nnvOhcRLogP+Tp2P9FUhDb4HCrp4evicsRn5AeCCQypA
         sJAQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJpRRB5y6vcynip6Nbwt5Fw/YMWT8pKuVFLiaxrWkioclvGaRWZ
	R6E5u7xR8wC1wUfh2LU/YaJ0iyVux/iS8XQvNKxgMjFmGN+2eDurPQ==
X-Received: by 2002:a17:902:8e81:: with SMTP id bg1-v6mr3165371plb.192.1541653891414;
        Wed, 07 Nov 2018 21:11:31 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp94654pjt;
        Wed, 7 Nov 2018 21:11:30 -0800 (PST)
X-Google-Smtp-Source: AJdET5d6spiMxiqg5dNwWY6qq6J6lzkG8x9NkRa4FKCAUIsDNj/f2GHmvTPX2ptwCFewotVRRxdD
X-Received: by 2002:a17:902:6b88:: with SMTP id p8-v6mr3053394plk.19.1541653890595;
        Wed, 07 Nov 2018 21:11:30 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541653890; cv=none;
        d=google.com; s=arc-20160816;
        b=v1JL0xrj1gMVfXWjGGbJ7jl12zCFrubwT0umH1cY/yjPyswXfUGp1T5CcmlisfMv+A
         DY4IR/D93XUsSSsOq7aDWNacZLe5XePJ/irBgdnbzD3F2ktNzMEWnlhIa3wlCzhLzqIM
         1tfFcGYU0kMUIoy7QTypUBsCiADiKQiEKFFtlCt6rukV0soSEqr5ebscfFRI+sDchgBJ
         R6zQPeUu6MT0Mv3xy+zRXDOY8dFfQbiatn/FVIWTNqKx/YuzQ6dRY8/XKePO8HE9gzQj
         ZyLM8I56hF3EiWELBl4FcR7Jgo4uXmzoFGcbNc70VRK8Lf8SsZQt6kDeeycRqbtvKwyn
         GeVg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=0xGAVZPJeSeZOz56caYWEUo3z82lFfLFOrOaIIfQQy8=;
        b=j/6O+sdzZlAS9nmOXCvwD6ptXR5q8U1uVc+oV8Hycj+9sx4kHU+PsyUhbQb7wdeS0R
         dWtcNJPDY1rwx7laDAurhJTiGPiGUAO43X0fkIRpbn5VmTNICA4mtYHO0ODr9xSRCJ+q
         784NtWI9CdX5aw7iJa+iMnSmIopIUA4LmeXM1BLomEwmg92JjCUbXupLO8sr+SkTYf9q
         xIPTP/xY/kPbECTH92v+LhIPQaFDXc7i+KR4x6PpPatqjjw0lHcFa6UZx32pVJfFtUZS
         y9oO+eaff2unrbTI6b+dSpQ9SSs5UZ6YEo8jE+Qa7tRVFpolF7Mk54VAP5bAAR0bqj8W
         ckmg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m38si2728394pgl.125.2018.11.07.21.11.15;
        Wed, 07 Nov 2018 21:11:30 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728959AbeKHOoH (ORCPT <rfc822;ankurbansal210989@gmail.com>
        + 99 others); Thu, 8 Nov 2018 09:44:07 -0500
Received: from smtp2.provo.novell.com ([137.65.250.81]:56621 "EHLO
        smtp2.provo.novell.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728915AbeKHOoG (ORCPT
        <rfc822;groupwise-linux-kernel@vger.kernel.org:0:0>);
        Thu, 8 Nov 2018 09:44:06 -0500
Received: from linux-r8p5.suse.de (prv-ext-foundry1int.gns.novell.com [137.65.251.240])
        by smtp2.provo.novell.com with ESMTP (TLS encrypted); Wed, 07 Nov 2018 22:10:18 -0700
From: Davidlohr Bueso <dave@stgolabs.net>
To: akpm@linux-foundation.org
Cc: jbaron@akamai.com, viro@zeniv.linux.org.uk, dave@stgolabs.net,
        linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        Davidlohr Bueso <dbueso@suse.de>
Subject: [PATCH 2/6] fs/epoll: simplify ep_send_events_proc() ready-list loop
Date: Wed,  7 Nov 2018 21:10:02 -0800
Message-Id: <20181108051006.18751-3-dave@stgolabs.net>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20181108051006.18751-1-dave@stgolabs.net>
References: <20181108051006.18751-1-dave@stgolabs.net>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_kmDxeNbQgcbAA--.5344S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCF45ArWkAry8ur1DCFWfXwb_yoWrGF4xpr
	4fJrsakryxJw18Zw13JF1vgr13Z3yfXa4DJr17G34fArsF9r4FyFW7KF18Cry3GFWkGF1j
	vw4jqayUXr9rJaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6r4rMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IUOWS
	otUUUUU==

The current logic is a bit convoluted. Lets simplify this with
a standard list_for_each_entry_safe() loop instead and just
break out after maxevents is reached.

While at it, remove an unnecessary indentation level in the loop
when there are in fact ready events.

Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
---
 fs/eventpoll.c | 73 +++++++++++++++++++++++++++++-----------------------------
 1 file changed, 37 insertions(+), 36 deletions(-)

diff --git a/fs/eventpoll.c b/fs/eventpoll.c
index 7ad020f1353b..101d46b81f64 100644
--- a/fs/eventpoll.c
+++ b/fs/eventpoll.c
@@ -1624,21 +1624,22 @@ static __poll_t ep_send_events_proc(struct eventpoll *ep, struct list_head *head
 {
 	struct ep_send_events_data *esed = priv;
 	__poll_t revents;
-	struct epitem *epi;
-	struct epoll_event __user *uevent;
+	struct epitem *epi, *tmp;
+	struct epoll_event __user *uevent = esed->events;
 	struct wakeup_source *ws;
 	poll_table pt;
 
 	init_poll_funcptr(&pt, NULL);
+	esed->res = 0;
 
 	/*
 	 * We can loop without lock because we are passed a task private list.
 	 * Items cannot vanish during the loop because ep_scan_ready_list() is
 	 * holding "mtx" during this call.
 	 */
-	for (esed->res = 0, uevent = esed->events;
-	     !list_empty(head) && esed->res < esed->maxevents;) {
-		epi = list_first_entry(head, struct epitem, rdllink);
+	list_for_each_entry_safe(epi, tmp, head, rdllink) {
+		if (esed->res >= esed->maxevents)
+			break;
 
 		/*
 		 * Activate ep->ws before deactivating epi->ws to prevent
@@ -1658,42 +1659,42 @@ static __poll_t ep_send_events_proc(struct eventpoll *ep, struct list_head *head
 
 		list_del_init(&epi->rdllink);
 
-		revents = ep_item_poll(epi, &pt, 1);
-
 		/*
 		 * If the event mask intersect the caller-requested one,
 		 * deliver the event to userspace. Again, ep_scan_ready_list()
-		 * is holding "mtx", so no operations coming from userspace
+		 * is holding ep->mtx, so no operations coming from userspace
 		 * can change the item.
 		 */
-		if (revents) {
-			if (__put_user(revents, &uevent->events) ||
-			    __put_user(epi->event.data, &uevent->data)) {
-				list_add(&epi->rdllink, head);
-				ep_pm_stay_awake(epi);
-				if (!esed->res)
-					esed->res = -EFAULT;
-				return 0;
-			}
-			esed->res++;
-			uevent++;
-			if (epi->event.events & EPOLLONESHOT)
-				epi->event.events &= EP_PRIVATE_BITS;
-			else if (!(epi->event.events & EPOLLET)) {
-				/*
-				 * If this file has been added with Level
-				 * Trigger mode, we need to insert back inside
-				 * the ready list, so that the next call to
-				 * epoll_wait() will check again the events
-				 * availability. At this point, no one can insert
-				 * into ep->rdllist besides us. The epoll_ctl()
-				 * callers are locked out by
-				 * ep_scan_ready_list() holding "mtx" and the
-				 * poll callback will queue them in ep->ovflist.
-				 */
-				list_add_tail(&epi->rdllink, &ep->rdllist);
-				ep_pm_stay_awake(epi);
-			}
+		revents = ep_item_poll(epi, &pt, 1);
+		if (!revents)
+			continue;
+
+		if (__put_user(revents, &uevent->events) ||
+		    __put_user(epi->event.data, &uevent->data)) {
+			list_add(&epi->rdllink, head);
+			ep_pm_stay_awake(epi);
+			if (!esed->res)
+				esed->res = -EFAULT;
+			return 0;
+		}
+		esed->res++;
+		uevent++;
+		if (epi->event.events & EPOLLONESHOT)
+			epi->event.events &= EP_PRIVATE_BITS;
+		else if (!(epi->event.events & EPOLLET)) {
+			/*
+			 * If this file has been added with Level
+			 * Trigger mode, we need to insert back inside
+			 * the ready list, so that the next call to
+			 * epoll_wait() will check again the events
+			 * availability. At this point, no one can insert
+			 * into ep->rdllist besides us. The epoll_ctl()
+			 * callers are locked out by
+			 * ep_scan_ready_list() holding "mtx" and the
+			 * poll callback will queue them in ep->ovflist.
+			 */
+			list_add_tail(&epi->rdllink, &ep->rdllist);
+			ep_pm_stay_awake(epi);
 		}
 	}
 
-- 
2.16.4
