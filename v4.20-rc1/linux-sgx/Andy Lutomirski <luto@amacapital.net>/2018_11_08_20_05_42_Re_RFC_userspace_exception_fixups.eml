Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:37:48 -0000
Received: from icoremail.net (unknown [209.85.215.170])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f7Vrl+Rb_lpiAQ--.29599S3;
	Fri, 09 Nov 2018 04:07:08 +0800 (CST)
Received: from mail-pg1-f170.google.com (unknown [209.85.215.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnDEhpl+RbjnkeAA--.10269S3;
	Fri, 09 Nov 2018 04:07:05 +0800 (CST)
Received: by mail-pg1-f170.google.com with SMTP id n10-v6so9302764pgv.10
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 12:07:05 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc
         :content-transfer-encoding:sender:precedence:list-id;
        bh=UL5+Om8tKNJ8qo7eHj5jspqPtmEW4GhB5eb+rBLE75E=;
        b=ovS1q7rltBXa8WRuQiVW0Ywj+WTSVY4WM8mb3gdEGoNhmCD4y1Fh/kBazWLgrvhu5d
         d/X9SQ3cRVoHM2CJtb8s8Ohbz3XlI3qcWX/uzMOPolSRi0615m1/3alKYNMfJBTsRm1s
         qVLMCI9NbsvtgNeIyvTOIeX+ZInyqolIcUsX0otYHRMPX6YJF3ej0AIbKRBlF1ynDXPb
         JBWHn7gYRGaGCobw1wVZTBOUm+yFOftzBem6x7MyCicm+nOOvzgfmMY2VMWLFOPC22bj
         3nCb1KGKr2e6jx2GIyRNfHJh6tyrEngyLfs+GuW9+5CPO3qLXvahd+ZdUp4x48OuGm9/
         h18w==
X-Gm-Message-State: AGRZ1gJmGggJp5zPQWugNAWeBV6dJqaZ2ASm+BWo61qx/PJhBC9ek8Kj
	p4votoVB2i2tlmHKH7DQVGGaIViNt6KEbvKgsyqgvUN1f4f7FD0yLw==
X-Received: by 2002:a62:c20b:: with SMTP id l11-v6mr6053499pfg.251.1541707625203;
        Thu, 08 Nov 2018 12:07:05 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp666405pjt;
        Thu, 8 Nov 2018 12:07:03 -0800 (PST)
X-Google-Smtp-Source: AJdET5eFuCH3eDBxRbkyU0JdgZUJsaWRL+4bdNM141XGfXpobYjazgaid2mqjstKXkJQblhtlCJA
X-Received: by 2002:a63:a84a:: with SMTP id i10mr4967290pgp.263.1541707623930;
        Thu, 08 Nov 2018 12:07:03 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541707623; cv=none;
        d=google.com; s=arc-20160816;
        b=PYblHJ2m+NXiaCKUxwY5p6ZnJ870LBY04l+Gw1yfDtoVYuenTlgCHzKY7m+BXS6uzG
         lcRrU+cXVhdR6xpmO0LV4YA115fCw1VKN4vU42s9VSC0Z5kazuCb2X7fRz02r0TVm9+s
         PFZQ6cfjUgdZ+JH+XB9/3YnMvZA4b8JPuxt/KZOxir4x3wJJ6d0LEZzXT7UUUpaLbf0/
         e+T3frzOKB4UAru4/em/PJjUTpriACpjED95GIgiW/BigHanBeCRz1SkpNTUzsB3TvlP
         +SkcEr5hNY/plcj5EMxFEYIb2V1RFkiRUI7pQy8AHko1XCCmDO8L8NFwTspc9W3GDlnA
         Ln9Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:cc:to:subject
         :message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=UL5+Om8tKNJ8qo7eHj5jspqPtmEW4GhB5eb+rBLE75E=;
        b=cIWJe76ZBSPiYrml2VI1i2c/eGb1hJZgmqL2c2EKgs4oQcjSvZmcHreTeYAsDMXUui
         Vx8unQshP/YzvwVC4K44ZcJaL4BEvzVVtW2KB5evX0/mC7uUe/sBXTmZdAf9FyH2ySvr
         /XfYfuB1DoJNA2F0hXf5RA5olKBJf/BQdui/F1fVUBGhCxph01PD7wGhICOndDlw7yya
         qpGydLcGWVy8N9crzaWr2TIqrw35lkvsMpuUjzPCtGge76XNzU4z9aXgplmOM2/Iel50
         e4yR7Rpbq1teoq5wGbd52wyDb1y6Aodyyh1pzHVeWUyCMupw/CVWErOkeXM8avRRilpp
         XKQQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=CJlBMWv8;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b24-v6si5318840plz.16.2018.11.08.12.06.48;
        Thu, 08 Nov 2018 12:07:03 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727245AbeKIFm6 (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 00:42:58 -0500
Received: from mail-wr1-f49.google.com ([209.85.221.49]:42502 "EHLO
        mail-wr1-f49.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725199AbeKIFm6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 00:42:58 -0500
Received: by mail-wr1-f49.google.com with SMTP id y15-v6so22571820wru.9
        for <linux-kernel@vger.kernel.org>; Thu, 08 Nov 2018 12:05:55 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=UL5+Om8tKNJ8qo7eHj5jspqPtmEW4GhB5eb+rBLE75E=;
        b=CJlBMWv8wLviKdsfsx4K4VEc4/KIHyCa3u/9O+dSsS1bRwx/ZRZIdviuTTeZhl55Hg
         JjJTN0DcIxYadpK/Obp5Z9KU7f7vazfUcQJQTJuUHLPHdXFeRelrAFzACYkGpOSGNliW
         2a3qGudWTfbAG8tv2lCuZpN5QDZplS6aekTOXaG+jA82tDiN8k8vVHaxKnYprpezr5FJ
         mepCX1lN+dG4kFoX06rwrT5CAyzVdJmg09aqEzQn1F3fzInW0FyT7H3uMquQYZOgaEDh
         n1JhvvXkIGRa60A4QVRrcWloWh6irawhf11K7SmUJNYB6wlxFQb9WQLHmTYcGNdplpTL
         AKEg==
X-Received: by 2002:a5d:4450:: with SMTP id x16-v6mr5412203wrr.308.1541707554882;
 Thu, 08 Nov 2018 12:05:54 -0800 (PST)
MIME-Version: 1.0
References: <1541518670.7839.31.camel@intel.com> <AF4A5C77-0A79-403F-A205-0F93B7CD6E26@amacapital.net>
 <1541524750.7839.51.camel@intel.com> <22596E35-F5D1-4935-86AB-B510DCA0FABE@amacapital.net>
 <c9659222-efc6-b73a-ce48-30be8bdc5397@intel.com> <CALCETrWBV=1JbAKYn2Jy2LxkGZQvKRtFRnrWUMoejrwQe73VHw@mail.gmail.com>
 <b9c53669-cd27-e3bc-3d62-f47c77029c43@intel.com> <1C426267-492F-4AE7-8BE8-C7FE278531F9@amacapital.net>
 <209cf4a5-eda9-2495-539f-fed22252cf02@intel.com> <9B76E95B-5745-412E-8007-7FAA7F83D6FB@amacapital.net>
 <20181108195420.GA14715@linux.intel.com>
In-Reply-To: <20181108195420.GA14715@linux.intel.com>
From: Andy Lutomirski <luto@amacapital.net>
Date: Thu, 8 Nov 2018 12:05:42 -0800
Message-ID: <CALCETrUCQbPMfBJVRRg=0apEU=2U2ps74UPTrN8bFqi1k0K4VA@mail.gmail.com>
Subject: Re: RFC: userspace exception fixups
To: "Christopherson, Sean J" <sean.j.christopherson@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>,
        Andrew Lutomirski <luto@kernel.org>,
        Jann Horn <jannh@google.com>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Rich Felker <dalias@libc.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Jethro Beekman <jethro@fortanix.com>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Florian Weimer <fweimer@redhat.com>,
        Linux API <linux-api@vger.kernel.org>, X86 ML <x86@kernel.org>,
        linux-arch <linux-arch@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Peter Zijlstra <peterz@infradead.org>, nhorman@redhat.com,
        npmccallum@redhat.com, "Ayoun, Serge" <serge.ayoun@intel.com>,
        shay.katz-zamir@intel.com, linux-sgx@vger.kernel.org,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "Carlos O'Donell" <carlos@redhat.com>,
        adhemerval.zanella@linaro.org
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnDEhpl+RbjnkeAA--.10269S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCr4DKF45Kr13WFW5Gry3urg_yoW5try7pF
	W5GFyUKFsrJF42kryxtanrAryFyan3try5XwnYyryUArs8WrySvF17Kr4Y9F4kJFs7Xw1j
	vFWj93sxuayDZa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVWxJr0_GcWl84ACjcxK6I8E87Iv6xkF7I0E14v26F4UJVW0owAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Av
	z4vEIxC_AwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCYIxAI
	cVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWrXwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07bd
	KsbUUUUU=

On Thu, Nov 8, 2018 at 11:54 AM Sean Christopherson
<sean.j.christopherson@intel.com> wrote:
>
> On Tue, Nov 06, 2018 at 01:07:54PM -0800, Andy Lutomirski wrote:
> >
> >
> > > On Nov 6, 2018, at 1:00 PM, Dave Hansen <dave.hansen@intel.com> wrote=
:
> > >
> > >> On 11/6/18 12:12 PM, Andy Lutomirski wrote:
> > >> True, but what if we have a nasty enclave that writes to memory just
> > >> below SP *before* decrementing SP?
> > >
> > > Yeah, that would be unfortunate.  If an enclave did this (roughly):
> > >
> > >    1. EENTER
> > >    2. Hardware sets eenter_hwframe->sp =3D %sp
> > >    3. Enclave runs... wants to do out-call
> > >    4. Enclave sets up parameters:
> > >        memcpy(&eenter_hwframe->sp[-offset], arg1, size);
> > >        ...
> > >    5. Enclave sets eenter_hwframe->sp -=3D offset
> > >
> > > If we got a signal between 4 and 5, we'd clobber the copy of 'arg1' t=
hat
> > > was on the stack.  The enclave could easily fix this by moving ->sp f=
irst.
> > >
> > > But, this is one of those "fun" parts of the ABI that I think we need=
 to
> > > talk about.  If we do this, we also basically require that the code
> > > which handles asynchronous exits must *not* write to the stack.  That=
's
> > > not hard because it's typically just a single ERESUME instruction, bu=
t
> > > it *is* a requirement.
> > >
> >
> > I was assuming that the async exit stuff was completely hidden by the
> > API.  The AEP code would decide whether the exit got fixed up by the
> > kernel (which may or may not be easy to tell =E2=80=94 can the code eve=
n tell
> > without kernel help whether it was, say, an IRQ vs #UD?) and then eithe=
r
> > do ERESUME or cause sgx_enter_enclave() to return with an appropriate
> > return value.
>
> Ok, SDK folks came up with an idea that would allow them to use vDSO,
> albeit with a bit of ugliness and potentially a ROP-attack issue.
> Definitely some weirdness, but the weirdness is well contained, unlike
> the magic prefix approach.
>
> Provide two enter_enclave() vDSO "functions".  The first is a normal
> function with a normal C interface.  The second is a blob of code that
> is "called" and "returns" via indirect jmp, and can be used by SGX
> runtimes that want to use the untrusted stack for out-calls from the
> enclave.
>
> For the indirect jmp "function", use %rbp to stash the return address
> of the caller (either in %rbp itself or in memory pointed to by %rbp).
> It works because hardware also saves/restores %rbp along with %rsp when
> doing enclave transitions, and the SDK can live with %rbp being
> off-limits.  Fault info is passed via registers.

Hmm.  The idea being that the SDK preserves RBP but not RSP.  That's
not the most terrible thing in the world.  But could the SDK live with
something more like my suggestion where the vDSO supplies a normal
function that takes a struct containing registers that are visible to
the enclave?  This would make it extremely awkward for the enclave to
use the untrusted stack per se, but it would make it quite easy (I
think) for the untrusted part of the SDK to allocate some extra memory
and just tell the enclave that *that* memory is the stack.

AFAFICS we do have two registers that genuinely are preserved: FSBASE
and GSBASE.  Which is a good thing, because otherwise SGX enablement
would currently be a privilege escalation issue due to making GSBASE
writable when it should not be.

This whole thing is a mess.  I'm starting to think that the cleanest
solution would be to provide a way to just tell the kernel that
certain RIP values have exception fixups.
