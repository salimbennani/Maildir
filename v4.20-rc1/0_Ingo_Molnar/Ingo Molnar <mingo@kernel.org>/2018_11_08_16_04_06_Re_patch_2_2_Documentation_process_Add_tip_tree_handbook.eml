Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 10:28:33 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgCn31wY7uNbO3ZeAQ--.28692S3;
	Thu, 08 Nov 2018 16:04:41 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHaUUX7uNbRKsbAA--.2068S3;
	Thu, 08 Nov 2018 16:04:39 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id n4-v6so9176308plp.2
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 00:04:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=YxroUeNPICO/rCxEgqoF0BHm0TTc28cjP21bUB6hMP8=;
        b=KVo8PVZsJyBWOHtOX9sB0Eu35JyV4AFn1TXIxNeuotFpSTthfFPsPaS8LOqLZHZhJJ
         1PUyINXaFef8ENG1h5n65rmwlciYXyP4LZDOdzZAsG8rnUJKD29jch/kmOwXubmyoVUi
         qcTnln3MYSw1kYFacAlAPeY9/7JtRsTYoX9hRNaDlMP0/n8lbupwTLYtfuIijikRFAGm
         D9r5hn03b31uxPCZn6c6oSqzNwE1ijNGb7SJsT5lfurIGfGxD023RCs0Hc86V5e3WvQY
         Rc4N6QEzFfwU/bQzb7ycU+8dUNQnOq/gmbiHMvv1+AP6UOUDMCLZdeRz95eIEQNP66MT
         rDzQ==
X-Gm-Message-State: AGRZ1gL0WCf50R/i8qDa2YaX8BjgPAcJftPnqRrBSy5bBIi16J0A5nYr
	uf94U7hhtfM41Dseo0WCSe6QKjzZceXPa7NOZET6zdRPiLXmE6zfmQ==
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr3661527plp.9.1541664278833;
        Thu, 08 Nov 2018 00:04:38 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp217042pjt;
        Thu, 8 Nov 2018 00:04:37 -0800 (PST)
X-Google-Smtp-Source: AJdET5cvEoK3n5zmX0h5LM5nc9QMCTpbYI0PT/xsPJR8AfaeTIKMWZ0sVfB6FqzkpTtcWsAvWIt4
X-Received: by 2002:a63:6ac5:: with SMTP id f188mr3031557pgc.165.1541664277837;
        Thu, 08 Nov 2018 00:04:37 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541664277; cv=none;
        d=google.com; s=arc-20160816;
        b=eJQwruP/Mo1oUuwWdBkhZ9uy6OhyqUZEtO+6Nwmylxvw9s25okYp/iEv05CMMQF+tS
         WQPiDc3GK+GlnqMwc1id0aus6bDKr7QgYvfuFo7UeCeRebToHH5LG3lS+wxo5ItCbIAm
         LdKF75VsO102fvcUpi1L9G4WQPgdBf6aioDFbOK+2IQ/vUNdcvboviKzpH0Elye0pdKW
         BH9B2GRUy7C8JmClQe9jc3MfGhYUduFymxjAfQIIiSSwZcM0CjU5nJbvj0IrnM5czwYQ
         En9y+inP8wYavvGfdce7/mKGGSBbM+YonLLXXdOtwVvQBXtLFROT6jtRHfCwQNbjaZhC
         CiLQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=YxroUeNPICO/rCxEgqoF0BHm0TTc28cjP21bUB6hMP8=;
        b=lQ+I3afh86aqIpkS6I6g9ZWBcCq5S3Sahm6xhyWa5HhsQp9poCod7MmPkUy4eNFWNq
         j9EAZ7HvceI1f6uQyy6Fea9oHwRxx/qsOcejyQhvFy4rNuXEi+7tz7UzyMFVO8OJukFu
         Dom41uCCnyA9LrEC/N2VmjC2+x+wUFlZRkpDiojFP76UyiXIeeqkoKmhu9vylHFDSprl
         +IQ1x0sajWMo6w/R+gFgFNkQ7hhmkLgWeXMgM7Nn2HP6I4y8Sx2XHnWgNHHzlQ5vXIuf
         2vwx7K/vyWe4QMlstqZGhTfKwkG0Ndjh5dKcdc88RyexWm0G+0GEQwl18K2bMA5ma7Bu
         o65w==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@gmail.com header.s=20161025 header.b=ZJxVkMPY;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e4-v6si3601687pls.214.2018.11.08.00.04.21;
        Thu, 08 Nov 2018 00:04:37 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726469AbeKHRi2 (ORCPT <rfc822;lumpython@gmail.com> + 99 others);
        Thu, 8 Nov 2018 12:38:28 -0500
Received: from mail-wr1-f49.google.com ([209.85.221.49]:37775 "EHLO
        mail-wr1-f49.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726133AbeKHRi2 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 12:38:28 -0500
Received: by mail-wr1-f49.google.com with SMTP id o15-v6so16515327wrv.4
        for <linux-kernel@vger.kernel.org>; Thu, 08 Nov 2018 00:04:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=YxroUeNPICO/rCxEgqoF0BHm0TTc28cjP21bUB6hMP8=;
        b=ZJxVkMPYXbe+8HpIR3zoUC0cKKUqx4zaLLNKufjXvF7LsoqSi500Zav/wHvaDmWHic
         1yIj5fAlsxYeq/G7MssPvvBCInvNE5AbFsf78vrSvQn5RZlLd/65PBVIY3YwvQvti4O9
         md3PeUBjFPkffauviUA7m7iGAy81L5qTLebCfVgIPJ6iSCq74xOxRmic6EQ/7P3zy84x
         NVytLDwEAaGHeiQouQsXZfwBuOWjPjJ0ZmUfnCb0PWJSu4Tuf7cDeWepNSNNFd4RJNxy
         jw6Ns0MWDGcBK1x5b+6BhGsfyPnsOIpT7WUnysjp8XwV0ifW/RLpqLoEcKFhR9rwW4HD
         w+hQ==
X-Received: by 2002:adf:8c09:: with SMTP id z9-v6mr3058661wra.82.1541664249526;
        Thu, 08 Nov 2018 00:04:09 -0800 (PST)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
        by smtp.gmail.com with ESMTPSA id j203-v6sm5112032wmd.46.2018.11.08.00.04.08
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 08 Nov 2018 00:04:08 -0800 (PST)
Date: Thu, 8 Nov 2018 09:04:06 +0100
From: Ingo Molnar <mingo@kernel.org>
To: Thomas Gleixner <tglx@linutronix.de>
Cc: LKML <linux-kernel@vger.kernel.org>, x86@kernel.org,
        Peter Zijlstra <peterz@infradead.org>,
        Paul McKenney <paulmck@linux.vnet.ibm.com>,
        John Stultz <john.stultz@linaro.org>,
        Arnaldo Carvalho de Melo <acme@redhat.com>,
        Frederic Weisbecker <frederic@kernel.org>,
        Jonathan Corbet <corbet@lwn.net>,
        Andy Lutomirski <luto@kernel.org>,
        Marc Zyngier <marc.zyngier@arm.com>,
        Daniel Lezcano <daniel.lezcano@linaro.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Will Deacon <will.deacon@arm.com>,
        Mark Brown <broonie@kernel.org>,
        Dan Williams <dan.j.williams@intel.com>
Subject: Re: [patch 2/2] Documentation/process: Add tip tree handbook
Message-ID: <20181108080406.GF20032@gmail.com>
References: <20181107171010.421878737@linutronix.de>
 <20181107171149.165693799@linutronix.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181107171149.165693799@linutronix.de>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHaUUX7uNbRKsbAA--.2068S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKFy7KFW3Cr13Ar4DAr48Crg_yoW7WF4fpF
	ZFqws8Kr4qqryIgw10ya1rWryakws5Kay5JryDWryUArWjgrykuFW3KFWYvF4DurWkuF12
	qr4jgw4UuayDAaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r43MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMxCIbckI1I0E14v26r126r1D
	MI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67
	AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVF
	xhVjvjDU0xZFpf9x07bpMa5UUUUU=


* Thomas Gleixner <tglx@linutronix.de> wrote:

> +Variable types
> +^^^^^^^^^^^^^^
> +
> +Please use the proper u8, u16, u32, u64 types for variables which are meant
> +to describe hardware or are used as arguments for functions which access
> +hardware. These types are clearly defining the bit width and avoid
> +truncation, expansion and 32/64 bit confusion.
> +
> +u64 is also recommended in code which would become ambiguous for 32bit when
> +'unsigned long' would be used instead. While in such situations 'unsigned
> +long long' could be used as well, u64 is shorter and also clearly shows
> +that the operation is required to be 64bit wide independent of the target
> +CPU.
> +
> +Please use 'unsigned int' instead of 'unsigned'.

s/for 32bit
 /for 32-bit kernels

s/64bit wide
 /64 bits wide

> +Constants
> +^^^^^^^^^
> +
> +Please do not use literal (hexa)decimal numbers in code or initializers.
> +Either use proper defines which have descriptive names or consider using
> +an enum.

I believe there should be an exception for 'obvious' literal values like 
0 and 1.

I.e. the above is mostly a rule that is intended to cover undocumented 
'magic' numbers.

I.e. how about this wording:

  +Constants
  +^^^^^^^^^
  +
  +Please do not use magic literal (hexa)decimal numbers when interfacing
  +with hardware where the number has an unclear origin in code or 
  +initializers. I.e. "no magic numbers".
  +
  +Either use proper defines which have descriptive names or use an enum.
  +
  +Using obvious 0/1 literal values is fine in most cases.

?

> +
> +
> +Struct declarations and initializers
> +^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> +
> +Struct declarations should align the struct member names in a tabular
> +fashion::
> +
> +	struct bar_order {
> +		unsigned int	guest_id;
> +		int		ordered_item;
> +		struct menu	*menu;
> +	};
> +
> +Please avoid documenting struct members within the declaration, because
> +this often results in strangely formatted comments and the struct members
> +become obfuscated::
> +
> + 	struct bar_order {
> +  		unsigned int	guest_id; /* Unique guest id */

[ Sidenote: there's whitespace damage (extra spaces) in the text here. ]

> +		int		ordered_item;
> +		/* Pointer to a menu instance which contains all the drinks */
> +		struct menu	*menu;
> +	};
> +
> +Instead, please consider using the kernel-doc format in a comment preceding
> +the struct declaration, which is easier to read and has the added advantage
> +of including the information in the kernel documentation, for example, as
> +follows::

I disagree slightly here. While adding kernel-doc format is fine of 
course, so are in-line comments which I frequently use.

This form is particularly helpful for more complex structures. Have a 
look at 'struct fpu' for example:


/*
 * Highest level per task FPU state data structure that
 * contains the FPU register state plus various FPU
 * state fields:
 */
struct fpu {
	/*
	 * @last_cpu:
	 *
	 * Records the last CPU on which this context was loaded into
	 * FPU registers. (In the lazy-restore case we might be
	 * able to reuse FPU registers across multiple context switches
	 * this way, if no intermediate task used the FPU.)
	 *
	 * A value of -1 is used to indicate that the FPU state in context
	 * memory is newer than the FPU state in registers, and that the
	 * FPU state should be reloaded next time the task is run.
	 */
	unsigned int			last_cpu;

	/*
	 * @initialized:
	 *
	 * This flag indicates whether this context is initialized: if the task
	 * is not running then we can restore from this context, if the task
	 * is running then we should save into this context.
	 */
	unsigned char			initialized;

	/*
	 * @state:
	 *
	 * In-memory copy of all FPU registers that we save/restore
	 * over context switches. If the task is using the FPU then
	 * the registers in the FPU are more recent than this state
	 * copy. If the task context-switches away then they get
	 * saved here and represent the FPU state.
	 */
	union fpregs_state		state;
	/*
	 * WARNING: 'state' is dynamically-sized.  Do not put
	 * anything after it here.
	 */
};

The in-line freestanding comments is perfectly structured and readable as 
well, and this is analogous to the 'freestanding comments' style for C 
statements.

We also have occasional examples where tail comments are fine, such as:

/*
 * The legacy x87 FPU state format, as saved by FSAVE and
 * restored by the FRSTOR instructions:
 */
struct fregs_state {
	u32			cwd;	/* FPU Control Word		*/
	u32			swd;	/* FPU Status Word		*/
	u32			twd;	/* FPU Tag Word			*/
	u32			fip;	/* FPU IP Offset		*/
	u32			fcs;	/* FPU IP Selector		*/
	u32			foo;	/* FPU Operand Pointer Offset	*/
	u32			fos;	/* FPU Operand Pointer Selector	*/

	/* 8*10 bytes for each FP-reg = 80 bytes:			*/
	u32			st_space[20];

	/* Software status information [not touched by FSAVE]:		*/
	u32			status;
};

But I'd not complicate the style guide with that.

> +Static struct initializers must use C99 initializers and should also be
> +aligned in a tabular fashion::
> +
> +	static struct foo statfoo = {
> +		.a		= 0,
> +		.plain_integer	= CONSTANT_DEFINE_OR_ENUM,
> +		.bar		= &statbar,
> +	};
> +

Yeah, and maybe also add a note about the final comma:

  + Note that while C99 syntax allows the omission of the final comma, we 
  + recommend the use of a comma on the last line because it makes 
  + reordering and addition of new lines easier, and makes such future 
  + patches slightly easier to read as well.

?

Thanks,

	Ingo
