Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:35:22 -0000
Received: from icoremail.net (unknown [209.85.210.178])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3yQTUORbftNgAQ--.29659S3;
	Thu, 08 Nov 2018 23:02:44 +0800 (CST)
Received: from mail-pf1-f178.google.com (unknown [209.85.210.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3FEAQUORbvUQdAA--.3209S3;
	Thu, 08 Nov 2018 23:02:40 +0800 (CST)
Received: by mail-pf1-f178.google.com with SMTP id d13-v6so2249397pfo.3
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 07:02:40 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:references:cc:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-transfer-encoding:sender
         :precedence:list-id;
        bh=R3Hp9OkMVMYZAu9/kfd6h2tjOIE5ong2h0v7NDtXdZA=;
        b=jmAczF4ZkSzOhEwAMrY72TGD+xcREE2S1644F/DRzSgHfl7Cl+GYYCPsJYHktPXAd0
         D/kcsPnd/caTEQPAsaMuubR5sOr0eoq40+fOVTNotFYco8Bl0iA6cJZchWE/LUAbh43h
         6NRsS8q8UrZzCJyUXqHytAVwVZa+ohLZwzE3Q6foOWyTVQQG8HLiqBovzZ4xmXJmPB0O
         v43BI6QxvF1k1wqmQ5shOToVjiPzVUxdZ7uxEFhd9z6WF2rD1DsbKLPgdBJuns+Kx5+D
         vUw5ez7bsY3TKRct9EQEiTbeyr/04dlFuTbo2wjh4rMax8Y4cREWeup/mGi1TKGoAhl/
         Px3g==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLQ36DcmPqTtW7PxdZ/qoDts5Qy7wlGNKrHAgCKSxqLV0u6WOjd
	AWXbfhi70dK8lWt2DwKNSxjD9m0UAWEvwCNlyoEOlcqrkaOiWFnQOQ==
X-Received: by 2002:a62:4105:: with SMTP id o5-v6mr1606392pfa.85.1541689360281;
        Thu, 08 Nov 2018 07:02:40 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp293776pjt;
        Thu, 8 Nov 2018 07:02:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5d4Fr8vXwXXrvsRgG2AC48s6vsNvVd+U3xYxXScpcuA0dxtjp0M193couVyB6k1zK3NtdFJ
X-Received: by 2002:a63:151f:: with SMTP id v31mr4003696pgl.34.1541689358726;
        Thu, 08 Nov 2018 07:02:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541689358; cv=none;
        d=google.com; s=arc-20160816;
        b=q54qISdCJpU8MkX++uw9xZ4zsq/8KUOCA8ZttuIo1h3MInFtZUN+FRJfUl7B2XneiC
         sTQDuN9JJlp+BIhZWGX64c4fUPd77dJVbUzl6n2nXVaaRD0e5hyTvaw4YVGpSPXCs+/b
         sTXNNtsIGHXu4g6yi7Hac0gpR1gNaMge76V1ZgpFDQUim6KIIbELf7nljfB/cnJwkUtY
         GWsRZnKP3NO60hnYNrUzD25R5yiyZ0JR0g7qscldnNvqbfBSlPo95TBLrpsxl643uKwO
         8qV5MJV8QV3XqleDo25rpbOlinV62kfNXvM2yXPVeZ2cUdO7ARTxYEndF861M6f8r6Sr
         bMtg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:in-reply-to
         :mime-version:user-agent:date:message-id:from:cc:references:to
         :subject;
        bh=R3Hp9OkMVMYZAu9/kfd6h2tjOIE5ong2h0v7NDtXdZA=;
        b=VJEv56N01XIBYWBf9JKXNX6Gy8lKVc95tj4Agq+S7IckWhUPiRhznztSkUzpegXn+m
         nXIm3lmCq2G62FuiSYj/rtP2naOU9p9sjxr95mj1ZiIRLfPvx0UPjQVolO2wZtAiaMsY
         DN01qEXhKfpzVX1NPeGA1QrmJ6mMp9/nVQkgws4ag483EJKeLu2tz7HhKWfhqD7o5dG7
         qfNOf2CBIddLOGPLJIF6Y56eWKpCQsQ5/ErcaD8Ov5rkU5AWRtuxaqMeGtA4fCBpN3h3
         oJ/RStL3RPOT1WHoID5xv8PnoSS9E66auPBjdSKZGrHBVq1zd4xZAqc+1mT+Yv5rbMt2
         TEcw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k11si3752839pgf.213.2018.11.08.07.02.22;
        Thu, 08 Nov 2018 07:02:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727178AbeKIAhe (ORCPT <rfc822;ankurbansal210989@gmail.com>
        + 99 others); Thu, 8 Nov 2018 19:37:34 -0500
Received: from szxga04-in.huawei.com ([45.249.212.190]:14630 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726469AbeKIAhe (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 19:37:34 -0500
Received: from DGGEMS408-HUB.china.huawei.com (unknown [172.30.72.58])
        by Forcepoint Email with ESMTP id 802FDA61D1582;
        Thu,  8 Nov 2018 23:01:29 +0800 (CST)
Received: from [127.0.0.1] (10.202.226.41) by DGGEMS408-HUB.china.huawei.com
 (10.3.19.208) with Microsoft SMTP Server id 14.3.408.0; Thu, 8 Nov 2018
 23:01:22 +0800
Subject: Re: [PATCH v2] of, numa: Validate some distance map rules
To: Anshuman Khandual <anshuman.khandual@arm.com>,
        <robh+dt@kernel.org>, <frowand.list@gmail.com>
References: <1541672223-131326-1-git-send-email-john.garry@huawei.com>
 <ee4cc102-6602-9f4f-d00c-d07ad7567401@arm.com>
CC: <devicetree@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <linuxarm@huawei.com>, <will.deacon@arm.com>,
        <peterz@infradead.org>
From: John Garry <john.garry@huawei.com>
Message-ID: <ec84abdd-ad11-329c-e859-20bfe71d5771@huawei.com>
Date: Thu, 8 Nov 2018 15:01:16 +0000
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:45.0) Gecko/20100101
 Thunderbird/45.3.0
MIME-Version: 1.0
In-Reply-To: <ee4cc102-6602-9f4f-d00c-d07ad7567401@arm.com>
Content-Type: text/plain; charset="utf-8"; format=flowed
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.226.41]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3FEAQUORbvUQdAA--.3209S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Wr1xZr45WF4ftr1xKw1ftFb_yoWxWF15pr
	WUGFy5tw1kCF1Fk392qa10gF1vyrZ7XrZxGryfK3yjywn0vr4ktrWftrWa93W3Crn7JFyj
	vw4jqryDAay8XaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6ryrMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVW5JVW7JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E
	87Iv67AKxVW0oVCq3wCYIxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwI
	xGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8
	JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1V
	AFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVF
	xhVjvjDU0xZFpf9x07bpc_fUUUUU=

On 08/11/2018 13:41, Anshuman Khandual wrote:
> On 11/08/2018 03:47 PM, John Garry wrote:
>> Currently the NUMA distance map parsing does not validate the distance
>> table for the distance-matrix rules 1-2 in [1].
>
> Right.
>
>>
>> However the arch NUMA code may enforce some of these rules, but not all.
>
> Either it does enforce all these rules again or it does not. What is the
> purpose it serves when enforcing parts of it ! Rather it should focus on
> looking for boundary conditions (e.g maximum number of nodes supported
> on a platform against whats present on the table) which are important
> from kernel point of view.
>
>> Such is the case for the arm64 port, which does not enforce the rule that
>> the distance between separates nodes cannot equal LOCAL_DISTANCE.
>>
>> The patch adds the following rules validation:
>> - distance of node to self equals LOCAL_DISTANCE
>> - distance of separate nodes > LOCAL_DISTANCE
>
> Which exactly corresponds to first two rules as mentioned in the DT doc
> (Documents/devicetree/bindings/numa.txt)
>
>         1. Each entry represents distance from first node to second node.
>         The distances are equal in either direction.
>         2. The distance from a node to self (local distance) is represented
>         with value 10 and all internode distance should be represented with
>         a value greater than 10.
>
>>

Not exactly. As you know, it does not add validation of distance 
equality in either direction (for values present in the table).

>> This change avoids a yet-unresolved crash reported in [2].
>>
>> A note on dealing with symmetrical distances between nodes:
>>
>> Validating symmetrical distances between nodes is difficult. If it were
>> mandated in the bindings that every distance must be recorded in the
>> table, then it would be easy. However, it isn't.
>
> But if [a, b] and [b, a] both are present, they must be equal.
>
>>
>> In addition to this, it is also possible to record [b, a] distance only
>> (and not [a, b]). So, when processing the table for [b, a], we cannot
>> assert that current distance of [a, b] != [b, a] as invalid, as [a, b]
>> distance may not be present in the table and current distance would be
>> default at REMOTE_DISTANCE.
>
> Falling back to REMOTE_DISTANCE is right in case one of the symmetrical
> distances is not present. But it must abort if they are present and not
> identical. That rule should be enforced here while processing DT.

Do you really think it's worth the effort?

For this, we would need something considerably more complicated than 
what we have today. Maybe similar to the arm64 NUMA code does, in 
allocating a memblock and then doing some 2-phase table parsing. But 
then we're just replicated this same functionality.

On this point, I will also note that there is another problem with the 
DT NUMA bindings (first problem being that both distance entries are not 
required to be present in the table).

That is, it's inconsistency with ACPI SLIT. ACPI SLIT allows 
asymmetrical distance. So that's why I'm not too hung up on this issue 
of validating equality of distances.

This patch does not change the current kernel policy: if the table has 
entries with unequal distances, then it's not rejected nor fixed up.

>
>>
>> As such, we maintain the policy that we overwrite distance [a, b] = [b, a]
>> for b > a. This policy is different to kernel ACPI SLIT validation, which
>> allows non-symmetrical distances (ACPI spec SLIT rules allow it). However,
>> the distance debug message is dropped as it may be misleading (for a distance
>> which is later overwritten).
>
> We could override but if the DT passed table is inconsistent then it must
> abort as non-symmetrical distance is not supported. Hence overriding the
> distance should happen only in case the inverse set is absent (probably
> outside the first loop).
>
>>
>> Some final notes on semantics:
>>
>> - It is implied that it is the responsibility of the arch NUMA code to
>>   reset the NUMA distance map for an error in distance map parsing.
>
> Right.
>
>>
>> - It is the responsibility of the FW NUMA topology parsing (whether OF or
>>   ACPI) to enforce NUMA distance rules, and not arch NUMA code.
>
> This is where we still have some inconsistencies. Arch NUMA code on arm64
> should either enforce rule 1 and 2 as stated above or should not at all.

It was implied that any validation can be later dropped from the arch 
NUMA code.

  As
> discussed previously numa_set_distance() enforces first part of rule 2
> (self distance should be 10) but not the second part of rule 2 (internode
> distance > 10). So either the following condition should be dropped from
>
> (from == to && distance != LOCAL_DISTANCE)
>
> or the following condition should be added to
>
> (from != to && distance <= LOCAL_DISTANCE)
>
> numa_set_distance() in order to conform to the semantics described above.
> But thats for a separate discussion how much and what should be enforced
> in any given DT compatible arch NUMA node. May not be part of this patch.
>
>>
>> [1] Documents/devicetree/bindings/numa.txt
>> [2] https://www.spinics.net/lists/arm-kernel/msg683304.html
>>
>> Cc: stable@vger.kernel.org # 4.7
>> Signed-off-by: John Garry <john.garry@huawei.com>
>> Acked-by: Will Deacon <will.deacon@arm.com>
>> ---
>> Changes from v1:
>> - Add note on masking crash reported
>> - Add Will's tag
>> - Add cc stable
>>
>> diff --git a/drivers/of/of_numa.c b/drivers/of/of_numa.c
>> index 35c64a4295e0..fe6b13608e51 100644
>> --- a/drivers/of/of_numa.c
>> +++ b/drivers/of/of_numa.c
>> @@ -104,9 +104,14 @@ static int __init of_numa_parse_distance_map_v1(struct device_node *map)
>>  		distance = of_read_number(matrix, 1);
>>  		matrix++;
>>
>> +		if ((nodea == nodeb && distance != LOCAL_DISTANCE) ||
>> +		    (nodea != nodeb && distance <= LOCAL_DISTANCE)) {
>> +			pr_err("Invalid distance[node%d -> node%d] = %d\n",
>> +			       nodea, nodeb, distance);
>> +			return -EINVAL;
>> +		}
>> +
>>  		numa_set_distance(nodea, nodeb, distance);
>> -		pr_debug("distance[node%d -> node%d] = %d\n",
>> -			 nodea, nodeb, distance);
>
> It makes sense to go through the table and print the finalized values
> (being passed to arch NUMA) out side of this loop after any identical
> replacement is done.
>>
>>  		/* Set default distance of node B->A same as A->B */
>>  		if (nodeb > nodea)
>>
>
> As mentioned before it should invalidate the table [a, b] != [b, a] in
> case they are present and not equal.
>

I think that most of these comments are related to earlier points.

> .
>

Thanks,
John

