Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 10:29:23 -0000
Received: from icoremail.net (unknown [209.85.210.173])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv35XA+Rbb_xeAQ--.29228S3;
	Thu, 08 Nov 2018 17:35:20 +0800 (CST)
Received: from mail-pf1-f173.google.com (unknown [209.85.210.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnvztUA+RblQ0cAA--.597S3;
	Thu, 08 Nov 2018 17:35:16 +0800 (CST)
Received: by mail-pf1-f173.google.com with SMTP id j13-v6so9051983pff.11
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 01:35:16 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:subject:to
         :references:cc:from:message-id:date:user-agent:mime-version
         :in-reply-to:content-transfer-encoding:sender:precedence:list-id;
        bh=rh3audeCQVmE2bkfPsfjpvKyyaUO8akqIsCB+xCWhvU=;
        b=rVpUzNyd1bfHbzuE5NNzotT/QcQWHDdCmDmeQZKE2yFpXbVXFqqg3p+VOf2QYpQqiC
         YRctC9cjfNfvRV/Ttp8+qp8CfduoXLK88fZZ/yQajro/m/YGLLLY8MhHQZsK8f6B+KAP
         iKgEHfqQr/12G/2IaUPbY5QSIOR+pkH1aeinqXEh5S5aucX8sF6lzsMK4nLvy/1Ly0iL
         RkkvbE6ADAalipHayT0/naxGUUkd+LF++cC9RGqi4hMEmgg86wAauabliIFly5olcAS0
         gMXUZMbF/hlv1+IcMHLGVnekRdKLplLweCFjSqy6AdXJZts6HyB9VbVEKNerd6WuYD5I
         motg==
X-Gm-Message-State: AGRZ1gKf0jOKsCXfgK/Ze1qUzSzECXGONCkfTX1nryJ2QRmPF6O2BXjG
	G+Nk9Xevlg33UZkasrbtXWxC6yfE4LyFxmif//vNTLalvuR0RS25bw==
X-Received: by 2002:a63:1e17:: with SMTP id e23mr3160683pge.130.1541669715877;
        Thu, 08 Nov 2018 01:35:15 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp293413pjt;
        Thu, 8 Nov 2018 01:35:14 -0800 (PST)
X-Google-Smtp-Source: AJdET5fMBWu5KZ0Kv1qkfMtoPJXb72uek6Tmv3ooryouC/LL49fzhEIRMqvR7vegd2mXy5X2CqXJ
X-Received: by 2002:aa7:8719:: with SMTP id b25-v6mr3789590pfo.250.1541669714905;
        Thu, 08 Nov 2018 01:35:14 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541669714; cv=none;
        d=google.com; s=arc-20160816;
        b=kL+fID5Bz85dR82iyH8t7ZIAvmE3etmubCUikFA+az0eX+mEGoZ5ljW05WM8UQgNv+
         j4HvWvpg3Zyplg/d5Bktj5sJQkWmEZHf6CVi0DNXjhszq2F+QZAVWUQSLTki6dD8iTYp
         X+87o6PgouyS7KacMG/H2UB48JwTaOm9nHjC2rGq1WhefsSxPmrR92/PnB24SD8ZoTkf
         xjr8lpLfGTObcqZyq042xyFPFCmGvcomainExd5A9dcMCfuO7/M41cD2uV/lkUGXuOyL
         /whGdbsKl5L1KCn7P1pun2cMUCRDgQSRFsLg5dNblKDq/MKhdewu2v6+VXaLZqpc+P/V
         cKzQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:in-reply-to
         :mime-version:user-agent:date:message-id:from:cc:references:to
         :subject:dkim-signature;
        bh=rh3audeCQVmE2bkfPsfjpvKyyaUO8akqIsCB+xCWhvU=;
        b=LHpEg38JeY1+esFx/jH21mRbDDg3dMx7MoRaOjHsFse6y+E4gvF7Suh2hyFQ124uwc
         uaHRa906J1WkjaciCl7ibSFrBU4s/YK35zV8YfbSINfuLVvaPmvjvlPDdiMEZaLBuper
         ApG83sPYDWcBqjteVl4KvlSV+GOGkhQxiza2erm1eqvthBVSzdc+h8oC9bmDyBxs1aI/
         zGDsAy9g1gNqIdOAzbRValkHGR2neXXJsSyMrdioRdcMTJDjKaFIaY+tyzlHPeBPAfKI
         P1Ox6JbjnGBkuvg0Eqlzbuf0X/1KETbT9cFstaZOeLLvlQ9kNHrs+97nHvTbX4sjo1h2
         6zCg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@ti.com header.s=ti-com-17Q1 header.b="nkO+/Rty";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=QUARANTINE sp=NONE dis=NONE) header.from=ti.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d34-v6si3782931pla.33.2018.11.08.01.34.59;
        Thu, 08 Nov 2018 01:35:14 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726765AbeKHTJa (ORCPT <rfc822;lumpython@gmail.com> + 99 others);
        Thu, 8 Nov 2018 14:09:30 -0500
Received: from lelv0143.ext.ti.com ([198.47.23.248]:35974 "EHLO
        lelv0143.ext.ti.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726133AbeKHTJa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 14:09:30 -0500
Received: from fllv0034.itg.ti.com ([10.64.40.246])
        by lelv0143.ext.ti.com (8.15.2/8.15.2) with ESMTP id wA89YjQw104326;
        Thu, 8 Nov 2018 03:34:45 -0600
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ti.com;
        s=ti-com-17Q1; t=1541669685;
        bh=rh3audeCQVmE2bkfPsfjpvKyyaUO8akqIsCB+xCWhvU=;
        h=Subject:To:References:CC:From:Date:In-Reply-To;
        b=nkO+/Rty6Zs8MkMVLXZwcQ+iekMCoDqW/YB4RKRLmfzslQg6l5ohENao6ndEDqCGP
         4CY+NGy0ZgTRdXt2MqA1fzIsL34vLA0ljtZ42rJWDGaaJ22LLT4cmEndwPTLcVSEaq
         qhMaMxD1hIiB+8BLF3J0D70WCWBIvY2QfOLEMduY=
Received: from DLEE107.ent.ti.com (dlee107.ent.ti.com [157.170.170.37])
        by fllv0034.itg.ti.com (8.15.2/8.15.2) with ESMTPS id wA89YjLZ041056
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=FAIL);
        Thu, 8 Nov 2018 03:34:45 -0600
Received: from DLEE110.ent.ti.com (157.170.170.21) by DLEE107.ent.ti.com
 (157.170.170.37) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id 15.1.1466.3; Thu, 8 Nov
 2018 03:34:44 -0600
Received: from dlep33.itg.ti.com (157.170.170.75) by DLEE110.ent.ti.com
 (157.170.170.21) with Microsoft SMTP Server (version=TLS1_0,
 cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.1466.3 via Frontend Transport;
 Thu, 8 Nov 2018 03:34:44 -0600
Received: from [192.168.2.6] (ileax41-snat.itg.ti.com [10.172.224.153])
        by dlep33.itg.ti.com (8.14.3/8.13.8) with ESMTP id wA89YfKl005046;
        Thu, 8 Nov 2018 03:34:42 -0600
Subject: Re: [RFC PATCH v1 13/14] usb:cdns3: Adds debugging function.
To: Pawel Laszczak <pawell@cadence.com>, <gregkh@linuxfoundation.org>
References: <1541267487-3664-1-git-send-email-pawell@cadence.com>
 <1541267487-3664-14-git-send-email-pawell@cadence.com>
CC: <linux-usb@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <adouglas@cadence.com>, <jbergsagel@ti.com>, <peter.chen@nxp.com>,
        <pjez@cadence.com>, <kurahul@cadence.com>
From: Roger Quadros <rogerq@ti.com>
Message-ID: <5BE40331.90107@ti.com>
Date: Thu, 8 Nov 2018 11:34:41 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.6.0
MIME-Version: 1.0
In-Reply-To: <1541267487-3664-14-git-send-email-pawell@cadence.com>
Content-Type: text/plain; charset="windows-1252"
Content-Transfer-Encoding: 7bit
X-EXCLAIMER-MD-CONFIG: e1e8a2fd-e40a-4ac6-ac9b-f7e9cc9ee180
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnvztUA+RblQ0cAA--.597S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Wr1DKry5ZF47Cr4fAF1fZwb_yoWfJw43pa
	y5G3W5KrZ7XrW3Xrn3Zr4DuFZ8Ja109348KFyxtw1YvrnxZrZ8GFs8GryYkrs7CF98Xry5
	Kws8Ga1kWF4a9wUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmab7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_GFWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2
	jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64
	vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_
	Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsG
	vfC2KfnxnUUI43ZEXa7IU5wdbUUUUUU==

Hi,

On 03/11/18 19:51, Pawel Laszczak wrote:
> Patch implements some function used for debugging driver.
> 
> Signed-off-by: Pawel Laszczak <pawell@cadence.com>
> ---
>  drivers/usb/cdns3/Makefile |   2 +-
>  drivers/usb/cdns3/debug.c  | 128 +++++++++++++++++++++++++++++++++++++
>  drivers/usb/cdns3/ep0.c    |   3 +
>  drivers/usb/cdns3/gadget.c |  12 ++++
>  drivers/usb/cdns3/gadget.h |  13 +++-
>  5 files changed, 156 insertions(+), 2 deletions(-)
>  create mode 100644 drivers/usb/cdns3/debug.c
> 
> diff --git a/drivers/usb/cdns3/Makefile b/drivers/usb/cdns3/Makefile
> index f4cfc978626f..34e60d03c4ec 100644
> --- a/drivers/usb/cdns3/Makefile
> +++ b/drivers/usb/cdns3/Makefile
> @@ -2,6 +2,6 @@ obj-$(CONFIG_USB_CDNS3)			+= cdns3.o
>  obj-$(CONFIG_USB_CDNS3_PCI_WRAP)	+= cdns3-pci.o
>  
>  cdns3-y					:= core.o drd.o
> -cdns3-$(CONFIG_USB_CDNS3_GADGET)	+= gadget.o ep0.o
> +cdns3-$(CONFIG_USB_CDNS3_GADGET)	+= gadget.o ep0.o debug.o
>  cdns3-$(CONFIG_USB_CDNS3_HOST)		+= host.o
>  cdns3-pci-y		 		:= cdns3-pci-wrap.o
> diff --git a/drivers/usb/cdns3/debug.c b/drivers/usb/cdns3/debug.c
> new file mode 100644
> index 000000000000..bebf22c4d18e
> --- /dev/null
> +++ b/drivers/usb/cdns3/debug.c
> @@ -0,0 +1,128 @@
> +// SPDX-License-Identifier: GPL-2.0
> +/*
> + * Cadence USBSS DRD Driver.
> + *
> + * Copyright (C) 2018 Cadence.
> + *
> + * Author: Pawel Laszczak <pawell@cadence.com>
> + */
> +
> +#include "gadget.h"
> +
> +static inline char *cdns3_decode_ep_irq(u32 ep_sts, const char *ep_name)
> +{
> +	static char str[256];
> +	int ret;
> +
> +	ret = sprintf(str, "IRQ for %s: %08x ", ep_name, ep_sts);
> +
> +	if (ep_sts & EP_STS_SETUP)
> +		ret += sprintf(str + ret, "SETUP ");
> +	if (ep_sts & EP_STS_IOC)
> +		ret += sprintf(str + ret, "IOC ");
> +	if (ep_sts & EP_STS_ISP)
> +		ret += sprintf(str + ret, "ISP ");
> +	if (ep_sts & EP_STS_DESCMIS)
> +		ret += sprintf(str + ret, "DESCMIS ");
> +	if (ep_sts & EP_STS_STREAMR)
> +		ret += sprintf(str + ret, "STREAMR ");
> +	if (ep_sts & EP_STS_MD_EXIT)
> +		ret += sprintf(str + ret, "MD_EXIT ");
> +	if (ep_sts & EP_STS_TRBERR)
> +		ret += sprintf(str + ret, "TRBERR ");
> +	if (ep_sts & EP_STS_NRDY)
> +		ret += sprintf(str + ret, "NRDY ");
> +	if (ep_sts & EP_STS_PRIME)
> +		ret += sprintf(str + ret, "PRIME ");
> +	if (ep_sts & EP_STS_SIDERR)
> +		ret += sprintf(str + ret, "SIDERRT ");
> +	if (ep_sts & EP_STS_OUTSMM)
> +		ret += sprintf(str + ret, "OUTSMM ");
> +	if (ep_sts & EP_STS_ISOERR)
> +		ret += sprintf(str + ret, "ISOERR ");
> +	if (ep_sts & EP_STS_IOT)
> +		ret += sprintf(str + ret, "IOT ");
> +
> +	return str;
> +}
> +
> +char *cdns3_decode_epx_irq(struct cdns3_endpoint *priv_ep)
> +{
> +	struct cdns3_device *priv_dev = priv_ep->cdns3_dev;
> +
> +	return cdns3_decode_ep_irq(readl(&priv_dev->regs->ep_sts),
> +				   priv_ep->name);
> +}
> +
> +char *cdns3_decode_ep0_irq(struct cdns3_device *priv_dev, int dir)
> +{
> +	if (dir)
> +		return cdns3_decode_ep_irq(readl(&priv_dev->regs->ep_sts),
> +					   "ep0IN");
> +	else
> +		return cdns3_decode_ep_irq(readl(&priv_dev->regs->ep_sts),
> +					   "ep0OUT");
> +}
> +
> +void cdns3_dbg_setup(struct cdns3_device *priv_dev)
> +{
> +	struct usb_ctrlrequest *setup = priv_dev->setup;
> +
> +	dev_dbg(&priv_dev->dev,
> +		"SETUP BRT: %02x BR: %02x V: %04x I: %04x L: %04x\n",
> +		setup->bRequestType,
> +		setup->bRequest,
> +		le16_to_cpu(setup->wValue),
> +		le16_to_cpu(setup->wIndex),
> +		le16_to_cpu(setup->wLength));
> +}
> +
> +/**
> + * Debug a transfer ring.
> + *
> + * Prints out all TRBs in the endpoint ring, even those after the Link TRB.
> + *.
> + */
> +void cdns3_dbg_ring(struct cdns3_device *priv_dev,
> +		    struct cdns3_endpoint *priv_ep)
> +{
> +	u64 addr = priv_ep->trb_pool_dma;
> +	struct cdns3_trb *trb;
> +	int i;
> +
> +	for (i = 0; i < TRBS_PER_SEGMENT; ++i) {
> +		trb = &priv_ep->trb_pool[i];
> +		dev_dbg(&priv_dev->dev, "@%016llx %08x %08x %08x\n", addr,
> +			le32_to_cpu(trb->buffer),
> +			le32_to_cpu(trb->length),
> +			le32_to_cpu(trb->control));
> +		addr += sizeof(*trb);
> +	}
> +}
> +
> +void cdns3_dbg_ring_ptrs(struct cdns3_device *priv_dev,
> +			 struct cdns3_endpoint *priv_ep)
> +{
> +	struct cdns3_trb *trb;
> +
> +	trb = &priv_ep->trb_pool[priv_ep->dequeue];
> +	dev_dbg(&priv_dev->dev,
> +		"Ring deq index: %d, trb: %p (virt), 0x%llx (dma)\n",
> +		priv_ep->dequeue, trb,
> +		cdns3_trb_virt_to_dma(priv_ep, trb));
> +
> +	trb = &priv_ep->trb_pool[priv_ep->enqueue];
> +	dev_dbg(&priv_dev->dev,
> +		"Ring enq index: %d, trb: %p (virt), 0x%llx (dma)\n",
> +		priv_ep->enqueue, trb,
> +		cdns3_trb_virt_to_dma(priv_ep, trb));
> +}
> +
> +void cdns3_dbg_ep_rings(struct cdns3_device *priv_dev,
> +			struct cdns3_endpoint *priv_ep)
> +{
> +	dev_dbg(&priv_dev->dev, "Endpoint ring %s:\n", priv_ep->name);
> +
> +	cdns3_dbg_ring_ptrs(priv_dev, priv_ep);
> +	cdns3_dbg_ring(priv_dev, priv_ep);
> +}
> diff --git a/drivers/usb/cdns3/ep0.c b/drivers/usb/cdns3/ep0.c
> index 555ac7f6842e..46c943a74f77 100644
> --- a/drivers/usb/cdns3/ep0.c
> +++ b/drivers/usb/cdns3/ep0.c
> @@ -604,12 +604,15 @@ void cdns3_check_ep0_interrupt_proceed(struct cdns3_device *priv_dev, int dir)
>  	cdns3_select_ep(priv_dev, 0 | (dir ? USB_DIR_IN : USB_DIR_OUT));
>  	ep_sts_reg = readl(&regs->ep_sts);
>  
> +	dev_dbg(&priv_dev->dev, "%s\n", cdns3_decode_ep0_irq(priv_dev, dir));
> +
>  	__pending_setup_status_handler(priv_dev);
>  
>  	if ((ep_sts_reg & EP_STS_SETUP) && dir == 0) {
>  		struct usb_ctrlrequest *setup = priv_dev->setup;
>  
>  		writel(EP_STS_SETUP | EP_STS_IOC | EP_STS_ISP, &regs->ep_sts);
> +		cdns3_dbg_setup(priv_dev);
>  
>  		priv_dev->ep0_data_dir = setup->bRequestType & USB_DIR_IN;
>  		cdns3_ep0_setup_phase(priv_dev);
> diff --git a/drivers/usb/cdns3/gadget.c b/drivers/usb/cdns3/gadget.c
> index 905cad1a8229..ba4a36ce6e9a 100644
> --- a/drivers/usb/cdns3/gadget.c
> +++ b/drivers/usb/cdns3/gadget.c
> @@ -124,6 +124,14 @@ void cdns3_select_ep(struct cdns3_device *priv_dev, u32 ep)
>  	wmb();
>  }
>  
> +dma_addr_t cdns3_trb_virt_to_dma(struct cdns3_endpoint *priv_ep,
> +				 struct cdns3_trb *trb)
> +{
> +	u32 offset = (char *)trb - (char *)priv_ep->trb_pool;
> +
> +	return priv_ep->trb_pool_dma + offset;
> +}
> +
>  /**
>   * cdns3_allocate_trb_pool - Allocates TRB's pool for selected endpoint
>   * @priv_ep:  endpoint object
> @@ -428,6 +436,8 @@ int cdns3_ep_run_transfer(struct cdns3_endpoint *priv_ep,
>  		trb->control |= first_pcs;
>  
>  	priv_req->on_ring = 1;
> +
> +	cdns3_dbg_ep_rings(priv_dev, priv_ep);
>  arm:
>  	/* arm transfer on selected endpoint */
>  	cdns3_select_ep(priv_ep->cdns3_dev, address);
> @@ -537,6 +547,8 @@ static int cdns3_check_ep_interrupt_proceed(struct cdns3_endpoint *priv_ep)
>  	cdns3_select_ep(priv_dev, priv_ep->endpoint.address);
>  	ep_sts_reg = readl(&regs->ep_sts);
>  
> +	dev_dbg(&priv_dev->dev, "%s\n", cdns3_decode_epx_irq(priv_ep));
> +
>  	if (ep_sts_reg & EP_STS_TRBERR)
>  		writel(EP_STS_TRBERR, &regs->ep_sts);
>  
> diff --git a/drivers/usb/cdns3/gadget.h b/drivers/usb/cdns3/gadget.h
> index 3f67ef1e5cda..3b2c01ff655b 100644
> --- a/drivers/usb/cdns3/gadget.h
> +++ b/drivers/usb/cdns3/gadget.h
> @@ -1085,5 +1085,16 @@ struct usb_request *cdns3_gadget_ep_alloc_request(struct usb_ep *ep,
>  void cdns3_gadget_ep_free_request(struct usb_ep *ep,
>  				  struct usb_request *request);
>  int cdns3_gadget_ep_dequeue(struct usb_ep *ep, struct usb_request *request);
> -
> +dma_addr_t cdns3_trb_virt_to_dma(struct cdns3_endpoint *priv_ep,
> +				 struct cdns3_trb *trb);
> +
> +char *cdns3_decode_epx_irq(struct cdns3_endpoint *priv_ep);
> +char *cdns3_decode_ep0_irq(struct cdns3_device *priv_dev, int dir);
> +void cdns3_dbg_ring(struct cdns3_device *priv_dev,
> +		    struct cdns3_endpoint *priv_ep);
> +void cdns3_dbg_ring_ptrs(struct cdns3_device *priv_dev,
> +			 struct cdns3_endpoint *priv_ep);
> +void cdns3_dbg_ep_rings(struct cdns3_device *priv_dev,
> +			struct cdns3_endpoint *priv_ep);
> +void cdns3_dbg_setup(struct cdns3_device *priv_dev);
>  #endif /* __LINUX_CDNS3_GADGET */
> 

How often are these invoked?

For I/O intensive cases dev_dbg() will not be useful as it will affect timing adversely
because of which it might prevent the issue from happening when debug is enabled.

How about using tracepoints instead?

cheers,
-roger
-- 
Texas Instruments Finland Oy, Porkkalankatu 22, 00180 Helsinki.
Y-tunnus/Business ID: 0615521-4. Kotipaikka/Domicile: Helsinki
