Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 00:34:45 -0000
Received: from icoremail.net (unknown [209.85.215.176])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_49jWuNbkedaAQ--.59190S3;
	Thu, 08 Nov 2018 05:34:28 +0800 (CST)
Received: from mail-pg1-f176.google.com (unknown [209.85.215.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB38ExhWuNbWGcZAA--.2143S3;
	Thu, 08 Nov 2018 05:34:25 +0800 (CST)
Received: by mail-pg1-f176.google.com with SMTP id q5-v6so7874484pgv.0
        for <xuliker@zju.edu.cn>; Wed, 07 Nov 2018 13:34:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=cyeMv3f/Ro8UYywQtn1ATGYi3zrM11q4oJiTFAVxCB8=;
        b=Kq/fhKdjMrOQogKQ/al2WbrBI2hNMbopzR3VDUr6mxCQGhlqT01eM7j8lA+JBy0G61
         FdDJFIR/sB+rUgkDjlfIjTzMd6zkhZQ/iN7hcEMYM2AwWGlq4ECT7giE3PJ0vvVzAgwo
         mqOPyuhzT3pLIUQJQ+eN26j65etdCOBXhgaqlp/+hAiJW+bkNO2YCVKyPtxtsK1F5aok
         0Zc4aRNUfTWl/ZnzdejusJkJrf8yKUkXTTwFAGl4YeDwU86o3wUqpHV5IcvdBTlyy/Dy
         9QGCUM1anQBGN/Tu5Gb1NlzMK59WSTb3hsV+4K5nbMFvPTmGwc/aERuv6k4iz7Wy88W7
         10Ng==
X-Gm-Message-State: AGRZ1gLEQ5bbqSe9I5tB3OBLKhgDD+EAc1IEbeieu9zE8gsv4ZtToGz0
	bh1gi7Cxaf7U2mWa1A+toP0a4KTNLM0Wa3T3LfjKH0CG5onNai/5Tw==
X-Received: by 2002:a63:2c0e:: with SMTP id s14mr1699513pgs.132.1541626465179;
        Wed, 07 Nov 2018 13:34:25 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp31365pjt;
        Wed, 7 Nov 2018 13:34:24 -0800 (PST)
X-Google-Smtp-Source: AJdET5f0XHuNnPBzUC3MPvsn6X4fXN9D1gb3/fYQC2HHSiEgdbMPR/F/BwB9jZAMzpkuD2y2JfCX
X-Received: by 2002:a17:902:bccc:: with SMTP id o12-v6mr1979901pls.281.1541626464448;
        Wed, 07 Nov 2018 13:34:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541626464; cv=none;
        d=google.com; s=arc-20160816;
        b=A4LV3MTH/HOjUSmCYGXy/Nx/a2te6j8BM7NYp+lXltKLH+f2rXprXGIB16orbZ+wze
         ucRgtltOS9ZzDhy0LL7ASdLSvqL4RWCqa8QU+Mko8t59uwyk4mDY8LMWBgEUFSxR/Z0r
         gBMfWPuOnKo0yQdo+0uXAeBFPtqdUClqNt3A79DowhBpqe3Ydt/BNSSE88DivxpOb+IH
         yoqSbRobzImqQRNZ1tXEBv1NA/sEiTlU5/yhIHJh5IKqp1kcorqL+R5RYfqkJsWzWAf1
         PAM3Mt8pSCTL6tCrk+7GZwC9Oe7RzIruanhOeJph93UZsaDGjNqkdaoLCwJxs3gbGURV
         LPYQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature;
        bh=cyeMv3f/Ro8UYywQtn1ATGYi3zrM11q4oJiTFAVxCB8=;
        b=EbepEfot1nRBZ4UsdtPrlSrnKjz+JN0G74LNcLu4cjxoLdJjAMUjVS4b9NOv6LOSkJ
         lFmHeP6rhUfIlG/sALO9CgYVxtX0QGacrTcdJMdvZFRg98PFFxwUeJCTwf4TAsH0MPC4
         VVw4NG7BNgO1hZJRB+Rzd9EfM00EUE5+BzB10av20UNM0oEh7/2K90nKyi6raiD1MO3a
         dQH+YiB3UXox1qzy2GCzog3Zkq+dBrkiLzSgmEKKCcpJiR7NzH/DQ9b5dF8o39oLjJjS
         TfJXp5P3y2JOAU5ZZZfDRGk/IqJi21k2OWrZkTVEVqpIkAfjVdAm6oy1S3xsHp/3xVTg
         ndsg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=hy3JG1yB;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 69-v6si1919709pft.177.2018.11.07.13.34.09;
        Wed, 07 Nov 2018 13:34:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727633AbeKHHFx (ORCPT <rfc822;wanghaifine@gmail.com>
        + 99 others); Thu, 8 Nov 2018 02:05:53 -0500
Received: from mail.kernel.org ([198.145.29.99]:50230 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727364AbeKHHFx (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 02:05:53 -0500
Received: from mail-wm1-f41.google.com (mail-wm1-f41.google.com [209.85.128.41])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 63429214ED
        for <linux-kernel@vger.kernel.org>; Wed,  7 Nov 2018 21:33:38 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541626418;
        bh=hvLBQpJ2OwXKnAmpdMVYLj6GfhGWq9W9fxjGiXCAvJE=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=hy3JG1yBbo4AP9kEOWHEhb74PNmsQN6/3y6ONHnDu9iTujazePlXCP5Rt+6x1unyw
         1WSN9zFwut2woXHeOKAe/SG8Bk7N3trT+BpunucHHe8ASaCOBmvrUK8FSuerL1xpJz
         THcv5Q7koP6zvGQAIg0Ahzx/vMPijFiC6iqdDPII=
Received: by mail-wm1-f41.google.com with SMTP id t15-v6so9255221wmt.0
        for <linux-kernel@vger.kernel.org>; Wed, 07 Nov 2018 13:33:38 -0800 (PST)
X-Received: by 2002:a1c:2b45:: with SMTP id r66-v6mr1535101wmr.128.1541626416636;
 Wed, 07 Nov 2018 13:33:36 -0800 (PST)
MIME-Version: 1.0
References: <CAG48ez1+nGDbuBaKJVPAOzEwiBkXqHHs7vmyAqvbeM42r0nFHg@mail.gmail.com>
 <CALCETrXq1Kj=McxnPVjkscNq-b_7LeoFOdu7qKjHdvwcfFh9Og@mail.gmail.com>
 <1541518670.7839.31.camel@intel.com> <AF4A5C77-0A79-403F-A205-0F93B7CD6E26@amacapital.net>
 <1541524750.7839.51.camel@intel.com> <22596E35-F5D1-4935-86AB-B510DCA0FABE@amacapital.net>
 <c9659222-efc6-b73a-ce48-30be8bdc5397@intel.com> <CALCETrWBV=1JbAKYn2Jy2LxkGZQvKRtFRnrWUMoejrwQe73VHw@mail.gmail.com>
 <20181106231730.GR5150@brightrain.aerifal.cx> <20181106232616.GA11101@linux.intel.com>
 <20181107212758.GU5150@brightrain.aerifal.cx>
In-Reply-To: <20181107212758.GU5150@brightrain.aerifal.cx>
From: Andy Lutomirski <luto@kernel.org>
Date: Wed, 7 Nov 2018 13:33:24 -0800
X-Gmail-Original-Message-ID: <CALCETrUh4TkgTPjoaLaT-TjD9JuPhPrLbpGdB8C95R0a+rexww@mail.gmail.com>
Message-ID: <CALCETrUh4TkgTPjoaLaT-TjD9JuPhPrLbpGdB8C95R0a+rexww@mail.gmail.com>
Subject: Re: RFC: userspace exception fixups
To: Rich Felker <dalias@libc.org>
Cc: "Christopherson, Sean J" <sean.j.christopherson@intel.com>,
        Andrew Lutomirski <luto@kernel.org>,
        Dave Hansen <dave.hansen@intel.com>,
        Jann Horn <jannh@google.com>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Jethro Beekman <jethro@fortanix.com>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Florian Weimer <fweimer@redhat.com>,
        Linux API <linux-api@vger.kernel.org>, X86 ML <x86@kernel.org>,
        linux-arch <linux-arch@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Peter Zijlstra <peterz@infradead.org>, nhorman@redhat.com,
        npmccallum@redhat.com, "Ayoun, Serge" <serge.ayoun@intel.com>,
        shay.katz-zamir@intel.com, linux-sgx@vger.kernel.org,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "Carlos O'Donell" <carlos@redhat.com>,
        adhemerval.zanella@linaro.org
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB38ExhWuNbWGcZAA--.2143S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxuF43tF1rKFyDAr1kAFWkZwb_yoW5KFWxpF
	y5KF9FkF4ktF4fArZFvw1avFyrKa1xJw45XwnrZw1Yyr90va4SyF4DKF15CF18Ar4xAw12
	vFWjyFZruan5AaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6F4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07b5wZcU
	UUUU=

On Wed, Nov 7, 2018 at 1:28 PM Rich Felker <dalias@libc.org> wrote:
>
> On Tue, Nov 06, 2018 at 03:26:16PM -0800, Sean Christopherson wrote:
> > On Tue, Nov 06, 2018 at 06:17:30PM -0500, Rich Felker wrote:
> > > On Tue, Nov 06, 2018 at 11:02:11AM -0800, Andy Lutomirski wrote:
> > > > On Tue, Nov 6, 2018 at 10:41 AM Dave Hansen <dave.hansen@intel.com> wrote:
> > > > >
> > > > > On 11/6/18 10:20 AM, Andy Lutomirski wrote:
> > > > > > I almost feel like the right solution is to call into SGX on its own
> > > > > > private stack or maybe even its own private address space.
> > > > >
> > > > > Yeah, I had the same gut feeling.  Couldn't the debugger even treat the
> > > > > enclave like its own "thread" with its own stack and its own set of
> > > > > registers and context?  That seems like a much more workable model than
> > > > > trying to weave it together with the EENTER context.
> > > >
> > > > So maybe the API should be, roughly
> > > >
> > > > sgx_exit_reason_t sgx_enter_enclave(pointer_to_enclave, struct
> > > > host_state *state);
> > > > sgx_exit_reason_t sgx_resume_enclave(same args);
> > > >
> > > > where host_state is something like:
> > > >
> > > > struct host_state {
> > > >   unsigned long bp, sp, ax, bx, cx, dx, si, di;
> > > > };
> > > >
> > > > and the values in host_state explicitly have nothing to do with the
> > > > actual host registers.  So, if you want to use the outcall mechanism,
> > > > you'd allocate some memory, point sp to that memory, call
> > > > sgx_enter_enclave(), and then read that memory to do the outcall.
> > > >
> > > > Actually implementing this would be distinctly nontrivial, and would
> > > > almost certainly need some degree of kernel help to avoid an explosion
> > > > when a signal gets delivered while we have host_state.sp loaded into
> > > > the actual SP register.  Maybe rseq could help with this?
> > > >
> > > > The ISA here is IMO not well thought through.
> > >
> > > Maybe I'm mistaken about some fundamentals here, but my understanding
> > > of SGX is that the whole point is that the host application and the
> > > code running in the enclave are mutually adversarial towards one
> > > another. Do any or all of the proposed protocols here account for this
> > > and fully protect the host application from malicious code in the
> > > enclave? It seems that having control over the register file on exit
> > > from the enclave is fundamentally problematic but I assume there must
> > > be some way I'm missing that this is fixed up.
> >
> > SGX provides protections for the enclave but not the other way around.
> > The kernel has all of its normal non-SGX protections in place, but the
> > enclave can certainly wreak havoc on its userspace process.  The basic
> > design idea is that the enclave is a specialized .so that gets extra
> > security protections but is still effectively part of the overall
> > application, e.g. it has full access to its host userspace process'
> > virtual memory.
>
> In that case it seems like the only way to use SGX that's not a gaping
> security hole is to run the SGX enclave in its own fully-seccomp (or
> equivalent) process, with no host application in the same address
> space. Since the host application can't see the contents of the
> enclave to make any determination of whether it's safe to run, running
> it in the same address space only makes sense if the cpu provides
> protection against unwanted accesses to the host's memory from the
> enclave -- and according to you, it doesn't.
>

I think the theory is that the enclave is shipped with the host application.

That being said, a way to run the enclave in an address space that has
basically nothing else (except an ENCLU instruction as a trampoline)
would be quite nice.
