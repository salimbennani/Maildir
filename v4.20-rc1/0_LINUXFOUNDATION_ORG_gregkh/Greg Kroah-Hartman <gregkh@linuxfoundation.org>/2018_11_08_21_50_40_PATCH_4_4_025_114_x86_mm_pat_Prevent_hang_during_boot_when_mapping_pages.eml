Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:38:28 -0000
Received: from icoremail.net (unknown [209.85.214.171])
	by mail-app2 (Coremail) with SMTP id by_KCgC3fyXvseRbuOBiAQ--.30026S3;
	Fri, 09 Nov 2018 06:00:16 +0800 (CST)
Received: from mail-pl1-f171.google.com (unknown [209.85.214.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3WkbsseRbFtkeAA--.2427S3;
	Fri, 09 Nov 2018 06:00:13 +0800 (CST)
Received: by mail-pl1-f171.google.com with SMTP id w22-v6so6848758plk.0
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 14:00:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=4KWa5mShE2RYmt8bjRwpWtqLyHgP2/w3M6f4X4tWrws=;
        b=CzP3sWFVjFYiScV4irLayg7yaBCGpkbssT2ycu6Xt12aeyW/dHuBhuF6WMeeKEcT0d
         XZLldP2a8BG+L68cEZ+fz7syeq0Le/rpRAZbYcoILYPB/vPLxxivLpcEOjvNKp20XSV2
         O4zPLtZdY+dRoOADmE7dBadVDYHFIK59JjouhFpB4e1Xuq061/yKnfuUBgG6PSyXOoZX
         bXpMV6ZRfDVZoh0DW+AvsRqn+SWzPGfMHHK9M8rKPFu5LrUB1IvoZrWwwwx7CEZoT5d0
         zOBMfsHPW+ncqfFBSO6eT3l/A4DPrwLDGb6ilDRaQtMAh3Vk0FiPjWlGMP622MHcVEIx
         C1Tw==
X-Gm-Message-State: AGRZ1gIstG78m5O7xfHRSxMOZt1tm9uLnUw1RbFud9hEFyy1ZmaNIs+K
	Q23YpfRvNxKheexURejZrffYkEhi+9qxoXtSQSzejuKqs1W83oqtEQ==
X-Received: by 2002:a17:902:6686:: with SMTP id e6-v6mr6199416plk.173.1541714412597;
        Thu, 08 Nov 2018 14:00:12 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp779061pjt;
        Thu, 8 Nov 2018 14:00:11 -0800 (PST)
X-Google-Smtp-Source: AJdET5fPVl0tsXbBELXFUYQlAEhX+b4RNOcf6+Ei+eavUM9UTxqP2DPjSBcTHd4iWr4JyHmkddux
X-Received: by 2002:a62:f541:: with SMTP id n62-v6mr6271883pfh.59.1541714411891;
        Thu, 08 Nov 2018 14:00:11 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541714411; cv=none;
        d=google.com; s=arc-20160816;
        b=L92DoK/VgPQYFmLlN5r6BxLQXA2E6LQ+DDq6t7Sar2dF5hOf0iAJxrM+mG4i2y4q+r
         GE8G3pEpfe29Y3pKlP43OZEVewu6siSvowjB9+mXwaaCSiISXkps9msEnV6KbQTNSJZ1
         OozcHxXplUFNB2f3+VuWmDrbwPmUTc20IZxkAmSaIGC/UFhg4xj1GpEsNc7fnR9kVKsY
         h2qE/LFpXIVtuFisz/+jbeTTCjFhyGtM47mBK2KIRebELOq9EnM+Y3T6kwf+JgmSUCJT
         QEv0QLYqpFR/7ZKNmnyvYBebPDVLG6sQn8sCqKSyISZ79hy9Dl7K2wc7X0KXVP6h0oh7
         r/7A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=4KWa5mShE2RYmt8bjRwpWtqLyHgP2/w3M6f4X4tWrws=;
        b=FBeLUQM+VdWbsKquNfCAJP1SqeoWWlZpkjOrVdOGCu811i6h6J3CHSMjeifiZZiqEu
         J/ddFo8WSMy1kY2Cz585OwzmWgjZ/CMFVZ2Hkn/UGA9asXsXBgjsQAdJ3wiLx9T6aXwP
         kzPIlmPc1iT8X7f/D0OnNMl1XeEZ3ljPjkxi80quSBbdcljMS7BsW2XmxIbL8c/Gi2ca
         Jn3iLEjVnWHCzaomwgDf8uRG3EFh9AuphcHE1iDXFBEAb2tAi7zl8SYMcwysYctIwuNs
         ynwObsUT9xxDAAPSNL6+TKBQh9QYg346ZnhgWuKMs/PQHL2WTgT0twMyz/ZgNTYssakv
         cujg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=Kjs69boJ;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id bg12-v6si5357988plb.319.2018.11.08.13.59.57;
        Thu, 08 Nov 2018 14:00:11 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729900AbeKIHgb (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 02:36:31 -0500
Received: from mail.kernel.org ([198.145.29.99]:54046 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729261AbeKIHgb (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 02:36:31 -0500
Received: from localhost (unknown [208.72.13.198])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 5C4C820818;
        Thu,  8 Nov 2018 21:59:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541714342;
        bh=UIf7AzYqLiq8H0MOc8czjaVvqWU/7o+lM8RoXQt9TBs=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=Kjs69boJPvAJY/79s3OMMYYJwVKMbb2sXYJXFSrKLfZTbGKs9sWylP5HUkOrURdvT
         Jbhb95vJc4ngt/Hy8o39upiuFuEhAmR/fc20Sby62nvQe3G0l7IyFoSKU8jJ+WCUzY
         njNmzgref6Y/z3OENIUW4i/r+k7Hb6GK/0snKzxk=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Waiman Long <waiman.long@hpe.com>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Borislav Petkov <bp@alien8.de>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Theodore Tso <tytso@mit.edu>, Arnd Bergmann <arnd@arndb.de>,
        Scott J Norton <scott.norton@hpe.com>,
        Douglas Hatch <doug.hatch@hpe.com>,
        Matt Fleming <matt@codeblueprint.co.uk>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.4 025/114] x86/mm/pat: Prevent hang during boot when mapping pages
Date: Thu,  8 Nov 2018 13:50:40 -0800
Message-Id: <20181108215101.398014379@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181108215059.051093652@linuxfoundation.org>
References: <20181108215059.051093652@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3WkbsseRbFtkeAA--.2427S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZryDtr4fKFW3KFWUtry8Grg_yoW5KF43pF
	sxCas5Ar48Gayayr92kFy09r1xWF1kAF4UGr9rG34rAr43X34jyFy0vw1093WUCa4kCr45
	AFZIqF98uw4qvFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW3MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW7JVWDJwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26F4j6r4UJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCY
	IxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7I
	UOCQ6tUUUUU==

4.4-stable review patch.  If anyone has any objections, please let me know.

------------------

[ Upstream commit e535ec0899d1fe52ec3a84c9bc03457ac67ad6f7 ]

There's a mixture of signed 32-bit and unsigned 32-bit and 64-bit data
types used for keeping track of how many pages have been mapped.

This leads to hangs during boot when mapping large numbers of pages
(multiple terabytes, as reported by Waiman) because those values are
interpreted as being negative.

commit 742563777e8d ("x86/mm/pat: Avoid truncation when converting
cpa->numpages to address") fixed one of those bugs, but there is
another lurking in __change_page_attr_set_clr().

Additionally, the return value type for the populate_*() functions can
return negative values when a large number of pages have been mapped,
triggering the error paths even though no error occurred.

Consistently use 64-bit types on 64-bit platforms when counting pages.
Even in the signed case this gives us room for regions 8PiB
(pebibytes) in size whilst still allowing the usual negative value
error checking idiom.

Reported-by: Waiman Long <waiman.long@hpe.com>
Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
CC: Theodore Ts'o <tytso@mit.edu>
Cc: Arnd Bergmann <arnd@arndb.de>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: Scott J Norton <scott.norton@hpe.com>
Cc: Douglas Hatch <doug.hatch@hpe.com>
Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 arch/x86/mm/pageattr.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/arch/x86/mm/pageattr.c b/arch/x86/mm/pageattr.c
index 0e1dd7d47f05..26598e08666c 100644
--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -955,11 +955,11 @@ static void populate_pte(struct cpa_data *cpa,
 	}
 }
 
-static int populate_pmd(struct cpa_data *cpa,
-			unsigned long start, unsigned long end,
-			unsigned num_pages, pud_t *pud, pgprot_t pgprot)
+static long populate_pmd(struct cpa_data *cpa,
+			 unsigned long start, unsigned long end,
+			 unsigned num_pages, pud_t *pud, pgprot_t pgprot)
 {
-	unsigned int cur_pages = 0;
+	long cur_pages = 0;
 	pmd_t *pmd;
 	pgprot_t pmd_pgprot;
 
@@ -1029,12 +1029,12 @@ static int populate_pmd(struct cpa_data *cpa,
 	return num_pages;
 }
 
-static int populate_pud(struct cpa_data *cpa, unsigned long start, pgd_t *pgd,
-			pgprot_t pgprot)
+static long populate_pud(struct cpa_data *cpa, unsigned long start, pgd_t *pgd,
+			 pgprot_t pgprot)
 {
 	pud_t *pud;
 	unsigned long end;
-	int cur_pages = 0;
+	long cur_pages = 0;
 	pgprot_t pud_pgprot;
 
 	end = start + (cpa->numpages << PAGE_SHIFT);
@@ -1090,7 +1090,7 @@ static int populate_pud(struct cpa_data *cpa, unsigned long start, pgd_t *pgd,
 
 	/* Map trailing leftover */
 	if (start < end) {
-		int tmp;
+		long tmp;
 
 		pud = pud_offset(pgd, start);
 		if (pud_none(*pud))
@@ -1116,7 +1116,7 @@ static int populate_pgd(struct cpa_data *cpa, unsigned long addr)
 	pgprot_t pgprot = __pgprot(_KERNPG_TABLE);
 	pud_t *pud = NULL;	/* shut up gcc */
 	pgd_t *pgd_entry;
-	int ret;
+	long ret;
 
 	pgd_entry = cpa->pgd + pgd_index(addr);
 
@@ -1351,7 +1351,8 @@ static int cpa_process_alias(struct cpa_data *cpa)
 
 static int __change_page_attr_set_clr(struct cpa_data *cpa, int checkalias)
 {
-	int ret, numpages = cpa->numpages;
+	unsigned long numpages = cpa->numpages;
+	int ret;
 
 	while (numpages) {
 		/*
-- 
2.17.1


