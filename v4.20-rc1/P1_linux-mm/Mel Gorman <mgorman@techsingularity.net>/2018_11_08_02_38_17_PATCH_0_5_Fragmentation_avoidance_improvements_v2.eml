Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 00:33:41 -0000
Received: from icoremail.net (unknown [209.85.214.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv+7MMeNbwvlZAQ--.27166S3;
	Thu, 08 Nov 2018 02:41:16 +0800 (CST)
Received: from mail-pl1-f177.google.com (unknown [209.85.214.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXbDjIMeNbN98YAA--.277S3;
	Thu, 08 Nov 2018 02:41:12 +0800 (CST)
Received: by mail-pl1-f177.google.com with SMTP id b5-v6so8248343pla.6
        for <xuliker@zju.edu.cn>; Wed, 07 Nov 2018 10:41:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=4oIkn0Ik2FrjVD3GPq9bHlS22fJ4h4h+AwDHVEd91fU=;
        b=MbLNVuuS+xEeR1MaN63Pa9W78ZUu07mNiUs1QI5/neF9cL10rmYXAhOvMPtgq7Kq0g
         i6Vhl71a14hd6Fbd4Wz6JMpIExqjqqbv94tmOjl8PatueN6S3r4g1AXJp8YILuxYtN7S
         wPB+GEdS807Xa6BnuKcwDRqnS3z38DXo+bsTLkLClrrFxRiOuI1CwFZ8dgn2qMRLCCoe
         uSWuQnJumGtqytKkWwqFY7Aa9OX14U26BSFXeBexkCicA39lAeXvmiAOa4bCGIQMKc7Y
         cKEz75eARRsivWGhPW090xjFimOv0tau2TXoAho1us+T43o34ceL0anq7SyB1/9RCPrH
         bVzg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJwMvnLiaGZI5IeqvSaF5gfRIuCQt4SjKCG7vwttAU+0lox4C1c
	paEWs9N5+WJkD6MWKVn3MyMGZwmr6xngH3J0RYVB78yRiGEAJ0Rn4g==
X-Received: by 2002:a17:902:6686:: with SMTP id e6-v6mr1323878plk.173.1541616072280;
        Wed, 07 Nov 2018 10:41:12 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5598873pjt;
        Wed, 7 Nov 2018 10:41:11 -0800 (PST)
X-Google-Smtp-Source: AJdET5cyJa942RIei1EUbKzJ2oC5ZdostGbXH31BxvjuGSgk2LWCPR7NpGnkdyfqiPvyQXCOAb1Q
X-Received: by 2002:a63:1b1f:: with SMTP id b31mr1147705pgb.66.1541616071495;
        Wed, 07 Nov 2018 10:41:11 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541616071; cv=none;
        d=google.com; s=arc-20160816;
        b=CjHIr7pyKDQuirepI4Qb9Hp6wxTJZZY8+8rvpgSlKdnhVhq/5QqwGRy221uJYH6TYa
         4kLHukQcJN3u43/9122R/Jtza06+fGYmiRFmQwDOkWhTElfF/irTVOTkPS20pJmFgII4
         0NQ/Pix4GibnNY2Xi551AuTlggYpvmIQrn07RqTpMgmy5AhdD9H7cQzvN6yzt3Jsdi8Q
         XBCkR0yyjTzuvZffiwD4P16PTLNzHcpxa8Abh9/+EEzK6yy13dSE+TxDDYNjwCy57c9K
         PO98Z+LX/Q1sxkP8GMuu5h9ylgd5nHVFAAXpzNc/KJjnxNysgJ2wMHTGBMfqwwmu5sm/
         UGtw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=4oIkn0Ik2FrjVD3GPq9bHlS22fJ4h4h+AwDHVEd91fU=;
        b=Nsbtv1ts8WTboHhXCi1x5nFIofZx42fakgDEeEeg6UUZXN/VQw7Tl1K+S5X+cB/4/b
         93OYWzgXiH7G8x96U8cuNV4lyGnXYKRcu0gQdojRPV3KXRfEYboznCpUETK3tuBc38kg
         lOAnEDhW70H6ZL6sCG+x3Jyd2/MdMeannKx2qxnuhQy2HSf0OMLCfnLbTrQRGr1B0VbR
         +zQ9z+Ksjm0Pt//8FwLluR/ndnnXBnEJLp6SPz/JRqYpPpyppMnqIIHCFOd0+M9MAUXM
         g8Gr+yF4YwywEcrPkqDmmTJgXQnSBilgfa/oi7YZx2xZkklZVXTLMgXT+E0kUSetMAn9
         qi7g==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g13si1201146pgk.165.2018.11.07.10.40.52;
        Wed, 07 Nov 2018 10:41:11 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728299AbeKHEKD (ORCPT <rfc822;wanghaifine@gmail.com>
        + 99 others); Wed, 7 Nov 2018 23:10:03 -0500
Received: from outbound-smtp11.blacknight.com ([46.22.139.106]:44750 "EHLO
        outbound-smtp11.blacknight.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726335AbeKHEKC (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 7 Nov 2018 23:10:02 -0500
Received: from mail.blacknight.com (pemlinmail06.blacknight.ie [81.17.255.152])
        by outbound-smtp11.blacknight.com (Postfix) with ESMTPS id 6A7F91C20FB
        for <linux-kernel@vger.kernel.org>; Wed,  7 Nov 2018 18:38:23 +0000 (GMT)
Received: (qmail 19783 invoked from network); 7 Nov 2018 18:38:23 -0000
Received: from unknown (HELO stampy.163woodhaven.lan) (mgorman@techsingularity.net@[37.228.229.69])
  by 81.17.254.9 with ESMTPA; 7 Nov 2018 18:38:23 -0000
From: Mel Gorman <mgorman@techsingularity.net>
To: Linux-MM <linux-mm@kvack.org>
Cc: Andrew Morton <akpm@linux-foundation.org>,
        Vlastimil Babka <vbabka@suse.cz>,
        David Rientjes <rientjes@google.com>,
        Andrea Arcangeli <aarcange@redhat.com>,
        Zi Yan <zi.yan@cs.rutgers.edu>,
        LKML <linux-kernel@vger.kernel.org>,
        Mel Gorman <mgorman@techsingularity.net>
Subject: [PATCH 0/5] Fragmentation avoidance improvements v2
Date: Wed,  7 Nov 2018 18:38:17 +0000
Message-Id: <20181107183822.15567-1-mgorman@techsingularity.net>
X-Mailer: git-send-email 2.16.4
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXbDjIMeNbN98YAA--.277S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3AFWruw1UGF18GF45Ar18Krg_yoW7uw4kpF
	WrKr15KFs5J3WI9r93Zw4xWw1fCa1xGFWUXr1agry0y3ZxuFn3tFZ3tF1jyF1UArs3A3Wj
	qrWYya4UCrZrZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	JrI_JrylYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x
	0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik267vv6cIUMxkFs20EY4vE
	44CYbxCE4x80FwCY02Avz4vEIxC_XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcV
	AFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAF
	wI0_Gr1j6F4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI4
	8JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4U
	MI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67
	AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2
	KfnxnUUI43ZEXa7IUOZXoDUUUUU==

The 1-socket machine is different to the one used in v1 so some of the
results are changed on that basis. The baseline has changed to 4.20-rc1 so
the __GFP_THISNODE removal for THP is in effect which alters the behaviour
on 2-socket in particular.  The biggest changes are in the fourth patch,
both in terms of functional changes and the fact it adds a vmstat and
tracepoint for measuring stall latency.

Changelog since v1
o Rebase to v4.20-rc1 for the THP __GFP_THISNODE patch in particular
o Add tracepoint to record fragmentation stall durations
o Add vmstat event to record that a fragmentation stall occurred
o Stalls now alter watermark boosting
o Stalls occur only when the allocation is about to fail

It has been noted before that fragmentation avoidance (aka
anti-fragmentation) is not perfect. Given sufficient time or an adverse
workload, memory gets fragmented and the long-term success of high-order
allocations degrades. This series defines an adverse workload, a definition
of external fragmentation events (including serious) ones and a series
that reduces the level of those fragmentation events.

The details of the workload and the consequences are described in more
detail in the changelogs. However, from patch 1, this is a high-level
summary of the adverse workload. The exact details are found in the
mmtests implementation.

The broad details of the workload are as follows;

1. Create an XFS filesystem (not specified in the configuration but done
   as part of the testing for this patch)
2. Start 4 fio threads that write a number of 64K files inefficiently.
   Inefficiently means that files are created on first access and not
   created in advance (fio parameterr create_on_open=1) and fallocate
   is not used (fallocate=none). With multiple IO issuers this creates
   a mix of slab and page cache allocations over time. The total size
   of the files is 150% physical memory so that the slabs and page cache
   pages get mixed
3. Warm up a number of fio read-only threads accessing the same files
   created in step 2. This part runs for the same length of time it
   took to create the files. It'll fault back in old data and further
   interleave slab and page cache allocations. As it's now low on
   memory due to step 2, fragmentation occurs as pageblocks get
   stolen.
4. While step 3 is still running, start a process that tries to allocate
   75% of memory as huge pages with a number of threads. The number of
   threads is based on a (NR_CPUS_SOCKET - NR_FIO_THREADS)/4 to avoid THP
   threads contending with fio, any other threads or forcing cross-NUMA
   scheduling. Note that the test has not been used on a machine with less
   than 8 cores. The benchmark records whether huge pages were allocated
   and what the fault latency was in microseconds
5. Measure the number of events potentially causing external fragmentation,
   the fault latency and the huge page allocation success rate.
6. Cleanup

Overall the series reduces external fragmentation causing events by over 95%
on 1 and 2 socket machines, which in turn impacts high-order allocation
success rates over the long term. There are differences in latencies and
high-order allocation success rates. Latencies are a mixed bag as they
are vulnerable to exact system state and whether allocations succeeded so
they are treated as a secondary metric.

Patch 1 uses lower zones if they are populated and have free memory
	instead of fragmenting a higher zone. It's special cased to
	handle a Normal->DMA32 fallback with the reasons explained
	in the changelog.

Patch 2+3 boosts watermarks temporarily when an external fragmentation
	event occurs. kswapd wakes to reclaim a small amount of old memory
	and then wakes kcompactd on completion to recover the system
	slightly. This introduces some overhead in the slowpath. The level
	of boosting can be tuned or disabled depending on the tolerance
	for fragmentation vs allocation latency.

Patch 4 is more heavy handed. In the event of a movable allocation
	request that can stall, it'll wake kswapd as in patch 3.  However,
	if the expected fragmentation event is serious then the request
	will stall briefly on pfmemalloc_wait until kswapd completes
	light reclaim work and retry the allocation without stalling.
	This can avoid the fragmentation event entirely in some cases.
	The definition of a serious fragmentation event can be tuned
	or disabled.

Patch 5 is the hardest to prove it's a real benefit. In the event
	that fragmentation was unavoidable, it'll queue a pageblock for
	kcompactd to clean. It's a fixed-length queue that is neither
	guaranteed to have a slot available or successfully clean a
	pageblock.

Patches 4 and 5 can be treated independently or dropped if necessary. This
is particularly true of patch 5 as the benefit is difficult to detect
given the impact of the first 4 patches. The bulk of the improvement
in fragmentation avoidance is from patches 1-3 (94-97% reduction in
fragmentation events for an adverse workload on both a 1-socket and
2-socket machine). The primary benefit of patch 4 is the increase in
THP success rates and the fact it reduces fragmentation events to almost
negligible levels with the option of eliminating them.

 Documentation/sysctl/vm.txt       |  42 +++++++
 include/linux/compaction.h        |   4 +
 include/linux/migrate.h           |   7 +-
 include/linux/mm.h                |   2 +
 include/linux/mmzone.h            |  18 ++-
 include/linux/vm_event_item.h     |   1 +
 include/trace/events/compaction.h |  62 ++++++++++
 include/trace/events/kmem.h       |  21 ++++
 kernel/sysctl.c                   |  18 +++
 mm/compaction.c                   | 147 +++++++++++++++++++++--
 mm/internal.h                     |  14 ++-
 mm/migrate.c                      |   6 +-
 mm/page_alloc.c                   | 246 ++++++++++++++++++++++++++++++++++----
 mm/vmscan.c                       | 123 +++++++++++++++++--
 mm/vmstat.c                       |   1 +
 15 files changed, 661 insertions(+), 51 deletions(-)

-- 
2.16.4
