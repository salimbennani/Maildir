Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 10:27:43 -0000
Received: from icoremail.net (unknown [209.85.210.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwrTuONbGChdAQ--.28071S3;
	Thu, 08 Nov 2018 12:17:24 +0800 (CST)
Received: from mail-pf1-f179.google.com (unknown [209.85.210.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH6EPPuONbS80aAA--.2608S3;
	Thu, 08 Nov 2018 12:17:19 +0800 (CST)
Received: by mail-pf1-f179.google.com with SMTP id j13-v6so8702809pff.11
        for <xuliker@zju.edu.cn>; Wed, 07 Nov 2018 20:17:19 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:mime-version:content-transfer-encoding:sender
         :precedence:list-id;
        bh=rejq7LmihrIkw26wPVewmdmud8245PyIvhfHBhBGcY4=;
        b=gNoDUDjWjIv0qIaGzkNVy8wrSLBaQf0Ln9h/AoKgpw4hkLEgQJH/21rj/2gYjOACsG
         0BnFY34OEew/tI0pOb1gWN+kUP1SmegBVZbPJTA5E8+1+eAHDccSZbfqaCuaCrE7ZHYN
         PThKegNyjT2fAjyAxRrMUDTH6AfRleryrFVAqr4aZcSiAUiV+5KWN0WyyX+kyXm8AFgO
         5cFrYTVRmiBsV8KOzBykuzcGmygr6oDN2yxJd+5b25wWSjRpdoljSJqnHDQniqwzb4Mh
         MpI4WQQTiFOWxqOEJccVTim12xjzhYMAtwP1+3dijEPTJRdUqetOFvujHWXUCwtMHya8
         z6+A==
X-Gm-Message-State: AGRZ1gJhATjC/3xTf9k6XP+FoSJ0hwR/zN3MGv/6kCeTLwbZyiNKEyDk
	HMWmz1Av3E7JY+qt0otL88QUccBlZGExk0x16zhy9JinwlkSamamqg==
X-Received: by 2002:a65:66ce:: with SMTP id c14mr2573928pgw.450.1541650639424;
        Wed, 07 Nov 2018 20:17:19 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp59857pjt;
        Wed, 7 Nov 2018 20:17:18 -0800 (PST)
X-Google-Smtp-Source: AJdET5cWplxMfXEK/otjWuxrpxz4oRvOXAiZEHxzynXaQ5OGc3MrO6R4LCpHVCxq3iVXWxAibkeO
X-Received: by 2002:a63:b105:: with SMTP id r5mr2601016pgf.442.1541650638536;
        Wed, 07 Nov 2018 20:17:18 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541650638; cv=none;
        d=google.com; s=arc-20160816;
        b=Jhlno1UF8Xqpc8XSiR8+NudHVmo/sDt6tXERKxk/psxJOPR7wUMdey3/MdBwwx096H
         svpgEx/TS7swqqE8gC9ZpRsYOUgbq9BKLYtm1vSVxE5EMyUvmwj910MdwTTcpl+UCDid
         z+xVFdb7uTvrRhATydKJzY7gCaJh2R99xuVdvqGzMPiLC9HtWkv98hP7EfHJOvb4L3gR
         zpqL8BuMhewynRnOO9rfPwZ8eA3CB1DChCiXkUjwUEXjH+vt5whyVC7b2A48zvCkyro+
         Jw7rzae9AjLklGVIotlXd0yrKQcz2B1WP5BeTFb40dgPA9KSSd835ZA6BoA46JpayQSL
         OdVQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :message-id:date:subject:cc:to:from:dkim-signature;
        bh=rejq7LmihrIkw26wPVewmdmud8245PyIvhfHBhBGcY4=;
        b=USZfCZ4li4IhjM6g4471JeZcxmdk07zWdz0ylKs8JGpJCHWG6VNMf/t8AoCBc8//My
         gW/sBiqhUeNlA8fsVvuD7DKAvPjYKUqS2SwQ7iId7b+eYMLMXRamTr07fPlKjnop3Ic/
         aPw+dzG+UbQveRpJbzEzchclI3trtewky7HkXG2VX1LbcKROLQre9Z9hl7Jj1nzz2s8F
         +1aDQutKH8WGP3zbZDdgiREimNwd2j8+ZKXPOMnGcAAK5zPkRXoyytqv51ef8knfSErK
         Dv54QVv2KqAlt3/yIA2L4t8nHgGEeSsYI42IpY++e1PK1pIqxews/wBOE70u9t6Yoco1
         h0jQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@joelfernandes.org header.s=google header.b="gb/zI8jn";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p64-v6si3107849pfg.45.2018.11.07.20.17.03;
        Wed, 07 Nov 2018 20:17:18 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728841AbeKHNts (ORCPT <rfc822;contactsinghsiddharth@gmail.com>
        + 99 others); Thu, 8 Nov 2018 08:49:48 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:43210 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728499AbeKHNts (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 08:49:48 -0500
Received: by mail-pg1-f195.google.com with SMTP id n10-v6so8274135pgv.10
        for <linux-kernel@vger.kernel.org>; Wed, 07 Nov 2018 20:16:16 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=joelfernandes.org; s=google;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=rejq7LmihrIkw26wPVewmdmud8245PyIvhfHBhBGcY4=;
        b=gb/zI8jn7yj5GmpysxQwQye6ddW7cDF5cBy0i2sbmP6ZtFhHNPaNk7dX+fmGWKO4QG
         Nifv0423MABZZ+S9shRolD/bP7YuX8sn36OnH0BknRuSrvNmMQZWGZi5yrFhGbftgHMZ
         z2wM5VgQWijeOXN3rztBDEinsgcxPS7FGODNw=
X-Received: by 2002:a63:9e0a:: with SMTP id s10mr2592012pgd.239.1541650575402;
        Wed, 07 Nov 2018 20:16:15 -0800 (PST)
Received: from joelaf.mtv.corp.google.com ([2620:0:1000:1601:3aef:314f:b9ea:889f])
        by smtp.gmail.com with ESMTPSA id t77-v6sm3161096pfj.79.2018.11.07.20.16.13
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 07 Nov 2018 20:16:14 -0800 (PST)
From: "Joel Fernandes (Google)" <joel@joelfernandes.org>
To: linux-kernel@vger.kernel.org
Cc: "Joel Fernandes (Google)" <joel@joelfernandes.org>,
        jreck@google.com, john.stultz@linaro.org, tkjos@google.com,
        gregkh@linuxfoundation.org, hch@infradead.org,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>, dancol@google.com,
        "J. Bruce Fields" <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>,
        Lei Yang <Lei.Yang@windriver.com>,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        linux-mm@kvack.org,
        =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
        Mike Kravetz <mike.kravetz@oracle.com>, minchan@kernel.org,
        Shuah Khan <shuah@kernel.org>, valdis.kletnieks@vt.edu
Subject: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
Date: Wed,  7 Nov 2018 20:15:36 -0800
Message-Id: <20181108041537.39694-1-joel@joelfernandes.org>
X-Mailer: git-send-email 2.19.1.930.g4563a0d9d0-goog
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH6EPPuONbS80aAA--.2608S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3WrWrGw1kGryDJr4DKr4rXwb_yoW7tFyxpF
	9rGayFkr4UtF4F9r97Cr4xZryrZr4xtr17K3sxWr4j9F15tF4FvanYgFyj9FyrGrs7X3Wj
	qa15GrySka1qy3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW8XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_JF4lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI
	42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bp
	TmDUUUUU=

Android uses ashmem for sharing memory regions. We are looking forward
to migrating all usecases of ashmem to memfd so that we can possibly
remove the ashmem driver in the future from staging while also
benefiting from using memfd and contributing to it. Note staging drivers
are also not ABI and generally can be removed at anytime.

One of the main usecases Android has is the ability to create a region
and mmap it as writeable, then add protection against making any
"future" writes while keeping the existing already mmap'ed
writeable-region active.  This allows us to implement a usecase where
receivers of the shared memory buffer can get a read-only view, while
the sender continues to write to the buffer.
See CursorWindow documentation in Android for more details:
https://developer.android.com/reference/android/database/CursorWindow

This usecase cannot be implemented with the existing F_SEAL_WRITE seal.
To support the usecase, this patch adds a new F_SEAL_FUTURE_WRITE seal
which prevents any future mmap and write syscalls from succeeding while
keeping the existing mmap active. The following program shows the seal
working in action:

 #include <stdio.h>
 #include <errno.h>
 #include <sys/mman.h>
 #include <linux/memfd.h>
 #include <linux/fcntl.h>
 #include <asm/unistd.h>
 #include <unistd.h>
 #define F_SEAL_FUTURE_WRITE 0x0010
 #define REGION_SIZE (5 * 1024 * 1024)

int memfd_create_region(const char *name, size_t size)
{
    int ret;
    int fd = syscall(__NR_memfd_create, name, MFD_ALLOW_SEALING);
    if (fd < 0) return fd;
    ret = ftruncate(fd, size);
    if (ret < 0) { close(fd); return ret; }
    return fd;
}

int main() {
    int ret, fd;
    void *addr, *addr2, *addr3, *addr1;
    ret = memfd_create_region("test_region", REGION_SIZE);
    printf("ret=%d\n", ret);
    fd = ret;

    // Create map
    addr = mmap(0, REGION_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
    if (addr == MAP_FAILED)
	    printf("map 0 failed\n");
    else
	    printf("map 0 passed\n");

    if ((ret = write(fd, "test", 4)) != 4)
	    printf("write failed even though no future-write seal "
		   "(ret=%d errno =%d)\n", ret, errno);
    else
	    printf("write passed\n");

    addr1 = mmap(0, REGION_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
    if (addr1 == MAP_FAILED)
	    perror("map 1 prot-write failed even though no seal\n");
    else
	    printf("map 1 prot-write passed as expected\n");

    ret = fcntl(fd, F_ADD_SEALS, F_SEAL_FUTURE_WRITE |
				 F_SEAL_GROW |
				 F_SEAL_SHRINK);
    if (ret == -1)
	    printf("fcntl failed, errno: %d\n", errno);
    else
	    printf("future-write seal now active\n");

    if ((ret = write(fd, "test", 4)) != 4)
	    printf("write failed as expected due to future-write seal\n");
    else
	    printf("write passed (unexpected)\n");

    addr2 = mmap(0, REGION_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
    if (addr2 == MAP_FAILED)
	    perror("map 2 prot-write failed as expected due to seal\n");
    else
	    printf("map 2 passed\n");

    addr3 = mmap(0, REGION_SIZE, PROT_READ, MAP_SHARED, fd, 0);
    if (addr3 == MAP_FAILED)
	    perror("map 3 failed\n");
    else
	    printf("map 3 prot-read passed as expected\n");
}

The output of running this program is as follows:
ret=3
map 0 passed
write passed
map 1 prot-write passed as expected
future-write seal now active
write failed as expected due to future-write seal
map 2 prot-write failed as expected due to seal
: Permission denied
map 3 prot-read passed as expected

Cc: jreck@google.com
Cc: john.stultz@linaro.org
Cc: tkjos@google.com
Cc: gregkh@linuxfoundation.org
Cc: hch@infradead.org
Reviewed-by: John Stultz <john.stultz@linaro.org>
Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
---
v1->v2: No change, just added selftests to the series. manpages are
ready and I'll submit them once the patches are accepted.

v2->v3: Updated commit message to have more support code (John Stultz)
 	Renamed seal from F_SEAL_FS_WRITE to F_SEAL_FUTURE_WRITE
						(Christoph Hellwig)
	Allow for this seal only if grow/shrink seals are also
	either previous set, or are requested along with this seal.
						(Christoph Hellwig)
	Added locking to synchronize access to file->f_mode.
						(Christoph Hellwig)

 include/uapi/linux/fcntl.h |  1 +
 mm/memfd.c                 | 22 +++++++++++++++++++++-
 2 files changed, 22 insertions(+), 1 deletion(-)

diff --git a/include/uapi/linux/fcntl.h b/include/uapi/linux/fcntl.h
index 6448cdd9a350..a2f8658f1c55 100644
--- a/include/uapi/linux/fcntl.h
+++ b/include/uapi/linux/fcntl.h
@@ -41,6 +41,7 @@
 #define F_SEAL_SHRINK	0x0002	/* prevent file from shrinking */
 #define F_SEAL_GROW	0x0004	/* prevent file from growing */
 #define F_SEAL_WRITE	0x0008	/* prevent writes */
+#define F_SEAL_FUTURE_WRITE	0x0010  /* prevent future writes while mapped */
 /* (1U << 31) is reserved for signed error codes */
 
 /*
diff --git a/mm/memfd.c b/mm/memfd.c
index 2bb5e257080e..5ba9804e9515 100644
--- a/mm/memfd.c
+++ b/mm/memfd.c
@@ -150,7 +150,8 @@ static unsigned int *memfd_file_seals_ptr(struct file *file)
 #define F_ALL_SEALS (F_SEAL_SEAL | \
 		     F_SEAL_SHRINK | \
 		     F_SEAL_GROW | \
-		     F_SEAL_WRITE)
+		     F_SEAL_WRITE | \
+		     F_SEAL_FUTURE_WRITE)
 
 static int memfd_add_seals(struct file *file, unsigned int seals)
 {
@@ -219,6 +220,25 @@ static int memfd_add_seals(struct file *file, unsigned int seals)
 		}
 	}
 
+	if ((seals & F_SEAL_FUTURE_WRITE) &&
+	    !(*file_seals & F_SEAL_FUTURE_WRITE)) {
+		/*
+		 * The FUTURE_WRITE seal also prevents growing and shrinking
+		 * so we need them to be already set, or requested now.
+		 */
+		int test_seals = (seals | *file_seals) &
+				 (F_SEAL_GROW | F_SEAL_SHRINK);
+
+		if (test_seals != (F_SEAL_GROW | F_SEAL_SHRINK)) {
+			error = -EINVAL;
+			goto unlock;
+		}
+
+		spin_lock(&file->f_lock);
+		file->f_mode &= ~(FMODE_WRITE | FMODE_PWRITE);
+		spin_unlock(&file->f_lock);
+	}
+
 	*file_seals |= seals;
 	error = 0;
 
-- 
2.19.1.930.g4563a0d9d0-goog
