Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:38:42 -0000
Received: from icoremail.net (unknown [209.85.210.173])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f9HAs+Rb9OpiAQ--.29804S3;
	Fri, 09 Nov 2018 06:08:01 +0800 (CST)
Received: from mail-pf1-f173.google.com (unknown [209.85.210.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3WES+s+Rb+d4eAA--.6242S3;
	Fri, 09 Nov 2018 06:07:58 +0800 (CST)
Received: by mail-pf1-f173.google.com with SMTP id u13-v6so9932217pfm.4
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 14:07:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=BywmoNCJk7dpBdWGU3aw3nylv8BkWRfcMbWolRUoHE8=;
        b=Ybh2XeLgdhwEpGmjKInS4cCwpCP8UJO6m8jvs2IX+WHmJxIrRaYfkfM1TCV4FH6vnY
         FK0DxWgz/G5MUVnwM+P6wNzsqE1tk5K2bPzcMuY+FPhsTCiUjy7/MP6OwwTz11CtQNBd
         o6E5LYwVcGpUCGQuT8v0+t45WfLyx14Tm3Gwe3J+c4cHuKo8WL7DtbJYUKhHzm65UNko
         Wu5EWyGF+xkv3l4W5UnhfcQuomJC4AKU37I95cOm7zcYlCY6SRjvHVkGO5QYvuky1/u7
         xRvcA+5pfcPfVpgOew42w28xFUEt6BGN05SblE/ro5Pt7BjNa8XI3/oB/zVuIQK6u4Gd
         Jmcw==
X-Gm-Message-State: AGRZ1gKTZ6Svvkp47fQJflMtDO2cfl8ICY5pNqsl3DbBddSu9CVGJxsH
	Vs51helVXh6F8lD/cb5jLHDQSj0JFj/yfc8dH4eGjpbUbyBhbKdNGw==
X-Received: by 2002:a63:cd17:: with SMTP id i23mr5213141pgg.13.1541714878343;
        Thu, 08 Nov 2018 14:07:58 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp788095pjt;
        Thu, 8 Nov 2018 14:07:57 -0800 (PST)
X-Google-Smtp-Source: AJdET5ep1WlkIjPNj3i7ldFli6oDxn5eQe2ybBeMEBf4swVRbAe1K6oZe8471t9pDTiAWVFtk7by
X-Received: by 2002:a17:902:8543:: with SMTP id d3-v6mr6299807plo.313.1541714877273;
        Thu, 08 Nov 2018 14:07:57 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541714877; cv=none;
        d=google.com; s=arc-20160816;
        b=PFbroS1JoHuXVCV5bb0yZVactzPoRRvpU2gqddNSF5hEfLedIKdAtbgDkla0GgL2CZ
         jwg7rancs6YXeAZhLXIP7jCyp9G/BbBbalY3Qi8gmAthia2YYLVUcPGBU0u70XRGz4Jg
         dctnoRe0YHrd6fY1U6+ZyuiuNNzzZ9OyUci28tLeWaIwSRdekLNcc6T1zzBi6rSM4fpR
         yT6/uRkxNZOLQH501FxxznPAa5o3gLSpgfYyk9YIJrpsfKbt42DmIa4t8HCjWRuDmuPU
         /P0mmtpP3/qdiNypZqqPhfdB6wKB8UsE/eKMaGljLHYhUf+WYf/ibHy5+aOggjK95cb+
         ZyJA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=BywmoNCJk7dpBdWGU3aw3nylv8BkWRfcMbWolRUoHE8=;
        b=Eayz72C1IPQcOQMfcxTVbMsFUUwpFwtb/LNMMmDv3aFxsR+zPU6W4x6WA2esufNzUj
         Fck9mD9i0t6xZHE5oxa3KVNrZEXw6mDRV4ZbF16vziERMXtw4C5kkvgiikOppPACuPAW
         6G9rk9nTkI1FNl8IcjVzLWoENrMHr0oHf5TB2JmxA16+Gr6iL64opC3S9wEohZYbzm50
         +H/30ecPb/I121OSQfy6E7pocl0PH0y9s/As//5xCc5v069BCVqmHZ/LV2h5G6Cd1Iq3
         HISKn+9S/VONE7e76izVfhXwyRb+/tKLdK8m/5+KZz2afOv3+Uj2gXft/NliXOf+tKVb
         j3JQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=yuAbuIZP;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g11-v6si5223023plp.128.2018.11.08.14.07.41;
        Thu, 08 Nov 2018 14:07:57 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731982AbeKIHoA (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 02:44:00 -0500
Received: from mail.kernel.org ([198.145.29.99]:36722 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730680AbeKIHn7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 02:43:59 -0500
Received: from localhost (unknown [208.72.13.198])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 8003B20892;
        Thu,  8 Nov 2018 22:06:28 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541714788;
        bh=iw4JaW7zzl0tyGusNrAVdvT4ByCjZ/BzrZK6v2FCkgA=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=yuAbuIZPADQUApNNilUZEiuWThcEYMZDXiBS4CbnCN9OReC2UxCVV7qamTnniDQ35
         Mt7x8mBe6KWqkPvmrMNQ/6Y/iskpznhUvciO1SYPIdCqCWUb5lYYDLp3cPK4zITJNF
         7JLdITA/2b4v48iz0SYUv4UhsRJIThW/5wmEk6ro=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, David Howells <dhowells@redhat.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.9 127/171] rxrpc: Dont check RXRPC_CALL_TX_LAST after calling rxrpc_rotate_tx_window()
Date: Thu,  8 Nov 2018 13:51:37 -0800
Message-Id: <20181108215136.442405962@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181108215127.257643509@linuxfoundation.org>
References: <20181108215127.257643509@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3WES+s+Rb+d4eAA--.6242S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXryfKr48WFy5Jr48Cw43trb_yoWrAry3pF
	W3CrWakFs8Jr4avrs3trs7Ca4Sv3W8J347Gw1Du3sYkr92kr4YqFn7Kayvqry5CayxZr4U
	ZF17K34UAr47AFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_GrUvcSsGvfC2KfnxnUUI43ZEXa7I
	U5hzVUUUUUU==

4.9-stable review patch.  If anyone has any objections, please let me know.

------------------

[ Upstream commit c479d5f2c2e1ce609da08c075054440d97ddff52 ]

We should only call the function to end a call's Tx phase if we rotated the
marked-last packet out of the transmission buffer.

Make rxrpc_rotate_tx_window() return an indication of whether it just
rotated the packet marked as the last out of the transmit buffer, carrying
the information out of the locked section in that function.

We can then check the return value instead of examining RXRPC_CALL_TX_LAST.

Fixes: 70790dbe3f66 ("rxrpc: Pass the last Tx packet marker in the annotation buffer")
Signed-off-by: David Howells <dhowells@redhat.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 net/rxrpc/input.c | 35 +++++++++++++++++++----------------
 1 file changed, 19 insertions(+), 16 deletions(-)

diff --git a/net/rxrpc/input.c b/net/rxrpc/input.c
index f3ac85a285a2..7bfde4737cb3 100644
--- a/net/rxrpc/input.c
+++ b/net/rxrpc/input.c
@@ -216,10 +216,11 @@ static void rxrpc_send_ping(struct rxrpc_call *call, struct sk_buff *skb,
 /*
  * Apply a hard ACK by advancing the Tx window.
  */
-static void rxrpc_rotate_tx_window(struct rxrpc_call *call, rxrpc_seq_t to,
+static bool rxrpc_rotate_tx_window(struct rxrpc_call *call, rxrpc_seq_t to,
 				   struct rxrpc_ack_summary *summary)
 {
 	struct sk_buff *skb, *list = NULL;
+	bool rot_last = false;
 	int ix;
 	u8 annotation;
 
@@ -243,15 +244,17 @@ static void rxrpc_rotate_tx_window(struct rxrpc_call *call, rxrpc_seq_t to,
 		skb->next = list;
 		list = skb;
 
-		if (annotation & RXRPC_TX_ANNO_LAST)
+		if (annotation & RXRPC_TX_ANNO_LAST) {
 			set_bit(RXRPC_CALL_TX_LAST, &call->flags);
+			rot_last = true;
+		}
 		if ((annotation & RXRPC_TX_ANNO_MASK) != RXRPC_TX_ANNO_ACK)
 			summary->nr_rot_new_acks++;
 	}
 
 	spin_unlock(&call->lock);
 
-	trace_rxrpc_transmit(call, (test_bit(RXRPC_CALL_TX_LAST, &call->flags) ?
+	trace_rxrpc_transmit(call, (rot_last ?
 				    rxrpc_transmit_rotate_last :
 				    rxrpc_transmit_rotate));
 	wake_up(&call->waitq);
@@ -262,6 +265,8 @@ static void rxrpc_rotate_tx_window(struct rxrpc_call *call, rxrpc_seq_t to,
 		skb->next = NULL;
 		rxrpc_free_skb(skb, rxrpc_skb_tx_freed);
 	}
+
+	return rot_last;
 }
 
 /*
@@ -332,11 +337,11 @@ static bool rxrpc_receiving_reply(struct rxrpc_call *call)
 				ktime_get_real());
 	}
 
-	if (!test_bit(RXRPC_CALL_TX_LAST, &call->flags))
-		rxrpc_rotate_tx_window(call, top, &summary);
 	if (!test_bit(RXRPC_CALL_TX_LAST, &call->flags)) {
-		rxrpc_proto_abort("TXL", call, top);
-		return false;
+		if (!rxrpc_rotate_tx_window(call, top, &summary)) {
+			rxrpc_proto_abort("TXL", call, top);
+			return false;
+		}
 	}
 	if (!rxrpc_end_tx_phase(call, true, "ETD"))
 		return false;
@@ -839,8 +844,12 @@ static void rxrpc_input_ack(struct rxrpc_call *call, struct sk_buff *skb,
 	if (nr_acks > call->tx_top - hard_ack)
 		return rxrpc_proto_abort("AKN", call, 0);
 
-	if (after(hard_ack, call->tx_hard_ack))
-		rxrpc_rotate_tx_window(call, hard_ack, &summary);
+	if (after(hard_ack, call->tx_hard_ack)) {
+		if (rxrpc_rotate_tx_window(call, hard_ack, &summary)) {
+			rxrpc_end_tx_phase(call, false, "ETA");
+			return;
+		}
+	}
 
 	if (nr_acks > 0) {
 		if (skb_copy_bits(skb, offset, buf.acks, nr_acks) < 0)
@@ -849,11 +858,6 @@ static void rxrpc_input_ack(struct rxrpc_call *call, struct sk_buff *skb,
 				      &summary);
 	}
 
-	if (test_bit(RXRPC_CALL_TX_LAST, &call->flags)) {
-		rxrpc_end_tx_phase(call, false, "ETA");
-		return;
-	}
-
 	if (call->rxtx_annotations[call->tx_top & RXRPC_RXTX_BUFF_MASK] &
 	    RXRPC_TX_ANNO_LAST &&
 	    summary.nr_acks == call->tx_top - hard_ack &&
@@ -875,8 +879,7 @@ static void rxrpc_input_ackall(struct rxrpc_call *call, struct sk_buff *skb)
 
 	_proto("Rx ACKALL %%%u", sp->hdr.serial);
 
-	rxrpc_rotate_tx_window(call, call->tx_top, &summary);
-	if (test_bit(RXRPC_CALL_TX_LAST, &call->flags))
+	if (rxrpc_rotate_tx_window(call, call->tx_top, &summary))
 		rxrpc_end_tx_phase(call, false, "ETL");
 }
 
-- 
2.17.1


