Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:38:56 -0000
Received: from icoremail.net (unknown [209.85.210.179])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_4_ttORbQPFiAQ--.61865S3;
	Fri, 09 Nov 2018 06:13:02 +0800 (CST)
Received: from mail-pf1-f179.google.com (unknown [209.85.210.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnAT3qtORby+IeAA--.12767S3;
	Fri, 09 Nov 2018 06:12:59 +0800 (CST)
Received: by mail-pf1-f179.google.com with SMTP id p17-v6so9561994pfj.12
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 14:12:59 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=OO2SybopQYOZTlgX74cEDiCFTSMrsGVDgBC36lnl89Q=;
        b=WixawXVDydqWjnafyJ/+DfRYJGoi1/CIFoBnS+7wKDPf8YYInNdIvIm0a/sPKDGOJ+
         iHK2lWy2VUyD79qWefHwOY9Gy5NV4XrIkfusPpHtrKaylhRHctNZSJEecYDaGNBxmXF6
         0i+fFTFmnUFJz35CkuluLVfizSD0Mw24Q6Orr9MD086f4voXcYglHV37gsA40zLPz/rI
         1g7YVLXEhFFiWafVI19zwVb71HKsUflJw5NIQxWo0pqg+nGUqd2b26e2Cli3eJXNUMZt
         9FpOy0cKn+cmoQjJcM40mXX8dJf4lf4ztJnI21l5KHYnotSY/UX4x27qePgbpFK+6PHQ
         6eNw==
X-Gm-Message-State: AGRZ1gISAkWKGjiIm9auF+jmTEjv65xjLh1yNOKM9XSzyyGDoxOqkWaF
	bYVaedZityqP1F6sJgbuQuAzavsfUwg/g4OVvTBn+jLemFH8Giw5rg==
X-Received: by 2002:a63:4044:: with SMTP id n65mr5150597pga.90.1541715178715;
        Thu, 08 Nov 2018 14:12:58 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp792667pjt;
        Thu, 8 Nov 2018 14:12:55 -0800 (PST)
X-Google-Smtp-Source: AJdET5d4RNTLcwCK0DWZFxlQYJxuTmqjBnjfbPbjI8nR3Nw8bwHgITC+bJPgg+hR1r0phS7bpEVN
X-Received: by 2002:a62:dbc6:: with SMTP id f189-v6mr6371550pfg.130.1541715175480;
        Thu, 08 Nov 2018 14:12:55 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541715175; cv=none;
        d=google.com; s=arc-20160816;
        b=nAkgfJh0liRyjhQjP6FfO2tU9lcF7GcDdzaGrfSZekO5CsV3dnEfv1J8mPcl5S+xDH
         QVKkbTobIigPcqFcJTnz7b/+y1L8tLjJlBnNkoMC5+Y75YC7LFpdkMdr84MrzoUkwIaZ
         QADxucUtBKRvnkCxcafABsGHSWz+tkMlELd8esFgCEF5d0gFfq9pQzTujTItkyu+HaGx
         mcPf/Zx5OBgxQwoMj2CK7NqtPM1e7/T3rJ2+rfAcCPUa1CP36ZASfVTMsOLP9aNmFI/v
         2icNG+tMM44xqKuTnANzwttaJMmME1NZg/nfTosMZ7GSNw7ggeOva2RCCJo5PXsPb8cY
         Qpiw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=OO2SybopQYOZTlgX74cEDiCFTSMrsGVDgBC36lnl89Q=;
        b=nsfv3Acc2zQxVmVflHI8eIgvZSxn+hWkR3ZC5QtbDNnY7RP0GCfk5zzTBH6wchmnNy
         DH2149JnkQ1hOg9C1SJsxe9IxvzkuFx3W7Gc37FsmbUR6NMfjhnYibEwXqqagFNMAx6a
         +YjZ3fMPrt1d8hABKbaMJb2HVfPBg7rbLxcGxKWMn5CGjbJuQxPo4NF6gqSa327mHVCs
         iZ4bM1LSoR1qYgHlAhQsno9+NWj2Znt+QJFLYn6h/vT6pkABAAzwhhzjLz7bsfihf9jk
         PluI6BqT/ZOvrXoQVcHxOqV9uxfTqbBh84YqLQ4rk95bJ0UIBkoYJKNP2bt7UBSufDdw
         QKSw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="meYI/vbk";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 1-v6si5351571plu.228.2018.11.08.14.12.19;
        Thu, 08 Nov 2018 14:12:55 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732934AbeKIHrj (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 02:47:39 -0500
Received: from mail.kernel.org ([198.145.29.99]:41452 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732891AbeKIHri (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 02:47:38 -0500
Received: from localhost (unknown [208.72.13.198])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 69FFE2147D;
        Thu,  8 Nov 2018 22:10:06 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541715006;
        bh=lLWi+jf2OiDQfIvO3DXaPe2YaTHsFeamlsFdB4bKVVs=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=meYI/vbk/qia1w6QFUXxWW4vakbmoAm2P1U8pspFbKIYB/9n4HwZlZ3FiqYMVO1MU
         A3APmtWLR2H2HdocmLh1AjiSyuPSnWfvG2g3PW1dGfomHDbsBoCoV+rkbrkrT1HvzJ
         Jku65gUQ9CVuFL5GSOcboDDINJI3VZeHv56pt664=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org,
        syzbot+a95b989b2dde8e806af8@syzkaller.appspotmail.com,
        Eric Sandeen <sandeen@redhat.com>,
        David Howells <dhowells@redhat.com>
Subject: [PATCH 4.18 06/34] fscache: Fix incomplete initialisation of inline key space
Date: Thu,  8 Nov 2018 13:52:35 -0800
Message-Id: <20181108215139.300568580@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181108215138.892971755@linuxfoundation.org>
References: <20181108215138.892971755@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnAT3qtORby+IeAA--.12767S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZF1xKFyrJFyxWF1kAr17GFg_yoWrAr43p3
	y3uw4xtF48XF17Wrs8Xr4DAr1rG3s5Ka1UX3yrJ34rAw42yrykWFyIyrnavFy2g3yUGFW2
	vr1UKa4DKa4UAr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7I
	UOHMKtUUUUU==

4.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: David Howells <dhowells@redhat.com>

commit 1ff22883b0b2f7a73eb2609ffe879c9fd96f6328 upstream.

The inline key in struct rxrpc_cookie is insufficiently initialized,
zeroing only 3 of the 4 slots, therefore an index_key_len between 13 and 15
bytes will end up hashing uninitialized memory because the memcpy only
partially fills the last buf[] element.

Fix this by clearing fscache_cookie objects on allocation rather than using
the slab constructor to initialise them.  We're going to pretty much fill
in the entire struct anyway, so bringing it into our dcache writably
shouldn't incur much overhead.

This removes the need to do clearance in fscache_set_key() (where we aren't
doing it correctly anyway).

Also, we don't need to set cookie->key_len in fscache_set_key() as we
already did it in the only caller, so remove that.

Fixes: ec0328e46d6e ("fscache: Maintain a catalogue of allocated cookies")
Reported-by: syzbot+a95b989b2dde8e806af8@syzkaller.appspotmail.com
Reported-by: Eric Sandeen <sandeen@redhat.com>
Cc: stable <stable@vger.kernel.org>
Signed-off-by: David Howells <dhowells@redhat.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/fscache/cookie.c   |   23 ++++-------------------
 fs/fscache/internal.h |    1 -
 fs/fscache/main.c     |    4 +---
 3 files changed, 5 insertions(+), 23 deletions(-)

--- a/fs/fscache/cookie.c
+++ b/fs/fscache/cookie.c
@@ -70,19 +70,6 @@ void fscache_free_cookie(struct fscache_
 }
 
 /*
- * initialise an cookie jar slab element prior to any use
- */
-void fscache_cookie_init_once(void *_cookie)
-{
-	struct fscache_cookie *cookie = _cookie;
-
-	memset(cookie, 0, sizeof(*cookie));
-	spin_lock_init(&cookie->lock);
-	spin_lock_init(&cookie->stores_lock);
-	INIT_HLIST_HEAD(&cookie->backing_objects);
-}
-
-/*
  * Set the index key in a cookie.  The cookie struct has space for a 12-byte
  * key plus length and hash, but if that's not big enough, it's instead a
  * pointer to a buffer containing 3 bytes of hash, 1 byte of length and then
@@ -95,8 +82,6 @@ static int fscache_set_key(struct fscach
 	u32 *buf;
 	int i;
 
-	cookie->key_len = index_key_len;
-
 	if (index_key_len > sizeof(cookie->inline_key)) {
 		buf = kzalloc(index_key_len, GFP_KERNEL);
 		if (!buf)
@@ -104,9 +89,6 @@ static int fscache_set_key(struct fscach
 		cookie->key = buf;
 	} else {
 		buf = (u32 *)cookie->inline_key;
-		buf[0] = 0;
-		buf[1] = 0;
-		buf[2] = 0;
 	}
 
 	memcpy(buf, index_key, index_key_len);
@@ -161,7 +143,7 @@ struct fscache_cookie *fscache_alloc_coo
 	struct fscache_cookie *cookie;
 
 	/* allocate and initialise a cookie */
-	cookie = kmem_cache_alloc(fscache_cookie_jar, GFP_KERNEL);
+	cookie = kmem_cache_zalloc(fscache_cookie_jar, GFP_KERNEL);
 	if (!cookie)
 		return NULL;
 
@@ -192,6 +174,9 @@ struct fscache_cookie *fscache_alloc_coo
 	cookie->netfs_data	= netfs_data;
 	cookie->flags		= (1 << FSCACHE_COOKIE_NO_DATA_YET);
 	cookie->type		= def->type;
+	spin_lock_init(&cookie->lock);
+	spin_lock_init(&cookie->stores_lock);
+	INIT_HLIST_HEAD(&cookie->backing_objects);
 
 	/* radix tree insertion won't use the preallocation pool unless it's
 	 * told it may not wait */
--- a/fs/fscache/internal.h
+++ b/fs/fscache/internal.h
@@ -51,7 +51,6 @@ extern struct fscache_cache *fscache_sel
 extern struct kmem_cache *fscache_cookie_jar;
 
 extern void fscache_free_cookie(struct fscache_cookie *);
-extern void fscache_cookie_init_once(void *);
 extern struct fscache_cookie *fscache_alloc_cookie(struct fscache_cookie *,
 						   const struct fscache_cookie_def *,
 						   const void *, size_t,
--- a/fs/fscache/main.c
+++ b/fs/fscache/main.c
@@ -143,9 +143,7 @@ static int __init fscache_init(void)
 
 	fscache_cookie_jar = kmem_cache_create("fscache_cookie_jar",
 					       sizeof(struct fscache_cookie),
-					       0,
-					       0,
-					       fscache_cookie_init_once);
+					       0, 0, NULL);
 	if (!fscache_cookie_jar) {
 		pr_notice("Failed to allocate a cookie jar\n");
 		ret = -ENOMEM;

