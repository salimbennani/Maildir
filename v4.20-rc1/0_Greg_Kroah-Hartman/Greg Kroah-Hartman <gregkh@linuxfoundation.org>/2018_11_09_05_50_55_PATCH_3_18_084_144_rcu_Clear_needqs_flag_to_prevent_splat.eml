Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:38:23 -0000
Received: from icoremail.net (unknown [209.85.215.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH0JRseRb191iAQ--.29943S3;
	Fri, 09 Nov 2018 05:57:38 +0800 (CST)
Received: from mail-pg1-f181.google.com (unknown [209.85.215.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3VkJMseRbZNceAA--.2090S3;
	Fri, 09 Nov 2018 05:57:32 +0800 (CST)
Received: by mail-pg1-f181.google.com with SMTP id 32-v6so9440487pgu.2
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 13:57:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=6RXDBhfmYObEMJsURGgX4AnavX02UEajR6JJ7X28DAo=;
        b=ZHld9It5swiVb8J740IaMzAgx84zeDQvrccbaP2kdvgf8fB/1Azd4CV1F5x4uidu23
         vQ6f+tN+DK8AAscRdUVlmjwMPQkHvuApAye4nKRZGUdn4jH7v+VpEovePcBnZKbJHnaN
         Y1mqV1ua3IdreOKrvmxwKIjF8K4idXct/pyMitRaDr0r9ynSu2wmKae7StSYH0gtmwlC
         7zrEHNm4TcsfXvEVV9CNLGVcrc03s8+d2i88BdWAcBxkFzOk+k94UNYjjMS1HPibiKFm
         wk7RVQnGVzfOsBD/j9UTNtc8L0fRGo9dy40eKbb6N+gHg+ShftSC/rnQ977BJZE3lJdE
         neDA==
X-Gm-Message-State: AGRZ1gI57UfnZkEHQjGef9du6IENONT2O+oxxpV9VmS3Z6WwN+jnmUC1
	emtasmpFx6nmAugqLJ6emgPxNZOEM9ApUaHVizXt0uQ8HI+Jk2yx3A==
X-Received: by 2002:a62:ce8e:: with SMTP id y136-v6mr6297831pfg.201.1541714252068;
        Thu, 08 Nov 2018 13:57:32 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp776916pjt;
        Thu, 8 Nov 2018 13:57:31 -0800 (PST)
X-Google-Smtp-Source: AJdET5dLNaFcvDR1E2w1Q8jZbaFEyCaBhIoSadCJ0LWwVWWcbmYE1PZMlGz4EP+Mw9QpF/zDIHxl
X-Received: by 2002:a17:902:1124:: with SMTP id d33-v6mr6475221pla.125.1541714251388;
        Thu, 08 Nov 2018 13:57:31 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541714251; cv=none;
        d=google.com; s=arc-20160816;
        b=XVB5EJcIt4AzKbPpMzuB8R8Ao2FyerdQlixApsfoV61aq9+x9MDYAnohduhRXnqngy
         K9fdkKKxT76jG0gUB7JQK+aqbvwjECYX3Q+TQMNKUv52G0WC2GQmFKctHjV2J3Uo55Zi
         m2Z2V8rVtQM0DxvojXhYIHpKUDV9CPFlUl9m9W4eMPzTKHkO+8XnGDpzoQ4z3yMcpZAZ
         QgiRmzALuXcLx1+zmNuc3ElV6eWVyvO9e2Q1QK//4tsEHuijbWxY+JD0XqA50jdFvctq
         RVUYFxL7zNOXjFEdRganG86og652pdIK1+ElyoDCcNMjfsCbwNaSWcneo/Fjg86s5EQ+
         QiPg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=6RXDBhfmYObEMJsURGgX4AnavX02UEajR6JJ7X28DAo=;
        b=Rr6hgO9ZE6OxJe4Bn50PQAEHKNK9OrXbZTo21N6RYEAcbV44Put8O9AKzDis2QGLa9
         59j3FjQHUn5LRaIIyHZ3gERsyRJ3mPcTJkuc4sYbHMOAquiD7e6WVWDh8q5gWc3L3M7k
         aLeIzI37MYc/oeb6734nxysiZiBopevB6LP7Cf5wRfCxCB/4jRuTTquFgSfwyWCRFd8a
         Vnkb+8Dt1r8eI7MFa0UzdchoP50JciKXrb+S+iU6G8aBqfYQb1oRGv0+zqjXQbyL1lMa
         FCEPajenB1ZVU5xuEsTAOf0jC6KjoWB7o1f+kjBbVEyDTwy/gH2dw+azsm41mgnLa/NK
         8V1A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=mxl8e2fs;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p20si1753596pgm.455.2018.11.08.13.57.16;
        Thu, 08 Nov 2018 13:57:31 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729138AbeKIHdr (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 02:33:47 -0500
Received: from mail.kernel.org ([198.145.29.99]:49898 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729035AbeKIHdp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 02:33:45 -0500
Received: from localhost (unknown [208.72.13.198])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 66BCC2089F;
        Thu,  8 Nov 2018 21:56:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541714177;
        bh=rAKqzMvYNkQTsN5e2+HZLSUUokfyyuV+khIFrNS5obY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=mxl8e2fsU/2iffJ4LRB75b36P+DfJnLSQSbN+CHhAlbMLTgoGB4PJUQgk94UhAdzx
         oBYdwjGQJKgnG1nJjsrOLyTVjWCjtWch9XUo8n/hI5Ejw7noSCDcmDguEiFN8LeRIP
         7S9FuHoEkEGOnaDCAdzKu2cwEpqDK17XN0MNsAaM=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Sasha Levin <sasha.levin@oracle.com>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 3.18 084/144] rcu: Clear need_qs flag to prevent splat
Date: Thu,  8 Nov 2018 13:50:55 -0800
Message-Id: <20181108215101.510788261@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181108215054.826084593@linuxfoundation.org>
References: <20181108215054.826084593@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3VkJMseRbZNceAA--.2090S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCr1kKF48AF1UWF4fZFy5urg_yoWrGFy3pF
	WxCF92kw4UXa9avwnrA3Wv9ry8t345u3yfGrykAa18Jw4Yqr1kKr1ft3ZYv395Wr1IyrW0
	qrn3tw4DA34UAaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VWxMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI
	42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExV
	AvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AK
	xVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrx
	kI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuYvjxU
	H-J5DUUUU

3.18-stable review patch.  If anyone has any objections, please let me know.

------------------

[ Upstream commit c0135d07b013fa8f7ba9ec91b4369c372e6a28cb ]

If the scheduling-clock interrupt sets the current tasks need_qs flag,
but if the current CPU passes through a quiescent state in the meantime,
then rcu_preempt_qs() will fail to clear the need_qs flag, which can fool
RCU into thinking that additional rcu_read_unlock_special() processing
is needed.  This commit therefore clears the need_qs flag before checking
for additional processing.

For this problem to occur, we need rcu_preempt_data.passed_quiesce equal
to true and current->rcu_read_unlock_special.b.need_qs also equal to true.
This condition can occur as follows:

1.	CPU 0 is aware of the current preemptible RCU grace period,
	but has not yet passed through a quiescent state.  Among other
	things, this means that rcu_preempt_data.passed_quiesce is false.

2.	Task A running on CPU 0 enters a preemptible RCU read-side
	critical section.

3.	CPU 0 takes a scheduling-clock interrupt, which notices the
	RCU read-side critical section and the need for a quiescent state,
	and thus sets current->rcu_read_unlock_special.b.need_qs to true.

4.	Task A is preempted, enters the scheduler, eventually invoking
	rcu_preempt_note_context_switch() which in turn invokes
	rcu_preempt_qs().

	Because rcu_preempt_data.passed_quiesce is false,
	control enters the body of the "if" statement, which sets
	rcu_preempt_data.passed_quiesce to true.

5.	At this point, CPU 0 takes an interrupt.  The interrupt
	handler contains an RCU read-side critical section, and
	the rcu_read_unlock() notes that current->rcu_read_unlock_special
	is nonzero, and thus invokes rcu_read_unlock_special().

6.	Once in rcu_read_unlock_special(), the fact that
	current->rcu_read_unlock_special.b.need_qs is true becomes
	apparent, so rcu_read_unlock_special() invokes rcu_preempt_qs().
	Recursively, given that we interrupted out of that same
	function in the preceding step.

7.	Because rcu_preempt_data.passed_quiesce is now true,
	rcu_preempt_qs() does nothing, and simply returns.

8.	Upon return to rcu_read_unlock_special(), it is noted that
	current->rcu_read_unlock_special is still nonzero (because
	the interrupted rcu_preempt_qs() had not yet gotten around
	to clearing current->rcu_read_unlock_special.b.need_qs).

9.	Execution proceeds to the WARN_ON_ONCE(), which notes that
	we are in an interrupt handler and thus duly splats.

The solution, as noted above, is to make rcu_read_unlock_special()
clear out current->rcu_read_unlock_special.b.need_qs after calling
rcu_preempt_qs().  The interrupted rcu_preempt_qs() will clear it again,
but this is harmless.  The worst that happens is that we clobber another
attempt to set this field, but this is not a problem because we just
got done reporting a quiescent state.

Reported-by: Sasha Levin <sasha.levin@oracle.com>
Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
[ paulmck: Fix embarrassing build bug noted by Sasha Levin. ]
Tested-by: Sasha Levin <sasha.levin@oracle.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 kernel/rcu/tree_plugin.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/kernel/rcu/tree_plugin.h b/kernel/rcu/tree_plugin.h
index c1d7f27bd38f..c038831bfa57 100644
--- a/kernel/rcu/tree_plugin.h
+++ b/kernel/rcu/tree_plugin.h
@@ -328,6 +328,7 @@ void rcu_read_unlock_special(struct task_struct *t)
 	special = t->rcu_read_unlock_special;
 	if (special.b.need_qs) {
 		rcu_preempt_qs();
+		t->rcu_read_unlock_special.b.need_qs = false;
 		if (!t->rcu_read_unlock_special.s) {
 			local_irq_restore(flags);
 			return;
-- 
2.17.1


