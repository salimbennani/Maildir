Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:40:11 -0000
Received: from icoremail.net (unknown [209.85.214.171])
	by mail-app2 (Coremail) with SMTP id by_KCgA3cI661eRbsZFjAQ--.33374S3;
	Fri, 09 Nov 2018 08:32:59 +0800 (CST)
Received: from mail-pl1-f171.google.com (unknown [209.85.214.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnz0u41eRbLWAfAA--.9333S3;
	Fri, 09 Nov 2018 08:32:56 +0800 (CST)
Received: by mail-pl1-f171.google.com with SMTP id q19-v6so73343pll.7
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 16:32:56 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=OsnntpvzRra1bKCuMyJWMzb3tscjWBVS1AEp7qWVZAI=;
        b=Qo7EErMqf6J/EzLNtY38fnPtivq02cjlmqGlVQi2yVVbj+GqzmGkWAtDMPlbV4NubU
         gi/G7BNCyny+/2VIz1jUXkiV8Ccb1W721kcOXoECoJkKMPSegTk96ODjw3kg5Jw+kqri
         NT7ouunQVvTYa6/VEMggQL+nBPdO5QfwymJxFTW0yKi0giGpXJvMHiz9Bt9TB6xR13AH
         FiQ3sd/QnkVBXcuXJUW6llHE3J358F5Lo+8z6Fc2HG0Be+PPAtA4DLnnceRXjRaWMLYv
         bKlKOFDQkQYUiEPaE3hA5JsD7/FHp2wcbdxym97vgFo/ukW1xmJsktHiRnz+S3uAreoe
         YN3g==
X-Gm-Message-State: AGRZ1gJhsLHE3tEuwqrd/wTpDcVwMT9hNQwOpKOrM+9HGeoMZ7fKj3O5
	G/nJtMTun9srjKw3MHiGnp5CB9AI7KMbRRCoxlTTMobPPXAi/+xxpQ==
X-Received: by 2002:a17:902:1026:: with SMTP id b35-v6mr6801624pla.283.1541723576252;
        Thu, 08 Nov 2018 16:32:56 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp904864pjt;
        Thu, 8 Nov 2018 16:32:55 -0800 (PST)
X-Google-Smtp-Source: AJdET5c4kaFJli9GNs8crYB7J/CTQMtnHl6SNCUJFxn8CqdRF1tl1y40pbhICP3E6EYf8mHv83R+
X-Received: by 2002:a62:6fc7:: with SMTP id k190-v6mr6807867pfc.97.1541723575227;
        Thu, 08 Nov 2018 16:32:55 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541723575; cv=none;
        d=google.com; s=arc-20160816;
        b=I/MkqGfwJi8LUdeWwgYeexXBm6snLuEWwIcBcndRnTkNRBV0elEI1SRFoTOQvX29vT
         zYiXbkeijhquy750WL4BC1Bgn45PRVz6GSbFTKSxmuOhTTQfYtGFwytHZRzeW4gMGhlN
         BEEq1l4WZjLwwk6CPz87aSZ09nKMzYW0h9qo67hv74OFM1jG/SVf1FixeHpHjvo++DHP
         GBpROv5Pe6OxJ8Is3oOan03b8agddKZ82MzEfYChtE5f+xoqD805U3AYyGTgdG6IlOHj
         au+WOs2PjF8DgeoxTL2wjvzL+39HRsuWhi9vRoOqwBfST8Je98+aY25nJaBONhBI2otU
         9KMA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=OsnntpvzRra1bKCuMyJWMzb3tscjWBVS1AEp7qWVZAI=;
        b=gZf5x7/FsCoyASa/87UY8R0oQrqRhy09CxEdiPeffzoYBt3XIDIjzXDgp95WBi7Kmp
         VV8EXLdD8uVuqSIhm6N3ELf9M2xmfzMZ4eTq6KglcCXdTol5LP4uXahcCUschRTejI7L
         JKJuD/Hy2LRJLxlX0IK7LJQRDdF3C44X+j+7TfABu1Ui2WSPXR+O/q5U4J/sn0CzsONX
         EcdrkdqqeU0dNCSkhUd4qDHnqKdkCK3ENzUtxYC/MlIk+zxtI8snZ9eyroSLefYyaGon
         VkkHc9XAdDwQHUSxFKkfkiCpjJlJ5ud0FGpF7nA8ARYeKVaa9xfRdX3Kl0hUgRDEtEyp
         A3Bg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@infradead.org header.s=bombadil.20170209 header.b=nC78xKGJ;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id ce19-v6si6312898plb.162.2018.11.08.16.32.40;
        Thu, 08 Nov 2018 16:32:55 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727577AbeKIKKj (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 05:10:39 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:34620 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727483AbeKIKKj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 05:10:39 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Type:MIME-Version
        :References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=OsnntpvzRra1bKCuMyJWMzb3tscjWBVS1AEp7qWVZAI=; b=nC78xKGJJftKkq7l3M2+Mh9vu
        NjTLkICrkMLdnLEY4rAOF0N9bCaOF/3NOIxyd+bGuqiIOzpF7zS3iK3zQlA2C6Z3Jcgue552NcGJn
        YDxnHgsWZpIFbw0x4iFbpsZAlZ4iJBGcE3tmYgX3/MUlKqVc6La7C+Mmv1mKXwPIZ2/q/lWNZ03Xk
        gp27cFSGlONLRxdLGEA6i2DMtQhTEOBmyOwykgE3Tf71PGuglZFPpXDUlA3kCuAeHP3LjkHuPtvUr
        CyrB1ccI9Y8Yp62tX7wSkNhJ7hAXmqFX70TPjxEWgYZZjZ4JmqOroSTCC5VhWSAvNHar4gXwfBIkq
        YaqUjXooQ==;
Received: from willy by bombadil.infradead.org with local (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gKuin-00057a-H8; Fri, 09 Nov 2018 00:32:25 +0000
Date: Thu, 8 Nov 2018 16:32:25 -0800
From: Matthew Wilcox <willy@infradead.org>
To: Dave Hansen <dave.hansen@intel.com>
Cc: Andy Lutomirski <luto@amacapital.net>,
        Yu-cheng Yu <yu-cheng.yu@intel.com>, X86 ML <x86@kernel.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
        Linux-MM <linux-mm@kvack.org>,
        linux-arch <linux-arch@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Balbir Singh <bsingharora@gmail.com>,
        Cyrill Gorcunov <gorcunov@gmail.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Eugene Syromiatnikov <esyr@redhat.com>,
        Florian Weimer <fweimer@redhat.com>,
        "H. J. Lu" <hjl.tools@gmail.com>, Jann Horn <jannh@google.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Kees Cook <keescook@chromium.org>,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Nadav Amit <nadav.amit@gmail.com>,
        Oleg Nesterov <oleg@redhat.com>, Pavel Machek <pavel@ucw.cz>,
        Peter Zijlstra <peterz@infradead.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        "Ravi V. Shankar" <ravi.v.shankar@intel.com>,
        "Shanbhogue, Vedvyas" <vedvyas.shanbhogue@intel.com>
Subject: Re: [PATCH v5 04/27] x86/fpu/xstate: Add XSAVES system states for
 shadow stack
Message-ID: <20181109003225.GQ3074@bombadil.infradead.org>
References: <20181011151523.27101-1-yu-cheng.yu@intel.com>
 <20181011151523.27101-5-yu-cheng.yu@intel.com>
 <CALCETrVAe8R=crVHoD5QmbN-gAW+V-Rwkwe4kQP7V7zQm9TM=Q@mail.gmail.com>
 <4295b8f786c10c469870a6d9725749ce75dcdaa2.camel@intel.com>
 <CALCETrUKzXYzRrWRdi8Z7AdAF0uZW5Gs7J4s=55dszoyzc29rw@mail.gmail.com>
 <043a17ef-dc9f-56d2-5fba-1a58b7b0fd4d@intel.com>
 <20181108220054.GP3074@bombadil.infradead.org>
 <ead230ab-a904-50d6-c4cf-46d5804f6151@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <ead230ab-a904-50d6-c4cf-46d5804f6151@intel.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnz0u41eRbLWAfAA--.9333S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJrW7GFWfAw13Gw1fuF45KFg_yoW8XF1kpF
	Z0yas8CayUJr1I93ZIvws7uw4Yqa1UWF9IqFW5t3sYyFykXas7ZF1Ika1a9343Zr1fWw42
	vF47tr13XanxAFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB2b7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1l7I0Y6sxI4wCY1x
	0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VWDMxkI7II2
	jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcVC0I7IYx2IY6xkF7I
	0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2z280aVCY1x0267AK
	xVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4w
	CFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE
	14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04k26c
	xKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUgj-eUUUUU

On Thu, Nov 08, 2018 at 03:35:02PM -0800, Dave Hansen wrote:
> On 11/8/18 2:00 PM, Matthew Wilcox wrote:
> > struct a {
> > 	char c;
> > 	struct b b;
> > };
> > 
> > we want struct b to start at offset 8, but with __packed, it will start
> > at offset 1.
> 
> You're talking about how we want the struct laid out in memory if we
> have control over the layout.  I'm talking about what happens if
> something *else* tells us the layout, like a hardware specification
> which is what is in play with the XSAVE instruction dictated layout
> that's in question here.
> 
> What I'm concerned about is a structure like this:
> 
> struct foo {
>         u32 i1;
>         u64 i2;
> };
> 
> If we leave that to natural alignment, we end up with a 16-byte
> structure laid out like this:
> 
> 	0-3	i1
> 	3-8	alignment gap
> 	8-15	i2

I know you actually meant:

	0-3	i1
	4-7	pad
	8-15	i2

> Which isn't what we want.  We want a 12-byte structure, laid out like this:
> 
> 	0-3	i1
> 	4-11	i2
> 
> Which we get with:
> 
> struct foo {
>         u32 i1;
>         u64 i2;
> } __packed;

But we _also_ get pessimised accesses to i1 and i2.  Because gcc can't
rely on struct foo being aligned to a 4 or even 8 byte boundary (it
might be embedded in "struct a" from above).

> Now, looking at Yu-cheng's specific example, it doesn't matter.  We've
> got 64-bit types and natural 64-bit alignment.  Without __packed, we
> need to look out for natural alignment screwing us up.  With __packed,
> it just does what it *looks* like it does.

The question is whether Yu-cheng's struct is ever embedded in another
struct.  And if so, what does the hardware do?
