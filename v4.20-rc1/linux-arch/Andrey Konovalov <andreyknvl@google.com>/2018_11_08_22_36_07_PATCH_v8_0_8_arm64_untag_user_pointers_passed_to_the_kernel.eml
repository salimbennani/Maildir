Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:35:06 -0000
Received: from icoremail.net (unknown [209.85.210.181])
	by mail-app2 (Coremail) with SMTP id by_KCgCn39xhSuRbU7ZgAQ--.28858S3;
	Thu, 08 Nov 2018 22:38:26 +0800 (CST)
Received: from mail-pf1-f181.google.com (unknown [209.85.210.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCngT1fSuRbYzAdAA--.4764S3;
	Thu, 08 Nov 2018 22:38:23 +0800 (CST)
Received: by mail-pf1-f181.google.com with SMTP id s9-v6so2033325pfm.13
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 06:38:23 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:mime-version:content-transfer-encoding:sender
         :precedence:list-id;
        bh=u5kHcGDhi0TMbDwNOXFMmLFf9OcT+nH7RFru3GHEeOE=;
        b=fAZ6xlh7pVQ7/vwBj0fFj846MjPrhkq7mucMFGFqXg3/Pae1HPUaPT3JTk3jfRbMGl
         G1ufEQlqR2ccuZLjEB2CQBJgtsRMjDPgoiVvi53r4uaodk3iBCF8V+mF3HhOKZbI3VTA
         IsVwHpNAESrS9Ja3NrmVPimtnxqplECN7+BN1m6EivXQJ18OB7qvuiwb9/TlZTzCEh9h
         BB+0IhB9W2XbaB4e8oKk7IuCSo0Helkud5AsTKQW/NJxFaB2ViMmDRB55Yt3zkx/qxnP
         DbmtO5gvPtYb7pDghKDwER8iruvcoXssNMZyke7xsNN0X0Ogk4fuIXzlBEKxGDEhlfHt
         78eg==
X-Gm-Message-State: AGRZ1gKhn6G4OVZun6K2CfY8sbE5ZvE2r2FU5XdORLmwh11plqgR3mMM
	h3SLbT1y5sH6JXCM0wvKHTA7/veEilFhmEnM5Ga433Y0wifoXGeOwA==
X-Received: by 2002:a63:460a:: with SMTP id t10-v6mr4004406pga.197.1541687902965;
        Thu, 08 Nov 2018 06:38:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp266497pjt;
        Thu, 8 Nov 2018 06:38:22 -0800 (PST)
X-Google-Smtp-Source: AJdET5d65c09M2J5VHXOx4j22WDpTB1DAasDAHflFiDp2E9ZynYNpoMgga++o2Q+xU1yB3Pv7dPd
X-Received: by 2002:a63:7044:: with SMTP id a4mr3870053pgn.359.1541687901990;
        Thu, 08 Nov 2018 06:38:21 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541687901; cv=none;
        d=google.com; s=arc-20160816;
        b=VHridmcmfH0hTfXiRPA/B/74AZaVcr2iYXg3uNwdTkkB3acyjv7oyU27XNGPmhBsu5
         jZmAambv+/u2Xq2njlvHGH8mJyZ44jJh8pnEfz9SHCyew0sKoCFBjHc3a49CfUZA6J9m
         lWR4A3s+q8ms3XozJChKoJOzgYE15FC/pcNzZ2g3VflfUGwCUtE0KOSpJDKXcvRD2BNc
         7PbENHTYWNWiEMetmLqa8sMDCdVdbBWF+dlaSGhdswmaGPx2q1xLhSqyaa3w0mhYKfdR
         +TyfSb5g+LU+wWWBtQW1oj55zt57+6wrNB7uuXwzL60jEps5IJZwh58MgtSaeq6rUEeg
         oRZg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :message-id:date:subject:cc:to:from:dkim-signature;
        bh=u5kHcGDhi0TMbDwNOXFMmLFf9OcT+nH7RFru3GHEeOE=;
        b=CnKBDUSmdNDhMZh5YOwvq//BKuX3ZUCuxBhiYwuYluKZwVMfxuIXvrD14uQHPf/iAB
         j3wK+kKA2YHQCFtFqVojv2ITBaKoich+Vuyc3MlfPHQF+mCkkuaxowUUEOKAkfaRcoyb
         ZNzYFAlarloqpvtlnYbYYhrZXPfvbYuOSrMdVA9P03V8RN0I53XqP/Vu57ZX6HtKMAky
         /6NDdS0wdkp0IoC/wVuMbblcimsTdLpcbMX8mHkbaRLJA39QoAIzuzf2kKQLvboGPIXF
         xJg20t2YoYVgSIE3uu59A/mBL04PZ+Vtwhg1zCzwRtZDuieMKuX/lT2fKTkdM31uFe/p
         XEUw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=p3GcuzxN;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p11-v6si3737532pgb.563.2018.11.08.06.38.06;
        Thu, 08 Nov 2018 06:38:21 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726831AbeKIAMJ (ORCPT <rfc822;ankurbansal210989@gmail.com>
        + 99 others); Thu, 8 Nov 2018 19:12:09 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:54936 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726541AbeKIAMI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 19:12:08 -0500
Received: by mail-wm1-f65.google.com with SMTP id r63-v6so1496860wma.4
        for <linux-kernel@vger.kernel.org>; Thu, 08 Nov 2018 06:36:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=u5kHcGDhi0TMbDwNOXFMmLFf9OcT+nH7RFru3GHEeOE=;
        b=p3GcuzxNY0WlBfEy0zK/LdgAf1mG+WafZhi5KvWdGseuxaj+akoxVds/Ws9Gf0roOb
         QzdQgpCI238vthsIqXN0f0oCMTMV4n06odg/DODpO4ICtOeJdA8wmh09LIxndX+PmoRw
         InVQu/eE+u2GQA3YP4kSeTfd6+58S0PCmErOLqGHPjN3KATW9lBQkpINPAfV+tshZrIZ
         Znjcrc7G8Mj3vmWbuc9b1MTNGZfUAbdHy+45/0Dp6VFFbYqltCCicxIwXesAp80vMTIh
         AlzqErHAUd/b3ngkPMSGCE2GdBwei2463gxRS3uQ43oqZdWZHBbaNlPVP1fdZa25lC/X
         OBpw==
X-Received: by 2002:a1c:3c4:: with SMTP id 187-v6mr1426529wmd.90.1541687779820;
        Thu, 08 Nov 2018 06:36:19 -0800 (PST)
Received: from andreyknvl0.muc.corp.google.com ([2a00:79e0:15:10:84be:a42a:826d:c530])
        by smtp.gmail.com with ESMTPSA id k5-v6sm5421068wre.82.2018.11.08.06.36.18
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 08 Nov 2018 06:36:18 -0800 (PST)
From: Andrey Konovalov <andreyknvl@google.com>
To: Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Robin Murphy <robin.murphy@arm.com>,
        Kees Cook <keescook@chromium.org>,
        Kate Stewart <kstewart@linuxfoundation.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Ingo Molnar <mingo@kernel.org>,
        "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>,
        Shuah Khan <shuah@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-doc@vger.kernel.org,
        linux-mm@kvack.org, linux-arch@vger.kernel.org,
        linux-kselftest@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: Dmitry Vyukov <dvyukov@google.com>,
        Kostya Serebryany <kcc@google.com>,
        Evgeniy Stepanov <eugenis@google.com>,
        Lee Smith <Lee.Smith@arm.com>,
        Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
        Jacob Bramley <Jacob.Bramley@arm.com>,
        Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
        Chintan Pandya <cpandya@codeaurora.org>,
        Luc Van Oostenryck <luc.vanoostenryck@gmail.com>,
        Andrey Konovalov <andreyknvl@google.com>
Subject: [PATCH v8 0/8] arm64: untag user pointers passed to the kernel
Date: Thu,  8 Nov 2018 15:36:07 +0100
Message-Id: <cover.1541687720.git.andreyknvl@google.com>
X-Mailer: git-send-email 2.19.1.930.g4563a0d9d0-goog
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCngT1fSuRbYzAdAA--.4764S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Wr43ur1kCw1UKFyrGF4kJFb_yoWxGr4fp3
	yfGwsakF4ktryxKF4xWw17ZryrX3Z3Aa4Ykwn7Xr1jvw15CryIvr4xKFy3GrZrC393u3ya
	vF1rt3WUuayDAaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW5XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuYvjxUQWv3
	DUUUU

arm64 has a feature called Top Byte Ignore, which allows to embed pointer
tags into the top byte of each pointer. Userspace programs (such as
HWASan, a memory debugging tool [1]) might use this feature and pass
tagged user pointers to the kernel through syscalls or other interfaces.

Right now the kernel is already able to handle user faults with tagged
pointers, due to these patches:

1. 81cddd65 ("arm64: traps: fix userspace cache maintenance emulation on a
             tagged pointer")
2. 7dcd9dd8 ("arm64: hw_breakpoint: fix watchpoint matching for tagged
	      pointers")
3. 276e9327 ("arm64: entry: improve data abort handling of tagged
	      pointers")

When passing tagged pointers to syscalls, there's a special case of such a
pointer being passed to one of the memory syscalls (mmap, mprotect, etc.).
These syscalls don't do memory accesses but rather deal with memory
ranges, hence an untagged pointer is better suited.

This patchset extends tagged pointer support to non-memory syscalls. This
is done by reusing the untagged_addr macro to untag user pointers when the
kernel performs pointer checking to find out whether the pointer comes
from userspace (most notably in access_ok). The untagging is done only
when the pointer is being checked, the tag is preserved as the pointer
makes its way through the kernel.

One of the alternative approaches to untagging that was considered is to
completely strip the pointer tag as the pointer enters the kernel with
some kind of a syscall wrapper, but that won't work with the countless
number of different ioctl calls. With this approach we would need a custom
wrapper for each ioctl variation, which doesn't seem practical.

The following testing approaches has been taken to find potential issues
with user pointer untagging:

1. Static testing (with sparse [2] and separately with a custom static
   analyzer based on Clang) to track casts of __user pointers to integer
   types to find places where untagging needs to be done.

2. Dynamic testing: adding BUG_ON(has_tag(addr)) to find_vma() and running
   a modified syzkaller version that passes tagged pointers to the kernel.

Based on the results of the testing the requried patches have been added
to the patchset.

This patchset has been merged into the Pixel 2 kernel tree and is now
being used to enable testing of Pixel 2 phones with HWASan.

This patchset is a prerequisite for ARM's memory tagging hardware feature
support [3].

Thanks!

[1] http://clang.llvm.org/docs/HardwareAssistedAddressSanitizerDesign.html

[2] https://github.com/lucvoo/sparse-dev/commit/5f960cb10f56ec2017c128ef9d16060e0145f292

[3] https://community.arm.com/processors/b/blog/posts/arm-a-profile-architecture-2018-developments-armv85a

Changes in v8:
- Rebased onto 65102238 (4.20-rc1).
- Added a note to the cover letter on why syscall wrappers/shims that untag
  user pointers won't work.
- Added a note to the cover letter that this patchset has been merged into
  the Pixel 2 kernel tree.
- Documentation fixes, in particular added a list of syscalls that don't
  support tagged user pointers.

Changes in v7:
- Rebased onto 17b57b18 (4.19-rc6).
- Dropped the "arm64: untag user address in __do_user_fault" patch, since
  the existing patches already handle user faults properly.
- Dropped the "usb, arm64: untag user addresses in devio" patch, since the
  passed pointer must come from a vma and therefore be untagged.
- Dropped the "arm64: annotate user pointers casts detected by sparse"
  patch (see the discussion to the replies of the v6 of this patchset).
- Added more context to the cover letter.
- Updated Documentation/arm64/tagged-pointers.txt.

Changes in v6:
- Added annotations for user pointer casts found by sparse.
- Rebased onto 050cdc6c (4.19-rc1+).

Changes in v5:
- Added 3 new patches that add untagging to places found with static
  analysis.
- Rebased onto 44c929e1 (4.18-rc8).

Changes in v4:
- Added a selftest for checking that passing tagged pointers to the
  kernel succeeds.
- Rebased onto 81e97f013 (4.18-rc1+).

Changes in v3:
- Rebased onto e5c51f30 (4.17-rc6+).
- Added linux-arch@ to the list of recipients.

Changes in v2:
- Rebased onto 2d618bdf (4.17-rc3+).
- Removed excessive untagging in gup.c.
- Removed untagging pointers returned from __uaccess_mask_ptr.

Changes in v1:
- Rebased onto 4.17-rc1.

Changes in RFC v2:
- Added "#ifndef untagged_addr..." fallback in linux/uaccess.h instead of
  defining it for each arch individually.
- Updated Documentation/arm64/tagged-pointers.txt.
- Dropped "mm, arm64: untag user addresses in memory syscalls".
- Rebased onto 3eb2ce82 (4.16-rc7).

Reviewed-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Signed-off-by: Andrey Konovalov <andreyknvl@google.com>

Andrey Konovalov (8):
  arm64: add type casts to untagged_addr macro
  uaccess: add untagged_addr definition for other arches
  arm64: untag user addresses in access_ok and __uaccess_mask_ptr
  mm, arm64: untag user addresses in mm/gup.c
  lib, arm64: untag addrs passed to strncpy_from_user and strnlen_user
  fs, arm64: untag user address in copy_mount_options
  arm64: update Documentation/arm64/tagged-pointers.txt
  selftests, arm64: add a selftest for passing tagged pointers to kernel

 Documentation/arm64/tagged-pointers.txt       | 25 +++++++++++--------
 arch/arm64/include/asm/uaccess.h              | 14 +++++++----
 fs/namespace.c                                |  2 +-
 include/linux/uaccess.h                       |  4 +++
 lib/strncpy_from_user.c                       |  2 ++
 lib/strnlen_user.c                            |  2 ++
 mm/gup.c                                      |  4 +++
 tools/testing/selftests/arm64/.gitignore      |  1 +
 tools/testing/selftests/arm64/Makefile        | 11 ++++++++
 .../testing/selftests/arm64/run_tags_test.sh  | 12 +++++++++
 tools/testing/selftests/arm64/tags_test.c     | 19 ++++++++++++++
 11 files changed, 80 insertions(+), 16 deletions(-)
 create mode 100644 tools/testing/selftests/arm64/.gitignore
 create mode 100644 tools/testing/selftests/arm64/Makefile
 create mode 100755 tools/testing/selftests/arm64/run_tags_test.sh
 create mode 100644 tools/testing/selftests/arm64/tags_test.c

-- 
2.19.1.930.g4563a0d9d0-goog
