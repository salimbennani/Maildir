Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 13:50:34 -0000
Received: from icoremail.net (unknown [209.85.210.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH9ILku5bubihAQ--.48195S3;
	Fri, 16 Nov 2018 17:46:52 +0800 (CST)
Received: from mail-pf1-f182.google.com (unknown [209.85.210.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnB0MIku5bM7pIAA--.1264S3;
	Fri, 16 Nov 2018 17:46:48 +0800 (CST)
Received: by mail-pf1-f182.google.com with SMTP id u3-v6so8477133pfm.4
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 01:46:48 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:from:to:cc:references:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=46eTkeVMjJ9Lsr85ffM3S/gkIS+FxmzvC1G5adEfw0Y=;
        b=IfRJlmGTv0RPA513BLO/JjUaRHEAbBcAIP8n8w9n/Y2vo4lDw3Bwfzk/mA4yltoAsT
         DzRRLH6rUv/d9SaionDAR7FpUbXB5frp1fWNymdKomHd0UAB/rRtZ77iENjoVADEsnSm
         xjYI8xooqHmvErUCnuEspz62/nEzU8Dse5ibiqOotNZusT02Zc5wdDMGe+ie+dUfKNrQ
         Y7Fi1jaeNYKN05wuf3T5uj2dyBXxDCYUxFZ6RZ2Yfft89ISDFYQnGsOJJdYjm1I8w8HI
         ZlM2EelTnbQ7KXrZErysn8KsWY5+vJy8zgn8TCqd2VfbGJXMwNy/WfWJIyBx5OMuMhe3
         Rh9Q==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIlsLve3zReHIn74saHFq31k0xUrtwLxZMfUMIYF2NRagytMGTz
	ZbgSn4B4f818GL7lHV5Y1EF1aNIsfE0rCwug6zmmo3Z3VYwJ2As=
X-Received: by 2002:a62:c20b:: with SMTP id l11-v6mr10555731pfg.251.1542361608305;
        Fri, 16 Nov 2018 01:46:48 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp198824pju;
        Fri, 16 Nov 2018 01:46:47 -0800 (PST)
X-Google-Smtp-Source: AJdET5ceOWnnu7A680q8m35M2ZA5HYiLpSWx4BEqPCED6/UCyV7RjVd7cfkcaSxOhZbQhC8anMuY
X-Received: by 2002:a63:4566:: with SMTP id u38mr9260217pgk.4.1542361607165;
        Fri, 16 Nov 2018 01:46:47 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542361607; cv=none;
        d=google.com; s=arc-20160816;
        b=iT41qw+Ob0p/86afohbV3peGM6yy+N2HFV2wPCunp6ruL+6WWfgP0g+LTMbIptgHy2
         Bk2xd8SpzCKHE85EUIX+sTnO5yB0DKdAEYM8wN1rONAazGAJWOfdZvHg3M8aLk2hrCSp
         qBf4d/HYc2kBHSlBR3+lPoT8V2oP2P3lPXbtKM+RlqwQpwFEuwhH+64axTpx+0JvOWu1
         qgG7nYixwbVRIBLjKotYper5gwD0OFuNHkd+1Ofl+8lzievfa1abrBpUnxGC+2m9Ca0W
         F7OTOE/CpgWJWPmzdJJ1jBgqak8cDh4SVxTBs0SxqRohnB+A/pj3wxfFQtWrYjNIWrR2
         4KfQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:references:cc:to:from:subject;
        bh=46eTkeVMjJ9Lsr85ffM3S/gkIS+FxmzvC1G5adEfw0Y=;
        b=iCW5rA/Wilccr1rweTPwOeoc/Kr9QlkKnyejTZSPEPY+wONV6YZ6B/7HmUw+WU3h7w
         xELrpI+/sd1R4I0aYkU/lQ/CLvM4NHpRJqR6xSLJQ44g8EnHwj+COjmkfM5P4QgWL/wi
         VtWiCsxaNEjBRYFmXDm539iJwD8sqiJmwpZyVBFmD9XDxbp25QGFRGDBj8EB7MrRsJyR
         wlaILsb0VnJv+NmT1cEyMyGDG2yld6ABNzbUqglhITw1gPRBfy62gAs5t64usi/R6PZq
         HBVpdJWEhwdtOgP/4GX6RnE74V/lzT1Pf2EkyyQVO+CeCGX/L2Q2BMLPyrrlYe+nsmOB
         orZg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id s4si29316123pga.377.2018.11.16.01.46.32;
        Fri, 16 Nov 2018 01:46:47 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389385AbeKPT5z (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 14:57:55 -0500
Received: from szxga05-in.huawei.com ([45.249.212.191]:14679 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727398AbeKPT5z (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 14:57:55 -0500
Received: from DGGEMS406-HUB.china.huawei.com (unknown [172.30.72.58])
        by Forcepoint Email with ESMTP id D4B5F48A5FC82;
        Fri, 16 Nov 2018 17:46:18 +0800 (CST)
Received: from [127.0.0.1] (10.134.22.195) by DGGEMS406-HUB.china.huawei.com
 (10.3.19.206) with Microsoft SMTP Server id 14.3.408.0; Fri, 16 Nov 2018
 17:46:20 +0800
Subject: Re: [f2fs-dev] [PATCH] f2fs: add bio cache for IPU
From: Chao Yu <yuchao0@huawei.com>
To: Jaegeuk Kim <jaegeuk@kernel.org>
CC: <linux-kernel@vger.kernel.org>,
        <linux-f2fs-devel@lists.sourceforge.net>
References: <20181023083817.3466-1-yuchao0@huawei.com>
 <20181115075226.GA83610@jaegeuk-macbookpro.roam.corp.google.com>
 <944355f6-49d8-f579-aad6-53c54258e90b@huawei.com>
Message-ID: <0fcfcec5-7b09-603e-f8b7-1c6346dc17b3@huawei.com>
Date: Fri, 16 Nov 2018 17:46:19 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <944355f6-49d8-f579-aad6-53c54258e90b@huawei.com>
Content-Type: text/plain; charset="windows-1252"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.134.22.195]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnB0MIku5bM7pIAA--.1264S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKw4kAw4kXr18tr1UXry5urg_yoWfXw1xpF
	98KFZ5Gr4DJFy3W3Z2qFn8ZF1Svr1Fgry7uFWfG342v3sFvr1S93WxWr1F9ryxKrZ5GrW8
	XF40k3y3Gr98GFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkIecxE
	wVCI4VW8uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI42IY
	6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUDxsq
	DUUUU

Hi Jaegeuk,

On 2018/11/15 16:32, Chao Yu wrote:
> Hi Jaeguek,
> 
> On 2018/11/15 15:52, Jaegeuk Kim wrote:
>> Hi Chao,
>>
>> I suspect this brings a system stuck by missing bio being flushed. Please check
>> the changes.
> 
> Oh, let me check this patch.

I found one corner case below, but not very sure it can avoid system stuck.

	if (unlikely(f2fs_cp_error(sbi))) {
		if (bio && *bio) {
			__submit_bio(sbi, *bio, DATA);
			*bio = NULL;
		}
		f2fs_submit_merged_write(sbi, DATA);
		submitted = NULL;
	}

Anyway, let me send v2, could you please test this?

Thanks,

> 
> Thanks,
> 
>>
>> Thanks,
>>
>> On 10/23, Chao Yu wrote:
>>> SQLite in Wal mode may trigger sequential IPU write in db-wal file, after
>>> commit d1b3e72d5490 ("f2fs: submit bio of in-place-update pages"), we
>>> lost the chance of merging page in inner managed bio cache, result in
>>> submitting more small-sized IO.
>>>
>>> So let's add temporary bio in writepages() to cache mergeable write IO as
>>> much as possible.
>>>
>>> Test case:
>>> 1. xfs_io -f /mnt/f2fs/file -c "pwrite 0 65536" -c "fsync"
>>> 2. xfs_io -f /mnt/f2fs/file -c "pwrite 0 65536" -c "fsync"
>>>
>>> Before:
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65544, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65552, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65560, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65568, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65576, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65584, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65592, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65600, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65608, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65616, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65624, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65632, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65640, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65648, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65656, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65664, size = 4096
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), NODE, sector = 57352, size = 4096
>>>
>>> After:
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), DATA, sector = 65544, size = 65536
>>> f2fs_submit_write_bio: dev = (251,0)/(251,0), rw = WRITE(S), NODE, sector = 57368, size = 4096
>>>
>>> Signed-off-by: Chao Yu <yuchao0@huawei.com>
>>> ---
>>>  fs/f2fs/data.c    | 57 +++++++++++++++++++++++++++++++++++++++++++++--
>>>  fs/f2fs/f2fs.h    |  3 +++
>>>  fs/f2fs/segment.c |  5 ++++-
>>>  3 files changed, 62 insertions(+), 3 deletions(-)
>>>
>>> diff --git a/fs/f2fs/data.c b/fs/f2fs/data.c
>>> index 01b7f59523dc..0c8f18dc140d 100644
>>> --- a/fs/f2fs/data.c
>>> +++ b/fs/f2fs/data.c
>>> @@ -491,6 +491,49 @@ int f2fs_submit_page_bio(struct f2fs_io_info *fio)
>>>  	return 0;
>>>  }
>>>  
>>> +int f2fs_merge_page_bio(struct f2fs_io_info *fio)
>>> +{
>>> +	struct bio *bio = *fio->bio;
>>> +	struct page *page = fio->encrypted_page ?
>>> +			fio->encrypted_page : fio->page;
>>> +
>>> +	if (!f2fs_is_valid_blkaddr(fio->sbi, fio->new_blkaddr,
>>> +			__is_meta_io(fio) ? META_GENERIC : DATA_GENERIC))
>>> +		return -EFAULT;
>>> +
>>> +	trace_f2fs_submit_page_bio(page, fio);
>>> +	f2fs_trace_ios(fio, 0);
>>> +
>>> +	if (bio && (*fio->last_block + 1 != fio->new_blkaddr ||
>>> +			!__same_bdev(fio->sbi, fio->new_blkaddr, bio))) {
>>> +		__submit_bio(fio->sbi, bio, fio->type);
>>> +		bio = NULL;
>>> +	}
>>> +alloc_new:
>>> +	if (!bio) {
>>> +		bio = __bio_alloc(fio->sbi, fio->new_blkaddr, fio->io_wbc,
>>> +				BIO_MAX_PAGES, false, fio->type, fio->temp);
>>> +		*fio->last_block = fio->new_blkaddr;
>>> +		bio_set_op_attrs(bio, fio->op, fio->op_flags);
>>> +	}
>>> +
>>> +	if (bio_add_page(bio, page, PAGE_SIZE, 0) < PAGE_SIZE) {
>>> +		__submit_bio(fio->sbi, bio, fio->type);
>>> +		bio = NULL;
>>> +		goto alloc_new;
>>> +	}
>>> +
>>> +	if (fio->io_wbc)
>>> +		wbc_account_io(fio->io_wbc, page, PAGE_SIZE);
>>> +
>>> +	*fio->last_block = fio->new_blkaddr;
>>> +
>>> +	inc_page_count(fio->sbi, WB_DATA_TYPE(fio->page));
>>> +
>>> +	*fio->bio = bio;
>>> +	return 0;
>>> +}
>>> +
>>>  void f2fs_submit_page_write(struct f2fs_io_info *fio)
>>>  {
>>>  	struct f2fs_sb_info *sbi = fio->sbi;
>>> @@ -1899,6 +1942,8 @@ int f2fs_do_write_data_page(struct f2fs_io_info *fio)
>>>  }
>>>  
>>>  static int __write_data_page(struct page *page, bool *submitted,
>>> +				struct bio **bio,
>>> +				sector_t *last_block,
>>>  				struct writeback_control *wbc,
>>>  				enum iostat_type io_type)
>>>  {
>>> @@ -1924,6 +1969,8 @@ static int __write_data_page(struct page *page, bool *submitted,
>>>  		.need_lock = LOCK_RETRY,
>>>  		.io_type = io_type,
>>>  		.io_wbc = wbc,
>>> +		.bio = bio,
>>> +		.last_block = last_block,
>>>  	};
>>>  
>>>  	trace_f2fs_writepage(page, DATA);
>>> @@ -2051,7 +2098,7 @@ static int __write_data_page(struct page *page, bool *submitted,
>>>  static int f2fs_write_data_page(struct page *page,
>>>  					struct writeback_control *wbc)
>>>  {
>>> -	return __write_data_page(page, NULL, wbc, FS_DATA_IO);
>>> +	return __write_data_page(page, NULL, NULL, NULL, wbc, FS_DATA_IO);
>>>  }
>>>  
>>>  /*
>>> @@ -2067,6 +2114,8 @@ static int f2fs_write_cache_pages(struct address_space *mapping,
>>>  	int done = 0;
>>>  	struct pagevec pvec;
>>>  	struct f2fs_sb_info *sbi = F2FS_M_SB(mapping);
>>> +	struct bio *bio = NULL;
>>> +	sector_t last_block;
>>>  	int nr_pages;
>>>  	pgoff_t uninitialized_var(writeback_index);
>>>  	pgoff_t index;
>>> @@ -2154,7 +2203,8 @@ static int f2fs_write_cache_pages(struct address_space *mapping,
>>>  			if (!clear_page_dirty_for_io(page))
>>>  				goto continue_unlock;
>>>  
>>> -			ret = __write_data_page(page, &submitted, wbc, io_type);
>>> +			ret = __write_data_page(page, &submitted, &bio,
>>> +						&last_block, wbc, io_type);
>>>  			if (unlikely(ret)) {
>>>  				/*
>>>  				 * keep nr_to_write, since vfs uses this to
>>> @@ -2201,6 +2251,9 @@ static int f2fs_write_cache_pages(struct address_space *mapping,
>>>  	if (nwritten)
>>>  		f2fs_submit_merged_write_cond(F2FS_M_SB(mapping), mapping->host,
>>>  								NULL, 0, DATA);
>>> +	/* submit cached bio of IPU write */
>>> +	if (bio)
>>> +		__submit_bio(sbi, bio, DATA);
>>>  
>>>  	return ret;
>>>  }
>>> diff --git a/fs/f2fs/f2fs.h b/fs/f2fs/f2fs.h
>>> index 8932276015f9..6af2a105529d 100644
>>> --- a/fs/f2fs/f2fs.h
>>> +++ b/fs/f2fs/f2fs.h
>>> @@ -1042,6 +1042,8 @@ struct f2fs_io_info {
>>>  	bool retry;		/* need to reallocate block address */
>>>  	enum iostat_type io_type;	/* io type */
>>>  	struct writeback_control *io_wbc; /* writeback control */
>>> +	struct bio **bio;		/* bio for ipu */
>>> +	sector_t *last_block;		/* last block number in bio */
>>>  	unsigned char version;		/* version of the node */
>>>  };
>>>  
>>> @@ -3085,6 +3087,7 @@ void f2fs_submit_merged_write_cond(struct f2fs_sb_info *sbi,
>>>  				nid_t ino, enum page_type type);
>>>  void f2fs_flush_merged_writes(struct f2fs_sb_info *sbi);
>>>  int f2fs_submit_page_bio(struct f2fs_io_info *fio);
>>> +int f2fs_merge_page_bio(struct f2fs_io_info *fio);
>>>  void f2fs_submit_page_write(struct f2fs_io_info *fio);
>>>  struct block_device *f2fs_target_device(struct f2fs_sb_info *sbi,
>>>  			block_t blk_addr, struct bio *bio);
>>> diff --git a/fs/f2fs/segment.c b/fs/f2fs/segment.c
>>> index 3aa2f00262b3..b51b182dd7f4 100644
>>> --- a/fs/f2fs/segment.c
>>> +++ b/fs/f2fs/segment.c
>>> @@ -3194,7 +3194,10 @@ int f2fs_inplace_write_data(struct f2fs_io_info *fio)
>>>  
>>>  	stat_inc_inplace_blocks(fio->sbi);
>>>  
>>> -	err = f2fs_submit_page_bio(fio);
>>> +	if (fio->bio)
>>> +		err = f2fs_merge_page_bio(fio);
>>> +	else
>>> +		err = f2fs_submit_page_bio(fio);
>>>  	if (!err)
>>>  		update_device_state(fio);
>>>  
>>> -- 
>>> 2.18.0.rc1
>>
>> .
>>
> 
> 
> 
> _______________________________________________
> Linux-f2fs-devel mailing list
> Linux-f2fs-devel@lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/linux-f2fs-devel
> 
> .
> 
