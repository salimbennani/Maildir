Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 19 Nov 2018 00:47:28 -0000
Received: from icoremail.net (unknown [209.85.215.175])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_ycOs_Fbk8WyAQ--.53329S3;
	Mon, 19 Nov 2018 02:44:30 +0800 (CST)
Received: from mail-pg1-f175.google.com (unknown [209.85.215.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDHrkoLs_FbQ55SAA--.16352S3;
	Mon, 19 Nov 2018 02:44:27 +0800 (CST)
Received: by mail-pg1-f175.google.com with SMTP id 17so12530969pgg.1
        for <xuliker@zju.edu.cn>; Sun, 18 Nov 2018 10:44:27 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=Z7jWucpNbcARGImXzn3CViVjGpMa7ko5qvrz96R9Lrc=;
        b=azIU3eTQLCyERE8pVu2yuTnT225OMsKU0AzhuLWsz84UUkMeBFX4eC+qCMdK7CmvKp
         OdKP37WTwXIbLCCLwlqWoSl6TUfJNjxBaDAoPBA3xamCcCfYg874QV9KS6zIi5ga7RKO
         etWOxlj4bWCFN3g71fofiSxR2ckk2+hPEA441XSjnsIP2bvIfyGOVtUIW0/EOBxzewIW
         uilDzgiALC/P/BA8Zey1EdTG6ZQTxiKbX5ISegZP/GYaMJnv7MQozDJOlIItjv6H3YU8
         OkUMQdN3nxrk4IUL1Y2jbggK1G6cqANb1ofG9yR6bCoRf0fg0RNmu/G/Rb5iXN54tUUB
         uURA==
X-Gm-Message-State: AGRZ1gIZtOG8gDyFA2Os+6/aQisjsn7kBe3QZzL6QyTXl4nPH3HFfIk6
	r+Wa9vsMGVhcYGqxsfvWyczebu6Ll6s+r/6uPgTdjcGgKSjdY5I=
X-Received: by 2002:a62:ab0d:: with SMTP id p13mr19344034pff.211.1542566667529;
        Sun, 18 Nov 2018 10:44:27 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1796997pju;
        Sun, 18 Nov 2018 10:44:26 -0800 (PST)
X-Google-Smtp-Source: AJdET5c+y16gNgvIuMThYkz5EEuFTp2ZyD7tMH3PMua5JA9XfoBunaBiLkumb6wqoEY88na59Y2X
X-Received: by 2002:a63:66c6:: with SMTP id a189mr17471635pgc.167.1542566666603;
        Sun, 18 Nov 2018 10:44:26 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542566666; cv=none;
        d=google.com; s=arc-20160816;
        b=ck406hHLji31YYsJcuHuJR1jOlCoaWT4tvt1QrToDYvgb6qUqWDt1DXur9juhBJMdH
         IKSo+8Xc+EuKbp4n9nEJg6LpvJX3hkk20Y6wJPk8nnIDKa5tAZ0jpUC55DfbfDVONoP8
         InsMIYPzRRrlAtqXsF3uwhVZk+KvYMLvwQjCAU4M8G95rXA/zC55680XQQLyse3k2wq1
         amecQD0jGAC4hyzzA5XOPhrI6+0Cij3cW20Vsxkfn45RRvjCRBnZWst8zvlgCLMeo6SI
         IBeJFphPv7S0XeWMJ3RmN/QpykWOG70Qj/UjWqcLVoMlG00VIXvgd7Hy/FadhO9b6f0g
         cUgA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :references:in-reply-to:mime-version:dkim-signature;
        bh=Z7jWucpNbcARGImXzn3CViVjGpMa7ko5qvrz96R9Lrc=;
        b=wjZ0cUV9CosiF1RkMeHjzmLbrcPpCMhM57jy8I4ifDleyHkExmLo4AZ63zEXj23UX8
         GMGapzCtwTDioggJQaZnFp2xo8g2SI9PpVHt/+fP+rSJsjh9pi2NZcr117NzM8n/Rw8/
         oWZcORGIH+CF3+LKN/PGYAVw5H7PBEogS3fdvexdK+k6mN8IowQk8wy0r3KeB8rKYB8+
         eMwVK1iH2RNxMbxmF//YBF5knbg2gHSScogeP6aIr/KZweow3Cychg+98OxkKU1V0m48
         62skeRrOgML+a3BDh58E06FWJZmgMtjLfZkQhOfLTNewtveCs7GQf12Mk1fgY9u3aPq6
         Y2Fw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=D45NGXHG;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 133si34792713pge.246.2018.11.18.10.43.59;
        Sun, 18 Nov 2018 10:44:26 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725919AbeKSFE4 (ORCPT <rfc822;xtanabe@gmail.com> + 99 others);
        Mon, 19 Nov 2018 00:04:56 -0500
Received: from mail-vk1-f193.google.com ([209.85.221.193]:36762 "EHLO
        mail-vk1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725762AbeKSFEz (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 00:04:55 -0500
Received: by mail-vk1-f193.google.com with SMTP id u62so6314439vkb.3
        for <linux-kernel@vger.kernel.org>; Sun, 18 Nov 2018 10:43:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=Z7jWucpNbcARGImXzn3CViVjGpMa7ko5qvrz96R9Lrc=;
        b=D45NGXHGV/gmLWEgZmR5gFIPiCE/iTb/IQDIIwM9Wjf2n3Q8X7quL0uxGakZYcQj5b
         418dIf8jwjcm2e55wB2ilJClX9dbUFM1KfXizPfALL4Nkb4ID9V67CXdBFNWFQSkLZmu
         aDRzBF//TWaMKDElx/eAetE7xpHNLyVdvcT4xqhDdF8iJrqZABfjkHmE2Xp7KnYUlJn9
         kYmxSFnNip04I2qHh6ow+aa76czNRQM5ubNQoBSfXJxyLmL+KbKLartxUFpz8eA8BpNs
         jPh2dU3pwjIRHgkdWd46OFw4rGight/TG1/Th3cP8njQAW84GTcQvRG6zS69/mMxGsbF
         jXWw==
X-Received: by 2002:a1f:f203:: with SMTP id q3mr7793280vkh.54.1542566633586;
 Sun, 18 Nov 2018 10:43:53 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a67:f48d:0:0:0:0:0 with HTTP; Sun, 18 Nov 2018 10:43:52
 -0800 (PST)
In-Reply-To: <CALCETrVscRwQG55-j1SKc2TmSb1-=5861804ojUuviNzdyDOrA@mail.gmail.com>
References: <20181118111751.6142-1-christian@brauner.io> <CAKOZuet3s0WxxPgrtrNkq8YiOWhYAiK6yEio6PKVV9J_H4_TSA@mail.gmail.com>
 <CALCETrUd2Y2MmO8Qx8aUvQDOTNiyj35Y7bctPBZe0p2i1EUiLw@mail.gmail.com>
 <CAKOZuev1JUGFWuwsKqS6rXcFMqpCHT1VAG2kwB4O=FHo6DAFiQ@mail.gmail.com>
 <CALCETrVLP_mudJTW6EQpRr5GZ7kfuGci+QCT1uPrOVDTWcod-A@mail.gmail.com>
 <a7f50692-667c-4efe-a2d0-fa324eebb90b@infradead.org> <CAKOZueutLc8d0Fe+7dNWiZKnALhTSST8+kCnOrL+OmB6coUmtA@mail.gmail.com>
 <CALCETrVg71XBv-gMOtL-m0Dd0HNz8_oXOUDSWin5LeViAL0UYA@mail.gmail.com>
 <CAKOZuesCKo4GH9fdum2EUFLrtTWam3aizcDQUn3-vCYg4T1P8w@mail.gmail.com>
 <CALCETrUeNZPfrSYa9vH5Ukrk1Y+Kb9GkZOh6LkqG6Z9NpK5P0w@mail.gmail.com>
 <CAKOZuevVk_aH_2TuiNcmxgMa+gHXMBXz6Uu5a6TDjoxjhaE36g@mail.gmail.com> <CALCETrVscRwQG55-j1SKc2TmSb1-=5861804ojUuviNzdyDOrA@mail.gmail.com>
From: Daniel Colascione <dancol@google.com>
Date: Sun, 18 Nov 2018 10:43:52 -0800
Message-ID: <CAKOZuevRq-igh06zS_nsGG400zXrKFCtajpEG9-xgU2+Rtb2Pw@mail.gmail.com>
Subject: Re: [PATCH] proc: allow killing processes via file descriptors
To: Andy Lutomirski <luto@kernel.org>
Cc: Randy Dunlap <rdunlap@infradead.org>,
        Christian Brauner <christian@brauner.io>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Aleksa Sarai <cyphar@cyphar.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS Devel <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Tim Murray <timmurray@google.com>,
        Kees Cook <keescook@chromium.org>,
        Jan Engelhardt <jengelh@inai.de>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDHrkoLs_FbQ55SAA--.16352S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXF18Kr18JFWfZw45KFWkXrb_yoWrKry5pF
	WrKF4YkF1kJaySy34xXr48ZF1rt3s5JrZxGr9xKryjvwn8ur109r4Sqw4aka4xZrsaka1j
	qan0qw17A3sxZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMx
	kF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6rylc2Ij
	II80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1j6r1xMxvI42IY6xIIjxv20xvEc7
	CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4j6F4UMxvI42IY6I8E87Iv6xkF7I0E
	14v26r4j6r4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwCFI7km07C267AKxVW8ZVWrXwC20s026c02F40E
	14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIx
	kGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6rWUJVWrZr1UYxBIdaVFxhVjvjDU0xZF
	pf9x07bPAp5UUUUU=

On Sun, Nov 18, 2018 at 10:28 AM, Andy Lutomirski <luto@kernel.org> wrote:
> On Sun, Nov 18, 2018 at 9:51 AM Daniel Colascione <dancol@google.com> wrote:
>>
>> > I'm not entirely sure that ship has sailed.  In the kernel, we already
>> > have a bit of a distinction between a pid (and tid, etc -- I'm
>> > referring to struct pid) and a task.  If we make a new
>> > process-management API, we could put a distinction like this into the
>> > API.
>>
>> It would be a disaster to have different APIs give callers a different
>> idea of process identity over its lifetime. The precedent is
>> well-established that execve and setreuid do not change a process's
>> identity. Invaliding some identifiers but not others in response to
>> supposedly-internal things a process might do under rare circumstances
>> is creating a bug machine..
>
> Here's my point: if we're really going to make a new API to manipulate
> processes by their fd, I think we should have at least a decent idea
> of how that API will get extended in the future.  Right now, we have
> an extremely awkward situation where opening an fd in /proc requires
> certain capabilities or uids, and using those fds often also checks
> current's capabilities, and the target process may have changed its
> own security context, including gaining privilege via SUID, SGID, or
> LSM transition rules in the mean time.  This has been a huge source of
> security bugs.  It would be nice to have a model for future APIs that
> avoids these problems.
>
> And I didn't say in my proposal that a process's identity should
> fundamentally change when it calls execve().  I'm suggesting that
> certain operations that could cause a process to gain privilege or
> otherwise require greater permission to introspect (mainly execve)
> could be handled by invalidating the new process management fds.
> Sure, if init re-execs itself, it's still PID 1, but that doesn't
> necessarily mean that:
>
> fd = process_open_management_fd(1);
> [init reexecs]
> process_do_something(fd);
>
> needs to work.

PID 1 is a bad example here, because it doesn't get recycled. Other
PIDs do. The snippet you gave *does* need to work, in general, because
if exec invalidates the handle, and you need to reopen by PID to
re-establish your right to do something with the process, that process
may in fact have died between the invalidation and your reopen, and
your reopened FD may refer to some other random process.

The only way around this problem is to have two separate FDs --- one
to represent process identity, which *must* be continuous across
execve, and the other to represent some specific capability, some
ability to do something to that process. It's reasonable to invalidate
capability after execve, but it's not reasonable to invalidate
identity. In concrete terms, I don't see a big advantage to this
separation, and I think a single identity FD combined with
per-operation capability checks is sufficient. And much simpler.

>> > setresuid() has no effect
>> > here -- if you have W access to the process and the process calls
>> > setresuid(), you still have W access.
>>
>> Now you've created a situation in which an operation that security
>> policy previously blocked now becomes possible, invaliding previous
>> designs based on the old security invariant. That's the definition of
>> introducing a security hole.
>
> I think you're overstating your case.  To a pretty good approximation,
> setresuid() allows the caller to remove elements from the set {ruid,
> suid, euid}, unless the caller has CAP_SETUID.  If you could ptrace a
> process before it calls setresuid(), you might as well be able to
> ptrace() it after, since you could have just ptraced it and made it
> call setresuid() while still ptracing it.

What about a child that execs a setuid binary?

> Similarly, it seems like
> it's probably safe to be able to open an fd that lets you watch the
> exit status of a process, have the process call setresuid(), and still
> see the exit status.

Is it? That's an open question.

>
> Regardless of how you feel about these issues, if you're going to add
> an API by which you open an fd, wait for a process to exit, and read
> the exit status, you need to define the conditions under which you may
> open the fd and under which you may read the exit status once you have
> the fd.  There are probably multiple valid answers, but the question
> still needs to be answered.

Yes. That's the point I made in that previous message of mine that I referenced.

> My POLLERR hack, aside from being ugly,
> avoids this particular issue because it merely lets you wait for
> something you already could have observed using readdir().

Yes. I mentioned this same issue-punting as the motivation behind
exithand, initially, just reading EOF on exit.
