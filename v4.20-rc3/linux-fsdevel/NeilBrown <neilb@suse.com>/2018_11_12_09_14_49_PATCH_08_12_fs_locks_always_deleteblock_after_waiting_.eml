Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:36:31 -0000
Received: from icoremail.net (unknown [209.85.214.174])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH8Lx1OhbjkV5AQ--.36553S3;
	Mon, 12 Nov 2018 09:18:42 +0800 (CST)
Received: from mail-pl1-f174.google.com (unknown [209.85.214.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3kT3v1OhbS_4uAA--.6889S3;
	Mon, 12 Nov 2018 09:18:40 +0800 (CST)
Received: by mail-pl1-f174.google.com with SMTP id r3-v6so2729475pls.12
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 17:18:40 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:date:subject:cc:message-id:in-reply-to:references
         :user-agent:mime-version:content-transfer-encoding:sender:precedence
         :list-id;
        bh=7tqzyewmNhLKvuKeYw3WBrImrKbhLufjXlw6UouDzWY=;
        b=C6XvWr3j9OKWwaM5R9CJgFOBwxyXJ1YapobywkmPj1E/cJTXIAI2QJXNcSLNFVBpxB
         0urRS3ZzQ56FvPuJ3nLkQHOwsXQC5RH2oMnhYlQquqQgBBFjD56hNdMy/DCT/IqY4wQT
         Jq6ZKM8AYyoJOAcciDTVwtTpvzM0z0tAF3j5vbpEwd0sjc6g8ji76yi7ZdXF7wo+rBfK
         MtoNqZZxnBwH4jVVVEuYQHUjlC2aRLSzsoQ2RsW7gEGh2R/3cEBh16qTAa7lql2fJxiC
         CqsXpyoqG1YFNZA3hfh3xoFvjKSVY7GEq0pzVaUjOl7F/+ZEJHsXhdazh9HeDXd301ku
         mSqA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gK1pQ+gTNsuPVjDKK+9CH+1fbOcRfVUrg50TNYX60YlQrd3WKlm
	37MfYtGgjOyPq1pdnQseKbqapNT3hHZ6mqggkja/11nLjRsTRO8aoQ==
X-Received: by 2002:a17:902:6b4b:: with SMTP id g11-v6mr18060870plt.213.1541985519703;
        Sun, 11 Nov 2018 17:18:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2637407pjt;
        Sun, 11 Nov 2018 17:18:39 -0800 (PST)
X-Google-Smtp-Source: AJdET5dnPYnny6tiQpKfMAq8r0dR5okfnMSPFNFLMJ0fBZSp6qTHCcXtsTzhBhmfRDCFP44ZC+bQ
X-Received: by 2002:a62:2211:: with SMTP id i17-v6mr17944210pfi.35.1541985519051;
        Sun, 11 Nov 2018 17:18:39 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541985519; cv=none;
        d=google.com; s=arc-20160816;
        b=HANedCqejCzhsE1rzLn/LE7JCrU0GKBLxatXhZy7PFRFAnuglCedMappfrZuM9+0eZ
         mXkmLMKupcBhGAMyJ8KX+wUAH4GJXhSLTf0P4wHFGWRxL8evNpj3vbiiF5H/wSi8Jk8g
         C0HB4Eh5MyJzom1QYuMYgaxhJuFfqvhf2w8HynSPvglpG7bi2ihFNVr6jk4IhyBKTOeG
         AzpEjhg8Xe5xEmx3cDz1fpQR1PWvE4FB+KeiQithMwpIotX32hPaG1aplkARdD5JkUdb
         5DOBWJy/HqU79eI0vOUQrGWB7zhczzedRKiYUrklnq8d0AXi1WwZZG5DRDEsAOLX5fN0
         gWPw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:cc:subject:date:to
         :from;
        bh=7tqzyewmNhLKvuKeYw3WBrImrKbhLufjXlw6UouDzWY=;
        b=HGkeO0whzSVYpCakip8scV7M5SWppnuHwjHy8knKN7BTgtiYY7ZtVPQB8/WXfEXQba
         mjxEhtrnx+SQNfyst/HJuB7PWmKQNHz+W2KwCQYRORqO+8WFPMCqNxE5b8LmXY+Vzs1R
         RkkDsYx6KNnb+83VQNl8ubMnF/+Co9ujtQPuV0rHxQqhatlxyJ9tNk/bccQbX+5jDhVt
         bSGGLUS/79pH6osbBH5GLi8LTCPZLTx9sK2SgN7YDgoD0oxwD2oFvUnL9WR1U6olfCwu
         64/JRA2ghPVEPBThzMZKAxUYMLSS4x6r1k3xUTDQ5KlSz/D55hmUZJ/mTq3w7hixvl6p
         nFVQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e9si1633413plt.330.2018.11.11.17.18.24;
        Sun, 11 Nov 2018 17:18:39 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730154AbeKLLIT (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 06:08:19 -0500
Received: from mx2.suse.de ([195.135.220.15]:56894 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726674AbeKLLIS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 06:08:18 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 1C641ADE3;
        Mon, 12 Nov 2018 01:17:35 +0000 (UTC)
From: NeilBrown <neilb@suse.com>
To: Jeff Layton <jlayton@kernel.org>,
        Alexander Viro <viro@zeniv.linux.org.uk>
Date: Mon, 12 Nov 2018 12:14:49 +1100
Subject: [PATCH 08/12] fs/locks: always delete_block after waiting.
Cc: "J. Bruce Fields" <bfields@fieldses.org>,
        Martin Wilck <mwilck@suse.de>, linux-fsdevel@vger.kernel.org,
        Frank Filz <ffilzlnx@mindspring.com>,
        linux-kernel@vger.kernel.org
Message-ID: <154198528917.14364.12807627735259492190.stgit@noble>
In-Reply-To: <154198490921.14364.13726904731989686092.stgit@noble>
References: <154198490921.14364.13726904731989686092.stgit@noble>
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3kT3v1OhbS_4uAA--.6889S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW7urWfCFy5uFWrGrWfCF13XFb_yoW8AFy3pr
	ZxW3ZxCF4kWry2gwn2qayDZ3WFqwsFgFW7Crn3t3WxJFy8Xrnxur1ktryagFyYkrZ3Ja95
	X3WrGry3u3WDXFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBEb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VWkMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07b1tCwUUUUU
	=

Now that requests can block other requests, we
need to be careful to always clean up those blocked
requests.
Any time that we wait for a request, we might have
other requests attached, and when we stop waiting,
we must clean them up.
If the lock was granted, the requests might have been
moved to the new lock, though when merged with a
pre-exiting lock, this might not happen.
In all cases we don't want blocked locks to remain
attached, so we remove them to be safe.

Signed-off-by: NeilBrown <neilb@suse.com>
---
 fs/locks.c |   24 +++++++++---------------
 1 file changed, 9 insertions(+), 15 deletions(-)

diff --git a/fs/locks.c b/fs/locks.c
index c1b79293007b..8d9d79e7a565 100644
--- a/fs/locks.c
+++ b/fs/locks.c
@@ -1272,12 +1272,10 @@ static int posix_lock_inode_wait(struct inode *inode, struct file_lock *fl)
 		if (error != FILE_LOCK_DEFERRED)
 			break;
 		error = wait_event_interruptible(fl->fl_wait, !fl->fl_blocker);
-		if (!error)
-			continue;
-
-		locks_delete_block(fl);
-		break;
+		if (error)
+			break;
 	}
+	locks_delete_block(fl);
 	return error;
 }
 
@@ -1966,12 +1964,10 @@ static int flock_lock_inode_wait(struct inode *inode, struct file_lock *fl)
 		if (error != FILE_LOCK_DEFERRED)
 			break;
 		error = wait_event_interruptible(fl->fl_wait, !fl->fl_blocker);
-		if (!error)
-			continue;
-
-		locks_delete_block(fl);
-		break;
+		if (error)
+			break;
 	}
+	locks_delete_block(fl);
 	return error;
 }
 
@@ -2245,12 +2241,10 @@ static int do_lock_file_wait(struct file *filp, unsigned int cmd,
 		if (error != FILE_LOCK_DEFERRED)
 			break;
 		error = wait_event_interruptible(fl->fl_wait, !fl->fl_blocker);
-		if (!error)
-			continue;
-
-		locks_delete_block(fl);
-		break;
+		if (error)
+			break;
 	}
+	locks_delete_block(fl);
 
 	return error;
 }

