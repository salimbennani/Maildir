Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:36:32 -0000
Received: from icoremail.net (unknown [209.85.210.182])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f_kB1ehbBUZ5AQ--.36371S3;
	Mon, 12 Nov 2018 09:18:57 +0800 (CST)
Received: from mail-pf1-f182.google.com (unknown [209.85.210.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBkL_1Ohbkv4uAA--.22238S3;
	Mon, 12 Nov 2018 09:18:55 +0800 (CST)
Received: by mail-pf1-f182.google.com with SMTP id x2-v6so3458261pfm.7
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 17:18:55 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:date:subject:cc:message-id:in-reply-to:references
         :user-agent:mime-version:content-transfer-encoding:sender:precedence
         :list-id;
        bh=qAFokdeFCgrByfufqPTQBJQrVPllSI+ZZWB3RxNZQLI=;
        b=aJEK6HPP/fXXa4hZ5JZcF2xGAyafG70WBV0BBGe0AkLvu+UDI1CHGTqHSguytdUfQZ
         v85xzyBb5e6y1RvQWbTfc62kPM85ZNLUVY+WG8AZ2MWrbW5Mp13l36KqN9v0IWsRymJg
         ICPWu4IIUY7GnO2b5nFQKfW1kPqMCrZIJGiJjYNb6LqCPHFP5+bo5My38eIlWSpPBwaM
         fVD2eHdOOaEKvVAkh5FulDecYSRMe3ElxwYEXfqeXDI8m+hwXFBiqZb7prBU3tj29Oxn
         L6B2nLw8g3A/aBqB55sHoHZgBKlqlBSSA478w3ivjux0c+QrQ7j+uHSz3XMbupGtSJkU
         TnDQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIOo2UTQyTL/coSyWEM11sQYvroK8B4MZ6L8cepmcUaFJ0OTj0Z
	fZGd+TCay4r1aIfUwtzvurw5DkShyR7y1U0SYHg9Ik7toujMmK+ziQ==
X-Received: by 2002:a62:6241:: with SMTP id w62-v6mr6181236pfb.69.1541985534950;
        Sun, 11 Nov 2018 17:18:54 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2637588pjt;
        Sun, 11 Nov 2018 17:18:54 -0800 (PST)
X-Google-Smtp-Source: AJdET5dlj8UVTqz5zFUpuUOkL3JJ3XK9vtK3/CRRlqbrzG9Jl847qRLaSWIJ/QLiFe1WGl1B9wDB
X-Received: by 2002:a62:d452:: with SMTP id u18-v6mr9915555pfl.32.1541985534239;
        Sun, 11 Nov 2018 17:18:54 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541985534; cv=none;
        d=google.com; s=arc-20160816;
        b=08/QwtOpkX6HLkOhdbsObH5t7bH49ZBzVHZ2sR25lT84ysXZPX+jU/T6hnHk1d3Xa1
         AUIvcOSIKeQYKly6yY6QUtGbVdjNFFBN26HrM0O9tS0NSN4vYW8u1u376fIjSKDsHnWn
         xX8lM5D7dK7SwlXy8zxu09bsyJMpkNKJ3YW9MRBbpCwKgl7T4oi6ete2+QzghYmKjoSP
         JcGBCL06mKns3to50e1ua44CKVKCAP7oau7LOKf25So1bYKhaoPECwupg5L+JTrr56N3
         oNDbsJl9gHKBV8sE//wlfBg0JeRY4YgbPjjF5Knkok1yDBoPnczVGhb8icke+Ok8f/MM
         g8kA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:cc:subject:date:to
         :from;
        bh=qAFokdeFCgrByfufqPTQBJQrVPllSI+ZZWB3RxNZQLI=;
        b=o8ryldsJdudzockYz4pn8SN0mboQFhDT1ddm0p+8X+cnV9krpcGJE00Dfg6Ny0RAb/
         iewoe8kshUpXIGwyLw3lP0Y2RT7jECb0gMTAH0+mYHVuKndSBBF+T1lUe+usM2xKUQcI
         SWMj8LwvLM5EU3bIQwVl5bEK7pxxg36x/djNMzSy9vcvoxqYOB0lAe7dK+x/JJxPxx5x
         VZ1yk4INQDD+QpMGJfFqc4hBqef+IJ6kBuT48DbKX/mbPdKQwEbk1oOOkHvV+tmHhf+o
         9QNM9qXwU7PXdSaChudtw7MrpavCHsaoEu2nKovAaqNFNI/qBc2bouhqP8+TDvqdXyH3
         a98g==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id j61-v6si16754533plb.121.2018.11.11.17.18.39;
        Sun, 11 Nov 2018 17:18:54 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730202AbeKLLIZ (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 06:08:25 -0500
Received: from mx2.suse.de ([195.135.220.15]:56908 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726674AbeKLLIZ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 06:08:25 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id A6A38ADE3;
        Mon, 12 Nov 2018 01:17:41 +0000 (UTC)
From: NeilBrown <neilb@suse.com>
To: Jeff Layton <jlayton@kernel.org>,
        Alexander Viro <viro@zeniv.linux.org.uk>
Date: Mon, 12 Nov 2018 12:14:49 +1100
Subject: [PATCH 09/12] fs/locks: change all *_conflict() functions to return
 bool.
Cc: "J. Bruce Fields" <bfields@fieldses.org>,
        Martin Wilck <mwilck@suse.de>, linux-fsdevel@vger.kernel.org,
        Frank Filz <ffilzlnx@mindspring.com>,
        linux-kernel@vger.kernel.org
Message-ID: <154198528921.14364.15830559989399274920.stgit@noble>
In-Reply-To: <154198490921.14364.13726904731989686092.stgit@noble>
References: <154198490921.14364.13726904731989686092.stgit@noble>
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBkL_1Ohbkv4uAA--.22238S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF17Jr1UWr43ArykKFy5XFb_yoW5Gr1DpF
	43Xry5CF40gF1rZ3Z2yFn7CF1rZwsaqFyxZryrW3yYyr17Jw4kWFW3J3y2k3yagrWxGrsx
	XF4rta45u3WUAa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9lb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY02Avz4vEIxC_KwCY0x0Ix7I2Y4AK64vI
	r41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JV
	WxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l
	42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4I
	kC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWU
	WwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rV
	W8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUQs2-DUUUU

posix_locks_conflict() and flock_locks_conflict() both return int.
leases_conflict() returns bool.

This inconsistency will cause problems for the next patch if not
fixed.

So change posix_locks_conflict() and flock_locks_conflict() to return
bool.
Also change the locks_conflict() helper.

And convert some
   return (foo);
to
   return foo;

Signed-off-by: NeilBrown <neilb@suse.com>
---
 fs/locks.c |   27 +++++++++++++++------------
 1 file changed, 15 insertions(+), 12 deletions(-)

diff --git a/fs/locks.c b/fs/locks.c
index 8d9d79e7a565..74b24191d6e6 100644
--- a/fs/locks.c
+++ b/fs/locks.c
@@ -795,47 +795,50 @@ locks_delete_lock_ctx(struct file_lock *fl, struct list_head *dispose)
 /* Determine if lock sys_fl blocks lock caller_fl. Common functionality
  * checks for shared/exclusive status of overlapping locks.
  */
-static int locks_conflict(struct file_lock *caller_fl, struct file_lock *sys_fl)
+static bool locks_conflict(struct file_lock *caller_fl,
+			   struct file_lock *sys_fl)
 {
 	if (sys_fl->fl_type == F_WRLCK)
-		return 1;
+		return true;
 	if (caller_fl->fl_type == F_WRLCK)
-		return 1;
-	return 0;
+		return true;
+	return false;
 }
 
 /* Determine if lock sys_fl blocks lock caller_fl. POSIX specific
  * checking before calling the locks_conflict().
  */
-static int posix_locks_conflict(struct file_lock *caller_fl, struct file_lock *sys_fl)
+static bool posix_locks_conflict(struct file_lock *caller_fl,
+				 struct file_lock *sys_fl)
 {
 	/* POSIX locks owned by the same process do not conflict with
 	 * each other.
 	 */
 	if (posix_same_owner(caller_fl, sys_fl))
-		return (0);
+		return false;
 
 	/* Check whether they overlap */
 	if (!locks_overlap(caller_fl, sys_fl))
-		return 0;
+		return false;
 
-	return (locks_conflict(caller_fl, sys_fl));
+	return locks_conflict(caller_fl, sys_fl);
 }
 
 /* Determine if lock sys_fl blocks lock caller_fl. FLOCK specific
  * checking before calling the locks_conflict().
  */
-static int flock_locks_conflict(struct file_lock *caller_fl, struct file_lock *sys_fl)
+static bool flock_locks_conflict(struct file_lock *caller_fl,
+				 struct file_lock *sys_fl)
 {
 	/* FLOCK locks referring to the same filp do not conflict with
 	 * each other.
 	 */
 	if (caller_fl->fl_file == sys_fl->fl_file)
-		return (0);
+		return false;
 	if ((caller_fl->fl_type & LOCK_MAND) || (sys_fl->fl_type & LOCK_MAND))
-		return 0;
+		return false;
 
-	return (locks_conflict(caller_fl, sys_fl));
+	return locks_conflict(caller_fl, sys_fl);
 }
 
 void

