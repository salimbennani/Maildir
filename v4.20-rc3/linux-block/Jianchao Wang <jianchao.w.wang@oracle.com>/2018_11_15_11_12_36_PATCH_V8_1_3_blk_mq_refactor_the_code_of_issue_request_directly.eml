Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 08:31:24 -0000
Received: from icoremail.net (unknown [209.85.214.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv35f5Oxbr16VAQ--.45755S3;
	Thu, 15 Nov 2018 11:13:37 +0800 (CST)
Received: from mail-pl1-f182.google.com (unknown [209.85.214.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnS0de5OxbwHtBAA--.4578S3;
	Thu, 15 Nov 2018 11:13:34 +0800 (CST)
Received: by mail-pl1-f182.google.com with SMTP id y6-v6so1196926plt.3
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 19:13:34 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:sender:precedence:list-id;
        bh=ABo4P82kL2uWLscpPI3EimEyXdJFt0UOuAC6MlPy9HU=;
        b=hiur2XcaWtx0xvL6UoSIv0OWZGS9EN9lYxmmoJQx/dNetKNZZIDmtk9Ep4rI2DMiFn
         GoOLlPFlr+Vu7oZo5+d3PNmgbmY/OwI5gK3eI3DKOudqtmwuQWhOoKxT967OJ2HOuGRo
         dnobHAlkekuYzwOEIDqMg/+yDqMkApksZ2NwLndpgGaN1itCAmv9TZr6AusQvz1pkVc0
         2vfFltD2HY0Cc5e6T1iIAl2Pfi7daq87Tu5UK+HDqohhJmc6eitWiyUTHFw5RVZLvxPh
         td6/keYGQsMI8QA/uQgF+XNXKYzHPdXKwoMxXtzXs9XFSM//xdvwuTrLWs4mKzo0wo9B
         Cj2A==
X-Gm-Message-State: AGRZ1gLMYRq0y5GCkCqczS9wf+WvzFtrRV86YDsmZVPm8UB0WcMZA4Zp
	lLOyN7+qf3LbN/LXII3/3vooXP2BZW+pAjRy7Q77Y9CaPHD7C4rfPw==
X-Received: by 2002:a17:902:7e44:: with SMTP id a4mr4535905pln.338.1542251614000;
        Wed, 14 Nov 2018 19:13:34 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp46344pju;
        Wed, 14 Nov 2018 19:13:32 -0800 (PST)
X-Google-Smtp-Source: AJdET5cpM1P3q+HLp9YbOxW6RoUcjjSH7X/DqNn6GMKzwosToBjguuTm9cuIb03fIdvlD8/fhdyy
X-Received: by 2002:a62:3707:: with SMTP id e7-v6mr4657238pfa.70.1542251612890;
        Wed, 14 Nov 2018 19:13:32 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542251612; cv=none;
        d=google.com; s=arc-20160816;
        b=V/OHC8P5uaXCnkKpYHOwwvFbwsGBOyDOLhl+wFlBfNAsK6YYrLf3ZDQSy4/vm052F5
         IrPrl6Xa4/95Tp8VwQOVbyep23Et05c+fjoj22xu9sGHae9CbzuiwDwfRNYlU2LD0MIF
         1hbzohIWhm40HoUEmlR2h5OjNJ9HJFYfvs3Op7FoS68gjFqdYJWnK+dFNJskE2ciCRxg
         5mQn8cG12cAMn2SMR9m/mBLgx1IDjovlLywBuY6i+8qOVq4Tiq/wjTe20uvADnamrUUu
         YqRC5LbLqI8rAqEtjdWE4XfBPQ4E+u6Rfj1rYyzBcaV+N/Nxmaq3xuyyAmmh4d3LYpGG
         +PKQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dkim-signature;
        bh=ABo4P82kL2uWLscpPI3EimEyXdJFt0UOuAC6MlPy9HU=;
        b=CtalBG7AHHgFaWHl8bPQBuuR2wL3t1PKGB1WTw+DDB7xsD3WO0Far9IjeuFT6bioqm
         osrWWo+1qebSy0U+/rGyPfbsYg6DRRC3BPLUeJnevHtP9WyBth4WnvRZU0NHXMYB77Gj
         2Izzcvc9+1KPUUuK0f3XLZOPvpipnc14R3xF294gpi5orsKxcVczAR8FHeEbrnGzrtOG
         dnlQPjCPR9MGYNJkGE6ibbbEFiBSLMaMW7VRauiMs5j+Z21aKaSQmrMpkiEhhZ9/oZCq
         Q1Qo8Ei+je2+aB8lhj8C5E3E9kPmaRxIscQs0EI33Wgi4CeGuv8PKsrhH0qRzy5/k/WF
         QR5g==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@oracle.com header.s=corp-2018-07-02 header.b=LqjIa1t+;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=oracle.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h9si24350473pgb.319.2018.11.14.19.13.18;
        Wed, 14 Nov 2018 19:13:32 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728065AbeKONTI (ORCPT <rfc822;kristofer.rye@gmail.com>
        + 99 others); Thu, 15 Nov 2018 08:19:08 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:47962 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726689AbeKONTI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 08:19:08 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wAF33OHe182234;
        Thu, 15 Nov 2018 03:13:04 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id : in-reply-to : references; s=corp-2018-07-02;
 bh=ABo4P82kL2uWLscpPI3EimEyXdJFt0UOuAC6MlPy9HU=;
 b=LqjIa1t+4pWSqytJ6ikkJGCAWvpfbeQHq5goHlQlVLNNYnUmqgVddaFL1AX+Hy43sAO0
 bzFT/Rf4vzs9VrH+FqaaGHycSxVtjCbIn+35aHUfoeZCfVKNr5nnGpGzQBhS36IhfGdx
 bsdEdbBBkrzN5VeCNvtjgGIh9hfusViuzKBFHA/wGloBGsulciYyfRU1QcMx+J3QCxiZ
 wPkbkkfFUz0bYS66jKthjxyIl9QNLJe88WThzlXDFBLWnwLfzZlmZKmeXrG92Nl4K9Ma
 MjowWOTsi3XqI20mzdxKSX0qqN10ZZzALKfBfnGf4xiqid1UA5E00nOqoISc0JRBaHQM +g== 
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
        by userp2120.oracle.com with ESMTP id 2nr7cs730f-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 15 Nov 2018 03:13:04 +0000
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
        by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wAF3D3eS002518
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 15 Nov 2018 03:13:04 GMT
Received: from abhmp0014.oracle.com (abhmp0014.oracle.com [141.146.116.20])
        by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wAF3D3x3005684;
        Thu, 15 Nov 2018 03:13:03 GMT
Received: from will-ThinkCentre-M93p.cn.oracle.com (/10.182.70.234)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Wed, 14 Nov 2018 19:13:03 -0800
From: Jianchao Wang <jianchao.w.wang@oracle.com>
To: axboe@kernel.dk
Cc: ming.lei@redhat.com, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH V8 1/3] blk-mq: refactor the code of issue request directly
Date: Thu, 15 Nov 2018 11:12:36 +0800
Message-Id: <1542251558-10517-2-git-send-email-jianchao.w.wang@oracle.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1542251558-10517-1-git-send-email-jianchao.w.wang@oracle.com>
References: <1542251558-10517-1-git-send-email-jianchao.w.wang@oracle.com>
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9077 signatures=668683
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=1 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1811150026
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnS0de5OxbwHtBAA--.4578S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWr17Zw1ktFyDWFyUCF45KFg_yoWruFWkpF
	43Janakr4rtrs3ZF4xJanrAw1Yvr4fK343GF93A34SqryUKrW0qr48CryxXFWSyrZ5CrZx
	JF45Jas0v3ZxXFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9Ib7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE
	2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcV
	C2z280aVAFwI0_Cr1j6rxdMxvI42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY
	0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbV
	WUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF
	67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJb
	IYCTnIWIevJa73UjIFyTuYvjxUfG-eUUUUU

Merge blk_mq_try_issue_directly and __blk_mq_try_issue_directly
into one interface to unify the interfaces to issue requests
directly. The merged interface takes over the requests totally,
it could insert, end or do nothing based on the return value of
.queue_rq and 'bypass' parameter. Then caller needn't any other
handling any more.

Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
---
 block/blk-mq.c | 89 ++++++++++++++++++++++++++++------------------------------
 1 file changed, 43 insertions(+), 46 deletions(-)

diff --git a/block/blk-mq.c b/block/blk-mq.c
index 411be60..1b57449 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1766,78 +1766,75 @@ static blk_status_t __blk_mq_issue_directly(struct blk_mq_hw_ctx *hctx,
 	return ret;
 }
 
-static blk_status_t __blk_mq_try_issue_directly(struct blk_mq_hw_ctx *hctx,
+static blk_status_t blk_mq_try_issue_directly(struct blk_mq_hw_ctx *hctx,
 						struct request *rq,
 						blk_qc_t *cookie,
-						bool bypass_insert)
+						bool bypass)
 {
 	struct request_queue *q = rq->q;
 	bool run_queue = true;
+	blk_status_t ret = BLK_STS_RESOURCE;
+	int srcu_idx;
 
+	hctx_lock(hctx, &srcu_idx);
 	/*
-	 * RCU or SRCU read lock is needed before checking quiesced flag.
+	 * hctx_lock is needed before checking quiesced flag.
 	 *
-	 * When queue is stopped or quiesced, ignore 'bypass_insert' from
-	 * blk_mq_request_issue_directly(), and return BLK_STS_OK to caller,
-	 * and avoid driver to try to dispatch again.
+	 * When queue is stopped or quiesced, ignore 'bypass', insert
+	 * and return BLK_STS_OK to caller, and avoid driver to try to
+	 * dispatch again.
 	 */
-	if (blk_mq_hctx_stopped(hctx) || blk_queue_quiesced(q)) {
+	if (unlikely(blk_mq_hctx_stopped(hctx) || blk_queue_quiesced(q))) {
 		run_queue = false;
-		bypass_insert = false;
-		goto insert;
+		bypass = false;
+		goto out_unlock;
 	}
 
-	if (q->elevator && !bypass_insert)
-		goto insert;
+	/*
+	 * Bypass the potential scheduler on the bottom device.
+	 */
+	if (unlikely(q->elevator && !bypass))
+		goto out_unlock;
 
 	if (!blk_mq_get_dispatch_budget(hctx))
-		goto insert;
+		goto out_unlock;
 
 	if (!blk_mq_get_driver_tag(rq)) {
 		blk_mq_put_dispatch_budget(hctx);
-		goto insert;
+		goto out_unlock;
 	}
 
-	return __blk_mq_issue_directly(hctx, rq, cookie);
-insert:
-	if (bypass_insert)
-		return BLK_STS_RESOURCE;
-
-	blk_mq_sched_insert_request(rq, false, run_queue, false);
-	return BLK_STS_OK;
-}
-
-static void blk_mq_try_issue_directly(struct blk_mq_hw_ctx *hctx,
-		struct request *rq, blk_qc_t *cookie)
-{
-	blk_status_t ret;
-	int srcu_idx;
-
-	might_sleep_if(hctx->flags & BLK_MQ_F_BLOCKING);
+	ret = __blk_mq_issue_directly(hctx, rq, cookie);
 
-	hctx_lock(hctx, &srcu_idx);
+out_unlock:
+	hctx_unlock(hctx, srcu_idx);
 
-	ret = __blk_mq_try_issue_directly(hctx, rq, cookie, false);
-	if (ret == BLK_STS_RESOURCE || ret == BLK_STS_DEV_RESOURCE)
-		blk_mq_sched_insert_request(rq, false, true, false);
-	else if (ret != BLK_STS_OK)
-		blk_mq_end_request(rq, ret);
+	switch (ret) {
+	case BLK_STS_OK:
+		break;
+	case BLK_STS_DEV_RESOURCE:
+	case BLK_STS_RESOURCE:
+		if (!bypass) {
+			blk_mq_sched_insert_request(rq, false, run_queue, false);
+			ret = BLK_STS_OK;
+		}
+		break;
+	default:
+		if (!bypass) {
+			blk_mq_end_request(rq, ret);
+			ret = BLK_STS_OK;
+		}
+		break;
+	}
 
-	hctx_unlock(hctx, srcu_idx);
+	return ret;
 }
 
 blk_status_t blk_mq_request_issue_directly(struct request *rq)
 {
-	blk_status_t ret;
-	int srcu_idx;
 	blk_qc_t unused_cookie;
-	struct blk_mq_hw_ctx *hctx = rq->mq_hctx;
 
-	hctx_lock(hctx, &srcu_idx);
-	ret = __blk_mq_try_issue_directly(hctx, rq, &unused_cookie, true);
-	hctx_unlock(hctx, srcu_idx);
-
-	return ret;
+	return blk_mq_try_issue_directly(rq->mq_hctx, rq, &unused_cookie, true);
 }
 
 void blk_mq_try_issue_list_directly(struct blk_mq_hw_ctx *hctx,
@@ -1958,13 +1955,13 @@ static blk_qc_t blk_mq_make_request(struct request_queue *q, struct bio *bio)
 		if (same_queue_rq) {
 			data.hctx = same_queue_rq->mq_hctx;
 			blk_mq_try_issue_directly(data.hctx, same_queue_rq,
-					&cookie);
+					&cookie, false);
 		}
 	} else if ((q->nr_hw_queues > 1 && is_sync) || (!q->elevator &&
 			!data.hctx->dispatch_busy)) {
 		blk_mq_put_ctx(data.ctx);
 		blk_mq_bio_to_request(rq, bio);
-		blk_mq_try_issue_directly(data.hctx, rq, &cookie);
+		blk_mq_try_issue_directly(data.hctx, rq, &cookie, false);
 	} else {
 		blk_mq_put_ctx(data.ctx);
 		blk_mq_bio_to_request(rq, bio);
-- 
2.7.4
