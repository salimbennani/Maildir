Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 15:25:37 -0000
Received: from icoremail.net (unknown [209.85.215.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH97Y6upbMguHAQ--.40228S3;
	Tue, 13 Nov 2018 23:16:41 +0800 (CST)
Received: from mail-pg1-f169.google.com (unknown [209.85.215.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3n0vX6upbpwg5AA--.4975S3;
	Tue, 13 Nov 2018 23:16:39 +0800 (CST)
Received: by mail-pg1-f169.google.com with SMTP id 70so5825833pgh.8
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 07:16:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=JnooYSOi+petECpZEkaXYdo2t9s7xFSbcP7nWWOwWaI=;
        b=BppqIr+DponZBWoqBrmDkINUKcQb5zjZLsx/JRH6KCn6mgi5nOEDZz9zTbmJ7JZnGC
         cDlsGnrbg4ecPMr24gtvl/irD1sc7ipcG9vm3EJYTilShPZvzoPu4QimLio61x1YxVIg
         crfeu7ToKdnmt36PxrOLPoM6gFZ5BaE71OReoCsVflxBITiMxyjtf9C0rBSo9HGppxq4
         GEvAL1TFgqv+ql+GDUMNExdxa9KOk7NjmtY63CpRM4Xn4qwBKfwMyas6ei+F8IiyFKWj
         JZZD3+0auECt+//emEx1cf0Z4cUpwZyYZO83n5d5mSeyULl1JT/F0zx+xa8IIFaP7OTG
         6sgw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gKhbyMGg9xfysOyxfTpknrcefkx594aa0U8oTiHQKYMqcode0JQ
	7kMogAS5FVRcSHfyNYLcmUNeof/I9iw9TU5Fycbuebcr+2wRLvIP8Q==
X-Received: by 2002:a65:64d5:: with SMTP id t21-v6mr5232713pgv.428.1542122199084;
        Tue, 13 Nov 2018 07:16:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4593788pjt;
        Tue, 13 Nov 2018 07:16:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5efdiEOWcayEM8Sc0PDBIl4RFqbijL3lhrlqjdFen2RErGNvI0HAlofuDK5CGxv64YJLru3
X-Received: by 2002:a63:bf0b:: with SMTP id v11mr5220455pgf.302.1542122198317;
        Tue, 13 Nov 2018 07:16:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542122198; cv=none;
        d=google.com; s=arc-20160816;
        b=MqrMKn79PbmERtnPceqGwxex5Qd5RKD7bwb5bEtke8s2IbKEMrUzAeVGzjKTMplBSx
         0dRt33WDikGR9T6V6PFL3SdDRyUcxfX8wwfimmbZne8frPtwpmDainD33cI0J9tOZsOk
         L6H+iA36jgLpV2e62z6QBbYPFDUhl5wR1cD6UXihB31ZrPPU3oc2IICeqCqGu5jMT6GB
         5inE/nuQknMFCoSIbGjH9/XCqF0zyI165E/G8YUzrKwHTuOrTuGHxRv2A+hYEtY3BNOE
         HTiO3+aIMK9PUq+GeIhqJQh085aaNRrfPlI3HbyigN53d7BLM9gRscsotio1AqYfaeCn
         474A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=JnooYSOi+petECpZEkaXYdo2t9s7xFSbcP7nWWOwWaI=;
        b=d2i7jXy/5eJQdb/4otOBsl02LSjDiTQbOPpPzRNdxvIKgnugBGL7MlGbfwGMtbTLxG
         cA64EsQFw4d5eBnMWQNulXi91i1TRB6s16dYo2kHkRTKygS8VSwkxQRnt3YAOPhjx55H
         Pwin3R7X7hs6gD4hXAm5Zw93jNeUM2h4TFRzoDx7cbu1NlQrx6O/tObWzETiP+qQPII/
         yCttk1SOCY6PK+rL5vtZNplKwkM/Hhd1/htCmZ6LqrRfb7GikMdmRGFqUZ6cG4cn2QZW
         2yRBJ1uHQw/1eIHvwO22Fm3+gr1UbLmcULw2dqYvTPnv1HitoHTr5kspGI0EpL0GlUTv
         lziQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id bc3-v6si21526813plb.52.2018.11.13.07.16.22;
        Tue, 13 Nov 2018 07:16:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387911AbeKNBO1 (ORCPT <rfc822;vincent.riesop@gmail.com>
        + 99 others); Tue, 13 Nov 2018 20:14:27 -0500
Received: from mx1.redhat.com ([209.132.183.28]:43114 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2387822AbeKNBO1 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 20:14:27 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com [10.5.11.14])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id EDAF763144;
        Tue, 13 Nov 2018 15:15:52 +0000 (UTC)
Received: from localhost (ovpn-8-23.pek2.redhat.com [10.72.8.23])
        by smtp.corp.redhat.com (Postfix) with ESMTP id C42145D961;
        Tue, 13 Nov 2018 15:15:48 +0000 (UTC)
From: Ming Lei <ming.lei@redhat.com>
To: Jens Axboe <axboe@kernel.dk>
Cc: linux-block@vger.kernel.org, linux-kernel@vger.kernel.org,
        Ming Lei <ming.lei@redhat.com>, Christoph Hellwig <hch@lst.de>
Subject: [PATCH V9 04/19] block: use bio_for_each_bvec() to map sg
Date: Tue, 13 Nov 2018 23:14:50 +0800
Message-Id: <20181113151505.15498-5-ming.lei@redhat.com>
In-Reply-To: <20181113151505.15498-1-ming.lei@redhat.com>
References: <20181113151505.15498-1-ming.lei@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.38]); Tue, 13 Nov 2018 15:15:53 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3n0vX6upbpwg5AA--.4975S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxArW3trWktFWxZF15XrWfAFb_yoW5CFyfpF
	43Gw1akr4IgF4aqay3JFnFkF9Ika1xArW7JFZrtr9Y9r13GrWIvF40yryFvr93urs3Crsx
	JrsxKw4Uur4DJFUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPjb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW5WwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVWUCVW8JbIYCTnIWIevJa73UjIFyTuYvjxUg75rUUUU
	U

It is more efficient to use bio_for_each_bvec() to map sg, meantime
we have to consider splitting multipage bvec as done in blk_bio_segment_split().

Cc: Christoph Hellwig <hch@lst.de>
Signed-off-by: Ming Lei <ming.lei@redhat.com>
---
 block/blk-merge.c | 72 +++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 52 insertions(+), 20 deletions(-)

diff --git a/block/blk-merge.c b/block/blk-merge.c
index 6f7deb94a23f..cb9f49bcfd36 100644
--- a/block/blk-merge.c
+++ b/block/blk-merge.c
@@ -473,6 +473,56 @@ static int blk_phys_contig_segment(struct request_queue *q, struct bio *bio,
 	return biovec_phys_mergeable(q, &end_bv, &nxt_bv);
 }
 
+static struct scatterlist *blk_next_sg(struct scatterlist **sg,
+		struct scatterlist *sglist)
+{
+	if (!*sg)
+		return sglist;
+	else {
+		/*
+		 * If the driver previously mapped a shorter
+		 * list, we could see a termination bit
+		 * prematurely unless it fully inits the sg
+		 * table on each mapping. We KNOW that there
+		 * must be more entries here or the driver
+		 * would be buggy, so force clear the
+		 * termination bit to avoid doing a full
+		 * sg_init_table() in drivers for each command.
+		 */
+		sg_unmark_end(*sg);
+		return sg_next(*sg);
+	}
+}
+
+static unsigned blk_bvec_map_sg(struct request_queue *q,
+		struct bio_vec *bvec, struct scatterlist *sglist,
+		struct scatterlist **sg)
+{
+	unsigned nbytes = bvec->bv_len;
+	unsigned nsegs = 0, total = 0;
+
+	while (nbytes > 0) {
+		unsigned seg_size;
+		struct page *pg;
+		unsigned offset, idx;
+
+		*sg = blk_next_sg(sg, sglist);
+
+		seg_size = min(nbytes, queue_max_segment_size(q));
+		offset = (total + bvec->bv_offset) % PAGE_SIZE;
+		idx = (total + bvec->bv_offset) / PAGE_SIZE;
+		pg = nth_page(bvec->bv_page, idx);
+
+		sg_set_page(*sg, pg, seg_size, offset);
+
+		total += seg_size;
+		nbytes -= seg_size;
+		nsegs++;
+	}
+
+	return nsegs;
+}
+
 static inline void
 __blk_segment_map_sg(struct request_queue *q, struct bio_vec *bvec,
 		     struct scatterlist *sglist, struct bio_vec *bvprv,
@@ -490,25 +540,7 @@ __blk_segment_map_sg(struct request_queue *q, struct bio_vec *bvec,
 		(*sg)->length += nbytes;
 	} else {
 new_segment:
-		if (!*sg)
-			*sg = sglist;
-		else {
-			/*
-			 * If the driver previously mapped a shorter
-			 * list, we could see a termination bit
-			 * prematurely unless it fully inits the sg
-			 * table on each mapping. We KNOW that there
-			 * must be more entries here or the driver
-			 * would be buggy, so force clear the
-			 * termination bit to avoid doing a full
-			 * sg_init_table() in drivers for each command.
-			 */
-			sg_unmark_end(*sg);
-			*sg = sg_next(*sg);
-		}
-
-		sg_set_page(*sg, bvec->bv_page, nbytes, bvec->bv_offset);
-		(*nsegs)++;
+		(*nsegs) += blk_bvec_map_sg(q, bvec, sglist, sg);
 	}
 	*bvprv = *bvec;
 }
@@ -530,7 +562,7 @@ static int __blk_bios_map_sg(struct request_queue *q, struct bio *bio,
 	int cluster = blk_queue_cluster(q), nsegs = 0;
 
 	for_each_bio(bio)
-		bio_for_each_segment(bvec, bio, iter)
+		bio_for_each_bvec(bvec, bio, iter)
 			__blk_segment_map_sg(q, &bvec, sglist, &bvprv, sg,
 					     &nsegs, &cluster);
 
-- 
2.9.5
