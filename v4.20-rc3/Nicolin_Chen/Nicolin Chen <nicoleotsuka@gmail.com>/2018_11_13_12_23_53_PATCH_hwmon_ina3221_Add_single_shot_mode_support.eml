Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 04:47:37 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f0E5Uupb5uuCAQ--.38939S3;
	Tue, 13 Nov 2018 12:25:29 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBkI3Uupb_9Y1AA--.2302S3;
	Tue, 13 Nov 2018 12:25:27 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id p6-v6so5357144pll.4
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 20:25:27 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:sender:precedence:list-id;
        bh=RXXUPWHjbF+um19Xd3QGgmRmxsUbhZ8J8z5FmBELzkE=;
        b=ozoaXSiW0JPB7FL2RoVh2bD4Hm+xifp1zVW60YjwxUoc3aeSba7NVmPxL8sAxdp5yg
         6wET6wXwPye8eaprOVG4WqygmOCyEvMDz+Cgi6fHPRy6pIC/If0Qitog3AbrcQHOa6aa
         eq2c2LPyNdWrIWSS6gMCY8A0gOn4DRBMxa9GlBAOXxUXcGd1yeF9PqS8dJ3LhiDGFyUp
         ZARFv5ZJ9CqOv8V342pbRVT6LUB+wZxgwMb1HHonlpA3CIy4SAa+vfeeuijJIzwZGnxq
         fu5knE7gl0FGiF1uS9CPLpA1IVwdkC2d7tj2znT802KYGer7WIWJDJVBpmhIEJTreV/M
         xdQA==
X-Gm-Message-State: AGRZ1gJxSWJBLyxu3ltm0k2MiqlaS7HblyWp+gEHhnFUXy0K5IrWLsHq
	c7w5X79XaSzmm/NU9mnotpu/zlewQ+a8EZl5YQ1lojKpyqJfmo0njg==
X-Received: by 2002:a17:902:6686:: with SMTP id e6-v6mr3506241plk.173.1542083126932;
        Mon, 12 Nov 2018 20:25:26 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4011056pjt;
        Mon, 12 Nov 2018 20:25:26 -0800 (PST)
X-Google-Smtp-Source: AJdET5drRu0daqXbFQE2fwsC9YuDlzxs2GAIYZ6SOthxd5i1nKR4y9CDdfwmRDTvNmyJoDboevpq
X-Received: by 2002:a63:6782:: with SMTP id b124mr3358861pgc.151.1542083126123;
        Mon, 12 Nov 2018 20:25:26 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542083126; cv=none;
        d=google.com; s=arc-20160816;
        b=cQqXiWxaLj5Hz6zsz9mbarhvE1YZQ2lAqQz/AIW9LFzwHErGWzpcQVbjCUxYajTBYZ
         HCO6LytOsUcHnC67G/etA10+GwnPIUAY2n19uL9Op9OOf/77Zd2TEjW+L2s4/kkTdk7h
         wvWugPgPFeS3zeGlAnyC8gK1x64KzHcgmWIVCyYh7HN2Hw5g8GOb9FnmJxpmDSVta+aS
         hKDNE47/qxkXVABxaFCj4vJUnSwQlZx+GhfUAOv/4iyy1/a0SzWRLZMexGmP3HfW68aJ
         jvSnsFG3uJNiczRyM4UkBKw4IMLniBYLj3t/eaNVIxMqp4aUHw6TfbA10ATq4EpRDh7f
         T78g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=RXXUPWHjbF+um19Xd3QGgmRmxsUbhZ8J8z5FmBELzkE=;
        b=u/enyzdl6D9LywUJWAdVWRFFGRYfwybAFiTncUXPGsQQb8cbcvOF5V7Fhzv9tAbrwF
         arfov4x6Ly/Q43vOVeGQszIck+kWc6h5GkNVQ857uY23dMMJPwF/jDiSZKUfxTFRSJW3
         PfDUGOq/nhNC9Y8750TfUZUJ5YItClXFoWTyNj4TQUsmZq6YKcQYqwfqPrfkwNbPS7aM
         edEspJa5k4sFNGKEONuZ0XvgQ8RvuiL+E+Huqm9FAlLFU3LqwTFAtuCIYVdS9TD2ZgtE
         fQn6/bhmao47RVNHuvHHNzdPIr6jHmM0fwbCkcxRwKTczLFZv1tak5oNA6L7z1qtKwck
         79xQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=ThVBAJ7N;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h25si18565251pgi.474.2018.11.12.20.25.10;
        Mon, 12 Nov 2018 20:25:26 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730736AbeKMOUm (ORCPT <rfc822;hebingyangg@gmail.com>
        + 99 others); Tue, 13 Nov 2018 09:20:42 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:42605 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726103AbeKMOUl (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 09:20:41 -0500
Received: by mail-pg1-f195.google.com with SMTP id d72so1622984pga.9;
        Mon, 12 Nov 2018 20:24:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=RXXUPWHjbF+um19Xd3QGgmRmxsUbhZ8J8z5FmBELzkE=;
        b=ThVBAJ7NKx9A0LLDMwLLtXKuZwVBQk34wr1EX+gIoHUu41mz0L+cEoqgHWysQ2r3PA
         6LXKr+oHPhqT1wG9fGWBqym546QHjLtVT8z8SkRO8gFF/RU4Le6WrzSuSqLTXdR8MOig
         T+AxqfntSTV+bnig/spKr81aap+lakj3p4Lb4mmAYeIvdS/eHu+Em8NqssEts7h6g4j9
         /2jidPJTRnVyFHt9PB2BQVvM63Oo2aHYr1X2XM4a2xnBKfUOqlhnCjKIqc0R6hW8Zf9N
         Tt4iBkxgWNgUyPnILOVPn4EVgQtlmZsyAr0XSBcNyZvz0WTduZfu1Fs3t3Hgd2DnukAO
         RSpA==
X-Received: by 2002:a63:d747:: with SMTP id w7mr3290184pgi.360.1542083065199;
        Mon, 12 Nov 2018 20:24:25 -0800 (PST)
Received: from Asurada-Nvidia.nvidia.com (thunderhill.nvidia.com. [216.228.112.22])
        by smtp.gmail.com with ESMTPSA id t82-v6sm38571856pfi.45.2018.11.12.20.24.22
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 12 Nov 2018 20:24:24 -0800 (PST)
From: Nicolin Chen <nicoleotsuka@gmail.com>
To: jdelvare@suse.com, linux@roeck-us.net
Cc: linux-hwmon@vger.kernel.org, linux-kernel@vger.kernel.org,
        corbet@lwn.net, linux-doc@vger.kernel.org
Subject: [PATCH] hwmon (ina3221) Add single-shot mode support
Date: Mon, 12 Nov 2018 20:23:53 -0800
Message-Id: <20181113042353.1507-1-nicoleotsuka@gmail.com>
X-Mailer: git-send-email 2.17.1
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBkI3Uupb_9Y1AA--.2302S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Gry7Wry5Jr48tr18CryxuFg_yoWxJr4kpa
	y3tFWrtry7XF9aqws3Gw43G34Yvrn7X3y7tr9rta10va1DAF9Fvry8tas0q3s8CryfXw4U
	tayrJr4rC3yDJrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW8XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_JFI_Gr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI
	42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bp
	TmDUUUUU=

INA3221 supports both continuous and single-shot modes. When
running in the continuous mode, it keeps measuring the inputs
and converting them to the data register even if there are no
users reading the data out. In this use case, this could be a
power waste.

So this patch adds a single-shot mode support so that ina3221
could do measurement and conversion only if users trigger it,
depending on the use case where it only needs to poll data in
a lower frequency.

The change also exposes "mode" and "available_modes" nodes to
allow users to switch between two operating modes.

Signed-off-by: Nicolin Chen <nicoleotsuka@gmail.com>
---
 Documentation/hwmon/ina3221 |   3 +
 drivers/hwmon/ina3221.c     | 109 ++++++++++++++++++++++++++++++++++++
 2 files changed, 112 insertions(+)

diff --git a/Documentation/hwmon/ina3221 b/Documentation/hwmon/ina3221
index 4b82cbfb551c..b03f4ad901ee 100644
--- a/Documentation/hwmon/ina3221
+++ b/Documentation/hwmon/ina3221
@@ -35,3 +35,6 @@ curr[123]_max           Warning alert current(mA) setting, activates the
                           average is above this value.
 curr[123]_max_alarm     Warning alert current limit exceeded
 in[456]_input           Shunt voltage(uV) for channels 1, 2, and 3 respectively
+available_modes         Available operating modes of the chip:
+                          continuous mode; single-shot mode
+mode                    Current operating mode of the chip
diff --git a/drivers/hwmon/ina3221.c b/drivers/hwmon/ina3221.c
index 17a57dbc0424..8f7da3f75d53 100644
--- a/drivers/hwmon/ina3221.c
+++ b/drivers/hwmon/ina3221.c
@@ -91,6 +91,17 @@ enum ina3221_channels {
 	INA3221_NUM_CHANNELS
 };
 
+enum ina3221_modes {
+	INA3221_MODE_SINGLE_SHOT,
+	INA3221_MODE_CONTINUOUS,
+	INA3221_NUM_MODES,
+};
+
+static const char * const ina3221_mode_names[] = {
+	[INA3221_MODE_SINGLE_SHOT] = "single-shot",
+	[INA3221_MODE_CONTINUOUS] = "continuous",
+};
+
 /**
  * struct ina3221_input - channel input source specific information
  * @label: label of channel input source
@@ -127,6 +138,11 @@ static inline bool ina3221_is_enabled(struct ina3221_data *ina, int channel)
 	       (ina->reg_config & INA3221_CONFIG_CHx_EN(channel));
 }
 
+static inline bool ina3221_is_singleshot_mode(struct ina3221_data *ina)
+{
+	return !(ina->reg_config & INA3221_CONFIG_MODE_CONTINUOUS);
+}
+
 /* Lookup table for Bus and Shunt conversion times in usec */
 static const u16 ina3221_conv_time[] = {
 	140, 204, 332, 588, 1100, 2116, 4156, 8244,
@@ -188,6 +204,11 @@ static int ina3221_read_in(struct device *dev, u32 attr, int channel, long *val)
 		if (!ina3221_is_enabled(ina, channel))
 			return -ENODATA;
 
+		/* Write CONFIG register to trigger a single-shot measurement */
+		if (ina3221_is_singleshot_mode(ina))
+			regmap_write(ina->regmap, INA3221_CONFIG,
+				     ina->reg_config);
+
 		ret = ina3221_wait_for_data(ina);
 		if (ret)
 			return ret;
@@ -232,6 +253,11 @@ static int ina3221_read_curr(struct device *dev, u32 attr,
 		if (!ina3221_is_enabled(ina, channel))
 			return -ENODATA;
 
+		/* Write CONFIG register to trigger a single-shot measurement */
+		if (ina3221_is_singleshot_mode(ina))
+			regmap_write(ina->regmap, INA3221_CONFIG,
+				     ina->reg_config);
+
 		ret = ina3221_wait_for_data(ina);
 		if (ret)
 			return ret;
@@ -532,6 +558,82 @@ static ssize_t ina3221_set_shunt(struct device *dev,
 	return count;
 }
 
+static ssize_t available_modes_show(struct device *dev,
+				    struct device_attribute *attr, char *buf)
+{
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(ina3221_mode_names); i++)
+		snprintf(buf, PAGE_SIZE, "%s%s ", buf, ina3221_mode_names[i]);
+
+	return snprintf(buf, PAGE_SIZE, "%s\n", buf);
+}
+
+static ssize_t mode_show(struct device *dev,
+			 struct device_attribute *attr, char *buf)
+{
+	struct ina3221_data *ina = dev_get_drvdata(dev);
+	int mode;
+
+	if (ina->reg_config & INA3221_CONFIG_MODE_CONTINUOUS)
+		mode = INA3221_MODE_CONTINUOUS;
+	else
+		mode = INA3221_MODE_SINGLE_SHOT;
+
+	return snprintf(buf, PAGE_SIZE, "%s\n", ina3221_mode_names[mode]);
+}
+
+static ssize_t mode_store(struct device *dev,
+			  struct device_attribute *attr,
+			  const char *buf, size_t count)
+{
+	struct ina3221_data *ina = dev_get_drvdata(dev);
+	u16 mask = INA3221_CONFIG_MODE_CONTINUOUS;
+	u16 continuous;
+	int mode, ret;
+	char name[32];
+
+	mutex_lock(&ina->lock);
+
+	snprintf(name, sizeof(name), "%s", buf);
+	strim(name);
+
+	for (mode = 0; mode < INA3221_NUM_MODES; mode++) {
+		if (!strcmp(name, ina3221_mode_names[mode]))
+			break;
+	}
+
+	switch (mode) {
+	case INA3221_MODE_SINGLE_SHOT:
+		continuous = 0;
+		break;
+	case INA3221_MODE_CONTINUOUS:
+		continuous = INA3221_CONFIG_MODE_CONTINUOUS;
+		break;
+	default:
+		mutex_unlock(&ina->lock);
+		return -EINVAL;
+	}
+
+	/* Set register to configure single-shot or continuous mode */
+	ret = regmap_update_bits(ina->regmap, INA3221_CONFIG, mask, continuous);
+	if (ret) {
+		mutex_unlock(&ina->lock);
+		return ret;
+	}
+
+	/* Cache the latest config register value */
+	ret = regmap_read(ina->regmap, INA3221_CONFIG, &ina->reg_config);
+	if (ret) {
+		mutex_unlock(&ina->lock);
+		return ret;
+	}
+
+	mutex_unlock(&ina->lock);
+
+	return count;
+}
+
 /* shunt resistance */
 static SENSOR_DEVICE_ATTR(shunt1_resistor, S_IRUGO | S_IWUSR,
 		ina3221_show_shunt, ina3221_set_shunt, INA3221_CHANNEL1);
@@ -540,10 +642,17 @@ static SENSOR_DEVICE_ATTR(shunt2_resistor, S_IRUGO | S_IWUSR,
 static SENSOR_DEVICE_ATTR(shunt3_resistor, S_IRUGO | S_IWUSR,
 		ina3221_show_shunt, ina3221_set_shunt, INA3221_CHANNEL3);
 
+/* operating mode */
+static DEVICE_ATTR_RW(mode);
+static DEVICE_ATTR_RO(available_modes);
+
 static struct attribute *ina3221_attrs[] = {
 	&sensor_dev_attr_shunt1_resistor.dev_attr.attr,
 	&sensor_dev_attr_shunt2_resistor.dev_attr.attr,
 	&sensor_dev_attr_shunt3_resistor.dev_attr.attr,
+	/* common attributes */
+	&dev_attr_mode.attr,
+	&dev_attr_available_modes.attr,
 	NULL,
 };
 ATTRIBUTE_GROUPS(ina3221);
-- 
2.17.1
