Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 14:46:20 -0000
Received: from icoremail.net (unknown [209.85.215.173])
	by mail-app2 (Coremail) with SMTP id by_KCgCn35i6G+xbuUiQAQ--.43011S3;
	Wed, 14 Nov 2018 20:57:32 +0800 (CST)
Received: from mail-pg1-f173.google.com (unknown [209.85.215.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHaUW4G+xbKLY+AA--.12473S3;
	Wed, 14 Nov 2018 20:57:29 +0800 (CST)
Received: by mail-pg1-f173.google.com with SMTP id 70so7340796pgh.8
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 04:57:29 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:sender:precedence:list-id;
        bh=0eovudSAIXNEeF/t3NJ4ry1Utmr5+0dnf4e2jCmCQcw=;
        b=HwDvICLKxBQhd3dFMK5Imp+ulhMeh4ZMZDZvvIDpOXf74eIDv3nbTJ4adWJI13WLwk
         X7mjitzADuz1xr5SId9wY1b3cIJSuzuMaG7zbwFW9+xJ3fO2sVnKMVA6wpi7VHDp0alv
         H68ybilVrUhNihBydqrNLcSQn1tkdmb3KpGK3daMTHCNddcIfCVwsu9+mymSPKzhf+w9
         jaK9hjUucY/gH+LCs3rDWwuJXuIeJIj/wAMzeGqEYfy/pCEtcrMrk5edumUf/FMkqIF/
         2We3H+nFfA8vi2PIyImpefq6aV4k85zKUgVReAxMGd9dZ+zhtXe2v7EJ6ZYOnD6rpuKr
         EIRw==
X-Gm-Message-State: AGRZ1gKuN9vu4sSbbVeV3CJZnPKm6RkHK30bk1rNMm5nnBVNX80AevU+
	YjpXxVyKeHMtYSz8qDdLtPx0IHhhakfMDA3Bdb969eQgVQw2Uc0xMQ==
X-Received: by 2002:a63:2c0e:: with SMTP id s14mr1711010pgs.132.1542200248593;
        Wed, 14 Nov 2018 04:57:28 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5765500pjt;
        Wed, 14 Nov 2018 04:57:27 -0800 (PST)
X-Google-Smtp-Source: AJdET5cH3i0e2dUe10LMKt7zb6Fu7CrX+8OxZSTHX2dTnJgzf6Uwgex+9o4xpMix2Ma0HbJHWgAK
X-Received: by 2002:a17:902:a9:: with SMTP id a38-v6mr1827753pla.7.1542200247201;
        Wed, 14 Nov 2018 04:57:27 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542200247; cv=none;
        d=google.com; s=arc-20160816;
        b=zKq2W7V+DPP1fRsopzRtIme6LevqG/5V0ZIXeuefUc6Yx/67Xb1cN8uywW6sLvjIon
         fqQDm6hmZY42+PLOhEGmwimesFSVRhcyrQtjxPRWF6GGDdXxdwnsfZuMg+AO8EWWalBY
         9cd8JBo2gmHgTibr1I0X35ke4naZI9g9iQheUa2xe2GWpj6lT627lCG5Z4hbEyjCt0wY
         HACNe9kM9Ju2I66W5KgYRZCx/OYd+T481lV0z1YlfC12eItcpXmOS00RlTDwCZxgz1jr
         FQX4ZWpKiBk/R79wELRsY6bWM2N81Za05Q65y9Ycn2KJ/h7ZFxUy8vouvFDlcmSgWhJC
         OH7A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dkim-signature;
        bh=0eovudSAIXNEeF/t3NJ4ry1Utmr5+0dnf4e2jCmCQcw=;
        b=pmNo7bIArcK+cuqk46FR97VtK5apJy9+fm4qfYd0kAlmzUQoJEIcLla7HceqB/clPS
         DBNcJAmc1rGaw8Sd8ZeS7I4dUMyHRBtpiORY31qenmj6ivZ2+wcpZNYZQkEreFYG5cba
         pJtxckN7kL9zc/9Mqqu8klqjvW+5U0EY/VAfTvCP7H07huBff8/tI1pTCoXMeGRCc51U
         EUwSpgG6sZsdN1lEOyNmqa8jtE4IB/Pj1YGjSFkK61t8iQB4UNXxCsQ38//7esp9a+Qx
         B7Oi8slBxsrsWJL/vWRTnX0eGBzli9pZALRImLegZaxjt/zvD1Xj1E+HzGJhV6T90DPz
         RNuA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@aussec.com header.s=2016 header.b="AFqK/ni/";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=aussec.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w11si14361024pgp.161.2018.11.14.04.57.11;
        Wed, 14 Nov 2018 04:57:27 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732610AbeKNW6p (ORCPT <rfc822;docz2a@gmail.com> + 99 others);
        Wed, 14 Nov 2018 17:58:45 -0500
Received: from csm1.csm-office.com.au ([165.228.118.109]:48362 "EHLO
        sleepy.aussec.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727731AbeKNW6o (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 17:58:44 -0500
X-Virus-Scanned: amavisd-new at aussec.com
Received: from hpdv6.aussec.com.com (c110-21-61-29.farfl4.nsw.optusnet.com.au [110.21.61.29])
        (authenticated bits=0)
        by sleepy.aussec.com (8.15.2/8.15.2) with ESMTPSA id wAECsstX003333
        (version=TLSv1.2 cipher=DHE-RSA-AES128-SHA bits=128 verify=NO);
        Wed, 14 Nov 2018 23:55:25 +1100
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=aussec.com; s=2016;
        t=1542200126; bh=SOuZ9MsvprAZ7Zn4mnsMnzF6RCPWRrUBfhOO9VO0smA=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References;
        b=AFqK/ni/laMDfKWQGObIU4ILZYkvTlUJcYBP/SaQYD5g8aGrP9+O9SxNtVfeJLWVD
         2hb6zxs+/c2FzvHnbItEdIs9dMCe5bravWEahos9eKRbm6SwZUJEd/BEW+eQWRNkVP
         xT7oyWVTuKNch0yHys45RMAaKuCpmyr7wIZWHhCJP7NveGfRq8Kdyxr+8qX+X7LOrp
         Jj7e/IjESjtJxnn2c8ftKUIa+Xu5+VhBrVONXiS6KlNIJJ0ffuzcPGCwQ5CKjf8RFI
         n9Ht5SQ9/Z0q4g2ZD5L+HfC4okbUhh90kz9fi6HjJTDl1G97JINJEPuVs0CiJVAVwj
         YGXNeE9vEH7Wg==
From: Tom Burkart <tom@aussec.com>
To: Linux kernel mailing list <linux-kernel@vger.kernel.org>
Cc: Tom Burkart <tom@aussec.com>
Subject: [PATCH v7 2/4] pps: descriptor-based gpio, capture-clear addition
Date: Wed, 14 Nov 2018 23:54:30 +1100
Message-Id: <20181114125432.16044-3-tom@aussec.com>
X-Mailer: git-send-email 2.12.3
In-Reply-To: <20181114125432.16044-2-tom@aussec.com>
References: <20181114125432.16044-1-tom@aussec.com>
 <20181114125432.16044-2-tom@aussec.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHaUW4G+xbKLY+AA--.12473S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Gw4rKry3Jr48JFy5AF43Wrg_yoWxCF4UpF
	W8GF45trWDKr4xGw1kJrs8Za4akr1Iva4xt3yIkry8AryYqF9YgF4qyFy0vryfArWkGw47
	XF1FqFWF9rWDuFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW5JwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI
	42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jrv_JF1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07b1
	dgAUUUUU=

This patch changes the GPIO access for the pps-gpio driver from the
integer based ABI to the descriptor based ABI.  It also adds
documentation for the device tree capture-clear option and
device tree capture-clear extraction.  The legacy device tree
entry for the GPIO pin is supported.

Signed-off-by: Tom Burkart <tom@aussec.com>
---
 drivers/pps/clients/pps-gpio.c | 124 ++++++++++++++++++++++++++++-------------
 include/linux/pps-gpio.h       |   3 +-
 2 files changed, 86 insertions(+), 41 deletions(-)

diff --git a/drivers/pps/clients/pps-gpio.c b/drivers/pps/clients/pps-gpio.c
index 333ad7d5b45b..aa8b8fb0e9ab 100644
--- a/drivers/pps/clients/pps-gpio.c
+++ b/drivers/pps/clients/pps-gpio.c
@@ -31,7 +31,8 @@
 #include <linux/slab.h>
 #include <linux/pps_kernel.h>
 #include <linux/pps-gpio.h>
-#include <linux/gpio.h>
+#include <linux/gpio/consumer.h>	/* GPIO descriptor ABI */
+#include <linux/gpio.h>			/* GPIO integer ABI */
 #include <linux/list.h>
 #include <linux/of_device.h>
 #include <linux/of_gpio.h>
@@ -41,9 +42,11 @@ struct pps_gpio_device_data {
 	int irq;			/* IRQ used as PPS source */
 	struct pps_device *pps;		/* PPS source device */
 	struct pps_source_info info;	/* PPS source information */
+	struct gpio_desc *gpio_pin;	/* GPIO port descriptors */
 	bool assert_falling_edge;
 	bool capture_clear;
-	unsigned int gpio_pin;
+	bool legacy_int_gpio;		/* flag for which ABI to use */
+	unsigned int gpio_pin_int;	/* GPIO integer ABI */
 };
 
 /*
@@ -61,18 +64,87 @@ static irqreturn_t pps_gpio_irq_handler(int irq, void *data)
 
 	info = data;
 
-	rising_edge = gpio_get_value(info->gpio_pin);
+	if (info->legacy_int_gpio)
+		rising_edge = gpio_get_value(info->gpio_pin_int);
+	else
+		rising_edge = gpiod_get_value(info->gpio_pin);
 	if ((rising_edge && !info->assert_falling_edge) ||
 			(!rising_edge && info->assert_falling_edge))
 		pps_event(info->pps, &ts, PPS_CAPTUREASSERT, NULL);
 	else if (info->capture_clear &&
 			((rising_edge && info->assert_falling_edge) ||
-			 (!rising_edge && !info->assert_falling_edge)))
+			(!rising_edge && !info->assert_falling_edge)))
 		pps_event(info->pps, &ts, PPS_CAPTURECLEAR, NULL);
 
 	return IRQ_HANDLED;
 }
 
+static int pps_gpio_setup(struct platform_device *pdev)
+{
+	struct pps_gpio_device_data *data = platform_get_drvdata(pdev);
+	const struct pps_gpio_platform_data *pdata = pdev->dev.platform_data;
+	struct device_node *np = pdev->dev.of_node;
+	const char *gpio_label;
+	int ret;
+
+	if (pdata) {
+		data->gpio_pin_int = pdata->gpio_pin_int;
+		data->gpio_pin = pdata->gpio_pin;
+		gpio_label = pdata->gpio_label;
+
+		data->assert_falling_edge = pdata->assert_falling_edge;
+		data->capture_clear = pdata->capture_clear;
+	} else {
+		if (of_get_property(np, "gpios", NULL)) { /* integer GPIO */
+			data->legacy_int_gpio = true;
+
+			ret = of_get_named_gpio(np, "gpios", 0);
+			if (ret < 0) {
+				dev_err(&pdev->dev,
+					"failed to get GPIO from device tree\n");
+				return ret;
+			}
+			data->gpio_pin_int = ret;
+			gpio_label = PPS_GPIO_NAME;
+
+		} else {	/* descriptor GPIO */
+			data->gpio_pin = devm_gpiod_get(&pdev->dev,
+				"pps",
+				GPIOD_IN);
+			if (IS_ERR(data->gpio_pin)) {
+				dev_err(&pdev->dev,
+					"failed to request PPS GPIO\n");
+				return PTR_ERR(data->gpio_pin);
+			}
+		}
+
+		if (of_get_property(np, "assert-falling-edge", NULL))
+			data->assert_falling_edge = true;
+
+		if (of_get_property(np, "capture-clear", NULL))
+			data->capture_clear = true;
+	}
+
+	/* GPIO setup */
+	if (data->legacy_int_gpio) {
+		ret = devm_gpio_request(&pdev->dev,
+			data->gpio_pin_int,
+			gpio_label);
+		if (ret) {
+			dev_err(&pdev->dev, "failed to request GPIO %u\n",
+				data->gpio_pin_int);
+			return ret;
+		}
+
+		ret = gpio_direction_input(data->gpio_pin_int);
+		if (ret) {
+			dev_err(&pdev->dev, "failed to set pin as input\n");
+			return -EINVAL;
+		}
+	}
+	return 0;
+}
+
 static unsigned long
 get_irqf_trigger_flags(const struct pps_gpio_device_data *data)
 {
@@ -90,53 +162,26 @@ get_irqf_trigger_flags(const struct pps_gpio_device_data *data)
 static int pps_gpio_probe(struct platform_device *pdev)
 {
 	struct pps_gpio_device_data *data;
-	const char *gpio_label;
 	int ret;
 	int pps_default_params;
-	const struct pps_gpio_platform_data *pdata = pdev->dev.platform_data;
-	struct device_node *np = pdev->dev.of_node;
 
 	/* allocate space for device info */
 	data = devm_kzalloc(&pdev->dev, sizeof(struct pps_gpio_device_data),
 			GFP_KERNEL);
 	if (!data)
 		return -ENOMEM;
-
-	if (pdata) {
-		data->gpio_pin = pdata->gpio_pin;
-		gpio_label = pdata->gpio_label;
-
-		data->assert_falling_edge = pdata->assert_falling_edge;
-		data->capture_clear = pdata->capture_clear;
-	} else {
-		ret = of_get_gpio(np, 0);
-		if (ret < 0) {
-			dev_err(&pdev->dev, "failed to get GPIO from device tree\n");
-			return ret;
-		}
-		data->gpio_pin = ret;
-		gpio_label = PPS_GPIO_NAME;
-
-		if (of_get_property(np, "assert-falling-edge", NULL))
-			data->assert_falling_edge = true;
-	}
+	platform_set_drvdata(pdev, data);
 
 	/* GPIO setup */
-	ret = devm_gpio_request(&pdev->dev, data->gpio_pin, gpio_label);
-	if (ret) {
-		dev_err(&pdev->dev, "failed to request GPIO %u\n",
-			data->gpio_pin);
-		return ret;
-	}
-
-	ret = gpio_direction_input(data->gpio_pin);
-	if (ret) {
-		dev_err(&pdev->dev, "failed to set pin direction\n");
+	ret = pps_gpio_setup(pdev);
+	if (ret)
 		return -EINVAL;
-	}
 
 	/* IRQ setup */
-	ret = gpio_to_irq(data->gpio_pin);
+	if (data->legacy_int_gpio)
+		ret = gpio_to_irq(data->gpio_pin_int);
+	else
+		ret = gpiod_to_irq(data->gpio_pin);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "failed to map GPIO to IRQ: %d\n", ret);
 		return -EINVAL;
@@ -173,7 +218,6 @@ static int pps_gpio_probe(struct platform_device *pdev)
 		return -EINVAL;
 	}
 
-	platform_set_drvdata(pdev, data);
 	dev_info(data->pps->dev, "Registered IRQ %d as PPS source\n",
 		 data->irq);
 
@@ -209,4 +253,4 @@ MODULE_AUTHOR("Ricardo Martins <rasm@fe.up.pt>");
 MODULE_AUTHOR("James Nuss <jamesnuss@nanometrics.ca>");
 MODULE_DESCRIPTION("Use GPIO pin as PPS source");
 MODULE_LICENSE("GPL");
-MODULE_VERSION("1.0.0");
+MODULE_VERSION("1.1.0");
diff --git a/include/linux/pps-gpio.h b/include/linux/pps-gpio.h
index 56f35dd3d01d..86e2081dc7d1 100644
--- a/include/linux/pps-gpio.h
+++ b/include/linux/pps-gpio.h
@@ -23,9 +23,10 @@
 #define _PPS_GPIO_H
 
 struct pps_gpio_platform_data {
+	struct gpio_desc *gpio_pin;
 	bool assert_falling_edge;
 	bool capture_clear;
-	unsigned int gpio_pin;
+	unsigned int gpio_pin_int;
 	const char *gpio_label;
 };
 
-- 
2.12.3
