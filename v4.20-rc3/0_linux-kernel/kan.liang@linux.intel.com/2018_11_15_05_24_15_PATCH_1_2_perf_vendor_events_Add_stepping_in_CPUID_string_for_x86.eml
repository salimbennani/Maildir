Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:42:45 -0000
Received: from icoremail.net (unknown [209.85.210.170])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv2LpkuxbyUKTAQ--.44718S3;
	Thu, 15 Nov 2018 05:26:01 +0800 (CST)
Received: from mail-pf1-f170.google.com (unknown [209.85.210.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3Xkrmkuxb1FdAAA--.2153S3;
	Thu, 15 Nov 2018 05:25:59 +0800 (CST)
Received: by mail-pf1-f170.google.com with SMTP id c72so3859579pfc.6
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 13:25:59 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=3SY0mVAybDA3Nex7sc3XLcd+6wY/A2U4B4KJJDrl22A=;
        b=GypruTYgxf7e0Z1nDEsTidq7GJgf/o2/2d67KS8Pbw/JSzKgEkwpHCpA0J8X1czdj/
         xIAIEbk9xJhPSU8ks/3zAaNoTFNx4WwV6MsRZcs87wQlUqEbv+U5VmxgUnIkOfdVNPIi
         Wlxv2WY9ggEudvWdX6xb2E+9N3frhDVMQraMgIO6KHOjsvmq5XiAi6Z/TIrqqzs0fc/A
         Uidp5ss8TInn2iqURsn0X64ega6xEZHydrECelODsAq+P88qoHQAig+pAMv//684ux9J
         pLE4ZQQILY3jscOec9YJdIawVyK1htjLQrQp/i/IpaPbvYG2SAOJFHWnyI81BVN9V8lq
         S/+A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gKekegpgsuz6LW1ebsHwFGF3AHOyjaTGfEL3kxucR6qBtB3SnJI
	49xJM/U7BDC2/9HDblCQuLvbGs+e5XmFpq+MlIihbX+AT0o9ZEdf7Q==
X-Received: by 2002:a63:1e17:: with SMTP id e23mr3263072pge.130.1542230758469;
        Wed, 14 Nov 2018 13:25:58 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp6333713pjt;
        Wed, 14 Nov 2018 13:25:57 -0800 (PST)
X-Google-Smtp-Source: AJdET5cMDZmIXhi7Yg+xhzW9s/3cTgJmhr5sMnlUmKWbYeZJlGPguI6RUS8FWxZ9Nc+LZLRXen8L
X-Received: by 2002:a17:902:9004:: with SMTP id a4-v6mr3479709plp.334.1542230757011;
        Wed, 14 Nov 2018 13:25:57 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542230756; cv=none;
        d=google.com; s=arc-20160816;
        b=LpGrUNHyrU8VOmN49xm+Ey1GhT8e2epC1AS3P6Qfsr/jrQwck670+Ib2EVmUAtrRBn
         gOzEw6HHG3DUHmizLWrY3D2YD/YdALoDJe5LfnaI3gFvE9ZFhQ9GggVhe5Bn+cYdRKaG
         6nB023dP8tsNUffjaZKCFblW0nup4lA9ZIOMLSX2hggvtwCnXvDuKAVT3K9vHpoUfgSu
         hYye2jNCiyQABLNI+CXCgNvWcGEtqFtO4GWQGGlWS4Nn9OdJopdoSc/U1IbVD4tzNqYh
         /rq5CrlITXVjiOKhtlYceWxS/uOxO1dGcK9Vo9nwapxsWuiK+yTQwvWaIRjDbRJd1pOL
         s2TQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=3SY0mVAybDA3Nex7sc3XLcd+6wY/A2U4B4KJJDrl22A=;
        b=YNuNImr41xdUEwfDE+j6SI5IKfcbFF+zTy94L1OTDQd9ogbmiBkijLaD+W8KlxoE4U
         x7o/+zslbAEKQJJ4ogbR5sflWGlm+vUXbs71YgvlfgKPTT0GBqIfR7ydISdscmhekZQm
         IUVW/pI1BcKygh82/ikUxF1MHYEmO1Bs8gt6neyfJdmG8j55LMZfDmCU0cda/7/97QMt
         ufnENw/jewuFlWKOQ8ocWC86hRlaVI9QUUt5XwdArpepf3xo0SRZpBTtgk2udweX9Gw+
         h0ocPyXAnEdxJ6oUII0kK6+632G/wjVFKEvFb4VrId3LtCXIfOZKpzG0WJIhX7zSfs4s
         Ibhw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g189-v6si24100980pgc.204.2018.11.14.13.25.37;
        Wed, 14 Nov 2018 13:25:56 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728102AbeKOHaZ (ORCPT <rfc822;leiliang4you@gmail.com>
        + 99 others); Thu, 15 Nov 2018 02:30:25 -0500
Received: from mga03.intel.com ([134.134.136.65]:30981 "EHLO mga03.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725756AbeKOHaZ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 02:30:25 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Nov 2018 13:25:31 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,233,1539673200"; 
   d="scan'208";a="108290548"
Received: from otc-nc-01.jf.intel.com ([10.54.39.11])
  by orsmga001.jf.intel.com with ESMTP; 14 Nov 2018 13:25:31 -0800
From: kan.liang@linux.intel.com
To: acme@kernel.org, mingo@redhat.com, peterz@infradead.org,
        linux-kernel@vger.kernel.org
Cc: jolsa@redhat.com, namhyung@kernel.org, ak@linux.intel.com,
        Kan Liang <kan.liang@linux.intel.com>
Subject: [PATCH 1/2] perf vendor events: Add stepping in CPUID string for x86
Date: Wed, 14 Nov 2018 13:24:15 -0800
Message-Id: <20181114212416.15665-1-kan.liang@linux.intel.com>
X-Mailer: git-send-email 2.17.2
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3Xkrmkuxb1FdAAA--.2153S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCw13tF1xXF13AryDGr1rZwb_yoWruF1DpF
	Z8Cw13A34rXr15tw1fC348XFy3ur1fuF4jqw1rKw15ZFs3XryrXr4fKF1jy34DGrn5Kr1Y
	krsIqr1v9r4xAaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmIb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwAKzVCY07xG64k0F24l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCF
	zxkY4VCF77xAMxkIecxEwVCI4VWxMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67
	AKxVWUCVW8JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AK
	xVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr4
	1l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l
	x2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14
	v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWrJr0_WFyUJbIYCTnI
	WIevJa73UjIFyTuYvjxUgtrcDUUUU

From: Kan Liang <kan.liang@linux.intel.com>

Perf tools cannot find the proper event list for Cascadelake server.
Because Cascadelake server and Skylake server have the same CPU model
number, which are used by perf tools to find the event list.

The stepping for Skylake server is up to 4.
The stepping for Cascadelake server starts from 5.
The stepping can be used to distinguish between them.

The stepping is added in get_cpuid_str().
The stepping information for Skylake server is updated in mapfile.csv.
A x86 specific strcmp_cpuid_cmp() function is added to handle two CPUID
formats in mapfile.csv, "vendor-family-model-stepping" and
"vendor-family-model".
- If a cpuid-regular-expression from the mapfile.csv using the new
  stepping format, a cpuid-string generated on the machine must include
  stepping. Otherwise, it is a mismatch.
- If the cpuid-regular-expression using the old non-stepping format,
  the stepping in the cpuid-string will be ignored.

The script, which using environment string "PERF_CPUID" without stepping
on Skylake server, will be broken. If so, users must fix their scripts.

Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
---
 tools/perf/arch/x86/util/header.c          | 67 +++++++++++++++++++++-
 tools/perf/pmu-events/arch/x86/mapfile.csv |  2 +-
 tools/perf/util/pmu.c                      |  2 +-
 3 files changed, 68 insertions(+), 3 deletions(-)

diff --git a/tools/perf/arch/x86/util/header.c b/tools/perf/arch/x86/util/header.c
index fb0d71afee8b..b428a4b00bf7 100644
--- a/tools/perf/arch/x86/util/header.c
+++ b/tools/perf/arch/x86/util/header.c
@@ -4,6 +4,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <regex.h>
 
 #include "../../util/header.h"
 
@@ -70,9 +71,73 @@ get_cpuid_str(struct perf_pmu *pmu __maybe_unused)
 {
 	char *buf = malloc(128);
 
-	if (buf && __get_cpuid(buf, 128, "%s-%u-%X$") < 0) {
+	if (buf && __get_cpuid(buf, 128, "%s-%u-%X-%X$") < 0) {
 		free(buf);
 		return NULL;
 	}
 	return buf;
 }
+
+/* Full CPUID format for x86 is vendor-family-model-stepping */
+static bool is_full_cpuid(const char *cpuid)
+{
+	const char *tmp = cpuid;
+	int count = 0;
+
+	while ((tmp = strchr(tmp, '-')) != NULL) {
+		count++;
+		tmp++;
+	}
+
+	if (count == 3)
+		return true;
+
+	return false;
+}
+
+int strcmp_cpuid_str(const char *mapcpuid, const char *cpuid)
+{
+	regex_t re;
+	regmatch_t pmatch[1];
+	int match;
+	bool full_mapcpuid = is_full_cpuid(mapcpuid);
+	bool full_cpuid = is_full_cpuid(cpuid);
+
+	/*
+	 * Full CPUID format is required to identify a platform.
+	 * Error out if the cpuid string is incomplete.
+	 */
+	if (full_mapcpuid && !full_cpuid) {
+		pr_info("Invalid CPUID %s. Full CPUID is required, "
+			"vendor-family-model-stepping\n", cpuid);
+		return 1;
+	}
+
+	if (regcomp(&re, mapcpuid, REG_EXTENDED) != 0) {
+		/* Warn unable to generate match particular string. */
+		pr_info("Invalid regular expression %s\n", mapcpuid);
+		return 1;
+	}
+
+	match = !regexec(&re, cpuid, 1, pmatch, 0);
+	regfree(&re);
+	if (match) {
+		size_t match_len = (pmatch[0].rm_eo - pmatch[0].rm_so);
+		size_t cpuid_len;
+
+		/* If the full CPUID format isn't required,
+		 * ignoring the stepping.
+		 */
+		if (!full_mapcpuid && full_cpuid)
+			cpuid_len = strrchr(cpuid, '-') - cpuid;
+		else
+			cpuid_len = strlen(cpuid);
+
+
+		/* Verify the entire string matched. */
+		if (match_len == cpuid_len)
+			return 0;
+	}
+
+	return 1;
+}
diff --git a/tools/perf/pmu-events/arch/x86/mapfile.csv b/tools/perf/pmu-events/arch/x86/mapfile.csv
index 7e3cce3bcf3b..183a42c99251 100644
--- a/tools/perf/pmu-events/arch/x86/mapfile.csv
+++ b/tools/perf/pmu-events/arch/x86/mapfile.csv
@@ -31,4 +31,4 @@ GenuineIntel-6-2A,v15,sandybridge,core
 GenuineIntel-6-2C,v2,westmereep-dp,core
 GenuineIntel-6-25,v2,westmereep-sp,core
 GenuineIntel-6-2F,v2,westmereex,core
-GenuineIntel-6-55,v1,skylakex,core
+GenuineIntel-6-55-[01234],v1,skylakex,core
diff --git a/tools/perf/util/pmu.c b/tools/perf/util/pmu.c
index afd68524ffa9..0996260178f7 100644
--- a/tools/perf/util/pmu.c
+++ b/tools/perf/util/pmu.c
@@ -670,7 +670,7 @@ char * __weak get_cpuid_str(struct perf_pmu *pmu __maybe_unused)
  * cpuid string generated on this platform.
  * Otherwise return non-zero.
  */
-int strcmp_cpuid_str(const char *mapcpuid, const char *cpuid)
+int __weak strcmp_cpuid_str(const char *mapcpuid, const char *cpuid)
 {
 	regex_t re;
 	regmatch_t pmatch[1];
-- 
2.17.1
