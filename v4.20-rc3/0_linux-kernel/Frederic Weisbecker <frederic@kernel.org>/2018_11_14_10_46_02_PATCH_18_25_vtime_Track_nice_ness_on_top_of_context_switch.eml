Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 06:41:13 -0000
Received: from icoremail.net (unknown [209.85.215.173])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv977jOtb4Q+LAQ--.42117S3;
	Wed, 14 Nov 2018 10:48:28 +0800 (CST)
Received: from mail-pg1-f173.google.com (unknown [209.85.215.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD33Un5jOtbUsQ7AA--.14680S3;
	Wed, 14 Nov 2018 10:48:25 +0800 (CST)
Received: by mail-pg1-f173.google.com with SMTP id z11so4014009pgu.0
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 18:48:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:sender:precedence:list-id;
        bh=XUa9Lv68JjognwOCjH1UluTYQjeZO0rO+6cQVA4O1sY=;
        b=PVpaH414ejkDqkDiDDZ2tBh8jw2m993u0cm251sWkY3U7HXsxtonxEL7xofwHn482j
         MzfEX7Esz4SGPYXlCbbDYbQ2XCqQH794cXbmSUmvtP66a7ZICIOPKxhaOTl+AzsnpDIS
         TaKbDF2CkoSrSL0xX+SrNCO2XfQvDbOJf5MQ0DjlsIWoebl8WwKTOWqfJndcdJEDKdcW
         xo3RcgvhuDlDkd9K3ddqEAQsvlt0ZmHZ0MiEjhHGblci/GN1duFp2JIDrzr4HIBSB2bW
         eLY9weUgartK+g4tqpqhF20c9b6C8cQCOOHGvhdConmrbkOMIE97uWC2wY+ZfYKQusYf
         0aVg==
X-Gm-Message-State: AGRZ1gIC2a2T49pLWl28a39O5itO+ZkDDNNgZh5he6fzkiIwLQ3GaCAt
	wyp8ThKvPXa/2Znz78+TN/MoIa/8jtP/l+ULtlPDLFiGDLwRQt71ZQ==
X-Received: by 2002:a63:460a:: with SMTP id t10-v6mr111404pga.197.1542163705016;
        Tue, 13 Nov 2018 18:48:25 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5285134pjt;
        Tue, 13 Nov 2018 18:48:24 -0800 (PST)
X-Google-Smtp-Source: AJdET5d0sXKY9txW4+rgffslWGQp/bbOX5qL+Z93b6xU1mDK02ujCcPGvGNX5URkyQaUBG4B8QT8
X-Received: by 2002:a17:902:8698:: with SMTP id g24-v6mr161120plo.96.1542163704330;
        Tue, 13 Nov 2018 18:48:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542163704; cv=none;
        d=google.com; s=arc-20160816;
        b=GxQCgQ7ojLf1ef05HD6MQanoMi9/LSsLU5DuNdHiibae7kT8h7z97rJR8MztOAp9mx
         70xLvfmuhatNmk9Aw2R1CpdcTlVd+cUCwyZmRFlv9LmTKcg1QbtE3RkQJ6ItU26ZI5it
         lCsf+6uF+y5xRnv9HWP9fUqC3hZlh+rEpWvuDNoZT41Fw/YGY6dqWIqAkg4bwDGnw/Fi
         Z0xXc7l7aF+v8IIT2DSEkrti/UTCgdJzZFuMvV1fJHsg/+XEdAPxYfDbYCsGMrgQK2u6
         i00D8Q9ymDBCpaUX8ctstb1YE4dAdQAMrlvxpI80sIhHEwGKcxWNMrWYAghp5K1CI0A4
         GFvA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dkim-signature;
        bh=XUa9Lv68JjognwOCjH1UluTYQjeZO0rO+6cQVA4O1sY=;
        b=tUrIbdUHeYtoVvRX9JI8dGra/LhtW0BTFQWaUTR+CKJvNtx+1LgXLxIgsCg72dqh8z
         XGXxVAiKYlGY543wSBHBtq1CvDE9uFeqeAfyGidIODRxNl2CNJK896O/Nw1uB4ZrrmR/
         RMEP5yWwQrT6qBLoteYnp3cLFzyG4ekS+WDeZ3OQgKPB6SDG8zKVc91X33G5Cba2vDJf
         2osMMW6TcTgxBejJR7Tl7L/NSe9vCxDJdPpw8gLagRKv0WAI1V7zcn+i1x+7Zc/3HHBT
         om/9JQylZajh0AMuxMlYzLqN2VJfze2QdbG36a7I0lR/k+59nA0YOXmemCfMtbNVGmGu
         RWfg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=dS+mW69T;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id o22-v6si23504508pfi.279.2018.11.13.18.48.09;
        Tue, 13 Nov 2018 18:48:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732693AbeKNMsJ (ORCPT <rfc822;zhaoweiliew@gmail.com>
        + 99 others); Wed, 14 Nov 2018 07:48:09 -0500
Received: from mail.kernel.org ([198.145.29.99]:52082 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732434AbeKNMsH (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 07:48:07 -0500
Received: from lerouge.suse.de (lfbn-ncy-1-241-207.w83-194.abo.wanadoo.fr [83.194.85.207])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id A4F9522419;
        Wed, 14 Nov 2018 02:46:55 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542163617;
        bh=eUj4RcSukekEPCJX4GbNOc6TawSt0YVnBhnGqU7g4fw=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=dS+mW69Td68Rv6GiaQNwsB0k4LI91bncHwUk9nx0GRyOgASpfA6KKD2KIFI3OrFVf
         CR33ZwBo5+wNyJFhYBwSTOJMF8IW7Wk8WDKUeK1NzxnrteGQ6vbdlML8anWGpzM3sa
         cXXpz+BEJTJ7U74XXmXwnmB2Gwe0rghX67rKJtPc=
From: Frederic Weisbecker <frederic@kernel.org>
To: LKML <linux-kernel@vger.kernel.org>
Cc: Frederic Weisbecker <frederic@kernel.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Wanpeng Li <wanpengli@tencent.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Yauheni Kaliuta <yauheni.kaliuta@redhat.com>,
        Ingo Molnar <mingo@kernel.org>, Rik van Riel <riel@redhat.com>
Subject: [PATCH 18/25] vtime: Track nice-ness on top of context switch
Date: Wed, 14 Nov 2018 03:46:02 +0100
Message-Id: <1542163569-20047-19-git-send-email-frederic@kernel.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1542163569-20047-1-git-send-email-frederic@kernel.org>
References: <1542163569-20047-1-git-send-email-frederic@kernel.org>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD33Un5jOtbUsQ7AA--.14680S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJF1DZw47ArykKF1xWFy8Krg_yoW5KF43pF
	Z5Cw1agF1rJFnrCwn3Cws0vry5Ww1kJ343GrZrJ34Fyr13tr45tw4Dtw1YyryayFZa9Fya
	qa1I9343Kr1jkFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW8JwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCY
	IxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7I
	U5kWrJUUUUU==

We need to read the nice value of the task running on any CPU, possibly
remotely, in order to correctly support kcpustat on nohz_full.
Unfortunately we can't just read task_nice(tsk) when tsk runs on another
CPU because its nice value may be concurrently changed. There could be a
risk that a recently modified nice value is thought to apply for a longer
while than is supposed to.

For example if a task runs at T0 with nice = -10, then its nice value
is changed at T0 + 1 second with nice = 10, a reader at T0 + 1 second
could think that the task had this "nice == 10" value since the beginning
(T0) and spuriously account 1 second nice time on kcpustat instead of 1
second user time.

So we need to track the nice value changes under vtime seqcount. Start
with context switches and account the vtime nice-ness on top of it.

Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
Cc: Yauheni Kaliuta <yauheni.kaliuta@redhat.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Rik van Riel <riel@redhat.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Wanpeng Li <wanpengli@tencent.com>
Cc: Ingo Molnar <mingo@kernel.org>
---
 include/linux/sched.h  |  1 +
 kernel/sched/cputime.c | 44 +++++++++++++++++++++++++++++++++++---------
 2 files changed, 36 insertions(+), 9 deletions(-)

diff --git a/include/linux/sched.h b/include/linux/sched.h
index 27e0544..356326f 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -280,6 +280,7 @@ enum vtime_state {
 struct vtime {
 	seqcount_t		seqcount;
 	unsigned long long	starttime;
+	int			nice;
 	enum vtime_state	state;
 	unsigned int		cpu;
 	u64			utime;
diff --git a/kernel/sched/cputime.c b/kernel/sched/cputime.c
index 8f5dee2..07c2e7f 100644
--- a/kernel/sched/cputime.c
+++ b/kernel/sched/cputime.c
@@ -735,13 +735,42 @@ static void vtime_account_system(struct task_struct *tsk,
 static void vtime_account_guest(struct task_struct *tsk,
 				struct vtime *vtime)
 {
+	enum cpu_usage_stat index;
+
 	vtime->gtime += get_vtime_delta(vtime);
-	if (vtime->gtime >= TICK_NSEC) {
-		account_guest_time(tsk, vtime->gtime);
-		vtime->gtime = 0;
-	}
+
+	if (vtime->gtime < TICK_NSEC)
+		return;
+
+	if (vtime->nice)
+		index = CPUTIME_GUEST_NICE;
+	else
+		index = CPUTIME_GUEST;
+
+	account_guest_time_index(tsk, vtime->gtime, index);
+	vtime->gtime = 0;
 }
 
+static void vtime_account_user(struct task_struct *tsk,
+			       struct vtime *vtime)
+{
+	enum cpu_usage_stat index;
+
+	vtime->utime += get_vtime_delta(vtime);
+
+	if (vtime->utime < TICK_NSEC)
+		return;
+
+	if (vtime->nice)
+		index = CPUTIME_NICE;
+	else
+		index = CPUTIME_USER;
+
+	account_user_time_index(tsk, vtime->utime, index);
+	vtime->utime = 0;
+}
+
+
 static void __vtime_account_kernel(struct task_struct *tsk,
 				   struct vtime *vtime)
 {
@@ -779,11 +808,7 @@ void vtime_user_exit(struct task_struct *tsk)
 	struct vtime *vtime = &tsk->vtime;
 
 	write_seqcount_begin(&vtime->seqcount);
-	vtime->utime += get_vtime_delta(vtime);
-	if (vtime->utime >= TICK_NSEC) {
-		account_user_time(tsk, vtime->utime);
-		vtime->utime = 0;
-	}
+	vtime_account_user(tsk, vtime);
 	vtime->state = VTIME_SYS;
 	write_seqcount_end(&vtime->seqcount);
 }
@@ -864,6 +889,7 @@ void vtime_task_switch_generic(struct task_struct *prev)
 		vtime->state = VTIME_SYS;
 	vtime->starttime = sched_clock();
 	vtime->cpu = smp_processor_id();
+	vtime->nice = (task_nice(current) > 0) ? 1 : 0;
 	write_seqcount_end(&vtime->seqcount);
 
 	rcu_assign_pointer(kcpustat->curr, current);
-- 
2.7.4
