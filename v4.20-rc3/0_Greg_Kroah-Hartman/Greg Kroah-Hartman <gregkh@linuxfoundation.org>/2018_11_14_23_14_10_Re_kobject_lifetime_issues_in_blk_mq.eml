Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:41:03 -0000
Received: from icoremail.net (unknown [209.85.210.173])
	by mail-app2 (Coremail) with SMTP id by_KCgCHv+RSPOxbthWRAQ--.43258S3;
	Wed, 14 Nov 2018 23:16:35 +0800 (CST)
Received: from mail-pf1-f173.google.com (unknown [209.85.210.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnDUlQPOxbjDk_AA--.6140S3;
	Wed, 14 Nov 2018 23:16:32 +0800 (CST)
Received: by mail-pf1-f173.google.com with SMTP id g62so4803674pfd.12
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 07:16:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=9sUUPriC/gleM79cUzuQFcOEjIRV9eustH7ay6VUCVA=;
        b=geMOVUvtaKKvKr+UTQ0F08w4wzDbAGY5ST+m8Hj8lEPCoOrIgj8J/8x7VTHNlA0oBD
         y0g1kJm9IKikrq16im0/8aRrI+cxhJ1PXHhv1ydvdBhK/Cr44iqa+VGVyREmIFlx2hVW
         EVSYyE+XCXmlxQcTF/0nBy7dVOy788X5TdfLKD9mXSQHhQRCc2E0e+00Oa/zLxKs7vGv
         rLkP6o44/vsT3iGpns34GVOyLUNpJ/i79udg2Ct6UIvHTuJMAv57kGzyF1M52NChPrgq
         UClnNhdaLdyZqHcFf8LdlWsFxY985MN6giFkXX8Wl0TiGL2VwM1fGzg6mwmhzUrTVIw1
         FBMw==
X-Gm-Message-State: AGRZ1gKWwYnQ7jVt1Zes1ZQ/QTt9M+UGe6y4evzaXunZOmFJttLUhWyQ
	7rX0ihIiT7TFs1SWjVx1+VJAxth+RUtroeAcVvfmTCEWlb5znQA9nQ==
X-Received: by 2002:a63:1e17:: with SMTP id e23mr2123047pge.130.1542208592433;
        Wed, 14 Nov 2018 07:16:32 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5934092pjt;
        Wed, 14 Nov 2018 07:16:31 -0800 (PST)
X-Google-Smtp-Source: AJdET5eW9wCGDqB9F8wKSaBqFXaRGQMJINBVZW83ocbcGZGTT4LYBANvYQ7R3YT4pHWMErDLx4vf
X-Received: by 2002:a62:714a:: with SMTP id m71-v6mr2474958pfc.89.1542208591071;
        Wed, 14 Nov 2018 07:16:31 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542208591; cv=none;
        d=google.com; s=arc-20160816;
        b=mGNaomlvizOpQbYXKb7ehHJsgX8W4gXptWkkLVPNjbegw9hXW4HPI0JdcUx5gGYa0t
         830qNYjvnolzASdTOUagEmKTyS1TWGmVWs3uDCTqCCNw+0s50o/5tlS1QFG216T7/wik
         08oOON+gweRoHztmKYo4mcjC+ZvtPfb01a1zI44ACUJtjcauxb4iTk4+tCiid8qLMk1p
         NIvblqRIpn3C0rKR8LAgq51bMaOpi54Jn+QowpMLAzzmUeyZa4rdWcgkmzg1UeJH1j5w
         mt/U7wuPPPZLCPRDrHY6i7QucOdtA18lNOJ7LiWJ7l9eorM16GumME1buwFPEHu8oQpa
         U0jw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=9sUUPriC/gleM79cUzuQFcOEjIRV9eustH7ay6VUCVA=;
        b=UFH7rZiz5t5aZCMP3Gj4V2+BXDts1Cu1ZrNaa82b1/FTYSZYdPw7GgSTeRAz8OQab+
         0fD9HPvFiOAU8Kw6ZHOc1iAgdCQBY/102X6xI1herkdVhk2opsG5NQflTf1ieV61f+QS
         6ObFO8wy/gKznlsNYQIjvThYlEdV6yEWw85100whn/eS40LCzUNS71Ba7y8IvaZP9KYz
         zilZbz6soM1UAEp0FAkW9rnh3rKcPQ4ZetSoP89Vkulwswh1EMyxiTStoUoMp+XhtDrQ
         jTBIX8gxZ+pATxYgGrkEuV6fhYp+qsjC6ENM5DPVL4pK2XyKOQbdl9OL4XClk3a4ERs7
         gX9w==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=JgzclztT;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z14si24109428pgj.73.2018.11.14.07.16.06;
        Wed, 14 Nov 2018 07:16:31 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733291AbeKOBRt (ORCPT <rfc822;docz2a@gmail.com> + 99 others);
        Wed, 14 Nov 2018 20:17:49 -0500
Received: from mail.kernel.org ([198.145.29.99]:46938 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727789AbeKOBRt (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 20:17:49 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 3DDFB2145D;
        Wed, 14 Nov 2018 15:14:10 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542208450;
        bh=LeFOaLZzTZDvWVWDNUW7iq5ccjpsCF50693wycYXhmo=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=JgzclztT/tarw9uMHB/if/OpSJHSQRBy0TncMvPIC78hbnoz9b+NiYnggMAt4Cy7U
         3w44IDY96uegGPXkmpnN6PVSkBL8+R0TlO4KTFgJx7fiZWqBfl2yNBZE+MQfsyQBRP
         N+n/VNKfIn5TEAyGLYL0vJ7Zipio7qf0jRSqY/rY=
Date: Wed, 14 Nov 2018 07:14:10 -0800
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: Ming Lei <ming.lei@redhat.com>
Cc: Guenter Roeck <linux@roeck-us.net>,
        Ming Lei <tom.leiming@gmail.com>, Jens Axboe <axboe@fb.com>,
        Peter Zijlstra <peterz@infradead.org>,
        linux-block@vger.kernel.org, linux-kernel@vger.kernel.org,
        Hannes Reinecke <hare@suse.de>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Christoph Hellwig <hch@lst.de>,
        "Martin K. Petersen" <martin.petersen@oracle.com>,
        "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>,
        linux-scsi@vger.kernel.org
Subject: Re: kobject lifetime issues in blk-mq
Message-ID: <20181114151410.GB26378@kroah.com>
References: <20181109203518.GA7130@roeck-us.net>
 <20181112092051.GA391@ming.t460p>
 <20181112094406.GB391@ming.t460p>
 <20181112164848.GA1790@roeck-us.net>
 <20181112200236.GA4415@kroah.com>
 <20181113002226.GA4455@ming.t460p>
 <20181113004124.GC4455@ming.t460p>
 <20181114110827.GA31430@ming.t460p>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181114110827.GA31430@ming.t460p>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnDUlQPOxbjDk_AA--.6140S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvAXoW3CFyfAFy5Kr17AF4xWw4DArb_yoW8Gr1rto
	WrXrn7Jw4fGr1UJr18Aw1vgr1UG34UAFnrXrWYg345Kr4Utw4UJF1UAw18GF4ftr18GF15
	Ar1xXw1UAa4UJFn5n29KB7ZKAUJUUUUU529EdanIXcx71UUUUj7v73VFW2AGmfu7jjvjm3
	AaLaJ3UjIYCTnIWjp_UUUOb7k0a2IF6w4kM7kC6x804xWl14x267AKxVWUJVW8JwAFIxvE
	14AKwVWUJVWUGwA2ocxC64kIII0Yj41l84x0c7CEw4AK67xGY2AK021l84ACjcxK6xIIjx
	v20xvE14v26F1j6w1UM28EF7xvwVC0I7IYx2IY6xkF7I0E14v26F4j6r4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Av
	z4vEIxC_XrWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26ryj6F1UMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAI
	cVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUHmhF
	UUUUU

On Wed, Nov 14, 2018 at 07:08:28PM +0800, Ming Lei wrote:
> On Tue, Nov 13, 2018 at 08:41:24AM +0800, Ming Lei wrote:
> > On Tue, Nov 13, 2018 at 08:22:26AM +0800, Ming Lei wrote:
> > > On Mon, Nov 12, 2018 at 12:02:36PM -0800, Greg Kroah-Hartman wrote:
> > > > On Mon, Nov 12, 2018 at 08:48:48AM -0800, Guenter Roeck wrote:
> > > > > On Mon, Nov 12, 2018 at 05:44:07PM +0800, Ming Lei wrote:
> > > > > > On Mon, Nov 12, 2018 at 05:20:51PM +0800, Ming Lei wrote:
> > > > > > > On Fri, Nov 09, 2018 at 12:35:18PM -0800, Guenter Roeck wrote:
> > > > > > > > Hi,
> > > > > > > > 
> > > > > > > > Images with CONFIG_DEBUG_KOBJECT=y, CONFIG_DEBUG_KOBJECT_RELEASE=y
> > > > > > > > enabled report kobject lifetime issues when booting an image in qemu
> > > > > > > > using virtio-scsi-pci.
> > > > > > > > 
> > > > > > > > Bisect points to two different commits, depending on the kernel
> > > > > > > > configuration.
> > > > > > > > 
> > > > > > > > 1st configuration: defconfig plus:
> > > > > > > > 
> > > > > > > > CONFIG_VIRTIO_BLK=y
> > > > > > > > CONFIG_SCSI_LOWLEVEL=y
> > > > > > > > CONFIG_SCSI_VIRTIO=y
> > > > > > > > CONFIG_VIRTIO_PCI=y
> > > > > > > > CONFIG_VIRTIO_MMIO=y
> > > > > > > > CONFIG_DEBUG_OBJECTS=y
> > > > > > > > CONFIG_DEBUG_OBJECTS_FREE=y
> > > > > > > > CONFIG_DEBUG_OBJECTS_TIMERS=y
> > > > > > > > CONFIG_DEBUG_KOBJECT=y
> > > > > > > > CONFIG_DEBUG_KOBJECT_RELEASE=y
> > > > > > > > 
> > > > > > > > Bisecting this configuration points to commit b5b6e8c8d3b4 ("scsi:
> > > > > > > > virtio_scsi: fix IO hang caused by automatic irq vector affinity")
> > > > > > > > as the culprit. This commit enforces the use of blk-mq for virtio_scsi;
> > > > > > > > the bisect log is therefore a bit misleading.
> > > > > > > > 
> > > > > > > > 2nd configuration: As above, plus:
> > > > > > > > CONFIG_SCSI_MQ_DEFAULT=y
> > > > > > > > 
> > > > > > > > With this configuration, bisect points to commit 7ea5fe31c12d
> > > > > > > > ("blk-mq: make lifetime consitent between q/ctx and its kobject").
> > > > > > > > 
> > > > > > > > The qemu command line used to reproduce the problem is as follows.
> > > > > > > > The qemu version does not seem to matter (I tested with qemu versions
> > > > > > > > 2.5, 2.11, and 3.0).
> > > > > > > > 
> > > > > > > > qemu-system-x86_64 \
> > > > > > > > 	-kernel arch/x86/boot/bzImage \
> > > > > > > > 	-device virtio-scsi-pci,id=scsi \
> > > > > > > > 	-device scsi-hd,bus=scsi.0,drive=d0 \
> > > > > > > > 	-drive file=./wheezy.img,format=raw,if=none,id=d0 \
> > > > > > > > 	-snapshot \
> > > > > > > > 	-m 2G -smp 4 -enable-kvm \
> > > > > > > > 	-net user,host=10.0.2.10,hostfwd=tcp::10022-:22 -net nic \
> > > > > > > > 	-nographic -monitor none \
> > > > > > > > 	-no-reboot \
> > > > > > > > 	-append "console=ttyS0 root=/dev/sda earlyprintk=serial panic_on_warn=1 panic=-1"
> > > > > > > > 
> > > > > > > > Root file system:
> > > > > > > > 	https://storage.googleapis.com/syzkaller/wheezy.img
> > > > > > > > or:
> > > > > > > > 	https://github.com/groeck/linux-build-test/blob/master/rootfs/x86_64/rootfs.ext2.gz
> > > > > > > > 
> > > > > > > > It seems that any root file system can be used to reproduce the problem.
> > > > > > > > Also, the problem is not limited to virtio-scsi-pci. I also tried
> > > > > > > > am53c974, lsi53c810, and lsi53c895a (after enabling the respective
> > > > > > > > drivers), with the same result.
> > > > > > > > 
> > > > > > > > Overall, this suggests that the problem is related to blk-mq and was
> > > > > > > > indeed introduced with commit 7ea5fe31c12d.
> > > > > > > > 
> > > > > > > > For reference, I attached an actual crash log as well as a set of bisect
> > > > > > > > logs below.
> > > > > > > > 
> > > > > > > > Unfortunately, my understanding of blk-mq is not good enough to find the
> > > > > > > > underlying problem and suggest a fix. Please let me know if there is
> > > > > > > > anything else I can do to help fixing the problem.
> > > > > > > > 
> > > > > > > > Note that the problem was originally reported by syzbot running a test
> > > > > > > > on chromeos-4.14. It may well be that the problem has already been
> > > > > > > > reported and is being worked on. If so, please apologize the noise.
> > > > > > > > 
> > > > > > > > Thanks,
> > > > > > > > Guenter
> > > > > > > > 
> > > > > > > > ---
> > > > > > > > [    8.700038] ------------[ cut here ]------------
> > > > > > > > [    8.700376] ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x10
> > > > > > > > [    8.701032] WARNING: CPU: 0 PID: 0 at lib/debugobjects.c:329 debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032] Kernel panic - not syncing: panic_on_warn set ...
> > > > > > > > [    8.701032] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.20.0-rc1 #30
> > > > > > > > [    8.701032] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
> > > > > > > > [    8.701032] Call Trace:
> > > > > > > > [    8.701032]  <IRQ>
> > > > > > > > [    8.701032]  dump_stack+0x46/0x5b
> > > > > > > > [    8.701032]  panic+0xf3/0x246
> > > > > > > > [    8.701032]  ? debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032]  __warn+0xeb/0xf0
> > > > > > > > [    8.701032]  ? debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032]  ? debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032]  report_bug+0xb1/0x120
> > > > > > > > [    8.701032]  fixup_bug.part.10+0x13/0x30
> > > > > > > > [    8.701032]  do_error_trap+0x8f/0xb0
> > > > > > > > [    8.701032]  do_invalid_op+0x31/0x40
> > > > > > > > [    8.701032]  ? debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032]  invalid_op+0x14/0x20
> > > > > > > > [    8.701032] RIP: 0010:debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032] Code: 8b 43 10 83 c2 01 8b 4b 14 89 15 c1 e2 78 01 4c 8b 45 00 4c
> > > > > > > > 89 e6 48 c7 c7 f0 ca 41 a6 48 8b 14 c5 a0 f7 24 a6 e8 06 8e cc ff <0f> 0b 5b 83
> > > > > > > > 05 70 47 1a 01 01 5d 41 5c c3 83 05 65 47 1a 01 01 c3
> > > > > > > > [    8.701032] RSP: 0018:ffff89b9fda03e48 EFLAGS: 00010082
> > > > > > > > [    8.701032] RAX: 0000000000000000 RBX: ffff89b9fd49d0c8 RCX: ffffffffa6646e18
> > > > > > > > [    8.701032] RDX: 0000000000000001 RSI: 0000000000000082 RDI: ffffffffa6cc596c
> > > > > > > > [    8.701032] RBP: ffffffffa664a5c0 R08: 79616c6564203a74 R09: 5f6b726f775f6465
> > > > > > > > [    8.701032] R10: ffff89b9fda03f10 R11: 3178302f3078302b R12: ffffffffa6403e22
> > > > > > > > [    8.701032] R13: 0000000000000001 R14: ffffffffa6d4d458 R15: ffff89b9fc4c8780
> > > > > > > > [    8.701032]  ? debug_print_object+0x6a/0x80
> > > > > > > > [    8.701032]  debug_check_no_obj_freed+0x1b8/0x1ea
> > > > > > > > [    8.701032]  ? rcu_process_callbacks+0x2a7/0x750
> > > > > > > > [    8.701032]  kmem_cache_free+0x6e/0x1a0
> > > > > > > > [    8.701032]  ? __blk_release_queue+0x150/0x150
> > > > > > > > [    8.701032]  rcu_process_callbacks+0x2a7/0x750
> > > > > > > > [    8.701032]  __do_softirq+0xf2/0x2c7
> > > > > > > > [    8.701032]  irq_exit+0xb7/0xc0
> > > > > > > > [    8.701032]  smp_apic_timer_interrupt+0x67/0x130
> > > > > > > > [    8.701032]  apic_timer_interrupt+0xf/0x20
> > > > > > > > [    8.701032]  </IRQ>
> > > > > > > > [    8.701032] RIP: 0010:default_idle+0x12/0x140
> > > > > > > > [    8.701032] Code: fe ff ff c6 43 08 00 fb eb b0 31 c0 eb b4 e8 65 c8 60 ff 90
> > > > > > > > 90 90 90 90 41 54 55 53 65 8b 2d 15 c4 3b 5a 66 66 66 66 90 fb f4 <65> 8b 2d 07
> > > > > > > > c4 3b 5a 66 66 66 66 90 5b 5d 41 5c c3 65 8b 05 f6 c3
> > > > > > > > [    8.701032] RSP: 0018:ffffffffa6603e98 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff13
> > > > > > > > [    8.701032] RAX: ffffffffa5c52d10 RBX: 0000000000000000 RCX: 0000000000000000
> > > > > > > > [    8.701032] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 000000020605092a
> > > > > > > > [    8.701032] RBP: 0000000000000000 R08: ffffffffcff7766a R09: ffff89b9fda20b00
> > > > > > > > [    8.701032] R10: 0000000000000000 R11: 0000000000002400 R12: ffffffffa6611740
> > > > > > > > [    8.701032] R13: 0000000000000000 R14: 0000000000000000 R15: ffffffffa6611740
> > > > > > > > [    8.701032]  ? __sched_text_end+0x5/0x5
> > > > > > > > [    8.701032]  do_idle+0x19c/0x230
> > > > > > > > [    8.701032]  cpu_startup_entry+0x14/0x20
> > > > > > > > [    8.701032]  start_kernel+0x491/0x4b1
> > > > > > > > [    8.701032]  secondary_startup_64+0xa4/0xb0
> > > > > > > > [    8.701032] Kernel Offset: 0x24200000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
> > > > > > > > 
> > > > > > > 
> > > > > > > That is simply caused by enabling DEBUG_KOBJECT_RELEASE itself, which
> > > > > > > tries to do kboject_release() after delaying a while.
> > > > > > > 
> > > > > > > Wrt. this issue, q->mq_kobj is embedded in 'request_queue' whose
> > > > > > > instance is freed in release handler of q->kobj. So when one instance
> > > > > > > of 'request_queue' is freed, DEBUG_KOBJECT_RELEASE still expects that
> > > > > > > the q->mq_kobj is active.
> > > > > > > 
> > > > > > > The release handler of q->mq_kobj is NOP actually, so in reality it won't
> > > > > > > be one issue at all.
> > > > > > 
> > > > > > Given we have removed legacy IO path completely, it should be fine to
> > > > > > remove q->mq_kobj and simply put everything under the kobj of queue,
> > > > > > especially any attributes under mq aren't marked as stable ABI.
> > > > > 
> > > > > That might be possible going forward, but that does not appear to be
> > > > > a feasible solution for stable releases. I am not sure though if the
> > > > > "stable ABI" argument is valid. Almost all sysfs attributes are not
> > > > > marked stable. If there are applications using it, removing the atttributes
> > > > > would still break userspace.
> > > > 
> > > > Yeah, don't move attributes around for no good reason, you will make
> > > > userspace grumpy :)
> > > 
> > > There are very less attributes left under /sys/block/$DEV/mq.
> > > 
> > > > 
> > > > > Since the release function of mq_kobj is NOP (for reference, I assume
> > > > > we are talking about blk_mq_sysfs_release), can it just be NULL ?
> > > > 
> > > > Someone tried to work around the internal kernel warning that comes
> > > > about when you set a release function to NULL.  As per the in-kernel
> > > > documentation, I now get to make fun of that author by saying "do you
> > > > think I added those checks and message just for no good reason?  Don't
> > > > try to be smarter than the driver core by providing an empty release
> > > > function to make the kernel be quiet.  That's NOT what the kernel is
> > > > trying to tell you here at all."
> > > > 
> > > > So fix this, that is the correct thing to do.  Memory is freed in a
> > > > release function, to not do so is almost always a sign of a design bug.
> > > 
> > > The root cause is that both q->kobj and q->mq_kobj are bound to lifetime
> > > of same 'request_queue' instance.
> > > 
> > > We may allocate q->mq_kobj dynamically to fix this issue.
> > > 
> > > And now all drivers are converted to mq, and it is really necessary to keep
> > > 'q->mq_kobj'
> > > 
> > > > 
> > > > > That it is an empty function seems to be just as good or bad as having
> > > > > no function at all. An empty function just avoids the "broken" debug
> > > > > message. That message is still better than rendering DEBUG_KOBJECT_RELEASE
> > > > > useless.
> > > > > 
> > > > > Copying GregKH for input.
> > > > 
> > > > Thanks, this code is broken and needs to be fixed.
> > > 
> > > I will post a patch to address the 'issue'.
> > 
> > Not only q->mq_kobj, there is also each 'struct blk_mq_ctx' which is
> > referenced via percpu variable of q->queue_ctx, we still may introduce
> > one indirect table and allocate each blk_mq_ctx dynamically just for
> > making DEBUG_KOBJECT_RELEASE happy. But code can become not readable
> > as before.
> > 
> > Just wondering if it is possible to deal with this kind of shared
> > lifetime issue among kobjects.
> > 
> > In this case, q->mq_kobj, every 'struct blk_mq_ctx' referenced via
> > q->queue_ctx and q->kobj share same lifetime, it is fine to just
> > release them in one release handler.
> > 
> > I will think further and see if it can be done in clean/simple way.
> 
> Hi Guenter, Greg and Guys,
> 
> What do you think about the following approach?
> 
> ---
> diff --git a/block/blk-mq-sysfs.c b/block/blk-mq-sysfs.c
> index 2d737f9e7ba7..e15f5760ea1f 100644
> --- a/block/blk-mq-sysfs.c
> +++ b/block/blk-mq-sysfs.c
> @@ -298,10 +298,12 @@ void blk_mq_sysfs_init(struct request_queue *q)
>  	int cpu;
>  
>  	kobject_init(&q->mq_kobj, &blk_mq_ktype);
> +	kobject_mark_no_delay_release(&q->mq_kobj);
>  
>  	for_each_possible_cpu(cpu) {
>  		ctx = per_cpu_ptr(q->queue_ctx, cpu);
>  		kobject_init(&ctx->kobj, &blk_mq_ctx_ktype);
> +		kobject_mark_no_delay_release(&ctx->kobj);
>  	}
>  }
>  
> diff --git a/include/linux/kobject.h b/include/linux/kobject.h
> index 1ab0d624fb36..a8857366fb76 100644
> --- a/include/linux/kobject.h
> +++ b/include/linux/kobject.h
> @@ -78,6 +78,7 @@ struct kobject {
>  	unsigned int state_add_uevent_sent:1;
>  	unsigned int state_remove_uevent_sent:1;
>  	unsigned int uevent_suppress:1;
> +	unsigned int no_delay_release:1;
>  };
>  
>  extern __printf(2, 3)
> @@ -136,6 +137,16 @@ static inline bool kobject_has_children(struct kobject *kobj)
>  	return kobj->sd && kobj->sd->dir.subdirs;
>  }
>  
> +/*
> + * DEBUG_KOBJECT_RELEASE may break case in which more than one kboject
> + * share one same external object, and have same lifetime, so these
> + * users may tell kobject core to not do delay release via this helper.
> + */
> +static inline void kobject_mark_no_delay_release(struct kobject *kobj)
> +{
> +	kobj->no_delay_release = 1;
> +}

Ick, no, that's not ok.  "delay release" is a debugging tool, there is
nothing keeping userspace from grabbing a reference to your kobject and
holding on to it to emulate this "delay" test.

So even if you think the kernel is not going to do this, remember, you
have no control over it.  Reference counted objects are done this way
for a reason, you really do not know who has a reference and you really
do not care.

You are just papering over the real issue here, see my previous email
for how to start working on resolving it.

thanks,

greg k-h
