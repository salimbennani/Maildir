Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:37:40 -0000
Received: from icoremail.net (unknown [209.85.215.177])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3wjdJOlbdHJ7AQ--.37582S3;
	Mon, 12 Nov 2018 14:59:42 +0800 (CST)
Received: from mail-pg1-f177.google.com (unknown [209.85.215.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX8j3bJOlbZEEwAA--.382S3;
	Mon, 12 Nov 2018 14:59:39 +0800 (CST)
Received: by mail-pg1-f177.google.com with SMTP id r9-v6so3620622pgv.6
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 22:59:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:dkim-signature
         :dmarc-filter:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-transfer-encoding
         :content-language:sender:precedence:list-id;
        bh=v0Iz4azxwn1KutgbT9zeT0IkwrcgnfYxbGyaJSYq+wo=;
        b=pg5ji5v4jMnwlPd4JKcpFn+CAYwE9uNvBlyI5ucUpGUTtHam4JsBfe0VM2lWMkZ9ic
         q49DFISXlPUZ50tHUHGz+jrkMv24ie+VU5rA4YliKR0wBsPsxEj4titfWmLDQeBfXvfe
         BqfTj0ghJMKFz9arNB2KKvu7At9byQtlHw7jzuG1onJOoN6AFZPc4PFiR/EPzlxWzaoK
         7YMSXLHa4VnUJEF5DVbVh8IaoSwcUfkdTi59OUbINr4qfJATpleUofH1fhRUcTjwbRnB
         hNDmsXaUYwkMvdd3tWTUy5JATTDEU+/JVCTEUshxVURXwdWMWENID+sZlreec0QVQtV+
         TQEQ==
X-Gm-Message-State: AGRZ1gLh0QA+8OlxfhvIMt9CZWZ5ytqJUdm6XcB+mPuxKdM7xMB6vM+T
	T+Az2SrdwqdzQxoWRyInqFUyjAZYF+6raZpWvVvYh5lXaQ9sh6Y3QQ==
X-Received: by 2002:a62:ce8e:: with SMTP id y136-v6mr19079557pfg.201.1542005979565;
        Sun, 11 Nov 2018 22:59:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2856034pjt;
        Sun, 11 Nov 2018 22:59:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5eN7Y/kcwfaN+WDxHjsfPdqEt63shOLazdqEYqM8Ir62p+dZq/FaZ9GDrpqkvqqUf/Ry+Lt
X-Received: by 2002:a63:4d:: with SMTP id 74mr16782499pga.248.1542005978669;
        Sun, 11 Nov 2018 22:59:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542005978; cv=none;
        d=google.com; s=arc-20160816;
        b=qVjLLyHqH+MR4Xy7zyYNNpaCt4RdtaPrXXL46KafSRiTcNR5yasyEOQ3XzC9/rWQDI
         04hIe0xrsW8RBmz8Lb5t7wE/uOhf84RNQdjWV6Nvqv6qvLc/DpB9bVSoOS0k2lOcUy/b
         iFVmtcZcKhSy8WyhlN/zb4wTPYt+r4qcmpDi1gWz2WW2rDPJ8keE8qYJN4LMERP5rOc4
         xGBbaKYn3/aXqX/tZydjoqif7JOiXCLvDs33UKx3wKCEbPmhzscehe+VLpqXJL0mYJ9R
         Z5fZr4xwrXG7Bm42a4ZhSm6KI3zHhayEL1i+6EujKrTfmJKp3nSsTFczLDvvMBKaw4+w
         TAUA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-language
         :content-transfer-encoding:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject:dmarc-filter
         :dkim-signature:dkim-signature;
        bh=v0Iz4azxwn1KutgbT9zeT0IkwrcgnfYxbGyaJSYq+wo=;
        b=mYXERYMycsd/jbMccO9tGOnlhKjb/n1Wsqp68NSif7FOHHnBswlLAjsuyQr/GiBvCu
         HC7HU+EjN6BFoTUlvntb0A+v2ZGqtr2FHW78PqJGB8Yl2tqk4LDYpeMTiGSnqflwQsFX
         j0w8sTIn5tBIVFW/BJVRBbNuEdyAVI2qsKzYv+eRm3YVsZwNDeX186ocw3YYt6+pM1CS
         oodcqRzvSl0+PDic56aOd+6VtMjzYaDN8KbinhcEs4J2y9PJYLSv9lrESkUDk/nHbVhp
         2MRoBHuux8Ow5ZmnJpjZVFUPXRUwmv489icwgIEgs553SOcCOcnc41qP1J3U2mx7UaW8
         tASg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@codeaurora.org header.s=default header.b=Sjr52jMg;
       dkim=pass header.i=@codeaurora.org header.s=default header.b="GxXWn/Tm";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b1-v6si14753500pgw.151.2018.11.11.22.59.23;
        Sun, 11 Nov 2018 22:59:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732062AbeKLQtz (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 11:49:55 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:54276 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731867AbeKLQty (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 11:49:54 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 5E64E601C3; Mon, 12 Nov 2018 06:57:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542005878;
        bh=mhSUBrX0Q29caNSdu01pkq/7FlGsgNJ26BxotTnvr24=;
        h=Subject:To:Cc:References:From:Date:In-Reply-To:From;
        b=Sjr52jMgEafOUXWLk0XNceh7W8/ufz6UmNtxQJraKNKJttK+WDRVqAnEThDYpcN9r
         GuF6FvuDTCzr5ziNlIVK192NssW14DN2U69A3gfGWC3bPNrwTB0b/gVBPCUOcsRfmA
         CZDUWUDWqEHAaiHkBt1WSJL/llu9Ztw/GRdVckW8=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from [10.252.220.119] (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: vbadigan@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id E8EBC60795;
        Mon, 12 Nov 2018 06:57:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542005877;
        bh=mhSUBrX0Q29caNSdu01pkq/7FlGsgNJ26BxotTnvr24=;
        h=Subject:To:Cc:References:From:Date:In-Reply-To:From;
        b=GxXWn/TmI1tPDtPRDSFEcgEEbvRFgxdSOS41T9KeS/rhVJMRT3VCvOHa4tjmCxtkQ
         O+RwfM+yVeZsFPav37mU1nv/P01TZnoQjvk8j3EnTYjfq8SFbEyxd2jRCvCPb1Bk8w
         OOSni/LrxFO24lMczvw8e6nzCaAbtL4n+wCjJa04=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org E8EBC60795
Subject: Re: [PATCH V2 2/2] mmc: sdhci-msm: Re-initialize DLL if MCLK is gated
 dynamically
To: adrian.hunter@intel.com, ulf.hansson@linaro.org,
        robh+dt@kernel.org, evgreen@chromium.org, dianders@google.com
Cc: asutoshd@codeaurora.org, riteshh@codeaurora.org,
        stummala@codeaurora.org, sayalil@codeaurora.org,
        linux-mmc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-msm@vger.kernel.org, devicetree@vger.kernel.org
References: <1542004704-17066-1-git-send-email-vbadigan@codeaurora.org>
 <1542004704-17066-3-git-send-email-vbadigan@codeaurora.org>
From: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
Message-ID: <561318dc-7b18-0dcf-4b6c-eb473e1d3d36@codeaurora.org>
Date: Mon, 12 Nov 2018 12:27:52 +0530
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <1542004704-17066-3-git-send-email-vbadigan@codeaurora.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX8j3bJOlbZEEwAA--.382S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3GF15uFWDGF4UJFWktF13Arb_yoWxJryUpF
	WrXrn0kr4jka13Xw42q3WDZ34fWrsYvFW0g343Jw1rJrs0gF4DJFsrCFySvF1rXFyrW3W2
	vF4UWr1Uua4kJ3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7I2V7IY0VAS07AlzVAYIcxG8wCY1x0264kExVAvwVAq07x20xylc2xS
	Y4AK6IIF6r47MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAI
	cVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUfy8B
	UUUUU


Please ignore this patch set. Right patch-set is V5. 
https://patchwork.kernel.org/project/linux-mmc/list/?series=41661

Sorry for the inconvenience.

Thanks

Veera


On 11/12/2018 12:08 PM, Veerabhadrarao Badiganti wrote:
> On few SDHCI-MSM controllers, the host controller's clock tuning
> circuit may go out of sync if controller clocks are gated which
> eventually will result in data CRC, command CRC/timeout errors.
> To overcome this h/w limitation, the DLL needs to be re-initialized
> and restored with its old settings once clocks are ungated.
>
> Signed-off-by: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
> ---
>   drivers/mmc/host/sdhci-msm.c | 78 +++++++++++++++++++++++++++++++++++++-------
>   1 file changed, 67 insertions(+), 11 deletions(-)
>
> diff --git a/drivers/mmc/host/sdhci-msm.c b/drivers/mmc/host/sdhci-msm.c
> index 3cc8bfe..4cac593 100644
> --- a/drivers/mmc/host/sdhci-msm.c
> +++ b/drivers/mmc/host/sdhci-msm.c
> @@ -232,6 +232,7 @@ struct sdhci_msm_variant_ops {
>    */
>   struct sdhci_msm_variant_info {
>   	bool mci_removed;
> +	bool restore_dll_config;
>   	const struct sdhci_msm_variant_ops *var_ops;
>   	const struct sdhci_msm_offset *offset;
>   };
> @@ -256,6 +257,7 @@ struct sdhci_msm_host {
>   	bool pwr_irq_flag;
>   	u32 caps_0;
>   	bool mci_removed;
> +	bool restore_dll_config;
>   	const struct sdhci_msm_variant_ops *var_ops;
>   	const struct sdhci_msm_offset *offset;
>   };
> @@ -1025,6 +1027,48 @@ static int sdhci_msm_hs400_dll_calibration(struct sdhci_host *host)
>   	return ret;
>   }
>   
> +static bool sdhci_msm_is_tuning_needed(struct sdhci_host *host)
> +{
> +	struct mmc_ios *ios = &host->mmc->ios;
> +
> +	/*
> +	 * Tuning is required for SDR104, HS200 and HS400 cards and
> +	 * if clock frequency is greater than 100MHz in these modes.
> +	 */
> +	if (host->clock <= CORE_FREQ_100MHZ ||
> +	    !(ios->timing == MMC_TIMING_MMC_HS400 ||
> +	    ios->timing == MMC_TIMING_MMC_HS200 ||
> +	    ios->timing == MMC_TIMING_UHS_SDR104) ||
> +	    ios->enhanced_strobe)
> +		return false;
> +
> +	return true;
> +}
> +
> +static int sdhci_msm_restore_sdr_dll_config(struct sdhci_host *host)
> +{
> +	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
> +	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
> +	int ret;
> +
> +	/*
> +	 * SDR DLL comes into picture only for timing modes which needs
> +	 * tuning.
> +	 */
> +	if (!sdhci_msm_is_tuning_needed(host))
> +		return 0;
> +
> +	/* Reset the tuning block */
> +	ret = msm_init_cm_dll(host);
> +	if (ret)
> +		return ret;
> +
> +	/* Restore the tuning block */
> +	ret = msm_config_cm_dll_phase(host, msm_host->saved_tuning_phase);
> +
> +	return ret;
> +}
> +
>   static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
>   {
>   	struct sdhci_host *host = mmc_priv(mmc);
> @@ -1035,14 +1079,7 @@ static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
>   	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
>   	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
>   
> -	/*
> -	 * Tuning is required for SDR104, HS200 and HS400 cards and
> -	 * if clock frequency is greater than 100MHz in these modes.
> -	 */
> -	if (host->clock <= CORE_FREQ_100MHZ ||
> -	    !(ios.timing == MMC_TIMING_MMC_HS400 ||
> -	    ios.timing == MMC_TIMING_MMC_HS200 ||
> -	    ios.timing == MMC_TIMING_UHS_SDR104))
> +	if (!sdhci_msm_is_tuning_needed(host))
>   		return 0;
>   
>   	/*
> @@ -1069,7 +1106,6 @@ static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
>   		if (rc)
>   			return rc;
>   
> -		msm_host->saved_tuning_phase = phase;
>   		rc = mmc_send_tuning(mmc, opcode, NULL);
>   		if (!rc) {
>   			/* Tuning is successful at this tuning point */
> @@ -1094,6 +1130,7 @@ static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
>   		rc = msm_config_cm_dll_phase(host, phase);
>   		if (rc)
>   			return rc;
> +		msm_host->saved_tuning_phase = phase;
>   		dev_dbg(mmc_dev(mmc), "%s: Setting the tuning phase to %d\n",
>   			 mmc_hostname(mmc), phase);
>   	} else {
> @@ -1616,7 +1653,6 @@ static void sdhci_msm_set_regulator_caps(struct sdhci_msm_host *msm_host)
>   };
>   
>   static const struct sdhci_msm_variant_info sdhci_msm_mci_var = {
> -	.mci_removed = false,
>   	.var_ops = &mci_var_ops,
>   	.offset = &sdhci_msm_mci_offset,
>   };
> @@ -1627,9 +1663,17 @@ static void sdhci_msm_set_regulator_caps(struct sdhci_msm_host *msm_host)
>   	.offset = &sdhci_msm_v5_offset,
>   };
>   
> +static const struct sdhci_msm_variant_info sdm845_sdhci_var = {
> +	.mci_removed = true,
> +	.restore_dll_config = true,
> +	.var_ops = &v5_var_ops,
> +	.offset = &sdhci_msm_v5_offset,
> +};
> +
>   static const struct of_device_id sdhci_msm_dt_match[] = {
>   	{.compatible = "qcom,sdhci-msm-v4", .data = &sdhci_msm_mci_var},
>   	{.compatible = "qcom,sdhci-msm-v5", .data = &sdhci_msm_v5_var},
> +	{.compatible = "qcom,sdm845-sdhci", .data = &sdm845_sdhci_var},
>   	{},
>   };
>   
> @@ -1689,6 +1733,7 @@ static int sdhci_msm_probe(struct platform_device *pdev)
>   	var_info = of_device_get_match_data(&pdev->dev);
>   
>   	msm_host->mci_removed = var_info->mci_removed;
> +	msm_host->restore_dll_config = var_info->restore_dll_config;
>   	msm_host->var_ops = var_info->var_ops;
>   	msm_host->offset = var_info->offset;
>   
> @@ -1928,9 +1973,20 @@ static int sdhci_msm_runtime_resume(struct device *dev)
>   	struct sdhci_host *host = dev_get_drvdata(dev);
>   	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
>   	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
> +	int ret;
>   
> -	return clk_bulk_prepare_enable(ARRAY_SIZE(msm_host->bulk_clks),
> +	ret = clk_bulk_prepare_enable(ARRAY_SIZE(msm_host->bulk_clks),
>   				       msm_host->bulk_clks);
> +	if (ret)
> +		return ret;
> +	/*
> +	 * Whenever core-clock is gated dynamically, it's needed to
> +	 * restore the SDR DLL settings when the clock is ungated.
> +	 */
> +	if (msm_host->restore_dll_config && msm_host->clk_rate)
> +		return sdhci_msm_restore_sdr_dll_config(host);
> +
> +	return 0;
>   }
>   #endif
>   
