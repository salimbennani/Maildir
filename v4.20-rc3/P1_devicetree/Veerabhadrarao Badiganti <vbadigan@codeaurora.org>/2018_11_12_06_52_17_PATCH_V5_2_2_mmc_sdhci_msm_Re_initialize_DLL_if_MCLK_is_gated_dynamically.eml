Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:37:39 -0000
Received: from icoremail.net (unknown [209.85.214.180])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX1+AI+lbi2l7AQ--.37232S3;
	Mon, 12 Nov 2018 14:53:53 +0800 (CST)
Received: from mail-pl1-f180.google.com (unknown [209.85.214.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCngj5+I+lbFjswAA--.359S3;
	Mon, 12 Nov 2018 14:53:51 +0800 (CST)
Received: by mail-pl1-f180.google.com with SMTP id p6-v6so3856912pll.4
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 22:53:51 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:dkim-signature
         :dmarc-filter:from:to:cc:subject:date:message-id:in-reply-to
         :references:sender:precedence:list-id;
        bh=/QLlqM32ZhT1eJjAtcY/NIGVSX83cYcklwc0v2YNxjA=;
        b=toRBxlmB/tf6vRosUDfdqrFC+pukLK6feUIXBFLCZKlOVILyNf/UtnAJnV/rCxHxk+
         Jy5KvGEF+U4tscjsxr5QctoKeYYgi7BJYr0UrUMNR91NPVN+Svssl1K7T9SYgLWHHHW3
         qkbqUPPsE4hCilUiTBCgEYVrhe8wloqo0WcxfRoJFtZNyjNkVUv5wm9aOurr8aqD1bJV
         6YfjTiKLKC6Pt7AdByVwM84Bl5MvT6nNGONDnVNMJw6P7PwvB29ch+zAJAK876w9gJ2s
         z/4Cxlkdz9ng8T9HuWmCFnBpz2zm3ZEsp/zN6rZpgrFnG16UfAlrrfGiqosOmRdhgqfg
         wQvg==
X-Gm-Message-State: AGRZ1gLcOWWbLu2m1tgUQBvaus1MIJ7srUCt0Jv1Png69ILvfHsnC2ia
	sp4qoB6qGrfclon8F6MDhkiPIPFL/QvP9mEN/daHqh1HZ6WU6em1fg==
X-Received: by 2002:a17:902:7882:: with SMTP id q2-v6mr19070182pll.188.1542005630794;
        Sun, 11 Nov 2018 22:53:50 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2851927pjt;
        Sun, 11 Nov 2018 22:53:50 -0800 (PST)
X-Google-Smtp-Source: AJdET5fYUbUQh/5ORADX3wjSJtwLmkwM/rInH8cL85ehIDCli8aGU6vcr1AhCtuOqRjtxI+Y8Qts
X-Received: by 2002:a62:9702:: with SMTP id n2-v6mr18837891pfe.222.1542005630030;
        Sun, 11 Nov 2018 22:53:50 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542005630; cv=none;
        d=google.com; s=arc-20160816;
        b=TnqtJkFAR1z+rhwuEAesn4b7JjjQfWsWm3KdFWsSDl/02QgmMxzqq4B3iDWgSTv+vl
         EQ87GVcwshNqotcijPon+LMdni5IP7L7miCzR7EcGU3JAIi9/1WM9suFomLXayyT5EUU
         gyuTIpaXFksjJLa4hI+x/u5rXubQ6cJ8McvS+ED7KxQDEbYUa4xCN43M23MWAtWED736
         0/XZEMHE3XUBNOeOgqtRZl/asg98ixmjd315JDRaDomFjOXpeL8KVU1zJ9glgZwmiWln
         ZJza9TRQ60rE4OYiO2n0f9z6JU5uNQ3sr4Fb1x0ztjE3kLgHrXdV8TJS+om1zejvsIzF
         ObLg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dmarc-filter:dkim-signature:dkim-signature;
        bh=/QLlqM32ZhT1eJjAtcY/NIGVSX83cYcklwc0v2YNxjA=;
        b=DI1itCYDfNN1npA4B5W8weo5mTwKZuvK0QQzD2mv+6TGBLBoC1q3PAMeyoetwOovXw
         ep7haXU92M964d3hnhL5gcDi9xhQX9MosMNvkDslPYzHO7UYXiJ4M+wgwGJj9ybQftLT
         1aJ2r2RIGgfLEPm+eT8GjbwJDFgZRzbUbEJ68eawN4oObV9DGUjX5/WG2EHzHgfeYW6k
         owUB42lJyEw5Whod1dLiTfybqYT3UKFuHTdQBZUxRt0BtIE1wULyYrtsWPQVWitEnQlX
         G8Sh1U6gy1snFIHHbrJFuMuq+9/X4ESeNOXaWaPZrUX9YvN+erbHmzH+4F2dBQ607VXQ
         W5Xg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@codeaurora.org header.s=default header.b=P4SmxT3i;
       dkim=pass header.i=@codeaurora.org header.s=default header.b="np/g3Iqj";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 16-v6si2172234pfm.51.2018.11.11.22.53.35;
        Sun, 11 Nov 2018 22:53:49 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731996AbeKLQo5 (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 11:44:57 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:52480 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731594AbeKLQo5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 11:44:57 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 8AE1560A33; Mon, 12 Nov 2018 06:53:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542005582;
        bh=PRY5HUBwEYAW3EwbKykANvP/e0Lfw7YHrfquFSBWtbc=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=P4SmxT3i181THb5BAHgmsSvBOqsiGvSwNHAR1LtgmELo11YxMD+DXYQe9gPm4sy9H
         9s9SkRtJKD0TxMvHl8CYZvt4boSp/3qYaTmR4csOaZHgPzNuIJqjOxp7QuIaMvp7KV
         YRy/Gq31GeUjPs3nbPYM8eevycbEuacn0yyv8zug=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from vbadigan-linux.qualcomm.com (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: vbadigan@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 66C2960866;
        Mon, 12 Nov 2018 06:52:57 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542005581;
        bh=PRY5HUBwEYAW3EwbKykANvP/e0Lfw7YHrfquFSBWtbc=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=np/g3IqjQaq6hZYCoyhpUK+9winmZ/5vHIrT3qzsbz1jS8TQZFcy1Z0tDMY5UZZ5w
         uuoJl9WnWHTiYEUHssJuSd63QGG1/I+i6gJbGWaaHwEalkLsdWLn0HfrYGtU3SXDqV
         EjHhrQoJE8bauArQmXwLf+DNPRoo7wDq2kdk7b/o=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 66C2960866
From: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
To: adrian.hunter@intel.com, ulf.hansson@linaro.org,
        robh+dt@kernel.org, evgreen@chromium.org, dianders@google.com
Cc: asutoshd@codeaurora.org, riteshh@codeaurora.org,
        stummala@codeaurora.org, sayalil@codeaurora.org,
        linux-mmc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-msm@vger.kernel.org, devicetree@vger.kernel.org,
        Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
Subject: [PATCH V5 2/2] mmc: sdhci-msm: Re-initialize DLL if MCLK is gated dynamically
Date: Mon, 12 Nov 2018 12:22:17 +0530
Message-Id: <1542005537-19154-3-git-send-email-vbadigan@codeaurora.org>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1542005537-19154-1-git-send-email-vbadigan@codeaurora.org>
References: <1542005537-19154-1-git-send-email-vbadigan@codeaurora.org>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCngj5+I+lbFjswAA--.359S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Jr4DCr18WF1UAFWkAw4xZwb_yoW7tryUpF
	4rZrn0kr1jka13XwsFq3W8u34fWrsYvFWkta43Jwn5Jrs8Kr4DJFsrCFySvFyrXFy8W3W2
	vF45Wr1Uua48A3DanT9S1TB71UUUUUJqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPEb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1ln4kS14v26r1Y6r
	17M2AIxVAIcxkEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xII
	jxv20xvE14v26r106r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr
	1lF7xvr2IYc2Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCF
	zxkY4VCF77xAMxkIecxEwVCI4VW8AwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcV
	AFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAF
	wI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42
	xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2Iq
	xVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r
	1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73
	UjIFyTuYvjxUqaLvDUUUU

On few SDHCI-MSM controllers, the host controller's clock tuning
circuit may go out of sync if controller clocks are gated which
eventually will result in data CRC, command CRC/timeout errors.
To overcome this h/w limitation, the DLL needs to be re-initialized
and restored with its old settings once clocks are ungated.

Signed-off-by: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
---
 drivers/mmc/host/sdhci-msm.c | 78 +++++++++++++++++++++++++++++++++++++-------
 1 file changed, 67 insertions(+), 11 deletions(-)

diff --git a/drivers/mmc/host/sdhci-msm.c b/drivers/mmc/host/sdhci-msm.c
index 3cc8bfe..4cac593 100644
--- a/drivers/mmc/host/sdhci-msm.c
+++ b/drivers/mmc/host/sdhci-msm.c
@@ -232,6 +232,7 @@ struct sdhci_msm_variant_ops {
  */
 struct sdhci_msm_variant_info {
 	bool mci_removed;
+	bool restore_dll_config;
 	const struct sdhci_msm_variant_ops *var_ops;
 	const struct sdhci_msm_offset *offset;
 };
@@ -256,6 +257,7 @@ struct sdhci_msm_host {
 	bool pwr_irq_flag;
 	u32 caps_0;
 	bool mci_removed;
+	bool restore_dll_config;
 	const struct sdhci_msm_variant_ops *var_ops;
 	const struct sdhci_msm_offset *offset;
 };
@@ -1025,6 +1027,48 @@ static int sdhci_msm_hs400_dll_calibration(struct sdhci_host *host)
 	return ret;
 }
 
+static bool sdhci_msm_is_tuning_needed(struct sdhci_host *host)
+{
+	struct mmc_ios *ios = &host->mmc->ios;
+
+	/*
+	 * Tuning is required for SDR104, HS200 and HS400 cards and
+	 * if clock frequency is greater than 100MHz in these modes.
+	 */
+	if (host->clock <= CORE_FREQ_100MHZ ||
+	    !(ios->timing == MMC_TIMING_MMC_HS400 ||
+	    ios->timing == MMC_TIMING_MMC_HS200 ||
+	    ios->timing == MMC_TIMING_UHS_SDR104) ||
+	    ios->enhanced_strobe)
+		return false;
+
+	return true;
+}
+
+static int sdhci_msm_restore_sdr_dll_config(struct sdhci_host *host)
+{
+	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
+	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
+	int ret;
+
+	/*
+	 * SDR DLL comes into picture only for timing modes which needs
+	 * tuning.
+	 */
+	if (!sdhci_msm_is_tuning_needed(host))
+		return 0;
+
+	/* Reset the tuning block */
+	ret = msm_init_cm_dll(host);
+	if (ret)
+		return ret;
+
+	/* Restore the tuning block */
+	ret = msm_config_cm_dll_phase(host, msm_host->saved_tuning_phase);
+
+	return ret;
+}
+
 static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
 {
 	struct sdhci_host *host = mmc_priv(mmc);
@@ -1035,14 +1079,7 @@ static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
 
-	/*
-	 * Tuning is required for SDR104, HS200 and HS400 cards and
-	 * if clock frequency is greater than 100MHz in these modes.
-	 */
-	if (host->clock <= CORE_FREQ_100MHZ ||
-	    !(ios.timing == MMC_TIMING_MMC_HS400 ||
-	    ios.timing == MMC_TIMING_MMC_HS200 ||
-	    ios.timing == MMC_TIMING_UHS_SDR104))
+	if (!sdhci_msm_is_tuning_needed(host))
 		return 0;
 
 	/*
@@ -1069,7 +1106,6 @@ static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
 		if (rc)
 			return rc;
 
-		msm_host->saved_tuning_phase = phase;
 		rc = mmc_send_tuning(mmc, opcode, NULL);
 		if (!rc) {
 			/* Tuning is successful at this tuning point */
@@ -1094,6 +1130,7 @@ static int sdhci_msm_execute_tuning(struct mmc_host *mmc, u32 opcode)
 		rc = msm_config_cm_dll_phase(host, phase);
 		if (rc)
 			return rc;
+		msm_host->saved_tuning_phase = phase;
 		dev_dbg(mmc_dev(mmc), "%s: Setting the tuning phase to %d\n",
 			 mmc_hostname(mmc), phase);
 	} else {
@@ -1616,7 +1653,6 @@ static void sdhci_msm_set_regulator_caps(struct sdhci_msm_host *msm_host)
 };
 
 static const struct sdhci_msm_variant_info sdhci_msm_mci_var = {
-	.mci_removed = false,
 	.var_ops = &mci_var_ops,
 	.offset = &sdhci_msm_mci_offset,
 };
@@ -1627,9 +1663,17 @@ static void sdhci_msm_set_regulator_caps(struct sdhci_msm_host *msm_host)
 	.offset = &sdhci_msm_v5_offset,
 };
 
+static const struct sdhci_msm_variant_info sdm845_sdhci_var = {
+	.mci_removed = true,
+	.restore_dll_config = true,
+	.var_ops = &v5_var_ops,
+	.offset = &sdhci_msm_v5_offset,
+};
+
 static const struct of_device_id sdhci_msm_dt_match[] = {
 	{.compatible = "qcom,sdhci-msm-v4", .data = &sdhci_msm_mci_var},
 	{.compatible = "qcom,sdhci-msm-v5", .data = &sdhci_msm_v5_var},
+	{.compatible = "qcom,sdm845-sdhci", .data = &sdm845_sdhci_var},
 	{},
 };
 
@@ -1689,6 +1733,7 @@ static int sdhci_msm_probe(struct platform_device *pdev)
 	var_info = of_device_get_match_data(&pdev->dev);
 
 	msm_host->mci_removed = var_info->mci_removed;
+	msm_host->restore_dll_config = var_info->restore_dll_config;
 	msm_host->var_ops = var_info->var_ops;
 	msm_host->offset = var_info->offset;
 
@@ -1928,9 +1973,20 @@ static int sdhci_msm_runtime_resume(struct device *dev)
 	struct sdhci_host *host = dev_get_drvdata(dev);
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
+	int ret;
 
-	return clk_bulk_prepare_enable(ARRAY_SIZE(msm_host->bulk_clks),
+	ret = clk_bulk_prepare_enable(ARRAY_SIZE(msm_host->bulk_clks),
 				       msm_host->bulk_clks);
+	if (ret)
+		return ret;
+	/*
+	 * Whenever core-clock is gated dynamically, it's needed to
+	 * restore the SDR DLL settings when the clock is ungated.
+	 */
+	if (msm_host->restore_dll_config && msm_host->clk_rate)
+		return sdhci_msm_restore_sdr_dll_config(host);
+
+	return 0;
 }
 #endif
 
-- 
Qualcomm India Private Limited, on behalf of Qualcomm Innovation Center, Inc.
Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum, a Linux Foundation Collaborative Project.
