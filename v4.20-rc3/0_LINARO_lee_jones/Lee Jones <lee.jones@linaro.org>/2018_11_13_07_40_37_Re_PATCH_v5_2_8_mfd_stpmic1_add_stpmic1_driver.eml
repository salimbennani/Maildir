Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 15:21:57 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv94RgOpbJj2EAQ--.40074S3;
	Tue, 13 Nov 2018 15:41:06 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXMj4OgOpbD8M2AA--.346S3;
	Tue, 13 Nov 2018 15:41:02 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id x21-v6so2865348pln.9
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 23:41:02 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :content-transfer-encoding:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=mLyLbynYHdze57769VpfTwWdtQAo9a2dz78hbGQDjIg=;
        b=JOse31t1fUDudseYN/eLnMF5A6UF0NASkMI79qBzK6KPVG+kyu25maYIRajQoB7gXB
         /WtloIMqjxcCZK6UGClrsFbSPOKE13duvOIhLQxVRMOUAmwDB6BS12E9yPFy5ZYhd9Hy
         Z9zlt9sKsT35ZDjS9qkOh9aVfKOGTgFT243hvcF6hidyga3eBCPYD6Ytyyr2dMa4jxGk
         TDBQCzrfKnGKuv+3EPsgMVYTlLnrJoGDDj4rMaOORt4i50S7axQyzYjnA7IWT8AEdaLF
         KQpLOOIwYlL9z+mVZDSu/IGPSHedpvtR9svbP5gj1eSwfXQi1FJBxhQLrywWC6SR3+ZC
         j3zA==
X-Gm-Message-State: AGRZ1gLF7q8DjwUcSinC4EIJZCl4YnpDTirDJSRTVBTD0BbIQiWG3XKC
	A2wg+HI1CTLVZQz3FJnlrerthxJTdZUxQkqgFfkOI+GTrlI97+QwHw==
X-Received: by 2002:a17:902:560f:: with SMTP id h15-v6mr4142971pli.160.1542094862134;
        Mon, 12 Nov 2018 23:41:02 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4150059pjt;
        Mon, 12 Nov 2018 23:41:00 -0800 (PST)
X-Google-Smtp-Source: AJdET5epYEpO9YAaw98niylaAfMYEvpLcoMe5DPGYTrJdvwdlE6M0BzguzIRKivDLI/q69EiMOz0
X-Received: by 2002:a65:434d:: with SMTP id k13mr3787161pgq.269.1542094860843;
        Mon, 12 Nov 2018 23:41:00 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542094860; cv=none;
        d=google.com; s=arc-20160816;
        b=qpKa0nhuooNzXSkEmFideLdKyw8sRPU4sHiwKkQfEKe5kszxO0VjM25mK340VEY4Cb
         C8gMbrypzLbFbsyjRY3TTyV1zakZRtGC8R9niX9ucviModCTgiv+57F86w4aJOz+sQYH
         8jnIQR31FBMkdAUUJZTHjuc8j4tNWxhR8cNfI+yG7bMJOUW65vxW2OmPSFVdZljsiBz9
         h9saj10beRbQDQ/kTY6qHxrByxAv1TL8LZ2aNaD+8txdOkLQxfOHsF69kbEU6Ou9XHWR
         yxNXXBlLPc94AIfliIDjZKdjqSjV9aPAsymCiM33iCGF+4zEoaV2KuPV615XwKJ2+d6+
         85zw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-transfer-encoding:content-disposition:mime-version
         :references:message-id:subject:cc:to:from:date:dkim-signature;
        bh=mLyLbynYHdze57769VpfTwWdtQAo9a2dz78hbGQDjIg=;
        b=bboPEA5bPp7Mga6IuLObBT4SxdtG2mxopeR/jkZNsbd5pwVCj6oLCX07tK15iGfOpu
         hzuh5Ld3CLCBxp7jlZE0WiRTB6tpV9bUkalluf/aAgeq1QPq8IwyJ8A1yhvhpYjpJBih
         3qDof8u76VI9nk+usvMfNb1Y7cRu42rdJEC8fBWdqxe/oPp+riW0MH79gMTLFji/Ko4z
         rA4nPHzeht0Tf9eNETu7/gNH3tKFbEQ8PwnHUQzxnaSTIGAmd9bRNO4B+M1ikABeOtmp
         OwTnlVPDQxAq+xFZvent6Ax4Ennh8nfmdTgKTdaaxzeSbr5PXW/PCV6vwx/d0Uy463Nq
         Hf4A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b="HP2Fd/pf";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id q3-v6si20532483plb.331.2018.11.12.23.40.45;
        Mon, 12 Nov 2018 23:41:00 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731116AbeKMRhd (ORCPT <rfc822;revogelaar@gmail.com>
        + 99 others); Tue, 13 Nov 2018 12:37:33 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:39101 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730323AbeKMRhd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 12:37:33 -0500
Received: by mail-wm1-f67.google.com with SMTP id u13-v6so10394317wmc.4
        for <linux-kernel@vger.kernel.org>; Mon, 12 Nov 2018 23:40:40 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent;
        bh=mLyLbynYHdze57769VpfTwWdtQAo9a2dz78hbGQDjIg=;
        b=HP2Fd/pfKylvMsOWOKnys2/GW4LtT4BNdrIMwDIcPskbGHc/q5iAXJ4EMld706AL43
         1ZRexUwieGdeP3wW2kR02L1EoMXY17k14hz4obsQ4Nph5naQiEFI87PjL1xSz0KTTqpG
         AfxBWQYfzVWYXGxwMA2cMIn2+KXIDrYq6mmP4=
X-Received: by 2002:a1c:c545:: with SMTP id v66mr1601878wmf.132.1542094839752;
        Mon, 12 Nov 2018 23:40:39 -0800 (PST)
Received: from dell ([2.31.167.205])
        by smtp.gmail.com with ESMTPSA id u14-v6sm22007442wrs.27.2018.11.12.23.40.38
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 12 Nov 2018 23:40:39 -0800 (PST)
Date: Tue, 13 Nov 2018 07:40:37 +0000
From: Lee Jones <lee.jones@linaro.org>
To: Pascal PAILLET-LME <p.paillet@st.com>
Cc: "dmitry.torokhov@gmail.com" <dmitry.torokhov@gmail.com>,
        "robh+dt@kernel.org" <robh+dt@kernel.org>,
        "mark.rutland@arm.com" <mark.rutland@arm.com>,
        "lgirdwood@gmail.com" <lgirdwood@gmail.com>,
        "broonie@kernel.org" <broonie@kernel.org>,
        "wim@linux-watchdog.org" <wim@linux-watchdog.org>,
        "linux@roeck-us.net" <linux@roeck-us.net>,
        "linux-input@vger.kernel.org" <linux-input@vger.kernel.org>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-watchdog@vger.kernel.org" <linux-watchdog@vger.kernel.org>,
        "benjamin.gaignard@linaro.org" <benjamin.gaignard@linaro.org>,
        "eballetbo@gmail.com" <eballetbo@gmail.com>,
        "axel.lin@ingics.com" <axel.lin@ingics.com>
Subject: Re: [PATCH v5 2/8] mfd: stpmic1: add stpmic1 driver
Message-ID: <20181113074037.GC29388@dell>
References: <1540830122-2577-1-git-send-email-p.paillet@st.com>
 <1540830122-2577-3-git-send-email-p.paillet@st.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <1540830122-2577-3-git-send-email-p.paillet@st.com>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXMj4OgOpbD8M2AA--.346S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XryDCw4rtryUArykGr1fXrb_yoWfXr1xpr
	W5uF45GF4UXFsxW345KF1jyF15Kw1xK3yxCw12g3sF9Fn2kFyxK34UtFy7KFZ5XrW7XF48
	tFWqqrWkur4Yya7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW8CwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI42IY
	6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUDKFA
	DUUUU

On Mon, 29 Oct 2018, Pascal PAILLET-LME wrote:

> stpmic1 is a pmic from STMicroelectronics. The STPMIC1 integrates 10

"STPMIC1 is a PMIC"

> regulators, 3 power switches, a watchdog and an input for a power on key.
> 
> Signed-off-by: Pascal Paillet <p.paillet@st.com>
> ---
> changes in v5:
> * use macro to define regmap register ranges
> * use REGMAP_IRQ_REG marco to define interrupts
> * remove st properties
> 
>  drivers/mfd/Kconfig         |  13 +++
>  drivers/mfd/Makefile        |   1 +
>  drivers/mfd/stpmic1.c       | 215 ++++++++++++++++++++++++++++++++++++++++++++
>  include/linux/mfd/stpmic1.h | 212 +++++++++++++++++++++++++++++++++++++++++++
>  4 files changed, 444 insertions(+)
>  create mode 100644 drivers/mfd/stpmic1.c
>  create mode 100644 include/linux/mfd/stpmic1.h
> 
> diff --git a/drivers/mfd/Kconfig b/drivers/mfd/Kconfig
> index 11841f4..07e39a6 100644
> --- a/drivers/mfd/Kconfig
> +++ b/drivers/mfd/Kconfig
> @@ -1855,6 +1855,22 @@ config MFD_STM32_TIMERS
>  	  for PWM and IIO Timer. This driver allow to share the
>  	  registers between the others drivers.
>  
> +config MFD_STPMIC1
> +	tristate "Support for STPMIC1 PMIC"
> +	depends on (I2C=y && OF)
> +	select REGMAP_I2C
> +	select REGMAP_IRQ
> +	select MFD_CORE
> +	help
> +	  Support for ST Microelectronics STPMIC1 PMIC. STPMIC1 has power on
> +	  key, watchdog and regulator functionalities which are supported via
> +	  the relevant subsystems.  This driver provides core support for the
> +	  STPMIC1, in order to use the actual functionaltiy of the device other

s/,/./

> +	  drivers must be enabled.
> +
> +	  To compile this driver as a module, choose M here: the
> +	  module will be called stpmic1.
> +
>  menu "Multimedia Capabilities Port drivers"
>  	depends on ARCH_SA1100
>  
> diff --git a/drivers/mfd/Makefile b/drivers/mfd/Makefile
> index 5856a94..76fff14 100644
> --- a/drivers/mfd/Makefile
> +++ b/drivers/mfd/Makefile
> @@ -232,6 +232,7 @@ obj-$(CONFIG_INTEL_SOC_PMIC_CHTDC_TI)	+= intel_soc_pmic_chtdc_ti.o
>  obj-$(CONFIG_MFD_MT6397)	+= mt6397-core.o
>  
>  obj-$(CONFIG_MFD_ALTERA_A10SR)	+= altera-a10sr.o
> +obj-$(CONFIG_MFD_STPMIC1)	+= stpmic1.o
>  obj-$(CONFIG_MFD_SUN4I_GPADC)	+= sun4i-gpadc.o
>  
>  obj-$(CONFIG_MFD_STM32_LPTIMER)	+= stm32-lptimer.o
> diff --git a/drivers/mfd/stpmic1.c b/drivers/mfd/stpmic1.c
> new file mode 100644
> index 0000000..2f4fd5e
> --- /dev/null
> +++ b/drivers/mfd/stpmic1.c
> @@ -0,0 +1,215 @@
> +// SPDX-License-Identifier: GPL-2.0
> +// Copyright (C) STMicroelectronics 2018
> +// Author: Pascal Paillet <p.paillet@st.com>
> +
> +#include <linux/i2c.h>
> +#include <linux/interrupt.h>
> +#include <linux/mfd/core.h>
> +#include <linux/mfd/stpmic1.h>
> +#include <linux/module.h>
> +#include <linux/of.h>
> +#include <linux/of_irq.h>
> +#include <linux/of_platform.h>
> +#include <linux/pm_wakeirq.h>
> +#include <linux/regmap.h>
> +
> +#include <dt-bindings/mfd/st,stpmic1.h>
> +
> +#define STPMIC1_MAIN_IRQ 0
> +
> +static const struct regmap_range stpmic1_readable_ranges[] = {
> +	regmap_reg_range(TURN_ON_SR, VERSION_SR),
> +	regmap_reg_range(SWOFF_PWRCTRL_CR, LDO6_STDBY_CR),
> +	regmap_reg_range(BST_SW_CR, BST_SW_CR),
> +	regmap_reg_range(INT_PENDING_R1, INT_PENDING_R4),
> +	regmap_reg_range(INT_CLEAR_R1, INT_CLEAR_R4),
> +	regmap_reg_range(INT_MASK_R1, INT_MASK_R4),
> +	regmap_reg_range(INT_SET_MASK_R1, INT_SET_MASK_R4),
> +	regmap_reg_range(INT_CLEAR_MASK_R1, INT_CLEAR_MASK_R4),
> +	regmap_reg_range(INT_SRC_R1, INT_SRC_R1),
> +};
> +
> +static const struct regmap_range stpmic1_writeable_ranges[] = {
> +	regmap_reg_range(SWOFF_PWRCTRL_CR, LDO6_STDBY_CR),
> +	regmap_reg_range(BST_SW_CR, BST_SW_CR),
> +	regmap_reg_range(INT_CLEAR_R1, INT_CLEAR_R4),
> +	regmap_reg_range(INT_SET_MASK_R1, INT_SET_MASK_R4),
> +	regmap_reg_range(INT_CLEAR_MASK_R1, INT_CLEAR_MASK_R4),
> +};
> +
> +static const struct regmap_range stpmic1_volatile_ranges[] = {
> +	regmap_reg_range(TURN_ON_SR, VERSION_SR),
> +	regmap_reg_range(WCHDG_CR, WCHDG_CR),
> +	regmap_reg_range(INT_PENDING_R1, INT_PENDING_R4),
> +	regmap_reg_range(INT_SRC_R1, INT_SRC_R4),
> +};

Nice!

> +static const struct regmap_access_table stpmic1_readable_table = {
> +	.yes_ranges = stpmic1_readable_ranges,
> +	.n_yes_ranges = ARRAY_SIZE(stpmic1_readable_ranges),
> +};
> +
> +static const struct regmap_access_table stpmic1_writeable_table = {
> +	.yes_ranges = stpmic1_writeable_ranges,
> +	.n_yes_ranges = ARRAY_SIZE(stpmic1_writeable_ranges),
> +};
> +
> +static const struct regmap_access_table stpmic1_volatile_table = {
> +	.yes_ranges = stpmic1_volatile_ranges,
> +	.n_yes_ranges = ARRAY_SIZE(stpmic1_volatile_ranges),
> +};
> +
> +const struct regmap_config stpmic1_regmap_config = {
> +	.reg_bits = 8,
> +	.val_bits = 8,
> +	.cache_type = REGCACHE_RBTREE,
> +	.max_register = PMIC_MAX_REGISTER_ADDRESS,
> +	.rd_table = &stpmic1_readable_table,
> +	.wr_table = &stpmic1_writeable_table,
> +	.volatile_table = &stpmic1_volatile_table,
> +};
> +
> +static const struct regmap_irq stpmic1_irqs[] = {
> +	REGMAP_IRQ_REG(IT_PONKEY_F, 0, 0x01),
> +	REGMAP_IRQ_REG(IT_PONKEY_R, 0, 0x02),
> +	REGMAP_IRQ_REG(IT_WAKEUP_F, 0, 0x04),
> +	REGMAP_IRQ_REG(IT_WAKEUP_R, 0, 0x08),
> +	REGMAP_IRQ_REG(IT_VBUS_OTG_F, 0, 0x10),
> +	REGMAP_IRQ_REG(IT_VBUS_OTG_R, 0, 0x20),
> +	REGMAP_IRQ_REG(IT_SWOUT_F, 0, 0x40),
> +	REGMAP_IRQ_REG(IT_SWOUT_R, 0, 0x80),
> +
> +	REGMAP_IRQ_REG(IT_CURLIM_BUCK1, 1, 0x01),
> +	REGMAP_IRQ_REG(IT_CURLIM_BUCK2, 1, 0x02),
> +	REGMAP_IRQ_REG(IT_CURLIM_BUCK3, 1, 0x04),
> +	REGMAP_IRQ_REG(IT_CURLIM_BUCK4, 1, 0x08),
> +	REGMAP_IRQ_REG(IT_OCP_OTG, 1, 0x10),
> +	REGMAP_IRQ_REG(IT_OCP_SWOUT, 1, 0x20),
> +	REGMAP_IRQ_REG(IT_OCP_BOOST, 1, 0x40),
> +	REGMAP_IRQ_REG(IT_OVP_BOOST, 1, 0x80),
> +
> +	REGMAP_IRQ_REG(IT_CURLIM_LDO1, 2, 0x01),
> +	REGMAP_IRQ_REG(IT_CURLIM_LDO2, 2, 0x02),
> +	REGMAP_IRQ_REG(IT_CURLIM_LDO3, 2, 0x04),
> +	REGMAP_IRQ_REG(IT_CURLIM_LDO4, 2, 0x08),
> +	REGMAP_IRQ_REG(IT_CURLIM_LDO5, 2, 0x10),
> +	REGMAP_IRQ_REG(IT_CURLIM_LDO6, 2, 0x20),
> +	REGMAP_IRQ_REG(IT_SHORT_SWOTG, 2, 0x40),
> +	REGMAP_IRQ_REG(IT_SHORT_SWOUT, 2, 0x80),
> +
> +	REGMAP_IRQ_REG(IT_TWARN_F, 3, 0x01),
> +	REGMAP_IRQ_REG(IT_TWARN_R, 3, 0x02),
> +	REGMAP_IRQ_REG(IT_VINLOW_F, 3, 0x04),
> +	REGMAP_IRQ_REG(IT_VINLOW_R, 3, 0x08),
> +	REGMAP_IRQ_REG(IT_SWIN_F, 3, 0x40),
> +	REGMAP_IRQ_REG(IT_SWIN_R, 3, 0x80),
> +};
> +
> +static const struct regmap_irq_chip stpmic1_regmap_irq_chip = {
> +	.name = "pmic_irq",
> +	.status_base = INT_PENDING_R1,
> +	.mask_base = INT_CLEAR_MASK_R1,
> +	.unmask_base = INT_SET_MASK_R1,
> +	.ack_base = INT_CLEAR_R1,
> +	.num_regs = STPMIC1_PMIC_NUM_IRQ_REGS,
> +	.irqs = stpmic1_irqs,
> +	.num_irqs = ARRAY_SIZE(stpmic1_irqs),
> +};
> +
> +static int stpmic1_probe(struct i2c_client *i2c,
> +			 const struct i2c_device_id *id)
> +{
> +	struct stpmic1 *ddata;
> +	struct device *dev = &i2c->dev;
> +	int ret;
> +	struct device_node *np = dev->of_node;
> +	u32 reg;
> +
> +	ddata = devm_kzalloc(dev, sizeof(struct stpmic1), GFP_KERNEL);
> +	if (!ddata)
> +		return -ENOMEM;
> +
> +	i2c_set_clientdata(i2c, ddata);
> +	ddata->dev = dev;
> +
> +	ddata->regmap = devm_regmap_init_i2c(i2c, &stpmic1_regmap_config);
> +	if (IS_ERR(ddata->regmap))
> +		return PTR_ERR(ddata->regmap);
> +
> +	ddata->irq = of_irq_get(np, STPMIC1_MAIN_IRQ);
> +	if (ddata->irq < 0) {
> +		dev_err(dev, "Failed to get main IRQ: %d\n", ddata->irq);
> +		return ddata->irq;
> +	}
> +
> +	/* Read Version ID */

I think the MACRO name and error message make this comment
superfluous.

> +	ret = regmap_read(ddata->regmap, VERSION_SR, &reg);
> +	if (ret) {
> +		dev_err(dev, "Unable to read pmic version\n");

"PMIC"

> +		return ret;
> +	}
> +	dev_info(dev, "PMIC Chip Version: 0x%x\n", reg);
> +
> +	/* Initialize PMIC IRQ Chip & IRQ domains associated */

"associated IRQ domains"

> +	ret = devm_regmap_add_irq_chip(dev, ddata->regmap, ddata->irq,
> +				       IRQF_ONESHOT | IRQF_SHARED,
> +				       0, &stpmic1_regmap_irq_chip,
> +				       &ddata->irq_data);
> +	if (ret) {
> +		dev_err(dev, "IRQ Chip registration failed: %d\n", ret);
> +		return ret;
> +	}
> +
> +	return devm_of_platform_populate(dev);
> +}
> +
> +static const struct i2c_device_id stpmic1_id[] = {
> +	{ "stpmic1"},
> +	{}
> +};

I don't think this is required any more.

> +MODULE_DEVICE_TABLE(i2c, stpmic1_id);

-- 
Lee Jones [李琼斯]
Linaro Services Technical Lead
Linaro.org │ Open source software for ARM SoCs
Follow Linaro: Facebook | Twitter | Blog
