Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 14:46:58 -0000
Received: from icoremail.net (unknown [209.85.214.172])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3yQEM+xb19mQAQ--.43781S3;
	Wed, 14 Nov 2018 22:36:53 +0800 (CST)
Received: from mail-pl1-f172.google.com (unknown [209.85.214.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTEgCM+xbYRg_AA--.3010S3;
	Wed, 14 Nov 2018 22:36:50 +0800 (CST)
Received: by mail-pl1-f172.google.com with SMTP id w22-v6so7893961plk.0
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 06:36:50 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:dkim-signature
         :dmarc-filter:subject:from:to:cc:references:message-id:date
         :user-agent:mime-version:in-reply-to:content-transfer-encoding
         :content-language:sender:precedence:list-id;
        bh=baJeU9R+v5Jc+2Sl0sOJfQlJgTMCXy6/eC/TaR3NA1U=;
        b=VM4BOwOgbFKQjncDqF1C73ax5VmFKxhQp1u5bCsXAfgggGXi3VG8gYL8jCKN/1Bv5d
         bMGBJHSASVFXrdw32ZOk0TndAJf0z/Hd+9qtUjBUGwHzNJmUy3a8rMhX0MsnAatpjdtl
         cdhsrpcFQfTpBJtMO/MbVTdVUfVVLPOVfcdXDF9RHJHL9MngxCwGC0TrPj0YfT9UPXjN
         nLEcB/vk/A3X0TrAUZJIkWZbwo6FN5Lr5+niR0sP9FSPNgLtrWzhgISGXOaTEr5M67R+
         UmmP1IDCoPJRFT185FmbniOkyhaqIompi0qTQr8LP7HCm4eK0nTXXonxdX5xiusiQ+iD
         7dmA==
X-Gm-Message-State: AGRZ1gJ0gXgSjMesszWERW+QNCEFuD+1NjtJDYnWm8kKgUqvxvsW6vvG
	PLzE0Tjab0I3X/kZ8WQMc33YQJMcyhn7VYqTTA/jcZQNSLpVbVBFJQ==
X-Received: by 2002:a17:902:6b4b:: with SMTP id g11-v6mr2145065plt.213.1542206210458;
        Wed, 14 Nov 2018 06:36:50 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5885768pjt;
        Wed, 14 Nov 2018 06:36:49 -0800 (PST)
X-Google-Smtp-Source: AJdET5fhyWUk4azNJbuqMB8FVwdp7jxheEaq7j30k5oI+ntIHRxsz5niHTKbjm5QCIeBLSkM9MQF
X-Received: by 2002:a63:2054:: with SMTP id r20mr1960555pgm.328.1542206209414;
        Wed, 14 Nov 2018 06:36:49 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542206209; cv=none;
        d=google.com; s=arc-20160816;
        b=W/fkBXht03LbyDvNx3CFHYxuFxWz+r+uDluupIezh+VGfCs1KmEZCNcPj8UbE5X6yq
         yv/Pav77PNsztU8G2ywDF4gNM8j2frA8Mt2zDYOD1uZwV5y4m7GmkyDXJPwzv+3gipDC
         7TKBKOmz9RlBm65g156E/sqPU4w5pXEK1ZOgKpedFkgatjl6ro6JiGz+GMqdV56Psyiw
         oXR0sfA1wtXXY/wKhxw6ps6MlUBS4+/P6dtIHx5QA8ay45Q4kOefXMDNldiV9DvGN1FS
         EYnyCRg/f08ZLz28NRae3c/bm3hLGkn/ZjSQtcOJw4PGj+q8v7XulkwDWkAb37QPBem1
         R5xQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-language
         :content-transfer-encoding:in-reply-to:mime-version:user-agent:date
         :message-id:references:cc:to:from:subject:dmarc-filter
         :dkim-signature:dkim-signature;
        bh=baJeU9R+v5Jc+2Sl0sOJfQlJgTMCXy6/eC/TaR3NA1U=;
        b=wndKFvudD8A9EuwM73lseQIha2+v6HFUynaDhqX098GGQl37kKCrs2DV/H8yGz4ma7
         AR1KLbeW3EQwlOhsYqtLHrEd7wf2fx3N9B9dlV9komb9/KB+ASc/KaQ9biG/13++630S
         4gAoJEUArtO/QgVj5xgX3wDi+qtvv/Bx1dFqzk1c522DQDBdx2q1iYuDj9n8WJ1fexnj
         0GoyIomFgBW5j3On2I8TCU0YLFXURZwWzUy7hfWHJ4nIsWos8Z+Lt5ANYuKsTsXGQ4hE
         FlO8KnJWoUYC9nn0fspReMyi95hin54Mvk/2V5IvOnDIuT3HEafNyGBsO9gNHg2TvTC0
         NmNA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@codeaurora.org header.s=default header.b=ffUZ1F5u;
       dkim=pass header.i=@codeaurora.org header.s=default header.b=HXWgdq53;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id s12si24254010pgh.488.2018.11.14.06.36.33;
        Wed, 14 Nov 2018 06:36:49 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732840AbeKOAju (ORCPT <rfc822;docz2a@gmail.com> + 99 others);
        Wed, 14 Nov 2018 19:39:50 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:40042 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727357AbeKOAju (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 19:39:50 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id CA9EA6044B; Wed, 14 Nov 2018 14:36:20 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542206180;
        bh=VlEiyXe+KzKKz+Js0d8x3vINvYdHPJs429FntIfkbOQ=;
        h=Subject:From:To:Cc:References:Date:In-Reply-To:From;
        b=ffUZ1F5uEC7MbpE68L21embclgSRHKHq2K+96SphoyTvaTaTiLKoOrL+ZZD5Idfot
         o/PKbEwaD1czgvhIHimOh59JO9FZPabfXkdp+Z6HowVRN+hS9KP674Vk+l60fq9+fA
         OlfiMPIULMmwi8AbQrB8hUlRYfUV6u4TEbvkqmSE=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from [192.168.0.104] (unknown [183.83.73.254])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: vbadigan@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 5F00D6044B;
        Wed, 14 Nov 2018 14:36:14 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542206179;
        bh=VlEiyXe+KzKKz+Js0d8x3vINvYdHPJs429FntIfkbOQ=;
        h=Subject:From:To:Cc:References:Date:In-Reply-To:From;
        b=HXWgdq53yema/ppJvyUYpR5xMo3wndyTnrn2u3ZkWPBcnxUcBs3JU3gZ4HxGuyxXr
         foL2RH5kWJjgIH+85RaD0MsLw1tShbyWfUyIlqMXHGBvjDaAsxxpwjO6vPmbP4SVcC
         OkV//Z4SecOr1F78nM24+mW3i7oaZaDo3aQODypQ=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 5F00D6044B
Subject: Re: [PATCH V3 1/3] mmc: sdhci: Allow platform controlled voltage
 switching
From: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
To: Evan Green <evgreen@chromium.org>
Cc: adrian.hunter@intel.com, Ulf Hansson <ulf.hansson@linaro.org>,
        robh+dt@kernel.org, Doug Anderson <dianders@google.com>,
        asutoshd@codeaurora.org, riteshh@codeaurora.org,
        stummala@codeaurora.org, sayali <sayalil@codeaurora.org>,
        linux-mmc@vger.kernel.org, linux-arm-msm@vger.kernel.org,
        vviswana@codeaurora.org, linux-kernel@vger.kernel.org
References: <1539004739-32060-1-git-send-email-vbadigan@codeaurora.org>
 <1539004739-32060-2-git-send-email-vbadigan@codeaurora.org>
 <CAE=gft631u+ie3PRFkc5t1f3iYwuhbxDbxKUqvdZS5cFJaJbsA@mail.gmail.com>
 <dcb4a579-b308-76c0-7cc3-22bb95147470@codeaurora.org>
Message-ID: <9a4708c8-cc43-a690-7ef7-da351eb1f967@codeaurora.org>
Date: Wed, 14 Nov 2018 20:06:04 +0530
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <dcb4a579-b308-76c0-7cc3-22bb95147470@codeaurora.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTEgCM+xbYRg_AA--.3010S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3GFyDZw1xur45JryUZw17trb_yoW3tw18pr
	1kJFyUCryUJr1rJr1UJw1UJryUJr1UJ34DJr18JF18Xr4UAr1jgr1DWr1jgF1UJr48Jr1U
	Jr1UJr17ur15Jr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_Xrylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r1I6r4UMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2
	jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64
	vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_
	Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnI
	WIevJa73UjIFyTuYvjxUQWv3DUUUU



On 11/12/2018 10:49 PM, Veerabhadrarao Badiganti wrote:
>
> On 10/17/2018 3:39 AM, Evan Green wrote:
>> On Mon, Oct 8, 2018 at 6:22 AM Veerabhadrarao Badiganti
>> <vbadigan@codeaurora.org> wrote:
>>> From: Vijay Viswanath <vviswana@codeaurora.org>
>>>
>>> Some controllers can have internal mechanism to inform the SW that it
>>> is ready for voltage switching. For such controllers, changing voltage
>>> before the HW is ready can result in various issues.
>>>
>>> During setup/cleanup of host, check whether regulator enable/disable
>>> was already done by platform driver.
>>>
>>> Signed-off-by: Vijay Viswanath <vviswana@codeaurora.org>
>>> Signed-off-by: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
>>> ---
>>>   drivers/mmc/host/sdhci.c | 32 +++++++++++++++++++-------------
>>>   drivers/mmc/host/sdhci.h |  1 +
>>>   2 files changed, 20 insertions(+), 13 deletions(-)
>>>
>>> diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
>>> index 99bdae5..ea7ce1d 100644
>>> --- a/drivers/mmc/host/sdhci.c
>>> +++ b/drivers/mmc/host/sdhci.c
>>> @@ -3616,6 +3616,7 @@ int sdhci_setup_host(struct sdhci_host *host)
>>>          unsigned int override_timeout_clk;
>>>          u32 max_clk;
>>>          int ret;
>>> +       bool enable_vqmmc = false;
>>>
>>>          WARN_ON(host == NULL);
>>>          if (host == NULL)
>>> @@ -3629,9 +3630,12 @@ int sdhci_setup_host(struct sdhci_host *host)
>>>           * the host can take the appropriate action if regulators 
>>> are not
>>>           * available.
>>>           */
>>> -       ret = mmc_regulator_get_supply(mmc);
>>> -       if (ret)
>>> -               return ret;
>>> +       if (!mmc->supply.vqmmc) {
>>> +               ret = mmc_regulator_get_supply(mmc);
>>> +               if (ret)
>>> +                       return ret;
>>> +               enable_vqmmc  = true;
>>> +       }
>> Did you not like my suggestion in the previous patch of changing
>> mmc_regulator_get_supply to only get supplies that were not set
>> previously? What you have here is almost the same, except you've got
>> this weird coupling where if vqmmc is already present, you implicitly
>> skip looking at vmmc entirely (since mmc_regulator_get_supply does
>> more than just get vqmmc).
>
> sure. Will update mmc_regulator_get_supply() as you suggested.
>
>>>          DBG("Version:   0x%08x | Present:  0x%08x\n",
>>>              sdhci_readw(host, SDHCI_HOST_VERSION),
>>> @@ -3880,7 +3884,15 @@ int sdhci_setup_host(struct sdhci_host *host)
>>>                  mmc->caps |= MMC_CAP_NEEDS_POLL;
>>>
>>>          if (!IS_ERR(mmc->supply.vqmmc)) {
>>> -               ret = regulator_enable(mmc->supply.vqmmc);
>>> +               if (enable_vqmmc) {
>>> +                       ret = regulator_enable(mmc->supply.vqmmc);
>>> +                       if (ret) {
>>> +                               pr_warn("%s: Failed to enable vqmmc 
>>> regulator: %d\n",
>>> +                                       mmc_hostname(mmc), ret);
>>> +                               mmc->supply.vqmmc = ERR_PTR(-EINVAL);
>>> +                       }
>>> +                       host->vqmmc_enabled = !ret;
>>> +               }
>>>
>>>                  /* If vqmmc provides no 1.8V signalling, then 
>>> there's no UHS */
>>>                  if 
>>> (!regulator_is_supported_voltage(mmc->supply.vqmmc, 1700000,
>>> @@ -3893,12 +3905,6 @@ int sdhci_setup_host(struct sdhci_host *host)
>>>                  if 
>>> (!regulator_is_supported_voltage(mmc->supply.vqmmc, 2700000,
>>>                                                      3600000))
>>>                          host->flags &= ~SDHCI_SIGNALING_330;
>>> -
>>> -               if (ret) {
>>> -                       pr_warn("%s: Failed to enable vqmmc 
>>> regulator: %d\n",
>>> -                               mmc_hostname(mmc), ret);
>>> -                       mmc->supply.vqmmc = ERR_PTR(-EINVAL);
>>> -               }
>>>          }
>>>
>>>          if (host->quirks2 & SDHCI_QUIRK2_NO_1_8_V) {
>>> @@ -4136,7 +4142,7 @@ int sdhci_setup_host(struct sdhci_host *host)
>>>          return 0;
>>>
>>>   unreg:
>>> -       if (!IS_ERR(mmc->supply.vqmmc))
>>> +       if (host->vqmmc_enabled)
>>>                  regulator_disable(mmc->supply.vqmmc);
>>>   undma:
>>>          if (host->align_buffer)
>>> @@ -4154,7 +4160,7 @@ void sdhci_cleanup_host(struct sdhci_host *host)
>>>   {
>>>          struct mmc_host *mmc = host->mmc;
>>>
>>> -       if (!IS_ERR(mmc->supply.vqmmc))
>>> +       if (host->vqmmc_enabled)
>>>                  regulator_disable(mmc->supply.vqmmc);
>>>
>>>          if (host->align_buffer)
>>> @@ -4287,7 +4293,7 @@ void sdhci_remove_host(struct sdhci_host 
>>> *host, int dead)
>>>
>>>          tasklet_kill(&host->finish_tasklet);
>>>
>>> -       if (!IS_ERR(mmc->supply.vqmmc))
>>> +       if (host->vqmmc_enabled)
>>>                  regulator_disable(mmc->supply.vqmmc);
>>>
>>>          if (host->align_buffer)
>>> diff --git a/drivers/mmc/host/sdhci.h b/drivers/mmc/host/sdhci.h
>>> index b001cf4..3c28152 100644
>>> --- a/drivers/mmc/host/sdhci.h
>>> +++ b/drivers/mmc/host/sdhci.h
>>> @@ -524,6 +524,7 @@ struct sdhci_host {
>>>          bool pending_reset;     /* Cmd/data reset is pending */
>>>          bool irq_wake_enabled;  /* IRQ wakeup is enabled */
>>>          bool v4_mode;           /* Host Version 4 Enable */
>>> +       bool vqmmc_enabled;     /* Vqmmc is enabled */
>> I still don't love this, since it doesn't mean what it says. Everyone
>> else that has a vqmmc_enabled member uses it to actually mean "vqmmc
>> is enabled", but this doesn't mean that. For example, you don't clear
>> this when you disable the regulator in patch 3, so this would be set
>> even if the regulator is disabled, and you don't set it when sdhci
>> enables the regulator, so the regulator is on when this flag is not
>> set.
>>
Hi Evan

This flag is meant to say "disable vqmmc *only* if it is enabled by host 
driver (sdhci_host)".
If host driver doesn't enable vqmmc (enabled by platfrm driver) or if it 
fails to enable it, then don't call disable vqmmc.

Agree with you, the present name is not conveying its purpose.
It must be something like "vqmmc_enabled_by_host".

Please let me know if you have any suggestions on this name.


>> At the very least, I think a rename is in order. I'm struggling with
>> the rename, since
>> "vqmmc_pltfrm_enable_but_feel_free_to_call_set_voltage_anywhere" is
>> too long. I guess vqmmc_pltfrm_enabled is the best I've got for now.
>
> Sure. Will rename it.
>
>>>          struct mmc_request *mrqs_done[SDHCI_MAX_MRQS];  /* Requests 
>>> done */
>>>          struct mmc_command *cmd;        /* Current command */
>>> -- 
>>> Qualcomm India Private Limited, on behalf of Qualcomm Innovation 
>>> Center, Inc.
>>> Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum, a 
>>> Linux Foundation Collaborative Project.
>>>
>
