Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:15:49 -0000
Received: from icoremail.net (unknown [209.85.210.170])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv34ocO9bOqOmAQ--.51010S3;
	Sat, 17 Nov 2018 09:34:33 +0800 (CST)
Received: from mail-pf1-f170.google.com (unknown [209.85.210.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHLEgncO9bNcpLAA--.3492S3;
	Sat, 17 Nov 2018 09:34:31 +0800 (CST)
Received: by mail-pf1-f170.google.com with SMTP id 64so7720552pfr.9
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 17:34:31 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:sender:precedence:list-id;
        bh=ejcndncUAuINuK2x9z8Dyx3ipAq0g5bK/NgRT7pR8n0=;
        b=HTZISdWDcWH7I/i+hf/EfSc9qmAf/frYbBPoo1MOrnLWr+l0shRqzXu8NHAoi6sdVu
         PkYRGpDw3+xNc7k5a8GyoDtTvKoTA81sgozDkVNV8SNxUyWQcE+KzKtVJSLRyxtKx9cd
         m01AeO2LKdTUR20TeeP3RFkoIyKFcZd8nJyTprJUifi23/iGjoUeZTb+ZwBYc+Vk5r+M
         I2iKYVxWLpzDKGITG8fwiuz6E+CiskGiBumhVwoelptMZKoREpxYOx3Gg47jRyBlI/dR
         Gj9ot0/AW2MjFsdvpincQ1zTvVC0KwVrEDKVifUQ3rtAz5BMl5P1m8Jp1xm0gQD6N3pY
         vvOw==
X-Gm-Message-State: AGRZ1gKBFi9mlOxGHkdQnu0U/XT3Xh/hXRRZcgma3ukZNjJlN1T1yPL0
	xIUpBfuCQBrHe+ZYxBQyDGqqSL9DLEOXGc1FSl4kIeutDE+AIUY=
X-Received: by 2002:a62:2292:: with SMTP id p18mr10604226pfj.9.1542418470520;
        Fri, 16 Nov 2018 17:34:30 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp27722pju;
        Fri, 16 Nov 2018 17:34:29 -0800 (PST)
X-Google-Smtp-Source: AJdET5cLPRGFS1hgns3kFWKLNkkNafB6nr4CCRije4VXA0ctU+TWCFtI91C1h8td3NsIi9Nhx2B7
X-Received: by 2002:a63:d208:: with SMTP id a8mr11818755pgg.77.1542418469171;
        Fri, 16 Nov 2018 17:34:29 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542418469; cv=none;
        d=google.com; s=arc-20160816;
        b=DixwTzqgC4jJukkgz8Dj0o3CfwecdtrH/NuNrIS37KLtqF0kBuT+dA1NzDk0lMlnZ5
         PrkDEcS/b0Dl+qNJbGxKX3Ef7riaiD5Mpyh0cKrEtFU0KFCtAaEUiwMJZ5Ahb/YtrpSU
         1X0uLJdlCgd7BLRqhaawFALYdtFIKm9FMN10eAdd21Um3nLgEvMwczb0pbz4SEWp4M9z
         iRjxhIc2B7SxHbonqK0+k7ck42244tGC1Pjz2CqYBP+XqgkhrKyTBcsKm9xXT9/aBZc9
         wKqpaotl9jiOx6wTrKZKaVdz/xInT3S1YQSB8SU5bAgFMpZ2Tvkv4Tu27KXuqzleV1hS
         QzrQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=ejcndncUAuINuK2x9z8Dyx3ipAq0g5bK/NgRT7pR8n0=;
        b=VL3yx49oQkourvjcX2yLxVfVFmYf9W3+RMjuXxhDIuJadnCIlp7+ry6pfNzNnMAbwe
         3TexjXWLAVVHMiBDHNjPggT0ATD+bQWr38gE/ogBGHmjtj9wvb7tdEKxmiVoWJ6HZDkE
         EMh2V0i+29XMtcyqX3YkjTlCnEv3qtavGr9yw68jxQvnMljptNIS7dNWnbCiTJpeHrph
         +UJb2ZfJ+AOvjrM2j5p7iOg746g6BJ41B/OJKcFsRGjpxtkE2UCiM5NrEUKSPfPjN96V
         LHZb/XJw97LzCb7D6MuGSOkglLZEUdTMqGKzTZD6pkgh66zanvZ0K882skBk7Nsj0+Zi
         96Tg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@oracle.com header.s=corp-2018-07-02 header.b=O+GsUtDQ;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=oracle.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id gn11si31768149plb.19.2018.11.16.17.34.14;
        Fri, 16 Nov 2018 17:34:29 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729853AbeKQLsg (ORCPT <rfc822;xjxyklwx@gmail.com> + 99 others);
        Sat, 17 Nov 2018 06:48:36 -0500
Received: from userp2130.oracle.com ([156.151.31.86]:55964 "EHLO
        userp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729750AbeKQLsg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 17 Nov 2018 06:48:36 -0500
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
        by userp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wAH1UYqX173181;
        Sat, 17 Nov 2018 01:33:40 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id; s=corp-2018-07-02;
 bh=ejcndncUAuINuK2x9z8Dyx3ipAq0g5bK/NgRT7pR8n0=;
 b=O+GsUtDQZ5Nx+CW1M2PYdkTcC4SlnjtvcIljw8mrAII3rp9F9gr8IBJwa2vYRl6uY0Ix
 82bZJQ+CJxhqvHAFWBEtqJ5KVUIQLpfFkAB1nWVgvD7b7zkzT8zCjizVurvoVYUSXWp8
 rl2kVTzrmEHs3/rVS3ip1p5ggyxHZg9End8pcveugUQIUwuFxywQPqnGD/2hFrmz/avH
 3n2+gud9bc0n7YuMoBysD9lWGCY6GhK2KuqKoG/aZiM+kPkBrizREdo3smsxyV6uw4aj
 cUlAqVLMYuY+L5WQmFy5AfwaTnfLSmULhhiGUTwitD1C82HpnjBMBoNDOqn/+jUZNQ+i 8Q== 
Received: from userv0021.oracle.com (userv0021.oracle.com [156.151.31.71])
        by userp2130.oracle.com with ESMTP id 2nr7cshwyr-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Sat, 17 Nov 2018 01:33:40 +0000
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
        by userv0021.oracle.com (8.14.4/8.14.4) with ESMTP id wAH1Xdmh004522
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Sat, 17 Nov 2018 01:33:39 GMT
Received: from abhmp0004.oracle.com (abhmp0004.oracle.com [141.146.116.10])
        by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wAH1XcPn028976;
        Sat, 17 Nov 2018 01:33:38 GMT
Received: from oracle.com (/10.211.52.31)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Fri, 16 Nov 2018 17:33:38 -0800
From: Wengang Wang <wen.gang.wang@oracle.com>
To: cl@linux.com, penberg@kernel.org, rientjes@google.com,
        iamjoonsoo.kim@lge.com, akpm@linux-foundation.org,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: wen.gang.wang@oracle.com
Subject: [PATCH] mm: use this_cpu_cmpxchg_double in put_cpu_partial
Date: Fri, 16 Nov 2018 17:33:35 -0800
Message-Id: <20181117013335.32220-1-wen.gang.wang@oracle.com>
X-Mailer: git-send-email 2.9.5
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9079 signatures=668683
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=2 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=833
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1811170011
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHLEgncO9bNcpLAA--.3492S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF43Kr15AF1fCFW8urykKrg_yoW5uw1Up3
	yfGF13GFWkCryIkws3GFWvk34Iy348ZFW7AasIqw1Y9rn8Jr18tFyIyry0vF98ur1xuF10
	vr4qya1F9F1UtaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_KwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCY
	IxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x
	07bmzVnUUUUU=

The this_cpu_cmpxchg makes the do-while loop pass as long as the
s->cpu_slab->partial as the same value. It doesn't care what happened to
that slab. Interrupt is not disabled, and new alloc/free can happen in the
interrupt handlers. Theoretically, after we have a reference to the it,
stored in _oldpage_, the first slab on the partial list on this CPU can be
moved to kmem_cache_node and then moved to different kmem_cache_cpu and
then somehow can be added back as head to partial list of current
kmem_cache_cpu, though that is a very rare case. If that rare case really
happened, the reading of oldpage->pobjects may get a 0xdead0000
unexpectedly, stored in _pobjects_, if the reading happens just after
another CPU removed the slab from kmem_cache_node, setting lru.prev to
LIST_POISON2 (0xdead000000000200). The wrong _pobjects_(negative) then
prevents slabs from being moved to kmem_cache_node and being finally freed.

We see in a vmcore, there are 375210 slabs kept in the partial list of one
kmem_cache_cpu, but only 305 in-use objects in the same list for
kmalloc-2048 cache. We see negative values for page.pobjects, the last page
with negative _pobjects_ has the value of 0xdead0004, the next page looks
good (_pobjects is 1).

For the fix, I wanted to call this_cpu_cmpxchg_double with
oldpage->pobjects, but failed due to size difference between
oldpage->pobjects and cpu_slab->partial. So I changed to call
this_cpu_cmpxchg_double with _tid_. I don't really want no alloc/free
happen in between, but just want to make sure the first slab did expereince
a remove and re-add. This patch is more to call for ideas.

Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
---
 mm/slub.c | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/mm/slub.c b/mm/slub.c
index e3629cd..26539e6 100644
--- a/mm/slub.c
+++ b/mm/slub.c
@@ -2248,6 +2248,7 @@ static void put_cpu_partial(struct kmem_cache *s, struct page *page, int drain)
 {
 #ifdef CONFIG_SLUB_CPU_PARTIAL
 	struct page *oldpage;
+	unsigned long tid;
 	int pages;
 	int pobjects;
 
@@ -2255,8 +2256,12 @@ static void put_cpu_partial(struct kmem_cache *s, struct page *page, int drain)
 	do {
 		pages = 0;
 		pobjects = 0;
-		oldpage = this_cpu_read(s->cpu_slab->partial);
 
+		tid = this_cpu_read(s->cpu_slab->tid);
+		/* read tid before reading oldpage */
+		barrier();
+
+		oldpage = this_cpu_read(s->cpu_slab->partial);
 		if (oldpage) {
 			pobjects = oldpage->pobjects;
 			pages = oldpage->pages;
@@ -2283,8 +2288,17 @@ static void put_cpu_partial(struct kmem_cache *s, struct page *page, int drain)
 		page->pobjects = pobjects;
 		page->next = oldpage;
 
-	} while (this_cpu_cmpxchg(s->cpu_slab->partial, oldpage, page)
-								!= oldpage);
+		/* we dont' change tid, but want to make sure it didn't change
+		 * in between. We don't really hope alloc/free not happen on
+		 * this CPU, but don't want the first slab be removed from and
+		 * then re-added as head to this partial list. If that case
+		 * happened, pobjects may read 0xdead0000 when this slab is just
+		 * removed from kmem_cache_node by other CPU setting lru.prev
+		 * to LIST_POISON2.
+		 */
+	} while (this_cpu_cmpxchg_double(s->cpu_slab->partial, s->cpu_slab->tid,
+					 oldpage, tid, page, tid) == 0);
+
 	if (unlikely(!s->cpu_partial)) {
 		unsigned long flags;
 
-- 
2.9.5
