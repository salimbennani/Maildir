Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 06:41:24 -0000
Received: from icoremail.net (unknown [209.85.215.180])
	by mail-app2 (Coremail) with SMTP id by_KCgCn36Qnr+tbE2WMAQ--.41908S3;
	Wed, 14 Nov 2018 13:14:15 +0800 (CST)
Received: from mail-pg1-f180.google.com (unknown [209.85.215.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX+UQjr+tbR488AA--.7863S3;
	Wed, 14 Nov 2018 13:14:12 +0800 (CST)
Received: by mail-pg1-f180.google.com with SMTP id w3-v6so6788544pgs.11
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 21:14:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=u/Avvau0ON5h8AbXVf3goWHkkaeAhbWYGrGa4nDyp4U=;
        b=p43bNkqkP+E4Fxb48K8G89dR8MQ4uibJ/owySuBi2oIzZYItrSfuQzUq3woSgmLLer
         flPVkpaDPxRA3ThB02BLEvRvJe6q0C8tgDn3NqyrXx8VAfISOgWM96L3jrWTD6pUTOJA
         +ttB+nemz0LO3SpcM6JRCZAobCfz1m8TjL5d46bMvW5YrbVI7FTNybWFvnMVVKwNGrXR
         thpMJ8YX+EqA5LLOYSsBNe0g74tRvupxcLKhoFPMqevDWKCvYKSe+Vgw5S34MZw9SZG3
         X2UjSSAg7eHTIf8bUjVjmSVF7UJojHrrRgp1SKjwfKgBaM7C2AYWB2dQUdbHAwzY8sVq
         TeNQ==
X-Gm-Message-State: AGRZ1gICU7V/4aJWDtOMhqX71gZb2+7d66Lxo2i0vqpKgoW7eIffixtn
	Xrvt8nCxdgQjYaVGVQ9SbTCeELEPz1J/r+sr/tOM7qN9HHyjcOo54A==
X-Received: by 2002:a63:bc02:: with SMTP id q2mr469139pge.116.1542172451643;
        Tue, 13 Nov 2018 21:14:11 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5381894pjt;
        Tue, 13 Nov 2018 21:14:10 -0800 (PST)
X-Google-Smtp-Source: AJdET5f3YxrQ3EJJdaOWg2rAuz4bCtwBkxDPjG3r4kA1ZDntYwtLjqckNeYQl9C5OGHKyNKGV5uB
X-Received: by 2002:a62:8647:: with SMTP id x68-v6mr519842pfd.252.1542172450290;
        Tue, 13 Nov 2018 21:14:10 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542172450; cv=none;
        d=google.com; s=arc-20160816;
        b=bB5KHni1nVLWWq43Zun9f0/gcQnIJ37hslY/a2dKVgDs6rH2Gtlk5fKVRKlv5H1a8I
         JrQYjT/RP82xGR1KwtK9uy6LqkDKyi6WD+6bA9FRmpcvkXWobYbEbjsgf46ZcyePXkOF
         9I3Z7l7iI14leYTmLMpd/FUriNfvo5lKroplteu+BnpTeLjCfnxThBggl1i37EapYFgb
         D7fpyRPK4xIWGMOs/1ANpsyYqpYE9uNSYgNHFsvlIPFyvp/hRzqNtpo73xkvC8T+fFlj
         J5cdoKqWWJ6o2xYAN0zfb1ZWZXyadvuQDErBqcIK3gc4KWe0qRIHnrhmgtOgBZoMppgm
         Lnfg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature;
        bh=u/Avvau0ON5h8AbXVf3goWHkkaeAhbWYGrGa4nDyp4U=;
        b=jmbGMdSZbJ70PFBaoV9ydacLgfoHvBVs9sB5Y1Fv8Vb2d/+yZh0xyGJQ1deWYZyVr5
         aYohMJ4fRAL93fBnM7LB+9utBj8YnvPCwcfLYZIz/mX0WZuues1ZXzjljoH8ouGybz5+
         Ohsq3hOFQdoSDBBFWJ65n5pTtKPI/bGNvy61Iq8nWola7wrXPj4q48MxoY+aT05hIhpo
         ondI5H0nuUO75JgptmqE+bKwGAzd7a91f8+6pqnhDft9K3+CBPd8AAqICiizoql6/GHq
         N5YXpxmxHUlUovE7UsbGpsYVRJfRaWCorlsKNfqu3+cMG5/uvYdabQBQ35GpgX+AI79L
         6zeQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=fmIAewWD;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k33-v6si23325845pld.151.2018.11.13.21.13.53;
        Tue, 13 Nov 2018 21:14:10 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728797AbeKNPP1 (ORCPT <rfc822;zhaoweiliew@gmail.com>
        + 99 others); Wed, 14 Nov 2018 10:15:27 -0500
Received: from mail-lf1-f67.google.com ([209.85.167.67]:46959 "EHLO
        mail-lf1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726610AbeKNPP1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 10:15:27 -0500
Received: by mail-lf1-f67.google.com with SMTP id f23so10568739lfc.13
        for <linux-kernel@vger.kernel.org>; Tue, 13 Nov 2018 21:13:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=u/Avvau0ON5h8AbXVf3goWHkkaeAhbWYGrGa4nDyp4U=;
        b=fmIAewWDqmBNncgwJKNTaPlkUAsoI3cFBiXQWCVSmDx4z/Nk0QnFWWLXZNlxzs4980
         NJiKW1lKcs0hWv5Xgv5AYjErZ4wMmyRU1jic9oW27mgERu9fS8TG8uSyeafkmqLgUJlm
         VmX8hiqosLrb0OKJVjfowzh03QSi3J0LNIcrT0rffyS2BCo2hgaDTIXrGSO/2uGmN7a4
         sWWFabzvMgjqn+QoA/Ht+70zHk6N6qXty792W5m3E2OnwCYrbjDbGFbXxP65T93WF/YH
         jh9Hi0z/pMjNCaXalKTONutY+olvIVa3Gjk7R3g4cPlZBYtH3LYMFL2Nite1IOeg3njV
         qMWA==
X-Received: by 2002:a19:6514:: with SMTP id z20mr199969lfb.31.1542172427526;
 Tue, 13 Nov 2018 21:13:47 -0800 (PST)
MIME-Version: 1.0
References: <20181106120544.GA3783@jordon-HP-15-Notebook-PC>
In-Reply-To: <20181106120544.GA3783@jordon-HP-15-Notebook-PC>
From: Souptick Joarder <jrdr.linux@gmail.com>
Date: Wed, 14 Nov 2018 10:43:34 +0530
Message-ID: <CAFqt6zbwwkvuZypssKQtsKdfZKk3DEQXpA7Qw6yDNakpu=Jv1w@mail.gmail.com>
Subject: Re: [PATCH v3] mm: Create the new vm_fault_t type
To: Matthew Wilcox <willy@infradead.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Michal Hocko <mhocko@suse.com>,
        "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>,
        Dan Williams <dan.j.williams@intel.com>, vbabka@suse.cz,
        riel@redhat.com, rppt@linux.ibm.com
Cc: Linux-MM <linux-mm@kvack.org>, linux-kernel@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX+UQjr+tbR488AA--.7863S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Jr4DtryUKFyxGw17JFW7XFb_yoWxKr1rpF
	1Ut3sFqrs2qr1ayrZ7GwnrA3WruayFyF1DGFy2g34DAw1q9r15Gw4akr4FgFyjyr1vgrW0
	qF4UWr10k3yDWwUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW8WwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI42IY
	6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6rWUJVWrZr1UYxBIdaVFxhVjvjDU0xZFpf9x07bQ
	TmhUUUUU=

On Tue, Nov 6, 2018 at 5:33 PM Souptick Joarder <jrdr.linux@gmail.com> wrote:
>
> Page fault handlers are supposed to return VM_FAULT codes,
> but some drivers/file systems mistakenly return error
> numbers. Now that all drivers/file systems have been converted
> to use the vm_fault_t return type, change the type definition
> to no longer be compatible with 'int'. By making it an unsigned
> int, the function prototype becomes incompatible with a function
> which returns int. Sparse will detect any attempts to return a
> value which is not a VM_FAULT code.
>
> VM_FAULT_SET_HINDEX and VM_FAULT_GET_HINDEX values are changed
> to avoid conflict with other VM_FAULT codes.
>
> Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>

Any further comment on this patch ?
> ---
> v2: Updated the change log and corrected the document part.
>     name added to the enum that kernel-doc able to parse it.
>
> v3: Corrected the documentation.
>
>  include/linux/mm.h       | 46 ------------------------------
>  include/linux/mm_types.h | 73 +++++++++++++++++++++++++++++++++++++++++++++++-
>  2 files changed, 72 insertions(+), 47 deletions(-)
>
> diff --git a/include/linux/mm.h b/include/linux/mm.h
> index fcf9cc9..511a3ce 100644
> --- a/include/linux/mm.h
> +++ b/include/linux/mm.h
> @@ -1267,52 +1267,6 @@ static inline void clear_page_pfmemalloc(struct page *page)
>  }
>
>  /*
> - * Different kinds of faults, as returned by handle_mm_fault().
> - * Used to decide whether a process gets delivered SIGBUS or
> - * just gets major/minor fault counters bumped up.
> - */
> -
> -#define VM_FAULT_OOM   0x0001
> -#define VM_FAULT_SIGBUS        0x0002
> -#define VM_FAULT_MAJOR 0x0004
> -#define VM_FAULT_WRITE 0x0008  /* Special case for get_user_pages */
> -#define VM_FAULT_HWPOISON 0x0010       /* Hit poisoned small page */
> -#define VM_FAULT_HWPOISON_LARGE 0x0020  /* Hit poisoned large page. Index encoded in upper bits */
> -#define VM_FAULT_SIGSEGV 0x0040
> -
> -#define VM_FAULT_NOPAGE        0x0100  /* ->fault installed the pte, not return page */
> -#define VM_FAULT_LOCKED        0x0200  /* ->fault locked the returned page */
> -#define VM_FAULT_RETRY 0x0400  /* ->fault blocked, must retry */
> -#define VM_FAULT_FALLBACK 0x0800       /* huge page fault failed, fall back to small */
> -#define VM_FAULT_DONE_COW   0x1000     /* ->fault has fully handled COW */
> -#define VM_FAULT_NEEDDSYNC  0x2000     /* ->fault did not modify page tables
> -                                        * and needs fsync() to complete (for
> -                                        * synchronous page faults in DAX) */
> -
> -#define VM_FAULT_ERROR (VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | \
> -                        VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE | \
> -                        VM_FAULT_FALLBACK)
> -
> -#define VM_FAULT_RESULT_TRACE \
> -       { VM_FAULT_OOM,                 "OOM" }, \
> -       { VM_FAULT_SIGBUS,              "SIGBUS" }, \
> -       { VM_FAULT_MAJOR,               "MAJOR" }, \
> -       { VM_FAULT_WRITE,               "WRITE" }, \
> -       { VM_FAULT_HWPOISON,            "HWPOISON" }, \
> -       { VM_FAULT_HWPOISON_LARGE,      "HWPOISON_LARGE" }, \
> -       { VM_FAULT_SIGSEGV,             "SIGSEGV" }, \
> -       { VM_FAULT_NOPAGE,              "NOPAGE" }, \
> -       { VM_FAULT_LOCKED,              "LOCKED" }, \
> -       { VM_FAULT_RETRY,               "RETRY" }, \
> -       { VM_FAULT_FALLBACK,            "FALLBACK" }, \
> -       { VM_FAULT_DONE_COW,            "DONE_COW" }, \
> -       { VM_FAULT_NEEDDSYNC,           "NEEDDSYNC" }
> -
> -/* Encode hstate index for a hwpoisoned large page */
> -#define VM_FAULT_SET_HINDEX(x) ((x) << 12)
> -#define VM_FAULT_GET_HINDEX(x) (((x) >> 12) & 0xf)
> -
> -/*
>   * Can be called by the pagefault handler when it gets a VM_FAULT_OOM.
>   */
>  extern void pagefault_out_of_memory(void);
> diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h
> index 5ed8f62..cb25016 100644
> --- a/include/linux/mm_types.h
> +++ b/include/linux/mm_types.h
> @@ -22,7 +22,6 @@
>  #endif
>  #define AT_VECTOR_SIZE (2*(AT_VECTOR_SIZE_ARCH + AT_VECTOR_SIZE_BASE + 1))
>
> -typedef int vm_fault_t;
>
>  struct address_space;
>  struct mem_cgroup;
> @@ -609,6 +608,78 @@ static inline bool mm_tlb_flush_nested(struct mm_struct *mm)
>
>  struct vm_fault;
>
> +/**
> + * typedef vm_fault_t - Return type for page fault handlers.
> + *
> + * Page fault handlers return a bitmask of %VM_FAULT values.
> + */
> +typedef __bitwise unsigned int vm_fault_t;
> +
> +/**
> + * enum vm_fault_reason - Page fault handlers return a bitmask of
> + * these values to tell the core VM what happened when handling the
> + * fault. Used to decide whether a process gets delivered SIGBUS or
> + * just gets major/minor fault counters bumped up.
> + *
> + * @VM_FAULT_OOM:              Out Of Memory
> + * @VM_FAULT_SIGBUS:           Bad access
> + * @VM_FAULT_MAJOR:            Page read from storage
> + * @VM_FAULT_WRITE:            Special case for get_user_pages
> + * @VM_FAULT_HWPOISON:         Hit poisoned small page
> + * @VM_FAULT_HWPOISON_LARGE:   Hit poisoned large page. Index encoded
> + *                             in upper bits
> + * @VM_FAULT_SIGSEGV:          segmentation fault
> + * @VM_FAULT_NOPAGE:           ->fault installed the pte, not return page
> + * @VM_FAULT_LOCKED:           ->fault locked the returned page
> + * @VM_FAULT_RETRY:            ->fault blocked, must retry
> + * @VM_FAULT_FALLBACK:         huge page fault failed, fall back to small
> + * @VM_FAULT_DONE_COW:         ->fault has fully handled COW
> + * @VM_FAULT_NEEDDSYNC:                ->fault did not modify page tables and needs
> + *                             fsync() to complete (for synchronous page faults
> + *                             in DAX)
> + * @VM_FAULT_HINDEX_MASK:      mask HINDEX value
> + *
> + */
> +enum vm_fault_reason {
> +       VM_FAULT_OOM            = (__force vm_fault_t)0x000001,
> +       VM_FAULT_SIGBUS         = (__force vm_fault_t)0x000002,
> +       VM_FAULT_MAJOR          = (__force vm_fault_t)0x000004,
> +       VM_FAULT_WRITE          = (__force vm_fault_t)0x000008,
> +       VM_FAULT_HWPOISON       = (__force vm_fault_t)0x000010,
> +       VM_FAULT_HWPOISON_LARGE = (__force vm_fault_t)0x000020,
> +       VM_FAULT_SIGSEGV        = (__force vm_fault_t)0x000040,
> +       VM_FAULT_NOPAGE         = (__force vm_fault_t)0x000100,
> +       VM_FAULT_LOCKED         = (__force vm_fault_t)0x000200,
> +       VM_FAULT_RETRY          = (__force vm_fault_t)0x000400,
> +       VM_FAULT_FALLBACK       = (__force vm_fault_t)0x000800,
> +       VM_FAULT_DONE_COW       = (__force vm_fault_t)0x001000,
> +       VM_FAULT_NEEDDSYNC      = (__force vm_fault_t)0x002000,
> +       VM_FAULT_HINDEX_MASK    = (__force vm_fault_t)0x0f0000,
> +};
> +
> +/* Encode hstate index for a hwpoisoned large page */
> +#define VM_FAULT_SET_HINDEX(x) ((__force vm_fault_t)((x) << 16))
> +#define VM_FAULT_GET_HINDEX(x) (((x) >> 16) & 0xf)
> +
> +#define VM_FAULT_ERROR (VM_FAULT_OOM | VM_FAULT_SIGBUS |       \
> +                       VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |  \
> +                       VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK)
> +
> +#define VM_FAULT_RESULT_TRACE \
> +       { VM_FAULT_OOM,                 "OOM" },        \
> +       { VM_FAULT_SIGBUS,              "SIGBUS" },     \
> +       { VM_FAULT_MAJOR,               "MAJOR" },      \
> +       { VM_FAULT_WRITE,               "WRITE" },      \
> +       { VM_FAULT_HWPOISON,            "HWPOISON" },   \
> +       { VM_FAULT_HWPOISON_LARGE,      "HWPOISON_LARGE" },     \
> +       { VM_FAULT_SIGSEGV,             "SIGSEGV" },    \
> +       { VM_FAULT_NOPAGE,              "NOPAGE" },     \
> +       { VM_FAULT_LOCKED,              "LOCKED" },     \
> +       { VM_FAULT_RETRY,               "RETRY" },      \
> +       { VM_FAULT_FALLBACK,            "FALLBACK" },   \
> +       { VM_FAULT_DONE_COW,            "DONE_COW" },   \
> +       { VM_FAULT_NEEDDSYNC,           "NEEDDSYNC" }
> +
>  struct vm_special_mapping {
>         const char *name;       /* The name, e.g. "[vdso]". */
>
> --
> 1.9.1
>
