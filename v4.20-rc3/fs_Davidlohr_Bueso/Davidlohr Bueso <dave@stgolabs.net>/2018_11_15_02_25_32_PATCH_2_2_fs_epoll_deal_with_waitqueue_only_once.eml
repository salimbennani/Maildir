Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:42:01 -0000
Received: from icoremail.net (unknown [209.85.214.170])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_wsAaexb6kKSAQ--.43638S3;
	Thu, 15 Nov 2018 02:27:12 +0800 (CST)
Received: from mail-pl1-f170.google.com (unknown [209.85.214.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTkr8aOxbV9g_AA--.14538S3;
	Thu, 15 Nov 2018 02:27:09 +0800 (CST)
Received: by mail-pl1-f170.google.com with SMTP id b5so1755300plr.4
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 10:27:08 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=YFiSfSDZ3soSv8JOfMqkq25TtWqcvFX2dsdNtC6LSWc=;
        b=TmfXpcHW20mhBaGDVpwQGCkN5y+vpwO5PjO75fyGx9WuFH3pkhdw6rCzeD7vGzNk8T
         CIUXtiDUhb8rry3IzFwaJbVaP1qaTf+RnTMDfC6KuQE/gl0/NqUEU53RJn1OF/N6bNS2
         VJ2Lu2oMaVNm+pkq0Ro3Zyi4lUMx8tfoDHZyLaMi2FsJKJ50329wdfdtr+2XeKgMm1Xj
         AWCj9u2T6CWJhbRTeDn2FeywAp9Kqnf0Ab8jwt4wtICxY3bz8U+NEQTe2aBXCEiQQ3rE
         Q4MwdmBSSISxOC16DOHsrtayVhRLATy2LMnwdIyKIITEx2t6+ur/NQ/IB85hyg7ndELV
         RbVg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKQPQvBTxUnRCdWjaUaKu++rK6HFqvb9ebCluHRGdjvrtw9zcPL
	uBfZhTCZ+/4jqFTbuwx0jPjTD8DzigyzI2xD6ShLY8ppzi77lg6ORg==
X-Received: by 2002:a17:902:784d:: with SMTP id e13mr3050200pln.188.1542220028674;
        Wed, 14 Nov 2018 10:27:08 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp6155342pjt;
        Wed, 14 Nov 2018 10:27:07 -0800 (PST)
X-Google-Smtp-Source: AJdET5eSnzqEDj1i3UjrSaQPLN1VqgmPqejsYOzUM0ZZKY0OTanb1pPuxVAVN1NZ9N/KVXehY57Q
X-Received: by 2002:a62:399b:: with SMTP id u27mr3151978pfj.181.1542220027404;
        Wed, 14 Nov 2018 10:27:07 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542220027; cv=none;
        d=google.com; s=arc-20160816;
        b=JUFhxmQT9QL8lbTq+e1TiYE4bjj+aU1h7vJzcHa2k1TJFHsrqcK2Dzb53qbCS3iCwz
         HfZ6jChiqgkOy1N7vm4CCHN97W7PlSoMOMjVi9PfAIB7JXawQ7UdHhd4GqRb4JujvhZx
         2drayC2egGbHDXPeXLHn/n5uAJf0HUFu2FY7ZUWEqYgMKsMj8OKWXK8i6hoaCDxxE0Xc
         Jj+tUg97X9yvQ5oRPMnZf/RA3FcZJCBNV5dnxURJpb8iisgpGs/xQ1Nap86Mgw2vtwia
         wrj2HIE1UcslDRDP1d6i1T5poH0kIrdsCv2mSnNeh2iVIB2Gv/D9s7AE3kVWX5z9av1U
         GXpw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=YFiSfSDZ3soSv8JOfMqkq25TtWqcvFX2dsdNtC6LSWc=;
        b=rLIHWzPt8fKCgraYHiQgsAQXvLfX7GE80RNlQNrA0l9vsmQN1Ghs5gSl0mNYeUG0AU
         EHh4UJaHgQVIpQVIZkAWZ1+fAvIxkoC+IVyYyVhGkb78uYa8QJLVoRdLvcaGRSWuWHnx
         uVLLNEF5tdKBVP6/Km8IU3SIZoHVFc4NDINyiZv8SBQezt1sP4VI32RRf1+wM4ZBz4Du
         Yhmos3e+PeUIZSK7XVkMGp8q7xneU58RvWDnLZ8tOO4hy4Y/DxEz5QBWhY5cAvHuR2rr
         fskyoBz5p5DMQbcxLDh4aO4tAzYYWmzNjzgz0ha/0wGBiNRk3tIoCtEt0djt+EPefB4y
         GWyg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w14-v6si23429739plq.327.2018.11.14.10.26.52;
        Wed, 14 Nov 2018 10:27:07 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731868AbeKOEaL (ORCPT <rfc822;leiliang4you@gmail.com>
        + 99 others); Wed, 14 Nov 2018 23:30:11 -0500
Received: from smtp2.provo.novell.com ([137.65.250.81]:59757 "EHLO
        smtp2.provo.novell.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727576AbeKOEaL (ORCPT
        <rfc822;groupwise-linux-kernel@vger.kernel.org:0:0>);
        Wed, 14 Nov 2018 23:30:11 -0500
Received: from localhost.localdomain (prv-ext-foundry1int.gns.novell.com [137.65.251.240])
        by smtp2.provo.novell.com with ESMTP (TLS encrypted); Wed, 14 Nov 2018 11:25:43 -0700
From: Davidlohr Bueso <dave@stgolabs.net>
To: akpm@linux-foundation.org
Cc: jbaron@akamai.com, viro@zeniv.linux.org.uk,
        linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        dave@stgolabs.net, Davidlohr Bueso <dbueso@suse.de>
Subject: [PATCH 2/2] fs/epoll: deal with wait_queue only once
Date: Wed, 14 Nov 2018 10:25:32 -0800
Message-Id: <20181114182532.27981-2-dave@stgolabs.net>
X-Mailer: git-send-email 2.16.4
In-Reply-To: <20181114182532.27981-1-dave@stgolabs.net>
References: <20181114182532.27981-1-dave@stgolabs.net>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTkr8aOxbV9g_AA--.14538S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW7AF4kKrykJFy8KrW8XrWxtFb_yoW8Kr47pF
	48GrW3K3W8JwnrWry3Ja1qgry2y39Yga9xGr4fGw42kFZFqry5ZF18tFyYvryFyF1xXrW5
	Za1qvan7Ka4UAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPmb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUJVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48Icx
	kI7VAKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80
	FwCY02Avz4vEIxC_XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr
	1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4U
	JwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcV
	AKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8C
	rVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8Zw
	CIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZE
	Xa7IU5wBMtUUUUU==

There is no reason why we rearm the waitiqueue upon every
fetch_events retry (for when events are found yet send_events()
fails). If nothing else, this saves four lock operations per
retry, and furthermore reduces the scope of the lock even
further.

Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
---
 fs/eventpoll.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/fs/eventpoll.c b/fs/eventpoll.c
index 7e2b5f3d6b3e..25b0c94cc091 100644
--- a/fs/eventpoll.c
+++ b/fs/eventpoll.c
@@ -1749,6 +1749,7 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
 {
 	int res = 0, eavail, timed_out = 0;
 	u64 slack = 0;
+	bool waiter = false;
 	wait_queue_entry_t wait;
 	ktime_t expires, *to = NULL;
 
@@ -1786,6 +1787,15 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
 	if (eavail)
 		goto send_events;
 
+	if (!waiter) {
+		waiter = true;
+		init_waitqueue_entry(&wait, current);
+
+		spin_lock_irq(&ep->wq.lock);
+		__add_wait_queue_exclusive(&ep->wq, &wait);
+		spin_unlock_irq(&ep->wq.lock);
+	}
+
 	/*
 	 * Busy poll timed out.  Drop NAPI ID for now, we can add
 	 * it back in when we have moved a socket with a valid NAPI
@@ -1798,10 +1808,6 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
 	 * We need to sleep here, and we will be wake up by
 	 * ep_poll_callback() when events will become available.
 	 */
-	init_waitqueue_entry(&wait, current);
-	spin_lock_irq(&ep->wq.lock);
-	__add_wait_queue_exclusive(&ep->wq, &wait);
-	spin_unlock_irq(&ep->wq.lock);
 
 	for (;;) {
 		/*
@@ -1836,10 +1842,6 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
 
 	__set_current_state(TASK_RUNNING);
 
-	spin_lock_irq(&ep->wq.lock);
-	__remove_wait_queue(&ep->wq, &wait);
-	spin_unlock_irq(&ep->wq.lock);
-
 send_events:
 	/*
 	 * Try to transfer events to user space. In case we get 0 events and
@@ -1850,6 +1852,12 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
 	    !(res = ep_send_events(ep, events, maxevents)) && !timed_out)
 		goto fetch_events;
 
+	if (waiter) {
+		spin_lock_irq(&ep->wq.lock);
+		__remove_wait_queue(&ep->wq, &wait);
+		spin_unlock_irq(&ep->wq.lock);
+	}
+
 	return res;
 }
 
-- 
2.16.4
