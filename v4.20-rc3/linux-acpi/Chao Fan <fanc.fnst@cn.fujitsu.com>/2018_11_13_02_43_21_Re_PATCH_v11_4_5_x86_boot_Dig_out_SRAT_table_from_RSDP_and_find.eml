Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 04:47:28 -0000
Received: from icoremail.net (unknown [209.85.214.171])
	by mail-app2 (Coremail) with SMTP id by_KCgCn33ygOupbRTOCAQ--.39445S3;
	Tue, 13 Nov 2018 10:44:49 +0800 (CST)
Received: from mail-pl1-f171.google.com (unknown [209.85.214.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBkKdOupbFlo1AA--.1260S3;
	Tue, 13 Nov 2018 10:44:46 +0800 (CST)
Received: by mail-pl1-f171.google.com with SMTP id g59-v6so5229551plb.10
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 18:44:46 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=xf3yi2bhO/leddCLIfmt5F+7Y6g4bz/9z03GN+klIqk=;
        b=D41fK5yWtdeBYxKLjN9cjNvjcQhkv5c15mYAaJiw0gZXz5axpHbHlzu3XvCdfh3oip
         14+l2JWD5qojyhQxw+6kPot4LxowjJxGvkb5dLk54Ulf4K4Vcc+/jxojESbLejVqzVVZ
         1i7xEFMcmpWta5vnFB3c0vMPSgbndO/i8oHWhMPcLhnsRwis6e3KCcQir7xeSNQ3eGjP
         1HmGx6CCbvnnsiofEPNexETI0rn6iNc3i7Bx0YDyMiuSK3gkOko+Sib15wj1mrHtmV2X
         DPL44zVnQStuWv9jHK/5bbezOV69FJwfanX0tko/6kv6/PvC+XbxAiW4EMU90oMrZYj2
         LC0A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJsKY4QPiacHEOCwnTYbOYC44TaMmW/hwMZunTyFH6crBZtWVeF
	M+jOX+3FDlc8H4Prv+naMXfHJnbU5xqM8ZqKolrs97b1EUiLv7SCYg==
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr3381889plp.9.1542077085712;
        Mon, 12 Nov 2018 18:44:45 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp3945104pjt;
        Mon, 12 Nov 2018 18:44:44 -0800 (PST)
X-Google-Smtp-Source: AJdET5f0CFz5r1K/1aVuE2RllkPX1MjGS2ChraaUepettrxwFYXUc3AKR6wegF56pyV488uFR+tQ
X-Received: by 2002:a62:2803:: with SMTP id o3-v6mr3405955pfo.57.1542077084761;
        Mon, 12 Nov 2018 18:44:44 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542077084; cv=none;
        d=google.com; s=arc-20160816;
        b=NyH2Hr3Tq4+vuJaf7227Ps3uHsIfeOkmAL8VoO7+i341vGgl8McLq8iokO7PgH8M7d
         tdaxEjFZeHVcSHMHi0D3oAbIrUU4lnW6/kvmyG2/HKogY+LIAV7VHYRBNr3GaYJ7oLkW
         vSZiTyN53hcmpEkGpRJ/mmLL4IVhc/dBsijXn8g7jNMHU9XBDrHV1p2j+9Xovl+3sKge
         SLHPA9UWQIWf5J48Dxg+JvSVOguIbyr9wJ0VA3SSpOdZbSGhKjNS85POjp/JoDei/5Di
         JEsIz9Rj99o2D+SYFlT2uWf/nR76ten5SCJ3qgeMXNarBXXD20lvISYXiuaD41lkI3f1
         ELqw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=xf3yi2bhO/leddCLIfmt5F+7Y6g4bz/9z03GN+klIqk=;
        b=czkgwbOFsdwhVbaQ0T+wdhlE2ssXwb2gzi8QNQpEnOseUaBDXWQ/NPzdl3Sa1AoHuF
         32a3t4RqdFoHlYx/j5tyRHP5lYPwTR7s7rsYD0JsPlNSv24rMZyG8Lid6m3ubLzuBfX4
         /Ypa7ArQqJO4aekmGo0S0H003N+GQ4D81D0PGWaFdsTrAWWqi37a5RwIzQmB5o0Npaem
         D4cy9PmKwSaKnD0176HLi3QeE2gojV1WspoznkbihVo/7XMkHe9IcasBufrBgfaI/akk
         dow45I7mzpCu0E6LCgy8xBaHRdnCm2zYACrx7Yi7VmvtCsdc4QGcuFu2Fc3pXZxcFX2K
         LYUA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e1-v6si16692381pfe.44.2018.11.12.18.44.30;
        Mon, 12 Nov 2018 18:44:44 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730668AbeKMMkY (ORCPT <rfc822;jbenoit100@gmail.com>
        + 99 others); Tue, 13 Nov 2018 07:40:24 -0500
Received: from mail.cn.fujitsu.com ([183.91.158.132]:58581 "EHLO
        heian.cn.fujitsu.com" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1726341AbeKMMkY (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 07:40:24 -0500
X-IronPort-AV: E=Sophos;i="5.43,368,1503331200"; 
   d="scan'208";a="47983413"
Received: from unknown (HELO cn.fujitsu.com) ([10.167.33.5])
  by heian.cn.fujitsu.com with ESMTP; 13 Nov 2018 10:44:23 +0800
Received: from G08CNEXCHPEKD01.g08.fujitsu.local (unknown [10.167.33.80])
        by cn.fujitsu.com (Postfix) with ESMTP id 8D3F44B6ED4F;
        Tue, 13 Nov 2018 10:44:18 +0800 (CST)
Received: from localhost.localdomain (10.167.225.56) by
 G08CNEXCHPEKD01.g08.fujitsu.local (10.167.33.89) with Microsoft SMTP Server
 (TLS) id 14.3.408.0; Tue, 13 Nov 2018 10:44:22 +0800
Date: Tue, 13 Nov 2018 10:43:21 +0800
From: Chao Fan <fanc.fnst@cn.fujitsu.com>
To: Masayoshi Mizuma <msys.mizuma@gmail.com>
CC: <linux-kernel@vger.kernel.org>, <x86@kernel.org>,
        <linux-efi@vger.kernel.org>, <linux-acpi@vger.kernel.org>,
        <bp@alien8.de>, <tglx@linutronix.de>, <mingo@redhat.com>,
        <hpa@zytor.com>, <keescook@chromium.org>, <bhe@redhat.com>,
        <indou.takao@jp.fujitsu.com>, <caoj.fnst@cn.fujitsu.com>
Subject: Re: [PATCH v11 4/5] x86/boot: Dig out SRAT table from RSDP and find
 immovable memory
Message-ID: <20181113024321.GE7453@localhost.localdomain>
References: <20181112094645.4879-1-fanc.fnst@cn.fujitsu.com>
 <20181112094645.4879-5-fanc.fnst@cn.fujitsu.com>
 <20181112205253.ji3fm37haferjpqa@gabell>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20181112205253.ji3fm37haferjpqa@gabell>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Originating-IP: [10.167.225.56]
X-yoursite-MailScanner-ID: 8D3F44B6ED4F.AD3B1
X-yoursite-MailScanner: Found to be clean
X-yoursite-MailScanner-From: fanc.fnst@cn.fujitsu.com
X-Spam-Status: No
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBkKdOupbFlo1AA--.1260S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3WF4rtw1rGw4xWFyrGFy8Zrb_yoW7Cr1fpF
	Wkta4Dtr4rJrWjgr4Iqr4ru3yfXrs7A3WDZFWxGFyUta1DuF1xGFWFy3y3WFykAFyDXa10
	vayDtFW7CrsYyaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4UMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY
	6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IU5Hb
	yJUUUUU==

On Mon, Nov 12, 2018 at 03:52:54PM -0500, Masayoshi Mizuma wrote:
[...]
>
>> +
>> +	ret = cmdline_find_option("acpi", arg, sizeof(arg));
>> +	if (ret == 4 && !strncmp(arg, "rsdt", 4))
>> +		acpi_use_rsdt = true;
>
>All have to do for ret is checking whether it's above 0, right?
>So how about the following?
>
>	if ((cmdline_find_option("acpi", arg, sizeof(arg)) > 0) &&
>		!strncmp(arg, "rsdt", 4))
>		acpi_use_rsdt = true;

Maybe:
>	if ((cmdline_find_option("acpi", arg, sizeof(arg)) == 4) &&
>		!strncmp(arg, "rsdt", 4))
>		acpi_use_rsdt = true;
looks better. Thanks for your suggestion.

>
>> +
>> +	/* Get RSDT or XSDT from RSDP. */
>> +	if (!acpi_use_rsdt &&
>> +	    rsdp->xsdt_physical_address && rsdp->revision > 1) {
>> +		root_table = rsdp->xsdt_physical_address;
>> +		size = ACPI_XSDT_ENTRY_SIZE;
>> +	} else {
>> +		root_table = rsdp->rsdt_physical_address;
>> +		size = ACPI_RSDT_ENTRY_SIZE;
>> +	}
>> +
>> +	/* Get ACPI root table from RSDT or XSDT.*/
>> +	header = (struct acpi_table_header *)root_table;
>> +	len = header->length;
>> +	count = (u32)((len - sizeof(struct acpi_table_header)) / size);
>> +	entry = ACPI_ADD_PTR(u8, header, sizeof(struct acpi_table_header));
>> +
>> +	for (i = 0; i < count; i++) {
>> +		u64 address64;
>> +
>> +		if (size == ACPI_RSDT_ENTRY_SIZE)
>> +			acpi_table = ((acpi_physical_address)
>> +				      (*ACPI_CAST_PTR(u32, entry)));
>> +		else {
>> +			*(u64 *)(void *)&address64 = *(u64 *)(void *)entry;
>> +			acpi_table = (acpi_physical_address) address64;
>> +		}
>> +
>> +		if (acpi_table) {
>> +			header = (struct acpi_table_header *)acpi_table;
>
>> +			signature = header->signature;
>
>this isn't needed.

Yes, will change it.

>
>> +
>> +			if (ACPI_COMPARE_NAME(header->signature, ACPI_SIG_SRAT))
>> +				return header;
>> +		}
>> +		entry += size;
>> +	}
>> +	return NULL;
>> +}
>> +
>> +/*
>> + * According to ACPI table, filter the immvoable memory regions
>> + * and store them in immovable_mem[].
>> + */
>> +void get_immovable_mem(void)
>> +{
>> +	struct acpi_table_header *table_header;
>> +	struct acpi_subtable_header *table;
>> +	struct acpi_srat_mem_affinity *ma;
>> +	unsigned long table_end;
>> +	char arg[10];
>> +	int i = 0;
>> +	int ret;
>> +
>
>> +	ret = cmdline_find_option("acpi", arg, sizeof(arg));
>> +	if (ret == 3 && !strncmp(arg, "off", 3))
>> +		return;
>
>Same as above.
>
>	if ((cmdline_find_option("acpi", arg, sizeof(arg)) > 0) &&
>		!strncmp(arg, "off", 3))
>		return;
>> +
>> +	if (!cmdline_find_option_bool("movable_node"))
>> +		return;
>
>I think this check isn't needed.
>The SRAT parsing is needed to the kaslr issue which I'm trying
>to fix. The issue may happen even if movable_node isn't set.

Got it.

>
>> +
>> +	table_header = get_acpi_srat_table();
>> +	if (!table_header)
>> +		return;
>> +
>> +	table_end = (unsigned long)table_header + table_header->length;
>> +
>> +	table = (struct acpi_subtable_header *)
>> +		((unsigned long)table_header + sizeof(struct acpi_table_srat));
>> +
>> +	while (((unsigned long)table) +
>> +		       sizeof(struct acpi_subtable_header) < table_end) {
>> +		if (table->type == ACPI_SRAT_TYPE_MEMORY_AFFINITY) {
>> +			ma = (struct acpi_srat_mem_affinity *)table;
>> +			if (!(ma->flags & ACPI_SRAT_MEM_HOT_PLUGGABLE)) {
>> +				immovable_mem[i].start = ma->base_address;
>> +				immovable_mem[i].size = ma->length;
>> +				i++;
>> +			}
>> +
>> +			if (i >= MAX_NUMNODES*2) {
>> +				debug_putstr("Too many immovable memory regions, aborted.\n");
>
>I'm not sure this statement gets true actually,
>but if so, should it be set 0 to fallback in process_mem_region()?

That's a good problem.
Well, I don't know what will cause "i >= MAX_NUMNODES*2", maybe some
error in SRAT table or failed to parse table.
Anyway, it's a good idea to set it 0.

Thanks,
Chao Fan

>
>Thanks,
>Masa
>
>> +				break;
>> +			}
>> +		}
>> +		table = (struct acpi_subtable_header *)
>> +			((unsigned long)table + table->length);
>> +	}
>> +	num_immovable_mem = i;
>> +}
>> diff --git a/arch/x86/boot/compressed/kaslr.c b/arch/x86/boot/compressed/kaslr.c
>> index 9ed9709d9947..b251572e77af 100644
>> --- a/arch/x86/boot/compressed/kaslr.c
>> +++ b/arch/x86/boot/compressed/kaslr.c
>> @@ -87,10 +87,6 @@ static unsigned long get_boot_seed(void)
>>  #define KASLR_COMPRESSED_BOOT
>>  #include "../../lib/kaslr.c"
>>  
>> -struct mem_vector {
>> -	unsigned long long start;
>> -	unsigned long long size;
>> -};
>>  
>>  /* Only supporting at most 4 unusable memmap regions with kaslr */
>>  #define MAX_MEMMAP_REGIONS	4
>> diff --git a/arch/x86/boot/compressed/misc.h b/arch/x86/boot/compressed/misc.h
>> index a1d5918765f3..4a3645fda0ed 100644
>> --- a/arch/x86/boot/compressed/misc.h
>> +++ b/arch/x86/boot/compressed/misc.h
>> @@ -77,6 +77,11 @@ void choose_random_location(unsigned long input,
>>  			    unsigned long *output,
>>  			    unsigned long output_size,
>>  			    unsigned long *virt_addr);
>> +struct mem_vector {
>> +	unsigned long long start;
>> +	unsigned long long size;
>> +};
>> +
>>  /* cpuflags.c */
>>  bool has_cpuflag(int flag);
>>  #else
>> @@ -116,3 +121,13 @@ static inline void console_init(void)
>>  void set_sev_encryption_mask(void);
>>  
>>  #endif
>> +
>> +/* acpitb.c */
>> +#ifdef CONFIG_RANDOMIZE_BASE
>> +int num_immovable_mem;
>> +#ifdef CONFIG_MEMORY_HOTREMOVE
>> +/* Store the amount of immovable memory regions */
>> +#define ACPI_MAX_TABLES                128
>> +void get_immovable_mem(void);
>> +#endif
>> +#endif
>> -- 
>> 2.19.1
>> 
>> 
>> 
>
>

