Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 14:04:45 -0000
Received: from icoremail.net (unknown [209.85.215.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv97sce1bPzeaAQ--.46104S3;
	Thu, 15 Nov 2018 21:17:33 +0800 (CST)
Received: from mail-pg1-f182.google.com (unknown [209.85.215.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCngT3rce1b9gFEAA--.10305S3;
	Thu, 15 Nov 2018 21:17:31 +0800 (CST)
Received: by mail-pg1-f182.google.com with SMTP id 32-v6so9017876pgu.2
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 05:17:31 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:in-reply-to:references
         :organization:mime-version:content-transfer-encoding:sender
         :precedence:list-id;
        bh=SJfkFYMXu6BOMynWPgu9xk81ynxdvybX5hWFlx0XDyg=;
        b=N9UDiMj9Jx4A7XSMVQ9CgSb0jAYTpkws4lNE4LRC9m1UBglmNx/3ydvEBTBumiesET
         0D+xNn71xutr8xsly3CEGu+leGuGDI70zkz7/mCwDyczlkZQA/FdFNOabVywxa9gIYO1
         Bq1Xh9yQVnq2O/eeT0ITEaTkeNWdpRNW+9HzlY6vO/pSAbFdq9PnyhKljzn95xLD4quQ
         XyDo+wkdWnkJZf00mKtITze0Q7cMLqGBpVxFkaTdMH2IUvL16PqctZQiP9JFgQaejASe
         VpO1q+BvxKJKJaM0f+goWirvAnYdXYgOzsd6GhH1iv73qWGVmBIkM8WgpmOSL7Onll98
         +TGg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLbR0StVnY+jomeOZBpZf4Z4g7PxFQSogl20mR2NHI+4qi9As0c
	2tIWpPS27hhz9RaLqJM5lFQ4+v+ZibH/n2wyN/rokcPmRfnc9AT8Yg==
X-Received: by 2002:a62:520b:: with SMTP id g11mr3968337pfb.53.1542287851047;
        Thu, 15 Nov 2018 05:17:31 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp539441pju;
        Thu, 15 Nov 2018 05:17:30 -0800 (PST)
X-Google-Smtp-Source: AJdET5fcayQgh9aJPdv8QgrrtCHG3q8dWdrbVGfNFVagR6wgXctZ0e/GE2tBpeWAyEwRgs7pClgJ
X-Received: by 2002:a62:2cca:: with SMTP id s193-v6mr6302654pfs.10.1542287850008;
        Thu, 15 Nov 2018 05:17:30 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542287849; cv=none;
        d=google.com; s=arc-20160816;
        b=YbNkOAlAb/zgGUL8xpfFupWhJyAPOdOShta/twIvTEi9AKOhXItBYU4sH+EV+Lw4+s
         rxmCeFYeanq3vdTmJjSW5U3H84n7zbI1MT8cQwvsA9oWihm5VyTKCAKOlWK+xU/VB6uU
         TqQVS+PLTdufiZV14FIZDv3ZAM+xno60Guk0NLEKfMNvUdrSYuXSocivWyYv1Eod9uxe
         TMjkRnOXUZ1zS7TFLAHmXURD838TcQfOZwJ61ooSKEyjad9D5qXe196fE4uGTRXHdaoy
         hOjzwJLdy0GSz+CyhIU6MiuRFrCfU6pE2gjkv3RXOyyikCQ+aeX1BhuVEZJKJSzqrlAE
         dwAg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :organization:references:in-reply-to:message-id:subject:cc:to:from
         :date;
        bh=SJfkFYMXu6BOMynWPgu9xk81ynxdvybX5hWFlx0XDyg=;
        b=0NNMJ9X5Q+AMZ7DGZVscmWxF4+vo8oq9zhGU1zceHKLFj+AFHoRmMvUJS6ldtbVm6k
         s049X6I5e1SuV4DR8+L/TP34tvR1+w2ceOlZAjxFdh/HndxIs/Hp8dH8ugRr/+bizRKn
         h/NlEG+TTztuBWuD/OoOrfwmO3fj+jBHF2ztW8tNdSqD0ZMeXnjs8eIKlJaNifp3HTD2
         bMG2d9+Jqa6tmZZj18l73wB59T/4laGo+OE+SZqfxmOvK/OeW+AVZ0kfqjTk6Q/7MuDg
         BjIWx8aSs+5Ucm70OT7UygSc0Tm2Phqm+rFxmmAnw/mlGT0ny/8XBd7MvxUF2pm+xdVw
         8DGQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id o1-v6si26827526pll.325.2018.11.15.05.17.11;
        Thu, 15 Nov 2018 05:17:29 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388239AbeKOXYv (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Thu, 15 Nov 2018 18:24:51 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:39360 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1729024AbeKOXYv (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 18:24:51 -0500
Received: from DGGEMS406-HUB.china.huawei.com (unknown [172.30.72.60])
        by Forcepoint Email with ESMTP id 103B39D53CF15;
        Thu, 15 Nov 2018 21:17:00 +0800 (CST)
Received: from localhost (10.202.226.46) by DGGEMS406-HUB.china.huawei.com
 (10.3.19.206) with Microsoft SMTP Server id 14.3.408.0; Thu, 15 Nov 2018
 21:16:55 +0800
Date: Thu, 15 Nov 2018 13:16:43 +0000
From: Jonathan Cameron <jonathan.cameron@huawei.com>
To: Keith Busch <keith.busch@intel.com>
CC: <linux-kernel@vger.kernel.org>, <linux-acpi@vger.kernel.org>,
        <linux-mm@kvack.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        "Rafael Wysocki" <rafael@kernel.org>,
        Dave Hansen <dave.hansen@intel.com>,
        "Dan Williams" <dan.j.williams@intel.com>
Subject: Re: [PATCH 5/7] doc/vm: New documentation for memory cache
Message-ID: <20181115131643.00003c0d@huawei.com>
In-Reply-To: <20181114224921.12123-6-keith.busch@intel.com>
References: <20181114224921.12123-2-keith.busch@intel.com>
        <20181114224921.12123-6-keith.busch@intel.com>
Organization: Huawei
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; i686-w64-mingw32)
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.226.46]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCngT3rce1b9gFEAA--.10305S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxuw4UAFWUJF4xuF47Jw13Arb_yoW7GF1kpF
	WIyryrKrn7JrnrCan2gw17XryrC3sYka1UK34xAryDurs8Gr1I9r1fK345ZF4Utr1rCay2
	qF4jqr1UWas8G3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW5GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_JFI_Gr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOA8
	n7UUUUU==

On Wed, 14 Nov 2018 15:49:18 -0700
Keith Busch <keith.busch@intel.com> wrote:

> Platforms may provide system memory that contains side caches to help

If we can call them "memory-side caches" that would avoid a persistent
confusion on what they actually are.  It took me ages to get to the
bottom of why they were always drawn to the side of the memory
path ;)

> spped up access. These memory caches are part of a memory node and

speed

> the cache attributes are exported by the kernel.
> 
> Add new documentation providing a brief overview of system memory side
> caches and the kernel provided attributes for application optimization.
A few few nits in line, but mostly looks good to me.

Thanks,

Jonathan

> 
> Signed-off-by: Keith Busch <keith.busch@intel.com>
> ---
>  Documentation/vm/numacache.rst | 76 ++++++++++++++++++++++++++++++++++++++++++
>  1 file changed, 76 insertions(+)
>  create mode 100644 Documentation/vm/numacache.rst
> 
> diff --git a/Documentation/vm/numacache.rst b/Documentation/vm/numacache.rst
> new file mode 100644
> index 000000000000..e79c801b7e3b
> --- /dev/null
> +++ b/Documentation/vm/numacache.rst
> @@ -0,0 +1,76 @@
> +.. _numacache:
> +
> +==========
> +NUMA Cache
> +==========
> +
> +System memory may be constructed in a hierarchy of various performing

of elements with various performance

> +characteristics in order to provide large address space of slower
> +performing memory cached by a smaller size of higher performing

cached by smaller higher performing memory.

> +memory. The system physical addresses that software is aware of see

is aware of is provided (no 'see')

> +is provided by the last memory level in the hierarchy, while higher
> +performing memory transparently provides caching to slower levels.
> +
> +The term "far memory" is used to denote the last level memory in the
> +hierarchy. Each increasing cache level provides higher performing CPU

initiator rather than CPU?

> +access, and the term "near memory" represents the highest level cache
> +provided by the system. This number is different than CPU caches where
> +the cache level (ex: L1, L2, L3) uses a CPU centric view with each level
> +being lower performing and closer to system memory. The memory cache
> +level is centric to the last level memory, so the higher numbered cache

from the last level memory?

> +level denotes memory nearer to the CPU, and further from far memory.
> +
> +The memory side caches are not directly addressable by software. When
> +software accesses a system address, the system will return it from the
> +near memory cache if it is present. If it is not present, the system
> +accesses the next level of memory until there is either a hit in that
> +cache level, or it reaches far memory.
> +
> +In order to maximize the performance out of such a setup, software may
> +wish to query the memory cache attributes. If the system provides a way
> +to query this information, for example with ACPI HMAT (Heterogeneous
> +Memory Attribute Table)[1], the kernel will append these attributes to
> +the NUMA node that provides the memory.
> +
> +When the kernel first registers a memory cache with a node, the kernel
> +will create the following directory::
> +
> +	/sys/devices/system/node/nodeX/cache/

Given we have other things with caches in a numa node, should we make
this name more specific?

> +
> +If that directory is not present, then either the memory does not have
> +a side cache, or that information is not provided to the kernel.
> +
> +The attributes for each level of cache is provided under its cache
> +level index::
> +
> +	/sys/devices/system/node/nodeX/cache/indexA/
> +	/sys/devices/system/node/nodeX/cache/indexB/
> +	/sys/devices/system/node/nodeX/cache/indexC/
> +
> +Each cache level's directory provides its attributes. For example,
> +the following is a single cache level and the attributes available for
> +software to query::
> +
> +	# tree sys/devices/system/node/node0/cache/
> +	/sys/devices/system/node/node0/cache/
> +	|-- index1
> +	|   |-- associativity
> +	|   |-- level
> +	|   |-- line_size
> +	|   |-- size
> +	|   `-- write_policy
> +
> +The cache "associativity" will be 0 if it is a direct-mapped cache, and
> +non-zero for any other indexed based, multi-way associativity.
This description is a little vague.  Right now I think we have 3 options
from HMAT,
1) no associativity (which I suppose could also be called fully associative?)
2) direct mapped (0 in your case)
3) Complex (who knows!)

So how do you map 1 and 3?

> +
> +The "level" is the distance from the far memory, and matches the number
> +appended to its "index" directory.
> +
> +The "line_size" is the number of bytes accessed on a cache miss.
> +
> +The "size" is the number of bytes provided by this cache level.
> +
> +The "write_policy" will be 0 for write-back, and non-zero for
> +write-through caching.

Do these not appear if the write_policy provided by acpi is "none".

> +
> +[1] https://www.uefi.org/sites/default/files/resources/ACPI_6_2.pdf

