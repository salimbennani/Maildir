Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 08:32:03 -0000
Received: from icoremail.net (unknown [209.85.214.180])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwqkIe1bOuGXAQ--.45246S3;
	Thu, 15 Nov 2018 15:35:01 +0800 (CST)
Received: from mail-pl1-f180.google.com (unknown [209.85.214.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnjkqiIe1bV4JCAA--.6742S3;
	Thu, 15 Nov 2018 15:34:58 +0800 (CST)
Received: by mail-pl1-f180.google.com with SMTP id w22-v6so9078561plk.0
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 23:34:58 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:mime-version:content-disposition
         :sender:precedence:list-id;
        bh=NWZWWnKaI1zFBJrPOoIWOvIY0US6wL88sB/pb1UZI2w=;
        b=dFJ7LrA2WrjlIeaLEvKb4pyxJjOuM69fi9ka4y7MLtAHNTVJb9x9UFi6dYirYyHz9h
         QZk0SOmI7VWP0mPuZ9MGkJWop2pidbaWOovtwBA1zVRhY/qvGq8CLXZh0ObLspP8Ne/4
         O4q1R0qWnFkqksuPWtjI2g6XJGDafkJbhAfM0KglhN5fSNr1+RXae9xV5NviFzhrZdZF
         n+dXNYYofd1sBaVrE4g64EdwBeCwkTAAxLXRm+pj7vVKi9pO0PKoq6FFlkrCsnI7R3P5
         araeZ0gZGHcpoN0d19KtDWTeKY228GkbL1dqZUs2EgBCvQM2fP9+2axLgZOLpmDney/q
         yYlQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKDP4WEI4txk2z7O/TEuw9QZnkOKfBH77/M4cTguTnr6sV6cWIA
	OwKcqzg8K6NMFH0+GyD4kB/in0RrY5VvVfaHYmIEMoCrrpVJB6JojA==
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr5315390plp.9.1542267298159;
        Wed, 14 Nov 2018 23:34:58 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp234580pju;
        Wed, 14 Nov 2018 23:34:57 -0800 (PST)
X-Google-Smtp-Source: AJdET5dFBmWJf3mMmEAzn0gCh7gNPjoDse5U/2GCRZ9TW+TOCYTNt93EeqT+66mRfCqDQ0XNLpPC
X-Received: by 2002:a62:fc86:: with SMTP id e128mr5533931pfh.54.1542267296968;
        Wed, 14 Nov 2018 23:34:56 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542267296; cv=none;
        d=google.com; s=arc-20160816;
        b=KHsnQdEkP80ZCKpDp1KrQqvkKQ8MnrH/GTOBNGBXdZM2HdZOV9gGHqGe7AinPQaRrd
         4mRM2hxjwv6ujGXtZBqKk5e8XK8lPVRYqs1QwljN8i90UdsxXIhbbFV7ADFr9LEQatP4
         rYCgcyoyCCr53utfrOV8LyIJ19rJhgFHKCJdEEVgBnr5kAiYzoLLPj1FjeLG9PTKTFpq
         kP+ESgtknjHU9jCPQD8uW49g9mRKNGgVZhXyMzP8tqZ/dWduusPlu3CN2eAAtNdL6OO7
         H8dXf/HZCVE7z/1nEue/T3+znduqwVKo77yD2t2QuxSLlrVMbXbiRnu2E+/lQa6PcYzV
         MGXg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-disposition:mime-version
         :message-id:subject:cc:to:from:date;
        bh=NWZWWnKaI1zFBJrPOoIWOvIY0US6wL88sB/pb1UZI2w=;
        b=Zg12Tj6q1OGiY8or6/nraJN2oY0Crsn7DjXVKZYwzPj2kLvBsMOm1KyfAeT3+yz7x0
         TzXxwAw9MEa2OhIMXKeLFK0/ILvd7d0edX/Wru5I/oLEMEW5ouJs42DPuDsH0se3KNV7
         t5p5ZyvnL/sNIkjHjMoeB7YjcQk6aaKarJ0+PrJOBJL96GY1odOKbvwru5X0M8Nj7Q5z
         17GNQAvzDFEDaIHGXZYiRpYQcDy2Foc7TGJRdBxxSymGQV0DvCnkzVGhJS+Fj46iZY/p
         pZ361/JeDiJ4xADXd/P7GfZgaFC05xdrDhXuVbkkmWSrrUlEeVDaWhyylJspleI2Z6r8
         J9zg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 98-v6si29085151pla.312.2018.11.14.23.34.41;
        Wed, 14 Nov 2018 23:34:56 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728634AbeKORlL (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Thu, 15 Nov 2018 12:41:11 -0500
Received: from dcvr.yhbt.net ([64.71.152.64]:48492 "EHLO dcvr.yhbt.net"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726892AbeKORlL (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 12:41:11 -0500
Received: from localhost (dcvr.yhbt.net [127.0.0.1])
        by dcvr.yhbt.net (Postfix) with ESMTP id 6A0541F87F;
        Thu, 15 Nov 2018 07:34:30 +0000 (UTC)
Date: Thu, 15 Nov 2018 07:34:29 +0000
From: Eric Wong <e@80x24.org>
To: Henrique de Moraes Holschuh <ibm-acpi@hmh.eng.br>,
        Shuduo Sang <shuduo.sang@canonical.com>
Cc: Darren Hart <dvhart@infradead.org>,
        Andy Shevchenko <andy@infradead.org>,
        linux-kernel@vger.kernel.org, ibm-acpi-devel@lists.sourceforge.net,
        platform-driver-x86@vger.kernel.org
Subject: [PATCH] platform/x86: thinkpad_acpi: add adaptive_kbd_modes parameter
Message-ID: <20181115073429.z44czywrf7f65ndb@dcvr>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnjkqiIe1bV4JCAA--.6742S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3JFy8uryfuF13GFy8ur45ZFb_yoW7Kw1Upr
	43GFy3GrWkKr95XFW0qr4UXr1fCFs2vr4xtanruw1kuan2y3WDJa1fJw4Fg345GryrJF4U
	Jr4DXr15Ga9rAFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4xMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07bPpBhU
	UUUU=

This bitmap parameter allows the user to add/remove modes for
DFR_CHANGE_ROW to cycle through.

Users who wish to cycle through WEB_BROWSER_MODE and/or
WEB_CONFERENCE_MODE may now do so by enabling corresponding bits.

While some appreciate more modes, I made this feature because I
wanted to lock the keyboard into FUNCTION_MODE.  This is because
my Fn key (DFR_CHANGE_ROW) is mapped to Escape, and my "Esc" key
is mapped to grave/asciitilde to match the layout of a regular
keyboard.

The default remains unchanged with the DFR_CHANGE_ROW key
toggling between HOME_MODE and FUNCTION_MODE.  Thus the
default "adaptive_kbd_modes" value is 9, but I use 8:

echo 8 >/sys/devices/platform/thinkpad_acpi/adaptive_kbd_modes

The above setting with this change and the following keymap
preserves my sanity on the atrocious adaptive keyboard on
the 2nd-gen X1 Carbon:

	{
		echo keymaps 0-255
		# Esc key maps to '`' or '~'
		echo keycode  1 = grave asciitilde

		# Fn key maps to Escape
		echo keycode 143 = Escape

		# Home and End on the keyboard map to Control
		echo keycode 102 = Control
		echo keycode 107 = Control
	} | loadkeys -

Or with the following xmodmaprc:

	remove Control = Control_L
	remove Lock = Control_L
	keycode   9 = grave asciitilde grave
	keycode 110 = Control_L NoSymbol Control_L
	keycode 115 = Control_L NoSymbol Control_L
	keycode 151 = Escape NoSymbol Escape
	add Control = Control_L

Signed-off-by: Eric Wong <e@80x24.org>
---
 Documentation/laptops/thinkpad-acpi.txt | 11 +++++
 drivers/platform/x86/thinkpad_acpi.c    | 79 ++++++++++++++++++++++-----------
 2 files changed, 64 insertions(+), 26 deletions(-)

diff --git a/Documentation/laptops/thinkpad-acpi.txt b/Documentation/laptops/thinkpad-acpi.txt
index 6cced88de6da..36c8731b6919 100644
--- a/Documentation/laptops/thinkpad-acpi.txt
+++ b/Documentation/laptops/thinkpad-acpi.txt
@@ -1378,6 +1378,17 @@ For more details about which buttons will appear depending on the mode, please
 review the laptop's user guide:
 http://www.lenovo.com/shop/americas/content/user_guides/x1carbon_2_ug_en.pdf
 
+sysfs device attribute: adaptive_kbd_modes
+
+This bitmap attribute controls the modes the "Fn" key is allowed
+to cycle through.  The value can be read and set.  Enabled bits
+correspond to the modes above (that is, the first bit is "Home mode"
+and the fourth bit "Function mode").
+
+The default value is 9, which allows cycling between Home and Function modes.
+Setting and unsetting corresponding bits allows adding or removing modes
+to cycle through.
+
 Multiple Commands, Module Parameters
 ------------------------------------
 
diff --git a/drivers/platform/x86/thinkpad_acpi.c b/drivers/platform/x86/thinkpad_acpi.c
index fde08a997557..77b4f00e0443 100644
--- a/drivers/platform/x86/thinkpad_acpi.c
+++ b/drivers/platform/x86/thinkpad_acpi.c
@@ -3094,8 +3094,44 @@ static ssize_t adaptive_kbd_mode_store(struct device *dev,
 
 static DEVICE_ATTR_RW(adaptive_kbd_mode);
 
+/* Thinkpad X1 Carbon support 5 modes including Home mode, Web browser
+ * mode, Web conference mode, Function mode and Lay-flat mode.
+ * We support cycling between Home mode and Function mode by default.
+ *
+ * Users may enable and disable other modes by changing the
+ * adaptive_kbd_modes bitmap attribute
+ */
+static unsigned adaptive_kbd_modes =
+	1 << HOME_MODE |
+/*	1 << WEB_BROWSER_MODE |
+	1 << WEB_CONFERENCE_MODE | */
+	1 << FUNCTION_MODE;
+
+static ssize_t adaptive_kbd_modes_show(struct device *dev,
+			struct device_attribute *attr,
+			char *buf)
+{
+	return snprintf(buf, PAGE_SIZE, "%u\n", adaptive_kbd_modes);
+}
+
+static ssize_t adaptive_kbd_modes_store(struct device *dev,
+			struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	unsigned long t;
+
+	if (parse_strtoul(buf, (1 << LAYFLAT_MODE) - 1, &t))
+		return -EINVAL;
+
+	adaptive_kbd_modes = (unsigned int)t;
+	return count;
+}
+
+static DEVICE_ATTR_RW(adaptive_kbd_modes);
+
 static struct attribute *adaptive_kbd_attributes[] = {
 	&dev_attr_adaptive_kbd_mode.attr,
+	&dev_attr_adaptive_kbd_modes.attr,
 	NULL
 };
 
@@ -3763,20 +3799,7 @@ static int __init hotkey_init(struct ibm_init_struct *iibm)
 	return (res < 0) ? res : 1;
 }
 
-/* Thinkpad X1 Carbon support 5 modes including Home mode, Web browser
- * mode, Web conference mode, Function mode and Lay-flat mode.
- * We support Home mode and Function mode currently.
- *
- * Will consider support rest of modes in future.
- *
- */
-static const int adaptive_keyboard_modes[] = {
-	HOME_MODE,
-/*	WEB_BROWSER_MODE = 2,
-	WEB_CONFERENCE_MODE = 3, */
-	FUNCTION_MODE
-};
-
+/* Thinkpad X1 Carbon adaptive keyboard */
 #define DFR_CHANGE_ROW			0x101
 #define DFR_SHOW_QUICKVIEW_ROW		0x102
 #define FIRST_ADAPTIVE_KEY		0x103
@@ -3815,20 +3838,20 @@ static int adaptive_keyboard_set_mode(int new_mode)
 
 static int adaptive_keyboard_get_next_mode(int mode)
 {
-	size_t i;
-	size_t max_mode = ARRAY_SIZE(adaptive_keyboard_modes) - 1;
-
-	for (i = 0; i <= max_mode; i++) {
-		if (adaptive_keyboard_modes[i] == mode)
-			break;
-	}
+	int max_mode = fls(adaptive_kbd_modes);
+	int new_mode = mode >= max_mode ? HOME_MODE : mode + 1;
 
-	if (i >= max_mode)
-		i = 0;
-	else
-		i++;
+	/* make sure the new mode is allowed by the user */
+	while (!(adaptive_kbd_modes & (1 << new_mode))) {
+		new_mode++;
+		if (new_mode > max_mode)
+			new_mode = HOME_MODE;
 
-	return adaptive_keyboard_modes[i];
+		/* maybe the user disabled all other modes: */
+		if (new_mode == mode)
+			return mode;
+	}
+	return new_mode;
 }
 
 static bool adaptive_keyboard_hotkey_notify_hotkey(unsigned int scancode)
@@ -3848,6 +3871,10 @@ static bool adaptive_keyboard_hotkey_notify_hotkey(unsigned int scancode)
 				return false;
 			new_mode = adaptive_keyboard_get_next_mode(
 					current_mode);
+
+			/* some users may not want cycling */
+			if (new_mode == current_mode)
+				return true;
 		}
 
 		if (adaptive_keyboard_set_mode(new_mode) < 0)
-- 
EW
