Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 08:31:24 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH_oU5OxbjVuVAQ--.44750S3;
	Thu, 15 Nov 2018 11:12:21 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3l0MS5OxbUnpBAA--.2927S3;
	Thu, 15 Nov 2018 11:12:18 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id n10-v6so8310398pgv.10
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 19:12:18 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:subject:to:cc
         :references:from:message-id:date:user-agent:mime-version:in-reply-to
         :content-language:content-transfer-encoding:sender:precedence
         :list-id;
        bh=bi9ij3ZwB57bFu8hQyHO9qEKpBj6Um/nzyk7+97cq3U=;
        b=pemkZtsHl9nUiLBTihvmkyPJ6y9buRJzjGT1T4Yjx1yRJ3ZY2+PCD72Y6WgHaF2cya
         gVNybn7RICV9acIDDmJfT4CbYNibhE0NA9EO2kOVm+o/zALaCjzbu98gS0jCOcfVkxnJ
         I4O1az5WprqOh4epU9qtC3oNmPTeBrGmnD11KFB4A4ftNHcTOjUlk5sfjASviWGXuP6q
         aRg17Ly32wqF0oJFikI2au6yu8x6rf2vBsbJP1OXkcyNd8NBysciRGhQgVkM9mr0MET2
         z2OZSI7gbrUxLT3/EDP3b7rdSRKaLP5xqOPN3pjgbPrzFzgDUmQGf4mQLzmGnP2/rh/f
         rFgg==
X-Gm-Message-State: AGRZ1gKRzVVebCWd/Fx8H7ZvVbu2p9OJUdd6yjzwgtZkksl3fLr3+26+
	NMNvUgIvRD3J1XQu/ept8fHHvHnFNuzZKg7Kfqph93MEZEnCCBy/KA==
X-Received: by 2002:a62:6241:: with SMTP id w62-v6mr4622778pfb.69.1542251538444;
        Wed, 14 Nov 2018 19:12:18 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp45412pju;
        Wed, 14 Nov 2018 19:12:16 -0800 (PST)
X-Google-Smtp-Source: AJdET5fxv0ivEyPaC/pewpVoJCPK1yv6m2hAsN7j9VC/IAjeyZnEr56h/WSJTHxmX9TL5bDfqYRJ
X-Received: by 2002:a17:902:82cb:: with SMTP id u11mr4409720plz.174.1542251536736;
        Wed, 14 Nov 2018 19:12:16 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542251536; cv=none;
        d=google.com; s=arc-20160816;
        b=X767nFmF2WTnJvZnKjkJ5SFPJRnYYEYyFNXJXvsOx9+s9akgRHBNz2pIAW7LFMc4pG
         9usZuokkTm1gNQ7ohhJiESYPjIZnPPu5S6VCxshbnZyv4ATARiJSDHN0nGeK8cm0Zeem
         vMuvZy/pXhdhYs3hEN2+vR84HX7cfpZlmq8aiH+4qXYb4ZE39L1eddPZucLgik/jRrGU
         SdmhTRb+aCEitYBgkSDZIyK5sklTGmCQeJnTlajRW+Rtx2tdsiSVCzcWuROgr5AvNT20
         BfOB4KgwIRwnvYZQh/770anJ9xT5hZR1+paEWWpbJ32w4G2wIO46VDGaakTovx8iDUfb
         uRTQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject:dkim-signature;
        bh=bi9ij3ZwB57bFu8hQyHO9qEKpBj6Um/nzyk7+97cq3U=;
        b=DZgsfxAgg4Ilt6pD0Z87EOBoPbMQfJwpPvZMX16PVOLctrYeNaYMelkj4sxShRIkwQ
         15l7BolXouaabv3pd6fXS5RcrXDa1hAEvdt0HiKTu91ivzZrjrA9o74klMC8xz+PpT+t
         OpNAuCYJH7xlQhdpN677zT3LoaBPKNOUi5iI5R0+awvU/tUaIhBPft3MCBTzS2GG8cLr
         +Mwn3zRT6l86gr103dg/VgYu2sExjjt3zsCPbn7wSrCKlbAjtAod771wPpYSnau2BWCN
         iTHjHa6jqc9rmuI8gMqerM/FSQU+TITQLnUem2FtXKAX/OvfHAHRgk+o20Hs9rb6z5Qr
         rplg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b="Ovd5U/3y";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id f1-v6si13409732pln.368.2018.11.14.19.11.47;
        Wed, 14 Nov 2018 19:12:16 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727264AbeKONRm (ORCPT <rfc822;kristofer.rye@gmail.com>
        + 99 others); Thu, 15 Nov 2018 08:17:42 -0500
Received: from mail-oi1-f193.google.com ([209.85.167.193]:33575 "EHLO
        mail-oi1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726689AbeKONRl (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 08:17:41 -0500
Received: by mail-oi1-f193.google.com with SMTP id c206so10033688oib.0
        for <linux-kernel@vger.kernel.org>; Wed, 14 Nov 2018 19:11:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=bi9ij3ZwB57bFu8hQyHO9qEKpBj6Um/nzyk7+97cq3U=;
        b=Ovd5U/3yEo1wMFs73SKO8aR24E/+5Y3oQtPUFC4mYWJIOPWMfH1eU6lcnysFOyIX8s
         gr+A4OjMIVTpVz3E+K/d40vazzQ9G8kO6RZN+wJoXMC5kzwYYdUKXZxPM5r5iHzxR/Rd
         Eq7a57WXq5x8K4c1v1NYJIXK3NiGLwpO6uzAI=
X-Received: by 2002:aca:1b0e:: with SMTP id b14mr2538733oib.215.1542251500713;
        Wed, 14 Nov 2018 19:11:40 -0800 (PST)
Received: from [172.22.22.26] (c-71-195-29-92.hsd1.mn.comcast.net. [71.195.29.92])
        by smtp.googlemail.com with ESMTPSA id n6sm15244073ote.56.2018.11.14.19.11.38
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 14 Nov 2018 19:11:39 -0800 (PST)
Subject: Re: [RFC PATCH 09/12] soc: qcom: ipa: main IPA source file
To: Arnd Bergmann <arnd@arndb.de>
Cc: David Miller <davem@davemloft.net>,
        Bjorn Andersson <bjorn.andersson@linaro.org>,
        Ilias Apalodimas <ilias.apalodimas@linaro.org>,
        Networking <netdev@vger.kernel.org>,
        DTML <devicetree@vger.kernel.org>, linux-arm-msm@vger.kernel.org,
        linux-soc@vger.kernel.org,
        Linux ARM <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        syadagir@codeaurora.org, mjavid@codeaurora.org,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>
References: <20181107003250.5832-1-elder@linaro.org>
 <20181107003250.5832-10-elder@linaro.org>
 <CAK8P3a0RH4wbigKR0zsbxPzqWDjrLEkYfQk4GNxhGuxs=HJHHw@mail.gmail.com>
From: Alex Elder <elder@linaro.org>
Message-ID: <4cc029b5-590d-fcba-6c29-b8dac6d03133@linaro.org>
Date: Wed, 14 Nov 2018 21:11:38 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <CAK8P3a0RH4wbigKR0zsbxPzqWDjrLEkYfQk4GNxhGuxs=HJHHw@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3l0MS5OxbUnpBAA--.2927S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZFyDKr4DuFW3Gw47uw4xCrg_yoWruF18pF
	Z5tw47GFWDXa40yr4DXFZ8uFySkrn5CFnxGr1UWFnayF1Yvr1vqFWvkr1Y9a4rurnYkw1I
	vr4Dt39rZas0kFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_Gr4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r1j6r1xMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2
	jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64
	vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_
	Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWrJr0_WFyUJbIY
	CTnIWIevJa73UjIFyTuYvjxUd75FUUUUU

On 11/7/18 8:08 AM, Arnd Bergmann wrote:
> On Wed, Nov 7, 2018 at 1:33 AM Alex Elder <elder@linaro.org> wrote:
> 
>> +static void ipa_client_remove_deferred(struct work_struct *work);
> 
> Try to avoid forward declarations by reordering the code in call order,
> it will also make it easier to read.
> 
>> +static DECLARE_WORK(ipa_client_remove_work, ipa_client_remove_deferred);

Done.  I've actually reworked this a lot, and pulled all the
clock (and interconnect) related code into a separate source file.
No more forward declarations (there anyway), and the work structure
is now embedded in the top-level IPA structure so I can derive
it again in the work function (rather than using the global).

>> +static struct ipa_context ipa_ctx_struct;
>> +struct ipa_context *ipa_ctx = &ipa_ctx_struct;
> 
> Global state variables should generally be removed as well, and
> passed around as function arguments.

Working on this.

>> +static int hdr_init_local_cmd(u32 offset, u32 size)
>> +{
>> +       struct ipa_desc desc = { };
>> +       struct ipa_dma_mem mem;
>> +       void *payload;
>> +       int ret;
>> +
>> +       if (ipa_dma_alloc(&mem, size, GFP_KERNEL))
>> +               return -ENOMEM;
>> +
>> +       offset += ipa_ctx->smem_offset;
>> +
>> +       payload = ipahal_hdr_init_local_pyld(&mem, offset);
>> +       if (!payload) {
>> +               ret = -ENOMEM;
>> +               goto err_dma_free;
>> +       }
>> +
>> +       desc.type = IPA_IMM_CMD_DESC;
>> +       desc.len_opcode = IPA_IMM_CMD_HDR_INIT_LOCAL;
>> +       desc.payload = payload;
>> +
>> +       ret = ipa_send_cmd(&desc);
> 
> You have a bunch of dynamic allocations in here, which you
> then immediately tear down again after the command is complete.
> I can't see at all what you do with the DMA address, since you
> seem to not use the virtual address at all but only store
> the physical address in some kind of descriptor without ever
> writing to it.

I should probably have added at least a comment here.  The
DMA memory was zeroed at the time of allocation.  That zero
buffer is then referred to in the payload to the HDR_INIT_LOCAL
immediate command.  So that command, when executing in the IPA
hardware, uses the contents of the buffer whose physical address
it's supplied, which in this case is full of zeroes.  We don't
use the virtual address because the buffer came pre-zeroed.

Based on your comment elsewhere I will be putting the command
payload in a structure on the stack rather than allocating it
dynamically.

> Am I missing something here?
> 
>> +/* Remoteproc callbacks for SSR events: prepare, start, stop, unprepare */
>> +int ipa_ssr_prepare(struct rproc_subdev *subdev)
>> +{
>> +       printk("======== SSR prepare received ========\n");
> 
> I think you mean dev_dbg() here. A plain printk() without a level
> is not correct and we probably don't want those messages to arrive
> on the console for normal users.

Yes, this was obviously a debug message in some code I should
have removed before sending...

>> +static int ipa_firmware_load(struct de
>> +
>> +err_clear_dev:
>> +       ipa_ctx->lan_cons_ep_id = 0;
>> +       ipa_ctx->cmd_prod_ep_id = 0;
>> +       ipahal_exit();
>> +err_dma_exit:
>> +       ipa_dma_exit();
>> +err_clear_gsi:
>> +       ipa_ctx->gsi = NULL;
>> +       ipa_ctx->ipa_phys = 0;
>> +       ipa_reg_exit();
>> +err_clear_ipa_irq:
>> +       ipa_ctx->ipa_irq = 0;
>> +err_clear_filter_bitmap:
>> +       ipa_ctx->filter_bitmap = 0;
>> +err_interconnect_exit:
>> +       ipa_interconnect_exit();
>> +err_clock_exit:
>> +       ipa_clock_exit();
>> +       ipa_ctx->dev = NULL;
>> +out_smp2p_exit:
>> +       ipa_smp2p_exit(dev);
>> +
> 
> No need to initialize members to zero when you are about
> to free the structure.

The IPA context is in fact a global, static structure at
the moment.  All of this bookkeeping (zeroing out things)
is a habitual practice, basically.  Regardless your point
is good and I'll remove these kinds of things as part of
converting to not using globals.

>> +static struct platform_driver ipa_plat_drv = {
>> +       .probe = ipa_plat_drv_probe,
>> +       .remove = ipa_plat_drv_remove,
>> +       .driver = {
>> +               .name = "ipa",
>> +               .owner = THIS_MODULE,
>> +               .pm = &ipa_pm_ops,
>> +               .of_match_table = ipa_plat_drv_match,
>> +       },
>> +};
>> +
>> +builtin_platform_driver(ipa_plat_drv);
> 
> This should be module_platform_driver(), and allow unloading
> the driver.

Yes.  I've done this for my own use, but the code is not
currently able to shut down cleanly.  I've been fixing a
*lot* of the things that don't clean up after themselves
today but there's more work before I can say this can be
safely built as a module.  But it's a requirement.

					-Alex



> 
>         Arnd
> 
