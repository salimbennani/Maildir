Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 14:03:38 -0000
Received: from icoremail.net (unknown [209.85.210.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX++UQu1bHPGYAQ--.46124S3;
	Thu, 15 Nov 2018 17:55:33 +0800 (CST)
Received: from mail-pf1-f175.google.com (unknown [209.85.210.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXd0ORQu1bXyRDAA--.9069S3;
	Thu, 15 Nov 2018 17:55:29 +0800 (CST)
Received: by mail-pf1-f175.google.com with SMTP id v68-v6so9453757pfk.0
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 01:55:29 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=J7ViE4O6bvkm3tuShrnaqZEekoWNxzwmNsNHaorhzKs=;
        b=bVT+6Lg+lkfgvwsB+wuvmM0MmTA75gAH17n1aXGU/OLIkJXpYAP3xVNYpKFTRa6+7g
         CKBNcXzTMEo8ImuhzRyh1zeSIcuDucN+vE3+g8rbnttl6jbs095w+w59A5BsT6LvqTFO
         nI4JuXIJx/Ajq1CQUApN+9t8kqsEavUlGypZAvG+8hkM/w0EKpPhk6yssIZ0yywMr0hR
         w6F3qxh6VKtmbchONQmXE/aX+irTltB0xI0PVRKd0wJxMu8+Rz1Y5W10jJsAOohGMW47
         5LD4AOL6VIuGPizHgUwc7alqX2xu5UxVjsUXk88YgbHX/D4gfcpWJaX2UzIi+0qpdeGP
         VoUg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJ2x1ARm0GqnsptVlwrBYn1TkOa3GgaCVxQ0KoUo6i8tO8N7H5Y
	bnPutNxGyYO/bRLY5/enD5K60lgL+0QF1GL7qVF7Skpo1vc8/ZUJ3A==
X-Received: by 2002:a62:ab0d:: with SMTP id p13mr5191583pff.211.1542275729350;
        Thu, 15 Nov 2018 01:55:29 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp349633pju;
        Thu, 15 Nov 2018 01:55:28 -0800 (PST)
X-Google-Smtp-Source: AJdET5czRU00rB+31OFAv0AYPag5nu1AeobbvNVhnldBQbhcP8wIg+8JM543y3kzo/fd0TUhC1/o
X-Received: by 2002:a17:902:223:: with SMTP id 32-v6mr5611649plc.112.1542275728381;
        Thu, 15 Nov 2018 01:55:28 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542275728; cv=none;
        d=google.com; s=arc-20160816;
        b=ShU3PFSyuPMDOpTgqlrvPEMzTo6QZmj4hjJyH/tuCn77b5Iq2OEzXx46ZbqEEl6hBw
         DLpZSF6r3FZ0uJLeyYLETQQCbmzP2rwfkBizidVbkzIT1gYBEmkk8L7KITlc+C3KlMt5
         JzJZwZs/ixOrD/JNjhUaMTXx5kvka4m380ju9KCZ8akrDVr/AZIX9XY2NPibS/XC5VdP
         9NQeLsNEpG0os3qTHeFt3+dXloC8vXPMSsI8fy4O961rDhPsrk0re1TfoHn9IDOElL1T
         1N/XUGUjnc8chZsYLLG48YwaGVYRRppgzcc8QcBnpRTlTiVO6OFtgz3VCnh0gwWmQwzZ
         Rl0w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=J7ViE4O6bvkm3tuShrnaqZEekoWNxzwmNsNHaorhzKs=;
        b=kJ4Aam1zaGPZ5GQp6QRO/jPdjsVSOsd1IvPzsGQyK/yFAMGNT9OmusDLBW1XtzC31P
         zCVIQ6BJX8Pe6Pm/Jwkup9npX+kFNz9Piwp7GNdbpxiJLP6kecEmUcA9jCv8CKc22iLT
         Bg8fatlysA+seM04dpw+/iSdlWXf6UKfhwK8uYsMLKr18XjnBjyAnYvOiKqLcFAco9mE
         Bj5tyc8b86DG//f7aH4bTgz71DZnxH0SwPKXtVCFoIA2g5c09kOYqrQZe5l5a4UvLk9l
         jd6HY4HQJPW0HFr5NhSd4eSoYRPOYfokakZLSPc94WPcWUP4XIiaZApAWd9qAg1f8pSK
         SWRw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k8-v6si27330557pll.241.2018.11.15.01.55.13;
        Thu, 15 Nov 2018 01:55:28 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729104AbeKOUBt (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Thu, 15 Nov 2018 15:01:49 -0500
Received: from www262.sakura.ne.jp ([202.181.97.72]:38459 "EHLO
        www262.sakura.ne.jp" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728634AbeKOUBs (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 15:01:48 -0500
Received: from fsav102.sakura.ne.jp (fsav102.sakura.ne.jp [27.133.134.229])
        by www262.sakura.ne.jp (8.15.2/8.15.2) with ESMTP id wAF9sP5v083499;
        Thu, 15 Nov 2018 18:54:25 +0900 (JST)
        (envelope-from penguin-kernel@i-love.sakura.ne.jp)
Received: from www262.sakura.ne.jp (202.181.97.72)
 by fsav102.sakura.ne.jp (F-Secure/fsigk_smtp/530/fsav102.sakura.ne.jp);
 Thu, 15 Nov 2018 18:54:25 +0900 (JST)
X-Virus-Status: clean(F-Secure/fsigk_smtp/530/fsav102.sakura.ne.jp)
Received: from [192.168.1.8] (softbank126126163036.bbtec.net [126.126.163.36])
        (authenticated bits=0)
        by www262.sakura.ne.jp (8.15.2/8.15.2) with ESMTPSA id wAF9sImH083324
        (version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NO);
        Thu, 15 Nov 2018 18:54:25 +0900 (JST)
        (envelope-from penguin-kernel@i-love.sakura.ne.jp)
Subject: Re: [RFC PATCH v2 0/3] oom: rework oom_reaper vs. exit_mmap handoff
To: Michal Hocko <mhocko@kernel.org>
Cc: David Rientjes <rientjes@google.com>, Roman Gushchin <guro@fb.com>,
        linux-mm@kvack.org, Andrew Morton <akpm@linux-foundation.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>
References: <20181025082403.3806-1-mhocko@kernel.org>
 <20181108093224.GS27423@dhcp22.suse.cz>
 <9dfd5c87-ae48-8ffb-fbc6-706d627658ff@i-love.sakura.ne.jp>
 <20181114101604.GM23419@dhcp22.suse.cz>
From: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Message-ID: <0648083a-3112-97ff-edd7-1444c1be529a@i-love.sakura.ne.jp>
Date: Thu, 15 Nov 2018 18:54:15 +0900
User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181114101604.GM23419@dhcp22.suse.cz>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXd0ORQu1bXyRDAA--.9069S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxtF4xZw4fWF4UAF4ktry7ZFb_yoW7Gw1fpa
	yxta45Cr4kZFZFvw18Xw47ua4Fk3ykta15Kr95Gr98Zw45W3WSyF1IgayjgF9rAws7Kw4a
	qFy5ur9ay3WDJrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_GFWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2
	jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64
	vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_
	Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnI
	WIevJa73UjIFyTuYvjxUQtl8UUUUU

On 2018/11/14 19:16, Michal Hocko wrote:
> On Wed 14-11-18 18:46:13, Tetsuo Handa wrote:
> [...]
> > There is always an invisible lock called "scheduling priority". You can't
> > leave the MMF_OOM_SKIP to the exit path. Your approach is not ready for
> > handling the worst case.
> 
> And that problem is all over the memory reclaim. You can get starved
> to death and block other resources. And the memory reclaim is not the
> only one.

I think that it is a manner for kernel developers that no thread keeps
consuming CPU resources forever. In the kernel world, doing

  while (1);

is not permitted. Likewise, doing

  for (i = 0; i < very_large_value; i++)
      do_something_which_does_not_yield_CPU_to_others();

has to be avoided, in order to avoid lockup problems. We are required to
yield CPU to others when we are waiting for somebody else to make progress.
It is the page allocator who is refusing to yield CPU to those who need CPU.

Since the OOM reaper kernel thread "has normal priority" and "can run on any
CPU", the possibility of failing to run is lower than an OOM victim thread
which "has idle priority" and "can run on only limited CPU". You are trying
to add a dependency on such thread, and I'm saying that adding a dependency
on such thread increases possibility of lockup.

Yes, even the OOM reaper kernel thread might fail to run if all CPUs were
busy with realtime threads waiting for the OOM reaper kernel thread to make
progress. In that case, we had better stop relying on asynchronous memory
reclaim, and switch to direct OOM reaping by allocating threads.

But what I demonstrated is that

        /*
         * the exit path is guaranteed to finish the memory tear down
         * without any unbound blocking at this stage so make it clear
         * to the oom_reaper
         */

becomes a lie even when only one CPU was busy with realtime threads waiting
for an idle thread to make progress. If the page allocator stops telling a
lie that "an OOM victim is making progress on behalf of me", we can avoid
the lockup.

>           This is a fundamental issue of the locking without priority
> inheritance and other real time techniques.

That is nothing but an evidence that you are refusing to solve the possibility
of lockup, and will keep piling up stupid lockup bugs. OOM handling does not
use locks when waiting for somebody else to make progress. Blaming "the locking
without priority inheritance" is wrong.

Each subsystem is responsible for avoiding the lockup. If one subsystem is
triggering lockup due to printk() flooding, that subsystem avoids the lockup
by stop abusing CPU resources by reducing the printk() messages. That's all
we can do for now. MM is not privileged enough to lockup the system.

> 
> > Nacked-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
> 
> OK, if your whole point is to block any changes into this area unless
> it is your solution to be merged then I guess I will just push patches
> through with your explicit Nack on them. Your feedback was far fetched
> at many times has distracted the discussion way too often. This is
> especially sad because your testing and review was really helpful at
> times. I do not really have energy to argue the same set of arguments
> over and over again.
> 
> You have expressed unwillingness to understand the overall
> picture several times. You do not care about a long term maintenance
> burden of this code which is quite tricky already and refuse to
> understand the cost/benefit part.
> 
> If this series works for the workload reported by David I will simply
> push it through and let Andrew decide.

I'm skeptic about this approach. Given that exit_mmap() has to do more
things than what the OOM reaper kernel thread can do, how likely the OOM
reaper kernel thread can find that exit_mmap() has completed both
fullset of unmap_vmas() and __unlink_vmas() within (at most) one second
after the OOM reaper completed only subset of unmap_vmas() ? If exit_mmap()
was preempted (due to scheduling priority), the OOM reaper might likely fail
to find it. Anyway, if you insist this approach, I expect that exit_mmap()
asks the OOM reaper kernel thread to call __free_pgtables(), and the OOM
reaper kernel thread sets MMF_OOM_SKIP, and exit_mmap() resumes remove_vma()
etc. , for the OOM reaper kernel thread ("has normal priority" and "can run
on any CPU") is more reliable than a random thread ("has idle priority" and
"can run on only limited CPU").

Given that the OOM reaper likely can find it, there are lack of reviews from
each arch maintainers (regarding whether this approach is really safe, and
whether this approach constrains future improvements).

>                                        If there is a lack of feedback
> I will just keep it around because it seems that most users do not care
> about these corner cases anyway.

No way. We are always failing to get attention regarding OOM handling.  ;-)

Even how to avoid flooding by

    dump_header(oc, NULL);
    pr_warn("Out of memory and no killable processes...\n");

for memcg OOM is failing to make progress.

People make changes without thinking about OOM handling.
If you push this approach, solve the lack of reviews.
