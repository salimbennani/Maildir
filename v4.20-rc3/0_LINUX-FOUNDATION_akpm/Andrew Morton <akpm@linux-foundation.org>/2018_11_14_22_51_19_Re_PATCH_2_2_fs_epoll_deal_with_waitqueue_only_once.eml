Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 00:43:54 -0000
Received: from icoremail.net (unknown [209.85.215.178])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_6cMp+xbibuTAQ--.44401S3;
	Thu, 15 Nov 2018 06:51:57 +0800 (CST)
Received: from mail-pg1-f178.google.com (unknown [209.85.215.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDHr0sJp+xby41AAA--.2557S3;
	Thu, 15 Nov 2018 06:51:54 +0800 (CST)
Received: by mail-pg1-f178.google.com with SMTP id f8-v6so8039483pgq.5
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 14:51:54 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding:sender:precedence:list-id;
        bh=GSOltWYw9Hf4uTD4mbRMQdYszLopcEB/7t+kE3rCQ4Q=;
        b=lpuY9+nHKYqugmHXWjuhEvLpN42svMtUwwXY9ZqiiEdLhyro9WSgVpgA683AjNs9kN
         ZWaPw8FoQBoo2c2SmB5hNMhshfD7ybDbr8S3bJ2rTUWNFiIIfARFLS4gnzhMgtZFu42k
         YzoOInboatgosM0d/Qmbi+hODqggpHjMqPHbZ/3qF8QpChzaXJ23YEPHj30ROexm7LeN
         yOtJroSpVYra4OtNaD1X8b0EvWyJy36zpq5ZoBKux6xZ3tk+MKX23f6rLvZEtKIRm52C
         WsNczObyk7k/cyxbPYvA7hi+r1vUzSjipJtZKnEUe8RmNH6QC5M1+BZnDxbTxIIeR7ZC
         pLkA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLVMocujbWe23d1HMiYzvFC9rL6tK+K/yF4pp3Dy7kyU2In/o61
	vJfNKvVx6Jtw+TRtSnSGl50n4NI0M2H41T+SLuDvzfUsQ3VbfrNpmQ==
X-Received: by 2002:a63:cd17:: with SMTP id i23mr3467217pgg.13.1542235913723;
        Wed, 14 Nov 2018 14:51:53 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp6413617pjt;
        Wed, 14 Nov 2018 14:51:52 -0800 (PST)
X-Google-Smtp-Source: AJdET5enx8veSQwdXEoPy6u/TKTObY1+kRL0L+VjBPxoZH0damuq2B6crAbV49MS4YzHslCDzit2
X-Received: by 2002:a62:120b:: with SMTP id a11-v6mr3818859pfj.165.1542235912841;
        Wed, 14 Nov 2018 14:51:52 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542235912; cv=none;
        d=google.com; s=arc-20160816;
        b=GbFLIqo5lzutr7moW/PU0LxVBDG0kacMzevjJZmmQF7d2e1tAkSL1Zd8DydlMBVtjH
         +rXl4bBI4P071GssKh1qoyMgpRosX5w0SDUd6BC6/t16AZf5hNQL2irMR+5SoYgFMQnO
         sysPa3hcLBlN6HQ+eHVPUQLILcL+IzlIXxickT0lpqsulrzTvqM92wOoyk+6Gxb8DVZk
         q6+jfMqqzxo83YFhWKZsf79wlDH/9K6EHNCvCdXZ+KqD1v3gbhdMytEPW4WwBJ0YTAoW
         NR1V3BR/g4zOnUFSY+umMAs/BXxsxkN9UsOjuB0d1P21VyZLttwm+zt2np76ddV3UB9j
         lLaQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:subject:cc:to:from:date;
        bh=GSOltWYw9Hf4uTD4mbRMQdYszLopcEB/7t+kE3rCQ4Q=;
        b=V5kUilKzHopDQ/7+czfCTe5s4kRhjr0M4dF+JXYB6l/fOg8aJfsZjxaY7TXFxtOxvE
         cNHqlr5dKPp61DfZnIaC5M4RftJObrH4T/SuVJisU0nUmkJRNY2KSmTdv/zshbUJK2NW
         w3kuVl45RbLJdxqJ6Eu6GjyLAm5Z2Jqr/FMtDk52uazsnBY2u4lLQTlbGnmAYeG7NhKI
         HIzqt9hgM2hGID/DU108JIJgrBukTwVyL7U/Bcl3zB2/yPFv9ztsZluQ5g0ZW9ZQDRMz
         cbQ83M9r6gr3KExOr+uh45FSwkxtn80/rkqs+d1wP9c/T+t6KlCFF2giSiM1NVXeoCSw
         7+FA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id o14si4714704pgj.59.2018.11.14.14.51.38;
        Wed, 14 Nov 2018 14:51:52 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727264AbeKOI4e (ORCPT <rfc822;kristofer.rye@gmail.com>
        + 99 others); Thu, 15 Nov 2018 03:56:34 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:45638 "EHLO
        mail.linuxfoundation.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726790AbeKOI4e (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 03:56:34 -0500
Received: from akpm3.svl.corp.google.com (unknown [104.133.8.65])
        by mail.linuxfoundation.org (Postfix) with ESMTPSA id 9B13EA5E;
        Wed, 14 Nov 2018 22:51:20 +0000 (UTC)
Date: Wed, 14 Nov 2018 14:51:19 -0800
From: Andrew Morton <akpm@linux-foundation.org>
To: Davidlohr Bueso <dave@stgolabs.net>
Cc: jbaron@akamai.com, viro@zeniv.linux.org.uk,
        linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        Davidlohr Bueso <dbueso@suse.de>
Subject: Re: [PATCH 2/2] fs/epoll: deal with wait_queue only once
Message-Id: <20181114145119.2e00ce7530d32fc4958c3707@linux-foundation.org>
In-Reply-To: <20181114182532.27981-2-dave@stgolabs.net>
References: <20181114182532.27981-1-dave@stgolabs.net>
        <20181114182532.27981-2-dave@stgolabs.net>
X-Mailer: Sylpheed 3.6.0 (GTK+ 2.24.31; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDHr0sJp+xby41AAA--.2557S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAFW5Wr4DJr4fGFyrtw1rCrg_yoW5WF1DpF
	48GrWayaykJr17WrW3Ja1qgr17Z3sYg39xGr4rGF47CrWDXr95XF48GFn09rsYvF48u398
	Za1vva929a4UJa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW3MxkI7II2jI8v
	z4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14
	v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480
	Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64vIr41lIxAIcVCF04
	k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bB9NsUUUUU=

On Wed, 14 Nov 2018 10:25:32 -0800 Davidlohr Bueso <dave@stgolabs.net> wrote:

> There is no reason why we rearm the waitiqueue upon every
> fetch_events retry (for when events are found yet send_events()
> fails). If nothing else, this saves four lock operations per
> retry, and furthermore reduces the scope of the lock even
> further.
> 
> ..
>
> --- a/fs/eventpoll.c
> +++ b/fs/eventpoll.c
> @@ -1749,6 +1749,7 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
>  {
>  	int res = 0, eavail, timed_out = 0;
>  	u64 slack = 0;
> +	bool waiter = false;
>  	wait_queue_entry_t wait;
>  	ktime_t expires, *to = NULL;
>  
> @@ -1786,6 +1787,15 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
>  	if (eavail)
>  		goto send_events;
>  
> +	if (!waiter) {
> +		waiter = true;
> +		init_waitqueue_entry(&wait, current);
> +
> +		spin_lock_irq(&ep->wq.lock);
> +		__add_wait_queue_exclusive(&ep->wq, &wait);
> +		spin_unlock_irq(&ep->wq.lock);
> +	}
> +
>  	/*
>  	 * Busy poll timed out.  Drop NAPI ID for now, we can add
>  	 * it back in when we have moved a socket with a valid NAPI
> @@ -1798,10 +1808,6 @@ static int ep_poll(struct eventpoll *ep, struct epoll_event __user *events,
>  	 * We need to sleep here, and we will be wake up by
>  	 * ep_poll_callback() when events will become available.
>  	 */
> -	init_waitqueue_entry(&wait, current);
> -	spin_lock_irq(&ep->wq.lock);
> -	__add_wait_queue_exclusive(&ep->wq, &wait);
> -	spin_unlock_irq(&ep->wq.lock);

Why was this moved to before the ep_reset_busy_poll_napi_id() call? 
That movement placed the code ahead of the block comment which serves
to explain its function.


This?  Which also fixes that comment and reflows it to use 80 cols.

--- a/fs/eventpoll.c~fs-epoll-deal-with-wait_queue-only-once-fix
+++ a/fs/eventpoll.c
@@ -1787,15 +1787,6 @@ fetch_events:
 	if (eavail)
 		goto send_events;
 
-	if (!waiter) {
-		waiter = true;
-		init_waitqueue_entry(&wait, current);
-
-		spin_lock_irq(&ep->wq.lock);
-		__add_wait_queue_exclusive(&ep->wq, &wait);
-		spin_unlock_irq(&ep->wq.lock);
-	}
-
 	/*
 	 * Busy poll timed out.  Drop NAPI ID for now, we can add
 	 * it back in when we have moved a socket with a valid NAPI
@@ -1804,10 +1795,18 @@ fetch_events:
 	ep_reset_busy_poll_napi_id(ep);
 
 	/*
-	 * We don't have any available event to return to the caller.
-	 * We need to sleep here, and we will be wake up by
-	 * ep_poll_callback() when events will become available.
+	 * We don't have any available event to return to the caller.  We need
+	 * to sleep here, and we will be woken by ep_poll_callback() when events
+	 * become available.
 	 */
+	if (!waiter) {
+		waiter = true;
+		init_waitqueue_entry(&wait, current);
+
+		spin_lock_irq(&ep->wq.lock);
+		__add_wait_queue_exclusive(&ep->wq, &wait);
+		spin_unlock_irq(&ep->wq.lock);
+	}
 
 	for (;;) {
 		/*
_
