Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 15:24:59 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f0Fu2OpbxaKGAQ--.40127S3;
	Tue, 13 Nov 2018 21:58:07 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHaUVt2OpbWbE4AA--.157S3;
	Tue, 13 Nov 2018 21:58:05 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id w22-v6so6071767plk.0
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 05:58:05 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=cqjzcmFClwwDkRsvfvsvXgP8AMxfqMWQasELXBEvHY8=;
        b=WXHS/rNPTfT8LklCTLgzaw6hv5s9jIjwi85Nkp/PlsDNOsnEc8kHm6PR65qZ+YT308
         raMMHsSyw9v1VG0KE9Jw6AwCVwZNdbE5z1Zy4J5BOMhQv0IWcb6cXz0o2a9107tAXf5j
         +cculH2lesX+QydpKhq36S/9YpPOdqWqxB9GflU9auqHUAeiZZ3lObz9XTc11UTf1ZYB
         +SPDJvIWBj75lPg4Y/cKsrXr2UZTit9lcXsc+yh6mBapTQgbBE7mojBAMyQBR2O5LEVG
         gpGag5lWJO2SZmo1B/P6nvPLU/sl3ot0dpPYFMzVlhN4ZDNubHqF3YU7gb0EQV/eSfah
         lFvw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIS/FTFOnmHmgwQ7AvdjXW+fFUpW+Yd/2P/tBM2YmQH3eD94mh6
	tLLsXm7+xZUeCV1c/s6kBca0Nw+uuyv8KJO8x9wVIbVNr7D96OkhmQ==
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr5342289plp.9.1542117484952;
        Tue, 13 Nov 2018 05:58:04 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4496223pjt;
        Tue, 13 Nov 2018 05:58:03 -0800 (PST)
X-Google-Smtp-Source: AJdET5fy6HeOEcV5nvRYFccO3wx3o+sr304+8xRhg3cMNLGu3gDvgED0XL1MAqqFUHa3VZSHj6CI
X-Received: by 2002:a17:902:3041:: with SMTP id u59-v6mr5329470plb.265.1542117483854;
        Tue, 13 Nov 2018 05:58:03 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542117483; cv=none;
        d=google.com; s=arc-20160816;
        b=seVCt7UqltmlbMmVE5PO42rW93l6UGMhlUI7vo68F8idB+TaBe/UN4NNH2u4yZJzDS
         IJObEy+S5RS8oRMicBw/91+B0ZFVzlNcZhmzmTAnrHBSIKkL0daLEGFIebt50ChAOhKs
         HSnoqqvtDxqwpW3SjxnVLNHmS9E4dqva71hyPR86gASMhPk5ykg2bCNoQA9FfxuoGW3g
         ePHJg9F/H7UTvFGcSXy7LeSwqhAhNbBwQpt4bUbgDtgaFZD7bjiGA8Cfk2hCHfVMJEFH
         kQKoFCRMeqhESrOAwYkJE3akW7rS67Fgcuo1f8rcIc+cfQNe1MzdWh7i1xAsPg54OrT0
         Hg4w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=cqjzcmFClwwDkRsvfvsvXgP8AMxfqMWQasELXBEvHY8=;
        b=gb8fauNWlPj5C9JxcHC0CeEnIgLEiiXrxZOSSbgqUdv380elGrC1n1PKK92hJG2frF
         34404GJdOWkLb0JrYwEkuJuWjGqFr2p47NB4Eav9U+QWAppkxC7fjMTldLzj6omWVC6J
         IrvNYokOgoe4VEZqNDEwONVnV1v9bOhuflLOzhC7Nkt8zNLlwMfPssGxGQOSZ+Wlkfrq
         pDj+Q0H/huQyau1xJqg7UqrTvqEggTxYIdHWjwVhmMODjE81StvjFANFbNyhaDxbi9cB
         2mnIdUMNXPRjYE6Td2LynwWkHzf2nSGZgOJoFRd77NHKqcI04t2s/RFNXUJ9E1syQisn
         QHqQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e1-v6si18371973pfe.44.2018.11.13.05.57.49;
        Tue, 13 Nov 2018 05:58:03 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387599AbeKMXz1 (ORCPT <rfc822;vincent.riesop@gmail.com>
        + 99 others); Tue, 13 Nov 2018 18:55:27 -0500
Received: from foss.arm.com ([217.140.101.70]:56074 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2387513AbeKMXz1 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 18:55:27 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 28C7DA78;
        Tue, 13 Nov 2018 05:57:11 -0800 (PST)
Received: from e103592.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id E8F853F5A0;
        Tue, 13 Nov 2018 05:57:09 -0800 (PST)
Date: Tue, 13 Nov 2018 13:57:07 +0000
From: Dave Martin <Dave.Martin@arm.com>
To: Vincent Whitchurch <vincent.whitchurch@axis.com>
Cc: linux@armlinux.org.uk, jeyu@kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        Vincent Whitchurch <rabinv@axis.com>
Subject: Re: [PATCH v3] ARM: module: Fix function kallsyms on Thumb-2
Message-ID: <20181113135705.GI3505@e103592.cambridge.arm.com>
References: <20181113112745.15945-1-vincent.whitchurch@axis.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181113112745.15945-1-vincent.whitchurch@axis.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHaUVt2OpbWbE4AA--.157S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxuryrZrWxKry3Zr4ruF17ZFb_yoWrAFyrpF
	W5tr45Ar4kJr4DWw17Jw4rZFW093ykXay3W34kK345Crn0gF1Sqa43KryF9Fn8ur1UJFy0
	qF40vry2kayDZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPjb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW5GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUH77aUUUU
	U

On Tue, Nov 13, 2018 at 12:27:45PM +0100, Vincent Whitchurch wrote:
> Thumb-2 functions have the lowest bit set in the symbol value in the
> symtab.  When kallsyms are generated for the vmlinux, the kallsyms are
> generated from the output of nm, and nm clears the lowest bit.
> 
>  $ arm-linux-gnueabihf-readelf -a vmlinux | grep show_interrupts
>   95947: 8015dc89   686 FUNC    GLOBAL DEFAULT    2 show_interrupts
>  $ arm-linux-gnueabihf-nm vmlinux | grep show_interrupts
>  8015dc88 T show_interrupts
>  $ cat /proc/kallsyms | grep show_interrupts
>  8015dc88 T show_interrupts
> 
> However, for modules, the kallsyms uses the values in the symbol table
> without modification, so for functions in modules, the lowest bit is set
> in kallsyms.
> 
>  $ arm-linux-gnueabihf-readelf -a drivers/net/tun.ko | grep tun_get_socket
>     268: 000000e1    44 FUNC    GLOBAL DEFAULT    2 tun_get_socket
>  $ arm-linux-gnueabihf-nm drivers/net/tun.ko | grep tun_get_socket
>  000000e0 T tun_get_socket
>  $ cat /proc/kallsyms | grep tun_get_socket
>  7fcd30e1 t tun_get_socket  [tun]
> 
> Because of this, the offset of the crashing instruction shown in oopses
> is incorrect when the crash is in a module.  For example, given a
> tun_get_socket which starts like this,
> 
>  000000e0 <tun_get_socket>:
>        e0:       b500            push    {lr}
>        e2:       f7ff fffe       bl      0 <__gnu_mcount_nc>
>        e6:       4b08            ldr     r3, [pc, #32]
>        e8:       6942            ldr     r2, [r0, #20]
>        ea:       429a            cmp     r2, r3
>        ec:       d002            beq.n   f4 <tun_get_socket+0x14>
> 
> a crash when tun_get_socket is called with NULL results in:
> 
>  PC is at tun_get_socket+0x7/0x2c [tun]
>  pc : [<7fcdb0e8>]
> 
> which can result in the incorrect line being reported by gdb if this
> symbol+offset is used there.  If the crash is on the first instruction
> of a function, the "PC is at" line would also report the symbol name of
> the preceding function.
> 
> To solve this, introduce a weak module_kallsyms_symbol_value() function
> which arches can override to fix up these symbol values, and implement

(Jumping into this patch without having reviewed previous versions in
detail, so I may have misunderstood some things...)


Anyway:

I prefer this to the previous approach of directly hacking the symbol
values in the module kallsyms table.

> this for Thumb-2.  We need to move elf_type() to st_other so that the
> original value of st_info is preserved.

Are you sure modifying st_other won't break anything?

It's hard to imagine how ELF symbol visibility would be relevant in the
kernel, but some arches put other stuff in st_other.  See alpha,
powerpc, sh for example.  I haven't attempted to understand whether any
of those uses matters here.


Ideally, we wouldn't abuse st_info to store elf_type() in the first
place, but that may be messier to solve.  kallsyms could wrap the
ElfXX_Sym in another struct to store extra metadata for example, but it
would increase runtime memory consumption.

Another option would be wedge STT_FUNC in bit 7 of st_info, say.
Since elf_type() always yields an ASCII char, that bit shouldn't be
used for anything today.  We would of course need to wrap further
access to st_info to mask that bit off as appropriate.

Cheers
---Dave

[...]

> diff --git a/kernel/module.c b/kernel/module.c
> index 49a405891587..5a588cfbb8f8 100644
> --- a/kernel/module.c
> +++ b/kernel/module.c
> @@ -2682,7 +2682,7 @@ static void add_kallsyms(struct module *mod, const struct load_info *info)
>  
>  	/* Set types up while we still have access to sections. */
>  	for (i = 0; i < mod->kallsyms->num_symtab; i++)
> -		mod->kallsyms->symtab[i].st_info
> +		mod->kallsyms->symtab[i].st_other
>  			= elf_type(&mod->kallsyms->symtab[i], info);
>  
>  	/* Now populate the cut down core kallsyms for after init. */
> @@ -3916,6 +3916,11 @@ static const char *symname(struct mod_kallsyms *kallsyms, unsigned int symnum)
>  	return kallsyms->strtab + kallsyms->symtab[symnum].st_name;
>  }
>  
> +unsigned long __weak module_kallsyms_symbol_value(Elf_Sym *sym)
> +{
> +	return sym->st_value;
> +}
> +

Can we make this a header inline that the arch can override?

Otherwise, we add a little overhead to every arch in kallsyms core
loops, just to support the arm Thumb-2 kernel case.

[...]

Cheers
---Dave
