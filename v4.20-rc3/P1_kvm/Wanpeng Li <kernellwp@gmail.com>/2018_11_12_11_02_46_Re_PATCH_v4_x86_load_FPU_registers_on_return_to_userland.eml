Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:36:49 -0000
Received: from icoremail.net (unknown [209.85.210.173])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX_t97ehbyPp5AQ--.36823S3;
	Mon, 12 Nov 2018 11:03:25 +0800 (CST)
Received: from mail-pf1-f173.google.com (unknown [209.85.210.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH5UB47ehb02AvAA--.23034S3;
	Mon, 12 Nov 2018 11:03:20 +0800 (CST)
Received: by mail-pf1-f173.google.com with SMTP id v68-v6so3583733pfk.0
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 19:03:20 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc
         :content-transfer-encoding:sender:precedence:list-id;
        bh=SP6zwFXErSyiAgvsnUdORl+sGM12uLIb4wFFGnFkvfY=;
        b=tPo63JHuOknBvVN7nUwJcLOYAm6tGxY3yRUXEf2gatItz3tk000kNLLYr4nnSbw2Pi
         PgRZ7TCD17ABw4lglTY/CoVODD0XQboEeuexBZ/IlRAZPE7cXnH1BLCbkUVO8DyQ3OMu
         hOF+O4mFh+3SlOZzosEDmoVr8aIyp+I2YP3+SS1I3OP8j6UG51bXskQzQojjFrC2hqhz
         3P+cbeSBMFmfCu6mESuXUNbN0ZB2h/9PqRJ9xPQoT59V1B6oPOmoGrIvGnJm/uifTqAC
         n3USjdITUe2D2rW/V1+NiAP1e5Md3H8XrMb/o8xZeVFpBzixN6idm/yJItFt/44IDl9x
         IGzg==
X-Gm-Message-State: AGRZ1gIDVg0icAaot43Mk0g1KAymcVoN3k1HMqC90hHuFB6gdOjuIrsw
	KLmsju4XTZgXwCTYz2Wel4Nun+B/RqcTRjFct+K5bLXRcdVwhZfbFg==
X-Received: by 2002:a63:cd17:: with SMTP id i23mr15827247pgg.13.1541991800373;
        Sun, 11 Nov 2018 19:03:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2705205pjt;
        Sun, 11 Nov 2018 19:03:19 -0800 (PST)
X-Google-Smtp-Source: AJdET5dMYxc+M5BA07lfyaVP9rxdIgmzJhkLGNjyu5NXh674M1KfrEzCo2YNraD0a5oPuGSoVS6h
X-Received: by 2002:a62:7982:: with SMTP id u124-v6mr18038284pfc.95.1541991799167;
        Sun, 11 Nov 2018 19:03:19 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541991799; cv=none;
        d=google.com; s=arc-20160816;
        b=c8ms7P6qE7Z8Uo/ebpHsC8Pgma/4kjgyLT7rlKKtzQly3Oou2efc0jCKqbGhvOIajf
         p/4LXZGH4bN0TNex9KHfnBc7iH9m6H9tr8ldDX1ugj/lumINgMOOQYsAflT4EDClpcQx
         LzGZyw64zf/NWfcG9gfbagIrBMEw5cOp+pYcg8+gfeXtzKzzdfb4FcB7o3cVzl3E9pVu
         CoqCK5vs8ASk2PVkNvMQV7m+zf1kK+C0M1Nzuyy2cJKOIk1eA10PPFa4a46Vjj1zheNY
         AcNTTGxdipxA0t/KcQ0ouKm8eecE/Gpu0EVzLLiXH+8SQ+1RJ/iDRrQuWv8zycEteRqP
         mftw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:cc:to:subject
         :message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=SP6zwFXErSyiAgvsnUdORl+sGM12uLIb4wFFGnFkvfY=;
        b=enGoSBEJT5N24UlbqCKp0qltTFgG2AZeKZXQ30zpJYssp2ikp7DiBnmLDXQXbQ4pou
         DWvJm2AslhwJ8IwCVwH3XdMSZwkaInkcocUfOZ9UTyeeKPTJYIszjOCmAxLi8VfckjGS
         W80mWG+bxEJnhGVB5auzZOSr4t84zxfeF05SFnw52JvgLC+dAdDVa/MYnrzaZmW4GuJw
         nJVfXmZ1S9I4xF+M9839cnIuzLUCuU8AHMo7vFvYhfbt8ta4RXtb0x2+9anBhAmQqiq2
         Snj7jtnUDiHIPktuyzb1NCnpD+nAYoESdqXz7SrCXWapgkd3yLuhAnYsTH695TTJClu0
         SyXg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=AT00I3nR;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m187-v6si17968699pfm.159.2018.11.11.19.03.03;
        Sun, 11 Nov 2018 19:03:19 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730260AbeKLMyC (ORCPT <rfc822;changseok.bae@gmail.com>
        + 99 others); Mon, 12 Nov 2018 07:54:02 -0500
Received: from mail-oi1-f193.google.com ([209.85.167.193]:35900 "EHLO
        mail-oi1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725928AbeKLMyB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 07:54:01 -0500
Received: by mail-oi1-f193.google.com with SMTP id r127-v6so6029715oie.3;
        Sun, 11 Nov 2018 19:02:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=SP6zwFXErSyiAgvsnUdORl+sGM12uLIb4wFFGnFkvfY=;
        b=AT00I3nRKAPhyqzLdD84cKxnC88ieRyBYN/o+5UlmD9drQt3PWK8DeTSE7ZNSeRiRK
         hWBw9zcPPfe+Q09oFVkbdYKxgvFJHRVf+zRBK0oYJ6pBO01WclWLt+5faS8GBB+mEfK9
         S+j5HDbR98sM/zFp/aP69PHL5WwZSpWRk1rM8fe7UtLyyz12OkadAviZwVeJR8BWibrZ
         YErxgsg00ojnM1UjgiXekftwqdQ9hs9g4gvTfWagGB4+v/n8VGt/DrveW7f/xO/+VQ9P
         42kMfuvztj5L+8welXnQAmlfInmuR+4JcANAMkGUdPkjmTSHFsy7Kmdf7KXxCLSh2ON+
         MUxA==
X-Received: by 2002:aca:5907:: with SMTP id n7-v6mr10810742oib.166.1541991775972;
 Sun, 11 Nov 2018 19:02:55 -0800 (PST)
MIME-Version: 1.0
References: <20181107194858.9380-1-bigeasy@linutronix.de>
In-Reply-To: <20181107194858.9380-1-bigeasy@linutronix.de>
From: Wanpeng Li <kernellwp@gmail.com>
Date: Mon, 12 Nov 2018 11:02:46 +0800
Message-ID: <CANRm+CzcHMM+YJEuowxK5gP71uMSCL_G0iDdaUV09m28p=ptHQ@mail.gmail.com>
Subject: Re: [PATCH v4] x86: load FPU registers on return to userland
To: Sebastian Sewior <bigeasy@linutronix.de>
Cc: LKML <linux-kernel@vger.kernel.org>,
        "the arch/x86 maintainers" <x86@kernel.org>,
        Andy Lutomirski <luto@kernel.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Radim Krcmar <rkrcmar@redhat.com>, kvm <kvm@vger.kernel.org>,
        Jason@zx2c4.com, riel@surriel.com,
        Dave Hansen <dave.hansen@linux.intel.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH5UB47ehb02AvAA--.23034S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxtw4fZw1fKr17JF4fJw4rGrg_yoW7Gw4rpr
	ZxJrn3Grs5W3savrsxAr18uF95uwn7Cw1UK34DWr93A345t34Yqwn7t3929a4DXFWrZrna
	qFWUuw40ya4DAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPjb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r48MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUd75FUUUU
	U

On Thu, 8 Nov 2018 at 03:55, Sebastian Andrzej Siewior
<bigeasy@linutronix.de> wrote:
>
> This is a refurbished series originally started by by Rik van Riel. The
> goal is load the FPU registers on return to userland and not on every
> context switch. By this optimisation we can:
> - avoid loading the registers if the task stays in kernel and does
>   not return to userland
> - make kernel_fpu_begin() cheaper: it only saves the registers on the
>   first invocation. The second invocation does not need save them again.
>

Do you have any performance data?

Regards,
Wanpeng Li

> To access the FPU registers in kernel we need:
> - disable preemption to avoid that the scheduler switches tasks. By
>   doing so it would set TIF_NEED_FPU_LOAD and the FPU registers would be
>   not valid.
> - disable BH because the softirq might use kernel_fpu_begin() and then
>   set TIF_NEED_FPU_LOAD instead loading the FPU registers on completion.
>
> v3=E2=80=A6v4:
> It has been suggested to remove the `initialized' member of the struct
> fpu because it should not required be needed with lazy-FPU-restore and
> would make the review easier. This is the first part of the series, the
> second is basically the rebase of the v3 queue. As a result, the
> diffstat became negative (which wasn't the case in previous version) :)
> I tried to incorporate all the review comments that came up, some of
> them were "outdated" after the removal of the `initialized' member. I'm
> sorry should I missed any.
>
> v1=E2=80=A6v3:
> v2 was never posted. I followed the idea to completely decouple PKRU
> from xstate. This didn't quite work and made a few things complicated.
> One obvious required fixup is copy_fpstate_to_sigframe() where the PKRU
> state needs to be fiddled into xstate. This required another
> xfeatures_mask so that the sanity checks were performed and
> xstate_offsets would be computed. Additionally ptrace also reads/sets
> xstate in order to get/set the register and PKRU is one of them. So this
> would need some fiddle, too.
> In v3 I dropped that decouple idea. I also learned that the wrpkru
> instruction is not privileged and so caching it in kernel does not work.
> Instead I keep PKRU in xstate area and load it at context switch time
> while the remaining registers are deferred (until return to userland).
> The offset of PKRU within xstate is enumerated at boot time so why not
> use it.
>
> Rik van Riel (5):
>   x86/fpu: Add (__)make_fpregs_active helpers
>   x86/fpu: Eager switch PKRU state
>   x86/fpu: Always store the registers in copy_fpstate_to_sigframe()
>   x86/fpu: Prepare copy_fpstate_to_sigframe() for TIF_NEED_FPU_LOAD
>   x86/fpu: Defer FPU state load until return to userspace
>
> Sebastian Andrzej Siewior (18):
>   x86/fpu: Use ULL for shift in xfeature_uncompacted_offset()
>   x86/fpu: Remove fpu->initialized usage in __fpu__restore_sig()
>   x86/fpu: Remove fpu__restore()
>   x86/entry/32: Remove asm/math_emu.h include
>   x86/fpu: Remove preempt_disable() in fpu__clear()
>   x86/fpu: Always init the `state' in fpu__clear()
>   x86/fpu: Remove fpu->initialized usage in copy_fpstate_to_sigframe()
>   x86/fpu: Remove fpu->initialized
>   x86/fpu: Remove user_fpu_begin()
>   x86/entry: Remove _TIF_ALLWORK_MASK
>   x86/fpu: Make __raw_xsave_addr() use feature number instead of mask
>   x86/fpu: Make get_xsave_field_ptr() and get_xsave_addr() use feature
>     number instead of mask
>   x86/pkeys: Make init_pkru_value static
>   x86/fpu: Only write PKRU if it is different from current
>   x86/pkeys: Don't check if PKRU is zero before writting it
>   x86/entry: Add TIF_NEED_FPU_LOAD
>   x86/fpu: Update xstate's PKRU value on write_pkru()
>   x86/fpu: Don't restore the FPU state directly from userland in
>     __fpu__restore_sig()
>
>  Documentation/preempt-locking.txt    |   1 -
>  arch/x86/entry/common.c              |   8 ++
>  arch/x86/ia32/ia32_signal.c          |  17 +--
>  arch/x86/include/asm/fpu/api.h       |  25 ++++
>  arch/x86/include/asm/fpu/internal.h  | 149 ++++++----------------
>  arch/x86/include/asm/fpu/signal.h    |   2 +-
>  arch/x86/include/asm/fpu/types.h     |   9 --
>  arch/x86/include/asm/fpu/xstate.h    |   6 +-
>  arch/x86/include/asm/pgtable.h       |  19 ++-
>  arch/x86/include/asm/special_insns.h |  13 +-
>  arch/x86/include/asm/thread_info.h   |  10 +-
>  arch/x86/include/asm/trace/fpu.h     |   8 +-
>  arch/x86/kernel/fpu/core.c           | 181 +++++++++++++--------------
>  arch/x86/kernel/fpu/init.c           |   2 -
>  arch/x86/kernel/fpu/regset.c         |  24 +---
>  arch/x86/kernel/fpu/signal.c         | 133 +++++++++-----------
>  arch/x86/kernel/fpu/xstate.c         |  45 ++++---
>  arch/x86/kernel/process.c            |   2 +-
>  arch/x86/kernel/process_32.c         |  14 +--
>  arch/x86/kernel/process_64.c         |  11 +-
>  arch/x86/kernel/signal.c             |  17 ++-
>  arch/x86/kernel/traps.c              |   2 +-
>  arch/x86/kvm/x86.c                   |  47 ++++---
>  arch/x86/math-emu/fpu_entry.c        |   3 -
>  arch/x86/mm/mpx.c                    |   6 +-
>  arch/x86/mm/pkeys.c                  |  15 +--
>  26 files changed, 343 insertions(+), 426 deletions(-)
>
>  git://git.kernel.org/pub/scm/linux/kernel/git/bigeasy/staging.git x86_fp=
u_rtu_v4
>
> Sebastian
>
