Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 19 Nov 2018 00:46:47 -0000
Received: from icoremail.net (unknown [209.85.210.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX++YGfFbpaavAQ--.52770S3;
	Sun, 18 Nov 2018 15:49:44 +0800 (CST)
Received: from mail-pf1-f169.google.com (unknown [209.85.210.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXP0uUGfFb28xQAA--.11988S3;
	Sun, 18 Nov 2018 15:49:41 +0800 (CST)
Received: by mail-pf1-f169.google.com with SMTP id s9-v6so13335662pfm.13
        for <xuliker@zju.edu.cn>; Sat, 17 Nov 2018 23:49:41 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:organization:user-agent:sender
         :precedence:list-id;
        bh=MYA7R8giok82S7NWvBhyFNUGD2TL+6GB1tBNqmvb1eM=;
        b=Hi01pJPgcFgz4iHjEU0F+L6pK1bnnZhxihaP451C6SLDHjKYoWz7mtlDM/t+CSxgC7
         yGWXnm3FxZU7gvp0u84njZyowZTUOrtvvAxz5I8pORkz6Y2NVWv8v42YpbKtLTJBrzcw
         6i6l+8e+IK1ho3b2KouZItc164AOic7kBzqEkEVxVm1dHpvQiYqssWQPxjmIxcjehl6n
         XgWhLWmXMPuWFt5YH95Y0jUiTARjgPdmHkzrCcoMRl3YPqXQYa+1S+9K3r/c2EVO1dbr
         poNBXM8ZbbQPs3Mt2vn94DaQcrJqxI73KGTareThzNaVlrfSZ7Jnn8TuzrKTZGq5EoAZ
         vi8A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gIzzTVf+W+tgQpzAmtacryYDVcDKiH5QYZwPsr+Y+rbR/pohDNR
	sdoXMXCIDRjjFSyKLOmNowyA1V89Cx1DbVvnbRx5xABpip/F3xM=
X-Received: by 2002:a63:1e17:: with SMTP id e23mr15765083pge.130.1542527380627;
        Sat, 17 Nov 2018 23:49:40 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1291750pju;
        Sat, 17 Nov 2018 23:49:39 -0800 (PST)
X-Google-Smtp-Source: AJdET5fJodEULwMB07Gef3aJhOKuVuSp/wmKgixbIpI2E6aVpdgni1RdSXXHRSX25M3vF8i4x/wH
X-Received: by 2002:a17:902:112b:: with SMTP id d40-v6mr17702907pla.48.1542527379713;
        Sat, 17 Nov 2018 23:49:39 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542527379; cv=none;
        d=google.com; s=arc-20160816;
        b=BbBx0j4z0bXNF3cjzvHTP37gFGUNeBUVHNlZpzBrepNsIqbpGPwyk+ve49JgCrCGHL
         o96XuINMsyajomcMPrJ8bcMjz7XLUFBhZvbS/IvpDMeq9ew9rc+LyHBj3xBnieio+yzu
         p32KKid4/AoyfUd5IaiOiFjyclpMntyqnxDbre3aJ9xPyCr7E7txEVA1QZKcN35lryza
         hylP0igrlcb1ytEvDiTY2LMlSZCq8LBLAwR1y/bahmq0IT236D6JfG31o5xCr1ZeIyuj
         WryBvtSEpiOz67PuguVO09wmVW5x8ud9swVxF43AcuscLQ/shb09NsHkc5Pza1QqtixC
         I0ew==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:organization:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=MYA7R8giok82S7NWvBhyFNUGD2TL+6GB1tBNqmvb1eM=;
        b=so4E5R5ePWT84qN3tkayEVfjFv/V82jg7Ied5DBwdfXVpavjslkEC/vrc+X3pQIfMV
         gdXnX++CB2qEtJUzs3ViXTPsHVu1VWfAoO2jIa9KU0iliicF3rPcxvUGkKhD0yc+bQQu
         RStOqTUkMIEWHSxwZYo8Oizzp0rqUcO+Vtq8DOvYtnmoDv6iVjMECoPtzr40ncbqT/6E
         5NoORUeGQAQRvCw9PcBwG3KyyaU3D/+kNBfj+8tFfqPI3GJvk/Trl42LxP7WmxZs4ejn
         09MhQMx9C4Ml4vdrGJNbbpuot5Nt5yHMujS0TLFS8wtsGWpIjuFsK3hTgZzFhT4/KefN
         eTvg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 1-v6si38336300pln.299.2018.11.17.23.49.24;
        Sat, 17 Nov 2018 23:49:39 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727207AbeKRSIL (ORCPT <rfc822;javier.barrio.mart@gmail.com>
        + 99 others); Sun, 18 Nov 2018 13:08:11 -0500
Received: from mga05.intel.com ([192.55.52.43]:23819 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725915AbeKRSIL (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 18 Nov 2018 13:08:11 -0500
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Nov 2018 23:48:39 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,247,1539673200"; 
   d="scan'208";a="107221212"
Received: from kaczmarx-mobl.ger.corp.intel.com (HELO localhost) ([10.249.254.89])
  by fmsmga004.fm.intel.com with ESMTP; 17 Nov 2018 23:48:35 -0800
Date: Sun, 18 Nov 2018 09:48:32 +0200
From: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
To: Tadeusz Struk <tadeusz.struk@intel.com>
Cc: jgg@ziepe.ca, linux-integrity@vger.kernel.org,
        linux-security-module@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v4 2/2] tpm: add support for partial reads
Message-ID: <20181118074832.GG5897@linux.intel.com>
References: <154239067364.2880.13752725056462237016.stgit@tstruk-mobl1.jf.intel.com>
 <154239071144.2924.17574189056250189697.stgit@tstruk-mobl1.jf.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <154239071144.2924.17574189056250189697.stgit@tstruk-mobl1.jf.intel.com>
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXP0uUGfFb28xQAA--.11988S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XryUGrWDWFWkAFW5Kry3urg_yoW7WFy3pa
	yYk3s3CFyDJr42krn7Ja1DZw43W3Z3WFyUKFy7Gr9xZr9xu3WYgw18KFy3uFy7Zr1UGrWf
	Ca95ur1xWFyDZaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Gr0_Xr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4xMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY
	6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUeXy
	CJUUUUU==

On Fri, Nov 16, 2018 at 09:51:51AM -0800, Tadeusz Struk wrote:
> Currently to read a response from the TPM device an application needs
> provide big enough buffer for the whole response and read it in one go.
> The application doesn't know how big the response it beforehand so it
> always needs to maintain a 4K buffer and read the max (4K).
> In case if the user of the TSS library doesn't provide big enough
> buffer the TCTI spec says that the library should set the required
> size and return TSS2_TCTI_RC_INSUFFICIENT_BUFFER error code so that the
> application could allocate a bigger buffer and call receive again.
> To make it possible in the TSS library, this requires being able to do
> partial reads from the driver.
> The library would read the 10 bytes header first to get the actual size
> of the response from the header, and then read the rest of the response.
> 
> This patch adds support for partial reads, i.e. the user can read the
> response in one or multiple reads, until the whole response is consumed.
> The user can also read only part of the response and ignore
> the rest by issuing a new write to send a new command.
> 
> Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
> ---
> The usecase is implemented in this TSS commit:
> https://github.com/tpm2-software/tpm2-tss/commit/ce982f67a67dc08e24683d30b05800648d8a264c
> 
> Changes in v4:
>  - Use unsigned type for response_pending as it will never be negative.
>  - Rebased on top of name change data_pending to transmit_result patch.
> 
> Changes in v3:
>  - Remove link to usecase implemented in TSS out of the commit message.
>  - Update the conddition in tpm_common_poll() to take into account
>    the partial_data also.
> 
> Changes in v2:
>  - Allow writes after only partial response is consumed to maintain
>    backwords compatibility.
> ---
>  drivers/char/tpm/tpm-dev-common.c |   41 ++++++++++++++++++++++++++++---------
>  drivers/char/tpm/tpm-dev.h        |    2 ++
>  2 files changed, 33 insertions(+), 10 deletions(-)
> 
> diff --git a/drivers/char/tpm/tpm-dev-common.c b/drivers/char/tpm/tpm-dev-common.c
> index 67a70e2fde7f..0544733e1b6d 100644
> --- a/drivers/char/tpm/tpm-dev-common.c
> +++ b/drivers/char/tpm/tpm-dev-common.c
> @@ -64,6 +64,7 @@ static void tpm_timeout_work(struct work_struct *work)
>  
>  	mutex_lock(&priv->buffer_mutex);
>  	priv->transmit_result = 0;
> +	priv->partial_data = 0;
>  	memset(priv->data_buffer, 0, sizeof(priv->data_buffer));
>  	mutex_unlock(&priv->buffer_mutex);
>  	wake_up_interruptible(&priv->async_wait);
> @@ -90,22 +91,39 @@ ssize_t tpm_common_read(struct file *file, char __user *buf,
>  	ssize_t ret_size = 0;
>  	int rc;
>  
> -	del_singleshot_timer_sync(&priv->user_read_timer);
> -	flush_work(&priv->timeout_work);
>  	mutex_lock(&priv->buffer_mutex);
> +	if (priv->transmit_result || priv->partial_data) {
> +		if (*off == 0)
> +			priv->partial_data = priv->transmit_result;
> +
> +		ret_size = min_t(ssize_t, size, priv->partial_data);
> +		if (ret_size <= 0) {

When ret_size < 0? Shouldn't this be just "if (!ret_size)"?

> +			ret_size = 0;
> +			priv->transmit_result = 0;
> +			priv->partial_data = 0;
> +			goto out;
> +		}
>  
> -	if (priv->transmit_result) {
> -		ret_size = min_t(ssize_t, size, priv->transmit_result);
> -		if (ret_size > 0) {
> -			rc = copy_to_user(buf, priv->data_buffer, ret_size);
> -			memset(priv->data_buffer, 0, priv->transmit_result);
> -			if (rc)
> -				ret_size = -EFAULT;
> +		rc = copy_to_user(buf, priv->data_buffer + *off, ret_size);
> +		if (rc) {
> +			memset(priv->data_buffer, 0, TPM_BUFSIZE);
> +			priv->partial_data = 0;
> +			ret_size = -EFAULT;
> +		} else {
> +			memset(priv->data_buffer + *off, 0, ret_size);
> +			priv->partial_data -= ret_size;
> +			*off += ret_size;
>  		}
>  
>  		priv->transmit_result = 0;
>  	}
>  
> +out:
> +	if (!priv->partial_data) {
> +		*off = 0;
> +		del_singleshot_timer_sync(&priv->user_read_timer);
> +		flush_work(&priv->timeout_work);
> +	}
>  	mutex_unlock(&priv->buffer_mutex);
>  	return ret_size;
>  }
> @@ -150,6 +168,9 @@ ssize_t tpm_common_write(struct file *file, const char __user *buf,
>  		goto out;
>  	}
>  
> +	priv->partial_data = 0;
> +	*off = 0;
> +
>  	/*
>  	 * If in nonblocking mode schedule an async job to send
>  	 * the command return the size.
> @@ -184,7 +205,7 @@ __poll_t tpm_common_poll(struct file *file, poll_table *wait)
>  
>  	poll_wait(file, &priv->async_wait, wait);
>  
> -	if (priv->transmit_result)
> +	if (priv->transmit_result || priv->partial_data)
>  		mask = EPOLLIN | EPOLLRDNORM;
>  	else
>  		mask = EPOLLOUT | EPOLLWRNORM;
> diff --git a/drivers/char/tpm/tpm-dev.h b/drivers/char/tpm/tpm-dev.h
> index 3ff1dc9f3d75..714a4419d392 100644
> --- a/drivers/char/tpm/tpm-dev.h
> +++ b/drivers/char/tpm/tpm-dev.h
> @@ -11,6 +11,8 @@ struct file_priv {
>  
>  	/* Holds the resul of the last successful call to tpm_transmit() */
>  	size_t transmit_result;
> +	/* Holds the count how much of the response is still unread */
> +	size_t partial_data;

I'm otherwise happy how this look like but why call it partial_data.
You cannot really tell from the name anything about its contents as
data is very abstract term.

BTW, why you need the new variable anyway and not just decrease the
variable where the length is original stored?

/Jarkko
