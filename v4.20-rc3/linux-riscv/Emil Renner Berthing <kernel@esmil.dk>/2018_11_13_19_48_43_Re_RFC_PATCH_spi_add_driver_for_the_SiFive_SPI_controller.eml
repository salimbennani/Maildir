Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:36:39 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgCn39zHKutbz4aIAQ--.40808S3;
	Wed, 14 Nov 2018 03:49:28 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDXvEjDKutbygg6AA--.340S3;
	Wed, 14 Nov 2018 03:49:24 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id 17so5923676pgg.1
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 11:49:23 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:sender:precedence:list-id;
        bh=FTYl1YEZsWlo48zpcSGeS0opwdJMNJLCJODJ4Tvr1/E=;
        b=LPrupPxFOyuIcYPILTYu5sS5vMSG9m8Q1J6G7PZsgx7Ai3Afn4bbOLxwA1PHoo/iaN
         c8DtRMH17AB+qxzAz2zL7kinyY9/4LH1i2L4Wc81/llfs1N6M+HLOQOCciVdSUmsQ7wt
         Tr9HNZcewHGuEMEgr+nS/J7rhqDwGZzI6H4fH9TK50ycUGvulpBgllp1y2PcJeA2mpyM
         CnZ41QU7AO33xO8ywYMhBtUautfzb+cJr/asC9F+TNmLuGktIBXCT6sLoqXFkENKjjZv
         bQA/CEsFhjzFUkP4YBwbGJekvbI7/gExKU2vQVd7/eAwGr3giAvJIaRQ6opWPA4paBp6
         LT3A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKl/zLblo7uaeu6YR69jpbOZTNqUwEDjU58dZHtsLCSPw+HcPtB
	auPXVBwRo3Z9bSCN+6f2w60WHS+XaZWXvVZSsRNspmk1Phdj+6I/2A==
X-Received: by 2002:a63:2c0e:: with SMTP id s14mr6086450pgs.132.1542138562717;
        Tue, 13 Nov 2018 11:49:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4912707pjt;
        Tue, 13 Nov 2018 11:49:21 -0800 (PST)
X-Google-Smtp-Source: AJdET5fQqi7y4ns1DetWBRFvij95xP5JvzUJ35OBuNoOxNMpjwJJ+zFT5J+CxMF6o6hrQYVu45xN
X-Received: by 2002:a17:902:503:: with SMTP id 3-v6mr6549470plf.88.1542138561194;
        Tue, 13 Nov 2018 11:49:21 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542138561; cv=none;
        d=google.com; s=arc-20160816;
        b=h5EkbO7pkBrpVBozqrgUvEH6Z9IIZkD78I0I2MaR1Xv+8MGddMbQMZHIvfpelhXvwl
         M9+sxJ5/uHgq/1c7ZCHTMooAyTW9KcURrKOMrgtfd2HtYkFdHG0iys/n82MQbBUiSZkS
         ue2D6oKuHYsABQFzI52uIxaOh2Q4u29LYXmTBgdPlK0PX01da0lS0SzuyOWeqp82gJ9X
         MFriV6jYQyw1j7/ww/pBtyiZx1JuwRwi5TPtrhLWqBh8YeZW5XqKE+iujeta43RpH3XP
         U0DFe3x/tskBv7VIBDHF2hSWNz1LDiASnPN3kKw8ktwqUFVskkUlYeAlCqGZlkNaEi6y
         sJFQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version;
        bh=FTYl1YEZsWlo48zpcSGeS0opwdJMNJLCJODJ4Tvr1/E=;
        b=WhwPO/EUmrXW2nKDEAW4G6kQtyBejIlmV7NPpW7aMik3rRCA8CUt+5seBJaBAd6ECI
         Zxn7NYc0JPMmZqKX6HXxCUCElozgE/oi/6HuM1o3mA7XJYUGV94JBwiBg/OyZ5yzwlA2
         QzmwTHerlJUdkKTPKTBh+jL+YcICmMOc2vzp0YzxRyFn3vcL7YxGZqm4/ODcZORFQh8Q
         iwjwFlSFcTMov0ggwwa53bMKGdMASXc9iIUJgLgFgH8dwcUMicH/kpYHwccS2riuHq0g
         jR87kdb87aeHECK7EW/UqQs79Ce4qD+rtIZ4ceRAFyIB5WGHjCFjr+vQ1BJIVZY1yolY
         J0JQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b11-v6si22687084plk.406.2018.11.13.11.49.05;
        Tue, 13 Nov 2018 11:49:21 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728718AbeKNFsc (ORCPT <rfc822;ecarlos1024@gmail.com>
        + 99 others); Wed, 14 Nov 2018 00:48:32 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:32967 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725748AbeKNFsc (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 00:48:32 -0500
Received: by mail-pf1-f194.google.com with SMTP id v68-v6so6603778pfk.0;
        Tue, 13 Nov 2018 11:48:55 -0800 (PST)
X-Received: by 2002:a62:de06:: with SMTP id h6-v6mr6554715pfg.36.1542138534634;
 Tue, 13 Nov 2018 11:48:54 -0800 (PST)
MIME-Version: 1.0
References: <20181112142736.15009-1-kernel@esmil.dk> <20181113183527.GG2089@sirena.org.uk>
In-Reply-To: <20181113183527.GG2089@sirena.org.uk>
From: Emil Renner Berthing <kernel@esmil.dk>
Date: Tue, 13 Nov 2018 20:48:43 +0100
Message-ID: <CANBLGcxF-WgsBVFHf4jGRR+Ox2vz=ewzhwGP1CZX-R5HpDAVBg@mail.gmail.com>
Subject: Re: [RFC PATCH] spi: add driver for the SiFive SPI controller
To: Mark Brown <broonie@kernel.org>
Cc: linux-spi@vger.kernel.org, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Palmer Dabbelt <palmer@sifive.com>, devicetree@vger.kernel.org,
        linux-riscv@lists.infradead.org,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDXvEjDKutbygg6AA--.340S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCr1xtF15KF48ur17tw4DCFg_yoWrWw4xpF
	4UCr4YyFWkGr1vqa4xZF4UZryFkrsaqFyjkFyrX348Kr909ryrXF1rKr4rKas7CFykWa12
	vF4jv3srCFs0vFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VWrMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY
	6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUdZ2-
	DUUUU

Hi Mark,
On Tue, 13 Nov 2018 at 19:35, Mark Brown <broonie@kernel.org> wrote:
> On Mon, Nov 12, 2018 at 03:27:36PM +0100, Emil Renner Berthing wrote:
>
> > I know the discussions about the sifive devicetree compatible
> > strings haven't come to a conclusion, so I'm sending this as
> > an RFC to get some feedback on the rest of the code.
>
> I've not seen any of these discussions or earlier versions of this
> driver so I've no idea what's going on here :(

No, sorry. This has been discussed on linux-riscv for other drivers
like the uart. See my last answer.

> > +Optional properties:
> > +- sifive,fifo-depth          : Depth of hardware queues; defaults to 8
> > +- sifive,max-bits-per-word   : Maximum bits per word; defaults to 8
> > +
>
> If the hardware isn't fixed yet making these enumerable from the
> hardware would be good...

Agreed, but unfortunately this is already in the FU540-C000 chip on
the HiFive Unleashed board sold by SiFive.

> > @@ -0,0 +1,442 @@
> > +// SPDX-License-Identifier: GPL-2.0
> > +/*
> > + * SiFive SPI controller driver (master mode only)
> > + *
>
> Please make the entire comment a C++ one to make this look more
> intentinal.

Will do.

> > +/* for consistency we need this symbol */
> > +#ifdef REG_FMT
> > +#undef REG_FMT
> > +#endif
>
> We do?  For consistency with what?

Below all the register offsets are defined as
REG_<register name>. This is is a pattern I
copied from other drivers, but here we have a
register called "fmt" - hence REG_FMT.
If you have a better pattern that doesn't clash
with REG_FMT please let me know.

> > +static void sifive_spi_init(struct sifive_spi *spi)
> > +{
>
> > +     /* Set CS/SCK Delays and Inactive Time to defaults */
> > +
> > +     /* Exit specialized memory-mapped SPI flash mode */
>
> ...or not?

Right. Will add that or just delete the comment.

> > +     /* Set frame format */
> > +     cr = FMT_LEN(t->bits_per_word);
> > +     switch (mode) {
> > +     case SPI_NBITS_QUAD:
> > +             cr |= FMT_PROTO_QUAD;
> > +             break;
>
> Some namespacing on the driver #defines would be a bit safer against the
> possibility of collision with future changes in headers.

Right.

> > +static void sifive_spi_wait(struct sifive_spi *spi, u32 bit, int poll)
> > +{
> > +     if (poll) {
> > +             u32 cr;
> > +             do cr = sifive_spi_read(spi, REG_IP);
> > +             while (!(cr & bit));
>
> Please add some braces, indentation or something to make it more clear
> that the read is part of a do/while loop - right now it's not
> immediately obvious that this is correct.

Good point. Will do.

> > +static int sifive_spi_transfer_one(struct spi_master *master,
> > +             struct spi_device *device, struct spi_transfer *t)
> > +{
> > +     struct sifive_spi *spi = spi_master_get_devdata(master);
> > +     int poll = sifive_spi_prep_transfer(spi, device, t);
> > +
> > +     sifive_spi_execute(spi, t, poll);
> > +
>
> Why not just inline the execute function here?  It's the only caller
> AFAICT.

Yeah, it is. Will do.

> > +static void sifive_spi_set_cs(struct spi_device *device, bool is_high)
> > +{
> > +     struct sifive_spi *spi = spi_master_get_devdata(device->master);
> > +
> > +     /* Reverse polarity is handled by SCMR/CPOL. Not inverted CS. */
> > +     if (device->mode & SPI_CS_HIGH)
> > +             is_high = !is_high;
>
> spi_set_cs() will handle CS_HIGH for you.
>
> > +     master->bits_per_word_mask = SPI_BPW_MASK(8);
>
> I thought the device supported other bits per word values?

It does, but the driver doesn't yet. When bits per word is < 8
we need to shift the bits in each byte to be "left-aligned"
(unless SPI_LSB_FIRST is set).

> > +     /* If mmc_spi sees a dma_mask, it starts using dma mapped buffers.
> > +      * Probably it should rely on the SPI core auto mapping instead.
> > +      */
> > +     pdev->dev.dma_mask = NULL;
>
> If this is a problem please fix it in the MMC core, don't bodge it like
> this.

Gotcha. Will remove this.

> > +static const struct of_device_id sifive_spi_of_match[] = {
> > +     { .compatible = "sifive,spi0", },
> > +     {}
> > +};
> > +MODULE_DEVICE_TABLE(of, sifive_spi_of_match);
>
> spi0 is a *weird* compatible name.

Exactly. Hence the discussion about the compatible strings.
Once this discussion comes to a conclusion I'll update this.

Thank you for the review!
/Emil
