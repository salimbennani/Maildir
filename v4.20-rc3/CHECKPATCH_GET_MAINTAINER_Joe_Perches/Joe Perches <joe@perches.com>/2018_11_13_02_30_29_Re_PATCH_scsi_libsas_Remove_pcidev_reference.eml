Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 00:33:54 -0000
Received: from icoremail.net (unknown [209.85.214.172])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3_j8xulbZnJ_AQ--.38559S3;
	Tue, 13 Nov 2018 02:31:25 +0800 (CST)
Received: from mail-pl1-f172.google.com (unknown [209.85.214.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD32UX6xulbB1kzAA--.7545S3;
	Tue, 13 Nov 2018 02:31:22 +0800 (CST)
Received: by mail-pl1-f172.google.com with SMTP id b5-v6so4726646pla.6
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 10:31:22 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :message-id:subject:from:to:cc:date:in-reply-to:references
         :user-agent:mime-version:content-transfer-encoding:sender:precedence
         :list-id;
        bh=5vjkUojRVG6H6hj0LspTtfhvu6U+Yj+bJAhDTVdLHuw=;
        b=WQO0CCPN5NhV3miUvBjM0X6PmB68jSF5SziFFT4/dh1p/71DnTzUwZu8kmo22fqZcf
         I1xvxo1B5yiXfvsFMy+vgHt/TO9y7mbJhrA4Oefib+aANsSx3rdwIoVig1wqPo46R/Cd
         /JdGJ10ESWIbYk2CmbXiZEVcoGWapiaeS2g7pkCBf801CmKEYEylWst8NFEE0Hkfcfw1
         /hUH6Ra1PF/+0EtnoRGp4PlQY1YGnuV4ldJR4NEQb9MtIz2xtm1z3WZVCWiU35IVH23s
         0qj6MUBrjIX1Zgnc3rtY02IxlrDkgyO5AT36kx0NIbpEmO6we44NxK6NiUBq1697x80h
         UzMQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJQYTZ//OsHcLtXhTen0JsgET8A1sqvMoU8hsWmYUSL1ef4Ffy2
	/jfBHJC720S1VOBM8HbQ0mMej2Jt6MmeG2sFnGTbtYb6/ENe4qTdtw==
X-Received: by 2002:a17:902:887:: with SMTP id 7-v6mr1958468pll.283.1542047482077;
        Mon, 12 Nov 2018 10:31:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp3530855pjt;
        Mon, 12 Nov 2018 10:31:21 -0800 (PST)
X-Google-Smtp-Source: AJdET5em+pk/xGkQAwYaR3mYqons9hca7BLZ2Y2zXcFGruZ7okpxPcBYgR73a2FnjS42MBB9pieF
X-Received: by 2002:a17:902:6ac5:: with SMTP id i5-v6mr1938550plt.2.1542047481067;
        Mon, 12 Nov 2018 10:31:21 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542047481; cv=none;
        d=google.com; s=arc-20160816;
        b=bi43lnTl0lRR4nlTW6KnOZFUzQ9sPo+y61rFrdAFrxrrRalF6FdX83ydH1/HqVCcxj
         m2nGQbVkMV0cWYYwc7ZmpGbgKj0f/GiyHPZRMTVkuJYqTYclzYeoFZRguFi6542aK8Mc
         bXj3gIcAVAA9vFHpIxPO2MYxcD8vHPc8kvjm/YPM058ko9HvJssQJkFaRS3mhFFDqGjC
         5p6f0twCM8CNJbqP661CNcX9Hc8hYoCX2nmhrkQaGRoMoLJdJLN6dp1gTiuN0nieaGwb
         bGPBdpeXczC+g84mW2A60PKPEwyagbxsQlbG0hwwKhV38e4YIHylDDZ6xpgA9u1y/LM/
         MmhA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:date:cc:to:from:subject
         :message-id;
        bh=5vjkUojRVG6H6hj0LspTtfhvu6U+Yj+bJAhDTVdLHuw=;
        b=bMKBCgTpLyWD7Wq9gwUmgxajxdEdHrDK5Y5OQMGZ4Uv8izELlCHjkXaTA3TIdaTW6J
         YRtKNKvR+h5r3jZkt6M87PNvEAzBVB2OUtxo7psE54YaKtLKijG9HXS10aP3KI3NZuCO
         Lb2l/tgN/mu9FYDQTVTN3IbT6C5ARs40V0K/Jz0EW0eGqBNfXzyt4jbDUvlZPBmwbqX3
         cO5e7KikFjo4Sib6r9iww4WM/0POZSazC+pHwATS7MkiAi88HvslM1VMi9XQfDN2HF5T
         yRNpcMIZrMwyTqlDeSuYEgme4Cw5pvzl5C77B97EfxaANNb37Vvo36dtX6aqy4TQ+ZRS
         Psiw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id y16-v6si16179842pgk.479.2018.11.12.10.31.00;
        Mon, 12 Nov 2018 10:31:21 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730339AbeKMEZB (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 23:25:01 -0500
Received: from smtprelay0053.hostedemail.com ([216.40.44.53]:39656 "EHLO
        smtprelay.hostedemail.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1727354AbeKMEY6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 23:24:58 -0500
Received: from filter.hostedemail.com (clb03-v110.bra.tucows.net [216.40.38.60])
        by smtprelay04.hostedemail.com (Postfix) with ESMTP id BD87E180A8142;
        Mon, 12 Nov 2018 18:30:32 +0000 (UTC)
X-Session-Marker: 6A6F6540706572636865732E636F6D
X-Spam-Summary: 2,0,0,,d41d8cd98f00b204,joe@perches.com,:::::::::::,RULES_HIT:1:2:41:69:355:379:599:960:966:968:973:988:989:1260:1277:1311:1313:1314:1345:1359:1437:1515:1516:1518:1593:1594:1605:1730:1747:1777:1792:2196:2199:2393:2559:2562:2691:2828:2902:3138:3139:3140:3141:3142:3622:3865:3867:3868:3871:3872:3874:4051:4250:4321:4385:4605:5007:6117:6119:7875:7903:9040:10004:10394:10848:11026:11232:11473:11658:11914:12043:12296:12438:12555:12660:12663:12683:12740:12760:12895:12986:13160:13229:13439:13972:14659:21080:21324:21433:21451:21627:21740:21789:30045:30054:30070:30076:30080:30083:30091,0,RBL:47.151.153.53:@perches.com:.lbl8.mailshell.net-62.8.0.100 64.201.201.201,CacheIP:none,Bayesian:0.5,0.5,0.5,Netcheck:none,DomainCache:0,MSF:not bulk,SPF:fn,MSBL:0,DNSBL:neutral,Custom_rules:0:0:0,LFtime:32,LUA_SUMMARY:none
X-HE-Tag: clam75_3ea21afce1b12
X-Filterd-Recvd-Size: 10008
Received: from XPS-9350.home (unknown [47.151.153.53])
        (Authenticated sender: joe@perches.com)
        by omf16.hostedemail.com (Postfix) with ESMTPA;
        Mon, 12 Nov 2018 18:30:30 +0000 (UTC)
Message-ID: <31d224e8c4b9bcebc3657c17fa50302f7da90e64.camel@perches.com>
Subject: Re: [PATCH] scsi: libsas: Remove pcidev reference
From: Joe Perches <joe@perches.com>
To: John Garry <john.garry@huawei.com>, jejb@linux.vnet.ibm.com,
        martin.petersen@oracle.com
Cc: linux-scsi@vger.kernel.org, linux-kernel@vger.kernel.org,
        linuxarm@huawei.com
Date: Mon, 12 Nov 2018 10:30:29 -0800
In-Reply-To: <3b62b0ad-53ba-37c2-817c-591d94eed838@huawei.com>
References: <1542043689-214071-1-git-send-email-john.garry@huawei.com>
         <584e7b4fcd6f95fe0c581f6f9472852685c754d1.camel@perches.com>
         <310504a2-f33c-183b-d00a-fa067b273dfd@huawei.com>
         <3b62b0ad-53ba-37c2-817c-591d94eed838@huawei.com>
Content-Type: text/plain; charset="ISO-8859-1"
User-Agent: Evolution 3.30.1-1build1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD32UX6xulbB1kzAA--.7545S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxuFykZw13tr4xGr1rXF4xJFb_yoWfXF15pF
	Z3Jas0kF4UJw4xuwsrG3WDuFy5tayxta4UCay8W3yF9FWxur98trW7tFW0qF95Grn7Xaya
	qF4DJayUW3W8twUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmSb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwCFI7km07C267AKxVWU
	XVWUAwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67
	kF1VAFwI0_JF0_Jw1lIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBI
	daVFxhVjvjDU0xZFpf9x07b13kZUUUUU=

On Mon, 2018-11-12 at 17:55 +0000, John Garry wrote:
> On 12/11/2018 17:49, John Garry wrote:
> > On 12/11/2018 17:32, Joe Perches wrote:
> > > On Tue, 2018-11-13 at 01:28 +0800, John Garry wrote:
> > > > Not all host drivers are PCI drivers - like hisi_sas, which supports a
> > > > platform driver - so remove reference to "pcidev".
> > > > 
> > > > The debug level is also downgraded to KERN_ERR for the same message.
> > > []
> > > > diff --git a/drivers/scsi/libsas/sas_discover.c
> > > > b/drivers/scsi/libsas/sas_discover.c
> > > []
> > > > @@ -186,7 +186,7 @@ int sas_notify_lldd_dev_found(struct
> > > > domain_device *dev)
> > > > 
> > > >      res = i->dft->lldd_dev_found(dev);
> > > >      if (res) {
> > > > -        printk("sas: driver on pcidev %s cannot handle "
> > > > +        pr_err("sas: driver on host %s cannot handle "
> > > >                 "device %llx, error:%d\n",
> > > 
> > > As a printk without a KERN_<LEVEL> is printed at whatever
> > > CONFIG_MESSAGE_LOGLEVEL_DEFAULT is set to (default: 4 and
> > > rarely unchanged), this is effectively upgraded from a
> > > KERN_WARNING to KERN_ERR.
> > 
> > ah, I thought that it was printed always.
> > 
> > So maybe I'll just leave as-is.
> 
> I forgot to mention that checkpatch complains about using printk() - 
> that's why I changed it.

I believe that always assigning a KERN_<LEVEL>
is good thing so I am not against this change.

Describing the change a bit more correctly than
'debug level downgraded' would be useful.

My preference is a patch like this which
always prefixes "sas: " to each log message
by adding a #define pr_fmt and converts the
bare printks to pr_notice, and converts the
slightly odd sas_printk macro and uses with
a hidden KERN_NOTICE to pr_notice.

---
 drivers/scsi/libsas/sas_discover.c |  9 ++++-----
 drivers/scsi/libsas/sas_expander.c | 33 ++++++++++++++++-----------------
 drivers/scsi/libsas/sas_init.c     | 10 +++++-----
 drivers/scsi/libsas/sas_internal.h |  5 ++++-
 drivers/scsi/libsas/sas_phy.c      | 10 +++++-----
 drivers/scsi/libsas/sas_port.c     |  3 +--
 6 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/drivers/scsi/libsas/sas_discover.c b/drivers/scsi/libsas/sas_discover.c
index dde433aa59c2..193d7a1ebeb3 100644
--- a/drivers/scsi/libsas/sas_discover.c
+++ b/drivers/scsi/libsas/sas_discover.c
@@ -128,7 +128,8 @@ static int sas_get_port_device(struct asd_sas_port *port)
 					  SAS_FANOUT_EXPANDER_DEVICE);
 		break;
 	default:
-		printk("ERROR: Unidentified device type %d\n", dev->dev_type);
+		pr_notice("ERROR: Unidentified device type %d\n",
+			  dev->dev_type);
 		rphy = NULL;
 		break;
 	}
@@ -186,10 +187,8 @@ int sas_notify_lldd_dev_found(struct domain_device *dev)
 
 	res = i->dft->lldd_dev_found(dev);
 	if (res) {
-		printk("sas: driver on pcidev %s cannot handle "
-		       "device %llx, error:%d\n",
-		       dev_name(sas_ha->dev),
-		       SAS_ADDR(dev->sas_addr), res);
+		pr_notice("driver on pcidev %s cannot handle device %llx, error:%d\n",
+			  dev_name(sas_ha->dev), SAS_ADDR(dev->sas_addr), res);
 	}
 	set_bit(SAS_DEV_FOUND, &dev->state);
 	kref_get(&dev->kref);
diff --git a/drivers/scsi/libsas/sas_expander.c b/drivers/scsi/libsas/sas_expander.c
index 0d1f72752ca2..922253f1b05f 100644
--- a/drivers/scsi/libsas/sas_expander.c
+++ b/drivers/scsi/libsas/sas_expander.c
@@ -393,7 +393,7 @@ static int sas_ex_phy_discover_helper(struct domain_device *dev, u8 *disc_req,
 		return res;
 	dr = &((struct smp_resp *)disc_resp)->disc;
 	if (memcmp(dev->sas_addr, dr->attached_sas_addr, SAS_ADDR_SIZE) == 0) {
-		sas_printk("Found loopback topology, just ignore it!\n");
+		pr_notice("Found loopback topology, just ignore it!\n");
 		return 0;
 	}
 	sas_set_ex_phy(dev, single, disc_resp);
@@ -1262,19 +1262,18 @@ static void sas_print_parent_topology_bug(struct domain_device *child,
 	};
 	struct domain_device *parent = child->parent;
 
-	sas_printk("%s ex %016llx phy 0x%x <--> %s ex %016llx "
-		   "phy 0x%x has %c:%c routing link!\n",
+	pr_notice("%s ex %016llx phy 0x%x <--> %s ex %016llx phy 0x%x has %c:%c routing link!\n",
 
-		   ex_type[parent->dev_type],
-		   SAS_ADDR(parent->sas_addr),
-		   parent_phy->phy_id,
+		  ex_type[parent->dev_type],
+		  SAS_ADDR(parent->sas_addr),
+		  parent_phy->phy_id,
 
-		   ex_type[child->dev_type],
-		   SAS_ADDR(child->sas_addr),
-		   child_phy->phy_id,
+		  ex_type[child->dev_type],
+		  SAS_ADDR(child->sas_addr),
+		  child_phy->phy_id,
 
-		   sas_route_char(parent, parent_phy),
-		   sas_route_char(child, child_phy));
+		  sas_route_char(parent, parent_phy),
+		  sas_route_char(child, child_phy));
 }
 
 static int sas_check_eeds(struct domain_device *child,
@@ -2154,23 +2153,23 @@ void sas_smp_handler(struct bsg_job *job, struct Scsi_Host *shost,
 	case SAS_FANOUT_EXPANDER_DEVICE:
 		break;
 	default:
-		printk("%s: can we send a smp request to a device?\n",
-		       __func__);
+		pr_notice("%s: can we send a smp request to a device?\n",
+			  __func__);
 		goto out;
 	}
 
 	dev = sas_find_dev_by_rphy(rphy);
 	if (!dev) {
-		printk("%s: fail to find a domain_device?\n", __func__);
+		pr_notice("%s: fail to find a domain_device?\n", __func__);
 		goto out;
 	}
 
 	/* do we need to support multiple segments? */
 	if (job->request_payload.sg_cnt > 1 ||
 	    job->reply_payload.sg_cnt > 1) {
-		printk("%s: multiple segments req %u, rsp %u\n",
-		       __func__, job->request_payload.payload_len,
-		       job->reply_payload.payload_len);
+		pr_notice("%s: multiple segments req %u, rsp %u\n",
+			  __func__, job->request_payload.payload_len,
+			  job->reply_payload.payload_len);
 		goto out;
 	}
 
diff --git a/drivers/scsi/libsas/sas_init.c b/drivers/scsi/libsas/sas_init.c
index ede0af78144f..221340ee8651 100644
--- a/drivers/scsi/libsas/sas_init.c
+++ b/drivers/scsi/libsas/sas_init.c
@@ -128,19 +128,19 @@ int sas_register_ha(struct sas_ha_struct *sas_ha)
 
 	error = sas_register_phys(sas_ha);
 	if (error) {
-		printk(KERN_NOTICE "couldn't register sas phys:%d\n", error);
+		pr_notice("couldn't register sas phys:%d\n", error);
 		return error;
 	}
 
 	error = sas_register_ports(sas_ha);
 	if (error) {
-		printk(KERN_NOTICE "couldn't register sas ports:%d\n", error);
+		pr_notice("couldn't register sas ports:%d\n", error);
 		goto Undo_phys;
 	}
 
 	error = sas_init_events(sas_ha);
 	if (error) {
-		printk(KERN_NOTICE "couldn't start event thread:%d\n", error);
+		pr_notice("couldn't start event thread:%d\n", error);
 		goto Undo_ports;
 	}
 
@@ -623,8 +623,8 @@ struct asd_sas_event *sas_alloc_event(struct asd_sas_phy *phy)
 	if (atomic_read(&phy->event_nr) > phy->ha->event_thres) {
 		if (i->dft->lldd_control_phy) {
 			if (cmpxchg(&phy->in_shutdown, 0, 1) == 0) {
-				sas_printk("The phy%02d bursting events, shut it down.\n",
-					phy->id);
+				pr_notice("The phy%02d bursting events, shut it down.\n",
+					  phy->id);
 				sas_notify_phy_event(phy, PHYE_SHUTDOWN);
 			}
 		} else {
diff --git a/drivers/scsi/libsas/sas_internal.h b/drivers/scsi/libsas/sas_internal.h
index 50e12d662ffe..263cb41853c2 100644
--- a/drivers/scsi/libsas/sas_internal.h
+++ b/drivers/scsi/libsas/sas_internal.h
@@ -32,7 +32,10 @@
 #include <scsi/libsas.h>
 #include <scsi/sas_ata.h>
 
-#define sas_printk(fmt, ...) printk(KERN_NOTICE "sas: " fmt, ## __VA_ARGS__)
+#ifdef pr_fmt
+#undef pr_fmt
+#endif
+#define pr_fmt(fmt) "sas: " fmt
 
 #define SAS_DPRINTK(fmt, ...) printk(KERN_DEBUG "sas: " fmt, ## __VA_ARGS__)
 
diff --git a/drivers/scsi/libsas/sas_phy.c b/drivers/scsi/libsas/sas_phy.c
index bf3e1b979ca6..d628c0e6289d 100644
--- a/drivers/scsi/libsas/sas_phy.c
+++ b/drivers/scsi/libsas/sas_phy.c
@@ -122,11 +122,11 @@ static void sas_phye_shutdown(struct work_struct *work)
 		phy->enabled = 0;
 		ret = i->dft->lldd_control_phy(phy, PHY_FUNC_DISABLE, NULL);
 		if (ret)
-			sas_printk("lldd disable phy%02d returned %d\n",
-				phy->id, ret);
-	} else
-		sas_printk("phy%02d is not enabled, cannot shutdown\n",
-			phy->id);
+			pr_notice("lldd disable phy%02d returned %d\n",
+				  phy->id, ret);
+	} else {
+		pr_notice("phy%02d is not enabled, cannot shutdown\n", phy->id);
+	}
 }
 
 /* ---------- Phy class registration ---------- */
diff --git a/drivers/scsi/libsas/sas_port.c b/drivers/scsi/libsas/sas_port.c
index fad23dd39114..f2a25cef85b7 100644
--- a/drivers/scsi/libsas/sas_port.c
+++ b/drivers/scsi/libsas/sas_port.c
@@ -147,8 +147,7 @@ static void sas_form_port(struct asd_sas_phy *phy)
 	}
 
 	if (i >= sas_ha->num_phys) {
-		printk(KERN_NOTICE "%s: couldn't find a free port, bug?\n",
-		       __func__);
+		pr_notice("%s: couldn't find a free port, bug?\n", __func__);
 		spin_unlock_irqrestore(&sas_ha->phy_port_lock, flags);
 		return;
 	}

