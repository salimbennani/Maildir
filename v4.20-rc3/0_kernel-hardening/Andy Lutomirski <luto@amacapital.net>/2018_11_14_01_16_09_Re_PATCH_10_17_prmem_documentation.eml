Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:35:28 -0000
Received: from icoremail.net (unknown [209.85.210.169])
	by mail-app2 (Coremail) with SMTP id by_KCgC3fyU7B+tbDLOHAQ--.40817S3;
	Wed, 14 Nov 2018 01:17:48 +0800 (CST)
Received: from mail-pf1-f169.google.com (unknown [209.85.210.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB38Ew4B+tb3Hc5AA--.1724S3;
	Wed, 14 Nov 2018 01:17:44 +0800 (CST)
Received: by mail-pf1-f169.google.com with SMTP id c72so1702044pfc.6
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 09:17:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc
         :content-transfer-encoding:sender:precedence:list-id;
        bh=oyAuWWcjSu0uytm90hhiKb/uLBTJ/lDlQh1huZKpzGU=;
        b=USLRjfkkCgETyfUmy0HtA4uqI2zZu2BmMMFolgvicYRYHhQ7ELz3ZTdAM3u0EiZ/7m
         TFdMmfW0cKR2tXFnr+WSJ3YuBG4rlqrYDtB/P6VUWZZgvsiJ6i41UDw1oUZtyvkM1klh
         CCXksiCw4rdhjelObF+UEnWFZEJV17jWIlSb+i1/EMILgrREcnejESghS5RujUzrFd1X
         qIplAF9WwpC3yyIP2DM36fZmqdMEV+0bi4wpMuOn7v+ndZ7THOaGXXRBQ9iKx0HXlwdy
         yJCljRkdOKkHMUDhxZonbCnlU3k9IV4dTsmvAn4418RyEP1hpqvLHqzR9eba+HBUloRw
         LCoQ==
X-Gm-Message-State: AGRZ1gIM7Rqgs3OdE9BAfx5k2SuGx+WW8qoMXMl4M67VYDU9ZgcH2aT2
	qq2a5x6po7yVqjVo0pFgyWO2v0NB8/NXbLhSELc9Jo9eoj/Z64d5cg==
X-Received: by 2002:a62:ab05:: with SMTP id p5-v6mr5990288pff.211.1542129464291;
        Tue, 13 Nov 2018 09:17:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4740643pjt;
        Tue, 13 Nov 2018 09:17:42 -0800 (PST)
X-Google-Smtp-Source: AJdET5eTPLANTGakK3d+ARtt2ZFxbvflnBSXs/Ff6trRZqRJYpCjZsZ56Dq1RhMJhiNu9PUdx+xB
X-Received: by 2002:a63:8441:: with SMTP id k62mr5480321pgd.392.1542129462467;
        Tue, 13 Nov 2018 09:17:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542129462; cv=none;
        d=google.com; s=arc-20160816;
        b=rEMs2Nuh+41gZ6u/D4oVjWMAmgd2vMxHxZBnEIzsIBht25ttVvcQ0fiEDlpUA2ivap
         BlVroTvxCp1epfCTnTaNHI4ORmDw6uE8W3hn3VFqdXY6Jpca+ZlyLimcxOfloRqUhZSO
         mXVQB14huCFddxTAsLC11ivVLevTzXlqT7Bxa4q7znEmt069zsGd6WsuyD0iVipDvKUR
         mGtgGKoioPDlOV8faSsZipKAHz70O4jJuerPNyQJ81DzQndLPZ0sRPCe1eeUEhSP9UfU
         yrK8MyDQy+TxZZs5yIahARYpn9dV7TiDi6Qx8Tk3+j0rLYDq/tkgO9y0gnXxikMl5XSj
         Uu7w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:cc:to:subject
         :message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=oyAuWWcjSu0uytm90hhiKb/uLBTJ/lDlQh1huZKpzGU=;
        b=DgjjVlELPhcy8Vg/k2QYuj7638Kzg1kQqrH4F75Nno2DZGB5cQ1HVRrQIlVfO5ndTv
         Zaxb3tPeYPVEBy4Ryl8gs/HCu3pdPZb6balU6JHQf4dX2xmbpUFRbYTSQHfPZitLWw7P
         y7H0ASa1FiXhsRvnQNr9tyGPcAjYBFBegSUJcmwoYfbyxPkefRMc7QyV0yVTSYLHEnrO
         kE/caEpIgtgVgcm1yPaP0vDeg45x31FMCUegyCamcw71shwvszU8fbXog6E63pCmWaBG
         HM1oRweYRIEXrdHntUCIdxujrU0TTi5in3qxU5tcGHk/m3/8h8nscORIa5dbl/fscjEh
         QC/Q==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=YcqUVk6y;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id a28si22949298pgl.530.2018.11.13.09.17.23;
        Tue, 13 Nov 2018 09:17:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731807AbeKNDPW (ORCPT <rfc822;lrx0014@gmail.com> + 99 others);
        Tue, 13 Nov 2018 22:15:22 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:34652 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730813AbeKNDPW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 22:15:22 -0500
Received: by mail-wm1-f67.google.com with SMTP id f1-v6so11625906wmg.1
        for <linux-kernel@vger.kernel.org>; Tue, 13 Nov 2018 09:16:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=oyAuWWcjSu0uytm90hhiKb/uLBTJ/lDlQh1huZKpzGU=;
        b=YcqUVk6yncC5WgpJXNOkfzf6KWHr4QK6lHdKNcPuSSzISlnoKYIyXf0IGcyuEgGmur
         ERMeceOw04hxMV9aY3w2nzWDax6PufNov4IkO5QvzaXmhbSZZJpsN1c2A7rZtwH+qfOC
         XfV0EYWXhjwAA9Aor6FcriZopLMcjj5upyv8rg7U9I0Go3i5TaQbL5Kgy8iw4VgBZy3s
         5s7uxVhJlQWdoaQ7GtSa4DzsvmOAqe+Xv8RY+rECBkufmFBcLIJRx/Qp9uzBy/NkauKn
         U2FO6rtG9XJY08EcBbBmkIjFcDFoD5VPfYauZ7lpUYy7FjpPK8XzaLyQIhZkFr3tJamU
         nJ0A==
X-Received: by 2002:a1c:4b1a:: with SMTP id y26-v6mr4117866wma.82.1542129381388;
 Tue, 13 Nov 2018 09:16:21 -0800 (PST)
MIME-Version: 1.0
References: <20181023213504.28905-1-igor.stoppa@huawei.com>
 <20181023213504.28905-11-igor.stoppa@huawei.com> <20181026092609.GB3159@worktop.c.hoisthospitality.com>
 <CAGXu5jKCs01jvtvpEFS7R8qCR-5iRqK11kJxLJY99NicGWc4aQ@mail.gmail.com>
 <20181028183126.GB744@hirez.programming.kicks-ass.net> <40cd77ce-f234-3213-f3cb-0c3137c5e201@gmail.com>
 <20181030152641.GE8177@hirez.programming.kicks-ass.net> <CAGXu5jJftJ+Hq+jrZGHX5CTDLWOog7kGsd_Ne=yMvrRs__skSg@mail.gmail.com>
 <0A7AFB50-9ADE-4E12-B541-EC7839223B65@amacapital.net> <6f60afc9-0fed-7f95-a11a-9a2eef33094c@gmail.com>
In-Reply-To: <6f60afc9-0fed-7f95-a11a-9a2eef33094c@gmail.com>
From: Andy Lutomirski <luto@amacapital.net>
Date: Tue, 13 Nov 2018 09:16:09 -0800
Message-ID: <CALCETrXNckT9W288VXx-6inO5qYn-6dUPocKGcBT0GCO3xi3ZQ@mail.gmail.com>
Subject: Re: [PATCH 10/17] prmem: documentation
To: Igor Stoppa <igor.stoppa@gmail.com>
Cc: Kees Cook <keescook@chromium.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Nadav Amit <nadav.amit@gmail.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Matthew Wilcox <willy@infradead.org>,
        Dave Chinner <david@fromorbit.com>,
        James Morris <jmorris@namei.org>,
        Michal Hocko <mhocko@kernel.org>,
        Kernel Hardening <kernel-hardening@lists.openwall.com>,
        linux-integrity <linux-integrity@vger.kernel.org>,
        LSM List <linux-security-module@vger.kernel.org>,
        Igor Stoppa <igor.stoppa@huawei.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Laura Abbott <labbott@redhat.com>,
        Randy Dunlap <rdunlap@infradead.org>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB38Ew4B+tb3Hc5AA--.1724S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGr13Gw4DKF4xWF1DJFWDJwb_yoWrWr1fpa
	yUKw4akr4ktr17Arn7Zw1UZF4akws5JFZ8G3s5G3s0krn8WFyIqFyIqa1jvay5u3ykCr1a
	qr4SyrZrCa4qvFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUJVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcV
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr0_Gr1UMxvI
	42IY6I8E87Iv6xkF7I0E14v26r4j6r4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bm
	wZcUUUUU=

On Tue, Nov 13, 2018 at 6:25 AM Igor Stoppa <igor.stoppa@gmail.com> wrote:
>
> Hello,
> I've been studying v4 of the patch-set [1] that Nadav has been working on=
.
> Incidentally, I think it would be useful to cc also the
> security/hardening ml.
> The patch-set seems to be close to final, so I am resuming this discussio=
n.
>
> On 30/10/2018 19:06, Andy Lutomirski wrote:
>
> > I support the addition of a rare-write mechanism to the upstream kernel=
.  And I think that there is only one sane way to implement it: using an mm=
_struct. That mm_struct, just like any sane mm_struct, should only differ f=
rom init_mm in that it has extra mappings in the *user* region.
>
> After reading the code, I see what you meant.
> I think I can work with it.
>
> But I have a couple of questions wrt the use of this mechanism, in the
> context of write rare.
>
>
> 1) mm_struct.
>
> Iiuc, the purpose of the patchset is mostly (only?) to patch kernel code
> (live patch?), which seems to happen sequentially and in a relatively
> standardized way, like replacing the NOPs specifically placed in the
> functions that need patching.
>
> This is a bit different from the more generic write-rare case, applied
> to data.
>
> As example, I have in mind a system where both IMA and SELinux are in use=
.
>
> In this system, a file is accessed for the first time.
>
> That would trigger 2 things:
> - evaluation of the SELinux rules and probably update of the AVC cache
> - IMA measurement and update of the measurements
>
> Both of them could be write protected, meaning that they would both have
> to be modified through the write rare mechanism.
>
> While the events, for 1 specific file, would be sequential, it's not
> difficult to imagine that multiple files could be accessed at the same ti=
me.
>
> If the update of the data structures in both IMA and SELinux must use
> the same mm_struct, that would have to be somehow regulated and it would
> introduce an unnecessary (imho) dependency.
>
> How about having one mm_struct for each writer (core or thread)?
>

I don't think that helps anything.  I think the mm_struct used for
prmem (or rare_write or whatever you want to call it) should be
entirely abstracted away by an appropriate API, so neither SELinux nor
IMA need to be aware that there's an mm_struct involved.  It's also
entirely possible that some architectures won't even use an mm_struct
behind the scenes -- x86, for example, could have avoided it if there
were a kernel equivalent of PKRU.  Sadly, there isn't.

>
>
> 2) Iiuc, the purpose of the 2 pages being remapped is that the target of
> the patch might spill across the page boundary, however if I deal with
> the modification of generic data, I shouldn't (shouldn't I?) assume that
> the data will not span across multiple pages.

The reason for the particular architecture of text_poke() is to avoid
memory allocation to get it working.  i think that prmem/rare_write
should have each rare-writable kernel address map to a unique user
address, possibly just by offsetting everything by a constant.  For
rare_write, you don't actually need it to work as such until fairly
late in boot, since the rare_writable data will just be writable early
on.

>
> If the data spans across multiple pages, in unknown amount, I suppose
> that I should not keep interrupts disabled for an unknown time, as it
> would hurt preemption.
>
> What I thought, in my initial patch-set, was to iterate over each page
> that must be written to, in a loop, re-enabling interrupts in-between
> iterations, to give pending interrupts a chance to be served.
>
> This would mean that the data being written to would not be consistent,
> but it's a problem that would have to be addressed anyways, since it can
> be still read by other cores, while the write is ongoing.

This probably makes sense, except that enabling and disabling
interrupts means you also need to restore the original mm_struct (most
likely), which is slow.  I don't think there's a generic way to check
whether in interrupt is pending without turning interrupts on.
