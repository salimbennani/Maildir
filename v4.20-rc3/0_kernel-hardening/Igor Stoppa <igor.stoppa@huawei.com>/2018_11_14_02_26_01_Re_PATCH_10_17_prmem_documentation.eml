Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 00:36:08 -0000
Received: from icoremail.net (unknown [209.85.214.180])
	by mail-app2 (Coremail) with SMTP id by_KCgCn39xiF+tb0RWIAQ--.40672S3;
	Wed, 14 Nov 2018 02:26:43 +0800 (CST)
Received: from mail-pl1-f180.google.com (unknown [209.85.214.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXd0NgF+tbzrk5AA--.6425S3;
	Wed, 14 Nov 2018 02:26:40 +0800 (CST)
Received: by mail-pl1-f180.google.com with SMTP id a14so1814843plm.12
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 10:26:40 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=eS4hoMt+MsOs3oAxOvWgaGAi4gOz572YP6+ADvuAQhg=;
        b=A2l7GCpOPzqsTD3OE484lNxyE/noDB7FUp6byp7+R+gIw73kCRNl5egjkH4z8KDDnk
         v5TGc0S2McyQof8GaR2PK//MlTIhFRTjMimdEhPwp2WWeAxE8JUAYs3PjPw3N5ea93+m
         jQRDWuZBckZmDfqgL/CZMYVaLX30AHCrSsxGmmaRnXKcUMalygIGJmTTQbnf8vJxx5Cb
         xq/pS3NisbAmyO6kU78BXynQTdcfZ8owJ5iVDVSgjjhGlYrwpwB5z/leHVwyeSu9O7Ln
         wg249pboEkg3eYydoa4nz9i2RAuk+4JE0PY9ckfYd/477Lqs6jImCCVvOK1nCky1zV93
         I78A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJBcI7bl59tDW+0kECVyGHU97cQaPYg+EyX9mYX2vPa6qzSdmiu
	N40ZbMKal1BXqIfw5esq4Tib7BvQ3LyZoHjcpp7jFQNTtvNyKf+lYw==
X-Received: by 2002:a17:902:166:: with SMTP id 93-v6mr6028408plb.68.1542133600039;
        Tue, 13 Nov 2018 10:26:40 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4822872pjt;
        Tue, 13 Nov 2018 10:26:39 -0800 (PST)
X-Google-Smtp-Source: AJdET5eENU8jurUrvdiJzJiNwIo0Q32FrH1dU0j1FNFLMbvfHfjk4tiLPvaJadh/ECGxZ+PGO/uP
X-Received: by 2002:a17:902:7207:: with SMTP id ba7-v6mr6142063plb.79.1542133599022;
        Tue, 13 Nov 2018 10:26:39 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542133598; cv=none;
        d=google.com; s=arc-20160816;
        b=NSNKTUxbbpPVOULt114vHeVI88ticIIOutYeP4dq+Tls5N/3fQ0hV1vQ1sMLCAGA5+
         +pS19Dhmr1a322ksmmILbE2wwoKFHp+4mqM9ma60lakh7AnErLZUoEOyqROUwpgN3L8s
         JvkrmZnYx7I9AB4RSn8f7Kv8hyeonX/P+gXT5HimV4LRrMeKWGQTYgQb0rzjt54/KGHH
         /SVE6ZrActJ7+aImo41uYvvrJrltzWS6vHUlHl5IwDYENm1gvwyBQRRgUsFbLLinM8T+
         ckY2oBhyx1I/HUaRVvLxYM5x3Nd8d8AbLyO+dmhX60n9x2HTQ10oUgw32s4N7HbNj7n1
         MiNA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=eS4hoMt+MsOs3oAxOvWgaGAi4gOz572YP6+ADvuAQhg=;
        b=dt1aCR8Q33FhXQHJflI15pjm9y2st5uMQw0cVDXLOsVp2SkaK2zYJaV079nKj7v/qE
         YY/u33UN7MBoHRqqYHv5XpNHGTaR1YAQlw3m46AIcwSCHsuwS/yZK1rKBrtRr0rjUE/q
         3vBVRMTC6uFZrXJ7igkVAAIOXloVxSmfN2gbHfM6ZHBxT/5oBJ6ySEyLpIg0xN7rimXe
         O1U97zCWHtopdKphkysP6vfWACrBfSYpR9G4rGFyQ/Qmd+8KkBsWa9nA9VsZ03ayudde
         B6b4Zsq+dJtzaGTAkvOjW4rq1OKHHI+FAwRETNC/ZFZfY9FHZ6vZqccI2/eEAM5qXzi0
         DU4A==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 65-v6si23005511pfl.220.2018.11.13.10.26.24;
        Tue, 13 Nov 2018 10:26:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730223AbeKNEZZ (ORCPT <rfc822;lrx0014@gmail.com> + 99 others);
        Tue, 13 Nov 2018 23:25:25 -0500
Received: from lhrrgout.huawei.com ([185.176.76.210]:32758 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726517AbeKNEZY (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 23:25:24 -0500
Received: from LHREML713-CAH.china.huawei.com (unknown [172.18.7.106])
        by Forcepoint Email with ESMTP id 77C88501BB6A9;
        Tue, 13 Nov 2018 18:26:04 +0000 (GMT)
Received: from [10.202.210.149] (10.202.210.149) by smtpsuk.huawei.com
 (10.201.108.36) with Microsoft SMTP Server (TLS) id 14.3.408.0; Tue, 13 Nov
 2018 18:26:04 +0000
Subject: Re: [PATCH 10/17] prmem: documentation
To: Andy Lutomirski <luto@amacapital.net>,
        Igor Stoppa <igor.stoppa@gmail.com>
CC: Kees Cook <keescook@chromium.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Nadav Amit <nadav.amit@gmail.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Matthew Wilcox <willy@infradead.org>,
        Dave Chinner <david@fromorbit.com>,
        James Morris <jmorris@namei.org>,
        Michal Hocko <mhocko@kernel.org>,
        "Kernel Hardening" <kernel-hardening@lists.openwall.com>,
        linux-integrity <linux-integrity@vger.kernel.org>,
        LSM List <linux-security-module@vger.kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Laura Abbott <labbott@redhat.com>,
        Randy Dunlap <rdunlap@infradead.org>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        "Thomas Gleixner" <tglx@linutronix.de>
References: <20181023213504.28905-1-igor.stoppa@huawei.com>
 <20181023213504.28905-11-igor.stoppa@huawei.com>
 <20181026092609.GB3159@worktop.c.hoisthospitality.com>
 <CAGXu5jKCs01jvtvpEFS7R8qCR-5iRqK11kJxLJY99NicGWc4aQ@mail.gmail.com>
 <20181028183126.GB744@hirez.programming.kicks-ass.net>
 <40cd77ce-f234-3213-f3cb-0c3137c5e201@gmail.com>
 <20181030152641.GE8177@hirez.programming.kicks-ass.net>
 <CAGXu5jJftJ+Hq+jrZGHX5CTDLWOog7kGsd_Ne=yMvrRs__skSg@mail.gmail.com>
 <0A7AFB50-9ADE-4E12-B541-EC7839223B65@amacapital.net>
 <6f60afc9-0fed-7f95-a11a-9a2eef33094c@gmail.com>
 <CALCETrXNckT9W288VXx-6inO5qYn-6dUPocKGcBT0GCO3xi3ZQ@mail.gmail.com>
From: Igor Stoppa <igor.stoppa@huawei.com>
Message-ID: <17a007eb-43ea-e4da-b066-0d8c502f5f6e@huawei.com>
Date: Tue, 13 Nov 2018 20:26:01 +0200
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
In-Reply-To: <CALCETrXNckT9W288VXx-6inO5qYn-6dUPocKGcBT0GCO3xi3ZQ@mail.gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.210.149]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXd0NgF+tbzrk5AA--.6425S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxArWUZF1xuF4rXrWDCF1Utrb_yoWrXr47pF
	Wjgw1akr4ktF4UArn7Za18uFyayws5JFW3GF95J34rCwn8Kr1IqF1Sqa40va47urn7Wa1Y
	vr4Fyr97Ca4DZFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUQlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jrv_JF1lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkF
	s20EY4vE44CYbxCE4x80FwCY02Avz4vEIxC_XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2I
	x0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2
	z280aVAFwI0_Gr1j6F4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28Icx
	kI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY
	6r1j6r4UMxCIbckI1I0E14v26r1Y6r17MI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7
	xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAI
	w20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IUODhL7UUUUU==

On 13/11/2018 19:16, Andy Lutomirski wrote:
> On Tue, Nov 13, 2018 at 6:25 AM Igor Stoppa <igor.stoppa@gmail.com> wrote:

[...]

>> How about having one mm_struct for each writer (core or thread)?
>>
> 
> I don't think that helps anything.  I think the mm_struct used for
> prmem (or rare_write or whatever you want to call it)

write_rare / rarely can be shortened to wr_  which is kinda less
confusing than rare_write, since it would become rw_ and easier to
confuse with R/W

Any advice for better naming is welcome.

> should be
> entirely abstracted away by an appropriate API, so neither SELinux nor
> IMA need to be aware that there's an mm_struct involved.

Yes, that is fine. In my proposal I was thinking about tying it to the
core/thread that performs the actual write.

The high level API could be something like:

wr_memcpy(void *src, void *dst, uint_t size)

>  It's also
> entirely possible that some architectures won't even use an mm_struct
> behind the scenes -- x86, for example, could have avoided it if there
> were a kernel equivalent of PKRU.  Sadly, there isn't.

The mm_struct - or whatever is the means to do the write on that
architecture - can be kept hidden from the API.

But the reason why I was proposing to have one mm_struct per writer is
that, iiuc, the secondary mapping is created in the secondary mm_struct
for each writer using it.

So the updating of IMA measurements would have, theoretically, also
write access to the SELinux AVC. Which I was trying to avoid.
And similarly any other write rare updater. Is this correct?

>> 2) Iiuc, the purpose of the 2 pages being remapped is that the target of
>> the patch might spill across the page boundary, however if I deal with
>> the modification of generic data, I shouldn't (shouldn't I?) assume that
>> the data will not span across multiple pages.
> 
> The reason for the particular architecture of text_poke() is to avoid
> memory allocation to get it working.  i think that prmem/rare_write
> should have each rare-writable kernel address map to a unique user
> address, possibly just by offsetting everything by a constant.  For
> rare_write, you don't actually need it to work as such until fairly
> late in boot, since the rare_writable data will just be writable early
> on.

Yes, that is true. I think it's safe to assume, from an attack pattern,
that as long as user space is not started, the system can be considered
ok. Even user-space code run from initrd should be ok, since it can be
bundled (and signed) as a single binary with the kernel.

Modules loaded from a regular filesystem are a bit more risky, because
an attack might inject a rogue key in the key-ring and use it to load
malicious modules.

>> If the data spans across multiple pages, in unknown amount, I suppose
>> that I should not keep interrupts disabled for an unknown time, as it
>> would hurt preemption.
>>
>> What I thought, in my initial patch-set, was to iterate over each page
>> that must be written to, in a loop, re-enabling interrupts in-between
>> iterations, to give pending interrupts a chance to be served.
>>
>> This would mean that the data being written to would not be consistent,
>> but it's a problem that would have to be addressed anyways, since it can
>> be still read by other cores, while the write is ongoing.
> 
> This probably makes sense, except that enabling and disabling
> interrupts means you also need to restore the original mm_struct (most
> likely), which is slow.  I don't think there's a generic way to check
> whether in interrupt is pending without turning interrupts on.

The only "excuse" I have is that write_rare is opt-in and is "rare".
Maybe the enabling/disabling of interrupts - and the consequent switch
of mm_struct - could be somehow tied to the latency configuration?

If preemption is disabled, the expectations on the system latency are
anyway more relaxed.

But I'm not sure how it would work against I/O.

--
igor
