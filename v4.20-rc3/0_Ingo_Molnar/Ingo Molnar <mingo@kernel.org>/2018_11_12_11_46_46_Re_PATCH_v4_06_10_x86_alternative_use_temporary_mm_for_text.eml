Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:36:58 -0000
Received: from icoremail.net (unknown [209.85.210.175])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f9HE9+hbAT56AQ--.36569S3;
	Mon, 12 Nov 2018 11:47:17 +0800 (CST)
Received: from mail-pf1-f175.google.com (unknown [209.85.210.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBEDC9+hbGYcvAA--.2799S3;
	Mon, 12 Nov 2018 11:47:14 +0800 (CST)
Received: by mail-pf1-f175.google.com with SMTP id s9-v6so3604340pfm.13
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 19:47:14 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :content-transfer-encoding:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=qCBeWAVPl6/xvWokQkbKevMdjTmKaDmHisaEPKfKjBw=;
        b=Dk9z+VkJvTHDoeO47hh11CwoVhSY89QS8CvMC6ekVEAM+hgL6DhBs3PhFzUerhWzZK
         d9Ji4almtjTAVHSz3jChd9mvdHip68w94ARXjXGmsPhkobdUsohfpj+X+raBAbgqeL+r
         kwMB5Kr2a5sYD8MzK5MRrUIVOWle+tmI2dMkTC692hAyvnd1CJUhGAr/5NBIt0LtH7oZ
         cKLpIb1kmVj4IjXkITLyd5e9LysJcz9pz9CUPbkhxES8rKW0/3KVKXnGySubEalZMdXw
         J/U0E/p1fqgpPtn8hZWTvNvUKfwUfv8eiJ+HnAh2WBM5UA1taU8i1vGOQ4njATheVjVM
         ribw==
X-Gm-Message-State: AGRZ1gL2rld/Yrk9gci1fj/m9XyFpoyvxde9d7qKy+eD68mXLowzyRj7
	POPFX9AhiBmCcik1Gw6FxMuwjsUt5Ilf2A5OhNc0BlhQkacAYL+aaQ==
X-Received: by 2002:a63:1d10:: with SMTP id d16-v6mr15556670pgd.228.1541994433967;
        Sun, 11 Nov 2018 19:47:13 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2732333pjt;
        Sun, 11 Nov 2018 19:47:12 -0800 (PST)
X-Google-Smtp-Source: AJdET5cDKa5rzAPAzuQl25pj8xTUXVbSTFEsCZxKZ2XosEdW8RDHYDEce5OpHhbw69OtELyko8Ct
X-Received: by 2002:a63:a16:: with SMTP id 22mr16101757pgk.318.1541994432796;
        Sun, 11 Nov 2018 19:47:12 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541994432; cv=none;
        d=google.com; s=arc-20160816;
        b=BfdmI6Dk/Z7MipbAF3LX3AP6oPPE2TLkFWDcwNU6FfwlDEIEBgt4Q520azmn8Wlxab
         ku8uXvNcYPfyObof3mGwvOLjlut4A7+7MgGpS1zvnBrE+aXn6ydW82pb6TBWzkp6SWFz
         zP+72Dxb/7dUa0WigVwiRB2Q2MKEU+GGRxKeHEy6hQuA+ouhE8TTGzd8OXlVyFgLMoaz
         kKRP23+rMpLy/UZ+OLpXVQtpKfp5TZ+EHtuZvyfBdwFZzsHyArDWdWxY+y0EFSTauIdX
         WblzGsGKJ5ZtEV6OGEt1wz5TqQ9WmjGIw37PKDc0NGR958o+8O0+B2T04j/xYKbNsE6N
         zwPA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-transfer-encoding:content-disposition:mime-version
         :references:message-id:subject:cc:to:from:date:dkim-signature;
        bh=qCBeWAVPl6/xvWokQkbKevMdjTmKaDmHisaEPKfKjBw=;
        b=UZhM+hgMeUXxzj6DMrvc+owpwz/Dhp32pEbfT+aPqgfxr8kIcRgIx99Rvz1lQ/y5XW
         3kmIir4fLWfIy+lB9M0V0rxNb8oZ/b0krsmLboZRtfTtNAtie01JoEJvk4vciqSsAhEA
         G0YjltWxk2KB3xtKXsxt5q6k1p2vOupVmW0uL6IxS2T5rR4DmVdrSsVVN1fuEU/xkISP
         9Re0QkOHpL97jkLTImAuluIzLf9cVi00KtuCfl08FFIPujDSi2bgCwdJkejIsx6gYlBD
         bYZLniwRJbVwQFGL3uuWG7PJiQ9gnjqJxNkktuHeuxtNcPxCJz0ktrO0+q5ZPS2RtMxr
         sbfA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@gmail.com header.s=20161025 header.b=GaYohkx4;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k6si16165157pgr.500.2018.11.11.19.46.57;
        Sun, 11 Nov 2018 19:47:12 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730396AbeKLNiG (ORCPT <rfc822;changseok.bae@gmail.com>
        + 99 others); Mon, 12 Nov 2018 08:38:06 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:53650 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726270AbeKLNiG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 08:38:06 -0500
Received: by mail-wm1-f67.google.com with SMTP id f10-v6so6998197wme.3
        for <linux-kernel@vger.kernel.org>; Sun, 11 Nov 2018 19:46:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent;
        bh=qCBeWAVPl6/xvWokQkbKevMdjTmKaDmHisaEPKfKjBw=;
        b=GaYohkx49u016XwGD4AYcG+oknPuSSa+XdnTDGkGtuAj7oyIiWBHJXlJAJAqlJ4AUp
         GnA1E2h9sJbgWZhtSjXujA5u/iJb9LF48kU/t9H3iwflZZEuR/l3pIbZLtcCEt8J1wOc
         uiRZSeqRxEa71m+X32cTcp6q7i4CNJYNvUgKWEUzS2RxQlr8OV/5Xp1+LN+AVYcOG2rL
         NhgsRAqexo2MC60t7mQLXl1WOIMcCPqh15MQY08OFd3gzpxlUa4x0VQwirZKNaNmad4i
         blDyavxayDQT6osVyZVHk7072Ks7WIKtdDSEjhDgKI5/LGZ1eGhdp2uS0XW1mPx4lqCv
         fpZQ==
X-Received: by 2002:a1c:730b:: with SMTP id d11-v6mr6199542wmb.107.1541994410032;
        Sun, 11 Nov 2018 19:46:50 -0800 (PST)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
        by smtp.gmail.com with ESMTPSA id l42-v6sm11475238wre.37.2018.11.11.19.46.48
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sun, 11 Nov 2018 19:46:49 -0800 (PST)
Date: Mon, 12 Nov 2018 04:46:46 +0100
From: Ingo Molnar <mingo@kernel.org>
To: Peter Zijlstra <peterz@infradead.org>
Cc: Nadav Amit <namit@vmware.com>, Ingo Molnar <mingo@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Andy Lutomirski <luto@kernel.org>,
        Kees Cook <keescook@chromium.org>,
        Dave Hansen <dave.hansen@intel.com>,
        Masami Hiramatsu <mhiramat@kernel.org>
Subject: Re: [PATCH v4 06/10] x86/alternative: use temporary mm for text
 poking
Message-ID: <20181112034646.GA88919@gmail.com>
References: <20181110231732.15060-1-namit@vmware.com>
 <20181110231732.15060-7-namit@vmware.com>
 <20181111145936.GA3021@worktop>
 <43C8C690-F079-4513-82CD-46A62DBA5A3B@vmware.com>
 <20181111235220.GB3056@worktop>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20181111235220.GB3056@worktop>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBEDC9+hbGYcvAA--.2799S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGFWkWrWDtFy5ury5KF13CFg_yoW5Ww13pF
	W5K3Z8Kr1qqr1Iyrnav3WfXryIv34xKFy5Gr1Yg34qyF45XF1Sqr45K3yY9F1xuan3Ka12
	vF47tr97uF98Aa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW8GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOkgADUU
	UUU==


* Peter Zijlstra <peterz@infradead.org> wrote:

> On Sun, Nov 11, 2018 at 08:53:07PM +0000, Nadav Amit wrote:
> 
> > >> +	/*
> > >> +	 * The lock is not really needed, but this allows to avoid open-coding.
> > >> +	 */
> > >> +	ptep = get_locked_pte(poking_mm, poking_addr, &ptl);
> > >> +
> > >> +	/*
> > >> +	 * If we failed to allocate a PTE, fail. This should *never* happen,
> > >> +	 * since we preallocate the PTE.
> > >> +	 */
> > >> +	if (WARN_ON_ONCE(!ptep))
> > >> +		goto out;
> > > 
> > > Since we hard rely on init getting that right; can't we simply get rid
> > > of this?
> > 
> > This is a repeated complaint of yours, which I do not feel comfortable with.
> > One day someone will run some static analysis tool and start finding that
> > all these checks are missing.
> > 
> > The question is why do you care about them.
> 
> Mostly because they should not be happening, ever.

Since get_locked_pte() might in principle return NULL, it's an entirely 
routine pattern to check the return for NULL. This will save reviewer 
time in the future.

> [...] And if they happen, there really isn't anything sensible we can 
> do about it.

Warning about it is 'something', even if we cash afterwards, isn't it?

> > If it is because they affect the
> > generated code and make it less efficient, I can fully understand and perhaps
> > we should have something like PARANOID_WARN_ON_ONCE() which compiles into nothing
> > unless a certain debug option is set.
> > 
> > If it is about the way the source code looks - I guess it doesn’t sore my
> > eyes as hard as some other stuff, and I cannot do much about it (other than
> > removing it as you asked).
> 
> And yes on the above two points. It adds both runtime overhead (albeit
> trivially small) and code complexity.

It's trivially small cycle level overhead in something that will be 
burdened by two TLB flushes anyway is is utterly slow.

> > >> +out:
> > >> +	if (memcmp(addr, opcode, len))
> > >> +		r = -EFAULT;
> > > 
> > > How could this ever fail? And how can we reliably recover from that?
> > 
> > This code has been there before (with slightly uglier code). Before this
> > patch, a BUG_ON() was used here. However, I noticed that kgdb actually
> > checks that text_poke() succeeded after calling it and gracefully fail.
> > However, this was useless, since text_poke() would panic before kgdb gets
> > the chance to do anything (see patch 7).
> 
> Yes, I know it was there before, and I did see kgdb do it too. But aside
> from that out-label case, which we also should never hit, how can we
> realistically ever fail that memcmp()?
> 
> If we fail here, something is _seriously_ buggered.

So wouldn't it be better to just document and verify our assumptions of 
this non-trivial code by using return values intelligently?

I mean, being worried about overhead would be legitimate in the syscall 
entry code. In code patching code, which is essentially a slow path, we 
should be much more worried about *robustness*.

Thanks,

	Ingo
