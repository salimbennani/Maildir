Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 15:16:26 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv34Th+lbQ_59AQ--.38863S3;
	Mon, 12 Nov 2018 21:58:44 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXMj4Nh+lb4QwyAA--.2504S3;
	Mon, 12 Nov 2018 21:58:38 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id f12-v6so4423896plo.1
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 05:58:38 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=pGwEcXxPPx/M5ey6d5ULmVn8uyHTgH4WE1hfN2obrx0=;
        b=RgwK0Fq2DC0mAXEdBG9EXdKbkp3J2SR2NHoTS0S9S0PS8dLorQoQnT6aMfdOYacejT
         /EjC1yALcQbipCNHxqUAVjiUYSU6Qgv2EGCe3VlKuauRaoWJUZJKNISx9fTWLywCg2B2
         7deRqAp7DhUsaA2CM9Vt7B0gLnT6L+yYkJJLG/K5E5IWF9ABizKbsGlSHnJWRYBMZ+rr
         wA2jzD6p2daKJ7U847aLdNbjJUh4rTFOcuJjxxut4c6cjOmgaLrEwkyDY5/rbr6VZfa5
         pG3WcksqZO2JjZ0ODZ/JmswvvIejijmVOCCWCZEXc8I5VXqd1CWKJlgFjulw4+BvMav7
         fm9A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLHut8gI1iJMmBG20r+oijD+ZXCLYI4Km2yMDuNwmxgpEaqpVFp
	XfydMuDX9WpeG7epauQKUw4rOM54oZ99O6Y+UU4PrZGg1/E3hNpEdw==
X-Received: by 2002:a17:902:a5cc:: with SMTP id t12-v6mr1067271plq.298.1542031117692;
        Mon, 12 Nov 2018 05:58:37 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp3218029pjt;
        Mon, 12 Nov 2018 05:58:36 -0800 (PST)
X-Google-Smtp-Source: AJdET5dgU4oWTa8ZkJWhDt0P70HMdfoPAzsYRNifMOzvnjiMr3UbGynJmrMJUZnPTPHd4rST+laG
X-Received: by 2002:a17:902:124:: with SMTP id 33-v6mr1044488plb.287.1542031116317;
        Mon, 12 Nov 2018 05:58:36 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542031116; cv=none;
        d=google.com; s=arc-20160816;
        b=ptSVEauCxb/dFa7bH1LrA2hA/itn61RD7XW3eSXXZ3XAZZkcg1dqcOd6rb04540DUw
         ZKxymu5XeUfXNGZNLDDbbgWU7amOtDlIac+4d+CDO4ywlQPH2/AOISpmdjeaYBr8S9k1
         IyUh7Xggucpv8tzvDAqJ1XoGBtmAX5iRM4E7RAqyg7lXvpFll5EJCJIRwXYr8NQmnR7M
         jejCxTfGjo8Kb9i1WPYtK6aPN3Qqvl9KVEI6Y3FLJ3adg0vz6HwhPtLxNctN4qftCWQj
         he6PpHa9OmHGxYw4a2Eh1tJkVEYNWRKHU8lYonBF3y+Yk3PgiwXsMzBI9DcSEU8KRGnD
         gfVQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=pGwEcXxPPx/M5ey6d5ULmVn8uyHTgH4WE1hfN2obrx0=;
        b=kAYi5/LoIBIfwPjfyjQZKJgmxGDZFD8RUq3+zQUx4U06tVYWLO1aHjODRxe21Rwwv6
         BypLlHAjL5ce5uPMQg4Ex7nnxtqEBR/uXZ6gJr38HWC7ES6P5XfAIAhPV0yGvKdvOToa
         IywBy4MnLe0E3YZAUPWW3MiKynEqS9UUQatVHNEWU16j4spyKV7ZZcKaomljmPKIkrDG
         mAOUTTmVUCr+x/jghJ1TE9gxqKrawERW+jRtNYwEOqeGRqkzfvoW2qT58i5ii5MY7lAa
         TF2O83BO1un7g7+MH0wmnfiCvHHCfjjJWDUGJQVVMgMFu+gapR3vhNYVo7UKxTZmjneN
         UpYw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n12-v6si15557448pgb.68.2018.11.12.05.58.20;
        Mon, 12 Nov 2018 05:58:36 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729680AbeKLXvi (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 18:51:38 -0500
Received: from mx2.suse.de ([195.135.220.15]:57024 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727842AbeKLXvi (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 18:51:38 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 7CF0FB11D;
        Mon, 12 Nov 2018 13:58:12 +0000 (UTC)
Received: by quack2.suse.cz (Postfix, from userid 1000)
        id 6F0121E07E6; Mon, 12 Nov 2018 14:58:11 +0100 (CET)
Date: Mon, 12 Nov 2018 14:58:11 +0100
From: Jan Kara <jack@suse.cz>
To: john.hubbard@gmail.com
Cc: linux-mm@kvack.org, Andrew Morton <akpm@linux-foundation.org>,
        LKML <linux-kernel@vger.kernel.org>,
        linux-rdma <linux-rdma@vger.kernel.org>,
        linux-fsdevel@vger.kernel.org, John Hubbard <jhubbard@nvidia.com>,
        Matthew Wilcox <willy@infradead.org>,
        Michal Hocko <mhocko@kernel.org>,
        Christopher Lameter <cl@linux.com>,
        Jason Gunthorpe <jgg@ziepe.ca>,
        Dan Williams <dan.j.williams@intel.com>,
        Jan Kara <jack@suse.cz>
Subject: Re: [PATCH v2 6/6] mm: track gup pages with page->dma_pinned_* fields
Message-ID: <20181112135811.GF7175@quack2.suse.cz>
References: <20181110085041.10071-1-jhubbard@nvidia.com>
 <20181110085041.10071-7-jhubbard@nvidia.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181110085041.10071-7-jhubbard@nvidia.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXMj4Nh+lb4QwyAA--.2504S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Ww45Ar4kAF1rCry8KF4rXwb_yoW7XFy3pF
	4xG3WfAr47GryakasxAa1qvryfXw1FkrWrGFy7J34rAw13tF92yF1vywn8Cr4rJr18CrWr
	trWUKFn8CF4DAwUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr0_Gr1l7I0Y6sxI4wCY1x
	0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VW5GwCY0x0I
	x7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Jr0_JF4lcIIF0xvE2Ix0cI8IcVCY1x
	0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804x
	Wl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK
	67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8V
	AvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOh4S7UUUUU==


Just as a side note, can you please CC me on the whole series next time?
Because this time I had to look up e.g. the introductory email in the
mailing list... Thanks!

On Sat 10-11-18 00:50:41, john.hubbard@gmail.com wrote:
> From: John Hubbard <jhubbard@nvidia.com>
> 
> This patch sets and restores the new page->dma_pinned_flags and
> page->dma_pinned_count fields, but does not actually use them for
> anything yet.
> 
> In order to use these fields at all, the page must be removed from
> any LRU list that it's on. The patch also adds some precautions that
> prevent the page from getting moved back onto an LRU, once it is
> in this state.
> 
> This is in preparation to fix some problems that came up when using
> devices (NICs, GPUs, for example) that set up direct access to a chunk
> of system (CPU) memory, so that they can DMA to/from that memory.
> 
> Cc: Matthew Wilcox <willy@infradead.org>
> Cc: Michal Hocko <mhocko@kernel.org>
> Cc: Christopher Lameter <cl@linux.com>
> Cc: Jason Gunthorpe <jgg@ziepe.ca>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: Jan Kara <jack@suse.cz>
> Signed-off-by: John Hubbard <jhubbard@nvidia.com>
> ---
>  include/linux/mm.h | 19 +++++----------
>  mm/gup.c           | 55 +++++++++++++++++++++++++++++++++++++++++--
>  mm/memcontrol.c    |  8 +++++++
>  mm/swap.c          | 58 ++++++++++++++++++++++++++++++++++++++++++++++
>  4 files changed, 125 insertions(+), 15 deletions(-)
> 
> diff --git a/include/linux/mm.h b/include/linux/mm.h
> index 09fbb2c81aba..6c64b1e0b777 100644
> --- a/include/linux/mm.h
> +++ b/include/linux/mm.h
> @@ -950,6 +950,10 @@ static inline void put_page(struct page *page)
>  {
>  	page = compound_head(page);
>  
> +	VM_BUG_ON_PAGE(PageDmaPinned(page) &&
> +		       page_ref_count(page) <
> +				atomic_read(&page->dma_pinned_count),
> +		       page);
>  	/*
>  	 * For devmap managed pages we need to catch refcount transition from
>  	 * 2 to 1, when refcount reach one it means the page is free and we
> @@ -964,21 +968,10 @@ static inline void put_page(struct page *page)
>  }
>  
>  /*
> - * put_user_page() - release a page that had previously been acquired via
> - * a call to one of the get_user_pages*() functions.
> - *
>   * Pages that were pinned via get_user_pages*() must be released via
> - * either put_user_page(), or one of the put_user_pages*() routines
> - * below. This is so that eventually, pages that are pinned via
> - * get_user_pages*() can be separately tracked and uniquely handled. In
> - * particular, interactions with RDMA and filesystems need special
> - * handling.
> + * one of these put_user_pages*() routines:
>   */
> -static inline void put_user_page(struct page *page)
> -{
> -	put_page(page);
> -}
> -
> +void put_user_page(struct page *page);
>  void put_user_pages_dirty(struct page **pages, unsigned long npages);
>  void put_user_pages_dirty_lock(struct page **pages, unsigned long npages);
>  void put_user_pages(struct page **pages, unsigned long npages);
> diff --git a/mm/gup.c b/mm/gup.c
> index 55a41dee0340..ec1b26591532 100644
> --- a/mm/gup.c
> +++ b/mm/gup.c
> @@ -25,6 +25,50 @@ struct follow_page_context {
>  	unsigned int page_mask;
>  };
>  
> +static void pin_page_for_dma(struct page *page)
> +{
> +	int ret = 0;
> +	struct zone *zone;
> +
> +	page = compound_head(page);
> +	zone = page_zone(page);
> +
> +	spin_lock(zone_gup_lock(zone));

A think you'll need irqsafe lock here as get_user_pages_fast() can get
called from interrupt context in some cases. And so can put_user_page()...

<snip>

> +/*
> + * put_user_page() - release a page that had previously been acquired via
> + * a call to one of the get_user_pages*() functions.
> + *
> + * Usage: Pages that were pinned via get_user_pages*() must be released via
> + * either put_user_page(), or one of the put_user_pages*() routines
> + * below. This is so that eventually, pages that are pinned via
> + * get_user_pages*() can be separately tracked and uniquely handled. In
> + * particular, interactions with RDMA and filesystems need special
> + * handling.
> + */
> +void put_user_page(struct page *page)
> +{
> +	struct zone *zone = page_zone(page);
> +
> +	page = compound_head(page);
> +
> +	if (atomic_dec_and_test(&page->dma_pinned_count)) {
> +		spin_lock(zone_gup_lock(zone));
> +		/* Re-check while holding the lock, because
> +		 * pin_page_for_dma() or get_page() may have snuck in right
> +		 * after the atomic_dec_and_test, and raised the count
> +		 * above zero again. If so, just leave the flag set. And
> +		 * because the atomic_dec_and_test above already got the
> +		 * accounting correct, no other action is required.
> +		 */
> +		VM_BUG_ON_PAGE(PageLRU(page), page);
> +		VM_BUG_ON_PAGE(!PageDmaPinned(page), page);
> +
> +		if (atomic_read(&page->dma_pinned_count) == 0) {

We have atomic_dec_and_lock[_irqsave]() exactly for constructs like this.

> +			ClearPageDmaPinned(page);
> +
> +			if (PageDmaPinnedWasLru(page)) {
> +				ClearPageDmaPinnedWasLru(page);
> +				putback_lru_page(page);
> +			}
> +		}
> +
> +		spin_unlock(zone_gup_lock(zone));
> +	}
> +
> +	put_page(page);
> +}
> +EXPORT_SYMBOL(put_user_page);
> +

								Honza
-- 
Jan Kara <jack@suse.com>
SUSE Labs, CR
