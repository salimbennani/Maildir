Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 14:44:17 -0000
Received: from icoremail.net (unknown [209.85.215.174])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwrN2+tbP36OAQ--.42724S3;
	Wed, 14 Nov 2018 16:24:47 +0800 (CST)
Received: from mail-pg1-f174.google.com (unknown [209.85.215.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3WUXM2+tbvHI9AA--.2494S3;
	Wed, 14 Nov 2018 16:24:44 +0800 (CST)
Received: by mail-pg1-f174.google.com with SMTP id n10-v6so7015969pgv.10
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 00:24:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=6iiZhnsTIA890bDANYe2+fOHO2h+BmoVqAV+BY7NjkI=;
        b=Jcd8yBCrfFbVipZrqSuLpCzTKZOz9/QlrTmBVjI2nwjiW4JSjPiMV/Ws6pKprsO5XN
         NgNae8YIz7193yzISFcjCvmNMzJOahWWrPkn8YCSFOzXwqRzKOd+oWe4cbKTimeGNjr7
         hXo3psBJfZJ7DZDyAeBGSuUNgmG3/bwLZ0kw9OhSjhUa9yHptx+82GkzsXkowPplLS1F
         HroyYza1BIfyEkaK+dJ69ITClZjkbOxW2j2f8srkXruYEf7XrXsC4wTooAs4L6opUU89
         QOkgN5pRPcOFYldGJ6APdtceIZuDD6Wz5ZL0znR+g4ZkVIaBrcT5D8lDc0SvvFtoTY0P
         pEtw==
X-Gm-Message-State: AGRZ1gKyHKzd8NVyzKq6BUi/q5l6aifmxQdSZt7tveGS/UwoJ+1opp4Q
	jSjM+NPZ2WdVLzYmpTbbDyOeit7PCsWHqqE8lhZzgD57UxkNKO9B+Q==
X-Received: by 2002:a62:5e83:: with SMTP id s125-v6mr975201pfb.232.1542183884245;
        Wed, 14 Nov 2018 00:24:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5522383pjt;
        Wed, 14 Nov 2018 00:24:43 -0800 (PST)
X-Google-Smtp-Source: AJdET5ejV1HLnhxA3DUnaUnranXh3CX8GP/u8rKULtyAenrIND+exdPJLsKBgRyLas3Ctxp6z54r
X-Received: by 2002:a65:65c9:: with SMTP id y9mr905371pgv.438.1542183883409;
        Wed, 14 Nov 2018 00:24:43 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542183883; cv=none;
        d=google.com; s=arc-20160816;
        b=BMfuDGRwjfGaZPsS4COjabdoQtVypqzr/sDe2gro4qsXreSVkDsfM8DioTSTq709EM
         Q0TybuvEnl8yD1nYFIg4X1gydd1V7YKyIDbvjP0ZBExHVFqvkHYgXiSnEUj1nJPugibY
         02tTpidO9qsngxRY0OC2S7wJEyNugiloX6E4wtzGyM7jboC/WqcOT+7m4oi4rROZnbuX
         XhHfZ93bLDu/PMIZwWNNDYP14fXua0gyNShb5pmE/BfumgmOaUExW2b5sdkhWUEcBr2Q
         GFbaD4+IiL465o/P/zYGpkzRSQCfK605Gf6eMQ6BycWAMU2aIHQuLY/eSYGmtQ79G7pA
         lzKQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=6iiZhnsTIA890bDANYe2+fOHO2h+BmoVqAV+BY7NjkI=;
        b=zfqV3Fo2NRhdyYqw7JBi33CV07mTXYz9CHil+Q/oAUfEmgekFxhpzBEV9yLy896Ydr
         B6Lt5ZHqADozmpWBr3uW23NfRyef3HFYCr2uUI9nnyDtMHx4jmBI67P/PUxMvYwd6JfH
         O52oeDM4zpA8q7mZgQ3W3HTX602PiVMEr6mtewa/2ZP5rtIOw2ujGfM4ytIy5pGHW7dC
         27thUGhJ0vFK1M1mK36wsozJrSQhG4jQuBUqW8UmnbxBadx9yZ0trB2ONBrj/JQmGyCl
         iIZNu+V8ZK8J9MsvEZJ86Bmp9x8fs2gMQOlf0ULbQDu882+EyfBREWzuEXcp/+jGJBOG
         V4sw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@infradead.org header.s=bombadil.20170209 header.b=EQbcvOzf;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l11-v6si23640961plt.5.2018.11.14.00.24.28;
        Wed, 14 Nov 2018 00:24:43 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732685AbeKNS0Q (ORCPT <rfc822;zhaoweiliew@gmail.com>
        + 99 others); Wed, 14 Nov 2018 13:26:16 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:49514 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731357AbeKNS0J (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 13:26:09 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
        MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
        :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
        :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=6iiZhnsTIA890bDANYe2+fOHO2h+BmoVqAV+BY7NjkI=; b=EQbcvOzf3Hrm6M/5y1z7QUZHht
        g6nYi5rzFWDnAilOuS8Cn0DepU919xwDz5nos62an0OK9+eFbs4hTw9Uw4BhEUMCz5PbkqzpEjiCU
        82pWWu3bDx2ms6cm3yz3YDXWlYfLmRvemPpGeLOyKNAMshfIAUtNHSvt1709CInVGBX1tXj/fmtiL
        RJUnOZif3fUTfSqXKuOprFLj8PBr39uw3Gj3X3jJ3YnnDxIJQeHLnfAblFa2s6oEsDTwHEUwrXuDQ
        H5TUo5U8w/otLvcP9cKg+t1Ar8PNb1LyhAn6+aGLZXtZHXW2PpbfePtysUpgLGBwcEbOYYOsdTVsp
        p3Y/fe0w==;
Received: from 089144211136.atnat0020.highway.a1.net ([89.144.211.136] helo=localhost)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gMqSg-0004qX-Mc; Wed, 14 Nov 2018 08:23:47 +0000
From: Christoph Hellwig <hch@lst.de>
To: Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>
Cc: linuxppc-dev@lists.ozlabs.org, iommu@lists.linux-foundation.org,
        linux-mm@kvack.org, linux-arch@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: [SPAM] [PATCH 11/34] powerpc/pseries: use the generic iommu
 bypass code
Date: Wed, 14 Nov 2018 09:22:51 +0100
Message-Id: <20181114082314.8965-12-hch@lst.de>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181114082314.8965-1-hch@lst.de>
References: <20181114082314.8965-1-hch@lst.de>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3WUXM2+tbvHI9AA--.2494S3
Authentication-Results: mail-app2; spf=permerror smtp.mail=liker.xu+ca
	f_=xuliker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXF4DZr17CF4ruw48XFW5KFg_yoW7JF1Up3
	W3KFyfJFWxKryrKFn2vF1UC34Yv390v3yxt3yxK3WSk343uryYqa1FyF1Sk3WfGrWv9F1S
	g3s0qw1rZr4UWFUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW8ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Cr1j6rxdMxvI
	42IY6I8E87Iv6xkF7I0E14v26F4UJVW0owCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE0xvYzxyl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AK
	xVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrx
	kI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuYvjxU
	kbdbUUUUU

Use the generic iommu bypass code instead of overriding set_dma_mask.

Signed-off-by: Christoph Hellwig <hch@lst.de>
---
 arch/powerpc/platforms/pseries/iommu.c | 100 +++++++------------------
 1 file changed, 27 insertions(+), 73 deletions(-)

diff --git a/arch/powerpc/platforms/pseries/iommu.c b/arch/powerpc/platforms/pseries/iommu.c
index da5716de7f4c..8965d174c53b 100644
--- a/arch/powerpc/platforms/pseries/iommu.c
+++ b/arch/powerpc/platforms/pseries/iommu.c
@@ -973,7 +973,7 @@ static LIST_HEAD(failed_ddw_pdn_list);
  * pdn: the parent pe node with the ibm,dma_window property
  * Future: also check if we can remap the base window for our base page size
  *
- * returns the dma offset for use by dma_set_mask
+ * returns the dma offset for use by the direct mapped DMA code.
  */
 static u64 enable_ddw(struct pci_dev *dev, struct device_node *pdn)
 {
@@ -1193,87 +1193,40 @@ static void pci_dma_dev_setup_pSeriesLP(struct pci_dev *dev)
 	iommu_add_device(&dev->dev);
 }
 
-static int dma_set_mask_pSeriesLP(struct device *dev, u64 dma_mask)
+static bool iommu_bypass_supported_pSeriesLP(struct pci_dev *pdev, u64 dma_mask)
 {
-	bool ddw_enabled = false;
-	struct device_node *pdn, *dn;
-	struct pci_dev *pdev;
+	struct device_node *dn = pci_device_to_OF_node(pdev), *pdn;
 	const __be32 *dma_window = NULL;
 	u64 dma_offset;
 
-	if (!dev->dma_mask)
-		return -EIO;
-
-	if (!dev_is_pci(dev))
-		goto check_mask;
-
-	pdev = to_pci_dev(dev);
-
 	/* only attempt to use a new window if 64-bit DMA is requested */
-	if (!disable_ddw && dma_mask == DMA_BIT_MASK(64)) {
-		dn = pci_device_to_OF_node(pdev);
-		dev_dbg(dev, "node is %pOF\n", dn);
+	if (dma_mask < DMA_BIT_MASK(64))
+		return false;
 
-		/*
-		 * the device tree might contain the dma-window properties
-		 * per-device and not necessarily for the bus. So we need to
-		 * search upwards in the tree until we either hit a dma-window
-		 * property, OR find a parent with a table already allocated.
-		 */
-		for (pdn = dn; pdn && PCI_DN(pdn) && !PCI_DN(pdn)->table_group;
-				pdn = pdn->parent) {
-			dma_window = of_get_property(pdn, "ibm,dma-window", NULL);
-			if (dma_window)
-				break;
-		}
-		if (pdn && PCI_DN(pdn)) {
-			dma_offset = enable_ddw(pdev, pdn);
-			if (dma_offset != 0) {
-				dev_info(dev, "Using 64-bit direct DMA at offset %llx\n", dma_offset);
-				set_dma_offset(dev, dma_offset);
-				set_dma_ops(dev, &dma_nommu_ops);
-				ddw_enabled = true;
-			}
-		}
-	}
+	dev_dbg(&pdev->dev, "node is %pOF\n", dn);
 
-	/* fall back on iommu ops */
-	if (!ddw_enabled && get_dma_ops(dev) != &dma_iommu_ops) {
-		dev_info(dev, "Restoring 32-bit DMA via iommu\n");
-		set_dma_ops(dev, &dma_iommu_ops);
+	/*
+	 * the device tree might contain the dma-window properties
+	 * per-device and not necessarily for the bus. So we need to
+	 * search upwards in the tree until we either hit a dma-window
+	 * property, OR find a parent with a table already allocated.
+	 */
+	for (pdn = dn; pdn && PCI_DN(pdn) && !PCI_DN(pdn)->table_group;
+			pdn = pdn->parent) {
+		dma_window = of_get_property(pdn, "ibm,dma-window", NULL);
+		if (dma_window)
+			break;
 	}
 
-check_mask:
-	if (!dma_supported(dev, dma_mask))
-		return -EIO;
-
-	*dev->dma_mask = dma_mask;
-	return 0;
-}
-
-static u64 dma_get_required_mask_pSeriesLP(struct device *dev)
-{
-	if (!dev->dma_mask)
-		return 0;
-
-	if (!disable_ddw && dev_is_pci(dev)) {
-		struct pci_dev *pdev = to_pci_dev(dev);
-		struct device_node *dn;
-
-		dn = pci_device_to_OF_node(pdev);
-
-		/* search upwards for ibm,dma-window */
-		for (; dn && PCI_DN(dn) && !PCI_DN(dn)->table_group;
-				dn = dn->parent)
-			if (of_get_property(dn, "ibm,dma-window", NULL))
-				break;
-		/* if there is a ibm,ddw-applicable property require 64 bits */
-		if (dn && PCI_DN(dn) &&
-				of_get_property(dn, "ibm,ddw-applicable", NULL))
-			return DMA_BIT_MASK(64);
+	if (pdn && PCI_DN(pdn)) {
+		dma_offset = enable_ddw(pdev, pdn);
+		if (dma_offset != 0) {
+			set_dma_offset(&pdev->dev, dma_offset);
+			return true;
+		}
 	}
 
-	return dma_iommu_get_required_mask(dev);
+	return false;
 }
 
 static int iommu_mem_notifier(struct notifier_block *nb, unsigned long action,
@@ -1368,8 +1321,9 @@ void iommu_init_early_pSeries(void)
 	if (firmware_has_feature(FW_FEATURE_LPAR)) {
 		pseries_pci_controller_ops.dma_bus_setup = pci_dma_bus_setup_pSeriesLP;
 		pseries_pci_controller_ops.dma_dev_setup = pci_dma_dev_setup_pSeriesLP;
-		ppc_md.dma_set_mask = dma_set_mask_pSeriesLP;
-		ppc_md.dma_get_required_mask = dma_get_required_mask_pSeriesLP;
+		if (!disable_ddw)
+			pseries_pci_controller_ops.iommu_bypass_supported =
+				iommu_bypass_supported_pSeriesLP;
 	} else {
 		pseries_pci_controller_ops.dma_bus_setup = pci_dma_bus_setup_pSeries;
 		pseries_pci_controller_ops.dma_dev_setup = pci_dma_dev_setup_pSeries;
-- 
2.19.1
