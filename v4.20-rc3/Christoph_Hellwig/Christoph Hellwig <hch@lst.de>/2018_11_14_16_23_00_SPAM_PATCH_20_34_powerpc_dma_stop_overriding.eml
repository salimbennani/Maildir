Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 14 Nov 2018 14:44:28 -0000
Received: from icoremail.net (unknown [209.85.214.170])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+5B3Otbo4GOAQ--.42820S3;
	Wed, 14 Nov 2018 16:26:42 +0800 (CST)
Received: from mail-pl1-f170.google.com (unknown [209.85.214.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXekZA3OtbC3U9AA--.27965S3;
	Wed, 14 Nov 2018 16:26:40 +0800 (CST)
Received: by mail-pl1-f170.google.com with SMTP id p4-v6so7426039plo.5
        for <xuliker@zju.edu.cn>; Wed, 14 Nov 2018 00:26:40 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=sgycRywl73c/AroG5BSSenZlXmmcNpjp3p0TNsnuMSs=;
        b=JuNW22XoUe+DbM0bZGR0VwFx9FoWocUSbiB8RkCWXd8CfvfUZkpPdUn7GNozVQyT4g
         nQRlaXFr48MoUkn4xox2vcBgS2JjrV06QsGPYllu5mrXdZLNpiJrcrD1GVp5AyU9wOn4
         HJI3W6+/okiWcrBobF5ziI6zJbKlyj0EWi+SfoW9jQPCZ/ZHKej1u+LUBF+lhpl0ZDZe
         Vwa3HWL3TPqg8ZoJFLZrw5PzsvrRMIxlCY29xuEnDVTnrhP9cOmZs+EhbIItPmt4zIPW
         zbNnEvo+iH3Dx9wyTXlJdtGFrDu/ECWDEaEKZ6ixMKRpaLDxq3LPhOMFT3zm6/TaGW4b
         9iEA==
X-Gm-Message-State: AGRZ1gLV8Zuq7cVl/+bARGTcfhTc+A2fkX9IDacvd/N6XpTiAoQQ74or
	iU/z2BYgcRVyTeVJz+BoX63+jMq3YA7Gpr1hUKrhS453Upjx0h73Kw==
X-Received: by 2002:a17:902:50e3:: with SMTP id c32-v6mr969532plj.39.1542184000267;
        Wed, 14 Nov 2018 00:26:40 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5523857pjt;
        Wed, 14 Nov 2018 00:26:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5ev6huz3tQNxWsfeyusDXSFRVRS/Y3WE9VGGIu3o/cdslMf++C1sCdCE20CQQvmyghSXj+5
X-Received: by 2002:a62:647:: with SMTP id 68-v6mr1049451pfg.42.1542183998849;
        Wed, 14 Nov 2018 00:26:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542183998; cv=none;
        d=google.com; s=arc-20160816;
        b=ZGd18JNSCvTVi+hz8sePJmldTofMspCFEx0Vesk+H5GN88BbdCmaMc00D2JT16bMXx
         JgrltRltDL3iuKPBe9ruak9eaav+6vo5A1F5pMJobX9pmlEBwvhREk8DcQw8yDTo+gOi
         RRx2HMYY7S1XCsErQ4QIn3uB1P0nFu/BeSGtEYY4vQO7F1iy5W6yvbQ9ZjdZRi2auwsV
         H7Y91xgG1fnHdlvV4nKBf0d6rKSjkRU2crojmx/Bg1lHFaUKe+qDmnjsp4da+SHFYeZ/
         ZnDdjjTmH1ciyZbA7daxqSardpLWCvevbg5fEEZ1gMpW33Lr734jMVZABPKk1di78it1
         BYqA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=sgycRywl73c/AroG5BSSenZlXmmcNpjp3p0TNsnuMSs=;
        b=kiOyzD9OofqjOcYqTIi3iorQzrNeszcMSUhLvGUBYeqUCs5NI0nKmNZcHyEr0MME+p
         qV7hyZRXbe/3DEachbx0CCQXw5AVG2WCNAqO4WYTuRy2q4TjefjoYJp5Jr7vlxDEuvOn
         5KlQJ2W0oE08mC/O//PkTbU2c+hawTKqDM7JwcM8gZSHzl5ope7RBavU2D9oNY5wNYAi
         /EdxJVxl6Km+flZE0ZAcaPSLyhsXKyxmsduxkQ9Mz9oejFV7qVf9UnXemo8g4bHR91ab
         5unapNwL5MGcpZ2QwTxHzFPBqzZfD9SGsKJIBk9ePEDknX2913R7ynKiU2gB1Tfg+yRG
         IiMQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@infradead.org header.s=bombadil.20170209 header.b="Ryoq/5cN";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w64-v6si24585000pfw.101.2018.11.14.00.26.24;
        Wed, 14 Nov 2018 00:26:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732658AbeKNS1y (ORCPT <rfc822;zhaoweiliew@gmail.com>
        + 99 others); Wed, 14 Nov 2018 13:27:54 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:49916 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727558AbeKNS0s (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 14 Nov 2018 13:26:48 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
        MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
        :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
        :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=sgycRywl73c/AroG5BSSenZlXmmcNpjp3p0TNsnuMSs=; b=Ryoq/5cNj1gbfW4UM6xIAqMpbr
        38PmzFU9xi0nn60IXEOOmqxe9UDvnh8VQ7egUnZgOWun+nIq78GtFeNIQHBxZedZb7bbP2IA6VPbx
        q/sZtMXBzd4SqRqCBMVvfHwQxsTCanhfDNvLNI18ZeW17nFCi5YfN71MELjtP18w9+bWxa/xf2tOL
        TfRoVeYx5IopJbCkscipc/ut8mrq632aDmgGTPkOy75l2Cm4SZ2A+L0/Q6dMyKCCDCVE5FXyteOvz
        LRcZW2hJAQA4KrCqImEo9ImTUuVfjop1oKvE3ETkuuSwSQykkjSYy6oEbh/PGa9Opue0Xdi5u15yq
        ShuqhUaA==;
Received: from 089144211136.atnat0020.highway.a1.net ([89.144.211.136] helo=localhost)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gMqT5-0004zB-CI; Wed, 14 Nov 2018 08:24:11 +0000
From: Christoph Hellwig <hch@lst.de>
To: Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>
Cc: linuxppc-dev@lists.ozlabs.org, iommu@lists.linux-foundation.org,
        linux-mm@kvack.org, linux-arch@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: [SPAM] [PATCH 20/34] powerpc/dma: stop overriding
 dma_get_required_mask
Date: Wed, 14 Nov 2018 09:23:00 +0100
Message-Id: <20181114082314.8965-21-hch@lst.de>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181114082314.8965-1-hch@lst.de>
References: <20181114082314.8965-1-hch@lst.de>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXekZA3OtbC3U9AA--.27965S3
Authentication-Results: mail-app2; spf=permerror smtp.mail=liker.xu+ca
	f_=xuliker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZrWUWF1ktFy7Gr4fZr1DKFg_yoW7Jw4xp3
	Z5AFnakrW0grWFya40y3ZrCFy5twsa9ry3t3y8K3s0k3ZFvFyDXFs8AF1xAr1kXFWqqF10
	gFZxGr1FvFnrWaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_GFylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26ryj6F1UMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCY
	IxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExV
	AvwVAq07x20xyl4x8a62IYc4C5MxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_GrUvcSsGvfC2KfnxnUUI43ZEXa7I
	UY0zuJUUUUU==

The ppc_md and pci_controller_ops methods are unused now and can be
removed.  The dma_nommu implementation is generic to the generic one
except for using max_pfn instead of calling into the memblock API,
and all other dma_map_ops instances implement a method of their own.

Signed-off-by: Christoph Hellwig <hch@lst.de>
---
 arch/powerpc/include/asm/device.h      |  2 --
 arch/powerpc/include/asm/dma-mapping.h |  2 --
 arch/powerpc/include/asm/machdep.h     |  2 --
 arch/powerpc/include/asm/pci-bridge.h  |  1 -
 arch/powerpc/kernel/dma.c              | 30 --------------------------
 drivers/base/platform.c                |  2 --
 6 files changed, 39 deletions(-)

diff --git a/arch/powerpc/include/asm/device.h b/arch/powerpc/include/asm/device.h
index 1aa53318b4bc..3814e1c2d4bc 100644
--- a/arch/powerpc/include/asm/device.h
+++ b/arch/powerpc/include/asm/device.h
@@ -59,6 +59,4 @@ struct pdev_archdata {
 	u64 dma_mask;
 };
 
-#define ARCH_HAS_DMA_GET_REQUIRED_MASK
-
 #endif /* _ASM_POWERPC_DEVICE_H */
diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h
index 140ce5ad3120..e5ee4ac97c14 100644
--- a/arch/powerpc/include/asm/dma-mapping.h
+++ b/arch/powerpc/include/asm/dma-mapping.h
@@ -113,7 +113,5 @@ static inline void set_dma_offset(struct device *dev, dma_addr_t off)
 #define HAVE_ARCH_DMA_SET_MASK 1
 extern int dma_set_mask(struct device *dev, u64 dma_mask);
 
-extern u64 __dma_get_required_mask(struct device *dev);
-
 #endif /* __KERNEL__ */
 #endif	/* _ASM_DMA_MAPPING_H */
diff --git a/arch/powerpc/include/asm/machdep.h b/arch/powerpc/include/asm/machdep.h
index 8311869005fa..7b70dcbce1b9 100644
--- a/arch/powerpc/include/asm/machdep.h
+++ b/arch/powerpc/include/asm/machdep.h
@@ -47,9 +47,7 @@ struct machdep_calls {
 #endif
 #endif /* CONFIG_PPC64 */
 
-	/* Platform set_dma_mask and dma_get_required_mask overrides */
 	int		(*dma_set_mask)(struct device *dev, u64 dma_mask);
-	u64		(*dma_get_required_mask)(struct device *dev);
 
 	int		(*probe)(void);
 	void		(*setup_arch)(void); /* Optional, may be NULL */
diff --git a/arch/powerpc/include/asm/pci-bridge.h b/arch/powerpc/include/asm/pci-bridge.h
index 5c7a1e7ffc8a..aace7033fa02 100644
--- a/arch/powerpc/include/asm/pci-bridge.h
+++ b/arch/powerpc/include/asm/pci-bridge.h
@@ -46,7 +46,6 @@ struct pci_controller_ops {
 #endif
 
 	int             (*dma_set_mask)(struct pci_dev *pdev, u64 dma_mask);
-	u64		(*dma_get_required_mask)(struct pci_dev *pdev);
 
 	void		(*shutdown)(struct pci_controller *hose);
 };
diff --git a/arch/powerpc/kernel/dma.c b/arch/powerpc/kernel/dma.c
index 6c368b6820bb..154e1cdae7f9 100644
--- a/arch/powerpc/kernel/dma.c
+++ b/arch/powerpc/kernel/dma.c
@@ -246,7 +246,6 @@ const struct dma_map_ops dma_nommu_ops = {
 	.map_sg				= dma_nommu_map_sg,
 	.dma_supported			= dma_nommu_dma_supported,
 	.map_page			= dma_nommu_map_page,
-	.get_required_mask		= dma_nommu_get_required_mask,
 #ifdef CONFIG_NOT_COHERENT_CACHE
 	.sync_single_for_cpu 		= dma_nommu_sync_single,
 	.sync_single_for_device 	= dma_nommu_sync_single,
@@ -294,35 +293,6 @@ int dma_set_mask(struct device *dev, u64 dma_mask)
 }
 EXPORT_SYMBOL(dma_set_mask);
 
-u64 __dma_get_required_mask(struct device *dev)
-{
-	const struct dma_map_ops *dma_ops = get_dma_ops(dev);
-
-	if (unlikely(dma_ops == NULL))
-		return 0;
-
-	if (dma_ops->get_required_mask)
-		return dma_ops->get_required_mask(dev);
-
-	return DMA_BIT_MASK(8 * sizeof(dma_addr_t));
-}
-
-u64 dma_get_required_mask(struct device *dev)
-{
-	if (ppc_md.dma_get_required_mask)
-		return ppc_md.dma_get_required_mask(dev);
-
-	if (dev_is_pci(dev)) {
-		struct pci_dev *pdev = to_pci_dev(dev);
-		struct pci_controller *phb = pci_bus_to_host(pdev->bus);
-		if (phb->controller_ops.dma_get_required_mask)
-			return phb->controller_ops.dma_get_required_mask(pdev);
-	}
-
-	return __dma_get_required_mask(dev);
-}
-EXPORT_SYMBOL_GPL(dma_get_required_mask);
-
 static int __init dma_init(void)
 {
 #ifdef CONFIG_IBMVIO
diff --git a/drivers/base/platform.c b/drivers/base/platform.c
index 41b91af95afb..648b6213e322 100644
--- a/drivers/base/platform.c
+++ b/drivers/base/platform.c
@@ -1179,7 +1179,6 @@ int __init platform_bus_init(void)
 	return error;
 }
 
-#ifndef ARCH_HAS_DMA_GET_REQUIRED_MASK
 static u64 dma_default_get_required_mask(struct device *dev)
 {
 	u32 low_totalram = ((max_pfn - 1) << PAGE_SHIFT);
@@ -1208,7 +1207,6 @@ u64 dma_get_required_mask(struct device *dev)
 	return dma_default_get_required_mask(dev);
 }
 EXPORT_SYMBOL_GPL(dma_get_required_mask);
-#endif
 
 static __initdata LIST_HEAD(early_platform_driver_list);
 static __initdata LIST_HEAD(early_platform_device_list);
-- 
2.19.1
