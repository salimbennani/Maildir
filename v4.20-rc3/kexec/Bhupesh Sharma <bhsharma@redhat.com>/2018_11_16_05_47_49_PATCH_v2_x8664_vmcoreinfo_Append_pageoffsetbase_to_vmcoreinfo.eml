Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 00:30:07 -0000
Received: from icoremail.net (unknown [209.85.210.176])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv36s6e1bQE+dAQ--.47837S3;
	Fri, 16 Nov 2018 05:48:29 +0800 (CST)
Received: from mail-pf1-f176.google.com (unknown [209.85.210.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnDUmq6e1b5b1FAA--.1133S3;
	Fri, 16 Nov 2018 05:48:26 +0800 (CST)
Received: by mail-pf1-f176.google.com with SMTP id u3-v6so7644000pfm.4
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 13:48:26 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=5lAnJ4Odmi3MOIXfrC7f3waSSM1TNTIQKK1l8SjDyk4=;
        b=MJs4H+/uqVRB4fyKoidSfIRmn0aU/aF09OAZxfN5QyIBn3k3rmqFk3hUysDCBqcM64
         Er4q5BdWgAgP7a6sCB5NNMpGhpB4kodfBBKy7poS6ty5MPVLBWl+cYr44AlJYo6fh1Ao
         GG51IwRCOLxIGtlpGFdAm5D8wrnKM7/LGwlJyT51v8tnYH/BemonN6v+7zWheoPM/hYa
         2eQnz/X+jfqWnQ2wy92kvRvv4vgjUrDJSG6NIYuNRRE4dzbIQqiF5JoPpvqvYEUr0JZ/
         kMuFAKnT51ocWpkC0uOExQvCnyZ0djafEkdn4HyBhUTO60SwpHqvUTzz0mBd5Z1zjLPc
         Jn8A==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gKraBylw0tnatf7QdcjXUESApahKrL53+OJVp4K9IndpwNXJMrM
	HlzUD9oVjHMDxamNu3sLePnflbNaTNz4NdilQ1OJzKfyXq3alpOEfQ==
X-Received: by 2002:a63:2315:: with SMTP id j21mr7461198pgj.297.1542318506507;
        Thu, 15 Nov 2018 13:48:26 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1114056pju;
        Thu, 15 Nov 2018 13:48:25 -0800 (PST)
X-Google-Smtp-Source: AJdET5d1fOFghFDysLoUZCMEl2RUz9tgm1YTDxu2ygGnxSsxBnLrH6q7Nc0dGlUUDKZ1fj63p7sj
X-Received: by 2002:a63:b4c:: with SMTP id a12mr7533720pgl.131.1542318505225;
        Thu, 15 Nov 2018 13:48:25 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542318505; cv=none;
        d=google.com; s=arc-20160816;
        b=0GoquyeEjccF7yKP3nIq+HIT8qB1Gwpfcqz9UO/y0XkrQ4jyLjzdQ1ts5rLuZ3bNIn
         Mt92On6tqBmiOl46f/lHjhXylHr+KPP+8eQD4DtYNp5oBtBVy2c5F0jqENJwvjsF1H5F
         MWDUiIbwrg40OQpDUPKl/avTdPrLQ0GvJ9TdOk0cYyhe/OrGqdSQcDnd/r/4rfJUioML
         UJPdu9T/MFg0LPrpS0NepWKYaJvbaRCkFSGYv35/pfHB9QwG0zrBb2AYcPybmP4eiAcU
         7GxOsL1fSZL2//gObmSe6pvCxPy2pBNJK81ksDRNL9vNBJjkDqSEYaQt3o9G8hwmqxeW
         f9pA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=5lAnJ4Odmi3MOIXfrC7f3waSSM1TNTIQKK1l8SjDyk4=;
        b=BDK3wvV4PEeA+jsUiVZgYM15k1VnP4+nhmFS30mZhlqLwMDUm6pjfiDn20PN1u8s4M
         +/l4HNykUOk0u/0Lck8IH6rKznTTPLg65vCfYJ/XwiBBYDHF+kUGRLThiM+uC4HT/cq2
         i0fuvGmnccYmJbvFVaGn3KZfoYL3eg9/MKVWxwgQGdFVLAykzmTfxXW67DnSApLhW5n0
         Ot6eL27+F5KgVQfDhoq9gfp+nuUM7fX9nR9AtPECzs8Nt6XMyafrKN9+LUYwIiuCznXy
         3koc3wc42DvJ9z9YQjNDypw8d9AnuSC3o1jUrkugSICPshuAGUyusRcgD+q2OJr84b5q
         S47Q==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id x4-v6si28149491plv.129.2018.11.15.13.48.10;
        Thu, 15 Nov 2018 13:48:25 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726301AbeKPH5j (ORCPT <rfc822;kristofer.rye@gmail.com>
        + 99 others); Fri, 16 Nov 2018 02:57:39 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:41938 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725856AbeKPH5i (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 02:57:38 -0500
Received: by mail-pf1-f195.google.com with SMTP id e22-v6so10315463pfn.8
        for <linux-kernel@vger.kernel.org>; Thu, 15 Nov 2018 13:48:04 -0800 (PST)
X-Received: by 2002:a62:995c:: with SMTP id d89-v6mr8169321pfe.11.1542318483718;
        Thu, 15 Nov 2018 13:48:03 -0800 (PST)
Received: from localhost ([122.177.154.119])
        by smtp.gmail.com with ESMTPSA id z7sm17940256pga.6.2018.11.15.13.48.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 15 Nov 2018 13:48:02 -0800 (PST)
From: Bhupesh Sharma <bhsharma@redhat.com>
To: linux-kernel@vger.kernel.org
Cc: bhupesh.linux@gmail.com, bhsharma@redhat.com,
        Boris Petkov <bp@alien8.de>, Baoquan He <bhe@redhat.com>,
        Ingo Molnar <mingo@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Kazuhito Hagio <k-hagio@ab.jp.nec.com>,
        Dave Anderson <anderson@redhat.com>,
        James Morse <james.morse@arm.com>,
        Omar Sandoval <osandov@fb.com>, x86@kernel.org,
        kexec@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Subject: [PATCH v2] x86_64, vmcoreinfo: Append 'page_offset_base' to vmcoreinfo
Date: Fri, 16 Nov 2018 03:17:49 +0530
Message-Id: <1542318469-13699-1-git-send-email-bhsharma@redhat.com>
X-Mailer: git-send-email 2.7.4
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnDUmq6e1b5b1FAA--.1133S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XF1kZr4DtFy7Zw4DXw4ruFg_yoW7Gw13pa
	y3Kr12yrn8Jr1Fyw1kWF4kuryfuw4DWayjgr1DCas5Z3Z0kry2qrW8Za4xZa4UCrWqkF1f
	Zrs8WFyDuw4UXaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6F4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1j6r1xMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxU
	djQDDUUUU

x86_64 kernel uses 'page_offset_base' variable to point to the
start of direct mapping of all physical memory. This variable
is also updated for KASLR boot cases, so this can be exported
via vmcoreinfo as a standard ABI between kernel and user-space,
to allow user-space utilities to use the same for calculating
the start of direct mapping of all physical memory.

'arch/x86/kernel/head64.c' sets the same as:
   unsigned long page_offset_base __ro_after_init = __PAGE_OFFSET_BASE_L4;

and also uses the same to indicate the base of KASLR regions on x86_64:
   static __initdata struct kaslr_memory_region {
	    unsigned long *base;
	        unsigned long size_tb;
   } kaslr_regions[] = {
	    { &page_offset_base, 0 },
   .. snip ..

Adding 'page_offset_base' to the vmcoreinfo can be specially useful for
live-debugging of a running kernel via user-space utilities
like makedumpfile (see [1]).

Recently, I saw an issue with the 'makedumpfile' utility (see [2] for
details), whose live debugging feature is broken with newer kernels
(I tested the same with 4.19-rc8+ kernel), as KCORE_REMAP segments were
added to kcore, thus leading to an additional sections in the same, and
makedumpfile is not longer able to determine the start of direct
mapping of all physical memory, as it relies on traversing the PT_LOAD
segments inside kcore and using the last PT_LOAD segment
to determine the start of direct mapping.

Such user-space issues can be resolved if the user-space code instead
uses a standard ABI to read the kernel exposed machine specific
variables. With the kernel commit 23c85094fe1895caefdd
["proc/kcore: add vmcoreinfo note to /proc/kcore"]), it is
now possible to use the vmcoreinfo present inside kcore as the standard
ABI which can be used by the user-space utilities for reading
the machine specific information (and hence for debugging a
live kernel).

User-space utilities like makedumpfile, kexec-tools and crash
are either already using this ABI or are discussing patches
which look to add the same feature. This helps in simplifying the
overall code and also in reducing code-rewrite across the
user-space utilities for getting values of these kernel
symbols/variables.

Accordingly this patch allows appending 'page_offset_base' for
x86_64 platforms to vmcoreinfo, so that user-space tools can use the
same as a standard interface to determine the start of direct mapping
of all physical memory.

Testing:
-------
 - I tested this patch (rebased on 'linux-next') on a x86_64 machine
   using the modified 'makedumpfile' user-space code (see [3] for my
   github tree which contains the same) for determining how many pages
   are dumpable when different dump_level is specified (which is
   one use-case of live-debugging via 'makedumpfile').
 - I tested both the KASLR and non-KASLR boot cases with this patch.
 - Here is one sample log (for KASLR boot case) on my x86_64 machine:

   < snip..>
   The kernel doesn't support mmap(),read() will be used instead.

   TYPE		PAGES			EXCLUDABLE	DESCRIPTION
   ----------------------------------------------------------------------
   ZERO		21299           	yes		Pages filled
   with zero
   NON_PRI_CACHE	91785           	yes		Cache
   pages without private flag
   PRI_CACHE	1               	yes		Cache pages with
   private flag
   USER		14057           	yes		User process
   pages
   FREE		740346          	yes		Free pages
   KERN_DATA	58152           	no		Dumpable kernel
   data

   page size:		4096
   Total pages on system:	925640
   Total size on system:	3791421440       Byte

[1]. MAN pages -> MAKEDUMPFILE(8) and CRASH(8)
[2]. makedumpfile issue with latest kernels -> http://lists.infradead.org/pipermail/kexec/2018-October/021769.html
[3]. https://github.com/bhupesh-sharma/makedumpfile/tree/add-page-offset-base-to-vmcore-v1

Cc: Boris Petkov <bp@alien8.de>
Cc: Baoquan He <bhe@redhat.com>
Cc: Ingo Molnar <mingo@kernel.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Kazuhito Hagio <k-hagio@ab.jp.nec.com>
Cc: Dave Anderson <anderson@redhat.com>
Cc: James Morse <james.morse@arm.com>
Cc: Omar Sandoval <osandov@fb.com>
Cc: x86@kernel.org
Cc: kexec@lists.infradead.org
Cc: linux-arm-kernel@lists.infradead.org
Signed-off-by: Bhupesh Sharma <bhsharma@redhat.com>
---
Changes since v1:
 - Fixed the build issue reported by build bot and tested this version
   with 'make allmodconfig'.
 - Reworded most of the commit log to explain the intent behind the
   patch.

 arch/x86/kernel/machine_kexec_64.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/arch/x86/kernel/machine_kexec_64.c b/arch/x86/kernel/machine_kexec_64.c
index 4c8acdfdc5a7..6161d77c5bfb 100644
--- a/arch/x86/kernel/machine_kexec_64.c
+++ b/arch/x86/kernel/machine_kexec_64.c
@@ -356,6 +356,9 @@ void arch_crash_save_vmcoreinfo(void)
 	VMCOREINFO_SYMBOL(init_top_pgt);
 	vmcoreinfo_append_str("NUMBER(pgtable_l5_enabled)=%d\n",
 			pgtable_l5_enabled());
+#ifdef CONFIG_RANDOMIZE_BASE
+	VMCOREINFO_NUMBER(page_offset_base);
+#endif
 
 #ifdef CONFIG_NUMA
 	VMCOREINFO_SYMBOL(node_data);
-- 
2.7.4
