Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 08:31:57 -0000
Received: from icoremail.net (unknown [209.85.210.174])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv9Jlbu5buMagAQ--.47958S3;
	Fri, 16 Nov 2018 15:14:45 +0800 (CST)
Received: from mail-pf1-f174.google.com (unknown [209.85.210.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHJEBjbu5bwQNIAA--.6076S3;
	Fri, 16 Nov 2018 15:14:43 +0800 (CST)
Received: by mail-pf1-f174.google.com with SMTP id c72so6278739pfc.6
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 23:14:43 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-filter:dkim-signature
         :mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:sender:precedence:list-id;
        bh=VwAIx3Eo70JuM1DePhqDSXkBGEkG28c2bnoZdHYjPng=;
        b=YJuUhzkr2vpWMCkcOJv6etFOumut3Vq2MqwWfXUGktHeNYWjeHfKUANWvkzaOWnUGt
         IRuXJX2jXdqYESoUDwEy47d0RlxA8RCst1e570xV8W/g8GX8rKcDHGybSWSqBY0qNYM3
         SIElPEgXjsFi1cTT8dgkK8YzNelkLxT5qK4JxHMDUHKYdw0tKvdntqKGiogmW+PVj1Nf
         qUtIAEu0pxFRKIS7MJpde50KwBvTlqzXuYw47GuJ+ioj79FVnsvIYcI3J0+YW2pKSfo3
         D0qJiUtAwGpUvCZuiLiWQhv6LdV786yFYB4bLSP165zaenfUY+18Y+IHaxAdwqtn5Z3S
         xomw==
X-Gm-Message-State: AGRZ1gKKQSxeTW/MnPvd+0SQJNr+bC+M6vsQDRmZIxwK3FRv4YiohtSP
	Fjqq5oPfEAPMBufTJnXGUUlXyaAmBaVrBozya/d07cdiXlT4REI=
X-Received: by 2002:a63:1e17:: with SMTP id e23mr8821334pge.130.1542352483542;
        Thu, 15 Nov 2018 23:14:43 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp71613pju;
        Thu, 15 Nov 2018 23:14:42 -0800 (PST)
X-Google-Smtp-Source: AJdET5fqybk1O2p5XnMYtW8wR+rlG7FpENzD06jhwFqrgs0Y+pBj1KsBNkpV3YUS2Qr/MyxE0lTl
X-Received: by 2002:a17:902:bc4c:: with SMTP id t12mr9394008plz.45.1542352482607;
        Thu, 15 Nov 2018 23:14:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542352482; cv=none;
        d=google.com; s=arc-20160816;
        b=yNRZXkTuyW37l9BIHNpPOBfvkdPOknHg6S64h6oax5DhL8HheQ3OcF0LtCG4QzY+vH
         pw25bocygYB/lAE/823LBCqM4dLsRYzUv/XxZ9Xo74wK7obXxJjD6AIzo8TJBvB0Cafn
         oTsrAQKM8oJ9VpSXI5lcyM7KfLhlHcPMh5A9N4hyBIbvPBSmu2R1TBnLnN6j2CUasexY
         zsKSC31x0ANqW9hRLfuyRQb5CdiQVlATHhRog26EUE+5TadHLNYjpMlN2jH7WJq7usfp
         Keb6ClAVggl6H35T7jNgOYthe0DXox/h6szPYKScwh0R7XyOjoZFU4F4fnOObHFe6WSp
         sDfg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature:dkim-filter;
        bh=VwAIx3Eo70JuM1DePhqDSXkBGEkG28c2bnoZdHYjPng=;
        b=XbWIyeSuhgvjxlcPwkePoffxpOkOevS8fYoLaZczS3eTBGP5P5VtqUJOG+D8wrdbqr
         iYjmKAdcH04IAyMD3nAyrJgeMaMxfHDHEYbKxJHJWyjCPB8ABFyww7IErb1QZynfMCXx
         MkL1DzpLylZ0ohFaL/LzMSEnDhnpQMxpFf76zNGOtPEjUbIztOJBPVqi9WRbeb6/k76Z
         26jOcRpEZq3u4akbMTqHje9dBb0OJEmvdXLQjdI87IMiIJxV0gcA4UHt4vN4hmliEd+L
         7+eAn6pevt69lTpn3X8ZA0miclAmLNc7jVtarENd/uG6xR8ZRsc90CZGShY+O/z3/o8g
         QnvA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@nifty.com header.s=dec2015msa header.b=il4+Fhki;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 131-v6si32110457pfx.213.2018.11.15.23.14.26;
        Thu, 15 Nov 2018 23:14:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389357AbeKPRZa (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 12:25:30 -0500
Received: from conssluserg-01.nifty.com ([210.131.2.80]:24450 "EHLO
        conssluserg-01.nifty.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727380AbeKPRZ3 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 12:25:29 -0500
Received: from mail-vs1-f52.google.com (mail-vs1-f52.google.com [209.85.217.52]) (authenticated)
        by conssluserg-01.nifty.com with ESMTP id wAG7E9MA025107;
        Fri, 16 Nov 2018 16:14:10 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conssluserg-01.nifty.com wAG7E9MA025107
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1542352450;
        bh=VwAIx3Eo70JuM1DePhqDSXkBGEkG28c2bnoZdHYjPng=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=il4+Fhki/Ny6Y2kEvKB4T7WQIBHEQ5GAChASHid4ELRP68uEW0tnEVegmfNLVuE33
         TbiUOGOJZaINu4Dqa0TNgVJfP1kGNDKR0l//CElICazrF2VD7BdTplW4qb0yJYd4BI
         LfdZ3CMNwzHDR3jb64I39P7DQJwsdwVDQM6bMA5/cQVqW+OmNuo61UmCIFXhknfUtL
         Kjv5vNeDjVB2CHUajzWyA5htGPmZMKDfcX+MlvOKA50KmcXLOf2tl7NqOCgJhyPjg9
         Dl8+XiYnOUximc2zTtsOesi/x4n2GzQ/UARHwGPhCJCC9Na+DBquuB5+y8SkYIZNki
         Fkz1mX59RCWMA==
X-Nifty-SrcIP: [209.85.217.52]
Received: by mail-vs1-f52.google.com with SMTP id p74so13227762vsc.0;
        Thu, 15 Nov 2018 23:14:10 -0800 (PST)
X-Received: by 2002:a67:385a:: with SMTP id f87mr4064061vsa.179.1542352449248;
 Thu, 15 Nov 2018 23:14:09 -0800 (PST)
MIME-Version: 1.0
References: <1542270435-11181-1-git-send-email-yamada.masahiro@socionext.com>
 <1542270435-11181-5-git-send-email-yamada.masahiro@socionext.com> <nycvar.YSQ.7.76.1811152346510.1993@knanqh.ubzr>
In-Reply-To: <nycvar.YSQ.7.76.1811152346510.1993@knanqh.ubzr>
From: Masahiro Yamada <yamada.masahiro@socionext.com>
Date: Fri, 16 Nov 2018 16:13:33 +0900
X-Gmail-Original-Message-ID: <CAK7LNATT7PYvH-z572MGSjXbCybAW0TcNebz9CgGM4J07aMOvw@mail.gmail.com>
Message-ID: <CAK7LNATT7PYvH-z572MGSjXbCybAW0TcNebz9CgGM4J07aMOvw@mail.gmail.com>
Subject: Re: [PATCH 4/8] kbuild: simplify dependency generation for CONFIG_TRIM_UNUSED_KSYMS
To: Nicolas Pitre <nicolas.pitre@linaro.org>
Cc: Linux Kbuild mailing list <linux-kbuild@vger.kernel.org>,
        Sam Ravnborg <sam@ravnborg.org>,
        Rasmus Villemoes <linux@rasmusvillemoes.dk>,
        linux-arch <linux-arch@vger.kernel.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Michael Ellerman <mpe@ellerman.id.au>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Michal Marek <michal.lkml@markovi.net>,
        Will Deacon <will.deacon@arm.com>,
        Ingo Molnar <mingo@kernel.org>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHJEBjbu5bwQNIAA--.6076S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAw17Ar47ur1Duw4xuFWUtwb_yoWrKr17pa
	ykJayUKF4DJry7Jw1Ivw429a1jgwsagF4IgFyrWrWDAr1DtFs2grnavr1Yg34q9F40kFWj
	yrZI9ay3AFWktFDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4xMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07bPpBhU
	UUUU=

On Fri, Nov 16, 2018 at 2:13 PM Nicolas Pitre <nicolas.pitre@linaro.org> wrote:
>
> On Thu, 15 Nov 2018, Masahiro Yamada wrote:
>
> > My main motivation of this commit is to clean up scripts/Kbuild.include
> > and scripts/Makefile.build.
> >
> > Currently, CONFIG_TRIM_UNUSED_KSYMS works with a tricky gimmick;
> > possibly exported symbols are detected by letting $(CPP) replace
> > EXPORT_SYMBOL* with a special string '=== __KSYM_*===', which is
> > post-processed by sed, and passed to fixdep. The extra preprocessing
> > is costly, and hacking cmd_and_fixdep is ugly.
> >
> > I came up with a new way to find exported symbols; insert a dummy
> > symbol __ksym_marker_* to each potentially exported symbol. Those
> > dummy symbols are picked up by $(NM), post-processed by sed, then
> > appended to .*.cmd files. I collected the post-process part to a
> > new shell script scripts/gen_ksymdeps.sh for readability. The dummy
> > symbols are put into the .discard.* section so that the linker
> > script rips them off the final vmlinux or modules.
>
> Brilliant!  I really like it.
>
> Minor comments below.
>
> > diff --git a/include/asm-generic/export.h b/include/asm-generic/export.h
> > index 4d73e6e..294d6ae 100644
> > --- a/include/asm-generic/export.h
> > +++ b/include/asm-generic/export.h
> > @@ -59,16 +59,19 @@ __kcrctab_\name:
> >  .endm
> >  #undef __put
> >
> > -#if defined(__KSYM_DEPS__)
> > -
> > -#define __EXPORT_SYMBOL(sym, val, sec)       === __KSYM_##sym ===
> > -
> > -#elif defined(CONFIG_TRIM_UNUSED_KSYMS)
> > +#if defined(CONFIG_TRIM_UNUSED_KSYMS)
> >
> >  #include <linux/kconfig.h>
> >  #include <generated/autoksyms.h>
> >
> > +.macro __ksym_marker sym
> > +     .section ".discard.ksym","a"
> > +__ksym_marker_\sym:
> > +      .previous
>
> Does this work as intended? I have vague memories about having problems
> with sections being discarded when they don't allocate any space.

What I can tell is, this patch produces the same size kernel
(after dropping debug info by 'strip' command).


> > +.endm
> > +
> >  #define __EXPORT_SYMBOL(sym, val, sec)                               \
> > +     __ksym_marker sym;                                      \
> >       __cond_export_sym(sym, val, sec, __is_defined(__KSYM_##sym))
> >  #define __cond_export_sym(sym, val, sec, conf)                       \
> >       ___cond_export_sym(sym, val, sec, conf)
> > diff --git a/include/linux/export.h b/include/linux/export.h
> > index ce764a5..0413a3d 100644
> > --- a/include/linux/export.h
> > +++ b/include/linux/export.h
> > @@ -92,22 +92,22 @@ struct kernel_symbol {
> >   */
> >  #define __EXPORT_SYMBOL(sym, sec)
> >
> > -#elif defined(__KSYM_DEPS__)
> > +#elif defined(CONFIG_TRIM_UNUSED_KSYMS)
> > +
> > +#include <generated/autoksyms.h>
> >
> >  /*
> >   * For fine grained build dependencies, we want to tell the build system
> >   * about each possible exported symbol even if they're not actually exported.
> > - * We use a string pattern that is unlikely to be valid code that the build
> > - * system filters out from the preprocessor output (see ksym_dep_filter
> > - * in scripts/Kbuild.include).
> > + * We use a symbol pattern __ksym_marker_<symbol> that the build system filters
> > + * from the $(NM) output (see scripts/gen_ksymdep.sh). These symbols are
> > + * discarded in the final link stage.
> >   */
> > -#define __EXPORT_SYMBOL(sym, sec)    === __KSYM_##sym ===
> > -
> > -#elif defined(CONFIG_TRIM_UNUSED_KSYMS)
> > -
> > -#include <generated/autoksyms.h>
> > +#define __ksym_marker(sym)   \
> > +     static int __ksym_marker_##sym[0] __section(".discard.ksym") __used
>
> Even if this is discarded during the final link, maybe this could save
> a tiny amount of disk space by using a char instead?


I am afraid you missed '[0]' after the symbol name.
This is actually zero-length array.

No memory allocated for this dummy section.

As far as I tested, this is working.





> > diff --git a/scripts/Makefile.build b/scripts/Makefile.build
> > index 7f3ca6e..e5ba9b1 100644
> > --- a/scripts/Makefile.build
> > +++ b/scripts/Makefile.build
> > @@ -254,9 +254,18 @@ objtool_dep = $(objtool_obj)                                     \
> >             $(wildcard include/config/orc/unwinder.h          \
> >                        include/config/stack/validation.h)
> >
> > +ifdef CONFIG_TRIM_UNUSED_KSYMS
> > +cmd_gen_ksymdeps = \
> > +     $(CONFIG_SHELL) $(srctree)/scripts/gen_ksymdeps.sh $@ > $(dot-target).tmp; \
> > +     cat $(dot-target).tmp >> $(dot-target).cmd; \
> > +     rm -f $(dot-target).tmp;
>
> Why don't you append to $(dot-target).cmd directly?


If scripts/gen_ksymdeps.sh fails for some reasons,
it will error out immediately thanks to 'set -e' flag.

Appending incomplete portion might end up with a corrupted .*.cmd file.

Probably, that would not happen, but I just wanted to ensure it.




>
> Nicolas



--
Best Regards
Masahiro Yamada
