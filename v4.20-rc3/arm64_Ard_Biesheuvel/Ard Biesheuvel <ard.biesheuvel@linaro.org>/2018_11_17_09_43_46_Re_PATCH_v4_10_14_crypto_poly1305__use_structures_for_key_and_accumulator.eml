Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 17 Nov 2018 03:15:51 -0000
Received: from icoremail.net (unknown [209.85.215.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH8KPcu9bXLCmAQ--.49781S3;
	Sat, 17 Nov 2018 09:44:48 +0800 (CST)
Received: from mail-pg1-f181.google.com (unknown [209.85.215.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3XUmNcu9bK89LAA--.3709S3;
	Sat, 17 Nov 2018 09:44:45 +0800 (CST)
Received: by mail-pg1-f181.google.com with SMTP id n2so4166512pgm.3
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 17:44:45 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc
         :content-transfer-encoding:sender:precedence:list-id;
        bh=reuX2Q8Cvblb2xw9l3m0U+1Y4ltN5kAXvU7GJOAr6dU=;
        b=ZGXSWjwaM1LEWyYxv68X1bU1g/xoriIxlL3NVU9RtsXbgYa6tE1iZPdHR9cDzzlURD
         z/jO4duFqd1gCZa3H75VIyD5UaCYqLd7P9ztxJVdSXpi8rZjJSsCcTeJjGZFgdpZy7z3
         vg9aX6r6png2Xj0Bb1dALCwHyWiwKvqymj8jPh9jStIUTG/dhIPNqFRdNQ5BgGd591vY
         3l4qiFFpMSFaqaAYMU6pnKj8E+3RoNkKuk8iIxYHJ457q8Ag7k0izAYgpufdKhtqi+YP
         QAiJxA4E5wNJgVGSluhcG4b33rwq0YxWOlWjaYltLZ2qUHWcw4mXBPt6CGD6eiHCqq4H
         gjIg==
X-Gm-Message-State: AGRZ1gIH9JAOjING3Q6bNjVkNzE/VHnOCyD0QTK2+b+LKGZzpj0Il/LP
	z8Xmhe/P8EwGFoU/dYTPLcefuP8zvBoQVJx9zRU1ico4o1iEKec=
X-Received: by 2002:a63:2c0e:: with SMTP id s14mr12332059pgs.132.1542419085068;
        Fri, 16 Nov 2018 17:44:45 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp34342pju;
        Fri, 16 Nov 2018 17:44:44 -0800 (PST)
X-Google-Smtp-Source: AJdET5dJUKlVz4SrLDbqCck53zbU1t4EgFLOFMShApozEG0xHEDjyjdfcyE6buB4X3DslDW0/0zU
X-Received: by 2002:a62:870e:: with SMTP id i14mr11098838pfe.41.1542419083974;
        Fri, 16 Nov 2018 17:44:43 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542419083; cv=none;
        d=google.com; s=arc-20160816;
        b=TmxcDBJZcYX+mDbv9uUDnzDFaoha/HszHvcltV+05kbj+Wt9Jg1FYL3q/MXLbo7HD/
         zsRFfR2wmz4kpHLEqqHfAfrvPCLjN+V45gfoFSEht7vtDeEaV1mubvKEi+lucxNWu3Y/
         6xrMaVfw3G+YloJMkuBDrsQU4GWRQuWkupAzLQxMEyfSJN5Vm/enE9SuKKf48QffVxp1
         o+mQi7W0t4dJ312aZ/PNfOjyDxRx4HJcaiaBycPUIC/7FjsEX2+5lDkMYLhN6etydGgR
         qnSb9AalVdf24sn7iiBiAKqqsUFrIykzCeuUwwNuaHNh72Mh1zc+lhgM4Rc4GaqVrdol
         BFwg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:cc:to:subject
         :message-id:date:from:in-reply-to:references:mime-version
         :dkim-signature;
        bh=reuX2Q8Cvblb2xw9l3m0U+1Y4ltN5kAXvU7GJOAr6dU=;
        b=OEXiEdAVgvwy0MBdY1rb+Nf08z9ZdzOtmR+nuZNhkcQyrUQIfyh2Yjj7PCOoEIlUkF
         O1sbCglvCoJhljXiA2CaU+lX8c9wBhe3qy8RQP3o/Qss5DOHSwjJ/zstbh5+nHVDaGJA
         Q3l4rhohBRr/FRbbCB+yxJ2OJ+dZ9Ewuvg8RPrGUy6KAeOHw7bB6o56pmNcAvBtg9Eiv
         IieVjn87iChPDRKFZQcJOvr651onEZtcMx1XMySExT6CsK7L4hlqzt9U2g2VHOLF8fPM
         r7SALSEQlw9TC1/K94Psj/MgSegq14XIoD8B27K2EQsHB9Hf2J1ra5u0eqLRVz9F4Qkg
         f69Q==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=TLYPtuDr;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id a59-v6si30000225plc.48.2018.11.16.17.44.06;
        Fri, 16 Nov 2018 17:44:43 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729890AbeKQL6r (ORCPT <rfc822;xjxyklwx@gmail.com> + 99 others);
        Sat, 17 Nov 2018 06:58:47 -0500
Received: from mail-io1-f67.google.com ([209.85.166.67]:43792 "EHLO
        mail-io1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729736AbeKQL6r (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 17 Nov 2018 06:58:47 -0500
Received: by mail-io1-f67.google.com with SMTP id g8so1747029iop.10
        for <linux-kernel@vger.kernel.org>; Fri, 16 Nov 2018 17:43:58 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=reuX2Q8Cvblb2xw9l3m0U+1Y4ltN5kAXvU7GJOAr6dU=;
        b=TLYPtuDr1ouHzsq7LS/IViJ1nFE/d0GA5SwlpBrLQOea7SICBJl/MdhbYssKX/gBLi
         gY728qSilLf82BPyhnQbkijrYc2rLO59gbBsvlrGoxnHwqkwiBrpweNCIj6VWrZaP4TV
         AX19cQA86mPsNt+BHvnu31+unY2imrX+l69Pc=
X-Received: by 2002:a6b:5d01:: with SMTP id r1mr10229796iob.170.1542419037778;
 Fri, 16 Nov 2018 17:43:57 -0800 (PST)
MIME-Version: 1.0
References: <20181117012631.23528-1-ebiggers@kernel.org> <20181117012631.23528-11-ebiggers@kernel.org>
In-Reply-To: <20181117012631.23528-11-ebiggers@kernel.org>
From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Fri, 16 Nov 2018 17:43:46 -0800
Message-ID: <CAKv+Gu8=VXiK8MJSB=Np1jmj7=K1cfGJdSkfAR-Supkw5aZTvA@mail.gmail.com>
Subject: Re: [PATCH v4 10/14] crypto: poly1305 - use structures for key and accumulator
To: Eric Biggers <ebiggers@kernel.org>
Cc: "open list:HARDWARE RANDOM NUMBER GENERATOR CORE" 
        <linux-crypto@vger.kernel.org>,
        Herbert Xu <herbert@gondor.apana.org.au>,
        linux-fscrypt@vger.kernel.org,
        linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Paul Crowley <paulcrowley@google.com>,
        Greg Kaiser <gkaiser@google.com>,
        "Jason A. Donenfeld" <Jason@zx2c4.com>,
        Samuel Neves <samuel.c.p.neves@gmail.com>,
        Tomer Ashur <tomer.ashur@esat.kuleuven.be>,
        Eric Biggers <ebiggers@google.com>,
        Martin Willi <martin@strongswan.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3XUmNcu9bK89LAA--.3709S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3JF4DCrWfCr1DZFW3Gr13XFb_yoWxCr43pr
	15u34Yqr9xZa4Uu3WDW3W7JFyYvrs2g3y8tF43J348Jw1UZr13trZrtryrK3Z8Jr93Ar93
	uF4vya9xCr4xAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VWkMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY
	6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOKi
	iPUUUUU==

On Fri, 16 Nov 2018 at 17:29, Eric Biggers <ebiggers@kernel.org> wrote:
>
> From: Eric Biggers <ebiggers@google.com>
>
> In preparation for exposing a low-level Poly1305 API which implements
> the =CE=B5-almost-=E2=88=86-universal (=CE=B5A=E2=88=86U) hash function u=
nderlying the Poly1305
> MAC and supports block-aligned inputs only, create structures
> poly1305_key and poly1305_state which hold the limbs of the Poly1305
> "r" key and accumulator, respectively.
>
> These structures could actually have the same type (e.g. poly1305_val),
> but different types are preferable, to prevent misuse.
>
> Acked-by: Martin Willi <martin@strongswan.org>
> Signed-off-by: Eric Biggers <ebiggers@google.com>

Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>

> ---
>  arch/x86/crypto/poly1305_glue.c | 20 +++++++------
>  crypto/poly1305_generic.c       | 52 ++++++++++++++++-----------------
>  include/crypto/poly1305.h       | 12 ++++++--
>  3 files changed, 47 insertions(+), 37 deletions(-)
>
> diff --git a/arch/x86/crypto/poly1305_glue.c b/arch/x86/crypto/poly1305_g=
lue.c
> index f012b7e28ad1..88cc01506c84 100644
> --- a/arch/x86/crypto/poly1305_glue.c
> +++ b/arch/x86/crypto/poly1305_glue.c
> @@ -83,35 +83,37 @@ static unsigned int poly1305_simd_blocks(struct poly1=
305_desc_ctx *dctx,
>         if (poly1305_use_avx2 && srclen >=3D POLY1305_BLOCK_SIZE * 4) {
>                 if (unlikely(!sctx->wset)) {
>                         if (!sctx->uset) {
> -                               memcpy(sctx->u, dctx->r, sizeof(sctx->u))=
;
> -                               poly1305_simd_mult(sctx->u, dctx->r);
> +                               memcpy(sctx->u, dctx->r.r, sizeof(sctx->u=
));
> +                               poly1305_simd_mult(sctx->u, dctx->r.r);
>                                 sctx->uset =3D true;
>                         }
>                         memcpy(sctx->u + 5, sctx->u, sizeof(sctx->u));
> -                       poly1305_simd_mult(sctx->u + 5, dctx->r);
> +                       poly1305_simd_mult(sctx->u + 5, dctx->r.r);
>                         memcpy(sctx->u + 10, sctx->u + 5, sizeof(sctx->u)=
);
> -                       poly1305_simd_mult(sctx->u + 10, dctx->r);
> +                       poly1305_simd_mult(sctx->u + 10, dctx->r.r);
>                         sctx->wset =3D true;
>                 }
>                 blocks =3D srclen / (POLY1305_BLOCK_SIZE * 4);
> -               poly1305_4block_avx2(dctx->h, src, dctx->r, blocks, sctx-=
>u);
> +               poly1305_4block_avx2(dctx->h.h, src, dctx->r.r, blocks,
> +                                    sctx->u);
>                 src +=3D POLY1305_BLOCK_SIZE * 4 * blocks;
>                 srclen -=3D POLY1305_BLOCK_SIZE * 4 * blocks;
>         }
>  #endif
>         if (likely(srclen >=3D POLY1305_BLOCK_SIZE * 2)) {
>                 if (unlikely(!sctx->uset)) {
> -                       memcpy(sctx->u, dctx->r, sizeof(sctx->u));
> -                       poly1305_simd_mult(sctx->u, dctx->r);
> +                       memcpy(sctx->u, dctx->r.r, sizeof(sctx->u));
> +                       poly1305_simd_mult(sctx->u, dctx->r.r);
>                         sctx->uset =3D true;
>                 }
>                 blocks =3D srclen / (POLY1305_BLOCK_SIZE * 2);
> -               poly1305_2block_sse2(dctx->h, src, dctx->r, blocks, sctx-=
>u);
> +               poly1305_2block_sse2(dctx->h.h, src, dctx->r.r, blocks,
> +                                    sctx->u);
>                 src +=3D POLY1305_BLOCK_SIZE * 2 * blocks;
>                 srclen -=3D POLY1305_BLOCK_SIZE * 2 * blocks;
>         }
>         if (srclen >=3D POLY1305_BLOCK_SIZE) {
> -               poly1305_block_sse2(dctx->h, src, dctx->r, 1);
> +               poly1305_block_sse2(dctx->h.h, src, dctx->r.r, 1);
>                 srclen -=3D POLY1305_BLOCK_SIZE;
>         }
>         return srclen;
> diff --git a/crypto/poly1305_generic.c b/crypto/poly1305_generic.c
> index 47d3a6b83931..a23173f351b7 100644
> --- a/crypto/poly1305_generic.c
> +++ b/crypto/poly1305_generic.c
> @@ -38,7 +38,7 @@ int crypto_poly1305_init(struct shash_desc *desc)
>  {
>         struct poly1305_desc_ctx *dctx =3D shash_desc_ctx(desc);
>
> -       memset(dctx->h, 0, sizeof(dctx->h));
> +       memset(dctx->h.h, 0, sizeof(dctx->h.h));
>         dctx->buflen =3D 0;
>         dctx->rset =3D false;
>         dctx->sset =3D false;
> @@ -50,11 +50,11 @@ EXPORT_SYMBOL_GPL(crypto_poly1305_init);
>  static void poly1305_setrkey(struct poly1305_desc_ctx *dctx, const u8 *k=
ey)
>  {
>         /* r &=3D 0xffffffc0ffffffc0ffffffc0fffffff */
> -       dctx->r[0] =3D (get_unaligned_le32(key +  0) >> 0) & 0x3ffffff;
> -       dctx->r[1] =3D (get_unaligned_le32(key +  3) >> 2) & 0x3ffff03;
> -       dctx->r[2] =3D (get_unaligned_le32(key +  6) >> 4) & 0x3ffc0ff;
> -       dctx->r[3] =3D (get_unaligned_le32(key +  9) >> 6) & 0x3f03fff;
> -       dctx->r[4] =3D (get_unaligned_le32(key + 12) >> 8) & 0x00fffff;
> +       dctx->r.r[0] =3D (get_unaligned_le32(key +  0) >> 0) & 0x3ffffff;
> +       dctx->r.r[1] =3D (get_unaligned_le32(key +  3) >> 2) & 0x3ffff03;
> +       dctx->r.r[2] =3D (get_unaligned_le32(key +  6) >> 4) & 0x3ffc0ff;
> +       dctx->r.r[3] =3D (get_unaligned_le32(key +  9) >> 6) & 0x3f03fff;
> +       dctx->r.r[4] =3D (get_unaligned_le32(key + 12) >> 8) & 0x00fffff;
>  }
>
>  static void poly1305_setskey(struct poly1305_desc_ctx *dctx, const u8 *k=
ey)
> @@ -107,22 +107,22 @@ static unsigned int poly1305_blocks(struct poly1305=
_desc_ctx *dctx,
>                 srclen =3D datalen;
>         }
>
> -       r0 =3D dctx->r[0];
> -       r1 =3D dctx->r[1];
> -       r2 =3D dctx->r[2];
> -       r3 =3D dctx->r[3];
> -       r4 =3D dctx->r[4];
> +       r0 =3D dctx->r.r[0];
> +       r1 =3D dctx->r.r[1];
> +       r2 =3D dctx->r.r[2];
> +       r3 =3D dctx->r.r[3];
> +       r4 =3D dctx->r.r[4];
>
>         s1 =3D r1 * 5;
>         s2 =3D r2 * 5;
>         s3 =3D r3 * 5;
>         s4 =3D r4 * 5;
>
> -       h0 =3D dctx->h[0];
> -       h1 =3D dctx->h[1];
> -       h2 =3D dctx->h[2];
> -       h3 =3D dctx->h[3];
> -       h4 =3D dctx->h[4];
> +       h0 =3D dctx->h.h[0];
> +       h1 =3D dctx->h.h[1];
> +       h2 =3D dctx->h.h[2];
> +       h3 =3D dctx->h.h[3];
> +       h4 =3D dctx->h.h[4];
>
>         while (likely(srclen >=3D POLY1305_BLOCK_SIZE)) {
>
> @@ -157,11 +157,11 @@ static unsigned int poly1305_blocks(struct poly1305=
_desc_ctx *dctx,
>                 srclen -=3D POLY1305_BLOCK_SIZE;
>         }
>
> -       dctx->h[0] =3D h0;
> -       dctx->h[1] =3D h1;
> -       dctx->h[2] =3D h2;
> -       dctx->h[3] =3D h3;
> -       dctx->h[4] =3D h4;
> +       dctx->h.h[0] =3D h0;
> +       dctx->h.h[1] =3D h1;
> +       dctx->h.h[2] =3D h2;
> +       dctx->h.h[3] =3D h3;
> +       dctx->h.h[4] =3D h4;
>
>         return srclen;
>  }
> @@ -220,11 +220,11 @@ int crypto_poly1305_final(struct shash_desc *desc, =
u8 *dst)
>         }
>
>         /* fully carry h */
> -       h0 =3D dctx->h[0];
> -       h1 =3D dctx->h[1];
> -       h2 =3D dctx->h[2];
> -       h3 =3D dctx->h[3];
> -       h4 =3D dctx->h[4];
> +       h0 =3D dctx->h.h[0];
> +       h1 =3D dctx->h.h[1];
> +       h2 =3D dctx->h.h[2];
> +       h3 =3D dctx->h.h[3];
> +       h4 =3D dctx->h.h[4];
>
>         h2 +=3D (h1 >> 26);     h1 =3D h1 & 0x3ffffff;
>         h3 +=3D (h2 >> 26);     h2 =3D h2 & 0x3ffffff;
> diff --git a/include/crypto/poly1305.h b/include/crypto/poly1305.h
> index f718a19da82f..493244c46664 100644
> --- a/include/crypto/poly1305.h
> +++ b/include/crypto/poly1305.h
> @@ -13,13 +13,21 @@
>  #define POLY1305_KEY_SIZE      32
>  #define POLY1305_DIGEST_SIZE   16
>
> +struct poly1305_key {
> +       u32 r[5];       /* key, base 2^26 */
> +};
> +
> +struct poly1305_state {
> +       u32 h[5];       /* accumulator, base 2^26 */
> +};
> +
>  struct poly1305_desc_ctx {
>         /* key */
> -       u32 r[5];
> +       struct poly1305_key r;
>         /* finalize key */
>         u32 s[4];
>         /* accumulator */
> -       u32 h[5];
> +       struct poly1305_state h;
>         /* partial buffer */
>         u8 buf[POLY1305_BLOCK_SIZE];
>         /* bytes used in partial buffer */
> --
> 2.19.1.1215.g8438c0b245-goog
>
