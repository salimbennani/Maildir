Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 15:22:02 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgCn33x+h+pbGnWEAQ--.40143S3;
	Tue, 13 Nov 2018 16:12:47 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnADx9h+pbdO42AA--.4257S3;
	Tue, 13 Nov 2018 16:12:45 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id w22-v6so5636450plk.0
        for <xuliker@zju.edu.cn>; Tue, 13 Nov 2018 00:12:45 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:subject:to:cc
         :references:from:message-id:date:user-agent:mime-version:in-reply-to
         :content-language:content-transfer-encoding:sender:precedence
         :list-id;
        bh=3guUA5MzgU4ZBZDtUKaMxOTVGRJneH+l42/+21nWs4M=;
        b=L60xsrv2rFQHcLnVRXOoBavb5qkMKMkoIXRwZyrkbtFJfc7BwuGZPrWYGi7ghwFWeB
         od6v1nIX9pin89Bz5cjg/dDghlrdebbCviDD8TlL8GY6l2eP9ROuHQMEhmbJIz1nVad5
         QNgolkAK6j6lPV+4v2TGAtJ5qWSk7c5Euesdo2xzvl26+yfv5DE6ibg9+sit+wXcK4bK
         PxNSbzVS3oDOfS20BO41TpvJG26lqpsfghLc/zCB6W16Sfh1EeiFWXexETpJZWyvu6vB
         wcjb5pjpkG0O9DRhd09wE8c1ji1/nUBMfObBodW6DOqUa26e6OEAmoKz6DlvOx5yaDax
         doXQ==
X-Gm-Message-State: AGRZ1gIghCMNLNOB+aA91m5LLB5JWIYIc0KpuJao062EXe4/j0Q3TVu+
	7p6uhT79k7iLI1jCdffBjZzFFFmGFrYq39Pgnwtyj54H2q9fG9zPmA==
X-Received: by 2002:a17:902:bd46:: with SMTP id b6mr1272043plx.231.1542096764739;
        Tue, 13 Nov 2018 00:12:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp4174851pjt;
        Tue, 13 Nov 2018 00:12:44 -0800 (PST)
X-Google-Smtp-Source: AJdET5dmt7msDtCOvNv64VROoCDOJjABTZpv8LwAEbIrlUD6RIuR4Whgn03mcQ66ZnLcOXkkFFtV
X-Received: by 2002:a62:6486:: with SMTP id y128-v6mr4302223pfb.76.1542096763987;
        Tue, 13 Nov 2018 00:12:43 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542096763; cv=none;
        d=google.com; s=arc-20160816;
        b=eumgfbQFJ8RBAEdMfBisjICUpw6lw11JMpmPOyjj/SmgdAgkkO6PrX112yNr4iq/UY
         1OWeCPrma7Cmlg3Wlcw5LonG+Dn6XTFeDi4+RdYqaiBup27HFswlsuu2059wgfiiO94g
         6F15e/cq1EIm9hZl6+h5VN5qUevZymC0glv1qtsjYS1dQTd9FNssjz9Xp7gnsvYt3o/B
         8SPGvuJXLWSxbbLcem90PW9jnt2rbVKmx3l1T04DB6uLiMQbMJAbZQjuTunLe+BBom4F
         LAkdu/9KSGBB+pllts3O+vsQux7NXf9atJFngAi+6Ya48skxMAoxhXoKKHvYXXcoImVE
         nDLQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject:dkim-signature;
        bh=3guUA5MzgU4ZBZDtUKaMxOTVGRJneH+l42/+21nWs4M=;
        b=G/PAR96vnKvMhXFOfVeIR+cB6sTE8BS6PaT9FY7YtdXjMS0/nYBqVvlGJSS7WEjfzI
         XWyQyJSk4ttmdyi4Z5oWsUMZ6UzzMvJkzEhs12POj+CgGyRAFDMixcVcrMu4R+9RGV1w
         cRPrZDZ6nXkPB1P78+n5bwkf/GvHMT5P8NMFEUIAkGmdkJokMfToC8mDg3jVjRWE/8xP
         kbFXWrq8C8vBfS2qjKlauoTJUEG9m4LOBbW6CizClz0xgVWJrDp+TcsmT3wrznjwS0bW
         q9WcmupBls1iFUjxgUqjuWPkTFsP8evAGxR00lBe9Fas9DbfsQPrP7bzPNfwezeMYwyn
         E+vg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=ZdjusBXG;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w11-v6si20758053ply.404.2018.11.13.00.12.28;
        Tue, 13 Nov 2018 00:12:43 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731231AbeKMSJS (ORCPT <rfc822;revogelaar@gmail.com>
        + 99 others); Tue, 13 Nov 2018 13:09:18 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:56064 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730998AbeKMSJS (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 13 Nov 2018 13:09:18 -0500
Received: by mail-wm1-f67.google.com with SMTP id i73-v6so5592533wmd.5
        for <linux-kernel@vger.kernel.org>; Tue, 13 Nov 2018 00:12:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=3guUA5MzgU4ZBZDtUKaMxOTVGRJneH+l42/+21nWs4M=;
        b=ZdjusBXGQHm9B6iY9AGlSASHdFAV6Onpydb3ca4ThdMTfjWJjkMEB5iYgBrycX4pXT
         kQSOcXp6I5726geTT4B9AUn0JN3C/FcU4dziMlO4FKJudOcZiETsIOwNZ9YXXeOAqEJZ
         QgyqlkoV/Q+alSUxBdAU0/DWkmVT21mL5pQCg=
X-Received: by 2002:a1c:c902:: with SMTP id f2-v6mr2423672wmb.80.1542096738695;
        Tue, 13 Nov 2018 00:12:18 -0800 (PST)
Received: from [192.168.27.209] ([37.157.136.206])
        by smtp.googlemail.com with ESMTPSA id 78-v6sm3153122wma.30.2018.11.13.00.12.17
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 13 Nov 2018 00:12:17 -0800 (PST)
Subject: Re: [PATCH] media: venus: amend buffer size for bitstream plane
To: mgottam@codeaurora.org
Cc: Tomasz Figa <tfiga@chromium.org>,
        Hans Verkuil <hverkuil@xs4all.nl>,
        Mauro Carvalho Chehab <mchehab@kernel.org>,
        Linux Media Mailing List <linux-media@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-arm-msm <linux-arm-msm@vger.kernel.org>,
        Alexandre Courbot <acourbot@chromium.org>,
        vgarodia@codeaurora.org
References: <1539071530-1441-1-git-send-email-mgottam@codeaurora.org>
 <CAAFQd5BcFr11Hpngpn6hNL91OibAxUv25yh2qMohgfxsKusACw@mail.gmail.com>
 <8fe1d205-c5e7-01a0-9569-d3268911cddd@linaro.org>
 <38dfc098517b3ddb5d96195f2e27429d@codeaurora.org>
From: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Message-ID: <86714c89-20ec-07c8-2569-65e78e8d584d@linaro.org>
Date: Tue, 13 Nov 2018 10:12:16 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <38dfc098517b3ddb5d96195f2e27429d@codeaurora.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnADx9h+pbdO42AA--.4257S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3WryDWry8AFy3Aw1DKF4fAFb_yoW7GF13pr
	18JF4DtryUJF18Jr1Utr1UJry7Jw1UJw1UJr4UJFyUJr1UJr1jqr1jqr1j9r4UJr48Jr1U
	Jr1UJr1UZr1Utr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmvb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r43MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVWUCVW8JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E
	87Iv67AKxVWxJr0_GcWlcIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7V
	AKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j
	6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7
	AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Wr1j6rW3JrUv
	cSsGvfC2KfnxnUUI43ZEXa7IU5m_M3UUUUU==

Hi Malathi,

On 11/13/18 9:28 AM, mgottam@codeaurora.org wrote:
> On 2018-11-12 18:04, Stanimir Varbanov wrote:
>> Hi Tomasz,
>>
>> On 10/23/2018 05:50 AM, Tomasz Figa wrote:
>>> Hi Malathi,
>>>
>>> On Tue, Oct 9, 2018 at 4:58 PM Malathi Gottam
>>> <mgottam@codeaurora.org> wrote:
>>>>
>>>> For lower resolutions, incase of encoder, the compressed
>>>> frame size is more than half of the corresponding input
>>>> YUV. Keep the size as same as YUV considering worst case.
>>>>
>>>> Signed-off-by: Malathi Gottam <mgottam@codeaurora.org>
>>>> ---
>>>>  drivers/media/platform/qcom/venus/helpers.c | 2 +-
>>>>  1 file changed, 1 insertion(+), 1 deletion(-)
>>>>
>>>> diff --git a/drivers/media/platform/qcom/venus/helpers.c
>>>> b/drivers/media/platform/qcom/venus/helpers.c
>>>> index 2679adb..05c5423 100644
>>>> --- a/drivers/media/platform/qcom/venus/helpers.c
>>>> +++ b/drivers/media/platform/qcom/venus/helpers.c
>>>> @@ -649,7 +649,7 @@ u32 venus_helper_get_framesz(u32 v4l2_fmt, u32
>>>> width, u32 height)
>>>>         }
>>>>
>>>>         if (compressed) {
>>>> -               sz = ALIGN(height, 32) * ALIGN(width, 32) * 3 / 2 / 2;
>>>> +               sz = ALIGN(height, 32) * ALIGN(width, 32) * 3 / 2;
>>>>                 return ALIGN(sz, SZ_4K);
>>>>         }
>>>
>>> Note that the driver should not enforce one particular buffer size for
>>> bitstream buffers unless it's a workaround for broken firmware or
>>> hardware. The userspace should be able to select the desired size.
>>
>> Good point! Yes, we have to extend set_fmt to allow bigger sizeimage for
>> the compressed buffers (not only for encoder).
> 
> So Stan you meant to say that we should allow s_fmt to accept client
> specified size?

yes but I do expect:

new_sizeimage = max(user_sizeimage, venus_helper_get_framesz)

and also user_sizeimage should be sanitized.

> If so should we set the inst->input_buf_size here in venc_s_fmt?
> 
> @@ -333,10 +333,10 @@static const struct venus_format *
> venc_try_fmt_common(struct venus_inst *inst, struct v4l2_format *f)
> 
>         pixmp->num_planes = fmt->num_planes;
>         pixmp->flags = 0;
> -
> -       pfmt[0].sizeimage = venus_helper_get_framesz(pixmp->pixelformat,
> -                                                    pixmp->width,
> -                                                    pixmp->height);
> +       if (!pfmt[0].sizeimage)
> +               pfmt[0].sizeimage =
> venus_helper_get_framesz(pixmp->pixelformat,
> +                                                            pixmp->width,
> +                                                           
> pixmp->height);

yes, but please make

pfmt[0].sizeimage = max(pfmt[0].sizeimage, venus_helper_get_framesz)

and IMO this should be only for CAPTURE queue i.e. inst->output_buf_size

I'm still not sure do we need it for OUTPUT encoder queue.

> 
>         if (f->type == V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE)
>                 pfmt[0].bytesperline = ALIGN(pixmp->width, 128);
> @@ -387,6 +387,7 @@ static int venc_s_fmt(struct file *file, void *fh,
> struct v4l2_format *f)
>         venc_try_fmt_common(inst, &format);
> 
>         if (f->type == V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE) {
> +               inst->input_buf_size = pixmp->plane_fmt[0].sizeimage;
>                 inst->out_width = format.fmt.pix_mp.width;
>                 inst->out_height = format.fmt.pix_mp.height;
> 
> Similar implementation is already handled in case of decoder.
> 
> Then in queue setup, we can compare this against calculated size to
> obtain final buffer size
> 
> @@ -899,7 +900,8 @@ static int venc_queue_setup(struct vb2_queue *q,
>                 sizes[0] = venus_helper_get_framesz(inst->fmt_out->pixfmt,
>                                                     inst->width,
>                                                     inst->height);
> -               inst->input_buf_size = sizes[0];
> +               if(inst->input_buf_size < sizes[0])
> +                       inst->input_buf_size = sizes[0];
>                 break;
> 
> I hope this meets are requirements.

-- 
regards,
Stan
