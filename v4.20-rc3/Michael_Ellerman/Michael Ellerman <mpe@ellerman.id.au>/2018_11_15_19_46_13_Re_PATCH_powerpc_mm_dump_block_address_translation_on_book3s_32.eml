Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 15 Nov 2018 14:04:17 -0000
Received: from icoremail.net (unknown [209.85.210.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX9PgXe1bw6yZAQ--.45401S3;
	Thu, 15 Nov 2018 19:52:01 +0800 (CST)
Received: from mail-pf1-f181.google.com (unknown [209.85.210.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnoEytXO1bEqZDAA--.9376S3;
	Thu, 15 Nov 2018 19:46:53 +0800 (CST)
Received: by mail-pf1-f181.google.com with SMTP id v68-v6so9596666pfk.0
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 03:46:53 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:in-reply-to:references:date:message-id
         :mime-version:sender:precedence:list-id;
        bh=E6eN7qblHplrCe9+uVa+0Sk+6nhxmcUbOTqYzTTJWFY=;
        b=nqz0e+x+414n9+3vEQBDQin1LRFiDB/l3U2SLxHHlQSwy2TBiNmuF5DjX134edDsu1
         X3LDs61H94af10NUFlrtLrz1QUBnn9GGC552N+hVG4p7jk6CCZEEb9ghbsJsXnAJ7C9I
         9h9CNRaYMvpxbUjtkhvODKfA+IvRIE7Zmq4zLch4+lUrkszJvaaSqomjt4NS+Kz/bqL7
         KQUMTNsEZ39CcEkESWYAOIPFfZJ/yr3qz+hjI8SUZHPsuK0YRpkZbZwamQgu0i7Xbs1w
         eip1xFWEvk6Wmx0gre9tJw2+w0m8sngXvFGUSDKdPMmTyKBUJhFG/AyxYnNLDTD/7Uu4
         iclA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKBNssivLoYeyTV09ipLaELlPLB+Htrl6g2UPa1amk8nBlsCpIT
	8cnob6zBHjiiy+ng2EKiNYyz57Pn7IVJ4ifnW9wjXi8FEVVhK9YCLw==
X-Received: by 2002:a65:66ce:: with SMTP id c14mr5439458pgw.450.1542282413392;
        Thu, 15 Nov 2018 03:46:53 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp450080pju;
        Thu, 15 Nov 2018 03:46:52 -0800 (PST)
X-Google-Smtp-Source: AJdET5cJiiK3MFEnlCwbtfccp5Tq6GkEEjTHK00p1A6zu73ZsX9nOWr+B5iDwZLNVRxurdFCzQ8/
X-Received: by 2002:a63:5765:: with SMTP id h37mr5548395pgm.423.1542282411967;
        Thu, 15 Nov 2018 03:46:51 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542282411; cv=none;
        d=google.com; s=arc-20160816;
        b=Ph3iyABebn/2J2wXMmvGWRKA0Oq90QZNAkXmvTCJhq4+z+PswP1o1YiGN8truAmcJv
         eBGUkHqEmHDlFG4S6rlmRqwWJERQuD2v+rT0Nf8/WEyerfvrtE5TB7L3slrCx8yio/El
         87aPLGbpOsr6hfcREJ2M3LWNvw8N2NnEQUMco3Jw4BwxwhEbmfwZuG57o1m3BY91cNgH
         8l2rnSyUwWpqsXpvh/QuSuwoCEEn9BSYZuKiOGjZRjqkdVpaC2ETCrvU7FocAcEMA8am
         TYFZzCypMwjfx3ybOlDUs7PNUTqqlvt82dTf3HdZg4WG3Qy3PCMIlBTIShr98hNw22n9
         oZ6g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:message-id:date:references
         :in-reply-to:subject:cc:to:from;
        bh=E6eN7qblHplrCe9+uVa+0Sk+6nhxmcUbOTqYzTTJWFY=;
        b=s5YtEXLI+mnRguhBV9gY2+Gtzqctkz7MkbXDPXHV+CfpXiSvVcgksxAYVv6+JguvEC
         dtBAP8/O/1ChPBG2PCfaOZsQ4D153m/aG8+/3Xu5DfpLDzeAtGu/SZ0Sz/tmhG4nRcWy
         cQGUqnT6NwbrKcdBNcH+GcjsjWNzDEQBFQSlPUpEutIoYo/FVK4puBD7Kwn2TQ+VQzNF
         MY8HPHXVjOALFVrXmcfgptDIj1W7TSEN+YbdsTb63wAm4AdhbJY5/F9mH8MWCoD1eB40
         HkLSnEW2K6QBrOM/hgVsvbmELpnhxKrP8/wAh9jSkcrinvjSo8s3tZp4otEu7DEBV0/U
         xWvw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k18si26568060pgf.97.2018.11.15.03.46.37;
        Thu, 15 Nov 2018 03:46:51 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388107AbeKOVxs (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Thu, 15 Nov 2018 16:53:48 -0500
Received: from ozlabs.org ([203.11.71.1]:42769 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728931AbeKOVxs (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 15 Nov 2018 16:53:48 -0500
Received: from authenticated.ozlabs.org (localhost [127.0.0.1])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ozlabs.org (Postfix) with ESMTPSA id 42wfhQ1Dg8z9s1c;
        Thu, 15 Nov 2018 22:46:14 +1100 (AEDT)
From: Michael Ellerman <mpe@ellerman.id.au>
To: Christophe Leroy <christophe.leroy@c-s.fr>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>, npiggin@gmail.com,
        rashmicy@gmail.com
Cc: linux-kernel@vger.kernel.org, linuxppc-dev@lists.ozlabs.org
Subject: Re: [PATCH] powerpc/mm: dump block address translation on book3s/32
In-Reply-To: <26cc609706833f78e3195e3d35c0372b2f40cae3.1542181167.git.christophe.leroy@c-s.fr>
References: <26cc609706833f78e3195e3d35c0372b2f40cae3.1542181167.git.christophe.leroy@c-s.fr>
Date: Thu, 15 Nov 2018 22:46:13 +1100
Message-ID: <878t1uva0q.fsf@concordia.ellerman.id.au>
MIME-Version: 1.0
Content-Type: text/plain
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnoEytXO1bEqZDAA--.9376S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3WryfKr4UCFWDtry8Xr17Awb_yoWxuw45pa
	s8Wrs8CrZ7tr1xtF1IkrnxXFnYgFs3Jrn0q3yDXrWvvr1rJan3Ar4kWr1fXF47Grsayr4S
	qFs8urZxK39rG3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4kMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07beXdUU
	UUUU=

Christophe Leroy <christophe.leroy@c-s.fr> writes:

> This patch adds a debugfs file to dump block address translation:
>
> ~# cat /sys/kernel/debug/block_address_translation

My instinct is it should be in /sys/kernel/debug/powerpc. But I guess
the other page table dump files are not.

> Instruction Block Address Translations:
> 0:         -
> 1:         -
> 2: 0xc0000000-0xcfffffff 0x00000000 Kernel EXEC coherent
> 3: 0xd0000000-0xdfffffff 0x10000000 Kernel EXEC coherent
> 4:         -
> 5:         -
> 6:         -
> 7:         -
>
> Data Block Address Translations:
> 0:         -
> 1:         -
> 2: 0xc0000000-0xcfffffff 0x00000000 Kernel RW coherent
> 3: 0xd0000000-0xdfffffff 0x10000000 Kernel RW coherent
> 4:         -
> 5:         -
> 6:         -
> 7:         -
>
> Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
> ---
>  Tested on mpc8321 aka 603
>  Please review/test the 601 part
>
>  arch/powerpc/mm/Makefile    |   2 +-
>  arch/powerpc/mm/dump_bats.c | 176 ++++++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 177 insertions(+), 1 deletion(-)
>  create mode 100644 arch/powerpc/mm/dump_bats.c
>
> diff --git a/arch/powerpc/mm/Makefile b/arch/powerpc/mm/Makefile
> index ca96e7be4d0e..2adad10b5856 100644
> --- a/arch/powerpc/mm/Makefile
> +++ b/arch/powerpc/mm/Makefile
> @@ -47,7 +47,7 @@ ifdef CONFIG_PPC_PTDUMP
>  obj-$(CONFIG_4xx)		+= dump_linuxpagetables-generic.o
>  obj-$(CONFIG_PPC_8xx)		+= dump_linuxpagetables-8xx.o
>  obj-$(CONFIG_PPC_BOOK3E_MMU)	+= dump_linuxpagetables-generic.o
> -obj-$(CONFIG_PPC_BOOK3S_32)	+= dump_linuxpagetables-generic.o
> +obj-$(CONFIG_PPC_BOOK3S_32)	+= dump_linuxpagetables-generic.o dump_bats.o

BOOK3S_32 covers quite a lot of CPUs.

But below the only check is that you're on 601 or 603.

So is the 603 code going to work on all other BOOK3S_32 CPUs?

cheers

> diff --git a/arch/powerpc/mm/dump_bats.c b/arch/powerpc/mm/dump_bats.c
> new file mode 100644
> index 000000000000..824a94ee9051
> --- /dev/null
> +++ b/arch/powerpc/mm/dump_bats.c
> @@ -0,0 +1,176 @@
> +// SPDX-License-Identifier: GPL-2.0+
> +/*
> + * Copyright 2018, Christophe Leroy CS S.I.
> + * <christophe.leroy@c-s.fr>
> + *
> + * This dumps the content of BATS
> + */
> +
> +#include <linux/debugfs.h>
> +#include <linux/fs.h>
> +#include <linux/hugetlb.h>
> +#include <linux/io.h>
> +#include <linux/mm.h>
> +#include <linux/sched.h>
> +#include <linux/seq_file.h>
> +#include <asm/fixmap.h>
> +#include <asm/pgtable.h>
> +#include <linux/const.h>
> +#include <asm/page.h>
> +#include <asm/pgalloc.h>
> +
> +#include <asm/book3s/32/mmu-hash.h>
> +
> +static char *pp_601(int k, int pp)
> +{
> +	if (pp == 0)
> +		return k ? "NA" : "RWX";
> +	if (pp == 1)
> +		return k ? "ROX" : "RWX";
> +	if (pp == 2)
> +		return k ? "RWX" : "RWX";
> +	return k ? "ROX" : "ROX";
> +}
> +
> +static void bat_show_601(struct seq_file *m, int idx, u32 lower, u32 upper)
> +{
> +	u32 blpi = upper & 0xfffe0000;
> +	u32 k = (upper >> 2) & 3;
> +	u32 pp = upper & 3;
> +	u32 pbn = lower & 0xfffe0000;
> +	u32 bsm = lower & 0x3ff;
> +	u32 size = (bsm + 1) << 17;
> +
> +	seq_printf(m, "%d: ", idx);
> +	if (!(lower & 0x40)) {
> +		seq_puts(m, "        -\n");
> +		return;
> +	}
> +
> +	seq_printf(m, "0x%08x-0x%08x ", blpi, blpi + size - 1);
> +	seq_printf(m, "0x%08x ", pbn);
> +
> +	seq_printf(m, "Kernel %s User %s", pp_601(k & 2, pp), pp_601(k & 1, pp));
> +
> +	if (lower & _PAGE_WRITETHRU)
> +		seq_puts(m, "write through ");
> +	if (lower & _PAGE_NO_CACHE)
> +		seq_puts(m, "no cache ");
> +	if (lower & _PAGE_COHERENT)
> +		seq_puts(m, "coherent ");
> +	seq_puts(m, "\n");
> +}
> +
> +#define BAT_SHOW_601(_m, _n, _l, _u) bat_show_601(_m, _n, mfspr(_l), mfspr(_u))
> +
> +static int bats_show_601(struct seq_file *m, void *v)
> +{
> +	seq_puts(m, "Block Address Translation:\n");
> +
> +	BAT_SHOW_601(m, 0, SPRN_IBAT0L, SPRN_IBAT0U);
> +	BAT_SHOW_601(m, 1, SPRN_IBAT1L, SPRN_IBAT1U);
> +	BAT_SHOW_601(m, 2, SPRN_IBAT2L, SPRN_IBAT2U);
> +	BAT_SHOW_601(m, 3, SPRN_IBAT3L, SPRN_IBAT3U);
> +
> +	return 0;
> +}
> +
> +static void bat_show_603(struct seq_file *m, int idx, u32 lower, u32 upper, bool is_d)
> +{
> +	u32 bepi = upper & 0xfffe0000;
> +	u32 bl = (upper >> 2) & 0x7ff;
> +	u32 k = upper & 3;
> +	u32 brpn = lower & 0xfffe0000;
> +	u32 size = (bl + 1) << 17;
> +
> +	seq_printf(m, "%d: ", idx);
> +	if (k == 0) {
> +		seq_puts(m, "        -\n");
> +		return;
> +	}
> +
> +	seq_printf(m, "0x%08x-0x%08x ", bepi, bepi + size - 1);
> +	seq_printf(m, "0x%08x ", brpn);
> +
> +	if (k == 1)
> +		seq_puts(m, "User ");
> +	else if (k == 2)
> +		seq_puts(m, "Kernel ");
> +	else
> +		seq_puts(m, "Kernel/User ");
> +
> +	if (lower & BPP_RX)
> +		seq_puts(m, is_d ? "RO " : "EXEC ");
> +	else if (lower & BPP_RW)
> +		seq_puts(m, is_d ? "RW " : "EXEC ");
> +	else
> +		seq_puts(m, is_d ? "NA " : "NX   ");
> +
> +	if (lower & _PAGE_WRITETHRU)
> +		seq_puts(m, "write through ");
> +	if (lower & _PAGE_NO_CACHE)
> +		seq_puts(m, "no cache ");
> +	if (lower & _PAGE_COHERENT)
> +		seq_puts(m, "coherent ");
> +	if (lower & _PAGE_GUARDED)
> +		seq_puts(m, "guarded ");
> +	seq_puts(m, "\n");
> +}
> +
> +#define BAT_SHOW_603(_m, _n, _l, _u, _d) bat_show_603(_m, _n, mfspr(_l), mfspr(_u), _d)
> +
> +static int bats_show_603(struct seq_file *m, void *v)
> +{
> +	seq_puts(m, "Instruction Block Address Translation:\n");
> +
> +	BAT_SHOW_603(m, 0, SPRN_IBAT0L, SPRN_IBAT0U, false);
> +	BAT_SHOW_603(m, 1, SPRN_IBAT1L, SPRN_IBAT1U, false);
> +	BAT_SHOW_603(m, 2, SPRN_IBAT2L, SPRN_IBAT2U, false);
> +	BAT_SHOW_603(m, 3, SPRN_IBAT3L, SPRN_IBAT3U, false);
> +	if (mmu_has_feature(MMU_FTR_USE_HIGH_BATS)) {
> +		BAT_SHOW_603(m, 4, SPRN_IBAT4L, SPRN_IBAT4U, false);
> +		BAT_SHOW_603(m, 5, SPRN_IBAT5L, SPRN_IBAT5U, false);
> +		BAT_SHOW_603(m, 6, SPRN_IBAT6L, SPRN_IBAT6U, false);
> +		BAT_SHOW_603(m, 7, SPRN_IBAT7L, SPRN_IBAT7U, false);
> +	}
> +
> +	seq_puts(m, "\nData Block Address Translation:\n");
> +
> +	BAT_SHOW_603(m, 0, SPRN_DBAT0L, SPRN_DBAT0U, true);
> +	BAT_SHOW_603(m, 1, SPRN_DBAT1L, SPRN_DBAT1U, true);
> +	BAT_SHOW_603(m, 2, SPRN_DBAT2L, SPRN_DBAT2U, true);
> +	BAT_SHOW_603(m, 3, SPRN_DBAT3L, SPRN_DBAT3U, true);
> +	if (mmu_has_feature(MMU_FTR_USE_HIGH_BATS)) {
> +		BAT_SHOW_603(m, 4, SPRN_DBAT4L, SPRN_DBAT4U, true);
> +		BAT_SHOW_603(m, 5, SPRN_DBAT5L, SPRN_DBAT5U, true);
> +		BAT_SHOW_603(m, 6, SPRN_DBAT6L, SPRN_DBAT6U, true);
> +		BAT_SHOW_603(m, 7, SPRN_DBAT7L, SPRN_DBAT7U, true);
> +	}
> +
> +	return 0;
> +}
> +
> +static int bats_open(struct inode *inode, struct file *file)
> +{
> +	if (PVR_VER(mfspr(SPRN_PVR)) == 1)
> +		return single_open(file, bats_show_601, NULL);
> +
> +	return single_open(file, bats_show_603, NULL);
> +}
> +
> +static const struct file_operations bats_fops = {
> +	.open		= bats_open,
> +	.read		= seq_read,
> +	.llseek		= seq_lseek,
> +	.release	= single_release,
> +};
> +
> +static int bats_init(void)
> +{
> +	struct dentry *debugfs_file;
> +
> +	debugfs_file = debugfs_create_file("block_address_translation", 0400,
> +					   NULL, NULL, &bats_fops);
> +	return debugfs_file ? 0 : -ENOMEM;
> +}
> +device_initcall(bats_init);
> -- 
> 2.13.3
