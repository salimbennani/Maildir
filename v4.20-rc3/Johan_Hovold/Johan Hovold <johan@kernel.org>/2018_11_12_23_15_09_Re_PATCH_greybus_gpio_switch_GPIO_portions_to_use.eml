Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 13 Nov 2018 00:32:34 -0000
Received: from icoremail.net (unknown [209.85.215.175])
	by mail-app2 (Coremail) with SMTP id by_KCgCn39wimelbmHF+AQ--.37723S3;
	Mon, 12 Nov 2018 23:15:47 +0800 (CST)
Received: from mail-pg1-f175.google.com (unknown [209.85.215.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX7zofmelbjlsyAA--.2704S3;
	Mon, 12 Nov 2018 23:15:43 +0800 (CST)
Received: by mail-pg1-f175.google.com with SMTP id r9-v6so4206379pgv.6
        for <xuliker@zju.edu.cn>; Mon, 12 Nov 2018 07:15:43 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=tyMrkRtUG69IxsZ1tw1UQO7Nv6EDQFmUVdCdrxt5zPg=;
        b=SI+7kCB7Gr6FFXGPga0XM3mJGx6aBbV9zyftTOyX+XXbAY99FRmQFOIdPi/tuy5mVs
         5c1R3YhxU498lmQwrys5Ieh8RCQyQ+e+hoO2OcYwaMWHljMx5J1qY4tl0iRgS0cuVxiR
         t1ObBNxPItYtY1STMUOrl8vcMp6kh39f9pvDu0M7RU2cucBSvcu+hd2KwC5M13f4AjKQ
         pEeqHNiUaGpjxaGzVsmMDuNXjmaqo6cznquEiFVRE03Ago1UcPF+Udokj4ZUH1TGYsS4
         EUMyuLgI40ncm2vs0/vVBAxRh0ueV1dUbGkRLMxmY+VHMXUtBloSQwe/wFgQg4VbB4RP
         MKqA==
X-Gm-Message-State: AGRZ1gID549/f5kyR+gZ5YBNw4U8VydIg3OzkNDOAcOUrRimertqhC2u
	WyUDfxlw/JOEtJtybcZ6zqZlt+gP8okghIByFPVESBgk0L7O9AtSdw==
X-Received: by 2002:a63:4044:: with SMTP id n65mr1138185pga.90.1542035742862;
        Mon, 12 Nov 2018 07:15:42 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp3310809pjt;
        Mon, 12 Nov 2018 07:15:41 -0800 (PST)
X-Google-Smtp-Source: AJdET5f841xU6M+RPOBNtOWHgZMB6BBRIRLJUv/28MTPXjRcL3fO+8PxJKOxr/0aXOnRYd25ZyhU
X-Received: by 2002:a62:6bc8:: with SMTP id g191-v6mr1355172pfc.134.1542035741128;
        Mon, 12 Nov 2018 07:15:41 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542035740; cv=none;
        d=google.com; s=arc-20160816;
        b=lr82AL7GsLKlxF1CAINxfw8lp2VJ0Eontt+MfsLgc91WT+ovLLVFm4kvp2Q9Ny5J80
         41goq7jFpiUciCPcFO8lvI2F5eE8Mbko/CUHODPSfi1C0Iz0DPCD5Ihs5HXLt7EgvAad
         /2echN3vIyJlo2LPwMSA7ddvXHkH20MJQAkx2KhR2eRFw5yvZEaakoIr0Yon0y8xPJVA
         MmDacZIDpdmA8Y4oQ3xV9k9oUgxojEE3o3E54qWATE9qXHLLtAXCbH7ZN1QYp5OgOSQC
         3oUPZH819G4lwkkarESGJmyNQUr4+Zwcjd0c5ud2YISKa1A+Ar+DYSven10BZ7nU4xim
         77yw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=tyMrkRtUG69IxsZ1tw1UQO7Nv6EDQFmUVdCdrxt5zPg=;
        b=W+xupbr5LXflR3p6fnnXi1+yMRuyAywPOKdWPkEVNype1IeSn+gt2xHU0kD/K8Z0md
         k63FmaAJO5KUPtIoRl+H2JFKPg7QrFlTm2UyMSbFlsAjeLaoKEs1DKPVPBsxJb92/lLb
         m7FEoz5eDwSfxEDMypDZPEQxhohrxC0Ih5YitrS/b3n6jj75CGqwHxEff2sCLNjz/zyb
         Zk+WtCnqtH1s76RJJI0RkG0eJ2DTDL6v9HSWEFsbk00B7H5UY/5S+E6jE3REmuWtpSqI
         X5wm/KBZ6kw9H3iboR9HXdfv3pFAWXy4cVzAqM23PeEq184KAIHPRUzOC9w+YVZl6McV
         2N/A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@gmail.com header.s=20161025 header.b=tNU1TtHC;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t10-v6si7690150pfk.139.2018.11.12.07.15.24;
        Mon, 12 Nov 2018 07:15:40 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729540AbeKMBI6 (ORCPT <rfc822;changseok.bae@gmail.com>
        + 99 others); Mon, 12 Nov 2018 20:08:58 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:33961 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726385AbeKMBI6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 20:08:58 -0500
Received: by mail-lj1-f196.google.com with SMTP id u6-v6so7947832ljd.1;
        Mon, 12 Nov 2018 07:15:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=tyMrkRtUG69IxsZ1tw1UQO7Nv6EDQFmUVdCdrxt5zPg=;
        b=tNU1TtHCpF2+QJn3uIqNdQj3WrKE1K+0eI+wO97TUV/n9eRwd7FfqWH9UOxwjjk0Mi
         Umefok/3IMbx6Qpxr+utC4SYAVSQIX2HtCE0v55nZGg6RXyxKaJUJ+z8Ky6mSVEy5qhf
         Ph5TF8rJQ+d7/0plaagzGJymNpp2BmxxPct4KSF7f6Z0oY9TW9S8UJjq0H6YZ8ILw+Ug
         2AVTOWLP96P7AVIUg++KQY+HycyblyI0JjTMj+/ZM2V4gjKs+piwdo8prsK9rbqmUVBV
         GD3PEUskWwKEyaDSgUq5iXHdo6cjpA4QVubgVcnJjREkcrVLzOiVpCwSkhgeC/XSYX+y
         VZDA==
X-Received: by 2002:a2e:484:: with SMTP id a4-v6mr939235ljf.27.1542035714315;
        Mon, 12 Nov 2018 07:15:14 -0800 (PST)
Received: from xi.terra (c-74bee655.07-184-6d6c6d4.bbcust.telenor.se. [85.230.190.116])
        by smtp.gmail.com with ESMTPSA id q6sm936322lfh.52.2018.11.12.07.15.13
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 12 Nov 2018 07:15:13 -0800 (PST)
Received: from johan by xi.terra with local (Exim 4.91)
        (envelope-from <johan@kernel.org>)
        id 1gMDvh-00033P-4s; Mon, 12 Nov 2018 16:15:09 +0100
Date: Mon, 12 Nov 2018 16:15:09 +0100
From: Johan Hovold <johan@kernel.org>
To: Nishad Kamdar <nishadkamdar@gmail.com>
Cc: Johan Hovold <johan@kernel.org>, Alex Elder <elder@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org,
        Linus Walleij <linus.walleij@linaro.org>,
        Viresh Kumar <viresh.kumar@linaro.org>,
        linux-gpio@vger.kernel.org
Subject: Re: [PATCH] greybus: gpio: switch GPIO portions to use
 GPIOLIB_IRQCHIP
Message-ID: <20181112151509.GH13311@localhost>
References: <20181109074735.GA5998@nishad>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181109074735.GA5998@nishad>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX7zofmelbjlsyAA--.2704S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3WFy3tFyUZF18Kr4UZw4kCrg_yoW3Jr43pF
	W8X3yakFWUtFy2qF1DAwsrZFyayw4kK3yxC3yxK3sayry5ZF95KF1vyFyYvrySkryUCF4q
	vF4xWF95XFyDAF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26F4j6r4UJwAm72CE4IkC6x0Yz7v_Jr0_Gr1l7I0Y6sxI4wCY1x
	0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VW5WwCY0x0I
	x7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x
	0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804x
	Wl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK
	67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8V
	AvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUmZXrUUUUU

On Fri, Nov 09, 2018 at 01:17:41PM +0530, Nishad Kamdar wrote:
> Convert the GPIO driver to use the GPIO irqchip library
> GPIOLIB_IRQCHIP instead of reimplementing the same.

Thanks for picking this up. Linus W took a stab at it a couple of years
ago, but it was never completed. You may want to take a look at that
thread:

	https://lkml.kernel.org/r/1476054589-28422-1-git-send-email-linus.walleij@linaro.org

> Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
> ---
>  drivers/staging/greybus/Kconfig |   1 +
>  drivers/staging/greybus/gpio.c  | 123 ++++++--------------------------
>  2 files changed, 21 insertions(+), 103 deletions(-)
> 
> diff --git a/drivers/staging/greybus/Kconfig b/drivers/staging/greybus/Kconfig
> index ab096bcef98c..b571e4e8060b 100644
> --- a/drivers/staging/greybus/Kconfig
> +++ b/drivers/staging/greybus/Kconfig
> @@ -148,6 +148,7 @@ if GREYBUS_BRIDGED_PHY
>  config GREYBUS_GPIO
>  	tristate "Greybus GPIO Bridged PHY driver"
>  	depends on GPIOLIB
> +	select GPIOLIB_IRQCHIP
>  	---help---
>  	  Select this option if you have a device that follows the
>  	  Greybus GPIO Bridged PHY Class specification.
> diff --git a/drivers/staging/greybus/gpio.c b/drivers/staging/greybus/gpio.c
> index b1d4698019a1..32c228bad33a 100644
> --- a/drivers/staging/greybus/gpio.c
> +++ b/drivers/staging/greybus/gpio.c
> @@ -9,9 +9,7 @@
>  #include <linux/kernel.h>
>  #include <linux/module.h>
>  #include <linux/slab.h>
> -#include <linux/gpio.h>
> -#include <linux/irq.h>

I think you should keep irq.h even if the gpio header currently provides
it.

> -#include <linux/irqdomain.h>

Similarly for this one, if you still rely on it.

> +#include <linux/gpio/driver.h>
>  #include <linux/mutex.h>
>  
>  #include "greybus.h"
> @@ -40,8 +38,6 @@ struct gb_gpio_controller {
>  	struct gpio_chip	chip;
>  	struct irq_chip		irqc;
>  	struct irq_chip		*irqchip;

This should not be needed any more either.

> -	struct irq_domain	*irqdomain;
> -	unsigned int		irq_base;
>  	irq_flow_handler_t	irq_handler;
>  	unsigned int		irq_default_type;

Neither should these two.

>  	struct mutex		irq_lock;
> @@ -365,6 +361,7 @@ static int gb_gpio_request_handler(struct gb_operation *op)
>  {
>  	struct gb_connection *connection = op->connection;
>  	struct gb_gpio_controller *ggc = gb_connection_get_data(connection);
> +	struct gpio_chip *gc = &ggc->chip;

Please name the pointer 'chip' as in the rest of the driver to avoid
confusion with 'ggc'. But looks like you don't need it at all.

>  	struct device *dev = &ggc->gbphy_dev->dev;
>  	struct gb_message *request;
>  	struct gb_gpio_irq_event_request *event;
> @@ -391,7 +388,7 @@ static int gb_gpio_request_handler(struct gb_operation *op)
>  		return -EINVAL;
>  	}
>  
> -	irq = irq_find_mapping(ggc->irqdomain, event->which);
> +	irq = irq_find_mapping(gc->irq.domain, event->which);
>  	if (!irq) {
>  		dev_err(dev, "failed to find IRQ\n");
>  		return -EINVAL;
> @@ -506,68 +503,6 @@ static int gb_gpio_controller_setup(struct gb_gpio_controller *ggc)
>  	return ret;
>  }

> -/**
> - * gb_gpio_irqchip_remove() - removes an irqchip added to a gb_gpio_controller
> - * @ggc: the gb_gpio_controller to remove the irqchip from
> - *
> - * This is called only from gb_gpio_remove()
> - */
> -static void gb_gpio_irqchip_remove(struct gb_gpio_controller *ggc)
> -{
> -	unsigned int offset;
> -
> -	/* Remove all IRQ mappings and delete the domain */
> -	if (ggc->irqdomain) {
> -		for (offset = 0; offset < (ggc->line_max + 1); offset++)
> -			irq_dispose_mapping(irq_find_mapping(ggc->irqdomain,
> -							     offset));
> -		irq_domain_remove(ggc->irqdomain);
> -	}
> -
> -	if (ggc->irqchip)
> -		ggc->irqchip = NULL;
> -}
> -
>  /**
>   * gb_gpio_irqchip_add() - adds an irqchip to a gpio chip
>   * @chip: the gpio chip to add the irqchip to
> @@ -595,8 +530,7 @@ static int gb_gpio_irqchip_add(struct gpio_chip *chip,
>  			 unsigned int type)
>  {
>  	struct gb_gpio_controller *ggc;
> -	unsigned int offset;
> -	unsigned int irq_base;
> +	unsigned int err;
>  
>  	if (!chip || !irqchip)
>  		return -EINVAL;
> @@ -606,35 +540,21 @@ static int gb_gpio_irqchip_add(struct gpio_chip *chip,
>  	ggc->irqchip = irqchip;
>  	ggc->irq_handler = handler;
>  	ggc->irq_default_type = type;
> -	ggc->irqdomain = irq_domain_add_simple(NULL,
> -					ggc->line_max + 1, first_irq,
> -					&gb_gpio_domain_ops, chip);
> -	if (!ggc->irqdomain) {
> -		ggc->irqchip = NULL;
> -		return -EINVAL;
> -	}
>  
> -	/*
> -	 * Prepare the mapping since the irqchip shall be orthogonal to
> -	 * any gpio calls. If the first_irq was zero, this is
> -	 * necessary to allocate descriptors for all IRQs.
> -	 */
> -	for (offset = 0; offset < (ggc->line_max + 1); offset++) {
> -		irq_base = irq_create_mapping(ggc->irqdomain, offset);
> -		if (offset == 0)
> -			ggc->irq_base = irq_base;
> +	err = gpiochip_irqchip_add(chip,
> +				   irqchip,
> +				   first_irq,
> +				   ggc->irq_handler,
> +				   type

Don't break the line here.

> +				   );
> +	if (err) {
> +		ggc->irqchip = NULL;
> +		return err;
>  	}
>  
>  	return 0;
>  }

Drop this function as well and call gpiochip_irqchip_add() from probe().

> -static int gb_gpio_to_irq(struct gpio_chip *chip, unsigned int offset)
> -{
> -	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
> -
> -	return irq_find_mapping(ggc->irqdomain, offset);
> -}
> -
>  static int gb_gpio_probe(struct gbphy_device *gbphy_dev,
>  			 const struct gbphy_device_id *id)
>  {
> @@ -693,7 +613,6 @@ static int gb_gpio_probe(struct gbphy_device *gbphy_dev,
>  	gpio->get = gb_gpio_get;
>  	gpio->set = gb_gpio_set;
>  	gpio->set_config = gb_gpio_set_config;
> -	gpio->to_irq = gb_gpio_to_irq;
>  	gpio->base = -1;		/* Allocate base dynamically */
>  	gpio->ngpio = ggc->line_max + 1;
>  	gpio->can_sleep = true;
> @@ -702,24 +621,23 @@ static int gb_gpio_probe(struct gbphy_device *gbphy_dev,
>  	if (ret)
>  		goto exit_line_free;
>  
> -	ret = gb_gpio_irqchip_add(gpio, irqc, 0,
> -				   handle_level_irq, IRQ_TYPE_NONE);
> +	ret = gpiochip_add(gpio);
>  	if (ret) {
> -		dev_err(&gbphy_dev->dev, "failed to add irq chip: %d\n", ret);
> +		dev_err(&gbphy_dev->dev, "failed to add gpio chip: %d\n", ret);
>  		goto exit_line_free;
>  	}
>  
> -	ret = gpiochip_add(gpio);
> +	ret = gb_gpio_irqchip_add(gpio, irqc, 0,
> +				  handle_level_irq, IRQ_TYPE_NONE);

As you may have noted, we had the registration order reversed here to
handle a (theoretical) race, which may or may not only have been an
issue for the old 3.10 vendor kernel this was developed against. I've
forgotten the details, but see:

	88f6ba61f25b ("greybus: gpio: create irqdomain before registering gpio controller")

It's possibly an issue also for mainline, but this is indeed the
registration order all other drivers use (even if they tend not to be
hotpluggable).

>  	if (ret) {
> -		dev_err(&gbphy_dev->dev, "failed to add gpio chip: %d\n", ret);
> -		goto exit_gpio_irqchip_remove;
> +		dev_err(&gbphy_dev->dev, "failed to add irq chip: %d\n", ret);
> +		gpiochip_remove(gpio);

Please use an error label for this.

> +		goto exit_line_free;
>  	}
>  
>  	gbphy_runtime_put_autosuspend(gbphy_dev);
>  	return 0;
>  
> -exit_gpio_irqchip_remove:
> -	gb_gpio_irqchip_remove(ggc);
>  exit_line_free:
>  	kfree(ggc->lines);
>  exit_connection_disable:

Thanks,
Johan
