Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 00:29:44 -0000
Received: from icoremail.net (unknown [209.85.210.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH0IJyO1bL22cAQ--.46601S3;
	Fri, 16 Nov 2018 03:24:58 +0800 (CST)
Received: from mail-pf1-f169.google.com (unknown [209.85.210.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAXkEwGyO1bwlBFAA--.327S3;
	Fri, 16 Nov 2018 03:24:54 +0800 (CST)
Received: by mail-pf1-f169.google.com with SMTP id x2-v6so10154846pfm.7
        for <xuliker@zju.edu.cn>; Thu, 15 Nov 2018 11:24:54 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:in-reply-to:message-id:mime-version:sender
         :precedence:list-id;
        bh=Mtx3Q08i2X09LOEllrIsR3H7sJ3G1cB5RILxyQ18aV8=;
        b=kymn6jxhsMvVJacFk3uE+y981FhehXR8hU2oHa7OQKfeYGc5QL90ZGX1ixNwgyEokc
         1lDOX6YC9UJCGquntdC3agCP47iuuO2BlJAQ/Ydf+lXZVdra9hkmq+TMK8/sZ5tm3Nw0
         691q4eawiW9o4hZDpQptn8TkZ/LPLK1WJpi1m/2bTB0IyRzR8F8kP5EqQCcpqf0/6asr
         jWdriNaS8ybxMLkI7lfQyeLiNx+tArDvDZPWSB2XXD24dtdQGA+Px+u42cCTdKutlDFW
         siiFIUTd4r6FkibpmPv0rA6geF5Xts2D+SCAzUJMa0Z04no+C+JyEwQBjCbhkzKTDVvW
         53xg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIosmM+jhmtH7uGEMU93OAD1xfTCT2rb9RQ7ukhdG4ilBzKqcSO
	zFBTyCDoJ8tU18ipt9BB4B5tBs+7Rvho9Tj91KU9VKMdPCH5yX5ViQ==
X-Received: by 2002:aa7:8497:: with SMTP id u23mr3396707pfn.220.1542309894269;
        Thu, 15 Nov 2018 11:24:54 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp972688pju;
        Thu, 15 Nov 2018 11:24:52 -0800 (PST)
X-Google-Smtp-Source: AJdET5fGSiqr/gkrn964RVXgYn4Vf44CVqp5P5eRkVw8pmahvo2peL2T15YgaL71ic9UlYBFZAVr
X-Received: by 2002:a17:902:31a4:: with SMTP id x33-v6mr7470173plb.105.1542309892409;
        Thu, 15 Nov 2018 11:24:52 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542309892; cv=none;
        d=google.com; s=arc-20160816;
        b=RQONokq5NwijImh4jJbYqYJforvf1sm6+C+K/i2Zk5envnwHdA5yasg4WKzg1ZZHzo
         6YgSko4UQ6Le8czf7sARg9tiPWIDFo6sxyE64+s4grzIw9bZiN1qy/D/7AvWOokhIz8T
         Y7K8RA6/H8+JXqJ8Dx7WgVh5imujGLRq+13XN+Bj1mVTjoQEP65Z/ZmMHQxGEmK/0LqE
         rt+22ihJA7fWgiOeQKguOjWkaOvpbQ6mYdcgRGrZjoAghjSrAhI8AvYG3h8xgSOt6RML
         IS4V7dB2qSRAWvI17HnfMncUGiHs+vvU3yBN1oZbVZu22fqbGS0tIQc+WUMh9fY+vcOU
         N5Uw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:message-id:in-reply-to
         :subject:cc:to:from:date;
        bh=Mtx3Q08i2X09LOEllrIsR3H7sJ3G1cB5RILxyQ18aV8=;
        b=DQ0J+Px/4JbLx8+L6X1jjnpBMRgVyOOPJQcPWGY98qgz86znHFrXiz/1QFxqr6u89J
         wq6v0Ce5h2V4xok2UFIAhIDj0kdNFyxpWdiIE5b40GKqJYpl/VMh77xs0C1Kc13wbOHy
         yt1iGyJ5yaJjH5xEzTCew22gLG80BZRwBoSqOQwAhOFFULBHaRgW3zPCkqKQIQlQ1uCV
         WWYgi5PeZQLWl44LeVRkBdLDIpNGoGqoZahY+H538iNLEGFWhRtKanQjRbFM9dFqD1zm
         +Ev/croip3fbVhf0fHJFew8mVaSHhrx9dSiWLP70/n7boJHTHfWvaropC2liGFqAqI3F
         g7bA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id s11si26432283pgk.344.2018.11.15.11.24.37;
        Thu, 15 Nov 2018 11:24:52 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727641AbeKPFdd (ORCPT <rfc822;kristofer.rye@gmail.com>
        + 99 others); Fri, 16 Nov 2018 00:33:33 -0500
Received: from iolanthe.rowland.org ([192.131.102.54]:44820 "HELO
        iolanthe.rowland.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with SMTP id S1725869AbeKPFdd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 00:33:33 -0500
Received: (qmail 5222 invoked by uid 2102); 15 Nov 2018 14:24:28 -0500
Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 15 Nov 2018 14:24:28 -0500
Date: Thu, 15 Nov 2018 14:24:28 -0500 (EST)
From: Alan Stern <stern@rowland.harvard.edu>
X-X-Sender: stern@iolanthe.rowland.org
To: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
cc: nsaaenzjulienne@suse.de, <linux-kernel@vger.kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        <linux-usb@vger.kernel.org>
Subject: Re: [PATCH] usb: hub: add I/O error retry & reset routine
In-Reply-To: <20181115171418.23522-1-nsaenzjulienne@suse.de>
Message-ID: <Pine.LNX.4.44L0.1811151420300.1308-100000@iolanthe.rowland.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAXkEwGyO1bwlBFAA--.327S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGr4fGr47GFWxGF1ruw4UJwb_yoWrJw1xpF
	W5G393tFWDJFW3ur1aya1kXFyrC3W8Ja4UGa4Igwsavr93JryrGFyrK34Y9r4UCrWkA3WF
	9F4agayUWF4DKFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6rWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxU
	dY0PDUUUU

On Thu, 15 Nov 2018, Nicolas Saenz Julienne wrote:

> An URB submission error in the HUB's endpoint completion function
> renders the whole HUB device unresponsive. This patch introduces a
> routine that retries the submission for 1s to then, as a last resort,
> reset the whole device.
> 
> The implementation is based on usbhid/hid_core.c's, which implements the
> same functionality. It was tested with the help of BCC's error injection
> tool (inject.py).
> 
> Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>

Why do you think this is needed?  Are you experiencing these 
sorts of URB submission errors?

Why do you handle only errors during submission but not during
completion?  And if you keep on getting errors during submission, why
would resetting the hub make any difference?

The patch doesn't delete the io_retry timer when the hub is removed.

Alan Stern


> ---
>  drivers/usb/core/hub.c | 43 +++++++++++++++++++++++++++++++++++++++++-
>  drivers/usb/core/hub.h |  3 +++
>  2 files changed, 45 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
> index d9bd7576786a..1447bdba59ec 100644
> --- a/drivers/usb/core/hub.c
> +++ b/drivers/usb/core/hub.c
> @@ -607,6 +607,44 @@ static int hub_port_status(struct usb_hub *hub, int port1,
>  				   status, change, NULL);
>  }
>  
> +static void hub_io_error(struct usb_hub *hub)
> +{
> +	/*
> +	 * If it has been a while since the last error, we'll assume
> +	 * this a brand new error and reset the retry timeout.
> +	 */
> +	if (time_after(jiffies, hub->stop_retry + HZ/2))
> +		hub->retry_delay = 0;
> +
> +	/* When an error occurs, retry at increasing intervals */
> +	if (hub->retry_delay == 0) {
> +		hub->retry_delay = 13;	/* Then 26, 52, 104, 104, ... */
> +		hub->stop_retry = jiffies + msecs_to_jiffies(1000);
> +	} else if (hub->retry_delay < 100)
> +		hub->retry_delay *= 2;
> +
> +	if (time_after(jiffies, hub->stop_retry)) {
> +		/* Retries failed, so do a port reset */
> +		usb_queue_reset_device(to_usb_interface(hub->intfdev));
> +		return;
> +	}
> +
> +	mod_timer(&hub->io_retry,
> +			jiffies + msecs_to_jiffies(hub->retry_delay));
> +}
> +
> +static void hub_retry_timeout(struct timer_list *t)
> +{
> +	struct usb_hub *hub = from_timer(hub, t, io_retry);
> +
> +	if (hub->disconnected || hub->quiescing)
> +		return;
> +
> +	dev_err(hub->intfdev, "retrying int urb\n");
> +	if (usb_submit_urb(hub->urb, GFP_ATOMIC))
> +		hub_io_error(hub);
> +}
> +
>  static void kick_hub_wq(struct usb_hub *hub)
>  {
>  	struct usb_interface *intf;
> @@ -713,8 +751,10 @@ static void hub_irq(struct urb *urb)
>  		return;
>  
>  	status = usb_submit_urb(hub->urb, GFP_ATOMIC);
> -	if (status != 0 && status != -ENODEV && status != -EPERM)
> +	if (status != 0 && status != -ENODEV && status != -EPERM) {
>  		dev_err(hub->intfdev, "resubmit --> %d\n", status);
> +		hub_io_error(hub);
> +	}
>  }
>  
>  /* USB 2.0 spec Section 11.24.2.3 */
> @@ -1800,6 +1840,7 @@ static int hub_probe(struct usb_interface *intf, const struct usb_device_id *id)
>  	INIT_DELAYED_WORK(&hub->leds, led_work);
>  	INIT_DELAYED_WORK(&hub->init_work, NULL);
>  	INIT_WORK(&hub->events, hub_event);
> +	timer_setup(&hub->io_retry, hub_retry_timeout, 0);
>  	usb_get_intf(intf);
>  	usb_get_dev(hdev);
>  
> diff --git a/drivers/usb/core/hub.h b/drivers/usb/core/hub.h
> index 4accfb63f7dc..7dbd19c2c8d9 100644
> --- a/drivers/usb/core/hub.h
> +++ b/drivers/usb/core/hub.h
> @@ -69,6 +69,9 @@ struct usb_hub {
>  	struct delayed_work	leds;
>  	struct delayed_work	init_work;
>  	struct work_struct      events;
> +	struct timer_list	io_retry;
> +	unsigned long		stop_retry;
> +	unsigned int		retry_delay;
>  	struct usb_port		**ports;
>  };
>  
> 
