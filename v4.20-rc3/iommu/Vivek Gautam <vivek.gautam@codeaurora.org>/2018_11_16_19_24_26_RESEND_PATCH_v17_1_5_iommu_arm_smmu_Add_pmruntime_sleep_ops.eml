Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 16 Nov 2018 13:51:03 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f90uqe5bw0miAQ--.49005S3;
	Fri, 16 Nov 2018 19:25:35 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBn4Ewtqe5bLh1JAA--.1949S3;
	Fri, 16 Nov 2018 19:25:33 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id s5-v6so11031766plq.11
        for <xuliker@zju.edu.cn>; Fri, 16 Nov 2018 03:25:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:dkim-signature
         :dmarc-filter:from:to:cc:subject:date:message-id:in-reply-to
         :references:sender:precedence:list-id;
        bh=6uE+VqLqpUOmLLYhvomSmsLDP78UOSSUQ9GeYcmnw7Y=;
        b=OOcC00Jev62JyLO717S14L0VUnbnXmTykdas7hJxdwx5ZFU5inw0vgcN9Agl/cuygp
         cV3CWglB0NllXCB0gjGwSR1IpWVQDxdMQai2oXu0eoQYs+VmV1lUTP/bhRQDF4IUYFCv
         3N/jtN2OpjJ9gIheucp4aOp4JdJEsJdU4a7Y0lsc16uVCumU7TbnmhKte+cJS23eHxVT
         reOU3FIseA6fVLNDvF2O1rt6Bkvij1T0R/sW26XfiMJrYh3rYesMPz0fbr/Kuag9AlZi
         nEJR5/OWmOydVXAn/sQ2qtUXlxnvNNZgIBV368qmORUafr0IUKbr9V7ZaWZJ9yG9kaqi
         pQFg==
X-Gm-Message-State: AGRZ1gKpkpwUfAGCUdjkUPUV/A+ASU6byDjyBwMd4HDCVj2SfqYMTaRp
	rXfzH9RWKn6DNH9Cc61ZcPCXvN2rJmVaK09Cti9gFQpIlL8Ayi4=
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr10698553plp.9.1542367533402;
        Fri, 16 Nov 2018 03:25:33 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp287892pju;
        Fri, 16 Nov 2018 03:25:32 -0800 (PST)
X-Google-Smtp-Source: AJdET5frHWnJMSGNmcGGONQFc4HNsFN6+fdGCqjSbN4djP58nKQEUwC41iJnVmxqW+ImMSIIh4bo
X-Received: by 2002:a63:9501:: with SMTP id p1mr9607176pgd.149.1542367532629;
        Fri, 16 Nov 2018 03:25:32 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542367532; cv=none;
        d=google.com; s=arc-20160816;
        b=Q+g0njY2+eON3oP+Ep50mlZno15Ln23wYlSdHHEni4Zle8q4ZJ9YF+sXaYwc0Tfkmq
         MGRtmKKQXKbaLLUkfWwB9iHoXAIrFqP0GjbRlgCvqRb6SXvspnLrY2Ccx/YQyAhbpGwr
         PppqoZbTXV8+JMUM7lZ2yoTW0AVb21fJOWorsuNtwxUuuOQmZ9GJ/vG6O86d4GEY3luu
         txUaKykdRUnIhHddxVOcFm17rHve1LmJeL1my/zQ0dBzMmDdCOkslcod13DjhdIEVydb
         KUj3TVilTegs6FXWPrnjSoWc+LkYjHspr8j+XNn/EjBpM2WNFQNfJVDKTYXAJIhnVDJi
         T4kg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dmarc-filter:dkim-signature:dkim-signature;
        bh=6uE+VqLqpUOmLLYhvomSmsLDP78UOSSUQ9GeYcmnw7Y=;
        b=WvifuUmWmgQ6DQXf8bFwui7hILJ24UDhP829kXN6jyIGzeeCT8QAAaCUSfDANrGfUO
         A84Rfi0xpTSLZmZUs3XGe5qT+n8oSZ1RDfwk2HFdS3+GN07hHjFq/Lv5yKhKyJbGT314
         fl8AukJNrEBcrc+HdkH43l+WAiv8gVbvSfZeG21e69Y+4iYg5V2M21noVyhRDtAC8XhC
         iCPpFnzCqBA+W+ihupN9QlE1tqesmm6F2JQlvI1OePKP4Dq9S6/CxA5tlGVfFfc7CAdl
         aSpwt88toQSkUsMmgSCGANG4SMC8upEl8/n5zNIqyGoGdgeugwOuEgr4pP+EJrKV3l/5
         Dr8Q==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@codeaurora.org header.s=default header.b=kPclpEq6;
       dkim=pass header.i=@codeaurora.org header.s=default header.b=LdjvKpVB;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h68-v6si34001086pfb.142.2018.11.16.03.25.18;
        Fri, 16 Nov 2018 03:25:32 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389600AbeKPVg5 (ORCPT <rfc822;jroi.martin@gmail.com>
        + 99 others); Fri, 16 Nov 2018 16:36:57 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:49784 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727567AbeKPVg5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 16 Nov 2018 16:36:57 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 3F64460791; Fri, 16 Nov 2018 11:24:59 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542367499;
        bh=QR7wGVu1g0QX6aG9Xp76qX52AHOVlhpCcUIqLiw2ZwM=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=kPclpEq6qb4JBhP80exQbaVB8L9IRaqigXBmCocbL4HZO4ayYpDqVFBZhNs+Q5F/E
         pFFc7hczMPFd8WNgD/fTYi46/dmSA91Mu5IuQrvTkOmii0uMzP99eN1APFpPvzkPMi
         rFgEdACIQs7Gw0mIFpPB8gky0R2+uyQ0J1XIfCNs=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from blr-ubuntu-41.ap.qualcomm.com (blr-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.18.19])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: vivek.gautam@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 67AAD607EF;
        Fri, 16 Nov 2018 11:24:51 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542367497;
        bh=QR7wGVu1g0QX6aG9Xp76qX52AHOVlhpCcUIqLiw2ZwM=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=LdjvKpVBafLC5eDFcnShK8OFav+7/LY2ZjIGVLp+vMa9USqRtNpPK+LxkU/FpWrFt
         4zSFh+0DrD+R+fn3iTSZRoQflB5Rk2nx+VY5soyexcSw0wwPoguvKntS1xC6C1/PpE
         VX3os1Ag0pYs5MJGCTO9ikrZM5JyELsIMY0AuouI=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 67AAD607EF
From: Vivek Gautam <vivek.gautam@codeaurora.org>
To: joro@8bytes.org, robh+dt@kernel.org, robin.murphy@arm.com,
        will.deacon@arm.com, iommu@lists.linux-foundation.org,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: alex.williamson@redhat.com, mark.rutland@arm.com,
        rjw@rjwysocki.net, robdclark@gmail.com, linux-pm@vger.kernel.org,
        freedreno@lists.freedesktop.org, sboyd@kernel.org,
        tfiga@chromium.org, jcrouse@codeaurora.org,
        sricharan@codeaurora.org, m.szyprowski@samsung.com,
        architt@codeaurora.org, linux-arm-msm@vger.kernel.org,
        Vivek Gautam <vivek.gautam@codeaurora.org>
Subject: [RESEND PATCH v17 1/5] iommu/arm-smmu: Add pm_runtime/sleep ops
Date: Fri, 16 Nov 2018 16:54:26 +0530
Message-Id: <20181116112430.31248-2-vivek.gautam@codeaurora.org>
X-Mailer: git-send-email 2.16.1.72.g5be1f00a9a70
In-Reply-To: <20181116112430.31248-1-vivek.gautam@codeaurora.org>
References: <20181116112430.31248-1-vivek.gautam@codeaurora.org>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBn4Ewtqe5bLh1JAA--.1949S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3XFyrGF45Jr4xAry5CFyrtFb_yoW7Zryfpa
	yDuF98Kr48GF1Ik3Wavr1qvFnI9w4rZaykJrW7Ka4v9347tryrtFyIyry5tas0krWkKa1x
	tF1UAF4UCrW5trJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jrv_
	JF1lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6r4kMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWrXwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IU5fs
	qJUUUUU==

From: Sricharan R <sricharan@codeaurora.org>

The smmu needs to be functional only when the respective
master's using it are active. The device_link feature
helps to track such functional dependencies, so that the
iommu gets powered when the master device enables itself
using pm_runtime. So by adapting the smmu driver for
runtime pm, above said dependency can be addressed.

This patch adds the pm runtime/sleep callbacks to the
driver and also the functions to parse the smmu clocks
from DT and enable them in resume/suspend.

Also, while we enable the runtime pm add a pm sleep suspend
callback that pushes devices to low power state by turning
the clocks off in a system sleep.
Also add corresponding clock enable path in resume callback.

Signed-off-by: Sricharan R <sricharan@codeaurora.org>
Signed-off-by: Archit Taneja <architt@codeaurora.org>
[vivek: rework for clock and pm ops]
Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
Reviewed-by: Tomasz Figa <tfiga@chromium.org>
Tested-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Reviewed-by: Robin Murphy <robin.murphy@arm.com>
---
 drivers/iommu/arm-smmu.c | 77 ++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 74 insertions(+), 3 deletions(-)

diff --git a/drivers/iommu/arm-smmu.c b/drivers/iommu/arm-smmu.c
index 5a28ae892504..f7ab7ce87a94 100644
--- a/drivers/iommu/arm-smmu.c
+++ b/drivers/iommu/arm-smmu.c
@@ -48,6 +48,7 @@
 #include <linux/of_iommu.h>
 #include <linux/pci.h>
 #include <linux/platform_device.h>
+#include <linux/pm_runtime.h>
 #include <linux/slab.h>
 #include <linux/spinlock.h>
 
@@ -206,6 +207,8 @@ struct arm_smmu_device {
 	u32				num_global_irqs;
 	u32				num_context_irqs;
 	unsigned int			*irqs;
+	struct clk_bulk_data		*clks;
+	int				num_clks;
 
 	u32				cavium_id_base; /* Specific to Cavium */
 
@@ -1944,10 +1947,12 @@ static int arm_smmu_device_cfg_probe(struct arm_smmu_device *smmu)
 struct arm_smmu_match_data {
 	enum arm_smmu_arch_version version;
 	enum arm_smmu_implementation model;
+	const char * const *clks;
+	int num_clks;
 };
 
 #define ARM_SMMU_MATCH_DATA(name, ver, imp)	\
-static struct arm_smmu_match_data name = { .version = ver, .model = imp }
+static const struct arm_smmu_match_data name = { .version = ver, .model = imp }
 
 ARM_SMMU_MATCH_DATA(smmu_generic_v1, ARM_SMMU_V1, GENERIC_SMMU);
 ARM_SMMU_MATCH_DATA(smmu_generic_v2, ARM_SMMU_V2, GENERIC_SMMU);
@@ -1966,6 +1971,23 @@ static const struct of_device_id arm_smmu_of_match[] = {
 };
 MODULE_DEVICE_TABLE(of, arm_smmu_of_match);
 
+static void arm_smmu_fill_clk_data(struct arm_smmu_device *smmu,
+				   const char * const *clks)
+{
+	int i;
+
+	if (smmu->num_clks < 1)
+		return;
+
+	smmu->clks = devm_kcalloc(smmu->dev, smmu->num_clks,
+				  sizeof(*smmu->clks), GFP_KERNEL);
+	if (!smmu->clks)
+		return;
+
+	for (i = 0; i < smmu->num_clks; i++)
+		smmu->clks[i].id = clks[i];
+}
+
 #ifdef CONFIG_ACPI
 static int acpi_smmu_get_data(u32 model, struct arm_smmu_device *smmu)
 {
@@ -2048,6 +2070,9 @@ static int arm_smmu_device_dt_probe(struct platform_device *pdev,
 	data = of_device_get_match_data(dev);
 	smmu->version = data->version;
 	smmu->model = data->model;
+	smmu->num_clks = data->num_clks;
+
+	arm_smmu_fill_clk_data(smmu, data->clks);
 
 	parse_driver_options(smmu);
 
@@ -2150,6 +2175,14 @@ static int arm_smmu_device_probe(struct platform_device *pdev)
 		smmu->irqs[i] = irq;
 	}
 
+	err = devm_clk_bulk_get(smmu->dev, smmu->num_clks, smmu->clks);
+	if (err)
+		return err;
+
+	err = clk_bulk_prepare_enable(smmu->num_clks, smmu->clks);
+	if (err)
+		return err;
+
 	err = arm_smmu_device_cfg_probe(smmu);
 	if (err)
 		return err;
@@ -2236,6 +2269,9 @@ static int arm_smmu_device_remove(struct platform_device *pdev)
 
 	/* Turn the thing off */
 	writel(sCR0_CLIENTPD, ARM_SMMU_GR0_NS(smmu) + ARM_SMMU_GR0_sCR0);
+
+	clk_bulk_disable_unprepare(smmu->num_clks, smmu->clks);
+
 	return 0;
 }
 
@@ -2244,15 +2280,50 @@ static void arm_smmu_device_shutdown(struct platform_device *pdev)
 	arm_smmu_device_remove(pdev);
 }
 
-static int __maybe_unused arm_smmu_pm_resume(struct device *dev)
+static int __maybe_unused arm_smmu_runtime_resume(struct device *dev)
 {
 	struct arm_smmu_device *smmu = dev_get_drvdata(dev);
+	int ret;
+
+	ret = clk_bulk_enable(smmu->num_clks, smmu->clks);
+	if (ret)
+		return ret;
 
 	arm_smmu_device_reset(smmu);
+
 	return 0;
 }
 
-static SIMPLE_DEV_PM_OPS(arm_smmu_pm_ops, NULL, arm_smmu_pm_resume);
+static int __maybe_unused arm_smmu_runtime_suspend(struct device *dev)
+{
+	struct arm_smmu_device *smmu = dev_get_drvdata(dev);
+
+	clk_bulk_disable(smmu->num_clks, smmu->clks);
+
+	return 0;
+}
+
+static int __maybe_unused arm_smmu_pm_resume(struct device *dev)
+{
+	if (pm_runtime_suspended(dev))
+		return 0;
+
+	return arm_smmu_runtime_resume(dev);
+}
+
+static int __maybe_unused arm_smmu_pm_suspend(struct device *dev)
+{
+	if (pm_runtime_suspended(dev))
+		return 0;
+
+	return arm_smmu_runtime_suspend(dev);
+}
+
+static const struct dev_pm_ops arm_smmu_pm_ops = {
+	SET_SYSTEM_SLEEP_PM_OPS(arm_smmu_pm_suspend, arm_smmu_pm_resume)
+	SET_RUNTIME_PM_OPS(arm_smmu_runtime_suspend,
+			   arm_smmu_runtime_resume, NULL)
+};
 
 static struct platform_driver arm_smmu_driver = {
 	.driver	= {
-- 
QUALCOMM INDIA, on behalf of Qualcomm Innovation Center, Inc. is a member
of Code Aurora Forum, hosted by The Linux Foundation
