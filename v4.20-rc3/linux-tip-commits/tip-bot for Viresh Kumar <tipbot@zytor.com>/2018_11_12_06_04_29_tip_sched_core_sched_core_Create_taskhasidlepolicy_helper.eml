Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 07:37:28 -0000
Received: from icoremail.net (unknown [209.85.214.172])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_48fGOlb8gl7AQ--.3261S3;
	Mon, 12 Nov 2018 14:05:29 +0800 (CST)
Received: from mail-pl1-f172.google.com (unknown [209.85.214.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3WkYdGOlblgowAA--.14460S3;
	Mon, 12 Nov 2018 14:05:17 +0800 (CST)
Received: by mail-pl1-f172.google.com with SMTP id r3-v6so3041965pls.12
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 22:05:17 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:message-id:cc:reply-to:in-reply-to:references:to:subject
         :git-commit-id:robot-id:robot-unsubscribe:mime-version
         :content-transfer-encoding:content-disposition:sender:precedence
         :list-id;
        bh=g4kXsIAGYNoWdSFLNG+HRFy5UYw8es4orb5daa3+AfE=;
        b=CDiQUfEgpHG1r34qfz9NKCGMFanBT6phnJgrj1Lo7m1DcgTmHGbMPA9lccCJoBy15+
         CSkrMOsIUQ/9K9q2crVNfWZznhXpPZwDp09dh0FCU5fb6Bm+9yQluETceB6DQL3EG5PF
         xSCWg8qzHzv2DPVURJnngaHiRvu1YwMDtb4bm3F97mruv7CqIvrRI0AOARnNeN+9lTZS
         zjk5EmhsFazmpaxxYSzrnWNBhNOBxDZFw9wsArdPH3FjKLH5Xs4AyKukDvy8V8nzOO1f
         c675G4I1nu45mbVuqDItX9FnhbEqQ+b7avzYc4orq2knsyQIYeHH1d7WC3I9Wjat2+wM
         1HPw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKDWEF+lJ52s+hl2PuceqblY7IIXteGkrzfl2m9kY4xHV5sCJIf
	v4kk58nlfc7dzSpc1q7xMrY7PdO/JtHraZH5pgbOc7NTlqDkw0uyog==
X-Received: by 2002:a17:902:50e3:: with SMTP id c32-v6mr18567497plj.39.1542002717541;
        Sun, 11 Nov 2018 22:05:17 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2816940pjt;
        Sun, 11 Nov 2018 22:05:16 -0800 (PST)
X-Google-Smtp-Source: AJdET5f2Ouo//hI2K/71UnRtCA+YTSIJIhVYAUxNL5zEZv9w5lUbTUArMywoO3Xcr7aIxErK40Ae
X-Received: by 2002:a62:b2c9:: with SMTP id z70-v6mr19172123pfl.79.1542002716835;
        Sun, 11 Nov 2018 22:05:16 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542002716; cv=none;
        d=google.com; s=arc-20160816;
        b=Xdi336fUIN9jBE8yhvm7kkogyBU/Evz635KjCmARZUPX/wAefsEBgbvKpUzq5NfXpx
         eJt4W7kwEbDc9VP5jXgr6Iuxkb5/fNODTWTTw6D7G+WM4e+SAOA0ENQT61bWbctpx9TJ
         4XIcoCLW0J96uve6REW5XE1z1N9BtplF1pOw2lv7GGx4UqooCCNAcA7i4/6+eeCCzJOE
         20i2eGlGbO4tGfHkZv60gdrr2HASyBOYwcY6efc6iaTZ6p+2/sLlFdvaIyrdhhS4es+/
         p3BSlTplkBAMDkD40vKV/2BVu6y9kEJNC6LgZkPaYqOsoNf/x+rBiBhPRV7mbgPGXsdo
         Z5eg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-disposition
         :content-transfer-encoding:mime-version:robot-unsubscribe:robot-id
         :git-commit-id:subject:to:references:in-reply-to:reply-to:cc
         :message-id:from:date;
        bh=g4kXsIAGYNoWdSFLNG+HRFy5UYw8es4orb5daa3+AfE=;
        b=0Q3HjU1C0byTEMxEkpQLh0vnoJi/3hJg3JV8BhGuynqoBU8hlzGId7lTRAawQbUibm
         SasRAvhqgkH0SORfHKjuBLo1uGcJOa1gdWDESvEVS8F7mafBiLVdAkr8urRUrlxb2d/v
         sPcu97b546mON0YrWBqDgWGqR8Q930RNTCABDf52LzNgY/r7pbxx6zvkO6bjMuop+biq
         oDUgEhMi3nuUJdKO1W9rIAVDnzV+5GDsFDNjYqOBdK/M4iQaK6CUcxQxh40h+zh76Eza
         Zuf6+1pRpGdqAOpFO7Dzv5YW7gLwRJDqw/lkMwY9luKgrPAhx8q8piiUfX7ImvombXX7
         0Tag==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l26-v6si18480612pfe.21.2018.11.11.22.05.01;
        Sun, 11 Nov 2018 22:05:16 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731636AbeKLP4d (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Mon, 12 Nov 2018 10:56:33 -0500
Received: from terminus.zytor.com ([198.137.202.136]:38173 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731226AbeKLP4d (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 10:56:33 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wAC64Ts93548559
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Sun, 11 Nov 2018 22:04:29 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wAC64T5B3548556;
        Sun, 11 Nov 2018 22:04:29 -0800
Date: Sun, 11 Nov 2018 22:04:29 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Viresh Kumar <tipbot@zytor.com>
Message-ID: <tip-1da1843f9f0334e2428308945d396ffecc2acfe1@git.kernel.org>
Cc: vincent.guittot@linaro.org, viresh.kumar@linaro.org,
        mingo@kernel.org, linux-kernel@vger.kernel.org,
        torvalds@linux-foundation.org, tglx@linutronix.de,
        peterz@infradead.org, daniel.lezcano@linaro.org, hpa@zytor.com
Reply-To: hpa@zytor.com, daniel.lezcano@linaro.org, peterz@infradead.org,
          torvalds@linux-foundation.org, linux-kernel@vger.kernel.org,
          tglx@linutronix.de, vincent.guittot@linaro.org,
          viresh.kumar@linaro.org, mingo@kernel.org
In-Reply-To: <ce3915d5b490fc81af926a3b6bfb775e7188e005.1541416894.git.viresh.kumar@linaro.org>
References: <ce3915d5b490fc81af926a3b6bfb775e7188e005.1541416894.git.viresh.kumar@linaro.org>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:sched/core] sched/core: Create task_has_idle_policy() helper
Git-Commit-ID: 1da1843f9f0334e2428308945d396ffecc2acfe1
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=0.2 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_96_Q autolearn=no autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3WkYdGOlblgowAA--.14460S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAFyrZryUGF18Zw1xtry3CFg_yoWruw17pF
	WDuFWkAw4qq3WUtws7Crs7CryY9wn3A3y3WFWqkryrAF1Utw1Fga4Fqr1agr1F9r10kFW7
	XF4jv3y7Ka12yF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r10
	6r15McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_GF1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI
	42IY6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IUeG9
	aPUUUUU==

Commit-ID:  1da1843f9f0334e2428308945d396ffecc2acfe1
Gitweb:     https://git.kernel.org/tip/1da1843f9f0334e2428308945d396ffecc2acfe1
Author:     Viresh Kumar <viresh.kumar@linaro.org>
AuthorDate: Mon, 5 Nov 2018 16:51:55 +0530
Committer:  Ingo Molnar <mingo@kernel.org>
CommitDate: Mon, 12 Nov 2018 06:17:52 +0100

sched/core: Create task_has_idle_policy() helper

We already have task_has_rt_policy() and task_has_dl_policy() helpers,
create task_has_idle_policy() as well and update sched core to start
using it.

While at it, use task_has_dl_policy() at one more place.

Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Vincent Guittot <vincent.guittot@linaro.org>
Link: http://lkml.kernel.org/r/ce3915d5b490fc81af926a3b6bfb775e7188e005.1541416894.git.viresh.kumar@linaro.org
Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 kernel/sched/core.c  |  4 ++--
 kernel/sched/debug.c |  2 +-
 kernel/sched/fair.c  | 10 +++++-----
 kernel/sched/sched.h |  5 +++++
 4 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 02a20ef196a6..5afb868f7339 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -697,7 +697,7 @@ static void set_load_weight(struct task_struct *p, bool update_load)
 	/*
 	 * SCHED_IDLE tasks get minimal weight:
 	 */
-	if (idle_policy(p->policy)) {
+	if (task_has_idle_policy(p)) {
 		load->weight = scale_load(WEIGHT_IDLEPRIO);
 		load->inv_weight = WMULT_IDLEPRIO;
 		p->se.runnable_weight = load->weight;
@@ -4199,7 +4199,7 @@ recheck:
 		 * Treat SCHED_IDLE as nice 20. Only allow a switch to
 		 * SCHED_NORMAL if the RLIMIT_NICE would normally permit it.
 		 */
-		if (idle_policy(p->policy) && !idle_policy(policy)) {
+		if (task_has_idle_policy(p) && !idle_policy(policy)) {
 			if (!can_nice(p, task_nice(p)))
 				return -EPERM;
 		}
diff --git a/kernel/sched/debug.c b/kernel/sched/debug.c
index 6383aa6a60ca..02bd5f969b21 100644
--- a/kernel/sched/debug.c
+++ b/kernel/sched/debug.c
@@ -974,7 +974,7 @@ void proc_sched_show_task(struct task_struct *p, struct pid_namespace *ns,
 #endif
 	P(policy);
 	P(prio);
-	if (p->policy == SCHED_DEADLINE) {
+	if (task_has_dl_policy(p)) {
 		P(dl.runtime);
 		P(dl.deadline);
 	}
diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 2cac9a469df4..d1f91e6efe51 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -6529,7 +6529,7 @@ wakeup_preempt_entity(struct sched_entity *curr, struct sched_entity *se)
 
 static void set_last_buddy(struct sched_entity *se)
 {
-	if (entity_is_task(se) && unlikely(task_of(se)->policy == SCHED_IDLE))
+	if (entity_is_task(se) && unlikely(task_has_idle_policy(task_of(se))))
 		return;
 
 	for_each_sched_entity(se) {
@@ -6541,7 +6541,7 @@ static void set_last_buddy(struct sched_entity *se)
 
 static void set_next_buddy(struct sched_entity *se)
 {
-	if (entity_is_task(se) && unlikely(task_of(se)->policy == SCHED_IDLE))
+	if (entity_is_task(se) && unlikely(task_has_idle_policy(task_of(se))))
 		return;
 
 	for_each_sched_entity(se) {
@@ -6599,8 +6599,8 @@ static void check_preempt_wakeup(struct rq *rq, struct task_struct *p, int wake_
 		return;
 
 	/* Idle tasks are by definition preempted by non-idle tasks. */
-	if (unlikely(curr->policy == SCHED_IDLE) &&
-	    likely(p->policy != SCHED_IDLE))
+	if (unlikely(task_has_idle_policy(curr)) &&
+	    likely(!task_has_idle_policy(p)))
 		goto preempt;
 
 	/*
@@ -7021,7 +7021,7 @@ static int task_hot(struct task_struct *p, struct lb_env *env)
 	if (p->sched_class != &fair_sched_class)
 		return 0;
 
-	if (unlikely(p->policy == SCHED_IDLE))
+	if (unlikely(task_has_idle_policy(p)))
 		return 0;
 
 	/*
diff --git a/kernel/sched/sched.h b/kernel/sched/sched.h
index 618577fc9aa8..b7a3147874e3 100644
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@ -176,6 +176,11 @@ static inline bool valid_policy(int policy)
 		rt_policy(policy) || dl_policy(policy);
 }
 
+static inline int task_has_idle_policy(struct task_struct *p)
+{
+	return idle_policy(p->policy);
+}
+
 static inline int task_has_rt_policy(struct task_struct *p)
 {
 	return rt_policy(p->policy);
