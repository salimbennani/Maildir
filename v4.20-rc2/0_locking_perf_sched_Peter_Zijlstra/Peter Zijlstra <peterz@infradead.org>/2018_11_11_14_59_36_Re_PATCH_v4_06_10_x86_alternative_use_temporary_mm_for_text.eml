Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:05:49 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgCn3yQRROhbBT52AQ--.36258S3;
	Sun, 11 Nov 2018 23:00:34 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD33UkQROhbN9osAA--.4790S3;
	Sun, 11 Nov 2018 23:00:32 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id r9-v6so2886671pgv.6
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 07:00:32 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=O6hKbT4rhMypQNtjVLSlaefPbzmUNTNUst1/kc+LNSw=;
        b=EUUjgOjKDU8QMqHEnp3MauqNQV95clXCnDw1mmbUdCqQtBY1jcJegULYDPcOeQnXid
         YyAUCdVxogYfvi1PE9ACWHfdVTBjLkQ2J3fCkz6kWOeUx8lRm1S/v4MJAEo6AGstmjG3
         WtsPnINOSq8lXa8mPCd+vtAiRRDIa60Q1oY1ZZr3TnMsmZwaNSWav5gIp8uMvacdI2FW
         qyyGdsrTrE48Xw2iDaK1FJ8D4aSHR7KleM1FTcemtjp9QrfI+1W4n/jxKO5UOS45linG
         h2Q3bgEgq/Ml8PXl8T+0a6vYuCS4SK9AiLSkAPW7sL4kpyNkIpuhyb0y4Lt4EsgzJVgS
         I3lA==
X-Gm-Message-State: AGRZ1gLMExRMk5mEto3aOMp0LfGYRjEvTYZ9Wmsa4nFnwsl1AuTW02PT
	Bx+62Ss6bv+6ROjJ+Kg5+kR4SK/Lnr/NoRLelQ8fuOUMQVDNUS4=
X-Received: by 2002:aa7:8498:: with SMTP id u24-v6mr4314979pfn.220.1541948432001;
        Sun, 11 Nov 2018 07:00:32 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2181992pjt;
        Sun, 11 Nov 2018 07:00:31 -0800 (PST)
X-Google-Smtp-Source: AJdET5eiaxn8tcGjyudj+5Qit7veohxteWr+7yZGwA19S4bB4sNos9Pfw68PkizFe9UWa2cqJuJf
X-Received: by 2002:a63:160d:: with SMTP id w13mr14555217pgl.43.1541948431082;
        Sun, 11 Nov 2018 07:00:31 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541948431; cv=none;
        d=google.com; s=arc-20160816;
        b=hiIXLQXuPygOlXZzXzBuj6/A9jRi3f0EQPKHpfmOjhl9ej/aJ3gTqVoRnO5RIGW2rK
         Mf+prp31U/msB/qDTpqbVlaSrSMTl8rsA5jmcL7tk3AWkUV3lKGvR9O5XTn5vUASziV4
         9SzBiit5c+wNCGvT+iu7bcR04EfZGOklL6orDZpMPtl+/xh4tbPRusCFXHIkROKyJNRH
         tYwjjHdCufaZ3m3a9Hhc/J6+t/mWw//W91N7PimOHmEz2hTNA9PI2OefYPacyvO+k7dM
         IuoWpqq0jOQc/Ia3OwxkkPhuCGKoDAkjr+jHSI7nRBKdd3+kmaAecEUd244wxU+5g6YW
         DZpg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=O6hKbT4rhMypQNtjVLSlaefPbzmUNTNUst1/kc+LNSw=;
        b=Y992mqHznasad5mc2S+3xax2Q2huilGITOUlC0hpRPjLIIa5RftTnGQGrGnTBtbuEk
         27+gYFkp/iX4dGuLX8UgvyJGWPHyQoBbEK+yPqsrlwMEzb+THgP4k1hpUBxh3eQJK4jR
         YECbNhuC7v5tlwl2pklBUbSSulbY7Rd58mHnIUQv5o2lSA56tKxu/zuOq8ETWQZSqzES
         0FfYdWToszQI4gJAWjfkT51QJg2d+tef0nP9zqjG50M44K0Hj9FIZMVJpbai4nIsfNaK
         mi+XYC5RBUWBoceXiHUAbeSVtE3HOGXky1+54yMsE5alnX/E5/1T35eKbTRVnEt+vL1Y
         f3gA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@infradead.org header.s=bombadil.20170209 header.b=JjfXx619;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 11-v6si15197467pfx.102.2018.11.11.07.00.16;
        Sun, 11 Nov 2018 07:00:31 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728560AbeKLAsd (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Sun, 11 Nov 2018 19:48:33 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:33260 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728440AbeKLAsc (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 19:48:32 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Type:MIME-Version
        :References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=O6hKbT4rhMypQNtjVLSlaefPbzmUNTNUst1/kc+LNSw=; b=JjfXx619r8IJtFn5aTyy5h09I
        xIwI4l1gpyyulExdNrtiqXDtVC/wsf+zZsh9OQ7gNXF7b63sHf1bOCmhP5EGmW1mxBvMJkjTHsqR+
        a74hqpKf2tK89+gsOHJOigy/Fexlk0VgtQMSd80KskgVfxvuT15dmlfmICud9rrc2I2TAKOI3JBz3
        qE6KngtBX08aBzpmeGd9gnG1GMFGZrmZ8OAiUBPV0s2Npwy9Ps7QuydAO/GjCFeILM+RadEXarHo5
        9TbfbAZeVWAlnJwvHN4ijGsWra45UxaFUIhWdMOiT34S/G7vDx+gAsnBo0HIjXObs1R+0GTDnur4y
        J98AU90+w==;
Received: from [64.114.255.97] (helo=worktop)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gLrD9-0000mv-FF; Sun, 11 Nov 2018 14:59:39 +0000
Received: by worktop (Postfix, from userid 1000)
        id 832506E2090; Sun, 11 Nov 2018 15:59:36 +0100 (CET)
Date: Sun, 11 Nov 2018 15:59:36 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: Nadav Amit <namit@vmware.com>
Cc: Ingo Molnar <mingo@redhat.com>, linux-kernel@vger.kernel.org,
        x86@kernel.org, "H. Peter Anvin" <hpa@zytor.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Andy Lutomirski <luto@kernel.org>,
        Kees Cook <keescook@chromium.org>,
        Dave Hansen <dave.hansen@intel.com>,
        Masami Hiramatsu <mhiramat@kernel.org>
Subject: Re: [PATCH v4 06/10] x86/alternative: use temporary mm for text
 poking
Message-ID: <20181111145936.GA3021@worktop>
References: <20181110231732.15060-1-namit@vmware.com>
 <20181110231732.15060-7-namit@vmware.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181110231732.15060-7-namit@vmware.com>
User-Agent: Mutt/1.5.22.1 (2013-10-16)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD33UkQROhbN9osAA--.4790S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrWDKry5Gr4rAF17tFWkWFg_yoWrJF13pF
	W7G3W3ArZxJ34xZwsrJw4DAr1S9w4qga1UuFyUu34YkwnIqF9xKrZ5K3y7Wayxt398A3yj
	gF45Kr98ZasIqa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBmb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6ryrMxkI7II2
	jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcVC0I7IYx2IY6xkF7I
	0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E
	14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x
	804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8G
	jcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42
	xK8VAvwI8IcIk0rVWrJr0_WFyUJbIYCTnIWIevJa73UjIFyTuYvjxUgg18UUUUU

On Sat, Nov 10, 2018 at 03:17:28PM -0800, Nadav Amit wrote:
> @@ -683,43 +684,108 @@ __ro_after_init unsigned long poking_addr;
>  
>  static int __text_poke(void *addr, const void *opcode, size_t len)
>  {
> +	bool cross_page_boundary = offset_in_page(addr) + len > PAGE_SIZE;
> +	temporary_mm_state_t prev;
> +	struct page *pages[2] = {NULL};
>  	unsigned long flags;
> +	pte_t pte, *ptep;
> +	spinlock_t *ptl;
> +	int r = 0;
>  
>  	/*
> +	 * While boot memory allocator is running we cannot use struct pages as
> +	 * they are not yet initialized.
>  	 */
>  	BUG_ON(!after_bootmem);
>  
>  	if (!core_kernel_text((unsigned long)addr)) {
>  		pages[0] = vmalloc_to_page(addr);
> +		if (cross_page_boundary)
> +			pages[1] = vmalloc_to_page(addr + PAGE_SIZE);
>  	} else {
>  		pages[0] = virt_to_page(addr);
>  		WARN_ON(!PageReserved(pages[0]));
> +		if (cross_page_boundary)
> +			pages[1] = virt_to_page(addr + PAGE_SIZE);
>  	}
> +
> +	if (!pages[0] || (cross_page_boundary && !pages[1]))
>  		return -EFAULT;
> +
>  	local_irq_save(flags);
> +
> +	/*
> +	 * The lock is not really needed, but this allows to avoid open-coding.
> +	 */
> +	ptep = get_locked_pte(poking_mm, poking_addr, &ptl);
> +
> +	/*
> +	 * If we failed to allocate a PTE, fail. This should *never* happen,
> +	 * since we preallocate the PTE.
> +	 */
> +	if (WARN_ON_ONCE(!ptep))
> +		goto out;

Since we hard rely on init getting that right; can't we simply get rid
of this?

> +
> +	pte = mk_pte(pages[0], PAGE_KERNEL);
> +	set_pte_at(poking_mm, poking_addr, ptep, pte);
> +
> +	if (cross_page_boundary) {
> +		pte = mk_pte(pages[1], PAGE_KERNEL);
> +		set_pte_at(poking_mm, poking_addr + PAGE_SIZE, ptep + 1, pte);
> +	}
> +
> +	/*
> +	 * Loading the temporary mm behaves as a compiler barrier, which
> +	 * guarantees that the PTE will be set at the time memcpy() is done.
> +	 */
> +	prev = use_temporary_mm(poking_mm);
> +
> +	kasan_disable_current();
> +	memcpy((u8 *)poking_addr + offset_in_page(addr), opcode, len);
> +	kasan_enable_current();
> +
> +	/*
> +	 * Ensure that the PTE is only cleared after the instructions of memcpy
> +	 * were issued by using a compiler barrier.
> +	 */
> +	barrier();
> +
> +	pte_clear(poking_mm, poking_addr, ptep);
> +
> +	/*
> +	 * __flush_tlb_one_user() performs a redundant TLB flush when PTI is on,
> +	 * as it also flushes the corresponding "user" address spaces, which
> +	 * does not exist.
> +	 *
> +	 * Poking, however, is already very inefficient since it does not try to
> +	 * batch updates, so we ignore this problem for the time being.
> +	 *
> +	 * Since the PTEs do not exist in other kernel address-spaces, we do
> +	 * not use __flush_tlb_one_kernel(), which when PTI is on would cause
> +	 * more unwarranted TLB flushes.
> +	 *
> +	 * There is a slight anomaly here: the PTE is a supervisor-only and
> +	 * (potentially) global and we use __flush_tlb_one_user() but this
> +	 * should be fine.
> +	 */
> +	__flush_tlb_one_user(poking_addr);
> +	if (cross_page_boundary) {
> +		pte_clear(poking_mm, poking_addr + PAGE_SIZE, ptep + 1);
> +		__flush_tlb_one_user(poking_addr + PAGE_SIZE);
> +	}
> +
> +	/*
> +	 * Loading the previous page-table hierarchy requires a serializing
> +	 * instruction that already allows the core to see the updated version.
> +	 * Xen-PV is assumed to serialize execution in a similar manner.
> +	 */
> +	unuse_temporary_mm(prev);
> +
> +	pte_unmap_unlock(ptep, ptl);
> +out:
> +	if (memcmp(addr, opcode, len))
> +		r = -EFAULT;

How could this ever fail? And how can we reliably recover from that?

I mean, we can move that BUG_ON() we have in text_poke() down a level,
but for example the static_key/jump_label code has no real option on
failing this.

> +
>  	local_irq_restore(flags);
>  	return r;
>  }

Other than that, this looks really good!
