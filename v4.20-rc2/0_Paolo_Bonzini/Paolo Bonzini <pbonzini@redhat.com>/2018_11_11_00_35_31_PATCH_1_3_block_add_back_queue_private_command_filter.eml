Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:03:25 -0000
Received: from icoremail.net (unknown [209.85.210.176])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwoMCedbCO9vAQ--.34172S3;
	Sun, 11 Nov 2018 00:36:29 +0800 (CST)
Received: from mail-pf1-f176.google.com (unknown [209.85.210.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXP0sJCedbb+UnAA--.9364S3;
	Sun, 11 Nov 2018 00:36:25 +0800 (CST)
Received: by mail-pf1-f176.google.com with SMTP id n11-v6so2312134pfb.6
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 08:36:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=Ru6FTSEUG9NC3VtXtDzedAFPlOiXcosIE5fMdR7HWu4=;
        b=BSakDtwjIcs82SJG4F6qV17yr5JN6duUTnd8h+EWk8DByGHIO7Y7Zb3xTEt7zgeRrc
         duRkEhzpCDG1VVrOH3lzqtQWxe4Ck5Hxx4vgiHbEv/6T+UoOdGfYdVFfsLAjoRHZhgMR
         gqMBOQk5+LP7KSWB91FnT7f0wNcSzytgbWJrweEqmLQX2MaAcFz/6qsoiOdRlAG1rkDn
         OHaoVlHT4LHF/1+IaAM2fno3U/VOZV8f2PKDJUvTXRmot830NDIGxPwEz825lwqTbFku
         EyieoWEdTmWtVl+5eC8ROi78PZjhh6KZScbPyk87EBqr+GqplPVfRsYksHUd6VCcwkne
         OiAg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gL1vfg3OrrdSOblZdvVu2qhBdA409Encsthi+bgdUQA+49WfzdF
	ToTGxYI9a/giOYOWmZAwPooJX3UyndnwwYsWVp+RMjk4JJiA0c0=
X-Received: by 2002:a62:22c3:: with SMTP id p64-v6mr13881306pfj.9.1541867785240;
        Sat, 10 Nov 2018 08:36:25 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1268456pjt;
        Sat, 10 Nov 2018 08:36:24 -0800 (PST)
X-Google-Smtp-Source: AJdET5ejLRmzDmgpu4orYWX3xP1dI1MXV0wjoOtmRylzM2/qtxAfU9t4FYn49sxcloGnP8GbmQcD
X-Received: by 2002:a62:cc4:: with SMTP id 65-v6mr13416384pfm.127.1541867784319;
        Sat, 10 Nov 2018 08:36:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541867784; cv=none;
        d=google.com; s=arc-20160816;
        b=R/YiYwNssWQ1+6G5s0B4EjhWympq1W7FVNVnPOepGBYb87lhNZRNTuf7UYTtrVnBd9
         TyRf13/VlGvk+ZW3T727DO0LefimI46TsoLkmwhA6FacjZFiRgqtCgGS2qC3wViHYBKR
         2JY0dYNuCnKsSkqRwKfVj6flJOEzMljm0+yIzQmObzibJcSits0u4wqV2MjjLxaOkC4m
         bok438s9KxVRvOhehthbEUiId7DVgHhmU5yPRdNxiqCLoj55tAH2LSwgPthO9SNuMSMD
         c9Q8nRfRUUSsEkIVzjVFXE0fjVFIHfguFHFXe0BBRYl0kqkhEH5pcn9x9eXASXMxgaO2
         1FUQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=Ru6FTSEUG9NC3VtXtDzedAFPlOiXcosIE5fMdR7HWu4=;
        b=awgxZ9WZFwd57jHwTj9e7O0wjZfK8SIRzM3w5hlcXCWV0f3ylGoMePvAZsR7ZtyLD5
         DxGGtyd44uUYtI8T4YWmvE3lp7xhTfO2F+CGJU+DowyAVRRm9eOsBiLXnNd5gNAM66iD
         rWc8m65jFPbrVLs2FQEtOl3KuI63KjlQboZezLP9vYL8GFvy944SO+h2vIfwNySUKZET
         /cAcy3nyqZkIASYoj+gqaZetd84CgxJNpB5gCIiZnZDiH5VKses7QSGqCykEMzk/OuV4
         T4iW+C0C6M+Lm8DxJX4ghckXC2BiomHqiZ+dw+uX3pOZo6CZbxjdvtMTy6n/QcwMrUIc
         dfJQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w18-v6si12366063pfg.70.2018.11.10.08.36.09;
        Sat, 10 Nov 2018 08:36:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727195AbeKKCVQ (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sat, 10 Nov 2018 21:21:16 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51986 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727114AbeKKCVQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 21:21:16 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id B586F3082125;
        Sat, 10 Nov 2018 16:35:39 +0000 (UTC)
Received: from 640k.localdomain.com (ovpn-112-24.ams2.redhat.com [10.36.112.24])
        by smtp.corp.redhat.com (Postfix) with ESMTP id B1B65608C2;
        Sat, 10 Nov 2018 16:35:37 +0000 (UTC)
From: Paolo Bonzini <pbonzini@redhat.com>
To: linux-kernel@vger.kernel.org
Cc: linux-scsi@vger.kernel.org, Hannes Reinecke <hare@suse.com>,
        "Martin K. Petersen" <martin.petersen@oracle.com>,
        James Bottomley <James.Bottomley@hansenpartnership.com>
Subject: [PATCH 1/3] block: add back queue-private command filter
Date: Sat, 10 Nov 2018 17:35:31 +0100
Message-Id: <1541867733-7836-2-git-send-email-pbonzini@redhat.com>
In-Reply-To: <1541867733-7836-1-git-send-email-pbonzini@redhat.com>
References: <1541867733-7836-1-git-send-email-pbonzini@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.42]); Sat, 10 Nov 2018 16:35:39 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXP0sJCedbb+UnAA--.9364S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKr4UAFW3JFy5ZFy5Wr45KFg_yoWxurW3pF
	45Xa1Ykr4rKFyxWFWkta1DX34agwn7K3429ayru39ayFn5tryq93W8AryjvFWfZrZ3GFZF
	vrsFgrZxAwnrC3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW8Jr0_Cr1UM28EF7xvwVC2z280aVCY1x0267AKxVW8Jr0_Cr1UM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1j6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8JVWxJwCYIxAI
	cVC2z280aVCY1x0267AKxVW8JVW8Jr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUCVW8JbIYCTnIWIevJa73UjIFyTuYvjxUHc4S
	DUUUU

The command filter used to be mutable via sysfs, but this was broken
and backed out. Let's add it back. This patch adds the infrastructure
for filtering, but unlike the old code this one just adds a pointer to
request_queue, so as to make it cheaper in the majority of cases where
no special filtering is desired.

This is a revert of commit 018e044 ("block: get rid of queue-private
command filter", 2009-06-26), though with many changes.

Cc: linux-scsi@vger.kernel.org
Cc: Hannes Reinecke <hare@suse.com>
Cc: Martin K. Petersen <martin.petersen@oracle.com>
Cc: James Bottomley <James.Bottomley@hansenpartnership.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 block/blk-sysfs.c      |  2 ++
 block/bsg-lib.c        |  4 ++--
 block/bsg.c            |  8 ++++----
 block/scsi_ioctl.c     | 19 +++++++++----------
 drivers/scsi/sg.c      |  5 +++--
 include/linux/blkdev.h |  9 ++++++++-
 include/linux/bsg.h    |  4 ++--
 7 files changed, 30 insertions(+), 21 deletions(-)

diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index 3772671cf2bc..d1ec150a3478 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -838,6 +838,8 @@ static void __blk_release_queue(struct work_struct *work)
 
 	blk_exit_rl(q, &q->root_rl);
 
+	kfree(q->cmd_filter);
+
 	if (q->queue_tags)
 		__blk_queue_free_tags(q);
 
diff --git a/block/bsg-lib.c b/block/bsg-lib.c
index f3501cdaf1a6..23200d8b035d 100644
--- a/block/bsg-lib.c
+++ b/block/bsg-lib.c
@@ -41,8 +41,8 @@ static int bsg_transport_check_proto(struct sg_io_v4 *hdr)
 	return 0;
 }
 
-static int bsg_transport_fill_hdr(struct request *rq, struct sg_io_v4 *hdr,
-		fmode_t mode)
+static int bsg_transport_fill_hdr(struct request_queue *q, struct request *rq,
+				  struct sg_io_v4 *hdr, fmode_t mode)
 {
 	struct bsg_job *job = blk_mq_rq_to_pdu(rq);
 
diff --git a/block/bsg.c b/block/bsg.c
index 9a442c23a715..ec8cbf3bf734 100644
--- a/block/bsg.c
+++ b/block/bsg.c
@@ -69,8 +69,8 @@ static int bsg_scsi_check_proto(struct sg_io_v4 *hdr)
 	return 0;
 }
 
-static int bsg_scsi_fill_hdr(struct request *rq, struct sg_io_v4 *hdr,
-		fmode_t mode)
+static int bsg_scsi_fill_hdr(struct request_queue *q, struct request *rq,
+			     struct sg_io_v4 *hdr, fmode_t mode)
 {
 	struct scsi_request *sreq = scsi_req(rq);
 
@@ -83,7 +83,7 @@ static int bsg_scsi_fill_hdr(struct request *rq, struct sg_io_v4 *hdr,
 
 	if (copy_from_user(sreq->cmd, uptr64(hdr->request), sreq->cmd_len))
 		return -EFAULT;
-	if (blk_verify_command(sreq->cmd, mode))
+	if (blk_verify_command(q, sreq->cmd, mode))
 		return -EPERM;
 	return 0;
 }
@@ -159,7 +159,7 @@ static void bsg_scsi_free_rq(struct request *rq)
 	if (IS_ERR(rq))
 		return rq;
 
-	ret = q->bsg_dev.ops->fill_hdr(rq, hdr, mode);
+	ret = q->bsg_dev.ops->fill_hdr(q, rq, hdr, mode);
 	if (ret)
 		goto out;
 
diff --git a/block/scsi_ioctl.c b/block/scsi_ioctl.c
index 533f4aee8567..5d577c89f9e6 100644
--- a/block/scsi_ioctl.c
+++ b/block/scsi_ioctl.c
@@ -34,11 +34,6 @@
 #include <scsi/scsi_ioctl.h>
 #include <scsi/scsi_cmnd.h>
 
-struct blk_cmd_filter {
-	unsigned long read_ok[BLK_SCSI_CMD_PER_LONG];
-	unsigned long write_ok[BLK_SCSI_CMD_PER_LONG];
-};
-
 static struct blk_cmd_filter blk_default_cmd_filter;
 
 /* Command group 3 is reserved and should never be used.  */
@@ -207,14 +202,18 @@ static void blk_set_cmd_filter_defaults(struct blk_cmd_filter *filter)
 	__set_bit(GPCMD_SET_READ_AHEAD, filter->write_ok);
 }
 
-int blk_verify_command(unsigned char *cmd, fmode_t mode)
+int blk_verify_command(struct request_queue *q, unsigned char *cmd,
+		       fmode_t mode)
 {
-	struct blk_cmd_filter *filter = &blk_default_cmd_filter;
-
+	struct blk_cmd_filter *filter = q->cmd_filter;
+	
 	/* root can do any command. */
 	if (capable(CAP_SYS_RAWIO))
 		return 0;
 
+	if (!filter)
+		filter = &blk_default_cmd_filter;
+
 	/* Anybody who can open the device can do a read-safe command */
 	if (test_bit(cmd[0], filter->read_ok))
 		return 0;
@@ -234,7 +233,7 @@ static int blk_fill_sghdr_rq(struct request_queue *q, struct request *rq,
 
 	if (copy_from_user(req->cmd, hdr->cmdp, hdr->cmd_len))
 		return -EFAULT;
-	if (blk_verify_command(req->cmd, mode))
+	if (blk_verify_command(q, req->cmd, mode))
 		return -EPERM;
 
 	/*
@@ -468,7 +467,7 @@ int sg_scsi_ioctl(struct request_queue *q, struct gendisk *disk, fmode_t mode,
 	if (in_len && copy_from_user(buffer, sic->data + cmdlen, in_len))
 		goto error;
 
-	err = blk_verify_command(req->cmd, mode);
+	err = blk_verify_command(q, req->cmd, mode);
 	if (err)
 		goto error;
 
diff --git a/drivers/scsi/sg.c b/drivers/scsi/sg.c
index 8a254bb46a9b..1b04016d3bb8 100644
--- a/drivers/scsi/sg.c
+++ b/drivers/scsi/sg.c
@@ -240,11 +240,12 @@ static int sg_check_file_access(struct file *filp, const char *caller)
 static int sg_allow_access(struct file *filp, unsigned char *cmd)
 {
 	struct sg_fd *sfp = filp->private_data;
+	struct scsi_device *device = sfp->parentdp->device;
 
-	if (sfp->parentdp->device->type == TYPE_SCANNER)
+	if (device->type == TYPE_SCANNER)
 		return 0;
 
-	return blk_verify_command(cmd, filp->f_mode);
+	return blk_verify_command(device->request_queue, cmd, filp->f_mode);
 }
 
 static int
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 6980014357d4..df46a36c9467 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -352,6 +352,11 @@ struct blk_queue_tag {
 #define BLK_SCSI_MAX_CMDS	(256)
 #define BLK_SCSI_CMD_PER_LONG	(BLK_SCSI_MAX_CMDS / (sizeof(long) * 8))
 
+struct blk_cmd_filter {
+	unsigned long read_ok[BLK_SCSI_CMD_PER_LONG];
+	unsigned long write_ok[BLK_SCSI_CMD_PER_LONG];
+};
+
 /*
  * Zoned block device models (zoned limit).
  */
@@ -639,6 +644,7 @@ struct request_queue {
 	bsg_job_fn		*bsg_job_fn;
 	struct bsg_class_device bsg_dev;
 #endif
+	struct blk_cmd_filter	*cmd_filter;
 
 #ifdef CONFIG_BLK_DEV_THROTTLING
 	/* Throttle data */
@@ -1424,7 +1430,8 @@ static inline int sb_issue_zeroout(struct super_block *sb, sector_t block,
 				    gfp_mask, 0);
 }
 
-extern int blk_verify_command(unsigned char *cmd, fmode_t mode);
+extern int blk_verify_command(struct request_queue *q, unsigned char *cmd,
+			      fmode_t mode);
 
 enum blk_default_limits {
 	BLK_MAX_SEGMENTS	= 128,
diff --git a/include/linux/bsg.h b/include/linux/bsg.h
index dac37b6e00ec..461ac68691b9 100644
--- a/include/linux/bsg.h
+++ b/include/linux/bsg.h
@@ -9,8 +9,8 @@
 #ifdef CONFIG_BLK_DEV_BSG
 struct bsg_ops {
 	int	(*check_proto)(struct sg_io_v4 *hdr);
-	int	(*fill_hdr)(struct request *rq, struct sg_io_v4 *hdr,
-				fmode_t mode);
+	int	(*fill_hdr)(struct request_queue *q, struct request *rq,
+			    struct sg_io_v4 *hdr, fmode_t mode);
 	int	(*complete_rq)(struct request *rq, struct sg_io_v4 *hdr);
 	void	(*free_rq)(struct request *rq);
 };
-- 
1.8.3.1

