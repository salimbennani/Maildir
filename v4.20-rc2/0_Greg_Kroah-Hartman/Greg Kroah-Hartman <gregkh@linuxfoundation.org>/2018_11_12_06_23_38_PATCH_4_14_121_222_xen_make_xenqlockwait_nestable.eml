Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:43:40 -0000
Received: from icoremail.net (unknown [209.85.215.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv+5ftOhb8ot4AQ--.36473S3;
	Mon, 12 Nov 2018 06:59:44 +0800 (CST)
Received: from mail-pg1-f179.google.com (unknown [209.85.215.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBEBdtOhbhpsuAA--.766S3;
	Mon, 12 Nov 2018 06:59:42 +0800 (CST)
Received: by mail-pg1-f179.google.com with SMTP id f8-v6so3162094pgq.5
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 14:59:42 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=6/C7xgOnTOO2k3M7JAxsB0R12mbUszWXj3XjaGOkSyI=;
        b=SVB8bzCQhRm1goVjpDBK4CZQWuWTa+KDlFgDdbNgkZQhM0VK4xnXlgU+UqnAbmBGJx
         sGbVSLAyMzl0EjMth0Ar0lU0V9NOd0driCSfvowGeD6RLcTdZPrJuplb4M3b6tkN43B3
         GC0+DszpeK+oBqIjbRxsFFYFDWJXEobdF6OfuFapIKqhrs9CRgRmS7OgRv0y3p5OabfI
         xUnokp9gxXaqQRI2mLe5ezu6wa0BwdpKcb6HJI5ybzW70z5cKCzYEXBT51CMv0+llBJZ
         aBl+Qx3ARImj5gRFA9HDpYiyygDeFZgEEy7LoMOdNJnEM4C6prmU0v5jv7hM+wb8b8Ww
         Ub3w==
X-Gm-Message-State: AGRZ1gJZwMBYve0FMJX0ZjOehKGU5Zxv3NvbQo8JFsTpQf+aVuVO9uKH
	72QeYPG3YzZnlyLRBZtjX9IQvkxulpJnEVPNaj8IpFWuaOMf2JM=
X-Received: by 2002:a65:66ce:: with SMTP id c14mr15285856pgw.450.1541977181709;
        Sun, 11 Nov 2018 14:59:41 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2540406pjt;
        Sun, 11 Nov 2018 14:59:41 -0800 (PST)
X-Google-Smtp-Source: AJdET5f5Bj6PBakBDDdzOd/W9qK++UtAWkhB1SGjLd8IhHwjkcnkrhQSUBpBP2HwgXckqH6jLFJt
X-Received: by 2002:a63:d513:: with SMTP id c19mr15332034pgg.287.1541977181019;
        Sun, 11 Nov 2018 14:59:41 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541977180; cv=none;
        d=google.com; s=arc-20160816;
        b=JJk2xZPONBhkyBjCiDLuI1qoWS3jw5KartF4TMPVt5zsfDQRk7VwRV7MIQcCLhNuuQ
         JZQRWMmr8AhL1iuDv4Jn7MjbPNk+BQTQk27p9M+MbK13bbWtWKCIkoaCUv3dZeCtw/CO
         jvmvIHdX6LJOlLxQbcyEMRjJhlUT6h0JKsz5Xi17HQgRy3Ez/ZbopeZuhwC07bI6zMQu
         oq7r8DvSD9lHonj1L6HDZhmvd+EGMwVGhvoxcre56cydPE9jUOROhoU6Ufav5HebBWqt
         a8QyUg9ZjiQqTgYqo+u4KcBrt7+o48jASJlcjYLCejaGP1n5TU1w3DqJsm3kQEvbnfAu
         zqog==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=6/C7xgOnTOO2k3M7JAxsB0R12mbUszWXj3XjaGOkSyI=;
        b=QvhSarnzrFJ8uBDzod/Op1VJPOczUwy75rk+ywAEKNX3cDITZKAQ3U80dl5ORKAYoc
         eTlwjabF9rfNGoFcG6JI4jYnaSLRUtgWyl7/1RJeHJdMJxFC+U5xlnKB9/X+dnaeK0c9
         B30FgjqnbmD4X0abUd8A6llgsNq8xYUrWdgE12Ki77zLElJba+5BslxoVBndRw6pESWh
         osk9AJar7YOdG4FIkEC/Ff18onJif3A8JY18NG97sUfSk7ECw2E36IWRlC2RQc2MM0bu
         HNOBvNrF+JbcMn9MZVvPpI7J7qkT5mr6512nviVcHisIqRn6fTaNTroQbBkdLlAO1iqh
         fpJg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=b47PO4R1;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 37-v6si16283892ple.389.2018.11.11.14.59.26;
        Sun, 11 Nov 2018 14:59:40 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390932AbeKLItT (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:49:19 -0500
Received: from mail.kernel.org ([198.145.29.99]:53628 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2390750AbeKLIWi (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:22:38 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 8CC2D22353;
        Sun, 11 Nov 2018 22:32:40 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975560;
        bh=VtV1hfBzQfYRFrVNG7Ujo0YlOf9nbAMpxolRUBwy/oM=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=b47PO4R17oTmNZo6niFCLisChySZUsfACZ6JGYFnq2JOQCsBmsHKhDWv+dy/sxLNC
         ydWglioSk6uGiFmVuHxwh+13FOUmxufm/DxDe3kzlR74JBee2m7TjcmC1MkvjI1RUA
         51TE0X1C1YzR48Wq5zrZppK7mibr8vkrxQILOCRY=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Waiman.Long@hp.com, peterz@infradead.org,
        Juergen Gross <jgross@suse.com>,
        Jan Beulich <jbeulich@suse.com>
Subject: [PATCH 4.14 121/222] xen: make xen_qlock_wait() nestable
Date: Sun, 11 Nov 2018 14:23:38 -0800
Message-Id: <20181111221658.549686523@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBEBdtOhbhpsuAA--.766S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxurWkJr47JrW8Gr47uF47CFg_yoW5Jw4kp3
	yfGrZ3ZF48Ja1IvwsxG3Z2vr4Duw4kXw47Crs3Zw1xZ343Zr98Gr92y3ZI9FW8ua97Kr1D
	Aw15KFWfC3W5GFUanT9S1TB71UUUUU7qnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7I
	U56xR3UUUUU==

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Juergen Gross <jgross@suse.com>

commit a856531951dc8094359dfdac21d59cee5969c18e upstream.

xen_qlock_wait() isn't safe for nested calls due to interrupts. A call
of xen_qlock_kick() might be ignored in case a deeper nesting level
was active right before the call of xen_poll_irq():

CPU 1:                                   CPU 2:
spin_lock(lock1)
                                         spin_lock(lock1)
                                         -> xen_qlock_wait()
                                            -> xen_clear_irq_pending()
                                            Interrupt happens
spin_unlock(lock1)
-> xen_qlock_kick(CPU 2)
spin_lock_irqsave(lock2)
                                         spin_lock_irqsave(lock2)
                                         -> xen_qlock_wait()
                                            -> xen_clear_irq_pending()
                                               clears kick for lock1
                                            -> xen_poll_irq()
spin_unlock_irq_restore(lock2)
-> xen_qlock_kick(CPU 2)
                                            wakes up
                                         spin_unlock_irq_restore(lock2)
                                         IRET
                                           resumes in xen_qlock_wait()
                                           -> xen_poll_irq()
                                           never wakes up

The solution is to disable interrupts in xen_qlock_wait() and not to
poll for the irq in case xen_qlock_wait() is called in nmi context.

Cc: stable@vger.kernel.org
Cc: Waiman.Long@hp.com
Cc: peterz@infradead.org
Signed-off-by: Juergen Gross <jgross@suse.com>
Reviewed-by: Jan Beulich <jbeulich@suse.com>
Signed-off-by: Juergen Gross <jgross@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 arch/x86/xen/spinlock.c |   24 ++++++++++--------------
 1 file changed, 10 insertions(+), 14 deletions(-)

--- a/arch/x86/xen/spinlock.c
+++ b/arch/x86/xen/spinlock.c
@@ -40,29 +40,25 @@ static void xen_qlock_kick(int cpu)
  */
 static void xen_qlock_wait(u8 *byte, u8 val)
 {
+	unsigned long flags;
 	int irq = __this_cpu_read(lock_kicker_irq);
 
 	/* If kicker interrupts not initialized yet, just spin */
-	if (irq == -1)
+	if (irq == -1 || in_nmi())
 		return;
 
-	/* If irq pending already clear it and return. */
+	/* Guard against reentry. */
+	local_irq_save(flags);
+
+	/* If irq pending already clear it. */
 	if (xen_test_irq_pending(irq)) {
 		xen_clear_irq_pending(irq);
-		return;
+	} else if (READ_ONCE(*byte) == val) {
+		/* Block until irq becomes pending (or a spurious wakeup) */
+		xen_poll_irq(irq);
 	}
 
-	if (READ_ONCE(*byte) != val)
-		return;
-
-	/*
-	 * If an interrupt happens here, it will leave the wakeup irq
-	 * pending, which will cause xen_poll_irq() to return
-	 * immediately.
-	 */
-
-	/* Block until irq becomes pending (or perhaps a spurious wakeup) */
-	xen_poll_irq(irq);
+	local_irq_restore(flags);
 }
 
 static irqreturn_t dummy_handler(int irq, void *dev_id)

