Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:44:42 -0000
Received: from icoremail.net (unknown [209.85.215.174])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv5qDvOhbwbV4AQ--.36306S3;
	Mon, 12 Nov 2018 07:34:28 +0800 (CST)
Received: from mail-pg1-f174.google.com (unknown [209.85.215.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHKUV_vOhbSK8uAA--.36682S3;
	Mon, 12 Nov 2018 07:34:23 +0800 (CST)
Received: by mail-pg1-f174.google.com with SMTP id 80so3190879pge.4
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:34:23 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=xEtvJNDdH3NB0/U0H2WFYm+g2WyKl9xnZSC6oSWuBl0=;
        b=T25hKxDPHzYR8FF6V3vG1SJrHnHHGk872hPrw3gDW1gFEHFTICRVAA834sSvPWa8/a
         7O6gCce68RAMW9WgORQpTT+4N2n+XZGrPRRWCneVfGr+5nzahxcuBNufl7rf5QEAGAsQ
         6Kf+Q+Li1FKOhRlY8YAhAbXI6c0jptSLnHzuYl05vfofDNbDS7cnurpE0ADyKuRGa7hQ
         UUv1Tgqd7X1MLQPgiDwqpfQeq454E6gSjd4IZOQXjnMY4hJDnF/rdbp2xcYv6+OyCJGN
         dzFV1iktezMKbwRQIZMdgsMBMskaQCfJ8OctO6gk5X6gCfUSgxPQala/GdJwrh7Pi231
         7Mqw==
X-Gm-Message-State: AGRZ1gLzTQwCeNFMWJ9bDBVQwHRfBgLwS1s2T0rquNh+VVn2dR47nckU
	JDCnCjAf8sXY56i4fsmXZFmDic5wDjxwVk3ZvBemTmVPWJohvjY=
X-Received: by 2002:a63:a91a:: with SMTP id u26mr15287368pge.349.1541979263164;
        Sun, 11 Nov 2018 15:34:23 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2565922pjt;
        Sun, 11 Nov 2018 15:34:22 -0800 (PST)
X-Google-Smtp-Source: AJdET5eNrLfMY9vJw0qNQZjXoHqJ7KH+kXObQesQaCW1nRYSV8JgMIk2d2X0t6oG8aDHV6tvA/HO
X-Received: by 2002:a17:902:14e:: with SMTP id 72-v6mr17189521plb.299.1541979262452;
        Sun, 11 Nov 2018 15:34:22 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541979262; cv=none;
        d=google.com; s=arc-20160816;
        b=kp+EOdUukaLoAg7R5vG5G0pyxzWpqCjQo3cuK9zuVx3cRA1q2sitFofHL7TB0td07v
         zL9mBNT/AkJB+g2fjAlD2C0X83qUyeqLxCz/5YR3UAs8RlEriY2rVIX12sLE3c1fW4QU
         7JNn8CbzAyrpUKyLHma3H3vsoedtUxi+CYiaAx9RSNzB4Etatb/u31ojQKXMSonX8AES
         jalgkXUUBh7dADanvYefsal9VVSnRxXCoj1Nr9DmWVkXX1UbTqIvTJ+q6TsmbcnZGPc/
         21OmzETJTX1DGpsIj/8wUp/5UjSC6a4NsVmx+eDtAXR75dtdxnrOSPqsj4QoxgU8BluJ
         tQoQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=xEtvJNDdH3NB0/U0H2WFYm+g2WyKl9xnZSC6oSWuBl0=;
        b=I0iEPHH2taQtPQxdS2BjYNlu42zxeDShHKagIeabKcENowlDpBT61K3VR2fug8kBnH
         Tfh7L7CMBzy4Mxqf6nCHgOH+opgcl9cvyb+PwRIrvCOOasloXuP3cd8ArzE45pWZ/wD+
         D4fCiPC2mH59BaJ06LHErwL3yFlMXi0XT9MOLXjT9AGnU1A710b+i0L9f/CjrOPVshEu
         Dnf4x3smW8V+kNHgnuL2JqYr9Fg3lypPJfxNZY7OoFPz4FMslJiN+MbVmI6IDhnAuuFR
         CtEsajsKbjU6E+vB+evwlGZIdxkTZTOklpDRNgmhbc4uUjKSgiJ+HS1xp80F/nzYmR2y
         tJFg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=n60ltEir;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w19si9146378pgf.573.2018.11.11.15.34.08;
        Sun, 11 Nov 2018 15:34:22 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388643AbeKLJYN (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 04:24:13 -0500
Received: from mail.kernel.org ([198.145.29.99]:43886 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2388417AbeKLIUL (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:20:11 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2588721707;
        Sun, 11 Nov 2018 22:30:14 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975414;
        bh=BMLa2PooLHBl+wU0Nn80e/xOWHzmcI0OHLORUbRQxqE=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=n60ltEirknJ2X01ltkt68FxzoiMKDXml4VUPfTJtv+yW+OpzuT3geboPhz8zQ/HAm
         JnHTR1bfMOFqgnTNPL06dIkN/PktIlq6xcWAVqKhPpSdr5w1y/JKG2j8Dr8qDyUbPy
         XINKgfD9kuCsggncVb9ZPrizrDK09JD9obRkI5qI=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Shaul Triebitz <shaul.triebitz@intel.com>,
        Luca Coelho <luciano.coelho@intel.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.18 086/350] iwlwifi: pcie: avoid empty free RB queue
Date: Sun, 11 Nov 2018 14:19:10 -0800
Message-Id: <20181111221710.715055534@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221707.043394111@linuxfoundation.org>
References: <20181111221707.043394111@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHKUV_vOhbSK8uAA--.36682S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGw4kGrykXrWxWr18tw1xAFb_yoWrGFy8pr
	43C34akF95XrsrurnxAa1rC3Z8Xan3WF1DXFZ2gwn3ur98Zr1rGa97JF10vFy8AF4fXrW5
	uF1jvws3CF4DZ37anT9S1TB71UUUUUDqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCY
	IxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVjvjDU0xZFpf9x07bL
	byZUUUUU=

4.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Shaul Triebitz <shaul.triebitz@intel.com>

[ Upstream commit 868a1e863f95183f00809363fefba6d4f5bcd116 ]

If all free RB queues are empty, the driver will never restock the
free RB queue.  That's because the restocking happens in the Rx flow,
and if the free queue is empty there will be no Rx.

Although there's a background worker (a.k.a. allocator) allocating
memory for RBs so that the Rx handler can restock them, the worker may
run only after the free queue has become empty (and then it is too
late for restocking as explained above).

There is a solution for that called 'emergency': If the number of used
RB's reaches half the amount of all RB's, the Rx handler will not wait
for the allocator but immediately allocate memory for the used RB's
and restock the free queue.

But, since the used RB's is per queue, it may happen that the used
RB's are spread between the queues such that the emergency check will
fail for each of the queues
(and still run out of RBs, causing the above symptom).

To fix it, move to emergency mode if the sum of *all* used RBs (for
all Rx queues) reaches half the amount of all RB's

Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/net/wireless/intel/iwlwifi/pcie/rx.c |   32 +++++++++++++++++----------
 1 file changed, 21 insertions(+), 11 deletions(-)

--- a/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
@@ -1050,6 +1050,14 @@ void iwl_pcie_rx_free(struct iwl_trans *
 	kfree(trans_pcie->rxq);
 }
 
+static void iwl_pcie_rx_move_to_allocator(struct iwl_rxq *rxq,
+					  struct iwl_rb_allocator *rba)
+{
+	spin_lock(&rba->lock);
+	list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
+	spin_unlock(&rba->lock);
+}
+
 /*
  * iwl_pcie_rx_reuse_rbd - Recycle used RBDs
  *
@@ -1081,9 +1089,7 @@ static void iwl_pcie_rx_reuse_rbd(struct
 	if ((rxq->used_count % RX_CLAIM_REQ_ALLOC) == RX_POST_REQ_ALLOC) {
 		/* Move the 2 RBDs to the allocator ownership.
 		 Allocator has another 6 from pool for the request completion*/
-		spin_lock(&rba->lock);
-		list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
-		spin_unlock(&rba->lock);
+		iwl_pcie_rx_move_to_allocator(rxq, rba);
 
 		atomic_inc(&rba->req_pending);
 		queue_work(rba->alloc_wq, &rba->rx_alloc);
@@ -1261,10 +1267,18 @@ restart:
 		IWL_DEBUG_RX(trans, "Q %d: HW = SW = %d\n", rxq->id, r);
 
 	while (i != r) {
+		struct iwl_rb_allocator *rba = &trans_pcie->rba;
 		struct iwl_rx_mem_buffer *rxb;
-
-		if (unlikely(rxq->used_count == rxq->queue_size / 2))
+		/* number of RBDs still waiting for page allocation */
+		u32 rb_pending_alloc =
+			atomic_read(&trans_pcie->rba.req_pending) *
+			RX_CLAIM_REQ_ALLOC;
+
+		if (unlikely(rb_pending_alloc >= rxq->queue_size / 2 &&
+			     !emergency)) {
+			iwl_pcie_rx_move_to_allocator(rxq, rba);
 			emergency = true;
+		}
 
 		if (trans->cfg->mq_rx_supported) {
 			/*
@@ -1307,17 +1321,13 @@ restart:
 			iwl_pcie_rx_allocator_get(trans, rxq);
 
 		if (rxq->used_count % RX_CLAIM_REQ_ALLOC == 0 && !emergency) {
-			struct iwl_rb_allocator *rba = &trans_pcie->rba;
-
 			/* Add the remaining empty RBDs for allocator use */
-			spin_lock(&rba->lock);
-			list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
-			spin_unlock(&rba->lock);
+			iwl_pcie_rx_move_to_allocator(rxq, rba);
 		} else if (emergency) {
 			count++;
 			if (count == 8) {
 				count = 0;
-				if (rxq->used_count < rxq->queue_size / 3)
+				if (rb_pending_alloc < rxq->queue_size / 3)
 					emergency = false;
 
 				rxq->read = i;

