Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:43:25 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv5p9suhbZoN4AQ--.36240S3;
	Mon, 12 Nov 2018 06:51:42 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3FUF7suhboJcuAA--.32150S3;
	Mon, 12 Nov 2018 06:51:40 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id z17-v6so3161689pgv.3
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 14:51:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=/Rt0Xytu1AMV52y3ctfgBZKw0qr2dD1iOp3XkZh+jbA=;
        b=Ph8hI2wIqqmlbO4RSmFdGqMg62vamH4PQFv5UGdjmnfmpKXRW5CsQlAHTUIHzAi4aj
         1FhELYvjoeTFHNpGD+dEAY+IFye838ZR8BBaDCjoQWUkS0HGBU0F4O1Sj/AHaXDUwsmn
         z7I4p8dj3uDqWS1e57yqRdL62E+WxitfRwOI3pajhkfknFP4lXMQ9n+sPeG4CSPT+V5n
         o8M8mkK++xHH2kS1w1/o3qYLleDxhQQ/dtStiwOqT+RawYI3XZ/OQE+pG0075HFX7yLd
         1r9AAOMX4QtJ6LzAyRuaaZCqyCydJ2f4Fu0RSpomqmLyATP3bnguojBT3ER8+zrqmla6
         S4Iw==
X-Gm-Message-State: AGRZ1gJnrhjDzvX6SsexAv7WgDRA9H2bDFvPFJARv8QKSeUl6YxLJAqs
	jV1A7M6rPpFWd6i0IBdq3/mWVEzYCeJNwQROzeg0jpn6qM3Hyvs=
X-Received: by 2002:aa7:87d0:: with SMTP id i16-v6mr17709293pfo.20.1541976699673;
        Sun, 11 Nov 2018 14:51:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2535628pjt;
        Sun, 11 Nov 2018 14:51:39 -0800 (PST)
X-Google-Smtp-Source: AJdET5cgJeQDwiU62CAgGdDCSTMp18cWUeyiLgmNzVWjppJ+QyZtPlFpJcyJzNuzFv8+dAe4qH7O
X-Received: by 2002:a63:3858:: with SMTP id h24mr14998005pgn.300.1541976698980;
        Sun, 11 Nov 2018 14:51:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541976698; cv=none;
        d=google.com; s=arc-20160816;
        b=S+LahFnWn7sFPxUtrdqHYrcu4Enpy43GBKF+CMtiTOHnMa4xGV8WjTB13hGde4Qz+U
         w93yHd7kaL8hihqKYmHOfvQTh2JIipmu0TzpUNAMr8qjlaCf+J1AV4tkzT3brNiZl1E2
         Er51b1wteNbMH/JGg1teKZ0i73F4+cZEoIreXiRLo4b/eMmAPQnE+lWhevPYrqfIMY4r
         5UWflC42AMznqDfnVfUArvfBEH5fqfupzWYEq0aQ08UbiA4xAlU+2I0js8s4Y2mUMgY1
         b30b8oX7UhaROTqGT3sM2hDhf25jj12StcZjIttb774LzUgTQfvRaykfDRbpJVX6Mfru
         5aiA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=/Rt0Xytu1AMV52y3ctfgBZKw0qr2dD1iOp3XkZh+jbA=;
        b=0R9m2phc8a46C2/RwckOb1wgqPYSAdq2QBSKpBgETG7W+T14lIW3JNrD7z6ocVFb8a
         w1of1pPfx5E6ldtAv0u4k+X1c6u4ji3UI+6fFJVThvkSl3PICiPJXuhmda155N4D8rZe
         XfVRzAFZX8Ezukg29Q1vANvTH/OsIVVw2oV5z16LgDlkE/O9+O1HwWDg0KzaY0FgLmdJ
         StvYmZg4B0T9su1+hXlAy88WeB5qdwTnDH7Hb6jtWtEpOSR2f7xtcG+TK3UC7m9fZZPT
         D0ioF95yI5bgrjUWhnjxwF9Zyjmf2e4233xQoqLaGxWUCZOn64WHS0cfeHGbLl8baO6I
         zFXA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=NOFom1Bw;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t9si1748265plz.427.2018.11.11.14.51.24;
        Sun, 11 Nov 2018 14:51:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404315AbeKLIlQ (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:41:16 -0500
Received: from mail.kernel.org ([198.145.29.99]:54620 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2404153AbeKLIXH (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:23:07 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 3C7C4223DD;
        Sun, 11 Nov 2018 22:33:10 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975590;
        bh=rALukCeLIVZw1uw0Znpe+Yh1D9hnFLzK0iw83v0xUPo=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=NOFom1Bw6Cdl6wPso6nG4hIoiPLea9UxsyUjMVsal79NNyWCEBvAtZ6HjYyZZe/9A
         DLjwIyRM3YZp4X151Zj/h+TmkteQwNLppp/4cwK2jLN6FH4mqxke8eCPuVMZVCW0G2
         eLD5Sy2d8vQjgiqzruptHG5F8LyM3zuqSc1+T9b8=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Chris Murphy <lists@colorremedies.com>,
        Qu Wenruo <wqu@suse.com>, Nikolay Borisov <nborisov@suse.com>,
        David Sterba <dsterba@suse.com>
Subject: [PATCH 4.14 201/222] btrfs: Ensure btrfs_trim_fs can trim the whole filesystem
Date: Sun, 11 Nov 2018 14:24:58 -0800
Message-Id: <20181111221704.710887970@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3FUF7suhboJcuAA--.32150S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw4kZrWxAryfJr17Jr13Arb_yoW5tryfpw
	43C3ZxK3y8X3yUGF18G3WFvw1fG34v9a18GrZ3Jrna9ayayryagr92k34FkFWxGrykJr1U
	Z3WjvayYka1qkF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	tVWrXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7I
	U5DuctUUUUU==

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 6ba9fc8e628becf0e3ec94083450d089b0dec5f5 upstream.

[BUG]
fstrim on some btrfs only trims the unallocated space, not trimming any
space in existing block groups.

[CAUSE]
Before fstrim_range passed to btrfs_trim_fs(), it gets truncated to
range [0, super->total_bytes).  So later btrfs_trim_fs() will only be
able to trim block groups in range [0, super->total_bytes).

While for btrfs, any bytenr aligned to sectorsize is valid, since btrfs
uses its logical address space, there is nothing limiting the location
where we put block groups.

For filesystem with frequent balance, it's quite easy to relocate all
block groups and bytenr of block groups will start beyond
super->total_bytes.

In that case, btrfs will not trim existing block groups.

[FIX]
Just remove the truncation in btrfs_ioctl_fitrim(), so btrfs_trim_fs()
can get the unmodified range, which is normally set to [0, U64_MAX].

Reported-by: Chris Murphy <lists@colorremedies.com>
Fixes: f4c697e6406d ("btrfs: return EINVAL if start > total_bytes in fitrim ioctl")
CC: <stable@vger.kernel.org> # v4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: Nikolay Borisov <nborisov@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   10 +---------
 fs/btrfs/ioctl.c       |   11 +++++++----
 2 files changed, 8 insertions(+), 13 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -11055,21 +11055,13 @@ int btrfs_trim_fs(struct btrfs_fs_info *
 	u64 start;
 	u64 end;
 	u64 trimmed = 0;
-	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
 	u64 bg_failed = 0;
 	u64 dev_failed = 0;
 	int bg_ret = 0;
 	int dev_ret = 0;
 	int ret = 0;
 
-	/*
-	 * try to trim all FS space, our block group may start from non-zero.
-	 */
-	if (range->len == total_bytes)
-		cache = btrfs_lookup_first_block_group(fs_info, range->start);
-	else
-		cache = btrfs_lookup_block_group(fs_info, range->start);
-
+	cache = btrfs_lookup_first_block_group(fs_info, range->start);
 	for (; cache; cache = next_block_group(fs_info, cache)) {
 		if (cache->key.objectid >= (range->start + range->len)) {
 			btrfs_put_block_group(cache);
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -352,7 +352,6 @@ static noinline int btrfs_ioctl_fitrim(s
 	struct fstrim_range range;
 	u64 minlen = ULLONG_MAX;
 	u64 num_devices = 0;
-	u64 total_bytes = btrfs_super_total_bytes(fs_info->super_copy);
 	int ret;
 
 	if (!capable(CAP_SYS_ADMIN))
@@ -376,11 +375,15 @@ static noinline int btrfs_ioctl_fitrim(s
 		return -EOPNOTSUPP;
 	if (copy_from_user(&range, arg, sizeof(range)))
 		return -EFAULT;
-	if (range.start > total_bytes ||
-	    range.len < fs_info->sb->s_blocksize)
+
+	/*
+	 * NOTE: Don't truncate the range using super->total_bytes.  Bytenr of
+	 * block group is in the logical address space, which can be any
+	 * sectorsize aligned bytenr in  the range [0, U64_MAX].
+	 */
+	if (range.len < fs_info->sb->s_blocksize)
 		return -EINVAL;
 
-	range.len = min(range.len, total_bytes - range.start);
 	range.minlen = max(range.minlen, minlen);
 	ret = btrfs_trim_fs(fs_info, &range);
 	if (ret < 0)

