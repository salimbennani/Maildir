Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:43:20 -0000
Received: from icoremail.net (unknown [209.85.214.181])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f93hsehbx394AQ--.36813S3;
	Mon, 12 Nov 2018 06:49:06 +0800 (CST)
Received: from mail-pl1-f181.google.com (unknown [209.85.214.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnvTnfsehbn5UuAA--.6130S3;
	Mon, 12 Nov 2018 06:49:03 +0800 (CST)
Received: by mail-pl1-f181.google.com with SMTP id g59-v6so3347535plb.10
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 14:49:03 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=NiRFx4+9qEevdkwYly+yfF3ZjzFTMLGXwn4iDc8ieuY=;
        b=QjgBoalKWUsbZRaEdmAzamcYwNBchseOSwzGkzX6yj/oY8wBFZ9Z3YWODnXI87ZaoA
         TfkNT1Fuj5O7TQhshPOedQAFpsDj8U1Fteb+07egOVrEWM2sd7tAjPB5mVuF1CYgAZ6R
         J2IS+dMgi2bSf5jB9sZZGrCQS5phZ614m7jdVSfCyRuyEIzSA78TgotKVN7iBeaSeKE5
         jwbYqJnLTX4GiecquBm3dYUm7FD2y6e88cBzz/ztdnq2510eG1SjWj9hDDNkrU3GeEO1
         XzY6y89+rLNpQ2v4GnugbjLMQHmPa1/Pg9AOvVJBocViIPLCDpR6O5U4o8T6MmvTmQvK
         Oegw==
X-Gm-Message-State: AGRZ1gLSxr7/QAwYukxvHF/DZkdaHmGsdp+2tSIldDb/3fAtKFjeWpn6
	ZUzz1YSkCRPPTGmAYNAOJlxQIkOu45mo1h6wMxhsq7P3kJ2/9Ec=
X-Received: by 2002:a17:902:7882:: with SMTP id q2-v6mr17885940pll.188.1541976543632;
        Sun, 11 Nov 2018 14:49:03 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2534130pjt;
        Sun, 11 Nov 2018 14:49:02 -0800 (PST)
X-Google-Smtp-Source: AJdET5eBr1txjvb7dikTV5ItdVy6kdFc2sQvA8gmp5HKn48p3zRwnDMmstDk3E7GqCT/Rb2r6POQ
X-Received: by 2002:a62:6143:: with SMTP id v64-v6mr18047437pfb.125.1541976542794;
        Sun, 11 Nov 2018 14:49:02 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541976542; cv=none;
        d=google.com; s=arc-20160816;
        b=0wlY4KoSbv7CFLupMRFlkjcFU00zpYpx3TukCxNmiajLRxEBT3iN3Zb7UiMoFIMufM
         THC1EOxnRAWhjV5ct3zpJ2jqIuJ56bLH7thMdFB5uGUvWxhlThzB94GMKw+k6WvVSv6j
         ff/K5KSOJKXTK03LqpIwG8gypFyJ0KbeoWNrhcg16yphLRcQ+SIrpJPb2h6hVsd7F+DS
         Q7Ub+AZ0zQZcqvW/x1JtRF1lamdlW3OCntkLw0bN4M3Sc7lSzoNIbSrnXouPvW1gIZET
         rpfFlUhOcsxRvxhEm1ZI0lzUPlbR8r92WXsaB9N4G2rb/niqjl22ImMNhSlHCLq1YTZo
         CORg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=NiRFx4+9qEevdkwYly+yfF3ZjzFTMLGXwn4iDc8ieuY=;
        b=pIf4U9Z9ruJgpGGSs4MxJCtvDtvVY0o5cY3TWh5aQzmHWyVKlKasQtu2rezxyexiLa
         mDomjgShv1d5Ya63UfAvGRz+nWChRj48nkeb74C2b8AyKZjelS2qWTwtXF6vDqu0XE3R
         x2j9sYscwEUIJR4bIiedYLg3iq9BN7sdDp3lDakZuxVnCSD/5YJvA2Th/jNjJevFQSxe
         vwvPHK4+Bc5hZEfh6B0i+c1p48xT2iC17BtDcqOLu43AqtiU+lUbGOJkmHd4GkLumc3/
         ud4YQH+hnSs99KRneBt+TXNuSqJWYxtnnv9jaxvoUSR3AXOR4nBbq7Acc3DzAOSB616c
         2+Aw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=E0nPUmxf;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id o5-v6si13205060plh.71.2018.11.11.14.48.48;
        Sun, 11 Nov 2018 14:49:02 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391043AbeKLIir (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:38:47 -0500
Received: from mail.kernel.org ([198.145.29.99]:56662 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2404369AbeKLIXU (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:23:20 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id B141722353;
        Sun, 11 Nov 2018 22:33:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975602;
        bh=+hkaSOwKNjNd0W6KwOhKGDVPSeQGCUoVg1Pwl4pGjPo=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=E0nPUmxfmd3bthUyPVgVdhxJ6y0g73dv1W8ie8ZGVqneuUGZbHGRy0cRNq42skgQo
         FYPwuPjX+rOS0XQ5NUHQso/ZezW3mF6H6I9FPV+9PpID9gqEYDo61vxUrlKKKLU8QB
         KzlRk8lO74X9zGQScWMjTs7xXmVwiFA4IgXTcPNA=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Filipe Manana <fdmanana@suse.com>,
        David Sterba <dsterba@suse.com>,
        Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Subject: [PATCH 4.14 220/222] Btrfs: fix fsync after hole punching when using no-holes feature
Date: Sun, 11 Nov 2018 14:25:17 -0800
Message-Id: <20181111221705.925278597@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnvTnfsehbn5UuAA--.6130S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrWrWr1fZFWkXFWxAw1kXwb_yoW5CFyfpr
	ZxCFy5GryDGwsrC3yfJF48tw1rCr97JrWUXrnxWw1vva45ZrWfKr4Ik34UuFy8JrZ3AFya
	vF4Y9345u3srArJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB2b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW3MxkI7II2jI8v
	z4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14
	v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AK
	xVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804x
	Wl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK
	67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42xK8V
	AvwI8IcIk0rVWUCVW8JbIYCTnIWIevJa73UjIFyTuYvjxUDBbyDUUUU

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Filipe Manana <fdmanana@suse.com>

commit 4ee3fad34a9cc2cf33303dfbd0cf554248651c86 upstream.

When we have the no-holes mode enabled and fsync a file after punching a
hole in it, we can end up not logging the whole hole range in the log tree.
This happens if the file has extent items that span more than one leaf and
we punch a hole that covers a range that starts in a leaf but does not go
beyond the offset of the first extent in the next leaf.

Example:

  $ mkfs.btrfs -f -O no-holes -n 65536 /dev/sdb
  $ mount /dev/sdb /mnt
  $ for ((i = 0; i <= 831; i++)); do
	offset=$((i * 2 * 256 * 1024))
	xfs_io -f -c "pwrite -S 0xab -b 256K $offset 256K" \
		/mnt/foobar >/dev/null
    done
  $ sync

  # We now have 2 leafs in our filesystem fs tree, the first leaf has an
  # item corresponding the extent at file offset 216530944 and the second
  # leaf has a first item corresponding to the extent at offset 217055232.
  # Now we punch a hole that partially covers the range of the extent at
  # offset 216530944 but does go beyond the offset 217055232.

  $ xfs_io -c "fpunch $((216530944 + 128 * 1024 - 4000)) 256K" /mnt/foobar
  $ xfs_io -c "fsync" /mnt/foobar

  <power fail>

  # mount to replay the log
  $ mount /dev/sdb /mnt

  # Before this patch, only the subrange [216658016, 216662016[ (length of
  # 4000 bytes) was logged, leaving an incorrect file layout after log
  # replay.

Fix this by checking if there is a hole between the last extent item that
we processed and the first extent item in the next leaf, and if there is
one, log an explicit hole extent item.

Fixes: 16e7549f045d ("Btrfs: incompatible format change to remove hole extents")
Signed-off-by: Filipe Manana <fdmanana@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/tree-log.c |   30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

--- a/fs/btrfs/tree-log.c
+++ b/fs/btrfs/tree-log.c
@@ -3978,6 +3978,36 @@ fill_holes:
 			break;
 		*last_extent = extent_end;
 	}
+
+	/*
+	 * Check if there is a hole between the last extent found in our leaf
+	 * and the first extent in the next leaf. If there is one, we need to
+	 * log an explicit hole so that at replay time we can punch the hole.
+	 */
+	if (ret == 0 &&
+	    key.objectid == btrfs_ino(inode) &&
+	    key.type == BTRFS_EXTENT_DATA_KEY &&
+	    i == btrfs_header_nritems(src_path->nodes[0])) {
+		ret = btrfs_next_leaf(inode->root, src_path);
+		need_find_last_extent = true;
+		if (ret > 0) {
+			ret = 0;
+		} else if (ret == 0) {
+			btrfs_item_key_to_cpu(src_path->nodes[0], &key,
+					      src_path->slots[0]);
+			if (key.objectid == btrfs_ino(inode) &&
+			    key.type == BTRFS_EXTENT_DATA_KEY &&
+			    *last_extent < key.offset) {
+				const u64 len = key.offset - *last_extent;
+
+				ret = btrfs_insert_file_extent(trans, log,
+							       btrfs_ino(inode),
+							       *last_extent, 0,
+							       0, len, 0, len,
+							       0, 0, 0);
+			}
+		}
+	}
 	/*
 	 * Need to let the callers know we dropped the path so they should
 	 * re-search.

