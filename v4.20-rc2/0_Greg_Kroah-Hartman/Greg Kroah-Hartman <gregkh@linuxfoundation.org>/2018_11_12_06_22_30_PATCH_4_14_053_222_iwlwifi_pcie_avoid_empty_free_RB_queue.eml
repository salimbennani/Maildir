Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:43:51 -0000
Received: from icoremail.net (unknown [209.85.215.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH9LwtehbEJR4AQ--.36524S3;
	Mon, 12 Nov 2018 07:06:25 +0800 (CST)
Received: from mail-pg1-f179.google.com (unknown [209.85.215.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX7zrttehbZZ8uAA--.6475S3;
	Mon, 12 Nov 2018 07:06:21 +0800 (CST)
Received: by mail-pg1-f179.google.com with SMTP id 70so3162865pgh.8
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:06:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=Q5slRq7DuK3Ywz1i2paEg3ob/8O+RMr8shc5I6qyqes=;
        b=EglfiJ0naR4ba2AEYyw7s5XGHo2SeLy6j95cPpBV0IQjDoVpnPpfWJVLA1utHfoD3r
         ckaU0/VAKBvKemdvoSnCwWb1YTdjkJnAmRTJRTlFeIRo0aqBe+TjczyawlP4OZ1ug1zM
         eZiwfYjL3iUjSUdyc9Kdjj+NtJiA7linEp/QxcO6r5Ul/Wyjcuup6jmGNebZVsUBuQPy
         kSq6I3Jj0JqbxCoJGC7h3aRPsJ9L/IbsTSas8rewUHd1RoXo8PMsAfCiCzN5fzYhNraI
         tloHNmgmHNQEj0Ne8LzXQFKcEfljVpcGTxkEfvZsDALIi06p0mkPYBo2xEGY2hxd9ARf
         EvDA==
X-Gm-Message-State: AGRZ1gK94r9JSK92OkvYLlp/usBeBNVh1tu4ihf4uqPQtXws0PeH807i
	kvxr6WrpiyizWvw3gMp+CC/SIkRRtlfQI7Q2irGLeA99Ub/UPUc=
X-Received: by 2002:a62:ab05:: with SMTP id p5-v6mr17859383pff.211.1541977581343;
        Sun, 11 Nov 2018 15:06:21 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2546317pjt;
        Sun, 11 Nov 2018 15:06:20 -0800 (PST)
X-Google-Smtp-Source: AJdET5doeDTQeUM4Rcmn3vwUProvnxNxh8WDyg1u9J+W/BMvtupnVqAX/fhtlQnxZ3jyzZu2wi1P
X-Received: by 2002:a63:ac02:: with SMTP id v2-v6mr15410168pge.414.1541977580604;
        Sun, 11 Nov 2018 15:06:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541977580; cv=none;
        d=google.com; s=arc-20160816;
        b=BvTeO72RHnVfxmGZOYl6QaNd/Bg2Hj+2jhbmCVaXWcSlOdh3CqnX4SFo/qwd4S95Pp
         +aNpXKtVxgRB0EuOpsfu6SAlKZmShiSbPmrZUGvGhNHyqbUNVGoqcnG4ltyUhpj6hgJX
         vfracIAcOXb/2L80yxF++/z917lyOJZN+b/2Wvp3Cv9ncYwXqQYjy/8K8y4Nq6CZBbKb
         YTuun8QixWWKIml0wp8zjtKrox8vwQmoAslw8EuMQI5dVNWjYkBYnSoDurtn9pmgII9e
         km7Njh9aoCCxeH23t7IuNybErS+3wVE86dm4Jd2wk4FOugmBxAk3JppuRvkKHwaeyBQw
         zHog==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=Q5slRq7DuK3Ywz1i2paEg3ob/8O+RMr8shc5I6qyqes=;
        b=eBpOxYguZJ2yC1cUxU9bEeSY5HBLGRowoQOUwzuHRbRNKz+G4a3Tj54DB4ShXrHt/m
         Ivd+QdDQvhjBYnCM+nDD8+7R/VwfREmi2RUA7e8izIR0pcmJsqUCBa4addLg9M3+5DXK
         D1tqAMKCibrR+EqVQr1Rf2b0TP+VXDaguiA8ui6IR7tc8uAhqqtdhc66CPttH915Crzp
         mIKOIG5Gxrrf3s3m8BrS9OCqpzPMYgsIDPr6leLVfYNkGE00m8EdGkGh/r7OchckAoAY
         ZdSuU3eq+ZVVJR6MDtGU/SzJxrMb1GzcwZtZ9fmE1psz7TscWkQfnmyd0NHSDKrJA04d
         8ptA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="gu/RTQru";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id f17-v6si16086017pfa.123.2018.11.11.15.06.05;
        Sun, 11 Nov 2018 15:06:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390422AbeKLIWO (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:22:14 -0500
Received: from mail.kernel.org ([198.145.29.99]:51232 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2390369AbeKLIWN (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:22:13 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2EC8722510;
        Sun, 11 Nov 2018 22:32:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975536;
        bh=eGMPk1Mwb5jl1D3HzPeRwsoiDf8s4q9GTUiVs+VWgoE=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=gu/RTQruscT3+iTN4A4L0yDUnYlmUnl6E0/AcISVo32S+Tpq+tNo0lSvDg09yOgLx
         /ZUQh7MImc7Rt53cHv5NEgO+/2GZ6JUmJjCNgxUJdpcvDghrICYSaC9G75pWnhpe2R
         1hlPNKkpCmJlnbi82U/eAorqsljR50XXxEH4Aulw=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Shaul Triebitz <shaul.triebitz@intel.com>,
        Luca Coelho <luciano.coelho@intel.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.14 053/222] iwlwifi: pcie: avoid empty free RB queue
Date: Sun, 11 Nov 2018 14:22:30 -0800
Message-Id: <20181111221652.832743353@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX7zrttehbZZ8uAA--.6475S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGw4kGrykXrWxWr18tw1xAFb_yoWrGFy8pr
	43Cw1akF95XrsrurnxAa1rCwn8Xan3WF1UWFZagwn3ur98Ar1rGa97JF10vFy8AF4fXrW5
	uF1UZw4fCF4UZ37anT9S1TB71UUUUU7qnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_GrUvcSsGvfC2KfnxnUUI43ZEXa7I
	UOK4i5UUUUU==

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Shaul Triebitz <shaul.triebitz@intel.com>

[ Upstream commit 868a1e863f95183f00809363fefba6d4f5bcd116 ]

If all free RB queues are empty, the driver will never restock the
free RB queue.  That's because the restocking happens in the Rx flow,
and if the free queue is empty there will be no Rx.

Although there's a background worker (a.k.a. allocator) allocating
memory for RBs so that the Rx handler can restock them, the worker may
run only after the free queue has become empty (and then it is too
late for restocking as explained above).

There is a solution for that called 'emergency': If the number of used
RB's reaches half the amount of all RB's, the Rx handler will not wait
for the allocator but immediately allocate memory for the used RB's
and restock the free queue.

But, since the used RB's is per queue, it may happen that the used
RB's are spread between the queues such that the emergency check will
fail for each of the queues
(and still run out of RBs, causing the above symptom).

To fix it, move to emergency mode if the sum of *all* used RBs (for
all Rx queues) reaches half the amount of all RB's

Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/net/wireless/intel/iwlwifi/pcie/rx.c |   32 +++++++++++++++++----------
 1 file changed, 21 insertions(+), 11 deletions(-)

--- a/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
@@ -1049,6 +1049,14 @@ void iwl_pcie_rx_free(struct iwl_trans *
 	kfree(trans_pcie->rxq);
 }
 
+static void iwl_pcie_rx_move_to_allocator(struct iwl_rxq *rxq,
+					  struct iwl_rb_allocator *rba)
+{
+	spin_lock(&rba->lock);
+	list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
+	spin_unlock(&rba->lock);
+}
+
 /*
  * iwl_pcie_rx_reuse_rbd - Recycle used RBDs
  *
@@ -1080,9 +1088,7 @@ static void iwl_pcie_rx_reuse_rbd(struct
 	if ((rxq->used_count % RX_CLAIM_REQ_ALLOC) == RX_POST_REQ_ALLOC) {
 		/* Move the 2 RBDs to the allocator ownership.
 		 Allocator has another 6 from pool for the request completion*/
-		spin_lock(&rba->lock);
-		list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
-		spin_unlock(&rba->lock);
+		iwl_pcie_rx_move_to_allocator(rxq, rba);
 
 		atomic_inc(&rba->req_pending);
 		queue_work(rba->alloc_wq, &rba->rx_alloc);
@@ -1260,10 +1266,18 @@ restart:
 		IWL_DEBUG_RX(trans, "Q %d: HW = SW = %d\n", rxq->id, r);
 
 	while (i != r) {
+		struct iwl_rb_allocator *rba = &trans_pcie->rba;
 		struct iwl_rx_mem_buffer *rxb;
-
-		if (unlikely(rxq->used_count == rxq->queue_size / 2))
+		/* number of RBDs still waiting for page allocation */
+		u32 rb_pending_alloc =
+			atomic_read(&trans_pcie->rba.req_pending) *
+			RX_CLAIM_REQ_ALLOC;
+
+		if (unlikely(rb_pending_alloc >= rxq->queue_size / 2 &&
+			     !emergency)) {
+			iwl_pcie_rx_move_to_allocator(rxq, rba);
 			emergency = true;
+		}
 
 		if (trans->cfg->mq_rx_supported) {
 			/*
@@ -1306,17 +1320,13 @@ restart:
 			iwl_pcie_rx_allocator_get(trans, rxq);
 
 		if (rxq->used_count % RX_CLAIM_REQ_ALLOC == 0 && !emergency) {
-			struct iwl_rb_allocator *rba = &trans_pcie->rba;
-
 			/* Add the remaining empty RBDs for allocator use */
-			spin_lock(&rba->lock);
-			list_splice_tail_init(&rxq->rx_used, &rba->rbd_empty);
-			spin_unlock(&rba->lock);
+			iwl_pcie_rx_move_to_allocator(rxq, rba);
 		} else if (emergency) {
 			count++;
 			if (count == 8) {
 				count = 0;
-				if (rxq->used_count < rxq->queue_size / 3)
+				if (rb_pending_alloc < rxq->queue_size / 3)
 					emergency = false;
 
 				rxq->read = i;

