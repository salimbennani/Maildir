Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:53:56 -0000
Received: from icoremail.net (unknown [209.85.214.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX9MjpeVbNKtoAQ--.31919S3;
	Fri, 09 Nov 2018 23:17:57 +0800 (CST)
Received: from mail-pl1-f181.google.com (unknown [209.85.214.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnjUkhpeVbxhsjAA--.528S3;
	Fri, 09 Nov 2018 23:17:53 +0800 (CST)
Received: by mail-pl1-f181.google.com with SMTP id p16-v6so1070794plr.8
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 07:17:53 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=QmEOCZhKoy4tMYvrz4DsulhuUxwi7kZKfWHrSbAKPsY=;
        b=pgnnsDrhTfULpZ+47qzCluYC0Jja0PRiGauX6P6p9lh79naaYOhoIbQF8YVzQ5afR9
         B1VZOQDvC1CRYbIgsN8/XVt37MID5eQPQgouCrEe8bGiDOsGO4gs+WlpK/B/pw/rROiQ
         fYVga8kD/PZSS+8n6EZdEQijqYsLWZ+k4vdWjskGEpyoEg5O+S0XV8+VaQBkJZszdpxo
         d1sH9c0N8z3+ar8jfKg+QmpNwWPlLxMIMbNTDhW115ivm5MPdaQ8Mr1oo8YQ0RSpUU/E
         JbTunTeU36+7Bm//+dzZYWTHtMUIuoSWcL8tys8Xe5HLxXbKLWQG+3G50FDBszdWJ1dy
         Z2Dg==
X-Gm-Message-State: AGRZ1gIqX3hx2qXHC01DDozqubji6Lji/bLVQkVqgtH6OBJd8AO4SjJp
	xIkQuUjaMsh04Ce2tmcl7Gihl+8zvYPSJqjCEUUYsWSxiBn14q4J9g==
X-Received: by 2002:a17:902:a5cc:: with SMTP id t12-v6mr9343615plq.298.1541776673021;
        Fri, 09 Nov 2018 07:17:53 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp14210pjt;
        Fri, 9 Nov 2018 07:17:52 -0800 (PST)
X-Google-Smtp-Source: AJdET5f4662lm4sAr1tdYZRSwm6wRBj/Xu94dNM4AgLkdMfZsoTteaLySsmXMttMGsKlLrUwl1r/
X-Received: by 2002:a17:902:20b:: with SMTP id 11-v6mr9097155plc.147.1541776672147;
        Fri, 09 Nov 2018 07:17:52 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541776672; cv=none;
        d=google.com; s=arc-20160816;
        b=Antb/Apbwjm1Vax6hjy8KgqtPm8ceHru9z6pkjjbYcG7X4aSprhkhuNHANfksywK4F
         GtVUP00eDmNs1pB3Rr21SGvHcPiwb0MdHKtaciQhHhyJsewMwV6faFcQ86lL13PfpfKe
         Vh8HmQEIzMhfYa2utaPxulVg2LJjx1H+Smloy7MzjzrHRxzfWD8kzCNaiiYLNjV45oey
         q9x2LqS18NYGNGDVbqJHG+2y5IfCwRWYoer8D+PEzIkHAU5el8Db2ebg+5ihqfMNLgdG
         I/y+sMMHDT1fV1y4f15Or77l7Ck9cNLKNhjgSzKBLcaXAbbTI4kp7F6RDxb7Ar9fKf/J
         y4uQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :references:in-reply-to:mime-version:dkim-signature;
        bh=QmEOCZhKoy4tMYvrz4DsulhuUxwi7kZKfWHrSbAKPsY=;
        b=ouaxViCm6TvjmsZVnDrghezHAxVp7rs3P/EKCGfSngOzHhONUxqrlxCkLZr7f43dwp
         FLrzo3SZXifhP1NjZnpkUaLZL1x48cKkxYk28a9HyUvJwX5p+D2jCbXiurse2pvdlFIL
         RlDSwKDO+FRANzMbW2VcA8suqsIWgJdgsK7nO6Df/4K3fRMjPQs583CMUZ6+i1WgYw9f
         1DXdNigWmVGtg2bOkJ3XPcdneaz49Q+tB2bI28Ly3872VFeLCNe8Olv3d+8iweoca3e6
         h+cMv1Ee0GHhQTXDyPQ2VWyYI4r1tScFhRvI4y5kYrvRDPMNNa9KYHib0GtkRZbnV/l4
         MAiw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=h6PkiK7u;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id v24-v6si7638160ply.158.2018.11.09.07.16.57;
        Fri, 09 Nov 2018 07:17:52 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728239AbeKJAzq (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 19:55:46 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:36543 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727735AbeKJAzq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 19:55:46 -0500
Received: by mail-it1-f193.google.com with SMTP id w7-v6so3715941itd.1
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 07:14:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=QmEOCZhKoy4tMYvrz4DsulhuUxwi7kZKfWHrSbAKPsY=;
        b=h6PkiK7uJATjFMAioiq1SOdVFad8kUSj7BiEsR5IOgT/GlVzhm7NbSlFLNBmePuckV
         R5Iq7/W+UPfV6M0RKNpSHQdg+nh6Y8QaYu7e0G+mSRPYJQGTSKFvnxarwb2bnEZvuxpC
         XcTdtdgq476dsCYw2fYLwV3BIc3TR2nAjoJSM=
X-Received: by 2002:a02:8449:: with SMTP id l9-v6mr8480077jah.130.1541776486303;
 Fri, 09 Nov 2018 07:14:46 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a6b:4f16:0:0:0:0:0 with HTTP; Fri, 9 Nov 2018 07:14:45 -0800 (PST)
In-Reply-To: <20181109151028.faifw66enzye32gg@treble>
References: <cover.1541711457.git.jpoimboe@redhat.com> <3cf04e113d71c9f8e4be95fb84a510f085aa4afa.1541711457.git.jpoimboe@redhat.com>
 <CAKv+Gu9bMkFEx_GxH3uLm0gveQurp7ELDi6C5NvpugufPFMbRA@mail.gmail.com> <20181109151028.faifw66enzye32gg@treble>
From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Fri, 9 Nov 2018 16:14:45 +0100
Message-ID: <CAKv+Gu_J1b30+pMNRF0icEpyew4TM_VP3ShG=4HkLnk=fRL9zg@mail.gmail.com>
Subject: Re: [RFC PATCH 1/3] static_call: Add static call infrastructure
To: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        "the arch/x86 maintainers" <x86@kernel.org>,
        Andy Lutomirski <luto@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Jason Baron <jbaron@akamai.com>, Jiri Kosina <jkosina@suse.cz>,
        David Laight <David.Laight@aculab.com>,
        Borislav Petkov <bp@alien8.de>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnjUkhpeVbxhsjAA--.528S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWryUuw17CF48Kr45GF48JFb_yoW5Aw43pF
	yDA3WfAF45XF1vkFZrur109F12vw12y3y7GwnxKwnYk3Z8try7JF4rK3yjkFy5CrZY9r42
	qr4q9FZxuFZ8A37anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9ab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2IjII80xcxEwVAKI48JMxvI
	42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcI
	IF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28I
	cxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4
	AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE
	17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_Zr
	UvcSsGvfC2KfnxnUUI43ZEXa7IUOoGQPUUUUU==

On 9 November 2018 at 16:10, Josh Poimboeuf <jpoimboe@redhat.com> wrote:
> On Fri, Nov 09, 2018 at 02:39:17PM +0100, Ard Biesheuvel wrote:
>> > +       for (site = start; site < stop; site++) {
>> > +               struct static_call_key *key = static_call_key(site);
>> > +               unsigned long addr = static_call_addr(site);
>> > +
>> > +               if (list_empty(&key->site_mods)) {
>> > +                       struct static_call_mod *mod;
>> > +
>> > +                       mod = kzalloc(sizeof(*mod), GFP_KERNEL);
>> > +                       if (!mod) {
>> > +                               WARN(1, "Failed to allocate memory for static calls");
>> > +                               return;
>> > +                       }
>> > +
>> > +                       mod->sites = site;
>> > +                       list_add_tail(&mod->list, &key->site_mods);
>> > +
>> > +                       /*
>> > +                        * The trampoline should no longer be used.  Poison it
>> > +                        * it with a BUG() to catch any stray callers.
>> > +                        */
>> > +                       arch_static_call_poison_tramp(addr);
>>
>> This patches the wrong thing: the trampoline is at key->func not addr.
>
> If you look at the x86 implementation, it actually does poison the
> trampoline.
>
> The address of the trampoline isn't actually known here.  key->func
> isn't the trampoline address; it's the destination func address.
>
> So instead I passed the address of the call instruction.  The arch code
> then reads the instruction to find the callee (the trampoline).
>
> The code is a bit confusing.  To make it more obvious, maybe we should
> add another arch function to read the call destination.  Then this code
> can pass that into arch_static_call_poison_tramp().
>

Ah right, so I am basically missing a dereference in my
arch_static_call_poison_tramp() code if this breaks.

>> However, patching it here means we poison it before all users are
>> patched. I added this on top
>>
>> diff --git a/kernel/static_call.c b/kernel/static_call.c
>> index 599ebc6fc4f1..d9562329bec6 100644
>> --- a/kernel/static_call.c
>> +++ b/kernel/static_call.c
>> @@ -248,6 +248,7 @@ static void __init static_call_init(void)
>>         struct static_call_site *start = __start_static_call_sites;
>>         struct static_call_site *stop  = __stop_static_call_sites;
>>         struct static_call_site *site;
>> +       struct static_call_key *prev_key = NULL;
>>
>>         if (start == stop) {
>>                 pr_warn("WARNING: empty static call table\n");
>> @@ -279,7 +280,9 @@ static void __init static_call_init(void)
>>                          * The trampoline should no longer be used.  Poison it
>>                          * it with a BUG() to catch any stray callers.
>>                          */
>> -                       arch_static_call_poison_tramp(addr);
>> +                       if (prev_key)
>> +
>> arch_static_call_poison_tramp((unsigned long)prev_key->func);
>> +                       prev_key = key;
>>                 }
>>
>>                 arch_static_call_transform(addr, key->func);
>
> While it does indeed poison the trampoline before all users are patched,
> I had been thinking that it didn't really matter because this is before
> the other CPUs have been booted.
>
> But I believe interrupts are enabled at this point during the boot, so
> it would indeed be wise to poison it afterwards, in case an irq handler
> makes a static call.
>

And kmalloc(GFP_KERNEL) itself could cascade into lots of other code as well.
