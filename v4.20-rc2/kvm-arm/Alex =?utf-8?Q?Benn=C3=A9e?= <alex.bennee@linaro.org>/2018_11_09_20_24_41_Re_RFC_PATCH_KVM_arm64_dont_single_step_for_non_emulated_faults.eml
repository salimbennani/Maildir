Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:52:43 -0000
Received: from icoremail.net (unknown [209.85.215.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH_qqfOVbELlnAQ--.31708S3;
	Fri, 09 Nov 2018 20:25:15 +0800 (CST)
Received: from mail-pg1-f175.google.com (unknown [209.85.215.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD31kKofOVbSJIiAA--.3397S3;
	Fri, 09 Nov 2018 20:25:12 +0800 (CST)
Received: by mail-pg1-f175.google.com with SMTP id 80so799276pge.4
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 04:25:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:references
         :user-agent:from:to:cc:subject:in-reply-to:date:message-id
         :mime-version:content-transfer-encoding:sender:precedence:list-id;
        bh=K4++d6mnMPSWwZs7slknABswK6L4IJIPhWv0sJbKZj4=;
        b=m67llQVJ45fqFnrQYmpvYsSfzdJT3RRZcqOnPBzvnPNeS2mF8Bgq6akJhqklbECVz6
         vQtSsR2pjxW7k+beDLMe9bEpWKmDHIBGrDt11uttayZOsGRX4KFjiFK3xM9Z+WDikxOY
         N964pSuGitBUNqTmExoGdCkIWQ1tWfsQ9DHl+qe3h+hImjST5XwVwxa0XUMFVeConl8p
         WOTaw3h1HOByeY9potfkIJ4O2bt8YxwFQwwy6YOLY74BW0BdwNMLN74i0Kw1xF6D515/
         K/60nHqsMSAQyzC/p8hrXVUKfRdwGzyYSb5gqkyfmdGcHLpOz4ypXDjE1GfaKkOzrw/m
         YD0Q==
X-Gm-Message-State: AGRZ1gLLK94JS3KoXf0nQIvQXgZ03sCBD6wIkK5DmXRbCJbc7FJXbnP4
	ayAqeYt90yebI88WOH3X6123lQfGlmkljx8K+EfZayXL/37VcLjkUQ==
X-Received: by 2002:a62:35c2:: with SMTP id c185-v6mr8690942pfa.69.1541766311835;
        Fri, 09 Nov 2018 04:25:11 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp136436pjt;
        Fri, 9 Nov 2018 04:25:09 -0800 (PST)
X-Google-Smtp-Source: AJdET5elg82y2ziebwQgnh1E7QA6NbpULk6UfPAP8cNuOxxBvYolMCIyVSvP8DQYA1ffFlw9nbm4
X-Received: by 2002:a17:902:6801:: with SMTP id h1-v6mr8629126plk.177.1541766309487;
        Fri, 09 Nov 2018 04:25:09 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541766309; cv=none;
        d=google.com; s=arc-20160816;
        b=jeM3HA7R52zaR+aXJ2miieWpnXDg2aROtV7T6awdnX1r/7L9ZisjGKQXqblgfIgR/j
         37RZTJc2tplo7qzan7q2afa8GaNcLO8NSIxyNpOs0jGKNBQ3vbbINk5l9ZvDA+jXKQAf
         +cbyF8SvE2p5i+UbGIjwrtWutbgvFOn4YrFY2/UU9x/c+mkpe20Y/qwOqb9bpv78Rxtl
         aZ6lvvF1D+Mt6U6jxln7OXbFlXGTtvEcAai2rBc69xXN3Gy0C12SBYqa+rVpqYPwhL0I
         D2CF1159KPxHiEH0jUfr2fNx9/WDG/hXt+eVkb/bcmGvyD1gN7k2j1HF9vuEISdvbwh6
         rSDA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :message-id:date:in-reply-to:subject:cc:to:from:user-agent
         :references:dkim-signature;
        bh=K4++d6mnMPSWwZs7slknABswK6L4IJIPhWv0sJbKZj4=;
        b=Bg5OriMMmSAbrw611dwNe8PZJddmaZJcvnQsfRvM154eAANldDf2JnrKf1Er/aXwhF
         gd10flCVhLeQp8QCVo0uGx0AdWITZ1ZJzbZ4SECTgMhABym4aUqy2VAHXAFJ57qj5/K9
         7oZJzOujbNH1EucrpTjQKvO4lU656gR5WRerPl3RVQA/ua6h/gSGP84YE+J9H8KAMyBZ
         wLDXA7UKlvvXEPg7v5aYNHXQoYMwr7715sRKYOSv1Eg7CVX77VG2FlkVS+ji9F9N76rV
         7w/cfNEebXR4JUWNWqE14Cm0sfVg4AkQMFN6nGVbvhogXWdhVa3iLxbGjuQOZxu6XLVb
         UeVQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=kdiZetIn;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id c6-v6si7423136pfi.110.2018.11.09.04.24.52;
        Fri, 09 Nov 2018 04:25:09 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727845AbeKIWFJ (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 17:05:09 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:33223 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727560AbeKIWFJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 17:05:09 -0500
Received: by mail-wr1-f68.google.com with SMTP id u9-v6so1718715wrr.0
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 04:24:44 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=references:user-agent:from:to:cc:subject:in-reply-to:date
         :message-id:mime-version:content-transfer-encoding;
        bh=K4++d6mnMPSWwZs7slknABswK6L4IJIPhWv0sJbKZj4=;
        b=kdiZetIn3cYEhoDB3griK2Q+vdRqNkYYz+9bOTVTMbRBjg7myCKZ6icAV+yNjtc4F9
         GLvjihVG6ILHCUu/bkLzi0gYWi5aFxLzF5VXdmJaiIxIAWqIwu+4dm/I6Gba6lQpIXvN
         QplhpTFCiXJPpYuEE9sDdSnXBqNJrjD2NrbSg=
X-Received: by 2002:adf:b745:: with SMTP id n5-v6mr7960074wre.274.1541766283238;
        Fri, 09 Nov 2018 04:24:43 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
        by smtp.gmail.com with ESMTPSA id p188-v6sm893011wmp.31.2018.11.09.04.24.42
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 09 Nov 2018 04:24:42 -0800 (PST)
Received: from zen (localhost [127.0.0.1])
        by zen.linaro.local (Postfix) with ESMTPS id C3EF33E02B6;
        Fri,  9 Nov 2018 12:24:41 +0000 (GMT)
References: <20181107171031.22573-1-alex.bennee@linaro.org> <20181107180120.urnvkcrkh46ytsdb@lakrids.cambridge.arm.com> <20181107180829.sex54bxhd5wyqvan@lakrids.cambridge.arm.com> <87r2fv68us.fsf@linaro.org> <20181108135122.llmfsel32dbe2q7o@lakrids.cambridge.arm.com> <87pnvf63u2.fsf@linaro.org> <CAFEAcA9v+XvAJBWpDMvEQPeJ7ALM15Yz5KY+wfGPmLG2a8yPRQ@mail.gmail.com> <20181109115644.f4qjqnv2kogoke42@lakrids.cambridge.arm.com>
User-agent: mu4e 1.1.0; emacs 26.1.50
From: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
To: Mark Rutland <mark.rutland@arm.com>
Cc: Peter Maydell <peter.maydell@linaro.org>,
        kvm-devel <kvm@vger.kernel.org>,
        Marc Zyngier <marc.zyngier@arm.com>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        open list <linux-kernel@vger.kernel.org>,
        Christoffer Dall <christoffer.dall@linaro.org>,
        kvmarm@lists.cs.columbia.edu,
        arm-mail-list <linux-arm-kernel@lists.infradead.org>
Subject: Re: [RFC PATCH] KVM: arm64: don't single-step for non-emulated faults
In-reply-to: <20181109115644.f4qjqnv2kogoke42@lakrids.cambridge.arm.com>
Date: Fri, 09 Nov 2018 12:24:41 +0000
Message-ID: <87lg625th2.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD31kKofOVbSJIiAA--.3397S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw1rKryDKr13Zr4fXF48tFb_yoW5tr4kp3
	yDKF13Krs5AFWfCr92vr1xtrWSvrZ3XFZxGryYq343Cw4DWFyS9FyUKrW5uF97Zws3Ww10
	vFWjyr9rCasrZa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPjb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6ryUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUQ6pPUUUU
	U


Mark Rutland <mark.rutland@arm.com> writes:

> On Thu, Nov 08, 2018 at 02:38:43PM +0000, Peter Maydell wrote:
>> On 8 November 2018 at 14:28, Alex Benn=C3=A9e <alex.bennee@linaro.org> w=
rote:
>> >
>> > Mark Rutland <mark.rutland@arm.com> writes:
>> >> One problem is that I couldn't spot when we advance the PC for an MMIO
>> >> trap. I presume we do that in the kernel, *after* the MMIO trap, but I
>> >> can't see where that happens.
>> >
>> > Nope it gets done before during decode_hsr in mmio.c:
>> >
>> >         /*
>> >          * The MMIO instruction is emulated and should not be re-execu=
ted
>> >          * in the guest.
>> >          */
>> >         kvm_skip_instr(vcpu, kvm_vcpu_trap_il_is32bit(vcpu));
>>
>> I think that this attempt to do the PC-advance early is
>> probably an underlying problem that is not helping the
>> code structure here.
>>
>> An enhancement that's been floated previously is that the
>> MMIO emulation in userspace should be able to report back
>> to KVM "nope, that access should generate a guest synchronous
>> external abort (with ESR_EL1.EA =3D 0/1)".
>> If we have that, then we definitely need to not advance the
>> PC until after userspace has done the emulation and told
>> us whether the memory access succeeded or not...
>
> Yup.
>
> I think that we absolutely want to do all the CPU state advancement (PC,
> SS bit, etc) at the point we apply the effects of the instruction. Not
> before we emulate the instruction, and not higher/lower in the call
> stack.

There is certainly an argument to abstract some of the advancement logic
so we can make debug related decisions in one place. I don't know how
much churn we would need to get there.

Currently most of the guest debug decisions are made in one place as we
head into the guest run. Generally I don't think the emulation code want
to know or care about the SS bit or what debug is currently happening
although I guess the presence of the SS bit could be used to decide on
exactly what exit type you are going to do - back to guest or out to
user space. Currently kvm_arm_handle_step_debug on cares about host
directed debug but we could expand it to raise the appropriate guest
exception if required.

> We have a big problem in that guest-directed singlestep and
> host-directed singlestep don't compose, and given that host-directed
> singlestep doesn't work reliably today I'd be tempted to rip that out
> until we've fixed guest-directed singlestep.

Getting host and guest debug to run at the same time is tricky given we
end up subverting guest state when the host debug is in control. It did
make my head spin when I worked on it originally which led to the
acceptance that guest debug couldn't be expected to work transparently
while host directed debug was in effect. If we can support it without
adding complexity then that would be great but it's a pretty niche use
case.

I'd be loathed to rip out the current single step support as it does
actually work pretty well - it's just corner cases with emulated MMIO
and first step that are failing. Last I looked these were cases x86
didn't even get right and no one has called to remove it's single step
support AFAIK.

> We should have a story for how host-directed debug is handled
> transparently from the PoV of a guest using guest-directed debug.

What's the use case for this apart from having a cleaner abstraction? Do
users really spend time running multiple gdbs at different levels in
the stack?

>
> Thanks,
> Mark.


--
Alex Benn=C3=A9e
