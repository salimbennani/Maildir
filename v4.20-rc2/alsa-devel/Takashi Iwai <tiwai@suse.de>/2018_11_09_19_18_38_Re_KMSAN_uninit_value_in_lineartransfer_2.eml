Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:52:17 -0000
Received: from icoremail.net (unknown [209.85.215.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH3o4beVb6FRnAQ--.31165S3;
	Fri, 09 Nov 2018 19:19:21 +0800 (CST)
Received: from mail-pg1-f181.google.com (unknown [209.85.215.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTUk0beVb5EoiAA--.5066S3;
	Fri, 09 Nov 2018 19:19:16 +0800 (CST)
Received: by mail-pg1-f181.google.com with SMTP id y4so720974pgc.12
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 03:19:16 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:message-id:from:to:cc:subject:in-reply-to:references
         :user-agent:mime-version:sender:precedence:list-id;
        bh=RsGwtPdPrEblkTxQaRQ7qUn/6hUDELjSTsZu8wCcDBw=;
        b=rTMKLsZVCwcRFcj1ns2RnFPrhGoDVZPWOHFz5CMRau8TrKZHUo1sRdPOwYKjWBJBSU
         GLFy8cnlC4sP9l8ZM8VNJwc/P0lXe6UFGM7YGQZtwjJ558ah+Dlh9Hx/HBf0CTHoghyY
         0ChBeIykXw8Dn7i0UG98NA51gYL/OXY7XjXsl8+/SrgSImzttH5YwjxdUEvTSI0en0yL
         NzCcOEhZFd2wGoE30pVoPp9YeZI+sbJVtyEKOx5s9wXFLI2YKk/NUpExDytJtfhTnI19
         LqNsgphZQHxqwzzDVbmKFpAXmnKNRgpKn/jBfghnnbe2waGmUWdyX333EwKbYje8WzXD
         8WRQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIFhDUsb5MSnXoe7t+YPY/qbnH5JVD8BpC++vWQt5vcH38jUXMt
	0p5HowzZsVwbV9lWsOUh8Wg9w5dVjQTAuN0DQXqjK5n8fg4HBz4u+g==
X-Received: by 2002:a63:bc02:: with SMTP id q2mr2739080pge.116.1541762356141;
        Fri, 09 Nov 2018 03:19:16 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp74784pjt;
        Fri, 9 Nov 2018 03:19:14 -0800 (PST)
X-Google-Smtp-Source: AJdET5dX+Ecn4RzMQ9h5XMsC72hHq4tw7JwhnInkqo88LZJork00zr/rRyDTX90w+PqGXQWA6LxF
X-Received: by 2002:a63:193:: with SMTP id 141mr683593pgb.136.1541762354838;
        Fri, 09 Nov 2018 03:19:14 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541762354; cv=none;
        d=google.com; s=arc-20160816;
        b=Q3prPK3K5UGF+wcU9dSO6WZvkAQcuiDVMDH+3817Cls6V4r22unYxVHo3GK5YO1yYU
         cqLpI21RVFe9WWgToPTdCC67Lird1YY56urLFOvyaL1vFCwLGKvdVp6M88+uH/ScydEc
         h94zLf5f5edrb/QSmSFWI9JO2vR3qiU+8G75WHVRp5VP396Q0GjDBJQiH0FeZFbu4b1H
         aLjULoKpWp8Bjxod1sNZg8Zon8qAosr7PvuU69+rLPloWyLZKrvi11falh3y72JQ3SfW
         y3T92x+S6DDTN812Qnr3S9zXIn0IrFfD2iwgGoi72K8oX1cgL97JIw/J2hYE/15UDa1t
         VZ+A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:user-agent:references
         :in-reply-to:subject:cc:to:from:message-id:date;
        bh=RsGwtPdPrEblkTxQaRQ7qUn/6hUDELjSTsZu8wCcDBw=;
        b=wFJ9eotbwwpcX8BW+uxj1EbzuqANzwNPSqUIL07WDeBvrMD7Gqa35s1Ai4ZRdraX7H
         ifGBRXcUGhr1tc8u9kxPPUABLaoiPU6gAKBpMYn3Qqaasrr7EsdqzULEZoT8PddOK2fb
         EPKRzTSyuxYn4A6nJnvPOfLXUm6dlA9wipG7tTQOGdIrzK+5Isi1czGTeyDVlgkcx1iA
         m2IoMVn3gCoJCwB7M1/o19l8E+zgzUSrLlOuhOH7YpTMvRIiDKE78tvfFM5aFvVqGGsY
         FQICm5ScBwox5lDvz/Vm0i6+6nR0gnjVOEIrMaFJfFO0+zW1vTnDuHYQ5fycxny5ck/J
         JNLg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l85-v6si3921373pfb.31.2018.11.09.03.18.59;
        Fri, 09 Nov 2018 03:19:14 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728140AbeKIU6v (ORCPT <rfc822;changseok.bae@gmail.com>
        + 99 others); Fri, 9 Nov 2018 15:58:51 -0500
Received: from mx2.suse.de ([195.135.220.15]:44026 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727532AbeKIU6v (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 15:58:51 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 66C65AF44;
        Fri,  9 Nov 2018 11:18:38 +0000 (UTC)
Date: Fri, 09 Nov 2018 12:18:38 +0100
Message-ID: <s5h1s7u1ott.wl-tiwai@suse.de>
From: Takashi Iwai <tiwai@suse.de>
To: "Alexander Potapenko" <glider@google.com>
Cc: <syzbot+1cb36954e127c98dd037@syzkaller.appspotmail.com>,
        <alsa-devel@alsa-project.org>, <syzkaller-bugs@googlegroups.com>,
        <perex@perex.cz>, "LKML" <linux-kernel@vger.kernel.org>
Subject: Re: KMSAN: uninit-value in linear_transfer (2)
In-Reply-To: <CAG_fn=WnKks-EqmAP5V2VtLPvAgtbopaPUz4fFk_H8TkaSkuVA@mail.gmail.com>
References: <00000000000021d9a9057a2d364e@google.com>
        <CAG_fn=WnKks-EqmAP5V2VtLPvAgtbopaPUz4fFk_H8TkaSkuVA@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/26
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTUk0beVb5EoiAA--.5066S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3tF1fZrW7tw15JF17ZFy7Wrg_yoWDuw1kpr
	s2kaySgFW8ta48A3Z5Aas2qryrJFn09F17Ww4xGa4Iv3W5Gr1vyrZYkryYvF4UCr1qy3W5
	XryDA348tw15Xw7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VW8KwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOWCJJUU
	UUU==

On Fri, 09 Nov 2018 10:31:03 +0100,
Alexander Potapenko wrote:
> 
> On Thu, Nov 8, 2018 at 9:38 PM syzbot
> <syzbot+1cb36954e127c98dd037@syzkaller.appspotmail.com> wrote:
> >
> > Hello,
> >
> > syzbot found the following crash on:
> >
> > HEAD commit:    7438a3b20295 kmsan: print user address when reporting info..
> > git tree:       https://github.com/google/kmsan.git/master
> > console output: https://syzkaller.appspot.com/x/log.txt?x=15b42133400000
> > kernel config:  https://syzkaller.appspot.com/x/.config?x=8df5fc509a1b351b
> > dashboard link: https://syzkaller.appspot.com/bug?extid=1cb36954e127c98dd037
> > compiler:       clang version 8.0.0 (trunk 343298)
> > syz repro:      https://syzkaller.appspot.com/x/repro.syz?x=12be9825400000
> > C reproducer:   https://syzkaller.appspot.com/x/repro.c?x=13e2c425400000
> >
> > IMPORTANT: if you fix the bug, please add the following tag to the commit:
> > Reported-by: syzbot+1cb36954e127c98dd037@syzkaller.appspotmail.com
> >
> > ==================================================================
> > BUG: KMSAN: uninit-value in __arch_swab32
> > arch/x86/include/uapi/asm/swab.h:10 [inline]
> > BUG: KMSAN: uninit-value in __fswab32 include/uapi/linux/swab.h:59 [inline]
> > BUG: KMSAN: uninit-value in do_convert sound/core/oss/linear.c:50 [inline]
> > BUG: KMSAN: uninit-value in convert sound/core/oss/linear.c:81 [inline]
> > BUG: KMSAN: uninit-value in linear_transfer+0x92d/0xca0
> > sound/core/oss/linear.c:110
> > CPU: 1 PID: 6835 Comm: syz-executor866 Not tainted 4.19.0+ #78
> > Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
> > Google 01/01/2011
> > Call Trace:
> >   __dump_stack lib/dump_stack.c:77 [inline]
> >   dump_stack+0x32d/0x480 lib/dump_stack.c:113
> >   kmsan_report+0x19f/0x300 mm/kmsan/kmsan.c:911
> >   __msan_warning+0x76/0xd0 mm/kmsan/kmsan_instr.c:415
> >   __arch_swab32 arch/x86/include/uapi/asm/swab.h:10 [inline]
> >   __fswab32 include/uapi/linux/swab.h:59 [inline]
> >   do_convert sound/core/oss/linear.c:50 [inline]
> >   convert sound/core/oss/linear.c:81 [inline]
> >   linear_transfer+0x92d/0xca0 sound/core/oss/linear.c:110
> >   snd_pcm_plug_read_transfer+0x3bf/0x590 sound/core/oss/pcm_plugin.c:659
> >   snd_pcm_oss_read2 sound/core/oss/pcm_oss.c:1480 [inline]
> >   snd_pcm_oss_read1 sound/core/oss/pcm_oss.c:1518 [inline]
> >   snd_pcm_oss_read+0xe6d/0x1cb0 sound/core/oss/pcm_oss.c:2758
> >   __vfs_read+0x1e2/0xb10 fs/read_write.c:416
> >   vfs_read+0x380/0x6b0 fs/read_write.c:452
> >   ksys_read fs/read_write.c:578 [inline]
> >   __do_sys_read fs/read_write.c:588 [inline]
> >   __se_sys_read+0x17a/0x370 fs/read_write.c:586
> >   __x64_sys_read+0x4a/0x70 fs/read_write.c:586
> >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> > RIP: 0033:0x446379
> > Code: e8 0c e8 ff ff 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7
> > 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff
> > ff 0f 83 7b 08 fc ff c3 66 2e 0f 1f 84 00 00 00 00
> > RSP: 002b:00007fcd5b97cda8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
> > RAX: ffffffffffffffda RBX: 00000000006dac38 RCX: 0000000000446379
> > RDX: 0000000000000184 RSI: 0000000020002180 RDI: 0000000000000003
> > RBP: 00000000006dac30 R08: 0000000000000000 R09: 0000000000000000
> > R10: 0000000000000000 R11: 0000000000000246 R12: 00000000006dac3c
> > R13: 7073642f7665642f R14: 00800000c0045002 R15: 0000000000000001
> >
> > Uninit was stored to memory at:
> >   kmsan_save_stack_with_flags mm/kmsan/kmsan.c:252 [inline]
> >   kmsan_save_stack mm/kmsan/kmsan.c:267 [inline]
> >   kmsan_internal_chain_origin+0x136/0x240 mm/kmsan/kmsan.c:569
> >   kmsan_memcpy_origins+0x13d/0x1b0 mm/kmsan/kmsan.c:393
> >   __msan_memcpy+0x6f/0x80 mm/kmsan/kmsan_instr.c:242
> >   do_convert sound/core/oss/linear.c:48 [inline]
> >   convert sound/core/oss/linear.c:81 [inline]
> >   linear_transfer+0x74c/0xca0 sound/core/oss/linear.c:110
> >   snd_pcm_plug_read_transfer+0x3bf/0x590 sound/core/oss/pcm_plugin.c:659
> >   snd_pcm_oss_read2 sound/core/oss/pcm_oss.c:1480 [inline]
> >   snd_pcm_oss_read1 sound/core/oss/pcm_oss.c:1518 [inline]
> >   snd_pcm_oss_read+0xe6d/0x1cb0 sound/core/oss/pcm_oss.c:2758
> >   __vfs_read+0x1e2/0xb10 fs/read_write.c:416
> >   vfs_read+0x380/0x6b0 fs/read_write.c:452
> >   ksys_read fs/read_write.c:578 [inline]
> >   __do_sys_read fs/read_write.c:588 [inline]
> >   __se_sys_read+0x17a/0x370 fs/read_write.c:586
> >   __x64_sys_read+0x4a/0x70 fs/read_write.c:586
> >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> >
> > Uninit was created at:
> >   kmsan_save_stack_with_flags mm/kmsan/kmsan.c:252 [inline]
> >   kmsan_internal_alloc_meta_for_pages+0x155/0x740 mm/kmsan/kmsan.c:689
> >   kmsan_alloc_page+0x77/0xe0 mm/kmsan/kmsan_hooks.c:320
> >   __alloc_pages_nodemask+0x12cc/0x6640 mm/page_alloc.c:4416
> >   alloc_pages_current+0x584/0x7e0 mm/mempolicy.c:2093
> >   alloc_pages include/linux/gfp.h:511 [inline]
> >   __vmalloc_area_node mm/vmalloc.c:1689 [inline]
> >   __vmalloc_node_range+0x879/0x12a0 mm/vmalloc.c:1752
> >   __vmalloc_node mm/vmalloc.c:1797 [inline]
> >   __vmalloc_node_flags mm/vmalloc.c:1811 [inline]
> >   vmalloc+0xd8/0xf0 mm/vmalloc.c:1833
> >   snd_pcm_plugin_alloc+0x255/0xc80 sound/core/oss/pcm_plugin.c:71
> >   snd_pcm_plug_alloc+0x281/0x600 sound/core/oss/pcm_plugin.c:137
> >   snd_pcm_oss_change_params_locked+0x5e40/0x6e30
> > sound/core/oss/pcm_oss.c:1039
> >   snd_pcm_oss_change_params sound/core/oss/pcm_oss.c:1107 [inline]
> >   snd_pcm_oss_get_active_substream+0x4f7/0x5a0 sound/core/oss/pcm_oss.c:1124
> >   snd_pcm_oss_get_rate sound/core/oss/pcm_oss.c:1774 [inline]
> >   snd_pcm_oss_set_rate sound/core/oss/pcm_oss.c:1766 [inline]
> >   snd_pcm_oss_ioctl+0x4adb/0x8860 sound/core/oss/pcm_oss.c:2614
> >   do_vfs_ioctl+0xf77/0x2d30 fs/ioctl.c:46
> >   ksys_ioctl fs/ioctl.c:702 [inline]
> >   __do_sys_ioctl fs/ioctl.c:709 [inline]
> >   __se_sys_ioctl+0x1da/0x270 fs/ioctl.c:707
> >   __x64_sys_ioctl+0x4a/0x70 fs/ioctl.c:707
> >   do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
> >   entry_SYSCALL_64_after_hwframe+0x63/0xe7
> > ==================================================================
> 
> I am actually unsure whether this is a true positive or not.
> snd_pcm_plugin_alloc() allocates plugin->buf using vmalloc(size) (see
> https://elixir.bootlin.com/linux/v4.20-rc1/source/sound/core/oss/pcm_plugin.c#L70)
> KMSAN doesn't know where this buffer is initialized (any help finding
> this out is welcome!), so we mark |size| bytes starting from
> plugin->buf as initialized:
> https://github.com/google/kmsan/blob/master/sound/core/oss/pcm_plugin.c#L78
> But when |size| is not page-aligned vmalloc() still allocates whole
> page, and in the report above linear_transfer() appears to run past
> |size| bytes and read the tail bytes.
> KASAN doesn't detect this bug, because it doesn't handle vmalloc'ed
> (and these bytes are addressable anyway).

It's still strange that the conversion function gets called for the
uninitialized source.  But we should clear the vmalloc page in anyway
for avoiding such a problem.  And even better would be to use
kvzalloc() for a better performance.

Could you check whether the patch works?

I forgot the way to trigger the test for kmsan stuff.  IIRC, just
pushing to my tree and triggering syz test won't work for KMSAN,
right?


thanks,

Takashi

-- 8< --
From: Takashi Iwai <tiwai@suse.de>
Subject: [PATCH] ALSA: oss: Use kvzalloc() for local buffer allocations

PCM OSS layer may allocate a few temporary buffers, one for the core
read/write and another for the conversions via plugins.  Currently
both are allocated via vmalloc().  But as the allocation size is
equivalent with the PCM period size, the required size might be quite
small, depending on the application.

This patch replaces these vmalloc() calls with kvzalloc() for covering
small period sizes better.  Also, we use "z"-alloc variant here for
addressing the possible uninitialized access reported by syzkaller.

[ More reported-by and tested-by here in the final version ]

Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/core/oss/pcm_oss.c    | 6 +++---
 sound/core/oss/pcm_plugin.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/sound/core/oss/pcm_oss.c b/sound/core/oss/pcm_oss.c
index f8d4a419f3af..467039b342b5 100644
--- a/sound/core/oss/pcm_oss.c
+++ b/sound/core/oss/pcm_oss.c
@@ -1062,8 +1062,8 @@ static int snd_pcm_oss_change_params_locked(struct snd_pcm_substream *substream)
 	runtime->oss.channels = params_channels(params);
 	runtime->oss.rate = params_rate(params);
 
-	vfree(runtime->oss.buffer);
-	runtime->oss.buffer = vmalloc(runtime->oss.period_bytes);
+	kvfree(runtime->oss.buffer);
+	runtime->oss.buffer = kvzalloc(runtime->oss.period_bytes, GFP_KERNEL);
 	if (!runtime->oss.buffer) {
 		err = -ENOMEM;
 		goto failure;
@@ -2328,7 +2328,7 @@ static void snd_pcm_oss_release_substream(struct snd_pcm_substream *substream)
 {
 	struct snd_pcm_runtime *runtime;
 	runtime = substream->runtime;
-	vfree(runtime->oss.buffer);
+	kvfree(runtime->oss.buffer);
 	runtime->oss.buffer = NULL;
 #ifdef CONFIG_SND_PCM_OSS_PLUGINS
 	snd_pcm_oss_plugin_clear(substream);
diff --git a/sound/core/oss/pcm_plugin.c b/sound/core/oss/pcm_plugin.c
index 141c5f3a9575..31cb2acf8afc 100644
--- a/sound/core/oss/pcm_plugin.c
+++ b/sound/core/oss/pcm_plugin.c
@@ -66,8 +66,8 @@ static int snd_pcm_plugin_alloc(struct snd_pcm_plugin *plugin, snd_pcm_uframes_t
 		return -ENXIO;
 	size /= 8;
 	if (plugin->buf_frames < frames) {
-		vfree(plugin->buf);
-		plugin->buf = vmalloc(size);
+		kvfree(plugin->buf);
+		plugin->buf = kvzalloc(size, GFP_KERNEL);
 		plugin->buf_frames = frames;
 	}
 	if (!plugin->buf) {
@@ -191,7 +191,7 @@ int snd_pcm_plugin_free(struct snd_pcm_plugin *plugin)
 	if (plugin->private_free)
 		plugin->private_free(plugin);
 	kfree(plugin->buf_channels);
-	vfree(plugin->buf);
+	kvfree(plugin->buf);
 	kfree(plugin);
 	return 0;
 }
-- 
2.19.1
