Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:05:22 -0000
Received: from icoremail.net (unknown [209.85.215.171])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv5q7G+hbCkp1AQ--.35510S3;
	Sun, 11 Nov 2018 20:08:28 +0800 (CST)
Received: from mail-pg1-f171.google.com (unknown [209.85.215.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_km5G+hb0xUsAA--.1879S3;
	Sun, 11 Nov 2018 20:08:25 +0800 (CST)
Received: by mail-pg1-f171.google.com with SMTP id w3-v6so2780217pgs.11
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 04:08:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:references:date:in-reply-to:message-id
         :user-agent:mime-version:sender:precedence:list-id;
        bh=UkTy70XLXA8Xn4EgbC7KcIXhEOqrqH/PqbaHKdoqBFY=;
        b=TYoq9KXn/J/JvP9Je6Kye7xbUuQHVyomxU2f6o8rLaVs20c7pWf7laUY4LpgJr7nzc
         cl2aivfraGB9tict3WESiSbgDCnshUWH3nQzrQUQfxnuZKOm+dmGsw8OkJMkeYTTFNHG
         GCvRNEFMQoNE2gEnsXus3GBXrcuE9sudS1UfeYLBz246Ps1cHRMQcUxMYady9Zbi3O+p
         /anRBxKtO3HeEGsgxnyWLgljiRuwlT3/6cGvNrKharnsbvfIZk8DHO8zRY6W2ZbqSxEl
         pAhyV6IAsUssVJREWFQ+BvRwui1D1vGbC4ClHlPI1koAbgUe9gm/ah+2YfNrHJQfRsB3
         lwEQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gKP9vikXijg6r9L3GHI4UFYlR2XGd0Ag2/TfZg4XyFePCOw6agZ
	rn8alTWGIAEp3kBIQFInhwqTVKOV/5YbAATOv//R/xqUWMPsfkY=
X-Received: by 2002:a63:1e17:: with SMTP id e23mr13689004pge.130.1541938105482;
        Sun, 11 Nov 2018 04:08:25 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2044678pjt;
        Sun, 11 Nov 2018 04:08:24 -0800 (PST)
X-Google-Smtp-Source: AJdET5cmaQeaamoBNQ3GWeMXbe8d1oqx47nB4/Cw+gYE5wvckqe0a23m7zgRznpxkNK/mHm8rXhk
X-Received: by 2002:a63:bc02:: with SMTP id q2mr9577262pge.116.1541938104393;
        Sun, 11 Nov 2018 04:08:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541938104; cv=none;
        d=google.com; s=arc-20160816;
        b=F3oovmbjoInf8Hw6Nngll8tUbzgkDm+Ma1d1BQ3s5++3c9IRkJYSsnBksquNszRMYR
         QDWn60uO7gcE+d8DaeqHdnfjoImwDSK2lvrwqQpuf/HvfAxGYdXSj2hV7txuIrcL12Wg
         Qf/kBA4fjIcHKLhaPN6QR7LVwTmPXnOVZX22375l5M4DwSuBoelkAL8LYxsmmM6WHIl0
         5VpSZhW72+jkHZuaGR5PJlKZa7ktVDIb8fSMYGPIoKEj6ABnK5JfCBF59/vXA0hRPMwd
         1Rzqtn7ftVmUcVRZi8FRlyAzAArj1oKJzV3uJd/4358rHyUV07fgZcK9/HDcnWhKlEk/
         h7rg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:user-agent:message-id
         :in-reply-to:date:references:subject:cc:to:from;
        bh=UkTy70XLXA8Xn4EgbC7KcIXhEOqrqH/PqbaHKdoqBFY=;
        b=d5QUWe6OXZWHDInbzrkLLAMbC+xvf9NiM1M19eMmnib40+MYuukTi+gIRHRPhi/szy
         YQXuW0RG8+9zIykD8KCUkAdM6Y4tInnslJcmGJHxDS0Lf2dZLzaqbAPB2qTYELDK8Tss
         IMz4AvzN/rlfKL45pbOGG3G9Cq+9MTapmL3dVgIyKz4OD7rBPfAqPOakNj0eQqDR6gSN
         kLo1KS+A/CkUqtA3V36xt4xmPYg/CIs2hGW2NV96+hHNjplLhwMg4XXnWjKYSQceNG8J
         PBXSwNTAwIGlTlulrup6a0sVb12luh7kJGTYkNQX5f2/OVO8V0UXlT+z27RgQ3EDFogE
         dcNQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id i3-v6si14792300pli.318.2018.11.11.04.08.07;
        Sun, 11 Nov 2018 04:08:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727732AbeKKV42 (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Sun, 11 Nov 2018 16:56:28 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38150 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727492AbeKKV41 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 16:56:27 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 06423307D913;
        Sun, 11 Nov 2018 12:08:04 +0000 (UTC)
Received: from oldenburg.str.redhat.com (ovpn-116-74.ams2.redhat.com [10.36.116.74])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 9A4C55C1B4;
        Sun, 11 Nov 2018 12:07:59 +0000 (UTC)
From: Florian Weimer <fweimer@redhat.com>
To: Willy Tarreau <w@1wt.eu>
Cc: "Michael Kerrisk \(man-pages\)" <mtk.manpages@gmail.com>,
        Daniel Colascione <dancol@google.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Joel Fernandes <joelaf@google.com>,
        Linux API <linux-api@vger.kernel.org>,
        Vlastimil Babka <vbabka@suse.cz>,
        "Carlos O'Donell" <carlos@redhat.com>,
        "libc-alpha\@sourceware.org" <libc-alpha@sourceware.org>
Subject: Re: Official Linux system wrapper library?
References: <CAKOZuesB4R=dCz4merWQN0FSCGrXmOgUUr4ienSbStBJguNv8g@mail.gmail.com>
        <bbc12da5-830e-99a7-95e3-d9da42947dc9@gmail.com>
        <20181111081725.GA30248@1wt.eu>
        <87y39zx5xa.fsf@oldenburg.str.redhat.com>
        <20181111110236.GA4189@1wt.eu>
Date: Sun, 11 Nov 2018 13:07:54 +0100
In-Reply-To: <20181111110236.GA4189@1wt.eu> (Willy Tarreau's message of "Sun,
        11 Nov 2018 12:02:36 +0100")
Message-ID: <87tvknvmud.fsf@oldenburg.str.redhat.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/25.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.48]); Sun, 11 Nov 2018 12:08:04 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_km5G+hb0xUsAA--.1879S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Xw4rAFykuFW7JrW3tFy7Jrb_yoW7AFy3pF
	W3KFsFkF1kJFn7Aw12v3WxXFyIv3yxta4Yyrn3XrWkAr98Wasagr4IkFWY9asrCr1xGw4j
	qrWjg3W5Zr98AaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6ryUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY
	6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_JF0_
	Jw1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsG
	vfC2KfnxnUUI43ZEXa7IUOhFxUUUUUU==

* Willy Tarreau:

> On Sun, Nov 11, 2018 at 11:30:25AM +0100, Florian Weimer wrote:
>> * Willy Tarreau:
>> 
>> > On Sun, Nov 11, 2018 at 07:55:30AM +0100, Michael Kerrisk (man-pages) wrote:
>> >> [1] https://sourceware.org/bugzilla/show_bug.cgi?id=6399 is a
>> >>     longstanding example.
>> >
>> > This one was a sad read and shows that applications will continue to
>> > suffer from glibc's prehistorical view on operating systems and will
>> > continue to have to define their own syscall wrappers to exploit the
>> > full potential of the modern operating systems they execute on.
>> 
>> What's modern about a 15-bit thread identifier?
>
> It's 15-bit on 32-bit systems, and 22 on 64-bit, hence you can have
> 4 million threads and/or processes on a single system image provided
> you have the resources for that of course.

I believe the default for pid_max is still 32768.

>> I understand that using this interface is required in some cases (which
>> includes some system calls for which glibc does provide wrappers), but I
>> assumed that it was at least understood that these reusable IDs for
>> tasks were an extremely poor interface.  Aren't the resulting bugs
>> common knowledge?
>
> Sure, just as are the bugs created by people trying to implement their
> own syscall wrappers. It's not by denying access to some native system
> interfaces that you will prevent users from accessing them, you'll just
> force them to work around the restriction and make things even worse.

Well, once we have the fixed interface, it becomes easier to use if we
only expose that, and not the confusing interface which is described in
countless Stackoverflow answers.  More choice isn't always good.

>> > This reminds me when one had to write their own spinlocks and atomics
>> > many years ago. Seeing comments suggesting an application should open
>> > /proc/$PID makes me really wonder if people actually want to use slow
>> > and insecure applications designed this way.
>> 
>> I don't understand.  If you want a non-reusable identifier, you have to
>> go through the /proc interface anyway.  I think the recommendation is to
>> use the PID/start time combination to get a unique process identifier or
>> something like that.
>
> It depends what you want to achieve. If you just need the tid, the one
> you'll pass to sched_setaffinity(), gettid() is fine.

You can use pthread_setaffinity_np to control the affinity mask of a
thread without knowing its TID, and you can call sched_setaffinity on
the current thread without knowing its TID anyway.

And for sched_setattr, you need to call syscall anyway because there is
no wrapper, so calling gettid via syscall isn't that bad.  (We can't add
wrappers for sched_setattr because it's not entirely clear how the
userspace ABI will evolve in the future.)

> There are two issues
> with abusing /proc to emulate syscalls :
>   - it's sometimes much slower than the equivalent syscall and can
>     encourage users to cache the resulting values when they should not
>   - either it's done upon process startup and it may not get valid value
>     or may not work if /proc is not mounted yet (think init, mount etc),
>     or it's done upon first use and can break daemons which chroot()
>     themselves.

Sure, but many kernel developers prefer /proc and file-based interfaces.
See getumask for a particularly illuminating example.

> Syscalls don't have such limitations and are much safer to use. For other
> things it's quite possible that you cannot rely on this syscall at all,
> it's not a solution to everything, but it's a nice solution to all cases
> where you need to access the system-wide identifier to pin a thread to a
> given CPU set or renice it.

Again, you don't need gettid for that at all.  glibc has covered this
fully.

Surely there is a better justification for using gettid?

I suspect quite a few calls to the gettid system calls could actually be
getpid, and the programmer used __NR_gettid instead of __NR_getpid to
bypass the glibc PID cache.  But the cache isn't used by the syscall
code path anyway, so it really does not matter.

>> I wanted to add gettid to glibc this cycle, but your comments suggest to
>> me that if we did this, we'd likely never get a proper non-reusable
>> thread identifier from the kernel.  So I'm not sure what do anymore.
>
> "Look people, I was about to do what we all refused to do for 10 years
> now and Willy's comment made me change my mind, I'm sorry". The *real*
> argument that most users could understand is "guys, we're sorry, but we
> are running out of time and we won't work on this low priority stuff,
> so someone else will have to take care of it".

I can assure you that in the past, a glibc patch for gettid would have
been rejected even if it were perfectly fine as far as the contribution
guidelines go (that is, copyright assignment, coding style, manual
update, ABI list update etc.).  It's not a matter of resources or lack
thereof.

> In my opinion what matters is not whether or not people will use it
> appropriately, but that its validity, side effects and wrong assumptions
> are properly documented so that users don't shoot themselves in the foot.

Well, there I disagree.  I think adding bad interfaces that confuse
developers is not a good idea, particularly if there is no compelling
use case.  On the other hand, a userspace interface that is different
from what the kernel provides is confusing as well and leads to bugs
(see clone).

Thanks,
Florian
