Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:55:22 -0000
Received: from icoremail.net (unknown [209.85.215.171])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv+5txeVbhFppAQ--.32335S3;
	Sat, 10 Nov 2018 01:35:42 +0800 (CST)
Received: from mail-pg1-f171.google.com (unknown [209.85.215.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHAE1rxeVb+oYjAA--.780S3;
	Sat, 10 Nov 2018 01:35:39 +0800 (CST)
Received: by mail-pg1-f171.google.com with SMTP id w3-v6so1117338pgs.11
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 09:35:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:sender:precedence:list-id;
        bh=bk9ANBUJl51vOO3Fm5cwpv7iOZ5US503zMrmVjGhsME=;
        b=HhQkXc6XBuPPQhjzWunUP5FVsv/N4NOZM+wDyhfjLqtGU3Qa7ZUu9BG2eYkkqQVk9f
         MiIjY8PhUyp1qe8NFNCN9W3hsgZso8odrhuYgorDumXWLQKnD7t60w8ShD/NFmT2N7nQ
         45OpdCROzfgYVa04hch5G8QfEyq9kJR5et7EZUSNDzLOZ7FI/gASEEF3NszAS9mr2EyJ
         W3JuESUqpkEl5RTEIeH6nACL+jMXlgqQRtwWt1w/qs7IaHCOxd/KPil8DoN2rKB+/zoo
         8op7/zRFBfHdI/fTnlL64zfaoShJ2GyfyGklaW2CCvLwTlaDEeBPSu1CfVx5ETxVr1d5
         2LHQ==
X-Gm-Message-State: AGRZ1gI8OOUcKkHthUuqZKNl8p6MUYqkfm/vIeWxKQ7C1UI//Ymfb7sF
	sktL1kxZQ9pzo4jQnKDqpLdyIp29xNVPpdiBl6f+7hVGjJBaxCcZOg==
X-Received: by 2002:a65:66ce:: with SMTP id c14mr8217395pgw.450.1541784939365;
        Fri, 09 Nov 2018 09:35:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp173328pjt;
        Fri, 9 Nov 2018 09:35:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5cq9Z0YSnsSvPBh/CbjJvrkQTaOxqa2xBG78pwzB2uWFpyc/eNqvIr4nRfNgPfylXosZS8Z
X-Received: by 2002:a63:ab08:: with SMTP id p8mr1702773pgf.87.1541784938098;
        Fri, 09 Nov 2018 09:35:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541784938; cv=none;
        d=google.com; s=arc-20160816;
        b=Yxnypi+81WiqR6OIPDY6Y5b7XatcQDULmMePDRQ/4s9PX5jy0X7qlHpL5zpKYDuh49
         TaR3y/MdxbXwbvB60J6NlQmhkv5HXsPMaKe8jIy61uoZ5I0TVCI0ecBmiSie3ttR6Zme
         qWgPmJLp6ULsELgxASOxf5xzgTZVpRanU8YadCmG7O66T9wnDxNX6A8m1mSUuhO+uFuw
         9P54QhDSVfaHlQA1A2PwC+8h3XVMjUpQd0m+JEhTUWEO91PXQY1uCBVDIHM0TSwq7yCE
         clAK7l5R2QMR9oPZch4kOqa2tWWCZTmP9O0wp3va0VA6Z4Hod+hu4gTVxnyE/4macubu
         koTg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=bk9ANBUJl51vOO3Fm5cwpv7iOZ5US503zMrmVjGhsME=;
        b=MRl9lPlA8Ekq+2A1TIdGdS0jM+mEN/hEfP6KFCPyKY612J7YivgqW95ABhnAEXSMpO
         0QZ1S4bM8mZQOtgt7H7In+nJCJr0nG+pqC7MnUgVYGssljC14LK5l3a50Ef9P3hypxiv
         0S7QgQ/oamfiO6nBBD7e9BzbNAgliN/FzH6Ui9v/6RtF92HD+/zOWO+Pg8k1l4puGaZ3
         lzU0DG8Y8JyOD4oF0l5v3DIdHmyvZKfoUWGehtDx7WLqFVCJm6EZq/m1tW2r8NysVaCA
         IxwrxXc7W/QpQuAcHTWMwzfGeTt77OK/2qra11k5pUtAlNauF1BNrtQpJZDx2cfek9Ph
         s3xQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@cisco.com header.s=iport header.b="k0ap6N/L";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=cisco.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id v13si7477496pgn.355.2018.11.09.09.35.21;
        Fri, 09 Nov 2018 09:35:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728519AbeKJDQJ (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 22:16:09 -0500
Received: from rcdn-iport-6.cisco.com ([173.37.86.77]:45942 "EHLO
        rcdn-iport-6.cisco.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727961AbeKJDQJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 22:16:09 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=cisco.com; i=@cisco.com; l=6514; q=dns/txt; s=iport;
  t=1541784875; x=1542994475;
  h=from:to:cc:subject:date:message-id;
  bh=0y5wrl//GJ4z1dENQTUgLY7P1BEHD3pTofJksrLUyzk=;
  b=k0ap6N/Lvy7PGGWxptONLFo/lbhzHcDd1WgRnOOK0AbI8LIvAeAcr8tu
   Tw86NODv8UZJ1UwkrlpoF8tRjvl2riTLB/omsF9EZfjiWUdFAn6B8nYmO
   z0+SA0ZOLWIDtZa9kP7xRFC8odM9JhC9icQ7ECNsoY+XaEBMTYK4yjfap
   w=;
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAAA+xOVb/4cNJK1jGwEBAQEDAQE?=
 =?us-ascii?q?BBwMBAQGBUQYBAQELAYIDgWgnjBCLe5k/FIFmDYRsgyYiNA0NAQMBAQIBAQJ?=
 =?us-ascii?q?tKIY6KQR9CAwTgyGCAqkYiiUUhz6EKheBQT+BEYdVhhYCj3iPVAmCHI5yCxi?=
 =?us-ascii?q?QbpdxgUM4gVUzGggbFYMngicXjj0eAzCKRCqCIwEB?=
X-IronPort-AV: E=Sophos;i="5.54,483,1534809600"; 
   d="scan'208";a="479397800"
Received: from alln-core-2.cisco.com ([173.36.13.135])
  by rcdn-iport-6.cisco.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Nov 2018 17:34:35 +0000
Received: from zorba.cisco.com ([10.24.43.135])
        by alln-core-2.cisco.com (8.15.2/8.15.2) with ESMTP id wA9HYXVs010556;
        Fri, 9 Nov 2018 17:34:34 GMT
From: Daniel Walker <danielwa@cisco.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: Daniel Walker <dwalker@fifo99.com>, xe-linux-external@cisco.com,
        Maksym Kokhan <maksym.kokhan@globallogic.com>,
        linux-kernel@vger.kernel.org
Subject: [PATCH 1/3] add generic builtin command line
Date: Fri,  9 Nov 2018 09:34:31 -0800
Message-Id: <20181109173433.1271-1-danielwa@cisco.com>
X-Mailer: git-send-email 2.14.1
X-Auto-Response-Suppress: DR, OOF, AutoReply
X-Outbound-SMTP-Client: 10.24.43.135, [10.24.43.135]
X-Outbound-Node: alln-core-2.cisco.com
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHAE1rxeVb+oYjAA--.780S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKrW3Xw1fZF4xJFy3tF18Zrb_yoWxGF1DpF
	1Fyw1rGrWkC3WxJ3yfArn3Wr95Awsay34DJr13GryjyF15J3Wvgwnagry29a4UZr4fAr4j
	qFZ0qF1UKFy5uw7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Cr1j6rxdM28EF7xvwVC2z280aVCY1x0267AKxVWxJr0_GcWle2I262IYc4
	CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_
	Jr0_Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x
	0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44l
	c2xSY4AK6IIF6r4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26ryj6F1UMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1l
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4
	C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E
	14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIx
	kGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x
	07bmwZcUUUUU=

This code allows architectures to use a generic builtin command line.
The state of the builtin command line options across architecture is
diverse. On x86 and mips they have pretty much the same code and the
code prepends the builtin command line onto the boot loader provided
one. On powerpc there is only a builtin override and nothing else.

The code in this commit unifies the mips and x86 code into a generic
header file under the CONFIG_GENERIC_CMDLINE option. When this
option is enabled the architecture can call the cmdline_add_builtin()
to add the builtin command line.

[maksym.kokhan@globallogic.com: fix cmdline_add_builtin() macro]
Cc: Daniel Walker <dwalker@fifo99.com>
Cc: Daniel Walker <danielwa@cisco.com>
Cc: xe-linux-external@cisco.com
Signed-off-by: Daniel Walker <danielwa@cisco.com>
Signed-off-by: Maksym Kokhan <maksym.kokhan@globallogic.com>
---
 include/linux/cmdline.h | 79 +++++++++++++++++++++++++++++++++++++++++++++++++
 init/Kconfig            | 72 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 151 insertions(+)
 create mode 100644 include/linux/cmdline.h

diff --git a/include/linux/cmdline.h b/include/linux/cmdline.h
new file mode 100644
index 000000000000..e7e5cdd66d3a
--- /dev/null
+++ b/include/linux/cmdline.h
@@ -0,0 +1,79 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _LINUX_CMDLINE_H
+#define _LINUX_CMDLINE_H
+
+/*
+ *
+ * Copyright (C) 2015. Cisco Systems, Inc.
+ *
+ * Generic Append/Prepend cmdline support.
+ */
+
+#if defined(CONFIG_GENERIC_CMDLINE) && defined(CONFIG_CMDLINE_BOOL)
+
+#ifndef CONFIG_CMDLINE_OVERRIDE
+/*
+ * This function will append or prepend a builtin command line to the command
+ * line provided by the bootloader. Kconfig options can be used to alter
+ * the behavior of this builtin command line.
+ * @dest: The destination of the final appended/prepended string
+ * @src: The starting string or NULL if there isn't one.
+ * @tmp: temporary space used for prepending
+ * @length: the maximum length of the strings above.
+ */
+static inline void
+_cmdline_add_builtin(char *dest, char *src, char *tmp, unsigned long length)
+{
+	if (src != dest && src != NULL) {
+		strlcpy(dest, " ", length);
+		strlcat(dest, src, length);
+	}
+
+	strlcat(dest, " ", length);
+
+	if (sizeof(CONFIG_CMDLINE_APPEND) > 1)
+		strlcat(dest, CONFIG_CMDLINE_APPEND, length);
+
+	/*
+	 * You need to convert you old style CONFIG_CMDLINE to use
+	 * the prepend, or append defines. Some architectures use one
+	 * some use the other. You need to figure out which ones is
+	 * right for your situation. I would recommend prepending
+	 * because it's the safest (i.e. CONFIG_CMDLINE_PREPEND).
+	 */
+	BUILD_BUG_ON(sizeof(CONFIG_CMDLINE) != 1);
+
+	if (sizeof(CONFIG_CMDLINE_PREPEND) > 1) {
+		strlcpy(tmp, CONFIG_CMDLINE_PREPEND, length);
+		strlcat(tmp, " ", length);
+		strlcat(tmp, dest, length);
+		strlcpy(dest, tmp, length);
+	}
+}
+
+#define cmdline_add_builtin(dest, src, length)				    \
+{									    \
+	if (sizeof(CONFIG_CMDLINE_PREPEND) > 1) {			    \
+		static char cmdline_tmp_space[length] __initdata;	    \
+		_cmdline_add_builtin(dest, src, cmdline_tmp_space, length); \
+	} else {							    \
+		_cmdline_add_builtin(dest, src, NULL, length);		    \
+	}								    \
+}
+#else
+#define cmdline_add_builtin(dest, src, length)				   \
+{									   \
+	strlcpy(dest, CONFIG_CMDLINE_PREPEND " " CONFIG_CMDLINE_APPEND,    \
+		length);						   \
+}
+#endif /* !CONFIG_CMDLINE_OVERRIDE */
+
+#else
+#define cmdline_add_builtin(dest, src, length) { \
+	if (src != NULL)						   \
+		strlcpy(dest, src, length);				   \
+}
+#endif /* CONFIG_GENERIC_CMDLINE */
+
+
+#endif /* _LINUX_CMDLINE_H */
diff --git a/init/Kconfig b/init/Kconfig
index a4112e95724a..bac58530e082 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1775,6 +1775,78 @@ config PROFILING
 config TRACEPOINTS
 	bool
 
+config GENERIC_CMDLINE
+	bool
+
+if GENERIC_CMDLINE
+
+config CMDLINE_BOOL
+	bool "Built-in kernel command line"
+	help
+	  Allow for specifying boot arguments to the kernel at
+	  build time.  On some systems (e.g. embedded ones), it is
+	  necessary or convenient to provide some or all of the
+	  kernel boot arguments with the kernel itself (that is,
+	  to not rely on the boot loader to provide them.)
+
+	  To compile command line arguments into the kernel,
+	  set this option to 'Y', then fill in the
+	  the boot arguments in CONFIG_CMDLINE.
+
+	  Systems with fully functional boot loaders (i.e. non-embedded)
+	  should leave this option set to 'N'.
+
+config CMDLINE_APPEND
+	string "Built-in kernel command string append"
+	depends on CMDLINE_BOOL
+	default ""
+	help
+	  Enter arguments here that should be compiled into the kernel
+	  image and used at boot time.  If the boot loader provides a
+	  command line at boot time, this string is appended to it to
+	  form the full kernel command line, when the system boots.
+
+	  However, you can use the CONFIG_CMDLINE_OVERRIDE option to
+	  change this behavior.
+
+	  In most cases, the command line (whether built-in or provided
+	  by the boot loader) should specify the device for the root
+	  file system.
+
+config CMDLINE_PREPEND
+	string "Built-in kernel command string prepend"
+	depends on CMDLINE_BOOL
+	default ""
+	help
+	  Enter arguments here that should be compiled into the kernel
+	  image and used at boot time.  If the boot loader provides a
+	  command line at boot time, this string is prepended to it to
+	  form the full kernel command line, when the system boots.
+
+	  However, you can use the CONFIG_CMDLINE_OVERRIDE option to
+	  change this behavior.
+
+	  In most cases, the command line (whether built-in or provided
+	  by the boot loader) should specify the device for the root
+	  file system.
+
+config CMDLINE_OVERRIDE
+	bool "Built-in command line overrides boot loader arguments"
+	depends on CMDLINE_BOOL
+	help
+	  Set this option to 'Y' to have the kernel ignore the boot loader
+	  command line, and use ONLY the built-in command line. In this case
+	  append and prepend strings are concatenated to form the full
+	  command line.
+
+	  This is used to work around broken boot loaders.  This should
+	  be set to 'N' under normal conditions.
+
+config CMDLINE
+	string ""
+
+endif
+
 endmenu		# General setup
 
 source "arch/Kconfig"
-- 
2.14.1
