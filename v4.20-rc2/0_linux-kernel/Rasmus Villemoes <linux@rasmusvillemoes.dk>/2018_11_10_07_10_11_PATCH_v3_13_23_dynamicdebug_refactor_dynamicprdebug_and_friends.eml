Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:57:41 -0000
Received: from icoremail.net (unknown [209.85.214.176])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH8KFFOZbLQNrAQ--.32785S3;
	Sat, 10 Nov 2018 07:13:11 +0800 (CST)
Received: from mail-pl1-f176.google.com (unknown [209.85.214.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnCkaEFOZbCY4kAA--.2950S3;
	Sat, 10 Nov 2018 07:13:08 +0800 (CST)
Received: by mail-pl1-f176.google.com with SMTP id f12-v6so1598079plo.1
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 15:13:08 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=uNoGVf7Ddr77R5P/EQPIC/miS/nc7l5r4RHb00Kf/Yo=;
        b=s8Nkw459Zxu1S2RzLs6yLDz93oihHxmvACjBMQmB6DaUVIhjlQCpOWCkw5uCrOZ33I
         WoNVvruP41TrMEK6HbsecoTU5WRVpdZut66TlYMM/dEAT7OrRzEK7GcUK1O/nWVQBCek
         88x6f51hoCKQ4zh/n/zRd9M2X/3pQ7ULs2r/hnxPEYQV5zgn8t+M4b3yzCtxmmPNwu9u
         9Vu6xmmlWWw7txSNLBLPE0pyau4A+3BmQL4FSZVXEajO8dg/pj+8AOhJvPpk4OT7zncU
         kdSCKW3pNPdhyfGHkrfF65IgmzNcjTe8oijaTgfEaIji0tdEhaNfPN2Jw9WnHjmFAe3a
         UAXQ==
X-Gm-Message-State: AGRZ1gLb3jYls12idbkm4UJp74fHPY+f5JvD0jTNPaB7Ghey7Meo5FYq
	6SV3RvRu57K94Xpe9K0x+tn0hwI73ymrRUhvQn0ZR1VhCra4TaPm/A==
X-Received: by 2002:a17:902:560f:: with SMTP id h15-v6mr7720630pli.160.1541805188565;
        Fri, 09 Nov 2018 15:13:08 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp497965pjt;
        Fri, 9 Nov 2018 15:13:07 -0800 (PST)
X-Google-Smtp-Source: AJdET5cUk4NDwkKV1fQNGCa08jXCtYriqCtTtx4+Fw7VKADxzQs6jjfsT0pM7hZ8QbAqCLVxjB8b
X-Received: by 2002:a63:fc49:: with SMTP id r9mr8974876pgk.209.1541805187897;
        Fri, 09 Nov 2018 15:13:07 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541805187; cv=none;
        d=google.com; s=arc-20160816;
        b=WVyc7p7cpuJUbNLYD7w1Yt4IPAvwS3oNiLzIBbInik7gee20qr0SnDMWcmmCLLfbp7
         YHN53MtD0cvTubZB5RgRlce3baCsMaCXzGH2UXKfkegULSeQU5AUt4c6UbdI78F6vVpZ
         caHxYvXL5thbfiNsLhfyzGHGEFhTolpg0yKisINYr/PVotT4F4laICauk35lzorqVbx3
         5vDo8rEgDr6DZMMrpfTnkpV5IEtu8h5zxszIyiZg1BE21AcYF8l7ipW8hWStEHKIY3ct
         NpVMSmPKK/7DwrbzbX2Fr6jaTN6Wma3B+jZi4Z5vMnpLWvhozb4NDlLBi/40/OzewODV
         ueUQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:date:subject:cc:to:from
         :dkim-signature;
        bh=uNoGVf7Ddr77R5P/EQPIC/miS/nc7l5r4RHb00Kf/Yo=;
        b=WenNLbviJI/f9IGre2BYjOc2NJLDtWrKV8PFwyEm8ALJbdEsleNmKLDnH2lVr8kzvq
         F1bc2gzHI7rRHQPsi9rzhz/+5zv6TPI+XzWlzNrKmjOuOrE5eIu+b6AReqqhlNKjkPnc
         PKK76GRM8CIGRFwYsUOVDiBcWWppKiUc+BzyEBaki3ymfsuSRc4J4kWlHx2k44K6PIF5
         3k8p+bgeLrqBpkOchVPrrAuhocLwLX+iLhgi4CYXyc+QbkuVSA0jQ6LB9vRQQeHkuUkB
         phixrKfeW3Jagi22LHdKfZtbhE1psYQ97B5oov66zUYLp5NZXiMdyuJNimZroMs2/h8B
         HaGQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@rasmusvillemoes.dk header.s=google header.b=LnD4YQ42;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id a5-v6si9043672plp.132.2018.11.09.15.12.53;
        Fri, 09 Nov 2018 15:13:07 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728950AbeKJIyD (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Sat, 10 Nov 2018 03:54:03 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:44735 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728765AbeKJIyC (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 03:54:02 -0500
Received: by mail-lj1-f196.google.com with SMTP id k19-v6so2945635lji.11
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 15:11:16 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=rasmusvillemoes.dk; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=uNoGVf7Ddr77R5P/EQPIC/miS/nc7l5r4RHb00Kf/Yo=;
        b=LnD4YQ42GCIwbo+93Vyt7RcSEJlTcE7sH0hvPl2xRzqZv8ujMb1duNIiwzwuQr9iyo
         G9+enmFbh0wuV9Fbx5HBe3nfmLA3M05pE2OAEXFtqgr2GJWe/ZQ+aQqIFtlCee1CiS4j
         GcMxIrgJbnAJgdZKsY8mCaDn3BuWEBNwYRSU0=
X-Received: by 2002:a2e:8643:: with SMTP id i3-v6mr5883593ljj.43.1541805075553;
        Fri, 09 Nov 2018 15:11:15 -0800 (PST)
Received: from prevas-ravi.prevas.se (dhcp-5-186-114-252.cgn.ip.fibianet.dk. [5.186.114.252])
        by smtp.gmail.com with ESMTPSA id x16sm1584012lff.26.2018.11.09.15.11.14
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Fri, 09 Nov 2018 15:11:15 -0800 (PST)
From: Rasmus Villemoes <linux@rasmusvillemoes.dk>
To: Andrew Morton <akpm@linux-foundation.org>,
        Jason Baron <jbaron@akamai.com>
Cc: linux-kernel@vger.kernel.org,
        Rasmus Villemoes <linux@rasmusvillemoes.dk>
Subject: [PATCH v3 13/23] dynamic_debug: refactor dynamic_pr_debug and friends
Date: Sat, 10 Nov 2018 00:10:11 +0100
Message-Id: <20181109231021.11658-14-linux@rasmusvillemoes.dk>
X-Mailer: git-send-email 2.19.1.6.gbde171bbf5
In-Reply-To: <20181109231021.11658-1-linux@rasmusvillemoes.dk>
References: <20181009112013.14238-1-linux@rasmusvillemoes.dk>
 <20181109231021.11658-1-linux@rasmusvillemoes.dk>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnCkaEFOZbCY4kAA--.2950S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZr4rGry8uFW3Kr1UuFykXwb_yoWrCFyrpw
	15Xa90vrs5GryxWwn7Aay7Kr13CFWIkF47GrZ5GrWrWryYgwnaqFnFgrWSqa4rta47XF4j
	qw1DZ3y3Cr47JrUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY02Avz4vEIxC_uwCY0x0Ix7I2Y4AK
	64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxV
	W8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8
	Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMx
	C20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAF
	wI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4
	v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IUOT7K3UUUUU==

For the upcoming 'define the _ddebug descriptor in assembly', we need
all the descriptors in a translation unit to have distinct
names (because asm does not understand C scope). The easiest way to
achieve that is as usual with an extra level of macros, passing the
identifier to use to the innermost macro, generating it via __UNIQUE_ID
or something.

However, instead of repeating that exercise for dynamic_pr_debug,
dynamic_dev_dbg, dynamic_netdev_dbg and dynamic_hex_dump separately, we
can use the similarity between their bodies to implement them via a
common macro, _dynamic_func_call - though the hex_dump case requires
a slight variant, since print_hex_dump does not take the _ddebug
descriptor. We'll also get to use that variant elsewhere (btrfs).

Acked-by: Jason Baron <jbaron@akamai.com>
Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
---
 include/linux/dynamic_debug.h | 72 +++++++++++++++++++++--------------
 1 file changed, 43 insertions(+), 29 deletions(-)

diff --git a/include/linux/dynamic_debug.h b/include/linux/dynamic_debug.h
index 6a002b789d51..b9424097df37 100644
--- a/include/linux/dynamic_debug.h
+++ b/include/linux/dynamic_debug.h
@@ -112,40 +112,54 @@ void __dynamic_netdev_dbg(struct _ddebug *descriptor,
 
 #endif
 
-#define dynamic_pr_debug(fmt, ...)				\
-do {								\
-	DEFINE_DYNAMIC_DEBUG_METADATA(descriptor, fmt);		\
-	if (DYNAMIC_DEBUG_BRANCH(descriptor))			\
-		__dynamic_pr_debug(&descriptor, pr_fmt(fmt),	\
-				   ##__VA_ARGS__);		\
+#define __dynamic_func_call(id, fmt, func, ...) do {	\
+	DEFINE_DYNAMIC_DEBUG_METADATA(id, fmt);		\
+	if (DYNAMIC_DEBUG_BRANCH(id))			\
+		func(&id, ##__VA_ARGS__);		\
 } while (0)
 
-#define dynamic_dev_dbg(dev, fmt, ...)				\
-do {								\
-	DEFINE_DYNAMIC_DEBUG_METADATA(descriptor, fmt);		\
-	if (DYNAMIC_DEBUG_BRANCH(descriptor))			\
-		__dynamic_dev_dbg(&descriptor, dev, fmt,	\
-				  ##__VA_ARGS__);		\
+#define __dynamic_func_call_no_desc(id, fmt, func, ...) do {	\
+	DEFINE_DYNAMIC_DEBUG_METADATA(id, fmt);			\
+	if (DYNAMIC_DEBUG_BRANCH(id))				\
+		func(__VA_ARGS__);				\
 } while (0)
 
-#define dynamic_netdev_dbg(dev, fmt, ...)			\
-do {								\
-	DEFINE_DYNAMIC_DEBUG_METADATA(descriptor, fmt);		\
-	if (DYNAMIC_DEBUG_BRANCH(descriptor))			\
-		__dynamic_netdev_dbg(&descriptor, dev, fmt,	\
-				     ##__VA_ARGS__);		\
-} while (0)
+/*
+ * "Factory macro" for generating a call to func, guarded by a
+ * DYNAMIC_DEBUG_BRANCH. The dynamic debug decriptor will be
+ * initialized using the fmt argument. The function will be called with
+ * the address of the descriptor as first argument, followed by all
+ * the varargs. Note that fmt is repeated in invocations of this
+ * macro.
+ */
+#define _dynamic_func_call(fmt, func, ...)				\
+	__dynamic_func_call(__UNIQUE_ID(ddebug), fmt, func, ##__VA_ARGS__)
+/*
+ * A variant that does the same, except that the descriptor is not
+ * passed as the first argument to the function; it is only called
+ * with precisely the macro's varargs.
+ */
+#define _dynamic_func_call_no_desc(fmt, func, ...)	\
+	__dynamic_func_call_no_desc(__UNIQUE_ID(ddebug), fmt, func, ##__VA_ARGS__)
 
-#define dynamic_hex_dump(prefix_str, prefix_type, rowsize,	\
-			 groupsize, buf, len, ascii)		\
-do {								\
-	DEFINE_DYNAMIC_DEBUG_METADATA(descriptor,		\
-		__builtin_constant_p(prefix_str) ? prefix_str : "hexdump");\
-	if (DYNAMIC_DEBUG_BRANCH(descriptor))			\
-		print_hex_dump(KERN_DEBUG, prefix_str,		\
-			       prefix_type, rowsize, groupsize,	\
-			       buf, len, ascii);		\
-} while (0)
+#define dynamic_pr_debug(fmt, ...)				\
+	_dynamic_func_call(fmt,	__dynamic_pr_debug,		\
+			   pr_fmt(fmt), ##__VA_ARGS__)
+
+#define dynamic_dev_dbg(dev, fmt, ...)				\
+	_dynamic_func_call(fmt,__dynamic_dev_dbg, 		\
+			   dev, fmt, ##__VA_ARGS__)
+
+#define dynamic_netdev_dbg(dev, fmt, ...)			\
+	_dynamic_func_call(fmt, __dynamic_netdev_dbg,		\
+			   dev, fmt, ##__VA_ARGS__)
+
+#define dynamic_hex_dump(prefix_str, prefix_type, rowsize,		\
+			 groupsize, buf, len, ascii)			\
+	_dynamic_func_call_no_desc(__builtin_constant_p(prefix_str) ? prefix_str : "hexdump", \
+				   print_hex_dump,			\
+				   KERN_DEBUG, prefix_str, prefix_type,	\
+				   rowsize, groupsize, buf, len, ascii)
 
 #else
 
-- 
2.19.1.6.gbde171bbf5
