Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:53:20 -0000
Received: from icoremail.net (unknown [209.85.215.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+YpleVb8FJoAQ--.31472S3;
	Fri, 09 Nov 2018 22:09:49 +0800 (CST)
Received: from mail-pg1-f182.google.com (unknown [209.85.215.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTUkoleVbmuIiAA--.6385S3;
	Fri, 09 Nov 2018 22:09:44 +0800 (CST)
Received: by mail-pg1-f182.google.com with SMTP id f8-v6so899250pgq.5
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 06:09:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:sender:precedence:list-id;
        bh=CeyDokjeBoM1iBQx2lwUehkDM2n30POHwGMAjqOIvIc=;
        b=VCdC47zD6ZimiQIPPpMNTJdiOy/P/cSACihCO7RJxOHus00wZMsKVzxancgeKuK2rZ
         XoSL4ArBjVlbHVwYy7/sq3pIARnadkOHJvwNX/8lutZ8PaAkK6oYHumsuwGG2U+RlbQm
         Rhw1vMIsm9E62Gx3V1o6o47ErHuGjTaAUJONR8M38F477m6bYiqoBjnvhWntB91ltzPK
         GES9UNPCLV7SdjGkHRjBwnpD90KFv9l/c9zGvbuGy9XqaAcPWwLT8JFJYRNImlYdItSo
         OiuNAO1Sb0FvEu9xt7zpavx8Hiq2mXwHoXRfdrMqjkRgIK1T5TU52ZPLLZc+xAVLZ5T0
         Y+uw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIHTHwAgIamBlG3d9o3e4iVKvksuQoPTIwn+Nrv2UmjWtCJc8uN
	qCfxYsnJ/KWP0CFco08UHVTYrcnldi29yCVDqcRMgT/9neqCbC5sHg==
X-Received: by 2002:a63:1d10:: with SMTP id d16-v6mr7365057pgd.228.1541772584474;
        Fri, 09 Nov 2018 06:09:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp244901pjt;
        Fri, 9 Nov 2018 06:09:43 -0800 (PST)
X-Google-Smtp-Source: AJdET5fZqQW1Z02KGBNJ/MOa8YFbJYTeOYtzHdEl++kqnsz5gFqLP0i21WwzPVRWEHUMMYs4lG+x
X-Received: by 2002:a62:7f8c:: with SMTP id a134-v6mr9387499pfd.22.1541772583758;
        Fri, 09 Nov 2018 06:09:43 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541772583; cv=none;
        d=google.com; s=arc-20160816;
        b=Nm1II2igD/Yb5Yvb+8XB+dE2JV9wFTM7KMQD/FbLkrLcEpgXgW2qtyqpMG2ll4/wn1
         rSuy4/IEoH3n3yW3qOaxRHV0L3Y7eM/f7vmYsz0hfwybvzOkn4Si+bAGfm2JSu28uBvN
         gtwzHwPgqNyP5a3uiLZzFHM+yopMemmudXMzvJVD2R1onUbJU7e9B48KtV97b9k2E9IE
         0XmsMu8erYsQAf/4O+9+nW8YbqhZJ+++RRasJ4/N1hTM986UIjMtZD0f7O4uIQawxeCi
         TuSGCsW+lXwvks20MBJBh7F2SlM0mWACd3aWJcdz28jXWmQOQL/sRZtGqAXRFMqO5kFl
         P3mQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from;
        bh=CeyDokjeBoM1iBQx2lwUehkDM2n30POHwGMAjqOIvIc=;
        b=V9LolstGiUfgvE1Hei6a8fPCtnXU6BgyIlohoVvSJ7zlrzmkuWtvTSkPgbGKsHrZUH
         x1phxv/Xm2Sm4dHu27j7EQTjhkdqnQ2oNdUWiR2ZuNvhI4zzz00GBuNID6g4rtBOGaAJ
         T4KpSkAV8/U7XNyFb5zbjOxlsEtbb2JzP/g4TXV9ulWl/DzyogJA3xiOHKsm/aLy5rSC
         NMVLVHuzxK3NIpLhoAQis5llZ1EGuOG2eYaezlOmmu4Fb4R79Y20qefn2HHVKbhPFgWA
         l74BUqSRLM7f3m6jGWUykiPaHnn6qBNvRoLwvFKk6vbBePb/uUuLoOjYCl8sc4P47veI
         UNRA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d37-v6si7572116plb.167.2018.11.09.06.09.07;
        Fri, 09 Nov 2018 06:09:43 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728560AbeKIXss (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 18:48:48 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:48883 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727793AbeKIXsr (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 18:48:47 -0500
Received: from DGGEMS404-HUB.china.huawei.com (unknown [172.30.72.59])
        by Forcepoint Email with ESMTP id DFF389775CB52;
        Fri,  9 Nov 2018 22:07:55 +0800 (CST)
Received: from localhost.localdomain (10.67.212.132) by
 DGGEMS404-HUB.china.huawei.com (10.3.19.204) with Microsoft SMTP Server id
 14.3.408.0; Fri, 9 Nov 2018 22:07:46 +0800
From: Huazhong Tan <tanhuazhong@huawei.com>
To: <davem@davemloft.net>
CC: <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <salil.mehta@huawei.com>, <yisen.zhuang@huawei.com>,
        <linuxarm@huawei.com>
Subject: [Patch net-next 07/11] net: hns3: stop napi polling when HNS3_NIC_STATE_DOWN is set
Date: Fri, 9 Nov 2018 22:07:52 +0800
Message-ID: <1541772476-41478-8-git-send-email-tanhuazhong@huawei.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1541772476-41478-1-git-send-email-tanhuazhong@huawei.com>
References: <1541772476-41478-1-git-send-email-tanhuazhong@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.67.212.132]
X-CFilter-Loop: Reflected
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTUkoleVbmuIiAA--.6385S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJF4fGFyDWryxKrW7XryDAwb_yoW5Xr4Upr
	W5J3y7JFW8Xr4IgF1fJFWkXF43AayI93y7Ka43Gw1fuas0yr45WF1FyryjyF13urZYgr17
	uw4DArWxua43ArDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW5XwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUCVW8JbIYCTnIWIevJa73UjIFyTuYvjxUqwiS
	DUUUU

When calling napi_disable during reset down process, if NAPIF_STATE_MISSED
is set, napi_complete will call __napi_schedule to do the polling again.
So this patch uses HNS3_NIC_STATE_DOWN to ensure the polling is not
scheduled again.

Also, when napi_complete returns true, it means polling is scheduled
again, it is not neccssary to enable the interrupt.

Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
---
 drivers/net/ethernet/hisilicon/hns3/hns3_enet.c | 22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c b/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
index a42c8e5..0cd397c 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
@@ -415,9 +415,6 @@ static void hns3_nic_net_down(struct net_device *netdev)
 	const struct hnae3_ae_ops *ops;
 	int i;
 
-	if (test_and_set_bit(HNS3_NIC_STATE_DOWN, &priv->state))
-		return;
-
 	/* disable vectors */
 	for (i = 0; i < priv->vector_num; i++)
 		hns3_vector_disable(&priv->tqp_vector[i]);
@@ -439,6 +436,11 @@ static void hns3_nic_net_down(struct net_device *netdev)
 
 static int hns3_nic_net_stop(struct net_device *netdev)
 {
+	struct hns3_nic_priv *priv = netdev_priv(netdev);
+
+	if (test_and_set_bit(HNS3_NIC_STATE_DOWN, &priv->state))
+		return 0;
+
 	netif_tx_stop_all_queues(netdev);
 	netif_carrier_off(netdev);
 
@@ -2699,6 +2701,7 @@ static void hns3_update_new_int_gl(struct hns3_enet_tqp_vector *tqp_vector)
 
 static int hns3_nic_common_poll(struct napi_struct *napi, int budget)
 {
+	struct hns3_nic_priv *priv = netdev_priv(napi->dev);
 	struct hns3_enet_ring *ring;
 	int rx_pkt_total = 0;
 
@@ -2707,6 +2710,11 @@ static int hns3_nic_common_poll(struct napi_struct *napi, int budget)
 	bool clean_complete = true;
 	int rx_budget;
 
+	if (unlikely(test_bit(HNS3_NIC_STATE_DOWN, &priv->state))) {
+		napi_complete(napi);
+		return 0;
+	}
+
 	/* Since the actual Tx work is minimal, we can give the Tx a larger
 	 * budget and be more aggressive about cleaning up the Tx descriptors.
 	 */
@@ -2731,9 +2739,11 @@ static int hns3_nic_common_poll(struct napi_struct *napi, int budget)
 	if (!clean_complete)
 		return budget;
 
-	napi_complete(napi);
-	hns3_update_new_int_gl(tqp_vector);
-	hns3_mask_vector_irq(tqp_vector, 1);
+	if (likely(!test_bit(HNS3_NIC_STATE_DOWN, &priv->state)) &&
+	    napi_complete(napi)) {
+		hns3_update_new_int_gl(tqp_vector);
+		hns3_mask_vector_irq(tqp_vector, 1);
+	}
 
 	return rx_pkt_total;
 }
-- 
2.7.4
