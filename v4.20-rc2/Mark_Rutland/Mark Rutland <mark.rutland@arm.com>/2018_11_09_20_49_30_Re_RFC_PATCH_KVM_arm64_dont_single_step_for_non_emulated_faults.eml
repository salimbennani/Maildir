Return-Path: <kvm-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:52:48 -0000
Received: from icoremail.net (unknown [209.85.210.181])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH3p+guVbwdpnAQ--.31351S3;
	Fri, 09 Nov 2018 20:50:07 +0800 (CST)
Received: from mail-pf1-f181.google.com (unknown [209.85.210.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3Uz98guVb_KYiAA--.5750S3;
	Fri, 09 Nov 2018 20:50:04 +0800 (CST)
Received: by mail-pf1-f181.google.com with SMTP id u13-v6so900121pfm.4
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 04:50:04 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent:sender:precedence:list-id;
        bh=YCWf1GyyFcogGVTfi140locupgFY8pvb8db9earHYXw=;
        b=rzGZc4U9SucrIWDW3CcMADlKQMKwgJTfTTd4G5FivH3iRQWyY4xXwcitBz/H5MEUhK
         ZRLoDujEbexXb6X7kCMke208IMJTeulq6uACvRu+H7zmBu26AzMvwSZjLUkvg52dezNn
         ttYSTZDXqybvu5sojQC6974C4udOTV+Gdp21Od/RjJpXYmZMa8fnZVx+Pk+VeY+FZmCP
         RjUhIx29QmDnDUCNpEARCo3m4fQmYQYlx2Sxo1harb1BqkNQNQ0yQZSOEa/1BWXYgWNk
         IG1gqySQL9fR/vn4cldc1vNDeaAa/uLkHCqGD7PPanAh44vurXJaD4Bc3a0Lfcv7qgBY
         OxrA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJPOzJ8EbPyyu5mF/Nw/ZH97PQL1foQSa0v3Y8hlcyu+ah479oI
	ZoeJyozF3bovFyAUEsnXnjmMP2JqmdWuzZEPxxjSJvLyPapZLPnDcg==
X-Received: by 2002:a63:5816:: with SMTP id m22-v6mr7217288pgb.332.1541767804110;
        Fri, 09 Nov 2018 04:50:04 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp158991pjt;
        Fri, 9 Nov 2018 04:50:03 -0800 (PST)
X-Google-Smtp-Source: AJdET5cp9vVx2Md5ZnHWJgrSbLx9HwfBFJtFSXwJpGBzRJm1oj/8CKQssY2leU/hPGudacT3tzNZ
X-Received: by 2002:a63:4d:: with SMTP id 74mr7487218pga.248.1541767802977;
        Fri, 09 Nov 2018 04:50:02 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541767802; cv=none;
        d=google.com; s=arc-20160816;
        b=vbxl1pf0vtdlsrrhgtQKGv5sO6SRfVTpTnUgZIifma9Pl7DzZUWyp3w3oulX3odq02
         LQ7QRlX1qjcPJvqQQFql5HqDRF8m32FibuVnHBlozjI3fbpSv4sykEE9VR9NkUQ3LDS/
         OVJSvWfZQUMY28nZyGzN1mmLuL3CQ1T1tOSa5xD1OyQtW4f515ZL2LNAC/RaJ1u9aAjo
         97hsRLxUA6kVL/u5I4xCNRWM2kYQdNYPlvUZHfMUqb9kSDxlSZrE3WSlXfKjXbuEzhbc
         9+0l9bIuGOb1X0gGNPIUVgkxK96UelD5thIwdlAts93poF8eMFhFP0ztau3rSBQIKLoz
         a4Ug==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-transfer-encoding:content-disposition:mime-version
         :references:message-id:subject:cc:to:from:date;
        bh=YCWf1GyyFcogGVTfi140locupgFY8pvb8db9earHYXw=;
        b=Cg+3Tq4K4Kxo2h9gMs2CQebftK7kTPYIPNwIzijSoO9qwGbGhUI31QYJoNtePS78/4
         Mfgo/LT0v3OjR/inPGZqyr9VXkxWrqaHTUhxDuFXhnUm1Yw8ew52BwVWV9VZ7cZrYwcz
         t+07obvdjfLKZu8G4zQTPcv/HrhMESV4PqbofYZ345aIUyhJ0IjFX2FNItknrslIGDet
         Ex3GdkITsgwV09f2ICrqiBp8fTq+0NGzkLMZBg+AUwyOwGA8FQKr/tZ0fYDDzfkLNPqW
         FgKK3/l2FsMH0x08mS5GuOY7Vb96TqFrlJyDQGLFJ0Yx3Y4BWUe6zIyAMhkgW7mI879o
         g0Ww==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id bc11-v6si7579554plb.120.2018.11.09.04.49.40;
        Fri, 09 Nov 2018 04:50:02 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727830AbeKIWaD (ORCPT <rfc822;fanshuming2011@gmail.com>
        + 99 others); Fri, 9 Nov 2018 17:30:03 -0500
Received: from foss.arm.com ([217.140.101.70]:59738 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727802AbeKIWaD (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 9 Nov 2018 17:30:03 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 7249080D;
        Fri,  9 Nov 2018 04:49:34 -0800 (PST)
Received: from lakrids.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id A57143F718;
        Fri,  9 Nov 2018 04:49:32 -0800 (PST)
Date: Fri, 9 Nov 2018 12:49:30 +0000
From: Mark Rutland <mark.rutland@arm.com>
To: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
Cc: Peter Maydell <peter.maydell@linaro.org>,
        kvm-devel <kvm@vger.kernel.org>,
        Marc Zyngier <marc.zyngier@arm.com>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        open list <linux-kernel@vger.kernel.org>,
        Christoffer Dall <christoffer.dall@linaro.org>,
        kvmarm@lists.cs.columbia.edu,
        arm-mail-list <linux-arm-kernel@lists.infradead.org>
Subject: Re: [RFC PATCH] KVM: arm64: don't single-step for non-emulated faults
Message-ID: <20181109124930.axelmyohmrcb63b4@lakrids.cambridge.arm.com>
References: <20181107171031.22573-1-alex.bennee@linaro.org>
 <20181107180120.urnvkcrkh46ytsdb@lakrids.cambridge.arm.com>
 <20181107180829.sex54bxhd5wyqvan@lakrids.cambridge.arm.com>
 <87r2fv68us.fsf@linaro.org>
 <20181108135122.llmfsel32dbe2q7o@lakrids.cambridge.arm.com>
 <87pnvf63u2.fsf@linaro.org>
 <CAFEAcA9v+XvAJBWpDMvEQPeJ7ALM15Yz5KY+wfGPmLG2a8yPRQ@mail.gmail.com>
 <20181109115644.f4qjqnv2kogoke42@lakrids.cambridge.arm.com>
 <87lg625th2.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <87lg625th2.fsf@linaro.org>
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-CM-TRANSID: AQAAfwB3Uz98guVb_KYiAA--.5750S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKF4rZF4xXFWruw4rAFWfGrg_yoW7Gryfpr
	WDKF13Kr4kJFs3Cr92vr4ftrySyrZ3XFZxJry5tw15Cwn0gF1Svr4UKrWY9F97Zws3Wr10
	vF4UKF9rG3ZrZa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6ryUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6rWUJVWrZr1UYxBIdaVFxhVjvjDU0xZFpf9x07bByIUU
	UUUU=

On Fri, Nov 09, 2018 at 12:24:41PM +0000, Alex Bennée wrote:
> Mark Rutland <mark.rutland@arm.com> writes:
> > On Thu, Nov 08, 2018 at 02:38:43PM +0000, Peter Maydell wrote:
> >> On 8 November 2018 at 14:28, Alex Bennée <alex.bennee@linaro.org> wrote:
> >> >
> >> > Mark Rutland <mark.rutland@arm.com> writes:
> >> >> One problem is that I couldn't spot when we advance the PC for an MMIO
> >> >> trap. I presume we do that in the kernel, *after* the MMIO trap, but I
> >> >> can't see where that happens.
> >> >
> >> > Nope it gets done before during decode_hsr in mmio.c:
> >> >
> >> >         /*
> >> >          * The MMIO instruction is emulated and should not be re-executed
> >> >          * in the guest.
> >> >          */
> >> >         kvm_skip_instr(vcpu, kvm_vcpu_trap_il_is32bit(vcpu));
> >>
> >> I think that this attempt to do the PC-advance early is
> >> probably an underlying problem that is not helping the
> >> code structure here.
> >>
> >> An enhancement that's been floated previously is that the
> >> MMIO emulation in userspace should be able to report back
> >> to KVM "nope, that access should generate a guest synchronous
> >> external abort (with ESR_EL1.EA = 0/1)".
> >> If we have that, then we definitely need to not advance the
> >> PC until after userspace has done the emulation and told
> >> us whether the memory access succeeded or not...
> >
> > Yup.
> >
> > I think that we absolutely want to do all the CPU state advancement (PC,
> > SS bit, etc) at the point we apply the effects of the instruction. Not
> > before we emulate the instruction, and not higher/lower in the call
> > stack.
> 
> There is certainly an argument to abstract some of the advancement logic
> so we can make debug related decisions in one place. I don't know how
> much churn we would need to get there.

I'm not saying anything about *decisions*. I'm saying that we can make
the state consistent by advancing the singlestep state in the same way
that HW does, at the instant it advances the PC.

i.e. do that in kvm_skip_instr(), as I've done in my local tree.

That mirrors the HW, and we don't need to special-case any handling for
emulated vs non-emulated instructions.

> Currently most of the guest debug decisions are made in one place as we
> head into the guest run. Generally I don't think the emulation code want
> to know or care about the SS bit or what debug is currently happening
> although I guess the presence of the SS bit could be used to decide on
> exactly what exit type you are going to do - back to guest or out to
> user space. Currently kvm_arm_handle_step_debug on cares about host
> directed debug but we could expand it to raise the appropriate guest
> exception if required.

So long as we consistently advance the singlestep state when we emulate
an instruction, we shouldn't need kvm_arm_handle_step_debug() at all. If
we emulate an instruction, we'll return to the guest with PSTATE.SS
clear, and the HW will generate the exception for us.

This is *vastly* simpler to reason about.

I have local patches which I intend to post shortly.

> > We have a big problem in that guest-directed singlestep and
> > host-directed singlestep don't compose, and given that host-directed
> > singlestep doesn't work reliably today I'd be tempted to rip that out
> > until we've fixed guest-directed singlestep.
> 
> Getting host and guest debug to run at the same time is tricky given we
> end up subverting guest state when the host debug is in control. It did
> make my head spin when I worked on it originally which led to the
> acceptance that guest debug couldn't be expected to work transparently
> while host directed debug was in effect. If we can support it without
> adding complexity then that would be great but it's a pretty niche use
> case.

At the very least we need to define whether the kernel or userspace is
responsible for this. If we say it's userspace's responsibility to
virtualize this when it takes control of guest debug, but QEMU doesn't
do so, that's fine by me.

> I'd be loathed to rip out the current single step support as it does
> actually work pretty well - it's just corner cases with emulated MMIO
> and first step that are failing. Last I looked these were cases x86
> didn't even get right and no one has called to remove it's single step
> support AFAIK.
> 
> > We should have a story for how host-directed debug is handled
> > transparently from the PoV of a guest using guest-directed debug.
> 
> What's the use case for this apart from having a cleaner abstraction?

Providing the architecturally mandated behaviour to the guest.

> Do users really spend time running multiple gdbs at different levels
> in the stack?

It's not just about GDB. Things like kprobes, live patching, etc in a
guest may use singlestep, and this may be *critical* to the correct
operation of a given guest.

People *will* want to debug such features under a hypervisor. I know
that I personally want to be able to do so.

In general, a debugger shouldn't silently corrupt guest state or
behaviour, as KVM_GUESTDBG_SINGLESTEP behaviour effectively does today.

Thanks,
Mark.
