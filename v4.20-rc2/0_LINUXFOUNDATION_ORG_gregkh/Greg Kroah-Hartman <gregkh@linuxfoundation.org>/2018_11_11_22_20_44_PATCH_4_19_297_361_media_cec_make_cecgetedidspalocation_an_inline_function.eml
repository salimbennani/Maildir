Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:45:18 -0000
Received: from icoremail.net (unknown [209.85.215.174])
	by mail-app2 (Coremail) with SMTP id by_KCgCHv+SwwOhbvct4AQ--.36201S3;
	Mon, 12 Nov 2018 07:52:16 +0800 (CST)
Received: from mail-pg1-f174.google.com (unknown [209.85.215.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHKkauwOhbc7ouAA--.1021S3;
	Mon, 12 Nov 2018 07:52:15 +0800 (CST)
Received: by mail-pg1-f174.google.com with SMTP id w7so3184410pgp.13
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:52:15 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=6yagmMV0rFTykduiG39sq7Sglp3YDzxtBRSbdg1BroM=;
        b=WHul5TRw70NsSz4LLKapEqO5Z9Xko2dr0OK5MICGJ7BNAVUgxqpinQBY5BD/zwkfBJ
         GDIU/oAAMTWtYmoO+FLamNl5uplGffi8A2TwN97eQy+YTKYpPjGU7mDjQYBVy0FONA3E
         +YW/pKcpwpMr/M2KEF41UJq8yOGpki3cKN7RU5CvSL5jdAlGaX0OlQJhwLFjijE/MjLi
         7P+WqudF5LJjJ/bhcctE3wX37DrhtZ+Jv0eyWeCFCAVkCRSdkjn0LG49AS4gG7yP78Ct
         oFgNvKKbQlVZCHDk7g3Khf5VVp/p/+IwRCWxpN/+ztWlX8y9rNmTCv5sAGT3o7mUOR0Z
         1MXQ==
X-Gm-Message-State: AGRZ1gJ1Y5ktn5jLbu4ezWskqAAKibAvZ075eCLzpuQFT7xwbyRUOgAk
	ihCGudhYpMwZOAdtNrewQLgj0YAqk7nXz+Z4BCmiSFf4hci+88Y=
X-Received: by 2002:a63:4044:: with SMTP id n65mr15032301pga.90.1541980334754;
        Sun, 11 Nov 2018 15:52:14 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2577239pjt;
        Sun, 11 Nov 2018 15:52:13 -0800 (PST)
X-Google-Smtp-Source: AJdET5cWnC0mk38Zfy3XaiRPCu7jvtpBOMLwlB9ZMMNHTOupbHC+GIf4nL06CaPYfZD1dXeqs3zz
X-Received: by 2002:a62:4896:: with SMTP id q22-v6mr18078047pfi.248.1541980333773;
        Sun, 11 Nov 2018 15:52:13 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541980333; cv=none;
        d=google.com; s=arc-20160816;
        b=TJLjmqkmx4o5iJCbaGKelVi7ZvUW9+U9Zx+q5lE0K6A0T/dqsN0eoslx2Q+HmytjS3
         0GqFP9RsYT/PDQO/GGe1TbhPy5XIxJjCJ87RxfqANuI4bA1jfK8AQvkE68uBMbmPYf2C
         ahzm+z2r8CYNN1QVWbOwwZ4QzdIRtZhSSt32aTqOYB6qoOHZbf4R14Y6dlkGXVuroB61
         Xr8oyy4XbfmGsRrTZTV3C4WyTK6RE4sMMfiEhSRxDeFQOYWIXRyPH5Pv+L7pAciJUFpI
         jGZdQyvk3+vSzlerrFxT4WR5/qbzAcoGQddIMRJR9hBhsNqArgss0GIIVKKs54sGWwPL
         1N4A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=6yagmMV0rFTykduiG39sq7Sglp3YDzxtBRSbdg1BroM=;
        b=kGW3l5vWynAalwUxKjkrjvap4xOqEFPjcWDjTFlA4c2SJCDu+k4rZFnJMLEhicc03b
         NY4/fGp92sJaMk3qCaExG4rz6X3j9T8Mpm0+Dr2i1MwTFuBn7OxBqUfxrpbevTWt5BOx
         FWhMnXVymb4pCyqxea4aCJPx0ordH4xsMPaIZEr242Wvw8IENHCKxhnPLe3FYvEpYYLu
         LRtWevqkSafHCdemv5c6A03sM0e+dRuWg47mArlSj144Wzbx/Et+2pRAQO8Aok2w9HQm
         HgSIE3ipdnsDBcCFiZhNgRgG8Rb/BDuHW7gZN/nQXoxIXp8cpvFdM9dh4wqFNCtEiv+d
         ij0Q==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=idnWWZFh;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id u128-v6si18300550pfc.145.2018.11.11.15.51.59;
        Sun, 11 Nov 2018 15:52:13 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732855AbeKLISa (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:18:30 -0500
Received: from mail.kernel.org ([198.145.29.99]:37584 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732829AbeKLIS3 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:18:29 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 4A96E223C6;
        Sun, 11 Nov 2018 22:28:33 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975313;
        bh=dJWBRphxZntlzYvmDmOy3G+5oNn7fbhqbgpbiAdKWuE=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=idnWWZFhou/JL9OBK7TX4KjfNDAaP8ZXfWGeQYV0Gk325m3mQ228eOFl29rxXZ4pu
         OZS3Z0r2GGDns180z+hUmRH4wuJAUIYTKPfY6lPdlwgYTCVmyoZbaYWtOgFVdYOQrg
         I8EUD64oBgz4eyhSeG6f1jMjERUl8+5xIsT+1Wds=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Hans Verkuil <hans.verkuil@cisco.com>,
        Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Subject: [PATCH 4.19 297/361] media: cec: make cec_get_edid_spa_location() an inline function
Date: Sun, 11 Nov 2018 14:20:44 -0800
Message-Id: <20181111221657.178750719@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221619.915519183@linuxfoundation.org>
References: <20181111221619.915519183@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHKkauwOhbc7ouAA--.1021S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWw4DJFyUKF1kZF1UKF17ZFb_yoW7Jr4fpr
	sxJr13KrWjgw1Ivr9xAw1rtFyrGw1xKFy7J39xWr95Jry3Arn3u39FkryjgFyxtF97uF1q
	vFW5Xry2krsrA3DanT9S1TB71UUUUU7qnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCY
	IxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVjvjDU0xZFpf9x07bL
	xRgUUUUU=

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Hans Verkuil <hans.verkuil@cisco.com>

commit b915bf575d5b7774d0f22d57d6c143e07dcaade2 upstream.

This function is needed by both V4L2 and CEC, so move this to
cec.h as a static inline since there are no obvious shared
modules between the two subsystems.

This patch, together with the following ones, fixes a
dependency bug: if CEC_CORE is disabled, then building adv7604
(and other HDMI receivers) will fail because an essential
function is now stubbed out.

Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
Cc: <stable@vger.kernel.org>      # for v4.17 and up
Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/media/cec/cec-edid.c |   60 ------------------------------------
 include/media/cec.h          |   70 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 70 insertions(+), 60 deletions(-)

--- a/drivers/media/cec/cec-edid.c
+++ b/drivers/media/cec/cec-edid.c
@@ -10,66 +10,6 @@
 #include <linux/types.h>
 #include <media/cec.h>
 
-/*
- * This EDID is expected to be a CEA-861 compliant, which means that there are
- * at least two blocks and one or more of the extensions blocks are CEA-861
- * blocks.
- *
- * The returned location is guaranteed to be < size - 1.
- */
-static unsigned int cec_get_edid_spa_location(const u8 *edid, unsigned int size)
-{
-	unsigned int blocks = size / 128;
-	unsigned int block;
-	u8 d;
-
-	/* Sanity check: at least 2 blocks and a multiple of the block size */
-	if (blocks < 2 || size % 128)
-		return 0;
-
-	/*
-	 * If there are fewer extension blocks than the size, then update
-	 * 'blocks'. It is allowed to have more extension blocks than the size,
-	 * since some hardware can only read e.g. 256 bytes of the EDID, even
-	 * though more blocks are present. The first CEA-861 extension block
-	 * should normally be in block 1 anyway.
-	 */
-	if (edid[0x7e] + 1 < blocks)
-		blocks = edid[0x7e] + 1;
-
-	for (block = 1; block < blocks; block++) {
-		unsigned int offset = block * 128;
-
-		/* Skip any non-CEA-861 extension blocks */
-		if (edid[offset] != 0x02 || edid[offset + 1] != 0x03)
-			continue;
-
-		/* search Vendor Specific Data Block (tag 3) */
-		d = edid[offset + 2] & 0x7f;
-		/* Check if there are Data Blocks */
-		if (d <= 4)
-			continue;
-		if (d > 4) {
-			unsigned int i = offset + 4;
-			unsigned int end = offset + d;
-
-			/* Note: 'end' is always < 'size' */
-			do {
-				u8 tag = edid[i] >> 5;
-				u8 len = edid[i] & 0x1f;
-
-				if (tag == 3 && len >= 5 && i + len <= end &&
-				    edid[i + 1] == 0x03 &&
-				    edid[i + 2] == 0x0c &&
-				    edid[i + 3] == 0x00)
-					return i + 4;
-				i += len + 1;
-			} while (i < end);
-		}
-	}
-	return 0;
-}
-
 u16 cec_get_edid_phys_addr(const u8 *edid, unsigned int size,
 			   unsigned int *offset)
 {
--- a/include/media/cec.h
+++ b/include/media/cec.h
@@ -461,4 +461,74 @@ static inline void cec_phys_addr_invalid
 	cec_s_phys_addr(adap, CEC_PHYS_ADDR_INVALID, false);
 }
 
+/**
+ * cec_get_edid_spa_location() - find location of the Source Physical Address
+ *
+ * @edid: the EDID
+ * @size: the size of the EDID
+ *
+ * This EDID is expected to be a CEA-861 compliant, which means that there are
+ * at least two blocks and one or more of the extensions blocks are CEA-861
+ * blocks.
+ *
+ * The returned location is guaranteed to be <= size-2.
+ *
+ * This is an inline function since it is used by both CEC and V4L2.
+ * Ideally this would go in a module shared by both, but it is overkill to do
+ * that for just a single function.
+ */
+static inline unsigned int cec_get_edid_spa_location(const u8 *edid,
+						     unsigned int size)
+{
+	unsigned int blocks = size / 128;
+	unsigned int block;
+	u8 d;
+
+	/* Sanity check: at least 2 blocks and a multiple of the block size */
+	if (blocks < 2 || size % 128)
+		return 0;
+
+	/*
+	 * If there are fewer extension blocks than the size, then update
+	 * 'blocks'. It is allowed to have more extension blocks than the size,
+	 * since some hardware can only read e.g. 256 bytes of the EDID, even
+	 * though more blocks are present. The first CEA-861 extension block
+	 * should normally be in block 1 anyway.
+	 */
+	if (edid[0x7e] + 1 < blocks)
+		blocks = edid[0x7e] + 1;
+
+	for (block = 1; block < blocks; block++) {
+		unsigned int offset = block * 128;
+
+		/* Skip any non-CEA-861 extension blocks */
+		if (edid[offset] != 0x02 || edid[offset + 1] != 0x03)
+			continue;
+
+		/* search Vendor Specific Data Block (tag 3) */
+		d = edid[offset + 2] & 0x7f;
+		/* Check if there are Data Blocks */
+		if (d <= 4)
+			continue;
+		if (d > 4) {
+			unsigned int i = offset + 4;
+			unsigned int end = offset + d;
+
+			/* Note: 'end' is always < 'size' */
+			do {
+				u8 tag = edid[i] >> 5;
+				u8 len = edid[i] & 0x1f;
+
+				if (tag == 3 && len >= 5 && i + len <= end &&
+				    edid[i + 1] == 0x03 &&
+				    edid[i + 2] == 0x0c &&
+				    edid[i + 3] == 0x00)
+					return i + 4;
+				i += len + 1;
+			} while (i < end);
+		}
+	}
+	return 0;
+}
+
 #endif /* _MEDIA_CEC_H */

