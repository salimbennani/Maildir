Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:42:49 -0000
Received: from icoremail.net (unknown [209.85.214.176])
	by mail-app2 (Coremail) with SMTP id by_KCgD3__spruhbWWx4AQ--.36467S3;
	Mon, 12 Nov 2018 06:33:14 +0800 (CST)
Received: from mail-pl1-f176.google.com (unknown [209.85.214.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX7zonruhb2owuAA--.6318S3;
	Mon, 12 Nov 2018 06:33:11 +0800 (CST)
Received: by mail-pl1-f176.google.com with SMTP id p6-v6so3355218pll.4
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 14:33:11 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=Kky2QWIDcSpg91R2x88T8EdaZUAkfqe4l+FAUOrbPiA=;
        b=Ol3FOc4dlAT0cjzAlCJxHp+uz4/B5pdUGcXzwsvRwpflhQBkq1dADuJ84tUSYrqtY+
         rld6oL5Air41oNv4uwzLOrr6NxYqQ2a9UYwXbUFE8yl+4xtT+pglQ8ziVV2s3RZM2JE3
         WYAhh7Pgys129GaNmX8RB/S7Otf05bljjUy9Xh6eZ8To86yCLn8V9Cw4pmCMY3ahEqqO
         SAdCJyAvJpn7+ioVAO8W9zfScxIKz3Co0y2ljOlC+bjisUD1/VkN4PJBydSL0nX5PYjm
         sxpHp0UgiMGQGdU71qZH6Bko1g7QCg9fqqkJ1WhcKtSQFYPwIOeoCATw1YkWPDjpw+jh
         D6KA==
X-Gm-Message-State: AGRZ1gKCT8DNTIFQmoqClEXkPcYUif+xBH20FPbEG7nqj5j3RmPJxl/1
	s5IEIlyS2v1rJDZSMiocdNmlIar93lH2x76tnvLuW2u/06Auf2Q=
X-Received: by 2002:a17:902:887:: with SMTP id 7-v6mr9747367pll.283.1541975590847;
        Sun, 11 Nov 2018 14:33:10 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2524781pjt;
        Sun, 11 Nov 2018 14:33:10 -0800 (PST)
X-Google-Smtp-Source: AJdET5ebYKc6wmNH25DjIcRChTzzVru8JyZ/AWYUu4IsGoB9XJ2LP86iZimCb0CKJ/6lr8WvmUf/
X-Received: by 2002:a63:7e5b:: with SMTP id o27mr15245808pgn.214.1541975590031;
        Sun, 11 Nov 2018 14:33:10 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541975590; cv=none;
        d=google.com; s=arc-20160816;
        b=D+jqVH6fCn8C3ITU2qfI2W0BOfDdCxgIKHtTb81M8AV9yoDjEcjmUIHGLA//65lcKo
         2eF3WbbWIAfl0Q8nnIs/tkolB7wc4UINB26/Nc8f5DBWjazsnyBA6CbFDJgFCHWprKEk
         YDWvuq7J8YRqi4O0IbqeAm8a5r8lecu1qi7SE3TB0sc0PSFP8VsJJGoCYh9UC+fMX2XN
         UtaJuWx6L6/3RVwbikb7mcovBEf+JFzynYnSeyk5irPph7jSfuMEIANdKly4SqgwgBrA
         9SK24WcrsLyAPrsw38hpkfOIrBxSB/5Kr09orwIJONPx++r2Er+i/D8v/OMSIopf1lAe
         VbFA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=Kky2QWIDcSpg91R2x88T8EdaZUAkfqe4l+FAUOrbPiA=;
        b=ozjMMSDtp7StCR0sxgc1r852pRIbN/bThfZF4ZCHNcGliW3szvjB2b3oKWl0AYnJEP
         1EWkTuovmsn0sFF9PWaeZw1S6wCL6jcdcD1T5RgUsNTVeufJ6Byy3HIeMiUxiqoYpusq
         7IZevL++14OadEgzo/EHMf9TfM0otIkKX/gpJ3hU2xLJu/g78dfgqrIoOKU3HSUitW7U
         e7d3FZG4FKD5u8+0Q6MT2WptXr67sl8HDbSUONbsx/gVAsBZtih6d6pfdmdRqCVIQf/c
         LuH9zuBU34Is65pwN6JtIOXkf8aXqRQKV5I2JFItxDMYaa3JAfQDCDUdb66g8oGD8zLG
         XRiQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=nSB2nFCZ;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m3-v6si15905205pld.435.2018.11.11.14.32.55;
        Sun, 11 Nov 2018 14:33:10 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390832AbeKLIWr (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:22:47 -0500
Received: from mail.kernel.org ([198.145.29.99]:54352 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2403841AbeKLIWq (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:22:46 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id A4E1022353;
        Sun, 11 Nov 2018 22:32:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975568;
        bh=6w4aKS/s/TBeLRIrE+1322nL9/ny+ZOt3sEU/d16VaU=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=nSB2nFCZ8IzdSGaLIHF8VbmBlKLluA5qhF78RkGZI/z5iatfBsSISzBVZmpsLymLZ
         zMRNWoMK444kc2pgbG32X/hyQSiSjF4lTm3hpzbupO+3oTw5KXPbhppaLPk/Ml1IDh
         rVQ5jCRTSiUYVLg0YkJgqHT+T0rYfnRcjIlz7OW0=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Vijay Immanuel <vijayi@attalasystems.com>,
        Doug Ledford <dledford@redhat.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.14 107/222] IB/rxe: fix for duplicate request processing and ack psns
Date: Sun, 11 Nov 2018 14:23:24 -0800
Message-Id: <20181111221657.411739735@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221647.665769131@linuxfoundation.org>
References: <20181111221647.665769131@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX7zonruhb2owuAA--.6318S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXw4kXF1xGF1fZrWDAr15CFg_yoWrGr45pr
	WfCan8Krs7XF1UCrs7Xa4aqrs3CF92yFW7XFZrtayfAF15AryFvrn3Cry7W3yDAF95Zr47
	Kws8Jr1DGF4UAF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW3MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IU5x9
	N3UUUUU==

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Vijay Immanuel <vijayi@attalasystems.com>

[ Upstream commit b97db58557f4aa6d9903f8e1deea6b3d1ed0ba43 ]

Don't reset the resp opcode for a replayed read response.
The resp opcode could be in the middle of a write or send
sequence, when the duplicate read request was received.
An example sequence is as follows:
- Receive read request for 12KB PSN 20. Transmit read response
  first, middle and last with PSNs 20,21,22.
- Receive write first PSN 23.
  At this point the resp psn is 24 and resp opcode is write first.
- The sender notices that PSN 20 is dropped and retransmits.
  Receive read request for 12KB PSN 20. Transmit read response
  first, middle and last with PSNs 20,21,22. The resp opcode is
  set to -1, the resp psn remains 24.
- Receive write first PSN 23. This is processed by duplicate_request().
  The resp opcode remains -1 and resp psn remains 24.
- Receive write middle PSN 24. check_op_seq() reports a missing
  first error since the resp opcode is -1.

When sending an ack for a duplicate send or write request,
use the psn of the previous ack sent. Do not use the psn
of a read response for the ack.
An example sequence is as follows:
- Receive write PSN 30. Transmit ACK for PSN 30.
- Receive read request 4KB PSN 31. Transmit read response with
  PSN 31. The resp psn is now 32.
- The sender notices that PSN 30 is dropped and retransmits.
  Receive write PSN 30. duplicate_request() sends an ACK with
  PSN 31. That is incorrect since PSN 31 was a read request.

Signed-off-by: Vijay Immanuel <vijayi@attalasystems.com>
Signed-off-by: Doug Ledford <dledford@redhat.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/infiniband/sw/rxe/rxe_resp.c  |    8 ++++++--
 drivers/infiniband/sw/rxe/rxe_verbs.h |    2 ++
 2 files changed, 8 insertions(+), 2 deletions(-)

--- a/drivers/infiniband/sw/rxe/rxe_resp.c
+++ b/drivers/infiniband/sw/rxe/rxe_resp.c
@@ -683,6 +683,7 @@ static enum resp_states read_reply(struc
 		rxe_advance_resp_resource(qp);
 
 		res->type		= RXE_READ_MASK;
+		res->replay		= 0;
 
 		res->read.va		= qp->resp.va;
 		res->read.va_org	= qp->resp.va;
@@ -753,7 +754,8 @@ static enum resp_states read_reply(struc
 		state = RESPST_DONE;
 	} else {
 		qp->resp.res = NULL;
-		qp->resp.opcode = -1;
+		if (!res->replay)
+			qp->resp.opcode = -1;
 		if (psn_compare(res->cur_psn, qp->resp.psn) >= 0)
 			qp->resp.psn = res->cur_psn;
 		state = RESPST_CLEANUP;
@@ -815,6 +817,7 @@ static enum resp_states execute(struct r
 
 	/* next expected psn, read handles this separately */
 	qp->resp.psn = (pkt->psn + 1) & BTH_PSN_MASK;
+	qp->resp.ack_psn = qp->resp.psn;
 
 	qp->resp.opcode = pkt->opcode;
 	qp->resp.status = IB_WC_SUCCESS;
@@ -1071,7 +1074,7 @@ static enum resp_states duplicate_reques
 					  struct rxe_pkt_info *pkt)
 {
 	enum resp_states rc;
-	u32 prev_psn = (qp->resp.psn - 1) & BTH_PSN_MASK;
+	u32 prev_psn = (qp->resp.ack_psn - 1) & BTH_PSN_MASK;
 
 	if (pkt->mask & RXE_SEND_MASK ||
 	    pkt->mask & RXE_WRITE_MASK) {
@@ -1114,6 +1117,7 @@ static enum resp_states duplicate_reques
 			res->state = (pkt->psn == res->first_psn) ?
 					rdatm_res_state_new :
 					rdatm_res_state_replay;
+			res->replay = 1;
 
 			/* Reset the resource, except length. */
 			res->read.va_org = iova;
--- a/drivers/infiniband/sw/rxe/rxe_verbs.h
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.h
@@ -173,6 +173,7 @@ enum rdatm_res_state {
 
 struct resp_res {
 	int			type;
+	int			replay;
 	u32			first_psn;
 	u32			last_psn;
 	u32			cur_psn;
@@ -197,6 +198,7 @@ struct rxe_resp_info {
 	enum rxe_qp_state	state;
 	u32			msn;
 	u32			psn;
+	u32			ack_psn;
 	int			opcode;
 	int			drop_msg;
 	int			goto_error;

