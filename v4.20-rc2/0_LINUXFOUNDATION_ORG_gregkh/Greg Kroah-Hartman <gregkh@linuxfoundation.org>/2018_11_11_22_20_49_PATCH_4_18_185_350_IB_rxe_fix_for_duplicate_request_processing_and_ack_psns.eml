Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:44:32 -0000
Received: from icoremail.net (unknown [209.85.215.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH8Ieu+hbV654AQ--.36388S3;
	Mon, 12 Nov 2018 07:28:30 +0800 (CST)
Received: from mail-pg1-f177.google.com (unknown [209.85.215.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD33Ukbu+hbL6wuAA--.8009S3;
	Mon, 12 Nov 2018 07:28:28 +0800 (CST)
Received: by mail-pg1-f177.google.com with SMTP id y4so3169846pgc.12
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:28:28 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=71GD1EpjQmk7Mr8T/ZYY0Y5TksD45WLt47ojycz1M1o=;
        b=X9EToUEGsbHm/jGbsMfEs+Kt9kMbRfaWS8l6bEIps9ewOvaCGRR0caCwoGhIwjQyV3
         O0wyXhkLaZkxBLUb6IPAPNoDn74Il1xtVcRuFFFCKWd7xiznuqcLyQWY9KjWMp6jWmEn
         MEV2zdI94kKbMZaExBUvJr/IM9EpAUaWFy30vxZ5cwApCrkC7uOpNSzSIxvdGoh5BDp8
         EGU7nxKAsUWDHQxrGV3EcvTyqk1xBWY75aFE6go5YcstuS/wQa3yzLLBDhbBnX//UFaU
         Dc4X8xd7uaWwyZrrTH7S8NvNCABIYhlT76MRkFhHa8YDkcqSidhs/4tnaOJ+K8HAuuho
         qsWg==
X-Gm-Message-State: AGRZ1gKTJpNXMJV5L+EEkBAtodjVueoLPOBqXuQdxnSLDGEqfWs4xkVa
	FR+VcT93mGqGl2VhMztCTg8NTAt/kVxITaXGhrwEUZ8Gif469jk=
X-Received: by 2002:a65:64d5:: with SMTP id t21-v6mr15872679pgv.428.1541978907743;
        Sun, 11 Nov 2018 15:28:27 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2561720pjt;
        Sun, 11 Nov 2018 15:28:26 -0800 (PST)
X-Google-Smtp-Source: AJdET5fO4qzSwRCo+VSJlFNi668C3xFWpUNx11uHsp3/gVh6D90JN2VL9YAq+pUkax86GuAe54KL
X-Received: by 2002:aa7:8685:: with SMTP id d5-v6mr17585881pfo.58.1541978906456;
        Sun, 11 Nov 2018 15:28:26 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541978906; cv=none;
        d=google.com; s=arc-20160816;
        b=sfaOcKu5/F0hhcPBjDf5b+0hPi70S0E623cMUKZ+LW+O2q/XaNHKgdkueSfmYofkZp
         SJ6s8+YJB9v+PSIWlcOxEdfyOIphoJ2oxFLB0UmDSLPCPyMj/0Ch/OLLsY0oUgiGxd70
         vamAOWjtky9j9S9lmVtWb5sdPuxSmz4euywc3qIAjKGmvonPSbpJkiP1AdgEd6e1p97L
         5UKG0Gx5d4R5fM509qiKsq3F5iz/nVr/jMxkBRl7nPzwjuvbqk0v6Hb0ispWJ5qbB8UJ
         nsvLOgVVHg7UII6KBfbo2nWXok3oGsrxj2XqqKV8u79fkmTitVivfBC7nFaV45yChieM
         XnPQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=71GD1EpjQmk7Mr8T/ZYY0Y5TksD45WLt47ojycz1M1o=;
        b=WVRxAss81+4J+YEWufhuHEDEHv5rkchEKKPSehyMqFMwDw4H+7Allzn7FJ2cY0RVl0
         O3OKRtViWcPy0XvU2bC22toZp+2XTjf1nVqxD+vLkQpPqWXQAdbS8gVg/n3R2TQVb5MT
         AZ8HBq0dmC23i7NHkVwthOQO63Q4ki8UiXZfMFv2EPAkn3/1gQoRLwbcD+6FznYMbrJ2
         aFYLR6cUhui944yu8CqAfwi18V0PzFFMNjXwpvuU23OrPoH8xYw51S2rfU6B3FAGHBJ9
         7nJqOvc16v9iG1ZLmlzOMoGaHaRXyWDoFocjcwIj0is5AvPeQJSiHFVvbamzhIe0Xye6
         GoWg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=E5YpmhjU;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id a34si14373667pgm.427.2018.11.11.15.28.12;
        Sun, 11 Nov 2018 15:28:26 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388863AbeKLIUe (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:20:34 -0500
Received: from mail.kernel.org ([198.145.29.99]:45614 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2388830AbeKLIUd (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:20:33 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 62880208A3;
        Sun, 11 Nov 2018 22:30:36 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975436;
        bh=8LQsfpjRMNLNzS72P09dp6tGpolgmBJlFFmN5Zlxbhg=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=E5YpmhjUjyJvTS6bynZQbUg0PJIOvbKd50tUBgvV2mdv3Tg8HJKrnCnUKsTWuh95R
         66XpqNdc5/1JI4XAdFC+NqhX4h77uxdBLeYvUcMinECjDTBWjSkbLVsZFjBgtxM29H
         BLRYgajIBp0RypvtzBrANFr56oPhjnOD9T2p/8Uo=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Vijay Immanuel <vijayi@attalasystems.com>,
        Doug Ledford <dledford@redhat.com>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.18 185/350] IB/rxe: fix for duplicate request processing and ack psns
Date: Sun, 11 Nov 2018 14:20:49 -0800
Message-Id: <20181111221715.770326909@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221707.043394111@linuxfoundation.org>
References: <20181111221707.043394111@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD33Ukbu+hbL6wuAA--.8009S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXw4kXF1xGF1fZrWDAr15CFg_yoWrGr45pr
	WfCan8Krs7XF1UCrs7Xa4aqrs5CF92yFW7XFZrtayrAF15AryFvrn3CrWUWw4DAF95Zr47
	Kws8Jr1DGF4UAF7anT9S1TB71UUUUU7qnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBYb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VWfMxkI7II2jI8v
	z4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14
	v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E14v2
	6rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMx
	C20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAF
	wI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4
	v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IU54lk7UUUUU==

4.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Vijay Immanuel <vijayi@attalasystems.com>

[ Upstream commit b97db58557f4aa6d9903f8e1deea6b3d1ed0ba43 ]

Don't reset the resp opcode for a replayed read response.
The resp opcode could be in the middle of a write or send
sequence, when the duplicate read request was received.
An example sequence is as follows:
- Receive read request for 12KB PSN 20. Transmit read response
  first, middle and last with PSNs 20,21,22.
- Receive write first PSN 23.
  At this point the resp psn is 24 and resp opcode is write first.
- The sender notices that PSN 20 is dropped and retransmits.
  Receive read request for 12KB PSN 20. Transmit read response
  first, middle and last with PSNs 20,21,22. The resp opcode is
  set to -1, the resp psn remains 24.
- Receive write first PSN 23. This is processed by duplicate_request().
  The resp opcode remains -1 and resp psn remains 24.
- Receive write middle PSN 24. check_op_seq() reports a missing
  first error since the resp opcode is -1.

When sending an ack for a duplicate send or write request,
use the psn of the previous ack sent. Do not use the psn
of a read response for the ack.
An example sequence is as follows:
- Receive write PSN 30. Transmit ACK for PSN 30.
- Receive read request 4KB PSN 31. Transmit read response with
  PSN 31. The resp psn is now 32.
- The sender notices that PSN 30 is dropped and retransmits.
  Receive write PSN 30. duplicate_request() sends an ACK with
  PSN 31. That is incorrect since PSN 31 was a read request.

Signed-off-by: Vijay Immanuel <vijayi@attalasystems.com>
Signed-off-by: Doug Ledford <dledford@redhat.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/infiniband/sw/rxe/rxe_resp.c  |    8 ++++++--
 drivers/infiniband/sw/rxe/rxe_verbs.h |    2 ++
 2 files changed, 8 insertions(+), 2 deletions(-)

--- a/drivers/infiniband/sw/rxe/rxe_resp.c
+++ b/drivers/infiniband/sw/rxe/rxe_resp.c
@@ -682,6 +682,7 @@ static enum resp_states read_reply(struc
 		rxe_advance_resp_resource(qp);
 
 		res->type		= RXE_READ_MASK;
+		res->replay		= 0;
 
 		res->read.va		= qp->resp.va;
 		res->read.va_org	= qp->resp.va;
@@ -752,7 +753,8 @@ static enum resp_states read_reply(struc
 		state = RESPST_DONE;
 	} else {
 		qp->resp.res = NULL;
-		qp->resp.opcode = -1;
+		if (!res->replay)
+			qp->resp.opcode = -1;
 		if (psn_compare(res->cur_psn, qp->resp.psn) >= 0)
 			qp->resp.psn = res->cur_psn;
 		state = RESPST_CLEANUP;
@@ -814,6 +816,7 @@ static enum resp_states execute(struct r
 
 	/* next expected psn, read handles this separately */
 	qp->resp.psn = (pkt->psn + 1) & BTH_PSN_MASK;
+	qp->resp.ack_psn = qp->resp.psn;
 
 	qp->resp.opcode = pkt->opcode;
 	qp->resp.status = IB_WC_SUCCESS;
@@ -1060,7 +1063,7 @@ static enum resp_states duplicate_reques
 					  struct rxe_pkt_info *pkt)
 {
 	enum resp_states rc;
-	u32 prev_psn = (qp->resp.psn - 1) & BTH_PSN_MASK;
+	u32 prev_psn = (qp->resp.ack_psn - 1) & BTH_PSN_MASK;
 
 	if (pkt->mask & RXE_SEND_MASK ||
 	    pkt->mask & RXE_WRITE_MASK) {
@@ -1103,6 +1106,7 @@ static enum resp_states duplicate_reques
 			res->state = (pkt->psn == res->first_psn) ?
 					rdatm_res_state_new :
 					rdatm_res_state_replay;
+			res->replay = 1;
 
 			/* Reset the resource, except length. */
 			res->read.va_org = iova;
--- a/drivers/infiniband/sw/rxe/rxe_verbs.h
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.h
@@ -171,6 +171,7 @@ enum rdatm_res_state {
 
 struct resp_res {
 	int			type;
+	int			replay;
 	u32			first_psn;
 	u32			last_psn;
 	u32			cur_psn;
@@ -195,6 +196,7 @@ struct rxe_resp_info {
 	enum rxe_qp_state	state;
 	u32			msn;
 	u32			psn;
+	u32			ack_psn;
 	int			opcode;
 	int			drop_msg;
 	int			goto_error;

