Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 12 Nov 2018 00:45:10 -0000
Received: from icoremail.net (unknown [209.85.210.171])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f93tv+hbPch4AQ--.36910S3;
	Mon, 12 Nov 2018 07:49:01 +0800 (CST)
Received: from mail-pf1-f171.google.com (unknown [209.85.210.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHLEjrv+hbo7guAA--.7902S3;
	Mon, 12 Nov 2018 07:48:59 +0800 (CST)
Received: by mail-pf1-f171.google.com with SMTP id e22-v6so3379326pfn.8
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 15:48:59 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=7HrJxcCtwvhD52h+vzOJzcDmMBZnkhDjBNg9x+p5+gc=;
        b=a5UDv4cYpiwPQcJ5Z6nFwHy+yCaMcGuA25H+33Y+5CMnSpMWNDdH0es2eZk3rPvBzt
         Cfe8a4HuGCy+UAxN7N2NuYtDmgPrN8+kKomKspSoGEoDMvE80Oqeg+kSDGG450W4tyYD
         fuCRPxegePymFa5xWYysqe7HlWNWFXD+WsUzwgf7O01XqA/ycxDxnjLke5RCYWw+1/uJ
         MeOq023FArWPROfVSACts+IXlx5VC8QUEBti83566z8Rrg26QP09ZbEEp2F31HxicHj/
         +32WunyVMbHsW7L5u5/HxfAEg6vSSdoMBaYztYq+XLGEWipe/phUGANGmYHZAM4Bejjn
         Fgvw==
X-Gm-Message-State: AGRZ1gJbnECHEMDRRgYwYp+BaCJ6eqFVB5Qlud2r1JG2vniP0tjgjy4D
	azwzUdN9Vs+bnvH/DUdJGaNgPxx0PlYmsJb/y2/5VXYzAaUpdAM=
X-Received: by 2002:a63:cd17:: with SMTP id i23mr15363091pgg.13.1541980139053;
        Sun, 11 Nov 2018 15:48:59 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp2575199pjt;
        Sun, 11 Nov 2018 15:48:58 -0800 (PST)
X-Google-Smtp-Source: AJdET5caZdwIMg6quyi61QT/sAszK3+6dia6YLDOcM/YlRIeQNxsW19Jkh8HU+tRRgixDgyQG0gZ
X-Received: by 2002:a17:902:5066:: with SMTP id f35-v6mr17453072plh.145.1541980138153;
        Sun, 11 Nov 2018 15:48:58 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541980138; cv=none;
        d=google.com; s=arc-20160816;
        b=jFAjY9ZlTSG21F4giFD4xL3xVBldpE77zOUQcNQMMs7wu0l1uOd5zKaDV0T/5bKmSY
         MvDcWncfRl+prRAoz5VvjvCJil9iLo5pg6g6k7PBKExLgpfb7OfpiWi9B8VPKuQkYyTB
         0JrpDusa/ryyn9mKlkBBhPRwYdVg0zi42jSDXEH230S2iJafFSbPHGllAzLVDiHA5/uY
         NUVHKWPkJSadv+Zx6BMZXKc55OEiDjBYPWsSVVRSpMq5grUKNGW06VMBR3BMUH1wQAmy
         14cRgJTrTwwDckEWnNTOStURgc8wwemAIydHtdTejCH/dFBXXQxWt/xTpj0pD07LL7CF
         UYFw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=7HrJxcCtwvhD52h+vzOJzcDmMBZnkhDjBNg9x+p5+gc=;
        b=D6OMnOUvL0Wd5JVG4NLagX7W/OVkqkRpe+OHIeAJ4sxM9bnzytcj7jfl2hmVu4rwHO
         h6hVFGVH+hfjI3ITJcY+VEveytF+54sdqfASAzZsjvnbExXdlQ3io7nJJzfaQj8Kj9DD
         u5BqVVWtMvtyS5kL3G+X2o6aJ3ipImtVEO+QD53buM+U5iE6rJ4BKMJ8a7D3kuyU9Lxa
         fp9n13rU6wpzM6y+OOQwtoBVQlE2zmhzWEoORyz9TdJhLRX2GOscu3qGpSf4JUBaF4La
         9Zasu6z9d7qlYhFMBG38aPa4xbWiQOnkHZtkpbZnhs6cF9hGWfCM8Z+1tSalAm6pZohm
         r+Pg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=AALeqw8P;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z2si14954496pgs.267.2018.11.11.15.48.43;
        Sun, 11 Nov 2018 15:48:58 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733099AbeKLISn (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Mon, 12 Nov 2018 03:18:43 -0500
Received: from mail.kernel.org ([198.145.29.99]:38130 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1733070AbeKLISm (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 12 Nov 2018 03:18:42 -0500
Received: from localhost (unknown [206.108.79.134])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 5A07921508;
        Sun, 11 Nov 2018 22:28:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541975326;
        bh=cN0wSZxstLfEOKx1EFausJa3RJkM0U+vew/d2orEHEg=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=AALeqw8PCKaxFEHOtQPf8rjZN4Xxh8oGRff53GGNOZWPQ2bdMvHLFnCvtevdg/5+E
         8aFFKcEkQG3p+V8qnxV/KVI4wi4jHq94Ua4we7szO0U4UCJRbabyAO09LPxDQWSB5e
         HJOYWf+m+6hmZFEaZCQc1/wmhtP9gD28bAfRpKeY=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Jeff Mahoney <jeffm@suse.com>,
        David Sterba <dsterba@suse.com>
Subject: [PATCH 4.19 335/361] btrfs: keep trim from interfering with transaction commits
Date: Sun, 11 Nov 2018 14:21:22 -0800
Message-Id: <20181111221700.234209394@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181111221619.915519183@linuxfoundation.org>
References: <20181111221619.915519183@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHLEjrv+hbo7guAA--.7902S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxur1xtFWDtw43KF4xXr15CFg_yoWrCr18pr
	45CF13tr4kJ34xAr1kJw48ZFWSkw4kJay5Jr9rtFZ3Zay5G3sYgryIya4j9Fyvy395Jr1U
	Zr4j93sxG3WUC37anT9S1TB71UUUUU7qnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_uwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCY
	IxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v2
	6r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2
	Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bL
	byZUUUUU=

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Jeff Mahoney <jeffm@suse.com>

commit fee7acc361314df6561208c2d3c0882d663dd537 upstream.

Commit 499f377f49f08 (btrfs: iterate over unused chunk space in FITRIM)
fixed free space trimming, but introduced latency when it was running.
This is due to it pinning the transaction using both a incremented
refcount and holding the commit root sem for the duration of a single
trim operation.

This was to ensure safety but it's unnecessary.  We already hold the the
chunk mutex so we know that the chunk we're using can't be allocated
while we're trimming it.

In order to check against chunks allocated already in this transaction,
we need to check the pending chunks list.  To to that safely without
joining the transaction (or attaching than then having to commit it) we
need to ensure that the dev root's commit root doesn't change underneath
us and the pending chunk lists stays around until we're done with it.

We can ensure the former by holding the commit root sem and the latter
by pinning the transaction.  We do this now, but the critical section
covers the trim operation itself and we don't need to do that.

This patch moves the pinning and unpinning logic into helpers and unpins
the transaction after performing the search and check for pending
chunks.

Limiting the critical section of the transaction pinning improves the
latency substantially on slower storage (e.g. image files over NFS).

Fixes: 499f377f49f08 ("btrfs: iterate over unused chunk space in FITRIM")
CC: stable@vger.kernel.org # 4.4+
Signed-off-by: Jeff Mahoney <jeffm@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   25 +++++++++++++++++--------
 1 file changed, 17 insertions(+), 8 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -10772,14 +10772,16 @@ int btrfs_error_unpin_extent_range(struc
  * We don't want a transaction for this since the discard may take a
  * substantial amount of time.  We don't require that a transaction be
  * running, but we do need to take a running transaction into account
- * to ensure that we're not discarding chunks that were released in
- * the current transaction.
+ * to ensure that we're not discarding chunks that were released or
+ * allocated in the current transaction.
  *
  * Holding the chunks lock will prevent other threads from allocating
  * or releasing chunks, but it won't prevent a running transaction
  * from committing and releasing the memory that the pending chunks
  * list head uses.  For that, we need to take a reference to the
- * transaction.
+ * transaction and hold the commit root sem.  We only need to hold
+ * it while performing the free space search since we have already
+ * held back allocations.
  */
 static int btrfs_trim_free_extents(struct btrfs_device *device,
 				   u64 minlen, u64 *trimmed)
@@ -10810,9 +10812,13 @@ static int btrfs_trim_free_extents(struc
 
 		ret = mutex_lock_interruptible(&fs_info->chunk_mutex);
 		if (ret)
-			return ret;
+			break;
 
-		down_read(&fs_info->commit_root_sem);
+		ret = down_read_killable(&fs_info->commit_root_sem);
+		if (ret) {
+			mutex_unlock(&fs_info->chunk_mutex);
+			break;
+		}
 
 		spin_lock(&fs_info->trans_lock);
 		trans = fs_info->running_transaction;
@@ -10820,13 +10826,17 @@ static int btrfs_trim_free_extents(struc
 			refcount_inc(&trans->use_count);
 		spin_unlock(&fs_info->trans_lock);
 
+		if (!trans)
+			up_read(&fs_info->commit_root_sem);
+
 		ret = find_free_dev_extent_start(trans, device, minlen, start,
 						 &start, &len);
-		if (trans)
+		if (trans) {
+			up_read(&fs_info->commit_root_sem);
 			btrfs_put_transaction(trans);
+		}
 
 		if (ret) {
-			up_read(&fs_info->commit_root_sem);
 			mutex_unlock(&fs_info->chunk_mutex);
 			if (ret == -ENOSPC)
 				ret = 0;
@@ -10834,7 +10844,6 @@ static int btrfs_trim_free_extents(struc
 		}
 
 		ret = btrfs_issue_discard(device->bdev, start, len, &bytes);
-		up_read(&fs_info->commit_root_sem);
 		mutex_unlock(&fs_info->chunk_mutex);
 
 		if (ret)

