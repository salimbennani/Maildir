Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:53:54 -0000
Received: from icoremail.net (unknown [209.85.215.177])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f7Wgo+Vb66NoAQ--.31764S3;
	Fri, 09 Nov 2018 23:11:30 +0800 (CST)
Received: from mail-pg1-f177.google.com (unknown [209.85.215.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnfztrouVbxhEjAA--.1301S3;
	Fri, 09 Nov 2018 23:06:19 +0800 (CST)
Received: by mail-pg1-f177.google.com with SMTP id w3-v6so947806pgs.11
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 07:06:19 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=TwHBmI7bZuweppxHIGrdACPnHe/062E7Q0ozV541Jqw=;
        b=BPR1vJDmBahSUjfCMI3CgZDn67NXBLNg0qeivgosACmnmNpb5/IBBce/AcE+qD7e5G
         pLDvd194Bh/FNtXHhpLEX9Oc5BSbrbxHKnYpahO3+ws1+Jv/ZYASA6Rsjvxc2gV42i1l
         byn+QO+/jaHriRrE64rrdlp8IL49jhYCJJAYWBeoQOnCf5//5l87hGlbd+509hqcXscZ
         fTS3KHvQRAiI+gz3mrn4zeDOHIZRo1iXOX67l+oSf9qAfQ5oIbfSStN9tFFJqUPn71SQ
         FIpU3zmSCEL2Qdw96SnubtOh8Dt6u8Xs4I+d2XJ8JyhpmPOpA9DWJh8w4F1Kz0dQkyoy
         IeqA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIKgv1aorMhS4P0yuPhWVd7PXz1kaULfcJy/o0yJdMNMeq+oncr
	PnB8s6apoqpqW7Wn3GSv4IUxY1JFOJ7WqWxz5LjgLfEECDdqyHR85g==
X-Received: by 2002:a63:83c1:: with SMTP id h184mr7754117pge.437.1541775979114;
        Fri, 09 Nov 2018 07:06:19 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:8a16:0:0:0:0 with SMTP id w22-v6csp313263pjn;
        Fri, 9 Nov 2018 07:06:17 -0800 (PST)
X-Google-Smtp-Source: AJdET5cVa5kTtMMv/gPaAJIkgiiWOt1sDVi72U8hds33muv8+FrFzj4kLOs2O5iL4m6kubqUJsC/
X-Received: by 2002:a17:902:70c9:: with SMTP id l9-v6mr8827212plt.329.1541775977841;
        Fri, 09 Nov 2018 07:06:17 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541775977; cv=none;
        d=google.com; s=arc-20160816;
        b=LcQUpt9FvRu0lJPfTVDN5YXhHFh7e3GxYtUDCjXy9HznooIfVLj1RgKeWXahgoPKPz
         5IhmROvZGQVnJ2xdeU9TMmnXK7whdlVO00julFVt/JJruICnmIoscXf6kelOlfBAiJ1y
         Jo60s7CE07ci0lAUXS7fhGby2Znu1eDpfRTm4AZiWdAZTkUaOAYjhvYx5fy/8uiFOzzs
         Xcy1UeQ2owaLM+lgO9ouIrR5hXy+FgNJJINqSmfNm27UqNPDX6BDrRuDG6dEjTtGLG3n
         a0kPNOI80ucJtDhCw2YXCwWZlnSh16U4kk8u38KWnonHGMHi1FKuiG6DqhKk9UqqAZPv
         Qv7w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=TwHBmI7bZuweppxHIGrdACPnHe/062E7Q0ozV541Jqw=;
        b=mUQN1rA7vP+GBVXRsaW7N6LyUPUzdd7vyZmUqRFa41demM7Ekvx4nX9rz83szOn/Ed
         ak9MFXx2x77CdGFMHaaIJDlGANYw+2c8dHYvM/hTrbKBG5ZdPRe7AL9HiH0G6pYwpwui
         H40HEMjmLQRhz6IfvhdZYLPMStr6YVzNuw00tMSA85A146l1zBynTNDUr23sEzXFFkwp
         o1QqJIKbXwwAVzEJ6di3K6UEFnGLn/V4KtsFXztTS2VNWltiS8nzn6R+KkKPkrsNjbWI
         lYk6YbgPyHCH3re0FDFr0krjeHPFWqkO2IRtBAOQjMU+2szs4x9oTSsrStkAdavtq81P
         fMUw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l12-v6si7653552pff.126.2018.11.09.07.05.14;
        Fri, 09 Nov 2018 07:06:17 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728300AbeKJApv (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 19:45:51 -0500
Received: from mx2.suse.de ([195.135.220.15]:58982 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728190AbeKJApv (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 19:45:51 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 088A4AC11;
        Fri,  9 Nov 2018 15:04:50 +0000 (UTC)
Date: Sat, 10 Nov 2018 02:06:29 +1100
From: Aleksa Sarai <asarai@suse.de>
To: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Aleksa Sarai <cyphar@cyphar.com>,
        Steven Rostedt <rostedt@goodmis.org>,
        "Naveen N. Rao" <naveen.n.rao@linux.vnet.ibm.com>,
        Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>,
        "David S. Miller" <davem@davemloft.net>,
        Jonathan Corbet <corbet@lwn.net>,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        Shuah Khan <shuah@kernel.org>,
        Alexei Starovoitov <ast@kernel.org>,
        Daniel Borkmann <daniel@iogearbox.net>,
        Brendan Gregg <bgregg@netflix.com>,
        Christian Brauner <christian@brauner.io>,
        netdev@vger.kernel.org, linux-doc@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Josh Poimboeuf <jpoimboe@redhat.com>
Subject: [SPAM] Re: [PATCH v3 1/2] kretprobe: produce sane stack
 traces
Message-ID: <20181109150629.wpedwxsgbftkl3ab@mikami>
References: <20181101204720.6ed3fe37@vmware.local.home>
 <20181102050509.tw3dhvj5urudvtjl@yavin>
 <20181102065932.bdt4pubbrkvql4mp@yavin>
 <20181102091658.1bc979a4@gandalf.local.home>
 <20181103070253.ajrqzs5xu2vf5stu@yavin>
 <20181104115913.74l4yzecisvtt2j5@yavin>
 <20181106171501.59ccabbc@gandalf.local.home>
 <20181108074612.ldy6rozdpsdps6bf@yavin>
 <20181108080448.rggfn4zawi3por23@yavin>
 <20181109161551.6b96bd7d932c71432ac65e83@kernel.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="dlusgdlwys367xnp"
Content-Disposition: inline
In-Reply-To: <20181109161551.6b96bd7d932c71432ac65e83@kernel.org>
User-Agent: NeoMutt/20180716
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnfztrouVbxhEjAA--.1301S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJFykXr1xurWfGr4kAr1rCrg_yoW7GryUpF
	9rK3WfKF4UXF4jvrZFv3WYvF4Fyr4v9347Cr4DGr1ak3Wqvw1fGryIgrW5Za10vryqqa4F
	qF4aqr98Aa9avaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1lnx0Ee4C267I2x7
	xF54xIwI0E7I0Y6sxI4wAS0I0E0xvYzxvE52x082IY62kv0487M2AExVA0xI801c8C04v7
	Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWUJVWUGwAv7VC2z280aV
	AFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI48JMx02cVCv0xWlc7Cj
	xVAKzI0EY4vE52x082I5MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JV
	W5JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq
	3wCYIxAIcVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4
	C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E
	14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIx
	kGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x
	07bczVbUUUUU=


--dlusgdlwys367xnp
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On 2018-11-09, Masami Hiramatsu <mhiramat@kernel.org> wrote:
> > diff --git a/arch/x86/include/asm/ptrace.h b/arch/x86/include/asm/ptrac=
e.h
> > index ee696efec99f..c4dfafd43e11 100644
> > --- a/arch/x86/include/asm/ptrace.h
> > +++ b/arch/x86/include/asm/ptrace.h
> > @@ -172,6 +172,7 @@ static inline unsigned long kernel_stack_pointer(st=
ruct pt_regs *regs)
> >  	return regs->sp;
> >  }
> >  #endif
> > +#define stack_addr(regs) ((unsigned long *) kernel_stack_pointer(regs))
>=20
> No, you should use kernel_stack_pointer(regs) itself instead of stack_add=
r().
>=20
> >=20
> >  #define GET_IP(regs) ((regs)->ip)
> >  #define GET_FP(regs) ((regs)->bp)
> > diff --git a/arch/x86/kernel/kprobes/core.c b/arch/x86/kernel/kprobes/c=
ore.c
> > index b0d1e81c96bb..eb4da885020c 100644
> > --- a/arch/x86/kernel/kprobes/core.c
> > +++ b/arch/x86/kernel/kprobes/core.c
> > @@ -69,8 +69,6 @@
> >  DEFINE_PER_CPU(struct kprobe *, current_kprobe) =3D NULL;
> >  DEFINE_PER_CPU(struct kprobe_ctlblk, kprobe_ctlblk);
> > =20
> > -#define stack_addr(regs) ((unsigned long *)kernel_stack_pointer(regs))
>=20
> I don't like keeping this meaningless macro... this should be replaced wi=
th generic
> kernel_stack_pointer() macro.

Sure. This patch was just an example -- I can remove stack_addr() all
over.

> > -	if (regs)
> > -		save_stack_address(trace, regs->ip, nosched);
> > +	if (regs) {
> > +		/* XXX: Currently broken -- stack_addr(regs) doesn't match entry. */
> > +		addr =3D regs->ip;
>=20
> Since this part is for storing regs->ip as a top of call-stack, this
> seems correct code. Stack unwind will be done next block.

This comment was referring to the usage of stack_addr(). stack_addr()
doesn't give you the right result (it isn't the address of the return
address -- it's slightly wrong). This is the main issue I was having --
am I doing something wrong here?

> > +		//addr =3D ftrace_graph_ret_addr(current, &state.graph_idx, addr, st=
ack_addr(regs));
>=20
> so func graph return trampoline address will be shown only when unwinding=
 stack entries.
> I mean func-graph tracer is not used as an event, so it never kicks stack=
dump.

Just to make sure I understand what you're saying -- func-graph trace
will never actually call __ftrace_stack_trace? Because if it does, then
this code will be necessary (and then I'm a bit confused why the
unwinder has func-graph trace code -- if stack traces are never taken
under func-graph then the code in the unwinder is not necessary)

My reason for commenting this out is because at this point "state" isn't
initialised and thus .graph_idx would not be correctly handled during
unwind (and it's the same reason I commented it out later).

> > +		addr =3D kretprobe_ret_addr(current, addr, stack_addr(regs));
>=20
> But since kretprobe will be an event, which can kick the stackdump.
> BTW, from kretprobe, regs->ip should always be the trampoline handler,=20
> see arch/x86/kernel/kprobes/core.c:772 :-)
> So it must be fixed always.

Right, but kretprobe_ret_addr() is returning the *original* return
address (and we need to do an (addr =3D=3D kretprobe_trampoline)). The
real problem is that stack_addr(regs) isn't the same as it is during
kretprobe setup (but kretprobe_ret_addr() works everywhere else).

> > @@ -1856,6 +1870,41 @@ static int pre_handler_kretprobe(struct kprobe *=
p, struct pt_regs *regs)
> >  }
> >  NOKPROBE_SYMBOL(pre_handler_kretprobe);
> > =20
> > +unsigned long kretprobe_ret_addr(struct task_struct *tsk, unsigned lon=
g ret,
> > +				 unsigned long *retp)
> > +{
> > +	struct kretprobe_instance *ri;
> > +	unsigned long flags =3D 0;
> > +	struct hlist_head *head;
> > +	bool need_lock;
> > +
> > +	if (likely(ret !=3D (unsigned long) &kretprobe_trampoline))
> > +		return ret;
> > +
> > +	need_lock =3D !kretprobe_hash_is_locked(tsk);
> > +	if (WARN_ON(need_lock))
> > +		kretprobe_hash_lock(tsk, &head, &flags);
> > +	else
> > +		head =3D kretprobe_inst_table_head(tsk);
>=20
> This may not work unless this is called from the kretprobe handler contex=
t,
> since if we are out of kretprobe handler context, another CPU can lock the
> hash table and it can be detected by kretprobe_hash_is_locked();.

Yeah, I noticed this as well when writing it (but needed a quick impl
that I could test). I will fix this, thanks!

By is_kretprobe_handler_context() I imagine you are referring to
checking is_kretprobe(current_kprobe())?

> So, we should check we are in the kretprobe handler context if tsk =3D=3D=
 current,
> if not, we definately can lock the hash lock without any warning. This can
> be something like;
>=20
> if (is_kretprobe_handler_context()) {
>   // kretprobe_hash_lock(current =3D=3D tsk) has been locked by caller =
=20
>   if (tsk !=3D current && kretprobe_hash(tsk) !=3D kretprobe_hash(current=
))
>     // the hash of tsk and current can be same.
>     need_lock =3D true;
> } else
>   // we should take a lock for tsk.
>   need_lock =3D true;

--=20
Aleksa Sarai
Senior Software Engineer (Containers)
SUSE Linux GmbH
<https://www.cyphar.com/>

--dlusgdlwys367xnp
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAABCAAdFiEEXzbGxhtUYBJKdfWmnhiqJn3bjbQFAlvlonIACgkQnhiqJn3b
jbSbFQ//SnJ9X96iLygU7suh6KaaaKt6o/NfaDYXPcWMVlPxkktF7hRIVeWllsf3
hfq9/jqfsd84rFUM4hYQPkWfMS5J3kkjjDMpTe+q1Qn7blVxRNg2BqxcfU7dvIxH
QRzMjhxNkqHuvbKRS9+j6JxmH0cvW7rrkA8hzLNGDKGMzE4SHBqJaDc7IO7Y4qyF
Jg53Hm4wIIcZ52bl46eHCsp9enHT3Tb8BOR7bVu/isO2xkYBfh8AHE6lKU2fDSm1
X9NbUcY7Gl9Vfc/317iAZsu6EyDtkj38YxKk/+8b7VFr3m5DiV/1DuXws/WvWhdG
uP8KjrGHaaqaunJuRVcltoBVyc3b/A5aZaXHNV+9BbOmCud9hMEzPrhKkoxx9pa/
qteMUntR5huO6LDnmdhdJMHPqCp1+hVpITKhsxS1bDbNb1XFrdqKLvJxds3pUMjo
dlpCTpfixkUTSghqMsHIpGm5KZvDDHbbpgCIGQtjvnxMz5IapODidznY9++otN2K
ybxkGDeq8e7JU0BSEvWhnP3ty0Cv/q6dJO5KmVXLGFXC3Tcvo6rQajeW9zRk/qYu
ANvpQbc5C/a1XYXmRfyERKEgMMwysLR48oyoxPY2kSzXo/khBLgR0uR84hKblRNh
g0h9MGH0mE94AMPA3Z7RqMBxmYwmlfKOYRBqTyP9TnGlCQ4ubeo=
=JgGw
-----END PGP SIGNATURE-----

--dlusgdlwys367xnp--
