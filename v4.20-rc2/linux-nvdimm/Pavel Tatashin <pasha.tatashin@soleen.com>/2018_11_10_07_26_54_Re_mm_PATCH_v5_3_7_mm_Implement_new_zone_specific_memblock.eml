Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:57:53 -0000
Received: from icoremail.net (unknown [209.85.214.177])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f0HgF+ZbkBNrAQ--.32341S3;
	Sat, 10 Nov 2018 07:27:29 +0800 (CST)
Received: from mail-pl1-f177.google.com (unknown [209.85.214.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnS0fdF+ZbM5ckAA--.2980S3;
	Sat, 10 Nov 2018 07:27:25 +0800 (CST)
Received: by mail-pl1-f177.google.com with SMTP id c13-v6so1585766plz.13
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 15:27:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=m9PAnTOd08pSiQIPc3bviF7/DRAFlnQ3yDM0KRJ7Syo=;
        b=fTtQbSj2M+47BxyXWKIz2qXZSuuhd/qOU22L1Uv5TXxuesUSuNc7cdzDP4C0P3E/QB
         u7q+g+GwqzBvPZFdZC0eKYe7zyVBGCkca17zVQUWsUFK69v8TnpYKwbmSdDm7SyJwNDo
         861TNw266OwZjrDAtA0y2xIeh4dEllyLyLlf8eT00o6QrggVs/El6OscBV2vyxBwq+LW
         xc21hbXBJKUY4PEsFQ0RrBGv5QIDHA/lNJGX9SiMAzZ2eI8YrDR4FE0X64UcWldY59W9
         AbgnvQ2mp3L//EsX+6HCtMwIMkcSRSTKQKyKzaH0f2rvAvwJI6P2m7nF7zag1Uw6FQ+Q
         vAJQ==
X-Gm-Message-State: AGRZ1gLo716QRs7dWuJZ5+JqjfCEA/EAyZcHK1wK4mX9vyXXW3SYQnbY
	Oqv7z4II+K1tml15JpdGj/GMdaXN40WXLLd2G8+Z/L+K1VTcMvsknw==
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr11092051plp.9.1541806044989;
        Fri, 09 Nov 2018 15:27:24 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp509460pjt;
        Fri, 9 Nov 2018 15:27:24 -0800 (PST)
X-Google-Smtp-Source: AJdET5eJSr4+v2nhovem/W4R/RJnPBoBp1+kltSwlHDknaJLEqLpntOdzXlrre+IJrsKIMLCVXxX
X-Received: by 2002:a17:902:4a0c:: with SMTP id w12-v6mr10711989pld.63.1541806044182;
        Fri, 09 Nov 2018 15:27:24 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541806044; cv=none;
        d=google.com; s=arc-20160816;
        b=SP0jDl4nXJ7LIIE+WfZwOd0/ckssIA87Qhf5Hb7ISG5aUY7pz9AEax/ALXv1s6uQ2m
         owlDqe6KzH2XOl5lGEfqEtQVpIsThwpHm/cLNVs94ZL6AlwPCO29Ytynr8/pGAsXh3nR
         GMZPeIwsaLoOA4QOxkjOWPktx2gKgEYO65/KTezLQ2v3QxqxoxJw06EMV2ELZ/6HZr0u
         EqVnjtatv5Db5ugmeX+yLxCLvcf4s1GS+doaqNHkYSveYzCRsvBw51HKqEs3qPHNRBeZ
         5RU3wLlkkhc/TBDjtG8ED6/Q0ObdOnOEWGkT4830hSC7UVXxNjMY0WAQWQmPwfMgyF/q
         gMEA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=m9PAnTOd08pSiQIPc3bviF7/DRAFlnQ3yDM0KRJ7Syo=;
        b=QbZd1dAkV3kUQeIOS4n9OvvNop/sBWnO3mrW/gfsmGXwzu02zkZ47gbRAbgywMVjKW
         0i4/+PxWD9xQFXrQSUbt0vG+eL+mE5+zYQ7uyCeTrf37YcbABsDfZhGu0axIyq4tCH//
         lZu1zP2H0twM0raQzhYXVMv0SEKBo5fP62tcJLIQ+BuDkzTG6pgc8va2MjCq6DKPY2p2
         9BiXVJDuSa1Fa7nCa/pZBD+gpfEOU9NsxY1DR/o6qGkPqbOfS4DsBuJRFlNXqVY0NVhr
         /UMJ2J+t1TtBx7DzKp+cx8cXNknxdH1PTf3gByUkxR1/hfnPmB/uxkDc9LdlncX3P+Qe
         IL1A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@soleen.com header.s=google header.b=IPjHIHNX;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=soleen.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id f91-v6si9658650plf.324.2018.11.09.15.27.09;
        Fri, 09 Nov 2018 15:27:24 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728631AbeKJJJp (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Sat, 10 Nov 2018 04:09:45 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:33715 "EHLO
        mail-qk1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728283AbeKJJJo (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 04:09:44 -0500
Received: by mail-qk1-f195.google.com with SMTP id o89so4642980qko.0
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 15:26:57 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=soleen.com; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=m9PAnTOd08pSiQIPc3bviF7/DRAFlnQ3yDM0KRJ7Syo=;
        b=IPjHIHNXY/knYtykIhU8zUpfubWHNMb5g2aXH27RAX7667/k0Su6u3C0HGJW0GOFtR
         hWb1X8/xSPWiYeOaAHOH0iy92HrODevp6JBx24gcqLuBGtcx086o1BCJMlDsCQ4qHIBQ
         MH/zpDR9XNZ5JFh4dFQeQCRvoyCF8k+z7/jx9Ipbph7lbW7fODfkF/AE4e2NdS71jdYG
         orNq8I3g43mPmHhQxokRq9NfyNwfffuVjwxlG4aBzss5qk+ySlZgL7i4u17a7WILS4LD
         m3uLMThutlWaJFB8ndw0muJcW06oaTRCeN9SCrXU8yjOIyCFd2if3KhAtR5JybFEx1QV
         8VnA==
X-Received: by 2002:a37:a7c3:: with SMTP id q186mr10409917qke.89.1541806017501;
        Fri, 09 Nov 2018 15:26:57 -0800 (PST)
Received: from xakep.localdomain (c-73-69-118-222.hsd1.nh.comcast.net. [73.69.118.222])
        by smtp.gmail.com with ESMTPSA id i65sm6725824qkh.49.2018.11.09.15.26.55
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 09 Nov 2018 15:26:55 -0800 (PST)
Date: Fri, 9 Nov 2018 18:26:54 -0500
From: Pavel Tatashin <pasha.tatashin@soleen.com>
To: Alexander Duyck <alexander.h.duyck@linux.intel.com>
Cc: akpm@linux-foundation.org, linux-mm@kvack.org,
        sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-nvdimm@lists.01.org, davem@davemloft.net,
        pavel.tatashin@microsoft.com, mhocko@suse.com, mingo@kernel.org,
        kirill.shutemov@linux.intel.com, dan.j.williams@intel.com,
        dave.jiang@intel.com, rppt@linux.vnet.ibm.com, willy@infradead.org,
        vbabka@suse.cz, khalid.aziz@oracle.com, ldufour@linux.vnet.ibm.com,
        mgorman@techsingularity.net, yi.z.zhang@linux.intel.com
Subject: Re: [mm PATCH v5 3/7] mm: Implement new zone specific memblock
 iterator
Message-ID: <20181109232654.bi37bdkrqbogbdcx@xakep.localdomain>
References: <154145268025.30046.11742652345962594283.stgit@ahduyck-desk1.jf.intel.com>
 <154145278071.30046.9022571960145979137.stgit@ahduyck-desk1.jf.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <154145278071.30046.9022571960145979137.stgit@ahduyck-desk1.jf.intel.com>
User-Agent: NeoMutt/20180716
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnS0fdF+ZbM5ckAA--.2980S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAF18tr48Jr4xCFyfuryUKFg_yoW5uw13pr
	18G3ZrArs7XrW09ayxX3WjkFykG3yrWF4IqF4UC3sruFW5Gr9agr90kr43WFyDJrZ7tryF
	qa1Fva43Jws8Aa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxE
	wVCI4VWfMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY
	6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwV
	Aq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWU
	JVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrxkI7V
	AKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUONi
	StUUUUU==

> +/**
> + * for_each_free_mem_range_in_zone - iterate through zone specific free
> + * memblock areas
> + * @i: u64 used as loop variable
> + * @zone: zone in which all of the memory blocks reside
> + * @p_start: ptr to phys_addr_t for start address of the range, can be %NULL
> + * @p_end: ptr to phys_addr_t for end address of the range, can be %NULL
> + *
> + * Walks over free (memory && !reserved) areas of memblock in a specific
> + * zone. Available as soon as memblock is initialized.
> + */
> +#define for_each_free_mem_pfn_range_in_zone(i, zone, p_start, p_end)	\
> +	for (i = 0,							\
> +	     __next_mem_pfn_range_in_zone(&i, zone, p_start, p_end);	\
> +	     i != (u64)ULLONG_MAX;					\
> +	     __next_mem_pfn_range_in_zone(&i, zone, p_start, p_end))
> +#endif /* CONFIG_DEFERRED_STRUCT_PAGE_INIT */

Use U64_MAX instead of ULLONG_MAX, and avoid u64 cast. I know other
places in this file use UULONG_MAX with cast, but I think U64_MAX is
better.

> +
>  /**
>   * for_each_free_mem_range - iterate through free memblock areas
>   * @i: u64 used as loop variable
> diff --git a/mm/memblock.c b/mm/memblock.c
> index 7df468c8ebc8..f1d1fbfd1ae7 100644
> --- a/mm/memblock.c
> +++ b/mm/memblock.c
> @@ -1239,6 +1239,69 @@ int __init_memblock memblock_set_node(phys_addr_t base, phys_addr_t size,
>  	return 0;
>  }
>  #endif /* CONFIG_HAVE_MEMBLOCK_NODE_MAP */
> +#ifdef CONFIG_DEFERRED_STRUCT_PAGE_INIT
> +/**
> + * __next_mem_pfn_range_in_zone - iterator for for_each_*_range_in_zone()
> + *
> + * @idx: pointer to u64 loop variable
> + * @zone: zone in which all of the memory blocks reside
> + * @out_start: ptr to ulong for start pfn of the range, can be %NULL
> + * @out_end: ptr to ulong for end pfn of the range, can be %NULL
> + *
> + * This function is meant to be a zone/pfn specific wrapper for the
> + * for_each_mem_range type iterators. Specifically they are used in the
> + * deferred memory init routines and as such we were duplicating much of
> + * this logic throughout the code. So instead of having it in multiple
> + * locations it seemed like it would make more sense to centralize this to
> + * one new iterator that does everything they need.
> + */
> +void __init_memblock
> +__next_mem_pfn_range_in_zone(u64 *idx, struct zone *zone,
> +			     unsigned long *out_spfn, unsigned long *out_epfn)
> +{
> +	int zone_nid = zone_to_nid(zone);
> +	phys_addr_t spa, epa;
> +	int nid;
> +
> +	__next_mem_range(idx, zone_nid, MEMBLOCK_NONE,
> +			 &memblock.memory, &memblock.reserved,
> +			 &spa, &epa, &nid);
> +
> +	while (*idx != ULLONG_MAX) {

Ditto, use U64_MAX

> +		unsigned long epfn = PFN_DOWN(epa);
> +		unsigned long spfn = PFN_UP(spa);
> +
> +		/*
> +		 * Verify the end is at least past the start of the zone and
> +		 * that we have at least one PFN to initialize.
> +		 */
> +		if (zone->zone_start_pfn < epfn && spfn < epfn) {
> +			/* if we went too far just stop searching */
> +			if (zone_end_pfn(zone) <= spfn)
> +				break;

Set *idx = U64_MAX here, then break. This way after we are outside this
while loop idx is always equals to U64_MAX.

> +
> +			if (out_spfn)
> +				*out_spfn = max(zone->zone_start_pfn, spfn);
> +			if (out_epfn)
> +				*out_epfn = min(zone_end_pfn(zone), epfn);

Don't we need to verify after adjustment that out_spfn != out_epfn, so
there is at least one PFN to initialize?

The rest looks good. Once the above is fixed:

Reviewed-by: Pavel Tatashin <pasha.tatashin@soleen.com>

Thank you,
Pasha
