Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:03:08 -0000
Received: from icoremail.net (unknown [209.85.214.174])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f0G_7OZb+GRvAQ--.33645S3;
	Sat, 10 Nov 2018 22:35:43 +0800 (CST)
Received: from mail-pl1-f174.google.com (unknown [209.85.214.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH6EO77OZb2WQnAA--.12126S3;
	Sat, 10 Nov 2018 22:35:39 +0800 (CST)
Received: by mail-pl1-f174.google.com with SMTP id n4-v6so2251944plp.2
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 06:35:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :thread-topic:thread-index:date:message-id:references:in-reply-to
         :accept-language:content-language:spamdiagnosticoutput
         :spamdiagnosticmetadata:content-transfer-encoding:mime-version
         :sender:precedence:list-id;
        bh=/CVdAob5+VycCwLiquD9emZ01zBDuv+4RJ9HmVpRIMY=;
        b=j/e6c/9wEE0dmXlvlfL6B2nLREt3O5v9/TGGdiq6VFHex5FwDv5xIo9EJRAOOFuAU0
         QiJPtMWOmd2e5F3SY/DL0Rk22BL4BAAFfjwD+66MkbP7AqF33xdppvgxSHJPe3p3OtUg
         PAC5XmmlQ8mTrumzdJ/RXhBIyOhpcgZN//8xv2C8EobQYEJaumoA0pM2S4AgNLXgM6ng
         5AL2sBJ1R9711dtkhyadhn0pDKPN+kvqDBM5FaHE/feq1WKCWEXRjb0HIyO5lyu0TIPu
         oPqrdGIGJpvo2Ek95FRXHoq8zTZZlWnieaBQTgE9NDiheDn+21IsmMkDesrz2WZRjSwr
         hKBw==
X-Gm-Message-State: AGRZ1gJgTKb+AEFsBYa0+A/4F+Za54tBcP8sN8qIZKdffZ+rcJvs5d84
	9b+Vcf9x38wEucvB3n55aT8gzTl7Rn0+V3IH2RRg0LvjvNmB2Pc=
X-Received: by 2002:a17:902:166:: with SMTP id 93-v6mr12758748plb.68.1541860539235;
        Sat, 10 Nov 2018 06:35:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1163937pjt;
        Sat, 10 Nov 2018 06:35:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5dgnkKvkZbeKKLVbWeKt6E6eDKzKp0xNefKyFaGJWKRkFaxXYHlzGs/WZfJdvUz0cMjof/H
X-Received: by 2002:a17:902:9f91:: with SMTP id g17-v6mr13137968plq.27.1541860538458;
        Sat, 10 Nov 2018 06:35:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541860538; cv=none;
        d=google.com; s=arc-20160816;
        b=w6PZgR6WDNmBdQY5c+/gmrab7CsFFxjG71kpA0iWzMp6PvMbdWDvjOyfLWxG0V0m2g
         UOqTjvnlpX/Su84dc1gjV2CMIqppPLP1dQLPZTc2JQW0YUBlOpiMS4NOlWJSkMEpJnJb
         UW++kGei5ZOlmMsi3Xtblv8reaKjw8peI4JAkH6LXO4SNaf/SHI7xjOWerozY4nDbKam
         5j5sLJ9rDix1rxCgt/o4VKxu3Pa0sheAmzbEu7T6RuNJJABE0mUfGPmZZjj1kq7ome12
         JyXn91zrsFRdjfciP7ShhxtBbLkfLhiOgr8mVwFqIFTrTOrqYMRO6zTG4NjkGKV/9A/i
         HDWQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:content-transfer-encoding
         :spamdiagnosticmetadata:spamdiagnosticoutput:content-language
         :accept-language:in-reply-to:references:message-id:date:thread-index
         :thread-topic:subject:cc:to:from:dkim-signature;
        bh=/CVdAob5+VycCwLiquD9emZ01zBDuv+4RJ9HmVpRIMY=;
        b=sIoK0bRzdLvUTNkzQO127QbcdtIx5LwaOFvj94QiAWoghdY1ZYbAiHSS4Guyq5eBq7
         3H2GN1sUSFUOQGcQVbxS3BGAvMaOAuKfXwhKgdh7ceiiT8khYsRO3QWI/YOl5jhGHknv
         GYtr2sIN9vSLQa4tMYqB4Q9VhwgSQ8RyYwXI9dGjFetr4Ch4SmXYv+n9kD/k8P6rcb3m
         x09gnm8hj4zgQ61fRb6yvPbmDlH0Nw7vlXvSGpXvto4BDLtBsuB4MbK5MmHutJ/Hix1P
         gCmw+pUuAxI3zk8csxzeiyNKRIs2CM42kTcHyAUlYVdQBwPUICzy8cvt2t5IJaCowiQ/
         NizQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@nxp.com header.s=selector1 header.b=XYY+SyYu;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=nxp.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h5-v6si12100352pfg.226.2018.11.10.06.35.24;
        Sat, 10 Nov 2018 06:35:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727271AbeKKAUG (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sat, 10 Nov 2018 19:20:06 -0500
Received: from mail-eopbgr40073.outbound.protection.outlook.com ([40.107.4.73]:35840
        "EHLO EUR03-DB5-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726334AbeKKAUF (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 19:20:05 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=/CVdAob5+VycCwLiquD9emZ01zBDuv+4RJ9HmVpRIMY=;
 b=XYY+SyYu/+M2QMAfRAKO5RwPopCc7tHkGJTq7W90XjHI2DIrvO/UwS81hyTxhZFskv1XYERiaoTbivdc4E98z95EtePS+QD3jlnmw2JqqX6ecRrnXGMBJBbw0NbpVeDhdB5HaLD8SpXVOivR6zxPND1hg48bI9uaX5FMqtkdPJA=
Received: from AM0PR04MB4211.eurprd04.prod.outlook.com (52.134.126.21) by
 AM0PR04MB4402.eurprd04.prod.outlook.com (52.135.148.20) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1294.30; Sat, 10 Nov 2018 14:34:47 +0000
Received: from AM0PR04MB4211.eurprd04.prod.outlook.com
 ([fe80::797a:f972:9281:6d10]) by AM0PR04MB4211.eurprd04.prod.outlook.com
 ([fe80::797a:f972:9281:6d10%2]) with mapi id 15.20.1294.039; Sat, 10 Nov 2018
 14:34:47 +0000
From: "A.s. Dong" <aisheng.dong@nxp.com>
To: "linux-clk@vger.kernel.org" <linux-clk@vger.kernel.org>
CC: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "sboyd@kernel.org" <sboyd@kernel.org>,
        "mturquette@baylibre.com" <mturquette@baylibre.com>,
        "shawnguo@kernel.org" <shawnguo@kernel.org>,
        Anson Huang <anson.huang@nxp.com>,
        Jacky Bai <ping.bai@nxp.com>, dl-linux-imx <linux-imx@nxp.com>,
        "A.s. Dong" <aisheng.dong@nxp.com>
Subject: [PATCH V5 8/9] clk: imx: implement new clk_hw based APIs
Thread-Topic: [PATCH V5 8/9] clk: imx: implement new clk_hw based APIs
Thread-Index: AQHUeQKHqXu6RNxV2EGuJGWWi6g0mQ==
Date: Sat, 10 Nov 2018 14:34:46 +0000
Message-ID: <1541860165-401-9-git-send-email-aisheng.dong@nxp.com>
References: <1541860165-401-1-git-send-email-aisheng.dong@nxp.com>
In-Reply-To: <1541860165-401-1-git-send-email-aisheng.dong@nxp.com>
Accept-Language: zh-CN, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK0P153CA0032.APCP153.PROD.OUTLOOK.COM
 (2603:1096:203:17::20) To AM0PR04MB4211.eurprd04.prod.outlook.com
 (2603:10a6:208:66::21)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR04MB4402;6:DpJnME1hr3clUGhpww66dq44b0CkwMc+9vWNgHKcqLfCCM4fmvoI6jhF7o+56huIGzFItah8w279r/gXEIoK9xJtDRSer+9MqhLTxxgIgZ9Th6soty/PIc6KnJW4HUDRHtgqK/FDrR6rgIADL2+eSydlAMAiYBvycSFlJZJKYr6xXbdLVmHXTsF2SZJBaWlcKYxgbhp0AHVvOSUlWSb1rNizvRAxiNhrbEFDtBqbkE2NcK5MZLaA+BjgUlItVotLDwse1hh8M8d1UXOibtc24lcioJkcL9DaZEVfwutA8iE8pHZmLrEmx6Pyc/9ffo2w/tGcxh/6nnAQgAJl4FJSdhYVhuThmQKSAwDdY2ibtX+ifVf+emgwmart50wGH0B+9E4KSv5LSqqi1aYD+4mTTB/W2XNMf+vWoUKBZiM7Ugb6ORt0uuknmwlSAQeOcEqbmQ/KuUoYqvaKEccfmHKOVQ==;5:izFYzbd8hPMW4dk+ikZH1ds6WECKj4+KaMY/Y6VwWcy3hE4tb+2yJ9kpmEM16ejsZTFdnq2y37SVSEJ7RnCqjhzEEyCQAlUFKHyQm/nhy0lx/IaPILbtVwADP2OTiCl/sb3asgAhnOZgcGWUQJp6D3bFNvyuTf89wqc1Rt7LlFY=;7:eH7wP+G7sOpDzIn/sKEHVOx723epo88Risj/Haf3ww3own22p8bNL+tAlcePxeKsT7NeXcVCNqcd7/Mr3xZqIYsLryxlpPiKHl2Qbk4MLyQoidx19UehDdn6/bDc6QeLkHpcxZcLSrUStznOnXf5rA==
x-ms-office365-filtering-correlation-id: ad0e47ea-1b1c-4202-1015-08d64719a9c2
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390040)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:AM0PR04MB4402;
x-ms-traffictypediagnostic: AM0PR04MB4402:
x-microsoft-antispam-prvs: <AM0PR04MB4402354A8B7D79F0AA4873C780C70@AM0PR04MB4402.eurprd04.prod.outlook.com>
x-exchange-antispam-report-test: UriScan:(185117386973197);
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(10201501046)(3002001)(3231382)(944501410)(52105095)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(20161123560045)(20161123558120)(20161123562045)(201708071742011)(7699051)(76991095);SRVR:AM0PR04MB4402;BCL:0;PCL:0;RULEID:;SRVR:AM0PR04MB4402;
x-forefront-prvs: 0852EB6797
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(39860400002)(396003)(366004)(346002)(376002)(136003)(199004)(189003)(54534003)(6512007)(478600001)(102836004)(36756003)(14444005)(4326008)(105586002)(256004)(76176011)(97736004)(71200400001)(71190400001)(106356001)(14454004)(386003)(6506007)(52116002)(2351001)(5660300001)(25786009)(5640700003)(2906002)(81166006)(81156014)(66066001)(6436002)(26005)(186003)(6916009)(8676002)(54906003)(8936002)(3846002)(305945005)(486006)(7736002)(6116002)(2900100001)(446003)(11346002)(68736007)(53936002)(476003)(2501003)(99286004)(6486002)(50226002)(2616005)(316002)(86362001);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR04MB4402;H:AM0PR04MB4211.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: nxp.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: b9KuPjyXZvdQScyrhMvrnc5do6mAw/1wLftyHeETSWKpcFs3PaQ5wd5BYSE8acQ2apKfyD0GmLhYjaZ/cAdI6uBqZ4CgL9iC3Ux4NpOZe20Or6ndb3/HqIEPnG5yKLLVl+DOgEVUwkvFTnyxZp1JR401MwpLhUvKj59W+CU86hzMCQIP+fQXQiFcgMmOFd47yLraHwzoNT1/a8ga2DJER22iXu6eNkrCV4QlHtU3yItFmSbXKE6VdWn02ZKzUwXAmddLAbWmMeyzIykY9xdScVOrGm/OIUIocF6pl0c7BLNP1EiPhu3t7T5zKUiLacyPoL5eEE0Wd9ACUIhBAK4V1dl+yEaAbH+lLdRJVlVpjZc=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: ad0e47ea-1b1c-4202-1015-08d64719a9c2
X-MS-Exchange-CrossTenant-originalarrivaltime: 10 Nov 2018 14:34:47.0448
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR04MB4402
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH6EO77OZb2WQnAA--.12126S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3AFy3Kw15Gr45CF1DuFy7GFg_yoW7uw4UpF
	4kG34Y9ayUtF1fuF13tF4DGFn0q3WFkF1Ik343Ca1IyF43J3y5JFWrGFy3Zw45XrWFg343
	AF4agrW8CF4rtrJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmSb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6ry5MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CEj282c2IF4VAI2VCY07xJMI8E67AF67
	kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBI
	daVFxhVjvjDU0xZFpf9x07beVbkUUUUU=

Clock providers are recommended to use the new struct clk_hw based API,
so implement IMX clk_hw based provider helpers functions to the new
approach.

Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>

---
ChangeLog:
v2->v4:
 * no changes
v1->v2:  new patches
---
 drivers/clk/imx/clk.c | 22 ++++++++++++++++++
 drivers/clk/imx/clk.h | 62 +++++++++++++++++++++++++++++++++++++++++++++++=
++++
 2 files changed, 84 insertions(+)

diff --git a/drivers/clk/imx/clk.c b/drivers/clk/imx/clk.c
index 9074e69..1efed86 100644
--- a/drivers/clk/imx/clk.c
+++ b/drivers/clk/imx/clk.c
@@ -18,6 +18,16 @@ void __init imx_check_clocks(struct clk *clks[], unsigne=
d int count)
 			       i, PTR_ERR(clks[i]));
 }
=20
+void imx_check_clk_hws(struct clk_hw *clks[], unsigned int count)
+{
+	unsigned int i;
+
+	for (i =3D 0; i < count; i++)
+		if (IS_ERR(clks[i]))
+			pr_err("i.MX clk %u: register failed with %ld\n",
+			       i, PTR_ERR(clks[i]));
+}
+
 static struct clk * __init imx_obtain_fixed_clock_from_dt(const char *name=
)
 {
 	struct of_phandle_args phandle;
@@ -49,6 +59,18 @@ struct clk * __init imx_obtain_fixed_clock(
 	return clk;
 }
=20
+struct clk_hw * __init imx_obtain_fixed_clk_hw(struct device_node *np,
+					       const char *name)
+{
+	struct clk *clk;
+
+	clk =3D of_clk_get_by_name(np, name);
+	if (IS_ERR(clk))
+		return ERR_PTR(-ENOENT);
+
+	return __clk_get_hw(clk);
+}
+
 /*
  * This fixups the register CCM_CSCMR1 write value.
  * The write/read/divider values of the aclk_podf field
diff --git a/drivers/clk/imx/clk.h b/drivers/clk/imx/clk.h
index 290d4b2..75ad05b 100644
--- a/drivers/clk/imx/clk.h
+++ b/drivers/clk/imx/clk.h
@@ -8,6 +8,7 @@
 extern spinlock_t imx_ccm_lock;
=20
 void imx_check_clocks(struct clk *clks[], unsigned int count);
+void imx_check_clk_hws(struct clk_hw *clks[], unsigned int count);
 void imx_register_uart_clocks(struct clk ** const clks[]);
=20
 extern void imx_cscmr1_fixup(u32 *val);
@@ -54,6 +55,9 @@ struct clk *clk_register_gate2(struct device *dev, const =
char *name,
 struct clk * imx_obtain_fixed_clock(
 			const char *name, unsigned long rate);
=20
+struct clk_hw *imx_obtain_fixed_clk_hw(struct device_node *np,
+				       const char *name);
+
 struct clk *imx_clk_gate_exclusive(const char *name, const char *parent,
 	 void __iomem *reg, u8 shift, u32 exclusive_mask);
=20
@@ -90,6 +94,16 @@ static inline struct clk *imx_clk_fixed(const char *name=
, int rate)
 	return clk_register_fixed_rate(NULL, name, NULL, 0, rate);
 }
=20
+static inline struct clk_hw *imx_clk_hw_fixed(const char *name, int rate)
+{
+	return clk_hw_register_fixed_rate(NULL, name, NULL, 0, rate);
+}
+
+static inline struct clk_hw *imx_get_clk_hw_fixed(const char *name, int ra=
te)
+{
+	return clk_hw_register_fixed_rate(NULL, name, NULL, 0, rate);
+}
+
 static inline struct clk *imx_clk_mux_ldb(const char *name, void __iomem *=
reg,
 			u8 shift, u8 width, const char * const *parents,
 			int num_parents)
@@ -113,6 +127,15 @@ static inline struct clk *imx_clk_divider(const char *=
name, const char *parent,
 			reg, shift, width, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_divider(const char *name,
+						const char *parent,
+						void __iomem *reg, u8 shift,
+						u8 width)
+{
+	return clk_hw_register_divider(NULL, name, parent, CLK_SET_RATE_PARENT,
+				       reg, shift, width, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_divider_flags(const char *name,
 		const char *parent, void __iomem *reg, u8 shift, u8 width,
 		unsigned long flags)
@@ -121,6 +144,15 @@ static inline struct clk *imx_clk_divider_flags(const =
char *name,
 			reg, shift, width, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_divider_flags(const char *name,
+						   const char *parent,
+						   void __iomem *reg, u8 shift,
+						   u8 width, unsigned long flags)
+{
+	return clk_hw_register_divider(NULL, name, parent, flags,
+				       reg, shift, width, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_divider2(const char *name, const char *p=
arent,
 		void __iomem *reg, u8 shift, u8 width)
 {
@@ -143,6 +175,13 @@ static inline struct clk *imx_clk_gate_flags(const cha=
r *name, const char *paren
 			shift, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_gate(const char *name, const char =
*parent,
+					     void __iomem *reg, u8 shift)
+{
+	return clk_hw_register_gate(NULL, name, parent, CLK_SET_RATE_PARENT, reg,
+				    shift, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_gate_dis(const char *name, const char *p=
arent,
 		void __iomem *reg, u8 shift)
 {
@@ -222,6 +261,17 @@ static inline struct clk *imx_clk_mux2(const char *nam=
e, void __iomem *reg,
 			reg, shift, width, 0, &imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_mux2(const char *name, void __iome=
m *reg,
+					     u8 shift, u8 width,
+					     const char * const *parents,
+					     int num_parents)
+{
+	return clk_hw_register_mux(NULL, name, parents, num_parents,
+				   CLK_SET_RATE_NO_REPARENT |
+				   CLK_OPS_PARENT_ENABLE,
+				   reg, shift, width, 0, &imx_ccm_lock);
+}
+
 static inline struct clk *imx_clk_mux_flags(const char *name,
 			void __iomem *reg, u8 shift, u8 width,
 			const char * const *parents, int num_parents,
@@ -232,6 +282,18 @@ static inline struct clk *imx_clk_mux_flags(const char=
 *name,
 			&imx_ccm_lock);
 }
=20
+static inline struct clk_hw *imx_clk_hw_mux_flags(const char *name,
+						  void __iomem *reg, u8 shift,
+						  u8 width,
+						  const char * const *parents,
+						  int num_parents,
+						  unsigned long flags)
+{
+	return clk_hw_register_mux(NULL, name, parents, num_parents,
+				   flags | CLK_SET_RATE_NO_REPARENT,
+				   reg, shift, width, 0, &imx_ccm_lock);
+}
+
 struct clk *imx_clk_cpu(const char *name, const char *parent_name,
 		struct clk *div, struct clk *mux, struct clk *pll,
 		struct clk *step);
--=20
2.7.4
