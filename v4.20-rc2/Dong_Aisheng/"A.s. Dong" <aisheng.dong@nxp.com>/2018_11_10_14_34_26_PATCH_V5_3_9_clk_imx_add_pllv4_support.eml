Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:03:06 -0000
Received: from icoremail.net (unknown [209.85.215.180])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f+2X7OZbUWRvAQ--.33655S3;
	Sat, 10 Nov 2018 22:35:05 +0800 (CST)
Received: from mail-pg1-f180.google.com (unknown [209.85.215.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD32UWT7OZbIGQnAA--.8634S3;
	Sat, 10 Nov 2018 22:35:00 +0800 (CST)
Received: by mail-pg1-f180.google.com with SMTP id w3-v6so2079269pgs.11
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 06:35:00 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :thread-topic:thread-index:date:message-id:references:in-reply-to
         :accept-language:content-language:spamdiagnosticoutput
         :spamdiagnosticmetadata:content-transfer-encoding:mime-version
         :sender:precedence:list-id;
        bh=U0EhitKCGo/9Ctx6Tfyde6/OwLLiZHv+XKCM1xHhD6Q=;
        b=lCljps2U1DlqLgWzJ0lntm2KDMrw/+Dv1r2NBY1Aqbaj3hTpO6v3C4Pi0dp/KPR1dV
         c6tFMSz4WYmDKtGX4JRrQJlweFumRsMNZCQV2KPJrCwZ8du3Ghbmct36g+hI2F42oQUO
         rhGLpADPN8YXLJfoK2GQG+j/q17WJK7NqHFrIapr50J++WKiGMHw0D+LGBPe9BHSjFzQ
         QDZ91s9eL9cPKcLlN9u5pY3VEq2qFp1iEaRmS0jiLE0Nqb53V+5fBAszLfzeaXJYPr5C
         ruvloJc+JMIy8EExzzW+x9j7fNZgeMMV+IRMRRLqhbt1ZfIwtc1KbYnbaZvjjrJn64Pt
         yHXg==
X-Gm-Message-State: AGRZ1gKzc0wsLqs2mjfW+DiRTpIHgdmfdg/I6uH+BkpDHIRveyc1Ej1u
	xOKohWq6EhqwvC87LyN+MYH0m24AY+2oFAo3CScplcHoeO5EPfY=
X-Received: by 2002:a63:5816:: with SMTP id m22-v6mr11015207pgb.332.1541860499547;
        Sat, 10 Nov 2018 06:34:59 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1163361pjt;
        Sat, 10 Nov 2018 06:34:58 -0800 (PST)
X-Google-Smtp-Source: AJdET5dB9qWgXQQQw1PhbkG1vyCqV1dZTBvzudAxbf/wznbJYIg5Z8OzZca9S1GLlYsZ6ub2DwGV
X-Received: by 2002:a17:902:24c:: with SMTP id 70-v6mr9471500plc.120.1541860498575;
        Sat, 10 Nov 2018 06:34:58 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541860498; cv=none;
        d=google.com; s=arc-20160816;
        b=VAUIS8oT5a+HnecVTjA3pQyrAchS+wnqSG+OUsHMrd8wmVR16UozN8Hrlk8/5o9DNA
         n7FatimW0v8ILzlFq4WwjxbySdf76wp3A719y4s1uBONhEtmvq4SA9CSjYWHhEl6ZiaB
         4I+npI7azyHKvKynZEaqE2Mw73UqYn1TTmfIdMbbSTNx4cbve2TfHtM8B5PPSqvjrM4e
         vGZCNG+mmCkfBid7UYceT3ooqLVpZf/X59D1ciKseJ1r1EKG1Hdgpht8wtwYj2avOyAW
         KGShpxLJa4CCb4xAD2hrB5J//cNwaEICwWlDUuQGSkIl/+DNzCGRcEg83jxANj4LUM19
         sRQA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:content-transfer-encoding
         :spamdiagnosticmetadata:spamdiagnosticoutput:content-language
         :accept-language:in-reply-to:references:message-id:date:thread-index
         :thread-topic:subject:cc:to:from:dkim-signature;
        bh=U0EhitKCGo/9Ctx6Tfyde6/OwLLiZHv+XKCM1xHhD6Q=;
        b=pkoz9QGWyPIaP0A50OLh8wwrqtJaNJ2DoVm3xZtNPZ+gwwogATFQiB0Ov82xxRFSeN
         sl8bGlzAHdrM6ZJzAS6CQW7XcDxfSKz0XqcRSdCGO4+suybJjmYScIYLneioJjC0OnZV
         oq3+R2VfSPqnRYsmJiDWO4WAYFTRgUi/fC8T1bI5TB2cMefjFVhNkAKxJrkU8KReChry
         9pvoGbi0EJGLrgi5TqAxT3YoAPB0PC2gx8uNveMgt9IuiAwfDnRKZwzL/USCcxHpmzJB
         9n+G3ZgUWF8RCFpwaRa+z1TrF19SLFzTeF9hhQWfh0VNEUKM8c61QDItSl8trzQh7gAM
         WGgw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@nxp.com header.s=selector1 header.b=rBlWIH4S;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=nxp.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m33si9574940pgl.379.2018.11.10.06.34.43;
        Sat, 10 Nov 2018 06:34:58 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726961AbeKKATn (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sat, 10 Nov 2018 19:19:43 -0500
Received: from mail-eopbgr40048.outbound.protection.outlook.com ([40.107.4.48]:1837
        "EHLO EUR03-DB5-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726334AbeKKATm (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 19:19:42 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=U0EhitKCGo/9Ctx6Tfyde6/OwLLiZHv+XKCM1xHhD6Q=;
 b=rBlWIH4SoapZO0aK1nanWCEcJYJY/94aAjY+G0opHNJFAZWG3Ghspxu2xw5yo7rkBW7pLIpO5qNQWiMGQrgY8zl+2E+26fmZ2E+UrUxTDfblT/XhybIye/LxSgUjxhi+azLvuToSV9euJptEscKi49w9SEksFxzOj0PMZwNUIYI=
Received: from AM0PR04MB4211.eurprd04.prod.outlook.com (52.134.126.21) by
 AM0PR04MB4402.eurprd04.prod.outlook.com (52.135.148.20) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1294.30; Sat, 10 Nov 2018 14:34:26 +0000
Received: from AM0PR04MB4211.eurprd04.prod.outlook.com
 ([fe80::797a:f972:9281:6d10]) by AM0PR04MB4211.eurprd04.prod.outlook.com
 ([fe80::797a:f972:9281:6d10%2]) with mapi id 15.20.1294.039; Sat, 10 Nov 2018
 14:34:26 +0000
From: "A.s. Dong" <aisheng.dong@nxp.com>
To: "linux-clk@vger.kernel.org" <linux-clk@vger.kernel.org>
CC: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "sboyd@kernel.org" <sboyd@kernel.org>,
        "mturquette@baylibre.com" <mturquette@baylibre.com>,
        "shawnguo@kernel.org" <shawnguo@kernel.org>,
        Anson Huang <anson.huang@nxp.com>,
        Jacky Bai <ping.bai@nxp.com>, dl-linux-imx <linux-imx@nxp.com>,
        "A.s. Dong" <aisheng.dong@nxp.com>,
        Stephen Boyd <sboyd@codeaurora.org>
Subject: [PATCH V5 3/9] clk: imx: add pllv4 support
Thread-Topic: [PATCH V5 3/9] clk: imx: add pllv4 support
Thread-Index: AQHUeQJ7Vu92z1oG9UG25W6tIuA27A==
Date: Sat, 10 Nov 2018 14:34:26 +0000
Message-ID: <1541860165-401-4-git-send-email-aisheng.dong@nxp.com>
References: <1541860165-401-1-git-send-email-aisheng.dong@nxp.com>
In-Reply-To: <1541860165-401-1-git-send-email-aisheng.dong@nxp.com>
Accept-Language: zh-CN, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK0P153CA0032.APCP153.PROD.OUTLOOK.COM
 (2603:1096:203:17::20) To AM0PR04MB4211.eurprd04.prod.outlook.com
 (2603:10a6:208:66::21)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR04MB4402;6:QsfVrlqIAa+iLbuSY6NpS0hXIsAwp06j+sw/oOnDbLK9JUAzB5CYt9kVnIXvNeNcbbvO7aOC2D20/rsb+25KQ6/13unFxPIojDIYH8FgEM/qBBUMIHFaNXhstZth1zQCul9NBOjIDhSlXP2NoZpAm6ddZ3WidSC90Uxv6X6beHC8h/oMyIDC7APZfHpYc/XtPYCkkTovGgcqcIrYu03x9BlsSLKZ9TGMqA309O/74dePsZ2A2vlF+D0qCCB4v1H8Ma5sC4Yd65spo8ms+0diS88NxOD5a/fs3jBmfjG+4j+A6fH9k6EFUGiBHIZtxfjDKD0jKTRyz6SBFdHR2O2HLa2IVSOgCLuAk+6sb+IIVfCF5aJFxP0nNVKnS5UwSaLl1/ZBNpC2nG8wehiPxsibyCbhxMepX+uPfxmgLgMMq7xWcVxId06VrUBh9YICx8qwAv8NJtQ827zP2kgSX6MGeA==;5:HHX4pZLBu7SNgAJ5ggDb8gwVl/PazyaiI+MdSOqrGonX0B7F5MsHAP1/pfDOEYT5KyVuTrrDFJjqbyViXMHhebAAz92/oNLzJeumYokd0/G9EPwiXvDagY/I1MfaTa4xcR7LqY4/3TA52KwnL7uD1WsTMpGPgv7rVy8UTJu3C0Q=;7:Hn0AhC8yi6zEIefR89mnR1lXYsthVeQJL0k13D5xzpnovQiRs+eimae9q74QZbCQK6nABWRclIoJlgZLsfOJjhjbLWZuxC1xUMCXm9AibkF4yxYmPt35hOqWEJi8dHTZASo+w+d2j5QigGR9K1B92A==
x-ms-office365-filtering-correlation-id: 1399f85f-a9d9-4783-8f39-08d647199d55
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390040)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:AM0PR04MB4402;
x-ms-traffictypediagnostic: AM0PR04MB4402:
x-microsoft-antispam-prvs: <AM0PR04MB4402EC897786635FD8E4273E80C70@AM0PR04MB4402.eurprd04.prod.outlook.com>
x-exchange-antispam-report-test: UriScan:(185117386973197);
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(10201501046)(3002001)(3231382)(944501410)(52105095)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(20161123560045)(20161123558120)(20161123562045)(201708071742011)(7699051)(76991095);SRVR:AM0PR04MB4402;BCL:0;PCL:0;RULEID:;SRVR:AM0PR04MB4402;
x-forefront-prvs: 0852EB6797
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(39860400002)(396003)(366004)(346002)(376002)(136003)(199004)(189003)(54534003)(6512007)(478600001)(102836004)(36756003)(14444005)(4326008)(105586002)(256004)(76176011)(97736004)(71200400001)(71190400001)(106356001)(14454004)(386003)(6506007)(52116002)(2351001)(5660300001)(25786009)(5640700003)(2906002)(81166006)(81156014)(66066001)(6436002)(26005)(186003)(575784001)(6916009)(8676002)(54906003)(8936002)(3846002)(305945005)(486006)(7736002)(6116002)(2900100001)(446003)(11346002)(68736007)(53936002)(476003)(2501003)(99286004)(6486002)(50226002)(2616005)(316002)(86362001);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR04MB4402;H:AM0PR04MB4211.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: nxp.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: 2MdCrMQ4lXCgWXh6b1pAUEJJ2GPm/vmsO6faeg1qF0KM9XH+rDBR09c9MLxfB7ghWnp/fdI3ixEAFVkAkoVj5gqNhGlRYxcKcaFp7XNS4eLaGr2ftPicfbxWg3frbdMSbRTiLAuRZdyfTpeT45/67BVZI2GlDnvNunsFAqpZmUaIE5R/86/3FAQapBJFYkc9n36s5pk98fEQ5FMO7z0Qm9qP4Eyzhah9usjotoJgbDOJXl0kO3KQQKvTkZyRRmQq2cHuXgkruPO5mXUf6fxspz33FofofB6RHkWZhm+ba5sQZGVLA+UPnzalrCfkUIiK1yYIgKfOV8LjX6kzVLnaWILEgDP19NzhG2iDnYB5fO4=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 1399f85f-a9d9-4783-8f39-08d647199d55
X-MS-Exchange-CrossTenant-originalarrivaltime: 10 Nov 2018 14:34:26.3191
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR04MB4402
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD32UWT7OZbIGQnAA--.8634S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKr4Dur15WF45AF1xXr45GFg_yoWxGrWfpr
	yrWFyYkr45GF17Wa13trWDAF1Y9FsFyFyjqrW3Gasaqw43tFyYgr4xt3s0vF1UJrZ5Gw13
	JFW7Kr1kGrW7tF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmSb7Iv0xC_Cr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6ry5MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CEj282c2IF4VAI2VCY07xJMI8E67AF67
	kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1I6r4UYxBI
	daVFxhVjvjDU0xZFpf9x07bYXdbUUUUU=

pllv4 is designed for System Clock Generation (SCG) module observed
in IMX ULP SoC series. e.g. i.MX7ULP.

The SCG modules generates clock used to derive processor, system,
peripheral bus and external memory interface clocks while this patch
intends to support the PLL part.

Cc: Stephen Boyd <sboyd@codeaurora.org>
Cc: Michael Turquette <mturquette@baylibre.com>
Cc: Shawn Guo <shawnguo@kernel.org>
Cc: Anson Huang <Anson.Huang@nxp.com>
Cc: Bai Ping <ping.bai@nxp.com>
Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>

---
ChangeLog:
v3->v4:
 * no changes
v2->v3:
 * no changes
v1->v2:
 * remove clk_pllv4_is_enabled() check in set_rate, instead it will
   be handled by core later.
 * use readl_poll_timeout
 * use clk_hw_register instead of clk_register
 * other minor changes
---
 drivers/clk/imx/Makefile    |   1 +
 drivers/clk/imx/clk-pllv4.c | 182 ++++++++++++++++++++++++++++++++++++++++=
++++
 drivers/clk/imx/clk.h       |   3 +
 3 files changed, 186 insertions(+)
 create mode 100644 drivers/clk/imx/clk-pllv4.c

diff --git a/drivers/clk/imx/Makefile b/drivers/clk/imx/Makefile
index 8c3baa7..bfe31bf 100644
--- a/drivers/clk/imx/Makefile
+++ b/drivers/clk/imx/Makefile
@@ -11,6 +11,7 @@ obj-y +=3D \
 	clk-pllv1.o \
 	clk-pllv2.o \
 	clk-pllv3.o \
+	clk-pllv4.o \
 	clk-pfd.o
=20
 obj-$(CONFIG_SOC_IMX1)   +=3D clk-imx1.o
diff --git a/drivers/clk/imx/clk-pllv4.c b/drivers/clk/imx/clk-pllv4.c
new file mode 100644
index 0000000..67c64c7
--- /dev/null
+++ b/drivers/clk/imx/clk-pllv4.c
@@ -0,0 +1,182 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2016 Freescale Semiconductor, Inc.
+ * Copyright 2017~2018 NXP
+ *
+ * Author: Dong Aisheng <aisheng.dong@nxp.com>
+ *
+ */
+
+#include <linux/clk-provider.h>
+#include <linux/err.h>
+#include <linux/iopoll.h>
+#include <linux/slab.h>
+
+/* PLL Control Status Register (xPLLCSR) */
+#define PLL_CSR_OFFSET		0x0
+#define PLL_VLD			BIT(24)
+#define PLL_EN			BIT(0)
+
+/* PLL Configuration Register (xPLLCFG) */
+#define PLL_CFG_OFFSET		0x08
+#define BP_PLL_MULT		16
+#define BM_PLL_MULT		(0x7f << 16)
+
+/* PLL Numerator Register (xPLLNUM) */
+#define PLL_NUM_OFFSET		0x10
+
+/* PLL Denominator Register (xPLLDENOM) */
+#define PLL_DENOM_OFFSET	0x14
+
+struct clk_pllv4 {
+	struct clk_hw	hw;
+	void __iomem	*base;
+};
+
+/* Valid PLL MULT Table */
+static const int pllv4_mult_table[] =3D {33, 27, 22, 20, 17, 16};
+
+#define to_clk_pllv4(__hw) container_of(__hw, struct clk_pllv4, hw)
+
+#define LOCK_TIMEOUT_US		USEC_PER_MSEC
+
+static inline int clk_pllv4_wait_lock(struct clk_pllv4 *pll)
+{
+	u32 csr;
+
+	return readl_poll_timeout(pll->base  + PLL_CSR_OFFSET,
+				  csr, csr & PLL_VLD, 0, LOCK_TIMEOUT_US);
+}
+
+static int clk_pllv4_is_enabled(struct clk_hw *hw)
+{
+	struct clk_pllv4 *pll =3D to_clk_pllv4(hw);
+
+	if (readl_relaxed(pll->base) & PLL_EN)
+		return 1;
+
+	return 0;
+}
+
+static unsigned long clk_pllv4_recalc_rate(struct clk_hw *hw,
+					   unsigned long parent_rate)
+{
+	struct clk_pllv4 *pll =3D to_clk_pllv4(hw);
+	u32 div;
+
+	div =3D readl_relaxed(pll->base + PLL_CFG_OFFSET);
+	div &=3D BM_PLL_MULT;
+	div >>=3D BP_PLL_MULT;
+
+	return parent_rate * div;
+}
+
+static long clk_pllv4_round_rate(struct clk_hw *hw, unsigned long rate,
+				 unsigned long *prate)
+{
+	unsigned long parent_rate =3D *prate;
+	unsigned long round_rate, i;
+
+	for (i =3D 0; i < ARRAY_SIZE(pllv4_mult_table); i++) {
+		round_rate =3D parent_rate * pllv4_mult_table[i];
+		if (rate >=3D round_rate)
+			return round_rate;
+	}
+
+	return round_rate;
+}
+
+static bool clk_pllv4_is_valid_mult(unsigned int mult)
+{
+	int i;
+
+	/* check if mult is in valid MULT table */
+	for (i =3D 0; i < ARRAY_SIZE(pllv4_mult_table); i++) {
+		if (pllv4_mult_table[i] =3D=3D mult)
+			return true;
+	}
+
+	return false;
+}
+
+static int clk_pllv4_set_rate(struct clk_hw *hw, unsigned long rate,
+			      unsigned long parent_rate)
+{
+	struct clk_pllv4 *pll =3D to_clk_pllv4(hw);
+	u32 val, mult;
+
+	mult =3D rate / parent_rate;
+
+	if (!clk_pllv4_is_valid_mult(mult))
+		return -EINVAL;
+
+	val =3D readl_relaxed(pll->base + PLL_CFG_OFFSET);
+	val &=3D ~BM_PLL_MULT;
+	val |=3D mult << BP_PLL_MULT;
+	writel_relaxed(val, pll->base + PLL_CFG_OFFSET);
+
+	return 0;
+}
+
+static int clk_pllv4_enable(struct clk_hw *hw)
+{
+	u32 val;
+	struct clk_pllv4 *pll =3D to_clk_pllv4(hw);
+
+	val =3D readl_relaxed(pll->base);
+	val |=3D PLL_EN;
+	writel_relaxed(val, pll->base);
+
+	return clk_pllv4_wait_lock(pll);
+}
+
+static void clk_pllv4_disable(struct clk_hw *hw)
+{
+	u32 val;
+	struct clk_pllv4 *pll =3D to_clk_pllv4(hw);
+
+	val =3D readl_relaxed(pll->base);
+	val &=3D ~PLL_EN;
+	writel_relaxed(val, pll->base);
+}
+
+static const struct clk_ops clk_pllv4_ops =3D {
+	.recalc_rate	=3D clk_pllv4_recalc_rate,
+	.round_rate	=3D clk_pllv4_round_rate,
+	.set_rate	=3D clk_pllv4_set_rate,
+	.enable		=3D clk_pllv4_enable,
+	.disable	=3D clk_pllv4_disable,
+	.is_enabled	=3D clk_pllv4_is_enabled,
+};
+
+struct clk_hw *imx_clk_pllv4(const char *name, const char *parent_name,
+			  void __iomem *base)
+{
+	struct clk_pllv4 *pll;
+	struct clk_hw *hw;
+	struct clk_init_data init;
+	int ret;
+
+	pll =3D kzalloc(sizeof(*pll), GFP_KERNEL);
+	if (!pll)
+		return ERR_PTR(-ENOMEM);
+
+	pll->base =3D base;
+
+	init.name =3D name;
+	init.ops =3D &clk_pllv4_ops;
+	init.parent_names =3D &parent_name;
+	init.num_parents =3D 1;
+	init.flags =3D CLK_SET_RATE_GATE;
+
+	pll->hw.init =3D &init;
+
+	hw =3D &pll->hw;
+	ret =3D clk_hw_register(NULL, hw);
+	if (ret) {
+		kfree(pll);
+		hw =3D ERR_PTR(ret);
+	}
+
+	return hw;
+}
diff --git a/drivers/clk/imx/clk.h b/drivers/clk/imx/clk.h
index 8076ec0..2fb4f1d 100644
--- a/drivers/clk/imx/clk.h
+++ b/drivers/clk/imx/clk.h
@@ -42,6 +42,9 @@ enum imx_pllv3_type {
 struct clk *imx_clk_pllv3(enum imx_pllv3_type type, const char *name,
 		const char *parent_name, void __iomem *base, u32 div_mask);
=20
+struct clk_hw *imx_clk_pllv4(const char *name, const char *parent_name,
+			     void __iomem *base);
+
 struct clk *clk_register_gate2(struct device *dev, const char *name,
 		const char *parent_name, unsigned long flags,
 		void __iomem *reg, u8 bit_idx, u8 cgr_val,
--=20
2.7.4
