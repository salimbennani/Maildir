Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:50:08 -0000
Received: from icoremail.net (unknown [209.85.215.178])
	by mail-app2 (Coremail) with SMTP id by_KCgCn39y2LeVb4rxlAQ--.30589S3;
	Fri, 09 Nov 2018 14:48:24 +0800 (CST)
Received: from mail-pg1-f178.google.com (unknown [209.85.215.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3Tzu0LeVb2BIhAA--.236S3;
	Fri, 09 Nov 2018 14:48:20 +0800 (CST)
Received: by mail-pg1-f178.google.com with SMTP id 80so452385pge.4
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 22:48:20 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:sender:precedence:list-id;
        bh=zosYmZIH/bMZx2kLa53kE3x2OPdcSq6ez0a9bP/tt24=;
        b=K6sgTDfXm5NSdeyqcf3EinpsIukzvK1DOUrUZ+hiDnM50RsDo27XLQdWZN6yS1GlKo
         jm//XFr8DjacnSMaxvf+HoOPfXEMq2u0gX4sGl8lIQPffdR6Y7DIlBdzV6NZtrUP59C5
         wopPP7EJL2b2rTab/isBwI09VeaLqthZsbiAqBQrNLhrs6WoNKB3kb0HyxYuR95OhTbe
         aQHh2O1VtOeWEkdx+slIh5zd9StlS1Z53pLbxCfHKlFylPrWR0Gb9uRvZABcouPWtzXN
         BX/J0FZy0QwZFZC1W/UC3dCqilKYoWBMX96xlk8E3Ylqu0PxwXXy9mgZwjQi6wtSaw/0
         GAxg==
X-Gm-Message-State: AGRZ1gJZ5YyJ/rFXQEBYy0OgMvI4tASXVZ2uJu4NQm3MCpQVY1+yvMcK
	jthWlRkDLk84a61QkpZuDLZXo+yQaSkK4fFjhlroyIZ/UTRRhQkbZg==
X-Received: by 2002:a62:ab05:: with SMTP id p5-v6mr7794179pff.211.1541746100529;
        Thu, 08 Nov 2018 22:48:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1168437pjt;
        Thu, 8 Nov 2018 22:48:19 -0800 (PST)
X-Google-Smtp-Source: AJdET5drqywfG1n8/Xdc17cPyLu38thojIBpS2vTnMyUA9+NYMhqQcGUVTt+kE11o5S5oIIxTcil
X-Received: by 2002:a17:902:a614:: with SMTP id u20-v6mr7719709plq.77.1541746099265;
        Thu, 08 Nov 2018 22:48:19 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541746099; cv=none;
        d=google.com; s=arc-20160816;
        b=JSdAoN7IjMU/ZLGHeSNFvDD+MFDJgmhkxKPbz1fHHKB8Jt4NG4idF8+wBFOuOfMDu2
         mDCMwLL8yxl8KkeUUatCDScdDzvy1h8uMAonffQST6gEqvCRIMDvLMnNA4WFXYGaHHBW
         aLV9jvzc+nhaaLQBrbbvEDopqOS62fGYHravEzQlDnVfWCCZkBXb2Bs/DmzP4oPWk6k2
         INlTVhRkBvUkJK9YH2LmenAh20LZlDV5uVBFpHEt17kPePikKMJeLfYPoXP0za76vgVK
         1XfBqT56Ev/ctkuewtGNzyitM9uI1fswmyisQFLIKstUIqXb1470CVw/hFsdlS4MziWj
         IWqg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from:dkim-signature;
        bh=zosYmZIH/bMZx2kLa53kE3x2OPdcSq6ez0a9bP/tt24=;
        b=qYfI2H52nu4GH0PTHNTyClIo7BCWxW2ZfqmMYYvifdsiOUE2ZramWI/F0fpP3UQj7V
         du6gwwQhumhq6Bii3Jhznn7qlBA3bS0wtB0Lubdjne+rJnzGdckGmeeU4tF+MgLQRaOo
         oLBAjAsq4p1YTDkd374mjW9jVpfm/AaBvPL/5u/4I3MNSVzKVZs0hkLwCwJgnWC9qaVB
         +tjy4GkevpSVW8fJP+hIU0mTAAxU1D188VPkiTxW1itQw3MvHIP1D9ySYWId3X4xMO9f
         ZeudwuCJ58HAf3boWd4Kr8HiFA6qGvwaEKicXT13IrMLnfvDHTxzqwJELM2r1S3h6FgQ
         6oGA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@gmail.com header.s=20161025 header.b=QwyMpnn9;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n185-v6si6735000pfn.83.2018.11.08.22.48.04;
        Thu, 08 Nov 2018 22:48:19 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728120AbeKIQ0y (ORCPT <rfc822;changseok.bae@gmail.com>
        + 99 others); Fri, 9 Nov 2018 11:26:54 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:38278 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728002AbeKIQ0x (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 11:26:53 -0500
Received: by mail-pf1-f196.google.com with SMTP id b11-v6so494340pfi.5
        for <linux-kernel@vger.kernel.org>; Thu, 08 Nov 2018 22:47:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=zosYmZIH/bMZx2kLa53kE3x2OPdcSq6ez0a9bP/tt24=;
        b=QwyMpnn9c+6gRddzOcen8u+RU89eMBYJSP0wvwfeKtViwuqu/oqR624Hi0FCCd5scq
         Nqo1jwYwCU+YTFBY5GWLyY0bu5tqBIG1L3uAlFT2u7sZQGqL7oLfXLUgtphEhVoy1x1k
         5Pjib0hIlc2NILlQVMGs0xSyX5J9/w2AZT8szVR+3SOOprVcnJu93AUnlRGqgUmGMTHa
         MUU+o/GxHCR2lOwjfotjqwT2Q9NBiRBbMTyUMsR5szQ3PgfQIv67GQPjLAJc85XwLsgY
         oQ5C0ROwHR2LdlrDgtmifzQ1wZeYKP+xG3/NtjcgYW4euG1/v4TW7nxiLOoekbUEXqum
         7WOA==
X-Received: by 2002:a62:571b:: with SMTP id l27-v6mr7842901pfb.209.1541746064720;
        Thu, 08 Nov 2018 22:47:44 -0800 (PST)
Received: from www9186uo.sakura.ne.jp (www9186uo.sakura.ne.jp. [153.121.56.200])
        by smtp.gmail.com with ESMTPSA id c70-v6sm6808355pfg.97.2018.11.08.22.47.42
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 08 Nov 2018 22:47:44 -0800 (PST)
From: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: Michal Hocko <mhocko@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Mike Kravetz <mike.kravetz@oracle.com>,
        xishi.qiuxishi@alibaba-inc.com,
        Laurent Dufour <ldufour@linux.vnet.ibm.com>
Subject: [RFC][PATCH v1 07/11] mm: remove flag argument from soft offline functions
Date: Fri,  9 Nov 2018 15:47:11 +0900
Message-Id: <1541746035-13408-8-git-send-email-n-horiguchi@ah.jp.nec.com>
X-Mailer: git-send-email 2.7.0
In-Reply-To: <1541746035-13408-1-git-send-email-n-horiguchi@ah.jp.nec.com>
References: <1541746035-13408-1-git-send-email-n-horiguchi@ah.jp.nec.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3Tzu0LeVb2BIhAA--.236S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Gw4rKr48ZrW8Ww1ruw17KFg_yoWxJF43pF
	WxJa4kJ3y3try3uFWUAw4qywnIk3WkGay0yrWxG395ZF13tw1qyF4IyFySyr1FgFy8CFW7
	CFs8KF1UZan5J37anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9Yb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE
	2Ix0cI8IcVAFwI0_JFI_Gr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVWUJVW8JwCYIxAIcV
	C2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij
	64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr
	0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY
	17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCT
	nIWIevJa73UjIFyTuYvjxUBSfODUUUU

The argument @flag no longer affects the behavior of soft_offline_page()
and its variants, so let's remove them.

Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
---
 drivers/base/memory.c |  2 +-
 include/linux/mm.h    |  2 +-
 mm/madvise.c          |  2 +-
 mm/memory-failure.c   | 27 +++++++++++++--------------
 4 files changed, 16 insertions(+), 17 deletions(-)

diff --git v4.19-mmotm-2018-10-30-16-08/drivers/base/memory.c v4.19-mmotm-2018-10-30-16-08_patched/drivers/base/memory.c
index 0e59856..4a554a5 100644
--- v4.19-mmotm-2018-10-30-16-08/drivers/base/memory.c
+++ v4.19-mmotm-2018-10-30-16-08_patched/drivers/base/memory.c
@@ -548,7 +548,7 @@ store_soft_offline_page(struct device *dev,
 	pfn >>= PAGE_SHIFT;
 	if (!pfn_valid(pfn))
 		return -ENXIO;
-	ret = soft_offline_page(pfn_to_page(pfn), 0);
+	ret = soft_offline_page(pfn_to_page(pfn));
 	return ret == 0 ? count : ret;
 }
 
diff --git v4.19-mmotm-2018-10-30-16-08/include/linux/mm.h v4.19-mmotm-2018-10-30-16-08_patched/include/linux/mm.h
index f85b450..6c496da 100644
--- v4.19-mmotm-2018-10-30-16-08/include/linux/mm.h
+++ v4.19-mmotm-2018-10-30-16-08_patched/include/linux/mm.h
@@ -2738,7 +2738,7 @@ extern int sysctl_memory_failure_early_kill;
 extern int sysctl_memory_failure_recovery;
 extern void shake_page(struct page *p, int access);
 extern atomic_long_t num_poisoned_pages __read_mostly;
-extern int soft_offline_page(struct page *page, int flags);
+extern int soft_offline_page(struct page *page);
 
 #ifdef CONFIG_MEMORY_FAILURE
 /*
diff --git v4.19-mmotm-2018-10-30-16-08/mm/madvise.c v4.19-mmotm-2018-10-30-16-08_patched/mm/madvise.c
index 9fa0225..86453f3 100644
--- v4.19-mmotm-2018-10-30-16-08/mm/madvise.c
+++ v4.19-mmotm-2018-10-30-16-08_patched/mm/madvise.c
@@ -660,7 +660,7 @@ static int madvise_inject_error(int behavior,
 			pr_info("Soft offlining pfn %#lx at process virtual address %#lx\n",
 					pfn, start);
 
-			ret = soft_offline_page(page, 0);
+			ret = soft_offline_page(page);
 			if (ret)
 				return ret;
 			continue;
diff --git v4.19-mmotm-2018-10-30-16-08/mm/memory-failure.c v4.19-mmotm-2018-10-30-16-08_patched/mm/memory-failure.c
index ed347f8..869ff8f 100644
--- v4.19-mmotm-2018-10-30-16-08/mm/memory-failure.c
+++ v4.19-mmotm-2018-10-30-16-08_patched/mm/memory-failure.c
@@ -1482,7 +1482,7 @@ static void memory_failure_work_func(struct work_struct *work)
 		if (!gotten)
 			break;
 		if (entry.flags & MF_SOFT_OFFLINE)
-			soft_offline_page(pfn_to_page(entry.pfn), entry.flags);
+			soft_offline_page(pfn_to_page(entry.pfn));
 		else
 			memory_failure(entry.pfn, entry.flags);
 	}
@@ -1615,7 +1615,7 @@ static struct page *new_page(struct page *p, unsigned long private)
  * that is not free, and 1 for any other page type.
  * For 1 the page is returned with increased page count, otherwise not.
  */
-static int __get_any_page(struct page *p, unsigned long pfn, int flags)
+static int __get_any_page(struct page *p, unsigned long pfn)
 {
 	int ret;
 
@@ -1642,9 +1642,9 @@ static int __get_any_page(struct page *p, unsigned long pfn, int flags)
 	return ret;
 }
 
-static int get_any_page(struct page *page, unsigned long pfn, int flags)
+static int get_any_page(struct page *page, unsigned long pfn)
 {
-	int ret = __get_any_page(page, pfn, flags);
+	int ret = __get_any_page(page, pfn);
 
 	if (ret == 1 && !PageHuge(page) &&
 	    !PageLRU(page) && !__PageMovable(page)) {
@@ -1657,7 +1657,7 @@ static int get_any_page(struct page *page, unsigned long pfn, int flags)
 		/*
 		 * Did it turn free?
 		 */
-		ret = __get_any_page(page, pfn, 0);
+		ret = __get_any_page(page, pfn);
 		if (ret == 1 && !PageLRU(page)) {
 			/* Drop page reference which is from __get_any_page() */
 			put_hwpoison_page(page);
@@ -1669,7 +1669,7 @@ static int get_any_page(struct page *page, unsigned long pfn, int flags)
 	return ret;
 }
 
-static int soft_offline_huge_page(struct page *page, int flags)
+static int soft_offline_huge_page(struct page *page)
 {
 	int ret;
 	unsigned long pfn = page_to_pfn(page);
@@ -1730,7 +1730,7 @@ static int soft_offline_huge_page(struct page *page, int flags)
 	return ret;
 }
 
-static int __soft_offline_page(struct page *page, int flags)
+static int __soft_offline_page(struct page *page)
 {
 	int ret;
 	unsigned long pfn = page_to_pfn(page);
@@ -1815,7 +1815,7 @@ static int __soft_offline_page(struct page *page, int flags)
 	return ret;
 }
 
-static int soft_offline_in_use_page(struct page *page, int flags)
+static int soft_offline_in_use_page(struct page *page)
 {
 	int ret;
 	int mt;
@@ -1847,9 +1847,9 @@ static int soft_offline_in_use_page(struct page *page, int flags)
 	mt = get_pageblock_migratetype(page);
 	set_pageblock_migratetype(page, MIGRATE_ISOLATE);
 	if (PageHuge(page))
-		ret = soft_offline_huge_page(page, flags);
+		ret = soft_offline_huge_page(page);
 	else
-		ret = __soft_offline_page(page, flags);
+		ret = __soft_offline_page(page);
 	set_pageblock_migratetype(page, mt);
 	return ret;
 }
@@ -1873,7 +1873,6 @@ static int soft_offline_free_page(struct page *page)
 /**
  * soft_offline_page - Soft offline a page.
  * @page: page to offline
- * @flags: flags. Same as memory_failure().
  *
  * Returns 0 on success, otherwise negated errno.
  *
@@ -1892,7 +1891,7 @@ static int soft_offline_free_page(struct page *page)
  * This is not a 100% solution for all memory, but tries to be
  * ``good enough'' for the majority of memory.
  */
-int soft_offline_page(struct page *page, int flags)
+int soft_offline_page(struct page *page)
 {
 	int ret;
 	unsigned long pfn = page_to_pfn(page);
@@ -1909,11 +1908,11 @@ int soft_offline_page(struct page *page, int flags)
 	}
 
 	get_online_mems();
-	ret = get_any_page(page, pfn, flags);
+	ret = get_any_page(page, pfn);
 	put_online_mems();
 
 	if (ret > 0)
-		ret = soft_offline_in_use_page(page, flags);
+		ret = soft_offline_in_use_page(page);
 	else if (ret == 0)
 		ret = soft_offline_free_page(page);
 
-- 
2.7.0
