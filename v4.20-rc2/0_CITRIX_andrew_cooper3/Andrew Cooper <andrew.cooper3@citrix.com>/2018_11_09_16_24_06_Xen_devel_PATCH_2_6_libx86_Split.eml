Return-Path: <xen-devel-bounces@lists.xenproject.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:54:27 -0000
Received: from icoremail.net (unknown [209.85.214.170])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_5tLteVbqwJpAQ--.31523S3;
	Sat, 10 Nov 2018 00:26:52 +0800 (CST)
Received: from mail-pl1-f170.google.com (unknown [209.85.214.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXP0tIteVbmlAjAA--.333S3;
	Sat, 10 Nov 2018 00:26:48 +0800 (CST)
Received: by mail-pl1-f170.google.com with SMTP id p4-v6so1161700plo.5
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 08:26:48 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:references:openpgp:autocrypt:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:subject:precedence
         :list-id:list-unsubscribe:list-post:list-help:list-subscribe:cc
         :errors-to:sender;
        bh=U2HsVqp0UcpncAQEXDCoJMZ2ZOUEhR5vC4WpzTi4vD8=;
        b=KIRdt7+Jst0Xg0Bch4Tf/XN6ChysBovjf2F+g539Wd6xXs3ftcDpC7ysAY8RFtGdDZ
         tV0dDqGXUvjgih3p+EQiItLTCGsv/BKlvQuwA1/ejBLDSQXDyIkquylJEug5q2o4jdIU
         Y4Wz/Fp3WMjrIiJIU2nOt2v6ZCxX2j3pfjtv93h5S/VeU6/P5oWmOQbZwFPSTZHHoYZC
         aY62bI4OWVfa0YVIuTCJkkmUk/SWyQ+kWfaAmTz2xPBHXZSRpN6pwCsNxDWNUVtw7xTM
         rZhkMO85MpveZpg4utPHyOWZyUPvPAEx3pA7cVPNUj6LjUOGAXwX/cJ/ga1S/ULJd2TX
         Czhw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of xen-devel-bounces@lists.xenproject.org designates 192.237.175.120 as permitted sender) smtp.mailfrom=xen-devel-bounces@lists.xenproject.org
X-Gm-Message-State: AGRZ1gK771IAYD+ZHXTAwVMUGHu6SZfu8z0JCyz7vY65cvo4VmaHnm4c
	cxPW1CoXDqENt2NWqmNaotOXspmk2NYPwsIOXIaZ++UzHXNK7bjsiw==
X-Received: by 2002:a17:902:560f:: with SMTP id h15-v6mr6461525pli.160.1541780807876;
        Fri, 09 Nov 2018 08:26:47 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp97092pjt;
        Fri, 9 Nov 2018 08:26:47 -0800 (PST)
X-Google-Smtp-Source: AJdET5ckkwMrjAzSAlFdMmDnpAPGltYZxuwz66poVLuPuBaazGNW6aQ+Wmd5BW9WKxetmtAhInFA
X-Received: by 2002:a81:7945:: with SMTP id u66-v6mr9075082ywc.464.1541780806944;
        Fri, 09 Nov 2018 08:26:46 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541780806; cv=none;
        d=google.com; s=arc-20160816;
        b=wg3ZoB8OJiyZDhYMdfdF4/bJDFaUse2qOWuqVxfn8AYeZ3gHcUf56VUfdJE94CbgHV
         ocrYAQ0ZN6Fxx0EzLSg3lHyVXiiFbInXsmLoPv0ft5ADyZjy/h6UfbG5ZwrJUnTEIfRn
         3Gmiv87MXhIwcxP6c5+DmCcxZWIWGFHOJvM4CD1SWv5cg8d+tJkP2/Jhq6Wp4FRu7/dk
         7AtvGvmgSlWbKh/qv7qJIDEpwLJkOC1ZlIfxWoQ1MtKqlxKLDdEjt9PqNQv6X8k+hiqU
         YuZQJQVLSW1ibBuIiWVw1QSq4ZqTJE4lZZc8TbSwvZtw6xutGeYTnw4XLF6jRgG5Apgy
         VK8w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=sender:errors-to:cc:list-subscribe:list-help:list-post
         :list-unsubscribe:list-id:precedence:subject:content-language
         :in-reply-to:mime-version:user-agent:date:message-id:autocrypt
         :openpgp:references:to:from;
        bh=U2HsVqp0UcpncAQEXDCoJMZ2ZOUEhR5vC4WpzTi4vD8=;
        b=Vajsnl43FOEnVOu+00mvOtboleB+aH8ZRV9mu4FTP+ATjSJAno9er9kSR25aFJVw7Q
         mB2N/MBH5x7ko96T0aYmVQkL0wK8xnY10pTAudcobCGGH8IuHdeEfbmnrFPXZ6cWi6hC
         iB0zhQxa5EimLxuxq/212aQKbIkeijrz6YUdNiSf5t0/tihCXT5L++AgV+IveZyxzXPy
         d23gjPFECpLgQG08tJKes+cDwaSNyQNubAx5H2a6uKws8cxNjcMoCmDh5Rr+hVTk8odp
         HYBVbBvubeoXjw/RsyCCopoW4rNtlgZmwBRXg2RNi4mY5FJeDeuVzvvYgsB51rLup4jL
         ToBQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of xen-devel-bounces@lists.xenproject.org designates 192.237.175.120 as permitted sender) smtp.mailfrom=xen-devel-bounces@lists.xenproject.org
Received: from lists.xenproject.org (lists.xenproject.org. [192.237.175.120])
        by mx.google.com with ESMTPS id h3-v6si4257708ybh.411.2018.11.09.08.26.31
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 09 Nov 2018 08:26:46 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of xen-devel-bounces@lists.xenproject.org designates 192.237.175.120 as permitted sender) client-ip=192.237.175.120;
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1gL9Zr-00070M-L5; Fri, 09 Nov 2018 16:24:11 +0000
Received: from all-amaz-eas1.inumbo.com ([34.197.232.57]
 helo=us1-amaz-eas2.inumbo.com)
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <srs0=wzzi=nu=citrix.com=prvs=84405b137=andrew.cooper3@srs-us1.protection.inumbo.net>)
 id 1gL9Zq-00070H-9U
 for xen-devel@lists.xen.org; Fri, 09 Nov 2018 16:24:10 +0000
X-Inumbo-ID: e1ad9bd4-e43b-11e8-80b3-12d6303a7972
Received: from SMTP.EU.CITRIX.COM (unknown [185.25.65.24])
 by us1-amaz-eas2.inumbo.com (Halon) with ESMTPS
 id e1ad9bd4-e43b-11e8-80b3-12d6303a7972;
 Fri, 09 Nov 2018 16:24:08 +0000 (UTC)
X-IronPort-AV: E=Sophos;i="5.54,483,1534809600"; d="scan'208,217";a="81653752"
From: Andrew Cooper <andrew.cooper3@citrix.com>
To: Jan Beulich <JBeulich@suse.com>
References: <1541416867-30253-1-git-send-email-andrew.cooper3@citrix.com>
 <1541416867-30253-3-git-send-email-andrew.cooper3@citrix.com>
 <5BE19AA602000078001F89E5@prv1-mh.provo.novell.com>
Openpgp: preference=signencrypt
Autocrypt: addr=andrew.cooper3@citrix.com; prefer-encrypt=mutual; keydata=
 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
 6+ahAA==
Message-ID: <1fd922d8-ec20-1173-a472-579a507c531c@citrix.com>
Date: Fri, 9 Nov 2018 16:24:06 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <5BE19AA602000078001F89E5@prv1-mh.provo.novell.com>
Content-Language: en-GB
X-ClientProxiedBy: AMSPEX02CAS02.citrite.net (10.69.22.113) To
 AMSPEX02CL02.citrite.net (10.69.22.126)
Subject: [Xen-devel] [PATCH 2/6] libx86: Split
 x86_cpuid_policy_fill_native() out of calculate_raw_policy()
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Wei Liu <wei.liu2@citrix.com>, Xen-devel <xen-devel@lists.xen.org>
Content-Type: multipart/mixed; boundary="===============9172188827756113419=="
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
X-CM-TRANSID: AQAAfwBXP0tIteVbmlAjAA--.333S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGw45tFyUJw15Ww47trW8WFg_yoW5AF45pF
	WIywsrJw4UJFy5Wa4rJw4rCa1F9r98GF15Jw1rtrWruwn5WFyqvF42qrW5Z3sxuF18uFy3
	AFZIqa1YkFnFvFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUL2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAa7VCE64
	xvF2IEb7IF0Fy264xvF2IEb7IF0Fy264kE64k0F2IE7I0Y6sxI4wAS0I0E0xvYzxvE52x0
	82IY62kv0487McIj6xIIjxv20xvE14v26r1j6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72
	CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr41lFcxC0VAYjxAxZF0Ew4CEw7xC0wCjr7xv
	wVCIw2I0I7xG6c02F41l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26c
	xK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r1lc2IjII80xcxEwVAK
	I48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr
	0_Cr1lcIIF0xvEx4A2jsIE14v26r4j6F4UMxvI42IY6I8E87Iv6xkF7I0E14v26r4j6r4U
	JwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxV
	CFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r106r1rMI8I3I0E7480Y4vE14v26r10
	6r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7
	xG6r4j6FyUMVCEFcxC0VAYjxAxZFUvcSsGvfC2KfnxnUUI43ZEXa7IUYZB_5UUUUU==

--===============9172188827756113419==
Content-Type: multipart/alternative;
	boundary="------------48D9EAA3DAF16E7A59FAE847"
Content-Language: en-GB

--------------48D9EAA3DAF16E7A59FAE847
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

On 06/11/18 13:44, Jan Beulich wrote:
>>>> On 05.11.18 at 12:21, <andrew.cooper3@citrix.com> wrote:
>> --- a/xen/include/xen/lib/x86/cpuid.h
>> +++ b/xen/include/xen/lib/x86/cpuid.h
>> @@ -20,6 +20,21 @@ struct cpuid_leaf
>>      uint32_t a, b, c, d;
>>  };
>>  
>> +static inline void cpuid_leaf(uint32_t leaf, struct cpuid_leaf *l)
>> +{
>> +    asm volatile ( "cpuid"
>> +                   : "=a" (l->a), "=b" (l->b), "=c" (l->c), "=d" (l->d)
>> +                   : "a" (leaf) );
>> +}
>> +
>> +static inline void cpuid_count_leaf(
>> +    uint32_t leaf, uint32_t subleaf, struct cpuid_leaf *l)
>> +{
>> +    asm volatile ( "cpuid"
>> +                   : "=a" (l->a), "=b" (l->b), "=c" (l->c), "=d" (l->d)
>> +                   : "a" (leaf), "c" (subleaf) );
>> +}
> Especially with this now being library code (i.e. side effects like
> serialization not being supposed to be of interest): Why
> volatile?

Force of habit, I think.  I'll drop volatile here.

We should probably do the same for Xen, although there is one place in
the Intel ucode handler which would need adjusting to cope.

>> --- a/xen/lib/x86/cpuid.c
>> +++ b/xen/lib/x86/cpuid.c
>> @@ -2,6 +2,114 @@
>>  
>>  #include <xen/lib/x86/cpuid.h>
>>  
>> +void x86_cpuid_policy_fill_native(struct cpuid_policy *p)
>> +{
>> +    unsigned int i;
>> +
>> +    cpuid_leaf(0, &p->basic.raw[0]);
>> +    for ( i = 1; i < min(ARRAY_SIZE(p->basic.raw),
>> +                         p->basic.max_leaf + 1ul); ++i )
>> +    {
>> +        switch ( i )
>> +        {
>> +        case 0x4: case 0x7: case 0xb: case 0xd:
>> +            /* Multi-invocation leaves.  Deferred. */
>> +            continue;
>> +        }
>> +
>> +        cpuid_leaf(i, &p->basic.raw[i]);
>> +    }
>> +
>> +    if ( p->basic.max_leaf >= 4 )
>> +    {
>> +        for ( i = 0; i < ARRAY_SIZE(p->cache.raw); ++i )
>> +        {
>> +            union {
>> +                struct cpuid_leaf l;
>> +                struct cpuid_cache_leaf c;
>> +            } u;
>> +
>> +            cpuid_count_leaf(4, i, &u.l);
>> +
>> +            if ( u.c.type == 0 )
>> +                break;
>> +
>> +            p->cache.subleaf[i] = u.c;
>> +        }
>> +
>> +        /*
>> +         * The choice of CPUID_GUEST_NR_CACHE is arbitrary.  It is expected
>> +         * that it will eventually need increasing for future hardware.
>> +         */
>> +#ifdef __XEN__
>> +        if ( i == ARRAY_SIZE(p->cache.raw) )
>> +            printk(XENLOG_WARNING
>> +                   "CPUID: Insufficient Leaf 4 space for this hardware\n");
>> +#endif
> There being another similar instance further down, and possibly
> new ones to appear later, plus such a warning potentially also
> being of interest in the harness - would you mind abstracting
> (could be as simple as making printk() and XENLOG_* available
> where needed, provided there's no consumer which would
> rather not want such logging) this so it can go without #ifdef-ary?

Well - it was this consideration which caused me to omit it.

Realistically, the first situation to hit this message will be someone
booting Xen on a brand new piece of hardware, so I expect changes to the
structure size to come from vendors.

One user is the AFL fuzzer, and that definitely doesn't want to be
spitting out a warning on every fork().  The other current user is the
x86 instruction emulator, where this functionality isn't the interesting
part.  Furthermore, I don't expect the toolstack to be making use of
this itself, so it won't be useful to attempt to plumb the message
through there.

~Andrew

--------------48D9EAA3DAF16E7A59FAE847
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: 8bit

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  </head>
  <body text="#000000" bgcolor="#FFFFFF">
    <div class="moz-cite-prefix">On 06/11/18 13:44, Jan Beulich wrote:<br>
    </div>
    <blockquote type="cite"
      cite="mid:5BE19AA602000078001F89E5@prv1-mh.provo.novell.com">
      <blockquote type="cite">
        <blockquote type="cite">
          <blockquote type="cite">
            <pre wrap="">On 05.11.18 at 12:21, <a class="moz-txt-link-rfc2396E" href="mailto:andrew.cooper3@citrix.com">&lt;andrew.cooper3@citrix.com&gt;</a> wrote:
</pre>
          </blockquote>
        </blockquote>
        <pre wrap="">--- a/xen/include/xen/lib/x86/cpuid.h
+++ b/xen/include/xen/lib/x86/cpuid.h
@@ -20,6 +20,21 @@ struct cpuid_leaf
     uint32_t a, b, c, d;
 };
 
+static inline void cpuid_leaf(uint32_t leaf, struct cpuid_leaf *l)
+{
+    asm volatile ( "cpuid"
+                   : "=a" (l-&gt;a), "=b" (l-&gt;b), "=c" (l-&gt;c), "=d" (l-&gt;d)
+                   : "a" (leaf) );
+}
+
+static inline void cpuid_count_leaf(
+    uint32_t leaf, uint32_t subleaf, struct cpuid_leaf *l)
+{
+    asm volatile ( "cpuid"
+                   : "=a" (l-&gt;a), "=b" (l-&gt;b), "=c" (l-&gt;c), "=d" (l-&gt;d)
+                   : "a" (leaf), "c" (subleaf) );
+}
</pre>
      </blockquote>
      <pre wrap="">Especially with this now being library code (i.e. side effects like
serialization not being supposed to be of interest): Why
volatile?</pre>
    </blockquote>
    <br>
    Force of habit, I think.  I'll drop volatile here.<br>
    <br>
    We should probably do the same for Xen, although there is one place
    in the Intel ucode handler which would need adjusting to cope.<br>
    <br>
    <blockquote type="cite"
      cite="mid:5BE19AA602000078001F89E5@prv1-mh.provo.novell.com">
      <pre wrap="">
</pre>
      <blockquote type="cite">
        <pre wrap="">--- a/xen/lib/x86/cpuid.c
+++ b/xen/lib/x86/cpuid.c
@@ -2,6 +2,114 @@
 
 #include &lt;xen/lib/x86/cpuid.h&gt;
 
+void x86_cpuid_policy_fill_native(struct cpuid_policy *p)
+{
+    unsigned int i;
+
+    cpuid_leaf(0, &amp;p-&gt;basic.raw[0]);
+    for ( i = 1; i &lt; min(ARRAY_SIZE(p-&gt;basic.raw),
+                         p-&gt;basic.max_leaf + 1ul); ++i )
+    {
+        switch ( i )
+        {
+        case 0x4: case 0x7: case 0xb: case 0xd:
+            /* Multi-invocation leaves.  Deferred. */
+            continue;
+        }
+
+        cpuid_leaf(i, &amp;p-&gt;basic.raw[i]);
+    }
+
+    if ( p-&gt;basic.max_leaf &gt;= 4 )
+    {
+        for ( i = 0; i &lt; ARRAY_SIZE(p-&gt;cache.raw); ++i )
+        {
+            union {
+                struct cpuid_leaf l;
+                struct cpuid_cache_leaf c;
+            } u;
+
+            cpuid_count_leaf(4, i, &amp;u.l);
+
+            if ( u.c.type == 0 )
+                break;
+
+            p-&gt;cache.subleaf[i] = u.c;
+        }
+
+        /*
+         * The choice of CPUID_GUEST_NR_CACHE is arbitrary.  It is expected
+         * that it will eventually need increasing for future hardware.
+         */
+#ifdef __XEN__
+        if ( i == ARRAY_SIZE(p-&gt;cache.raw) )
+            printk(XENLOG_WARNING
+                   "CPUID: Insufficient Leaf 4 space for this hardware\n");
+#endif
</pre>
      </blockquote>
      <pre wrap="">There being another similar instance further down, and possibly
new ones to appear later, plus such a warning potentially also
being of interest in the harness - would you mind abstracting
(could be as simple as making printk() and XENLOG_* available
where needed, provided there's no consumer which would
rather not want such logging) this so it can go without #ifdef-ary?</pre>
    </blockquote>
    <br>
    Well - it was this consideration which caused me to omit it.<br>
    <br>
    Realistically, the first situation to hit this message will be
    someone booting Xen on a brand new piece of hardware, so I expect
    changes to the structure size to come from vendors.<br>
    <br>
    One user is the AFL fuzzer, and that definitely doesn't want to be
    spitting out a warning on every fork().  The other current user is
    the x86 instruction emulator, where this functionality isn't the
    interesting part.  Furthermore, I don't expect the toolstack to be
    making use of this itself, so it won't be useful to attempt to plumb
    the message through there.<br>
    <br>
    ~Andrew<br>
  </body>
</html>

--------------48D9EAA3DAF16E7A59FAE847--


--===============9172188827756113419==
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
Content-Disposition: inline

X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVs
IG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0
cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

--===============9172188827756113419==--
