Return-Path: <kvm-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:52:38 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv5qyeeVbWqdnAQ--.31671S3;
	Fri, 09 Nov 2018 20:12:36 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHXzt8eOVbpoEiAA--.13472S3;
	Fri, 09 Nov 2018 20:07:24 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id b5-v6so869934pla.6
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 04:07:24 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=XA0DMjVCE7D8fwg0IceTx7fSyyZUnXwWhk+9WwNbHIY=;
        b=jgb5OS14xPyGXhL5UDFKy3hcAle0BsBhfetmNj1g8vZb0UWZ6GkWTzkLABBc9xge8f
         fXSMReyRn/tLPFvzYml5Y5NbPNTANcPMajwbsJB6yXBC0GkfEJaPCFHAyY3nndGFA90V
         3ARtkSxmEVBcXdzEJxKDU6uo072ht0DGr7X1a6j9oc64iwSdrSk/+Z3x2FoDQUbFoVu1
         EKlxrPSctklA4UwmaTGL1awBCXUsIiQaj8fMS+azIjhMoR6T1tvUFVIBKlcCIjwBpUhR
         m1HsFF5wDaN5wz0TYhExxBUSUp64q056G6Rkt8xktqF5coZgsHGaTIYWNivmE1qv+Z1p
         mLsA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
X-Gm-Message-State: AGRZ1gK5GoEpc++LkUWDYwbe1Ul5n6mS8aF7M1H68fr4JQGxmOHQ3I7L
	hD3Kp60ZiJz8DHps1aBosSeCkJqUKzaf1tYvhiT5Vlb2xj4VkhiHAA==
X-Received: by 2002:a17:902:7082:: with SMTP id z2-v6mr8718964plk.78.1541765243846;
        Fri, 09 Nov 2018 04:07:23 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp118471pjt;
        Fri, 9 Nov 2018 04:07:22 -0800 (PST)
X-Google-Smtp-Source: AJdET5dYteLTnan/xWOs5UP2a+dHczr5oNzYjUXxvu5y2gVh8CmrVb4S6RSyc1MJzhhOIlbOPRWC
X-Received: by 2002:a63:907:: with SMTP id 7-v6mr7149079pgj.121.1541765242743;
        Fri, 09 Nov 2018 04:07:22 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541765242; cv=none;
        d=google.com; s=arc-20160816;
        b=nfosPPZk5VsoZ9UExlIQBv5G2awqx9K/mhbQb84RUsQecSlgFBQcHX6StyzkACxNFD
         XLMd6583Iz2mSLnULYn4inntMjAraSvi3rqGdmLYL47Omek0eRRVIz28HZmBBM5uMZuu
         Ms+QUKm7lxzi3VY+YUaNI40sO63oEGxWkNivcm6cryn48Jc9GNI44i4bMhfGKO+0x0Oe
         BVkdnumzPA1j0cwFwQRyAy9r/ao9pCHWa5//3NqLaR50Ass/BkFBXK5oQyXGBzKOmOKl
         Bvj85ueb/tUBfMxGrLYM1oMAO2kGRJTHf7vvcpPyqv2drIqjADH6+S7l3T5KvNdT7mgW
         9OMg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=XA0DMjVCE7D8fwg0IceTx7fSyyZUnXwWhk+9WwNbHIY=;
        b=U4FFl4Y/ERLKNmmwmYAfNafQkgWNrf7zA6Jog9U0l00qfZBJdU5ri269ZDLiKSjOIr
         hJ+PuBf5rybhYZngjfNeL6FMLGCEuBiS9MoU7i9aTvZiNyEufDdVYAMzQQftKabRqajD
         YlWPiMjmPLTiz389E97ePm9R7qWpAh5ZAuhGg72Z6xa3hoZZEuXfLZqT4fnCBuNwKv9v
         4zR5SQemopBfLfhlgqMKXf/4ICC+HK1IglCF2CmQjWqjuJROtppCJ+UdSGDYw/3I9HkR
         PTjEE8QKlUs3SToOab52rj/tccmJRzTG6UugB8+5Alt4f4VeR7JYYISgOucnl3LwvYia
         lyUQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=kvm-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=intel.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id i11-v6si6782576pgk.29.2018.11.09.04.07.04;
        Fri, 09 Nov 2018 04:07:22 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of kvm-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728111AbeKIVpF (ORCPT <rfc822;fanshuming2011@gmail.com>
        + 99 others); Fri, 9 Nov 2018 16:45:05 -0500
Received: from mga05.intel.com ([192.55.52.43]:57280 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727742AbeKIVpF (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 9 Nov 2018 16:45:05 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Nov 2018 04:04:45 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.54,483,1534834800"; 
   d="scan'208";a="98940257"
Received: from zhangyu-optiplex-9020.bj.intel.com ([10.238.135.159])
  by orsmga003.jf.intel.com with ESMTP; 09 Nov 2018 04:04:43 -0800
From: Yu Zhang <yu.c.zhang@linux.intel.com>
To: kvm@vger.kernel.org
Cc: peterx@redhat.com, pbonzini@redhat.com, ehabkost@redhat.com,
        mst@redhat.com
Subject: [kvm-unit-tests PATCH] x86/intel-iommu: add test for address width 48 and 57.
Date: Fri,  9 Nov 2018 20:02:40 +0800
Message-Id: <1541764960-11322-1-git-send-email-yu.c.zhang@linux.intel.com>
X-Mailer: git-send-email 1.9.1
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-CM-TRANSID: AQAAfwCHXzt8eOVbpoEiAA--.13472S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCw17Cr15GrWrWw43KF1xKrg_yoW7Jr1rpr
	W7GF9av395tr9a9r92gr4UZr4rArs3Ja4v9FyUCrW3KF1rXw17AFy09a4Fy3WqgFs5AFW3
	Xw10qwsa9ay3AwUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPYb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6ryUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAI
	cVC2z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw1lIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07b8gAwU
	UUUU=

Current iommu test only covers 39-bit address width. This patch
extends the test case to based on the supported maximum guest
address width.

Signed-off-by: Yu Zhang <yu.c.zhang@linux.intel.com>
---
 lib/x86/intel-iommu.c | 14 ++++----------
 lib/x86/intel-iommu.h | 11 ++++++++++-
 x86/intel-iommu.c     | 21 ++++++++++++++++-----
 3 files changed, 30 insertions(+), 16 deletions(-)

diff --git a/lib/x86/intel-iommu.c b/lib/x86/intel-iommu.c
index 3f3f211..e1ea9d2 100644
--- a/lib/x86/intel-iommu.c
+++ b/lib/x86/intel-iommu.c
@@ -16,13 +16,6 @@
 #include "atomic.h"
 #include "alloc_page.h"
 
-/*
- * VT-d in QEMU currently only support 39 bits address width, which is
- * 3-level translation.
- */
-#define VTD_PAGE_LEVEL      3
-#define VTD_CE_AW_39BIT     0x1
-
 typedef uint64_t vtd_pte_t;
 
 struct vtd_root_entry {
@@ -75,6 +68,8 @@ typedef struct vtd_irte vtd_irte_t;
 #define VTD_IRTA_MASK (PAGE_MASK)
 
 void *vtd_reg_base;
+uint8_t max_gaw;
+uint8_t max_page_level;
 
 static uint64_t vtd_root_table(void)
 {
@@ -149,7 +144,7 @@ static void vtd_install_pte(vtd_pte_t *root, iova_t iova,
 	unsigned int offset;
 	void *page;
 
-	for (level = VTD_PAGE_LEVEL; level > level_target; level--) {
+	for (level = max_page_level; level > level_target; level--) {
 		offset = PGDIR_OFFSET(iova, level);
 		if (!(root[offset] & VTD_PTE_RW)) {
 			page = alloc_page();
@@ -213,8 +208,7 @@ void vtd_map_range(uint16_t sid, iova_t iova, phys_addr_t pa, size_t size)
 		memset(ce, 0, sizeof(*ce));
 		/* To make it simple, domain ID is the same as SID */
 		ce->domain_id = sid;
-		/* We only test 39 bits width case (3-level paging) */
-		ce->addr_width = VTD_CE_AW_39BIT;
+		ce->addr_width = max_page_level - 2;
 		ce->slptptr = virt_to_phys(slptptr) >> VTD_PAGE_SHIFT;
 		ce->trans_type = VTD_CONTEXT_TT_MULTI_LEVEL;
 		ce->present = 1;
diff --git a/lib/x86/intel-iommu.h b/lib/x86/intel-iommu.h
index 05b9744..7057417 100644
--- a/lib/x86/intel-iommu.h
+++ b/lib/x86/intel-iommu.h
@@ -26,6 +26,7 @@
 #define Q35_HOST_BRIDGE_IOMMU_ADDR  0xfed90000ULL
 #define VTD_PAGE_SHIFT              PAGE_SHIFT
 #define VTD_PAGE_SIZE               PAGE_SIZE
+#define VTD_PAGE_LEVEL_STRIDE       9
 
 /*
  * Intel IOMMU register specification
@@ -100,7 +101,13 @@
 #define VTD_CAP_SAGAW_39bit         (0x2ULL << VTD_CAP_SAGAW_SHIFT)
 /* 48-bit AGAW, 4-level page-table */
 #define VTD_CAP_SAGAW_48bit         (0x4ULL << VTD_CAP_SAGAW_SHIFT)
-#define VTD_CAP_SAGAW               VTD_CAP_SAGAW_39bit
+/* 57-bit AGAW, 5-level page-table */
+#define VTD_CAP_SAGAW_57bit         (0x8ULL << VTD_CAP_SAGAW_SHIFT)
+#define VTD_CAP_SAGAW(cap)          (((cap) >> VTD_CAP_SAGAW_SHIFT) & 0x1fULL)
+
+/* Maximum Guest Address Widths */
+#define VTD_CAP_MGAW_SHIFT    16
+#define VTD_CAP_MGAW(cap)     ((((cap) >> VTD_CAP_MGAW_SHIFT) & 0x3fULL) + 1)
 
 /* Both 1G/2M huge pages */
 #define VTD_CAP_SLLPS               ((1ULL << 34) | (1ULL << 35))
@@ -118,6 +125,8 @@
 extern void *vtd_reg_base;
 #define vtd_reg(reg) ({ assert(vtd_reg_base); \
 			(volatile void *)(vtd_reg_base + reg); })
+extern  uint8_t max_gaw;
+extern  uint8_t max_page_level;
 
 static inline void vtd_writel(unsigned int reg, uint32_t value)
 {
diff --git a/x86/intel-iommu.c b/x86/intel-iommu.c
index f24170d..9d2194d 100644
--- a/x86/intel-iommu.c
+++ b/x86/intel-iommu.c
@@ -132,25 +132,36 @@ static void vtd_test_ir(void)
 
 int main(int argc, char *argv[])
 {
+	uint64_t dmar_cap;
+	uint8_t sagaw;
+
 	setup_vm();
 	smp_init();
-
 	vtd_init();
 
 	report_prefix_push("vtd_init");
-
 	report("fault status check", vtd_readl(DMAR_FSTS_REG) == 0);
 	report("QI enablement", vtd_readl(DMAR_GSTS_REG) & VTD_GCMD_QI);
 	report("DMAR table setup", vtd_readl(DMAR_GSTS_REG) & VTD_GCMD_ROOT);
 	report("IR table setup", vtd_readl(DMAR_GSTS_REG) & VTD_GCMD_IR_TABLE);
 	report("DMAR enablement", vtd_readl(DMAR_GSTS_REG) & VTD_GCMD_DMAR);
 	report("IR enablement", vtd_readl(DMAR_GSTS_REG) & VTD_GCMD_IR);
-	report("DMAR support 39 bits address width",
-	       vtd_readq(DMAR_CAP_REG) & VTD_CAP_SAGAW);
 	report("DMAR support huge pages", vtd_readq(DMAR_CAP_REG) & VTD_CAP_SLLPS);
-
 	report_prefix_pop();
 
+	dmar_cap = vtd_readq(DMAR_CAP_REG);
+	max_gaw = VTD_CAP_MGAW(dmar_cap);
+	sagaw = VTD_CAP_SAGAW(dmar_cap);
+	max_page_level = (max_gaw - VTD_PAGE_SHIFT)/VTD_PAGE_LEVEL_STRIDE;
+
+	report("address width check", ((1 << (max_page_level - 2)) & sagaw));
+	if (dmar_cap & VTD_CAP_SAGAW_39bit)
+		printf("DMAR supports 39 bits address width.\n");
+	if (dmar_cap & VTD_CAP_SAGAW_48bit)
+		printf("DMAR supports 48 bits address width.\n");
+	if (dmar_cap & VTD_CAP_SAGAW_57bit)
+		printf("DMAR supports 57 bits address width.\n");
+
 	if (!edu_init(&edu_dev)) {
 		printf("Please specify \"-device edu\" to do "
 		       "further IOMMU tests.\n");
-- 
1.9.1
