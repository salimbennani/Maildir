Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 05:30:34 -0000
Received: from icoremail.net (unknown [209.85.214.179])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f0GL8uRbiklkAQ--.30201S3;
	Fri, 09 Nov 2018 10:35:56 +0800 (CST)
Received: from mail-pl1-f179.google.com (unknown [209.85.214.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3W0eJ8uRb7f4fAA--.335S3;
	Fri, 09 Nov 2018 10:35:53 +0800 (CST)
Received: by mail-pl1-f179.google.com with SMTP id s5-v6so203880plq.11
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 18:35:53 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=8cQ6S9BBRFzVUrjgDvRYnXp7/yu62ggIzS30Gjpq+hc=;
        b=Fv9YVmrOZSjRJPdVy6uLQ5wIVgMHQYSduT6f3LKglun4hP0jCVMHXJ3VlYdTGQTswM
         QxPZGrCR8d8CB2HmchRTGUkruz32mHHqZe+45Nr0vqBhv5oXZ+dgolPXYAw+cqmQjt4y
         cBVJKozWC4Pvb6rH5ovRXMAA+EdzetVNNoFB8HWzWqC8AJBV660X1hZZZWSTvzyOfPr5
         8yV+d/OZ8Uxymdpa3q8bymQ7R82tz83LFrAUr1ZS2H9bQ+G1bj8tCz+OM8j1SG0koLIF
         bZhEd5BKaGmJnFCO+frnsjpJ3sYYYm4ZRxgzcqylTqExs7Vaj6ppvPbcFcdmaeiSMjs7
         tewg==
X-Gm-Message-State: AGRZ1gKv9EPFNGx8kZwyxU8OXmKY0M6UXnanBWJDCD35iJkQKewnIQWS
	459bOnmRvSEGjO8PxodXR0RxxZDFCp6pea3+8CBK31ioR1RAfEx0vg==
X-Received: by 2002:a17:902:6b4b:: with SMTP id g11-v6mr7093577plt.213.1541730953148;
        Thu, 08 Nov 2018 18:35:53 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp996373pjt;
        Thu, 8 Nov 2018 18:35:52 -0800 (PST)
X-Google-Smtp-Source: AJdET5efP2JBlvey7fITlVoAvq0jHBuyb0O50ez69un6nFqHUXLjsqxdn/nmCPh7Pka/0vNRkKp+
X-Received: by 2002:a17:902:2f84:: with SMTP id t4-v6mr7006453plb.239.1541730952080;
        Thu, 08 Nov 2018 18:35:52 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541730952; cv=none;
        d=google.com; s=arc-20160816;
        b=qXAKLGKf6Xo3cPuiAvnQGWCQphZzi3OdE+TbLk3z2WK7xo29zIEdk7Ex6EMBPCnGIZ
         L4AgljgF/ucOfB56lD14R+OlO3dgwSfAPwwJ+dSGMw73wPelPGDylHIfOvUmmDNgKUPv
         jSrxra5YYjRND2lhxEdt1LlxVGGW7zdPWvuRaoBVkkwv58flSw/OdkBvhSoWoH3Is0lJ
         aV2n7O1Frf/OMuKMDVXdjw0uJHUCJSONJAvKpsJxMQetqiXaoz5bK/TgmXLyDJmGBuxc
         E1Hwf3+0Wi49xJhGzKLqYnxmJD2bYKz0gthGX8IxrQkeNCG7o7c1ZKJfMGJesQ5c94S5
         xmzA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :references:in-reply-to:mime-version:dkim-signature;
        bh=8cQ6S9BBRFzVUrjgDvRYnXp7/yu62ggIzS30Gjpq+hc=;
        b=y/zQmu5yauIlEHpzAIbT5Sh6omnGdYjhuLTEFsVEPHDAThP8Ri6cm0E81qxZKLJpTS
         7hT6y4SW5dzOzUsadzYqQOxtLnUTyHktnoYi7qwE7Z/78TDir+d94jjnoMdebb9zO4Ol
         837P8rUQqC3MHntn3gM82nl9XUOv6ddmyCGfwxEyVONb/y9pu4VGAeK5s3HKuSBept+D
         7waZG8ZsghSYzv+z6lvRP8DYfI3FLuBTNZrEMms4N2YTFQWwgEQ4TUgxz5WGRmOf2mzK
         l3MRnsHWcINRKsIWBJaEt1t1Q++j2eg2o/Mhwex3ctypILMvYjXx4Q0YPUiPabhuGdzf
         pBTg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=CVOuLs9q;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l36-v6si6532595plg.289.2018.11.08.18.35.36;
        Thu, 08 Nov 2018 18:35:52 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727514AbeKIMOB (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 07:14:01 -0500
Received: from mail-lf1-f67.google.com ([209.85.167.67]:37138 "EHLO
        mail-lf1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727349AbeKIMOA (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 07:14:00 -0500
Received: by mail-lf1-f67.google.com with SMTP id p17so245876lfh.4
        for <linux-kernel@vger.kernel.org>; Thu, 08 Nov 2018 18:35:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=8cQ6S9BBRFzVUrjgDvRYnXp7/yu62ggIzS30Gjpq+hc=;
        b=CVOuLs9qMbOP/2XGZcWbduKrhaTZSAJYMfnJN3u9DAYserhfgnLKRDX9tJFgmyrF0a
         E2gmzdvo4h5esNdxdwe7Uf5s8QmhEM75Q1KroVShcreln4RHjOe7hOoZL3UHhCvaeRxF
         3HhsqEq9GiptbaopYfr/Ka2gbyTLyzt9tXA9M=
X-Received: by 2002:a19:690d:: with SMTP id e13mr2083935lfc.84.1541730928254;
 Thu, 08 Nov 2018 18:35:28 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a2e:95ca:0:0:0:0:0 with HTTP; Thu, 8 Nov 2018 18:35:27 -0800 (PST)
In-Reply-To: <3a5ca343-5c48-b257-4ba4-5a7e223efbf8@gmail.com>
References: <1541542052-10081-1-git-send-email-jacek.anaszewski@gmail.com>
 <1541542052-10081-3-git-send-email-jacek.anaszewski@gmail.com>
 <CAMz4ku+K=Jw56C2YczFMcVGRPUHMpSw4_iWEsNmKDBQgWjmEqQ@mail.gmail.com> <3a5ca343-5c48-b257-4ba4-5a7e223efbf8@gmail.com>
From: Baolin Wang <baolin.wang@linaro.org>
Date: Fri, 9 Nov 2018 10:35:27 +0800
Message-ID: <CAMz4ku+fMrrniiLPSAGHsAidhB7n=O=OCL2voZz_tn8TBhcrwA@mail.gmail.com>
Subject: Re: [PATCH 02/24] leds: core: Add support for composing LED class
 device names
To: Jacek Anaszewski <jacek.anaszewski@gmail.com>
Cc: Linux LED Subsystem <linux-leds@vger.kernel.org>,
        DTML <devicetree@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>, Pavel Machek <pavel@ucw.cz>,
        Rob Herring <robh@kernel.org>, Daniel Mack <daniel@zonque.org>,
        Dan Murphy <dmurphy@ti.com>,
        Linus Walleij <linus.walleij@linaro.org>,
        Oleh Kravchenko <oleg@kaa.org.ua>,
        Sakari Ailus <sakari.ailus@linux.intel.com>,
        Simon Shields <simon@lineageos.org>,
        Xiaotong Lu <xiaotong.lu@spreadtrum.com>
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3W0eJ8uRb7f4fAA--.335S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxtFWfGry3Gr1DtFy7Gw1kAFb_yoWfJF4xpF
	W7GF4UCFnrJry7C3saq3Z293WftrW8Ja17JF17Ga4jvr90vr9aqr42kw1Y9Fy5Jr48Aa1q
	va1UGF9agF90kFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r4UMxkI7II2
	jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcVC0I7IYx2IY6xkF7I
	0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2z280aVCY1x0267AK
	xVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4w
	CFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE
	14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04k26c
	xKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bpMa5UUUUU=

Hi Jacek,

On 9 November 2018 at 04:47, Jacek Anaszewski
<jacek.anaszewski@gmail.com> wrote:
> Hi Baolin,
>
> Thanks for the review.
>
> On 11/07/2018 08:20 AM, Baolin Wang wrote:
>> Hi Jacek,
>>
>> On 7 November 2018 at 06:07, Jacek Anaszewski
>> <jacek.anaszewski@gmail.com> wrote:
>>> Add public led_compose_name() API for composing LED class device
>>> name basing on fwnode_handle data. The function composes device name
>>> according to either a new <color:function> pattern or the legacy
>>> <devicename:color:function> pattern. The decision on using the
>>> particular pattern is made basing on whether fwnode contains new
>>> "function" and "color" properties, or the legacy "label" proeprty.
>>>
>>> Backwards compatibility with in-driver hard-coded LED class device
>>> names is assured thanks to the default_desc argument.
>>>
>>> In case none of the aformentioned properties was found, then, for OF
>>> nodes, the node name is adopted for LED class device name.
>>>
>>> Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
>>> Cc: Baolin Wang <baolin.wang@linaro.org>
>>> Cc: Daniel Mack <daniel@zonque.org>
>>> Cc: Dan Murphy <dmurphy@ti.com>
>>> Cc: Linus Walleij <linus.walleij@linaro.org>
>>> Cc: Oleh Kravchenko <oleg@kaa.org.ua>
>>> Cc: Sakari Ailus <sakari.ailus@linux.intel.com>
>>> Cc: Simon Shields <simon@lineageos.org>
>>> Cc: Xiaotong Lu <xiaotong.lu@spreadtrum.com>
>>> ---
>>>  Documentation/leds/leds-class.txt |  2 +-
>>>  drivers/leds/led-core.c           | 71 +++++++++++++++++++++++++++++++++++++++
>>>  include/linux/leds.h              | 32 ++++++++++++++++++
>>>  3 files changed, 104 insertions(+), 1 deletion(-)
>>>
>>> diff --git a/Documentation/leds/leds-class.txt b/Documentation/leds/leds-class.txt
>>> index 836cb16..e9009c4 100644
>>> --- a/Documentation/leds/leds-class.txt
>>> +++ b/Documentation/leds/leds-class.txt
>>> @@ -43,7 +43,7 @@ LED Device Naming
>>>
>>>  Is currently of the form:
>>>
>>> -"devicename:colour:function"
>>> +"colour:function"
>>>
>>>  There have been calls for LED properties such as colour to be exported as
>>>  individual led class attributes. As a solution which doesn't incur as much
>>> diff --git a/drivers/leds/led-core.c b/drivers/leds/led-core.c
>>> index ede4fa0..f7371fc 100644
>>> --- a/drivers/leds/led-core.c
>>> +++ b/drivers/leds/led-core.c
>>> @@ -16,6 +16,8 @@
>>>  #include <linux/list.h>
>>>  #include <linux/module.h>
>>>  #include <linux/mutex.h>
>>> +#include <linux/of.h>
>>> +#include <linux/property.h>
>>>  #include <linux/rwsem.h>
>>>  #include "leds.h"
>>>
>>> @@ -327,3 +329,72 @@ void led_sysfs_enable(struct led_classdev *led_cdev)
>>>         led_cdev->flags &= ~LED_SYSFS_DISABLE;
>>>  }
>>>  EXPORT_SYMBOL_GPL(led_sysfs_enable);
>>> +
>>> +static void led_parse_properties(struct fwnode_handle *fwnode,
>>> +                                struct led_properties *props)
>>> +{
>>> +       int ret;
>>> +
>>> +       if (!fwnode)
>>> +               return;
>>> +
>>> +       ret = fwnode_property_read_string(fwnode, "label", &props->label);
>>> +       if (!ret)
>>> +               return;
>>> +
>>> +       ret = fwnode_property_read_string(fwnode, "function", &props->function);
>>> +       if (ret)
>>> +               pr_info("Failed to parse function property\n");
>>> +
>>> +       ret = fwnode_property_read_string(fwnode, "color", &props->color);
>>> +       if (ret)
>>> +               pr_info("Failed to parse color property\n");
>>
>> Now the color and function properties can be optional, so we should
>> deal with different return errors.
>> -EINVAL means we have not set color or function property, which means
>> we should not give failure message for users (maybe "not supply color
>> property\n") and return 0 as success.
>
> The lack of any of these properties is not critical, therefore this
> function does not return the error code, but only prints the status.
> Please note that I'm not using pr_error(), but pr_info().
> Related to the message text - I agree, I will change it to e.g.
> "color property not found"

Yes, that's reasonable.

>
>> For other errors, we should not ignore them, instead we should give
>> failure messages and return errors.
>
> I've skimmed through other kernel drivers and vast majority of
> them don't check exact failure code in case of non-zero return,
> but assume that property is missing, and eventually report
> error code. I'd do the same here.

Fair enough. You can still add my tested tag. Thanks.

>> Tested-by: Baolin Wang <baolin.wang@linaro.org>
>>
>>> +}
>>> +
>>> +int led_compose_name(struct fwnode_handle *fwnode, const char *led_hw_name,
>>> +                    const char *default_desc, char *led_classdev_name)
>>> +{
>>> +       struct led_properties props = {};
>>> +
>>> +       if (!led_classdev_name)
>>> +               return -EINVAL;
>>> +
>>> +       led_parse_properties(fwnode, &props);
>>> +
>>> +       if (props.label) {
>>> +               /*
>>> +                * Presence of 'label' DT property implies legacy LED name,
>>> +                * formatted as <devicename:color:function>, with possible
>>> +                * section omission if doesn't apply to given device.
>>> +                *
>>> +                * If no led_hw_name has been passed, then it indicates that
>>> +                * DT label should be used as-is for LED class device name.
>>> +                * Otherwise the label is prepended with led_hw_name to compose
>>> +                * the final LED class device name.
>>> +                */
>>> +               if (!led_hw_name) {
>>> +                       strncpy(led_classdev_name, props.label,
>>> +                               LED_MAX_NAME_SIZE);
>>> +               } else {
>>> +                       snprintf(led_classdev_name, LED_MAX_NAME_SIZE, "%s:%s",
>>> +                                led_hw_name, props.label);
>>> +               }
>>> +       } else if (props.function || props.color) {
>>> +               snprintf(led_classdev_name, LED_MAX_NAME_SIZE, "%s:%s",
>>> +                        props.color ?: "", props.function ?: "");
>>> +       } else if (default_desc) {
>>> +               if (!led_hw_name) {
>>> +                       pr_err("Legacy LED naming requires devicename segment");
>>> +                       return -EINVAL;
>>> +               }
>>> +               snprintf(led_classdev_name, LED_MAX_NAME_SIZE, "%s:%s",
>>> +                        led_hw_name, default_desc);
>>> +       } else if (is_of_node(fwnode)) {
>>> +               strncpy(led_classdev_name, to_of_node(fwnode)->name,
>>> +                       LED_MAX_NAME_SIZE);
>>> +       } else
>>> +               return -EINVAL;
>>> +
>>> +       return 0;
>>> +}
>>> +EXPORT_SYMBOL_GPL(led_compose_name);
>>> diff --git a/include/linux/leds.h b/include/linux/leds.h
>>> index 646c49a..ddb4001 100644
>>> --- a/include/linux/leds.h
>>> +++ b/include/linux/leds.h
>>> @@ -238,6 +238,32 @@ extern void led_sysfs_disable(struct led_classdev *led_cdev);
>>>  extern void led_sysfs_enable(struct led_classdev *led_cdev);
>>>
>>>  /**
>>> + * led_compose_name - compose LED class device name
>>> + * @child: child fwnode_handle describing a LED,
>>> + *        or a group of synchronized LEDs.
>>> + * @led_hw_name: name of the LED controller, used when falling back to legacy
>>> + *              LED naming; it should be set to NULL in new LED class drivers
>>> + * @default_desc: default <color:function> tuple, for backwards compatibility
>>> + *               with in-driver hard-coded LED names used as a fallback when
>>> + *               "label" DT property was absent; it should be set to NULL
>>> + *               in new LED class drivers
>>> + * @led_classdev_name: composed LED class device name
>>> + *
>>> + * Create LED class device name basing on the configuration provided by the
>>> + * board firmware. The name can have a legacy form <devicename:color:function>,
>>> + * or a new form <color:function>. The latter is chosen if at least one of
>>> + * "color" or "function" properties is present in the fwnode, leaving the
>>> + * section blank if the related property is absent. The former is applied
>>> + * when legacy "label" property is present in the fwnode. In case none of the
>>> + * aformentioned properties was found, then, for OF nodes, the node name
>>> + * is adopted for LED class device name.
>>> + *
>>> + * Returns: 0 on success or negative error value on failure
>>> + */
>>> +extern int led_compose_name(struct fwnode_handle *child, const char *led_hw_name,
>>> +                           const char *default_desc, char *led_classdev_name);
>>> +
>>> +/**
>>>   * led_sysfs_is_disabled - check if LED sysfs interface is disabled
>>>   * @led_cdev: the LED to query
>>>   *
>>> @@ -414,6 +440,12 @@ struct led_platform_data {
>>>         struct led_info *leds;
>>>  };
>>>
>>> +struct led_properties {
>>> +       const char *color;
>>> +       const char *function;
>>> +       const char *label;
>>> +};
>>> +
>>>  struct gpio_desc;
>>>  typedef int (*gpio_blink_set_t)(struct gpio_desc *desc, int state,
>>>                                 unsigned long *delay_on,
>>> --
>>> 2.1.4
>>>
>>
>>
>>
>
> --
> Best regards,
> Jacek Anaszewski



-- 
Baolin Wang
Best Regards
