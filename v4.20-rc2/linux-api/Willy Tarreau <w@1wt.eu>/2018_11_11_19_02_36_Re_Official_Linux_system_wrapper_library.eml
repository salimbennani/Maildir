Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:05:11 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH9LSDOhb3_B0AQ--.35702S3;
	Sun, 11 Nov 2018 19:04:51 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXekbQDOhbTdorAA--.1315S3;
	Sun, 11 Nov 2018 19:04:49 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id w22-v6so2951375plk.0
        for <xuliker@zju.edu.cn>; Sun, 11 Nov 2018 03:04:49 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=tT85OQLGkNbKjRZdtH9gVhHt8DpLC8oT3KP8zt0l7Xs=;
        b=pQDyK0G8UgJeXK4gqsq76krwWrJ4RmeqjhtkkZBA18X1Nza60O90VpUXsTSE6kcP3s
         RXlsMnP4VsvxiyVQtnL6zVrZJ9FqbKj6Qx8bgE6apEuz3w5haWPbhK/z3Bwvm+JTb3w1
         j1OHSL8Y1TOXXJ/BwfOI7wo/ZiZ+koZYJAXHyDtGRZ6hLSjBQm7hIkL07jVJmmAK8kUb
         VZeiupDkfBNtpGjwGb/75SQQSScwZ1l4WCorAmT6eY1d1w3JY4SbWsc+nDrTSoCN/UDU
         rclrgaWB+VI/KvfVzjOPeQP2bfWY6L1CB4xPhmx3oeMzukqM7dv0D+555c5g8dpZkjsf
         iBrQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKHnpTIuvvHaT9mku0JQHSiNaZraNSyXcrGSr8v1gm8J3wlyHKe
	XwUfjQAXActnQRfyP697F26bYHGYCSIu6ePAgF1Rrb7ng2EheVQ=
X-Received: by 2002:a17:902:8e81:: with SMTP id bg1-v6mr15804258plb.192.1541934288691;
        Sun, 11 Nov 2018 03:04:48 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1999507pjt;
        Sun, 11 Nov 2018 03:04:47 -0800 (PST)
X-Google-Smtp-Source: AJdET5cP1fn25H5VYX3Oxk2AgqBmPMolUuroFCE3m4lMkh2/5IhKpI6VFYoBTXZxXa/k2iWoQSKp
X-Received: by 2002:a63:1444:: with SMTP id 4mr13915625pgu.430.1541934287730;
        Sun, 11 Nov 2018 03:04:47 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541934287; cv=none;
        d=google.com; s=arc-20160816;
        b=ugp4EVYdbiuhLxJs1uIcAcE5MDNnD43Mhj5tUO6suVhZlWSqWq9bxBd4rYPavPBXqd
         LImn6jV2vtVnfE2zAcXXcQsE/bx3FaUElIaZE8p1DxBYqIfsOPUj4i6OqHR+FPvkZNcQ
         28MiR5+IulBIcjmIJ/pM/Pv7BhaCwSGLR6/7HCfTnXnnnMVWK7J/qjR6YG0OdDdWB0Mj
         GzFYipOVu14Z5qHY7PKv1BrHOA4DiOcERqcKe1a2zaQjqPtEUZ9CfK/O69iHjI5QI1Wr
         Hs+2CUJpvrdjzW6+b/lOUIoXQDaesJsL5xAwshGO1ALeTOC41IFmT9vP6fXKxV7VxMmb
         0Z+A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=tT85OQLGkNbKjRZdtH9gVhHt8DpLC8oT3KP8zt0l7Xs=;
        b=TLpZ7aK5I2/t80KXZAfkTjYxFRBa7aK98Yc8NmlPdRSPrVHsahz1r4u1YDOpS8v4RY
         +Jsif8l7s4BQO1oxxgLMGOMu10ukvleW3+duyR3mqKA63wVWA8hKQO6JHUiDx2cpE6sP
         5E9PY1C6/p2CyzIorcaQrE2gEO6iEcQeuF44dARQ04MlngYHeMo1uaekwOB1GLlZQl6O
         wrVSb1qnLVRJL3+WIoEh0ov7QgRZdf21/BdshY/5Kl35iI6NNl7UcZhI1x+yQNRwbnAW
         zCyAkvFzcBgMSMflI9Yzbwc+YDzNHQ+OmRy79ux0namheB4sEwjtbmHxFE95EBuPTNCJ
         Et6w==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id w8si15771pgm.467.2018.11.11.03.04.32;
        Sun, 11 Nov 2018 03:04:47 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727754AbeKKUvH (ORCPT <rfc822;berg.ding@gmail.com> + 99 others);
        Sun, 11 Nov 2018 15:51:07 -0500
Received: from wtarreau.pck.nerim.net ([62.212.114.60]:41860 "EHLO 1wt.eu"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727344AbeKKUvH (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 15:51:07 -0500
Received: (from willy@localhost)
        by pcw.home.local (8.15.2/8.15.2/Submit) id wABB2aqv004374;
        Sun, 11 Nov 2018 12:02:36 +0100
Date: Sun, 11 Nov 2018 12:02:36 +0100
From: Willy Tarreau <w@1wt.eu>
To: Florian Weimer <fweimer@redhat.com>
Cc: "Michael Kerrisk (man-pages)" <mtk.manpages@gmail.com>,
        Daniel Colascione <dancol@google.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Joel Fernandes <joelaf@google.com>,
        Linux API <linux-api@vger.kernel.org>,
        Vlastimil Babka <vbabka@suse.cz>,
        "Carlos O'Donell" <carlos@redhat.com>,
        "libc-alpha@sourceware.org" <libc-alpha@sourceware.org>
Subject: Re: Official Linux system wrapper library?
Message-ID: <20181111110236.GA4189@1wt.eu>
References: <CAKOZuesB4R=dCz4merWQN0FSCGrXmOgUUr4ienSbStBJguNv8g@mail.gmail.com>
 <bbc12da5-830e-99a7-95e3-d9da42947dc9@gmail.com>
 <20181111081725.GA30248@1wt.eu>
 <87y39zx5xa.fsf@oldenburg.str.redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <87y39zx5xa.fsf@oldenburg.str.redhat.com>
User-Agent: Mutt/1.6.1 (2016-04-27)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXekbQDOhbTdorAA--.1315S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCFyDJr48Ar15XFW5JF48Xrb_yoWrJw15pF
	W3KrnFkF4kC3W8Crn2v3W7ZFyI93yxA345trn5XrWkAr98W3WSgr4fKrWY9F9rCr9akw1j
	qrW09a15ur98AaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPmb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r4kMxkI7II2
	jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcVC0I7IYx2IY6xkF7I
	0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E
	14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x
	804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_Jrv_JF1lx2IqxVAqx4xG
	67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MI
	IYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZE
	Xa7IUOWCJJUUUUU==

On Sun, Nov 11, 2018 at 11:30:25AM +0100, Florian Weimer wrote:
> * Willy Tarreau:
> 
> > On Sun, Nov 11, 2018 at 07:55:30AM +0100, Michael Kerrisk (man-pages) wrote:
> >> [1] https://sourceware.org/bugzilla/show_bug.cgi?id=6399 is a
> >>     longstanding example.
> >
> > This one was a sad read and shows that applications will continue to
> > suffer from glibc's prehistorical view on operating systems and will
> > continue to have to define their own syscall wrappers to exploit the
> > full potential of the modern operating systems they execute on.
> 
> What's modern about a 15-bit thread identifier?

It's 15-bit on 32-bit systems, and 22 on 64-bit, hence you can have
4 million threads and/or processes on a single system image provided
you have the resources for that of course.

> I understand that using this interface is required in some cases (which
> includes some system calls for which glibc does provide wrappers), but I
> assumed that it was at least understood that these reusable IDs for
> tasks were an extremely poor interface.  Aren't the resulting bugs
> common knowledge?

Sure, just as are the bugs created by people trying to implement their
own syscall wrappers. It's not by denying access to some native system
interfaces that you will prevent users from accessing them, you'll just
force them to work around the restriction and make things even worse.

> > This reminds me when one had to write their own spinlocks and atomics
> > many years ago. Seeing comments suggesting an application should open
> > /proc/$PID makes me really wonder if people actually want to use slow
> > and insecure applications designed this way.
> 
> I don't understand.  If you want a non-reusable identifier, you have to
> go through the /proc interface anyway.  I think the recommendation is to
> use the PID/start time combination to get a unique process identifier or
> something like that.

It depends what you want to achieve. If you just need the tid, the one
you'll pass to sched_setaffinity(), gettid() is fine. There are two issues
with abusing /proc to emulate syscalls :
  - it's sometimes much slower than the equivalent syscall and can
    encourage users to cache the resulting values when they should not
  - either it's done upon process startup and it may not get valid value
    or may not work if /proc is not mounted yet (think init, mount etc),
    or it's done upon first use and can break daemons which chroot()
    themselves.

Syscalls don't have such limitations and are much safer to use. For other
things it's quite possible that you cannot rely on this syscall at all,
it's not a solution to everything, but it's a nice solution to all cases
where you need to access the system-wide identifier to pin a thread to a
given CPU set or renice it.

> I wanted to add gettid to glibc this cycle, but your comments suggest to
> me that if we did this, we'd likely never get a proper non-reusable
> thread identifier from the kernel.  So I'm not sure what do anymore.

"Look people, I was about to do what we all refused to do for 10 years
now and Willy's comment made me change my mind, I'm sorry". The *real*
argument that most users could understand is "guys, we're sorry, but we
are running out of time and we won't work on this low priority stuff,
so someone else will have to take care of it".

In my opinion what matters is not whether or not people will use it
appropriately, but that its validity, side effects and wrong assumptions
are properly documented so that users don't shoot themselves in the foot.
But I guess that most of those defining it by themselves already figured
this out and are happy to use this available syscall when their application
wants to make use of certain feature that are offered by their operating
system.

Thanks,
Willy
