Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:58:00 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDXvwqNHOZb6ylrAQ--.32740S3;
	Sat, 10 Nov 2018 07:47:25 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnS0eJHOZbuKUkAA--.3112S3;
	Sat, 10 Nov 2018 07:47:21 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id p4-v6so1616444plo.5
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 15:47:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=/V73fWpvPwBtZ0J74Rje2LRbYmSA3wE3tXBHscYlKyM=;
        b=eYhyRG65pL6BNlYS3LspxnmU0JnPWCQXaX5y90Zxile5SqMpaOnzhlFIfkM5rVSK+k
         PZZTl/qKHxC+f5MIBhwzwnKa/P+8kFUU3b1RbUs2zautcrod/2gZtdipnY34vQKqM0yo
         AVlLA6Tp6rGot6rRiYtSFR8zepnoG5vono8WOpnIn+67wwIkCznZwvrHygUNmoW5Uz7e
         BKu8J/1RUie6ler7e36GJvwf74VY70TJooIbrxXSDCDaSC38u9cIvsdsz6kepLJkKt8i
         o+wzJwXJeKR91Y7z7t8McItjA8WATBIIUqCK7rk6YA2gEMtxtbXZWBtjo4Qwa3zEwuuP
         z/GA==
X-Gm-Message-State: AGRZ1gLPaBQQAaGcdxIaQGiheLmSwP7cfvvUKFgQJ1ZRYwLlGIAF84G9
	Q6rL493Eb8RmrvL6Mljk6L8GfC66Yn7TC+0uSSGfd0cCWOo5lt58Rg==
X-Received: by 2002:a17:902:560f:: with SMTP id h15-v6mr7813133pli.160.1541807240994;
        Fri, 09 Nov 2018 15:47:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp524401pjt;
        Fri, 9 Nov 2018 15:47:20 -0800 (PST)
X-Google-Smtp-Source: AJdET5c1iHB5wQ6per4x+1Bk7wyqv6895gNNTOP5eSqZc7bW1OpJwVLXZglXuOyLnarhknMWjcYX
X-Received: by 2002:a65:4646:: with SMTP id k6mr9201212pgr.153.1541807240139;
        Fri, 09 Nov 2018 15:47:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541807240; cv=none;
        d=google.com; s=arc-20160816;
        b=lhTBQVPTnkokKXZpu1heW+kfJlhfzRW6sbpd1tXXZfMpf1kHOje8qw8R7sKZa2VcRS
         mk7WOJ6C/FbMF0KpNm1AfQ8L/qHtxhPWIHXhGXOUksMPKX9azmgvWvXZWB0293gFgN8m
         +qabhWHxB+/K9ZaiGmWAqk968ZPoI1eUU4tepDQKjtBx5xcaLx/x05qEmKX61ry4Baw1
         IXnrRhAE6mTnV/z3OCQDbipimm2K59ZbLhljPTckPOK0SaAsQEnqxV0M1lhyv84cq2VI
         EIP67RN/1jcJgq0Dv3uPKXwNCs9rO8pHJ/18M6okuEbp54BHMIympczqyUR/RIooPs5l
         awJA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=/V73fWpvPwBtZ0J74Rje2LRbYmSA3wE3tXBHscYlKyM=;
        b=WQ6s0Wb3L3aJaSUbsbC91hah+Q5+fkJaT9xKXqR8PK/1Qc7Hv5HYUIldHu1HKN5+hn
         yN5Z9TtX2vm7fNWCIo17g+a0KoMXleim1dnncFgitplk1O0ozZ8NW93Os3TIFzNoV8ch
         VwW67Luo8oGfU0fjzYlezXD1aQLNpw8pw8EYBMarnynLMpFyWreajiEMD0puduo9PTim
         v9hnpvMLtpPGBEml6MqQgjQizowJ4NVMLusNKAq5O+/ZOXqDqaYOL1uveap+O93RF5Oj
         Mlk28MVifqxh4ELYykSORdh9cKZGYId0qf25z4B44N0He1xZARKkRb1t3/FHZsNJRJaU
         6Iqw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@joelfernandes.org header.s=google header.b=cWULhBVa;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id b4-v6si9908356pfa.25.2018.11.09.15.47.05;
        Fri, 09 Nov 2018 15:47:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728936AbeKJJ3c (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Sat, 10 Nov 2018 04:29:32 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:32999 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726545AbeKJJ3b (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 04:29:31 -0500
Received: by mail-pl1-f194.google.com with SMTP id w22-v6so1623337plk.0
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 15:46:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=joelfernandes.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=/V73fWpvPwBtZ0J74Rje2LRbYmSA3wE3tXBHscYlKyM=;
        b=cWULhBVayighgnAbfptejzLfKqBzQa0oI2Xy17MypLNoSvlzm7jpkDUBrMAGpqf2bH
         FY767bZhrBFPLZkhXSOWzd0NnGzpNWur03HbJr6RYhTEZpTj2LoJKpZNXcjSH32sW8g6
         S5eoy0P+mpyqyxoyHc1rdcrUaECIqwuOBRE9o=
X-Received: by 2002:a17:902:c03:: with SMTP id 3-v6mr5356929pls.141.1541807198676;
        Fri, 09 Nov 2018 15:46:38 -0800 (PST)
Received: from localhost ([2620:0:1000:1601:3aef:314f:b9ea:889f])
        by smtp.gmail.com with ESMTPSA id b69-v6sm8691173pfc.150.2018.11.09.15.46.37
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 09 Nov 2018 15:46:37 -0800 (PST)
Date: Fri, 9 Nov 2018 15:46:36 -0800
From: Joel Fernandes <joel@joelfernandes.org>
To: Jann Horn <jannh@google.com>
Cc: kernel list <linux-kernel@vger.kernel.org>, jreck@google.com,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Daniel Colascione <dancol@google.com>,
        Bruce Fields <bfields@fieldses.org>, jlayton@kernel.org,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>, minchan@kernel.org,
        shuah@kernel.org, valdis.kletnieks@vt.edu,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to
 memfd
Message-ID: <20181109234636.GA136491@google.com>
References: <20181108041537.39694-1-joel@joelfernandes.org>
 <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnS0eJHOZbuKUkAA--.3112S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCFWkKrWxKr1DCr1UCF43trb_yoWrGF4fpF
	Z5Ka1Yyr4kJFWxA3s7C3Z7C3WFq3yxGF17Kr9xWr1UZwnIqF10qF4YgF4UuF93Ar4xXayj
	vw45Ar97CF90vaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUm2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6FWlc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwCFI7km07C267AKxVWUAVWU
	twC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1V
	AFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVF
	xhVjvjDU0xZFpf9x07bLpBhUUUUU=

On Fri, Nov 09, 2018 at 10:06:31PM +0100, Jann Horn wrote:
> +linux-api for API addition
> +hughd as FYI since this is somewhat related to mm/shmem
> 
> On Fri, Nov 9, 2018 at 9:46 PM Joel Fernandes (Google)
> <joel@joelfernandes.org> wrote:
> > Android uses ashmem for sharing memory regions. We are looking forward
> > to migrating all usecases of ashmem to memfd so that we can possibly
> > remove the ashmem driver in the future from staging while also
> > benefiting from using memfd and contributing to it. Note staging drivers
> > are also not ABI and generally can be removed at anytime.
> >
> > One of the main usecases Android has is the ability to create a region
> > and mmap it as writeable, then add protection against making any
> > "future" writes while keeping the existing already mmap'ed
> > writeable-region active.  This allows us to implement a usecase where
> > receivers of the shared memory buffer can get a read-only view, while
> > the sender continues to write to the buffer.
> > See CursorWindow documentation in Android for more details:
> > https://developer.android.com/reference/android/database/CursorWindow
> >
> > This usecase cannot be implemented with the existing F_SEAL_WRITE seal.
> > To support the usecase, this patch adds a new F_SEAL_FUTURE_WRITE seal
> > which prevents any future mmap and write syscalls from succeeding while
> > keeping the existing mmap active.
> 
> Please CC linux-api@ on patches like this. If you had done that, I
> might have criticized your v1 patch instead of your v3 patch...

Ok, will do from next time.

> > The following program shows the seal
> > working in action:
> [...]
> > Cc: jreck@google.com
> > Cc: john.stultz@linaro.org
> > Cc: tkjos@google.com
> > Cc: gregkh@linuxfoundation.org
> > Cc: hch@infradead.org
> > Reviewed-by: John Stultz <john.stultz@linaro.org>
> > Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
> > ---
> [...]
> > diff --git a/mm/memfd.c b/mm/memfd.c
> > index 2bb5e257080e..5ba9804e9515 100644
> > --- a/mm/memfd.c
> > +++ b/mm/memfd.c
> [...]
> > @@ -219,6 +220,25 @@ static int memfd_add_seals(struct file *file, unsigned int seals)
> >                 }
> >         }
> >
> > +       if ((seals & F_SEAL_FUTURE_WRITE) &&
> > +           !(*file_seals & F_SEAL_FUTURE_WRITE)) {
> > +               /*
> > +                * The FUTURE_WRITE seal also prevents growing and shrinking
> > +                * so we need them to be already set, or requested now.
> > +                */
> > +               int test_seals = (seals | *file_seals) &
> > +                                (F_SEAL_GROW | F_SEAL_SHRINK);
> > +
> > +               if (test_seals != (F_SEAL_GROW | F_SEAL_SHRINK)) {
> > +                       error = -EINVAL;
> > +                       goto unlock;
> > +               }
> > +
> > +               spin_lock(&file->f_lock);
> > +               file->f_mode &= ~(FMODE_WRITE | FMODE_PWRITE);
> > +               spin_unlock(&file->f_lock);
> > +       }
> 
> So you're fiddling around with the file, but not the inode? How are
> you preventing code like the following from re-opening the file as
> writable?
> 
> $ cat memfd.c
> #define _GNU_SOURCE
> #include <unistd.h>
> #include <sys/syscall.h>
> #include <printf.h>
> #include <fcntl.h>
> #include <err.h>
> #include <stdio.h>
> 
> int main(void) {
>   int fd = syscall(__NR_memfd_create, "testfd", 0);
>   if (fd == -1) err(1, "memfd");
>   char path[100];
>   sprintf(path, "/proc/self/fd/%d", fd);
>   int fd2 = open(path, O_RDWR);
>   if (fd2 == -1) err(1, "reopen");
>   printf("reopen successful: %d\n", fd2);
> }
> $ gcc -o memfd memfd.c
> $ ./memfd
> reopen successful: 4

Great catch and this is indeed an issue :-(. I verified it too.

> That aside: I wonder whether a better API would be something that
> allows you to create a new readonly file descriptor, instead of
> fiddling with the writability of an existing fd.

Android usecases cannot deal with a new fd number because it breaks the
continuity of having the same old fd, as Dan also pointed out.

Also such API will have the same issues you brought up?

thanks,

 - Joel
