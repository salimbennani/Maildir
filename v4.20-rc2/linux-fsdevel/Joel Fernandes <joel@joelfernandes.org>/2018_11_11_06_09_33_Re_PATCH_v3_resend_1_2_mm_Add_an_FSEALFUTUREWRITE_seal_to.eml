Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:04:06 -0000
Received: from icoremail.net (unknown [209.85.210.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+aEV+dbRmVxAQ--.34240S3;
	Sun, 11 Nov 2018 06:11:16 +0800 (CST)
Received: from mail-pf1-f182.google.com (unknown [209.85.210.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnBkKCV+dbrMYoAA--.11024S3;
	Sun, 11 Nov 2018 06:11:14 +0800 (CST)
Received: by mail-pf1-f182.google.com with SMTP id b11-v6so2511649pfi.5
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 14:11:14 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :content-transfer-encoding:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=ScNeU0zCwc0gxmVUGHqn5C3vnac335Dk/8NovnhOc4M=;
        b=CXEomGxsSo8Z/SPvKPFzNG31gRCMW7k2K8G4ZPBNTV7jiwicBQia9jsbymwqXk9FSs
         rzaUxlNen1olMQXhsHpYuFKGS8UXq6ETPr8bRO0EC7wfRgJ32fE6Dai91GhvXVvYr07r
         7Ft2EkqUMoc/WzRSuEkvC+cQ0iS2GrZMr+/prgkylTebkWd7bgC/VdGq5OXd+YK+ymcw
         mxIxusKLdLfIoB8I973TEo3mrx0Wz7nA5eSIYrdJON838IbkRsSLS6vJtCrtXPjHxAE+
         5z+VbvMbRGrly7aDydvv+ZmiTcNyJz5QMb1hZyHxdQ60OgkEgK1bGz+u/OrcSE3ZPuee
         8z3A==
X-Gm-Message-State: AGRZ1gKO2Hr6jErtldHxRIbpf4JDaJw9v1x28miiDJkrmPudCPNQAjB8
	9NfVBl5hggySE/F1ic1LVdaLvpPWa6W39xRho9fLT4ZUy7nrw+0=
X-Received: by 2002:a62:22c3:: with SMTP id p64-v6mr14754158pfj.9.1541887873722;
        Sat, 10 Nov 2018 14:11:13 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1515375pjt;
        Sat, 10 Nov 2018 14:11:12 -0800 (PST)
X-Google-Smtp-Source: AJdET5c+bT8W8sM66NiGLQi07IjK9W8foARGxWOj3Ti6BXU3Nw41TaoH8Ck8EAsmAic+TXPtanrW
X-Received: by 2002:a17:902:d88f:: with SMTP id b15-v6mr13813957plz.207.1541887872577;
        Sat, 10 Nov 2018 14:11:12 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541887872; cv=none;
        d=google.com; s=arc-20160816;
        b=QmwAWDP64A7pLRqQ8SbFVzEW9HbiPMawjfbn/ZcIsrZDJxvVozppQ6UleeI9Dq7bKS
         XmKYSq1EW/Vc/MUjqDWY86TFwrf+k9GQMEoadwfSXmuYwaHz32BVczvP+hfKzPGcbPMg
         6CJ3Q/tqoZtGy/8UJGPdmwMJPDBfjhHq9WZlVLotJHVksiP9W3/27MlKh7K+h9j80a/N
         9y+M8SJTKuxKJeDITe8XG7eg6e2BFarFHSmJPU8faoEB9oQp8ylXnxL9Hfu1itCgxhS+
         47Qe3FPAASvi2f5a/gA7B3vUiq7KW/LIr7Ja0trKIwqwKjmxK1MgQHcWOL0BbnmGZfg4
         dkCg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-transfer-encoding:content-disposition:mime-version
         :references:message-id:subject:cc:to:from:date:dkim-signature;
        bh=ScNeU0zCwc0gxmVUGHqn5C3vnac335Dk/8NovnhOc4M=;
        b=Eio6MfL06ANovPU2wwpLWKrd5p+dWoNqy/2mz0n6048eci4eDJSm/+7tf79cMRAHvu
         3gb3kxV3bK7zVVse1sv+/EeCStNMwqVqxl6joZoe5a2V3lfD9TtI7imPuUyxxgpcIlqS
         iUK73Q479nDGfh1r+XB3Tk58RUBoTc8l+R9IMcYnLcKRmtkLQ/2Lj7/6T7m1FsBCtsV/
         rfy+r9qwAkdQ2Bpmdkn5ox7ny2mUNk4SVvRrVOlrGXmjMIX8btwnZvSZjFlz5ylh6Sob
         wX4BAaqBIJjLOKaBQXxJFGZjRrEEGQCtEKaMOVnEmF1mTLjhF+T4J/7WkjbJJxXo+pfy
         kRpA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@joelfernandes.org header.s=google header.b="Kwi9TDp/";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 10-v6si11436058pgk.480.2018.11.10.14.10.57;
        Sat, 10 Nov 2018 14:11:12 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726687AbeKKH4G (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sun, 11 Nov 2018 02:56:06 -0500
Received: from mail-pg1-f196.google.com ([209.85.215.196]:44278 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725896AbeKKH4G (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 02:56:06 -0500
Received: by mail-pg1-f196.google.com with SMTP id w3-v6so2342473pgs.11
        for <linux-kernel@vger.kernel.org>; Sat, 10 Nov 2018 14:09:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=joelfernandes.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent;
        bh=ScNeU0zCwc0gxmVUGHqn5C3vnac335Dk/8NovnhOc4M=;
        b=Kwi9TDp/LrQslRe+fiWOspT3osMUkkTSvSkdcyCv/wHtDk8LFpEasjUk1otDbFv3Og
         zCwbCq73NNmdWl0253QNxseSCZmqR5xse/MxHxOnWDV7vi4xEEmoIGrfP3b60tWD54D6
         gNZcTBvOcpKf6DUrKxBQ3ScY7hj8p//KEKExw=
X-Received: by 2002:a63:1157:: with SMTP id 23mr12392037pgr.245.1541887775232;
        Sat, 10 Nov 2018 14:09:35 -0800 (PST)
Received: from localhost ([2620:0:1000:1601:3aef:314f:b9ea:889f])
        by smtp.gmail.com with ESMTPSA id g88-v6sm2763585pfg.98.2018.11.10.14.09.33
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 10 Nov 2018 14:09:34 -0800 (PST)
Date: Sat, 10 Nov 2018 14:09:33 -0800
From: Joel Fernandes <joel@joelfernandes.org>
To: Daniel Colascione <dancol@google.com>
Cc: Andy Lutomirski <luto@amacapital.net>,
        Jann Horn <jannh@google.com>,
        kernel list <linux-kernel@vger.kernel.org>,
        John Reck <jreck@google.com>,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Bruce Fields <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Minchan Kim <minchan@kernel.org>,
        Shuah Khan <shuah@kernel.org>,
        Valdis Kletnieks <valdis.kletnieks@vt.edu>,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to
 memfd
Message-ID: <20181110220933.GB96924@google.com>
References: <20181108041537.39694-1-joel@joelfernandes.org>
 <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com>
 <CAG48ez0kQ4d566bXTFOYANDgii-stL-Qj-oyaBzvfxdV=PU-7g@mail.gmail.com>
 <20181110032005.GA22238@google.com>
 <69CE06CC-E47C-4992-848A-66EB23EE6C74@amacapital.net>
 <20181110182405.GB242356@google.com>
 <CAKOZuesQXRtthJTEr86LByH3gPpAdT-PQM0d1jqr131=zZNRKw@mail.gmail.com>
 <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnBkKCV+dbrMYoAA--.11024S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCr13Wr1kCF18uFyDWFyUKFg_yoWrAr4DpF
	W5GayYkrs5tFyxAr92yF48JF4rtrWftr43Wr9agry2vwnY9F1SgF4Sqr4j9FyxZrs7Ga1j
	vrWUtry7Za4qva7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc2xSY4AK6IIF6Fylc2IjII80xcxEwVAK
	I48JMxvI42IY6xIIjxv20xvE14v26r1j6r1xMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Jr
	0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j
	6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2
	IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v2
	6r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2
	IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUmVWlDUUUU

On Sat, Nov 10, 2018 at 11:11:27AM -0800, Daniel Colascione wrote:
> On Sat, Nov 10, 2018 at 10:45 AM, Daniel Colascione <dancol@google.com> wrote:
> > On Sat, Nov 10, 2018 at 10:24 AM, Joel Fernandes <joel@joelfernandes.org> wrote:
> >> Thanks Andy for your thoughts, my comments below:
> [snip]
> >> I don't see it as warty, different seals will work differently. It works
> >> quite well for our usecase, and since Linux is all about solving real
> >> problems in the real work, it would be useful to have it.
> >>
> >>> - causes a probably-observable effect in the file mode in F_GETFL.
> >>
> >> Wouldn't that be the right thing to observe anyway?
> >>
> >>> - causes reopen to fail.
> >>
> >> So this concern isn't true anymore if we make reopen fail only for WRITE
> >> opens as Daniel suggested. I will make this change so that the security fix
> >> is a clean one.
> >>
> >>> - does *not* affect other struct files that may already exist on the same inode.
> >>
> >> TBH if you really want to block all writes to the file, then you want
> >> F_SEAL_WRITE, not this seal. The usecase we have is the fd is sent over IPC
> >> to another process and we want to prevent any new writes in the receiver
> >> side. There is no way this other receiving process can have an existing fd
> >> unless it was already sent one without the seal applied.  The proposed seal
> >> could be renamed to F_SEAL_FD_WRITE if that is preferred.
> >>
> >>> - mysteriously malfunctions if you try to set it again on another struct
> >>> file that already exists
> >>>
> >>
> >> I didn't follow this, could you explain more?
> >>
> >>> - probably is insecure when used on hugetlbfs.
> >>
> >> The usecase is not expected to prevent all writes, indeed the usecase
> >> requires existing mmaps to continue to be able to write into the memory map.
> >> So would you call that a security issue too? The use of the seal wants to
> >> allow existing mmap regions to be continue to be written into (I mentioned
> >> more details in the cover letter).
> >>
> >>> I see two reasonable solutions:
> >>>
> >>> 1. Don’t fiddle with the struct file at all. Instead make the inode flag
> >>> work by itself.
> >>
> >> Currently, the various VFS paths check only the struct file's f_mode to deny
> >> writes of already opened files. This would mean more checking in all those
> >> paths (and modification of all those paths).
> >>
> >> Anyway going with that idea, we could
> >> 1. call deny_write_access(file) from the memfd's seal path which decrements
> >> the inode::i_writecount.
> >> 2. call get_write_access(inode) in the various VFS paths in addition to
> >> checking for FMODE_*WRITE and deny the write (incase i_writecount is negative)
> >>
> >> That will prevent both reopens, and writes from succeeding. However I worry a
> >> bit about 2 not being too familiar with VFS internals, about what the
> >> consequences of doing that may be.
> >
> > IMHO, modifying both the inode and the struct file separately is fine,
> > since they mean different things. In regular filesystems, it's fine to
> > have a read-write open file description for a file whose inode grants
> > write permission to nobody. Speaking of which: is fchmod enough to
> > prevent this attack?
> 
> Well, yes and no. fchmod does prevent reopening the file RW, but
> anyone with permissions (owner, CAP_FOWNER) can just fchmod it back. A
> seal is supposed to be irrevocable, so fchmod-as-inode-seal probably
> isn't sufficient by itself. While it might be good enough for Android
> (in the sense that it'll prevent RW-reopens from other security
> contexts to which we send an open memfd file), it's still conceptually
> ugly, IMHO. Let's go with the original approach of just tweaking the
> inode so that open-for-write is permanently blocked.

Agreed with the idea of modifying both file and inode flags. I was thinking
modifying i_mode may do the trick but as you pointed it probably could be
reverted by chmod or some other attribute setting calls.

OTOH, I don't think deny_write_access(file) can be reverted from any
user-facing path so we could do that from the seal to prevent the future
opens in write mode. I'll double check and test that out tomorrow.

thanks,

 - Joel
