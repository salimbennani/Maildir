Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:58:09 -0000
Received: from icoremail.net (unknown [209.85.210.173])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_6dcJuZbDGBrAQ--.32916S3;
	Sat, 10 Nov 2018 08:29:17 +0800 (CST)
Received: from mail-pf1-f173.google.com (unknown [209.85.210.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXdUFaJuZbQMkkAA--.3317S3;
	Sat, 10 Nov 2018 08:29:14 +0800 (CST)
Received: by mail-pf1-f173.google.com with SMTP id g7-v6so1642651pfo.10
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 16:29:14 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :references:in-reply-to:from:date:message-id:subject:to:cc:sender
         :precedence:list-id;
        bh=rSGiimb4wwQ0/s+NRUDVwpBe1mUBs+4hLpom055mtdg=;
        b=U2M3RLN6U/tMAKFqfGjpXWBy1h0RB8yC75M8EtVxrAbVzckemQU0VpwCI3OyiEOag4
         EzOuw2EFQzZ9y56qAXdpoQEeeT0kDA90+sPjyi/HszlROIvMLAlwfrlhhTpDV6+liEJR
         JgRby5VChs41fnJ+6b2g+JBkPTKAZ/GGs5EUaQftL92wfd6oh5vtY2y413CfYKoF2P4s
         NY1k18WdE828ludvxl5YUcFA03wPNC6quRtua1PWBjAEWOgbBuX96KMwNHI8TGiPtr1V
         or/qSb0dty314aMMjC3lEAuHHtli65jNL72Kotn8vm3yvXE0kj2K7vd/23jcKaSzxZXO
         kX1g==
X-Gm-Message-State: AGRZ1gIfdrypo/3wJYatd6zSDGJ3PVpgtaaZ/wYUHCh+OJlXw19PaRUB
	YkaxpfrVWtoe3C45XIoP5vF3MKF+ijhDYbtfIYZ0/x6RUz8T0io0gw==
X-Received: by 2002:a63:cd17:: with SMTP id i23mr9300618pgg.13.1541809754043;
        Fri, 09 Nov 2018 16:29:14 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp555214pjt;
        Fri, 9 Nov 2018 16:29:13 -0800 (PST)
X-Google-Smtp-Source: AJdET5fxiM9BwWFZwQ60ls3jf77N36Te4aKSFfYYCHCmGjnWVUEbBGCYNqgFN0YLcvUi6Fpxnq3g
X-Received: by 2002:a63:eb52:: with SMTP id b18mr319279pgk.213.1541809753076;
        Fri, 09 Nov 2018 16:29:13 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541809753; cv=none;
        d=google.com; s=arc-20160816;
        b=aDUFdipoLzZukyQMg6ErWFunYb/AGiYwR4vmRGceSU2qX5Cl0nInae039YOBcYPVRe
         Cl7+73bt3/Q4tAQVA/y1NxYvN8HBJ2HwIDwaTIvO7GZecnt7xf9V5ItwrRASdSsX1hIe
         PR/4BwXyofiyj225e58J3liyoFqfwDRrANS0hS0IiT/mNcbgX23Szjx5N0CwW4f2L/cB
         7G6AToiXBCQWrGlBCRH02BFSUDlSegKPyVQJLG/qWp+gspdPxTGwrSK/BjsdyFfnDBrK
         cZLm4JMCKqCKFwOaGyqN3Ud37RBWPxaRBps88rZYHmNcigeEnKVDAlEKPZI4CTxStzh2
         1nsw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:dkim-signature;
        bh=rSGiimb4wwQ0/s+NRUDVwpBe1mUBs+4hLpom055mtdg=;
        b=xaaYJVKzwTe2gr3XOVJZMh3+lLSCZtzwGQWh8eXG4mnye+oeBZ5xKDaMYbgFxLU9uT
         NOGgJSo3QdKjcrn1a+z7sJCEPQ3O42P22tras5K3VeeVP5pWHOvidT6rPhb+Aeqo90by
         qXFqu+cwi9D8mRfMxAVZYRM0dyf10NvjxOBOIEI74JLIiJJck4YA8gaDS6q2NSEPXdsl
         erdM0Hiwt9jjtelmLLHp4efQl5xXBg5kaB7oAQFhKQWHymy8SpGHi/XPbVe3mXApdtpj
         38SvIenCF3MuhVeXt80sQJxBokIJo7u7l0SIHivr24vi1hiugB3r7WFHUdeCNM9LGKqY
         NjOg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@gmail.com header.s=20161025 header.b=dEWXr1tW;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=QUARANTINE dis=NONE) header.from=gmail.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id j65si8247218pge.444.2018.11.09.16.28.57;
        Fri, 09 Nov 2018 16:29:13 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728363AbeKJKLz (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Sat, 10 Nov 2018 05:11:55 -0500
Received: from mail-oi1-f196.google.com ([209.85.167.196]:39559 "EHLO
        mail-oi1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727210AbeKJKLz (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 05:11:55 -0500
Received: by mail-oi1-f196.google.com with SMTP id 192-v6so2987172oii.6;
        Fri, 09 Nov 2018 16:28:53 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=rSGiimb4wwQ0/s+NRUDVwpBe1mUBs+4hLpom055mtdg=;
        b=dEWXr1tWeu1cFQXd1B+yz7BpPPlcUXnx0ludlx5wd1xf7YrDsYtWK6vybi28WTs/kX
         HYkf/AKePyd941zdHQJN3Nh/UmZu0pp9QUxIUhvxae/x0JuQL/G/uwAwBB7Ahz0CDC/8
         lml/9GE9KlpcVb/Qu4mvHCjj9ZK/H84GyMTfVK+bacI649qreHi2wxjw19Zda+g98ybt
         WDXMAcA8K7w8fbqNWKZ3Qw3qLkzJgOT2nq1/FoPJ+/J2NDy9KydfSYrepwjF1KS9qn4V
         oIsIdrxQ0Lg2OqwXsoG+OIeT1Ga3SJ8WUsAkoMLSU8SUdWfOw2AuoT9tspQBJ3THg9UZ
         t4aw==
X-Received: by 2002:aca:d886:: with SMTP id p128-v6mr6289558oig.346.1541809733286;
 Fri, 09 Nov 2018 16:28:53 -0800 (PST)
MIME-Version: 1.0
References: <20181108041537.39694-1-joel@joelfernandes.org>
 <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com> <A7EC46BC-441A-4A06-9E2F-A26DA88B5320@amacapital.net>
In-Reply-To: <A7EC46BC-441A-4A06-9E2F-A26DA88B5320@amacapital.net>
From: Michael Tirado <mtirado418@gmail.com>
Date: Fri, 9 Nov 2018 20:02:14 +0000
Message-ID: <CAMkWEXOLJ=ymbVjQfA2MD8XA7Y9Lu3ByJYUY-JvpnYKJ5gkY1w@mail.gmail.com>
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
To: Andy Lutomirski <luto@amacapital.net>
Cc: Jann Horn <jannh@google.com>, joel@joelfernandes.org,
        LKML <linux-kernel@vger.kernel.org>, jreck@google.com,
        john.stultz@linaro.org, tkjos@google.com,
        gregkh@linuxfoundation.org, hch@infradead.org,
        viro@zeniv.linux.org.uk, Andrew Morton <akpm@linux-foundation.org>,
        dancol@google.com, bfields@fieldses.org, jlayton@kernel.org,
        khalid.aziz@oracle.com, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        linux-mm@kvack.org, marcandre.lureau@redhat.com,
        mike.kravetz@oracle.com, minchan@kernel.org, shuah@kernel.org,
        valdis.kletnieks@vt.edu, hughd@google.com,
        linux-api@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXdUFaJuZbQMkkAA--.3317S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAr13XrWxuF4fXF4fKF1rJFb_yoW5AF17pF
	ZYkF45tr4kJFZ7C3srWr4fJFyFy3yxJF13J395Wr1UZwn0qF10qF4S9FWjvF92kr4xX34j
	qr4fAr95Zan0v3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUHmb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M280x2IEY4vE77IFxVWUWVWUZwA2ocxC64kIII0Yj41l84x0c7CEw4AK67
	xGY2AK021l84ACjcxK6xIIjxv20xvE14v26ryj6F1UM28EF7xvwVC0I7IYx2IY6xkF7I0E
	14v26r4j6F4UM28EF7xvwVC2z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14
	v26rxl6s0DM2vYz4IE04k24VAvwVAKI4IrM2AIxVAIcxkEcVAq07x20xvEncxIr21l5I8C
	rVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j6r18McIj6I8E87Iv67AKxV
	W8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr41l7I0Y6sxI4wCY1x0264kE
	xVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkIecxEwVCI4VWDMxkI7II2jI8vz4
	vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcVC0I7IYx2IY6xkF7I0E14v2
	6r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E14v26r
	4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl
	4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_Jw0_GFylx2IqxVAqx4xG67AKxV
	WUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrxkI
	7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IU5
	vksDUUUUU==

On Fri, Nov 9, 2018 at 9:41 PM Andy Lutomirski <luto@amacapital.net> wrote:
>
>
>
> > On Nov 9, 2018, at 1:06 PM, Jann Horn <jannh@google.com> wrote:
> >
> > +linux-api for API addition
> > +hughd as FYI since this is somewhat related to mm/shmem
> >
> > On Fri, Nov 9, 2018 at 9:46 PM Joel Fernandes (Google)
> > <joel@joelfernandes.org> wrote:
> >> Android uses ashmem for sharing memory regions. We are looking forward
> >> to migrating all usecases of ashmem to memfd so that we can possibly
> >> remove the ashmem driver in the future from staging while also
> >> benefiting from using memfd and contributing to it. Note staging drivers
> >> are also not ABI and generally can be removed at anytime.
> >>
> >> One of the main usecases Android has is the ability to create a region
> >> and mmap it as writeable, then add protection against making any
> >> "future" writes while keeping the existing already mmap'ed
> >> writeable-region active.  This allows us to implement a usecase where
> >> receivers of the shared memory buffer can get a read-only view, while
> >> the sender continues to write to the buffer.

Oh I remember trying this years ago with a new seal, F_SEAL_WRITE_PEER,
or something like that.

> >
> > So you're fiddling around with the file, but not the inode? How are
> > you preventing code like the following from re-opening the file as
> > writable?
> >
> > $ cat memfd.c
> > #define _GNU_SOURCE
> > #include <unistd.h>
> > #include <sys/syscall.h>
> > #include <printf.h>
> > #include <fcntl.h>
> > #include <err.h>
> > #include <stdio.h>
> >
> > int main(void) {
> >  int fd = syscall(__NR_memfd_create, "testfd", 0);
> >  if (fd == -1) err(1, "memfd");
> >  char path[100];
> >  sprintf(path, "/proc/self/fd/%d", fd);
> >  int fd2 = open(path, O_RDWR);
> >  if (fd2 == -1) err(1, "reopen");
> >  printf("reopen successful: %d\n", fd2);
> > }
> > $ gcc -o memfd memfd.c
> > $ ./memfd
> > reopen successful: 4
> > $
> >

The race condition between memfd_create and applying seals in fcntl?
I think it would be possible to block new write mappings from peer processes if
there is a new memfd_create api that accepts seals. Allowing caller to
set a seal
like the one I proposed years ago, though in a race-free manner. Then
also consider
how to properly handle blocking inherited +W mapping through
clone/fork. Maybe I'm
forgetting some other pitfalls?



> > That aside: I wonder whether a better API would be something that
> > allows you to create a new readonly file descriptor, instead of
> > fiddling with the writability of an existing fd.
>
> Every now and then I try to write a patch to prevent using proc to reopen a file with greater permission than the original open.
>
> I like your idea to have a clean way to reopen a a memfd with reduced permissions. But I would make it a syscall instead and maybe make it only work for memfd at first.  And the proc issue would need to be fixed, too.

IMO the best solution would handle the issue at memfd creation time by
removing the race condition.
