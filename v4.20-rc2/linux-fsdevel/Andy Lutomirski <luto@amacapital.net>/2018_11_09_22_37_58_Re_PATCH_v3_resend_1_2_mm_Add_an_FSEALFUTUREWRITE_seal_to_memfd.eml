Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:57:26 -0000
Received: from icoremail.net (unknown [209.85.215.180])
	by mail-app2 (Coremail) with SMTP id by_KCgCn33xjDOZbkNtqAQ--.32770S3;
	Sat, 10 Nov 2018 06:38:27 +0800 (CST)
Received: from mail-pg1-f180.google.com (unknown [209.85.215.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHAE1fDOZbE3kkAA--.2710S3;
	Sat, 10 Nov 2018 06:38:23 +0800 (CST)
Received: by mail-pg1-f180.google.com with SMTP id r9-v6so1441514pgv.6
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 14:38:23 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version:subject
         :from:in-reply-to:date:cc:content-transfer-encoding:message-id
         :references:to:sender:precedence:list-id;
        bh=dm5Cg4ujBBRVP1r4DE+QHpIqBHvq1YFgmDPi01hQu+c=;
        b=av/ooVEe6cU5eiM17/19+gQL/xwFFFWPGV1DNPsNi3F59JJThDS1TeT50OAPMZAICC
         w/VQd7eNCOlJY/IuBQwLD3c9FAvMrMNjtZY4vTbLhOJQome4QCX86SNJlPLrpdZk47h9
         rs/UwBUpWbM0XvuGsexBhu28j2aap5O0J6uhz1ebpQQhszCpIcr8Iks6cWDz9PjllxFJ
         rXZ9eHzcZutRv991qkNUv/n+0o2mt0PASzJP7tXj6zVswdAtALRDAeZorJy0+DY+qvmI
         YXrz5NqY/3abnYnqX3LfDohIFM4vwjSmSI19QDqWAjZbzys83Pxy48PZE/uuZ5DBHl3w
         SBnA==
X-Gm-Message-State: AGRZ1gL08hg/sK+GE4vSh/Xf635UJZXxRPq1jitkvFM9+dkVNMusPK8N
	UN4EoCEBfycXln+q0lP2R2ZLD6ZjF/318KRWCMTD8nNdswIjsYvf1Q==
X-Received: by 2002:a63:cd17:: with SMTP id i23mr9021551pgg.13.1541803102965;
        Fri, 09 Nov 2018 14:38:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp468909pjt;
        Fri, 9 Nov 2018 14:38:22 -0800 (PST)
X-Google-Smtp-Source: AJdET5fzk+ReoEOLstb/Ph4gDksXfWd/a+AoG4MmKv765zA9Ve4A8d7CMSAxppY/IWwKMpZu8Lv5
X-Received: by 2002:a63:5765:: with SMTP id h37mr9218521pgm.423.1541803102200;
        Fri, 09 Nov 2018 14:38:22 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541803102; cv=none;
        d=google.com; s=arc-20160816;
        b=Bha4cwoEU09ZXv6YkN9PjEl2XYn0rQck8Zc6IweJJ5L7UrtiXqJJ5vI6yaFPKDptMD
         TKd5rQubvBeJHGlMP2AL5K04UVwjtmco4eTwD+DzuyDiVo7kJF0/E6lJKPLHl7caCfqy
         NxkR11bPE+Dtx6kRctkW6hrW6HvyORGwMMdStZR9ubyLxP03CplwSSnRaFXojyOvW3CG
         rxDiCVT6paqBnvJeQWwfuqiPwgfQ7b+0YqMUnH0XUumOHYlXnfy3IFfK7OzssBq5BeFU
         h+ycVBB+M1CcD636jG09iCgzRkBnL1Au414P/p9Jivn8jlwFaNLEwppEQL0CrDja/HKF
         M0dw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:references:message-id
         :content-transfer-encoding:cc:date:in-reply-to:from:subject
         :mime-version:dkim-signature;
        bh=dm5Cg4ujBBRVP1r4DE+QHpIqBHvq1YFgmDPi01hQu+c=;
        b=sQC/Scka1ON7T0qrNew2LVJ7QH0n1p/MSWX75rTe1RrWvFTBgIPQl4sgXs72dkj77T
         QmdyyhqkFqnEZ+dJzwla+TKq2xUPtrVjJKZySqXtDDfVkTtA4qLIEe59tJHXJV/GmUaK
         QSboqTzR9roctkL1q+kIfsb3GPXOkUd9RDg/lXTQLcGO8LUTREX4IJnluJqbsaXtWpPu
         RcS7n2f/q+LMfrJKAUb+C2D3K8h2ctzfOeYPHqBwdHBTjVpD5ddtAmUYBH6QadAJkoJ9
         j1zwgYgRpLG7SKx1XHamMDEOfY2KMRMY0At8KeUDiwaUdISh23GIcxgjCKGc8UV5Whix
         gKHg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=NGpFcZ91;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id f38si7693385pgf.206.2018.11.09.14.38.06;
        Fri, 09 Nov 2018 14:38:22 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728167AbeKJIUk (ORCPT <rfc822;tomnomnom1@gmail.com>
        + 99 others); Sat, 10 Nov 2018 03:20:40 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:36569 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726306AbeKJIUk (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 03:20:40 -0500
Received: by mail-pl1-f193.google.com with SMTP id w24-v6so1560319plq.3
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 14:38:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=dm5Cg4ujBBRVP1r4DE+QHpIqBHvq1YFgmDPi01hQu+c=;
        b=NGpFcZ91zPTpug1N8s/YJjMeBATKcpnDVMMMepFtAO+V06OHCmlxw5MRcAFO7lEbEo
         PknXVF7GfxQNTVhf8Mk2bcrRVPRVU0feqfsJnDHTXSYlCtalkh9qFLrW35ukfVctaUFk
         0u5PHLH6/JRG0mw/45ZvfMuaTab++QHxnA4SvTcYBiC/FrX+eI0N/Caokey6OI7FJ/F6
         JmEumnFC2NxJEVLwdooQVaWlyw6egSeqI9kHBDagQpcygj+c7tPniPmKfPO++Kc3Ag01
         CfvmSGTdnEDx9ybISHJ2GNtSUfDSEUOcK9lmXKSZKByr2O5nO5vyxdpm4kkTOBebmLkH
         G6QA==
X-Received: by 2002:a17:902:d696:: with SMTP id v22-v6mr10503337ply.261.1541803081916;
        Fri, 09 Nov 2018 14:38:01 -0800 (PST)
Received: from ?IPv6:2600:1010:b053:7a5b:70bc:5409:d54c:f5a1? ([2600:1010:b053:7a5b:70bc:5409:d54c:f5a1])
        by smtp.gmail.com with ESMTPSA id o27-v6sm18251515pfk.85.2018.11.09.14.38.00
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 09 Nov 2018 14:38:01 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16A404)
In-Reply-To: <CAKOZuesw1wG-YynWL7bVb+4BWtYp0Ei62vweWF+mqF1Ln-_2Tg@mail.gmail.com>
Date: Fri, 9 Nov 2018 14:37:58 -0800
Cc: Jann Horn <jannh@google.com>,
        Joel Fernandes <joel@joelfernandes.org>,
        kernel list <linux-kernel@vger.kernel.org>,
        John Reck <jreck@google.com>,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Bruce Fields <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Minchan Kim <minchan@kernel.org>,
        Shuah Khan <shuah@kernel.org>, valdis.kletnieks@vt.edu,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <BB64C995-F374-49EB-8469-4820231D8152@amacapital.net>
References: <20181108041537.39694-1-joel@joelfernandes.org> <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com> <CAKOZuesw1wG-YynWL7bVb+4BWtYp0Ei62vweWF+mqF1Ln-_2Tg@mail.gmail.com>
To: Daniel Colascione <dancol@google.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHAE1fDOZbE3kkAA--.2710S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCrW7CFWkKr45AFW5GF1Utrb_yoWrAryDpF
	Z5Ga1Ykr48JFykC3s2yF1Fv3WFv3yxGF47Jr9xGr1UuFn0qFnaqF4YgFW5uF9xZr4xXw4j
	vw15CrZ7uas0yaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6Fylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26c
	xK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwCFI7km07C267AKxVWU
	AVWUtwC20s026c02F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67
	kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBI
	daVFxhVjvjDU0xZFpf9x07bl-BiUUUUU=



> On Nov 9, 2018, at 2:20 PM, Daniel Colascione <dancol@google.com> wrote:
>=20
>> On Fri, Nov 9, 2018 at 1:06 PM, Jann Horn <jannh@google.com> wrote:
>>=20
>> +linux-api for API addition
>> +hughd as FYI since this is somewhat related to mm/shmem
>>=20
>> On Fri, Nov 9, 2018 at 9:46 PM Joel Fernandes (Google)
>> <joel@joelfernandes.org> wrote:
>>> Android uses ashmem for sharing memory regions. We are looking forward
>>> to migrating all usecases of ashmem to memfd so that we can possibly
>>> remove the ashmem driver in the future from staging while also
>>> benefiting from using memfd and contributing to it. Note staging drivers=

>>> are also not ABI and generally can be removed at anytime.
>>>=20
>>> One of the main usecases Android has is the ability to create a region
>>> and mmap it as writeable, then add protection against making any
>>> "future" writes while keeping the existing already mmap'ed
>>> writeable-region active.  This allows us to implement a usecase where
>>> receivers of the shared memory buffer can get a read-only view, while
>>> the sender continues to write to the buffer.
>>> See CursorWindow documentation in Android for more details:
>>> https://developer.android.com/reference/android/database/CursorWindow
>>>=20
>>> This usecase cannot be implemented with the existing F_SEAL_WRITE seal.
>>> To support the usecase, this patch adds a new F_SEAL_FUTURE_WRITE seal
>>> which prevents any future mmap and write syscalls from succeeding while
>>> keeping the existing mmap active.
>>=20
>> Please CC linux-api@ on patches like this. If you had done that, I
>> might have criticized your v1 patch instead of your v3 patch...
>>=20
>>> The following program shows the seal
>>> working in action:
>> [...]
>>> Cc: jreck@google.com
>>> Cc: john.stultz@linaro.org
>>> Cc: tkjos@google.com
>>> Cc: gregkh@linuxfoundation.org
>>> Cc: hch@infradead.org
>>> Reviewed-by: John Stultz <john.stultz@linaro.org>
>>> Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
>>> ---
>> [...]
>>> diff --git a/mm/memfd.c b/mm/memfd.c
>>> index 2bb5e257080e..5ba9804e9515 100644
>>> --- a/mm/memfd.c
>>> +++ b/mm/memfd.c
>> [...]
>>> @@ -219,6 +220,25 @@ static int memfd_add_seals(struct file *file, unsig=
ned int seals)
>>>                }
>>>        }
>>>=20
>>> +       if ((seals & F_SEAL_FUTURE_WRITE) &&
>>> +           !(*file_seals & F_SEAL_FUTURE_WRITE)) {
>>> +               /*
>>> +                * The FUTURE_WRITE seal also prevents growing and shrin=
king
>>> +                * so we need them to be already set, or requested now.
>>> +                */
>>> +               int test_seals =3D (seals | *file_seals) &
>>> +                                (F_SEAL_GROW | F_SEAL_SHRINK);
>>> +
>>> +               if (test_seals !=3D (F_SEAL_GROW | F_SEAL_SHRINK)) {
>>> +                       error =3D -EINVAL;
>>> +                       goto unlock;
>>> +               }
>>> +
>>> +               spin_lock(&file->f_lock);
>>> +               file->f_mode &=3D ~(FMODE_WRITE | FMODE_PWRITE);
>>> +               spin_unlock(&file->f_lock);
>>> +       }
>>=20
>> So you're fiddling around with the file, but not the inode? How are
>> you preventing code like the following from re-opening the file as
>> writable?
>=20
> Good catch. That's fixable too though, isn't it, just by fiddling with
> the inode, right?

True.

>=20
> Another, more general fix might be to prevent /proc/pid/fd/N opens
> from "upgrading" access modes. But that'd be a bigger ABI break.

I think we should fix that, too.  I consider it a bug fix, not an ABI break,=
 personally.

>=20
>> That aside: I wonder whether a better API would be something that
>> allows you to create a new readonly file descriptor, instead of
>> fiddling with the writability of an existing fd.
>=20
> That doesn't work, unfortunately. The ashmem API we're replacing with
> memfd requires file descriptor continuity. I also looked into opening
> a new FD and dup2(2)ing atop the old one, but this approach doesn't
> work in the case that the old FD has already leaked to some other
> context (e.g., another dup, SCM_RIGHTS). See
> https://developer.android.com/ndk/reference/group/memory. We can't
> break ASharedMemory_setProt.


Hmm.  If we fix the general reopen bug, a way to drop write access from an e=
xisting struct file would do what Android needs, right?  I don=E2=80=99t kno=
w if there are general VFS issues with that.
