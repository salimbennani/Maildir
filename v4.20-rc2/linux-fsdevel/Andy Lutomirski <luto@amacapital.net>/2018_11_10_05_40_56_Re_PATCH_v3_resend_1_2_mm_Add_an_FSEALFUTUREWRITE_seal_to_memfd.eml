Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 10 Nov 2018 00:57:00 -0000
Received: from icoremail.net (unknown [209.85.210.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH9IG_+VbrpFqAQ--.32664S3;
	Sat, 10 Nov 2018 05:41:27 +0800 (CST)
Received: from mail-pf1-f177.google.com (unknown [209.85.210.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXNkID_+VbOlEkAA--.6859S3;
	Sat, 10 Nov 2018 05:41:23 +0800 (CST)
Received: by mail-pf1-f177.google.com with SMTP id b11-v6so1502680pfi.5
        for <xuliker@zju.edu.cn>; Fri, 09 Nov 2018 13:41:23 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version:subject
         :from:in-reply-to:date:cc:content-transfer-encoding:message-id
         :references:to:sender:precedence:list-id;
        bh=EBL6zYX+bJXPh6FpvD1HrQ3XwiGBV9sUsI8AvgkDPUU=;
        b=IPfmwjhXzn0KcsQGJA700gfjl6vxmLTo59Jiw2DHZJv6memagVCnx3J9lHuy9JA1AJ
         Sr0EvD62ZuJNmOPpCINlmPECL9Btg8aNjXnqXhqA/LP2fzehyM70lK7+rGqy/Tf4/htP
         Xzl/RPrxEpb2F+R9ICaLTiEkXIUtukdd8eOtzGB9yGqiU4XsVfAVPQPHvIx4j/RhosnD
         IjOjyzUqUEjx9hBdavyJwjuTJA+mNJEuM2sfNhpk0ydv4126AFQ9dw8avN+j0FdR19A+
         9GDwszfbJIGQy3T1w4wmZ28cqfbuqONKBVliVnjhP2iDPpQQhdPWcMesuCuNZBNiH6sy
         YXhA==
X-Gm-Message-State: AGRZ1gKhABjrefQNAgny6o9kVWFvTHPtapHQ7U/iAkVtPENOovzMBNvd
	ZR+tOEkEHTIuEC/fmq7QyhMRLq5J3RS59at+cFhXR0dY2+FO8eiF8w==
X-Received: by 2002:a63:460a:: with SMTP id t10-v6mr9019628pga.197.1541799682747;
        Fri, 09 Nov 2018 13:41:22 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp421424pjt;
        Fri, 9 Nov 2018 13:41:21 -0800 (PST)
X-Google-Smtp-Source: AJdET5dTtfjKsZlXV/NCLKPdkKDbVaqpty/YaoAG1pQl0Q1hDUt5dvuIuHHv61owt4vLU3SFLoTY
X-Received: by 2002:a62:1308:: with SMTP id b8-v6mr10332484pfj.215.1541799681944;
        Fri, 09 Nov 2018 13:41:21 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541799681; cv=none;
        d=google.com; s=arc-20160816;
        b=ASkhgSYBGYYLbS/OEQV25eE5E+GMY3xkzLOva3/WpOEd5zFv1hf5bTRvgoOGNLFMqt
         eBAANpkMpJrw43kePa2oEkzB4LDAC61VmwgMzsu/9PrcRgjzSAhB/2N+5PObn59DYHcN
         mizCzS6zkHi6IeHYD3IaDBS3P/cVNnQlSSFmNW/RpRb81OZ7CA44kikKFnjm1B4jtodL
         Mp+MSGRWdiyZFWbp9D04z/XWKeTaxo6uhhnqcPMZPUOHCw2hbwCqL0SDql3rwzQ8X3QS
         HePTQJkQlLg25sRQ0eaj43cG2IxtjCKlqM7gM5ggoNzYcIeW7mwYPb8tbpaoL1W4fzKZ
         dF0Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:references:message-id
         :content-transfer-encoding:cc:date:in-reply-to:from:subject
         :mime-version:dkim-signature;
        bh=EBL6zYX+bJXPh6FpvD1HrQ3XwiGBV9sUsI8AvgkDPUU=;
        b=kFa2chSGk+quGElKXHpeOSF9NNqKULLyYV/oLox6eB7HBTdijDNJ/JSJO7G1yYUneX
         qMg1g0uc0v34f6rbwR8KPQgyxhxjO6f7bNPMgl7HlBR/LiwKOLthsTQz7T2195GBlvJH
         0GlMJUoQy/ZS91fA+TUDgH55td8ICPTLG0tRuyJr2CyjUduJp7fSI//+mZHiy1yC/R1F
         sbSAgpj1LS2t0LrOk0Y7y6+ICZK4XW+A50OuPxslaLJoPLolads/Mz5z7D7eur3Mdpmh
         ZpIyvqm+mHV0VT7/MXbqpuTcO/nCGa5mz2rjOsY05DzKbuoiol7lmnf97VzTwWm2D4Cw
         QBYg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=auz7vfSE;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l12-v6si9220216plc.54.2018.11.09.13.41.07;
        Fri, 09 Nov 2018 13:41:21 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728296AbeKJHXZ (ORCPT <rfc822;changseok.bae@gmail.com>
        + 99 others); Sat, 10 Nov 2018 02:23:25 -0500
Received: from mail-pl1-f196.google.com ([209.85.214.196]:37327 "EHLO
        mail-pl1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727172AbeKJHXZ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 02:23:25 -0500
Received: by mail-pl1-f196.google.com with SMTP id p6-v6so1509616pll.4
        for <linux-kernel@vger.kernel.org>; Fri, 09 Nov 2018 13:40:59 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=EBL6zYX+bJXPh6FpvD1HrQ3XwiGBV9sUsI8AvgkDPUU=;
        b=auz7vfSE2uzmku0PoH8U4zyr71+l0qzWllHpZwvaBgbH4O3qN3DJAOw3OhkCvdLqTp
         mKQ3R/SZYKGhGEr02pKIrRBNvMrLDgbai7ykHFHp/H4UaPXoCtki2DfvJZzTm9wQZQVI
         ZODLWrzx7ghURZRZxYQSeXm10746DONitNBNrBS7VYcmVBYJ2R13+4RKb5KwXE3UrAB8
         Nj0Kp/EM+z3PRnF0YyAKRVyZmsADaVFpWHFCtVx6HXHBtIyU4/Y2MsikTOcgfMFsPatm
         OeROQDtyYdHBbIpmDPgTJ2z7C5l+4PrHmzLsDYJ+uRT7RfHJhSX2CswrRhBhXoV8mmy3
         frUw==
X-Received: by 2002:a17:902:6b0a:: with SMTP id o10-v6mr10523221plk.208.1541799658587;
        Fri, 09 Nov 2018 13:40:58 -0800 (PST)
Received: from ?IPv6:2600:1010:b053:7a5b:70bc:5409:d54c:f5a1? ([2600:1010:b053:7a5b:70bc:5409:d54c:f5a1])
        by smtp.gmail.com with ESMTPSA id g3-v6sm10991032pgr.40.2018.11.09.13.40.57
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 09 Nov 2018 13:40:57 -0800 (PST)
Content-Type: text/plain;
        charset=us-ascii
Mime-Version: 1.0 (1.0)
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16A404)
In-Reply-To: <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com>
Date: Fri, 9 Nov 2018 13:40:56 -0800
Cc: joel@joelfernandes.org, kernel list <linux-kernel@vger.kernel.org>,
        jreck@google.com, John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Daniel Colascione <dancol@google.com>,
        Bruce Fields <bfields@fieldses.org>, jlayton@kernel.org,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>, minchan@kernel.org,
        shuah@kernel.org, valdis.kletnieks@vt.edu,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <A7EC46BC-441A-4A06-9E2F-A26DA88B5320@amacapital.net>
References: <20181108041537.39694-1-joel@joelfernandes.org> <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com>
To: Jann Horn <jannh@google.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXNkID_+VbOlEkAA--.6859S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCFWkKrWxKr1DCr1UCF43trb_yoWrXr17pF
	Z5GF45tr48JFW8C3s7CF1xAa4Fq3y8GFy7Gr93WryUZwnIqF10qF4YgF4UuF93Jr4xXayj
	vw45ArykCas0yaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmvb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VWxMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI
	42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExV
	AvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l4IxYO2xFxVAFwI0_
	Jrv_JF1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1V
	AY17CE14v26r4a6rW5MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUv
	cSsGvfC2KfnxnUUI43ZEXa7IU5QmitUUUUU==



> On Nov 9, 2018, at 1:06 PM, Jann Horn <jannh@google.com> wrote:
>=20
> +linux-api for API addition
> +hughd as FYI since this is somewhat related to mm/shmem
>=20
> On Fri, Nov 9, 2018 at 9:46 PM Joel Fernandes (Google)
> <joel@joelfernandes.org> wrote:
>> Android uses ashmem for sharing memory regions. We are looking forward
>> to migrating all usecases of ashmem to memfd so that we can possibly
>> remove the ashmem driver in the future from staging while also
>> benefiting from using memfd and contributing to it. Note staging drivers
>> are also not ABI and generally can be removed at anytime.
>>=20
>> One of the main usecases Android has is the ability to create a region
>> and mmap it as writeable, then add protection against making any
>> "future" writes while keeping the existing already mmap'ed
>> writeable-region active.  This allows us to implement a usecase where
>> receivers of the shared memory buffer can get a read-only view, while
>> the sender continues to write to the buffer.
>> See CursorWindow documentation in Android for more details:
>> https://developer.android.com/reference/android/database/CursorWindow
>>=20
>> This usecase cannot be implemented with the existing F_SEAL_WRITE seal.
>> To support the usecase, this patch adds a new F_SEAL_FUTURE_WRITE seal
>> which prevents any future mmap and write syscalls from succeeding while
>> keeping the existing mmap active.
>=20
> Please CC linux-api@ on patches like this. If you had done that, I
> might have criticized your v1 patch instead of your v3 patch...
>=20
>> The following program shows the seal
>> working in action:
> [...]
>> Cc: jreck@google.com
>> Cc: john.stultz@linaro.org
>> Cc: tkjos@google.com
>> Cc: gregkh@linuxfoundation.org
>> Cc: hch@infradead.org
>> Reviewed-by: John Stultz <john.stultz@linaro.org>
>> Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
>> ---
> [...]
>> diff --git a/mm/memfd.c b/mm/memfd.c
>> index 2bb5e257080e..5ba9804e9515 100644
>> --- a/mm/memfd.c
>> +++ b/mm/memfd.c
> [...]
>> @@ -219,6 +220,25 @@ static int memfd_add_seals(struct file *file, unsign=
ed int seals)
>>                }
>>        }
>>=20
>> +       if ((seals & F_SEAL_FUTURE_WRITE) &&
>> +           !(*file_seals & F_SEAL_FUTURE_WRITE)) {
>> +               /*
>> +                * The FUTURE_WRITE seal also prevents growing and shrink=
ing
>> +                * so we need them to be already set, or requested now.
>> +                */
>> +               int test_seals =3D (seals | *file_seals) &
>> +                                (F_SEAL_GROW | F_SEAL_SHRINK);
>> +
>> +               if (test_seals !=3D (F_SEAL_GROW | F_SEAL_SHRINK)) {
>> +                       error =3D -EINVAL;
>> +                       goto unlock;
>> +               }
>> +
>> +               spin_lock(&file->f_lock);
>> +               file->f_mode &=3D ~(FMODE_WRITE | FMODE_PWRITE);
>> +               spin_unlock(&file->f_lock);
>> +       }
>=20
> So you're fiddling around with the file, but not the inode? How are
> you preventing code like the following from re-opening the file as
> writable?
>=20
> $ cat memfd.c
> #define _GNU_SOURCE
> #include <unistd.h>
> #include <sys/syscall.h>
> #include <printf.h>
> #include <fcntl.h>
> #include <err.h>
> #include <stdio.h>
>=20
> int main(void) {
>  int fd =3D syscall(__NR_memfd_create, "testfd", 0);
>  if (fd =3D=3D -1) err(1, "memfd");
>  char path[100];
>  sprintf(path, "/proc/self/fd/%d", fd);
>  int fd2 =3D open(path, O_RDWR);
>  if (fd2 =3D=3D -1) err(1, "reopen");
>  printf("reopen successful: %d\n", fd2);
> }
> $ gcc -o memfd memfd.c
> $ ./memfd
> reopen successful: 4
> $
>=20
> That aside: I wonder whether a better API would be something that
> allows you to create a new readonly file descriptor, instead of
> fiddling with the writability of an existing fd.

Every now and then I try to write a patch to prevent using proc to reopen a f=
ile with greater permission than the original open.

I like your idea to have a clean way to reopen a a memfd with reduced permis=
sions. But I would make it a syscall instead and maybe make it only work for=
 memfd at first.  And the proc issue would need to be fixed, too.=
