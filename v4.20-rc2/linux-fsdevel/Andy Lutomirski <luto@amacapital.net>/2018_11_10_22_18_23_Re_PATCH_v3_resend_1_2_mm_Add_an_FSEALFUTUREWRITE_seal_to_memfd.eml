Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:04:07 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f9FPWedbN2xxAQ--.34355S3;
	Sun, 11 Nov 2018 06:18:56 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3FEBMWedbX80oAA--.11733S3;
	Sun, 11 Nov 2018 06:18:52 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id p16-v6so2507009plr.8
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 14:18:52 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version:subject
         :from:in-reply-to:date:cc:content-transfer-encoding:message-id
         :references:to:sender:precedence:list-id;
        bh=9GzphvJPW1JnyRu55nDmjpSF6NSlVR6hVgi4w1oviHM=;
        b=m3/djPq6jTe9cRqf6vUwuuidNHe4kOf2BZhTKNX2h4YVnOclmtz4Roa5HsCxb8oVRG
         IxtDIA7HM/EkbPZU7uPLwagLHAyRAenrqHRAOv6VVuB9a7VqD08D37jnaQMQbYkFXPi+
         u4S8N/RXfKvrkZkUJG5hnUsEqYUutRET8Pj9PxqrIef/DiT9frdnjYWXSPBxM3t24ATa
         bGTT/J7R57llHTaZAhWX6Bz3iNkprfenGenyG6fcfgTFu/S+LP2j2occcIhjpMfeVesJ
         cnCqfaXM4vsjBrCohb7WTr+bdwmej1c0JSjnj8gRTTsCF3V+9cQzzW8o01CJMAncQMpY
         Incw==
X-Gm-Message-State: AGRZ1gLwaNQrBZM1MuzwSOebJa0kRV4h7stkfyh9EGiVR2aFSBU8vSQW
	n1FhjYmPbr+RHJbhogGdx6B3X7ZKOEbTzE/qqgsr3w89zuJmses=
X-Received: by 2002:a17:902:166:: with SMTP id 93-v6mr13920321plb.68.1541888332214;
        Sat, 10 Nov 2018 14:18:52 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1520336pjt;
        Sat, 10 Nov 2018 14:18:51 -0800 (PST)
X-Google-Smtp-Source: AJdET5ei1uHopltkrFDicg72UvRbcJHtZNeDxyBZSx+XZoutOwYMp9AdzTMceDvtkYsF3vXG4F2k
X-Received: by 2002:a63:6ac5:: with SMTP id f188mr12457361pgc.165.1541888331080;
        Sat, 10 Nov 2018 14:18:51 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541888331; cv=none;
        d=google.com; s=arc-20160816;
        b=APJZQkibIrgxx6wn095zN6EA2/AGq8YtLf+E1DMUxIDin8VEUHOB8bV0yNNeG+r0fh
         CrjuY8M0xWQ7ApCECubJsqppxYqfi7yPYKkdG2NJtXlctxdGKbVCX9AptLpL7PI2AZdi
         2+npf7GJctwrvNJEUo8YJGoQ54XZ3M9Y5rRm4NV0Sq8ewaOXDjdXvAVakWbHZnEp0whf
         CMTiOEMfE2i9h1sOjpxRVTqRyLLRHWqfU6S5sqTsr+SiMILbB2HDb3gD1P/O5jtROhmC
         j+J6uIhSeu632lDmtQiemIxLYrEL6VJ7AQRhcbumHE/C6aQh4Ei5Nz+OBNSt6NCuLlQ/
         7D4A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:references:message-id
         :content-transfer-encoding:cc:date:in-reply-to:from:subject
         :mime-version:dkim-signature;
        bh=9GzphvJPW1JnyRu55nDmjpSF6NSlVR6hVgi4w1oviHM=;
        b=cT36qsWe0y7IpWJAFORo/BiByBujYx5v0jdFvh/uBaujzRobstU5b/fbhsQAiG4nDg
         1TkxcFXhdRs6g/k/6m4UiAoQxDw3xvgg5CCqcuYIacpEdjH5ujpjvb6E5Jgv9vJ2HvHU
         tHxJFMfZx54430wm1Xz6VYS7yWTAnQ6sfy5WNLE9n2BbYXds9VJHG+YCpZNIiHUhhzk1
         e/KZfOzckTjCfnxBKXTz0ZskeQ+PAkj4M+1pgliK2pRwPgdaN28EyIB1/DEZTEqv4KB2
         cw7WGYSR4+DpuJxn51BeQlpwvew9HrdCYjlb1FO1zv+OebBFTDp+sE9cd97SyHUatg5x
         DHeA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=fokeO0Kj;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id s61-v6si12013222plb.107.2018.11.10.14.18.33;
        Sat, 10 Nov 2018 14:18:51 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726382AbeKKIFA (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sun, 11 Nov 2018 03:05:00 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:42942 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725778AbeKKIFA (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 03:05:00 -0500
Received: by mail-pl1-f195.google.com with SMTP id t6-v6so2505015plo.9
        for <linux-kernel@vger.kernel.org>; Sat, 10 Nov 2018 14:18:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=9GzphvJPW1JnyRu55nDmjpSF6NSlVR6hVgi4w1oviHM=;
        b=fokeO0Kj29aVHHpiIfavY+cV2LsK7cP9WfSpGlTkZD1Xt8G8NToz5/3yQdxi8X6Q8C
         OWXHGnvpvtJEPFOj/tr218JlwIEtgwS43FG/WCGrj/Ni6c/KMtbbwlkqACVgkDu6X1pq
         /0LirkqYbbaybLyRCgMoI11d4gBkKfMcwDUBvp1XE288UcupEizrf6arRweqlS5W+9Uk
         AanPHfV+Gr5VhLUxFQxdMfHuHW2SiOL5S+g4/tkOeeIZ2ndmfDiMWqGnUDpmZszCW8aU
         vYDTRv5m+RGiFM5f4kfshwpeqE3PG22Gonu9tFa3qKOe0VgdbLgz2dU02OvxkPqBz0Pt
         svLQ==
X-Received: by 2002:a17:902:3181:: with SMTP id x1-v6mr14158174plb.240.1541888308122;
        Sat, 10 Nov 2018 14:18:28 -0800 (PST)
Received: from ?IPv6:2600:1010:b014:dd5:5d31:b51f:b663:9c04? ([2600:1010:b014:dd5:5d31:b51f:b663:9c04])
        by smtp.gmail.com with ESMTPSA id 7-v6sm9701667pgk.31.2018.11.10.14.18.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 10 Nov 2018 14:18:26 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16A404)
In-Reply-To: <20181110220933.GB96924@google.com>
Date: Sat, 10 Nov 2018 14:18:23 -0800
Cc: Daniel Colascione <dancol@google.com>,
        Jann Horn <jannh@google.com>,
        kernel list <linux-kernel@vger.kernel.org>,
        John Reck <jreck@google.com>,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Bruce Fields <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Minchan Kim <minchan@kernel.org>,
        Shuah Khan <shuah@kernel.org>,
        Valdis Kletnieks <valdis.kletnieks@vt.edu>,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <907D942E-E321-4BD7-BED7-ACD1D96A3643@amacapital.net>
References: <20181108041537.39694-1-joel@joelfernandes.org> <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com> <CAG48ez0kQ4d566bXTFOYANDgii-stL-Qj-oyaBzvfxdV=PU-7g@mail.gmail.com> <20181110032005.GA22238@google.com> <69CE06CC-E47C-4992-848A-66EB23EE6C74@amacapital.net> <20181110182405.GB242356@google.com> <CAKOZuesQXRtthJTEr86LByH3gPpAdT-PQM0d1jqr131=zZNRKw@mail.gmail.com> <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com> <20181110220933.GB96924@google.com>
To: Joel Fernandes <joel@joelfernandes.org>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3FEBMWedbX80oAA--.11733S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJFW3XF4UJw4UJry7Ww13CFg_yoWrKr13pF
	W5Ga1Ykrs5KFW8Ar92yF18XFWrtrWxJr43Wr9agryUZwn09r1SgF4fXw4j9FyxArs7Gw4j
	vrWUtry7Za4qvaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPvb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1Y
	6r17McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VW3MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW8Jr0_Cr1UMxvI
	42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82IY64kExV
	AvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AK
	xVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r4a6rW5MIIYrx
	kI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWrJr0_WFyUJbIYCTnIWIevJa73UjIFyTuY
	vjxUQhFxDUUUU


> On Nov 10, 2018, at 2:09 PM, Joel Fernandes <joel@joelfernandes.org> wrote=
:
>=20
>> On Sat, Nov 10, 2018 at 11:11:27AM -0800, Daniel Colascione wrote:
>>> On Sat, Nov 10, 2018 at 10:45 AM, Daniel Colascione <dancol@google.com> w=
rote:
>>>> On Sat, Nov 10, 2018 at 10:24 AM, Joel Fernandes <joel@joelfernandes.or=
g> wrote:
>>>> Thanks Andy for your thoughts, my comments below:
>> [snip]
>>>> I don't see it as warty, different seals will work differently. It work=
s
>>>> quite well for our usecase, and since Linux is all about solving real
>>>> problems in the real work, it would be useful to have it.
>>>>=20
>>>>> - causes a probably-observable effect in the file mode in F_GETFL.
>>>>=20
>>>> Wouldn't that be the right thing to observe anyway?
>>>>=20
>>>>> - causes reopen to fail.
>>>>=20
>>>> So this concern isn't true anymore if we make reopen fail only for WRIT=
E
>>>> opens as Daniel suggested. I will make this change so that the security=
 fix
>>>> is a clean one.
>>>>=20
>>>>> - does *not* affect other struct files that may already exist on the s=
ame inode.
>>>>=20
>>>> TBH if you really want to block all writes to the file, then you want
>>>> F_SEAL_WRITE, not this seal. The usecase we have is the fd is sent over=
 IPC
>>>> to another process and we want to prevent any new writes in the receive=
r
>>>> side. There is no way this other receiving process can have an existing=
 fd
>>>> unless it was already sent one without the seal applied.  The proposed s=
eal
>>>> could be renamed to F_SEAL_FD_WRITE if that is preferred.
>>>>=20
>>>>> - mysteriously malfunctions if you try to set it again on another stru=
ct
>>>>> file that already exists
>>>>>=20
>>>>=20
>>>> I didn't follow this, could you explain more?
>>>>=20
>>>>> - probably is insecure when used on hugetlbfs.
>>>>=20
>>>> The usecase is not expected to prevent all writes, indeed the usecase
>>>> requires existing mmaps to continue to be able to write into the memory=
 map.
>>>> So would you call that a security issue too? The use of the seal wants t=
o
>>>> allow existing mmap regions to be continue to be written into (I mentio=
ned
>>>> more details in the cover letter).
>>>>=20
>>>>> I see two reasonable solutions:
>>>>>=20
>>>>> 1. Don=E2=80=99t fiddle with the struct file at all. Instead make the i=
node flag
>>>>> work by itself.
>>>>=20
>>>> Currently, the various VFS paths check only the struct file's f_mode to=
 deny
>>>> writes of already opened files. This would mean more checking in all th=
ose
>>>> paths (and modification of all those paths).
>>>>=20
>>>> Anyway going with that idea, we could
>>>> 1. call deny_write_access(file) from the memfd's seal path which decrem=
ents
>>>> the inode::i_writecount.
>>>> 2. call get_write_access(inode) in the various VFS paths in addition to=

>>>> checking for FMODE_*WRITE and deny the write (incase i_writecount is ne=
gative)
>>>>=20
>>>> That will prevent both reopens, and writes from succeeding. However I w=
orry a
>>>> bit about 2 not being too familiar with VFS internals, about what the
>>>> consequences of doing that may be.
>>>=20
>>> IMHO, modifying both the inode and the struct file separately is fine,
>>> since they mean different things. In regular filesystems, it's fine to
>>> have a read-write open file description for a file whose inode grants
>>> write permission to nobody. Speaking of which: is fchmod enough to
>>> prevent this attack?
>>=20
>> Well, yes and no. fchmod does prevent reopening the file RW, but
>> anyone with permissions (owner, CAP_FOWNER) can just fchmod it back. A
>> seal is supposed to be irrevocable, so fchmod-as-inode-seal probably
>> isn't sufficient by itself. While it might be good enough for Android
>> (in the sense that it'll prevent RW-reopens from other security
>> contexts to which we send an open memfd file), it's still conceptually
>> ugly, IMHO. Let's go with the original approach of just tweaking the
>> inode so that open-for-write is permanently blocked.
>=20
> Agreed with the idea of modifying both file and inode flags. I was thinkin=
g
> modifying i_mode may do the trick but as you pointed it probably could be
> reverted by chmod or some other attribute setting calls.
>=20
> OTOH, I don't think deny_write_access(file) can be reverted from any
> user-facing path so we could do that from the seal to prevent the future
> opens in write mode. I'll double check and test that out tomorrow.
>=20
>=20

This seems considerably more complicated and more fragile than needed. Just a=
dd a new F_SEAL_WRITE_FUTURE.  Grep for F_SEAL_WRITE and make the _FUTURE va=
riant work exactly like it with two exceptions:

- shmem_mmap and maybe its hugetlbfs equivalent should check for it and act a=
ccordingly.

- add_seals won=E2=80=99t need the wait_for_pins and mapping_deny_write logi=
c.

That really should be all that=E2=80=99s needed.=
