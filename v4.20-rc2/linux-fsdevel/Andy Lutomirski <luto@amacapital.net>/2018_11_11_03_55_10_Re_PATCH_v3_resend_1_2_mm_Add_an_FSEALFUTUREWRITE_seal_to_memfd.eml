Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:03:54 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgCn31zFN+dbcNpwAQ--.34753S3;
	Sun, 11 Nov 2018 03:55:50 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnfzvDN+db5HMoAA--.619S3;
	Sun, 11 Nov 2018 03:55:48 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id w3-v6so2270463pgs.11
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 11:55:48 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version:subject
         :from:in-reply-to:date:cc:content-transfer-encoding:message-id
         :references:to:sender:precedence:list-id;
        bh=jiigZMjCDbHcRQBbEfBJrG2SpZnMvpQe/kVZJTi6EME=;
        b=MB/tJn0IuAF9Rh7HHB37RESx4dVc5IdYlNH8o760XmCnU72yLOOJ9FsQSVqEq3ogtR
         mKIz4iDSnRJGqONTuSKtxyCGNXIN3pO3edr2YYA/cats3zsu9PQcjOtxhsf9gVEY9HlX
         ybxnzxqSk+Edp4xbg3AE5p/gNUrzSXAqwXdtdF1OKxm49u0Ww7LMiGRu/Hbyr2W8mU99
         JZi783BnTMueBHD9h1GbdqBdFtcbQ2gSkvuPOD83a9CswUEVz3bEcE1pwU3y5D5ggQ6B
         ScPtbUsmbpW6Vztxttttza3ydJ9CK4wx2G+6ySSYFAQ1WIgdorVl/re6pp1j2Yv2OzOb
         Wyxw==
X-Gm-Message-State: AGRZ1gL3LVVz1vMfJdk3mXUIQ9DCvMbC1qWfS51MQ3r9av8GHa0GHWZ+
	5tL61Hg1VfAXNT13zSi2Dl17+qzb0RraLkUst38nUtgYBUZU/3o=
X-Received: by 2002:a65:66ce:: with SMTP id c14mr11934294pgw.450.1541879747718;
        Sat, 10 Nov 2018 11:55:47 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1422485pjt;
        Sat, 10 Nov 2018 11:55:46 -0800 (PST)
X-Google-Smtp-Source: AJdET5fH/b8DGkPwn9SpQmBmneqf2TzEbxyivfwqMfLY/B3rGbihssLsMJB0tT+jfedbKegzAjy4
X-Received: by 2002:a63:3287:: with SMTP id y129mr12133825pgy.337.1541879746287;
        Sat, 10 Nov 2018 11:55:46 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541879746; cv=none;
        d=google.com; s=arc-20160816;
        b=mad04qkm8xOeTmH+4k6+ecuDnP0tGDCJx3/NQmGtNvdzsSJ/YzSF4B148+fJ08Ipha
         uevPKhM7fR17UGopu1hFTzxsTi4tHhjkonILAipYgpExfsNfYYMrFcrJVMX1ZmKi+TPK
         V/8zulsZWcpLl7NSx4kx3ZMHmSGgLH0lK82PD+Kb72jgCiDkwPnY7+Nv6ls7Gq7dVlVA
         fTCDhCMQ3BqEr1zA27UIzpvV/t/PiFkoRGKj2hML3OiLtZHMkw225dIA2ThCW6EeyeGW
         NknooqOK5tb+kAjHO66C7b6x5mfO7NHaTXgR1o/Ls+Qpxx/34Lmdg/AD5N4tzZQsDern
         LTSg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:to:references:message-id
         :content-transfer-encoding:cc:date:in-reply-to:from:subject
         :mime-version:dkim-signature;
        bh=jiigZMjCDbHcRQBbEfBJrG2SpZnMvpQe/kVZJTi6EME=;
        b=IufU+oBg4FRz5JxdPBZP7ZHGLOmGS3rteB4Xwt4S9I0Du6eDku7XZTHXtrMg3cI+6a
         cYN0merGwW1WR+cPZozGqNXbR5GWYqRg0vIHzLtt3ejUy/isi7xfSda8wcLq8fktYIwK
         wpQ7RIvZl7KXDT0N235vNyUqn+eXTlExW/VJ+eHQxANK22C5eewOkXVGwlZogzBJE0eV
         TMdbwYpmHrB/kpxp2A241uvI5T0mGo5X9KOimjyA0NRF2rUy81vVpM2NPucm5Z1BD8qh
         ZBUbT0PKIiXByvpH/mbfDxNpHwO+qgzlP2cL5/A8+3MOfy9QUtzwPorD/SOgOX6WEmon
         BaGg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@amacapital-net.20150623.gappssmtp.com header.s=20150623 header.b=BebyAMPh;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p187-v6si12552189pfb.127.2018.11.10.11.55.19;
        Sat, 10 Nov 2018 11:55:46 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725996AbeKKFlW (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sun, 11 Nov 2018 00:41:22 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:42782 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725846AbeKKFlW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 11 Nov 2018 00:41:22 -0500
Received: by mail-pg1-f195.google.com with SMTP id i4-v6so2276021pgq.9
        for <linux-kernel@vger.kernel.org>; Sat, 10 Nov 2018 11:55:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=jiigZMjCDbHcRQBbEfBJrG2SpZnMvpQe/kVZJTi6EME=;
        b=BebyAMPhfNbjsp26GZu+NAZbLe0CUnxKLKPTi4Mmh3ii07BoYAYjsneZMzrFWKwnFo
         4F+7Sz/pRpu5MjdXmNxfnzhzLuHhChBO47tpvdnbM6Cg9dmEpZyXhmwPC1vowbz5tz9P
         wW7Y+ywXylzX5Wpvhz+isDdZYD9FL86dxgATVF9uQmPdpL33n73SkRjem2c3UKUGv3IC
         XA0ERVbyGjLN531vXzuJpEIJkhggZljGo+BiNcjsQh25CCaWA/kx5g29kOI+PSehMifa
         +RQmxJJURUc4YR5GKkDNKkRco8eXfzZJR4JvCD5j3zu9m+FEDUk+/lM5qucW6+SQUVZo
         o+mQ==
X-Received: by 2002:a62:5285:: with SMTP id g127-v6mr13877288pfb.128.1541879713073;
        Sat, 10 Nov 2018 11:55:13 -0800 (PST)
Received: from ?IPv6:2600:1010:b011:f816:90f9:2c3c:c10b:2a0? ([2600:1010:b011:f816:90f9:2c3c:c10b:2a0])
        by smtp.gmail.com with ESMTPSA id s37sm7162035pgm.19.2018.11.10.11.55.11
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 10 Nov 2018 11:55:12 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16A404)
In-Reply-To: <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com>
Date: Sat, 10 Nov 2018 11:55:10 -0800
Cc: Joel Fernandes <joel@joelfernandes.org>,
        Jann Horn <jannh@google.com>,
        kernel list <linux-kernel@vger.kernel.org>,
        John Reck <jreck@google.com>,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Bruce Fields <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Minchan Kim <minchan@kernel.org>,
        Shuah Khan <shuah@kernel.org>,
        Valdis Kletnieks <valdis.kletnieks@vt.edu>,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <C6C5D673-4A94-4A79-B5E9-B7DC847F84D1@amacapital.net>
References: <20181108041537.39694-1-joel@joelfernandes.org> <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com> <CAG48ez0kQ4d566bXTFOYANDgii-stL-Qj-oyaBzvfxdV=PU-7g@mail.gmail.com> <20181110032005.GA22238@google.com> <69CE06CC-E47C-4992-848A-66EB23EE6C74@amacapital.net> <20181110182405.GB242356@google.com> <CAKOZuesQXRtthJTEr86LByH3gPpAdT-PQM0d1jqr131=zZNRKw@mail.gmail.com> <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com>
To: Daniel Colascione <dancol@google.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnfzvDN+db5HMoAA--.619S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWw1fCF43Kr1fuw13GFWrAFb_yoWrGFWDpF
	W5GayYkFs5tFW8Jr92yF48JF4rt3yftr1fWrn3WrW2vwnY9r1Sgr4Sqr45uFyxZrs7Ga1j
	vrWUtry3Za4DZ37anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmvb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2Ij64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xAMxkI
	ecxEwVCI4VWrMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJVW8Jr1lcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Gr0_Gr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMxCIbckI1I0E14v26r1Y
	6r17MI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7
	AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Wr1j6rW3JrUv
	cSsGvfC2KfnxnUUI43ZEXa7IUob2-5UUUUU==


> On Nov 10, 2018, at 11:11 AM, Daniel Colascione <dancol@google.com> wrote:=

>=20
>> On Sat, Nov 10, 2018 at 10:45 AM, Daniel Colascione <dancol@google.com> w=
rote:
>>> On Sat, Nov 10, 2018 at 10:24 AM, Joel Fernandes <joel@joelfernandes.org=
> wrote:
>>> Thanks Andy for your thoughts, my comments below:
> [snip]
>>> I don't see it as warty, different seals will work differently. It works=

>>> quite well for our usecase, and since Linux is all about solving real
>>> problems in the real work, it would be useful to have it.
>>>=20
>>>> - causes a probably-observable effect in the file mode in F_GETFL.
>>>=20
>>> Wouldn't that be the right thing to observe anyway?
>>>=20
>>>> - causes reopen to fail.
>>>=20
>>> So this concern isn't true anymore if we make reopen fail only for WRITE=

>>> opens as Daniel suggested. I will make this change so that the security f=
ix
>>> is a clean one.
>>>=20
>>>> - does *not* affect other struct files that may already exist on the sa=
me inode.
>>>=20
>>> TBH if you really want to block all writes to the file, then you want
>>> F_SEAL_WRITE, not this seal. The usecase we have is the fd is sent over I=
PC
>>> to another process and we want to prevent any new writes in the receiver=

>>> side. There is no way this other receiving process can have an existing f=
d
>>> unless it was already sent one without the seal applied.  The proposed s=
eal
>>> could be renamed to F_SEAL_FD_WRITE if that is preferred.
>>>=20
>>>> - mysteriously malfunctions if you try to set it again on another struc=
t
>>>> file that already exists
>>>>=20
>>>=20
>>> I didn't follow this, could you explain more?
>>>=20
>>>> - probably is insecure when used on hugetlbfs.
>>>=20
>>> The usecase is not expected to prevent all writes, indeed the usecase
>>> requires existing mmaps to continue to be able to write into the memory m=
ap.
>>> So would you call that a security issue too? The use of the seal wants t=
o
>>> allow existing mmap regions to be continue to be written into (I mention=
ed
>>> more details in the cover letter).
>>>=20
>>>> I see two reasonable solutions:
>>>>=20
>>>> 1. Don=E2=80=99t fiddle with the struct file at all. Instead make the i=
node flag
>>>> work by itself.
>>>=20
>>> Currently, the various VFS paths check only the struct file's f_mode to d=
eny
>>> writes of already opened files. This would mean more checking in all tho=
se
>>> paths (and modification of all those paths).
>>>=20
>>> Anyway going with that idea, we could
>>> 1. call deny_write_access(file) from the memfd's seal path which decreme=
nts
>>> the inode::i_writecount.
>>> 2. call get_write_access(inode) in the various VFS paths in addition to
>>> checking for FMODE_*WRITE and deny the write (incase i_writecount is neg=
ative)
>>>=20
>>> That will prevent both reopens, and writes from succeeding. However I wo=
rry a
>>> bit about 2 not being too familiar with VFS internals, about what the
>>> consequences of doing that may be.
>>=20
>> IMHO, modifying both the inode and the struct file separately is fine,
>> since they mean different things. In regular filesystems, it's fine to
>> have a read-write open file description for a file whose inode grants
>> write permission to nobody. Speaking of which: is fchmod enough to
>> prevent this attack?
>=20
> Well, yes and no. fchmod does prevent reopening the file RW, but
> anyone with permissions (owner, CAP_FOWNER) can just fchmod it back. A
> seal is supposed to be irrevocable, so fchmod-as-inode-seal probably
> isn't sufficient by itself. While it might be good enough for Android
> (in the sense that it'll prevent RW-reopens from other security
> contexts to which we send an open memfd file), it's still conceptually
> ugly, IMHO. Let's go with the original approach of just tweaking the
> inode so that open-for-write is permanently blocked.

This should be straightforward. Just add a new seal type and wire it up. It s=
hould be considerably simpler than SEAL_WRITE.=
