Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 11 Nov 2018 15:03:49 -0000
Received: from icoremail.net (unknown [209.85.210.177])
	by mail-app2 (Coremail) with SMTP id by_KCgA3cI54LedbKqZwAQ--.37513S3;
	Sun, 11 Nov 2018 03:11:53 +0800 (CST)
Received: from mail-pf1-f177.google.com (unknown [209.85.210.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCngT12LedbTVUoAA--.10855S3;
	Sun, 11 Nov 2018 03:11:51 +0800 (CST)
Received: by mail-pf1-f177.google.com with SMTP id p17-v6so2392935pfj.12
        for <xuliker@zju.edu.cn>; Sat, 10 Nov 2018 11:11:51 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:mime-version
         :in-reply-to:references:from:date:message-id:subject:to:cc
         :content-transfer-encoding:sender:precedence:list-id;
        bh=Yeq/3KCeKHkOXPSQyNrlc76coOe7+QgcJXRCBcp7UYE=;
        b=dXzBw1IQCQ043CzXvVSzmYPZHGAs9T+k9WhDc1NYuFOhmKAgnV+2U35SuokhIgKFsy
         CoT4zlHYVBGoT+dWzhtX1c1DX4LAwSA7deM77jUkrgmSxyEPsJOXrpWqEIutaoRN7GHh
         4rv1eLaGCTheax2Ptjb+/rvt2OFvIG0hGVJkPpdQtjt3jW6vaLCOZdDw4kY9zFOtL3Hz
         TiE0jub0Gb2R4nbgXGMKEYizyf2cnVGea76w4i47ZsghlYdfgqp4mhHZextYf8ua8C67
         p2R494qJXjtKa8uxty8NYiB6b231mfpudatgwhlqn2/aTNgPuQ5/otv1wokl9K6eXbDI
         9ctw==
X-Gm-Message-State: AGRZ1gLmAg5ZzMYSAr7GIH+OVVDHaUw7vHO5mS0cjFOIJMA1DyacXn0t
	TmvKDOKHCvex61HeS/2bhFHkATY4il8fPe+C5wkJPOOJpJjYCrQ=
X-Received: by 2002:a63:bc02:: with SMTP id q2mr7590614pge.116.1541877110653;
        Sat, 10 Nov 2018 11:11:50 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp1393174pjt;
        Sat, 10 Nov 2018 11:11:49 -0800 (PST)
X-Google-Smtp-Source: AJdET5cEBjfFxZo5t53dw3sLRUigxKByvNTcS8YN9s+oAXS+EemGrrDAyrqOm0Yil7HRgE6CcIJW
X-Received: by 2002:a65:57cb:: with SMTP id q11mr11941549pgr.60.1541877109651;
        Sat, 10 Nov 2018 11:11:49 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541877109; cv=none;
        d=google.com; s=arc-20160816;
        b=hnEvHHr+u7NHw1xoNlTpf6fkNWi/kRs+SdAEgcLzRi6STY+TAqY+3O5CE3ZtUWLq0u
         IEmgZZGRBjN2uqY+HZYAEZQCa2psefT/rDyP/1vo8Z45lPAiuV6U799xhJRrMwjlYgEw
         IQ8AoxLtUjB13RltIXW4epgM9t55JiCHxuywqYH7e028KRBwiaWvqEd59ho7Cc+LAY1x
         yhZp6sr/s3QQLsDuIkLNnVwSm4O1WTqDroC0KQcU524LSvSjAgmM4QcBBgoMGneyKtaS
         mNgdLaM5fF3rBuoyfnlhHU7mErf/R7opmxbbdO/FUSgJdJKVnAHs7fzzVytkKHScxORv
         4GVA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:cc:to:subject
         :message-id:date:from:references:in-reply-to:mime-version
         :dkim-signature;
        bh=Yeq/3KCeKHkOXPSQyNrlc76coOe7+QgcJXRCBcp7UYE=;
        b=xeHdjYS1/XV4C//wwacBXS+91X6fdRSgCNRWxp5r/bCY8CBGPXRWIGqaJfNaWQxwy8
         UGL5F/2UNYFCkhVTvROWUrpkXpeCO0Yd/UYLl3adYIgiznFT9o0gXxCfx1xVaFOaxikt
         zrgVbLuCB6gEmwTCrmkbSrA+l6ETVEBkmOhodAtIxjnNBwxSBHeu+zfBJwL/KD+b6gdI
         Z3a3XGz3TLzVpSQO334j2RcuLrLBNbfPlc4WhO9A9HySkh5wlhAC+ti0GtA05VlhHWCu
         GJe5Ee65CJf/cYAn7I5vVXsigcoaqxNK0KR6YX2kfPpRppK3gO7DUhvkOcb8bgtAKQSg
         Gtmg==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=CuSWvEjx;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z66-v6si12513355pfb.104.2018.11.10.11.11.33;
        Sat, 10 Nov 2018 11:11:49 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726487AbeKKE5a (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Sat, 10 Nov 2018 23:57:30 -0500
Received: from mail-vk1-f194.google.com ([209.85.221.194]:40038 "EHLO
        mail-vk1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726495AbeKKE5a (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 10 Nov 2018 23:57:30 -0500
Received: by mail-vk1-f194.google.com with SMTP id v70so1154813vkv.7
        for <linux-kernel@vger.kernel.org>; Sat, 10 Nov 2018 11:11:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=Yeq/3KCeKHkOXPSQyNrlc76coOe7+QgcJXRCBcp7UYE=;
        b=CuSWvEjxJ1scY9oh9SSU40Iyn/7q9o1mWLEYcde2+a75OcpvkRy6U5FXvYvQpZur7d
         6+Kctxkbvv5fn2Q1wsViuqWvQdGMImmC+GXsI4+m6jEdppB9BpifNaRAp2iKrcCmL5U8
         cKLyVNhnBkAs15nCNa2Su1OkXoYcdU3/uoP4156D94TKaa+HoMpdOUBHT1FSXPumSSt3
         wPK0AfHG5njD+XWeGXjnnVAI0dnNpC/Jf2aO+iJdm6CbN9LTYPgMm4hJITbQZLESey+P
         6jHkAyQrq53wW92RmfNf2JlB8ybXmn80uumpNzM5Ss7aqBSZ2mqTbsa7BgrlwYtCl95k
         Gt2w==
X-Received: by 2002:a1f:a04b:: with SMTP id j72mr5760277vke.51.1541877088083;
 Sat, 10 Nov 2018 11:11:28 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a67:f48d:0:0:0:0:0 with HTTP; Sat, 10 Nov 2018 11:11:27
 -0800 (PST)
In-Reply-To: <CAKOZuesQXRtthJTEr86LByH3gPpAdT-PQM0d1jqr131=zZNRKw@mail.gmail.com>
References: <20181108041537.39694-1-joel@joelfernandes.org>
 <CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com>
 <CAG48ez0kQ4d566bXTFOYANDgii-stL-Qj-oyaBzvfxdV=PU-7g@mail.gmail.com>
 <20181110032005.GA22238@google.com> <69CE06CC-E47C-4992-848A-66EB23EE6C74@amacapital.net>
 <20181110182405.GB242356@google.com> <CAKOZuesQXRtthJTEr86LByH3gPpAdT-PQM0d1jqr131=zZNRKw@mail.gmail.com>
From: Daniel Colascione <dancol@google.com>
Date: Sat, 10 Nov 2018 11:11:27 -0800
Message-ID: <CAKOZueum8MtNvJ5P=W7_pRw62TdQdCgyjCwwbG1wezNboC1cxQ@mail.gmail.com>
Subject: Re: [PATCH v3 resend 1/2] mm: Add an F_SEAL_FUTURE_WRITE seal to memfd
To: Joel Fernandes <joel@joelfernandes.org>
Cc: Andy Lutomirski <luto@amacapital.net>,
        Jann Horn <jannh@google.com>,
        kernel list <linux-kernel@vger.kernel.org>,
        John Reck <jreck@google.com>,
        John Stultz <john.stultz@linaro.org>,
        Todd Kjos <tkjos@google.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Christoph Hellwig <hch@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Bruce Fields <bfields@fieldses.org>,
        Jeff Layton <jlayton@kernel.org>,
        Khalid Aziz <khalid.aziz@oracle.com>, Lei.Yang@windriver.com,
        linux-fsdevel@vger.kernel.org, linux-kselftest@vger.kernel.org,
        Linux-MM <linux-mm@kvack.org>, marcandre.lureau@redhat.com,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Minchan Kim <minchan@kernel.org>,
        Shuah Khan <shuah@kernel.org>,
        Valdis Kletnieks <valdis.kletnieks@vt.edu>,
        Hugh Dickins <hughd@google.com>,
        Linux API <linux-api@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCngT12LedbTVUoAA--.10855S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCw18uFWrAF1fXw45Jry3twb_yoW5KrWrpF
	W5GayYkan5Ka4rAr92yF18JF4Fyw4rJr4fWrn3WrWjvwsYgr1SgFWSqr4UuFyxZrs7Ga1j
	vw4UtryfZa4DA3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	JVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UMx02cVCv0xWlc7
	CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Avz4vEIxC_WwCY0x0I
	x7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_JFI_Gr1lcIIF0xvE2Ix0cI8IcVCY1x
	0267AKxVWUJVW8JwCYIxAIcVC2z280aVAFwI0_Cr0_Gr1UMxvI42IY6I8E87Iv6xkF7I0E
	14v26r4j6r4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480
	Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr41lIxAIcVCF04
	k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUdY0PDUUUU

On Sat, Nov 10, 2018 at 10:45 AM, Daniel Colascione <dancol@google.com> wro=
te:
> On Sat, Nov 10, 2018 at 10:24 AM, Joel Fernandes <joel@joelfernandes.org>=
 wrote:
>> Thanks Andy for your thoughts, my comments below:
[snip]
>> I don't see it as warty, different seals will work differently. It works
>> quite well for our usecase, and since Linux is all about solving real
>> problems in the real work, it would be useful to have it.
>>
>>> - causes a probably-observable effect in the file mode in F_GETFL.
>>
>> Wouldn't that be the right thing to observe anyway?
>>
>>> - causes reopen to fail.
>>
>> So this concern isn't true anymore if we make reopen fail only for WRITE
>> opens as Daniel suggested. I will make this change so that the security =
fix
>> is a clean one.
>>
>>> - does *not* affect other struct files that may already exist on the sa=
me inode.
>>
>> TBH if you really want to block all writes to the file, then you want
>> F_SEAL_WRITE, not this seal. The usecase we have is the fd is sent over =
IPC
>> to another process and we want to prevent any new writes in the receiver
>> side. There is no way this other receiving process can have an existing =
fd
>> unless it was already sent one without the seal applied.  The proposed s=
eal
>> could be renamed to F_SEAL_FD_WRITE if that is preferred.
>>
>>> - mysteriously malfunctions if you try to set it again on another struc=
t
>>> file that already exists
>>>
>>
>> I didn't follow this, could you explain more?
>>
>>> - probably is insecure when used on hugetlbfs.
>>
>> The usecase is not expected to prevent all writes, indeed the usecase
>> requires existing mmaps to continue to be able to write into the memory =
map.
>> So would you call that a security issue too? The use of the seal wants t=
o
>> allow existing mmap regions to be continue to be written into (I mention=
ed
>> more details in the cover letter).
>>
>>> I see two reasonable solutions:
>>>
>>> 1. Don=E2=80=99t fiddle with the struct file at all. Instead make the i=
node flag
>>> work by itself.
>>
>> Currently, the various VFS paths check only the struct file's f_mode to =
deny
>> writes of already opened files. This would mean more checking in all tho=
se
>> paths (and modification of all those paths).
>>
>> Anyway going with that idea, we could
>> 1. call deny_write_access(file) from the memfd's seal path which decreme=
nts
>> the inode::i_writecount.
>> 2. call get_write_access(inode) in the various VFS paths in addition to
>> checking for FMODE_*WRITE and deny the write (incase i_writecount is neg=
ative)
>>
>> That will prevent both reopens, and writes from succeeding. However I wo=
rry a
>> bit about 2 not being too familiar with VFS internals, about what the
>> consequences of doing that may be.
>
> IMHO, modifying both the inode and the struct file separately is fine,
> since they mean different things. In regular filesystems, it's fine to
> have a read-write open file description for a file whose inode grants
> write permission to nobody. Speaking of which: is fchmod enough to
> prevent this attack?

Well, yes and no. fchmod does prevent reopening the file RW, but
anyone with permissions (owner, CAP_FOWNER) can just fchmod it back. A
seal is supposed to be irrevocable, so fchmod-as-inode-seal probably
isn't sufficient by itself. While it might be good enough for Android
(in the sense that it'll prevent RW-reopens from other security
contexts to which we send an open memfd file), it's still conceptually
ugly, IMHO. Let's go with the original approach of just tweaking the
inode so that open-for-write is permanently blocked.
