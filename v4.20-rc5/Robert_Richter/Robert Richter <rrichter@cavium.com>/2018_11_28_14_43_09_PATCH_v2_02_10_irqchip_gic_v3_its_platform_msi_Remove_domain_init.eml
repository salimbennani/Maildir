Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:37:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0F4D55802E4;
	Wed, 28 Nov 2018 06:43:30 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 28 Nov 2018 06:43:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AqmvXOxeFc8Vh/AAgbKdfvUztlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/bRSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUPE+QPM+VWr4b/plsBsRSwCga3BOP3yDJFnWP23bQg3ug9DQ3KwBEsEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPipwqnP1jrMcelW2Svg44bUcxAuvfGMXa5ufsrL1EIiEBnFjk+R?=
 =?us-ascii?q?qYP5PzOVyvoCs3KA4uV8T+2vlW8nqxx0ojS12sgsjYzJi5sTx1vZ9it52J44Kc?=
 =?us-ascii?q?OkREN/e9KoDZVduz+AO4drQc4uX3tktSc4x7Eeu5O2fjIGxIkoyhLFdvCLbYeF?=
 =?us-ascii?q?7gj+WOqNIDp0nHxld6y8ihqu9EWtz/HzWdWo31tIqydKj8TAum0Q2xHW6MWHRP?=
 =?us-ascii?q?Vw8Vqk1DuO1g3e6PxLLEYpnqTBMZEh2KQ/lp8LvETDACD2nEL2gbeIdkUr5Oeo?=
 =?us-ascii?q?8f7rYrb4qZ+GMY97lAX+Pr4pmsylDuQ0KgkOX26F9uSgzLDv41H1TbFQgvErnK?=
 =?us-ascii?q?TVrorWKdkYq6KlGQNY04Qu5w66Dzi80dQYmXcHLEhCeBKCl4XpP1DOIPblDfaw?=
 =?us-ascii?q?mliskylkx+rAPrL/BpXBN3/Dkbnnfblj8U5R0xQzzd9B6JJOEL0BI+z8WlX3tN?=
 =?us-ascii?q?PGCh81KQu0w/zoCNllzIMRRXqPArOFMKPVqVKI4uMvI+qSa4MPtzf9NuMo5/rv?=
 =?us-ascii?q?jX8/hF8ccrOl3ZoRaHCkAPtmJ1+VbmbrgtcECW0KpBYxTPT2iF2eVj5ef3ayUL?=
 =?us-ascii?q?g95jEnEo2mCp3PRoCwgLOb2ie7EYZbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48kzRuurhP1y6J7LurI/S0VrZDj1N9r6OHJlhEy8jp0D8Ka02yWS2F0n2?=
 =?us-ascii?q?UIRyI53axloEx9zEuD3rZ8g/BCCdNT4PZJWB8gNZHA1+x6F8zyWgXZc9iTU1am?=
 =?us-ascii?q?QtKmATIrQtIr2dAOYV1wG9GjjhDFwiqrDKUZl72NBJwo7K3c22L9KNp6y3bDzK?=
 =?us-ascii?q?MhlUUpQtNTNW26ga5y7wvTCJTPk0mDk6aqdL4T3CjC9GqYyWqOvUdYUBN/UKnf?=
 =?us-ascii?q?XHAfYFfWosr95k/YU7CuDrEnOBNbycGeMqtKdsHpjVJeSfj+ItvefXy+l32wBR?=
 =?us-ascii?q?mSwLOMd5Tle2Ma0CXZC0gElgQT8G2CNQg/ACehvm3fACZvFVLpf0Pj7+1+pGmn?=
 =?us-ascii?q?QU8zygGAd1dh2Kat+h4JmfycTOse0a8etyc/tTp4Bla90MjQC9qbuQVher5RYd?=
 =?us-ascii?q?c84FdByGLYuBZxPp2mL6B+mFEedx57sF/p1xVyEo9Ai9QlrGs2zApuLqKVyE9B?=
 =?us-ascii?q?dzKd3ZD3Jr3XKmnz8Aqza6LM3VHeytKW+qYJ6PQ3sFjjuACpFkw/83RoydVV0n?=
 =?us-ascii?q?2c5onUAwoWS57+TkE39x1irbHAfiY9/5/U1WFrMaSsqDDC38wmBeQ7xRegZdtQ?=
 =?us-ascii?q?K76EGxLoHM0cBMiuL/IqlkOtbhIFOuBS6aE1M9mnd/uAxK6kIuJgkCi6gmRA5Y?=
 =?us-ascii?q?B3yliM+DZkSu7Uw5YFxOmV3wuaVzvmkFitqMH2mYBeajEUEWqy0izkBI9XZq1v?=
 =?us-ascii?q?cocHE2auI8urxtpgg57hQWJX9FmmB1kews+mZQKSb0Dh3Q1XzUkXu32nljeiwD?=
 =?us-ascii?q?xujj4pqbCT3CrQzOT4dRoLI3JES3NmjVjxP4e0ldcaXE6zYggtlRul41v6xqdB?=
 =?us-ascii?q?qKR+KWnTXVlHfyzsI25+Vauws6KIY9RT55MwrSVXTOO8bEiaS778uRcb0znvH3?=
 =?us-ascii?q?BDxDA9bDyqvpT5nxpniGOSNnpzrXzZed1uyhfb/tDTWflR3j8eTililTbXHkS8?=
 =?us-ascii?q?P8Wu/diMlZfMqPq+V2GiVp1UayXr1pmPtCi45W1rBx2wgfazl8bjEQg71y/7yt?=
 =?us-ascii?q?ZrWT/JrBb6fonkyaC6Pfh7cUlvAV/289B6FZ1mkossmJEQ3mAXh5WP8noAi2vz?=
 =?us-ascii?q?M9Rb2aTlYXoJRD4LxcPV4Qf/1E1iKHKJ25z2VnGHzsR9YNm6Z3sc2jgh4MBSFK?=
 =?us-ascii?q?eU8LtEkDN2olWirALde/h9nioHxvso534XmOUJuAsrziWADbEeB0hYPSrwlxuW?=
 =?us-ascii?q?69CytrlYZGGqcbKozkpxgcihDK2eogFbQHv5f5YiHSxq4cllPlPDzmbz6p36d9?=
 =?us-ascii?q?nKdt0cqAeUkxjbguhRKZIxkOcKhCV9NWL8u30l1/A0jRh00Z6mu4iHLn1n/Lil?=
 =?us-ascii?q?DR5AKj31e8QT9ynxjaZZm8aaxYGuEY9nGjUWR5voVvOoHSkWtfTmMQaODTI9pm?=
 =?us-ascii?q?2aGbrZAQ+Q9kNmo2jTHJCsMnGdPGMZwsl6RBmBOExfhxgZUy4gkZ4+EgCq2dbt?=
 =?us-ascii?q?cENk5j0K4l74qx1Myv9nNhXlU2ffohuoZSkwSJSFMBVW6QRC7V/PMcOC9uJzAz?=
 =?us-ascii?q?1Y/pq5oQyPMGObYhpHDXoTVkyYHVzjPaSu5drd8+ieHOW+NODDYbGPqexYSveJ?=
 =?us-ascii?q?yoij0opg/zaQKMqPOmNuAOE82kpGRXp5AdjWmy0TSywLkCLAd86apBCh+i1us8?=
 =?us-ascii?q?Cw6vLrVBj05YuIDbtSPs5i+xS3gaeFKu6Rizx1KTde1pMQ23DIzKIT00IViyFr?=
 =?us-ascii?q?bzOtC6gPtTbRTKLMna9aFx4bZD1yNMtL7KI83xNBOc3BitPy2b53kOQ1C0peVV?=
 =?us-ascii?q?H6nsGpZMoKI3yyNV/dBUaLMqiGKiPPw83tfay8TrhQhv1OtxKsoTabD1PjPjOb?=
 =?us-ascii?q?mjbzShCgKvtMgz+bPRBEvIG9cw1gCWziTNLgdx26P8V7jTwwwb0omHzKMXQQPi?=
 =?us-ascii?q?R7c0NItreQ9z9Xgu1jG2xd6XpoNfWEmyec7+XCNpkaq+dkAiRqmOJc+3k6z7pV?=
 =?us-ascii?q?7CdZRP16gifSr9huo024nemL0DZoTB1OqjNTjoKRoUpiIbnZ9oVHWXvc/BMC92?=
 =?us-ascii?q?OQCxELp9tjEtLuuqBQxcLJlKL8MzpC99PU/c0BB8nbMs6HMXwhMQb3Fz7QFgcK?=
 =?us-ascii?q?UTmrNWSMz3BaxdSb7HbdnIk8pZnhgtJaT7ZBXxonB/UVC0l/NNUYJdF8WTZy1f?=
 =?us-ascii?q?anjMkN7GH2gx3cRdVcs4qPAu6dBeXHLDefkKVeYB0J0fX0INJXfq/ywEtkInJ9?=
 =?us-ascii?q?m5zHAQKEX9lWpStJagY3rUlE/X15SCs11l6zOS2353pGL/m+kwQqwjF/auQx+S?=
 =?us-ascii?q?2kt00tJ1HKuCYquEI4h9T4hHaadzunf/T4Zp1fFyeh7xt5CZj8WQsgKFTqxUE?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAABlqP5bh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMFCBXAQLJwqHNgOETos/SoIhly6BJANKFQEYEwGHbiI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmIDAwECJBkBATcBBQkBAQEBTgMvJQIEAQ0FB?=
 =?us-ascii?q?YMcgWoDFQECAQGbRwKKB4FsM4J2AQEFhRYYggkIjBYXgUA/jn+JIYF4hA1CgQW?=
 =?us-ascii?q?PMAmKKoZ8CxiRFYREhDKPKwIEAgQFAg0BAQWBRoINMxoIGxWDJ4IbDBcSgziKU?=
 =?us-ascii?q?3KBBQEBIYtzAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAABlqP5bh0O0hNFkHQEBBQEHBQGBUQgBCwGBMFCBXAQ?=
 =?us-ascii?q?LJwqHNgOETos/SoIhly6BJANKFQEYEwGHbiI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmIDAwECJBkBATcBBQkBAQEBTgMvJQIEAQ0FBYMcgWoDFQECAQG?=
 =?us-ascii?q?bRwKKB4FsM4J2AQEFhRYYggkIjBYXgUA/jn+JIYF4hA1CgQWPMAmKKoZ8CxiRF?=
 =?us-ascii?q?YREhDKPKwIEAgQFAg0BAQWBRoINMxoIGxWDJ4IbDBcSgziKU3KBBQEBIYtzAYE?=
 =?us-ascii?q?eAQE?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="55195037"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 06:43:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728828AbeK2BpH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:45:07 -0500
Received: from mail-eopbgr800078.outbound.protection.outlook.com ([40.107.80.78]:26739
        "EHLO NAM03-DM3-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728766AbeK2BpF (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:45:05 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=WVJPuN4UrdNuubbuIz76x9ByAl3G3stZh22pOcKjrkg=;
 b=Kl7Zi4NRSUfDJA37B7EML5v50F/c1pNiifgiZeq3zjI1H4eH74JLOd82a9jSS+S2pVFNZZb6yk1iGEtVk0u293xs06jQsel8N1sDpy1xyCCOvI21MOrfFHKB6YcWsGEIxTl5JKPm7QPFV1IYXVsm59Ilf2etpYj5FRW1SqxN4Mg=
Received: from SN6PR07MB5326.namprd07.prod.outlook.com (52.135.105.33) by
 SN6PR07MB5182.namprd07.prod.outlook.com (52.135.101.143) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1361.16; Wed, 28 Nov 2018 14:43:09 +0000
Received: from SN6PR07MB5326.namprd07.prod.outlook.com
 ([fe80::ccc7:d111:7f3d:667d]) by SN6PR07MB5326.namprd07.prod.outlook.com
 ([fe80::ccc7:d111:7f3d:667d%4]) with mapi id 15.20.1361.018; Wed, 28 Nov 2018
 14:43:09 +0000
From: Robert Richter <rrichter@cavium.com>
To: Marc Zyngier <marc.zyngier@arm.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Jason Cooper <jason@lakedaemon.net>
CC: "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Stuart Yoder <stuyoder@gmail.com>,
        Laurentiu Tudor <laurentiu.tudor@nxp.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Will Deacon <will.deacon@arm.com>,
        Lorenzo Pieralisi <Lorenzo.Pieralisi@arm.com>,
        "Richter, Robert" <Robert.Richter@cavium.com>,
        Julien Thierry <julien.thierry@arm.com>
Subject: [PATCH v2 02/10] irqchip/gic-v3-its-platform-msi: Remove domain init
 order dependencies
Thread-Topic: [PATCH v2 02/10] irqchip/gic-v3-its-platform-msi: Remove domain
 init order dependencies
Thread-Index: AQHUhyiuiJ/5aLda5UGC92pCn/0y1A==
Date: Wed, 28 Nov 2018 14:43:09 +0000
Message-ID: <20181128144240.28727-3-rrichter@cavium.com>
References: <20181128144240.28727-1-rrichter@cavium.com>
In-Reply-To: <20181128144240.28727-1-rrichter@cavium.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: AM6P194CA0042.EURP194.PROD.OUTLOOK.COM
 (2603:10a6:209:84::19) To SN6PR07MB5326.namprd07.prod.outlook.com
 (2603:10b6:805:73::33)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [77.14.124.106]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;SN6PR07MB5182;6:CD+F/Z8LrRHmDQEZppQv6HfugA0KR45x9OdwDk7+8mXqnGT9jqKBbyTf8eKR8GXkXGyZ6kc7T3WQRLmKrWWMtd23dJcd5nnnOwdJRz+4eEG+8jb5NZPT/WY/GPtJUn48CHKIANuRnBGFvAZO6iUKvG/Vn46xRo3nnb2OECpBi1ielOl5670gAHPKNRpmPGZJvKHrkiUrqj2Meip9Gebh8a+g0y4tFHYRl11QxwK3Vjj1zGTNH4NhKw7PBeXBA2deD/Ik9SpOsWmJsLBhTZ6JAYm7gfPh0X2tlINtwdPWsOkGIkdXg7Jnlz5zI0XRPPByYZSrW0ytli9DwheCblxKesge7HWlPcyGrV+kYRGHDyKGV28dEeM8XvBq7wkC3cL95DyS5e1+yaTV4TnYZF/xPXfcWdlfhcf+CNTpIH1YkKI2mSdZZOTORca2NSptna6pKjI+5WcN0qhawyVmsMb+Zw==;5:0RSWt+c9+qsY2WpBrJ8H+29eMJ1hP7dGTTeI2u36UGH6PUostgxYoSYwgGmmhZsU4fzvwpRqVcGe78Hj8MODsAmMaO8Qg5zz3XtbIFLYVsVDyH/V9cq4hYB9QAkRboVgkwHRPBw0uqRqqmfl+gB24guAd2EXGM/AwhDzjEK+AxQ=;7:5Hxyu+R/XOBKISdHjk0tQsHtBCXkmAHWLUx3ijdDvk3nPRaKfPTO60Ht0y3X9veJH6T2HVQZUziPZT0IpbisWuyyLvS7A+rYK6TNWacAJTuVx7I6IGAcMRjtheoa88C6GB6ethOEiiXDr3D7ICwrBw==
x-ms-office365-filtering-correlation-id: dc754748-4c3b-4590-d803-08d6553fd0c9
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);SRVR:SN6PR07MB5182;
x-ms-traffictypediagnostic: SN6PR07MB5182:
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Robert.Richter@cavium.com; 
x-microsoft-antispam-prvs: <SN6PR07MB518201B3CD0CD8C8148C349CF1D10@SN6PR07MB5182.namprd07.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(93006095)(93001095)(3002001)(10201501046)(3231443)(999002)(944501410)(52105112)(148016)(149066)(150057)(6041310)(20161123560045)(20161123562045)(20161123558120)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:SN6PR07MB5182;BCL:0;PCL:0;RULEID:;SRVR:SN6PR07MB5182;
x-forefront-prvs: 0870212862
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(346002)(136003)(376002)(39860400002)(396003)(366004)(189003)(199004)(7416002)(5660300001)(6436002)(36756003)(54906003)(39060400002)(110136005)(446003)(11346002)(6116002)(3846002)(53936002)(97736004)(52116002)(76176011)(102836004)(4326008)(476003)(316002)(14454004)(2616005)(71190400001)(71200400001)(6512007)(1076002)(6506007)(7736002)(305945005)(486006)(81156014)(81166006)(386003)(72206003)(2906002)(99286004)(68736007)(8936002)(478600001)(106356001)(186003)(105586002)(6486002)(14444005)(66066001)(26005)(25786009)(256004)(8676002);DIR:OUT;SFP:1101;SCL:1;SRVR:SN6PR07MB5182;H:SN6PR07MB5326.namprd07.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: imD33EJ4JFbwtSgj5tbRMCsT8UrP/UprFNF42UT88YCrxe7DW6Mqw66xPZzkTYmGaw6yooYS9uZxfkYhC0hJK4qEewVo32LEE9pnXOHvo4IBDY+uWI2/p4PhR3aofw+98Yt43hJSZ1qhRCRou5z7T0oRhS/G7YG0InnhV8Ck0wE2ecoasNYanqKTDZ2QCLX1ESJK/1pgmJbV8YPUMWMknGnfpfzMC2mp6slrwRLpHHsXgBGb3fwUQTag3b58so5TSchCRdxjlsIgUvGuVr1S9vwNYwdNp8ZfbL3KDkJCQ9486R88pUX3UsKXQ9xfLQsabKioe1q7cX6FUZbOLAp5eqJKZ3nfLUQKaA815wJJdXg=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: cavium.com
X-MS-Exchange-CrossTenant-Network-Message-Id: dc754748-4c3b-4590-d803-08d6553fd0c9
X-MS-Exchange-CrossTenant-originalarrivaltime: 28 Nov 2018 14:43:09.7130
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 711e4ccf-2e9b-4bcf-a551-4094005b6194
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN6PR07MB5182
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Use new irq_domain_request_host_*() interface which allows independent
parent and child initialization using an irq domain request handler.
This makes it possible to move its initialization to a later point
during boot. All domains can be initialized in the same initcall level
then.

Signed-off-by: Robert Richter <rrichter@cavium.com>
---
 drivers/irqchip/irq-gic-v3-its-platform-msi.c | 54 +++++++++++++++++++++--=
----
 1 file changed, 42 insertions(+), 12 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3-its-platform-msi.c b/drivers/irqchi=
p/irq-gic-v3-its-platform-msi.c
index 7b8e87b493fe..1f2849bc58c4 100644
--- a/drivers/irqchip/irq-gic-v3-its-platform-msi.c
+++ b/drivers/irqchip/irq-gic-v3-its-platform-msi.c
@@ -94,25 +94,56 @@ static const struct of_device_id its_device_id[] =3D {
 	{},
 };
=20
-static int __init its_pmsi_init_one(struct fwnode_handle *fwnode,
-				const char *name)
+static int __init its_pmsi_create_irq_domain(struct irq_domain *parent,
+					void *priv)
 {
-	struct irq_domain *parent;
+	const char *name =3D priv;
+	int err =3D 0;
=20
-	parent =3D irq_find_matching_fwnode(fwnode, DOMAIN_BUS_NEXUS);
-	if (!parent || !msi_get_domain_info(parent)) {
-		pr_err("%s: unable to locate ITS domain\n", name);
-		return -ENXIO;
+	if (!msi_get_domain_info(parent)) {
+		err =3D -ENODEV;
+		goto out;
 	}
=20
-	if (!platform_msi_create_irq_domain(fwnode, &its_pmsi_domain_info,
+	if (!platform_msi_create_irq_domain(parent->fwnode, &its_pmsi_domain_info=
,
 					    parent)) {
-		pr_err("%s: unable to create platform domain\n", name);
-		return -ENXIO;
+		err =3D -ENXIO;
+		goto out;
 	}
=20
 	pr_info("Platform MSI: %s domain created\n", name);
-	return 0;
+out:
+	if (err)
+		pr_err("Platform MSI: Failed to create %s domain\n", name);
+
+	kfree(name);
+	return err;
+}
+
+static int __init its_pmsi_init_one(struct fwnode_handle *fwnode,
+				const char *name)
+{
+	void *priv =3D kstrdup(name, GFP_KERNEL);
+	int err;
+
+	if (!name) {
+		err =3D -EINVAL;
+		goto fail;
+	}
+
+	if (!priv) {
+		err =3D -ENOMEM;
+		goto fail;
+	}
+
+	err =3D irq_domain_request_fwnode(fwnode, DOMAIN_BUS_NEXUS,
+					its_pmsi_create_irq_domain, name, priv);
+	if (!err)
+		return 0;
+fail:
+	pr_err("Platform MSI: Failed to register %s domain\n", name);
+	kfree(priv);
+	return err;
 }
=20
 #ifdef CONFIG_ACPI
@@ -135,7 +166,6 @@ its_pmsi_parse_madt(struct acpi_subtable_header *header=
,
 	}
=20
 	err =3D its_pmsi_init_one(domain_handle, node_name);
-
 out:
 	kfree(node_name);
 	return err;
--=20
2.11.0

