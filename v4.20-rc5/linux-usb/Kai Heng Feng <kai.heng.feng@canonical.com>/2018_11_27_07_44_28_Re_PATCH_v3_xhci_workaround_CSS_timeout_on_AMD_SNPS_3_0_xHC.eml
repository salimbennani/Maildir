Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 16:16:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F1E905802E4;
	Mon, 26 Nov 2018 23:44:44 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 23:44:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ActLSCxGME9zYykUiKReYr51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os+zbnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSyNODZ6y?=
 =?us-ascii?q?YYsNAOQPMuhWrIf9qUUJoxulHQmhBvjiyiNKiH/zwaE60/gtHR/A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakXS++1zbTDwzfdYPNQ1jf29YjGfQ4nofGDQLl9dsnRxlMuFw/fjlWf?=
 =?us-ascii?q?t4rlPzyP2uQDrWeb6eVgWPmzhGE9rQFxpT6vxsYwhYbTgoIZ0EzL9SJ8wIssI9?=
 =?us-ascii?q?CzVU11Yca8HZdOqy2XM5F6Tt4sTm12oio2174LtYKhcCULypkr3wDTZ+Cbf4SV?=
 =?us-ascii?q?5x/sT/qdLSpliH9gdr+yhAq+8Ualx+HhWMS53lJHoy9Hn9bQqn8A1Bne5dSHR/?=
 =?us-ascii?q?Rh+kqs3DWC2gPP5eFKJE04iKTbJIQ/zbM2i5Edq17MHjXsl0XzlKKWdlsr+uyv?=
 =?us-ascii?q?6+n/fLXmqYGTN5VuhgH9LKsugMq/Dvo8MgQUWGib4+u82KXi/U3/XrpKkuU7nr?=
 =?us-ascii?q?fFvJ3eP8gXu6C0DxFP3oo+6BuzEy2q3dUakHUfKVJKYhOHj4znO1HUJ/D4CO+y?=
 =?us-ascii?q?g1CtkDdt2vDHMaTtApbTIXjZlrfuY7J951dbyAs9y9BQ+YhUB6ofIPL8REDxrs?=
 =?us-ascii?q?bUDhwnPAyuxeboFtF92pkZWWKVDa+VKLnSvkOQ5uIzP+mMY5cYuDL8K/gm+fHi?=
 =?us-ascii?q?l3A4mUIGcKmt3JsXbm24H/t8L0WYZ3rsnskOEWMQsgUiS+zqjUWIUSRPaHaqQ6?=
 =?us-ascii?q?I8+jY7BZqmDYjZR4CtnKaO3CChEp1We2BJEFaMEXjzeoWAWvcMbj+SI8B7njwF?=
 =?us-ascii?q?U7ihV5Eu1RW0uADmzLpnK/Le+jcEupL7yNh1++rTmAkw9TxzEcuRyWKNT2Zynm?=
 =?us-ascii?q?MOQD87x6R/oU17ylee3ql0mf1YFdpP5/xXVgc2L4LTz+t/C9rqQALOYs+JSEq6?=
 =?us-ascii?q?QtWhGTw+VMkxw98JY0Z+AdmilArM3yixDr8RlryLAoE0863G03jwIcZ912jJ1K?=
 =?us-ascii?q?07g1Y6RctPMHWshrRj+AjLG47Jj0KZmr6pdasG2i7B7mODzWuUs0FeXw59SqHF?=
 =?us-ascii?q?XXEZZkvLotX1/ELCT7myCbs5NgtN09KNKqxPatfxl1VJWO/jOMjCY2K2g2q/GA?=
 =?us-ascii?q?yHxq2SY4bwe2USxiPdCFManAAV+nqGMQs+BiKlo2/FCDxuFFTvY17j8OVkqXO7?=
 =?us-ascii?q?SFM0wB+Ob0F7y7W1/RsVj+SGS/wPxrIEpDshqzJsEVmgxd3WFcSPqxBhfKpGZ9?=
 =?us-ascii?q?M9+0lI1WTCugx5P5ygKb1ih1EEfwR2uUPuywt4CoFancc2q3MqyRJ4KbiE31NZ?=
 =?us-ascii?q?azOYwZfwN6XLKmnz+RCvbLLW2lHe0dqM5qcD8vM4q0/nvAGoEEoi/G5q091U03?=
 =?us-ascii?q?ua+5XLAxAeUZP3UkYr6Rd6o6vWbTU654PRzXdsK7W7sife29I1A+so0gyvf9NB?=
 =?us-ascii?q?P6KLCgDzE9cWCNOzKOM3gVepaBEEPOdM9KMvO8Omdv2G2LOkPep6nTKmi3hH75?=
 =?us-ascii?q?550k6W6yV8TevI1Y4fw/6ExguHSyv8jFC5v8H3hIBIfy0dEnC+yCjkHoFRYKJy?=
 =?us-ascii?q?cJ0PCWevJc2329p/i4TsW35e6F6sGVcG1NW1dhqValz3xRdQ2lgPoXy7hSu4yC?=
 =?us-ascii?q?R5kysorqWDxiPO2fntdB0dNm5NWmZil1bsLZGogN8AWEinchYmlAGi5Ub83KVb?=
 =?us-ascii?q?oKV/L2/OQUZHZST2LmdiUreuubqGecJA9JQosSBPWuSmfV+aUqL9owcd0y77H2?=
 =?us-ascii?q?pexSo3djGwtpXighx6jnmQLHJyrHrfZMFxyg3T5N3aRf5NwDUGQDN0hiXQBli5?=
 =?us-ascii?q?J9Op58mbl4/fsuCiUGKsTp9TfjPxzYODtyu74ndmAQalkPCwmd3nEA463jH919?=
 =?us-ascii?q?RxUSXIrRD8YpTk1qigMOJneFVoC0H468ZgBo5+lY4wjokK2XcGnpWV4WYHkWDr?=
 =?us-ascii?q?PNRbw63+a2ABRTwKw97T+wXl3ExjLnSUx4P2THmdw81hZ8WkbWMSwC4y88dKCK?=
 =?us-ascii?q?KM5rxegSR1uka4rR7WYfVlnTcS0/ou5GQag+EUogUtyCqdD6sWHUlZOyzsihuJ?=
 =?us-ascii?q?48q/rKVReGagb7yw2FBiktCmCbGIuhtcV2rhepc+AS9w6d1yMFfN0H3w8I7oYt?=
 =?us-ascii?q?fRYswIth2IjRjAlfNaJ4wrlvoFnidnPWP9vXs4y+80lxBu3Je6vJSZJGVp5q62?=
 =?us-ascii?q?HhlYNjjtbcMJ5j7tlbpentqR3423ApVhHTALUIHpTP2yFjISqO/nNx2PEDAnrn?=
 =?us-ascii?q?ebGLzfHRKQ6Ut8rnLPFYyrOG+TJHUD0dpiQxydLlRFgA8IRDU6goI5FgeyycP6?=
 =?us-ascii?q?akh54TQR5kPiphtI1+JlLB3/UmbZpAe1ZTY4UpmfLBxK7g5c40fZK9CR7uV2Hy?=
 =?us-ascii?q?tA5J2usBSNKnCHZwRPFWwJWFaLB1X9Mbm1/9XA7/KUBumjL/vNfLWOr/ZRV+yT?=
 =?us-ascii?q?yJKr04tm+SuMN8qVMnljCf07xlRMXXRjF8vFnDUPTjQdlzjRYM6DuBe85ip3o9?=
 =?us-ascii?q?i/8fTsRQLv/JaPBKFUMdl14BC2hqGDN+GLiSZ9KDZY0I4MxHDSxLge2l4Slz9h?=
 =?us-ascii?q?dz23Hbscsi7NSbramrVLAB4DdyNzKMxI4ro83gZTOM7bidD11r9igv42EVdFUl?=
 =?us-ascii?q?Phld+zZcwXOGGwL1fHBEeNNLSbKjzH2cD3YaWgSbJOiOVYrQG/uTGeE0X7JDSM?=
 =?us-ascii?q?iyHpVwyzMeFLlCyUJgFet5qnchlzCWnvVtbmahygPd9zjD02x6A0h3zQOW4dNz?=
 =?us-ascii?q?h8b11CrrmK4SxEhfV/HnRL7mB5IumchyaZ8+7YJ44KsftqByR4jf5V7G4mxLtV?=
 =?us-ascii?q?8i5EQud4mC/Trt5ovlGnnfODyjthUBpStDlLgJiHslllOaXc7pNAQ2rL/AoR7W?=
 =?us-ascii?q?WMDBQHv9tkBcfpu6BVy9jPkrr8KTZC893O+8scCNPZKMaGMHonLBroFyTYDAoD?=
 =?us-ascii?q?TT63K27fg1ZRn+2V9n2Q/dAGrc2mo5sIRb8fHGc8EP8XB1wvVIgZKZF7Uz4816?=
 =?us-ascii?q?WaisEIzXO7oF/aQ8AM7b7dUffHIvzuYBaUi7YMSRYOzvusLo0ScI323UMkZFR8?=
 =?us-ascii?q?k6zBEkzXW9FGqyknZQgx9hYeuENiR3E+jhq2Ijim52UeQLvtxkY7?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAACD9Pxbh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMEV+LJSmBZBSKUYxYFIFfEgEBGBMBiHAiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKS+CNiQBgmEBAQEBAgEBAiQMBz8FAQkBAQoVAy4DMQEFA?=
 =?us-ascii?q?RwGEwWDHIF6CAEDAZlsPIwJM4owEot3eoEcgREnH4JMhGYBg0yCJgKJV4E9hQG?=
 =?us-ascii?q?PdQcCgxCOOIlShzeVM4JbAgQCBAUCBQ8hgSWCDU0jegGCQT6BaReOKTQxAYEEA?=
 =?us-ascii?q?QGLFSmCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0AXAACD9Pxbh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMEV+LJSmBZBSKUYxYFIFfEgEBGBMBiHAiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKS+CNiQBgmEBAQEBAgEBAiQMBz8FAQkBAQoVAy4DMQEFARwGEwWDHIF6CAE?=
 =?us-ascii?q?DAZlsPIwJM4owEot3eoEcgREnH4JMhGYBg0yCJgKJV4E9hQGPdQcCgxCOOIlSh?=
 =?us-ascii?q?zeVM4JbAgQCBAUCBQ8hgSWCDU0jegGCQT6BaReOKTQxAYEEAQGLFSmCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="64122040"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 26 Nov 2018 23:44:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729254AbeK0Slg convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Tue, 27 Nov 2018 13:41:36 -0500
Received: from youngberry.canonical.com ([91.189.89.112]:35217 "EHLO
        youngberry.canonical.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728920AbeK0Slf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 13:41:35 -0500
Received: from mail-pl1-f199.google.com ([209.85.214.199])
        by youngberry.canonical.com with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
        (Exim 4.76)
        (envelope-from <kai.heng.feng@canonical.com>)
        id 1gRY2r-0005P5-RS
        for linux-kernel@vger.kernel.org; Tue, 27 Nov 2018 07:44:33 +0000
Received: by mail-pl1-f199.google.com with SMTP id m1-v6so23174129plb.13
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 23:44:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=DX+wn/AKky27OOXrtotGQIIxJZybkzeoDLAK/8RhLjY=;
        b=rn6UzHCRA1rHAktIBF4L+6hNx1D7OZn8Z9gaeJuHvW8BqcQV6Tcabl7vwq06iFP8ZE
         OK+uKHSMu5tpu87M1XdONuL31joa08sJSV01OzoSdAN7EBGTGLIJKT/d78n99mfoXG5Z
         /XMIQHJnEcr/IXourdgWOaOQJ+34cxMV62iBDyplna7sQlaLc8UfBCF1RiQvaFozFfc3
         b2UQzjnaqM942jSiZKkG+xXIc3lXveZgHQ3ooE6vrK3cRO06gVj+nZd8hMPl/WNqHCHp
         i86n4HLMqYRKaXeLcDOd4JzEP27GFQTKfDm2/gTQYqtNASLNe6OXyU/uFoXZS+cZFSjN
         Z5Og==
X-Gm-Message-State: AA+aEWZrPhGYyLm4sNElYFAIMZxSMiW7JiXvcZO8mEetetLJYnz2aA0k
        AETVC/pCZjuzvtkboiHhYHgk5V0goWo/HtZAJuLg0ywQB94j/25vmJQoB4vYNERx+z7VdtS94ie
        dO/MnM5vfqKYwTqJzt/I9EYJmttgaWvCSE9m1US++0g==
X-Received: by 2002:a62:e90a:: with SMTP id j10-v6mr12589766pfh.228.1543304672273;
        Mon, 26 Nov 2018 23:44:32 -0800 (PST)
X-Google-Smtp-Source: AFSGD/XeJQDwGo75ZXRjdPj7p30Rs2zG4ICq5v4lCRpF2QTIkS5AJcHXVhU+mMC7fk3+HWUWNrP4Ww==
X-Received: by 2002:a62:e90a:: with SMTP id j10-v6mr12589752pfh.228.1543304671889;
        Mon, 26 Nov 2018 23:44:31 -0800 (PST)
Received: from 2001-b011-380f-1339-7cc8-c5c9-88cf-1fae.dynamic-ip6.hinet.net (2001-b011-380f-1339-7cc8-c5c9-88cf-1fae.dynamic-ip6.hinet.net. [2001:b011:380f:1339:7cc8:c5c9:88cf:1fae])
        by smtp.gmail.com with ESMTPSA id f6sm3486626pfg.188.2018.11.26.23.44.29
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 26 Nov 2018 23:44:30 -0800 (PST)
Content-Type: text/plain;
        charset=us-ascii
Mime-Version: 1.0 (Mac OS X Mail 12.1 \(3445.101.1\))
Subject: Re: [PATCH v3] xhci: workaround CSS timeout on AMD SNPS 3.0 xHC
From: Kai Heng Feng <kai.heng.feng@canonical.com>
In-Reply-To: <1542990218-30495-1-git-send-email-Sandeep.Singh@amd.com>
Date: Tue, 27 Nov 2018 15:44:28 +0800
Cc: "mathias.nyman@intel.com" <mathias.nyman@intel.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "linux-usb@vger.kernel.org" <linux-usb@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "S-k, Shyam-sundar" <Shyam-sundar.S-k@amd.com>,
        "Shah, Nehal-bakulchandra" <Nehal-bakulchandra.Shah@amd.com>
Content-Transfer-Encoding: 8BIT
Message-Id: <4B40F321-BE33-4D36-BE1A-59139D9AA711@canonical.com>
References: <1542990218-30495-1-git-send-email-Sandeep.Singh@amd.com>
To: "Singh, Sandeep" <sandeep.singh@amd.com>
X-Mailer: Apple Mail (2.3445.101.1)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



> On Nov 24, 2018, at 00:24, Singh, Sandeep <sandeep.singh@amd.com> wrote:
> 
> From: Sandeep Singh <sandeep.singh@amd.com>
> 
> Occasionally AMD SNPS 3.0 xHC does not respond to
> CSS when set, also it does not flag anything on SRE and HCE
> to point the internal xHC errors on USBSTS register. This stalls
> the entire system wide suspend and there is no point in stalling
> just because of xHC CSS is not responding.
> 
> To work around this problem, if the xHC does not flag
> anything on SRE and HCE, we can skip the CSS
> timeout and allow the system to continue the suspend. Once the
> system resume happens we can internally reset the controller
> using XHCI_RESET_ON_RESUME quirk
> 
> Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
> Signed-off-by: Sandeep Singh <Sandeep.Singh@amd.com>
> cc: Nehal Shah <Nehal-bakulchandra.Shah@amd.com>

Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>

> ---
> Changes since v1:
> 
> -> New Variable based decision making when SNPS issue happens hence 
> -> quirk interdependency removed.
> -> Removed STS conditional check in suspend function.
> 
> Changes since v2:
> -> Updated quirk bit as per Kai-heng comment.
> 
> drivers/usb/host/xhci-pci.c |  4 ++++
> drivers/usb/host/xhci.c     | 26 ++++++++++++++++++++++----
> drivers/usb/host/xhci.h     |  3 +++
> 3 files changed, 29 insertions(+), 4 deletions(-)
> 
> diff --git a/drivers/usb/host/xhci-pci.c b/drivers/usb/host/xhci-pci.c
> index a951526..a9ec705 100644
> --- a/drivers/usb/host/xhci-pci.c
> +++ b/drivers/usb/host/xhci-pci.c
> @@ -139,6 +139,10 @@ static void xhci_pci_quirks(struct device *dev, struct xhci_hcd *xhci)
> 		 pdev->device == 0x43bb))
> 		xhci->quirks |= XHCI_SUSPEND_DELAY;
> 
> +	if (pdev->vendor == PCI_VENDOR_ID_AMD &&
> +	    (pdev->device == 0x15e0 || pdev->device == 0x15e1))
> +		xhci->quirks |= XHCI_SNPS_BROKEN_SUSPEND;
> +
> 	if (pdev->vendor == PCI_VENDOR_ID_AMD)
> 		xhci->quirks |= XHCI_TRUST_TX_LENGTH;
> 
> diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
> index c928dbb..c20b85e 100644
> --- a/drivers/usb/host/xhci.c
> +++ b/drivers/usb/host/xhci.c
> @@ -968,6 +968,7 @@ int xhci_suspend(struct xhci_hcd *xhci, bool do_wakeup)
> 	unsigned int		delay = XHCI_MAX_HALT_USEC;
> 	struct usb_hcd		*hcd = xhci_to_hcd(xhci);
> 	u32			command;
> +	u32			res;
> 
> 	if (!hcd->state)
> 		return 0;
> @@ -1021,11 +1022,28 @@ int xhci_suspend(struct xhci_hcd *xhci, bool do_wakeup)
> 	command = readl(&xhci->op_regs->command);
> 	command |= CMD_CSS;
> 	writel(command, &xhci->op_regs->command);
> +	xhci->broken_suspend = 0;
> 	if (xhci_handshake(&xhci->op_regs->status,
> 				STS_SAVE, 0, 10 * 1000)) {
> -		xhci_warn(xhci, "WARN: xHC save state timeout\n");
> -		spin_unlock_irq(&xhci->lock);
> -		return -ETIMEDOUT;
> +	/*
> +	 * AMD SNPS xHC 3.0 occasionally does not clear the
> +	 * SSS bit of USBSTS and when driver tries to poll
> +	 * to see if the xHC clears BIT(8) which never happens
> +	 * and driver assumes that controller is not responding
> +	 * and times out. To workaround this, its good to check
> +	 * if SRE and HCE bits are not set (as per xhci
> +	 * Section 5.4.2) and bypass the timeout.
> +	 */
> +		res = readl(&xhci->op_regs->status);
> +		if ((xhci->quirks & XHCI_SNPS_BROKEN_SUSPEND) &&
> +		    (((res & STS_SRE) == 0) &&
> +				((res & STS_HCE) == 0))) {
> +			xhci->broken_suspend = 1;
> +		} else {
> +			xhci_warn(xhci, "WARN: xHC save state timeout\n");
> +			spin_unlock_irq(&xhci->lock);
> +			return -ETIMEDOUT;
> +		}
> 	}
> 	spin_unlock_irq(&xhci->lock);
> 
> @@ -1078,7 +1096,7 @@ int xhci_resume(struct xhci_hcd *xhci, bool hibernated)
> 	set_bit(HCD_FLAG_HW_ACCESSIBLE, &xhci->shared_hcd->flags);
> 
> 	spin_lock_irq(&xhci->lock);
> -	if (xhci->quirks & XHCI_RESET_ON_RESUME)
> +	if ((xhci->quirks & XHCI_RESET_ON_RESUME) || xhci->broken_suspend)
> 		hibernated = true;
> 
> 	if (!hibernated) {
> diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
> index 260b259..c3515ba 100644
> --- a/drivers/usb/host/xhci.h
> +++ b/drivers/usb/host/xhci.h
> @@ -1850,6 +1850,7 @@ struct xhci_hcd {
> #define XHCI_ZERO_64B_REGS	BIT_ULL(32)
> #define XHCI_DEFAULT_PM_RUNTIME_ALLOW	BIT_ULL(33)
> #define XHCI_RESET_PLL_ON_DISCONNECT	BIT_ULL(34)
> +#define XHCI_SNPS_BROKEN_SUSPEND    BIT_ULL(35)
> 
> 	unsigned int		num_active_eps;
> 	unsigned int		limit_active_eps;
> @@ -1879,6 +1880,8 @@ struct xhci_hcd {
> 	void			*dbc;
> 	/* platform-specific data -- must come last */
> 	unsigned long		priv[0] __aligned(sizeof(s64));
> +	/* Broken Suspend flag for SNPS Suspend resume issue */
> +	u8			broken_suspend;
> };
> 
> /* Platform specific overrides to generic XHCI hc_driver ops */
> -- 
> 2.7.4
> 

