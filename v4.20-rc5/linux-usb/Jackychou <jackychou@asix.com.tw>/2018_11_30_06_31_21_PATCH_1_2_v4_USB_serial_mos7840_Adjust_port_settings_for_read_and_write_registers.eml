Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 16:08:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E9A30580460;
	Thu, 29 Nov 2018 22:31:38 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 22:31:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AmKuvwhFddpy5woa0OFTuaJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75pMS+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/Zl8J+gqFcrhK6vxxywZXZbJ2JOPdkYq/QZ88WSXZHU81MVyJBGIS8?=
 =?us-ascii?q?b44XAuQFJ+lXs4r9plsSohu+AgmsGf7kxzhKhnDswaI60OQgHh3G3AwnAtIDq2?=
 =?us-ascii?q?7brM70NKYdS+y60K7IzTDZY/NK1zbw8Y7FeQ0ir/GURb98b9bdxE01Gw/YgFic?=
 =?us-ascii?q?t5bpMy6W2+gRqWSW7uhtWfqyh2I6pQx9uCWjy8Mth4XTm44YxUzI+T96zYorI9?=
 =?us-ascii?q?CzVVR1bsS+EJRKsiGXL4t2Td0mQ2FvoCs61LIGtoChfCQQy5Qo2QTfa/qZfIiM?=
 =?us-ascii?q?+B7jU/yRIThgiHJkfrKwmQqy/FC+xuHgUsS4yktGoyRbntXWq3wA1ADf5tKGR/?=
 =?us-ascii?q?Z/5kuh3CyA1wHX6uFKO0A0kq/bJoYlwr4xkJoTrEvCEjb1mErolq+WcFsr+uyx?=
 =?us-ascii?q?5+TgbLTmoIGTN5VvhwHgPaQhhNa/Df47MgcQRWib//qz1Ln58U3+WrVKgeU6kr?=
 =?us-ascii?q?PFv5DCOcQbuqm5DhdR0oYi6BawES2q0dsFnXQcKFJFeRSHj5XmOl3UIfD4C+u/?=
 =?us-ascii?q?jEqokDtx2//GObjhCI3XLnffiLfhYap960lExQoz199f5o5UBasGIP7pWk/xqc?=
 =?us-ascii?q?bXDhk2MwGvx+bnCdN91p4RWG6VA6+ZNr/SvkGM5u41P+aMY4oVsi7nK/c5//7u?=
 =?us-ascii?q?kWM5mVgFcKmr2psYdmq0HvdhI0WfZ3rshcwMEWMLvgo4Uezrh0eOUT9VZ3auQa?=
 =?us-ascii?q?084is3B56hDYfGXoqtmqCO3D+nHp1KYWBLEkqDEWzod4WDWPcAcjiSLdVjkjEf?=
 =?us-ascii?q?UbihSokh1QyhtQPgyrpnKPbU9TMctZ75yNd14OjTnwko9TNoF8Sdz32NT2Zsk2?=
 =?us-ascii?q?MLXTA22rpzoUh8yliZ16h4jOdVFdhS5/NPTwc7OoTQz+18C9DuRA3Bes2FR0qh?=
 =?us-ascii?q?QtWjGTsxVM4+w8cSY0ZhHNWvlg3M0DC0A7ALjbCLBIY78qTH33fvIcZxzHLG1K?=
 =?us-ascii?q?okj1kiWcZPMWymhqhi9wncHYLJkkOZl7q0eqQYxiLC6GCDzW+WtkFCTAFwSbnF?=
 =?us-ascii?q?XWwYZkbOsNv2/F3CQKG0BbQnKARBz9WCJbVMatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rmLCDTxuEFXvY1/s8eh+sn+7?=
 =?us-ascii?q?UlU4zwaQb01l1rq1/BEViOeYS/MS2LIEpSggpy91HFa7w9LZFd6AqxB9c6VbZN?=
 =?us-ascii?q?M3+E1H2n7BtwxhIpygKLhviUQacwtpsELhyRV2Bp9bnsg3sXwl1gxyKaGf0FNf?=
 =?us-ascii?q?bD6Y2ZHwOrvKKmj95hyvaqjW2k3A39aS4KsA9PM4q1D7tgGzCkUi62ln08VS03?=
 =?us-ascii?q?aE5pTKERAeXo7rXkc29xh1vbfaYiYm6oPQ1H1sN7S0szDY19IoAusl1givf9NF?=
 =?us-ascii?q?PKyYEw/yFtUQB9KyJ+wyh1ipchUEMfhI9K41I8ypbeGG17OsPOp6mjKpk35H4I?=
 =?us-ascii?q?Fk3k2Q7SV8TvPH0Igfw/Gf2AuKTDP8jFanssDqloFIfzASHmyjySf6AI5dfLF9?=
 =?us-ascii?q?fYEOCW22Oc242s1+h4LxW35f7FOiB1IG1NWpeBaIdFz9wAtQ2F8ToXymnyu40j?=
 =?us-ascii?q?N1nysorqqZwCzB3eDieAAbNW5MQWlolU3sLpSsj9AGQEioaBAklBm/6kbgxKhb?=
 =?us-ascii?q?p6N/I3PIQUhSfCj2LGBiUq2uubqEeMNP7JIosSNKUOWze1yaS7j9owcE3CPnBW?=
 =?us-ascii?q?dR2Dc7dzSysJXjgxN6kH6dLGp0rHfBecB/3xDf6MbeRf5Q2DoLXy14iTjRBlih?=
 =?us-ascii?q?MNil59SUl5Hfsu+gU2KtTIFccS7uzYmYriu0+XVqAQGjn/C0gtDnEhI10S7h29?=
 =?us-ascii?q?lqSCXHthD8Yobw2qS+MOJneFRoBVDm58p7HIF+jpU/hJUK1XcGgZWV+GINkX3v?=
 =?us-ascii?q?PtVDxaL+cH0NSCYOw97U4wjqwldvL3yXyILiSnWS3NFhaMKkbWMM1SIw9MRKCK?=
 =?us-ascii?q?aS7LxZkip5uFu4rQTNYfdjmjcR0+ch6Hkfg+sRogoi0j2dAqwOHUlfJSHsixOI?=
 =?us-ascii?q?79WkoKRWfmmvd6Ww1FFlndCgF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSniVoI2X9vXk4y+IhiRxuwIq3vIyGK2Vr4aK4?=
 =?us-ascii?q?DQRUNjzzZ8MP5D7tibxSkdqR34CqBp9hACkEXIP0TfK0FzIfrfbnOByLEDIisX?=
 =?us-ascii?q?eXA6bfERWc6Ed7rHLPDparOGuMJHQCydViRR+dJFFQgQwOXTU6mII5GR6uxMD7?=
 =?us-ascii?q?bEh54TUR7EbiqhRQ0uJoKwX/UmDHqQaobTc0VYGfLAdM4QFE/UvVKsue7uR8Hy?=
 =?us-ascii?q?xD+p2hrQqNKnGUZghSDGEJXFCECE7nPrW0+dbA9O2YDPKkL/TSebWOtfBeV/CQ?=
 =?us-ascii?q?yJKvzIRm/jWMNsaOPnV4DP07wE1DXX9nFMTDhjUPUDcalybMb86duRe99Td7rs?=
 =?us-ascii?q?G58PT3Rg3v4ZGDBKdVMdVq4xq2m7uMN/aMhCZlLjZVzokDxWLTx7gFwlETizti?=
 =?us-ascii?q?dz2sEbkbsS7NTaTQmrJYDhIBaiNzMtdI4Lw43gVXJcHbjdb13KZijvEpE1dFSU?=
 =?us-ascii?q?DhmsaxaMwWImG9MUnLC1qROLuaJT3E3cf3bLi4Sb1RiuVUqhKxtSyaE0/lIjSM?=
 =?us-ascii?q?iT3pWwqzPuFLiSGRJAZet52lchZxFWjjS8rrax2hP99xiD02wLs0iWvLNG4cKz?=
 =?us-ascii?q?d8dUxNo6aU7SNZhPV/BmNA4mBkLemChyaW8e3YJowKvvtsByQn395dtXY9y7JT?=
 =?us-ascii?q?xCJJXvp4nG3VtNE9jUuhl7ytwzFkQRFOrSsD0ICCtkZzMqXe67FJQnfUuhkK6C?=
 =?us-ascii?q?OMFEJZ9JNeFtTztvUImZD0n6XpJWIa/g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAA82ABch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBggCBayeMEYwIgiGXMoFzLBMBh3QiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKS+CNiKCbAIkUgYJAh8xA20FgxyCAQEFqC0zijATh1mEKxeBP0CBEYJki?=
 =?us-ascii?q?woCiSuGcpAJCYMKgzaKawsYgVqBQoZyhw6aHYINTYNfglCOGDIBMoEFAQGOAQE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0ANAAA82ABch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBggC?=
 =?us-ascii?q?BayeMEYwIgiGXMoFzLBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiKCb?=
 =?us-ascii?q?AIkUgYJAh8xA20FgxyCAQEFqC0zijATh1mEKxeBP0CBEYJkiwoCiSuGcpAJCYM?=
 =?us-ascii?q?KgzaKawsYgVqBQoZyhw6aHYINTYNfglCOGDIBMoEFAQGOAQEB?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="53282507"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 22:31:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726815AbeK3Rjq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 12:39:46 -0500
Received: from asix.com.tw ([113.196.140.82]:25286 "EHLO freebsd2.asix.com.tw"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726419AbeK3Rjq (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 12:39:46 -0500
Received: from localhost.localdomain ([10.1.2.57])
        (authenticated bits=0)
        by freebsd2.asix.com.tw (8.15.2/8.15.2) with ESMTPA id wAU6T5DS092431;
        Fri, 30 Nov 2018 14:29:09 +0800 (CST)
        (envelope-from jackychou@asix.com.tw)
Authentication-Results: freebsd2.asix.com.tw; sender-id=permerror header.from=jackychou@asix.com.tw; auth=pass (LOGIN); spf=permerror smtp.mfrom=jackychou@asix.com.tw
X-Authentication-Warning: freebsd2.asix.com.tw: Host [10.1.2.57] claimed to be localhost.localdomain
From: Jackychou <jackychou@asix.com.tw>
To: johan@kernel.org
Cc: gregkh@linuxfoundation.org, linux-usb@vger.kernel.org,
        linux-kernel@vger.kernel.org, louis@asix.com.tw,
        jackychou@asix.com.tw
Subject: [PATCH 1/2 v4] USB: serial: mos7840: Adjust port settings for read and write registers
Date: Fri, 30 Nov 2018 14:31:21 +0800
Message-Id: <20181130063122.24217-1-jackychou@asix.com.tw>
X-Mailer: git-send-email 2.17.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: JackyChou <jackychou@asix.com.tw>

In the read/write function, set port 2 independently in the 2-port case.

When setting the offset of port registers, the offset between port 1 and
other ports is different, so port 1 is set independently.
Then in the rest of ports, the port 2 between 2-ports case and 4-ports case
is different, so port 2 in 2-ports case is set independently.

Signed-off-by: JackyChou <jackychou@asix.com.tw>
---
 drivers/usb/serial/mos7840.c | 48 ++++++++++++------------------------
 1 file changed, 16 insertions(+), 32 deletions(-)

diff --git a/drivers/usb/serial/mos7840.c b/drivers/usb/serial/mos7840.c
index 88828b4b8c44..92ab68ef08ab 100644
--- a/drivers/usb/serial/mos7840.c
+++ b/drivers/usb/serial/mos7840.c
@@ -298,15 +298,10 @@ static int mos7840_set_uart_reg(struct usb_serial_port *port, __u16 reg,
 	val = val & 0x00ff;
 	/* For the UART control registers, the application number need
 	   to be Or'ed */
-	if (port->serial->num_ports == 4) {
+	if (port->serial->num_ports == 2 && port->port_number != 0)
+		val |= ((__u16)port->port_number + 2) << 8;
+	else
 		val |= ((__u16)port->port_number + 1) << 8;
-	} else {
-		if (port->port_number == 0) {
-			val |= ((__u16)port->port_number + 1) << 8;
-		} else {
-			val |= ((__u16)port->port_number + 2) << 8;
-		}
-	}
 	dev_dbg(&port->dev, "%s application number is %x\n", __func__, val);
 	return usb_control_msg(dev, usb_sndctrlpipe(dev, 0), MCS_WRREQ,
 			       MCS_WR_RTYPE, val, reg, NULL, 0,
@@ -332,15 +327,10 @@ static int mos7840_get_uart_reg(struct usb_serial_port *port, __u16 reg,
 		return -ENOMEM;
 
 	/* Wval  is same as application number */
-	if (port->serial->num_ports == 4) {
+	if (port->serial->num_ports == 2 && port->port_number != 0)
+		Wval = ((__u16)port->port_number + 2) << 8;
+	else
 		Wval = ((__u16)port->port_number + 1) << 8;
-	} else {
-		if (port->port_number == 0) {
-			Wval = ((__u16)port->port_number + 1) << 8;
-		} else {
-			Wval = ((__u16)port->port_number + 2) << 8;
-		}
-	}
 	dev_dbg(&port->dev, "%s application number is %x\n", __func__, Wval);
 	ret = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0), MCS_RDREQ,
 			      MCS_RD_RTYPE, Wval, reg, buf, VENDOR_READ_LENGTH,
@@ -2132,22 +2122,16 @@ static int mos7840_port_probe(struct usb_serial_port *port)
 		mos7840_port->SpRegOffset = 0x0;
 		mos7840_port->ControlRegOffset = 0x1;
 		mos7840_port->DcrRegOffset = 0x4;
-	} else if ((mos7840_port->port_num == 2) && (serial->num_ports == 4)) {
-		mos7840_port->SpRegOffset = 0x8;
-		mos7840_port->ControlRegOffset = 0x9;
-		mos7840_port->DcrRegOffset = 0x16;
-	} else if ((mos7840_port->port_num == 2) && (serial->num_ports == 2)) {
-		mos7840_port->SpRegOffset = 0xa;
-		mos7840_port->ControlRegOffset = 0xb;
-		mos7840_port->DcrRegOffset = 0x19;
-	} else if ((mos7840_port->port_num == 3) && (serial->num_ports == 4)) {
-		mos7840_port->SpRegOffset = 0xa;
-		mos7840_port->ControlRegOffset = 0xb;
-		mos7840_port->DcrRegOffset = 0x19;
-	} else if ((mos7840_port->port_num == 4) && (serial->num_ports == 4)) {
-		mos7840_port->SpRegOffset = 0xc;
-		mos7840_port->ControlRegOffset = 0xd;
-		mos7840_port->DcrRegOffset = 0x1c;
+	} else {
+		u8 port_offset;
+
+		if ((mos7840_port->port_num == 2) && (serial->num_ports == 2))
+			port_offset = 1;
+		else
+			port_offset = mos7840_port->port_num - 2;
+		mos7840_port->SpRegOffset = 0x8 + (2 * port_offset);
+		mos7840_port->ControlRegOffset = 0x9 + (2 * port_offset);
+		mos7840_port->DcrRegOffset = 0x16 + (3 * port_offset);
 	}
 	mos7840_dump_serial_port(port, mos7840_port);
 	mos7840_set_port_private(port, mos7840_port);
-- 
2.17.1

