Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 22:03:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1A6FD58041B;
	Tue, 27 Nov 2018 05:40:04 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 05:40:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AbCifAhH2/+HkSfqt8QpVmZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8yzbnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/Zl8J+gqFcrh2jqRxwzJLbbo6ONPpmfK7QZs8aSGlbU8pNTSFNHoGx?=
 =?us-ascii?q?Yo0SBOQBJ+ZYqIz9qkMAoRW6HwasGuLvxSFShnTr3KM61OIhEADE2wwkAd0PsX?=
 =?us-ascii?q?rYp8jyOacQS++10qjIwivZb/5N2zfy8pbIchEuofGLW7J8a9beyU4qFw7ciFib?=
 =?us-ascii?q?tI/rPyuN2+gTr2SW6/BsWf+hhmI5sQ19vzuiyts2hoTIhI8Z0k3I+CF3zYovON?=
 =?us-ascii?q?G0VE92bcS5HJZRuCyWLZV6Tt4/T2xupS000KcJuYShcygP0JknxwDQa/iAc4WQ?=
 =?us-ascii?q?/BLjW/ieIS1iiHJmZr2/nRCy/lakyuHmUcm0yllKojJEktnKqH8NywTe5tabRv?=
 =?us-ascii?q?Z55EutxDiC2x7J5u1ZIk04ibDXJp8jz7Iok5ocq0XDHiv4mEXsi6+Wc10p+uyp?=
 =?us-ascii?q?6+Thf7XnqYaQN4xqhQHkNKQhhMi/Df0/MgkAWWiU5/682ab9/U32XrpKlOc6kq?=
 =?us-ascii?q?rHv5DAI8QUuKq5DxVS0oY55BazFy2m38gAnXkbMFJFfwqKj4zoO1HNPv/0F/i+?=
 =?us-ascii?q?g0m3nTdvxvDGOKDhA5rXInjClrfhYahy60pGxAUvytBf4opeCqsdL/LrRk/xqN?=
 =?us-ascii?q?vYAwc5MwOuwubnFM9y1oQEVWKPH6+WKqXSsVCT6+IrIumMYpIVuTnnJ/gk4f7u?=
 =?us-ascii?q?kWE2mVsHcaa12psXbWiyHu56LEWBfXrsntABHH8Ivgo5UuPmkl6CUTlVZ3a0WK?=
 =?us-ascii?q?Ix/TU7CIOgDYfeSYGhmr2B3CGnHpJIYmBKEEyDEXDtd4+cQfcDdDqSItN9kjwD?=
 =?us-ascii?q?TbWuUZQh1RGptA/50bZnNPDb+i8DuJLn1dh14fDTlB4o+Tx1CcSdz3+CT2Vukm?=
 =?us-ascii?q?wUQD822bh1oVZhxVebzah4n/tYGMRQ5/xTVAc2L5rcz+1gBND0VQLMZdOJSFeg?=
 =?us-ascii?q?QtW7DjA9VNMxw9kSY0ljH9WulAzM3y2vA7UNjbyEGIQ08r7A33j2P8ty1mzJ1L?=
 =?us-ascii?q?c/gFU8QstAL2umhrVh+AjVAILJl0aZl6OudakH2C7N9WGDzXeBvU1CUQ5wV7nF?=
 =?us-ascii?q?Um4bZkfMsdv54UbCRae0Cbs7KgtB1dKCKqxSZ9L0l1pGWunsNM7eY22rnWewHg?=
 =?us-ascii?q?iHxrWXYYruemUd2jjdCUcenwAS+3aGKRYxBiO7r23CCzxuEErlY1nw/ulmtHO7?=
 =?us-ascii?q?Ukg0whmWb01g0rq1/QIVhfycSv8JwrIIoiAhqy9wHFa82dLWBMGNpw5gfKVafN?=
 =?us-ascii?q?M8701L1WPftwxhIJOgK7puiUIZcwRyp0nuzQl4Cp1ckcg2q3Mn1BB9KaaG31JO?=
 =?us-ascii?q?aTyZ3Yr8NabKKmbv5h+vba3W2lbA0NuN/qcP6fI4q0jsvQ2zF0oi9Wln3MdR03?=
 =?us-ascii?q?eG+prKCw8SW4rrUkkr7xh6u63aYi4l6oLUyH1gK7W7viXD2tIpHuQlzBmgcsxb?=
 =?us-ascii?q?MKOFEg/yDsIbC9KvKOwsh1imcBYEMPpO+64zOsOsb+GG17KzPOZ8gDKminxK4J?=
 =?us-ascii?q?p80k2Q7SV8UPPH35Efz/GewASHTTb8gE69vc/tnYBLeC8dHnC4ySjiH4NRYqxy?=
 =?us-ascii?q?fYAWCWahOcG3x9N+h4LzVH5c7lKsG1QG2MqxcxqIc1P9xRFQ1VgQoXG/mSq4zi?=
 =?us-ascii?q?Z4kjEzoqqEwSzOxf/vdB4GOm5NWWljgk3gIYmyj9AGQkeoaxIlmwei5Ub/36Jb?=
 =?us-ascii?q?vrhwL3HPQUdUeCj7N2NiXbGqtrqBYM5P74kksT5NX+S/YlCaS7j9rAUc0y74G2?=
 =?us-ascii?q?texTY7dyylu5njnhx6jn6dI2h3rHbDZc5wwhLf7sTGRfFNxjoGWDV4iT7PC1m8?=
 =?us-ascii?q?Jdap+s+Yl5XCsuC4TG+hUpxTcS/2zYKPrie75GtqAQGhkPC3gNHoDQ860Srj3d?=
 =?us-ascii?q?lwSSrItAr8YpXs16miMuJoZEhoCEX868pnAI5+lIQwiYoU2XgbgJWV4HUGnX3y?=
 =?us-ascii?q?MdVdxaLxcn4NSSQXzN7S5QjvwFdjIW6Rx4LlSnWdxdNsZ9y7YmMVwC0x9c5LB7?=
 =?us-ascii?q?mP7LxYgyR1uEG3ohzLYfhyhTodzfou6HgHg+AGogYtzyOdAqwMEklcJyDjixOI?=
 =?us-ascii?q?79WmpqVNeGmvaaSw1FZ5nd25ELGCpQRcVGz4e5g4Gy9w895/MEnN0HDo7oHked?=
 =?us-ascii?q?/Qbc8ctxGOkhfAifRVJ4w1lvYQmSVnPmf9t2U/y+EnlRxuwY26vI+fJmp25q25?=
 =?us-ascii?q?BRpYNiDva8MX5zHglqJenseQ34CyEZRtADQLXJ30Tf22FDIer+joNwGLEDcksH?=
 =?us-ascii?q?eUBaLfHROD6Edht3/PEYqkN3SJK3kC19liWAORJE9CgAAXQTU6mIQ2Fhuxyczl?=
 =?us-ascii?q?cUd54C0R51HiphtNzOJoKwfwUmPFqAi0bTc0TYCVLABK4QFa+0fVLcue4/pzHi?=
 =?us-ascii?q?Ff452htRGNJXadZwhSFmEJXUqEB1/4M7mq5NnA9fWYB+WkI/vPZ7WOtfJRV/OS?=
 =?us-ascii?q?yZ2z1Ytm+i6GNt+TMXl6E/07xk1DUGh5G8vHmjUPSC8XlyPXY86Yvhe8/SJ3od?=
 =?us-ascii?q?6l8PT2QwLi/o+PC7pUMdVy9BG6m6aDN+iMhClnLTZUzI8DxXjNyLIHxl4dlzlu?=
 =?us-ascii?q?dyWxEbQHrSPCVr/QlbRNDxEFayJ/Ls9I76Mn0wlJOM7bjM7117Figv40DVdFSU?=
 =?us-ascii?q?LumsWzacMWJGG9MUvNBFyXO7SeOT3L38b3bLugSb1RieVYrQG/tSyHHE/jIDuD?=
 =?us-ascii?q?kSLkVxSuMeFKkSGaMwZSuIC7chZxF2fjSMjqZQG8MN9ylTc226E7hmvWNW4ANj?=
 =?us-ascii?q?hxa0NMoaeW7SNdg/V/HXRO73tlLeaenSaZ4PLVKpIXsfttHyR1mPhW4HU8y7tJ?=
 =?us-ascii?q?8i5EQOZ5lzfVrt5r8BmalbyKwBJjURVOtjBVgcSKuhZMI6Lco9NiUGjF8QhFwm?=
 =?us-ascii?q?KWGZ0OqskvQontsr5Rx8LnlqvtKThF9ZTf+s5KVJucE96OLHd0aUmhIzXTFgZQ?=
 =?us-ascii?q?FTM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DMAABRSP1bh0O0hNFbCRwBAQEEAQEHB?=
 =?us-ascii?q?AEBgWWDbCeDeYh3jUmYUANMEgEBGBMBiHgiOBIBAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiKCZQMDAQIgBAsBDQEBNwEFCQEBJAImAgIDMQEFARwZBYMcggIEAZk+P?=
 =?us-ascii?q?IodcHwzgnYBAQWGIoEFCBJ5hleDD4EcFz6BQYh6gy6CV4kfCoV5gUWPJwkCkTA?=
 =?us-ascii?q?WgVmHeTaHAgGYEAIEAgkCBQ8hgTyBdnAVgyeCGwwXg0qKVD8yAYEEAQGNagEB?=
X-IPAS-Result: =?us-ascii?q?A0DMAABRSP1bh0O0hNFbCRwBAQEEAQEHBAEBgWWDbCeDeYh?=
 =?us-ascii?q?3jUmYUANMEgEBGBMBiHgiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZQMDA?=
 =?us-ascii?q?QIgBAsBDQEBNwEFCQEBJAImAgIDMQEFARwZBYMcggIEAZk+PIodcHwzgnYBAQW?=
 =?us-ascii?q?GIoEFCBJ5hleDD4EcFz6BQYh6gy6CV4kfCoV5gUWPJwkCkTAWgVmHeTaHAgGYE?=
 =?us-ascii?q?AIEAgkCBQ8hgTyBdnAVgyeCGwwXg0qKVD8yAYEEAQGNagEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="54494387"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 05:40:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727545AbeK1Ahv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 19:37:51 -0500
Received: from mail-ed1-f66.google.com ([209.85.208.66]:39495 "EHLO
        mail-ed1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727470AbeK1Ahu (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 19:37:50 -0500
Received: by mail-ed1-f66.google.com with SMTP id b14so19001480edt.6
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 05:39:50 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=javigon-com.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=yAUB1hcW7rVAdhw2A9r3wdDYvSBm3FzJ091K4Hf3ICg=;
        b=PBp2ntGc5aZ2kqCSimkz1xVuR4k7RTjiIYtQqT1OIZjYbfFuJtg7fkqWeQZ2AG1ZKQ
         RBjcV3i2au/mJAHo597HcXvC0zguXisO+zsywVwB8LTap8v7uG8PR+4avsOkVGNhWNBE
         gCOG09mOrGwDUdGgzY+0/VdosxgmzHY77iM87PsrWdjegJx0fKp8ZA4fiaee/EulYh4F
         nKT8PY5AKc5vBuY1qZuI90098ueoYNWzqWtZyPOENVCAyQ9d7WGsOlbasVDQWrBZPHV2
         0uljEZDcctoEAvn8GXNo7iNBTqISNaBlyHnMu9i3fkB/4qnUR+s/IPoTmxpEKwIImjW6
         ERAQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=yAUB1hcW7rVAdhw2A9r3wdDYvSBm3FzJ091K4Hf3ICg=;
        b=srpzMAdyBdhVFlTTPE8Sfbv5JcNIYL58s08zB7AoDjt7k9pGY4cWKKr44BDzx7VKuB
         aW2tGelCb847qrKFEHLE5iS982wo2+yNp7NjfVEmx9PKed6G4u9I3SwKCRpT+8vlbCOr
         PU9mgq6Ni05bEmVLb/XvKQIgsjDcWZT1XxLZETL/kuNQr0iavUJ8YXH7LfSR2h/RnYQO
         KzWlQeTclGCQArLOrfk5LNH/8N3e2BCetICMEnF43iej6pP/YvpoFQaaJFcDtW6N5laf
         9TXybHq+yTPFR7avQ6plTZ4OmDUj5gAJWtCXN0/ER2tQO9uszg0ho5jfcHZyb7ZPhbbl
         +B8w==
X-Gm-Message-State: AGRZ1gINF4TJ6gk8US83lWMZRDxzRRhf/UPzUuGOSyqum5nYzvm+mym1
        xUpIb1B5mu+wB3nB1cesaw5Q9Q==
X-Google-Smtp-Source: AJdET5frs8YGyjDpt6ktiHZfMMgiGAYfOkMl1GVLNNhcnwMUrO/J2Ktr7M+gIkH8PvZFOu95iN/uRg==
X-Received: by 2002:a17:906:f14e:: with SMTP id gw14-v6mr23883803ejb.231.1543325989384;
        Tue, 27 Nov 2018 05:39:49 -0800 (PST)
Received: from ch-wrk-javier.cnexlabs.com (6164211-cl69.boa.fiberby.dk. [193.106.164.211])
        by smtp.gmail.com with ESMTPSA id t26sm1024945eda.22.2018.11.27.05.39.48
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 27 Nov 2018 05:39:48 -0800 (PST)
From: "=?UTF-8?q?Javier=20Gonz=C3=A1lez?=" <javier@javigon.com>
X-Google-Original-From: =?UTF-8?q?Javier=20Gonz=C3=A1lez?= <javier@cnexlabs.com>
To: mb@lightnvm.io
Cc: igor.j.konopko@intel.com, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        =?UTF-8?q?Javier=20Gonz=C3=A1lez?= <javier@cnexlabs.com>
Subject: [PATCH] lightnvm: remove dma alloc/free helpers
Date: Tue, 27 Nov 2018 14:39:32 +0100
Message-Id: <1543325972-15136-2-git-send-email-javier@cnexlabs.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1543325972-15136-1-git-send-email-javier@cnexlabs.com>
References: <1543325972-15136-1-git-send-email-javier@cnexlabs.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Time has shown that the LightNVM alloc/free dma helpers are merely
replacements of the native dma_pool operations. Thus, remove them and
let targets manage the LightNVM dma pool directly.

Signed-off-by: Javier Gonz√°lez <javier@cnexlabs.com>
---
 drivers/lightnvm/core.c          | 25 +++++++------------------
 drivers/lightnvm/pblk-core.c     | 10 +++++-----
 drivers/lightnvm/pblk-read.c     |  3 ++-
 drivers/lightnvm/pblk-recovery.c |  5 +++--
 drivers/nvme/host/lightnvm.c     | 16 +---------------
 include/linux/lightnvm.h         |  8 +-------
 6 files changed, 19 insertions(+), 48 deletions(-)

diff --git a/drivers/lightnvm/core.c b/drivers/lightnvm/core.c
index c3650b141a30..8b6ee35e4356 100644
--- a/drivers/lightnvm/core.c
+++ b/drivers/lightnvm/core.c
@@ -641,20 +641,6 @@ void nvm_unregister_tgt_type(struct nvm_tgt_type *tt)
 }
 EXPORT_SYMBOL(nvm_unregister_tgt_type);
 
-void *nvm_dev_dma_alloc(struct nvm_dev *dev, gfp_t mem_flags,
-							dma_addr_t *dma_handler)
-{
-	return dev->ops->dev_dma_alloc(dev, dev->dma_pool, mem_flags,
-								dma_handler);
-}
-EXPORT_SYMBOL(nvm_dev_dma_alloc);
-
-void nvm_dev_dma_free(struct nvm_dev *dev, void *addr, dma_addr_t dma_handler)
-{
-	dev->ops->dev_dma_free(dev->dma_pool, addr, dma_handler);
-}
-EXPORT_SYMBOL(nvm_dev_dma_free);
-
 static struct nvm_dev *nvm_find_nvm_dev(const char *name)
 {
 	struct nvm_dev *dev;
@@ -682,7 +668,8 @@ static int nvm_set_rqd_ppalist(struct nvm_tgt_dev *tgt_dev, struct nvm_rq *rqd,
 	}
 
 	rqd->nr_ppas = nr_ppas;
-	rqd->ppa_list = nvm_dev_dma_alloc(dev, GFP_KERNEL, &rqd->dma_ppa_list);
+	rqd->ppa_list = dma_pool_alloc(dev->dma_pool, GFP_KERNEL,
+							&rqd->dma_ppa_list);
 	if (!rqd->ppa_list) {
 		pr_err("nvm: failed to allocate dma memory\n");
 		return -ENOMEM;
@@ -705,10 +692,12 @@ static int nvm_set_rqd_ppalist(struct nvm_tgt_dev *tgt_dev, struct nvm_rq *rqd,
 static void nvm_free_rqd_ppalist(struct nvm_tgt_dev *tgt_dev,
 			struct nvm_rq *rqd)
 {
+	struct nvm_dev *dev = tgt_dev->parent;
+
 	if (!rqd->ppa_list)
 		return;
 
-	nvm_dev_dma_free(tgt_dev->parent, rqd->ppa_list, rqd->dma_ppa_list);
+	dma_pool_free(dev->dma_pool, rqd->ppa_list, rqd->dma_ppa_list);
 }
 
 static int nvm_set_flags(struct nvm_geo *geo, struct nvm_rq *rqd)
@@ -1178,7 +1167,7 @@ void nvm_unregister(struct nvm_dev *dev)
 }
 EXPORT_SYMBOL(nvm_unregister);
 
-int nvm_alloc_dma_pool(struct nvm_dev *dev)
+int nvm_create_dma_pool(struct nvm_dev *dev)
 {
 	int exp_pool_size;
 
@@ -1195,7 +1184,7 @@ int nvm_alloc_dma_pool(struct nvm_dev *dev)
 
 	return 0;
 }
-EXPORT_SYMBOL(nvm_alloc_dma_pool);
+EXPORT_SYMBOL(nvm_create_dma_pool);
 
 static int __nvm_configure_create(struct nvm_ioctl_create *create)
 {
diff --git a/drivers/lightnvm/pblk-core.c b/drivers/lightnvm/pblk-core.c
index 615817bf97e3..61a2a5330ecf 100644
--- a/drivers/lightnvm/pblk-core.c
+++ b/drivers/lightnvm/pblk-core.c
@@ -242,7 +242,7 @@ int pblk_alloc_rqd_meta(struct pblk *pblk, struct nvm_rq *rqd)
 {
 	struct nvm_tgt_dev *dev = pblk->dev;
 
-	rqd->meta_list = nvm_dev_dma_alloc(dev->parent, GFP_KERNEL,
+	rqd->meta_list = dma_pool_alloc(dev->parent->dma_pool, GFP_KERNEL,
 							&rqd->dma_meta_list);
 	if (!rqd->meta_list)
 		return -ENOMEM;
@@ -261,8 +261,8 @@ void pblk_free_rqd_meta(struct pblk *pblk, struct nvm_rq *rqd)
 	struct nvm_tgt_dev *dev = pblk->dev;
 
 	if (rqd->meta_list)
-		nvm_dev_dma_free(dev->parent, rqd->meta_list,
-				rqd->dma_meta_list);
+		dma_pool_free(dev->parent->dma_pool, rqd->meta_list,
+							rqd->dma_meta_list);
 }
 
 /* Caller must guarantee that the request is a valid type */
@@ -846,7 +846,7 @@ int pblk_line_emeta_read(struct pblk *pblk, struct pblk_line *line,
 	int i, j;
 	int ret;
 
-	meta_list = nvm_dev_dma_alloc(dev->parent, GFP_KERNEL,
+	meta_list = dma_pool_alloc(dev->parent->dma_pool, GFP_KERNEL,
 							&dma_meta_list);
 	if (!meta_list)
 		return -ENOMEM;
@@ -925,7 +925,7 @@ int pblk_line_emeta_read(struct pblk *pblk, struct pblk_line *line,
 		goto next_rq;
 
 free_rqd_dma:
-	nvm_dev_dma_free(dev->parent, rqd.meta_list, rqd.dma_meta_list);
+	dma_pool_free(dev->parent->dma_pool, rqd.meta_list, rqd.dma_meta_list);
 	return ret;
 }
 
diff --git a/drivers/lightnvm/pblk-read.c b/drivers/lightnvm/pblk-read.c
index 32b285cf5846..1576f357c9af 100644
--- a/drivers/lightnvm/pblk-read.c
+++ b/drivers/lightnvm/pblk-read.c
@@ -507,7 +507,8 @@ int pblk_submit_read(struct pblk *pblk, struct bio *bio)
 	return NVM_IO_OK;
 
 fail_meta_free:
-	nvm_dev_dma_free(dev->parent, rqd->meta_list, rqd->dma_meta_list);
+	dma_pool_free(dev->parent->dma_pool, rqd->meta_list,
+							rqd->dma_meta_list);
 fail_rqd_free:
 	pblk_free_rqd(pblk, rqd, PBLK_READ);
 	return ret;
diff --git a/drivers/lightnvm/pblk-recovery.c b/drivers/lightnvm/pblk-recovery.c
index 65abc043e268..80d5b5bd4ab7 100644
--- a/drivers/lightnvm/pblk-recovery.c
+++ b/drivers/lightnvm/pblk-recovery.c
@@ -472,7 +472,8 @@ static int pblk_recov_l2p_from_oob(struct pblk *pblk, struct pblk_line *line)
 	dma_addr_t dma_ppa_list, dma_meta_list;
 	int ret = 0;
 
-	meta_list = nvm_dev_dma_alloc(dev->parent, GFP_KERNEL, &dma_meta_list);
+	meta_list = dma_pool_alloc(dev->parent->dma_pool, GFP_KERNEL,
+								&dma_meta_list);
 	if (!meta_list)
 		return -ENOMEM;
 
@@ -508,7 +509,7 @@ static int pblk_recov_l2p_from_oob(struct pblk *pblk, struct pblk_line *line)
 	mempool_free(rqd, &pblk->r_rq_pool);
 	kfree(data);
 free_meta_list:
-	nvm_dev_dma_free(dev->parent, meta_list, dma_meta_list);
+	dma_pool_free(dev->parent->dma_pool, meta_list, dma_meta_list);
 
 	return ret;
 }
diff --git a/drivers/nvme/host/lightnvm.c b/drivers/nvme/host/lightnvm.c
index 049425ad8592..dd300ce9983f 100644
--- a/drivers/nvme/host/lightnvm.c
+++ b/drivers/nvme/host/lightnvm.c
@@ -747,18 +747,6 @@ static void nvme_nvm_destroy_dma_pool(void *pool)
 	dma_pool_destroy(dma_pool);
 }
 
-static void *nvme_nvm_dev_dma_alloc(struct nvm_dev *dev, void *pool,
-				    gfp_t mem_flags, dma_addr_t *dma_handler)
-{
-	return dma_pool_alloc(pool, mem_flags, dma_handler);
-}
-
-static void nvme_nvm_dev_dma_free(void *pool, void *addr,
-							dma_addr_t dma_handler)
-{
-	dma_pool_free(pool, addr, dma_handler);
-}
-
 static struct nvm_dev_ops nvme_nvm_dev_ops = {
 	.identity		= nvme_nvm_identity,
 
@@ -772,8 +760,6 @@ static struct nvm_dev_ops nvme_nvm_dev_ops = {
 
 	.create_dma_pool	= nvme_nvm_create_dma_pool,
 	.destroy_dma_pool	= nvme_nvm_destroy_dma_pool,
-	.dev_dma_alloc		= nvme_nvm_dev_dma_alloc,
-	.dev_dma_free		= nvme_nvm_dev_dma_free,
 };
 
 static int nvme_nvm_submit_user_cmd(struct request_queue *q,
@@ -985,7 +971,7 @@ void nvme_nvm_update_nvm_info(struct nvme_ns *ns)
 		geo->ext = ns->ext;
 	}
 
-	if (nvm_alloc_dma_pool(ndev))
+	if (nvm_create_dma_pool(ndev))
 		nvm_unregister(ndev);
 }
 
diff --git a/include/linux/lightnvm.h b/include/linux/lightnvm.h
index fd7b519f3ad2..7ca38b8bf133 100644
--- a/include/linux/lightnvm.h
+++ b/include/linux/lightnvm.h
@@ -94,7 +94,6 @@ typedef void *(nvm_create_dma_pool_fn)(struct nvm_dev *, char *, int);
 typedef void (nvm_destroy_dma_pool_fn)(void *);
 typedef void *(nvm_dev_dma_alloc_fn)(struct nvm_dev *, void *, gfp_t,
 								dma_addr_t *);
-typedef void (nvm_dev_dma_free_fn)(void *, void*, dma_addr_t);
 
 struct nvm_dev_ops {
 	nvm_id_fn		*identity;
@@ -108,8 +107,6 @@ struct nvm_dev_ops {
 
 	nvm_create_dma_pool_fn	*create_dma_pool;
 	nvm_destroy_dma_pool_fn	*destroy_dma_pool;
-	nvm_dev_dma_alloc_fn	*dev_dma_alloc;
-	nvm_dev_dma_free_fn	*dev_dma_free;
 };
 
 #ifdef CONFIG_NVM
@@ -669,11 +666,8 @@ struct nvm_tgt_type {
 extern int nvm_register_tgt_type(struct nvm_tgt_type *);
 extern void nvm_unregister_tgt_type(struct nvm_tgt_type *);
 
-extern void *nvm_dev_dma_alloc(struct nvm_dev *, gfp_t, dma_addr_t *);
-extern void nvm_dev_dma_free(struct nvm_dev *, void *, dma_addr_t);
-
 extern struct nvm_dev *nvm_alloc_dev(int);
-extern int nvm_alloc_dma_pool(struct nvm_dev *);
+extern int nvm_create_dma_pool(struct nvm_dev *);
 extern int nvm_register(struct nvm_dev *);
 extern void nvm_unregister(struct nvm_dev *);
 
-- 
2.7.4

