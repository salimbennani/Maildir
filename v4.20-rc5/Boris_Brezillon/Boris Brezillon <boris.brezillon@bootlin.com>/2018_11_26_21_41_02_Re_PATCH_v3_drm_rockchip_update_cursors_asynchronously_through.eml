Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:41:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B59C05802E4;
	Mon, 26 Nov 2018 13:44:19 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 26 Nov 2018 13:44:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUjCGCRKkpmDR86gJVdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/7/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYQNAeoPOulXoJXyqVsVtRuzBxKhBP/txzJSmnP7x7E23/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModjoM6cSS+G1zLLVxjjedfNZxzb86InMchAlpvGMW697fM3KxkkoDQPFj06Q?=
 =?us-ascii?q?pZb+MDOPyOsMsmmb7+5kVeKojW4qsBp+oj+oxscwjonJh4QVxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N1b96jFZtfrSCaN41uT8w5RGFovzo6yrkHuZ69ZiQF1JMnxxvZZveacIaI?=
 =?us-ascii?q?+gruWPiNLTp8nn5pZbyyiwio/US9yeDwStO43VdIoyZdltTAq2oB2wHS58SbUP?=
 =?us-ascii?q?dx40Ws1DSV2wzO6+xJLkY5nrfBJZE72L4/jJ8TvFzDHiDonEX2i7ebdlsr+ue2?=
 =?us-ascii?q?8eTreLbmqYGGN49ylA7+Nr4imsulAeQ3KgQOXm6b9vqg1LD740H1XLFHgucrnq?=
 =?us-ascii?q?TXrpzWP9kXq62lDwNP04su6Q6zDzK839QZmXkHIkhFeBWCj4XxP1HOIfb4Deqw?=
 =?us-ascii?q?gli1kzdk2erGPrv/DZXJN3TDl7ngfbBj5E5G0wcz099f6IxOCr0bI/L8RFXxtN?=
 =?us-ascii?q?rGAR89KQC0xPznCNpl2oMERW2PGrOZML/VsVKQ4uIvIuqMa5EPtDfyNvgo/Pru?=
 =?us-ascii?q?jX4/mV8Acqilx5oXaHakHvt4J0WVe2bjgtAEEW0SpAoxUPTqiEGeUT5Uf3uyX7?=
 =?us-ascii?q?gz5jAnCI28CofPXICtgKGb0ye9EZ1bfWRGClGKEXf1eISIQfYMaCSOIsB/ljwI?=
 =?us-ascii?q?T6SuS4gk1Ru2rg/116JnLvbI+i0frZ/j1t916PPJmREx8jx0CcKd02aWQmFwn2?=
 =?us-ascii?q?MIQSI23a9lrUx8zFeDzbZ3g/hCGdNP4PNJVx8wNYTAwOxiF9DyRgXBc8+TR1a9?=
 =?us-ascii?q?QtWmBjIxQsgrw9AUYUZwANGijhHF3yq3DL4Zjb2LBJoo8q3C23j9Pdpyy3HD1K?=
 =?us-ascii?q?M5lVkpXtNPNXG6hq547wXTBJTGk0ODm6audKQTxijN9GiYwGqKvUFYVhNwUKrf?=
 =?us-ascii?q?UXAeYEvWscr25kfYQ7CyDrQnNxNLydSeJatSdt3pkVJGSe/+N9vEfWK+hX28BR?=
 =?us-ascii?q?aSybOKd4rlZWMd0CLZCEgHlgAT+W2LNQw/BienvmLfAyZiFVPpY0Pw7+Z+rGm3?=
 =?us-ascii?q?QVMzzwGPd0dhzaa6+gYJhfyATPMexq8Ltz0/qzpqBlq938jZC9ybpwV/eqVRet?=
 =?us-ascii?q?c94FZB1WLEuA1xJJ2gL6Z+hlEAdwR7pV/h1xJyCo9Yi8glsGsqzBZuKaKfyF5B?=
 =?us-ascii?q?azKY3ZX3Or3LKmnz/Aqja7LM1lHZytaW/qYP6PI3q1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svzDY39ImGuQkxQigfttF?=
 =?us-ascii?q?K6yECRL9HNccB8itL+wqhUOkbhYFPOBU6a41MNmqd/qA2K63IulgmCiqgnhA4I?=
 =?us-ascii?q?B4ykiM7TZzSvbU35YZxPGVxguGVyrmgFi9qMz2mIBEaisUHmqw0iXkAI9RZqtv?=
 =?us-ascii?q?fYcEE2uuIsu3xslgiJ7pQXJX6FmjB1Ye0s+zZRWSd0D93RFX1UkPu3ynmDe3wC?=
 =?us-ascii?q?Zukz40qaqTxirOzPr4dBoGI2JEWHNtjVPxLoeqldAaW06oYhMtlBuk40b62qda?=
 =?us-ascii?q?qL5+L2nVXUdHYSz2I3t+Xau3s7qIe9RP548wsSVLTOS8ZkiXS778oxcA0yLvBX?=
 =?us-ascii?q?BexC09dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpfBqO++TWGhVp5UcSXx1oOPrii75W5rAR25gf+znMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpWU8mAAkWvp?=
 =?us-ascii?q?M9Vb2KT+YWEJRT4Kxd7V/Qfk1FdiLnKP24L2SHGdztF9aNm9Z2Mcwjg94NxSCK?=
 =?us-ascii?q?eI8LxEmjN4olmiogLQe/R9niodxuEo6H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhf5ciHCxw4d9lPFPCznLz8Z3kd8?=
 =?us-ascii?q?fKbd0IqBKUiRjAgvNRKJIwkPoKmCVmNXj8vX0j1+40kxhu0Yums4iALmVn5Li5?=
 =?us-ascii?q?DQJANj3pe8MT/SngjbpZnsaTxYyuH49uGjMWXJvzVvKoESkftfDmNwaIDT09pW?=
 =?us-ascii?q?2XGbvZHQ+D9khmq2jDHIysN3GSPHMZ18ltRAGBJExDhwAZRC41kYQ+FgCu2czt?=
 =?us-ascii?q?akN55i0K6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSPKmOBYgRHE3oJVlaYB1z5Pbmu+NrA8/WeBuWkNPvDerGOqe1YV/eV?=
 =?us-ascii?q?ypOjyIpm/zCQNsqROnluFeE02k1GXXphAcTWhy0PSzALlyLKd8OapBC8+jBurs?=
 =?us-ascii?q?Ci6vvrXhjj5ZCIC7tUPtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMbaz18NMpL76I/3wlBI83bisny1r53kPE1EUpFVU?=
 =?us-ascii?q?f6l8GtZMwKJXy9NVzdCEaKMrSGOSPEw8XtbaygTr1Qif1etwestjaDD0/jIjOD?=
 =?us-ascii?q?miHzWBCyKu5Mlj+UPRxEtIG5cxZgEmzjTNPgah2mP957lzw2wbsohnzUMW4QKy?=
 =?us-ascii?q?Rzc0RIrreI9yNXnu1/G3Bd7npiNeSEhyeZ7+zCJpkKq/dkHiR0mPxc4Hkhz7tV?=
 =?us-ascii?q?7SdEROF6mSfIr95upU2mnfeLyjZ9TBVOrTNLjpqRvUp+IaXZ6oVAWXHc8RMN92?=
 =?us-ascii?q?qQDREKp9pjCtL3uqFQysLAlKT8KDpZ99LU/M0cB9XbKc6dMXohNwbpFyDQDAcf?=
 =?us-ascii?q?UTGrMmTf1ARhl6S/7Hye5rE8qp/ohNJaR6VaX3Q8EPMdDlgjGtEedsRZRDQhxJ?=
 =?us-ascii?q?Scls8TrVCkoQvQQMFduNiTXPWIAO6pIiyUn7hAYxwO6bn/KpgXN4u90EtnPAop?=
 =?us-ascii?q?1L/WElbdCIge6hZqaRU59QAUqCBz?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A6AAD1Z/xbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwEBgVmBD4ECJ4xwiySCDRSNcIsrLA0GAYhjIjcGDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDEIBAQEBAQEBBgICgWMkAYJhAQEBAQIBAQIkE?=
 =?us-ascii?q?z8FAQkBAQoYCSUDDB0rBhMFFoMGAYF5CAQBCqc1M4QtAYV3BYwJgVc/gRGCFH6?=
 =?us-ascii?q?DAhkEhzoCixGES49RVQcCghwEhFyKKCMKAoFNjy+JbYNWjEmBd00jUIJsgz0BA?=
 =?us-ascii?q?oJIilM/MgEBgQMBASETgSGBbYF8hnwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A6AAD1Z/xbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwEBgVmBD4ECJ4xwiySCDRSNcIsrLA0GAYhjIjcGDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDEIBAQEBAQEBBgICgWMkAYJhAQEBAQIBAQIkEz8FAQkBAQoYCSU?=
 =?us-ascii?q?DDB0rBhMFFoMGAYF5CAQBCqc1M4QtAYV3BYwJgVc/gRGCFH6DAhkEhzoCixGES?=
 =?us-ascii?q?49RVQcCghwEhFyKKCMKAoFNjy+JbYNWjEmBd00jUIJsgz0BAoJIilM/MgEBgQM?=
 =?us-ascii?q?BASETgSGBbYF8hnwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="54908717"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 13:44:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727076AbeK0Igo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 03:36:44 -0500
Received: from mail.bootlin.com ([62.4.15.54]:43500 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726315AbeK0Igo (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 03:36:44 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 8EC15207BB; Mon, 26 Nov 2018 22:41:13 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT
        shortcircuit=ham autolearn=disabled version=3.4.2
Received: from bbrezillon (91-160-177-164.subs.proxad.net [91.160.177.164])
        by mail.bootlin.com (Postfix) with ESMTPSA id 2B17E206D8;
        Mon, 26 Nov 2018 22:41:03 +0100 (CET)
Date: Mon, 26 Nov 2018 22:41:02 +0100
From: Boris Brezillon <boris.brezillon@bootlin.com>
To: Eric Anholt <eric@anholt.net>
Cc: Michael Zoran <mzoran@crowfest.net>,
        Tomasz Figa <tfiga@chromium.org>, helen.koike@collabora.com,
        Sandy Huang <hjc@rock-chips.com>,
        Heiko =?UTF-8?B?U3TDvGJuZXI=?= <heiko@sntech.de>,
        David Airlie <airlied@linux.ie>,
        "list\@263.net\:IOMMU DRIVERS \<iommu\@lists.linux-foundation.org\>\,
        Joerg Roedel \<joro\@8bytes.org\>\," 
        <iommu@lists.linux-foundation.org>,
        "list\@263.net\:IOMMU DRIVERS \<iommu\@lists.linux-foundation.org\>\,
        Joerg Roedel \<joro\@8bytes.org\>\," <joro@8bytes.org>,
        "list\@263.net\:IOMMU DRIVERS \<iommu\@lists.linux-foundation.org\>\,
        Joerg Roedel \<joro\@8bytes.org\>\," 
        <linux-arm-kernel@lists.infradead.org>,
        Enric Balletbo i Serra <enric.balletbo@collabora.com>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        "open list\:ARM\/Rockchip SoC..." 
        <linux-rockchip@lists.infradead.org>,
        Gustavo Padovan <gustavo.padovan@collabora.com>,
        Sean Paul <seanpaul@google.com>, kernel@collabora.com,
        =?UTF-8?B?U3TDqXBoYW5l?= Marchesin <marcheu@google.com>
Subject: Re: [PATCH v3] drm/rockchip: update cursors asynchronously through
 atomic.
Message-ID: <20181126224102.1efbf2d1@bbrezillon>
In-Reply-To: <87o9abbmq4.fsf@anholt.net>
References: <20181119190805.19139-1-helen.koike@collabora.com>
        <CAAFQd5DDZwhdMDbrHthQwm2bQ3+NoZNcemAktVTxkR3=LfnnTg@mail.gmail.com>
        <d3fb3b21-6c3d-6b01-727b-dbd66540ce92@collabora.com>
        <CAAFQd5Afa9ndmU0=q5Kjv-BY+0qpvOdq2+eOTO6OebX4-2NENA@mail.gmail.com>
        <1d10a4323a49ca09bbb7dc865aaaf5b8c5e3b3d5.camel@crowfest.net>
        <87o9abbmq4.fsf@anholt.net>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 26 Nov 2018 12:36:03 -0800
Eric Anholt <eric@anholt.net> wrote:

> Michael Zoran <mzoran@crowfest.net> writes:
> 
> > On Fri, 2018-11-23 at 11:27 +0900, Tomasz Figa wrote:  
> >> 
> >> The point here is not about setting and resetting the plane->fb
> >> pointer. It's about what happens inside
> >> drm_atomic_set_fb_for_plane().
> >> 
> >> It calls drm_framebuffer_get() for the new fb and
> >> drm_framebuffer_put() for the old fb. In result, if the fb changes,
> >> the old fb, which had its reference count incremented in the atomic
> >> commit that set it to the plane before, has its reference count
> >> decremented. Moreover, if the new reference count becomes 0,
> >> drm_framebuffer_put() will immediately free the buffer.
> >> 
> >> Freeing a buffer when the hardware is still scanning out of it isn't
> >> a
> >> good idea, is it?  
> >
> > No, it's not.  But the board I submitted the patch for doesn't have
> > anything like hot swapable ram.  The ram access is still going to work,
> > just it might display something it shouldn't. Say for example if that
> > frame buffer got reused by somethig else and filled with new data in
> > the very small window.
> >
> > But yes, I agree the best solution would be to not release the buffer
> > until the next vblank.
> >
> > Perhaps a good solution would be for the DRM api to have the concept of
> > a deferred release?  Meaning if the put() call just added the frame
> > buffer to a list that DRM core could walk during the vblank.  That
> > might be better then every single driver trying to work up a custom
> > solution.
> >  
> >> The vc4 driver seems to be able to program the hardware to switch the
> >> scanout to the new buffer immediately:
> >> 
> >> https://elixir.bootlin.com/linux/v4.20-rc3/source/drivers/gpu/drm/vc4/vc4_plane.c#L794
> >> 
> >> Although I wonder if there isn't still a tiny race there - the
> >> hardware may have just started refilling the FIFO from the old
> >> address. Still, if the FIFO is small, the FIFO refill operation may
> >> be
> >> much shorter than it takes for the kernel code to actually free the
> >> buffer. Eric and Michael, could you confirm?
> >>   
> >
> > I don't have those boards anymore, and I don't have access to any
> > technical documentation on the GPU so I can't really add much here.  
> > Eric can probably provide the best information.  
> 
> I don't think I understood my scanout hardware well enough when I
> started on the async update stuff for rpi.  vc4 probably needs to wait
> until the HW starts scanning out a new line before letting the old BO
> get freed.

That's also my understanding. Note that even if the BO is freed before
the HVS has finished generating a line it shouldn't crash, because
accesses are done through DMA. Might be a security issue though if we
start re-using the memory for something else while it's still being
accessed.

The solution would be to wait for the EOL (End Of Line) interrupt in
the async update path, but I'm not sure this is allowed.
