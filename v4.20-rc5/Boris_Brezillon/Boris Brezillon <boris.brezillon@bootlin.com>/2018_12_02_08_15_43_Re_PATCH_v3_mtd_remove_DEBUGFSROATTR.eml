Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:28:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B3F7F580460;
	Sun,  2 Dec 2018 00:16:10 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 02 Dec 2018 00:16:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnYng8xLIGGNygZLvotmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvjzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kJNzA37nzZhM9yg6JVpxyuqABwzYHPYIGNNvdzZb/dcNEASGZdRMtdSzJND4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopHgqlsJtxu+BBKsD/7yxz9SmHD33Kw60+AlEQHB2gwrAtUDv2?=
 =?us-ascii?q?/TrNXvNacSSvq5w7LSzTrdbvJW2DP96IzPchAnuvyDRrVwcc3NyUkrFgPFiE+c?=
 =?us-ascii?q?ppDiPzOQz+kAtXWQ4el4Ve+3lWIrtwV8riKyysoilIXFnJ8Zx1PY+SljwYs4J8?=
 =?us-ascii?q?W0RUpmbdK+DZddtj2WO5FrTs4gQWxkojs2x7wJtJO9YSME0o4oxwTFZPyCa4WI?=
 =?us-ascii?q?4gzsVOKWITpgmnJld6ywhwyo/Uij1OL8TM+030hOriZfldnMrH8N2wTS6siBVP?=
 =?us-ascii?q?R94l+s1SiT2w3X8O1IPE45mbTBJ5I8wbM8ioAfvEXBEyPunUX5lq6WdkEq+uiy?=
 =?us-ascii?q?7OTnZ63rppudN49ylwH/Pb0ims+hDuQiNAgBQWyb9f271Lzt+032Xq9Kg+Yokq?=
 =?us-ascii?q?nWrp/aP94Xpq2nDA9P1IYs9RK/Ay2h0NQCknkLNEhFdw6fj4j1J1HOJ+j1DfO+?=
 =?us-ascii?q?g1Svjjhn3f/HPqD6D5XJL3jDlqrhfLln505dzgoz0c5Q55ZOBr4dJ/LzX1f7tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc191owEWGKPHrWWMKTIvV+I++IgOe+MZIAOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWAUT5UeXm+Ra?=
 =?us-ascii?q?E85jY9CIKgCofOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIsV5iDwL?=
 =?us-ascii?q?SaChS5M91RGprAL10aFnLurT+i0br57jzsJ65+/ImBE29Dx0Cdmd0m6XQ2F1mG?=
 =?us-ascii?q?MIWyE53KRlrUNhzVeD1LByg+ZEGtxL+/NJTgA6OIbfz+NgDdD+QAbBftaTR1ag?=
 =?us-ascii?q?TdWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QpX9FANXO4iaJl9wjcHYjJk16HmKascqgc2C3N9GKHzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYJhfydTvMT2a4EuCchqjluAFaxxdXWC8CEpwpgeqVcbs?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?bymX3ZTuNbzYNGbz/AqjZLXL2l7DytmW/KQP6PMmq1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svz7CxtIlHvcqxgyhftdf?=
 =?us-ascii?q?KqyEEgDyHtYeB8ivLuwqhleoYggFPOBU6K47Iceme+Ga166sOeZqhCimgnhf4I?=
 =?us-ascii?q?BhzkKM8DJxSvTJ35kZ2f6YxBaIVzDmgFenrM/3g4FEaSgOEWWlzSjrGZBeZrd1?=
 =?us-ascii?q?fYYNEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?Bzkzwxrquf3TbCwuT4eBocJ25LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe8xP54kysSVUU+S8ZkqWSqXnrBsZ0CPjHm?=
 =?us-ascii?q?1eyy49dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpbDqO++UHitVp9ScSnt1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk6Mp1AIB+npEwhJENw3cagJqV8GEDkWfy?=
 =?us-ascii?q?N9VbxK3/YGAMRT4N397a/gzl1Fd/IXKOwoLzTm+dzdd5Z9mmfmMW3Tow78VLCK?=
 =?us-ascii?q?eX9rNIhyV0rUSjrQLNf/d9hCwSxuU06H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhZpciGipw4t9+MV3W1n3z95rkeM?=
 =?us-ascii?q?LRbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOzLufcwT/TXtjbtEksaSwoCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQZz89tRByDK0xEmgwUQC82np0kFgCp2czh?=
 =?us-ascii?q?dl125isK6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSNK2ycegRIFHwJVVaCB1z5Jbmu4t/A8+eDC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXly3Tbs6bpxS8+ixtos?=
 =?us-ascii?q?C86vTrXw3v6pWVC7tPKtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMUcT5zO9BS760i3ghBI8rbitLu2758j/41DUpFVF?=
 =?us-ascii?q?P7lsGoY8wKP3+yNFfdCEmXM7SGICXBw9vrbqOkVb1QkOJUugWsuTaaFk/vJCiM?=
 =?us-ascii?q?myP1WBCvL+5MijqWPBhfuIG7bxZsBnLvTNPgah2nLtB3iSc6zqEzhnPPLWQcKy?=
 =?us-ascii?q?Rzc1tRrr2M6iNVmvV+FHZH7npgLOmEnT6W7ujYKpkMt/trDT95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiA1JyrWN6jYSEoUxlcYHYvs1cWHDVug0M62?=
 =?us-ascii?q?mCGTwFotJkDpvkvKUGmfbVk6emAjBY8smc19ERFcnQLMWBeC4rNgDoA3jeFgYX?=
 =?us-ascii?q?TDqvMmf3jUtajPWT8DueqZ1s+cuko4YHVrIODA99LfgdEEkwRNE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A0AABblANch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBAYNqJ4xwiymCDRSIfYR5iT6BcywTAYd2IjUIDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCCkvQgEMAYFmIoJlAQICAQECJBM/BQEJAQEKDhMlAwwSCysGEwWDH?=
 =?us-ascii?q?IFqAw0IBAGjfzOHdA2CHIwcgVc/gRGDEoJXiAUCiTCFfkaQHi4HAoIfBItrgyM?=
 =?us-ascii?q?jCgKBT4g2hxUsjkiLQQGCCk0jgzyCJxeOHj8ygQUBASETgn6JagEB?=
X-IPAS-Result: =?us-ascii?q?A0A0AABblANch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBAYN?=
 =?us-ascii?q?qJ4xwiymCDRSIfYR5iT6BcywTAYd2IjUIDQEDAQEBAQEBAgETAQEBCgsJCCkvQ?=
 =?us-ascii?q?gEMAYFmIoJlAQICAQECJBM/BQEJAQEKDhMlAwwSCysGEwWDHIFqAw0IBAGjfzO?=
 =?us-ascii?q?HdA2CHIwcgVc/gRGDEoJXiAUCiTCFfkaQHi4HAoIfBItrgyMjCgKBT4g2hxUsj?=
 =?us-ascii?q?kiLQQGCCk0jgzyCJxeOHj8ygQUBASETgn6JagEB?=
X-IronPort-AV: E=Sophos;i="5.56,305,1539673200"; 
   d="scan'208";a="55722664"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 00:16:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725775AbeLBIP5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 2 Dec 2018 03:15:57 -0500
Received: from mail.bootlin.com ([62.4.15.54]:33063 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725763AbeLBIP5 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 2 Dec 2018 03:15:57 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 0D670207B0; Sun,  2 Dec 2018 09:15:54 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT
        shortcircuit=ham autolearn=disabled version=3.4.2
Received: from bbrezillon (91-160-177-164.subs.proxad.net [91.160.177.164])
        by mail.bootlin.com (Postfix) with ESMTPSA id B00B7206D8;
        Sun,  2 Dec 2018 09:15:43 +0100 (CET)
Date: Sun, 2 Dec 2018 09:15:43 +0100
From: Boris Brezillon <boris.brezillon@bootlin.com>
To: Yangtao Li <tiny.windzz@gmail.com>
Cc: robert.jarzmik@free.fr, dwmw2@infradead.org,
        computersforpeace@gmail.com, marek.vasut@gmail.com, richard@nod.at,
        miquel.raynal@bootlin.com, keescook@chromium.org,
        shreeya.patel23498@gmail.com, linux-mtd@lists.infradead.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v3] mtd: remove DEBUGFS_RO_ATTR()
Message-ID: <20181202091543.73c74aea@bbrezillon>
In-Reply-To: <20181202073202.10587-1-tiny.windzz@gmail.com>
References: <20181202073202.10587-1-tiny.windzz@gmail.com>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Looks like getting rid of DEBUGFS_RO_ATTR() is just one of the change
you do. I think you should change the subject line:

"mtd: use DEFINE_SHOW_ATTRIBUTE() instead of open-coding it"

This way it covers all of your changes.

On Sun,  2 Dec 2018 02:32:02 -0500
Yangtao Li <tiny.windzz@gmail.com> wrote:

> We already have the DEFINE_SHOW_ATTRIBUTE.There is no need to define

					    ^ missing space

> such a macro,so remove DEBUGFS_RO_ATTR.Also use DEFINE_SHOW_ATTRIBUTE

	       ^ here as well

> to simplify some code.

If you go for the new subject line, you'll have to change this commit
message.

> 
> Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
> ---
> changes in v3:
> -remove the blank line between the function
>  definition and DEFINE_SHOW_ATTRIBUTE()
> ---
>  drivers/mtd/devices/docg3.c    | 16 ++++++++--------
>  drivers/mtd/devices/docg3.h    | 11 -----------
>  drivers/mtd/mtdswap.c          | 13 +------------
>  drivers/mtd/nand/raw/nandsim.c | 17 +++--------------
>  4 files changed, 12 insertions(+), 45 deletions(-)
> 
> diff --git a/drivers/mtd/devices/docg3.c b/drivers/mtd/devices/docg3.c
> index 512bd4c2eec0..4c94fc096696 100644
> --- a/drivers/mtd/devices/docg3.c
> +++ b/drivers/mtd/devices/docg3.c
> @@ -1603,7 +1603,7 @@ static void doc_unregister_sysfs(struct platform_device *pdev,
>  /*
>   * Debug sysfs entries
>   */
> -static int dbg_flashctrl_show(struct seq_file *s, void *p)
> +static int flashcontrol_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  
> @@ -1623,9 +1623,9 @@ static int dbg_flashctrl_show(struct seq_file *s, void *p)
>  
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(flashcontrol, dbg_flashctrl_show);
> +DEFINE_SHOW_ATTRIBUTE(flashcontrol);
>  
> -static int dbg_asicmode_show(struct seq_file *s, void *p)
> +static int asic_mode_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  
> @@ -1660,9 +1660,9 @@ static int dbg_asicmode_show(struct seq_file *s, void *p)
>  	seq_puts(s, ")\n");
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(asic_mode, dbg_asicmode_show);
> +DEFINE_SHOW_ATTRIBUTE(asic_mode);
>  
> -static int dbg_device_id_show(struct seq_file *s, void *p)
> +static int device_id_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  	int id;
> @@ -1674,9 +1674,9 @@ static int dbg_device_id_show(struct seq_file *s, void *p)
>  	seq_printf(s, "DeviceId = %d\n", id);
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(device_id, dbg_device_id_show);
> +DEFINE_SHOW_ATTRIBUTE(device_id);
>  
> -static int dbg_protection_show(struct seq_file *s, void *p)
> +static int protection_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  	int protect, dps0, dps0_low, dps0_high, dps1, dps1_low, dps1_high;
> @@ -1726,7 +1726,7 @@ static int dbg_protection_show(struct seq_file *s, void *p)
>  		   !!(dps1 & DOC_DPS_KEY_OK));
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(protection, dbg_protection_show);
> +DEFINE_SHOW_ATTRIBUTE(protection);
>  
>  static void __init doc_dbg_register(struct mtd_info *floor)
>  {
> diff --git a/drivers/mtd/devices/docg3.h b/drivers/mtd/devices/docg3.h
> index e99946575398..e16dca23655b 100644
> --- a/drivers/mtd/devices/docg3.h
> +++ b/drivers/mtd/devices/docg3.h
> @@ -317,17 +317,6 @@ struct docg3 {
>  #define doc_info(fmt, arg...) dev_info(docg3->dev, (fmt), ## arg)
>  #define doc_dbg(fmt, arg...) dev_dbg(docg3->dev, (fmt), ## arg)
>  #define doc_vdbg(fmt, arg...) dev_vdbg(docg3->dev, (fmt), ## arg)
> -
> -#define DEBUGFS_RO_ATTR(name, show_fct) \
> -	static int name##_open(struct inode *inode, struct file *file) \
> -	{ return single_open(file, show_fct, inode->i_private); }      \
> -	static const struct file_operations name##_fops = { \
> -		.owner = THIS_MODULE, \
> -		.open = name##_open, \
> -		.llseek = seq_lseek, \
> -		.read = seq_read, \
> -		.release = single_release \
> -	};
>  #endif
>  
>  /*
> diff --git a/drivers/mtd/mtdswap.c b/drivers/mtd/mtdswap.c
> index d9dcb2d051b4..d162d1717fad 100644
> --- a/drivers/mtd/mtdswap.c
> +++ b/drivers/mtd/mtdswap.c
> @@ -1265,18 +1265,7 @@ static int mtdswap_show(struct seq_file *s, void *data)
>  
>  	return 0;
>  }
> -
> -static int mtdswap_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, mtdswap_show, inode->i_private);
> -}
> -
> -static const struct file_operations mtdswap_fops = {
> -	.open		= mtdswap_open,
> -	.read		= seq_read,
> -	.llseek		= seq_lseek,
> -	.release	= single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(mtdswap);
>  
>  static int mtdswap_add_debugfs(struct mtdswap_dev *d)
>  {
> diff --git a/drivers/mtd/nand/raw/nandsim.c b/drivers/mtd/nand/raw/nandsim.c
> index c452819f6123..ef8721418f2d 100644
> --- a/drivers/mtd/nand/raw/nandsim.c
> +++ b/drivers/mtd/nand/raw/nandsim.c
> @@ -443,7 +443,7 @@ static unsigned long total_wear = 0;
>  /* MTD structure for NAND controller */
>  static struct mtd_info *nsmtd;
>  
> -static int nandsim_debugfs_show(struct seq_file *m, void *private)
> +static int nandsim_show(struct seq_file *m, void *private)
>  {
>  	unsigned long wmin = -1, wmax = 0, avg;
>  	unsigned long deciles[10], decile_max[10], tot = 0;
> @@ -494,18 +494,7 @@ static int nandsim_debugfs_show(struct seq_file *m, void *private)
>  
>  	return 0;
>  }
> -
> -static int nandsim_debugfs_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, nandsim_debugfs_show, inode->i_private);
> -}
> -
> -static const struct file_operations dfs_fops = {
> -	.open		= nandsim_debugfs_open,
> -	.read		= seq_read,
> -	.llseek		= seq_lseek,
> -	.release	= single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(nandsim);
>  
>  /**
>   * nandsim_debugfs_create - initialize debugfs
> @@ -531,7 +520,7 @@ static int nandsim_debugfs_create(struct nandsim *dev)
>  	}
>  
>  	dent = debugfs_create_file("nandsim_wear_report", S_IRUSR,
> -				   root, dev, &dfs_fops);
> +				   root, dev, &nandsim_fops);
>  	if (IS_ERR_OR_NULL(dent)) {
>  		NS_ERR("cannot create \"nandsim_wear_report\" debugfs entry\n");
>  		return -1;

