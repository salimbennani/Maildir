Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:28:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8055B580460;
	Sun,  2 Dec 2018 00:47:15 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga002-1.fm.intel.com with ESMTP; 02 Dec 2018 00:47:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AlqCzEBHaOWn00yKMFohhUZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8iybnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA38G/ZlNF+gqFZrxKvoBJwzJLbbo6ONPpmfK7QZs8aSGhbU8pNTSFNHp2w?=
 =?us-ascii?q?Yo0SBOQBJ+ZYqIz9qkMToBu5HwmsBfjvwSJVi3/sw6I70uUhEQXC3AwnGdIFrX?=
 =?us-ascii?q?PZo87yNKcIUOC117PEwi7Zb/xI2Db96YzIchQmofGKRr9/as3RyU4zFwPBj1WQ?=
 =?us-ascii?q?r5bpMC+S1uQIqmWW6fdrW+G3i2M/tQ19vjyiyt0xhoTHmI4Z0E3I+CZlzIovJN?=
 =?us-ascii?q?C1SlZ3bNq5HJdKqi2XNpd6Ttk/T2xquis20KAKtJ+0cSUM1Z8p3QTQa+adfIiN?=
 =?us-ascii?q?+h/jVPieITN/hH99ZrK/iAi98VK6xu3/SMa0ylBKoTRBktXWsXANzRPT5tCGSv?=
 =?us-ascii?q?t74EihxS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuia+ZbEQk+uym?=
 =?us-ascii?q?6+T9ZbXmo4eRN4t1igH4L6QvldWzAecmPQgUWWiU5+C82KTk/Uz3RrVFkOc2n7?=
 =?us-ascii?q?LHsJDVO8sbvLS1AwxL3YY57RawETOm3M4fnXkdI1JJYAiHgJTxO1HSPPD4Cu+y?=
 =?us-ascii?q?g1CtkDdo2f/KJLLgAojWI3jHkbfhe6t96kFGxAoyy9Bf+4xbCrUbLP3vXU/xsc?=
 =?us-ascii?q?TSDgUlPAys3+bnFNJ925seWW2VA6+ZLLndsViS6uIvPumDfokVuDnmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZRZ3a1Qa?=
 =?us-ascii?q?0w/DI7CIWgDYfFQYCgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907doNPHU+i0ftZLgztR1/ffclRMp+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvR5C9/oXALNZNOJSFe8?=
 =?us-ascii?q?TdWgDjE8VdYxw94IY0ZgFNSulBHD3yy2A7ALk7yHHoA78qXZ33LpPcZy127G1L?=
 =?us-ascii?q?U9j1khWsZAKHephrBh+ATJB47GiUOZl720eqQa2yLN8GSDzW+KvExDVA5wUKPF?=
 =?us-ascii?q?XW0QZ0fMrNT54F/CQKGqCbg9LgRBzsuCILNQatL1lVVGWOvjONPGbm2sgWiwGw?=
 =?us-ascii?q?iHyqmMbIXwfWUdxzvSCE4fngAX/HaGMxU+Byi7r2LfCjxuCUzgY0f2/eZir3O7?=
 =?us-ascii?q?S1c+zxuWYE15y7q15hkViOSAS/MS27IEvzshqzV0HVqnw9LaEd2ApxBlfKVdZ9?=
 =?us-ascii?q?M970xK1WbYtwx7I5yhILpuhl8YcwRroUzu0w97BZlHkcgvtHkq1hZ9KbqE0FNd?=
 =?us-ascii?q?cDOVxYr/OrnJJWj94h+ua7Ta1UrD0NmL4KgP7vc4q1L9vAyyEkoi8nNn08Ra0n?=
 =?us-ascii?q?eG55XKChYSXoz1Ukot6xd6oLTaaDEn54zIzX1sLbW0sjja1tMpGesp0Aqvc81e?=
 =?us-ascii?q?MaOEDgDyFcIaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF34wEw/6ExASHTSrzjFC7vsDxh49EfzASEnOjxif+AI5ee7N9?=
 =?us-ascii?q?fZwMCWeoOMC3wtR+h5jwW39X7lKjBlUG2NO3dhqWdVDywQpQ1UEPq3y9hSS41y?=
 =?us-ascii?q?B0ky0urqeH3C3Owv7udRodNm5QWWlii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JEovj9NUOS/YlCaTaTxowAA3CPgHG?=
 =?us-ascii?q?texTY7eC+supjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+G+TW2hUYdfcSvqzYOGrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diGYFxiIowiIsQ2XgHnJqV+3UHnHz3?=
 =?us-ascii?q?MdVa36L+cXUMSSQKw97T/AjqxkljImiVyIL+U3WX2tFhaMWiYmMKxiI96NhHCK?=
 =?us-ascii?q?KV7LxHhyR5uFS5ohzKYfhhgDgd0+Ah52AAg+EGowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6AS9w6cB/PEjN0XLp7IHkZc?=
 =?us-ascii?q?LQbckSthCPlxfAju5VKI8+l/YQhCpnP379smMhy+IhkRNu2pS6tpCdK2px5KK5?=
 =?us-ascii?q?HgJYNjrtaswI4D7tiqJentuM04CrA5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhiRgOSJElBjwAPRjk6goQ1FgO3xMzi?=
 =?us-ascii?q?bUd54Coe5kXjpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SbZgRPEGEJQ1GECErlPrW0/tnA9O6YBuWlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrNb8GFpRe8+S53rs?=
 =?us-ascii?q?Gl/PToQgLv4oSPBKVIMdVy4BC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy58LtZI4Lkm3gZTOc/XkNf11r9jg/4xCldFU0?=
 =?us-ascii?q?Hhm86zacwLJWG9KE3IBEKROLuaIj3Lxtn9YbmgRr1IkOVUqxqwtC6HE0/iOzSP?=
 =?us-ascii?q?jSXmWwqzPuFMki6bOgdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA2xA4WBjLemBmiaZ6fHXK5cWsfRxBCR0mPlX4HA7y7tT?=
 =?us-ascii?q?8SFFS+Z5mCrUrt5yvV6mlvODxSZgUBpL+X53g9e6tENtJazevr1BESLY/RQcq3?=
 =?us-ascii?q?qRDRgYtfNqD9Tuv+Zbzd2Zx4zpLzIX2dXO/NBULdLZOsODNH0neU7jHyTVF00P?=
 =?us-ascii?q?VzO5NGXbgEp1mvaV6nmUqN4xrZ26y8lGcaNSSFFgTqBSMU9iBtFXeJo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAADxmgNch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYNqJ4wRX4spgg0UiH2EeYRFhHmBcywTAYd2IjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCCkvQgEMAYFmIoJlAQICAQECJBM/BQEJAQEKDhMlAwwSCysGE?=
 =?us-ascii?q?wWDHIFqAw0IBAGjbzOHdA2CHIwcgVc/gRGDEoJXiAUCiTCFfkaFaoo0LgcCgh8?=
 =?us-ascii?q?Ei2uDIyMKAoFPiDaHFSyOSIs/gg1NI4M8gicXjh4/MoEFAQEhE4J+hx0HgkYBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0AiAADxmgNch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYN?=
 =?us-ascii?q?qJ4wRX4spgg0UiH2EeYRFhHmBcywTAYd2IjQJDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?CkvQgEMAYFmIoJlAQICAQECJBM/BQEJAQEKDhMlAwwSCysGEwWDHIFqAw0IBAG?=
 =?us-ascii?q?jbzOHdA2CHIwcgVc/gRGDEoJXiAUCiTCFfkaFaoo0LgcCgh8Ei2uDIyMKAoFPi?=
 =?us-ascii?q?DaHFSyOSIs/gg1NI4M8gicXjh4/MoEFAQEhE4J+hx0HgkYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,305,1539673200"; 
   d="scan'208";a="42400721"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 00:46:12 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725789AbeLBIkM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 2 Dec 2018 03:40:12 -0500
Received: from mail.bootlin.com ([62.4.15.54]:33175 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725769AbeLBIkM (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 2 Dec 2018 03:40:12 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 863F4207B0; Sun,  2 Dec 2018 09:40:08 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT
        shortcircuit=ham autolearn=disabled version=3.4.2
Received: from bbrezillon (91-160-177-164.subs.proxad.net [91.160.177.164])
        by mail.bootlin.com (Postfix) with ESMTPSA id 30B22206D8;
        Sun,  2 Dec 2018 09:39:58 +0100 (CET)
Date: Sun, 2 Dec 2018 09:39:58 +0100
From: Boris Brezillon <boris.brezillon@bootlin.com>
To: Yangtao Li <tiny.windzz@gmail.com>
Cc: robert.jarzmik@free.fr, dwmw2@infradead.org,
        computersforpeace@gmail.com, marek.vasut@gmail.com, richard@nod.at,
        miquel.raynal@bootlin.com, keescook@chromium.org,
        shreeya.patel23498@gmail.com, linux-mtd@lists.infradead.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] mtd: use DEFINE_SHOW_ATTRIBUTE() instead of open-coding
 it
Message-ID: <20181202093958.6419fd24@bbrezillon>
In-Reply-To: <20181202083358.10896-1-tiny.windzz@gmail.com>
References: <20181202083358.10896-1-tiny.windzz@gmail.com>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Should be [PATCH v4]

On Sun,  2 Dec 2018 03:33:58 -0500
Yangtao Li <tiny.windzz@gmail.com> wrote:

> DEFINE_SHOW_ATTRIBUTE macro can help us simplify the code,so change
> to it.And change the DEBUGFS_RO_ATTR macro defined in some file to a
> standard macro.

You still don't put spaces after commas or periods

> 
> Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
> ---

and you miss a changelog here.

Anyway, no need to send a new version, I'll fix the commit message when
applying the patch.

Thanks,

Boris

>  drivers/mtd/devices/docg3.c    | 16 ++++++++--------
>  drivers/mtd/devices/docg3.h    | 11 -----------
>  drivers/mtd/mtdswap.c          | 13 +------------
>  drivers/mtd/nand/raw/nandsim.c | 17 +++--------------
>  4 files changed, 12 insertions(+), 45 deletions(-)
> 
> diff --git a/drivers/mtd/devices/docg3.c b/drivers/mtd/devices/docg3.c
> index 512bd4c2eec0..4c94fc096696 100644
> --- a/drivers/mtd/devices/docg3.c
> +++ b/drivers/mtd/devices/docg3.c
> @@ -1603,7 +1603,7 @@ static void doc_unregister_sysfs(struct platform_device *pdev,
>  /*
>   * Debug sysfs entries
>   */
> -static int dbg_flashctrl_show(struct seq_file *s, void *p)
> +static int flashcontrol_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  
> @@ -1623,9 +1623,9 @@ static int dbg_flashctrl_show(struct seq_file *s, void *p)
>  
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(flashcontrol, dbg_flashctrl_show);
> +DEFINE_SHOW_ATTRIBUTE(flashcontrol);
>  
> -static int dbg_asicmode_show(struct seq_file *s, void *p)
> +static int asic_mode_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  
> @@ -1660,9 +1660,9 @@ static int dbg_asicmode_show(struct seq_file *s, void *p)
>  	seq_puts(s, ")\n");
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(asic_mode, dbg_asicmode_show);
> +DEFINE_SHOW_ATTRIBUTE(asic_mode);
>  
> -static int dbg_device_id_show(struct seq_file *s, void *p)
> +static int device_id_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  	int id;
> @@ -1674,9 +1674,9 @@ static int dbg_device_id_show(struct seq_file *s, void *p)
>  	seq_printf(s, "DeviceId = %d\n", id);
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(device_id, dbg_device_id_show);
> +DEFINE_SHOW_ATTRIBUTE(device_id);
>  
> -static int dbg_protection_show(struct seq_file *s, void *p)
> +static int protection_show(struct seq_file *s, void *p)
>  {
>  	struct docg3 *docg3 = (struct docg3 *)s->private;
>  	int protect, dps0, dps0_low, dps0_high, dps1, dps1_low, dps1_high;
> @@ -1726,7 +1726,7 @@ static int dbg_protection_show(struct seq_file *s, void *p)
>  		   !!(dps1 & DOC_DPS_KEY_OK));
>  	return 0;
>  }
> -DEBUGFS_RO_ATTR(protection, dbg_protection_show);
> +DEFINE_SHOW_ATTRIBUTE(protection);
>  
>  static void __init doc_dbg_register(struct mtd_info *floor)
>  {
> diff --git a/drivers/mtd/devices/docg3.h b/drivers/mtd/devices/docg3.h
> index e99946575398..e16dca23655b 100644
> --- a/drivers/mtd/devices/docg3.h
> +++ b/drivers/mtd/devices/docg3.h
> @@ -317,17 +317,6 @@ struct docg3 {
>  #define doc_info(fmt, arg...) dev_info(docg3->dev, (fmt), ## arg)
>  #define doc_dbg(fmt, arg...) dev_dbg(docg3->dev, (fmt), ## arg)
>  #define doc_vdbg(fmt, arg...) dev_vdbg(docg3->dev, (fmt), ## arg)
> -
> -#define DEBUGFS_RO_ATTR(name, show_fct) \
> -	static int name##_open(struct inode *inode, struct file *file) \
> -	{ return single_open(file, show_fct, inode->i_private); }      \
> -	static const struct file_operations name##_fops = { \
> -		.owner = THIS_MODULE, \
> -		.open = name##_open, \
> -		.llseek = seq_lseek, \
> -		.read = seq_read, \
> -		.release = single_release \
> -	};
>  #endif
>  
>  /*
> diff --git a/drivers/mtd/mtdswap.c b/drivers/mtd/mtdswap.c
> index d9dcb2d051b4..d162d1717fad 100644
> --- a/drivers/mtd/mtdswap.c
> +++ b/drivers/mtd/mtdswap.c
> @@ -1265,18 +1265,7 @@ static int mtdswap_show(struct seq_file *s, void *data)
>  
>  	return 0;
>  }
> -
> -static int mtdswap_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, mtdswap_show, inode->i_private);
> -}
> -
> -static const struct file_operations mtdswap_fops = {
> -	.open		= mtdswap_open,
> -	.read		= seq_read,
> -	.llseek		= seq_lseek,
> -	.release	= single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(mtdswap);
>  
>  static int mtdswap_add_debugfs(struct mtdswap_dev *d)
>  {
> diff --git a/drivers/mtd/nand/raw/nandsim.c b/drivers/mtd/nand/raw/nandsim.c
> index c452819f6123..ef8721418f2d 100644
> --- a/drivers/mtd/nand/raw/nandsim.c
> +++ b/drivers/mtd/nand/raw/nandsim.c
> @@ -443,7 +443,7 @@ static unsigned long total_wear = 0;
>  /* MTD structure for NAND controller */
>  static struct mtd_info *nsmtd;
>  
> -static int nandsim_debugfs_show(struct seq_file *m, void *private)
> +static int nandsim_show(struct seq_file *m, void *private)
>  {
>  	unsigned long wmin = -1, wmax = 0, avg;
>  	unsigned long deciles[10], decile_max[10], tot = 0;
> @@ -494,18 +494,7 @@ static int nandsim_debugfs_show(struct seq_file *m, void *private)
>  
>  	return 0;
>  }
> -
> -static int nandsim_debugfs_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, nandsim_debugfs_show, inode->i_private);
> -}
> -
> -static const struct file_operations dfs_fops = {
> -	.open		= nandsim_debugfs_open,
> -	.read		= seq_read,
> -	.llseek		= seq_lseek,
> -	.release	= single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(nandsim);
>  
>  /**
>   * nandsim_debugfs_create - initialize debugfs
> @@ -531,7 +520,7 @@ static int nandsim_debugfs_create(struct nandsim *dev)
>  	}
>  
>  	dent = debugfs_create_file("nandsim_wear_report", S_IRUSR,
> -				   root, dev, &dfs_fops);
> +				   root, dev, &nandsim_fops);
>  	if (IS_ERR_OR_NULL(dent)) {
>  		NS_ERR("cannot create \"nandsim_wear_report\" debugfs entry\n");
>  		return -1;

