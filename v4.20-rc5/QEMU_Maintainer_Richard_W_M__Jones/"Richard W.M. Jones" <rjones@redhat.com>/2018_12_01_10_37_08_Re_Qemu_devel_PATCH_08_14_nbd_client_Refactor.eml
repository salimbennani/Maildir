Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:27:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from mta-temp.ostc.intel.com (mta-temp.ostc.intel.com [10.54.63.100])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 18A2D5809A0
	for <like.xu@linux.intel.com>; Sat,  1 Dec 2018 18:20:57 -0800 (PST)
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mta-temp.ostc.intel.com (Postfix) with ESMTPS id 61BCC61C24
	for <like.xu@linux.intel.com>; Sat,  1 Dec 2018 02:38:57 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 01 Dec 2018 02:37:57 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AAbQI1x3gMwreJkvusmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesXKPTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfV5Y63dYMgaRXJfUclNSyxPDIS8?=
 =?us-ascii?q?b44VAOoAO+ZTso3xqlQKoBe7AwSnGeHhxSJShnLu06M00/ovHwLI3AMvA90BrX?=
 =?us-ascii?q?bbo9v6OqkPSeC4zqvGwDreY/5YxTvy9pPIfws9ofGVR798bdbdxFMtGg7Dk16e?=
 =?us-ascii?q?qZblPzSQ1ukVvWSV8+tgWv6vi2E9sQF+vyWkycc2hofOnI4e11TK9SJ/wIkrPt?=
 =?us-ascii?q?20RlNwbNm+EJtSsCGaMZV5Qtg5TmFypik1170GtoSnfCQQ1JsnwBvfZuWBfoOV?=
 =?us-ascii?q?7BzjU+ORLi15hHJjYL+/nQi9/lWgyuLmSsm4ykpFri1AktXUuHACyQHc6s+dSv?=
 =?us-ascii?q?Rn5kehwzGP1wLN5e5YPUA4j63bK4QuwrIomJsTtl7DETLumEXskqCWbV4k9vK0?=
 =?us-ascii?q?5OTgZ7XroIKXOYxsigzmLKgihs+yDf4lPgQTXGWX4/qw2bPj8EHjXblHjOU6nr?=
 =?us-ascii?q?fFvJ3eP8gXu6C0DxFP3oo+6BuyAS2q3MobkHQBMVlLYgiIj5LzNFHLOP34Demw?=
 =?us-ascii?q?g1CrkDpzw/DGP6bhAonWLnTZn7fhe6t951RbyAopwtBT/5NUCrcfL/LvQkL9qs?=
 =?us-ascii?q?DUAxwjPwCp3urqC89x2p0QVG+PGKOVLaHfvUeN5u01IumMYIEVuCz6K/gg//Pu?=
 =?us-ascii?q?lGE2mVoAfaWwwJQYdm64EepiI0mAenXshcoBEWEWsQUgV+zmj1mCUT9QZ3msRa?=
 =?us-ascii?q?496Sw7BZqiDYfCQICtnbOA0D26Hp1QemBJFFSMHW30eIWDXvcBcySSIshnkjwL?=
 =?us-ascii?q?U7ihVpUt1Ra0tA/107ZnNPbb+jUEtZL/09h4/+nTlRAx9TNqFcic3HyNQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwdpfaPa1PFwXtDuRhraLJDOTFe9?=
 =?us-ascii?q?Xs7gBzY3QdQshdgUbAF4EtSmixnFmC2yH74SkafMHZEx7+fQ0mb8I5VAzW3b3v?=
 =?us-ascii?q?wkhlgiXswdLGCjm+tz+hbeA8vTnlyEmr22XaIb2iHL6SGE12XZp1xSUgN7TfDY?=
 =?us-ascii?q?W2sCbFDdt9Xz6xD+SOqDE7UseiFFwM2PYv9HYNngjlhuXvrvON3CJWm2njHjKw?=
 =?us-ascii?q?yPw+bGVovhe2wH0G3iTm1C2yIU+3udf0BqHCWmpW/FJCZjGVLmfwXn9uwo+yDz?=
 =?us-ascii?q?dVM90wzfNx4p7LGy4BNAwKHFRg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A6AADyYwJchxHrdtBjFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgWWBMYE5gRYTg3mId4ssgg2ST4ZsFBgHDYRAgzYiOBIBAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgbDiMMgjYFAgMaB4JcAQIDAQIgIwopAwMBAgYBAQoOCgICB?=
 =?us-ascii?q?R0EAgIDAQsFMgMBExMFgxwBggEBBAqlYIEvg0GBf4RrgQuHJ4NqEQaBQD+BEYM?=
 =?us-ascii?q?SghCCWxaDBIJXAoklCoV+gUyEZIphBwIChn6KMQsYgVtNhzM2hxMsgQ2COol1g?=
 =?us-ascii?q?lqIKYFdgXZwFYMnCYIeF4NKhRSFP0ExgQcciyGBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0A6AADyYwJchxHrdtBjFgQBAQEBAQIBAQEBBwIBAQEBgWW?=
 =?us-ascii?q?BMYE5gRYTg3mId4ssgg2ST4ZsFBgHDYRAgzYiOBIBAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgbDiMMgjYFAgMaB4JcAQIDAQIgIwopAwMBAgYBAQoOCgICBR0EAgIDAQsFMgM?=
 =?us-ascii?q?BExMFgxwBggEBBAqlYIEvg0GBf4RrgQuHJ4NqEQaBQD+BEYMSghCCWxaDBIJXA?=
 =?us-ascii?q?oklCoV+gUyEZIphBwIChn6KMQsYgVtNhzM2hxMsgQ2COol1glqIKYFdgXZwFYM?=
 =?us-ascii?q?nCYIeF4NKhRSFP0ExgQcciyGBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,302,1539673200"; 
   d="scan'208";a="140360400"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 01 Dec 2018 02:37:54 -0800
Received: from localhost ([::1]:40728 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gT2en-0005W7-V3
	for like.xu@linux.intel.com; Sat, 01 Dec 2018 05:37:53 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58724)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <rjones@redhat.com>) id 1gT2eE-0005DE-QJ
	for qemu-devel@nongnu.org; Sat, 01 Dec 2018 05:37:19 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <rjones@redhat.com>) id 1gT2eD-0006UH-PN
	for qemu-devel@nongnu.org; Sat, 01 Dec 2018 05:37:18 -0500
Received: from mx1.redhat.com ([209.132.183.28]:46750)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <rjones@redhat.com>)
	id 1gT2e9-0006Qj-8R; Sat, 01 Dec 2018 05:37:13 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 870F1C057F9F;
	Sat,  1 Dec 2018 10:37:12 +0000 (UTC)
Received: from localhost (ovpn-116-21.ams2.redhat.com [10.36.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 08DED6017A;
	Sat,  1 Dec 2018 10:37:08 +0000 (UTC)
Date: Sat, 1 Dec 2018 10:37:08 +0000
From: "Richard W.M. Jones" <rjones@redhat.com>
To: Eric Blake <eblake@redhat.com>
Message-ID: <20181201103708.GH27120@redhat.com>
References: <20181130220344.3350618-1-eblake@redhat.com>
	<20181130220344.3350618-9-eblake@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181130220344.3350618-9-eblake@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Sat, 01 Dec 2018 10:37:12 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 08/14] nbd/client: Refactor
 nbd_receive_list()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: nsoffer@redhat.com, vsementsov@virtuozzo.com, jsnow@redhat.com,
	qemu-devel@nongnu.org, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, Nov 30, 2018 at 04:03:37PM -0600, Eric Blake wrote:
> Add some parameters to make this function reusable in upcoming
> export listing, where we will want to capture the name and
> description rather than compare against a user-supplied name.
> No change in semantics to the existing caller.
>=20
> Signed-off-by: Eric Blake <eblake@redhat.com>
> ---
>  nbd/client.c | 66 +++++++++++++++++++++++++++++++++++++---------------
>  1 file changed, 47 insertions(+), 19 deletions(-)
>=20
> diff --git a/nbd/client.c b/nbd/client.c
> index 1dc8f83e19a..27785c55d0a 100644
> --- a/nbd/client.c
> +++ b/nbd/client.c
> @@ -232,18 +232,21 @@ static int nbd_handle_reply_err(QIOChannel *ioc, =
NBDOptionReply *reply,
>      return result;
>  }
>=20
> -/* Process another portion of the NBD_OPT_LIST reply.  Set *@match if
> - * the current reply matches @want or if the server does not support
> - * NBD_OPT_LIST, otherwise leave @match alone.  Return 0 if iteration
> - * is complete, positive if more replies are expected, or negative
> - * with @errp set if an unrecoverable error occurred. */
> +/* Process another portion of the NBD_OPT_LIST reply.  If @want, then
> + * set *@match if the current reply matches @want or if the server
> + * does not support NBD_OPT_LIST, otherwise leave @match alone.
> + * Otherwise, @nameout and @description are malloc'd to contain
> + * NUL-terminated copies of the reply.  Return 0 if iteration is
> + * complete, positive if more replies are expected, or negative with
> + * @errp set if an unrecoverable error occurred. */
>  static int nbd_receive_list(QIOChannel *ioc, const char *want, bool *m=
atch,
> -                            Error **errp)
> +                            char **nameout, char **description, Error =
**errp)
>  {
>      NBDOptionReply reply;
>      uint32_t len;
>      uint32_t namelen;
> -    char name[NBD_MAX_NAME_SIZE + 1];
> +    char array[NBD_MAX_NAME_SIZE + 1];
> +    char *name =3D array;
>      int error;
>=20
>      if (nbd_receive_option_reply(ioc, NBD_OPT_LIST, &reply, errp) < 0)=
 {
> @@ -253,7 +256,12 @@ static int nbd_receive_list(QIOChannel *ioc, const=
 char *want, bool *match,
>      if (error <=3D 0) {
>          /* The server did not support NBD_OPT_LIST, so set *match on
>           * the assumption that any name will be accepted.  */
> -        *match =3D true;
> +        if (want) {
> +            *match =3D true;
> +        } else if (!error) {
> +            error_setg(errp, "Server does not support export lists");
> +            error =3D -1;
> +        }
>          return error;
>      }
>      len =3D reply.length;
> @@ -290,30 +298,49 @@ static int nbd_receive_list(QIOChannel *ioc, cons=
t char *want, bool *match,
>          nbd_send_opt_abort(ioc);
>          return -1;
>      }
> -    if (namelen !=3D strlen(want)) {
> -        if (nbd_drop(ioc, len, errp) < 0) {
> -            error_prepend(errp,
> -                          "failed to skip export name with wrong lengt=
h: ");
> -            nbd_send_opt_abort(ioc);
> -            return -1;
> +    if (want) {
> +        if (namelen !=3D strlen(want)) {
> +            if (nbd_drop(ioc, len, errp) < 0) {
> +                error_prepend(errp,
> +                              "failed to skip export name with wrong l=
ength: ");
> +                nbd_send_opt_abort(ioc);
> +                return -1;
> +            }
> +            return 1;
>          }
> -        return 1;
> +        assert(namelen < sizeof(array));
> +    } else {
> +        assert(nameout);
> +        *nameout =3D name =3D g_new(char, namelen + 1);
>      }
>=20
> -    assert(namelen < sizeof(name));
>      if (nbd_read(ioc, name, namelen, errp) < 0) {
>          error_prepend(errp, "failed to read export name: ");
>          nbd_send_opt_abort(ioc);
> +        if (!want) {
> +            free(name);
> +        }
>          return -1;
>      }
>      name[namelen] =3D '\0';
>      len -=3D namelen;
> -    if (nbd_drop(ioc, len, errp) < 0) {
> +    if (!want) {
> +        assert(description);
> +        *description =3D g_new(char, len + 1);
> +        if (nbd_read(ioc, *description, len, errp) < 0) {
> +            error_prepend(errp, "failed to read export description: ")=
;
> +            nbd_send_opt_abort(ioc);
> +            free(name);
> +            free(*description);
> +            return -1;
> +        }
> +        (*description)[len] =3D '\0';
> +    } else if (nbd_drop(ioc, len, errp) < 0) {
>          error_prepend(errp, "failed to read export description: ");
>          nbd_send_opt_abort(ioc);
>          return -1;
>      }
> -    if (!strcmp(name, want)) {
> +    if (want && !strcmp(name, want)) {
>          *match =3D true;
>      }
>      return 1;
> @@ -498,7 +525,8 @@ static int nbd_receive_query_exports(QIOChannel *io=
c,
>      }
>=20
>      while (1) {
> -        int ret =3D nbd_receive_list(ioc, wantname, &foundExport, errp=
);
> +        int ret =3D nbd_receive_list(ioc, wantname, &foundExport,
> +                                   NULL, NULL, errp);
>=20
>          if (ret < 0) {
>              /* Server gave unexpected reply */

I found this patch a lot easier to review once I started to use the
=E2=80=98git show -w=E2=80=99 option.  The changes look like a reasonable=
 adaptation
of the function, and the only consumer of the function (at this point)
is unaffected, so:

Reviewed-by: Richard W.M. Jones <rjones@redhat.com>

Rich.

--=20
Richard Jones, Virtualization Group, Red Hat http://people.redhat.com/~rj=
ones
Read my programming and virtualization blog: http://rwmj.wordpress.com
Fedora Windows cross-compiler. Compile Windows programs, test, and
build Windows installers. Over 100 libraries supported.
http://fedoraproject.org/wiki/MinGW

