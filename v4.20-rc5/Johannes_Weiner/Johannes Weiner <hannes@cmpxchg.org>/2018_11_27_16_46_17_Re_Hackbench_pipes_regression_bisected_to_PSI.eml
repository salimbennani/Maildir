Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:47:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4670E5803C2;
	Tue, 27 Nov 2018 08:46:26 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 08:46:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Am9B7WheMcZLRTVjxCzog1VMwlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+bRSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+SyzKnI1zrDafVW1inm6IPVch8uv/CMXbRufsrL1EIiEAPFgU+W?=
 =?us-ascii?q?qYzjITyVzf8AvHSe7+p4WuOgl24nqw5rrjio3McshZDEi4QIwV7H7SV02Jg5Kc?=
 =?us-ascii?q?G8RUJhfNKpHoVcuzuHO4Z1Xs8uWWBltSQixrEYuJO3YjQGxZE6yxLDdvOKdpSH?=
 =?us-ascii?q?7g7nWeqMJDp0mm5pdK66ihu38UWtz+nxWdK23VtIqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3T9O5ELl4ulabBKJ4u3KQwlpwNvkTHBCP2n1/2jKCOekUl/Oin?=
 =?us-ascii?q?9fjnb634qpOAM4J4kBzyP6owlsClHOg1MRQCU3Ka9Om+zLHj+Ff2QLROjv04iK?=
 =?us-ascii?q?nZt5XaKNwfpq64BQ9Vz4ki5w+8Dzi4ytQYm2cILFZcdBKAgYnpPU/BIOrjAPeh?=
 =?us-ascii?q?jFSjji1ry+rFPrL/GJXNKGbMkLP7cbZ68U5cxxI/zcpD6JJMFrEBPPXzV1f1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhm0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0l7eb0?=
 =?us-ascii?q?jXAlgV8dYbWp3ZwPZXC4BPtmIlmZbmDrgtsbEWcKoxAxTOrliFCZVT5TZnCyX7?=
 =?us-ascii?q?8z5z0hCYKmC5vDSZ6pgLCbwCi7GZhWbHhcCl+QCXfoa5mEW/AUZSKQJc9ujCYI?=
 =?us-ascii?q?VbumS48n0xGusxT3y75mLurS5y0Zuojv1Nlz5+3Pix4y8SZ4ANia02GIV2t0hH?=
 =?us-ascii?q?8HRycq3KBjpkxw0k2M0bN4g/xfFtxf/elJXR04NZPHy+x6CtbyWh/Of9uTSVam?=
 =?us-ascii?q?RMmmDi81Tt4r39AOZEN9Ec24jh/fxyqqH6MVl7uTCZw36K3c2WL9J8J8y3nc0q?=
 =?us-ascii?q?khgEIrQs9ONW2gm65++BLfB4/Pk0WFiamqcb4Q0zLK9GeG1WCOpl1XUBZsUaXZ?=
 =?us-ascii?q?WnASflbZos7n5kzcVbOuCa4oMg1aycGcLKtGbdnpjVZDRPfnI9neZ2Oxm2GtBR?=
 =?us-ascii?q?eH3L+MbYzqe3kD0yXZEkQLjwcT/XOePwgkGiihu37eDCBpFV/3fkzj6/d+p22h?=
 =?us-ascii?q?Qk801Q6KaVZh2KSz+hMOgfycSvUT3q8LuSs7qjV0Gkq90MzSC9aauwVhe6Bca8?=
 =?us-ascii?q?sn4FhbzWLZqxB9Ppu4IqB+h14edgN3v1/u1xR3EIlAjdImrHQwzAp2KKKY1lxB?=
 =?us-ascii?q?eiic3ZDxPL3XN2bz8Aqua67QxlHRztKW9r0T5/Q/rlXppBupGVY683V7z9lV1G?=
 =?us-ascii?q?OR6Y/ODAUMXpP+TEY2+wJhqLHHfyYy/YXU1X5rMamqqTLC39MpBO04yhevZdtf?=
 =?us-ascii?q?MaWEFBPsHM0eHcShNOsqm12xZBIeIO9S7LI0P9+hd/ae2K+rIfxsky68gWVG4I?=
 =?us-ascii?q?ByyESM9yVnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtWtxtV/m5HiQWRY+0OkB18c3s+mZwCSb13k0QJMz0sXpWGoljWizz?=
 =?us-ascii?q?xzlTEkta6f3C3Iw+T/exsLIG9LRG9+jVjyJYi4lcwVXE+tbwIxjhuq+V76x7RH?=
 =?us-ascii?q?pKR4N2TSQUZIczL2Lm14Sauwq7yCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUecNqyhfF59zcRvlR0iAdRCZiijnXBVm8?=
 =?us-ascii?q?P9+38tWSjJrDtuG+V2S8VpxcayXrzIWAtDel6m1uGxGwg/ezmtj/GwggzSD7z8?=
 =?us-ascii?q?VqVTnPrBvkYojkzaO6PfhlfklpAl/x8M56GoB4kosti5Acw3kahpOJ/XUZlWf/?=
 =?us-ascii?q?K8lU2aX7bHAVXz4E38bV4BT52E1kNn+JxJj2VnSHzsthetm1eGUW2i0m4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTplxSJ?=
 =?us-ascii?q?7NCxtr9bZWixfriryEpxg8qhA6qcrQFGV3b0YZMiHS527sViP1PAynzz6of4eN?=
 =?us-ascii?q?bOadIfrAGbkxDFj+JNMpI+iuIKhTZ7OWL6pXAl1+k7jRl00ZC7poeHLXht/Lmi?=
 =?us-ascii?q?Ah5ZLTD1Y8IT+jfwjadRhMqW3oavHol/FTUPRpfnUfWoEDcKv/T9KwmOCCE8qm?=
 =?us-ascii?q?ucGbfHBgCQ8kBmr3bSE5yxM3GXOWIUzdFjRBmbOUxejxoYXDQ8np4lCA+qwNbt?=
 =?us-ascii?q?f1t+5jAU/lT4sAdDyvp0NxnjVWfSvAWoZS0xSJeBNxpa9B1C613WMcyD7eJzAi?=
 =?us-ascii?q?dY8Ye6rAGWLmybZgJIDXwGW0CeBlDjOKWu6sfE8+SCGuW+KP7Oa62UqeNCT/eI?=
 =?us-ascii?q?2Y6v0ox+8jeMMcWPI2BiD+Ah1UpFR3x5AMPZmzMASyEMkyLNbsibpAqz+yFtr8?=
 =?us-ascii?q?C/9ujrVxzr5YeVF7RSNtBv8QisgaifL+6QmDp5KTFA25MM23DIybsf3F0Tiy10?=
 =?us-ascii?q?dDmtC7MAtSHTQ6LKh69XFAUWaydyNMtO8qI90RNBOc/ditPpyLF4iuQ5BEtCVV?=
 =?us-ascii?q?zkgsupf9AFI3mhNFPbA0aGLK6JJSDQzMHtf6y9SadcjOFVtxCrvTabEknjPimM?=
 =?us-ascii?q?ljXzVhCvN/1Mgz+fPBBEpI69dRNtA3D5TN36ch27LMN3jTouzL0oh3PKMHQQPi?=
 =?us-ascii?q?Rmf0xRrr2f8yVYj+57G2xA6HplMOaFlzyY7+neNpYZr/9rDj5omOJd5XQw06FV?=
 =?us-ascii?q?4z1cRPxphCvSqcZjolG8nemJzzpnURxOpS5KhYKLp0piP6rZ+4JEWXbF+hIN8G?=
 =?us-ascii?q?qRBw4Lp9tjFt3gpaRQxsLTm6L0LTcRu+7TqO4RA4D7L9iCOXxpZR/mHyTRBQ0t?=
 =?us-ascii?q?UTOgNXregUNAlPiI92GE6J43ts6/toAJT+p5U1w8EPUXEQxaEd0ELY0/CjMtl7?=
 =?us-ascii?q?iWl+YD4GKupxneAsJAscaUBbqpHfzzJWPB3vF/bBwSzOa9dNxLOw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADbc/1bh0O0hNFcCBkBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgVEEAQEBAQELAYEwgjsnjBGMCFABB4E1FIkJjiOBJANPDwE?=
 =?us-ascii?q?BGBMBiHoiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiQTB?=
 =?us-ascii?q?gEBNwEFCQEBCg4DAwECAQklAwwFIAEFARQOEwWDHIF1DQEEmWY8ih2BbDOCdgE?=
 =?us-ascii?q?BBYY9ZwgSil+BHBd4gQeDdS6BQQGDGoNagiaJBVWGP4UoikMKCZElI4lShzmYE?=
 =?us-ascii?q?AYCCQcPIYElgg0zGggoCIMnghsMDAuDSopxIjIBgQEDAQEhE4oOBIJJAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAADbc/1bh0O0hNFcCBkBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgVEEAQEBAQELAYEwgjsnjBGMCFABB4E1FIkJjiOBJANPDwEBGBMBiHoiNAkNA?=
 =?us-ascii?q?QMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiQTBgEBNwEFCQEBCg4?=
 =?us-ascii?q?DAwECAQklAwwFIAEFARQOEwWDHIF1DQEEmWY8ih2BbDOCdgEBBYY9ZwgSil+BH?=
 =?us-ascii?q?Bd4gQeDdS6BQQGDGoNagiaJBVWGP4UoikMKCZElI4lShzmYEAYCCQcPIYElgg0?=
 =?us-ascii?q?zGggoCIMnghsMDAuDSopxIjIBgQEDAQEhE4oOBIJJAQE?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="139772934"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 08:46:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731299AbeK1Dos (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 22:44:48 -0500
Received: from mail-qt1-f195.google.com ([209.85.160.195]:41703 "EHLO
        mail-qt1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726729AbeK1Dos (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 22:44:48 -0500
Received: by mail-qt1-f195.google.com with SMTP id d18so22459576qto.8
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 08:46:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=cmpxchg-org.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=mUxz2xfMPRZjQFT/e0eqLXnH2zHC88BqsCk3X8voHdw=;
        b=njAwbGc2ktVdF9KhQtpS+jLe302Jo4RhrTdfQQQbLDJnMIi68f3mVqY6Gt6Wuarp4g
         pX4nWs5hz6QhcK9mzeFuBNheOGlElXjH9hSwpI2D/ouaDvx9715HjMKygUHpBJckdcM6
         j520xlAQjXPbNGXeOBVBJ9dPVYKFhQm8iTjiqoavCOmNW51YAN5tEwXoNeLPgQYlIcM2
         YzvzFGmAs6hfOdCp6SKdVOu9Wisfbi6ol6LQ6q4qypSXTI1MgA3ppmtLWulG0YNNe1Dc
         w0uIqkiQxFP8ldfh+JD6ZskW3o0p+bOFM8eCO9HD+zh8jwqwXyjSAd1w7vcvYDyenjp+
         yd6A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=mUxz2xfMPRZjQFT/e0eqLXnH2zHC88BqsCk3X8voHdw=;
        b=VYXVntNu6gV3qLqBDUj2d7yv1y4eZqlt/F5TDaxd6ayabXInPfZFcRJEfQyohuwFhi
         S3OxhSFR4iQN3xuThU6GxaE/6jLRjcxAQTbjnUO4y6lYisiTM4nxXChBbLKpYwlvMjmI
         TV83QwO0kzduiz/fEWMsL8Can3zaYr2S23+vTOpbXXaGrmWvdadtYqGwGLhAzNuHaZ+r
         xNg4KqXa1gm3wAk6tJKk/Smg1LdXpG/VmYFDVj7gJiNjwL9FkjTcc31zip8JaSqkG5SZ
         rW5SDLvQIYbwCFpJ6JQCQ3Vdfq3xLlv/uouo1ttSt1rI4BJN8c38WFeA8wgT4j8z7Pxv
         YemQ==
X-Gm-Message-State: AA+aEWZgfAf4YhMcvT/GcrolkKCyB+1gy5Uq69ngypVKf68rvKNID6HR
        ShBdVa5EXbNqR8pi3S9xneM0PA==
X-Google-Smtp-Source: AFSGD/WxHTS5mINEnV3wRkW1YQMOkPBAaMcOWSO7jFpVMMDKwzE3Qkvj3YWQ5fuOGVUPM+NE9SVYfA==
X-Received: by 2002:a0c:cb85:: with SMTP id p5mr31430394qvk.162.1543337178836;
        Tue, 27 Nov 2018 08:46:18 -0800 (PST)
Received: from localhost ([2620:10d:c091:200::5:9b77])
        by smtp.gmail.com with ESMTPSA id t40sm2554132qth.46.2018.11.27.08.46.18
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 27 Nov 2018 08:46:18 -0800 (PST)
Date: Tue, 27 Nov 2018 11:46:17 -0500
From: Johannes Weiner <hannes@cmpxchg.org>
To: Mel Gorman <mgorman@techsingularity.net>
Cc: Tejun Heo <tj@kernel.org>, Peter Zijlstra <peterz@infradead.org>,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        akpm@linux-foundation.org
Subject: Re: Hackbench pipes regression bisected to PSI
Message-ID: <20181127164617.GA29488@cmpxchg.org>
References: <20181126133420.GN23260@techsingularity.net>
 <20181126160724.GA21268@cmpxchg.org>
 <20181126165446.GQ23260@techsingularity.net>
 <20181126173218.GA22640@cmpxchg.org>
 <20181126232926.GS23260@techsingularity.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181126232926.GS23260@techsingularity.net>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Nov 26, 2018 at 11:29:26PM +0000, Mel Gorman wrote:
> The following is a comparision using CONFIG_PSI=n as a baseline against
> your patch and a vanilla kernel
> 
>                          4.20.0-rc4             4.20.0-rc4             4.20.0-rc4
>                 kconfigdisable-v1r1                vanilla        psidisable-v1r1
> Amean     1       1.3100 (   0.00%)      1.3923 (  -6.28%)      1.3427 (  -2.49%)
> Amean     3       3.8860 (   0.00%)      4.1230 *  -6.10%*      3.8860 (  -0.00%)
> Amean     5       6.8847 (   0.00%)      8.0390 * -16.77%*      6.7727 (   1.63%)
> Amean     7       9.9310 (   0.00%)     10.8367 *  -9.12%*      9.9910 (  -0.60%)
> Amean     12     16.6577 (   0.00%)     18.2363 *  -9.48%*     17.1083 (  -2.71%)
> Amean     18     26.5133 (   0.00%)     27.8833 *  -5.17%*     25.7663 (   2.82%)
> Amean     24     34.3003 (   0.00%)     34.6830 (  -1.12%)     32.0450 (   6.58%)
> Amean     30     40.0063 (   0.00%)     40.5800 (  -1.43%)     41.5087 (  -3.76%)
> Amean     32     40.1407 (   0.00%)     41.2273 (  -2.71%)     39.9417 (   0.50%)
> 
> It's showing that the vanilla kernel takes a hit (as the bisection
> indicated it would) and that disabling PSI by default is reasonably
> close in terms of performance for this particular workload on this
> particular machine so;
> 
> Tested-by: Mel Gorman <mgorman@techsingularity.net>

Thanks for testing it. Let's add these results to the changelog:

---

From 347b69a52d1ec7e71df1108cbc5703d6dd0616ba Mon Sep 17 00:00:00 2001
From: Johannes Weiner <hannes@cmpxchg.org>
Date: Mon, 26 Nov 2018 09:39:23 -0500
Subject: [PATCH] psi: make disabling/enabling easier for vendor kernels

Mel Gorman reports a hackbench regression with psi that would prohibit
shipping the suse kernel with it default-enabled, but he'd still like
users to be able to opt in at little to no cost to others.

With the current combination of CONFIG_PSI and the psi_disabled bool
set from the commandline, this is a challenge. Do the following things
to make it easier:

1. Add a config option CONFIG_PSI_DEFAULT_ENABLED that allows distros
   to enable CONFIG_PSI in their kernel, but leaving the feature
   disabled unless a user requests it at boot-time.

   To avoid double negatives, rename psi_disabled= to psi=.

2. Make psi_disabled a static branch to eliminate any branch costs
   when the feature is disabled.

In terms of numbers before and after this patch, Mel says:

: The following is a comparision using CONFIG_PSI=n as a baseline against
: your patch and a vanilla kernel
: 
:                          4.20.0-rc4             4.20.0-rc4             4.20.0-rc4
:                 kconfigdisable-v1r1                vanilla        psidisable-v1r1
: Amean     1       1.3100 (   0.00%)      1.3923 (  -6.28%)      1.3427 (  -2.49%)
: Amean     3       3.8860 (   0.00%)      4.1230 *  -6.10%*      3.8860 (  -0.00%)
: Amean     5       6.8847 (   0.00%)      8.0390 * -16.77%*      6.7727 (   1.63%)
: Amean     7       9.9310 (   0.00%)     10.8367 *  -9.12%*      9.9910 (  -0.60%)
: Amean     12     16.6577 (   0.00%)     18.2363 *  -9.48%*     17.1083 (  -2.71%)
: Amean     18     26.5133 (   0.00%)     27.8833 *  -5.17%*     25.7663 (   2.82%)
: Amean     24     34.3003 (   0.00%)     34.6830 (  -1.12%)     32.0450 (   6.58%)
: Amean     30     40.0063 (   0.00%)     40.5800 (  -1.43%)     41.5087 (  -3.76%)
: Amean     32     40.1407 (   0.00%)     41.2273 (  -2.71%)     39.9417 (   0.50%)
: 
: It's showing that the vanilla kernel takes a hit (as the bisection
: indicated it would) and that disabling PSI by default is reasonably
: close in terms of performance for this particular workload on this
: particular machine so;

Tested-by: Mel Gorman <mgorman@techsingularity.net>
Reported-by: Mel Gorman <mgorman@techsingularity.net>
Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
---
 .../admin-guide/kernel-parameters.txt         |  4 +++
 include/linux/psi.h                           |  3 +-
 init/Kconfig                                  |  9 ++++++
 kernel/sched/psi.c                            | 30 +++++++++++++------
 kernel/sched/stats.h                          |  8 ++---
 5 files changed, 40 insertions(+), 14 deletions(-)

diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index 19f4423e70d9..8760a343c6d8 100644
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@ -3504,6 +3504,10 @@
 			before loading.
 			See Documentation/blockdev/ramdisk.txt.
 
+	psi=		[KNL] Enable or disable pressure stall information
+			tracking.
+			Format: <bool>
+
 	psmouse.proto=	[HW,MOUSE] Highest PS2 mouse protocol extension to
 			probe for; one of (bare|imps|exps|lifebook|any).
 	psmouse.rate=	[HW,MOUSE] Set desired mouse report rate, in reports
diff --git a/include/linux/psi.h b/include/linux/psi.h
index 8e0725aac0aa..7006008d5b72 100644
--- a/include/linux/psi.h
+++ b/include/linux/psi.h
@@ -1,6 +1,7 @@
 #ifndef _LINUX_PSI_H
 #define _LINUX_PSI_H
 
+#include <linux/jump_label.h>
 #include <linux/psi_types.h>
 #include <linux/sched.h>
 
@@ -9,7 +10,7 @@ struct css_set;
 
 #ifdef CONFIG_PSI
 
-extern bool psi_disabled;
+extern struct static_key_false psi_disabled;
 
 void psi_init(void);
 
diff --git a/init/Kconfig b/init/Kconfig
index a4112e95724a..cf5b5a0dcbc2 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -509,6 +509,15 @@ config PSI
 
 	  Say N if unsure.
 
+config PSI_DEFAULT_DISABLED
+	bool "Require boot parameter to enable pressure stall information tracking"
+	default n
+	depends on PSI
+	help
+	  If set, pressure stall information tracking will be disabled
+	  per default but can be enabled through passing psi_enable=1
+	  on the kernel commandline during boot.
+
 endmenu # "CPU/Task time and stats accounting"
 
 config CPU_ISOLATION
diff --git a/kernel/sched/psi.c b/kernel/sched/psi.c
index 3d7355d7c3e3..fe24de3fbc93 100644
--- a/kernel/sched/psi.c
+++ b/kernel/sched/psi.c
@@ -136,8 +136,18 @@
 
 static int psi_bug __read_mostly;
 
-bool psi_disabled __read_mostly;
-core_param(psi_disabled, psi_disabled, bool, 0644);
+DEFINE_STATIC_KEY_FALSE(psi_disabled);
+
+#ifdef CONFIG_PSI_DEFAULT_DISABLED
+bool psi_enable;
+#else
+bool psi_enable = true;
+#endif
+static int __init setup_psi(char *str)
+{
+	return kstrtobool(str, &psi_enable) == 0;
+}
+__setup("psi=", setup_psi);
 
 /* Running averages - we need to be higher-res than loadavg */
 #define PSI_FREQ	(2*HZ+1)	/* 2 sec intervals */
@@ -169,8 +179,10 @@ static void group_init(struct psi_group *group)
 
 void __init psi_init(void)
 {
-	if (psi_disabled)
+	if (!psi_enable) {
+		static_branch_enable(&psi_disabled);
 		return;
+	}
 
 	psi_period = jiffies_to_nsecs(PSI_FREQ);
 	group_init(&psi_system);
@@ -549,7 +561,7 @@ void psi_memstall_enter(unsigned long *flags)
 	struct rq_flags rf;
 	struct rq *rq;
 
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 
 	*flags = current->flags & PF_MEMSTALL;
@@ -579,7 +591,7 @@ void psi_memstall_leave(unsigned long *flags)
 	struct rq_flags rf;
 	struct rq *rq;
 
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 
 	if (*flags)
@@ -600,7 +612,7 @@ void psi_memstall_leave(unsigned long *flags)
 #ifdef CONFIG_CGROUPS
 int psi_cgroup_alloc(struct cgroup *cgroup)
 {
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return 0;
 
 	cgroup->psi.pcpu = alloc_percpu(struct psi_group_cpu);
@@ -612,7 +624,7 @@ int psi_cgroup_alloc(struct cgroup *cgroup)
 
 void psi_cgroup_free(struct cgroup *cgroup)
 {
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 
 	cancel_delayed_work_sync(&cgroup->psi.clock_work);
@@ -637,7 +649,7 @@ void cgroup_move_task(struct task_struct *task, struct css_set *to)
 	struct rq_flags rf;
 	struct rq *rq;
 
-	if (psi_disabled) {
+	if (static_branch_likely(&psi_disabled)) {
 		/*
 		 * Lame to do this here, but the scheduler cannot be locked
 		 * from the outside, so we move cgroups from inside sched/.
@@ -673,7 +685,7 @@ int psi_show(struct seq_file *m, struct psi_group *group, enum psi_res res)
 {
 	int full;
 
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return -EOPNOTSUPP;
 
 	update_stats(group);
diff --git a/kernel/sched/stats.h b/kernel/sched/stats.h
index 4904c4677000..aa0de240fb41 100644
--- a/kernel/sched/stats.h
+++ b/kernel/sched/stats.h
@@ -66,7 +66,7 @@ static inline void psi_enqueue(struct task_struct *p, bool wakeup)
 {
 	int clear = 0, set = TSK_RUNNING;
 
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 
 	if (!wakeup || p->sched_psi_wake_requeue) {
@@ -86,7 +86,7 @@ static inline void psi_dequeue(struct task_struct *p, bool sleep)
 {
 	int clear = TSK_RUNNING, set = 0;
 
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 
 	if (!sleep) {
@@ -102,7 +102,7 @@ static inline void psi_dequeue(struct task_struct *p, bool sleep)
 
 static inline void psi_ttwu_dequeue(struct task_struct *p)
 {
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 	/*
 	 * Is the task being migrated during a wakeup? Make sure to
@@ -128,7 +128,7 @@ static inline void psi_ttwu_dequeue(struct task_struct *p)
 
 static inline void psi_task_tick(struct rq *rq)
 {
-	if (psi_disabled)
+	if (static_branch_likely(&psi_disabled))
 		return;
 
 	if (unlikely(rq->curr->flags & PF_MEMSTALL))
-- 
2.19.1

