Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 08:42:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E439A58014B;
	Sun,  2 Dec 2018 15:11:29 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 02 Dec 2018 15:11:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0zupVRwOclJgh9DXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4VKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOSM3/m/UjcJ/jqxbrx29qBx+2I7UeIOYOeFifq/BZ94WWXBMUtpNWyFHH4iy?=
 =?us-ascii?q?b5EPD+0EPetAsofyvV8OrRq6BQKxA+3g1D9IhmPs0qYn1OkhChvJ3AghH9IKqn?=
 =?us-ascii?q?jUqcv6NKcOUe+v16TIzSjDYOlY2Djj6YjEaAwuofaJXb9pd8fa1EohFxvdg1mO?=
 =?us-ascii?q?tYDoOymZ2vkDvmSF9eZsSOGih3I9pwxwoDWj3toghpXTio8ayF3I7yF0zJovKd?=
 =?us-ascii?q?GlSEN2YMaoHZRQui2AKYd7TccvT3t2tCon1LEKo5C2cSgMxZ863RDQceaHfJKN?=
 =?us-ascii?q?4h/7VOaePzN4hHV9dbKhiBa971Kgxvf/VsaqylZKqDRKkt3WunAKzRzT5dCLSv?=
 =?us-ascii?q?p7/ki/xTaCzx7f5v1ALEwuiKbWJYAtzqQtmpcQrUjPBC77lUfugK+TbEok++yo?=
 =?us-ascii?q?6+r9YrXho5+RL4t0igD4MqQzlc2zGOc4PRYUX2id5+u80KTv/Ur3QbVMkPI2iL?=
 =?us-ascii?q?LUsI7VJcsFvK61GQxV3Zg56xa5ETim1M4UnX4dLFJKYB6HlZTmO0nSIPDkCvey?=
 =?us-ascii?q?m1CskDZox//YJLHgDYjNI2PHkLfge7Z99kFdxBAyzdBZ+5JbFLUBLOjvVU/2sd?=
 =?us-ascii?q?zSFgU5PBCsw+b7FNV90ZsTWWKVDa+YLKPdq1iI6vgvI+mRfoAVvjn9JuMh5/7v?=
 =?us-ascii?q?i385hFAccbOo3ZsRdHC3APBmL1+Fbnrrh9cLCX0KsRYmTOz2lF2CViZeZ3S1X6?=
 =?us-ascii?q?0i/D07C4WmDYHFRoCqm7GB2Ca7HptLZmFJEFyMEHHod5maVPcIci6dPshhkjkc?=
 =?us-ascii?q?X7i7V4AhzQ2utBP9y7d/NOXU4S0YtZXg1NRv/e3cjxMy+CdwD8Sc1WGNUm51kn?=
 =?us-ascii?q?kJRz8wwKBwv0h9xk2f3qh/hvxSDcZT6O9RUgcmKZ7cyPR3C9PoVQLHZNuJTFem?=
 =?us-ascii?q?Tc+gATE+Vd8xx94OY0BgG9StlBzD3iyqA6MLmLyPHpA77qXc333pLcZn13nGzL?=
 =?us-ascii?q?Uhj0UhQsZXKGKpnLB/+BbJC47JiUqZkb2qeroa3CLK8GeDzm+OvEVDXQ50UKXF?=
 =?us-ascii?q?W20fZ0TModT44EPCU6GhCbA9PgRdzs6CL7NAasf1glVeWPfjJNPebnqslGiqGx?=
 =?us-ascii?q?aH2KmAbIrwdGUbxyXSFk4EnhsX/XaHMwg+Gyigr3jfDDxoCVLgfUfs/fNip3O8?=
 =?us-ascii?q?S08+1xuKYFF517qp5h4VguSRS+8S3rIBvychtzV0HVan09LKEdaAoBBhfKFdYd?=
 =?us-ascii?q?M771dKzmbZtw17Ppy9IKFunF8ecwJrv0zw0xV7EJlPkc8vrHky1gp9NbqY0E9d?=
 =?us-ascii?q?dzOfxZ3/ILnXJXf9/R+xa6/awErR0MuL9agV7vQ4qFLjvB+yG0om8nVn1cRV0n?=
 =?us-ascii?q?SG6pXLCgoSTYz+UkIt+xdmoLHaZzE355nI2n10Lam0rjjC1sopBes40BqvY81T?=
 =?us-ascii?q?MaKEFADoFc0aCNOjKOgrm1ivcxIFM/pe9K8yP8O6afSG3LSnM/pnnDKjlW5H+p?=
 =?us-ascii?q?xy0lqQ9ypgTe7Fx4wFw/CE0QSdTTfzkVChvtrxmY9afzESH3OzxjT+C45Ve6J9?=
 =?us-ascii?q?Y5wLCWCoI8CswtV+hpjtW2NX9VK5BlMG3tOpdgSWb1DnwQJQ0kEXq2S9mSSk1z?=
 =?us-ascii?q?x0jy0prq2H0S3OwuTubhoGNnRQRGl/i1fhOoy0j9EcXEi1YAkljhql5UDmx6dF?=
 =?us-ascii?q?oKRzNXXcQUBNfyLuNWFtTrOwtqaeY85I8J4osz9YUP6/YVCZTb7xuQAa3DngH2?=
 =?us-ascii?q?tdxTA7cS+lupPikhx+iWKdKmtzrXXDdcFxwxff+MLTRfpL0jUaQyl4jCHdBkKg?=
 =?us-ascii?q?MNmx4dWUi5DDv/i+Vm27UZ1fayvrzYKGtCag4W1qABu/n+28m9H9EAg61zP72M?=
 =?us-ascii?q?duVSnSsBn8ZYzr3bygMe17ZkloGEP8681iF4F9iIQwhYsc2XgHhpqP+3oHnnz+?=
 =?us-ascii?q?MdFa2aL4cXoMSiQHw9/T4Aj5xkJjKmiFyJ7+VnWY2sFhfcW1YnsK2iIh6MBHEK?=
 =?us-ascii?q?KU7L1HnSRvuFa5oxzeYeNhnjgD0/sh82AVg/sGuAc2yiWdA7YSHVRXPCD2lhSI?=
 =?us-ascii?q?6cy+o7tTZGq1bbew009+l8i7DL6eugFcRGr5epA6EC9s6cV/NUjA0Xzp5YHiZd?=
 =?us-ascii?q?nQdskTthyPnhfEjuhVLo8xl/UQiSpmP2L9oWMqy+ohgRNy2pG6uZCNK39x86Kh?=
 =?us-ascii?q?Hh5YKjr1atsI9T73iqZemtuW05qrHpV8ATgLWJroTfS1EDMdr/jnNgCOECEipX?=
 =?us-ascii?q?efA7bQAQif6EJ+pXLVD5+rL22XJGUezdh6RhmSPklfjx4PXDkggp41DAOqxNHi?=
 =?us-ascii?q?cEdk4DAe/EX4pwBIyuJpMRn/T2jeqB2pajcyVJiQMh5W4hte6EfSNMyU9vhzED?=
 =?us-ascii?q?1A/p29sAyNLXSWZgRPDWEUQ0yEGkrsPr+06dnb9OiYAOW+IuDKYbWPr+xeSviJ?=
 =?us-ascii?q?yYiu0otg4zaDKMGPMmN+AP0830pJRWp5FNjBmzUTVywXkDrAb86Fqxe9+S13rc?=
 =?us-ascii?q?G//O7oWAL14ouPBKVdMc9y+xCtmqqDM++QhCBkKTdXzJ8MxHnIyKQB014WkS1h?=
 =?us-ascii?q?az6tEbEYvy7XUK3QgrNXDwIcay5rLsRI8rkz3hNTNs/bkN/10r94g+UxC1dEU1?=
 =?us-ascii?q?zhh86oadYLI2G7KFPIGkKLOK6aKj3MxsH9ebm8RqFIjOVIqx2wvi6WE1PiPjSG?=
 =?us-ascii?q?jTXmSwqjPv1MjC6FOhxTo4W9chdrCWj+Q9PqcBy7MNlrjTIoxb04nG/FNWkZMT?=
 =?us-ascii?q?JkaUNCsqWQ7T9EgvV4A2FA7mBqLe+BmyaY6enXMpcXsftxDSRymOJX+3A6y7pT?=
 =?us-ascii?q?7CFZS/15girSrthyo164lumD0CZoUB1LqmUDuIXe6UlrJ6jc3pVJR3vB+BUD8S?=
 =?us-ascii?q?OWBghc9PV/Ddi6gKlUy9yHsa/zND4Kp8nd+coYQc3ZKN6OGHo8OAXkGXjfCw5T?=
 =?us-ascii?q?Hm3jDn3Wm0EIyKLazXaStJVv8pU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAABdZgRch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCowHjAmCDRSXNIFzLBMBh3YiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+CNiKCZQMDAQIkTQUGCQEBHzEDVAYOBQWDHIICBaMeM4oeh22EL4FXP?=
 =?us-ascii?q?45/AokmBoFzhVuPRgcCgh8Ejw4LGJEmmjOCDTMaI4M8gicXjh0/AQExgQQBAQE?=
 =?us-ascii?q?Oi2iBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAABdZgRch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCowHjAmCDRSXNIFzLBMBh3YiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNiKCZ?=
 =?us-ascii?q?QMDAQIkTQUGCQEBHzEDVAYOBQWDHIICBaMeM4oeh22EL4FXP45/AokmBoFzhVu?=
 =?us-ascii?q?PRgcCgh8Ejw4LGJEmmjOCDTMaI4M8gicXjh0/AQExgQQBAQEOi2iBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,308,1539673200"; 
   d="scan'208";a="54602679"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 15:11:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725910AbeLBXLW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 2 Dec 2018 18:11:22 -0500
Received: from szxga07-in.huawei.com ([45.249.212.35]:52072 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725825AbeLBXLW (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 2 Dec 2018 18:11:22 -0500
Received: from DGGEMS403-HUB.china.huawei.com (unknown [172.30.72.60])
        by Forcepoint Email with ESMTP id 2C24E1FFDE532;
        Mon,  3 Dec 2018 07:11:18 +0800 (CST)
Received: from S00293818-DELL1.china.huawei.com (10.47.90.156) by
 DGGEMS403-HUB.china.huawei.com (10.3.19.203) with Microsoft SMTP Server id
 14.3.408.0; Mon, 3 Dec 2018 07:11:11 +0800
From: Salil Mehta <salil.mehta@huawei.com>
To: <davem@davemloft.net>
CC: <salil.mehta@huawei.com>, <yisen.zhuang@huawei.com>,
        <lipeng321@huawei.com>, <mehta.salil@opnsrc.net>,
        <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <linuxarm@huawei.com>, liuzhongzhu <liuzhongzhu@huawei.com>
Subject: [RFC net-next 3/9] net: hns3: Add "port vlan table" information query function
Date: Sun, 2 Dec 2018 23:09:27 +0000
Message-ID: <20181202230933.15560-4-salil.mehta@huawei.com>
X-Mailer: git-send-email 2.8.3
In-Reply-To: <20181202230933.15560-1-salil.mehta@huawei.com>
References: <20181202230933.15560-1-salil.mehta@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.47.90.156]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: liuzhongzhu <liuzhongzhu@huawei.com>

This patch prints port vlan table information.

debugfs command:
echo dump port vlan tbl > cmd

Sample Command:
root@(none)# echo dump port vlan tbl > cmd
 vlan | port filter bitMap:
 0000 | 00000000:00000000:00000000:00000000:00000000:00000001
root@(none)#

Signed-off-by: liuzhongzhu <liuzhongzhu@huawei.com>
Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
---
 drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c |  1 +
 .../ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c | 80 ++++++++++++++++++++++
 .../ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.h |  3 +
 3 files changed, 84 insertions(+)

diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c b/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
index e59591b1258b..51af55f34e55 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
@@ -211,6 +211,7 @@ static void hns3_dbg_help(struct hnae3_handle *h)
 	dev_info(&h->pdev->dev, "dump qos pri map\n");
 	dev_info(&h->pdev->dev, "dump qos buf cfg\n");
 	dev_info(&h->pdev->dev, "dump mac tbl\n");
+	dev_info(&h->pdev->dev, "dump port vlan tbl\n");
 }
 
 static ssize_t hns3_dbg_cmd_read(struct file *filp, char __user *buffer,
diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
index 19b76f5e93d7..4a034a59fcb2 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
@@ -530,6 +530,84 @@ static void hclge_dbg_dump_mac_table(struct hclge_dev *hdev)
 	kfree(mc_mac_tbl);
 }
 
+static void hclge_dbg_dump_port_vlan_table(struct hclge_dev *hdev)
+{
+	struct hclge_vlan_filter_pf_cfg_cmd *req;
+	char printf_buf[HCLGE_DBG_BUF_LEN];
+	struct hclge_desc desc;
+	u32 *vlan_bitmap;
+	u8 vlan_byte_val;
+	u8 vlan_offset;
+	u8 vlan_byte;
+	int vlan_len;
+	u32 vlan_id;
+	int ret, i;
+	bool flag;
+
+	vlan_len = HCLGE_DBG_VLAN_ID_MAX / 8;
+	vlan_bitmap = kzalloc(vlan_len, GFP_KERNEL);
+	if (!vlan_bitmap) {
+		dev_err(&hdev->pdev->dev,
+			"port vlan table alloc memory failed\n");
+		return;
+	}
+
+	for (vlan_id = 0; vlan_id < HCLGE_DBG_VLAN_ID_MAX; vlan_id++) {
+		/* Prevent long-term occupation of the command channel. */
+		if ((vlan_id % 100) == 0)
+			msleep(100);
+
+		hclge_cmd_setup_basic_desc(&desc,
+					   HCLGE_OPC_VLAN_FILTER_PF_CFG, true);
+
+		vlan_offset = vlan_id / 160;
+		vlan_byte = (vlan_id % 160) / 8;
+		vlan_byte_val = 1 << (vlan_id % 8);
+
+		req = (struct hclge_vlan_filter_pf_cfg_cmd *)desc.data;
+		req->vlan_offset = vlan_offset;
+		req->vlan_offset_bitmap[vlan_byte] = vlan_byte_val;
+
+		ret = hclge_cmd_send(&hdev->hw, &desc, 1);
+		if (ret) {
+			dev_err(&hdev->pdev->dev,
+				"call hclge_cmd_send fail, ret = %d\n", ret);
+			kfree(vlan_bitmap);
+			return;
+		}
+
+		if (req->vlan_cfg != 0)
+			continue;
+
+		vlan_bitmap[(u32)(vlan_id / 32)] |= 1 << (vlan_id % 32);
+	}
+
+	dev_info(&hdev->pdev->dev, "vlan | port filter bitMap:\n");
+
+	for (vlan_id = 0; vlan_id < HCLGE_DBG_VLAN_ID_MAX / 32;
+	     vlan_id += 8) {
+		memset(printf_buf, 0, HCLGE_DBG_BUF_LEN);
+		snprintf(printf_buf, HCLGE_DBG_BUF_LEN,
+			 "%04d | ", vlan_id * 32);
+		flag = false;
+
+		for (i = 7; i >= 0; i--) {
+			snprintf(printf_buf + strlen(printf_buf),
+				 HCLGE_DBG_BUF_LEN - strlen(printf_buf),
+				 "%08x:", vlan_bitmap[(u32)(vlan_id + i)]);
+
+			if (vlan_bitmap[(u32)(vlan_id + i)] > 0)
+				flag = true;
+		}
+
+		printf_buf[strlen(printf_buf) - 1] = '\n';
+		if (flag)
+			dev_info(&hdev->pdev->dev, "%s", printf_buf);
+	}
+
+	kfree(vlan_bitmap);
+}
+
 static void hclge_dbg_fd_tcam_read(struct hclge_dev *hdev, u8 stage,
 				   bool sel_x, u32 loc)
 {
@@ -603,6 +681,8 @@ int hclge_dbg_run_cmd(struct hnae3_handle *handle, char *cmd_buf)
 		hclge_dbg_dump_qos_buf_cfg(hdev);
 	} else if (strncmp(cmd_buf, "dump mac tbl", 12) == 0) {
 		hclge_dbg_dump_mac_table(hdev);
+	} else if (strncmp(cmd_buf, "dump port vlan tbl", 18) == 0) {
+		hclge_dbg_dump_port_vlan_table(hdev);
 	} else {
 		dev_info(&hdev->pdev->dev, "unknown command\n");
 		return -EINVAL;
diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.h b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.h
index b5a784506b9a..f0c7ad535fcc 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.h
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.h
@@ -14,6 +14,9 @@
 #define HCLGE_DBG_MAC_TBL_E_PORT   0x3FF
 #define HCLGE_DBG_MAC_TBL_E_PORT_B BIT(11)
 
+#define HCLGE_DBG_VLAN_ID_MAX 4096
+#define HCLGE_DBG_MNG_TBL_MAX 64
+
 #pragma pack(1)
 
 struct hclge_qos_pri_map_cmd {
-- 
2.11.0


