Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:20:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 65535580213;
	Fri, 30 Nov 2018 08:27:24 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 08:27:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AISfT8BeIjSzUuFndF9/JVJt/lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YxCN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzL3gotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+SyzKnTzTXIculY2TD86IjNaR8hpu+DXa9+ccHMzkQvFRvFjlKR?=
 =?us-ascii?q?qYzgJDyV0foCvnOB7+V+SO2vi3Qoqx1rrjezwccsj5DEi4QIwV7H7SV02Jg5Kc?=
 =?us-ascii?q?G8RUJhfNKpHoVcuzuHO4Z1Xs8uWWBltSQixrEYpZK2eDIGxIkpyhLBcfCLbouF?=
 =?us-ascii?q?7xz5WOqPIjp1gm9udqiliBao60egz/XxVsmq31ZOqSpIisfMtn8T2BzJ8MSHSe?=
 =?us-ascii?q?Vy/l2n2TmR0wDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7nF/6gLKYe0k64OSk?=
 =?us-ascii?q?9ufqbqn8qpKdNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OS41b3j+1D5QbpTgv01jK?=
 =?us-ascii?q?bZqpbaKtofpqKgBA9U3IAj5AilDzq9ztQYkmcILEhfdBKEkYfpIVfOL+78Dful?=
 =?us-ascii?q?hFSsijhry+jcPrL9GpXNMmTDkLD5cLZ56k5cyxQ8wcpQ5pJJEbwBJPPzWknstN?=
 =?us-ascii?q?3XFBM5Mgq0w/r5B9V5zI8RRWWPAqqBOqPIrVCI/v4vI/WLZIINuDbyMfkl5+L0?=
 =?us-ascii?q?gn8+g1MdfbSp0oERaHC3BflmJ0SZYXzxgtYOC2sKvww+TPD0h12GSzJce3GyX6?=
 =?us-ascii?q?ck7DEhFI2mFZvDRpyqgLGZ3ie7GYNZanpFClCLF3focYKEVuwIaCKTJM9hjzMF?=
 =?us-ascii?q?WaKgS48nyRGhqgv6x6B7IerT/y0SrYjj28Rt5+3PiREy8iR5AN6G02GNSGF0nX?=
 =?us-ascii?q?kERyUs06B9ukF9zlaD0a5lg/1XD9BT5vVJUhskOp7Y1eB1F9fyWgfZdNeTVFmm?=
 =?us-ascii?q?WsmmAS02Tt8pwN8BeUB9F8+mjhDCxSWqBbAVmqePBJw19KLcwnfwK9x8y3bAyK?=
 =?us-ascii?q?kukV0mTtFTOm2hg6517xLTCJLRk0WFi6aqcrwR0zPX+2ed02WCpkFYXxR2UaXe?=
 =?us-ascii?q?Q38fYEzardD65kPHS7+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEULjhoc/WiYOgQkBieuuWTeDCdwGlLpeE7s9eh+qHWm?=
 =?us-ascii?q?Tk471Q2Kbkth16ar9R4Rn/CTV/QT3rccsic7tzp0BEq9387RC9eYuwphfaBcYd?=
 =?us-ascii?q?Qh4FdH1WPVrRB9MoanL6B4gl4ecgJ3v0z12hVzC4VAl9UqrXwwwApzL6KYzE1O?=
 =?us-ascii?q?dzeC0Z/sPb3XL3H4/AqzZK7OxlHezNGW978V5/Q8tVrisx+mF0o4/3p8ztlazm?=
 =?us-ascii?q?GT5pPJDAoVT5L8SUI39xl8p7HHbSgx/YLU1XtwMaaqtj/Owc4mBOwgyhy4ZddQ?=
 =?us-ascii?q?LLuEFBPuE80dH8WvKPEql0K1YR4ePeFS9LQ7P8Wpd/ad3K6rPeBgnC+pjGhd4Y?=
 =?us-ascii?q?B91F6M+DR4SuLSw5kFxPSY1BOdVzjglFehrtz3mYdcaDEIH2qw1TLrBJRMaa11?=
 =?us-ascii?q?Z4oLD3mhI9e2xtlnm5HiQXpY+0O9CFMc38+pfwGfb1j83Q1WyEQWrmarmSq+zz?=
 =?us-ascii?q?xojT4pqrCT0zDJw+TnbBAHIHJERHF+jVfwJoi5l9AbXEmyYwkpjhel/lv6x65A?=
 =?us-ascii?q?qaR7LmnTR1pIfifsI2FjVKuwqqSNY8pV5Jw0tiVXVfy2YUqGRb7lvxsazyTjEn?=
 =?us-ascii?q?NcxD8hbTGquZb5nxtghGKGNnlzr3nZecB2xRjB4tzRXvpR3jsARCllhjjbHFm8?=
 =?us-ascii?q?P9+1/dqKk5fPqPyxV2WkVpdLaynk0ZuAtDen5W1tGRC+n+q8mtr9HQg40C/70c?=
 =?us-ascii?q?JnVSHJrBb6f4nq2L62MeNhfkl0GlD879B2FZ15kos1nJsQw2QVho2J/Xoblmf+?=
 =?us-ascii?q?KdZb1rj/bHYXRT4L3sTa4A7q2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPsr6X4agPsGtBAjzyqDGbASAVdXPTb3mBuW?=
 =?us-ascii?q?9dC+o75aZGKucbi2yUp/ksqtDLCEogFARnn5fo0uEjN37sV6KFjMymH86pn4eN?=
 =?us-ascii?q?nMatIergGUkxDFj+RPKZM+jPwKhTd8OWLmvH0o0Oo7jR1o3ZGns4mLMWRt/KSl?=
 =?us-ascii?q?AhFGMj35fd8c+jbojaxGhMaZw5ivHol9GjUMRJbnVuinEDUWtfT6LQqOFCA8p2?=
 =?us-ascii?q?yfGbreGw+f9Uhno2jOE5CtK3GYOn0Zwc9+SxmaIUxVmBoUUykinp4lCgCqw9Ts?=
 =?us-ascii?q?cEVj6TAU+FH4sQFAyv5yOxn8T2ffpxqoajEuR5iENxdW6gBC50HIMc2R9O5zHi?=
 =?us-ascii?q?dY/oG/owyJMGCUewNIDWQRUEyeG1/jJqWu5cXH8+WABuu+KObOYayTqeNEUfeE?=
 =?us-ascii?q?34mv0oxg/zaDLciPOnhiD/sm2ktMR3x5GsLZmykRRCwTjS7Cc8mbpBKk8C1tss?=
 =?us-ascii?q?+/6OjrWB7o5YaXC7tdL9Rv+xO1gaeCLeKQhzx5KTFX1pwS33/I1aMf0UUWiyFv?=
 =?us-ascii?q?cTmtDLsBuTTMTKLWhq9YERobZzlvO8tP6qI2xhNNNtLDitPpyr54ieY4BE1YVV?=
 =?us-ascii?q?P6gMGme8wLL3u5NFPGH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGpIG9cxNtBXL/Q978dhK7MMF4jTstzL0wh3PKM3McMD?=
 =?us-ascii?q?dmf0NMqL2Q8T1XgvFlF2Nd6XplKPGOmzyF4OnANpYWrfxrDzx0lu1A5nQ6zrpV?=
 =?us-ascii?q?7CdcS/10mCvdtNhuo169n+mLyzpnVgdOqzlRiIKKu0ViJbvW9p1aVXnY+xIN6D?=
 =?us-ascii?q?bYNxNfg9pjF8anh6dK1NHLmLm7fCtF6czd+ccHL8zVLt+XdXQmLBzlESLVCw1D?=
 =?us-ascii?q?SiSkYzLxnUtYxdOV7X3dlp87r5LrlYcAAutZTFs0E/kdB2x/EdACKYsxVTQhx+?=
 =?us-ascii?q?3IxPUU7Gaz+UGCDP5RuYrKA7fLWa3i?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A/AABgZAFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2sng3mId4srgg0UiQuEa4svFhgTAYd2IjcGDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvgjYkAYJiAQIDAQIgVgYJAQEKGAICBSECAgMMLRsGEwUWgwaBd?=
 =?us-ascii?q?Q0FpjGBL4otImmLDxeBQD+EI4gFglcCixyFCpAPCZEsIwqJT4dGLJgxgVyBd00?=
 =?us-ascii?q?jFYMnglCOKiABATGBBQEBHI0tAQE?=
X-IPAS-Result: =?us-ascii?q?A0A/AABgZAFch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?ng3mId4srgg0UiQuEa4svFhgTAYd2IjcGDQEDAQEBAQEBAgETAQEBCA0JCCkvg?=
 =?us-ascii?q?jYkAYJiAQIDAQIgVgYJAQEKGAICBSECAgMMLRsGEwUWgwaBdQ0FpjGBL4otImm?=
 =?us-ascii?q?LDxeBQD+EI4gFglcCixyFCpAPCZEsIwqJT4dGLJgxgVyBd00jFYMnglCOKiABA?=
 =?us-ascii?q?TGBBQEBHI0tAQE?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="54032590"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 08:27:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727166AbeLADhJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 22:37:09 -0500
Received: from mx1.redhat.com ([209.132.183.28]:41002 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726644AbeLADhJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 22:37:09 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id CC202C057E30;
        Fri, 30 Nov 2018 16:27:17 +0000 (UTC)
Received: from treble (ovpn-121-129.rdu2.redhat.com [10.10.121.129])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id D12877FD20;
        Fri, 30 Nov 2018 16:27:15 +0000 (UTC)
Date: Fri, 30 Nov 2018 10:27:13 -0600
From: Josh Poimboeuf <jpoimboe@redhat.com>
To: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Andrew Lutomirski <luto@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>,
        Peter Zijlstra <peterz@infradead.org>,
        the arch/x86 maintainers <x86@kernel.org>,
        Linux List Kernel Mailing <linux-kernel@vger.kernel.org>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Ingo Molnar <mingo@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>, mhiramat@kernel.org,
        jbaron@akamai.com, Jiri Kosina <jkosina@suse.cz>,
        David.Laight@aculab.com, bp@alien8.de, julia@ni.com,
        jeyu@kernel.org, Peter Anvin <hpa@zytor.com>
Subject: Re: [PATCH v2 4/4] x86/static_call: Add inline static call
 implementation for x86-64
Message-ID: <20181130162713.uoeyfau66buntyse@treble>
References: <20181129124404.2fe55dd0@gandalf.local.home>
 <CAHk-=wgnZobye-KNaBVO-SdqX-5Xkz+i=aJ_kOFZ4RpZFT0HqQ@mail.gmail.com>
 <20181129125857.75c55b96@gandalf.local.home>
 <CAHk-=wigLUgxDM6Dq2aS7efduffratP976Ggmpv4Ev4EOrJxyA@mail.gmail.com>
 <20181129134725.6d86ade6@gandalf.local.home>
 <CAHk-=wgbnQs4fpuHqT1jLkDnKcvTGS5EN8m=qy7oUE5n_fhOig@mail.gmail.com>
 <CAHk-=wjN=sow0F-UtA6DtHHT_CNUV7wYVe3cQ4E8GPp4LN32+Q@mail.gmail.com>
 <CALCETrVzFk2Yv8q54Xh6qOb45AKKrQhD5OkAuTsw9HaR3Wvy4Q@mail.gmail.com>
 <20181129202452.56f4j2wdct6qbaqo@treble>
 <CAHk-=wiO87jDPP8FZ7EfwfbFNQRdr64Pa+g33do7tKiTFYz8BA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <CAHk-=wiO87jDPP8FZ7EfwfbFNQRdr64Pa+g33do7tKiTFYz8BA@mail.gmail.com>
User-Agent: NeoMutt/20180716
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.31]); Fri, 30 Nov 2018 16:27:18 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 03:04:20PM -0800, Linus Torvalds wrote:
> On Thu, Nov 29, 2018 at 12:25 PM Josh Poimboeuf <jpoimboe@redhat.com> wrote:
> >
> > On Thu, Nov 29, 2018 at 11:27:00AM -0800, Andy Lutomirski wrote:
> > >
> > > I propose a different solution:
> > >
> > > As in this patch set, we have a direct and an indirect version.  The
> > > indirect version remains exactly the same as in this patch set.  The
> > > direct version just only does the patching when all seems well: the
> > > call instruction needs to be 0xe8, and we only do it when the thing
> > > doesn't cross a cache line.  Does that work?  In the rare case where
> > > the compiler generates something other than 0xe8 or crosses a cache
> > > line, then the thing just remains as a call to the out of line jmp
> > > trampoline.  Does that seem reasonable?  It's a very minor change to
> > > the patch set.
> >
> > Maybe that would be ok.  If my math is right, we would use the
> > out-of-line version almost 5% of the time due to cache misalignment of
> > the address.
> 
> Note that I don't think cache-line alignment is necessarily sufficient.
> 
> The I$ fetch from the cacheline can happen in smaller chunks, because
> the bus between the I$ and the instruction decode isn't a full
> cacheline (well, it is _now_ in modern big cores, but it hasn't always
> been).
> 
> So even if the cacheline is updated atomically, I could imagine seeing
> a partial fetch from the I$ (old values) and then a second partial
> fetch (new values).
> 
> It would be interesting to know what the exact fetch rules are.

I've been doing  some cross-modifying code experiments on Nehalem, with
one CPU writing call destinations while the other CPUs are executing
them.  Reliably, one of the readers goes off into the weeds within a few
seconds.

The writing was done with just text_poke(), no #BP.

I wasn't able to figure out the pattern in the addresses of the
corrupted call sites.  It wasn't cache line.

That was on Nehalem.  Skylake didn't crash at all.

-- 
Josh
