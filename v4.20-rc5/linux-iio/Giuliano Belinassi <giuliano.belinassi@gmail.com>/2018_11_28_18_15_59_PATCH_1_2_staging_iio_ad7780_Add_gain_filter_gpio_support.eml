Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:39:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6DD4D5802E4;
	Wed, 28 Nov 2018 10:19:19 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 10:19:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6X3gshHE+CXeA0Znu4NtaZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75ocq7bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA5/m/ZlNF+gqFVoB2uuxNw3ozbb4+ONPpmfK7QZs8aSXZbU8pNSyBMGJ2w?=
 =?us-ascii?q?Yo0SBOQBJ+ZYqIz9qkMPoxu/GAmsAOLvxSVOhn/xwKY3zvouEQXH3AwmBd0Oq2?=
 =?us-ascii?q?/UrNToP6oVXuC1zbTIzTHCb/xM3zf975LEfQs/rvGIXLJwd9DeyVI0FwPElViQ?=
 =?us-ascii?q?ponlMCmU1uQJqWSU8+1gVee2hmMhtgp/rD+vxsI2hYnIgIIY0lXE+j9jwIkpP9?=
 =?us-ascii?q?G4SUh7YdCjEJZWqiqUNJN2T9s8T210vCs20KAKtJClcCQQ1ZgqxALTZ+aGfoWK?=
 =?us-ascii?q?+h7vSemcLDliiH54ZL6yhQy+/Eegx+HmS8W51ktBoDBfndnWrH8N0gTe6siZRf?=
 =?us-ascii?q?t5+UeswSiP1w/N5eFeO0w0lrTUK4QnwrEukpofq0PDHjX5mEnuja+WcFsr+vSw?=
 =?us-ascii?q?5uj5frnrooWQO5J6hw3gKKgih8+yDfgiPgUPXWWX4eG826fi/U39TrVKlPo2kq?=
 =?us-ascii?q?zBvZDeJMQboLO5AgBM3oYg9Rm/FTGm38ocnXUeK1JEdhSHgJbzO1zVPvD4Aumw?=
 =?us-ascii?q?g062nDdo2f/GJLvhDYvJLnTZl7fhZ7l951ZGyAUv1dBf+45UCrYZLfL3W0/xt8?=
 =?us-ascii?q?LXAgU2Mgyp2OvnDNR91oUDWWOAGKOZMaXSsUOW6eIrOeWDeIgVuDPlIfg/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx3ZsYcnG4Huh8LEWee3bsgsoBHn0MvgoxV+HqjFyCUThOZ3e9Ra?=
 =?us-ascii?q?485zc7CJ64AofHXIyinLuB3CKjFJ1Mem9GEkyMEWvvd4icWfcMbzydLtVikjwD?=
 =?us-ascii?q?U7ihTYgh2AqqtA/7zbpnM+XV9jcZtZLlyNh6+enTmQsu+jxzCsSXy3uNQH1snm?=
 =?us-ascii?q?MUWz8227hyrlZmyleD1qh4gOZUFcZJ6PNLSQo6MZ/cz+pnC9H9QA7Bf9GJSEq4?=
 =?us-ascii?q?TdWiGz0+UtUxw9oWaUZnB9qilgzD3zatA7INlLyEHpo0/rjY33jwPcl9zXnG2b?=
 =?us-ascii?q?Ilj1knRMtPKGKnirR+9wjVG47GjUGZm7y2eqQb2S7H7H2DwnaWvEFETA5wVr3I?=
 =?us-ascii?q?Um0FaUvIs9v1/EPCQKWoCbQ8LARBz8mOKq9Jat3siVVLX/PjONXYY2KslGa8Hx?=
 =?us-ascii?q?eIxrWQbIX0f2URxjnSCE8BkwoL53aJKRA+Bju9o2LZFDFhCEjgY13y/uVkqHO0?=
 =?us-ascii?q?VEk0zxqUYE1nzLe1/h8VhfqBS/IcxL4EuSEhqylqE1a5xd7ZF92Apw95dqVGfd?=
 =?us-ascii?q?w9+EtH1X7etwFlIpygLqVihlkCcwR3v0LizQl3Bp9HkcgwqHMqzQxyKa2D3VNF?=
 =?us-ascii?q?djOY243wO7LNJmnz+hCvd7DZ2lXE3NmK/acP7ewyq0//swGxCkoi73Jn3sFP3H?=
 =?us-ascii?q?uY+JrLAxQdUJLrXkks6hh1uqvVYi8+54PTy31hKq20sj7E29I0C+op0Begf9FD?=
 =?us-ascii?q?MKyaEA/+CdEVB8+rKOYygVimcgoEPPxO9K4zJ86nd+aG1LS3M+p6nTOmjX5I4I?=
 =?us-ascii?q?Zy0k+X8yp8S+jI34sKwv2C3wuHUSv8g0mlsszthY9EYjQSFHKlySf4HI5RerFy?=
 =?us-ascii?q?fYETBGe0Is242s9xh4TwVH5f7lKjAU0J2NWoeRaLc1PyxwlQ2lkJrny9niu4yS?=
 =?us-ascii?q?d5kzUorqqZwSzPzP7udBsBOm5XWmZiiU3gLpSzj9AfREKodRQmlAO55UbmwKhW?=
 =?us-ascii?q?vKR+L2jJTUZIZST2NHxiUq2ru7qGYs5P7o4osCpNXOS9Z1CaVqDyox8A3yz/GG?=
 =?us-ascii?q?tewSgxdyu2tZXhgxx6lGWdIW5xrHXDY8FwxhTf5NvGSf5KxDUGRyp4iTjRBlei?=
 =?us-ascii?q?Odmk5tGUl5bFsuCjWGOtTJxTcS/3zYyesCu3/3FlARq6n/qrgN3oDRA60TPn19?=
 =?us-ascii?q?ltTSjJrAzzYo7x26S4MOJneFJlBFv968p8B4F/nZE8hJAW2XgGmJqV+WALnnv0?=
 =?us-ascii?q?MdVewaj+dmYCRSYXw97J5wjowE5jIWiIx47jVnWd39FuZ9+1Ym4N3iI97sZKCL?=
 =?us-ascii?q?qb7bBenCt1pEa4ohzVYfRngjgdzv4u4mYAg+4VoAot0jmdArcKEEldPCzslA6H?=
 =?us-ascii?q?48qwrapJf2avbaa/1FBlkt+/FrGCrRpRWHL4epckAC9x4d9zMFPK0H3v9I7kfM?=
 =?us-ascii?q?PcYs4Uth2Rix3AlfRaKIotlvoWgipqIX79vXogy+IhjB1hx5e6vJWcK2V2/aK0?=
 =?us-ascii?q?GRpYNjzzZ8MO9TDhl6densCK34+xGpVtACkEXJztTfiwCjIdqeznNxqSED07sn?=
 =?us-ascii?q?qUAqDQHQib6Ed7tX7PF42rOmqTJHkYy9ViWRacKFZegAASQDU1gJo5Ghq2y8zm?=
 =?us-ascii?q?dUdz/ioR6ULgqhtQ1uJoMAHyUmXFqwetdDg0U4KTLAZM4gFB+kfVMtGe7uRpEC?=
 =?us-ascii?q?FD5ZChqA2NKmqGZwVHF20JW0qEB0z9Mbmq/9XP7++YBu+mJfvUfbqOsfBeV+uP?=
 =?us-ascii?q?xZ+30opm+CuMNtySPnZ4Cf03wFFDXXd/G8TWgDgPTy0XlyTQb8+Uvhu8+yt3rt?=
 =?us-ascii?q?yh//TvQg7g+YyPC75KO9V15x+2mbuDN/KXhCthKTZXyJIMxXzLyLgexlISiDtu?=
 =?us-ascii?q?dz6iEbsery7NUbnQl7RTDx4abSNzKcRJ47g93glLJc7UlNf12qRkgf4yDldPTU?=
 =?us-ascii?q?bhld2xZcwWP2G9M0vKC1yWNLudPz3E3cH2bbm4Sb1Rl+hUsxywuTCGE07sJDiD?=
 =?us-ascii?q?lj/pVwyxPuFIli2UIBteuISleBZ3FWfjVM7magG8MNJvkT02wLg0imnWOmIGLT?=
 =?us-ascii?q?d8c11CrruL4CNcg/V/HXFB73V/IemFnSaZ8/fXKpIMvfR3BSR0kvpQ4G4mxLtN?=
 =?us-ascii?q?8CFEWPt1lTPSr9F0pVGml+iPyjx/XxtPqjZEnoSLvUp5NKXd95lAX2vE/R0X4W?=
 =?us-ascii?q?WRDRQKu8VqCtn1t69MzdjPkfG7FDAX99vO5uMZCtTdJsWAdnYsdVLMGTXUBQYB?=
 =?us-ascii?q?Cx6mM2fSnU1WkNmb8HSRqZd8oZ/p3NIMS7QBD3Q2G+kcB0AjG8YNZN90WDotmr?=
 =?us-ascii?q?3djOYH4Gr4oBSVDN1fs53dSdqKBPjiMinfi7RYI1MH2773LoQ7Moz9xlxsbUR8?=
 =?us-ascii?q?kI3WGk3WG9dXrWkpdRM5rkxLtmB5VmQb0kTsbgSipnQUELr8lxo7mgJ4bf4wsh?=
 =?us-ascii?q?7271ozK1PMjCI2mU02lpPuhjXVOCT8Kq6sWo5bCwL7skEwNtXwRAMmQxe1mBlL?=
 =?us-ascii?q?NSrARrtXiPNKeGRqjgbHopoHTfFdUKlFaRkXg/uaY/Qu2E9Hqw2owEZG4a3ODp?=
 =?us-ascii?q?40x1hiSoKls38Vg1ErV9UyP6GFfKc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAAD/2v5bh0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECJ4wRjAiBaDmJe40zgXMSAQEYCwgBh24iNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYigmUDAwECJBMGARsQCgMBAwIJAQEFORIDIAgJAQUBHAcSB?=
 =?us-ascii?q?YMcAYFoAQMVBQqbKzyMCRYFAReCdwWEQgoZJw1dgTcCAQUSimiBHIFXP4ERM4V?=
 =?us-ascii?q?9BBiBPIVmAokfh0yPMAcCghwEhF2KTBKJRoc9iHaEXopNBgIJBw8hgSWCDU0jg?=
 =?us-ascii?q?zwTgW0bg22CWYgSKDKBBQEBjTMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AZAAD/2v5bh0O0hNFjHQEBBQEHBQGBUQgBCwGCaYECJ4w?=
 =?us-ascii?q?RjAiBaDmJe40zgXMSAQEYCwgBh24iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYigmUDAwECJBMGARsQCgMBAwIJAQEFORIDIAgJAQUBHAcSBYMcAYFoAQMVBQq?=
 =?us-ascii?q?bKzyMCRYFAReCdwWEQgoZJw1dgTcCAQUSimiBHIFXP4ERM4V9BBiBPIVmAokfh?=
 =?us-ascii?q?0yPMAcCghwEhF2KTBKJRoc9iHaEXopNBgIJBw8hgSWCDU0jgzwTgW0bg22CWYg?=
 =?us-ascii?q?SKDKBBQEBjTMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="53027172"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 10:19:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728542AbeK2FSh (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 00:18:37 -0500
Received: from mail-qt1-f193.google.com ([209.85.160.193]:38734 "EHLO
        mail-qt1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725266AbeK2FSh (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 00:18:37 -0500
Received: by mail-qt1-f193.google.com with SMTP id p17so26919777qtl.5;
        Wed, 28 Nov 2018 10:16:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:date:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=iP89O5yt8cPK3Ietczi17UITaQMICxETiZ1FFCX7LK4=;
        b=mFQy2hpk1BwpKhVnSVD0ZRV2/kKz4U/lxtD1dpIyAmGI3HeZ3jmFxB8QauGEDhNlpZ
         PggN+ejiBId02wwSNC2He+568sk/40WB4aMZlXgn/w56DdK9jbHns/q04FOamo5RBe9P
         LzkR3xixdPRXnctjrVRkVlBNOSGSp1qxT98EQOp2/L1g4kl2SfWyzzaE8+rIJsHZigPM
         7ar0ijxmOwaLiF0MwVRtRylTdEpNgmHR5ht6SAN1MwzaUBkIZXKbO0bwPpwoIpPLhMHo
         SjE3bp9321rJB02FVwkNMcsN2Dn7+lDg41k+/KbKO1f1PcecME9hEMUvKp+mj9ruL4RK
         NabQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:date:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=iP89O5yt8cPK3Ietczi17UITaQMICxETiZ1FFCX7LK4=;
        b=iK9Bf6MSrTy4vwOYHXmOrxjPhW9v9sHON7FvBxPETb+pEvbNDtC/za5et1fgJ8hW4c
         b5DnXx9GTwNMrRVOy6kTx+M4HamMGiGsM6NwnIrmGtFXGGxTmvHqPg+IZcO8fRR0zNgi
         2etJU4cM1hDOhJ6YfW1LOgpzhlbE5l91ScRjztwP5ZQdcc/XTfkzIQXRQTIBnev4XXpC
         /ZDaz/Hp16MYaYVKP086S8x2UaoTBawLnfS+rGlyFZfR6GF7O93vFJQQqkmW3zH5OMz2
         iUkaomsGov3Qj2kd/3sDKrZIhTCGem473eaLS6eoWrv1dOid39yAK9glOynhnMoQ1/mI
         KAfg==
X-Gm-Message-State: AGRZ1gLD9/JaewalPSAJKDXfuKqKtbx5ikVz1MjBsCgn+ArYGF78sQey
        K1YBviOXILmz7Q0So7utpmA=
X-Google-Smtp-Source: AJdET5dlTKURXYkorNoNwt3tQbHpK3Eh78GXcdP6AY9K8CotL0//w+w2VBPr5hULsuuNY1OtvruURw==
X-Received: by 2002:ac8:3518:: with SMTP id y24mr36002794qtb.241.1543428965393;
        Wed, 28 Nov 2018 10:16:05 -0800 (PST)
Received: from smtp.gmail.com ([143.107.45.1])
        by smtp.gmail.com with ESMTPSA id k185sm3613156qkd.62.2018.11.28.10.16.01
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 28 Nov 2018 10:16:04 -0800 (PST)
From: Giuliano Belinassi <giuliano.belinassi@gmail.com>
X-Google-Original-From: Giuliano Belinassi <giuliano.belinassi@usp.br>
Date: Wed, 28 Nov 2018 16:15:59 -0200
To: lars@metafoo.de, Michael.Hennerich@analog.com, jic23@kernel.org,
        knaack.h@gmx.de, pmeerw@pmeerw.net, gregkh@linuxfoundation.org,
        stefan.popa@analog.com, alexandru.Ardelean@analog.com,
        renatogeh@gmail.com
Cc: linux-iio@vger.kernel.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org, kernel-usp@googlegroups.com
Subject: [PATCH 1/2] staging: iio: ad7780: Add gain & filter gpio support
Message-ID: <231cbc909b892a0ebe172460d34e9eeb9cfa3003.1543428366.git.giuliano.belinassi@usp.br>
References: <cover.1543428366.git.giuliano.belinassi@usp.br>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <cover.1543428366.git.giuliano.belinassi@usp.br>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Previously, the AD7780 driver only supported gpio for the 'powerdown'
pin. This commit adds suppport for the 'gain' and 'filter' pin.

Signed-off-by: Giuliano Belinassi <giuliano.belinassi@usp.br>
---
Changes in v2:
    - Now this patch is part of the patchset that aims to remove ad7780
out of staging. https://marc.info/?l=linux-iio&m=154282349808890&w=2
    - Also, now it reads voltage and filter values from the userspace
instead of gpio pin states.

 drivers/staging/iio/adc/ad7780.c       | 78 ++++++++++++++++++++++++--
 include/linux/iio/adc/ad_sigma_delta.h |  5 ++
 2 files changed, 79 insertions(+), 4 deletions(-)

diff --git a/drivers/staging/iio/adc/ad7780.c b/drivers/staging/iio/adc/ad7780.c
index c4a85789c2db..05979a79fda3 100644
--- a/drivers/staging/iio/adc/ad7780.c
+++ b/drivers/staging/iio/adc/ad7780.c
@@ -39,6 +39,12 @@
 #define AD7170_PATTERN		(AD7780_PAT0 | AD7170_PAT2)
 #define AD7170_PATTERN_MASK	(AD7780_PAT0 | AD7780_PAT1 | AD7170_PAT2)
 
+#define AD7780_GAIN_GPIO	0
+#define AD7780_FILTER_GPIO	1
+
+#define AD7780_GAIN_MIDPOINT	64
+#define AD7780_FILTER_MIDPOINT	13350
+
 struct ad7780_chip_info {
 	struct iio_chan_spec	channel;
 	unsigned int		pattern_mask;
@@ -50,6 +56,8 @@ struct ad7780_state {
 	const struct ad7780_chip_info	*chip_info;
 	struct regulator		*reg;
 	struct gpio_desc		*powerdown_gpio;
+	struct gpio_desc		*gain_gpio;
+	struct gpio_desc		*filter_gpio;
 	unsigned int	gain;
 
 	struct ad_sigma_delta sd;
@@ -115,18 +123,65 @@ static int ad7780_read_raw(struct iio_dev *indio_dev,
 	return -EINVAL;
 }
 
+static int ad7780_write_raw(struct iio_dev *indio_dev,
+			    struct iio_chan_spec const *chan,
+			    int val,
+			    int val2,
+			    long m)
+{
+	struct ad7780_state *st = iio_priv(indio_dev);
+	const struct ad7780_chip_info *chip_info = st->chip_info;
+	int uvref, gain;
+	unsigned int full_scale;
+
+	if (!chip_info->is_ad778x)
+		return 0;
+
+	switch (m) {
+	case IIO_CHAN_INFO_SCALE:
+		if (val != 0)
+			return -EINVAL;
+
+		uvref = regulator_get_voltage(st->reg);
+
+		if (uvref < 0)
+			return uvref;
+
+		full_scale = 1 << (chip_info->channel.scan_type.realbits - 1);
+		gain = DIV_ROUND_CLOSEST(uvref, full_scale);
+		gain = DIV_ROUND_CLOSEST(gain, val2);
+
+		gpiod_set_value(st->gain_gpio, gain < AD7780_GAIN_MIDPOINT ? 0 : 1);
+	break;
+	case IIO_CHAN_INFO_SAMP_FREQ:
+		if (val2 != 0)
+			return -EINVAL;
+
+		gpiod_set_value(st->filter_gpio, val < AD7780_FILTER_MIDPOINT ? 0 : 1);
+	break;
+	}
+
+	return 0;
+}
+
 static int ad7780_postprocess_sample(struct ad_sigma_delta *sigma_delta,
 				     unsigned int raw_sample)
 {
 	struct ad7780_state *st = ad_sigma_delta_to_ad7780(sigma_delta);
 	const struct ad7780_chip_info *chip_info = st->chip_info;
+	int val;
 
 	if ((raw_sample & AD7780_ERR) ||
 	    ((raw_sample & chip_info->pattern_mask) != chip_info->pattern))
 		return -EIO;
 
 	if (chip_info->is_ad778x) {
-		if (raw_sample & AD7780_GAIN)
+		val = raw_sample & AD7780_GAIN;
+
+		if (val != gpiod_get_value(st->gain_gpio))
+			return -EIO;
+
+		if (val)
 			st->gain = 1;
 		else
 			st->gain = 128;
@@ -141,18 +196,20 @@ static const struct ad_sigma_delta_info ad7780_sigma_delta_info = {
 	.has_registers = false,
 };
 
-#define AD7780_CHANNEL(bits, wordsize) \
+#define AD7170_CHANNEL(bits, wordsize) \
 	AD_SD_CHANNEL_NO_SAMP_FREQ(1, 0, 0, bits, 32, wordsize - bits)
+#define AD7780_CHANNEL(bits, wordsize) \
+	AD_SD_CHANNEL_GAIN_FILTER(1, 0, 0, bits, 32, wordsize - bits)
 
 static const struct ad7780_chip_info ad7780_chip_info_tbl[] = {
 	[ID_AD7170] = {
-		.channel = AD7780_CHANNEL(12, 24),
+		.channel = AD7170_CHANNEL(12, 24),
 		.pattern = AD7170_PATTERN,
 		.pattern_mask = AD7170_PATTERN_MASK,
 		.is_ad778x = false,
 	},
 	[ID_AD7171] = {
-		.channel = AD7780_CHANNEL(16, 24),
+		.channel = AD7170_CHANNEL(16, 24),
 		.pattern = AD7170_PATTERN,
 		.pattern_mask = AD7170_PATTERN_MASK,
 		.is_ad778x = false,
@@ -173,6 +230,7 @@ static const struct ad7780_chip_info ad7780_chip_info_tbl[] = {
 
 static const struct iio_info ad7780_info = {
 	.read_raw = ad7780_read_raw,
+	.write_raw = ad7780_write_raw,
 };
 
 static int ad7780_probe(struct spi_device *spi)
@@ -222,6 +280,18 @@ static int ad7780_probe(struct spi_device *spi)
 		goto error_disable_reg;
 	}
 
+	if (st->chip_info->is_ad778x) {
+		st->gain_gpio = devm_gpiod_get_optional(&spi->dev,
+							"gain",
+							GPIOD_OUT_HIGH);
+		if (IS_ERR(st->gain_gpio)) {
+			ret = PTR_ERR(st->gain_gpio);
+			dev_err(&spi->dev, "Failed to request gain GPIO: %d\n",
+				ret);
+			goto error_disable_reg;
+		}
+	}
+
 	ret = ad_sd_setup_buffer_and_trigger(indio_dev);
 	if (ret)
 		goto error_disable_reg;
diff --git a/include/linux/iio/adc/ad_sigma_delta.h b/include/linux/iio/adc/ad_sigma_delta.h
index 730ead1a46df..6cadab6fd5fd 100644
--- a/include/linux/iio/adc/ad_sigma_delta.h
+++ b/include/linux/iio/adc/ad_sigma_delta.h
@@ -173,6 +173,11 @@ int ad_sd_validate_trigger(struct iio_dev *indio_dev, struct iio_trigger *trig);
 	__AD_SD_CHANNEL(_si, _channel, -1, _address, _bits, \
 		_storagebits, _shift, NULL, IIO_VOLTAGE, 0)
 
+#define AD_SD_CHANNEL_GAIN_FILTER(_si, _channel, _address, _bits, \
+	_storagebits, _shift) \
+	__AD_SD_CHANNEL(_si, _channel, -1, _address, _bits, \
+		_storagebits, _shift, NULL, IIO_VOLTAGE, BIT(IIO_CHAN_INFO_RAW))
+
 #define AD_SD_TEMP_CHANNEL(_si, _address, _bits, _storagebits, _shift) \
 	__AD_SD_CHANNEL(_si, 0, -1, _address, _bits, \
 		_storagebits, _shift, NULL, IIO_TEMP, \
-- 
2.19.1

