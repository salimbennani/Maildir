Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 08:41:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B4D1758014B;
	Sun,  2 Dec 2018 08:01:09 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 02 Dec 2018 08:01:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AEej62xyrU0ZVXr7XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4VL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJYBAfQdMuZDt4nwpUADrQeiCQS2GO/j1iNEi33w0KYn0+ohCwbG3Ak4EtwSt3?=
 =?us-ascii?q?Tbt8j+ObkWUe+v1qnIzijIYvRM2Tf684fHbwwuofWWUrJqcsrc0kYvFwbfgVWR?=
 =?us-ascii?q?rYzpJS+a1uMIs2WC6edrSOGhi3Y/pg1vvjSiwt0ghpTHi44L0FzI6CZ0zJovKd?=
 =?us-ascii?q?C5SkN3ecCoHIdUui2ANIZ7QtkuT3xptSs70LELuJy2cS4Xw5o93RHfceaIc42Q?=
 =?us-ascii?q?7xLjSumRJTB4iWp7eLKwmRmy61Ksyu7iWcmu1lZFsC5FnsPLtnAX2Bzf8smHSv?=
 =?us-ascii?q?1j8Ue9wTuDyRzf5+VeLUwpm6fXNYQtzqMzm5YPq0jOHy37lF3zjKCMd0Uk/uao?=
 =?us-ascii?q?6/7gYrXjvpKcM450igfjMqUhg8C/Avo3MhIIX2eF/eSwzbrj/EP/QLpUlP07ib?=
 =?us-ascii?q?fZsJ/EKsQBvKK5ABFa0pwl6xmhCzeqytMYnWMILF5dYhKIk5DpO03SIPD/Ffq/?=
 =?us-ascii?q?h1WskDR1yPzcMbzhH47ALnzCkLfnYLZ85FRQyAs1zdBD+Z1UDqsNL+70Wk/0rN?=
 =?us-ascii?q?bYFAM2MxSow+b7D9VwzoMeVniOAq+FKqzStkWE5uIyI+aWYo8Vty3wK/wk5/7o?=
 =?us-ascii?q?kH84lkURfaiv3ZsLdn+4Gu5qLFmeYXrpmt0BC3sFvhIiTOz2j12PSTxTZ3GsUK?=
 =?us-ascii?q?4m5TE7D4SmDYHERo22hLyB3SG7HoBZZ2xcC1CMF2voeJuAW/sWdC2SJcphmCQe?=
 =?us-ascii?q?Vbe9U48hyQ2utAjixrV9NerU+ioYtZH52Nhv/eLTlwo/9Th1D8SbzmGMQHt4nm?=
 =?us-ascii?q?IORz8qwq9/pVZxxUuE0ah9m/ZYD8Bc5+tVUgcmMp7R1+96BMr0Wg7beteJSUyp?=
 =?us-ascii?q?QtOpATwqStIxwtkOY1tyGtm4jxDD2TaqDKERl7CRGJM09afc1WDrJ8lh03bGyL?=
 =?us-ascii?q?Uhj14+T8RSL2KmmLBw+xLTB4HTlUWZjLildaIb0C7J92eDyG6OsVpcUA5xV6XF?=
 =?us-ascii?q?QH8ealHXrdT/+kPNUbuuBa47PQtGzM6IMrFKZcHxjVVaWPfjP8zTbH+rlGeuGx?=
 =?us-ascii?q?mE3LOMY5Dse2UGwirdDlMJkwQS/XaAKAg/CT2to2PYDDxyC13vZ1ng/vV5qHO+?=
 =?us-ascii?q?VkU01R2Fb1V917qp/R4YneCcS/IW3rIDpCchqzV1EEyh397MDNqAvQ5hfKRaYd?=
 =?us-ascii?q?My+1pH0WPZtwpgPp2vNaxih1gecxhpsEPqzRl4FoJAkc0ypnMw0AVyMb6Y0E9G?=
 =?us-ascii?q?dz6Ax5/wPqPYK2bs8xGvcaLZwUze38uM9acJ6/Q4rEvjsRqtFkoj9XVnztZU32?=
 =?us-ascii?q?Gd5pXMEAodT5bxXlwr+Bh9orHQejM96J/M1X1wLam0tSfP2tI0BOc/1hmsZdZe?=
 =?us-ascii?q?MKOeGw/0HM0XHMyuKO0sm1i0YRMIJuFS9KgoP8y4c/uKwrKkPOFlnDi+l2RI/J?=
 =?us-ascii?q?h90l6Q9yp7UuPIxZcFzO2C0QudSjj8i02tssbploBeZDEeB3awxjLgBIFMeKJy?=
 =?us-ascii?q?Z4ELCWG1Ls2zx9V+gYPtWnFC+F6iAVMGxNGmeR6IY1Ph2g1Q0FwdoWa7liug0z?=
 =?us-ascii?q?x0jzYpo7Kf3SzP2ejjdAALOnVWRGlkllrsJYm0j9YHXEmndQQplR2l5VrkyKhf?=
 =?us-ascii?q?vqhwM27TQUJQdSjsM25iSrewtqaFY8NX6pMnqz9XUOe/YVCdULL9uAEV0yDgH2?=
 =?us-ascii?q?tfwjA0aTeqt479nxx7jmKdMXlyoGDYecF22RfQ+tjcSeRN0ToBQSlykSPXCUSk?=
 =?us-ascii?q?P9m14dWUkI/Os+CkWGKmTJFTcyjrzYWbuSu/5G1qBwC/nv+plt3mFwg6zTH019?=
 =?us-ascii?q?1wWSrUqxb8Z5Hh176mPuJ/YkloGFj85tJ5Go5kk4s8npEQ2WUAiZWT8noKimPz?=
 =?us-ascii?q?MdRd2aLjY3sBXz8Lw9jJ4Af73E1vNG6Gx4X8Vn+F2Mtue8G6Yn8K2iI6981KDa?=
 =?us-ascii?q?aU7L9ekidvrFu3sxnRYeRjkTcH0vQh9mQag+4StQopzyWdBK0SHEZCMSztkRSI?=
 =?us-ascii?q?886xrKFNaGmzdriw0VJ0ncq9A7GavgFcRHH5d48+HS9368VzKlPN32f16oH5Y9?=
 =?us-ascii?q?nQdtMTuwaQkxfBiehVNZ0wmuALhSphJWLyo3klx/Qnghxp2JGwpJKHJHl1/KKl?=
 =?us-ascii?q?Hh5YMSX4aNgJ9THqiaZeg9ya34SyHph6HjULXZ3oTe+nET4ItPTnMRqOHyM4qn?=
 =?us-ascii?q?uBBbXfGgqf4l98r33TC5CrK22XJH4BwNVgXhadIVJQgBsOUDUmhJI5FR2qxM/8?=
 =?us-ascii?q?cEd//D8R/UX1qh9NyuJuKhn+XX3TpAauajcoVpefKABa4R1F50fQKcae9P58Hz?=
 =?us-ascii?q?lE/p29qwyAMmyaZwNVDWEQR0yLHVbjMqO15dnH9eiYCfGzL//PYbWItOxfWO2E?=
 =?us-ascii?q?xZOp0ot64TmMMt+DMWVlD/0+wkBDR2x2G9zFmzUTTCwajyLNYNCapBe/+S13r9?=
 =?us-ascii?q?qz8PfxWALo6ouAFaFSMch0+x2thaeDNuiQhDt2KDpC15MMw2PIx6Yb3FIIly5u?=
 =?us-ascii?q?cDytG6watSHRVKLQhrNXDxkDZixpKctH9Lg80RdNOMLBjtP116V1jvo0C1dDSF?=
 =?us-ascii?q?zgldulZc0MI2GhKlzHAFyHO6iBJT3O28v3e7+zSaVMjOVIsB29oSqbE07mPjiZ?=
 =?us-ascii?q?izblTQygMeFSgyGdJxFevIC9chBwCWnsVt7maxu7MMNpgj0y27E7mnTKNWsEOz?=
 =?us-ascii?q?hmb0xNtqGQ7T9fgvhnG21O9HxlLeyFmyaf9+bZK5YWvuFtAiR7jO9a5HU6y71I?=
 =?us-ascii?q?7CBLXvB1mS3SrsJwrFGiiOWA1j1nUB8d4gpM0aCMu0x+Oazfvs1CXnDN4BIE60?=
 =?us-ascii?q?2VAg4HpJ1uA4u8lbpXz431k6i7AzNL6dGcqdEbDcTfLMudM1IuNBPoHHjfCw5T?=
 =?us-ascii?q?Hm3jDn3Wm0EIyKLazXaStJVv78G0wJc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAAAbAQRch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeDeYN7hB2MCIINFIkObo04FIFfLBMBh3YiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKSMMgjYkAYJiAQIDAQIgBBkBGx0BAwIJAQEFBQsNAgImAgIDHwERA?=
 =?us-ascii?q?QUBHAYTBYMcgWkBAxUFlkg8iw18FgUBF4J3BYQuChknDV2BNwIGEnmLEReBf4E?=
 =?us-ascii?q?RgxKEaYMcglcCiQwaCoFvhQtQjnFVCYIjjxkYkSaCfJI9gyUwgSWCDU0jgQGCO?=
 =?us-ascii?q?4IbDBeDSopxITOBBQEBjSUBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAAAbAQRch0O0hNFjHQEBBQEHBQGBUQgBCwGDayeDeYN?=
 =?us-ascii?q?7hB2MCIINFIkObo04FIFfLBMBh3YiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMg?=
 =?us-ascii?q?jYkAYJiAQIDAQIgBBkBGx0BAwIJAQEFBQsNAgImAgIDHwERAQUBHAYTBYMcgWk?=
 =?us-ascii?q?BAxUFlkg8iw18FgUBF4J3BYQuChknDV2BNwIGEnmLEReBf4ERgxKEaYMcglcCi?=
 =?us-ascii?q?QwaCoFvhQtQjnFVCYIjjxkYkSaCfJI9gyUwgSWCDU0jgQGCO4IbDBeDSopxITO?=
 =?us-ascii?q?BBQEBjSUBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,307,1539673200"; 
   d="scan'208";a="140437264"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 08:01:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725910AbeLBP6H (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 2 Dec 2018 10:58:07 -0500
Received: from mail-io1-f67.google.com ([209.85.166.67]:38153 "EHLO
        mail-io1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725869AbeLBP6H (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 2 Dec 2018 10:58:07 -0500
Received: by mail-io1-f67.google.com with SMTP id l14so8428586ioj.5;
        Sun, 02 Dec 2018 07:58:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=XnNpHL/58Ulh4j+XcshZcSWNukesGwK19L7aclXqCis=;
        b=CT6BUfRzcx5f9rVdH/+w7hA7O1OTwpu0n2Gnpt9gbcdsxskzzvQuuHjXPsqmToMKyi
         ZLwUvvZf6niErvV/h5YWEyr2RkKx5fQ5VZLoVZjARLZBCIwCkVBNXl6f7HE2FNMeW3Oe
         nWb+dRdyR1AifUICGbaeK8DvJ/TxN1mb041WZArmx3xeYikt1tj2Veb5o3bG91L5MZgR
         POQJ+Ld+WaLBNN8aF0pslq+HXxZU36srPz4G8HbC/yDkOyBAeGBg7ncDxhp97mHtVij3
         2LQc4pKfaWW35WLUeAF4dzOSmcKGAx7/GNj+PoKk2GpQEyW3KGtzB0VvlWF9R4l7BsLt
         RRlQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=XnNpHL/58Ulh4j+XcshZcSWNukesGwK19L7aclXqCis=;
        b=poxqckuuNFxezh+K2A8CxOZMsTq5D1mGd8O1zfpKN05D2adNtRC/lDA9YgekzeSxEm
         CZRvQw0dKVEBhgWnB2O3djbS4e2Rs9SbRt2zwGoCYOHQ4wNWN7Wrl1vYr8Et3Ahu+wle
         j3yi8NCyapfGY4OyDiYG/9TjN8afePw2keT4dVc0J/OR/5Uo5kv75atOnZweod6aZhzU
         eBSVn05FuEPKL6FxsX0dk9XJSxI7SnA9UaktAp2fqwTc0Ohk+xwpQJtJdxzbNbM8GN/m
         vcnBaCNrRSkY/IUef7ThPwPDyOh4NdBGV8XayEZlVzk7BGPBeBZdgEmSeErgo2JX4klQ
         jH2Q==
X-Gm-Message-State: AA+aEWbBbDbNRs2BqXFoJDiCM69SDFHC712VwyJe3YWqFMYdhYuGL1/5
        H/K4F1ySOrNswibK3uVSyElnSB69CEeLuB4AXZnAT7DH
X-Google-Smtp-Source: AFSGD/WXZWP5aubGgUI5+VDRbnExtu7ScYhs0ktCdrRH1lpc/5n9RErzuaT2LDnbVbYy4OdB2Qd7TkrqNoEuOFQj3Es=
X-Received: by 2002:a6b:9156:: with SMTP id t83mr10978253iod.248.1543766283822;
 Sun, 02 Dec 2018 07:58:03 -0800 (PST)
MIME-Version: 1.0
References: <20181122015237.14534-1-jonathan@marek.ca> <20181122015237.14534-5-jonathan@marek.ca>
In-Reply-To: <20181122015237.14534-5-jonathan@marek.ca>
From: Rob Clark <robdclark@gmail.com>
Date: Sun, 2 Dec 2018 10:57:52 -0500
Message-ID: <CAF6AEGum3tcsT5d5aw02GL5UxZdfC-cCSc=YBRF5L=Ws3Vt9vA@mail.gmail.com>
Subject: Re: [PATCH v2 5/9] drm/msm: add headless gpu device (for imx5)
To: Jonathan <jonathan@marek.ca>
Cc: freedreno <freedreno@lists.freedesktop.org>,
        Chris Healy <Chris.Healy@zii.aero>,
        Fabio Estevam <festevam@gmail.com>,
        David Airlie <airlied@linux.ie>,
        linux-arm-msm <linux-arm-msm@vger.kernel.org>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Nov 21, 2018 at 8:55 PM Jonathan Marek <jonathan@marek.ca> wrote:
>
> This patch allows using drm/msm without qcom display hardware. This is
> especially useful for iMX5 hardware, which has a a2xx GPU but uses the
> imx-drm driver for display.
>
> Signed-off-by: Jonathan Marek <jonathan@marek.ca>
> ---
> v2: added commit message and removed unnecessary comment
>
>  drivers/gpu/drm/msm/Kconfig       |  4 ++--
>  drivers/gpu/drm/msm/msm_debugfs.c |  2 +-
>  drivers/gpu/drm/msm/msm_drv.c     | 21 +++++++++++----------
>  3 files changed, 14 insertions(+), 13 deletions(-)
>
> diff --git a/drivers/gpu/drm/msm/Kconfig b/drivers/gpu/drm/msm/Kconfig
> index 843a9d40c05e..cf549f1ed403 100644
> --- a/drivers/gpu/drm/msm/Kconfig
> +++ b/drivers/gpu/drm/msm/Kconfig
> @@ -2,7 +2,7 @@
>  config DRM_MSM
>         tristate "MSM DRM"
>         depends on DRM
> -       depends on ARCH_QCOM || (ARM && COMPILE_TEST)
> +       depends on ARCH_QCOM || SOC_IMX5 || (ARM && COMPILE_TEST)
>         depends on OF && COMMON_CLK
>         depends on MMU
>         select QCOM_MDT_LOADER if ARCH_QCOM
> @@ -11,7 +11,7 @@ config DRM_MSM
>         select DRM_PANEL
>         select SHMEM
>         select TMPFS
> -       select QCOM_SCM
> +       select QCOM_SCM if ARCH_QCOM
>         select WANT_DEV_COREDUMP
>         select SND_SOC_HDMI_CODEC if SND_SOC
>         select SYNC_FILE
> diff --git a/drivers/gpu/drm/msm/msm_debugfs.c b/drivers/gpu/drm/msm/msm_debugfs.c
> index f0da0d3c8a80..1ca99ca356a4 100644
> --- a/drivers/gpu/drm/msm/msm_debugfs.c
> +++ b/drivers/gpu/drm/msm/msm_debugfs.c
> @@ -235,7 +235,7 @@ int msm_debugfs_init(struct drm_minor *minor)
>         debugfs_create_file("gpu", S_IRUSR, minor->debugfs_root,
>                 dev, &msm_gpu_fops);
>
> -       if (priv->kms->funcs->debugfs_init) {
> +       if (priv->kms && priv->kms->funcs->debugfs_init) {
>                 ret = priv->kms->funcs->debugfs_init(priv->kms, minor);
>                 if (ret)
>                         return ret;
> diff --git a/drivers/gpu/drm/msm/msm_drv.c b/drivers/gpu/drm/msm/msm_drv.c
> index 9f219e02f3c7..3f35e57202ef 100644
> --- a/drivers/gpu/drm/msm/msm_drv.c
> +++ b/drivers/gpu/drm/msm/msm_drv.c
> @@ -344,6 +344,7 @@ static int msm_drm_uninit(struct device *dev)
>         return 0;
>  }
>
> +#define KMS_HEADLESS 1
>  #define KMS_MDP4 4
>  #define KMS_MDP5 5
>  #define KMS_DPU  3
> @@ -495,6 +496,9 @@ static int msm_drm_init(struct device *dev, struct drm_driver *drv)
>         msm_gem_shrinker_init(ddev);
>
>         switch (get_mdp_ver(pdev)) {
> +       case KMS_HEADLESS:
> +               priv->kms = kms = NULL;
> +               break;
>         case KMS_MDP4:
>                 kms = mdp4_kms_init(ddev);
>                 priv->kms = kms;
> @@ -512,12 +516,6 @@ static int msm_drm_init(struct device *dev, struct drm_driver *drv)
>         }
>
>         if (IS_ERR(kms)) {
> -               /*
> -                * NOTE: once we have GPU support, having no kms should not
> -                * be considered fatal.. ideally we would still support gpu
> -                * and (for example) use dmabuf/prime to share buffers with
> -                * imx drm driver on iMX5
> -                */
>                 dev_err(dev, "failed to load kms\n");
>                 ret = PTR_ERR(kms);
>                 goto err_msm_uninit;
> @@ -633,7 +631,7 @@ static int msm_drm_init(struct device *dev, struct drm_driver *drv)
>         drm_mode_config_reset(ddev);
>
>  #ifdef CONFIG_DRM_FBDEV_EMULATION
> -       if (fbdev)
> +       if (kms && fbdev)
>                 priv->fbdev = msm_fbdev_init(ddev);
>  #endif
>
> @@ -1315,9 +1313,11 @@ static int msm_pdev_probe(struct platform_device *pdev)
>         struct component_match *match = NULL;
>         int ret;
>
> -       ret = add_display_components(&pdev->dev, &match);
> -       if (ret)
> -               return ret;
> +       if (get_mdp_ver(pdev) != KMS_HEADLESS) {
> +               ret = add_display_components(&pdev->dev, &match);
> +               if (ret)
> +                       return ret;
> +       }
>
>         ret = add_gpu_components(&pdev->dev, &match);
>         if (ret)
> @@ -1342,6 +1342,7 @@ static int msm_pdev_remove(struct platform_device *pdev)
>  }
>
>  static const struct of_device_id dt_match[] = {
> +       { .compatible = "qcom,adreno-headless", .data = (void *)KMS_HEADLESS },

so, I don't really think we should have a "headless" dt node, because
that doesn't really represent the hw.  Maybe instead for the gpu
device node, we could use a different compatible string like:

   gpu@xyz {
      compatible = "amd,imageon-205.0", "amd,imageon";
      ...
   };

(ie. amd,imageon instead of qcom,adreno)

Then in adreno_bind() (or somewhere around there), if we have the
amd,imageon compat string instead of qcom,adreno, then programatically
create a dummy "headless" device that the toplevel drm driver can bind
to.  I think something like this should be possible, and avoid needing
a qcom,adreno-headless node in dt.

BR,
-R

>         { .compatible = "qcom,mdp4", .data = (void *)KMS_MDP4 },
>         { .compatible = "qcom,mdss", .data = (void *)KMS_MDP5 },
>         { .compatible = "qcom,sdm845-mdss", .data = (void *)KMS_DPU },
> --
> 2.17.1
>
