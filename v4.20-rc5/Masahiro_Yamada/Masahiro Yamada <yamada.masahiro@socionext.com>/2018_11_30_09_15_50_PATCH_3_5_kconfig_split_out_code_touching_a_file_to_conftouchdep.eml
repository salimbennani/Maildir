Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:15:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3E0385802E4;
	Fri, 30 Nov 2018 01:17:25 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 01:17:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+ZZDjxYaIsbM69NvRtdcdTz/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci+ZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhNF+gqxYpxyupRJ/w5XMYIyXL/dyYr/RcMkGSWdbQspdSypMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5VoY7nqFsVtxS+BQisBPnoyjRVhHD5x6g63P48Hg7cwQctGNIPv2?=
 =?us-ascii?q?7RrNrvKagdS/q5zKzSwjXYdfxW2Tb96JLPch06uvGMWq5/ccvWyUkpCQzEgUmQ?=
 =?us-ascii?q?pZb5MDOS0+QAqm6W5PdjW+K3k2MrtR19rzy1yssxhITFmJgZxk3H+Cll2oo4JN?=
 =?us-ascii?q?+1RFZmbdOkHpZcrTyWOoRoTs84R2xlujw2x7kYtZO9YSME0o4oxwTFZPyCa4WI?=
 =?us-ascii?q?4gzsVOKWITpgmnJld6ywhwyo/Uij1OL8TM+030hOriZfldnMrH8N2wTS6siBVP?=
 =?us-ascii?q?R94l+s1SiT2w3X8O1IPE45mbTBJ5I8wbM8ioAfvEXBEyPunUX5lq6WdkEq+uiy?=
 =?us-ascii?q?7OTnZ63rppudN49ylwH/Pb0ims+hDuQiNAgBQWyb9f271Lzt+032Xq9Kg+Yokq?=
 =?us-ascii?q?nWrp/aP94Xpq2nDA9P1IYs9RK/Ay2h0NQCknkLNEhFdw6fj4j1J1HOJ+j1DfO+?=
 =?us-ascii?q?g1Svjjhn3f/HPqD6D5XJL3jDlqrhfLln505dzgoz0c5Q55ZOBr4dJ/LzX1f7tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc191owEWGKPHrWWMKTIvV+I++IgOe+MZIAOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWAUT5UeXm+Ra?=
 =?us-ascii?q?E85jY9CIKgCofOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIsV5iDwL?=
 =?us-ascii?q?SaChS5M91RGprAL10aFnLurT+i0br57jzsJ65+/ImBE29Dx0Cdmd0m6XQ2F1mG?=
 =?us-ascii?q?MIWyE53KRlrUNhzVeD1LByg+ZEGtxL+/NJTgA6OIbfz+NgDdD+QAbBftaTR1ag?=
 =?us-ascii?q?TdWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QpX9FANXO4iaJl9wjcHYjJk16HmKascqgc2C3N9GKHzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYJhfydTvMT2a4EuCchqjluAFaxxdXWC8CEpwpgeqVcbs?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?bymX3ZTuNbzYNGbz/AqjZLXL2l7DytmW/KQP6PMmq1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svz7CxtIlHvcqxgyhftdf?=
 =?us-ascii?q?KqyEEgDyHtYeB8ivLuwqhleoYggFPOBU6K47Iceme+Ga166sOeZqhCimgnhf4I?=
 =?us-ascii?q?BhzkKM8DJxSvTJ35kZ2f6YxBaIVzDmgFenrM/3g4FEaSgOEWWlzSjrGZBeZrd1?=
 =?us-ascii?q?fYYNEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?Bzkzwxrquf3TbCwuT4eBocJ25LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe8xP54kysSVUU+S8ZkqWSqXnrBsZ0CPjHm?=
 =?us-ascii?q?1eyy49dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpbDqO++UHitVp9ScSnt1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk6Mp1AIB+npEwhJENw3cagJqV8GEDkWfy?=
 =?us-ascii?q?N9VbxK3/YGAMRT4N397a/gzl1Fd/IXKOwoLzTm+dzdd5Z9mmfmMW3Tow78VLCK?=
 =?us-ascii?q?eX9rNIhyV0rUSjrQLNf/d9hCwSxuU06H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhZpciGipw4t9+MV3W1n3z95rkeM?=
 =?us-ascii?q?LRbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOzLufcwT/TXtjbtEksaSwoCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQZz89tRByDK0xEmgwUQC82np0kFgCp2czh?=
 =?us-ascii?q?dl125isK6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSNK2ycegRIFHwJVVaCB1z5Jbmu4t/A8+eDC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXly3Tbs6bpxS8+ixtos?=
 =?us-ascii?q?C86vTrXw3v6pWVC7tPKtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMUcT5zO9BS760i3ghBI8rbitLu2758j/41DUpFVF?=
 =?us-ascii?q?P7lsGoY8wKP3+yNFfdCEmXM7SGICXBw9vrbqOkVb1QkOJUugWsuTaaFk/vJCiM?=
 =?us-ascii?q?myP1WBCvL+5MijqWPBhfuIG7bxZsBnLvTNPgah2nLtB3iSc6zqEzhnPPLWQcKy?=
 =?us-ascii?q?Rzc1tRrr2M6iNVmvV+FHZH7npgLOmEnT6W7ujYKpkMt/trDT95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiA1JyrWNPhYSWrQBhM7jY8pVoR3nJ5lQO4H?=
 =?us-ascii?q?+WBhBMoMFqWfP1vKUF79HUnaLyMjAKwtvR9McVT5zFIceOPHNnNBPyET7VFgwt?=
 =?us-ascii?q?VjmgNGbZilxB1vqV8yvG/dABtpHwlc9WGfdgX1svG6ZCBw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAABt/wBch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBFfiyqCIWiWTIFzLBMBh3QiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYigmUDAwECJBkBATcBBQkBAVADVBkFgxyCAQEFpXKBbDOCdgEBB?=
 =?us-ascii?q?YcqCIdtgxKBHIIWgRGCXYpvIokuhX17kA0HApE5Fl6QQSyZdIINMxojgzyCGww?=
 =?us-ascii?q?Xg0qKYjEygQUBAY4bAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAABt/wBch0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBFfiyqCIWiWTIFzLBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYig?=
 =?us-ascii?q?mUDAwECJBkBATcBBQkBAVADVBkFgxyCAQEFpXKBbDOCdgEBBYcqCIdtgxKBHII?=
 =?us-ascii?q?WgRGCXYpvIokuhX17kA0HApE5Fl6QQSyZdIINMxojgzyCGwwXg0qKYjEygQUBA?=
 =?us-ascii?q?Y4bAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="53991977"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 01:17:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726781AbeK3UZ7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 15:25:59 -0500
Received: from conuserg-09.nifty.com ([210.131.2.76]:53048 "EHLO
        conuserg-09.nifty.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726644AbeK3UZx (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 15:25:53 -0500
Received: from pug.e01.socionext.com (p14092-ipngnfx01kyoto.kyoto.ocn.ne.jp [153.142.97.92]) (authenticated)
        by conuserg-09.nifty.com with ESMTP id wAU9GEac028692;
        Fri, 30 Nov 2018 18:16:16 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conuserg-09.nifty.com wAU9GEac028692
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1543569376;
        bh=HiMqj/ME+AaGau+DxV454Be5fNhnAhoE/t6iCz3z6jg=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=0lPI4l5QGeZ4FmFhB/3a9h8BVW7oBdM/qSU9p6YwNGzHP9nRB0gfgHj4pYmH1yGWG
         LYkh7Cdo4wdnem8m11bWar/IW3pOibroI/ohq/5zaDRUdMNA1Yno7CTlHfcgpIJ8O6
         KpBuc3YgtCTBHzujQm5/l2RK67n2I7l/afD+pig7sHvZ6iOYZ1f3rTNJfQb5qUfD2o
         HaivYoNgvbqvyMDdLJlyMizYgephTbiAdrP8Cia/Z9H2CZm9EhVcjoONNpyn0MCrjl
         D65NB86DUMrUMmuk8psBlyhvHN7XST8u+mdfsArGImSb1Fl3IrtjexDxmqeJHnPm+s
         OppF+2kH0PB7g==
X-Nifty-SrcIP: [153.142.97.92]
From: Masahiro Yamada <yamada.masahiro@socionext.com>
To: linux-kbuild@vger.kernel.org
Cc: Sam Ravnborg <sam@ravnborg.org>,
        Ulf Magnusson <ulfalizer@gmail.com>,
        Masahiro Yamada <yamada.masahiro@socionext.com>,
        linux-kernel@vger.kernel.org
Subject: [PATCH 3/5] kconfig: split out code touching a file to conf_touch_dep()
Date: Fri, 30 Nov 2018 18:15:50 +0900
Message-Id: <1543569352-4899-3-git-send-email-yamada.masahiro@socionext.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1543569352-4899-1-git-send-email-yamada.masahiro@socionext.com>
References: <1543569352-4899-1-git-send-email-yamada.masahiro@socionext.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

conf_touch_deps() iterates over symbols, touching corresponding
include/config/*.h files as needed.

Split the part that touches a single file into a new helper so it can
be reused.

The new helper, conf_touch_dep(), takes a symbol name as a parameter,
and touches the corresponding include/config/*.h file.

Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
---

 scripts/kconfig/confdata.c | 92 ++++++++++++++++++++++++----------------------
 1 file changed, 49 insertions(+), 43 deletions(-)

diff --git a/scripts/kconfig/confdata.c b/scripts/kconfig/confdata.c
index 4c76d56..7263b83 100644
--- a/scripts/kconfig/confdata.c
+++ b/scripts/kconfig/confdata.c
@@ -74,6 +74,47 @@ static int make_parent_dir(const char *path)
 	return 0;
 }
 
+static char depfile_path[PATH_MAX];
+static size_t depfile_prefix_len;
+
+/* touch depfile for symbol 'name' */
+static int conf_touch_dep(const char *name)
+{
+	int fd, ret;
+	const char *s;
+	char *d, c;
+
+	/* check overflow: prefix + name + ".h" + '\0' must fix in buffer. */
+	if (depfile_prefix_len + strlen(name) + 3 > sizeof(depfile_path))
+		return -1;
+
+	d = depfile_path + depfile_prefix_len;
+	s = name;
+
+	while ((c = *s++))
+		*d++ = (c == '_') ? '/' : tolower(c);
+	strcpy(d, ".h");
+
+	/* Assume directory path already exists. */
+	fd = open(depfile_path, O_WRONLY | O_CREAT | O_TRUNC, 0644);
+	if (fd == -1) {
+		if (errno != ENOENT)
+			return -1;
+
+		ret = make_parent_dir(depfile_path);
+		if (ret)
+			return ret;
+
+		/* Try it again. */
+		fd = open(depfile_path, O_WRONLY | O_CREAT | O_TRUNC, 0644);
+		if (fd == -1)
+			return -1;
+	}
+	close(fd);
+
+	return 0;
+}
+
 struct conf_printer {
 	void (*print_symbol)(FILE *, struct symbol *, const char *, void *);
 	void (*print_comment)(FILE *, const char *, void *);
@@ -909,21 +950,16 @@ static int conf_write_dep(const char *name)
 static int conf_touch_deps(void)
 {
 	const char *name;
-	char path[PATH_MAX+1];
-	char *s, *d, c;
 	struct symbol *sym;
-	int res, i, fd;
+	int res, i;
+
+	strcpy(depfile_path, "include/config/");
+	depfile_prefix_len = strlen(depfile_path);
 
 	name = conf_get_autoconfig_name();
 	conf_read_simple(name, S_DEF_AUTO);
 	sym_calc_value(modules_sym);
 
-	if (make_parent_dir("include/config/foo.h"))
-		return 1;
-	if (chdir("include/config"))
-		return 1;
-
-	res = 0;
 	for_all_symbols(i, sym) {
 		sym_calc_value(sym);
 		if ((sym->flags & SYMBOL_NO_WRITE) || !sym->name)
@@ -975,42 +1011,12 @@ static int conf_touch_deps(void)
 		 *	different from 'no').
 		 */
 
-		/* Replace all '_' and append ".h" */
-		s = sym->name;
-		d = path;
-		while ((c = *s++)) {
-			c = tolower(c);
-			*d++ = (c == '_') ? '/' : c;
-		}
-		strcpy(d, ".h");
-
-		/* Assume directory path already exists. */
-		fd = open(path, O_WRONLY | O_CREAT | O_TRUNC, 0644);
-		if (fd == -1) {
-			if (errno != ENOENT) {
-				res = 1;
-				break;
-			}
-
-			if (make_parent_dir(path)) {
-				res = 1;
-				goto out;
-			}
-
-			/* Try it again. */
-			fd = open(path, O_WRONLY | O_CREAT | O_TRUNC, 0644);
-			if (fd == -1) {
-				res = 1;
-				break;
-			}
-		}
-		close(fd);
+		res = conf_touch_dep(sym->name);
+		if (res)
+			return res;
 	}
-out:
-	if (chdir("../.."))
-		return 1;
 
-	return res;
+	return 0;
 }
 
 int conf_write_autoconf(int overwrite)
-- 
2.7.4

