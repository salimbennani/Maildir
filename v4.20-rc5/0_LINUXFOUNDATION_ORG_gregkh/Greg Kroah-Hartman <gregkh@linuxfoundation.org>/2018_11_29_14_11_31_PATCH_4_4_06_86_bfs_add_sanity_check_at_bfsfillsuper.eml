Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:46:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4B2B75802E4;
	Thu, 29 Nov 2018 07:02:28 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:02:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ah7X0rB/3oGhnzP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1uIeIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaM+dwfr7GfdMCW2VOQtpRWSJGAoO5?=
 =?us-ascii?q?dYQPDuwBNvtco4Tyo1YCqB2zDhSuCuzy0D9Fnn/407Mn3eovEg/I2w4vH9wAv3?=
 =?us-ascii?q?vbsNr7O7wSUfi3waTT0TXObP1b1Svn5YXScB0sp+yHU7JqccrWzEkiDwLLjk+O?=
 =?us-ascii?q?pozqIjib0/4Ns2+B4OpgTO6hiXQoqxttojiq3MgsjJTCi4UaylDe6yp5z4U1Jd?=
 =?us-ascii?q?2jRU5/YN6kFoZQti6UN4txX8MiRXxntzwmyr0Hvp67ejIGyJM9xx7QcvGKdZWD?=
 =?us-ascii?q?7BzkVOaUOzh4hXRldaq8hxms60igzPPzVs2u3FZNtCpFncHAuWoV1xzL8ciHUv?=
 =?us-ascii?q?x9/lu71TmT0ADT7+dJKl03m6rDM5Mt3KI8m54JvUjeECL6hl/6gLKVe0k44OSl?=
 =?us-ascii?q?6ubqbq3lq5KSLYN5iQDzPr4tl8G7G+g0LxQCUmqd9O+hzrPs51f5T69PjvAukq?=
 =?us-ascii?q?nWrpTaJcMDq66nDA9azJwj5wy8Dzi4ytQYm2cILFZfdBKAlYjpNEnCIPH+Dfih?=
 =?us-ascii?q?n1ShiClny+zCM7H7H5nAIGbPnK38cbt+90JQ0gs+wNJH65JREL4BIfbzWkHrtN?=
 =?us-ascii?q?zfCx80Kwi0w+fhCNVg2YISQGGPDbGDMKPUr1CI4vsjI+6CZY8Tpjn9MeMo5+Dh?=
 =?us-ascii?q?jXAng18RZ6qp0oUNaHC+APtmJ1+VYX32gtcOCWsKpBYxTPT2iF2eVj5ef3KyX6?=
 =?us-ascii?q?M/5j4lEo6nAprDS5upgLyA2ie7A5JXanpHClCKDXfnaYGEV+0QZyKVJ89riiYE?=
 =?us-ascii?q?WqS5S489yRGusxf3y7p9IerV5i0Xr5Xj2MJ15+3Ojx4y8zN0At+Z02GMSWF0g2?=
 =?us-ascii?q?wJSyU33KB5vUxy1FOD3bJkjPxfENxZ/+lJXRsiNZ7A0+x6DMj/WgDGftiXUlqm?=
 =?us-ascii?q?QdKmATc3TtI22NIOZ0d9G9O/jhHMxSaqArkVl6CVC5ww6K7Tw3/xJ8NlwXbcyK?=
 =?us-ascii?q?Yhl0UmQtdINWC+nKF/7AjTB4nKk0mDjaalb6Yc0TXJ9GeCy2qOoU5ZXBRxUaXD?=
 =?us-ascii?q?QXAQeE/Woc7l6UPFSr+kEa4nPRdZyc6eNqtKbcXkjVZcS/flItjeZ2OxlH22BR?=
 =?us-ascii?q?aH3b6MaIvqe2MA3CTSEkQEkgYT/WqYOgg6HCuuv2XeDDl2H1L1f0zs6fV+qG+8?=
 =?us-ascii?q?TkIs0g6FdVNh2KSv9h4Vn/OcTegT0awCuCsmrzV0H1O939bNBtqEpgpherhcYN?=
 =?us-ascii?q?wn7FdG02LZqxJyPpi6I69+gV4edhx9v1ny2BVvFoVAjc8qoWs3wwVoN6KXzklN?=
 =?us-ascii?q?dzOC0pD2Ib3YNG/y8Qura67X3FHezdmX9r0O6PQ+t1XsogWpGlA+/HVg1tlfy2?=
 =?us-ascii?q?Gc6YnSDAoOTZLxVV469wR7p7HfZSk9+4PU1H12PamoqDPC3MgpBO8kyhamcNdS?=
 =?us-ascii?q?K6eEFA70E80HCMmiMu0qm161bh0aOOBe7rI7P8Sjd/Gewq6kIP5gnC66jWRA+I?=
 =?us-ascii?q?1yyEaM+DRzS+HW35cJ2eqX3haaWDjmilehscf3mZ5faDEWH2q/zzXkBYFLaq1z?=
 =?us-ascii?q?e4YLFXmhI8mtytpigJ7tXmZS9ES/CFMexM+pZR2SYkT93A1Nz0gYvWarmCq4zz?=
 =?us-ascii?q?NulTEpobGS3CjPw+TkaRoGNXRHRGhkjVfwP4e0i8oWU1SvbwgsjBGl/1r1x7BH?=
 =?us-ascii?q?pKRjKGneWV1IfynqIG54SKu/q72Cb9RJ6Jw2qyVXUf2wbkyARb75vhQVzTnjH2?=
 =?us-ascii?q?xYxD0gczGqu5P5nwF1iW6HLXZzqmbZdt90xRvF+NPcQvtR1CIcRCZkkTnXGkS8?=
 =?us-ascii?q?P96x8NSUlpfPqOC/W3i6Vp1Odynm1oeAtCq95W13DhyzhfGzmtv7EQck1S/3zc?=
 =?us-ascii?q?VlVSLNrBzkeInky7y6Mf57fklvHFL86dB1Gpt9koszg5Ecw2MaiY+W/XoEkGfz?=
 =?us-ascii?q?N8tU2aTlYXoJRD4LxcPV4Qf/1E1iKHKJ25z2VnGHzsR9YNm6Z3sc2jgh4MBSFK?=
 =?us-ascii?q?eU8LtEkDN1o1WiqgLde/p9njYbyfY17H4agucJuBcizymHA7ASG1VYMjLolxiS?=
 =?us-ascii?q?89++q6BXbn61cbeszEp+gcyhDLaarwFfQnn5e40uHS9t7splNlLM32b+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM2Bt/KO6?=
 =?us-ascii?q?AhFCLDH0ad0c+irxjalAhMaZxJ6gHo9uGjgQWJvoTPSoEC8dtPj9NgaOFiE8pW?=
 =?us-ascii?q?mfGbbFAQCf70JmpWrVE5+3L3GXOGUZzdJ6SRmBI0xfhRoYXTQgkZ4/CwCq39fh?=
 =?us-ascii?q?cEZi6zAV5174rAZMy+1yOxn+VGffuBmnajMuRJeDKxpW6xlI513JPsyG8uJzAy?=
 =?us-ascii?q?ZY84W6owOXLWybYxlIAXsNWkyZHF3jOriu5d/d8+mXHOa+Lv3OYamQpuxaTfuH?=
 =?us-ascii?q?2ZWv0o5+9TaWKsqPJmViD+E82kdbX3B2AcHZlCsUSyANiyLBdc2bpAq/+i1qqM?=
 =?us-ascii?q?Cw6u/rVRnr5YuODbtSLNpu9wq3gaeFK+6fmiJ5JSxE2ZMLwH/C0KIf00IKiyFy?=
 =?us-ascii?q?azmtFqwNtC7KTKLNg69XEgQUayVpOMtT6KI82AZNNNXfitP00L54k/E0B01EVV?=
 =?us-ascii?q?znhsGme8gKL3uhO1PAAUaBLK6GKiHTw8HrfaO8TqVdjOVKuB2xujabEE7jMi6A?=
 =?us-ascii?q?lznzUBCvPv9DjDuGPBxFo4y9dhdtCW7+TNPpcBG7Mdl3jSEozr0wnH/FKWkcMT?=
 =?us-ascii?q?1keUNXsrKQ9T9Ygul4G2FZ9HVlMPKLmzyH4OjYMJoWtfprDz9wl+Jb5nQ61rRU?=
 =?us-ascii?q?4DtFRPxzhCvdsNpur0u6nemIzzptSABOpSpThIKXoUViPr3U9oVBWXbB5h4C8X?=
 =?us-ascii?q?+cBAgKp9R7DN3ioKRQytnJlKLuJzZO6dPU/c0AB8fKLMKLKmYuMR3sGDTMFgsK?=
 =?us-ascii?q?USarNX3Dh0xaiPyT9mearp4/qpjtnpoBUr5aVFwvGfMcBURoB9gCIJZxXjM5nr?=
 =?us-ascii?q?+Xls8I5XyirBbPQMVWpIzIVvWXAaanFDHMibhCegtNwr7iK4kXHpP01lYkaVRg?=
 =?us-ascii?q?monOXU3KUoNjuCpkOyAurUoF02J5R212+0v/dgak5jdHGuS5kR02og9/Z/k9+j?=
 =?us-ascii?q?Dx5Vs+OlvNom03ikZnyoatuiyYbDOkdPT4ZopRESeh8hVoPw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAACu/v9bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDeYgYX4spgg0UiHyFLIkIFIFdFhgNBgGHdCI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiSCYwMDAQIgBAsBDQEBNwEFCQEBHwUCBSECA?=
 =?us-ascii?q?gMMEiURGQWDHAGBaQMVBAEKpRdwfAwngnYBAQWBMAGDVQ2CFAiBC4Zggw+BHBe?=
 =?us-ascii?q?Bf4Z6RwQYgRQBEgFsgjeCV4ktljIYLgmGfocIgyEjgVpNhEOKMiyKPIJwgQuJa?=
 =?us-ascii?q?4FGgRxxMxoIKAiDJwkKgggJGoNKhRSFQD8yAQEIeAMBASETikiCPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AQAACu/v9bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDeYgYX4spgg0UiHyFLIkIFIFdFhgNBgGHdCI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiSCYwMDAQIgBAsBDQEBNwEFCQEBHwUCBSECAgMMEiURGQWDHAG?=
 =?us-ascii?q?BaQMVBAEKpRdwfAwngnYBAQWBMAGDVQ2CFAiBC4Zggw+BHBeBf4Z6RwQYgRQBE?=
 =?us-ascii?q?gFsgjeCV4ktljIYLgmGfocIgyEjgVpNhEOKMiyKPIJwgQuJa4FGgRxxMxoIKAi?=
 =?us-ascii?q?DJwkKgggJGoNKhRSFQD8yAQEIeAMBASETikiCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="64564903"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 29 Nov 2018 07:02:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730873AbeK3CHK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 21:07:10 -0500
Received: from mail.kernel.org ([198.145.29.99]:45842 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729761AbeK3BXf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 20:23:35 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 3B0E0208E7;
        Thu, 29 Nov 2018 14:18:04 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543501084;
        bh=ICTylHP/XZIiWhY7b/M9Evh6H8xIdUeCXumnl4B1Nxo=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=klbOWp1w71GrTxzOO1SlPRcV41VRpTzraJF46Ieyf8LDF66XKQU6yEt0MHvdGHfUU
         ZHtzgaeDFeuwd92GlsiBABDeS77aHZqUI1b4tZBWxb/mTBSNIzJ7dZHlK2HpX8Zydx
         ZD3ZObT2yy8mAO+F3PdSUYq18s91KtpkyPqnQnbI=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org,
        Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>,
        syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Tigran Aivazian <aivazian.tigran@gmail.com>,
        Matthew Wilcox <willy@infradead.org>,
        Linus Torvalds <torvalds@linux-foundation.org>
Subject: [PATCH 4.4 06/86] bfs: add sanity check at bfs_fill_super()
Date: Thu, 29 Nov 2018 15:11:31 +0100
Message-Id: <20181129140110.438088150@linuxfoundation.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181129140109.832117862@linuxfoundation.org>
References: <20181129140109.832117862@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.4-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

commit 9f2df09a33aa2c76ce6385d382693f98d7f2f07e upstream.

syzbot is reporting too large memory allocation at bfs_fill_super() [1].
Since file system image is corrupted such that bfs_sb->s_start == 0,
bfs_fill_super() is trying to allocate 8MB of continuous memory. Fix
this by adding a sanity check on bfs_sb->s_start, __GFP_NOWARN and
printf().

[1] https://syzkaller.appspot.com/bug?id=16a87c236b951351374a84c8a32f40edbc034e96

Link: http://lkml.kernel.org/r/1525862104-3407-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Reported-by: syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>
Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
Cc: Tigran Aivazian <aivazian.tigran@gmail.com>
Cc: Matthew Wilcox <willy@infradead.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/bfs/inode.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- a/fs/bfs/inode.c
+++ b/fs/bfs/inode.c
@@ -350,7 +350,8 @@ static int bfs_fill_super(struct super_b
 
 	s->s_magic = BFS_MAGIC;
 
-	if (le32_to_cpu(bfs_sb->s_start) > le32_to_cpu(bfs_sb->s_end)) {
+	if (le32_to_cpu(bfs_sb->s_start) > le32_to_cpu(bfs_sb->s_end) ||
+	    le32_to_cpu(bfs_sb->s_start) < BFS_BSIZE) {
 		printf("Superblock is corrupted\n");
 		goto out1;
 	}
@@ -359,9 +360,11 @@ static int bfs_fill_super(struct super_b
 					sizeof(struct bfs_inode)
 					+ BFS_ROOT_INO - 1;
 	imap_len = (info->si_lasti / 8) + 1;
-	info->si_imap = kzalloc(imap_len, GFP_KERNEL);
-	if (!info->si_imap)
+	info->si_imap = kzalloc(imap_len, GFP_KERNEL | __GFP_NOWARN);
+	if (!info->si_imap) {
+		printf("Cannot allocate %u bytes\n", imap_len);
 		goto out1;
+	}
 	for (i = 0; i < BFS_ROOT_INO; i++)
 		set_bit(i, info->si_imap);
 


