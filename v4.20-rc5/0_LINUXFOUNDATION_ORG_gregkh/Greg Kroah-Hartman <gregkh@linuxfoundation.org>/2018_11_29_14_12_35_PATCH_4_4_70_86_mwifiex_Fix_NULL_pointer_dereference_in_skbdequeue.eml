Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:43:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A5794580213;
	Thu, 29 Nov 2018 06:19:38 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 06:19:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3As136UBfQQG3yzU7JInpeI0iSlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+bBON2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzqVQBogexCwa3BOP3yDJFnWP20K403ug9CwzLxg4tEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPi0wqnS0zrDYO5d1zLn6IjPaB8hoeiAU7BqfsrL1UkvEhnKjlON?=
 =?us-ascii?q?ooHiMDOVzPoCs2eY7+pgTu+vj28nqwdsojmgyMcsjZTJhoQIxV/e6SV5wYE1Jd?=
 =?us-ascii?q?uiRE58e96kH4JduieHPIV1WsMvW39ktDo+x7EcpJK2cjYGxI46yxPcd/CLaYmF?=
 =?us-ascii?q?7xD7WOuSLzp0nnFodbOlixux9UWs0PDwWtW23VtMsyFLiMPDtmoX2BzW8sWHSu?=
 =?us-ascii?q?Vy/kOm2TuXyQDT5f9LIVoumarYNZEh2LgwmYQXsUjZGS/2gkr2gLeXdkUi5Oeo?=
 =?us-ascii?q?9/zqbqv6qpKYLYN4lw/zPro0lsCiAuk0LhICUmmZ9Oik0b3s50z5QLFEjv0sla?=
 =?us-ascii?q?nZtYjXJcAapq6/Hg9U3Z8v6xWhADe81tQXg30HIEtCeBOJiYjmJUvOLevmDfew?=
 =?us-ascii?q?nVusii1nx/PYMb37BJXCMHzDnK3mfbZn5E5Q0BAzwsxH55JIFrEBJ+r+WkvwtN?=
 =?us-ascii?q?zbEBA1KQO1w/v8BdV514MeX3+PA6CDPKPTt1+I+vwgI+2WaIAJvzb9LuAv5+Ty?=
 =?us-ascii?q?gn8hhV8dYa6p0IMXaH+iH/RmP1+WYX32jtcBDGcFpAw+TOPxhV2GUD5TYWuyXq?=
 =?us-ascii?q?0m6jE6DoKmEZnMRoS3jLOd2ye7G4VcZnpaBVCUDXfoa4KEVu8OaCKVPMBtiD8E?=
 =?us-ascii?q?Vb+nS48n0hGjrwv6y7thLurJ9SwUr5Pj1N5p5+LNkRE+7yB7D8OY02uVVWF7gn?=
 =?us-ascii?q?sIRyMq3KB4uUFy0EyD0ah/g/xbD9BT/elGUgUhOJ7Yzux6Dc3yWw3bcteITlam?=
 =?us-ascii?q?XsupATUrQt0txN8OZl53G8++gRDbwyqqH7gVmqSIBJMu9KLQxXzxJ8dnxHbA26?=
 =?us-ascii?q?kslF0mQspJNW27ia9z7QnTB4jVk0qHk6amb7gT3CnI9G2b12qBoFlYUBJsUaXC?=
 =?us-ascii?q?RX0Qe1HZrcrn6U/YT7+hE7InMhBfxs6ELadKbt7pjVBCRPr4PNTeYmSxm3q/BB?=
 =?us-ascii?q?qSx7OMapbqdHsZ3CnHFEcElAUT926cNQciHiehv37eDDt2GF3yeUzs7/dxpGm7?=
 =?us-ascii?q?TkAuyQGKdFNu17yu9x4RhPycTe4T370etCcgrTV0AEiy39bMB9WcoApheb1WYc?=
 =?us-ascii?q?kh71dfyWLZqwt9M4S8L6Bjg14edBh3v0Pu1hltFoVMi88qrGkuzApzL6KY30hM?=
 =?us-ascii?q?dzeZ3ZD2J73WJXP+/BGpa67KxF7e1Mya9bsI6PQ9s1/jph2mFlI+83V71NlYy2?=
 =?us-ascii?q?GT5pHUAwsdT53wUlw7+ANnp77HeCY94YDU1XpyMaSvtj/C2tQpBPYqyxq6ftdf?=
 =?us-ascii?q?Nr+EGxH2E8EAG8euL+kqkUCzbh0YJOBS6LI0P8S+evqGxa6nJvpvkCinjGRH+o?=
 =?us-ascii?q?991E2M+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jI9e2xtpinZHtQWNX9Fm5C1MAxsCpYxuSY0Xh0gJK0UQYvGKomTG/zz?=
 =?us-ascii?q?xyiDwpqquf3CrTw+XtbhYHO2hLRHV8glfoO4S7k9caXE2wZQgziBSl/Vr6x7Rc?=
 =?us-ascii?q?pKlnL2jTQF1EfijsI2F5T6uwsKGPY8pO6JMurCVWX/6wYVGcSr7hvRQa1znvEH?=
 =?us-ascii?q?dZxDA+bzuqoIn2nwRmiGKBK3Z+tHjZdttqxRfc59zcQuRd3iEcSyl7ijnXB168?=
 =?us-ascii?q?MMev/diPk5fDs+a+V3+uV5FJcCnry5+AuzW/5WFwHRK/mPWzkMX9EQcmyS/7y8?=
 =?us-ascii?q?VqVSLQoRf8eIbr0L62MeBmfkluH1L878t6Godjkoo/np0Q2H4ahomL8noDi2v8?=
 =?us-ascii?q?LdJb2afmZnoXWTEL28LV4BTi2EB7LXKG3YP5Wm+dwst8fda6ZGwW1zk578BLDq?=
 =?us-ascii?q?eU8bNFkTF0olq+sQLef/x9ki0Bxvsp7X4Qm/sJtxY1ziWBHrASGlFVPSntlxSL?=
 =?us-ascii?q?9d+ytqtWa3i0cbisykV+h8uuA6+YogFTQ3v5fpYiHSlt7sRwKl7M0Xvz6p36d9?=
 =?us-ascii?q?nUd94cqhqUkxLYhehPNJ0xjuYKhTZgOW/loX0lzOs7gQZv3J6guoiHNn5t/Lm4?=
 =?us-ascii?q?AhNDMj31ZsUT+izijKpEn8aW2ZyvEYtlGjkRQJToSveoGioItfv7LwaODCE8qn?=
 =?us-ascii?q?CDFLXEBwCf70Nmr2/VH5CvKnGaP30ZzdRkRBmAK01TmgEUXDMmnpEnEgCm3tDu?=
 =?us-ascii?q?cEB85joJ/F73tgNMyv50Nxn4Smrfph2najIqR5iENhZW8htO50TIMcyd8+JzGT?=
 =?us-ascii?q?tX/oa6oQyJK2ybYRlIDG4TVkyFAVDjIqeh5d3a/+eEAeq+KuPEYa+SpuxGS/eI?=
 =?us-ascii?q?2ZWv35Nm/jaLK8WPJ2RiAOc92kZZRnB5HMLZmzoURiwTliLNadObpRim9i12qM?=
 =?us-ascii?q?C/7OrkWAb16YSTDLtSNM1l+wqqjqebK+6QmCF5JC5Y1pwSxH/Iy7sf3F8IhyFt?=
 =?us-ascii?q?bTmtFrsAujDXTKLNga9aFBobayJ1NMtV4KMwxAhNOcjHitzr0r50lOI6C1BAVV?=
 =?us-ascii?q?b5gMGmedQKI32hNFPAHEuELqmGKibRw87pYaKwU7lQjORPuh20uDabFVLjPzuZ?=
 =?us-ascii?q?mznoURCvLf9DjCWBMBNCv4G9dw5nCXL/Q9L+dh27LNh3gCUqwb01g3PGL3ITPS?=
 =?us-ascii?q?JgfENNsLKQ6zhVgvF+G2xH83pkIvOImyef7+nENJkWteFnDThzl+Jf+H460ada?=
 =?us-ascii?q?7DlYRPxpnyvftt5vrEugkumKyzpnVgJBqzdLhI2Ru0ViNr7U9p1BWXbC4RIM4n?=
 =?us-ascii?q?+cCxUMp9t5FNLvv7pcxcTIlKL2e39+9IfQ/M0BF43XJdiBPX4JLxXkAnjXARED?=
 =?us-ascii?q?QDrtMnvQ1GJHl/TH2WeYodAZsJ/lmN8uQ6VHUVUzXqcVEElqH9wqJJZxQyMqlq?=
 =?us-ascii?q?OdgMcU5H246h7LS5MJ7dj8SvuODKC3e36ihr5eak5NmOugIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADs9P9bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng3mIGF+LKYINFJcwgXEWGBMBh3QiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAwMBAiAECwENAQE3AQUJAQEfBQIFIQICAwxIGQWDH?=
 =?us-ascii?q?IICBAGlIHB8DCeCdgEBBYcoCIELhmCDD4EcF4F/gRGIYII3gleJLZZ4CZEnI4F?=
 =?us-ascii?q?ahRCKMiyYIoFGgg0zGggoCIMnghuJAYVAPzKBAgMBASETjQYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAADs9P9bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng3mIGF+LKYINFJcwgXEWGBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiAECwENAQE3AQUJAQEfBQIFIQICAwxIGQWDHIICBAGlIHB8DCe?=
 =?us-ascii?q?CdgEBBYcoCIELhmCDD4EcF4F/gRGIYII3gleJLZZ4CZEnI4FahRCKMiyYIoFGg?=
 =?us-ascii?q?g0zGggoCIMnghuJAYVAPzKBAgMBASETjQYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="53148305"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 06:19:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731110AbeK3BZB (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 20:25:01 -0500
Received: from mail.kernel.org ([198.145.29.99]:48194 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729806AbeK3BZA (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 20:25:00 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 584EF21104;
        Thu, 29 Nov 2018 14:19:29 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543501169;
        bh=b82iIQVtNvid4ttStAFnfk8RB448mjrN1mMo8Qh7nOY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=S6RD6gjZIAwD5+WhYmj3sJslhYBNxNAf8EEyw/0jcSfktE+Ro8i9VamoyvDs2q6zO
         qj6yY2A/z442F+8ZFBcL9o+v+a1u5P/MeAvqsFnlvwAhq0YaGdy9r0H9jFpj6x7UsK
         HRc0WBXbCoIHJdKeXCRXek6k1uQ79dt7cT/jxnr8=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Amitkumar Karwar <akarwar@marvell.com>,
        Kalle Valo <kvalo@codeaurora.org>,
        Amit Pundir <amit.pundir@linaro.org>
Subject: [PATCH 4.4 70/86] mwifiex: Fix NULL pointer dereference in skb_dequeue()
Date: Thu, 29 Nov 2018 15:12:35 +0100
Message-Id: <20181129140115.694668828@linuxfoundation.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181129140109.832117862@linuxfoundation.org>
References: <20181129140109.832117862@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.4-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Amitkumar Karwar <akarwar@marvell.com>

commit c44c040300d7afd79294710313a4989683e2afb1 upstream.

At couple of places in cleanup path, we are just going through the
skb queue and freeing them without unlinking. This leads to a crash
when other thread tries to do skb_dequeue() and use already freed node.

The problem is freed by unlinking skb before freeing it.

Signed-off-by: Amitkumar Karwar <akarwar@marvell.com>
Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
[AmitP: Refactored to fix driver file path in linux-4.4.y]
Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/net/wireless/mwifiex/cfg80211.c |    4 +++-
 drivers/net/wireless/mwifiex/wmm.c      |   12 +++++++++---
 2 files changed, 12 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/mwifiex/cfg80211.c
+++ b/drivers/net/wireless/mwifiex/cfg80211.c
@@ -2839,8 +2839,10 @@ int mwifiex_del_virtual_intf(struct wiph
 
 	mwifiex_stop_net_dev_queue(priv->netdev, adapter);
 
-	skb_queue_walk_safe(&priv->bypass_txq, skb, tmp)
+	skb_queue_walk_safe(&priv->bypass_txq, skb, tmp) {
+		skb_unlink(skb, &priv->bypass_txq);
 		mwifiex_write_data_complete(priv->adapter, skb, 0, -1);
+	}
 
 	if (netif_carrier_ok(priv->netdev))
 		netif_carrier_off(priv->netdev);
--- a/drivers/net/wireless/mwifiex/wmm.c
+++ b/drivers/net/wireless/mwifiex/wmm.c
@@ -501,8 +501,10 @@ mwifiex_wmm_del_pkts_in_ralist_node(stru
 	struct mwifiex_adapter *adapter = priv->adapter;
 	struct sk_buff *skb, *tmp;
 
-	skb_queue_walk_safe(&ra_list->skb_head, skb, tmp)
+	skb_queue_walk_safe(&ra_list->skb_head, skb, tmp) {
+		skb_unlink(skb, &ra_list->skb_head);
 		mwifiex_write_data_complete(adapter, skb, 0, -1);
+	}
 }
 
 /*
@@ -598,11 +600,15 @@ mwifiex_clean_txrx(struct mwifiex_privat
 		priv->adapter->if_ops.clean_pcie_ring(priv->adapter);
 	spin_unlock_irqrestore(&priv->wmm.ra_list_spinlock, flags);
 
-	skb_queue_walk_safe(&priv->tdls_txq, skb, tmp)
+	skb_queue_walk_safe(&priv->tdls_txq, skb, tmp) {
+		skb_unlink(skb, &priv->tdls_txq);
 		mwifiex_write_data_complete(priv->adapter, skb, 0, -1);
+	}
 
-	skb_queue_walk_safe(&priv->bypass_txq, skb, tmp)
+	skb_queue_walk_safe(&priv->bypass_txq, skb, tmp) {
+		skb_unlink(skb, &priv->bypass_txq);
 		mwifiex_write_data_complete(priv->adapter, skb, 0, -1);
+	}
 	atomic_set(&priv->adapter->bypass_tx_pending, 0);
 
 	idr_for_each(&priv->ack_status_frames, mwifiex_free_ack_frame, NULL);


