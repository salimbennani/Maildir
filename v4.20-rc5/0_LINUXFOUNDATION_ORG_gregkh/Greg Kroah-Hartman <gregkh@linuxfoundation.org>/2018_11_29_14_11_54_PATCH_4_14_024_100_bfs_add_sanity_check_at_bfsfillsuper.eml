Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:45:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DCF2E580213;
	Thu, 29 Nov 2018 06:47:09 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 06:47:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AmBbnNxJwkRYCulaDcdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/TzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvdxeb7Tfc4BRWpZQMleSzBBDI27?=
 =?us-ascii?q?b4sKFeUBPOBYpJT5q1YBqRayAA+hD/7txDBVnH/7xa003fo8Hw/I3wIuGNABsH?=
 =?us-ascii?q?rao9r6KKgcXvu1zLHKwDjYc/Nb2jnw5JTSfx07o/yBW697f8rLyUkoEgPIllSe?=
 =?us-ascii?q?qZb7MDOay+8DtnKb7+16WuKvkmIpqRt+oiKzxscpkIbJgJ8ex1fL9SVj3ok1Kt?=
 =?us-ascii?q?64SE5gbN6gEZtQsTyaNoR4QsMlXmFovjs1xacauZ66eygKzo4rxxnFa/yIaoWF?=
 =?us-ascii?q?5A/oWuiWITd9nn1lebS/ig6x8Ue+0O38UNe70FJQoipCiNnMuWgB2AbL6sifUf?=
 =?us-ascii?q?t95kCh2SqV2w/P7eFEJEY5nrfYJZ452rM8iIYfvEDZEiPrlkj6krWaelgn9+S0?=
 =?us-ascii?q?8ejqY7frqoefOoJ6kA3zMaUjlta8DOk8KAQCQnSX9Oa62bb+50P2Wq9Kgeczkq?=
 =?us-ascii?q?TBsJDVO8AbpqmhDg9L3YYs9Qy/Ay2l0NsGh3kHKkxKeBadg4juIVHOL+j0Dfa5?=
 =?us-ascii?q?g1uyjDdm3+7KMqHlD5nXM3TOnqntcaxg50Nf1AY/19FS6pBMBrEEOv3zW0vxtN?=
 =?us-ascii?q?LCDh8+Ngy52+LnCNR71oMDVmODG6yZP73IsV+O+O0vJ/CAZIgbuTb7Nfcl/eXj?=
 =?us-ascii?q?jWE2mVADZ6mlx5gXZ26iHvRgPUqZZWDggtAbEWcFpgY+VvDliEWeUT5PYHa/R6?=
 =?us-ascii?q?Y85jA4CI24F4vCSZ2tjaeF3Ce6GJ1We29HBkqNEXfua4WLRfMMZDiOLc9mlzwO?=
 =?us-ascii?q?TaKhRJM51RGyqA/6zKJqLurO9S0ZqZLszt916/fTlREv7zN0Ccud3nqJT2F1mG?=
 =?us-ascii?q?MIWjA30Lp+oUx71leMz6x4j+ZEGtxU4vNDSh06OoLEz+xmF9DyXRrMftWOSFm4?=
 =?us-ascii?q?WNmmAjYxTtQ3w98JeEt9H9Sijhbe3yulGbMVlrqLBIAq/aLYxXT+O8F9y3Pe3q?=
 =?us-ascii?q?k7k1YmWtdPNXGhhqNn7QfTHI7Jk0Kal6qwb6QTxizN+XyHzWqPukFYTQFxXb/E?=
 =?us-ascii?q?XXAZekvZs9D56lneQL+pDLQtKhFBxtKaKqtWdt3pik1LRPT5N9TYeW6xn2awCg?=
 =?us-ascii?q?yOxrODd4fqf2Qd3CPACEkLiQwT/HCGNRQgCSeluW7REDtuFVf3aUP27eZ+sG+7?=
 =?us-ascii?q?TlMzzwySckJuzaS19QAPifycUfwT2KkEtzknqzlzGFa93NfWC96bqgplfaVcZ8?=
 =?us-ascii?q?494Vhd2WLYsQx9IoKvL6R4ilECdAR3ulvk1w9rBYVYjcgqsHQqwRJvJq2CzlNO?=
 =?us-ascii?q?aSmU3ZDqNb3RMWn94havZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3p63bYik44IPUyX1sMKmuvj/ewd4pA/ElyhKhf9dZ?=
 =?us-ascii?q?P6OJDwvyE8wcB8izJ+0mgVmpbhQYPO9M8K44Jd+pd/yD2KSzJuZvgCqmjXhb4I?=
 =?us-ascii?q?B6yk+D7S58RfDH3pkbw/CUxBCIVyrhg1i7tMD3modEZS8JE2q7yCjkApNRZ6Jo?=
 =?us-ascii?q?cYYKD2euP9O4xtFki5HxXH5Y8UapB0ka18+xZRqSc1v90BVQ1EQKu3CohTG0zj?=
 =?us-ascii?q?10kz4zqKqf0zfDw+DjdBoBJ25KS3NujVbqIYiokd8aWFKkYBQulBug/Uz63bRU?=
 =?us-ascii?q?pLxjL2nPRkdFZzL2L2B+XaSqrLqNfslP5IkusSpJSuS8YEmWRaLnrBsezizsAX?=
 =?us-ascii?q?FexDc9dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpbDs+CyTWKgWodIcSn2y4ONry+75WxsAR2ikPG/gNznEQ4m0SDl09?=
 =?us-ascii?q?lmTznHrBH5YoPzzaS1LfpnflV0BF/788d6GJtxkpEzhJET3ngWnI6V8mAEkWfw?=
 =?us-ascii?q?MNVb37zxbHwWSD4Pwt7V5hXl2UJ5InKIwYL5SmuSws97a9amZWMW3zo379pWB6?=
 =?us-ascii?q?eM8LxEgSx1r0K4rA3LZvhxhDUdyfoo6HMBh+EJuQwtzjiSA7wIHElYOzDsmAqM?=
 =?us-ascii?q?79yksKpXY2Ove6Cq1EVihdChEK2CogZEVXb6YJgiHDV87sViMF3W1n3z5ZrpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5Ke5?=
 =?us-ascii?q?Ah9bNjLvfc8S9C/ijb1CnsmIxYCgBYtuGi8EXJbzSfKoETQStenoNgqUET08rG?=
 =?us-ascii?q?ubFqTbHQOF9EhmqHfPGYixN36LPHkZ0cliRB6FKUxDhwAUWS82n58jGQCs2czh?=
 =?us-ascii?q?a1x55jEK6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSWJWOBYARICXwJVlaAB1D+JbSu4djA8+6FBuuxNffOYLOOqfBAWPeM?=
 =?us-ascii?q?356gzoxm/zOUPMWVInZiF+E72lZEXX1hGcTWgTAPRDIMly7Xc86XvhS8+jB0rs?=
 =?us-ascii?q?Ci9vTkQhnv6JCLC7tTN9Vv5h+3jb2CN+6WmCZ2NzJY2okQyn/PzbgVxEQShD12?=
 =?us-ascii?q?dzmxDbQAsjbATaLXmq9KFh4bdjl8NM1S46In2QlNP8Hbh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1Ztx2utjaaEE/jPTWD?=
 =?us-ascii?q?myPqVxC1NuFMgz+UPAZDuIGmaRttDWnjTNT7ahy0KtN3jDs2waEqiXPOL2ITLT?=
 =?us-ascii?q?98c0ZVpL2K8SxYmul/G3BG7nd9N+aEhj2W7/PGJZcWq/drBiV0mvle4HQ7zbtV?=
 =?us-ascii?q?8S5FSOZ0mCvUst5hvVWmnvOTxTpgVRpEsixLi56TvUV+JaXZ8YFNWWrF/BII92?=
 =?us-ascii?q?mfFw4GqMdlCtLxvaBd0dzPlKP1KDdf/NPY58ocB87IKM2ZNHotKwbmGDnRDAEd?=
 =?us-ascii?q?Vz6kKXnfh1BBkPGV7nCUroI1qp7pmJoPTL9UTF00FvMABURjE9wPO5N3XjIikb?=
 =?us-ascii?q?6Gg88E/3u+rB/NRMpEupDLTO6dAfLqKGXRsb4RYxoO3KO9LokJMID/81JtZ0M8?=
 =?us-ascii?q?n4nQHUfUG9dXrX5PdAgx9WpX/Xc2bXc00kKgSgq3/HoaE7bgkQQ7hQh+SeAs8i?=
 =?us-ascii?q?r87VAqIFbDuCo3lg82g9qz0mPZSyL4MKrlBdIeMCHzrUVkd86iTg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAABm+/9bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDeYgYX4spgg0UiHyFLIkIFIFdFhgNBgGHdCI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiSCYwMDAQIgBAsBDQEBNwEFCQEBHwUCBSECA?=
 =?us-ascii?q?gMMEiURGQWDHAGBaQMVBAEKpRVwfAwngnYBAQWBMAGDVg2CFAiBC4Zggw+BHBe?=
 =?us-ascii?q?Bf4Z6RwQYgRQBEgFsgjeCV4ktljIYLgmGfocIgyEjgVpNhEOKMiyKPIJwgQuJa?=
 =?us-ascii?q?4FGgRxxMxoIKAiDJwkKgggJGoNKhRSFQD8yAQEIeAMBASETikiCPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AQAABm+/9bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDeYgYX4spgg0UiHyFLIkIFIFdFhgNBgGHdCI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiSCYwMDAQIgBAsBDQEBNwEFCQEBHwUCBSECAgMMEiURGQWDHAG?=
 =?us-ascii?q?BaQMVBAEKpRVwfAwngnYBAQWBMAGDVg2CFAiBC4Zggw+BHBeBf4Z6RwQYgRQBE?=
 =?us-ascii?q?gFsgjeCV4ktljIYLgmGfocIgyEjgVpNhEOKMiyKPIJwgQuJa4FGgRxxMxoIKAi?=
 =?us-ascii?q?DJwkKgggJGoNKhRSFQD8yAQEIeAMBASETikiCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="54234142"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 06:46:58 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732838AbeK3Bad (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 20:30:33 -0500
Received: from mail.kernel.org ([198.145.29.99]:57642 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731565AbeK3Bad (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 20:30:33 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 07DD22146D;
        Thu, 29 Nov 2018 14:25:00 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543501501;
        bh=cweXbTBHDAExAan8BXB3GKzno8wACnnjsw2pALUFt7E=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=toMSd9nBneusnpQp4fi4bHk8rJTEHfwKEftgiISQAlSHrNbriQevgXBQO9JsM9qIZ
         6x69Crevp97FlD1mMCc9N+zsRrU4dhVX4lv2qRwecSeNYI1Tz8LaigeMB4wAt0wNl+
         A05YYzwN6KqwjhaEwtSB10dJOY6mx/vrZ8MOlVYw=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org,
        Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>,
        syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Tigran Aivazian <aivazian.tigran@gmail.com>,
        Matthew Wilcox <willy@infradead.org>,
        Linus Torvalds <torvalds@linux-foundation.org>
Subject: [PATCH 4.14 024/100] bfs: add sanity check at bfs_fill_super()
Date: Thu, 29 Nov 2018 15:11:54 +0100
Message-Id: <20181129140100.827972866@linuxfoundation.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181129140058.768942700@linuxfoundation.org>
References: <20181129140058.768942700@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

commit 9f2df09a33aa2c76ce6385d382693f98d7f2f07e upstream.

syzbot is reporting too large memory allocation at bfs_fill_super() [1].
Since file system image is corrupted such that bfs_sb->s_start == 0,
bfs_fill_super() is trying to allocate 8MB of continuous memory. Fix
this by adding a sanity check on bfs_sb->s_start, __GFP_NOWARN and
printf().

[1] https://syzkaller.appspot.com/bug?id=16a87c236b951351374a84c8a32f40edbc034e96

Link: http://lkml.kernel.org/r/1525862104-3407-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Reported-by: syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>
Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
Cc: Tigran Aivazian <aivazian.tigran@gmail.com>
Cc: Matthew Wilcox <willy@infradead.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/bfs/inode.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- a/fs/bfs/inode.c
+++ b/fs/bfs/inode.c
@@ -350,7 +350,8 @@ static int bfs_fill_super(struct super_b
 
 	s->s_magic = BFS_MAGIC;
 
-	if (le32_to_cpu(bfs_sb->s_start) > le32_to_cpu(bfs_sb->s_end)) {
+	if (le32_to_cpu(bfs_sb->s_start) > le32_to_cpu(bfs_sb->s_end) ||
+	    le32_to_cpu(bfs_sb->s_start) < BFS_BSIZE) {
 		printf("Superblock is corrupted\n");
 		goto out1;
 	}
@@ -359,9 +360,11 @@ static int bfs_fill_super(struct super_b
 					sizeof(struct bfs_inode)
 					+ BFS_ROOT_INO - 1;
 	imap_len = (info->si_lasti / 8) + 1;
-	info->si_imap = kzalloc(imap_len, GFP_KERNEL);
-	if (!info->si_imap)
+	info->si_imap = kzalloc(imap_len, GFP_KERNEL | __GFP_NOWARN);
+	if (!info->si_imap) {
+		printf("Cannot allocate %u bytes\n", imap_len);
 		goto out1;
+	}
 	for (i = 0; i < BFS_ROOT_INO; i++)
 		set_bit(i, info->si_imap);
 


