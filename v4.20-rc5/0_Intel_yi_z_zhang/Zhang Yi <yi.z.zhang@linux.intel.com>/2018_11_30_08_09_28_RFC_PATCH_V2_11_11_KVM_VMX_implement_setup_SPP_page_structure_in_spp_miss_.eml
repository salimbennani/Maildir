Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:14:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 12639580213;
	Fri, 30 Nov 2018 00:12:51 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 00:12:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AY4pLLhT98UQTmLnqdCZKtqBZmNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBGFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRN9zY7Ue5mVOfhlc6/BYd8XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4TypFsOogG4BQmjGejgyD5IjWLx0Kw60uQtCwDH0BYhHtIOqn?=
 =?us-ascii?q?vUqtr1ObwWUeC0yqnI0DrCY+lX2Tf79IjHbBQhreuQUrJ3dMrc0E8iHB7GgFWI?=
 =?us-ascii?q?sYHpIS+Z2+AXv2SG4edsS/ijh3Mkpg1tuDSix8UhhpHUio8bxV3I7zh1zYg6KN?=
 =?us-ascii?q?GiVUJ2b9+pHIFNuy2GK4d7RN4pTXtytyYg0LIGvIa2fCgUx5QjwB7Sc+KHc4eW?=
 =?us-ascii?q?7RL5TuqRIil3hGhjeL2hgxa+60+gyvfzVsWs0VZKqDRKksXUu3wTyxDe7tKLRu?=
 =?us-ascii?q?Zz80u/wzqDygPe5v1eLU01l6fXM5shzaQxlpoXv0TDBCj2mEDuga+Sd0Uk/PWo?=
 =?us-ascii?q?6uv+brXluJCcLYl0hR/6Mqg3ncy+D+I4PRYUX2WA5+S826Ps/VfjTLVJkPI2iK?=
 =?us-ascii?q?/Zv47eJcgBoa65GQBV3p456xmjFzemzMgYnX4fIVJBeRKHjJbmN0vBIfDlFvq/?=
 =?us-ascii?q?h1WskDF2x/HJJLHhA5PNLmTdn7flZ7py90lcyA8rx9BF+51UEq0BIO70WkLptN?=
 =?us-ascii?q?zXFB45MxCuzObgEtl91p4eVniJAq+WK67StV6I5uQyI+iDfoMVuTD9K+Q76P7q?=
 =?us-ascii?q?l3M2hVgdfayx15sNdH+4BuhmI1meYXf0gNcBFnkFshA9TOztjl2CVzlTam22X6?=
 =?us-ascii?q?I94DE7FY2nAZ3CRoCrnLyOwiO7EodKaWBBD1CGCW3oeJmcW/cQdCKSJddsnSYf?=
 =?us-ascii?q?VbihTI8h1guitBXgxLplNefU/iwYtZT+1Nl6/eHTlBcy9SBqAMSZyW2CU2Z0nm?=
 =?us-ascii?q?YQTT8swK9/uVB9ykuE0aVggPxXD9pT6+lNUgc7L5HcyeN6Bsv2WgLAeNeJVVmn?=
 =?us-ascii?q?Ts+nATE3UtI+3dsOb1xhFNWlixDJxzCqDKMNl7yXGJw09brR0GXrKMZj1XnKzq?=
 =?us-ascii?q?khgEMgQstUK2KmgKlz9wzQB47Ml0WUjKKqdaUa3C7Q+2aP12uOvEdEUAFuVaXJ?=
 =?us-ascii?q?R2wQZkzTrd7h/EPNU6euCag7MgtG0cONN7FFasP3gllcRPfsItLeY3mvlGe2Hh?=
 =?us-ascii?q?uIwrKMbIz3e2QSxindCU4EkxwN8naCLwQxGiCho2fGBjx0CV3ve1/s8fV5qH6j?=
 =?us-ascii?q?Uk80zgSKb0p917q1+h8Zn+CcR+kU3rIevCchqjN0HFmm0tLSCtqAoRdhfapGbd?=
 =?us-ascii?q?M85ldHyXzWtwhnMpO8KKBig0YUcx5rsEP2yxV3FoJAnNAwo3Mu0gVzJryX0VNb?=
 =?us-ascii?q?ezyDwJD/J6fYKm/x/BCoda7bwVXe0NeQ+qcS5/U0sVTjvAe1FkU893VrycVa03?=
 =?us-ascii?q?yZ5p/SFgodTYrxUlor9xh9v7zbYjQ965nI2nF2MKi0siXN29QmBOY+zhagftFf?=
 =?us-ascii?q?ML6LFQPoEs0aAdSuJ/Ium1Szch0EO+VS/rYuP8y6b/uGxLKrPOF4kTK8jGRI/J?=
 =?us-ascii?q?py0liR+Cp7UOLI2YgKw+uZ3geeSzjzllOhvd3ploBeYjESGHGyySzlBI5Xe61z?=
 =?us-ascii?q?cpwHCWaoI82r2Np+g4ThVGJf9F6mH1kGwtOmeQKOb1zh2g1dzUQWoX29lSq41T?=
 =?us-ascii?q?B0iCwprqyE0SzKwuTicgcHO2FRSGlji1fsPZa7j9QAUEe0aAgpkQOv5VzmyKhD?=
 =?us-ascii?q?uKR/M27TTF9KfyfsNWFiUaiwtr2Yb85U8pwosiZXUOW6YV+ETL7wuB8a0yLlH2?=
 =?us-ascii?q?tDyzE3bTCqupPlnxNkjGKRNmp8rH3cecto3xfQ+MTcReJN3joBXCR5iSPYBl+m?=
 =?us-ascii?q?M9mr/NWUkYzOsuS/V2KnS51SfjPnzYKGtCun+2JqBQezkOy0mt3iCQI6yzP018?=
 =?us-ascii?q?F2VSXUqxbxeorr2L67Me59fkloGUXz68x1GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3WYw8thZMO1bnkY2y0j9MBKFL?=
 =?us-ascii?q?mb7KZfkiRruFq4ohncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zFZ+ndekDL2YowBTQnD5eoo5HS9r78VyK1bM0Hz16oH5d9?=
 =?us-ascii?q?jcd9MTthuIkxjei+hZMo4+lv0PhSB/I2LyoWUly/InjRxpxZy1p5KIK2Jp/KKk?=
 =?us-ascii?q?GBJYMiD1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS6EV8oHLKDZ+rLGubJGUDwdVhWRmdJ1FfgAYOUzUhhZM5EgGqxMr8?=
 =?us-ascii?q?cEZ2/DwR51j4qgdSxeJsLRXwTmDfpAKwYDcuVJefNAZW7h1F50rNMc2e6f9zHz?=
 =?us-ascii?q?hF/pK7qgyBMHebZwNODWEGQUGEA1HjPr+z5djP6eSYB+y+L+fQbrWKs+BRS/CI?=
 =?us-ascii?q?xZe32It84zmMLtmPPmVlD/Aj2kpMQ3F5G8famzUOUSAXlDjNb8mUpBii4C13s9?=
 =?us-ascii?q?u//e/vWALu44uPFrRTPc9u+xCwnaeMKeqQiDxlJjZf05MG3WXIx6QH3F4OlyFu?=
 =?us-ascii?q?cCGgHq4dtSHWVqLfhK9WAwQfayNyL8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDT38H3YKa8RadMg+lOqxKwuSiUE0n4MzSH?=
 =?us-ascii?q?ljnpUQ2vMO5WgCGaOhxepJ+ychJ3BWf/S9LmbwWxMMVrgj0u3b00mnTKOHYcMD?=
 =?us-ascii?q?dmdUNNq7yQ7SVAjfR+G2xO9HxlLeafliad7unYLIsWsPRxDiR1keJa/Go1y79P?=
 =?us-ascii?q?4C5YQ/x1nXiaktk7u1uhlPuOzDtPShdCqj9XwomMuAEqPKne8IVdcXzF4B4A42?=
 =?us-ascii?q?iWBxkQ4dBiD5mnvatR1sXnnqPvJDpM/tTY8NFaDM/Re+ydN390AxrgHjGcPQpN?=
 =?us-ascii?q?GS+qc3OZlUxUlv668nyTs4h8q57wlZ5IQbheAg9mXsgGA1hoSYRRaKx8WSkpxO?=
 =?us-ascii?q?aW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAAV8ABch0O0hNFiGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrJ4wRjAgpgT8BOJcygXEWGBMBh3QiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKS+CNiKCZQMDAQIkUgYJAQFQA1QHEgWDHIICBad+M4ovh2yEK?=
 =?us-ascii?q?3qBHIERMwGNOgKQHZAJBwINkSkYXnyPQoh5gQOOW4FGgg1wgzyCJxeOKjIBATE?=
 =?us-ascii?q?BAYEDAQGOAQEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAAAV8ABch0O0hNFiGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrJ4wRjAgpgT8BOJcygXEWGBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?S+CNiKCZQMDAQIkUgYJAQFQA1QHEgWDHIICBad+M4ovh2yEK3qBHIERMwGNOgK?=
 =?us-ascii?q?QHZAJBwINkSkYXnyPQoh5gQOOW4FGgg1wgzyCJxeOKjIBATEBAYEDAQGOAQEB?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="42971100"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 00:12:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727471AbeK3TSO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 14:18:14 -0500
Received: from mga07.intel.com ([134.134.136.100]:29561 "EHLO mga07.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727444AbeK3TSN (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 14:18:13 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
  by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 00:09:45 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="94509030"
Received: from linux.intel.com ([10.54.29.200])
  by orsmga007.jf.intel.com with ESMTP; 30 Nov 2018 00:09:45 -0800
Received: from dazhang1-ssd.sh.intel.com (unknown [10.239.48.128])
        by linux.intel.com (Postfix) with ESMTP id 3FFB5580213;
        Fri, 30 Nov 2018 00:09:43 -0800 (PST)
From: Zhang Yi <yi.z.zhang@linux.intel.com>
To: pbonzini@redhat.com, mdontu@bitdefender.com, ncitu@bitdefender.com
Cc: rkrcmar@redhat.com, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org, Zhang Yi <yi.z.zhang@linux.intel.com>
Subject: [RFC PATCH V2 11/11] KVM: VMX: implement setup SPP page structure in spp miss.
Date: Fri, 30 Nov 2018 16:09:28 +0800
Message-Id: <cfe03ace30dc441f12d11851933e041f2d7548c0.1543481993.git.yi.z.zhang@linux.intel.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <cover.1543481993.git.yi.z.zhang@linux.intel.com>
References: <cover.1543481993.git.yi.z.zhang@linux.intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

We also should setup SPP page structure while we catch
a SPP miss, some case, such as hotplug vcpu, should update
the SPP page table in SPP miss handler.

Signed-off-by: Zhang Yi <yi.z.zhang@linux.intel.com>
---
 arch/x86/include/asm/kvm_host.h |  2 ++
 arch/x86/kvm/mmu.c              | 12 ++++++++++++
 arch/x86/kvm/vmx.c              |  8 ++++++++
 3 files changed, 22 insertions(+)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index ce6d258..a09ea39 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1406,6 +1406,8 @@ int kvm_mmu_page_fault(struct kvm_vcpu *vcpu, gva_t gva, u64 error_code,
 int kvm_mmu_setup_spp_structure(struct kvm_vcpu *vcpu,
 				u32 access_map, gfn_t gfn);
 
+int kvm_mmu_get_spp_acsess_map(struct kvm *kvm, u32 *access_map, gfn_t gfn);
+
 void kvm_mmu_invlpg(struct kvm_vcpu *vcpu, gva_t gva);
 void kvm_mmu_invpcid_gva(struct kvm_vcpu *vcpu, gva_t gva, unsigned long pcid);
 void kvm_mmu_new_cr3(struct kvm_vcpu *vcpu, gpa_t new_cr3, bool skip_tlb_flush);
diff --git a/arch/x86/kvm/mmu.c b/arch/x86/kvm/mmu.c
index 287ee62..01cf85e 100644
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@ -4299,6 +4299,17 @@ static void mmu_spp_spte_set(u64 *sptep, u64 new_spte)
 	__set_spte(sptep, new_spte);
 }
 
+int kvm_mmu_get_spp_acsess_map(struct kvm *kvm, u32 *access_map, gfn_t gfn)
+{
+	struct kvm_memory_slot *slot;
+
+	slot = gfn_to_memslot(kvm, gfn);
+	*access_map = *gfn_to_subpage_wp_info(slot, gfn);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(kvm_mmu_get_spp_acsess_map);
+
 int kvm_mmu_setup_spp_structure(struct kvm_vcpu *vcpu,
 				u32 access_map, gfn_t gfn)
 {
@@ -4344,6 +4355,7 @@ int kvm_mmu_setup_spp_structure(struct kvm_vcpu *vcpu,
 	spin_unlock(&kvm->mmu_lock);
 	return -EFAULT;
 }
+EXPORT_SYMBOL_GPL(kvm_mmu_setup_spp_structure);
 
 int kvm_mmu_get_subpages(struct kvm *kvm, struct kvm_subpage *spp_info)
 {
diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index b660812..b0ab645 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -9706,6 +9706,9 @@ static int handle_invpcid(struct kvm_vcpu *vcpu)
 static int handle_spp(struct kvm_vcpu *vcpu)
 {
 	unsigned long exit_qualification;
+	gpa_t gpa;
+	gfn_t gfn;
+	u32 map;
 
 	exit_qualification = vmcs_readl(EXIT_QUALIFICATION);
 
@@ -9732,6 +9735,11 @@ static int handle_spp(struct kvm_vcpu *vcpu)
 		 * SPP table here.
 		 */
 		pr_debug("SPP: %s: SPPT Miss!!!\n", __func__);
+
+		gpa = vmcs_read64(GUEST_PHYSICAL_ADDRESS);
+		gfn = gpa >> PAGE_SHIFT;
+		kvm_mmu_get_spp_acsess_map(vcpu->kvm, &map, gfn);
+		kvm_mmu_setup_spp_structure(vcpu, map, gfn);
 		return 1;
 	}
 
-- 
2.7.4

