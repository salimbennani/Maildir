Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 21:53:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 58A3C5803C2
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 05:43:17 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 05:43:17 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A1Y3G+BJaz66rpZiAMdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXKv3yrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUclRWS5ODIOy?=
 =?us-ascii?q?YYUMEeQOIelWoZTlp1YMrxWzChSgCe3zxjBWnX/7xrE60/07HA3awAAsA9ADvX?=
 =?us-ascii?q?LJp9v1LqcSVuW1wbHPwzrZdfNZxS7x5ZTOch88u/GLR697f8zMyUk1CQzKlEiQ?=
 =?us-ascii?q?opHiMjOQzOsNqXSU4PBmVe2ykW4otRt9ojyyxsc2lIbGnJ8Vx0ve9Spn3Yk1Jc?=
 =?us-ascii?q?e3SFJhbdG4F5tQsjiXOo1rSc0hW2FloDg2xqEFtJKhYSQG1ZcqywTBZ/GJc4WE?=
 =?us-ascii?q?+A/vWeSJLTtmmH5ofKizihWy/ES61OHwSNe43ExXoidBktTBsG0G2QbJ5cidUP?=
 =?us-ascii?q?R9+1+s2TaR2ADX7eFJOUQ0lavAK5492b48jJUTsULeHiPsn0X2lqCWel0l+uiu?=
 =?us-ascii?q?9evnfq3rqoGAO4J3kA3yL7kil8+lDegmPAUDX3KX9fm+2bH7+E32WrRKjvk4kq?=
 =?us-ascii?q?nDt5DaINwWprenDA9Qz4Yv8guwACm40NsGmXkLNUlKeBWaj4jvJ17BPuv4AfC7?=
 =?us-ascii?q?g1Stkzdk2erKP7L8ApjVKnjDkbHhfaty6kJGyQozy8xf6IxQCr0bPP3zXUrxuc?=
 =?us-ascii?q?feDh8+NQy0zODnCMhn2oMZQ2KPDbeVMLnOvl+Q+uIvP+6MaZcRuDb8KPgq+eTi?=
 =?us-ascii?q?jHAkmVIGeamp3J0XaG23H/h8IkWZZ2bsjckFEWsQogU+S+nq2xW/VyVObSOyQ7?=
 =?us-ascii?q?4k/WN8T4anFpvYAIaqhrOHwWG8BJIRY2lHDlWFFzDvb5mFXPEXLzufJ9IknjEa?=
 =?us-ascii?q?WLzydok6yBv7sQb7z6ZgfPPZ/zBduZ/92dww/eDKiBwp6RRyCMKS1XzLSHt7yX?=
 =?us-ascii?q?gVTT0717wqvEpm112Y2rJ5ifELKdsGzulVXwJyDZ/HxvZ3DdP1ElbIZMuETRCl?=
 =?us-ascii?q?BM2nGjgrQ9QyxPcBZk98H5OpiRWVjASwBLpAsrWRD9kd9K7GXjDVOtxwwmuOgK?=
 =?us-ascii?q?wolVIvRMdVOCuim7Ry/hX7HYPFk0yF0a2tcPJPj2b26G6fwD/W7wljWwlqXPCA?=
 =?us-ascii?q?BChHaw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAACV9/tbhxHrdtBiHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwKoI4g3mId4shgg2HcYEbdo06gXMUGBSEQIQjIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCBsOL4I2BQIDGgEGglwBAgMBAiAEHwopAwMBAgYBAQoLDQICIgQCAgMBH?=
 =?us-ascii?q?QESAQUBHAYTBQOCTkuBagMVAQSZXzyLDXwzh3MNgQuBDhJ5in6CFoERgxKBS4E?=
 =?us-ascii?q?LgiiDBIJXApANj0cuBwKKKYNbgysYkQiOTYlUDyGBJYINMxojgQEGgjWCJxcSj?=
 =?us-ascii?q?g88MQGBBok/KymBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AkAACV9/tbhxHrdtBiHgEGBwaBUQkLAYEwKoI4g3mId4s?=
 =?us-ascii?q?hgg2HcYEbdo06gXMUGBSEQIQjIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2B?=
 =?us-ascii?q?QIDGgEGglwBAgMBAiAEHwopAwMBAgYBAQoLDQICIgQCAgMBHQESAQUBHAYTBQO?=
 =?us-ascii?q?CTkuBagMVAQSZXzyLDXwzh3MNgQuBDhJ5in6CFoERgxKBS4ELgiiDBIJXApANj?=
 =?us-ascii?q?0cuBwKKKYNbgysYkQiOTYlUDyGBJYINMxojgQEGgjWCJxcSjg88MQGBBok/Kym?=
 =?us-ascii?q?BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,282,1539673200"; 
   d="scan'208";a="54304476"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 05:43:16 -0800
Received: from localhost ([::1]:36024 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRHAR-00025o-IM
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 08:43:15 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37860)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gRH9n-000198-Aa
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 08:42:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gRH9k-00018J-2N
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 08:42:35 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:45715)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gRH9j-00015n-Qk
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 08:42:32 -0500
Received: by mail-qk1-f195.google.com with SMTP id y78so1486189qka.12
	for <qemu-devel@nongnu.org>; Mon, 26 Nov 2018 05:42:30 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=feA2xTYp26AvpDEDxXvoK2emuP//nZ0jsJ3gXZV9n1w=;
	b=ZZsV+J/r+33ibzV57iisGps8vyj9EmRboy9KZZWHdIzqZimDpmGYWH1lcoXa4YxdpD
	HhryXWU777M2GQM9BdBUFqqseLkfjdcy/lJJXiwKs+PWIwsycKV2tYig85U5Aywx7zDS
	GHySy39kZr+3RZMOxbRsX0E8g2G1JFSiCd0SCykr1EW5dFQ5QcvX+JaMCVcsyHigOvBh
	Lapt/RDOAFeQz8v3mM+2OHx3zKsG66KEkqxza2LE7/Feg/CZMRwgF+vgXfGYGkgQ5gB2
	kTTotGJ9Z0iQcZdr8NHPkMSaWzMjuoMIBQw/0p+2sGbvx2VPHdX/38OzFRjtHKDa5tpj
	pivQ==
X-Gm-Message-State: AA+aEWb4/KEuBADuZ2WM6lpOgeaX3amJ3vD1Fr2xsdHW7SKJlKMOByp/
	y9gtCY1YhoiXPkLPgTo3ryULWTQJMoQXwib692/UNA==
X-Google-Smtp-Source: AFSGD/UH5fkexwwiEoCZTBUb77GDNei7Cbo4sA/3K+swDC+0PO5z61uWBD5wq4L0JtPFEHI4joRYyoTIPRMiCkVlGdY=
X-Received: by 2002:a37:11dd:: with SMTP id 90mr24856526qkr.212.1543239750090; 
	Mon, 26 Nov 2018 05:42:30 -0800 (PST)
MIME-Version: 1.0
References: <cover.1541507990.git.artem.k.pisarenko@gmail.com>
	<ac67ff2d27dd51a0075d5d634355c9e4f7bb53de.1541507990.git.artem.k.pisarenko@gmail.com>
In-Reply-To: <ac67ff2d27dd51a0075d5d634355c9e4f7bb53de.1541507990.git.artem.k.pisarenko@gmail.com>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Mon, 26 Nov 2018 17:42:18 +0400
Message-ID: <CAMxuvawmnJ_7QUkLXV8tSAXmPjFyu_m31JZRWOfTMUiebegAFw@mail.gmail.com>
To: Artem Pisarenko <artem.k.pisarenko@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.222.195
Subject: Re: [Qemu-devel] [PATCH v3 2/2] tests/test-char: add muxed chardev
 testing for open/close
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Bonzini, Paolo" <pbonzini@redhat.com>, qemu-devel <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Nov 6, 2018 at 4:41 PM Artem Pisarenko
<artem.k.pisarenko@gmail.com> wrote:
>
> Validate that frontend callbacks for CHR_EVENT_OPENED/CHR_EVENT_CLOSED
> events are being issued when expected and in strictly pairing order.
>
> Signed-off-by: Artem Pisarenko <artem.k.pisarenko@gmail.com>

Reviewed-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>

> ---
>  tests/test-char.c | 80 +++++++++++++++++++++++++++++++++++++++++++++++++=
++++--
>  1 file changed, 78 insertions(+), 2 deletions(-)
>
> diff --git a/tests/test-char.c b/tests/test-char.c
> index 831e37f..657cb4c 100644
> --- a/tests/test-char.c
> +++ b/tests/test-char.c
> @@ -16,6 +16,9 @@ static bool quit;
>
>  typedef struct FeHandler {
>      int read_count;
> +    bool is_open;
> +    int openclose_count;
> +    bool openclose_mismatch;
>      int last_event;
>      char read_buf[128];
>  } FeHandler;
> @@ -49,10 +52,24 @@ static void fe_read(void *opaque, const uint8_t *buf,=
 int size)
>  static void fe_event(void *opaque, int event)
>  {
>      FeHandler *h =3D opaque;
> +    bool new_open_state;
>
>      h->last_event =3D event;
> -    if (event !=3D CHR_EVENT_BREAK) {
> +    switch (event) {
> +    case CHR_EVENT_BREAK:
> +        break;
> +    case CHR_EVENT_OPENED:
> +    case CHR_EVENT_CLOSED:
> +        h->openclose_count++;
> +        new_open_state =3D (event =3D=3D CHR_EVENT_OPENED);
> +        if (h->is_open =3D=3D new_open_state) {
> +            h->openclose_mismatch =3D true;
> +        }
> +        h->is_open =3D new_open_state;
> +        /* no break */
> +    default:
>          quit =3D true;
> +        break;
>      }
>  }
>
> @@ -161,7 +178,7 @@ static void char_mux_test(void)
>      QemuOpts *opts;
>      Chardev *chr, *base;
>      char *data;
> -    FeHandler h1 =3D { 0, }, h2 =3D { 0, };
> +    FeHandler h1 =3D { 0, false, 0, false, }, h2 =3D { 0, false, 0, fals=
e, };
>      CharBackend chr_be1, chr_be2;
>
>      opts =3D qemu_opts_create(qemu_find_opts("chardev"), "mux-label",
> @@ -233,6 +250,65 @@ static void char_mux_test(void)
>      g_assert_cmpint(h1.last_event, =3D=3D, CHR_EVENT_BREAK);
>      g_assert_cmpint(h2.last_event, =3D=3D, CHR_EVENT_MUX_OUT);
>
> +    /* open/close state and corresponding events */
> +    g_assert_true(qemu_chr_fe_backend_open(&chr_be1));
> +    g_assert_true(qemu_chr_fe_backend_open(&chr_be2));
> +    g_assert_true(h1.is_open);
> +    g_assert_false(h1.openclose_mismatch);
> +    g_assert_true(h2.is_open);
> +    g_assert_false(h2.openclose_mismatch);
> +
> +    h1.openclose_count =3D h2.openclose_count =3D 0;
> +
> +    qemu_chr_fe_set_handlers(&chr_be1, NULL, NULL, NULL, NULL,
> +                             NULL, NULL, false);
> +    qemu_chr_fe_set_handlers(&chr_be2, NULL, NULL, NULL, NULL,
> +                             NULL, NULL, false);
> +    g_assert_cmpint(h1.openclose_count, =3D=3D, 0);
> +    g_assert_cmpint(h2.openclose_count, =3D=3D, 0);
> +
> +    h1.is_open =3D h2.is_open =3D false;
> +    qemu_chr_fe_set_handlers(&chr_be1,
> +                             NULL,
> +                             NULL,
> +                             fe_event,
> +                             NULL,
> +                             &h1,
> +                             NULL, false);
> +    qemu_chr_fe_set_handlers(&chr_be2,
> +                             NULL,
> +                             NULL,
> +                             fe_event,
> +                             NULL,
> +                             &h2,
> +                             NULL, false);
> +    g_assert_cmpint(h1.openclose_count, =3D=3D, 1);
> +    g_assert_false(h1.openclose_mismatch);
> +    g_assert_cmpint(h2.openclose_count, =3D=3D, 1);
> +    g_assert_false(h2.openclose_mismatch);
> +
> +    qemu_chr_be_event(base, CHR_EVENT_CLOSED);
> +    qemu_chr_be_event(base, CHR_EVENT_OPENED);
> +    g_assert_cmpint(h1.openclose_count, =3D=3D, 3);
> +    g_assert_false(h1.openclose_mismatch);
> +    g_assert_cmpint(h2.openclose_count, =3D=3D, 3);
> +    g_assert_false(h2.openclose_mismatch);
> +
> +    qemu_chr_fe_set_handlers(&chr_be2,
> +                             fe_can_read,
> +                             fe_read,
> +                             fe_event,
> +                             NULL,
> +                             &h2,
> +                             NULL, false);
> +    qemu_chr_fe_set_handlers(&chr_be1,
> +                             fe_can_read,
> +                             fe_read,
> +                             fe_event,
> +                             NULL,
> +                             &h1,
> +                             NULL, false);
> +
>      /* remove first handler */
>      qemu_chr_fe_set_handlers(&chr_be1, NULL, NULL, NULL, NULL,
>                               NULL, NULL, true);
> --
> 2.7.4
>

