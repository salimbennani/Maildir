Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BB2CE580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 12:05:05 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga006-1.fm.intel.com with ESMTP; 27 Nov 2018 12:05:05 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AgH7eHRcj/ilDiZ6BcYobnfU/lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc26ZRWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYOy?=
 =?us-ascii?q?bYQBD+QPM+VGoYbhqFUAsAO+CAuuCu7g1zNFiGP60rMh0+k6DQHGxRYtE84SvH?=
 =?us-ascii?q?jIrtj4MroZX+CvzKnPyDXOd/RY1i3n6IfUaxwsvfeMUq9qcc3L1EIhER7Fjk+O?=
 =?us-ascii?q?poP/IjOey+MAs22B4Op6Se2gkWgnpBxrojex3MssjpTJhpgLxV/e6CV025w1Ks?=
 =?us-ascii?q?OlR057e9GkDIFcuD2dN4tzW84vRXxjtiUiyrAep5K3YCsHxI46yxLCaPGLaZaE?=
 =?us-ascii?q?7xzjWeqLPDt1hmppdKyjixu260Stye3xWtOq3FpUsCZJiMTAu3QD2hHV98OJUO?=
 =?us-ascii?q?Fy/l271jaKzw3T6v9LIUQzlafDL54hw6UwloYIsUjZES/2nlj2gLWRdkU+9eik?=
 =?us-ascii?q?8+XnYrP4qZ+AL4J4lB3yP6c0lsCiHOg1MRICU3aV9Om8zrHv4E/0TK1PjvIsk6?=
 =?us-ascii?q?nZtJ7aJd4cpq68GwJVy5gs6xOiDzu/zdsXg2cHI0xBeB6elIfpPEzOIPbkAvih?=
 =?us-ascii?q?mFSglzNrx/HFPrL/GJnMIWXDna/lfbZ87U5c1QUywcpe55JSFrEOPvbzVlXtu9?=
 =?us-ascii?q?zfCx80KAq0w+HhCNVy0IMeRHiDAqiDMKPdqVOI/P4gI/GQZI8JvzbwM/wl5//t?=
 =?us-ascii?q?jXAng1MccrSp0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD4AL0u0RL?=
 =?us-ascii?q?82szEnFJq9X8CEQoG2nKfH2iC9EZtLIGdcBReJGHbscoyCHPAUdCOVJNQmizEB?=
 =?us-ascii?q?SP2tRpEs0UKTshTnwe9iJ+vQ5ipKrJ/myZ156vPekVQo+CVpAt+B+2eKSW5ygy?=
 =?us-ascii?q?UPXTBhx711o0F21gKe17NliedTD91Z6qB1VVIXOYPV1eB9Q/D7UAHGZcvBHFum?=
 =?us-ascii?q?S9+lBiotZsg8z98HfwB2HND03T7Z2C//JrYPnPmiApAuc+r4wmL8Lts1n3PPzq?=
 =?us-ascii?q?IoiVU8T41LKHerj7NX7QXfB4fV1U6ekvD5JuwnwCfR+TLbniK1t0ZCXVs1CP2d?=
 =?us-ascii?q?UA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AyAADCov1bhxHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?QGBL4JPE4N5iHeLKIINh3SCEY07gXMUGBSEQIMaIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCBsOL0IBEAGBYgUCAxoBBoJbAQEBAQIBAQIgBB8KKQMDAQIGAQEKCwMKA?=
 =?us-ascii?q?gIfAwQCAgMBHhIBBQEcBhMFgxyBeggBBJpVPIsNfDOJIoEOEnmLAoIWgRGDEoU?=
 =?us-ascii?q?BgwSCVwKJJ4FuhH+PeAcCkTAYkQuYKA8hgSVfgS4zGiOBAQaCNYInFxKOEDwxg?=
 =?us-ascii?q?QeFEoV9gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AyAADCov1bhxHrdtBjHgEGBwaBUQkLAQGBL4JPE4N5iHe?=
 =?us-ascii?q?LKIINh3SCEY07gXMUGBSEQIMaIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL0IBE?=
 =?us-ascii?q?AGBYgUCAxoBBoJbAQEBAQIBAQIgBB8KKQMDAQIGAQEKCwMKAgIfAwQCAgMBHhI?=
 =?us-ascii?q?BBQEcBhMFgxyBeggBBJpVPIsNfDOJIoEOEnmLAoIWgRGDEoUBgwSCVwKJJ4Fuh?=
 =?us-ascii?q?H+PeAcCkTAYkQuYKA8hgSVfgS4zGiOBAQaCNYInFxKOEDwxgQeFEoV9gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="55081297"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 12:05:04 -0800
Received: from localhost ([::1]:44267 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRjbT-0000d3-OO
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 15:05:03 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46872)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gRjZ7-0006fY-VF
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:02:38 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gRjZ3-0000XO-Sr
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:02:37 -0500
Received: from mail-qk1-f193.google.com ([209.85.222.193]:42345)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gRjZ3-0000Wx-PD
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:02:33 -0500
Received: by mail-qk1-f193.google.com with SMTP id m5so15361242qka.9
	for <qemu-devel@nongnu.org>; Tue, 27 Nov 2018 12:02:33 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=SYNciE99PXncuIJ7y6gbIFPg/AZPJLrDzvvFVZnamgc=;
	b=YpuwdLI+FHK7D37wVWyV6VuaRZxrKpMGs2rVJWIEvJIPITYuaXXoDbaUWeSe05x7cR
	y9Gkf0oHm5F/ftLoIRWlkPlYIyggdeJ272fXGoaQse/2eanCY/IKOwi6MKANyYJgEti7
	qeG4o+kurn3V2kiwCjAZctRZs8kxmq9Dg9r5YYPPEIwnfWvGb6TG76Aau8sm+EmN7sw0
	NiwIgkuuvcaFDZIdSQNQBQ7PL8WAi/jdgBGxYMPlJn5Gh4D8WoBe9iIIQ6g4DPHoIDGE
	9li7LWH4suaB9aYdR63Fh9PHm+1m4/XZGu/6K5K+5LDvQRSX0KOlqXFuybGjRQ4NaL0C
	F1Vw==
X-Gm-Message-State: AA+aEWadvKSuMFe/2VdO77OWibh/NTGZK9BEq2Y84l7f8TJNsLqEEdN3
	ziavkSgEZE0G1ev3oUPZQJ4M3lbu6C58B60fMTmaIg==
X-Google-Smtp-Source: AFSGD/WqZ6m4eCKAhOM31l2ncpIsX72pP6wLMibae7+JGk/bU1iX9s+YySjevX1oCktDS+jc+O4j5IBSfPopJH4TTMA=
X-Received: by 2002:a37:af85:: with SMTP id
	y127mr29862951qke.352.1543348953241; 
	Tue, 27 Nov 2018 12:02:33 -0800 (PST)
MIME-Version: 1.0
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
	<20181127092801.21777-16-marcandre.lureau@redhat.com>
	<20181127194019.GQ18284@habkost.net>
In-Reply-To: <20181127194019.GQ18284@habkost.net>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Wed, 28 Nov 2018 00:02:21 +0400
Message-ID: <CAMxuvaz0FitnFiSD3Ma9r_7z0oM6A_Z3D2nbAh=YBp3mEC72rg@mail.gmail.com>
To: Eduardo Habkost <ehabkost@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.222.193
Subject: Re: [Qemu-devel] [PATCH for-3.2 v4 15/28] hw: apply accel compat
 properties without touching globals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: sstabellini <sstabellini@kernel.org>, qemu-devel <qemu-devel@nongnu.org>,
	"Bonzini, Paolo" <pbonzini@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>,
	Anthony PERARD <anthony.perard@citrix.com>, xen-devel@lists.xenproject.org,
	=?UTF-8?Q?Andreas_F=C3=A4rber?= <afaerber@suse.de>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi

On Tue, Nov 27, 2018 at 11:40 PM Eduardo Habkost <ehabkost@redhat.com> wrot=
e:
>
> On Tue, Nov 27, 2018 at 01:27:48PM +0400, Marc-Andr=C3=A9 Lureau wrote:
> > Introduce object_apply_global_props() function, to apply compatibility
> > properties from a GPtrArray.
> >
> > For accel compatibility properties, apply them during
> > device_post_init(), after accel_register_compat_props() has set them.
> >
> > To populate the compatibility properties, introduce SET_COMPAT(), a
> > more generic version of SET_MACHINE_COMPAT() that can set compat
> > properties on other objects than Machine, and using GPtrArray.
> >
> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> > ---
> >  include/hw/qdev-core.h | 13 +++++++++++++
> >  include/qom/object.h   |  3 +++
> >  include/sysemu/accel.h |  4 +---
> >  accel/accel.c          | 12 ------------
> >  hw/core/qdev.c         | 11 +++++++++++
> >  hw/xen/xen-common.c    | 38 +++++++++++++++++++-------------------
> >  qom/object.c           | 25 +++++++++++++++++++++++++
> >  vl.c                   |  2 +-
> >  8 files changed, 73 insertions(+), 35 deletions(-)
> >
> > diff --git a/include/hw/qdev-core.h b/include/hw/qdev-core.h
> > index a24d0dd566..82afd3c50d 100644
> > --- a/include/hw/qdev-core.h
> > +++ b/include/hw/qdev-core.h
> > @@ -267,6 +267,19 @@ typedef struct GlobalProperty {
> >      Error **errp;
> >  } GlobalProperty;
> >
> > +#define SET_COMPAT(S, COMPAT)                                       \
> > +    do {                                                            \
> > +        int i;                                                      \
> > +        static GlobalProperty props[] =3D {                           =
\
> > +            COMPAT                                                  \
> > +        };                                                          \
> > +        for (i =3D 0; i < G_N_ELEMENTS(props); i++) {                 =
\
> > +            g_ptr_array_add((S)->compat_props, (void *)&props[i]);  \
> > +        }                                                           \
> > +    } while (0)
>
> I think this macro would be an acceptable alternative to the
> existing SET_MACHINE_COMPAT macro trickery, but:
>
> > +
> > +void accel_register_compat_props(const GPtrArray *props);
> [...]
> > @@ -185,7 +183,9 @@ static void xen_accel_class_init(ObjectClass *oc, v=
oid *data)
> >      ac->init_machine =3D xen_init;
> >      ac->setup_post =3D xen_setup_post;
> >      ac->allowed =3D &xen_allowed;
> > -    ac->global_props =3D xen_compat_props;
> > +    ac->compat_props =3D g_ptr_array_new();
> > +
> > +    SET_COMPAT(ac, XEN_COMPAT);
>
> I think this is a step backwards.  I like us to be able to
> register compat properties without macro magic.  The existence of
> SET_MACHINE_COMPAT is a bug and not a feature.
>
> If you really want to use GPtrArray instead of a simple
> GlobalProperty* field (I'm not sure I understand the reasoning
> behind the choice to use GPtrArray), what about:

Except in the Xen case, It needs to register multiple GlobalProperty*,
not necessarily from contiguous in memory. That's why we have an array
of ptr.

>
> static GPtrArray *build_compat_props_array(GlobalProperty *props)
> {
>     GlobalProperty *p =3D props;
>     GPtrArray *array =3D g_ptr_array_new();
>     while (p->driver) {
>         g_ptr_array_add(array, (void *)p);
>     }
>     return array;
> }
>
>
> static void xen_accel_class_init(ObjectClass *oc, void *data)
> {
>     ...
>     ac->compat_props =3D build_compat_props_array(xen_compat_props);

If we would register from one place, that would be fine.

We could replace the macro by a function, then we would have to
declare the GlobalProperty arrays manually basically.

> }
>
>
>
> >  }
> >
> >  #define TYPE_XEN_ACCEL ACCEL_CLASS_NAME("xen")
> > diff --git a/qom/object.c b/qom/object.c
> > index 17921c0a71..dbdab0aead 100644
> > --- a/qom/object.c
> > +++ b/qom/object.c
> > @@ -370,6 +370,31 @@ static void object_post_init_with_type(Object *obj=
, TypeImpl *ti)
> >      }
> >  }
> >
> > +void object_apply_global_props(Object *obj, const GPtrArray *props, Er=
ror **errp)
> > +{
> > +    Error *err =3D NULL;
> > +    int i;
> > +
> > +    if (!props) {
> > +        return;
> > +    }
> > +
> > +    for (i =3D 0; i < props->len; i++) {
> > +        GlobalProperty *p =3D g_ptr_array_index(props, i);
> > +
> > +        if (object_dynamic_cast(obj, p->driver) =3D=3D NULL) {
> > +            continue;
> > +        }
> > +        p->used =3D true;
> > +        object_property_parse(obj, p->value, p->property, &err);
> > +        if (err !=3D NULL) {
> > +            error_prepend(&err, "can't apply global %s.%s=3D%s: ",
> > +                          p->driver, p->property, p->value);
> > +            error_propagate(errp, err);
> > +        }
> > +    }
> > +}
> > +
> >  static void object_initialize_with_type(void *data, size_t size, TypeI=
mpl *type)
> >  {
> >      Object *obj =3D data;
> > diff --git a/vl.c b/vl.c
> > index fa25d1ae2d..c06e94271c 100644
> > --- a/vl.c
> > +++ b/vl.c
> > @@ -2963,7 +2963,7 @@ static void user_register_global_props(void)
> >   */
> >  static void register_global_properties(MachineState *ms)
> >  {
> > -    accel_register_compat_props(ms->accelerator);
> > +    accel_register_compat_props(ACCEL_GET_CLASS(ms->accelerator)->comp=
at_props);
> >      machine_register_compat_props(ms);
> >      user_register_global_props();
> >  }
> > --
> > 2.20.0.rc1
> >
> >
>
> --
> Eduardo

