Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:43:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BAA935803ED;
	Wed, 28 Nov 2018 04:41:56 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 04:41:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AqneUWhCBptTIqgC3d3wNUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/p8ywAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOT4n/m/KhMJ+i6BUoByiqRxk247ZYpqYOOZicq7HYd8XX3ZNUtpXWidcAo28?=
 =?us-ascii?q?dYwPD+8ZMOhCronyuUEOrQGgCgKxA+3vzSVIiWHy3aYn1OkhCQTG3As6H90QtH?=
 =?us-ascii?q?TZt9H1NKYUUeCow6jE1zTDYOhT2Tvn9IfIdRUhrOiKULltcsTR0VEiGx3ZgliU?=
 =?us-ascii?q?s4DpIj2Y2voXv2SG7OdsSfijhm8lpg1ppjWj3Nogh4nXio4P1FzI6yp0zJwoKd?=
 =?us-ascii?q?C5S0N2Z8OvHoFKuCGALYR2R9svQ2F2tyY+zb0LoYC7fCcUx5Q93RLfaOKIc5KO?=
 =?us-ascii?q?4h39UOadOzB4hGhqeL6nhhay91avyvHkW8WqzFpHqjBJnsTCu3wTzRDf98uKRu?=
 =?us-ascii?q?dn8kqg2zuDzwXT5ftFIUAwm6rbMZkhwrsom5oXsETDGDL2mUrvgK+VaEok4O6o?=
 =?us-ascii?q?5PrjYrn/oZ+dOYl0hR/kMqk1hMy/Dvo3MhIUU2iY5+u8zrvj8lP9QLlQif02iK?=
 =?us-ascii?q?bZvIjAJcsHvq65HxNV0oE75ha7Djem08oXkWMILVJYYx+Hi4npO1fTIPH3F/u/?=
 =?us-ascii?q?glKskCt1yPDCJLHuHpLNLn3bmrf7Ybl981JcyBY0zd1H55JbELABIO7pVU/2rt?=
 =?us-ascii?q?DYDgI5PBayw+boE9h90oIeWWSSAq6WKq/SsFmI5v4xLOmIfoMapDH9K/097f70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPanC4GeppL1+aYXrrhNcBF2AKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbyLxD27EYFOZmBaFlCMFm/leJ+fW/cMbyKSIdVtkiYe?=
 =?us-ascii?q?WrijUIIh0RCutAnny7toNObU+ysYtY7929hx/eHciRYy9TlsBcSHz26NV310nn?=
 =?us-ascii?q?8PRzIu36Bwu0p9xk2H0ah5mfNYE9NT6uhNUgc7M57c0uN7B8rzWgLHYteGVlKm?=
 =?us-ascii?q?Ts+6DjE2S9I728UObFplG9W+khDD2DKnDKIPmLyVGpM46KLc0GL3J8Zm1XnG0q?=
 =?us-ascii?q?4tj10lQstKMW2rnap/9wnVB47UnESVjaeqdaIA3CHT8GeP13aBvEZdUARoS6XK?=
 =?us-ascii?q?QWgfZlfKrdT+/k7NUqWhCao5PQdbyc6NMK1Kasb3glVAX/rjPNXeY2Ssm2a/Hx?=
 =?us-ascii?q?qIx7WMbJb0dGUZxinSFE8EkwUL93acKQc+Hjuho37ZDDF2CVLvYkbs8e5iqHO7?=
 =?us-ascii?q?Tk441R2KY1dm17qv/h4VhPqcS/wI07IAuSchrSh0HVmn09LXDdqAuxRufKFGbd?=
 =?us-ascii?q?wh51dH0HrTtxZhMZy4M6BimlkefhxtsEPqyRp2BZtPkMgwoHwx0Qp9NLiX0FVC?=
 =?us-ascii?q?dzOfw5D9IbnXKmj0/BCyZK/awFDe0NCK+qgR7PQ0sUnsvAasFkA66XVoz8FV02?=
 =?us-ascii?q?eA5pXNFAcTUY/xXlwr+BRgprDaYjMy54Xb1XB3Nam0sznC288mBec/yxagectf?=
 =?us-ascii?q?P72AFAPoD8IaAM2uIvQwm1e1dhIEIPxS9KksMsO8dvuJxLSkPPx9kzKhl2hH5p?=
 =?us-ascii?q?5y0liN9yZlVuHHxZIFzOyG0QudUDf8ikysssT2mYBCeDETEXCzySniBI5NeKJy?=
 =?us-ascii?q?eZwHBnupI82y3t9+nYLiW2ZE9F6/AFMLwM+oeRuIY139xwFQzlkXoXq8lCu8zj?=
 =?us-ascii?q?x0lSwpr6WF0CzPxeTiaAQIOmpRSGZ+ilfsJJC+j8oGU0iwcwgpiByl6F74x6dB?=
 =?us-ascii?q?vqR/LGrTQUBScyjtNW5iUaiwtruEY8FR7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rre5MbTRflL0joERSl4jyLaBly9?=
 =?us-ascii?q?P9mv4NWVmI3PsuG4V2K9SJJTdTPnwp+HtCu+/WdqGwGwn+ivmt37Fgg3ySz72M?=
 =?us-ascii?q?NrVSnSrBb8f5Pk16K1Me98ekloBVn869d1G41kk4swgo0Q1mYehpmP4XUHlmLz?=
 =?us-ascii?q?O81B2a3idHoNWSILw9nN7Qjg2U1jLWiGy5j3V3qD2cthe8e1YnkN1S0j9cBKB7?=
 =?us-ascii?q?yZ7LhFnStzv1q5ohjdYfl7njcB1/Qu7GQWjP0OuAoo1i+dGKwdHVFEPSzwkBSF?=
 =?us-ascii?q?98y+rKJSZGq1cLm/zkx+nc26DLGZowFRQ3L5epYkHS9t4cRzKlPM0Hvv6o76fN?=
 =?us-ascii?q?ncd84cthqRkx3YlehaNIoxluYWhSpgIW/ypmcqy+k/jRxzx526uJWHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DED8mpX?=
 =?us-ascii?q?eeB7XfBhWT6Ft8o3LMDpCrNGyXJH8DwtV5XxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosSJmfKwdW7hhf50jPN8yS9PlzHy?=
 =?us-ascii?q?Ze/p2utwGNLm2bZwJVDWAGQECEBlbjPqWw6tnE6eSXGu2+L/7Wa7WUteNeT+uI?=
 =?us-ascii?q?xY6o0oZ+/zaDKMSPPnphD/06wEZDXmp5G8PWmzoRUSwXijnNYtWfpBe9/C13s8?=
 =?us-ascii?q?++/O7qWALp+YuAFb9SPc9z9BCxhKeJL/SQizphKTZEypMMwmfFx6IC3FEJkSFh?=
 =?us-ascii?q?aTmsHa4EtS7MV6/Qnq5XDxgGayJ8LsdI7qQ83hVTNs7fkN/6yrl4jvstAVdfSV?=
 =?us-ascii?q?Phgt2pZdANI2ylKFPHBUOLOK6aKjHR3873Yb2zSbtLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcd3jDIsx700g3LKNWgEPj?=
 =?us-ascii?q?l9c0NCtLuQ7SxDj/V7GmxB6GdlLOaelyaY6enYNogZsf9xDitokOJa5Sdy97wA?=
 =?us-ascii?q?9ChfRfddnCrUs84ovVerjq+OwD8hWx1L+RhRg4fehURvI7/UvrxHQ3vAtEYV6G?=
 =?us-ascii?q?KKBhAio9pjF82puqpVjNPIkfSge39579vI8J5EVIDvI8WdPS95PA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AvAABnjP5bh0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YNrJ4xwiyqCIZcugXMSAQEYEwGHaiI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?2IoJlAgEDAQIPFVIGCQEBUANUGQUdgn+CAgMBAZtdiVgBAQGBajOKQ4dqhCsXg?=
 =?us-ascii?q?UA/gRGNbgKgGwmRMQIWiWOHMpghAgQGBQITAYFIA4IIMxoIGxWDJ4InF44ecYE?=
 =?us-ascii?q?FAQGMeQEB?=
X-IPAS-Result: =?us-ascii?q?A0AvAABnjP5bh0O0hNFkHgEGBwaBUggLAYNrJ4xwiyqCIZc?=
 =?us-ascii?q?ugXMSAQEYEwGHaiI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJlAgEDAQIPF?=
 =?us-ascii?q?VIGCQEBUANUGQUdgn+CAgMBAZtdiVgBAQGBajOKQ4dqhCsXgUA/gRGNbgKgGwm?=
 =?us-ascii?q?RMQIWiWOHMpghAgQGBQITAYFIA4IIMxoIGxWDJ4InF44ecYEFAQGMeQEB?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="139903182"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 04:41:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728510AbeK1Xmv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 18:42:51 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:56724 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1728372AbeK1Xmu (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 18:42:50 -0500
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wASCd9LY129210
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 07:41:17 -0500
Received: from e06smtp03.uk.ibm.com (e06smtp03.uk.ibm.com [195.75.94.99])
        by mx0a-001b2d01.pphosted.com with ESMTP id 2p1u27ge17-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 07:41:17 -0500
Received: from localhost
        by e06smtp03.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <pmorel@linux.ibm.com>;
        Wed, 28 Nov 2018 12:41:15 -0000
Received: from b06cxnps3075.portsmouth.uk.ibm.com (9.149.109.195)
        by e06smtp03.uk.ibm.com (192.168.101.133) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Wed, 28 Nov 2018 12:41:11 -0000
Received: from d06av22.portsmouth.uk.ibm.com (d06av22.portsmouth.uk.ibm.com [9.149.105.58])
        by b06cxnps3075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wASCfAE015990908
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Wed, 28 Nov 2018 12:41:10 GMT
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 130514C046;
        Wed, 28 Nov 2018 12:41:10 +0000 (GMT)
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id CC79B4C040;
        Wed, 28 Nov 2018 12:41:09 +0000 (GMT)
Received: from morel-ThinkPad-W530.boeblingen.de.ibm.com (unknown [9.152.224.168])
        by d06av22.portsmouth.uk.ibm.com (Postfix) with ESMTP;
        Wed, 28 Nov 2018 12:41:09 +0000 (GMT)
From: Pierre Morel <pmorel@linux.ibm.com>
To: pasic@linux.vnet.ibm.com
Cc: cohuck@redhat.com, farman@linux.ibm.com, alifm@linux.ibm.com,
        linux-s390@vger.kernel.org, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org
Subject: [PATCH v3 2/6] vfio: ccw: Rework subchannel state on setup
Date: Wed, 28 Nov 2018 13:41:03 +0100
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1543408867-16465-1-git-send-email-pmorel@linux.ibm.com>
References: <1543408867-16465-1-git-send-email-pmorel@linux.ibm.com>
X-TM-AS-GCONF: 00
x-cbid: 18112812-0012-0000-0000-000002D17963
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18112812-0013-0000-0000-00002106BE1E
Message-Id: <1543408867-16465-3-git-send-email-pmorel@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-11-28_07:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=3 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=911 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1811280112
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The subchannel enablement and the according setting to the
VFIO_CCW_STATE_STANDBY state should only be done when all
parts of the VFIO mediated device have been initialized
i.e. after the mediated device has been successfully opened.

Let's stay in VFIO_CCW_STATE_NOT_OPER until the mediated
device has been opened and set the VFIO_CCW_STATE_STANDBY
on a successful open.

On release the state is set back to VFIO_CCW_STATE_NOT_OPER
by vfio_ccw_sch_quiesce().

When the mediated device is closed,  disable the sub channel
by calling vfio_ccw_sch_quiesce().

Signed-off-by: Pierre Morel <pmorel@linux.ibm.com>
---
 drivers/s390/cio/vfio_ccw_async.c   | 11 +++++++++++
 drivers/s390/cio/vfio_ccw_drv.c     | 10 +---------
 drivers/s390/cio/vfio_ccw_ops.c     | 27 +++++++++++++++++++++------
 drivers/s390/cio/vfio_ccw_private.h |  1 +
 4 files changed, 34 insertions(+), 15 deletions(-)

diff --git a/drivers/s390/cio/vfio_ccw_async.c b/drivers/s390/cio/vfio_ccw_async.c
index 8c7f51d..033574e 100644
--- a/drivers/s390/cio/vfio_ccw_async.c
+++ b/drivers/s390/cio/vfio_ccw_async.c
@@ -76,6 +76,17 @@ const struct vfio_ccw_regops vfio_ccw_async_region_ops = {
 	.release = vfio_ccw_async_region_release,
 };
 
+void vfio_ccw_unregister_async_dev_regions(struct vfio_ccw_private *private)
+{
+	int i;
+
+	for (i = 0; i < private->num_regions; i++)
+		private->region[i].ops->release(private, &private->region[i]);
+	private->num_regions = 0;
+	kfree(private->region);
+	private->region = NULL;
+}
+
 int vfio_ccw_register_async_dev_regions(struct vfio_ccw_private *private)
 {
 	return vfio_ccw_register_dev_region(private,
diff --git a/drivers/s390/cio/vfio_ccw_drv.c b/drivers/s390/cio/vfio_ccw_drv.c
index bce7fed..d3527b6 100644
--- a/drivers/s390/cio/vfio_ccw_drv.c
+++ b/drivers/s390/cio/vfio_ccw_drv.c
@@ -133,26 +133,18 @@ static int vfio_ccw_sch_probe(struct subchannel *sch)
 	private->sch = sch;
 	dev_set_drvdata(&sch->dev, private);
 
-	spin_lock_irq(sch->lock);
 	private->state = VFIO_CCW_STATE_NOT_OPER;
 	sch->isc = VFIO_CCW_ISC;
-	ret = cio_enable_subchannel(sch, (u32)(unsigned long)sch);
-	spin_unlock_irq(sch->lock);
-	if (ret)
-		goto out_free;
 
 	INIT_WORK(&private->io_work, vfio_ccw_sch_io_todo);
 	atomic_set(&private->avail, 1);
-	private->state = VFIO_CCW_STATE_STANDBY;
 
 	ret = vfio_ccw_mdev_reg(sch);
 	if (ret)
-		goto out_disable;
+		goto out_free;
 
 	return 0;
 
-out_disable:
-	cio_disable_subchannel(sch);
 out_free:
 	dev_set_drvdata(&sch->dev, NULL);
 	if (private->cmd_region)
diff --git a/drivers/s390/cio/vfio_ccw_ops.c b/drivers/s390/cio/vfio_ccw_ops.c
index 0e1f7f7b..cc7d46a 100644
--- a/drivers/s390/cio/vfio_ccw_ops.c
+++ b/drivers/s390/cio/vfio_ccw_ops.c
@@ -113,14 +113,11 @@ static int vfio_ccw_mdev_create(struct kobject *kobj, struct mdev_device *mdev)
 	struct vfio_ccw_private *private =
 		dev_get_drvdata(mdev_parent_dev(mdev));
 
-	if (private->state == VFIO_CCW_STATE_NOT_OPER)
-		return -ENODEV;
-
 	if (atomic_dec_if_positive(&private->avail) < 0)
 		return -EPERM;
 
 	private->mdev = mdev;
-	private->state = VFIO_CCW_STATE_IDLE;
+	private->state = VFIO_CCW_STATE_NOT_OPER;
 
 	return 0;
 }
@@ -148,6 +145,7 @@ static int vfio_ccw_mdev_open(struct mdev_device *mdev)
 	struct vfio_ccw_private *private =
 		dev_get_drvdata(mdev_parent_dev(mdev));
 	unsigned long events = VFIO_IOMMU_NOTIFY_DMA_UNMAP;
+	struct subchannel *sch = private->sch;
 	int ret;
 
 	private->nb.notifier_call = vfio_ccw_mdev_notifier;
@@ -159,8 +157,24 @@ static int vfio_ccw_mdev_open(struct mdev_device *mdev)
 
 	ret = vfio_ccw_register_async_dev_regions(private);
 	if (ret)
-		vfio_unregister_notifier(mdev_dev(mdev), VFIO_IOMMU_NOTIFY,
-					 &private->nb);
+		goto err_regions;
+
+	spin_lock_irq(private->sch->lock);
+	ret = cio_enable_subchannel(sch, (u32)(unsigned long)sch);
+	if (ret)
+		goto err_enable;
+
+	private->state = VFIO_CCW_STATE_STANDBY;
+	spin_unlock_irq(sch->lock);
+	return 0;
+
+err_enable:
+	spin_unlock_irq(sch->lock);
+	vfio_ccw_unregister_async_dev_regions(private);
+
+err_regions:
+	vfio_unregister_notifier(mdev_dev(mdev), VFIO_IOMMU_NOTIFY,
+				 &private->nb);
 	return ret;
 }
 
@@ -170,6 +184,7 @@ static void vfio_ccw_mdev_release(struct mdev_device *mdev)
 		dev_get_drvdata(mdev_parent_dev(mdev));
 	int i;
 
+	vfio_ccw_sch_quiesce(private->sch);
 	vfio_unregister_notifier(mdev_dev(mdev), VFIO_IOMMU_NOTIFY,
 				 &private->nb);
 
diff --git a/drivers/s390/cio/vfio_ccw_private.h b/drivers/s390/cio/vfio_ccw_private.h
index 1a41a14..5d799b7 100644
--- a/drivers/s390/cio/vfio_ccw_private.h
+++ b/drivers/s390/cio/vfio_ccw_private.h
@@ -54,6 +54,7 @@ int vfio_ccw_register_dev_region(struct vfio_ccw_private *private,
 				 size_t size, u32 flags, void *data);
 
 int vfio_ccw_register_async_dev_regions(struct vfio_ccw_private *private);
+void vfio_ccw_unregister_async_dev_regions(struct vfio_ccw_private *private);
 
 /**
  * struct vfio_ccw_private
-- 
2.7.4

