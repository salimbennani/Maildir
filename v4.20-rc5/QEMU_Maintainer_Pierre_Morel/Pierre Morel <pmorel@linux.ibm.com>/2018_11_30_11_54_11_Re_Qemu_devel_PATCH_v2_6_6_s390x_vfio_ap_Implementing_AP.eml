Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:00 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BC863580224
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 03:55:05 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 03:55:05 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A18tG+RRHQx+WiR9w+ZyBBHQlwtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBeFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBAeQPMulXrYbyu1gAoxSkCgexHOPiyD1Gi3Dr0aA0z+ghCx/J3Bc7EtISqX?=
 =?us-ascii?q?TZtsn5OLscXO23yqTD0DXNb+lR2Tf48IXGaBEhru+WXbJqb8Xa1E4hFwTfjlqO?=
 =?us-ascii?q?rYzuIjSY1vwIs2ic9epvS+avhnUjqwFwpDiv28gthpPIho0Oz1DI7zl2wIEwJd?=
 =?us-ascii?q?ChTkNwfN2qEINIui2EK4d7QdkuT3x1tCs50LEKp5C2cSgQxJg6xRPTc/iKf5KV?=
 =?us-ascii?q?7h/sVOudOyp0iXJndb6lmhq+7Eetx+vhXceuyllKtDBKktzUu3ANyRPT7s+HR+?=
 =?us-ascii?q?N5/kegwjaPyxvT5vtLIUAyiKrXMZkhwqQ/lpYLsETDGDH5mFnugaOIakkp+fKk?=
 =?us-ascii?q?5/n6brjlvJOQKYF5hwHkPqgzmMGzGeE4PRIPX2if9+S8zrrj/UjhTbVTkPI2l7?=
 =?us-ascii?q?TZvInHKssFuK62HQtV3p845Ba4Ejem1sgXkmccLF5CfBKHjovpNE/ULPH3EPey?=
 =?us-ascii?q?m1CskDZtx/DbMbztGJTNLn7fkLj/ebZx8VJTyA02zd1E4ZJUDbcBIP31Wk/srt?=
 =?us-ascii?q?DYCQU5MwOsz+b9FNp9zp8eWX6IAqKBNKPSsFyI6fw1L+iDeY8YozL9K/kj5/7z?=
 =?us-ascii?q?gn41g14dfa+13ZQJbHC0BOhpI0KcYSmkv9EaDG1fvhYiVPe4zxqGUCVPfDC0WK?=
 =?us-ascii?q?Qz4Cx9D5ipSoLKR4SoibrG2z+nH5pQfSdfB1WRVHvlaYiACMoKcz+Yd8pokzgY?=
 =?us-ascii?q?Uuq4Roo8kB2jqgL+jqBqN/fZ4TEws5Xl295ooerJmkYp6DZ2As+BhnyLVHx+hW?=
 =?us-ascii?q?gSRjU7j5x49HB6zEbL8rJ/nP1RFpQH7vBTVRg7PJ30y+18FsC0WwjEONyOTQDi?=
 =?us-ascii?q?Ct+hGzctVNs8zNIUS0pwXdSoi1bI2C/5ObINk623A8ks96XG0nzZI8d71maA1a?=
 =?us-ascii?q?MkyVIhR5hhL2qj05Z++hLJCsbslF+Uk+7+baEbxiPJ3GOCy3ee+kBSVUh7VqCT?=
 =?us-ascii?q?DiNXXVffsdmsvhCKdLSpE7lyd1IZkcM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAACqJAFchxHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwKoIlhAyId4spgWAtfJZMgXMSAQEYFIRAgzQiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIGw4vgjYFAgMaAQaCXAEBAQMBAg8RBBEOCikDAwECBgEBCAIOCgICIgQCA?=
 =?us-ascii?q?gMBUwYBDAgBAQEdgn+CAgECAQGLCZEHiVgBAQFufDOFMYR8gQuLEBeBQD+BESe?=
 =?us-ascii?q?CNjWFAYMEglcCjymQM1UJkTEGGIlphzaIe484AgQGBQITAYFGgg0zGggbFYIIg?=
 =?us-ascii?q?SCCJhcSbQEIjRaBeIwkgXQDAQE?=
X-IPAS-Result: =?us-ascii?q?A0AkAACqJAFchxHrdtBjHgEGBwaBUQkLAYEwKoIlhAyId4s?=
 =?us-ascii?q?pgWAtfJZMgXMSAQEYFIRAgzQiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFA?=
 =?us-ascii?q?gMaAQaCXAEBAQMBAg8RBBEOCikDAwECBgEBCAIOCgICIgQCAgMBUwYBDAgBAQE?=
 =?us-ascii?q?dgn+CAgECAQGLCZEHiVgBAQFufDOFMYR8gQuLEBeBQD+BESeCNjWFAYMEglcCj?=
 =?us-ascii?q?ymQM1UJkTEGGIlphzaIe484AgQGBQITAYFGgg0zGggbFYIIgSCCJhcSbQEIjRa?=
 =?us-ascii?q?BeIwkgXQDAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="53307854"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 03:54:45 -0800
Received: from localhost ([::1]:59508 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gShNd-0004UD-70
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 06:54:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47716)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pmorel@linux.ibm.com>) id 1gShNK-0004PE-De
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:54:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pmorel@linux.ibm.com>) id 1gShNF-0005Fp-Rd
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:54:26 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:59178)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pmorel@linux.ibm.com>)
	id 1gShNF-0005FP-II
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:54:21 -0500
Received: from pps.filterd (m0098409.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id
	wAUBs4UD117580
	for <qemu-devel@nongnu.org>; Fri, 30 Nov 2018 06:54:20 -0500
Received: from e06smtp01.uk.ibm.com (e06smtp01.uk.ibm.com [195.75.94.97])
	by mx0a-001b2d01.pphosted.com with ESMTP id 2p33vwjbjm-1
	(version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
	for <qemu-devel@nongnu.org>; Fri, 30 Nov 2018 06:54:20 -0500
Received: from localhost
	by e06smtp01.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for <qemu-devel@nongnu.org> from <pmorel@linux.ibm.com>;
	Fri, 30 Nov 2018 11:54:18 -0000
Received: from b06cxnps3075.portsmouth.uk.ibm.com (9.149.109.195)
	by e06smtp01.uk.ibm.com (192.168.101.131) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	(version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
	Fri, 30 Nov 2018 11:54:13 -0000
Received: from d06av25.portsmouth.uk.ibm.com (d06av25.portsmouth.uk.ibm.com
	[9.149.105.61])
	by b06cxnps3075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id wAUBsCnD63111256
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=FAIL); Fri, 30 Nov 2018 11:54:12 GMT
Received: from d06av25.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 084C711C058;
	Fri, 30 Nov 2018 11:54:12 +0000 (GMT)
Received: from d06av25.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 6A35411C04C;
	Fri, 30 Nov 2018 11:54:11 +0000 (GMT)
Received: from [9.145.157.114] (unknown [9.145.157.114])
	by d06av25.portsmouth.uk.ibm.com (Postfix) with ESMTP;
	Fri, 30 Nov 2018 11:54:11 +0000 (GMT)
To: Tony Krowiak <akrowiak@linux.ibm.com>, borntraeger@de.ibm.com
References: <1542904555-1136-1-git-send-email-pmorel@linux.ibm.com>
	<1542904555-1136-7-git-send-email-pmorel@linux.ibm.com>
	<555d039d-16ef-f279-fd48-f0d422f7905a@linux.ibm.com>
From: Pierre Morel <pmorel@linux.ibm.com>
Date: Fri, 30 Nov 2018 12:54:11 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <555d039d-16ef-f279-fd48-f0d422f7905a@linux.ibm.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
X-TM-AS-GCONF: 00
x-cbid: 18113011-4275-0000-0000-000002E916FE
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18113011-4276-0000-0000-000037F65EDB
Message-Id: <db7c028e-387b-246a-378e-f2e1ae99f924@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
	definitions=2018-11-30_05:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	priorityscore=1501
	malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
	clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
	mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
	scancount=1 engine=8.0.1-1810050000 definitions=main-1811300102
Content-Transfer-Encoding: quoted-printable
X-MIME-Autoconverted: from 8bit to quoted-printable by
	mx0a-001b2d01.pphosted.com id wAUBs4UD117580
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 148.163.156.1
Subject: Re: [Qemu-devel] [PATCH v2 6/6] s390x/vfio: ap: Implementing AP
 Queue Interrupt Control
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: pmorel@linux.ibm.com
Cc: peter.maydell@linaro.org, david@redhat.com, cohuck@redhat.com,
	qemu-devel@nongnu.org, agraf@suse.de, pasic@linux.ibm.com,
	eric.auger@redhat.com, qemu-s390x@nongnu.org, mst@redhat.com,
	pbonzini@redhat.com, rth@twiddle.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 29/11/2018 22:53, Tony Krowiak wrote:
> On 11/22/18 11:35 AM, Pierre Morel wrote:
>> We intercept the PQAP(AQIC) instruction and transform

...

>> +static int ap_pqap_aqic(CPUS390XState *env)
>> +{
>> +=C2=A0=C2=A0=C2=A0 uint64_t g_nib =3D env->regs[2];
>> +=C2=A0=C2=A0=C2=A0 uint8_t apid =3D ap_reg_get_apid(env->regs[0]);
>> +=C2=A0=C2=A0=C2=A0 uint8_t apqi =3D ap_reg_get_apqi(env->regs[0]);
>> +=C2=A0=C2=A0=C2=A0 uint32_t retval;
>> +=C2=A0=C2=A0=C2=A0 APDevice *ap =3D s390_get_ap();
>=20
> To be consistent with the naming convention in the rest of
> this file, can you name this variable 'apdev'?

OK

>=20
>> +=C2=A0=C2=A0=C2=A0 VFIODevice *vdev;
>> +=C2=A0=C2=A0=C2=A0 VFIOAPDevice *ap_vdev;
>=20
> To be consistent with the naming convention in the rest of
> this file, can you name this variable 'vapdev'?
>=20
>> +=C2=A0=C2=A0=C2=A0 APQueue *apq;
>> +
>> +=C2=A0=C2=A0=C2=A0 ap_vdev =3D DO_UPCAST(VFIOAPDevice, apdev, ap);
>=20
> Where is 'apdev' defined/initialized?

It is part of the VFIOAPDevice structure

>=20
>> +=C2=A0=C2=A0=C2=A0 vdev =3D &ap_vdev->vdev;
>> +=C2=A0=C2=A0=C2=A0 apq =3D &ap->card[apid].queue[apqi];
>> +=C2=A0=C2=A0=C2=A0 apq->isc =3D ap_reg_get_isc(env->regs[1]);
>> +=C2=A0=C2=A0=C2=A0 apq->apqn =3D (apid << 8) | apqi;
>> +
>> +=C2=A0=C2=A0=C2=A0 if (ap_reg_get_ir(env->regs[1])) {
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 retval =3D ap_pqap_set_irq=
(vdev, apq, g_nib);
>> +=C2=A0=C2=A0=C2=A0 } else {
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 retval =3D ap_pqap_clear_i=
rq(vdev, apq);
>> +=C2=A0=C2=A0=C2=A0 }
>> +
>> +=C2=A0=C2=A0=C2=A0 env->regs[1] =3D retval;
>> +=C2=A0=C2=A0=C2=A0 if (retval & AP_STATUS_RC_MASK) {
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 return 3;
>> +=C2=A0=C2=A0=C2=A0 }
>> +
>> +=C2=A0=C2=A0=C2=A0 return 0;
>> +}
>> +
>> +/*
>> + * ap_pqap
>> + * @env: environment pointing to registers
>> + * return value: Code Condition
>> + */
>> +int ap_pqap(CPUS390XState *env)
>> +{
>> +=C2=A0=C2=A0=C2=A0 int cc =3D 0;
>> +
>> +=C2=A0=C2=A0=C2=A0 switch (ap_reg_get_fc(env->regs[0])) {
>> +=C2=A0=C2=A0=C2=A0 case AQIC:
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if (!s390_has_feat(S390_FE=
AT_AP_QUEUE_INTERRUPT_CONTROL)) {
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 re=
turn -PGM_OPERATION;
>=20
> Shouldn't this be PGM_SPECIFICATION?

Before the patch, when PQAP is not intercepted we sent PGM_OPERATION.
I think we should continue doing the same as before if the feature is=20
not activated.


>=20
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 }

...snip...


>> +typedef struct APQueue {
>> +=C2=A0=C2=A0=C2=A0 AdapterRoutes routes;
>> +=C2=A0=C2=A0=C2=A0 IndAddr *nib;
>> +=C2=A0=C2=A0=C2=A0 uint16_t apqn;
>> +=C2=A0=C2=A0=C2=A0 uint8_t isc;
>> +} APQueue;
>> +
>> +typedef struct APCard {
>> +=C2=A0=C2=A0=C2=A0 APQueue queue[MAX_AP_DOMAIN];
>=20
> This seems to be an unnecessary allocation of memory, particularly
> if there is only a few queues. I understand this
> maps to the concept of a matrix and makes for quick retrieval of
> an APQueue, but I think it would be more efficient to use something
> like a GTree, or a GHashTable both of which would save you space and
> allow for fairly quick retrieval.


OK.
We can optimize this later.

...

>> +/* Register 1 as input hold the AQIC information */
>> +static inline uint32_t ap_reg_set_status(uint8_t status)
>=20
> This function does not set anything, but returns an APQSW.
> Maybe it should be named ap_reg_get_status_word or ap_reg_get_apqsw
> or ap_reg_get_status.

All these operations are "get" when retrieving informations from=20
registers and "set" when setting information inside registers.


>=20
...snip...
>> =C2=A0 }
>> +static int kvm_ap_pqap(S390CPU *cpu, uint16_t ipbh0)
>> +{
>> +=C2=A0=C2=A0=C2=A0 CPUS390XState *env =3D &cpu->env;
>> +=C2=A0=C2=A0=C2=A0 int r;
>> +
>> +=C2=A0=C2=A0=C2=A0 if (env->psw.mask & PSW_MASK_PSTATE) {
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 kvm_s390_program_interrupt=
(cpu, PGM_PRIVILEGED);
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 return 0;
>> +=C2=A0=C2=A0=C2=A0 }
>> +
>> +=C2=A0=C2=A0=C2=A0 if (env->regs[0] & AP_AQIC_ZERO_BITS) {
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 kvm_s390_program_interrupt=
(cpu, PGM_SPECIFICATION);
>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 return 0;
>> +=C2=A0=C2=A0=C2=A0 }
>=20
> This check does not belong here; for example, if the PQAP(TAPQ)
> instruction is intercepted and the T bit (bit 40) is set, a
> specification exception would be erroneously recognized. This check
> should be done in the ap_pqap_aqic() function.

Right, I will move the test.


Regards,
Pierre

--=20
Pierre Morel
Linux/KVM/QEMU in B=C3=B6blingen - Germany


