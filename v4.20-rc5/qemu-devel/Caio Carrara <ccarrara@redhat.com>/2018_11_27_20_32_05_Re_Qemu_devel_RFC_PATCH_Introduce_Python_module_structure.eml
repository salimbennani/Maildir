Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B452A580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 12:33:06 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 12:33:06 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AmUkj0xz7nZgkn+TXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoSKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/1jcKPAZtMaXXROUdpNVyJPBYO8?=
 =?us-ascii?q?apEAD+sHPe1Fq4XwqF8DoR64CAKxBu3g1yVIi2f406M6zeovEg/G0wM8EN0Tsn?=
 =?us-ascii?q?vbosj7NL8QXO63w6TE0DvOY+9I1jfm84XIbgwtrOuQUb5sa8fd108iHB7FgFWK?=
 =?us-ascii?q?rozlOiuY2/oXvGia6OprSPyihHQ9qwFruDev3N0jgZTOi40J1l/L7z95wJwvKt?=
 =?us-ascii?q?2iUkF2esSkH4VNuCGaLYR2XtkuTH1vuCY/07ALv4OwciYNyJQi3RHfavqHfpCH?=
 =?us-ascii?q?4hLiSOaRISp4i2l/dLK+gBa/91WrxO7kVsSszlpGsilInsPRunwQ1BHf8NaLR/?=
 =?us-ascii?q?V980u7xDqC1Rjf5v9YLU0wj6bXNpAszqAqmpYOsknOEDX6lFv1gaKQa04q4PKn?=
 =?us-ascii?q?6/79bbXjvpKcN5F7igX5Mqk2nsy/AP84MhQVX2SB9uS80qDj8Vf+QLVQgf06iq?=
 =?us-ascii?q?jZsJbEKsQHvqO1HRNZ34U55xqiEjur084UkWcJIV9FYh6LkorkN0nLIP/iDPe/?=
 =?us-ascii?q?h1qskC1sx/DDJrDhG4vCLn3ekLv4YLly9VBcxxQ3zdxG/J1UDawBIPTvVUDvr9?=
 =?us-ascii?q?zUCRs5Mw23w+n5Etl82Z4eVHqLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH80glkdfa6v3ZsYbnC4A+5qI0KDYXrjmtsBC3sFvhIiTOz2j12PSTpTZ3exX6?=
 =?us-ascii?q?0i/D06B5+mAJzHRoCshryBwSi6EodXZmBAFlCDD3Poe5+YVPcLbSLBavJniSEO?=
 =?us-ascii?q?ALi9V5c6h1bpsA7h16EhKO3S9SsF85X5259w7uzXkBg0sjtsE8Wa1XrKVmxxgy?=
 =?us-ascii?q?YESiE72PNCp1dgwAKG2Kl8n/sKDNFW+rZFXxk3MdvGwvVnBsvucgTGeNiPVRCh?=
 =?us-ascii?q?WNrxGiw7TN8634oTZV1gEc6plBHJ0nmWBOo+k7GBCYZ8yKXH1jClLNx60H/uzq?=
 =?us-ascii?q?Qtj1A6BMBIMDv1qLR48l34Do/O226Qjbyjb61UiCXG/X2ZxHCHlFtVXA55TePO?=
 =?us-ascii?q?WnVJNRielsjw+k6XF+zmMr8gKAYUjJPbJw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAADDqP1bhxHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwGBMIE5gRYTjHCLKYINl0CBdhEYBw2BS4YPIjYHDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxoHglsBAQEBAgEBAjcMCikDAwECB?=
 =?us-ascii?q?gEBCg4KCR0IAwELBUkTBYMcAYF5CAEECqdOijSKB4IGF4FAP4ERgmQugwUZAoU?=
 =?us-ascii?q?WgiYCiQNQgUKEC5BsCYY9P4opI4FZTYcsNocDmDeBTQWCATMaCBsVgycJgh4Xh?=
 =?us-ascii?q?i6DARuEaykxgQccinOBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AGAADDqP1bhxHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwGBMIE5gRYTjHCLKYINl0CBdhEYBw2BS4YPIjYHDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCgsJCBsOIwyCNgUCAxoHglsBAQEBAgEBAjcMCikDAwECBgEBCg4KCR0IAwE?=
 =?us-ascii?q?LBUkTBYMcAYF5CAEECqdOijSKB4IGF4FAP4ERgmQugwUZAoUWgiYCiQNQgUKEC?=
 =?us-ascii?q?5BsCYY9P4opI4FZTYcsNocDmDeBTQWCATMaCBsVgycJgh4Xhi6DARuEaykxgQc?=
 =?us-ascii?q?cinOBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="52882745"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 12:33:05 -0800
Received: from localhost ([::1]:44332 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRk2a-0002Y4-EC
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 15:33:04 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54447)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ccarrara@redhat.com>) id 1gRk25-0002OT-3w
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:32:34 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ccarrara@redhat.com>) id 1gRk21-0003Jq-48
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:32:31 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52686)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ccarrara@redhat.com>)
	id 1gRk1u-0003DJ-Rc; Tue, 27 Nov 2018 15:32:23 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0678D40220;
	Tue, 27 Nov 2018 20:32:22 +0000 (UTC)
Received: from localhost.localdomain (ovpn-116-27.gru2.redhat.com
	[10.97.116.27])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id B726D5ED26;
	Tue, 27 Nov 2018 20:32:08 +0000 (UTC)
Date: Tue, 27 Nov 2018 18:32:05 -0200
From: Caio Carrara <ccarrara@redhat.com>
To: Cleber Rosa <crosa@redhat.com>
Message-ID: <20181127203204.GB22731@localhost.localdomain>
References: <20181127105034.21045-1-crosa@redhat.com>
	<20181127190006.GC22880@localhost.localdomain>
	<7359977f-3797-d78f-cd1a-a410e30c5357@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <7359977f-3797-d78f-cd1a-a410e30c5357@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Tue, 27 Nov 2018 20:32:22 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC PATCH] Introduce Python module structure
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Fam Zheng <famz@redhat.com>,
	Eduardo Habkost <ehabkost@redhat.com>, qemu-block@nongnu.org,
	Alex =?iso-8859-1?Q?Benn=E9e?= <alex.bennee@linaro.org>,
	qemu-devel@nongnu.org, Wainer dos Santos Moschetta <wainersm@redhat.com>,
	Philippe =?iso-8859-1?Q?Mathieu-Daud=E9?= <f4bug@amsat.org>,
	Max Reitz <mreitz@redhat.com>,
	Philippe =?iso-8859-1?Q?Mathieu-Daud=E9?= <philmd@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Nov 27, 2018 at 03:02:03PM -0500, Cleber Rosa wrote:
> 
> 
> On 11/27/18 2:00 PM, Caio Carrara wrote:
> > Hi, Cleber.
> > 
> > On Tue, Nov 27, 2018 at 05:50:34AM -0500, Cleber Rosa wrote:
> >> This is a simple move of Python code that wraps common QEMU
> >> functionality, and are used by a number of different tests
> >> and scripts.
> >>
> >> By treating that code as a real Python module, we can more easily,
> >> among other things:
> >>  * reuse more code
> >>  * apply a more consistent style
> >>  * add tests to that code
> >>  * generate documentation
> >>
> >> Signed-off-by: Cleber Rosa <crosa@redhat.com>
> >> ---
> >>  configure                                  |  1 +
> >>  scripts/qemu.py => python/qemu/__init__.py | 11 ++++++-----
> > 
> > Well, we all know how difficult is to pick up names, but I would avoid
> > use `python` here. This is the name of python bin itself. Is there any
> > chance of a clash? I do not have a specific case right now, I'm just
> > wondering if it can happen we should avoid.
> > 
> 
> The point of the "python" directory, is that it's not supposed to be the
> *module* name, but a holder for the Python module, which is "qemu".
> Given that "python is not a module", has no __init__.py, I don't think
> it'll ever clash.
> 
> The reason for picking the name is that it makes it obvious, within the
> QEMU tree, that this is Python stuff.  I already have some tests, to
> test the "Python stuff", to put it under "python", probably in
> "python/tests".

Ok, now I got your point. No problem.

> 
> Anyway, it'd be nice to think of alternatives here.
> 
> >>  {scripts/qmp => python/qemu}/qmp.py        |  0
> >>  {scripts => python/qemu}/qtest.py          |  5 +++--
> >>  scripts/device-crash-test                  |  5 +++++
> >>  scripts/qmp/__init__.py                    |  0
> >>  tests/acceptance/avocado_qemu/__init__.py  |  9 +++++----
> >>  tests/migration/guestperf/engine.py        | 10 +++++++---
> >>  tests/qemu-iotests/iotests.py              |  8 ++++++--
> >>  tests/vm/basevm.py                         |  9 +++++++--
> >>  10 files changed, 40 insertions(+), 18 deletions(-)
> >>  rename scripts/qemu.py => python/qemu/__init__.py (98%)
> >>  rename {scripts/qmp => python/qemu}/qmp.py (100%)
> >>  rename {scripts => python/qemu}/qtest.py (97%)
> > 
> > What if we keep `qmp.py` and `qtest.py` directly under `/python`
> > directory?  It seems it can be more semantic regarding the subject of
> > each module. I'm not completely sure about `qmp.py`, but definetly I
> > think qtest should be under python directly.
> > 
> 
> I still think having a uniform starting point for the module, such as
> "qemu" is a good practice for all QEMU Python code.  Having independent
> first level modules will make it harder to understand where the code is
> coming from.  For instance, we have the option of coming up with a
> structure that would allow:
> 
> 
>  import os
>  import struct
>  import qmp
>  import urllib
> 
> 
> And the origin of "qmp" would go unnoticed.  Alternatively:
> 
> 
>  import os
>  import struct
>  import urllib
>  from qemu import qmp
> 
> 
> Is much clearer.  Now, with regards to "qmp", it's pretty much
> standalone, uses only Python libraries, while "qemu" consumes "qmp"
> functionality.  I believe having "qemu.qmp" is appropriate here.
> 
> Now, for "qtest", you have a point, it uses QEMUMachine, and its content
> is very similar to what's available under "qemu" itself (that is,
> QEMUMachine itself).  IMO, it would make sense to just have the
> QEMUQtestProtocol and QEMUQtestMachine at the "qemu" level at this
> point, that is, fold their content into "qemu/__init__.py".
> 
> The API usage would then become:
> 
> 
>  from qemu import QEMUQTestMachine
> 
> 
> Similar to:
> 
> 
>  from qemu import QEMUMachine
> 
> 
> I refrained from changing too much at the initial RFC time, though,
> exactly to make less biased discussions.

Well, I agree with you here. For a first step we shouldn't be changing too
much the structure. I'm ok moving forward this way for now.

> 
> 
> >>  delete mode 100644 scripts/qmp/__init__.py
> >>
> >> diff --git a/configure b/configure
> >> index 0a3c6a72c3..2b64c51009 100755
> > [...]
> >> rename from scripts/qemu.py
> >> rename to python/qemu/__init__.py
> > [...]
> >> diff --git a/scripts/qmp/qmp.py b/python/qemu/qmp.py
> >> similarity index 100%
> >> rename from scripts/qmp/qmp.py
> >> rename to python/qemu/qmp.py
> >> diff --git a/scripts/qtest.py b/python/qemu/qtest.py
> >> similarity index 97%
> >> rename from scripts/qtest.py
> >> rename to python/qemu/qtest.py
> >> index adf1fe3f26..bff79cdd13 100644
> >> --- a/scripts/qtest.py
> >> +++ b/python/qemu/qtest.py
> > [...]
> >> diff --git a/scripts/device-crash-test b/scripts/device-crash-test
> >> index e93a7c0c84..c75ae0ecbc 100755
> >> --- a/scripts/device-crash-test
> >> +++ b/scripts/device-crash-test
> >> @@ -35,6 +35,11 @@ import random
> >>  import argparse
> >>  from itertools import chain
> >>  
> >> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
> >> +TOP_DIR = os.path.dirname(THIS_DIR)
> >> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
> >> +sys.path.append(PYTHON_MODULE_PATH)
> > 
> > This sys.path handling to use the new QEMU Python module is not good. I
> > understand it can be a first step, but to expect everyone knows/do it to
> > use the module is a bad assumption because it's not intuitive and can
> > cause some confusion.
> > 
> > If we need something available from a Python script/module that is not
> > directly acessible from PYTHONPATH we should install it so Python can
> > turn it available. So, probably we need to think make `python/qemu` a
> > proper installable module.
> >
> 
> It's something that is confusing for mode experienced Python developers,
> but I have some experience with way too many people not understanding at
> all why an extra step (the module installation), was necessary for using
> Python code from within a source tree.  We faced a LOT of questions, for
> a long time, when we did the switch in Avocado itself.
> 
> To summarize, you're right about the end goal, and I hope we'll get
> there and remove this boiler plate code.  But, I think we need an
> intermediary step.
> 
> >> +
> >>  from qemu import QEMUMachine
> >>  
> >>  logger = logging.getLogger('device-crash-test')
> >> diff --git a/scripts/qmp/__init__.py b/scripts/qmp/__init__.py
> >> deleted file mode 100644
> > [...]
> >> diff --git a/tests/migration/guestperf/engine.py b/tests/migration/guestperf/engine.py
> >> index 398e3f2706..73c9b66821 100644
> >> --- a/tests/migration/guestperf/engine.py
> >> +++ b/tests/migration/guestperf/engine.py
> >> @@ -24,13 +24,17 @@ import re
> >>  import sys
> >>  import time
> >>  
> >> -sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', '..', 'scripts'))
> >> -import qemu
> >> -import qmp.qmp
> >>  from guestperf.progress import Progress, ProgressStats
> >>  from guestperf.report import Report
> >>  from guestperf.timings import TimingRecord, Timings
> >>  
> >> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
> >> +TOP_DIR = os.path.dirname(os.path.dirname(os.path.dirname(THIS_DIR)))
> >> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
> >> +sys.path.append(PYTHON_MODULE_PATH)
> >> +
> >> +import qemu
> > 
> > Since `qemu` is a common word here, I would rather import the members
> > directly than only the module. Just like you did in
> > `/tests/vm/basevm,py`
> > 
> 
> Right, I avoided changing too much of the code using the modules, but I
> do agree with you here.
> 
> Thanks for the feedback!
> - Cleber.
> 
> >> +
> >>  
> >>  class Engine(object):
> >>  
> >> diff --git a/tests/qemu-iotests/iotests.py b/tests/qemu-iotests/iotests.py
> >> index d537538ba0..92fddd2a58 100644
> >> --- a/tests/qemu-iotests/iotests.py
> >> +++ b/tests/qemu-iotests/iotests.py
> >> @@ -31,8 +31,12 @@ import logging
> > [...]
> >> --- a/tests/vm/basevm.py
> >> +++ b/tests/vm/basevm.py
> >> @@ -17,8 +17,6 @@ import sys
> >>  import logging
> >>  import time
> >>  import datetime
> >> -sys.path.append(os.path.join(os.path.dirname(__file__), "..", "..", "scripts"))
> >> -from qemu import QEMUMachine, kvm_available
> >>  import subprocess
> >>  import hashlib
> >>  import optparse
> >> @@ -28,6 +26,13 @@ import shutil
> >>  import multiprocessing
> >>  import traceback
> >>  
> >> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
> >> +TOP_DIR = os.path.dirname(os.path.dirname(THIS_DIR))
> >> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
> >> +sys.path.append(PYTHON_MODULE_PATH)
> >> +
> >> +from qemu import QEMUMachine, kvm_available
> >> +
> >>  SSH_KEY = open(os.path.join(os.path.dirname(__file__),
> >>                 "..", "keys", "id_rsa")).read()
> >>  SSH_PUB_KEY = open(os.path.join(os.path.dirname(__file__),
> >> -- 
> >> 2.19.1
> >>
> > 
> > Thanks,
> > 
> 
> -- 
> Cleber Rosa
> [ Sr Software Engineer - Virtualization Team - Red Hat ]
> [ Avocado Test Framework - avocado-framework.github.io ]
> [  7ABB 96EB 8B46 B94D 5E0F  E9BB 657E 8D33 A5F2 09F3  ]

-- 
Caio Carrara
Software Engineer, Virt Team - Red Hat
ccarrara@redhat.com

