Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:46:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E52E8580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 07:02:36 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:02:36 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AcTkT6RzdjxXt1svXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2u8WIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJOT03/2PZisN+g61UvB2vqQFnw4PWYo+YO+dyc63BcdwEXmpMRdpRWi5bD4+g?=
 =?us-ascii?q?c4cCFegMMOBFpIf9vVsOqh6+CBGrCuPuyT9IhmX53aw+0+88DQzJxxYvH9ETsH?=
 =?us-ascii?q?TRq9X1KroZXOewzKnJzjXDb+lZ2Tb56ITSaB8uuuuDXbFtccrUzkkvCRjIjlSL?=
 =?us-ascii?q?qYz9JTOazP8Nv3KB7+p9TO+ijXMspQJpojW32MsglorEipgIxlzZ9ih12pg5KN?=
 =?us-ascii?q?O4RUJhfNKpEoNcuiKaOodsX88vTH9ktDwnxrEbu5O3ZjYGxIomyhPZdveJaZKH?=
 =?us-ascii?q?4gj5W+aUOTp4hGxqeLa4hxuq9Uigy/b8VtWv0FpQoSpFlMTMumoK1xzJ5ciLUv?=
 =?us-ascii?q?p9/kG/1jaTzw3f9P1ILEMumabGNpIswaQ8moQdvEnDBCP6hUf7gLeTdko+++io?=
 =?us-ascii?q?7+rnYq/hpp+ZL4J0kx/xMqEzmsCmHOs3LBYOUHaf+eilz7Lj+lD5QLNWgfIoia?=
 =?us-ascii?q?nVt5TaJcUYpqGnGQNU3Zsj5g67Dzen1tQYgHYGIEhEeBKBk4jmJVXOLOrkAve4?=
 =?us-ascii?q?hlShizFrx/fAPr3uBJXNM2LPkLD7fbZy80Jc0hY8zchD55JIDbEMOPbzWk7ytN?=
 =?us-ascii?q?PGFBM4PBG0zv3jCNV80IMeRG2ODrWYMKPUrV+H+OYvL/OQa48SvTauY8Uj/OPk?=
 =?us-ascii?q?2H8lhUcGL+7u2ZoMdGv+GPNgLEOEJ332jZAEGGYOuwM4C+vylFyFVyUUfnu3Qu?=
 =?us-ascii?q?cw6y82DNGbC5zeTNWoib2FwCDpB5BTeyVKB06BFTLyepyZVuwQQCSVJMBnj3oD?=
 =?us-ascii?q?T7f2UJIr1xylqFrnzaF6JPHf4CwSuMHf041s6ujO0B0/6zFwJ8Ka1W6LUidzhG?=
 =?us-ascii?q?xbaSUx2fVaoE99w1aHmYFyiv9FENtNr6dMUwQ6PJ/YieVwAtPvXwXfVtaSUEyv?=
 =?us-ascii?q?WZO8HGdiHZoK39YSbhMlSJ2ZhRfZ0n/yDg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A0AgA5/v9bhxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDeYh3iymBaIEhkRwUIIR4gXEWGBSCE4IoA4M2IjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOL4I2BQIDGAmCXAMDAQIgBB8KKQMDAQIGAQEkAiIEAgIDAUMQG?=
 =?us-ascii?q?QWDHIICAQMBphB8M4osgQuBI4logVc/gREzgiqEf4EEgjeCVwKPajGQCAcCgh0?=
 =?us-ascii?q?EhCGLCIpAhlyYToFGgg1NMoEBCFaBToInFxKODm+BB4ptVoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0A0AgA5/v9bhxHrdtBkHgEGBwaBUQkLAYEwgmKDeYh3iym?=
 =?us-ascii?q?BaIEhkRwUIIR4gXEWGBSCE4IoA4M2IjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL?=
 =?us-ascii?q?4I2BQIDGAmCXAMDAQIgBB8KKQMDAQIGAQEkAiIEAgIDAUMQGQWDHIICAQMBphB?=
 =?us-ascii?q?8M4osgQuBI4logVc/gREzgiqEf4EEgjeCVwKPajGQCAcCgh0EhCGLCIpAhlyYT?=
 =?us-ascii?q?oFGgg1NMoEBCFaBToInFxKODm+BB4ptVoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="140094859"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 07:02:36 -0800
Received: from localhost ([::1]:54655 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSNpr-0003nc-Ci
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 10:02:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53207)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gSNJa-00056R-CS
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:29:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gSNJW-00078k-UY
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:29:12 -0500
Received: from mail.ispras.ru ([83.149.199.45]:39592)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gSNJW-00075Z-HU
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:29:10 -0500
Received: from Misha-PC.lan02.inno (unknown [85.142.117.226])
	by mail.ispras.ru (Postfix) with ESMTPSA id A1AEE54010F;
	Thu, 29 Nov 2018 17:29:08 +0300 (MSK)
From: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
To: qemu-devel@nongnu.org
Date: Thu, 29 Nov 2018 17:29:06 +0300
Message-ID: <154350174606.8036.1192124629967069868.stgit@Misha-PC.lan02.inno>
In-Reply-To: <154350164526.8036.12623669071583857903.stgit@Misha-PC.lan02.inno>
References: <154350164526.8036.12623669071583857903.stgit@Misha-PC.lan02.inno>
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 83.149.199.45
Subject: [Qemu-devel] [PATCH 17/39] windbg: generate ExceptionStateChange
 and LoadSymbolsStateChange
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: sw@weilnetz.de, lprosek@redhat.com, dovgaluk@ispras.ru,
	rkagan@virtuozzo.com, pbonzini@redhat.com, den@openvz.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
Signed-off-by: Pavel Dovgalyuk <dovgaluk@ispras.ru>
---
 include/exec/windbgstub-utils.h |    3 +++
 target/i386/windbgstub.c        |   33 ++++++++++++++++++++++++++++++++-
 2 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/include/exec/windbgstub-utils.h b/include/exec/windbgstub-utils.h
index a28068eecd..794cb387b0 100644
--- a/include/exec/windbgstub-utils.h
+++ b/include/exec/windbgstub-utils.h
@@ -67,6 +67,9 @@ typedef struct PacketData {
 const char *kd_api_name(int id);
 const char *kd_pkt_type_name(int id);
 
+DBGKD_ANY_WAIT_STATE_CHANGE *kd_state_change_exc(CPUState *cs);
+DBGKD_ANY_WAIT_STATE_CHANGE *kd_state_change_ls(CPUState *cs);
+
 bool windbg_on_load(void);
 void windbg_on_reset(void);
 
diff --git a/target/i386/windbgstub.c b/target/i386/windbgstub.c
index b2ac7a6d5f..37c5805818 100644
--- a/target/i386/windbgstub.c
+++ b/target/i386/windbgstub.c
@@ -161,7 +161,6 @@ void windbg_on_reset(void)
 #endif
 }
 
-__attribute__ ((unused)) /* unused yet */
 static void kd_init_state_change(CPUState *cs, DBGKD_ANY_WAIT_STATE_CHANGE *sc)
 {
     X86CPU *cpu = X86_CPU(cs);
@@ -201,3 +200,35 @@ static void kd_init_state_change(CPUState *cs, DBGKD_ANY_WAIT_STATE_CHANGE *sc)
     memset(cr->InstructionStream, 0, DBGKD_MAXSTREAM);
     stw_p(&cr->InstructionCount, 0);
 }
+
+DBGKD_ANY_WAIT_STATE_CHANGE *kd_state_change_exc(CPUState *cs)
+{
+    DBGKD_ANY_WAIT_STATE_CHANGE *sc = g_new0(DBGKD_ANY_WAIT_STATE_CHANGE, 1);
+    DBGKM_EXCEPTION_RECORD64 *exc = &sc->u.Exception.ExceptionRecord;
+    X86CPU *cpu = X86_CPU(cs);
+    CPUX86State *env = &cpu->env;
+
+    kd_init_state_change(cs, sc);
+
+    stl_p(&sc->NewState, DbgKdExceptionStateChange);
+    sttul_p(&exc->ExceptionAddress, env->eip);
+
+    /* TODO: Fix this hardcoded value. */
+    stl_p(&exc->ExceptionCode, 0x80000003);
+
+    return sc;
+}
+
+DBGKD_ANY_WAIT_STATE_CHANGE *kd_state_change_ls(CPUState *cs)
+{
+    DBGKD_ANY_WAIT_STATE_CHANGE *sc = g_new0(DBGKD_ANY_WAIT_STATE_CHANGE, 1);
+
+    kd_init_state_change(cs, sc);
+
+    stl_p(&sc->NewState, DbgKdLoadSymbolsStateChange);
+
+    /* TODO: Path to load symbold (with extra array). */
+    stl_p(&sc->u.LoadSymbols.PathNameLength, 0);
+
+    return sc;
+}


