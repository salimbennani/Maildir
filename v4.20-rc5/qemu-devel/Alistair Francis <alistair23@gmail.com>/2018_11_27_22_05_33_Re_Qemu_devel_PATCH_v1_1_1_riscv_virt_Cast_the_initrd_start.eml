Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:50:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 18B52580460
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 14:06:17 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 14:06:16 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AWJRttRznQOrcZovXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uMeIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?cYUAE/cPPf5aoof/qFYCsBWzCRWyC+P00TJImmP60Lcm3+g9DQ3L3gotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fXPyxzKnJ1jXDc+lZ2Tbn6IPVch4hu+uDXbRsfsrQ0kkkCgTIgU+U?=
 =?us-ascii?q?qYzkJDOVyv4Cs2mB7+Z+W++ikGEnqwRrrTiuwscgkJXGhoUQyl3d8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpE4FcuzyHO4Z1WM8uXW9ltSYgxrEbu5O3ZDYGx447yxLDbvGLboeF?=
 =?us-ascii?q?7xL/WOuULjp1h3Nodb26ihqs7UStz+jxWtS73VpXqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3T7uBEIVsolarAMZIhzbgwlocJvUTEBC/2l136jK6Qdko65uil?=
 =?us-ascii?q?8/rrbqnlq5OGKoN4lwLzPr4wlsGxAek0KBUCUmqD9eS5zrLj/En5QLtQjv0xl6?=
 =?us-ascii?q?nUqInaKtoepq6kGgNaz5gs6wihADeiydgXhn4HLE9DeB2bkYfpIFbCIPT5Dfe8?=
 =?us-ascii?q?nVugijhqx+3eM73lA5XNKGXDkbj7cbZ87U5c1BQ8zdRF651IDbEBJen+Wkn2tN?=
 =?us-ascii?q?zeAR85NRG0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKu1l2cerxlVfXUSJPf23gGO?=
 =?us-ascii?q?U45yonE8SgCoHMQJ3rh6aOmyKyH5lTb2YBDUiQEHDubMKdVvIRLS6fPMJlwQEC?=
 =?us-ascii?q?TqWrHooo1BWys13jxr96a+bZ5CAc8IjuzcV4/PH7kxY0+jppScOH3DaWUmt2k2?=
 =?us-ascii?q?gUEiIwx711ukdny12OgpR/1sRREdle/btlWw0wOJrAh7hiAtT3VxjpZdaHSUir?=
 =?us-ascii?q?BN6hBGdiYMg2xoonZ0dmB9yjlFjtxSOsCL4O3+iCAJ0v7qvdxSKqD8l4wnfCkq?=
 =?us-ascii?q?Imig91EYN0KWS6i/snpEDoDInTnhDczv7yeA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAACkvv1bhxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDeYh3iymCDXyIACSOIIFzFBgUh1oiNAkNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4jDII2BQIDGgEGglsBAQEBAgEBAiAdAQUKDB0BAgECAQIGAQEFBQsHBgICI?=
 =?us-ascii?q?gQCAgMBHQEBEQEFAQ4OBhMFgxyBaQEDDQgBBJp6PIsNgRIFAReCdwWESQoZJw1?=
 =?us-ascii?q?dgTcCBhJ5iwKCFoERgl01gleBc4M7glcCgSoBAY5rhEGLBi0BBgIBgVEFSotkg?=
 =?us-ascii?q?ywYkQuOUIlYDyGBJYINHxQaI4EBbYFOghs1gziKdCAxgQeKOVaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AkAACkvv1bhxHrdtBkHgEGBwaBUQkLAYEwgmKDeYh3iym?=
 =?us-ascii?q?CDXyIACSOIIFzFBgUh1oiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDG?=
 =?us-ascii?q?gEGglsBAQEBAgEBAiAdAQUKDB0BAgECAQIGAQEFBQsHBgICIgQCAgMBHQEBEQE?=
 =?us-ascii?q?FAQ4OBhMFgxyBaQEDDQgBBJp6PIsNgRIFAReCdwWESQoZJw1dgTcCBhJ5iwKCF?=
 =?us-ascii?q?oERgl01gleBc4M7glcCgSoBAY5rhEGLBi0BBgIBgVEFSotkgywYkQuOUIlYDyG?=
 =?us-ascii?q?BJYINHxQaI4EBbYFOghs1gziKdCAxgQeKOVaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,288,1539673200"; 
   d="scan'208";a="64261448"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 14:06:15 -0800
Received: from localhost ([::1]:44774 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRlUl-0002dt-BS
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 17:06:15 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57688)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alistair23@gmail.com>) id 1gRlUa-0002do-AW
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 17:06:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alistair23@gmail.com>) id 1gRlUZ-0004P4-4u
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 17:06:04 -0500
Received: from mail-lf1-x141.google.com ([2a00:1450:4864:20::141]:38303)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alistair23@gmail.com>)
	id 1gRlUY-0004OR-Rz; Tue, 27 Nov 2018 17:06:03 -0500
Received: by mail-lf1-x141.google.com with SMTP id p86so17817342lfg.5;
	Tue, 27 Nov 2018 14:06:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc; bh=v81vrwaGZVW59Urn75YYTsWzDK/m4kr8kOw3gkLlZsg=;
	b=g1ZvOPw64GwS2/QIVgDV4gPofVfJ1KdOT+GoEF9N3uSDnJtoNkATKtVFkazf8lG3jW
	CGDu4iBFUJg10sQrXiFIgYq3bkATVlrdYjklvutABp1fGirgxYhjuGA+tqQWiKjezoWr
	WQbtOOFTNIRIBy4e2nHtt4u5uDTz4fpfTAlNThCndjU6RTjERSgky4Y5iCwqFjjA8xo0
	MDriuEWudhVMiRfhdbnao/YZJioguiX+kAOizzYp30cm1wJEjTsM5Cn9grfhoQzvQNae
	LJuCUy4JrZelLK5NBd5dRbAKUGBN3giwXGfbgr7fOWG1BxQ6SMMf3Dh+Pw+OyQPoH6jQ
	udhQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc;
	bh=v81vrwaGZVW59Urn75YYTsWzDK/m4kr8kOw3gkLlZsg=;
	b=p9oPyqPTRhRObmh+V2u0XDwRZ2T05Xae5ADZ2Xz0cPvlEnQ7lIeT5GD+G7Pa5b6Duv
	5FVH3ylfTwUEEeWryT+k6DlOYIebN8/CMrqneFiyjtKpW6YLuEUSVRtpZkq3VZE1DJvh
	B55n3KEE9d2B2R25dz3XYM8C7D8cvTASnTnrhhZkukH124lKV4RvD5GwY9KtDlyZPulp
	dImqxeLzzHPu2ti3swvjdnW+tICb5lqG91wBA4JbmNNd3iT5CMiun1OUMu0Hcxc0WT5V
	hG0Zg8+omVEsjf6GUjiU8SBhNdiMsqyEFgPWpBe/fnhbrZu88D1fZbWEUyDe49MFzMiZ
	oxzg==
X-Gm-Message-State: AGRZ1gKNth4Ig5lpdBCD2/skykxeJ5xs8+3fl1d51SbssBFjViYjx3Z1
	l4XbOT8Hr1k/RItt0fyiRWnMk+NByfsckEtjqhY=
X-Google-Smtp-Source: AJdET5fIA3175kIPNllsqEU6CGfUKiSEudjwEO2Row7UHt90O5KRe0m6nlCZdplwOK6fSCsirbf8wnYdP6kn40Yd0QE=
X-Received: by 2002:a19:8fce:: with SMTP id s75mr19333397lfk.151.1543356360878;
	Tue, 27 Nov 2018 14:06:00 -0800 (PST)
MIME-Version: 1.0
References: <CAKmqyKMdNs4etff7rc0vDy_tmZf5deP1Geu0GchkENu+em5=+w@mail.gmail.com>
	<mhng-b345219b-56ea-4aee-b25e-95c762c54b49@palmer-si-x1c4>
In-Reply-To: <mhng-b345219b-56ea-4aee-b25e-95c762c54b49@palmer-si-x1c4>
From: Alistair Francis <alistair23@gmail.com>
Date: Tue, 27 Nov 2018 14:05:33 -0800
Message-ID: <CAKmqyKPtn-C5rm3ggj5CvAAXh+Gq=u8YDh1S8Wmsb=tsLjcsXA@mail.gmail.com>
To: Palmer Dabbelt <palmer@sifive.com>
Content-Type: text/plain; charset="UTF-8"
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::141
Subject: Re: [Qemu-devel] [PATCH v1 1/1] riscv: virt: Cast the initrd start
 address to target bit length
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-riscv@nongnu.org, Alistair Francis <Alistair.Francis@wdc.com>,
	"qemu-devel@nongnu.org Developers" <qemu-devel@nongnu.org>,
	Alexander Graf <agraf@suse.de>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, Nov 26, 2018 at 11:02 AM Palmer Dabbelt <palmer@sifive.com> wrote:
>
> On Wed, 21 Nov 2018 18:09:27 PST (-0800), alistair23@gmail.com wrote:
> > On Wed, Nov 21, 2018 at 5:58 PM Palmer Dabbelt <palmer@sifive.com> wrote:
> >>
> >> On Wed, 21 Nov 2018 14:34:44 PST (-0800), Alistair Francis wrote:
> >> > Ensure that the calculate initrd offset points to a valid address for
> >> > the architecture.
> >> >
> >> > Signed-off-by: Alistair Francis <alistair.francis@wdc.com>
> >> > Suggested-by: Alexander Graf <agraf@suse.de>
> >> > Reported-by: Alexander Graf <agraf@suse.de>
> >> > ---
> >> >  hw/riscv/virt.c | 7 ++++++-
> >> >  1 file changed, 6 insertions(+), 1 deletion(-)
> >> >
> >> > diff --git a/hw/riscv/virt.c b/hw/riscv/virt.c
> >> > index 2b38f89070..4467195fac 100644
> >> > --- a/hw/riscv/virt.c
> >> > +++ b/hw/riscv/virt.c
> >> > @@ -85,7 +85,12 @@ static hwaddr load_initrd(const char *filename, uint64_t mem_size,
> >> >       * halfway into RAM, and for boards with 256MB of RAM or more we put
> >> >       * the initrd at 128MB.
> >> >       */
> >> > -    *start = kernel_entry + MIN(mem_size / 2, 128 * MiB);
> >> > +    /* As hwaddr is a 64-bit number we need to cast it for 32-bit */
> >> > +#if defined(TARGET_RISCV32)
> >> > +    *start = (uint32_t) (kernel_entry + MIN(mem_size / 2, 128ULL * MiB));
> >> > +#elif defined(TARGET_RISCV64)
> >> > +    *start = (uint64_t) (kernel_entry + MIN(mem_size / 2, 128 * MiB));
> >> > +#endif
> >> >
> >> >      size = load_ramdisk(filename, *start, mem_size - *start);
> >> >      if (size == -1) {
> >> > --
> >> > 2.19.1
> >>
> >> Maybe I'm missing something, but wouldn't something like
> >>
> >>     uint64_t start_unclobbered = kernel_entry + MIN(mem_size / 2, 128ULL * MiB);
> >>     assert(start_unclobbered == (hwaddr)start_unclobbered);
> >>     *start = (hwaddr)start_unclobbered;
> >>
> >> work better?  That should actually check this all lines up, as opposed to just
> >> silently truncating a bad address.
> >
> > The problem is that hwaddr is always 64-bit.
> >
> > Stupidly I forgot about target_ulong, which should work basically the
> > same as above. An assert() seems a little harsh though, Alex reported
> > problem was fixed with just a cast.
>
> OK, I must be misunderstanding the problem, then.  With the current code, isn't
> it possible to end up causing start to overflow a 32-bit address?  This would
> happen if kernel_entry is high, with IIUC is coming from the ELF to load and is
> therefor user input.  I think that's worth some sort of assertion, as it'll
> definitely blow up trying to enter the kernel (and possible before that,
> assuming there's no target memory where it overflows into).

I don't have a setup to reproduce this unfortunately, but Alex
reported that he saw start being excessively high (0xffffffff88000000)
when loading an initrd.

It looks like the kernel entry address ends up being converted to
0xffffffff80000000 incorrectly instead of being a real overflow.

Alistair

>
> This won't happen with the default Linux setup, but could happen if users are
> trying to do something weird.

