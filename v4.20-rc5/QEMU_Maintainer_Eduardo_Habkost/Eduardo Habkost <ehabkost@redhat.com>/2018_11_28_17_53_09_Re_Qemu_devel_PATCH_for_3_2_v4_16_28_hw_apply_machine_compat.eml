Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:39:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 14E1F5803ED
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 09:55:46 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga006-1.fm.intel.com with ESMTP; 28 Nov 2018 09:55:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ALYsIAxV2m3sfjYo737KGUZDdS5jV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSFvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQCM+ZXoJXyqEYMohSwCgeiGfvvxz1KiHL5wKE33fgtHh/d3AE7A9IOqW?=
 =?us-ascii?q?7ZoMnpOKoITOy4yrTDwzXZb/NR3Dfw8IfGfQ08of6WR7J/bM3RwlQtGQzflVqQ?=
 =?us-ascii?q?qovlPyiJ1u8QtGWU8epgWvi0hG4krAFxuSSvy9w2iobXm40VykrL9TljzIkpIt?=
 =?us-ascii?q?24TVd2bNi5G5VesCGaMpF5QsIkQ2xwviY6zbsGuZG9fCgX0pgnwATfa/OBfoOV?=
 =?us-ascii?q?4RzjTP6cLSlkiH9mYr6zmgu+/Eu6xuHiWMS50ExGojdHn9XUqHwByxje5tKaRv?=
 =?us-ascii?q?Zz4EutwyuD2gPd5+1eP0w5lqzWIIM7zLEqjJocq0HDEzf2mEroiK+WcV0p+uyp?=
 =?us-ascii?q?6+T8frXmvYWQN4ByigHjKKgunda/AesgPggPWWiU5/i82aX98UHlQ7hGlOA6nr?=
 =?us-ascii?q?TavZzAO8gWqK60DxVI3osh8xq/Ci2p0NUcnXkJNlJFfxeHgpDwO17QJfD4EO6z?=
 =?us-ascii?q?jEmynzd12f/GOqTtDY7KLnjelrfuYahy61VbxAo3zNBf5IxbBqsOIfLuQkLxsN?=
 =?us-ascii?q?3YDhkkMw272ernCdN91p8AVmKLGKOWLKTSsVqT6+IpJOmMYoAVuDDgK/Q/4P7u?=
 =?us-ascii?q?l3A5lUcHfaa1xZsXdGy4HvN+LkWdYHrsgckOHX0FvwojV+HqjFyCUThOZ3e9Ra?=
 =?us-ascii?q?485zc7CJ64AofHXIyinLuB3CLoVqBQfX1MX1CQDW/zJcLDX/YXdDnUJMhnnToZ?=
 =?us-ascii?q?E7+7RMgk3BCqsQb8jL1/MuvT/DZfrJ/myZ156vPekUIP8ydpBZGY2mCJU2Ymh2?=
 =?us-ascii?q?4NWno60b5ypQlnx06e3LNkq/pfE9NV+rVOSAhtLoPWzeFxF4XvXBncdMyCUles?=
 =?us-ascii?q?T4aaBmQQQdUri/oHZkNwF9K8xkTC2iOvBrIZkJSRCZA0+76a1H/0cZVT0XHDgY?=
 =?us-ascii?q?QtklA8TswHFWSshalk60CHCo7AmUaejLqCb6kQ3CfRsmyEyDzd7wljTAdsXPCd?=
 =?us-ascii?q?DjgkbUzMoIG8vxuaQg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAA91v5bhxHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIE5gRYTjBFfiymCDZdCgXMUGAsJhECDLiI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECJB8KKQMDA?=
 =?us-ascii?q?QIGAQEKDgoJGgMIAwELBRQ1EwWDHAGBeQgBBAqnYTOELQEDAgxChSwFjBYXgUA?=
 =?us-ascii?q?/gRGDEoMeAQICgV6FWwKgGwmGfYYYM4NeI4F9h1uHPY1UinSBRoINMxoIGxWDJ?=
 =?us-ascii?q?4InFxKITIVXKTEBgQYciyCBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAAA91v5bhxHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIE5gRYTjBFfiymCDZdCgXMUGAsJhECDLiI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECJB8KKQMDAQIGAQEKDgoJGgM?=
 =?us-ascii?q?IAwELBRQ1EwWDHAGBeQgBBAqnYTOELQEDAgxChSwFjBYXgUA/gRGDEoMeAQICg?=
 =?us-ascii?q?V6FWwKgGwmGfYYYM4NeI4F9h1uHPY1UinSBRoINMxoIGxWDJ4InFxKITIVXKTE?=
 =?us-ascii?q?BgQYciyCBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="55236141"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 09:55:25 -0800
Received: from localhost ([::1]:49312 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gS43Y-0002TO-6a
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 12:55:24 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47150)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gS41y-0000RM-Fy
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 12:53:48 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gS41w-0003a0-Cr
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 12:53:46 -0500
Received: from mx1.redhat.com ([209.132.183.28]:43330)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>)
	id 1gS41p-0002HP-Ns; Wed, 28 Nov 2018 12:53:37 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id DFB253004427;
	Wed, 28 Nov 2018 17:53:19 +0000 (UTC)
Received: from localhost (ovpn-116-21.gru2.redhat.com [10.97.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 0F69C1F2;
	Wed, 28 Nov 2018 17:53:10 +0000 (UTC)
Date: Wed, 28 Nov 2018 15:53:09 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: Igor Mammedov <imammedo@redhat.com>
Message-ID: <20181128175309.GY18284@habkost.net>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
	<20181127092801.21777-17-marcandre.lureau@redhat.com>
	<20181127125644.GB18284@habkost.net>
	<CAMxuvaySoJ2TokV8M81CVU3Hp4dC25c+PW_p2kk+V88-88U-CQ@mail.gmail.com>
	<20181127133527.GI18284@habkost.net>
	<20181128184027.7d584eaa@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20181128184027.7d584eaa@redhat.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.49]);
	Wed, 28 Nov 2018 17:53:20 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v4 16/28] hw: apply machine compat
 properties without touching globals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	"Michael S . Tsirkin" <mst@redhat.com>, cohuck@redhat.com,
	David Hildenbrand <david@redhat.com>,
	qemu-devel <qemu-devel@nongnu.org>, borntraeger@de.ibm.com,
	qemu-s390x@nongnu.org, qemu-arm@nongnu.org, qemu-ppc@nongnu.org,
	"Bonzini, Paolo" <pbonzini@redhat.com>,
	=?iso-8859-1?Q?Marc-Andr=E9?= Lureau <marcandre.lureau@redhat.com>,
	david@gibson.dropbear.id.au, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, Nov 28, 2018 at 06:40:27PM +0100, Igor Mammedov wrote:
> On Tue, 27 Nov 2018 11:35:27 -0200
> Eduardo Habkost <ehabkost@redhat.com> wrote:
>=20
> > On Tue, Nov 27, 2018 at 05:10:05PM +0400, Marc-Andr=E9 Lureau wrote:
> > > On Tue, Nov 27, 2018 at 4:57 PM Eduardo Habkost <ehabkost@redhat.co=
m> wrote: =20
> > > >
> > > > On Tue, Nov 27, 2018 at 01:27:49PM +0400, Marc-Andr=E9 Lureau wro=
te: =20
> > > > > Similarly to accel properties, move compat properties out of gl=
obals
> > > > > registration, and apply the machine compat properties during
> > > > > device_post_init().
> > > > >
> > > > > Signed-off-by: Marc-Andr=E9 Lureau <marcandre.lureau@redhat.com=
> =20
> > > > [...] =20
> > > > > diff --git a/hw/core/qdev.c b/hw/core/qdev.c
> > > > > index 7066d28271..3b31b2c025 100644
> > > > > --- a/hw/core/qdev.c
> > > > > +++ b/hw/core/qdev.c
> > > > > @@ -971,17 +971,26 @@ static void device_initfn(Object *obj)
> > > > >  }
> > > > >
> > > > >  static const GPtrArray *ac_compat_props;
> > > > > +static const GPtrArray *mc_compat_props;
> why you didn't use just 'compat_props' for both?
> (it would be cleaner have single registry for compat
> properties, and the place that takes care of registration
> will take care of necessary ordering)
>=20
> > > > >
> > > > >  void accel_register_compat_props(const GPtrArray *props)
> > > > >  {
> > > > >      ac_compat_props =3D props;
> > > > >  }
> > > > >
> > > > > +void machine_register_compat_props(const GPtrArray *props)
> > > > > +{
> > > > > +    mc_compat_props =3D props;
> > > > > +}
> > > > > +
> > > > >  static void device_post_init(Object *obj)
> > > > >  {
> > > > >      if (ac_compat_props) {
> > > > >          object_apply_global_props(obj, ac_compat_props, &error=
_abort);
> > > > >      } =20
> > > >
> > > > Why not just use MACHINE(qdev_get_machine())->accel->compat_props
> > > > directly?
> > > > =20
> > > > > +    if (mc_compat_props) {
> > > > > +        object_apply_global_props(obj, mc_compat_props, &error=
_abort);
> > > > > +    } =20
> > > >
> > > > Why not just use MACHINE(qdev_get_machine())->compat_props
> > > > directly? =20
> > >=20
> > > This was the approach in v3, but Igor didn't quite like referencing
> > > machine in qdev:
> > > https://lists.nongnu.org/archive/html/qemu-devel/2018-11/msg04774.h=
tml =20
> >=20
> > I disagree with Igor, here.  Core qdev code already have multiple
> > references to machine, I don't see any problem with that.
> (There are only 3 calls to qdev_get_machine() in core qdev.c
> blame me for adding one there. Which were hacks so we won't
> have to re-factor core qdev code. But that doesn't justify adding more.=
)
>=20
> This patch is an interim one and later in 25/28
> device_post_init() content is moved to a more generic compat interface
> implementation. That intended for use with types derived from Object
> (i.e. not only qdev stuff). Hence I'd like to decouple it from
> machine as a standalone feature as much as possible. So that
> machine (or whatever else) will opt in in using facility.

Why do you want to decouple that from machine?  The whole purpose
of the code being added by this patch (and of TYPE_COMPAT_PROPS)
is to have objects being affected by machine-provided and
accel-provided compat properties.  Having a dependency on
machine+accel is part of its specification.


>=20
> > The previous code was clearer and easier to follow, and wasn't
> > sensitive to subtle changes in initialization ordering (e.g. what
> > happens if we create a device before *_register_compat_props() is
> > called?).
> Indeed It seems clearer to follow (that was my first impression as well=
),
> until I went through whole series and thought it's basically the same,
> So my choice was to use cleaner approach that we won't have to rewrite
> in near future.

Why you think it is cleaner?  Copying data around to static
variables isn't cleaner and it's more fragile.

>=20
> Thanks for bringing up ordering issue, we probably have one in this ser=
ies.
>=20
> But beside possible issue here, even with v3 variant we would still hav=
e
> issues if objects are created before machine and accelerator instances =
are
> created.
> More correct way could be to register compat properties right away at
> select_machine() time, we don't really need an instance for that, just =
access
> to machine_class and do the same for 'accel' option. (that's probably d=
oable
> within this series) + some time later (on top of this series) a check t=
hat
> no TYPE_COMPAT_PROPS were created at the moment compat properties are r=
egistered
> so we would notice when we write something wrong.

What problem you are trying to solve with this extra complexity,
exactly?

>=20
> If it's too much of refactoring (series is already big as it is), I wou=
ld
> compromise on qdev_get_machine() and adding TODO comments (or a series =
on top)
> to make it correct and "race-resistant".

It's not clear to me what the TODO comment would say.  What's the
issue you're trying to solve?


>=20
> Marc are you sure it actually will work as expected with Object derived=
 types?
>    register_global_properties()
> is being called after
>    qemu_opts_foreach(... user_creatable_add_opts_foreach, object_create=
_initial ...)
> so there is no compat properties registered when objects are created.
> =20
> > >  =20
> > > > =20
> > > > >
> > > > >      qdev_prop_set_globals(DEVICE(obj));
> > > > >  } =20
> > > > [...]
> > > >
> > > > --
> > > > Eduardo =20
> >=20
>=20

--=20
Eduardo

