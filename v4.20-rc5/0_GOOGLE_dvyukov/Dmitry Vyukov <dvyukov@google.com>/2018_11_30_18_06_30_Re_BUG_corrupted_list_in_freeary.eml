Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:21:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 562F9580224;
	Fri, 30 Nov 2018 10:06:58 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 10:06:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AEerkEBwKrkfYaTPXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8eKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/1jcKPAZtMaXXROUdpNVyJPBYO8?=
 =?us-ascii?q?apEAD+sHPe1Fq4XwqF8DoR64CAKxBu3g1yVIi2f00q000+ovHwLI0hE+Ed0Sq3?=
 =?us-ascii?q?TUtNf4ObwOUeyp1qTE0SnPY+9U1Dr79YPGcgohofaJXb9of8TRzEgvFx/fjlSQ?=
 =?us-ascii?q?tIfqMDOU1vkOs2ic8eprSOWihHM5qwBxvzivxcAsipfSi4IazVDE8ip5wIIrKt?=
 =?us-ascii?q?GiVEF7ZtukHYJWuiqHOYV2RcYiTHtpuCY80rAJopm7fC8WyJQjxh7fbeaLfJSP?=
 =?us-ascii?q?4hLmTOqRLjZ4hG5leLKinBm+61Svyur5VsWsyllKtjJFksLUtnAKyxzf8NSISv?=
 =?us-ascii?q?x4/kqnxD2B1BjT5/laLUwokafXMYMtz7AumpYJrEjOHTP6lF/3gaKUbkko5PSk?=
 =?us-ascii?q?5uD9brjlppKQLZJ4hwD/P6g0h8CyBeQ1Pw4TVGaB4+u8zqfs/UjhTbVKkPI2lq?=
 =?us-ascii?q?7ZvYjEJcQUuKG5GRVZ0oU95BalCTepztAYkWMALFJfdxKLl4npO1fQL/DkFfqz?=
 =?us-ascii?q?nUignTNxy/zbMLDtHI/BImXAnbv9Z7pw6kxRxBI2zd9F5pJUDr8BIOj0Wk/0rN?=
 =?us-ascii?q?HYCh45Mwqpw+foEdl91Z0RWXiJAqCHNKPeqFiI5+wpI+aSfo8Yoyj9K/c76P70?=
 =?us-ascii?q?l3M5mkESfbOv3ZQJbHC0BPNmI1+WYXb0mNcODX8KvhYiTOztkFCCVT9TZ3WsUK?=
 =?us-ascii?q?4m6TA7FZmrDYPCRoCrnbyA0z23HpxQZmBaFF+MFW3keJmDW/cJcCiSONNukiQY?=
 =?us-ascii?q?Vbi9TI8szRGuuxX7y7p7NOXU/TcUtZL+1Ndv4e3Tmgo/9Th1D8SbzmGMQHt4nm?=
 =?us-ascii?q?IORz8qwq9/pVZxxUuE0ah9m/ZYD8Bc5+tVUgcmMp7R1+56C9fsVQ7bfdeJT1Cm?=
 =?us-ascii?q?QtOhATwqStIxwtkOY1tyGtm4jxDD2TaqDKERl7CRGJM09afc1WDrJ8lh03bGyL?=
 =?us-ascii?q?Uhj14+T8RVLm2mhql/9wvJC47TiUqZlb2ndaAd3C7L6WeCwnCCvEBeUA5sT6rF?=
 =?us-ascii?q?WWoTaVfRrdT8/knCVaOhCaw7Mgtdzs6PMqhKZcfvjVlcQPfjOc7RY2S+m2qrAR?=
 =?us-ascii?q?aIx7WMbJflemkH3SXdDlQEnB4X/XqcKQc+ASKhqXrEDDNyDVLvf1/s8e5mpXym?=
 =?us-ascii?q?VEA00R+FY1dh17Wv/B4VnuKTS/UU0rIAuychrjF0EU2539LXDdqAugVgcL9dYd?=
 =?us-ascii?q?M7/FdIy2bZuxZhMZynKqBonkQefBhvv0PyyxV3DZ1NntUwo3M00gV+M6KY30lH?=
 =?us-ascii?q?dzODw5/wPKbaKm3z/BCpdq7X1UvS0NeQ+qcT9vs4r0/vsx2uFkon639nycVa02?=
 =?us-ascii?q?OA5pXWCwofSY7xUkcy9xh9u7HaYik865nI1XF2Nqm0qDvC29MvBOsq0Ruge9Zf?=
 =?us-ascii?q?MKWZFA79CcEaBs6uKPA0lFitdB4LIOdS9KssNcO8a/SGwLKrPPpnnD++l2tH5J?=
 =?us-ascii?q?5y002S+Ct8UOLHxIsFzOyC0QuBVDf8i0mhv9vzmYBFYzESA2W+xTLlBI5Xeq19?=
 =?us-ascii?q?Y4ILBX2yLM2ww9V0n4TtVGJA9F6/G1MG39ekeBqPb1DnwQJcz0UWoXy9liu+wD?=
 =?us-ascii?q?x5iDUprquZ3CzTzOXubhsHOmhXRGZ8iVfgO5S7j9cfXEKwdQgmiAOl5Vrmx6hc?=
 =?us-ascii?q?vKl/NWjTTltScCjsMm5iVbG8trycbM5V6ZMkqDlYX/64YV+HVLH9uRwa0yX4Em?=
 =?us-ascii?q?taxTA7cSyqu5rjkxx7jmKdMGh8rH7Ddc5swhff4cTWReRN0ToeWCl4lT7XC0C8?=
 =?us-ascii?q?Ptmo59mVl43PsvujV2KnTZBTdSjrzYWdtCq0/2FqABu/n+ytld3jCwQ1zSj719?=
 =?us-ascii?q?xyXyXSsBn8epXr17i9Me9/fElnHkX868l5GoF5iIcwn4sf2XsZhpWU+3oIj2Hz?=
 =?us-ascii?q?PM5f2aL/anoNWDEKz8TU4AjjxE1sMHaJy5jlWXWax8trf8O6bX8O2iIh88BKD7?=
 =?us-ascii?q?+Z7bxekityuFa4rwPRYf5mkzcZyPsu7mMagu4TtAosyCWdHq4dHU1CMSPwkBSI?=
 =?us-ascii?q?6si0rL9La2a3bbiwyE1+kMiiDL6YowFQQnb5eoo4Ei924cVyK1bM0Hz16oH5d9?=
 =?us-ascii?q?jcd9MTthuIkxjei+hZMo4+lv0PhSB/I2LyoWUly/InjRxpxZy6uYmHK2Z3866j?=
 =?us-ascii?q?DB9XKCb1Z98N9TH3lqlRgNyW34+0E5VlGzULWoboTP2yHDITs/TnKxiBEDkmpn?=
 =?us-ascii?q?iHHrrfGBeV6F16oHLXD5CrK3aXKWEFzdVlQRmRPk1ejxoSXDUnhZ45DQGqydfl?=
 =?us-ascii?q?cEd44DAR+1H5pgFNyuJuKxnwTGPfqB20ZTczTZiVNABW4R1a50fJLcye6fp+ED?=
 =?us-ascii?q?pC8Z2mqAyNN3aXZwBVDWwSXkyEBlbjPqSh5NXa8uiYAPa+IOXKYbmUteNeUPKI?=
 =?us-ascii?q?z4q10oR65zaMKtmPPn56Av05wEVDWG52G9/DlzUTUSAXlD/Nb82GpBe64CJ3td?=
 =?us-ascii?q?uy8PDqWALp+IuOBKFeMdRp+xCqn6iDM/Scizp+KTZdzpkM32PHyKAD3F4OjCFj?=
 =?us-ascii?q?bzmsEbMdtS7UUaLfgKlXAwQAayN0MstI4Lkx3g1MOc7dl9P02aR0jv8zC1dZS1?=
 =?us-ascii?q?PhntulatANI2G4LFnHHlqENKyaJT3XxMH6eaO8RqNRjOVXtB2wuCyXE0z5PjSE?=
 =?us-ascii?q?mDnmSQqvMfxXjCyAOBxeuYe9cgtiCGT5TdLmbAG7P8FzjTEs3bI0gXbKP3YGMT?=
 =?us-ascii?q?dga0NNsqGQ7SRAj/plBmxO9WBlIveEmiqD6+nYK40bsf9qAiRyiuJb7242y7pT?=
 =?us-ascii?q?7CFYWvN1nDHeocJpo1GjiuOP0CZoUAJSqjZXg4KGpVliOaTc9pVaRXnI5g4C7W?=
 =?us-ascii?q?WOBBQMvNZlDtzvu6ZNytnAjq7zKTFC887K8ssYHcTbNMWHMH85OxrzBDHUFBcF?=
 =?us-ascii?q?TSKsNWzHh01SiveS9niUrpg8spftmZoORaVdVFw6Df4aDkVlHNofIJZ4RD8kkL?=
 =?us-ascii?q?ibjNIW6nq6thXeWMJavpWUHs6VVNDmLjiDgLUMXAMSyK78ZdAWP4v1wUFuQlJ9?=
 =?us-ascii?q?mIPQFVfUWdFDr2tqaQpi82tX930rYmgyx1j0Ij28/XwUC7bgkgAnlwh5f8wi8z?=
 =?us-ascii?q?Dj51pxLV3P8nhj2HItkMno1GjCOAX6K729CMQLUic=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DMAQCHewFch0O0hNFjEwEBCAEBBQEHB?=
 =?us-ascii?q?QGBZYJqgQIng3mUIoINFJhYA08pDQYBg3qDfCI4EgEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JIJjAQIDAQIgBBkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYKCQUDg?=
 =?us-ascii?q?xkBggEFCpsJPIodcHwzgnYBAQWBMAGFdAMFEnmLDxeBQD+BEYMSgx4CAhiES4J?=
 =?us-ascii?q?XiS+Bb4QOkQsJhTSBS4o4GIFbhRAFii+NX4pvMIE8VYEhMxoIGxU7MQaCNYIbD?=
 =?us-ascii?q?BeDSopTPzMBgQQBAY1JAQE?=
X-IPAS-Result: =?us-ascii?q?A0DMAQCHewFch0O0hNFjEwEBCAEBBQEHBQGBZYJqgQIng3m?=
 =?us-ascii?q?UIoINFJhYA08pDQYBg3qDfCI4EgEDAQEBAQEBAgETAQEBCA0JCCkjDII2JIJjA?=
 =?us-ascii?q?QIDAQIgBBkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYKCQUDgxkBggEFCpsJPIo?=
 =?us-ascii?q?dcHwzgnYBAQWBMAGFdAMFEnmLDxeBQD+BEYMSgx4CAhiES4JXiS+Bb4QOkQsJh?=
 =?us-ascii?q?TSBS4o4GIFbhRAFii+NX4pvMIE8VYEhMxoIGxU7MQaCNYIbDBeDSopTPzMBgQQ?=
 =?us-ascii?q?BAY1JAQE?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="140291563"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 10:06:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726792AbeLAFQ6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 00:16:58 -0500
Received: from mail-it1-f195.google.com ([209.85.166.195]:32909 "EHLO
        mail-it1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725754AbeLAFQ5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 00:16:57 -0500
Received: by mail-it1-f195.google.com with SMTP id m8so2555967itk.0
        for <linux-kernel@vger.kernel.org>; Fri, 30 Nov 2018 10:06:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=cTTfnc6ZFkVy3xYW9a8zadLxxBYQrHWlaeJu7Ih89iM=;
        b=ZdOQ/6ClKJJw0qRdkw80GWBDAEgybySCm3HgP25+YaLnUUr2nc9Ufvq7A8LdNsoVnf
         V8Ow6p7uOsI7+ZH/BMFt+41kdeCBkfjANcdO8M9s2xPMWb8eCH7ZXZu4d1SW2qL/soKA
         xTDo6J+xvqpt2lF1FB/1JveL5QoIm6Mf8P6/3rM7uo7RmTobg7x8VlCrnx59lGJz4cT5
         RX+9YDuVvSlD+ZKj/XOGoKlYmEIO2hnC5VAlinT7NTFKIOrqyG2QFGNuIATVZWkMuveq
         ZpSva3EgCcZYLMBeSBZyKt7uTl0wPtFhxbRPTAGa/mNhNYYHCK+Kw+CVkUE7QTMuCyRV
         fGQA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=cTTfnc6ZFkVy3xYW9a8zadLxxBYQrHWlaeJu7Ih89iM=;
        b=CmTPaMPkJqQNMVbdSchld7oE4zBcJl1/bTDedKmIdVWMGwDgR6aNL6Nsr9G3tiJjJ5
         46Fqk+aphD1VW5PXAIwcA9+Rjg8BNQ5Zty4ujC53ps+OGERq8oPqsCgoZl2GjfdHk5LX
         RgWHQ9iPgPMDKfg3h9s1nvYomoG6o5GL5etSot0gKRJvWz+L5gTCW0SjKVivKhaVHeyd
         sY8oEVXDjwcG3xVztnJPzHMXeeJsmaQRouu6RuZdxT4RgYtMuTVlHzoFB9x4P7DI0FZp
         p5kRxend4azlxLxzT1W+wzL+maZiYyvXgeiAurdA5qr6ZPAMa4ASTI8X4GHnQTRmxGbA
         5/oA==
X-Gm-Message-State: AA+aEWZr7Nzir4/R3fEYiCTWJehs2RXa+Fy1Lagi5mYONfTcg3PiHCWH
        7/Uhy8xWTsYzzVd6Tu+xPhFFyKnXs4xCHsIWP/rr1A==
X-Google-Smtp-Source: AFSGD/WypECx4RAdC6BVOnHhQ3C/kEKBxJ89NTBzKp4OGDZS1zhshGMLgGPX8nnaFWij6NWQTRk+iFbGC0xvOSzORmg=
X-Received: by 2002:a24:f14d:: with SMTP id q13mr5628864iti.166.1543601210702;
 Fri, 30 Nov 2018 10:06:50 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a02:b003:0:0:0:0:0 with HTTP; Fri, 30 Nov 2018 10:06:30
 -0800 (PST)
In-Reply-To: <CACT4Y+ZStCdg6NhyYAtUZS07NWR=oJzdTZxpD+uyr=3SAVSmVw@mail.gmail.com>
References: <0000000000004eade9057ba76eae@google.com> <621f7c52-de52-eb35-bf61-e839adee7ec9@colorfullife.com>
 <CACT4Y+ZStCdg6NhyYAtUZS07NWR=oJzdTZxpD+uyr=3SAVSmVw@mail.gmail.com>
From: Dmitry Vyukov <dvyukov@google.com>
Date: Fri, 30 Nov 2018 18:06:30 +0000
Message-ID: <CACT4Y+ZLAoZCFMYVB+JiAYo1a8o5KwkQXH8QWaUPdLg2c2wzmg@mail.gmail.com>
Subject: Re: BUG: corrupted list in freeary
To: Manfred Spraul <manfred@colorfullife.com>
Cc: syzbot <syzbot+c92d3646e35bc5d1a909@syzkaller.appspotmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Davidlohr Bueso <dave@stgolabs.net>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        LKML <linux-kernel@vger.kernel.org>, linux@dominikbrodowski.net,
        syzkaller-bugs <syzkaller-bugs@googlegroups.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 30, 2018 at 5:58 PM, Dmitry Vyukov <dvyukov@google.com> wrote:
> On Thu, Nov 29, 2018 at 9:13 AM, Manfred Spraul
> <manfred@colorfullife.com> wrote:
>> Hello together,
>>
>> On 11/27/18 4:52 PM, syzbot wrote:
>>
>> Hello,
>>
>> syzbot found the following crash on:
>>
>> HEAD commit:    e195ca6cb6f2 Merge branch 'for-linus' of git://git.kernel...
>> git tree:       upstream
>> console output: https://syzkaller.appspot.com/x/log.txt?x=10d3e6a3400000
>>
>> From the console output:
>>
>> 20:36:14 executing program 4:
>> semget$private(0x12000000, 0x39d0, 0x0)
>>
>>
>> I don't understand the 0x12000000.
>>
>> What does that mean? What is the actual syscall?
>
> Hi Manfred,
>
> The syscall is semget with the first argument 0x12000000.
>
>
>>
>> Is 0x39d0 the number of semaphores in the array, i.e. create ~13.000
>> semaphores?
>
> If the second argument of 0x39d0 relates to creation of 0x39d0
> semaphores, then yes.
>
>
>
>> kernel config:  https://syzkaller.appspot.com/x/.config?x=73e2bc0cb6463446
>> dashboard link: https://syzkaller.appspot.com/bug?extid=c92d3646e35bc5d1a909
>> compiler:       gcc (GCC) 8.0.1 20180413 (experimental)
>>
>> Unfortunately, I don't have any reproducer for this crash yet.
>>
>> IMPORTANT: if you fix the bug, please add the following tag to the commit:
>> Reported-by: syzbot+c92d3646e35bc5d1a909@syzkaller.appspotmail.com
>>
>> input: syz1 as /devices/virtual/input/input670
>> input: syz1 as /devices/virtual/input/input671
>> list_del corruption. prev->next should be ffff8881dae2cdb8, but was
>> 0000000000100000
>> ------------[ cut here ]------------
>> kernel BUG at lib/list_debug.c:53!
>> invalid opcode: 0000 [#1] PREEMPT SMP KASAN
>> CPU: 0 PID: 6194 Comm: syz-executor5 Not tainted 4.20.0-rc3+ #348
>> Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
>> Google 01/01/2011
>> RIP: 0010:__list_del_entry_valid.cold.1+0x48/0x4a lib/list_debug.c:51
>> Code: d0 60 88 e8 b2 31 d2 fd 0f 0b 48 89 de 48 c7 c7 00 d2 60 88 e8 a1 31
>> d2 fd 0f 0b 48 89 de 48 c7 c7 a0 d1 60 88 e8 90 31 d2 fd <0f> 0b 48 89 d9 48
>> c7 c7 60 d2 60 88 e8 7f 31 d2 fd 0f 0b 48 89 f1
>> RSP: 0018:ffff8881848fee80 EFLAGS: 00010286
>> RAX: 0000000000000054 RBX: ffff8881dae2cdb8 RCX: 0000000000000000
>> RDX: 0000000000000000 RSI: ffffffff8165eaf5 RDI: 0000000000000005
>> RBP: ffff8881848fee98 R08: ffff8881848f26c0 R09: 0000000000000006
>> R10: 0000000000000000 R11: ffff8881848f26c0 R12: ffff8881c3173a00
>> R13: ffff8881be118118 R14: ffff8881848ff280 R15: dffffc0000000000
>> FS:  00000000020b2940(0000) GS:ffff8881dae00000(0000) knlGS:0000000000000000
>> CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
>> CR2: 0000000000625208 CR3: 00000001c10d3000 CR4: 00000000001406f0
>> DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
>> DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
>> Call Trace:
>>  __list_del_entry include/linux/list.h:117 [inline]
>>  list_del include/linux/list.h:125 [inline]
>>  unlink_queue ipc/sem.c:786 [inline]
>>
>> Unlink_queue means transfer all waiting threads to the wake-q.
>>
>> There are 2*(1+<semaphores in the array>) linked lists in an array.
>>
>> And this fails, because one linked list contains 0x100000 instead of a real
>> pointer.
>>
>> I could not find any semop() in the log --> all lists must be empty.
>>
>> Actually, the lists were initialized in newary(), and then never touched.
>>
>>  freeary+0xbd1/0x1a40 ipc/sem.c:1160
>>
>> Free a semaphore array
>>
>>  free_ipcs+0x9f/0x1c0 ipc/namespace.c:112
>>  sem_exit_ns+0x20/0x40 ipc/sem.c:237
>>  free_ipc_ns ipc/namespace.c:120 [inline]
>>
>> Free all ipc ids in the name space
>>
>>  put_ipc_ns+0x66/0x180 ipc/namespace.c:152
>>  free_nsproxy+0xcf/0x220 kernel/nsproxy.c:180
>>
>> Free the name space
>>
>>  switch_task_namespaces+0xb3/0xd0 kernel/nsproxy.c:229
>>  exit_task_namespaces+0x17/0x20 kernel/nsproxy.c:234
>>  do_exit+0x1ad1/0x26d0 kernel/exit.c:866
>>  do_group_exit+0x177/0x440 kernel/exit.c:970
>>  get_signal+0x8b0/0x1980 kernel/signal.c:2517
>>  do_signal+0x9c/0x21c0 arch/x86/kernel/signal.c:816
>>  exit_to_usermode_loop+0x2e5/0x380 arch/x86/entry/common.c:162
>>  prepare_exit_to_usermode arch/x86/entry/common.c:197 [inline]
>>  syscall_return_slowpath arch/x86/entry/common.c:268 [inline]
>>  do_syscall_64+0x6be/0x820 arch/x86/entry/common.c:293
>>  entry_SYSCALL_64_after_hwframe+0x49/0xbe
>> RIP: 0033:0x410fa0
>>
>> This is time code 604.599748 in the console output:
>>
>> [  604.599748] RIP: 0033:0x410fa0
>>
>>
>> Questions:
>>
>> 1) What is this?
>>
>> [  600.924691]  entry_SYSCALL_64_after_hwframe+0x49/0xbe^M
>> [  600.929872] RIP: 0033:0x7f3e597d0120^M
>> [  600.933576] Code: Bad RIP value.^M
>> [  600.936920] RSP: 002b:00007ffc2d83e008 EFLAGS: 00000246 ORIG_RAX:
>> 0000000000000002^M
>> [  600.944608] RAX: ffffffffffffffda RBX: 000055ca2995b436 RCX:
>> 00007f3e597d0120^M
>> [  600.951856] RDX: 00007ffc2d83e244 RSI: 0000000000080000 RDI:
>> 00007ffc2d83e220^M
>> [  600.959107] RBP: 000055ca2995b1e0 R08: 0000000000000000 R09:
>> 000055ca2995b099^M
>> [  600.966355] R10: 0000000000000000 R11: 0000000000000246 R12:
>> 0000000000000001^M
>> [  600.973628] R13: 000055ca2995b090 R14: 000055ca2995b190 R15:
>> 00007ffc2d83e220^M
>>
>> Isn't this a kernel stack overrun?
>>
>> RSP: 0x..83e008. Assuming 8 kB kernel stack, and 8 kB alignment, we have
>> used up everything.
>
> I don't exact answer, that's just the kernel output that we captured
> from console.
>
> FWIW with KASAN stacks are 16K:
> https://elixir.bootlin.com/linux/latest/source/arch/x86/include/asm/page_64_types.h#L10
>
>
> But it looks like the OOM may have been caused by a page fault, so the
> IP/SP are legitimately in user-space, e.g. in the same log:
>
> [  443.339635]  __do_page_fault+0x5e8/0xe60
> [  443.343683]  ? trace_hardirqs_off+0xb8/0x310
> [  443.348079]  do_page_fault+0xf2/0x7e0
> [  443.351867]  ? vmalloc_sync_all+0x30/0x30
> [  443.356002]  ? error_entry+0x70/0xd0
> [  443.359702]  ? trace_hardirqs_off_caller+0xbb/0x310
> [  443.364702]  ? trace_hardirqs_on_caller+0xc0/0x310
> [  443.369620]  ? syscall_return_slowpath+0x5e0/0x5e0
> [  443.374537]  ? trace_hardirqs_off_thunk+0x1a/0x1c
> [  443.379390]  ? trace_hardirqs_on_caller+0x310/0x310
> [  443.384397]  ? __bpf_trace_preemptirq_template+0x30/0x30
> [  443.389837]  ? __sanitizer_cov_trace_const_cmp4+0x16/0x20
> [  443.395366]  ? prepare_exit_to_usermode+0x291/0x3b0
> [  443.400374]  ? page_fault+0x8/0x30
> [  443.403901]  ? trace_hardirqs_off_thunk+0x1a/0x1c
> [  443.408729]  ? page_fault+0x8/0x30
> [  443.412255]  page_fault+0x1e/0x30
> [  443.415693] RIP: 0033:0x43d8e8
> [  443.418884] Code: Bad RIP value.
> [  443.422229] RSP: 002b:000000c43a053490 EFLAGS: 00010206
>
>
>
>
>> - How/where are namespaces used by the bot?
>>
>> I.e. what triggered the namespace exit?
>
> It creates whole set of namespaces per test process:
> https://github.com/google/syzkaller/blob/master/executor/common_linux.h#L1523
>
> but then each test can also execute unshare as well.
>
> Namespace exits usually happen when process terminates.
> In the reported stack it seems to be the case:
>
>  exit_task_namespaces+0x17/0x20 kernel/nsproxy.c:234
>  do_exit+0x1ad1/0x26d0 kernel/exit.c:866
>  do_group_exit+0x177/0x440 kernel/exit.c:970
>  get_signal+0x8b0/0x1980 kernel/signal.c:2517
>  do_signal+0x9c/0x21c0 arch/x86/kernel/signal.c:816
>  exit_to_usermode_loop+0x2e5/0x380 arch/x86/entry/common.c:162
>
>
>> - There are ~370 calls to semget(), most with large (>10.000) semaphores in
>> the arrays.
>>
>> Starting from [442.544635], the OOM killer starts to kill processes.
>>
>> Is this as intended?
>
> Well, generally everything except for kernel crashes is expected.
>
> We actually sandbox it with memcg quite aggressively:
> https://github.com/google/syzkaller/blob/master/executor/common_linux.h#L2159
> But it seems to manage to either break the limits, or cause some
> massive memory leaks. The nature of that is yet unknown.
>
>
>> - Which stress tests are enabled? By chance, I found:
>>
>> [  433.304586] FAULT_INJECTION: forcing a failure.^M
>> [  433.304586] name fail_page_alloc, interval 1, probability 0, space 0,
>> times 0^M
>> [  433.316471] CPU: 1 PID: 19653 Comm: syz-executor4 Not tainted 4.20.0-rc3+
>> #348^M
>> [  433.323841] Hardware name: Google Google Compute Engine/Google Compute
>> Engine, BIOS Google 01/01/2011^M
>>
>> I need some more background, then I can review the code.
>
> What exactly do you mean by "Which stress tests"?
> Fault injection is enabled. Also random workload from userspace.
>
>
>> Right now, I would put it into my "unknown syzcaller finding" folder.


Since it happened only once, it can well be a previous silent memory
corruption. But we also seen hundreds of subtle data races that ever
fired few times or just once, but turned out to be very real bugs.
Hard to say.
