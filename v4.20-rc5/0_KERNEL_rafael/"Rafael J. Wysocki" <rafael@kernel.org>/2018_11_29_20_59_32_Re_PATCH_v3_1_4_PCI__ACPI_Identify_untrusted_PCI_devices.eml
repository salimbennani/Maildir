Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:50:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 63445580460;
	Thu, 29 Nov 2018 12:59:49 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 12:59:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJ7iKKhU/lpJL9d7lbPZPUs/MLPzV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGFuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUSohulHQmhBvjiyiNUinLswaE2z/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOascTe661qfIwi/dYPNSxDzz7JLEeQ0hrvCMRrJwdtbeyUouFw/Lk16d?=
 =?us-ascii?q?rpblMCmb1usXrWeb6/FtVeGxhG49rQF+vDyvyt0rionTiYIY01bJ/jh3zoYyIN?=
 =?us-ascii?q?23Uk97Ydi8HZtVtiGVK5F2QsQ5Q2FvtiY61qcKtoK8fCgPzpks2h3Ra+SffoSW?=
 =?us-ascii?q?/h7uUPydLSp2iX57Yr6zmhW//VS6xuD9VMS4yEhGojZBn9XWtX0A1wbf5taaRv?=
 =?us-ascii?q?dh5Eus2DaC2gbO4e9eO080j7DUK5s5z74wiJUTtUPDEzfomEX5kqCWbF8o+uu2?=
 =?us-ascii?q?5OT9ZLXpuJucO5VzigHkPaQigs2/AeImPQgSR2WX5/iw2bn58UHkTrhGkOc6nr?=
 =?us-ascii?q?TavZzGP8gWp6y0DxdQ0ok56ha/Czmm0M4fnXkCNF9FfBOHj470O1DBOfz4Dumw?=
 =?us-ascii?q?g06qkDh1w/DKJ7rhA5vLLnfdirfsZqh960FCxwop19xf5IxbCqsHIP3tXk/9rt?=
 =?us-ascii?q?vYDgU2MwCs2eboFM191p8CWWKIGqKZNKLSsVyW6e41LOiMeZQYuDL8K/gj+v7v?=
 =?us-ascii?q?gmU1mV4bfam1w5QXbGq0EehhI0WceXDsmMsOEX8WvgoiS+znkF2CXiRSZ3auRa?=
 =?us-ascii?q?084Ss3CIK7DYjZQICtj6eM3CO6Hp1Qe2BHBUqAEXbud4WYRfgMbDieLdNmkjwB?=
 =?us-ascii?q?TbKhUZMu1QmytA/mzLpqNujU+ioGup7519h14OvTlRc19TFvC8Sd0meNT3x7n2?=
 =?us-ascii?q?8SRj822rx/rlJ5yluZzad4hPlYH8RJ5/xVSgc6KYLcz+tiBt/oQQLBftCJSFW8?=
 =?us-ascii?q?TtW8Gz4xTMk8w9sPY0Z7BtWjgQrP3yusA78JibOLAIY4/b7b33j0P8x90WrJ1L?=
 =?us-ascii?q?E9j1k6RctCLW6mibR59wTJA47Jkl+Wl6CldakH2C7N9WGDzXeBvU1CUQ5wV7nF?=
 =?us-ascii?q?Um4bZkfMsdv54UbCRae0Cbs7KgtB1dKCKqxSZ9L0l1pGWunsNM7eY22rnWewHg?=
 =?us-ascii?q?iHxrWLYIrueGUd2SHdBVMAkwAS+3aGKAc/Cj2go2LYEDxhC1bvb1nw/ul5rXOx?=
 =?us-ascii?q?VlU0wB2Sb019y7q1/QYYiuGGRPMNwL0IoichpC9yHFamwd3WDcGNpw5gfKVafN?=
 =?us-ascii?q?M8701L1WPftwxhIJOgK7puiUIZcwRyp0nuzQl4Cp1ckcg2q3Mn1BZyKaOd0FNG?=
 =?us-ascii?q?azOY3ZDxNqfLKmXo+xCvcarW2lDY0NaZ4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547Mz3JsNbe7szDc1NMpHucq0QugcMpF?=
 =?us-ascii?q?P6OCFw/yFNMaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF3pYYw/2CwgSLTTb9jFe7vcDxloBJfjUSHmu5ySj5C49dfKxy?=
 =?us-ascii?q?fYAXCWiwJ8273Mlxh5noW3RA7l6sG0sG2NO1eRqVd1H9xwxQ2lgNrny9hCS4yC?=
 =?us-ascii?q?Z4kzc3oaqF3SzC2vjtewADOmFWWmZil1DsIY6vgtAeXUioaRUplRS/6Ub7wahb?=
 =?us-ascii?q?uLpwL23JTUhUeCj2KnloUrGsubqaf85P9JQovD1XUeS9e1ybSqTxowAH0yPlBG?=
 =?us-ascii?q?ZewDE7dze3upT2hRB6iWSdLGpto3rdY81/2RDf5NnET/5LwjUGXDV4iSXQBlWk?=
 =?us-ascii?q?Pdmm58+Ul5TAsuC5TW6hTYdccSrozYOBsiu0+2tqDAa7n/CynN3nDAc73TX619?=
 =?us-ascii?q?lsSSXHshL8bpP32KS9NOJtZlNoC0Pk68pmBoF+lZM9hZEK1ngdnJmV/3sHkWHo?=
 =?us-ascii?q?PNVf2KL+amcNRDERz97U5gjlxFNsLnaTy43lUXWdx9NrZ8OmbWMOxiI988dKBb?=
 =?us-ascii?q?+X7LNenCt5uFq4rR/Lbvh7kTcQ0v8u6H8cg+EUtwsh1CSdArYOHUZGOSzgjQiH?=
 =?us-ascii?q?79e7rK9PfmagbaCw1FZindCmFLyCpwBcWHXjdZs4Ey5/8N5/ME7S333p8Y7rZs?=
 =?us-ascii?q?PQbd0Iux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyXpZ8MU/zHhl6dfkdyQ34CyBZVhATQLUYDsTfKpFjISqPvmOxyPED06tn?=
 =?us-ascii?q?eUB77fERWD50dhqnLFC4qrOG2PJHkF0dViQwGQK1dFjwATWDU6g4Q1FgS3xMH6?=
 =?us-ascii?q?dEd55zYR5kP3qxdWy+JoMQX/XXnbpAuydjg0T52fJgJM7g5e/0fVLdCe7uVrEi?=
 =?us-ascii?q?Fa5JKhqRKCKneBawRUF20JWVGEB1P+Prmo/9bA6POVBu6/L/vIfLWPpvZSV/aO?=
 =?us-ascii?q?xZKzzIRm+yyAOdmIPnlnF/c7wFZMXWhlG8TFnDUCUywWlyXQb86CuRez4Ct3ot?=
 =?us-ascii?q?qk8PTsXgLv6pCCC79TMdVp5hC3jr2PN++WhCZlNzlY0okAymPPyLgaxFQSkT1h?=
 =?us-ascii?q?dyGxEbQcsi7AVKLQlbFWDx4YaCNzNdFE76Em3glKNs7UlMn11qNjjvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHkD5IzSM?=
 =?us-ascii?q?jCPpWA6vMO1WiCGbPQdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA3BB7ntgLeWehymV9fXXKpYIvvttGSl0k+Na4HIny7pa?=
 =?us-ascii?q?9i1ERfp1mDfMod5quV2pju6Pyj9/WhpUtjlLnJ6LvVllOajB9phPQ3DE/BcM7W?=
 =?us-ascii?q?WWExsLpttlBcfpu6Bf0dXPkKPzKDFf89Pb58ccBs7UKN6ZP3olKxbmBDnUDA5W?=
 =?us-ascii?q?BQKsYETehEUVr/yJ6nCPpJUgpdC4nZsNQ/lEWUcpG+kQB15qNNgDJopnGDIijb?=
 =?us-ascii?q?OfysUP4CztggPWQZAQhJnJX/+WSdepYAmIlr5PZBpCiefiJIoaO4nT2EF4bFR+?=
 =?us-ascii?q?2oPQFByDDph2viR9Y1ps8w12+39kQzh2ghq9Zw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAACWUgBch0O0hNFbCh4BBgcGgVEJC?=
 =?us-ascii?q?wGCaYECJ4N5lCGBawUdFJcwgXMsDwQBhECDNCI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiQBgmIBAgMBAiAEUgYJAQEKCw0CAiYCAgMfEgEFARwGEwUDgxkBg?=
 =?us-ascii?q?gEFCp4bPIsNfDOEQQMPLoUpBRJ5iEOCSBEGgX+BEYMSgx4EgRkbBAtIgliCVwK?=
 =?us-ascii?q?JByCBcoQNkH0HAgKGfIMthwcYkRyNWIpnMIElgg19CDsxBoI1gicXg0qKVD4zA?=
 =?us-ascii?q?YEEAQGKcgINFweCIAEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAACWUgBch0O0hNFbCh4BBgcGgVEJCwGCaYECJ4N5lCG?=
 =?us-ascii?q?BawUdFJcwgXMsDwQBhECDNCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBg?=
 =?us-ascii?q?mIBAgMBAiAEUgYJAQEKCw0CAiYCAgMfEgEFARwGEwUDgxkBggEFCp4bPIsNfDO?=
 =?us-ascii?q?EQQMPLoUpBRJ5iEOCSBEGgX+BEYMSgx4EgRkbBAtIgliCVwKJByCBcoQNkH0HA?=
 =?us-ascii?q?gKGfIMthwcYkRyNWIpnMIElgg19CDsxBoI1gicXg0qKVD4zAYEEAQGKcgINFwe?=
 =?us-ascii?q?CIAEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="140164640"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 12:59:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726931AbeK3IG1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 03:06:27 -0500
Received: from mail-ot1-f65.google.com ([209.85.210.65]:33106 "EHLO
        mail-ot1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726152AbeK3IG1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 03:06:27 -0500
Received: by mail-ot1-f65.google.com with SMTP id i20so3151271otl.0;
        Thu, 29 Nov 2018 12:59:43 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=ecNpW9FlIciGr0ZOsxh0ds2o4ow6kp3tMqjNmA73Tx8=;
        b=QG4gbN+xssrADVG+EmJcsYr6J2CES3Z5+lPJzLjdctj/BuHe6cxCljyfDOW6MuIJ/o
         Sf1TZwRFREK5F0ztq3yJDChuqorWggRl/jdJIa7RizbYth0GloZx3MvX2LK+Gaisli61
         ytTlnIA8Dj/lvvkjgjyhRRKfFb0aMG0nzdtYnT2LWsRdW0Q4JooO8NvTCD/tSzM69Gri
         L31BgvgAOmfoEyQzVslkQQmZep35/oNd1DHuP70PAjWE5H56KBtkFis5diCCLtAfM2Oc
         gjv2gLUCEYsoZ5iK8ILZ6P/AzkW8h7cFbFsUuDptkd+moDVmkpg8BodUGwamfa0bwIBl
         FM8g==
X-Gm-Message-State: AA+aEWYDFQuuJPQ8HY/hSqZzbY39f0WqeJJguTYhUMVB15V49G/wPEyC
        gUUYuJAd5S6YLw3mGZWKhrkTPFRPAt0u6YfDzuw=
X-Google-Smtp-Source: AFSGD/Vh4qwiAgQildcI7YIxZTJ6pIOCzXVz/p2mafnviiaX0K6dbaLL++RxEvI0SqP7zw3tCFTfuVGcUlgZbXZAiCg=
X-Received: by 2002:a9d:7f0d:: with SMTP id j13mr1776334otq.119.1543525183187;
 Thu, 29 Nov 2018 12:59:43 -0800 (PST)
MIME-Version: 1.0
References: <20181129155153.35840-1-mika.westerberg@linux.intel.com> <20181129155153.35840-2-mika.westerberg@linux.intel.com>
In-Reply-To: <20181129155153.35840-2-mika.westerberg@linux.intel.com>
From: "Rafael J. Wysocki" <rafael@kernel.org>
Date: Thu, 29 Nov 2018 21:59:32 +0100
Message-ID: <CAJZ5v0iCDWWSycJgs7srsYEputDxpoGQzf5ZO46BkWPNyHHghg@mail.gmail.com>
Subject: Re: [PATCH v3 1/4] PCI / ACPI: Identify untrusted PCI devices
To: Mika Westerberg <mika.westerberg@linux.intel.com>
Cc: "open list:AMD IOMMU (AMD-VI)" <iommu@lists.linux-foundation.org>,
        Joerg Roedel <joro@8bytes.org>,
        David Woodhouse <dwmw2@infradead.org>,
        Lu Baolu <baolu.lu@linux.intel.com>,
        "Raj, Ashok" <ashok.raj@intel.com>,
        Bjorn Helgaas <bhelgaas@google.com>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        "Pan, Jacob jun" <jacob.jun.pan@intel.com>,
        Andreas Noever <andreas.noever@gmail.com>,
        Michael Jamet <michael.jamet@intel.com>,
        Yehezkel Bernat <YehezkelShB@gmail.com>,
        Lukas Wunner <lukas@wunner.de>, ckellner@redhat.com,
        Mario Limonciello <Mario.Limonciello@dell.com>,
        Anthony Wong <anthony.wong@canonical.com>,
        Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        Christoph Hellwig <hch@infradead.org>,
        Alex Williamson <alex.williamson@redhat.com>,
        ACPI Devel Maling List <linux-acpi@vger.kernel.org>,
        Linux PCI <linux-pci@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 4:52 PM Mika Westerberg
<mika.westerberg@linux.intel.com> wrote:
>
> A malicious PCI device may use DMA to attack the system. An external
> Thunderbolt port is a convenient point to attach such a device. The OS
> may use IOMMU to defend against DMA attacks.
>
> Recent BIOSes with Thunderbolt ports mark these externally facing root
> ports with this ACPI _DSD [1]:
>
>   Name (_DSD, Package () {
>       ToUUID ("efcc06cc-73ac-4bc3-bff0-76143807c389"),
>       Package () {
>           Package () {"ExternalFacingPort", 1},
>           Package () {"UID", 0 }
>       }
>   })
>
> If we find such a root port, mark it and all its children as untrusted.
> The rest of the OS may use this information to enable DMA protection
> against malicious devices. For instance the device may be put behind an
> IOMMU to keep it from accessing memory outside of what the driver has
> allocated for it.
>
> While at it, add a comment on top of prp_guids array explaining the
> possible caveat resulting when these GUIDs are treated equivalent.
>
> [1] https://docs.microsoft.com/en-us/windows-hardware/drivers/pci/dsd-for-pcie-root-ports#identifying-externally-exposed-pcie-root-ports
>
> Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>

Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

> ---
>  drivers/acpi/property.c | 11 +++++++++++
>  drivers/pci/pci-acpi.c  | 19 +++++++++++++++++++
>  drivers/pci/probe.c     | 15 +++++++++++++++
>  include/linux/pci.h     |  8 ++++++++
>  4 files changed, 53 insertions(+)
>
> diff --git a/drivers/acpi/property.c b/drivers/acpi/property.c
> index 8c7c4583b52d..77abe0ec4043 100644
> --- a/drivers/acpi/property.c
> +++ b/drivers/acpi/property.c
> @@ -24,6 +24,14 @@ static int acpi_data_get_property_array(const struct acpi_device_data *data,
>                                         acpi_object_type type,
>                                         const union acpi_object **obj);
>
> +/*
> + * The GUIDs here are made equivalent to each other in order to avoid extra
> + * complexity in the properties handling code, with the caveat that the
> + * kernel will accept certain combinations of GUID and properties that are
> + * not defined without a warning. For instance if any of the properties
> + * from different GUID appear in a property list of another, it will be
> + * accepted by the kernel. Firmware validation tools should catch these.
> + */
>  static const guid_t prp_guids[] = {
>         /* ACPI _DSD device properties GUID: daffd814-6eba-4d8c-8a91-bc9bbf4aa301 */
>         GUID_INIT(0xdaffd814, 0x6eba, 0x4d8c,
> @@ -31,6 +39,9 @@ static const guid_t prp_guids[] = {
>         /* Hotplug in D3 GUID: 6211e2c0-58a3-4af3-90e1-927a4e0c55a4 */
>         GUID_INIT(0x6211e2c0, 0x58a3, 0x4af3,
>                   0x90, 0xe1, 0x92, 0x7a, 0x4e, 0x0c, 0x55, 0xa4),
> +       /* External facing port GUID: efcc06cc-73ac-4bc3-bff0-76143807c389 */
> +       GUID_INIT(0xefcc06cc, 0x73ac, 0x4bc3,
> +                 0xbf, 0xf0, 0x76, 0x14, 0x38, 0x07, 0xc3, 0x89),
>  };
>
>  static const guid_t ads_guid =
> diff --git a/drivers/pci/pci-acpi.c b/drivers/pci/pci-acpi.c
> index 921db6f80340..e1949f7efd9c 100644
> --- a/drivers/pci/pci-acpi.c
> +++ b/drivers/pci/pci-acpi.c
> @@ -789,6 +789,24 @@ static void pci_acpi_optimize_delay(struct pci_dev *pdev,
>         ACPI_FREE(obj);
>  }
>
> +static void pci_acpi_set_untrusted(struct pci_dev *dev)
> +{
> +       u8 val;
> +
> +       if (pci_pcie_type(dev) != PCI_EXP_TYPE_ROOT_PORT)
> +               return;
> +       if (device_property_read_u8(&dev->dev, "ExternalFacingPort", &val))
> +               return;
> +
> +       /*
> +        * These root ports expose PCIe (including DMA) outside of the
> +        * system so make sure we treat them and everything behind as
> +        * untrusted.
> +        */
> +       if (val)
> +               dev->untrusted = 1;
> +}
> +
>  static void pci_acpi_setup(struct device *dev)
>  {
>         struct pci_dev *pci_dev = to_pci_dev(dev);
> @@ -798,6 +816,7 @@ static void pci_acpi_setup(struct device *dev)
>                 return;
>
>         pci_acpi_optimize_delay(pci_dev, adev->handle);
> +       pci_acpi_set_untrusted(pci_dev);
>
>         pci_acpi_add_pm_notifier(adev, pci_dev);
>         if (!adev->wakeup.flags.valid)
> diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
> index b1c05b5054a0..257b9f6f2ebb 100644
> --- a/drivers/pci/probe.c
> +++ b/drivers/pci/probe.c
> @@ -1378,6 +1378,19 @@ static void set_pcie_thunderbolt(struct pci_dev *dev)
>         }
>  }
>
> +static void set_pcie_untrusted(struct pci_dev *dev)
> +{
> +       struct pci_dev *parent;
> +
> +       /*
> +        * If the upstream bridge is untrusted we treat this device
> +        * untrusted as well.
> +        */
> +       parent = pci_upstream_bridge(dev);
> +       if (parent && parent->untrusted)
> +               dev->untrusted = true;
> +}
> +
>  /**
>   * pci_ext_cfg_is_aliased - Is ext config space just an alias of std config?
>   * @dev: PCI device
> @@ -1638,6 +1651,8 @@ int pci_setup_device(struct pci_dev *dev)
>         /* Need to have dev->cfg_size ready */
>         set_pcie_thunderbolt(dev);
>
> +       set_pcie_untrusted(dev);
> +
>         /* "Unknown power state" */
>         dev->current_state = PCI_UNKNOWN;
>
> diff --git a/include/linux/pci.h b/include/linux/pci.h
> index 11c71c4ecf75..c786a2f27bee 100644
> --- a/include/linux/pci.h
> +++ b/include/linux/pci.h
> @@ -396,6 +396,14 @@ struct pci_dev {
>         unsigned int    is_hotplug_bridge:1;
>         unsigned int    shpc_managed:1;         /* SHPC owned by shpchp */
>         unsigned int    is_thunderbolt:1;       /* Thunderbolt controller */
> +       /*
> +        * Devices marked being untrusted are the ones that can potentially
> +        * execute DMA attacks and similar. They are typically connected
> +        * through external ports such as Thunderbolt but not limited to
> +        * that. When an IOMMU is enabled they should be getting full
> +        * mappings to make sure they cannot access arbitrary memory.
> +        */
> +       unsigned int    untrusted:1;
>         unsigned int    __aer_firmware_first_valid:1;
>         unsigned int    __aer_firmware_first:1;
>         unsigned int    broken_intx_masking:1;  /* INTx masking can't be used */
> --
> 2.19.2
>
