Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 22:24:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2751F5803C2;
	Tue, 27 Nov 2018 06:22:02 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 06:22:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AHNMHChxGlSQoqWnXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ekeI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmlT?=
 =?us-ascii?q?kJNzA5/m/UhMJ/gq1UrxC9qBJw2I7UeIOYOeFifq7eZ94WWXZNU8hTWiFHH4iy?=
 =?us-ascii?q?b5EPD+0EPetAqIfyvUcOrRqkCgm3HOzi1z1Inmfs3a0+0uQhFw7G1xEnEtILq3?=
 =?us-ascii?q?vZt9H1NKYdUeC10KnIyyvDb/ZM1Tf874jFaxYsquyPU7Joacfd11UjGgffglmN?=
 =?us-ascii?q?p4HpISmZ2vkOvmSH9eZtVOCih3YjpgxxuDSj28Yhh4jTio8W1FzI7yR0zYczKN?=
 =?us-ascii?q?alUkB0e8SkH4FVtyyCN4t5XMciQ2ZwtSYkxb0Jp4S7cDIJyJs53R7fbeKIc4yS?=
 =?us-ascii?q?7hLkTuaRLi90hHNjeL2hmxa/6VasxvH4W8WuzVpHoDRJnsPRun0OyxDf8MmKR/?=
 =?us-ascii?q?ll8kekwzmP1gTT6u9eIUAzkKrWM5ohwr82lpoOvkXPByz2l1vsjK+QaEok/vGk?=
 =?us-ascii?q?6+PpY7XguJCcLZR5ih/xMqswgMyzG+c4PRYUX2id5+u80Kfv/UrjQLVFlvE2iL?=
 =?us-ascii?q?XWsIjGJcQHoa60GwtV0ocg6xmhFTun38kYkGIDLFJEfhKHkofoN0vPIPD+Efew?=
 =?us-ascii?q?nVCsnC13yPDBO73rGo/NIWTbkLf9YbZ97FZRyAopwtBe+5JbELYBLOjzWk/srt?=
 =?us-ascii?q?PYCBA5Pheww+bmDtV9y4wfVXiOAq+fLKPdr1uI6vgzLOmLYY8foCz9JOQ95/7y?=
 =?us-ascii?q?kX85nkcQfauu3ZQJcny4HfNmI0OfYXrrmdoBFWYKvgwjTO3lklGCUDhTZ2qsUK?=
 =?us-ascii?q?I4/D00FIWmDYLbTIC3nLOBxDu7HoFRZm1eEF+MCnfod4KHW/sWciKdOM1hnycA?=
 =?us-ascii?q?VbigTY8hyB6vuBX7y7phMurb5CkYuYj/29hy4u3ZjQsy+iBsD8SBz2GNSHl5nm?=
 =?us-ascii?q?ASSD8wxqx/pU19xU2F0ah3mPFYEd1T5/VUUgY1L5Lczup6C8zsVQLFZNuGVFGm?=
 =?us-ascii?q?QtC+CzErUt0x28MOY1p6G9i6kx/MxTSqDKEPm7yLHpM09Lnc0Gb3J8p6z3bG16?=
 =?us-ascii?q?whj109T8tLNG2mgLN/9gfJC47IlUWZi7ildaAG0CHR82eDyHKEvFtEXw5oTaXF?=
 =?us-ascii?q?QXcfa1PLotvj+EPNUaWiCbQ9PQtH0s6NNK1KZ8btjVVHQvfjJdvfb3iwm2e2GR?=
 =?us-ascii?q?aH2LeMYJD2dGUa2SXXEFIEnBwL/XaaKQg+AT+so37fDDxrElLvf0Ps8OlkpHOn?=
 =?us-ascii?q?VEM0yBuKb0lg17qz9R4YnvicS/IV3rIZtyYtsTR0HFCh393ID9qMvRZufKJZYd?=
 =?us-ascii?q?kl+ldIyXrZtxBhPpynN61tnFoefBp4vkzw1xR7EJ5PkdU3o3wwygpyKqWY0E1a?=
 =?us-ascii?q?ejOc3JDwPKDXK2bo8BCuba7Wxk/R0NKM9qgT7/Q4rk3pvBu1GUo673Vnz95V3m?=
 =?us-ascii?q?Oc55XXFgYdTYj9U0c39xdgobHabTIw54fV1X1qLKm1vSXO29MvBOs51Bmge81T?=
 =?us-ascii?q?P7+DFA/3C8caHdShKPQ2m1i1aRIJJPpS9K8oMMy8bfuJxamrMPxmnD24l2RH4Z?=
 =?us-ascii?q?lx3V6W+Cp4V+HHwYwFw/ae3gacUzf8jVGhst34mIxeZDESGHa/xjbgBIJLeqJy?=
 =?us-ascii?q?eoMLA3+0I8Kr3tV+m4LtW3lA+V+jBlMKws+odQCJb1zg2w1dzkAXoX2hmSulwD?=
 =?us-ascii?q?14iTAprqyD3CPQx+TubgYIOmlORGN6l1fjPZC0j8wGXEivdwUplgGq5Vz5x6hY?=
 =?us-ascii?q?o6RzNXLTTl1Lfyj1LmFiVLW/tryZbs5L6ZMotzhXUeumbVCbTL79vwUV0yf5E2?=
 =?us-ascii?q?RCwzA7cimguo/lkBxilGKdMHFzoWLZeM5qwhfT/t7cRf9X3jcdQCl4iD/XBkWz?=
 =?us-ascii?q?PtWz/NWUkYvDvf66V267SpJTdizrx5uatCSn/W1qHQG/n/erl93kCwc60DX319?=
 =?us-ascii?q?l3VSrSqhb8bZLm16C7MeJhY0lpC0Xw68t8GoFijIQwgIsc1mQdhpWQ5XAHi3v8?=
 =?us-ascii?q?Mc1H2aLia3oAXTsLw9/W4Af/wkFiIGyGx5nlVnqD2MtufMe1YnkZ2i8m68BKCa?=
 =?us-ascii?q?GU7KFLnCdvo1q4qx7RbuZ5njsH1fQu73saifkTuAUx1iWdHqwSHU5AMCzwkBSI?=
 =?us-ascii?q?6sqyraRNa2apbLiwz1F+ndG6AbGGowFcXmv5e5g4ES9x6MV/LEzD0Hnp5o74f9?=
 =?us-ascii?q?nQaMoZtgeInBfYk+hVNJUxm+IRiiV9PmL9uWAlx/Q/jRxzxpy6uImHK2Nw/KO2?=
 =?us-ascii?q?GBJYNzv1Z98N9THpl6pRgsGW34W3FJV7BjoLRIfoTe6vED8Kt/ToLQOOHyMnqn?=
 =?us-ascii?q?uBBbrTBwyf6Fplr3LSFZCkLWqXKWIdzdVjQhmdOUNejBoVXDU8gp42CASqyNb9?=
 =?us-ascii?q?f0d+4zAb/kT4pQdUyuJ0Kxn/VX/SpQevajcpUZifMQBZ7gdY60fONsye6O1zEj?=
 =?us-ascii?q?pc/p2gqgyNN2Oaax5JDWEPRkyLGVTjMqOy6tnH9uiSHvC+IOfWYbWStexeUO+F?=
 =?us-ascii?q?xZKx3Ytn/DaMNcSPMmNhD/0h3UpDUm52G97EmzUUUCEXkyPNb8iGpBaz4CF3r8?=
 =?us-ascii?q?a/8Oj1VwLr/4eAF7xSMdB38RCsnaiDL/KQhDp+KTtAzJwM2GTHyKIB018SkS1u?=
 =?us-ascii?q?czitHK8EtS7MSqLQh6BWAwQaayN1KMtH8aY80hNRNs7cj9P/zqR4geItC1dZSV?=
 =?us-ascii?q?zhndmkZdALI2G4Ll/IGFyHO6iGJTLVxcH6eqe8SbxWjOVJuBy8ozebE0n/Pjud?=
 =?us-ascii?q?kznlTQygMeZJjCuDJhxRpJm9cgpxCWjkVN/nage0MNlyjT03x707nnLLNW4GPj?=
 =?us-ascii?q?h6fENAtbmQ7SJegvViFG1N9HtlLe+YmymH6+nUMIoZsfxuAnc8q+UP4n0kyrZP?=
 =?us-ascii?q?xCNNWv16ny2Updlr8H+8leza7zN7URNVnRxJFJiPvENtcfHc/LFEWHnE4BQT6C?=
 =?us-ascii?q?ORDEJZ9JNeFtTztvUImZD0n6XpJWIa/g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DcAACwUf1bh0O0hNFbCRwBAQEEAQEHB?=
 =?us-ascii?q?AEBgWWCbX8ng3mWLBSYUANPDwEBGBMBiHkiOBIBAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiKCZQECAwECIAQLAQUIAQE3AQUJAQEKGAICJgICAzEBBQEcEwYCAQEBg?=
 =?us-ascii?q?xyCAgQBmUk8ih1wfDOCdgEBBYJDg14eZwgSeYlmgRwXgUA/gTiCNjWEV4Mugle?=
 =?us-ascii?q?JHwqFeYFFjycJkSoegVmHeRAmhwOYEAIEAgQFAgUPIYE8gXZ5DIMnghsMF4NKi?=
 =?us-ascii?q?lQ/MgGBBAEBjWoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DcAACwUf1bh0O0hNFbCRwBAQEEAQEHBAEBgWWCbX8ng3m?=
 =?us-ascii?q?WLBSYUANPDwEBGBMBiHkiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZQECA?=
 =?us-ascii?q?wECIAQLAQUIAQE3AQUJAQEKGAICJgICAzEBBQEcEwYCAQEBgxyCAgQBmUk8ih1?=
 =?us-ascii?q?wfDOCdgEBBYJDg14eZwgSeYlmgRwXgUA/gTiCNjWEV4MugleJHwqFeYFFjycJk?=
 =?us-ascii?q?SoegVmHeRAmhwOYEAIEAgQFAgUPIYE8gXZ5DIMnghsMF4NKilQ/MgGBBAEBjWo?=
 =?us-ascii?q?BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="42454486"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 06:22:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727956AbeK1BQ6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 20:16:58 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:41124 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726372AbeK1BQ6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 20:16:58 -0500
Received: by mail-lj1-f196.google.com with SMTP id z80-v6so20198707ljb.8
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 06:18:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=lightnvm-io.20150623.gappssmtp.com; s=20150623;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=A0+SxtsjGOH0CdTdvR+beqGNlyImHfEH3beEvc7ef2E=;
        b=wJe6gJKOUSMW2SQgFDsRaMaG/D0Ow0Cumg43s7RAsrTP+awbOrife2FDOpUc1JIxz5
         MdR5sb+71VIiQOFHpW5HFZXKmw2PrlrvRtIRsr+teetNqPjU0yHhZ9IpqGj2LnKzyEtW
         Nj4NK6NhmB6pj/zlanY/nNEkwei0xQ8ExoOZ3e7CJc3GHrT0ytbNibaBocmIYHTMmUEd
         +CIsdQFsD2HmrNRPh0jfXH/dZe2Hdly/85FZ1p+LlI8iiHlaiMrtDoCmw0Nvh1s84ppD
         2PVeIyBm50lKliutdgOvoNWiOjatqipAoRobh4Jr6MBntk58mAJpxJ2aOa5RMdmF5/wg
         lyCQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=A0+SxtsjGOH0CdTdvR+beqGNlyImHfEH3beEvc7ef2E=;
        b=JhUO8EYFBTnCgGSNN4fJutwBFzRs1DtHY4H2Om/lRdrWGaFLxGr/8n6P93cnrDSWey
         T3NyrZ1vOwe6SBviq53elOqCFaPYq8FnXFFRgYAJf3dpHrKgCXALfktLz1Vok5469RpW
         kLxKTIogY98YBgt0BdIbsCjAKtSYomg3WD1U3KhB0VVFstEJu2ZEL5rpY/spPzVju1jb
         NGDJ3H7PWmmUqED0Q3Q/kE8qmlgPynYskIG3OciSZkigSd0plC80Jc62gexFqsG0Za/I
         CGy/umiH7Edt45YHPifKDKWcjoN1p4ImY27nMSHizaSbDHl4TuloEQJsCPBhb21q7Kyz
         akZg==
X-Gm-Message-State: AA+aEWaolhPY0u/X2231txSgOEl4Q5TXPq0JqUSM6s+FU1B+pPLdQQva
        OsNVCwZm5QB5IvKkR7nYK3PPFCsUpog=
X-Google-Smtp-Source: AJdET5f57CHoTzJ6n9kWwuBVVqOsmnZWGfaONV/fZZDC4xQ6D/QqNybXI5JtYgzLRAHHPGdxjPZ9zQ==
X-Received: by 2002:a2e:2416:: with SMTP id k22-v6mr22204257ljk.80.1543328331840;
        Tue, 27 Nov 2018 06:18:51 -0800 (PST)
Received: from [192.168.0.36] (95-166-82-66-cable.dk.customer.tdc.net. [95.166.82.66])
        by smtp.googlemail.com with ESMTPSA id x204sm614553lfa.5.2018.11.27.06.18.50
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 27 Nov 2018 06:18:50 -0800 (PST)
Subject: Re: [PATCH] lightnvm: remove dma alloc/free helpers
To: javier@javigon.com
Cc: igor.j.konopko@intel.com, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org, javier@cnexlabs.com
References: <1543325972-15136-1-git-send-email-javier@cnexlabs.com>
 <1543325972-15136-2-git-send-email-javier@cnexlabs.com>
From: =?UTF-8?Q?Matias_Bj=c3=b8rling?= <mb@lightnvm.io>
Message-ID: <ccb9584d-a262-366b-fe2d-605311c2b593@lightnvm.io>
Date: Tue, 27 Nov 2018 15:18:49 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <1543325972-15136-2-git-send-email-javier@cnexlabs.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-GB
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/27/2018 02:39 PM, Javier González wrote:
> Time has shown that the LightNVM alloc/free dma helpers are merely
> replacements of the native dma_pool operations. Thus, remove them and
> let targets manage the LightNVM dma pool directly.
> 
> Signed-off-by: Javier González <javier@cnexlabs.com>
> ---
>   drivers/lightnvm/core.c          | 25 +++++++------------------
>   drivers/lightnvm/pblk-core.c     | 10 +++++-----
>   drivers/lightnvm/pblk-read.c     |  3 ++-
>   drivers/lightnvm/pblk-recovery.c |  5 +++--
>   drivers/nvme/host/lightnvm.c     | 16 +---------------
>   include/linux/lightnvm.h         |  8 +-------
>   6 files changed, 19 insertions(+), 48 deletions(-)
> 
> diff --git a/drivers/lightnvm/core.c b/drivers/lightnvm/core.c
> index c3650b141a30..8b6ee35e4356 100644
> --- a/drivers/lightnvm/core.c
> +++ b/drivers/lightnvm/core.c
> @@ -641,20 +641,6 @@ void nvm_unregister_tgt_type(struct nvm_tgt_type *tt)
>   }
>   EXPORT_SYMBOL(nvm_unregister_tgt_type);
>   
> -void *nvm_dev_dma_alloc(struct nvm_dev *dev, gfp_t mem_flags,
> -							dma_addr_t *dma_handler)
> -{
> -	return dev->ops->dev_dma_alloc(dev, dev->dma_pool, mem_flags,
> -								dma_handler);
> -}
> -EXPORT_SYMBOL(nvm_dev_dma_alloc);
> -
> -void nvm_dev_dma_free(struct nvm_dev *dev, void *addr, dma_addr_t dma_handler)
> -{
> -	dev->ops->dev_dma_free(dev->dma_pool, addr, dma_handler);
> -}
> -EXPORT_SYMBOL(nvm_dev_dma_free);
> -
>   static struct nvm_dev *nvm_find_nvm_dev(const char *name)
>   {
>   	struct nvm_dev *dev;
> @@ -682,7 +668,8 @@ static int nvm_set_rqd_ppalist(struct nvm_tgt_dev *tgt_dev, struct nvm_rq *rqd,
>   	}
>   
>   	rqd->nr_ppas = nr_ppas;
> -	rqd->ppa_list = nvm_dev_dma_alloc(dev, GFP_KERNEL, &rqd->dma_ppa_list);
> +	rqd->ppa_list = dma_pool_alloc(dev->dma_pool, GFP_KERNEL,
> +							&rqd->dma_ppa_list);
>   	if (!rqd->ppa_list) {
>   		pr_err("nvm: failed to allocate dma memory\n");
>   		return -ENOMEM;
> @@ -705,10 +692,12 @@ static int nvm_set_rqd_ppalist(struct nvm_tgt_dev *tgt_dev, struct nvm_rq *rqd,
>   static void nvm_free_rqd_ppalist(struct nvm_tgt_dev *tgt_dev,
>   			struct nvm_rq *rqd)
>   {
> +	struct nvm_dev *dev = tgt_dev->parent;
> +
>   	if (!rqd->ppa_list)
>   		return;
>   
> -	nvm_dev_dma_free(tgt_dev->parent, rqd->ppa_list, rqd->dma_ppa_list);
> +	dma_pool_free(dev->dma_pool, rqd->ppa_list, rqd->dma_ppa_list);
>   }
>   
>   static int nvm_set_flags(struct nvm_geo *geo, struct nvm_rq *rqd)
> @@ -1178,7 +1167,7 @@ void nvm_unregister(struct nvm_dev *dev)
>   }
>   EXPORT_SYMBOL(nvm_unregister);
>   
> -int nvm_alloc_dma_pool(struct nvm_dev *dev)
> +int nvm_create_dma_pool(struct nvm_dev *dev)
>   {
>   	int exp_pool_size;
>   
> @@ -1195,7 +1184,7 @@ int nvm_alloc_dma_pool(struct nvm_dev *dev)
>   
>   	return 0;
>   }
> -EXPORT_SYMBOL(nvm_alloc_dma_pool);
> +EXPORT_SYMBOL(nvm_create_dma_pool);
>   
>   static int __nvm_configure_create(struct nvm_ioctl_create *create)
>   {
> diff --git a/drivers/lightnvm/pblk-core.c b/drivers/lightnvm/pblk-core.c
> index 615817bf97e3..61a2a5330ecf 100644
> --- a/drivers/lightnvm/pblk-core.c
> +++ b/drivers/lightnvm/pblk-core.c
> @@ -242,7 +242,7 @@ int pblk_alloc_rqd_meta(struct pblk *pblk, struct nvm_rq *rqd)
>   {
>   	struct nvm_tgt_dev *dev = pblk->dev;
>   
> -	rqd->meta_list = nvm_dev_dma_alloc(dev->parent, GFP_KERNEL,
> +	rqd->meta_list = dma_pool_alloc(dev->parent->dma_pool, GFP_KERNEL,
>   							&rqd->dma_meta_list);
>   	if (!rqd->meta_list)
>   		return -ENOMEM;
> @@ -261,8 +261,8 @@ void pblk_free_rqd_meta(struct pblk *pblk, struct nvm_rq *rqd)
>   	struct nvm_tgt_dev *dev = pblk->dev;
>   
>   	if (rqd->meta_list)
> -		nvm_dev_dma_free(dev->parent, rqd->meta_list,
> -				rqd->dma_meta_list);
> +		dma_pool_free(dev->parent->dma_pool, rqd->meta_list,
> +							rqd->dma_meta_list);
>   }
>   
>   /* Caller must guarantee that the request is a valid type */
> @@ -846,7 +846,7 @@ int pblk_line_emeta_read(struct pblk *pblk, struct pblk_line *line,
>   	int i, j;
>   	int ret;
>   
> -	meta_list = nvm_dev_dma_alloc(dev->parent, GFP_KERNEL,
> +	meta_list = dma_pool_alloc(dev->parent->dma_pool, GFP_KERNEL,
>   							&dma_meta_list);
>   	if (!meta_list)
>   		return -ENOMEM;
> @@ -925,7 +925,7 @@ int pblk_line_emeta_read(struct pblk *pblk, struct pblk_line *line,
>   		goto next_rq;
>   
>   free_rqd_dma:
> -	nvm_dev_dma_free(dev->parent, rqd.meta_list, rqd.dma_meta_list);
> +	dma_pool_free(dev->parent->dma_pool, rqd.meta_list, rqd.dma_meta_list);
>   	return ret;
>   }
>   
> diff --git a/drivers/lightnvm/pblk-read.c b/drivers/lightnvm/pblk-read.c
> index 32b285cf5846..1576f357c9af 100644
> --- a/drivers/lightnvm/pblk-read.c
> +++ b/drivers/lightnvm/pblk-read.c
> @@ -507,7 +507,8 @@ int pblk_submit_read(struct pblk *pblk, struct bio *bio)
>   	return NVM_IO_OK;
>   
>   fail_meta_free:
> -	nvm_dev_dma_free(dev->parent, rqd->meta_list, rqd->dma_meta_list);
> +	dma_pool_free(dev->parent->dma_pool, rqd->meta_list,
> +							rqd->dma_meta_list);
>   fail_rqd_free:
>   	pblk_free_rqd(pblk, rqd, PBLK_READ);
>   	return ret;
> diff --git a/drivers/lightnvm/pblk-recovery.c b/drivers/lightnvm/pblk-recovery.c
> index 65abc043e268..80d5b5bd4ab7 100644
> --- a/drivers/lightnvm/pblk-recovery.c
> +++ b/drivers/lightnvm/pblk-recovery.c
> @@ -472,7 +472,8 @@ static int pblk_recov_l2p_from_oob(struct pblk *pblk, struct pblk_line *line)
>   	dma_addr_t dma_ppa_list, dma_meta_list;
>   	int ret = 0;
>   
> -	meta_list = nvm_dev_dma_alloc(dev->parent, GFP_KERNEL, &dma_meta_list);
> +	meta_list = dma_pool_alloc(dev->parent->dma_pool, GFP_KERNEL,
> +								&dma_meta_list);
>   	if (!meta_list)
>   		return -ENOMEM;
>   
> @@ -508,7 +509,7 @@ static int pblk_recov_l2p_from_oob(struct pblk *pblk, struct pblk_line *line)
>   	mempool_free(rqd, &pblk->r_rq_pool);
>   	kfree(data);
>   free_meta_list:
> -	nvm_dev_dma_free(dev->parent, meta_list, dma_meta_list);
> +	dma_pool_free(dev->parent->dma_pool, meta_list, dma_meta_list);
>   
>   	return ret;
>   }
> diff --git a/drivers/nvme/host/lightnvm.c b/drivers/nvme/host/lightnvm.c
> index 049425ad8592..dd300ce9983f 100644
> --- a/drivers/nvme/host/lightnvm.c
> +++ b/drivers/nvme/host/lightnvm.c
> @@ -747,18 +747,6 @@ static void nvme_nvm_destroy_dma_pool(void *pool)
>   	dma_pool_destroy(dma_pool);
>   }
>   
> -static void *nvme_nvm_dev_dma_alloc(struct nvm_dev *dev, void *pool,
> -				    gfp_t mem_flags, dma_addr_t *dma_handler)
> -{
> -	return dma_pool_alloc(pool, mem_flags, dma_handler);
> -}
> -
> -static void nvme_nvm_dev_dma_free(void *pool, void *addr,
> -							dma_addr_t dma_handler)
> -{
> -	dma_pool_free(pool, addr, dma_handler);
> -}
> -
>   static struct nvm_dev_ops nvme_nvm_dev_ops = {
>   	.identity		= nvme_nvm_identity,
>   
> @@ -772,8 +760,6 @@ static struct nvm_dev_ops nvme_nvm_dev_ops = {
>   
>   	.create_dma_pool	= nvme_nvm_create_dma_pool,
>   	.destroy_dma_pool	= nvme_nvm_destroy_dma_pool,
> -	.dev_dma_alloc		= nvme_nvm_dev_dma_alloc,
> -	.dev_dma_free		= nvme_nvm_dev_dma_free,
>   };
>   
>   static int nvme_nvm_submit_user_cmd(struct request_queue *q,
> @@ -985,7 +971,7 @@ void nvme_nvm_update_nvm_info(struct nvme_ns *ns)
>   		geo->ext = ns->ext;
>   	}
>   
> -	if (nvm_alloc_dma_pool(ndev))
> +	if (nvm_create_dma_pool(ndev))
>   		nvm_unregister(ndev);
>   }
>   
> diff --git a/include/linux/lightnvm.h b/include/linux/lightnvm.h
> index fd7b519f3ad2..7ca38b8bf133 100644
> --- a/include/linux/lightnvm.h
> +++ b/include/linux/lightnvm.h
> @@ -94,7 +94,6 @@ typedef void *(nvm_create_dma_pool_fn)(struct nvm_dev *, char *, int);
>   typedef void (nvm_destroy_dma_pool_fn)(void *);
>   typedef void *(nvm_dev_dma_alloc_fn)(struct nvm_dev *, void *, gfp_t,
>   								dma_addr_t *);
> -typedef void (nvm_dev_dma_free_fn)(void *, void*, dma_addr_t);
>   
>   struct nvm_dev_ops {
>   	nvm_id_fn		*identity;
> @@ -108,8 +107,6 @@ struct nvm_dev_ops {
>   
>   	nvm_create_dma_pool_fn	*create_dma_pool;
>   	nvm_destroy_dma_pool_fn	*destroy_dma_pool;
> -	nvm_dev_dma_alloc_fn	*dev_dma_alloc;
> -	nvm_dev_dma_free_fn	*dev_dma_free;
>   };
>   
>   #ifdef CONFIG_NVM
> @@ -669,11 +666,8 @@ struct nvm_tgt_type {
>   extern int nvm_register_tgt_type(struct nvm_tgt_type *);
>   extern void nvm_unregister_tgt_type(struct nvm_tgt_type *);
>   
> -extern void *nvm_dev_dma_alloc(struct nvm_dev *, gfp_t, dma_addr_t *);
> -extern void nvm_dev_dma_free(struct nvm_dev *, void *, dma_addr_t);
> -
>   extern struct nvm_dev *nvm_alloc_dev(int);
> -extern int nvm_alloc_dma_pool(struct nvm_dev *);
> +extern int nvm_create_dma_pool(struct nvm_dev *);
>   extern int nvm_register(struct nvm_dev *);
>   extern void nvm_unregister(struct nvm_dev *);
>   
> 

I kindly would like to reject this patch. One reason is that target's 
should not have direct access to DMA pools and another reason is that 
the code changes when OCSSD is used over Fabrics. The DMA pool is no 
longer available and data has to be allocated differently. This code 
does not belong inside a target.
