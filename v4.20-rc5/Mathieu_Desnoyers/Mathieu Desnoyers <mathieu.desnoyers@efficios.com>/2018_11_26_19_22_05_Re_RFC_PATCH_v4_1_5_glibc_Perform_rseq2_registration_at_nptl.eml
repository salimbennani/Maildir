Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:40:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5C29E580322;
	Mon, 26 Nov 2018 11:22:13 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 11:22:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AxQGlABXCny+VBYaA7Er9qmdVyhTV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGDuqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQCP+lYoZTzqFQSohWxBAmiA//vyiRQhnL0xqA6z+YsHh3a0AE6A94Dsn?=
 =?us-ascii?q?LZp8j1OqcIVuC1ybHFwzLZYPNK2Tf96ZbHcg08qv+CQ71waszRyU4vFgzblFWQ?=
 =?us-ascii?q?spHuMjSQ1usXr2ib7+tgWvyyi2I9tg5+vCOvxsEriojJmI0V0EvE+D5nz4Y7K9?=
 =?us-ascii?q?24SVJ0Yd+jEJtLrS2VK4x2QsY7TmxupS00xLoGuZuhcygLzpQq3wDQa/KJc4iJ?=
 =?us-ascii?q?/h3jVeGRISxiiH15f7K/ghC/+lWjxO3kTsS4zkpGoy5fntXRuH0ByQbf5tWER/?=
 =?us-ascii?q?dh5Eus2DSC2xjO5uxFI004j7fXJ4Muz7Iqi5YevlrPEjXrlEj4j6KbcFgv9PKy?=
 =?us-ascii?q?5OT9eLrmo4eRN49qhQH6NaQjgtK/AesmPQgURWSb+vqz1Kfl/ULnRLVGlPo2kr?=
 =?us-ascii?q?PWsJzCJMQboLC2AxNN34o99xqyCy2q3MkWkHUZNl5JZRGKg5TzN1zPIv30FfK/?=
 =?us-ascii?q?jE6tkDdvyfDGJLrhApDVI3jHkbfhe6t96kFFxAow099f/ZRUBa8FIP7qXU/wut?=
 =?us-ascii?q?rYAQEjMwGv3ebnB8ty1pkEVWKMHKCZKqXSvkGM5u41JOmMfoAVtC7nK/c5//7u?=
 =?us-ascii?q?kWM5mVgFcKmt3JsXa263Eu5pIkWEenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIe+B4fZWo+tmKCB3Du8HpBOZmBJEFGMEWvyeIWDQfsMaD+SLdVnkjwL?=
 =?us-ascii?q?TrWhT44h1ReztA710bZnL+zU+jEGupLnztR6++rTlRQq/zxuE8udy32NT31znm?=
 =?us-ascii?q?4QRT82275wrVZ+yleE16h4hftYGMdX5/NIVAc6KJHdw/Z7C9D0RgLOYNOJREy6?=
 =?us-ascii?q?TdWhBDE7VsgxzMMWY0ZhB9WiiQjO0DCxA78VkLyLB4Y48rjG0HjzPMt9z3fG1K?=
 =?us-ascii?q?88j1gpWMdPNGumhrJh+AjXHYLGj0KZl6Oyf6QGwCHN7HuDzXaJvExAUw5/S6PF?=
 =?us-ascii?q?UWobZkvXt9v54EzCQqSqCbQmNAtB1MGDJrFLat3vkVVJWvPjNM7CbGK2nme6HQ?=
 =?us-ascii?q?yIya+UbIr2Z2Ud2z3QB1UenAAN43mKLwg+CT2no2LFEjNuE1XjY0fv8el7rHO2?=
 =?us-ascii?q?VUs0zwCMb0182Lu54B8VhfqAS/wN2rIIojsuqzJxHFylxdLZF8KApxZ9fKVbed?=
 =?us-ascii?q?4y/U1I1XzHuABnPpyvNaZihkUAfARxpE7u0xR3CoNdkckltn8qzQxyKb6G31NF?=
 =?us-ascii?q?bT+XwZfwOrjPIGno4B+vc7LW2k3Z0NuO5qcP6fE4q1L/vAGpFksu6Wln38NS03?=
 =?us-ascii?q?uG4pXKDQwSUZ3qX0Yz9hh6oazaYyYn64PV031sLbe7sjvY1901A+slzw6qf81D?=
 =?us-ascii?q?P6OcCA/yD8oaCtC0J+wuhVeoYQwLPeBI+KEvIsOpauGJ2KioPOZngjKrlmBH4I?=
 =?us-ascii?q?F70kKR+CtwUO/I35AZw/6G2guLTSvzjFCkssrvg4BLeSkSHnajySjjHINQZrBy?=
 =?us-ascii?q?cZwXBmu0Isy3xs9xh5jiW3ND8F6jBlUG2NKmeBaIblz92xFQ2loToXC9hSS4yD?=
 =?us-ascii?q?l0mSkzrqWDxCzO3/jidB0fN25RRWltkU3jIZKpgNAdRkSoaRYmlAGk5Urj26dU?=
 =?us-ascii?q?vqB/IHTNTkdSeCj2KXpvUq+xtrqEfs5O54kksSRRUOSgf1+aTqTxrAcd0yPmB2?=
 =?us-ascii?q?Fe3iw0dym2upXlmBx3kGKcLHdpoHvZY81w3grf5NrHSP5V3zoGQjR4iDbNCli9?=
 =?us-ascii?q?Odmp4cubl5PZvu+iUGKhU4VZcTP3woOYqCu7+WpqDAW9n/+pgN3nEgs60Sjh29?=
 =?us-ascii?q?lxTyrIrxX8Yojt16ukN+JqZU1oBF7668pnFYByiIowhJcM2XcEgpWZ52YIkWD2?=
 =?us-ascii?q?Md9Dw6LxcGINRSIXw97S+AXk2FdsLnWTy4L7V3WdxNBsZ927YmMQxyI84NpGCK?=
 =?us-ascii?q?aS7LxYgyR1pkC0oh7WYfh4hj0d0+ch6GYGg+EVvwog1iadDaoTHUVCPSzsig6H?=
 =?us-ascii?q?79axrKhMYGavcL6w1FdxnNy7DbGCpB1cV2j9eps4ASBw6cB/OkrW0HLv8oHkZM?=
 =?us-ascii?q?XQbdULux2RkhfAjPJaJIg/l/UUnipnJXzyvWc+xOEllxxu0oq3vIyGK2Vr4aK4?=
 =?us-ascii?q?DQRUNjzzZ8MP5D7tibxSkdqR34CqBp9hACkEXIP0TfK0FzIfrejnNwGLEDEmq3?=
 =?us-ascii?q?aUA7zfHRKE6Ed9rnLCCJSrN3CRJHkEwtRuXhidJEpDgA8KWDU2hII2FgevxMb5?=
 =?us-ascii?q?akd2+igR5kLkqhtL0u9nLAPwUmDbpAe1cDs0TIWfIQFS7gFD4UfVLMOf4vhyHy?=
 =?us-ascii?q?Fe4p2usgiNJnaHaARPCGEDQlaECEz7Prmy+dnA9PCVBuikIPvLf7qOsvZSV+uS?=
 =?us-ascii?q?yZKsz4tm/CuMNsOVMXl5FPA73ktDXXZkG8XWgTkPSioXlz7TYM6fvhuz5ip3rs?=
 =?us-ascii?q?Wn+vTxRA3v/ZePC6dVMdh3+xG2hrqDN/eNhCljLzZUzIgMxXjOyLgQx1MSjyBu?=
 =?us-ascii?q?dz+wEbUPryLNTaTQmrNJAB4fcS98KMxI76ck1AlXJcHbks/11qJ/jvMtC1dKS1?=
 =?us-ascii?q?3hmsKqZcwLOW29N0nHBEGENLuYPz3L3tr3bLi4Sb1RiuVUqhKxtSyaE0/lIjSM?=
 =?us-ascii?q?iT3pWwqzPuFLiSGRJAZet52lchZxFWjjS8rrZQemMNBslz053701imnONW4dKj?=
 =?us-ascii?q?V8d0JNrruN7SJXmPl/GmpB7mZ7IumAgSqW8+7YKpMOu/txHit0j/5a4Gg9y7ZN?=
 =?us-ascii?q?8CFERfl1lDHOodJ0v16mkveAyjx8XRpKqzZLgp+LvEp4NaXY8JlARWjL/BYX4W?=
 =?us-ascii?q?qMDBQKosNvCsfztKBI1tjPiKXzJS9C8t3O+8scAsnUKMSfP3sgMRrmAjjUDAQe?=
 =?us-ascii?q?QD6vNGHfgVFdkf6I+n2UqJg6tobjmJ4URrBHU1w1E6BSNkMwJt0JIN9ZUzcnnK?=
 =?us-ascii?q?TT2MIB4Xu3tzHVRc9R+JfdWaTBL+/oLWO8hKVEZhYViZ/1NoIUJ4DhwAQ2b1Bm?=
 =?us-ascii?q?nIXHBgzcUMtLpTxsdBQcrUtD8XN/SXZ10EXgPFD+qEQPHOK5y0ZlwjB1Zv4goX?=
 =?us-ascii?q?K1uw86?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAB5R/xbh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBMCqBD4ECJwqDb4h3iySBaCUUlyiBcywHDAGIYyI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQETJAEEAQkBAQEBCA4KAgING?=
 =?us-ascii?q?QICA1QCBBMFFIMIAYF5CAEEpT5wgS+CdgEBBYciCIELin6BVz+BRIJfiAKCV4s?=
 =?us-ascii?q?ThEs0j3IHAoIcBI8ngVmFC4okmVYiAoIJTSNQgmwJghI1bQECgkiKcFSBAgMBA?=
 =?us-ascii?q?SETiigBgR4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAAB5R/xbh0O0hNFkHQEBBQEHBQGBUgcBCwGBMCqBD4E?=
 =?us-ascii?q?CJwqDb4h3iySBaCUUlyiBcywHDAGIYyI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmEBAQEBAgEBAiAdAQETJAEEAQkBAQEBCA4KAgINGQICA1QCBBMFFIM?=
 =?us-ascii?q?IAYF5CAEEpT5wgS+CdgEBBYciCIELin6BVz+BRIJfiAKCV4sThEs0j3IHAoIcB?=
 =?us-ascii?q?I8ngVmFC4okmVYiAoIJTSNQgmwJghI1bQECgkiKcFSBAgMBASETiigBgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="52696964"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 11:22:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727043AbeK0GRN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 01:17:13 -0500
Received: from mail.efficios.com ([167.114.142.138]:59364 "EHLO
        mail.efficios.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726140AbeK0GRN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 01:17:13 -0500
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id D62239B68B;
        Mon, 26 Nov 2018 14:22:06 -0500 (EST)
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10032)
        with ESMTP id C3d3P_yqbDVk; Mon, 26 Nov 2018 14:22:06 -0500 (EST)
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id 5AF1F9B685;
        Mon, 26 Nov 2018 14:22:06 -0500 (EST)
DKIM-Filter: OpenDKIM Filter v2.10.3 mail.efficios.com 5AF1F9B685
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=efficios.com;
        s=default; t=1543260126;
        bh=EAKNiDQ4b9FRT1K4EEYqPmwNV+BE2zOPQzPt0RlY4wQ=;
        h=Date:From:To:Message-ID:MIME-Version;
        b=odX9oQm3wL9ls0W/wycJJF4EdnB07TP2dGeVJts+zN/rVMWZrmP7j/xvEBKUL/5C6
         S+h5x4usYT3iQAvjy+bRXsogRvvLYpg740itoTQDe6VSZskqKjox2qtpNq+ee5Z6+z
         3uO+ZDwvygJUq9DsdlqOSJT0OT0g4P43KrtShnR8pUIAR87WmLvQOZeOti2CAyb6UJ
         Qis0lQsZs0vyDS6oozXltzm0+PHA3EsI0gLdrlxSwANuNT3TZszt9fFzGvBL92jEhd
         8952JRvmcKKpY2JkaXxNNPbee4zJ/uPNbQxK0/h8E574TwFZZLLE0DqpESimUFZ8u+
         O/y2gcZMrsf5Q==
X-Virus-Scanned: amavisd-new at efficios.com
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10026)
        with ESMTP id TEFyVV_kVni1; Mon, 26 Nov 2018 14:22:06 -0500 (EST)
Received: from mail02.efficios.com (mail02.efficios.com [167.114.142.138])
        by mail.efficios.com (Postfix) with ESMTP id 39ED09B67E;
        Mon, 26 Nov 2018 14:22:06 -0500 (EST)
Date: Mon, 26 Nov 2018 14:22:05 -0500 (EST)
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
To: Rich Felker <dalias@libc.org>
Cc: Florian Weimer <fweimer@redhat.com>, carlos <carlos@redhat.com>,
        Joseph Myers <joseph@codesourcery.com>,
        Szabolcs Nagy <szabolcs.nagy@arm.com>,
        libc-alpha <libc-alpha@sourceware.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ben Maurer <bmaurer@fb.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Boqun Feng <boqun.feng@gmail.com>,
        Will Deacon <will.deacon@arm.com>,
        Dave Watson <davejwatson@fb.com>, Paul Turner <pjt@google.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        linux-api <linux-api@vger.kernel.org>
Message-ID: <2125113706.12987.1543260125953.JavaMail.zimbra@efficios.com>
In-Reply-To: <20181126171045.GQ23599@brightrain.aerifal.cx>
References: <20181121183936.8176-1-mathieu.desnoyers@efficios.com> <865273158.11687.1542995541389.JavaMail.zimbra@efficios.com> <20181123183558.GM23599@brightrain.aerifal.cx> <1758017676.12041.1543007347347.JavaMail.zimbra@efficios.com> <87bm6cqm31.fsf@oldenburg.str.redhat.com> <688718071.12798.1543247469553.JavaMail.zimbra@efficios.com> <874lc3omh5.fsf@oldenburg.str.redhat.com> <20181126171045.GQ23599@brightrain.aerifal.cx>
Subject: Re: [RFC PATCH v4 1/5] glibc: Perform rseq(2) registration at nptl
 init and thread creation
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [167.114.142.138]
X-Mailer: Zimbra 8.8.10_GA_3047 (ZimbraWebClient - FF52 (Linux)/8.8.10_GA_3041)
Thread-Topic: glibc: Perform rseq(2) registration at nptl init and thread creation
Thread-Index: Gp6Ud2j0fZ3nhKmGwY2/0Y0Discpuw==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

----- On Nov 26, 2018, at 12:10 PM, Rich Felker dalias@libc.org wrote:

> On Mon, Nov 26, 2018 at 05:03:02PM +0100, Florian Weimer wrote:
>> * Mathieu Desnoyers:
>> 
>> > So let's make __rseq_abi and __rseq_refcount strong symbols then ?
>> 
>> Yes, please.  (But I'm still not sure we need the reference counter.)
> 
> The reference counter is needed for out-of-libc implementations
> interacting and using the dtor hack. An in-libc implementation doesn't
> need to inspect/honor the reference counter, but it does seem to need
> to indicate that it has a reference, if you want it to be compatible
> with out-of-libc implementations, so that the out-of-libc one will not
> unregister the rseq before libc is done with it.

Let's consider two use-cases here: one (simpler) is use of rseq TLS
from thread context by out-of-libc implementations. The other is use of
rseq TLS from signal handler by out-of-libc implementations.

If we only care about users of rseq from thread context, then libc
could simply set the refcount value to 1 on thread start,
and should not care about the value on thread exit. The libc can
either directly call rseq unregister, or rely on thread calling exit
to implicitly unregister rseq, which depends on its own TLS life-time
guarantees. For instance, if the IE-model TLS is valid up until call
to exit, just calling the exit system call is fine. However, if a libc
has a window at thread exit during which the kernel can preempt the
thread with the IE-model TLS area being already reclaimed, then it
needs to explicitly call rseq unregister before freeing the TLS.

The second use-case is out-of-libc implementations using rseq from
signal handler. This one is trickier. First, pthread_key setspecific
is unfortunately not async-signal-safe. I can't find a good way to
seamlessly integrate rseq into out-of-libc signal handlers while
performing lazy registration without races on thread exit. If we
figure out a way to do this though, we should increment the refcount
at thread start in libc (rather than just set it to 1) in case a
signal handler gets nested immediately over the start of the thread
and registers rseq as well.

It looks like it's not the only issue I have with calling lttng-ust
instrumentation from signal handlers, here is the list I have so
far:

* glibc global-dynamic TLS variables are not async-signal-safe,
  and lttng-ust cannot use IE-model TLS because it is meant to be
  dlopen'd,
* pthread_setspecific is not async-signal-safe,

There should be ways to eventually solve those issues, but it would
be nice if for now the way rseq is implemented in libc does not add
yet another limitation for signal handlers.

> 
> Alternatively another protocol could be chosen for this purpose, but
> if has to be something stable and agreed upon, since things would
> break badly if libc and the library providing rseq disagreed.

Absolutely. We need to agree on that protocol before user-space
applications/libraries start using rseq.

Thanks,

Mathieu

-- 
Mathieu Desnoyers
EfficiOS Inc.
http://www.efficios.com
