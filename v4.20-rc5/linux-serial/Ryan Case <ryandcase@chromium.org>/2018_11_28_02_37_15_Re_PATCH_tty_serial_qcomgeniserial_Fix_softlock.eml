Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 12:09:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 88910580322;
	Tue, 27 Nov 2018 18:40:33 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 18:40:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARMw0dRXe9D9a9tYHdXO1xtCiyqbV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCCv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUSohulHQmhBvjiyiNUinLswaE2z/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakOUeG61q/IxijdYvxMwjfy9pXDfxc7ofCMR71wd9fexlU1GAPekFqd?=
 =?us-ascii?q?spDqPzOP1uQKtmib7vdgVee1h24gsQFxrSGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T212pCo3zqcKtJ27cSQQ1Zgqxh/SZ+aaf4WM?=
 =?us-ascii?q?7R/uUvuaLy1ii3J/Yr2/gg6/8Ui+xe34Ucm5yEhKriVbndnWrHwN1ALc6tKBSv?=
 =?us-ascii?q?Rj+ketwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYetV7PEjL4lUnolqOaa0Yp9vSy?=
 =?us-ascii?q?5+nmYLjqvpqcOJV1igH6PKQugMu/AeEgPwgKXmib//m81bL68U36XrpKlPs2nb?=
 =?us-ascii?q?fdsJzDIsQaqKi5DBFP0os49Ra/ACmp0M4CkXkEMl1FYhSHgJbtO13UJ/D4F/i/?=
 =?us-ascii?q?j0y2kDh33/DGIqHhApLVI3jHkbfhfqhy51RTyQou1t1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYGU2KVHqCZKL/SsUOP5u83I+mDfo4VuCrnJPgi/fLu?=
 =?us-ascii?q?jWI5lkUbfammxpYXbHG4HvJ7I0SWe3bsg9EBEXsUsQo6VuDllFqCUTtLbXaoQ6?=
 =?us-ascii?q?08/i07CJ6hDYrbRICth6KO0D24Hp1RYGBGDFeMHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXemgsp9Tx0CMSd0HuBT3tukW?=
 =?us-ascii?q?MKXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+AjE+VNQxz8UKY0Z8AdqiiB/D0jGuA78UkbyLGZM1/rjd33j3O8Zy1XLG2L?=
 =?us-ascii?q?M9gFkhR8tFLXemibJn9wjPG47JlF2UmLuweqQCwiHB7meDwnCIvEFDTgFwV6LJ?=
 =?us-ascii?q?XXQcZkvTqdT0/UfCT76oCbQ6PQpN08+CKq1WatL3iVVKXuvsONPbY2ipgWe/GQ?=
 =?us-ascii?q?6Ixq+QbIrtY2gSwT/SCFYanAwJ/XaJLw4+Bjy/rGLYFzFuEVPvY0Xx8ehxsn+7?=
 =?us-ascii?q?T0k0zx2UYE1lzba65hkVhfmEQfMJwr0EoDshqylzHFulw9LWCt+Apw19fKVcYd?=
 =?us-ascii?q?Ix+ktH2XjetwxnOpygLqZihlEFfgRzvkPu0Qh3C4pancgrqnMq0BR9KaaC3Fxd?=
 =?us-ascii?q?cDOY2Ij6OqfLJWnq4BCvd6nW10nE39aS5KgO5+o3qlX5sA6yC0ot7m9o099W03?=
 =?us-ascii?q?ub+JXHFw4SUZP3UkYq+Bl2vbDaYi8h54zK0X1gK7W7sjjH29gxHusq1g6gf8tD?=
 =?us-ascii?q?MKODDALzE9AaC9KyJ+AwmlmpbggLPOZd9KMvO8Omdv2G2LOkPep6nTKmi3hH75?=
 =?us-ascii?q?550k6W6yV8TevI1Y4fw/6ExguHSyv8jFC5v8DtmIBLeSsdHnCixijjHoJRYLN9?=
 =?us-ascii?q?fZwKCWu3P8K43NF+iIPzVH5C816jAUgL2MuoeRqUclz80hdc1UURoXy7hyS4yy?=
 =?us-ascii?q?Z4nC0urqqaxCbO2fjtdAIbOm5XQ2lvlVftIYmug9EaRkSodBUplB2+6Eb+xqhb?=
 =?us-ascii?q?orl/LmbJTUdJeSj2M39tUq+qurWeZM5P7YsisT9LX+SkfVCaVrn9rgMY0yz5BW?=
 =?us-ascii?q?texzM7dzawtpXihRN6i2GdLHd1rHXHf8F93hPf5N3aRf5M0TsKXih4iT/LBlei?=
 =?us-ascii?q?O9ml58mbl5DGsuqmTWKuSoVTcTX3zYOHrCa65XdlARqlk/Cxm93nFxM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5XkHnn3y?=
 =?us-ascii?q?MdlB2aL+cWACRTgEw9PO5Ajl2UtjLm+Gxo7jV3WdxNdhaMe+Ym8Mxi096MVKAr?=
 =?us-ascii?q?+O7LNYhSt1vka4rQXJbPh4nzcdyuEh5GQUgu4Xowot0juSAqoJEkZGJyzsmA+F?=
 =?us-ascii?q?79S/rKVReWaufqK81Et4ndC9Er6CphtQV2r+epcnBSVw9NlwMErQ0H3v7YHpYM?=
 =?us-ascii?q?XQbdUWthGOkhbPle5VKI8qlvoRhCpqImb9vXwjy+4mgh1ix5C6vI6bK2pz+KK1?=
 =?us-ascii?q?GAJXNjrwZ8kL4DHikb5entqK34CoBphuAS8EXJzsTfK1Cj4SsennOh2KED09rH?=
 =?us-ascii?q?ebBLXeERWe6Edgs3LADZSrO2uLK3keyNVoXAOdK1BHgAAIQDU6mYY0FgKwy8zk?=
 =?us-ascii?q?bkh5/Sod5kLiphtP1+JoNAT/UmHFqwezcTo0TJmfLBxL7gBN/UvVMMqe7v5tEC?=
 =?us-ascii?q?Fc5JGusAuNKmmDbQRSEW4JQlCEB0zkPrS25djA9PWYBvOjL/TUZ7WCs/deV/CO?=
 =?us-ascii?q?xZKgyYZm+zeMNsOSPnhtFfE720xDXWxnFMTdgTkAVysXlyfVZc6BuBi84jF3rt?=
 =?us-ascii?q?y48PnzWALg+4qPC7hRMdVu4Ry2gr2DN+mfhClnMzZYy4gMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv42aRljvEuEVdKS1?=
 =?us-ascii?q?zgltutZcwLOGy9MFLHBECWNLWJPzHLwsf3Yb+iRr1UlulbqxqwuTODGU/5IjuD?=
 =?us-ascii?q?jyXpVwyoMexUkCGbPRletJuhfRp3FWfjTMzpahugPd9zjD02x6A0h3zQOW4dNz?=
 =?us-ascii?q?h8b11CrrmK4SxEhfV/HnRL7mB5IumchyaZ8+7YJ44WsPRxBCR0kuNa4HIixLpU?=
 =?us-ascii?q?7CFLXvp1mCTJo95qolGmlPSPyzV9XBpPrDZLmJyEvUF4NarF8ZlAXCWMwBVY1n?=
 =?us-ascii?q?mdExQHoZNPDczj8/RL1dLIha7bIzdY9NfV4M5aANLbfpGpKn0kZCD4ETicJwIe?=
 =?us-ascii?q?QHb/L3DWgUBWmeqf3naVtJ8/q4Xp3p0URekIBxQOCvoGBxE9T5Q5K5BtU2ZhyO?=
 =?us-ascii?q?bDgQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAACr//1bh0O0hNFcCB4BBgcGgVEJC?=
 =?us-ascii?q?wGDaxQTg3mWLRSSNYR3gXMsEwGHWiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwy?=
 =?us-ascii?q?CNiQBgmIBAgMBAiAEGQEBNwEFCQEBCgsDCgICJgICAx8SAQUBHAYKCQWDHIICB?=
 =?us-ascii?q?Zp/PIodcHwNJoJ2AQEFh0wIEnmLAheBf4ERgxKEXIMpglePInePdQmCII8RGIF?=
 =?us-ascii?q?ZiC+HAyyJQ446MIElgg0zGjB0BoI1ghsMF4hehWAeM4EFAQGMVwEB?=
X-IPAS-Result: =?us-ascii?q?A0AkAACr//1bh0O0hNFcCB4BBgcGgVEJCwGDaxQTg3mWLRS?=
 =?us-ascii?q?SNYR3gXMsEwGHWiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBA?=
 =?us-ascii?q?iAEGQEBNwEFCQEBCgsDCgICJgICAx8SAQUBHAYKCQWDHIICBZp/PIodcHwNJoJ?=
 =?us-ascii?q?2AQEFh0wIEnmLAheBf4ERgxKEXIMpglePInePdQmCII8RGIFZiC+HAyyJQ446M?=
 =?us-ascii?q?IElgg0zGjB0BoI1ghsMF4hehWAeM4EFAQGMVwEB?=
X-IronPort-AV: E=Sophos;i="5.56,289,1539673200"; 
   d="scan'208";a="42571837"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 18:40:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727121AbeK1NhZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 08:37:25 -0500
Received: from mail-it1-f194.google.com ([209.85.166.194]:36336 "EHLO
        mail-it1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726548AbeK1NhY (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 08:37:24 -0500
Received: by mail-it1-f194.google.com with SMTP id c9so1965487itj.1
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 18:37:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=GKnGBFHoRRtOIiZ2KPniXrJEpKi7+F0sFDrCAK6jF7c=;
        b=Stzlsyhz6vjm0YjM3ZYpf+0z0dz1g+W8YeiB+m33jFTy/PLZmMe25EdvsijATFVD4+
         p1jL0zdpKr51DW+YQO0MpBmFtVnGhhXJd0f4Du+KLAeh5+jJSmsajkmPx1/fFNf5kFE9
         2pbu+c0UGXV0HNP8K+tQ+0j0lfFrv+XIY3j/I=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=GKnGBFHoRRtOIiZ2KPniXrJEpKi7+F0sFDrCAK6jF7c=;
        b=EEBHvzYQ9iYuxcaUouIDA62Z+86XiBpzfQp/mOYo2CSVc/8q9gCd5sJZKALeWymbWr
         DwGWZedYQBKaSXMctQLwUPV/1r8qSYUbvZ7k4QG481X2nUM5rvqRf8M8K4Jq6mC2SnIJ
         88TXkZCvTkKeB6Er/nQ8Zu6aFQMR0VjZSc6RHuIRNjoYiaKJuXmPst40EW6/Eu2A7x13
         +6LwkPaB1SngItjuHIYP1cBy1OnnH92xMeFT039hj0i3M21UG48qw5U0a0MTc12jHh2k
         0lvwLt8Th/9RrwJ0Je13GV+F89611EKtXqdTwzqvAvTuZtAtBfGQrx+ZiT64lScMGr2y
         yEvQ==
X-Gm-Message-State: AA+aEWbxm7yWi3Z/oxjNFYWtF9mUgy8m6EhW1b+Ydjipry8bbiDYQo1I
        1/ryfqBoUbSAotuEWE2uNHn1cZ9ZbHgUnWmieLPMwg==
X-Google-Smtp-Source: AFSGD/WnS1YqvEYKt6MNTUuyKNJXsnReiFgQF2dp4dM1FGQOONUJvzvsoGqCV2T2Cm1cg6hMt4j+fnncyZhbnculQP8=
X-Received: by 2002:a24:a507:: with SMTP id k7mr1318045itf.98.1543372646884;
 Tue, 27 Nov 2018 18:37:26 -0800 (PST)
MIME-Version: 1.0
References: <20181127022536.104663-1-ryandcase@chromium.org>
 <154336440880.88331.11610393939844825622@swboyd.mtv.corp.google.com>
 <CACjz--n6eXtT6-CDhVEStSD_59yJ-fdmfHzo9SH_da5ZzL_mDw@mail.gmail.com> <154337068886.88331.5708018437286125025@swboyd.mtv.corp.google.com>
In-Reply-To: <154337068886.88331.5708018437286125025@swboyd.mtv.corp.google.com>
From: Ryan Case <ryandcase@chromium.org>
Date: Tue, 27 Nov 2018 18:37:15 -0800
Message-ID: <CACjz--nbtoHA3ejeF+es4q5qsyYeoLRbUsd+a0r2RYfkuVVwPg@mail.gmail.com>
Subject: Re: [PATCH] tty: serial: qcom_geni_serial: Fix softlock
To: Stephen Boyd <swboyd@chromium.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Jiri Slaby <jslaby@suse.com>,
        Evan Green <evgreen@chromium.org>,
        Doug Anderson <dianders@chromium.org>,
        linux-kernel@vger.kernel.org, linux-serial@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 27, 2018 at 6:04 PM Stephen Boyd <swboyd@chromium.org> wrote:
>
> Quoting Ryan Case (2018-11-27 17:24:44)
> > On Tue, Nov 27, 2018 at 4:20 PM Stephen Boyd <swboyd@chromium.org> wrote:
> > >
> > > Quoting Ryan Case (2018-11-26 18:25:36)
> > > > Transfers were being divided into device FIFO sized (64 byte max)
> > > > operations which would poll for completion within a spin_lock_irqsave /
> > > > spin_unlock_irqrestore block. This both made things slow by waiting for
> > > > the FIFO to completely drain before adding further data and would also
> > > > result in softlocks on large transmissions.
> > > >
> > > > This patch allows larger transfers with continuous FIFO additions as
> > > > space becomes available and removes polling from the interrupt handler.
> > > >
> > > > Signed-off-by: Ryan Case <ryandcase@chromium.org>
> > > > Version: 1
> > >
> > > I've never seen a Version tag before. Did you manually add this?
> >
> > I submitted with patman, this should have been Series-version:
>
> Hmm ok. I'm not aware of this being a kernel idiom so I would remove
> this tag before sending.

Yup. Series-version: would be properly parsed out and adds the
v1/v2/etc... tags so this won't show up in the v2.

>
> >
> > >
> > > >
> > > >         WARN_ON(co->index < 0 || co->index >= GENI_UART_CONS_PORTS);
> > > >
> > > > @@ -465,9 +470,17 @@ static void qcom_geni_serial_console_write(struct console *co, const char *s,
> > > >                 }
> > > >                 writel_relaxed(M_CMD_CANCEL_EN, uport->membase +
> > > >                                                         SE_GENI_M_IRQ_CLEAR);
> > > > -       }
> > > > +       } else if ((geni_status & M_GENI_CMD_ACTIVE) && !port->cur_tx_remaining)
> > > > +               /* It seems we can interrupt existing transfers unless all data
> > >
> > > Nitpick: Have /* on a line by itself
> > >
> > > Is this comment supposed to say "we can't interrupt existing transfers"?
> >
> > Nope, comment is correct as is.
>
> Ok. I fail at parsing it then. Perhaps
>
> "It seems we can interrupt existing transfers except for when all data
> has been sent"
>
> would make it easier for me to read.
>
> >
> > >
> > > >
> > > >         __qcom_geni_serial_console_write(uport, s, count);
> > > > +
> > > > +       if (port->cur_tx_remaining)
> > > > +               qcom_geni_serial_setup_tx(uport, port->cur_tx_remaining);
> > >
> > > Does this happen? Is the console being used as a tty at the same time?
> >
> > Yup, happens quite a bit.
>
> So its being used in both modes at the same time?

Yes.

>
> >
> > >
> > > > +
> > > >         if (locked)
> > > >                 spin_unlock_irqrestore(&uport->lock, flags);
> > > >  }
> > > > @@ -701,40 +714,47 @@ static void qcom_geni_serial_handle_rx(struct uart_port *uport, bool drop)
> > > >         port->handle_rx(uport, total_bytes, drop);
> > > >  }
> > > >
> > > > -static void qcom_geni_serial_handle_tx(struct uart_port *uport)
> > > > +static void qcom_geni_serial_handle_tx(struct uart_port *uport, bool done,
> > > > +               bool active)
> > > >  {
> > > >         struct qcom_geni_serial_port *port = to_dev_port(uport, uport);
> > > >         struct circ_buf *xmit = &uport->state->xmit;
> > > >         size_t avail;
> > > >         size_t remaining;
> > > > +       size_t pending;
> > > >         int i;
> > > >         u32 status;
> > > >         unsigned int chunk;
> > > >         int tail;
> > > > -       u32 irq_en;
> > > >
> > > > -       chunk = uart_circ_chars_pending(xmit);
> > > >         status = readl_relaxed(uport->membase + SE_GENI_TX_FIFO_STATUS);
> > > > -       /* Both FIFO and framework buffer are drained */
> > > > -       if (!chunk && !status) {
> > > > +
> > > > +       /* Complete the current tx command before taking newly added data */
> > > > +       if (active)
> > > > +               pending = port->cur_tx_remaining;
> > > > +       else
> > > > +               pending = uart_circ_chars_pending(xmit);
> > > > +
> > > > +       /* All data has been transmitted and acknowledged as received */
> > > > +       if (!pending && !status && done) {
> > >
> > > Nitpick: status is a poor variable name to test here. I don't understand
> > > what this line is doing. Maybe it would help to have another local
> > > variable like 'needs_attention'?
> >
> > It could be renamed but since this isn't a general file cleanup patch
> > I was avoiding non-functional changes. It is the TX_FIFO_STATUS
> > register, if non-zero there is still data in the FIFO or related
> > activity ongoing.
>
> Ok.
>
> >
> > >
> > > >                 qcom_geni_serial_stop_tx(uport);
> > > >                 goto out_write_wakeup;
> > > >         }
> > > >
> > > > -       if (!uart_console(uport)) {
> > > > -               irq_en = readl_relaxed(uport->membase + SE_GENI_M_IRQ_EN);
> > > > -               irq_en &= ~(M_TX_FIFO_WATERMARK_EN);
> > > > -               writel_relaxed(0, uport->membase + SE_GENI_TX_WATERMARK_REG);
> > > > -               writel_relaxed(irq_en, uport->membase + SE_GENI_M_IRQ_EN);
> > > > -       }
> > > > +       avail = port->tx_fifo_depth - (status & TX_FIFO_WC);
> > > > +       avail *= port->tx_bytes_pw;
> > > > +       if (avail < 0)
> > > > +               avail = 0;
> > >
> > > How can 'avail' be less than 0? It's size_t which is unsigned? If
> > > underflow is happening from that subtraction or overflow from the
> > > multiply that could be bad but I hope that is impossible.
> >
> > I hope underflow is impossible as well. However, if the hardware did
> > wind up in a strange state I wanted to err on the side of not throwing
> > away data and being able to resume later if things recovered. I can
> > remove the defensive checks if that's the custom, otherwise I'll
> > update the comparison logic accordingly.
>
> Well it looks like impossible code because an unsigned value can't be
> less than zero. So it's not about customs, more about dead code removal.

Agreed on the current dead code aspect which is why I offered the
option of updating the comparison logic, but I can just delete it if
you want.

>
> >
> > >
> > > >
> > > > -       avail = (port->tx_fifo_depth - port->tx_wm) * port->tx_bytes_pw;
> > > >         tail = xmit->tail;
> > > > -       chunk = min3((size_t)chunk, (size_t)(UART_XMIT_SIZE - tail), avail);
> > > > +       chunk = min3((size_t)pending, (size_t)(UART_XMIT_SIZE - tail), avail);
> > >
> > > Nitpick: If we made 'avail' unsigned int would we be able to drop the
> > > casts on this min3() call? This line is quite hard to read.
> >
> > Seems they can go away without any changes.
>
> Ok!
>
