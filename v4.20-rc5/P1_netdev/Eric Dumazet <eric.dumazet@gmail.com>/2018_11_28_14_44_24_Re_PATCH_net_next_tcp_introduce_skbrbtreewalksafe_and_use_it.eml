Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:37:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 840715802E4;
	Wed, 28 Nov 2018 06:45:39 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 06:45:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ad5OTZRxs85ceivbXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8WLfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwBu7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nao8/1NKYOXuuowqfI0DDDYOlX2Djj9IjDbxcsru+WXbJxbcXd01QgFx7AjlqK?=
 =?us-ascii?q?qI3qIS+V2/8Cs2ie9eVgVOavh3Q7pAF2pzii38EhgZTKiIIN0l3I6zl1zYIvKd?=
 =?us-ascii?q?GlRkN3f8SoHIZTui2GLYd7Q8EvT3lptSs40LEKpJ22cDQQxJg6xhPSaeaLf5WV?=
 =?us-ascii?q?7h/sUuuaPC12i2h/eL2lgha/6UigxfP4VsmzyFtKsCVFncfWtnwX1Bzc9NKHSv?=
 =?us-ascii?q?1j8UelwzqP0BrT6u5cLUA1k6rUNYIhz6YumpYPtUnPBDL6lUvogKOMa0kp+fSk?=
 =?us-ascii?q?5/7mb7jkvpOcMpV7igD6MqQggMy/BuE4PxAKX2ia/+S8ybLi8VT6QLpUlP02lL?=
 =?us-ascii?q?fWsJTDKcQcqK+5BRFa0pw45hahADepzs4YkWMELF1bYhKHiZbmO1XULPD/F/e/?=
 =?us-ascii?q?jEygkC13yPDeIr3hHpLNI2DHkLfgfrZy9VRQyQUuzd1E45JUC7cBIO/8W0Prtd?=
 =?us-ascii?q?zYCAM5PBKww+r9FNp90YYeU3qVAqCFKKPSrUOI5uU3LumMfoAVuSr9JOIi5/L0?=
 =?us-ascii?q?jX85hEUSfa+m3ZYMbHC4H/JmI1iWYHb2g9cBF3sKsRQ6TODwlFKCVjtTbW6oX6?=
 =?us-ascii?q?0g/jE7FJ6mDYDbS4Cvh7yOwj23Hp5RZmBADFCMFmzld4GFW/cKdSKTLdVtkj0C?=
 =?us-ascii?q?Vbi9VYAh0QuiuxP9y7piNuDU4DEXtYr/1Nhp4O3ejQs99Sd0D8Sa0GGBVXt0kX?=
 =?us-ascii?q?kKRzIt2KB/oEp9ykqM0KRigvxYE8BT6O1NUgsgKZHcyOl6AcjoWg3dZteJVEqm?=
 =?us-ascii?q?QtK+DDEyVN0xxcUCY0J8G9q4iBDD0DGnA7sUl7yNGZw1/bjQ33n3J8Zh1XnG0L?=
 =?us-ascii?q?MtgEUhQstKLWemnLJw9xDPB47VlEWUj7uler4C3CHT7muDzXCBvEdDUAFuV6XJ?=
 =?us-ascii?q?WnQfZkjTrdT9/U7CS76uCbI6MgpO08KCK61KasH3glVCXvvsJNPeY2epkWeqGR?=
 =?us-ascii?q?mI3q+MbJbte2gFwSrSElYEnB4J8XaGLwc+ADyhrHzYDDF1EVLvYkXs8fRxqX+h?=
 =?us-ascii?q?T080yR2KYFNl17av5hEVgvmcQesJ3r0YoCchtyl0HFGl0tLKCtqAog1hfLlcYd?=
 =?us-ascii?q?I9+ltHyXjVtwtnPpykLqBigFEefh9zv0Pv0RV3F4pBndIrrHMs0Ap9N6aY3Eld?=
 =?us-ascii?q?eDOf2JD6IqfXJXXq/BCzd67W3UnT38yS+qgR5/U3tVXisBuyGUo/7npoyd9V03?=
 =?us-ascii?q?ib5pXUFwcSVZPxUkAq9xl1vb3aYy8955/K2n1oK6W7rjjC29cxDus/1hmgZ8tf?=
 =?us-ascii?q?ML+DFALqE8waGtKiJ/Awl1mobhILJuZS9KEvMsOidvuG3rOrPel6kDKni2RH/J?=
 =?us-ascii?q?5y0kaW+yVgTe7I2o4Pw+uE0QufSzf8kFChv9jtmYBFeT4dBHC/xjXjBIJLYK19?=
 =?us-ascii?q?Y5wLCWa3L8Kr3Np+g4PiVGBC9F6kAVMLw8upeRuUb1zg0gxcz0UXoXq7mSSmyz?=
 =?us-ascii?q?x4iS0mrq2a3CbW2eTtaAIHOnJXRGlllVrtIYm0g8oaXUSydAgpiR2l6F3+x6ha?=
 =?us-ascii?q?oqR/MmbSTV1JfyjwM2FtTK+wuqCebM5I7ZMiqT9XX/ikYVCGVr79pAMX0yH5EG?=
 =?us-ascii?q?tExzA7dDaqto/inxNgi2KdL3dzrHzHdsF23hrf4N3cRfhM3jsJXiV4iD/XBkSi?=
 =?us-ascii?q?MNmt59mbi5DDsuWmXWK7SpJTaTXrzZ+HtCaj5WxlGxq/k+qxmt3mFwg3yiv719?=
 =?us-ascii?q?hsVSXVoxfweIjr16KmMe15eklkHkPz681/GotmiIs/mIkQ2WQGhpWS5XcHkn38?=
 =?us-ascii?q?MdRB1aL+cXoCXzgLw9HO7Qjh2U1jKG+Jxo3jWnWcxMthe8e1YmcM1i0h6MBKDb?=
 =?us-ascii?q?+e7KZYkittvlq4sQXRbOB4njccyvsh8mQWgu8Xtwo20iWSHKoSElJGMiz2mBSF?=
 =?us-ascii?q?9NS+rKRRZGayfrm8zkt+nda9DL6cpgFQQmr2epAnHSVo9MVwLErM0GHv6oHjYN?=
 =?us-ascii?q?TQcdUTthiOnxbBledVLo8xluERhSpmIm/9uXwly+gmjR1hx526vY6HK3lz86K9?=
 =?us-ascii?q?GBJXKjr1Z8YL8DH3kalehtqW35yoHph5AToERpzoTfa1ED4IsfTnKh2DEDk9qn?=
 =?us-ascii?q?edBLreEhWT6EZgr3LTDZ+rM2ubK2UezdVnXBOdPlBQgBgIXDUmmZ40DgKqy9bk?=
 =?us-ascii?q?cEhn/TAd/EL4pgFPyuJ1NBn/T2Hfqx2zajovTJifLRxW7hxN5kvPMMye6P5zED?=
 =?us-ascii?q?9c/pG7sAONLWmbbRxSDW4VQkyEG0zjPr626NjA9OiYG/O+L+bUbrWIs+BeTPCI?=
 =?us-ascii?q?xZSg0oZ9+zaMN8OPPmRtDvEh20pDW2x5FNrdmzkVVyMXkCfNZdaBpBig4i13st?=
 =?us-ascii?q?y/8PPzVQLv+4SPCrhSMdZu+xysgqeDLemQhClnJjZCy5MM3mTFyLwe3F4UliFv?=
 =?us-ascii?q?eCOhEbUGtS7RUq3QnrVbAAIcayN2LMFI9b4z3hFROc7HjdP4zqR3juMuBFdfS1?=
 =?us-ascii?q?PgmtulZcgLI2ymMFPHBUCLNKmJJDHRwsH3Z7+8RqNUjOlOqxKwvjObGVf5Pjuf?=
 =?us-ascii?q?jznpSwyvMeZUgSGHPRxevZuxfQp3BWf/TNLpdBu7PcRzjT03x700m3zLOXQdMT?=
 =?us-ascii?q?h6b0NCsLmQ4TlEjfV4HmxL9mBlIvWcmyaF8+nYLY4bsPtxDSRykuJa4XI6xKNU?=
 =?us-ascii?q?7SFEXvN1niTSo8Vqo1GnlOmP1zVmXABPqjZNmIKEo0FiNb/F+ZlHXHaXtC4KuF?=
 =?us-ascii?q?SZBR0MqJNeCtTo8/RUw9/GjuToKD5F293R9MoYQcPTLZTDeHYoLxfsMDLdEgYA?=
 =?us-ascii?q?STmlKSfZilAZ2Pye63icvJUmgpfrn5UKR/lQU1lmOOkdDxFIBt0JaLtqWzo2nK?=
 =?us-ascii?q?LT2MMS5HH4oATUTddXorjIU/uTBbPkLzPP3uoMXAcB3b6tdddbDYb8wUE3LwAi?=
 =?us-ascii?q?xIk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAACcqP5bh0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJsfxQTg3mDe4QdjAmBYAglFIkNiSqEd4FxFAEBGBMBh24?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBGx0BA?=
 =?us-ascii?q?wIJAQEFBQsDCgICJgICAx4CEQEFARwGAQwGAgEBAYMcgWkBAw0IBZp3PIsNfBY?=
 =?us-ascii?q?FAReCdwWCRIIJChknDV2BNwIGEnmJb4EcgVc/gREnDIJfgleFLoJXAo9nNI9SL?=
 =?us-ascii?q?gcCghwEi2WDJgYCFolYEIctLIhKhWmJQgIEAgQFAgUPIYElgg0zGiOBAYI7ghs?=
 =?us-ascii?q?1gziKdB8ygQUBAY0zAQE?=
X-IPAS-Result: =?us-ascii?q?A0APAACcqP5bh0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJsfxQTg3mDe4QdjAmBYAglFIkNiSqEd4FxFAEBGBMBh24iNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBGx0BAwIJAQEFBQsDCgI?=
 =?us-ascii?q?CJgICAx4CEQEFARwGAQwGAgEBAYMcgWkBAw0IBZp3PIsNfBYFAReCdwWCRIIJC?=
 =?us-ascii?q?hknDV2BNwIGEnmJb4EcgVc/gREnDIJfgleFLoJXAo9nNI9SLgcCghwEi2WDJgY?=
 =?us-ascii?q?CFolYEIctLIhKhWmJQgIEAgQFAgUPIYElgg0zGiOBAYI7ghs1gziKdB8ygQUBA?=
 =?us-ascii?q?Y0zAQE?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="42635645"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 06:44:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729100AbeK2BqZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:46:25 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:46740 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728031AbeK2BqZ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:46:25 -0500
Received: by mail-pf1-f196.google.com with SMTP id c73so10246566pfe.13;
        Wed, 28 Nov 2018 06:44:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=6wha/INn/D3e0RtDI+LaouWVcZ5GFbBIB9T6TPapMQ0=;
        b=EoCVzr4ZCIvBMCI6DXgZufZrdKQDtuF3PUYM06apAzPmV7kONa7HVQdjQtNXadw2lE
         715rP1lugcLaX4GaSRrx6G+Y5+rAGRVDTmKCDQ4HQeWH5syfAksOkV9CURWelr1lKDSv
         f3z9Kck/hnrTTH38jc6eMvD7/NzqpMxYALjCX1Ja+DM7P7khMOEkYcG1lMtYcJMUAPSs
         52nhs8jlXMlIwugMNBGq7GZhX9GK39WbbFg/T5LikM6znFDcOcfjIBckSMu+POqUsiYD
         0xAZQI4QfADm+E5hU3v7BZuv9GNmX1+tEu85tRJSe9QxHcsdTnsSG4vX3sDfXCfUASxD
         SpPQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=6wha/INn/D3e0RtDI+LaouWVcZ5GFbBIB9T6TPapMQ0=;
        b=Mhv8jzbjQZMe8Uxt/zl4XdMfj4+Xf/Ek9oj52Orf5RdzJWtDxWJ0TP8PR7JcALuykK
         SEsFvoWYTGbU/wFsuRjKRoNW5kCDycCffMl2BbZzibptheF/P8305+viK9U2gH42gwe+
         VnUt/Sj2TQX+S2XCePPhyPSHeObZhcLP2RWtxt2xdNCoPR+uNWsTJaBQ7RS0UGeWOXOo
         gRBd9sN88t1u5HC5i3CkI0mrYXzMrelGoyQrRqZeD3Lw8mzluFEZLKPUT92B1HmX+/8o
         ZHCqqHSH0RzVLyFB9iwsINhQMHm//jTI6a4q4xJ3hLbN6JdpCQ5rcQO5l2Ju1epwoGmU
         EB8Q==
X-Gm-Message-State: AGRZ1gI49S8o7F5A0PjrrR4q3txtlRh1IkJjwvaSkdJRpRTGh9itOq8G
        TcuQbQPC3QMeu/2l54TBkb+VEYqj
X-Google-Smtp-Source: AFSGD/USr9FcIrkhRW0LHIs9Yn0UYSsT/1wn2tLB32oK5CIVDDYArZDPqI1N1W2VVZtFK5TbBiVkdw==
X-Received: by 2002:a63:2d46:: with SMTP id t67mr34138188pgt.140.1543416270825;
        Wed, 28 Nov 2018 06:44:30 -0800 (PST)
Received: from [192.168.86.235] (c-67-180-167-114.hsd1.ca.comcast.net. [67.180.167.114])
        by smtp.gmail.com with ESMTPSA id u70sm14275722pfa.176.2018.11.28.06.44.28
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 28 Nov 2018 06:44:30 -0800 (PST)
Subject: Re: [PATCH net-next] tcp: introduce skb_rbtree_walk_safe() and use it
 in tcp_clean_rtx_queue()
To: Yafang Shao <laoar.shao@gmail.com>, davem@davemloft.net,
        edumazet@google.com
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org
References: <1543407379-3144-1-git-send-email-laoar.shao@gmail.com>
From: Eric Dumazet <eric.dumazet@gmail.com>
Message-ID: <60467855-ea5f-3351-8b88-ffdfa60501e0@gmail.com>
Date: Wed, 28 Nov 2018 06:44:24 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <1543407379-3144-1-git-send-email-laoar.shao@gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 11/28/2018 04:16 AM, Yafang Shao wrote:
> When walk RB tree, we'd better use skb_rbtree_walk* helpers, that can make
> the code more clear.
> As skb_rbtree_walk() can't be used in tcp_clean_rtx_queue(), so the new
> helper skb_rbtree_walk_safe() is introduced.

This makes things slower. Let me explain inline.

> 
> Signed-off-by: Yafang Shao <laoar.shao@gmail.com>
> ---
>  include/linux/skbuff.h | 5 +++++
>  net/ipv4/tcp_input.c   | 5 ++---
>  2 files changed, 7 insertions(+), 3 deletions(-)
> 
> diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
> index 73902ac..37ff792 100644
> --- a/include/linux/skbuff.h
> +++ b/include/linux/skbuff.h
> @@ -3256,6 +3256,11 @@ static inline int __skb_grow_rcsum(struct sk_buff *skb, unsigned int len)
>  		for (skb = skb_rb_first(root); skb != NULL;			\
>  		     skb = skb_rb_next(skb))
>  
> +#define skb_rbtree_walk_safe(skb, root, tmp)					\
> +		for (skb = skb_rb_first(root);					\
> +		     tmp = skb ? skb_rb_next(skb) : NULL, skb != NULL;		\
> +		     skb = tmp)
> +
>  #define skb_rbtree_walk_from(skb)						\
>  		for (; skb != NULL;						\
>  		     skb = skb_rb_next(skb))
> diff --git a/net/ipv4/tcp_input.c b/net/ipv4/tcp_input.c
> index f323978..ab6add2 100644
> --- a/net/ipv4/tcp_input.c
> +++ b/net/ipv4/tcp_input.c
> @@ -3043,7 +3043,7 @@ static int tcp_clean_rtx_queue(struct sock *sk, u32 prior_fack,
>  	struct tcp_sock *tp = tcp_sk(sk);
>  	u32 prior_sacked = tp->sacked_out;
>  	u32 reord = tp->snd_nxt; /* lowest acked un-retx un-sacked seq */
> -	struct sk_buff *skb, *next;
> +	struct sk_buff *skb, *tmp;
>  	bool fully_acked = true;
>  	long sack_rtt_us = -1L;
>  	long seq_rtt_us = -1L;
> @@ -3055,7 +3055,7 @@ static int tcp_clean_rtx_queue(struct sock *sk, u32 prior_fack,
>  
>  	first_ackt = 0;
>  
> -	for (skb = skb_rb_first(&sk->tcp_rtx_queue); skb; skb = next) {
> +	skb_rbtree_walk_safe(skb, &sk->tcp_rtx_queue, tmp) {
>  		struct tcp_skb_cb *scb = TCP_SKB_CB(skb);
>  		const u32 start_seq = scb->seq;
>  		u8 sacked = scb->sacked;
> @@ -3126,7 +3126,6 @@ static int tcp_clean_rtx_queue(struct sock *sk, u32 prior_fack,
>  		if (!fully_acked)
>  			break;
>  
> -		next = skb_rb_next(skb);

We call skb_rb_next() here only, not at the beginning of the loop.

Why ? 

Because we can break of the loop if the current skb is not fully acked.

So your patch would add unnecessary overhead, since the extra sk_rb_next()
could add more extra cache line misses.


