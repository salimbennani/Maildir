Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:23:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 63CC6580442;
	Fri, 30 Nov 2018 14:11:02 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 14:11:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKcMi5xddoiGHQm+za+oHUBsQlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZBWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+GozKbWyzXDc+1Z2S3g44bUdRAuv+2DXbFtesfWzUkvFgXFjkif?=
 =?us-ascii?q?qIH+JTOV0foCvHSY7+Z5SOKvkHQrqwdvrTiz38ohjJTCiIENyl3c6yl13II4Kc?=
 =?us-ascii?q?elREN1f9KoCoZcuiKGO4dsQ84vQXlktDg7x7EapZK2eTUGxZY7yxLDbvGIbYaF?=
 =?us-ascii?q?7gz+WOuUIDp0mnxldK66ihu870StzvHzW8yq3FtEoCpFnNzBtn4T2BPN5MWKT/?=
 =?us-ascii?q?9w8Vqj1DmT0Q3Y9/tKLloulaXBLp4s2r4wmYQXsUTEBiL2hkr2g7GMdkk++ein?=
 =?us-ascii?q?9f7nYrP4qZ+YLYN0jRv+Mqs2lsy+B+Q3LBQOUnCF9eig0LDv51D1TbtUgvEsj6?=
 =?us-ascii?q?XUs4zWKd4aq6O7GwNV15ws6xe7DzeoytQYmnwHIUpBeBKGiYjpJl7PLOn7Dfih?=
 =?us-ascii?q?mVSslilkx/TfMr3mDJTNKGbMkK36cLZj5E5T1hAzwcpc551KELEBJuz8WkvruN?=
 =?us-ascii?q?zfFB85PBS4w/z7B9VlyoMeRWWPD7edMKPTsl+H+PgjIuaRZIIOvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMjmF8de7Wp0oUTaHyiAvtmJECZa2L2gtgdCWcKohY+TOvyhV2CSzFTZmqyUL?=
 =?us-ascii?q?g75j0hCIKmEJ3MRoaigLGa2Ce7H5tWZn1JC1yWEHfocZmEVOkIaC6IPsBhlTkE?=
 =?us-ascii?q?X6C7S4A9zRGuqBP6y71/I+rW/S0Xq4jv1Nty5+3VkxEy8id5D8Cc02GLUmF1kX?=
 =?us-ascii?q?kERz4w3KBjv0N9zk2P3rR/g/xdDdZT/e9GUh8mNZ7AyOx3E8r9WhnBfteOS1aq?=
 =?us-ascii?q?WM+mDiszTt8qx98OYkB9G8itjxzZ3iqqBaMVmKKPBJAu7q3c2H3xLd5ny3nazK?=
 =?us-ascii?q?khk0UmQsxXOG2lnKF/8RLfB4rIk0qDkaaqer8R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsDmgk9YRPj9ItjeY3i+m2GrBR?=
 =?us-ascii?q?mWwLOAa47qe2YY3CXZE0UElwET/XCbNQkxHCuhomTeDCBwGlLreU/j7e5+qHaj?=
 =?us-ascii?q?RE8u0w6Kd1Fh16ay+hMNmPOTUe0T0awetCchsTp0Gk290MzQC9ebowphfaNcYc?=
 =?us-ascii?q?4y4Vtd1GLZsRB9MYKkL6x4mlEedAF3tVv01xprEoVAjdQqrHQywQpuKKKY1VRB?=
 =?us-ascii?q?dy+Y3ZHwILHXNnP+/Be1a67S21He1tmW97wL6PQ5rVXjoQ6oGlAj83Vhz9lazX?=
 =?us-ascii?q?+c6o/WAwoVVJL7Slw3+ARip7HGfik94JvZ2mdoMaaqvT7NxdIoCPE+xRa9YthQ?=
 =?us-ascii?q?KqWEFAz1E80EHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQ35cF3uuU0RedWzb9jFeuqMb3mY9faDEWH2q/zzXkBYFLaq1z?=
 =?us-ascii?q?e4YLFXmhI8mtytpigJ7tXmZS9ES/CFMexM+pZR2SYkTn3Q1RyUsYu2anlja/zz?=
 =?us-ascii?q?BulTEmsLCf3C3Xz+v+bhUHPnNES3d4jVfrJ4i5lNQaXEmubwg0mxqp/0f6x65H?=
 =?us-ascii?q?pKthK2nfW1tHfy/zL2t6SKu/qqKCY9JT6JMvqShWUOW8bUqaS7LnuBsaziXjEn?=
 =?us-ascii?q?BaxDA6cTGqp5r4kwZ7iGKbMHZ8sn7ZddtsyhfY4dzWXeRR0SYeRClklTnXAUCx?=
 =?us-ascii?q?P9uz8tWOlJfDsee+W3i6VpJJcinrzoKAtC2l6m1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYohJAfw38aio+X/XoGl2f+?=
 =?us-ascii?q?KtFb2aP4bHoQSj8H2d/V4A752EJ9KnKF3Z72VnKYwsF5fdm1fnsW2j4h78BNEK?=
 =?us-ascii?q?qU76ZLnSpvrlq4sALee/59njgGxPsq6X4ahfwJuQU3wiWcBLASAVdXPSj2mxuU?=
 =?us-ascii?q?6NC+qb1dZHyzfrioyEp+gdehAamHogFdW3b2YI0uHCFu4cVkLFLDzmfz5Zr6d9?=
 =?us-ascii?q?nKYtIerRmUkxbGj+hIJ5M9jPsKhSx7OW3juX0p0fI0jRtr3ZuipoiIN31t/L6l?=
 =?us-ascii?q?Ah5fLjD1e8QT+jT3gadfhMmW2Z2vHo56GjUKR5boSfOoEDQPtfXoLQqOETs8qm?=
 =?us-ascii?q?uFFrrbBwOQ9EBmr3fXGZCxK36XPGUZzcllRBSFP0NQmgcUXDEnnpIjEgCq2dfs?=
 =?us-ascii?q?cEN45jAX+175pQFAyuNuNxnjTGjfoB2kZSszSJiaNBBW9B1N51/JMcyC6eJ+By?=
 =?us-ascii?q?NY8YekrAOTMWyXfRhIAXsKWkyZBFDjI7+u6sPb8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRi0XkCLNctebpAqm9S1xtM?=
 =?us-ascii?q?y/6/PrWATg5YaUD7tSMNNv+w25gKuZNu6Qgjp5Jihc1p8W2XDIz70f1kYIiy5y?=
 =?us-ascii?q?bzmtDagAtSnVQaLQhKBXDh0bayByNMdS7KI8xA5NOcHFhdPvy754leU4C1NEVV?=
 =?us-ascii?q?znh8GoatYGI2C7NFPbGkmLMK6KKiHMw8Hyeam8U6FfjP1Itx2svjaWC1XsPimY?=
 =?us-ascii?q?mDnzSR+uMftAjCWaPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFmxd73plKPOIlDqD4+bEKpYZr/1rDz9wl+Jb5nQ61rRU?=
 =?us-ascii?q?4DtFRPxzhCvdsNpur0u6nemIzzptSABOpSpThIKXoUViPr3U95laVnbC+RIN7G?=
 =?us-ascii?q?OQBAwLpttlENLvva9Qx8PLlKLyLjdC7t3V8dEdB8jSNMKILn4hPQD1Fz7TCQtW?=
 =?us-ascii?q?BQKsYEzFhkcVufeS8XmJ5sw3sJnnsJMISrhfSBozG+9MWWp/G9lXD4p6WC8pi/?=
 =?us-ascii?q?ahi8MD5jLqqBjXWdVypJfKXfHXHO6pLjuF2+oXLyAUyK/1eNxAfrbw3FZvPxwj?=
 =?us-ascii?q?xNzH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAwtQFch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMII7J4wRjhgUlzQUgV8SAQEYEwGHdiI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiQTBgE4AQMCCQEBBQUYCSUDD?=
 =?us-ascii?q?AUgAQUBIhMFgxyBagMVAQSbQTyMCTOCdwWFCA2CFAIGEopsgRwXgX+BEYMShGU?=
 =?us-ascii?q?Fg0yCJgKPKnyQDwmRLCOJWYdGmDYCBAIEBQIFDyGBJYINMxoIJgqDJ4IbDBeDS?=
 =?us-ascii?q?op0HzKBAgMBASETjQwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAwtQFch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMII7J4wRjhgUlzQUgV8SAQEYEwGHdiI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmIBAgMBAiQTBgE4AQMCCQEBBQUYCSUDDAUgAQUBIhMFgxy?=
 =?us-ascii?q?BagMVAQSbQTyMCTOCdwWFCA2CFAIGEopsgRwXgX+BEYMShGUFg0yCJgKPKnyQD?=
 =?us-ascii?q?wmRLCOJWYdGmDYCBAIEBQIFDyGBJYINMxoIJgqDJ4IbDBeDSop0HzKBAgMBASE?=
 =?us-ascii?q?TjQwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,300,1539673200"; 
   d="scan'208";a="140322118"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 14:10:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726952AbeLAJVc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 04:21:32 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:38612 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725749AbeLAJVc (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 04:21:32 -0500
Received: by mail-pl1-f193.google.com with SMTP id e5so3444376plb.5;
        Fri, 30 Nov 2018 14:10:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=8GtRRzOY5ATBepJOAl3pdQm5CD35g8XR46WHt4Phzwk=;
        b=VNmRP4Jf/WUiQArq4cztsnDKdxyg6HK0TOoAiK+VupSjSAj3+/Aa2fY0ebWLOMbrPP
         7f+8X7rVhKViHbmEWwUrg08hDUkyrXFpg3mWd3DMb7MVo0L432M/WJ3fpCeK0f/1986z
         xqRJqjv5qE5IEGgwx7ZFj9qW4DqhTFb9DpHXrgqjiqaRPFWOEAjXdd/indg3BM8TVsmd
         NEpV62XgQi/9D4JLrykijkORTP8PPT8SWPxUlnQszmibdk6mxAOuLrpQfTkzOfbANXFV
         isF/nwAJWefqlF7S4sAposgZyCxDD1sVzOihL/CU+rj9xl9jQu3wC9TNmlbWfCrV3syy
         xDeQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=8GtRRzOY5ATBepJOAl3pdQm5CD35g8XR46WHt4Phzwk=;
        b=K4szfSrdQURk65lMeIUpO+I+a1pJpuicQe6qxbcyRxVidysQ++V02xUDw8V5Cnldxd
         fLb1F6s8u4aSLAP5k4mmeT/r9RJKjhDLZ6I5pI22u9EarjrH8tTQkBS7q10VRA7PxihY
         iJDrfqASASmn6xiTNqmTO8e2XEs/UbpuEcAFWmrOyyK8imvAxs0t1RN8UYaPq1Lg7tEZ
         26rIbeJYyrEdvXGyt3jzq6CY5MFDl9T87DvM1YchT1avklZ4RaSeCjcABwAibNZKSKgv
         dmg/5CaNDqMKRaaZr0ghv7KcHxf5o8wMAkKBmAguaVxNfpbQ64kQGIJOd6dWT5BuGkhJ
         djjg==
X-Gm-Message-State: AA+aEWZM6f1vkwd/CLcbhf4foY3JtLglkwQAcxde93bnBQeUtQ3lniER
        x4tJjSU9m8/EVzkaa+1eHaE=
X-Google-Smtp-Source: AFSGD/VLPrrukpTH+doI3MggCumkxSIZWSDSxZZESjYDfeefoStFr1UZ/4zdWZUB7nAXWE3NbsccgQ==
X-Received: by 2002:a17:902:201:: with SMTP id 1mr7244045plc.62.1543615847140;
        Fri, 30 Nov 2018 14:10:47 -0800 (PST)
Received: from localhost ([2600:1700:e321:62f0:329c:23ff:fee3:9d7c])
        by smtp.gmail.com with ESMTPSA id 202sm11973496pfy.87.2018.11.30.14.10.44
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 30 Nov 2018 14:10:45 -0800 (PST)
Date: Fri, 30 Nov 2018 14:10:44 -0800
From: Guenter Roeck <linux@roeck-us.net>
To: Eric Anholt <eric@anholt.net>
Cc: Florian Fainelli <f.fainelli@gmail.com>,
        devicetree@vger.kernel.org, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Wim Van Sebroeck <wim@linux-watchdog.org>,
        linux-watchdog@vger.kernel.org,
        linux-rpi-kernel@lists.infradead.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Stefan Wahren <stefan.wahren@i2se.com>,
        bcm-kernel-feedback-list@broadcom.com
Subject: Re: [PATCH v3 2/5] bcm2835-pm: Move bcm2835-watchdog's DT probe to
 an MFD.
Message-ID: <20181130221044.GA15333@roeck-us.net>
References: <20181130202743.20585-1-eric@anholt.net>
 <20181130202743.20585-3-eric@anholt.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181130202743.20585-3-eric@anholt.net>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 30, 2018 at 12:27:40PM -0800, Eric Anholt wrote:
> The PM block that the wdt driver was binding to actually has multiple
> features we want to expose (power domains, reset, watchdog).  Move the
> DT attachment to a MFD driver and make WDT probe against MFD.
> 
> Signed-off-by: Eric Anholt <eric@anholt.net>

For watchdog:

Reviewed-by: Guenter Roeck <linux@roeck-us.net>

> ---
> 
> v3: don't reset bcm2835_power_off_wdt on remove, drop pm driver's
>     empty remove, sort includes, add a "static".
> 
>  arch/arm/mach-bcm/Kconfig      |  1 +
>  drivers/mfd/Makefile           |  1 +
>  drivers/mfd/bcm2835-pm.c       | 64 ++++++++++++++++++++++++++++++++++
>  drivers/watchdog/bcm2835_wdt.c | 26 +++++---------
>  include/linux/mfd/bcm2835-pm.h | 13 +++++++
>  5 files changed, 88 insertions(+), 17 deletions(-)
>  create mode 100644 drivers/mfd/bcm2835-pm.c
>  create mode 100644 include/linux/mfd/bcm2835-pm.h
> 
> diff --git a/arch/arm/mach-bcm/Kconfig b/arch/arm/mach-bcm/Kconfig
> index 25aac6ee2ab1..95242c2162a2 100644
> --- a/arch/arm/mach-bcm/Kconfig
> +++ b/arch/arm/mach-bcm/Kconfig
> @@ -167,6 +167,7 @@ config ARCH_BCM2835
>  	select BCM2835_TIMER
>  	select PINCTRL
>  	select PINCTRL_BCM2835
> +	select MFD_CORE
>  	help
>  	  This enables support for the Broadcom BCM2835 and BCM2836 SoCs.
>  	  This SoC is used in the Raspberry Pi and Roku 2 devices.
> diff --git a/drivers/mfd/Makefile b/drivers/mfd/Makefile
> index 12980a4ad460..ee6fb6af655e 100644
> --- a/drivers/mfd/Makefile
> +++ b/drivers/mfd/Makefile
> @@ -10,6 +10,7 @@ obj-$(CONFIG_MFD_88PM805)	+= 88pm805.o 88pm80x.o
>  obj-$(CONFIG_MFD_ACT8945A)	+= act8945a.o
>  obj-$(CONFIG_MFD_SM501)		+= sm501.o
>  obj-$(CONFIG_MFD_ASIC3)		+= asic3.o tmio_core.o
> +obj-$(CONFIG_ARCH_BCM2835)	+= bcm2835-pm.o
>  obj-$(CONFIG_MFD_BCM590XX)	+= bcm590xx.o
>  obj-$(CONFIG_MFD_BD9571MWV)	+= bd9571mwv.o
>  cros_ec_core-objs		:= cros_ec.o
> diff --git a/drivers/mfd/bcm2835-pm.c b/drivers/mfd/bcm2835-pm.c
> new file mode 100644
> index 000000000000..53839e6a81e7
> --- /dev/null
> +++ b/drivers/mfd/bcm2835-pm.c
> @@ -0,0 +1,64 @@
> +// SPDX-License-Identifier: GPL-2.0+
> +/*
> + * PM MFD driver for Broadcom BCM2835
> + *
> + * This driver binds to the PM block and creates the MFD device for
> + * the WDT driver.
> + */
> +
> +#include <linux/delay.h>
> +#include <linux/io.h>
> +#include <linux/mfd/bcm2835-pm.h>
> +#include <linux/mfd/core.h>
> +#include <linux/module.h>
> +#include <linux/of_address.h>
> +#include <linux/of_platform.h>
> +#include <linux/platform_device.h>
> +#include <linux/types.h>
> +#include <linux/watchdog.h>
> +
> +static const struct mfd_cell bcm2835_pm_devs[] = {
> +	{ .name = "bcm2835-wdt" },
> +};
> +
> +static int bcm2835_pm_probe(struct platform_device *pdev)
> +{
> +	struct resource *res;
> +	struct device *dev = &pdev->dev;
> +	struct bcm2835_pm *pm;
> +
> +	pm = devm_kzalloc(dev, sizeof(*pm), GFP_KERNEL);
> +	if (!pm)
> +		return -ENOMEM;
> +	platform_set_drvdata(pdev, pm);
> +
> +	pm->dev = dev;
> +
> +	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
> +	pm->base = devm_ioremap_resource(dev, res);
> +	if (IS_ERR(pm->base))
> +		return PTR_ERR(pm->base);
> +
> +	return devm_mfd_add_devices(dev, -1,
> +				    bcm2835_pm_devs, ARRAY_SIZE(bcm2835_pm_devs),
> +				    NULL, 0, NULL);
> +}
> +
> +static const struct of_device_id bcm2835_pm_of_match[] = {
> +	{ .compatible = "brcm,bcm2835-pm-wdt", },
> +	{},
> +};
> +MODULE_DEVICE_TABLE(of, bcm2835_pm_of_match);
> +
> +static struct platform_driver bcm2835_pm_driver = {
> +	.probe		= bcm2835_pm_probe,
> +	.driver = {
> +		.name =	"bcm2835-pm",
> +		.of_match_table = bcm2835_pm_of_match,
> +	},
> +};
> +module_platform_driver(bcm2835_pm_driver);
> +
> +MODULE_AUTHOR("Eric Anholt <eric@anholt.net>");
> +MODULE_DESCRIPTION("Driver for Broadcom BCM2835 PM MFD");
> +MODULE_LICENSE("GPL");
> diff --git a/drivers/watchdog/bcm2835_wdt.c b/drivers/watchdog/bcm2835_wdt.c
> index ed05514cc2dc..1834524ae373 100644
> --- a/drivers/watchdog/bcm2835_wdt.c
> +++ b/drivers/watchdog/bcm2835_wdt.c
> @@ -12,6 +12,7 @@
>  
>  #include <linux/delay.h>
>  #include <linux/types.h>
> +#include <linux/mfd/bcm2835-pm.h>
>  #include <linux/module.h>
>  #include <linux/io.h>
>  #include <linux/watchdog.h>
> @@ -47,6 +48,8 @@ struct bcm2835_wdt {
>  	spinlock_t		lock;
>  };
>  
> +static struct bcm2835_wdt *bcm2835_power_off_wdt;
> +
>  static unsigned int heartbeat;
>  static bool nowayout = WATCHDOG_NOWAYOUT;
>  
> @@ -148,10 +151,7 @@ static struct watchdog_device bcm2835_wdt_wdd = {
>   */
>  static void bcm2835_power_off(void)
>  {
> -	struct device_node *np =
> -		of_find_compatible_node(NULL, NULL, "brcm,bcm2835-pm-wdt");
> -	struct platform_device *pdev = of_find_device_by_node(np);
> -	struct bcm2835_wdt *wdt = platform_get_drvdata(pdev);
> +	struct bcm2835_wdt *wdt = bcm2835_power_off_wdt;
>  	u32 val;
>  
>  	/*
> @@ -169,7 +169,7 @@ static void bcm2835_power_off(void)
>  
>  static int bcm2835_wdt_probe(struct platform_device *pdev)
>  {
> -	struct resource *res;
> +	struct bcm2835_pm *pm = dev_get_drvdata(pdev->dev.parent);
>  	struct device *dev = &pdev->dev;
>  	struct bcm2835_wdt *wdt;
>  	int err;
> @@ -181,10 +181,7 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
>  
>  	spin_lock_init(&wdt->lock);
>  
> -	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
> -	wdt->base = devm_ioremap_resource(dev, res);
> -	if (IS_ERR(wdt->base))
> -		return PTR_ERR(wdt->base);
> +	wdt->base = pm->base;
>  
>  	watchdog_set_drvdata(&bcm2835_wdt_wdd, wdt);
>  	watchdog_init_timeout(&bcm2835_wdt_wdd, heartbeat, dev);
> @@ -211,8 +208,10 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
>  		return err;
>  	}
>  
> -	if (pm_power_off == NULL)
> +	if (pm_power_off == NULL) {
>  		pm_power_off = bcm2835_power_off;
> +		bcm2835_power_off_wdt = wdt;
> +	}
>  
>  	dev_info(dev, "Broadcom BCM2835 watchdog timer");
>  	return 0;
> @@ -226,18 +225,11 @@ static int bcm2835_wdt_remove(struct platform_device *pdev)
>  	return 0;
>  }
>  
> -static const struct of_device_id bcm2835_wdt_of_match[] = {
> -	{ .compatible = "brcm,bcm2835-pm-wdt", },
> -	{},
> -};
> -MODULE_DEVICE_TABLE(of, bcm2835_wdt_of_match);
> -
>  static struct platform_driver bcm2835_wdt_driver = {
>  	.probe		= bcm2835_wdt_probe,
>  	.remove		= bcm2835_wdt_remove,
>  	.driver = {
>  		.name =		"bcm2835-wdt",
> -		.of_match_table = bcm2835_wdt_of_match,
>  	},
>  };
>  module_platform_driver(bcm2835_wdt_driver);
> diff --git a/include/linux/mfd/bcm2835-pm.h b/include/linux/mfd/bcm2835-pm.h
> new file mode 100644
> index 000000000000..b7d0ee1feffa
> --- /dev/null
> +++ b/include/linux/mfd/bcm2835-pm.h
> @@ -0,0 +1,13 @@
> +/* SPDX-License-Identifier: GPL-2.0+ */
> +
> +#ifndef BCM2835_MFD_PM_H
> +#define BCM2835_MFD_PM_H
> +
> +#include <linux/regmap.h>
> +
> +struct bcm2835_pm {
> +	struct device *dev;
> +	void __iomem *base;
> +};
> +
> +#endif /* BCM2835_MFD_PM_H */
> -- 
> 2.20.0.rc1
> 
