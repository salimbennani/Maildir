Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 16:15:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0BE8F5802E4
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 23:18:19 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 23:18:18 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AFFN7bxXPq5YDfaFOM1+tv1md4TbV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSHuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp2y?=
 =?us-ascii?q?b4UPAeQCM+hXoYbyqFkSohWxGAesHOHixD1Hi3Pr06A2z/ouERrd0Qw8HN8Dqm?=
 =?us-ascii?q?jYoMn7OaoQV+2+0anGzS/Eb/NTwTry6YnIfQomofqRXLxwbNDeyU8gFwPfiVWQ?=
 =?us-ascii?q?r4PlNC6S2+QCrmiU9exgVe21i24grQFxrSKjx8gtiobTgYIY0V/E9SBjz4Y0Id?=
 =?us-ascii?q?20UlJ0YdmhEJZJsSyRKoh4Qts6Tm12pCo3yacKtYOmcCUJ0pgr2RDSZvydf4SV?=
 =?us-ascii?q?4B/vTPidLSt2iX5/Zr6zmxa//VK9xuDzS8W4ylhHoytDn9LRrH4CzQbT5dKCSv?=
 =?us-ascii?q?Zl/keuxzKP1wfL5+FAIEA0jrbbK4U7zr4/kJoTrF7PHijsmEX5lKOWd0Mk9fa0?=
 =?us-ascii?q?6+n/fLnqupyRO5Vphg3jMakigNKzDOo4PwQUQmSW+/yw1Lj58k34RLVKgOc2kq?=
 =?us-ascii?q?7csJ3CPMQUuKu5AxJM3ok+9Rm/ESmp0NABkXYcK1JFZRSHgJT3NFHVJ/z4Cfa/?=
 =?us-ascii?q?g1eynztxyPHGI6XsApHMLnjFjbfgcqxx609ayAov099f44hYBa0GIPL2QULxst?=
 =?us-ascii?q?vYDhk2Mwyy3ubrEtJ91pkRWW6XGK+WLLvSsUOU5uIoO+SMYI4VuDXjJPQ/6P/u?=
 =?us-ascii?q?kGQ0mVscfamvwJsWZ2q0HvVgI0WFf3Xshs0NHnsNvgo7H6TXjkafW2tTe2qqRP?=
 =?us-ascii?q?B7oTU6E569S4HEQI+rnfqGxij8G5RXYmVPDBeLCWvpcIOfHO4BbT/XLsJ/nzhX?=
 =?us-ascii?q?aL66VoV00BivsBP9maNqK/eR9iAGuJamztVs+uDIiTk08jp7Cdnb1HuCGHpplG?=
 =?us-ascii?q?EFTCNjwaZkvEZmwU2C26Urv/sNX/BJobtlWxk7Odb1y+V8Q//zXgjMZMvDAAKq?=
 =?us-ascii?q?TdSiCzwrUvorztMOalo7ENKn2EPtxS2vVo8UnrvDK4E99K3G2H7+b5Jy1n/A27?=
 =?us-ascii?q?MmiVZgUspGMkWpg6d+807YAIufwBbRrLqjaalJhH2Fz2yE12fb+RgACAM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CdBADf7vxbhxHrdtBkHAECHwQBBgGBT?=
 =?us-ascii?q?QKBLyqBD4Epg3mId4slgWAtlz0UgV8SAQEYAxGIbiI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDiMMgjYFAgMaAQaCXAECAwECIAQLAQUIAQUKDB0BAgECAQIGAQEFB?=
 =?us-ascii?q?QsHBgICIgQCAgMBHQIRAQUBDg4GDQYCAQEBglFLAYFoAQMUAQEEmXw8iw18FgU?=
 =?us-ascii?q?BF4J3BYEBgUOBfwoZJw1bgTcCBhJ5iWKBHIIWgREngmuCVoIQgxyCVwKJAocTh?=
 =?us-ascii?q?EKLBS4HAoY9P4cIgyYGGF6BSIcshzeOT4k/AgQCBAUCBQ8hgSWCDU0jgQGCOwm?=
 =?us-ascii?q?CHheDSoVChR1lgQQDO4swgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CdBADf7vxbhxHrdtBkHAECHwQBBgGBTQKBLyqBD4Epg3m?=
 =?us-ascii?q?Id4slgWAtlz0UgV8SAQEYAxGIbiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMg?=
 =?us-ascii?q?jYFAgMaAQaCXAECAwECIAQLAQUIAQUKDB0BAgECAQIGAQEFBQsHBgICIgQCAgM?=
 =?us-ascii?q?BHQIRAQUBDg4GDQYCAQEBglFLAYFoAQMUAQEEmXw8iw18FgUBF4J3BYEBgUOBf?=
 =?us-ascii?q?woZJw1bgTcCBhJ5iWKBHIIWgREngmuCVoIQgxyCVwKJAocThEKLBS4HAoY9P4c?=
 =?us-ascii?q?IgyYGGF6BSIcshzeOT4k/AgQCBAUCBQ8hgSWCDU0jgQGCOwmCHheDSoVChR1lg?=
 =?us-ascii?q?QQDO4swgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="64119836"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 23:18:17 -0800
Received: from localhost ([::1]:40422 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRXdR-0003z0-4v
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 02:18:17 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44248)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <guangrong.xiao@gmail.com>) id 1gRXct-0003nC-H9
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 02:17:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <guangrong.xiao@gmail.com>) id 1gRXco-0005oC-Jv
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 02:17:43 -0500
Received: from mail-pl1-x62a.google.com ([2607:f8b0:4864:20::62a]:40728)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <guangrong.xiao@gmail.com>)
	id 1gRXco-0005nj-DK
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 02:17:38 -0500
Received: by mail-pl1-x62a.google.com with SMTP id u18so2595788plq.7
	for <qemu-devel@nongnu.org>; Mon, 26 Nov 2018 23:17:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=subject:to:cc:references:from:message-id:date:user-agent
	:mime-version:in-reply-to:content-language:content-transfer-encoding;
	bh=RaZ53oLxat7Vlm94H1taboNLvtSFV7/brgpxBKvGgIU=;
	b=Ovzn/CJ9fSGdaUiN7hW9HKI0C2Y0LlOwQkDYVxb6uWXmYmiNCvr8KWHcKz9ssdH/hy
	rZ+VX+zo4I9btu/D5hGkAugljaDRo4q+uChUYGZtbnu7lbSQjknegICHhMFuNdPcj0g7
	tQeNnra2fDzmZzJT0DvtpohjFRESAUH1ogntZ+Og8GLDV19/b2T+YM3XER39MFV76JhI
	pZlCVWgTPMsJgP691uaaCGG5Rgo2rHLb4HVT54PeYBznav5ObfCVNu70edESvO2Wtoiv
	HrPH7LbF0gHAsJhpzkSTgRuQw3styiKY4gTUvZYD7bTimURNcQqcaIHnHEYTyobsOgZu
	5QLA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:message-id:date
	:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=RaZ53oLxat7Vlm94H1taboNLvtSFV7/brgpxBKvGgIU=;
	b=OBBslaPhpLvw8+s0anDFrnfnWLA7klt+PHhsO+6o/GuVcsh+DisXWDHcHq9AU60FhY
	lonmzHBE/HS3ypXwdexFnfgPHYYb3Ml8uh6qY3cIMhwRlPQdd3i98nrzhHgdlKF9iouM
	+iMTQyNybNy3D1PJzmDyzRdTJpOzl0uLVYlCVpP0pTjiyUAOA03D3s2VIHJAeyDBRBuk
	QB21PZXrWBl85HN22alO8wVt/rAG3b69INMSzsOcEIPvp0CBdIY04L+G1sZLzLl8s3Sx
	+y3/hvaETOyfodiU2wJr81Yu7JT6sA63F+t2ZFXKGGIB/O9dJmVEz7v14NN+8DN4bSDT
	cCqQ==
X-Gm-Message-State: AA+aEWbBKs9WULgaBT21gDaBMmPyiEJP2VvFy/9w7ZhbtEyDDbPeyzkB
	VVKoZP/6WG0nqe0rYL0zWaA=
X-Google-Smtp-Source: AFSGD/Vd1l3D+9TamG/PSu1bfqekMpmLfqodlaUgYlfMmlEV/2qCz5uqTv/L3TnsAzG2vhBQZJWJ8A==
X-Received: by 2002:a17:902:4281:: with SMTP id
	h1-v6mr31235702pld.114.1543303057494; 
	Mon, 26 Nov 2018 23:17:37 -0800 (PST)
Received: from localhost.localdomain ([203.205.141.36])
	by smtp.gmail.com with ESMTPSA id
	b68sm3805111pfg.160.2018.11.26.23.17.32
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 26 Nov 2018 23:17:36 -0800 (PST)
To: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
References: <20181122072028.22819-1-xiaoguangrong@tencent.com>
	<20181122072028.22819-3-xiaoguangrong@tencent.com>
	<20181123110239.GC2373@work-vm>
	<e60f648f-d475-a88b-b0c3-300f18a7d36d@gmail.com>
	<20181126105622.GB2547@work-vm>
From: Xiao Guangrong <guangrong.xiao@gmail.com>
Message-ID: <29851b61-8b9a-eb54-8cb7-dc601136cb9e@gmail.com>
Date: Tue, 27 Nov 2018 15:17:30 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181126105622.GB2547@work-vm>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::62a
Subject: Re: [Qemu-devel] [PATCH v3 2/5] util: introduce threaded workqueue
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kvm@vger.kernel.org, mst@redhat.com, mtosatti@redhat.com,
	Xiao Guangrong <xiaoguangrong@tencent.com>,
	qemu-devel@nongnu.org, peterx@redhat.com, quintela@redhat.com,
	wei.w.wang@intel.com, cota@braap.org, jiang.biao2@zte.com.cn,
	pbonzini@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 11/26/18 6:56 PM, Dr. David Alan Gilbert wrote:
> * Xiao Guangrong (guangrong.xiao@gmail.com) wrote:
>>
>>
>> On 11/23/18 7:02 PM, Dr. David Alan Gilbert wrote:
>>
>>>> +#include "qemu/osdep.h"
>>>> +#include "qemu/bitmap.h"
>>>> +#include "qemu/threaded-workqueue.h"
>>>> +
>>>> +#define SMP_CACHE_BYTES 64
>>>
>>> That's architecture dependent isn't it?
>>>
>>
>> Yes, it's arch dependent indeed.
>>
>> I just used 64 for simplification and i think it is <= 64 on most CPU arch-es
>> so that can work.
>>
>> Should i introduce statically defined CACHE LINE SIZE for all arch-es? :(
> 
> I think it depends why you need it; but we shouldn't have a constant
> that is wrong, and we shouldn't define something architecture dependent
> in here.
> 

I see. I will address Emilio's suggestion that rename SMP_CACHE_BYTES to
THREAD_QUEUE_ALIGN and additional comments.

>>>> +   /*
>>>> +     * the bit in these two bitmaps indicates the index of the ï¼ requests
>>>> +     * respectively. If it's the same, the corresponding request is free
>>>> +     * and owned by the user, i.e, where the user fills a request. Otherwise,
>>>> +     * it is valid and owned by the thread, i.e, where the thread fetches
>>>> +     * the request and write the result.
>>>> +     */
>>>> +
>>>> +    /* after the user fills the request, the bit is flipped. */
>>>> +    uint64_t request_fill_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
>>>> +    /* after handles the request, the thread flips the bit. */
>>>> +    uint64_t request_done_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
>>>
>>> Patchew complained about some type mismatches; I think those are because
>>> you're using the bitmap_* functions on these; those functions always
>>> operate on 'long' not on uint64_t - and on some platforms they're
>>> unfortunately not the same.
>>
>> I guess you were taking about this error:
>> ERROR: externs should be avoided in .c files
>> #233: FILE: util/threaded-workqueue.c:65:
>> +    uint64_t request_fill_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
>>
>> The complained thing is "QEMU_ALIGNED(SMP_CACHE_BYTES)" as it gone
>> when the aligned thing is removed...
>>
>> The issue you pointed out can be avoid by using type-casting, like:
>> bitmap_xor(..., (void *)&thread->request_fill_bitmap)
>> cannot we?
> 
> I thought the error was just due to long vs uint64_t ratehr than the
> qemu_aligned.  I don't think it's just a casting problem, since I don't
> think the long's are always 64bit.

Well, i made some adjustments that makes check_patch.sh really happy :),
as followings:
$ git diff util/
diff --git a/util/threaded-workqueue.c b/util/threaded-workqueue.c
index 2ab37cee8d..e34c65a8eb 100644
--- a/util/threaded-workqueue.c
+++ b/util/threaded-workqueue.c
@@ -62,21 +62,30 @@ struct ThreadLocal {
       */

      /* after the user fills the request, the bit is flipped. */
-    uint64_t request_fill_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
+    struct {
+        uint64_t request_fill_bitmap;
+    } QEMU_ALIGNED(SMP_CACHE_BYTES);
+
      /* after handles the request, the thread flips the bit. */
-    uint64_t request_done_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
+    struct {
+        uint64_t request_done_bitmap;
+    } QEMU_ALIGNED(SMP_CACHE_BYTES);

      /*
       * the event used to wake up the thread whenever a valid request has
       * been submitted
       */
-    QemuEvent request_valid_ev QEMU_ALIGNED(SMP_CACHE_BYTES);
+    struct {
+        QemuEvent request_valid_ev;
+    } QEMU_ALIGNED(SMP_CACHE_BYTES);

      /*
       * the event is notified whenever a request has been completed
       * (i.e, become free), which is used to wake up the user
       */
-    QemuEvent request_free_ev QEMU_ALIGNED(SMP_CACHE_BYTES);
+    struct {
+        QemuEvent request_free_ev;
+    } QEMU_ALIGNED(SMP_CACHE_BYTES);
  };
  typedef struct ThreadLocal ThreadLocal;

$ ./scripts/checkpatch.pl -f util/threaded-workqueue.c
total: 0 errors, 0 warnings, 472 lines checked

util/threaded-workqueue.c has no obvious style problems and is ready for submission.

check_patch.sh somehow treats QEMU_ALIGNED as a function before the modification.

And yes, u64 is not a long type on 32 bit arch, it's long[2] instead. that's fine
when we pass the &(u64) to the function whose parameter is (long *). I thing this
trick is widely used. e.g, the example in kvm that i replied to Emilio:

static inline bool kvm_test_request(int req, struct kvm_vcpu *vcpu)
{
     return test_bit(req & KVM_REQUEST_MASK, (void *)&vcpu->requests);
}




