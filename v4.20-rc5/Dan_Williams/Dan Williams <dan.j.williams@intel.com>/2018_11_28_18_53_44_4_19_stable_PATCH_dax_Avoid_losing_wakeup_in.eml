Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:40:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E281A5802E4;
	Wed, 28 Nov 2018 11:06:19 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 11:06:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2I6rVBZ51I1OEQQW6t4DNQz/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci7Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM37WHZhNJ+gqxYoh2hqRJwzIHIb4+aL/p+ZqHQcMgGRWdDRMtdSzBND5m+?=
 =?us-ascii?q?YoYJEuEPPfxYr474p1YWoxWxHw+sD/7vxT9Jgn/22aw63P4kEQHdwQctGM8Bv2?=
 =?us-ascii?q?7SrNnvNqceS+60zKjMzTXHbvNZwzL96JPTfxAgp/GMQax/cc7LxUYzEAPFi0yd?=
 =?us-ascii?q?pIr4ND2WzuQAq3aX4/ZkWO61lmIqpR99riKyysovloXFnIMYx1Lc+SlkxIs5O8?=
 =?us-ascii?q?e0RU57bNK+EJZcqTuWO5Z2T88/RWxjpTw0xaccuZGheSgH0JQnyADba/yAa4WI?=
 =?us-ascii?q?/B3jW/iLITtih3JqZqi/hxCs/kik0OH8UdO00FlSoipElNnDqGwN2gTN5sSbTv?=
 =?us-ascii?q?Zx5Fqt1DiR2wzJ9+1JIlw4mbDaJpMj2rIwk4AcsUXHHi/4gkX2i6qWe10g+uip?=
 =?us-ascii?q?7eTnf7rnqoafN4BqkAH+NLohmsimDeQ/PAkOWXaU+f6n2b398k32Xq9Kguc1kq?=
 =?us-ascii?q?bHqpDaI9oUpqqjDw9SyIYj5A6zDy2639QAgXkHMFVFdQqDj4joOFHBPur0DPii?=
 =?us-ascii?q?g1m3lDdrxvbGPqDuA5nXL3jDlqvhcqh560JG1AUzytVf7YpOCr4dOPLzRlPxtN?=
 =?us-ascii?q?vAAx85KQO0wvrnB8961o8EWWKPH7WWMKXdsVKT4uIvIu+MZJIauTrnKvgl4eLu?=
 =?us-ascii?q?gmE9mVMHYaap2p4XYmiiHvt6O0WZfWbsgtAZHGcIuQoxUvbmiF6FUT5VYXayWL?=
 =?us-ascii?q?kx5jU6CIKgEIfCSZqhgL2H3CenAJJWYnpKBUyLEXftb4+EQesDaDqOIs99lTwJ?=
 =?us-ascii?q?TaKuS5Qh1RGptw/20aBnIfDW+iADsZLj1d515/DclB0o9Dx0Cdid3H+JT21ugm?=
 =?us-ascii?q?wIQDo21rhloUNh0leDzbR4g/tAGNxQ/fxJVB02NZrdz+NgDdDyVRnMftOISFag?=
 =?us-ascii?q?X9WnDis9TtM3w98SfUl9H8+ugQzE3yqvG7UVjaCEBIQo8qLA2Hj8P9tyxGzY1K?=
 =?us-ascii?q?Y/lVUmQtFANWu9hqFh8QjfAIrJk0acl6aubqkc2C/N9GGezWuBpk1YUQhwUbnb?=
 =?us-ascii?q?UnAbfEfZsdP55kbaRb+0FbsnKhdBydKFKqZSd9Lml0tGS+n5NNTeeW2xnXywCg?=
 =?us-ascii?q?iOxr6XaIrqemMd3DjSCUQekgAT+2qGOhY6Biu7v23eCzluH0r1Y0zw6el+tG+7?=
 =?us-ascii?q?TkgswgGWbk1h0r21+gIVhf2cUf8TwqgIuCA7qzVwHVa92d3WBsGEpwpgeqVcfN?=
 =?us-ascii?q?w87E1G1WLfqwxyIJigI7p+iV4ZdgR9p1nu2AlvCoVcjcgqq2snwxB2Ka2G31JO?=
 =?us-ascii?q?aTOZ0YrrNb3KN2b95hava63R2lHAy9uW/qYP6PIlq1Tspg2pF0wi82l53NlRyX?=
 =?us-ascii?q?eT+pLKDA8KW5LrTkk37wR6p63dYiQl54LUyGdgPrWuvj7D29ImHu0lyhm7ctdb?=
 =?us-ascii?q?MaOEEhLyEsIAC8ivLuwqh0ambhYeMO9O8640Otusd+Ga166zIOZggDWmgHxd4I?=
 =?us-ascii?q?B8zk2D7TB8RfPP35ofxfGXwBGHVzblgFi9qM/3nZ1Lai8IHmq4zyjpH4pRZqx0?=
 =?us-ascii?q?fYYWBmaiOcy3xtNih5HzX35U7kKsB1QD2MWxYxqdc0T93RFM1UQQuXGmmSq4wy?=
 =?us-ascii?q?Z0kj0ztaqfwSrOzv/mdBoGPG5LWWZjgU3tIYiyk9AVQkyoYxI1mxui4Ebw37Jb?=
 =?us-ascii?q?q7hnL2nPXUdIeDD7L2N4XauqtbqCYMlP5IkzsSpNU+S8YlGaSrjjrBscyC7jG2?=
 =?us-ascii?q?pexDYmdzCloJn5nhp6iH6DI3Z3tnbWZcZwxRLH7tzGWfFRxiYGRDV/iTTPBlmz?=
 =?us-ascii?q?Jd6p8c+Wl5fCtOCzTGahVpxVcSn2woKMriq75Wt2ARKhm/C/gMHoEQ8/0SXjzd?=
 =?us-ascii?q?llST3IrArgYonsz6m6MvhofkhyCF/89sp1AId+koQriZEU2HgagIiV/HUdnWfy?=
 =?us-ascii?q?N9VbxbzxbH4XSTEXxN7V5RDv2Fd/IXKR24L5SnKdz9NkZ9m7YWMZwDgx7s5UB6?=
 =?us-ascii?q?eP8LxLgzF1rUGmogLLbvhwhTMdyfoo6H4HjOAFogstziOBAr8MGUlUJzDjlxON?=
 =?us-ascii?q?79qmtqVYeH6vcaSs1Ep5hd2hELaCogRGVHf4YJgiGzJw7t5kMFLNy3Dz7oDkeN?=
 =?us-ascii?q?/NbdMcrBGUkhHAj/RLJ5I1jPYFmS1nOWflt30/1+E7lQBu3Y29vIWfMGpi5qW5?=
 =?us-ascii?q?AhpFNjHvY8MT5yrgjaJfnsaQwoCuEY9tGjQNXJv0U/2oFCgeuujgNwaLCDc8sG?=
 =?us-ascii?q?uUGaLDHQ+D70drt3DPHIquN36JP3kV18liSAOeJExCgwAUQTM6kYQiFg2xwMzh?=
 =?us-ascii?q?cUF55i0e51LiqxtMzP5oOAf7UmvFuAiobTI0QoCFLBVK9gFC+1vVMcuG4+NzGC?=
 =?us-ascii?q?FY44ShrBGXJWydfQhIFmYJWkqLB134Ormu5N/A8/WXB+akLvvOZ6mOpvJaV/uS?=
 =?us-ascii?q?2Z2v1Y5m9S6WNsqTJnliE+E72k1bUHB5BcvZmjYPSy8Wly7XbM6bvhC8+iJpoc?=
 =?us-ascii?q?Cl7fTrQxni5Y+OC7tULNVu9Aq6gaaFN+6Mmil5LSxU2Y8LxX/N0LIfxkIdizly?=
 =?us-ascii?q?dzmxFrQNrTTCTL/Lla9NEREaazl/NM9J768n2glNOMjbis7617Jij/41DUtFWk?=
 =?us-ascii?q?Llms2zecMKJGS9PkvdBEmXLLSGOSHLw8bvbKOgSL1Qif9YuAGqtTmHE0/sIDKD?=
 =?us-ascii?q?miLtVxCuN+FMkS6aMAZfuIG7bhZiF2zjQMj6ZR28Nd99lSc2zqEshnPWKW4cNi?=
 =?us-ascii?q?BxckNXob2W6CNYg/N/FHRA73plN+aEnSmZ4vLcKpYXt/trHyt1m/hb4HQ817ta?=
 =?us-ascii?q?8iVESOZplyvVq949622hx/KTwzBjXTJQpTtRwoGGp0NvPePe7JYTd2zD+Uch5G?=
 =?us-ascii?q?PYNBUOo9psD8an76xZzJ7N0r3yLDND+tfP1coaG8XQbsmANSxyYlLSBDfIAV5d?=
 =?us-ascii?q?HnaQPmbFihkFnQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAADB5v5bh0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUgUBAQELAYNZEieDeYh3iykpgT8lFIMxjwaEd4FwFxgTAYQ7A4MwIjU?=
 =?us-ascii?q?IDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYigmUDAwECIARSBgkBAR8FAiYCAgNEE?=
 =?us-ascii?q?BkFgxyCAgWnLHwzii+BC4sLeoEcgUSHKYEEgjeCVwKJBYZiNJAABwKCII8pkRU?=
 =?us-ascii?q?smByBSAOCCE0jgzyCJxeOPh4BATEBgQQBAYpmAiQBgiYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAADB5v5bh0O0hNFjGwEBAQEDAQEBBwMBAQGBUgUBAQE?=
 =?us-ascii?q?LAYNZEieDeYh3iykpgT8lFIMxjwaEd4FwFxgTAYQ7A4MwIjUIDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkvgjYigmUDAwECIARSBgkBAR8FAiYCAgNEEBkFgxyCAgWnLHw?=
 =?us-ascii?q?zii+BC4sLeoEcgUSHKYEEgjeCVwKJBYZiNJAABwKCII8pkRUsmByBSAOCCE0jg?=
 =?us-ascii?q?zyCJxeOPh4BATEBgQQBAYpmAiQBgiYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="53037049"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 11:06:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729420AbeK2GIw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 01:08:52 -0500
Received: from mga17.intel.com ([192.55.52.151]:46574 "EHLO mga17.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725772AbeK2GIv (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 01:08:51 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
  by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 11:06:11 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="278381767"
Received: from dwillia2-desk3.jf.intel.com (HELO dwillia2-desk3.amr.corp.intel.com) ([10.54.39.16])
  by orsmga005.jf.intel.com with ESMTP; 28 Nov 2018 11:06:11 -0800
Subject: [4.19-stable PATCH] dax: Avoid losing wakeup in
 dax_lock_mapping_entry
From: Dan Williams <dan.j.williams@intel.com>
To: stable@vger.kernel.org
Cc: Matthew Wilcox <willy@infradead.org>, linux-nvdimm@lists.01.org,
        linux-kernel@vger.kernel.org, linux-fsdevel@vger.kernel.org
Date: Wed, 28 Nov 2018 10:53:44 -0800
Message-ID: <154343119877.981933.9776503138356369421.stgit@dwillia2-desk3.amr.corp.intel.com>
In-Reply-To: <20181126142743.GA25618@bombadil.infradead.org>
References: <20181126142743.GA25618@bombadil.infradead.org>
User-Agent: StGit/0.18-2-gc94f
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Matthew Wilcox <willy@infradead.org>

commit 25bbe21bf427a81b8e3ccd480ea0e1d940256156 upstream.

After calling get_unlocked_entry(), you have to call
put_unlocked_entry() to avoid subsequent waiters losing wakeups.

Fixes: c2a7d2a11552 ("filesystem-dax: Introduce dax_lock_mapping_entry()")
Cc: <stable@vger.kernel.org>
Signed-off-by: Matthew Wilcox <willy@infradead.org>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
---
Passes the nvdimm unit test suite which exercises the lock path.

 fs/dax.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/fs/dax.c b/fs/dax.c
index 0fb270f0a0ef..b0cd1364c68f 100644
--- a/fs/dax.c
+++ b/fs/dax.c
@@ -217,6 +217,9 @@ static inline void *unlock_slot(struct address_space *mapping, void **slot)
 	return (void *)entry;
 }
 
+static void put_unlocked_mapping_entry(struct address_space *mapping,
+				       pgoff_t index, void *entry);
+
 /*
  * Lookup entry in radix tree, wait for it to become unlocked if it is
  * exceptional entry and return it. The caller must call
@@ -256,8 +259,10 @@ static void *__get_unlocked_mapping_entry(struct address_space *mapping,
 		revalidate = wait_fn();
 		finish_wait(wq, &ewait.wait);
 		xa_lock_irq(&mapping->i_pages);
-		if (revalidate)
+		if (revalidate) {
+			put_unlocked_mapping_entry(mapping, index, entry);
 			return ERR_PTR(-EAGAIN);
+		}
 	}
 }
 

