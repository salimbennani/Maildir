Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:18:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2A4D3580213;
	Fri, 30 Nov 2018 05:24:04 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 30 Nov 2018 05:24:04 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AzLFrXR37PnVCe+USsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSLvzxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJPDICy?=
 =?us-ascii?q?YYwNAOoPMulWoJL9p0MMoBalGQWhB/nixiNSi3PqwaE31fkqHwHc3AwnGtIDqG?=
 =?us-ascii?q?rZrNXvNKcTSuC10K7IzS3Db/hL2zny9ozIchQvoPGNUrJ7bM3cyUkzGAPFlViQ?=
 =?us-ascii?q?rZflPy+P2usQrWeW9uxtXv+shW4/swx9vCSjy8M2hoXUiI8Z1ErI+Th6zYopP9?=
 =?us-ascii?q?G1SUx2bcanHZZUrS2WKoR7T8w4T212pCo3y6cKtYClcCQXzpks2gTRZOadc4eS?=
 =?us-ascii?q?5xLuTOaRLil8hHJiYL+/mRmy/la6yuHmVcm7zkxKrixbndnIrHwN0AbT6sefRv?=
 =?us-ascii?q?t8+EeuxyqP2hjN5u1YJU04j7fXJpA/zrIqi5YesljPEjX3lUj0lKOWc18r+ums?=
 =?us-ascii?q?6+TpeLXmoZqcOpdwigH/NKQuh8O+Df07MgcQRWib//qz1Ln68U3+TrRKiOM5kr?=
 =?us-ascii?q?PCvZDEKsQUuLS5DxVW0ok98Ra/CSmp0NACkXkANlJFdwqLj5L1NFHWPPD4EfC/?=
 =?us-ascii?q?jkyokDdqxPDJIKftA5rQLnXYlLfhfLB961NTyQYpzNBf4Y5UBa8FIP7pRkDxs9?=
 =?us-ascii?q?nYBAcjMwOo2+bnFMl91oQGVGKPGKCZMb/SvkWP5u41I+mMeZUauDDyK/U+4/7u?=
 =?us-ascii?q?jHk5mUISfKWz3JsXbmy4EepiI0mDfXXshdIBG38QvgUiVOzqlEGCUTlLanawWK?=
 =?us-ascii?q?Iz+Cs3CIGhDYfFQICth6eM3CO6Hp1Qe2BHBUqAEXbud4WYRfgMbDieLdNmkjwB?=
 =?us-ascii?q?TbKhUZMu1QmytA/mzLpqNvDb+jYYtZLk19h5/ffTmgsw9TFvC8Sd0meNT3x7n2?=
 =?us-ascii?q?8SRj822rx/rlJ5yluZzad4hPlYH8RJ5/xVSgc6KYLcz+tiBtDxQA3BeM2FSFKn?=
 =?us-ascii?q?Qtq8BzExQck8w9sPY0Z7BtWjgQrP3yusA78JibOLAIY4/b7b33j0P8x90WrJ1L?=
 =?us-ascii?q?E9j1k6RctCLXCpibRh9wfNHYLJk1+Wl6CxdasC2i7B82ODzWmLvEFcSwNwVaTF?=
 =?us-ascii?q?XXYCZkrZt9j550XCT6OwBrQjKAdO1cmCKq5SYN3zkVpGXOvjOMjZY2+phmi/Hw?=
 =?us-ascii?q?iIya2WYIrqYWod2j7dB1YCkw0I+XaGNA4+Bjquom7EDTxuE07vbF3o8eVktHy7?=
 =?us-ascii?q?SUo0xRmQb0J9z7q15gIVhfuERvMP37IEvSAhqyl0HFe9xd7WF8CMpw17fKVYYN?=
 =?us-ascii?q?M95lhH2Hndtwx8OJygMq9jikQfcwRxo0PhyRF3Bp9cnsgtqXMg1BByJr6A0FNd?=
 =?us-ascii?q?azOY2oj9NafTKmbs8xGgda7X1kvF39aL56gA8vI4q1bkvAG3DUci93Rn099I03?=
 =?us-ascii?q?qT/JnKDQwSUY7vXUYz7RR1u7baYiwl7YPOyXJsKbW0siPF298xBOol1wyscMtF?=
 =?us-ascii?q?PKKFFA/9CcsaB8e1JewumlipaA8EPe9I+K41OcOma+WJ2KqxMOl8mzKmiHxN4J?=
 =?us-ascii?q?ph3UKU6yp8VunI0o4fw/GZwgSITS38g0qmssztn4BLeysSHmumxSf4HoFRYrB9?=
 =?us-ascii?q?cpgRCWepJc263dF+h5/rW35F+1+vHVIG2Mm1eRWMa1zxxxFf1UMSoXa/gyu30y?=
 =?us-ascii?q?R0ky01rqqYxCHPw+XieAAHO2JRX2likFHsLJOwj9AbWkiocgcomAGk5Ub826hU?=
 =?us-ascii?q?uqB/I3PPTkdPeij8N3tiXbeotrqef85P74slsSdNX+SmYlCaSbn9rwEB0yz5HG?=
 =?us-ascii?q?texzE7dze0tZX/hBF6jGOdLHBurHvWY81wxBHf5MDCSv5VxDYJWC54iTzPDFim?=
 =?us-ascii?q?I9ap5cmUl4vEsu2mV2OuTJpTfTPpzYOBsiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox+kZE/hJAK1Xgam5Wa53wHkWjo?=
 =?us-ascii?q?PNVf2KL+amcNRDERz97U5gjlxFNsLnaTy43lUXWdx9NrZ8OmbWMOxiI988dKBb?=
 =?us-ascii?q?+R7LxFnit6uEC0rAzPbvhmgjcS1+Eu52UEjOETtwog1SGdArEUHUlFMi3gjRWI?=
 =?us-ascii?q?79airKpJYGaja6S/1E17ndq5FrGNvhlcWGrlepclBSJw8sJ/MFfW3Hzy8I7kfs?=
 =?us-ascii?q?TQbckIth2ViBrAi+lVKJQslvsFnyZnOGT9vWE7xO4/lxBhwZa6vI2fIWV34K25?=
 =?us-ascii?q?GgJYNiHyZ84L4T7il6FensKL34y1GpVhBy4GXJ/pTfKuDTITuu7rNweIED0gtH?=
 =?us-ascii?q?ibHaDTEhOY6Edjt3jPCYykN2mLJHkFytVvXBudK1ZagA8KRzU2hII5GhqpxMz8?=
 =?us-ascii?q?c0d5+zYR6UTjqhZXzuJoNh//UnrQpQuyazc0ToSfIwRS7g1Y+0jVNsme5PppHy?=
 =?us-ascii?q?5E5p2hsBCNKmuDagVICmEJR1WEB035Mbmo/9XA6O+YBuyxL/bVZbWOqOpeV+qH?=
 =?us-ascii?q?xJ6104tm+SqMOduLPnV4E/I73U9DV2hjG8vFgzUPVzAXlyXVYs6buhi8+y53rs?=
 =?us-ascii?q?O+8PjxWwLv/4yPC7RMPtV15hC2mryON+qRhCZ/NDZZ2YkAxX7OyLgDwlESjzti?=
 =?us-ascii?q?eCWqEbQFrSTNVr7fmrdLDx4HbCN+LNFH778n0QlXJ8Haisn51rp5jvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHk//PzSD?=
 =?us-ascii?q?kiPlWAy1Pe5QjCGUIhpetZq5chZsD2jjUd3nZge6MN9xkT0537k0imnWOm4bND?=
 =?us-ascii?q?h2a1lNoaGI7SNEnvV/HHRM73p/IumCniaZ7u/YJY4XsPtrGCt0ke1a7W8+y7tU?=
 =?us-ascii?q?6iFEWfN0lDHTrt5ov1GpjO2PxiB7XxpJrzYYzL6M6ERlPKDE3p1BQmrfuhYM63?=
 =?us-ascii?q?iAThoNut1pA8HuvKYWzcLAx4zpLzIX2NLO/NAAANDUYOKKNH4+MBWhTD7fDCMB?=
 =?us-ascii?q?ViLtOWyJ1B8Vq+2b6nDA9stykZPrgpdbD+YDDFE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACbOQFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBFfiylQAQEGgUmJC44pgXMsEwGHdiI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmIDAwECJAsBDQEBNwEFCQEBUANUGQWDHIF1DQQBp?=
 =?us-ascii?q?XKBbDOCdgEBBYcoCIdthC4XeIEHgRGNbokKGgYEgW+FWo88CYETkBkjkR8smXS?=
 =?us-ascii?q?CDTMaCBwUgyeCGwwXiF6FQD8ygQIDAQEhE41nAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACbOQFch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBFfiylQAQEGgUmJC44pgXMsEwGHdiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmIDAwECJAsBDQEBNwEFCQEBUANUGQWDHIF1DQQBpXKBbDOCdgEBBYc?=
 =?us-ascii?q?oCIdthC4XeIEHgRGNbokKGgYEgW+FWo88CYETkBkjkR8smXSCDTMaCBwUgyeCG?=
 =?us-ascii?q?wwXiF6FQD8ygQIDAQEhE41nAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42237887"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 05:24:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727419AbeLAAdQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 19:33:16 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:49128 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726270AbeLAAdP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 19:33:15 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
        MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
        :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
        :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=UCBzcSNstlTImrqRsKjur3SJmugPcDMxlHw2DAWEj2s=; b=skGTpaNwAzxvmDyL1lzeLu1xkH
        RnXKPRmT0YVe+Fc7EsB1QqBMQ3s3rzzjbhWkWwWq5ybpIcLD04ujW5maQuJofC7v/ZOfghcGBKUwS
        VRy+Gl8zBLZLxTneS7JT1d5wDd4vwh89ULIh7BU6bzAbpn2WELZM6XW4imbk3l7o6R76/6/q2ISFI
        Pvh9ZtQARCMV/JN0WXBfcTjX5Kbk4tT4yctN4ocprUaTn9bBr8nhb1LLhTJNL8Soj/DIrR97l642C
        JEzfdZzxr7bW/xtmX5qFnoSlISnpZNbmql0a6e/OKd2MrHFfn02k+bFjLbXyo/dcC/Ba2rsxxzvNl
        ijCH9MPQ==;
Received: from 089144206221.atnat0015.highway.bob.at ([89.144.206.221] helo=localhost)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gSiln-0004sU-Dx; Fri, 30 Nov 2018 13:23:48 +0000
From: Christoph Hellwig <hch@lst.de>
To: iommu@lists.linux-foundation.org
Cc: Linus Torvalds <torvalds@linux-foundation.org>,
        Jon Mason <jdmason@kudzu.us>, Joerg Roedel <joro@8bytes.org>,
        David Woodhouse <dwmw2@infradead.org>,
        Marek Szyprowski <m.szyprowski@samsung.com>,
        Robin Murphy <robin.murphy@arm.com>, x86@kernel.org,
        linux-alpha@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
        xen-devel@lists.xenproject.org, linux-arch@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH 16/23] x86/calgary: remove the mapping_error dma_map_ops method
Date: Fri, 30 Nov 2018 14:22:24 +0100
Message-Id: <20181130132231.16512-17-hch@lst.de>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181130132231.16512-1-hch@lst.de>
References: <20181130132231.16512-1-hch@lst.de>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Return DMA_MAPPING_ERROR instead of the magic bad_dma_addr on a dma
mapping failure and let the core dma-mapping code handle the rest.

Remove the magic EMERGENCY_PAGES that the bad_dma_addr gets redirected to.

Signed-off-by: Christoph Hellwig <hch@lst.de>
---
 arch/x86/kernel/pci-calgary_64.c | 29 +++++++----------------------
 1 file changed, 7 insertions(+), 22 deletions(-)

diff --git a/arch/x86/kernel/pci-calgary_64.c b/arch/x86/kernel/pci-calgary_64.c
index bbfc8b1e9104..e76ec1b8ed1f 100644
--- a/arch/x86/kernel/pci-calgary_64.c
+++ b/arch/x86/kernel/pci-calgary_64.c
@@ -51,8 +51,6 @@
 #include <asm/x86_init.h>
 #include <asm/iommu_table.h>
 
-#define CALGARY_MAPPING_ERROR	0
-
 #ifdef CONFIG_CALGARY_IOMMU_ENABLED_BY_DEFAULT
 int use_calgary __read_mostly = 1;
 #else
@@ -157,8 +155,6 @@ static const unsigned long phb_debug_offsets[] = {
 
 #define PHB_DEBUG_STUFF_OFFSET	0x0020
 
-#define EMERGENCY_PAGES 32 /* = 128KB */
-
 unsigned int specified_table_size = TCE_TABLE_SIZE_UNSPECIFIED;
 static int translate_empty_slots __read_mostly = 0;
 static int calgary_detected __read_mostly = 0;
@@ -255,7 +251,7 @@ static unsigned long iommu_range_alloc(struct device *dev,
 			if (panic_on_overflow)
 				panic("Calgary: fix the allocator.\n");
 			else
-				return CALGARY_MAPPING_ERROR;
+				return DMA_MAPPING_ERROR;
 		}
 	}
 
@@ -274,11 +270,10 @@ static dma_addr_t iommu_alloc(struct device *dev, struct iommu_table *tbl,
 	dma_addr_t ret;
 
 	entry = iommu_range_alloc(dev, tbl, npages);
-
-	if (unlikely(entry == CALGARY_MAPPING_ERROR)) {
+	if (unlikely(entry == DMA_MAPPING_ERROR)) {
 		pr_warn("failed to allocate %u pages in iommu %p\n",
 			npages, tbl);
-		return CALGARY_MAPPING_ERROR;
+		return DMA_MAPPING_ERROR;
 	}
 
 	/* set the return dma address */
@@ -298,8 +293,7 @@ static void iommu_free(struct iommu_table *tbl, dma_addr_t dma_addr,
 	unsigned long flags;
 
 	/* were we called with bad_dma_address? */
-	badend = CALGARY_MAPPING_ERROR + (EMERGENCY_PAGES * PAGE_SIZE);
-	if (unlikely(dma_addr < badend)) {
+	if (unlikely(dma_addr == DMA_MAPPING_ERROR)) {
 		WARN(1, KERN_ERR "Calgary: driver tried unmapping bad DMA "
 		       "address 0x%Lx\n", dma_addr);
 		return;
@@ -383,7 +377,7 @@ static int calgary_map_sg(struct device *dev, struct scatterlist *sg,
 		npages = iommu_num_pages(vaddr, s->length, PAGE_SIZE);
 
 		entry = iommu_range_alloc(dev, tbl, npages);
-		if (entry == CALGARY_MAPPING_ERROR) {
+		if (entry == DMA_MAPPING_ERROR) {
 			/* makes sure unmap knows to stop */
 			s->dma_length = 0;
 			goto error;
@@ -401,7 +395,7 @@ static int calgary_map_sg(struct device *dev, struct scatterlist *sg,
 error:
 	calgary_unmap_sg(dev, sg, nelems, dir, 0);
 	for_each_sg(sg, s, nelems, i) {
-		sg->dma_address = CALGARY_MAPPING_ERROR;
+		sg->dma_address = DMA_MAPPING_ERROR;
 		sg->dma_length = 0;
 	}
 	return 0;
@@ -454,7 +448,7 @@ static void* calgary_alloc_coherent(struct device *dev, size_t size,
 
 	/* set up tces to cover the allocated range */
 	mapping = iommu_alloc(dev, tbl, ret, npages, DMA_BIDIRECTIONAL);
-	if (mapping == CALGARY_MAPPING_ERROR)
+	if (mapping == DMA_MAPPING_ERROR)
 		goto free;
 	*dma_handle = mapping;
 	return ret;
@@ -479,11 +473,6 @@ static void calgary_free_coherent(struct device *dev, size_t size,
 	free_pages((unsigned long)vaddr, get_order(size));
 }
 
-static int calgary_mapping_error(struct device *dev, dma_addr_t dma_addr)
-{
-	return dma_addr == CALGARY_MAPPING_ERROR;
-}
-
 static const struct dma_map_ops calgary_dma_ops = {
 	.alloc = calgary_alloc_coherent,
 	.free = calgary_free_coherent,
@@ -491,7 +480,6 @@ static const struct dma_map_ops calgary_dma_ops = {
 	.unmap_sg = calgary_unmap_sg,
 	.map_page = calgary_map_page,
 	.unmap_page = calgary_unmap_page,
-	.mapping_error = calgary_mapping_error,
 	.dma_supported = dma_direct_supported,
 };
 
@@ -739,9 +727,6 @@ static void __init calgary_reserve_regions(struct pci_dev *dev)
 	u64 start;
 	struct iommu_table *tbl = pci_iommu(dev->bus);
 
-	/* reserve EMERGENCY_PAGES from bad_dma_address and up */
-	iommu_range_reserve(tbl, CALGARY_MAPPING_ERROR, EMERGENCY_PAGES);
-
 	/* avoid the BIOS/VGA first 640KB-1MB region */
 	/* for CalIOC2 - avoid the entire first MB */
 	if (is_calgary(dev->device)) {
-- 
2.19.1

