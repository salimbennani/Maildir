Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 14:13:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9D870580460;
	Thu, 29 Nov 2018 19:21:18 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 29 Nov 2018 19:21:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9AzVChT5MgXMdNoBw9jad+GWctpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64bRWAt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBD/YPM+hbronyu1QAohSlBQm0Bu7i0SNIhmbs0KEmz+gtDRzK0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8OX+G11qbIyyjIYfVI1jjj9YPFdQwvoPGWUrJ2bMTd008hGB3bgViL?=
 =?us-ascii?q?rIzqJTyU1uUIs2ia6epgSfygi2E9qw5rvjig2NojhpPViYISz1DJ7CN0y5s2K9?=
 =?us-ascii?q?2gUEN3f8KoHZ9Kuy2HOYZ6XNkuT3xrtSom0LELuJy2cDAXxJkl2RLTcfyKfomS?=
 =?us-ascii?q?7h/tV+udOyp0iG55dL6niRa970utxvH5W8SxzlpFsyRFncLJu38Q1hHf9MaKR/?=
 =?us-ascii?q?5g8UqjxTmAzAXe5f1fLk8qiKbWLYMqzKQqmZoJq0vDGzf7mEXog6+ScUUp4vao?=
 =?us-ascii?q?6+v5bbX8vJOcNJF7ihv4MqswnsyzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7lr?=
 =?us-ascii?q?PVvI3UKMgFvKK1HgxY3po55xu+DTqqyNEYkmMGLFJBdhKHlY/pO1TWLfD8DPe/?=
 =?us-ascii?q?hUmskThyy/DFILLhGJPNIWbHkLv4erZ85UhcxxQpzd1E+ZJUBa8OIOjpVk/yqt?=
 =?us-ascii?q?PYFBk5PBKww+r9D9V9zIweVXqVAqCFKKPSrUOI5uU3LumIZY8VuyjyJ+Iq5v7z?=
 =?us-ascii?q?lnI5nV4dfa+03ZoYcny4H/JmI1mHbnromNsODWAKvg8mRuzwlFKCSSJTZ2q1X6?=
 =?us-ascii?q?8k5jE0EoOmDZvZSYCqmrCB3Dq7EYdQZmBJEV2MFXbod4OZW/YDci6SI8lhkiAa?=
 =?us-ascii?q?WrilUYMuyRautAriwbp9MuXU4jEYtY7k1NVt5e3Tkg89+SZ3D8Sa1WGNSWZ0k3?=
 =?us-ascii?q?gMRz832qB/vEN8xk2C0ah+n/xXC9hT6+lVXQc9MJ7W1/Z6BMzqWgLdYteJT06r?=
 =?us-ascii?q?Tc+9ATExSdIxwMUCY1xnFNWglR3D2yuqA7kIl72EHpA086Tc32TvKMZ50XrJyK?=
 =?us-ascii?q?4hj1w+SMtVKWKmnrJ/9xTUB4PRkEWWjaCqeb4Y3C7M7miDy2WOsVpcUA5xV6XF?=
 =?us-ascii?q?QH8ealHXrdT/+kPNUbuuBa47PQtGzM6IMrFKZcHxjVVaWPfjP8zTbH+rlGeuGx?=
 =?us-ascii?q?mE3LOMY5Dse2UGwirdDk8IkwQQ/XaDMQgzHSOho2PYDDxzGlPjeULs8e9iqHyl?=
 =?us-ascii?q?Sk841R2Fb0pk17Ct4B4ameScS+8P3rIDoCouti97HEij0N7MC9qPvQxhfL5Cbt?=
 =?us-ascii?q?M7+1pH0WPZtwpgPp2vNaxih1gecxhpsEPqzRl4FoJAkc0ypnMw0AVyMb6Y0E9G?=
 =?us-ascii?q?dz6AwZDwO7jXKm7u/BCva6/awE3e3MyR+qcV7PQ4qlPjvA6yG0om8nVn1cRV0n?=
 =?us-ascii?q?SG6pXLCgoSTYz+UkIt+xdmoLHaZzE355nI2n10Lam0rjjC1sozC+sh1BmhcMlQ?=
 =?us-ascii?q?MaOeGADpDs0VGtKhKOopm1iucBIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr9jEqhvtrrloxeZDASHnCwyS7rBINKYq1y?=
 =?us-ascii?q?fIALCXqhIsGtx9V+gYLtVGBc9FK5G1wG38qpcwKIb1PhxQ1QyVgXoXu/lCuizj?=
 =?us-ascii?q?x7jysmrrCC0yzJ2ejicgQIOnRKRGV7kVjjO4y0gM0EU0iyaAgpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxsb0yL5E2?=
 =?us-ascii?q?pe3jw7bCyqupPikhx+iWKdKmtzrXXDdcFxwxff+MLTRfpL0jUaQyl4jCHdBkKg?=
 =?us-ascii?q?MNmx4dWUi5DDv/i8V227TJ1TcirrzYSauCug/2JqAh6/n/G1mtL5Fwg3yiv719?=
 =?us-ascii?q?hsVSXVoxfweIjr16KmMe15eklkHkPz681/GotmiIs/mIkQ2WQGhpWS5XcGkX38?=
 =?us-ascii?q?MdJB1aL8bXoNQyUGw9rU4AjjxU1iIWiFx4P/VnWB3MRhY8O2bX8R2iI498pKEr?=
 =?us-ascii?q?ub7KRYnStppVq1tQHRbuJ8njsHyfsu9WQVg+cGuAc2yiWdA7YSHVRXPCD2lhSI?=
 =?us-ascii?q?6cy+o7tTZGq1bbew009+l8i7DL6eugFcRGr5epA6EC9178V/M0jD3Gf96476Y9?=
 =?us-ascii?q?nQccwctgePnBjelehVJ4k8lv4LhSphJGL8smcpy+89jRxyw566uJKLJHlq/KK8?=
 =?us-ascii?q?GhRYLCH6Z9sP+jHxiqZThtqW34eqHpl7GzQERp3oTe+zEDIJtPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM2DRqlxMvl?=
 =?us-ascii?q?cEdk/DwR4kP4pwBIyuJpMRn/T2jeqB2pajcyVJiQMh5W4hte6EfSNMyU9vhzED?=
 =?us-ascii?q?1A/p29sAyNLXSWZwZSAmEMREOEHErvPqW06dnD7uiYBfe+L/3UbrWVsuFeU/aI?=
 =?us-ascii?q?xZSy0opp5TqMN8OPPmV8AP0/wEZMQXd5G8HBkTUVVyMXjz7Nb9KcpBqk+ix3qd?=
 =?us-ascii?q?2/8O32WA3144uDEaBSMdJp+xC5mqqDM++QhCBkKTdXzJ8MxHnIyKQB014WkS1h?=
 =?us-ascii?q?az6tEbEYvy7XUK3QgrNXDwIcay5rNMtH8aM83gpOOc7akN/11aR4jvk6C1hbT1?=
 =?us-ascii?q?zhh9qpaNcOI2G8MlPHGUmKOK6HJT3N38H4f6e8RadMg+VTsh26oSybHFP7PjSf?=
 =?us-ascii?q?iznpUAiiPvtRjC6AJhxRpoG8fgxpCWjiV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB8+nYK5MWveF3DShui+1a4Go1y71O?=
 =?us-ascii?q?4SFARfx1njbSr9F0r1GnlOmP1iRoUB5UpjlXg4KLuF1oOb/F+ZlYRXbE4BUN4H?=
 =?us-ascii?q?2QChsQodtlD9zvu6ZIxdnOlKL8MjFC893P8MsYBsjULt+HMXU7PRroHj7UEBUK?=
 =?us-ascii?q?TTqxOW7DgExdlaLaynrAipkzr9DDmYACVbhcWBRhEvwbEEh6G9sOCJhyVzIg17?=
 =?us-ascii?q?WciZhMrV+3thqZbt9doZaPAviIBvLpKTuxjrReYRYMh7TiItJXfq/ywUt5blBk?=
 =?us-ascii?q?1KfbAEfUVJgZuiB7Yx8cuEhX/Wg4RX9lnwrZYwCk+38SXd+rlx9+3hd/fu0s3C?=
 =?us-ascii?q?zx+FpxLV3P8m94qlg4n53BjD3ZJATgJaGLG6VbBgLxvlgwN5L9Xwt6dwSukEAi?=
 =?us-ascii?q?PzDBEfYZoKFpc3wjpxXBv5dLFOQUGaJefRkcwfyNT/4oy1NZqziig0hd6r2BQb?=
 =?us-ascii?q?h/kgosdoSt51dHwQNma8IybfjTOaxIyF9Kh+SLuTWp0+ctx0kRN24X/WWfYycT?=
 =?us-ascii?q?/kcPM+9ibwCl+Pdr70SmliZFdyBYXf4nv/Rl3kg9IeOFzj/llblZJRb1f6aWK7?=
 =?us-ascii?q?iQ/mTNi8OMalo0zUpNj1NC/7V9zYEkaUXeHxQmyKCYUhgEK8fGAQhRdMMX7GLU?=
 =?us-ascii?q?fyuFraPK250je833EuHuUP/Lt6sOhE+gNBgmEp5K7ckbGJSolkbCIo2veLoEzw?=
 =?us-ascii?q?g9oQfmPlOICNxXdx+R1jQKuceyyNlwx4YLdR8HBmAoCzS+4P7zqwJi1MCSVdEN?=
 =?us-ascii?q?JFMXU6MBP2I3Xcy8hyNWpX1cATXx2eUcnlvRpwTgrzjdWWGvJ+FoY+2ZMFY1UI?=
 =?us-ascii?q?m7?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DnAgDuqwBch0O0hNFeBoIXgTFQgVwEC?=
 =?us-ascii?q?xUSCoc2A5AMSoIhlzAUgRADTBMBGBMBgUuGKSI2Bw0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiQBgmkCJBkBATcBBQkCAQEWOAMvJwQBDQUFgxyBagMVAQICnUwCi?=
 =?us-ascii?q?geBbDOCdgEBBYEFAYQFGIIJCIwWghaJDAEJhWmJCRqGSIEFjzUHAoIhjwYjkRw?=
 =?us-ascii?q?siEyPLwIEAgQFAg0BAQWBTAGCBjMaI4M8gicXg0qKHAE2coEFAQEhi3kBgR4BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0DnAgDuqwBch0O0hNFeBoIXgTFQgVwECxUSCoc2A5AMSoI?=
 =?us-ascii?q?hlzAUgRADTBMBGBMBgUuGKSI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBg?=
 =?us-ascii?q?mkCJBkBATcBBQkCAQEWOAMvJwQBDQUFgxyBagMVAQICnUwCigeBbDOCdgEBBYE?=
 =?us-ascii?q?FAYQFGIIJCIwWghaJDAEJhWmJCRqGSIEFjzUHAoIhjwYjkRwsiEyPLwIEAgQFA?=
 =?us-ascii?q?g0BAQWBTAGCBjMaI4M8gicXg0qKHAE2coEFAQEhi3kBgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="55496961"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 19:21:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726564AbeK3O3A (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 09:29:00 -0500
Received: from mail-eopbgr750098.outbound.protection.outlook.com ([40.107.75.98]:23584
        "EHLO NAM02-BL2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726161AbeK3O3A (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 09:29:00 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=maximintegrated.onmicrosoft.com; s=selector1-maximintegrated-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=gokYEVVceRK0FobmiA1mudF2+sNeggSQ+uPksyDFbDU=;
 b=EO3PFs3qW+5Z1a9cDzJ60EcITzkmF/rwYzvFfbfbDYqNzaSHkE9BVeUok9d4rwoWwVW1BK44I7y/uSoNaH8KTToImWRnxWcVKgz3KKgWGIu0mXbUZ/cPGZqPb/3fWpjOjg8MhF4pfLnF9zmFWLQFyQzOAVYB4C0QT6YiTW5eE1A=
Received: from DM6PR11MB3131.namprd11.prod.outlook.com (20.177.219.96) by
 DM6PR11MB2906.namprd11.prod.outlook.com (20.177.216.147) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1361.16; Fri, 30 Nov 2018 03:21:09 +0000
Received: from DM6PR11MB3131.namprd11.prod.outlook.com
 ([fe80::2dfb:d623:d7cb:cbe1]) by DM6PR11MB3131.namprd11.prod.outlook.com
 ([fe80::2dfb:d623:d7cb:cbe1%3]) with mapi id 15.20.1361.018; Fri, 30 Nov 2018
 03:21:09 +0000
From: Ryan Lee <RyanS.Lee@maximintegrated.com>
To: Liam Girdwood <lgirdwood@gmail.com>,
        Mark Brown <broonie@kernel.org>,
        Jaroslav Kysela <perex@perex.cz>,
        Takashi Iwai <tiwai@suse.com>,
        Ryan Lee <RyanS.Lee@maximintegrated.com>,
        Grant Grundler <grundler@chromium.org>,
        Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>,
        Benson Leung <bleung@chromium.org>,
        "alsa-devel@alsa-project.org" <alsa-devel@alsa-project.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
CC: "ryan.lee.maxim@gmail.com" <ryan.lee.maxim@gmail.com>
Subject: [V3] ASoC: max98373: Added max98373_reset for stable amp reset
Thread-Topic: [V3] ASoC: max98373: Added max98373_reset for stable amp reset
Thread-Index: AQHUiFu81b05P9Zx+kS2bptH0DgleA==
Date: Fri, 30 Nov 2018 03:21:09 +0000
Message-ID: <20181130031831.7813-1-ryans.lee@maximintegrated.com>
Accept-Language: en-US, ko-KR
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [172.56.38.100]
x-clientproxiedby: YQXPR0101CA0001.CANPRD01.PROD.OUTLOOK.COM
 (2603:10b6:c00:15::14) To DM6PR11MB3131.namprd11.prod.outlook.com
 (2603:10b6:5:6d::32)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=RyanS.Lee@maximintegrated.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DM6PR11MB2906;6:UyKwhCLrJqvrzxE3cA608+17WcqZSc1hv/j59gMCHP3rcu6EiKQLJrSrIA9oBI/BLhdI36axChLQ/eRMh0OrvJjIxhnfJwBRvMH1UHA784CUPuTfF2PO/tptRS+cD7FOltiyb17gQaxoBEvKVysgaZuyUg7eipu7Irnss8BmxOKRXAM6uS45ZYhwROEnpR4mqHwyVatJ4jJvHbLF9OZo/uhJVjWi4KzOwPJqmU9c0u4SbfpvRrkakHdn+wJo0/zI8QFuq90g1d1MnQQ/WchVsT2gYrM76XkDTVhAcTnxpUz5s1o+9/GUgZRpMiJXvCy/psSY5ySRS31a4PZ++RE1aQ8cKe5OwRt+5U2jT9xN6iiLUKcEdbe1iJY2HxZQLlc0ZlS0qZgrCAqLraLo9yzuaJnazaT0xz2TrJF9GHHqI2nEAz7RK3nDvE/EamAAjoOrV3f4nE0x6ydg84PK6BuC5w==;5:kcnqbxRnmLPNIXe2qoA0GKBcpBIXUVSoR9By12DwyvNpxf5CaCRECCZXQOAo33rOs9ivHE+SGr1eWJi5gK23g5oXsZhKZuw4FfQ00ESZlqRFDWPsnwAGvvxF+UHkDcVIAUk6DA1kr5sb7soghN6CVy8QCDNGuZJdZ/HInBgYgRs=;7:Hrvx6tyDfXrUfKZkbpWXK8fpA56SzcOHNjORv7wlTjOOISeYKqCnUOdbOj4HaUD9OurDlpXkyo5UcWdBf/MH09bmBPcKT5okCYSzFv7+8bV3BR69QRwnQCR9xXUZ8G9a+Ld0iKwm8efEl7+7iy3gQQ==
x-ms-office365-filtering-correlation-id: 576a52f0-b643-4d83-58db-08d65672defc
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:DM6PR11MB2906;
x-ms-traffictypediagnostic: DM6PR11MB2906:
x-microsoft-antispam-prvs: <DM6PR11MB2906529CB67389FED24969E6E7D30@DM6PR11MB2906.namprd11.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(10201501046)(3002001)(3231453)(999002)(944501410)(52105112)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(20161123564045)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(20161123560045)(201708071742011)(7699051)(76991095);SRVR:DM6PR11MB2906;BCL:0;PCL:0;RULEID:;SRVR:DM6PR11MB2906;
x-forefront-prvs: 087223B4DA
x-forefront-antispam-report: SFV:NSPM;SFS:(10019020)(346002)(366004)(136003)(39860400002)(376002)(396003)(199004)(189003)(81166006)(105586002)(81156014)(2906002)(14444005)(7736002)(386003)(305945005)(6506007)(6436002)(5660300001)(7416002)(86362001)(52116002)(99286004)(2201001)(71200400001)(6512007)(39060400002)(53936002)(476003)(4326008)(97736004)(256004)(2616005)(36756003)(2501003)(486006)(110136005)(8936002)(478600001)(316002)(14454004)(68736007)(1076002)(66066001)(72206003)(6116002)(8676002)(102836004)(106356001)(26005)(186003)(25786009)(71190400001)(6486002)(3846002)(921003)(1121003);DIR:OUT;SFP:1102;SCL:1;SRVR:DM6PR11MB2906;H:DM6PR11MB3131.namprd11.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: Z9rZ7UQkrfzqDMyeXoCGS+EbrCeQB/2dkAawu83xz7rWQJ5M0FXnOfMlFGsXqe9K2W91Jehe101zhSeusH83FMUzv04MEBlrP2OGTv6/9ZcVECakShoemtlaSB1xwCb/5IjU/aULXVULsGcnnJzAqUAgrQHRIxkAqKLI2Tb1hFKWlgMSFK0tE9TqXZaUxS0Yrz3f2IToLkBGmoXlZTxymj1VqY1hqgBVGFdL4g05VQZJ6a61zqhlYCEtHeu4St0eIgR3AYPN5nC24hZnYoMrbXZcIpxAp0jCJJwux3uvNCAu9+TjDZnQim4tbiBO2fhLxswlBCgZtF7qx/Ws9HNpdLapS+7d/ClVfpaCXUeyM6M=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: maximintegrated.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 576a52f0-b643-4d83-58db-08d65672defc
X-MS-Exchange-CrossTenant-originalarrivaltime: 30 Nov 2018 03:21:09.1219
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: fbd909df-ea69-4788-a554-f24b7854ad03
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR11MB2906
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This patch added max98373_reset function to avoid amp software reset failur=
e and code duplication.
Reset verification step has been added for stable amp reset and it repeats =
verification maximum 3 times when it is failed.
Chip revision ID is available when the amp is in the idle state which means=
 software reset is completed well.
Additional 10ms delay was added for every retrial and maximum 30ms delay ca=
n be applied.

Signed-off-by: Ryan Lee <ryans.lee@maximintegrated.com>
---

Changes since v2:
- Added commit message.
Changes since v1:
- Removed unusual repeat for amp software reset and verification.
- Amp software reset will be performed once and it repeats verification max=
imum 3 times if it is failed.
- Wait 10ms before every verification trial. Maximum 30ms delay will be app=
lied to wait AMP idle state.
Changes:
- Created max98373_reset function to minimize code duplication.
- Changed regmap_write to regmap_update_bits. Other bits except LSB need to=
 be masked.
- Added reset verification step to make sure software reset is completed we=
ll. Software reset is done in 10ms in normal case.
- Revision ID is available when the amp is in the idle state which means so=
ftware reset is completed.
- Software reset will be performed maximum 3 times to avoid amp reset failu=
re. Generally it is done in the first trial.
- sleep time after software reset is increased + 30ms for every retrial. Ma=
ximum possible msleep time is 100 ms (initial 10 ms + 30 ms * 3 times).

 sound/soc/codecs/max98373.c | 35 +++++++++++++++++++++++++++++------
 1 file changed, 29 insertions(+), 6 deletions(-)

diff --git a/sound/soc/codecs/max98373.c b/sound/soc/codecs/max98373.c
index a09d013..9c8616a 100644
--- a/sound/soc/codecs/max98373.c
+++ b/sound/soc/codecs/max98373.c
@@ -724,14 +724,39 @@ static struct snd_soc_dai_driver max98373_dai[] =3D {
 	}
 };
=20
+static void max98373_reset(struct max98373_priv *max98373, struct device *=
dev)
+{
+	int ret, reg, count;
+
+	/* Software Reset */
+	ret =3D regmap_update_bits(max98373->regmap,
+		MAX98373_R2000_SW_RESET,
+		MAX98373_SOFT_RESET,
+		MAX98373_SOFT_RESET);
+	if (ret)
+		dev_err(dev, "Reset command failed. (ret:%d)\n", ret);
+
+	count =3D 0;
+	while (count < 3) {
+		usleep_range(10000, 11000);
+		/* Software Reset Verification */
+		ret =3D regmap_read(max98373->regmap,
+			MAX98373_R21FF_REV_ID, &reg);
+		if (!ret) {
+			dev_info(dev, "Reset completed (retry:%d)\n", count);
+			return;
+		}
+		count++;
+	}
+	dev_err(dev, "Reset failed. (ret:%d)\n", ret);
+}
+
 static int max98373_probe(struct snd_soc_component *component)
 {
 	struct max98373_priv *max98373 =3D snd_soc_component_get_drvdata(componen=
t);
=20
 	/* Software Reset */
-	regmap_write(max98373->regmap,
-		MAX98373_R2000_SW_RESET, MAX98373_SOFT_RESET);
-	usleep_range(10000, 11000);
+	max98373_reset(max98373, component->dev);
=20
 	/* IV default slot configuration */
 	regmap_write(max98373->regmap,
@@ -818,9 +843,7 @@ static int max98373_resume(struct device *dev)
 {
 	struct max98373_priv *max98373 =3D dev_get_drvdata(dev);
=20
-	regmap_write(max98373->regmap,
-		MAX98373_R2000_SW_RESET, MAX98373_SOFT_RESET);
-	usleep_range(10000, 11000);
+	max98373_reset(max98373, dev);
 	regcache_cache_only(max98373->regmap, false);
 	regcache_sync(max98373->regmap);
 	return 0;
--=20
2.7.4

