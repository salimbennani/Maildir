Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:40:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D5E2F5803ED;
	Wed, 28 Nov 2018 11:38:24 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga003-1.jf.intel.com with ESMTP; 28 Nov 2018 11:38:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AYH/YkBy9DT9/q7TXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4fKvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmhi?=
 =?us-ascii?q?UIOT02/2HZjcJ+kaJVrgy9qBxk247ZYpqYNOZicq7HYd8XX3ZNU8RXWidcAo28?=
 =?us-ascii?q?dYwPD+8ZMOtFtYnyuV0OogakCgmqGejhyD5IhnD53a071eQhChzN0Qs7ENIUrn?=
 =?us-ascii?q?vUqsj6O70UUeC1zanIwjrDb/JQ2Tfm84XIfRchofaDXbJ0b8Xd01UgFwTAjliJ?=
 =?us-ascii?q?r4HuIjCb1vwVvmSF8+ZtUfijh3Mppg1vuDSj28QhhpXTio8UyF3I7Tt1zJoxKN?=
 =?us-ascii?q?GiS0N2YcSoHIZRuiybLYd6XN8uT39utS0n0LMJo4S7czIPyJk/xx7QdfiHc4+Q?=
 =?us-ascii?q?7xL9W+aePy14iGhmeL2hnRay91avyunmWsmzylZKoTJJktjKtn8Tyxze8taLRu?=
 =?us-ascii?q?d580u7xDqC2R7f5vtZLU03iabXMZ8sz7wompoWq0vDHyv2mEvsjK+Rc0Up4uyo?=
 =?us-ascii?q?6+XhYrX7qZ6QLox0hR/kMqQohMO/Bf00Mg8AXmid5+u8zqbu/VP2QLpUlP06iK?=
 =?us-ascii?q?rZv47AJcQduKG5BxVZ0oE56xawFzumysgXnWEbLFJZfxKKl4zpO1DNIP/mF/u+?=
 =?us-ascii?q?jEmsnSxvx/DHOL3hH5rMImLCkLfnYbZy9UpcxBAvwtBY4pJeEqsBL+7rWk/tqN?=
 =?us-ascii?q?zYCQc0MwyuzObmFNVyzIQeVXiPAq+EKqzSt1CI6/krI+mNYo8VpTn8J+Ik5/7o?=
 =?us-ascii?q?kX82h1sdcbO10psQbXCyBu5mLFmBYXrwntcBFn8Hvgg5TOP0klGCUjlTZ3C0X6?=
 =?us-ascii?q?I7/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4CcUfcWdC2SOtNhkiAD?=
 =?us-ascii?q?VbW5UYAhzhGutAj5y7Z9NOrb4C8YuInn1Nh04e3TiB4z+SZ1D8Sbz2GCUWV0kn?=
 =?us-ascii?q?kUSD8x2aB1uVZ9xUub0ahkn/xYEsRe5/BTXQc8L5Lcy+16BMr0WgLOZdqJTFem?=
 =?us-ascii?q?QtO7ATA+VN4xwtkOY1pjFNWmlBzMwy2qA7oNnbyRGJM06r7c32T2J8tl1nnJzr?=
 =?us-ascii?q?chgEc8TstPL2KmgLV/+BbVB4LOl0WZlKOqdaAH0S7J9WeDy3eOvU5CXA5xV6XF?=
 =?us-ascii?q?QW4QZk/Modvl4UPCSqekCa47PQtZ1c6CNqxKZ8X0glpcWvfsJs7SY2KrlGe2Hh?=
 =?us-ascii?q?aH2LWMYZHue2Uc2iXdFUcFnxoS/XaAKQgxGCOhr3jCAzxpEFLle1ns/vVmqHOn?=
 =?us-ascii?q?Uk80yBmHb1Fg17qw/R4VmfycSvMJ0rIYoishrC90HFK839LQBNqNvA5hfKRaYd?=
 =?us-ascii?q?Mg71ZLz2PZtwphPpO+K6BunEIRcwNyv0n2zRV4Fp1AkdQ2rHMt1Ad9M6aY301O?=
 =?us-ascii?q?djyG3ZH8IKbYKnTv8x+1ba7W2Vbe0MiN96cL6fQ4rUjjvQ6zGkoj9XVnz8da03?=
 =?us-ascii?q?+G6prWCwoSVIr7Ulwr+Bhiu7Hafi496pvU1H1xK6W7riXO2tMpBOQ/zBagcMxS?=
 =?us-ascii?q?MKeFFA/0Ds0bCNKiKO0sm1i1cB0EOPpe+7IzP8Ojb/GGwrKkPP58nDK6imRK+J?=
 =?us-ascii?q?p90kOQ+CVmUO7HwpEFz+ue3gSZTTf8jU6tvdztloBAeD4dAHC/yS/iBINKYq1y?=
 =?us-ascii?q?fIALCXqhIsGtx9V+gYLtVGBc9FK5G1wG38qpcwKIb1PhxQ1QyVgXoXu/lCq4zj?=
 =?us-ascii?q?x4iTEoorCE3CzTxeTvbx4HOm9NRGl/glbgO4m0j9YGXEe2awgljgeq5UH/x6JD?=
 =?us-ascii?q?vqRwM3HTQVtUfyjxN2xiULG/tqCBY85M75Mkqz5XX/6/YVCZS779pQUV0yX4Em?=
 =?us-ascii?q?taxTA7cSyqu5rjkxx7jmKdMGh8rH7Ddc5swhff4cTWReRN0ToeWCl4lT7XC0C8?=
 =?us-ascii?q?Ptaz+tWYjZXDsuG4V2+6Up1TcC/rzZ6PtSeh5G1qBwG/kO63mtH9DQc61ir73c?=
 =?us-ascii?q?FwVSrUtBb8fpXr16OiPOJkZEZoBUXw68pnGo5klIswi4od2XwbhpWT4HoGnn3/?=
 =?us-ascii?q?MdRd2aLicnUNQSQHzMLS4AjgwEdjNG6Gx5rlVnWBxctsf9y6YmIV2i0n9cxLBr?=
 =?us-ascii?q?mb7KdYnSRruFq3thzeYeJynjoGzfsu6Xgag/wGuQY3zyWdBKwSEldcPSD2ixuI?=
 =?us-ascii?q?6NW+pr1NZGmzabiwyFZ+nde5AbGepQFcXWz1e5Y4Ei9288V/K0nM0Hzo54Hged?=
 =?us-ascii?q?nQa88TtxKOnxfBiehVNIw+lv4QiSV7PmL9uGUvy/Qnghx2wZG6oI+HJn12862j?=
 =?us-ascii?q?BR5YMiD1a9kX+jHwlqtemseW34ayHpRuADkLXZ3oTe62HzIWr/joKwGOEDgkoH?=
 =?us-ascii?q?eBBbXfBROf6Fthr3/XEZCkLXSXK2cCzdl4WBmRPk9fgB0XXDUnmJ42DBuqydfl?=
 =?us-ascii?q?cEd44DAR+1H5pgFNyuJuKxnwTGPfqB20ZTczTZiVNABW4R1a50fJLcye6fp+Hi?=
 =?us-ascii?q?Ff/p28tQyNN3aUZwJSAWESXUyEAV/jM6Kq5dnB9eiYG+W/I+HPYbWItexRSfOI?=
 =?us-ascii?q?yYiz3Yth+jaGLt+PMWV6D/0nxkpDWmh0G8THlDUOSCwXlCPNY9SYpBem/S13od?=
 =?us-ascii?q?6w8O72WAL0/oaPD7pSMdNy+xG5m6uDNuiQhDpnJjZczJ8D2XjIyL0H1l4Ily5u?=
 =?us-ascii?q?byWtEagHtSPVVq3Qh7RYDwQFZCJzLsdI66M80xJJOc7ajNP1y7F5guQ0C1dDSV?=
 =?us-ascii?q?zuhMWpadYWLGG6MVPNHFyLO6ieJT3X38H3ZruxSaFRjOVRrRG/pSyXHFPjPjud?=
 =?us-ascii?q?kTnkTBSvMeBKjCGGMx1SooC9chBxCWf9SNLqcAG0MNhyjTcu2707mmvKNXIAMT?=
 =?us-ascii?q?h7a05Mrqef7SVdgvV+HWxO9ntkLemelCaf4OnVMZIWsfptAiRpmONW+nU6y71J?=
 =?us-ascii?q?7C5aQPx5gjfdrtlrowLuru7axSBqXxlOgjJKgp+bs0J/P6nQ6phHXzDD5h1JpW?=
 =?us-ascii?q?adBg8BoNxmItLovK9Ux57Ek6e3YDJJ/MjT8+MfCtLSJcbBN2AudVLyGCPdDCMG?=
 =?us-ascii?q?QCStOGWZgFZSw9+I8XjAhII3rJTlntIuS7BUVVouXqcQEEljENUEIJZ4UTIiip?=
 =?us-ascii?q?aUi8kH4Xf4px7UEpYJ9qvbX+6fVK28YA2SiqNJMkMF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BEAABT7f5bh0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?YJpgQIng3mUIIIhiHyOMhSBEANMLAMQAYQ8AoMwIjYHDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2IoJlAwMBAiAdAQE3AQUJAQEkAiYCAgMeEwEFARwHEgWDHAGBa?=
 =?us-ascii?q?QMVBZthPIodcIEvgnYBAQVEggCCRA2CFAgSeYZghCsXgUA/gRGFaUcCgUqDG4J?=
 =?us-ascii?q?XiSGGBXdQjwIuCYIggxKBS4cIgyELGIInjm6IdoVpiVowgSwGX4EhMxojUIJsC?=
 =?us-ascii?q?YISg22FZYUPHjOBBQEBjWMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BEAABT7f5bh0O0hNFjHgEGBwaBUwcLAYJpgQIng3mUIII?=
 =?us-ascii?q?hiHyOMhSBEANMLAMQAYQ8AoMwIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2I?=
 =?us-ascii?q?oJlAwMBAiAdAQE3AQUJAQEkAiYCAgMeEwEFARwHEgWDHAGBaQMVBZthPIodcIE?=
 =?us-ascii?q?vgnYBAQVEggCCRA2CFAgSeYZghCsXgUA/gRGFaUcCgUqDG4JXiSGGBXdQjwIuC?=
 =?us-ascii?q?YIggxKBS4cIgyELGIInjm6IdoVpiVowgSwGX4EhMxojUIJsCYISg22FZYUPHjO?=
 =?us-ascii?q?BBQEBjWMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="41963187"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 11:38:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729491AbeK2GlC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 01:41:02 -0500
Received: from mail-it1-f202.google.com ([209.85.166.202]:54974 "EHLO
        mail-it1-f202.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729433AbeK2GlA (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 01:41:00 -0500
Received: by mail-it1-f202.google.com with SMTP id v3so4271059itf.4
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 11:38:16 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=vAK0p7vKTuMPpezuXE/k7QGLFOufe8xVPHMWIxnzcOw=;
        b=HZFAhEFpsemMuzBPrmsGrjv52lptKO71UvLKo8R2cqvpqs1fsoXvzEW9M82vVbiG4I
         8lgm+sQr+xKpgGcI7n57+Iqp4EL/gw1tAT1r5AzBwEMUCY6uDx4HumzI5JusEDB9i0gT
         1aXleqwgLn8rIP+5OiJ8PMWwF9NrssiZgN5lGGKq+tgV+qhjf0N0IRW6EXo5QmczSDFv
         sfTS7DnEtq0yWfymSBjFNaRT2AnoJ0F1kMTq6CJvrMF6HNzvjc4JFjUQ1ZL1V67M+DbU
         KMzcuowcCU7kdr/QxmqyuYiHmsdeq/7YReCEQcungg8JXo/tErb0d4cugphcf/gfr7a4
         3+YA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=vAK0p7vKTuMPpezuXE/k7QGLFOufe8xVPHMWIxnzcOw=;
        b=D1P0UswH8peupv7dmIsbe4IyT2AwlKPAiy5F7CswgO6RpVLK4HAJTtrjwHmNFjTBuU
         hUMNaLGGS0TGDLkP/Mqwe9Qp6kJ14J1riZiEYkzsJVjTEujD5QlOYY+BMmpIlGiKKOF9
         h9cEIefynSCwQWAkKQWFgIptQHELPFkKJI5z5cch2+U4kSzqyBiFmMuU4NEVxbO45N4O
         6yZYvLRkkAwu3E4T9uC9sPpcSwefBa0c/t3atRTZPUGu6vRHBqZ4eHZaNHk9o/G/wVxT
         GNd/DcXVAYC5GOZp37BigN52sLvRpcwfsHitL0mg96+QRsFQt6DKAmnpMYP4g3dg4JBk
         K8rA==
X-Gm-Message-State: AA+aEWacLDEFwoKBWgCrJ1Vrytrr/vVXBunw0FYzGyK1jP89v8Pb2Opn
        SCscVXJTGnP/JgtOokaVpf+kl4qlUgVHKlyoH4MKkQ==
X-Google-Smtp-Source: AFSGD/Ujo8L+z++cqBiX0TR/cZSdTP71zFmLdi9OlccxU3BUppjqS2CtoJDToemuwTkNGpAvvuqMQL2o2zW3kWe3LvqXRA==
X-Received: by 2002:a24:ac6c:: with SMTP id m44-v6mr3565488iti.40.1543433895704;
 Wed, 28 Nov 2018 11:38:15 -0800 (PST)
Date: Wed, 28 Nov 2018 11:36:30 -0800
In-Reply-To: <20181128193636.254378-1-brendanhiggins@google.com>
Message-Id: <20181128193636.254378-14-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20181128193636.254378-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.20.0.rc0.387.gc7a69e6b6c-goog
Subject: [RFC v3 13/19] kunit: improve output from python wrapper
From: Brendan Higgins <brendanhiggins@google.com>
To: gregkh@linuxfoundation.org, keescook@google.com, mcgrof@kernel.org,
        shuah@kernel.org
Cc: joel@jms.id.au, mpe@ellerman.id.au, joe@perches.com, brakmo@fb.com,
        rostedt@goodmis.org, Tim.Bird@sony.com, khilman@baylibre.com,
        julia.lawall@lip6.fr, linux-kselftest@vger.kernel.org,
        kunit-dev@googlegroups.com, linux-kernel@vger.kernel.org,
        jdike@addtoit.com, richard@nod.at, linux-um@lists.infradead.org,
        daniel@ffwll.ch, dri-devel@lists.freedesktop.org, robh@kernel.org,
        dan.j.williams@intel.com, linux-nvdimm@lists.01.org,
        kieran.bingham@ideasonboard.com, frowand.list@gmail.com,
        knut.omang@oracle.com, Brendan Higgins <brendanhiggins@google.com>,
        Felix Guo <felixguoxiuping@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

- add colors to displayed output
- add timing and summary

Signed-off-by: Felix Guo <felixguoxiuping@gmail.com>
Signed-off-by: Brendan Higgins <brendanhiggins@google.com>
---
 tools/testing/kunit/kunit.py        | 27 ++++++++-
 tools/testing/kunit/kunit_parser.py | 93 ++++++++++++++++++++++++++++-
 2 files changed, 115 insertions(+), 5 deletions(-)

diff --git a/tools/testing/kunit/kunit.py b/tools/testing/kunit/kunit.py
index 1356be404996b..0b8e8c20a746e 100755
--- a/tools/testing/kunit/kunit.py
+++ b/tools/testing/kunit/kunit.py
@@ -6,6 +6,7 @@
 import argparse
 import sys
 import os
+import time
 
 import kunit_config
 import kunit_kernel
@@ -21,20 +22,40 @@ parser.add_argument('--timeout', help='maximum number of seconds to allow for '
 		    'build the tests.', type=int, default=300,
 		    metavar='timeout')
 
+parser.add_argument('--jobs',
+		    help='As in the make command, "Specifies  the number of '
+		    'jobs (commands) to run simultaneously."',
+		    type=int, default=8, metavar='jobs')
+
 cli_args = parser.parse_args()
 linux = kunit_kernel.LinuxSourceTree()
 
+config_start = time.time()
 success = linux.build_reconfig()
+config_end = time.time()
 if not success:
 	quit()
 
-print('Building KUnit Kernel ...')
-success = linux.build_um_kernel()
+kunit_parser.print_with_timestamp('Building KUnit Kernel ...')
+
+build_start = time.time()
+success = linux.build_um_kernel(jobs=cli_args.jobs)
+build_end = time.time()
 if not success:
 	quit()
 
-print('Starting KUnit Kernel ...')
+kunit_parser.print_with_timestamp('Starting KUnit Kernel ...')
+test_start = time.time()
+
 if cli_args.raw_output:
 	kunit_parser.raw_output(linux.run_kernel(timeout=cli_args.timeout))
 else:
 	kunit_parser.parse_run_tests(linux.run_kernel(timeout=cli_args.timeout))
+
+test_end = time.time()
+
+kunit_parser.print_with_timestamp((
+	"Elapsed time: %.3fs total, %.3fs configuring, %.3fs " +
+	"building, %.3fs running.\n") % (test_end - config_start,
+	config_end - config_start, build_end - build_start,
+	test_end - test_start))
diff --git a/tools/testing/kunit/kunit_parser.py b/tools/testing/kunit/kunit_parser.py
index 1dff3adb73bd3..d9051e407d5a7 100644
--- a/tools/testing/kunit/kunit_parser.py
+++ b/tools/testing/kunit/kunit_parser.py
@@ -1,6 +1,7 @@
 # SPDX-License-Identifier: GPL-2.0
 
 import re
+from datetime import datetime
 
 kunit_start_re = re.compile('console .* enabled')
 kunit_end_re = re.compile('List of all partitions:')
@@ -19,6 +20,94 @@ def raw_output(kernel_output):
 	for line in kernel_output:
 		print(line)
 
+DIVIDER = "=" * 30
+
+RESET = '\033[0;0m'
+
+def red(text):
+	return '\033[1;31m' + text + RESET
+
+def yellow(text):
+	return '\033[1;33m' + text + RESET
+
+def green(text):
+	return '\033[1;32m' + text + RESET
+
+def print_with_timestamp(message):
+	print('[%s] %s' % (datetime.now().strftime('%H:%M:%S'), message))
+
+def print_log(log):
+	for m in log:
+		print_with_timestamp(m)
+
 def parse_run_tests(kernel_output):
-	for output in isolate_kunit_output(kernel_output):
-		print(output)
+	test_case_output = re.compile('^kunit .*?: (.*)$')
+
+	test_module_success = re.compile('^kunit .*: all tests passed')
+	test_module_fail = re.compile('^kunit .*: one or more tests failed')
+
+	test_case_success = re.compile('^kunit (.*): (.*) passed')
+	test_case_fail = re.compile('^kunit (.*): (.*) failed')
+	test_case_crash = re.compile('^kunit (.*): (.*) crashed')
+
+	total_tests = set()
+	failed_tests = set()
+	crashed_tests = set()
+
+	def get_test_name(match):
+		return match.group(1) + ":" + match.group(2)
+
+	current_case_log = []
+	def end_one_test(match, log):
+		log.clear()
+		total_tests.add(get_test_name(match))
+
+	print_with_timestamp(DIVIDER)
+	for line in isolate_kunit_output(kernel_output):
+		# Ignore module output:
+		if (test_module_success.match(line) or
+		    test_module_fail.match(line)):
+			print_with_timestamp(DIVIDER)
+			continue
+
+		match = re.match(test_case_success, line)
+		if match:
+			print_with_timestamp(green("[PASSED] ") +
+					     get_test_name(match))
+			end_one_test(match, current_case_log)
+			continue
+
+		match = re.match(test_case_fail, line)
+		# Crashed tests will report as both failed and crashed. We only
+		# want to show and count it once.
+		if match and get_test_name(match) not in crashed_tests:
+			failed_tests.add(get_test_name(match))
+			print_with_timestamp(red("[FAILED] " +
+						 get_test_name(match)))
+			print_log(map(yellow, current_case_log))
+			print_with_timestamp("")
+			end_one_test(match, current_case_log)
+			continue
+
+		match = re.match(test_case_crash, line)
+		if match:
+			crashed_tests.add(get_test_name(match))
+			print_with_timestamp(yellow("[CRASH] " +
+						    get_test_name(match)))
+			print_log(current_case_log)
+			print_with_timestamp("")
+			end_one_test(match, current_case_log)
+			continue
+
+		# Strip off the `kunit module-name:` prefix
+		match = re.match(test_case_output, line)
+		if match:
+			current_case_log.append(match.group(1))
+		else:
+			current_case_log.append(line)
+
+	fmt = green if (len(failed_tests) + len(crashed_tests) == 0) else red
+	print_with_timestamp(
+		fmt("Testing complete. %d tests run. %d failed. %d crashed." %
+		    (len(total_tests), len(failed_tests), len(crashed_tests))))
+
-- 
2.20.0.rc0.387.gc7a69e6b6c-goog

