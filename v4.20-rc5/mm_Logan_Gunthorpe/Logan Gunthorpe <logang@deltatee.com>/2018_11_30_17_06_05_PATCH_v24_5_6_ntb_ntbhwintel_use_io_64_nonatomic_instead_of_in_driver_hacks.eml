Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:20:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D9DC4580224;
	Fri, 30 Nov 2018 09:06:54 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 09:06:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AbNVtlxN/vptfhBymWdEl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPr/psbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzcaTAc9MdX2pBQtheWDFdDIyi?=
 =?us-ascii?q?c4QPDvIBMfhFpIX5qFYCsR6yCA+xD+3t1zBInGf7060k3eovEg/I2w4vH9wBv3?=
 =?us-ascii?q?rbsdv1L78SXOKuwaXUzjjOde9a1C3h5ITUdB0qvPGCXah3ccrU0UQhEQTFjlqK?=
 =?us-ascii?q?pozjIjib1/kNs26H7+pgUuKvkXYnpB9sqTWowscsjYbJiZgTylDL7ih23Zg6Jd?=
 =?us-ascii?q?mkSEFhfd6rDoVfuzuGOItxR8MvWmdlszs5xL0eoZO3YjQGxZA9yxLCZfGLbZKE?=
 =?us-ascii?q?7g/gWeqNOzt1hXBodKqhixqu80Ws0O3xW8au3FpXsyZIk8PAu3EP2hHV98OJUO?=
 =?us-ascii?q?Fy/l271jaKzw3T6v9LIUQzlafDNZ4hzaA/loAJvUTAACD2gkP2g7GSdkk+/eio?=
 =?us-ascii?q?8evnbq3npp+aKYB0lhnzProylsG7G+g0LwYDU3aB9eih17Dv4Vf1TbRIg/Eul6?=
 =?us-ascii?q?nWqpHaJcAVpq6jBA9V154u6xK+DzegzdQZkmALLFFbdxKdiYjmJVXOLOn/Dfax?=
 =?us-ascii?q?hVSjji1ryuvYPr3uHJrNNGLPkLT/crZn7U5T1g4zwcpY55JOBbENOOjzVVPptN?=
 =?us-ascii?q?zEEh85NBS5w+LmCNV+yIwSQ22OArKCPaPWsF+I4P8vIuaWaI8Uvjb9N+Yq5/r0?=
 =?us-ascii?q?gXAlnl8deLGj3YELZ3CgAvRmP0KZbGLsgtgbEGcKohAxTOvwhF2CTD5cfXCyX6?=
 =?us-ascii?q?0n6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfocp2OW+0QZyKKPs9hjjsE?=
 =?us-ascii?q?WKCjS48myx6irgz6y71hLurS/S0Vrpbj1Nlz5+3OmhA+7z10D8KB026TS2F4hH?=
 =?us-ascii?q?8HRzgz3Kpnu0xy1k+D0bRkg/xfDdFc/ehJUgc9NZ7f1eB6Ecr9WgDac9eNSVam?=
 =?us-ascii?q?RMimAD4rQtIwxd8Of1hyG9G4gh/f2CqqBqcfl6aXC5ws7qLcw3/xKt5+y3nc0q?=
 =?us-ascii?q?ktlV0mQspVOm2gia5y7AzTB4/Pk0WEmKemb6Uc3CjR9GidyWqCpl1XUAl1Ua/d?=
 =?us-ascii?q?R3AQelPWrcjl5kPFV7KhFK4oMhVfxsKYKqtFcNvpjU5YS/flP9jeZ2Gxm2K0BR?=
 =?us-ascii?q?uTwrOMbYzqe3gS3SnHCUgElRwT8miCNQQkGiihpGfeBiR0FV3ze0Ps7fV+qHSj?=
 =?us-ascii?q?Q0Ap1Q6KcVNu26C1+hEPg/ycUO0c3rQftSclqjV0Gku93t3MB9qBoQphYLtTYd?=
 =?us-ascii?q?cn7Fhb0mLZshR3Poa8IKB6ml4ebwN3slvy1xV2D4VAltQqrHMqzQZoNaKUylRB?=
 =?us-ascii?q?dymc3ZDxPL3XJXL//BSua67Qx1Hf38ya+qYJ6PQktVrjuBulGVYl83Viy9NVyW?=
 =?us-ascii?q?eT5o3WDAoOVpL8Slw49xxkqLDVfCY855nY2mZxMaapqDDC3dEpBOw7yhu7e9df?=
 =?us-ascii?q?MaWEFBL9EsEABsiuLvAqlEatbh4eIO9S86s0Ndu8d/SawK6rIPpgnDW+gGVH/Y?=
 =?us-ascii?q?BxyF6D+zB9S+7IxZkFxf6Y0xCDVzf9ilehr8/2lZpFZTEUAmqw1yzkCJRNaa11?=
 =?us-ascii?q?eIYBEX2uLNGvxtVim57tXGZV9ESiB1wawsCpYwedb1vn0Q1Wy0sXu32nlTKkwD?=
 =?us-ascii?q?NulzEms7SQ3DbJw+TkbxcHPm9LRG9/jVbjO4S0jtYaXFS2YAgtjheq+UH6x61D?=
 =?us-ascii?q?rqRlM2bTWVtIfzTxL2x6Uqqwt6COYs5V5JMzrCVXVv+xYVSbSr77vhsb3DnvH2?=
 =?us-ascii?q?pYxDAnaT6qvo/1kAB9iGKYNHxztmbWedlsxRfD49zRXfxR0SAcRCl7ijnXAUKw?=
 =?us-ascii?q?P8Kz8tWXlJfDs+a+WHynVpBIdSnrzIWAtDa05GFwAB2/meyzlcPjEQQgzSD70N?=
 =?us-ascii?q?xqXz3SrBngeonry7i6MeV/c0hoHlD87NB2GoN/kos2n5wQ3XkahpOI/XsIi2vz?=
 =?us-ascii?q?MNNb2b7gY3oJXzIE39nV4A390k15Mn2J3575VmmawsZ5ZNm1eGIW1jg978BXEq?=
 =?us-ascii?q?iU6rNEkDBxolq5qwLRfPd8ki0cyfso9H4VneUJtBAxwSWaB7AYBVNYMjD0lxSU?=
 =?us-ascii?q?89C+q71aZGOucbizzkVyh96gA6+ZogFARnn5YIwtEjFq7sVwK1/M1Hzz6of5eN?=
 =?us-ascii?q?jfd94TtxuUkwvegOhRMp4+iv0KhS9/M2LnoXIl0/I7jQBp3ZyioIiHLGBt8Li4?=
 =?us-ascii?q?AxFCMD31etgT+irsjatFmsaW3oavHohuGzkRXZvoS+6oHywWtfj9KwmOFzg8oG?=
 =?us-ascii?q?+BGbXDBQ+f9Ftmr3XXHp+wLX6XI30Zzch4SBmZOUxSmwQUXDQ8np4kGQGm3s3h?=
 =?us-ascii?q?cEFl5j8P4l70sAdDyuVtNxPnSGfQuB+oaisoSJiYNBdW7BtN50LLPsyF9O5zAz?=
 =?us-ascii?q?tU/p68rAyON2ybYR5HDXoSV0yABlDjOKSu5Nba/+iZAOq+M+XBYbGUpeNCUPeI?=
 =?us-ascii?q?wIql0pF68DaUKsWPIn5iAuU720pEQHB5AtnZlC8JSyANjCLNaMibpBin9y1zr8?=
 =?us-ascii?q?C/9unrWQ316YuODbtSLctg+xSsjaifMO6QgT5zKSxE2ZMU2X/I1L8f0UYSiy5w?=
 =?us-ascii?q?djmtErcAtS/XQKLTgK9XCBEbZD1pNMtV9KIxxQ1NOc/ditPo2b90lP81C1FZVV?=
 =?us-ascii?q?P/nsGlf9AFI2a4NFnfHkaEKKyGJSHXw8Hwea6zU6BQg/5OtxKuuTeXCUvjPjWY?=
 =?us-ascii?q?mjntVhCvN/xMjS6BMBxfvoG9bghiCWz5QN36bR27Ncd9jScqzr0smnPKKWkcPC?=
 =?us-ascii?q?Bgc0NMq72c9z9Xju9jFGxB8HVlK/KJmyKY7+neN5YXvuFnAiVyl+JG/ns6z6FZ?=
 =?us-ascii?q?4z1DRPxwgCHStMJho0m6kumTzTpqSBpPpSxNhIKOvEViP73W95hAWXne+hIN4n?=
 =?us-ascii?q?6dCxALp9tjF93utLpcytnJlKLvNjhC98jY8tcbB8jRe4q7Ny8lMBz0CHvXARED?=
 =?us-ascii?q?QDqDK27SnQpeneuU+3nTqYI17tDomZwTWvpSTlc1Pu0VB14jH9EYJppzGDQ+nv?=
 =?us-ascii?q?rTiM8O+Gr7qgXbbMpduZ/DW/2IBuj3M3CSirwALx8Jx67oaI8JJ5Xn3GR8ZVRg?=
 =?us-ascii?q?2ofHAUzdWZZKuCIlJgs1plhdtX17Zm4t0knmLAS37ztbPPi4hBMpwi55e/gq8n?=
 =?us-ascii?q?+46lQvI3LOpS0tgAw/nsjjjTmNcTn3aqCqUtcFJTDzsh0VNZzyRU5acAuunUt+?=
 =?us-ascii?q?LDqME7ZWgLJmekhnhQvAsIdCFLhXSqgSM0xY/u2ee/h9iQcUkS6g30ISoLWdBA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BKAADZbQFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2snmBuCIYh9kCUZGBMBh3YiNwYNAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKS+CNiSCYwMDAQIvAUYGCQEBUAMeNgYBEgWDHIFqAxUFp2SIAw2CHIdshC4Xg?=
 =?us-ascii?q?UA/hnqIBQKJLYFvhQqPYS4JgiKLaIMiI5EfLIhPhW+Jc4FcgXdNIxWDJ4InFxK?=
 =?us-ascii?q?OKx8BMoEFAQGNSQEB?=
X-IPAS-Result: =?us-ascii?q?A0BKAADZbQFch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?nmBuCIYh9kCUZGBMBh3YiNwYNAQMBAQEBAQECARMBAQEIDQkIKS+CNiSCYwMDA?=
 =?us-ascii?q?QIvAUYGCQEBUAMeNgYBEgWDHIFqAxUFp2SIAw2CHIdshC4XgUA/hnqIBQKJLYF?=
 =?us-ascii?q?vhQqPYS4JgiKLaIMiI5EfLIhPhW+Jc4FcgXdNIxWDJ4InFxKOKx8BMoEFAQGNS?=
 =?us-ascii?q?QEB?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="54037994"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 09:06:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727070AbeLAEQK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 23:16:10 -0500
Received: from ale.deltatee.com ([207.54.116.67]:41066 "EHLO ale.deltatee.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726736AbeLAEQJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 23:16:09 -0500
Received: from cgy1-donard.priv.deltatee.com ([172.16.1.31])
        by ale.deltatee.com with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
        (Exim 4.89)
        (envelope-from <gunthorp@deltatee.com>)
        id 1gSmEz-0000qq-3E; Fri, 30 Nov 2018 10:06:10 -0700
Received: from gunthorp by cgy1-donard.priv.deltatee.com with local (Exim 4.89)
        (envelope-from <gunthorp@deltatee.com>)
        id 1gSmEx-0004VI-So; Fri, 30 Nov 2018 10:06:07 -0700
From: Logan Gunthorpe <logang@deltatee.com>
To: linux-kernel@vger.kernel.org, linux-arch@vger.kernel.org,
        linux-ntb@googlegroups.com, linux-crypto@vger.kernel.org,
        linux-mm@kvack.org, Andrew Morton <akpm@linux-foundation.org>
Cc: Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Andy Shevchenko <andy.shevchenko@gmail.com>,
        =?UTF-8?q?Horia=20Geant=C4=83?= <horia.geanta@nxp.com>,
        Logan Gunthorpe <logang@deltatee.com>
Date: Fri, 30 Nov 2018 10:06:05 -0700
Message-Id: <20181130170606.17252-6-logang@deltatee.com>
X-Mailer: git-send-email 2.19.0
In-Reply-To: <20181130170606.17252-1-logang@deltatee.com>
References: <20181130170606.17252-1-logang@deltatee.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SA-Exim-Connect-IP: 172.16.1.31
X-SA-Exim-Rcpt-To: linux-ntb@googlegroups.com, linux-kernel@vger.kernel.org, linux-arch@vger.kernel.org, linux-crypto@vger.kernel.org, linux-mm@kvack.org, akpm@linux-foundation.org, arnd@arndb.de, gregkh@linuxfoundation.org, andy.shevchenko@gmail.com, horia.geanta@nxp.com, logang@deltatee.com
X-SA-Exim-Mail-From: gunthorp@deltatee.com
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on ale.deltatee.com
X-Spam-Level: 
X-Spam-Status: No, score=-8.7 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        GREYLIST_ISWHITE,MYRULES_NO_TEXT autolearn=ham autolearn_force=no
        version=3.4.2
Subject: [PATCH v24 5/6] ntb: ntb_hw_intel: use io-64-nonatomic instead of in-driver hacks
X-SA-Exim-Version: 4.2.1 (built Tue, 02 Aug 2016 21:08:31 +0000)
X-SA-Exim-Scanned: Yes (on ale.deltatee.com)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Now that ioread64 and iowrite64 are available in io-64-nonatomic,
we can remove the hack at the top of ntb_hw_intel.c and replace it
with an include.

Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
Acked-by: Dave Jiang <dave.jiang@intel.com>
Acked-by: Allen Hubbe <Allen.Hubbe@dell.com>
Acked-by: Jon Mason <jdmason@kudzu.us>
---
 drivers/ntb/hw/intel/ntb_hw_intel.h | 30 +----------------------------
 1 file changed, 1 insertion(+), 29 deletions(-)

diff --git a/drivers/ntb/hw/intel/ntb_hw_intel.h b/drivers/ntb/hw/intel/ntb_hw_intel.h
index c49ff8970ce3..e071e28bca3f 100644
--- a/drivers/ntb/hw/intel/ntb_hw_intel.h
+++ b/drivers/ntb/hw/intel/ntb_hw_intel.h
@@ -53,6 +53,7 @@
 
 #include <linux/ntb.h>
 #include <linux/pci.h>
+#include <linux/io-64-nonatomic-lo-hi.h>
 
 /* PCI device IDs */
 #define PCI_DEVICE_ID_INTEL_NTB_B2B_JSF	0x3725
@@ -218,33 +219,4 @@ static inline int pdev_is_gen3(struct pci_dev *pdev)
 	return 0;
 }
 
-#ifndef ioread64
-#ifdef readq
-#define ioread64 readq
-#else
-#define ioread64 _ioread64
-static inline u64 _ioread64(void __iomem *mmio)
-{
-	u64 low, high;
-
-	low = ioread32(mmio);
-	high = ioread32(mmio + sizeof(u32));
-	return low | (high << 32);
-}
-#endif
-#endif
-
-#ifndef iowrite64
-#ifdef writeq
-#define iowrite64 writeq
-#else
-#define iowrite64 _iowrite64
-static inline void _iowrite64(u64 val, void __iomem *mmio)
-{
-	iowrite32(val, mmio);
-	iowrite32(val >> 32, mmio + sizeof(u32));
-}
-#endif
-#endif
-
 #endif
-- 
2.19.0

