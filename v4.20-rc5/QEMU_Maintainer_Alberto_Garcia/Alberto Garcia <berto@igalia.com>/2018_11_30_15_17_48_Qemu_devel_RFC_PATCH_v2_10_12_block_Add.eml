Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:20:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 04B45580213
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 07:42:41 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 30 Nov 2018 07:42:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AOYJJBh/pVJkM2P9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+4QIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaM+ZwcKPDcN8DXGZPXNteVzZYDo2h?=
 =?us-ascii?q?cosPFPIBMvhEoInhvlcOqRy+BAexD+/ryjJEg3n70qom3eohDwzKxRUsEdATv3?=
 =?us-ascii?q?TOtdn7KboSUfutzKbW0TrDc+5d1TPj5ITUdxwsp+yHU7BtfsrL0UQhFx3LgFuT?=
 =?us-ascii?q?p4LiPTyV2OYCs2aG4ep4V++hiWEqpxx/rzSz2MgskZLEip4Jxl3e6Sl02po5Kc?=
 =?us-ascii?q?G+RUVmYdCkCpxQtySCOoZqRsMtWH9nuDwmyr0BpJW1fTIFyI47yB7ecfOMbo+F?=
 =?us-ascii?q?7Qn9W+aLPTd4g2loeLOwhxmo9Uigy/fzWtOo31ZNqypIi9/BvW0O2RzL8sWLVO?=
 =?us-ascii?q?dx80S71TqSygze6ftILV46mKfbMZIt37w9moIOvUnHESL6glj6gLOKekk++uWk?=
 =?us-ascii?q?9v7rbqvgq5SBLYF7kBv+Pb4rmsGnAeQ3LAwOX2+D9OS41b3j5lH5QK5Qgv05lK?=
 =?us-ascii?q?nZrYrWJcMBpq62GwNV04Aj5AijDzq+ztgUgXoKIEhYdB6ajIXlIU/CLf74APul?=
 =?us-ascii?q?nlihki9nx/XcMb3gBpXNIGLDkLDkfbtl8k5T1g8zzc1G651JFL4BPuz8WkvouN?=
 =?us-ascii?q?PDCR85Lgq0zPr5B9Vm0Y8eXWOPAqyHP6/Ivl6I+/oiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9BflmJUKZYXzjgtcHDGcGpA0+TPbliFGaSz5ce26yX7?=
 =?us-ascii?q?4g5jE8EI+mCYbDRoOzj7Cb0ya7A4ZbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48khlmTshTnwe9nMvbM4X9f8pbiz8RuoevUkx406HpzFcva1miMS2R9mC?=
 =?us-ascii?q?QPXyM326Zk5lVwz0rG3aVmjvgLKNpI+vkcVw47MYLbnfV3Ds23Vg/fc9PMUlu/?=
 =?us-ascii?q?X9i9HRk3SdQ+xcJIZFxyTM6/hBLO1Db/HrkOiraQD4Y1+K+P43+kPst41jPK2b?=
 =?us-ascii?q?csi3EgRc1AM3DggbRwpCbJAIucukGTmry2cuwz1TTG9W7LmWCDpl1feA9/WKHE?=
 =?us-ascii?q?VDYUYU6A/oex3V/LU7L7UedvCQBG08PXb/QXZw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAAAwWQFchxHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMCWCPYwRX4spUgaBEIEhiCOJMIR5FIFfFBgUh3YiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4jDII2BQIDGgeCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDA?=
 =?us-ascii?q?TgbGQWDHIF1DQEDAaVBgWwzgnYBAQWCQ4RmCIdsRYNpF3iBB4ERM4IqhR+Fco8?=
 =?us-ascii?q?skQsJkTcYiWmHNiyYMYFGgg0zGggbFTuCbIIbg22KVXCBBAOLUoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AiAAAwWQFchxHrdtBjHQEBBQEHBQGBUQgBCwGBMCWCPYw?=
 =?us-ascii?q?RX4spUgaBEIEhiCOJMIR5FIFfFBgUh3YiNAkNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4jDII2BQIDGgeCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATgbGQWDHIF1DQE?=
 =?us-ascii?q?DAaVBgWwzgnYBAQWCQ4RmCIdsRYNpF3iBB4ERM4IqhR+Fco8skQsJkTcYiWmHN?=
 =?us-ascii?q?iyYMYFGgg0zGggbFTuCbIIbg22KVXCBBAOLUoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="42253974"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 07:42:40 -0800
Received: from localhost ([::1]:33413 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSkwB-0006ZL-Ng
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 10:42:39 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51874)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berto@igalia.com>) id 1gSkZt-0007kN-TK
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 10:19:38 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berto@igalia.com>) id 1gSkZq-0006kT-MG
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 10:19:37 -0500
Received: from fanzine.igalia.com ([91.117.99.155]:53273)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <berto@igalia.com>)
	id 1gSkZq-00064X-Aj; Fri, 30 Nov 2018 10:19:34 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=igalia.com;
	s=20170329; 
	h=References:In-Reply-To:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From;
	bh=RUwBM6Y/5bCiLeutme4ryUZuhEUQA4ab9CFhUSxhaaQ=; 
	b=UFU2VwGKXMFpF5/OoM3+uwHNHCt4ihL2di7/tZINWKaomLF99827fvlqApQIBoaF+aSBKovKOmxn1lYAHyjfVqRXuIIALjxDmyK0TWQ6QnxH44jfZSp395ClLUSfzS9XZE+5XdA2o0o4INT1Kb2WWWJ4TSwN9WzYGQbfnLsyII4J7HHvwlE2taamwdyKAKnzXmUgVki2nTdG9lsvmwYbrhkbnmrUFUsnyEZdxk9xlLAU2Cg7jUNhfV+VjV02Rd+S9ffJBsEYzrd+0cGRDdo649UF42h1qM7CxhXrwNKbsUSWYD1xJ3feRiqJkWPaT2EgFrBkKlUi/IMHtsEq7vYJMg==;
Received: from [194.100.51.2] (helo=perseus.local)
	by fanzine.igalia.com with esmtpsa 
	(Cipher TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim)
	id 1gSkYu-0007XJ-Ev; Fri, 30 Nov 2018 16:18:36 +0100
Received: from berto by perseus.local with local (Exim 4.89)
	(envelope-from <berto@igalia.com>)
	id 1gSkYZ-0003ed-MA; Fri, 30 Nov 2018 17:18:15 +0200
From: Alberto Garcia <berto@igalia.com>
To: qemu-devel@nongnu.org
Date: Fri, 30 Nov 2018 17:17:48 +0200
Message-Id: <1da8275a88ef7593d554ae1185b18ee83d91c3ae.1543590618.git.berto@igalia.com>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <cover.1543590618.git.berto@igalia.com>
References: <cover.1543590618.git.berto@igalia.com>
In-Reply-To: <cover.1543590618.git.berto@igalia.com>
References: <cover.1543590618.git.berto@igalia.com>
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x (no
	timestamps) [generic] [fuzzy]
X-Received-From: 91.117.99.155
Subject: [Qemu-devel] [RFC PATCH v2 10/12] block: Add
 bdrv_reset_options_allowed()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Alberto Garcia <berto@igalia.com>,
	qemu-block@nongnu.org, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

bdrv_reopen_prepare() receives a BDRVReopenState with (among other
things) a new set of options to be applied to that BlockDriverState.

If an option is missing then it means that we want to reset it to its
default value rather than keep the previous one. This way the state
of the block device after being reopened is comparable to that of a
device added with "blockdev-add" using the same set of options.

Not all options from all drivers can be changed this way, however.
If the user attempts to reset an immutable option to its default value
using this method then we must forbid it.

This new function takes a QemuOptsList with the options of a block
driver and checks if there's any that was previously set but is
missing from the new set of options in the BDRVReopenState.

If the option is present in both sets we don't need to check that they
have the same value. The loop at the end of bdrv_reopen_prepare()
already takes care of that.

Signed-off-by: Alberto Garcia <berto@igalia.com>
---
 block.c | 48 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)

diff --git a/block.c b/block.c
index e8babee971..59aa72f15e 100644
--- a/block.c
+++ b/block.c
@@ -2909,6 +2909,43 @@ BlockDriverState *bdrv_open(const char *filename, const char *reference,
 }
 
 /*
+ * For every option in @list, check that if it is set in the current
+ * set of options (@state->bs->options) then it is also set in the new
+ * set (@state->options). Options listed in @mutable_opts are skipped.
+ *
+ * @mutable_opts is either NULL or a NULL-terminated array of option
+ * names.
+ *
+ * Return 0 on success, -EINVAL otherwise.
+ */
+static int bdrv_reset_options_allowed(BDRVReopenState *state,
+                                      QemuOptsList *list,
+                                      const char *const mutable_opts[],
+                                      Error **errp)
+{
+    QemuOptDesc *desc = list->desc;
+    while (desc->name) {
+        unsigned i;
+        for (i = 0; mutable_opts != NULL && mutable_opts[i] != NULL; i++) {
+            if (!strcmp(desc->name, mutable_opts[i])) {
+                goto next;
+            }
+        }
+
+        if (!qdict_haskey(state->options, desc->name) &&
+            qdict_haskey(state->bs->options, desc->name)) {
+            error_setg(errp, "Option '%s' can't be reset to its default value",
+                       desc->name);
+            return -EINVAL;
+        }
+    next:
+        desc++;
+    }
+
+    return 0;
+}
+
+/*
  * Returns true if @child can be reached recursively from @bs
  */
 static bool bdrv_recurse_has_child(BlockDriverState *bs,
@@ -3374,6 +3411,17 @@ int bdrv_reopen_prepare(BDRVReopenState *reopen_state, BlockReopenQueue *queue,
     }
 
     if (drv->bdrv_reopen_prepare) {
+        /* If a driver-specific option is missing, it means that we
+         * should reset it to its default value.
+         * But not all options allow that, so we need to check it first. */
+        if (drv->runtime_opts) {
+            ret = bdrv_reset_options_allowed(reopen_state, drv->runtime_opts,
+                                             drv->mutable_opts, errp);
+            if (ret) {
+                goto error;
+            }
+        }
+
         ret = drv->bdrv_reopen_prepare(reopen_state, queue, &local_err);
         if (ret) {
             if (local_err != NULL) {
-- 
2.11.0


