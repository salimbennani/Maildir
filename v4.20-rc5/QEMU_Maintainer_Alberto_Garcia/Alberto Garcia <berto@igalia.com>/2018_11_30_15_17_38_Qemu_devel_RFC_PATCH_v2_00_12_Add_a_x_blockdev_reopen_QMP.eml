Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:19:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2B7A4580224
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 07:25:27 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 07:25:26 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AwmIL2RUGF9fukNnBqfPJQOcRYFDV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbROEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cYUBAekGM+hFt4nwpVkAoBSjCQSiGO/g1CRIi2Tq0aEmyektDRvL0BA8E98IrX?=
 =?us-ascii?q?/arM/1NKAXUe2t0KTIyS7MYO1M2Tfh74jDbxEvruuWXb1scMre01QkGgTegVqO?=
 =?us-ascii?q?s4zlIzSV2/8Ms2iU9eVgUeOvhHQ9pw5tpTivw94hh4/UjYwbzVDE8D92wIczJd?=
 =?us-ascii?q?CgR057Z8OkHIFXtyGAOIt7RN4pTWJwuCsi1LEKpZ22cDIXxJg6xBPTceKLfoaI?=
 =?us-ascii?q?7x75SeqcIy90iG9hdb+wnRq+7FSsxvHmWsS0zVpGtDRJn9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/lAIUA1jqrbN4UhzqQ/lpoVrETPBCj2mF/5jKOOd0Uk/Pan?=
 =?us-ascii?q?6/j/b7n4upORNJV4hhzjPqktgMCzH+o1PwgUU2SG++mwzLjj8lf4QLVOgP02iK?=
 =?us-ascii?q?7ZsJXCKMQCuKG5BhJV3p8+5BmhETepztAYkWAcI1JCZRKHiZTmNE/VIPz/Cfe/?=
 =?us-ascii?q?glesnylxy/HJI73sGpHNLnnFkLf8crdx8U9cyAwvzd9B45JYEK0OIPX2WkLqst?=
 =?us-ascii?q?zYCRk5MwOyw+b6Etl90ZkeWW2XDq+DLKzSqUOI5v4oI+SUYI8VuTX9JOY/6//h?=
 =?us-ascii?q?kH80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TL+itVuZTDQGZ2quR7?=
 =?us-ascii?q?luoXY/CZm6FsHFQYaihqHH2z20WZhfZ2RDA1bLFm/0doKCQLAVZSePZ8NsjDEA?=
 =?us-ascii?q?BoWnUJIrgBSntQvmzOh+I+/JvyEVq5/nkcJ4/vDejg0a8ztyAMKAlWaXQDZvg2?=
 =?us-ascii?q?kKSjQqib15ulF30VyZ0KJ10MBfQMVe4u4MXgokOJr0yet8BNbvHAXbcYSnUlGj?=
 =?us-ascii?q?F/yiCzwrUtV57NYUaEd0U4Gogwrf2AKrDLYRlrXND5sxpPGPl0PtLtpwni6VnJ?=
 =?us-ascii?q?IqiEMrF44WbTWr?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DfEwA/VgFchxHrdtBjHAMfBAeBTgKBL?=
 =?us-ascii?q?yWBFIEpjHCLKVIBBQWKT44pFIFfFBgLCYd2IjUIDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOIwyCNgUCAxoBBoJfBAI9AQEECikBAgMBAgYCPgoIAwEkFDmDHAGBdA0BA?=
 =?us-ascii?q?wEKpTKCH4J2AQEFgTABAwIMQj+EZQMFh2yCbIFCF3iBB4dBAQICgUYBhXKJHQ4?=
 =?us-ascii?q?BhgCRCwmGf4YbhB0YiWmHNo1fin6BSANagS4zGggbFTuCbIYIhRSFQXABgQMDi?=
 =?us-ascii?q?1KBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0DfEwA/VgFchxHrdtBjHAMfBAeBTgKBLyWBFIEpjHCLKVI?=
 =?us-ascii?q?BBQWKT44pFIFfFBgLCYd2IjUIDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCA?=
 =?us-ascii?q?xoBBoJfBAI9AQEECikBAgMBAgYCPgoIAwEkFDmDHAGBdA0BAwEKpTKCH4J2AQE?=
 =?us-ascii?q?FgTABAwIMQj+EZQMFh2yCbIFCF3iBB4dBAQICgUYBhXKJHQ4BhgCRCwmGf4Ybh?=
 =?us-ascii?q?B0YiWmHNo1fin6BSANagS4zGggbFTuCbIYIhRSFQXABgQMDi1KBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'";a="53329265"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 07:25:25 -0800
Received: from localhost ([::1]:33286 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSkfU-0003vx-FN
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 10:25:24 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51513)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berto@igalia.com>) id 1gSkZa-0007SC-Cj
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 10:19:21 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berto@igalia.com>) id 1gSkZY-0006Ws-6H
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 10:19:18 -0500
Received: from fanzine.igalia.com ([91.117.99.155]:53235)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <berto@igalia.com>)
	id 1gSkZU-00062V-4s; Fri, 30 Nov 2018 10:19:14 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=igalia.com;
	s=20170329; h=Message-Id:Date:Subject:Cc:To:From;
	bh=Wt4v/I2WaszmbIAWjGdmsz9CS0b5qYjX8xWAPe9oAS8=; 
	b=UA/hxYQB1ZiYinL7EC9V4Bm6fDJXn82VYSlNIS/4hvg0Qh1ZAxAfQlKdrRoyvnSaJRFvD62Vx1LOYzBAFWjifCzNY4W1GX1eHVd2QxtoOJ6Ge897xmnS5FeepEt2N1O6pY3Re8t4a0fxm5NsWP2351xY0mScywRfzFiBkgONuqDpT5LFPlxizC0pJVzHXRWHzRhHKLzZxgknaO6xmwqtCSQWTSo/3ErmLNsLwOHWlc74nzLdJ46kn2CXe0MhbVtfrCKtNdQGtbH1qT0qTQ/oN//mAoORUo3CHnW3MobBK4lPvaN7Pjm2bm8auUcuKVVE3XaN+7fCOw6B+mgU3BFTHA==;
Received: from [194.100.51.2] (helo=perseus.local)
	by fanzine.igalia.com with esmtpsa 
	(Cipher TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim)
	id 1gSkYp-0007X7-2T; Fri, 30 Nov 2018 16:18:31 +0100
Received: from berto by perseus.local with local (Exim 4.89)
	(envelope-from <berto@igalia.com>)
	id 1gSkYZ-0003e8-BP; Fri, 30 Nov 2018 17:18:15 +0200
From: Alberto Garcia <berto@igalia.com>
To: qemu-devel@nongnu.org
Date: Fri, 30 Nov 2018 17:17:38 +0200
Message-Id: <cover.1543590618.git.berto@igalia.com>
X-Mailer: git-send-email 2.11.0
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x (no
	timestamps) [generic] [fuzzy]
X-Received-From: 91.117.99.155
Subject: [Qemu-devel] [RFC PATCH v2 00/12] Add a 'x-blockdev-reopen' QMP
 command
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Alberto Garcia <berto@igalia.com>,
	qemu-block@nongnu.org, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi,

here's a new attempt to implement a bdrv_reopen() QMP command. The
first attempt happened some months ago and the code has changed
significantly since then (including two additional patch series), but
here's the link to the previous version for reference:

   https://lists.gnu.org/archive/html/qemu-block/2018-06/msg00794.html

I'm still tagging this as RFC because I expect that there will be some
more debate but I think the patches themselves are in pretty good
shape, so if there are no major concerns I think the final version
will be very similar to this one.

This is based on my "Don't pass flags to bdrv_reopen_queue()" v5
series, available on Kevin's block-next branch and originally
published here:

   https://lists.gnu.org/archive/html/qemu-block/2018-11/msg00329.html

The new command is called x-blockdev-reopen, and it's designed to be
similar to blockdev-add. It also takes BlockdevOptions as a
parameter. The "node-name" field of BlockdevOptions must be set, and
it is used to select the BlockDriverState to reopen.

In this example "hd0" is reopened with the given set of options:

    { "execute": "x-blockdev-reopen",
      "arguments": {
          "driver": "qcow2",
          "node-name": "hd0",
          "file": {
              "driver": "file",
              "filename": "hd0.qcow2",
              "node-name": "hd0f"
          },
          "l2-cache-size": 524288
       }
    }

Changing options
================
The general idea is quite straightforward, but the devil is in the
details. Since this command tries to mimic blockdev-add, the state of
the block device after being reopened should generally be equivalent
to that of a block device added with the same set of options.

There are two important things with this:

  a) Some options cannot be changed (most drivers don't allow that, in
     fact).
  b) If an option is missing, it should be reset to its default value
     (rather than keeping its previous value).

Example: the default value of l2-cache-size is 1MB. If we set a
different value (2MB) on blockdev-add but then omit the option in
x-blockdev-reopen, then it should be reset back to 1MB. The current
bdrv_reopen() code keeps the previous value.

Trying to change an option that doesn't allow it is already being
handled by the code. The loop at the end of bdrv_reopen_prepare()
checks all options that were not handled by the block driver and sees
if any of them has been modified.

However, as I explained earlier in (b), omitting an option is supposed
to reset it to its default value, so it's also a way of changing
it. If the option cannot be changed then we should detect it and
return an error. What I'm doing in this series is making every driver
publish its list of run-time options, and which ones of them can be
modified.

Backing files
=============
This command allows reconfigurations in the node graph. Currently it
only allows changing an image's backing file, but it should be
possible to implement similar functionalities in drivers that have
other children, like blkverify or quorum.

Let's add an image with its backing file (hd1 <- hd0) like this:

    { "execute": "blockdev-add",
      "arguments": {
          "driver": "qcow2",
          "node-name": "hd0",
          "file": {
              "driver": "file",
              "filename": "hd0.qcow2",
              "node-name": "hd0f"
          },
          "backing": {
              "driver": "qcow2",
              "node-name": "hd1",
              "file": {
                  "driver": "file",
                  "filename": "hd1.qcow2",
                  "node-name": "hd1f"
              }
          }
       }
    }

Removing the backing file can be done by simply passing the option {
..., "backing": null } to x-blockdev-reopen.

Replacing it is not so straightforward. If we pass something like {
..., "backing": { "driver": "foo" ... } } then x-blockdev-reopen will
assume that we're trying to change the options of the existing backing
file (and it will fail in most cases because it'll likely think that
we're trying to change the node name, among other options).

So I decided to use a reference instead: { ..., "backing": "hd2" },
where "hd2" is of an existing node that has been added previously.

Leaving out the "backing" option can be ambiguous on some cases (what
should it do? keep the current backing file? open the default one
specified in the image file?) so x-blockdev-reopen requires that this
option is present. For convenience, if the BDS doesn't have a backing
file then we allow leaving the option out.

As you can see in the patch series, I wrote a relatively large amount
of tests for many different scenarios, including some tricky ones.

Perhaps the part that I'm still not convinced about is the one about
freezing backing links to prevent them from being removed, but the
implementation was quite simple so I decided to give it a go. As
you'll see in the patches I chose to use a bool instead of a counter
because I couldn't think of a case where it would make sense to have
two users freezing the same backing link.

Thanks,

Berto

Alberto Garcia (12):
  block: Allow freezing BdrvChild links
  block: Freeze the backing chain for the duration of the commit job
  block: Freeze the backing chain for the duration of the mirror job
  block: Freeze the backing chain for the duration of the stream job
  block: Add 'keep_old_opts' parameter to bdrv_reopen_queue()
  block: Handle child references in bdrv_reopen_queue()
  block: Allow omitting the 'backing' option in certain cases
  block: Allow changing the backing file on reopen
  block: Add 'runtime_opts' and 'mutable_opts' fields to BlockDriver
  block: Add bdrv_reset_options_allowed()
  block: Add an 'x-blockdev-reopen' QMP command
  qemu-iotests: Test the x-blockdev-reopen QMP command

 block.c                    | 299 ++++++++++++--
 block/blkdebug.c           |   1 +
 block/commit.c             |   8 +
 block/crypto.c             |   1 +
 block/file-posix.c         |  10 +
 block/iscsi.c              |   2 +
 block/mirror.c             |   8 +
 block/null.c               |   2 +
 block/nvme.c               |   1 +
 block/qcow.c               |   1 +
 block/rbd.c                |   1 +
 block/replication.c        |   4 +-
 block/sheepdog.c           |   2 +
 block/stream.c             |  16 +
 block/vpc.c                |   1 +
 blockdev.c                 |  43 ++
 include/block/block.h      |   9 +-
 include/block/block_int.h  |  10 +
 qapi/block-core.json       |  42 ++
 qemu-io-cmds.c             |   2 +-
 tests/qemu-iotests/224     | 970 +++++++++++++++++++++++++++++++++++++++++++++
 tests/qemu-iotests/224.out |   5 +
 tests/qemu-iotests/group   |   1 +
 23 files changed, 1412 insertions(+), 27 deletions(-)
 create mode 100644 tests/qemu-iotests/224
 create mode 100644 tests/qemu-iotests/224.out

-- 
2.11.0


