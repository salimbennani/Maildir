Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CCB7B580322;
	Tue, 27 Nov 2018 11:56:15 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 11:56:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AiO8zRRA+bK+5PdUgvEndUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+o8qwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6zaYN0aWHFBXt5PWCNdHoOy?=
 =?us-ascii?q?YYwPD+8bMuZZqYn2ul8CoBS6CAWpAu7k1z1GiWLs3aAi3eovER/I0hEjEdIAv3?=
 =?us-ascii?q?vbsMj6O6UcXuCu1KnFzy7Ob/xK1Trn8oXEbgosre+KULltccTR004vFwbdg1uK?=
 =?us-ascii?q?s4PlIS2a1uAQuGac9eVvSeKvhHAkqwpspTWv3t0jipfXiYIR0V3E6Dl2wYgvKd?=
 =?us-ascii?q?KkSU92eNipG4ZeuSGdMot5WMIiQ2dwtSY+y70Gp4C0fCoNyJQ63R7fbeaIc4yS?=
 =?us-ascii?q?7h3/U+aRJC90i254eLK5hha+61Svy+z6W8Kp01hKtjJInsfQun0JzRDf98aKRu?=
 =?us-ascii?q?Vn8ku82juDyxrf5+BGLEwsiKbWL54szqQtmpYOv0nPBDH6lUTsgKOLckgp9O6l?=
 =?us-ascii?q?4Pn9bLr8vJ+TLYp0hxn+Mqswnsy/Bvw1MhYBX2eF4+Swzr7j8lPjQLVMkPI2lr?=
 =?us-ascii?q?PVsJfAJcQUvqK5AglV3Zg/6xunETuqzNAVkWMaIF9LZh6LlZXlNlLSLPziDPqy?=
 =?us-ascii?q?gUygkDJxyPDHOr3hDI/NLn/GkLr5ebZ96khcyBc8zNxG5JJbFKsBIPTtVU/1rd?=
 =?us-ascii?q?DYCRE4MwqqzOb9E9h9yIweVnyVAqODM6Pdr0WI5uQxLOmIfoMVvyz9K/c96/70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPbHC4H/dmLFuDbXvjn9cMCmMKvgs4TOz3h1yOSz9TZ3CuX6?=
 =?us-ascii?q?0i4jE3Ep6pDYDGRoq1mryOwD+7HoFKZmBBEl2MEW3nd4SYW/gWbyKeOM9hkiEe?=
 =?us-ascii?q?WrinRI8szhWutA78y7p6IevY4CwYtZT/1Ndr4+3fjw099TtxD86FyWGCU3l0nn?=
 =?us-ascii?q?8URz8xxK1/o0t9xUmZ3ah7hPxYE9pT5/RSXwc+NJ7cyfF6Ct/oVgLAeNeJVEip?=
 =?us-ascii?q?QtG8DT4tSdIxxscEY1xhFNW6khDDwy2qDqcPmLyQBJw09aHc02LrJ8lnyXbLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajF?=
 =?us-ascii?q?XmoQZk3ModT950PNVbmuCbs8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgO8nmcKwgxGD2to2LEAzxoDlLgfUXs/e56qHO4?=
 =?us-ascii?q?S080yxqHb0lg17qz5x4UiuaQS/IV3rIYpighry94E0q639LTE9CAvRZufL1AYd?=
 =?us-ascii?q?Mh51dKzX/WuBZjPpO+NaxihkQRcwJsv0zw0RV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk4t1TjvASuFko+83Vm08NZ02?=
 =?us-ascii?q?eG6pXNFgoSVZPxUkA49xVho7HaYy89557b1HF2MKm0tCPC1MwtBOc/1hmgeNJf?=
 =?us-ascii?q?OrueFADuC80aG9SuKOsyllezahILIu9T+7A0Ps+8bPSGxbOkM/xmnDKlimRH/p?=
 =?us-ascii?q?tw0kaN9yp6V+7J0IwJw/Ce3gubSTj8iE2tvdzwmYBBfTsSBHawyTD4BI5NYa1/?=
 =?us-ascii?q?ZYYKCXq0L8Kr3Nl/hp7tVGRe9F6sHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6l1fsIJS7gMoAXEe1aAgljh2l6ljgx6ha?=
 =?us-ascii?q?vahwM3PcQUNVcCfoNWFiVa2wu6GGY85O7pMorCpWXP69YVCcVr7yvR8a3zn/EG?=
 =?us-ascii?q?tZwTAxbyuqtYnhnxxmlGKdK25+rXrYec1qxRbT/sfcReNX3jcdQCl4iD/XBkWz?=
 =?us-ascii?q?PtWz/NWUkYvDvf66V267SpJTdizrx5uatCSn/W1qHQG/n/erl93lCwc6yyz719?=
 =?us-ascii?q?ptVSnStxbzeIrr16e7MeJhYEZoAkTx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNnKIyJj+VnmHwMthZt+6b3gS2iI86cBKFa?=
 =?us-ascii?q?iV4KZFnStzvlq3swbRbeJhkTcazPsk8GQajP0RuAox0iWdBagfHUpCMiztjRiI?=
 =?us-ascii?q?782+o79RZGagarWw0Et+nda8DLCNuA1cWXD5eos8Ei909MlwLFXM0Hjr4IH+ZN?=
 =?us-ascii?q?bQdc4TtgGTkxrYiuhVKZExmeAQiStpJ239pmElxPAhjRN1w566poeHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DECE7qn?=
 =?us-ascii?q?eeA7beHBWQ6EF7r3LUCJCrNmqaJH0YzdVkWRmcK1ZTgAESXDUmgJE5Ehqmy9Dm?=
 =?us-ascii?q?cEd8/joR/EL3qgNQyuJ0MBnySnzQqx2vajcwVZiTNh5W7hxZ6kfRMMye6P9zHi?=
 =?us-ascii?q?5C8p2gqgyNNnKUZwBSAW4VXUyEAkjpPqOy6tnY7+iYGu2+IuPMYbqUrOxRSeyI?=
 =?us-ascii?q?yYiz0od8/DaMK8aPPmRkD/IhwUpORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqCN+mQhDtgKTZFzJwMw2XEyKMY3F4UhCFj?=
 =?us-ascii?q?bD2tEbUGtS7QQ6PcgK5XDxgHayxtMMtE9b4z3g5IOcTDkNP6yqZ4juIpC1dCTV?=
 =?us-ascii?q?Hhmt+mZc0JI2G+NVPLHkWLNK6BJT3E3c73e768SaZLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcdtgj0r2rI0nG3FNG4GPT?=
 =?us-ascii?q?h4ckNAtbmQ7SJegvViFG1N9HtlLe+YmymH6+nUMIoZsfxuAi5sjeJV/Gw6y6dJ?=
 =?us-ascii?q?7CFDXPF1hCrSrtt0r166iOWA1jpnXwRIqjtQgIKLvENiObjW95VaWHbE+g4N4n?=
 =?us-ascii?q?uUCxgQu9RlDdjvsbhKytfTjKLzNCtC89XM8MocHcfULseHMHsnMRXxGT/UDBEK?=
 =?us-ascii?q?TTikNWzEg0xdkfeS9mCar5Qgq5jsnoYORaFfVFAvCvwaDUFlT5Q+J8JbVzUlnL?=
 =?us-ascii?q?rTrskS6XO45E3dTcNbs5SBU7SQBu/jITCxiqNNbB8Fh7j/KNJAGJf83hlaY0d3?=
 =?us-ascii?q?mMzvEkHQUNMF9jVocAIwiFhG7z51XDtgiAredgqx7SpLRraPlRksh147PL0g?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAACGoP1bh0O0hNFjFgUBAQIDAQEIA?=
 =?us-ascii?q?wEBgVUDAQEMAQGCaIECJ5gYgg0UjXOLJgQRHQsIAYRAgxoiNwYNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMQgEQAYFiJIJjAQICAQECdgUBCQEBChQNJQMMBRgxEwWDH?=
 =?us-ascii?q?AGBeQgEAQqnOYhYgUoPgm2JIBeBf4ERghR+gxMLA4IAgxWCBCICnzdVCYIghFy?=
 =?us-ascii?q?KKSMKVYFHjmWNRoxNgXczGggwgycJhX8oiiw+MwEBgQMBAYIKinwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AiAACGoP1bh0O0hNFjFgUBAQIDAQEIAwEBgVUDAQEMAQG?=
 =?us-ascii?q?CaIECJ5gYgg0UjXOLJgQRHQsIAYRAgxoiNwYNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMQgEQAYFiJIJjAQICAQECdgUBCQEBChQNJQMMBRgxEwWDHAGBeQgEAQqnOYh?=
 =?us-ascii?q?YgUoPgm2JIBeBf4ERghR+gxMLA4IAgxWCBCICnzdVCYIghFyKKSMKVYFHjmWNR?=
 =?us-ascii?q?oxNgXczGggwgycJhX8oiiw+MwEBgQMBAYIKinwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="asc'?scan'208";a="139811322"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 11:56:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726349AbeK1GtK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 01:49:10 -0500
Received: from atrey.karlin.mff.cuni.cz ([195.113.26.193]:41128 "EHLO
        atrey.karlin.mff.cuni.cz" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725752AbeK1GtK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 01:49:10 -0500
Received: by atrey.karlin.mff.cuni.cz (Postfix, from userid 512)
        id D882280A04; Tue, 27 Nov 2018 20:50:05 +0100 (CET)
Date: Tue, 27 Nov 2018 20:50:08 +0100
From: Pavel Machek <pavel@ucw.cz>
To: Daniel Jordan <daniel.m.jordan@oracle.com>
Cc: linux-mm@kvack.org, kvm@vger.kernel.org,
        linux-kernel@vger.kernel.org, aarcange@redhat.com,
        aaron.lu@intel.com, akpm@linux-foundation.org,
        alex.williamson@redhat.com, bsd@redhat.com,
        darrick.wong@oracle.com, dave.hansen@linux.intel.com,
        jgg@mellanox.com, jwadams@google.com, jiangshanlai@gmail.com,
        mhocko@kernel.org, mike.kravetz@oracle.com,
        Pavel.Tatashin@microsoft.com, prasad.singamsetty@oracle.com,
        rdunlap@infradead.org, steven.sistare@oracle.com,
        tim.c.chen@intel.com, tj@kernel.org, vbabka@suse.cz
Subject: Re: [RFC PATCH v4 01/13] ktask: add documentation
Message-ID: <20181127195008.GA20692@amd>
References: <20181105165558.11698-1-daniel.m.jordan@oracle.com>
 <20181105165558.11698-2-daniel.m.jordan@oracle.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
        protocol="application/pgp-signature"; boundary="dDRMvlgZJXvWKvBx"
Content-Disposition: inline
In-Reply-To: <20181105165558.11698-2-daniel.m.jordan@oracle.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--dDRMvlgZJXvWKvBx
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi!

> Motivates and explains the ktask API for kernel clients.
>=20
> Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
> ---
>  Documentation/core-api/index.rst |   1 +
>  Documentation/core-api/ktask.rst | 213 +++++++++++++++++++++++++++++++
>  2 files changed, 214 insertions(+)
>  create mode 100644 Documentation/core-api/ktask.rst
>=20
> diff --git a/Documentation/core-api/index.rst b/Documentation/core-api/in=
dex.rst
> index 3adee82be311..c143a280a5b1 100644
> --- a/Documentation/core-api/index.rst
> +++ b/Documentation/core-api/index.rst
> @@ -18,6 +18,7 @@ Core utilities
>     refcount-vs-atomic
>     cpu_hotplug
>     idr
> +   ktask
>     local_ops
>     workqueue
>     genericirq
> diff --git a/Documentation/core-api/ktask.rst b/Documentation/core-api/kt=
ask.rst
> new file mode 100644
> index 000000000000..c3c00e1f802f
> --- /dev/null
> +++ b/Documentation/core-api/ktask.rst
> @@ -0,0 +1,213 @@
> +.. SPDX-License-Identifier: GPL-2.0+
> +
> +=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> +ktask: parallelize CPU-intensive kernel work
> +=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> +
> +:Date: November, 2018
> +:Author: Daniel Jordan <daniel.m.jordan@oracle.com>


> +For example, consider the task of clearing a gigantic page.  This used t=
o be
> +done in a single thread with a for loop that calls a page clearing funct=
ion for
> +each constituent base page.  To parallelize with ktask, the client first=
 moves
> +the for loop to the thread function, adapting it to operate on the range=
 passed
> +to the function.  In this simple case, the thread function's start and e=
nd
> +arguments are just addresses delimiting the portion of the gigantic page=
 to
> +clear.  Then, where the for loop used to be, the client calls into ktask=
 with
> +the start address of the gigantic page, the total size of the gigantic p=
age,
> +and the thread function.  Internally, ktask will divide the address rang=
e into
> +an appropriate number of chunks and start an appropriate number of threa=
ds to
> +complete these chunks.

Great, so my little task is bound to CPUs 1-4 and uses gigantic
pages. Kernel clears them for me.

a) Do all the CPUs work for me, or just CPUs I was assigned to?

b) Will my time my_little_task show the system time including the
worker threads?

Best regards,
								Pavel
--=20
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blo=
g.html

--dDRMvlgZJXvWKvBx
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: Digital signature

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iEYEARECAAYFAlv9n/AACgkQMOfwapXb+vIOfACfQSkhNEr/CWOuRXE0/1FDKN3N
MY8AoMRyDsvjNrgfDTZdc+KV+OpDRgiY
=/Efn
-----END PGP SIGNATURE-----

--dDRMvlgZJXvWKvBx--
