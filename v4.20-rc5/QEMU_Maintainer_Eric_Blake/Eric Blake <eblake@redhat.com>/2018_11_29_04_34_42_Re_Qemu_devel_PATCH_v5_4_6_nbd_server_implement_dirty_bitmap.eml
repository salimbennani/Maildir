Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:15:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5EF745803ED
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 20:35:12 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 20:35:12 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AWvBRnxR5yXmKsD2xdPSBuexnQ9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZByBt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBD+0CM+hWoYbyqFkBogexCwexHOPiyD1Gi3Dr0aA0z+guDxrG0Rc8H98Mqn?=
 =?us-ascii?q?nYsMn5OakQXO2z0aLGzS/Db/RT2Trl54bIaBEhru2RVr9tdcre00ovGB3YhViX?=
 =?us-ascii?q?t4PqJDeV2f4Os2eF9OdgT/yghHMnqw5rvjij3Nsjio7Mho8MzF3P6Ct3wIEwJd?=
 =?us-ascii?q?KiSU57Z8apEJ9Rty6BKYt2Q9kiQ31ytCY90L0Gtoa3fDEUx5Qi2h7TcfuHc5KH?=
 =?us-ascii?q?4h/lSe2fIi94iWp7dL6jhBu+61WsxvD/W8WuzlpHoCpInsPRun0PzxDf9NSLR/?=
 =?us-ascii?q?9n8ku81zuDyRrf5vxHLE06j6bXNZ0sz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vzjYrXnvZ+cK5R0hhvxMqQoh8yzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7kb?=
 =?us-ascii?q?PVvI3HKckYvKK1HQFY34Y55xqiDTqqyNEYkmMGLFJBdhKHlY/pO1TWLfDhE/i/?=
 =?us-ascii?q?hkmsnC52yP/YIL3uHJHNImHYn7fmYLZ97VJTxxQozdxY45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFhs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+SXYo8VvzD9K/cj5/7z?=
 =?us-ascii?q?l3M5nkUdfaax0ZsNdH+4BuhmI1meYXf0htcBEGQKsRQkQO3llV2PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZjMON1aXDH29d5mYQ+xeL2WWI9R9iXoC?=
 =?us-ascii?q?Ur6uTZJn0guh8wrzyr5iJ+yT/TUEtJXlz59s6ujO0B0/6zFwXPmbyHyHGmR9n2?=
 =?us-ascii?q?cUQG0v0aVi5EBw1FqHlLJ1muFVDsB74fRPXQEnc5nGwLthFtrwVwndK8qPU0us?=
 =?us-ascii?q?Wd68ADs8He42luEKakp8HtS4xivO2iesH6QSifmsC5057Lnf3mm5c9hmxnPL0r?=
 =?us-ascii?q?U6iEcOXMpVKXChlLx4sQPUAtiN21yUkrvvf6Ab1y3l8mCFwmyT+kZCX0o4SKjA?=
 =?us-ascii?q?QDUTa1Xbqfz/4UXNSaLoDq4oYSVbzsvXB7FLYZXDiVxFSb+3Nd7aamG8s329CR?=
 =?us-ascii?q?aB2vWHa4+8KDZV5znUFEVRy1Nbxn2BLwVrQ375+28=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AjAACZa/9bhxHrdtBhAxwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVIGAQELAYEwgTmBKYN5iHeLKIINl0KBcxQYAxGBS4YjIjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOIwyCNgUCAxoBBoJcAQIDAQIgBBEOCikDAwECBgEBChgCA?=
 =?us-ascii?q?iIEAgIDAVMGAQwGAgEBAYMcAYIBAQSmMXwzhUCEbIELiwsXgUA/gTiBbX6EPS5?=
 =?us-ascii?q?dgj2CVwKJHwaFf0Q0UI8zCYZ+gy2HAQYYgieHMRCHMoh3j1OBRwGCCzMaCBsVO?=
 =?us-ascii?q?4JsCYsThV4iMYEHHIsfgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AjAACZa/9bhxHrdtBhAxwBAQEEAQEHBAEBgVIGAQELAYE?=
 =?us-ascii?q?wgTmBKYN5iHeLKIINl0KBcxQYAxGBS4YjIjUIDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOIwyCNgUCAxoBBoJcAQIDAQIgBBEOCikDAwECBgEBChgCAiIEAgIDAVMGAQw?=
 =?us-ascii?q?GAgEBAYMcAYIBAQSmMXwzhUCEbIELiwsXgUA/gTiBbX6EPS5dgj2CVwKJHwaFf?=
 =?us-ascii?q?0Q0UI8zCYZ+gy2HAQYYgieHMRCHMoh3j1OBRwGCCzMaCBsVO4JsCYsThV4iMYE?=
 =?us-ascii?q?HHIsfgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,293,1539673200"; 
   d="scan'208";a="53789123"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 20:35:11 -0800
Received: from localhost ([::1]:52200 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSE2g-00006L-KD
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 23:35:10 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36031)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gSE2Q-0008Vl-PM
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 23:35:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gSE2O-00005a-MJ
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 23:34:54 -0500
Received: from mx1.redhat.com ([209.132.183.28]:45620)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gSE2H-0008OG-3i; Wed, 28 Nov 2018 23:34:45 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 189B73086269;
	Thu, 29 Nov 2018 04:34:44 +0000 (UTC)
Received: from [10.3.117.105] (ovpn-117-105.phx2.redhat.com [10.3.117.105])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 14B9E1019637;
	Thu, 29 Nov 2018 04:34:42 +0000 (UTC)
To: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	qemu-block@nongnu.org, qemu-devel@nongnu.org
References: <20180609151758.17343-1-vsementsov@virtuozzo.com>
	<20180609151758.17343-5-vsementsov@virtuozzo.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <7941495f-688d-66d3-6b3f-2575a79137b3@redhat.com>
Date: Wed, 28 Nov 2018 22:34:42 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20180609151758.17343-5-vsementsov@virtuozzo.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.49]);
	Thu, 29 Nov 2018 04:34:44 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v5 4/6] nbd/server: implement dirty bitmap
 export
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, pbonzini@redhat.com, den@openvz.org, armbru@redhat.com,
	mreitz@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 6/9/18 10:17 AM, Vladimir Sementsov-Ogievskiy wrote:
> Handle new NBD meta namespace: "qemu", and corresponding queries:
> "qemu:dirty-bitmap:<export bitmap name>".
> 
> With new metadata context negotiated, BLOCK_STATUS query will reply
> with dirty-bitmap data, converted to extents. New public function
> nbd_export_bitmap selects bitmap to export. For now, only one bitmap
> may be exported.
> 
> Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
> ---
>   include/block/nbd.h |   6 ++
>   nbd/server.c        | 271 ++++++++++++++++++++++++++++++++++++++++++++++++----
>   2 files changed, 259 insertions(+), 18 deletions(-)
> 
> diff --git a/include/block/nbd.h b/include/block/nbd.h
> index fcdcd54502..a653d0fba7 100644
> --- a/include/block/nbd.h
> +++ b/include/block/nbd.h
> @@ -234,6 +234,10 @@ enum {
>   #define NBD_STATE_HOLE (1 << 0)
>   #define NBD_STATE_ZERO (1 << 1)
>   
> +/* Flags for extents (NBDExtent.flags) of NBD_REPLY_TYPE_BLOCK_STATUS,
> + * for qemu:dirty-bitmap:* meta contexts */
> +#define NBD_STATE_DIRTY (1 << 0)

Hindsight is 20:20, so there's nothing we can do about this definition 
now; commit 3d068aff is already released in 3.0.  However, if I had been 
more careful when this was first introduced, I would have negated the 
sense of this bit.  The NBD protocol recommends that a status of all 0 
represent the default state, and when it comes to dirty bitmaps, the 
safest fallback path is to declare the entire image as dirty (the way 
that we have a bit named NBD_STATE_HOLE that is 1 for a hole, but 0 for 
data, because the safest fallback path is to treat the entire image as 
data).

Why does this matter?  Because with the 3.0 hack of qemu-img map with 
x-dirty-bitmap=qemu:dirty-bitmap:FOO (commit 216ee365), if the client 
requests a particular bitmap name but the server does NOT have that name 
present, the client does NOT refuse to connect, but rather acts as 
though bdrv_block_status() treats the entire image as data.  Since the 
hack relies on treating "data":false sections of the disk as dirty, but 
the fallback causes qemu-img map to report "data":true for the entire 
image, relying on the hack will end up seeing NO clusters as dirty, and 
with NO indication that the x-dirty-bitmap= failed to work.

Had we used NBD_STATE_CLEAN (1 for clean, 0 for dirty), we would have at 
least had the safe fallback of treating the entire image as dirty, which 
would result in a full backup (a bit wasteful, but better than not 
backing up any data on the incorrect assumption that the image is clean).

I'm in the process of implementing 'qemu-nbd --list' which will show 
exactly which meta contexts an export supports, so that we can use that 
as a fallback mechanism for a client to check whether the NBD server is 
actually advertising the desired qemu:dirty-bitmap: context prior to 
blindly requesting that context via x-dirty-bitmap.  But even that hits 
a slight snag:

> @@ -924,6 +987,16 @@ static int nbd_negotiate_meta_queries(NBDClient *client,
>           }
>       }
>   
> +    if (meta->dirty_bitmap) {
> +        ret = nbd_negotiate_send_meta_context(client,
> +                                              meta->exp->export_bitmap_context,
> +                                              NBD_META_ID_DIRTY_BITMAP,
> +                                              errp);
> +        if (ret < 0) {
> +            return ret;
> +        }
> +    }
> +

The NBD spec says a client is allowed to issue NBD_OPT_LIST_META_CONTEXT 
with 0 queries in order to learn about all supported contexts, but this 
hunk forgot to advertise qemu:dirty-bitmap:FOO in that case.  My full 
patch series for 'qemu-nbd --list' is coming up soon, and includes a 
patch that works around the 3.0/3.1 flaw by following up with a second 
LIST_META_CONTEXT with 1 query of "qemu:' if the 0-query version didn't 
get any "qemu:..." responses.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

