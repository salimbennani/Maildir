Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 19:49:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3ED7C58046A;
	Thu, 29 Nov 2018 03:19:09 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 03:19:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyqiWkRM5HR4D2gHP4iQl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn+rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bIUAAPYOMvtaoIbzvFsOtRmzCBKwBO/z0DJEmmP60Lck3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMotv6LqESWv2rwabS1zXDd+1Z2THh6IfWaBAqvPaBUq9qfsrX00UgCxnKjk+I?=
 =?us-ascii?q?qYP7OTOVyvoCs3KA4upnT+KgkXIoqwVvrTS12sgsjYzJi5sTx1vZ+yt5x4M1Ks?=
 =?us-ascii?q?e5SE59edOkE4VftzucN4RoRsMuWWZouDw1yrEetp67fTQKyJQ6xxHEcfCIb4+I?=
 =?us-ascii?q?4hf7WOqNPDt0nnVleKiwhxu07EOuyfX8W9Gq3FpWqidJiMTAu34T2xDJ98SKSe?=
 =?us-ascii?q?dx8l2g1DuNzwzf9+5JLV0umabGJJMsw6Q8mocOvUnCBCP6hVj6gamLfUs+4Oeo?=
 =?us-ascii?q?8f7oYrD+q5+cKYB0jgb+P7wwmsywH+s4KBICX2uF9uSm0r3s40n5TK9Njv0sna?=
 =?us-ascii?q?nVqJHaJcIFqa6lGwJZzJov5hKlAzu73tkUg2MLIE9GdR6blYTkOlPDLOj9Dfil?=
 =?us-ascii?q?glSslDlrx+rBPr3kGpjNKnnDkLH8fbdy8kJcyxQ8zcpZ551KDrENOfXzW0H3tN?=
 =?us-ascii?q?PGFB80KBK0w+n5B9VnzI8eWnyAArWfMKzMtV+E/OUvI/ODZIMNojbyN+Al5+Ly?=
 =?us-ascii?q?jX8+gVIdeaip3ZgJZ3yiEfVmPl6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+EIimF5vMRpixgLyd2ye2Bp1WaXpHClCQC3jocJ+IW/cRaC2IJM9hnScJ?=
 =?us-ascii?q?VbygS48nyBGvuxX2y7thLurI5CIYsYjv28Ry5+3WjRsy7yB7D9yB02GRSGF5hm?=
 =?us-ascii?q?EIRzgo06xlokx9zVGD0a5/g/FDEdxT5vVJUho1NJLGzux6DczyVRzFftuTVFmm?=
 =?us-ascii?q?RdCmCykrTt0t298Of1p9G9K6gx/ZxCqqA7gVl7+RCJwu6K3c3WP8J8J8y3bAya?=
 =?us-ascii?q?kggEMqQspJNW26mKF/8xLfCJLOk0Wcj6yqb7gT3DbR9GefymqDpEJYXxR2Uanf?=
 =?us-ascii?q?WXAfZ1HZrdL25k7ZS7+uCLInMhZOyMKYK6tKbMHpgktCRPv5JNveZGexkX+qBR?=
 =?us-ascii?q?mU3rOMcJbqe2IF0SrAEkcEjR4c8WyGNQckACehuHzRDDppGVLrYEPs9O1+pWi/?=
 =?us-ascii?q?Tk81yQGKckJg26C0+h4TmfyTVfcT0qgYtycmrjV+BEy90M7OC9qcuwphe71Rbs?=
 =?us-ascii?q?4n71dZy23VrQx9MYamL6B5mFEedR96v0fv1xVxF4VBntImrHIszApuN62Y1ElN?=
 =?us-ascii?q?eC+f3ZD1IrfXMHX9/Aiza67K3VHTyMqW+qYK6PQ/t1XjvAGoGlA+83l91NlVyX?=
 =?us-ascii?q?+c5pTMDAodSp/xVkc39x5np7DVeCU95oXU1WFyPqmwqDPNx9UpBO49wBa6Y9hf?=
 =?us-ascii?q?KL+EFBP1E8ACHceuLPIlmle3YRMEJuxd77M0MN68ePuA266rO/hgkSmijWRG5o?=
 =?us-ascii?q?B9z02N+zB9Su7Ow5YK3fWY0hGbWDf7iVerqtr3lpxcZTEOAmq/zjDpBY5MZqFo?=
 =?us-ascii?q?YYkHE2avI82tydV4iJ7gQHpY9F+lB1Mb186lYxuSb1rh3QJO0UQbu2ComSy9zz?=
 =?us-ascii?q?ZsiTEmsrKf3DDSw+TlbBcHIG9LS3V4glf2PIe0iMoWXE62YAgzlRup/Fr1yLJf?=
 =?us-ascii?q?pKtiMWbTW0BIfy7tImFmU6uwsKeCYsFV5JMptyVXTPqzYVSARrHhpBsa1jvpH3?=
 =?us-ascii?q?FCyzAjazGqppL5kgR6iWKcNnpyrGDVedptxRfZ/9HcQf9R3jwbRCh3kzXXB168?=
 =?us-ascii?q?P8W38tWQjZvMrue+V2e5XJ1JbSbr1Z+AtDe85WByAx2wheqzmt7kEQg9yyP7zM?=
 =?us-ascii?q?NlVSbLrBb9ZInkyaK6PPljfklpAl/89sV7Fpt/kos2mJEfx3waio+J8noAlGf5?=
 =?us-ascii?q?Kc9b1r7mbHoRWT4LxMbY4Qj/101kNH6JxYP5VnOGz8tlZtm6ZH4W2y0n48BLDq?=
 =?us-ascii?q?eU8KJLnS9vrlWkqgLRZOB3ni0Bxvs29H4an+YJtRIuziqHA7AeB0lYPTH2mBSO?=
 =?us-ascii?q?4NCzt6FXZGepcbit20tyh9GhDLeeog5CXHb1YIstHSh17s9nKlLDzGXz6p34eN?=
 =?us-ascii?q?nXdd8TsxyUkxTagORPJpM+iOEKhTZ5NmLnpnIq1fQ7jRN10JG+vYiHLXht/a2j?=
 =?us-ascii?q?Dh5ZMD31e90c+jX3galCmcaW2pilHo99FTUTQJvoUfWoHSoOtfTgMgaCCjw9pW?=
 =?us-ascii?q?2dGbrCBg+f80ZmomnLE5CqMXGXOXYYwc9jRBmbOExQngQUUC8mkZ4+EwCg3Nbh?=
 =?us-ascii?q?f1th5jAN+l74rQNBxflyOBn4VmffuR2kajMpSJWEKBpW7wdC51raMMCE7+JzGT?=
 =?us-ascii?q?1Y8YOlrACXNmObYAFIB3kTWkOYH1DjIqWu5d7Y/uiaHOW+KuXBYa6UpexCTfuI?=
 =?us-ascii?q?xo+v0oh7/zaKLMqPJWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKdVu+xergaeaKu6fniB5JSxD1pMLw3/Ix6MS3FoTiyFo?=
 =?us-ascii?q?ajmsHq4MtS/LTKLMhKBXCwQXZD90NMtN96g8xBVCOdbHitPp0b51lv41BElEVV?=
 =?us-ascii?q?zimcGpZNYGI2KnNFPAC0aEKq6GJSDQw8zsZaO8SLtQjPhbthGquDabFVPjMSqH?=
 =?us-ascii?q?lzXzSx+vNuRMhjmBPBNCoIG9bgptCW/7Qd38dx20K8V3giM2wLEugnPKNHURMT?=
 =?us-ascii?q?x9c0NLs72R4jlUgvR5G2xd8HVlKfOIlDqe7+ndMpwWq+dkAjxol+JG53Q306dV?=
 =?us-ascii?q?7CBBRPBvhCTetMJho1G4nemJ0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxESrdt/FtLvo7xQysTIlK/rKDZN6dTU/c4dB8jSMM2GMXohPgDvGD7bFwYF?=
 =?us-ascii?q?ST+rNWfCh01Siv2S93uVroQkpZjogpYBVrhbVFlmXs8dX0dvAd0GLL8vB3Uji7?=
 =?us-ascii?q?HfxPEB5H+3qlH1Q8NV9sTDUfSdBPzpACyUgblNe10DxraufqoJMYiu90VkInJz?=
 =?us-ascii?q?hpzHHVbdR5gZriRnKAQ9ul1A9mRzVEU0wUvubg7r63gWQ63n1iUqgxdzNLx+vA?=
 =?us-ascii?q?zn5E06cx+T/HM9?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACTyv9bh0O0hNFlGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgmmBAieMEV+JfoErgiFojQyJOoFzEgEBGA0?=
 =?us-ascii?q?GAYdzIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkEwYBATcBB?=
 =?us-ascii?q?QkCCiElAwwFFDUBF4McAYIBBAEKpSGBbDOCdgEBBYEwAYV3AwWMFoFXP4ERgl0?=
 =?us-ascii?q?1gwUZAgOHOYsbhA0RZJAIBwKCHQSEXYYYhBEjCgKBTo9CLIhMgQODXIgFgkkCB?=
 =?us-ascii?q?AIEBQITAYFGgg1NBB+DPIIbDBcSgziFFIVCbwEJewEBjTgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAACTyv9bh0O0hNFlGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgmmBAieMEV+JfoErgiFojQyJOoFzEgEBGA0GAYdzIjQJDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkEwYBATcBBQkCCiElAwwFFDU?=
 =?us-ascii?q?BF4McAYIBBAEKpSGBbDOCdgEBBYEwAYV3AwWMFoFXP4ERgl01gwUZAgOHOYsbh?=
 =?us-ascii?q?A0RZJAIBwKCHQSEXYYYhBEjCgKBTo9CLIhMgQODXIgFgkkCBAIEBQITAYFGgg1?=
 =?us-ascii?q?NBB+DPIIbDBcSgziFFIVCbwEJewEBjTgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="42800263"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 03:19:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728144AbeK2WYF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 17:24:05 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:34840 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727262AbeK2WYF (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 17:24:05 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wATBDZ70071893;
        Thu, 29 Nov 2018 11:18:30 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=date : from : to : cc
 : subject : message-id : mime-version : content-type : in-reply-to;
 s=corp-2018-07-02; bh=x95QraatNv2DrpxT4h5GMhY0iwPXD1GBC8siRKGxmXE=;
 b=fJt7DuHlXvFcKQcimnTav1w21PdqhOJeRcNTxbyhAeNTvDP8RPiFnFg94GQ1RN6oOrIl
 37Q8MNG9nkOswjgqrrJYnqR+QDCeCeUYcOJLl6yiYB7vrtlGGgILZbH1Hu27bfQLSsjs
 HhVFApt2QG32G0WH6xoMHzhwqQLlUP6XEG2KOlO1zumNNeHAWNVeV5qWyaSnmlb+wf5a
 XK3lDhMhHLBl1Ygxga49ROFN02PONOpOptZuBL4kse/CXZT8yuR/DHPRLKLxWXP2Vtcn
 VUznhkum0ns6uRejD10AvRYCQoZnN3IgLu0UQZ5Ku/WvqYtfFHMR2Npq8pma3N4vJv1f Ag== 
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
        by userp2120.oracle.com with ESMTP id 2nxy9rfjp6-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 29 Nov 2018 11:18:30 +0000
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
        by aserv0021.oracle.com (8.14.4/8.14.4) with ESMTP id wATBITF4015960
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 29 Nov 2018 11:18:29 GMT
Received: from abhmp0005.oracle.com (abhmp0005.oracle.com [141.146.116.11])
        by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id wATBIORO001814;
        Thu, 29 Nov 2018 11:18:24 GMT
Received: from unbuntlaptop (/197.157.34.169)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Thu, 29 Nov 2018 03:18:23 -0800
Date: Thu, 29 Nov 2018 14:18:11 +0300
From: Dan Carpenter <dan.carpenter@oracle.com>
To: kbuild@01.org, Waiman Long <longman@redhat.com>
Cc: kbuild-all@01.org, Tejun Heo <tj@kernel.org>,
        Li Zefan <lizefan@huawei.com>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Jonathan Corbet <corbet@lwn.net>, cgroups@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-doc@vger.kernel.org,
        Roman Gushchin <guro@fb.com>, Jens Axboe <axboe@kernel.dk>,
        Andrew Morton <akpm@linux-foundation.org>,
        Dennis Zhou <dennis@kernel.org>,
        Shakeel Butt <shakeelb@google.com>,
        Waiman Long <longman@redhat.com>
Subject: Re: [PATCH v4 1/5] cgroup: subtree_control bypass mode for
 bypassable controllers
Message-ID: <20181129111811.GP3073@unbuntlaptop>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1542736289-31338-2-git-send-email-longman@redhat.com>
User-Agent: Mutt/1.9.4 (2018-02-28)
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9091 signatures=668686
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1811290098
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Waiman,

Thank you for the patch! Perhaps something to improve:

url:    https://github.com/0day-ci/linux/commits/Waiman-Long/cgroup-Introducing-bypass-mode/20181123-030552
base:   https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git for-next

smatch warnings:
kernel/cgroup/cgroup.c:4893 css_create() error: we previously assumed 'parent' could be null (see line 4864)

# https://github.com/0day-ci/linux/commit/8b68fd4330e043645667a5d3306398f8f88f9ff2
git remote add linux-review https://github.com/0day-ci/linux
git remote update linux-review
git checkout 8b68fd4330e043645667a5d3306398f8f88f9ff2
vim +/parent +4893 kernel/cgroup/cgroup.c

a31f2d3ff kernel/cgroup.c        Tejun Heo        2012-11-19  4840  
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4841  /**
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4842   * css_create - create a cgroup_subsys_state
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4843   * @cgrp: the cgroup new css will be associated with
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4844   * @ss: the subsys of new css
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4845   *
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4846   * Create a new css associated with @cgrp - @ss pair.  On success, the new
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4847   * css is online and installed in @cgrp.  This function doesn't create the
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4848   * interface files.  Returns 0 on success, -errno on failure.
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4849   */
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4850  static struct cgroup_subsys_state *css_create(struct cgroup *cgrp,
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4851  					      struct cgroup_subsys *ss)
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4852  {
d51f39b05 kernel/cgroup.c        Tejun Heo        2014-05-16  4853  	struct cgroup *parent = cgroup_parent(cgrp);
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4854  	struct cgroup_subsys_state *parent_css = NULL;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4855  	struct cgroup_subsys_state *css;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4856  	int err;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4857  
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4858  	lockdep_assert_held(&cgroup_mutex);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4859  
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4860  	/*
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4861  	 * As cgroup may be in bypass mode, need to skip over ancestor
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4862  	 * cgroups with NULL CSS.
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4863  	 */
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20 @4864  	for (; parent && !parent_css; parent = cgroup_parent(parent))
                                                                               ^^^^^^^^^^^^^^^^^^^^^
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4865  		parent_css = cgroup_css(parent, ss);

When we exit this loop it means either parent is NULL or parent_css
is non-NULL.

8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4866  
1fed1b2e3 kernel/cgroup.c        Tejun Heo        2014-05-16  4867  	css = ss->css_alloc(parent_css);
e7e15b87f kernel/cgroup.c        Tejun Heo        2016-06-21  4868  	if (!css)
e7e15b87f kernel/cgroup.c        Tejun Heo        2016-06-21  4869  		css = ERR_PTR(-ENOMEM);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4870  	if (IS_ERR(css))
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4871  		return css;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4872  
8b68fd433 kernel/cgroup/cgroup.c Waiman Long      2018-11-20  4873  	init_and_link_css(css, ss, cgrp, parent_css);
a2bed8209 kernel/cgroup.c        Tejun Heo        2014-05-04  4874  
2aad2a86f kernel/cgroup.c        Tejun Heo        2014-09-24  4875  	err = percpu_ref_init(&css->refcnt, css_release, 0, GFP_KERNEL);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4876  	if (err)
3eb59ec64 kernel/cgroup.c        Li Zefan         2014-03-18  4877  		goto err_free_css;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4878  
cf780b7dc kernel/cgroup.c        Vladimir Davydov 2015-08-03  4879  	err = cgroup_idr_alloc(&ss->css_idr, NULL, 2, 0, GFP_KERNEL);
15a4c835e kernel/cgroup.c        Tejun Heo        2014-05-04  4880  	if (err < 0)
b00c52dae kernel/cgroup.c        Wenwei Tao       2016-05-13  4881  		goto err_free_css;
15a4c835e kernel/cgroup.c        Tejun Heo        2014-05-04  4882  	css->id = err;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4883  
15a4c835e kernel/cgroup.c        Tejun Heo        2014-05-04  4884  	/* @css is ready to be brought online now, make it visible */
1fed1b2e3 kernel/cgroup.c        Tejun Heo        2014-05-16  4885  	list_add_tail_rcu(&css->sibling, &parent_css->children);
15a4c835e kernel/cgroup.c        Tejun Heo        2014-05-04  4886  	cgroup_idr_replace(&ss->css_idr, css, css->id);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4887  
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4888  	err = online_css(css);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4889  	if (err)
1fed1b2e3 kernel/cgroup.c        Tejun Heo        2014-05-16  4890  		goto err_list_del;
944196278 kernel/cgroup.c        Tejun Heo        2014-03-19  4891  
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4892  	if (ss->broken_hierarchy && !ss->warned_broken_hierarchy &&
d51f39b05 kernel/cgroup.c        Tejun Heo        2014-05-16 @4893  	    cgroup_parent(parent)) {
                                                                                          ^^^^^^
We dereference parent inside the function, but I don't know for sure
if this is reachable when "parent" is NULL.

ed3d261b5 kernel/cgroup.c        Joe Perches      2014-04-25  4894  		pr_warn("%s (%d) created nested cgroup for controller \"%s\" which has incomplete hierarchy support. Nested cgroups may change behavior in the future.\n",
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4895  			current->comm, current->pid, ss->name);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4896  		if (!strcmp(ss->name, "memory"))
ed3d261b5 kernel/cgroup.c        Joe Perches      2014-04-25  4897  			pr_warn("\"memory\" requires setting use_hierarchy to 1 on the root\n");
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4898  		ss->warned_broken_hierarchy = true;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4899  	}
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4900  
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4901  	return css;
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4902  
1fed1b2e3 kernel/cgroup.c        Tejun Heo        2014-05-16  4903  err_list_del:
1fed1b2e3 kernel/cgroup.c        Tejun Heo        2014-05-16  4904  	list_del_rcu(&css->sibling);
3eb59ec64 kernel/cgroup.c        Li Zefan         2014-03-18  4905  err_free_css:
8f53470ba kernel/cgroup/cgroup.c Tejun Heo        2018-04-26  4906  	list_del_rcu(&css->rstat_css_node);
8f36aaec9 kernel/cgroup/cgroup.c Tejun Heo        2018-03-14  4907  	INIT_RCU_WORK(&css->destroy_rwork, css_free_rwork_fn);
8f36aaec9 kernel/cgroup/cgroup.c Tejun Heo        2018-03-14  4908  	queue_rcu_work(cgroup_destroy_wq, &css->destroy_rwork);
6cd0f5bba kernel/cgroup.c        Tejun Heo        2016-03-03  4909  	return ERR_PTR(err);
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4910  }
c81c925ad kernel/cgroup.c        Tejun Heo        2013-12-06  4911  

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
