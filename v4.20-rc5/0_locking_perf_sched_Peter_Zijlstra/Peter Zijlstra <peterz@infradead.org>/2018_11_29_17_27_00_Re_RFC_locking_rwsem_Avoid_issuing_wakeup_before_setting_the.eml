Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:48:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A2720580213;
	Thu, 29 Nov 2018 09:30:30 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 09:30:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArSYpoheMqyGWGo9MyX91or9vlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YhGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQAohmxCge3BOP3yDJFnWP20K4m3+g9DQ3LxhEsEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPivwqbW0TXMcelW0ir+54jJcBAhpeqMXa5qccXL1EIiEBvFgUuM?=
 =?us-ascii?q?qYP7JTOU1/8As2md7+puT+KgkXMopB9rrTey3MssjZPJho0Mx13C6C53w541KM?=
 =?us-ascii?q?WmREJnZdOoCoZcui+EO4dsX88vQH1ktDw7x7AEoZK3YicHxI46yxPRdfCLaZaE?=
 =?us-ascii?q?7g/hWeqLPDt0mG5pdbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gT1xzc9MeHUO?=
 =?us-ascii?q?Fx/kS/1jaV0QDc9OVELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gauMekk59OWk?=
 =?us-ascii?q?9f7rbqjlq5OALYN5iwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj+Uz5QLNXjvw5i6?=
 =?us-ascii?q?XZs47VJd4dpqGnBw9Zy4Ej6hi5Dzi4ytQVhmcHLF1bdxKdlYTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgijBrx+rJPrH5GJXCMmDDkKv9fbZ680NczAszzdNB6J5OBbABPen+WkvwtN?=
 =?us-ascii?q?zeEx84PBa4w+fhCNVhyIweXXiDDbOeMKPXqVWI/P4gI/GQZI8JvzbwM/gl6OTv?=
 =?us-ascii?q?jX8lg1AderOl3ZsKaH+iGPRmLF6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+EIimF5vMRpixgLyd2ye2Bp9WZmdYBVyWEnfocIOEW/ELaC+JJs9hkzoE?=
 =?us-ascii?q?VaWuSoM71BGushP6xKRjLubO5iIYspfj3sBv5+LPjREy6SB0D8OF3m6XVGF0nm?=
 =?us-ascii?q?QIRzws0KBlu0N9yEyO0ax5g/xeCNxS6OlFUgY8NZ7A0eN6D8r+VR7GfteMUFym?=
 =?us-ascii?q?WMmpASktTtItxN8De0V9FM+kjhzZ2yqqAqUal7qEBJEv9qLc3n7xJ9tyynrc1a?=
 =?us-ascii?q?khiUUmTdVLNWG8mqF/8A3TDZbTk0qFj6aqabgc3CnV+Wie12WOol9XXBRwUarf?=
 =?us-ascii?q?W3AffVXZrdL+6kPGTL+uDLAnPxBFyc6DLKtKd9LogU9HRPflJNTRfWaxl32sCh?=
 =?us-ascii?q?aPw7OGdJDqdHkF3CXBFEgElBge8mucOgggGCituWLeAyZoFVL0fUzs9/JzqHe6?=
 =?us-ascii?q?Tk8y0gGLYFdt17uz+h4Jm/OcT+kf0a4DuCcksz90Bkqy38rKC9qcoApsZLlcYd?=
 =?us-ascii?q?I44FdAyWLZtwx8Moa8L6x4gV4eaQB3v0Lo1xV4EYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6PkgsVrjuB+mF0U8/HRnydVayG?=
 =?us-ascii?q?ac6YjQAwoUUpLxVVg3+gN+p7HbZCk9+ozV2WdtMamyrj/NxdYpCPE5xRanetdV?=
 =?us-ascii?q?KLmEGxPqE80GG8iuL/Qnmli0bh4eIO9e7q81P8O8ePuA166mJ+JgnDOgjWRa74?=
 =?us-ascii?q?FxyEOM9yxgSuHW25YJ2e2X3gyCVz3klleurtj3mZxYZTEVBme/0ynkC5JLaa1o?=
 =?us-ascii?q?YIkLDn2iI8upydVkhp7hQmJX+0SnB1wbxsCpYx2Sb1rm0A1U1EQXp2GnmCSiwz?=
 =?us-ascii?q?x1lTEpsrSQ3CjUz+v+cxoHP3ZBRHN+glf0PYi0k9caUVCobggojhek5Vz2x7NG?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdTGloI/5nx95iGKaNnpzt2DWecJzxRfe4tzTW/hR0yECRCl5jznXG1e9?=
 =?us-ascii?q?M8Oo/dWSi5fMrOS+W3i9WZ1UdCnh1ZmAuzej5W12HR2/mOi+m939Hgg9yyP71d?=
 =?us-ascii?q?hqVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr9bHUXRD4H2d7V4BX/101lIXKE3Ib5VnSbwst8aNi2eGIW2iQh789UDK?=
 =?us-ascii?q?eY9qBLnSxwolCgtwLefeB9nisByfsp8HMahuAJuAk3wSmHDLEdA1JYPTDymBSS?=
 =?us-ascii?q?9N+xsr9XZGm0fLi01Up+m82hDb6YrgFdXnb5ZoktHStq4spjN1LM1WX56pv4d9?=
 =?us-ascii?q?nIcdITqhqUng/cj+hSLZI9jPsLijBhOWLgpn0l0O87gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlHykIuvTgMwaODScwqn?=
 =?us-ascii?q?OGGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6zAT/FH4rwVDyvlyOxnjSGvfpxqoajQpSJiZNhVW9RpP50PUMcyY8+JyED?=
 =?us-ascii?q?tU/pynrAyRNGObYx5EAn0OWkyBH1rjJKWh5cHc8+iEAeqzN/vPYbKTqexHSveH?=
 =?us-ascii?q?35Sv3pF9/zaLMMWPMWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKdVv9A63gaeANO6QhTx1KTVC1pMLyn/H1qIf3EMJiyx1?=
 =?us-ascii?q?czmtELIAtTPCTa7Km69XCQIbZD13NMdS86082QxNM9bBitzpzr54kuI1C1BdWF?=
 =?us-ascii?q?P7h8GmftYKLH+9NV/dAEaLNa+LJTnKw8HxfKO9RqdcjORStx2spzmbF1XvMSiE?=
 =?us-ascii?q?lznsTxqvK/1DjDmHPBxCv4GwagptCWnmTN78dhK3KsN4jT0ozr0ynX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyOB5enCNpkWqedrAjhzl+9C4HU10b1V?=
 =?us-ascii?q?7CRFRPxzgCTTr95urEugkumA0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxFZ7+diX+LmuqVZzJDrk6T8YGNG9NTb+MIaL9LZJMKOLDwqNh+/SxDOCw5Q?=
 =?us-ascii?q?dTO3OHuXtU1flOqO7HTd+oA3tpX2irIPTLFBXVA4H/9cDV5qSo9RaKxrVy8pxO?=
 =?us-ascii?q?bIxPUD4mCz+VyIHJ1X?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAABFIQBch0O0hNFlGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMEV+LKYINFJcwgjIBhECDNCI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiQLAQ0BATcBBAEJAQEKGAklA?=
 =?us-ascii?q?wwFGDEYgxyBeggFpWuBbDOCdgEBBYcoCIwWF4FAP4ERgmQuhQGDNYImiQmXEgo?=
 =?us-ascii?q?JgiGPBgsYkRyaFIINTTAIO4Jsghs1iEyFQD8ygQUBAY06AQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAABFIQBch0O0hNFlGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMEV+LKYINFJcwgjIBhECDNCI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmEBAQEBAgEBAiQLAQ0BATcBBAEJAQEKGAklAwwFGDEYgxyBegg?=
 =?us-ascii?q?FpWuBbDOCdgEBBYcoCIwWF4FAP4ERgmQuhQGDNYImiQmXEgoJgiGPBgsYkRyaF?=
 =?us-ascii?q?IINTTAIO4Jsghs1iEyFQD8ygQUBAY06AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="140126338"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 09:30:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730162AbeK3EdP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 23:33:15 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:45106 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728535AbeK3EdP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 23:33:15 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Transfer-Encoding
        :Content-Type:MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:
        Sender:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
        Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=os9LWZxORjOd/tSCP8UbHCUV3o58F4LdNEMdCpDfIqI=; b=MKXD7X8Yb8Bk3cgW+OVUQRZMq4
        2b0dG5XiDJa+gXg0UucC1Sy/aj4A8tGNlu96oMdR/DI+JAVf7BWEu2OMoPWsMXWPCyN2X8JTUsu+2
        5gNxx7GnfgFKvHifd5X+HAigtC6NAbpBHbMOZJ8sdULWx98Yh7zSFbFvVc/X5O0Kz9gTi3IPWwPO/
        b/ZlTpYQbXPbqLISsUQEJkg/1PHYVWakgXTh9UcuIWqOLN9LfgHk82jHKtkOA72PQv3i3/JZsxb9b
        X54ybf007wP5BuExT6svVBN8tcOGgDSplxB7GgpRonMui/20gIr+BmZdNLnggMREzLPxFHqvHPHag
        3arNxnlw==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gSQ5e-0001Nk-Fb; Thu, 29 Nov 2018 17:27:02 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
        id AB3F72029FD58; Thu, 29 Nov 2018 18:27:00 +0100 (CET)
Date: Thu, 29 Nov 2018 18:27:00 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: Waiman Long <longman@redhat.com>
Cc: Yongji Xie <elohimes@gmail.com>, mingo@redhat.com,
        will.deacon@arm.com, linux-kernel@vger.kernel.org,
        xieyongji@baidu.com, zhangyu31@baidu.com, liuqi16@baidu.com,
        yuanlinsi01@baidu.com, nixun@baidu.com, lilin24@baidu.com,
        Davidlohr Bueso <dave@stgolabs.net>
Subject: Re: [RFC] locking/rwsem: Avoid issuing wakeup before setting the
 reader waiter to nil
Message-ID: <20181129172700.GA11632@hirez.programming.kicks-ass.net>
References: <1543495830-2644-1-git-send-email-xieyongji@baidu.com>
 <20181129131232.GN2131@hirez.programming.kicks-ass.net>
 <5598cd71-c3c8-d6ef-eb30-777cf901a2ef@redhat.com>
 <20181129160627.GU2131@hirez.programming.kicks-ass.net>
 <8cc45695-b325-a219-8b46-d5da6ddfdd63@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <8cc45695-b325-a219-8b46-d5da6ddfdd63@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 12:02:19PM -0500, Waiman Long wrote:
> On 11/29/2018 11:06 AM, Peter Zijlstra wrote:

> > Why; at that point we know the wakeup will happen after, which is all we
> > require.
> >

> Thread 1                                  Thread 2      Thread 3
> 
>     rwsem_down_read_failed()
>  raw_spin_lock_irq(&sem->wait_lock);
>  list_add_tail(&waiter.list, &wait_list);
>  raw_spin_unlock_irq(&sem->wait_lock);
>                                                         __rwsem_mark_wake();
>                                                          wake_q_add();
>                                           wake_up_q();
>                                                          waiter->task =
> NULL; --+
>  while (true)
> {                                                                 |
>  
> set_current_state(TASK_UNINTERRUPTIBLE);                                     
> |
>   if (!waiter.task) //
> false                                                    |
>      
> break;                                                                    |
>  
> schedule();                                                                  
> |
>  }                                                                       
> <-----+
>                                                         wake_up_q(&wake_q);

I think that thing is horribly whitespace damanaged. At least, it's not
making sense to me.

> OK, I got confused by the thread racing chart shown in the patch. It
> will be clearer if the clearing of waiter->task is moved down as shown.
> Otherwise, moving the clearing of waiter->task before wake_q_add() won't
> make a difference. So the patch can be a possible fix.
> 
> Still we are talking about 3 threads racing with each other. The
> clearing of wake_q.next in wake_up_q() is not atomic and it is hard to
> predict the racing result of the concurrent wake_q operations between
> threads 2 and 3. The essence of my tentative patch is to prevent the
> concurrent wake_q operations in the first place.

wake_up_q() should, per the barriers in wake_up_process, ensure that if
wake_a_add() fails, there will be a wakeup of that task after that
point.

So if we put wake_up_q() at the location where wake_up_process() should
be, it should all work.

The bug in question is that it can happen at any time after
wake_q_add(), not necessarily at wake_up_q().
