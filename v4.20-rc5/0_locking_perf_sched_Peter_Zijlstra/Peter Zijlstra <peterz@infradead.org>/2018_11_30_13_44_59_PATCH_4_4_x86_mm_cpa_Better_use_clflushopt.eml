Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:18:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2E4FD580224;
	Fri, 30 Nov 2018 06:06:30 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 30 Nov 2018 06:06:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ADzL+5BEeJApEqK9W7oVSiZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8iybnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA6/m7ZhMx+grxGrhKvqBNw35PbYJqNNPd8Za7dYc8WSGRdUspNTSFMAIWx?=
 =?us-ascii?q?ZJYPAeobOuZYqpHwqUEQohuiGwasHv7kxTxJhn/02a06yPghERvc0wc9GN8OqG?=
 =?us-ascii?q?rbrMnrO6cIUOG416jIzTPNb/NMwzjy9ZbHfQo8rv2WWrJwa8XRxFApGgjYjVuQ?=
 =?us-ascii?q?sZToMy2J2ukJqWSX8uRtWfy1h2I6qAx9viKjy8Yuh4XRmI4YxUrI+Th3zYorP9?=
 =?us-ascii?q?G0VlN3bNy+HJdNqy2WK417Sd44TW5yoiY10LgGtIa7fCcUzJQnwAbSa+KIc4eW?=
 =?us-ascii?q?+BLvTuWRLilihHJjZr2/gwy+8U+6yu3zTsW00VBKoTRZktTUqHwByxje5tKaRv?=
 =?us-ascii?q?Zz4EutwyuD2gPP5u1eIE05l7LXK5s7zb4xkpoTv17DHijzmEjuiK+Wd0Mk+vWn?=
 =?us-ascii?q?6uj+YbXpuIWcN4lqhQH6K6guncK+AeImPQgURGWb5+u826P5/UHjQ7VFkOc2kq?=
 =?us-ascii?q?/Hv5DeP8gbobS5AwBN3oY59xm/Fyum0MgfnXQfKFJFeRGHgJbzN1DBPfD1FvO/?=
 =?us-ascii?q?g1WqkDd2yPHKJLzhApPRLnfdlLftZ6py60lZyAAr19BQ+4pUCq0dIPL0QkLxtM?=
 =?us-ascii?q?bXDh4lMwOuxObrEtV91p4EVmKJDa+UK6fSsV6O5uIyLOiAfo4VuDDhK/c74/7i?=
 =?us-ascii?q?l2M2mVgYfaOxx5sYdGi4Huh6I0WeeXfsgNABHnkQsgo9S+zqjluCUTlIana2Xq?=
 =?us-ascii?q?I84Cw7CY28AYfCQICtnKKO3COhEpJKYWBGD0iGEW30eIWcR/cMdCWSL9d7nTwf?=
 =?us-ascii?q?VbihTIwh2Qu0tADgybpqNe7U+iwetZL+29l5/ezTlRcu9TNqC8SRyX2CT2Zxnm?=
 =?us-ascii?q?kQXT85wLh/oVBhyleEyaV4gOZXFdpJ6/NNUwc1L5jcz+NhBtD2WwLBeMqJSVm8?=
 =?us-ascii?q?TtWnBzExUsw+w9sUb0lhHNWiiwjJ3zC2DL8Ni7yLGJs0/7rB0HfrOcZy1WzK1K?=
 =?us-ascii?q?k7gFkgWctAK2umiql79wjQAo7Jl16Ul6KrdaQawS7M+32PzWuIvEFETgFwVb/J?=
 =?us-ascii?q?UmwYZkvTtd75/F/NT6eyCbQ7NQtM0dONJbFUatL3l1lGRO3sONLFY22vnWe9Hh?=
 =?us-ascii?q?KIxrKKbIr3dGQRxiTdCE4Ykw8N+XaKLxQxBiCko2jGFjxhCUrvY1/w8el5sH67?=
 =?us-ascii?q?Uk40zwSNb01917q0+gQZheCGR/MUxLIEvCYhqzN7HFum29LWCtyApxdufalGYN?=
 =?us-ascii?q?M95ktH2nzdtwBnIpOgKKVijEYEcwtrp0Puywl3CoJYnMcwqHMl0gVzJryY0V9b?=
 =?us-ascii?q?bDyYwI3/NafRKmnx+xCvdbXb2lXf0NaQ56cO5+40q1TlvAG1CEUi929r3MVS03?=
 =?us-ascii?q?uZ/p/KFhYdUYrtUkYr8Bh3v7HbYjQn64zIz3FtMKm0vSXE29ImH+Ylzhegf9FC?=
 =?us-ascii?q?MKKLDgPyEssaB9SwJ+wugVSmchUEPOVK/q4uI8ymb+eG2LKsPOt4hjKmjHhI75?=
 =?us-ascii?q?pn0k2R8CpwUOjI0Igfw/GZxweISy3zjFO8vc/pg4BEYjcSE3G7ySjlAo5Re6Jz?=
 =?us-ascii?q?cZwKCWeoP8242NF+i4TxVH5f8V6pH0kG19OxeRqOc1z92hVd1EQWoXC9mSq01S?=
 =?us-ascii?q?d0kywvrqeE2CzOwuLidAcIO2JRRWlii0vsLpawj9wAQEeoaA0pngO/5Unm36hb?=
 =?us-ascii?q?uLh/L27LTEdKZSf2NWJiUqi3traYeM5A8pAosSZWUOS6f1+aTKXwox8b0yPlAm?=
 =?us-ascii?q?tfyyo3dzCsupXlgRN6jHiRI2p0rHrcYctw3wvQ5MTARf5N2ToLXCl5hiPQBlSm?=
 =?us-ascii?q?Pdmp/NOUmozHsuC/UWKhS5JSfTPqzYOGqCu0+2lqDQejkPC0n93tCRI63jPj19?=
 =?us-ascii?q?l2SSXIqw7xYorx2KS7K+5nflRoC0X668p1AYx+loowhJcN2XkVnJmV/HwHkXvt?=
 =?us-ascii?q?PtVfw67xcH0NRTsTyd7P/AflwFFjLm6Ox4/hU3Wdw8hhaMOgbmIYxC099NxKB7?=
 =?us-ascii?q?mO7LNfgyR1uFW4oBnVYfh8mDcd1PQv5GQbg+EPpAoi0CGdDqoOEklfOCzmjw6I?=
 =?us-ascii?q?4MymrKVLeGavdqC91FZ5ndCkFr2DoxtTWHDkepc5Bi9w795yMFbN0H3194Hld8?=
 =?us-ascii?q?PcbdMVth2IjRjAi/JZJ442lvoPnSBnI37yvWU5y+4nihxjxYq1s5KAK2Vp4aK1?=
 =?us-ascii?q?GBpYNiDuasMX+zHti7ten8mM04CuGJVhBisEXJ/yQf20FzISsOztNxySHz0ktn?=
 =?us-ascii?q?ebBb3fEBed6Eh8qnLADYurO2uLJHUDztViWRqdJFFZgA8ORzU3hZo5FgGsxMz8?=
 =?us-ascii?q?f0Z1/DER5ljkqhRSzuJkLQXwUmDapA2wcDc7VICfLAZK7gFF/0rUMcue7v9qHy?=
 =?us-ascii?q?FF5JKhqhaBKnecZwROAmEEQUiEB1HlPrmz6tjM6emYBuyiL/TQZbWCs/BRV/CN?=
 =?us-ascii?q?xZi3yItp4y6MNtmTPnllF/A72lRMXXF6G8TamjUDUS8XlzjKb86Uuhi84DB3rt?=
 =?us-ascii?q?uk/fTvWQLv45aPCrRIPdVu/RC2nbmMN+qKiCllLjZY04sGxWXUx7gHwF4SlyZu?=
 =?us-ascii?q?eiG3HrQdriHNVrzfm69NAx4faiN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDL38D3YaamRbJMlulbqx2wtiidE0L4OjSD?=
 =?us-ascii?q?lj/pVw2gMO1WjSGbOgBet5+5chp3FWfjS9fmYAWhMNBrlT023aE0hnTSOG8cKz?=
 =?us-ascii?q?d8dUZNrryW7SxAg/R/G3ZO7nxqLeSfnyaZ7u/YKosZsPdxAyR0kf5a72o+y7dP?=
 =?us-ascii?q?8C5EQ/l1y2PuqYtiqk+r1OmGzCFqVjJPrCpGgMSAukAmcaHE6p5oWnve+h8Jq2?=
 =?us-ascii?q?KKBFBCv9Z5B8f9k6FWxMLGmK/6JHFF6d2H09EbAp3sJd6KKjITMBjtAyLOBUNR?=
 =?us-ascii?q?VTO3OHvNr01bnuub+nCcot49sJe6y8lGcaNSSFFgTqBSMU9iBtFXeJo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAAD6QgFch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDaxUSg3mIGF+LKYIhlzSBcS4TAYd2IjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2IoJlAwMBAiAEGQEBNwEFCQEBJAIFIQICAwwdKwcSBYMcAYIBBaVOc?=
 =?us-ascii?q?HwMJ4J2AQEFgkSEXAcIgQuLDxeBQD+MKIJXiQskln4KCYIijwojkR+Ie5Eogg1?=
 =?us-ascii?q?NMAiDJ4IbCQMXiF6FQD8ygQUBAY1JAQE?=
X-IPAS-Result: =?us-ascii?q?A0AZAAD6QgFch0O0hNFkHQEBBQEHBQGBUQgBCwGDaxUSg3m?=
 =?us-ascii?q?IGF+LKYIhlzSBcS4TAYd2IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlA?=
 =?us-ascii?q?wMBAiAEGQEBNwEFCQEBJAIFIQICAwwdKwcSBYMcAYIBBaVOcHwMJ4J2AQEFgkS?=
 =?us-ascii?q?EXAcIgQuLDxeBQD+MKIJXiQskln4KCYIijwojkR+Ie5Eogg1NMAiDJ4IbCQMXi?=
 =?us-ascii?q?F6FQD8ygQUBAY1JAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42242169"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 06:06:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726971AbeLABPv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 20:15:51 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:44624 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726582AbeLABPp (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 20:15:45 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=Content-Type:MIME-Version:References:
        Subject:Cc:To:From:Date:Message-Id:Sender:Reply-To:Content-Transfer-Encoding:
        Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
        Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=htZ08rlxgS2BEec6pWnM6IPnKncVCK07MaVOAwK8DCU=; b=m9OTzu9sKPJUlypxtSbgEsYl59
        9EDJNEIHZxjV6qQ+asV8P6QWY1bKhE6MbRjXSOHpV84emu+gQsSOo2RvF+n+TcbpvpVVFiNWwRrFX
        /C0IbWueHTOSYltC5W2QQkjrdio61wOxgAzIHAXE02PTQ8pU6qdDHpsuky00guh1QW7RSAV72DWyS
        YiE3DLexiGK/U24ulE3mFK+ak1bdJ1y6w7qHFcov3GMDy0Ya70mWtQs+XtnkhKn6jcgYeH+IuEMAb
        1MGihzEa5odzuXjhmHCVoaGqRiFdg7yebPBzH74coZcn62DxwqDTB9VGEIP+anT7Zdn8Ji5bZRALV
        5bzIS6yQ==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gSjQv-0003Dq-21; Fri, 30 Nov 2018 14:06:17 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 0)
        id 6D7512029FD78; Fri, 30 Nov 2018 15:06:14 +0100 (CET)
Message-Id: <20181130140337.662216603@infradead.org>
User-Agent: quilt/0.65
Date: Fri, 30 Nov 2018 14:44:59 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: dave.hansen@intel.com, luto@kernel.org, peterz@infradead.org
Cc: x86@kernel.org, Tom.StDenis@amd.com, linux-kernel@vger.kernel.org
Subject: [PATCH 4/4] x86/mm/cpa: Better use clflushopt
References: <20181130134455.490139778@infradead.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline; filename=peterz-cpa-clflush_opt.patch
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Currently we issue an MFENCE before and after flushing a range. This
means that if we flush a bunch of single page ranges -- like with the
cpa array, we issue a whole bunch of superfluous MFENCEs.

Reorgainze the code a little to avoid this.

Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
---
 arch/x86/mm/pageattr.c |   29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -251,15 +251,7 @@ static unsigned long __cpa_addr(struct c
  * Flushing functions
  */
 
-/**
- * clflush_cache_range - flush a cache range with clflush
- * @vaddr:	virtual start address
- * @size:	number of bytes to flush
- *
- * clflushopt is an unordered instruction which needs fencing with mfence or
- * sfence to avoid ordering issues.
- */
-void clflush_cache_range(void *vaddr, unsigned int size)
+static void clflush_cache_range_opt(void *vaddr, unsigned int size)
 {
 	const unsigned long clflush_size = boot_cpu_data.x86_clflush_size;
 	void *p = (void *)((unsigned long)vaddr & ~(clflush_size - 1));
@@ -268,11 +260,22 @@ void clflush_cache_range(void *vaddr, un
 	if (p >= vend)
 		return;
 
-	mb();
-
 	for (; p < vend; p += clflush_size)
 		clflushopt(p);
+}
 
+/**
+ * clflush_cache_range - flush a cache range with clflush
+ * @vaddr:	virtual start address
+ * @size:	number of bytes to flush
+ *
+ * clflushopt is an unordered instruction which needs fencing with mfence or
+ * sfence to avoid ordering issues.
+ */
+void clflush_cache_range(void *vaddr, unsigned int size)
+{
+	mb();
+	clflush_cache_range_opt(vaddr, size);
 	mb();
 }
 EXPORT_SYMBOL_GPL(clflush_cache_range);
@@ -339,6 +342,7 @@ static void cpa_flush(struct cpa_data *d
 	if (!cache)
 		return;
 
+	mb();
 	for (i = 0; i < cpa->numpages; i++) {
 		unsigned long addr = __cpa_addr(cpa, i);
 		unsigned int level;
@@ -349,8 +353,9 @@ static void cpa_flush(struct cpa_data *d
 		 * Only flush present addresses:
 		 */
 		if (pte && (pte_val(*pte) & _PAGE_PRESENT))
-			clflush_cache_range((void *)addr, PAGE_SIZE);
+			clflush_cache_range_opt((void *)addr, PAGE_SIZE);
 	}
+	mb();
 }
 
 static bool overlaps(unsigned long r1_start, unsigned long r1_end,


