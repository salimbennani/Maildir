Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 11:06:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 544FB580460;
	Thu, 29 Nov 2018 19:00:38 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 19:00:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Av9Rw4hK6TfIZ7rUW19mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv3/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kaKTA5/mHZhM9+gq1Vrx2upR1/zJLbboGOLPpzfLjQfc8YSGdbQspdSyJMD4G6?=
 =?us-ascii?q?YoASD+QBJ+FYr4zlqlQOsxS+BBSnCvvuyjRVgXL306s60+U6HAHAwgwgHs8BsH?=
 =?us-ascii?q?XOo9nvKKgSVuW1wbDOwD7ebP1WwS/w5JbUfh0lu/2AQLx9fdTLxUUyFA7Jkk+c?=
 =?us-ascii?q?pI3nMj+Ny+gAsXaX4/B+We6zkWIrtg98riKhy8ookoXFmJ8Zx1He+Sln3oo4Js?=
 =?us-ascii?q?e0RFNlbdK5CpddtiGXOo1rSc04WW5oojw1yrgetJ67YicKzJMnygbBa/yIbYeI?=
 =?us-ascii?q?+AjvVOWPLjdignJqZra/iwy18Ui6xe3wTsi00FBUoSpZitTAqGwB2hjJ5sSaRP?=
 =?us-ascii?q?Zx4F2t1SuM2gzP8O1JIEI5mbLeK5E7w74wkpQTsV7EHi/zgEj2iK6WdkM5+umn?=
 =?us-ascii?q?8ujnYavppoWaN4BqjgHyK6Mum8K5AesmKAgDRHab+eui273550H5Q6tFjucwkq?=
 =?us-ascii?q?bHtJDWP8MbprS2AwNNyIYs9w6/Dyu60NQfhXQHKFNFeBGZgITzNFDOPev1DfO+?=
 =?us-ascii?q?g1SqjTdqyOrKPrznApXRMHfDlK3tcqp6605Z0AAz18xQ54pICrEdJ/L+Qk/xu8?=
 =?us-ascii?q?bZDh8lKQO0xPzrCNVg1owEX2KPDbSUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YZaOpx4cYaGikHvR6JEWUeXjsgtAfHmsQvQo+S+rqiFuFUTNIY3ayXq?=
 =?us-ascii?q?Q85iw0CY68DIfDQJytj6KF3CuhApJWYWVGAEiWEXj0b4WER+sMaCWKL8B7iTwE?=
 =?us-ascii?q?Vb+hS4w72RG0rgD6yaFqLu7V+i0eqJLi28J55+zVlREu6zN0C96R3H2KT2Fxhm?=
 =?us-ascii?q?kIXSM53LhjoUxhzVeOyat4jOZeFdBJ4/NJUx01NZjTz+FhD9DyWwTBfsqGSVq8?=
 =?us-ascii?q?Q9WmBy0xQcw1w9MUf0l9HNCihAjZ3yW2G78Vi6CLBJss/63BxXfxOdhyx2zG1K?=
 =?us-ascii?q?Y7iVkmWdVANWuhiq579AjTAorJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnXy9BR?=
 =?us-ascii?q?KJxrOKcYrrdH8R3CTbCEgYjQ8T+WyKOhQ5Bieku2jeFiBhFUrzY0Pw9ulzsG+7?=
 =?us-ascii?q?Tk4xzwGNc01h17q09gQJhfCGTPMTxLYEuCYnqzV7B1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYi8cqqG0lzQVsJqOYyl9O?=
 =?us-ascii?q?bC6Y0o3qNb3RKWny+w6vZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3prHHYiUn+4zYz3xtMamuvT/E1NIkH+8lyhemf9dC?=
 =?us-ascii?q?P6KIDg7yE8sGB8ewLOwmgUSmbhUBPOpK7q47I9umd+ea2K6sJOtghjOmgnhd74?=
 =?us-ascii?q?Bnz02M8DBwSujW0JYfwvGUxxeIWC34jFi8rM/3g4dEZTcJE2q7yCjkApNRZ6Jo?=
 =?us-ascii?q?cYYKD2euP9O4xtFki5HxXH5Y8UapB0ka18+xZRqSc1v90BVQ1EQWu3CmmTG0zy?=
 =?us-ascii?q?dpkzEvtaef2C3Ow+L/dBsIIGJLRW9ijUvyLoiwldwVQE+obw0xnhu/+Un637Rb?=
 =?us-ascii?q?pLh4L2TLQ0dHZTL2L2JhUqu3rLaCeNRA6JArsSVWVuSzf1aaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRSlihjnQHFS8?=
 =?us-ascii?q?Pdip/dOPmpfHs+C+UX+hV5JJfSnqy4OAqDW05WlwDRKjmPCzn8XtERIm3i/jy9?=
 =?us-ascii?q?lqSSLIoQ7/Yobx1qS2K+JnflRyC1/65Mp3AYV+koo2hJEN1nkWnJSV/XwbkWjt?=
 =?us-ascii?q?NdVXw77xbH0IRTQT2d7a/BDl2FF/LnKO34/5U3Sdwsh7aNWgbGIZxDk979xUB6?=
 =?us-ascii?q?eO97NLgzF1olWjoALVYPh9mCodyPQ05H4bheEJpBQiziGHDr8OGklYODTmlw6U?=
 =?us-ascii?q?4NCmsKVXeGGvfKCs1Ep5mNCtFrCDrRtaWHbkYZciBi5w4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj0oqgs4iAL2Vt4bi1?=
 =?us-ascii?q?AhpFNjDuY8MT+zftjbtRn8qM3oCvGIlhFSsPXJfyUf2oFzcSv+z9NwmSCD08tm?=
 =?us-ascii?q?ubGb3HEA+d8khmqmzAE4uxO3GLPnUZzshiRBqAJExZmg8URy43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/0fUMcuD7uJqAi?=
 =?us-ascii?q?FX5JuhoBaWKmycYQRIAnoEWkiFB1DlI7mv6sPM8+meBuqiMfTOZa+CpvBZV/eN?=
 =?us-ascii?q?3ZivyJdp/y6QNsWTOXlvF/071VRCXXB6GMTZmi8DSy8NlyLKYM6Uug28+jBsrs?=
 =?us-ascii?q?2k9PTrWQTv5ZaACrdIMNVv/Qy2jrmHN+KKmCl5LjNY3IsWxXDU0LgfwEISiyZ2?=
 =?us-ascii?q?eja3DLQPrjTNQ7zQm6NNCx4bajh+NM9J76I6wwlMNtTXitLz1r5kkPE1D01JWk?=
 =?us-ascii?q?DmmsGsfcYKOX2yNEvbBEaXM7SLPSHLw8DyYa+mVbJclvlbtx2utjadCELjOjWD?=
 =?us-ascii?q?lz/0VxGgK+1MjSebPABAt4G5aBpiFW/jTNf+YB2hLNB3lSE2waEzhn7SNW8TKz?=
 =?us-ascii?q?58c0ZMrr2W9SxZg/V/FHZH7npqNuSEnyeZ7+/FKpcZq/drAyJ0l/5E73Q+0bda?=
 =?us-ascii?q?8CZERPkm0BfV+/Nivli8nu7H9DNjXRxSqzAD0I+HoE9vK7vQ8rFPXH/F+FQG6m?=
 =?us-ascii?q?DGWDoQoN4wNdDu84ZRgozQkqPbLilD/9Pdu8AbAp6He4q8LHM9PE+xS3bvBwwf?=
 =?us-ascii?q?QGvzOA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAADppgBch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrJwqDb4gYjAiBYC0UlzCBcxQYEwGHdCI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiKCZAEBAQECAQECIAQZAQE3AQUJAQEKDgoCAiYCA?=
 =?us-ascii?q?gNEEAYNAQUCAQEBgxyBeggFp11wfDOCdgEBBYJDhGgIgQuJb4EcF4FAP4ERJ4J?=
 =?us-ascii?q?riAWCV4kjgXiEDUQzUY81CQ2RHwYYiWiHNJhOgUaCDXAVgyeCGwwXg0qKYDMBM?=
 =?us-ascii?q?YEFAQGMGoEfAQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAADppgBch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrJwqDb4gYjAiBYC0UlzCBcxQYEwGHdCI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiKCZAEBAQECAQECIAQZAQE3AQUJAQEKDgoCAiYCAgNEEAYNAQUCAQE?=
 =?us-ascii?q?BgxyBeggFp11wfDOCdgEBBYJDhGgIgQuJb4EcF4FAP4ERJ4JriAWCV4kjgXiED?=
 =?us-ascii?q?UQzUY81CQ2RHwYYiWiHNJhOgUaCDXAVgyeCGwwXg0qKYDMBMYEFAQGMGoEfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="64690958"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 29 Nov 2018 19:00:36 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727026AbeK3OIM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 09:08:12 -0500
Received: from hqemgate16.nvidia.com ([216.228.121.65]:11752 "EHLO
        hqemgate16.nvidia.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726161AbeK3OIM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 09:08:12 -0500
Received: from hqpgpgate102.nvidia.com (Not Verified[216.228.121.13]) by hqemgate16.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
        id <B5c00a7cf0001>; Thu, 29 Nov 2018 19:00:31 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
  by hqpgpgate102.nvidia.com (PGP Universal service);
  Thu, 29 Nov 2018 19:00:26 -0800
X-PGP-Universal: processed;
        by hqpgpgate102.nvidia.com on Thu, 29 Nov 2018 19:00:26 -0800
Received: from [10.19.225.182] (172.20.13.39) by HQMAIL101.nvidia.com
 (172.20.187.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Fri, 30 Nov
 2018 03:00:23 +0000
Subject: Re: [PATCH v4 3/3] thermal: tegra: parse sensor id before sensor
 register
To: Eduardo Valentin <edubezval@gmail.com>
CC: <thierry.reding@gmail.com>, <daniel.lezcano@linaro.org>,
        <linux-tegra@vger.kernel.org>, <rui.zhang@intel.com>,
        <srikars@nvidia.com>, <linux-kernel@vger.kernel.org>
References: <1543486183-2868-1-git-send-email-wni@nvidia.com>
 <1543486183-2868-4-git-send-email-wni@nvidia.com>
 <20181129164656.GA2688@localhost.localdomain>
From: Wei Ni <wni@nvidia.com>
Message-ID: <19b6f139-c54c-6bf7-45ab-6e8bcbf8e6d8@nvidia.com>
Date: Fri, 30 Nov 2018 11:00:21 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181129164656.GA2688@localhost.localdomain>
X-Originating-IP: [172.20.13.39]
X-ClientProxiedBy: HQMAIL107.nvidia.com (172.20.187.13) To
 HQMAIL101.nvidia.com (172.20.187.10)
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
        t=1543546831; bh=7ef2Ws1xUU/zS+Rm5Jt+e01hr2n1VZaVyu3DNKm3dTg=;
        h=X-PGP-Universal:Subject:To:CC:References:From:Message-ID:Date:
         User-Agent:MIME-Version:In-Reply-To:X-Originating-IP:
         X-ClientProxiedBy:Content-Type:Content-Language:
         Content-Transfer-Encoding;
        b=gEUtLls12xtp6VJAICWfdj+2d2lAcAiFgOBGD+ygHL6P7wdDfJngDWHULZcqO4jjy
         FZpgWTkTQR3ID3OQmGEHJQAeI3zOJ5P5rQSmsfr6dUZRsJSuScIdp9pTvBcIrLgpFL
         xz6T8aPT24+mHnPGqa66VA3z92ZnrDR21qZ0f4tQ6Qq33usTwx9RlIf8ILyB28jdX/
         vJWZlQ7rX5Bu2QBKyzVxT80d3F/zJQdbcFC2ydOqZU+yuVVNsG78ZhPmWHHwAeTyHK
         ainPhxWI/bqsjZFycwoSU3XlyNG9XzdBOdRRgWk7P61sAWZPr2R56vIughJx6ZmH3/
         DudGZolkDpZvA==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 30/11/2018 12:46 AM, Eduardo Valentin wrote:
> On Thu, Nov 29, 2018 at 06:09:43PM +0800, Wei Ni wrote:
>> Since different platforms may not support all 4
>> sensors, so the sensor registration may be failed.
>> Add codes to parse dt to find sensor id which
>> need to be registered. So that the registration
>> can be successful on all platform.
>>
>> Signed-off-by: Wei Ni <wni@nvidia.com>
>> ---
>>  drivers/thermal/tegra/soctherm.c | 46 ++++++++++++++++++++++++++++++++++++++--
>>  1 file changed, 44 insertions(+), 2 deletions(-)
>>
>> diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soctherm.c
>> index 375cadbc24cd..bdc660f2794a 100644
>> --- a/drivers/thermal/tegra/soctherm.c
>> +++ b/drivers/thermal/tegra/soctherm.c
>> @@ -1224,6 +1224,42 @@ static void soctherm_init(struct platform_device *pdev)
>>  	tegra_soctherm_throttle(&pdev->dev);
>>  }
>>  
>> +static bool tegra_soctherm_find_sensor_id(unsigned int sensor_id)
>> +{
>> +	bool ret = false;
>> +	struct of_phandle_args sensor_specs;
>> +	struct device_node *np, *sensor_np;
>> +
>> +	np = of_find_node_by_name(NULL, "thermal-zones");
>> +	if (!np)
>> +		return ret;
>> +
>> +	sensor_np = of_get_next_child(np, NULL);
>> +	for_each_available_child_of_node(np, sensor_np) {
>> +		if (of_parse_phandle_with_args(sensor_np, "thermal-sensors",
>> +						 "#thermal-sensor-cells",
>> +						 0, &sensor_specs))
>> +			continue;
>> +
>> +		if (sensor_specs.args_count != 1) {
>> +			WARN(sensor_specs.args_count != 1,
>> +			     "%s: wrong cells in sensor specifier %d\n",
>> +			     sensor_specs.np->name, sensor_specs.args_count);
>> +			continue;
>> +		}
>> +
>> +		if (sensor_specs.args[0] == sensor_id) {
>> +			ret = true;
>> +			break;
>> +		}
>> +	}
>> +
>> +	of_node_put(np);
>> +	of_node_put(sensor_np);
>> +
>> +	return ret;
>> +}
>> +
>>  static const struct of_device_id tegra_soctherm_of_match[] = {
>>  #ifdef CONFIG_ARCH_TEGRA_124_SOC
>>  	{
>> @@ -1365,13 +1401,16 @@ static int tegra_soctherm_probe(struct platform_device *pdev)
>>  		zone->sg = soc->ttgs[i];
>>  		zone->ts = tegra;
>>  
>> +		if (!tegra_soctherm_find_sensor_id(soc->ttgs[i]->id))
>> +			continue;
>> +
> 
> 
> Instead of matching driver id with DT id presence, wouldnt make sense to
> simply have DT with the sensors that makes sense for that platform?
> 
> I am failing to understand why you need to go over and find ids.

As discussed with Daniel several days ago, this driver will always try
to register 4 thermal zones, including cpu, gpu, mem and pll, but some
platform doesn't need to support all of them, so the thermal zone
registration will be failed. In previous patches, we just ignore the
failure and continue to register next sensors, but Daniel think it's not
good. And per his suggestion, we refer to the qoriq thermal driver to
parse dt to get sensor_id, so that we can make the registration to be
successful.

Wei.

> 
>>  		z = devm_thermal_zone_of_sensor_register(&pdev->dev,
>>  							 soc->ttgs[i]->id, zone,
>>  							 &tegra_of_thermal_ops);
>>  		if (IS_ERR(z)) {
>>  			err = PTR_ERR(z);
>> -			dev_err(&pdev->dev, "failed to register sensor: %d\n",
>> -				err);
>> +			dev_err(&pdev->dev, "failed to register sensor %s: %d\n",
>> +				soc->ttgs[i]->name, err);
>>  			goto disable_clocks;
>>  		}
>>  
>> @@ -1434,6 +1473,9 @@ static int __maybe_unused soctherm_resume(struct device *dev)
>>  		struct thermal_zone_device *tz;
>>  
>>  		tz = tegra->thermctl_tzs[soc->ttgs[i]->id];
>> +		if (!tz)
>> +			continue;
>> +
>>  		err = tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);
>>  		if (err) {
>>  			dev_err(&pdev->dev,
>> -- 
>> 2.7.4
>>
