Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 18:09:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 39F94580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 21:42:56 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 27 Nov 2018 21:42:55 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AZnZcQBDwqRxmeh34EDV5UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX+pMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/m/UhMJ3jq1brg+vpwR9zoDWb4yZKfRzcr/DctMBXmdNQtpdWjZdDo6m?=
 =?us-ascii?q?c4cDE+wMNvtYoYnnoFsOqAOzCxWtBOzzyj9HnGX20rAn2OojDw7G2hEvEMwUsH?=
 =?us-ascii?q?TPq9X1MroZXOevzKnJ0TrDb+lZ2S3g54TSchAuv/eMUq9ufsrL0kkvEAXFg06U?=
 =?us-ascii?q?qYzkOTOazP4Ns2+B4+pnT+KvhHcqpgdsqTas3schkpfFip4Wx1ze6Cl13YU4Kc?=
 =?us-ascii?q?emREN1YdOoCoZcuiOCO4ZyQM4uWXxktDs0x7EcpJK2fjQGxI46yxPcd/CKdZWD?=
 =?us-ascii?q?7Aj5W+aLOzh4gWpoeLKhiBa29kit0un8Vsiv0FZWtSpJiNbMtnYQ1xDJ7ciHUP?=
 =?us-ascii?q?R98l+g2TaJyQ/T9vlJLV4omafYMZIt36M8m5kJvUjdECL7mF/6gLKUe0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMr0wlcy6HOQ0KxUBUHaF+eui0L3v5Fb2QLJXjv0wjq?=
 =?us-ascii?q?bWrovaKcMfpq64AA9azJwv6hmiDzq+1NQYnH8HLE9KeR6djojpPU3OL+78Dful?=
 =?us-ascii?q?n1uslzJryuvAPr3mBJXNIX7DkKr7cbZ68U5cxxI/zcpD6JJMFrEBPPXzV1f1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhm0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0ltLbT?=
 =?us-ascii?q?i2QkkwodYbWxxslQL3S5Beh9ZUOeZ3Xqn5EGC2hNuwM/SOnjjhqFSSJSYHCpGL?=
 =?us-ascii?q?sx4yx+BI+4AIOQe4a2nbbU2S66GoFRNHlLD03JHXr2eoHBQfoVdS+JPudnlToL?=
 =?us-ascii?q?U6XnTJUuggqzvg33wKYyM+zP5ycDvoji3tUm2+qGjBw36Hl4AtqQ10mLSGd7mH?=
 =?us-ascii?q?5OQCU5j45lpkko8FaI0aFij7R4GNpf6ulSVQFyYYTdxOxzEdy0Wg/HctqTU1Gg?=
 =?us-ascii?q?atGnBzgrSZQ22dBYMBU1IMmrkh2Wh3niOLQSjbHeXJE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAACSKv5bhxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKMcIsqmU+BcxIBARgUh1wiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII?=
 =?us-ascii?q?2BQIDGAmCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHIICAQSac?=
 =?us-ascii?q?DyKHYFsM4J2AQEFgkOFBggSh1WDD4EcgVc/jn+QHY94BwKCHASPBgsYiVWHOSy?=
 =?us-ascii?q?XagYCCQcPIYElgg1NMIMvghsMF4hehWBRgQeKGyosgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AnAACSKv5bhxHrdtBkHgEGBwaBUQkLAYEwgmKMcIsqmU+?=
 =?us-ascii?q?BcxIBARgUh1wiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAMDA?=
 =?us-ascii?q?QIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHIICAQSacDyKHYFsM4J2AQE?=
 =?us-ascii?q?FgkOFBggSh1WDD4EcgVc/jn+QHY94BwKCHASPBgsYiVWHOSyXagYCCQcPIYElg?=
 =?us-ascii?q?g1NMIMvghsMF4hehWBRgQeKGyosgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,289,1539673200"; 
   d="scan'208";a="41849265"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 21:42:47 -0800
Received: from localhost ([::1]:46048 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRscX-0006zc-Kn
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 00:42:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47820)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gRsYd-0003ki-92
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 00:38:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gRsYa-0004Iu-Fm
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 00:38:42 -0500
Received: from mail-pg1-x544.google.com ([2607:f8b0:4864:20::544]:33797)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gRsYa-0004Id-Ad
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 00:38:40 -0500
Received: by mail-pg1-x544.google.com with SMTP id 17so8979569pgg.1
	for <qemu-devel@nongnu.org>; Tue, 27 Nov 2018 21:38:40 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=wj+Ww7Y6K29VKQ07od9GNMsx9UfCK0GFYGutLalgTzo=;
	b=RaMbZ1e66VONctlDxmEsYf08mkvu1VLY3r/kmuGG+nnyFDclilr5n/nhDpG4Utpaej
	v7QM8qOBMKW0pCMh6X6LCqnEJG7e0imxDiKjjnNsj3DjiD56Vkh3UrRuZ7P3CbgnSPjk
	UuVLxy26cSKZBTg9R85ViryMbl8PIyXDRtHoE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=wj+Ww7Y6K29VKQ07od9GNMsx9UfCK0GFYGutLalgTzo=;
	b=VL+cyELZ/g15ClxB/JwTzIQDKIA08vAtyFEzMF6A00tPFSly7qIRv4Tx7oSXvGyaq8
	v0nrcK+pNegoLai25Kgrjhe3PT28QfHAbGqrZXdNQ+8nV7ScI8eGQhbwPhtjGZL6Yx2I
	u3rXmAoFaAqRwSgfDV5lr1Kyit3X/QQ8C5gY7D7HgJF2d1F0wEBCjA/YFKHY3Dj3UCuq
	o18B28OtW/rMEDe7tcEnZf06IUpGhHJSdYrOrJGl4L9twCr47Q2hRrzl4jRLP9H+nqrk
	lHPHJg5+4DF3NyMRJw/FkX0wPUwzosTl2Ij0a1ENZ8aGAhtUdFXx9uOGxUd6A1VtIeiY
	8dsw==
X-Gm-Message-State: AA+aEWYt6SF2EatlCo1mbuYRfLxuQxNZ0AVIybdEKZCPHshnRf6+cExy
	14IVYYmLsZl5pVtKQVs55K2UvRHpTyo=
X-Google-Smtp-Source: AFSGD/VgOjBD38OEVynM1kQSbnTSDrjTYwZaUT0jpJEKStglZ9c7f6d8XEdLm2y2mdMMIL2rMlzcHQ==
X-Received: by 2002:a63:1904:: with SMTP id z4mr31067927pgl.135.1543383518976; 
	Tue, 27 Nov 2018 21:38:38 -0800 (PST)
Received: from cloudburst.twiddle.net (97-113-170-180.tukw.qwest.net.
	[97.113.170.180]) by smtp.gmail.com with ESMTPSA id
	19sm8569336pfs.108.2018.11.27.21.38.37
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Tue, 27 Nov 2018 21:38:38 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Tue, 27 Nov 2018 21:38:24 -0800
Message-Id: <20181128053834.10861-3-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181128053834.10861-1-richard.henderson@linaro.org>
References: <20181128053834.10861-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::544
Subject: [Qemu-devel] [PATCH 02/12] tcg: Add preferred_reg argument to
 temp_load
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: cota@braap.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Pass this through to tcg_reg_alloc.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 tcg/tcg.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/tcg/tcg.c b/tcg/tcg.c
index c596277fd0..7f29a2045a 100644
--- a/tcg/tcg.c
+++ b/tcg/tcg.c
@@ -2859,7 +2859,7 @@ static void temp_allocate_frame(TCGContext *s, TCGTemp *ts)
     s->current_frame_offset += sizeof(tcg_target_long);
 }
 
-static void temp_load(TCGContext *, TCGTemp *, TCGRegSet, TCGRegSet);
+static void temp_load(TCGContext *, TCGTemp *, TCGRegSet, TCGRegSet, TCGRegSet);
 
 /* Mark a temporary as free or dead.  If 'free_or_dead' is negative,
    mark it free; otherwise mark it dead.  */
@@ -2908,7 +2908,7 @@ static void temp_sync(TCGContext *s, TCGTemp *ts,
                 break;
             }
             temp_load(s, ts, tcg_target_available_regs[ts->type],
-                      allocated_regs);
+                      allocated_regs, 0);
             /* fallthrough */
 
         case TEMP_VAL_REG:
@@ -3014,7 +3014,7 @@ static TCGReg tcg_reg_alloc(TCGContext *s, TCGRegSet required_regs,
 /* Make sure the temporary is in a register.  If needed, allocate the register
    from DESIRED while avoiding ALLOCATED.  */
 static void temp_load(TCGContext *s, TCGTemp *ts, TCGRegSet desired_regs,
-                      TCGRegSet allocated_regs)
+                      TCGRegSet allocated_regs, TCGRegSet preferred_regs)
 {
     TCGReg reg;
 
@@ -3023,13 +3023,13 @@ static void temp_load(TCGContext *s, TCGTemp *ts, TCGRegSet desired_regs,
         return;
     case TEMP_VAL_CONST:
         reg = tcg_reg_alloc(s, desired_regs, allocated_regs,
-                            0, ts->indirect_base);
+                            preferred_regs, ts->indirect_base);
         tcg_out_movi(s, ts->type, reg, ts->val);
         ts->mem_coherent = 0;
         break;
     case TEMP_VAL_MEM:
         reg = tcg_reg_alloc(s, desired_regs, allocated_regs,
-                            0, ts->indirect_base);
+                            preferred_regs, ts->indirect_base);
         tcg_out_ld(s, ts->type, reg, ts->mem_base->reg, ts->mem_offset);
         ts->mem_coherent = 1;
         break;
@@ -3159,7 +3159,7 @@ static void tcg_reg_alloc_mov(TCGContext *s, const TCGOp *op)
        the SOURCE value into its own register first, that way we
        don't have to reload SOURCE the next time it is used. */
     if (ts->val_type == TEMP_VAL_MEM) {
-        temp_load(s, ts, tcg_target_available_regs[itype], allocated_regs);
+        temp_load(s, ts, tcg_target_available_regs[itype], allocated_regs, 0);
     }
 
     tcg_debug_assert(ts->val_type == TEMP_VAL_REG);
@@ -3243,7 +3243,7 @@ static void tcg_reg_alloc_op(TCGContext *s, const TCGOp *op)
             goto iarg_end;
         }
 
-        temp_load(s, ts, arg_ct->u.regs, i_allocated_regs);
+        temp_load(s, ts, arg_ct->u.regs, i_allocated_regs, 0);
 
         if (arg_ct->ct & TCG_CT_IALIAS) {
             if (ts->fixed_reg) {
@@ -3424,7 +3424,7 @@ static void tcg_reg_alloc_call(TCGContext *s, TCGOp *op)
         if (arg != TCG_CALL_DUMMY_ARG) {
             ts = arg_temp(arg);
             temp_load(s, ts, tcg_target_available_regs[ts->type],
-                      s->reserved_regs);
+                      s->reserved_regs, 0);
             tcg_out_st(s, ts->type, ts->reg, TCG_REG_CALL_STACK, stack_offset);
         }
 #ifndef TCG_TARGET_STACK_GROWSUP
@@ -3449,7 +3449,7 @@ static void tcg_reg_alloc_call(TCGContext *s, TCGOp *op)
                 TCGRegSet arg_set = 0;
 
                 tcg_regset_set_reg(arg_set, reg);
-                temp_load(s, ts, arg_set, allocated_regs);
+                temp_load(s, ts, arg_set, allocated_regs, 0);
             }
 
             tcg_regset_set_reg(allocated_regs, reg);
-- 
2.17.2


