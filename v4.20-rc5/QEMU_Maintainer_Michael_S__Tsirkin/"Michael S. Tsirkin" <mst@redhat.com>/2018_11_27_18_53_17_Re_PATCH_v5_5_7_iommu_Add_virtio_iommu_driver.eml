Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:50:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C7E30580460
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 13:32:10 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 13:32:10 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ApPhpIxXuwAW40qdh5WT2Z4mco0TV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRWHv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEYMohumBwSiBuzixiJGi3PqwaI03P8hHh/d0Qw8Hd8Dqm?=
 =?us-ascii?q?jYoMnpOKsMV+2+0anGzS/Eb/NTwTrx5o/GchE9rvGMR71/b87RwlQyGQ/fk16e?=
 =?us-ascii?q?t5flPzKP1uQOsmib6eRsXv+ohm4isAFxviOixt0yhYbUhoIa0EzE+T9lz4YyIN?=
 =?us-ascii?q?21UUh2asOqHptXsiGVLYp2QsU6TmFsuSY6zKAGuJG1fCgN1ZQnwQPQZOabc4iJ?=
 =?us-ascii?q?5RLjUvydITBihHJqfr+0mhW88VC4x+HhWcS4zExGojRYntXRrHwByh3e58ydRv?=
 =?us-ascii?q?dg4EutwSiD2xzX5+1ePEw5m7TXJ4Q8zrMzmJcfq1rPEyzwlU7rlqGZbF8k9fKt?=
 =?us-ascii?q?6+n/YrXpuJucN4hshwH7KKsum8i/Df48MggPWWib5Ou91LPk/U3kRrVFk+c5kr?=
 =?us-ascii?q?XYsJDdI8QXvKm5AxVa0oo76ha/CSmp0MgAkHUaI19JZAiLg5b0N13TOvz0EPay?=
 =?us-ascii?q?jlC2nDt22fzKJrjhDY/MLnjHnrfhZ7F960tExQotzNBf/Y5UCqwbL/L3W0/wtc?=
 =?us-ascii?q?bXDgM4MwyzxebrEc5y1oQDWWKJHqCWLrjSvESM5uIuOOmMeJQVtCz5K/gk4f7u?=
 =?us-ascii?q?kHA4lUYTfamuwJsXbm23Ee56I0WYZnrshM0NEWAQvgoxVODqkkGNUSZPZ3auWK?=
 =?us-ascii?q?Ix/jU7CIOlDYjdXIysj6GB0Ty/Hp1XYGBGF1+NHW3pd4WCR/cDdiaSLtV9nTwD?=
 =?us-ascii?q?ULjyA7Inzgyk4Q/m16J8fK2T/iwDqYml0Nlz+v3dkgw0+TVoDsOblWaXQCZxl2?=
 =?us-ascii?q?IMQjYwm6dnvU16zEzEz6lin+FREd1B7u9IVQFpCJjH0uYvDtnzXh7GLMmIUkq7?=
 =?us-ascii?q?S9GnEzgtT9U3hsUDeltwAMmKihHYwzHsB74TiqzOCpsp9K7Vw3n2IYB60XmRz7?=
 =?us-ascii?q?QrjVQtXp5SM3a7jLV07QnZCt31lBC7mq+sMJwc3SrM7H+OhUCUoUpbXRQ4BafI?=
 =?us-ascii?q?VHZafkvXqdXh/k6ERaWzArcqKCNI08vEIaxPPI7Hl1JDEb3GOd/eam+101z2TS?=
 =?us-ascii?q?qTx6mPbYygMzEYxzn1EkUIkwkPu32BMF5tVW+av2vCAWk2RhrUaET2/Lw78Svj?=
 =?us-ascii?q?Qw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAADetv1bhwyp04xkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYFagQ+BKYwRX4spgg18JZYfgXMUGAsJgUuCL4NgIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCgsJCCkjDII2BQIDGgEGglwBAgMBAQEkEwwKHgsDAwECB?=
 =?us-ascii?q?gEBChgeBAQIAwEjARUaBhMFglFLAYIBBQqnLDOKMQWMDREGgX+BEYJdNYMeAQS?=
 =?us-ascii?q?HOQKPYzSPIA9GBwIChnqGGDODaQIWgVkjhGiCbAKHOY1GinGBRoINcBU7gmyLH?=
 =?us-ascii?q?IVdIQEBMYEjinOBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AEAADetv1bhwyp04xkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYFagQ+BKYwRX4spgg18JZYfgXMUGAsJgUuCL4NgIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCgsJCCkjDII2BQIDGgEGglwBAgMBAQEkEwwKHgsDAwECBgEBChgeBAQIAwE?=
 =?us-ascii?q?jARUaBhMFglFLAYIBBQqnLDOKMQWMDREGgX+BEYJdNYMeAQSHOQKPYzSPIA9GB?=
 =?us-ascii?q?wIChnqGGDODaQIWgVkjhGiCbAKHOY1GinGBRoINcBU7gmyLHIVdIQEBMYEjinO?=
 =?us-ascii?q?BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,288,1539673200"; 
   d="scan'208";a="52891152"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mtab.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 13:32:09 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 23DFAC6F;
	Tue, 27 Nov 2018 18:53:36 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id 4DB72A80;
	Tue, 27 Nov 2018 18:53:31 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id 3F1077A4;
	Tue, 27 Nov 2018 18:53:30 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 43CDA37EE0;
	Tue, 27 Nov 2018 18:53:29 +0000 (UTC)
Received: from redhat.com (ovpn-116-85.ams2.redhat.com [10.36.116.85])
	by smtp.corp.redhat.com (Postfix) with SMTP id 90266600C2;
	Tue, 27 Nov 2018 18:53:19 +0000 (UTC)
Date: Tue, 27 Nov 2018 13:53:17 -0500
From: "Michael S. Tsirkin" <mst@redhat.com>
To: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
Subject: Re: [PATCH v5 5/7] iommu: Add virtio-iommu driver
Message-ID: <20181127131455-mutt-send-email-mst@kernel.org>
References: <20181122193801.50510-1-jean-philippe.brucker@arm.com>
	<20181122193801.50510-6-jean-philippe.brucker@arm.com>
	<20181123165742-mutt-send-email-mst@kernel.org>
	<fd221210-7e12-1d15-0c80-52a761f6893d@arm.com>
	<20181127125424-mutt-send-email-mst@kernel.org>
	<ef97313f-4795-9537-e0b8-8bf6751db6a6@arm.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <ef97313f-4795-9537-e0b8-8bf6751db6a6@arm.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.29]);
	Tue, 27 Nov 2018 18:53:29 +0000 (UTC)
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
Cc: mark.rutland@arm.com, virtio-dev@lists.oasis-open.org,
	lorenzo.pieralisi@arm.com, tnowicki@caviumnetworks.com,
	devicetree@vger.kernel.org, marc.zyngier@arm.com,
	linux-pci@vger.kernel.org, joro@8bytes.org, will.deacon@arm.com,
	virtualization@lists.linux-foundation.org, eric.auger@redhat.com,
	iommu@lists.linux-foundation.org, robh+dt@kernel.org,
	bhelgaas@google.com, robin.murphy@arm.com, kvmarm@lists.cs.columbia.edu
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

On Tue, Nov 27, 2018 at 06:10:46PM +0000, Jean-Philippe Brucker wrote:
> On 27/11/2018 18:04, Michael S. Tsirkin wrote:
> > On Tue, Nov 27, 2018 at 05:50:50PM +0000, Jean-Philippe Brucker wrote:
> >> On 23/11/2018 22:02, Michael S. Tsirkin wrote:
> >>>> +/*
> >>>> + * __viommu_sync_req - Complete all in-flight requests
> >>>> + *
> >>>> + * Wait for all added requests to complete. When this function returns, all
> >>>> + * requests that were in-flight at the time of the call have completed.
> >>>> + */
> >>>> +static int __viommu_sync_req(struct viommu_dev *viommu)
> >>>> +{
> >>>> +	int ret = 0;
> >>>> +	unsigned int len;
> >>>> +	size_t write_len;
> >>>> +	struct viommu_request *req;
> >>>> +	struct virtqueue *vq = viommu->vqs[VIOMMU_REQUEST_VQ];
> >>>> +
> >>>> +	assert_spin_locked(&viommu->request_lock);
> >>>> +
> >>>> +	virtqueue_kick(vq);
> >>>> +
> >>>> +	while (!list_empty(&viommu->requests)) {
> >>>> +		len = 0;
> >>>> +		req = virtqueue_get_buf(vq, &len);
> >>>> +		if (!req)
> >>>> +			continue;
> >>>> +
> >>>> +		if (!len)
> >>>> +			viommu_set_req_status(req->buf, req->len,
> >>>> +					      VIRTIO_IOMMU_S_IOERR);
> >>>> +
> >>>> +		write_len = req->len - req->write_offset;
> >>>> +		if (req->writeback && len == write_len)
> >>>> +			memcpy(req->writeback, req->buf + req->write_offset,
> >>>> +			       write_len);
> >>>> +
> >>>> +		list_del(&req->list);
> >>>> +		kfree(req);
> >>>> +	}
> >>>
> >>> I didn't notice this in the past but it seems this will spin
> >>> with interrupts disabled until host handles the request.
> >>> Please do not do this - host execution can be another
> >>> task that needs the same host CPU. This will then disable
> >>> interrupts for a very very long time.
> >>
> >> In the guest yes, but that doesn't prevent the host from running another
> >> task right?
> > 
> > Doesn't prevent it but it will delay it significantly
> > until scheduler decides to kick the VCPU task out.
> > 
> >> My tests run fine when QEMU is bound to a single CPU, even
> >> though vcpu and viommu run in different threads
> >>
> >>> What to do then? Queue in software and wake up task.
> >>
> >> Unfortunately I can't do anything here, because IOMMU drivers can't
> >> sleep in the iommu_map() or iommu_unmap() path.
> >>
> >> The problem is the same
> >> for all IOMMU drivers. That's because the DMA API allows drivers to call
> >> some functions with interrupts disabled. For example
> >> Documentation/DMA-API-HOWTO.txt allows dma_alloc_coherent() and
> >> dma_unmap_single() to be called in interrupt context.
> > 
> > In fact I don't really understand how it's supposed to
> > work at all: you only sync when ring is full.
> > So host may not have seen your map request if ring
> > is not full.
> > Why is it safe to use the address with a device then?
> 
> viommu_map() calls viommu_send_req_sync(), which does the sync
> immediately after adding the MAP request.
> 
> Thanks,
> Jean

I see. So it happens on every request. Maybe you should clear
event index then. This way if exits are disabled you know that
host is processing the ring. Event index is good for when
you don't care when it will be processed, you just want
to reduce number of exits as much as possible.

-- 
MST
_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
