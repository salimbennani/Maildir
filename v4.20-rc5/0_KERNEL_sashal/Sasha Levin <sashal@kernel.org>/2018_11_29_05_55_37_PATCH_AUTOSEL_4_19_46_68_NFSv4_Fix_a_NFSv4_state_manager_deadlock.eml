Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:16:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0895F5803ED;
	Wed, 28 Nov 2018 21:59:53 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 21:59:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtGKoZRHcpUPF9cE4g+YICZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8m/bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoZL9p0MMoBalGQWgGPnixiNSi3PqwaE31fkqHwHc3AwnGtIDqG?=
 =?us-ascii?q?nao8/uNKcSS+++0a/Gwivdb/NX3zf29Y/Fcgs7rvGXXbJ/a87RxFIsFwzblFWQ?=
 =?us-ascii?q?r5LqPzeP2uQKqWib4PNtWOSygGAkswF8uiajytsoh4XTm44YxE7I+T9kzIs2Od?=
 =?us-ascii?q?G0Uk92bNy8HJZetSyWLZZ6T8w8T21yuCs20KMKtYK5cSUM1Z8p3QTQa+adfIiN?=
 =?us-ascii?q?+h/jVPieITN/hH99ZrK/iAi98VK6xu3/SMa0ylBKoTRBktXWsXANzRPT5tCGSv?=
 =?us-ascii?q?t74EihxS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuia+ZbEQk+uym?=
 =?us-ascii?q?6+T9ZbXmo4eRN4t1igH4L6QvldWzAecmPQgUWWiU5+C82KTk/Uz3RrVFkOc2n7?=
 =?us-ascii?q?LHsJDVO8sbvLS1AwxL3YY57RawETOm3M4fnXkdI1JJYAiHgJTxO1HSPPD4Cu+y?=
 =?us-ascii?q?g1CtkDdo2f/KJLLgAojWI3jHkbfhe6t96kFGxAoyy9Bf+4xbCrUbLP3vXU/xsc?=
 =?us-ascii?q?TSDgUlPAys3+bnFNJ925seWW2VA6+ZLLndsViS6uIvPumDfokVuDnmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZRZ3a1Qa?=
 =?us-ascii?q?0w/DI7CIWgDYfFQYCgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907doNPHU+i0ftZLgztR1/ffclRMp+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvR5C9/oXALNZNOJSFe8?=
 =?us-ascii?q?TdWgDjE8VdYxw94IY0ZgFNSulBHD3yy2A7ALk7yHHoA78qXZ33LpPcZy127G1L?=
 =?us-ascii?q?U9j1khWsZAKHephrBh+ATJB47GiUOZl720eqQa2yLN8GSDzW+KvExDVA5wUKPF?=
 =?us-ascii?q?XW0QZ0fMrNT54F/CQKGqCbg9LgRBzsuCILNQatL1lVVGWOvjONPGbm2sgWiwGw?=
 =?us-ascii?q?iHyqmMbIXwfWUdxzvSCE4fngAX/HaGMxU+Byi7r2LfCjxuCUzgY0f2/eZir3O7?=
 =?us-ascii?q?S1c+zxuWYE15y7q15hkViOSAS/MS27IEvzshqzV0HVqnw9LaEd2ApxBlfKVdZ9?=
 =?us-ascii?q?M970xK1WbYtwx7I5yhILpuhl8YcwRroUzu0w97BZlHkcgvtHkq1hZ9KbqE0FNd?=
 =?us-ascii?q?cDOVxYr/OrnJJWj94h+ua7Ta1UrD0NmL4KgP7vc4q1L9vAyyEkoi8nNn08Ra0n?=
 =?us-ascii?q?eG55XKChYSXoz1Ukot6xd6oLTaaDEn54zIzX1sLbW0sjja1tMpGesp0Aqvc81e?=
 =?us-ascii?q?MaOEDgDyFcIaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF34wEw/6ExASHTSrzjFC7vsDxh49EfzASEnOjxif+AI5ee7N9?=
 =?us-ascii?q?fZwMCWeoOMC3wtR+h5jwW39X7lKjBlUG2NO3dhqWdVDywQpQ1UEPq3y9hSS41y?=
 =?us-ascii?q?B0ky0urqeH3C3Owv7udRodNm5QWWlii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JEovj9NUOS/YlCaTaTxowAA3CPgHG?=
 =?us-ascii?q?texTY7eC+supjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+G+TW2hUYdfcSvqzYOGrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diGYFxiIowiIsQ2XgHnJqV+3UHnHz3?=
 =?us-ascii?q?MdVa36L+cXUMSSQKw97T/AjqxkljImiVyIL+U3WX2tFhaMWiYmMKxiI96NhHCK?=
 =?us-ascii?q?KV7LxHhyR5uFS5ohzKYfhhgDgd0+Ah52AAg+EGowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6AS9w6cB/PEjN0XLp7IHkZc?=
 =?us-ascii?q?LQbckSthCPlxfAju5VKI8+l/YQhCpnP379smMhy+IhkRNu2pS6tpCdK2px5KK5?=
 =?us-ascii?q?HgJYNjrtaswI4D7tiqJentuM04CrA5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhiRgOSJElBjwAPRjk6goQ1FgO3xMzi?=
 =?us-ascii?q?bUd54Coe5kXjpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SbZgRPEGEJQ1GECErlPrW0/tnA9O6YBuWlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrNb8GFpRe8+S53rs?=
 =?us-ascii?q?Gl/PToQgLv4oSPBKVIMdVy4BC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy58LtZI4Lkm3gZTOc/XkNf11r9jg/4xCldFU0?=
 =?us-ascii?q?Hhm86zacwLJWG9KE3IBEKROLuaIj3Lxtn9YbmgRr1IkOVUqxqwtC6HE0/iOzSP?=
 =?us-ascii?q?jSXmWwqzPuFMki6bOgdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA2xA4WBjLemBmiaZ6fHXK5cWsfRxBCR0mPlX4HA7y7tT?=
 =?us-ascii?q?8SFFS+Z5mCrUrt5yvV6mlvODxSZgUBpL+X53g9eQoUxoPajx6JZNQzDH8QgL4G?=
 =?us-ascii?q?HWDA4F45NhC9vyq+VTx8LJmabbNjhP6ZTX8NEaCsySL9iIY1Q7Nh+8IzfPDAJN?=
 =?us-ascii?q?aTO1NGeX01dUi/Gb8lWWo4I8p5yqn4ABHOwIHGcpH+8XXxw2VOcJJ416C3Z9ye?=
 =?us-ascii?q?aW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAABIf/9bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBGMCIINFJcugXEWGBMBh3AiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJiAwMBAiQZAQE3AQUJAQEfMQNUBxIFgxyCAgQBpReBbDOCd?=
 =?us-ascii?q?gEBBYcoCIdrgw+BHBeBQD+DdYICgxeFcZAekAMJgiGICoZ8CxiRGoh3j1OBRoI?=
 =?us-ascii?q?NMxoIKAiDJ4IbDBeIXoVdIjKBBQEBjTIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AMAABIf/9bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBGMCIINFJcugXEWGBMBh3AiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJiAwMBAiQZAQE3AQUJAQEfMQNUBxIFgxyCAgQBpReBbDOCdgEBBYcoCIdrgw+?=
 =?us-ascii?q?BHBeBQD+DdYICgxeFcZAekAMJgiGICoZ8CxiRGoh3j1OBRoINMxoIKAiDJ4IbD?=
 =?us-ascii?q?BeIXoVdIjKBBQEBjTIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,293,1539673200"; 
   d="scan'208";a="42772070"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 21:59:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728926AbeK2RDw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 12:03:52 -0500
Received: from mail.kernel.org ([198.145.29.99]:38210 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728107AbeK2RDw (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 12:03:52 -0500
Received: from sasha-vm.mshome.net (unknown [37.142.5.207])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 05708208E7;
        Thu, 29 Nov 2018 05:59:38 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543471181;
        bh=XZIMpldLM58zbtDq4L6xLhMKLPBlcBIuG/V0QQiwxFY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=HrYHqPnvgZjDTqMkWU2e7SYBevvDgvipGP/lz6Ue+rrM3fiRFOOxbI53xc21em+ug
         pyTzb5wUKcCU0LwnRtjKPyV+mj1ELkrl53SNctb+pG4b6ZEPiOYqrjhahBhkTq+2Mt
         a2QzYbuoTJ/d328JonSpunUIGfINvs8y3jWoIj1c=
From: Sasha Levin <sashal@kernel.org>
To: stable@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: Trond Myklebust <trond.myklebust@hammerspace.com>,
        Sasha Levin <sashal@kernel.org>, linux-nfs@vger.kernel.org
Subject: [PATCH AUTOSEL 4.19 46/68] NFSv4: Fix a NFSv4 state manager deadlock
Date: Thu, 29 Nov 2018 00:55:37 -0500
Message-Id: <20181129055559.159228-46-sashal@kernel.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181129055559.159228-1-sashal@kernel.org>
References: <20181129055559.159228-1-sashal@kernel.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Trond Myklebust <trond.myklebust@hammerspace.com>

[ Upstream commit aeabb3c96186a0f944fc2b1f25c84d5eb3a93fa9 ]

Fix a deadlock whereby the NFSv4 state manager can get stuck in the
delegation return code, waiting for a layout return to complete in
another thread. If the server reboots before that other thread
completes, then we need to be able to start a second state
manager thread in order to perform recovery.

Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 fs/nfs/nfs4_fs.h   |  2 ++
 fs/nfs/nfs4state.c | 16 +++++++++++-----
 2 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/fs/nfs/nfs4_fs.h b/fs/nfs/nfs4_fs.h
index 3a6904173214..63287d911c08 100644
--- a/fs/nfs/nfs4_fs.h
+++ b/fs/nfs/nfs4_fs.h
@@ -41,6 +41,8 @@ enum nfs4_client_state {
 	NFS4CLNT_MOVED,
 	NFS4CLNT_LEASE_MOVED,
 	NFS4CLNT_DELEGATION_EXPIRED,
+	NFS4CLNT_RUN_MANAGER,
+	NFS4CLNT_DELEGRETURN_RUNNING,
 };
 
 #define NFS4_RENEW_TIMEOUT		0x01
diff --git a/fs/nfs/nfs4state.c b/fs/nfs/nfs4state.c
index 18920152da14..d2f645d34eb1 100644
--- a/fs/nfs/nfs4state.c
+++ b/fs/nfs/nfs4state.c
@@ -1210,6 +1210,7 @@ void nfs4_schedule_state_manager(struct nfs_client *clp)
 	struct task_struct *task;
 	char buf[INET6_ADDRSTRLEN + sizeof("-manager") + 1];
 
+	set_bit(NFS4CLNT_RUN_MANAGER, &clp->cl_state);
 	if (test_and_set_bit(NFS4CLNT_MANAGER_RUNNING, &clp->cl_state) != 0)
 		return;
 	__module_get(THIS_MODULE);
@@ -2485,6 +2486,7 @@ static void nfs4_state_manager(struct nfs_client *clp)
 
 	/* Ensure exclusive access to NFSv4 state */
 	do {
+		clear_bit(NFS4CLNT_RUN_MANAGER, &clp->cl_state);
 		if (test_bit(NFS4CLNT_PURGE_STATE, &clp->cl_state)) {
 			section = "purge state";
 			status = nfs4_purge_lease(clp);
@@ -2575,14 +2577,18 @@ static void nfs4_state_manager(struct nfs_client *clp)
 		}
 
 		nfs4_end_drain_session(clp);
-		if (test_and_clear_bit(NFS4CLNT_DELEGRETURN, &clp->cl_state)) {
-			nfs_client_return_marked_delegations(clp);
-			continue;
+		nfs4_clear_state_manager_bit(clp);
+
+		if (!test_and_set_bit(NFS4CLNT_DELEGRETURN_RUNNING, &clp->cl_state)) {
+			if (test_and_clear_bit(NFS4CLNT_DELEGRETURN, &clp->cl_state)) {
+				nfs_client_return_marked_delegations(clp);
+				set_bit(NFS4CLNT_RUN_MANAGER, &clp->cl_state);
+			}
+			clear_bit(NFS4CLNT_DELEGRETURN_RUNNING, &clp->cl_state);
 		}
 
-		nfs4_clear_state_manager_bit(clp);
 		/* Did we race with an attempt to give us more work? */
-		if (clp->cl_state == 0)
+		if (!test_bit(NFS4CLNT_RUN_MANAGER, &clp->cl_state))
 			return;
 		if (test_and_set_bit(NFS4CLNT_MANAGER_RUNNING, &clp->cl_state) != 0)
 			return;
-- 
2.17.1

