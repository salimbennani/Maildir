Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:20:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 43F0C580213;
	Fri, 30 Nov 2018 08:40:11 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga006-1.jf.intel.com with ESMTP; 30 Nov 2018 08:40:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAMBFshWPf9MlkVqX9TqTJzAQrA3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp6y?=
 =?us-ascii?q?YZUBD+QBPuhWoYfyqFQMohSiCgesH/vvxz1Ti3/q36A3yfgtHR3I0QEiGd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe270bPIzTTFb/NXxzfy8pPIeQ0kr/6WW7J/bNDeyUY1GAPZilWf?=
 =?us-ascii?q?s5HuMjSO1uQXsmib6etgVfy1hG48sQ1xoSKgxsExhYbTiYIa0EzE9SFjz4suId?=
 =?us-ascii?q?24SUh7bsS+EJtXrS2aMJF2Qsw7TmxupS00yaUGtIalcCQWzJkr3QPTZvKZf4SS?=
 =?us-ascii?q?/x7uV/qdLS15iX9nYL6yhBe//VKux+HgTMW4zlZHojZfntTDuX0A0QHY5NKdRf?=
 =?us-ascii?q?tn5Eih3C6C1wDN5eFAJkA5jbTbK5E/zb4qjJYTslrMHjXwmEroiK+abEIk+vKn?=
 =?us-ascii?q?6+j/Y7XmoIGTN5Nshw3gLqgjntazDfk2PwQQRWSX5Oex2KH58UD4QrhGlvg2nb?=
 =?us-ascii?q?PYsJDeK8QbvKm5AwpN34Yn6ha/CSqm0dsBkXkEMl1FYhSHgJbtO13XJ/D5A/G/?=
 =?us-ascii?q?jEq2kDpw2fDGMaPuAo/XInjAjrjhZ7B95FBYyAYpytBf/Z1UBqkbIP3vQk/xqM?=
 =?us-ascii?q?DYDhghPgywwubnC8ty2pkRWGKSGaKZNKLSsVmV5uMgOeWMZYkVuCrjJPgh/fLh?=
 =?us-ascii?q?kXg5mVoFd6mzwZQXcGy4HuhhI0iBYXrjmNYBEXsQsQo5VuDqiECCXiRVZ3a9RK?=
 =?us-ascii?q?884jA7CIS7DYbMXIytgbqB3DulEZ1SfGxJFleMEXLwfYWeR/gMcD6SItNmkjEc?=
 =?us-ascii?q?V7ihTJEu2QuttA/9zbpnKO3U9zYctZLi0th1+uLSmQsz9TxyE8SSzWWNQ3tokW?=
 =?us-ascii?q?MPQj88xLp/rlBlylefzah4hORVGsZI5/NJVQc6NoTQz/ZgBNDwQQ/BetaJSFC7?=
 =?us-ascii?q?QtSpGz0xT9Qxw8MQbEZ5AdmtkhfD3y+yCb8Pi7OLHIA08r7b33XpJMZy0XDG2L?=
 =?us-ascii?q?Mlj1knWMRPM2Kmi7V79wjSAY7JjkqYm7yrdaQawC7C6mODwXCSs0FfVQ56Sb/F?=
 =?us-ascii?q?UmwHZkvKsdT54VvPQKK0BrQ5LARN086CJbFMat3yk1pGQvDvONDdY2K0n2e9Hh?=
 =?us-ascii?q?KIxrKKbIr3dGQRxiTdCE4Ykw8N+XaKLxQxBiCko2jGFjxhCUrvY1/w8el5sH60?=
 =?us-ascii?q?U1U7zx+UYEF717q64BgVheeCRPMVxb8EvCYhqzNpHFeyxd7WCtyApxZ/c6VYe9?=
 =?us-ascii?q?8y/FBH1WfBvQxnIpOgN7xihkIZcwlvo0Pu1hB3CoJckcgqrHIm1hZyJbif0FNb?=
 =?us-ascii?q?czOY3JbwOrLMJ2n2/RCvbbPW217E3NaX/KcP9Oo3q1H5sA61EUoi9m1t08NJ3H?=
 =?us-ascii?q?uE+pXKEA0SXIrrXUYz6Rd7qK/VYykn64zPyH1jLLO7sjnB29IuGuso0RKgf9ZZ?=
 =?us-ascii?q?MKOZGw7+CcwaB86yKOM0n1ildA4LPOdX9KQsJcOpa+OG2LK3POZnhD+njXlH7J?=
 =?us-ascii?q?ph3U6W9it8SvTH35AKw/yD2guHVjH8jEqus8ztmIBEYy0SEXS7yST+GIFRYahy?=
 =?us-ascii?q?d54RCWiyO8232sl+h5n1Vn5C9V6sG0kJ2NW0dhqVdVD92xNf1V4WoXC+hSS31T?=
 =?us-ascii?q?h0nCw3oaqF2yzOxf/vdB4GOm5NWWljgk3gIYmyj9AGQkeoaxIlmwei5Ub/36Jb?=
 =?us-ascii?q?vrhwL3HPQUdUeCj7N2FjUqqquruCecJP844osSNMXeS4YFCaTKP9ohQA3yPiGW?=
 =?us-ascii?q?te2C40dzWwtprlmBx6jXqXLGxvo3rBZcFw2RDf6cTeRfFLxDoGRyp4iT7NClin?=
 =?us-ascii?q?Jdap/taUl5bFsu+gUWKsTZlTcSjtzYOduyq3/2xqARujn/+tnt3rCxQ10Sj+19?=
 =?us-ascii?q?NyTyXHsA78YpX316S9Ke9mflNnBFjm58p4G4F+lJA9hJUR2Xgcm5WU8mALkWb1?=
 =?us-ascii?q?MdVHx63+aGABSiIMw97Q+ALlwlFsLmqVx4LlUXWQ2shhaMO7Ym8M2iI98tpFCK?=
 =?us-ascii?q?Gb7LFfmSt1o1y4rR/eYPRnnzcdz+cu52Aeg+0TpAUtySCdCKgIHUZEJSzsiwiI?=
 =?us-ascii?q?79emoaVSZWavcqK/2FBwnN+/F7GCvh9TWGzidZg8By9w4d5yMFbN0H3194Hld8?=
 =?us-ascii?q?PcbdMVth2IjRjAi/JZJ442lvoPnSBnI37yvWU5y+4nihxjxY26vI+CK2l3/aO2?=
 =?us-ascii?q?GBhYNiDuZ8MI+zHglqJenseQ34CyEZRtADQLXJ30Tf22FDIer+joNwGLEDcksH?=
 =?us-ascii?q?eUBaLfHROD6Edht3/ACIqkN3aTJHkE19liQASdKVdbgAAVWjU6g5E4GhqrxMzn?=
 =?us-ascii?q?bEd2+DQR6kTkpRtLz+JiLwP/XXvHpAe0djc0T4CSLBhM4QFH+UjVKtaS7v5pEy?=
 =?us-ascii?q?Fb452hrxGNKmqBaARTFmwJXk2EB1b+Prih/9XA8u6YBvagIPvKe7mBteteV/KQ?=
 =?us-ascii?q?z5K1zoRm5yqMNtmIPnR6D/w73VdDXWlkG8vDnTUDUTcXlyXLb86Uvxq8/ix3rs?=
 =?us-ascii?q?ai8PXkQg7v5I2PC6dMPtVr4Ry5naCDN+uIjiZjNTlYzo8MxWPPyLUH3F4dlSBu?=
 =?us-ascii?q?dzquEbQBryLNT7jQmqhYDxEFcSNzKdBI4rk43glMP87bl9z02qR5jv4zF1dKS1?=
 =?us-ascii?q?jhltu1aswNJmG3LEnHC1qTNLSaOT3LxNn6brmhSbJLluVbqR2xtSyfE0/iJTmD?=
 =?us-ascii?q?kzjpVxayMeBDli2bPRpeuJ2jfRZpE2TsUNXmahijOt9tkTI22aE0hm/NNWMELT?=
 =?us-ascii?q?h8ckZNoqeM4i9Cnvp/G3JO7nx+IOmAmiaZ6fTYK5kMvftqBCR0i/xV4HAgx7RJ?=
 =?us-ascii?q?6yFEQeR/mDHOod52v1Gmju6PxyJnURVUrDZLgYOLvUN6NqTY9plPQ3DE/B0W4G?=
 =?us-ascii?q?WUChQKocZlC9L1t6BRzNjPiLz8KDNY/93I+sscApucFMXSGWAnPVLDFSTbCQID?=
 =?us-ascii?q?S3b/PHvZi2RUivee/DuZo85phILrnc81UL5dVUI8Dbs5A0JpFdMLPJN+Fmc/i7?=
 =?us-ascii?q?+djdAB/jy9pR/dTcpTopTOfvaTB/z1L3Cel7YSNEhA+q/xMYlGbt6z4EdlcFQv?=
 =?us-ascii?q?2d2SQ0c=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ASAAB/ZgFch0O0hNFZChwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYJsfyeDeYgYjAqBYAglFJc0gXMSAQEYEwGHdiI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEEQgBATcBBAEJAQEKGAICJ?=
 =?us-ascii?q?gICAzEBBQEcBg0GAgEBAYMcgXoIBAGacDyKHXB8M4J2AQEFgkOEZQgSeYlzgRy?=
 =?us-ascii?q?BVz+BOAyCX4RWgy+CV4krgXOEVI9wVQcCgh4Ejw8GGIlZEIc2mDYCBAIEBQIFD?=
 =?us-ascii?q?yGBJYINfYMvghsMF4hehT4BQDKBBQEBjUkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ASAAB/ZgFch0O0hNFZChwBAQEEAQEHBAEBgVEHAQELAYJ?=
 =?us-ascii?q?sfyeDeYgYjAqBYAglFJc0gXMSAQEYEwGHdiI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmEBAQEBAgEBAiAEEQgBATcBBAEJAQEKGAICJgICAzEBBQEcBg0?=
 =?us-ascii?q?GAgEBAYMcgXoIBAGacDyKHXB8M4J2AQEFgkOEZQgSeYlzgRyBVz+BOAyCX4RWg?=
 =?us-ascii?q?y+CV4krgXOEVI9wVQcCgh4Ejw8GGIlZEIc2mDYCBAIEBQIFDyGBJYINfYMvghs?=
 =?us-ascii?q?MF4hehT4BQDKBBQEBjUkBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="55569000"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 08:40:09 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727143AbeLADt6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 22:49:58 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:54462 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726878AbeLADt6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 22:49:58 -0500
Received: by mail-wm1-f65.google.com with SMTP id z18so6463272wmc.4
        for <linux-kernel@vger.kernel.org>; Fri, 30 Nov 2018 08:40:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=RiD43XBdbofYAMKPSfiaK3i8AWh7DfIwvsMH/+vYZqs=;
        b=DK1vAmJfENgOL7dylX/XHCQ4a2rmBsT/n42lvSLWm+95dpJSftirMBm60FWobW8v0L
         VBj3GsUhwPTvGfWvW9P8bHR7N8rE0VQqwg2xcZSSJLJUYqWFsaO9djlvE3TfdxWWla1H
         mx4NwsahT/FO++zVwUiiMTYsYJRQk/wE2jR8s=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=RiD43XBdbofYAMKPSfiaK3i8AWh7DfIwvsMH/+vYZqs=;
        b=eS0WUZTypIcmTh+flnalvCZLjEQDmtRnzEFrPJKaBZzqUeuCf9sdf5h/Wiy7kZRY4i
         GWEEIaNU5n3VllzH1ctuwmWqDWEDMx9/JLxUGt0FOgj6QXuyGuvAOgoYBC36Wg1l6T/2
         TExK5kQwqLvH8NzyTON3WbnIFzs/093EflupjxquB2EAzl7E3EBkDD9aejGMJ44HSo1Z
         noP7u4tMBwqHz8K6mOteCkLk5X1hY4gpdwQILO5EXCHsqzqi97eEpz8Nsrc1oEVorAc0
         3PrdnB+vEbVIVDvkPUg5nEBRZsNJlY6gKDUquvFyf6H8pjMKJ550vMno1iY8jh8xkdCe
         9hxQ==
X-Gm-Message-State: AA+aEWaOgxa8miFesvqhSa25VsooSNLx0+uu0okEXjpaYk59OeJS1qf2
        fB76op2gnTbmqdKJ4F2BkzRTTw==
X-Google-Smtp-Source: AFSGD/UR0OOxTI5SVedH1B3/VojRsb5/HXUrRG/x8JJFC1HKXdJQqYLK+HpGxPSayh/KuM4GZn5MxA==
X-Received: by 2002:a1c:a3c3:: with SMTP id m186mr6206171wme.16.1543596003063;
        Fri, 30 Nov 2018 08:40:03 -0800 (PST)
Received: from [192.168.86.29] (cpc89974-aztw32-2-0-cust43.18-1.cable.virginm.net. [86.30.250.44])
        by smtp.googlemail.com with ESMTPSA id m126sm8776662wmb.30.2018.11.30.08.40.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 30 Nov 2018 08:40:02 -0800 (PST)
Subject: Re: [RFC PATCH 3/6] char: fastrpc: Add support for context Invoke
 method
To: Arnd Bergmann <arnd@arndb.de>
Cc: Rob Herring <robh+dt@kernel.org>,
        gregkh <gregkh@linuxfoundation.org>,
        Mark Rutland <mark.rutland@arm.com>,
        DTML <devicetree@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Bjorn Andersson <bjorn.andersson@linaro.org>,
        linux-arm-msm@vger.kernel.org, bkumar@qti.qualcomm.com,
        thierry.escande@linaro.org
References: <20181130104657.14875-1-srinivas.kandagatla@linaro.org>
 <20181130104657.14875-4-srinivas.kandagatla@linaro.org>
 <CAK8P3a1mFWJyXCn74_Yd_y3Df0JN=qM4nw4-2t_LjRO7yXmXBw@mail.gmail.com>
 <3c177508-cf6f-1f8d-a324-5bec40fd9a9c@linaro.org>
 <CAK8P3a0d=VRP+9vZm+eJeJM933PWYL4sruMAYBYzWjg5B_kL2g@mail.gmail.com>
 <633cb111-f5d7-3648-54af-a476f3cbb279@linaro.org>
 <CAK8P3a1JSyxjuH2Xez-K3SFV20f-FJnzZHdNR1o41VrNNZkUPQ@mail.gmail.com>
From: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Message-ID: <35bfe1db-ae9c-4858-c1a3-12a0306bfa3a@linaro.org>
Date: Fri, 30 Nov 2018 16:40:01 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.2.1
MIME-Version: 1.0
In-Reply-To: <CAK8P3a1JSyxjuH2Xez-K3SFV20f-FJnzZHdNR1o41VrNNZkUPQ@mail.gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 30/11/18 16:19, Arnd Bergmann wrote:
> On Fri, Nov 30, 2018 at 5:03 PM Srinivas Kandagatla
> <srinivas.kandagatla@linaro.org> wrote:
>> On 30/11/18 15:08, Arnd Bergmann wrote:
>>> On Fri, Nov 30, 2018 at 4:01 PM Srinivas Kandagatla
>>> <srinivas.kandagatla@linaro.org> wrote:
>>>> Thanks Arnd for the review comments!
>>>> On 30/11/18 13:41, Arnd Bergmann wrote:
>>>>> On Fri, Nov 30, 2018 at 11:48 AM Srinivas Kandagatla
>>>>> <srinivas.kandagatla@linaro.org> wrote:
>>>
>>>>>> +static long fastrpc_device_ioctl(struct file *file, unsigned int cmd,
>>>>>> +                                unsigned long arg)
>>>>>> +{
>>>>>> +       struct fastrpc_user *fl = (struct fastrpc_user *)file->private_data;
>>>>>> +       struct fastrpc_channel_ctx *cctx = fl->cctx;
>>>>>> +       char __user *argp = (char __user *)arg;
>>>>>> +       int err;
>>>>>> +
>>>>>> +       if (!fl->sctx) {
>>>>>> +               fl->sctx = fastrpc_session_alloc(cctx, 0);
>>>>>> +               if (!fl->sctx)
>>>>>> +                       return -ENOENT;
>>>>>> +       }
>>>>>
>>>>> Shouldn't that session be allocated during open()?
>>>>>
>>>> Yes, and no, we do not need context in all the cases. In cases like we
>>>> just want to allocate dmabuf.
>>>
>>> Can you give an example what that would be good for?
>>>
>>
>> Currently the instance which does not need session is used as simple
>> memory allocator (rpcmem), TBH, this is the side effect of trying to fit
>> in with downstream application infrastructure which uses ion for andriod
>> usecases.
> 
> That does not sound like enough of a reason then, user space is
> easy to change here to just allocate the memory from the device itself.
> The only reason that I can see for needing a dmabuf would be if
> you have to share a buffer between two instances, and then you
> can use either of them.

I agree, I will try rework this and remove the instances that does not 
require sessions!

Sharing buffer is also a reason for dmabuf here.

> 
>>>>>> +static void fastrpc_notify_users(struct fastrpc_user *user)
>>>>>> +{
>>>>>> +       struct fastrpc_invoke_ctx *ctx, *n;will go
>>>>>> +
>>>>>> +       spin_lock(&user->lock);
>>>>>> +       list_for_each_entry_safe(ctx, n, &user->pending, node)
>>>>>> +               complete(&ctx->work);
>>>>>> +       spin_unlock(&user->lock);
>>>>>> +}
>>>>>
>>>>> Can you explain here what it means to have multiple 'users'
>>>>> a 'fastrpc_user' structure? Why are they all done at the same time?
>>
>> user is allocated on every open(). Having multiple users means that
>> there are more than one compute sessions running on a given dsp.
>>
>> They reason why all the users are notified here is because the dsp is
>> going down, so all the compute sessions associated with it will not see
>> any response from dsp, so any pending/waiting compute contexts are
>> explicitly notified.
> 
> I don't get it yet. What are 'compute sessions'? Do you have
> multiple threads running on a single instance at the same time?

compute sessions are "compute context-banks" instances in DSP.

DSP supports multiple compute banks, Ideally 12 context banks, 4 which 
are reserved for other purposes and 8 of them are used for compute, one 
for each process. So ideally we can run 8 parallel computes.


> I would have expected to only ever see one thread in the
> 'wait_for_completion()' above, and others possibly waiting
> for a chance to get to but not already running.
> 
>>>> struct fastrpc_remote_crc {
>>>>           __u64 crc;
>>>>           __u64 reserved1
>>>>           __u64 reserved2
>>>>           __u64 reserved3
>>>> };
>>>
>>> I don't see a need to add extra served fields for structures
>>> that are already naturally aligned here, e.g. in
>>> fastrpc_remote_arg we need the 'reserved1' but not
>>> the 'reserved2'.
>> Yes, I see, I overdone it!
>> Other idea, is, may be I can try to combine these into single structure
>> something like:
>>
>> struct fastrpc_invoke_arg {
>>          __u64 ptr;
>>          __u64 len;
>>          __u32 fd;
>>          __u32 reserved1
>>          __u64 attr;
>>          __u64 crc;
>> };
>>
>> struct fastrpc_ioctl_invoke {
>>          __u32 handle;
>>          __u32 sc;
>>          /* The minimum size is scalar_length * 32*/
>>          struct fastrpc_invoke_args *args;
>> };
> 
> That is still two structure, not one ;-)
> 
>>>> struct fastrpc_ioctl_invoke {
>>>>           __u32 handle;
>>>>           __u32 sc;
>>>>           /* The minimum size is scalar_length * 32 */
>>>>           struct fastrpc_remote_args *rargs;
>>>>           struct fastrpc_remote_fd *fds;
>>>>           struct fastrpc_remote_attr *attrs;
>>>>           struct fastrpc_remote_crc *crc;
>>>> };
>>>
>>> Do these really have to be indirect then? Are they all
>>> lists of variable length? How do you know how long?
>> Yes, they are variable length and will be scalar length long.
>> Scalar length is derived from sc variable in this structure.
> 
> Do you mean we have a variable number 'sc', but each array
> always has the same length as the other ones? In that
> case: yes, combining them seems sensible.
Yes thats what I meant!

> 
> The other question this raises is: what is 'handle'?
> Why is the file descriptor not enough to identify the
> instance we want to talk to?
This is remote handle to opened interface on which this method has to be 
invoked.
For example we are running a calculator application, calculator will 
have a unique handle on which calculate() method needs to be invoked.


thanks,
srini
> 
>        Arnd
> 
