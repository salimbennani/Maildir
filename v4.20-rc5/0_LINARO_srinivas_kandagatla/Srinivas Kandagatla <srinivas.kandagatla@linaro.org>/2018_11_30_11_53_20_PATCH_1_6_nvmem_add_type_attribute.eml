Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5D6D8580224;
	Fri, 30 Nov 2018 03:57:18 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 03:57:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVdXRExZmhQCD4JZOBxMIXTT/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizYh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOuRXr4fyqFUBthu+HQuhCfjzxjJLnHL6wbc33/g9HQzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtKakSS+G1zK/JzTXddfxWwir25o3SfRAnvP6DR71wftDNyUkrDQzOk1Kd?=
 =?us-ascii?q?qZf/PzOU0OQNsnab4PB7Ve61iG4osQdxrSW1yccjkIbJmoYVxUrf+CV9wYY1I8?=
 =?us-ascii?q?e3SFR8YdK+F5tQrS6aOpJwT8g/QG9ooD43xqMatZO/ZiQG1ZoqywDFZ/CacIWE?=
 =?us-ascii?q?/gjvWeeTLDtgh39oeaizihiu/US61OHxVtW43ExFoydKlNTHq2oD2AbJ6sedT/?=
 =?us-ascii?q?tw5keh1iiL1wDU8uxEP080mrTBK5I7wb4/iIATsULdES/ygkn2i7WWdko89uip?=
 =?us-ascii?q?7eTofKnmq4eCO4NojgzyKLkil8KhDegiLwQDXHSX9f692bDh5UH5Ra9Fjvwykq?=
 =?us-ascii?q?nXqpDaIsEbq7a9Aw9U1IYj9hm+Ay6l0NsGh3kHKkxKeBaeg4juNVDOJu73De2k?=
 =?us-ascii?q?jlSynzdk2erGMqfiAprTNHjDlqnufbJn505b0gozwshT54hIBbEZPPLzRkjxuc?=
 =?us-ascii?q?TcDh84MAy73fzrCdpg1o4FXWKPA6mZML7dsFOS5+IvJfWMa5ERuDrnN/cl4Pvu?=
 =?us-ascii?q?h2cjmVABZampwYcXaHegE/RmOUqZYGbsjc0GEWsQvgo+UfbliFuNUTNIY3ayXq?=
 =?us-ascii?q?Q85iw0CY68DIfDQJytj6KF3CuhApJWYWVGAEiWEXj0b4WER+sMaCWKL89jlTwL?=
 =?us-ascii?q?S6KtS4wm1RGosg/6zKFqLu7V+i0eqJLi28J55+zVlREu6zN0C96R3H2KT2Fxhm?=
 =?us-ascii?q?kIXSM53LhjoUxhzVeOybJ3g+dYFdxU5PNFSB06OoTez+FhD9DyWwTBfsqGSVq8?=
 =?us-ascii?q?Q9WmBy0xQcw1w9MUf0l9HNCihAjZ3yW2G78Vi6CLBJss/6LfxXfxIdxxy3LH1K?=
 =?us-ascii?q?Y7iVkmTdBCNWmnhq556gjSCJTFk0Sfl6a2a6sc2DTB+3uEzWqLpEtYShJ/Ub3Z?=
 =?us-ascii?q?XXADYUvbtcn26VncT7CwE7gnMhFOyciZKqRUbN3lilFGRPTmONTaeG+xn2awBR?=
 =?us-ascii?q?CVxrKDdobqemMd3DnDB0gAiQwc4XGGNQ0mDCe7v23eFCBuFU7oY0707OZxsm27?=
 =?us-ascii?q?QVEuwwGKdUJh0aG19QAThfGHT/MT37QEuDouqjluHVa92c7WBMSEpwZ7YKpcZt?=
 =?us-ascii?q?Y96k9d1W3Frwx9IoCgL6d6i14CcgR3ukTu1wl3CoRAi8QqsGkmzA1oKaKc0VNB?=
 =?us-ascii?q?cTyY0Iv0Or3WLGny4R+uZ7TX2lHYzNaZ5KMP5O4kpFXkuQGjDlAi/Gl/09lJz3?=
 =?us-ascii?q?uc4Y3HAxAWUZ3vXUc46Rh7q6vBbSkg+ozbz3tsMaqzsj/cwN8pAOolyhC9f9ZQ?=
 =?us-ascii?q?Kq+EFQnyE9EECMiqMuAlh1+pbhccNuBI6KE0J9+md+eB2KOzPOdggSiqgnhd7I?=
 =?us-ascii?q?F80kKD7Sx8SuHT0pYBwvGY2BaHVjjmgFegtMD3hZ5LZTUIEmWjzijkAZZbZrdu?=
 =?us-ascii?q?coYTFWeuP8q3y81kh57sR3FX7kSjCE4B2MOzfxqdcUb93QxJ2UsLu3OnnTa3wC?=
 =?us-ascii?q?JukzEuqKqSxyjOw+XkdBoaNW9HXmhijVHwIYeqi9AWRlSnbw8slBG9/0b127Bb?=
 =?us-ascii?q?pLhjL2nUWUpJfyn2I3tiU6eqrbqCfshP5YgssSVWVuS8fF+bRqT8oxsczyPsAW?=
 =?us-ascii?q?9eyConeDGtv5XzhwZ6h36FLHZvsHrZftl9xRXF69zGRv5R3T0GSDNjiTbNBVi8?=
 =?us-ascii?q?PNip/dOKmJfFqe2+U2OhVptOcSjk14+AtS275XF0Dh27hfy8htrnEQ0i2y/hy9?=
 =?us-ascii?q?ZqTTnIrAr7YoTz16W1K+VnclNqBF/97cp3AYV+koo2hJEN1nkWnJSV/XwbkWjt?=
 =?us-ascii?q?NdVXw77xbH0IRTQT2d7a/BDl2FF/LnKO34/5VW+Swsp7a9m6f2MZwCQ9789RBa?=
 =?us-ascii?q?eQ7bxEmzZ1o1WioQLQZ/h9gikSyf805HEGhOEJvRInzj+BDbAKAUlYISvsmgyN?=
 =?us-ascii?q?79C/r6VYfnyjcLau20plgdCuEquCrRpCV3bjdZcvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M7kRtu3ZSgsImGMWpt+r+5?=
 =?us-ascii?q?AgVDNj30fM4T/jDtjaBDnseZxYyvH5NhGikVU5vsV/6nDDUStfH/PQaUDDI8sm?=
 =?us-ascii?q?ubGabYHQKH80hptXXPE5S2N32NIHkZ0M5vRB2cJExZnQAVUy82np8/FgC22sPh?=
 =?us-ascii?q?dF116SwW5l79shFM0P5nNwHjUmfDowelcjU0R4KaLBVI9QFO/VvVPdad7uJuHC?=
 =?us-ascii?q?FY45uhoxaWKmGAYwRIDGcJWlGLBlz5P7mu48XA/PacBuakM/TOZrCOo/REV/iU?=
 =?us-ascii?q?3ZKvzpdm/zGUO8SPOXliEuQ72ldZUnB/AcjZgDIPSyoYly/Wa86bpRG8+jB4r8?=
 =?us-ascii?q?yl8fTrXh7v6pWLC7dILdpv/BW2i7+ZN+GMnCZ5NSpY1pQUyH/I1rcf3V0SiyJv?=
 =?us-ascii?q?dzW3ErQArynNTK3Ola9NEh4bcDh+NM9J76I6wwlMNtTXitLz1r5kkPE1D01JWk?=
 =?us-ascii?q?DmmsGsfcYKOX2yNEvbBEaXM7SLPSfEw9zsbqOmV7JRjP9YtxmxuTuAF0/jPzKD?=
 =?us-ascii?q?lyTmVhy1MOFMij2bMwJauI2nbhltDm3jRsr8ahKnKN93kSE2wbosi3PWNG4cNC?=
 =?us-ascii?q?JwfF9XorKM7SNXnPN/FndF7npkK+mEhimY4/PZKpYQrftkHCB0m/hG73Q9zrtf?=
 =?us-ascii?q?9DtES+BtmCvOst5upEmrk+mVxTphVRpOqzBLi5qKvEViI6rZ8JZAVG3A/BIM62?=
 =?us-ascii?q?WQFhsLq8FkCt3pp6Bf1NzPmLjvJzdF9tKHtfcbUsfOJc2EMFIlMBz0CDDTEQ0J?=
 =?us-ascii?q?RCKqMmeZgFZSw9+I8XjAlYI7rJnykYFGabZdWFU6H+8eAwwxB8YDJpZpVyhikr?=
 =?us-ascii?q?edgMcH7Ga6pTHVRcNTpJeBUeidV6a8YA2FhKVJMkNbiYjzKp4eY8iigxRv?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACqJAFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBFfiymCDRSXNIFzEgEBGBMBh3QiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAwMBAiQLAQ0BATcBBQkBAR8xAzEBBQEcGQWDHIICB?=
 =?us-ascii?q?AGbEDyKHYFsM4J2AQEFhygIEodbgxKBHIFXP4ERh1IthW+JI5Y7VQcCgh4Ejwo?=
 =?us-ascii?q?LGIFbh342hxCYMwIEAgkCBQ8hgSWCDX2DL4IbCQMXiF6FP0AygQQBAQGLT4JMA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACqJAFch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBFfiymCDRSXNIFzEgEBGBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiQLAQ0BATcBBQkBAR8xAzEBBQEcGQWDHIICBAGbEDyKHYFsM4J?=
 =?us-ascii?q?2AQEFhygIEodbgxKBHIFXP4ERh1IthW+JI5Y7VQcCgh4EjwoLGIFbh342hxCYM?=
 =?us-ascii?q?wIEAgkCBQ8hgSWCDX2DL4IbCQMXiF6FP0AygQQBAQGLT4JMAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="140245524"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 03:57:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727014AbeK3XCm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 18:02:42 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:44164 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726572AbeK3XCl (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 18:02:41 -0500
Received: by mail-ed1-f65.google.com with SMTP id y56so4585179edd.11
        for <linux-kernel@vger.kernel.org>; Fri, 30 Nov 2018 03:53:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=9Cu0F8XcCviwOyppZmYtR99atTDBIspjwFBk1xADlAk=;
        b=URlN7obKYy3HnB1wqabdcVyIohNNVJPe5lQU5bVTgAXOf087+lv/Z9fUXoeo9JCSaN
         S70jYgr1GmFx97jM9QiC8Gxmo8KCCiAktAh58IaNa68t/btHNPEVMqPKxY0UR/0/b660
         editZsa0NpDOA2806PJYSlkLfc2c+iCfBGCwc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=9Cu0F8XcCviwOyppZmYtR99atTDBIspjwFBk1xADlAk=;
        b=oag7rHiUP09hRhLpuE35qV18YiKXSMHnytnnYUXaEKOdNCbIfEAumceKVeYDCufOBi
         2gumrQjhr1G/KZo+xJi/2E0UwR7Rmb1X0po44agwuUBEAWpkqVC1qWtHRs/O4taNGaGN
         eFBFagOBw8OIwtSLB1H6m3xS2BwoOB4ApbtBsuPmKoPreWEtZrXWx2xRFv0hvgDiZx+0
         D/D7pDc0f0O4SseyMBvlXRvuVuSeATBMJYxwZnrtyXIsuA4IzcbmkNuOvh9yBjTTjNPT
         Q9yxkvivnFyWcs0A0Zw083z/s7FqZWSUY5bJmeC/L53MoZeY25jXeKNFWrjmFaO2FfKq
         1iaA==
X-Gm-Message-State: AA+aEWbD5GCNE8U/s0+awuseQ/hMhkrQb9l3E0zSvqN7sL/R15PIQ8Rs
        TZzj31wVu76oKnrSHT+UUmMy5U6KDDY=
X-Google-Smtp-Source: AFSGD/Vufhk57i65FoxfjMsifbIK3TDhj4jUk0fs7AYDeyu7TPi4nwAnyWiq9PUBbrt4unDKlZuqSQ==
X-Received: by 2002:a50:a844:: with SMTP id j62mr5255098edc.2.1543578817333;
        Fri, 30 Nov 2018 03:53:37 -0800 (PST)
Received: from srini-hackbox.lan (cpc89974-aztw32-2-0-cust43.18-1.cable.virginm.net. [86.30.250.44])
        by smtp.gmail.com with ESMTPSA id t10-v6sm767932ejg.41.2018.11.30.03.53.36
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Fri, 30 Nov 2018 03:53:36 -0800 (PST)
From: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
To: gregkh@linuxfoundation.org
Cc: linux-kernel@vger.kernel.org,
        Alexandre Belloni <alexandre.belloni@bootlin.com>,
        Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Subject: [PATCH 1/6] nvmem: add type attribute
Date: Fri, 30 Nov 2018 11:53:20 +0000
Message-Id: <20181130115325.16539-2-srinivas.kandagatla@linaro.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181130115325.16539-1-srinivas.kandagatla@linaro.org>
References: <20181130115325.16539-1-srinivas.kandagatla@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Alexandre Belloni <alexandre.belloni@bootlin.com>

Add a type attribute so userspace is able to know how the data is stored as
this can help taking the correct decision when selecting which device to
use. This will also help program display the proper warnings when burning
fuses for example.

Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
---
 drivers/nvmem/core.c           | 21 +++++++++++++++++++++
 include/linux/nvmem-provider.h | 16 ++++++++++++++++
 2 files changed, 37 insertions(+)

diff --git a/drivers/nvmem/core.c b/drivers/nvmem/core.c
index 27f67dfa649d..d9fd11033c1c 100644
--- a/drivers/nvmem/core.c
+++ b/drivers/nvmem/core.c
@@ -28,6 +28,7 @@ struct nvmem_device {
 	size_t			size;
 	bool			read_only;
 	int			flags;
+	enum nvmem_type		type;
 	struct bin_attribute	eeprom;
 	struct device		*base_dev;
 	struct list_head	cells;
@@ -83,6 +84,21 @@ static int nvmem_reg_write(struct nvmem_device *nvmem, unsigned int offset,
 	return -EINVAL;
 }
 
+static ssize_t type_show(struct device *dev,
+			 struct device_attribute *attr, char *buf)
+{
+	struct nvmem_device *nvmem = to_nvmem_device(dev);
+
+	return sprintf(buf, "%s\n", nvmem_type_str[nvmem->type]);
+}
+
+static DEVICE_ATTR_RO(type);
+
+static struct attribute *nvmem_attrs[] = {
+	&dev_attr_type.attr,
+	NULL,
+};
+
 static ssize_t bin_attr_nvmem_read(struct file *filp, struct kobject *kobj,
 				    struct bin_attribute *attr,
 				    char *buf, loff_t pos, size_t count)
@@ -168,6 +184,7 @@ static struct bin_attribute *nvmem_bin_rw_attributes[] = {
 
 static const struct attribute_group nvmem_bin_rw_group = {
 	.bin_attrs	= nvmem_bin_rw_attributes,
+	.attrs		= nvmem_attrs,
 };
 
 static const struct attribute_group *nvmem_rw_dev_groups[] = {
@@ -191,6 +208,7 @@ static struct bin_attribute *nvmem_bin_ro_attributes[] = {
 
 static const struct attribute_group nvmem_bin_ro_group = {
 	.bin_attrs	= nvmem_bin_ro_attributes,
+	.attrs		= nvmem_attrs,
 };
 
 static const struct attribute_group *nvmem_ro_dev_groups[] = {
@@ -215,6 +233,7 @@ static struct bin_attribute *nvmem_bin_rw_root_attributes[] = {
 
 static const struct attribute_group nvmem_bin_rw_root_group = {
 	.bin_attrs	= nvmem_bin_rw_root_attributes,
+	.attrs		= nvmem_attrs,
 };
 
 static const struct attribute_group *nvmem_rw_root_dev_groups[] = {
@@ -238,6 +257,7 @@ static struct bin_attribute *nvmem_bin_ro_root_attributes[] = {
 
 static const struct attribute_group nvmem_bin_ro_root_group = {
 	.bin_attrs	= nvmem_bin_ro_root_attributes,
+	.attrs		= nvmem_attrs,
 };
 
 static const struct attribute_group *nvmem_ro_root_dev_groups[] = {
@@ -605,6 +625,7 @@ struct nvmem_device *nvmem_register(const struct nvmem_config *config)
 	nvmem->dev.bus = &nvmem_bus_type;
 	nvmem->dev.parent = config->dev;
 	nvmem->priv = config->priv;
+	nvmem->type = config->type;
 	nvmem->reg_read = config->reg_read;
 	nvmem->reg_write = config->reg_write;
 	nvmem->dev.of_node = config->dev->of_node;
diff --git a/include/linux/nvmem-provider.h b/include/linux/nvmem-provider.h
index 1e3283c2af77..00ff92571683 100644
--- a/include/linux/nvmem-provider.h
+++ b/include/linux/nvmem-provider.h
@@ -19,6 +19,20 @@ typedef int (*nvmem_reg_read_t)(void *priv, unsigned int offset,
 typedef int (*nvmem_reg_write_t)(void *priv, unsigned int offset,
 				 void *val, size_t bytes);
 
+enum nvmem_type {
+	NVMEM_TYPE_UNKNOWN = 0,
+	NVMEM_TYPE_EEPROM,
+	NVMEM_TYPE_OTP,
+	NVMEM_TYPE_BATTERY_BACKED,
+};
+
+static const char * const nvmem_type_str[] = {
+	[NVMEM_TYPE_UNKNOWN] = "Unknown",
+	[NVMEM_TYPE_EEPROM] = "EEPROM",
+	[NVMEM_TYPE_OTP] = "OTP",
+	[NVMEM_TYPE_BATTERY_BACKED] = "Battery backed",
+};
+
 /**
  * struct nvmem_config - NVMEM device configuration
  *
@@ -28,6 +42,7 @@ typedef int (*nvmem_reg_write_t)(void *priv, unsigned int offset,
  * @owner:	Pointer to exporter module. Used for refcounting.
  * @cells:	Optional array of pre-defined NVMEM cells.
  * @ncells:	Number of elements in cells.
+ * @type:	Type of the nvmem storage
  * @read_only:	Device is read-only.
  * @root_only:	Device is accessibly to root only.
  * @reg_read:	Callback to read data.
@@ -51,6 +66,7 @@ struct nvmem_config {
 	struct module		*owner;
 	const struct nvmem_cell_info	*cells;
 	int			ncells;
+	enum nvmem_type		type;
 	bool			read_only;
 	bool			root_only;
 	nvmem_reg_read_t	reg_read;
-- 
2.19.2

