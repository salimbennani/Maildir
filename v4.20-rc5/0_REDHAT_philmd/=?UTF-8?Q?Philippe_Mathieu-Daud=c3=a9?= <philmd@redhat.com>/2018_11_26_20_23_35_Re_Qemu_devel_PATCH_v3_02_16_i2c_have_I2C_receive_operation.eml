Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:40:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E8782580322
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 12:28:40 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 12:28:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AFnd5fxKRA8XkBQeH+dmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXK//zrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQMhRWSxPDICy?=
 =?us-ascii?q?YYQBAOUOP/pXoYbgqVsWrxawBwahCP7hxzNUmHD2xrY30/giHAzcwAAsA9wDvX?=
 =?us-ascii?q?bSod7oNKkSS+e1zKzQwDvZb/NW2DP96InQchA5v/6DRbV+ftDNyUkvFgPKkEiQ?=
 =?us-ascii?q?pZXrMTyPy+QCrnKc5PdnWOK3i24nqgVxoj2yyco3kInGmJ8aylDe+iVl2oo6Od?=
 =?us-ascii?q?q4SEtibNOiDZBetDmaOpNoTs8+QGxkojs2xqAFtJKhYiQHxpQqywTCZ/GFa4SE?=
 =?us-ascii?q?/AjsWPqMLTp9mn1odrKyihOx/Ee61+H8WMy530tWoSZYjtXBs2sC2ADX58eZT/?=
 =?us-ascii?q?Z98Eas1SuA2g3W9O1LPEE5mrHeJpMj3rE/ip4evELeFSHsgkr2lrWZdkA89+io?=
 =?us-ascii?q?9evnZrLmq4eYN491kQH+Lr8ultawAeQ+LwgCRW+b+f6z1LH7/E35RqtFjuEun6?=
 =?us-ascii?q?XHrJzXJt4XqrOkDwJWyIov9RiyAje83NgFn3QLNFdFdwiGj4jtNVHOOvf4DfKn?=
 =?us-ascii?q?jlS1jjhrwu3GMqT8DZrTMHjMjrPhca9m5E5b1Qozy8xQ6IxPCr0GJPLzW0zxu8?=
 =?us-ascii?q?LCAh42Lgy52+LnCNR71oMDVmODGK6ZMKXOsVCW4uIjOfWDZIgQuDvmLfgl4Pju?=
 =?us-ascii?q?jXA/mV8AZ6Wp2oEXaH+gEvR8P0qZeWbsgssGEWoSugo+Te/qh0OYXT9cena/RK?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJESSgSoOfRv1ZaD6OOtQz1XsA?=
 =?us-ascii?q?VKO9UMkn0hehshK8zKBoae/d+ykdvJSk08Bp5urVjlYr+DlpSsiQzWyJHFxyhX?=
 =?us-ascii?q?4CEjo/3aRjph5kx1KelKR1nfFcUMZe/u5ESRsSM5nawOpnTdfoVVXaY92LRV26?=
 =?us-ascii?q?F8igGiw7VdkrwtUDMHp6TtCjiAHKxSaCCrQQ0buRC9h866/Zwj39Kthwz17A06?=
 =?us-ascii?q?8uiURgRdFAcSXsqrQ3sUD/DpDInw2wk6+sPYsd2CTA7nvJhT6Cs0BcWgNqTY3f?=
 =?us-ascii?q?UHwfb1eQptP8sAeKd7KyBK5vFwJQxcOGLuMectD1gE8AQf7yNNnaZ0q1mmG5Hx?=
 =?us-ascii?q?HOwamDOtnEYWIYiR3dCUwFixgeylOPKQg/Czrkj2vDAL0mQUrvYkfp/cFkpX+7?=
 =?us-ascii?q?R1NyxAaPOR4yn4Gp8wIY0KTPA8gY2agJ7WJ48215?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAB+VvxbhxHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAQGBLyqCOIN5iBhfiySBYAgllzyBdg8BARgUiGMiNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEKCwkIGw4vQgEQAYFiBQIDGgEGglsBAQEBAwECIAQLARMKK?=
 =?us-ascii?q?QMDAQIGAQEKFQMCAiIEAgIDATABBQEcBgEMBgIBAQGCUUuBdQ0BBJpvPIsNfDO?=
 =?us-ascii?q?FQINdgQ0SeYp+F4F/gREnDIJfiAKCVwKJI4V2kGkJkSkGGIlRhzcsl10CBAIEB?=
 =?us-ascii?q?QIFDyGBJYINMyIbFYMngicXEo4LcYEHIYY7g2eBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAAB+VvxbhxHrdtBkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAQGBLyqCOIN5iBhfiySBYAgllzyBdg8BARgUiGMiNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEKCwkIGw4vQgEQAYFiBQIDGgEGglsBAQEBAwECIAQLARMKKQMDAQIGAQEKFQM?=
 =?us-ascii?q?CAiIEAgIDATABBQEcBgEMBgIBAQGCUUuBdQ0BBJpvPIsNfDOFQINdgQ0SeYp+F?=
 =?us-ascii?q?4F/gREnDIJfiAKCVwKJI4V2kGkJkSkGGIlRhzcsl10CBAIEBQIFDyGBJYINMyI?=
 =?us-ascii?q?bFYMngicXEo4LcYEHIYY7g2eBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="139634290"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 12:28:40 -0800
Received: from localhost ([::1]:38689 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRNUl-0005fS-9A
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 15:28:39 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58920)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gRNPz-0001zq-Vf
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 15:23:48 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gRNPv-0000E5-7w
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 15:23:43 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:38118)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gRNPu-0000Da-Th
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 15:23:39 -0500
Received: by mail-wm1-f67.google.com with SMTP id k198so19985288wmd.3
	for <qemu-devel@nongnu.org>; Mon, 26 Nov 2018 12:23:37 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=mAwrVn8/sU4tqTXXv6bGMNaa4IfK8aW/wUoP4CwA4Ug=;
	b=HlBfFq74TdXLeL+vuT8vqhG7+Qussq1Ku4IQcMm/UOdoUjOEqVAcWFYhIJwfmiLys0
	fsZE1mie+OyIcc1V0vBKsBFheuimIGMCdmBN8TRtdSfb3x4j43CwikZ0j82nvlsI/i5t
	AGE4WjkOB64uI/71z6lSzpw2gO/5VbFgK3v3P5/8Q7mEj4k+H1WQDendNs9ZM6ZSjkXF
	H1ZaH2DsSIE0C4N0sM41OM2YzIcbbuZnzVjFjNgoQk0ekWZiUwr2/pd7XlS0xGeG5Au1
	ITT+iBGUNCAoQwktMR2+2W5qSqFQhNEflk93Qr3xZ0t4PI9pyIrDT3iBuHx2LfxE5G6R
	gMmg==
X-Gm-Message-State: AA+aEWZoXyGuadyqChzHEABGJ4rhFmdFqp9L9gjMo/EjgptL0UOV9wLs
	olVdJ2IuSDLHQkGmPfslCSPpug==
X-Google-Smtp-Source: AJdET5fXtKPDzFIaT/qpW7XycvZnsmMZSY/w5SEHvMGlF+/HWRWNJ93bXbxbWwVKqmc1NNF9Hc2fXw==
X-Received: by 2002:a1c:1dce:: with SMTP id d197mr26290818wmd.66.1543263816643;
	Mon, 26 Nov 2018 12:23:36 -0800 (PST)
Received: from ?IPv6:2a01:e35:8a1f:dc10:bc9e:f614:2d6b:7cc9?
	([2a01:e35:8a1f:dc10:bc9e:f614:2d6b:7cc9])
	by smtp.gmail.com with ESMTPSA id
	g198sm1473000wmd.23.2018.11.26.12.23.35
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 26 Nov 2018 12:23:36 -0800 (PST)
To: minyard@acm.org, qemu-devel@nongnu.org,
	"Dr . David Alan Gilbert" <dgilbert@redhat.com>,
	Peter Maydell <peter.maydell@linaro.org>
References: <20181126200435.23408-1-minyard@acm.org>
	<20181126200435.23408-3-minyard@acm.org>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <c982a937-7c5c-9dad-1940-f839349e4220@redhat.com>
Date: Mon, 26 Nov 2018 21:23:35 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181126200435.23408-3-minyard@acm.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.67
Subject: Re: [Qemu-devel] [PATCH v3 02/16] i2c: have I2C receive operation
 return uint8_t
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>, Corey Minyard <cminyard@mvista.com>,
	"Michael S . Tsirkin" <mst@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi Corey,

On 26/11/18 21:04, minyard@acm.org wrote:
> From: Corey Minyard <cminyard@mvista.com>
> 
> It is never supposed to fail and cannot return an error, so just
> have it return the proper type.  Have it return 0xff on nothing
> available, since that's what would happen on a real bus.
> 
> Signed-off-by: Corey Minyard <cminyard@mvista.com>
> Reviewed-by: Peter Maydell <peter.maydell@linaro.org>
> ---
>  hw/arm/pxa2xx.c         |  2 +-
>  hw/arm/tosa.c           |  4 ++--
>  hw/arm/z2.c             |  2 +-
>  hw/audio/wm8750.c       |  2 +-
>  hw/display/sii9022.c    |  2 +-
>  hw/display/ssd0303.c    |  4 ++--
>  hw/gpio/max7310.c       |  2 +-
>  hw/i2c/core.c           | 32 +++++++++++++-------------------
>  hw/i2c/i2c-ddc.c        |  2 +-
>  hw/i2c/smbus_slave.c    |  4 ++--
>  hw/input/lm832x.c       |  2 +-
>  hw/misc/pca9552.c       |  2 +-
>  hw/misc/tmp105.c        |  2 +-
>  hw/misc/tmp421.c        |  2 +-
>  hw/nvram/eeprom_at24c.c |  4 ++--
>  hw/timer/ds1338.c       |  2 +-
>  hw/timer/m41t80.c       |  2 +-
>  hw/timer/twl92230.c     |  2 +-
>  include/hw/i2c/i2c.h    |  7 +++----
>  19 files changed, 37 insertions(+), 44 deletions(-)
> 
> diff --git a/hw/arm/pxa2xx.c b/hw/arm/pxa2xx.c
> index f598a1c053..3d7c88910e 100644
> --- a/hw/arm/pxa2xx.c
> +++ b/hw/arm/pxa2xx.c
> @@ -1286,7 +1286,7 @@ static int pxa2xx_i2c_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int pxa2xx_i2c_rx(I2CSlave *i2c)
> +static uint8_t pxa2xx_i2c_rx(I2CSlave *i2c)
>  {
>      PXA2xxI2CSlaveState *slave = PXA2XX_I2C_SLAVE(i2c);
>      PXA2xxI2CState *s = slave->host;
> diff --git a/hw/arm/tosa.c b/hw/arm/tosa.c
> index 7a925fa5e6..eef9d427e7 100644
> --- a/hw/arm/tosa.c
> +++ b/hw/arm/tosa.c
> @@ -197,10 +197,10 @@ static int tosa_dac_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int tosa_dac_recv(I2CSlave *s)
> +static uint8_t tosa_dac_recv(I2CSlave *s)
>  {
>      printf("%s: recv not supported!!!\n", __func__);
> -    return -1;
> +    return 0xff;
>  }
>  
>  static void tosa_tg_init(PXA2xxState *cpu)
> diff --git a/hw/arm/z2.c b/hw/arm/z2.c
> index 697a822f1e..6f18d924df 100644
> --- a/hw/arm/z2.c
> +++ b/hw/arm/z2.c
> @@ -243,7 +243,7 @@ static int aer915_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int aer915_recv(I2CSlave *slave)
> +static uint8_t aer915_recv(I2CSlave *slave)
>  {
>      AER915State *s = AER915(slave);
>      int retval = 0x00;
> diff --git a/hw/audio/wm8750.c b/hw/audio/wm8750.c
> index f4aa838f62..169b006ade 100644
> --- a/hw/audio/wm8750.c
> +++ b/hw/audio/wm8750.c
> @@ -561,7 +561,7 @@ static int wm8750_tx(I2CSlave *i2c, uint8_t data)
>      return 0;
>  }
>  
> -static int wm8750_rx(I2CSlave *i2c)
> +static uint8_t wm8750_rx(I2CSlave *i2c)
>  {
>      return 0x00;
>  }
> diff --git a/hw/display/sii9022.c b/hw/display/sii9022.c
> index eaf11a6e7b..9994385c35 100644
> --- a/hw/display/sii9022.c
> +++ b/hw/display/sii9022.c
> @@ -79,7 +79,7 @@ static int sii9022_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int sii9022_rx(I2CSlave *i2c)
> +static uint8_t sii9022_rx(I2CSlave *i2c)
>  {
>      sii9022_state *s = SII9022(i2c);
>      uint8_t res = 0x00;
> diff --git a/hw/display/ssd0303.c b/hw/display/ssd0303.c
> index eb90ba26be..8edf34986c 100644
> --- a/hw/display/ssd0303.c
> +++ b/hw/display/ssd0303.c
> @@ -62,10 +62,10 @@ typedef struct {
>      uint8_t framebuffer[132*8];
>  } ssd0303_state;
>  
> -static int ssd0303_recv(I2CSlave *i2c)
> +static uint8_t ssd0303_recv(I2CSlave *i2c)
>  {
>      BADF("Reads not implemented\n");
> -    return -1;
> +    return 0xff;
>  }
>  
>  static int ssd0303_send(I2CSlave *i2c, uint8_t data)
> diff --git a/hw/gpio/max7310.c b/hw/gpio/max7310.c
> index a560e3afd2..f35a930276 100644
> --- a/hw/gpio/max7310.c
> +++ b/hw/gpio/max7310.c
> @@ -39,7 +39,7 @@ static void max7310_reset(DeviceState *dev)
>      s->command = 0x00;
>  }
>  
> -static int max7310_rx(I2CSlave *i2c)
> +static uint8_t max7310_rx(I2CSlave *i2c)
>  {
>      MAX7310State *s = MAX7310(i2c);
>  
> diff --git a/hw/i2c/core.c b/hw/i2c/core.c
> index b54725985a..15237ad073 100644
> --- a/hw/i2c/core.c
> +++ b/hw/i2c/core.c
> @@ -191,23 +191,17 @@ int i2c_send_recv(I2CBus *bus, uint8_t *data, bool send)

i2c_send_recv() could benefit the same improvement.

>          }
>          return ret ? -1 : 0;
>      } else {
> -        if ((QLIST_EMPTY(&bus->current_devs)) || (bus->broadcast)) {
> -            return -1;
> -        }
> -
> -        sc = I2C_SLAVE_GET_CLASS(QLIST_FIRST(&bus->current_devs)->elt);
> -        if (sc->recv) {
> -            s = QLIST_FIRST(&bus->current_devs)->elt;
> -            ret = sc->recv(s);
> -            trace_i2c_recv(s->address, ret);
> -            if (ret < 0) {
> -                return ret;
> -            } else {
> -                *data = ret;
> -                return 0;
> +        ret = 0xff;
> +        if (!QLIST_EMPTY(&bus->current_devs) && !bus->broadcast) {
> +            sc = I2C_SLAVE_GET_CLASS(QLIST_FIRST(&bus->current_devs)->elt);
> +            if (sc->recv) {
> +                s = QLIST_FIRST(&bus->current_devs)->elt;
> +                ret = sc->recv(s);
> +                trace_i2c_recv(s->address, ret);
>              }
>          }
> -        return -1;
> +        *data = ret;
> +        return 0;
>      }
>  }
>  
> @@ -216,12 +210,12 @@ int i2c_send(I2CBus *bus, uint8_t data)
>      return i2c_send_recv(bus, &data, true);
>  }
>  
> -int i2c_recv(I2CBus *bus)
> +uint8_t i2c_recv(I2CBus *bus)
>  {
> -    uint8_t data;
> -    int ret = i2c_send_recv(bus, &data, false);
> +    uint8_t data = 0xff;
>  
> -    return ret < 0 ? ret : data;
> +    i2c_send_recv(bus, &data, false);
> +    return data;
>  }
>  
>  void i2c_nack(I2CBus *bus)
> diff --git a/hw/i2c/i2c-ddc.c b/hw/i2c/i2c-ddc.c
> index be34fe072c..95325358db 100644
> --- a/hw/i2c/i2c-ddc.c
> +++ b/hw/i2c/i2c-ddc.c
> @@ -51,7 +51,7 @@ static int i2c_ddc_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int i2c_ddc_rx(I2CSlave *i2c)
> +static uint8_t i2c_ddc_rx(I2CSlave *i2c)
>  {
>      I2CDDCState *s = I2CDDC(i2c);
>  
> diff --git a/hw/i2c/smbus_slave.c b/hw/i2c/smbus_slave.c
> index 1e734752d7..549e7ae933 100644
> --- a/hw/i2c/smbus_slave.c
> +++ b/hw/i2c/smbus_slave.c
> @@ -156,11 +156,11 @@ static int smbus_i2c_event(I2CSlave *s, enum i2c_event event)
>      return 0;
>  }
>  
> -static int smbus_i2c_recv(I2CSlave *s)
> +static uint8_t smbus_i2c_recv(I2CSlave *s)
>  {
>      SMBusDevice *dev = SMBUS_DEVICE(s);
>      SMBusDeviceClass *sc = SMBUS_DEVICE_GET_CLASS(dev);
> -    int ret;
> +    uint8_t ret;
>  
>      switch (dev->mode) {
>      case SMBUS_RECV_BYTE:
> diff --git a/hw/input/lm832x.c b/hw/input/lm832x.c
> index 74da30d9ca..9ae037953d 100644
> --- a/hw/input/lm832x.c
> +++ b/hw/input/lm832x.c
> @@ -401,7 +401,7 @@ static int lm_i2c_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int lm_i2c_rx(I2CSlave *i2c)
> +static uint8_t lm_i2c_rx(I2CSlave *i2c)
>  {
>      LM823KbdState *s = LM8323(i2c);
>  
> diff --git a/hw/misc/pca9552.c b/hw/misc/pca9552.c
> index 9775d5274a..7325d3f287 100644
> --- a/hw/misc/pca9552.c
> +++ b/hw/misc/pca9552.c
> @@ -115,7 +115,7 @@ static void pca9552_autoinc(PCA9552State *s)
>      }
>  }
>  
> -static int pca9552_recv(I2CSlave *i2c)
> +static uint8_t pca9552_recv(I2CSlave *i2c)
>  {
>      PCA9552State *s = PCA9552(i2c);
>      uint8_t ret;
> diff --git a/hw/misc/tmp105.c b/hw/misc/tmp105.c
> index 0918f3a6ea..a4cae665b7 100644
> --- a/hw/misc/tmp105.c
> +++ b/hw/misc/tmp105.c
> @@ -147,7 +147,7 @@ static void tmp105_write(TMP105State *s)
>      }
>  }
>  
> -static int tmp105_rx(I2CSlave *i2c)
> +static uint8_t tmp105_rx(I2CSlave *i2c)
>  {
>      TMP105State *s = TMP105(i2c);
>  
> diff --git a/hw/misc/tmp421.c b/hw/misc/tmp421.c
> index c234044305..a75eb994a8 100644
> --- a/hw/misc/tmp421.c
> +++ b/hw/misc/tmp421.c
> @@ -249,7 +249,7 @@ static void tmp421_write(TMP421State *s)
>      }
>  }
>  
> -static int tmp421_rx(I2CSlave *i2c)
> +static uint8_t tmp421_rx(I2CSlave *i2c)
>  {
>      TMP421State *s = TMP421(i2c);
>  
> diff --git a/hw/nvram/eeprom_at24c.c b/hw/nvram/eeprom_at24c.c
> index 27cd01e615..d1456dafbd 100644
> --- a/hw/nvram/eeprom_at24c.c
> +++ b/hw/nvram/eeprom_at24c.c
> @@ -74,10 +74,10 @@ int at24c_eeprom_event(I2CSlave *s, enum i2c_event event)
>  }
>  
>  static
> -int at24c_eeprom_recv(I2CSlave *s)
> +uint8_t at24c_eeprom_recv(I2CSlave *s)
>  {
>      EEPROMState *ee = AT24C_EE(s);
> -    int ret;
> +    uint8_t ret;
>  
>      ret = ee->mem[ee->cur];
>  
> diff --git a/hw/timer/ds1338.c b/hw/timer/ds1338.c
> index 3849b74a68..03da75486b 100644
> --- a/hw/timer/ds1338.c
> +++ b/hw/timer/ds1338.c
> @@ -117,7 +117,7 @@ static int ds1338_event(I2CSlave *i2c, enum i2c_event event)
>      return 0;
>  }
>  
> -static int ds1338_recv(I2CSlave *i2c)
> +static uint8_t ds1338_recv(I2CSlave *i2c)
>  {
>      DS1338State *s = DS1338(i2c);
>      uint8_t res;
> diff --git a/hw/timer/m41t80.c b/hw/timer/m41t80.c
> index 734d7d95fc..c45b9297d8 100644
> --- a/hw/timer/m41t80.c
> +++ b/hw/timer/m41t80.c
> @@ -40,7 +40,7 @@ static int m41t80_send(I2CSlave *i2c, uint8_t data)
>      return 0;
>  }
>  
> -static int m41t80_recv(I2CSlave *i2c)
> +static uint8_t m41t80_recv(I2CSlave *i2c)
>  {
>      M41t80State *s = M41T80(i2c);
>      struct tm now;
> diff --git a/hw/timer/twl92230.c b/hw/timer/twl92230.c
> index 3b43b46199..659b216dca 100644
> --- a/hw/timer/twl92230.c
> +++ b/hw/timer/twl92230.c
> @@ -737,7 +737,7 @@ static int menelaus_tx(I2CSlave *i2c, uint8_t data)
>      return 0;
>  }
>  
> -static int menelaus_rx(I2CSlave *i2c)
> +static uint8_t menelaus_rx(I2CSlave *i2c)
>  {
>      MenelausState *s = TWL92230(i2c);
>  
> diff --git a/include/hw/i2c/i2c.h b/include/hw/i2c/i2c.h
> index 5dc166158b..75c5bd638b 100644
> --- a/include/hw/i2c/i2c.h
> +++ b/include/hw/i2c/i2c.h
> @@ -33,10 +33,9 @@ typedef struct I2CSlaveClass {
>  
>      /*
>       * Slave to master.  This cannot fail, the device should always
> -     * return something here.  Negative values probably result in 0xff
> -     * and a possible log from the driver, and shouldn't be used.
> +     * return something here.

Maybe use simple comment as "Master receives the data sent by the Slave"

>       */
> -    int (*recv)(I2CSlave *s);
> +    uint8_t (*recv)(I2CSlave *s);
>  
>      /*
>       * Notify the slave of a bus state change.  For start event,
> @@ -78,7 +77,7 @@ void i2c_end_transfer(I2CBus *bus);
>  void i2c_nack(I2CBus *bus);
>  int i2c_send_recv(I2CBus *bus, uint8_t *data, bool send);
>  int i2c_send(I2CBus *bus, uint8_t data);
> -int i2c_recv(I2CBus *bus);
> +uint8_t i2c_recv(I2CBus *bus);
>  
>  DeviceState *i2c_create_slave(I2CBus *bus, const char *name, uint8_t addr);
>  

Reviewed-by: Philippe Mathieu-Daudé <philmd@redhat.com>
Tested-by: Philippe Mathieu-Daudé <philmd@redhat.com>


