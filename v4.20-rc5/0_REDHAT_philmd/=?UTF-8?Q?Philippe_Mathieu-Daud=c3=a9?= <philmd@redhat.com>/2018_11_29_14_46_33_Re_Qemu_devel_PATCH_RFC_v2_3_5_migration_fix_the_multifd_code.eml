Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:47:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 375465802E4
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 07:26:48 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:26:47 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsWe8dxQgtfRFUeOvHIPJNycwa9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBGCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBAekPM+lWoIbypUcBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BAiEt8UrH?=
 =?us-ascii?q?jYsNv4OaUUXOuozKfI1zLDb/ZO1Dnn6IjIcxQhofCUXbJob8Xe0U4hGBnZjlWQ?=
 =?us-ascii?q?qIzqIS6V2v0DvWeB8upvSPiogHMgpgFpojivx8MsiozUiY8O0FDL6zh2wIYvKt?=
 =?us-ascii?q?2kUkJ0fdmkEJ5JuiycKoB4QdsiTnl2tComybAKo4O3cDUJxZg92RLSZfyKf5KV?=
 =?us-ascii?q?7h/hTOqdPy13iG54dL+6mxm96lWsxfD5W8S3yllGsjBKn9zCtn0NyxDf9s2KR/?=
 =?us-ascii?q?R+80i9xDqC0gPe5f9eLk8vkKfXNZ4sz78qmZcWrUvMBCH2lUHwgaSLbEsr4PKo?=
 =?us-ascii?q?5P7iYrj+pp+TKYt0igbmP6Qqm8y/Gvg4MhMUU2iU/+S8yafv/UrjQLVFlvE2k6?=
 =?us-ascii?q?/Zv47GJckDuKK1HwxY3pw+5xqiDDqqysoUkHcHIV5fZR6KjZDlO1TUL/D5Cfe/?=
 =?us-ascii?q?jU6skDBux/3eJ73uHJDNLmXanLj8Y7l99VBTyA4qwd9E4JJUF7cBL+7tVU/qs9?=
 =?us-ascii?q?DYCh45Mw+qzOr9B9R9y5sTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lnI5n1gdfa+m3ZsRdXC0BPNmI1+WYXb0mNcODX8KvhYiTOztkFCCVT9TZ3WsUK?=
 =?us-ascii?q?4m6TA7FZmrDYPCRoCrnbyA0z23HpxQZmBaFF+MFW3keJmDW/cJO2qvJNR8mGkE?=
 =?us-ascii?q?SaS5UN1mkhWvrxPhjbxgKOXS52sfr52k0dF04+jak1Y17SB1CMKGlHiASnwxkm?=
 =?us-ascii?q?4WSjtl4aZkvEYoz16C1bR/0eVVEMEW6/5XXwN/L5PF0uFhF/j0XQTOeMrPT0yp?=
 =?us-ascii?q?Fc67CzM8Rc5k3tkVfkxmEM+jhB2Q4y3/LbIU35iKTMg69qP0xGXqKoB2zHOQkO?=
 =?us-ascii?q?E4glw7B8dCK2Cirqh48QfVGsjOiUrKubytcPEk3C/J9X+bwF2rtV1YUQNtFInM?=
 =?us-ascii?q?QHyeLh/OrdX940/qVbKiCb07dABGzJjReeNxdtT1gAAeF7/YM9PEbjf0wj/oCA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAABeBABchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYEvgmKDeYgYX4spgWAtl0SBcxIBARgUh3QiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4vQgEQAYFiBQIDGgEGglsBAQEBAgEBAiAEHwosAgEBAgYBA?=
 =?us-ascii?q?QoOCgICIgQCAgMBMAEFARwGAQwGAgEBAYMcgXUFCAEEmmc8iw18M4kegQ0SeYs?=
 =?us-ascii?q?LF4F/gREngmuIBYJXAokhhkmBBIRcilkJkSwGGIlYh0SIeI8vAgQCBAUCBQ8hg?=
 =?us-ascii?q?SWCDTMiGxWDJ4InFxKODHGBByGGZoQ8gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAABeBABchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBAYE?=
 =?us-ascii?q?vgmKDeYgYX4spgWAtl0SBcxIBARgUh3QiNAkNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4vQgEQAYFiBQIDGgEGglsBAQEBAgEBAiAEHwosAgEBAgYBAQoOCgICIgQCAgM?=
 =?us-ascii?q?BMAEFARwGAQwGAgEBAYMcgXUFCAEEmmc8iw18M4kegQ0SeYsLF4F/gREngmuIB?=
 =?us-ascii?q?YJXAokhhkmBBIRcilkJkSwGGIlYh0SIeI8vAgQCBAUCBQ8hgSWCDTMiGxWDJ4I?=
 =?us-ascii?q?nFxKODHGBByGGZoQ8gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="53854084"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 07:26:45 -0800
Received: from localhost ([::1]:54798 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSODF-0000kS-Ud
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 10:26:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34213)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gSNm9-0000Zc-FJ
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:58:51 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gSNaQ-0000tR-Bb
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:46:41 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:38906)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gSNaQ-0000sn-1l
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 09:46:38 -0500
Received: by mail-wr1-f67.google.com with SMTP id v13so2172263wrw.5
	for <qemu-devel@nongnu.org>; Thu, 29 Nov 2018 06:46:37 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=sYlLcgvz0bkaNzd7MFzuvBTTnAESmzytfwV5ZI9zTCM=;
	b=PkzQYiZh4/+vEbYp0dvJyIaNMTYhWnfnQZUGZB3Ie88F8gTRhE8VZ8cIUxnyPD1j34
	40mShdBs61UHcEU5Y8rq4mulzsilC/0pTRKy/8v9MBJ+RNiFoPtOsD19WBEis2DADWHg
	ws2XEVzw1xiRYA+gsKUNl7ivV279uGB6hI+1CQ54Wx+577qZG+9YBox/GtfYg3bvpe75
	G8E9LDJBDq4xXwVv/7Xl8HTNk5+MguxOA+Nb3Q1Tv3tsexxWBb66OYbqBOvxSz+lzTo9
	Bv1nsQfjVT/enmVdeqJagI6LuEfhxQ8i0HgAp1fMv8LXL9/WNMuJsXaeFClbstL+qLjn
	Lktg==
X-Gm-Message-State: AA+aEWYxZu6606FX2Qjen1P4CP/pJQqo3f2Y+kEF60wolCvNdgOJaMte
	0Zo8Gi8Y9zhnTER7IISS5CCo7SKPRUmO7w==
X-Google-Smtp-Source: AFSGD/VhRl8tGkwhM8+uTVFOJ9eNyz5D1G6V8hqU/4E88BW1FJVHh++vm2uSyTrSAd4rUGttPhgykg==
X-Received: by 2002:adf:9246:: with SMTP id 64mr1804635wrj.130.1543502796478; 
	Thu, 29 Nov 2018 06:46:36 -0800 (PST)
Received: from ?IPv6:2a01:cb1d:8a0a:f500:48c1:8eab:256a:caf9?
	([2a01:cb1d:8a0a:f500:48c1:8eab:256a:caf9])
	by smtp.gmail.com with ESMTPSA id
	j199sm5701414wmf.13.2018.11.29.06.46.34
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 29 Nov 2018 06:46:35 -0800 (PST)
To: Fei Li <fli@suse.com>, qemu-devel@nongnu.org
References: <20181129100340.13823-1-fli@suse.com>
	<20181129100340.13823-4-fli@suse.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <9e1bf8ec-8b2a-088b-2a5d-d946c1139e59@redhat.com>
Date: Thu, 29 Nov 2018 15:46:33 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181129100340.13823-4-fli@suse.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.221.67
Subject: Re: [Qemu-devel] [PATCH RFC v2 3/5] migration: fix the multifd code
 when receiving less channels
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi Fei,

On 29/11/18 11:03, Fei Li wrote:
> In our current code, when multifd is used during migration, if there
> is an error before the destination receives all new channels, the
> source keeps running, however the destination does not exit but keeps
> waiting until the source is killed deliberately.
> 
> Fix this by dumping the specific error and let users decide whether
> to quit from the destination side when failing to receive packet via
> some channel.
> 
> Signed-off-by: Fei Li <fli@suse.com>
> Reviewed-by: Peter Xu <peterx@redhat.com>
> ---
>  migration/channel.c   | 11 ++++++-----
>  migration/migration.c |  9 +++++++--
>  migration/migration.h |  2 +-
>  migration/ram.c       |  7 ++++++-
>  migration/ram.h       |  2 +-
>  5 files changed, 21 insertions(+), 10 deletions(-)
> 
> diff --git a/migration/channel.c b/migration/channel.c
> index 33e0e9b82f..20e4c8e2dc 100644
> --- a/migration/channel.c
> +++ b/migration/channel.c
> @@ -30,6 +30,7 @@
>  void migration_channel_process_incoming(QIOChannel *ioc)
>  {
>      MigrationState *s = migrate_get_current();
> +    Error *local_err = NULL;
>  
>      trace_migration_set_incoming_channel(
>          ioc, object_get_typename(OBJECT(ioc)));
> @@ -38,13 +39,13 @@ void migration_channel_process_incoming(QIOChannel *ioc)
>          *s->parameters.tls_creds &&
>          !object_dynamic_cast(OBJECT(ioc),
>                               TYPE_QIO_CHANNEL_TLS)) {
> -        Error *local_err = NULL;
>          migration_tls_channel_process_incoming(s, ioc, &local_err);
> -        if (local_err) {
> -            error_report_err(local_err);
> -        }
>      } else {
> -        migration_ioc_process_incoming(ioc);
> +        migration_ioc_process_incoming(ioc, &local_err);
> +    }
> +
> +    if (local_err) {
> +        error_report_err(local_err);
>      }
>  }
>  
> diff --git a/migration/migration.c b/migration/migration.c
> index 49ffb9997a..72106bddf0 100644
> --- a/migration/migration.c
> +++ b/migration/migration.c
> @@ -541,7 +541,7 @@ void migration_fd_process_incoming(QEMUFile *f)
>      migration_incoming_process();
>  }
>  
> -void migration_ioc_process_incoming(QIOChannel *ioc)
> +void migration_ioc_process_incoming(QIOChannel *ioc, Error **errp)
>  {
>      MigrationIncomingState *mis = migration_incoming_get_current();
>      bool start_migration;
> @@ -563,9 +563,14 @@ void migration_ioc_process_incoming(QIOChannel *ioc)
>           */
>          start_migration = !migrate_use_multifd();
>      } else {
> +        Error *local_err = NULL;
>          /* Multiple connections */
>          assert(migrate_use_multifd());
> -        start_migration = multifd_recv_new_channel(ioc);
> +        start_migration = multifd_recv_new_channel(ioc, &local_err);
> +        if (local_err) {
> +            error_propagate(errp, local_err);
> +            return;
> +        }
>      }
>  
>      if (start_migration) {
> diff --git a/migration/migration.h b/migration/migration.h
> index e413d4d8b6..02b7304610 100644
> --- a/migration/migration.h
> +++ b/migration/migration.h
> @@ -229,7 +229,7 @@ struct MigrationState
>  void migrate_set_state(int *state, int old_state, int new_state);
>  
>  void migration_fd_process_incoming(QEMUFile *f);
> -void migration_ioc_process_incoming(QIOChannel *ioc);
> +void migration_ioc_process_incoming(QIOChannel *ioc, Error **errp);
>  void migration_incoming_process(void);
>  
>  bool  migration_has_all_channels(void);
> diff --git a/migration/ram.c b/migration/ram.c
> index 7e7deec4d8..e13b9349d0 100644
> --- a/migration/ram.c
> +++ b/migration/ram.c
> @@ -1323,7 +1323,7 @@ bool multifd_recv_all_channels_created(void)
>  }
>  
>  /* Return true if multifd is ready for the migration, otherwise false */
> -bool multifd_recv_new_channel(QIOChannel *ioc)
> +bool multifd_recv_new_channel(QIOChannel *ioc, Error **errp)
>  {
>      MultiFDRecvParams *p;
>      Error *local_err = NULL;
> @@ -1331,6 +1331,10 @@ bool multifd_recv_new_channel(QIOChannel *ioc)
>  
>      id = multifd_recv_initial_packet(ioc, &local_err);
>      if (id < 0) {
> +        error_propagate_prepend(errp, local_err,
> +                                "failed to receive packet"
> +                                " via multifd channel %d: ",
> +                                multifd_recv_state->count);

Shouldn't we use atomic_read(&multifd_recv_state->count) here?

Patch looks good otherwise.

Regards,

Phil.

>          multifd_recv_terminate_threads(local_err);
>          return false;
>      }
> @@ -1340,6 +1344,7 @@ bool multifd_recv_new_channel(QIOChannel *ioc)
>          error_setg(&local_err, "multifd: received id '%d' already setup'",
>                     id);
>          multifd_recv_terminate_threads(local_err);
> +        error_propagate(errp, local_err);
>          return false;
>      }
>      p->c = ioc;
> diff --git a/migration/ram.h b/migration/ram.h
> index 83ff1bc11a..046d3074be 100644
> --- a/migration/ram.h
> +++ b/migration/ram.h
> @@ -47,7 +47,7 @@ int multifd_save_cleanup(Error **errp);
>  int multifd_load_setup(void);
>  int multifd_load_cleanup(Error **errp);
>  bool multifd_recv_all_channels_created(void);
> -bool multifd_recv_new_channel(QIOChannel *ioc);
> +bool multifd_recv_new_channel(QIOChannel *ioc, Error **errp);
>  
>  uint64_t ram_pagesize_summary(void);
>  int ram_save_queue_pages(const char *rbname, ram_addr_t start, ram_addr_t len);
> 

