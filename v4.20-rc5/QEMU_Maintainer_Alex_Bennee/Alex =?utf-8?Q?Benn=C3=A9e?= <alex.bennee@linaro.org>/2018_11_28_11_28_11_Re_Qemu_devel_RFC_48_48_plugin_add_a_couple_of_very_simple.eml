Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:42:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3EF245803ED
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 03:28:46 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 03:28:46 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Axj3iUx9k1WEmz/9uRHKM819IXTAuvvDOBiVQ1KB2?=
 =?us-ascii?q?1O4cTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMNboRr4oRzut86ZrSAfpiC?=
 =?us-ascii?q?gZMT457HrXgdF0gK5CvR6tuwBzz4vSbYqINvRxY7ndcMsURWVPXshfSS5ODI2/?=
 =?us-ascii?q?YYQAE+UPMvtWr5H/qlUMohayGAehCP/xxT9TnXL2wbQ63v49HQ3axgEtHdQDu2?=
 =?us-ascii?q?nUotXvM6cSVPi4wbXMzTrdYPJdxCrw55bOchAnu/aDQ697fM3LxkkrCQzEgU+c?=
 =?us-ascii?q?ppf7MDOT0OQCrXaU4vFkVeKujW4osRtxoj+1yscrkInJiZsYx1bZ/it62IY4Pc?=
 =?us-ascii?q?O0RFJ4bNK+DZdcqiKXO5FoTs4sQ2xkojs2x78etZO4YSQG0okrywDcZvCdboSF?=
 =?us-ascii?q?4RLuWPyfLDp3gn9uZaixiAyo8Ue6z+3xTsm030hOripCitTMsnEN1wfP6sicUP?=
 =?us-ascii?q?d98UGh2SuV2wDU8OFELlg4lavdK5E/3r49joQfvVjAEyPshUn6kaybel869uWm?=
 =?us-ascii?q?6+nreKjqq52EO49xkA7+M6AumsKlAeQ/NwgDR3Gb9vq51L3+5EH2XatFjuMona?=
 =?us-ascii?q?ndqZzVPsMbprO/AwBJzIkj8BGzDzOn0NQbg3YLNl1EeA+fgojtOlHOJu34DPil?=
 =?us-ascii?q?j1Stljdr2+7JPrn7DprRKXjDlazsfbB6605axwozy81f64hTCrEbL/L/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNF81oMdR22DGKCYML7JvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2MhfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGitZm2?=
 =?us-ascii?q?IMRjh+8+Y3ikthwx3LhaN/n/VwH8Za7usPVR01Y83y1et/Xvn2VxKJVNqPTter?=
 =?us-ascii?q?CoGvBTwhCNg8xdkDbm55GtOrlBeF2DClVexG34eXDYA5p/qPl0P6INxwnjOfjP?=
 =?us-ascii?q?Es?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AwAACVe/5bhxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?QGBL4Jig3mId4sqgg2XQoFzEgEBGBSEQIMqIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOIwxCARABgWIFAgMaAQaCXAECAgEBAiAdAQEECikBAgIBAQIGAQEKGgIFH?=
 =?us-ascii?q?QQCAgMBCwEkAQUBARsGEwWDHIF6CAEDAZpmPIodcIEvgnYBAQWCQ4N6gQUIEhB?=
 =?us-ascii?q?piW6BHIIWgRGBcIEihQGDBIJXoB0HApExGIlYhz2YIQYCCQcPIYElgg0zSoMvg?=
 =?us-ascii?q?hsMF4hehT9ygQeFBYV9gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AwAACVe/5bhxHrdtBkHgEGBwaBUQkLAQGBL4Jig3mId4s?=
 =?us-ascii?q?qgg2XQoFzEgEBGBSEQIMqIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwxCARABg?=
 =?us-ascii?q?WIFAgMaAQaCXAECAgEBAiAdAQEECikBAgIBAQIGAQEKGgIFHQQCAgMBCwEkAQU?=
 =?us-ascii?q?BARsGEwWDHIF6CAEDAZpmPIodcIEvgnYBAQWCQ4N6gQUIEhBpiW6BHIIWgRGBc?=
 =?us-ascii?q?IEihQGDBIJXoB0HApExGIlYhz2YIQYCCQcPIYElgg0zSoMvghsMF4hehT9ygQe?=
 =?us-ascii?q?FBYV9gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="64334739"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 03:28:41 -0800
Received: from localhost ([::1]:47205 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRy1I-0006zx-NN
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 06:28:40 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44989)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gRy10-0006zm-Rn
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 06:28:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gRy0x-0007i7-UP
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 06:28:22 -0500
Received: from mail-wr1-x432.google.com ([2a00:1450:4864:20::432]:44208)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alex.bennee@linaro.org>)
	id 1gRy0x-0007fD-1z
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 06:28:19 -0500
Received: by mail-wr1-x432.google.com with SMTP id z5so21607980wrt.11
	for <qemu-devel@nongnu.org>; Wed, 28 Nov 2018 03:28:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=references:user-agent:from:to:cc:subject:in-reply-to:date
	:message-id:mime-version:content-transfer-encoding;
	bh=E0+m0w7vnE2HDJ7B2Kodyhv5Xz6ixjofJaQ8PeFenE8=;
	b=T/TpGbF0OaXCMlN+WlXfdogc1WYlZQ/lUtZHle0oGondihkVeXOh/RsA2TLDGuL+NB
	gIhK21Ygm6J7IWJNqCaLrYLXkonXdwlO7CAklVKUsKK8yH+p8Cp1V/ZlPBg4V0tlqnjS
	HtDUOTlkUoZqdILOXcX/VpPujyKkpVDLG3cNE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:references:user-agent:from:to:cc:subject
	:in-reply-to:date:message-id:mime-version:content-transfer-encoding;
	bh=E0+m0w7vnE2HDJ7B2Kodyhv5Xz6ixjofJaQ8PeFenE8=;
	b=Wmsn8HwcZuerQpFmaRLtMAuZospq1ezrDprpnB6oAzGieEaG7MNmkJfJJbg5RlPsgN
	il3EygWGB221eh1DyBTng3QMMRRKMpOxwEkYDW4Uk7Nq2fllGWcFEie5JPWLJAAP7uB0
	SWSOx7i20RVpCd4K8Y0s6n3Yz3FsMmQ+CSybTuEZi2Pc9/6EN4fH+zWnr52u9xW0Z0sl
	q5TjV+3bur4DhCTuu1+l6BWEap+dH1jtGL/AVgUViX1una/C0Ukzkapm9EsqCpTY7Xa7
	aZxrtP6XoO3WzL2yO+3HH5d8bv4/BgJSVKh9IJEwz3c+rXYEPYqqifFp9kQ5zci1zTPh
	2sMQ==
X-Gm-Message-State: AA+aEWbHBz1Tlt6ICPMoz0BiVEgnZAbPPrgDw8gShhxjcSJRDwxER/iG
	TFsRkuiY40+n/oiFUmRqQx/KIg==
X-Google-Smtp-Source: AFSGD/UX9j2zXTkw8jLsi7+ESTfDj10bC+KC4CG/9/50ecRUImEkEpiaP+Hqxm9W+FOqmznUopAz5w==
X-Received: by 2002:adf:90e5:: with SMTP id i92mr15213356wri.210.1543404493252;
	Wed, 28 Nov 2018 03:28:13 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
	by smtp.gmail.com with ESMTPSA id
	b18sm4696708wrw.83.2018.11.28.03.28.12
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Wed, 28 Nov 2018 03:28:12 -0800 (PST)
Received: from zen (localhost [127.0.0.1])
	by zen.linaro.local (Postfix) with ESMTPS id D61AB3E00A3;
	Wed, 28 Nov 2018 11:28:11 +0000 (GMT)
References: <20181025172057.20414-1-cota@braap.org>
	<20181025172057.20414-49-cota@braap.org>
User-agent: mu4e 1.1.0; emacs 26.1.90
From: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
To: "Emilio G. Cota" <cota@braap.org>
In-reply-to: <20181025172057.20414-49-cota@braap.org>
Date: Wed, 28 Nov 2018 11:28:11 +0000
Message-ID: <87bm694f1w.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::432
Subject: Re: [Qemu-devel] [RFC 48/48] plugin: add a couple of very simple
 examples
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Stefan Hajnoczi <stefanha@gmail.com>,
	Peter Maydell <peter.maydell@linaro.org>, qemu-devel@nongnu.org,
	Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>,
	=?utf-8?Q?Llu=C3=ADs?= Vilanova <vilanova@ac.upc.edu>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


Emilio G. Cota <cota@braap.org> writes:

> Signed-off-by: Emilio G. Cota <cota@braap.org>
> ---
>  plugin-examples/bbcount_avgsize_racy.c | 50 ++++++++++++++++++++++
>  plugin-examples/mem_count_racy_both.c  | 58 ++++++++++++++++++++++++++
>  plugin-examples/Makefile               | 31 ++++++++++++++

So I think we need to be putting these somewhere else and also building
the examples by default. As plugins only make sense with tcg guests
maybe a layout like:

  tcg/plugins/plugin.c
  tcg/plugins/examples/

>  3 files changed, 139 insertions(+)
>  create mode 100644 plugin-examples/bbcount_avgsize_racy.c
>  create mode 100644 plugin-examples/mem_count_racy_both.c
>  create mode 100644 plugin-examples/Makefile
>
> diff --git a/plugin-examples/bbcount_avgsize_racy.c b/plugin-examples/bbc=
ount_avgsize_racy.c
> new file mode 100644
> index 0000000000..ccdf96c1fa
> --- /dev/null
> +++ b/plugin-examples/bbcount_avgsize_racy.c
> @@ -0,0 +1,50 @@
> +#include <inttypes.h>
> +#include <assert.h>
> +#include <stdlib.h>
> +#include <string.h>
> +#include <unistd.h>
> +#include <stdio.h>
> +
> +#include <qemu-plugin.h>

-#include <qemu-plugin.h>
+#include <plugin-api.h>

> +
> +static uint64_t bb_count;
> +static uint64_t insn_count;
> +const char *filename;
> +static int stdout_fd;
> +
> +static void plugin_exit(qemu_plugin_id_t id, void *p)
> +{
> +    dprintf(stdout_fd, "insns: %" PRIu64", bb: %" PRIu64 ", "
> +            "avg insns/bb: %.2f\n",
> +            insn_count, bb_count, (double)insn_count / bb_count);
> +}
> +
> +static void vcpu_tb_exec(unsigned int cpu_index, void *udata)
> +{
> +    unsigned long n_insns =3D (unsigned long)udata;
> +
> +    insn_count +=3D n_insns;
> +    bb_count++;
> +}
> +
> +static void vcpu_tb_trans(qemu_plugin_id_t id, unsigned int cpu_index,
> +                          struct qemu_plugin_tb *tb)
> +{
> +    unsigned long n_insns =3D qemu_plugin_tb_n_insns(tb);
> +
> +    qemu_plugin_register_vcpu_tb_exec_cb(tb, vcpu_tb_exec,
> +                                         QEMU_PLUGIN_CB_NO_REGS,
> +                                         (void *)n_insns);
> +}
> +
> +QEMU_PLUGIN_EXPORT int qemu_plugin_install(qemu_plugin_id_t id, int argc,
> +                                           char **argv)
> +{
> +    /* plugin_exit might write to stdout after stdout has been closed */
> +    stdout_fd =3D dup(STDOUT_FILENO);
> +    assert(stdout_fd);
> +
> +    qemu_plugin_register_vcpu_tb_trans_cb(id, vcpu_tb_trans);
> +    qemu_plugin_register_atexit_cb(id, plugin_exit, NULL);
> +    return 0;
> +}
> diff --git a/plugin-examples/mem_count_racy_both.c b/plugin-examples/mem_=
count_racy_both.c
> new file mode 100644
> index 0000000000..a47f2025bf
> --- /dev/null
> +++ b/plugin-examples/mem_count_racy_both.c
> @@ -0,0 +1,58 @@
> +#include <inttypes.h>
> +#include <assert.h>
> +#include <stdlib.h>
> +#include <string.h>
> +#include <unistd.h>
> +#include <stdio.h>
> +
> +#include <qemu-plugin.h>

-#include <qemu-plugin.h>
+#include <plugin-api.h>

> +
> +static uint64_t mem_count;
> +static int stdout_fd;
> +static bool do_inline;
> +
> +static void plugin_exit(qemu_plugin_id_t id, void *p)
> +{
> +    dprintf(stdout_fd, "accesses: %" PRIu64 "\n", mem_count);
> +}
> +
> +static void vcpu_mem(unsigned int cpu_index, qemu_plugin_meminfo_t memin=
fo,
> +                     uint64_t vaddr, void *udata)
> +{
> +    mem_count++;
> +}
> +
> +static void vcpu_tb_trans(qemu_plugin_id_t id, unsigned int cpu_index,
> +                          struct qemu_plugin_tb *tb)
> +{
> +    size_t n =3D qemu_plugin_tb_n_insns(tb);
> +    size_t i;
> +
> +    for (i =3D 0; i < n; i++) {
> +        struct qemu_plugin_insn *insn =3D qemu_plugin_tb_get_insn(tb, i);
> +
> +        if (do_inline) {
> +            qemu_plugin_register_vcpu_mem_inline(insn,
> +                                                 QEMU_PLUGIN_INLINE_ADD_=
U64,
> +                                                 &mem_count, 1);
> +        } else {
> +            qemu_plugin_register_vcpu_mem_cb(insn, vcpu_mem,
> +                                             QEMU_PLUGIN_CB_NO_REGS, NUL=
L);
> +        }
> +    }
> +}
> +
> +QEMU_PLUGIN_EXPORT int qemu_plugin_install(qemu_plugin_id_t id, int argc,
> +                                           char **argv)
> +{
> +    if (argc && strcmp(argv[0], "inline") =3D=3D 0) {
> +        do_inline =3D true;
> +    }
> +    /* plugin_exit might write to stdout after stdout has been closed */
> +    stdout_fd =3D dup(STDOUT_FILENO);
> +    assert(stdout_fd);
> +
> +    qemu_plugin_register_vcpu_tb_trans_cb(id, vcpu_tb_trans);
> +    qemu_plugin_register_atexit_cb(id, plugin_exit, NULL);
> +    return 0;
> +}
> diff --git a/plugin-examples/Makefile b/plugin-examples/Makefile
> new file mode 100644
> index 0000000000..71bbcda7a8
> --- /dev/null
> +++ b/plugin-examples/Makefile
> @@ -0,0 +1,31 @@
> +NAMES :=3D
> +NAMES +=3D bbcount_avgsize_racy
> +NAMES +=3D mem_count_racy_both
> +
> +SONAMES :=3D $(addsuffix .so,$(addprefix lib,$(NAMES)))
> +
> +# QEMU installed path, set by --prefix during configure
> +QEMU_PATH ?=3D /data/src/qemu-inst/plugin-test

I guess we should use SRC_PATH (or maybe QEMU_SRC_PATH) if we want the
Makefile to be both invoked as a sub-make from a normal QEMU build and
to be used as an example for out-of-tree builds.

> +
> +CC :=3D gcc
> +CFLAGS :=3D
> +CFLAGS +=3D -O2 -Werror -Wall
> +CFLAGS +=3D -Wundef -Wwrite-strings -Wmissing-prototypes
> +CFLAGS +=3D -Wstrict-prototypes -Wredundant-decls
> +CFLAGS +=3D -fno-strict-aliasing -fno-common -fwrapv
> +CFLAGS +=3D -I$(QEMU_PATH)/include

-CFLAGS +=3D -I$(QEMU_PATH)/include
+CFLAGS +=3D -I$(QEMU_PATH)/include/qemu

--
Alex Benn=C3=A9e

