Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:09:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 312165805AD
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 01:23:49 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 18 Dec 2018 01:23:49 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ARx+aMhQi21OzlaGMxjk/0EzJVNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYByN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBDOgOPehfoYbyu1QAogawBRGuCe3txTJEm3H70bEk3OQ6CgzGwA4tEsgSvH?=
 =?us-ascii?q?nOsNn5KqEfWv21wqnSyjXDautb1zbn6IfWfRAqvPSCXa9qccvQ1EIiEAzFjk+X?=
 =?us-ascii?q?qYz4MDOYzecNvHKc7+V9T+6vjHQnqw5orzWp28wiiZHJi5oLxlzY9ih12ps5Kc?=
 =?us-ascii?q?C7RUJhf9KpHptduzuHO4Z0Ws8vQH9ktDwkxrAGt5O3ZjYGxIgkyhLFdfCKfIuF?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oBh9Et6Q1X3FcWBqn2?=
 =?us-ascii?q?4SD2sywqFhoEFn4k2O3ahxn7pTEtkFtN1TVQJvGoTRwKRZFsrgElbOZNCUR36l?=
 =?us-ascii?q?S9KqRzYrQYRikJc1f09hFoD63Vj41C2wDupQzuTTCQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A2AAAOvBhchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgTCCBF6MdIsaUgaBNXyIJ4k6hH2BcxUYFIdfIjYHDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAgEBAiQTDAopAwIBAQIGAQEKD?=
 =?us-ascii?q?goJEwoIAwELLhoGEwWDHYF0BQgBAwGoczOKO4w/F3iBB4ERgl01imACiSIShmS?=
 =?us-ascii?q?RCQmRUwwYkVQsmUKBTQaCATMaCCgIgycTghQXjh5xAYEDA4wBgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A2AAAOvBhchxHrdtBkHAEBAQQBAQcEAQGBUwUBAQsBgTC?=
 =?us-ascii?q?CBF6MdIsaUgaBNXyIJ4k6hH2BcxUYFIdfIjYHDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOL4I2BQIDGgEGglsBAQEBAgEBAiQTDAopAwIBAQIGAQEKDgoJEwoIAwELLho?=
 =?us-ascii?q?GEwWDHYF0BQgBAwGoczOKO4w/F3iBB4ERgl01imACiSIShmSRCQmRUwwYkVQsm?=
 =?us-ascii?q?UKBTQaCATMaCCgIgycTghQXjh5xAYEDA4wBgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="57914494"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 01:23:48 -0800
Received: from localhost ([::1]:52724 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZBbP-0005In-Iu
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 04:23:47 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44252)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1gZBb9-0005If-25
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 04:23:32 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1gZBb6-0005j4-CY
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 04:23:31 -0500
Received: from 4.mo69.mail-out.ovh.net ([46.105.42.102]:37120)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <groug@kaod.org>) id 1gZBb6-0005fY-5I
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 04:23:28 -0500
Received: from player756.ha.ovh.net (unknown [10.109.146.163])
	by mo69.mail-out.ovh.net (Postfix) with ESMTP id 95F943707A
	for <qemu-devel@nongnu.org>; Tue, 18 Dec 2018 10:23:21 +0100 (CET)
Received: from kaod.org (lns-bzn-46-82-253-208-248.adsl.proxad.net
	[82.253.208.248]) (Authenticated sender: groug@kaod.org)
	by player756.ha.ovh.net (Postfix) with ESMTPSA id B524CF6E8C0;
	Tue, 18 Dec 2018 09:23:12 +0000 (UTC)
Date: Tue, 18 Dec 2018 10:23:11 +0100
From: Greg Kurz <groug@kaod.org>
To: Laurent Vivier <lvivier@redhat.com>
Message-ID: <20181218102311.68400aa5@bahia.lan>
In-Reply-To: <8cf7e664-27e6-d4f4-ea71-29a61a3122e6@redhat.com>
References: <20181217140055.8545-1-lvivier@redhat.com>
	<20181218042938.GI23604@umbus.fritz.box>
	<8cf7e664-27e6-d4f4-ea71-29a61a3122e6@redhat.com>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-redhat-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Ovh-Tracer-Id: 13585389751630207270
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudeihedgtdefucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.42.102
Subject: Re: [Qemu-devel] [Qemu-ppc] [PATCH] spapr: Add H-Call
 H_HOME_NODE_ASSOCIATIVITY
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, Paul Mackerras <paulus@samba.org>,
	qemu-devel@nongnu.org, David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, 18 Dec 2018 08:50:00 +0100
Laurent Vivier <lvivier@redhat.com> wrote:

> On 18/12/2018 05:29, David Gibson wrote:
> > On Mon, Dec 17, 2018 at 03:00:55PM +0100, Laurent Vivier wrote:  
> >> H_HOME_NODE_ASSOCIATIVITY H-Call returns the associativity domain
> >> designation associated with the identifier input parameter.
> >>
> >> Remove the warning message from the kernel:
> >>   VPHN is not supported. Disabling polling..
> >>
> >> Signed-off-by: Laurent Vivier <lvivier@redhat.com>  
> > 
> > From the looks of PAPR, I suspect this call isn't of much use outside
> > PowerVM guests, though it probably wouldn't do any harm.  
> 
> This call is used by the kernel to get the node id of a CPU on hotplug
> and fixes a crash when we hotplug a CPU in a memory-less/CPU-less node
> where this information is missing (not initialized from the device-tree).
> 

So this patch isn't just about removing the warning message from the kernel
but about fixing an actual crash ?

I ask because if it's only about the warning, why does the kernel call
H_HOME_NODE_ASSOCIATIVITY when hcall-vphn isn't advertised ? Especially,
the polling for topology changes is only started if hcall-vphn is present:

	if (firmware_has_feature(FW_FEATURE_VPHN) &&
		   lppaca_shared_proc(get_lppaca())) {
		if (!vphn_enabled) {
			vphn_enabled = 1;
			setup_cpu_associativity_change_counters();
			timer_setup(&topology_timer, topology_timer_fn,
				    TIMER_DEFERRABLE);
			reset_topology_timer();
		}
	}

It thus seems wrong to emit the "Disable polling.." warning for something
that was never enabled in the first place, doesn't it ?

On the other hand, if this really needed to avoid a crash, I guess you
should provide some more details.

> > BenH, Paulus, any thoughts?
> > 
> > One nit in implementation: if you implement this hcall, it's supposed
> > to be advertised by adding hcall-vphn to ibm,hypertas-functions.  
> ok  in v2.
> 
> Thanks,
> Laurent
> 
> >> ---
> >> Based-on: <20181213040126.6768-1-david@gibson.dropbear.id.au>
> >>           "[PULL 00/27] ppc-for-4.0 queue 20181213"
> >>
> >>  hw/ppc/spapr_hcall.c   | 39 +++++++++++++++++++++++++++++++++++++++
> >>  include/hw/ppc/spapr.h |  1 +
> >>  2 files changed, 40 insertions(+)
> >>
> >> diff --git a/hw/ppc/spapr_hcall.c b/hw/ppc/spapr_hcall.c
> >> index 78fecc8fe9..454ec594fd 100644
> >> --- a/hw/ppc/spapr_hcall.c
> >> +++ b/hw/ppc/spapr_hcall.c
> >> @@ -1663,6 +1663,41 @@ static target_ulong h_client_architecture_support(PowerPCCPU *cpu,
> >>      return H_SUCCESS;
> >>  }
> >>  
> >> +static target_ulong h_home_node_associativity(PowerPCCPU *cpu,
> >> +                                              sPAPRMachineState *spapr,
> >> +                                              target_ulong opcode,
> >> +                                              target_ulong *args)
> >> +{
> >> +    target_ulong flags = args[0];
> >> +    target_ulong procno = args[1];
> >> +    PowerPCCPU *tcpu;
> >> +    int idx;
> >> +
> >> +    /* only support procno from H_REGISTER_VPA */
> >> +    if ((flags & 0x1) == 0) {
> >> +        return H_PARAMETER;
> >> +    }

LoPAPR says that the guest can pass exactly 0x1 or 0x2 in flags. The
above check should then rather be flags == 0x1.

Also, even if linux only seems to call this with 0x1, this is a
limitation from a LoPAPR standpoint. Not sure H_PARAMETER is the
appropriate return value if flags is 0x2 since the guest did
nothing wrong... I'd rather return H_FUNCTION in this case.

> >> +
> >> +    tcpu = spapr_find_cpu(procno);
> >> +    if (tcpu == NULL) {
> >> +        return H_P2;
> >> +    }
> >> +
> >> +    /* sequence is the same as in the "ibm,associativity" property */
> >> +
> >> +    idx = 0;
> >> +#define ASSOCIATIVITY(a, b) (((uint64_t)a << 32) | ((uint64_t)b & 0xffffffff))
> >> +    args[idx++] = ASSOCIATIVITY(0, 0);
> >> +    args[idx++] = ASSOCIATIVITY(0, tcpu->node_id);
> >> +    args[idx++] = ASSOCIATIVITY(procno, -1);
> >> +    for ( ; idx < 6; idx++) {
> >> +        args[idx] = -1;
> >> +    }
> >> +#undef ASSOCIATIVITY
> >> +
> >> +    return H_SUCCESS;
> >> +}
> >> +
> >>  static target_ulong h_get_cpu_characteristics(PowerPCCPU *cpu,
> >>                                                sPAPRMachineState *spapr,
> >>                                                target_ulong opcode,
> >> @@ -1864,6 +1899,10 @@ static void hypercall_register_types(void)
> >>      spapr_register_hypercall(KVMPPC_H_CAS, h_client_architecture_support);
> >>  
> >>      spapr_register_hypercall(KVMPPC_H_UPDATE_DT, h_update_dt);
> >> +
> >> +    /* Virtual Processor Home Node */
> >> +    spapr_register_hypercall(H_HOME_NODE_ASSOCIATIVITY,
> >> +                             h_home_node_associativity);
> >>  }
> >>  
> >>  type_init(hypercall_register_types)
> >> diff --git a/include/hw/ppc/spapr.h b/include/hw/ppc/spapr.h
> >> index b1a2515107..eb13e2b614 100644
> >> --- a/include/hw/ppc/spapr.h
> >> +++ b/include/hw/ppc/spapr.h
> >> @@ -447,6 +447,7 @@ struct sPAPRMachineState {
> >>  #define H_GET_EM_PARMS          0x2B8
> >>  #define H_SET_MPP               0x2D0
> >>  #define H_GET_MPP               0x2D4
> >> +#define H_HOME_NODE_ASSOCIATIVITY 0x2EC
> >>  #define H_XIRR_X                0x2FC
> >>  #define H_RANDOM                0x300
> >>  #define H_SET_MODE              0x31C  
> >   
> 
> 


