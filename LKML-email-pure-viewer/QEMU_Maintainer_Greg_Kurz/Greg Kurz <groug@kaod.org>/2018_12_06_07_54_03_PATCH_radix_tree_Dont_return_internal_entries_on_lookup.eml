Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:42:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 89667580433;
	Thu,  6 Dec 2018 00:13:30 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga004-1.jf.intel.com with ESMTP; 06 Dec 2018 00:13:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Arn9L4BzywOdNjCbXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4UKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUMZPWSJPAY2z?=
 =?us-ascii?q?YYQAAPYOM+ZDt4nwpUADrQe8CAS2GO/j1iVFi33w0KYn0+ohCwbG3Ak4EtwPqn?=
 =?us-ascii?q?Tbstr1P7oXX+Co1qnJzCjIYvRZ2Tfn74jIbx8hrOqPXb1qdsre1FMjFwTfjlWf?=
 =?us-ascii?q?sIHoOS6e2OcVs2WD8eZsSeaih3Q6pwx/vDSj3Nogh4rVio4Py13J9z11zYUrKd?=
 =?us-ascii?q?GiVkJ2YdCpHIFOuy2GNIZ6WN0uTm5rtSs817YIo4S0fDIQx5Qi3xPfa+KIc4yP?=
 =?us-ascii?q?4h/7SuaRLil3hGh/dLK8mRmy606gxfP4VsWu11ZKtCVFnsHNtnALyRPT9tCKRu?=
 =?us-ascii?q?Vh8kqlwzqDyg7e5v9eLUwplqfXN4Qtz78ym5YLtETMBC72mEH4jK+McUUk//Cl?=
 =?us-ascii?q?6+DmYrXgu5+dOJZ4igLgPaQ0nMywH+A4PhEJX2mV/+Szyqfj8FbnQLVFkPI2iL?=
 =?us-ascii?q?PVsJPEKsQBoK62HQtV3pwk6xalADeqyM4YkmUfLFJZZBKHiJDkO1XPIPD7E/iz?=
 =?us-ascii?q?mVutkCpwyvDCP73hBIjNL3fZnLfge7Z991BTyA4pwd9D4JJUD6kLIOjvVU/pqN?=
 =?us-ascii?q?zYEhg5PhS0w+n9CdV9ypkRWWWVDq+ZLaPdq1mI5u00LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G+xsI1+Fbnr0ntcBDWAKsxI8TOztllKOSz1TZ3G0X6?=
 =?us-ascii?q?I64TE2E4amDYbFRoCwj72Nxia7HptKZm9YDlCAC2vnd4KBW/0UciKdPtdhkiAY?=
 =?us-ascii?q?VbimU4IuzwqutA/9y7pkNObU4DcXtZD42dhx5u3Tkwwy9DNuA8Sc1WGNU397nm?=
 =?us-ascii?q?cSSzAq26B/pFR3yk2f3qhgn/xYCdtT6utKUgggM57Q1eh6C9HoVQLHcdeEU1Km?=
 =?us-ascii?q?QtSgATEsQdM92d4OY0BhG9q8ihDPxTalA7gQl7aTHpw77rrc32TtJ8Z603vJyb?=
 =?us-ascii?q?Muj0c4TcdVNW2pnKh/9xPNCI7PlEmZk6WqdaEY3CPW8GeDzGyOvFxXUQJqUKXF?=
 =?us-ascii?q?W2wfaVXSrdjj+kzCSLquA6w9MgRd0c6CNrdKatrxgFpbXvjjJsrRb3ixm2iqAx?=
 =?us-ascii?q?aI3a2DbIzxdmUZ3SXdDlUEkg8J8XaHMwg+Gjmuo2bEADNyElLvZlvm8fNip3Oj?=
 =?us-ascii?q?Uk800waKYlV917q0/x4VguCcS/MT374epCctsTJ0HEy539LXDdqAqBFsfKFdYd?=
 =?us-ascii?q?M7/VdG2njVtw17Ppy8Ma9igkQSfBhwv0Przx93EJlPkdA2rHM2ywp/MbiX0Fdf?=
 =?us-ascii?q?eDKXw5/xOqfbJXLv/B+ycaHW3FLe0NGI+qoU7PQ4qlPjvBymF0Y48nVn1cVV3G?=
 =?us-ascii?q?WY5pnQEAUSVpfxWF4t9xdmv7HafjU954TM2HxsLKm4qCPN18goBesl0Bmgedhf?=
 =?us-ascii?q?PbiAFA/zFc0aGsevJPYrm1ivchILIuRS+LQoMMOhcvuMwLSrM/p4nDK6kWRH55?=
 =?us-ascii?q?hw0liN9yVgUOHIxYsKw/aC0guBSTj8llahvtnrlo9eYTEdA3SwyTLjBI5XfaBy?=
 =?us-ascii?q?eYcLCWGzI8y43Nl+hpjtW2JG+16nHV8JxMipeR+KZVznwQJQzVgXoWCgmSagzz?=
 =?us-ascii?q?10kislr6qF0CzV3uTicgEKOmpKRGlkkFftLpK4j9EcXEi0cQcpkAGp6lr9x6he?=
 =?us-ascii?q?vK5/NXXcQV9UfyjqKGFvSqmwuaCYY85M65Motj9bUP+mblCZSb79oh0a3D3lH2?=
 =?us-ascii?q?ZFwDA7djequoj2nhBgiWKdKmpzo2Tdec1q2Rjf49ncT+ZL3jUaXCl4lSXXBl+k?=
 =?us-ascii?q?Mtip59qUkI3PsuK/V2KnTZBTdSjrzYWdtCq0/2FqABu/n+ytld3jCwQ1zSj719?=
 =?us-ascii?q?xyXyXSsBn8epXr17i9Me9/fUlnHl7859B6GoFjiIQwgp4Q1GMehpWU+3oHjGjy?=
 =?us-ascii?q?Pc9a2aL4cHoCWzoLz8TJ7wji3U1pNmiJyJ7hVnWB3sthYMG3YmYX2iI+9c9GEq?=
 =?us-ascii?q?mV46JfnStpvFW4txnebuZnnjcS0vYu7H8ag+cUuAsi1CmdA7YSHVVGMizojRiH?=
 =?us-ascii?q?89e+rKBPbma1bbewzFZ+ncymDLyavgFcX3P5do0jHCBq6MV/LUnM0Gby6oz/fN?=
 =?us-ascii?q?nQbNQTtgCbkhvajuhVLo4xmeQOhSZ9JW39unglwfYhjRNyxZG6oJSHK2J18a2i?=
 =?us-ascii?q?GBFYMTn1Z94J9jHpkKZThcKW34GpHpV8FTQHRproTfS0ED0MsfTrLRqBEDo5qn?=
 =?us-ascii?q?2DA7rQARef6Ft6r3LIC52rNWuYJHwHwtV5XhWdOFZTgAMJXDU5g545EBqlxNf6?=
 =?us-ascii?q?fUd95zAR4EP4qxRWxuJpMRn/TnnQpAOyZjgoT5ifKQJc7hte6EfNLcye8uVzEj?=
 =?us-ascii?q?lY/52msQyNM3GbaB5ODW0TQUyEAFbjPra16NnE8uiYAPe+LvTUbbWPr+xeS+mH?=
 =?us-ascii?q?xZa13oR6+DaMM92FPmN+AP0jxkpDQXd5FtzZmzoRSiwXlCHNb8+BqBe/4C13qc?=
 =?us-ascii?q?+//+rxWALy/ouCEL9SMdRp+xCrjqaPLe+QhCBlKTlG0pMA32PHyL8a3FQKkSFh?=
 =?us-ascii?q?ayGtEagctS7KVK/fgLJXAAUBayxtNMpE9aY83ghWNM7fi9P10KN4j/EvB1dEU1?=
 =?us-ascii?q?zhht+mZcgQL26hM1PHAV6BNK6aKj3T38H3faS8RKVMjOVVsh28oyqUH1X/MTSD?=
 =?us-ascii?q?iTbpUQuiMeVNjCGdIRxft5uxchdrCWj/Ut3mbge3P8NwjT0z2bc0nG/FNXYAMT?=
 =?us-ascii?q?hgdENAtr2R4jlegvV6GmxB6GJqLOiEmymD6enYJY0bsf9qAiRyiuJb7242y7pT?=
 =?us-ascii?q?7CFYWvN1nDHeocJpo1GjwaGzzW9jURxTunNIiZiNsEFKJ6rU7N9DVGzC8RZL6n?=
 =?us-ascii?q?+fWDoQoN4wJcfitOhz18Ld3Pb8MjBf/PrX9MwQQc/OJ5TUYzIaLRP1FWuMX0M+?=
 =?us-ascii?q?RjmxODSa3hQFnQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AdAADG2Ahch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIng3qIeIsuUAEBBoEQOYkMji2BcywDEAGEOwODFyI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmkCGwUEUgYJAiQCGA4CAgM6CikFgxwBgXQNBAGlW?=
 =?us-ascii?q?3wzii+BC4sTF3iBB4ERM4cpgzuCVwKJMIZMkAhVCYcDij8YgiiPBwGaSIINMxo?=
 =?us-ascii?q?IKAiDJwmCHheGFIgKPwExgQQBAQGID4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0AdAADG2Ahch0O0hNFkHgEGBwaBUQkLAYJpgQIng3qIeIs?=
 =?us-ascii?q?uUAEBBoEQOYkMji2BcywDEAGEOwODFyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmkCGwUEUgYJAiQCGA4CAgM6CikFgxwBgXQNBAGlW3wzii+BC4sTF3i?=
 =?us-ascii?q?BB4ERM4cpgzuCVwKJMIZMkAhVCYcDij8YgiiPBwGaSIINMxoIKAiDJwmCHheGF?=
 =?us-ascii?q?IgKPwExgQQBAQGID4JNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,321,1539673200"; 
   d="scan'208";a="42971198"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 00:13:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729273AbeLFIKZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 03:10:25 -0500
Received: from 5.mo68.mail-out.ovh.net ([46.105.62.179]:46197 "EHLO
        5.mo68.mail-out.ovh.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728909AbeLFIKZ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 03:10:25 -0500
X-Greylist: delayed 600 seconds by postgrey-1.27 at vger.kernel.org; Thu, 06 Dec 2018 03:10:24 EST
Received: from player794.ha.ovh.net (unknown [10.109.159.224])
        by mo68.mail-out.ovh.net (Postfix) with ESMTP id 9CAF6108F30
        for <linux-kernel@vger.kernel.org>; Thu,  6 Dec 2018 08:54:08 +0100 (CET)
Received: from kaod.org (lns-bzn-46-82-253-208-248.adsl.proxad.net [82.253.208.248])
        (Authenticated sender: groug@kaod.org)
        by player794.ha.ovh.net (Postfix) with ESMTPSA id 34E1A8CF98C;
        Thu,  6 Dec 2018 07:54:04 +0000 (UTC)
Subject: [PATCH] radix tree: Don't return internal entries on lookup
From: Greg Kurz <groug@kaod.org>
To: linux-kernel@vger.kernel.org
Cc: Matthew Wilcox <willy@infradead.org>, Josef Bacik <jbacik@fb.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Frederic Barrat <fbarrat@linux.vnet.ibm.com>
Date: Thu, 06 Dec 2018 08:54:03 +0100
Message-ID: <154408284374.405977.5950625525821388567.stgit@bahia.lan>
User-Agent: StGit/unknown-version
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-Ovh-Tracer-Id: 15393303528984648057
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudefiedguddugecutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit 66ee620f06f9 ("idr: Permit any valid kernel pointer to
be stored") changed the radix tree lookup so that it stops when
reaching the bottom of the tree. But radix_tree_descend() may have
changed the node variable to point to an internal entry which then
gets returned to the caller and bad things may happen.

For example, the OCXL driver can easily crash when running tests
that cause radix_tree_lookup() to return RADIX_TREE_RETRY at some
point instead of NULL or a valid pointer, as shown below:

Unable to handle kernel paging request for data at address 0x00000406
Faulting instruction address: 0xc0000000006f6ca0
Oops: Kernel access of bad area, sig: 7 [#1]
LE SMP NR_CPUS=2048 NUMA PowerNV
Modules linked in:
CPU: 10 PID: 0 Comm: swapper/10 Not tainted 4.20.0-rc5-fxb-dirty #1
NIP:  c0000000006f6ca0 LR: c0000000006f6c90 CTR: c0000000006f6b80
REGS: c0000007bff23a80 TRAP: 0300   Not tainted  (4.20.0-rc5-fxb-dirty)
MSR:  9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 48004422  XER: 20040000
CFAR: c000000000aebbe4 DAR: 0000000000000406 DSISR: 00080000 IRQMASK: 1
GPR00: c000000712ff0a38 c0000007bff23d10 c000000001025a00 0000000000000406
GPR04: 0000000000000000 0000000000000000 0000000000000000 c0000007182f8d70
GPR08: 0000000000000406 c0000007182f8d98 00000000004d0008 fffffffffffffffd
GPR12: 0000000000000040 c0000007bfff4200 c0000000047d7f90 000000000a205200
GPR16: 0000000000000000 0000000000000001 0000000000000008 c000000000044480
GPR20: c000000001060174 0000000000000001 0000000000000002 0000000000000001
GPR24: 0000000000000097 c00000002d613000 00007fff92230000 10000000020000b4
GPR28: c00000002d800000 0000000000000000 000000004d000800 c000000712ff0a00
NIP [c0000000006f6ca0] xsl_fault_handler+0x120/0x310
LR [c0000000006f6c90] xsl_fault_handler+0x110/0x310
Call Trace:
[c0000007bff23d10] [c0000000006f6d7c] xsl_fault_handler+0x1fc/0x310 (unreliable)
[c0000007bff23da0] [c000000000164e8c] __handle_irq_event_percpu+0x9c/0x2f0
[c0000007bff23e60] [c000000000165124] handle_irq_event_percpu+0x44/0xc0
[c0000007bff23ea0] [c000000000165204] handle_irq_event+0x64/0xb0
[c0000007bff23ed0] [c00000000016af68] handle_fasteoi_irq+0xd8/0x230
[c0000007bff23f00] [c00000000016356c] generic_handle_irq+0x4c/0x70
[c0000007bff23f20] [c00000000001a394] __do_irq+0xa4/0x210
[c0000007bff23f90] [c00000000002e3f4] call_do_irq+0x14/0x24
[c0000000047d7a30] [c00000000001a59c] do_IRQ+0x9c/0x130
[c0000000047d7a80] [c000000000009ce4] h_virt_irq_common+0x124/0x130
--- interrupt: ea1 at snooze_loop+0x138/0x280
    LR = snooze_loop+0x260/0x280
[c0000000047d7d80] [c0000000010600b0] cpu_idle_force_poll+0x0/0x8 (unreliable)
[c0000000047d7dc0] [c000000000904b98] cpuidle_enter_state+0xa8/0x4c0
[c0000000047d7e30] [c00000000012c3dc] call_cpuidle+0x4c/0x80
[c0000000047d7e50] [c00000000012c98c] do_idle+0x2cc/0x370
[c0000000047d7ec0] [c00000000012cc88] cpu_startup_entry+0x38/0x40
[c0000000047d7ef0] [c000000000046b54] start_secondary+0x664/0x670
[c0000000047d7f90] [c00000000000ac70] start_secondary_prolog+0x10/0x14
Instruction dump:
418201c8 7ba93e24 7fa4eb78 387f0030 fbc10080 7f9c4a14 83dc003c 483f4fed
60000000 7c681b79 41820058 57cac03e <e9280000> 53ca421e 53ca463e 7d4707b4
---[ end trace d17a5522f20aacd2 ]---

Kernel panic - not syncing: Aiee, killing interrupt handler!

Code is:

static irqreturn_t xsl_fault_handler(int irq, void *data)
{
	...
	rcu_read_lock();
	pe_data = radix_tree_lookup(&spa->pe_tree, pe_handle);
	if (!pe_data) {
		...
	}
	WARN_ON(pe_data->mm->context.id != pid);

pe_data is equal to R3 which is the return value of radix_tree_lookup(),
ie, 0x406 == RADIX_TREE_RETRY.

Fix this by not breaking out of the loop if the node points to an internal
entry.

Fixes: 66ee620f06f9 ("idr: Permit any valid kernel pointer to be stored")
Signed-off-by: Greg Kurz <groug@kaod.org>
---
 lib/radix-tree.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/radix-tree.c b/lib/radix-tree.c
index 1106bb6aa01e..462a71962a0e 100644
--- a/lib/radix-tree.c
+++ b/lib/radix-tree.c
@@ -789,7 +789,7 @@ void *__radix_tree_lookup(const struct radix_tree_root *root,
 		parent = entry_to_node(node);
 		offset = radix_tree_descend(parent, &node, index);
 		slot = parent->slots + offset;
-		if (parent->shift == 0)
+		if (!radix_tree_is_internal_node(node) && parent->shift == 0)
 			break;
 	}
 

