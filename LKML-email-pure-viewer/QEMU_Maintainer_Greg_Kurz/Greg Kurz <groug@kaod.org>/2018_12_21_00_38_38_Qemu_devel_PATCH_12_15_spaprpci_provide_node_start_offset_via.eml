Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:44:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0E8495805F0
	for <like.xu@linux.intel.com>; Thu, 20 Dec 2018 16:46:41 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 16:46:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A6bQ0PxAU5d3lvDFlLqwmUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX4o8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJPDI2/?=
 =?us-ascii?q?bYQPAeQOMulEoIfyulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9EwzLxhAsE84UvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjNbulW1iny6IPVdx4hvOuMXLNtesfWxkkvDQTFjkif?=
 =?us-ascii?q?qYH+PDOazOMNvHWB4+pnT+KvhHcqpgdsqTas3schkpfFip4Wx1ze6Cl13YU4Kc?=
 =?us-ascii?q?emREN1YdOoCoZcuiOCO4Z1XM8uWX9ktSY0x7Ecp5K3YCsHxI45yxPQaPGKdZWD?=
 =?us-ascii?q?7Aj5W+aLOzh4gWpoeLKhiBa29kit0un8Vsiv0FZWtSpJiNbMtnYQ1xDJ7ciHUP?=
 =?us-ascii?q?R98l+g2TaJyQ/T9vlJLV4omafYMZIt36M8m5kJvUjdECL7mF/6gLKUe0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMr0wlcy6HOQ0KxUBUHaF+eui0L3v5Fb2QLJXjv0wjq?=
 =?us-ascii?q?bWrovaKcMfpq64AA9azJwv6hmiDzq+1NQYnH8HLE9KeR6djojpPU3OL+78Dful?=
 =?us-ascii?q?n1uslzJryuvAPr3mBJXNIX7DkKr7cbZ68U5cxxI/zcpD6JJMFrEBPPXzV1f1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhm0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0ltLbT?=
 =?us-ascii?q?i2QkkwodYbWxxslQL3S5Beh9ZUOeZ3Xqn5EGC2hNuwM/SOnjjhqFSSJSYHCpGL?=
 =?us-ascii?q?sx4yx+BI+4AIOQe4a2nbbU2S66GoFRNHlLD03JHXr2eoHBQfoVdS+JPudnlToL?=
 =?us-ascii?q?U6XnTJUuggqzvg33wKYyM+zP5ycDvoji3tUm2+qGjBw36Hl4AtqQ10mLSGd7mH?=
 =?us-ascii?q?5OQCU5j45lpkko5U2O3uBbnuZKXYhc/fRUXS85PJnQietgBIahCUr6Yt6VRQP+?=
 =?us-ascii?q?EZ2dCjYrQ4d0modWbg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BgAABWNxxchxHrdtBkHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwgmKDfYh4ixxQAQEGgRAliSOJPYR9gXEXGBSEOwOCcCI2Bw0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgbDi+CNgUCAxoBBoJcAwMBAiAEHwopAwMBAgYBAR8FAhgKBAICA?=
 =?us-ascii?q?wE5ChAZBYMdgXUNAQMBpy98M4ovgQuLNBd4gQeBETOILYI7glcCi0KEYpEZCZF?=
 =?us-ascii?q?lGJFdLJlhgU0GggEzGggoCDuCbIInFxKODHEBgQMDi2mBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BgAABWNxxchxHrdtBkHgEGBwaBUwcLAYEwgmKDfYh4ixx?=
 =?us-ascii?q?QAQEGgRAliSOJPYR9gXEXGBSEOwOCcCI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgbD?=
 =?us-ascii?q?i+CNgUCAxoBBoJcAwMBAiAEHwopAwMBAgYBAR8FAhgKBAICAwE5ChAZBYMdgXU?=
 =?us-ascii?q?NAQMBpy98M4ovgQuLNBd4gQeBETOILYI7glcCi0KEYpEZCZFlGJFdLJlhgU0Gg?=
 =?us-ascii?q?gEzGggoCDuCbIInFxKODHEBgQMDi2mBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,379,1539673200"; 
   d="scan'208";a="56792835"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 20 Dec 2018 16:46:40 -0800
Received: from localhost ([::1]:41732 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1ga8xb-0005CS-JM
	for like.xu@linux.intel.com; Thu, 20 Dec 2018 19:46:39 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60416)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1ga8qF-0007rN-Bv
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 19:39:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1ga8qC-00018g-4s
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 19:39:03 -0500
Received: from 10.mo178.mail-out.ovh.net ([46.105.76.150]:44534)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <groug@kaod.org>) id 1ga8qB-000141-TB
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 19:39:00 -0500
Received: from player737.ha.ovh.net (unknown [10.109.160.5])
	by mo178.mail-out.ovh.net (Postfix) with ESMTP id 43AB542E1C
	for <qemu-devel@nongnu.org>; Fri, 21 Dec 2018 01:38:54 +0100 (CET)
Received: from kaod.org (lns-bzn-46-82-253-208-248.adsl.proxad.net
	[82.253.208.248]) (Authenticated sender: groug@kaod.org)
	by player737.ha.ovh.net (Postfix) with ESMTPSA id 3CAE412CFA01;
	Fri, 21 Dec 2018 00:38:39 +0000 (UTC)
From: Greg Kurz <groug@kaod.org>
To: qemu-devel@nongnu.org
Date: Fri, 21 Dec 2018 01:38:38 +0100
Message-ID: <154535271886.862554.6726021603616372000.stgit@bahia.lan>
In-Reply-To: <154535246529.862554.6113740443866753456.stgit@bahia.lan>
References: <154535246529.862554.6113740443866753456.stgit@bahia.lan>
User-Agent: StGit/unknown-version
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-Ovh-Tracer-Id: 3899554330913118658
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudejgedgvdduucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.76.150
Subject: [Qemu-devel] [PATCH 12/15] spapr_pci: provide node start offset via
 spapr_populate_pci_dt()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Cornelia Huck <cohuck@redhat.com>, Gerd Hoffmann <kraxel@redhat.com>,
	Eduardo Habkost <ehabkost@redhat.com>,
	"Michael S. Tsirkin" <mst@redhat.com>,
	Alexey Kardashevskiy <aik@ozlabs.ru>, David Hildenbrand <david@redhat.com>,
	Michael Roth <mdroth@linux.vnet.ibm.com>, qemu-s390x@nongnu.org,
	Dmitry Fleytman <dmitry.fleytman@gmail.com>, qemu-ppc@nongnu.org,
	=?utf-8?q?C=C3=A9dric?= Le Goater <clg@kaod.org>,
	Marcel Apfelbaum <marcel@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Michael Roth <mdroth@linux.vnet.ibm.com>

PHB hotplug re-uses PHB device tree generation code and passes
it to a guest via RTAS. Doing this requires knowledge of where
exactly in the device tree the node describing the PHB begins.

Provide this via a new optional pointer that can be used to
store the PHB node's start offset.

Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>
Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
Signed-off-by: Greg Kurz <groug@kaod.org>
---
 hw/ppc/spapr.c              |    2 +-
 hw/ppc/spapr_pci.c          |    5 ++++-
 include/hw/pci-host/spapr.h |    2 +-
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
index 4f9d11b14666..5c405a5fafca 100644
--- a/hw/ppc/spapr.c
+++ b/hw/ppc/spapr.c
@@ -1297,7 +1297,7 @@ static void *spapr_build_fdt(sPAPRMachineState *spapr,
 
     QLIST_FOREACH(phb, &spapr->phbs, list) {
         ret = spapr_populate_pci_dt(phb, PHANDLE_XICP, fdt,
-                                    spapr->irq->nr_msis);
+                                    spapr->irq->nr_msis, NULL);
         if (ret < 0) {
             error_report("couldn't setup PCI devices in fdt");
             exit(1);
diff --git a/hw/ppc/spapr_pci.c b/hw/ppc/spapr_pci.c
index 292dd95cbef9..5e7b40a8c910 100644
--- a/hw/ppc/spapr_pci.c
+++ b/hw/ppc/spapr_pci.c
@@ -2140,7 +2140,7 @@ static void spapr_phb_pci_enumerate(sPAPRPHBState *phb)
 }
 
 int spapr_populate_pci_dt(sPAPRPHBState *phb, uint32_t xics_phandle, void *fdt,
-                          uint32_t nr_msis)
+                          uint32_t nr_msis, int *node_offset)
 {
     int bus_off, i, j, ret;
     gchar *nodename;
@@ -2195,6 +2195,9 @@ int spapr_populate_pci_dt(sPAPRPHBState *phb, uint32_t xics_phandle, void *fdt,
     nodename = g_strdup_printf("pci@%" PRIx64, phb->buid);
     _FDT(bus_off = fdt_add_subnode(fdt, 0, nodename));
     g_free(nodename);
+    if (node_offset) {
+        *node_offset = bus_off;
+    }
 
     /* Write PHB properties */
     _FDT(fdt_setprop_string(fdt, bus_off, "device_type", "pci"));
diff --git a/include/hw/pci-host/spapr.h b/include/hw/pci-host/spapr.h
index 83d5075a6ef3..6ef8f141ea92 100644
--- a/include/hw/pci-host/spapr.h
+++ b/include/hw/pci-host/spapr.h
@@ -114,7 +114,7 @@ static inline qemu_irq spapr_phb_lsi_qirq(struct sPAPRPHBState *phb, int pin)
 }
 
 int spapr_populate_pci_dt(sPAPRPHBState *phb, uint32_t xics_phandle, void *fdt,
-                          uint32_t nr_msis);
+                          uint32_t nr_msis, int *node_offset);
 
 void spapr_pci_rtas_init(void);
 


