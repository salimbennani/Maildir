Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 19:49:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E50D55803ED;
	Thu, 29 Nov 2018 03:17:47 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 29 Nov 2018 03:17:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArmY1ixDYwv8g+E/MdmGdUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/os+wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?coUPAOUdMulFoIfypVUBoxilBQm0Bu7i0SNIi3zs0KEmz+gsCwPL0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8VX+C0z6nH0yjIYe9M1jfl74jIahchoeuQXbltdsfR01EvFxvZjliL?=
 =?us-ascii?q?rYzlPjWV1vkCsmSB7upvTuevh3Q7pAF2pzii38EhgZTKiIIN0l3I6zl1zYIvKd?=
 =?us-ascii?q?GlRkN3f8SoHIZTui2GLYd7Q8EvT3lstSog17ELtp22cDIJxZg92RLTdvKKfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/XiVsm7zllKtDBJktrSuXAX0Rzc9MyHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz7oqmpYOv0nPADX6lFj1gaOKbEkp++ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/BeU4Mg4TX2mU4Oi816Ps/Vf/QLpUiv06i6?=
 =?us-ascii?q?7ZsZ7cJcsFvK60GBFV0ok95BalFTum08oXnWMBLF1bfBKLlY/pO0vBIPzgF/ew?=
 =?us-ascii?q?n0yskCt3x/DBJrDhBpTNLnvdn7v7crd99lVRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biEN99zJ8RWXqTAq+FN6PfqV+I6fguI+mQfoAVvyzxK/g45/H0?=
 =?us-ascii?q?i385lkQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EICmDYDdSYy3g7yB2yG7HptRZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddv/O3TlRYy9T9uA8SHyW6NTXp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUFWm?=
 =?us-ascii?q?Tc+gAT0rStIxwsUBY0ByG9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCoHUiUqZibileb4c3CHX8meD1nSBvEdfXA50UqXF?=
 =?us-ascii?q?WHQfa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ADyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyl0HFe439LRF9qApwpgcL9AYd?=
 =?us-ascii?q?8n51dHz2bZtw17PpyvNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23caHW3k/R0dmI9aYP8vg3sEjjsxyzGUok8HVn1MdV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?MaOZFAPoD8IWHcmvKOwwlFivYRIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr8llahvdztloBeeD4SGXCzyS76C45LZ61+?=
 =?us-ascii?q?ZJoEBn2qI8Kq2Np+nZntW3hD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZLRWljl1vtIZK4j8sHXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSL7yuQEa0yDgH2?=
 =?us-ascii?q?tZ3jw7bCulupb6nxx7jmKSMnBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzIOauyu8/2FqAxy/n/aol93jEAg61zL71t?=
 =?us-ascii?q?ZwWSXJqhb8fpfk16CgPe17eUloAUf269BmFYFmjoswmJYQ1GAZhpqP/HoLi2fz?=
 =?us-ascii?q?MchB1qL4Y3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4qAPRYftnkTsHx/oh9mUag/0Xtwo31SqSHKoSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WXv6oHjfd?=
 =?us-ascii?q?ncd9MSuQeSkxfdlOhVM5Mxm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b0Ju1EZVmHjULQYHkTfa1ED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTU4hJE5Ex6lxNf7?=
 =?us-ascii?q?fEdl/DwR5UP4qhhRyuJuLRb/SXzSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1DiPr6z5dnZ7uiXHOy+I+HVYbWJr+xeWOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C//+rqWALs5ouPCqFeMdZ1+xCxjqeMKfSQhDtiKTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNMHBl9P6zaR4geA1CltfUV?=
 =?us-ascii?q?zhm9qkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwyvMeBJjC2BIBNSop2ychZzBmjlV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB7+jXMJAWsf5qAiRyj+1b4XQ6xKFT?=
 =?us-ascii?q?7CFLX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaCKvqVHDFDF/xUJ5H?=
 =?us-ascii?q?TYIRMQpsBiFJW7vapX0NnUk7zbMypZ/pTf+s5KVObOL8fSFXsiPFLTESbTFAwf?=
 =?us-ascii?q?UXb/L3nHm2RZkfeP5juUpJ18oZ/pzsldAoRHXUA4Q6tJQn9uG8YPddIuBmsp?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAABByv9bh0O0hNFlGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeDeYgYX4spUAEBBoE1FIkKjiSBcxIBARgTAYR?=
 =?us-ascii?q?AgzMiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmEBAQEBAgEBAg8RBAsBQ?=
 =?us-ascii?q?AYFAQkBAQoOCgICBSECAgMMBUkTBR2Cf4F1BQgDAQGbVIlYAQEBbnwzii2BC4s?=
 =?us-ascii?q?LF3iBB4MlfoUBgwQxgiYCixmVCgmRJyMKApEQLJRxgwgCBAYFAhMBgUaCDU0jF?=
 =?us-ascii?q?TuCbIInF44fcIEFAQEhjRcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAABByv9bh0O0hNFlGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeDeYgYX4spUAEBBoE1FIkKjiSBcxIBARgTAYRAgzMiNAkNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEIDQkIKS+CNiQBgmEBAQEBAgEBAg8RBAsBQAYFAQkBAQoOCgI?=
 =?us-ascii?q?CBSECAgMMBUkTBR2Cf4F1BQgDAQGbVIlYAQEBbnwzii2BC4sLF3iBB4MlfoUBg?=
 =?us-ascii?q?wQxgiYCixmVCgmRJyMKApEQLJRxgwgCBAYFAhMBgUaCDU0jFTuCbIInF44fcIE?=
 =?us-ascii?q?FAQEhjRcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="42050223"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 03:17:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728017AbeK2WWm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 17:22:42 -0500
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:53434 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1727020AbeK2WWl (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 17:22:41 -0500
Received: from pps.filterd (m0098420.ppops.net [127.0.0.1])
        by mx0b-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wATBDdXY150590
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 06:17:39 -0500
Received: from e06smtp01.uk.ibm.com (e06smtp01.uk.ibm.com [195.75.94.97])
        by mx0b-001b2d01.pphosted.com with ESMTP id 2p2dtm3sx8-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 06:17:39 -0500
Received: from localhost
        by e06smtp01.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <rppt@linux.ibm.com>;
        Thu, 29 Nov 2018 11:17:37 -0000
Received: from b06cxnps3074.portsmouth.uk.ibm.com (9.149.109.194)
        by e06smtp01.uk.ibm.com (192.168.101.131) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Thu, 29 Nov 2018 11:17:29 -0000
Received: from d06av25.portsmouth.uk.ibm.com (d06av25.portsmouth.uk.ibm.com [9.149.105.61])
        by b06cxnps3074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wATBHS7F59637764
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Thu, 29 Nov 2018 11:17:28 GMT
Received: from d06av25.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 044EC11C04C;
        Thu, 29 Nov 2018 11:17:28 +0000 (GMT)
Received: from d06av25.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id C0E8911C069;
        Thu, 29 Nov 2018 11:17:25 +0000 (GMT)
Received: from rapoport-lnx (unknown [9.148.8.213])
        by d06av25.portsmouth.uk.ibm.com (Postfix) with ESMTPS;
        Thu, 29 Nov 2018 11:17:25 +0000 (GMT)
Date: Thu, 29 Nov 2018 13:17:24 +0200
From: Mike Rapoport <rppt@linux.ibm.com>
To: Nikolay Borisov <nborisov@suse.com>
Cc: Michal Hocko <mhocko@kernel.org>, linux-kernel@vger.kernel.org,
        David Howells <dhowells@redhat.com>, Chris Mason <clm@fb.com>,
        Josef Bacik <josef@toxicpanda.com>,
        David Sterba <dsterba@suse.com>,
        "Yan, Zheng" <zyan@redhat.com>, Sage Weil <sage@redhat.com>,
        Ilya Dryomov <idryomov@gmail.com>,
        Steve French <sfrench@samba.org>,
        "Theodore Ts'o" <tytso@mit.edu>,
        Andreas Dilger <adilger.kernel@dilger.ca>,
        Mark Fasheh <mark@fasheh.com>,
        Joel Becker <jlbec@evilplan.org>,
        Mike Marshall <hubcap@omnibond.com>,
        Martin Brandenburg <martin@omnibond.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        Matthew Wilcox <willy@infradead.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        YueHaibing <yuehaibing@huawei.com>,
        Shakeel Butt <shakeelb@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        linux-afs@lists.infradead.org, linux-btrfs@vger.kernel.org,
        ceph-devel@vger.kernel.org, linux-cifs@vger.kernel.org,
        samba-technical@lists.samba.org, linux-ext4@vger.kernel.org,
        ocfs2-devel@oss.oracle.com, devel@lists.orangefs.org,
        linux-mm@kvack.org
Subject: Re: [PATCH 2/2] fs: Don't open-code lru_to_page
References: <20181129075301.29087-1-nborisov@suse.com>
 <20181129075301.29087-2-nborisov@suse.com>
 <20181129081826.GO6923@dhcp22.suse.cz>
 <0921bc8f-b899-4925-51f2-a9f45d4c906a@suse.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <0921bc8f-b899-4925-51f2-a9f45d4c906a@suse.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
X-TM-AS-GCONF: 00
x-cbid: 18112911-4275-0000-0000-000002E88203
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18112911-4276-0000-0000-000037F5C617
Message-Id: <20181129111723.GD9315@rapoport-lnx>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-11-29_07:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1811290098
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 10:50:08AM +0200, Nikolay Borisov wrote:
> 
> 
> On 29.11.18 г. 10:18 ч., Michal Hocko wrote:
> > On Thu 29-11-18 09:52:57, Nikolay Borisov wrote:
> >> There are a bunch of filesystems which essentially open-code lru_to_page
> >> helper. Change them to using the helper. No functional changes.
> > 
> > I would just squash the two into a single patch. It makes the first one
> > more obvious. Or is there any reason to have them separate?
> 
> No reason, just didn't know how people would react so that's why I chose
> to send as two separate.

I'm with Michal on this, a single patch seems better here.
Yet, for either way:

Reviewed-by: Mike Rapoport <rppt@linux.ibm.com>
 
> If I squash them who would be the best person to take them ?
> 
> > 
> >> Signed-off-by: Nikolay Borisov <nborisov@suse.com>
> > 
> > Acked-by: Michal Hocko <mhocko@suse.com>
> > 
> >> ---
> >>
> >> Since this is a mostly mechanical change I've actually batched all of them in 
> >> a single patch. 
> >>
> >>  fs/afs/file.c        | 5 +++--
> >>  fs/btrfs/extent_io.c | 2 +-
> >>  fs/ceph/addr.c       | 5 ++---
> >>  fs/cifs/file.c       | 3 ++-
> >>  fs/ext4/readpage.c   | 2 +-
> >>  fs/ocfs2/aops.c      | 3 ++-
> >>  fs/orangefs/inode.c  | 2 +-
> >>  mm/swap.c            | 2 +-
> >>  8 files changed, 13 insertions(+), 11 deletions(-)
> >>
> >> diff --git a/fs/afs/file.c b/fs/afs/file.c
> >> index d6bc3f5d784b..323ae9912203 100644
> >> --- a/fs/afs/file.c
> >> +++ b/fs/afs/file.c
> >> @@ -17,6 +17,7 @@
> >>  #include <linux/writeback.h>
> >>  #include <linux/gfp.h>
> >>  #include <linux/task_io_accounting_ops.h>
> >> +#include <linux/mm.h>
> >>  #include "internal.h"
> >>  
> >>  static int afs_file_mmap(struct file *file, struct vm_area_struct *vma);
> >> @@ -441,7 +442,7 @@ static int afs_readpages_one(struct file *file, struct address_space *mapping,
> >>  	/* Count the number of contiguous pages at the front of the list.  Note
> >>  	 * that the list goes prev-wards rather than next-wards.
> >>  	 */
> >> -	first = list_entry(pages->prev, struct page, lru);
> >> +	first = lru_to_page(pages);
> >>  	index = first->index + 1;
> >>  	n = 1;
> >>  	for (p = first->lru.prev; p != pages; p = p->prev) {
> >> @@ -473,7 +474,7 @@ static int afs_readpages_one(struct file *file, struct address_space *mapping,
> >>  	 * page at the end of the file.
> >>  	 */
> >>  	do {
> >> -		page = list_entry(pages->prev, struct page, lru);
> >> +		page = lru_to_page(pages);
> >>  		list_del(&page->lru);
> >>  		index = page->index;
> >>  		if (add_to_page_cache_lru(page, mapping, index,
> >> diff --git a/fs/btrfs/extent_io.c b/fs/btrfs/extent_io.c
> >> index 19f4b8fd654f..8332c5f4b1c3 100644
> >> --- a/fs/btrfs/extent_io.c
> >> +++ b/fs/btrfs/extent_io.c
> >> @@ -4104,7 +4104,7 @@ int extent_readpages(struct address_space *mapping, struct list_head *pages,
> >>  	u64 prev_em_start = (u64)-1;
> >>  
> >>  	for (page_idx = 0; page_idx < nr_pages; page_idx++) {
> >> -		page = list_entry(pages->prev, struct page, lru);
> >> +		page = lru_to_page(pages);
> >>  
> >>  		prefetchw(&page->flags);
> >>  		list_del(&page->lru);
> >> diff --git a/fs/ceph/addr.c b/fs/ceph/addr.c
> >> index 8eade7a993c1..5d0c05e288cc 100644
> >> --- a/fs/ceph/addr.c
> >> +++ b/fs/ceph/addr.c
> >> @@ -306,7 +306,7 @@ static int start_read(struct inode *inode, struct ceph_rw_context *rw_ctx,
> >>  	struct ceph_osd_client *osdc =
> >>  		&ceph_inode_to_client(inode)->client->osdc;
> >>  	struct ceph_inode_info *ci = ceph_inode(inode);
> >> -	struct page *page = list_entry(page_list->prev, struct page, lru);
> >> +	struct page *page = lru_to_page(page_list);
> >>  	struct ceph_vino vino;
> >>  	struct ceph_osd_request *req;
> >>  	u64 off;
> >> @@ -333,8 +333,7 @@ static int start_read(struct inode *inode, struct ceph_rw_context *rw_ctx,
> >>  			if (got)
> >>  				ceph_put_cap_refs(ci, got);
> >>  			while (!list_empty(page_list)) {
> >> -				page = list_entry(page_list->prev,
> >> -						  struct page, lru);
> >> +				page = lru_to_page(page_list);
> >>  				list_del(&page->lru);
> >>  				put_page(page);
> >>  			}
> >> diff --git a/fs/cifs/file.c b/fs/cifs/file.c
> >> index 74c33d5fafc8..b16a4d887d17 100644
> >> --- a/fs/cifs/file.c
> >> +++ b/fs/cifs/file.c
> >> @@ -33,6 +33,7 @@
> >>  #include <linux/mount.h>
> >>  #include <linux/slab.h>
> >>  #include <linux/swap.h>
> >> +#include <linux/mm.h>
> >>  #include <asm/div64.h>
> >>  #include "cifsfs.h"
> >>  #include "cifspdu.h"
> >> @@ -3975,7 +3976,7 @@ readpages_get_pages(struct address_space *mapping, struct list_head *page_list,
> >>  
> >>  	INIT_LIST_HEAD(tmplist);
> >>  
> >> -	page = list_entry(page_list->prev, struct page, lru);
> >> +	page = lru_to_page(page_list);
> >>  
> >>  	/*
> >>  	 * Lock the page and put it in the cache. Since no one else
> >> diff --git a/fs/ext4/readpage.c b/fs/ext4/readpage.c
> >> index f461d75ac049..6aa282ee455a 100644
> >> --- a/fs/ext4/readpage.c
> >> +++ b/fs/ext4/readpage.c
> >> @@ -128,7 +128,7 @@ int ext4_mpage_readpages(struct address_space *mapping,
> >>  
> >>  		prefetchw(&page->flags);
> >>  		if (pages) {
> >> -			page = list_entry(pages->prev, struct page, lru);
> >> +			page = lru_to_page(pages);
> >>  			list_del(&page->lru);
> >>  			if (add_to_page_cache_lru(page, mapping, page->index,
> >>  				  readahead_gfp_mask(mapping)))
> >> diff --git a/fs/ocfs2/aops.c b/fs/ocfs2/aops.c
> >> index eb1ce30412dc..832c1759a09a 100644
> >> --- a/fs/ocfs2/aops.c
> >> +++ b/fs/ocfs2/aops.c
> >> @@ -30,6 +30,7 @@
> >>  #include <linux/quotaops.h>
> >>  #include <linux/blkdev.h>
> >>  #include <linux/uio.h>
> >> +#include <linux/mm.h>
> >>  
> >>  #include <cluster/masklog.h>
> >>  
> >> @@ -397,7 +398,7 @@ static int ocfs2_readpages(struct file *filp, struct address_space *mapping,
> >>  	 * Check whether a remote node truncated this file - we just
> >>  	 * drop out in that case as it's not worth handling here.
> >>  	 */
> >> -	last = list_entry(pages->prev, struct page, lru);
> >> +	last = lru_to_page(pages);
> >>  	start = (loff_t)last->index << PAGE_SHIFT;
> >>  	if (start >= i_size_read(inode))
> >>  		goto out_unlock;
> >> diff --git a/fs/orangefs/inode.c b/fs/orangefs/inode.c
> >> index fe53381b26b1..f038235c64bd 100644
> >> --- a/fs/orangefs/inode.c
> >> +++ b/fs/orangefs/inode.c
> >> @@ -77,7 +77,7 @@ static int orangefs_readpages(struct file *file,
> >>  	for (page_idx = 0; page_idx < nr_pages; page_idx++) {
> >>  		struct page *page;
> >>  
> >> -		page = list_entry(pages->prev, struct page, lru);
> >> +		page = lru_to_page(pages);
> >>  		list_del(&page->lru);
> >>  		if (!add_to_page_cache(page,
> >>  				       mapping,
> >> diff --git a/mm/swap.c b/mm/swap.c
> >> index aa483719922e..20b9e9d99652 100644
> >> --- a/mm/swap.c
> >> +++ b/mm/swap.c
> >> @@ -126,7 +126,7 @@ void put_pages_list(struct list_head *pages)
> >>  	while (!list_empty(pages)) {
> >>  		struct page *victim;
> >>  
> >> -		victim = list_entry(pages->prev, struct page, lru);
> >> +		victim = lru_to_page(pages);
> >>  		list_del(&victim->lru);
> >>  		put_page(victim);
> >>  	}
> >> -- 
> >> 2.17.1
> > 
> 

-- 
Sincerely yours,
Mike.

