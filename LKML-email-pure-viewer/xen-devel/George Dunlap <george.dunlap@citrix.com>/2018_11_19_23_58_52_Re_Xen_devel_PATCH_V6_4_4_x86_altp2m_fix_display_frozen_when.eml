Return-Path: <xen-devel-bounces@lists.xenproject.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:31:26 -0000
Received: from icoremail.net (unknown [209.85.214.182])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv_qn3vJb4jm6AQ--.55590S3;
	Tue, 20 Nov 2018 00:02:49 +0800 (CST)
Received: from mail-pl1-f182.google.com (unknown [209.85.214.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnz0uh3vJbvkVZAA--.2100S3;
	Tue, 20 Nov 2018 00:02:41 +0800 (CST)
Received: by mail-pl1-f182.google.com with SMTP id s5-v6so14777046plq.11
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:02:41 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :to:references:from:openpgp:autocrypt:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:subject:precedence
         :list-id:list-unsubscribe:list-post:list-help:list-subscribe:cc
         :errors-to:sender;
        bh=mzN6YcE4MgpexFThnv6r6pGZ6Tfwetf7uYbYEdzl9nU=;
        b=SCjAp05H86K0tv5+2Rh5XM0WBDwdckB9oz3aX+7vcf7MZB+QCh+3txHJ++HADXVxB4
         c28kY3tCSNnzg9OUmgIpGaA61kyq9nkiliI53zCZ8BYyCRUiTHTaUPs0IXiSRELcIFv9
         wbS6wdxfF8Dc1aTFtW66VF0Rm1XCfmTcx6AdGjzbrZ7b5N2SrqCsgqlEhdNO877g/qMH
         Uo/NVkdznYrckAS3EfWw6rNf+/jtlzfjkWLbFiz3ShuI8W8vqGz4ppIFQINIjRG+dIoB
         atDqPx4E9dYfP1/YV58dRD1rCMlax5ceV82Z3ay2CupOnEyFgokcFK9yUY+NnrAepQ9c
         VtLw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of xen-devel-bounces@lists.xenproject.org designates 192.237.175.120 as permitted sender) smtp.mailfrom=xen-devel-bounces@lists.xenproject.org
X-Gm-Message-State: AGRZ1gIB4egWuKO4dB7EQ3IF57cPTMxSgKEEjvGXXpcR7RKIRe2AiTUz
	W1F2MpPNQTtFBfTOqUPHLpLG/tvBVqbunB4QfnLvLq6ePdRdR90=
X-Received: by 2002:a17:902:784d:: with SMTP id e13mr23236422pln.188.1542643361114;
        Mon, 19 Nov 2018 08:02:41 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2841715pju;
        Mon, 19 Nov 2018 08:02:40 -0800 (PST)
X-Google-Smtp-Source: AJdET5f16cjZb0DkSIIzG3pNFQ9Ewo1ccKwfHbsShPIQg2uW7TG56Gb68MVyWIeLGUgmakQ6/fn6
X-Received: by 2002:a25:3042:: with SMTP id w63-v6mr21669202ybw.318.1542643360011;
        Mon, 19 Nov 2018 08:02:40 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542643359; cv=none;
        d=google.com; s=arc-20160816;
        b=aJFCc2B6WJZkVppTqqaSim/RFc8+tmV1zYZxi1a6yh5iguxovyRIH+kTQHO33iTLME
         NrKapaF/Qx/LsFYhE/HbruFIkfzjx4j1eLT4SP7BQQe8c/EGq2DlpsQ5yL/9mV5YqMzJ
         hB8o20EVdmeNJnG5+mALSjd+Jf7vyKM8wSOpRX6irnzgpB4fEm5XJ1KNikELUf6w1HU8
         UEMOzGWOOYrYEHnE7fCSKvolXM/KpbD9TwVTYd+h8lY3Lu1qBAFGH3ovbhBqCOo98Rn5
         InQcgRE5gDi2MkFivgdafP5u5X8INq3oPtQ3JZpPRT8RNyqTLIkwbFOXdwJLmFrE+C7z
         DVZg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=sender:errors-to:cc:list-subscribe:list-help:list-post
         :list-unsubscribe:list-id:precedence:subject:content-language
         :in-reply-to:mime-version:user-agent:date:message-id:autocrypt
         :openpgp:from:references:to;
        bh=mzN6YcE4MgpexFThnv6r6pGZ6Tfwetf7uYbYEdzl9nU=;
        b=hJWSX60apcy4J5O/Tpu2/S3vtuC8F0SkBM1OeglLP/Z2sT49SMyGpFOy1fuL9rOtK6
         jPHfxSIqFhvfT5NgX35naIPKZUK4zI1TN+oazCmp8IXHUTgVjrCNTJRnPMnXoNfmqSe1
         AcuT5i7Kby69/Kg17AklIFFA43UAAg9UVzsTok3Af3ph8GcE4sPFMTux5T63983Eri1+
         dPU8UIC3hKU1sxY0nAy2whj8cabpavk1z10XzGBNSxWjlns8BmtIpSwR4Zwx5PaestYk
         2PCyEqD4FFHGjBZebVvnd6eyTPLQI2M2msgJUljjvc3HqteNI1um0lUFxH6UUHfeIaPH
         kVKA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of xen-devel-bounces@lists.xenproject.org designates 192.237.175.120 as permitted sender) smtp.mailfrom=xen-devel-bounces@lists.xenproject.org
Received: from lists.xenproject.org (lists.xenproject.org. [192.237.175.120])
        by mx.google.com with ESMTPS id 203-v6si25505567ybs.97.2018.11.19.08.02.39
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 19 Nov 2018 08:02:39 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of xen-devel-bounces@lists.xenproject.org designates 192.237.175.120 as permitted sender) client-ip=192.237.175.120;
Received: from localhost ([127.0.0.1] helo=lists.xenproject.org)
	by lists.xenproject.org with esmtp (Exim 4.89)
	(envelope-from <xen-devel-bounces@lists.xenproject.org>)
	id 1gOlxk-0002SV-Tw; Mon, 19 Nov 2018 15:59:48 +0000
Received: from us1-rack-dfw2.inumbo.com ([104.130.134.6])
 by lists.xenproject.org with esmtp (Exim 4.89) (envelope-from
 <srs0=v//2=n6=citrix.com=prvs=8541ae097=george.dunlap@srs-us1.protection.inumbo.net>)
 id 1gOlxi-0002SQ-Td
 for xen-devel@lists.xenproject.org; Mon, 19 Nov 2018 15:59:46 +0000
X-Inumbo-ID: 2262ddac-ec14-11e8-9a16-bc764e045a96
Received: from SMTP03.CITRIX.COM (unknown [162.221.156.55])
 by us1-rack-dfw2.inumbo.com (Halon) with ESMTPS
 id 2262ddac-ec14-11e8-9a16-bc764e045a96;
 Mon, 19 Nov 2018 15:59:45 +0000 (UTC)
X-IronPort-AV: E=Sophos;i="5.56,253,1539648000"; d="scan'208,223";a="70970249"
To: Razvan Cojocaru <rcojocaru@bitdefender.com>, Jan Beulich
 <JBeulich@suse.com>
References: <1542228002-21075-1-git-send-email-rcojocaru@bitdefender.com>
 <1542228002-21075-5-git-send-email-rcojocaru@bitdefender.com>
 <3603CF64-3679-43F6-A389-E88DAA0BF503@citrix.com>
 <482be5fb-0406-c203-2664-070a77e329e9@bitdefender.com>
 <5BEE972D02000078001FCB0D@prv1-mh.provo.novell.com>
 <62c1f237-9d1d-06f3-49f8-e48be8d38b3f@citrix.com>
 <6ef4e095-cbd3-3d37-7759-0d3faa720e84@bitdefender.com>
 <c6e1ee08-0b71-f8f8-5862-94a8d01ac1e1@citrix.com>
 <e33cad9e-f138-48b0-d12c-5178eea9b6e2@bitdefender.com>
 <70f50b49-9b7a-13d9-442c-62df33105552@bitdefender.com>
From: George Dunlap <george.dunlap@citrix.com>
Openpgp: preference=signencrypt
Autocrypt: addr=george.dunlap@citrix.com; prefer-encrypt=mutual; keydata=
 xsFNBFPqG+MBEACwPYTQpHepyshcufo0dVmqxDo917iWPslB8lauFxVf4WZtGvQSsKStHJSj
 92Qkxp4CH2DwudI8qpVbnWCXsZxodDWac9c3PordLwz5/XL41LevEoM3NWRm5TNgJ3ckPA+J
 K5OfSK04QtmwSHFP3G/SXDJpGs+oDJgASta2AOl9vPV+t3xG6xyfa2NMGn9wmEvvVMD44Z7R
 W3RhZPn/NEZ5gaJhIUMgTChGwwWDOX0YPY19vcy5fT4bTIxvoZsLOkLSGoZb/jHIzkAAznug
 Q7PPeZJ1kXpbW9EHHaUHiCD9C87dMyty0N3TmWfp0VvBCaw32yFtM9jUgB7UVneoZUMUKeHA
 fgIXhJ7I7JFmw3J0PjGLxCLHf2Q5JOD8jeEXpdxugqF7B/fWYYmyIgwKutiGZeoPhl9c/7RE
 Bf6f9Qv4AtQoJwtLw6+5pDXsTD5q/GwhPjt7ohF7aQZTMMHhZuS52/izKhDzIufl6uiqUBge
 0lqG+/ViLKwCkxHDREuSUTtfjRc9/AoAt2V2HOfgKORSCjFC1eI0+8UMxlfdq2z1AAchinU0
 eSkRpX2An3CPEjgGFmu2Je4a/R/Kd6nGU8AFaE8ta0oq5BSFDRYdcKchw4TSxetkG6iUtqOO
 ZFS7VAdF00eqFJNQpi6IUQryhnrOByw+zSobqlOPUO7XC5fjnwARAQABzSRHZW9yZ2UgVy4g
 RHVubGFwIDxkdW5sYXBnQHVtaWNoLmVkdT7CwYAEEwEKACoCGwMFCwkIBwMFFQoJCAsFFgID
 AQACHgECF4ACGQEFAlpk2IEFCQo9I54ACgkQpjY8MQWQtG1A1BAAnc0oX3+M/jyv4j/ESJTO
 U2JhuWUWV6NFuzU10pUmMqpgQtiVEVU2QbCvTcZS1U/S6bqAUoiWQreDMSSgGH3a3BmRNi8n
 HKtarJqyK81aERM2HrjYkC1ZlRYG+jS8oWzzQrCQiTwn3eFLJrHjqowTbwahoiMw/nJ+OrZO
 /VXLfNeaxA5GF6emwgbpshwaUtESQ/MC5hFAFmUBZKAxp9CXG2ZhTP6ROV4fwhpnHaz8z+BT
 NQz8YwA4gkmFJbDUA9I0Cm9D/EZscrCGMeaVvcyldbMhWS+aH8nbqv6brhgbJEQS22eKCZDD
 J/ng5ea25QnS0fqu3bMrH39tDqeh7rVnt8Yu/YgOwc3XmgzmAhIDyzSinYEWJ1FkOVpIbGl9
 uR6seRsfJmUK84KCScjkBhMKTOixWgNEQ/zTcLUsfTh6KQdLTn083Q5aFxWOIal2hiy9UyqR
 VQydowXy4Xx58rqvZjuYzdGDdAUlZ+D2O3Jp28ez5SikA/ZaaoGI9S1VWvQsQdzNfD2D+xfL
 qfd9yv7gko9eTJzv5zFr2MedtRb/nCrMTnvLkwNX4abB5+19JGneeRU4jy7yDYAhUXcI/waS
 /hHioT9MOjMh+DoLCgeZJYaOcgQdORY/IclLiLq4yFnG+4Ocft8igp79dbYYHkAkmC9te/2x
 Kq9nEd0Hg288EO/OwE0EVFq6vQEIAO2idItaUEplEemV2Q9mBA8YmtgckdLmaE0uzdDWL9To
 1PL+qdNe7tBXKOfkKI7v32fe0nB4aecRlQJOZMWQRQ0+KLyXdJyHkq9221sHzcxsdcGs7X3c
 17ep9zASq+wIYqAdZvr7pN9a3nVHZ4W7bzezuNDAvn4EpOf/o0RsWNyDlT6KECs1DuzOdRqD
 oOMJfYmtx9hMzqBoTdr6U20/KgnC/dmWWcJAUZXaAFp+3NYRCkk7k939VaUpoY519CeLrymd
 Vdke66KCiWBQXMkgtMGvGk5gLQLy4H3KXvpXoDrYKgysy7jeOccxI8owoiOdtbfM8TTDyWPR
 Ygjzb9LApA8AEQEAAcLBZQQYAQoADwIbDAUCWmTXMwUJB+tP9gAKCRCmNjwxBZC0bb+2D/9h
 jn1k5WcRHlu19WGuH6q0Kgm1LRT7PnnSz904igHNElMB5a7wRjw5kdNwU3sRm2nnmHeOJH8k
 Yj2Hn1QgX5SqQsysWTHWOEseGeoXydx9zZZkt3oQJM+9NV1VjK0bOXwqhiQyEUWz5/9l467F
 S/k4FJ5CHNRumvhLa0l2HEEu5pxq463HQZHDt4YE/9Y74eXOnYCB4nrYxQD/GSXEZvWryEWr
 eDoaFqzq1TKtzHhFgQG7yFUEepxLRUUtYsEpT6Rks2l4LCqG3hVD0URFIiTyuxJx3VC2Ta4L
 H3hxQtiaIpuXqq2D4z63h6vCx2wxfZc/WRHGbr4NAlB81l35Q/UHyMocVuYLj0llF0rwU4Aj
 iKZ5qWNSEdvEpL43fTvZYxQhDCjQTKbb38omu5P4kOf1HT7s+kmQKRtiLBlqHzK17D4K/180
 ADw7a3gnmr5RumcZP3NGSSZA6jP5vNqQpNu4gqrPFWNQKQcW8HBiYFgq6SoLQQWbRxJDHvTR
 YJ2ms7oCe870gh4D1wFFqTLeyXiVqjddENGNaP8ZlCDw6EU82N8Bn5LXKjR1GWo2UK3CjrkH
 pTt3YYZvrhS2MO2EYEcWjyu6LALF/lS6z6LKeQZ+t9AdQUcILlrx9IxqXv6GvAoBLJY1jjGB
 q+/kRPrWXpoaQn7FXWGfMqU+NkY9enyrlw==
Message-ID: <43323e2f-e1c1-5fc7-c1b5-8a3b58819718@citrix.com>
Date: Mon, 19 Nov 2018 15:58:52 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <70f50b49-9b7a-13d9-442c-62df33105552@bitdefender.com>
Content-Type: multipart/mixed; boundary="------------87940B2DED7D31D6237C500C"
Content-Language: en-US
Subject: Re: [Xen-devel] [PATCH V6 4/4] x86/altp2m: fix display frozen when
 switching to a new view early
X-BeenThere: xen-devel@lists.xenproject.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Xen developer discussion <xen-devel.lists.xenproject.org>
List-Unsubscribe: <https://lists.xenproject.org/mailman/options/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=unsubscribe>
List-Post: <mailto:xen-devel@lists.xenproject.org>
List-Help: <mailto:xen-devel-request@lists.xenproject.org?subject=help>
List-Subscribe: <https://lists.xenproject.org/mailman/listinfo/xen-devel>,
 <mailto:xen-devel-request@lists.xenproject.org?subject=subscribe>
Cc: Andrew Cooper <andrew.cooper3@citrix.com>,
 Kevin Tian <kevin.tian@intel.com>, Wei Liu <wei.liu2@citrix.com>,
 Jun Nakajima <jun.nakajima@intel.com>,
 xen-devel <xen-devel@lists.xenproject.org>
Errors-To: xen-devel-bounces@lists.xenproject.org
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
X-CM-TRANSID: AQAAfwDnz0uh3vJbvkVZAA--.2100S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW7ArWxCFWfJr1xCFW3GrWUCFg_yoW8KFWxp3
	9aq3Z2qr4kJrZYgF13J3y2qF18Crs5Jry5Gr98tryxAF1jgF9xJw15K3W7uFZrCwn3Ar1S
	ka1fXF97ZFy2qaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUpvb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr0_Cr1l84ACjcxK6I8E87Iv6xkF7I0E14v26r4j6r4UJwAa7VASzI0EjI
	02j7AqF2xKxVCjxxvEa2IrM2vj6VCEFcxC0VAYjxAxZF0EFcxC0VAYjxAxZF0Ew4CEw7xC
	0VCjxxvEa2IrM2AIxVAIcxkEcVAq07x20xvEncxIr21le4C267I2x7xF54xIwI1l5I8CrV
	ACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j6r18McIj6I8E87Iv67AKxVWU
	JVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr41lFcxC0VAYjxAxZF0Ew4CEw7
	xC0wCjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkI
	ecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWUJVW8JwCYIxAI
	cVC2z280aVCY1x0267AKxVWUJVW8JwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUMVCEFcxC0VAYjxAxZFUvcSsGvfC2Kfnx
	nUUI43ZEXa7IU5RlkDUUUUU==

--------------87940B2DED7D31D6237C500C
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

On 11/17/18 6:58 PM, Razvan Cojocaru wrote:
> On 11/16/18 9:50 PM, Razvan Cojocaru wrote:
>> On 11/16/18 7:59 PM, George Dunlap wrote:
>>> On the other hand, we want the logdirty rangesets to actually match the
>>> host's rangesets; using altp2m->max_mapped_pfn for this is clearly
>>> wrong. The easiest fix would be just to explicitly use the host's
>>> max_mapped_pfn when calculating the clipping.  A more complete fix would
>>> involve calculating two different ranges -- a "rangeset" range and a
>>> "invalidate" range, the second of which would be clipped on altp2ms by
>>> {min,max}_remapped_gfn.
>>>
>>> Something like the attached (compile-tested only).  I'm partial to
>>> having both patches applied, but I'd be open to arguments that we should
>>> only use the first.
>>
>> Thanks! I haven't yet been able to think in depth about the logic, but I
>> did manage to apply them. Just applying the first one allows me to set
>> p2m->max_mapped_pfn = 0; without the ASSERT() crashing the hypervisor,
>> and everything appears to work well.
>>
>> With both patches applies, the display remains frozen (things appear to
>> behave - externally - in the same way as before the series).
> 
> Right, I know why the second patch keeps the display frozen. It's
> because for altp2ms (where it matters most), the patch basically does
> invalidate_start = max(invalidate_start, p2m->min_remapped_gfn) and
> invalidate_end = min(invalidate_end, p2m->max_remapped_gfn).
> 
> However, as previously requested, I've now made p2m->max_remapped_gfn
> begin life as 0 for altp2ms, and p2m->min_remapped_gfn is initialized to
> INVALID_GFN, which is decimal 18446744073709551615. So we get
> invalidate_end: 0, invalidate_start: 18446744073709551615,
> invalidate_end < invalidate_start, resulting in nothing being done for
> altp2ms, which is functionally back to square one.

But this doesn't explain why my reasoning was wrong; and it's always
dangerous to use a system whose behavior you don't really understand,
even if it seems to work.

It turns out I'd made a mistake in saying that altp2m->max_mapped_pfn ==
alt2m->max_remapped_gfn.  The first is the highest gfn present in the
altp2m, either copied from the hostp2m or changed; the second is the
highest value changed (via p2m_altp2m_change_gfn()).

What about using the attached patch instead?

 -George

--------------87940B2DED7D31D6237C500C
Content-Type: text/x-patch;
	name="0002-p2m-change_range_type-Only-invalidate-mapped-gfns.patch"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="0002-p2m-change_range_type-Only-invalidate-mapped-gfns.patch"

=46rom f4c72ecb95cfa5d597b8e28e99e681cfeaa32199 Mon Sep 17 00:00:00 2001
From: George Dunlap <george.dunlap@citrix.com>
Date: Fri, 16 Nov 2018 16:28:25 +0000
Subject: [PATCH 2/2] p2m: change_range_type: Only invalidate mapped gfns

change_range_type() invalidates gfn ranges to lazily change the type
of a range of gfns, and also modifies the logdirty rangesets of that
p2m. At the moment, it clips both down by the hostp2m.

While this will result in correct behavior, it's not entirely efficient,
since invalidated entries outside that range will, on fault, simply be
modified back to "empty" before faulting normally again.

Separate out the calculation of the two ranges.  Keep using the
hostp2m's max_mapped_pfn to clip the logdirty ranges, but use the
current p2m's max_mapped_pfn to further clip the invalidation range
for alternate p2ms.

Signed-off-by: George Dunlap <george.dunlap@citrix.com>
---
 xen/arch/x86/mm/p2m.c | 61 +++++++++++++++++++++++++++++--------------
 1 file changed, 42 insertions(+), 19 deletions(-)

diff --git a/xen/arch/x86/mm/p2m.c b/xen/arch/x86/mm/p2m.c
index 6d764d1e22..b97e138452 100644
--- a/xen/arch/x86/mm/p2m.c
+++ b/xen/arch/x86/mm/p2m.c
@@ -1043,41 +1043,64 @@ static void change_type_range(struct p2m_domain *=
p2m,
                               p2m_type_t ot, p2m_type_t nt)
 {
     unsigned long rangeset_start, rangeset_end;
+    unsigned long invalidate_start, invalidate_end;
     struct domain *d =3D p2m->domain;
     unsigned long host_max_pfn =3D p2m_get_hostp2m(d)->max_mapped_pfn;
+    unsigned long max_pfn =3D p2m->max_mapped_pfn;
     int rc =3D 0;
    =20
-    rangeset_start =3D start;
-    rangeset_end   =3D end - 1;
+    /*=20
+     * If we have an altp2m, the logdirty rangeset range needs to
+     * match that of the hostp2m, but for efficiency, we want to clip
+     * down the the invalidation range according to the mapped values
+     * in the altp2m.  Keep track of and clip the ranges separately.
+     */
+    rangeset_start =3D invalidate_start =3D start;
+    rangeset_end   =3D invalidate_end   =3D end - 1;
    =20
-    /* Always clip the rangeset down to the host p2m */
+    /* Clip down to the host p2m */
     if ( unlikely(rangeset_end > host_max_pfn) )
-        rangeset_end =3D host_max_pfn;
+        rangeset_end =3D invalidate_end =3D host_max_pfn;
        =20
     /* If the requested range is out of scope, return doing nothing */
     if ( rangeset_start > rangeset_end )
         return;
            =20
+    if ( p2m_is_altp2m(p2m) )
+        invalidate_end =3D min(invalidate_end, max_pfn);
+       =20
     p2m->defer_nested_flush =3D 1;
=20
     /*=20
-     * If all valid gfns are in the invalidation range, just do a
-     * global type change.  Otherwise, invalidate only the range we
-     * need.
+     * If the p2m is empty, or the range is outside the currently
+     * mapped range, no need to do the invalidation; just update the
+     * rangeset.
      */
-    if ( !rangeset_start && rangeset_end >=3D p2m->max_mapped_pfn)
-        p2m->change_entry_type_global(p2m, ot, nt);
-    else
-        rc =3D p2m->change_entry_type_range(p2m, ot, nt,
-                                          rangeset_start, rangeset_end);=

-   =20
-    if ( rc )
-    {
-        printk(XENLOG_G_ERR "Error %d changing Dom%d GFNs [%lx,%lx] from=
 %d to %d\n",
-               rc, d->domain_id, rangeset_start, rangeset_end, ot, nt);
-        domain_crash(d);
+    if ( invalidate_start < invalidate_end )
+    {
+        /*=20
+         * If all valid gfns are in the invalidation range, just do a
+         * global type change.  Otherwise, invalidate only the range
+         * we need. =20
+         *
+         * NB that invalidate_end can't logically be >max_pfn at this
+         * point.  If this changes, the =3D=3D will need to be changed t=
o
+         * >=3D.
+         */
+        ASSERT(invalidate_end <=3D max_pfn);
+        if ( !invalidate_start && invalidate_end =3D=3D max_pfn)
+            p2m->change_entry_type_global(p2m, ot, nt);
+        else
+            rc =3D p2m->change_entry_type_range(p2m, ot, nt,
+                                              invalidate_start, invalida=
te_end);
+        if ( rc )
+        {
+            printk(XENLOG_G_ERR "Error %d changing Dom%d GFNs [%lx,%lx] =
from %d to %d\n",
+                   rc, d->domain_id, invalidate_start, invalidate_end, o=
t, nt);
+            domain_crash(d);
+        }
     }
-
+   =20
     switch ( nt )
     {
     case p2m_ram_rw:
--=20
2.19.1


--------------87940B2DED7D31D6237C500C
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
Content-Disposition: inline

X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KWGVuLWRldmVs
IG1haWxpbmcgbGlzdApYZW4tZGV2ZWxAbGlzdHMueGVucHJvamVjdC5vcmcKaHR0cHM6Ly9saXN0
cy54ZW5wcm9qZWN0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL3hlbi1kZXZlbA==

--------------87940B2DED7D31D6237C500C--
