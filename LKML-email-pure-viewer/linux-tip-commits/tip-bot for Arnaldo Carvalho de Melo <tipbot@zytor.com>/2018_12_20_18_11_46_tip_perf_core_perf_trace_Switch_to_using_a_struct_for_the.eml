Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:40:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AA27E58050C;
	Thu, 20 Dec 2018 10:12:01 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 10:12:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9agYshIc8txF6uMu2dmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPj4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kJNzA383vXhNJtgqxcrx2vqABwzJPPYIGNNvdzZb/dcNAASGZdRMtdSy5MD4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopHhp1sPtRuyHBKjBOTzyjRViH/22rc62Pk9HAHc2gwvBdYOv2?=
 =?us-ascii?q?nTrN7oKqodS/q1zLfSwjXHb/NW3ir255XWfRs8pv+DQ7Zwcc3MwkQoCwPFj02Q?=
 =?us-ascii?q?ppfiPzOJzekMsmia7/ZnVeK1kWIotwZxoj22y8oql4LHiIUVylXe+iV4xoY4Pd?=
 =?us-ascii?q?64R1BhYd6iDpRQszuWN4xsQsMtRWxjpSU0yqUetJKlYCQHzI4rywPRZvCZaYSE?=
 =?us-ascii?q?/xHuWPqLLTp5hn9pYK+zihKx/ES61+HxWMu53ExUoiZZjNXArG0B2hLS58WBV/?=
 =?us-ascii?q?Bz5F2u2SyV2ADW8uxEIV47la7cK5M53L4wmYQcsV7ZEi/1hkr2lqmWeVsg+uSy?=
 =?us-ascii?q?7OTneLrmqoedN49ylA7+LrwjltKjDek8KAQCQmaW9fqm2LH+/kD1XK9Gg/w0n6?=
 =?us-ascii?q?XBtZDVP8Ubpqq3Aw9P1YYj7g6yDzOn0NQegHkGI0tJeBGZgIjzPVHBPvT4Ae64?=
 =?us-ascii?q?g1Wiljdk2erGM6b/ApXCMHfDiq3tfbVj5E5Gzgo809Rf64hTCrEbL/L/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNF81oMdR22DGKCYML7JvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2IMdaGqkEfR+P0WZfX3sj88BEWgQvwo+UPbliFqYXT5Tena9Ra?=
 =?us-ascii?q?Q85j4gBYKiDIfDQJ2tgbOb0Ce6GJ1Wen5JClSWHXj0cIWEXu8GaDiOLc95jjwE?=
 =?us-ascii?q?Sb+hRpc72hG1tA/6zLlnIvDO+iICt5Luz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5JUR01NZjGw+x+CtD9QATBftiSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7b26?=
 =?us-ascii?q?Y7kVkpXNFDNW28ia557AjcGYjJn0Kdl6apcKQc2DXA9GOCzWqIoUFZXxR8UaTD?=
 =?us-ascii?q?XXADeETWqc716V/FT7+rEb4nKBdOydaeKqtWbd3klUhJS+39ONvAeW6xm32/BR?=
 =?us-ascii?q?CTxrySaornYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0Bhy7u1+hsShfyAS/MS3qgIuDs7pzVzBla929PWC9yPpwd6eKVcYN?=
 =?us-ascii?q?U94EpI1G7Dtgx9OICgIL5mhlIEbwt3uEbu3Q1tCopcicgqsG8qzA1qJK2C1FNO?=
 =?us-ascii?q?aTyZ0o7wO7HNMWby4Q2gZLTQ2lHd19aW5LwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzX1tMbSuvjDewd4oBeslxQymf9dQ?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1lyEKM9jZzRfTS35kYxPGUxA2HWCnmjFegq8z4hZpLZTUPEWWh0yjkA4hRa7Z2?=
 =?us-ascii?q?fYYKD2euPsK2ys9/h57rR35X6lqjC0ka18+ufBqYd0b90hFI1UQLvXynnjO1zj?=
 =?us-ascii?q?x1kz0zrquTxjfOw/nkdBccPm5LRW9ijUrjIISujtAaWlSoYBYtlBe/+Un6wK1b?=
 =?us-ascii?q?rrxlL2bPWUdIYzT2L2Z6X6uyrLWCec1P6JAvsSlNS+Sze1OaSr38oxsczSzjGX?=
 =?us-ascii?q?BTxDQ6dzGsp5X4kAZ2iGObLHZvsnXZfdt8ygvY5NzZXfRRxCYJRDFkiTnLAVix?=
 =?us-ascii?q?J9mo8s+Tl5vZsOC+VmShW4ZXcSnqy4OAqSS66XdrAR25g/C8hNnnHRIm3i/80t?=
 =?us-ascii?q?lgTT/IowrkYon3y6S6NvpqfkpyC1/98cZ6Gpx+nZE2hJEfwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiZ2MW2yE94NpQBK?=
 =?us-ascii?q?aa8rNEhjd1rUSirQ3Kf/d9hDgdxOAq6H4bheEJpQUswj+cArAUAUlXIyjsmw6U?=
 =?us-ascii?q?4NC5qaVdfHyvfqSo1EpigdChC6mPoh1bWHb8YJsjHDV/7sNiMFLXy33z65rpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5Lm2?=
 =?us-ascii?q?DQRfNj3xesMf4DXtjbtFk8aS3oCvGIhhGzoRUJvpS/KoDCwdtfD9OwmSFz08r2?=
 =?us-ascii?q?+RGaDDEg+H9Edms3XPHoipN36NIXkW085iSAOBJEBFgwAUQTY6noM/Fg+w38zs?=
 =?us-ascii?q?a0N55jEX5l7lpRpA0ONoNx/jUmjBoAekcCs7SJ+aLBBO9AFN+1/VMdCC7uJ0By?=
 =?us-ascii?q?xZ/pqhrBGUKmyGfQtIC3sFWleDB1DlMbmj/t3A8+meBuqjIPrCe7SOqepCV/iW?=
 =?us-ascii?q?wZKjyJdp/zGJNs+XJHltE+U72lZfXXB+A8nZmysASy0UlyLObs6XvhS8+jdwrs?=
 =?us-ascii?q?Cw7vvrQh/v5ZCUBrtWMNVv/Q22gKiZO+6RgiZ5NShX1pcWyXDUz7gf2UYYizty?=
 =?us-ascii?q?eDm1DbQAqSnNQbrKla9KFBEbcT18NctS46I43wlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBQkORUtxiqtTmHCUPsIjSD?=
 =?us-ascii?q?mCfvVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo7yQ9yxYhPB/G21H7nV9LOiEmzyW7+/XKpsNtftrAyJ0l/9V4XggyrtV?=
 =?us-ascii?q?6j1ES+JxmCfIstFupFSmwaGzzW9jURxTunNXhZrOtkJnPKTF7bFeVnveuhEA92?=
 =?us-ascii?q?OdD1INvdQ2MND3v7FszY3LlaTuOHJB/sjS8M80GcfZMoSEPWAnPB6vHyTbSEMH?=
 =?us-ascii?q?SjqwPEncilZbnfXU8Wea6tA8o53siYcIRZdYWUYzG/dcDV5qWJQCOJ5fTCI4lq?=
 =?us-ascii?q?Tdh8kNoTK3oAPQTcMcvo3BSv+IKfTpNDudy7JDYl9AyLj9IKwJO4H70lAkYV5/?=
 =?us-ascii?q?2MzWFE7AddRMpDB9dAgyoVUL/HU6BnI63U3jYwX1yH8OHOG5n1g9jQ46KeEs8j?=
 =?us-ascii?q?jry1Q6PFzHoG03ikZit8/ihGWNcSa0JqCsFY9REWLdrU44Np/8Cy18dxO7mUxj?=
 =?us-ascii?q?fDvJD5dci7woIXxqkAXbpbNdCOJbV+tPZxpGlqLfXOkhzVkJ8nbv/kRA/+aQUZ?=
 =?us-ascii?q?Y=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAADN2Rtch0O0hNFlHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGCaYECJ4N9iHiLGwGCIZJMhH0ggVEVAQEYCwgBhy4iNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYigmwCIAQFBgFGBgkCJAIfBwICA20Fgx0BggEFCqdRf?=
 =?us-ascii?q?DMehROEcAUTeIs0F4F/g3WFfII7glcCkFuQYgmHEYpsi3WFaCyOHIseAgQCBAU?=
 =?us-ascii?q?CFIFHAYIMTSMVgW8OCwEMgRKCUIhMhWAeATIBAQh7AQGNYAEB?=
X-IPAS-Result: =?us-ascii?q?A0AnAADN2Rtch0O0hNFlHQEBBQEHBQGBUgcBCwGCaYECJ4N?=
 =?us-ascii?q?9iHiLGwGCIZJMhH0ggVEVAQEYCwgBhy4iNQgNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYigmwCIAQFBgFGBgkCJAIfBwICA20Fgx0BggEFCqdRfDMehROEcAUTeIs?=
 =?us-ascii?q?0F4F/g3WFfII7glcCkFuQYgmHEYpsi3WFaCyOHIseAgQCBAUCFIFHAYIMTSMVg?=
 =?us-ascii?q?W8OCwEMgRKCUIhMhWAeATIBAQh7AQGNYAEB?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="57217021"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 10:12:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388684AbeLTSL5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 13:11:57 -0500
Received: from terminus.zytor.com ([198.137.202.136]:53199 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728956AbeLTSL4 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 13:11:56 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBKIBkmG3682055
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Thu, 20 Dec 2018 10:11:46 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBKIBkED3682052;
        Thu, 20 Dec 2018 10:11:46 -0800
Date: Thu, 20 Dec 2018 10:11:46 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Arnaldo Carvalho de Melo <tipbot@zytor.com>
Message-ID: <tip-vac4sn1ns1vj4y07lzj7y4b8@git.kernel.org>
Cc: wangnan0@huawei.com, tglx@linutronix.de, acme@redhat.com,
        mingo@kernel.org, linux-kernel@vger.kernel.org,
        adrian.hunter@intel.com, hpa@zytor.com, jolsa@kernel.org,
        namhyung@kernel.org
Reply-To: linux-kernel@vger.kernel.org, jolsa@kernel.org,
          namhyung@kernel.org, hpa@zytor.com, adrian.hunter@intel.com,
          acme@redhat.com, tglx@linutronix.de, wangnan0@huawei.com,
          mingo@kernel.org
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf trace: Switch to using a struct for the
 aumented_raw_syscalls syscalls map values
Git-Commit-ID: bbab50dda724309eccec92132d3f36cb262e8728
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00
        autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  bbab50dda724309eccec92132d3f36cb262e8728
Gitweb:     https://git.kernel.org/tip/bbab50dda724309eccec92132d3f36cb262e8728
Author:     Arnaldo Carvalho de Melo <acme@redhat.com>
AuthorDate: Wed, 12 Dec 2018 16:54:09 -0300
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Tue, 18 Dec 2018 12:23:58 -0300

perf trace: Switch to using a struct for the aumented_raw_syscalls syscalls map values

We'll start adding more perf-syscall stuff, so lets do this prep step so
that the next ones are just about adding more fields.

Cc: Adrian Hunter <adrian.hunter@intel.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-vac4sn1ns1vj4y07lzj7y4b8@git.kernel.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/builtin-trace.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index de81918c7ad4..096380e8c213 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -908,6 +908,10 @@ struct syscall {
 	struct syscall_arg_fmt *arg_fmt;
 };
 
+struct bpf_map_syscall_entry {
+	bool	enabled;
+};
+
 /*
  * We need to have this 'calculated' boolean because in some cases we really
  * don't know what is the duration of a syscall, for instance, when we start
@@ -2583,7 +2587,9 @@ out_enomem:
 static int trace__set_ev_qualifier_bpf_filter(struct trace *trace)
 {
 	int fd = bpf_map__fd(trace->syscalls.map);
-	bool value = !trace->not_ev_qualifier;
+	struct bpf_map_syscall_entry value = {
+		.enabled = !trace->not_ev_qualifier,
+	};
 	int err = 0;
 	size_t i;
 
@@ -2601,10 +2607,13 @@ static int trace__set_ev_qualifier_bpf_filter(struct trace *trace)
 static int __trace__init_syscalls_bpf_map(struct trace *trace, bool enabled)
 {
 	int fd = bpf_map__fd(trace->syscalls.map);
+	struct bpf_map_syscall_entry value = {
+		.enabled = enabled,
+	};
 	int err = 0, key;
 
 	for (key = 0; key < trace->sctbl->syscalls.nr_entries; ++key) {
-		err = bpf_map_update_elem(fd, &key, &enabled, BPF_ANY);
+		err = bpf_map_update_elem(fd, &key, &value, BPF_ANY);
 		if (err)
 			break;
 	}
