Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 15:26:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 98DBB580474;
	Wed, 21 Nov 2018 23:05:24 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Nov 2018 23:05:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArnGCEx8gf2udUv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1OgeIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHmiC?=
 =?us-ascii?q?kJNCQ5/n/KhMJ3g61Vrw6uqAFkw47MYoyYL+Z+c6DHcN8GX2dNQsRcWipcCY28?=
 =?us-ascii?q?dYsPCO8BMP5Er4n8v1sCtACxBQ6wBOjyxD9IgWX21rAm3uQ7FwHJxgggEM8JsH?=
 =?us-ascii?q?/Jstj6Lr0SUf6vw6nMzTXDaO5d1irj54PVdR4uv/WMXbVtesfW1UkvFhvFgU6X?=
 =?us-ascii?q?qYz5JD6U1+QMs3Sc7+p6T+6gl2knqwRorzWp28wihI7JhocPxVDF8yV02IU1Ks?=
 =?us-ascii?q?OiSE59f9GkFIFctyaAN4t5RM4pXmJmuD4ix7EYpZK2eDIGxIkpyhLBcfCLbouF?=
 =?us-ascii?q?7g75WOuQIzp0nG9pdba8ihqo7EStxO/xWtOq3FpWsCZJiMTAu34M2hHV98OJUO?=
 =?us-ascii?q?Fy/l271jaKzw3T6v9LIUQzlafDNZ4hzaA/loAJvUTAACD2gkP2g7GSdkk+/eio?=
 =?us-ascii?q?8evnbq3npp+aKYB0lhnzProylsG7G+g0LwYDU3aB9eih17Dv4Vf1TbRIg/Eul6?=
 =?us-ascii?q?nWqpHaJcAVpq6jBA9V154u6xK+DzegzdQZkmALLFFbdxKdiYjmJVXOLOn/Dfax?=
 =?us-ascii?q?hVSjji1ryuvYPr3uHJrNNGLPkLT/crZn7U5T1g4zwcpY55JOBbENOOjzVVPptN?=
 =?us-ascii?q?zEEh85NBS5w+LmCNV+yIwSQ22OArKCPaPWsF+I4P8vIuaWaI8Uvjb9N+Yq5/r0?=
 =?us-ascii?q?gXAlnl8deLGj3YELZ3CgAvRmP0KZbGLsgtgbEGcKohAxTOvwhF2CTD5cfXCyX6?=
 =?us-ascii?q?0n6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfocp2OW+0QZyKKPs9hjjsE?=
 =?us-ascii?q?WKCjS48myx6irgz6y71hLurS/S0Vrpbj1Nlz5+3OmhA+7z10D8KB026TS2F4hH?=
 =?us-ascii?q?8HRzgz3Kpnu0xy1k+D0bRkg/xfDdFc/ehJUgc9NZ7f1eB6Ecr9WgDac9eNSVam?=
 =?us-ascii?q?RMimAD4rQtIwxd8Of1hyG9G4gh/f2CqqBqcfl6aXC5ws7qLcw3/xKt5+y3nc0q?=
 =?us-ascii?q?ktlV0mQspVOm2gia5y7AzTB4/Pk0WEmKemb6Uc3CjR9GidyWqCpl1XUAl1Ua/d?=
 =?us-ascii?q?R3AQelPWrcjl5kPFV7KhFK4oMhVfxsKYKqtFcNvpjU5YS/flP9jeZ2Gxm2K0BR?=
 =?us-ascii?q?uTwrOMbYzqe3gS3SnHCUgElRwT8miCNQQkGiihpGfeBiR0FV3ze0Ps7fV+qHSj?=
 =?us-ascii?q?Q0Ap1Q6KcVNu26C1+hEPg/ycUO0c3rQftSclqjV0Gku93t3MB9qBoQphYLtTYd?=
 =?us-ascii?q?cn7Fhb0mLZshR3Poa8IKB6ml4ebwN3slvy1xV2D4VAltQqrHMqzQZoNaKUylRB?=
 =?us-ascii?q?dymc3ZDxPL3XJXL//BSua67Qx1Hf38ya+qYJ6PQktVrjuBulGVYl83Viy9NVyW?=
 =?us-ascii?q?eT5o3WDAoOVpL8Slw49xxkqLDVfCY855nY2mZxMaapqDDC3dEpBOw7yhu7e9df?=
 =?us-ascii?q?MaWEFBL9EsEABsiuLvAqlEatbh4eIO9S86s0Ndu8d/SawK6rIPpgnDW+gGVH/Y?=
 =?us-ascii?q?BxyF6D+zB9S+7IxZkFxf6Y0xCDVzf9ilehr8/2lZpFZTEUAmqw1yzkCJRNaa11?=
 =?us-ascii?q?eIYBEX2uLNGvxtVim57tXGZV9ESiB1wawsCpYwedb1vn0Q1Wy0sXu32nlTKkwD?=
 =?us-ascii?q?NulzEms7SQ3DbJw+TkbxcHPm9LRG9/jVbjO4S0jtYaXFS2YAgtjheq+UH6x61D?=
 =?us-ascii?q?rqRlM2bTWVtIfzTxL2x6Uqqwt6COYs5V5JMzrCVXVv+xYVSbSr77vhsb3DnvH2?=
 =?us-ascii?q?pYxDAnaT6qvo/1kAB9iGKYNHxztmbWedlsxRfD49zRXfxR0SAcRCl7ijnXAUKw?=
 =?us-ascii?q?P8Kz8tWXlJfDs+a+WHynVpBIdSnrzIWAtDa05GFwAB2/meyzlcPjEQQgzSD70N?=
 =?us-ascii?q?xqXz3SrBngeonry7i6MeV/c0hoHlD87NB2GoN/kos2n5wQ3XkahpOI/XsIi2vz?=
 =?us-ascii?q?MNNb2b7gY3oJXzIE39nV4A390k15Mn2J3575VmmawsZ5ZNm1eGIW1jg978BXEq?=
 =?us-ascii?q?iU6rNEkDBxolq5qwLRfPd8ki0cyfso9H4VneUJtBAxwSWaB7AYBVNYMjD0lxSU?=
 =?us-ascii?q?89C+q71aZGOucbizzkVyh96gA6+ZogFARnn5YIwtEjFq7sVwK1/M1Hzz6of5eN?=
 =?us-ascii?q?jfd94TtxuUkwvegOhRMp4+iv0KhS9/M2LnoXIl0/I7jQBp3ZyioIiHLGBt8Li4?=
 =?us-ascii?q?AxFCMD31etgT+irsjatFmsaW3oavHohuGzkRXZvoS+6oHywWtfj9KwmOFzg8oG?=
 =?us-ascii?q?+BGbXDBQ+f9Ftmr3XXHp+wLX6XI30Zzch4SBmZOUxSmwQUXDQ8np4kGQGm3s3h?=
 =?us-ascii?q?cEFl5j8P4l70sAdDyuVtNxPnSGfQuB+oaisoSJiYNBdW7BtN50LLPsyF9O5zAz?=
 =?us-ascii?q?tU/p68rAyON2ybYR5HDXoSV0yABlDjOKSu5Nba/+iZAOq+M+XBYbGUpeNCUPeI?=
 =?us-ascii?q?wIql0pF68DaUKsWPIn5iAuU720pEQHB5AtnZlC8JSyANjCLNaMibpBin9y1zr8?=
 =?us-ascii?q?C/9unrWQ316YuODbtSLctg+xSsjaifMO6QgT5zKSxE2ZMU2X/I1L8f0UYSiy5w?=
 =?us-ascii?q?djmtErcAtS/XQKLTgK9XCBEbZD1pNMtV9KIxxQ1NOc/ditPo2b90lP81C1FZVV?=
 =?us-ascii?q?P/nsGlf9AFI2a4NFnfHkaEKKyGJSHXw8Hwea6zU6BQg/5OtxKuuTeXCUvjPjWY?=
 =?us-ascii?q?mjntVhCvN/xMjS6BMBxfvoG9bghiCWz5QN36bR27Ncd9jScqzr0smnPKKWkcPC?=
 =?us-ascii?q?Bgc0NMq72c9z9Xju9jFGxB8HVlK/KJmyKY7+neN5YXvuFnAiVyl+JG/ns6z6FZ?=
 =?us-ascii?q?4z1DRPxwgCHStMJho0m6kumTzTpqSBpPpSxNhIKOvEViP73W95hAWXne+hIN4n?=
 =?us-ascii?q?6dCxALp9tjF93utLpcytnJlKLvNjhC98jY8tcbB8jRe4q7Ny8lMBz0CHvIDRNA?=
 =?us-ascii?q?RjmuMGDDnGRDn/yIsH6YtJ43rt7rgpVdcLJDUE0JEaYTBl5kFdpEIIpxQj4+ub?=
 =?us-ascii?q?+dkMMMo3G5qV2ZTc5fs7jdW/6SCOmpIzGcyfFBZh0Hxpv7IJ4VO4m93FZtLhFm?=
 =?us-ascii?q?k4DaM07RW81RuCpnbx9yrEgJuGd3SGI10kS9QgOw6WAeFLi/mRtywgdlaOQg7j?=
 =?us-ascii?q?HE7FI+J16Mryw11AE1mNP4kXWSfST3IaOYQ45bEWz3ulI3P5e9RBx6KUWyhUVM?=
 =?us-ascii?q?JibYQKgXhLxlMShpjwvHsLNMFORaQKkCZwUfgbmRbvAowElapQ2kyFVB6O+DDo?=
 =?us-ascii?q?FtxyUwdpv5s3NYnghkcJY7IraYDbBPx1xcgeqltzW23+Qxx0cSKg4o/WeVMHoU?=
 =?us-ascii?q?uVQCMaUONTu0+fYq4guHzWgQMFMQXuYn96o5vng2PP6Nmnrt?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAADnVPZbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDeIgYX4shAYIhgwCFdoVdgXOBaYR3IIFTEgEBGAsIAYh?=
 =?us-ascii?q?MIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJsAggYBAQBBgFGBgkCJAImA?=
 =?us-ascii?q?gIDHg4BDgExBYMcAYFpAQEBFQUKqXN8Mw0RhA8BgQOCKQQKGQ2CGRN4in4XgX+?=
 =?us-ascii?q?GeYUsglcCkBCPRC4JhnyHCINDizMKAU+EeyyNF4EKiTwCBAIEBQIUWmyCDU0jF?=
 =?us-ascii?q?YFvDgsBDIESCYIeFxKITIVfHgEyAQEIewEBjRwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAADnVPZbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDeIgYX4shAYIhgwCFdoVdgXOBaYR3IIFTEgEBGAsIAYhMIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2IoJsAggYBAQBBgFGBgkCJAImAgIDHg4BDgExBYM?=
 =?us-ascii?q?cAYFpAQEBFQUKqXN8Mw0RhA8BgQOCKQQKGQ2CGRN4in4XgX+GeYUsglcCkBCPR?=
 =?us-ascii?q?C4JhnyHCINDizMKAU+EeyyNF4EKiTwCBAIEBQIUWmyCDU0jFYFvDgsBDIESCYI?=
 =?us-ascii?q?eFxKITIVfHgEyAQEIewEBjRwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,264,1539673200"; 
   d="scan'208";a="53923056"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Nov 2018 23:05:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404894AbeKVRnK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 12:43:10 -0500
Received: from terminus.zytor.com ([198.137.202.136]:53523 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730054AbeKVRnK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 12:43:10 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wAM74t2G3690893
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Wed, 21 Nov 2018 23:04:55 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wAM74s0k3690890;
        Wed, 21 Nov 2018 23:04:54 -0800
Date: Wed, 21 Nov 2018 23:04:54 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Arnaldo Carvalho de Melo <tipbot@zytor.com>
Message-ID: <tip-9138svli6ddcphrr3ymy9oy3@git.kernel.org>
Cc: wangnan0@huawei.com, tglx@linutronix.de, mingo@kernel.org,
        acme@redhat.com, adrian.hunter@intel.com, jolsa@kernel.org,
        namhyung@kernel.org, linux-kernel@vger.kernel.org,
        dsahern@gmail.com, hpa@zytor.com
Reply-To: adrian.hunter@intel.com, acme@redhat.com, mingo@kernel.org,
          tglx@linutronix.de, wangnan0@huawei.com, dsahern@gmail.com,
          linux-kernel@vger.kernel.org, hpa@zytor.com, jolsa@kernel.org,
          namhyung@kernel.org
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf evlist: Rename perf_evlist__set_filter* to
 perf_evlist__set_tp_filter*
Git-Commit-ID: 7ad92a3371e1536a2dddf68337015569c4917170
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=2.2 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_96_Q,FREEMAIL_FORGED_REPLYTO autolearn=no
        autolearn_force=no version=3.4.2
X-Spam-Level: **
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  7ad92a3371e1536a2dddf68337015569c4917170
Gitweb:     https://git.kernel.org/tip/7ad92a3371e1536a2dddf68337015569c4917170
Author:     Arnaldo Carvalho de Melo <acme@redhat.com>
AuthorDate: Tue, 6 Nov 2018 17:02:33 -0300
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Wed, 21 Nov 2018 12:00:31 -0300

perf evlist: Rename perf_evlist__set_filter* to perf_evlist__set_tp_filter*

To better reflect that this is a tracepoint filter, as opposed, for
instance to map based BPF filters.

Cc: Adrian Hunter <adrian.hunter@intel.com>
Cc: David Ahern <dsahern@gmail.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-9138svli6ddcphrr3ymy9oy3@git.kernel.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/builtin-trace.c |  4 ++--
 tools/perf/util/evlist.c   | 10 +++++-----
 tools/perf/util/evlist.h   |  6 +++---
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 835619476370..d86ba17fcf44 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -2586,7 +2586,7 @@ static int trace__set_filter_loop_pids(struct trace *trace)
 		thread = parent;
 	}
 
-	return perf_evlist__set_filter_pids(trace->evlist, nr, pids);
+	return perf_evlist__set_tp_filter_pids(trace->evlist, nr, pids);
 }
 
 static int trace__run(struct trace *trace, int argc, const char **argv)
@@ -2702,7 +2702,7 @@ static int trace__run(struct trace *trace, int argc, const char **argv)
 	 * we fork the workload in perf_evlist__prepare_workload.
 	 */
 	if (trace->filter_pids.nr > 0)
-		err = perf_evlist__set_filter_pids(evlist, trace->filter_pids.nr, trace->filter_pids.entries);
+		err = perf_evlist__set_tp_filter_pids(evlist, trace->filter_pids.nr, trace->filter_pids.entries);
 	else if (thread_map__pid(evlist->threads, 0) == -1)
 		err = trace__set_filter_loop_pids(trace);
 
diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 668d2a9ef0f4..36526d229315 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -1176,7 +1176,7 @@ int perf_evlist__apply_filters(struct perf_evlist *evlist, struct perf_evsel **e
 	return err;
 }
 
-int perf_evlist__set_filter(struct perf_evlist *evlist, const char *filter)
+int perf_evlist__set_tp_filter(struct perf_evlist *evlist, const char *filter)
 {
 	struct perf_evsel *evsel;
 	int err = 0;
@@ -1193,7 +1193,7 @@ int perf_evlist__set_filter(struct perf_evlist *evlist, const char *filter)
 	return err;
 }
 
-int perf_evlist__set_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t *pids)
+int perf_evlist__set_tp_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t *pids)
 {
 	char *filter;
 	int ret = -1;
@@ -1214,15 +1214,15 @@ int perf_evlist__set_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t
 		}
 	}
 
-	ret = perf_evlist__set_filter(evlist, filter);
+	ret = perf_evlist__set_tp_filter(evlist, filter);
 out_free:
 	free(filter);
 	return ret;
 }
 
-int perf_evlist__set_filter_pid(struct perf_evlist *evlist, pid_t pid)
+int perf_evlist__set_tp_filter_pid(struct perf_evlist *evlist, pid_t pid)
 {
-	return perf_evlist__set_filter_pids(evlist, 1, &pid);
+	return perf_evlist__set_tp_filter_pids(evlist, 1, &pid);
 }
 
 bool perf_evlist__valid_sample_type(struct perf_evlist *evlist)
diff --git a/tools/perf/util/evlist.h b/tools/perf/util/evlist.h
index 9919eed6d15b..d108d167eb36 100644
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@ -98,9 +98,9 @@ void __perf_evlist__reset_sample_bit(struct perf_evlist *evlist,
 #define perf_evlist__reset_sample_bit(evlist, bit) \
 	__perf_evlist__reset_sample_bit(evlist, PERF_SAMPLE_##bit)
 
-int perf_evlist__set_filter(struct perf_evlist *evlist, const char *filter);
-int perf_evlist__set_filter_pid(struct perf_evlist *evlist, pid_t pid);
-int perf_evlist__set_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t *pids);
+int perf_evlist__set_tp_filter(struct perf_evlist *evlist, const char *filter);
+int perf_evlist__set_tp_filter_pid(struct perf_evlist *evlist, pid_t pid);
+int perf_evlist__set_tp_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t *pids);
 
 struct perf_evsel *
 perf_evlist__find_tracepoint_by_id(struct perf_evlist *evlist, int id);
