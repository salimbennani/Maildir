Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 15:26:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 945DF580332;
	Wed, 21 Nov 2018 23:09:52 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Nov 2018 23:09:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AlYDfKxZTPSLdZesbpikEzZT/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcS7YB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM3/mHZhM9qjKxFvRyvoBNwzYHIb46IL/p+ZqHQcMgGRWdCRMtdSzZMDp++?=
 =?us-ascii?q?YoYJEuEPPfxYr474p1YWsRu+BBGsCPr0xT9Pmn/9wKM60+M7EQrbwAEgBdQOv2?=
 =?us-ascii?q?7QrNroM6cZTP64w7PSzTXddfxW3Tf96I/VeR88v/6HQLV+ftTVyUkoCgjIiUmQ?=
 =?us-ascii?q?qY39PzyO0eQNr3OW7utgVOKzjG4nsRt9rSSoxscpk4TEgJ8exF7D9SV82ok1JN?=
 =?us-ascii?q?u4RVZ4YdG6CptQsT+VN49sTsMlWWFotyA3waAFt56jZCUG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDtknn5oebCyiw6v/UWkyeDwTNS43VhIoyZfjNXAqm4B2wbO5sWJS/?=
 =?us-ascii?q?Zw+Fqq1yyV2ADJ8O5EJFg5larFJJ4lxb49joQTsUvdES/sgkn2j7GZdl8i+ue2?=
 =?us-ascii?q?7+TreLLmpoWTN4NsiwH+NLohmtCnDOgmLgQDW3KX9fmy2bH950H1XbZHguEsnq?=
 =?us-ascii?q?TYsp3WPcEbqbS4Aw9R3IYj8RG/DzK+3dQcnHkHKk9FeR2eg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i1lzdqyfbGMaP7ApjWMHjDn6nufaxn505f1gUz19Zf6IxQCr0bJ/LzQEDxuM?=
 =?us-ascii?q?TCDhAlKwy03/rnCNJl24MaWGKPAbGWPLndsF+V/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSvgoxVu3qiEGYXj5UfXqyX7?=
 =?us-ascii?q?886Ss9CIKpForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2tg/6zKRoIvDX+i0fs5Lj0t916vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83OoTHz+x6DNDyWRjNfs2TR1ak?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5jFkpWM1POXeihq5+7QfTAYHJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnWC8BR?=
 =?us-ascii?q?KLxrOJaIrnYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0BuyqC6+gALivCGS/McxLQEuDw/pDVyB1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYjcgqrXYqzA1uKaKY0FJN?=
 =?us-ascii?q?bS+Y0Yr3Or3NLmny/Rava6HN11Ha0daW/LoP6fsip1XiugGpClQt83F939ZJ1H?=
 =?us-ascii?q?uc443ADBAOXpLpTkY36x96qqnAbSk5+YzV2mNjMKmuvjDZxtImGfEqyhCjf9dY?=
 =?us-ascii?q?LqOJDwvyE8wcB8izJ+0mgVmpbhQYPO9M8K44Jd+pd/yD2KSzJuZvgCqmjXhb4I?=
 =?us-ascii?q?B6yk+N9zd8RvTU0JofwvCY3hGIVzHzjFq6tsD3mIZEZSwdH2alyCjkApJRabN2?=
 =?us-ascii?q?fYoRFWiuJMi3zM1kh5HxQ35Y6EKjB1Qe1c+zeBqdc0by3RdN2kQQu3CnnzW3zy?=
 =?us-ascii?q?Z1kz0wsqWQxijOzPn8exodPW5LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe85O6JIyvSRXSui8ek2aSrjmrhse0iPjGX?=
 =?us-ascii?q?ZexT8hezGrvJX5gwJ1iGaHIHlvq3rZfNl6xQ3D69zEWf5Rwj0GSTF6iTbNHFi8?=
 =?us-ascii?q?PNqp/dKOm5fYqO++VGGhVpxVcSb1y4ONry+75WxsAR2ikPG/gNznEQ4m0SDl09?=
 =?us-ascii?q?lmTznHrBH5YoPzzaS1LfpnflV0BF/788d7GptxkowqiJES2HgagI6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwiE94NpLCK?=
 =?us-ascii?q?uO7LxEgDF6oly3rQ/KZfh9nzEdyeYh6XIAguEJvhYtwTuZArwIAUZYOinsnQyS?=
 =?us-ascii?q?79+itKVXeHqvcb+o2Up7nNChD6uNrhtSWXnnYZciATF/7t9kP13Syn3z5ZrpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5L65?=
 =?us-ascii?q?AhldNjHvZsIc4DftjbtFnsaN3oCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQW1s9tRB6ZJExCmgwUWCg6k4U9FgCrwszh?=
 =?us-ascii?q?bUh46ioQ5l7+thtD1OZoOwPjXWfYoQeici00R4SHLBpK8gFC4F/YMc6E4eJ2AS?=
 =?us-ascii?q?5Y5YetrBCXJmyYegRIDnwJWkqeCFD4JbSu4djA8+6FBuuxNffOYLOOqfBAWPeM?=
 =?us-ascii?q?356gzoxm/zOUPMWVInZiF+E72lZEXX1hG8XZnCgPSzUKly3Xac6Xvgy8+ipxrs?=
 =?us-ascii?q?Cw6/nrXAPv5Y2SC7pdK9lv+ha2gbudOO6Unip2NTFY1pYUz3/S1LcfxEISiz1p?=
 =?us-ascii?q?dzS1EbQPqy/NTKHTmq9WFRIbaDlzNMxH760ixAlNJNXbh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZuAetuTmACU/sIDSC?=
 =?us-ascii?q?myPtVxCuKuxMiCCbPBpDuICyaBptCG7jTM74ZR2/KtN4kTo2wbgsjHPQKWEcKS?=
 =?us-ascii?q?R8c19KrrCI8SNYg/B/F3Zd4XZ/MeaEmziW7+/DJ5YSsPtrBDl0lu1A7HQ7zbtV?=
 =?us-ascii?q?8D9LRPhvlCTOqd5upkmskvOTxTp/TBpOtjFLiZqLvEp4P6XZ85hAWXDc8xMM7W?=
 =?us-ascii?q?WfERIKp9R+B93ruqBQzMXPla3pJDdD9dLU4dUTB8zOJM2bN3ohNEmhJDmBCAoD?=
 =?us-ascii?q?UC7uKWDHwkdalfST6ma9sJc3sN7vlYAIR7sdU0Y6RckXEkB0INtXJJZxQyNhkr?=
 =?us-ascii?q?OBisMMzWSxoQOXR8hAuJ3DEPWIDrGnKjGdlrBsZBYSx778a4MJOcmz1kd4Z1RS?=
 =?us-ascii?q?h4POElDeWdlXr2tqaQpw6ExW7FB9Q3c11kajbRmipDcMHPi7mBcw0iN+fO0y+T?=
 =?us-ascii?q?aq6FAyYhLKvCIYglgtns+jijeUNHb4J6K9dZtbByr9qw46NZa/CwpuZA2/h0pM?=
 =?us-ascii?q?OzLNRrYXhLxlMShogQHVuLNBE7hXSqgAKBoRw/6QT/Yly1JRrmOg30ADrffKDY?=
 =?us-ascii?q?tKkAosbIK2qHRBy0RvYZp9NKzLDKRDiFNXg+bGuCat1vEsxgA2JEsX9m6WPikS?=
 =?us-ascii?q?twhAP7U8JiOuuOxx7xCPgRNCfnQBU7whpfcuvk80PeWNywrh1LFOI1q7MPzZKa?=
 =?us-ascii?q?6F6EbaksvdXlIok0kPiwFL+qI++N0lek6YUAgExaGPHhAJMoLOJElwYs5VvCzP?=
 =?us-ascii?q?fD6Etvnl04NpOJ/7HeftG7zd/J0Ii16pSV56V78H6d4MS8Gh?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAADKVfZbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgVqBD4ECJ4N4iBhfiyEBgiGDAIV2hV2Bc4ZgIIFTEgEBGAsIAYh?=
 =?us-ascii?q?MIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJsAggYCAEGAUYGCQIkAiYCA?=
 =?us-ascii?q?gMeDgEOATEFglFLAYFpAQEBFQUKqXOBLw0RhA8BgQOCKQQKGQ2CFAUTeIp+F4F?=
 =?us-ascii?q?/gRGFaIFxgzuCVwKIfxqGAHdOjnYuCYZ8hwiDQ4szCgFPhHssjReBCok8AgQCB?=
 =?us-ascii?q?AUCFFpsgg1NIxU7gTQMAgsBCgKBEoIkAxeIXoVfHgEyAQEIewEBik+CTQEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAADKVfZbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgVq?=
 =?us-ascii?q?BD4ECJ4N4iBhfiyEBgiGDAIV2hV2Bc4ZgIIFTEgEBGAsIAYhMIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2IoJsAggYCAEGAUYGCQIkAiYCAgMeDgEOATEFglF?=
 =?us-ascii?q?LAYFpAQEBFQUKqXOBLw0RhA8BgQOCKQQKGQ2CFAUTeIp+F4F/gRGFaIFxgzuCV?=
 =?us-ascii?q?wKIfxqGAHdOjnYuCYZ8hwiDQ4szCgFPhHssjReBCok8AgQCBAUCFFpsgg1NIxU?=
 =?us-ascii?q?7gTQMAgsBCgKBEoIkAxeIXoVfHgEyAQEIewEBik+CTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,264,1539673200"; 
   d="scan'208";a="41850184"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Nov 2018 23:09:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405006AbeKVRrw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 12:47:52 -0500
Received: from terminus.zytor.com ([198.137.202.136]:47959 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2389674AbeKVRrw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 12:47:52 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wAM78rmJ3691449
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Wed, 21 Nov 2018 23:08:53 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wAM78r6w3691446;
        Wed, 21 Nov 2018 23:08:53 -0800
Date: Wed, 21 Nov 2018 23:08:53 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Arnaldo Carvalho de Melo <tipbot@zytor.com>
Message-ID: <tip-yjzhak8asumz9e9hts2dgplp@git.kernel.org>
Cc: yhs@fb.com, mingo@kernel.org, tglx@linutronix.de,
        namhyung@kernel.org, daniel@iogearbox.net, adrian.hunter@intel.com,
        linux-kernel@vger.kernel.org, acme@redhat.com, wangnan0@huawei.com,
        hpa@zytor.com, jolsa@kernel.org, ast@kernel.org,
        ecree@solarflare.com, kafai@fb.com, dsahern@gmail.com
Reply-To: linux-kernel@vger.kernel.org, jolsa@kernel.org,
          ecree@solarflare.com, ast@kernel.org, wangnan0@huawei.com,
          hpa@zytor.com, acme@redhat.com, dsahern@gmail.com, kafai@fb.com,
          mingo@kernel.org, tglx@linutronix.de, yhs@fb.com,
          namhyung@kernel.org, adrian.hunter@intel.com,
          daniel@iogearbox.net
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf bpf: Reduce the hardcoded .max_entries for
 pid_maps
Git-Commit-ID: 0f7c2de5dd3f5c0ed9603e4ccfb6a3ddc55f46df
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=2.2 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_96_Q,FREEMAIL_FORGED_REPLYTO autolearn=no
        autolearn_force=no version=3.4.2
X-Spam-Level: **
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  0f7c2de5dd3f5c0ed9603e4ccfb6a3ddc55f46df
Gitweb:     https://git.kernel.org/tip/0f7c2de5dd3f5c0ed9603e4ccfb6a3ddc55f46df
Author:     Arnaldo Carvalho de Melo <acme@redhat.com>
AuthorDate: Wed, 7 Nov 2018 14:49:27 -0300
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Wed, 21 Nov 2018 12:00:32 -0300

perf bpf: Reduce the hardcoded .max_entries for pid_maps

While working on augmented syscalls I got into this error:

  # trace -vv --filter-pids 2469,1663 -e tools/perf/examples/bpf/augmented_raw_syscalls.c sleep 1
  <SNIP>
  libbpf: map 0 is "__augmented_syscalls__"
  libbpf: map 1 is "__bpf_stdout__"
  libbpf: map 2 is "pids_filtered"
  libbpf: map 3 is "syscalls"
  libbpf: collecting relocating info for: '.text'
  libbpf: relo for 13 value 84 name 133
  libbpf: relocation: insn_idx=3
  libbpf: relocation: find map 3 (pids_filtered) for insn 3
  libbpf: collecting relocating info for: 'raw_syscalls:sys_enter'
  libbpf: relo for 8 value 0 name 0
  libbpf: relocation: insn_idx=1
  libbpf: relo for 8 value 0 name 0
  libbpf: relocation: insn_idx=3
  libbpf: relo for 9 value 28 name 178
  libbpf: relocation: insn_idx=36
  libbpf: relocation: find map 1 (__augmented_syscalls__) for insn 36
  libbpf: collecting relocating info for: 'raw_syscalls:sys_exit'
  libbpf: relo for 8 value 0 name 0
  libbpf: relocation: insn_idx=0
  libbpf: relo for 8 value 0 name 0
  libbpf: relocation: insn_idx=2
  bpf: config program 'raw_syscalls:sys_enter'
  bpf: config program 'raw_syscalls:sys_exit'
  libbpf: create map __bpf_stdout__: fd=3
  libbpf: create map __augmented_syscalls__: fd=4
  libbpf: create map syscalls: fd=5
  libbpf: create map pids_filtered: fd=6
  libbpf: added 13 insn from .text to prog raw_syscalls:sys_enter
  libbpf: added 13 insn from .text to prog raw_syscalls:sys_exit
  libbpf: load bpf program failed: Operation not permitted
  libbpf: failed to load program 'raw_syscalls:sys_exit'
  libbpf: failed to load object 'tools/perf/examples/bpf/augmented_raw_syscalls.c'
  bpf: load objects failed: err=-4009: (Incorrect kernel version)
  event syntax error: 'tools/perf/examples/bpf/augmented_raw_syscalls.c'
                       \___ Failed to load program for unknown reason

  (add -v to see detail)
  Run 'perf list' for a list of valid events

   Usage: perf trace [<options>] [<command>]
      or: perf trace [<options>] -- <command> [<options>]
      or: perf trace record [<options>] [<command>]
      or: perf trace record [<options>] -- <command> [<options>]

      -e, --event <event>   event/syscall selector. use 'perf list' to list available events

If I then try to use strace (perf trace'ing 'perf trace' needs some more work
before its possible) to get a bit more info I get:

  # strace -e bpf trace --filter-pids 2469,1663 -e tools/perf/examples/bpf/augmented_raw_syscalls.c sleep 1
  bpf(BPF_MAP_CREATE, {map_type=BPF_MAP_TYPE_PERF_EVENT_ARRAY, key_size=4, value_size=4, max_entries=4, map_flags=0, inner_map_fd=0, map_name="__bpf_stdout__", map_ifindex=0}, 72) = 3
  bpf(BPF_MAP_CREATE, {map_type=BPF_MAP_TYPE_PERF_EVENT_ARRAY, key_size=4, value_size=4, max_entries=4, map_flags=0, inner_map_fd=0, map_name="__augmented_sys", map_ifindex=0}, 72) = 4
  bpf(BPF_MAP_CREATE, {map_type=BPF_MAP_TYPE_ARRAY, key_size=4, value_size=1, max_entries=500, map_flags=0, inner_map_fd=0, map_name="syscalls", map_ifindex=0}, 72) = 5
  bpf(BPF_MAP_CREATE, {map_type=BPF_MAP_TYPE_HASH, key_size=4, value_size=1, max_entries=512, map_flags=0, inner_map_fd=0, map_name="pids_filtered", map_ifindex=0}, 72) = 6
  bpf(BPF_PROG_LOAD, {prog_type=BPF_PROG_TYPE_TRACEPOINT, insn_cnt=57, insns=0x1223f50, license="GPL", log_level=0, log_size=0, log_buf=NULL, kern_version=KERNEL_VERSION(4, 18, 10), prog_flags=0, prog_name="sys_enter", prog_ifindex=0, expected_attach_type=BPF_CGROUP_INET_INGRESS}, 72) = 7
  bpf(BPF_PROG_LOAD, {prog_type=BPF_PROG_TYPE_TRACEPOINT, insn_cnt=18, insns=0x1224120, license="GPL", log_level=0, log_size=0, log_buf=NULL, kern_version=KERNEL_VERSION(4, 18, 10), prog_flags=0, prog_name="sys_exit", prog_ifindex=0, expected_attach_type=BPF_CGROUP_INET_INGRESS}, 72) = -1 EPERM (Operation not permitted)
  bpf(BPF_PROG_LOAD, {prog_type=BPF_PROG_TYPE_TRACEPOINT, insn_cnt=18, insns=0x1224120, license="GPL", log_level=1, log_size=262144, log_buf="", kern_version=KERNEL_VERSION(4, 18, 10), prog_flags=0, prog_name="sys_exit", prog_ifindex=0, expected_attach_type=BPF_CGROUP_INET_INGRESS}, 72) = -1 EPERM (Operation not permitted)
  bpf(BPF_PROG_LOAD, {prog_type=BPF_PROG_TYPE_KPROBE, insn_cnt=18, insns=0x1224120, license="GPL", log_level=0, log_size=0, log_buf=NULL, kern_version=KERNEL_VERSION(4, 18, 10), prog_flags=0, prog_name="sys_exit", prog_ifindex=0, expected_attach_type=BPF_CGROUP_INET_INGRESS}, 72) = -1 EPERM (Operation not permitted)
  event syntax error: 'tools/perf/examples/bpf/augmented_raw_syscalls.c'
                       \___ Failed to load program for unknown reason
  <SNIP similar output as without 'strace'>
  #

I managed to create the maps, etc, but then installing the "sys_exit" hook into
the "raw_syscalls:sys_exit" tracepoint somehow gets -EPERMed...

I then go and try reducing the size of this new table:

  +++ b/tools/perf/examples/bpf/augmented_raw_syscalls.c
  @@ -47,6 +47,17 @@ struct augmented_filename {
   #define SYS_OPEN 2
   #define SYS_OPENAT 257

  +struct syscall {
  +       bool    filtered;
  +};
  +
  +struct bpf_map SEC("maps") syscalls = {
  +       .type        = BPF_MAP_TYPE_ARRAY,
  +       .key_size    = sizeof(int),
  +       .value_size  = sizeof(struct syscall),
  +       .max_entries = 500,
  +};

And after reducing that .max_entries a tad, it works. So yeah, the "unknown
reason" should be related to the number of bytes all this is taking, reduce the
default for pid_map()s so that we can have a "syscalls" map with enough slots
for all syscalls in most arches. And take notes about this error message,
improve it :-)

Cc: Adrian Hunter <adrian.hunter@intel.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: David Ahern <dsahern@gmail.com>
Cc: Edward Cree <ecree@solarflare.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Martin KaFai Lau <kafai@fb.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Wang Nan <wangnan0@huawei.com>
Cc: Yonghong Song <yhs@fb.com>
Link: https://lkml.kernel.org/n/tip-yjzhak8asumz9e9hts2dgplp@git.kernel.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/include/bpf/bpf.h | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/tools/perf/include/bpf/bpf.h b/tools/perf/include/bpf/bpf.h
index 04ecd425a237..bd5d7b4d7760 100644
--- a/tools/perf/include/bpf/bpf.h
+++ b/tools/perf/include/bpf/bpf.h
@@ -18,12 +18,20 @@ struct bpf_map {
         unsigned int numa_node;
 };
 
+/*
+ * FIXME: this should receive .max_entries as a parameter, as careful
+ *	  tuning of these limits is needed to avoid hitting limits that
+ *	  prevents other BPF constructs, such as tracepoint handlers,
+ *	  to get installed, with cryptic messages from libbpf, etc.
+ *	  For the current need, 'perf trace --filter-pids', 64 should
+ *	  be good enough, but this surely needs to be revisited.
+ */
 #define pid_map(name, value_type)		\
 struct bpf_map SEC("maps") name = {		\
 	.type	     = BPF_MAP_TYPE_HASH,	\
 	.key_size    = sizeof(pid_t),		\
 	.value_size  = sizeof(value_type),	\
-	.max_entries = 512,			\
+	.max_entries = 64,			\
 }
 
 static int (*bpf_map_update_elem)(struct bpf_map *map, void *key, void *value, u64 flags) = (void *)BPF_FUNC_map_update_elem;
