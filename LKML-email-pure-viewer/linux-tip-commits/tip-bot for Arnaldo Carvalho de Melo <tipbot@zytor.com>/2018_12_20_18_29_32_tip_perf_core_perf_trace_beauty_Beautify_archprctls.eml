Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:40:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EACF058079D;
	Thu, 20 Dec 2018 10:30:02 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 20 Dec 2018 10:30:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ApjfXiRKi70Z6D7aBFtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPr/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kJNzA383vXhNJtgqxcrx2vqABwzJPPYIGNNvdzZb/dcNAASGZdRMtdSy5MD4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopHhp1sPtRuyHBKjBOTzyjRViH/22rc62Pk9HAHc2gwvBdYOv2?=
 =?us-ascii?q?nTrN7oKqodS/q1zLfSwjXHb/NW3ir255XWfRs8pv+DQ7Zwcc3MwkQoCwPFj02Q?=
 =?us-ascii?q?ppfiPzOJzekMsmia7/ZnVeK1kWIotwZxoj22y8oql4LHiIUVylXe+iV4xoY4Pd?=
 =?us-ascii?q?64R1BhYd6iDpRQszuWN4xsQsMtRWxjpSU0yqUetJKlYCQHzI4rywPRZvCZaYSE?=
 =?us-ascii?q?/xHuWPqLLTp5hn9pYK+zihKx/ES61+HxWMu53ExUoiZZjNXArG0B2hLS58WBV/?=
 =?us-ascii?q?Bz5F2u2SyV2ADW8uxEIV47la7cK5M53L4wmYQcsV7ZEi/1hkr2lqmWeVsg+uSy?=
 =?us-ascii?q?7OTneLrmqoedN49ylA7+LrwjltKjDek8KAQCQmaW9fqm2LH+/kD1XK9Gg/w0n6?=
 =?us-ascii?q?XBtZDVP8Ubpqq3Aw9P1YYj7g6yDzOn0NQegHkGI0tJeBGZgIjzPVHBPvT4Ae64?=
 =?us-ascii?q?g1Wiljdk2erGM6b/ApXCMHfDiq3tfbVj5E5Gzgo809Rf64hTCrEbL/L/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNF81oMdR22DGKCYML7JvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2IMdaGqkEfR+P0WZfX3sj88BEWgQvwo+UPbliFqYXT5Tena9Ra?=
 =?us-ascii?q?Q85j4gBYKiDIfDQJ2tgbOb0Ce6GJ1Wen5JClSWHXj0cIWEXu8GaDiOLc95jjwE?=
 =?us-ascii?q?Sb+hRpc72hG1tA/6zLlnIvDO+iICt5Luz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5JUR01NZjGw+x+CtD9QATBftiSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7b26?=
 =?us-ascii?q?Y7kVkpXNFDNW28ia557AjcGYjJn0Kdl6apcKQc2DXA9GOCzWqIoUFZXxR8UaTD?=
 =?us-ascii?q?XXADeETWqc716V/FT7+rEb4nKBdOydaeKqtWbd3klUhJS+39ONvAeW6xm32/BR?=
 =?us-ascii?q?CTxrySaornYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0Bhy7u1+hsShfyAS/MS3qgIuDs7pzVzBla929PWC9yPpwd6eKVcYN?=
 =?us-ascii?q?U94EpI1G7Dtgx9OICgIL5mhlIEbwt3uEbu3Q1tCopcicgqsG8qzA1qJK2C1FNO?=
 =?us-ascii?q?aTyZ0o7wO7HNMWby4Q2gZLTQ2lHd19aW5LwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzX1tMbSuvjDewd4oBeslxQymf9dQ?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1lyEKM9jZzRfTS35kYxPGUxA2HWCnmjFegq8z4hZpLZTUPEWWh0yjkA4hRa7Z2?=
 =?us-ascii?q?fYYKD2euPsK2ys9/h57rR35X6lqjC0ka18+ufBqYd0b90hFI1UQLvXynnjO1zj?=
 =?us-ascii?q?x1kz0zrquTxjfOw/nkdBccPm5LRW9ijUrjIISujtAaWlSoYBYtlBe/+Un6wK1b?=
 =?us-ascii?q?rrxlL2bPWUdIYzT2L2Z6X6uyrLWCec1P6JAvsSlNS+Sze1OaSr38oxsczSzjGX?=
 =?us-ascii?q?BTxDQ6dzGsp5X4kAZ2iGObLHZvsnXZfdt8ygvY5NzZXfRRxCYJRDFkiTnLAVix?=
 =?us-ascii?q?J9mo8s+Tl5vZsOC+VmShW4ZXcSnqy4OAqSS66XdrAR25g/C8hNnnHRIm3i/80t?=
 =?us-ascii?q?lgTT/IowrkYon3y6S6NvpqfkpyC1/98cZ6Gpx+nZE2hJEfwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiZ2MW2yE94NpQBK?=
 =?us-ascii?q?aa8rNEhjd1rUSirQ3Kf/d9hDgdxOAq6H4bheEJpQUswj+cArAUAUlXIyjsmw6U?=
 =?us-ascii?q?4NC5qaVdfHyvfqSo1EpigdChC6mPoh1bWHb8YJsjHDV/7sNiMFLXy33z65rpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5Lm2?=
 =?us-ascii?q?DQRfNj3xesMf4DXtjbtFk8aS3oCvGIhhGzoRUJvpS/KoDCwdtfD9OwmSFz08r2?=
 =?us-ascii?q?+RGaDDEg+H9Edms3XPHoipN36NIXkW085iSAOBJEBFgwAUQTY6noM/Fg+w38zs?=
 =?us-ascii?q?a0N55jEX5l7lpRpA0ONoNx/jUmjBoAekcCs7SJ+aLBBO9AFN+1/VMdCC7uJ0By?=
 =?us-ascii?q?xZ/pqhrBGUKmyGfQtIC3sFWleDB1DlMbmj/t3A8+meBuqjIPrCe7SOqepCV/iW?=
 =?us-ascii?q?wZKjyJdp/zGJNs+XJHltE+U72lZfXXB+A8nZmysASy0UlyLObs6XvhS8+jdwrs?=
 =?us-ascii?q?Cw7vvrQh/v5ZCUBrtWMNVv/Q22gKiZO+6RgiZ5NShX1pcWyXDUz7gf2UYYizty?=
 =?us-ascii?q?eDm1DbQAqSnNQbrKla9KFBEbcT18NctS46I43wlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBQkORUtxiqtTmHCUPsIjSD?=
 =?us-ascii?q?mCfvVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo7yQ9yxYhPB/G21H7nV9LOiEmzyW7+/XKpsNtftrAyJ0l/9V4XggyrtV?=
 =?us-ascii?q?6j1ES+JxmCfIstFupFSmwaGzzW9jURxTunNXhZrOtkJnPKTF7bFeVnveuhEA92?=
 =?us-ascii?q?OdD1INvdQ2MND3v7FszY3JnafzOSpE/PrX8NEaCsySL9iIdDIkMBzmHxbXARED?=
 =?us-ascii?q?QDrtMnvQwwRdiPi65GyJqYJ8oZ/p3NIKQbtSSVA0EdsAB0hlFcBEK5ByGnsgkL?=
 =?us-ascii?q?iGnIsL6GC4oR35WspXpNbEW+iUDPGpLyyWyfFbbh0Hx7r+dawTK4Tk1k0kYV5/?=
 =?us-ascii?q?2MzIHE7LVPhOrzdnYwtyp19CtDBiQWkj80bkbB6x+ngVFO7ykhNywgJye+Uk8n?=
 =?us-ascii?q?Hs/lErK0DipS0snU13ktLgxXiYezv8BL29UYFfF2z/sE1iHIn8RlNpbBX3l0t4?=
 =?us-ascii?q?fDnDXfp4lb1pcWxswCTVo4VGHf5bBaFJKDodwfbfM+kpyV5btg211FNA/63ODp?=
 =?us-ascii?q?40x1hiSoKls38Vg1ErV9UyP6GFfKc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A6AAAE3xtch0O0hNFlHgEGBwaBUQkLA?=
 =?us-ascii?q?QGCaIECJ4N9iHiLGwGCIZdJFAyBUxMBARgLCAGHLiI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwxCFgGBXSKCbAIgBAUGAUYGCQIkAiYCAgNtBYMdAYIBBQqnVXwzH?=
 =?us-ascii?q?oQPAYEDhHAFE3iLNBeBf4ERh1gEgz+CVwKJUoYKf5BiCYcRimyLdYVoLI4cix4?=
 =?us-ascii?q?CBAIEBQIUgUaCDk0jFYFvDgsBDIESixyFPiIeATIBAQh7AQGHd4Mcgk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0A6AAAE3xtch0O0hNFlHgEGBwaBUQkLAQGCaIECJ4N9iHi?=
 =?us-ascii?q?LGwGCIZdJFAyBUxMBARgLCAGHLiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwxCF?=
 =?us-ascii?q?gGBXSKCbAIgBAUGAUYGCQIkAiYCAgNtBYMdAYIBBQqnVXwzHoQPAYEDhHAFE3i?=
 =?us-ascii?q?LNBeBf4ERh1gEgz+CVwKJUoYKf5BiCYcRimyLdYVoLI4cix4CBAIEBQIUgUaCD?=
 =?us-ascii?q?k0jFYFvDgsBDIESixyFPiIeATIBAQh7AQGHd4Mcgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="58343390"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 10:30:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389173AbeLTS3s (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 13:29:48 -0500
Received: from terminus.zytor.com ([198.137.202.136]:54871 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1733143AbeLTS3q (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 13:29:46 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBKITWfD3686607
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Thu, 20 Dec 2018 10:29:33 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBKITWOW3686602;
        Thu, 20 Dec 2018 10:29:32 -0800
Date: Thu, 20 Dec 2018 10:29:32 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Arnaldo Carvalho de Melo <tipbot@zytor.com>
Message-ID: <tip-73a9prs8ktkrt97trtdmdjs8@git.kernel.org>
Cc: adrian.hunter@intel.com, acme@redhat.com,
        linux-kernel@vger.kernel.org, wangnan0@huawei.com,
        jolsa@kernel.org, tglx@linutronix.de, lclaudio@redhat.com,
        namhyung@kernel.org, mingo@kernel.org, hpa@zytor.com
Reply-To: namhyung@kernel.org, mingo@kernel.org, hpa@zytor.com,
          lclaudio@redhat.com, linux-kernel@vger.kernel.org,
          wangnan0@huawei.com, jolsa@kernel.org, tglx@linutronix.de,
          adrian.hunter@intel.com, acme@redhat.com
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf trace beauty: Beautify arch_prctl()'s
 arguments
Git-Commit-ID: fb7068e73d2c24ba381938004ed0f285341ef1ba
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00
        autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  fb7068e73d2c24ba381938004ed0f285341ef1ba
Gitweb:     https://git.kernel.org/tip/fb7068e73d2c24ba381938004ed0f285341ef1ba
Author:     Arnaldo Carvalho de Melo <acme@redhat.com>
AuthorDate: Tue, 18 Dec 2018 11:05:56 -0300
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Tue, 18 Dec 2018 16:15:19 -0300

perf trace beauty: Beautify arch_prctl()'s arguments

This actually so far, AFAIK is available only in x86, so the code was
put in place with x86 prefixes, in arches where it is not available it
will just not be called, so no further mechanisms are needed at this
time.

Later, when other arches wire this up, we'll just look at the uname
(live sessions) or perf_env data in the perf.data header to auto-wire
the right beautifier.

With this the output is the same as produced by 'strace' when used with
the following ~/.perfconfig:

  # cat ~/.perfconfig
  [llvm]
	dump-obj = true
  [trace]
	  add_events = /home/acme/git/perf/tools/perf/examples/bpf/augmented_raw_syscalls.o
	  show_zeros = yes
	  show_duration = no
	  no_inherit = yes
	  show_timestamp = no
	  show_arg_names = no
	  args_alignment = -40
	  show_prefix = yes
  #

And, on fedora 29, since the string tables are generated from the kernel
sources, we don't know about 0x3001, just like strace:

  --- /tmp/strace 2018-12-17 11:22:08.707586721 -0300
  +++ /tmp/trace  2018-12-18 11:11:32.037512729 -0300
  @@ -1,49 +1,49 @@
  -arch_prctl(0x3001 /* ARCH_??? */, 0x7ffc8a92dc80) = -1 EINVAL (Invalid argument)
  +arch_prctl(0x3001 /* ARCH_??? */, 0x7ffe4eb93ae0) = -1 EINVAL (Invalid argument)
  -arch_prctl(ARCH_SET_FS, 0x7faf6700f540) = 0
  +arch_prctl(ARCH_SET_FS, 0x7fb507364540) = 0

And that seems to be related to the CET/Shadow Stack feature, that
userland in Fedora 29 (glibc 2.28) are querying the kernel about, that
0x3001 seems to be ARCH_CET_STATUS, I'll check the situation and test
with a fedora 29 kernel to see if the other codes are used.

A diff that ignores the different pointers for different runs needs to
be put in place in the upcoming regression tests comparing 'perf trace's
output to strace's.

Cc: Adrian Hunter <adrian.hunter@intel.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Luis Cláudio Gonçalves <lclaudio@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Wang Nan <wangnan0@huawei.com>
Link: https://lkml.kernel.org/n/tip-73a9prs8ktkrt97trtdmdjs8@git.kernel.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/builtin-trace.c           |  5 ++++-
 tools/perf/trace/beauty/Build        |  1 +
 tools/perf/trace/beauty/arch_prctl.c | 33 +++++++++++++++++++++++++++++++++
 tools/perf/trace/beauty/beauty.h     |  3 +++
 4 files changed, 41 insertions(+), 1 deletion(-)

diff --git a/tools/perf/builtin-trace.c b/tools/perf/builtin-trace.c
index 6d9be952e3a7..2cc62ca75b2e 100644
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@ -664,6 +664,9 @@ static struct syscall_fmt {
 } syscall_fmts[] = {
 	{ .name	    = "access",
 	  .arg = { [1] = { .scnprintf = SCA_ACCMODE,  /* mode */ }, }, },
+	{ .name	    = "arch_prctl",
+	  .arg = { [0] = { .scnprintf = SCA_X86_ARCH_PRCTL_CODE, /* code */ },
+		   [1] = { .scnprintf = SCA_PTR, /* arg2 */ }, }, },
 	{ .name	    = "bind",
 	  .arg = { [1] = { .scnprintf = SCA_SOCKADDR, /* umyaddr */ }, }, },
 	{ .name	    = "bpf",
@@ -793,7 +796,7 @@ static struct syscall_fmt {
 		   [3] = { .scnprintf = SCA_INT,	/* pkey */ }, }, },
 	{ .name	    = "poll", .timeout = true, },
 	{ .name	    = "ppoll", .timeout = true, },
-	{ .name	    = "prctl", .alias = "arch_prctl",
+	{ .name	    = "prctl",
 	  .arg = { [0] = { .scnprintf = SCA_PRCTL_OPTION, /* option */ },
 		   [1] = { .scnprintf = SCA_PRCTL_ARG2, /* arg2 */ },
 		   [2] = { .scnprintf = SCA_PRCTL_ARG3, /* arg3 */ }, }, },
diff --git a/tools/perf/trace/beauty/Build b/tools/perf/trace/beauty/Build
index 10c85cd3eb4f..637365099b7d 100644
--- a/tools/perf/trace/beauty/Build
+++ b/tools/perf/trace/beauty/Build
@@ -7,6 +7,7 @@ endif
 libperf-y += kcmp.o
 libperf-y += mount_flags.o
 libperf-y += pkey_alloc.o
+libperf-y += arch_prctl.o
 libperf-y += prctl.o
 libperf-y += renameat.o
 libperf-y += sockaddr.o
diff --git a/tools/perf/trace/beauty/arch_prctl.c b/tools/perf/trace/beauty/arch_prctl.c
new file mode 100644
index 000000000000..fe022ca67e60
--- /dev/null
+++ b/tools/perf/trace/beauty/arch_prctl.c
@@ -0,0 +1,33 @@
+// SPDX-License-Identifier: LGPL-2.1
+/*
+ * trace/beauty/arch_prctl.c
+ *
+ *  Copyright (C) 2018, Red Hat Inc, Arnaldo Carvalho de Melo <acme@redhat.com>
+ */
+
+#include "trace/beauty/beauty.h"
+#include <linux/kernel.h>
+
+#include "trace/beauty/generated/x86_arch_prctl_code_array.c"
+
+static DEFINE_STRARRAY_OFFSET(x86_arch_prctl_codes_1, "ARCH_", x86_arch_prctl_codes_1_offset);
+static DEFINE_STRARRAY_OFFSET(x86_arch_prctl_codes_2, "ARCH_", x86_arch_prctl_codes_2_offset);
+
+static struct strarray *x86_arch_prctl_codes[] = {
+	&strarray__x86_arch_prctl_codes_1,
+	&strarray__x86_arch_prctl_codes_2,
+};
+
+static DEFINE_STRARRAYS(x86_arch_prctl_codes);
+
+static size_t x86_arch_prctl__scnprintf_code(int option, char *bf, size_t size, bool show_prefix)
+{
+	return strarrays__scnprintf(&strarrays__x86_arch_prctl_codes, bf, size, "%#x", show_prefix, option);
+}
+
+size_t syscall_arg__scnprintf_x86_arch_prctl_code(char *bf, size_t size, struct syscall_arg *arg)
+{
+	unsigned long code = arg->val;
+
+	return x86_arch_prctl__scnprintf_code(code, bf, size, arg->show_string_prefix);
+}
diff --git a/tools/perf/trace/beauty/beauty.h b/tools/perf/trace/beauty/beauty.h
index 58e734b27958..83c5b202e00e 100644
--- a/tools/perf/trace/beauty/beauty.h
+++ b/tools/perf/trace/beauty/beauty.h
@@ -155,6 +155,9 @@ size_t syscall_arg__scnprintf_pkey_alloc_access_rights(char *bf, size_t size, st
 size_t syscall_arg__scnprintf_open_flags(char *bf, size_t size, struct syscall_arg *arg);
 #define SCA_OPEN_FLAGS syscall_arg__scnprintf_open_flags
 
+size_t syscall_arg__scnprintf_x86_arch_prctl_code(char *bf, size_t size, struct syscall_arg *arg);
+#define SCA_X86_ARCH_PRCTL_CODE syscall_arg__scnprintf_x86_arch_prctl_code
+
 size_t syscall_arg__scnprintf_prctl_option(char *bf, size_t size, struct syscall_arg *arg);
 #define SCA_PRCTL_OPTION syscall_arg__scnprintf_prctl_option
 
