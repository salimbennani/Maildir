Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:32:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6A13658037D;
	Thu, 22 Nov 2018 13:49:57 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 13:49:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ak5tjLBYiezFvh/isD43Ss4r/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpM+8Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM3/mHZhM9qjK1ZrhKvuQFxzYnbb4+aKPVxY7jdfcsYSGdaQsZcVDZMDp+m?=
 =?us-ascii?q?YocTDecMO/tToYnnp1sJqBuzHRWsBOL3yjNRnXD22rE62PkvEQHBxgwrAs8Dv2?=
 =?us-ascii?q?7Po9XoKawcVue1zKbWwjXZcvhb3iv96InQch86pvGMQal9cMvRyEkzEAPFlE+c?=
 =?us-ascii?q?ppDiPzOQz+kAtXWQ4eRnVeKqkWEnqgdxryCsxsgykInJgJwaylTe+SV+2oY1Kt?=
 =?us-ascii?q?u1Q1N4b968CJZcqT2WOo9sTs8/TWxkpjw2xqAFtJKnZiQHyZYqywbCZ/GDcIWE?=
 =?us-ascii?q?+A/vWeiTLDtimn5pZKyziwyv/UWuy+DxUNS/3kxQoSpfiNbMs2gA1xzN5ciDTf?=
 =?us-ascii?q?tw5lmh2TmR2ADJ8O1EIl47lbDdK5E/xr48jJ0TsV7MHiPumUX2irGZdlk89+S2?=
 =?us-ascii?q?9+jqZq/qqoKSOoNqkA3yL6cjltClDek5MAUCR22b9v691L3n8035WrJKjvgun6?=
 =?us-ascii?q?ndsZDaI9kbp6GgDw9WzIkj8RC/ACmi0NgBmnkGIlRFdwydj4XyJVHOL+73De2l?=
 =?us-ascii?q?j1Svjjhr3fbGMaPlApnXKXjDirjhca5n60FA0Aoz0cxf55VMB7EFIfLzWVH+uM?=
 =?us-ascii?q?bXDx8kKAG0x+fnCNNg1oIRQ26PA6mZML/Mvl+M/O4gP+6MZIoNsjbnN/cl/+Lu?=
 =?us-ascii?q?jWM+mVIFfammx5oXaGyiEfRhOUmZYWfsjc0HEWcFpQc+SO3qiFufUT9cfXqyXq?=
 =?us-ascii?q?Q85i0lB4KiF4vMWoetgLmZ1iehApJWfnxGCkyLEXrwdYWEXOkDZDiRIs9mlDwE?=
 =?us-ascii?q?U7+hRpQl1RGvsg/61rVmIvDV+i0eqZLsytx16/fPmhE18Dx+F96d3H2VT2Fogm?=
 =?us-ascii?q?MIQCc707pkoUx9zVeD0rJ0g+ZCGtxR/P5JVgY6NZjBz+11EdzyWwTBfsuXR1ai?=
 =?us-ascii?q?WNmpHTYxTtcpyd8Uf0l9A8mijgzE3yeyAL8ajbqLCIYw8qLdxXfxIcl9xm3C1K?=
 =?us-ascii?q?kgiVkmX8ROOXenhq556wjcGYrJn1+FmKatcKQWxDTN+3ubzWqSoEFYVxZ9Xrjf?=
 =?us-ascii?q?UnABeETat9T56VnET7+1F7snNAxNycqBKqtPbt3kllFGRPblONTDbGO9gWawBR?=
 =?us-ascii?q?CUxrySaIrmYXkS3CLYCEIciQAc4W6GNRQiBiemu2/RESZhFUzxbE/28elxsnW7?=
 =?us-ascii?q?TlQqwAGMdEBh07u1+hgIhf2TUf8T37QEuDs/pDVwBlqyw9XWC9+YrQp7YKpcec?=
 =?us-ascii?q?894EtA1W/Bqwx9P5mgL6d+hl4ecwV7pV/u2w9wCoValcgqrXUqzAVpJKKc0VNB?=
 =?us-ascii?q?cS6Y3J/qNr3WLGny4A6ga6rM1l7C19aW/78F6O4kpFX7oAGpCk0i/m193NlRzX?=
 =?us-ascii?q?Sd6YvFDQoIXZ3qT0Y46gJ1p7fZYik6+YPZznlsMaiysj/f1NMlHuolyhC8f9hB?=
 =?us-ascii?q?NKOIDhP9E8ofB8K2Muwlh0Cpbg4YPOBV7KM1P96me+Ga16KxPedgnCipjWJI4I?=
 =?us-ascii?q?1m1kKM9ix8SvPH3pofwvGY2BeHWCn4jFu7rs/3noVEbykIHmWj0SjkGJJRZqpq?=
 =?us-ascii?q?cIYRCGehP9e4xs9jiJ7qQXJY8kCsB0kH2MOwZRWddVj90hBO2kQNpnynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336ha?=
 =?us-ascii?q?pKVlI2jTW0tIZDX2L2d5X6u0t7qCZdNP6ZwyvSVWVuS8fU6VSrrnrxQG1CPjGn?=
 =?us-ascii?q?NUxConeDGyppX5gxt6hXqfLHlptnrZesJwxRDF6NzHX/FR3TkGRCh+iTbJAFix?=
 =?us-ascii?q?JN2p/dSSl5feveGyTWOhVptPcSb1yYOMrje05WpvARenhfC8hsXnERQm0S/8z9?=
 =?us-ascii?q?RrVT/HrBHmbonp1qS6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Avl11diLn6Tx4L5S2+Sws1uZ9ShZmMW2yQ9791FCa?=
 =?us-ascii?q?uO7bxEmzd1rUS8rQ7Lffd9mTIdw+M06HEGm+EJpBYtziKFD7AXHElYPjbjmw6G?=
 =?us-ascii?q?7t+gt6VXeHigcaKr20Vgh9ChA6qPogVdWHb/Z5cjEjV87sR5MFLQznLz7pvod8?=
 =?us-ascii?q?XXbdIWrheUiQvPj/BJKJItkfoHnTZnOWX4vXE/yu80lxpu3YyhvIicKmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDAzsW?=
 =?us-ascii?q?2UGb3bHQ+C8ktmq2/PHouvN3GWInkZ0NpjSAOcJExZnAAbQjE6koQlGQCtwczr?=
 =?us-ascii?q?aF156SwJ5l7kthtMzfplNxvlXWfaugiocS04SISFIBpV8wFC5FrVMcqE4eJoBC?=
 =?us-ascii?q?xY+pyhrAqQKm2UfQhIDGcJWlCaCFDnJLWh+d7A8+2ADOqkM/TOeamOqfBZV/qQ?=
 =?us-ascii?q?xZOv1ZZm/y+RNsqVOHluFeY72k1FXXB2AMnZnzQPSyoKlyPCdcKbpRG8+jFpoc?=
 =?us-ascii?q?C76vjkRAXv5Y6XAbtILdpv4wy2gbuEN+OIhCZ2NzdY1pAPxX/J0rQf30QSiyZh?=
 =?us-ascii?q?dzazC7QAqDXNQbnUmq9WCR4bdixyONFJ76I6wglCJ8rbhsnp2b5/i/4/E01FWk?=
 =?us-ascii?q?D5msG1ecwKJHmwO0naBEmQLrSJOz3Kz9vzYaO9UrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjLN93jDg2zacoiX/QKWEcMS?=
 =?us-ascii?q?Zzc0VWo72U7CNYhOh/GmNb4npkK+mEhziW7+3CJpkKtvtrBzx+l/hG73Qi17tV?=
 =?us-ascii?q?8CZESeR1mSTIqN5uplCmku+XxTtmUBpBsDBLhI2QsEVmOKXZ8IRAWHne8BIM62?=
 =?us-ascii?q?WQFwoFp99/BtLzvKBQz4uHqKWmLDZE7sKR4coEQsPTLceGLGEJLxXkAnjXARED?=
 =?us-ascii?q?QDrtMnvQ1HZQiPWDynrAtJkzrLDlnIcLDLpaSBo4Gu5eQlhiGs1EJIp8XRsll6?=
 =?us-ascii?q?KWiIgD4n/65ALRSd9Ar9bHS+iNAOn9AD+cgf9PYB5MibD5N4UXMsvg21F+Z1x9?=
 =?us-ascii?q?gqzOGkzNTZZMpDFsakk/p0AJuHRhS3Jp80PjZBmk7HIaGbizhBFywhFzYOIg6C?=
 =?us-ascii?q?vhpVw3L0bQqQMxllU8nZPuhjXVOCbsM6q2dYFHBC3y8UM3dtv/QgBofUixkFZi?=
 =?us-ascii?q?OTPsWb1clf1jeHpthQuavoFAXbZXSrdObQM4we6RIfMlzRAUsCypzEJDzejIE5?=
 =?us-ascii?q?1vkE0ta5Ho53JY0ipxfcIyP+rbI68NhlRRg6umtzWpzfw4hgQZIgJFzGOVfScT?=
 =?us-ascii?q?/mgFMLUvLCm51uVp5UqJnD4HMGsXS/c1q+h23kc8PfmQwSX91bJKNkG2MaqYNa?=
 =?us-ascii?q?zd83HBnMiZX152xEEgnk1E97F82IIidUHSXEcqiPObDzwSKNHPbw1YK4JX9X7c?=
 =?us-ascii?q?eg6NvP/LzJYzOJ+yUqjjTeaIu+APj0WnWgwgEqwN6NgMGt+n10ScZc39LbwI0h?=
 =?us-ascii?q?Vr/wXtK1WtBfFFPhmMlXNPoci5yp9f0o5aKTUQR256NGH/zL/du0kPh/WORv8/?=
 =?us-ascii?q?Z3tcVYwBcjo4Vcu1mzNQ+WVdJDixzu8djgOF6nu0ojnMCxH/YsBlafPSYgljTJ?=
 =?us-ascii?q?mq9jEv26y3j0PL6JLYJnG8Odkm8trO7+wdj4yKB/NdUf92tEKY05FVW3GwQUbO?=
 =?us-ascii?q?F9CvLpT9YoVqasb7Tj6hT0a2lT84CdzsINasLbWMmQjuRJp8uYyXmjskMIv1GS?=
 =?us-ascii?q?sTFBRwj+UC4r9sawoeZZYyfR/vsUI5LaP7aAWC1diiTmKFMiZNQr9TwKHya7VJ?=
 =?us-ascii?q?wi8EYuakxX4kSZ8mie+67QpFRokNjxTUwvuLfYRSUSHvXHdafkGHoSs/ingkOu?=
 =?us-ascii?q?E56vkwzQmOslQGNT2PMutzZygMr9A1AliSLHMwEWo1QXedi5bO5kin2LVWtyJH?=
 =?us-ascii?q?mdp82PdDvHK4spKbKCyvRb6tpInOmzAtYdgvv+t6NomnasGPvo6YmzvQQYP4uw?=
 =?us-ascii?q?iJFiW9Er4Sgt9VKjhVTPBOn2wNP8EWs8xK7k91HsI1J7FPAaNvvbmvcidiAgYR?=
 =?us-ascii?q?wDUfWofG2yYNxq+12KPfvhORdokydRIDrZNOi8ccVCgwZTkR4Oe7XYLQhW6CS0?=
 =?us-ascii?q?ARLQsT5BgK7wUFxaFqeeWw/IvQCZVL13ZYpOg8eCLBC9FN8FT2UCnCnVngQvK9?=
 =?us-ascii?q?u/64wQVIivnr149IC1ZEFUFByrMOxQMTI7ZtJvxIsw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAADEI/dbh0O0hNFiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECJ4N5iBhfiyABgiGXJiCBBANMEgEBGAsIAYhSIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2IoJlAwMBAiAEBQYBRgYJAQEkAiYCAgNUGQUDgxkBg?=
 =?us-ascii?q?gEFCqgyfDMehA8BgQOEZgUTeIp+F4FAP4wlglcCh1WHRHePLEYJhnyKS4s9DYU?=
 =?us-ascii?q?+LI0XikYCBAIEBQIUgUZsgSFNIxU7gTQBCwILAQEJAoESE4IRAxeIXoVfHgEyA?=
 =?us-ascii?q?QEBB3sBAYoKK4IgAQE?=
X-IPAS-Result: =?us-ascii?q?A0AYAADEI/dbh0O0hNFiHQEBBQEHBQGBUQgBCwGCaYECJ4N?=
 =?us-ascii?q?5iBhfiyABgiGXJiCBBANMEgEBGAsIAYhSIjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2IoJlAwMBAiAEBQYBRgYJAQEkAiYCAgNUGQUDgxkBggEFCqgyfDMehA8?=
 =?us-ascii?q?BgQOEZgUTeIp+F4FAP4wlglcCh1WHRHePLEYJhnyKS4s9DYU+LI0XikYCBAIEB?=
 =?us-ascii?q?QIUgUZsgSFNIxU7gTQBCwILAQEJAoESE4IRAxeIXoVfHgEyAQEBB3sBAYoKK4I?=
 =?us-ascii?q?gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,267,1539673200"; 
   d="scan'208";a="53016856"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 13:49:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2407670AbeKWIbH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 03:31:07 -0500
Received: from terminus.zytor.com ([198.137.202.136]:47731 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731179AbeKWIbH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 03:31:07 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wAMLmoAw3947532
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Thu, 22 Nov 2018 13:48:50 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wAMLmoR63947528;
        Thu, 22 Nov 2018 13:48:50 -0800
Date: Thu, 22 Nov 2018 13:48:50 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Babu Moger <tipbot@zytor.com>
Message-ID: <tip-a36c5ff560fb32d17c020fa3e7f4c70f753d8834@git.kernel.org>
Cc: Thomas.Lendacky@amd.com, rafael@kernel.org, hpa@zytor.com,
        corbet@lwn.net, dima@arista.com, qianyue.zj@alibaba-inc.com,
        kstewart@linuxfoundation.org, bp@suse.de, mingo@kernel.org,
        sherry.hurwitz@amd.com, tony.luck@intel.com, rian@alum.mit.edu,
        dwmw2@infradead.org, kirill.shutemov@linux.intel.com,
        linux-kernel@vger.kernel.org, puwen@hygon.cn,
        reinette.chatre@intel.com, linux-doc@vger.kernel.org,
        jpoimboe@redhat.com, davem@davemloft.net, arnd@arndb.de,
        vkuznets@redhat.com, xiaochen.shen@intel.com, pombredanne@nexb.com,
        babu.moger@amd.com, mchehab+samsung@kernel.org,
        pbonzini@redhat.com, akpm@linux-foundation.org,
        chang.seok.bae@intel.com, brijesh.singh@amd.com, jannh@google.com,
        Babu.Moger@amd.com, tglx@linutronix.de, mingo@redhat.com,
        fenghua.yu@intel.com, luto@kernel.org, gregkh@linuxfoundation.org,
        suravee.suthikulpanit@amd.com, jroedel@suse.de,
        peterz@infradead.org
Reply-To: rian@alum.mit.edu, tony.luck@intel.com, sherry.hurwitz@amd.com,
          kirill.shutemov@linux.intel.com, dwmw2@infradead.org,
          reinette.chatre@intel.com, puwen@hygon.cn,
          linux-kernel@vger.kernel.org, corbet@lwn.net, rafael@kernel.org,
          hpa@zytor.com, dima@arista.com, Thomas.Lendacky@amd.com,
          kstewart@linuxfoundation.org, qianyue.zj@alibaba-inc.com,
          bp@suse.de, mingo@kernel.org, chang.seok.bae@intel.com,
          brijesh.singh@amd.com, jannh@google.com, Babu.Moger@amd.com,
          fenghua.yu@intel.com, luto@kernel.org, tglx@linutronix.de,
          mingo@redhat.com, peterz@infradead.org,
          suravee.suthikulpanit@amd.com, gregkh@linuxfoundation.org,
          jroedel@suse.de, davem@davemloft.net, jpoimboe@redhat.com,
          linux-doc@vger.kernel.org, xiaochen.shen@intel.com,
          arnd@arndb.de, vkuznets@redhat.com, babu.moger@amd.com,
          pombredanne@nexb.com, mchehab+samsung@kernel.org,
          akpm@linux-foundation.org, pbonzini@redhat.com
In-Reply-To: <20181121202811.4492-7-babu.moger@amd.com>
References: <20181121202811.4492-7-babu.moger@amd.com>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/cache] x86/resctrl: Bring cbm_validate() into the resource
 structure
Git-Commit-ID: a36c5ff560fb32d17c020fa3e7f4c70f753d8834
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        T_DATE_IN_FUTURE_96_Q autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  a36c5ff560fb32d17c020fa3e7f4c70f753d8834
Gitweb:     https://git.kernel.org/tip/a36c5ff560fb32d17c020fa3e7f4c70f753d8834
Author:     Babu Moger <Babu.Moger@amd.com>
AuthorDate: Wed, 21 Nov 2018 20:28:35 +0000
Committer:  Borislav Petkov <bp@suse.de>
CommitDate: Thu, 22 Nov 2018 20:16:19 +0100

x86/resctrl: Bring cbm_validate() into the resource structure

Bring all the functions that are different between the vendors into the
resource structure and initialize them dynamically. Add _intel suffix to
the Intel-specific functions.

cbm_validate() which does cache bitmask validation, differs between the
vendors as AMD allows non-contiguous masks. So, use separate functions
for Intel and AMD.

 [ bp: Massage commit message and fixup rdt_resource members' vertical
   alignment. ]

Signed-off-by: Babu Moger <babu.moger@amd.com>
Signed-off-by: Borislav Petkov <bp@suse.de>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Arnd Bergmann <arnd@arndb.de>
Cc: Brijesh Singh <brijesh.singh@amd.com>
Cc: "Chang S. Bae" <chang.seok.bae@intel.com>
Cc: David Miller <davem@davemloft.net>
Cc: David Woodhouse <dwmw2@infradead.org>
Cc: Dmitry Safonov <dima@arista.com>
Cc: Fenghua Yu <fenghua.yu@intel.com>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Jann Horn <jannh@google.com>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: Jonathan Corbet <corbet@lwn.net>
Cc: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Kate Stewart <kstewart@linuxfoundation.org>
Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
Cc: <linux-doc@vger.kernel.org>
Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Philippe Ombredanne <pombredanne@nexb.com>
Cc: Pu Wen <puwen@hygon.cn>
Cc: <qianyue.zj@alibaba-inc.com>
Cc: "Rafael J. Wysocki" <rafael@kernel.org>
Cc: Reinette Chatre <reinette.chatre@intel.com>
Cc: Rian Hunter <rian@alum.mit.edu>
Cc: Sherry Hurwitz <sherry.hurwitz@amd.com>
Cc: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Thomas Lendacky <Thomas.Lendacky@amd.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
Cc: <xiaochen.shen@intel.com>
Link: https://lkml.kernel.org/r/20181121202811.4492-7-babu.moger@amd.com
---
 arch/x86/kernel/cpu/resctrl/core.c        |  9 ++++++++-
 arch/x86/kernel/cpu/resctrl/ctrlmondata.c |  4 ++--
 arch/x86/kernel/cpu/resctrl/internal.h    | 15 +++++++++------
 3 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/arch/x86/kernel/cpu/resctrl/core.c b/arch/x86/kernel/cpu/resctrl/core.c
index 3bd245b057c4..ba5a5b8c4681 100644
--- a/arch/x86/kernel/cpu/resctrl/core.c
+++ b/arch/x86/kernel/cpu/resctrl/core.c
@@ -878,7 +878,14 @@ static __init void rdt_init_res_defs_intel(void)
 	struct rdt_resource *r;
 
 	for_each_rdt_resource(r) {
-		if (r->rid == RDT_RESOURCE_MBA) {
+		if (r->rid == RDT_RESOURCE_L3 ||
+		    r->rid == RDT_RESOURCE_L3DATA ||
+		    r->rid == RDT_RESOURCE_L3CODE ||
+		    r->rid == RDT_RESOURCE_L2 ||
+		    r->rid == RDT_RESOURCE_L2DATA ||
+		    r->rid == RDT_RESOURCE_L2CODE)
+			r->cbm_validate = cbm_validate_intel;
+		else if (r->rid == RDT_RESOURCE_MBA) {
 			r->msr_base = MSR_IA32_MBA_THRTL_BASE;
 			r->msr_update = mba_wrmsr_intel;
 			r->parse_ctrlval = parse_bw_intel;
diff --git a/arch/x86/kernel/cpu/resctrl/ctrlmondata.c b/arch/x86/kernel/cpu/resctrl/ctrlmondata.c
index a8ae87e756e9..d2e0b99d453f 100644
--- a/arch/x86/kernel/cpu/resctrl/ctrlmondata.c
+++ b/arch/x86/kernel/cpu/resctrl/ctrlmondata.c
@@ -88,7 +88,7 @@ int parse_bw_intel(struct rdt_parse_data *data, struct rdt_resource *r,
  *	are allowed (e.g. FFFFH, 0FF0H, 003CH, etc.).
  * Additionally Haswell requires at least two bits set.
  */
-static bool cbm_validate(char *buf, u32 *data, struct rdt_resource *r)
+bool cbm_validate_intel(char *buf, u32 *data, struct rdt_resource *r)
 {
 	unsigned long first_bit, zero_bit, val;
 	unsigned int cbm_len = r->cache.cbm_len;
@@ -148,7 +148,7 @@ int parse_cbm(struct rdt_parse_data *data, struct rdt_resource *r,
 		return -EINVAL;
 	}
 
-	if (!cbm_validate(data->buf, &cbm_val, r))
+	if (r->cbm_validate && !r->cbm_validate(data->buf, &cbm_val, r))
 		return -EINVAL;
 
 	if ((rdtgrp->mode == RDT_MODE_EXCLUSIVE ||
diff --git a/arch/x86/kernel/cpu/resctrl/internal.h b/arch/x86/kernel/cpu/resctrl/internal.h
index 9a643f444723..599cad34a6a8 100644
--- a/arch/x86/kernel/cpu/resctrl/internal.h
+++ b/arch/x86/kernel/cpu/resctrl/internal.h
@@ -396,9 +396,9 @@ struct rdt_parse_data {
  * struct rdt_resource - attributes of an RDT resource
  * @rid:		The index of the resource
  * @alloc_enabled:	Is allocation enabled on this machine
- * @mon_enabled:		Is monitoring enabled for this feature
+ * @mon_enabled:	Is monitoring enabled for this feature
  * @alloc_capable:	Is allocation available on this machine
- * @mon_capable:		Is monitor feature available on this machine
+ * @mon_capable:	Is monitor feature available on this machine
  * @name:		Name to use in "schemata" file
  * @num_closid:		Number of CLOSIDs available
  * @cache_level:	Which cache level defines scope of this resource
@@ -410,10 +410,11 @@ struct rdt_parse_data {
  * @cache:		Cache allocation related data
  * @format_str:		Per resource format string to show domain value
  * @parse_ctrlval:	Per resource function pointer to parse control values
- * @evt_list:			List of monitoring events
- * @num_rmid:			Number of RMIDs available
- * @mon_scale:			cqm counter * mon_scale = occupancy in bytes
- * @fflags:			flags to choose base and info files
+ * @cbm_validate	Cache bitmask validate function
+ * @evt_list:		List of monitoring events
+ * @num_rmid:		Number of RMIDs available
+ * @mon_scale:		cqm counter * mon_scale = occupancy in bytes
+ * @fflags:		flags to choose base and info files
  */
 struct rdt_resource {
 	int			rid;
@@ -436,6 +437,7 @@ struct rdt_resource {
 	int (*parse_ctrlval)(struct rdt_parse_data *data,
 			     struct rdt_resource *r,
 			     struct rdt_domain *d);
+	bool (*cbm_validate)(char *buf, u32 *data, struct rdt_resource *r);
 	struct list_head	evt_list;
 	int			num_rmid;
 	unsigned int		mon_scale;
@@ -576,5 +578,6 @@ void cqm_setup_limbo_handler(struct rdt_domain *dom, unsigned long delay_ms);
 void cqm_handle_limbo(struct work_struct *work);
 bool has_busy_rmid(struct rdt_resource *r, struct rdt_domain *d);
 void __check_limbo(struct rdt_domain *d, bool force_free);
+bool cbm_validate_intel(char *buf, u32 *data, struct rdt_resource *r);
 
 #endif /* _ASM_X86_RESCTRL_INTERNAL_H */
