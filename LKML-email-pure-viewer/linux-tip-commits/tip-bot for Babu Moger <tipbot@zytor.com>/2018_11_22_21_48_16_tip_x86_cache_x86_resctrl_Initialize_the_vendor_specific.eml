Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:32:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A183358037D;
	Thu, 22 Nov 2018 13:49:24 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga007-1.jf.intel.com with ESMTP; 22 Nov 2018 13:49:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aj0k6EBFNd9EGdi1TiuuEsZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ74pMq9bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA38G/ZidZwg6BVoBy/uhJxxIHbbo6JO/VjZaPdZdEXSHFdXstSTSFNHpmx?=
 =?us-ascii?q?Y5cNAucHIO1Wr5P9p1wLrRamGQmsBfvvxiZTiX/xwa0xzuohEQbc3Ac9At8Bqm?=
 =?us-ascii?q?/brMjoP6kVVuC1w7fHzS/eZP5RxTf96ZDIfQsmofGQRr9xcMrQyVUoFwPflFmf?=
 =?us-ascii?q?tYvlPzaM2+kLrmOV4e1gVee1hG4mrQF8ujuvydk2ionPmI0VzkrI9SJjwIY6I9?=
 =?us-ascii?q?CzVU11Yca8HZdOqy2XM5F6Tt4sTm12oio2174LtYKhcCULypkr3wPTZviEfoSS?=
 =?us-ascii?q?/x7uWuScLS1miH55Zr6znQu+/Eahx+D6S8K6ykxFrjBfndnJrn0N1wLc6syASv?=
 =?us-ascii?q?Zl4Eeh1iiA1xrJ5uFHP080j6zbJIAlwrIqkZoTq0vDEjf3mEXwkqCWal0p9va0?=
 =?us-ascii?q?5+njeLnqu5GRO5Fuhg3jMakihtazDOU6PwQWWmiU4+W81Lnt/U3jR7VKi+U7kq?=
 =?us-ascii?q?3YsJDcOMQaqbe1AwxL3YY57RawETOm3M0fnXgJKlJKZgiHgpP3O1HBPv/4F+2z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDo/KLnjZn7ftZax95FJEyAov0dBf4IpZCrUAIPLwRED9rt?=
 =?us-ascii?q?PZDgIiPgywwubnDsh914wEVWKOBK+ZLL3dsVuS6u0zJOmMYZcfuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcdfaaz3JsXdGq3HvN8L0WZfHrjmNEBEWgRswo6TezqjkCCUDFJa3azWa?=
 =?us-ascii?q?I8+i80CIa8AYjfQYCthaSL3D2nEZ1OemBGFleMHG/qd4WDRfgAciGSIshnkjwC?=
 =?us-ascii?q?UrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI5xrt/oUx6yleAy6R4meZXFd5I6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKpA7APkbyHHpg08qPG0Hj3KMZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSAN/TL/K?=
 =?us-ascii?q?XW4BaUfMrdT2/EXCT6SwBrQhNQdBzc2CKq5OatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweRYk1l1rq1/AMVhPOGR/MS2LIEpDkuqzFuEFmh2NLWDsKKpxB9c6VEfd?=
 =?us-ascii?q?M9/FBH2HrFtwx8O5ygKLxihl4ecghto0PizRJ3Cp9EkcgrqnMqwxF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov629o091L3H?=
 =?us-ascii?q?qT+JrLDBAeXonsUkkq7Rd6obLaYi4j547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a80IsOqbeeJ1LSqPeZghj2mi2tH7Z?=
 =?us-ascii?q?t50kKN8Sp8V+HJ04wEw/GewguISTP8gE29vcDwnIBOfSsSEXanySj4GI5RYbV/?=
 =?us-ascii?q?fZwKCWiyOcK33Mhxh5n3V35e6lGjHVIG1Na1dhWIa1zywBNf1V4QoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5Uvix6lb?=
 =?us-ascii?q?pb5zLmnJTUdTYij2KXpvUq+xtrqEfs5O54kksSRRUOSgf1+aTqTxrAcd0yPmB2?=
 =?us-ascii?q?Fe3iw0dym2upXlmBx3kGCdI2xprHraesFwwg3T5MfGSv5S3ToGRS94hifRBlWn?=
 =?us-ascii?q?O9mp/NOUl4rMs+ykVmKhUIFTfjfvzY+aqCS74mhqCwWln/+vgt3nDRQ60Sjj2t?=
 =?us-ascii?q?hqTyrIqwzwYovq16S8Ku9nekhoBFnh68t1AI1+k40whI0O1ngenJma4X0HkWLr?=
 =?us-ascii?q?O9VBxa3+dGYNRSIMw9PN4wjqwkxjImiJx4LkTHqdxMRhasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArUTHUlbJyPgjRqJ?=
 =?us-ascii?q?4M6lrKVLemmva6O/21RkndCuF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSmSpnPmf9sWckyuEhixxuwIq6vJOGK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHTInsH?=
 =?us-ascii?q?ibHr7fHRKF5EdisnLCCJSrN3CRJHkEwtRuXhidJEpDgA8KWDU2hII2FgevxMb5?=
 =?us-ascii?q?akd2+igR5kLkqhtL0u9oNQPwUmLBqwezcDs0VIKTLBlL7gFB+kfVN9aR7vloEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+I?=
 =?us-ascii?q?xJKoz4tm5iuMOd+JPnV4FP073UxDXX9iFsTdmjUPTTEXli3XY86aohe85jN4rs?=
 =?us-ascii?q?Sl/Pv3XwLv4JOFC6FOPtV35xC2naCDOvaQhClnKDZY1ZAMxX7SxLgcxl4SjC5u?=
 =?us-ascii?q?eCe3EbQdri7AV6bQmq5RDx4GZCJ/LspI76Qg3gZTPc7XkM/61rl9jvQtEVdKSU?=
 =?us-ascii?q?Thmt21ZcwNO2yyLk7HC12RNLuYJTzH2cX3YaKnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWnMN92iD0626E7imnWOm4cLz?=
 =?us-ascii?q?d8dVhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuGi50jf5V4Gwmy7tJ?=
 =?us-ascii?q?6yFJXPx0lzHUrt5rolGmlPGAyztnUBVUrDZLi5mGvUFjOaXf65lBVmzI/BML7W?=
 =?us-ascii?q?WMFRsKo8FpBcHou6BVmZDzk/f3KTFf45fI/NNZDM/RLcObK1I/PhfzXj3ZFg0I?=
 =?us-ascii?q?SXisL26MvUFFlOCu8SiatJU1qZjEnJsIV69VU0EzGvoGC0NjWtsYL9M/QDA5g7?=
 =?us-ascii?q?iWkNUg/3eyrBDNAs5du9SPVPuUB/XHJzGegr1JIRAPxPewN40dP4D/809vcF93?=
 =?us-ascii?q?mMLNAUWUFdNMuCxlakkvoFhR/X15UEU32kT4ekWs5mMeEbi/mRtywgVzZ+st6T?=
 =?us-ascii?q?6q8kofJ1zWqS92m0403Z31gDmWez78KuGrXYxQIyvyq0U1dJj8RkI9bxe1kEBp?=
 =?us-ascii?q?MB/fWqlcybdtMShgjxXWtIdnHeFaC6tJfFtY3eyIavMA0UVTrSPhzkkDre/ED4?=
 =?us-ascii?q?Zy0QcterayoH9anQFudtg4IerXPqUNhl1bhq+OtyXrzek02xIYKG4O/XmUdSpO?=
 =?us-ascii?q?v1YHcvElPDal4eV29SSGmj1eaGYLSvwmq+5r8UV7PP6Pi2rs2qBOL2i9PvKSKq?=
 =?us-ascii?q?eetXSGk8OUBhs0y18Pv0pI57571YEkaUXQH1goybGLGhgAM8zPAQdYf8AU/3/W?=
 =?us-ascii?q?OW6yseLIyIkzG4i7GunjTv6mvaMYxEmjGUJhBoUF6NUcE9++0mnRKcbtJbQMjB?=
 =?us-ascii?q?Qr70LgI1DBRPFIfh2MuDQKuceyyNlwx4YZbjsFKX5gKijx6ruT7iUjiufFedA5?=
 =?us-ascii?q?b20yV44IcHkxXYnyni9fsHNoFjS70usFjgOF6nu0rD7RDjTnb5x4ZfGbZTtlDd?=
 =?us-ascii?q?3w8jI6t+C9iVfR/dPFKmb5c95rt/fO7/8Xo9CMDPYQBb18tVrM3opVXXqnV0bR?=
 =?us-ascii?q?HtOvYZv9cY8haZrzEHn+GlynghonXtv2JpCmKa3MyR3vQ5cStJSQ3xgiM9OwEn?=
 =?us-ascii?q?cVHBI07/sO5aRxeREOJZE7aALyuiw/MbCyJEGT1dDqC2+3Lzd+RuNZwe/8a7ET?=
 =?us-ascii?q?hzYjav+SzHomU40gyO+24QgBSdVCghDbzN6qfYhFTSG1EXtYP03FrCAk0W1mOe?=
 =?us-ascii?q?so6u46zFXDtlxYezmIbOlBbG1CosF5C1SPJ3l/Fms/QRmbl4WHqhWs0qoI7m1d?=
 =?us-ascii?q?gsxL0PFXmHH7stnUZzfoELaqoJP9ui49aJ4jorE3PID+ZoOKq5bBxBTeSpfKuw?=
 =?us-ascii?q?GIWSL8EOBV3pBIKiVeUvhOmEk/NMAGsJYH4k00Eo8lOqZGFqQh4Ku3dTplDjMW?=
 =?us-ascii?q?1SYfVp+o1TkOxOy73v+SjhqMfY4wGB0Cvo9LjtYUX2hxeCxa7K27UITTnWiJYn?=
 =?us-ascii?q?IGLAca8UJH4wdTuJV3e7X54ZKNRphQgzBRubpeWyHWXrxv+FbhAjWKgEDyT+mJ?=
 =?us-ascii?q?gf212hgUx/XphIpIECVjAFRQkr4F3nAjL6t6fvEd?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAA4JPdbh0O0hNFiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECJ4N5iBhfiyABgiGXJiCBBANMEgEBGAsIAYhSIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2IoJlAwMBAiAEBQYBRgYJAQEkAiYCAgNUGQUDgxkBg?=
 =?us-ascii?q?gEFCqg2fDMehA8BgQOEZgUTeIp+F4FAP4wlglcCh1WBf4VFd48dD0YJhnyKS4s?=
 =?us-ascii?q?9DYU+jUOKRgIEAgQFAhSBRmyBIU0jFYFvAQsCCwEBCQKBEhOCFBeIXoVfHgEyA?=
 =?us-ascii?q?QEBB3sBAYxVAQE?=
X-IPAS-Result: =?us-ascii?q?A0AYAAA4JPdbh0O0hNFiHQEBBQEHBQGBUQgBCwGCaYECJ4N?=
 =?us-ascii?q?5iBhfiyABgiGXJiCBBANMEgEBGAsIAYhSIjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2IoJlAwMBAiAEBQYBRgYJAQEkAiYCAgNUGQUDgxkBggEFCqg2fDMehA8?=
 =?us-ascii?q?BgQOEZgUTeIp+F4FAP4wlglcCh1WBf4VFd48dD0YJhnyKS4s9DYU+jUOKRgIEA?=
 =?us-ascii?q?gQFAhSBRmyBIU0jFYFvAQsCCwEBCQKBEhOCFBeIXoVfHgEyAQEBB3sBAYxVAQE?=
X-IronPort-AV: E=Sophos;i="5.56,267,1539673200"; 
   d="scan'208";a="41232845"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 13:49:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2407641AbeKWIac (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 03:30:32 -0500
Received: from terminus.zytor.com ([198.137.202.136]:60021 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731179AbeKWIac (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 03:30:32 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wAMLmGpW3947421
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Thu, 22 Nov 2018 13:48:16 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wAMLmGmX3947417;
        Thu, 22 Nov 2018 13:48:16 -0800
Date: Thu, 22 Nov 2018 13:48:16 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Babu Moger <tipbot@zytor.com>
Message-ID: <tip-1ad4fa41d99f606098fd7b90c1f5deb2b3dfae5d@git.kernel.org>
Cc: mingo@kernel.org, bp@suse.de, qianyue.zj@alibaba-inc.com,
        mingo@redhat.com, brijesh.singh@amd.com, Babu.Moger@amd.com,
        chang.seok.bae@intel.com, linux-kernel@vger.kernel.org,
        hpa@zytor.com, tony.luck@intel.com, reinette.chatre@intel.com,
        arnd@arndb.de, tglx@linutronix.de, babu.moger@amd.com,
        dima@arista.com, rian@alum.mit.edu, dwmw2@infradead.org,
        akpm@linux-foundation.org, sherry.hurwitz@amd.com,
        jpoimboe@redhat.com, pbonzini@redhat.com, peterz@infradead.org,
        suravee.suthikulpanit@amd.com, vkuznets@redhat.com,
        gregkh@linuxfoundation.org, jannh@google.com, rafael@kernel.org,
        kirill.shutemov@linux.intel.com, corbet@lwn.net, jroedel@suse.de,
        fenghua.yu@intel.com, xiaochen.shen@intel.com, puwen@hygon.cn,
        linux-doc@vger.kernel.org, mchehab+samsung@kernel.org,
        luto@kernel.org, pombredanne@nexb.com, davem@davemloft.net,
        kstewart@linuxfoundation.org, Thomas.Lendacky@amd.com
Reply-To: gregkh@linuxfoundation.org, vkuznets@redhat.com,
          jannh@google.com, rafael@kernel.org,
          kirill.shutemov@linux.intel.com, fenghua.yu@intel.com,
          xiaochen.shen@intel.com, jroedel@suse.de, corbet@lwn.net,
          puwen@hygon.cn, linux-doc@vger.kernel.org,
          mchehab+samsung@kernel.org, kstewart@linuxfoundation.org,
          davem@davemloft.net, luto@kernel.org, pombredanne@nexb.com,
          Thomas.Lendacky@amd.com, qianyue.zj@alibaba-inc.com,
          mingo@kernel.org, bp@suse.de, Babu.Moger@amd.com,
          mingo@redhat.com, brijesh.singh@amd.com,
          chang.seok.bae@intel.com, linux-kernel@vger.kernel.org,
          hpa@zytor.com, tony.luck@intel.com, reinette.chatre@intel.com,
          arnd@arndb.de, tglx@linutronix.de, dima@arista.com,
          babu.moger@amd.com, akpm@linux-foundation.org,
          sherry.hurwitz@amd.com, rian@alum.mit.edu, dwmw2@infradead.org,
          pbonzini@redhat.com, suravee.suthikulpanit@amd.com,
          peterz@infradead.org, jpoimboe@redhat.com
In-Reply-To: <20181121202811.4492-6-babu.moger@amd.com>
References: <20181121202811.4492-6-babu.moger@amd.com>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/cache] x86/resctrl: Initialize the vendor-specific
 resource functions
Git-Commit-ID: 1ad4fa41d99f606098fd7b90c1f5deb2b3dfae5d
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        T_DATE_IN_FUTURE_96_Q autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  1ad4fa41d99f606098fd7b90c1f5deb2b3dfae5d
Gitweb:     https://git.kernel.org/tip/1ad4fa41d99f606098fd7b90c1f5deb2b3dfae5d
Author:     Babu Moger <Babu.Moger@amd.com>
AuthorDate: Wed, 21 Nov 2018 20:28:33 +0000
Committer:  Borislav Petkov <bp@suse.de>
CommitDate: Thu, 22 Nov 2018 20:16:19 +0100

x86/resctrl: Initialize the vendor-specific resource functions

Initialize the resource functions that are different between the
vendors. Some features are initialized differently between the vendors.
Add _intel suffix to Intel-specific functions.

For example, the MBA feature varies significantly between Intel and AMD.
Separate the initialization of these resource functions. That way we can
easily add AMD's functions later.

Signed-off-by: Babu Moger <babu.moger@amd.com>
Signed-off-by: Borislav Petkov <bp@suse.de>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Arnd Bergmann <arnd@arndb.de>
Cc: Brijesh Singh <brijesh.singh@amd.com>
Cc: "Chang S. Bae" <chang.seok.bae@intel.com>
Cc: David Miller <davem@davemloft.net>
Cc: David Woodhouse <dwmw2@infradead.org>
Cc: Dmitry Safonov <dima@arista.com>
Cc: Fenghua Yu <fenghua.yu@intel.com>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: "H. Peter Anvin" <hpa@zytor.com>
Cc: Ingo Molnar <mingo@redhat.com>
Cc: Jann Horn <jannh@google.com>
Cc: Joerg Roedel <jroedel@suse.de>
Cc: Jonathan Corbet <corbet@lwn.net>
Cc: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Kate Stewart <kstewart@linuxfoundation.org>
Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
Cc: <linux-doc@vger.kernel.org>
Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Philippe Ombredanne <pombredanne@nexb.com>
Cc: Pu Wen <puwen@hygon.cn>
Cc: <qianyue.zj@alibaba-inc.com>
Cc: "Rafael J. Wysocki" <rafael@kernel.org>
Cc: Reinette Chatre <reinette.chatre@intel.com>
Cc: Rian Hunter <rian@alum.mit.edu>
Cc: Sherry Hurwitz <sherry.hurwitz@amd.com>
Cc: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Thomas Lendacky <Thomas.Lendacky@amd.com>
Cc: Tony Luck <tony.luck@intel.com>
Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
Cc: <xiaochen.shen@intel.com>
Link: https://lkml.kernel.org/r/20181121202811.4492-6-babu.moger@amd.com
---
 arch/x86/kernel/cpu/resctrl/core.c        | 34 ++++++++++++++++++++++++++-----
 arch/x86/kernel/cpu/resctrl/ctrlmondata.c |  4 ++--
 arch/x86/kernel/cpu/resctrl/internal.h    |  8 ++++++--
 3 files changed, 37 insertions(+), 9 deletions(-)

diff --git a/arch/x86/kernel/cpu/resctrl/core.c b/arch/x86/kernel/cpu/resctrl/core.c
index cf6491eeadc6..3bd245b057c4 100644
--- a/arch/x86/kernel/cpu/resctrl/core.c
+++ b/arch/x86/kernel/cpu/resctrl/core.c
@@ -57,7 +57,8 @@ int max_name_width, max_data_width;
 bool rdt_alloc_capable;
 
 static void
-mba_wrmsr(struct rdt_domain *d, struct msr_param *m, struct rdt_resource *r);
+mba_wrmsr_intel(struct rdt_domain *d, struct msr_param *m,
+		struct rdt_resource *r);
 static void
 cat_wrmsr(struct rdt_domain *d, struct msr_param *m, struct rdt_resource *r);
 
@@ -171,10 +172,7 @@ struct rdt_resource rdt_resources_all[] = {
 		.rid			= RDT_RESOURCE_MBA,
 		.name			= "MB",
 		.domains		= domain_init(RDT_RESOURCE_MBA),
-		.msr_base		= MSR_IA32_MBA_THRTL_BASE,
-		.msr_update		= mba_wrmsr,
 		.cache_level		= 3,
-		.parse_ctrlval		= parse_bw,
 		.format_str		= "%d=%*u",
 		.fflags			= RFTYPE_RES_MB,
 	},
@@ -357,7 +355,8 @@ u32 delay_bw_map(unsigned long bw, struct rdt_resource *r)
 }
 
 static void
-mba_wrmsr(struct rdt_domain *d, struct msr_param *m, struct rdt_resource *r)
+mba_wrmsr_intel(struct rdt_domain *d, struct msr_param *m,
+		struct rdt_resource *r)
 {
 	unsigned int i;
 
@@ -874,6 +873,25 @@ static __init bool get_rdt_resources(void)
 	return (rdt_mon_capable || rdt_alloc_capable);
 }
 
+static __init void rdt_init_res_defs_intel(void)
+{
+	struct rdt_resource *r;
+
+	for_each_rdt_resource(r) {
+		if (r->rid == RDT_RESOURCE_MBA) {
+			r->msr_base = MSR_IA32_MBA_THRTL_BASE;
+			r->msr_update = mba_wrmsr_intel;
+			r->parse_ctrlval = parse_bw_intel;
+		}
+	}
+}
+
+static __init void rdt_init_res_defs(void)
+{
+	if (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL)
+		rdt_init_res_defs_intel();
+}
+
 static enum cpuhp_state rdt_online;
 
 static int __init resctrl_late_init(void)
@@ -881,6 +899,12 @@ static int __init resctrl_late_init(void)
 	struct rdt_resource *r;
 	int state, ret;
 
+	/*
+	 * Initialize functions(or definitions) that are different
+	 * between vendors here.
+	 */
+	rdt_init_res_defs();
+
 	check_quirks();
 
 	if (!get_rdt_resources())
diff --git a/arch/x86/kernel/cpu/resctrl/ctrlmondata.c b/arch/x86/kernel/cpu/resctrl/ctrlmondata.c
index 407d2179bfcb..a8ae87e756e9 100644
--- a/arch/x86/kernel/cpu/resctrl/ctrlmondata.c
+++ b/arch/x86/kernel/cpu/resctrl/ctrlmondata.c
@@ -64,8 +64,8 @@ static bool bw_validate(char *buf, unsigned long *data, struct rdt_resource *r)
 	return true;
 }
 
-int parse_bw(struct rdt_parse_data *data, struct rdt_resource *r,
-	     struct rdt_domain *d)
+int parse_bw_intel(struct rdt_parse_data *data, struct rdt_resource *r,
+		   struct rdt_domain *d)
 {
 	unsigned long bw_val;
 
diff --git a/arch/x86/kernel/cpu/resctrl/internal.h b/arch/x86/kernel/cpu/resctrl/internal.h
index fb26d347ae6c..9a643f444723 100644
--- a/arch/x86/kernel/cpu/resctrl/internal.h
+++ b/arch/x86/kernel/cpu/resctrl/internal.h
@@ -444,8 +444,8 @@ struct rdt_resource {
 
 int parse_cbm(struct rdt_parse_data *data, struct rdt_resource *r,
 	      struct rdt_domain *d);
-int parse_bw(struct rdt_parse_data *data, struct rdt_resource *r,
-	     struct rdt_domain *d);
+int parse_bw_intel(struct rdt_parse_data *data, struct rdt_resource *r,
+		   struct rdt_domain *d);
 
 extern struct mutex rdtgroup_mutex;
 
@@ -468,6 +468,10 @@ enum {
 	RDT_NUM_RESOURCES,
 };
 
+#define for_each_rdt_resource(r)					      \
+	for (r = rdt_resources_all; r < rdt_resources_all + RDT_NUM_RESOURCES;\
+	     r++)
+
 #define for_each_capable_rdt_resource(r)				      \
 	for (r = rdt_resources_all; r < rdt_resources_all + RDT_NUM_RESOURCES;\
 	     r++)							      \
