Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:37:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 69F765803ED;
	Wed, 28 Nov 2018 06:33:23 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 06:33:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AqYw+9RRP9ksiSCc/BpVOQRleOtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa65ZBaGt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/ZisJ+j7hbrxCvpxJh3oDaZ46aOvVicazAZtMaXWhMU91NVyFCGI6w?=
 =?us-ascii?q?c5ECA/YDMOtesoLzp0EOrRy7BQS0GOPvyydIimbt0q09z+QqDA/G3As6H9kTrn?=
 =?us-ascii?q?rUrNL1NKIIXuCu0aLGzDHDYO1X2Tby7ojHbAohquyLULJscMrR0VIgFwTZjliL?=
 =?us-ascii?q?qI3kPy+V1uMXs2SB8+VgUuevhnchpgpsrDavwcIshZPIhoIT0l3E9jt2wJwzJd?=
 =?us-ascii?q?KmTE53e9mkEIFftyycKoB4QdsiTnl2tComzrAKo4O3cSYUxJg92hLSaOCLf5KJ?=
 =?us-ascii?q?7x/hTOqdPDN1iXF/dL6iiRu/81KsxvPgWsWqylpGsyRIn9jKu3sQzRLc8NKHRe?=
 =?us-ascii?q?F4/kq52TaAyQTT6uZcLEAqmqrUNYQhzqQzlpUNq0TDGDH5mEHsgK+RbEUk9fCk?=
 =?us-ascii?q?6+XhYrr4up+RL5F4hh36P6g0h8CyD/o0PhITU2WY5eiwzrzu8E/hTLVPlPI2k6?=
 =?us-ascii?q?3ZsJ7AJcQco660GwtV0ocl6xaiADaqydcYkmcdLFJDZh2Hi5HlO1bAIfD+E/i/?=
 =?us-ascii?q?mU+hkClkx//YJL3tGJbNIWbZkLfnY7l971RQyA0pzdBQ/55UEK0OIOrvWk/ts9?=
 =?us-ascii?q?zVFhs5Mw23w+n5Etl82Z4eVHmLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH8zgUUdcrWx3ZsLdHC4GexrI0WDbnrtntcOC2AKshA+TOz3klKCVzFTam22X6?=
 =?us-ascii?q?I94DE7FY2nAZ3CRoCrnLyOwiO7EodKaWBBD1CGCW3oeJmcW/cQdCKSJddskj4D?=
 =?us-ascii?q?Vbe/UYMh1hautAn8y7pgNefU/iwYtZT+1Nl6/eHTlBcy9SBqAMSZyW2CU2Z0nm?=
 =?us-ascii?q?YQTT8swK9/uVB9ykuE0aVgmfNYDtxT5/RKUgsgL57T1e56Bsv2WgLAeNeJVVmn?=
 =?us-ascii?q?Ts+nATE3UtI+3dsOb1xhFNWlixDJxzCqDKMNl7yXGJw09brR33vrKMZ70XrG0K?=
 =?us-ascii?q?ghgEMgQstALmCmgq9/9w7OB4/GiUmZlqCqdbgC0y7J7muM0W2OvERAWg5qTarF?=
 =?us-ascii?q?RWwfZlfRrdnh+0zNVaGuBqo9PgtB08GCLLBKZcPvjVlBQPfjO9HeY2aqlme0BB?=
 =?us-ascii?q?aIwK6MbYXwd2Uc2iXdFFYLkwQJ8XmaMgg+Az+ro3jCAzx2CVLvf0Ts/PFjp3yh?=
 =?us-ascii?q?UE870RuGb0172Lqz4R4am/qcRugX3rIFvichtjp1EEy839LQF9qPuQ5hcL9Abt?=
 =?us-ascii?q?M65VdNzXjZuBBlPpy8M6BigUYTcxh2v0Pr0BV3FoVAkMgwoHM21gZyLriY0FdA?=
 =?us-ascii?q?dzOe0pD9IbnXKmj0/BCyZK/awFDe0NCK+qgR7PQ0sUnsvAasFkA66XVoz8FV02?=
 =?us-ascii?q?eA5pXNFAcdS5bxXVg49hdkp7DWeDIy557J2nJ2N6m0sTjC28wyCeshyxagecpf?=
 =?us-ascii?q?MayeGA/zFc0aG9ahKOgwl1e1aRIEOfhY9LQoMMO+a/uGxKmrMf5gnTK7l2hI/J?=
 =?us-ascii?q?px00OM9yVmTO7I0I0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn4TtW39E+1G5HVMJxcipdQCUb1Pjxw1Q1F0brmC9liu80j?=
 =?us-ascii?q?N7jSsprq2Z3CHVx+TidRwHOnNERWV4jFfsJ5S0gM4eXESycwcpkx6l717gx6dH?=
 =?us-ascii?q?vKR/M3XTQUBQcin2LmFuSKuxuqCZY85S7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rrf5sbTReRS3joFQyl0kyLXCUK/?=
 =?us-ascii?q?P9mq/NWUkYnMsualWmKlV51TdzTrzIyauCu6421qHQOwn/SpltL7Fgg61Dfx18?=
 =?us-ascii?q?N2WiXQsBb8fo7r2ry6MO19eUlkHl3868t8GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3We2MRhZsO2YmML2i0n6cBKB7?=
 =?us-ascii?q?yZ7LhFnStzv1q5ohjdYfl7njcB1/Qu7GQWjP0OuAoo1i+dGKwdHVFEPSzwkBSF?=
 =?us-ascii?q?99W+rKRUZGm1a7Sx2lRxncu9DL6cuAFTQ2j2eo0tHSJr6sV/MVTM0GD8643+ed?=
 =?us-ascii?q?nQa84TuQOQkxvak+dVL5cxnOIQhSV7IWL9oWEly+kjgBxy2pG6uZKLKmR386K/?=
 =?us-ascii?q?Hx5YLSb1Z8II9zHpjKZemNuW3o+1EpVgHDULQIXnTfayHD0OsvTnMh6EECcgpX?=
 =?us-ascii?q?eDBbrfAQif5V99oH3VFJCrM2yXKGMdzdV/XxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosSpiQNh9W4R9Z50vPLcyS9OFzHz?=
 =?us-ascii?q?xb/p28qgyCMHebah9MDWEIXEyEGl/iMqOv5dnG7+iXGO6+I+HSbrWJrOxUT+2I?=
 =?us-ascii?q?yo630ot64zaMMd2CP3llD/0mw0pDQGp2G8LDlzUUTCwXkS3NYtWfpBe9/C13s8?=
 =?us-ascii?q?++/O7qWALp+YuAFb9SPc9z9BCxhKeJL/SQizphKTZEypMMwmfFyLgB014TiCFu?=
 =?us-ascii?q?dDitHa4DtS7XS6LQlbFYDwQGayNoL8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDT2c73fLizSadOg+RUrRGwvTebHlTnPjSC?=
 =?us-ascii?q?kTnpSh+uPftNjCGdIBxRpoW9fgxxBmjkSdLscge7P8NvjT0q3b00gWvHNXIdMT?=
 =?us-ascii?q?h5aU9Csqec4j9YgvphHWxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7CtcXvx6hDPSrsJyo1GhiuSOyiBoUBxLqjZKgoKEpURjOaXD+ZlGVnbJ5xYN7W?=
 =?us-ascii?q?SWCxQXqNppENzvu6ZMytfRkKL/MitN89XR/ZhUO8+BLMOBLWpkLRvxXTXTCQ4E?=
 =?us-ascii?q?USWDK27SnQpeneuU+3nTqYI1+aLhgJ4fdrgOW0Y4GfAaIkBkGsESLpBqWD8tjb?=
 =?us-ascii?q?+ciogP/3X65B3MWMJyvZ3dUP+WR/L1J3LRkb5eeRIMzajQKYUVK52+1Ut/bFVz?=
 =?us-ascii?q?gIXNHQzXR98J6ilmaAAxqUMcqykiZmI20kPhLAiq5TtbGeGxgTY/jwJsZuJr/z?=
 =?us-ascii?q?Cq/lRzblbDuio81kJ3gsnonjmLbBbwKru9WcddDC+w/1QwN9XwBQ11YAuamU1i?=
 =?us-ascii?q?KSeCRrRNgr8mfmduzEfVsIFEEPhTQIVebRMQzO3RbPItlRxApSG37UtG4/bZE5?=
 =?us-ascii?q?xklRtsfZPo535JxQ8lbNczPqHWDKtP0lVUwKmJu2vg3ekqzR5YPE0N+X6cfCMS?=
 =?us-ascii?q?kE0OKrQiYSGv+6gk8QGeliFRUGkKWeAjrv9j+gU6IevEhyfh1bFEAkO8LeqSK+?=
 =?us-ascii?q?WeoWeE3cyLRUgx0EogjFRe8P59w4Nrekm8U0Ep0avXFhIVOM6EIgZQK4JQ/337?=
 =?us-ascii?q?ZyuCsezRh5lyOsH1H/vpUamN8qMdhkalFwUBHoIQ48BHFZ6plAnRN8XuKpYByB?=
 =?us-ascii?q?Mw9ELqIkmICLJCfxfP2DMGpdyviZx6x49QIhkDDmhndya6/LDaokktmvXHFMs2?=
 =?us-ascii?q?ZXITRc0AO3Q6Uca5igZQungGBz6ylqoZ0AGq/S7goT6WBz75K5JhfPCVYBlrBf?=
 =?us-ascii?q?ms9Dk/+rTwglnStt3dKmzhPtNluffE6fkdopeaDrVTV7YunV3bntxERmTvWWnT?=
 =?us-ascii?q?WdCyPdDMa44pZMe8JXK3U0y5hih9G9vwJNyqMoCakB3vX8Bft4zNj2NrDtO0Cj?=
 =?us-ascii?q?xLQ0Q4nOoE/q8pPQA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A8AADOpf5bh0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?QGCaIECJ4N5iHeLKQGCIWiCG4V5hV6Bc4FqhHcUDIFTEgEBGAsIAYduIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDEIBEAGBYiKCZQMDAQIIGAQEAQYBRgYJAQEkA?=
 =?us-ascii?q?iYCAgMeDgEOARgZBQODGQGBaQEBARUFCosGmy18Mw0RhA8BgQOCPAQKGQ2CFwU?=
 =?us-ascii?q?TeIsLF4F/gRGCXYMMghKDHIJXAokphnKPOhguCYZ9hwiDRIFaiDSBLgoBET+Ef?=
 =?us-ascii?q?iyNKIELiUICBAIEBQIUWmyCDU0jFYFvDgsBDAQGgQgTghQXiF6FYB4BMgEBCHs?=
 =?us-ascii?q?BAYRUiF8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0A8AADOpf5bh0O0hNFkHgEGBwaBUQkLAQGCaIECJ4N5iHe?=
 =?us-ascii?q?LKQGCIWiCG4V5hV6Bc4FqhHcUDIFTEgEBGAsIAYduIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDEIBEAGBYiKCZQMDAQIIGAQEAQYBRgYJAQEkAiYCAgMeDgEOARg?=
 =?us-ascii?q?ZBQODGQGBaQEBARUFCosGmy18Mw0RhA8BgQOCPAQKGQ2CFwUTeIsLF4F/gRGCX?=
 =?us-ascii?q?YMMghKDHIJXAokphnKPOhguCYZ9hwiDRIFaiDSBLgoBET+EfiyNKIELiUICBAI?=
 =?us-ascii?q?EBQIUWmyCDU0jFYFvDgsBDAQGgQgTghQXiF6FYB4BMgEBCHsBAYRUiF8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="64359128"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 28 Nov 2018 06:33:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728732AbeK2BfF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:35:05 -0500
Received: from terminus.zytor.com ([198.137.202.136]:44351 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727872AbeK2BfF (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:35:05 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wASEWU5T2323752
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Wed, 28 Nov 2018 06:32:30 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wASEWUPh2323748;
        Wed, 28 Nov 2018 06:32:30 -0800
Date: Wed, 28 Nov 2018 06:32:30 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Thomas Gleixner <tipbot@zytor.com>
Message-ID: <tip-46f7ecb1e7359f183f5bbd1e08b90e10e52164f9@git.kernel.org>
Cc: ak@linux.intel.com, jkosina@suse.cz, linux-kernel@vger.kernel.org,
        arjan@linux.intel.com, asit.k.mallick@intel.com, jcm@redhat.com,
        hpa@zytor.com, thomas.lendacky@amd.com, keescook@chromium.org,
        jpoimboe@redhat.com, longman9394@gmail.com,
        torvalds@linux-foundation.org, gregkh@linuxfoundation.org,
        luto@kernel.org, david.c.stewart@intel.com, dwmw@amazon.co.uk,
        tglx@linutronix.de, aarcange@redhat.com,
        tim.c.chen@linux.intel.com, mingo@kernel.org, peterz@infradead.org,
        casey.schaufler@intel.com, dave.hansen@intel.com
Reply-To: gregkh@linuxfoundation.org, luto@kernel.org,
          torvalds@linux-foundation.org, longman9394@gmail.com,
          dwmw@amazon.co.uk, david.c.stewart@intel.com,
          tim.c.chen@linux.intel.com, aarcange@redhat.com,
          tglx@linutronix.de, dave.hansen@intel.com,
          casey.schaufler@intel.com, peterz@infradead.org,
          mingo@kernel.org, jkosina@suse.cz, ak@linux.intel.com,
          jcm@redhat.com, asit.k.mallick@intel.com, arjan@linux.intel.com,
          linux-kernel@vger.kernel.org, thomas.lendacky@amd.com,
          hpa@zytor.com, jpoimboe@redhat.com, keescook@chromium.org
In-Reply-To: <20181125185005.559149393@linutronix.de>
References: <20181125185005.559149393@linutronix.de>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/pti] ptrace: Remove unused ptrace_may_access_sched() and
 MODE_IBRS
Git-Commit-ID: 46f7ecb1e7359f183f5bbd1e08b90e10e52164f9
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=1.5 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_24_48,FREEMAIL_FORGED_REPLYTO,
        FREEMAIL_REPLYTO_END_DIGIT autolearn=no autolearn_force=no
        version=3.4.2
X-Spam-Level: *
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  46f7ecb1e7359f183f5bbd1e08b90e10e52164f9
Gitweb:     https://git.kernel.org/tip/46f7ecb1e7359f183f5bbd1e08b90e10e52164f9
Author:     Thomas Gleixner <tglx@linutronix.de>
AuthorDate: Sun, 25 Nov 2018 19:33:50 +0100
Committer:  Thomas Gleixner <tglx@linutronix.de>
CommitDate: Wed, 28 Nov 2018 11:57:11 +0100

ptrace: Remove unused ptrace_may_access_sched() and MODE_IBRS

The IBPB control code in x86 removed the usage. Remove the functionality
which was introduced for this.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Reviewed-by: Ingo Molnar <mingo@kernel.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Jiri Kosina <jkosina@suse.cz>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Andrea Arcangeli <aarcange@redhat.com>
Cc: David Woodhouse <dwmw@amazon.co.uk>
Cc: Tim Chen <tim.c.chen@linux.intel.com>
Cc: Andi Kleen <ak@linux.intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Casey Schaufler <casey.schaufler@intel.com>
Cc: Asit Mallick <asit.k.mallick@intel.com>
Cc: Arjan van de Ven <arjan@linux.intel.com>
Cc: Jon Masters <jcm@redhat.com>
Cc: Waiman Long <longman9394@gmail.com>
Cc: Greg KH <gregkh@linuxfoundation.org>
Cc: Dave Stewart <david.c.stewart@intel.com>
Cc: Kees Cook <keescook@chromium.org>
Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/20181125185005.559149393@linutronix.de


---
 include/linux/ptrace.h | 17 -----------------
 kernel/ptrace.c        | 10 ----------
 2 files changed, 27 deletions(-)

diff --git a/include/linux/ptrace.h b/include/linux/ptrace.h
index 6c2ffed907f5..de20ede2c5c8 100644
--- a/include/linux/ptrace.h
+++ b/include/linux/ptrace.h
@@ -64,15 +64,12 @@ extern void exit_ptrace(struct task_struct *tracer, struct list_head *dead);
 #define PTRACE_MODE_NOAUDIT	0x04
 #define PTRACE_MODE_FSCREDS	0x08
 #define PTRACE_MODE_REALCREDS	0x10
-#define PTRACE_MODE_SCHED	0x20
-#define PTRACE_MODE_IBPB	0x40
 
 /* shorthands for READ/ATTACH and FSCREDS/REALCREDS combinations */
 #define PTRACE_MODE_READ_FSCREDS (PTRACE_MODE_READ | PTRACE_MODE_FSCREDS)
 #define PTRACE_MODE_READ_REALCREDS (PTRACE_MODE_READ | PTRACE_MODE_REALCREDS)
 #define PTRACE_MODE_ATTACH_FSCREDS (PTRACE_MODE_ATTACH | PTRACE_MODE_FSCREDS)
 #define PTRACE_MODE_ATTACH_REALCREDS (PTRACE_MODE_ATTACH | PTRACE_MODE_REALCREDS)
-#define PTRACE_MODE_SPEC_IBPB (PTRACE_MODE_ATTACH_REALCREDS | PTRACE_MODE_IBPB)
 
 /**
  * ptrace_may_access - check whether the caller is permitted to access
@@ -90,20 +87,6 @@ extern void exit_ptrace(struct task_struct *tracer, struct list_head *dead);
  */
 extern bool ptrace_may_access(struct task_struct *task, unsigned int mode);
 
-/**
- * ptrace_may_access - check whether the caller is permitted to access
- * a target task.
- * @task: target task
- * @mode: selects type of access and caller credentials
- *
- * Returns true on success, false on denial.
- *
- * Similar to ptrace_may_access(). Only to be called from context switch
- * code. Does not call into audit and the regular LSM hooks due to locking
- * constraints.
- */
-extern bool ptrace_may_access_sched(struct task_struct *task, unsigned int mode);
-
 static inline int ptrace_reparented(struct task_struct *child)
 {
 	return !same_thread_group(child->real_parent, child->parent);
diff --git a/kernel/ptrace.c b/kernel/ptrace.c
index 80b34dffdfb9..c2cee9db5204 100644
--- a/kernel/ptrace.c
+++ b/kernel/ptrace.c
@@ -261,9 +261,6 @@ static int ptrace_check_attach(struct task_struct *child, bool ignore_state)
 
 static int ptrace_has_cap(struct user_namespace *ns, unsigned int mode)
 {
-	if (mode & PTRACE_MODE_SCHED)
-		return false;
-
 	if (mode & PTRACE_MODE_NOAUDIT)
 		return has_ns_capability_noaudit(current, ns, CAP_SYS_PTRACE);
 	else
@@ -331,16 +328,9 @@ ok:
 	     !ptrace_has_cap(mm->user_ns, mode)))
 	    return -EPERM;
 
-	if (mode & PTRACE_MODE_SCHED)
-		return 0;
 	return security_ptrace_access_check(task, mode);
 }
 
-bool ptrace_may_access_sched(struct task_struct *task, unsigned int mode)
-{
-	return __ptrace_may_access(task, mode | PTRACE_MODE_SCHED);
-}
-
 bool ptrace_may_access(struct task_struct *task, unsigned int mode)
 {
 	int err;
