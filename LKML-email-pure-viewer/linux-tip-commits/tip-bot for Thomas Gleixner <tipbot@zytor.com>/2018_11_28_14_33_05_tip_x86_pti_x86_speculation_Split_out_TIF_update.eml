Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:37:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 329D95802E4;
	Wed, 28 Nov 2018 06:33:52 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 06:33:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3APKv6HhBkxC13MQdRM3S/UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP/7pc2wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOTA5/m/UkMx/jqxbrgy8qRJ4zIHab52aO+dlfqPFf94XXnZBU8VLWiBdGI6w?=
 =?us-ascii?q?c4kCAuwcNuhYtYn9oF4OoAOiBQmtHOPj0yRHhnjq3aYn3eQhFhvG1xE+EdIOt3?=
 =?us-ascii?q?TUqc/6NLwPWu60yKnH0zTDbvxQ2Tjj8ojDbxcsoe2NXbJoasXRzlUvGhjEj1SQ?=
 =?us-ascii?q?tYzlOCmV2v4RvGic6uptTOSigHMppQF2pzig3MYsio/Ri4IW1F/E7yN5z5gxJd?=
 =?us-ascii?q?GiT057e9GkHZ1NvC+ZL4t7Wt0uT31stSog17ELt4C3cDIXxJkk2xLTcf2KfoqQ?=
 =?us-ascii?q?7h7+UOucIi10iG9rdb+9nRq+71SsxvPmWsWp3ltHryxImcTWuH8XzRzc8M2HR+?=
 =?us-ascii?q?N9/ki/3TaP0Bje6v9LIU8qj6rXMZ0hzaAqlpoVr0vDGjX6mELsjK+Zbkkk++6o?=
 =?us-ascii?q?5Pr7Yrj+uJOQK4t5hhvjPqkghMCzG/k0PwsSU2SB+Omx1qXv/UjjT7VLiv02nL?=
 =?us-ascii?q?PZsJffJckDoq65AglV0pss6hqmDDepzs4YnX8ZI1JBYR6HiIboO1fQL/DiFvq/?=
 =?us-ascii?q?nVusnylxx/zcPb3uHI/NLn7dn7flZ7p97FRcyAUrwdBF+51UEq0BIO70WkLpsN?=
 =?us-ascii?q?zYDxw5PBKuz+foFdVwzYceWWOJAq+EP6Leq16I5uQzI+aSYI8ZoiryK/8g5/T2?=
 =?us-ascii?q?l382hUcdfbW13ZsQcH24Hu5pI0SFYXX2hdcNC2cKvhckQ+zsh12PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZmpeEFCDDW/od5mYW/cLcC+SIMhhnSIe?=
 =?us-ascii?q?WbiiTI8h0xeutAjhxrpjL+rU/DAYtJ352Nh04e3TiQ899ThuA8uB1GGNSnl+nn?=
 =?us-ascii?q?kUSD8uwKB/vUt9x0+Z3qhjg/xYEt9T6+lTUgggN57R1Oh6C9H0WgLccdaFUlem?=
 =?us-ascii?q?QtO6AT4vStI92cMBY0F4G9+6lBDMwzKqA6MJl7yMHJE08bjT337rK8Z5ynbJzq?=
 =?us-ascii?q?8hj1Y9T8tLNG2mgLN/9gfJC47IlUWZi7ildaAG0CHR82eDyHKEvFtEXw5oTaXF?=
 =?us-ascii?q?QXcfa1PLotvj+EPNUaWiCbQ9PQtH0s6NNK1KZtrtjVVFQffjPM/TY2awm2e2GB?=
 =?us-ascii?q?aJyamAbIvse2UBwirdDFIInBwU/XaDLQI+HDuuo3rCDDxyElLie17j/vNgqHyl?=
 =?us-ascii?q?VEM0zxuFb0t617Wr/B4YnvicS/IV3rIZtyYtsTR0HFCh393ID9qMvRZufKJZYd?=
 =?us-ascii?q?kl+ldIyXrZtxBhPpynN61iml8ecwFwv0Py1xV2Cp9MkdQwoHMt1gpyLaOY0FVO?=
 =?us-ascii?q?dz6D2ZDwO7vXKnT9/Ry1aq7W3E3e38iS+qsV9Ps4rFDjthmzFkU+63Vnz8VV03?=
 =?us-ascii?q?yE65rQCAodT53wXVg39hRgvL7afzQy6JnS1X1vNqm0rCTP29YoBOsj1xahcM1T?=
 =?us-ascii?q?MKKCFA/uDcIaA9KiJ/Atm1isdhgEJvxd9LYoP8O6cPuLwK6qPPt6kD26l2hG4Y?=
 =?us-ascii?q?B93ViK9ypzUePI25cFw/eF3gqITTv8jVGhstzploBAfz0dAm2/yS38Do5LeqJy?=
 =?us-ascii?q?ZZoLCXupI8Cv3NV+hoLiVGRC9FG+AFMKwsmpdgSIb1z8xAFfyV4YoXi6liSm1T?=
 =?us-ascii?q?x0lDcpo7Gb3CzPxeTiaRUGNnRKRGlkkVfjP4y0g8oGU0ivaggjjAGl6lrix6hH?=
 =?us-ascii?q?uKR/KHHeQEdJfyTsL2BuSLCwtqeEY8NU7JMosCNXUPmzYFyAS779pQca3D3nH2?=
 =?us-ascii?q?dE2D87cDSqsI3jnxNmkGKdMGpzrH3BdMFy3xjf/t/cRf1W3jYcXyl3kzrXBlu9?=
 =?us-ascii?q?P9mv49qUkYzOsuS/V2KnS51SfjPnzYKGtCun+2JqBQezkOy0mt3iCQI6yzP018?=
 =?us-ascii?q?F2VSXUqxbxeonq2L69Me59fEloBVn85tF+GoF/lIswmZ4R1WIbhpWT4XoIj2Pz?=
 =?us-ascii?q?Pc9H1qL5aXoHXSQLzMLN4Aj5xE1jKWqEx4HjWXWc2MdhZ8S6bXkQ2iIy9M1KDK?=
 =?us-ascii?q?aU7LpZnSp6uFa4rATRYeRjkTcZ0/ch9Hkag+QRsgo30iqdGqwSHVVfPSH0khSI?=
 =?us-ascii?q?7tO+o79NaGehb7ewz1Z+ks67DL6ZvA5cQnn5d4wmHS9x6MV/LV3N3Gfy6oHiZN?=
 =?us-ascii?q?nfc9YTugeInBfHiuhfMIgxmeYShSp7JWL9umUoy/I8jRxrx527vZKIK2Nw/KKi?=
 =?us-ascii?q?GR5YNyb4Z8cS+jHrkKZfkdya34GpHpV9BDoLWIHkQu6vEDIXrf7nLRqBECUgqn?=
 =?us-ascii?q?eHHrrSBRSQ511hr3LLDpCnLXWXJGQCwNVmRRmdIlFfgQ8OUDU7mJ45Ch6lxMj7?=
 =?us-ascii?q?fEhl4TAR40byqgFQxeJwKxn/TmDfqR+qajguTZiQMgFW4hte50vPMsye8+FzHz?=
 =?us-ascii?q?xe/pK7twyAMWibZwVODWEUVU2IHVHjPr+y5dbe9+iUHPaxL/zLYb+Ws+xRS++I?=
 =?us-ascii?q?xY6z0oth5zuNNsKPPmR7D/0mwEVDW2p1G9/emzUJRCwajCbNb8+dpBeh9Sx7tM?=
 =?us-ascii?q?G/8PL3WA3x4YuDEaddMdJq+xqum6eMK/aQhDplKTZfzp4MxWHHyLkc3F4RiiFi?=
 =?us-ascii?q?bTqtEa4HtS7CUq3QgLJXDwUAZiN3NctI6b883wZXNc7ajNP1yqB3jvovB1hZUl?=
 =?us-ascii?q?zhn9mjZdYWLGGlKFPHGEGLOaycKj3W2M73e72zSL1KgOVQth29ojKbE07lPjSe?=
 =?us-ascii?q?mDjlTRGvMedQjC6FOBxSop2ychFoCWL7VtLpdgW7MMNrjT0x2bA0mnLKNWsGPT?=
 =?us-ascii?q?dgaU9Csr2Q4j1egvhkH2xB73xlLfSLmiqD7unYLIoWvuVvAihui+1a53E6waNP?=
 =?us-ascii?q?7C5YXPx1hDfSrtl2rlCmiOaPzD9nUBtIqjlThYOLvV9tOaPW9pRbXXbE/RQN7X?=
 =?us-ascii?q?ifChgQpttlDMHvtL5UytTViK3zLzJCoJro+p4YBs7JOIebMWJkOh3sHT/IFyMb?=
 =?us-ascii?q?QjOxc2LSnUpQlLeV7HLGlJUironQn88MUrhaUVYyG9sAB0hlFcBEK5ByGnshkL?=
 =?us-ascii?q?iUi+YL6GC4oR2XQ99V+tjDUfSdBPzpeW3I0ZFLYhIJxfXzKoFXfpH63gppLFJ6?=
 =?us-ascii?q?kYLiH0vWQMALoyt9Ywtyq0JItDB8TWoo2kTsQhiw+3JVHuzw1hw9jyNkbOgt/S?=
 =?us-ascii?q?uq6FAyYhLFviY/k0kZndTjnCCfdyP3IK6sXIZQTS3uuAx5OZrgThczdgaylFFq?=
 =?us-ascii?q?MDreb7NXk7ZkM2tsjUuUpZtIHPdHC6lJZhMZzvKGT/wt3RJXrSDjjUtG4/bVTJ?=
 =?us-ascii?q?hvjg0ndbayoH9anQFudtg4IerXPqUNhlRZmK/Iviauze036A4YO0sJtmiVfWpA?=
 =?us-ascii?q?uFQBHqs3Oy2yuOdr7EjKhzxZZmEIW+ECpvNs61N4NeOdyS7pz79ELAa2LePbZ6?=
 =?us-ascii?q?CUtnPLksmLalgwzEQNllRAu79s3oNrelCWXkYHyLqXCgRPNMzeJAUTZM1XsDDa?=
 =?us-ascii?q?fg6KsOPQ0dR0OZmwEqbjSurK/K8dmEmtGgkkN54B4sQIAt+n10ScZcv4KaEtwB?=
 =?us-ascii?q?Ak9gPtYl6CSulKPFqPjSsAi8Ky1pl62c9aPD5ZSWxmMDnx5fDSrwsugfGAdNYw?=
 =?us-ascii?q?fnoeGIADMzZ+RMK+iwZdvnJdECOw1OMJjgSPq3fkqzjdFivUbtxtfv6YaBpgTt?=
 =?us-ascii?q?as9nF3/6GoiFKR+dPFO2zlPM5+kt7J9e4e4Z2ADqB6V7545lvdg8xSQGDiXWnV?=
 =?us-ascii?q?WeK1IJ35cMEDadH1GnC3SBTrlzMtRcDtFMS8Mq+SxwrvQNAH48GgwDk/OJrlRX?=
 =?us-ascii?q?klEBBqqrRb6Q=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A4AABDpv5bh0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?QGCaIECJ4N5iHeLKQGCIYMDhXmFXoFzhmEggVMSAQEYCwgBh24iNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMQgEQAYFiIoJlAwMBAggYCAEGAUYGCQEBJAImAgIDH?=
 =?us-ascii?q?g4BDgEYGQUDgxkBgWkBAQEVBQqmNoEvDRGEDwGBA4I8BAoZDYIXBRN4iwsXgX+?=
 =?us-ascii?q?GeoUuglcCiSmGco86GC4Jhn2HCINEgVqJYgoBET+Efol5g1uBC4lCAgQCBAUCF?=
 =?us-ascii?q?Fpsgg1NIxWBbw4LAQwEBoEIE4IUF4hehWAeATIBAQh7AQGEVIhfAQE?=
X-IPAS-Result: =?us-ascii?q?A0A4AABDpv5bh0O0hNFkHgEGBwaBUQkLAQGCaIECJ4N5iHe?=
 =?us-ascii?q?LKQGCIYMDhXmFXoFzhmEggVMSAQEYCwgBh24iNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMQgEQAYFiIoJlAwMBAggYCAEGAUYGCQEBJAImAgIDHg4BDgEYGQUDgxk?=
 =?us-ascii?q?BgWkBAQEVBQqmNoEvDRGEDwGBA4I8BAoZDYIXBRN4iwsXgX+GeoUuglcCiSmGc?=
 =?us-ascii?q?o86GC4Jhn2HCINEgVqJYgoBET+Efol5g1uBC4lCAgQCBAUCFFpsgg1NIxWBbw4?=
 =?us-ascii?q?LAQwEBoEIE4IUF4hehWAeATIBAQh7AQGEVIhfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="52984850"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 06:33:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728614AbeK2Bfg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 20:35:36 -0500
Received: from terminus.zytor.com ([198.137.202.136]:54071 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727872AbeK2Bfg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 20:35:36 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wASEX5bL2324011
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Wed, 28 Nov 2018 06:33:05 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wASEX5sl2324008;
        Wed, 28 Nov 2018 06:33:05 -0800
Date: Wed, 28 Nov 2018 06:33:05 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Thomas Gleixner <tipbot@zytor.com>
Message-ID: <tip-e6da8bb6f9abb2628381904b24163c770e630bac@git.kernel.org>
Cc: aarcange@redhat.com, asit.k.mallick@intel.com, luto@kernel.org,
        dwmw@amazon.co.uk, tglx@linutronix.de, david.c.stewart@intel.com,
        peterz@infradead.org, ak@linux.intel.com, dave.hansen@intel.com,
        keescook@chromium.org, torvalds@linux-foundation.org,
        hpa@zytor.com, arjan@linux.intel.com, longman9394@gmail.com,
        jpoimboe@redhat.com, mingo@kernel.org, jcm@redhat.com,
        gregkh@linuxfoundation.org, tim.c.chen@linux.intel.com,
        jkosina@suse.cz, thomas.lendacky@amd.com,
        linux-kernel@vger.kernel.org, casey.schaufler@intel.com
Reply-To: jpoimboe@redhat.com, mingo@kernel.org, longman9394@gmail.com,
          tim.c.chen@linux.intel.com, jkosina@suse.cz, jcm@redhat.com,
          gregkh@linuxfoundation.org, casey.schaufler@intel.com,
          thomas.lendacky@amd.com, linux-kernel@vger.kernel.org,
          dave.hansen@intel.com, hpa@zytor.com,
          torvalds@linux-foundation.org, keescook@chromium.org,
          arjan@linux.intel.com, ak@linux.intel.com, aarcange@redhat.com,
          dwmw@amazon.co.uk, luto@kernel.org, asit.k.mallick@intel.com,
          tglx@linutronix.de, peterz@infradead.org,
          david.c.stewart@intel.com
In-Reply-To: <20181125185005.652305076@linutronix.de>
References: <20181125185005.652305076@linutronix.de>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/pti] x86/speculation: Split out TIF update
Git-Commit-ID: e6da8bb6f9abb2628381904b24163c770e630bac
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=1.5 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_24_48,FREEMAIL_FORGED_REPLYTO,
        FREEMAIL_REPLYTO_END_DIGIT autolearn=no autolearn_force=no
        version=3.4.2
X-Spam-Level: *
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  e6da8bb6f9abb2628381904b24163c770e630bac
Gitweb:     https://git.kernel.org/tip/e6da8bb6f9abb2628381904b24163c770e630bac
Author:     Thomas Gleixner <tglx@linutronix.de>
AuthorDate: Sun, 25 Nov 2018 19:33:51 +0100
Committer:  Thomas Gleixner <tglx@linutronix.de>
CommitDate: Wed, 28 Nov 2018 11:57:12 +0100

x86/speculation: Split out TIF update

The update of the TIF_SSBD flag and the conditional speculation control MSR
update is done in the ssb_prctl_set() function directly. The upcoming prctl
support for controlling indirect branch speculation via STIBP needs the
same mechanism.

Split the code out and make it reusable. Reword the comment about updates
for other tasks.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Reviewed-by: Ingo Molnar <mingo@kernel.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Jiri Kosina <jkosina@suse.cz>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Andrea Arcangeli <aarcange@redhat.com>
Cc: David Woodhouse <dwmw@amazon.co.uk>
Cc: Tim Chen <tim.c.chen@linux.intel.com>
Cc: Andi Kleen <ak@linux.intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Casey Schaufler <casey.schaufler@intel.com>
Cc: Asit Mallick <asit.k.mallick@intel.com>
Cc: Arjan van de Ven <arjan@linux.intel.com>
Cc: Jon Masters <jcm@redhat.com>
Cc: Waiman Long <longman9394@gmail.com>
Cc: Greg KH <gregkh@linuxfoundation.org>
Cc: Dave Stewart <david.c.stewart@intel.com>
Cc: Kees Cook <keescook@chromium.org>
Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/20181125185005.652305076@linutronix.de

---
 arch/x86/kernel/cpu/bugs.c | 35 +++++++++++++++++++++++------------
 1 file changed, 23 insertions(+), 12 deletions(-)

diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c
index 7c946a9af947..3b65a53d2c33 100644
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -702,10 +702,29 @@ static void ssb_select_mitigation(void)
 #undef pr_fmt
 #define pr_fmt(fmt)     "Speculation prctl: " fmt
 
-static int ssb_prctl_set(struct task_struct *task, unsigned long ctrl)
+static void task_update_spec_tif(struct task_struct *tsk, int tifbit, bool on)
 {
 	bool update;
 
+	if (on)
+		update = !test_and_set_tsk_thread_flag(tsk, tifbit);
+	else
+		update = test_and_clear_tsk_thread_flag(tsk, tifbit);
+
+	/*
+	 * Immediately update the speculation control MSRs for the current
+	 * task, but for a non-current task delay setting the CPU
+	 * mitigation until it is scheduled next.
+	 *
+	 * This can only happen for SECCOMP mitigation. For PRCTL it's
+	 * always the current task.
+	 */
+	if (tsk == current && update)
+		speculation_ctrl_update_current();
+}
+
+static int ssb_prctl_set(struct task_struct *task, unsigned long ctrl)
+{
 	if (ssb_mode != SPEC_STORE_BYPASS_PRCTL &&
 	    ssb_mode != SPEC_STORE_BYPASS_SECCOMP)
 		return -ENXIO;
@@ -716,28 +735,20 @@ static int ssb_prctl_set(struct task_struct *task, unsigned long ctrl)
 		if (task_spec_ssb_force_disable(task))
 			return -EPERM;
 		task_clear_spec_ssb_disable(task);
-		update = test_and_clear_tsk_thread_flag(task, TIF_SSBD);
+		task_update_spec_tif(task, TIF_SSBD, false);
 		break;
 	case PR_SPEC_DISABLE:
 		task_set_spec_ssb_disable(task);
-		update = !test_and_set_tsk_thread_flag(task, TIF_SSBD);
+		task_update_spec_tif(task, TIF_SSBD, true);
 		break;
 	case PR_SPEC_FORCE_DISABLE:
 		task_set_spec_ssb_disable(task);
 		task_set_spec_ssb_force_disable(task);
-		update = !test_and_set_tsk_thread_flag(task, TIF_SSBD);
+		task_update_spec_tif(task, TIF_SSBD, true);
 		break;
 	default:
 		return -ERANGE;
 	}
-
-	/*
-	 * If being set on non-current task, delay setting the CPU
-	 * mitigation until it is next scheduled.
-	 */
-	if (task == current && update)
-		speculation_ctrl_update_current();
-
 	return 0;
 }
 
