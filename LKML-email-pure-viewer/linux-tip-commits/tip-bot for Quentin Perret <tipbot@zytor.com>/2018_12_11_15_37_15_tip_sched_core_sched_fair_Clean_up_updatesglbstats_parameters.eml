Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:48:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9E42258079D;
	Tue, 11 Dec 2018 07:40:47 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 07:40:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2MMS/RTSiTxGmj1XZUdDptAmYdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YxSGt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/ZisJ+j7hbrxCvpxJh3oDaZ46aOvVicazAZtMaXWhMU91NVyFCGI6w?=
 =?us-ascii?q?c5ECA/YDMOtesoLzp0EOrRy7BQS0GOPvyydIimbt0q09z+QqDA/G3As6H9kTq3?=
 =?us-ascii?q?rUscv6NKEOUeC0yqnD0C/NYO1M2Tfn9ofIbg0qrPaQXbJxacre0k4vFx/eg1SR?=
 =?us-ascii?q?qY3lIzSV1v4Xv2eH6OpgUPuihmg6oA9/pTivw90jiojPho8NyVDL6z95wIArKt?=
 =?us-ascii?q?28UkJ7ZsSkEJRWuiqHNIV2WtsvT390tCs+0LEKpJC2cDYQxJg6xBPTd+aLfomK?=
 =?us-ascii?q?7x77SeqcJTR1iGh4dL+xhRu+61asxvHiWsWuzVpHoCtIn9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/laIUA7i6XbMYQtwr0umZoJt0TMACv2lF/xjK+MeUUo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwXkPqgzlMGzH/40PhUNUmSH4+ix1b/u8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5Bw5V0oA+6xewFjum08oXnWMBLF1bfBKLlo/pOl/IIP/mF/ey?=
 =?us-ascii?q?mEqskDh1yPDcJLHhAYvCLmLFkLj/ebZx8UlcyBA8zdxH/ZJbFqkBIO7vWk/2rN?=
 =?us-ascii?q?HYCh45Mw+qzOr9B9R9y5gTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lXU5g0MSfbG13ZsLb3C1BvRmLF+YYXrwmNgBFn0GvgojTOPwjl2CXiVeZ3KzX6?=
 =?us-ascii?q?I6+zE6B5iqDYbFRoCxnrOB2D23EYFRZmBDElqMC2vnd52YW/cQbyKfOs1hkjsa?=
 =?us-ascii?q?WrS7SI8h0heutAn9y7d8KurU+ysYtY/s1dRv5u3Tkw0y+iJwD8iHz26NSGR0lH?=
 =?us-ascii?q?sSRzAqxKB/vVB9ylCb3KdimPxYFdtT5/BTXgcgL5Hczfd3C9TzWgLHY9eIR0yq?=
 =?us-ascii?q?QtSgATEtUN0xx8UCbFp6G9WnlhrDxTalA6cJl7yXA5w56qHc0GL3J8pnz3bG1b?=
 =?us-ascii?q?Muj18pQsZUMW2mh6h/9xXcBoLTkkWZkbqqeroY3CLX6GiDym+OtllCUAFsSaXF?=
 =?us-ascii?q?QWwfZkzOoNvk/EzCUaGhBa4nMgRbz86CMbVFatvugVVCR/fjPdDebnm1m2exAx?=
 =?us-ascii?q?aI27yNYJDre2UbwCXSFkwEnxoP8naBMAg0Hj2hrH7GDDxyCVLvZFvh/vRkp3Ol?=
 =?us-ascii?q?UEA41QGKYFdn17qu5BEVg+eRS/cS3rICpScgpC94HFe739LKFdWAoxBtc7lbYd?=
 =?us-ascii?q?M4+F1Hz37WtxRhPpy8KKBvnkIecwVyv0PpyxV3CoVBndI2rH8wywpyM6aY0FJH?=
 =?us-ascii?q?dzOXxp3wPrzXKm/v/BGgcaLW21fe0MqI9acL8vg3t1LjvASxHEo473pny8VV02?=
 =?us-ascii?q?eb5pjSFgUSVYz+U0kp+Bl6vb3VeTQ96J7O2n1qMqm0tSHC1sktBOskzBagYthe?=
 =?us-ascii?q?PLmFFA/0D80VGcyuJPY2lFiuaxIOJPpS+7IsP8O6a/uG37amPeZ9nD68kWtL+o?=
 =?us-ascii?q?F80kKW+Cp6Re7FxJIFw/Ce3guaWDbwllahssbrmY9aYTEeBHawyS/hBIRJfK19?=
 =?us-ascii?q?YZ4LCXuyI82w3th+nZ/tVGJC+165GlwG39WleRyMYFzn3A1czFgYrmajmSSl0T?=
 =?us-ascii?q?N0iTYprqyE0SzKwuTicgcHO2FRSGlji1fsPZa7j9QAUEe0aAgpkQOv5VzmyKhD?=
 =?us-ascii?q?uKR/M27TTF9Ifij3NW1jUrG8tqGfY85J854otSRXUOKhYVGVULL9oh0a0z/9EG?=
 =?us-ascii?q?ta3jw0azaqupDhlRxglG2dNGpzrGbeecxoxxfQ/sbcRf1S3joBXiV4kiPYBlu/?=
 =?us-ascii?q?P9mo+9WbiZHDv/u6V2KgUJ1TbCbqwZmBtCu9+W1lHxm/k+qvld3gFAgwyTX72M?=
 =?us-ascii?q?VyVSXUsBb8ZZHm1qSgPuJgZEVoBl7868xhF4F6k4swgowQ2HcAipWU+3oHjXn8?=
 =?us-ascii?q?MdFB1a3ia3oNQCYBw8TJ7wj9xE1jMnWJypr6VnqHw8ttfdm6Yn4M1SI74MBHE6?=
 =?us-ascii?q?OU7L1CnStorVu0twPRYf5hnjgDzfsi8mIVg+YMuAA11CWSHqgSHVVEPSzrjxmI?=
 =?us-ascii?q?6tG+rKZNa2q1f7m/ylF+ncy/A7GYuQ5TRmz5epg5EC9078V/Nk/M0XLp5oHlft?=
 =?us-ascii?q?nQccwcthmOnxjciOhVLYo7luAWiip/JWL9oXolxvYnjRxp2JG2pomGJH9r/KKk?=
 =?us-ascii?q?GR5YLTz1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS51x8oHLIF5CrKmubJH0Ezdh5QBmdJUpfgB0bXTkgn545EByqy9Ll?=
 =?us-ascii?q?cEtj+j8R4Vv4oANWyu10Lxn/TnvfpACwZzc2UpefKQRZ7hpY60fJK8Ce7f9zHy?=
 =?us-ascii?q?JF/p2ntgONMXeWZwBJDWEPR0yFCErvPrio5dnc7eeYAvCyIOfJYbWLseZeTeuH?=
 =?us-ascii?q?xYqz0ot6+DaBLsWOPn5/D/0ix0pMR3Z5F97CmzUITSwXmDnAb8qapBe65y12od?=
 =?us-ascii?q?qz8PXtWALz+4SPD6FePslo+xCzma2DLfKfhD5lKTZE0ZMB3X/Ix6Ye3F4RiCFu?=
 =?us-ascii?q?diOhEbcatS7KQ6LfhLVXDwMAay5oMMtI7qQ83hRCOMLBi9P10KJ4geAxC1tfSV?=
 =?us-ascii?q?PhncSpb9QQI26hLFPHGFqLNLOeKDLR3sH4erm8RqNQjelOsx2wuC2WE0viPjSF?=
 =?us-ascii?q?ijnoWAqjMeBKjCGHIhNevJuxfQpqCWjmVNjmcAG0MMdrjT0qxr05nm/KNW8ZMT?=
 =?us-ascii?q?Rmb0xBtKGf7SNGjfV5AGFB6ntlLe+ZmyeW9eXYK5AWsed1DSRwje5V/HM6y75N?=
 =?us-ascii?q?5iFeWPN1gDfSrsJpo1y+kuiA0DxnUB9PqjZNnI2KvEViNr/f9plPQnvE+BMN7W?=
 =?us-ascii?q?ONCxUFvddlC9vvu7xOxdjLjq78NDBC89eHtfcbUszVLt+XdWYgKV/iHzvRDRce?=
 =?us-ascii?q?ZSCkOHuZhEFHlvyWsHqPocsAp4DoiaYJH7JVXUExCtsVD1QjENFGaIl+Wj4ijb?=
 =?us-ascii?q?+dytUD5XyzrRXcXu1TpJWBXfWXRb32NTufkbhCIQMF26n1MawaLIi90EtnLhF6?=
 =?us-ascii?q?hI3iCVvMWsoLqSpkKkcwoUNQ4D19Q3c11kbNdAyg+jkQGOSykxpwjRFxJawo9T?=
 =?us-ascii?q?Hj5H80K0DMqS92l1M+3Z35jjSBWDrwKrqsR4ZQCjqyu0V1eov2XwtvfyWzm0J+?=
 =?us-ascii?q?PTvJTr4XiKFvMSh3jxXCsJ9DAtZYTKtZcFoewuyRa/w00FNa7CK9yhxp/+zAXI?=
 =?us-ascii?q?djjE4gdoLkoXVakzt+YdgpJKqYHKdT1FVMzvaSvzei0fwZ0h4CIFxL+2SXLn1b?=
 =?us-ascii?q?8HcUP6UrcnL7ttdn7haPzmNO?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AjAAAQ2Q9ch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIng3uIeIswAYIhiH+FYoNhhHwUDIEEA0wSAQEYDQYBhy4iNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYigmUDAwECCxUEBQYBMhQGCQEBJAImAgIDHg4oG?=
 =?us-ascii?q?QUDgxkBgWkBAQEVBQqlQnwzHoQPAQMDfYItASMNghcFE3iLMBeBf4Z6ghKDHIJ?=
 =?us-ascii?q?XAok7hwGPeRguCYcJhxmDR4FcigKFYiyJfINugQ6JaAIEAgQFAhSBRm2BIU0jF?=
 =?us-ascii?q?YFvDgsBDIESE4IUF4hehWAeATIBAQEHewEBimEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AjAAAQ2Q9ch0O0hNFkHgEGBwaBUQkLAYJpgQIng3uIeIs?=
 =?us-ascii?q?wAYIhiH+FYoNhhHwUDIEEA0wSAQEYDQYBhy4iNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYigmUDAwECCxUEBQYBMhQGCQEBJAImAgIDHg4oGQUDgxkBgWkBAQE?=
 =?us-ascii?q?VBQqlQnwzHoQPAQMDfYItASMNghcFE3iLMBeBf4Z6ghKDHIJXAok7hwGPeRguC?=
 =?us-ascii?q?YcJhxmDR4FcigKFYiyJfINugQ6JaAIEAgQFAhSBRm2BIU0jFYFvDgsBDIESE4I?=
 =?us-ascii?q?UF4hehWAeATIBAQEHewEBimEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="141658919"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 07:40:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727180AbeLKPhm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 10:37:42 -0500
Received: from terminus.zytor.com ([198.137.202.136]:46635 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726448AbeLKPhm (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 10:37:42 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBBFbFsG4043231
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Tue, 11 Dec 2018 07:37:15 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBBFbFSN4043228;
        Tue, 11 Dec 2018 07:37:15 -0800
Date: Tue, 11 Dec 2018 07:37:15 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Quentin Perret <tipbot@zytor.com>
Message-ID: <tip-630246a06ae2a7a12d1fce85f1e5681032982791@git.kernel.org>
Cc: torvalds@linux-foundation.org, peterz@infradead.org,
        tglx@linutronix.de, mingo@kernel.org, linux-kernel@vger.kernel.org,
        hpa@zytor.com, quentin.perret@arm.com, valentin.schneider@arm.com,
        efault@gmx.de
Reply-To: efault@gmx.de, valentin.schneider@arm.com,
          quentin.perret@arm.com, hpa@zytor.com,
          linux-kernel@vger.kernel.org, mingo@kernel.org,
          tglx@linutronix.de, peterz@infradead.org,
          torvalds@linux-foundation.org
In-Reply-To: <20181203095628.11858-12-quentin.perret@arm.com>
References: <20181203095628.11858-12-quentin.perret@arm.com>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:sched/core] sched/fair: Clean-up update_sg_lb_stats parameters
Git-Commit-ID: 630246a06ae2a7a12d1fce85f1e5681032982791
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-0.8 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        FREEMAIL_FORGED_REPLYTO,T_DATE_IN_FUTURE_96_Q autolearn=no
        autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  630246a06ae2a7a12d1fce85f1e5681032982791
Gitweb:     https://git.kernel.org/tip/630246a06ae2a7a12d1fce85f1e5681032982791
Author:     Quentin Perret <quentin.perret@arm.com>
AuthorDate: Mon, 3 Dec 2018 09:56:24 +0000
Committer:  Ingo Molnar <mingo@kernel.org>
CommitDate: Tue, 11 Dec 2018 15:17:01 +0100

sched/fair: Clean-up update_sg_lb_stats parameters

In preparation for the introduction of a new root domain flag which can
be set during load balance (the 'overutilized' flag), clean-up the set
of parameters passed to update_sg_lb_stats(). More specifically, the
'local_group' and 'local_idx' parameters can be removed since they can
easily be reconstructed from within the function.

While at it, transform the 'overload' parameter into a flag stored in
the 'sg_status' parameter hence facilitating the definition of new flags
when needed.

Suggested-by: Peter Zijlstra <peterz@infradead.org>
Suggested-by: Valentin Schneider <valentin.schneider@arm.com>
Signed-off-by: Quentin Perret <quentin.perret@arm.com>
Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Mike Galbraith <efault@gmx.de>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: adharmap@codeaurora.org
Cc: chris.redpath@arm.com
Cc: currojerez@riseup.net
Cc: dietmar.eggemann@arm.com
Cc: edubezval@gmail.com
Cc: gregkh@linuxfoundation.org
Cc: javi.merino@kernel.org
Cc: joel@joelfernandes.org
Cc: juri.lelli@redhat.com
Cc: morten.rasmussen@arm.com
Cc: patrick.bellasi@arm.com
Cc: pkondeti@codeaurora.org
Cc: rjw@rjwysocki.net
Cc: skannan@codeaurora.org
Cc: smuckle@google.com
Cc: srinivas.pandruvada@linux.intel.com
Cc: thara.gopinath@linaro.org
Cc: tkjos@google.com
Cc: vincent.guittot@linaro.org
Cc: viresh.kumar@linaro.org
Link: https://lkml.kernel.org/r/20181203095628.11858-12-quentin.perret@arm.com
Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 kernel/sched/fair.c  | 27 +++++++++++----------------
 kernel/sched/sched.h |  3 +++
 2 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index a31a6d325901..e04f29098ec7 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -7905,16 +7905,16 @@ static bool update_nohz_stats(struct rq *rq, bool force)
  * update_sg_lb_stats - Update sched_group's statistics for load balancing.
  * @env: The load balancing environment.
  * @group: sched_group whose statistics are to be updated.
- * @load_idx: Load index of sched_domain of this_cpu for load calc.
- * @local_group: Does group contain this_cpu.
  * @sgs: variable to hold the statistics for this group.
- * @overload: Indicate pullable load (e.g. >1 runnable task).
+ * @sg_status: Holds flag indicating the status of the sched_group
  */
 static inline void update_sg_lb_stats(struct lb_env *env,
-			struct sched_group *group, int load_idx,
-			int local_group, struct sg_lb_stats *sgs,
-			bool *overload)
+				      struct sched_group *group,
+				      struct sg_lb_stats *sgs,
+				      int *sg_status)
 {
+	int local_group = cpumask_test_cpu(env->dst_cpu, sched_group_span(group));
+	int load_idx = get_sd_load_idx(env->sd, env->idle);
 	unsigned long load;
 	int i, nr_running;
 
@@ -7938,7 +7938,7 @@ static inline void update_sg_lb_stats(struct lb_env *env,
 
 		nr_running = rq->nr_running;
 		if (nr_running > 1)
-			*overload = true;
+			*sg_status |= SG_OVERLOAD;
 
 #ifdef CONFIG_NUMA_BALANCING
 		sgs->nr_numa_running += rq->nr_numa_running;
@@ -7954,7 +7954,7 @@ static inline void update_sg_lb_stats(struct lb_env *env,
 		if (env->sd->flags & SD_ASYM_CPUCAPACITY &&
 		    sgs->group_misfit_task_load < rq->misfit_task_load) {
 			sgs->group_misfit_task_load = rq->misfit_task_load;
-			*overload = 1;
+			*sg_status |= SG_OVERLOAD;
 		}
 	}
 
@@ -8099,17 +8099,14 @@ static inline void update_sd_lb_stats(struct lb_env *env, struct sd_lb_stats *sd
 	struct sched_group *sg = env->sd->groups;
 	struct sg_lb_stats *local = &sds->local_stat;
 	struct sg_lb_stats tmp_sgs;
-	int load_idx;
-	bool overload = false;
 	bool prefer_sibling = child && child->flags & SD_PREFER_SIBLING;
+	int sg_status = 0;
 
 #ifdef CONFIG_NO_HZ_COMMON
 	if (env->idle == CPU_NEWLY_IDLE && READ_ONCE(nohz.has_blocked))
 		env->flags |= LBF_NOHZ_STATS;
 #endif
 
-	load_idx = get_sd_load_idx(env->sd, env->idle);
-
 	do {
 		struct sg_lb_stats *sgs = &tmp_sgs;
 		int local_group;
@@ -8124,8 +8121,7 @@ static inline void update_sd_lb_stats(struct lb_env *env, struct sd_lb_stats *sd
 				update_group_capacity(env->sd, env->dst_cpu);
 		}
 
-		update_sg_lb_stats(env, sg, load_idx, local_group, sgs,
-						&overload);
+		update_sg_lb_stats(env, sg, sgs, &sg_status);
 
 		if (local_group)
 			goto next_group;
@@ -8175,8 +8171,7 @@ next_group:
 
 	if (!env->sd->parent) {
 		/* update overload indicator if we are at root domain */
-		if (READ_ONCE(env->dst_rq->rd->overload) != overload)
-			WRITE_ONCE(env->dst_rq->rd->overload, overload);
+		WRITE_ONCE(env->dst_rq->rd->overload, sg_status & SG_OVERLOAD);
 	}
 }
 
diff --git a/kernel/sched/sched.h b/kernel/sched/sched.h
index 2b3cf356e958..d4d984846924 100644
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@ -716,6 +716,9 @@ struct perf_domain {
 	struct rcu_head rcu;
 };
 
+/* Scheduling group status flags */
+#define SG_OVERLOAD		0x1 /* More than one runnable task on a CPU. */
+
 /*
  * We add the notion of a root-domain which will be used to define per-domain
  * variables. Each exclusive cpuset essentially defines an island domain by
