Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 19:49:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6B27F580435;
	Tue, 11 Dec 2018 02:37:17 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 11 Dec 2018 02:37:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+R4bDxdjiWTZLCMkC3w4hL5RlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc69ZRWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/m/XhMJzlqJUohyhqQJizYDTb46bO+Zxcb7GfdMCR2dMRdpRWi9bD4+g?=
 =?us-ascii?q?dYYDE+gMMOBFpIf9vVsOqh6+CBGiCOPzyz9Inmb60rY90+Q9DArG0gsgH8gTu3?=
 =?us-ascii?q?rRrdX1LqYSUeSxzKLV0TjPde5d1yr96IjVbhAuv/SMXbVuccbf1EIiEB/FjlSI?=
 =?us-ascii?q?qYP+ODOVyv8Asmmb7up8UuKvkXQrpB12ojiq38ohjJTCiIwSylDB7yp5wYA1KM?=
 =?us-ascii?q?W3SUFlZ96kCIFQtyaYN4RoXswiX3tkuCEgyr0JoZK7fzYFyI4hxxHBb/yLaY+I?=
 =?us-ascii?q?4gjsVOuXPDx2h2pldaqhixqu9UWs0PDwW8eq3FpQsyZIkcXAumoM2hHR8sSLV/?=
 =?us-ascii?q?9w80S71TqS2Q3e6PtILV4omabFMZIt37A9m5sVvE/eBCH5gl/2g7WTdkg8+uin?=
 =?us-ascii?q?9eDnYrL+q5+COI97lBv+Pr4tmsOhG+Q4NBYBX2yB9eS7zr3j8lX1QLRMjvIojq?=
 =?us-ascii?q?nUqI7WKdgfq6KjHgNY3Jgv5wyiAzqlzNgUh3gKIVBddBKClYfpOlXOIP7iDfe4?=
 =?us-ascii?q?hlShiDNrx/HAPr38DZTBN3vDn6n7fbZ79UFczBM/zddR5pJSFL4BOun+WlH+tN?=
 =?us-ascii?q?PGFB81KQ+0zPj9CNV7yIweXXiDAqiDMKPdqVOI/P4gI/GQZI8JvzbwM/wl5//t?=
 =?us-ascii?q?jXAng1MccrSp0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD5Zf2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoC3j7yAwCe0BJpWanpGClCRC3jocYqEVuwIaCKTJM9hjzMF?=
 =?us-ascii?q?WaKgS48nyRGhqgv6x6B7IerT/y0SrYjj28Rt5+3PiREy8iR5D8aa026TVW10nW?=
 =?us-ascii?q?QIRzkw3KB4ukF9zlaD0a5lg/1XD9BT5vVJUhskOp7Y1eB1F9fyWgfZdNeTVFmm?=
 =?us-ascii?q?WsmmAS02Tt8p2dAOeEZ9G9KhjhzZxSqlGb0VmqePBJw19KLcwnfwK9x8y3bAyK?=
 =?us-ascii?q?kukV0mTtFTOm2hg6517xLTCJLRk0WFi6aqcrwR3C3X+2eF12aOuEBYXxR2UaXK?=
 =?us-ascii?q?Rn0fYkrWrdLk5kLNVbOuCLInMhdfxs6GMKdFdtrpjVBeTvf5JNvee36xm3u3BR?=
 =?us-ascii?q?uQ27yDdpTqdHsH0CXdEkcElRsT8miANQQ5AiehoGfeDDh1GFLrYkPs9/R+qXyh?=
 =?us-ascii?q?Qk81yQGKc1Nu176v9hEJgvycTusZ3qgYtyc5tzV0AFG90srLBNWauQpuYr9QYd?=
 =?us-ascii?q?Mn71dBzmLWqQp9M4ekL6BjgF4ebgt2s1nv1xVxFoVPj8wqoGk2wwp1LKKSyElB?=
 =?us-ascii?q?eC+A3ZDsJr3XLXH//Ayua67T3VHezNaW+6cV5PQksVnjuxupFk4j83Vh3NlYyH?=
 =?us-ascii?q?+c5pTMDAoPXpP9SEc39x5mp77EZikx/Z/b1XppMaOsqD/Nx8opBPc5yhanZ9pQ?=
 =?us-ascii?q?KqeEGxH9EsIEB8miMvclm0W0YR0eOuBS96k0P929evuC2a6rOvtgnT28gWRG5o?=
 =?us-ascii?q?B9zlyD9y5mRuHU2JYFxumS3hGbWDfkkFehrsf3lJhEZDEPBGaw1TLoBY9RZqJo?=
 =?us-ascii?q?e4YLBnyjI8m2xtV4mp7sVGRU9F+lB1MaxsCpfQCeYED63Q1VzU4Xu2ComTOkzz?=
 =?us-ascii?q?xolDEktrCf3C3SzOv4bhoIJ2lLSHNkjVjyO4i0jskWU1SyYAgtiRSq+1z6x69d?=
 =?us-ascii?q?pKlkK2nTQEFIfzX5Lm14U6uwsKaCbNBL6J8yrSpXV+G8a0iASrHhuxsazz/jH2?=
 =?us-ascii?q?xGyTE7djGmoJX4kwZhiGKAKnZ+t37ZecB2xRfC693QX/9R3jwaRCZmjTnbHESz?=
 =?us-ascii?q?P96s/d+MjZfMrvi+V369Vp1UaSTrz5mPtDG45W1pBh2zheuzlcfkEQg50C/70c?=
 =?us-ascii?q?dlVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr+bXUXQj4H2dzV4Anj2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPst8nEagvsFuAowziqHBLASElJVPSjtlxSO?=
 =?us-ascii?q?8tC/o79bZGepcbisykV+mcqtA62FogFZQHz5YIstHTds7sVjN1LByHjz6oDneN?=
 =?us-ascii?q?bKd94SuAObkwzcj+dLMpI+jeQFhTBoOW/muX0lyug7jQFh3J2gvYiHLXlt87y9?=
 =?us-ascii?q?AhJCKjL1YMYT8Cn3jalChsaWw5yvHpJ5FzUXW5voSOikETMIuvThKgaOCyY8qn?=
 =?us-ascii?q?aAFLrbHA+f7lpmrn3VH5CqMXGXOGcWzdF4SBaBI0xfhRgeXC8mkZ4hCgCq2Mvh?=
 =?us-ascii?q?fV9i6T8L4V74rgZMxvhsNxniSWrfoAaoajEpSJmQNhZW7wdC51vLPsya9O58Ay?=
 =?us-ascii?q?ZY/pi5pgyXNmObfxhIDX0OWkGcBVDsJLyu6sfb8+SCGuqyNfjOYaiNqexDUfeH?=
 =?us-ascii?q?34mv35Bi/zaNMMWPI3ZjA+c62kpFQXB2BcDZly8TRCwQkiLHd9Sbqwuk+i1rss?=
 =?us-ascii?q?C/9+zmWQLo5YuSErtSLM9g+xasjaeYMO6Qgil5JC1c1pMNw3/I1bce0EQTiyFo?=
 =?us-ascii?q?azmiD7AAuTTRQ6LXn69dFwQbZD9rNMtU86I82RFAOc7FhdP01b54jf81B01GVV?=
 =?us-ascii?q?z7ncGpatIFI3ugNFPcH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGoo69bw1iCXL9Q9PmcBG7NN53gCYywb01gHPKKGEdPS?=
 =?us-ascii?q?J9c0NLsr2f8ydYju9jFGxG63pvNfOElDqB7+nENpYWtuNmAjh1l+Jf+ng116FZ?=
 =?us-ascii?q?4z1ERPNrnivftdpuo1CgkumSxTtrShtOqjBXhI2VuUVuI7nW9p5FWXzc5hIC8X?=
 =?us-ascii?q?2QCwgWp9tiEtDuu7pfyt7KlKLyLjdN69PV/csGCMjSJ8KKK34hMRvvGD7JAwoJ?=
 =?us-ascii?q?Vz+rNWfDh0NDlPGe7GGarp8/qsukpJ1bTr5dSUxwCvICT09iGdkDPIxfQDwpi/?=
 =?us-ascii?q?iYgdQO6H74qwPeF/9XppTWavXHBPTpJzGxjrReYRYMh7TiIsBbKoL/y2Rma19n?=
 =?us-ascii?q?gJ7NHUvAG9xA5mVhdgYcslRR92I4RWo2nwrmaxms5HtVDv6pghMzjRVWZeUr6S?=
 =?us-ascii?q?eq4lErK16Mryw11AE1mNP4kXWSfST3IaOYQ45bEWz3ulI3P5e9RBx6KUWwklZj?=
 =?us-ascii?q?LyzsXK9Kgv1rcmUvwA/Vv4AJB/daC65eaRkdw/uKffoA1FlapiS3g0RA4LjrE5?=
 =?us-ascii?q?xnwUE2cIbppXVckwxkdpYWJLbRIK4B5x4YvaKToiKt0f57iFsCJl4H93+6aj8U?=
 =?us-ascii?q?v1ZOPb4jcXn7ttdw4BCPzmMQMFMHUOAn96pn?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAwD+kg9ch0O0hNFkHAMfBAeBTgKCa?=
 =?us-ascii?q?IECJ4N7iHiLMAGCIZc+IIFTEgEBGA0GAYd5IjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2IoJlAwMBAiAJBgFGBgkBASQCJgICAyUvGQUDgxkBggEFCqUdgS8eh?=
 =?us-ascii?q?A8BAwIMQjCEdwUTeIsvEQaBf4dBAQICgTiDKoJXApA7kDwHAgKHB4YohDeRP44?=
 =?us-ascii?q?WinYCBAIEBQIUgUaCDnAVQoEtDgsBDDVdE4sJhWAeATIBAQEBBnsBAYgYgkwBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0AgAwD+kg9ch0O0hNFkHAMfBAeBTgKCaIECJ4N7iHiLMAG?=
 =?us-ascii?q?CIZc+IIFTEgEBGA0GAYd5IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlA?=
 =?us-ascii?q?wMBAiAJBgFGBgkBASQCJgICAyUvGQUDgxkBggEFCqUdgS8ehA8BAwIMQjCEdwU?=
 =?us-ascii?q?TeIsvEQaBf4dBAQICgTiDKoJXApA7kDwHAgKHB4YohDeRP44WinYCBAIEBQIUg?=
 =?us-ascii?q?UaCDnAVQoEtDgsBDDVdE4sJhWAeATIBAQEBBnsBAYgYgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="56961024"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 02:37:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726270AbeLKKeM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 05:34:12 -0500
Received: from terminus.zytor.com ([198.137.202.136]:42867 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726117AbeLKKeL (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 05:34:11 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBBAXsME3948513
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Tue, 11 Dec 2018 02:33:54 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBBAXrwm3948510;
        Tue, 11 Dec 2018 02:33:53 -0800
Date: Tue, 11 Dec 2018 02:33:53 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: "tip-bot for Kirill A. Shutemov" <tipbot@zytor.com>
Message-ID: <tip-16877a5570e0c5f4270d5b17f9bab427bcae9514@git.kernel.org>
Cc: mingo@kernel.org, tglx@linutronix.de, hpa@zytor.com,
        kirill.shutemov@linux.intel.com, linux-kernel@vger.kernel.org,
        jgross@suse.com, hans.van.kranenburg@mendix.com
Reply-To: mingo@kernel.org, tglx@linutronix.de, hpa@zytor.com,
          kirill.shutemov@linux.intel.com, linux-kernel@vger.kernel.org,
          jgross@suse.com, hans.van.kranenburg@mendix.com
In-Reply-To: <20181130202328.65359-2-kirill.shutemov@linux.intel.com>
References: <20181130202328.65359-2-kirill.shutemov@linux.intel.com>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/urgent] x86/mm: Fix guard hole handling
Git-Commit-ID: 16877a5570e0c5f4270d5b17f9bab427bcae9514
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-2.9 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        T_DATE_IN_FUTURE_96_Q autolearn=ham autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  16877a5570e0c5f4270d5b17f9bab427bcae9514
Gitweb:     https://git.kernel.org/tip/16877a5570e0c5f4270d5b17f9bab427bcae9514
Author:     Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
AuthorDate: Fri, 30 Nov 2018 23:23:27 +0300
Committer:  Thomas Gleixner <tglx@linutronix.de>
CommitDate: Tue, 11 Dec 2018 11:19:24 +0100

x86/mm: Fix guard hole handling

There is a guard hole at the beginning of the kernel address space, also
used by hypervisors. It occupies 16 PGD entries.

This reserved range is not defined explicitely, it is calculated relative
to other entities: direct mapping and user space ranges.

The calculation got broken by recent changes of the kernel memory layout:
LDT remap range is now mapped before direct mapping and makes the
calculation invalid.

The breakage leads to crash on Xen dom0 boot[1].

Define the reserved range explicitely. It's part of kernel ABI (hypervisors
expect it to be stable) and must not depend on changes in the rest of
kernel memory layout.

[1] https://lists.xenproject.org/archives/html/xen-devel/2018-11/msg03313.html

Fixes: d52888aa2753 ("x86/mm: Move LDT remap out of KASLR region on 5-level paging")
Reported-by: Hans van Kranenburg <hans.van.kranenburg@mendix.com>
Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Tested-by: Hans van Kranenburg <hans.van.kranenburg@mendix.com>
Reviewed-by: Juergen Gross <jgross@suse.com>
Cc: bp@alien8.de
Cc: hpa@zytor.com
Cc: dave.hansen@linux.intel.com
Cc: luto@kernel.org
Cc: peterz@infradead.org
Cc: boris.ostrovsky@oracle.com
Cc: bhe@redhat.com
Cc: linux-mm@kvack.org
Cc: xen-devel@lists.xenproject.org
Link: https://lkml.kernel.org/r/20181130202328.65359-2-kirill.shutemov@linux.intel.com

---
 arch/x86/include/asm/pgtable_64_types.h |  5 +++++
 arch/x86/mm/dump_pagetables.c           |  8 ++++----
 arch/x86/xen/mmu_pv.c                   | 11 ++++++-----
 3 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/arch/x86/include/asm/pgtable_64_types.h b/arch/x86/include/asm/pgtable_64_types.h
index 84bd9bdc1987..88bca456da99 100644
--- a/arch/x86/include/asm/pgtable_64_types.h
+++ b/arch/x86/include/asm/pgtable_64_types.h
@@ -111,6 +111,11 @@ extern unsigned int ptrs_per_p4d;
  */
 #define MAXMEM			(1UL << MAX_PHYSMEM_BITS)
 
+#define GUARD_HOLE_PGD_ENTRY	-256UL
+#define GUARD_HOLE_SIZE		(16UL << PGDIR_SHIFT)
+#define GUARD_HOLE_BASE_ADDR	(GUARD_HOLE_PGD_ENTRY << PGDIR_SHIFT)
+#define GUARD_HOLE_END_ADDR	(GUARD_HOLE_BASE_ADDR + GUARD_HOLE_SIZE)
+
 #define LDT_PGD_ENTRY		-240UL
 #define LDT_BASE_ADDR		(LDT_PGD_ENTRY << PGDIR_SHIFT)
 #define LDT_END_ADDR		(LDT_BASE_ADDR + PGDIR_SIZE)
diff --git a/arch/x86/mm/dump_pagetables.c b/arch/x86/mm/dump_pagetables.c
index fc37bbd23eb8..dad153e5a427 100644
--- a/arch/x86/mm/dump_pagetables.c
+++ b/arch/x86/mm/dump_pagetables.c
@@ -512,11 +512,11 @@ static inline bool is_hypervisor_range(int idx)
 {
 #ifdef CONFIG_X86_64
 	/*
-	 * ffff800000000000 - ffff87ffffffffff is reserved for
-	 * the hypervisor.
+	 * A hole in the beginning of kernel address space reserved
+	 * for a hypervisor.
 	 */
-	return	(idx >= pgd_index(__PAGE_OFFSET) - 16) &&
-		(idx <  pgd_index(__PAGE_OFFSET));
+	return	(idx >= pgd_index(GUARD_HOLE_BASE_ADDR)) &&
+		(idx <  pgd_index(GUARD_HOLE_END_ADDR));
 #else
 	return false;
 #endif
diff --git a/arch/x86/xen/mmu_pv.c b/arch/x86/xen/mmu_pv.c
index a5d7ed125337..0f4fe206dcc2 100644
--- a/arch/x86/xen/mmu_pv.c
+++ b/arch/x86/xen/mmu_pv.c
@@ -648,19 +648,20 @@ static int __xen_pgd_walk(struct mm_struct *mm, pgd_t *pgd,
 			  unsigned long limit)
 {
 	int i, nr, flush = 0;
-	unsigned hole_low, hole_high;
+	unsigned hole_low = 0, hole_high = 0;
 
 	/* The limit is the last byte to be touched */
 	limit--;
 	BUG_ON(limit >= FIXADDR_TOP);
 
+#ifdef CONFIG_X86_64
 	/*
 	 * 64-bit has a great big hole in the middle of the address
-	 * space, which contains the Xen mappings.  On 32-bit these
-	 * will end up making a zero-sized hole and so is a no-op.
+	 * space, which contains the Xen mappings.
 	 */
-	hole_low = pgd_index(USER_LIMIT);
-	hole_high = pgd_index(PAGE_OFFSET);
+	hole_low = pgd_index(GUARD_HOLE_BASE_ADDR);
+	hole_high = pgd_index(GUARD_HOLE_END_ADDR);
+#endif
 
 	nr = pgd_index(limit) + 1;
 	for (i = 0; i < nr; i++) {
