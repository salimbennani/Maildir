Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:09:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3346D5805FC;
	Fri, 14 Dec 2018 12:53:23 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 12:53:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJTV+Cx+FFHHHc/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1OgQIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHmiC?=
 =?us-ascii?q?kJNCQ5/2PZisJukaxVpx2uqRNjzIHJe4GVLPhzc7jBfd4ZX2dNQtxcWzBDD466?=
 =?us-ascii?q?coABD/ABPeFdr4Tlu1sOrAO+CRC3C+Po1j9Dm3H23aog0+88Fg/JxhAgH9IPsH?=
 =?us-ascii?q?vKsdX+Kb0cUee0zKnSzDXMcelW0ir65YjUcxAhueqDXbVsccfKyEguFx/FjlKK?=
 =?us-ascii?q?qYD/IzyV0eENvnGd4uF9W+yvjGsnpBtwojip3sosiZfGhpgTyl/a8SV12oE1Jc?=
 =?us-ascii?q?e3SEN9fNWqE4NQujmEO4dqRs4uWXxktSgkxrEcpJK2fzQGxI4myhPdc/CLboyF?=
 =?us-ascii?q?7xH5WOqMLzp1hmhpdKyjixqs60Ss1+PxW8iy3V1XtCRKiMPMuWoI1xHL6siIVP?=
 =?us-ascii?q?99/kC51DaR2ADc9PtELVo3laXFMZ4hxKA/lp4JvUTEBC/2l136jK6Qdko65uil?=
 =?us-ascii?q?8/rrbqniq5OGKoN5hB/yPr4zlsG8Heg0KAkDUmqD9eS5zrLj/En5QLtQjv0xl6?=
 =?us-ascii?q?nUqJTaJcUdpq6kDA5Zy4Uj5AilDzegztsYmWALLFVLeRKBkYfpIUrDIO73Dfih?=
 =?us-ascii?q?mVSgijRryO7cPr3nHJrNKmLPkLD7fbZy80Jc0hY8zchD55JIDbEMOPbzWk7ytN?=
 =?us-ascii?q?PGFBM4PBG0zv3jCNV80IMeRG2ODrWYMKPUrV+H+OYvL/OQa48SvTb3M+Il6OL2?=
 =?us-ascii?q?jX8lhV8derGk3ZsNZ3C5AvRpOUKZbWDsgtccC2gKuAU+QffuiF2DVz5TenmzU7?=
 =?us-ascii?q?g95jE9FIKpE4PDSpqxj7yG2SexBodWaXxeClCQDXfocJ2JW/ULaC2MOMNhkTsE?=
 =?us-ascii?q?Vb6nS48mzhyusA76y7x6Luvb4CEYtJTj1MRr6O3Xjx096Tt0D8GF2WGXU250hn?=
 =?us-ascii?q?8IRyMx3K1nu0N90VeD0a97g/BCD9xc/fFJXxw+NZ7dyex6Ft/zVhjAftePVFap?=
 =?us-ascii?q?XNGmDSstQdI2xt8Ee1x9FMm6jhDfwyqqBKcYl7+RC5wy6K7c23nxKNx7y3bJz6?=
 =?us-ascii?q?Qhi1gmQs1SNWypnKJ/9g7TB5LXnEWdjaqlaaMc3CvV/meZ0WWOpF1YUBJ3Uajd?=
 =?us-ascii?q?QH8QfFXWosrj6kPCVbCuD68nPRVHycKFLqtKadjpjVFdSffnOdTeZX+xmmiqCR?=
 =?us-ascii?q?aJwLOMcJTle2EH0CrBD0gElhgZ/WyaOggmGiehv2XeASRzGl31fUPj7/NyqHOh?=
 =?us-ascii?q?QU8y1AGFcUth2qGx+h4Ug/ycVvwS0qgFuCcntzV7AlK908jKBNqHogprZL9cbs?=
 =?us-ascii?q?8l4FdbyWLZsBRwPoChL6BngV4ebwR3vkP02xVrEIlAltIqrHcrzAp0JqKVy1dB?=
 =?us-ascii?q?dzKe3ZDtNbzbMGjy/Baza6HI3lHSysqZ+qAK6P4gsVXsoBmpFlY+83Vgy9RayX?=
 =?us-ascii?q?+c6YvFDQUMUZP9SF049wVnqL7AZCk95ITU1WN3PKmwsz/C3c8pBeQ/xhaheddf?=
 =?us-ascii?q?LL2LFAvoH8IGAMiuLfQgm0K1YRIcIOBS6Kk0MtumdvubwqKkIPxsnTOmjWtd5o?=
 =?us-ascii?q?B93VmB9y59Su7OwpYEzOuU3gqBVzfgklihttr7lpxDZTEXBmC/0zTrBJZNZq1u?=
 =?us-ascii?q?eoYGEX2uI8yrydpknZ7iRnlY+ESlB1wYws+peAOeYEDn0g1UyEsYv2anmSy+zz?=
 =?us-ascii?q?FvlzEpr6yf3DHBwuj4dRoHPHJLS3dmjVv2PYe0iNUaVlCybwc1jBul+Vr6x69D?=
 =?us-ascii?q?qaV/LmnfW0dJczLtL2F/VKu9rb6CY89J6JM1viRbSuW8YVaGSrHjpxsWyT/sH2?=
 =?us-ascii?q?xbxDojbTGlpo35nwBmiGKaNHtzrmDWedtzxRfc49zQX+VR0SAFRCl7iDnXAEaz?=
 =?us-ascii?q?P9+y8NWQlpfDtP2+Vm27Wp1Sdynr0Z2PtC+h6WJ2Bh2/mui5msf7HggizS/7y9?=
 =?us-ascii?q?5qWD3IrRnmZYnnzaa6MeNhfkRzAF/86sx6Gpxxk4cqhZEQ32QaiYuR/XYdjWjz?=
 =?us-ascii?q?NtBb07rkbHURXT4L38LV4A/91U1gNH2Jxpj1VnWAwsR7Ydm6bXgb2iY878BMFa?=
 =?us-ascii?q?eV46ZInSpzolqksw3RZeJxkSsayfsr8HQamf0GuBIxziWBBbAfBUxYPS3vlxuS?=
 =?us-ascii?q?9dy/ortYZH2zcbeuzkpxhs6uDKuNogxHXHb5e5EiHTJ/78llMVLM1mHz5Z/geN?=
 =?us-ascii?q?XKcd0TsRiUmQ/aj+dJMJIxiuYKhS1/NGLhun0lzvQ3jB100pG8oYiHMH5t/KOi?=
 =?us-ascii?q?Dx5cNz31Yd4T+z73gaZfmMaWw56gHpF7FjoXW5voSOqiECgOuvT/KwaODDo8p2?=
 =?us-ascii?q?+AFrXFGg+f7Fpmo2jLE5C2LHyXIHgZzdN/RBiSPkBfgQYUXCkkkZ49DAyl2Mvh?=
 =?us-ascii?q?cEJh7DAL+lH4sgdMyv5vNxTnUGfQvgKoZSkvSJSFMBpa9AJC51rWMcyD6OJ8BT?=
 =?us-ascii?q?pY84alrAyMLGybegtJAXsIWkyCG1DsIL2u6cPc/OifA+q0N+HObqmWqexCS/eI?=
 =?us-ascii?q?woqi04th/zaRL8WPI2NtD/sh1kpYWnB5HcvZli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50KTZG2ZMNxn/Iy7kf0EQRiyF0?=
 =?us-ascii?q?cDmtHqoPtTTQTKLLgaJXCx8bayVuNMpH9a483w9NOdLFhdPxzLJ3kvk1C1JdX1?=
 =?us-ascii?q?z7hs6pfdAKI326NF7fHkmLKa+JJSfVzMD3e6+8TbxQgf5Qtx2xvzabDkDiMi6C?=
 =?us-ascii?q?lznvSxCgL+VMgDuHMxxZvYG3agxtBnT7TNL6dh27N8d6jSE3wb0xnH/FKXQQPi?=
 =?us-ascii?q?R8c0xTqL2d9idYgvR5G2xc4XtpN+iEmyCF7+bGLpYaq+dkAiNxl+hC+nQ116NV?=
 =?us-ascii?q?7D1YRPxygCbTrsRho1ejkumOzDpoSBtPqjZRi4KNskVvIqHZ9phGWXbZ8xMB92?=
 =?us-ascii?q?SQCxIWp9R7Dt3jobxfyt/KlPG7FDAX99PS4NtZG8nMbcmANX8gLQHBBjHZFk0G?=
 =?us-ascii?q?QCStOGWZgFZSw8uf7nmEkp9vo5PplbIUR7NbXUBzHfQfTgxgFcACIZpqGCsjkK?=
 =?us-ascii?q?SagdQg4Xu4pQPWAsJAsdSPU/OUDvLHKzuDi7RAIRwSzvewMYsXJqX/2kp/dkN9?=
 =?us-ascii?q?moXaXUbdGZhVrzFsdB0coUND6nFyQ2Q/nUX/ZUfl5H4VCO7xnRMsjAZ6Sfoi+S?=
 =?us-ascii?q?2q4FotIFfO4iwqnw15kNHokTmXfDPrarywXJpWCCvyn0wwNI7rBQdzcQC220dj?=
 =?us-ascii?q?MXOMQbtUj6p9c29DiwLGv5ZLX/lGQukMYAcZ7eOGe/Iyl19br2Hvx0hD/uLtE5?=
 =?us-ascii?q?ZulAI2N5WrqiFuwQVmOcI0PenaI7YBwF9KzoeHoi+p2/15+AgfPUcA6ivGZC8Q?=
 =?us-ascii?q?sksUHqs3Oy2yuOdr7FrRyHN4ZGEQWq9y8bpR/UQnNrHYwg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ArAACjFxRch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGCaYECJ4N8iHiLGAGCIZdDFAyBUxIBARgNBgGHRyI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiKCZQMDAQIgBAUGAUYGCQEBJAImAgIDJR4RGQUDgxkBg?=
 =?us-ascii?q?gAFCqYNfDMehA8BgQOEehN4izMXgX+IcQESAYMlglcCiT6HDJBOCYcNg0CCbYQ?=
 =?us-ascii?q?4giqPKIsugwOLCQIEAgQFAhSBRwGBG3FNIxWBbw4LAQyBEgkKghQXiF6FYB4BM?=
 =?us-ascii?q?gEBCHsBAYpwgj4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ArAACjFxRch0O0hNFkHQEBBQEHBQGBUgcBCwGCaYECJ4N?=
 =?us-ascii?q?8iHiLGAGCIZdDFAyBUxIBARgNBgGHRyI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiKCZQMDAQIgBAUGAUYGCQEBJAImAgIDJR4RGQUDgxkBggAFCqYNfDMehA8?=
 =?us-ascii?q?BgQOEehN4izMXgX+IcQESAYMlglcCiT6HDJBOCYcNg0CCbYQ4giqPKIsugwOLC?=
 =?us-ascii?q?QIEAgQFAhSBRwGBG3FNIxWBbw4LAQyBEgkKghQXiF6FYB4BMgEBCHsBAYpwgj4?=
 =?us-ascii?q?BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="45046400"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 12:53:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731041AbeLNUxR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 15:53:17 -0500
Received: from terminus.zytor.com ([198.137.202.136]:55003 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730739AbeLNUxR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 15:53:17 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBEKppkC1458531
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Fri, 14 Dec 2018 12:51:51 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBEKppkS1458528;
        Fri, 14 Dec 2018 12:51:51 -0800
Date: Fri, 14 Dec 2018 12:51:51 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Mathieu Poirier <tipbot@zytor.com>
Message-ID: <tip-6e1c7f87fb4a9332f8a5d1c80e618357ad830fc4@git.kernel.org>
Cc: linux-kernel@vger.kernel.org, alexander.shishkin@linux.intel.com,
        namhyung@kernel.org, hpa@zytor.com, jolsa@redhat.com,
        peterz@infradead.org, tglx@linutronix.de, mingo@kernel.org,
        mathieu.poirier@linaro.org, acme@redhat.com
Reply-To: acme@redhat.com, mathieu.poirier@linaro.org, mingo@kernel.org,
          tglx@linutronix.de, peterz@infradead.org,
          linux-kernel@vger.kernel.org, alexander.shishkin@linux.intel.com,
          namhyung@kernel.org, hpa@zytor.com, jolsa@redhat.com
In-Reply-To: <1543955944-10042-2-git-send-email-mathieu.poirier@linaro.org>
References: <1543955944-10042-2-git-send-email-mathieu.poirier@linaro.org>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf cs-etm: Add configuration for ETMv3 trace
 protocol
Git-Commit-ID: 6e1c7f87fb4a9332f8a5d1c80e618357ad830fc4
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-1.7 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_96_Q autolearn=no autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  6e1c7f87fb4a9332f8a5d1c80e618357ad830fc4
Gitweb:     https://git.kernel.org/tip/6e1c7f87fb4a9332f8a5d1c80e618357ad830fc4
Author:     Mathieu Poirier <mathieu.poirier@linaro.org>
AuthorDate: Tue, 4 Dec 2018 13:39:02 -0700
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Thu, 6 Dec 2018 14:12:34 -0300

perf cs-etm: Add configuration for ETMv3 trace protocol

This patch deals with the proper initialisation of configuration
parameters for the ETMv3 trace protocol in order to properly handle
packets generated by tracers following this specification.

Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Cc: Jiri Olsa <jolsa@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: coresight@lists.linaro.org
Cc: linux-arm-kernel@lists.infradead.org
Link: http://lkml.kernel.org/r/1543955944-10042-2-git-send-email-mathieu.poirier@linaro.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/perf/util/cs-etm-decoder/cs-etm-decoder.h |  8 ++++
 tools/perf/util/cs-etm.c                        | 54 ++++++++++++++++++-------
 2 files changed, 48 insertions(+), 14 deletions(-)

diff --git a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
index 9351bd10d864..6b5525410a43 100644
--- a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
+++ b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
@@ -53,6 +53,13 @@ struct cs_etm_queue;
 typedef u32 (*cs_etm_mem_cb_type)(struct cs_etm_queue *, u64,
 				  size_t, u8 *);
 
+struct cs_etmv3_trace_params {
+	u32 reg_ctrl;
+	u32 reg_trc_id;
+	u32 reg_ccer;
+	u32 reg_idr;
+};
+
 struct cs_etmv4_trace_params {
 	u32 reg_idr0;
 	u32 reg_idr1;
@@ -65,6 +72,7 @@ struct cs_etmv4_trace_params {
 struct cs_etm_trace_params {
 	int protocol;
 	union {
+		struct cs_etmv3_trace_params etmv3;
 		struct cs_etmv4_trace_params etmv4;
 	};
 };
diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
index 48ad217bf0df..76e509c32a28 100644
--- a/tools/perf/util/cs-etm.c
+++ b/tools/perf/util/cs-etm.c
@@ -114,15 +114,28 @@ static void cs_etm__dump_event(struct cs_etm_auxtrace *etm,
 	/* Use metadata to fill in trace parameters for trace decoder */
 	t_params = zalloc(sizeof(*t_params) * etm->num_cpu);
 	for (i = 0; i < etm->num_cpu; i++) {
-		t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
-		t_params[i].etmv4.reg_idr0 = etm->metadata[i][CS_ETMV4_TRCIDR0];
-		t_params[i].etmv4.reg_idr1 = etm->metadata[i][CS_ETMV4_TRCIDR1];
-		t_params[i].etmv4.reg_idr2 = etm->metadata[i][CS_ETMV4_TRCIDR2];
-		t_params[i].etmv4.reg_idr8 = etm->metadata[i][CS_ETMV4_TRCIDR8];
-		t_params[i].etmv4.reg_configr =
+		if (etm->metadata[i][CS_ETM_MAGIC] == __perf_cs_etmv3_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV3;
+			t_params[i].etmv3.reg_ctrl =
+					etm->metadata[i][CS_ETM_ETMCR];
+			t_params[i].etmv3.reg_trc_id =
+					etm->metadata[i][CS_ETM_ETMTRACEIDR];
+		} else if (etm->metadata[i][CS_ETM_MAGIC] ==
+						      __perf_cs_etmv4_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
+			t_params[i].etmv4.reg_idr0 =
+					etm->metadata[i][CS_ETMV4_TRCIDR0];
+			t_params[i].etmv4.reg_idr1 =
+					etm->metadata[i][CS_ETMV4_TRCIDR1];
+			t_params[i].etmv4.reg_idr2 =
+					etm->metadata[i][CS_ETMV4_TRCIDR2];
+			t_params[i].etmv4.reg_idr8 =
+					etm->metadata[i][CS_ETMV4_TRCIDR8];
+			t_params[i].etmv4.reg_configr =
 					etm->metadata[i][CS_ETMV4_TRCCONFIGR];
-		t_params[i].etmv4.reg_traceidr =
+			t_params[i].etmv4.reg_traceidr =
 					etm->metadata[i][CS_ETMV4_TRCTRACEIDR];
+		}
 	}
 
 	/* Set decoder parameters to simply print the trace packets */
@@ -352,15 +365,28 @@ static struct cs_etm_queue *cs_etm__alloc_queue(struct cs_etm_auxtrace *etm,
 		goto out_free;
 
 	for (i = 0; i < etm->num_cpu; i++) {
-		t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
-		t_params[i].etmv4.reg_idr0 = etm->metadata[i][CS_ETMV4_TRCIDR0];
-		t_params[i].etmv4.reg_idr1 = etm->metadata[i][CS_ETMV4_TRCIDR1];
-		t_params[i].etmv4.reg_idr2 = etm->metadata[i][CS_ETMV4_TRCIDR2];
-		t_params[i].etmv4.reg_idr8 = etm->metadata[i][CS_ETMV4_TRCIDR8];
-		t_params[i].etmv4.reg_configr =
+		if (etm->metadata[i][CS_ETM_MAGIC] == __perf_cs_etmv3_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV3;
+			t_params[i].etmv3.reg_ctrl =
+					etm->metadata[i][CS_ETM_ETMCR];
+			t_params[i].etmv3.reg_trc_id =
+					etm->metadata[i][CS_ETM_ETMTRACEIDR];
+		} else if (etm->metadata[i][CS_ETM_MAGIC] ==
+							__perf_cs_etmv4_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
+			t_params[i].etmv4.reg_idr0 =
+					etm->metadata[i][CS_ETMV4_TRCIDR0];
+			t_params[i].etmv4.reg_idr1 =
+					etm->metadata[i][CS_ETMV4_TRCIDR1];
+			t_params[i].etmv4.reg_idr2 =
+					etm->metadata[i][CS_ETMV4_TRCIDR2];
+			t_params[i].etmv4.reg_idr8 =
+					etm->metadata[i][CS_ETMV4_TRCIDR8];
+			t_params[i].etmv4.reg_configr =
 					etm->metadata[i][CS_ETMV4_TRCCONFIGR];
-		t_params[i].etmv4.reg_traceidr =
+			t_params[i].etmv4.reg_traceidr =
 					etm->metadata[i][CS_ETMV4_TRCTRACEIDR];
+		}
 	}
 
 	/* Set decoder parameters to simply print the trace packets */
