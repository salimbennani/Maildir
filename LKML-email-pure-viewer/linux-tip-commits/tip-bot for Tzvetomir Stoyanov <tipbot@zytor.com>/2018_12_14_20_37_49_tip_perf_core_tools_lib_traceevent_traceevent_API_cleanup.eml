Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:09:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2577F5805FC;
	Fri, 14 Dec 2018 12:38:07 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 12:38:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Au/jKUBLK1JbSFR7vt9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULf3yrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kJNzA383vXhc5+jKxFvRyvoBNwzYHIb46IL/p+ZqHQcMgGRWdCRMtdSzZMDp++?=
 =?us-ascii?q?YoYJEuEPPfxYr474p1YWsRu+BBGsCPr0xT9Pmn/9wKM60+M7EQrbwgIhHswOv2?=
 =?us-ascii?q?rIrNXyMacSUPq1x7TVwzXfaPNX2S3y6I7PchA/vPqBWq5wccvJyUY0EAPFkk6d?=
 =?us-ascii?q?qI3lPjOJ0eQNqXKX4PZnVeKqkmMqrRx6rDaoxscpkIbJh4QVx0jH9Spn2oY1I8?=
 =?us-ascii?q?O3SEphbd6jCptQuCeXPJZ1TMM6W2xkpjo2x7kctZKmciUG1o4rywPcZvCbaYSF?=
 =?us-ascii?q?4xDuWP6MLTp8h39pYq+zihiw/ES61OHwSte43ExXoidLk9TBsG0G2QbJ5cidUP?=
 =?us-ascii?q?R9+1+s2TaR2ADX7eFJOV40laXFJJ472LIwlYQcsV7FHiDonEX6lqiWdl8r+uSw?=
 =?us-ascii?q?6uTnZKvppoOEOoNqlg3zNr4iltGxDOgmKAQCQmuW9fim2LDi/0D1WLBKgec3kq?=
 =?us-ascii?q?ndvpDaP8MbpquhDg9R04Yj7Qu/Dji/3NQbg3YHNlRFdwyDj4TwPFHPLvb4Auml?=
 =?us-ascii?q?g1m3jjdryO7JPqf7DpXOMHfDirHhcqh560JGzwoz199f64pOCr4dOPLzRlPxtN?=
 =?us-ascii?q?vAAx89Mgy0wPjoBM9y14MDQm+PBq6ZMKXPsV6H/O4vIu+MZJMLtzb5MfQq+/nu?=
 =?us-ascii?q?jXohk18HYaapxYcXaGy/Hvl+I0WWe3vsgssbHmcNpAY+TPHqh0eEUT5cfHuyW6?=
 =?us-ascii?q?M85jcmCIOpF4vDR4atgKCf0ye/BJFZemdGClWUG3fya4qEQ+sMaD6VIsJ5kDwE?=
 =?us-ascii?q?UqauR5Ui1RGpsg/6zb1nI/HQ+i0Zs5Ljydd06/fSlRE06Tx7EcCd33uRQGFzm2?=
 =?us-ascii?q?MCXyU207xnoUxh1leD1rB1jOZDFdxT4PNJUR02NYTGwOx4EN3yXgPBftGUSFep?=
 =?us-ascii?q?WNmmADcxTs4vzN8KeUpyB9KijhXb1SqwH7AVj6CLBIAz8q/E3Hj+PcB9x2zC1K?=
 =?us-ascii?q?kglVYmRMRPOHaihq5+8QjTGoHIn1+Yl6asaaQTwirN+H2fwmqJuUFSSBRwXrnd?=
 =?us-ascii?q?XXADekvWqsz06V7YQL+wF7srKAtBxtSEKqtRdNLpi1JKRPPgONTbZ2K8gGOwBR?=
 =?us-ascii?q?eOxrORY4vmYWQd3CPBCEcalwAf52qJNQ87Bi25uWLRECRuFU7zY0Pr6eRxtWm0?=
 =?us-ascii?q?TlEqwA2Qb01uzby1+gULivyaUP4T2rMEuCE8qzR7Blq93tTWC8aeqAplZqlTfd?=
 =?us-ascii?q?Q94FJf32LDqwN9JoCgL7xlhlMGbwR3vkbu1xJrCoVAkckmtm8qwBB1KaKC1FNB?=
 =?us-ascii?q?djWY3Z/rN73TK2ny+g2vaqHM1lHf1taW5rkA6PAip1r/uwGpE1Io82973NlNz3?=
 =?us-ascii?q?uc+pLKARIIXpL1TEk2+AZ1prHAbiYm+oPbyGdjMa+3sj/FxdIkH+8lyhemf9dC?=
 =?us-ascii?q?P6KIDg7yE8sGB8ewLOwmgUSmbhUBPOpK7q47I9umd+ea2K6sJOthnC+mgX5b74?=
 =?us-ascii?q?xn00OM9zBzSujH35sex/GY3w2HVyrzjVu7s8D3n5xEai8WHmal1SfkA4tRbLVo?=
 =?us-ascii?q?fYkXEWeuP9G3xtJmip73Wn5X6ESsB0kb18+uYxaSaULy3RdR1UgOvXOogy+4wC?=
 =?us-ascii?q?FqnDEzqaqf2jfDw+DjdBoBJ25KS3NujVbqIYiokd8aWFKkYBQulBug/Uz63bRU?=
 =?us-ascii?q?pLxjL2nPRkdFZyj3L2B4XqqwrLaCeNNP6JUzvCVTUeS8Z02aS7Hnrxsb1SPjA3?=
 =?us-ascii?q?VRxDQhez62vZX5mgRwiHiBI3ZrsHrZZcZwyA/d5NPGX/5R3TkGRC5ihTnMHFe8?=
 =?us-ascii?q?PNqp/dSSl5jdtOCzTGahVpxVcSn2woKMriq75Wt2ARKhm/C/gMHoEQ8/0SXjzd?=
 =?us-ascii?q?llST3IrArgYonsz6m7Mfhofk5yCF/+6sp6HJpzko8xhJEWxHgbiY+Z/XsBkWfv?=
 =?us-ascii?q?L9pb3bjyY2YKRT4O29TV+hTq2FV/LnKVwIL0TnadzdFgZ9WgYmMWxzgy78ZFCK?=
 =?us-ascii?q?qP6LxEnC11oke3rA7LYPh9mCsdxuUq6HIAn+4Jvw8txD2HAr8OBUlYITDslxOQ?=
 =?us-ascii?q?4tC7raVXZ3ygfaK+1UVghtChEK+NohtHV3nnYJciEjR97sF+MFLKzX3y5ZvoeN?=
 =?us-ascii?q?jWbdIPqBKUlw3MgPRSKJI0jvAKnzZoOXrhvX05zO42lQBu3Za/vISdKmRi5qS5?=
 =?us-ascii?q?AgNDNj3uZsMe4TXtjadYnsaL0IGjBJRhGjMXXJT2SfKkCi4dtfPiNwyWCj0ztm?=
 =?us-ascii?q?+bGabDHQ+Y8EpptGjAE5evN3GKPnUZychiSQKZJExehgAUQTo7koQ4FgCs2Mzu?=
 =?us-ascii?q?bkN56ioN6V7/rxtG0vhoOAXnUmfDuAeobS85SJqFIxpT8A5C/F3ZMdCE4uJwAi?=
 =?us-ascii?q?FY/YChrAqXJWyAfAlICWAJWkqZB1HsJLWu5N/A8/SGCeq6NffBfbKOqelGXfeS?=
 =?us-ascii?q?2Z2vypdm/yqLNsiXPnhiCOA72lNeXX9jHcTVgS4PSysRlyLCdMOboBa8+itqrs?=
 =?us-ascii?q?Gw6vjrWQTv5ZeRBLtWK9lg5xe2gaKbPe6KmCl5MSpY1o8LxXLQyLgQwl8SiyJt?=
 =?us-ascii?q?dzmsC7gAtjTNTKXfmqBJFR4bdjhzOdBM76I92AlNJMHahsn01r5+kv46FVNFWU?=
 =?us-ascii?q?b9lcGuYMwAO3u9O0/fBEaXKLSGIiXGzNvqYaynU71fkuVVuwe0uTaaCELjOjWD?=
 =?us-ascii?q?lz/0VxGgK+1MjSebPABAt4G5aBpiFW/jTNf+YB2hLNB3lSE2waEzhn7SKW4cMD?=
 =?us-ascii?q?18f1lRobGK8SxYgutwG2pa43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6TlOROZplyvKst5uv1amn/GPyzV9VhpOrzdLhISTskRjOaXW7J9AWXnf8RIJ7G?=
 =?us-ascii?q?WQDQkKptR/Bt3uvaBQ1sbAlKbpJDhe9NLU+JhUO8+BLMOBLWpkLRvxXTXTCQ4E?=
 =?us-ascii?q?USWDK27SnQpeneuU+3nTqYI1+aLhgJ4fdrgOXVcwG9sAB0hlFcBEK5ByGns4iq?=
 =?us-ascii?q?KcnccO4mSWshzOTd9X+JvAU7baCPb3LR6djL9Zd14Gxq7+IY0PN4r9nUt4ZR0y?=
 =?us-ascii?q?gIvOC2LUXNZQvjdmaA4k5klAtDBkSXYv1k75Qgyq53MWFOXymQQ5zkN6YOIw5H?=
 =?us-ascii?q?Lv7k0xK17iuiQ9ig8ylM/jjDTXdyT+aO+2VIRWGjfyuGAyP4n9TgIzahe92QRk?=
 =?us-ascii?q?LD7sVaNNiKEmfmduzEfZuJ1AHtZfQLdCbRtWwuuYI70q1lBHow29yENH7PeDAp?=
 =?us-ascii?q?xnxyUwdpv5s3NYnghkcJY7IraYGLhXw0RXg6OU9hS00fE4xggAbxIR8XuYfzIg?=
 =?us-ascii?q?ql0UMaNgLC2tqL8/oTeekidOLTBfH8Ehpehnoxsw?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A1AAAnFBRch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YFagQ+BAieDfIh4ixgBgiGOL4kUIIFTEgEBGAsIAYdHIjUIDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2IoJlAwMBAiAEBQYBRgYJAQEkAiYCAgNUGQUDgk5LAYIAB?=
 =?us-ascii?q?QqmE3wzHoQPAYEDhHsTeIszF4F/jCqCVwKJQoYKfpAHRwmHDYNAhyWCKo8oiy6?=
 =?us-ascii?q?DA4sJAgQCBAUCFIFHAYIMTSMVgW8OCwEMgRIJCoIUF4hehWAeATIBAQh7AQGNL?=
 =?us-ascii?q?gEB?=
X-IPAS-Result: =?us-ascii?q?A0A1AAAnFBRch0O0hNFkHgEGBwaBUggLAYFagQ+BAieDfIh?=
 =?us-ascii?q?4ixgBgiGOL4kUIIFTEgEBGAsIAYdHIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2IoJlAwMBAiAEBQYBRgYJAQEkAiYCAgNUGQUDgk5LAYIABQqmE3wzHoQPAYE?=
 =?us-ascii?q?DhHsTeIszF4F/jCqCVwKJQoYKfpAHRwmHDYNAhyWCKo8oiy6DA4sJAgQCBAUCF?=
 =?us-ascii?q?IFHAYIMTSMVgW8OCwEMgRIJCoIUF4hehWAeATIBAQh7AQGNLgEB?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="45044365"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 12:38:04 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730925AbeLNUh7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 15:37:59 -0500
Received: from terminus.zytor.com ([198.137.202.136]:38599 "EHLO
        terminus.zytor.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730739AbeLNUh7 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 15:37:59 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
        by terminus.zytor.com (8.15.2/8.15.2) with ESMTPS id wBEKbnvf1455485
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Fri, 14 Dec 2018 12:37:49 -0800
Received: (from tipbot@localhost)
        by terminus.zytor.com (8.15.2/8.15.2/Submit) id wBEKbn9T1455482;
        Fri, 14 Dec 2018 12:37:49 -0800
Date: Fri, 14 Dec 2018 12:37:49 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to tipbot@zytor.com using -f
From: tip-bot for Tzvetomir Stoyanov <tipbot@zytor.com>
Message-ID: <tip-34434e3633de8fde7d9a8bed374ba17897ac30ef@git.kernel.org>
Cc: jolsa@redhat.com, rostedt@goodmis.org, mingo@kernel.org,
        namhyung@kernel.org, linux-kernel@vger.kernel.org, hpa@zytor.com,
        tstoyanov@vmware.com, acme@redhat.com, tglx@linutronix.de,
        akpm@linux-foundation.org
Reply-To: acme@redhat.com, tstoyanov@vmware.com, akpm@linux-foundation.org,
          tglx@linutronix.de, rostedt@goodmis.org,
          linux-kernel@vger.kernel.org, namhyung@kernel.org, hpa@zytor.com,
          mingo@kernel.org, jolsa@redhat.com
In-Reply-To: <20181130154647.891651290@goodmis.org>
References: <20181130154647.891651290@goodmis.org>
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] tools lib traceevent: traceevent API cleanup
Git-Commit-ID: 34434e3633de8fde7d9a8bed374ba17897ac30ef
X-Mailer: tip-git-log-daemon
Robot-ID: <tip-bot.git.kernel.org>
Robot-Unsubscribe: Contact <mailto:hpa@kernel.org> to get blacklisted from
 these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-1.7 required=5.0 tests=ALL_TRUSTED,BAYES_00,
        DATE_IN_FUTURE_96_Q autolearn=no autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on terminus.zytor.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Commit-ID:  34434e3633de8fde7d9a8bed374ba17897ac30ef
Gitweb:     https://git.kernel.org/tip/34434e3633de8fde7d9a8bed374ba17897ac30ef
Author:     Tzvetomir Stoyanov <tstoyanov@vmware.com>
AuthorDate: Fri, 30 Nov 2018 10:44:10 -0500
Committer:  Arnaldo Carvalho de Melo <acme@redhat.com>
CommitDate: Fri, 30 Nov 2018 17:15:34 -0300

tools lib traceevent: traceevent API cleanup

In order to make libtraceevent into a proper library, its API should be
straightforward. This patch hides few API functions, intended for
internal usage only:

tep_free_event(), tep_free_format_field(), __tep_data2host2(),
__tep_data2host4() and __tep_data2host8().
The patch also alignes the libtraceevent summary man page with
these API changes.

Signed-off-by: Tzvetomir Stoyanov <tstoyanov@vmware.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Jiri Olsa <jolsa@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/20181130154647.891651290@goodmis.org
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 tools/lib/traceevent/event-parse-api.c   |  6 +++---
 tools/lib/traceevent/event-parse-local.h |  7 +++++++
 tools/lib/traceevent/event-parse.c       | 13 ++++++++-----
 tools/lib/traceevent/event-parse.h       | 16 ----------------
 4 files changed, 18 insertions(+), 24 deletions(-)

diff --git a/tools/lib/traceevent/event-parse-api.c b/tools/lib/traceevent/event-parse-api.c
index 0dc011154ee9..8b31c0e00ba3 100644
--- a/tools/lib/traceevent/event-parse-api.c
+++ b/tools/lib/traceevent/event-parse-api.c
@@ -51,7 +51,7 @@ void tep_set_flag(struct tep_handle *tep, int flag)
 		tep->flags |= flag;
 }
 
-unsigned short __tep_data2host2(struct tep_handle *pevent, unsigned short data)
+unsigned short tep_data2host2(struct tep_handle *pevent, unsigned short data)
 {
 	unsigned short swap;
 
@@ -64,7 +64,7 @@ unsigned short __tep_data2host2(struct tep_handle *pevent, unsigned short data)
 	return swap;
 }
 
-unsigned int __tep_data2host4(struct tep_handle *pevent, unsigned int data)
+unsigned int tep_data2host4(struct tep_handle *pevent, unsigned int data)
 {
 	unsigned int swap;
 
@@ -80,7 +80,7 @@ unsigned int __tep_data2host4(struct tep_handle *pevent, unsigned int data)
 }
 
 unsigned long long
-__tep_data2host8(struct tep_handle *pevent, unsigned long long data)
+tep_data2host8(struct tep_handle *pevent, unsigned long long data)
 {
 	unsigned long long swap;
 
diff --git a/tools/lib/traceevent/event-parse-local.h b/tools/lib/traceevent/event-parse-local.h
index 94746efef433..9a092dd4a86d 100644
--- a/tools/lib/traceevent/event-parse-local.h
+++ b/tools/lib/traceevent/event-parse-local.h
@@ -89,4 +89,11 @@ struct tep_handle {
 	char *trace_clock;
 };
 
+void tep_free_event(struct tep_event *event);
+void tep_free_format_field(struct tep_format_field *field);
+
+unsigned short tep_data2host2(struct tep_handle *pevent, unsigned short data);
+unsigned int tep_data2host4(struct tep_handle *pevent, unsigned int data);
+unsigned long long tep_data2host8(struct tep_handle *pevent, unsigned long long data);
+
 #endif /* _PARSE_EVENTS_INT_H */
diff --git a/tools/lib/traceevent/event-parse.c b/tools/lib/traceevent/event-parse.c
index a3e7d0a75e11..ffa656b868a9 100644
--- a/tools/lib/traceevent/event-parse.c
+++ b/tools/lib/traceevent/event-parse.c
@@ -3328,15 +3328,18 @@ tep_find_any_field(struct tep_event *event, const char *name)
 unsigned long long tep_read_number(struct tep_handle *pevent,
 				   const void *ptr, int size)
 {
+	unsigned long long val;
+
 	switch (size) {
 	case 1:
 		return *(unsigned char *)ptr;
 	case 2:
-		return tep_data2host2(pevent, ptr);
+		return tep_data2host2(pevent, *(unsigned short *)ptr);
 	case 4:
-		return tep_data2host4(pevent, ptr);
+		return tep_data2host4(pevent, *(unsigned int *)ptr);
 	case 8:
-		return tep_data2host8(pevent, ptr);
+		memcpy(&val, (ptr), sizeof(unsigned long long));
+		return tep_data2host8(pevent, val);
 	default:
 		/* BUG! */
 		return 0;
@@ -4062,7 +4065,7 @@ static void print_str_arg(struct trace_seq *s, void *data, int size,
 			f = tep_find_any_field(event, arg->string.string);
 			arg->string.offset = f->offset;
 		}
-		str_offset = tep_data2host4(pevent, data + arg->string.offset);
+		str_offset = tep_data2host4(pevent, *(unsigned int *)(data + arg->string.offset));
 		str_offset &= 0xffff;
 		print_str_to_seq(s, format, len_arg, ((char *)data) + str_offset);
 		break;
@@ -4080,7 +4083,7 @@ static void print_str_arg(struct trace_seq *s, void *data, int size,
 			f = tep_find_any_field(event, arg->bitmask.bitmask);
 			arg->bitmask.offset = f->offset;
 		}
-		bitmask_offset = tep_data2host4(pevent, data + arg->bitmask.offset);
+		bitmask_offset = tep_data2host4(pevent, *(unsigned int *)(data + arg->bitmask.offset));
 		bitmask_size = bitmask_offset >> 16;
 		bitmask_offset &= 0xffff;
 		print_bitmask_to_seq(pevent, s, format, len_arg,
diff --git a/tools/lib/traceevent/event-parse.h b/tools/lib/traceevent/event-parse.h
index 950ad185a5c4..35d37087d3c5 100644
--- a/tools/lib/traceevent/event-parse.h
+++ b/tools/lib/traceevent/event-parse.h
@@ -409,20 +409,6 @@ void tep_print_plugins(struct trace_seq *s,
 typedef char *(tep_func_resolver_t)(void *priv,
 				    unsigned long long *addrp, char **modp);
 void tep_set_flag(struct tep_handle *tep, int flag);
-unsigned short __tep_data2host2(struct tep_handle *pevent, unsigned short data);
-unsigned int __tep_data2host4(struct tep_handle *pevent, unsigned int data);
-unsigned long long
-__tep_data2host8(struct tep_handle *pevent, unsigned long long data);
-
-#define tep_data2host2(pevent, ptr)	__tep_data2host2(pevent, *(unsigned short *)(ptr))
-#define tep_data2host4(pevent, ptr)	__tep_data2host4(pevent, *(unsigned int *)(ptr))
-#define tep_data2host8(pevent, ptr)	\
-({								\
-	unsigned long long __val;				\
-								\
-	memcpy(&__val, (ptr), sizeof(unsigned long long));	\
-	__tep_data2host8(pevent, __val);				\
-})
 
 static inline int tep_host_bigendian(void)
 {
@@ -475,8 +461,6 @@ enum tep_errno tep_parse_format(struct tep_handle *pevent,
 				struct tep_event **eventp,
 				const char *buf,
 				unsigned long size, const char *sys);
-void tep_free_event(struct tep_event *event);
-void tep_free_format_field(struct tep_format_field *field);
 
 void *tep_get_field_raw(struct trace_seq *s, struct tep_event *event,
 			const char *name, struct tep_record *record,
