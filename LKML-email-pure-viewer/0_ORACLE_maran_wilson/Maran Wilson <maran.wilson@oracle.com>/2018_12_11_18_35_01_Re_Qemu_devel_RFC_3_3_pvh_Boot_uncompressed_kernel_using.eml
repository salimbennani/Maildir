Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:54:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9D33B58079D
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 10:42:19 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 11 Dec 2018 10:42:19 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AOfwDgRyO71yYBwLXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoXLPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXRPXshRWSxGAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIfzukMOoBm8CwSjGe/ixCNEiWHt3aAhz+QsExvL0BA8E98Asn?=
 =?us-ascii?q?nZqsj+OqcIUeCyyanF1TLNYOlM2Tjn7ojDbxAuofCIXbJrdsrRz1QkGgTAjlqK?=
 =?us-ascii?q?s4zqJTWV2v4Dsmia6+pgTuWvi2g8pgF2uDig3Nsjio3XiY4P1l/E8iB5zZ8zKN?=
 =?us-ascii?q?alS0B7ecapHIVMuyyZLYd6X94uTmJytCokxLALuYS3cDUIxZg/2hLSZOGLf5KV?=
 =?us-ascii?q?7h/sVeudOyp0iG9kdb6lmhq/9U6twfDmWMauylZFtC9Fn8HMtn8T0xzT7dCKSv?=
 =?us-ascii?q?98/ke6xTaPzBrf6u5CIUApj6bbLIQhwrEompoSt0TMADP2lV3ogKOKdUgo4PWk?=
 =?us-ascii?q?5/nkb7n8uJOROY95hhvjPqksgsC/BP43MgkKX2iV4+S807jj8FXgQLpUi/02j7?=
 =?us-ascii?q?DVv43EKsQFuKG5BxZZ3Z0k6xaiCTepzMoXnWIAIFJBeRKHjJbmN0vBIfDlFfq/?=
 =?us-ascii?q?h1WskDF2x/HJJLHhA5PNLmTdn7flZ7py90lcyA8owNBZ4JJUDL4BIPTuWkPrs9?=
 =?us-ascii?q?zYFBA5PxSuw+n7ENV9yp8eWWWXD6+dMaPSskGH6vggIumRf4IVvDf9K/445//h?=
 =?us-ascii?q?l3M5mFkdfbW30psTcny3AvNmI0DKKUfqmcoLRGcWohIlHqutjFyZTSUVYXG0UK?=
 =?us-ascii?q?QhoDYhB8WjBIbHQ4mrx7uZwCa8GIYRf21DFxWAHGnlc9a5XewRYneXK85ljjtW?=
 =?us-ascii?q?TLWkVsot2A+jsErgxqN6I/HI0isfs53lyZ5y/eKEjgw49zF/E5GA1XqQRXp/hG?=
 =?us-ascii?q?ICSmwK2/VEvUFzw1GEmYdxme5RD9FX4/oBBhw1PITOxvZ3I8r/VgLIYpGCT1Pw?=
 =?us-ascii?q?Bp2iADg0CNc82cAPaEVVHM+rhRTOmSGtBuw7jbuOUbk96Kval0fwI916zT6S0a?=
 =?us-ascii?q?A7hl9gXcpLLmqgrqll/gPXCsjClEDPxPXiTrgVwCOYrDTL9mGJpkwNFVcoCag?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACxBBBcmBHrdtBkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCCYoN7iBlfizKBYC2XUoFzEgEBGBSEQIJ?=
 =?us-ascii?q?uIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBA?=
 =?us-ascii?q?iAEEQgBAQQKKQECAgEBAgYBAQoOCgICIgQCAgMBUwYBDAYCAQEBFoMGgXoIAQM?=
 =?us-ascii?q?BpQtwfDOCdgEBBYJDhGYIgQuLMIFXP4ERJ4JrhQGDBIJXkAc3kD8HAoIiBIV+g?=
 =?us-ascii?q?iGHBgYYgVyFF4MDJockiSOJJ4ZCAgQCBAUCEwGBRoIOMxoEH4M8ghsMF4NKinR?=
 =?us-ascii?q?RgQeIbIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAACxBBBcmBHrdtBkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCCYoN7iBlfizKBYC2XUoFzEgEBGBSEQIJuIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBAiAEEQgBAQQKKQE?=
 =?us-ascii?q?CAgEBAgYBAQoOCgICIgQCAgMBUwYBDAYCAQEBFoMGgXoIAQMBpQtwfDOCdgEBB?=
 =?us-ascii?q?YJDhGYIgQuLMIFXP4ERJ4JrhQGDBIJXkAc3kD8HAoIiBIV+giGHBgYYgVyFF4M?=
 =?us-ascii?q?DJockiSOJJ4ZCAgQCBAUCEwGBRoIOMxoEH4M8ghsMF4NKinRRgQeIbIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="43635991"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 10:42:07 -0800
Received: from localhost ([::1]:40781 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWmyt-0005iA-3c
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 13:42:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54567)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <maran.wilson@oracle.com>) id 1gWmsV-0000Sq-MI
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 13:35:33 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <maran.wilson@oracle.com>) id 1gWmsR-0007Aa-F3
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 13:35:31 -0500
Received: from userp2130.oracle.com ([156.151.31.86]:60954)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <maran.wilson@oracle.com>)
	id 1gWmsO-0006yA-1L
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 13:35:24 -0500
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
	by userp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id
	wBBIXwls069340; Tue, 11 Dec 2018 18:35:04 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
	h=subject : to : cc :
	references : from : message-id : date : mime-version : in-reply-to :
	content-type : content-transfer-encoding; s=corp-2018-07-02;
	bh=d32XRB7MEyqXDdFr0Z2PQ/SEOloxXAZwJKGav9o8/Sw=;
	b=gklEqCR06XQbPNs177fT1201RiGPJISuVYJJyELetalEwYz1WbJNo9jf1OrdTTks+Q9t
	fioKyaRYoO0hKGakTaoB5HW1I5DsCvFvMdYq3XhfaqXRSc/JacH1MTseiXblCyiocTJb
	zLhx25uBvMoiqcIm61X2ga4u5lnTvjjQWXBQIcR8nRBP5515SHUUkHJiZlsbPN2oRb8V
	7UsO0vkqKneV0fJGCSeyAgMy9A8KE0hxaE/grGESqxw+ssSN8VnxL3V+EoZDK9t0yU71
	CmXgqOvWLy4FWMucfLxLbYf9+TzdcTilDNYPsULem+iXdvSM/JzmVCecKiF2ecSSMdov
	3A== 
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by userp2130.oracle.com with ESMTP id 2p85cu5nk7-1
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
	Tue, 11 Dec 2018 18:35:04 +0000
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
	by aserv0021.oracle.com (8.14.4/8.14.4) with ESMTP id wBBIZ30v026132
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Tue, 11 Dec 2018 18:35:03 GMT
Received: from abhmp0013.oracle.com (abhmp0013.oracle.com [141.146.116.19])
	by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wBBIZ3qD032191;
	Tue, 11 Dec 2018 18:35:03 GMT
Received: from [10.141.197.71] (/10.141.197.71)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Tue, 11 Dec 2018 10:35:02 -0800
To: Stefano Garzarella <sgarzare@redhat.com>, liam.merwick@oracle.com
References: <1544049446-6359-1-git-send-email-liam.merwick@oracle.com>
	<1544049446-6359-4-git-send-email-liam.merwick@oracle.com>
	<CAGxU2F4j11wVoDktowJwXDy42_PWbjwF0qAueFg+He4Tb86wgQ@mail.gmail.com>
From: Maran Wilson <maran.wilson@oracle.com>
Organization: Oracle Corporation
Message-ID: <33fb9ea4-d6c5-ed23-2fb5-6f818e250043@oracle.com>
Date: Tue, 11 Dec 2018 10:35:01 -0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.2
MIME-Version: 1.0
In-Reply-To: <CAGxU2F4j11wVoDktowJwXDy42_PWbjwF0qAueFg+He4Tb86wgQ@mail.gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9103
	signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0
	malwarescore=0
	phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
	adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
	engine=8.0.1-1810050000 definitions=main-1812110165
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 156.151.31.86
Subject: Re: [Qemu-devel] [RFC 3/3] pvh: Boot uncompressed kernel using
 direct boot ABI
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>, mst@redhat.com,
	qemu-devel@nongnu.org, Stefan Hajnoczi <stefanha@redhat.com>,
	xen-devel@lists.xenproject.org,
	Paolo Bonzini <pbonzini@redhat.com>, rth@twiddle.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/11/2018 9:11 AM, Stefano Garzarella wrote:
> Hi Liam,
> in order to support PVH also with SeaBIOS, I'm going to work on a new
> option rom (like linuxboot/multiboot) that can be used in this case.

That is awesome. Yes, please keep us posted when you have something working.

Just FYI, before switching over to using Qemu+qboot, we had been using a 
Qemu only solution (but not using an option rom) internally that worked 
very well using no FW at all. We had Qemu simply parse the ELF file and 
jump to the PVH entry point if one is found. The only gotcha was that we 
had to include a pair of patches that were originally written by folks 
at Intel as part of the clear containers work. Specifically, in order to 
be able to skip firmware entirely, we had to do 2 additional things: (1) 
ACPI tables generated by Qemu are usually patched up by FW. Since we 
were running no FW, we needed to do that patching up of the ACPI tables 
in Qemu when it was detected that we were going to enter the OS via the 
PVH entry point. (2) We also needed to add a patch to Qemu to enable a 
few PM registers -- something typically done by FW.

But if SeaBIOS is involved in the solution you are working on, I guess 
you won't really need those extra patches. Just figured I'd mention it 
so you have the full picture.

Thanks,
-Maran

> I'll keep you updated on it!
>
> Cheers,
> Stefano
> On Wed, Dec 5, 2018 at 11:38 PM Liam Merwick <liam.merwick@oracle.com> wrote:
>> These changes (along with corresponding qboot and Linux kernel changes)
>> enable a guest to be booted using the x86/HVM direct boot ABI.
>>
>> This commit adds a load_elfboot() routine to pass the size and
>> location of the kernel entry point to qboot (which will fill in
>> the start_info struct information needed to to boot the guest).
>> Having loaded the ELF binary, load_linux() will run qboot
>> which continues the boot.
>>
>> The address for the kernel entry point has already been read
>> from an ELF Note in the uncompressed kernel binary earlier
>> in pc_memory_init().
>>
>> Signed-off-by: George Kennedy <George.Kennedy@oracle.com>
>> Signed-off-by: Liam Merwick <Liam.Merwick@oracle.com>
>> ---
>>   hw/i386/pc.c | 72 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
>>   1 file changed, 72 insertions(+)
>>
>> diff --git a/hw/i386/pc.c b/hw/i386/pc.c
>> index 056aa46d99b9..d3012cbd8597 100644
>> --- a/hw/i386/pc.c
>> +++ b/hw/i386/pc.c
>> @@ -54,6 +54,7 @@
>>   #include "sysemu/qtest.h"
>>   #include "kvm_i386.h"
>>   #include "hw/xen/xen.h"
>> +#include "hw/xen/start_info.h"
>>   #include "ui/qemu-spice.h"
>>   #include "exec/memory.h"
>>   #include "exec/address-spaces.h"
>> @@ -1098,6 +1099,50 @@ done:
>>       return pvh_start_addr != 0;
>>   }
>>
>> +static bool load_elfboot(const char *kernel_filename,
>> +                   int kernel_file_size,
>> +                   uint8_t *header,
>> +                   size_t pvh_xen_start_addr,
>> +                   FWCfgState *fw_cfg)
>> +{
>> +    uint32_t flags = 0;
>> +    uint32_t mh_load_addr = 0;
>> +    uint32_t elf_kernel_size = 0;
>> +    uint64_t elf_entry;
>> +    uint64_t elf_low, elf_high;
>> +    int kernel_size;
>> +
>> +    if (ldl_p(header) != 0x464c457f) {
>> +        return false; /* no elfboot */
>> +    }
>> +
>> +    bool elf_is64 = header[EI_CLASS] == ELFCLASS64;
>> +    flags = elf_is64 ?
>> +        ((Elf64_Ehdr *)header)->e_flags : ((Elf32_Ehdr *)header)->e_flags;
>> +
>> +    if (flags & 0x00010004) { /* LOAD_ELF_HEADER_HAS_ADDR */
>> +        error_report("elfboot unsupported flags = %x", flags);
>> +        exit(1);
>> +    }
>> +
>> +    kernel_size = load_elf(kernel_filename, NULL, NULL, &elf_entry,
>> +                           &elf_low, &elf_high, 0, I386_ELF_MACHINE,
>> +                           0, 0);
>> +
>> +    if (kernel_size < 0) {
>> +        error_report("Error while loading elf kernel");
>> +        exit(1);
>> +    }
>> +    mh_load_addr = elf_low;
>> +    elf_kernel_size = elf_high - elf_low;
>> +
>> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_ENTRY, pvh_xen_start_addr);
>> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_ADDR, mh_load_addr);
>> +    fw_cfg_add_i32(fw_cfg, FW_CFG_KERNEL_SIZE, elf_kernel_size);
>> +
>> +    return true;
>> +}
>> +
>>   static void load_linux(PCMachineState *pcms,
>>                          FWCfgState *fw_cfg)
>>   {
>> @@ -1138,6 +1183,33 @@ static void load_linux(PCMachineState *pcms,
>>       if (ldl_p(header+0x202) == 0x53726448) {
>>           protocol = lduw_p(header+0x206);
>>       } else {
>> +        /* If the kernel address for using the x86/HVM direct boot ABI has
>> +         * been saved then proceed with booting the uncompressed kernel */
>> +        if (pvh_start_addr) {
>> +            if (load_elfboot(kernel_filename, kernel_size,
>> +                             header, pvh_start_addr, fw_cfg)) {
>> +                struct hvm_modlist_entry ramdisk_mod = { 0 };
>> +
>> +                fclose(f);
>> +
>> +                fw_cfg_add_i32(fw_cfg, FW_CFG_CMDLINE_SIZE,
>> +                    strlen(kernel_cmdline) + 1);
>> +                fw_cfg_add_string(fw_cfg, FW_CFG_CMDLINE_DATA, kernel_cmdline);
>> +
>> +                assert(machine->device_memory != NULL);
>> +                ramdisk_mod.paddr = machine->device_memory->base;
>> +                ramdisk_mod.size =
>> +                    memory_region_size(&machine->device_memory->mr);
>> +
>> +                fw_cfg_add_bytes(fw_cfg, FW_CFG_KERNEL_DATA, &ramdisk_mod,
>> +                                 sizeof(ramdisk_mod));
>> +                fw_cfg_add_i32(fw_cfg, FW_CFG_SETUP_SIZE, sizeof(header));
>> +                fw_cfg_add_bytes(fw_cfg, FW_CFG_SETUP_DATA,
>> +                                 header, sizeof(header));
>> +
>> +                return;
>> +            }
>> +        }
>>           /* This looks like a multiboot kernel. If it is, let's stop
>>              treating it like a Linux kernel. */
>>           if (load_multiboot(fw_cfg, f, kernel_filename, initrd_filename,
>> --
>> 1.8.3.1
>>
>


