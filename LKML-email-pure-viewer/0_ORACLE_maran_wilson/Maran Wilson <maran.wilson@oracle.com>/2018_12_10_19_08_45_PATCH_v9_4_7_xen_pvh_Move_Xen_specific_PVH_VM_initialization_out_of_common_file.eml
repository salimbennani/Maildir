Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:42:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0F1F85807A2;
	Mon, 10 Dec 2018 11:09:30 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 11:09:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Axhnh1RIQYxzYVXKcJtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/75rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gq1ZrhKhvAR/zozPbY2JKPZzZL/RcMkGSWZdWMtaSixPApm7?=
 =?us-ascii?q?b4sKF+cPOvxXr5PnqFsIsBCxBQisBOf0yj9PgH/9wKo30+E7HgHcxgMgGcgCsX?=
 =?us-ascii?q?rVrNXxL6cSVua1wbLPzTXZdfxZxTP955bSfh89pvGMWKt9fMzMwkcsDwPIlkuc?=
 =?us-ascii?q?pZDhMj+Py+gAvXaX4/B9We+sl2IrsQB8rzq3yssxhYTFm5gZxk3L+Ch42oo5OM?=
 =?us-ascii?q?C0RU9hbdK6DZddsTyROZFsTcM4WW5ovT43yr0Ytp6/eygH0IonxxHBZPydaYSI?=
 =?us-ascii?q?4QzsVPyXIThmgHJpYrW/hwy98US4y+38UNe70EpSoyZbjtXBsmoB2wHd58SZUP?=
 =?us-ascii?q?dx40Ss1SqV2w3S6OxIOUU0mrDaK54lzL4wjJ0TsUHbEy/ymUX2irKWd0o99uir?=
 =?us-ascii?q?9evneLPmqYGYN4NtjQH/PKIuldKlAekjLAgOUHaU+f6m2L3g40L5WrNKgeMykq?=
 =?us-ascii?q?XDt5DaP8sbqrajAwBJyoYj9wq/DzC+3dQcnHkHL0xKdAiIjoj0IFzOJPH4DfGi?=
 =?us-ascii?q?g1WjijtrxvbGPqH/DZXJNHTMjLDhfbNl4U5G1AUz1cxf545TCrwZIPL8QE7xtM?=
 =?us-ascii?q?DCAR8+KQC0w/vnB8971oMRQm+PBq6ZMKXPsV6H/O4vIu+MZJMLtzb5MfQq+/nu?=
 =?us-ascii?q?jXohk18HYaapxYcXaGy/Hvl+IUWZZmTjjs0CEWcNuAo+SuvqhUaGUT5SYXayQq?=
 =?us-ascii?q?096is6CIKgEYfMWIStjKad0ye8G51cfnpGBUyUEXf0a4WEXO8BZziJIs9hlTwE?=
 =?us-ascii?q?VqKtS5U72hGsrwL6z7tnLuzJ+iwXr57j1d515/HNmhE27zB7E8Od02SVRWFugm?=
 =?us-ascii?q?wIXyM23Lx4oUFlyVeMy654j+ZcFdxS/fxJVAg6OIXYz+x7DdDyRw3Acs2ISFag?=
 =?us-ascii?q?XtWpHzUxQsgtzN8JZkZ3A8+igQzb3yq2H78VkKSGC4Eu/aLCwXf9PcZ9xGzA1K?=
 =?us-ascii?q?k6kVYmRMxDNWmlhq568wjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbkoLxFOydCcJadQat3ml1NGROz9N9TYeG+xn2awBR?=
 =?us-ascii?q?CVxrKDdobqemMd3DnDB0gAiQwc4XGGNQ0mDCe7v23eFCBuFU7oY0707el+qXa7?=
 =?us-ascii?q?TkgozwGKb0xtzaa19gQShfyGT/MT37QEuCg6pjVwHVa92c/WCtWaqwpgeqVcfc?=
 =?us-ascii?q?0y4FNd2W3FsAx9O4SqL7p+iV4GbwR3o0Tu2g1tBYVEj8cro20lzQpoJa2DzVNO?=
 =?us-ascii?q?aimX3ZbzOr3QNGn/5xSva6/Q2lHD39ea4KYP6PIkq1r9uAGlDFYt83Ji09NNyX?=
 =?us-ascii?q?uT+o3KDBYOUZL2Sks29wV6q6vGbSUn5oLU1WdjMa+7sjLZ39IpBe0lyguvfttF?=
 =?us-ascii?q?MaOEEhPyHNMeB8S0NOMqnF2pZAoePO9O7K40I9+md/ye1a6xPeZvgCipjX5a74?=
 =?us-ascii?q?B6yE6M8TRzSvTJ35oc3/6XxA+HWCrig1e7tcD3n5tJZTUTHmq51CjlC5RdZqx0?=
 =?us-ascii?q?fYYXF2iuJ9e7ycl5h57oQ3RY7kKsB0sa2M+1fhqfd1z83QxK2UUXu3Cngja4zz?=
 =?us-ascii?q?pvnjEtr6qf2jHOwuv4eBoGPG5LWHdtjVP2LYeoiNAaWVCibxI1mxu9+Ub6269b?=
 =?us-ascii?q?qbx9L2bJW0dIfCv2L2Z4XqurrLWCYM1P6JIusSpJVuSxelSaSr/7oxsH3CLvBW?=
 =?us-ascii?q?pexDYndz60vpX1hQB1iGWYLHxrtnrWZdlwxQvD5NzbXfNQ3iAJRC5ihTnVB1i8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSbIowz9YoXx16S6LPhofk9nBFLn78p6G4d+kpY/hZ0K2HgagImV8mQDkWvp?=
 =?us-ascii?q?Ldpb3qf+ZmIXRTEX297V/BTl2Ep7I3KMxoL5VW+SztFvZtakeWMWxjwy79pRB6?=
 =?us-ascii?q?iK9rxEkjB4ol65rQLXfPh8kS0Ryfoo6H4Gne4JvBAhwTmaArAXBUNYJzDjlwyU?=
 =?us-ascii?q?79Ciq6VafHqvcb+11EZknNGuFreCohxHWHbie5cvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M0lgZh3Za+vIiaMWlt+L+5?=
 =?us-ascii?q?DwVcNj30YcMT5z7sgbxfnsaQw4CgAJFhFi8XU5vvSPKiCCgSuuj/NwaSDD08rW?=
 =?us-ascii?q?+WGbjFEg+a9khmtGjDE4yxO3GUOXkZzshiRB+HK0xEmw0UWDQ6npgkFgGl3sDh?=
 =?us-ascii?q?cUF55iwP6V78sBdD1uVoNxznWGfFuAiocis0SISYLBdO7gBC4FrVMdWD7u1pGS?=
 =?us-ascii?q?FU5IahrAuLKmyUfAlICWAJWkqZB1HsJLWu5N/A8/SGCeq6NffBfbKOqelGXfeS?=
 =?us-ascii?q?2Z2vypdm/yqLNsiXPnltEfw72klAXXB4AcjZmC8PSysYly3Tdc6buQy89zZzrs?=
 =?us-ascii?q?C+9vTrRQ3u6ZGOC7tULdVg5RS2jb2fOO6XgSZzMSxY2Y8UxX/U1Lgf20YfhDtz?=
 =?us-ascii?q?dza2C7QPqy7MQLjUmq9WFBMbbyJzNM1V76MzxAVNOMjbis/r2b58lPI6F1BFVV?=
 =?us-ascii?q?n5kMGzecMKO329NE/ABEuTKLSGJDjLz9vrbq+mVbJQjPtbtxurtDafEk/jOCmD?=
 =?us-ascii?q?ljbzWxCuN+FMkD+UPBhEtI6hdRZtDHDpTMj6ZR2jLN93kTo2zKU0h3zQM24cND?=
 =?us-ascii?q?l8c0VVobyR7SNXmPN/G2Na43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6XIMePsgiHuMht1juVerlq+I0DUjGApDrHNHiZyGuW1mOL7F7d9QVHDc5hUP4G?=
 =?us-ascii?q?6MTRMQqJ8tDtzpprAVydXVkq/3AClN/siS/sYGAcXQbsWdPz5pMgTsMCDbARFD?=
 =?us-ascii?q?TjOxM2zbwUtHn7Xa7neSqIo7rJnEgpcCSrZHElcyE7dSCEt/G8cZCIxqRT5imr?=
 =?us-ascii?q?me3+AS4n/riRDLTcMSgZHDTfWUSaHqISyQi/9bZh8TxrXQKp4aPYn2nUdlbw8p?=
 =?us-ascii?q?z8zxB0PMUIUV8WVaZQgurRAV/Q=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACWuQ5ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVWCFieME1+LMIIhlz2BcxIBARgTAYdtIjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlAwMBAj0BATcBBQkBAVADVAcSB?=
 =?us-ascii?q?YMcggIEAaVRgh+CdgEBBYcgCIdyhC+BVz+BEYJkimgikDyQOwcCgiEEjyoYkT2?=
 =?us-ascii?q?JIo9nAgQCBAUCEwGBRoIOMxoEH4M8ghsMFxKDOIp0UYEFAQGMGAEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAACWuQ5ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVWCFieME1+LMIIhlz2BcxIBARgTAYdtIjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkjDII2IoJlAwMBAj0BATcBBQkBAVADVAcSBYMcggIEAaVRgh+?=
 =?us-ascii?q?CdgEBBYcgCIdyhC+BVz+BEYJkimgikDyQOwcCgiEEjyoYkT2JIo9nAgQCBAUCE?=
 =?us-ascii?q?wGBRoIOMxoEH4M8ghsMFxKDOIp0UYEFAQGMGAEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="54589317"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 11:09:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729212AbeLJTJQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 14:09:16 -0500
Received: from aserp2130.oracle.com ([141.146.126.79]:58078 "EHLO
        aserp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729196AbeLJTJN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 14:09:13 -0500
Received: from pps.filterd (aserp2130.oracle.com [127.0.0.1])
        by aserp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wBAJ8nKW115853;
        Mon, 10 Dec 2018 19:08:54 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id : in-reply-to : references; s=corp-2018-07-02;
 bh=r+EJebpnfrk/sWr6hWd1Ab7LVK03r8tKPcKLYy60yB0=;
 b=oBLACdtvYCNiRAd/eeuakcbkSeNj3uEx/yoEksT2LXEEaUzGU9VlB/E15TpuPuz0tLso
 yEWIp/y48F2JfHLDAlfn99GkkFJwMmJSOQwlbasMgfDHtBRkuLq8m6AqtFwvRsuHjEc4
 gdyLYAoMGUKaH58H9FsNDe20q7zbR3WLhpWZlcSgvKZKgVPw1OKt5ZHsw15UK2CVQEJq
 tTeW8zh8OaYfkVmOrGcEWDiC1oddNKLkigaOFMCiemvT2bV9bqG7nF9KPTHduhoKLofD
 qTAg2AK+4FQmHhLdzNSM3YC+8xm9ZNarjDoEmwwKby6W00ZHEkbm/I+0rRuR7CNyb72C Bg== 
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
        by aserp2130.oracle.com with ESMTP id 2p83fe01d8-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Mon, 10 Dec 2018 19:08:54 +0000
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
        by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wBAJ8r1d006397
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Mon, 10 Dec 2018 19:08:53 GMT
Received: from abhmp0015.oracle.com (abhmp0015.oracle.com [141.146.116.21])
        by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wBAJ8re6018718;
        Mon, 10 Dec 2018 19:08:53 GMT
Received: from marawils-linux.us.oracle.com (/10.141.196.37)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Mon, 10 Dec 2018 11:08:52 -0800
From: Maran Wilson <maran.wilson@oracle.com>
To: x86@kernel.org, xen-devel@lists.xenproject.org,
        linux-kernel@vger.kernel.org, kvm@vger.kernel.org,
        pbonzini@redhat.com, jgross@suse.com
Cc: boris.ostrovsky@oracle.com, tglx@linutronix.de, mingo@redhat.com,
        hpa@zytor.com, roger.pau@citrix.com, rkrcmar@redhat.com,
        maran.wilson@oracle.com
Subject: [PATCH v9 4/7] xen/pvh: Move Xen specific PVH VM initialization out of common file
Date: Mon, 10 Dec 2018 11:08:45 -0800
Message-Id: <1544468926-737-2-git-send-email-maran.wilson@oracle.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1544468734-32763-1-git-send-email-maran.wilson@oracle.com>
References: <1544468734-32763-1-git-send-email-maran.wilson@oracle.com>
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9103 signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1812100170
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

We need to refactor PVH entry code so that support for other hypervisors
like Qemu/KVM can be added more easily.

This patch moves the small block of code used for initializing Xen PVH
virtual machines into the Xen specific file. This initialization is not
going to be needed for Qemu/KVM guests. Moving it out of the common file
is going to allow us to compile kernels in the future without CONFIG_XEN
that are still capable of being booted as a Qemu/KVM guest via the PVH
entry point.

Signed-off-by: Maran Wilson <maran.wilson@oracle.com>
Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Reviewed-by: Juergen Gross <jgross@suse.com>
---
 arch/x86/platform/pvh/enlighten.c | 29 ++++++++++++++++++++---------
 arch/x86/xen/enlighten_pvh.c      | 22 +++++++++++++++++++++-
 include/xen/xen.h                 |  3 +++
 3 files changed, 44 insertions(+), 10 deletions(-)

diff --git a/arch/x86/platform/pvh/enlighten.c b/arch/x86/platform/pvh/enlighten.c
index 491932991202..637bd74ba32d 100644
--- a/arch/x86/platform/pvh/enlighten.c
+++ b/arch/x86/platform/pvh/enlighten.c
@@ -81,27 +81,38 @@ static void __init init_pvh_bootparams(void)
 	x86_init.acpi.get_root_pointer = pvh_get_root_pointer;
 }
 
+/*
+ * If we are trying to boot a Xen PVH guest, it is expected that the kernel
+ * will have been configured to provide the required override for this routine.
+ */
+void __init __weak xen_pvh_init(void)
+{
+	xen_raw_printk("Error: Missing xen PVH initialization\n");
+	BUG();
+}
+
+/*
+ * When we add support for other hypervisors like Qemu/KVM, this routine can
+ * selectively invoke the appropriate initialization based on guest type.
+ */
+static void hypervisor_specific_init(void)
+{
+	xen_pvh_init();
+}
+
 /*
  * This routine (and those that it might call) should not use
  * anything that lives in .bss since that segment will be cleared later.
  */
 void __init xen_prepare_pvh(void)
 {
-	u32 msr;
-	u64 pfn;
-
 	if (pvh_start_info.magic != XEN_HVM_START_MAGIC_VALUE) {
 		xen_raw_printk("Error: Unexpected magic value (0x%08x)\n",
 				pvh_start_info.magic);
 		BUG();
 	}
 
-	xen_pvh = 1;
-	xen_start_flags = pvh_start_info.flags;
-
-	msr = cpuid_ebx(xen_cpuid_base() + 2);
-	pfn = __pa(hypercall_page);
-	wrmsr_safe(msr, (u32)pfn, (u32)(pfn >> 32));
+	hypervisor_specific_init();
 
 	init_pvh_bootparams();
 }
diff --git a/arch/x86/xen/enlighten_pvh.c b/arch/x86/xen/enlighten_pvh.c
index 6be7bc719b38..41a7d6ad74e0 100644
--- a/arch/x86/xen/enlighten_pvh.c
+++ b/arch/x86/xen/enlighten_pvh.c
@@ -1,5 +1,12 @@
 // SPDX-License-Identifier: GPL-2.0
-#include <linux/types.h>
+#include <linux/acpi.h>
+
+#include <asm/io_apic.h>
+#include <asm/hypervisor.h>
+
+#include <xen/xen.h>
+#include <asm/xen/interface.h>
+#include <asm/xen/hypercall.h>
 
 /*
  * PVH variables.
@@ -8,3 +15,16 @@
  * after startup_{32|64} is invoked, which will clear the .bss segment.
  */
 bool xen_pvh __attribute__((section(".data"))) = 0;
+
+void __init xen_pvh_init(void)
+{
+	u32 msr;
+	u64 pfn;
+
+	xen_pvh = 1;
+	xen_start_flags = pvh_start_info.flags;
+
+	msr = cpuid_ebx(xen_cpuid_base() + 2);
+	pfn = __pa(hypercall_page);
+	wrmsr_safe(msr, (u32)pfn, (u32)(pfn >> 32));
+}
diff --git a/include/xen/xen.h b/include/xen/xen.h
index d7a2678da77f..0e2156786ad2 100644
--- a/include/xen/xen.h
+++ b/include/xen/xen.h
@@ -29,6 +29,9 @@ extern bool xen_pvh;
 
 extern uint32_t xen_start_flags;
 
+#include <xen/interface/hvm/start_info.h>
+extern struct hvm_start_info pvh_start_info;
+
 #ifdef CONFIG_XEN_DOM0
 #include <xen/interface/xen.h>
 #include <asm/xen/hypervisor.h>
-- 
2.16.1

