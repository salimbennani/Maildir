Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1E9AC5804F7
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 17:03:01 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 17:03:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ACpg/XRz931BKoW3XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoRL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJNyI3/m/UhMx/jqVVoBO9qBJwzIHafZmVOfh8cK7SYN8XS3ZNUdhKVyFaHoO8?=
 =?us-ascii?q?dpECA/YbMOpEsoXwoUYFoxukBQmrAePi0iNFhnv33a0hz+QuCwDG3BY9FNwOqn?=
 =?us-ascii?q?TbttP1O7sTUeCu0aLFyinOb/dX2Tfm9IjHaBEhoeuWUbxwa8re008vGB/EjlWL?=
 =?us-ascii?q?soHkMS6a2fgXv2eH6OpgUPuihmg6oA9yujii3tkghpXKi44P11zI6CZ0zJwrKd?=
 =?us-ascii?q?C2SEN3e8OoHZlIuy2HM4Z7RtkuT39otSs60LELtpG2cDIUxJkn2xLTc/KHfJaL?=
 =?us-ascii?q?7x7/UeucJCp3iG9rdb2ighu+7EytxfDyW8Sx3lZFsi5In9fJu3wTyRPc9siKR/?=
 =?us-ascii?q?1g9Um7wzmPzRrc6uRcLEA0i6XbL5khz6Y0lpoSqkTDAjT2lF/5jK+Qa0Uo4O+o?=
 =?us-ascii?q?6/7oYrn+p5+cMZF7ih3mP6gwhsCyAv40PhUTU2WY4+iwyrPu8E3jTLlXjPA6iq?=
 =?us-ascii?q?zZv4rbJcQfqK65GQhV0oM75hamETim1ckYkWAaI11bZhKIkYzpN0jVL/D/EPe/?=
 =?us-ascii?q?hUijnylwx/zBOr3hA5bNIWbZnLbuYLZw80pcyAs1zdBC6JNYELABIPTvWkDvsN?=
 =?us-ascii?q?zUFAM2Mwuxw+v8DtV90YUeWW2JAq+EKq/StkWI5u03L+mWeIAVoCr9K+Qi5/P2?=
 =?us-ascii?q?iX85mFwdcrez0ZoYdXC1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X/?=
 =?us-ascii?q?F02zcgFYjzDZvfXpv/x/uF3TynBdtQYWZJDE3KFm3nMICNWvMJYSTVJdd9kzsC?=
 =?us-ascii?q?Tv+4Roo8kB2jqgL+mIdhNfferygRtJb/04ps6ujO0B0/6zFwSt6QynyAVH1cmG?=
 =?us-ascii?q?QOSDkrmqdlrhtm112B3KNk1uFeDsFZ/PhTUw03ZqLbmqZjBtXvHw7MYNqNYFCh?=
 =?us-ascii?q?RNqgHHc2VN17i4sXbkNgXtmvkB3H9yytBbATivqMHpNituqWxnX0OoNnym3Nyo?=
 =?us-ascii?q?EniF8pRNYJMnepzOYr7gXWGsvTkl6SiY6scqIT2jOL832MmzmgpkZdBSd0UL7Z?=
 =?us-ascii?q?VHEFLmXMpNLy51iKG5aqCK87Owpbj+CYI61Ba8bBkllNAvzkPYKNMCqKh26sCE?=
 =?us-ascii?q?PQlfu3Z43wdjBF0Q=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAADfFwtcmBHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTBQgVk5Coc3A4RPX4poSoFogSGWU4EkA0wTARgUh10iNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMYCYJcAgEDAQIPFRkBAQQKAyYBA?=
 =?us-ascii?q?gMBAgYBAQEBRggDAS4lAgQBEgUdgn+BagMVAQSaET0CYAKKB4FsM4J2AQEFgkO?=
 =?us-ascii?q?CRBiCCQiHc4MTgRyBVz+BEDSCKosRiTWGTZBnBwKCJY8+kTiJEI9kAgQCBAUCD?=
 =?us-ascii?q?QEBBYFGgg0fFBojgzyCGwwXEoM4ilNygQchiEVYAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0AaAADfFwtcmBHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTB?=
 =?us-ascii?q?QgVk5Coc3A4RPX4poSoFogSGWU4EkA0wTARgUh10iNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEBAQgLCwYbDiMMgjYFAgMYCYJcAgEDAQIPFRkBAQQKAyYBAgMBAgYBAQEBRgg?=
 =?us-ascii?q?DAS4lAgQBEgUdgn+BagMVAQSaET0CYAKKB4FsM4J2AQEFgkOCRBiCCQiHc4MTg?=
 =?us-ascii?q?RyBVz+BEDSCKosRiTWGTZBnBwKCJY8+kTiJEI9kAgQCBAUCDQEBBYFGgg0fFBo?=
 =?us-ascii?q?jgzyCGwwXEoM4ilNygQchiEVYAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,328,1539673200"; 
   d="scan'208";a="54343069"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 17:03:00 -0800
Received: from localhost ([::1]:48609 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVR1H-0000Gg-GF
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 20:02:59 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40336)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=8739c4fd6=Alistair.Francis@wdc.com>)
	id 1gVQns-0003L2-RK
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 19:49:11 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=8739c4fd6=Alistair.Francis@wdc.com>)
	id 1gVQnp-0001F8-Ib
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 19:49:08 -0500
Received: from esa5.hgst.iphmx.com ([216.71.153.144]:42005)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <prvs=8739c4fd6=Alistair.Francis@wdc.com>)
	id 1gVQno-0001EI-W8; Fri, 07 Dec 2018 19:49:05 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
	d=wdc.com; i=@wdc.com; q=dns/txt; s=dkim.wdc.com;
	t=1544230146; x=1575766146;
	h=from:to:cc:subject:date:message-id:references:
	in-reply-to:content-transfer-encoding:mime-version;
	bh=wM+EKt3q9F/PQXRZk+HLzILIrX6hY5ik+v94jK2Lo/s=;
	b=ofC6Vrq9jmUNZC8HgkzApT0fEBKYJah9h56tamRZrMbAvGmRIlZL1ELF
	Fyu4PpRcR0/5xb0lgYoidbwSUZ1J87YZUtdkenum5S3S2nLG0voBcFK7V
	MA4s5Tr+AY/se5ryf9b8x32cl6kd8Nycy6YWrpLsduvTJFOp6qGcaFmJI
	yvr+0Vvktvlk0VEAqHBDN1qZDfOWUBBGxuyqj9+zsCGoUH5At2r81GQa6
	AhR4ubXv6Qfcf/PSihHkFVoT422WvNBkqiXuf81cynDN60sInWe0F50SL
	7Sq3z1jh1xF6cWbfyRlPQpRfbed64tteRCG6ESci3LXTcRO/S8fYYAu+J Q==;
X-IronPort-AV: E=Sophos;i="5.56,328,1539619200"; d="scan'208";a="97343920"
Received: from mail-sn1nam01lp2057.outbound.protection.outlook.com (HELO
	NAM01-SN1-obe.outbound.protection.outlook.com) ([104.47.32.57])
	by ob1.hgst.iphmx.com with ESMTP; 08 Dec 2018 08:49:04 +0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sharedspace.onmicrosoft.com; s=selector1-wdc-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
	bh=1T1pNVD4whFR58GL2UG8mjOT0A49IB5duqnHyjfqLOY=;
	b=QZ4qABV54v/peiJkkdlis9y3anJoQFQ+OnwTQjm/QzUuzNIsKySJG3OPU9yZ66vp0XryNJZJI+op+4Crq3kwnyxPJA7NwKoqG39xATat0hIctFBy8axjoENVFWyQS/5LyaBDeBAGuYAs1knknHi2Yn2pdby2cIgZlzdsfUzxV40=
Received: from MWHPR04MB0401.namprd04.prod.outlook.com (10.173.48.18) by
	MWHPR04MB0304.namprd04.prod.outlook.com (10.169.202.138) with Microsoft
	SMTP
	Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
	15.20.1404.20; Sat, 8 Dec 2018 00:49:02 +0000
Received: from MWHPR04MB0401.namprd04.prod.outlook.com
	([fe80::d13d:19d3:fc93:2ec5]) by
	MWHPR04MB0401.namprd04.prod.outlook.com
	([fe80::d13d:19d3:fc93:2ec5%9]) with mapi id 15.20.1404.021;
	Sat, 8 Dec 2018 00:49:02 +0000
From: Alistair Francis <Alistair.Francis@wdc.com>
To: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>, "qemu-riscv@nongnu.org"
	<qemu-riscv@nongnu.org>
Thread-Topic: [RFC v3 18/24] riscv: tcg-target: Add direct load and store
	instructions
Thread-Index: AQHUjo/PDE74pUAMSU+EhX3hXisryw==
Date: Sat, 8 Dec 2018 00:49:01 +0000
Message-ID: <1f6b3d26810eb969cf90f0ee978fe2817e6e6421.1544229872.git.alistair.francis@wdc.com>
References: <cover.1544229872.git.alistair.francis@wdc.com>
In-Reply-To: <cover.1544229872.git.alistair.francis@wdc.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.19.1
x-clientproxiedby: BYAPR04CA0011.namprd04.prod.outlook.com
	(2603:10b6:a03:40::24) To MWHPR04MB0401.namprd04.prod.outlook.com
	(2603:10b6:300:70::18)
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=Alistair.Francis@wdc.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [199.255.44.250]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; MWHPR04MB0304;
	6:DShM7qkii38Ox4rDL3B84ZMAqVXN+lcNinYXUIwWjWhzzelSDLO4nH+6xlmkPtQhElgZ67+U+SNn7fj4K5OeOTM0UpguhRH4q+Q8qZA4AWSOaYIN8h1DeppQNBDumQ1rT5PAFtC8j2rgm+FR2tCiuA2BlmcSIvE0lnlMGwbCKd58VRmR0Bv5/I3BdUs0unlxYaae9Q0TU2lNYUX+vQuYymFK5+CKpfw/rSBcJBLRozb4Y8crnXUJ1RqKPJMz7HzCf3x2FiC/r8GB8SIvPNXEkJ4XiyuZ4sxajFgz3RyRfAVuwn1ze4SoBg8iOoIRX0eeiK8dQZz1ztPPld7KZC6huAeyNDn2ALjpbahrs7Tab/CLieN5aNiYmzYUKAGtr0fkc3jMD/l4T41bz7vYmgK00tWdGHU/PPzTTFkqWu40p3mbHgGJC9ubXBZT6rJB7yvPlNbxvrxKiiVqjyxHPWZzug==;
	5:8XPN5wAkux3upNNMomCqFO7p6SRjWiMqb2sP9bH8SCkNNBnTyjurrd782oQFf+fwySLW/hXSoUPeHdi4OaDTOhouSz8JrPQNs9zoh38DEM5mAx/hr7I7FYacBz97q1qjwHlsQdMSCafy69kGEr96a4ggMpxmzT9QewgcN7Bf2a8=;
	7:IYsGdHFRAG1KKEcQDyamxjCgiN9ARVQX/TO/p/pNG4+nK930FgcpvaQU7nj9fkMX2VKA3jXcZCiGnWC2iKfxQruyNlI6RvITRxGiuRNO2NriJq0+oQxqUgF06h+Zzg8nnReRAcCMjdlgD6TA8WVcgQ==
x-ms-office365-filtering-correlation-id: a09bb442-c4cc-48db-f97b-08d65ca6f22c
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0; PCL:0;
	RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);
	SRVR:MWHPR04MB0304; 
x-ms-traffictypediagnostic: MWHPR04MB0304:
wdcipoutbound: EOP-TRUE
x-microsoft-antispam-prvs: <MWHPR04MB0304FC93A380D49FD758C73290AB0@MWHPR04MB0304.namprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(93006095)(93001095)(3231455)(999002)(944501520)(52105112)(3002001)(10201501046)(6055026)(148016)(149066)(150057)(6041310)(20161123564045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123562045)(20161123558120)(201708071742011)(7699051)(76991095);
	SRVR:MWHPR04MB0304; BCL:0; PCL:0; RULEID:; SRVR:MWHPR04MB0304; 
x-forefront-prvs: 0880FB6EC1
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(979002)(346002)(396003)(39860400002)(366004)(376002)(136003)(189003)(199004)(54906003)(110136005)(44832011)(386003)(6506007)(5660300001)(68736007)(2906002)(71190400001)(25786009)(71200400001)(86362001)(316002)(99286004)(14454004)(66066001)(102836004)(2501003)(6512007)(53936002)(4326008)(11346002)(6116002)(478600001)(81166006)(81156014)(3846002)(72206003)(8936002)(105586002)(256004)(118296001)(106356001)(39060400002)(446003)(6436002)(36756003)(6486002)(486006)(76176011)(186003)(2616005)(305945005)(26005)(97736004)(52116002)(476003)(50226002)(7736002)(8676002)(969003)(989001)(999001)(1009001)(1019001);
	DIR:OUT; SFP:1102; SCL:1; SRVR:MWHPR04MB0304;
	H:MWHPR04MB0401.namprd04.prod.outlook.com; FPR:; SPF:None;
	LANG:en; PTR:InfoNoRecords; MX:1; A:1; 
x-microsoft-antispam-message-info: VmTpZyme1PUal5TNPS6+DX/id7EpBM6y1nhVp4JYe1lg3Qe+ImHuppJahFtdT5AJQOrzbOf5E7khx3cfnwqooRgT26/yrcLEXUaKZ9XvIcuoVvOyMysW6MD58pHbEArvMaLLEJ8HHgRW28GCHG0ym1qGnmNhd0Q1Wh2NVC8VoMjJIuvc23BvugsQyFbOosUWmff+d5yDc0TTR5LeBsZr0xqG29axsd5evatb/fqDwFZW5/IjYevQMcxkiG6vs9qmth3uNEMM1gcrrc4bM5V960gmudg8Ui5bGWFpBzMKl7tsYzLxzhcISwdd+5M0ESHdnURExPA6GdYuyxJl88wpgOh3gzXGlLWvzofRAEFI9po=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: wdc.com
X-MS-Exchange-CrossTenant-Network-Message-Id: a09bb442-c4cc-48db-f97b-08d65ca6f22c
X-MS-Exchange-CrossTenant-originalarrivaltime: 08 Dec 2018 00:49:01.9045 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: b61c8803-16f3-4c35-9b17-6f65f441df86
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR04MB0304
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 216.71.153.144
Subject: [Qemu-devel] [RFC v3 18/24] riscv: tcg-target: Add direct load and
 store instructions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "alistair23@gmail.com" <alistair23@gmail.com>,
	"richard.henderson@linaro.org" <richard.henderson@linaro.org>,
	Alistair Francis <Alistair.Francis@wdc.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>
Signed-off-by: Michael Clark <mjc@sifive.com>
---
 tcg/riscv/tcg-target.inc.c | 158 +++++++++++++++++++++++++++++++++++++
 1 file changed, 158 insertions(+)

diff --git a/tcg/riscv/tcg-target.inc.c b/tcg/riscv/tcg-target.inc.c
index 9d07d5ecde..280ba699c9 100644
--- a/tcg/riscv/tcg-target.inc.c
+++ b/tcg/riscv/tcg-target.inc.c
@@ -1132,3 +1132,161 @@ static void tcg_out_qemu_st_slow_path(TCGContext *s=
, TCGLabelQemuLdst *l)
     tcg_out_goto(s, l->raddr);
 }
 #endif /* CONFIG_SOFTMMU */
+
+static void tcg_out_qemu_ld_direct(TCGContext *s, TCGReg lo, TCGReg hi,
+                                   TCGReg base, TCGMemOp opc, bool is_64)
+{
+    const TCGMemOp bswap =3D opc & MO_BSWAP;
+
+    /* We don't yet handle byteswapping, assert */
+    g_assert(!bswap);
+
+    switch (opc & (MO_SSIZE)) {
+    case MO_UB:
+        tcg_out_opc_imm(s, OPC_LBU, lo, base, 0);
+        break;
+    case MO_SB:
+        tcg_out_opc_imm(s, OPC_LB, lo, base, 0);
+        break;
+    case MO_UW:
+        tcg_out_opc_imm(s, OPC_LHU, lo, base, 0);
+        break;
+    case MO_SW:
+        tcg_out_opc_imm(s, OPC_LH, lo, base, 0);
+        break;
+    case MO_UL:
+        if (TCG_TARGET_REG_BITS =3D=3D 64 && is_64) {
+            tcg_out_opc_imm(s, OPC_LWU, lo, base, 0);
+            break;
+        }
+        /* FALLTHRU */
+    case MO_SL:
+        tcg_out_opc_imm(s, OPC_LW, lo, base, 0);
+        break;
+    case MO_Q:
+        /* Prefer to load from offset 0 first, but allow for overlap.  */
+        if (TCG_TARGET_REG_BITS =3D=3D 64) {
+            tcg_out_opc_imm(s, OPC_LD, lo, base, 0);
+        } else if (lo !=3D base) {
+            tcg_out_opc_imm(s, OPC_LW, lo, base, 0);
+            tcg_out_opc_imm(s, OPC_LW, hi, base, 4);
+        } else {
+            tcg_out_opc_imm(s, OPC_LW, hi, base, 4);
+            tcg_out_opc_imm(s, OPC_LW, lo, base, 0);
+        }
+        break;
+    default:
+        g_assert_not_reached();
+    }
+}
+
+static void tcg_out_qemu_ld(TCGContext *s, const TCGArg *args, bool is_64)
+{
+    TCGReg addr_regl, addr_regh __attribute__((unused));
+    TCGReg data_regl, data_regh;
+    TCGMemOpIdx oi;
+    TCGMemOp opc;
+#if defined(CONFIG_SOFTMMU)
+    tcg_insn_unit *label_ptr[1];
+#endif
+    TCGReg base =3D TCG_REG_TMP0;
+
+    data_regl =3D *args++;
+    data_regh =3D (TCG_TARGET_REG_BITS =3D=3D 32 && is_64 ? *args++ : 0);
+    addr_regl =3D *args++;
+    addr_regh =3D (TCG_TARGET_REG_BITS < TARGET_LONG_BITS ? *args++ : 0);
+    oi =3D *args++;
+    opc =3D get_memop(oi);
+
+#if defined(CONFIG_SOFTMMU)
+    tcg_out_tlb_load(s, addr_regl, addr_regh, oi, label_ptr, 1);
+    tcg_out_qemu_ld_direct(s, data_regl, data_regh, base, opc, is_64);
+    add_qemu_ldst_label(s, 1, oi,
+                        (is_64 ? TCG_TYPE_I64 : TCG_TYPE_I32),
+                        data_regl, data_regh, addr_regl, addr_regh,
+                        s->code_ptr, label_ptr);
+#else
+    if (TCG_TARGET_REG_BITS > TARGET_LONG_BITS) {
+        tcg_out_ext32u(s, base, addr_regl);
+        addr_regl =3D base;
+    }
+
+    if (guest_base =3D=3D 0) {
+        tcg_out_opc_reg(s, OPC_ADD, base, addr_regl, TCG_REG_ZERO);
+    } else {
+        tcg_out_opc_reg(s, OPC_ADD, base, TCG_GUEST_BASE_REG, addr_regl);
+    }
+    tcg_out_qemu_ld_direct(s, data_regl, data_regh, base, opc, is_64);
+#endif
+}
+
+static void tcg_out_qemu_st_direct(TCGContext *s, TCGReg lo, TCGReg hi,
+                                   TCGReg base, TCGMemOp opc)
+{
+    const TCGMemOp bswap =3D opc & MO_BSWAP;
+
+    /* We don't yet handle byteswapping, assert */
+    g_assert(!bswap);
+
+    switch (opc & (MO_SSIZE)) {
+    case MO_8:
+        tcg_out_opc_store(s, OPC_SB, base, lo, 0);
+        break;
+    case MO_16:
+        tcg_out_opc_store(s, OPC_SH, base, lo, 0);
+        break;
+    case MO_32:
+        tcg_out_opc_store(s, OPC_SW, base, lo, 0);
+        break;
+    case MO_64:
+        if (TCG_TARGET_REG_BITS =3D=3D 64) {
+            tcg_out_opc_store(s, OPC_SD, base, lo, 0);
+        } else {
+            tcg_out_opc_store(s, OPC_SW, base, lo, 0);
+            tcg_out_opc_store(s, OPC_SW, base, hi, 4);
+        }
+        break;
+    default:
+        g_assert_not_reached();
+    }
+}
+
+static void tcg_out_qemu_st(TCGContext *s, const TCGArg *args, bool is_64)
+{
+    TCGReg addr_regl, addr_regh __attribute__((unused));
+    TCGReg data_regl, data_regh;
+    TCGMemOpIdx oi;
+    TCGMemOp opc;
+#if defined(CONFIG_SOFTMMU)
+    tcg_insn_unit *label_ptr[1];
+#endif
+    TCGReg base =3D TCG_REG_TMP0;
+
+    data_regl =3D *args++;
+    data_regh =3D (TCG_TARGET_REG_BITS =3D=3D 32 && is_64 ? *args++ : 0);
+    addr_regl =3D *args++;
+    addr_regh =3D (TCG_TARGET_REG_BITS < TARGET_LONG_BITS ? *args++ : 0);
+    oi =3D *args++;
+    opc =3D get_memop(oi);
+
+#if defined(CONFIG_SOFTMMU)
+    tcg_out_tlb_load(s, addr_regl, addr_regh, oi, label_ptr, 0);
+    tcg_out_qemu_st_direct(s, data_regl, data_regh, base, opc);
+    add_qemu_ldst_label(s, 0, oi,
+                        (is_64 ? TCG_TYPE_I64 : TCG_TYPE_I32),
+                        data_regl, data_regh, addr_regl, addr_regh,
+                        s->code_ptr, label_ptr);
+#else
+    if (TCG_TARGET_REG_BITS > TARGET_LONG_BITS) {
+        tcg_out_ext32u(s, base, addr_regl);
+        addr_regl =3D base;
+    }
+
+    if (guest_base =3D=3D 0) {
+        tcg_out_opc_reg(s, OPC_ADD, base, addr_regl, TCG_REG_ZERO);
+    } else {
+        tcg_out_opc_reg(s, OPC_ADD, base, TCG_GUEST_BASE_REG, addr_regl);
+    }
+    tcg_out_qemu_st_direct(s, data_regl, data_regh, base, opc);
+#endif
+}
--=20
2.19.1


