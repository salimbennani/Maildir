Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:58:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 37C2258014B;
	Mon,  3 Dec 2018 14:17:17 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 14:17:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVEBANRV1EY2JR2t7hFDH6FlMnF3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCAu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhXrYf9p1wJoxSxGQaiC/jvyidKi3Ltwa000f4sHR3c0QA8Hd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41K7GzTTab/NLxzj97JXDfAw7rvCMW7J/a87RwlQoGgPAj1WQ?=
 =?us-ascii?q?sJHlMC2R1ugXqWiU9ephVeS1hG4jsAx+uT+vxsAwionNh4IVzErI+jl+wIYwPN?=
 =?us-ascii?q?C1TlNwb928EJZIqS2WK497Ttk/T2xmpio20KAKtJ2ncCQQyZkqxQbTZviaf4SS?=
 =?us-ascii?q?/B7vSumcLS1liH9qe7+znQu+/VSux+D6S8K6ykxFrjBfndnJrn0N1wLc6syASv?=
 =?us-ascii?q?Zl4Eeh1iiA1xrJ5uFHP080j6zbJIAlwrIqkZoTq0vDEjf3mEXwkqCWal0p9va0?=
 =?us-ascii?q?5+njeLnqu5GRO5Fuhg3jMakihtazDOU6PwQWWmiU4+W81Lnt/U3jR7VKi+U7kq?=
 =?us-ascii?q?3YsJDcOMQaqbe1AwxL3YY57RawETOm3M0fnXgJKlJKZgiHgpP3O1HBPv/4F+2z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDo/KLnjZn7ftZax95FJEyAov0dBf4IpZCrUAIPLwRED9rt?=
 =?us-ascii?q?PZDgIiPgywwubnDsh914wEVWKOBK+ZLL3dsVuS6u0zJOmMYZcfuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcdfaaz3JsXdGq3HvN8L0WZfHrjmNEBEWgRswo6TezqjkCCUDFJa3azWa?=
 =?us-ascii?q?I8+i80CIa8AYjfQYCthaSL3D2nEZ1OemBGFleMHG/qd4WDRfgAciGSIshnkjwC?=
 =?us-ascii?q?UrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI5xrt/oUx6yleAy6R4meZXFd5I6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKpA7APkbyHHpg08qPG0Hj3KMZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSAN/TL/K?=
 =?us-ascii?q?XW4BaUfMrdT2/EXCT6SwBrQhNQdBzc2CKq5OatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweRYk1l1rq1/AMVhPOGR/MS2LIEpDkuqzFuEFmh2NLWDsKKpxB9c6VEfd?=
 =?us-ascii?q?M9/FBH2HrFtwx8O5ygKLxihl4ecghto0PizRJ3Cp9EkcgrqnMqwxF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov629o091L3H?=
 =?us-ascii?q?qT+JrLDBAeXonsUkkq7Rd6obLaYi4j547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a80IsOqbeeJ1LSqPeZghj2mi2tH7Z?=
 =?us-ascii?q?t50kKN8Sp8V+HJ04wEw/GewguISTP8gE29vcDwnIBOfSsSEXanySj4GI5RYbV/?=
 =?us-ascii?q?fZwKCWiyOcK33Mhxh5n3V35e6lGjHVIG1Na1dhWIa1zywBNf1V4QoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5Uvix6lb?=
 =?us-ascii?q?pb5zLmnJTUdTYij2KXpvUq+xtrqEfs5O54kksSRRUOSgf1+aTqTxrAcd0yPmB2?=
 =?us-ascii?q?Fe3iw0dym2upXlmBx3kGCdI2xprHraesFwwg3T5MfGSv5S3ToGRS94hifRBlWn?=
 =?us-ascii?q?O9mp/NOUl4rMs+ykVmKhUIFTfjfvzY+aqCS74mhqCwWln/+vgt3nDRQ60Sjj2t?=
 =?us-ascii?q?hqTyrIqwzwYovq16S8Ku9nekhoBFnh68t1AI1+k40whI0O1ngenJma4X0HkWLr?=
 =?us-ascii?q?O9VBxa3+dGYNRSIMw9PN4wjqwkxjImiJx4LkTHqdxMRhasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArUTHUlbJyPgjRqJ?=
 =?us-ascii?q?4M6lrKVLemmva6O/21RkndCuF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSmSpnPmf9sWckyuEhixxuwIq6vJOGK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHTInsH?=
 =?us-ascii?q?ibHr7fHRKF5EdisnLCCJSrN3CRJHkEwtRuXhidJEpDgA8KWDU2hII2FgevxMb5?=
 =?us-ascii?q?akd2+igR5kLkqhtL0u9oNQPwUmLBqwezcDs0VIKTLBlL7gFB+kfVN9aR7vloEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+I?=
 =?us-ascii?q?xJKoz4tm5iuMOd+JPnV4FP073UxDXX9iFsTdmjUPTTEXli3XY86aohe85jN4rs?=
 =?us-ascii?q?Sl/Pv3XwLv4JOFC6FOPtV35xC2naCDOvaQhClnKDZY1ZAMxX7SxLgcxl4SjC5u?=
 =?us-ascii?q?eCe3EbQdri7AV6bQmq5RDx4GZCJ/LspI76Qg3gZTPc7XkM/61rl9jvQtEVdKSU?=
 =?us-ascii?q?Thmt21ZcwNO2yyLk7HC12RNLuYJTzH2cX3YaKnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWnMN92iD0626E7imnWOm4cLz?=
 =?us-ascii?q?d8dVhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuGi50jf5V4Gwmy7tJ?=
 =?us-ascii?q?6yFJXPx0lzHUrt5rolGmlPGAyztnUBVUrDZLi5mGvUFjOaXf65lBVmzI/BML7W?=
 =?us-ascii?q?WMFRsKo8FpBcHou6BVmZDzk/fINDpa89/SteEbFsScfNmNN2stGRnkAjjZCE0C?=
 =?us-ascii?q?VzH9Zk/FgEkItfCL63CR5qIzu57lnNJaT75CSVExUOkTG0JsGPQIJ5BrWjIi17?=
 =?us-ascii?q?WciZhbtjKFsBDNSZAC7dj8XfWIDKCqcW7BgA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DHAQBRqgVch0O0hNFjHgEGBwaBZYNsJ?=
 =?us-ascii?q?4N5ljIUmSIxEwGICSI4EgEDAQEBAQEBAgETAQEBCgsJCCkvgjYkAYJiAQICAQE?=
 =?us-ascii?q?CCxUEDDIUBQEJAQEKDgwCBSECAgMMHSsGEwWDHIF6CAQBpiB8M4osgQuLEYFXP?=
 =?us-ascii?q?4QjiAWCVwKLH4QPkRIHAoIfBI8OIwqRHJU5hRGBdjMaI4M8gicXjh4/MoEFAQE?=
 =?us-ascii?q?hijkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DHAQBRqgVch0O0hNFjHgEGBwaBZYNsJ4N5ljIUmSIxEwG?=
 =?us-ascii?q?ICSI4EgEDAQEBAQEBAgETAQEBCgsJCCkvgjYkAYJiAQICAQECCxUEDDIUBQEJA?=
 =?us-ascii?q?QEKDgwCBSECAgMMHSsGEwWDHIF6CAQBpiB8M4osgQuLEYFXP4QjiAWCVwKLH4Q?=
 =?us-ascii?q?PkRIHAoIfBI8OIwqRHJU5hRGBdjMaI4M8gicXjh4/MoEFAQEhijkBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="54358455"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 14:17:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726051AbeLCWRO convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Mon, 3 Dec 2018 17:17:14 -0500
Received: from mail.bootlin.com ([62.4.15.54]:34333 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725848AbeLCWRL (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 17:17:11 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id A9141207AD; Mon,  3 Dec 2018 23:17:09 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT
        shortcircuit=ham autolearn=disabled version=3.4.2
Received: from xps13 (unknown [91.224.148.103])
        by mail.bootlin.com (Postfix) with ESMTPSA id A78A220379;
        Mon,  3 Dec 2018 23:16:56 +0100 (CET)
Date: Mon, 3 Dec 2018 23:16:55 +0100
From: Miquel Raynal <miquel.raynal@bootlin.com>
To: Stephen Boyd <sboyd@kernel.org>
Cc: kbuild test robot <lkp@intel.com>, kbuild-all@01.org,
        Michael Turquette <mturquette@baylibre.com>,
        Russell King <linux@armlinux.org.uk>,
        linux-clk@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Antoine Tenart <antoine.tenart@bootlin.com>,
        Maxime Chevallier <maxime.chevallier@bootlin.com>,
        Gregory Clement <gregory.clement@bootlin.com>,
        Nadav Haklai <nadavh@marvell.com>
Subject: Re: [PATCH 2/2] clk: core: link consumer with clock driver
Message-ID: <20181203231655.4e7dc330@xps13>
In-Reply-To: <154386483105.88331.13970025193347328031@swboyd.mtv.corp.google.com>
References: <20181122212212.16039-3-miquel.raynal@bootlin.com>
        <201811231627.H7ojlKLL%fengguang.wu@intel.com>
        <20181123101132.6be3829c@xps13>
        <154356998033.88331.4426431020982838779@swboyd.mtv.corp.google.com>
        <20181130112052.73d943ec@xps13>
        <154386483105.88331.13970025193347328031@swboyd.mtv.corp.google.com>
Organization: Bootlin
X-Mailer: Claws Mail 3.17.1 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8BIT
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Stephen,

Stephen Boyd <sboyd@kernel.org> wrote on Mon, 03 Dec 2018 11:20:31
-0800:

> Quoting Miquel Raynal (2018-11-30 02:20:52)
> > Hi Stephen,
> > 
> > Stephen Boyd <sboyd@kernel.org> wrote on Fri, 30 Nov 2018 01:26:20
> > -0800:
> >   
> > > Quoting Miquel Raynal (2018-11-23 01:11:32)  
> > > > Would you agree with me adding dummy functions in the #else section
> > > > like:
> > > > 
> > > > static inline void __clk_device_link(struct device *consumer, struct clk *clk)
> > > > {
> > > >        return;
> > > > }
> > > > 
> > > > static inline void __clk_device_unlink(struct clk *clk)
> > > > {
> > > >        return;
> > > > }
> > > > 
> > > > Do you want me to also declare these functions in the #if section
> > > > (with the external keyword) to balance the above declarations?    
> > > 
> > > Why can't we do the linking in __clk_get() and __clk_put()?
> > >   
> > 
> > Because we need the caller's 'struct device' to make the link and
> > this is not available in __clk_get(). I tried to ad it as parameter but
> > I don't think it is possible to retrieve a 'struct device' from the
> > device name. The functions where this is problematic are:
> > * clk.c:__of_clk_get_from_provider()
> > * clkdev.c:clk_get_sys()
> > 
> > By the way in my new version I called the helpers:
> > * clk_{link,unlink}_hierarchy()
> > * clk_{link,unlink}_consumer()
> > 
> > I will send a new version with these helpers, but if you have anything
> > in mind to help me achieve the above request, I will welcome the idea.
> >   
> 
> We can do the linking in __clk_get() and __clk_put() if we poke into the
> struct clk -> struct clk_core and bury the struct device into each
> clk_core structure.
> 

I meant the consumer device's structure. Yes, from a struct clk, the
first change in patch 1/2 let's us do clk->core->dev to get the clock
device. But for linking I need both the clock device and the consumer
device; and the latter will be missing in __clk_get().


Thanks,
Miquèl
