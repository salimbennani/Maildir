Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:35:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 31C7E5803EB;
	Fri, 23 Nov 2018 06:18:56 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 23 Nov 2018 06:18:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AocfTuxeSRFRe8q4ZWZC18/DclGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc68bRaN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzqFQAogC+BRGuCe701jNFhWX70bEg3ug9DQ3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKAcUeGszKnV0zrDa+5d1yvn54nIdBAuu/WMVq93fMrUyEkvDh7FgUuU?=
 =?us-ascii?q?qYD/JTOazOQMs26B4OpkTu+gkGknqwZtojirx8csjJPFiZ4SylDB7Ch0xps+K9?=
 =?us-ascii?q?6gSENjf9KoDJ9duzuHO4Z4XM8uWXxktSUmxrEcuJO2fjAGxZA7yxLFaPGKcJKE?=
 =?us-ascii?q?7xzjWeqLPzt0mHJodbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gT1xzc9MeHUO?=
 =?us-ascii?q?Fx/kS/1jaV0QDc9OVELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gauMekk59OWk?=
 =?us-ascii?q?9f7rbqjlq5OALYN5iwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj+Uz5QLNXjvw5i6?=
 =?us-ascii?q?XZs47VJd4dpqGnBw9Zy4Ej6hi5Dzi4ytQVhmcHLF1bdxKdlYTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgijBrx+rJPrH5GJXCMmDDkKv9fbZ680NczAszzdNB6J5OBbABPen+WkvwtN?=
 =?us-ascii?q?zeEx84PBa4w+fhCNVhyIweXXiDDbOeMKPXqVWI/P4gI/GQZI8JvzbwM/gl6OTv?=
 =?us-ascii?q?jX8lg1AderOl3ZsKaH+iGPRmLF6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+EIimF5vMRpixgLyd2ye2Bp9WZmdYBVyWEnfocIOEW/ELaC+JJs9hkzoE?=
 =?us-ascii?q?VaWuSoM71BGushP6xKRjLubO5iIYspfj3sBv5+LPjREy6SB0D8OF3m6XVGF0nm?=
 =?us-ascii?q?QIRzws0KBlu0N9yEyO0ax5g/xeCNxS6OlFUgY8NZ7A0eN6D8r+VR7GfteMUFym?=
 =?us-ascii?q?WMmpASktTtItxN8De0V9FM+kjhzZ2yqqAqUal7qEBJEv9qLc3n7xJ9tyynrc1a?=
 =?us-ascii?q?khiUUmTdVLNWG8mqF/8A3TDZbTk0qFj6aqabgc3CnV+Wie12WOol9XXBRwUarf?=
 =?us-ascii?q?W3AffVXZrdL+6kPGTL+uDLAnPxBFyc6DLKtKd9LogU9HRPflJNTRfWaxl32sCh?=
 =?us-ascii?q?aPw7OGdJDqdHkF3CXBFEgElBge8mucOgggGCituWLeAyZoFVL0fUzs9/JzqHe6?=
 =?us-ascii?q?Tk8y0gGLYFdt17uz+h4Jm/OcT+kf0a4DuCcksz90Bkqy38rKC9qcoApsZLlcYd?=
 =?us-ascii?q?I44FdAyWLZtwx8Moa8L6x4gV4eaQB3v0Lo1xV4EYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6PkgsVrjuB+mF0U8/HRnydVayG?=
 =?us-ascii?q?ac6YjQAwoUUpLxVVg3+gN+p7HbZCk9+ozV2WdtMamyrj/NxdYpCPE5xRanetdV?=
 =?us-ascii?q?KLmEGxPqE80GG8iuL/Qnmli0bh4eIO9e7q81P8O8ePuA166mJ+JgnDOgjWRa74?=
 =?us-ascii?q?FxyEOM9yxgSuHW25YJ2e2X3gyCVz3klleurtj3mZxYZTEVBme/0ynkC5JLaa1o?=
 =?us-ascii?q?YIkLDn2iI8upydVkhp7hQmJX+0SnB1wbxsCpYx2Sb1rm0A1U1EQXp2GnmCSiwz?=
 =?us-ascii?q?x1lTEpsrSQ3CjUz+v+cxoHP3ZBRHN+glf0PYi0k9caUVCobggojhek5Vz2x7NG?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdTGloI/5nx95iGKaNnpzt2DWecJzxRfe4tzTW/hR0yECRCl5jznXG1e9?=
 =?us-ascii?q?M8Oo/dWSi5fMrOS+W3i9WZ1UdCnh1ZmAuzej5W12HR2/mOi+m939Hgg9yyP71d?=
 =?us-ascii?q?hqVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr9bHUXRD4H2d7V4BX/101lIXKE3Ib5VnSbwst8aNi2eGIW2iQh789UDK?=
 =?us-ascii?q?eY9qBLnSxwolCgtwLefeB9nisByfsp8HMahuAJuAk3wSmHDLEdA1JYPTDymBSS?=
 =?us-ascii?q?9N+xsr9XZGm0fLi01Up+m82hDb6YrgFdXnb5ZoktHStq4spjN1LM1WX56pv4d9?=
 =?us-ascii?q?nIcdITqhqUng/cj+hSLZI9jPsLijBhOWLgpn0l0O87gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlHykIuvTgMwaODScwqn?=
 =?us-ascii?q?OGGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6zAT/FH4rwVDyvlyOxnjSGvfpxqoajQpSJiZNhVW9RpP50PUMcyY8+JyED?=
 =?us-ascii?q?tU/pynrAyRNGObYx5EAn0OWkyBH1rjJKWh5cHc8+iEAeqzN/vPYbKTqexHSveH?=
 =?us-ascii?q?35Sv3pF9/zaLMMWPMWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKdVv9A63gaeANO6QhTx1KTVC1pMLyn/H1qIf3EMJiyx1?=
 =?us-ascii?q?czmtELIAtTPCTa7Km69XCQIbZD13NMdS86082QxNM9bBitzpzr54kuI1C1BdWF?=
 =?us-ascii?q?P7h8GmftYKLH+9NV/dAEaLNa+LJTnKw8HxfKO9RqdcjORStx2spzmbF1XvMSiE?=
 =?us-ascii?q?lznsTxqvK/1DjDmHPBxCv4GwagptCWnmTN78dhK3KsN4jT0ozr0ynX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyOB5enCNpkWqedrAjhzl+9C4HU10b1V?=
 =?us-ascii?q?7CRFRPxzgCTTr95urEugkumA0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxFZ7+diX/L1tq9X0MmHv6b+LTpE75qA8tERCM/OOYSMNHckPBz1MDTTCxcB?=
 =?us-ascii?q?TDjtPmba0QgVsviJ8XvdhZ89spX20M4MQ6RcUnQxH/AXBk1oGdsEZpF6QmVg2Z?=
 =?us-ascii?q?edgNQF+jKasR/XDJFTuJzdW+26BejpLnCSje8ALyAFy7rjMYUaMMXb1ld5Z11w?=
 =?us-ascii?q?lZ7WGwKERt1HqzZ9bwYy5kVA62NzSmc6wV7lQgyo6X4XU/Wzm0hywjd+ZuEk73?=
 =?us-ascii?q?/U7ks+NEjNoip4xFUxntDsmnaJfSL4PrW3W4B+AS3zq0wwNNXwRAMjKUWYn0t+?=
 =?us-ascii?q?Mn/kSrZehrJ7PTRhiALYtpJGAtZTSqpLZBJWzvaSMaYGy1NZ/wCm3FJK4aP/AI?=
 =?us-ascii?q?pknQ9iJZuttm9N30R5Zc8zLKj4Lq1O0lxRgOSFuSr+hbN5+xMXO0tYqDDaQyUP?=
 =?us-ascii?q?okFdc+B+fyc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAC0C/hbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwGDayeMcIshgiGXJ4FuMRMBiFoiNgcNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKS+CNiQBgmIDAwECJAsBRgYJAQFQAykrBgESBYMcggIEAagSM?=
 =?us-ascii?q?4N9BQGGFodehCuBVz+BEY1rAokZBoFyhU2PJAcCghwEhB2KZyORCJl9DIF6Mxo?=
 =?us-ascii?q?jgzyCJxeNZgE2PzKBBAEBATuLZgEB?=
X-IPAS-Result: =?us-ascii?q?A0ADAAC0C/hbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwGDayeMcIshgiGXJ4FuMRMBiFoiNgcNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?S+CNiQBgmIDAwECJAsBRgYJAQFQAykrBgESBYMcggIEAagSM4N9BQGGFodehCu?=
 =?us-ascii?q?BVz+BEY1rAokZBoFyhU2PJAcCghwEhB2KZyORCJl9DIF6MxojgzyCJxeNZgE2P?=
 =?us-ascii?q?zKBBAEBATuLZgEB?=
X-IronPort-AV: E=Sophos;i="5.56,270,1539673200"; 
   d="scan'208";a="54539039"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 06:18:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2439892AbeKXBDC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 20:03:02 -0500
Received: from mail.bootlin.com ([62.4.15.54]:33949 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731702AbeKXBC7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 20:02:59 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 09F1020D92; Fri, 23 Nov 2018 15:18:36 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from localhost.localdomain (aaubervilliers-681-1-94-205.w90-88.abo.wanadoo.fr [90.88.35.205])
        by mail.bootlin.com (Postfix) with ESMTPSA id 9636620741;
        Fri, 23 Nov 2018 15:18:35 +0100 (CET)
From: Miquel Raynal <miquel.raynal@bootlin.com>
To: Gregory Clement <gregory.clement@bootlin.com>,
        Jason Cooper <jason@lakedaemon.net>,
        Andrew Lunn <andrew@lunn.ch>,
        Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Bjorn Helgaas <bhelgaas@google.com>
Cc: <devicetree@vger.kernel.org>, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        linux-pci@vger.kernel.org, <linux-kernel@vger.kernel.org>,
        <linux-arm-kernel@lists.infradead.org>,
        Antoine Tenart <antoine.tenart@bootlin.com>,
        Maxime Chevallier <maxime.chevallier@bootlin.com>,
        Nadav Haklai <nadavh@marvell.com>,
        Miquel Raynal <miquel.raynal@bootlin.com>
Subject: [PATCH 04/12] PCI: aardvark: add clock support
Date: Fri, 23 Nov 2018 15:18:23 +0100
Message-Id: <20181123141831.8214-5-miquel.raynal@bootlin.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181123141831.8214-1-miquel.raynal@bootlin.com>
References: <20181123141831.8214-1-miquel.raynal@bootlin.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The IP relies on a gated clock. When we will add S2RAM support, this
clock will need to be resumed before any PCIe registers are
accessed. Add support for this clock.

Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
---
 drivers/pci/controller/pci-aardvark.c | 29 +++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/drivers/pci/controller/pci-aardvark.c b/drivers/pci/controller/pci-aardvark.c
index da695572a2ed..108b3f15c410 100644
--- a/drivers/pci/controller/pci-aardvark.c
+++ b/drivers/pci/controller/pci-aardvark.c
@@ -8,6 +8,7 @@
  * Author: Hezi Shahmoon <hezi.shahmoon@marvell.com>
  */
 
+#include <linux/clk.h>
 #include <linux/delay.h>
 #include <linux/gpio.h>
 #include <linux/interrupt.h>
@@ -190,6 +191,7 @@
 
 struct advk_pcie {
 	struct platform_device *pdev;
+	struct clk *clk;
 	void __iomem *base;
 	struct list_head resources;
 	struct irq_domain *irq_domain;
@@ -1083,6 +1085,29 @@ static int advk_pcie_setup_phy(struct advk_pcie *pcie)
 	return ret;
 }
 
+static int advk_pcie_setup_clk(struct advk_pcie *pcie)
+{
+	struct device *dev = &pcie->pdev->dev;
+	int ret;
+
+	pcie->clk = devm_clk_get(dev, NULL);
+	if (IS_ERR(pcie->clk) && (PTR_ERR(pcie->clk) == -EPROBE_DEFER))
+		return PTR_ERR(pcie->clk);
+
+	/* Old bindings miss the clock handle */
+	if (IS_ERR(pcie->clk)) {
+		dev_warn(dev, "Clock unavailable (%ld)\n", PTR_ERR(pcie->clk));
+		pcie->clk = NULL;
+		return 0;
+	}
+
+	ret = clk_prepare_enable(pcie->clk);
+	if (ret)
+		dev_err(dev, "Clock initialization failed (%d)\n", ret);
+
+	return ret;
+}
+
 static int advk_pcie_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -1118,6 +1143,10 @@ static int advk_pcie_probe(struct platform_device *pdev)
 		return ret;
 	}
 
+	ret = advk_pcie_setup_clk(pcie);
+	if (ret)
+		return ret;
+
 	ret = advk_pcie_setup_phy(pcie);
 	if (ret)
 		return ret;
-- 
2.19.1

