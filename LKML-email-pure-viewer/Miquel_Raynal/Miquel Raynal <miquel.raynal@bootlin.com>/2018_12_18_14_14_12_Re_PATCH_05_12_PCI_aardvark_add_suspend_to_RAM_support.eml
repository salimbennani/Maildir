Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:37:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6FF2A58055F;
	Tue, 18 Dec 2018 06:14:25 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 06:14:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3APrZvWxWj6vc/uulej5SsRRTkwpzV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGDvadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhXrYf9p1wJoxSxGQaiC/jvyidKi3Ltwa000f4sHR3c0QA8Hd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41K7GzTTab/NLxzj97JXDfAw7rvCMW7J/a87RwlQoGgPAj1WQ?=
 =?us-ascii?q?sJHlMC2R1ugXqWiU9ephVeS1hG4jsAx+uT+vxsAwionNh4IVzErI+jl+wIYwPN?=
 =?us-ascii?q?C1TlNwb9CjEJtVrS6aNo12T9s5Q2FwuSY6zLwGtoKgfCQQzpQo2QLfZ+SCc4eS?=
 =?us-ascii?q?+BLsSPydITZ+hHJrf7KygQu5/0u4yuDkSMW4zFJHojBYntTCqHwBzQHf58ubRv?=
 =?us-ascii?q?dn/0qs2y6D2gTP5u1eIk05lrDXJ4Mhz7MyjJYev0fOEynrk0vslqCWbF8r+u2w?=
 =?us-ascii?q?5uTnfLrmopicOpdqigHxLKsugNazAecmPQgUWWiU5+C82Kfk/U3jT7VGlvw2kq?=
 =?us-ascii?q?/Hv5DGPckXuLK1DgtP3oo+5RuzES2q3MkbkHUbNl5IeRCKg5DsO17UIfD4Cfm/?=
 =?us-ascii?q?g06rkDdu3/3GOrzhApPQLnnMibvhfqhy61RayAUtydBT/pVUC78HIP3tQE/8r8?=
 =?us-ascii?q?LYDhAnPAyu2ernC8ty1pkYWW2RBq+VKqTSsUWH5u43OemDeJcVuCrhK/gi//Pu?=
 =?us-ascii?q?iX45mVwDcqWz0poXdWu1HvBnI0WffHrtjc0NEWYMvgoiUuPqjEeOXiJUZ3a3R6?=
 =?us-ascii?q?g8/C00CJq6DYffQYCgmLyB0z26Hp1KfG9GDUqAEXf1d4qeXfcMZzmfIstgkjwC?=
 =?us-ascii?q?SLigRJUt1RCotA/m1bVnKvDY9TEftZLmzNJ1/fHclQku9TxoCMSQy2ONT2ZqkW?=
 =?us-ascii?q?8SRD8226Z/oUp6ylqY1ah4gvpYFcFc5v9TUwc6M4LcwPJ+C9zoRg3BedKJQk68?=
 =?us-ascii?q?Qtq6GTExUs4xw9gWbklnANWijhfD3ymwD78PjbOLBoc58qbd33j3OsZ8xGzK1K?=
 =?us-ascii?q?gnj1k6XMRPMXeqibJ49wjWH4TJiVmWl762daQA2y7A7GSDwnCIvE1CVA5wUL/K?=
 =?us-ascii?q?XXYQZkbNqdT550XCT6KhCLg9MwtBz9KCJbVOatHzkVpGQ/LjMszEY22tg2ewGQ?=
 =?us-ascii?q?qIxrSUYYX3YWodwjvSBFIEkw8J+3aGLhYxBiGmr2LaDzxuEFbvbljo8el/rnO7?=
 =?us-ascii?q?U0A1wxuLb01ny7q65BoVieaARPMU27IOoD0hpClsHFahw9LWDMKNqBd7c6VCf9?=
 =?us-ascii?q?wx+ldH2njftwxmIJOgKbtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic7LW2lDb0NaR5qcP6PQ5p0//vA2zEUoi6XFn09hT03?=
 =?us-ascii?q?uT/ZjKCAsSUZTsUkc47RR6prfaYjUj6IPQz3FjLa60sjra0dIzGOQl0gqgf8tY?=
 =?us-ascii?q?MK6cDgDyF9MVBsewJ+0qgVSmdQ8EM/1I+64yPMOmcOWG1bWvPOZhmjKmkGtG7J?=
 =?us-ascii?q?p80kKK6ypzVOrI04wZzPGf2wuNTy38g0u5ssDrhYBEYikfH2qiyST+GIFdfKxz?=
 =?us-ascii?q?fYYRBmeoLM263dF+h5/rW35F+1+vHVIG2Mm1eRWMa1zxxxFf1UMSoXa/gyu30y?=
 =?us-ascii?q?R0ky01rqqYxCHO2eXiewYdNW5RWWZiik3gIY6qgNAAXUikdhQmmwGh5Unn2adb?=
 =?us-ascii?q?vqN/L2/ITEdMfij2KXxiU6SqurqDZc5P9I0nsSFNXOugZlCaT6b3owEG3CP7A2?=
 =?us-ascii?q?te2Dc7eimqu5X4hRB7iHiRLG1urHrfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6Ytiu0/3dqAR68n/C0gNHnChI10Sz419?=
 =?us-ascii?q?lrUyXHshD8b5Lv16S7N+JnY0ZpCEX968p8BoFxjI8wiIsM1ngdg5Wf5WAHnnvr?=
 =?us-ascii?q?MdVHxaL+a2IARD4RzN7S+gTl2kxjLnSSyoL9V3WdxNZhZtagbmMX3CI9895FCK?=
 =?us-ascii?q?OO4LNYmit1p0KyrRjNbvhlgjcd1fwu5WYZg+4TuQoh1CWdAq0IEkleMizhjBCI?=
 =?us-ascii?q?79G4rKVKa2eja7mw1Exind+/CLGOuB1TWHH8ep06By9/8t1/ME7Q0H308ozkfd?=
 =?us-ascii?q?jQbdEJuRGOnRbPkfNVKI4vmfoQniVoJ3j9vXI+xu4/jBxu24y6vYedJ2Vs+qK5?=
 =?us-ascii?q?HgBXNjnva8wP/THtiL5UntyK0IC3ApVhBjILUYP0TfKvFTIer/XmOByIED0hsX?=
 =?us-ascii?q?ebArvfEBSb6EdnqXLPDp+qO2uWJHkf0dVtWh2dKFZDjwATWTUwhoQ5GRyyxMz9?=
 =?us-ascii?q?bEd54Sgc6UXipRtLzuJoKgPzUmPCpAqzbjc0SZ6fLAdZ7w1Y5kfVN9Ce4fx3Hy?=
 =?us-ascii?q?1C4pKhqwmNIHSBZwtUFWEJRlCEB1f7M7ms/9bA9vaXBvGkI/vSe7mOqvFeV/SV?=
 =?us-ascii?q?xZKpyIRm5C2BNsGOPnlkEv061VBPXXF/G8TFhToPTzYbmD7Kb86evB284DF4rt?=
 =?us-ascii?q?ij8PT3XwLi/YuOC7xPMdV25hC5m6GDO/SLhCZ+LzZY2YgBxXvJyLgZwV4ThDti?=
 =?us-ascii?q?dzirEbQcqyHNSLjclbNQDx4ecylzLtdH77og3glRPs7WktP12aB5jv42CFdFVE?=
 =?us-ascii?q?btmsKzZcwNLGGyKknHBFuQNLmdIT3Lwsf3Yb6zSLFKjeVUsQGwtiifE0P5IjuD?=
 =?us-ascii?q?kDzpXQi1Me5QlCGbIABeuIalfxl3FGjsV8jmZQO7MdNtiT02wKY5hnfLNW4aLD?=
 =?us-ascii?q?h9fFlBrryW7SNEnPp/H3ZN4WZiLemBgyyZ9fXXKo4Ksft3BSR5j/5a4HU/y7dP?=
 =?us-ascii?q?8C5IXuB6mCvMod5ouFymluiPyjx6UBtBsDpLhYSLvVl8NqXd7JVPRXHE/BcV52?=
 =?us-ascii?q?WKFxsKv8dlCsHou61IytnAjqTzKDJD89LS5cQdBsjUJ9iBMHouKhfpHD/UDA0Y?=
 =?us-ascii?q?TT+kL23fhkpdkO2M+X2RtJQ1tp/smJ9dAoNcARYPH/0TB0AtPppKH4ZsWTgnkP?=
 =?us-ascii?q?TT2NQK+lKkrgbAX8JRvZGBUP+OV6bBMjGc2JxFfgYFxfvCJJUVP4mzj0ljc0R3?=
 =?us-ascii?q?mMLQElvWVNRlqCpmcgs1pgNG930oHT574F7sdg74uCxbLvWzhBNjz1ImOek=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CAAABk/xhch0O0hNFdBx0BAQUBBwUBg?=
 =?us-ascii?q?VQFAQsBAYFZgQ+BAieDfIh4ixqCDRSXWoEQA0wtCwgBhx0iNwYNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIKSMMQgEOAYFkJAGCYQEBAQECAQECIAQMNBIFAQkBAQoUBAICB?=
 =?us-ascii?q?QwVAgIDDBkEKwYTBRaDBwGBeAgEAQqnTXwzii8FgQuLNIFXP4Qjgx4DARiBAjI?=
 =?us-ascii?q?GTIJJglcCiUKBeZVpBwKCJQSEZoNDgm2EFSQKjlSCeY47jRRXgSEzGiODPBOBb?=
 =?us-ascii?q?ScXfwEHhRyCAIV7PzIBgQQBASGBL4lWAiQDBIIgAQE?=
X-IPAS-Result: =?us-ascii?q?A0CAAABk/xhch0O0hNFdBx0BAQUBBwUBgVQFAQsBAYFZgQ+?=
 =?us-ascii?q?BAieDfIh4ixqCDRSXWoEQA0wtCwgBhx0iNwYNAQMBAQEBAQECARMBAQEKCwkIK?=
 =?us-ascii?q?SMMQgEOAYFkJAGCYQEBAQECAQECIAQMNBIFAQkBAQoUBAICBQwVAgIDDBkEKwY?=
 =?us-ascii?q?TBRaDBwGBeAgEAQqnTXwzii8FgQuLNIFXP4Qjgx4DARiBAjIGTIJJglcCiUKBe?=
 =?us-ascii?q?ZVpBwKCJQSEZoNDgm2EFSQKjlSCeY47jRRXgSEzGiODPBOBbScXfwEHhRyCAIV?=
 =?us-ascii?q?7PzIBgQQBASGBL4lWAiQDBIIgAQE?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="56358131"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 06:14:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726982AbeLROOS convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Tue, 18 Dec 2018 09:14:18 -0500
Received: from mail.bootlin.com ([62.4.15.54]:59842 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726426AbeLROOQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 09:14:16 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id DB5B4207D9; Tue, 18 Dec 2018 15:14:12 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from xps13 (aaubervilliers-681-1-38-38.w90-88.abo.wanadoo.fr [90.88.157.38])
        by mail.bootlin.com (Postfix) with ESMTPSA id 5DBFD2072C;
        Tue, 18 Dec 2018 15:14:12 +0100 (CET)
Date: Tue, 18 Dec 2018 15:14:12 +0100
From: Miquel Raynal <miquel.raynal@bootlin.com>
To: "Rafael J. Wysocki" <rjw@rjwysocki.net>
Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        Stephen Boyd <sboyd@kernel.org>, sudeep.holla@arm.com,
        Gregory Clement <gregory.clement@bootlin.com>,
        Jason Cooper <jason@lakedaemon.net>,
        Andrew Lunn <andrew@lunn.ch>,
        Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Bjorn Helgaas <bhelgaas@google.com>,
        devicetree@vger.kernel.org, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>, linux-pci@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        Antoine Tenart <antoine.tenart@bootlin.com>,
        Maxime Chevallier <maxime.chevallier@bootlin.com>,
        Nadav Haklai <nadavh@marvell.com>
Subject: Re: [PATCH 05/12] PCI: aardvark: add suspend to RAM support
Message-ID: <20181218151412.4341718d@xps13>
In-Reply-To: <28619896.152T6JUIHS@aspire.rjw.lan>
References: <20181123141831.8214-1-miquel.raynal@bootlin.com>
        <61805564.abKDZ2rVK7@aspire.rjw.lan>
        <20181217155426.71058a03@xps13>
        <28619896.152T6JUIHS@aspire.rjw.lan>
Organization: Bootlin
X-Mailer: Claws Mail 3.17.1 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8BIT
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Rafael, Stephen & Bjorn,

Glad to see you all in this thread that talks about:
  * adding S2RAM support to a PCIe controller driver
  * by taking into account that the PCI clock must be
    {enabled before,disabled after} the PCI IP itself
  * and that it requires some tweaking in the clock driver to
    promote the suspend/resume() callbacks to the NOIRQ phase
    (reference there [1]).

Stephen, Rafael answered here to your remark (in thread [1]) about the
NOIRQ promotion (see below).

Bjorn, there is a question for you below about the need for a PCI
controller driver to suspend/resume in the NOIRQ phase.

Rafael, thanks for the explanation of what the PM core sequences really
are, I would need you to confirm my approach that promotes the clock
suspend/resume() callbacks to the NOIRQ phase, or otherwise give me
pointers to an alternate solution (also below).


"Rafael J. Wysocki" <rjw@rjwysocki.net> wrote on Tue, 18 Dec 2018
11:54:43 +0100:

> On Monday, December 17, 2018 3:54:26 PM CET Miquel Raynal wrote:
> > Hi Rafael,
> > 
> > "Rafael J. Wysocki" <rjw@rjwysocki.net> wrote on Thu, 13 Dec 2018
> > 22:50:51 +0100:
> >   
> > > On Thursday, December 13, 2018 3:30:00 PM CET Miquel Raynal wrote:  
> > > > Hi Lorenzo,
> > > >     
> > > > > > If that's really the case, then I can see how one device and it's
> > > > > > children are suspended and the irq for it is disabled but the providing
> > > > > > devices (clk, regulator, bus controller, etc.) are still fully active
> > > > > > and not suspended but in fact completely usable and able to service
> > > > > > interrupts. If that all makes sense, then I would answer the question
> > > > > > with a definitive "yes it's all fine" because the clk consumer could be
> > > > > > in the NOIRQ phase of its suspend but the clk provider wouldn't have
> > > > > > even started suspending yet when clk_disable_unprepare() is called.      
> > > > > 
> > > > > That's a very good summary and address my concern, I still question this
> > > > > patch correctness (and many others that carry out clk operations in S2R
> > > > > NOIRQ phase), they may work but do not tell me they are rock solid given
> > > > > your accurate summary above.    
> > > > 
> > > > I understand your concern but I don't see any alternative right now
> > > > and a deep rework of the PM core to respect such dependency is not
> > > > something that can be done in a reasonable amount of time.    
> > > 
> > > Maybe you don't need to rework anything. :-)
> > > 
> > > Have you considered using device links?  
> > 
> > Absolutely, yes :) I am actively working on it in parallel, you can
> > check the third version there [1]. Stephen Boyd has a slightly
> > different idea of how it should be done, I will propose a v4 this week,
> > I can add you in copy if you are interested!
> > 
> > Anyway, there is one thing that is still missing:
> > * Let's have device A that requests clock B
> > * With the device link series, A is linked (as a child) to B.
> > * A suspend/resume hooks handle things in the NOIRQ phase.  
> 
> Why do you need them to run in the "noirq" phase in the first place?

I suppose (and I would like Bjorn to validate my thoughts) that this
is a limitation imposed by the PCI core, as described in this
commit:

commit ab14d45ea58eae67c739e4ba01871cae7b6c4586
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue Mar 17 15:55:45 2015 +0100

    PCI: mvebu: Add suspend/resume support

    Add suspend/resume support for the mvebu PCIe host driver.  Without this
    commit, the system will panic at resume time when PCIe devices are
    connected.

    Note that we have to use the ->suspend_noirq() and ->resume_noirq() hooks,
    because at resume time, the PCI fixups are done at ->resume_noirq() time,
    so the PCIe controller has to be ready at this point.

    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Jason Cooper <jason@lakedaemon.net>

> 
> > * B suspend/resume hooks handle things in the default phase.
> > 
> > What I expected during a suspend:
> > 1/ ->suspend_noirq(device A)
> > 2/ ->suspend(clock B)  
> 
> This expectation is not in agreement with the documented suspend code flow,
> however.
> 
> Each phase of it is carried out for *all* devices completely before getting
> to the next phase, "prepare" first, then "suspend", "suspend_late" and
> "suspend_noirq", in this order.

Thanks for clarifying, now it is clear and it also answers Stephen
remark in the related thread [1]:

        [PATCH 2/4] clk: mvebu: armada-37xx-periph: change
        suspend/resume time

Stephen, said:

        "This seems sad that the PM core can't "priority boost" any
        suspend/resume callbacks of a device that doesn't have noirq callbacks
        when a device that depends on it from the device link perspective does
        have noirq callbacks."

> 
> > Unfortunately, device links do not seem to enforce any priority between
> > phases (default/late/noirq) and what happens is:
> > 1/ ->suspend(B)
> > 2/ ->suspend_noirq(A)
> > Which has no sense in my case. Hence, I had to request the clock
> > suspend/resume callbacks to be upgraded to the NOIRQ phase as well (I
> > don't have a better solution for now). This is still under discussion
> > in a thread you have been recently added to by Bjorn, see [2].
> > 
> > So when I told you I was not confident in "reworking the PM core to
> > respect such dependency", this is what I was referring to. I am
> > definitely ready to help, but I don't feel I can do it alone.
> > 
> > [1] https://www.spinics.net/lists/linux-clk/msg32824.html
> > [2] https://marc.info/?l=linux-pm&m=154465198510735&w=2  
> 
> The rework you seem to be talking about is not possible, I'm afraid.
> 

Ok, then do you agree that the only solution in this case is what I
propose in thread [1], ie. promoting the clock suspend/resume callbacks
to the NOIRQ phase in order to ensure that they will run first (once
device links will be merged too) ?

[1] https://www.spinics.net/lists/linux-clk/msg32537.html


Thank you very much for helping,
Miquèl
