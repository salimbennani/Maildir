Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:44:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B5B905803DC;
	Wed, 12 Dec 2018 02:56:16 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 02:56:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Apex7LhYrRa0BGPTbtBCmP7j/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci9Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9HmnP7x7c33/g7HAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKodX+60w7fVxjvGa/NZxzb96I7WfRw4pP+UW7RwccveyUIyEA7Fk1uR?=
 =?us-ascii?q?ppL+MjOW0uQCrWmb7+x+Wu62iG4nrB9+oj6uxscjkIXJgZgVyl/d+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4FJZcrTyWOoVoTs84Xm1luzo2xqcHtJO5ZCQHzJsqywTCZ/GJb4SE?=
 =?us-ascii?q?+A/vWPuNLTtimn5odrOyihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTN6siIVP?=
 =?us-ascii?q?R95F2t2TWR2ADJ7OFLP0Q0mbDcK547zb48jpsTsULdES/qgEj6krOae0E+9uS1?=
 =?us-ascii?q?5enrfK/qqoKfOoNokA3zM6YjltS6AesiMwgOW2ab+f671L3m5UD5RLRKjvsrkq?=
 =?us-ascii?q?jWqZzaJtoUprS/AwBL1oYv8hG/Djmg0NsGh3kKN0xFeB2ZgIjzIV3OI+73De25?=
 =?us-ascii?q?g1uylDdn3ffGPqfuApnVNHjMjK/hfaph605b0AczydFf55FKBb0bL/PzR1T8tN?=
 =?us-ascii?q?jZDh8/Lgy1zPzrCNR71oMCR22PBrWVP7/VsV+N/ugvOfWDZJcJuDbhLPgo//7u?=
 =?us-ascii?q?gmU4mV8BZ6ap2oEbaHClHvt8JUWZbmHhgtMAEWcMowo/Q/bmiFyEUT5PeXmyW7?=
 =?us-ascii?q?gw6S08CIKjFY3DXJyigKSd3CenGZ1bfmJGCleSHnvydIWEXPEMaCSVIsJ6ljwE?=
 =?us-ascii?q?VL6hS5Iu1B20tQ/6zaZnIfTQ+iECqZ3j09117fXJlR4u7Tx0E9id02aVQm5uhW?=
 =?us-ascii?q?MIRzg23KNlrUxn0FiD07N1g/hZFdxV+vNIXR02NZ/az+xmFd/yXhjNccuOSFaj?=
 =?us-ascii?q?Wt+mGy0+Tsotw98SZEZwA9aigQrF3yawB78VlqaEBJo78q/H23jxJsB9y2vJ1a?=
 =?us-ascii?q?U7jlkmRNdPOnOihqJl6wfTAIvJmV2Dl6m2baQcwDLN9GCbwGWTpk5YThB/Xb/F?=
 =?us-ascii?q?XX8FYEvWtsr25kXFQ7+qCrQnNw9BxNWGKqtLbN3pkFpHSO3iONTYf2K+hWOwCQ?=
 =?us-ascii?q?yUybOLaYrgY38d0znFCEgYjwAT+m6LOhUkCSe/vW3SFjxuGkjpY0P37+Z+rmi2?=
 =?us-ascii?q?Tks1zwGMck1g2KC5+h8ThfyAVfwT2qgItzsmqzVxBFy9xc7ZC8Kcpwp9e6VRec?=
 =?us-ascii?q?894FZC1WLeqwx9PpyhI7p+hlIEdAR3pUfu1xRxCoVPisUqqHIqzAxvKaOXyl9B?=
 =?us-ascii?q?djWY3YzuNb3TMGX94Beva6vO0FHEzNmW4rsP6Og/q1j7pg6pElQt8np53NhVyX?=
 =?us-ascii?q?eT/YjKAxcIXpL3UUY38AZ6qqreYik84YPUyHJtPbO1sj/Ex9ImGu8lxgy8cNdY?=
 =?us-ascii?q?NaOODBXyHNECB8iyNOwqnECkbxIZPOxI6KE4JcKnd/uc166tM+ZthzamjWVB4I?=
 =?us-ascii?q?Bg3UOA7St8SujU35kbx/GUxBeIVzD5jF25qMD4hZhEZS0OHmq40SXkHo9RabFo?=
 =?us-ascii?q?coYRFGiuJNe7xtNgiJ73Wn5U7UKsCEkC2MC0ZxWSdVv93QtL2EQToHynnza4zj?=
 =?us-ascii?q?NunzEoqKqfwDLBw+D4eBUbPW5LQXFojU3wLoisk9AaQE+oYhAplRuk/0r7x7JX?=
 =?us-ascii?q?pL9iL2nVWkpIeyn2L2d/Uqq/rLaCYshP6I82viVTSuizfVeaSrvlqRsAzyzjB3?=
 =?us-ascii?q?dexCw8dzyyuJX2hQZ6iGGeLHZ0tnbZYtt/xRTc5NzdQ/5ewDwGSTJ8iTnWAFi8?=
 =?us-ascii?q?Itao8c+Vl5fFruCxSWahWodPfinsyIOKrDG76nFyAR2jg/CzncXqEAgg3i/8zd?=
 =?us-ascii?q?VqVyTIrBDnb4nv1qS6N/9nf0ZyCF/97cp6Bp9xko8qiJ4M3ngag42f/WAbnmfr?=
 =?us-ascii?q?LdVbxaX+YWIORTERwt7Z+gjl2FB5IXKPyIL0TXGdwspnZ9mnbWIawCM978ZWCK?=
 =?us-ascii?q?iK6LxIhzd6ol29rQjJe/hygi8dyecy6H4dm+wJvQstziaHDbwIE0hXIzfslwiW?=
 =?us-ascii?q?4NCkt6pYenyvcber2Up6nNChCqyCow5GVHb4fJciATF/7sFlPF3Q133z75nueM?=
 =?us-ascii?q?PMYtILqh2UjxDAgvBJKJI2k/oGnytmNnj7vX040O47lh1u0Iq+vIiGLWVt4a24?=
 =?us-ascii?q?DgRZNj3ze8Mc5DXtgbxCkcaR2oClBo9hFSkTXJv0UfKoFyofuu/9OAaJFD08t2?=
 =?us-ascii?q?2XGb7CHQKE7EdmrnTPE42kNn2NJXkZy8liSweZJEBFnA8UWzA6lIYjFg+23Mzh?=
 =?us-ascii?q?bFt55jcJ6176sBRMz/xnNwLlXmfDvguoaSo0SJuCLBpQ9A5C/FzYMcif7uJ1Ai?=
 =?us-ascii?q?FZ8YetrA2LKmyHeQtICXsFVVCDB1DmJrOu/8XP8/CEBuqiKPvDebWPqetDV/eR?=
 =?us-ascii?q?2JKgyI1m8yyXNsWIOHliAOY22k5CXXB/BsTYlC8DSy0RlyLRccGboA2w9TFwrs?=
 =?us-ascii?q?C66P7rQh7g5ZOTC7tONtVi4xC2jrmCN+6ThyZ5KCxU1pAWxX/Px7gQwkQSizx1?=
 =?us-ascii?q?dzS2FbQAtCjNTL/fm6NNDh4bbT9zO9VM764mwgZNPsvbgMvv1rFklv41F0tFVV?=
 =?us-ascii?q?v5l86zeMwFOHu9O03HBUqRMLSGJCbGw8X2YaO6VL1Rg/9Ytxy2uTaHDUDjOi6P?=
 =?us-ascii?q?mCXuVxCqKetMlj2UPARCuIGhdRZgEXTjTNPjahGhLNB7lyE5wb0qiXPMLmMcNT?=
 =?us-ascii?q?l8c0VQrryf9y9Yg/N/G3Bf4XphN+WLhyGZ7+zAIJYMrfRrGjh0l/5d4Hkiy7pa?=
 =?us-ascii?q?9idERPl0mCvUttFvolGmnfOJyjpoSxdOrjdLhISWvURtI6nZ959AWWra8xIJ92?=
 =?us-ascii?q?mfFxMKp942QuHo7oVRwdjGkOrNLzTL+JqA+MoXB8HQbtyAM3MqGQvyHzDISgAC?=
 =?us-ascii?q?SGj4G3vYghlgj/za1XmYr54377tynpsBAutGS1EdFfcXC0JoWd8FLZF2UXUji7?=
 =?us-ascii?q?HN351A3ma3sBSEHJYShZvATP/HRKy3cDs=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAC46BBch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeDe4gZjBKCDRSXP4FyAQ8dEwGHOyI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpL4I2JAGCYQEBAQECAQECIARSBQEJAQEIAhgJIQICA?=
 =?us-ascii?q?wwFGDETBYMcAYF5CAQBihGbUHwziiEPgm2JTxc+gUGBEYJkLogFMYImAok9l0o?=
 =?us-ascii?q?JkUoLGJFEmn+CDn0IgyeCJxeOHj4zgQUBAY0nAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAC46BBch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeDe4gZjBKCDRSXP4FyAQ8dEwGHOyI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpL4I2JAGCYQEBAQECAQECIARSBQEJAQEIAhgJIQICAwwFGDETBYMcAYF?=
 =?us-ascii?q?5CAQBihGbUHwziiEPgm2JTxc+gUGBEYJkLogFMYImAok9l0oJkUoLGJFEmn+CD?=
 =?us-ascii?q?n0IgyeCJxeOHj4zgQUBAY0nAQE?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="asc'?scan'208";a="44633681"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 02:55:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727164AbeLLKzL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 05:55:11 -0500
Received: from antares.kleine-koenig.org ([94.130.110.236]:45850 "EHLO
        antares.kleine-koenig.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726791AbeLLKzL (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 05:55:11 -0500
Received: by antares.kleine-koenig.org (Postfix, from userid 1000)
        id 5B4C54DA83E; Wed, 12 Dec 2018 11:55:08 +0100 (CET)
Date: Wed, 12 Dec 2018 11:55:06 +0100
From: Uwe =?iso-8859-1?Q?Kleine-K=F6nig?= <uwe@kleine-koenig.org>
To: Michal =?utf-8?B?Vm9rw6HEjQ==?= <michal.vokac@ysoft.com>
Cc: Thierry Reding <thierry.reding@gmail.com>,
        linux-pwm@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [2/3] pwm: imx: Use bitops and bitfield macros to define
 register values
Message-ID: <20181212105506.GB9268@taurus.defre.kleine-koenig.org>
References: <1538403588-68850-2-git-send-email-michal.vokac@ysoft.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha512;
        protocol="application/pgp-signature"; boundary="bCsyhTFzCvuiizWE"
Content-Disposition: inline
In-Reply-To: <1538403588-68850-2-git-send-email-michal.vokac@ysoft.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--bCsyhTFzCvuiizWE
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Oct 01, 2018 at 04:19:47PM +0200, Michal Vok=C3=A1=C4=8D wrote:
> Use existing macros to define register fields instead of manually shifting
> the bit masks. Also define some more register bits.

I didn't check, but wonder if these additional register bits are then
used in the next patch. Maybe I'd change this patch to not introduce
something new, only let it modify the already existing stuff and then
introduce the new bits in the patch that makes use of them.

> Signed-off-by: Michal Vok=C3=A1=C4=8D <michal.vokac@ysoft.com>
> ---
>  drivers/pwm/pwm-imx.c | 78 ++++++++++++++++++++++++++++++++++++++-------=
------
>  1 file changed, 58 insertions(+), 20 deletions(-)
>=20
> diff --git a/drivers/pwm/pwm-imx.c b/drivers/pwm/pwm-imx.c
> index bcbcac4..7a4907b 100644
> --- a/drivers/pwm/pwm-imx.c
> +++ b/drivers/pwm/pwm-imx.c
> @@ -5,6 +5,8 @@
>   * Derived from pxa PWM driver by eric miao <eric.miao@marvell.com>
>   */
> =20
> +#include <linux/bitfield.h>
> +#include <linux/bitops.h>
>  #include <linux/clk.h>
>  #include <linux/delay.h>
>  #include <linux/err.h>
> @@ -23,7 +25,7 @@
>  #define MX1_PWMS			0x04   /* PWM Sample Register */
>  #define MX1_PWMP			0x08   /* PWM Period Register */
> =20
> -#define MX1_PWMC_EN			(1 << 4)
> +#define MX1_PWMC_EN			BIT(4)
> =20
>  /* i.MX27, i.MX31, i.MX35 share the same PWM function block: */
> =20
> @@ -31,18 +33,53 @@
>  #define MX3_PWMSR			0x04    /* PWM Status Register */
>  #define MX3_PWMSAR			0x0C    /* PWM Sample Register */
>  #define MX3_PWMPR			0x10    /* PWM Period Register */
> -#define MX3_PWMCR_PRESCALER(x)		((((x) - 1) & 0xFFF) << 4)
> -#define MX3_PWMCR_STOPEN		(1 << 25)
> -#define MX3_PWMCR_DOZEEN		(1 << 24)
> -#define MX3_PWMCR_WAITEN		(1 << 23)
> -#define MX3_PWMCR_DBGEN			(1 << 22)
> -#define MX3_PWMCR_POUTC			(1 << 18)
> -#define MX3_PWMCR_CLKSRC_IPG_HIGH	(2 << 16)
> -#define MX3_PWMCR_CLKSRC_IPG		(1 << 16)
> -#define MX3_PWMCR_SWR			(1 << 3)
> -#define MX3_PWMCR_EN			(1 << 0)
> -#define MX3_PWMSR_FIFOAV_4WORDS		0x4
> -#define MX3_PWMSR_FIFOAV_MASK		0x7
> +
> +#define MX3_PWMCR_FWM			GENMASK(27, 26)
> +#define MX3_PWMCR_STOPEN		BIT(25)
> +#define MX3_PWMCR_DOZEN			BIT(24)
> +#define MX3_PWMCR_WAITEN		BIT(23)
> +#define MX3_PWMCR_DBGEN			BIT(22)
> +#define MX3_PWMCR_BCTR			BIT(21)
> +#define MX3_PWMCR_HCTR			BIT(20)
> +
> +#define MX3_PWMCR_POUTC			GENMASK(19, 18)
> +#define MX3_PWMCR_POUTC_NORMAL		0
> +#define MX3_PWMCR_POUTC_INVERTED	1
> +#define MX3_PWMCR_POUTC_OFF		2
> +
> +#define MX3_PWMCR_CLKSRC		GENMASK(17, 16)
> +#define MX3_PWMCR_CLKSRC_OFF		0
> +#define MX3_PWMCR_CLKSRC_IPG		1
> +#define MX3_PWMCR_CLKSRC_IPG_HIGH	2
> +#define MX3_PWMCR_CLKSRC_IPG_32K	3
> +
> +#define MX3_PWMCR_PRESCALER		GENMASK(15, 4)
> +
> +#define MX3_PWMCR_SWR			BIT(3)
> +
> +#define MX3_PWMCR_REPEAT		GENMASK(2, 1)
> +#define MX3_PWMCR_REPEAT_1X		0
> +#define MX3_PWMCR_REPEAT_2X		1
> +#define MX3_PWMCR_REPEAT_4X		2
> +#define MX3_PWMCR_REPEAT_8X		3
> +
> +#define MX3_PWMCR_EN			BIT(0)
> +
> +#define MX3_PWMSR_FWE			BIT(6)
> +#define MX3_PWMSR_CMP			BIT(5)
> +#define MX3_PWMSR_ROV			BIT(4)
> +#define MX3_PWMSR_FE			BIT(3)
> +
> +#define MX3_PWMSR_FIFOAV		GENMASK(2, 0)
> +#define MX3_PWMSR_FIFOAV_EMPTY		0
> +#define MX3_PWMSR_FIFOAV_1WORD		1
> +#define MX3_PWMSR_FIFOAV_2WORDS		2
> +#define MX3_PWMSR_FIFOAV_3WORDS		3
> +#define MX3_PWMSR_FIFOAV_4WORDS		4
> +
> +#define MX3_PWMCR_PRESCALER_SET(x)	FIELD_PREP(MX3_PWMCR_PRESCALER, (x) -=
 1)
> +#define MX3_PWMCR_PRESCALER_GET(x)	(FIELD_GET(MX3_PWMCR_PRESCALER, \
> +						   (x)) + 1)

I wouldn't hide the +1 and -1 in a macro but as this was already the
case before your patch, that's ok.

>  #define MX3_PWM_SWR_LOOP		5
> =20
> @@ -142,14 +179,14 @@ static void imx_pwm_wait_fifo_slot(struct pwm_chip =
*chip,
>  	u32 sr;
> =20
>  	sr =3D readl(imx->mmio_base + MX3_PWMSR);
> -	fifoav =3D sr & MX3_PWMSR_FIFOAV_MASK;
> +	fifoav =3D FIELD_GET(MX3_PWMSR_FIFOAV, sr);
>  	if (fifoav =3D=3D MX3_PWMSR_FIFOAV_4WORDS) {
>  		period_ms =3D DIV_ROUND_UP(pwm_get_period(pwm),
>  					 NSEC_PER_MSEC);
>  		msleep(period_ms);
> =20
>  		sr =3D readl(imx->mmio_base + MX3_PWMSR);
> -		if (fifoav =3D=3D (sr & MX3_PWMSR_FIFOAV_MASK))
> +		if (fifoav =3D=3D FIELD_GET(MX3_PWMSR_FIFOAV, sr))
>  			dev_warn(dev, "there is no free FIFO slot\n");
>  	}
>  }
> @@ -207,13 +244,14 @@ static int imx_pwm_apply_v2(struct pwm_chip *chip, =
struct pwm_device *pwm,
>  		writel(duty_cycles, imx->mmio_base + MX3_PWMSAR);
>  		writel(period_cycles, imx->mmio_base + MX3_PWMPR);
> =20
> -		cr =3D MX3_PWMCR_PRESCALER(prescale) |
> -		     MX3_PWMCR_STOPEN | MX3_PWMCR_DOZEEN | MX3_PWMCR_WAITEN |
> -		     MX3_PWMCR_DBGEN | MX3_PWMCR_CLKSRC_IPG_HIGH |
> -		     MX3_PWMCR_EN;
> +		cr =3D MX3_PWMCR_PRESCALER_SET(prescale) |
> +		     MX3_PWMCR_STOPEN | MX3_PWMCR_DOZEN | MX3_PWMCR_WAITEN |
> +		     FIELD_PREP(MX3_PWMCR_CLKSRC, MX3_PWMCR_CLKSRC_IPG_HIGH) |
> +		     MX3_PWMCR_DBGEN | MX3_PWMCR_EN;
> =20
>  		if (state->polarity =3D=3D PWM_POLARITY_INVERSED)
> -			cr |=3D MX3_PWMCR_POUTC;
> +			cr |=3D FIELD_PREP(MX3_PWMCR_POUTC,
> +					MX3_PWMCR_POUTC_INVERTED);
> =20
>  		writel(cr, imx->mmio_base + MX3_PWMCR);
>  	} else if (cstate.enabled) {

Best regards
Uwe

--bCsyhTFzCvuiizWE
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQEzBAABCgAdFiEEfnIqFpAYrP8+dKQLwfwUeK3K7AkFAlwQ6QcACgkQwfwUeK3K
7An0EQf/U/abZnK5uMZ8s9+bR5WjAO/QDzYKy8negD0scOLVGCmfbtyzWoA6iIWx
CV+TqoH4kmf3pqh/Tnc4u03QNpYbjeZPP27aWLbqjEtFn+NA/pkzeZKxPSxENx5d
CmajABb8VlG2tgScUOJSS3LX2I/auLIgx6nys88M/AqcLfg5S+1ii3lmkbRhK6I7
TH8fMhL3qlRZe+Muy3JNVOus34s6nxifDVyi/37HnxkhkowaZpT4Ltcw9JOCDG6L
UgOH4BtLfIVK3F8T91rKjgOKJWctmXMLM6xGDJmQW2/Mepex/QaePZlXh1mj9Bb3
eMpv2DjEEYUOypFAp7FxCYVSkyRd9w==
=Nc4F
-----END PGP SIGNATURE-----

--bCsyhTFzCvuiizWE--
