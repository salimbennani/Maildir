Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8D35E5803E4;
	Fri,  7 Dec 2018 22:15:03 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 22:15:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvxUZiBKyyven9XpCodmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvX4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUclRWS5ODIOy?=
 =?us-ascii?q?YYUMEuQPI/pXr5Llp1YMtha+GRWgCfnzxjNUmnP736s32PkhHwHc2wwgGsoDvn?=
 =?us-ascii?q?POo9XuLqgSUeG1zLPPzT7ebfxZwzL955LVfR87vPqBWrJxftDUyUY1CgzKlE+c?=
 =?us-ascii?q?qYn/MDOOzOsNs2mb7/BnVe+0kG4nrB1+ojmoxscqlIbIiZ4VxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N4b968CJZcqT2WOo9sTs8/TWxkpjw2xqAFtJKnZiQHyZYqywbBZ/Cbd4WE?=
 =?us-ascii?q?+BHuWeaLLTtmmX5oeqizihmw/EWm1+byTNO70ExQoSpAitTMtm4C1xjU6sWfVP?=
 =?us-ascii?q?t98Vmu2SyV2wDQ9O5EO0Y0mrTfK5I7xb4wjJUTvVzCHi/whkr2kLebels49uWs?=
 =?us-ascii?q?8ejrf7vrqoGGO4NpiQzyLr4il829DOggNwgBRWmb+eCy1L35+k35Ra1Hjvk3kq?=
 =?us-ascii?q?nfrZDbKt0Xpq2nDA9P1IYs9RK/Ay6h0NUWm3kIMkhFdQmZj4jmJV7OOur0DfSh?=
 =?us-ascii?q?jFS2ljdk2fTGMqfmApXXIXjPiK3hcqpl605A1AozyshS55ZVCrECPv3/QEDwtM?=
 =?us-ascii?q?HDAx89Mgy0xfvnCdpn2oMfX2KPHrGWMKfIvVCU4eIvJvGGZJUJtzblN/gl+/nu?=
 =?us-ascii?q?gGc5mVAHfKmpwYEYaHeiEvRmPkWWe3zsgtgaHGcOvwo+SvHqiVKYXT5SYXayQ7?=
 =?us-ascii?q?wz5jUhBI26CofDQ5ingKad0yejAp1WemdGB0iOEXfvaYqIQfQMaCWUIs9nlTwJ?=
 =?us-ascii?q?TryhS44n1RGzuw720btnLuzI+iIGsZLvzsR65+rWlRsq7zx7E9yd032RT2Fzhm?=
 =?us-ascii?q?4HXSQ23KB4oUx+0FuDy7J3g/5DGNxX5vNJVBo6NJHGw+x7DdDyRhzOftOTRFm6?=
 =?us-ascii?q?RdWmBCk7TsgtzN8Wf0Z9B9KigwjA3yWwBb8ZjbiLBJ0u/aLa0Hj8PMJ9y3fA1K?=
 =?us-ascii?q?k8gFgqWMpPNWu6hqFh8wjfHZLGk0Kcl6yyb6QTwDbN9HufzWqJpExXTRR/Ubvb?=
 =?us-ascii?q?UnwFZkvZt9L55ljcQL+oDrgnNghBycuGKqZRbt3pjFNGROrsOdjEYmKxnXuwCg?=
 =?us-ascii?q?iMxr+WcIXqfGAd1j3HCEcYiwAT4WqGNQ8mCyi8uW3eEiJhGUjvY0z29+l+s220?=
 =?us-ascii?q?TkkvwgGObk1h0ae1+xEPifydTfMTwqwLuCM7pzpoG1a92srcC8CcqAp5YKVcfd?=
 =?us-ascii?q?Q97U9b1WLYsgx9OYCgL6Bih1IEbwR7pUTu1w9zCoVBl8gqo2gnzA5zKaKezVNA?=
 =?us-ascii?q?eCmU3ZH2Or3LNGby+AqjZLLR2lHbyNyW4LsA6Owkq1X/uwGkDlAt83F53NhazX?=
 =?us-ascii?q?Sd5o/GAxEPUZ3sSEk38Rt6p7bEYiQm44PU1HtsMbS7szPY2tIpAvclxQikf9tF?=
 =?us-ascii?q?LKyEEwryGdUAB8eyMOwqh0SpbhUcMeFS6a44Jd+pe+GH2a6rJulgmj2mgH9D4I?=
 =?us-ascii?q?B81EKM6iV9RvTJ35YD3/GXwA+HWy3gg1emt8D9gZpEai0KHmqj1SjkA5ZcZrdz?=
 =?us-ascii?q?fYkXE2iuOdC4xtJki57rRXFY7l+jC0oa18CzfRqdckLy3RdX1UQRunGnnSq4zz?=
 =?us-ascii?q?ppkzAmtKaf3SrOw/j8exoDIGJEWG5ijVL0K4iuk98aRFSobxQulBa95Uf6xrJX?=
 =?us-ascii?q?paRlI2nIXEdIeTP7L2VjUqu2q7qDbNRD6JIusSVLTuu8ZUqWRaL6oxsfyynjBX?=
 =?us-ascii?q?dRxCgndzG2vZX0hx56h3iHLHZwr3rZftt8xQzF69zfRv5R3zwGSzd+iTTMAli8?=
 =?us-ascii?q?Pt+p/ciblpvZs+C+UX6hWYNXcSXx0YyAsy6773VwARKjh/CzhsHnEQ8i3C77zd?=
 =?us-ascii?q?ZqUj/ErBT9YontzKm6NeNnfk91BF7z8cZ6G4d+kpcui5EUw3QVmpKV/X8fm2fp?=
 =?us-ascii?q?Ldpbwb7+bGYKRTMTwN7a+gnl1FdjLnKU3Y35UHqdz9BlZ9m7ZGMWxy0849pLCK?=
 =?us-ascii?q?eS8LxLgy91rkCkogLWZPh3hi0dxuc26H4Gn+EJvxIgziCcArARB0ZUJyLtmAqT?=
 =?us-ascii?q?79CisqpXfn2gfqaq1Epxht2hCLCCogdBWHf2YJsiHClw7tlhP1LIynH89obkeN?=
 =?us-ascii?q?zIZ9IJqhKUiwvAj/RSKJ8pivoKgi9nNXj8vHI/ze47kAdu3Yq7vIWcL2Vt/aS5?=
 =?us-ascii?q?AgNXNzHvZsMT/C3tgrhansqMw4+vGZBhEC0RXJT0VfKoDC4StfP/OgmVCjI8rX?=
 =?us-ascii?q?ObGafFEQ+b9UdrtHbPE5GtN3GKK3gV19RiRB+BJENBhAAYRik1npk8Fgqy3szu?=
 =?us-ascii?q?bF955iwN5l7/shZMyPhnNxzhXWfEvguodi04SJuCLBpV8wFC4V3aMdeF4+J3Hi?=
 =?us-ascii?q?FY+IChrQOXJmyaYQRIEX8GWkieC1//Obmu4MHK8/KECeqmM/vOfbKOpPReVveP?=
 =?us-ascii?q?2JKvy5Zm8CyKNsmVJXliCPs72kVYUHB9GsTZnSgPSiMNmyLMac6buAmz+iltos?=
 =?us-ascii?q?+j9/TrXRrl5ZGTBLtKLdVv5xe2jL+DN+GOhSZ5KjVY1pIWyX/L0rgf21EShD90?=
 =?us-ascii?q?dzmwCrQNrirNTKPWmq9KAB8XcSJzNM1U760i2glBI9LUitTw1rRglP46F09FVU?=
 =?us-ascii?q?D9msGufcEFOXy9O0jdBEmVNLWKPznLw8DsbKO4SL1QivhUthKqtTaaFU/jIiqM?=
 =?us-ascii?q?lz3zWx+zNuFMiTmRPAZCt4GlbhZtFW/jQcr6ah26Nd97lyE5zacoiXPKK2EcNy?=
 =?us-ascii?q?Nxc0dMrr2W8CNZje9zG21H7np5M+aEnzyV4PXfKpYTqfFrGDh7l/pG4HQmzLtY?=
 =?us-ascii?q?9CFFS+ZzmCvXr95upUmpk+iPyjV9VhpOpS1GhIaKvUVkJKXY+YNMWXfC/BIR82?=
 =?us-ascii?q?qQDw4GqMdiCt3q6OhszY3qlanzITMKyNPR8MhUU83VI8KONDw6MB/kGxbEDQ8E?=
 =?us-ascii?q?Sy7tPmba0R9zivaXo1ictZE6q4Lr0KsHT7ZXXRRhB/ofA0hsWtkLO553Xykjua?=
 =?us-ascii?q?Wch88P43eusF/aQ8AM7cOPbe6bHfi6cGXRtrJDfRZdhOqgdYk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AsAACYYAtch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGDayeDepY3FGiWVYFzLBMBh10iNgcNAQMBAQEBAQECARMBAQEKCwkIKSM?=
 =?us-ascii?q?MgjYkAYJhAQEBAQIBAQIgHQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcBhMFFoMGg?=
 =?us-ascii?q?XoHAQWbbjyKHXCBL4J2AQEFhy0IgQuJe4EcghaBEYIUSTWIBYI1Iok5hn+PXFU?=
 =?us-ascii?q?HApFLGF+QWZkcMIEsDoF4MxojgQEGgjWCGwwXg0qKYjEygQUBAYtLAQE?=
X-IPAS-Result: =?us-ascii?q?A0AsAACYYAtch0O0hNFjHQEBBQEHBQGBUwYBCwGDayeDepY?=
 =?us-ascii?q?3FGiWVYFzLBMBh10iNgcNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBA?=
 =?us-ascii?q?QIBAQIgHQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcBhMFFoMGgXoHAQWbbjyKHXC?=
 =?us-ascii?q?BL4J2AQEFhy0IgQuJe4EcghaBEYIUSTWIBYI1Iok5hn+PXFUHApFLGF+QWZkcM?=
 =?us-ascii?q?IEsDoF4MxojgQEGgjWCGwwXg0qKYjEygQUBAYtLAQE?=
X-IronPort-AV: E=Sophos;i="5.56,329,1539673200"; 
   d="scan'208";a="54355545"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 22:15:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726176AbeLHGO6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 01:14:58 -0500
Received: from conssluserg-06.nifty.com ([210.131.2.91]:21219 "EHLO
        conssluserg-06.nifty.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726081AbeLHGO5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 01:14:57 -0500
Received: from mail-vs1-f47.google.com (mail-vs1-f47.google.com [209.85.217.47]) (authenticated)
        by conssluserg-06.nifty.com with ESMTP id wB86EdV5014213;
        Sat, 8 Dec 2018 15:14:39 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conssluserg-06.nifty.com wB86EdV5014213
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1544249680;
        bh=UOKC8lUhDpKdw5Itm2vDLG/fOl6SE9UaxGtpGgYV4xo=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=Nb133ep72uNob5hqFGg5Ojgvf6fNnuJyValmQJvwjO1SdZ3rgEzuz0iUMWT8CRd22
         ODtpYyP/vl/KzUiu3CKYmfAKgzRgK49LjnLu2aslRPI1nt97xdOuILbZS3N3bFuLNW
         /E8ROtQR+3z0KB++VK8ohuRpTfv0w/io9VCWv1MNdktQmuxZArcxOmiX4LIC3o+JWr
         7bSP6G8ZuYm64jJTbdm5MNnqwAtZnOpgPrUW/bRoVWpiXg+QintmoHYg9LVavzZUBr
         0lcBAB5ggUyOBwQuDTSeDmFcT222Mu7ly5aIJYVbIF/k01sm1AcUMFAkJmu+uqa99S
         6zETrA5PQnFCg==
X-Nifty-SrcIP: [209.85.217.47]
Received: by mail-vs1-f47.google.com with SMTP id e7so3783713vsc.2;
        Fri, 07 Dec 2018 22:14:39 -0800 (PST)
X-Gm-Message-State: AA+aEWY8oBShBFe4ZySI+QJVfY8lBstscO0P9oYr7mAoWlwZ2JZnKH6m
        uGcfZujn5HK01p8qM/9VaNRanCR7Ot6JaPrhzOw=
X-Google-Smtp-Source: AFSGD/XBxFMbVZpiXJtMC1TTYK/I9gD8lQg1Te7mYOjpJV9XnQq5yddlHSiYWfMo+VeFxoLa0Lk3h2SCzk8GnIlb5Nk=
X-Received: by 2002:a67:5f03:: with SMTP id t3mr2186679vsb.155.1544249678616;
 Fri, 07 Dec 2018 22:14:38 -0800 (PST)
MIME-Version: 1.0
References: <1543823457-32478-1-git-send-email-yamada.masahiro@socionext.com>
 <19c7bdab-8df8-f7c6-7921-9a4d43dbca64@monstr.eu> <CAK7LNATWSNqZ8uE+teMW+uvDCLXfq6zMTqh_7=ssrPquCLJz8A@mail.gmail.com>
 <938f1368-5e07-0178-5b99-d8331ce216f8@xilinx.com> <18fb7c8b-2b47-eb39-d80b-7137e7db466b@xilinx.com>
In-Reply-To: <18fb7c8b-2b47-eb39-d80b-7137e7db466b@xilinx.com>
From: Masahiro Yamada <yamada.masahiro@socionext.com>
Date: Sat, 8 Dec 2018 15:14:02 +0900
X-Gmail-Original-Message-ID: <CAK7LNAT-RuvvwGy5Tf01_rWk4EtD0H+y4UPF=aa7B3YB8v692g@mail.gmail.com>
Message-ID: <CAK7LNAT-RuvvwGy5Tf01_rWk4EtD0H+y4UPF=aa7B3YB8v692g@mail.gmail.com>
Subject: Re: [PATCH 0/7] microblaze: fix various problems in building boot images
To: Michal Simek <michal.simek@xilinx.com>
Cc: Michal Simek <monstr@monstr.eu>,
        Linux Kbuild mailing list <linux-kbuild@vger.kernel.org>,
        DTML <devicetree@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, Dec 8, 2018 at 12:20 AM Michal Simek <michal.simek@xilinx.com> wrote:
>
> On 07. 12. 18 14:29, Michal Simek wrote:
> > On 07. 12. 18 12:29, Masahiro Yamada wrote:
> >> On Thu, Dec 6, 2018 at 11:55 PM Michal Simek <monstr@monstr.eu> wrote:
> >>>
> >>> On 03. 12. 18 8:50, Masahiro Yamada wrote:
> >>>> This patch set fixes various issues in microblaze Makefiles.
> >>>>
> >>>> BTW, "simpleImage.<dt>" works like a phony target to generate the
> >>>> following four images, where the first three are just aliases.
> >>>>
> >>>>  - arch/microblaze/boot/simpleImage.<dt>:
> >>>>          identical to arch/microblaze/boot/linux.bin
> >>>>
> >>>>  - arch/microblaze/boot/simpleImage.<dt>.unstrip:
> >>>>          identical to vmlinux
> >>>>
> >>>>  - arch/microblaze/boot/simpleImage.<dt>.ub:
> >>>>          identical to arch/microblaze/boot/linux.bin.ub
> >>>>
> >>>>  - arch/microblaze/boot/simpleImage.<dt>.strip:
> >>>>          stripped vmlinux
> >>>>
> >>>> I am not sure how much useful those copies are,
> >>>> but, I tried my best to keep the same behavior.
> >>>>
> >>>> IMHO, I guess DTB=<dt> would be more sensible,
> >>>> but it is up to Michal.
> >>>>
> >>>>
> >>>>
> >>>> Masahiro Yamada (7):
> >>>>   microblaze: fix cleaning of boot images
> >>>>   microblaze: adjust the help to the real behavior
> >>>>   microblaze: move "... is ready" message to arch/microblaze/Makefile
> >>>>   microblaze: fix multiple bugs in arch/microblaze/boot/Makefile
> >>>>   microblaze: add linux.bin* and simpleImage.* to PHONY
> >>>>   microblaze: fix race condition in building boot images
> >>>>   microblaze: remove the unneeded code just in case file copy fails
> >>>>
> >>>>  arch/microblaze/Makefile          | 14 +++++++++-----
> >>>>  arch/microblaze/boot/Makefile     | 33 +++++++++++++++++----------------
> >>>>  arch/microblaze/boot/dts/Makefile |  5 +----
> >>>>  3 files changed, 27 insertions(+), 25 deletions(-)
> >>>>
> >>>
> >>> One more thing I have in my mind for a while is that will be good to
> >>> configure kernel build flags from DT and completely get rid of these
> >>> symbols.
> >>>
> >>> XILINX_MICROBLAZE0_USE_MSR_INSTR
> >>> XILINX_MICROBLAZE0_USE_PCMP_INSTR
> >>> XILINX_MICROBLAZE0_USE_BARREL
> >>> XILINX_MICROBLAZE0_USE_DIV
> >>> XILINX_MICROBLAZE0_USE_HW_MUL
> >>> XILINX_MICROBLAZE0_USE_FPU
> >>>
> >>> It means setup CPUFLAGS based on extracting that values from DT that it
> >>> all the time match the hardware.
> >>> It will also simplify all the CPUFLAGS logic which is in
> >>> arch/microblaze/Makefile.
> >>>
> >>> Do you have any idea how this can be done?
> >>
> >>
> >> I have no idea.
> >>
> >> Parsing DTS with sed or something would be possible, but ugly.
> >>
> >> In my opinion, the kernel should be multi platform image,
> >> in other words, it is the least common denominator
> >> of supported platforms.
> >>
> >> So, the kernel should enable all features that may or may not be used
> >> depending on platform.
> >>
> >> I do not know if this works for MB.
> >
> > Microblaze is soft core CPU where you can select if you want to have it
> > with multiplier, divider, barrel shifter, etc.
> > You can of course say that you don't have them and you have "universal"
> > kernel but very slow.
> > That's why user has to setup these configs which are converted to cflags
> > to say GCC what can be used.
> > And these configs can be simply parsed from dt.
> >
> > For example like this based on dtb (quick hack)
> >
> > for i in `echo use-msr-instr use-pcmp-instr use-barrel use-div
> > use-hw-mul use-fpu`; do
> >       UPPER=`echo $i | tr '-' '_' | tr '[a-z]' '[A-Z}'`
> >       echo $i $UPPER;
> >
> >       VAR=`fdtget -t i $FILE/arch/microblaze/boot/dts/system.dtb /cpus/cpu@0/
> > xlnx,$i`
> >       FLAGS+="CONFIG_XILINX_MICROBLAZE0_${UPPER}=${VAR} "
> > done
> >
> > make $FLAGS
> >
> >
> > When simpleImage is requested dt could be parsed to setup proper build
> > flags.
>
> One more thing I found is that I have done these changes
>
> diff --git a/arch/microblaze/kernel/setup.c b/arch/microblaze/kernel/setup.c
> index bbd6968ce55b..dc6a6fee3ae2 100644
> --- a/arch/microblaze/kernel/setup.c
> +++ b/arch/microblaze/kernel/setup.c
> @@ -153,11 +153,13 @@ void __init machine_early_init(const char
> *cmdline, unsigned int ram,
>  #endif
>
>  #if CONFIG_XILINX_MICROBLAZE0_USE_MSR_INSTR
> +#error MSR is enabled
>         if (msr) {
>                 pr_info("!!!Your kernel has setup MSR instruction but ");
>                 pr_cont("CPU don't have it %x\n", msr);
>         }
>  #else
> +#error MSR is not enabled
>         if (!msr) {
>                 pr_info("!!!Your kernel not setup MSR instruction but ");
>                 pr_cont("CPU have it %x\n", msr);
>
> and run MSR with 1
> make defconfig && make CONFIG_XILINX_MICROBLAZE0_USE_MSR_INSTR=1
> arch/microblaze/kernel/setup.o
> it errors #error MSR is enabled
> and all is good.
>
> And when I run MSR with 0
> make defconfig && make CONFIG_XILINX_MICROBLAZE0_USE_MSR_INSTR=0
> arch/microblaze/kernel/setup.o
> also getting #error MSR is enabled
> which is wrong.
>
> Is there any rule what can be setup at compilation time?

You are trying to do very specific things,
I do not have a clean solution.

I do not mind whatever you do in arch-Makefile.

If you look at stack_protector_prepare in arch/powerpc/Makefile,
it is parsing a file with awk to setup compiler flags.


-- 
Best Regards
Masahiro Yamada
