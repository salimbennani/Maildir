Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 21:09:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D89E758055F;
	Tue, 18 Dec 2018 03:24:30 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 03:24:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANmEP9RJr0blOpcKpM9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvn+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIOy?=
 =?us-ascii?q?YYQBAOUOP/pXoYb+qVsVtRuzBxKhBP/txzJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModr7LqcSSv21zK3Swj7ecv5Wwy3y6JXOchs8pvyMQKl/cdDLxkkyEQPIlVGQ?=
 =?us-ascii?q?qY3jPzOI2eUBqWmb4PFlVe61l2EnrARxryGpy8wxiYfJnpoYxk7Y+Sh92oo5ON?=
 =?us-ascii?q?O1RFBhbdK5E5ZcqzuWOop0T886R2xkojs2x70YtZKhYiQG1psqywTCZ/GHboSF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTte00FlUoSpfiNXMtW4C1wbV6seZTv?=
 =?us-ascii?q?tx5ECh2SyA1wzL6+FEJ147lbbDJpI/3rI9koAfvVnNEyPogkn6kaybelk+9uWp?=
 =?us-ascii?q?6enrerDmqYWdN49whAH+KKMumsmnDOQ8MwgOWXWb+Oul2L3g40L5WrNKgeMykq?=
 =?us-ascii?q?XAt5DbK8IbqbCjAwJOzIYj5AiwDy283NQbg3YHNlRFdwyDj4TzPFHOOv/4Ae+l?=
 =?us-ascii?q?g1uwiDdr2+zGPrr5D5XJL3jDk6nucaxy6k5B0wczydFf55RJCrAOOv7zW0nxtM?=
 =?us-ascii?q?DGAR89KQC73+HnCNBl3IMERW2PGrOZML/VsVKQ5uIgOeiMZJMPtzb6MfQl5+Pu?=
 =?us-ascii?q?gmU/mV8SZqSp2ZoXaHalHvVpOUmZYHzsgssfHmcOpAYxUOvqiFiaWz5Je3myR7?=
 =?us-ascii?q?485i08CI++D4fDQZ6ijKaC3Ce8GJ1WYGdGB0uIEXfpcYWERvgNZDiTIs9njjwL?=
 =?us-ascii?q?S7yhR5U92hGpsQ/w06BnIfbM+i0EqZLj08B46PfIlREy8jx0DN6R03uXQGF2hW?=
 =?us-ascii?q?4IQz423KZioU1y0FuD0K54g+BGGtxX/f9GTgA6NZvExexgF9/yQh7BfsuOSFu+?=
 =?us-ascii?q?QdWpGzcxQsg1w98PeUl9HdqigwvH3yqrBb8VirOKCIY18qLaw3j+OcJ9x2za26?=
 =?us-ascii?q?kmilksWtFPOnG+hq5j6wjTAJbEnFiDmKa0a6sQxi7N+32FzWqVok5YVgl8UaHG?=
 =?us-ascii?q?XXAaYkvbttD55kLET7+zBrUrKApBycieKqRUbt3ll0lJRPDmON7GeWK+h3+wBQ?=
 =?us-ascii?q?qUxrOLdIflZn8S3DvDB0QekwAc53CGNRMgCSenuG/eCD1uFVTyY0Lj6+V+qXW7?=
 =?us-ascii?q?TlMqwAGOdUFuy721+hsNj/yGV/wTxq4EuDsmqzhsAFa93tfWC92cpwphfKRQe8?=
 =?us-ascii?q?897E1A1WLDswx9P5qgL695i14acgR3uV7u1hptBoVBl8gqsG0lzA5oJa2E11NB?=
 =?us-ascii?q?ciuS3YrsNb3PNmny4BevZrbM1VHaztmX9bkA6fQip1r4oQGmC1At83Nk09lSzX?=
 =?us-ascii?q?uR/ZHKDAsUUZLsXUc77Rl6p7fGYiYj44PYz2FjMa6xsjXawdImGPMlygq8f9dY?=
 =?us-ascii?q?KK6FFBLyH9cGCMS0Ke0qm0KmbhQLPO1J8K40PsWmd+aJ2aKxPeZgmi6mgnpD4I?=
 =?us-ascii?q?xnzk2M8C98QPbS35kZ2/GYwheHVzDkgVe7s8D4hZpLZSsPEWq40yTkApBeZrdz?=
 =?us-ascii?q?fYoSFWihOcm3ychgiJ73XH5Y8kWuB1cH2M+vZBqTYEbx3QxW1UQLv3OnnTG0wC?=
 =?us-ascii?q?BzkzEstqCfxjDBw/z+dBobPW5GXGljjVb2LYm0ldwaR1Wobw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b/oxQAySPjHG?=
 =?us-ascii?q?hexDchezGxoJr5nB96iGObLHltqnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6BtDG05WpwDR29nvCznMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpaV8mAGkWvp?=
 =?us-ascii?q?MdVbxLjxbHwCRTMQx97V4Q7l2FBsL36TxoL5UGmdzdVlZ9WgfmwW3Sc95dhQCK?=
 =?us-ascii?q?iI9LxEgTd1ol2goALUYPh9nS0SxeEg6XEEmOEJpBQizj+GDb8MB0lYMjfhlxCJ?=
 =?us-ascii?q?79C4saVWa3yjcbm21Epig9+hCKuOrR1bWHb8Yp0iBzN/7t1jMFLQ133+8p3keN?=
 =?us-ascii?q?7Vbd4JtxybiRHAj/VOKJIql/oHni5nOWP7vX04xO83lx1u3ZemvIeZL2Vh5r62?=
 =?us-ascii?q?AhldNjftfcMc5intjbpCnsaRx42gBY9uGjIPXJv1V/6oFC8SuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03npwjGQCv2sPh?=
 =?us-ascii?q?a1115iwL6l77txtMyf9oNx/lXWfEvwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137Priu4sTA8/GFBuWkKfvCe66OqetYV/eH?=
 =?us-ascii?q?3p+v1opm/zCRNsSAJHViDvs72lZdUnB9AcjWhzIPSykPnSLXc8GbvAu8+jFwrs?=
 =?us-ascii?q?2n8PTkRgPv5YiMC7tTK9lv+Aq2gaCMN+GOniZ5NC1Y24gIxX/JzrgfwVEThztv?=
 =?us-ascii?q?dzmrDbQPqyrNQLjMla9QCh4RczlzO9dQ76IgwglNPtbWhcno1rFjlP46FVdEWU?=
 =?us-ascii?q?blmsGofsEKJ2C9NFXaBEeELriGJDvLw93pbqO4U7FfkOJUtxioszaBD0DjJiiD?=
 =?us-ascii?q?lyXuVx23LeFMjSSbMAZCt42nbhltCXbsTNT9Zx2/Md93iyA2wLIuinPLM24cLS?=
 =?us-ascii?q?Zzc0dXorKM6iNYh+11G3Zd4Xp9MemEhyGZ4vHYK5kMt/trByV0l+RC73U7y7ta?=
 =?us-ascii?q?9idERPNulSvWr95upUymk+aVxjpmVhpOtihEhIaRsUp+PqXZ88oIZXGR2QMQ62?=
 =?us-ascii?q?qQDFwout1qQonqu6JNzNfMvK32ITZGtdnT+J1PKdLTLZe6KmE8NROhMiTdEQ1N?=
 =?us-ascii?q?GSOhL2jCgWRZkfeP5juUpJ18oZ/pzsldAoRHXUA4Q6tJQn9uG8YPddIuBmsp?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BnAQBD2Bhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N8iHiLGoFgLRSJAZA4EwEBGBMBh18iOBIBAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgpL4I2JAGCYgEBAQMBAiAEUgYJAQEKDgoCAhgOAgIDHjYGDQYCAQEBgx2Ba?=
 =?us-ascii?q?QMVAwEBplwBAQFufDOIEg2CHYELizQXgUA/gREnDIJfgleFMoJXApAZkFswCY4?=
 =?us-ascii?q?vgysGGJFXj02JfwIEBgUCEwGBXYF3MxoIGxWDJ4ImGI4ecYEFAQGNcwEB?=
X-IPAS-Result: =?us-ascii?q?A0BnAQBD2Bhch0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N8iHi?=
 =?us-ascii?q?LGoFgLRSJAZA4EwEBGBMBh18iOBIBAwEBAQEBAQIBEwEBAQoLCQgpL4I2JAGCY?=
 =?us-ascii?q?gEBAQMBAiAEUgYJAQEKDgoCAhgOAgIDHjYGDQYCAQEBgx2BaQMVAwEBplwBAQF?=
 =?us-ascii?q?ufDOIEg2CHYELizQXgUA/gREnDIJfgleFMoJXApAZkFswCY4vgysGGJFXj02Jf?=
 =?us-ascii?q?wIEBgUCEwGBXYF3MxoIGxWDJ4ImGI4ecYEFAQGNcwEB?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="55613283"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 03:24:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726559AbeLRLY0 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 06:24:26 -0500
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:35140 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1726390AbeLRLY0 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 06:24:26 -0500
Received: from pps.filterd (m0098417.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wBIBONUo045023
        for <linux-kernel@vger.kernel.org>; Tue, 18 Dec 2018 06:24:24 -0500
Received: from e06smtp02.uk.ibm.com (e06smtp02.uk.ibm.com [195.75.94.98])
        by mx0a-001b2d01.pphosted.com with ESMTP id 2peyysr06v-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Tue, 18 Dec 2018 06:24:24 -0500
Received: from localhost
        by e06smtp02.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <ubraun@linux.ibm.com>;
        Tue, 18 Dec 2018 11:24:14 -0000
Received: from b06cxnps3074.portsmouth.uk.ibm.com (9.149.109.194)
        by e06smtp02.uk.ibm.com (192.168.101.132) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Tue, 18 Dec 2018 11:24:11 -0000
Received: from d06av22.portsmouth.uk.ibm.com (d06av22.portsmouth.uk.ibm.com [9.149.105.58])
        by b06cxnps3074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wBIBOAvb56098868
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Tue, 18 Dec 2018 11:24:10 GMT
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 5E7F14C044;
        Tue, 18 Dec 2018 11:24:10 +0000 (GMT)
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id EB36C4C046;
        Tue, 18 Dec 2018 11:24:09 +0000 (GMT)
Received: from oc5311105230.ibm.com (unknown [9.152.224.151])
        by d06av22.portsmouth.uk.ibm.com (Postfix) with ESMTP;
        Tue, 18 Dec 2018 11:24:09 +0000 (GMT)
Subject: Re: [PATCH v2] net/smc: fix TCP fallback socket release
To: Myungho Jung <mhjungk@gmail.com>
Cc: "David S. Miller" <davem@davemloft.net>,
        linux-s390@vger.kernel.org, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <20181217052122.GA26299@myunghoj-Precision-5530>
 <a9ad19c4-1ef7-4dc9-639e-03b3459457e2@linux.ibm.com>
 <20181218070339.GA20290@myunghoj-Precision-5530>
From: Ursula Braun <ubraun@linux.ibm.com>
Openpgp: preference=signencrypt
Date: Tue, 18 Dec 2018 12:24:09 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181218070339.GA20290@myunghoj-Precision-5530>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-TM-AS-GCONF: 00
x-cbid: 18121811-0008-0000-0000-000002A2FDEF
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18121811-0009-0000-0000-0000220D90E4
Message-Id: <8cb0dcc2-4341-f56a-8465-303d238bc5f5@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-18_05:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1812180101
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/18/2018 08:03 AM, Myungho Jung wrote:
> On Mon, Dec 17, 2018 at 03:58:58PM +0100, Ursula Braun wrote:
>>
> 
> Hi Ursula,
> 
> Thank you for your suggestion. I have a question on your comment.
> 
>>
>> On 12/17/2018 06:21 AM, Myungho Jung wrote:
>>> clcsock can be released while kernel_accept() references it in TCP
>>> listen worker. Also, clcsock needs to wake up before released if TCP
>>> fallback is used and the clcsock is blocked by accept. Add a lock to
>>> safely release clcsock and call kernel_sock_shutdown() to wake up
>>> clcsock from accept in smc_release().
>>
>> Thanks for your effort to solve this problem. I have some minor
>> improvement proposals:
>>
>>>
>>> Reported-by: syzbot+0bf2e01269f1274b4b03@syzkaller.appspotmail.com
>>> Reported-by: syzbot+e3132895630f957306bc@syzkaller.appspotmail.com
>>> Signed-off-by: Myungho Jung <mhjungk@gmail.com>
>>> ---
>>>  net/smc/af_smc.c | 14 ++++++++++++--
>>>  net/smc/smc.h    |  2 ++
>>>  2 files changed, 14 insertions(+), 2 deletions(-)
>>>
>>> diff --git a/net/smc/af_smc.c b/net/smc/af_smc.c
>>> index 5fbaf1901571..5d06fb1bbccf 100644
>>> --- a/net/smc/af_smc.c
>>> +++ b/net/smc/af_smc.c
>>> @@ -147,8 +147,14 @@ static int smc_release(struct socket *sock)
>>>  		sk->sk_shutdown |= SHUTDOWN_MASK;
>>>  	}
>>>  	if (smc->clcsock) {
>>> +		if (smc->use_fallback && sk->sk_state == SMC_LISTEN) {
>>> +			/* wake up clcsock accept */
>>> +			rc = kernel_sock_shutdown(smc->clcsock, SHUT_RDWR);
>>> +		}
>>
>> This part is not needed, since an SMC socket in state SMC_LISTEN is never
>> a use_fallback socket.
> 
> In smc_sendmsg(), set use_fallback to true if SMC socket is SMC_INIT
> state and the message has MSG_FASTOPEN flag. After this, smc_listen()
> would trigger smc_tcp_listen_work(). Is this not an expected scenario?
> Then, what is the reason for not skipping smc_sendmsg() in SMC_INIT
> state?
> 

You are right, I have not had the FASTOPEN case in mind, sorry. If we want
to allow fallback in case of FASTOPEN, we need the kernel_sock_shutdown() here
for proper cleanup. Nice!

>>
>>> +		mutex_lock(&smc->clcsock_release_lock);
>>>  		sock_release(smc->clcsock);
>>>  		smc->clcsock = NULL;
>>> +		mutex_unlock(&smc->clcsock_release_lock);
>>>  	}
>>>  	if (smc->use_fallback) {
>>>  		if (sk->sk_state != SMC_LISTEN && sk->sk_state != SMC_INIT)
>>> @@ -205,6 +211,7 @@ static struct sock *smc_sock_alloc(struct net *net, struct socket *sock,
>>>  	spin_lock_init(&smc->conn.send_lock);
>>>  	sk->sk_prot->hash(sk);
>>>  	sk_refcnt_debug_inc(sk);
>>> +	mutex_init(&smc->clcsock_release_lock);
>>>  
>>>  	return sk;
>>>  }
>>> @@ -821,7 +828,7 @@ static int smc_clcsock_accept(struct smc_sock *lsmc, struct smc_sock **new_smc)
>>>  	struct socket *new_clcsock = NULL;
>>>  	struct sock *lsk = &lsmc->sk;
>>>  	struct sock *new_sk;
>>> -	int rc;
>>> +	int rc = 0;
>>
>> Without clcsock the good path should not be executed. Thus I suggest
>> to initialize with something negative like -EINVAL.
>>
>>>  
>>>  	release_sock(lsk);
>>>  	new_sk = smc_sock_alloc(sock_net(lsk), NULL, lsk->sk_protocol);
>>> @@ -834,7 +841,10 @@ static int smc_clcsock_accept(struct smc_sock *lsmc, struct smc_sock **new_smc)
>>>  	}
>>>  	*new_smc = smc_sk(new_sk);
>>>  
>>> -	rc = kernel_accept(lsmc->clcsock, &new_clcsock, 0);
>>> +	mutex_lock(&lsmc->clcsock_release_lock);
>>> +	if (lsmc->clcsock)
>>> +		rc = kernel_accept(lsmc->clcsock, &new_clcsock, 0);
>>> +	mutex_unlock(&lsmc->clcsock_release_lock);
>>>  	lock_sock(lsk);
>>>  	if  (rc < 0)
>>>  		lsk->sk_err = -rc;
>>> diff --git a/net/smc/smc.h b/net/smc/smc.h
>>> index 08786ace6010..9a2795cf5d30 100644
>>> --- a/net/smc/smc.h
>>> +++ b/net/smc/smc.h
>>> @@ -219,6 +219,8 @@ struct smc_sock {				/* smc sock container */
>>>  						 * started, waiting for unsent
>>>  						 * data to be sent
>>>  						 */
>>> +	struct mutex            clcsock_release_lock;
>>> +						/* protects clcsock */
>>
>> I suggest to be more precise: "protects clcsock of a listen socket" 
>>
>>>  };
>>>  
>>>  static inline struct smc_sock *smc_sk(const struct sock *sk)
>>>
>>
> 

