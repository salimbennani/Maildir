Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:33:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4A23558037D
	for <like.xu@linux.intel.com>; Fri, 23 Nov 2018 02:20:42 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 23 Nov 2018 02:20:41 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AX+AGBhEko59yEUlWwweinZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7ypMuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOTA5/m/JicJwgq1Urw68qBJwwYHbbpybNOJ8c63fct4WWGRMUtpPWCxaGY68?=
 =?us-ascii?q?c4gCAvAdMepEtYTxul0Dpga+Cwm2A+PvzydFiGPx3a01zeshCxzN0hY6ENITrX?=
 =?us-ascii?q?/aq9L1NKEUUeev0aLFyi/Db/RZ2Tjj8ojEaAghruuRXb9rbcXRyFUvFxnEjlSf?=
 =?us-ascii?q?s4DqIzSV1uEUvmWd8uFuVvqvhnY5pw1toTWj3NoghpTKi44P1FzJ+yV0zJwoKd?=
 =?us-ascii?q?C6UEJ3fN2pHZtKuy2EN4Z6WMIvTmFytCokxbALv4OwcjIQx5Q93RHfbuSKc4iW?=
 =?us-ascii?q?7RLnU+acOTN4hHN+eLKjnBa+60egyuvhVsWu11ZKtCVFnsHNtnALyRPT9tCKRu?=
 =?us-ascii?q?Vh8kqiwzqDyh3f5+JeLUwqm6fWK4QtzqMym5YLtETMBC72mEH4jK+McUUk//Cl?=
 =?us-ascii?q?6/35bbXju5+QLpJ7hR/gMqswnsyzGP83Mg8TX2id5euzyqbj8Ur9QLVLjf05jL?=
 =?us-ascii?q?PVsZ/HJckDoq65AglV0pss6hqlDjem1sgYkmcDLF5fZB2HiI3pNkrIIPD/C/e/?=
 =?us-ascii?q?jFKskCpxy/DBJL3hDY3BLmLfn7f5YbZ990lcxRI3zdBe5JJbFKsNIf3uWkLqsN?=
 =?us-ascii?q?zYDxk5MxG7wur9CdV90J8eVnyLAqODLKzStlqItaoSJfKRbtoVpCrlMKpioPrv?=
 =?us-ascii?q?lmMi31kae6avwN0Qcn//G/1nJ0CQZz3rmssAFmER+RMzSfGvhFCcXDoAWnCpQq?=
 =?us-ascii?q?hp4zg6DJ6hX57OQ53ojLGf0SP+BJBPe21dFniKFnHncZjCXO0DPzmPKM1smSBR?=
 =?us-ascii?q?SL66VoU63guvvgKp970yHOrd/WUpvJSrgMl84avC0wMy/DtcDsKB3mXLRGZxyD?=
 =?us-ascii?q?AmXTgziZp4rkFngm+KzOBdhPpelJQH/fRGXx18LZfB5+d7F8rzSkTKedLfGwXu?=
 =?us-ascii?q?ecmvHTxkFoF5+NQJeUsoQ9g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0C6AAAR0/dbhxHrdtBiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwEBgS+LYIMTX4segg2KAYQCiTiBcxQYFIRAhBUiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKS9CARABgWIFAgMYCYJcAQIDAQIkCwETCikDAwECBgEBChgJHQgDA?=
 =?us-ascii?q?QtIBhiDHIICAQMBqBgziQmBDowJgVc/g241hF4BAQgWhVsCiH8ahkKBA48kBwK?=
 =?us-ascii?q?RJCMKgU+ILocBmDCBRoINMz2DPYImFxKOC0CBOIMthjZHgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0C6AAAR0/dbhxHrdtBiHQEBBQEHBQGBUQgBCwEBgS+LYIM?=
 =?us-ascii?q?TX4segg2KAYQCiTiBcxQYFIRAhBUiNAkNAQMBAQEBAQECARMBAQEKCwkIKS9CA?=
 =?us-ascii?q?RABgWIFAgMYCYJcAQIDAQIkCwETCikDAwECBgEBChgJHQgDAQtIBhiDHIICAQM?=
 =?us-ascii?q?BqBgziQmBDowJgVc/g241hF4BAQgWhVsCiH8ahkKBA48kBwKRJCMKgU+ILocBm?=
 =?us-ascii?q?DCBRoINMz2DPYImFxKOC0CBOIMthjZHgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="54516807"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Nov 2018 02:20:03 -0800
Received: from localhost ([::1]:51454 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gQ8Z8-000749-VO
	for like.xu@linux.intel.com; Fri, 23 Nov 2018 05:20:02 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:48584)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=8582a9f6d=roger.pau@citrix.com>)
	id 1gQ8Yg-0006y3-9w
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:19:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=8582a9f6d=roger.pau@citrix.com>)
	id 1gQ8Yc-0000gm-9y
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:19:34 -0500
Received: from smtp.eu.citrix.com ([185.25.65.24]:24110)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <prvs=8582a9f6d=roger.pau@citrix.com>)
	id 1gQ8Yb-0000YL-SL
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:19:30 -0500
X-IronPort-AV: E=Sophos;i="5.56,269,1539648000"; d="scan'208";a="82268922"
Date: Fri, 23 Nov 2018 11:19:19 +0100
From: Roger Pau =?utf-8?B?TW9ubsOp?= <roger.pau@citrix.com>
To: Zhao Yan <yan.y.zhao@intel.com>
Message-ID: <20181123101919.twxrmehljvyhuii6@mac>
References: <20181016021439.6212-1-yan.y.zhao@intel.com>
	<F22B14EC3CFBB843AD3E03B6B78F2C6A4ACFD80C@SHSMSX104.ccr.corp.intel.com>
	<20181018145636.k6ptvn4iszabjhxw@mac.bytemobile.com>
	<20181122131110.GA31906@joy-OptiPlex-7040>
	<20181122141805.vyqywi4ep65loye3@mac>
	<20181123050451.GC31906@joy-OptiPlex-7040>
MIME-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20181123050451.GC31906@joy-OptiPlex-7040>
User-Agent: NeoMutt/20180716
X-ClientProxiedBy: AMSPEX02CAS02.citrite.net (10.69.22.113) To
	AMSPEX02CL02.citrite.net (10.69.22.126)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 185.25.65.24
Subject: Re: [Qemu-devel] [PATCH] Xen PCI passthrough: fix passthrough
 failure when irq map failure
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: anthony.perard@citrix.com, xen-devel@lists.xenproject.org,
	sstabellini@kernel.org, qemu-devel@nongnu.org, JBeulich@suse.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Adding Jan in case he has an opinion on my reply below.

On Fri, Nov 23, 2018 at 12:04:51AM -0500, Zhao Yan wrote:
> On Thu, Nov 22, 2018 at 03:18:05PM +0100, Roger Pau Monné wrote:
> > On Thu, Nov 22, 2018 at 08:11:20AM -0500, Zhao Yan wrote:
> > > On Thu, Oct 18, 2018 at 03:56:36PM +0100, Roger Pau Monné wrote:
> > > > On Thu, Oct 18, 2018 at 08:22:41AM +0000, Zhao, Yan Y wrote:
> > > > > Hi
> > > > > The background for this patch is that: for some pci device, even it's PCI_INTERRUPT_PIN is not 0, it actually does not support INTx mode, so we should just report error, disable INTx mode and continue the passthrough.
> > > > > However, the commit 5a11d0f7 regards this as error condition and let qemu quit passthrough, which is too rigorous.
> > > > > 
> > > > > Error message is below:
> > > > > libxl: error: libxl_qmp.c:287:qmp_handle_error_response: Domain 2:received an error message from QMP server: Mapping machine irq 0 to pirq -1 failed: Operation not permitted
> > > > 
> > > > I'm having issues figuring out what's happening here.
> > > > s->real_device.irq is 0, yet the PCI config space read of
> > > > PCI_INTERRUPT_PIN returns something different than 0.
> > > > 
> > > > AFAICT this is due to some kind of error in Linux, so that even when
> > > > the device is supposed to have a valid IRQ the sysfs node it is set to
> > > > 0, do you know the actual underlying cause of this?
> > > > 
> > > > Thanks, Roger.
> > > Hi Roger
> > > Sorry for the later reply, I just missed this mail...
> > > On my side, it's because the hardware actually does not support INTx mode,
> > > but its configuration space does not report PCI_INTERRUPT_PIN to 0. It's a
> > > hardware bug, but previous version of qemu can tolerate it, switch to MSI
> > > and make passthrough work.
> > 
> > Then I think it would be better to check both PCI_INTERRUPT_PIN and
> > s->real_device.irq before attempting to map the IRQ.
> > 
> > Making the error non-fatal would mean that a device with a valid IRQ
> > could fail to be setup correctly but the guest will still be created,
> > and things won't go as expected when the guest attempts to use it.
> > 
> > Thanks, Roger.
> hi roger
> thanks for your sugguestion. it's right that "s->real_device.irq" is needed to be checked before mapping, like if it's 0.
> but on the other hand, maybe xc_physdev_map_pirq() itself can serve as a checking of "s->real_device.irq" ?
> like in our case, it will fail and return -EPERM.
> then error hanling is still conducted ==>set INTX_DISABLE flag, eventhrough the error is not fatal.
> 
>     machine_irq = s->real_device.irq;
>     rc = xc_physdev_map_pirq(xen_xc, xen_domid, machine_irq, &pirq);
>     if (rc < 0) {
>         error_setg_errno(errp, errno, "Mapping machine irq %u to"
>                          " pirq %i failed", machine_irq, pirq);
> 
>         /* Disable PCI intx assertion (turn on bit10 of devctl) */
>         cmd |= PCI_COMMAND_INTX_DISABLE;
>         machine_irq = 0;
>         s->machine_irq = 0;
> So, do you think it's all right just converting fatal error to non-fatal?

As I said above, I think it would be better to leave the error as
fatal and avoid attempting a xc_physdev_map_pirq with a machine_irq ==
0, which will fail.

If we really want to go down the route of making the error non-fatal,
I think you will also have to report PCI_INTERRUPT_PIN as 0 to the
guest, so that it's clear to the guest that the device doesn't have
legacy interrupt support.

Exposing a device with PCI_INTERRUPT_PIN != 0 but then not allowing
the guest to clear PCI_COMMAND_INTX_DISABLE is likely bogus.

Thanks, Roger.

