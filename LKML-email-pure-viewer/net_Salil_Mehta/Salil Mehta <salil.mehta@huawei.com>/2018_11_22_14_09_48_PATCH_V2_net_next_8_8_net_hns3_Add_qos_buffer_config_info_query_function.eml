Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 22:27:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 21C0158040F;
	Thu, 22 Nov 2018 06:11:39 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 06:11:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIvaiNRWmlLZXMswTvopJwnE3l+fV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCEuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwwYDUb46JO/p/ZaPdZdEXSHFdXspNTSFNHpmx?=
 =?us-ascii?q?Y5cTA+cHIO1Wr5P9p1wLrRamGAejHufvyj5MhnTr2qM1zeQhER3c0wc9GN8Oq2?=
 =?us-ascii?q?7brNH0NKcWS+y1ybfHzTXfb/xMwjr96JXIfQovoP6SXLJ8a9beyU4qFw7ciFib?=
 =?us-ascii?q?tI/rPyuN2+gTr2SW6/BsWf+hhmI5sQ19vzuiyts2hoTIhI8Z0k3I+TljzIorOd?=
 =?us-ascii?q?G0VlR3bcC6HJZRrS2XN4R7TtstTmxooio21LILtJqhcCQU1Zgr2QTTZvKHfoWO?=
 =?us-ascii?q?/xntTvyeIS1ii3JgYL+/hwi98UynyuDkSMm030hFrjBfntnPqH8NzRrT5daDSv?=
 =?us-ascii?q?dn+UehwzmP2xjS6uFCP080ibLWJ4A9zrM0jJYfrErOEjHslEnrj6Kaal8o9+mq?=
 =?us-ascii?q?5uj/Z7XpvJ6cN4t6igHkNaQun9SyAeA5MggIQmia9v2w1L798k3jRrVFkPk2nr?=
 =?us-ascii?q?DesJHUI8QUuLS5DhRL0oYs9Rm/FS2q0NcGknkdKlJKZhaHg5LuO1HUL/D0Fe2/?=
 =?us-ascii?q?jEi0kDd32/DGOaXsApHMLnjAjrjtZ7l861NHxQo3zNBf4Y9UC74bLPLyXE/xqM?=
 =?us-ascii?q?LXDhsjPwOoxObnDc131pkCVmKXHq+ZLKTSvEeI5u01IumMeJUauDHnJ/gl+v7h?=
 =?us-ascii?q?l3k5mVAGcKmt3JsXbm24H/t8L0WYZ3rsnskOEWMQsgUiS+zqjUWIUSRPaHaqQ6?=
 =?us-ascii?q?I8+jY7BZqkDYfEWI+hmr+B3CC9Hp1QYWBLEVSMEXbud4WZVPYAciOSIsl9kjMa?=
 =?us-ascii?q?UbitUZMu1RartAXi0bpoMvLU+jEEtZLkzNV6/fbTlRE19Tx3FcidyXuCT2Nvk2?=
 =?us-ascii?q?MMRj822r1/oENnxleC16h4n+JXFdhJ6/xVVQc6MIbWz/ZmBNDqRgLBYtCJRU6l?=
 =?us-ascii?q?Qtq8BzE9VNYxw94UbEZ7FNWvlRTD3yusA78ImL2HHp008qTA33fvI8Zx0WrJ1K?=
 =?us-ascii?q?4kj1M+WMtAKXWmhrJj9wjUH4PGjl+Wl7i0eqgG3C7C7mGDzXGQs0FeVwJwVabF?=
 =?us-ascii?q?XXUbZkbNqdT550XCT6KhCLg9MwtBz9KCJbVOatHzkVpGQ/LjMszEY22tg2ewGQ?=
 =?us-ascii?q?qIxrSUYYX3YWodwjvSBFIEkw8J+3aGLhYxBiG6rmLaDTxuE0/vYkz2/el/rnO7?=
 =?us-ascii?q?UlE7zwWQY0J90Lq1/wYfheaARPMLwrIEpCAhpi1oHFa82tLWDMaApwphfalGfd?=
 =?us-ascii?q?Mx+lBH1Xjdtwx8OJygILtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic7TZ2lXA39eZ5KgO6O40pE7+vA60DEUi9XZn095L03?=
 =?us-ascii?q?aH4pXKDQwSUY/+U0ot9hh6oa3abTc554/OyXJsNqy0uCfY2901HOsl1gqgf9BH?=
 =?us-ascii?q?PaKECQ/+CdEVC9KvKewqgVepaB0EMftW9K41OcOmavSH1LSqPOZmgDKpk2BH7J?=
 =?us-ascii?q?ph3UKL8ip2UvTI0Iodw/GEwguHUC/xjE2gss/rg49EfywdHm2lxSjiGoFRfKxy?=
 =?us-ascii?q?cZ8XBmi0J82428txh4TqW35e71OjA1IG2Mm0eRuddVD93AtQ1VgJrnyjgye30z?=
 =?us-ascii?q?t0kzQxpKqFwCPO2/jidAYAOmNTRGhijE3gIIiug9ABQUioaRMklB+k5Ub82qha?=
 =?us-ascii?q?q75zL2jVQUdUYSf2K3tuXbe3trqHe8RP8o8nsT1LUOSgZlCXUrz9rAEA0yPgHG?=
 =?us-ascii?q?tewyo3dyqwtZX6nBx6iWSdI2h1rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIKAriS74ndmAR++n/C1gdDnFQk60Snm19?=
 =?us-ascii?q?hlTynIrRD8YpX12KS+K+5oYk5oBFrk4cpgBo5+ipcwhI0X2XUChZWa53sHnX3z?=
 =?us-ascii?q?MdVGw63+anUNSCUPw97U5gjlxUJiImiIx4L/SnWS3M9ha8OmbWMR3yI399pKB7?=
 =?us-ascii?q?uM7LxYgSt1pUK1rQfQYfh+hDgR0/Uv52ABg+EVpgUt1D6SDa4IHUlXJiHskxWI?=
 =?us-ascii?q?79ajrKRYfmqvcL6w1FZgktClFr2NvgZcWHPhcJc4ASBw9tl/ME7L0HDr9oHkf9?=
 =?us-ascii?q?zQYcgStxKOlRfAkvNVKIkwlvcRgSpnOGT9vWAqyuIhjBxu2426s5aDK2l34K25?=
 =?us-ascii?q?BRtYPCXvZ8wP4jHtkbpensGO0o+0BJphHTELXIbyQfKsDTIfrvDnNweIED0hpX?=
 =?us-ascii?q?aXA7vfHQmD6Eh4q3LDCYykN3aSJHMB19VtWAGdJFBDgAATRDg6nIQ2FgW0y8z6?=
 =?us-ascii?q?akt5+iod5l3lqhtP1+JoMQPwUnzEqQesazc0ToWfLRVM4gFD4UfVLdKR7uZpEy?=
 =?us-ascii?q?5E+Z2hqRSHKnaHaARQEWEJRkuECkjjP7mp+NnA6vWYCfC4L/fUerWOrupeV/iT?=
 =?us-ascii?q?yJKr04tm+SuMN8qVMnljCf07xlRMXXRjF8vFnDUPTjQdlzjRYM6DuBe85ip3o9?=
 =?us-ascii?q?i/8Pv1WQLv5oiPC7pIPdVs4RC2hqiDOPCKhCZkMjZVzZcMxX7OyLgC018ekSBu?=
 =?us-ascii?q?dz+xEbsesS7BVr7fmqhSDxQDcSN8KNNI774g3glKIcPUkM712aVijvErC1ZJT1?=
 =?us-ascii?q?jhmsCyaMwOImG9Mk7HBUmROLSHIz3L39/4YaemRbJMi+VUsgW6uSyHHE/7IjSD?=
 =?us-ascii?q?iz7pWgizMeFNiSGXJgBRtJuhfRZtF2fjSsnrahm6MN9xkD03zqc4hnLMNW4ALz?=
 =?us-ascii?q?d8d1lBoaGX7SNdmv9/AXBO7mJ5LemYnCaU9+nZJYwQsftuAyR0kfpV4XU6y7RP?=
 =?us-ascii?q?6iFES+d4mC/Trt5ovlGnnfODyjthUBpStDlLgJiHslllOaXcpdF8XiOQ8BsT4G?=
 =?us-ascii?q?C4Bx0Uqt5hDdPz/aZd1o6curj0LWJ5+tbV+YM5CsjIIYrTK3MlMB6vHTPUEAIt?=
 =?us-ascii?q?TSOiKmzewUdalafBpTWuspEmp820y9I1QbhBWQltGw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACzuPZbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCowGjAGCDRSXJoFzLBMBiFIiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKS+CNiKCZQMDAQIkTQUGCQEBHzEDVAYOBQWDHIICBapxM4omh16EK4FXP?=
 =?us-ascii?q?458AokfgXKUcQcCghwEjwQLGJEImXaCDTMaI4M8gicXjhw/AQExgQQBAQEOiye?=
 =?us-ascii?q?BHwEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAACzuPZbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCowGjAGCDRSXJoFzLBMBiFIiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiKCZ?=
 =?us-ascii?q?QMDAQIkTQUGCQEBHzEDVAYOBQWDHIICBapxM4omh16EK4FXP458AokfgXKUcQc?=
 =?us-ascii?q?CghwEjwQLGJEImXaCDTMaI4M8gicXjhw/AQExgQQBAQEOiyeBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="139217957"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 06:11:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404034AbeKWAvD (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 19:51:03 -0500
Received: from szxga07-in.huawei.com ([45.249.212.35]:52160 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2391991AbeKWAvB (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 19:51:01 -0500
Received: from DGGEMS410-HUB.china.huawei.com (unknown [172.30.72.60])
        by Forcepoint Email with ESMTP id D2A6D84260160;
        Thu, 22 Nov 2018 22:11:23 +0800 (CST)
Received: from S00293818-DELL1.china.huawei.com (10.202.226.54) by
 DGGEMS410-HUB.china.huawei.com (10.3.19.210) with Microsoft SMTP Server id
 14.3.408.0; Thu, 22 Nov 2018 22:11:15 +0800
From: Salil Mehta <salil.mehta@huawei.com>
To: <davem@davemloft.net>
CC: <salil.mehta@huawei.com>, <yisen.zhuang@huawei.com>,
        <lipeng321@huawei.com>, <mehta.salil@opnsrc.net>,
        <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <linuxarm@huawei.com>, liuzhongzhu <liuzhongzhu@huawei.com>
Subject: [PATCH V2 net-next 8/8] net: hns3: Add "qos buffer" config info query function
Date: Thu, 22 Nov 2018 14:09:48 +0000
Message-ID: <20181122140948.23504-9-salil.mehta@huawei.com>
X-Mailer: git-send-email 2.8.3
In-Reply-To: <20181122140948.23504-1-salil.mehta@huawei.com>
References: <20181122140948.23504-1-salil.mehta@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.202.226.54]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: liuzhongzhu <liuzhongzhu@huawei.com>

This patch prints qos buffer config information.

debugfs command:
echo dump qos buf cfg > cmd

Sample Command:
root@(none)# echo dump qos buf cfg > cmd
hns3 0000:7d:00.0: dump qos buf cfg
hns3 0000:7d:00.0: tx_packet_buf_tc_0: 0x1aa
hns3 0000:7d:00.0: tx_packet_buf_tc_1: 0x0
hns3 0000:7d:00.0: tx_packet_buf_tc_2: 0x0
hns3 0000:7d:00.0: tx_packet_buf_tc_3: 0x0
hns3 0000:7d:00.0: tx_packet_buf_tc_4: 0x0
hns3 0000:7d:00.0: tx_packet_buf_tc_5: 0x0
hns3 0000:7d:00.0: tx_packet_buf_tc_6: 0x0
hns3 0000:7d:00.0: tx_packet_buf_tc_7: 0x0
hns3 0000:7d:00.0:
hns3 0000:7d:00.0: rx_packet_buf_tc_0: 0x130
hns3 0000:7d:00.0: rx_packet_buf_tc_1: 0x0
hns3 0000:7d:00.0: rx_packet_buf_tc_2: 0x0
hns3 0000:7d:00.0: rx_packet_buf_tc_3: 0x0
hns3 0000:7d:00.0: rx_packet_buf_tc_4: 0x0
hns3 0000:7d:00.0: rx_packet_buf_tc_5: 0x0
hns3 0000:7d:00.0: rx_packet_buf_tc_6: 0x0
hns3 0000:7d:00.0: rx_packet_buf_tc_7: 0x0
hns3 0000:7d:00.0: rx_share_buf: 0x1e0e
root@(none)#

Signed-off-by: liuzhongzhu <liuzhongzhu@huawei.com>
Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
---
 drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c |   1 +
 .../ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c | 115 +++++++++++++++++++++
 2 files changed, 116 insertions(+)

diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c b/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
index ce284c8..86d667a 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3_debugfs.c
@@ -134,6 +134,7 @@ static void hns3_dbg_help(struct hnae3_handle *h)
 	dev_info(&h->pdev->dev, "dump tm\n");
 	dev_info(&h->pdev->dev, "dump qos pause cfg\n");
 	dev_info(&h->pdev->dev, "dump qos pri map\n");
+	dev_info(&h->pdev->dev, "dump qos buf cfg\n");
 }
 
 static ssize_t hns3_dbg_cmd_read(struct file *filp, char __user *buffer,
diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
index 477acf7..14577bb 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_debugfs.c
@@ -294,6 +294,119 @@ static void hclge_dbg_dump_qos_pri_map(struct hclge_dev *hdev)
 	dev_info(&hdev->pdev->dev, "pri_7_to_tc: 0x%x\n", pri_map->pri7_tc);
 }
 
+static void hclge_dbg_dump_qos_buf_cfg(struct hclge_dev *hdev)
+{
+	struct hclge_tx_buff_alloc_cmd *tx_buf_cmd;
+	struct hclge_rx_priv_buff_cmd *rx_buf_cmd;
+	struct hclge_rx_priv_wl_buf *rx_priv_wl;
+	struct hclge_rx_com_wl *rx_packet_cnt;
+	struct hclge_rx_com_thrd *rx_com_thrd;
+	struct hclge_rx_com_wl *rx_com_wl;
+	enum hclge_opcode_type cmd;
+	struct hclge_desc desc[2];
+	int i, ret;
+
+	cmd = HCLGE_OPC_TX_BUFF_ALLOC;
+	hclge_cmd_setup_basic_desc(desc, cmd, true);
+	ret = hclge_cmd_send(&hdev->hw, desc, 1);
+	if (ret)
+		goto err_qos_cmd_send;
+
+	dev_info(&hdev->pdev->dev, "dump qos buf cfg\n");
+
+	tx_buf_cmd = (struct hclge_tx_buff_alloc_cmd *)desc[0].data;
+	for (i = 0; i < HCLGE_TC_NUM; i++)
+		dev_info(&hdev->pdev->dev, "tx_packet_buf_tc_%d: 0x%x\n", i,
+			 tx_buf_cmd->tx_pkt_buff[i]);
+
+	cmd = HCLGE_OPC_RX_PRIV_BUFF_ALLOC;
+	hclge_cmd_setup_basic_desc(desc, cmd, true);
+	ret = hclge_cmd_send(&hdev->hw, desc, 1);
+	if (ret)
+		goto err_qos_cmd_send;
+
+	dev_info(&hdev->pdev->dev, "\n");
+	rx_buf_cmd = (struct hclge_rx_priv_buff_cmd *)desc[0].data;
+	for (i = 0; i < HCLGE_TC_NUM; i++)
+		dev_info(&hdev->pdev->dev, "rx_packet_buf_tc_%d: 0x%x\n", i,
+			 rx_buf_cmd->buf_num[i]);
+
+	dev_info(&hdev->pdev->dev, "rx_share_buf: 0x%x\n",
+		 rx_buf_cmd->shared_buf);
+
+	cmd = HCLGE_OPC_RX_PRIV_WL_ALLOC;
+	hclge_cmd_setup_basic_desc(&desc[0], cmd, true);
+	desc[0].flag |= cpu_to_le16(HCLGE_CMD_FLAG_NEXT);
+	hclge_cmd_setup_basic_desc(&desc[1], cmd, true);
+	ret = hclge_cmd_send(&hdev->hw, desc, 2);
+	if (ret)
+		goto err_qos_cmd_send;
+
+	dev_info(&hdev->pdev->dev, "\n");
+	rx_priv_wl = (struct hclge_rx_priv_wl_buf *)desc[0].data;
+	for (i = 0; i < HCLGE_TC_NUM_ONE_DESC; i++)
+		dev_info(&hdev->pdev->dev,
+			 "rx_priv_wl_tc_%d: high: 0x%x, low: 0x%x\n", i,
+			 rx_priv_wl->tc_wl[i].high, rx_priv_wl->tc_wl[i].low);
+
+	rx_priv_wl = (struct hclge_rx_priv_wl_buf *)desc[1].data;
+	for (i = 0; i < HCLGE_TC_NUM_ONE_DESC; i++)
+		dev_info(&hdev->pdev->dev,
+			 "rx_priv_wl_tc_%d: high: 0x%x, low: 0x%x\n", i + 4,
+			 rx_priv_wl->tc_wl[i].high, rx_priv_wl->tc_wl[i].low);
+
+	cmd = HCLGE_OPC_RX_COM_THRD_ALLOC;
+	hclge_cmd_setup_basic_desc(&desc[0], cmd, true);
+	desc[0].flag |= cpu_to_le16(HCLGE_CMD_FLAG_NEXT);
+	hclge_cmd_setup_basic_desc(&desc[1], cmd, true);
+	ret = hclge_cmd_send(&hdev->hw, desc, 2);
+	if (ret)
+		goto err_qos_cmd_send;
+
+	dev_info(&hdev->pdev->dev, "\n");
+	rx_com_thrd = (struct hclge_rx_com_thrd *)desc[0].data;
+	for (i = 0; i < HCLGE_TC_NUM_ONE_DESC; i++)
+		dev_info(&hdev->pdev->dev,
+			 "rx_com_thrd_tc_%d: high: 0x%x, low: 0x%x\n", i,
+			 rx_com_thrd->com_thrd[i].high,
+			 rx_com_thrd->com_thrd[i].low);
+
+	rx_com_thrd = (struct hclge_rx_com_thrd *)desc[1].data;
+	for (i = 0; i < HCLGE_TC_NUM_ONE_DESC; i++)
+		dev_info(&hdev->pdev->dev,
+			 "rx_com_thrd_tc_%d: high: 0x%x, low: 0x%x\n", i + 4,
+			 rx_com_thrd->com_thrd[i].high,
+			 rx_com_thrd->com_thrd[i].low);
+
+	cmd = HCLGE_OPC_RX_COM_WL_ALLOC;
+	hclge_cmd_setup_basic_desc(desc, cmd, true);
+	ret = hclge_cmd_send(&hdev->hw, desc, 1);
+	if (ret)
+		goto err_qos_cmd_send;
+
+	rx_com_wl = (struct hclge_rx_com_wl *)desc[0].data;
+	dev_info(&hdev->pdev->dev, "\n");
+	dev_info(&hdev->pdev->dev, "rx_com_wl: high: 0x%x, low: 0x%x\n",
+		 rx_com_wl->com_wl.high, rx_com_wl->com_wl.low);
+
+	cmd = HCLGE_OPC_RX_GBL_PKT_CNT;
+	hclge_cmd_setup_basic_desc(desc, cmd, true);
+	ret = hclge_cmd_send(&hdev->hw, desc, 1);
+	if (ret)
+		goto err_qos_cmd_send;
+
+	rx_packet_cnt = (struct hclge_rx_com_wl *)desc[0].data;
+	dev_info(&hdev->pdev->dev,
+		 "rx_global_packet_cnt: high: 0x%x, low: 0x%x\n",
+		 rx_packet_cnt->com_wl.high, rx_packet_cnt->com_wl.low);
+
+	return;
+
+err_qos_cmd_send:
+	dev_err(&hdev->pdev->dev,
+		"dump qos buf cfg fail(0x%x), status is %d\n", cmd, ret);
+}
+
 static void hclge_dbg_fd_tcam_read(struct hclge_dev *hdev, u8 stage,
 				   bool sel_x, u32 loc)
 {
@@ -363,6 +476,8 @@ int hclge_dbg_run_cmd(struct hnae3_handle *handle, char *cmd_buf)
 		hclge_dbg_dump_qos_pause_cfg(hdev);
 	} else if (strncmp(cmd_buf, "dump qos pri map", 16) == 0) {
 		hclge_dbg_dump_qos_pri_map(hdev);
+	} else if (strncmp(cmd_buf, "dump qos buf cfg", 16) == 0) {
+		hclge_dbg_dump_qos_buf_cfg(hdev);
 	} else {
 		dev_info(&hdev->pdev->dev, "unknown command\n");
 		return -EINVAL;
-- 
2.7.4


