Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:51:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 853DB5803E4;
	Fri,  7 Dec 2018 08:50:13 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 08:50:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtRy1IBWEPCOslsNnvhD4HM36ojXV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE2z/gtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe25wrTGwivZb/NZxzj29YfGfgo8qv+OR71wdc7RyEkpFw/Lk16d?=
 =?us-ascii?q?rpflMC2P1uQCrWeW9OpgWviri24jqwBxpCKjydsrionMn48YzE3P+yt+wIYwP9?=
 =?us-ascii?q?K4SUh7bManEJROrSGaMZV5Qsc4T2FvoiY6xbsLsoO4cigS0Jkr2QLTZvidf4SV?=
 =?us-ascii?q?7B/vSvydLSp7iX55Yr6yhhS//VC9xuD+VcS4yldHoyRfntTNt30BzRze58aBR/?=
 =?us-ascii?q?Bg5EmuwyyP2BrW6uxcIUA7i67bK5k5z74umZocr17DEjX1mErolq+WcFsr+uyy?=
 =?us-ascii?q?5+TgeLXmqYeQN45yig7gLqQjgtKzDfg8PwQUQmSW9/qw2Kf+8UD6XLlGlPw7n6?=
 =?us-ascii?q?vBvJDfP8sbp6q5AwFP0oYk7hayFzOm0NUenXkaI1NJYRGHgJbzO1HIPv/4Ce6z?=
 =?us-ascii?q?g1OikTdt2f/GJKbsAovCLnfdirftZ7V95FBGyAo1099f44hYCrYbIPL8QkPxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENF91oIdWW2RGKOYP77SvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JsdcGq4Eeh+I0WFfXrshc8MEWcQsQo/UOzlklqCXSRTZ3avRa?=
 =?us-ascii?q?084D47BZmiDYfCQICtnbOA0D26Hp1QemBJFFSMHW30eIWDXvcGcDiSLdN5kjwY?=
 =?us-ascii?q?SbihTJcs1ROptADk0bZnLe3U+isetZLkz9V14+zTlRcv9T17Fcid0meNT31qkW?=
 =?us-ascii?q?MMXTM5wKd/oUllwFeZzad4m+BYFcBU5/5RSAg6Lp7cz+t5C9zoQALOZNWJRU2i?=
 =?us-ascii?q?QtWnBzExU90wz8UPY0Z7B9WtkBTD0zC2DL8SkryBHIY0/b7E33jtO8Z9zG7L1K?=
 =?us-ascii?q?o7gFkgWMdPMWymibR59wjcHIPJl0SZl6C3daUTxiLN9WGDzXaQs0FcSgJ/TaLF?=
 =?us-ascii?q?XXUHbEvMsdv5/l/CT6OpCbk/LwRO09CCJbVQZt3pl1pGQuzjN8rYY262n2ewBh?=
 =?us-ascii?q?OIxreXYYruemUd2jjdCUcenwAS+3aGKRYxBiO7r23CCzxuEErlY1nw/ulmtHO7?=
 =?us-ascii?q?Ukg0whmXYEJ7ybq65AQZhfyGRPMVxbILpiEhpi5wHFa82dLWFtWBqxBgfKVafd?=
 =?us-ascii?q?My/lNH2XjFuAx6O5yqN7piiUIGcwRro0Pu0A16CplBkcgvq3Mq0ApyKKKC3FNd?=
 =?us-ascii?q?bT+Y2orwOrnWKmn08xCicKrW2lDY0NaL9aYD8vU4q1P/vA63Ekou6Wlo095Q03?=
 =?us-ascii?q?GE/JXFEBISUY7tUkYw7xV1vbXabTcy5ozK1XxgK7K7siLf1N0zAuslyRGgf8lE?=
 =?us-ascii?q?PaOAFQ/yFdAaBse0JOwrnVipcgwLPORI+KEoOMOmcuOM2LS3M+Z4gDKmkWNH7Z?=
 =?us-ascii?q?h900KR7SZzVvTE3pcFw/6C2AuHWCzxjFOgssDxhIBFaiseHmu5ySj4GoFRYrd+?=
 =?us-ascii?q?cpoMCWerO8e33Mlxh4bxW35E816uH0kG2M61dhWIdVzywApQ2V4RoXO5gyu4zi?=
 =?us-ascii?q?V4nC0zoaqbwSPB3f7idB0BOmNQQGlijFHsIZW7jtwAXUioaRQpmwWh5Urg26db?=
 =?us-ascii?q?o6F/JXHJQUhUZyj2M31iUqyou7uCYs5D8pMpvT9MUOShZ1CXUbr9oxoc0yP+EG?=
 =?us-ascii?q?pS3jE7dze2uprnmxx2kn6SLHF2rHDBY8F/2Q/f5MDARf5WxjcGRjN3iSPUBli/?=
 =?us-ascii?q?ONml586UmI3AsuC9VmKhUINccS/wwIOEtSu743BqABKlk/CynN3nDRY10Svh29?=
 =?us-ascii?q?Z2UiXIqQ72YpP32KSiLeJnYk5oCUf86sVgHYFyiIkwhJAW2XUBgpWV/HwHkXr8?=
 =?us-ascii?q?MNlB2KL+amYNSiAPw9LP/Afl30hjJGqTx43lTnWd3tdhZ96ib2MVwC097tpGCK?=
 =?us-ascii?q?eJ7LNemyt1rUG1rQbQYfh7gzccxuEi6H8cg+EVpgUtyj+RDawVHUldJSbsjQiH?=
 =?us-ascii?q?78iirKVLY2aiab2w1Et9nd+7Fr2DrB9TWG3lepg8By9/9dtwMEjD0HDo7oHked?=
 =?us-ascii?q?/Qbc8ctxGOkhfAifRVJ4w1lvYQmSVnPmf9t2U/y+EnlRxuwY26vI+fJmVx+6K5?=
 =?us-ascii?q?BwRUNzzvaMMV5zHtlr1enseN0oCrH5VhHCgLXZTyQfKpFjISqeroNwKUHDIgrX?=
 =?us-ascii?q?ebHKLVHRWD50d+s3LPD5erOmmMK3YDytViQASdKFZbgAAJRzg6mp85Fga3xM3u?=
 =?us-ascii?q?akt55zYR5kLmpRtI0O5nKx7/UmLHrgeydjg0UISfLAZR7gxa5UfaK8me4fxoHy?=
 =?us-ascii?q?1C4p2ttg+NKnGYZwRVC2EGQFeECkvnPrmv49nA7ueZCvC/L/vIfbWBt+heW+2U?=
 =?us-ascii?q?ypKo14ts5yyMOdmXPnl+E/073VJOXHB+G8TEgjUPVjYYlyTXY86Aoxe8/CJ3o9?=
 =?us-ascii?q?u78PTqXgLv+ISOB6FTMdVp5xC5n6ODO/SMiyZ+LDZSzokMymPQyLgDwF4SjDlj?=
 =?us-ascii?q?dzmzHrQBti7NT6PQlrVUDx4BbCNzO9VH77gh3glWIsPbjtL11rhljv86EVtFVF?=
 =?us-ascii?q?rhmt23aswOOW2yKFTHBEOTPrScOTLL2933Yb+7SbBIlupUqga/uSyFHE7jJDiD?=
 =?us-ascii?q?kzjpWgurMeFNiiGbIRNftJu8chZrFWjsUtbmZgenP99wiD082ac0iW/SNW4ALT?=
 =?us-ascii?q?h8dFtArqGR7SNdmPlwB3ZN4WZlLeaanSaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXrtR2uVGpjvGPyiZ7UBpJsjtKhJiEvUNnOaXY8JlPQXfF/BIX4m?=
 =?us-ascii?q?WWBBQHvN9lCtzpu6BNxdnDjqPzKDFe893K+csQHdTbKMWCMClpDR28Mz7ODRAZ?=
 =?us-ascii?q?TDetfUvFjlFbnevaonaVtJkhtpnlnrIEULZGUlEvUPIdXBdLBtsHdd1MUykrnP?=
 =?us-ascii?q?a2yoYo7H66vR+bDJFBs4rIW9qSCPHrOTDfhr5BMUhbiYjkJJgeY9Wok3dpbUN3?=
 =?us-ascii?q?ycGTQxLd?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAACfowpch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGCaUs3J5gkgg0UaIMPjkqGbSwDEAGHXSI3Bg0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTPwUBCQEBChgJExIDD?=
 =?us-ascii?q?AUYMRMFFoMGAYF5CAQBplUzii6MIhEGgUA/gRGCXTWINoImAoklDoF0hRCQMAc?=
 =?us-ascii?q?CAocEijoLGIIpjw8smkuBd3AVgycJgh4XiF6FXiAzgQUBAYplAQE?=
X-IPAS-Result: =?us-ascii?q?A0AHAACfowpch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGCaUs3J5gkgg0UaIMPjkqGbSwDEAGHXSI3Bg0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTPwUBCQEBChgJExIDDAUYMRMFFoMGAYF?=
 =?us-ascii?q?5CAQBplUzii6MIhEGgUA/gRGCXTWINoImAoklDoF0hRCQMAcCAocEijoLGIIpj?=
 =?us-ascii?q?w8smkuBd3AVgycJgh4XiF6FXiAzgQUBAYplAQE?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="44032661"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 08:49:34 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726139AbeLGQtc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 11:49:32 -0500
Received: from mail.hallyn.com ([178.63.66.53]:40506 "EHLO mail.hallyn.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726018AbeLGQtb (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 11:49:31 -0500
Received: by mail.hallyn.com (Postfix, from userid 1001)
        id 296CBDE8; Fri,  7 Dec 2018 10:49:28 -0600 (CST)
Date: Fri, 7 Dec 2018 10:49:28 -0600
From: "Serge E. Hallyn" <serge@hallyn.com>
To: Christian Brauner <christian@brauner.io>
Cc: Daniel Colascione <dancol@google.com>,
        "Serge E. Hallyn" <serge@hallyn.com>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Andy Lutomirski <luto@kernel.org>,
        Arnd Bergmann <arnd@arndb.de>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Aleksa Sarai <cyphar@cyphar.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS Devel <linux-fsdevel@vger.kernel.org>,
        Tim Murray <timmurray@google.com>,
        linux-man <linux-man@vger.kernel.org>,
        Kees Cook <keescook@chromium.org>,
        Florian Weimer <fweimer@redhat.com>, tglx@linutronix.de,
        x86@kernel.org
Subject: Re: [PATCH v4] signal: add taskfd_send_signal() syscall
Message-ID: <20181207164928.GB972@mail.hallyn.com>
References: <871s6u9z6u.fsf@xmission.com>
 <20181206213152.gvci7ijr3dokew7w@brauner.io>
 <87o99y72gi.fsf@xmission.com>
 <20181206223948.gyfdtkgbhtozmpsp@brauner.io>
 <20181206231742.xxi4ghn24z4h2qki@brauner.io>
 <20181207003124.GA11160@mail.hallyn.com>
 <CAKOZuevgF7ObKcVvu-iuNK3xLMX2Ze_S+adBEGNZCdfXRibh1A@mail.gmail.com>
 <20181207005917.GA11302@mail.hallyn.com>
 <CAKOZuesqmPvYoibx3MvVj86EMWRRW4My=7n6iiiBJa+MXo-GJA@mail.gmail.com>
 <20181207015423.4miorx43l3qhppfz@brauner.io>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181207015423.4miorx43l3qhppfz@brauner.io>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 07, 2018 at 02:54:25AM +0100, Christian Brauner wrote:
> On Thu, Dec 06, 2018 at 05:39:18PM -0800, Daniel Colascione wrote:
> > On Thu, Dec 6, 2018 at 4:59 PM Serge E. Hallyn <serge@hallyn.com> wrote:
> > >
> > > On Thu, Dec 06, 2018 at 04:34:54PM -0800, Daniel Colascione wrote:
> > > > On Thu, Dec 6, 2018 at 4:31 PM Serge E. Hallyn <serge@hallyn.com> wrote:
> > > > >
> > > > > On Fri, Dec 07, 2018 at 12:17:45AM +0100, Christian Brauner wrote:
> > > > > > On Thu, Dec 06, 2018 at 11:39:48PM +0100, Christian Brauner wrote:
> > > > > > > On Thu, Dec 06, 2018 at 03:46:53PM -0600, Eric W. Biederman wrote:
> > > > > > > > Christian Brauner <christian@brauner.io> writes:
> > > > > > > >
> > > > > > > > >> Your intention is to add the thread case to support pthreads once the
> > > > > > > > >> process case is sorted out.  So this is something that needs to be made
> > > > > > > > >> clear.  Did I miss how you plan to handle threads?
> > > > > > > > >
> > > > > > > > > Yeah, maybe you missed it in the commit message [2] which is based on a
> > > > > > > > > discussion with Andy [3] and Arnd [4]:
> > > > > > > >
> > > > > > > > Looking at your references I haven't missed it.  You are not deciding
> > > > > > > > anything as of yet to keep it simple.  Except you are returning
> > > > > > > > EOPNOTSUPP.  You are very much intending to do something.
> > > > > > >
> > > > > > > That was clear all along and was pointed at every occassion in the
> > > > > > > threads. I even went through the hazzle to give you all of the
> > > > > > > references when there's lore.kernel.org.
> > > > > > >
> > > > > > > >
> > > > > > > > Decide.  Do you use the flags parameter or is the width of the
> > > > > > > > target depending on the flags.
> > > > > >
> > > > > > Ok, let's try to be constructive. I understand the general concern for
> > > > > > the future so let's put a contract into the commit message stating that
> > > > > > the width of the target aka *what is signaled* will be based on a flag
> > > > > > parameter if we ever extend it:
> > > > > >
> > > > > > taskfd_send_signal(fd, SIGSTOP, NULL, TASKFD_PGID);
> > > > > > taskfd_send_signal(fd, SIGSTOP, NULL, TASKFD_TID);
> > > > > >
> > > > > > with the current default being
> > > > > >
> > > > > > taskfd_send_signal(fd, SIGSTOP, NULL, TASKFD_PID);
> > > > > >
> > > > > > This seems to me the cleanest solution as we only use one type of file
> > > > > > descriptor. Can everyone be on board with this? If so I'm going to send
> > > > > > out a new version of the patch.
> > > > > >
> > > > > > Christian
> > > > >
> > > > > I'm on board with this, but I think you need to also clarify what exactly
> > > > > the fd stands for.  I think that (a) userspace should not have to care
> > > > > about the struct pid implementation, and so (b) the procfd should stand
> > > > > for all the pids.  So when taskfd_send_signal(fd, SIGSTOP, NULL, TASKFD_PGID)
> > > > > becomes implemented, then open(/proc/5) will pin all three pids, as will
> > > > > open(/proc/5/task/6).
> > > >
> > > > This change doesn't "pin" any PID, and it makes no sense to make a
> > > > process FD stand for all its threads. What does that even mean?
> > >
> > > Currently the patch relies on the procfd inode saving a copy to the PIDTYPE_PID
> > > pid.
> > 
> > struct pid doesn't have a type field. The interpretation depends on
> > the caller's use of the struct pid, and in the current path, that's
> > PIDTYPE_PID. What, specifically, is wrong with the current approach?
> > 
> > > I'm not sure offhand, can it go to the PIDTYPE_PGID from that after the
> > > task has died, or not?   I didn't think so.  If it can then great.
> > 
> > You're arguing that something that does, in fact, work, is somehow
> > broken in some unspecified way. The kill_pid_info lookup works fine.
> > What, specifically, is wrong with the semantics as implemented?
> > 
> > > The point is (a) these are details which should not have to bother userspace,
> > 
> > These details *don't* bother userspace.
> > 
> > You're raising concerns that are either imaginary or long-since
> > addressed. Does the patch cause some kind of maintenance burden? No,
> > it doesn't, not moreso than any other piece of code. Does the
> > interface have unclear semantics? No, it clearly sends a signal to a
> > process, just like kill. Does the patch expose kernel implementation
> > details? No, it doesn't, because the interface is simply not defined
> > in terms of these details. Do we need to change how signal delivery
> > works? No, because if it's fine for kill, it's fine for this facility,
> > and if some future signal cleanup separates the cases more, that
> > cleanup can change this code as well.
> > 
> > The change is well-documented, simple, extensible, and addresses an
> > actual problem. Every legitimate technical criticism has now been
> > addressed. I don't understand where this opposition is coming from,
> > since the objections refer to nothing that's actually in the patch or
> > exposed to the user.
> > 
> > > and (b) how to decide who we're sending the signal to (tid/pid/pgid) should
> > > be specified in precisely one way.  So either a flag, or comign from the type
> > > of fd that was opened.
> > 
> > You can't send signals to a thread with the current patch. There's no
> > ambiguity in providing zero ways to do something.
> 
> So Serge's point is not about changing the current patch. What he's

Right, I'm an ack on the patch.  As is no changes are needed.

> basically saying is: If we are expected to state how we were to extend
> this syscall in the future which Serge and I figured is currently Eric's
> only remaining objection then:
> - flags are a good way to go (I agree)
> - there's a concrete way how to do this by stashing the relevent struct
>   pids for PIDTYPE_PID, PIDTYPE_TGID, PIDTYPE_PGID in file->private_data
>   which can then be retrieved in taskfd_send_signal()
> There is not intent nor requirement to do this right now. What we have
> right now is fine for a start, I agree! But here's how we go forward if
> we ever need to! :)
> 
> Christian
