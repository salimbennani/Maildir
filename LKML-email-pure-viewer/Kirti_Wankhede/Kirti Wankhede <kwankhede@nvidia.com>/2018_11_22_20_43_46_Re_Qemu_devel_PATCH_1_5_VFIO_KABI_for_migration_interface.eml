Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:32:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B42C658037D
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 12:44:28 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 22 Nov 2018 12:44:28 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ANKZkvR8nnZQEW/9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+seIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfWS9PDIyz?=
 =?us-ascii?q?bYQPDvYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bE43uk7DQ3KwBAsEtAIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafNzDXDde9W2Tbg44fIaB8hp/KMXbJufsXM10YkCgTIjlae?=
 =?us-ascii?q?qIP/OTOV1eQNvHaG4OV+Tu+vjXAnqwBsrTiu3MggkJXGhoUQyl3d8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpE4FcuzyHO4Z1WM8uXW9ltSYgxrEbu5O3ZDUGxZY5yxLFdfCLb5KE?=
 =?us-ascii?q?7g/tWeqLLzp1gGppdKyiixuz60Ss1PPwW8qu3FpXsCZJj8PAu3EN2hHV98OJUO?=
 =?us-ascii?q?Fy/l271jaKzw3T6v9LIUQzlafDL54hw6UwloYIsUjZES/2nlj2gLWRdkU+9eik?=
 =?us-ascii?q?8+XnYrP4qZ+AL4J4lB3yP6c0lsCiHOg1MRICU3aV9Om8zrHv4E/0TK1PjvIsk6?=
 =?us-ascii?q?nZtJ7aJd4cpq68GwJVy5gs6xOiDzu/zdsXg2cHI0xBeB6elIfpPEzOIPbkAvih?=
 =?us-ascii?q?mFSglzNrx/HFPrL/GJnMIWXDna/lfbZ87U5c1QUywcpe55JSFrEOPvbzVlXtu9?=
 =?us-ascii?q?zfCx80KAq0w+HhCNVy0IMeRHiDAqiDMKPdqVOI/P4gI/GQZI8JvzbwM/wl5//t?=
 =?us-ascii?q?jXAng1MccrSp0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD4AL0u0RL?=
 =?us-ascii?q?82szEnFJq9X8CEQoG2nKfH2iC9EZtLIGdcBReJGHbscoyCHPAUdCOVJNQmizEB?=
 =?us-ascii?q?SP2tRpEs0UKTshTnwe9iJ+vQ5ipKrJ/myZ156vPekVQo+CVpAt+B+2eKSW5ygy?=
 =?us-ascii?q?UPXTBhx711o0F21gKe17NliedTD91Z6qB1VVJwGYSah8BzFdH+EivFd9HBZ1ei?=
 =?us-ascii?q?SNi8HXt5Gt4+wtsEblxhM8+vghDKw2yhBLpDxJKRA5lh0aPGw3m5GM97yHbL2K?=
 =?us-ascii?q?Rp21o5S81MNWCqi4Z56QnfBoePmEKcwfX5PZ8A1TLAoT/QhVGFu1tVBUspCf3I?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAQCfFPdbhxHrdtBigheBMYJiCoNvi?=
 =?us-ascii?q?HeLIYINlzqBcxQYFIhSIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2BQIDGgE?=
 =?us-ascii?q?GglsBAQEBAgEBAiAdAQEECikBAgIBAQIGAQEKGAICIgQCAgMBQxAGCwgFgxyBe?=
 =?us-ascii?q?ggBBKdlcIEvgnYBAQWCQ4RVCIELiWKBHBeBQD+BESeCa4gCgleJJTGGCDOPcwm?=
 =?us-ascii?q?RKQYYiWGHJ5gwgUaCDU0jgzyCJAMXg0qKWmqBB4peWIEfAQE?=
X-IPAS-Result: =?us-ascii?q?A0AeAQCfFPdbhxHrdtBigheBMYJiCoNviHeLIYINlzqBcxQ?=
 =?us-ascii?q?YFIhSIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2BQIDGgEGglsBAQEBAgEBA?=
 =?us-ascii?q?iAdAQEECikBAgIBAQIGAQEKGAICIgQCAgMBQxAGCwgFgxyBeggBBKdlcIEvgnY?=
 =?us-ascii?q?BAQWCQ4RVCIELiWKBHBeBQD+BESeCa4gCgleJJTGGCDOPcwmRKQYYiWGHJ5gwg?=
 =?us-ascii?q?UaCDU0jgzyCJAMXg0qKWmqBB4peWIEfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="41228927"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 12:44:27 -0800
Received: from localhost ([::1]:49255 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPvpr-0003M8-0z
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 15:44:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36173)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kwankhede@nvidia.com>) id 1gPvpY-0003M3-18
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 15:44:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kwankhede@nvidia.com>) id 1gPvpS-0007Zc-BD
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 15:44:07 -0500
Received: from hqemgate16.nvidia.com ([216.228.121.65]:10003)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kwankhede@nvidia.com>)
	id 1gPvpR-0007WC-0k
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 15:44:01 -0500
Received: from hqpgpgate102.nvidia.com (Not Verified[216.228.121.13]) by
	hqemgate16.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
	id <B5bf715160000>; Thu, 22 Nov 2018 12:44:07 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
	by hqpgpgate102.nvidia.com (PGP Universal service);
	Thu, 22 Nov 2018 12:43:58 -0800
X-PGP-Universal: processed;
	by hqpgpgate102.nvidia.com on Thu, 22 Nov 2018 12:43:58 -0800
Received: from [10.24.71.148] (172.20.13.39) by HQMAIL101.nvidia.com
	(172.20.187.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4;
	Thu, 22 Nov 2018 20:43:50 +0000
To: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
References: <1542746383-18288-1-git-send-email-kwankhede@nvidia.com>
	<1542746383-18288-2-git-send-email-kwankhede@nvidia.com>
	<20181122185417.GE2605@work-vm>
X-Nvconfidentiality: public
From: Kirti Wankhede <kwankhede@nvidia.com>
Message-ID: <b9602280-d465-479c-8f6c-9295089d5460@nvidia.com>
Date: Fri, 23 Nov 2018 02:13:46 +0530
MIME-Version: 1.0
In-Reply-To: <20181122185417.GE2605@work-vm>
X-Originating-IP: [172.20.13.39]
X-ClientProxiedBy: HQMAIL103.nvidia.com (172.20.187.11) To
	HQMAIL101.nvidia.com (172.20.187.10)
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
	t=1542919447; bh=XG9qy43Bx4EixbUjFbY5feMeSBv5IjO2nP+vqwbq+Vc=;
	h=X-PGP-Universal:Subject:To:CC:References:X-Nvconfidentiality:From:
	Message-ID:Date:MIME-Version:In-Reply-To:X-Originating-IP:
	X-ClientProxiedBy:Content-Type:Content-Language:
	Content-Transfer-Encoding;
	b=glysugiG8u2YOrPoiNaxP5lEvSQyaWQSxq1IA3S9/2LSLNA18n4+yMcPEjVj84nUd
	utUPm2VcLLx7644X7Y7RzihqTDyoD7pM3HUU5p3Vvra8BizmEibbPMT88DGYyM8DkO
	aoCBYEqHiZdQr7zRmeyW0u62LM/aYEuKshrWY1KRrKvDudxudM2pt0Sln6XNllcN88
	JeNjxrQCfFND6DqeYN4EPYlZqOgOBrLpiAlRxADfn23g04vYq/2b6a6mh6y/RxXu4l
	i9ikBZosjAT0ixFMYJNBaESsvRFSdfll1zA5bEZapLYzGc95qFoSPop9eVQqEKfZTF
	hF1Jbuua+jPZQ==
X-detected-operating-system: by eggs.gnu.org: Windows 7 or 8 [fuzzy]
X-Received-From: 216.228.121.65
Subject: Re: [Qemu-devel] [PATCH 1/5] VFIO KABI for migration interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Zhengxiao.zx@alibaba-inc.com, kevin.tian@intel.com, yi.l.liu@intel.com,
	cjia@nvidia.com, eskultet@redhat.com, ziye.yang@intel.com,
	cohuck@redhat.com, shuangtai.tst@alibaba-inc.com,
	qemu-devel@nongnu.org, zhi.a.wang@intel.com, mlevitsk@redhat.com,
	pasic@linux.ibm.com, aik@ozlabs.ru, alex.williamson@redhat.com,
	eauger@redhat.com, felipe@nutanix.com,
	jonathan.davies@nutanix.com, changpeng.liu@intel.com, Ken.Xue@amd.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 11/23/2018 12:24 AM, Dr. David Alan Gilbert wrote:
> * Kirti Wankhede (kwankhede@nvidia.com) wrote:
>> - Defined MIGRATION region type and sub-type.
>> - Defined VFIO device states during migration process.
>> - Defined vfio_device_migration_info structure which will be placed at 0th
>>   offset of migration region to get/set VFIO device related information.
>>   Defined actions and members of structure usage for each action:
>>     * To convey VFIO device state to be transitioned to.
>>     * To get pending bytes yet to be migrated for VFIO device
>>     * To ask driver to write data to migration region and return number of bytes
>>       written in the region
>>     * In migration resume path, user space app writes to migration region and
>>       communicates it to vendor driver.
>>     * Get bitmap of dirty pages from vendor driver from given start address
>>
>> Signed-off-by: Kirti Wankhede <kwankhede@nvidia.com>
>> Reviewed-by: Neo Jia <cjia@nvidia.com>
> 
> <snip>
> 
>> + * Action Get buffer:
>> + *      On this action, vendor driver should write data to migration region and
>> + *      return number of bytes written in the region.
>> + *      data.offset [output] : offset in the region from where data is written.
>> + *      data.size [output] : number of bytes written in migration buffer by
>> + *          vendor driver.
> 
> <snip>
> 
>> + */
>> +
>> +struct vfio_device_migration_info {
>> +        __u32 device_state;         /* VFIO device state */
>> +        struct {
>> +            __u64 precopy_only;
>> +            __u64 compatible;
>> +            __u64 postcopy_only;
>> +            __u64 threshold_size;
>> +        } pending;
>> +        struct {
>> +            __u64 offset;           /* offset */
>> +            __u64 size;             /* size */
>> +        } data;
> 
> I'm curious how the offsets/size work; how does the 
> kernel driver know the maximum size of state it's allowed to write?


Migration region looks like:
 ----------------------------------------------------------------------
|vfio_device_migration_info|    data section			      |	
|                          |     ///////////////////////////////////  |
 ----------------------------------------------------------------------
 ^			         ^                                 ^
 offset 0-trapped part         data.offset                     data.size


Kernel driver defines the size of migration region and tells VFIO user
space application (QEMU here) through VFIO_DEVICE_GET_REGION_INFO ioctl.
So kernel driver can calculate the size of data section. Then kernel
driver can have (data.size >= data section size) or (data.size < data
section size), hence VFIO user space application need to know data.size
to copy only relevant data.

> Why would it pick a none-0 offset into the output region?

Data section is always followed by vfio_device_migration_info structure
in the region, so data.offset will always be none-0.
Offset from where data is copied is decided by kernel driver, data
section can be trapped or mapped depending on how kernel driver defines
data section. If mmapped, then data.offset should be page aligned, where
as initial section which contain vfio_device_migration_info structure
might not end at offset which is page aligned.

Thanks,
Kirti

> Without having dug further these feel like i/o rather than just output;
> i.e. the calling process says 'put it at that offset and you've got size
> bytes' and the kernel replies with 'I did put it at offset and I wrote
> only this size bytes'
> 
> Dave
> 
>> +        struct {
>> +            __u64 start_addr;
>> +            __u64 total;
>> +            __u64 copied;
>> +        } dirty_pfns;
>> +} __attribute__((packed));
>> +
>>  /* -------- API for Type1 VFIO IOMMU -------- */
>>  
>>  /**
>> -- 
>> 2.7.0
>>
> --
> Dr. David Alan Gilbert / dgilbert@redhat.com / Manchester, UK
> 

