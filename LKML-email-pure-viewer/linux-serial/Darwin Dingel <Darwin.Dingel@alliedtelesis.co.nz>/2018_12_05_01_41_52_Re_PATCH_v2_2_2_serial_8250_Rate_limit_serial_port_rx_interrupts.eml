Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 14:28:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 38A6D580375;
	Tue,  4 Dec 2018 17:42:02 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 17:42:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ALP+vsxNqlonxBbr0e8El6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPv7pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzLisJ+j6xbrhCupx1jzIDbb46VL+J+c6HGcNMGXGpMRNpdWzBdDo+h?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YAowGxBROiBePuzD9Dm3H43aw80+QuDw7G2BErEtUAvn?=
 =?us-ascii?q?vOttX0OqYSUeavwKfGzDXDafxW1in56IXTaB8hpfWMXbNufsXM1UkgCQfFgUuL?=
 =?us-ascii?q?qYzkJDOZzPgCs2+B4+pmVOOikmgqoBxyrDi33soglJXFi4YPxlzZ+yh13pw5Kc?=
 =?us-ascii?q?C7RUJne9KpEZlduzmHO4dqWM8vTX9ktDwnxrEcpJK3YDAGyJo5yBPcd/CKdo2F?=
 =?us-ascii?q?7x3/WOuVPDh1gXxodbOxhxuy9EWtye7xW82w3VtPqidJjMfDu3ML2hfO8MaIUO?=
 =?us-ascii?q?F98V2k2TuX1wDc9OVEIUcsmKrFJJ4u3KQwmoAQsUvdBC/2nlv5jKuMekUj4Oio?=
 =?us-ascii?q?5PzrYrTgppCCK495kh/yPrgql8ClHOg1PBYCU3KG9em/yLHv50z0TbdSgv0ziK?=
 =?us-ascii?q?bZsZTaJcoBpq6+Bg9YyoIj6xe5Dze739UUhHoHI0xfeBKBkYfpP0jCIPf2DPe5?=
 =?us-ascii?q?nVusiixmx+7JPrL/GJXBNHvDn6n7fbZ79UFczBA/zddF55JbEr0BOu78WlfttN?=
 =?us-ascii?q?zECR80Kwi0w+fkCNpjzI8fVn+PD7SdMKPTt1+I++0uL/ONZI8TpDbyNfwl6+Ty?=
 =?us-ascii?q?gn8+nF8XZbOp0ocPaHCkAvRmJF2UYXr2jdcADWcFpA0+QPbqiF2fSzFTYXmyUr?=
 =?us-ascii?q?k45jE6DoKmEIjCSpqsgLyHwCe0AJlWanpaBVCLFHfib5+EVOsUaCKOPs9hlSQJ?=
 =?us-ascii?q?VbqmS4A/zx2utwj6y7xhLurT4SAYsZPj1N5o5+zcjx0y9Dp0D9iD3GGJVW17gm?=
 =?us-ascii?q?QIRzou1qBlvUN90kuD0bR/g/FAD9NT/PNJUgA5NZLG1ex1EdLyVxnFfteITlam?=
 =?us-ascii?q?X9qnDSswTtI3398BfUJ9F8++gRDE2iqgG6UVmKCTBJwo7qLc2GD8J8VnxHbAzq?=
 =?us-ascii?q?Uhi1gmTdFJNW2pnaN/8wnTB4jUk0SWjaqqdKIc3DLT+2eH12aBoEZYUAtoW6Xf?=
 =?us-ascii?q?QX8fflfWrcj+5k7aUrChE6onPRVbxc6CMKRKbMbpgktARPvkPNTeYGexm2OrCB?=
 =?us-ascii?q?aMx7OMapfqemoH0CXcDkgEjx4c/XKcOQciASehpnrUDCZyGlL3f0Ps7e5+pWum?=
 =?us-ascii?q?QUAu0QGFcVdt17qv9R4TnvyTVfUT06kAuCcgrTV0AVm808jXC9qGuwpuYqFcbc?=
 =?us-ascii?q?kh71dA0GLTrxZ9MYC4L6B+ml4edBx6v1/v1xVyDYVAjcgqrXMwwApuM66Y10lB?=
 =?us-ascii?q?dzeZ3ZD2Nb3aMW3y/BGpa67L1VDSyteW+qET6Psmr1Xvph2mFk0n839/ydlaz2?=
 =?us-ascii?q?Oc5onWDAoVSZ/+SEI3+AZ1pr7EYigx/Zjb1WBxPqautD/C2NUpBPU+xxakftdf?=
 =?us-ascii?q?Nr6EFQDoH80bAciuNPIlm1yzYh0YO+BS8bY+P9m6ePuexK6rIOFgkSqmjGRa+o?=
 =?us-ascii?q?xyzliA9it8SuHS2ZYFzOqV3g+GVzf6kVegvdr7mYFCZTEOAGW/zTLoC5JWZq13?=
 =?us-ascii?q?ZYwLE3uhI9WrxtVigJ7gQ2RY9F+/CFwcws+mZB2SY0b73QJOz0QXoGWrljeiwD?=
 =?us-ascii?q?xwjj4msLCf3CvIw+n5cBoHO2hLRHRtjFv2IIi0icwaU1asbwQziBSl4kP6zbBB?=
 =?us-ascii?q?pKtjN2nTXVtIfy/uImBiU6u8rLqDb9RU6JM1tyVaS+C8YVGcSr7grBoWySLjH2?=
 =?us-ascii?q?1CxD8lczGmoIn2nxt/iGiFNnZ8sGLZed1sxRfY/NHcR+Re3iAFRCl7jjnbHEO8?=
 =?us-ascii?q?MMOq/dWXlpfDtP6xV2S6W51XcCnry56AtSSh6W1rBx2/g+68mtn9HQcm1i/70s?=
 =?us-ascii?q?FgVT/Uoxbkfonry6O6PPpnf0ZyA1/w8ch6GoB4koYrgJEQ2H4ahoia/HYdkGfz?=
 =?us-ascii?q?N8lb1rz6bHYXWTELxNvV6hD/2EJ/NnKJ2575VnKFz8tifda6Y3ka2iIg789QDq?=
 =?us-ascii?q?eU46dJnS90olq+sALQbuJxnjYbyfsy9nEah/sFtxYqziWYGroSB1VXPTTwlxSU?=
 =?us-ascii?q?6NCztKBXZGescbeqzkZ/k86uDKqeog5CQnb2YYktHTV/7shkNFLM0Xvz6pzred?=
 =?us-ascii?q?XKbNITsAGUnAnEj+RPNJ0xkf8KjzJ9OW3hpX0l1/I7jRt20JGmu4iHLn9h/aOj?=
 =?us-ascii?q?DR5eKz31fNgT+jD2gKZan8aW2Z2vH5p7FjUKWpvoUeynEDYIufv7MAaOFSU2qm?=
 =?us-ascii?q?2HFrrHAQ+f9EBmomrUHJ+xMHGXIGQZwc9mRBmAP0FfhAEUXDMnnp82DAyqxcrh?=
 =?us-ascii?q?cFtn6TAV/FL3thxMyudwPRnlTmjfvBuoaiszSJWHLhpZ9ARC6FnOMcCE8uJ/BS?=
 =?us-ascii?q?JY/oCirAyQLGyUfR9IAHoNWkyFAVDjI7av6cPB8+ieGuqxMf/Oba+SpuxZUveC?=
 =?us-ascii?q?3Yiv3Zd+/zaQKsWPOWFvDv082kpeRHB5Bt7WmzMVRywMkCLNacGbqQy4+i12qM?=
 =?us-ascii?q?C/7fvqVBju5YuJF7tdL9Fv9wqqjqeEMu6anDx5JipA1pMQ2X/Iz6AS3F4MhCFv?=
 =?us-ascii?q?dDmtErUAuTTOTKLKna9XAAAUazluNMtT9K882ghNOcjGitL6zLJ4j/g1C0tbWl?=
 =?us-ascii?q?zlgM2mecsKI2SlPlPdGEmLLKiGJSHMw8zve6y8VKZfjP9KuBywozqbF07jMy+H?=
 =?us-ascii?q?lznoURCvLO5NgDuaPBxYpIGybBJtBXL/Q9Lhbx2xKMV3giEuwb0omnPKMnYRMS?=
 =?us-ascii?q?R9c0NItLGf8TlUjel/G2Nf6HpoNu2Emyef7+nFJZcaq/prAiJol+1E5HQ20ada?=
 =?us-ascii?q?7CZBRPZtgivdssZuo026kumI0jdmUABBqjBOhIKKu0VtIaTY9plaVnbC8xIA9m?=
 =?us-ascii?q?GQCxUMp9t4BdzjoaFQyt7TlK3tLDdO6c7b/cwZB5ucFMXSenMnPQDoCXjPDAYb?=
 =?us-ascii?q?Rj6mM2LYr0hcluyCsHyTspU+7JPrndBGHrZdWEY0B7UBCkl7F9wPJpRwdjcll6?=
 =?us-ascii?q?OLys8O+Xe66hLWQZMe9trITP+dAvXHLDefkKlKYAYOzbrkLIMVcIrh1AYqPlZg?=
 =?us-ascii?q?kYvJG2LUXNZQsiNmcwk4qVlM9344SXc8jQatIAG25HYZBNavgwU7zAB5ZK5loD?=
 =?us-ascii?q?X35149N3LRuTA91kI2nIOhyXqVcTjsPOKrUJtXAi7cqUc8KNX4ThxzYAn0mlZr?=
 =?us-ascii?q?fn+QQ7NXkqslbm1xiQbYkYVAFOQaTqBeZhIUg/aNaKN7/05br3CLzFVY5O2NJZ?=
 =?us-ascii?q?pkmwYuOcqApmhf2gQlQN8zKqHUDKNNylldir6DuiKz1/t3ywhYIVRbozDaQzIB?=
 =?us-ascii?q?pEFdbupuHCGv5OE5sQE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAB8LAdch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMII7JwqMCIwOgg0UhEaSb4FzFBgTAYRAgwwiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYigmQBAQEBAwECJBkBAREmAQUJAQEBAQgRBAEBCiUDDCMdC?=
 =?us-ascii?q?AIEAQ0FBYMcggEBAQSkNYFsM4J2AQEFhygIiwKBHIFXP4ERgmQuhEoRJoVbiS+?=
 =?us-ascii?q?GSpBRBwKCJI81gVuFEYo6iQaPcIFGgg0zGoNfghsMFxKIN4VUQTEBgQQBAYhVA?=
 =?us-ascii?q?QMigQiBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAAB8LAdch0O0hNFkHQEBBQEHBQGBUQgBCwGBMII7Jwq?=
 =?us-ascii?q?MCIwOgg0UhEaSb4FzFBgTAYRAgwwiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYigmQBAQEBAwECJBkBAREmAQUJAQEBAQgRBAEBCiUDDCMdCAIEAQ0FBYMcggE?=
 =?us-ascii?q?BAQSkNYFsM4J2AQEFhygIiwKBHIFXP4ERgmQuhEoRJoVbiS+GSpBRBwKCJI81g?=
 =?us-ascii?q?VuFEYo6iQaPcIFGgg0zGoNfghsMFxKIN4VUQTEBgQQBAYhVAQMigQiBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,316,1539673200"; 
   d="scan'208";a="54560865"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 17:42:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726788AbeLEBl5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 20:41:57 -0500
Received: from gate2.alliedtelesis.co.nz ([202.36.163.20]:58958 "EHLO
        gate2.alliedtelesis.co.nz" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725841AbeLEBl4 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 20:41:56 -0500
Received: from mmarshal3.atlnz.lc (mmarshal3.atlnz.lc [10.32.18.43])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (Client did not present a certificate)
        by gate2.alliedtelesis.co.nz (Postfix) with ESMTPS id DCD6E86CE8;
        Wed,  5 Dec 2018 14:41:53 +1300 (NZDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=alliedtelesis.co.nz;
        s=mail181024; t=1543974113;
        bh=jdiJ92Ea++W0GBPJUKe4Y9EqG0AIYeDfzWLhqy38Cu4=;
        h=From:To:CC:Subject:Date:References:In-Reply-To;
        b=SRkcwKeV902GmMEUWoGWGuuNw2tOAW4Q602AbaiuzV8HWuyj5MC5EuTvNfFrEFBPK
         Fp0JGq7TM0ApsGyUYcCI8iMR0KKHcBcfiaWFLywtplpRLBgX96MiCIHp4j8RAYwuG/
         fmrYy3eCny1V5QCsUszQkmIf8Y56lqrtnH7ey6S8ssfLIyYQDYQRgcokZ44fQj1I52
         pWRljaN13VkNtD/Cs7+A1p7yxcHIcQJ234Z+ws2EcytQJgwPx5O0v5/puCp2azDZTB
         Gdp4rd7AhRbhh8APNZSWoeQEnQBogWm5wofau4IlcUXwFcZWA0lKyJOnCoIJeEBv9o
         nRXax3GPrNGtQ==
Received: from svr-chch-ex1.atlnz.lc (Not Verified[10.32.16.77]) by mmarshal3.atlnz.lc with Trustwave SEG (v7,5,8,10121)
        id <B5c072ce20001>; Wed, 05 Dec 2018 14:41:54 +1300
Received: from svr-chch-ex1.atlnz.lc (2001:df5:b000:bc8::77) by
 svr-chch-ex1.atlnz.lc (2001:df5:b000:bc8::77) with Microsoft SMTP Server
 (TLS) id 15.0.1156.6; Wed, 5 Dec 2018 14:41:53 +1300
Received: from svr-chch-ex1.atlnz.lc ([fe80::409d:36f5:8899:92e8]) by
 svr-chch-ex1.atlnz.lc ([fe80::409d:36f5:8899:92e8%12]) with mapi id
 15.00.1156.000; Wed, 5 Dec 2018 14:41:53 +1300
From: Darwin Dingel <Darwin.Dingel@alliedtelesis.co.nz>
To: "andriy.shevchenko@linux.intel.com" 
        <andriy.shevchenko@linux.intel.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "jslaby@suse.com" <jslaby@suse.com>,
        "linux-serial@vger.kernel.org" <linux-serial@vger.kernel.org>
CC: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v2 2/2] serial: 8250: Rate limit serial port rx interrupts
 during input overruns
Thread-Topic: [PATCH v2 2/2] serial: 8250: Rate limit serial port rx
 interrupts during input overruns
Thread-Index: AQHUjDSbIf4nXQ+uvkiDMLQsOWdB36VvXi6p
Date: Wed, 5 Dec 2018 01:41:52 +0000
Message-ID: <1543974112674.96843@alliedtelesis.co.nz>
References: <20181205005058.14095-1-darwin.dingel@alliedtelesis.co.nz>,<20181205005058.14095-2-darwin.dingel@alliedtelesis.co.nz>
In-Reply-To: <20181205005058.14095-2-darwin.dingel@alliedtelesis.co.nz>
Accept-Language: en-NZ, en-US
Content-Language: en-NZ
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-exchange-transport-fromentityheader: Hosted
x-originating-ip: [10.32.1.10]
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

So sorry for the premature "Reviewed-by" bits on the commit messages on the=
 previous patches=0A=
submitted. Please ignore these while I fix the patch up for v3.=0A=
=0A=
=0A=
Regards,=0A=
Darwin=0A=
________________________________________=0A=
From: Darwin Dingel <darwin.dingel@alliedtelesis.co.nz>=0A=
Sent: Wednesday, 5 December 2018 1:50 p.m.=0A=
To: andriy.shevchenko@linux.intel.com; gregkh@linuxfoundation.org; jslaby@s=
use.com; linux-serial@vger.kernel.org=0A=
Cc: linux-kernel@vger.kernel.org; Darwin Dingel=0A=
Subject: [PATCH v2 2/2] serial: 8250: Rate limit serial port rx interrupts =
during input overruns=0A=
=0A=
When a serial port gets faulty or gets flooded with inputs, its interrupt=
=0A=
handler starts to work double time to get the characters to the workqueue=
=0A=
for the tty layer to handle them. When this busy time on the serial/tty=0A=
subsystem happens during boot, where it is also busy on the userspace=0A=
trying to initialise, some processes can continuously get preempted=0A=
and will be on hold until the interrupts subside.=0A=
=0A=
The fix is to backoff on processing received characters for a specified=0A=
amount of time when an input overrun is seen (received a new character=0A=
before the previous one is processed). This only stops receive and will=0A=
continue to transmit characters to serial port. After the backoff period=0A=
is done, it receive will be re-enabled. This is optional and will only=0A=
be enabled by setting 'overrun-throttle-ms' in the dts.=0A=
=0A=
Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>=0A=
Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>=0A=
Reviewed-by: Jiri Slaby <jslaby@suse.com>=0A=
Signed-off-by: Darwin Dingel <darwin.dingel@alliedtelesis.co.nz>=0A=
---=0A=
 drivers/tty/serial/8250/8250_core.c | 25 +++++++++++++++++++++++++=0A=
 drivers/tty/serial/8250/8250_fsl.c  | 23 ++++++++++++++++++++++-=0A=
 drivers/tty/serial/8250/8250_of.c   |  5 +++++=0A=
 include/linux/serial_8250.h         |  4 ++++=0A=
 4 files changed, 56 insertions(+), 1 deletion(-)=0A=
=0A=
diff --git a/drivers/tty/serial/8250/8250_core.c b/drivers/tty/serial/8250/=
8250_core.c=0A=
index 94f3e1c64490..189ab1212d9a 100644=0A=
--- a/drivers/tty/serial/8250/8250_core.c=0A=
+++ b/drivers/tty/serial/8250/8250_core.c=0A=
@@ -942,6 +942,21 @@ static struct uart_8250_port *serial8250_find_match_or=
_unused(struct uart_port *=0A=
        return NULL;=0A=
 }=0A=
=0A=
+static void serial_8250_overrun_backoff_work(struct work_struct *work)=0A=
+{=0A=
+       struct uart_8250_port *up =3D=0A=
+           container_of(to_delayed_work(work), struct uart_8250_port,=0A=
+                        overrun_backoff);=0A=
+       struct uart_port *port =3D &up->port;=0A=
+       unsigned long flags;=0A=
+=0A=
+       spin_lock_irqsave(&port->lock, flags);=0A=
+       up->ier |=3D UART_IER_RLSI | UART_IER_RDI;=0A=
+       up->port.read_status_mask |=3D UART_LSR_DR;=0A=
+       serial_out(up, UART_IER, up->ier);=0A=
+       spin_unlock_irqrestore(&port->lock, flags);=0A=
+}=0A=
+=0A=
 /**=0A=
  *     serial8250_register_8250_port - register a serial port=0A=
  *     @up: serial port template=0A=
@@ -1056,6 +1071,16 @@ int serial8250_register_8250_port(struct uart_8250_p=
ort *up)=0A=
                        ret =3D 0;=0A=
                }=0A=
        }=0A=
+=0A=
+       /* Initialise interrupt backoff work if required */=0A=
+       if (up->overrun_backoff_time_ms > 0) {=0A=
+               uart->overrun_backoff_time_ms =3D up->overrun_backoff_time_=
ms;=0A=
+               INIT_DELAYED_WORK(&uart->overrun_backoff,=0A=
+                                 serial_8250_overrun_backoff_work);=0A=
+       } else {=0A=
+               uart->overrun_backoff_time_ms =3D 0;=0A=
+       }=0A=
+=0A=
        mutex_unlock(&serial_mutex);=0A=
=0A=
        return ret;=0A=
diff --git a/drivers/tty/serial/8250/8250_fsl.c b/drivers/tty/serial/8250/8=
250_fsl.c=0A=
index 6640a4c7ddd1..bb9571eed275 100644=0A=
--- a/drivers/tty/serial/8250/8250_fsl.c=0A=
+++ b/drivers/tty/serial/8250/8250_fsl.c=0A=
@@ -45,8 +45,29 @@ int fsl8250_handle_irq(struct uart_port *port)=0A=
=0A=
        lsr =3D orig_lsr =3D up->port.serial_in(&up->port, UART_LSR);=0A=
=0A=
-       if (lsr & (UART_LSR_DR | UART_LSR_BI))=0A=
+       /* Process incoming characters first */=0A=
+       if ((lsr & (UART_LSR_DR | UART_LSR_BI)) &&=0A=
+           (up->ier & (UART_IER_RLSI | UART_IER_RDI))) {=0A=
                lsr =3D serial8250_rx_chars(up, lsr);=0A=
+       }=0A=
+=0A=
+       /* Stop processing interrupts on input overrun */=0A=
+       if ((orig_lsr & UART_LSR_OE) && (up->overrun_backoff_time_ms > 0)) =
{=0A=
+               unsigned long delay;=0A=
+=0A=
+               up->ier =3D port->serial_in(port, UART_IER);=0A=
+               if (up->ier & (UART_IER_RLSI | UART_IER_RDI)) {=0A=
+                       port->ops->stop_rx(port);=0A=
+               } else {=0A=
+                       /* Keep restarting the timer until=0A=
+                        * the input overrun subsides.=0A=
+                        */=0A=
+                       cancel_delayed_work(&up->overrun_backoff);=0A=
+               }=0A=
+=0A=
+               delay =3D msecs_to_jiffies(up->overrun_backoff_time_ms);=0A=
+               schedule_delayed_work(&up->overrun_backoff, delay);=0A=
+       }=0A=
=0A=
        serial8250_modem_status(up);=0A=
=0A=
diff --git a/drivers/tty/serial/8250/8250_of.c b/drivers/tty/serial/8250/82=
50_of.c=0A=
index 877fd7f8a8ed..a1a85805d010 100644=0A=
--- a/drivers/tty/serial/8250/8250_of.c=0A=
+++ b/drivers/tty/serial/8250/8250_of.c=0A=
@@ -240,6 +240,11 @@ static int of_platform_serial_probe(struct platform_de=
vice *ofdev)=0A=
        if (of_property_read_bool(ofdev->dev.of_node, "auto-flow-control"))=
=0A=
                port8250.capabilities |=3D UART_CAP_AFE;=0A=
=0A=
+       if (of_property_read_u32(ofdev->dev.of_node,=0A=
+                       "overrun-throttle-ms",=0A=
+                       &port8250.overrun_backoff_time_ms) !=3D 0)=0A=
+               port8250.overrun_backoff_time_ms =3D 0;=0A=
+=0A=
        ret =3D serial8250_register_8250_port(&port8250);=0A=
        if (ret < 0)=0A=
                goto err_dispose;=0A=
diff --git a/include/linux/serial_8250.h b/include/linux/serial_8250.h=0A=
index 18e21427bce4..5a655ba8d273 100644=0A=
--- a/include/linux/serial_8250.h=0A=
+++ b/include/linux/serial_8250.h=0A=
@@ -134,6 +134,10 @@ struct uart_8250_port {=0A=
        void                    (*dl_write)(struct uart_8250_port *, int);=
=0A=
=0A=
        struct uart_8250_em485 *em485;=0A=
+=0A=
+       /* Serial port overrun backoff */=0A=
+       struct delayed_work overrun_backoff;=0A=
+       u32 overrun_backoff_time_ms;=0A=
 };=0A=
=0A=
 static inline struct uart_8250_port *up_to_u8250p(struct uart_port *up)=0A=
--=0A=
2.19.2=0A=
=0A=
changes in v2:=0A=
- separated dts binding to another patch=0A=
