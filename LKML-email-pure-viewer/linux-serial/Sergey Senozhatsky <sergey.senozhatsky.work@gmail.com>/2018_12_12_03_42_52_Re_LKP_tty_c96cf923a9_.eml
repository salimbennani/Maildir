Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:41:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 075345803DC;
	Tue, 11 Dec 2018 19:43:04 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 11 Dec 2018 19:43:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKMlqZR/n+7JaIf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1u8UIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOMuRWoInmv1sDrwCzBRWwCO711jNEmmX70bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rJstr1LqgSXv61zaLV0DvMcfVW2TD86YjIaB8hveqMXbFwcMHMzkQvDB3Kjk+f?=
 =?us-ascii?q?qYP7PzKZzP8NvHad7+pnVOOvi3Qoqx1qojisxsYgkIfIhoUPylDH7ih5z4M1Ks?=
 =?us-ascii?q?e5SE5/e9KrDJxQtySDOoZwX8gsTWZouCMgxb0Hv562ZCsKx4o9xx7ZdfOHd5KE?=
 =?us-ascii?q?4hX5VOaeJzpzmXFreKqnihqs7UStzvfwWtS63VpUtCZJj9rBumwX2xHS6MWLUu?=
 =?us-ascii?q?Vx8lq81TqVyQze5eBJLVo1mKffMZIt37E9mocVvE/eBCH5gl/2g7WTdkg8+uin?=
 =?us-ascii?q?9eDnYrL+q5+COI97lBv+Pr4tmsOhG+Q4NBYBX2yB9eS7zr3j8lX1QLRMjvIojq?=
 =?us-ascii?q?nUqI7WKdgfq6KjHgNY3Jgv5wyiAzqlzNgUh3gKIVBddBKClYfpOlXOIP7iDfe4?=
 =?us-ascii?q?hlShiDNrx/HAPr38DZTBN3vDn6n7fbZ79UFczBM/zddR5pJSFL4BOun+WlH+tN?=
 =?us-ascii?q?PGFB81KQ+0zPj9CNV7yIweXXiDAqiDMKPdqVOI/P4gI/GQZI8JvzbwM/wl5//t?=
 =?us-ascii?q?jXAng1MccrSp0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD5Zf2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoC3j7yAwCe0BJpWanpGClCRC3jocYqEVuwIaCKTJM9hjzMF?=
 =?us-ascii?q?WaKgS48nyRGhqgv6x6B7IerT/y0SrYjj28Rt5+3PiREy8iR5D8aa026TVW10nW?=
 =?us-ascii?q?QIRzkw3KB4ukF9zlaD0a5lg/1XD9BT5vVJUhskOp7Y1eB1F9fyWgfZdNeTVFmm?=
 =?us-ascii?q?WsmmAS02Tt8p2dAOeEZ9G9KhjhzZxSqlGb0VmqePBJw19KLcwnfwK9x8y3bAyK?=
 =?us-ascii?q?kukV0mTtFTOm2hg6517xLTCJLRk0WFi6aqcrwR3C3X+2eF12aOuEBYXxR2UaXK?=
 =?us-ascii?q?Rn0fYkrWrdLk5kLNVbOuCLInMhdfxs6GMKdFdtrpjVBeTvf5JNvee36xm3u3BR?=
 =?us-ascii?q?uQ27yDdpTqdHsH0CXdEkcElRsT8miANQQ5AiehoGfeDDh1GFLrYkPs9/R+qXyh?=
 =?us-ascii?q?Qk81yQGKc1Nu176v9hEJgvycTusZ3qgYtyc5tzV0AFG90srLBNWauQpuYr9QYd?=
 =?us-ascii?q?Mn71dBzmLWqQp9M4ekL6BjgF4ebgt2s1nv1xVxFoVPj8wqoGk2wwp1LKKSyElB?=
 =?us-ascii?q?eC+A3ZDsJr3XLXH//Ayua67T3VHezNaW+6cV5PQksVnjuxupFk4j83Vh3NlYyH?=
 =?us-ascii?q?+c5pTMDAoPXpP9SEc39x5mp77EZikx/Z/b1XppMaOsqD/Nx8opBPc5yhanZ9pQ?=
 =?us-ascii?q?KqeEGxH9EsIEB8miMvclm0W0YR0eOuBS96k0P929evuC2a6rOvtgnT28gWRG5o?=
 =?us-ascii?q?B9zlyD9y5mRuHU2JYFxumS3hGbWDfkkFehrsf3lJhEZDEPBGaw1TLoBY9RZqJo?=
 =?us-ascii?q?e4YLBnyjI8m2xtV4mp7sVGRU9F+lB1MaxsCpfQCeYED63Q1VzU4Xu2ComTOkzz?=
 =?us-ascii?q?xolDEktrCf3C3SzOv4bhoIJ2lLSHNkjVjyO4i0jskWU1SyYAgtiRSq+1z6x69d?=
 =?us-ascii?q?pKlkK2nTQEFIfzX5Lm14U6uwsKaCbNBL6J8yrSpXV+G8a0iASrHhuxsazz/jH2?=
 =?us-ascii?q?xGyTE7djGmoJX4kwZhiGKAKnZ+t37ZecB2xRfC693QX/9R3jwaRCZmjTnbHESz?=
 =?us-ascii?q?P96s/d+MjZfMrvi+V369Vp1UaSTrz5mPtDG45W1pBh2zheuzlcfkEQg50C/70c?=
 =?us-ascii?q?dlVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr+bXUXQj4H2dzV4Anj2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPst8nEagvsFuAowziqHBLASElJVPSjtlxSO?=
 =?us-ascii?q?8tC/o79bZGepcbisykV+mcqtA62FogFZQHz5YIstHTds7sVjN1LByHjz6oDneN?=
 =?us-ascii?q?bKd94SuAObkwzcj+dLMpI+jeQFhTBoOW/muX0lyug7jQFh3J2gvYiHLXlt87y9?=
 =?us-ascii?q?AhJCKjL1YMYT8Cn3jalChsaWw5yvHpJ5FzUXW5voSOikETMIuvThKgaOCyY8qn?=
 =?us-ascii?q?aAFLrbHA+f7lpmrn3VH5CqMXGXOGcWzdF4SBaBI0xfhRgeXC8mkZ4hCgCq2Mvh?=
 =?us-ascii?q?fV9i6T8L4V74rgZMxvhsNxniSWrfoAaoajEpSJmQNhZW7wdC51vLPsya9O58Ay?=
 =?us-ascii?q?ZY/pi5pgyXNmObfxhIDX0OWkGcBVDsJLyu6sfb8+SCGuqyNfjOYaiNqexDUfeH?=
 =?us-ascii?q?34mv35Bi/zaNMMWPI3ZjA+c62kpFQXB2BcDZly8TRCwQkiLHd9Sbqwuk+i1rss?=
 =?us-ascii?q?C/9+zmWQLo5YuSErtSLM9g+xasjaeYMO6Qgil5JC1c1pMNw3/I1bce0EQTiyFo?=
 =?us-ascii?q?azmiD7AAuTTRQ6LXn69dFwQbZD9rNMtU86I82RFAOc7FhdP01b54jf81B01GVV?=
 =?us-ascii?q?z7ncGpatIFI3ugNFPcH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGoo69bw1iCXL9Q9PmcBG7NN53gCYywb01gHPKKGEdPS?=
 =?us-ascii?q?J9c0NLsr2f8ydYju9jFGxG63pvNfOElDqB7+nENpYWtuNmAjh1l+Jf+ng116FZ?=
 =?us-ascii?q?4z1ERPNrnivftdpuo1CgkumSxTtrShtOqjBXhI2VuUVuI7nW9p5FWXzc5hIC8X?=
 =?us-ascii?q?2QCwgWp9tiEtDuu7pfyt7KlKLyLjdN69PV/csGCMjSJ8KKK34hMRvvGD7JAwoJ?=
 =?us-ascii?q?Vz+rNWfDh0NDlPGe7GGarp8/qsukpJ1bZrpaSEYkXsgTBENjG8JKdJt2WzoMmK?=
 =?us-ascii?q?Sal9IBo3G5qU+Cat9du8X8W+idDOSnEzufiqtEbgcTwqKweZ8eLIL2ygp5Z199?=
 =?us-ascii?q?joTDB1HTTJZSpTdiRgAxqURJtnN5SztgiAredgqx7SpLRraPlRksh147OLx1+Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAACRgxBch0O0hNFlGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgmmBAieMFIw7gWQUiX5ah2qEfBSBXxIBARg?=
 =?us-ascii?q?NBgGHLiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiQTBgEbH?=
 =?us-ascii?q?QEDAgkBAQUFDgoJJQMMBQ8RAQUBCxcTBYMcAYFoAQMUAQUKmig8jAkWBQEXgnc?=
 =?us-ascii?q?FgTEBgxEKGScNXYE3AgEFEosNgRx6gRyBEYMSgwUZBIEsARIBg1SCJgKLK4UQk?=
 =?us-ascii?q?EAHAoImcoNxij8jCgKJXIdaLI1qincGAgkHDyGBJWA9cXCDPBIBgggMFxKDOIU?=
 =?us-ascii?q?UhU4xMgGBAQMBASETiF6CPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AFAACRgxBch0O0hNFlGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgmmBAieMFIw7gWQUiX5ah2qEfBSBXxIBARgNBgGHLiI0CQ0BA?=
 =?us-ascii?q?wEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiQTBgEbHQEDAgkBAQUFDgo?=
 =?us-ascii?q?JJQMMBQ8RAQUBCxcTBYMcAYFoAQMUAQUKmig8jAkWBQEXgncFgTEBgxEKGScNX?=
 =?us-ascii?q?YE3AgEFEosNgRx6gRyBEYMSgwUZBIEsARIBg1SCJgKLK4UQkEAHAoImcoNxij8?=
 =?us-ascii?q?jCgKJXIdaLI1qincGAgkHDyGBJWA9cXCDPBIBgggMFxKDOIUUhU4xMgGBAQMBA?=
 =?us-ascii?q?SETiF6CPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="43698228"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 19:43:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726380AbeLLDm6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 22:42:58 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:36079 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726220AbeLLDm6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 22:42:58 -0500
Received: by mail-pf1-f195.google.com with SMTP id b85so8187775pfc.3;
        Tue, 11 Dec 2018 19:42:57 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=+e5LZ7UiC8Q88LcqnN/iTu+Cnm1+L8rNw3nAaDKZyVE=;
        b=jRXC7OEqkMxxt5U0/OutrHIL990aR8LWK28uKaUQDaw3nSVsT59GDRF0c7oXn0TQ+J
         x7kOY/w/XKFvyv3QjxVfHPSfHFlnGsmddAiqghJIkLqOD1Mnz6c2uZ0eDl/g0E4wv/WG
         U9ESlsiF9QEa5n3Bu/dQy9/z3HnI2BmV2/j9Tia7/5HAqbiaFKzkrkXzkJJCLGkQhGFT
         eE+8CC7RKauW9WiIPG5CiQxVFaFlnk5UJDqmvhfV3bmtLBBpNvemBH3JpBwXaQM6xT5i
         CxlVIoBx/rB2si/C1CqPahr50EEFTlDlehJuVkhJpXGD2Y7fNDKyZhDhxstMxp33oFNV
         9lCA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=+e5LZ7UiC8Q88LcqnN/iTu+Cnm1+L8rNw3nAaDKZyVE=;
        b=ps/2FihSBJlG7oIvvh6ISCzIzc6UVlnE2gD8MkQru7F5yT1VWL6OIGtVU5USFAWJAS
         9s8sZdyZNJkeSuDOEndSK5j9Zwu0vGUgNNx2dtxQNjr1wGwjmAJ6YZFBJm2uTlW/Pgsi
         p0WvaN3FMfFmmZO0xL+l3J3FIEFug4mM9qy5yQJ5YCDDagnZC8XJEzXCiv7Ec5aelIq9
         CChzf+Dv1m1i3Oer5WaLUV77PV4/os6VIqIHQJklDOY284UFqpbJLpP7qrtz9svlvhEd
         emuyOd1Med1R9k0I2B4tt31jyljSWSdI77Gya21omDLEgOJZQM83cIB1nHSOJjm1JOmx
         gabw==
X-Gm-Message-State: AA+aEWbgA3+XjH9dX+SIfKHs3JLMMZLKC9PaZMvdg9CdMdpDcs9zw5yC
        0jfN69LA8xIxznrJDV8C/XM=
X-Google-Smtp-Source: AFSGD/X1aqEFV9N7VIc+MTyj417mJT2Q5fQvrIHE8JtWzzWMDOCArsTAh4qrPsm+p/iL3Z2nn5rQAQ==
X-Received: by 2002:a63:4d0e:: with SMTP id a14mr17032394pgb.408.1544586177156;
        Tue, 11 Dec 2018 19:42:57 -0800 (PST)
Received: from localhost ([211.246.69.141])
        by smtp.gmail.com with ESMTPSA id l5sm16256318pgp.82.2018.12.11.19.42.55
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 11 Dec 2018 19:42:55 -0800 (PST)
Date: Wed, 12 Dec 2018 12:42:52 +0900
From: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
To: Dmitry Safonov <dima@arista.com>
Cc: Jiri Slaby <jslaby@suse.cz>,
        kernel test robot <rong.a.chen@intel.com>, lkp@01.org,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Mikulas Patocka <mpatocka@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        linux-serial@vger.kernel.org,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Petr Mladek <pmladek@suse.com>,
        Steven Rostedt <rostedt@goodmis.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Waiman Long <longman@redhat.com>
Subject: Re: [LKP] [tty] c96cf923a9:
 WARNING:possible_circular_locking_dependency_detected
Message-ID: <20181212034252.GD431@jagdpanzerIV>
References: <20181211091154.GL23332@shao2-debian>
 <b8a5b151-9eaa-b098-f24f-b17c1886f456@suse.cz>
 <2780774e-b397-dcc2-6950-cccb527d5014@arista.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <2780774e-b397-dcc2-6950-cccb527d5014@arista.com>
User-Agent: Mutt/1.11.1 (2018-12-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

Cc-ing Peter, Waiman


Hmm, so, how it looks to me

On (12/11/18 20:59), Dmitry Safonov wrote:
> >> [   87.218483] -> #2 (&port_lock_key){-.-.}:
> >> [   87.219282]        lock_acquire+0x28c/0x2e7
> >> [   87.219901]        _raw_spin_lock_irqsave+0x35/0x49
> >> [   87.220601]        serial8250_console_write+0x110/0x5b5
> >> [   87.221354]        univ8250_console_write+0x5f/0x64
> >> [   87.222056]        console_unlock+0x61c/0x7cf
> >> [   87.222680]        register_console+0x63a/0x7b0
> >> [   87.223345]        univ8250_console_init+0x1e/0x28
> >> [   87.224041]        console_init+0x3be/0x57e
> >> [   87.224641]        start_kernel+0x441/0x6c6
> >> [   87.225246]        x86_64_start_reservations+0x29/0x2b
> >> [   87.225979]        x86_64_start_kernel+0x6f/0x72
> >> [   87.226637]        secondary_startup_64+0xa4/0xb0

console_sem -> uart_port->lock

> >> [   87.227314] -> #1 (console_owner){-...}:
> >> [   87.228127]        lock_acquire+0x28c/0x2e7
> >> [   87.228728]        console_unlock+0x424/0x7cf
> >> [   87.229363]        vprintk_emit+0x22d/0x252
> >> [   87.229969]        vprintk_default+0x18/0x1a
> >> [   87.230576]        vprintk_func+0xa9/0xab
> >> [   87.231156]        printk+0x97/0xbe
> >> [   87.231659]        __debug_object_init+0x8db/0x92d
> >> [   87.232349]        debug_object_init+0x14/0x17
> >> [   87.232987]        __init_work+0x1b/0x1d
> >> [   87.233551]        rhashtable_init+0x53b/0x602
> >> [   87.234192]        rhltable_init+0xe/0x41
> >> [   87.234772]        test_insert_dup+0xac/0xa94
> >> [   87.235467]        test_rht_init+0x387/0x79c
> >> [   87.236222]        do_one_initcall+0x23c/0x4af
> >> [   87.236869]        kernel_init_freeable+0x5ec/0x69f
> >> [   87.237855]        kernel_init+0xc/0x100
> >> [   87.238470]        ret_from_fork+0x3a/0x50

db->lock -> console_sem -> uart_port->lock

   obj_hash[i].lock
   /* db->lock */
    __debug_object_init()
      debug_print_object()
       printk()
        spin_lock_irqsave(uart->port_lock)

BTW, there is a patch from Waiman which moves debug_print_object()
out of db->lock scope [1].

> >> [   87.239071] -> #0 (&obj_hash[i].lock){-.-.}:
> >> [   87.239904]        __lock_acquire+0x1f78/0x22d1
> >> [   87.240556]        lock_acquire+0x28c/0x2e7
> >> [   87.241173]        _raw_spin_lock_irqsave+0x35/0x49
> >> [   87.241882]        debug_check_no_obj_freed+0xb4/0x302
> >> [   87.242620]        free_unref_page_prepare+0x33a/0x483
> >> [   87.243368]        free_unref_page+0x48/0x80
> >> [   87.243991]        __free_pages+0x2e/0x40
> >> [   87.244611]        free_pages+0x54/0x5a
> >> [   87.245188]        uart_shutdown+0x3df/0x4e2
> >> [   87.245817]        uart_hangup+0x123/0x280
> >> [   87.246406]        __tty_hangup+0x4da/0x50f
> >> [   87.247025]        tty_vhangup_session+0xe/0x10
> >> [   87.247680]        disassociate_ctty+0xeb/0x5c5
> >> [   87.248349]        do_exit+0xc97/0x1daf
> >> [   87.248920]        __x64_sys_exit_group+0x0/0x3e
> >> [   87.249587]        __wake_up_parent+0x0/0x52
> >> [   87.250211]        do_syscall_64+0x5e8/0x881
> >> [   87.250839]        entry_SYSCALL_64_after_hwframe+0x49/0xbe

But I think what really makes lockdep nervous is this thing:

	uart_shutdown()
	 uart_port_lock()  //  spin_lock_irqsave(uart_port->lock)
	  free_page()
	   debug_check_no_obj_freed()
	    db->lock
	     debug_print_object()
	      printk()
	       spin_lock_irqsave(uart_port->lock)


Lockdep complains about:   uart_port->lock -> db->lock

It knows that we already have the reverse chain: db->lock -> uart_port->lock
From
	db->lock -> debug_print_object() -> printk() -> console_sem -> uart_port->lock


> >> [   87.255156]        CPU0                    CPU1
> >> [   87.255813]        ----                    ----
> >> [   87.256460]   lock(&port_lock_key);
> >> [   87.256973]                                lock(console_owner);
> >> [   87.257829]                                lock(&port_lock_key);
> >> [   87.258680]   lock(&obj_hash[i].lock);


So it's like

	CPU0					CPU1

	uart_shutdown()				db->lock
	 uart_port->lock			 debug_print_object()
	  free_page()				  printk
	   debug_check_no_obj_freed		   uart_port->lock
	    db->lock


In this particular case we probably can just move free_page()
out of uart_port lock scope. Note that free_page()->MM can printk()
on its own.


Something like this (not tested):

---

 drivers/tty/serial/serial_core.c | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/tty/serial/serial_core.c b/drivers/tty/serial/serial_core.c
index c439a5a1e6c0..64050f506348 100644
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@ -268,6 +268,7 @@ static void uart_shutdown(struct tty_struct *tty, struct uart_state *state)
 	struct uart_port *uport = uart_port_check(state);
 	struct tty_port *port = &state->port;
 	unsigned long flags = 0;
+	char *xmit_buf = NULL;
 
 	/*
 	 * Set the TTY IO error marker
@@ -297,15 +298,16 @@ static void uart_shutdown(struct tty_struct *tty, struct uart_state *state)
 	 */
 	tty_port_set_suspended(port, 0);
 
+	uart_port_lock(state, flags);
+	xmit_buf = state->xmit.buf;
+	state->xmit.buf = NULL;
+	uart_port_unlock(uport, flags);
+
 	/*
 	 * Free the transmit buffer page.
 	 */
-	uart_port_lock(state, flags);
-	if (state->xmit.buf) {
-		free_page((unsigned long)state->xmit.buf);
-		state->xmit.buf = NULL;
-	}
-	uart_port_unlock(uport, flags);
+	if (xmit_buf)
+		free_page((unsigned long)xmit_buf);
 }
 
 /**

---

Can send a formal patch, if it works for you guys.

[1] https://lore.kernel.org/lkml/1542653726-5655-8-git-send-email-longman@redhat.com/T/#u

	-ss
