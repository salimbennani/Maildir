Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:05:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7E26C58046A;
	Thu, 22 Nov 2018 02:30:58 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 02:30:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ak7eishWb8P+4TEDTdYj+eUc0boHV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCEtadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe240qnIzS/Cb/NNxTf975DIchA8qv+OQ71wdc7RyEcuFwPKk16d?=
 =?us-ascii?q?rozlMC+V1ukWt2ib9PZgWfiyhGE5sgx8pCWkyMQ0ioTRmI4Z1lTJ+T9kzIs7O9?=
 =?us-ascii?q?G0UlN3bN24HJdKtiyXNZN6Tt0/T2xmoio3zr0LtYSmcCQX0pgr2QPTZ+GBfoOV?=
 =?us-ascii?q?+BzsTvyRLi19hH99eLKwmRKy8U+4x+3iWcm7zkxKojBGktbSrHAN0QLc6sydRv?=
 =?us-ascii?q?t65Eeh1i6D1wHV6u5aPUA5jbTXJ4Ilz7Iqi5Yev1rPEjXrlEj1kKOabEQp9+qw?=
 =?us-ascii?q?5+TieLrmp5ucN4FuigH5N6Qjgsi/AeU+MggTUGmX4Oe826P5/U3/XrpKiuQ6kq?=
 =?us-ascii?q?7XsZDcO8sbvLW0AxFa0ok98RazFTSm38oCnXkBMl1FfAiLj4/zO1HBOPz4F+uw?=
 =?us-ascii?q?g0ywkDd3wPDLJrnhApTOLnfdirvgcqt95lVYyAoyy9Bf+p1VBqsAIPL1Rk/+qt?=
 =?us-ascii?q?jYAgUlPAyzxubtEM992Z8GWWKTHq+ZN7vfsV+S6eIuP+mDfogVtCz9K/g4/fHu?=
 =?us-ascii?q?i3A5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5SezgkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIChDYjdXIytg7uB3CG9Hp1RfW1GDlGMEXH1d4SLQfsMaSSSItN/nTwA?=
 =?us-ascii?q?T7SuV4gh1RS2vg/g17VnNvbU+jEftZ/7ztd1/O3TlRYx9TBuFcSSyWONQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwcwLYTcwPBiC9DuRgLBec+ESFW8?=
 =?us-ascii?q?TdWgGz0xStMxzMUIY0ZyANiiihHD3yy3A74ajbCLBZo08r7C0Hj1Pcpy13HG1K?=
 =?us-ascii?q?w5hVk8XsRPLXGmhrJ49wXLGoHGiVuZmLiweaQcxiHN8nyDwnSIvE1fVA5wUqDF?=
 =?us-ascii?q?XXQEa0vSrNT54F7CTrC0BbQmNAtB1dCNKq9QZtL1ilVGQe/pOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uRY4XwZWUSwj/RCEgenAAV5naJKw4+Czylo2LfCjxuCF3ub1nt8el4tHO0?=
 =?us-ascii?q?UEs0wxuWYE1m0rq/4gQViuCES/MPwrIEvz8sqyl1HFa42NLWF9qApgp7cKVAe9?=
 =?us-ascii?q?89501H1WbYtwx7MZytNKRihl8YcwRqsELizRR3CoNckcc0qHMm1hZ9KaWd0FlZ?=
 =?us-ascii?q?bTOXwYjwOqHLKmn15B2gcarW1U/R0dmI+qYD8u83q0j+sw6zEEoi8HJn08dO3n?=
 =?us-ascii?q?uY55XKChcSUJ3rXkY28Rh6u6/VYi0n64zI0n1sNLG+siXe1NIxGOsl1hGgcs9f?=
 =?us-ascii?q?MaOZDgP9D9cWBsmuKOMwnVipYQkJPORT9K4yIsOneOGK2K+tPOZ8gj2miX5L75?=
 =?us-ascii?q?x60kKJ7yB8UPLH344Zw/GE2QuKTy38jFa9vc/tg4BLeDYSEnC5ySf6Ho5RZ7R+?=
 =?us-ascii?q?cpoRBmeqPsK42M9+h5nrW3ND8F6jBlUG2NKmeBaIblz92xFQ2loToXC9hSS4yD?=
 =?us-ascii?q?l0mSkzrqWDxCzO3/jidB0fN29LRWlul1ftLZKvj9AHWkildAwplBqj5UbnyKlX?=
 =?us-ascii?q?vqV/L2/PQUhWeyj6NX1tUqy1trCaec5A9IsosTlLUOS7eV2aSKTyowEZ0yPgGG?=
 =?us-ascii?q?tS3is7eCupupX6nhx6jnySLHBooXrdeMFwwwrf5dPGSf5Q2DoGWDd3iT3NCleg?=
 =?us-ascii?q?ONmp+M2el43fveCmS2KhSppTfDHrzIyasyu3/29qARy5n/2ont3nEA460TL01t?=
 =?us-ascii?q?VwVCXIqgr8bZfv16igLe1neUxoDkfm68VmAoF+jpcwhJYI1HgZnJqV/GALkWfu?=
 =?us-ascii?q?MdpB36L+Y2EARToKw97T/Qjk11dvLnOPx4LlSHqdxtFtaMW9YmMTwig99dxFCL?=
 =?us-ascii?q?+I7LxYmit4ul+4rQPSYfdnhDscx+Uh6GUGg+4Xogoi1TuSAqodHURDOSzslhKI?=
 =?us-ascii?q?782xralNZWavd6Sw21R6ndy7EL6CpQRcUm7jepg+BS9w8tl/MFXU3X3v7YHkfc?=
 =?us-ascii?q?PcbNMJuR2SjhfAlPNVKJMqm/oOhCpnP3/9vHI/x+46ixxuwY+1vIydJ2px+6K5?=
 =?us-ascii?q?BwZSNifpaMML5jHtkaFek96N0I+1GZVhHigLUIHsTfK1Cz8SsfXnNwCTEDwzsH?=
 =?us-ascii?q?ubGLzfHROB50ditX7AD5erN3SPLnkD0dpiXAWdJFBYgA0MXjU1hJs5GR6xxMD7?=
 =?us-ascii?q?bEd1/DMR5kP7qhtRzOJnLQL/X3zbpAepbDc0VZeeIABX7gFE+0faL8ie4vhvEC?=
 =?us-ascii?q?Ff+52rtBaNJXCDZwRUEWEJXVSJBlDkPrmz/NnA7vKXBuykI/vVZrWOr+NeWuyM?=
 =?us-ascii?q?xZKu1Itm4jmNOt+OPnlkE/00xE5DUWplFMTenjUFUzYXmD7Vb86HuBe8/TV6rs?=
 =?us-ascii?q?Ch//TqWwLv5oqPB6FRMdV1/BC2jrmMN/SNhCZiMjtY0pIMxXnVyLkQxlISiidu?=
 =?us-ascii?q?dyWzHrQEryLCUKXQmqpPBR4BdyxzLNdI77473gRVI8Hbl8j61qRmgf81EVtFUV?=
 =?us-ascii?q?3hl9qtZcwLJWG9KVzGCFyKNLSAOT3E3cX3bbmgRr1XieVerwewtiqDE0//IjSD?=
 =?us-ascii?q?kCHkVwyuMeFJli2UIAZSt529chlzD2juV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuY7/PXKpATsftqBCR7j+Nb4HQgxLtT?=
 =?us-ascii?q?4yFJX/h1mCrUrt5zrFCqiOiPyjx7UBVQrjZHnp6EvUJnOfaRyp4VfHfC81op4G?=
 =?us-ascii?q?TYXxELodQjDtDuk7pdxtjGiOT4LzIUoPzO+s5JLMjOKdmbN2IheTrkHDrLDQRN?=
 =?us-ascii?q?GT6gNUnbnFAbnPzEpS7dlYQztpW5wMlGcbRcTlFgU6pCUkk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAqhfZbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBVYIWjDeMAVIGgUlmiB6JK4R3gjIBiFAiNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKS+CNiQBgmIDAwECJBM/BgkBAQohExIDDAUYMRiDH?=
 =?us-ascii?q?IF1DQQBqwIziieMCRd4gQeBEYJdNYgzgiYCixGUcQmBEZATI4lchywsmUqCDTM?=
 =?us-ascii?q?aCBwUgyiCIwMXjh0+gTgBAY0mAwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAqhfZbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBVYIWjDeMAVIGgUlmiB6JK4R3gjIBiFAiNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKS+CNiQBgmIDAwECJBM/BgkBAQohExIDDAUYMRiDHIF1DQQBqwIziie?=
 =?us-ascii?q?MCRd4gQeBEYJdNYgzgiYCixGUcQmBEZATI4lchywsmUqCDTMaCBwUgyiCIwMXj?=
 =?us-ascii?q?h0+gTgBAY0mAwEB?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="139197146"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 02:30:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405213AbeKVVJZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 16:09:25 -0500
Received: from verein.lst.de ([213.95.11.211]:57488 "EHLO newverein.lst.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2388270AbeKVVJZ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 16:09:25 -0500
Received: by newverein.lst.de (Postfix, from userid 2407)
        id 07FD668BC7; Thu, 22 Nov 2018 11:30:34 +0100 (CET)
Date: Thu, 22 Nov 2018 11:30:33 +0100
From: Christoph Hellwig <hch@lst.de>
To: Ming Lei <ming.lei@redhat.com>
Cc: Christoph Hellwig <hch@lst.de>, Jens Axboe <axboe@kernel.dk>,
        linux-block@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-mm@kvack.org, Theodore Ts'o <tytso@mit.edu>,
        Omar Sandoval <osandov@fb.com>,
        Sagi Grimberg <sagi@grimberg.me>,
        Dave Chinner <dchinner@redhat.com>,
        Kent Overstreet <kent.overstreet@gmail.com>,
        Mike Snitzer <snitzer@redhat.com>, dm-devel@redhat.com,
        Alexander Viro <viro@zeniv.linux.org.uk>,
        linux-fsdevel@vger.kernel.org, Shaohua Li <shli@kernel.org>,
        linux-raid@vger.kernel.org, David Sterba <dsterba@suse.com>,
        linux-btrfs@vger.kernel.org,
        "Darrick J . Wong" <darrick.wong@oracle.com>,
        linux-xfs@vger.kernel.org, Gao Xiang <gaoxiang25@huawei.com>,
        linux-ext4@vger.kernel.org, Coly Li <colyli@suse.de>,
        linux-bcache@vger.kernel.org, Boaz Harrosh <ooo@electrozaur.com>,
        Bob Peterson <rpeterso@redhat.com>, cluster-devel@redhat.com
Subject: Re: [PATCH V11 03/19] block: introduce bio_for_each_bvec()
Message-ID: <20181122103033.GA29418@lst.de>
References: <20181121032327.8434-1-ming.lei@redhat.com> <20181121032327.8434-4-ming.lei@redhat.com> <20181121133244.GB1640@lst.de> <20181121153135.GB19111@ming.t460p> <20181121161025.GB4977@lst.de> <20181121171217.GA6259@lst.de> <20181122101527.GB27273@ming.t460p> <20181122102309.GA29295@lst.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181122102309.GA29295@lst.de>
User-Agent: Mutt/1.5.17 (2007-11-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Btw, this patch instead of the plain rever might make it a little
more clear what is going on by skipping the confusing helper altogher
and operating on the raw bvec array:


diff --git a/include/linux/bio.h b/include/linux/bio.h
index e5b975fa0558..926550ce2d21 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -137,24 +137,18 @@ static inline bool bio_full(struct bio *bio)
 	for (i = 0, iter_all.idx = 0; iter_all.idx < (bio)->bi_vcnt; iter_all.idx++)	\
 		bvec_for_each_segment(bvl, &((bio)->bi_io_vec[iter_all.idx]), i, iter_all)
 
-static inline void __bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
-				      unsigned bytes, unsigned max_seg_len)
+static inline void bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
+				    unsigned bytes)
 {
 	iter->bi_sector += bytes >> 9;
 
 	if (bio_no_advance_iter(bio))
 		iter->bi_size -= bytes;
 	else
-		__bvec_iter_advance(bio->bi_io_vec, iter, bytes, max_seg_len);
+		bvec_iter_advance(bio->bi_io_vec, iter, bytes);
 		/* TODO: It is reasonable to complete bio with error here. */
 }
 
-static inline void bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
-				    unsigned bytes)
-{
-	__bio_advance_iter(bio, iter, bytes, PAGE_SIZE);
-}
-
 #define __bio_for_each_segment(bvl, bio, iter, start)			\
 	for (iter = (start);						\
 	     (iter).bi_size &&						\
@@ -168,7 +162,7 @@ static inline void bio_advance_iter(struct bio *bio, struct bvec_iter *iter,
 	for (iter = (start);						\
 	     (iter).bi_size &&						\
 		((bvl = bio_iter_mp_iovec((bio), (iter))), 1);	\
-	     __bio_advance_iter((bio), &(iter), (bvl).bv_len, BVEC_MAX_LEN))
+	     bio_advance_iter((bio), &(iter), (bvl).bv_len))
 
 /* returns one real segment(multi-page bvec) each time */
 #define bio_for_each_bvec(bvl, bio, iter)			\
diff --git a/include/linux/bvec.h b/include/linux/bvec.h
index cab36d838ed0..7d0f9bdb6f05 100644
--- a/include/linux/bvec.h
+++ b/include/linux/bvec.h
@@ -25,8 +25,6 @@
 #include <linux/errno.h>
 #include <linux/mm.h>
 
-#define BVEC_MAX_LEN  ((unsigned int)-1)
-
 /*
  * was unsigned short, but we might as well be ready for > 64kB I/O pages
  */
@@ -102,8 +100,8 @@ struct bvec_iter_all {
 	.bv_offset	= segment_iter_offset((bvec), (iter)),	\
 })
 
-static inline bool __bvec_iter_advance(const struct bio_vec *bv,
-		struct bvec_iter *iter, unsigned bytes, unsigned max_seg_len)
+static inline bool bvec_iter_advance(const struct bio_vec *bv,
+		struct bvec_iter *iter, unsigned bytes)
 {
 	if (WARN_ONCE(bytes > iter->bi_size,
 		     "Attempted to advance past end of bvec iter\n")) {
@@ -112,20 +110,15 @@ static inline bool __bvec_iter_advance(const struct bio_vec *bv,
 	}
 
 	while (bytes) {
-		unsigned segment_len = segment_iter_len(bv, *iter);
-
-		if (max_seg_len < BVEC_MAX_LEN)
-			segment_len = min_t(unsigned, segment_len,
-					    max_seg_len -
-					    bvec_iter_offset(bv, *iter));
+		const struct bio_vec *cur = bv + iter->bi_idx;
+		unsigned len = min3(bytes, iter->bi_size,
+				    cur->bv_len - iter->bi_bvec_done);
 
-		segment_len = min(bytes, segment_len);
-
-		bytes -= segment_len;
-		iter->bi_size -= segment_len;
-		iter->bi_bvec_done += segment_len;
+		bytes -= len;
+		iter->bi_size -= len;
+		iter->bi_bvec_done += len;
 
-		if (iter->bi_bvec_done == __bvec_iter_bvec(bv, *iter)->bv_len) {
+		if (iter->bi_bvec_done == cur->bv_len) {
 			iter->bi_bvec_done = 0;
 			iter->bi_idx++;
 		}
@@ -157,13 +150,6 @@ static inline bool bvec_iter_rewind(const struct bio_vec *bv,
 	return true;
 }
 
-static inline bool bvec_iter_advance(const struct bio_vec *bv,
-				     struct bvec_iter *iter,
-				     unsigned bytes)
-{
-	return __bvec_iter_advance(bv, iter, bytes, PAGE_SIZE);
-}
-
 #define for_each_bvec(bvl, bio_vec, iter, start)			\
 	for (iter = (start);						\
 	     (iter).bi_size &&						\
