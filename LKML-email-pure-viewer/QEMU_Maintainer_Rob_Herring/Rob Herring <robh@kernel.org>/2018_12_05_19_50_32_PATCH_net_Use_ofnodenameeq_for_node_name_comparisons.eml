Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:58:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E4A61580375;
	Wed,  5 Dec 2018 11:53:44 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 11:53:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AYo2M2R06aNmAAAXmsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSL/nxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJPDICy?=
 =?us-ascii?q?YYwAAOQOJuZYt4vwqkASoRa9HwSgGPnixiNUinLwwKY00/4hEQbD3AE4A9wOt2?=
 =?us-ascii?q?/bp8j3OqgMS+C11qjIzTPMb/hL3jr98o/IfQshofyXXrJ/b9DRyU8xGAPBlFmQ?=
 =?us-ascii?q?rpblPzyM2+kLrmOV7PJgWPqxh2I7rwx9uCWjy8kyhoXTm44YyUzI+T94zYs3Pd?=
 =?us-ascii?q?G0VkF2bcS5HJZQtyyWLZZ6Tt8mTm1ytys3zrsLsoOhcicQ0pQo3RvfZuSHc4eW?=
 =?us-ascii?q?5hLjU/6cISl3hH17YrKznRWy/la6yu36SMa01ExGri1fktnDrnwN1hrT5dabSv?=
 =?us-ascii?q?Zl4EutxTKC2xrO5uxKP0w4j7fXJp09zrIql5ces1zPHirsl0X3iK+WeF8k+u+t?=
 =?us-ascii?q?6+n/ZrXmp5mcN5J7iw3nMaQhhNa/AeImPQgKRmSb/uq91Lv98k3jW7hKkPI2nb?=
 =?us-ascii?q?fDsJzAJsQUuLS5AwlL3YYn8Rq/CC2m0NsAkXkdMF1FYA6Hj5TuO1zWJPD4DPS/?=
 =?us-ascii?q?jEq2nDZk2vDLJbnhApTLLnjen7btZ7d960hAyAUtydBT/Y5bCrYEIPjrQE/+qM?=
 =?us-ascii?q?TYDgMlMwyz2+vnCM9y1oICWW2VBa+VKqPSsUKS6eIpLOmBf4sVuDf7K/g46P/i?=
 =?us-ascii?q?l345mVkBfaa32Zsbcmy3HvNjI0+Be3rjns8BEXsWvgo5VOHqilqCXiBJa3axWK?=
 =?us-ascii?q?I84Dc7CIW9AIfHR4CthqGB3SihEp1XYGBGFk6DEXPye4qYXPcMbTqYItV9nTwc?=
 =?us-ascii?q?SbihV4gh2Am0uw/hy7pnKenU9jcCtZ351th4/OnTlRA09TxpAMWRyWCNT2donm?=
 =?us-ascii?q?wWQz86xrxwoUt4yl2by6h3n+RYFcBP5/NOSgo6NoTTz+pgB9D2WwLOZNGJSFm9?=
 =?us-ascii?q?T9WiADExSM8xwtAUb0Z8HdWikg7M3y6wD7AJkLyLAYQ+8rjA0HjpO8Z913HG2b?=
 =?us-ascii?q?E8gFY8XMtAK3eqhq5l+AjVHI7GjUOZm6GudaQf2S7N8HyOzW6PvEFeTQ5xXr/J?=
 =?us-ascii?q?XXEZZkvKs9v54lnOQKOpCbQiKgFB09KNKrNWat31ilVLXOrsN87AY22vgWuwBQ?=
 =?us-ascii?q?yHxrWXbIX0fWUQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e15h8VhfmbS/MP3rIFuD0tqyluEFa6xdLWD9uApwxufKhHZd?=
 =?us-ascii?q?M94VFH1X/WtgBnP5ygKbxiiUAacwhto0zu0BB3AJ1akcc2tHMq0BZyKaWA3Vxb?=
 =?us-ascii?q?czOXw5/xNaPXK2Xo5x+vdrPZ1UvY0NaV/acP9u81q1HivAGvC0oj/G9r09hT03?=
 =?us-ascii?q?uA+JrKCBAeXo72UkYy7xJ6va3VYjEh54PI0n1hKam1siLY1901HuckyxagcM1Z?=
 =?us-ascii?q?MKOLDwLyF8waB86zKO0lgVSpbxQEPPxM+64wJc+pa/yG2KuzNuZ6gD2mlXhH4J?=
 =?us-ascii?q?x60k+U7Sp8S/LH0Iwfw/6F2QuLTTH8g0m7ssD2gIxLeSsdHm6ixif6Ho5RYaty?=
 =?us-ascii?q?cJ0PCWevJc2329p/i4TsW35e6F6sGVcG1NW1dhqValz3xRdQ2lgPoXy7hSu4yC?=
 =?us-ascii?q?R5kjEorqaF3C3C2f/idAcBOmNQQGlijFHsIZW7jtwAXUioaRQpmwWh5Urg26db?=
 =?us-ascii?q?o6F/JXHJQUhUZyj2M31iUqyou7qAecFP8pAosSZQUOimelCVUL39oxgb0yPlAW?=
 =?us-ascii?q?Rewis2dzWrupX/ghx7h3iRLHd1rHrFZ85wwQ3T68DbRf5UxjAGXjV3iSHLBlig?=
 =?us-ascii?q?ONmk5dWVmI3EsuykVWKhV5tTfDLvzYOBsiu7+GJrDQe+n/C1ht3oDww63TXn2N?=
 =?us-ascii?q?ltUCXCtAz8bZXz16SmLeJneVFlBFzm5Mp7AI1+kpYwi4sW2XgVnZiV+XsHkWHu?=
 =?us-ascii?q?MdRUw67+bXwNRSIVzN7R+gTqxEpjLneRzYLjSnqd2tdhZ8W9Ym4O3yI97sNKB7?=
 =?us-ascii?q?2O4L1KgyR1uUa4ohzLYfdmgDgd0/Qu5WUeg+EIvgot0yqcDqoTHUleISzjiRCI?=
 =?us-ascii?q?48qio6VQYWalaaKw21ZmndC9ELGCpRlRWGr+epcnByNx799wMFTR0H3o8YHkec?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GgVXOSfyZ8MX5zHhl6JentuN0oCrH5VhHCgLXZTyQfKpFjISqeroNwKUHDIgrX?=
 =?us-ascii?q?ebHKLVHRWD50d+s3LPD5erOmmVJHYDyNVtWgKdKFZDgAwOXzU6g505Fh2sxMP7?=
 =?us-ascii?q?a0d0/TQR5l/+qhtRxeNkLRj/UmHDpAi2bjc4UoSQLB1T7gta/UfaLdSe7v5vHy?=
 =?us-ascii?q?Ff5pCgrAuNKnGCZwRVF24JXFaIB0vkPrmo6tnN6OyYBuu4L/vTbrSCs+1eV/GU?=
 =?us-ascii?q?xZ2x1otq5SqDNsKKPnN6Ff00xlJDXWxlG8TegzgPSzIYlyPOb86YpRew4C53rt?=
 =?us-ascii?q?q48PTkRg3v/5aPC6BJPNVr+hC2h7qDNuGKiCZ4LzZYyo0DxXvSxLcD214Sjjlk?=
 =?us-ascii?q?dyOxHrQYqS7NUKXQl7dNAB4GcCxzLtVH7qIm0glJOM7Wkdf11r9+jv4oBFZJT1?=
 =?us-ascii?q?3hmse1ZcMUJ2GxLk/IBEGONL6ePz3E39n3Yb+gSb1XlOhUqxywuTOBH0D/JDiM?=
 =?us-ascii?q?iznpWA6pMexXiCGbPRpeuJyycxp3CGjjSs7mZQO/MNNtkTI2xrg0jGvQNWEAKT?=
 =?us-ascii?q?h8b19NrrqI4CJYmPp/HWlB7ntjLeacmieZ7/PXKpAZsfZwBiR0luRa4Gk1yrdP?=
 =?us-ascii?q?7SFEQuB1lzXWrtJ0v16mleyPmXJbV09CpyhKj4+Xp0hvEbvW+4MGWnve+h8Jq2?=
 =?us-ascii?q?KKBFBCo9pjF82quK1KzNXLvLz8JS0E8N/O+8YYQc/OJ5GpKn0kZCDuEnb0AREf?=
 =?us-ascii?q?TDikfTXFgEZduPKf7HuYqt49sJe6y8lGcaNSSFFgTqBSMU9iBtFXZc4vBj4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADDKwhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBJfiy+CIZc4gXMSAQEYEwGHUyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpL4I2JAGCaQIkCwFGBgkCPhIDMQEFASMSBYMcggIFmm08jAkzFIoWE?=
 =?us-ascii?q?oddhC8XgUA/gRGNbgKLIoQTfJAlCYIkjxMLGIlgh04BLIhdj04CBAIEBQIFDyG?=
 =?us-ascii?q?BJYINTTAIgyeCJxeOPCEygQUBAYpSAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAADDKwhch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBJfiy+CIZc4gXMSAQEYEwGHUyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2J?=
 =?us-ascii?q?AGCaQIkCwFGBgkCPhIDMQEFASMSBYMcggIFmm08jAkzFIoWEoddhC8XgUA/gRG?=
 =?us-ascii?q?NbgKLIoQTfJAlCYIkjxMLGIlgh04BLIhdj04CBAIEBQIFDyGBJYINTTAIgyeCJ?=
 =?us-ascii?q?xeOPCEygQUBAYpSAQE?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="65497841"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 05 Dec 2018 11:53:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729003AbeLETxD (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 14:53:03 -0500
Received: from mail-oi1-f195.google.com ([209.85.167.195]:37455 "EHLO
        mail-oi1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728736AbeLETvK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 14:51:10 -0500
Received: by mail-oi1-f195.google.com with SMTP id y23so18657580oia.4;
        Wed, 05 Dec 2018 11:51:09 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=64JnrfkdMgu2EPsvD7FnBPzsb1bi6pVhE4y3hEeScxc=;
        b=mqjDfWdVbSw45pQziyZXy2CgJWYzD0ANgBTFYhbPCITKaMXsx8NJ/9nIHHqIzwlJ9V
         U0uOCiMFO7LYxY8LePnuvCXcElCE5d7UMhWSxiasOiWl7BBWTPVUj1o8L9RFLZzQodCy
         vgvxOoqVb4DpOizAPdTexV0RHp8bnzBfOuuNXMMZTx0YaKVpRFmyyfN0Z5z0/jXCzNhr
         AOasw0QvzNhKbtpExMpqPnDOjRFYNvXMxaTCUuI3Qexwwv/cEoLluzvbYXSS+/A3SHVX
         iNps5A8Og3CN2Rg5curDngsWHCVk/tCa2/hU5VHDKO+1V71HKKyJW4bKuDjE02jUUaE4
         xh/Q==
X-Gm-Message-State: AA+aEWb2yYzPgnOmgbEU7If7VyqOj59w58g7Dx2+F2P2QR4zmMWt1TEw
        zVfMHi4TJcKvpXB1dlnSFUUISLk=
X-Google-Smtp-Source: AFSGD/W/EwhKzUtm1rBCuJBtyUCihNFA3awqJp1TXimm1xKv2T1MnxZ+AgBUJEFdllwDhZA0hL5bFg==
X-Received: by 2002:aca:aad8:: with SMTP id t207mr14705306oie.90.1544039468996;
        Wed, 05 Dec 2018 11:51:08 -0800 (PST)
Received: from xps15.herring.priv (24-155-109-49.dyn.grandenetworks.net. [24.155.109.49])
        by smtp.googlemail.com with ESMTPSA id k13sm25759879otj.19.2018.12.05.11.51.07
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 05 Dec 2018 11:51:08 -0800 (PST)
From: Rob Herring <robh@kernel.org>
To: devicetree@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: "David S. Miller" <davem@davemloft.net>,
        Claudiu Manoil <claudiu.manoil@nxp.com>,
        Grygorii Strashko <grygorii.strashko@ti.com>,
        Wingman Kwok <w-kwok2@ti.com>,
        Murali Karicheri <m-karicheri2@ti.com>, netdev@vger.kernel.org,
        linux-omap@vger.kernel.org
Subject: [PATCH] net: Use of_node_name_eq for node name comparisons
Date: Wed,  5 Dec 2018 13:50:32 -0600
Message-Id: <20181205195050.4759-16-robh@kernel.org>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Convert string compares of DT node names to use of_node_name_eq helper
instead. This removes direct access to the node name pointer.

For instances using of_node_cmp, this has the side effect of now using
case sensitive comparisons. This should not matter for any FDT based
system which all of these are.

Cc: "David S. Miller" <davem@davemloft.net>
Cc: Claudiu Manoil <claudiu.manoil@nxp.com>
Cc: Grygorii Strashko <grygorii.strashko@ti.com>
Cc: Wingman Kwok <w-kwok2@ti.com>
Cc: Murali Karicheri <m-karicheri2@ti.com>
Cc: netdev@vger.kernel.org
Cc: linux-omap@vger.kernel.org
Signed-off-by: Rob Herring <robh@kernel.org>
---
 drivers/net/ethernet/amd/sunlance.c      | 4 ++--
 drivers/net/ethernet/freescale/gianfar.c | 4 ++--
 drivers/net/ethernet/sun/sunhme.c        | 2 +-
 drivers/net/ethernet/ti/cpsw.c           | 4 ++--
 drivers/net/ethernet/ti/netcp_ethss.c    | 4 ++--
 5 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/amd/sunlance.c b/drivers/net/ethernet/amd/sunlance.c
index b4fc0ed5bce8..91c9140d2a52 100644
--- a/drivers/net/ethernet/amd/sunlance.c
+++ b/drivers/net/ethernet/amd/sunlance.c
@@ -1486,9 +1486,9 @@ static int sunlance_sbus_probe(struct platform_device *op)
 	struct device_node *parent_dp = parent->dev.of_node;
 	int err;
 
-	if (!strcmp(parent_dp->name, "ledma")) {
+	if (of_node_name_eq(parent_dp, "ledma")) {
 		err = sparc_lance_probe_one(op, parent, NULL);
-	} else if (!strcmp(parent_dp->name, "lebuffer")) {
+	} else if (of_node_name_eq(parent_dp, "lebuffer")) {
 		err = sparc_lance_probe_one(op, NULL, parent);
 	} else
 		err = sparc_lance_probe_one(op, NULL, NULL);
diff --git a/drivers/net/ethernet/freescale/gianfar.c b/drivers/net/ethernet/freescale/gianfar.c
index 3c8da1a18ba0..7b5f08725b5b 100644
--- a/drivers/net/ethernet/freescale/gianfar.c
+++ b/drivers/net/ethernet/freescale/gianfar.c
@@ -720,7 +720,7 @@ static int gfar_of_group_count(struct device_node *np)
 	int num = 0;
 
 	for_each_available_child_of_node(np, child)
-		if (!of_node_cmp(child->name, "queue-group"))
+		if (of_node_name_eq(child, "queue-group"))
 			num++;
 
 	return num;
@@ -838,7 +838,7 @@ static int gfar_of_init(struct platform_device *ofdev, struct net_device **pdev)
 	/* Parse and initialize group specific information */
 	if (priv->mode == MQ_MG_MODE) {
 		for_each_available_child_of_node(np, child) {
-			if (of_node_cmp(child->name, "queue-group"))
+			if (!of_node_name_eq(child, "queue-group"))
 				continue;
 
 			err = gfar_parse_group(child, priv, model);
diff --git a/drivers/net/ethernet/sun/sunhme.c b/drivers/net/ethernet/sun/sunhme.c
index 863fd602fd33..ff641cf30a4e 100644
--- a/drivers/net/ethernet/sun/sunhme.c
+++ b/drivers/net/ethernet/sun/sunhme.c
@@ -2691,7 +2691,7 @@ static int happy_meal_sbus_probe_one(struct platform_device *op, int is_qfe)
 	sbus_dp = op->dev.parent->of_node;
 
 	/* We can match PCI devices too, do not accept those here. */
-	if (strcmp(sbus_dp->name, "sbus") && strcmp(sbus_dp->name, "sbi"))
+	if (!of_node_name_eq(sbus_dp, "sbus") && !of_node_name_eq(sbus_dp, "sbi"))
 		return err;
 
 	if (is_qfe) {
diff --git a/drivers/net/ethernet/ti/cpsw.c b/drivers/net/ethernet/ti/cpsw.c
index 500f7ed8c58c..aeb599f230ab 100644
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@ -3144,7 +3144,7 @@ static int cpsw_probe_dt(struct cpsw_platform_data *data,
 		const __be32 *parp;
 
 		/* This is no slave child node, continue */
-		if (strcmp(slave_node->name, "slave"))
+		if (!of_node_name_eq(slave_node, "slave"))
 			continue;
 
 		slave_data->phy_node = of_parse_phandle(slave_node,
@@ -3240,7 +3240,7 @@ static void cpsw_remove_dt(struct platform_device *pdev)
 	for_each_available_child_of_node(node, slave_node) {
 		struct cpsw_slave_data *slave_data = &data->slave_data[i];
 
-		if (strcmp(slave_node->name, "slave"))
+		if (!of_node_name_eq(slave_node, "slave"))
 			continue;
 
 		if (of_phy_is_fixed_link(slave_node))
diff --git a/drivers/net/ethernet/ti/netcp_ethss.c b/drivers/net/ethernet/ti/netcp_ethss.c
index 0397ccb6597e..bfde91ca5df7 100644
--- a/drivers/net/ethernet/ti/netcp_ethss.c
+++ b/drivers/net/ethernet/ti/netcp_ethss.c
@@ -3621,7 +3621,7 @@ static int gbe_probe(struct netcp_device *netcp_device, struct device *dev,
 		return -EINVAL;
 	}
 
-	if (!strcmp(node->name, "gbe")) {
+	if (of_node_name_eq(node, "gbe")) {
 		ret = get_gbe_resource_version(gbe_dev, node);
 		if (ret)
 			return ret;
@@ -3635,7 +3635,7 @@ static int gbe_probe(struct netcp_device *netcp_device, struct device *dev,
 		else
 			ret = -ENODEV;
 
-	} else if (!strcmp(node->name, "xgbe")) {
+	} else if (of_node_name_eq(node, "xgbe")) {
 		ret = set_xgbe_ethss10_priv(gbe_dev, node);
 		if (ret)
 			return ret;
-- 
2.19.1

