Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:58:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 47D0358052C;
	Wed,  5 Dec 2018 11:52:45 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 11:52:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AQWCrKhJbTcJMaKMorNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvn+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIAOUPMv1Yr5H/qlYVsRezBhOhCP/1xzNUmnP727Ax3eQ7EQHB2QwtB84AsH?=
 =?us-ascii?q?PPo97oNqkdT/q1zLPJzTXFYPNdxDDw6JLPch86ofGBRrFwftTLyUkpCQzFik+c?=
 =?us-ascii?q?qYv/PzOaz+kAtXWQ4el4Ve+3lWIrtwV8riKyysoilIXFnJ8Zx1PY+SljwYs4J8?=
 =?us-ascii?q?W0RFB0bNK+DZddtyGXO5FrTs8+R2xkoik3x7kAtJWmZiYF0o4nyATaa/Gfc4iH?=
 =?us-ascii?q?/BbjVOGJLDdmi3JqZqi/iwyx8Ue+0O38UNe70FJQoipCiNnMuWgB1x3V6seZVv?=
 =?us-ascii?q?tw5lmt1SqL2gzJ9+1JL144mbDGJ5Mi3rI8jJsevEbbEi/zgkr2jauWdks++uiv?=
 =?us-ascii?q?7uTqerHmpp6aN49phQDyK6culdKlAeQ+LAcOW3GX+eOy1b3l40L5Wq5HjuM5kq?=
 =?us-ascii?q?bHqpDWP8cbqbCjAw9TzIkj7wyzDzC80NQXhXUHNk5KeAqbj4j1PFHDOPT4Dfa8?=
 =?us-ascii?q?g1uyijtqyO3GM6blApXMKHjDjbjgcax8605a1Ao809Rf64hIBbEGJfL5QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNVn2YMfRWKAGKiZPLnSsV+V/O0vJeaMaZQRuDb8Lfgl+vHv?=
 =?us-ascii?q?gWU4mV8bYammw58XZGqkEfRhJkWTeWDsjcsZEWcWogo+S/TniF+FUTFNfXqyXK?=
 =?us-ascii?q?U85jc9CIKhForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2rgD60LpnLu3X+iECr5Lsztp16vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83NZ3GwOx8EdzyXgPBcc2PSFap?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5klYpWNVPOnO8iq5/7QfTAZXJnFufl6qtcaQc3yvN9GOYwGqKvUFYVhNwUKrf?=
 =?us-ascii?q?UXAeYEvWscr25kfYQ7CyDrQnNxNLydSeJatSdt3pkVJGSe/+N9vEfWK+hX28BR?=
 =?us-ascii?q?aSybOKd4rlZWMd0T7ZCEgFlQAT4HmHORI/Bienv2LREjhuGUjzbEPr9Ol0sGm7?=
 =?us-ascii?q?QVMszwGWc01h0KK4+gIUhfyZTPMTwrIEuSc7pzVoBlq92MjWC96Bpwpnc6VRet?=
 =?us-ascii?q?c94FZB1WLEuA1xJJ2gL6Z+hlEAdwR7pV/h1xJyCo9Yi8glsGsqzBZuKaKfyF5O?=
 =?us-ascii?q?bTeY0o7/O7LJKmj+5guga7PL1V7E1taW+aAP6OojplXnvQGpEFci8np939lU1X?=
 =?us-ascii?q?uc+ovFDA4IXZ3tVUY38gBwp6vGbSkl+4PUyXpsPLG0sz/fwd4mGPEpyxegf9hF?=
 =?us-ascii?q?NqOEGxT/E8kbB8ioNewrlEKlbhMCPOBO6qE0O9mqeOeB2K6uJOxghi6pjXxb4I?=
 =?us-ascii?q?Bh1UKB7zB8Su/U0Jkf2fGXwwyHWy36jFi/qMD3mJlIai0IEWq71CfrGpRRZqp0?=
 =?us-ascii?q?fYsQDWeuIsu3xshxhpL3Wn5Y8kKjCE0C2MOzZRWSaFn91xVK1UsLuXynhTe4zz?=
 =?us-ascii?q?tsnjApr6qTxizPz/75dBoaPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreCYdRA6IkrsSVUV+Swe0uaRaT+oxsZ0iPjGX?=
 =?us-ascii?q?VRxDYgejGuu5X5mQF6iW2HIHZyqnrZZd9/xRPF6NPAQv5R2yIMRDNkhjnPGli8?=
 =?us-ascii?q?I96p8M2UlpjZteCyTWChVpxVcSTwyYOAtS275XBlABGlnvCznMHnHhY+0SPhy9?=
 =?us-ascii?q?ZqUiDIpg7mYob3z6S6Lf5nfk5wCV//8cV6G5tykosthJ4K33gaiY6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwic978FJCK?=
 =?us-ascii?q?iO9rBFkzV6okGkrQ3Pe/hyhSkSyeEh6HMBh+EJuQwtzjiSA7wIHElYOzDsmAqM?=
 =?us-ascii?q?79yksKpXY2Ove6Cq1EVihdChEK2CogZEVXblfZciGDV878RlP1LKzX3z8ZrkeN?=
 =?us-ascii?q?jLYNIXtx2UlQrAjudPJJIwkPoKmTRoOWbnsXI5zO47iARk3Yums4ifN2Vt4KW5?=
 =?us-ascii?q?DwZDOTLvYMMT/iztgbxansaLxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPJnkW19BiSweGJEBFnAAYRjY6noM6FgC3wszu?=
 =?us-ascii?q?alx56ysV5l75rBtM1+1pOwP+UmfZuAendDM0RIKDIxpR6wFI/13VPtCG7uJvAy?=
 =?us-ascii?q?FY+YWsrQyKKmyGfgRIEHsGWkqeC1D4Obmu49bA/vOcBuq/KfvOfLqPpfZfV/eO?=
 =?us-ascii?q?2ZKgzI9m8yyQOcWIO3loF+c71VZbXXBlB8TZnC0CSywJmCLMbM6bpxa89jd0rs?=
 =?us-ascii?q?Cl9/TrVxzg5ZGSC7tJKthv/xG2gaGeN++fnip5KDBY1o8Syn/M0rQQwFkSiyR2?=
 =?us-ascii?q?fTm3DbsArTLNTL7XmqJPFREbdjh8NNFW4KM8xAVNPc/bh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZtwGxuTaeCUPsIi6P?=
 =?us-ascii?q?mCXpVx+xN+FBlyWbPB1YuIGgfRdhE2njTNT6ahKlNN97lyE5wboxhnnSL24TLS?=
 =?us-ascii?q?B8c19Rrr2X9S5Zgu9wG2pE7npkK+mLgyeY7+nCJZYQvvtmGSB0l+Nc4HQnxLpZ?=
 =?us-ascii?q?9iBERPppmCTMqt5iuU2pku6KymkvbB0bpjtVhYmGoV9vNI3H+ZRaH3XJ5hQA6S?=
 =?us-ascii?q?OXERtO799kDMD//qNd0N7CkIrtJzpYtdHZ580RA47TMs3UHmAmNE/THzScLAYf?=
 =?us-ascii?q?Vz+tOimLnUtXkNmR+2eTo5x8rYLjzsldAoRHXUA4Q6tJQn9uG8YPddIuBmsp?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABILAhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBJfiy+CIZc4FIFfEgEBGBMBh1MiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKS+CNiQBgmUEAiQLAUYGCQI+EgMlDAEFASMSBYMcggIFmms8jAkzF?=
 =?us-ascii?q?IoWEoddhC8XgUA/gRGHfIVyAosihBN8kCUJgiSLAIQTCxiJYIdOASyIXY9OAgQ?=
 =?us-ascii?q?CBAUCBQ8hgSWCDU0wCIMngicXjjwhMoEFAQGKUgEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAABILAhch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBJfiy+CIZc4FIFfEgEBGBMBh1MiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CN?=
 =?us-ascii?q?iQBgmUEAiQLAUYGCQI+EgMlDAEFASMSBYMcggIFmms8jAkzFIoWEoddhC8XgUA?=
 =?us-ascii?q?/gRGHfIVyAosihBN8kCUJgiSLAIQTCxiJYIdOASyIXY9OAgQCBAUCBQ8hgSWCD?=
 =?us-ascii?q?U0wCIMngicXjjwhMoEFAQGKUgEB?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="53991874"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 11:52:32 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728935AbeLETvx (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 14:51:53 -0500
Received: from mail-oi1-f193.google.com ([209.85.167.193]:39597 "EHLO
        mail-oi1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728510AbeLETv0 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 14:51:26 -0500
Received: by mail-oi1-f193.google.com with SMTP id i6so18622139oia.6;
        Wed, 05 Dec 2018 11:51:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=qMVKbQQ2IkPQlwBHD7jq1zN5axWgXmiq34kQVyq7TYw=;
        b=AnpmeeSCMH+NrlvZY0xDRjXfUFkmNsSRcVGbbWT2XuGm/0lIDt+/fnA1dLI1ZjJhw+
         UeBdbSfKp2U5ggQQILqYlRGiV8pe033NDoXa2Ydpamm6Ils/doTwyGaSQupOogU0mOCr
         pu9SneqtJFSLl+mzD7mXx+V9wpIA4/0pInUczqZEAulZQSCElkJiqvMIS4xm4o3aOV0P
         H+9IIx4+fqvTLVeGMBsmfYGjGnvVUA0dVf864Me8YbAxw852xkGWqliFR9p4Bfy7ATV+
         7vmb4SZoOFco4FSoYASVKz3iRHgud+pcBMFEx7i99FlwcgpLV90D0/MdK2HFdlKTK06W
         JJ0w==
X-Gm-Message-State: AA+aEWa9mu7UTiLJSX6IilZaw2Y1J+PwpKZLU9sx4MrFdo7Q1dWqlLJj
        tNBAl9XPf26FSQx1Zauc4exvsu+tcA==
X-Google-Smtp-Source: AFSGD/WdroYapRHGtB0zgN2RHLmwEfNnpn29lkyPbXz+aqb5/YoJqwR5izMRaf1JxojWo4ircDNR9g==
X-Received: by 2002:aca:b642:: with SMTP id g63mr14811654oif.195.1544039485103;
        Wed, 05 Dec 2018 11:51:25 -0800 (PST)
Received: from xps15.herring.priv (24-155-109-49.dyn.grandenetworks.net. [24.155.109.49])
        by smtp.googlemail.com with ESMTPSA id k13sm25759879otj.19.2018.12.05.11.51.24
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 05 Dec 2018 11:51:24 -0800 (PST)
From: Rob Herring <robh@kernel.org>
To: devicetree@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: Johannes Berg <johannes@sipsolutions.net>,
        Jaroslav Kysela <perex@perex.cz>,
        Takashi Iwai <tiwai@suse.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>,
        linuxppc-dev@lists.ozlabs.org, alsa-devel@alsa-project.org
Subject: [PATCH] ALSA: Use of_node_name_eq for node name comparisons
Date: Wed,  5 Dec 2018 13:50:46 -0600
Message-Id: <20181205195050.4759-30-robh@kernel.org>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Convert string compares of DT node names to use of_node_name_eq helper
instead. This removes direct access to the node name pointer.

A couple of open coded iterating thru the child node names are converted
to use for_each_child_of_node() instead.

Cc: Johannes Berg <johannes@sipsolutions.net>
Cc: Jaroslav Kysela <perex@perex.cz>
Cc: Takashi Iwai <tiwai@suse.com>
Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Cc: Paul Mackerras <paulus@samba.org>
Cc: Michael Ellerman <mpe@ellerman.id.au>
Cc: linuxppc-dev@lists.ozlabs.org
Cc: alsa-devel@alsa-project.org
Signed-off-by: Rob Herring <robh@kernel.org>
---
 sound/aoa/fabrics/layout.c       | 2 +-
 sound/aoa/soundbus/i2sbus/core.c | 6 +++---
 sound/ppc/pmac.c                 | 4 ++--
 sound/ppc/tumbler.c              | 4 ++--
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/sound/aoa/fabrics/layout.c b/sound/aoa/fabrics/layout.c
index 3a23fd032611..8797d42e2b76 100644
--- a/sound/aoa/fabrics/layout.c
+++ b/sound/aoa/fabrics/layout.c
@@ -776,7 +776,7 @@ static int check_codec(struct aoa_codec *codec,
 	struct codec_connection *cc;
 
 	/* if the codec has a 'codec' node, we require a reference */
-	if (codec->node && (strcmp(codec->node->name, "codec") == 0)) {
+	if (of_node_name_eq(codec->node, "codec")) {
 		snprintf(propname, sizeof(propname),
 			 "platform-%s-codec-ref", codec->name);
 		ref = of_get_property(ldev->sound, propname, NULL);
diff --git a/sound/aoa/soundbus/i2sbus/core.c b/sound/aoa/soundbus/i2sbus/core.c
index bd7c5029fc59..c3f57a3fb1a5 100644
--- a/sound/aoa/soundbus/i2sbus/core.c
+++ b/sound/aoa/soundbus/i2sbus/core.c
@@ -154,7 +154,7 @@ static int i2sbus_add_dev(struct macio_dev *macio,
 			  struct device_node *np)
 {
 	struct i2sbus_dev *dev;
-	struct device_node *child = NULL, *sound = NULL;
+	struct device_node *child, *sound = NULL;
 	struct resource *r;
 	int i, layout = 0, rlen, ok = force;
 	char node_name[6];
@@ -177,8 +177,8 @@ static int i2sbus_add_dev(struct macio_dev *macio,
 		return 0;
 
 	i = 0;
-	while ((child = of_get_next_child(np, child))) {
-		if (strcmp(child->name, "sound") == 0) {
+	for_each_child_of_node(np, child) {
+		if (of_node_name_eq(child, "sound")) {
 			i++;
 			sound = child;
 		}
diff --git a/sound/ppc/pmac.c b/sound/ppc/pmac.c
index 48dd44f8e914..d692e4070167 100644
--- a/sound/ppc/pmac.c
+++ b/sound/ppc/pmac.c
@@ -908,7 +908,7 @@ static void detect_byte_swap(struct snd_pmac *chip)
 
 	/* if seems that Keylargo can't byte-swap  */
 	for (mio = chip->node->parent; mio; mio = mio->parent) {
-		if (strcmp(mio->name, "mac-io") == 0) {
+		if (of_node_name_eq(mio, "mac-io")) {
 			if (of_device_is_compatible(mio, "Keylargo"))
 				chip->can_byte_swap = 0;
 			break;
@@ -1313,7 +1313,7 @@ int snd_pmac_new(struct snd_card *card, struct snd_pmac **chip_return)
 	} else if (chip->is_pbook_G3) {
 		struct device_node* mio;
 		for (mio = chip->node->parent; mio; mio = mio->parent) {
-			if (strcmp(mio->name, "mac-io") == 0) {
+			if (of_node_name_eq(mio, "mac-io")) {
 				struct resource r;
 				if (of_address_to_resource(mio, 0, &r) == 0)
 					chip->macio_base =
diff --git a/sound/ppc/tumbler.c b/sound/ppc/tumbler.c
index 0779a2912237..6d7ffffcce95 100644
--- a/sound/ppc/tumbler.c
+++ b/sound/ppc/tumbler.c
@@ -1365,8 +1365,8 @@ int snd_pmac_tumbler_init(struct snd_pmac *chip)
 	mix->anded_reset = 0;
 	mix->reset_on_sleep = 1;
 
-	for (np = chip->node->child; np; np = np->sibling) {
-		if (!strcmp(np->name, "sound")) {
+	for_each_child_of_node(chip->node, np) {
+		if (of_node_name_eq(np, "sound")) {
 			if (of_get_property(np, "has-anded-reset", NULL))
 				mix->anded_reset = 1;
 			if (of_get_property(np, "layout-id", NULL))
-- 
2.19.1

