Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:01:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6958D580375;
	Wed,  5 Dec 2018 16:02:42 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 16:02:42 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Af16eJRdbBajHWVfOYo5hN1wylGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/Yh2N2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJtgqxVoxWvqB5xw4Hbb4+VL+J+c6HGcN8GRmdMRNpdWjZdDo+g?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YAqhq+BQqyC+jyzDFHmGX50rE60+88FgzG2Q0gH9EQv3?=
 =?us-ascii?q?jOqNX6Kr0dXvy1zKTTyTXDbvVW1i3n6IjPaBwhpuuMXb1pfMfX1EIhFBvFg02O?=
 =?us-ascii?q?pYD5Oz6ZzPkBvmaF4+Z6SO6iiHIrpxtwrzWt3ssglJPGip4Jxl3B6yl0zpo6KN?=
 =?us-ascii?q?29RUN6YtOoDZtduiSUOoZyXs8uXmRltzo0yrEap5G2eTUGxZY8yBHCbvGHfYeF?=
 =?us-ascii?q?7gzjWeuULzd3nm5qdby5ih2v60av0Pf8WdOx0FtSripKjN3MtncV2hzN5ciIVO?=
 =?us-ascii?q?F98l2i2TmRzQDT7P9LIUQumarcMZ4hzaY8lpsVsUvdAi/7gFv6gLOSe0k+5+Sl?=
 =?us-ascii?q?5frrbq/7qpKfK4N4kADzP6Y2lsy6G+s4MwwOX2aB+eS70b3u5Un5QLRMjv0rna?=
 =?us-ascii?q?jVqZPaKtoBpq6/HQBV1p8v6xGxDjegztsYh2IKLExKeB2ZlYjlIVLOL+7iDfe5?=
 =?us-ascii?q?nVuslC1nx/fcPr3uGpnNNGTMkK/9fbZh7E5R0A4zzdFc551KEL0AL+/zV1T1tN?=
 =?us-ascii?q?zZCB85LgO1z/zmCNV7yoMRR2aPDrWFP6PVtF+C/vgvLPWUZI8JpDb9LOAo5/70?=
 =?us-ascii?q?gn84hV8SZ66p0YEXaHClBPtmJUqZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYKsFZ3DSZy1gLydwCe7GYVbZmJBCl+SC3vodIKEW/EKaCKVOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVVW50hW?=
 =?us-ascii?q?MIRzg13Kxlu0xy0FWD3LN8g/xZE9xT+vxIXh07NZ7a0+x1FdTyVhjdcdeOTVas?=
 =?us-ascii?q?Ws+mDi0pTtIt398OZF5wG9a4gRDFxSaqB74VmKaNBJw76a/c23nxJ8Bgy3fJzq?=
 =?us-ascii?q?Uhjl8mQtdROm2inKJw6w/TB4vRmUWDi6mqbbgc3DLK9Gqb0GWBpl9YXxBqXaXF?=
 =?us-ascii?q?R38fYFDWosr/5k/FS7+uCrEnMg9axM6GK6tKbMDpjFpcSPfiPtTef3y+m2OqCR?=
 =?us-ascii?q?mUwbOMaZLge38B0yXFFEgEjwcT8G6bOgckGCeuvXjSDDx0GlLpeEPj7+9+pWi/?=
 =?us-ascii?q?Tk81yQGKckJg26C0+h4TmfyTVfcT0qgYtycmrjV+BEy90M7OC9qcuwphe71RYc?=
 =?us-ascii?q?884FdC0mLZqwx9P5y6I6B+nFIedB53v0fv1xVxBYVNiswqrHIszApvJqOUylJB?=
 =?us-ascii?q?dzWE3Z/uPr3bMHX9/Beqa6TOwFHRzM6W+rsT6PQ/s1jspgWpGVQt8np509hZyW?=
 =?us-ascii?q?CT5ojXAwUIV5LxUUE39wZhqrHeYyk94Z7U1HJ2Pam1tD/Cx8wmBO8/xhm8eNdf?=
 =?us-ascii?q?NbuOFBXuHM0CG8iuNOsqlkCpbxIZJuxd6LQ4PsKmd/Sc3q6rM/1tnDanjWRB/Y?=
 =?us-ascii?q?B83ViA9yt6Su7UwZkFx+uU0ReAVzf5lF2hqNz4mZhYZTEOGWqy0TLkBI9NaaJo?=
 =?us-ascii?q?Z4YEFGCuL9exxtpgnZ7tWmdU+0K5CFMCxcCmZwCSb1v73QBL0UQXoHqnmTa3zj?=
 =?us-ascii?q?BukjEpqLaf0zLKw+j4aBUHPWtLTnF4jVjwOYi0k8waXE+wYgkplRup/0b7y7JA?=
 =?us-ascii?q?pKRiKWneWkNIfynwL2F/Xaq8rLuCY8hT6Jw2tSVbSvizYVefSrTluRsVzzvjH3?=
 =?us-ascii?q?dCxDA8bzyquI/2nwZ5iGKeK3Z/tmHZdttzxRfc5dzcQ+Be3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XnEAcg1i/3zd?=
 =?us-ascii?q?tqVSTOrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXoOXzELwsTZ4Aj42EJ5KHKJyJn0VnGcwstnetm7bXka2iM778BWFq?=
 =?us-ascii?q?iU6KZIkjdyolq9tQjRe+Ryni8Byfsy734Xm+QJuAsuziqHGLwTE1dXPTfwlxuW?=
 =?us-ascii?q?9dCxt7tYZHygcbWr0Ep+nNahDKyNow1GWXb5fIsiEjF07sllLF3M13jz4Jn+eN?=
 =?us-ascii?q?bMddITqgGUkxDYguhJL5Ixk+AGhCt9NmL7oH0l0PU7jR110JG+vYiHLXht/a2j?=
 =?us-ascii?q?Dh5ZMD31e90c+jX3galCmcaW2pilHo99FTUTQJvoUfWoHSoJuvv9MAaOFCA8pm?=
 =?us-ascii?q?2fGbrCBgKf7EZmr3TSE5GkLX2XJX8Zzcl8SxmZPkBQnAcUXDAilJ4jCg+q3NDh?=
 =?us-ascii?q?cFt+5j0J5F73sB5MxfxzNxXlTmfTvgSoaio3SJiCKhpZ9BpC6lzRMcyf6OJzAi?=
 =?us-ascii?q?5Z8oegrAyLNmyUeQBIAXsVVUyDAlDpJqOu6sXY8+iEGuq+KOPDYLWJqexDTveI?=
 =?us-ascii?q?2Iig0o188zaXMcWPOHZiAuY/2kpCW3B5BsvYly8OSywRiyLCccqbqA2g9S1wq8?=
 =?us-ascii?q?C16O7rVx735YuTF7tSNs1i+xCojqeCNO6Qhyd5JSxb1pMWwn/Ix6YQ3EQPiyF1?=
 =?us-ascii?q?bDStFbUAtSjQTKPfgKNXDhgbaz9tO8tM9a4zwg5NOcvDgNPvyrF4luI1C0tCVV?=
 =?us-ascii?q?H5gM6peNcFI3ujO1LHHkqLMLWGKCbPw8H2Z6O8VLJRgP9Vtx22pTaUDUvjMi6f?=
 =?us-ascii?q?mDnuUhClKftMgz2DPBxCpIG9dQ5gCXTiTNLjcBG0LMV7giE2wbIqgHPHLmocMT?=
 =?us-ascii?q?l6c0NQobyc9yJYgvNjG2Nf6nppN/WLmyGc7+PAMJYZreNrAjhol+Jd+Hk7y6Fa?=
 =?us-ascii?q?7CdBRPx0nivdtt9vo1G8nemJxTpqSx5OqjdNhIKWskRuI6TZ9p9cWXna+BIB93?=
 =?us-ascii?q?mfCxMPp4gtNtq6vqFTx57Lmav4KB9G8tTd58xaANLbbIqDMXw8ITLgAjvQDQ0Y?=
 =?us-ascii?q?XXisL26Zmk8Z2PqV7HCOr5c6trDomYESUflfVVo8DPRcDV5qWJQGIZFqTnYti7?=
 =?us-ascii?q?vej8MS43e6hB3QX9lB+JHBWOibDfjmJHCel7YALx8Jx67oaIceLIv232R8ZVRg?=
 =?us-ascii?q?2ofHAUzdWZZKuCIyQBUzpRBo8XtzBkk+0knlIleo4XweU/q5lxU2og9/Z+0383?=
 =?us-ascii?q?Hr+VhhdQmCnzc5jERkwYatujuWajOkdKo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAAFZghch0O0hNFaCh0BAQUBBwUBg?=
 =?us-ascii?q?VEIAQsBgTCCOxUSjBKMDYIhlziBcxIBARgTAYdTIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2IoJlAwMBAiQLAQ0BATcBBQkBARw0AzEBBQECDA4HEgWDHIICA?=
 =?us-ascii?q?QSaRjyKHYFsM4J2AQEFhykIEoddgxOBHIFXP4ERgmSFBIYGiTGXJwcCgiAEjxM?=
 =?us-ascii?q?LGIFbiAU2hxmJCYEDjksCBAIJAgUPIYElgg0zGjCDL4IbDBcSiEyFP0AygQQBA?=
 =?us-ascii?q?QGKUgEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAAAFZghch0O0hNFaCh0BAQUBBwUBgVEIAQsBgTCCOxU?=
 =?us-ascii?q?SjBKMDYIhlziBcxIBARgTAYdTIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2I?=
 =?us-ascii?q?oJlAwMBAiQLAQ0BATcBBQkBARw0AzEBBQECDA4HEgWDHIICAQSaRjyKHYFsM4J?=
 =?us-ascii?q?2AQEFhykIEoddgxOBHIFXP4ERgmSFBIYGiTGXJwcCgiAEjxMLGIFbiAU2hxmJC?=
 =?us-ascii?q?YEDjksCBAIJAgUPIYElgg0zGjCDL4IbDBcSiEyFP0AygQQBAQGKUgEB?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="54732866"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 16:02:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728967AbeLFACj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 19:02:39 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:35842 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728895AbeLFACg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 19:02:36 -0500
Received: by mail-wr1-f68.google.com with SMTP id u3so21459139wrs.3
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 16:02:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=PNmL/AdZMFDm2CB5drDSBkoW5xhj23+00GAIyKewIVI=;
        b=VUPgnCIp6r7k5KBwRwMFL8puawcIoULPgPs+UA+EbBqAVd4TX8Ezif3EHUi19sFbaZ
         xaBLQbu9jsZkdKHy9cVsqNPfYmVOawXh/HmnLvC3k5hMe5IOVcfqLKQMODiZIslmqnaz
         MpR6a3HBqZ3aIXbna9ApQA6NT2/RdPsNslszo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=PNmL/AdZMFDm2CB5drDSBkoW5xhj23+00GAIyKewIVI=;
        b=BHsOlfbpz0WG9Rwrbjmtz1p/KdaEy6nj1vglYJW3Nv+uiwUzOV/GGHqjRrRm0puYHV
         C3vTk4IfZ2Iz/VRwsbtb54y2c3AEBSAjbT57UvZ7oo+5uGbhpXzBCsV5BcE3ams1osPS
         SUNFRxPbM9HrATxwnHMVgJX0QfRfs988pTHp1wu0tgYNcu9zna+k994OoY2ObSZjFQ2N
         1hrAaOprj4U/sll6pEXBzLer3Qo75dCypjKt9hdZIiDGzAHyDfBtViLsvz3+qGeDY1uG
         dkyaqOg07rj9WhsfHnL5lY2k/OlFxOz4GtN6FxBU40t6X8dAaUkmMC+z++rfDXeR12KU
         jMVw==
X-Gm-Message-State: AA+aEWbN8aSc7EF/9hqDwHt9dnQuIUK13aoIZ98aUBNon4w2mEb6SCeH
        fcldV8nCuxwSLN2qP6TABa/zzQ==
X-Google-Smtp-Source: AFSGD/V98pJYm32wntA9huPcTYQly4vyIPUo0SFxowhv1als3SdC6v3/1XxemxpiOxo3+jal/a75qg==
X-Received: by 2002:adf:8323:: with SMTP id 32mr22410873wrd.176.1544054553692;
        Wed, 05 Dec 2018 16:02:33 -0800 (PST)
Received: from linaro.org ([2a00:23c5:6815:3901:cf0e:17bd:f425:fac3])
        by smtp.gmail.com with ESMTPSA id i9sm23241184wrs.34.2018.12.05.16.02.32
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Wed, 05 Dec 2018 16:02:32 -0800 (PST)
From: Mike Leach <mike.leach@linaro.org>
To: mike.leach@linaro.org, linux@armlinux.org.uk,
        coresight@lists.linaro.org, linux-arm-kernel@lists.infradead.org,
        linux-kernel@vger.kernel.org
Cc: mathieu.poirier@linaro.org, suzuki.poulose@arm.com
Subject: [PATCH v3 1/2] drivers: amba: Updates to component identification for driver matching.
Date: Thu,  6 Dec 2018 00:02:25 +0000
Message-Id: <20181206000226.2507-2-mike.leach@linaro.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181206000226.2507-1-mike.leach@linaro.org>
References: <20181206000226.2507-1-mike.leach@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The CoreSight specification (ARM IHI 0029E), updates the ID register
requirements for components on an AMBA bus, to cover both traditional
ARM Primecell type devices, and newer CoreSight and other components.

The Peripheral ID (PID) / Component ID (CID) pair is extended in certain
cases to uniquely identify components. CoreSight components related to
a single function can share Peripheral ID values, and must be further
identified using a Unique Component Identifier (UCI). e.g. the ETM, CTI,
PMU and Debug hardware of the A35 all share the same PID.

Bits 15:12 of the CID are defined to be the device class.
Class 0xF remains for PrimeCell and legacy components.
Class 0x9 defines the component as CoreSight (CORESIGHT_CID above)
Class 0x0, 0x1, 0xB, 0xE define components that do not have driver support
at present.
Class 0x2-0x8,0xA and 0xD-0xD are presently reserved.

The specification futher defines which classes of device use the standard
CID/PID pair, and when additional ID registers are required.

The patches provide an update of amba_device and matching code to handle
the additional registers required for the Class 0x9 (CoreSight) UCI.
The *data pointer in the amba_id is used by the driver to provide extended
ID register values for matching.

CoreSight components where PID/CID pair is currently sufficient for
unique identification need not provide this additional information.

Signed-off-by: Mike Leach <mike.leach@linaro.org>
---
 drivers/amba/bus.c       | 45 +++++++++++++++++++++++++++++++++-------
 include/linux/amba/bus.h | 32 ++++++++++++++++++++++++++++
 2 files changed, 69 insertions(+), 8 deletions(-)

diff --git a/drivers/amba/bus.c b/drivers/amba/bus.c
index 41b706403ef7..524296a0eba0 100644
--- a/drivers/amba/bus.c
+++ b/drivers/amba/bus.c
@@ -26,19 +26,36 @@
 
 #define to_amba_driver(d)	container_of(d, struct amba_driver, drv)
 
-static const struct amba_id *
-amba_lookup(const struct amba_id *table, struct amba_device *dev)
+/* called on periphid match and class 0x9 coresight device. */
+static int
+amba_cs_uci_id_match(const struct amba_id *table, struct amba_device *dev)
 {
 	int ret = 0;
+	struct amba_cs_uci_id *uci;
+
+	uci = table->data;
 
+	/* no table data - return match on periphid */
+	if (!uci)
+		return 1;
+
+	/* test against read devtype and masked devarch value */
+	ret = (dev->uci.devtype == uci->devtype) &&
+		((dev->uci.devarch & uci->devarch_mask) == uci->devarch);
+	return ret;
+}
+
+static const struct amba_id *
+amba_lookup(const struct amba_id *table, struct amba_device *dev)
+{
 	while (table->mask) {
-		ret = (dev->periphid & table->mask) == table->id;
-		if (ret)
-			break;
+		if (((dev->periphid & table->mask) == table->id) &&
+			((dev->cid != CORESIGHT_CID) ||
+			 (amba_cs_uci_id_match(table, dev))))
+			return table;
 		table++;
 	}
-
-	return ret ? table : NULL;
+	return NULL;
 }
 
 static int amba_match(struct device *dev, struct device_driver *drv)
@@ -399,10 +416,22 @@ static int amba_device_try_add(struct amba_device *dev, struct resource *parent)
 			cid |= (readl(tmp + size - 0x10 + 4 * i) & 255) <<
 				(i * 8);
 
+		if (cid == CORESIGHT_CID) {
+			/* set the base to the start of the last 4k block */
+			void __iomem *csbase = tmp + size - 4096;
+
+			dev->uci.devarch =
+				readl(csbase + UCI_REG_DEVARCH_OFFSET);
+			dev->uci.devtype =
+				readl(csbase + UCI_REG_DEVTYPE_OFFSET) & 0xff;
+		}
+
 		amba_put_disable_pclk(dev);
 
-		if (cid == AMBA_CID || cid == CORESIGHT_CID)
+		if (cid == AMBA_CID || cid == CORESIGHT_CID) {
 			dev->periphid = pid;
+			dev->cid = cid;
+		}
 
 		if (!dev->periphid)
 			ret = -ENODEV;
diff --git a/include/linux/amba/bus.h b/include/linux/amba/bus.h
index d143c13bed26..8c0f392e4da2 100644
--- a/include/linux/amba/bus.h
+++ b/include/linux/amba/bus.h
@@ -25,6 +25,36 @@
 #define AMBA_CID	0xb105f00d
 #define CORESIGHT_CID	0xb105900d
 
+/*
+ * CoreSight Architecture specification updates the ID specification
+ * for components on the AMBA bus. (ARM IHI 0029E)
+ *
+ * Bits 15:12 of the CID are the device class.
+ *
+ * Class 0xF remains for PrimeCell and legacy components. (AMBA_CID above)
+ * Class 0x9 defines the component as CoreSight (CORESIGHT_CID above)
+ * Class 0x0, 0x1, 0xB, 0xE define components that do not have driver support
+ * at present.
+ * Class 0x2-0x8,0xA and 0xD-0xD are presently reserved.
+ *
+ * Remaining CID bits stay as 0xb105-00d
+ */
+
+/*
+ * Class 0x9 components use additional values to form a Unique Component
+ * Identifier (UCI), where peripheral ID values are identical for different
+ * components. Passed to the amba bus code from the component driver via
+ * the amba_id->data pointer.
+ */
+struct amba_cs_uci_id {
+	unsigned int devarch;
+	unsigned int devarch_mask;
+	unsigned int devtype;
+};
+
+#define UCI_REG_DEVTYPE_OFFSET	0xFCC
+#define UCI_REG_DEVARCH_OFFSET	0xFBC
+
 struct clk;
 
 struct amba_device {
@@ -32,6 +62,8 @@ struct amba_device {
 	struct resource		res;
 	struct clk		*pclk;
 	unsigned int		periphid;
+	unsigned int		cid;
+	struct amba_cs_uci_id	uci;
 	unsigned int		irq[AMBA_NR_IRQS];
 	char			*driver_override;
 };
-- 
2.19.1

