Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:51:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9F82D5804F9;
	Thu,  6 Dec 2018 10:39:06 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 10:39:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AesFgPhB1XjAMUn4Dzf8HUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7yoMywAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOTA5/m/Jl8J+j61Urw68qBNx2I7UeIOYOeFifq/BZ94WWXZNU9xPWyFHH4iy?=
 =?us-ascii?q?b5EPD+0EPetAsof9oEYOrQOiBQmtGOzvySJDiHvx3aIgyeQuDB/J3BY9FN8Jsn?=
 =?us-ascii?q?TUtsj6NL0IXeCxzanIyyjDbvxN1Dfy7YjHaBEhofWWUb1sdsrRzFAiGgXYhVuT?=
 =?us-ascii?q?sYzoJy2Z2vgJvmSB8uZtW/yjh3Q6pwxyvjSj3MYhh4vRio4I1lzJ+z91zJgrKd?=
 =?us-ascii?q?C6UkJ2ZdqpHIFeuiyeMYZ9X9ksTHtyuCkgz70LoZ67czYOyJQg3xPfdfOHfJaS?=
 =?us-ascii?q?4h75V+aePy14hHR7d7K7nRqy9lKgyuLkWsm11lZFsDZFn8HSunwR0xHf8NWLR/?=
 =?us-ascii?q?Vj8ku7xDqC1Bzf5vtFLE02jabbLoQuwr80lpodq0TDGSr2lV3yjK+XcEUk5+ep?=
 =?us-ascii?q?5/3kYrr4vJ+cMZF7igXnPqQplM2/B/o3MhIVUmiF9uSzyqfj8Vf6QLpUlP02lL?=
 =?us-ascii?q?fWsJTAKcQcvK65DBdZ0pw/5BanEzemzNMYkGEDLFJEexKIkZLlOl7TIP3jCfe/?=
 =?us-ascii?q?glKskCpkxvzcP73hBInNIWbHkLv7Ybl97EtcwhIpzd9D/5JUFq0BIPXrV0/xrt?=
 =?us-ascii?q?PYDwM5PBazw+r9CNV9y5kRWWSAAqKCNKPSsFmI5v8gIuWWZY8Vvir9JOYh5/L0?=
 =?us-ascii?q?kXA5nlodd7Gz3ZQLcHC4AuhmI0KBbHruhdcOD30Gvgk5TOzsjl2CViVeZ3KzX6?=
 =?us-ascii?q?I6+zE6B5iqDYbFRoCxnrOB2D23EYFRZmBDElqMC2vnd52YW/cQbyKfOtVukicE?=
 =?us-ascii?q?VbimSI8tzwuuuxX4y7d8KurU+ysYtY/s1dRv5u3Tkw0y+iJwD8iHz26NSGR0lH?=
 =?us-ascii?q?sSRzAqxKB/vVB9ylCb3Kh7mfNYE8Zf5/dIUgggM57cwPd3C9TzWgLHY9eIR0yq?=
 =?us-ascii?q?QtSgATEtUN0xx8UCbFp6G9WnlhrDxTalA6cJl7yXA5w56r/T0GLvJ8lj0XrG1L?=
 =?us-ascii?q?Muj189QsRRM22qgap/9wvWB47NiEiZk6eqdaIB3C/C7muDzGyOvF1GXw50S6nK?=
 =?us-ascii?q?QXcfZk7Op9Tj+kzCV6OuCaggMgZZ1MGNMLVKZcPzgVVGXvjjPs/ebHy3m2qrAR?=
 =?us-ascii?q?aIx7WMbJflemkH3SXdDlQEnB4X/XqcKQc+ASKhqXrEDDNyDVLvf1/s8e5mpXOn?=
 =?us-ascii?q?T080ygaKb1Fh17u14BIVmeaQS/QJ3rIAuSchrTp0EU2539LXDdqAugVgcL9dYd?=
 =?us-ascii?q?M7/FdIy2bZuxZhMZynKqBonkQefBhvv0PyyxV3DZ1NntIurHw0wwt9N6KZ3Ela?=
 =?us-ascii?q?eDOFwJ//ILvXKmr1/BCxcKPW3lDe0NCL+qYA8vg4qlPjvB23GUom6Xloz95V03?=
 =?us-ascii?q?6E7JXQEAUSSY7xUlow9xVip7DafzMx6J/O2XxtMam7qDnC290yCeshyxagecpf?=
 =?us-ascii?q?MayeGA/zFc0aG9ahKOgwl1e1aRIEOfhY9LQoMMO+a/uGxKmrMf56nDKnkWtI+p?=
 =?us-ascii?q?p93V+L9yZmTO7HwYwFw/CB0gSbTTj8iEquvd7tmYBDYzEfBW6/ySniBI5Maax+?=
 =?us-ascii?q?Z4cLCWGyI8KpwtVynYLiW3ld9FS7HVMJxNepeQaOb1z6xQBR1UUXrWanmCei1D?=
 =?us-ascii?q?x0jjcpo7Gb3CzPxeTiaRUGNnRKRGlkkVfjP4y0g8oGU0ivaggjjAGl6lrix6hH?=
 =?us-ascii?q?uKR/KHHeQUVScCjsLGFiUaywuqCZY8FV65MosiRXUOKiblCcUbP9pxoa0yX+H2?=
 =?us-ascii?q?pR3jw7djequonnkBx+km6SMHFzrH/Bc8Fq2Rjf/MDcReJW3jceRCh3kz7XCkK+?=
 =?us-ascii?q?P9mo+9WZjJPDsuG4V2K8WZxfayjrzYWctCSl4W1mGwGwn/e2mtf/Cwg1zTf718?=
 =?us-ascii?q?V2VSXPtBv8YZPk16WgPeJnY0lnHln868VhF4F6k4swgowQ2HcAipWU+3oHjXn8?=
 =?us-ascii?q?MdFB1a3ia3oNQCYBw8TJ7wj9xE1jMnWJypr8VnWcwctufcO2Y20I1SIm88BFFr?=
 =?us-ascii?q?2U46dakitvrVq1tgbRYfl7njcAxvoi8n8ag+cVuAUzyiWRGKwdHU5dPSb0jRSH?=
 =?us-ascii?q?88i+rLlLZGaoabWwyE1+ndW7ALCDuA5cXmv5eow5HS9x9ch/NFPM0Hvu6oDrYt?=
 =?us-ascii?q?XQbNQTtgGKnBfEleRaNJUxlv8Sjyp9JW39pWEly/I8jRF2xp61po+HK2Fw/K6j?=
 =?us-ascii?q?Bh5YKyb4Z8cS+jHrkKZfkdya34GpHpV9BDoLWIHkQu6vEDIXrf7nLRqBECUgqn?=
 =?us-ascii?q?eHHrrSBQ2f511jr33RCJCnLW2XKGMazdV/RxmdOUpfjxoPXDghmp45FwaqxNHu?=
 =?us-ascii?q?cUtj5zAR4EL4pQVIyu5yKxb/VWLfrh+yajgoUJifMAZW7gZa6kbVNsye8/tzHz?=
 =?us-ascii?q?xC8Z2ntgCNMWubZwJHDWwSXkyEBlbjPqSh5NXa8uiYAPa+IOXKYbmUteNeUPKI?=
 =?us-ascii?q?z4q10oR65zaMKtmPPn56Av07xEVDXHN5G8fYmzkVSCwXjSXNb8GFqxem5y13td?=
 =?us-ascii?q?uy8PDqWALp+IuOBKFeMdRp+xCqn6iDM/Scizp+KTZdzpkM32PHyKAD3F4OjCFj?=
 =?us-ascii?q?byOiEakbui7XUq3RmrVbDxoaay5oMMtI7qQ83hRCOMLBi9P10KJ4geAxC1tfSV?=
 =?us-ascii?q?PhncSpb9QQI26hLFPHGFqLNLOeKD3XwsH3ZLmwRqFKgOpItx2/pzCbHlTnPjSC?=
 =?us-ascii?q?kTnpSh+uPftNjCGdIBxRpoW9fgxxBmjkSdLscge7P8NvjT0q3b00gWvHNG4GPj?=
 =?us-ascii?q?h6dkNNr7uQ4jtZg/V/AWNB6HVlIPKAmyaY6enYN5kXveFqAiRyi+JV/nA6x6FJ?=
 =?us-ascii?q?4yFDQfwm0BfV+9dtu1SOluiJ1yoiXh1TrDpCmIOMuwNlI6qdvoZBXXLV1BML43?=
 =?us-ascii?q?+ZBxkDq51iENKr86VQzdPMk4roNSxPtdnT+I9UBMnOKcaDdmEhLAbkHTnKJA8E?=
 =?us-ascii?q?SyO7c2DZm0FZ1vqV8zndsJIzoJvlsIETUbIdX05xXukbB0BNB8EYOpZ6WnUvlr?=
 =?us-ascii?q?vfxNUG/1K1pR/bAsxHo5+BUeidR/zybH6DlaFYTx8Jx67oa5oVO5G92kZnLFJ9?=
 =?us-ascii?q?mcCCA0fMUMpfiixnYBU9rEhE/D55VGJ3k0bkbB69yHYJEPq1mAMmzAxkbqIw93?=
 =?us-ascii?q?Ok+VA9J1yMoTYqiEkgsdz/hHaadzu1ZKa5WINRDCzvsE93MZL+awJ6YEu5mkkg?=
 =?us-ascii?q?fCveSr5QibRIc35qhA7V/5BIHLoUTqBJexQXwvK/bPUy1lFdtyDhwlVIoaPAT4?=
 =?us-ascii?q?BwhRMwdoG3rHNowAtmd8MzKurbI68NhkNMi6yHuDWAzb0rnkkfIQMH/XmWeShO?=
 =?us-ascii?q?tEFMfrkkLAKy+edvrAeCmiNYPmMLUr5iov9r9UQVIOKcwinglbJObgi4NvabLq?=
 =?us-ascii?q?6Vk2zBk9OYBFI9kgsPk0RG5rFw3d0UekyYTV00zLCRGhIKMuLPMQhQKcFV8Tyb?=
 =?us-ascii?q?fyGUts2dy4NpMp77EfrnCaeWvbkZhmqjBw0oFodK5cMEWtGvwVzeIsLmKvgdwA?=
 =?us-ascii?q?8uzB/iIU6YCvsPcxWO1H8CqMGyzJZ99YpQPDcQBSN6KyrzrrzQvA4xxv2YQM0x?=
 =?us-ascii?q?fGwZT6MDLHs9XMD8kClc+zxCAyOwyfkx0xWZ4nn3oSGDIiP7ao9YY+qMeRJnC5?=
 =?us-ascii?q?mU/jwl/6WswQrV6JnEYWX7M8lyktDK4OIe4Z2ADqUHHvFGr07AltwAFDSRWGnV?=
 =?us-ascii?q?HIvtKg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACDawlch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBWoIRJ4wTjA9QAQEGgUmJDAOOK4FzEgEBGBMBhDw?=
 =?us-ascii?q?CgxkiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYigmwCNwYBGx0BAwIJAgUmJ?=
 =?us-ascii?q?QMMBQ0CEQEFASMKCAWDHIFpAQMIDAEFmkw8jB8FAReCdwWBBQGDNAoZJw1dgTc?=
 =?us-ascii?q?CBhKKcYEcgQ+BB4NugwyFX4ImApAyj38uBwKOGIMjIwyJVodULIhihXqJXQIEA?=
 =?us-ascii?q?gkCBQ8hgSWCDTMaI4M8ghuBIgECgkiKHD84MoEFAQEhD4oKAQE?=
X-IPAS-Result: =?us-ascii?q?A0ACAACDawlch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBWoIRJ4wTjA9QAQEGgUmJDAOOK4FzEgEBGBMBhDwCgxkiNAkNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEIDQkIKSMMgjYigmwCNwYBGx0BAwIJAgUmJQMMBQ0CEQEFASM?=
 =?us-ascii?q?KCAWDHIFpAQMIDAEFmkw8jB8FAReCdwWBBQGDNAoZJw1dgTcCBhKKcYEcgQ+BB?=
 =?us-ascii?q?4NugwyFX4ImApAyj38uBwKOGIMjIwyJVodULIhihXqJXQIEAgkCBQ8hgSWCDTM?=
 =?us-ascii?q?aI4M8ghuBIgECgkiKHD84MoEFAQEhD4oKAQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="54144938"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 10:39:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725997AbeLFSgC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 13:36:02 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:35159 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725921AbeLFSgB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 13:36:01 -0500
Received: by mail-pg1-f195.google.com with SMTP id s198so524753pgs.2;
        Thu, 06 Dec 2018 10:36:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:mime-version:content-disposition
         :user-agent;
        bh=Oa/SZo4NTYsdsBTx0P4ctAF7OtbSigl9buobaWrjyts=;
        b=BS5vm9k9bGLFTl+LX0bmmM9M5C7OG8qjleVkise2mkPltptK9svVJnzqEXXf1WBbb0
         ci1hZudApj6H10+lYEQQczak59IqsTKG/aJp5uqzclWSGzssJ3XjOiOHbRPFUit6aUdw
         awp6zYPxAzYDEiPUutQH3/PjWXgzkUVgPqHp9qZz98vIUReekHUtzxSlvagqtyAczrCS
         GXtspLXDM8OX0uBS37pCwnH6jSXou/OORX8gep9Ie9VRObA/sjwgoW41zGJMRAt9I8SZ
         mn0hCyr5xvp8Bvr9AWCf70gWDWAYR72a4erJSB4QEx6QQg9n+sxzLaqCscuzTD0RhN8l
         9s0Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
         :content-disposition:user-agent;
        bh=Oa/SZo4NTYsdsBTx0P4ctAF7OtbSigl9buobaWrjyts=;
        b=QwpjzzL8WkSjsjGwN5CzjwVk8PD54woKud4Pl4ihmtUzX8tg50T4e8aQvm1isObUuE
         /PmBNPt28iJEtRoPA+s+Ip43SuZj8xpHzjWu3s6XfafxyFhCU0OHFrOw1/9tBIooI6iP
         cbO5bxIJiWT10eu4Ouo11Wk4NsxOENPcVEJ07FT38rmGwf46IG1/2OWWM2eKsYbpWmDA
         3lVLAgcg2RQ/53z9nc6Q72ePQ2TUeTgWDN/Zr+LDjU9WF6eOM3ynnsxsIlfTZno5ft92
         khbX3l70n5AGG8ANwgs3/sMp5pVKF7rl3ZbmRAhwSbLHCezCsNOp52LSos8aOb5BoXoV
         uCug==
X-Gm-Message-State: AA+aEWZaTOwHEzqZFxc9FvFgInQ4b0gp9mUIhZAgBfN37zFRNLvaaccW
        61CRmu1EM77a550RMFxeHjGUkre3
X-Google-Smtp-Source: AFSGD/WuBSuNZ0j2eI+y3vMK44Xcj2c9zc75ftpku5KoTRQQsbR2V1G34l5r5WGKdNdcPvf31x0YxA==
X-Received: by 2002:a62:6ec8:: with SMTP id j191mr29584141pfc.198.1544121360370;
        Thu, 06 Dec 2018 10:36:00 -0800 (PST)
Received: from jordon-HP-15-Notebook-PC ([103.227.99.39])
        by smtp.gmail.com with ESMTPSA id d129sm1525051pfc.31.2018.12.06.10.35.56
        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 06 Dec 2018 10:35:59 -0800 (PST)
Date: Fri, 7 Dec 2018 00:09:45 +0530
From: Souptick Joarder <jrdr.linux@gmail.com>
To: akpm@linux-foundation.org, willy@infradead.org, mhocko@suse.com,
        kirill.shutemov@linux.intel.com, vbabka@suse.cz, riel@surriel.com,
        sfr@canb.auug.org.au, rppt@linux.vnet.ibm.com,
        peterz@infradead.org, linux@armlinux.org.uk, robin.murphy@arm.com,
        iamjoonsoo.kim@lge.com, treding@nvidia.com, keescook@chromium.org,
        m.szyprowski@samsung.com, stefanr@s5r6.in-berlin.de,
        hjc@rock-chips.com, heiko@sntech.de, airlied@linux.ie,
        oleksandr_andrushchenko@epam.com, joro@8bytes.org,
        pawel@osciak.com, kyungmin.park@samsung.com, mchehab@kernel.org,
        boris.ostrovsky@oracle.com, jgross@suse.com
Cc: linux-kernel@vger.kernel.org, linux-mm@kvack.org,
        linux-arm-kernel@lists.infradead.org,
        linux1394-devel@lists.sourceforge.net,
        dri-devel@lists.freedesktop.org,
        linux-rockchip@lists.infradead.org, xen-devel@lists.xen.org,
        iommu@lists.linux-foundation.org, linux-media@vger.kernel.org
Subject: [PATCH v3 1/9] mm: Introduce new vm_insert_range API
Message-ID: <20181206183945.GA20932@jordon-HP-15-Notebook-PC>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Previouly drivers have their own way of mapping range of
kernel pages/memory into user vma and this was done by
invoking vm_insert_page() within a loop.

As this pattern is common across different drivers, it can
be generalized by creating a new function and use it across
the drivers.

vm_insert_range is the new API which will be used to map a
range of kernel memory/pages to user vma.

This API is tested by Heiko for Rockchip drm driver, on rk3188,
rk3288, rk3328 and rk3399 with graphics.

Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
Reviewed-by: Matthew Wilcox <willy@infradead.org>
Reviewed-by: Mike Rapoport <rppt@linux.ibm.com>
Tested-by: Heiko Stuebner <heiko@sntech.de>
---
 include/linux/mm.h |  2 ++
 mm/memory.c        | 38 ++++++++++++++++++++++++++++++++++++++
 mm/nommu.c         |  7 +++++++
 3 files changed, 47 insertions(+)

diff --git a/include/linux/mm.h b/include/linux/mm.h
index fcf9cc9..2bc399f 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -2506,6 +2506,8 @@ unsigned long change_prot_numa(struct vm_area_struct *vma,
 int remap_pfn_range(struct vm_area_struct *, unsigned long addr,
 			unsigned long pfn, unsigned long size, pgprot_t);
 int vm_insert_page(struct vm_area_struct *, unsigned long addr, struct page *);
+int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
+			struct page **pages, unsigned long page_count);
 vm_fault_t vmf_insert_pfn(struct vm_area_struct *vma, unsigned long addr,
 			unsigned long pfn);
 vm_fault_t vmf_insert_pfn_prot(struct vm_area_struct *vma, unsigned long addr,
diff --git a/mm/memory.c b/mm/memory.c
index 15c417e..84ea46c 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -1478,6 +1478,44 @@ static int insert_page(struct vm_area_struct *vma, unsigned long addr,
 }
 
 /**
+ * vm_insert_range - insert range of kernel pages into user vma
+ * @vma: user vma to map to
+ * @addr: target user address of this page
+ * @pages: pointer to array of source kernel pages
+ * @page_count: number of pages need to insert into user vma
+ *
+ * This allows drivers to insert range of kernel pages they've allocated
+ * into a user vma. This is a generic function which drivers can use
+ * rather than using their own way of mapping range of kernel pages into
+ * user vma.
+ *
+ * If we fail to insert any page into the vma, the function will return
+ * immediately leaving any previously-inserted pages present.  Callers
+ * from the mmap handler may immediately return the error as their caller
+ * will destroy the vma, removing any successfully-inserted pages. Other
+ * callers should make their own arrangements for calling unmap_region().
+ *
+ * Context: Process context. Called by mmap handlers.
+ * Return: 0 on success and error code otherwise
+ */
+int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
+			struct page **pages, unsigned long page_count)
+{
+	unsigned long uaddr = addr;
+	int ret = 0, i;
+
+	for (i = 0; i < page_count; i++) {
+		ret = vm_insert_page(vma, uaddr, pages[i]);
+		if (ret < 0)
+			return ret;
+		uaddr += PAGE_SIZE;
+	}
+
+	return ret;
+}
+EXPORT_SYMBOL(vm_insert_range);
+
+/**
  * vm_insert_page - insert single page into user vma
  * @vma: user vma to map to
  * @addr: target user address of this page
diff --git a/mm/nommu.c b/mm/nommu.c
index 749276b..d6ef5c7 100644
--- a/mm/nommu.c
+++ b/mm/nommu.c
@@ -473,6 +473,13 @@ int vm_insert_page(struct vm_area_struct *vma, unsigned long addr,
 }
 EXPORT_SYMBOL(vm_insert_page);
 
+int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
+			struct page **pages, unsigned long page_count)
+{
+	return -EINVAL;
+}
+EXPORT_SYMBOL(vm_insert_range);
+
 /*
  *  sys_brk() for the most part doesn't need the global kernel
  *  lock, except when an application is doing something nasty
-- 
1.9.1

