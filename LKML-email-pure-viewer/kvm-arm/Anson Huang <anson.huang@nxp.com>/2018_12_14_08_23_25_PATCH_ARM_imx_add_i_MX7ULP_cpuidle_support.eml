Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:25:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0D68058079D;
	Fri, 14 Dec 2018 00:26:32 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 00:26:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AM+KONRBYDqn9RNg/cz/3UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7zo86wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH428?=
 =?us-ascii?q?c4UBAekGM+ZZs4bzqFQBrQCmBQSuH+7v1iZIi2Xq0aAgz+gtDAfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34ObsUUeCuy6nIyyjIYfFL2Tjn7ojIfQ0qrPaWUrJ2asrRzk8vGxnFjlWN?=
 =?us-ascii?q?s4PlOTyV2/8Ls2mU9+psT/6gi2kiqwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt4uT3xstSogxLAKpIS3cDUIxZko3RLSav2Kf5CG?=
 =?us-ascii?q?4h39V+udPTJ1iXd/d72iiRa/8k2tyuPzW8SwzVlHqzdKncfXuX0C0hHe6suKSv?=
 =?us-ascii?q?Vg8UqnxD2BzRrc6vteLkAxjafbK4Auwro3lpcLr0TDETH5mF/sgK+VaEok4O6o?=
 =?us-ascii?q?5PrjYrn8oZ+cLYB0hhn/MqQohMO/Hfw1PhYSU2Wf4+iwybPu8VPjTLlXjfA6jr?=
 =?us-ascii?q?PVvZHYKMgDo662GQ5V0oIt6xalCDem1cwVnX0GLFJDZRKGgJHlO1LQL/DiC/ew?=
 =?us-ascii?q?nVCsnC5sx/HIOL3uHI/NI2PdkLfuY7l98VRQyAktwtBF4ZJbFLUBLOj0Wk/ru9?=
 =?us-ascii?q?zUFgU5PBCsw+b7FNV90ZsTWWaOAq+aLqzeq1CJ5v80LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G+xsI1+Fbnr0ntcBDWAKsxI+TOPwiV2CTSRcZ3GoU6?=
 =?us-ascii?q?I8+zE0EoSmDYjYS4CpgbyB2jq7H5JMamBHDFCMDWnnd4GeV/gQbyKSJ9drkiYY?=
 =?us-ascii?q?Wri5V48hyRauuRf4y7pgMOXY4C4YtZXl1Nhz4O3ejhUy9T1yD8SA3GCBVWB0nm?=
 =?us-ascii?q?UURzAo2KBzu1ByylCG0aJgmfxXCcRT5+9VUgc9LZPT1fd6C9D1WgLCZNuJUkyp?=
 =?us-ascii?q?Qte9DDE1T9IxxcIOYklnF9WjiBDDwzSlA7sPm7OXA5w097rW32LtKMZl13bGyK?=
 =?us-ascii?q?4hgkElQsRVM22qnKp/9wnJCI7PnEWUjKKqdaUa3C7Q+2aP12uOvEdEUAFuVaXJ?=
 =?us-ascii?q?R2wQZkzTrd7h/EPNU6euCag7MgtG0cONN7FFasP3gllcRPfsItLeY3mvlGe2Ah?=
 =?us-ascii?q?qIwrCMbI/ue2gG2CXdCU4Ekx0c/HqcNAg+ADuhrHzaDDB0CV3vZEbs+/FkqHyn?=
 =?us-ascii?q?Vk800x2Kb0p52rWo4BEVm+KTR+kT3r0evichsCt7HFCm0tLSCtqAoRdhfapGbd?=
 =?us-ascii?q?M85ldHyXzWtwhnMpO8KKBig0YUcx5rsEP2yxV3FoJAnNA2rHMryQpyLr6Y0FNB?=
 =?us-ascii?q?dj+CwZD8ILrXKnP2/BCuba7W1UrT0NKX+qcJ9fQ5pE/vvACvFko+7Xpn18NZ3G?=
 =?us-ascii?q?eb5pXPFAASS47+Ul4r9xhmoLHXejMy54fK2nxjL6a1siXO1Mk0BOQ40BmgedRf?=
 =?us-ascii?q?MKSaFALpF80aBs6uKPElmlSzbxIEOvxS+7AwP8+8a/SG36urNv56nD26lWRH/J?=
 =?us-ascii?q?x90kWU+it8V+7ExYoKz+uZ3wuHTTj8ilihv9vzmYBFYzESA2W+xTLlBI5Xeq19?=
 =?us-ascii?q?Y4ILBX2yLM2ww9V0n4TtVGJA9F6/G1MG39ekeQCTb1PhxwJQz1kYoXu9lSu+0T?=
 =?us-ascii?q?N0iTAporOD0yPUx+TtaQQIOnRMRGlkllrsJYm0j9YHXEmndQQplR2l5VrkyKhf?=
 =?us-ascii?q?vqhwM27TQUJQdSjsM25iSrewtqaFY8NX6JIosD9bUeSmbVCBV779pQAX0yfiH2?=
 =?us-ascii?q?tY2TA6eCumupT/nxxmlm2dKGx/o2beecF13R3f/sDTReZN3joaQyl1kTvXCUKm?=
 =?us-ascii?q?P9mq/tWUkI3PsvukWGKiVZ1TcC/rwp2GtCag4W1qABu/n+28m9H9EAg61zP72M?=
 =?us-ascii?q?duVSnSsBn8ZYzr3bygMe17ZkloGEP8681iF4B+iIQwg4sc2XobhpWT5ncHlWbz?=
 =?us-ascii?q?MdNG2aPxdnYNRDgLw8LL7wjhwkFsMnWJx4fhXHWH3sRhf8W6Yn8R2i8l7MBFEq?=
 =?us-ascii?q?aU4KZEnStouFW4qw3RbON5njccz/su9XEbj/sIuAor0iWSHLQSEVNEMizrkhSC?=
 =?us-ascii?q?98q+o7lPZGazbbiw01JzndWgDLGBuA5QQnj4dYk5HS9s8Mp/KknD32Pp6oHrY9?=
 =?us-ascii?q?TQadMTthuJkxbPleRVKZQxluYUiipjI27yoXoly+sjhxx0wZ66pJSHK3lq/K+h?=
 =?us-ascii?q?Hh5YMTj1a9kS+z73i6Zeg92W35uuHph6HjULXZ3oTe+nET4ItPTnMRqOHyM4qn?=
 =?us-ascii?q?uBBbXfGgqf4l98r33TC5CrK22XJH4BwNp5XhadI0hfgB0OUDU+g540DQSqxM3n?=
 =?us-ascii?q?cEdk6TEd/F/4qh1Qyu12MxnzSHvQpACtaj0sUpiQMAJW7h1e50fSKcGe7Ph8Hy?=
 =?us-ascii?q?RG8Z26tgCNNnaXZwdVDWEKR0yEAUrsPqK16NnE8uiYAPe+LvTUbbWPr+xeS+mH?=
 =?us-ascii?q?xZa13oR6+DaMM92FPmN+AP0jxkpDQXd5FtzZmjUIViwXjj/NYNSdpBum4S13qc?=
 =?us-ascii?q?a/8PvwVQLr5IuPDaZSMNp19xC3h6eDK/CfhCJjJTlE0ZMMwGfCyKID014KlyFu?=
 =?us-ascii?q?az6tHKwAtSHTTaLQmaxXDx8BZyNwLstI6K080RdXOc7GkdP4zbp4jv8zC1dYWl?=
 =?us-ascii?q?3tgMCpZcoWI26jMFPLHlqENLODJTfT2cH4fbu8SaFMjOVTrxC/oyubHFT5Pjud?=
 =?us-ascii?q?lzjlTRSvMeBXgSGfPRxevpy9cxl3BWjiStLmdgO0MNttgTIqxr00g2vANXQAPj?=
 =?us-ascii?q?hkb0NNsrqQ4DtEgvV+HmxN9GZqIfOYlCaZ8ebYLI0bsf9qAiRyiuJb7242y7pT?=
 =?us-ascii?q?7CFYWvN1nDHeocJpo1GjiuOP0CZoUAJSqjZXg4KGpUVjNr/f9plFWHbE+goC7G?=
 =?us-ascii?q?SQCxsQodtlBcbiu6RRytjJiaLyJy1O89PS/csAGcfULNiLP2YmMRrsS3boC15P?=
 =?us-ascii?q?Vj6iKmfQmkt1k/yI8HCR6J8gpdKkzIEOQ6BdW0EyPvAXEEJoGJoFOpghGntuiv?=
 =?us-ascii?q?ibhdMF/1KmoR/eWdlAuZbGRrSeDL+nfC3fjbBZagEg2b7+IpkPLIr92lwkZlQs?=
 =?us-ascii?q?2MyAGEfKW91JijVsaAApvF9K9nluCGE+kQqxaQ635nIXPea5mBErlhF5Z+U9sj?=
 =?us-ascii?q?vhtRN/CFPApSx4vVItlMvshHjFfjf7LaD2UJpKBjT9smA3Iou9SAFwO0n610hl?=
 =?us-ascii?q?MirUb7tLir9hc317zgjGtt1SGrQUGalFZgIA7fiNYvEp10lM7CK9ygla5r2BQd?=
 =?us-ascii?q?FmlQ03YdultXcF2A95atMxDajRP7ZSiFlWiLiHsiKh2qY22gBUbxIJ8WWPaGsB?=
 =?us-ascii?q?oklNNbQ8ISes1uht8hCZ3TpFdnIFW/cjrrRt7Exrf6zKyyPmzq4GKU2rMeGbB7?=
 =?us-ascii?q?2WtnKGlsOSRF40kEQSmAMNqbx319ozNkmZTUYiyJOPGBkTc8nPMwdYa4xV7neF?=
 =?us-ascii?q?LgiUtuCY6JRuOIP1Nv3hS+DG4K8SmUWiWgY0FoIDxsIRBt+n10SOfpSvF6IM1R?=
 =?us-ascii?q?h4vFejH16CFvkcPUvTyDo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AuAQBSaBNch0O0hNFjgheBMVCBXAQLJ?=
 =?us-ascii?q?wqHOQOQFkqCIZdBFIFfEwEYEwGHRSI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwy?=
 =?us-ascii?q?CNiQBgmkCPQEBNwEFCQIBAU4DLycEAQ0FBYMcggABAQICmz4CigmCH4J2AQEFg?=
 =?us-ascii?q?QQBAYYlCId9hEGBVz+BEYdYH4V3j05GkQYHAoIkBI80FpFMAYkzjTKCTAIEAgQ?=
 =?us-ascii?q?FAg0BAQWBRoIOMxojgzyCJxeDSoocATZygQUBASGLFgGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AuAQBSaBNch0O0hNFjgheBMVCBXAQLJwqHOQOQFkqCIZd?=
 =?us-ascii?q?BFIFfEwEYEwGHRSI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmkCPQEBN?=
 =?us-ascii?q?wEFCQIBAU4DLycEAQ0FBYMcggABAQICmz4CigmCH4J2AQEFgQQBAYYlCId9hEG?=
 =?us-ascii?q?BVz+BEYdYH4V3j05GkQYHAoIkBI80FpFMAYkzjTKCTAIEAgQFAg0BAQWBRoIOM?=
 =?us-ascii?q?xojgzyCJxeDSoocATZygQUBASGLFgGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="56336241"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 00:26:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728530AbeLNI01 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 03:26:27 -0500
Received: from mail-eopbgr80083.outbound.protection.outlook.com ([40.107.8.83]:13435
        "EHLO EUR04-VI1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726520AbeLNI01 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 03:26:27 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=FhY+LIcWiDlLbiDIn9klntQJRX5msaT2LNgrzAw0Jxc=;
 b=PFvJvwqtLpf7In5f8lvLEErGPY7xfBd7f99zcHEEt4ogTGrEFS6QHNBMNmdmrRdwx+lWo2eE/iBI2imarCv15JPb8zQ+BmWDjOviTvphhhWbm7pLi1qYBDoQ3bE6mqB3bXLmGIcaPeMmMO2CVBS/BVki1R1+UbVZC6O1IwLEnXo=
Received: from DB3PR0402MB3916.eurprd04.prod.outlook.com (52.134.72.18) by
 DB3PR0402MB3691.eurprd04.prod.outlook.com (52.134.66.150) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Fri, 14 Dec 2018 08:23:25 +0000
Received: from DB3PR0402MB3916.eurprd04.prod.outlook.com
 ([fe80::adf8:f49d:deb4:58fd]) by DB3PR0402MB3916.eurprd04.prod.outlook.com
 ([fe80::adf8:f49d:deb4:58fd%3]) with mapi id 15.20.1425.021; Fri, 14 Dec 2018
 08:23:25 +0000
From: Anson Huang <anson.huang@nxp.com>
To: "shawnguo@kernel.org" <shawnguo@kernel.org>,
        "s.hauer@pengutronix.de" <s.hauer@pengutronix.de>,
        "kernel@pengutronix.de" <kernel@pengutronix.de>,
        Fabio Estevam <fabio.estevam@nxp.com>,
        "linux@armlinux.org.uk" <linux@armlinux.org.uk>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
CC: dl-linux-imx <linux-imx@nxp.com>
Subject: [PATCH] ARM: imx: add i.MX7ULP cpuidle support
Thread-Topic: [PATCH] ARM: imx: add i.MX7ULP cpuidle support
Thread-Index: AQHUk4ZIRjPFoid9+UiCQ98N5HjNIw==
Date: Fri, 14 Dec 2018 08:23:25 +0000
Message-ID: <1544775444-31544-1-git-send-email-Anson.Huang@nxp.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK0PR03CA0017.apcprd03.prod.outlook.com
 (2603:1096:203:2e::29) To DB3PR0402MB3916.eurprd04.prod.outlook.com
 (2603:10a6:8:10::18)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=anson.huang@nxp.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DB3PR0402MB3691;6:OX1GQvuKnCCopnvRqbng9UkQyO46FzDR+QVhD/EjkNwcdbVbcifhGvcbTdMlfs4M4zDzODx1k5PIyzYPWOyiIAhWsYOSoXcv3HOPOYYYIvGpLqRiyogkq/12nidx3FxPoAdDrgWUlZYmF5XZiHihVYHl0sPqovLJkGoiFdxjr0Xd5sB5SdllF0biPxHVeduogfBX7IzBvCw5MDmFqPsGHaAFN45OmBj3mb22odyEZIFxvte0vhIcfsV5RdVPO3VDW1g9tm4A5Eppuw6I1hmt+wH3ABKvkg5diWJnkTF734Pyugf13wbjxt8mGJF35iSCATCGSk4ap/AZRlDyI399nHzKxPeRP2gS8hwR3GiQQT5nUf8VUhSVCnLneaEuw1g2cCxPVddSXtXyftKgIbjYdGUX0z0q8vFtGahA+U9m6nSyIxH/eiRskrID8K04RVfuXa1KT8IVmombn/jZKG7oJw==;5:IGsZYAErq6whh+qJ+gimo0lOoCINzFFRta5PYx6ppw1jYZKnxfNneJL3cHnIhyNwDe3FoHnytxJZodIZvGZks97rBeBBI9AckKAUTvutqG8ZI81MrZmCkNjrabMesSBw3bZGyu2XjRVV6rAWL4XJoROF/cR1IOEd/9kpO81TD7w=;7:e4FJPWxPRMLR/hq9kIa8sF5RhRhu6qortNx+5IAd/s6TeMj/qNa/A4W+itofnG+oUJwKx3GDQKFLQ7uc7b0jyAJLHbHsNipCvpjqACTzaNwPt7UCKQBl8ylhN625dJa39wG1cfyQg8eHVB6kRER7WA==
x-ms-office365-filtering-correlation-id: 45671085-7879-4388-5295-08d6619d6ac4
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);SRVR:DB3PR0402MB3691;
x-ms-traffictypediagnostic: DB3PR0402MB3691:
x-microsoft-antispam-prvs: <DB3PR0402MB36912FFFACCF1AB1C9B29F21F5A10@DB3PR0402MB3691.eurprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230021)(999002)(6040522)(2401047)(8121501046)(5005006)(10201501046)(3231475)(944501520)(52105112)(93006095)(93001095)(3002001)(6055026)(148016)(149066)(150057)(6041310)(20161123564045)(20161123558120)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123562045)(201708071742011)(7699051)(76991095);SRVR:DB3PR0402MB3691;BCL:0;PCL:0;RULEID:;SRVR:DB3PR0402MB3691;
x-forefront-prvs: 08864C38AC
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(396003)(366004)(39860400002)(136003)(346002)(376002)(189003)(199004)(4326008)(316002)(110136005)(256004)(14444005)(66066001)(106356001)(97736004)(105586002)(71190400001)(478600001)(25786009)(71200400001)(14454004)(68736007)(2501003)(7736002)(305945005)(5660300001)(50226002)(36756003)(8936002)(8676002)(81156014)(81166006)(476003)(6506007)(386003)(486006)(2616005)(86362001)(575784001)(102836004)(2201001)(6512007)(6436002)(2906002)(6486002)(6116002)(3846002)(26005)(186003)(99286004)(52116002)(53936002);DIR:OUT;SFP:1101;SCL:1;SRVR:DB3PR0402MB3691;H:DB3PR0402MB3916.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: IXby0+1I9DPKyhDaNd0UKXq0yQe+7E6vYEvKU0Wn5/sBJ4pmYitf5ZBfts3vDCR7zsaUVzlzc1EV0tzdUoRp64rA4a8iIGvoQVtM71rq++1xTs951wD3g/mfKN4gt6rYFBRfTbYxNN733Aeka94oNFV1uNA/WqaaMeHqJoYur2h52TXgWBWvMPDzmV4Hs1JaV4pM5CMufF6Zoe482Pu2mrlFXLCK0p45UpdM5ibRcYsAFAEbPo8nJxLbnPvIMwFI15Cq4nHIdEkApA86FlUfP3Euk5pH4VSoSg22/sZrAyV5KqVXgwZwbhtvI0EbKJ3y
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 45671085-7879-4388-5295-08d6619d6ac4
X-MS-Exchange-CrossTenant-originalarrivaltime: 14 Dec 2018 08:23:25.3368
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DB3PR0402MB3691
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This patch adds cpuidle support for i.MX7ULP, 3 cpuidle
states supported as below:

1. WFI, just ARM wfi;
2. WAIT mode, mapped to SoC's partial stop mode #3;
3. STOP mode, mapped to SoC's partial stop mode #1.

In WAIT mode, system clock and bus clock will be enabled;
In STOP mode, system clock and bus clock will be disabled.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
---
 arch/arm/mach-imx/Makefile          |  1 +
 arch/arm/mach-imx/common.h          | 10 +++++++
 arch/arm/mach-imx/cpuidle-imx7ulp.c | 60 +++++++++++++++++++++++++++++++++=
++++
 arch/arm/mach-imx/cpuidle.h         |  5 ++++
 arch/arm/mach-imx/mach-imx7ulp.c    |  7 +++++
 arch/arm/mach-imx/pm-imx7ulp.c      | 49 ++++++++++++++++++++++++++----
 6 files changed, 127 insertions(+), 5 deletions(-)
 create mode 100644 arch/arm/mach-imx/cpuidle-imx7ulp.c

diff --git a/arch/arm/mach-imx/Makefile b/arch/arm/mach-imx/Makefile
index 8af2f7e..12aa44a 100644
--- a/arch/arm/mach-imx/Makefile
+++ b/arch/arm/mach-imx/Makefile
@@ -29,6 +29,7 @@ obj-$(CONFIG_SOC_IMX6SL) +=3D cpuidle-imx6sl.o
 obj-$(CONFIG_SOC_IMX6SLL) +=3D cpuidle-imx6sx.o
 obj-$(CONFIG_SOC_IMX6SX) +=3D cpuidle-imx6sx.o
 obj-$(CONFIG_SOC_IMX6UL) +=3D cpuidle-imx6sx.o
+obj-$(CONFIG_SOC_IMX7ULP) +=3D cpuidle-imx7ulp.o
 endif
=20
 ifdef CONFIG_SND_IMX_SOC
diff --git a/arch/arm/mach-imx/common.h b/arch/arm/mach-imx/common.h
index bc915e5..a87fab1 100644
--- a/arch/arm/mach-imx/common.h
+++ b/arch/arm/mach-imx/common.h
@@ -72,6 +72,15 @@ enum mxc_cpu_pwr_mode {
 	STOP_POWER_OFF,		/* STOP + SRPG */
 };
=20
+enum ulp_cpu_pwr_mode {
+	HSRUN,    /* High speed run mode */
+	RUN,      /* Run mode */
+	WAIT,     /* Wait mode */
+	STOP,     /* Stop mode */
+	VLPS,     /* Very low power stop mode */
+	VLLS,     /* very low leakage stop mode */
+};
+
 void imx_enable_cpu(int cpu, bool enable);
 void imx_set_cpu_jump(int cpu, void *jump_addr);
 u32 imx_get_cpu_arg(int cpu);
@@ -98,6 +107,7 @@ int imx6_set_lpm(enum mxc_cpu_pwr_mode mode);
 void imx6_set_int_mem_clk_lpm(bool enable);
 void imx6sl_set_wait_clk(bool enter);
 int imx_mmdc_get_ddr_type(void);
+int imx7ulp_set_lpm(enum ulp_cpu_pwr_mode mode);
=20
 void imx_cpu_die(unsigned int cpu);
 int imx_cpu_kill(unsigned int cpu);
diff --git a/arch/arm/mach-imx/cpuidle-imx7ulp.c b/arch/arm/mach-imx/cpuidl=
e-imx7ulp.c
new file mode 100644
index 0000000..a59df93
--- /dev/null
+++ b/arch/arm/mach-imx/cpuidle-imx7ulp.c
@@ -0,0 +1,60 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2016 Freescale Semiconductor, Inc.
+ * Copyright 2017-2018 NXP
+ *   Anson Huang <Anson.Huang@nxp.com>
+ */
+
+#include <linux/cpuidle.h>
+#include <linux/module.h>
+#include <asm/cpuidle.h>
+
+#include "common.h"
+#include "cpuidle.h"
+
+static int imx7ulp_enter_wait(struct cpuidle_device *dev,
+			    struct cpuidle_driver *drv, int index)
+{
+	if (index =3D=3D 1)
+		imx7ulp_set_lpm(WAIT);
+	else
+		imx7ulp_set_lpm(STOP);
+
+	cpu_do_idle();
+
+	imx7ulp_set_lpm(RUN);
+
+	return index;
+}
+
+static struct cpuidle_driver imx7ulp_cpuidle_driver =3D {
+	.name =3D "imx7ulp_cpuidle",
+	.owner =3D THIS_MODULE,
+	.states =3D {
+		/* WFI */
+		ARM_CPUIDLE_WFI_STATE,
+		/* WAIT */
+		{
+			.exit_latency =3D 50,
+			.target_residency =3D 75,
+			.enter =3D imx7ulp_enter_wait,
+			.name =3D "WAIT",
+			.desc =3D "PSTOP2",
+		},
+		/* STOP */
+		{
+			.exit_latency =3D 100,
+			.target_residency =3D 150,
+			.enter =3D imx7ulp_enter_wait,
+			.name =3D "STOP",
+			.desc =3D "PSTOP1",
+		},
+	},
+	.state_count =3D 3,
+	.safe_state_index =3D 0,
+};
+
+int __init imx7ulp_cpuidle_init(void)
+{
+	return cpuidle_register(&imx7ulp_cpuidle_driver, NULL);
+}
diff --git a/arch/arm/mach-imx/cpuidle.h b/arch/arm/mach-imx/cpuidle.h
index f914012..7694c8f 100644
--- a/arch/arm/mach-imx/cpuidle.h
+++ b/arch/arm/mach-imx/cpuidle.h
@@ -15,6 +15,7 @@ extern int imx5_cpuidle_init(void);
 extern int imx6q_cpuidle_init(void);
 extern int imx6sl_cpuidle_init(void);
 extern int imx6sx_cpuidle_init(void);
+extern int imx7ulp_cpuidle_init(void);
 #else
 static inline int imx5_cpuidle_init(void)
 {
@@ -32,4 +33,8 @@ static inline int imx6sx_cpuidle_init(void)
 {
 	return 0;
 }
+static inline int imx7ulp_cpuidle_init(void)
+{
+	return 0;
+}
 #endif
diff --git a/arch/arm/mach-imx/mach-imx7ulp.c b/arch/arm/mach-imx/mach-imx7=
ulp.c
index 16b295b..95efb2d 100644
--- a/arch/arm/mach-imx/mach-imx7ulp.c
+++ b/arch/arm/mach-imx/mach-imx7ulp.c
@@ -12,6 +12,7 @@
 #include <asm/mach/arch.h>
=20
 #include "common.h"
+#include "cpuidle.h"
 #include "hardware.h"
=20
 #define SIM_JTAG_ID_REG		0x8c
@@ -64,7 +65,13 @@ static const char *const imx7ulp_dt_compat[] __initconst=
 =3D {
 	NULL,
 };
=20
+static void __init imx7ulp_init_late(void)
+{
+	imx7ulp_cpuidle_init();
+}
+
 DT_MACHINE_START(IMX7ulp, "Freescale i.MX7ULP (Device Tree)")
 	.init_machine	=3D imx7ulp_init_machine,
 	.dt_compat	=3D imx7ulp_dt_compat,
+	.init_late      =3D imx7ulp_init_late,
 MACHINE_END
diff --git a/arch/arm/mach-imx/pm-imx7ulp.c b/arch/arm/mach-imx/pm-imx7ulp.=
c
index cf6a380..9551e1f 100644
--- a/arch/arm/mach-imx/pm-imx7ulp.c
+++ b/arch/arm/mach-imx/pm-imx7ulp.c
@@ -9,21 +9,60 @@
 #include <linux/of.h>
 #include <linux/of_address.h>
=20
+#include "common.h"
+
 #define SMC_PMCTRL		0x10
 #define BP_PMCTRL_PSTOPO        16
 #define PSTOPO_PSTOP3		0x3
+#define PSTOPO_PSTOP2		0x2
+#define PSTOPO_PSTOP1		0x1
+#define BP_PMCTRL_RUNM          8
+#define RUNM_RUN                0
+#define BP_PMCTRL_STOPM         0
+#define STOPM_STOP              0
+
+#define BM_PMCTRL_PSTOPO	(3 << BP_PMCTRL_PSTOPO)
+#define BM_PMCTRL_RUNM		(3 << BP_PMCTRL_RUNM)
+#define BM_PMCTRL_STOPM		(7 << BP_PMCTRL_STOPM)
+
+static void __iomem *smc1_base;
+
+int imx7ulp_set_lpm(enum ulp_cpu_pwr_mode mode)
+{
+	u32 val =3D readl_relaxed(smc1_base + SMC_PMCTRL);
+
+	/* clear all */
+	val &=3D ~(BM_PMCTRL_RUNM | BM_PMCTRL_STOPM | BM_PMCTRL_PSTOPO);
+
+	switch (mode) {
+	case RUN:
+		/* system/bus clock enabled */
+		val |=3D PSTOPO_PSTOP3 << BP_PMCTRL_PSTOPO;
+		break;
+	case WAIT:
+		/* system clock disabled, bus clock enabled */
+		val |=3D PSTOPO_PSTOP2 << BP_PMCTRL_PSTOPO;
+		break;
+	case STOP:
+		/* system/bus clock disabled */
+		val |=3D PSTOPO_PSTOP1 << BP_PMCTRL_PSTOPO;
+		break;
+	default:
+		return -EINVAL;
+	}
+
+	writel_relaxed(val, smc1_base + SMC_PMCTRL);
+
+	return 0;
+}
=20
 void __init imx7ulp_pm_init(void)
 {
 	struct device_node *np;
-	void __iomem *smc1_base;
=20
 	np =3D of_find_compatible_node(NULL, NULL, "fsl,imx7ulp-smc1");
 	smc1_base =3D of_iomap(np, 0);
 	WARN_ON(!smc1_base);
=20
-	/* Partial Stop mode 3 with system/bus clock enabled */
-	writel_relaxed(PSTOPO_PSTOP3 << BP_PMCTRL_PSTOPO,
-		       smc1_base + SMC_PMCTRL);
-	iounmap(smc1_base);
+	imx7ulp_set_lpm(RUN);
 }
--=20
2.7.4

