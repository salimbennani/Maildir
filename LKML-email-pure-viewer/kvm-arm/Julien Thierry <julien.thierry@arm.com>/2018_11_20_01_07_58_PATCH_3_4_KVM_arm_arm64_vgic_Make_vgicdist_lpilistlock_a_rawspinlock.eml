Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:33:33 -0000
Received: from icoremail.net (unknown [209.85.210.175])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f_lR7vJbNZq6AQ--.55021S3;
	Tue, 20 Nov 2018 01:09:40 +0800 (CST)
Received: from mail-pf1-f175.google.com (unknown [209.85.210.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3XUlO7vJbOXZZAA--.2472S3;
	Tue, 20 Nov 2018 01:09:34 +0800 (CST)
Received: by mail-pf1-f175.google.com with SMTP id v68-v6so15159285pfk.0
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 09:09:34 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=y2OE9KTn9pG2FZsXZ5Q7dzdVN3ozaTIsX9wp6xG+ghE=;
        b=YnDWG26WuAgHFG+ZsxVz7EWTbf4toP4ea+ZXV/wTaJyRH0ShPgqJngpCJD+UYTq2Ic
         c+lTyjZOvpgB3+PbXOhL4KJOBM1kbSuL71pepAhkoShaWm9o41RPTJX1GVb/81V6BwXn
         0IS+XUAd8W5flQ8pQbShPGcswI1Zn1O4VIxdnGF8rgspFM80CYyyLG+2bL4CpG1aDSvd
         +g9tHWGzk4r30RK3DSx21fu6pDUHuG7iLcySNQkchprKqX5pvgZIWNAQy5rfy9L3euBk
         5goonnBi0lX7zfmBqGiV0A/PCQWijdefolO9At5fjCkHZPvIdjeLg2AlkFzhA+Xr2OsX
         1yhQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIUgf2MuV4GBXfZR7EvIOIuVzdVeEGP5+fDqLWzyXlfoBPYy7bc
	Akpx7yFQ9fISbkHOSQS4mDvYamj2buErVBUOgMfWQJ+C/Jy6hno=
X-Received: by 2002:a65:66ce:: with SMTP id c14mr20635050pgw.450.1542647373778;
        Mon, 19 Nov 2018 09:09:33 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2924718pju;
        Mon, 19 Nov 2018 09:09:33 -0800 (PST)
X-Google-Smtp-Source: AJdET5cuGz0V8ZI+h6wMAW7fDdVmiyp983yXyUg1Z5ZboMhxGvaBEGN3bfBLkT6330DhC/2jl8+g
X-Received: by 2002:a62:520b:: with SMTP id g11mr21610880pfb.53.1542647373009;
        Mon, 19 Nov 2018 09:09:33 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542647372; cv=none;
        d=google.com; s=arc-20160816;
        b=P4xgb689mmmdSnqjf9kOWjju9QtHRiRL+wjqkVs2ONkY8w3XQKJMei0abQ9JT+VCnM
         MdfdF27pE3M68C2barw7JDFj1uX+Dh6s94dzjlKIlfZH9QoBb9LEILJIJ1UdW5XO0fa4
         fhTfkG+TWD7cgzS4D4lEH4pm5RsBcoGlA+dU3DGG7c32dnO5u7zQyZjHmvv35gIC1R8A
         VN0wCV+hVQRRE31RfrWi/FKwoP7BvJVrUC9M0ZSBVj04MtoiL133FWscKqkEcH1cS+n+
         0m2uBOwxrj0jQUcYBKBY8hJs4OOD7hrcwQ/GdwRByiymBYqkHuZZro07Pl2/raTwAGtY
         G/Nw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=y2OE9KTn9pG2FZsXZ5Q7dzdVN3ozaTIsX9wp6xG+ghE=;
        b=VogNsD4oOs8F0LTH3SY5LcR/hIXqCTF3iAgJ/bNXHi7tPPp/aMtQ2hAjgHQMhFOZrt
         3Fo1XuSpUjCfwSrlou6ZiSSWEIur3S1A6d31Oty3FlZw08TfhANjLCGtnuvNjxLoMjJB
         2pU7aHMP/88NU6JV9VO3msdXIzvGSdCeR5gkNuOB1skjUuaSr7YzOtlDPHKASyyvhOjk
         cNbutz/Ds4mNqs+ejQ0mEKSi54hxXBNcstfN7uh9Zhie0it1Z2+fWWNA9AYplXxdJgZ8
         gLZf24Ryrgk9fvhcId9RJeAW6U6Esbi6QYKaWSt9AYEornK2UNCxKMenCk5vWO+LedML
         5vjQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id j10si40264774pgt.155.2018.11.19.09.09.18;
        Mon, 19 Nov 2018 09:09:32 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2407289AbeKTDcf (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:32:35 -0500
Received: from foss.arm.com ([217.140.101.70]:33352 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2406505AbeKTDce (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:32:34 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 364C215BF;
        Mon, 19 Nov 2018 09:08:16 -0800 (PST)
Received: from e112298-lin.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 3CF413F5B7;
        Mon, 19 Nov 2018 09:08:14 -0800 (PST)
From: Julien Thierry <julien.thierry@arm.com>
To: linux-kernel@vger.kernel.org, kvmarm@lists.cs.columbia.edu
Cc: marc.zyngier@arm.com, Christoffer.Dall@arm.com,
        linux-arm-kernel@lists.infradead.org,
        linux-rt-users@vger.kernel.org, tglx@linutronix.de,
        rostedt@goodmis.org, bigeasy@linutronix.de,
        Julien Thierry <julien.thierry@arm.com>,
        Christoffer Dall <christoffer.dall@arm.com>
Subject: [PATCH 3/4] KVM: arm/arm64: vgic: Make vgic_dist->lpi_list_lock a raw_spinlock
Date: Mon, 19 Nov 2018 17:07:58 +0000
Message-Id: <1542647279-46609-4-git-send-email-julien.thierry@arm.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1542647279-46609-1-git-send-email-julien.thierry@arm.com>
References: <1542647279-46609-1-git-send-email-julien.thierry@arm.com>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3XUlO7vJbOXZZAA--.2472S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZF4rKFyrXF1xGr1UWFyfWFg_yoWrZF1DpF
	W5JF98Cr4fZFy8Xw4Ut3Z5urs2g3s7WF47ZFW8Ww1xAr9rt3yFgwn3Ary5uF4Yqr4fXF1f
	uF1Fq3Wrua1DAF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPvb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r126r1DMcIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VW8MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26F4UJVW0
	owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64
	kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG
	67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MI
	IYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuY
	vjxUqyrWUUUUU

vgic_dist->lpi_list_lock must always be taken with interrupts disabled as
it is used in interrupt context.

For configurations such as PREEMPT_RT_FULL, this means that it should
be a raw_spinlock since RT spinlocks are interruptible.

Signed-off-by: Julien Thierry <julien.thierry@arm.com>
Cc: Christoffer Dall <christoffer.dall@arm.com>
Cc: Marc Zyngier <marc.zyngier@arm.com>
---
 include/kvm/arm_vgic.h        |  2 +-
 virt/kvm/arm/vgic/vgic-init.c |  2 +-
 virt/kvm/arm/vgic/vgic-its.c  |  8 ++++----
 virt/kvm/arm/vgic/vgic.c      | 10 +++++-----
 4 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/include/kvm/arm_vgic.h b/include/kvm/arm_vgic.h
index b542605..32954e1 100644
--- a/include/kvm/arm_vgic.h
+++ b/include/kvm/arm_vgic.h
@@ -256,7 +256,7 @@ struct vgic_dist {
 	u64			propbaser;

 	/* Protects the lpi_list and the count value below. */
-	spinlock_t		lpi_list_lock;
+	raw_spinlock_t		lpi_list_lock;
 	struct list_head	lpi_list_head;
 	int			lpi_list_count;

diff --git a/virt/kvm/arm/vgic/vgic-init.c b/virt/kvm/arm/vgic/vgic-init.c
index 1128e97..330c1ad 100644
--- a/virt/kvm/arm/vgic/vgic-init.c
+++ b/virt/kvm/arm/vgic/vgic-init.c
@@ -64,7 +64,7 @@ void kvm_vgic_early_init(struct kvm *kvm)
 	struct vgic_dist *dist = &kvm->arch.vgic;

 	INIT_LIST_HEAD(&dist->lpi_list_head);
-	spin_lock_init(&dist->lpi_list_lock);
+	raw_spin_lock_init(&dist->lpi_list_lock);
 }

 /* CREATION */
diff --git a/virt/kvm/arm/vgic/vgic-its.c b/virt/kvm/arm/vgic/vgic-its.c
index 911ba61..ab3f477 100644
--- a/virt/kvm/arm/vgic/vgic-its.c
+++ b/virt/kvm/arm/vgic/vgic-its.c
@@ -73,7 +73,7 @@ static struct vgic_irq *vgic_add_lpi(struct kvm *kvm, u32 intid,
 	irq->target_vcpu = vcpu;
 	irq->group = 1;

-	spin_lock_irqsave(&dist->lpi_list_lock, flags);
+	raw_spin_lock_irqsave(&dist->lpi_list_lock, flags);

 	/*
 	 * There could be a race with another vgic_add_lpi(), so we need to
@@ -101,7 +101,7 @@ static struct vgic_irq *vgic_add_lpi(struct kvm *kvm, u32 intid,
 	dist->lpi_list_count++;

 out_unlock:
-	spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
+	raw_spin_unlock_irqrestore(&dist->lpi_list_lock, flags);

 	/*
 	 * We "cache" the configuration table entries in our struct vgic_irq's.
@@ -332,7 +332,7 @@ int vgic_copy_lpi_list(struct kvm *kvm, struct kvm_vcpu *vcpu, u32 **intid_ptr)
 	if (!intids)
 		return -ENOMEM;

-	spin_lock_irqsave(&dist->lpi_list_lock, flags);
+	raw_spin_lock_irqsave(&dist->lpi_list_lock, flags);
 	list_for_each_entry(irq, &dist->lpi_list_head, lpi_list) {
 		if (i == irq_count)
 			break;
@@ -341,7 +341,7 @@ int vgic_copy_lpi_list(struct kvm *kvm, struct kvm_vcpu *vcpu, u32 **intid_ptr)
 			continue;
 		intids[i++] = irq->intid;
 	}
-	spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
+	raw_spin_unlock_irqrestore(&dist->lpi_list_lock, flags);

 	*intid_ptr = intids;
 	return i;
diff --git a/virt/kvm/arm/vgic/vgic.c b/virt/kvm/arm/vgic/vgic.c
index aab8dba..01bd18c 100644
--- a/virt/kvm/arm/vgic/vgic.c
+++ b/virt/kvm/arm/vgic/vgic.c
@@ -72,7 +72,7 @@ static struct vgic_irq *vgic_get_lpi(struct kvm *kvm, u32 intid)
 	struct vgic_irq *irq = NULL;
 	unsigned long flags;

-	spin_lock_irqsave(&dist->lpi_list_lock, flags);
+	raw_spin_lock_irqsave(&dist->lpi_list_lock, flags);

 	list_for_each_entry(irq, &dist->lpi_list_head, lpi_list) {
 		if (irq->intid != intid)
@@ -88,7 +88,7 @@ static struct vgic_irq *vgic_get_lpi(struct kvm *kvm, u32 intid)
 	irq = NULL;

 out_unlock:
-	spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
+	raw_spin_unlock_irqrestore(&dist->lpi_list_lock, flags);

 	return irq;
 }
@@ -138,15 +138,15 @@ void vgic_put_irq(struct kvm *kvm, struct vgic_irq *irq)
 	if (irq->intid < VGIC_MIN_LPI)
 		return;

-	spin_lock_irqsave(&dist->lpi_list_lock, flags);
+	raw_spin_lock_irqsave(&dist->lpi_list_lock, flags);
 	if (!kref_put(&irq->refcount, vgic_irq_release)) {
-		spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
+		raw_spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
 		return;
 	};

 	list_del(&irq->lpi_list);
 	dist->lpi_list_count--;
-	spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
+	raw_spin_unlock_irqrestore(&dist->lpi_list_lock, flags);

 	kfree(irq);
 }
--
1.9.1
