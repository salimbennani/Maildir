Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:39:48 -0000
Received: from icoremail.net (unknown [209.85.215.182])
	by mail-app4 (Coremail) with SMTP id cS_KCgDXvyYUF_RbDDTgAQ--.37593S3;
	Tue, 20 Nov 2018 22:15:49 +0800 (CST)
Received: from mail-pg1-f182.google.com (unknown [209.85.215.182])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnD0sTF_Rb4YxeAA--.745S3;
	Tue, 20 Nov 2018 22:15:47 +0800 (CST)
Received: by mail-pg1-f182.google.com with SMTP id 17so975686pgg.1
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 06:15:47 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=aMqI0dBy4Abej7GJZy/tbyDZY7a2a99LDsicnV01DxY=;
        b=En/bnArQwcwt9LehKOhIYfh0FZODMTioonESHdiidDxmqqqnUthV4GJKZkJ3mnxrFg
         bTslHF4QbFiCaOuaiytI61zBsQYJvhpA4CB1h1feOXcyda9/AFe/B219p4gkbZ5ZSWhi
         kkZMrSKFKo6FOm0Y5aeZZP91Mh5WJw5pxQn/L1ENIls7LGWRU3TEhS9BOvI0Gy428edr
         RDSoZoD/NU1h7QHwBqyYEd5kFg05v3JzEn0i3PQ72HBcTzS8wTSRZIxSpZcsbAzJGebK
         60rgSTkZ7Y5kAINUs3Ll0a2Sg9jW0TBTLY5vMyuJ+mpku6HuFLoio/qEGSWEtKF5lkIP
         YfsQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWbEj/6oP3XPdagAMDaoTlEra6ArEQAqmQsDrShG6WvquDvx9osF
	IJxaQX6Btb1PpBdpVrwo6WINIeXLnqvSJDGblWLGDwgphN2N/ZY=
X-Received: by 2002:a63:f615:: with SMTP id m21mr2110587pgh.428.1542723347526;
        Tue, 20 Nov 2018 06:15:47 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp653099pju;
        Tue, 20 Nov 2018 06:15:46 -0800 (PST)
X-Google-Smtp-Source: AJdET5egnq8vebu+FhYDL/da4xsqGtxNzmfUv7OLyI5XpB3cJeSbceW8ZrLmc0i23fDsfXZAf1Mc
X-Received: by 2002:a62:25c2:: with SMTP id l185-v6mr2454782pfl.64.1542723346233;
        Tue, 20 Nov 2018 06:15:46 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542723346; cv=none;
        d=google.com; s=arc-20160816;
        b=mEhr6u8R5un/Ka0ZJQo5BvMy273HimV7eXzzbKQlA/uaiqTUPz65E55IqaCEFIcNbW
         Squcya1FzT6Qg5JwZQ7OhpmuzNDenTo/JoVp9nREGFpjCzY4OJNoogJ/Sw/gg4RdQDtt
         g7WC2b88H2qNvOE02YD/BnrqORF5mKEpim28bii07r36a5AfbyyVJl4Wx3gde/jdw67c
         oVpT/6sYFt3RKtjfrEhiwEF2kMolWC+crs4yqmcwVJdOMmbmBumm1la3o24e7g7t9SKB
         iH7I/gIn7LnewXLtM60DT06gtcSTzMheCV8UZrZDK4naFFRlujmFiF0GS664tt6l3VAL
         ymyw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=aMqI0dBy4Abej7GJZy/tbyDZY7a2a99LDsicnV01DxY=;
        b=R2cooao38Wn5RFUukeNv/AUTGe5O9zAXBRZ4vu1vh/zY5tKXNMouXbomrEwYDRtWaw
         n7MZRHIvDMJuf98AXqnaeyDJAMjA/5EES1eg+HIbgiKyWlxiszFckz5470M9spc3I1x1
         LqDCdRaeRV7tCqRXtgv1shrnmC9ldx5NTwONj2rIqjQvSvtsQYmpJ4M1Yuu6Y4hDytLt
         qYuZnrnUKxJKJw6Jsl92Z6mfNHK3d92Q0EAWoAjPJTOdkx9qxEt0UtW4YVNOTpnsMU2l
         jHpGTzLzLrgVC7PzIJBjAzoXd89SiUpxCFz/qzVaawnB6nVP444B1PjkXNsCdAm5oo7j
         9fHg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id f16si7943525pgg.173.2018.11.20.06.15.31;
        Tue, 20 Nov 2018 06:15:46 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728746AbeKUAoP (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 19:44:15 -0500
Received: from relmlor1.renesas.com ([210.160.252.171]:10136 "EHLO
        relmlie5.idc.renesas.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1725995AbeKUAoO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 19:44:14 -0500
Received: from unknown (HELO relmlir5.idc.renesas.com) ([10.200.68.151])
  by relmlie5.idc.renesas.com with ESMTP; 20 Nov 2018 23:14:51 +0900
Received: from vbox.ree.adwin.renesas.com (unknown [10.226.37.67])
        by relmlir5.idc.renesas.com (Postfix) with ESMTP id 19B3840121CB;
        Tue, 20 Nov 2018 23:14:48 +0900 (JST)
From: Phil Edworthy <phil.edworthy@renesas.com>
To: Michael Turquette <mturquette@baylibre.com>,
        Stephen Boyd <sboyd@kernel.org>,
        Russell King <linux@armlinux.org.uk>
Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= 
        <u.kleine-koenig@pengutronix.de>, linux-clk@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        Phil Edworthy <phil.edworthy@renesas.com>
Subject: [PATCH v8] clk: Add (devm_)clk_get_optional() functions
Date: Tue, 20 Nov 2018 14:14:45 +0000
Message-Id: <20181120141445.21378-1-phil.edworthy@renesas.com>
X-Mailer: git-send-email 2.17.1
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnD0sTF_Rb4YxeAA--.745S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZr47GFyxCF4DCr4UuFyDZFb_yoW5uFyfpF
	WkJFy5Gw48Cry8u3y3Xrs2gF9avr18KFy7G34fK3ZYkws8JFW5tFWrK345Za13Ar95Za1S
	qrWjgrWrCFy8CFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPIb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVWxJVW8Jr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_Xrylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI
	42IY6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBIdaVFxhVjvjDU0xZFpf9x07bv
	XocUUUUU=

This adds clk_get_optional() and devm_clk_get_optional() functions to get
optional clocks.
They behave the same as (devm_)clk_get except where there is no clock
producer. In this case, instead of returning -ENOENT, the function
returns NULL. This makes error checking simpler and allows
clk_prepare_enable, etc to be called on the returned reference
without additional checks.

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
v8:
 - Remove else clause
v7:
 - Instead of messing with the core functions, simply wrap them for the
   _optional() versions. By putting clk_get_optional() inline in the header
   file, we can get rid of the arch specific patches as well.
v6:
 - Add doxygen style comment for devm_clk_get_optional() args
v5:
 - No changes.
v4:
 - No changes.
v3:
 - No changes.
---
 drivers/clk/clk-devres.c | 11 +++++++++++
 include/linux/clk.h      | 27 +++++++++++++++++++++++++++
 2 files changed, 38 insertions(+)

diff --git a/drivers/clk/clk-devres.c b/drivers/clk/clk-devres.c
index 12c87457eca1..c6f4a1a92c5f 100644
--- a/drivers/clk/clk-devres.c
+++ b/drivers/clk/clk-devres.c
@@ -34,6 +34,17 @@ struct clk *devm_clk_get(struct device *dev, const char *id)
 }
 EXPORT_SYMBOL(devm_clk_get);
 
+struct clk *devm_clk_get_optional(struct device *dev, const char *id)
+{
+	struct clk *clk = devm_clk_get(dev, id);
+
+	if (clk == ERR_PTR(-ENOENT))
+		clk = NULL;
+
+	return clk;
+}
+EXPORT_SYMBOL(devm_clk_get_optional);
+
 struct clk_bulk_devres {
 	struct clk_bulk_data *clks;
 	int num_clks;
diff --git a/include/linux/clk.h b/include/linux/clk.h
index a7773b5c0b9f..3ea3c78f62dd 100644
--- a/include/linux/clk.h
+++ b/include/linux/clk.h
@@ -383,6 +383,17 @@ int __must_check devm_clk_bulk_get_all(struct device *dev,
  */
 struct clk *devm_clk_get(struct device *dev, const char *id);
 
+/**
+ * devm_clk_get_optional - lookup and obtain a managed reference to an optional
+ *			   clock producer.
+ * @dev: device for clock "consumer"
+ * @id: clock consumer ID
+ *
+ * Behaves the same as devm_clk_get except where there is no clock producer. In
+ * this case, instead of returning -ENOENT, the function returns NULL.
+ */
+struct clk *devm_clk_get_optional(struct device *dev, const char *id);
+
 /**
  * devm_get_clk_from_child - lookup and obtain a managed reference to a
  *			     clock producer from child node.
@@ -718,6 +729,12 @@ static inline struct clk *devm_clk_get(struct device *dev, const char *id)
 	return NULL;
 }
 
+static inline struct clk *devm_clk_get_optional(struct device *dev,
+						const char *id)
+{
+	return NULL;
+}
+
 static inline int __must_check devm_clk_bulk_get(struct device *dev, int num_clks,
 						 struct clk_bulk_data *clks)
 {
@@ -862,6 +879,16 @@ static inline void clk_bulk_disable_unprepare(int num_clks,
 	clk_bulk_unprepare(num_clks, clks);
 }
 
+static inline struct clk *clk_get_optional(struct device *dev, const char *id)
+{
+	struct clk *clk = clk_get(dev, id);
+
+	if (clk == ERR_PTR(-ENOENT))
+		clk = NULL;
+
+	return clk;
+}
+
 #if defined(CONFIG_OF) && defined(CONFIG_COMMON_CLK)
 struct clk *of_clk_get(struct device_node *np, int index);
 struct clk *of_clk_get_by_name(struct device_node *np, const char *name);
-- 
2.17.1
