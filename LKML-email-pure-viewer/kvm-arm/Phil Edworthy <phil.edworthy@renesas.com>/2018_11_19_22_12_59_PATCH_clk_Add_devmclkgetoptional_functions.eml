Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:30:43 -0000
Received: from icoremail.net (unknown [209.85.210.178])
	by mail-app2 (Coremail) with SMTP id by_KCgC3f9EsxfJbSJa5AQ--.54784S3;
	Mon, 19 Nov 2018 22:14:06 +0800 (CST)
Received: from mail-pf1-f178.google.com (unknown [209.85.210.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAX_kksxfJb6dtYAA--.2466S3;
	Mon, 19 Nov 2018 22:14:04 +0800 (CST)
Received: by mail-pf1-f178.google.com with SMTP id v68-v6so14930435pfk.0
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 06:14:04 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:sender:precedence:list-id;
        bh=WIPmpAHoTKzI092Vbutegjv8CAhJKIZY9AROjcgmaxM=;
        b=BI1yxDrLatkCWiAM3S4xAjRKT1/cZ5KRHxwCCjPOtUs7R3BJszy/yrx4EqZ5h0NAo9
         DWTTmEuLSDea8bpjp7NDBHJUdRFaxqn0Bn2rBbj3QAphbGF2rQKfQBbpPAeWsCo910t1
         pLmrKkbM9nJyElGHB7W84Vlvbu4GdbGW6CKUQWWMHAVUJ/E9fQ6XkBK22X/tmQd3aybn
         JML09MWw3/j33maNLT5JBOVhGRNOThImQc7T82Zo97sbyhgAtUKzDqIb4u+/Hy1ycH/4
         evVhRQEBePJU9C8wJY8TGwrTA2Hdyl61Ww43hmjRb7q+Pb1H3kviu/q9GB7IsXbKyCzE
         Co/g==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gLwC0IvHPIdQAOReCJyZydyMHHhbbsQTb2MG/hTfUkNGeSZAiOY
	NdKrwjnrBfTNA3Q4ppBBqDkQdvNocX54WtysL5dMG3dh7cXDffU=
X-Received: by 2002:a63:3c44:: with SMTP id i4mr19983841pgn.286.1542636844040;
        Mon, 19 Nov 2018 06:14:04 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2713359pju;
        Mon, 19 Nov 2018 06:14:03 -0800 (PST)
X-Google-Smtp-Source: AJdET5eSQQfLPBw/PWk4o4l63VM5iGuwcioTv0xIFLV+WyYR0wKzWhJLqDbhTf/N8HtzQPv6uno+
X-Received: by 2002:a62:ed09:: with SMTP id u9-v6mr22656234pfh.188.1542636843147;
        Mon, 19 Nov 2018 06:14:03 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542636843; cv=none;
        d=google.com; s=arc-20160816;
        b=Xk9cs/26bc7reEzklAjOuvkM2/JDA2NXv05cYIZd7wz8/DZqJguxk/nuYm/MyiY7gO
         gXBuW+q0V6ZxGfaEVk6dmSmzAKLbhTlHqli9XvzsOiAJ/C5rYLsxMNNlz0cZDpnM+BO5
         xPKjFCFelBqbi62X7Ofm1LfxBhA0+JJyhLIT5omPSyPwandzjjgqbSt6PDcG6nWfU6x/
         h3NhwCX1SdYjYvYoPKETMqLM1yvM7tgg80IW15ztl3kSG+e96g29B8qh73/N5ACbmAFW
         zBzNFIbOBRYgwKLWRjkWSAtWnYvY5USTWZNFm3lBmMf5YcpCyTxjfbbo3LQyeqvkY6r8
         fx/A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:message-id:date:subject:cc:to:from;
        bh=WIPmpAHoTKzI092Vbutegjv8CAhJKIZY9AROjcgmaxM=;
        b=SYGhdsxj4DDpuZqVyTGSm96D1LA2IBjANyVeQ++ALiRWc8y/scWiD+s9wZf3O9nnh2
         qbWh7JN4pEzHbL8MqUcNRgrJyaH9kGiIKZgiHJMXpsRG8Rl6gnWhLSbcs7zn+tmKftwg
         8V1MO1FTJ2jvxbTJRgii+/uikH7hivC1ShL+NtaThHF44fKuzL06U73/lDjVjhwpgTgx
         XMITSV//rb9hy27ZLk1nCC1B+htMjCw3aQBhtOQOyUYxgxm7a6aURh/5dURAkVQJDXNm
         XPSVQs3OUyg+n2/DCn7+s0ZdODIx8c1lUF9VoMJ7r9+CDR4qo4mO2XROCvrB5TNRy1m9
         sBRw==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 4-v6si42191482pla.176.2018.11.19.06.13.48;
        Mon, 19 Nov 2018 06:14:03 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729487AbeKTAgy (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 19:36:54 -0500
Received: from relmlor1.renesas.com ([210.160.252.171]:45976 "EHLO
        relmlie5.idc.renesas.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1729331AbeKTAgy (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 19:36:54 -0500
Received: from unknown (HELO relmlir5.idc.renesas.com) ([10.200.68.151])
  by relmlie5.idc.renesas.com with ESMTP; 19 Nov 2018 23:13:07 +0900
Received: from vbox.ree.adwin.renesas.com (unknown [10.226.37.67])
        by relmlir5.idc.renesas.com (Postfix) with ESMTP id 5B929401BF07;
        Mon, 19 Nov 2018 23:13:03 +0900 (JST)
From: Phil Edworthy <phil.edworthy@renesas.com>
To: Stephen Boyd <sboyd@kernel.org>,
        Michael Turquette <mturquette@baylibre.com>,
        Russell King <linux@armlinux.org.uk>
Cc: linux-clk@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-renesas-soc@vger.kernel.org,
        Phil Edworthy <phil.edworthy@renesas.com>,
        Greg Ungerer <gerg@linux-m68k.org>,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        Ralf Baechle <ralf@linux-mips.org>,
        Paul Burton <paul.burton@mips.com>,
        James Hogan <jhogan@kernel.org>,
        Jiaxun Yang <jiaxun.yang@flygoat.com>,
        Huacai Chen <chenhc@lemote.com>, Guan Xuetao <gxt@pku.edu.cn>,
        =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= 
        <u.kleine-koenig@pengutronix.de>, linux-m68k@lists.linux-m68k.org,
        linux-mips@linux-mips.org, linux-arm-kernel@lists.infradead.org
Subject: [PATCH] clk: Add (devm_)clk_get_optional() functions
Date: Mon, 19 Nov 2018 14:12:59 +0000
Message-Id: <20181119141259.11992-1-phil.edworthy@renesas.com>
X-Mailer: git-send-email 2.17.1
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAX_kksxfJb6dtYAA--.2466S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZr47GFyxCFy5Gry5Kr4Uurg_yoW5Zw4DpF
	WkAFy5Gw48CryxurW3Xrs2gF9avr18KFW7G34fK3ZYkwsxJFW5tFWFg345Za13A3s5Za1S
	qr4jgrWrCFy8CF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xS
	Y4AK6IIF6ry5MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIx
	AIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF
	0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4
	vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_
	Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVW8ZVWrXwCIc40Y0x
	0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZEXa7IU5F-
	e5UUUUU==

This adds clk_get_optional() and devm_clk_get_optional() functions to get
optional clocks.
They behave the same as (devm_)clk_get except where there is no clock
producer. In this case, instead of returning -ENOENT, the function
returns NULL. This makes error checking simpler and allows
clk_prepare_enable, etc to be called on the returned reference
without additional checks.

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
v7:
 - Instead of messing with the core functions, simply wrap them for the
   _optional() versions. By putting clk_get_optional() inline in the header
   file, we can get rid of the arch specific patches as well.
v6:
 - Add doxygen style comment for devm_clk_get_optional() args
v5:
 - No changes.
v4:
 - No changes.
v3:
 - No changes.
---
 drivers/clk/clk-devres.c | 11 +++++++++++
 include/linux/clk.h      | 27 +++++++++++++++++++++++++++
 2 files changed, 38 insertions(+)

diff --git a/drivers/clk/clk-devres.c b/drivers/clk/clk-devres.c
index 12c87457eca1..f0033d937c39 100644
--- a/drivers/clk/clk-devres.c
+++ b/drivers/clk/clk-devres.c
@@ -34,6 +34,17 @@ struct clk *devm_clk_get(struct device *dev, const char *id)
 }
 EXPORT_SYMBOL(devm_clk_get);
 
+struct clk *devm_clk_get_optional(struct device *dev, const char *id)
+{
+	struct clk *clk = devm_clk_get(dev, id);
+
+	if (clk == ERR_PTR(-ENOENT))
+		return NULL;
+	else
+		return clk;
+}
+EXPORT_SYMBOL(devm_clk_get_optional);
+
 struct clk_bulk_devres {
 	struct clk_bulk_data *clks;
 	int num_clks;
diff --git a/include/linux/clk.h b/include/linux/clk.h
index a7773b5c0b9f..c7bbb0678057 100644
--- a/include/linux/clk.h
+++ b/include/linux/clk.h
@@ -383,6 +383,17 @@ int __must_check devm_clk_bulk_get_all(struct device *dev,
  */
 struct clk *devm_clk_get(struct device *dev, const char *id);
 
+/**
+ * devm_clk_get_optional - lookup and obtain a managed reference to an optional
+ *			   clock producer.
+ * @dev: device for clock "consumer"
+ * @id: clock consumer ID
+ *
+ * Behaves the same as devm_clk_get except where there is no clock producer. In
+ * this case, instead of returning -ENOENT, the function returns NULL.
+ */
+struct clk *devm_clk_get_optional(struct device *dev, const char *id);
+
 /**
  * devm_get_clk_from_child - lookup and obtain a managed reference to a
  *			     clock producer from child node.
@@ -718,6 +729,12 @@ static inline struct clk *devm_clk_get(struct device *dev, const char *id)
 	return NULL;
 }
 
+static inline struct clk *devm_clk_get_optional(struct device *dev,
+						const char *id)
+{
+	return NULL;
+}
+
 static inline int __must_check devm_clk_bulk_get(struct device *dev, int num_clks,
 						 struct clk_bulk_data *clks)
 {
@@ -862,6 +879,16 @@ static inline void clk_bulk_disable_unprepare(int num_clks,
 	clk_bulk_unprepare(num_clks, clks);
 }
 
+static inline struct clk *clk_get_optional(struct device *dev, const char *id)
+{
+	struct clk *clk = clk_get(dev, id);
+
+	if (clk == ERR_PTR(-ENOENT))
+		return NULL;
+	else
+		return clk;
+}
+
 #if defined(CONFIG_OF) && defined(CONFIG_COMMON_CLK)
 struct clk *of_clk_get(struct device_node *np, int index);
 struct clk *of_clk_get_by_name(struct device_node *np, const char *name);
-- 
2.17.1
