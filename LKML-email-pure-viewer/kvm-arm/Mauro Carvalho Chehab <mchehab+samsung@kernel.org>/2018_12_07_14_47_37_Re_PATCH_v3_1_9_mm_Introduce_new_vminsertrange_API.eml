Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:49:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7FE9C5803E4;
	Fri,  7 Dec 2018 06:48:45 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 06:48:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6XbQCxObSRA9yGxPEm0l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj9ocbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJOT43/n/KhMJzjq1brhWvqBNjzIDbe4GVLPhzc7jBfd4YX2dNQtxcWzBfDo66?=
 =?us-ascii?q?coABD/ABPeFdr4TloFUBtwa+BROrBOjy1DJHnGX23bMg3OQlEQHG2xErEswOsH?=
 =?us-ascii?q?vKrNX6LrwdWv2ywanN0TrDb+1Z2Tfn54fTdRwhuuuDXbdrccrMz0kvGBjIjlaO?=
 =?us-ascii?q?poz/OTOayOANv3Kc7+p6WuKikmgqoBxyrDi33soglJXFi4YPxlzZ+yh13pw5Kc?=
 =?us-ascii?q?C7RUJne9KpEZlduzmHO4Z0Rs4uWWVltSYgxrAIt5O3ZjYGxZomyhPZdveJaZKH?=
 =?us-ascii?q?4gj5W+aUOTp4hGxqeLa4hxuq70igxfPzVtOu3FZJsCVFiN/MuW4J1xDJ7ciHUP?=
 =?us-ascii?q?R98l+g2TaJyQ/T9vlJLV4omaffMZIt37A9moQJvUjeHSL6hF/6ga6Ue0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMqAvmsy5HOQ5PRECX2uF9uSm0r3s40n5TKxNjvw4lK?=
 =?us-ascii?q?nWroraKN8Fpq62HQBVyJwv6xWhADe81tQXg30HIEhCeBKdgIjlI0vOL+zgDfej?=
 =?us-ascii?q?n1Ssly9mx/THPr3iHJrBNHfCkKr6cLZ56k5czhczzN9F65JVDLEBPOz8WkvruN?=
 =?us-ascii?q?PECR85NhS+w/z7B9VlyoMeRWWPD7eZMKzIsF+I+vggI+6WaI8VpTbyMf4l5/H1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o+5jE8Fo2qF4TDRoergLyH2ye2BZlWZmFAClCRHnbkbYSEW/EQaC2MJs9tiCAL?=
 =?us-ascii?q?Vb+kS4U5zxGhqBf6y6Z7LurT4iAXr4nj1Nhy5+3Qjx0y7yZ7D8aG3mGJTmF0mH?=
 =?us-ascii?q?4IRjAs0KB+p0x91kmM0axij/NEEtxT4utDUh0mOp7E0+x6F9fyVxrCftiTTlaq?=
 =?us-ascii?q?WNGmATArQdI3zN8DeEJ9G9SkjhDe0CumGb4Vl7qXBJMq9qLQxWT+J8F4y3zezq?=
 =?us-ascii?q?kuk0EmQtdTNW2hnqNw6hLcB5DXnEmDl6alb6Ic3DXT+2eFymaOuEJYUAt0Uaje?=
 =?us-ascii?q?WXAfZ03Wrcn250/YTr+uD6gnPRVFycKYNqRKbdjph01cRPj/INTef36xm2CoCB?=
 =?us-ascii?q?mV3LyMcpTld38d3CrHDkgEiB4c/XCdOAg6ByehpX/eDTN0GVLuZUPs7fdxqHeh?=
 =?us-ascii?q?QkAoyAGKalVr16Cp9R4NmfycV/QT06oYuCcgrjV0G0q939LWCtaauwptZqJcYc?=
 =?us-ascii?q?k54FdG02LZuBdwPpihL6Bkm14ffB57v0Lo1xVrFIpAldImo28tzAp3MaiYyk9O?=
 =?us-ascii?q?dyuE3ZDsPb3aMnP9/BSxZK/ZxF7f0Mya9bwS6PslsVrjugKpFk0883h819lV0n?=
 =?us-ascii?q?2c5ojFDQYIUJLxVFo3+AZ+p73AfiY94IbU32V2Maaoqj/Cx84pBOw9xxegYtdT?=
 =?us-ascii?q?Kr+LGBXzEs0aHceuLuMqlkOtbhIFOuBS6aE1M9mnd/uAxK6kIuJgkCi6gmRA5Y?=
 =?us-ascii?q?B3yliM+DZkSu7Uw5YFxOmV3hGGVzjgllihqN34mYdeaTEUAGW/0ynkCJdNaaJo?=
 =?us-ascii?q?eYYEFHmhI9ewxtV4nJPtX39Y9Fi+B1IJwsOpeBySb0Dj0g1Uz0gYvXunmS6gxT?=
 =?us-ascii?q?xujz4ptraf3DDJw+n6dBsHO3RHRWl4gVf3PIi0icsXXEypbwgviRuk6lz2x6ld?=
 =?us-ascii?q?pKRjMWbTRV1EcDTxL2FnSqGwrKaNY9ZT6JM0tiVaSOa8bkqASr7+oBsa1DnvH3?=
 =?us-ascii?q?BEyzA4dDGqu5P5kAJ8iG+GKHZzrXzZedx/xBvF5dzcQ+JR0SQCRCVilTbXAV28?=
 =?us-ascii?q?NcGz/dqIj5fDrvy+V2W5W5xTaybrypmMtCm65W1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYoh5Efw3kaio+V/Xoai2jz?=
 =?us-ascii?q?N9pb1Ln6bHoMQz4L3tHU7BLk2E1lMnKG2Yb5Wm+BzctmYtmwenkW1T4l78BWFK?=
 =?us-ascii?q?eU66RJnS50olq7tw3de/Z8kSkGyfsy9nEamfoGtxQ3ziWSGb0SGUhYPSrxlxWH?=
 =?us-ascii?q?9dy+raNXZHqxfri0zkZxgdehDLSaqAFGRHn5YosiHTN37shnLFLM13jz5pvled?=
 =?us-ascii?q?bKa9ITqwaUkwzBj+VOLJIxl/wKhTdoOG7nvH0lzfI7ggJq3Z2goIeHLGBt9rqj?=
 =?us-ascii?q?AhFELj31e98T+jb1gKlFhMmW2ISvHoh7FjUPQZvlVvaoEDMUtfT6OAeCCjw8qn?=
 =?us-ascii?q?GHGbXBGQ+T8ltpr3XKE5qzLXGYOGEZzcl+RBmaPEFfghobXDAkkZ4iDAyq2Nbt?=
 =?us-ascii?q?cERk5jAS+174rAFDyvlzOhn7U2ffohqoazguRJieKhpW8h9N50PPPcOC6eJzGj?=
 =?us-ascii?q?lS/oe9owyVNmybewNIAHkJW0yDGlDjJ6Su6sPG8+SCHeq+KP3OYbqVpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+iJpr8?=
 =?us-ascii?q?C/8/frWAP16YuMEbtSNtpv9A6sgaeeLO6dnyJ5KTde1pMRyn7E0rkf3FgOiy5w?=
 =?us-ascii?q?czmhC6gPtSnITKjIgK9YEwYbaz9vNMtP968zxBRNNtXBitzr1r90lPo1C1ZeWF?=
 =?us-ascii?q?zlm8GpY9EKIm6nOFPGAkaLKKqJJTnRz87rZqO8TKVajP9IuB2opTabD0jjMyyf?=
 =?us-ascii?q?lznoUhCjK/1DgDuHMxxepo69dA1gCWziTNLgdx26P8V7jTwwwb0omHzKMXQQPi?=
 =?us-ascii?q?R7c0NItreQ9z9Xgu1jG2xd6XpoNemFlDyf7+ndK5YWt+NkAyV0l+1A5nQ6xKBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKO7g1ePvDi8YRYRXfP/1ov6m?=
 =?us-ascii?q?yKBxkQ749nENH1/aRRzMXfvK32ITZGtdnT+J1PKdLTLZeiOWc7NlLCESTKBQ8F?=
 =?us-ascii?q?SnaANWzfjkYVxPSZ9nCVp5J5sZHpg4cIRZdYWUYzG/dcDV5qSo9RaKxrVy8pxO?=
 =?us-ascii?q?bIxPUD4mCz+UHc?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BtAQBjhwpch0O0hNFjgheBW4IRJ5gjg?=
 =?us-ascii?q?g0UiH6OPYFzLBMBh10iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYigmUBAgI?=
 =?us-ascii?q?BAQI3BgEBNwEEAQkBAQoOExMSAwwSNgYTBYMcgWoDDQgCAgGkLIIfgnYBAQWFB?=
 =?us-ascii?q?g2CFAiMH4IWg241gleIBYdniByFb4pJLgmOHIMkCxiJc4dFLI5ji1KCDU0wgy+?=
 =?us-ascii?q?DPQECh1yFVygygQQBAQGKQAEB?=
X-IPAS-Result: =?us-ascii?q?A0BtAQBjhwpch0O0hNFjgheBW4IRJ5gjgg0UiH6OPYFzLBM?=
 =?us-ascii?q?Bh10iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYigmUBAgIBAQI3BgEBNwEEA?=
 =?us-ascii?q?QkBAQoOExMSAwwSNgYTBYMcgWoDDQgCAgGkLIIfgnYBAQWFBg2CFAiMH4IWg24?=
 =?us-ascii?q?1gleIBYdniByFb4pJLgmOHIMkCxiJc4dFLI5ji1KCDU0wgy+DPQECh1yFVygyg?=
 =?us-ascii?q?QQBAQGKQAEB?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55352761"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 06:48:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726113AbeLGOsk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 09:48:40 -0500
Received: from casper.infradead.org ([85.118.1.10]:36492 "EHLO
        casper.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725998AbeLGOsj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 09:48:39 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=casper.20170209; h=Content-Transfer-Encoding:Content-Type:
        MIME-Version:References:In-Reply-To:Message-ID:Subject:Cc:To:From:Date:Sender
        :Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
        Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=oNrFVpEvwM5tm4S1RtkTXeWDU/RF+Ze1Ir2ZnY6+CAM=; b=PdUOL7VdOW5866PdBzfBdxOEHd
        iCvBJtzhh5fYvtfStmDGKOlwap1S9kw9mNeuOQfFzSVTDiDvwoO2lJFAsEQ+8ma+PwNZWVXScW2HH
        dkRZuw8a0j8Dgy5b07XcRlP2glp7+1pXyqbjPv8Gk6a7RrnAE2qjfsSTDGg3TCGMLBp/Z/ZdXNanW
        4DYmXstsURNOfpAHGmtEZHgcW1/EuVtDybYQP67bcf26+gZfK6aevsY7k4gsCvgoSthYmhlHgBGRp
        nwAcc+VigY0SuXh/1PyMSr62AO6CNym/uj3HYtBxe5fsHxnYMOrNYK4vp9OCKNDJYbsaYi7U4PNHF
        LQ07fngQ==;
Received: from [179.95.33.236] (helo=coco.lan)
        by casper.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gVHPx-0005b8-57; Fri, 07 Dec 2018 14:47:49 +0000
Date: Fri, 7 Dec 2018 12:47:37 -0200
From: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
To: Souptick Joarder <jrdr.linux@gmail.com>
Cc: akpm@linux-foundation.org, willy@infradead.org, mhocko@suse.com,
        kirill.shutemov@linux.intel.com, vbabka@suse.cz, riel@surriel.com,
        sfr@canb.auug.org.au, rppt@linux.vnet.ibm.com,
        peterz@infradead.org, linux@armlinux.org.uk, robin.murphy@arm.com,
        iamjoonsoo.kim@lge.com, treding@nvidia.com, keescook@chromium.org,
        m.szyprowski@samsung.com, stefanr@s5r6.in-berlin.de,
        hjc@rock-chips.com, heiko@sntech.de, airlied@linux.ie,
        oleksandr_andrushchenko@epam.com, joro@8bytes.org,
        pawel@osciak.com, kyungmin.park@samsung.com,
        boris.ostrovsky@oracle.com, jgross@suse.com,
        linux-kernel@vger.kernel.org, linux-mm@kvack.org,
        linux-arm-kernel@lists.infradead.org,
        linux1394-devel@lists.sourceforge.net,
        dri-devel@lists.freedesktop.org,
        linux-rockchip@lists.infradead.org, xen-devel@lists.xen.org,
        iommu@lists.linux-foundation.org, linux-media@vger.kernel.org
Subject: Re: [PATCH v3 1/9] mm: Introduce new vm_insert_range API
Message-ID: <20181207124737.123cb2e1@coco.lan>
In-Reply-To: <20181206183945.GA20932@jordon-HP-15-Notebook-PC>
References: <20181206183945.GA20932@jordon-HP-15-Notebook-PC>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-redhat-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Em Fri, 7 Dec 2018 00:09:45 +0530
Souptick Joarder <jrdr.linux@gmail.com> escreveu:

> Previouly drivers have their own way of mapping range of
> kernel pages/memory into user vma and this was done by
> invoking vm_insert_page() within a loop.
> 
> As this pattern is common across different drivers, it can
> be generalized by creating a new function and use it across
> the drivers.
> 
> vm_insert_range is the new API which will be used to map a
> range of kernel memory/pages to user vma.
> 
> This API is tested by Heiko for Rockchip drm driver, on rk3188,
> rk3288, rk3328 and rk3399 with graphics.
> 
> Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
> Reviewed-by: Matthew Wilcox <willy@infradead.org>
> Reviewed-by: Mike Rapoport <rppt@linux.ibm.com>
> Tested-by: Heiko Stuebner <heiko@sntech.de>

Looks good to me.

Reviewed-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

> ---
>  include/linux/mm.h |  2 ++
>  mm/memory.c        | 38 ++++++++++++++++++++++++++++++++++++++
>  mm/nommu.c         |  7 +++++++
>  3 files changed, 47 insertions(+)
> 
> diff --git a/include/linux/mm.h b/include/linux/mm.h
> index fcf9cc9..2bc399f 100644
> --- a/include/linux/mm.h
> +++ b/include/linux/mm.h
> @@ -2506,6 +2506,8 @@ unsigned long change_prot_numa(struct vm_area_struct *vma,
>  int remap_pfn_range(struct vm_area_struct *, unsigned long addr,
>  			unsigned long pfn, unsigned long size, pgprot_t);
>  int vm_insert_page(struct vm_area_struct *, unsigned long addr, struct page *);
> +int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
> +			struct page **pages, unsigned long page_count);
>  vm_fault_t vmf_insert_pfn(struct vm_area_struct *vma, unsigned long addr,
>  			unsigned long pfn);
>  vm_fault_t vmf_insert_pfn_prot(struct vm_area_struct *vma, unsigned long addr,
> diff --git a/mm/memory.c b/mm/memory.c
> index 15c417e..84ea46c 100644
> --- a/mm/memory.c
> +++ b/mm/memory.c
> @@ -1478,6 +1478,44 @@ static int insert_page(struct vm_area_struct *vma, unsigned long addr,
>  }
>  
>  /**
> + * vm_insert_range - insert range of kernel pages into user vma
> + * @vma: user vma to map to
> + * @addr: target user address of this page
> + * @pages: pointer to array of source kernel pages
> + * @page_count: number of pages need to insert into user vma
> + *
> + * This allows drivers to insert range of kernel pages they've allocated
> + * into a user vma. This is a generic function which drivers can use
> + * rather than using their own way of mapping range of kernel pages into
> + * user vma.
> + *
> + * If we fail to insert any page into the vma, the function will return
> + * immediately leaving any previously-inserted pages present.  Callers
> + * from the mmap handler may immediately return the error as their caller
> + * will destroy the vma, removing any successfully-inserted pages. Other
> + * callers should make their own arrangements for calling unmap_region().
> + *
> + * Context: Process context. Called by mmap handlers.
> + * Return: 0 on success and error code otherwise
> + */
> +int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
> +			struct page **pages, unsigned long page_count)
> +{
> +	unsigned long uaddr = addr;
> +	int ret = 0, i;
> +
> +	for (i = 0; i < page_count; i++) {
> +		ret = vm_insert_page(vma, uaddr, pages[i]);
> +		if (ret < 0)
> +			return ret;
> +		uaddr += PAGE_SIZE;
> +	}
> +
> +	return ret;
> +}
> +EXPORT_SYMBOL(vm_insert_range);
> +
> +/**
>   * vm_insert_page - insert single page into user vma
>   * @vma: user vma to map to
>   * @addr: target user address of this page
> diff --git a/mm/nommu.c b/mm/nommu.c
> index 749276b..d6ef5c7 100644
> --- a/mm/nommu.c
> +++ b/mm/nommu.c
> @@ -473,6 +473,13 @@ int vm_insert_page(struct vm_area_struct *vma, unsigned long addr,
>  }
>  EXPORT_SYMBOL(vm_insert_page);
>  
> +int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
> +			struct page **pages, unsigned long page_count)
> +{
> +	return -EINVAL;
> +}
> +EXPORT_SYMBOL(vm_insert_range);
> +
>  /*
>   *  sys_brk() for the most part doesn't need the global kernel
>   *  lock, except when an application is doing something nasty



Thanks,
Mauro
