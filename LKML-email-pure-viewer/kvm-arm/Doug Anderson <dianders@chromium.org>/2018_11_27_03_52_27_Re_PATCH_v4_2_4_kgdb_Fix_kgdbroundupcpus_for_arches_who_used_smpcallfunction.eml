Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 12:19:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F1E6F5802E4;
	Mon, 26 Nov 2018 19:59:44 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 19:59:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARi4zoBxTHp0SsjHXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8TI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/1jcKPAZtMaXXROUdpNVyJPBYO8?=
 =?us-ascii?q?apEAD+sHPe1Fq4XwqF8DoR64CAKxBu3g1yVIi2f50q000esvEQ/I0g89EdwQrH?=
 =?us-ascii?q?vUt831OaUJXOCp0KXF1ynPY+9K1Tr/7oXDbxAvoeuLXbJ1acffx04vFx7Kjl6N?=
 =?us-ascii?q?tYHlOS6a2foXs2iA6OpgU/+khmk6pAFwuDevwNojhZfThoIO0V3L6SV5wJwyJd?=
 =?us-ascii?q?29SU57fNukHIFXtyGAOIt7W8UvSHxmtiY9z70Jo5+7fC4SxZs73R7QcOGHc4eS?=
 =?us-ascii?q?7h3/U+aRJC90i25leLKlgBay9EmgyvD5VsWu11ZKtCVFn9/RvX4Ozxze8taLRu?=
 =?us-ascii?q?d580u7xDqC2R7f5vtZLU03iabXMZ8sz7wompYNrUjOGjX6lUb2gaOMaEko5+ql?=
 =?us-ascii?q?5/7ob7n7oJKXKpV6hRvkMqs0n8yyGeQ4PRYKX2ic4em8yrLj8lPjQLlQjf05jL?=
 =?us-ascii?q?PZsJbEKsQfvKK5BBVV0ok75xa+CTepzsgYkGEZIF5ZfB+LlZXlNl/QLPziEPuy?=
 =?us-ascii?q?gEignC1qyv3EJrHhB4/CLnnHkLfvZ7Z97EtcxRI3zdBe4ZJUF74ALOvwWkDvrt?=
 =?us-ascii?q?zYCAE2Mwitz+bgBtR90J0RWXiUD6+HP6Pdr0WI6vgsI+aSfo8VvijyK/w/6/7p?=
 =?us-ascii?q?l385lkcRfbO10psPdHC4AvNmLl2dYXrtgdcOD30GvwUjTOHxjF2CUDhTZ2u9Xq?=
 =?us-ascii?q?4m5zE7Dp6mApnHRoy3nLOB2yK7FIVMZm9aElCMDWvod4KcVvcMci2SI9NhnSYD?=
 =?us-ascii?q?VbS7S48hyAuhtAn1y7d8KurU+ysYtY/s1dRv5u3Tkw0y+iJwD8iHz26NSGR0lH?=
 =?us-ascii?q?sSRzAqxKB/vVB9ylCb3Kh6hPxXC8Zf5/BOUgc8M57cyPd3C9TzWgLHY9eIR0yq?=
 =?us-ascii?q?QtSgATEtUN0xx8UCbFp6G9WnlhrDxTalA6cJl7yXA5w56rjT32PxJ8Z6yHbKzr?=
 =?us-ascii?q?MhgEMkQsZUMW2mh6h/9xXcBoLTkkWZkbqqeroY3CLX6GiDym+OtllCUAFsSaXF?=
 =?us-ascii?q?QWwfZkzOoNT6/EzCSaWiCbAmMgRbz86CJbBHatnojVVAWffiN87SY2O3m2esGx?=
 =?us-ascii?q?mIwqmAY5bte2UYxC/dElQLkxgP/XaaMggzHjqurHjADDNwD17vY1nj8e9lqHyl?=
 =?us-ascii?q?SE84yAWKb05k17qx4RMVgf2cS/UO3rMLoishqjN0HEqj0NLSEdaPuw1hfKBEa9?=
 =?us-ascii?q?Mn/FhHzX7ZtxB6PpG4Mq9tnEAefBpts0PuzRp3DJ5AntYsrH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0o+8nVn1t5V02?=
 =?us-ascii?q?ec5pTKFgYSTYj9UkEt9xh+prHaZCY96pjQ1X1tN6m0rzDD18goBOsj1havYdNf?=
 =?us-ascii?q?PLmYGw/1Fs0QH9KuJ/Aym1i1chIEO/hf+7QwP8y4ePqJxq6qMPx7kzK7kGtI+o?=
 =?us-ascii?q?Z90kGL9ypiUePI25cFw/eF3gqITTv8jVGhstzploBAfz0dAm2/yS38Do5LeqJy?=
 =?us-ascii?q?ZZoLCXupI8CvxtR+moThVGJC+F+iB1MJwsmpeRWJYlz53A1Q01kXoHO9lSu5yT?=
 =?us-ascii?q?x0jy8mrq6F0CPSxOTicQINOnRXS2l6kVfsPY+0gsgAXEipcwcmjgGl6lv9x6RB?=
 =?us-ascii?q?oqRwMXPTQUZRcyfqNW5iVra/uaSYY85I7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rre5N3cSeRR3zYcXyl4lD/XC0O4?=
 =?us-ascii?q?P9mo+9WUipjCvvq/V2KnSp1cby3rwZmcuyu84G1gGQe/kOyrmt37DQg61jf219?=
 =?us-ascii?q?twWiXSrxb8YY7r276hMe19fUloB17868xkFYF4iYYwgJAQ2X4HhpSa53YHkGHz?=
 =?us-ascii?q?MclF1qL6dnYCWTkLw9vN6gj/xEJjNm6Jx57+VniFwspufd66bnkU2iI86cBHE6?=
 =?us-ascii?q?OU7L1CnStorVu0twPRYf5hnjgDzfsi8mIVg+YMuAA11CWSHqgSHVVEPSzrjxmI?=
 =?us-ascii?q?7MqxrKRNaGavbLi/zkx+nd+6AbGGowFcXmv5e5g4ES9x6MV/LEzD0Hnp5o74f9?=
 =?us-ascii?q?nQaMoZtgeInBfYk+hVNJUxm+IPhSpmOmLyp2cpyuAlghx1wZG1opKHJH5z86Kj?=
 =?us-ascii?q?DR5VLTn1Z8IV+jHwgqdShMeW34azHpp/HjUHRofnTfWtEDgKr/ToKx6OECEgqn?=
 =?us-ascii?q?ecAbffAQif6EJ8o3POCZ+rMWyXJGICzdVjXxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosU5eQNh1W7gVf50vPNcye8/l+Hy?=
 =?us-ascii?q?VZ/p2nsQyMJXaXZwVODWEVREOEA0rvMaWp5dnF6+KYHPaxL+PSYbWSruxTT/WI?=
 =?us-ascii?q?yoiq0oR45DaALNmPMmNhD/0m2UpDQHZ5FN7CmzgUTywXliTNb9OUpRum+y13qN?=
 =?us-ascii?q?y//+rvWA71+YSPDL5SO811+x+qmaeDK/KQhCFhJDdY0ZMM2GbIyKUF014UkS1u?=
 =?us-ascii?q?bD6tEbIPtSPWSKLQm6lXDwMUai9pNctI6b480RdJOcLBltz10bt4hOYvC1hZTV?=
 =?us-ascii?q?zhht2pZcsSLmG9KlzHBUWLNLeHJTHRwMH3e6S8SbJOg+VOqh2woi2WE0viPjSF?=
 =?us-ascii?q?ijnoWAqjMeBKjCGHIhNevJuxfQpqCWjmVNjmcAG0MMdrjT0qxr05nmnFNXMHPj?=
 =?us-ascii?q?hmbUxMrqec7SdZgvhkH2xB73xlLfSLmiqD7unYLIoWvuVvAihui+1a53E6waNP?=
 =?us-ascii?q?7C5YXPx1hDfSrtl2rlG6k+mPzyBrXwZUpjlXhIKEo0NiNL7d9plBX3bE4R0M4X?=
 =?us-ascii?q?+RCxQMu9tqFNnvt7pMxdjIkaL5MC1C/M7M/csAG8jUL9qKMXo7PhrvHT7UDQ0F?=
 =?us-ascii?q?QiaqNGHfnUNdlv6S+2aRrpg7rJjshZUPRqVaVFwzCvMVFEBlEMYeL5dwWzN32Y?=
 =?us-ascii?q?Kc2fEJ4X72gBTYT8Jc9sTYV/aWR/niIT2ei5FNfR5OyrT9e9c9LIr+jmBld1Yy?=
 =?us-ascii?q?tYLGFlDLWtYF9iFgZwk4rV9W2HN+VGo22l/gLAS37ylARraPghcqh14mMqwW/z?=
 =?us-ascii?q?D27gJyewPH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AhAAAawPxbh0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIng3mId40yFGaIIIkrhHcUgV8TARgNBgGIYyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiSCYgEBAQECAQECIB0BATcBBAEJAQEKCw0CAhEVAgIDHxIBB?=
 =?us-ascii?q?QEcBhMFgxwBgXQFCAUKmXk8ih1wgS+CdgEBBYctCBJ5in4XeIEHgRGCXTWDGwQ?=
 =?us-ascii?q?YgQKBBIJFgleLE4R/hSiKTAmGfIozGIImhyuHNyyNGIpGAgQCBAUCBQ8hgSVfg?=
 =?us-ascii?q?S5NMAg7MQaCNQmCEgwXEoM4hRSFXx8ygQUBAY0WAQE?=
X-IPAS-Result: =?us-ascii?q?A0AhAAAawPxbh0O0hNFjHgEGBwaBUQkLAYJpgQIng3mId40?=
 =?us-ascii?q?yFGaIIIkrhHcUgV8TARgNBgGIYyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iSCYgEBAQECAQECIB0BATcBBAEJAQEKCw0CAhEVAgIDHxIBBQEcBhMFgxwBgXQ?=
 =?us-ascii?q?FCAUKmXk8ih1wgS+CdgEBBYctCBJ5in4XeIEHgRGCXTWDGwQYgQKBBIJFgleLE?=
 =?us-ascii?q?4R/hSiKTAmGfIozGIImhyuHNyyNGIpGAgQCBAUCBQ8hgSVfgS5NMAg7MQaCNQm?=
 =?us-ascii?q?CEgwXEoM4hRSFXx8ygQUBAY0WAQE?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="64103308"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 26 Nov 2018 19:59:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728400AbeK0O4J (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 09:56:09 -0500
Received: from mail-ua1-f68.google.com ([209.85.222.68]:43340 "EHLO
        mail-ua1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727633AbeK0O4J (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 09:56:09 -0500
Received: by mail-ua1-f68.google.com with SMTP id z11so7131767uaa.10
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 19:59:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=tjUd6rh9Oz+kjGbUZS5mymEL2IOV7D6CriXwQhdsMjU=;
        b=QcPHoePkZX1rXMUYdsVjgFNEGwWi1t+kNzgHHl7f02t25QRLbxRsn38LV2ypdJ1Bet
         e0+PckNHOH/jab6l82SPjcFUnqnD3WPfuEI6R4N3zDp97pjS+o0tFeOUkhgdRhgDOJYl
         Tkr5tUn3ZIRFk36wyPZPqRF9qxyxgtvKyaE9E=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=tjUd6rh9Oz+kjGbUZS5mymEL2IOV7D6CriXwQhdsMjU=;
        b=alrdPXIVgQUhWCOnzc+C3bsPBi5j9DBIGpV8ZaQ4jwVKkXQYgbJIO+mhbrm+WmVG1j
         XbJkW7c6K0hZWEhxwVJHC1ZC3TEnWTfwHaQhhpcoz2Pd9jWyB9jyPjcEghc4xQDfHV8t
         LUq8ENRaMkrx42A6y4M0lezSIPqe0Dyd+89z9AyCaEqmGFUGpXhZ41ym6HxIev8IGpIs
         Lc2gayY6sfvMlD0lCiS2B3KujOIKQXPFV7IVUO32KCjP69ysTc6750SF4PA5E/KNFHY6
         SPpuCsYutrHuZfDeSpLz4mDso8y2aU8o4EjzZQL05PGJs+ymJWFKY4eGBx1W2kh6xEN+
         k76g==
X-Gm-Message-State: AA+aEWa1VGe6/dH6Cy5nanpbSa29yGe3+9hHWBlCJqQ5XtK+Y2+0HVix
        Y6ceQNXqgTqnHoJizY+NaAdBSnuEHeQ=
X-Google-Smtp-Source: AFSGD/VJIDTVzTyhcQoVbmvdMm9uinswGVqODCjiuy3N/EgbaV2wsVvYrHnUtCXGo3xF5uqcimG80g==
X-Received: by 2002:ab0:2385:: with SMTP id b5mr12681459uan.73.1543291178602;
        Mon, 26 Nov 2018 19:59:38 -0800 (PST)
Received: from mail-vs1-f41.google.com (mail-vs1-f41.google.com. [209.85.217.41])
        by smtp.gmail.com with ESMTPSA id c24sm676798uao.17.2018.11.26.19.59.38
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 26 Nov 2018 19:59:38 -0800 (PST)
Received: by mail-vs1-f41.google.com with SMTP id t17so12882900vsc.8
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 19:59:38 -0800 (PST)
X-Received: by 2002:a67:6cc1:: with SMTP id h184mr13126300vsc.149.1543290760514;
 Mon, 26 Nov 2018 19:52:40 -0800 (PST)
MIME-Version: 1.0
References: <20181112182659.245726-1-dianders@chromium.org>
 <20181112182659.245726-3-dianders@chromium.org> <20181114220744.GB4044@brain-police>
In-Reply-To: <20181114220744.GB4044@brain-police>
From: Doug Anderson <dianders@chromium.org>
Date: Mon, 26 Nov 2018 19:52:27 -0800
X-Gmail-Original-Message-ID: <CAD=FV=WYa8Hfo0hN8eqTBsjGY7A0nnQBoG1nSrvQ92we+v5kuA@mail.gmail.com>
Message-ID: <CAD=FV=WYa8Hfo0hN8eqTBsjGY7A0nnQBoG1nSrvQ92we+v5kuA@mail.gmail.com>
Subject: Re: [PATCH v4 2/4] kgdb: Fix kgdb_roundup_cpus() for arches who used smp_call_function()
To: Will Deacon <will.deacon@arm.com>
Cc: Jason Wessel <jason.wessel@windriver.com>,
        Daniel Thompson <daniel.thompson@linaro.org>,
        kgdb-bugreport@lists.sourceforge.net,
        Peter Zijlstra <peterz@infradead.org>,
        linux-mips@linux-mips.org, linux-sh@vger.kernel.org,
        LKML <linux-kernel@vger.kernel.org>,
        Catalin Marinas <catalin.marinas@arm.com>, jhogan@kernel.org,
        linux-hexagon@vger.kernel.org, Vineet Gupta <vgupta@synopsys.com>,
        dalias@libc.org, Ralf Baechle <ralf@linux-mips.org>,
        linux-snps-arc@lists.infradead.org,
        Yoshinori Sato <ysato@users.sourceforge.jp>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        paulus@samba.org, Russell King - ARM Linux <linux@armlinux.org.uk>,
        Linux ARM <linux-arm-kernel@lists.infradead.org>,
        christophe.leroy@c-s.fr, mpe@ellerman.id.au, paul.burton@mips.com,
        rkuo@codeaurora.org, linuxppc-dev <linuxppc-dev@lists.ozlabs.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

On Wed, Nov 14, 2018 at 2:07 PM Will Deacon <will.deacon@arm.com> wrote:
>
> > +void __weak kgdb_call_nmi_hook(void *ignored)
> > +{
> > +     kgdb_nmicallback(raw_smp_processor_id(), get_irq_regs());
> > +}
>
> I suppose you could pass the cpu as an argument, but it doesn't really
> matter.

I probably won't change it for now if it doesn't matter...


> Also, I think there are cases where the CSD callback can run without
> having received an IPI, so we could potentially up passing NULL for the regs
> here which probably goes boom.

Hrm, good point.  This is not a new issue so I'd tend to add it to the
TODO list rather than block the series.  I'll also add a comment in
the code since I'm touching it anyway.

Interestingly enough quite a bit of things continue to work just fine
even if this is NULL.  I simulated setting this to NULL for all CPUs
and I could drop into the debugger, type "btc" to backtrace all CPUs,
attach to kgdb, etc.  ...but when I typed "cpu 1" it went boom.  So it
seems like parts of kdb use this but definitely not everything.

Also interesting is that on MIPS this is always NULL.  I have no idea
why but my patch series preserves this oddity.  Presumably if someone
was on a SMP MIPS machine and did "cpu 1" from kdb they'd go boom too.

In general kdb has a lot of crufty stuff like this in it.  We need to
work to get rid of the cruft but one step at a time I think.

I've started a kgdb-wishlist:

https://bugs.chromium.org/p/chromium/issues/list?q=label%3Akgdb-wishlist

...and this is crbug.com/908723


> > +void __weak kgdb_roundup_cpus(void)
> > +{
> > +     call_single_data_t *csd;
> > +     int this_cpu = get_cpu();
>
> Do you actually need to disable preemption here? afaict, irqs are already
> disabled by the kgdb core.

Ah, right.  I can just use raw_smp_processor_id().  Done.  I didn't
try to see if I could use smp_processor_id() since
kgdb_call_nmi_hook() already used raw_smp_processor_id(), but I can
dig if you wish.


> > +     int cpu;
> > +
> > +     for_each_cpu(cpu, cpu_online_mask) {
>
> for_each_online_cpu(cpu) ?

Done.


> I'm assuming this is serialised wrt CPU hotplug somehow?

I doubt it.  I can add it to my wishlist (crbug.com/908722) , but I
don't think it's something I'm going to try to solve right now and
it's definitely not new.  I think we need to make some sort of attempt
in kgdb_cpu_enter() to stop hotplugging, though we'd have to take into
account that we may be entering kgdb in an IRQ context so it might be
hard to grab a mutex.  We need to account for it there since that
function has code like:

> while (kgdb_do_roundup && --time_left &&
>        (atomic_read(&masters_in_kgdb) + atomic_read(&slaves_in_kgdb)) !=
>    online_cpus)
> udelay(1000);

...and that would also be broken if cpus were plugging / unplugging.

In general, at least, the worst case would be that we'd either have an
extra 1 second delay entering the debugger (because we were waiting
for a CPU to respond that's been hotplugged) or we'd enter kgdb
without stopping one of the CPUs.  Neither of those is ideal but I
don't think we'd end up in too bad shape.

Oh, but actually, I guess I should probably check the error return of
smp_call_function_single_async() and if it returns an error I should
unset rounding_up...  That would make things behave slightly better
and is probably right anyway.


Overall: thank you very much for the review and the feedback.  Sorry
I'm not really fixing everything here.  My hope is to move things to a
slightly better state but I don't have time to fix everything.
Hopefully I can find some more time soon to fix more, or perhaps
someone else will.


-Doug
