Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:02:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 053C35803E4;
	Fri,  7 Dec 2018 03:20:27 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 03:20:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8Kvv1xHOtnLEgDNNmnCCNZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75oc24bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?b5cBAeQCM+ZYrpXyqVQBohulHQmhBvjiyiNRhnLswaE2z/gtHR/A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakVUOC1yrPHzS7eZP1Uwzj98pXIcgwhoPGRW7JxcdDeyU8yHA7Ci1WQ?=
 =?us-ascii?q?qIrlMCmO1ugXs2iU9fBgVf+zi28ntgFxpDiuyd0qioTSnYIUylbE9SJhwIYuJd?=
 =?us-ascii?q?y4U1R3bsKjEJtVriyXMZZ9TMA6Q2xwpio21rkLtYSmcCUE1pgr3QPTZv+bf4SS?=
 =?us-ascii?q?4x/uVv6dLSpkiH5/Zb6zmhe//VKix+HgTMW4zVhHojRdntnCqH8A1ADf582CR/?=
 =?us-ascii?q?Z/+kquxTiC2gXT5+xEL0A4i6/WJ4MvwrIuipYetETOETT4mEj5iqKda18q9fKy?=
 =?us-ascii?q?6+v9Z7Xrvp+cOJFwigH5KqkuhMO/DvoiMgQUXGiU5/681Lv98k39WrlKiec2kq?=
 =?us-ascii?q?bBvJDbI8QUuLK5DhdL3oo/7xuzFSqq3doGkXUdMV5Iew6Lg5LoNlzMOPz4CO2w?=
 =?us-ascii?q?g1WokDdl3fDGObjhD43JLnjClrfhYLl851dfyAUt19Bf4YxbCrUYLPL0VE7xss?=
 =?us-ascii?q?LXDgUiPgyqzOboFs992pkdWW2RGK+ZNr3dsVuS6uIoOemMa5cZuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcZfamo3psYdmq0H/t7I0iCZXrsg9EBEXoFvwYkTezqjkGCXiBXZ3qoQ6?=
 =?us-ascii?q?084TQ7Apq8DYjfXoCtnKCB3CCjE51WfG9GC0yMHm3vd4meW/cMdTidIslukjEf?=
 =?us-ascii?q?UbihSokh1QyhtQPgyrpnKPbU9TMctZ75yNd14OjTnwko9TNoF8Sdz32NT2Zsk2?=
 =?us-ascii?q?MKQD85wrpzoU96yleF16h4hOdVFdhS5/NPTwc7OoTQz+18C9DuRA3Bes2FR0qh?=
 =?us-ascii?q?QtWjGTsxVM4+w8cSY0ZhHNWvlgrM3zGqA78SlLyHHoY0/bje33XqI8Z9ynDG1L?=
 =?us-ascii?q?QujlU8Q8tPM3GmibB79wTJG4HJlECZnb6wdasAxC7N6HuDzW2WsUFbSgFwV7/J?=
 =?us-ascii?q?XXQeZkTMq9T56VjPT7uvCbQhLwtAxtSOKqpMat31k1pGQO3vN8jZY2K0g22wHw?=
 =?us-ascii?q?qHxquQbIr2fGUQxDjSB1Iakw8N53qGNRIxBiG6o23ACjxiElbvY0Dp8el6s367?=
 =?us-ascii?q?Sk40zweXb0xuzba1+xgVheCCRPMXxL4LpCAhqzBsFlanw93WE8aApxZmfKhEfN?=
 =?us-ascii?q?wy+klH2nzDuwx9JJOgKbtiiUAYcwlsu0Pu1hN3CphPkMQwrXMqyhZyJryc0F9b?=
 =?us-ascii?q?azyY2pXwMKXNKmbu5BCvd7LW2lbG3daK+6cP7fM4q0njvACpDEYi729r095P03?=
 =?us-ascii?q?uY55XKCgUSXIn1UkY28Rh6ur7bbjM854PSyX1jL620viXe1NIuAesv0gygcMtH?=
 =?us-ascii?q?MKOYCA/yFNUXCNKqKOM0lFmmcBIFMPpJ+64pIsypbf2G2K2sPOZ+hz+miWVH4I?=
 =?us-ascii?q?Zg0kOD7SZ8S+jI34obzPGcxAeISzD8jFK5uMDthY9EfS0SHna4ySX8BI9Re7d+?=
 =?us-ascii?q?cpoRBWavI8243NN+h5H2Vn5c9V6jAU4G2cCzdRqTaVz9wRNf1UANrXO7niu4yi?=
 =?us-ascii?q?R+kys1oaqHwCzO3+PieQIdOm5KWGZtl03sLpWzj9wAWkincRIplBq86Unm3adb?=
 =?us-ascii?q?oLlwIHfJQUdPeSj7NGViUqq2trqfbM9D8pIosSNLUOuiZVCWUKLyoxwf0yn7BW?=
 =?us-ascii?q?tR2Cg7dy22upX+hxF7iGOdIGxzrXbDYsFw2BHf6cfYRf5Q2DoGWSZ5hSPWBli6?=
 =?us-ascii?q?I9mm49GUm43fveC5UmKrTodTfjXzzYOcqCu74nVnAR+lkPCpmd3nEg863TXg19?=
 =?us-ascii?q?ZwViXIrxf8Yo/12KS8Ku9nekhoBFnh68t1AI1+k40whI0O1ngenJma4X0HkWLr?=
 =?us-ascii?q?O9VBxa3+dGYNRSIMw9PN4AnqwkpjImiLx4L4UHWQ2c9hZ9i8YmML1SMx9cFKCK?=
 =?us-ascii?q?GI7LNamSt5uEa3rQXUYfJlhDcS1eMu6GIGg+EOoActzT+SArEIEUlYICzjjRKI?=
 =?us-ascii?q?79+loaVTZWavd6Ww1UVkkdCgCrGCvh9TWHLjdpg+Gi9w6911MEjQ333r9oHkZN?=
 =?us-ascii?q?7QYMoWth2VkBfPlfJZKZwvmfoRmSpoJ3j9smY7xO4hghxjxpW6vImBK2Vw86O1?=
 =?us-ascii?q?GB9YNjvpZ8wN/jHhl7pRnsGT34q3BJVuBi0LXIf0TfKvCD8SqfPnNwOUHDw9sH?=
 =?us-ascii?q?ibH6ffHRSE6EdntH/PF5GrN3eKJHgW19liRR+dJFBBjwAQRjk1gpk5FgWyzsz7?=
 =?us-ascii?q?bEh5/iwR5kL/qhZU0e1nLR7/UmPCpAuybjc0VYOSLB5X7gFE+kfUPtaS7uN1Hy?=
 =?us-ascii?q?FE4JKhqBaBJXCcZwRNFWsJQFCLB0j/Prmy4tnN6+qYCfC7L/TQerWCs/BeW+2L?=
 =?us-ascii?q?xZKy0Ytm4jCMOd+UPnR5C/0720xDXW12GsjDmjUPTTAXmDzJb8KBuBi8/Sh3pN?=
 =?us-ascii?q?il8Pv3QALv+ZePC7xKPNRv/BC2nL6DN/OKiyZ/MzpYzZQMxXnHyLUE2F4Siidu?=
 =?us-ascii?q?dySiELgatC7NSr7QlbFTDxIBdyxzM85I5bom3gZRIc7bls/11rlgg/41FVhFVF?=
 =?us-ascii?q?/hmsKoZcAQIGG9LlTHBEmVO7ScOD3L2Nr6Yae9Sb1WkeVVuAe8uTedE0//IDuD?=
 =?us-ascii?q?kyPlWAyoMeFJlCubJgBRuJmhchZxDmjuVMjpagCgP99tkzI3wac4hnfLNWMHNT?=
 =?us-ascii?q?h8ckVNrqCf7C9Cg/V/HXBB4WRhLeWehymZ6OzYII4MsfR3GiR0i/5a4HMixrtJ?=
 =?us-ascii?q?7SFEQeZ5lzfIotFyo1GpjO+PxyFjUBpPrDZLmY2KsV9jOaXf6plPR3LE8AgR4m?=
 =?us-ascii?q?WXDhQAv8FlBcH3u6BM1tjPk7r+KTdY/NLS+MscBs7UJ9qGMXohKxXpHjHUARAB?=
 =?us-ascii?q?TT6qM2HfmkNcnOuT9n2Tspg1tJzslIASRb9cUVxmXs8dX2hsGpQpKY1vUzU4nK?=
 =?us-ascii?q?TT2MIB4zy1pQPJScNGs4rvUeibCvHibj2eiO8ALz4Jx7rjZaQaLJDnylFke1B8?=
 =?us-ascii?q?1NDPGkzZRpZNqzd8ch4pplRE9lBlX2s0w1n0cUWm53pFRtCumRtjrwp4aP9l1D?=
 =?us-ascii?q?72/ksmO1zbrS14xEwwn9z+xzCYaiPtPbq2TIhQIzHlsU8pKYLgBQ1yaFvhzgRf?=
 =?us-ascii?q?KD7YSucJ3PNbfmdxhVqZ4MMXFA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAAAVVwpch0O0hNFbCBsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVIFAQEBCwGBMCqCERUSCoxoizGCDRSXOxSBcysBhECDGiI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTBgEBNwEEAQkBAQEBC?=
 =?us-ascii?q?BgeEAMvJQIEAQ0KAwwHgwaBeggBBKQMgWwzgnYBAQWHKgiLA4EcgVc/gVeCFzW?=
 =?us-ascii?q?EXA4XgzWCJokVghSVQAcCgiEEjz6BXIUWh06CeIkQgQWPBoFIAYIKcIM8ghsMF?=
 =?us-ascii?q?38BB4JDilNAATGBBQEBiSGBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0AGAAAVVwpch0O0hNFbCBsBAQEBAwEBAQcDAQEBgVIFAQE?=
 =?us-ascii?q?BCwGBMCqCERUSCoxoizGCDRSXOxSBcysBhECDGiI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmEBAQEBAgEBAiQTBgEBNwEEAQkBAQEBCBgeEAMvJQIEAQ0?=
 =?us-ascii?q?KAwwHgwaBeggBBKQMgWwzgnYBAQWHKgiLA4EcgVc/gVeCFzWEXA4XgzWCJokVg?=
 =?us-ascii?q?hSVQAcCgiEEjz6BXIUWh06CeIkQgQWPBoFIAYIKcIM8ghsMF38BB4JDilNAATG?=
 =?us-ascii?q?BBQEBiSGBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="65776557"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 07 Dec 2018 03:20:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726021AbeLGLUY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 06:20:24 -0500
Received: from smtprelay2.synopsys.com ([198.182.60.111]:45088 "EHLO
        smtprelay.synopsys.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725985AbeLGLUX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 06:20:23 -0500
Received: from mailhost.synopsys.com (mailhost3.synopsys.com [10.12.238.238])
        by smtprelay.synopsys.com (Postfix) with ESMTP id BA38D10C1499;
        Fri,  7 Dec 2018 03:20:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=synopsys.com; s=mail;
        t=1544181623; bh=VbO/Em3bQwj+QEeF3d+dETZQixVx0Cki7gypBWke2To=;
        h=From:To:CC:Subject:Date:References:From;
        b=Tc103cb1ta1LY7K0PvJFEkQTs3q2nvzciB9XXdH3LRvnil295Vaiqf0bRMFBUBiUl
         /ejjdpjU7DkBDmOCDUWSfpgc3Y3+k7O1WTtQDqNvBKGBmFkbuZtj0YX1dpOciTSLj9
         MvvOaZICBGziHbYW2CKV0v/GsUgZhfT0xazuo/LLN8EfNVpdxhsOph1yE4gxUT6qSa
         /CH8WLLXGFkzGK0HXsQDZ2k18hEAgumhRaJ1AEjDA51t7qOU+6lZmi/FYZk+k6oO3F
         YxWYQft2a1pIKLCM6OxgNh7TJXKAVfbuBkNVRmyABX9K9PciN6RSF+CPS0cMz7wmn9
         m9aM1ORo3wdbQ==
Received: from US01WEHTC2.internal.synopsys.com (us01wehtc2-vip.internal.synopsys.com [10.12.239.238])
        by mailhost.synopsys.com (Postfix) with ESMTP id 84FCC3698;
        Fri,  7 Dec 2018 03:20:22 -0800 (PST)
Received: from AM04WEHTCB.internal.synopsys.com (10.116.16.192) by
 US01WEHTC2.internal.synopsys.com (10.12.239.237) with Microsoft SMTP Server
 (TLS) id 14.3.408.0; Fri, 7 Dec 2018 03:20:22 -0800
Received: from AM04WEMBXA.internal.synopsys.com ([fe80::79c3:55f2:1f20:5bf4])
 by am04wehtcb.internal.synopsys.com ([::1]) with mapi id 14.03.0415.000; Fri,
 7 Dec 2018 15:20:19 +0400
From: Minas Harutyunyan <minas.harutyunyan@synopsys.com>
To: Dan Carpenter <dan.carpenter@oracle.com>,
        Minas Harutyunyan <minas.harutyunyan@synopsys.com>
CC: Marek Szyprowski <m.szyprowski@samsung.com>,
        Maynard CABIENTE <maynard.cabiente@raritan.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-usb@vger.kernel.org" <linux-usb@vger.kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Felipe Balbi <felipe.balbi@linux.intel.com>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Subject: Re: [PATCH] usb: dwc2: Revert "usb: dwc2: Disable all EP's on
 disconnect"
Thread-Topic: [PATCH] usb: dwc2: Revert "usb: dwc2: Disable all EP's on
 disconnect"
Thread-Index: AQHUgbE8ouTBXi+nzkarEEkfP9zP5Q==
Date: Fri, 7 Dec 2018 11:20:18 +0000
Message-ID: <410670D7E743164D87FA6160E7907A56013A7B4AAF@am04wembxa.internal.synopsys.com>
References: <CGME20181121154518eucas1p2cc7ffd4d071ff420c747e1d0c387ee5d@eucas1p2.samsung.com>
 <20181121154504.13052-1-m.szyprowski@samsung.com>
 <410670D7E743164D87FA6160E7907A56013A7AA1EE@am04wembxa.internal.synopsys.com>
 <20181123144307.GC2970@unbuntlaptop>
 <410670D7E743164D87FA6160E7907A56013A7B19C2@am04wembxa.internal.synopsys.com>
 <20181204132913.GH3073@unbuntlaptop>
 <410670D7E743164D87FA6160E7907A56013A7B2847@am04wembxa.internal.synopsys.com>
 <20181207101532.GR3073@unbuntlaptop>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.116.70.132]
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Dan,=0A=
=0A=
On 12/7/2018 2:16 PM, Dan Carpenter wrote:=0A=
> On Wed, Dec 05, 2018 at 12:52:22PM +0000, Minas Harutyunyan wrote:=0A=
>> Hi,=0A=
>>=0A=
>> On 12/4/2018 5:29 PM, Dan Carpenter wrote:=0A=
>>> On Tue, Dec 04, 2018 at 12:34:08PM +0000, Minas Harutyunyan wrote:=0A=
>>>> @@ -3185,12 +3183,13 @@ void dwc2_hsotg_disconnect(struct dwc2_hsotg *=
hsotg)=0A=
>>>>            hsotg->connected =3D 0;=0A=
>>>>            hsotg->test_mode =3D 0;=0A=
>>>>=0A=
>>>> -       /* all endpoints should be shutdown */=0A=
>>>>            for (ep =3D 0; ep < hsotg->num_of_eps; ep++) {=0A=
>>>>                    if (hsotg->eps_in[ep])=0A=
>>>> -                       dwc2_hsotg_ep_disable(&hsotg->eps_in[ep]->ep);=
=0A=
>>>> +                       kill_all_requests(hsotg, hsotg->eps_in[ep],=0A=
>>>> +                                                         -ESHUTDOWN);=
=0A=
>>>>                    if (hsotg->eps_out[ep])=0A=
>>>> -                       dwc2_hsotg_ep_disable(&hsotg->eps_out[ep]->ep)=
;=0A=
>>>> +                       kill_all_requests(hsotg, hsotg->eps_out[ep],=
=0A=
>>>> +                                                         -ESHUTDOWN);=
=0A=
>>>=0A=
>>>=0A=
>>> Should this part be in a separate patch?=0A=
>>>=0A=
>>> I'm not trying to be rhetorical at all.  I literally don't know the=0A=
>>> code very well.  Hopefully the full commit message will explain it.=0A=
>>>=0A=
>>=0A=
>> Actually, this fragment of patch revert changes from V2 and keep=0A=
>> untouched dwc2_hsotg_disconnect() function.=0A=
>>=0A=
> =0A=
> To me it feels like there are two issues.  The first is this change, and=
=0A=
> the second is fixing the lockdep warning.=0A=
> =0A=
> =0A=
>>>>            }=0A=
>>>>=0A=
>>>>            call_gadget(hsotg, disconnect);=0A=
>>>> @@ -3234,6 +3233,8 @@ static void dwc2_hsotg_irq_fifoempty(struct=0A=
>>>> dwc2_hsotg *hsotg, bool periodic)=0A=
>>>>                            GINTSTS_PTXFEMP |  \=0A=
>>>>                            GINTSTS_RXFLVL)=0A=
>>>>=0A=
>>>> +static int dwc2_hsotg_ep_disable(struct usb_ep *ep);=0A=
>>>> +=0A=
>>>>     /**=0A=
>>>>      * dwc2_hsotg_core_init - issue softreset to the core=0A=
>>>>      * @hsotg: The device state=0A=
>>>> @@ -3258,12 +3259,14 @@ void dwc2_hsotg_core_init_disconnected(struct=
=0A=
>>>> dwc2_hsotg *hsotg,=0A=
>>>>                            return;=0A=
>>>>            } else {=0A=
>>>>                    /* all endpoints should be shutdown */=0A=
>>>> +               spin_unlock(&hsotg->lock);=0A=
>>>>                    for (ep =3D 1; ep < hsotg->num_of_eps; ep++) {=0A=
>>>>                            if (hsotg->eps_in[ep])=0A=
>>>>    =0A=
>>>> dwc2_hsotg_ep_disable(&hsotg->eps_in[ep]->ep);=0A=
>>>>                            if (hsotg->eps_out[ep])=0A=
>>>>    =0A=
>>>> dwc2_hsotg_ep_disable(&hsotg->eps_out[ep]->ep);=0A=
>>>>                    }=0A=
>>>> +               spin_lock(&hsotg->lock);=0A=
>>>>            }=0A=
>>>>=0A=
>>>>            /*=0A=
>>>=0A=
>>> The idea here is that this is the only caller which is holding the=0A=
>>> lock and we drop it here and take it again inside dwc2_hsotg_ep_disable=
().=0A=
>>> I don't know the code very well and can't totally swear that this=0A=
>>> doesn't introduce a small race condition...=0A=
>>>=0A=
>> Above fragment of patch allow to keep untouched dwc2_hsotg_ep_disble()=
=0A=
>> function also, without changing spin_lock/_unlock stuff inside function.=
=0A=
>>=0A=
>> My approach here minimally update code to add any races. Just in=0A=
>> dwc2_hsotg_core_init_disconnected() function on USB reset interrupt=0A=
>> perform disabling all EP's. Because on USB reset interrupt, called from =
interrupt=0A=
>> handler with acquired lock and dwc2_hsotg_ep_disble() function (without=
=0A=
>> changes) acquire lock, just need to unlock lock to avoid any troubles.=
=0A=
>>=0A=
> =0A=
> Yes.  I understand that.  I just don't like it.=0A=
> =0A=
> Although your patch is more "minimal" in that it touches fewer lines of=
=0A=
> code it's actually more complicated because we have to verify that it's=
=0A=
> safe to drop the lock.=0A=
> =0A=
> =0A=
>>> Another option would be to introduce a new function which takes the loc=
k=0A=
>>> and change all the other callers instead.  To me that would be easier t=
o=0A=
>>> review...  See below for how it might look:=0A=
>>>=0A=
>>> regards,=0A=
>>> dan carpenter=0A=
>>>=0A=
>>> diff --git a/drivers/usb/dwc2/gadget.c b/drivers/usb/dwc2/gadget.c=0A=
>>> index 94f3ba995580..b17a5dbefd5f 100644=0A=
>>> --- a/drivers/usb/dwc2/gadget.c=0A=
>>> +++ b/drivers/usb/dwc2/gadget.c=0A=
>>> @@ -3166,6 +3166,7 @@ static void kill_all_requests(struct dwc2_hsotg *=
hsotg,=0A=
>>>    }=0A=
>>>    =0A=
>>>    static int dwc2_hsotg_ep_disable(struct usb_ep *ep);=0A=
>>> +static int dwc2_hsotg_ep_disable_lock(struct usb_ep *ep);=0A=
>>>    =0A=
>>>    /**=0A=
>>>     * dwc2_hsotg_disconnect - disconnect service=0A=
>>> @@ -3188,9 +3189,9 @@ void dwc2_hsotg_disconnect(struct dwc2_hsotg *hso=
tg)=0A=
>>>    	/* all endpoints should be shutdown */=0A=
>>>    	for (ep =3D 0; ep < hsotg->num_of_eps; ep++) {=0A=
>>>    		if (hsotg->eps_in[ep])=0A=
>>> -			dwc2_hsotg_ep_disable(&hsotg->eps_in[ep]->ep);=0A=
>>> +			dwc2_hsotg_ep_disable_lock(&hsotg->eps_in[ep]->ep);=0A=
>>>    		if (hsotg->eps_out[ep])=0A=
>>> -			dwc2_hsotg_ep_disable(&hsotg->eps_out[ep]->ep);=0A=
>>> +			dwc2_hsotg_ep_disable_lock(&hsotg->eps_out[ep]->ep);=0A=
>>>    	}=0A=
>>>    =0A=
>>>    	call_gadget(hsotg, disconnect);=0A=
>>> @@ -4069,10 +4070,8 @@ static int dwc2_hsotg_ep_disable(struct usb_ep *=
ep)=0A=
>>>    	struct dwc2_hsotg *hsotg =3D hs_ep->parent;=0A=
>>>    	int dir_in =3D hs_ep->dir_in;=0A=
>>>    	int index =3D hs_ep->index;=0A=
>>> -	unsigned long flags;=0A=
>>>    	u32 epctrl_reg;=0A=
>>>    	u32 ctrl;=0A=
>>> -	int locked;=0A=
>>>    =0A=
>>>    	dev_dbg(hsotg->dev, "%s(ep %p)\n", __func__, ep);=0A=
>>>    =0A=
>>> @@ -4088,10 +4087,6 @@ static int dwc2_hsotg_ep_disable(struct usb_ep *=
ep)=0A=
>>>    =0A=
>>>    	epctrl_reg =3D dir_in ? DIEPCTL(index) : DOEPCTL(index);=0A=
>>>    =0A=
>>> -	locked =3D spin_is_locked(&hsotg->lock);=0A=
>>> -	if (!locked)=0A=
>>> -		spin_lock_irqsave(&hsotg->lock, flags);=0A=
>>> -=0A=
>>>    	ctrl =3D dwc2_readl(hsotg, epctrl_reg);=0A=
>>>    =0A=
>>>    	if (ctrl & DXEPCTL_EPENA)=0A=
>>> @@ -4114,12 +4109,23 @@ static int dwc2_hsotg_ep_disable(struct usb_ep =
*ep)=0A=
>>>    	hs_ep->fifo_index =3D 0;=0A=
>>>    	hs_ep->fifo_size =3D 0;=0A=
>>>    =0A=
>>> -	if (!locked)=0A=
>>> -		spin_unlock_irqrestore(&hsotg->lock, flags);=0A=
>>> -=0A=
>>>    	return 0;=0A=
>>>    }=0A=
>>>    =0A=
>>> +static int dwc2_hsotg_ep_disable_lock(struct usb_ep *ep)=0A=
>>> +{=0A=
>>> +	struct dwc2_hsotg_ep *hs_ep =3D our_ep(ep);=0A=
>>> +	struct dwc2_hsotg *hsotg =3D hs_ep->parent;=0A=
>>> +	unsigned long flags;=0A=
>>> +	int ret;=0A=
>>> +=0A=
>>> +	spin_lock_irqsave(&hsotg->lock, flags);=0A=
>>> +	ret =3D dwc2_hsotg_ep_disable(ep);=0A=
>>> +	spin_unlock_irqrestore(&hsotg->lock, flags);=0A=
>>> +=0A=
>>> +	return ret;=0A=
>>> +}=0A=
>>> +=0A=
>>>    /**=0A=
>>>     * on_list - check request is on the given endpoint=0A=
>>>     * @ep: The endpoint to check.=0A=
>>> @@ -4267,7 +4273,7 @@ static int dwc2_hsotg_ep_sethalt_lock(struct usb_=
ep *ep, int value)=0A=
>>>    =0A=
>>>    static const struct usb_ep_ops dwc2_hsotg_ep_ops =3D {=0A=
>>>    	.enable		=3D dwc2_hsotg_ep_enable,=0A=
>>> -	.disable	=3D dwc2_hsotg_ep_disable,=0A=
>>> +	.disable	=3D dwc2_hsotg_ep_disable_lock,=0A=
>>>    	.alloc_request	=3D dwc2_hsotg_ep_alloc_request,=0A=
>>>    	.free_request	=3D dwc2_hsotg_ep_free_request,=0A=
>>>    	.queue		=3D dwc2_hsotg_ep_queue_lock,=0A=
>>> @@ -4407,9 +4413,9 @@ static int dwc2_hsotg_udc_stop(struct usb_gadget =
*gadget)=0A=
>>>    	/* all endpoints should be shutdown */=0A=
>>>    	for (ep =3D 1; ep < hsotg->num_of_eps; ep++) {=0A=
>>>    		if (hsotg->eps_in[ep])=0A=
>>> -			dwc2_hsotg_ep_disable(&hsotg->eps_in[ep]->ep);=0A=
>>> +			dwc2_hsotg_ep_disable_lock(&hsotg->eps_in[ep]->ep);=0A=
>>>    		if (hsotg->eps_out[ep])=0A=
>>> -			dwc2_hsotg_ep_disable(&hsotg->eps_out[ep]->ep);=0A=
>>> +			dwc2_hsotg_ep_disable_lock(&hsotg->eps_out[ep]->ep);=0A=
>>>    	}=0A=
>>>    =0A=
>>>    	spin_lock_irqsave(&hsotg->lock, flags);=0A=
>>> @@ -4857,9 +4863,9 @@ int dwc2_hsotg_suspend(struct dwc2_hsotg *hsotg)=
=0A=
>>>    =0A=
>>>    		for (ep =3D 0; ep < hsotg->num_of_eps; ep++) {=0A=
>>>    			if (hsotg->eps_in[ep])=0A=
>>> -				dwc2_hsotg_ep_disable(&hsotg->eps_in[ep]->ep);=0A=
>>> +				dwc2_hsotg_ep_disable_lock(&hsotg->eps_in[ep]->ep);=0A=
>>>    			if (hsotg->eps_out[ep])=0A=
>>> -				dwc2_hsotg_ep_disable(&hsotg->eps_out[ep]->ep);=0A=
>>> +				dwc2_hsotg_ep_disable_lock(&hsotg->eps_out[ep]->ep);=0A=
>>>    		}=0A=
>>>    	}=0A=
>>>    =0A=
>>>=0A=
>>=0A=
>> Your code doesn't take care about fifo_map warnings from=0A=
>> dwc2_hsotg_init_fifo() function. Before calling dwc2_hsotg_init_fifo()=
=0A=
>> from dwc2_hsotg_core_init_disconnected() function all Ep's should=0A=
>> disabled and fifo bitmap should be cleared.=0A=
>>=0A=
> =0A=
> Correct.  I am only trying to fix the locking.  I hope you can fix the=0A=
> rest in a separate patch.=0A=
> =0A=
Yeah. I'll try deeper investigate driver locking flow and fix it later. =0A=
Actually, I like your idea with introducing dwc2_hsotg_ep_disable_lock() =
=0A=
function. Maybe you yourself will submit new patch for safe locking =0A=
fixes? But please just after my patch will applied :-)=0A=
Currently there are 2-3 high priority issues reported by community and I =
=0A=
should find solutions/fixes.=0A=
Thank you very much for your time and useful feedback.=0A=
=0A=
Thanks,=0A=
Minas=0A=
=0A=
=0A=
> regards,=0A=
> dan carpenter=0A=
> =0A=
> =0A=
=0A=
