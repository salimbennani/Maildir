Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:44:00 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0B3D45805FC;
	Mon, 17 Dec 2018 05:20:58 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 05:20:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASTUntRJrU1fo895NvtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv35rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?gIOT428mHZhMJzgqxGvhyuuwd/w5bWbYyOKPpyYrnQcc8GSWZdXMtcUTFKDIOm?=
 =?us-ascii?q?b4sICuoMJeNWron5p1QQsBCwGxKsBOTywTJPhX/33ak63Po9EQHd2wwtBN0OsH?=
 =?us-ascii?q?PTrNX6MKcdT/q5w7XPzTXGdv5b3yr25ovQch05v/2AQbZ9fdDMxUQhCQ/JlEic?=
 =?us-ascii?q?pI/5Mz+P1+kAsXCX4/R8We+rkWIqqAF8riKyysotloXFnJ8Zx1TE+Ch/3Y07P8?=
 =?us-ascii?q?e3SFRhbt6hCJZQtz+VN49xQs46XWFotzg1yqcctZ64YicK0pInyADba/CddIiI?=
 =?us-ascii?q?+B3jWP6QITd+mn1lZKqyiwiu/UWk0OHwS8e53EhQoiZYkdTAqmoB2h3R58SfT/?=
 =?us-ascii?q?ty5Eah2TKB1wDJ7eFEJFg5la7aK54n374xmYMfsUfdES/snkX5kquWelwj+umm?=
 =?us-ascii?q?7eTofK/mq4SCN497lA7+KL4ims+hDuQiNAgBQWyb9f671L358k31WK9KgeEukq?=
 =?us-ascii?q?nFrJDaItwWpqq4Aw9WzIkv8Rm+Dyq93dQcnHkHKk9FeR2dg4joPVHOPO73DfOl?=
 =?us-ascii?q?j1uwlzdrwujMPqf9DZXVMnjDjLDhcK5960FGyQoz0cpQ55VOBrEBPfL8QEnxtN?=
 =?us-ascii?q?PDAx89Mgy0xfvnCdpn2oMfX2KPHrGWMKfIvVCU4eIvJvGGZJUJtzblN/gl+/nu?=
 =?us-ascii?q?gGc7mV8aY6alx5gXaHe+HvRgJEWUen7sgtYHEWcXsQsyVu3qiFueUTFNY3a+Rb?=
 =?us-ascii?q?4z5jY+CIi+F4fMWpitgKCd3Ce8BpBZfHtGClCLEXfrbYmEQe0DaCCJL89lkzwE?=
 =?us-ascii?q?U6WhSoA72RGvsg/616RoLu7O9iIEspLj0cB/5/fPmhEq6Tx0E8Od3nmOT25umG?=
 =?us-ascii?q?MEXTs23KFlrkx7xVeOyqx4g/1eFdxO6PJFSAY6NZjAz+NkD9D+QB7OftCMSFy+?=
 =?us-ascii?q?WNWpHSkxTs4tw98Je0tyBs+tjg7d0CawA78ajbqLBIcq/aLa2HTxI8V9y3PC1K?=
 =?us-ascii?q?Q6i1kmQ81PNXCph6Jl9gjTAZLJnFudl6qwaasc2yvN/n+ZzWWSpEFYTBJwUaLd?=
 =?us-ascii?q?UH8CfETWs8r26lnCT7C0D7QnKRVOyciZJ6tOa93pi0hGRfj5NNTfZWKxh3m/BR?=
 =?us-ascii?q?KSyryQa4rqfn0X3D/BB0gcjwAT4XGGOBAiBiegpmLeCyBuFVLvYk/27elysnS7?=
 =?us-ascii?q?TlUwzwGLaU1h2KG4+hoUhfyaVvMS0agIuCYnqzVoAlm928jaBMaHpwpkZK9ce8?=
 =?us-ascii?q?8y4E9b1WLFsAxwJoavL6R8iV8RbQt2v1ni2A5qCopdi8cqqnAqzA1sKa+D1FNB?=
 =?us-ascii?q?djWY3Y3/O7HNK2ny+gyvZLDS2l3EzNmW/aIP4uwiq1r/pAGpClYi83J/3thVzn?=
 =?us-ascii?q?uQ/InFABATUJLxSEk38Rd6qqreYik84YPUyHJtPbO1sj/Ex9ImGu8lxgy8cNdY?=
 =?us-ascii?q?NaOODBXyHNECB8iyNOwqnECkbggFPO9O7qE0Jd6pd/yc1K6tIulghjOmgX1b74?=
 =?us-ascii?q?9n1kKD6jRzSvTP35YD2PyY2gqHVzHhjFauqMz3mIZEZS0MEWq70yTrGIlRZqhq?=
 =?us-ascii?q?d4YRFWiuO9G3xsl5h5P1W39Y9USvBlMc1M+yZBqSaUfw3QlR1UQRvHymljG0zz?=
 =?us-ascii?q?1ykzE1sKWf2DbCzPjldBoCImRLXnVtjU/wIYioiNAXREqoYBIzlBum5kb6wLJX?=
 =?us-ascii?q?pL9lIGnQQkdIfi72IH9kUqarsrqCYshP6I4nsClNUeS8Z0yaRaD5oxcAzyzjGG?=
 =?us-ascii?q?5ezighdz62opX5gwB6iGWFIXdztnXZftt8xRXe5NzaXvNR2jsGRC9liTjYHFS8?=
 =?us-ascii?q?Pt+p/cmKmJfHqOyxS2WhVphLeynx0YyArDe75XFtARCnnPC8gNznHRI60S/mzd?=
 =?us-ascii?q?ZqUyrIoQ34Yonq0aS6LO1mclNpBF/698p1BIV+npEsi5EX3HgQno+V8mYfkWfv?=
 =?us-ascii?q?LdVb3rrzbH8MRT4I2dHZ+gbk11N4LnKV2Y35TG6SzdV7Z9m1eW4W3iM978ZXCK?=
 =?us-ascii?q?ab9rBEnC11okamogLVe/RygjAdyf424n4An+4JoBYtzjmaAr0KAUlYOinsmw6J?=
 =?us-ascii?q?7t+kqqVXeX2vcaOx1EdlmdChDbeCohxTWXrje5ciGzNw4dt7MF7WzHLz7YTkcs?=
 =?us-ascii?q?HKbd0Prh2UjwvAj+9NJZ0qjPUKgi5nOX/nsX0h1u42lhhu3ZC8vIiaJGRh5qO5?=
 =?us-ascii?q?AhhENjLrY8Mf4C3ijaFbnsyOxYCgAo1hGikXXJvvVf+oEigdtfH5OAaVCjE8tm?=
 =?us-ascii?q?2XGbnCHQ+c9UdmqWjAE4uwOnGTJXkZy8hiRRaHKExehgAUQCs1npojGg+2w8zh?=
 =?us-ascii?q?dV9z5ioN6V7gthtM1uVoOgH/U2fYuQeocyo0R4KZLBZM9QFC4EHVMcOF4+J3Hi?=
 =?us-ascii?q?FY+IChrQOXJmyaYQRIEX8GWkieC1//Obmu4MHK8/KECeqmM/vOfbKOpPReV/iW?=
 =?us-ascii?q?xJKv0Yhm/zeWOsWMJHliCPI71VRZXXBkAMTUgDEPSy0RlyLQYM+Xvha8+itrrs?=
 =?us-ascii?q?+h9PTnQh7g5YyKC7FKK9Vg5wi2gbufN+6XnCt2MytY2YgWxXDWyLkTxloSiyB1?=
 =?us-ascii?q?ejmpELQAszPNTa3Klq9WCR4bdz18NM9S460g2QlNPNbRisnp2b5gkv41F1BFWE?=
 =?us-ascii?q?T9msGoYMwGOX2yOEnbC0aLKruGIybGw8X2YaO6VL1Rg/9Ytxy2uTaHDUDjOi6P?=
 =?us-ascii?q?mCXuVxCqKetMlj2UPARCuIGhdRZgEWjiQ8jgah2+Md93iyU5wLw0hnzQM24cPi?=
 =?us-ascii?q?Nxc0dMrr2W8CNZje9zG21H7np5M+aEnzyV4PXfKpYT4rNXBXFdm+tfqEg6zL5O?=
 =?us-ascii?q?6ycMENV5kS6Ukt5ppkqhlK+o0jdhSx1TsD1GrI6KtF5vPKSf/Z5FDyXq5hUIuE?=
 =?us-ascii?q?aBDxlCm8BiQonsqqRd1sPIvK30LzhG/pTf+s5KVJucE96OLHd0aUmhIzXTFgZQ?=
 =?us-ascii?q?FTM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BVAgBfohdch0O0hNFkHgEGBwaBZYJqg?=
 =?us-ascii?q?QIng3yUD4INFJhoA0wsAxABh1UiOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiK?=
 =?us-ascii?q?CZAEBAQECAQECIAQZAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcBhMFgx0BgXgIB?=
 =?us-ascii?q?Zw7PIogcHwzgnYBAQWHGQgSeYszF4FAP4ERgmQugx4CgToLEYMTgleJRIF0hRS?=
 =?us-ascii?q?PeVYJgiiDFYFQik0YkVKZVTCBPFaBITMaCBsVbAaCNQmCEoNthFmGBzIzAYEEA?=
 =?us-ascii?q?QGLIoJNAQE?=
X-IPAS-Result: =?us-ascii?q?A0BVAgBfohdch0O0hNFkHgEGBwaBZYJqgQIng3yUD4INFJh?=
 =?us-ascii?q?oA0wsAxABh1UiOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiKCZAEBAQECAQECI?=
 =?us-ascii?q?AQZAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcBhMFgx0BgXgIBZw7PIogcHwzgnY?=
 =?us-ascii?q?BAQWHGQgSeYszF4FAP4ERgmQugx4CgToLEYMTgleJRIF0hRSPeVYJgiiDFYFQi?=
 =?us-ascii?q?k0YkVKZVTCBPFaBITMaCBsVbAaCNQmCEoNthFmGBzIzAYEEAQGLIoJNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="55470291"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 05:20:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732670AbeLQNRv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 08:17:51 -0500
Received: from mail-qt1-f195.google.com ([209.85.160.195]:42198 "EHLO
        mail-qt1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727464AbeLQNRv (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 08:17:51 -0500
Received: by mail-qt1-f195.google.com with SMTP id d19so13919705qtq.9
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 05:17:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=LLCCJ+uPwQR+hhZsMV21n9nCX0WtZn1c93N0OPt0bXw=;
        b=ibf2r/zsGrPanN0v4QF6UrRc2mMFWFrm3RzH0c3qJ1GRhMFjZ7jZSpU9mg7lTX9LCL
         Q4xXjFMDcZeCh8F9ffw5Mt6nz9VyFwmWo2gkOcmCr3Pwb7hz1dt5m7HvyG5XI/0lvad1
         zk2PeDptoB9DOQUKsV2hZIzyRcOJwihSXZoIOADZL4nYhfM2vslO1cQEgGd7GRuYKLLF
         khYKriMyLoNvUbEF7D8F0bweqWrers2tYGB3vdI5gANaR0uQsFVqVD1FjyvU96i6Tgua
         pTEs1aUNjLmywB6R73504qlNsL+TZm+2g9KBUnU0WlEUx7dIMbm8AZT8uH2hwQQsLfJN
         fjTg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=LLCCJ+uPwQR+hhZsMV21n9nCX0WtZn1c93N0OPt0bXw=;
        b=IMQgUpfpgTuYTu0gtB9WqvQqFysAeybj/v18+SYX7TtF4Lp1isPhZ5Y3uwtoh1QE4E
         F4TP52Op75G+5KhINOl/ojKAV7o0OE+xZ7pD7fJ27fO1Q0Cg8b4sgEOd8PpmwWLRF0MW
         97tBEKVShld3frzvCqLHtQrvs+tJJwkMsjN/EsYM6Bepd+0PkiB7Qth1ge0YW4kfcKzQ
         bxLs7ZpRZjCjTeYmgGjm0JZU9KFCvt2wETcDMu6fj92o7Wop6tsiuO+VhLZBNmARgQzY
         HwZYEaMUbb3lVe/HtmebwaqUOVXwvWULh9yuI7wa+EluW2PQndr5xaaMls3WN9f16fX+
         NKMA==
X-Gm-Message-State: AA+aEWZUI02yqH7W/+ypJKvx178m3ngpF0Yu5Q2PTXnNvw0a2OGrTlNP
        aKb4ShKkxSkIuSn4wXtoU0JQ8NQ7a+paWW8ifaiP4w==
X-Google-Smtp-Source: AFSGD/UxQWtD8HCWAkR+D3SXI4M/n1hk/tJqkUc7yqIpIBg0dSvICnXZ7EkLFzZavlckwdcKu25vbzCYBPpnZltUejw=
X-Received: by 2002:ac8:108e:: with SMTP id a14mr12505138qtj.86.1545052668705;
 Mon, 17 Dec 2018 05:17:48 -0800 (PST)
MIME-Version: 1.0
References: <20181217024805.122897-1-kyletso@google.com> <HE1PR1001MB1002719044E56D116949E2AE80BC0@HE1PR1001MB1002.EURPRD10.PROD.OUTLOOK.COM>
 <CAGZ6i=1jC0e1gkh6nmDS2y4SE3op0pZ+RPAgExfmfnBJkcFWCw@mail.gmail.com>
In-Reply-To: <CAGZ6i=1jC0e1gkh6nmDS2y4SE3op0pZ+RPAgExfmfnBJkcFWCw@mail.gmail.com>
From: Kyle Tso <kyletso@google.com>
Date: Mon, 17 Dec 2018 21:17:37 +0800
Message-ID: <CAGZ6i=10sbGB9FpRauQ9Byx_jTUrNsrTbkydXmP-XG1Qrqo4sg@mail.gmail.com>
Subject: Re: [PATCH] usb: typec: tcpm: Extend the matching rules on PPS APDO selection
To: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
Cc: "linux@roeck-us.net" <linux@roeck-us.net>,
        "heikki.krogerus@linux.intel.com" <heikki.krogerus@linux.intel.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "badhri@google.com" <badhri@google.com>,
        "linux-usb@vger.kernel.org" <linux-usb@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 17, 2018 at 8:45 PM Kyle Tso <kyletso@google.com> wrote:
>
> On Mon, Dec 17, 2018 at 8:23 PM Adam Thomson
> <Adam.Thomson.Opensource@diasemi.com> wrote:
> >
> > On 17 December 2018 02:48, Kyle Tso wrote:
> >
> > > Current matching rules ensure that the voltage range of selected Source
> > > Capability is entirely within the range defined in one of the Sink Capabilities. This
> > > is reasonable but not practical because Sink may not support wide range of
> > > voltage when sinking power while Source could advertise its capabilities in
> > > raletively wider range. For example, a Source PDO advertising 3.3V-11V@3A (9V
> >
> > relatively
> >
>
> noted!
> Thanks for the correction. I will fix this in the next patch.
>
> > > Prog of Fixed Nominal Voltage) will not be selected if the Sink requires 5V-
> > > 12V@3A PPS power. However, the Sink could work well if the requested voltage
> > > range in RDOs is 5V-11V@3A.
> > >
> > > Currently accepted:
> > >               |--------- source -----|
> > >       |----------- sink ---------------|
> > >
> > > Currently not accepted:
> > >                       |--------- source -----|
> > >       |----------- sink ---------------|
> > >
> > >       |--------- source -----|
> > >               |----------- sink ---------------|
> > >
> > >       |--------- source -----------------|
> > >               |------ sink -------|
> > >
> > > To improve the usability, change the matching rules to what listed
> > > below:
> > > a. The Source PDO is selectable if any portion of the voltage range
> > >    overlaps one of the Sink PDO's voltage range.
> > > b. The maximum operational voltage will be the lower one between the
> > >    selected Source PDO and the matching Sink PDO.
> > > c. The maximum power will be the maximum operational voltage times the
> > >    maximum current defined in the selected Source PDO d. Select the Source PDO
> > > with the highest maximum power
> > >
> > > Signed-off-by: Kyle Tso <kyletso@google.com>
> > >
> > > ---
> > > Changelog since v1:
> > > - updated the commit message as suggested by Guenter Roeck <linux@roeck-
> > > us.net>
> > > ---
> > >  drivers/usb/typec/tcpm/tcpm.c | 29 +++++++++++++++++------------
> > >  1 file changed, 17 insertions(+), 12 deletions(-)
> > >
> > > diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c
> > > index 3620efee2688..3001df7bd602 100644
> > > --- a/drivers/usb/typec/tcpm/tcpm.c
> > > +++ b/drivers/usb/typec/tcpm/tcpm.c
> > > @@ -2213,7 +2213,8 @@ static unsigned int tcpm_pd_select_pps_apdo(struct
> > > tcpm_port *port)
> > >       unsigned int i, j, max_mw = 0, max_mv = 0;
> > >       unsigned int min_src_mv, max_src_mv, src_ma, src_mw;
> > >       unsigned int min_snk_mv, max_snk_mv;
> > > -     u32 pdo;
> > > +     unsigned int max_op_mv;
> > > +     u32 pdo, src, snk;
> > >       unsigned int src_pdo = 0, snk_pdo = 0;
> > >
> > >       /*
> > > @@ -2263,16 +2264,18 @@ static unsigned int tcpm_pd_select_pps_apdo(struct
> > > tcpm_port *port)
> > >                                       continue;
> > >                               }
> > >
> > > -                             if (max_src_mv <= max_snk_mv &&
> > > -                                 min_src_mv >= min_snk_mv) {
> > > +                             if (min_src_mv <= max_snk_mv &&
> > > +                                 max_src_mv >= min_snk_mv) {
> > > +                                     max_op_mv = min(max_src_mv,
> > > max_snk_mv);
> > > +                                     src_mw = (max_op_mv * src_ma) / 1000;
> > >                                       /* Prefer higher voltages if available */
> > >                                       if ((src_mw == max_mw &&
> > > -                                          min_src_mv > max_mv) ||
> > > +                                          max_op_mv > max_mv) ||
> > >                                           src_mw > max_mw) {
> >
> > Sorry I didn't raise this before, but came to mind this morning when I was
> > considering your updates again. What happens if the Source validly provides two
> > PPS APDOs, for example:
> >
> >         3.3V - 11V, 3A (9V programmable)
> >         3.3V - 16V, 3A (15V programmable)
> >
> > and the sink APDO is:
> >
> >         5V - 9V, 3A
> >
> > I think the code here will now select the higher range (15V programmable) as it
> > gives a larger power output value, even if the sink can only support a voltage
> > that's far smaller. I really don't think this is correct. *If* you are going to
> > allow selection of PPS APDOs that provide a larger voltage range than the Sink
> > can actually cope with, then I think you should at least select the lower of
> > those advertised which fulfils the needs of the Sink.
>
> Source:
> 3.3V - 11V, 3A (9V programmable)
> 3.3V - 16V, 3A (15V programmable)
>
> Sink
> 5V - 9V, 3A
>
> In this case, the Sink will select "3.3V - 11V, 3A (9V programmable)"
> because the
> "max_op_mv" when dealing with both Source Cap will be the same.
>
> See line#2269, "max_op_mv" will be limited by "max_snk_mv" which is 9V.
> And in line#2273, "max_op_mv" (of the second src_cap) fails the check
> because "max_mv", which is equal to the "max_op_mv" of the previous src_cap,
> is the same as it.
>

Sorry, I should have explained more clearer here.
"max_op_mv" and "src_mw" are both limited to "max_snk_mv" (9V) in this
case. Therefore in the following "if" statement (line#2272 to line#2274), both
"src_mw" and "max_op_mv" remain the same as those regarding to
the previous src_cap. So the "if" statement will be "false".
==> select the previous src_cap

> 2267                             if (min_src_mv <= max_snk_mv &&
> 2268                                 max_src_mv >= min_snk_mv) {
> 2269                                     max_op_mv = min(max_src_mv,
> max_snk_mv);
> 2270                                     src_mw = (max_op_mv * src_ma) / 1000;
> 2271                                     /* Prefer higher voltages if
> available */
> 2272                                     if ((src_mw == max_mw &&
> 2273                                          max_op_mv > max_mv) ||
> 2274                                         src_mw > max_mw) {
> 2275                                             src_pdo = i;
> 2276                                             snk_pdo = j;
> 2277                                             max_mw = src_mw;
> 2278                                             max_mv = max_op_mv;
> 2279                                     }
> 2280                             }
>
> >
> > >                                               src_pdo = i;
> > >                                               snk_pdo = j;
> > >                                               max_mw = src_mw;
> > > -                                             max_mv = max_src_mv;
> > > +                                             max_mv = max_op_mv;
> > >                                       }
> > >                               }
> > >                       }
> > > @@ -2285,14 +2288,16 @@ static unsigned int tcpm_pd_select_pps_apdo(struct
> > > tcpm_port *port)
> > >       }
> > >
> > >       if (src_pdo) {
> > > -             pdo = port->source_caps[src_pdo];
> > > -
> > > -             port->pps_data.min_volt = pdo_pps_apdo_min_voltage(pdo);
> > > -             port->pps_data.max_volt = pdo_pps_apdo_max_voltage(pdo);
> > > -             port->pps_data.max_curr =
> > > -                     min_pps_apdo_current(pdo, port->snk_pdo[snk_pdo]);
> > > +             src = port->source_caps[src_pdo];
> > > +             snk = port->snk_pdo[snk_pdo];
> > > +
> > > +             port->pps_data.min_volt =
> > > max(pdo_pps_apdo_min_voltage(src),
> > > +                                           pdo_pps_apdo_min_voltage(snk));
> > > +             port->pps_data.max_volt =
> > > min(pdo_pps_apdo_max_voltage(src),
> > > +                                           pdo_pps_apdo_max_voltage(snk));
> > > +             port->pps_data.max_curr = min_pps_apdo_current(src, snk);
> > >               port->pps_data.out_volt =
> > > -                     min(pdo_pps_apdo_max_voltage(pdo), port-
> > > >pps_data.out_volt);
> > > +                     min(port->pps_data.max_volt, port-
> > > >pps_data.out_volt);
> > >               port->pps_data.op_curr =
> > >                       min(port->pps_data.max_curr, port->pps_data.op_curr);
> > >       }
> > > --
> > > 2.20.0.405.gbc1bbc6f85-goog
> >
