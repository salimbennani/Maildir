Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:25:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EDA0D5807A3;
	Fri, 14 Dec 2018 00:47:54 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 14 Dec 2018 00:47:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ay1cguRwMGfQU9WHXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8XIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJcAY28?=
 =?us-ascii?q?YYQAAPYcMulaoYb9vEMOoBmlCAmwGO/i0CNEimPs0KEk1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?naos/6NKETUe+ryKnD0DrMYO1K2Tfh9ofIaA0qrPaRUr1qd8rRyFcgFwfeg1We?=
 =?us-ascii?q?p4zkMTeV1uAXv2eH7+ptTOSigHMppQF2pzig3MYsio/Ri4IbxFDF+yF5wIIvKd?=
 =?us-ascii?q?KkSE52Z8OvHphItyyCKYd6XscvT3t1tCs01LEKo4O3cSsWxJg9xhPSaeSLf5aS?=
 =?us-ascii?q?7R7/SuqcJCp0iXNmdb+6hxu/8EytxfP5W8Wo1VtHoDdJnsXNu30IyhPe68aKR/?=
 =?us-ascii?q?l480i82zuDyQ7e5+RaLk03lafWK5gsyaMqmJUJq0TMBCr2lV32jKCIckUk/fCl?=
 =?us-ascii?q?6/roYrr4vJ+QLYx0hR/kMqQohMO/Bf40Mg8UX2iU4ei81bvj8lPlQLhSkPE6jq?=
 =?us-ascii?q?3UvIrHKckVuKK1GRJZ34U/5xqlDjqr0swUnXwdI1JEfBKHgZLpO1bLIP3gCfe/?=
 =?us-ascii?q?glKskCpkxvzfPb3uHI/NLn7dn7flZLp97EBdyAwtwtBF/J9UFL4BL+zpWkPrt9?=
 =?us-ascii?q?zXEAU5MwqqzObjEtl90ZkeWW2XDq+DLKzSqUOI5v4oI+SUYI8VuTX9JOY/6//h?=
 =?us-ascii?q?kH80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TObykl2NTSZTZ2quX6?=
 =?us-ascii?q?I7/jw7CJipDYbfRo+3h7yNxie7HoBMaWBABVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+DTlxYy+iJuA8Se1GGNSWd0nm?=
 =?us-ascii?q?QTSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T828DjEqTtIxxNwOb1xnG9q4jBDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iZlLyldaIG0C7J9WeM12yOvE5DXQ50UKXF?=
 =?us-ascii?q?W20fZ0TModT44EPCU6GhCbA9PgRdzs6CL7NAasf1glVeWPfjJNPebnqslGiqGx?=
 =?us-ascii?q?aH2KmAbIrwdGUbxyXSFk4EnwcX/XaFMAg+Ajyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyh7E0yj393IEdaApxBufKNHYd?=
 =?us-ascii?q?wj5ldKzmbZtw17Ppy9IKFunF8ecwJrv0zw0xV7EJlPkc8vrHky1gp9NbqY0E9d?=
 =?us-ascii?q?dzOfxZ3wJrzXKmz1/BCza67X2kvS0MqM9qcI8vQ4r1TjvAemFkc593Vn0t9V02?=
 =?us-ascii?q?aT55nQDQoSV47xXVgz9xRgu77aZSw97ZvO1XJwKam0riPC29UxCeQ/zhavYdhe?=
 =?us-ascii?q?P72EFQPoCMIaGtWhJ/Ysm1iqaRIEIvtf9Ko1P8OgavuH17SnPOdmnDK6k2tH5J?=
 =?us-ascii?q?px3V6L9yp5UuTIxYoKw+mE3gubUDfxlFegst3tlY9Yfz0TH2q/xjLiBI5efaBy?=
 =?us-ascii?q?eYcLCWGzI8y43Nl+hpjtW2JG+16nHV8JxMipeR+KZVznwQJQzVgXoWCgmSag1T?=
 =?us-ascii?q?x0ki0mobCF3CPTxOTubhwHNXBRRGljlFvjPZK7j9QHU0e2dQgpkx2l6F3+x6ha?=
 =?us-ascii?q?oqR/MmbSTV1JfyjwM2FtTK+wuqCebM5I7ZMiqT9XX/ikYVCGVr79pAMX0iPiH2?=
 =?us-ascii?q?dExDE3bSqquoj/nxFhjGKdLXBzrGfWeM1qxBff4sDcSuBV3jYcWCZ4jjzXDECm?=
 =?us-ascii?q?P9a15dWUi4vDsuemWmKjTJJTayrrzYCHtCeh/m1lGx6/n/Oymt3hDwc61zT219?=
 =?us-ascii?q?1rVSXOsRb9bZPn16W8MeJ7YEZoAEXw5NZ9GoF7ioEwno0f2WAGhpWJ+noKiWfy?=
 =?us-ascii?q?Ps9c2a7kbnoNRDgLzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYftnkTcc0/cu6GMajPsPuAoi1SidBrESHU9FPS3jjRiI?=
 =?us-ascii?q?7ta+rLlJa2ara7S/yE1+ndW5BrGYvg5cQGr5eoslHSJo68V/MVHM32fp5oDqZt?=
 =?us-ascii?q?bQds4TuQOOkxjbkedVMp0xm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b35yoHpVkADkKXYHnTfS1EDIJrvTnNh2DEDk9qn?=
 =?us-ascii?q?edBLreEhWT6EZgr3LTDZ+rM2ubK2UezdVnXBOdPlBQgBgIXDUmmZ40Dhuly9bm?=
 =?us-ascii?q?cEd9+zAd/Fr4qgZXx+JsNhn/VHrfpQiyZjc1TpifMARZ7gVY60jJNsye6/p5Hz?=
 =?us-ascii?q?tE8Z25sAyNNmubahxKDW4TX0yLGUvjMqOy5dXa8OiYG+m+L+bIYbqUsuxTTPOI?=
 =?us-ascii?q?xZOp0ot78DeALMSPPn9+D/Il3kpPR2x2G8Pcmz8XUSwYizrNb9KHpBe74iB2rs?=
 =?us-ascii?q?e/8OnyWALy/4SPDaFeMc5o+xCwjqeOLOqQhCd/KTZF2ZIA337IyL4D3FEMjyFi?=
 =?us-ascii?q?bSWiEbMFtSTVVqLfhrdXDwIHayN0LMZI77wz3ghOOc7Yi9P5zL14juQyC1dKS1?=
 =?us-ascii?q?PhgNypZdcRLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlWgyGGJxNeop+ycxZ3BWjnTdLrcRm7MN5xjT0rzrw4nHLKNWgAMT?=
 =?us-ascii?q?did0NBtKGf7SRdgv9nAWxO8mJlLfWYmyae9+TYNpcWsf5xDitoje5V/HQ6xKVT?=
 =?us-ascii?q?7CxfQPx1mS3SrsNhol28k+mPzCZnXwRKqjpRmI2LukBiM73D9pZcQXbE4A4N7W?=
 =?us-ascii?q?KIBhUKvdRlDNjvu6FWytfXlaPzKC1N89Tb/cYHA8jUKcSHMGcuMBbzGT7UChcF?=
 =?us-ascii?q?QiCvNW3Fm0Ndl/SSpTWpqc0eu4XgldI2Q6JfHAgxB+4WB2x/EdACKYsxVTQhx+?=
 =?us-ascii?q?21lskNsFa3qhjcQI1ks4zbW+jaVfnmLjeUiZFKaQQMxfXzLdJAZcXAx0V+Zwwi?=
 =?us-ascii?q?z8zxEE3KUIUI+3U5Yw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAAB9bRNch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBAYEvgTmBAieYJoINFI4vhBWEfYFzEgEBGAM?=
 =?us-ascii?q?QAYFLgWGEGyI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwxCARABgWIkAYJiAQIDA?=
 =?us-ascii?q?QIkEwYBATcBBQkBAQoYCSUDDAUgAQUBIhMFgxwBggABBJpgPIofgWwzgnYBAQW?=
 =?us-ascii?q?GRGcIEosQgRwXgX+BEYFwgSKKXIlEgXSEJ5ExCgmBFoEShGWKQgsYYH1Nh0WHX?=
 =?us-ascii?q?iyKDI55BgIJBw8hgSwHggAzGggwgycJghIMF4Mig26HDj8ygQUBAYVWhwABAQ?=
X-IPAS-Result: =?us-ascii?q?A0AGAAB9bRNch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBAYEvgTmBAieYJoINFI4vhBWEfYFzEgEBGAMQAYFLgWGEGyI2B?=
 =?us-ascii?q?w0BAwEBAQEBAQIBEwEBAQgNCQgpIwxCARABgWIkAYJiAQIDAQIkEwYBATcBBQk?=
 =?us-ascii?q?BAQoYCSUDDAUgAQUBIhMFgxwBggABBJpgPIofgWwzgnYBAQWGRGcIEosQgRwXg?=
 =?us-ascii?q?X+BEYFwgSKKXIlEgXSEJ5ExCgmBFoEShGWKQgsYYH1Nh0WHXiyKDI55BgIJBw8?=
 =?us-ascii?q?hgSwHggAzGggwgycJghIMF4Mig26HDj8ygQUBAYVWhwABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="57461448"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 00:47:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728759AbeLNIrs (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 03:47:48 -0500
Received: from mail-ed1-f67.google.com ([209.85.208.67]:45097 "EHLO
        mail-ed1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726494AbeLNIrs (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 03:47:48 -0500
Received: by mail-ed1-f67.google.com with SMTP id d39so4265492edb.12
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 00:47:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ffwll.ch; s=google;
        h=sender:date:from:to:cc:subject:message-id:mail-followup-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=N/x1QJua7CUAnyrcnvFWJwm3HvcMW/4AYkZOcxlxDKE=;
        b=PLMvc1ocGDFep2u5UAL03lM/Svo2UgGQ8eDtSeBMkDBGoV50EcaIzalp0JqMliONZs
         Mb7hyxgYyjdpUdtSduU4Xue1ApxSFYQFzlI28iktagJuo/04jJKpIw369Jm9fBsM63hZ
         s6qsJImuZY0bnG9D9v7xjo2ZZop4vPNN4+d6c=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=N/x1QJua7CUAnyrcnvFWJwm3HvcMW/4AYkZOcxlxDKE=;
        b=idk/KYyo11LBxI457QsnxaYEy+sifqrZepeKD5DrRBPjZ16ROGBQMmOBieOqAmDnmv
         6hYZLBiFruoir8GOc7KZEHIBSfgxekdFkUavEk+sTcUdgQ/vKp9XHqWWcWaABOfX0jmq
         3AUYbduTNjiuxjjzO89wrgdqRCHmKkGpEItoy57nRUIAg+UIZsSHbBHwsvWa4oAZu+vz
         u3D8SwK1TYkBij0mhGQ51xzKAH9nnCXZQ/dGTuHQJaH5vkq6uat5BTsnFN2QxUJGsWFy
         3sAGDkwXy/TmaFa6/UD5g9Yr3boepjn06VVlSv/Z01qFPPzrRx9Kv5+LzzeltVVThlP5
         kEFA==
X-Gm-Message-State: AA+aEWbV1VtZOENtOQLPx46J7M8mrB9yts3WTs1OQZG5tva0tENFx12S
        3dafyKQfot3/RoQUBLuG+iCePw==
X-Google-Smtp-Source: AFSGD/Wnx7lCwIuYec7cs93dNgs2nNkjV5iXd1iqDlkaVCKspMTa+AbLd5pDG8c3PzTxmpxUr+XKGw==
X-Received: by 2002:aa7:d8d3:: with SMTP id k19mr2299628eds.64.1544777266040;
        Fri, 14 Dec 2018 00:47:46 -0800 (PST)
Received: from phenom.ffwll.local ([2a02:168:569e:0:3106:d637:d723:e855])
        by smtp.gmail.com with ESMTPSA id k26-v6sm707627ejv.59.2018.12.14.00.47.44
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 14 Dec 2018 00:47:45 -0800 (PST)
Date: Fri, 14 Dec 2018 09:47:43 +0100
From: Daniel Vetter <daniel@ffwll.ch>
To: Lyude Paul <lyude@redhat.com>
Cc: dri-devel@lists.freedesktop.org, nouveau@lists.freedesktop.org,
        intel-gfx@lists.freedesktop.org, amd-gfx@lists.freedesktop.org,
        Daniel Vetter <daniel@ffwll.ch>,
        Dave Airlie <airlied@gmail.com>,
        Harry Wentland <harry.wentland@amd.com>,
        Jerry Zuo <Jerry.Zuo@amd.com>, Juston Li <juston.li@intel.com>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        linux-kernel@vger.kernel.org
Subject: Re: [WIP PATCH 02/15] drm/dp_mst: Refactor
 drm_dp_update_payload_part1()
Message-ID: <20181214084743.GM21184@phenom.ffwll.local>
Mail-Followup-To: Lyude Paul <lyude@redhat.com>,
        dri-devel@lists.freedesktop.org, nouveau@lists.freedesktop.org,
        intel-gfx@lists.freedesktop.org, amd-gfx@lists.freedesktop.org,
        Dave Airlie <airlied@gmail.com>,
        Harry Wentland <harry.wentland@amd.com>,
        Jerry Zuo <Jerry.Zuo@amd.com>, Juston Li <juston.li@intel.com>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        linux-kernel@vger.kernel.org
References: <20181214012604.13746-1-lyude@redhat.com>
 <20181214012604.13746-3-lyude@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181214012604.13746-3-lyude@redhat.com>
X-Operating-System: Linux phenom 4.18.0-2-amd64 
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 13, 2018 at 08:25:31PM -0500, Lyude Paul wrote:
> There should be no functional changes here

Would be good to explain what you did refactor here, instead of me trying
to reconstruct it from the patch. Especially pre-coffee that helps :-)
> 
> Signed-off-by: Lyude Paul <lyude@redhat.com>
> Cc: Juston Li <juston.li@intel.com>
> ---
>  drivers/gpu/drm/drm_dp_mst_topology.c | 71 ++++++++++++++++-----------
>  1 file changed, 42 insertions(+), 29 deletions(-)
> 
> diff --git a/drivers/gpu/drm/drm_dp_mst_topology.c b/drivers/gpu/drm/drm_dp_mst_topology.c
> index 9b1b5c9b1fa0..2ab16c9e6243 100644
> --- a/drivers/gpu/drm/drm_dp_mst_topology.c
> +++ b/drivers/gpu/drm/drm_dp_mst_topology.c
> @@ -1879,39 +1879,48 @@ int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr *mgr)
>  
>  	mutex_lock(&mgr->payload_lock);
>  	for (i = 0; i < mgr->max_payloads; i++) {
> +		struct drm_dp_vcpi *vcpi = mgr->proposed_vcpis[i];
> +		struct drm_dp_payload *payload = &mgr->payloads[i];
> +
>  		/* solve the current payloads - compare to the hw ones
>  		   - update the hw view */
>  		req_payload.start_slot = cur_slots;
> -		if (mgr->proposed_vcpis[i]) {
> -			port = container_of(mgr->proposed_vcpis[i], struct drm_dp_mst_port, vcpi);
> +		if (vcpi) {
> +			port = container_of(vcpi, struct drm_dp_mst_port,
> +					    vcpi);
>  			port = drm_dp_get_validated_port_ref(mgr, port);
>  			if (!port) {
>  				mutex_unlock(&mgr->payload_lock);
>  				return -EINVAL;
>  			}
> -			req_payload.num_slots = mgr->proposed_vcpis[i]->num_slots;
> -			req_payload.vcpi = mgr->proposed_vcpis[i]->vcpi;
> +			req_payload.num_slots = vcpi->num_slots;
> +			req_payload.vcpi = vcpi->vcpi;
>  		} else {
>  			port = NULL;
>  			req_payload.num_slots = 0;
>  		}
>  
> -		mgr->payloads[i].start_slot = req_payload.start_slot;
> +		payload->start_slot = req_payload.start_slot;
>  		/* work out what is required to happen with this payload */
> -		if (mgr->payloads[i].num_slots != req_payload.num_slots) {
> +		if (payload->num_slots != req_payload.num_slots) {
>  
>  			/* need to push an update for this payload */
>  			if (req_payload.num_slots) {
> -				drm_dp_create_payload_step1(mgr, mgr->proposed_vcpis[i]->vcpi, &req_payload);
> -				mgr->payloads[i].num_slots = req_payload.num_slots;
> -				mgr->payloads[i].vcpi = req_payload.vcpi;
> -			} else if (mgr->payloads[i].num_slots) {
> -				mgr->payloads[i].num_slots = 0;
> -				drm_dp_destroy_payload_step1(mgr, port, mgr->payloads[i].vcpi, &mgr->payloads[i]);
> -				req_payload.payload_state = mgr->payloads[i].payload_state;
> -				mgr->payloads[i].start_slot = 0;
> +				drm_dp_create_payload_step1(mgr, vcpi->vcpi,
> +							    &req_payload);
> +				payload->num_slots = req_payload.num_slots;
> +				payload->vcpi = req_payload.vcpi;
> +
> +			} else if (payload->num_slots) {
> +				payload->num_slots = 0;
> +				drm_dp_destroy_payload_step1(mgr, port,
> +							     payload->vcpi,
> +							     payload);
> +				req_payload.payload_state =
> +					payload->payload_state;
> +				payload->start_slot = 0;
>  			}
> -			mgr->payloads[i].payload_state = req_payload.payload_state;
> +			payload->payload_state = req_payload.payload_state;
>  		}
>  		cur_slots += req_payload.num_slots;
>  
> @@ -1920,22 +1929,26 @@ int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr *mgr)
>  	}
>  
>  	for (i = 0; i < mgr->max_payloads; i++) {
> -		if (mgr->payloads[i].payload_state == DP_PAYLOAD_DELETE_LOCAL) {
> -			DRM_DEBUG_KMS("removing payload %d\n", i);
> -			for (j = i; j < mgr->max_payloads - 1; j++) {
> -				memcpy(&mgr->payloads[j], &mgr->payloads[j + 1], sizeof(struct drm_dp_payload));
> -				mgr->proposed_vcpis[j] = mgr->proposed_vcpis[j + 1];
> -				if (mgr->proposed_vcpis[j] && mgr->proposed_vcpis[j]->num_slots) {
> -					set_bit(j + 1, &mgr->payload_mask);
> -				} else {
> -					clear_bit(j + 1, &mgr->payload_mask);
> -				}
> -			}
> -			memset(&mgr->payloads[mgr->max_payloads - 1], 0, sizeof(struct drm_dp_payload));
> -			mgr->proposed_vcpis[mgr->max_payloads - 1] = NULL;
> -			clear_bit(mgr->max_payloads, &mgr->payload_mask);
> +		if (mgr->payloads[i].payload_state != DP_PAYLOAD_DELETE_LOCAL)
> +			continue;
> +
> +		DRM_DEBUG_KMS("removing payload %d\n", i);
> +		for (j = i; j < mgr->max_payloads - 1; j++) {
> +			mgr->payloads[j] = mgr->payloads[j + 1];
> +			mgr->proposed_vcpis[j] = mgr->proposed_vcpis[j + 1];
>  
> +			if (mgr->proposed_vcpis[j] &&
> +			    mgr->proposed_vcpis[j]->num_slots) {
> +				set_bit(j + 1, &mgr->payload_mask);
> +			} else {
> +				clear_bit(j + 1, &mgr->payload_mask);
> +			}
>  		}
> +
> +		memset(&mgr->payloads[mgr->max_payloads - 1], 0,
> +		       sizeof(struct drm_dp_payload));
> +		mgr->proposed_vcpis[mgr->max_payloads - 1] = NULL;
> +		clear_bit(mgr->max_payloads, &mgr->payload_mask);

With the commit message improved to mention
- Add local variables in the first loop
- Early continue to reduce 1 indent in the 2nd loop

this is Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>

>  	}
>  	mutex_unlock(&mgr->payload_lock);
>  
> -- 
> 2.19.2
> 

-- 
Daniel Vetter
Software Engineer, Intel Corporation
http://blog.ffwll.ch
