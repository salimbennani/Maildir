Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:41:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E7EC45805F0;
	Thu, 20 Dec 2018 11:22:29 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 11:22:28 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5jwP4BaYmZ2MatQd/cc+aD7/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpc+9Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+t6LtlRh/2hS?=
 =?us-ascii?q?seLjI07XvYhdFsgq1HvhKuuhNyyJPQbIyVKPZye6XQds4YS2VcRMZcTy9PDY2y?=
 =?us-ascii?q?YYUPEeQPIOhYoIbhqFQTthu+HQuhCfjzyjNUnHL6wbE23v4jHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtKqoSUfq1zKjTzTXfaPNWwTf945XOfB87pPGDQ65wftTLyUIyEA7KklGQ?=
 =?us-ascii?q?pJfhPzOU0OQNrmea4/B8WuKojm4qsgd8qSWsyMc0koTFmJ4Zx1Te+Slkzos5O8?=
 =?us-ascii?q?e0RFN4bNK4CpddtiOXO5N2T84tWW1kpik3xqEctZO/ZiQHxogryhjCYPKdaYeI?=
 =?us-ascii?q?+AjsVOOJLDd4mn1lfLW/ig6s8Uiv1OL8TNO40FVUoSpflNnDqHQN2wbU6sidRf?=
 =?us-ascii?q?tx5kah2TCR2ADP8uxIP1w4mK7BJ5I8zLM8iIAfvVnAEyPqgkn7ja2bel0h+uey?=
 =?us-ascii?q?6uTnZrvmpoWbN49xkgz+NqUumsqiAeU3KwQOXHaU+f661LL9+U31WbJKj/Mwkq?=
 =?us-ascii?q?bHqpDXPtobpqGnDA9PyIoj6AiwDy2g0NsGmXkLNlVFeAiIj4TxIVHBPOj4Deuj?=
 =?us-ascii?q?g1SriDprw/HGPr7/DZnXIXnDjazsfbJ8605a1QoywspT55NSCrEdPv3zXlX9u8?=
 =?us-ascii?q?DfDh88Kwa02froCM1h1oMCXmKCGq+ZP7nTsV+U/O0vJPOAZI8IuDnnLfgl6OXj?=
 =?us-ascii?q?jXs4mV8bYKmo0oEbaHG+HvR6PUqZZWDgjcsGEWcPpgA+VvDliEWeUT5PYHa/R7?=
 =?us-ascii?q?gz5io7CIKhDofPXJqtj6aD3CqgGp1WZ2ZGCk2DEHvydoWEXesMZzyWIsN7jjME?=
 =?us-ascii?q?Ur2hQZc71R6yrA/616ZnLu3M9y0br53j0sJ55+nSlR4o8zx0AN+Q02WMT2Fyg2?=
 =?us-ascii?q?MJSCU63KF5oUxh1FiD1bJ0jOBfFdxW//lJSBs1NYbAz+xmDND/Qh/Occ2XSFm4?=
 =?us-ascii?q?WNmmASs+TtQqw9AQZUZxHNGijhPG3yquGLIVk72LBJop8qPTxXTxJsB9y2rY26?=
 =?us-ascii?q?kllVUpXsxPNWi+jK5l6wfTH5LJk1mel6uyaKsTxjDN+3mZwWqOpk5YVhVwXrvD?=
 =?us-ascii?q?XX0EYkvWrNL55l7NTrO0CLQnNBdBxtCGKqdQdtLpilBGTu/5ONvCe2Kxh3uwBR?=
 =?us-ascii?q?GQy7OQbYrqfmId3DndCEkEiQwT4WyKNQ8kBielomLeCjNuGEnrY0Pt9+l+tXy6?=
 =?us-ascii?q?QlU1zwGMc01uyb619gQJivybTvMZxqgEtzs5qzVoAFa92MrbBMCEpwV/c6RTf9?=
 =?us-ascii?q?M87E1c2mLEqgNyJJqgL6Nlhl4AaAl3u0Lu1xNqCoRPi8QqrXUqzBZsJqKcyl9O?=
 =?us-ascii?q?azSY3ZXoML3NNmby5Ayva7LR2lzG0NeW570D5+gip1TivAGmDEwi83p83tlR0n?=
 =?us-ascii?q?uc4IjKDQUIXZLwVEY36wZ1p7XAbiYh4IPU0GVmMbOovT/ax9IpGOwlxw66f9de?=
 =?us-ascii?q?LKyLDhXyHNAdB8S0LuwlhUKpbhMdMO9O7qE0O96peOWc2K6sOuZthzamjWVB4I?=
 =?us-ascii?q?Bg3UOA7St8SujU35kbx/GUxBeIVzD5jF25qMD4hZhEZS0OHmq40SXlBI9Rardy?=
 =?us-ascii?q?fIoREmeuPsu3y856h57sXX5Y6VGiC0kH2M+vZRqdcVj90RdM2kQQpHytgTG4wC?=
 =?us-ascii?q?BskzE1sqqf2zTDw+b4exodOW5LR25igU33IYeujNAaX0mobw43mxuj/kv6w6lb?=
 =?us-ascii?q?pKJiL2jcW0tIfi72L318Xau0rLaNf8lP6JYwuyVNTOu8eUyaSqL6oxYC0yLsBW?=
 =?us-ascii?q?xeyCo5dzGrvJX0hBh6iGObLHZuo3vVY8BwxRHD5NPCQf5dxCYJRC59iTPPHFiz?=
 =?us-ascii?q?I8Gp/cmIl5fEqu2+VHiuVpxJfSnr0IOPri275WJxDB27nvCznMDnEAcg3S/60d?=
 =?us-ascii?q?lqSTvHrBLmbob30KS6NPptflN0C1/k98p6BoZ+n5M1hJER2ngVnI+Z/HQZnmfo?=
 =?us-ascii?q?LdVUx7j+Y2ETSj4RzN7Y+wzl2ExlLnKUyIP1THSdws19Z9akZmMawD4y78dPCK?=
 =?us-ascii?q?2M9rxLgTN1okakrQLWefV9gjAdyf405H8bme4Jvhctzj6GArATBkRYOS3slxKV?=
 =?us-ascii?q?79GxtqlXZWCvcaSu20p6h9yuELaCogREUnbjZpgiBTNw7tl4MF/Uy3L88IbkeN?=
 =?us-ascii?q?3Nbd4Jsh2UjgzNj+xUKJI3i/oLijBrOWP7vX051eE7iQZi0o29vIiCM29t5r62?=
 =?us-ascii?q?AgZENj3pYMMe4jPtgrxbnsmIxICjBIlhFi8IXJv1TvKoDTQSuu78NwuVFD08q3?=
 =?us-ascii?q?GbGafQHAOF6UdmqW7PHI6vN32NOHYZytBiTgGHJENDmAAUQCk6npkhGwGqw8zh?=
 =?us-ascii?q?bV555i0L6V7+sBdM0eVoNx/wUmrEoAeoazE0SIWQLRZM7wFC4VvVPtKa7u5pAy?=
 =?us-ascii?q?5Y+ZihphSXKmOHfwRIEX0JWkucClDjILau5NrA8+uZBuakLPvOe7KOqeNAWPeS?=
 =?us-ascii?q?2JKvyZBr/zKNNsWJI3ljAOc32ktFXXBlBcvZny8DRDAQlyLId8Sbvguz+jVrrs?=
 =?us-ascii?q?Cj9/TmQBjg5ZaUBLtIL9pu+wq6gaOCN+OLgCZ5KDBY1o4DxHPSybgf2kIShD9q?=
 =?us-ascii?q?dzW3DbsAsivNRrrKmqBLFx4bdz9zNMxQ4qIg3wlNPNTXhc/v2rFkjv46FVFFWE?=
 =?us-ascii?q?flmsGoY8wKPm68OEnGBEaNKLSJOznLz9vrbqO7TL1alP9UuAGouTaHD0/jOSyO?=
 =?us-ascii?q?ljnzWBCpNOFMjSebMwRfuYG9aBltD2fjQcniah26Nt93kDI3zac1hnPMKW4TLz?=
 =?us-ascii?q?x8f1lRob2X6CMLysl4TklI8mZlIPbMpCed5O7IYsIJsP9vEwx1kexA6Xg3wrcT?=
 =?us-ascii?q?6ztLEq9bgizX+/VuuVC9ju6XynJDWR9DtjtRzNaAuW1mOKPE5t9LXnOSr0FF1n?=
 =?us-ascii?q?mZFxlf/4gtMdbooa0Fl4DC?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BVAQCS6htch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N9lBSCIWiYVC0TAYJDhGsiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwy?=
 =?us-ascii?q?CNgwMgm8DAwECDAETBBkBATcBBQkBARgMAiYCAgNUBg4FBYMdAYIBAwKaDoxZA?=
 =?us-ascii?q?QFvfDOCdgEBBYcaBwiBC4oYgRwXgUA/gREzgioHiDcXgkCJTYF3hBqRFksJila?=
 =?us-ascii?q?HDxiRXZtqgXczGggbFTuCbIIbCQMXg0qKUz8zgQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0BVAQCS6htch0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N9lBS?=
 =?us-ascii?q?CIWiYVC0TAYJDhGsiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNgwMgm8DAwECD?=
 =?us-ascii?q?AETBBkBATcBBQkBARgMAiYCAgNUBg4FBYMdAYIBAwKaDoxZAQFvfDOCdgEBBYc?=
 =?us-ascii?q?aBwiBC4oYgRwXgUA/gREzgioHiDcXgkCJTYF3hBqRFksJilaHDxiRXZtqgXczG?=
 =?us-ascii?q?ggbFTuCbIIbCQMXg0qKUz8zgQUBAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="142981374"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 11:22:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389463AbeLTTWY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 14:22:24 -0500
Received: from a9-30.smtp-out.amazonses.com ([54.240.9.30]:54192 "EHLO
        a9-30.smtp-out.amazonses.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S2389385AbeLTTWE (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 14:22:04 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple;
        s=ug7nbtf4gccmlpwj322ax3p6ow6yfsug; d=amazonses.com; t=1545333722;
        h=Message-Id:Date:From:To:Cc:Cc:Cc:CC:Cc:Cc:Cc:Cc:Cc:Cc:Cc:Subject:References:MIME-Version:Content-Type:Feedback-ID;
        bh=BCm2PiyMf3tx6ZvzxPPkAP12ULxpZW06gS2AyjZcLp8=;
        b=G61d0PPsXs+Tscj8XOVELBwbPKNf0QVDMLAyIG79j+4VmVPBVzFJG5Dz0m/9PH2h
        ry86kMX1hOxMd6oDUO344KEEn9bQUqwhIDCnskTOtohaz/7Sf0sRWOibU7TT1d9AcwP
        bhouU10HazEhSJ9aeKk0WJh6roPvH8OD7Ou55ljE=
Message-ID: <01000167cd114cfc-077a81a2-a425-4578-a5af-89d000f59749-000000@email.amazonses.com>
User-Agent: quilt/0.65
Date: Thu, 20 Dec 2018 19:22:02 +0000
From: Christoph Lameter <cl@linux.com>
To: Matthew Wilcox <willy@infradead.org>
Cc: linux-mm@kvack.org
Cc: linux-kernel@vger.kernel.org
Cc: Pekka Enberg <penberg@cs.helsinki.fi>
CC: akpm@linux-foundation.org
Cc: Mel Gorman <mel@skynet.ie>
Cc: andi@firstfloor.org
Cc: Rik van Riel <riel@redhat.com>
Cc: Dave Chinner <dchinner@redhat.com>
Cc: Christoph Hellwig <hch@lst.de>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Mike Kravetz <mike.kravetz@oracle.com>
Subject: [RFC 6/7] slub: Extend slabinfo to support -D and -F options
References: <20181220192145.023162076@linux.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline; filename=extend_slabinfo
X-SES-Outgoing: 2018.12.20-54.240.9.30
Feedback-ID: 1.us-east-1.fQZZZ0Xtj2+TD7V5apTT/NrT6QKuPgzCT/IC7XYgDKI=:AmazonSES
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

-F lists caches that support moving and defragmentation

-C lists caches that use a ctor.

Change field names for defrag_ratio and remote_node_defrag_ratio.

Add determination of the allocation ratio for a slab. The allocation ratio
is the percentage of available slots for objects in use.

Signed-off-by: Christoph Lameter <cl@linux.com>

---
 Documentation/vm/slabinfo.c |   48 +++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 43 insertions(+), 5 deletions(-)

Index: linux/tools/vm/slabinfo.c
===================================================================
--- linux.orig/tools/vm/slabinfo.c
+++ linux/tools/vm/slabinfo.c
@@ -33,6 +33,8 @@ struct slabinfo {
 	unsigned int hwcache_align, object_size, objs_per_slab;
 	unsigned int sanity_checks, slab_size, store_user, trace;
 	int order, poison, reclaim_account, red_zone;
+	int movable, ctor;
+	int defrag_ratio, remote_node_defrag_ratio;
 	unsigned long partial, objects, slabs, objects_partial, objects_total;
 	unsigned long alloc_fastpath, alloc_slowpath;
 	unsigned long free_fastpath, free_slowpath;
@@ -67,6 +69,8 @@ int show_report;
 int show_alias;
 int show_slab;
 int skip_zero = 1;
+int show_movable;
+int show_ctor;
 int show_numa;
 int show_track;
 int show_first_alias;
@@ -109,14 +113,16 @@ static void fatal(const char *x, ...)
 
 static void usage(void)
 {
-	printf("slabinfo 4/15/2011. (c) 2007 sgi/(c) 2011 Linux Foundation.\n\n"
-		"slabinfo [-ahnpvtsz] [-d debugopts] [slab-regexp]\n"
+	printf("slabinfo 4/15/2017. (c) 2007 sgi/(c) 2011 Linux Foundation/(c) 2017 Jump Trading LLC.\n\n"
+		"slabinfo [-aCdDefFhnpvtsz] [-d debugopts] [slab-regexp]\n"
 		"-a|--aliases           Show aliases\n"
 		"-A|--activity          Most active slabs first\n"
 		"-d<options>|--debug=<options> Set/Clear Debug options\n"
+		"-C|--ctor              Show slabs with ctors\n"
 		"-D|--display-active    Switch line format to activity\n"
 		"-e|--empty             Show empty slabs\n"
 		"-f|--first-alias       Show first alias\n"
+		"-F|--movable           Show caches that support movable objects\n"
 		"-h|--help              Show usage information\n"
 		"-i|--inverted          Inverted list\n"
 		"-l|--slabs             Show slabs\n"
@@ -369,7 +375,7 @@ static void slab_numa(struct slabinfo *s
 		return;
 
 	if (!line) {
-		printf("\n%-21s:", mode ? "NUMA nodes" : "Slab");
+		printf("\n%-21s: Rto ", mode ? "NUMA nodes" : "Slab");
 		for(node = 0; node <= highest_node; node++)
 			printf(" %4d", node);
 		printf("\n----------------------");
@@ -378,6 +384,7 @@ static void slab_numa(struct slabinfo *s
 		printf("\n");
 	}
 	printf("%-21s ", mode ? "All slabs" : s->name);
+	printf("%3d ", s->remote_node_defrag_ratio);
 	for(node = 0; node <= highest_node; node++) {
 		char b[20];
 
@@ -535,6 +542,8 @@ static void report(struct slabinfo *s)
 		printf("** Slabs are destroyed via RCU\n");
 	if (s->reclaim_account)
 		printf("** Reclaim accounting active\n");
+	if (s->movable)
+		printf("** Defragmentation at %d%%\n", s->defrag_ratio);
 
 	printf("\nSizes (bytes)     Slabs              Debug                Memory\n");
 	printf("------------------------------------------------------------------------\n");
@@ -585,6 +594,12 @@ static void slabcache(struct slabinfo *s
 	if (show_empty && s->slabs)
 		return;
 
+	if (show_movable && !s->movable)
+		return;
+
+	if (show_ctor && !s->ctor)
+		return;
+
 	if (sort_loss == 0)
 		store_size(size_str, slab_size(s));
 	else
@@ -599,6 +614,10 @@ static void slabcache(struct slabinfo *s
 		*p++ = '*';
 	if (s->cache_dma)
 		*p++ = 'd';
+	if (s->movable)
+		*p++ = 'F';
+	if (s->ctor)
+		*p++ = 'C';
 	if (s->hwcache_align)
 		*p++ = 'A';
 	if (s->poison)
@@ -633,7 +652,8 @@ static void slabcache(struct slabinfo *s
 		printf("%-21s %8ld %7d %15s %14s %4d %1d %3ld %3ld %s\n",
 			s->name, s->objects, s->object_size, size_str, dist_str,
 			s->objs_per_slab, s->order,
-			s->slabs ? (s->partial * 100) / s->slabs : 100,
+			s->slabs ? (s->partial * 100) /
+					(s->slabs * s->objs_per_slab) : 100,
 			s->slabs ? (s->objects * s->object_size * 100) /
 				(s->slabs * (page_size << s->order)) : 100,
 			flags);
@@ -1252,7 +1272,17 @@ static void read_slab_dir(void)
 			slab->cpu_partial_free = get_obj("cpu_partial_free");
 			slab->alloc_node_mismatch = get_obj("alloc_node_mismatch");
 			slab->deactivate_bypass = get_obj("deactivate_bypass");
+			slab->defrag_ratio = get_obj("defrag_ratio");
+			slab->remote_node_defrag_ratio =
+					get_obj("remote_node_defrag_ratio");
 			chdir("..");
+			if (read_slab_obj(slab, "ops")) {
+				if (strstr(buffer, "ctor :"))
+					slab->ctor = 1;
+				if (strstr(buffer, "migrate :"))
+					slab->movable = 1;
+			}
+
 			if (slab->name[0] == ':')
 				alias_targets++;
 			slab++;
@@ -1329,6 +1359,8 @@ static void xtotals(void)
 }
 
 struct option opts[] = {
+	{ "ctor", no_argument, NULL, 'C' },
+	{ "movable", no_argument, NULL, 'F' },
 	{ "aliases", no_argument, NULL, 'a' },
 	{ "activity", no_argument, NULL, 'A' },
 	{ "debug", optional_argument, NULL, 'd' },
@@ -1364,7 +1396,7 @@ int main(int argc, char *argv[])
 
 	page_size = getpagesize();
 
-	while ((c = getopt_long(argc, argv, "aAd::Defhil1noprstvzTSN:LXBU",
+	while ((c = getopt_long(argc, argv, "aACd::DefFhil1noprstvzTSN:LXBU",
 						opts, NULL)) != -1)
 		switch (c) {
 		case '1':
@@ -1420,6 +1452,12 @@ int main(int argc, char *argv[])
 		case 'z':
 			skip_zero = 0;
 			break;
+		case 'C':
+			show_ctor = 1;
+			break;
+		case 'F':
+			show_movable = 1;
+			break;
 		case 'T':
 			show_totals = 1;
 			break;

