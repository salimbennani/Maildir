Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:26:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D19A15803DC;
	Fri, 14 Dec 2018 02:19:19 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 02:19:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXLB0dBbz05x7Iy+k8NJBw83/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcmyYR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOuRXr4fyqFUBthu+HQuhCfjzxjJLnHL6wbc33/g9HQzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtO6gSUPq1w7fTzTXDcvhY3Cr96I3SfRA7vPqBWqxwccvLyUYxDAPFjk+c?=
 =?us-ascii?q?qY/4PzOQzOsNqXOW7+5hVeKpkWEnsQZxriKoxsc2hYnEn4QYwU3H+yVh2Is5O8?=
 =?us-ascii?q?G0RUphbdK5HpZcqTuWO5Z1T88+WW1luSQ3xqUbtZKlYiQG0okryhzBZ/CdbYSF?=
 =?us-ascii?q?7AjvWPiVLDp+mXlrYqiwhwyo/kil0uD8Vte70FJNriddjNnMuW4C1wbJ5siEVP?=
 =?us-ascii?q?R95EGh1iiL1wzJ7eFEO080mbLaK54n3LEwioIevVrfEiLygkn6kaGbels+9uS1?=
 =?us-ascii?q?6Onrfq/qq56eOoNsjwHxKKUumsixAeQiNQgOWnCW+eC91L3l4E34T6xGjv4ona?=
 =?us-ascii?q?nDtpDVO8Abqre+Aw5b1IYs9Qy/Aiy40NQXg3YHNkhJeBGZgIjzPVHBPvT4Ae24?=
 =?us-ascii?q?g1S2nzdn3+rGMaH5ApXRMnjDl6/sfbJ8605f1gU/199e549PB7EFIfLzXFLxtd?=
 =?us-ascii?q?PCAh84NQy03/joCNFn2owCXmKPB7eTMLnOvl+Q+uIvP+6MaZcVuDnnKvgl++Th?=
 =?us-ascii?q?jXgjlV8dYKmmx50XaH+jE/RiIkWZZ2fsg9gbHWcLuAo+UPLliFmYXTFPYHayWr?=
 =?us-ascii?q?o25isnB4K+EYfDWoetjaSD3Ce8AJJafGNGCleKEXfucIWJQPMMaCOUIs98nT0I?=
 =?us-ascii?q?T7mhS4k91R6wsA/20aZoLu3R+icAr5LsyMB15/HPlRE17TF7Fd+d02GKT2F3hG?=
 =?us-ascii?q?8IXSU53KJkrEx5y1eD17V4gvNCGdxS4fNJThk1NZrGw+NmDNDyXxrLfs2VR1a+?=
 =?us-ascii?q?XtWmHTYxQ8oyw9AUZUZxAdGijhHZ0CqsDL8YjLiLBJ0y8qLB0Hn9Pcd9y3Da1K?=
 =?us-ascii?q?Y/i1kqWNdANWqjhqRn7QjcG5bJk1mFl6atbakTwTTC9HmdwmaUvEFXSghwUb7b?=
 =?us-ascii?q?UnAZYUfWqdf55kbGT7K1DbQnMw1BydONK6dQa93pi0lGS+nnONjEf22xnGKwDw?=
 =?us-ascii?q?6SxryQdIrqZ3kd3CLFBUcZiQ8T42iJORI+Bii7pWLeFyJhFVT0bkPo8Ol+rm67?=
 =?us-ascii?q?T0AuwwGLaU1hy6S6+hoPifOATPMT26oOuD09pDVsAFa9w9XWBsKcpwpgeaVcZs?=
 =?us-ascii?q?894FdH1G7DqwxxJJugL7pmhl4fdQR3sFjj1xF2CoVGjMgro2kmzAt0KaKEzlxB?=
 =?us-ascii?q?cymU0oz3Or3SMmPy5gyga7bK2lHC19ab4r0A6PAmpFTsog6oFlAu/G5609ZIyX?=
 =?us-ascii?q?Sc4JbKDA0MUZ/qVkY39h56p6zVYyUn5oPU02FsPrewsjPYx90pA+4lwA66f9hD?=
 =?us-ascii?q?KKOECBPyE8oCCsmuNewmgUSmYggFPeBS7qE0OcymeuCC2K6qOuZggT2ngX5G4I?=
 =?us-ascii?q?B7zkKD6S58RvTU0JYCxvGSxhGHWCvkjFe9rsD3nphJZSsTHmWj0yfkHpNeZqpo?=
 =?us-ascii?q?cYYNF2iuOcy3ysxiiJH3X35X6UCsB0kB2M+vYheSa1393QtN1UUYu3CnmC24zy?=
 =?us-ascii?q?BqnDEttKaQwCvOw+H6fhodJmFLXHVijUvrIYWsj9EaXVKkbggzmBu++Eb6wbNW?=
 =?us-ascii?q?pKB+L2nVXEdJcDL6L2BkUqusqLWCZ9RD548vsSVSSO68e0yVSqbhoxsG1CPuB2?=
 =?us-ascii?q?leyyohdzGpuZX5mAZ2iHmHI3Zwr3rZeMdwygnZ5NHHQf5R3zwGRDR3iDXNB1i8?=
 =?us-ascii?q?OcWp8suQl5vZru++UGehXIVJcSb31YOAqDe75WpyDBy/hf+zncfrEQo70S/9zN?=
 =?us-ascii?q?RqUSTIrBDhYojkzai6MORnflV2C1/48cZ1BoZ+ko4ojpEKxXcanomV/WYAkWrr?=
 =?us-ascii?q?MtVUw6P+YGANRT4W2dHV5gfl1VZnLnKIwYL5S3qcztFgZ9m8fmMZxCY949pWB6?=
 =?us-ascii?q?eT6bxOhTF1rUagrQLNffh9mS8Qyf4v6H4Zme4FogQswTuGArAOA0ZYJzfjmAqS?=
 =?us-ascii?q?79Cxt6hXYGevcb6t1Etxh9yhDbeCoh1CV3b9YJstAShw7sBnOlLWzHLz8p3keM?=
 =?us-ascii?q?XXbd8Lqh2UlBLAg/JUKZ0rkPoKmDFnOXn8vXA+z+47jBpu3Yy1vYSdKmVt+r65?=
 =?us-ascii?q?DQBcNjHve8wT/TTth75EnsmKx4CvAolhGjITUZTzV/2oFzYSten9OwaKDT0xsX?=
 =?us-ascii?q?ObGbvZHQ+C50ZqtXPPE5a3N36JIHkV18ltRB6YJEZHmgAbQC06noIlFgCt3MHh?=
 =?us-ascii?q?cl125jUP6V7jsBdM1vhkNxriUmfcuQeobC07SIOEIRpS7wFC4VrVMMOE4uJyGS?=
 =?us-ascii?q?FY4oOurAiXJmOHYARICHkDWlaYCFD7Irmu+d7A/vCYB+q5MvvOeKiOpvZYV/uS?=
 =?us-ascii?q?3pKv1Y1m/zmXO8WLP3liCeA720VZUXB4HcTZhysASygNmy3RaM6boQ+2+jdroc?=
 =?us-ascii?q?Cn7PTrRAXv6JOPC7RMMNVv+BO2gaaZO+6TniZ5LjlY2Y0WxX/V07gSx1oSiyBo?=
 =?us-ascii?q?dzmwHrUMry/NTKTMmqBJCx4XcT98NMxN76gkxAlCJdbbis/p1r5/lvM6EUpFWk?=
 =?us-ascii?q?f7ms63Zc0GOWW9NFLcCUaPNbSGIyDLws7tbaO9T71QkPtbtxmqtTmHFE/jOyyJ?=
 =?us-ascii?q?lyP1WBC3LeFMkCabMQRCuIG8dxZhE3TsQMj6ZR27LtB3iyY7wbk1hnPMKG4dPi?=
 =?us-ascii?q?Jwc0JLrr2M8yxYhu9zFHBG7npgNeOEgTqW7/HEKpYKtvtmGiR1mPhc4HQ/yrtV?=
 =?us-ascii?q?6jlLRf11mCTIqN5urEqrku2OyjphTRpPpSxHhIONvUV+J6rZ8oNMVmrD/BIIvi?=
 =?us-ascii?q?2sDEEXo9UjCtTpoLtXzPDLlaT6MjAE9MjbuYMmDsbdJcbPD2s6NhHqGXaAFgka?=
 =?us-ascii?q?ZSSpKnDEgEdekbeU+2HD6tAZp4btntIuS7teXVp9QvAaC0BgFdoqI5ptWD4g17?=
 =?us-ascii?q?mBg5hMrUK3shTVDOBTtZDKVbrGGfzxJTKxkLJbIRAal/ewCYkVfqfh3FNkIg1+?=
 =?us-ascii?q?kYKMEVDXQtZloyt9Ywtyq0JIpitQVGo2jnzkcA624DcwCPu9hFZilApkbP8tsj?=
 =?us-ascii?q?Tx5l4tDl7LoiIqlw82g9qz0mPZSyL4MKrlBdIeMCHzrUVkd8qjGws=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AqAAC0ghNch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ5gngWg5kkSEfYFzEgEBGBMBgyyEGyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiQBgmIDAwECJAsBDQEBNwEFCQEBUAMxAQUBHAYBCggFgxyCAAEFmjg8i?=
 =?us-ascii?q?h+BbDOCdgEBBYcqCBKHa4MlgRyBVz+BRIdEhXeJQASHB5BPBwKCJASPMhiBXYg?=
 =?us-ascii?q?Sh14siQeBBY55AgQCBAUCBQ8hgSWCDjMaMIMvghsMF4hehUc4MoECAwEBIROMI?=
 =?us-ascii?q?gEB?=
X-IPAS-Result: =?us-ascii?q?A0AqAAC0ghNch0O0hNFjHgEGBwaBUQkLAYNrJ5gngWg5kkS?=
 =?us-ascii?q?EfYFzEgEBGBMBgyyEGyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIDA?=
 =?us-ascii?q?wECJAsBDQEBNwEFCQEBUAMxAQUBHAYBCggFgxyCAAEFmjg8ih+BbDOCdgEBBYc?=
 =?us-ascii?q?qCBKHa4MlgRyBVz+BRIdEhXeJQASHB5BPBwKCJASPMhiBXYgSh14siQeBBY55A?=
 =?us-ascii?q?gQCBAUCBQ8hgSWCDjMaMIMvghsMF4hehUc4MoECAwEBIROMIgEB?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="44963959"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 02:19:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729630AbeLNKQO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 05:16:14 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:46758 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729554AbeLNKP5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 05:15:57 -0500
Received: by mail-pg1-f194.google.com with SMTP id w7so2485204pgp.13
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 02:15:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=oMuVu8n3ZWdRbQbhEMy90Uj7CKk0/3mUfjD2e/MUMn0=;
        b=M067d3mlqJZnjoZ6EfwLLzsP0gOVKArU5HUpi9pSuQQwWwKtbwfhoSZAj16RvErXA0
         +ozZSMVoLrL+OOnAJhFn85fqIajezry3r1RNBLHY5qoHeMW1y7hD0bcHogfN2NvoxhMe
         8GzGbec6hmUnBDxrcmXceXeePzBOmbmpuK13U=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=oMuVu8n3ZWdRbQbhEMy90Uj7CKk0/3mUfjD2e/MUMn0=;
        b=rMUC0Mck1pnm8wmWlx8I8HKZthkQZx9dhPAjX52EsvePfSixkCdY7ty2VfZ+yHRfRB
         TqVYkFQG9GyrJKlp3R3cDlwGH/vhDbNCRvLmnInavp8/OZJ4xwEnLZDAsvoC1WJ51to9
         oYb5eT0GiOt1iG8aU+74NfJ/FONqXVsq5MKYSPRM8z9pLHK1enLMGmTu1yuXfRJCLHMc
         X7NOsw11cI7es/sP/pU4/LOh8tkcuci7v/sPoL4MdNFpgOhAEQ0dDwimFCIZH3FtmOCT
         zXYo0/NlE0szc/m8i+kWvP3TtR8gxE4D7txVHk9j8Km6Xvz6TBGA2mpxfU7SVyJQ030a
         B6VA==
X-Gm-Message-State: AA+aEWZWos7IX59l7MrwRx9/q0LhmdrN0jm/Vl12wwkGYr5UH1BfJ9rO
        frjge764QXW94m32i0y4+k1SuA==
X-Google-Smtp-Source: AFSGD/VYpEbPnSvpirsrHD60lnam/veZGq8aedvSPG6mAyl2jDYn8J8Itljc1xk6gNr+ePwpNdHTEA==
X-Received: by 2002:a62:de06:: with SMTP id h6mr2339573pfg.158.1544782556201;
        Fri, 14 Dec 2018 02:15:56 -0800 (PST)
Received: from localhost ([122.172.23.29])
        by smtp.gmail.com with ESMTPSA id y71sm9960187pfi.123.2018.12.14.02.15.55
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 14 Dec 2018 02:15:55 -0800 (PST)
From: Viresh Kumar <viresh.kumar@linaro.org>
To: ulf.hansson@linaro.org, Rafael Wysocki <rjw@rjwysocki.net>,
        Kevin Hilman <khilman@kernel.org>, Pavel Machek <pavel@ucw.cz>,
        Len Brown <len.brown@intel.com>
Cc: Viresh Kumar <viresh.kumar@linaro.org>, linux-pm@vger.kernel.org,
        Vincent Guittot <vincent.guittot@linaro.org>,
        Stephen Boyd <sboyd@kernel.org>, Nishanth Menon <nm@ti.com>,
        rnayak@codeaurora.org, niklas.cassel@linaro.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH V4 6/7] PM / Domains: Factorize dev_pm_genpd_set_performance_state()
Date: Fri, 14 Dec 2018 15:45:32 +0530
Message-Id: <f6153683d88cce25319945e4308bef46edaaaa54.1544782279.git.viresh.kumar@linaro.org>
X-Mailer: git-send-email 2.19.1.568.g152ad8e3369a
In-Reply-To: <cover.1544782279.git.viresh.kumar@linaro.org>
References: <cover.1544782279.git.viresh.kumar@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Separate out _genpd_set_performance_state() and
_genpd_reeval_performance_state() from
dev_pm_genpd_set_performance_state() to handle performance state update
related stuff. This will be used by a later commit.

Tested-by: Rajendra Nayak <rnayak@codeaurora.org>
Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
---
 drivers/base/power/domain.c | 95 +++++++++++++++++++++----------------
 1 file changed, 55 insertions(+), 40 deletions(-)

diff --git a/drivers/base/power/domain.c b/drivers/base/power/domain.c
index 1e98c637e069..808ba41b6580 100644
--- a/drivers/base/power/domain.c
+++ b/drivers/base/power/domain.c
@@ -239,6 +239,56 @@ static void genpd_update_accounting(struct generic_pm_domain *genpd)
 static inline void genpd_update_accounting(struct generic_pm_domain *genpd) {}
 #endif
 
+static int _genpd_reeval_performance_state(struct generic_pm_domain *genpd,
+					   unsigned int state)
+{
+	struct generic_pm_domain_data *pd_data;
+	struct pm_domain_data *pdd;
+
+	/* New requested state is same as Max requested state */
+	if (state == genpd->performance_state)
+		return state;
+
+	/* New requested state is higher than Max requested state */
+	if (state > genpd->performance_state)
+		return state;
+
+	/* Traverse all devices within the domain */
+	list_for_each_entry(pdd, &genpd->dev_list, list_node) {
+		pd_data = to_gpd_data(pdd);
+
+		if (pd_data->performance_state > state)
+			state = pd_data->performance_state;
+	}
+
+	/*
+	 * We aren't propagating performance state changes of a subdomain to its
+	 * masters as we don't have hardware that needs it. Over that, the
+	 * performance states of subdomain and its masters may not have
+	 * one-to-one mapping and would require additional information. We can
+	 * get back to this once we have hardware that needs it. For that
+	 * reason, we don't have to consider performance state of the subdomains
+	 * of genpd here.
+	 */
+	return state;
+}
+
+static int _genpd_set_performance_state(struct generic_pm_domain *genpd,
+					unsigned int state)
+{
+	int ret;
+
+	if (state == genpd->performance_state)
+		return 0;
+
+	ret = genpd->set_performance_state(genpd, state);
+	if (ret)
+		return ret;
+
+	genpd->performance_state = state;
+	return 0;
+}
+
 /**
  * dev_pm_genpd_set_performance_state- Set performance state of device's power
  * domain.
@@ -257,10 +307,9 @@ static inline void genpd_update_accounting(struct generic_pm_domain *genpd) {}
 int dev_pm_genpd_set_performance_state(struct device *dev, unsigned int state)
 {
 	struct generic_pm_domain *genpd;
-	struct generic_pm_domain_data *gpd_data, *pd_data;
-	struct pm_domain_data *pdd;
+	struct generic_pm_domain_data *gpd_data;
 	unsigned int prev;
-	int ret = 0;
+	int ret;
 
 	genpd = dev_to_genpd(dev);
 	if (IS_ERR(genpd))
@@ -281,45 +330,11 @@ int dev_pm_genpd_set_performance_state(struct device *dev, unsigned int state)
 	prev = gpd_data->performance_state;
 	gpd_data->performance_state = state;
 
-	/* New requested state is same as Max requested state */
-	if (state == genpd->performance_state)
-		goto unlock;
-
-	/* New requested state is higher than Max requested state */
-	if (state > genpd->performance_state)
-		goto update_state;
-
-	/* Traverse all devices within the domain */
-	list_for_each_entry(pdd, &genpd->dev_list, list_node) {
-		pd_data = to_gpd_data(pdd);
-
-		if (pd_data->performance_state > state)
-			state = pd_data->performance_state;
-	}
-
-	if (state == genpd->performance_state)
-		goto unlock;
-
-	/*
-	 * We aren't propagating performance state changes of a subdomain to its
-	 * masters as we don't have hardware that needs it. Over that, the
-	 * performance states of subdomain and its masters may not have
-	 * one-to-one mapping and would require additional information. We can
-	 * get back to this once we have hardware that needs it. For that
-	 * reason, we don't have to consider performance state of the subdomains
-	 * of genpd here.
-	 */
-
-update_state:
-	ret = genpd->set_performance_state(genpd, state);
-	if (ret) {
+	state = _genpd_reeval_performance_state(genpd, state);
+	ret = _genpd_set_performance_state(genpd, state);
+	if (ret)
 		gpd_data->performance_state = prev;
-		goto unlock;
-	}
 
-	genpd->performance_state = state;
-
-unlock:
 	genpd_unlock(genpd);
 
 	return ret;
-- 
2.19.1.568.g152ad8e3369a

