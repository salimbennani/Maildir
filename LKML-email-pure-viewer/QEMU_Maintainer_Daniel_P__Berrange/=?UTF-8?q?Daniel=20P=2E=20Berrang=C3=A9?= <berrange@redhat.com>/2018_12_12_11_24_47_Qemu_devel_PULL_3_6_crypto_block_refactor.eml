Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:45:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 03CCF58079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 03:29:29 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 12 Dec 2018 03:29:29 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Ai+Xg2xdc2ItybWnEdb75inJClGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW9YB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2y?=
 =?us-ascii?q?YYUMDeUBM+lXoJXyqVUTtRuzBwuiCezyxjJGmnP5w7Y63v89EQHfxgEsA84CvG?=
 =?us-ascii?q?jWodjzKawcUfq1zK7NzTjbYf1ZwzH96InWfRAlvPqCR6h8etfMxEYxDQPFlE+f?=
 =?us-ascii?q?qYrqPzSPy+8AtHOU4PR6VeK1kWEnrQ5xrSa0y8c2lIbGm4IVxUrY9Slj3Ik1It?=
 =?us-ascii?q?i4RVd9bNW5E5VQrzmXO5VqTs4hWW1kpTs2x74ctZKlciUHyI4rywPdZvCfbYSE?=
 =?us-ascii?q?/hbuWPyMLTp2mn5pYq+zihW8/ES61OHxVc+520tQoCVfiNnDrHUN2gTT6seZTv?=
 =?us-ascii?q?t9+V+s2TKO1wDI9uFEOlo4laXdK5482LIwkYATsUvbEi/3nkX5krOWe1069uS0?=
 =?us-ascii?q?6OnreKjqqoKfOoNulA3zPKQjltaiDek6KgQOWnKU+eW41L3t5035R7BKg+Uvkq?=
 =?us-ascii?q?bHtZDaON0XqbOnDA9LzIkj7w+zACyh0NQFm3kIMExKeAmAg4jtOlHOI+73Ae2w?=
 =?us-ascii?q?glSxiDprw/HGPrv8ApTCNHTDkbHhfapj5E5Y0gY80ddf55dPB7EHJ/LzXEDxtN?=
 =?us-ascii?q?rFDhMjNAy02ennBM1n1owCQWKPHrOZMKTKvF+M5+IvIPeDaJUauTbgMPUl4//u?=
 =?us-ascii?q?jXkkmV4SZ6Wp3J0XaGymEfRiOUmWfX3sgtJSWVoMpRc0Gez2lEWZA3kUY3epQ7?=
 =?us-ascii?q?l64DY9B4S7S4DZSceoib2F2S69WZpOemFBDEvLCHrtasCIVukBbHGvJNR8mGkB?=
 =?us-ascii?q?XLmlV4hzzByrqUr2xqRqKq/O9zQFuIn//N5y4eLViFc17zMjFNmX0WyGUzRpmH?=
 =?us-ascii?q?gVTSQ9xqF1rB9BzQKa3K1lxvBVC9FXz/VOVAg8KNjb1eMpJcr1X1ftd9GIRVLu?=
 =?us-ascii?q?epPuKzwrVNs3zF5GN0xwAc+riB/O9zCnD78ci/qAA5liofGU5GT4O8sokyWO76?=
 =?us-ascii?q?ImlVRzB5IXbWA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AdAACQ8BBcmBHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJig3uIGV+LM4INl1OBcxQYFIc7IjQJDQEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4vgjYFAgMaAQaCXAMDAQIgIwopAwMBAgYBAR8FAiIEAgIDAVMZBYMcg?=
 =?us-ascii?q?gIBBKVpgS+FQINjgQ2BC4lvgUIRBoF/gRGLF4JXAok9l0oHAoZKiwALGIlph1s?=
 =?us-ascii?q?smQ2BRoIOcBWDJ4InFxKOC0ExgQccixSBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AdAACQ8BBcmBHrdtBjHQEBBQEHBQGBUQgBCwGBMIJig3u?=
 =?us-ascii?q?IGV+LM4INl1OBcxQYFIc7IjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFA?=
 =?us-ascii?q?gMaAQaCXAMDAQIgIwopAwMBAgYBAR8FAiIEAgIDAVMZBYMcggIBBKVpgS+FQIN?=
 =?us-ascii?q?jgQ2BC4lvgUIRBoF/gRGLF4JXAok9l0oHAoZKiwALGIlph1ssmQ2BRoIOcBWDJ?=
 =?us-ascii?q?4InFxKOC0ExgQccixSBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="43735857"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 03:29:28 -0800
Received: from localhost ([::1]:43953 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX2hk-0006Tm-8F
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 06:29:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37404)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gX2ds-00039F-G2
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 06:25:29 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gX2dq-0004U5-Aa
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 06:25:28 -0500
Received: from mx1.redhat.com ([209.132.183.28]:42752)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <berrange@redhat.com>)
	id 1gX2dT-00049G-3T; Wed, 12 Dec 2018 06:25:03 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 5862E308FB9E;
	Wed, 12 Dec 2018 11:25:02 +0000 (UTC)
Received: from localhost.localdomain.com (ovpn-112-73.ams2.redhat.com
	[10.36.112.73])
	by smtp.corp.redhat.com (Postfix) with ESMTP id AECD81001F41;
	Wed, 12 Dec 2018 11:24:59 +0000 (UTC)
From: =?UTF-8?q?Daniel=20P=2E=20Berrang=C3=A9?= <berrange@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 11:24:47 +0000
Message-Id: <20181212112450.2103-4-berrange@redhat.com>
In-Reply-To: <20181212112450.2103-1-berrange@redhat.com>
References: <20181212112450.2103-1-berrange@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.43]);
	Wed, 12 Dec 2018 11:25:02 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 3/6] crypto/block: refactor
 qcrypto_block_*crypt_helper functions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Peter Maydell <peter.maydell@linaro.org>,
	Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	qemu-block@nongnu.org, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>

qcrypto_block_encrypt_helper and qcrypto_block_decrypt_helper are
almost identical, let's reduce code duplication and simplify further
improvements.

Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
Reviewed-by: Alberto Garcia <berto@igalia.com>
Signed-off-by: Daniel P. Berrang=C3=A9 <berrange@redhat.com>
---
 crypto/block.c | 81 +++++++++++++++++++-------------------------------
 1 file changed, 31 insertions(+), 50 deletions(-)

diff --git a/crypto/block.c b/crypto/block.c
index e59d1140fe..8d0e4bdbb2 100644
--- a/crypto/block.c
+++ b/crypto/block.c
@@ -190,14 +190,21 @@ void qcrypto_block_free(QCryptoBlock *block)
 }
=20
=20
-int qcrypto_block_decrypt_helper(QCryptoCipher *cipher,
-                                 size_t niv,
-                                 QCryptoIVGen *ivgen,
-                                 int sectorsize,
-                                 uint64_t offset,
-                                 uint8_t *buf,
-                                 size_t len,
-                                 Error **errp)
+typedef int (*QCryptoCipherEncDecFunc)(QCryptoCipher *cipher,
+                                       const void *in,
+                                       void *out,
+                                       size_t len,
+                                       Error **errp);
+
+static int do_qcrypto_block_encdec(QCryptoCipher *cipher,
+                                   size_t niv,
+                                   QCryptoIVGen *ivgen,
+                                   int sectorsize,
+                                   uint64_t offset,
+                                   uint8_t *buf,
+                                   size_t len,
+                                   QCryptoCipherEncDecFunc func,
+                                   Error **errp)
 {
     uint8_t *iv;
     int ret =3D -1;
@@ -226,8 +233,7 @@ int qcrypto_block_decrypt_helper(QCryptoCipher *ciphe=
r,
         }
=20
         nbytes =3D len > sectorsize ? sectorsize : len;
-        if (qcrypto_cipher_decrypt(cipher, buf, buf,
-                                   nbytes, errp) < 0) {
+        if (func(cipher, buf, buf, nbytes, errp) < 0) {
             goto cleanup;
         }
=20
@@ -243,7 +249,7 @@ int qcrypto_block_decrypt_helper(QCryptoCipher *ciphe=
r,
 }
=20
=20
-int qcrypto_block_encrypt_helper(QCryptoCipher *cipher,
+int qcrypto_block_decrypt_helper(QCryptoCipher *cipher,
                                  size_t niv,
                                  QCryptoIVGen *ivgen,
                                  int sectorsize,
@@ -252,45 +258,20 @@ int qcrypto_block_encrypt_helper(QCryptoCipher *cip=
her,
                                  size_t len,
                                  Error **errp)
 {
-    uint8_t *iv;
-    int ret =3D -1;
-    uint64_t startsector =3D offset / sectorsize;
-
-    assert(QEMU_IS_ALIGNED(offset, sectorsize));
-    assert(QEMU_IS_ALIGNED(len, sectorsize));
-
-    iv =3D niv ? g_new0(uint8_t, niv) : NULL;
-
-    while (len > 0) {
-        size_t nbytes;
-        if (niv) {
-            if (qcrypto_ivgen_calculate(ivgen,
-                                        startsector,
-                                        iv, niv,
-                                        errp) < 0) {
-                goto cleanup;
-            }
+    return do_qcrypto_block_encdec(cipher, niv, ivgen, sectorsize, offse=
t,
+                                   buf, len, qcrypto_cipher_decrypt, err=
p);
+}
=20
-            if (qcrypto_cipher_setiv(cipher,
-                                     iv, niv,
-                                     errp) < 0) {
-                goto cleanup;
-            }
-        }
=20
-        nbytes =3D len > sectorsize ? sectorsize : len;
-        if (qcrypto_cipher_encrypt(cipher, buf, buf,
-                                   nbytes, errp) < 0) {
-            goto cleanup;
-        }
-
-        startsector++;
-        buf +=3D nbytes;
-        len -=3D nbytes;
-    }
-
-    ret =3D 0;
- cleanup:
-    g_free(iv);
-    return ret;
+int qcrypto_block_encrypt_helper(QCryptoCipher *cipher,
+                                 size_t niv,
+                                 QCryptoIVGen *ivgen,
+                                 int sectorsize,
+                                 uint64_t offset,
+                                 uint8_t *buf,
+                                 size_t len,
+                                 Error **errp)
+{
+    return do_qcrypto_block_encdec(cipher, niv, ivgen, sectorsize, offse=
t,
+                                   buf, len, qcrypto_cipher_encrypt, err=
p);
 }
--=20
2.19.2


