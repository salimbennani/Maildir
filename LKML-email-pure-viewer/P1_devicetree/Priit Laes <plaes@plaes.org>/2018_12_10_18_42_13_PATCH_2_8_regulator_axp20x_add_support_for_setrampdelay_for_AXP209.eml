Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6EB09580380;
	Mon, 10 Dec 2018 10:43:12 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 10:43:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ae2OgHBH/1siRTn44vKpxSp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75r869bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoYbyqVQVrRumBwShH//jxzxSi3Pqx6A2z/gtHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3vOqcIUOC1zbXIxijFYfxMxzj985XDfxc5ofGIR71/b9HRxFI3FwPBlFqf?=
 =?us-ascii?q?t5flMymS1uQXvGiW9uxtXv+shW4/swx9vCSjy8M2hoXUiI8Z1ErI+Th6zYopP9?=
 =?us-ascii?q?G1SUx2bca6HJdNuSyWLZV6Tt8tTm1ytys3y6cKtYC0cSQWzpks2gTRZOadc4eS?=
 =?us-ascii?q?5xLuTOaRLil8hHJiYL+/mRmy/la6yuHmVcm7zkxKrixbndnIrHwN0AbT6sefRv?=
 =?us-ascii?q?t8+EeuxyqP2hjN5u1YJU04j7fXJpA/zrIqi5YesljPEjX3lUj0lKOWc18r+ums?=
 =?us-ascii?q?6+TpeLXmoZqcOpdwigH/NKQuh8O+Df07MgcQRWib//qz1Ln68U3+TrRKiOM5kr?=
 =?us-ascii?q?PCvZDEKsQUuLS5DxVW0ok98Ra/CSmp0NACkXkANlJFdwqLj5L1NFHWPPD4EfC/?=
 =?us-ascii?q?jkyokDdqxPDJIKftA5rQLnXYlLfhfLB961NTyQYpzNBf4Y5UBa8FIP7pRkDxs9?=
 =?us-ascii?q?nYBAcjMwOo2+bnFMl91oQGVGKPGKCZMb/SvkWP5u41I+mMeZUauDDyK/U+4/7u?=
 =?us-ascii?q?jHk5mUISfKWz3JsXbmy4EepiI0mDfXXshdIBG38QvgUiVOzqlEGCUTlLanawWK?=
 =?us-ascii?q?Iz+Cs3CIGhDYfFQICth6eM3CO6Hp1Qe2BHBUqAEXbud4WYRfgMbDieLdNmkjwB?=
 =?us-ascii?q?TbKhUZMu1QmytA/mzLpqNvDb+jYYtZLk19h5/ffTmgsw9TFvC8Sd0meNT3x7n2?=
 =?us-ascii?q?8SRj822rx/rlJ5yluZzad4hPlYH8RJ5/xVSgc6KYLcz+tiBtDxQA3BeM2FSFKn?=
 =?us-ascii?q?Qtq8BzExQck8w9sPY0Z7BtWjgQrP3yusA78JibOLAIY4/b7b33j0P8x90WrJ1L?=
 =?us-ascii?q?E9j1k6RctCLXCpibRh9wfNHYLJk1+Wl6CxdasC2i7B82ODzWmLvEFcSwNwVaTF?=
 =?us-ascii?q?XXYCZkrZt9j550XCT6OwBrQjKAdO1cmCKq5SYN3zkVpGXOvjOMjZY2+phmi/Hw?=
 =?us-ascii?q?iIya2WYIrqYWod2j7dB1YCkw0I+XaGNA4+Bjquom7EDTxuE07vbF3o8eVktHy7?=
 =?us-ascii?q?SUo0xRmQb0J9z7q15gIVhfuERvMP37IEvSAhqyl0HFe9xd7WF8CMpw17fKVYYN?=
 =?us-ascii?q?M95lhH2Hndtwx8OJygMq9jikQfcwRxo0PhyRF3Bp9cnsgtqXMg1BByJr6A0FNd?=
 =?us-ascii?q?azOY2oj9NafTKmbs8xGgda7X1kvF39aL56gA8vI4q1bkvAG3DUci93Rn099I03?=
 =?us-ascii?q?qT/JnKDQwSUY7vXUYz7RR1u7baYiwl7YPOyXJsKbW0siPF298xBOol1wyscMtF?=
 =?us-ascii?q?PKKFFA/9CcsaB8e1JewumlipaA8EPe9I+K41OcOma+WJ2KqxMOl8mzKmiHxN4J?=
 =?us-ascii?q?ph3UKU6yp8VunI0o4fw/GZwgSITS38g0qmssztn4BLeysSHmumxSf4HoFRYrB9?=
 =?us-ascii?q?cpgRCWepJc263dF+h5/rW35F+1+vHVIG2Mm1eRWMa1zxxxFf1UMSoXa/gyu30y?=
 =?us-ascii?q?R0ky01rqqYxCHPw+XieAAHO2JRX2likFHsLJOwj9AbWkiocgcomAGk5Ub826hU?=
 =?us-ascii?q?uqB/I3PPTkdPeij8N3tiXbeotrqef85P74slsSdNX+SmYlCaSbn9rwEB0yz5HG?=
 =?us-ascii?q?texzE7dze0tZX/hBF6jGOdLHBurHvWY81wxBHf5MDCSv5VxDYJWC54iTzPDFim?=
 =?us-ascii?q?I9ap5cmUl4vEsu2mV2OuTJpTfTPpzYOBsiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox+kZE/hJAK1Xgam5Wa53wHkWjo?=
 =?us-ascii?q?PNVf2KL+amcNRDERz97U5gjlxFNsLnaTy43lUXWdx9NrZ8OmbWMOxiI988dKBb?=
 =?us-ascii?q?+R7LxFnit6uEC0rAzPbvhmgjcS1+Eu52UEjOETtwog1SGdArEUHUlFMi3gjRWI?=
 =?us-ascii?q?79airKpJYGaja6S/1E17ndq5FrGNvhlcWGrlepclBSJw8sJ/MFfW3Hzy8I7kfs?=
 =?us-ascii?q?TQbckIth2ViBrAi+lVKJQslvsFnyZnOGT9vWE7xO4/lxBhwZa6vI2fIWV34K25?=
 =?us-ascii?q?GgJYNiHyZ84L4T7il6FensKL34y1GpVhBy4GXJ/pTfKuDTITuu7rNweIED0gtH?=
 =?us-ascii?q?ibHaDTEhOY6Edjt3jPCYykN2mLJHkFytVvXBudK1ZagA8KRzU2hII5GhqpxMz8?=
 =?us-ascii?q?c0d5+zYR6UTjqhZXzuJoNh//UnrQpQuyazc0ToSfIwRS7g1Y+0jVNsme5PppHy?=
 =?us-ascii?q?5E5p2hsBCNKmuDagVICmEJR1WEB035Mbmo/9XA6O+YBuyxL/bVZbWOqOpeV+qH?=
 =?us-ascii?q?xJ6104tm+SqMOduLPnV4E/I73U9DV2hjG8vFgzUPVzAXlyXVYs6buhi8+y53rs?=
 =?us-ascii?q?O+8PjxWwLv/4yPC7RMPtV15hC2mryON+qRhCZ/NDZZ2YkAxX7OyLgDwlESjzti?=
 =?us-ascii?q?eCWqEbQFrSTNVr7fmrdLDx4HbCN+LNFH778n0QlXJ8Haisn51rp5jvMuD1dFVF?=
 =?us-ascii?q?rhmtymZMAQImG9Mk/HC1iPNLicOTLLxMT3a7umSbJMlOVUqwGwuTGDHk//PzSD?=
 =?us-ascii?q?kiPlWAy1Pe5QjCGUIhpetZq5chZsD2jjUd3nZge6MN9xkT0537k0imnWOm4bND?=
 =?us-ascii?q?h2a1lNoaGI7SNEnvV/HHRM73p/IumCniaZ7u/YJY4XsPtrGCt0ke1a7W8+y7tU?=
 =?us-ascii?q?6iFEWfN0lDHTrt5ov1GpjO2PxiB7XxpJrzYYzL6M6GFvNO378Z9NQj6Q+B8Aq2?=
 =?us-ascii?q?eXDRkRj99kDNT1vOZX0NeZ0OrJLz0K09/O58oaCICAMsWNMDktLTLqFSTSAQ9D?=
 =?us-ascii?q?SiSkYyWXokVHk7mo62GRp5424szpkYANDKVGSFg8EP8yA15gWtcFJcEzFhgknL?=
 =?us-ascii?q?jevdNA2WG3rVGFW8hcpbjMTfOfR/L1J2DdxZxNdxoNzPvCLJwaLIGzj0lrelh/?=
 =?us-ascii?q?kcLQGlLZR9xlqCpmcgs1pgNG930oCiUX2kvgIiys+nMMEvm41koyhQpkbfsq8z?=
 =?us-ascii?q?vE7FI+J16Mryw1xg15vNz/gni7ajnuKu/kV5tRDCz1umAyP4n9TgIzahe9ywgs?=
 =?us-ascii?q?ODraRrlck6FteEh1hwLG/5hCA/hRSetDehBUjfWWYeg4lFdRsCOqwWdZ6ubfT5?=
 =?us-ascii?q?hvjg0nddirtX0EkwZiasMlYKXKIe9Kw0JWi6amui6zyvt3wQkQPU8B/WqePikS?=
 =?us-ascii?q?twhAEb0iJjSl5KRX4gyDnTJMfCBYUP4rvP9w3lg2O+WGxi3klbhHfAT5M+2ZMr?=
 =?us-ascii?q?PcoHXGhc/AFlcx0F4Y0lJY+6h3+cgkdEWQWk81y6aJDFICMs+Uei9PaM8HzGLS?=
 =?us-ascii?q?fDrGlezA2tohJ4G0G/vAVeuHub1ShVirSlV6V78Q59gMS8H/mHrTKt3qeftckU?=
 =?us-ascii?q?0g?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACFsg5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBOMD4INFJc9gXMsEwGHbSI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiQBgmIDAwECJAsBDQEBNwEFCQEBHzEDVAYBEgWDHIICBAGlRYFsM?=
 =?us-ascii?q?4J2AQEFgQQBAYYXCIdygxOBHBc+gQI/hWSDJBGFZqB3CZFPGJE9LIh2kVSCDjM?=
 =?us-ascii?q?aCCgIgyeCGxiIaYUIATg+MoECAgEBASETi2QBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAACFsg5ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBOMD4INFJc9gXMsEwGHbSI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBg?=
 =?us-ascii?q?mIDAwECJAsBDQEBNwEFCQEBHzEDVAYBEgWDHIICBAGlRYFsM4J2AQEFgQQBAYY?=
 =?us-ascii?q?XCIdygxOBHBc+gQI/hWSDJBGFZqB3CZFPGJE9LIh2kVSCDjMaCCgIgyeCGxiIa?=
 =?us-ascii?q?YUIATg+MoECAgEBASETi2QBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="54585523"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 10:43:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728972AbeLJSnH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 13:43:07 -0500
Received: from plaes.org ([188.166.43.21]:55100 "EHLO plaes.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727071AbeLJSm2 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 13:42:28 -0500
Received: from localhost (unknown [213.204.46.240])
        by plaes.org (Postfix) with ESMTPSA id DA06C41289;
        Mon, 10 Dec 2018 18:42:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=plaes.org; s=mail;
        t=1544467346; bh=f2mcC9Dpd0QYLyRmz8so1Ckg3Nv64+LbaTC/FIJ10Ik=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=O0WRi/ydRMrVKhFvfrIp9rdhWemlVVSJizeZzDNYiH9lyZrQZiTltvzHazv628ABN
         ik2L4ipxvpqsfKM/qbJQ4CbD8bTRBZo9cWM3WNL4y7d/3dl54cr6sVi3idNrpzbbQs
         T7H1+TJiSgY7E4vI9oKsPFY8YwktCr81J5QHkbThIzhLh7v0FS3BNneH3+Nx5I1QaC
         6PyyrBpTTy5dFGZT3jqn7S+sFel22dumtTbCGSLSEY+NPjgk0Jq3O9FZM4Lq/H9Cng
         3O/KEY46u5lIuRWND//h5WUyFLRJ68BLGkiN3+vERefiOOU+t0F7boHxKgxF+W6AgA
         LEk5vNM2DmaBA==
From: Priit Laes <plaes@plaes.org>
To: Lee Jones <lee.jones@linaro.org>, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Chen-Yu Tsai <wens@csie.org>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Liam Girdwood <lgirdwood@gmail.com>,
        Mark Brown <broonie@kernel.org>, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        Olliver Schinagl <oliver@schinagl.nl>,
        linux-sunxi <linux-sunxi@googlegroups.com>
Cc: Priit Laes <plaes@plaes.org>
Subject: [PATCH 2/8] regulator: axp20x: add support for set_ramp_delay for AXP209
Date: Mon, 10 Dec 2018 20:42:13 +0200
Message-Id: <2bfe47f173fe72a30b0036dcdeebc2123962ff33.1544466940.git-series.plaes@plaes.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <cover.4110554ae84987dedb8b58888a8a63d6b7f98c72.1544466940.git-series.plaes@plaes.org>
References: <cover.4110554ae84987dedb8b58888a8a63d6b7f98c72.1544466940.git-series.plaes@plaes.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Olliver Schinagl <oliver@schinagl.nl>

The AXP209 supports ramping up voltages on several regulators such as
DCDC2 and LDO3.

This patch adds preliminary support for the regulator-ramp-delay property
for these 2 regulators. Note that the voltage ramp only works when
regulator is already enabled. E.g. when going from say 0.7 V to 3.6 V.

When turning on the regulator, no voltage ramp is performed in hardware.

What this means, is that if the bootloader brings up the voltage at 0.7 V,
the ramp delay property is properly applied. If however, the bootloader
leaves the power off, no ramp delay is applied when the power is
enabled by the regulator framework.

Signed-off-by: Olliver Schinagl <oliver@schinagl.nl>
Signed-off-by: Priit Laes <plaes@plaes.org>
---
 drivers/regulator/axp20x-regulator.c | 85 +++++++++++++++++++++++++++++-
 1 file changed, 85 insertions(+)

diff --git a/drivers/regulator/axp20x-regulator.c b/drivers/regulator/axp20x-regulator.c
index 9a2db28..1d9fa62 100644
--- a/drivers/regulator/axp20x-regulator.c
+++ b/drivers/regulator/axp20x-regulator.c
@@ -51,6 +51,17 @@
 #define AXP20X_PWR_OUT_DCDC2_MASK	BIT_MASK(4)
 #define AXP20X_PWR_OUT_LDO3_MASK	BIT_MASK(6)
 
+#define AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_RATE_MASK	BIT_MASK(0)
+#define AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_RATE(x) \
+	((x) << 0)
+#define AXP20X_DCDC2_LDO3_V_RAMP_LDO3_RATE_MASK		BIT_MASK(1)
+#define AXP20X_DCDC2_LDO3_V_RAMP_LDO3_RATE(x) \
+	((x) << 1)
+#define AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN_MASK		BIT_MASK(2)
+#define AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN		BIT(2)
+#define AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN_MASK		BIT_MASK(3)
+#define AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN		BIT(3)
+
 #define AXP20X_LDO4_V_OUT_1250mV_START	0x0
 #define AXP20X_LDO4_V_OUT_1250mV_STEPS	0
 #define AXP20X_LDO4_V_OUT_1250mV_END	\
@@ -346,6 +357,79 @@
 		.ops		= &axp20x_ops_range,				\
 	}
 
+static const int axp209_dcdc2_ldo3_slew_rates[] = {
+	1600,
+	 800,
+};
+
+static int axp20x_set_ramp_delay(struct regulator_dev *rdev, int ramp)
+{
+	struct axp20x_dev *axp20x = rdev_get_drvdata(rdev);
+	const struct regulator_desc *desc = rdev->desc;
+	u8 reg, mask, enable, cfg = 0xff;
+	const int *slew_rates;
+	int rate_count = 0;
+
+	if (!rdev)
+		return -EINVAL;
+
+	switch (axp20x->variant) {
+	case AXP209_ID:
+		if (desc->id == AXP20X_DCDC2) {
+			rate_count = ARRAY_SIZE(axp209_dcdc2_ldo3_slew_rates);
+			reg = AXP20X_DCDC2_LDO3_V_RAMP;
+			mask = AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_RATE_MASK |
+			       AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN_MASK;
+			enable = (ramp > 0) ?
+				 AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN :
+				 !AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN;
+			break;
+		}
+
+		if (desc->id == AXP20X_LDO3) {
+			slew_rates = axp209_dcdc2_ldo3_slew_rates;
+			rate_count = ARRAY_SIZE(axp209_dcdc2_ldo3_slew_rates);
+			reg = AXP20X_DCDC2_LDO3_V_RAMP;
+			mask = AXP20X_DCDC2_LDO3_V_RAMP_LDO3_RATE_MASK |
+			       AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN_MASK;
+			enable = (ramp > 0) ?
+				 AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN :
+				 !AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN;
+			break;
+		}
+
+		if (rate_count > 0)
+			break;
+
+		/* fall through */
+	default:
+		/* Not supported for this regulator */
+		return -ENOTSUPP;
+	}
+
+	if (ramp == 0) {
+		cfg = enable;
+	} else {
+		int i;
+
+		for (i = 0; i < rate_count; i++) {
+			if (ramp <= slew_rates[i])
+				cfg = AXP20X_DCDC2_LDO3_V_RAMP_LDO3_RATE(i);
+			else
+				break;
+		}
+
+		if (cfg == 0xff) {
+			dev_err(axp20x->dev, "unsupported ramp value %d", ramp);
+			return -EINVAL;
+		}
+
+		cfg |= enable;
+	}
+
+	return regmap_update_bits(axp20x->regmap, reg, mask, cfg);
+}
+
 static const struct regulator_ops axp20x_ops_fixed = {
 	.list_voltage		= regulator_list_voltage_linear,
 };
@@ -366,6 +450,7 @@ static const struct regulator_ops axp20x_ops = {
 	.enable			= regulator_enable_regmap,
 	.disable		= regulator_disable_regmap,
 	.is_enabled		= regulator_is_enabled_regmap,
+	.set_ramp_delay		= axp20x_set_ramp_delay,
 };
 
 static const struct regulator_ops axp20x_ops_sw = {
-- 
git-series 0.9.1
