Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:46:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F311958079D;
	Tue, 11 Dec 2018 05:18:42 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 05:18:42 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJ4F4WBE/CCaqyLTkDAD9hp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os+8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCIOhWsZXyp0AWrRa8HgSsGP/jxyVUinPqwaE30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotHoNKcWUOC61q/IxijdYvxM3Tfy8pPHcxA8qvyLX7JwbM7RyUg1GAPDlFmf?=
 =?us-ascii?q?tZbqPzeP2esWs2mW9OVgVee1hG4mrwF9uCSgxsApioTQgI8e117K9SJ8wIkvJN?=
 =?us-ascii?q?24TlZ2YdGjEJtXuCGaM5V5Ttk+TGFvvSY3zKANt52jfCUS1pgr2xrSZ+aaf4WG?=
 =?us-ascii?q?/B7vTvudLDRkiH5/eb+yhQ6+/Va8xuD4TMW501ZHojBYntXStX0BzR3e58iBR/?=
 =?us-ascii?q?Bg5EmuwyyP2BrW6uxcIUA7i67bK5k5z74umZocr17DEjX1mErolq+WcFsr+uyy?=
 =?us-ascii?q?5+TgeLXmqYeQN45yig7gLqQjgtKzDfg8PwQUQmSW9/qw2Kf+8UD6XLlGlPw7n6?=
 =?us-ascii?q?vBvJDfP8sbp6q5AwFP0oYk7hayFzOm0NUenXkaI1NJYRGHgJbzO1HIPv/4Ce6z?=
 =?us-ascii?q?g1OikTdt2f/GJKbsAovCLnfdirftZ7V95FBGyAo1099f44hYCrYbIPL8QkPxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENF91oIdWW2RGKOYP77SvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JsdcGq4Eeh+I0WFfXrshc8MEWcQsQo/UOzlklqCXSRTZ3avRa?=
 =?us-ascii?q?084D47BZmiDYfCQICtnbOA0D26Hp1QemBJFFSMHW30eIWDXvcGcDiSLdN5kjwY?=
 =?us-ascii?q?SbihTJcs1ROptADk0bZnLe3U+isetZLkz9V14+zTlRcv9T17Fcid0meNT31qkW?=
 =?us-ascii?q?MMXTM5wKd/oUllwFeZzad4m+BYFcBU5/5RSAg6Lp7cz+t5C9zoQALOZNWJRU2i?=
 =?us-ascii?q?QtWnBzExU90wz8UPY0Z7B9WtkBTD0zC2DL8SkryBHIY0/b7E33jtO8Z9zG7L1K?=
 =?us-ascii?q?o7gFkgWMdPMWymibR59wjcHIPJl0SZl6C3daUTxiLN9WGDzXaQs0FcSgJ/TaLF?=
 =?us-ascii?q?XXUHbEvMsdv5/l/CT6OpCbk/LwRO09CCJbVQZt3pl1pGQuzjN8rYY262n2ewBh?=
 =?us-ascii?q?OIxreXYYruemUd2jjdCUcenwAS+3aGKRYxBiO7r23CCzxuEErlY1nw/ulmtHO7?=
 =?us-ascii?q?Ukg0whmXYEJ7ybq65AQZhfyGRPMVxbILpiEhpi5wHFa82dLWFtWBqxBgfKVafd?=
 =?us-ascii?q?My/lNH2XjFuAx6O5yqN7piiUIGcwRro0Pu0A16CplBkcgvq3Mq0ApyKKKC3FNd?=
 =?us-ascii?q?bT+Y2orwOrnWKmn08xCicKrW2lDY0NaL9aYD8vU4q1P/vA63Ekou6Wlo095Q03?=
 =?us-ascii?q?GE/JXFEBISUY7tUkYw7xV1vbXabTcy5ozK1XxgK7K7siLf1N0zAuslyRGgf8lE?=
 =?us-ascii?q?PaOAFQ/yFdAaBse0JOwrnVipcgwLPORI+KEoOMOmcuOM2LS3M+Z4gDKmkWNH7Z?=
 =?us-ascii?q?h900KR7SZzVvTE3pcFw/6C2AuHWCzxjFOgssDxhIBFaiseHmu5ySj4GoFRYrd+?=
 =?us-ascii?q?cpoMCWerO8e33Mlxh4bxW35E816uH0kG2M61dhWIdVzywApQ2V4RoXO5gyu4zi?=
 =?us-ascii?q?V4nC0zoaqbwSPB3f7idB0BOmNQQGlijFHsIZW7jtwAXUioaRQpmwWh5Urg26db?=
 =?us-ascii?q?o6F/JXHJQUhUZyj2M31iUqyou7uCYs5D8pMpvT9MUOShZ1CXUbr9oxoc0yP+EG?=
 =?us-ascii?q?pS3jE7dze2uprnmxx2kn6SLHF2rHDBY8F/2Q/f5MDARf5WxjcGRjN3iSPUBli/?=
 =?us-ascii?q?ONml586UmI3AsuC9VmKhUINccS/wwIOEtSu743BqABKlk/CynN3nDRY10Svh29?=
 =?us-ascii?q?Z2UiXIqQ72YpP32KSiLeJnYk5oCUf86sVgHYFyiIkwhJAW2XUBgpWV/HwHkXr8?=
 =?us-ascii?q?MNlB2KL+amYNSiAPw9LP/Afl30hjJGqTx43lTnWd3tdhZ96ib2MVwC097tpGCK?=
 =?us-ascii?q?eJ7LNemyt1rUG1rQbQYfh7gzccxuEi6H8cg+EVpgUtyj+RDawVHUldJSbsjQiH?=
 =?us-ascii?q?78iirKVLY2aiab2w1Et9nd+7Fr2DrB9TWG3lepg8By9/9dtwMEjD0HDo7oHked?=
 =?us-ascii?q?/Qbc8ctxGOkhfAifRVJ4w1lvYQmSVnPmf9t2U/y+EnlRxuwY26vI+fJmVx+6K5?=
 =?us-ascii?q?BwRUNzzvaMMV5zHtlr1enseN0oCrH5VhHCgLXZTyQfKpFjISqeroNwKUHDIgrX?=
 =?us-ascii?q?ebHKLVHRWD50d+s3LPD5erOmmMK3YDytViQASdKFZbgAAJRzg6mp85Fga3xM3u?=
 =?us-ascii?q?akt55zYR5kLmpRtI0O5nKx7/UmLHrgeydjg0UISfLAZR7gxa5UfaK8me4fxoHy?=
 =?us-ascii?q?1C4p2ttg+NKnGYZwRVC2EGQFeECkvnPrmv49nA7ueZCvC/L/vIfbWBt+heW+2U?=
 =?us-ascii?q?ypKo14ts5yyMOdmXPnl+E/073VJOXHB+G8TEgjUPVjYYlyTXY86Aoxe8/CJ3o9?=
 =?us-ascii?q?u78PTqXgLv+ISOB6FTMdVp5xC5n6ODO/SMiyZ+LDZSzokMymPQyLgDwF4SjDlj?=
 =?us-ascii?q?dzmzHrQBti7NT6PQlrVUDx4BbCNzO9VH77gh3glWIsPbjtL11rhljv86EVtFVF?=
 =?us-ascii?q?rhmt23aswOOW2yKFTHBEOTPrScOTLL2933Yb+7SbBIlupUqga/uSyFHE7jJDiD?=
 =?us-ascii?q?kzjpWgurMeFNiiGbIRNftJu8chZrFWjsUtbmZgenP99wiD082ac0iW/SNW4ALT?=
 =?us-ascii?q?h8dFtArqGR7SNdmPlwB3ZN4WZlLeaanSaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXrtR2uVGpjvGPyiZ7UBpJsjtKhJiEvUNnOaXY8JlPQXfF/BIX4m?=
 =?us-ascii?q?WWBBQHvN9lCtzpu6BNxdnDjqPzKDFe893K+csQHdTbKMWCMClpDR28ICTVDRdN?=
 =?us-ascii?q?aTemLimLn0hUneq67nmco4N8rYLjzt5GbbtfVUI4DLshAURkGtUNJN8jWTclj7?=
 =?us-ascii?q?OBpNUD5Xu4pRbVAsNe6MPpTPWXVNfyLDeQi/Fvbh8By6KweYYOMozy3QppY11z?=
 =?us-ascii?q?lpXiFE/ZXNQLqSpkOFxn6H5R+WRzGzVgk3nubRmgtTpKTaa5?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ArAAB5uA9ch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDe4N7hB6MEIINFJc+FIEQA0wsCwgBh3AiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiAEGQEbHQEDAgkBAQUFCwMHA?=
 =?us-ascii?q?wICJgICAx4BAREBBQEcBgESBYMcAYFoAQMVBQqZQzyLDXwWBQEXgncFhD0KGSc?=
 =?us-ascii?q?NXYE3AgYSeYswgVc/hCOBQYEWRwKBLgESAQMRgw+CVwKLK4hkjD4uBwKCIgSLf?=
 =?us-ascii?q?IMvGJFALIh3hgGKADCBJW0wcTMaI4EBgjsJghIYHYM4imcrMwGBBAEBiCOCPgE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0ArAAB5uA9ch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDe4N7hB6MEIINFJc+FIEQA0wsCwgBh3AiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYkAYJhAQEBAQMBAiAEGQEbHQEDAgkBAQUFCwMHAwICJgICAx4BARE?=
 =?us-ascii?q?BBQEcBgESBYMcAYFoAQMVBQqZQzyLDXwWBQEXgncFhD0KGScNXYE3AgYSeYswg?=
 =?us-ascii?q?Vc/hCOBQYEWRwKBLgESAQMRgw+CVwKLK4hkjD4uBwKCIgSLfIMvGJFALIh3hgG?=
 =?us-ascii?q?KADCBJW0wcTMaI4EBgjsJghIYHYM4imcrMwGBBAEBiCOCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55852428"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 05:18:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726556AbeLKNPN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 08:15:13 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:55050 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726212AbeLKNPM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 08:15:12 -0500
Received: by mail-wm1-f65.google.com with SMTP id a62so2171018wmh.4;
        Tue, 11 Dec 2018 05:15:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=dphSfbsjSZj33H3I+CK/0LfW2iFi3OYhO56M6vIsI50=;
        b=uClpNe9asttjvszCUsiV39H8Kgodo4oqJgCRPMw+72bAyVpIDkAi3sXtXLQP2MJFY/
         zNdOnmADxjZicTFHZksyLXmUhHdmI3/MRDWzPzcqyQabE6ZO/BDKuJoOQ4f4aoc+DNvv
         WA/fPVRnfXq43ih4iGYL/9l+JQHDr7Fe+6FDgjxoonBGtI93cJGh1oDSqcj7h9m1bxEH
         QOm3YbeBcHOZSFaxMXQ15T9+K+eBuWLh08A7FFsAwDBHHKskoPTdhY3cvU8b7J3Cx2sX
         vsd6VL4whnBcnOtJLNqkQBEj9WR/XZN3ouTRzRUO9n4+hF7XWXuiBLOShI8xkt6Q+DyN
         Gw9g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=dphSfbsjSZj33H3I+CK/0LfW2iFi3OYhO56M6vIsI50=;
        b=KUpORnuKRB9U8kzLf+5OEhRUVbJf7+K4Jmo4jDUScBXBRnIAMM7ku5wb0LsZ+Isumk
         eGaOMIdQyRZpsQLCisaNECujiIOTouYhev1u+oyqn0EtU/nVF+HBpt5w6cbdLV3S6zIm
         rEF39HheZT21FdJdPUo97OMQjGtyGDy2gFFXtaiNhVPYEMxCuCTd4iciH/QpJODUqXRR
         ry/Qvq7x4lZh133TcDhC5KXARDIhvxDumQWZiz3HAlZHC3G0tMll2o2LZimsAiHR76XJ
         qafP4AVtyBeM5r9JClfywr0f8nUGKqv7fYcuYL9E/HvFkIu4uKJRXxIV40zN3MYMMck3
         8oXA==
X-Gm-Message-State: AA+aEWY/IHtCtXakXIzCQfABVTQqTKTB9noGCHRibzDauX6mGmXdyW6R
        FI/BL68Wfe5HJzo+J6TSUhQZL3W+ZZimDg2qsqtfow==
X-Google-Smtp-Source: AFSGD/Ub6247rZwplT7MfSNoqPP6WOkVdPxpyXyIXLPWhmqCoOQzWXcvFwkKfkgiqpPSoifQfbsJJU670NPvet2pIVo=
X-Received: by 2002:a1c:58ce:: with SMTP id m197mr2375364wmb.31.1544534109240;
 Tue, 11 Dec 2018 05:15:09 -0800 (PST)
MIME-Version: 1.0
References: <cover.4110554ae84987dedb8b58888a8a63d6b7f98c72.1544466940.git-series.plaes@plaes.org>
 <2bfe47f173fe72a30b0036dcdeebc2123962ff33.1544466940.git-series.plaes@plaes.org>
In-Reply-To: <2bfe47f173fe72a30b0036dcdeebc2123962ff33.1544466940.git-series.plaes@plaes.org>
From: Julian Calaby <julian.calaby@gmail.com>
Date: Wed, 12 Dec 2018 00:14:57 +1100
Message-ID: <CAGRGNgX2d4u0HP2xLxcGhH2QkN-GdYZf4iKV_XAn53A8z0y8JQ@mail.gmail.com>
Subject: Re: [linux-sunxi] [PATCH 2/8] regulator: axp20x: add support for
 set_ramp_delay for AXP209
To: Priit Laes <plaes@plaes.org>, Olliver Schinagl <oliver@schinagl.nl>
Cc: Lee Jones <lee.jones@linaro.org>, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Chen-Yu Tsai <wens@csie.org>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Liam Girdwood <lgirdwood@gmail.com>,
        Mark Brown <broonie@kernel.org>,
        devicetree <devicetree@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "Mailing List, Arm" <linux-arm-kernel@lists.infradead.org>,
        linux-sunxi <linux-sunxi@googlegroups.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Priit and Olliver,

On Tue, Dec 11, 2018 at 5:42 AM Priit Laes <plaes@plaes.org> wrote:
>
> From: Olliver Schinagl <oliver@schinagl.nl>
>
> The AXP209 supports ramping up voltages on several regulators such as
> DCDC2 and LDO3.
>
> This patch adds preliminary support for the regulator-ramp-delay property
> for these 2 regulators. Note that the voltage ramp only works when
> regulator is already enabled. E.g. when going from say 0.7 V to 3.6 V.
>
> When turning on the regulator, no voltage ramp is performed in hardware.
>
> What this means, is that if the bootloader brings up the voltage at 0.7 V,
> the ramp delay property is properly applied. If however, the bootloader
> leaves the power off, no ramp delay is applied when the power is
> enabled by the regulator framework.
>
> Signed-off-by: Olliver Schinagl <oliver@schinagl.nl>
> Signed-off-by: Priit Laes <plaes@plaes.org>
> ---
>  drivers/regulator/axp20x-regulator.c | 85 +++++++++++++++++++++++++++++-
>  1 file changed, 85 insertions(+)
>
> diff --git a/drivers/regulator/axp20x-regulator.c b/drivers/regulator/axp20x-regulator.c
> index 9a2db28..1d9fa62 100644
> --- a/drivers/regulator/axp20x-regulator.c
> +++ b/drivers/regulator/axp20x-regulator.c
> @@ -346,6 +357,79 @@
>                 .ops            = &axp20x_ops_range,                            \
>         }
>
> +static const int axp209_dcdc2_ldo3_slew_rates[] = {
> +       1600,
> +        800,
> +};
> +
> +static int axp20x_set_ramp_delay(struct regulator_dev *rdev, int ramp)
> +{
> +       struct axp20x_dev *axp20x = rdev_get_drvdata(rdev);
> +       const struct regulator_desc *desc = rdev->desc;
> +       u8 reg, mask, enable, cfg = 0xff;
> +       const int *slew_rates;
> +       int rate_count = 0;
> +
> +       if (!rdev)
> +               return -EINVAL;
> +
> +       switch (axp20x->variant) {
> +       case AXP209_ID:
> +               if (desc->id == AXP20X_DCDC2) {

Is slew_rates supposed to be set here?

> +                       rate_count = ARRAY_SIZE(axp209_dcdc2_ldo3_slew_rates);
> +                       reg = AXP20X_DCDC2_LDO3_V_RAMP;
> +                       mask = AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_RATE_MASK |
> +                              AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN_MASK;
> +                       enable = (ramp > 0) ?
> +                                AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN :
> +                                !AXP20X_DCDC2_LDO3_V_RAMP_DCDC2_EN;
> +                       break;
> +               }
> +
> +               if (desc->id == AXP20X_LDO3) {
> +                       slew_rates = axp209_dcdc2_ldo3_slew_rates;
> +                       rate_count = ARRAY_SIZE(axp209_dcdc2_ldo3_slew_rates);
> +                       reg = AXP20X_DCDC2_LDO3_V_RAMP;
> +                       mask = AXP20X_DCDC2_LDO3_V_RAMP_LDO3_RATE_MASK |
> +                              AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN_MASK;
> +                       enable = (ramp > 0) ?
> +                                AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN :
> +                                !AXP20X_DCDC2_LDO3_V_RAMP_LDO3_EN;
> +                       break;
> +               }
> +
> +               if (rate_count > 0)
> +                       break;

You could save one to two tests by combining the above three if statements, i.e.

if (DCDC2) {
    // set DCDC2 stuff

    break;
} else if (LDO3) {
    // set LDO3 stuff

    break;
}

As written, the rate_count > 0 test will never be true as every block
that sets rate_count breaks out of the switch block.

You could then calculate rate_count below the switch block.

> +
> +               /* fall through */
> +       default:
> +               /* Not supported for this regulator */
> +               return -ENOTSUPP;
> +       }
> +
> +       if (ramp == 0) {
> +               cfg = enable;
> +       } else {
> +               int i;
> +
> +               for (i = 0; i < rate_count; i++) {
> +                       if (ramp <= slew_rates[i])
> +                               cfg = AXP20X_DCDC2_LDO3_V_RAMP_LDO3_RATE(i);
> +                       else
> +                               break;
> +               }
> +
> +               if (cfg == 0xff) {
> +                       dev_err(axp20x->dev, "unsupported ramp value %d", ramp);
> +                       return -EINVAL;
> +               }
> +
> +               cfg |= enable;
> +       }
> +
> +       return regmap_update_bits(axp20x->regmap, reg, mask, cfg);
> +}
> +



-- 
Julian Calaby

Email: julian.calaby@gmail.com
Profile: http://www.google.com/profiles/julian.calaby/
