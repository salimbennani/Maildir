Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:36:10 -0000
Received: from icoremail.net (unknown [209.85.214.181])
	by mail-app4 (Coremail) with SMTP id cS_KCgDXv05iPfNbmfvaAQ--.35310S3;
	Tue, 20 Nov 2018 06:47:00 +0800 (CST)
Received: from mail-pl1-f181.google.com (unknown [209.85.214.181])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3HkphPfNblqJaAA--.4793S3;
	Tue, 20 Nov 2018 06:46:57 +0800 (CST)
Received: by mail-pl1-f181.google.com with SMTP id b5so8846124plr.4
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 14:46:57 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:in-reply-to:references
         :sender:precedence:list-id;
        bh=1QjE/Bp3aI64lxVTD71FpUoUpAUSLof7mUXmEUl+JVk=;
        b=lWNBwe3kdd8I7uJ+PqWGv62sEtxxwRCxqN9+6cB/sugfasPy36/4RAKITA6D8qd1F0
         6wGrbvFf88oHYoSJI8czRFVxVSfQuUUVWwFrdfxa5Nk6IllZDrs1kboyunxuXug0qPLQ
         V1Txbq5Z4sV1ipcb55h5dxvCTwB6v1okHoheCxuAJuGxKo3hqdExWOT5Hc+zNzDyDJT3
         Pwq1BSsSg8hspRegYngh7hlUGmrqqtFfvRU3owUcS+7cvlOUbymZllGgeHzAzQ1YYTMx
         0sxpu4PJFgwhz6kY8uP7eWXJad/zgSYdEjjOwaXqFNrCK1XCHG5wOZU3n8d8InpKxvhp
         yr7g==
X-Gm-Message-State: AGRZ1gL2WhHpN5eZQyfiCmSmFWTgGrMRUy/qBEfFQ5Q98K2Qz1PYRhKj
	4a7oaeyTy8tXKeEVQ2FFktBnOyx8UDm0m9GL6Lppa/UwB3OFCiM=
X-Received: by 2002:a17:902:6b4b:: with SMTP id g11-v6mr24296311plt.213.1542667616822;
        Mon, 19 Nov 2018 14:46:56 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3281403pju;
        Mon, 19 Nov 2018 14:46:56 -0800 (PST)
X-Google-Smtp-Source: AFSGD/XYYbPOLdNhjGY5NTMsnQVYlslE9oYoOqg+SUEG5hUKK6LLt3u/ueM9CS9/BFtZ0nQAwZ8B
X-Received: by 2002:a17:902:3064:: with SMTP id u91mr10474853plb.325.1542667616193;
        Mon, 19 Nov 2018 14:46:56 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542667616; cv=none;
        d=google.com; s=arc-20160816;
        b=innBD03lqZ5U6T568dpX0lnBLMyj4grAorgchPeXYiia6yTlGF3WMRlUep6ViJxbq2
         +VhfJkd+5GNabWb7R6qaghy9+LoZUknRvl3KOQIJkQ6Q9HexNocsmy+m6nzkj7Loy4z2
         ePoYKg36jSy1q4pBmcrz21l9lPy2sTAcSyjbZpGmyuWNi0a25mmidnkyYqbauQrpiXHx
         KNuJGNPkkoD603MJ7lvr4itL+4ollDSGWzIXWgnAbR5ubcvMU0eMpOiVgst8SDxEd2zS
         ROkc8x1CjeQyOuKchy9oONDY/CGwsJur6xwd16gfMa6aBdbE41egirxXDgCSHP+MbW75
         voqg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:references
         :in-reply-to:message-id:date:subject:cc:to:from:dkim-signature;
        bh=1QjE/Bp3aI64lxVTD71FpUoUpAUSLof7mUXmEUl+JVk=;
        b=dV8er54PFuZG5VbH8+Pw43sieNGTMTrZXd3EpGMzKAUEQ/VemyGDh5a2z//aYCUkGb
         PSIVozK9YMmmmUGKu4vF0+UVy0zIa0GylXAgXVZUfbVHNuzNoJf9Fh4PlGWNxeCzsERi
         wVq5mKndIs+A5kITowrFSBYYyiyl82P5Tkr3y7ApOnRtXsCGj1lumiaC4+iZhTOVZdN6
         VPVbVLlpsqgHFs+8I0zXu2d3jKWtV4nvqs5YcPcHA4CCeqoLuiI2U8DHk4BmLOmagZfl
         q1Dh0ObsZltrd48ALliVrmi+NVNsQ5ncdebzr42Q8JeX4+KHLyALLgTlkzqBLJSkuE/5
         WYSA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="iLPB/Jvq";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z10si26359621pfm.37.2018.11.19.14.46.41;
        Mon, 19 Nov 2018 14:46:56 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731856AbeKTJLm (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 04:11:42 -0500
Received: from mail.kernel.org ([198.145.29.99]:44840 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731725AbeKTJLl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 04:11:41 -0500
Received: from localhost (c-71-205-112-160.hsd1.co.comcast.net [71.205.112.160])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id A45052148E;
        Mon, 19 Nov 2018 22:45:47 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542667547;
        bh=Z/QmCvuEDR0yIFKfuIsoKI7xQ7oBVS02ijKpwVL9eqo=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:In-Reply-To:
         References:From;
        b=iLPB/Jvqapnf5A4a0F6wQe0m4s1OaLC++EM+5zFFfgNi0z69ze9/yHqnIXVTO/bwK
         AeEZt0110XnXR59XV73z3PgJeXmUf0u+GPmkKMyNahn63kFPMIDsERikoZ5uWQgCWx
         vLQ0DjdxuqzAjfh3jzhbfztfI8Z25k+54zKYzt8U=
From: Andy Lutomirski <luto@kernel.org>
To: x86@kernel.org
Cc: LKML <linux-kernel@vger.kernel.org>,
        Yu-cheng Yu <yu-cheng.yu@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Borislav Petkov <bp@alien8.de>,
        Andy Lutomirski <luto@kernel.org>
Subject: [PATCH 07/13] x86/fault: Make error_code sanitization more robust
Date: Mon, 19 Nov 2018 14:45:31 -0800
Message-Id: <b31159bd55bd0c4fa061a20dfd6c429c094bebaa.1542667307.git.luto@kernel.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <cover.1542667307.git.luto@kernel.org>
References: <cover.1542667307.git.luto@kernel.org>
In-Reply-To: <cover.1542667307.git.luto@kernel.org>
References: <cover.1542667307.git.luto@kernel.org>
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3HkphPfNblqJaAA--.4793S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw18ur43uFyUXFW8Gw1Utrb_yoW5CFy7pa
	s8Cas2krZ7Jwn3u395X34UX34FkFWkXa1DKr17K3WSyw15Xa1Svry093W8Xr13Aryvg3yU
	tFWYv345Grs8Jr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUU9Yb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvY0x0EwI
	xGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE
	2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcV
	C2z280aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij
	64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr
	0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY
	17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCT
	nIWIevJa73UjIFyTuYvjxUfID7UUUUU

The error code in a page fault on a kernel address indicates
whether that address is mapped, which should not be revealed in a signal.
The normal code path for a page fault on a kernel address sanitizes the bit,
but the paths for vsyscall emulation and SIGBUS do not.  Both are
harmless, but for subtle reasons.  SIGBUS is never sent for a kernel
address, and vsyscall emulation will never fault on a kernel address
per se because it will fail an access_ok() check instead.

Make the code more robust by adding a helper that sets the relevant
fields and sanitizing the error code in the helper.  This also
cleans up the code -- we had three copies of roughly the same thing.

Signed-off-by: Andy Lutomirski <luto@kernel.org>
---
 arch/x86/mm/fault.c | 30 +++++++++++++++++++++---------
 1 file changed, 21 insertions(+), 9 deletions(-)

diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index bd89b6f83aa2..fac931d89c23 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -631,6 +631,24 @@ pgtable_bad(struct pt_regs *regs, unsigned long error_code,
 	oops_end(flags, regs, sig);
 }
 
+static void set_signal_archinfo(unsigned long address,
+				unsigned long error_code)
+{
+	struct task_struct *tsk = current;
+
+	/*
+	 * To avoid leaking information about the kernel page
+	 * table layout, pretend that user-mode accesses to
+	 * kernel addresses are always protection faults.
+	 */
+	if (address >= TASK_SIZE_MAX)
+		error_code |= X86_PF_PROT;
+
+	tsk->thread.trap_nr = X86_TRAP_PF;
+	tsk->thread.error_code = error_code | X86_PF_USER;
+	tsk->thread.cr2 = address;
+}
+
 static noinline void
 no_context(struct pt_regs *regs, unsigned long error_code,
 	   unsigned long address, int signal, int si_code)
@@ -656,9 +674,7 @@ no_context(struct pt_regs *regs, unsigned long error_code,
 		 * faulting through the emulate_vsyscall() logic.
 		 */
 		if (current->thread.sig_on_uaccess_err && signal) {
-			tsk->thread.trap_nr = X86_TRAP_PF;
-			tsk->thread.error_code = error_code | X86_PF_USER;
-			tsk->thread.cr2 = address;
+			set_signal_archinfo(address, error_code);
 
 			/* XXX: hwpoison faults will set the wrong code. */
 			force_sig_fault(signal, si_code, (void __user *)address,
@@ -821,9 +837,7 @@ __bad_area_nosemaphore(struct pt_regs *regs, unsigned long error_code,
 		if (likely(show_unhandled_signals))
 			show_signal_msg(regs, error_code, address, tsk);
 
-		tsk->thread.cr2		= address;
-		tsk->thread.error_code	= error_code;
-		tsk->thread.trap_nr	= X86_TRAP_PF;
+		set_signal_archinfo(address, error_code);
 
 		if (si_code == SEGV_PKUERR)
 			force_sig_pkuerr((void __user *)address, pkey);
@@ -937,9 +951,7 @@ do_sigbus(struct pt_regs *regs, unsigned long error_code, unsigned long address,
 	if (is_prefetch(regs, error_code, address))
 		return;
 
-	tsk->thread.cr2		= address;
-	tsk->thread.error_code	= error_code;
-	tsk->thread.trap_nr	= X86_TRAP_PF;
+	set_signal_archinfo(address, error_code);
 
 #ifdef CONFIG_MEMORY_FAILURE
 	if (fault & (VM_FAULT_HWPOISON|VM_FAULT_HWPOISON_LARGE)) {
-- 
2.17.2
