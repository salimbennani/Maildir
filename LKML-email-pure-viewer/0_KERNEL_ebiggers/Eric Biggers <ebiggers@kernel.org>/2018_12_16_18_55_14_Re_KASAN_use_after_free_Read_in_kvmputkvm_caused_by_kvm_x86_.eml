Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 08:32:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E4D4F5805CF;
	Sun, 16 Dec 2018 10:55:22 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga002-1.jf.intel.com with ESMTP; 16 Dec 2018 10:55:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASxazDBIkCsiLSnT6pdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/r+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvdxeb7Tfc4BRWpZQMleSzBBDI27?=
 =?us-ascii?q?b4sKFeUBPOBYpJT5q1YBqRayAA+hD/7txDBVnH/7xaM03eQ/Hw/b3wIgEd0Bv2?=
 =?us-ascii?q?jJo9v6NqgdX/u1zLHKwDjYc/Nb2i3w5JTUfh07vP2BW697f8rLyUkoEgPIllqe?=
 =?us-ascii?q?qZbkPzyJy+8Armmb7+VvVe2xkW4nsBx6rz+xycg3i4nJiY0VxU7e9SVi24s1Js?=
 =?us-ascii?q?O3SFR9YdG6FJtcrSaaN5F5Qs47RWxjpSg0yroDuZGhfSgKzowqyATHa/yfaIiI?=
 =?us-ascii?q?+hXjVPqLLThkg3JlfbSyjAux/0i40uDwSNW43VJQoiZYnNTAqGoB2wHQ58SbUP?=
 =?us-ascii?q?dw/0Ws1S6R2w3c8O1IP045mbDGJ5Mu3LI8jJkevELeFSHsgkr2lrWZdkA89+io?=
 =?us-ascii?q?9evnZrLmq4eCN497lA7+KL4ims+hDuQiNAgBQWyb9f671L358k31WLRKjvsona?=
 =?us-ascii?q?nFqJ3WO9gXq6qjDwNI3Isv9QyzAyql3dgEh3UKLVBIdAqCj4fzOlHOJP74De24?=
 =?us-ascii?q?g1SpiDprw/HGPrv8ApTCN3TDk6nufax760FCzAo/1Ndf5pxSCr4fOvL+QVHxtN?=
 =?us-ascii?q?PGAR8jKQC0wPjoCM971owAXWKDGKiZMLndsVOQ/OIgP/GMZJMJuDb6M/Ul4//u?=
 =?us-ascii?q?jXwnllMHcqipwIAaaHS5HvRgPkWYbmDggtYHEWcWoAU+SPbmh0GFUT5Wf3yyRb?=
 =?us-ascii?q?4z5iknCIK6CofOXoCtj6aA3CenBJJWYXpKClCREXjycYWEVOwBaCaTIs9njzwF?=
 =?us-ascii?q?WqKtS44n1RGyqgD6z6BrIfbT+i0drZjjzsR65/XPlREu8jx5F8ad02aTQG1unW?=
 =?us-ascii?q?MIQDk23KZ4oUFmzleD0K54g+FXFNBJ5vNJVBs6OoDYz+BgF9/yXQfBdM+TSFm6?=
 =?us-ascii?q?WtWmHS0xTtUpztAUeEZ9G9KijhPZ0yqwGbAVlaeGBJg18qLawnjwKNxxy3fA1K?=
 =?us-ascii?q?k9kVYmRtFDOnGhhq567wLTHZLGk12Fl6a2cqQRxC3N+32FzWaUuEFYURR/UaPK?=
 =?us-ascii?q?XX0EYkvWrNL55l7NTrO0CLQnNBdBxtCGKqdQdtLpilBGTu/5ONvCe2Kxh3uwBR?=
 =?us-ascii?q?GQy7yRdoXqZXsS0D/dCEcelQAT5miJNQ45CieloGLeCThuGEnrY0Pt9+l+tXy6?=
 =?us-ascii?q?QlU1zwGMc01uyb619gQJivybTvMZxqgEtzs5qzVoAFa92MrbBMeaqAp/YqpQe9?=
 =?us-ascii?q?M9701B1WLCqQN9OIetL6Rjhl4YbgR2sFni1xRxCoVcj8cqqGkmwxZ1KaKdyFlB?=
 =?us-ascii?q?bS+X3YjsOr3LLWn/5Ayva6/T2lHZzNaW+qcO5O4kq1n5uwGpDE4i83Rh09layH?=
 =?us-ascii?q?ac4pTKDAwPUZP+SEo39h56p63EbSk5/Y/byXpsMaysuD/Yx90pHPclygqnf9pH?=
 =?us-ascii?q?KqyEEBH9EsIECMmuMuAlgEWpYQ8eM+BU9640ON2meuCC2K6qOuZggT2ngX5G4I?=
 =?us-ascii?q?B7zkKD6S58RvTU0JYCxvGSxhGHWCvkjFe9rsD3nphJZDEPHmal1SfoHo9QZq1o?=
 =?us-ascii?q?coYNBmejOMm3xtR4h57wVH9U7l+jB1Ua2MC3fRqedUDy3QpV1U4Pu3yohTO4zy?=
 =?us-ascii?q?BokzEutqefxi3OzPj4exodJ2FLQ3NujVHyLoiujtAWRVSnYBItlBS4+0n63a9b?=
 =?us-ascii?q?pKJkImnXQEdIeTX2Lm54XquxsLqCf9BA6JcyvSpLV+S8ZEiQSqThrBsCzyPjA2?=
 =?us-ascii?q?xeySg7djGroJn4nwZ2iHmALHZ1t3fZfcBwxRHC5N3TX/JR3zwGRDVmhjnTHFSz?=
 =?us-ascii?q?I96p/dCMnZfZru++T36hVoFUcSTzz4OPrjG75W5pAR24hfyzgcfoEQs50S/60d?=
 =?us-ascii?q?llSyPIoQ34Yonq0aS6LO1mclNpBF/698p1BIV+npEsi5EX3HgQno+V8mYfkWfv?=
 =?us-ascii?q?LdVb3rrzbXoXSj4M2dLV4gnl2Et4I3KNxoL5UGidw8R7a9m7ZGMWxjwy78RQBK?=
 =?us-ascii?q?iI67xEmDN/okCkogLJffh9gjAdxOMt6HEAguEFogotzjiHDbAUEklVJijslxWO?=
 =?us-ascii?q?79Cjo6Rbfmevcb6s1EVgmdCtFq2NogZZWHzhYJctATdw7tljMFLLyHDz74DkeN?=
 =?us-ascii?q?rKYt4JuBybjQzAj/RLJ5IrjfUFmzBnOW3msH0hyu47iwFu3J6gsIiGLWVt4Ly2?=
 =?us-ascii?q?AhpCOjLpYMMT/ynnjbxCkcaOw4CvApJhFy0XXJvvSPKkCjMTuu7hNwaTCz08sX?=
 =?us-ascii?q?abFKHbHQ+e7kdmsn3OH4qqN3GROHkW09FiSAOBK0xYhQAeRC86kYIhFgC22Mzh?=
 =?us-ascii?q?d1906SsL6V7/rhtM1/hkNx3iUmrEoAeoazE0SIWQLRZM7wFC4VvVPtKa7u5pAy?=
 =?us-ascii?q?5Y+ZihphSXKmOHfwRIEX0JWkucClDhJLau4MfP8/OCCuqiNffOYqiOqe9DV/eO?=
 =?us-ascii?q?352vyZBr/zKNNsWJI3ljAOc32ktFXXBlBcvZny8DRDAQlyLId8Sbvguz+jVrrs?=
 =?us-ascii?q?Cj9/TmQALu5YySC7tLLNVg4Ra2jb2YN+6XgiZ5Ji1V1pcNxX/O1bge00QeiyBo?=
 =?us-ascii?q?dzmxD7sAsTTBQ77Xmq9SFxQbcT98NNNU76Ig2QlAIc7bhc301r57jf41Ck1JVV?=
 =?us-ascii?q?/7msGuaswFPXu9NE7cBEuQMLSGJDvLw9z4YK+mSL1QivlUuAO0uTqBD0DjOTGD?=
 =?us-ascii?q?nSHzVx+zKeFMkD2bPBtGtY6nbxZiEnLjQ8zmaxGhNN93jCY7wbk1hnPMKG4dPi?=
 =?us-ascii?q?Jwc0JLrr2M8yxYhu9zFHBG7npgNeOEgTqW7/HEKpYKtvtmGjh0l+Nf4Hgg17RZ?=
 =?us-ascii?q?9j1LRPxrlyvUtdNup1Cmku+SyjtoShZOqzBLhJ6VskVmI6nW6p5AWXPc9hIX8W?=
 =?us-ascii?q?qQEwgKp8diCtD3u6Ff0N7PlKfyKDdE693V/MscCNLSKMKIK3chNRvpGDjJDAoK?=
 =?us-ascii?q?VzKrNGffh1BDn/GW7HGasp86qp2/0KYJH4dWUlN9NvodQhB9EdoNZpd+WWkMg6?=
 =?us-ascii?q?KWysUP4Dy1qk+VDP1TuZTAHtiVB+fuLjfR2aFOYB0awLX5BZ4eOo3yxwppbVws?=
 =?us-ascii?q?z6rQHE+FcMpMqWVLbwA7rV9WuCxzRGw81E//cSuu7WUVGPrymQQ53FgtKd8x/S?=
 =?us-ascii?q?vhtg9kbmHBozE9xQxswNg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAB/nhZch0O0hNFjEwEBBAEBAQEBA?=
 =?us-ascii?q?QEBAQEBAQcBAQEBAQGBUQQBAQEBAQsBgVqBD4ECJ4wVX40jFJdEgXMUGAsIAYd?=
 =?us-ascii?q?HIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JIJjAQIDAQIkCwENAQE3AQUJA?=
 =?us-ascii?q?QEKFAQJJQMMBUkBEgWDHQGCAAUKpBCBbDOCdgEBBYcXAwWLIoEcF4FAP4ERgxK?=
 =?us-ascii?q?DHgQYhQCCJpBNkE4Jhw2KQiOBXYUcBYMshygsiERMhHaLMoFGgg4zGggoCDuCb?=
 =?us-ascii?q?IIbDBcSbQEJgkGFFIVgHzIBgQMBAQGNagEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAB/nhZch0O0hNFjEwEBBAEBAQEBAQEBAQEBAQcBAQE?=
 =?us-ascii?q?BAQGBUQQBAQEBAQsBgVqBD4ECJ4wVX40jFJdEgXMUGAsIAYdHIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCgsJCCkjDII2JIJjAQIDAQIkCwENAQE3AQUJAQEKFAQJJQMMBUk?=
 =?us-ascii?q?BEgWDHQGCAAUKpBCBbDOCdgEBBYcXAwWLIoEcF4FAP4ERgxKDHgQYhQCCJpBNk?=
 =?us-ascii?q?E4Jhw2KQiOBXYUcBYMshygsiERMhHaLMoFGgg4zGggoCDuCbIIbDBcSbQEJgkG?=
 =?us-ascii?q?FFIVgHzIBgQMBAQGNagEB?=
X-IronPort-AV: E=Sophos;i="5.56,361,1539673200"; 
   d="scan'208";a="57695520"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 16 Dec 2018 10:55:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730763AbeLPSzS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 13:55:18 -0500
Received: from mail.kernel.org ([198.145.29.99]:46058 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730097AbeLPSzR (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 13:55:17 -0500
Received: from sol.localdomain (c-24-23-142-8.hsd1.ca.comcast.net [24.23.142.8])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 15E772086C;
        Sun, 16 Dec 2018 18:55:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544986516;
        bh=vGQECqz+y7APmcjDOQArWa9o48cUPml+P6H5vTT38gA=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=Ip9EJ2xVPxsTjpnn8O9YOnG2axRoDFcY4eURFOjOQ4XM6XWKXlYYhY0NYJnv85EzK
         RD563pJTCTlTYqqm0WIQHf6b6v/m7VxIAqB+A7rwWvLorgQdWuTW6mEjN1dGW0HTYD
         NVkAGESHUPf4zrWXiD+Ag9prIOTO23yp1SgFdQT4=
Date: Sun, 16 Dec 2018 10:55:14 -0800
From: Eric Biggers <ebiggers@kernel.org>
To: Peng Hao <peng.hao2@zte.com.cn>,
        Paolo Bonzini <pbonzini@redhat.com>
Cc: syzbot <syzbot+f87f60bb6f13f39b54e3@syzkaller.appspotmail.com>,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org,
        rkrcmar@redhat.com, syzkaller-bugs@googlegroups.com
Subject: Re: KASAN: use-after-free Read in kvm_put_kvm (caused by: "kvm/x86:
 add coalesced pio support")
Message-ID: <20181216185513.GA691@sol.localdomain>
References: <000000000000bc23740578abe82c@google.com>
 <3ad5acd8-5c73-1d82-aea5-426e598b15ed@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <3ad5acd8-5c73-1d82-aea5-426e598b15ed@redhat.com>
User-Agent: Mutt/1.11.0 (2018-11-25)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Peng and Paolo,

On Sun, Oct 21, 2018 at 12:01:55PM +0200, Paolo Bonzini wrote:
> On 20/10/2018 18:57, syzbot wrote:
> > Hello,
> > 
> > syzbot found the following crash on:
> > 
> > HEAD commit:    8c60c36d0b8c Add linux-next specific files for 20181019
> > git tree:       linux-next
> > console output: https://syzkaller.appspot.com/x/log.txt?x=12d808b5400000
> > kernel config:  https://syzkaller.appspot.com/x/.config?x=8b6d7c4c81535e89
> > dashboard link:
> > https://syzkaller.appspot.com/bug?extid=f87f60bb6f13f39b54e3
> > compiler:       gcc (GCC) 8.0.1 20180413 (experimental)
> > syz repro:      https://syzkaller.appspot.com/x/repro.syz?x=17cf2f5e400000
> > C reproducer:   https://syzkaller.appspot.com/x/repro.c?x=1036dcce400000
> > 
> > IMPORTANT: if you fix the bug, please add the following tag to the commit:
> > Reported-by: syzbot+f87f60bb6f13f39b54e3@syzkaller.appspotmail.com
> 
> Tentative (untested) patch:
> 
> diff --git a/virt/kvm/coalesced_mmio.c b/virt/kvm/coalesced_mmio.c
> index 3710342cf6ad..dc76cc8d24fd 100644
> --- a/virt/kvm/coalesced_mmio.c
> +++ b/virt/kvm/coalesced_mmio.c
> @@ -90,6 +90,7 @@ static int coalesced_mmio_write(struct kvm_vcpu *vcpu,
>  	return 0;
>  }
> 
> +/* called with kvm->slots_lock held */
>  static void coalesced_mmio_destructor(struct kvm_io_device *this)
>  {
>  	struct kvm_coalesced_mmio_dev *dev = to_mmio(this);
> diff --git a/virt/kvm/eventfd.c b/virt/kvm/eventfd.c
> index b20b751286fc..001e1ef18c8c 100644
> --- a/virt/kvm/eventfd.c
> +++ b/virt/kvm/eventfd.c
> @@ -741,8 +741,8 @@ ioeventfd_write(struct kvm_vcpu *vcpu, struct
> kvm_io_device *this, gpa_t addr,
>  }
> 
>  /*
> - * This function is called as KVM is completely shutting down.  We do not
> - * need to worry about locking just nuke anything we have as quickly as
> possible
> + * This function is called as KVM is completely shutting down, so there
> + * are no RCU readers anymore. Called with kvm->slots_lock held.
>   */
>  static void
>  ioeventfd_destructor(struct kvm_io_device *this)
> diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
> index aff1242b7af7..e6f2ae6fedcd 100644
> --- a/virt/kvm/kvm_main.c
> +++ b/virt/kvm/kvm_main.c
> @@ -783,6 +783,7 @@ static void kvm_destroy_vm(struct kvm *kvm)
>  	list_del(&kvm->vm_list);
>  	spin_unlock(&kvm_lock);
>  	kvm_free_irq_routing(kvm);
> +	mutex_lock(&kvm->slots_lock);
>  	for (i = 0; i < KVM_NR_BUSES; i++) {
>  		struct kvm_io_bus *bus = kvm_get_bus(kvm, i);
> 
> @@ -790,6 +791,7 @@ static void kvm_destroy_vm(struct kvm *kvm)
>  			kvm_io_bus_destroy(bus);
>  		kvm->buses[i] = NULL;
>  	}
> +	mutex_unlock(&kvm->slots_lock);
>  	kvm_coalesced_mmio_free(kvm);
>  #ifdef KVM_DIRTY_LOG_PAGE_OFFSET
>  	if (kvm->dirty_ring_size)
> 

This is still happening.  Paolo, I don't see how your patch matches this bug, as
it has a single threaded reproducer.  I simplified it to:

	#include <fcntl.h>
	#include <linux/kvm.h>
	#include <sys/ioctl.h>

	int main(void)
	{
		int kvm, vm;
		struct kvm_coalesced_mmio_zone zone = { 0 };

		kvm = open("/dev/kvm", O_RDWR);

		vm = ioctl(kvm, KVM_CREATE_VM, 0);

		ioctl(vm, KVM_REGISTER_COALESCED_MMIO, &zone);

		zone.pio = 1;
		ioctl(vm, KVM_UNREGISTER_COALESCED_MMIO, &zone);
	}

The bug is in this commit:

	commit 0804c849f1df0992d39a37c4fc259f7f8b16f385
	Author: Peng Hao <peng.hao2@zte.com.cn>
	Date:   Sun Oct 14 07:09:55 2018 +0800

	    kvm/x86 : add coalesced pio support

The problem is that if you register a kvm_coalesced_mmio_zone with '.pio = 0'
but then unregister it with '.pio = 1', KVM_UNREGISTER_COALESCED_MMIO will try
to unregister it from KVM_PIO_BUS rather than KVM_MMIO_BUS, which is a no-op,
but then it frees the kvm_coalesced_mmio_dev anyway.

Here's one possible fix but I don't know what was intended here.  Are you
supposed to pass in the same value of '.pio' when unregistering or is it
supposed to use the existing value?  Can one of you please point me to the
documentation for these ioctls?

diff --git a/virt/kvm/coalesced_mmio.c b/virt/kvm/coalesced_mmio.c
index 3710342cf6ad0..6855cce3e5287 100644
--- a/virt/kvm/coalesced_mmio.c
+++ b/virt/kvm/coalesced_mmio.c
@@ -175,10 +175,14 @@ int kvm_vm_ioctl_unregister_coalesced_mmio(struct kvm *kvm,
 {
 	struct kvm_coalesced_mmio_dev *dev, *tmp;
 
+	if (zone->pio != 1 && zone->pio != 0)
+		return -EINVAL;
+
 	mutex_lock(&kvm->slots_lock);
 
 	list_for_each_entry_safe(dev, tmp, &kvm->coalesced_zones, list)
-		if (coalesced_mmio_in_range(dev, zone->addr, zone->size)) {
+		if (zone->pio == dev->zone.pio &&
+		    coalesced_mmio_in_range(dev, zone->addr, zone->size)) {
 			kvm_io_bus_unregister_dev(kvm,
 				zone->pio ? KVM_PIO_BUS : KVM_MMIO_BUS, &dev->dev);
 			kvm_iodevice_destructor(&dev->dev);
