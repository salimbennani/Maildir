Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 15:31:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5E24558037D;
	Thu, 22 Nov 2018 22:30:20 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 22:30:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9qqlfRQPDuIE7sjrcgSLsYJPj9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YReHt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAeQCM+hfrYb9qVQBoxSlBQm0Bu7i0SNEi3zs0KEmyektDR3K0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8VX+C0yqnH0TXDYOlQ2Tzg7YbIcxUhquyLULJ1cMrRz1UgFwPfgVWW?=
 =?us-ascii?q?soHlPC2a1v4Ls2eF6+psT+Wvi3QoqwxopDWk28kiio7Mho0Py1DE8z10wIUrKt?=
 =?us-ascii?q?2iTk50f9qkHIFXtyGAOIt6WsAiQ3tvuCkgyr0Ko4K0fC8PyJkh2hXRaOSHfpCW?=
 =?us-ascii?q?7h7/UOudOyp0iXx7dL6lmhq/8lSsxvf9W8S2yFpGsCVInsXRun0I2Rzc8NSLRu?=
 =?us-ascii?q?d480i83DuDywXe5+VHLEA6iKbWLp0szaU+m5UOtEnPAyH2lUv0gaKTeEgr5Oul?=
 =?us-ascii?q?5uL6abv8vJCcLZV7igTmP6QuhMO/BeM4PxAQX2iU5+u8zqfv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIrdJcQBqa61Gw5V0oA95BajFzqqzsgUkH0dIF5Ydh+LkZLlN0zNLfzkF/uy?=
 =?us-ascii?q?glahnC9ux//cP73hBpvNLmLEkLfkZbt9709cyAwuzdFQ/p5UCa8OIOj1WkDvsN?=
 =?us-ascii?q?zUFxg5MgKyw+n5EtVwzZ0eWW2RDa+DKq/SskGH5vgpI+aSYI8ZojH9K+Iq5/L2?=
 =?us-ascii?q?l382hUcdfbW13ZsQcH24GvVmI0aHbnb2jdYBDHwHvg4/TOzslV2DXiRfZ3e0X6?=
 =?us-ascii?q?Ig+D47DJiqApvERoComLaBxju0HoVKZmBaDVCBCXfoeJ+FW/cQci2SJdVtkjwZ?=
 =?us-ascii?q?Vbe7TY8h2gqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuU59ylCd3qRigPxYEtpT5/VOUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmrORH5w08qXc33vrK8Zn0XnG1r?=
 =?us-ascii?q?Isj10nQstJKG2nibRz9wnVB47VjUqZk7ymergb3C7I7G2D13aBvFlEUA5sVqXI?=
 =?us-ascii?q?RXMfaVHQrdjj4kPCTqWhCbIoMgZazc6CK61KasDmjFlcRffjPsjebHy1m2uqGR?=
 =?us-ascii?q?mIwbaMZpLwe2oBxCXdFFQEkwcL8HmbLwc+GDmur3jeDDN0E1LveF3j8e95pHO/?=
 =?us-ascii?q?TU80ygWKYlZl17q0/B4VmPOdR+kS3rICpCcutTF0EEyh0NLRDtqKvxBhc7lEYd?=
 =?us-ascii?q?Mh/FdH0nrUuBFnMZy+Ma9unF4efB5xv0P1yRp3DJ5NkcwrrHMs0QpzJriU0FJH?=
 =?us-ascii?q?dzOEw5/wPqfbJXX1/BCqc6TWwE3R0M6K+qcT7/Q1s0njvACsFkol73Vn09lU32?=
 =?us-ascii?q?GA5pnQCwoSS5bxUkcx9xh1vLzaZig954XJ1XxjK6W0sznC2843C+sh0BqvY9Bf?=
 =?us-ascii?q?MKacHg/oD8IaH9SuKPAtm1WxdB0EOP5d9aEqMMKmbfeJw7OrM/t6kzKgjmRH55?=
 =?us-ascii?q?5931mI9yp9TO7IwpkEz+uZ3guBSzfzklOhvtrrloBDYDEYBnC/xjT8BI5Neq1y?=
 =?us-ascii?q?ep4GCGezI8Gt2tpynZ/sW35C+16lCFMLw8upeRuUb1zg0gxcz0UXoXq7mSSmyz?=
 =?us-ascii?q?x4iS0mrq2a3CbW2eTtaAIHOnJXRGlllVrsO4m0gMwAU0iycgcpkwGp5UDkyKhB?=
 =?us-ascii?q?paRzNnXcTl1MfyfrMW5iSKywtryZbs5L6ZMotzhXUeumbVCbTL79vwUV0yf5E2?=
 =?us-ascii?q?RCwzA7cimguo/lkBxilGKdMHFzoWLZeMFx3xve5MbQReVM3joAXyR4jTjXBl6h?=
 =?us-ascii?q?P9im59mUlpHDsvygWGKlTJFcbS7rzYaYviuh+WJqGQG/n+y0mtD/Ewg1yzX719?=
 =?us-ascii?q?ppVSXPthr8eZPk16e5MeJmeElnGln85tF+GoF/lIswmZ4R1WIbhpWT4XoIj2Pz?=
 =?us-ascii?q?Pc9H1qL5aXoHXSQLzMLN4Aj5xE1jKWqExoLjWXWa2MdhZdi6YmUN1yI57sBKDr?=
 =?us-ascii?q?qU7bNekSt0pFq4sRzeYfxnkjgBzvsu7WYQg/sVtwo10iWdHrcSEFFbPSP2lhSE?=
 =?us-ascii?q?9dC+rLhNa2apfri9z05+ndGnDLGfrQBQQnf5epE+HSBu6sVzKk7D0Hr26ov8Yt?=
 =?us-ascii?q?nfccoTtgGIkxfHl+VVLZMxlvkQiiZ9N2Pyo2Yly/Ilghx0xp61opKHK2p28aK9?=
 =?us-ascii?q?Ax5YMCD1ZswJ9jHsi6ZegtiZ34S1Epp9HTULWYPiTei0HzIKqfTnKwGOHSUgqn?=
 =?us-ascii?q?ecHLrTBw6e511gr3LSCJCrLHCXKWIdzdVjQhmdOUNejBoVXDU8gp42CASqyNb9?=
 =?us-ascii?q?f0d+4zAb/kT4pQdUyuJ0Kxn/VX/SqxyyZTczTJifMQBa7gVf50rONcye7+RzHz?=
 =?us-ascii?q?xX/5G7rQyNLHCbaBpMDW0TRkOEAFXjNKG05dbc6+iYGva+L/zWbLWMs+NeUumH?=
 =?us-ascii?q?xYm13ot65TqMNdiPPnp/D/09wEVDRmt0G8DYmzUJViwWmDjBb8+dpBeg5CJ3qt?=
 =?us-ascii?q?qz/+jsWALq/YGPEaddMc1z+xCqhqeOL+6RhCFkKTZBy5MD33nIxKIE3F4VjSFu?=
 =?us-ascii?q?eCKgEbABtS7LUaLRlbVbDx8dayNvKsRI67gw0RVKOc7ektn1zKJ3juYpC1dZUl?=
 =?us-ascii?q?zsgsGpatILI2G+N1PHBVyHNLecJT3MzMH4f7m8SaBLjOhPsx2wuDCbE1LsPziZ?=
 =?us-ascii?q?ljnpUQyvPv9IjC2BIBNev4S9eA53CWf/VNLmdgG7MNhvgDIs3L07nWnKOnAcMD?=
 =?us-ascii?q?Rmd0NNr6ad7SdZgvV5BmxA4WBpLeiCmyaF8ebYLowavudsAiRxj+ha+mg1y6NJ?=
 =?us-ascii?q?7CFYQ/x4gDfSrt9ro128juaD0CZoUBpQpTZNn4+LuURiOaPE9phPQ3rE/RQN7X?=
 =?us-ascii?q?mOBBQOvddqFtrvu6VIwNjViK3zMCtC887T/cYEB8nbMsSHMH8gMRrvADHVDQsF?=
 =?us-ascii?q?QiStNWHQnEFdlPCS9nuIrpk1sJTsmZwOSqNFW1wxDP8VFkNlHNlRaKtwCyg4mL?=
 =?us-ascii?q?SfgeYW6nek6hrcXsNXutbATP3BL+/oLWO8jL9PZxIOiZD5KMxHM4z90ExrbHF5?=
 =?us-ascii?q?kZ7MFk6WWspC9H4yJjQoqVlApSAtBlY43FjoP0b0uCce?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAACnfdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBOYECJ4wRi36CIWaIEYUsiQSBJANMEgEBGA0GAYhSIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkCwENATgBAwIJAQEFSwMeE?=
 =?us-ascii?q?wEFARwZBYMcAYFpAxUBBAqbWDyMCTOCdwWBMQGDRA2CEQIGEodMgw+BHBeBf4E?=
 =?us-ascii?q?Rgl2DC0UBhz0CiSOBboR+j0UuCYIghFyHCIMgCxiCJocrhzYBjUOBCok8AgQCB?=
 =?us-ascii?q?AUCBQ8hgSVsgSEzGggoCIJzAQEBMQmCEgwXEoM4hRSFTTEygQUBAYwiAQE?=
X-IPAS-Result: =?us-ascii?q?A0AJAAACnfdbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BOYECJ4wRi36CIWaIEYUsiQSBJANMEgEBGA0GAYhSIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYgMDAQIkCwENATgBAwIJAQEFSwMeEwEFARwZBYMcAYF?=
 =?us-ascii?q?pAxUBBAqbWDyMCTOCdwWBMQGDRA2CEQIGEodMgw+BHBeBf4ERgl2DC0UBhz0Ci?=
 =?us-ascii?q?SOBboR+j0UuCYIghFyHCIMgCxiCJocrhzYBjUOBCok8AgQCBAUCBQ8hgSVsgSE?=
 =?us-ascii?q?zGggoCIJzAQEBMQmCEgwXEoM4hRSFTTEygQUBAYwiAQE?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="63651032"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 22 Nov 2018 22:30:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2502106AbeKWRNF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 12:13:05 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:44028 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729253AbeKWRNF (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 12:13:05 -0500
Received: by mail-pl1-f195.google.com with SMTP id gn14so10193433plb.10;
        Thu, 22 Nov 2018 22:30:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=0CVoFvhwe5+ovTk8gc8kR9h+VqWDSGR6ELmmpIWJRDM=;
        b=tN1Z00bzWFWQ2MxPEUNRc6gH41XYVkZE2/0ez3qwcHcdviOr3oCaRX6aKsVJaokhz4
         MR3RF0N5uUXrFkKS5lBfD5/ZU3aZGRBV5pagypamjXnetnF4GTNmKaprCbJo8rgRS2gN
         B/EJ5+1P24//fcFMwKOrDcSkRvvBCEsbf2a4HDuN2IAifeVzhlHqfJcNYjzWCcc1flGq
         sV3fA3Iz1aCfmZuVnE9Da7bKefHjx1ZGz2q15CMq6mEkxaYgk+2h1eeq3f8osZyPmP1c
         5/IPrZNdAm5bKlYBXwGjT2jjZvd/YOLsrIWTaXK0nflKWm7vt0p19+Q9ekXEKLrdCMhX
         SbSw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references:mime-version:content-transfer-encoding;
        bh=0CVoFvhwe5+ovTk8gc8kR9h+VqWDSGR6ELmmpIWJRDM=;
        b=cx8YCUCdM2HXu1DMt5ImiXXFkYSA+behtejV9Nkhejj/W2rft2zYuPrgFn/b4ToWmh
         KqTDfwJoVI9cFCgj8XEIBdTDctAvHSXofb1GolKOjJzewLk+7qqIGNHiVkYuIdkeFla7
         HuOAlL8sckTCZxvn9q/sOJ92rm5Fln3ptl5BwAsCJxq3eedN00pHrK32Ar+kCAHD+XbD
         dl1JSoKksejTZJ/iHzp4Bj8E9COaVHaRUkWVPzucBhmV4l+/33krQ2gRC0alHmrr1oSF
         ZglhsaQhGFH+tugKOfQ5AJKaCWhSLES9IC37Er11Og6iZKsF7xUsAbnD7I4tiVDwjPFc
         GNXA==
X-Gm-Message-State: AA+aEWYEwFvmv3FkD/K18WU7+uvc67tr1kZ61Yz9rIT8wQz+pzAS4wxJ
        PhiJZtKonOZteH4fF8hy9t9KDeCKTVg=
X-Google-Smtp-Source: AFSGD/UrVHWYMPlbVeVt6Kq9GlBEwKFkRvKd21X8j0Y2x6unqT1hixHGUvsrNvGCRatyl4bt6YHaTw==
X-Received: by 2002:a17:902:b01:: with SMTP id 1mr7027363plq.331.1542954614229;
        Thu, 22 Nov 2018 22:30:14 -0800 (PST)
Received: from bbox-2.seo.corp.google.com ([2401:fa00:d:0:98f1:8b3d:1f37:3e8])
        by smtp.gmail.com with ESMTPSA id y29sm68885808pga.59.2018.11.22.22.30.11
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 22:30:13 -0800 (PST)
From: Minchan Kim <minchan@kernel.org>
To: stable@vger.kernel.org
Cc: Andrew Morton <akpm@linux-foundation.org>, hare@suse.com,
        LKML <linux-kernel@vger.kernel.org>, sashal@kernel.org,
        Minchan Kim <minchan@kernel.org>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Howard Chen <howardsoc@google.com>
Subject: [PATCH] [PATCH for v4.4] zram: close udev startup race condition as default groups
Date: Fri, 23 Nov 2018 15:30:06 +0900
Message-Id: <20181123063006.228167-1-minchan@kernel.org>
X-Mailer: git-send-email 2.20.0.rc0.387.gc7a69e6b6c-goog
In-Reply-To: <20181115174504.GJ95254@sasha-vm>
References: <20181115174504.GJ95254@sasha-vm>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

commit fef912bf860e upstream.
commit 98af4d4df889 upstream.

I got a report from Howard Chen that he saw zram and sysfs race(ie,
zram block device file is created but sysfs for it isn't yet)
when he tried to create new zram devices via hotadd knob.

v4.20 kernel fixes it by [1, 2] but it's too large size to merge
into -stable so this patch fixes the problem by registering defualt
group by Greg KH's approach[3].

This patch should be applied to every stable tree [3.16+] currently
existing from kernel.org because the problem was introduced at 2.6.37
by [4].

[1] fef912bf860e, block: genhd: add 'groups' argument to device_add_disk
[2] 98af4d4df889, zram: register default groups with device_add_disk()
[3] http://kroah.com/log/blog/2013/06/26/how-to-create-a-sysfs-file-correctly/
[4] 33863c21e69e9, Staging: zram: Replace ioctls with sysfs interface

Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
Cc: Hannes Reinecke <hare@suse.com>
Tested-by: Howard Chen <howardsoc@google.com>
Signed-off-by: Minchan Kim <minchan@kernel.org>
---
 drivers/block/zram/zram_drv.c | 26 ++++++--------------------
 1 file changed, 6 insertions(+), 20 deletions(-)

diff --git a/drivers/block/zram/zram_drv.c b/drivers/block/zram/zram_drv.c
index 502406c9e6e1..616ee4f9c233 100644
--- a/drivers/block/zram/zram_drv.c
+++ b/drivers/block/zram/zram_drv.c
@@ -1184,6 +1184,11 @@ static struct attribute_group zram_disk_attr_group = {
 	.attrs = zram_disk_attrs,
 };
 
+static const struct attribute_group *zram_disk_attr_groups[] = {
+	&zram_disk_attr_group,
+	NULL,
+};
+
 /*
  * Allocate and initialize new zram device. the function returns
  * '>= 0' device_id upon success, and negative value otherwise.
@@ -1264,15 +1269,9 @@ static int zram_add(void)
 		zram->disk->queue->limits.discard_zeroes_data = 0;
 	queue_flag_set_unlocked(QUEUE_FLAG_DISCARD, zram->disk->queue);
 
+	disk_to_dev(zram->disk)->groups = zram_disk_attr_groups;
 	add_disk(zram->disk);
 
-	ret = sysfs_create_group(&disk_to_dev(zram->disk)->kobj,
-				&zram_disk_attr_group);
-	if (ret < 0) {
-		pr_err("Error creating sysfs group for device %d\n",
-				device_id);
-		goto out_free_disk;
-	}
 	strlcpy(zram->compressor, default_compressor, sizeof(zram->compressor));
 	zram->meta = NULL;
 	zram->max_comp_streams = 1;
@@ -1280,9 +1279,6 @@ static int zram_add(void)
 	pr_info("Added device: %s\n", zram->disk->disk_name);
 	return device_id;
 
-out_free_disk:
-	del_gendisk(zram->disk);
-	put_disk(zram->disk);
 out_free_queue:
 	blk_cleanup_queue(queue);
 out_free_idr:
@@ -1310,16 +1306,6 @@ static int zram_remove(struct zram *zram)
 	zram->claim = true;
 	mutex_unlock(&bdev->bd_mutex);
 
-	/*
-	 * Remove sysfs first, so no one will perform a disksize
-	 * store while we destroy the devices. This also helps during
-	 * hot_remove -- zram_reset_device() is the last holder of
-	 * ->init_lock, no later/concurrent disksize_store() or any
-	 * other sysfs handlers are possible.
-	 */
-	sysfs_remove_group(&disk_to_dev(zram->disk)->kobj,
-			&zram_disk_attr_group);
-
 	/* Make sure all the pending I/O are finished */
 	fsync_bdev(bdev);
 	zram_reset_device(zram);
-- 
2.20.0.rc0.387.gc7a69e6b6c-goog

