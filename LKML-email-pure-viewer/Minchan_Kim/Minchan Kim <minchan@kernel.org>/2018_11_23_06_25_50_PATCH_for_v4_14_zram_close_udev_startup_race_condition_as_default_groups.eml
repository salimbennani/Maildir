Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 15:31:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7A5DE58040F;
	Thu, 22 Nov 2018 22:27:01 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 22:27:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AACT61RNEOvDDp8ALkIcl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn4p8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCOgOPehXoIfyvFsOtRmzCBKwCO7s0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMq9v1NaESXvy1zKbSyzXIcvZY2Tb46IPVdR0hpPCMXbRsfsrR00YvERjIjlaO?=
 =?us-ascii?q?poz/OTOayOANv3Kc7+p6WuKikmgqoBx/rDiow8cjkIjJhoQNx1DH6yp52oA1Ks?=
 =?us-ascii?q?O8SEJhZt6kCpRQuzmZN4tsRcMtWWFotDwmxb0BvJ62ejUBxpc/xxPHdfCLb4yF?=
 =?us-ascii?q?7gj+WOufPzt0nm9pdbGjixqo8EWtyPXwWte73VpWsyZIl9fMuWoR2xDP78WIV/?=
 =?us-ascii?q?5w8luk1DuL1A3T5PxILEU3mKXAJZMu37s9mocdsUnNHCL7nUv7g7GVe0gi5+Om?=
 =?us-ascii?q?8f7oYq/8qZ+ZL4J0ih/xMqApmsGnH+Q4PRYBX3KB9eS/yrLj50v5T6tOjvEsla?=
 =?us-ascii?q?nZqp/aKdwapq6/HQBVzp4u5wijAzqiytgUgHcKIExfdB6ajIXlJ0vCLfH6APun?=
 =?us-ascii?q?hlSjijZrx/TIPr37BZXNK2DOkLPgfbZ79k5dxxM/zdNB6JJODLEOPvbzVlb2tN?=
 =?us-ascii?q?3WCB82LRa0zv35CNVyyIweQ3iDAqyHP6PIt1+H+OYvL/OLZI8PtzbxM+Il6OL2?=
 =?us-ascii?q?jX8lhV8derGk3Z8WaHC7APtqOUqYYWf3j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJ/JRpqxj7yZwCe7AppWa3hGCl+WEHfoa5+LW/AWZCKSP89uiDoE?=
 =?us-ascii?q?Vbe6Ro8l1BGushL6yrV9IurV/C0YqYzs1Nxv6+LPkhEy8CR+D96B3GGVU2F0gm?=
 =?us-ascii?q?QISic03KB4v0Nx0FSD0a9+g/xeEtxe/PdJUgY8NZ7BwO12EdHyWgTdftiXTFaq?=
 =?us-ascii?q?WMmpATY0Ttgp2d8Bf159G8m+jhDExyelGaQVl7yMBJw36K7cxWL+J8RmxnbC1a?=
 =?us-ascii?q?khiUQmQ8RVOW2ngK5/6xbcB4rTn0qFkKaqcLwW3DTR+2eb0WqOoEZYXRZzUarf?=
 =?us-ascii?q?W3ATfE/WrdXj6UPEQL+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEULjhoc/WiYOgQkBieuuWTeDCdwGlLpZE/s9ep+qHa/?=
 =?us-ascii?q?TkIvywGKbkth16e6+xIPhPycTe8T0awAuCs7tzp0G1O91crMC9WcvwphYLlcYd?=
 =?us-ascii?q?Ql7Vhaz23ZqRJyMoagL694gF4eaBp4v0X12hVzC4VAl9UqrXwwwApzL6KYzE1O?=
 =?us-ascii?q?dzeC0Z/sPb3XL3H4/AqzZK7OxlHezNGW978T6PQ5rlXjux2pFkoi8nl9z9lZyX?=
 =?us-ascii?q?yc5o/ODAoTV5LxXV069xx7p7Hcfyk86JnY1XxqMamorDDC38glC/ciyhalZ91f?=
 =?us-ascii?q?Kr+LFBfuE80GAMijMPYlm1y3YRMLIu9T9LQ4MNi7d/SbwqGrOuVgnDW4jWlc5I?=
 =?us-ascii?q?B900SM9zdzS+LS3pYFxe2Y0RWDVzvmkFihtcX3k5heZT4OBmq/1TTkBIlJa6xy?=
 =?us-ascii?q?YIYHE3uhL9e2x9V+nZHtXXFY+UWnB1MH3s+pZBWTY0b83Q1WyUQYv3inlTGkwD?=
 =?us-ascii?q?xzljEjtrCf0zDWw+T+aBoHPXZGRHNjjVjwO4e0lc0VXE+yYwgvihSl/0f6y7FH?=
 =?us-ascii?q?q6tlK2ncXFlHfzLxL2FkSaawsruCY8hS6JInqylXUeK8YUyERb75uRcVzyTjH2?=
 =?us-ascii?q?5GzjAhaz6qoon5nwB9iG+FLHdzrWDVeMFqyRfE+dzcQ+Vc3j4HRCl+lDnWCUKw?=
 =?us-ascii?q?P9iv/dWIiZjDtvqyWH6mVp1WaSPr15+PtDOn5W12Bh2yh/Kzlcf9EQg50i/70M?=
 =?us-ascii?q?NmVT7Soxb/YYnr1qK6PvxhfkRzAF/86sx6Gpxxk4cqhZEQ32QaiYuR/XYdjWjz?=
 =?us-ascii?q?NtBb07rkbHURXT4L38LV4A/91UxjNH2JwJj1VnecwstnfNS6ZmIW2iQg78FFEq?=
 =?us-ascii?q?uU7bpEnTdrrVq8tw7eff99njIFw/s09HEam/0JuBYqziiFAbAdB0hYMTbslxSV?=
 =?us-ascii?q?9d++qqpXaX2rcbix0kp+gN+gAKuDogFaRHb2ZJMiETVs4cV4NVLGyGfz5Z38eN?=
 =?us-ascii?q?nMcdITsQWZkxLBj+hWMp09jPQLijR8OWLho3Il0fU0ggJ03ZG1p4WHL2Rt/KSk?=
 =?us-ascii?q?Ah9XLDH1ZsUT+i3zgqZahMqZw4evHpB5EDURQJToVe6oEC4Vtfn/KwaOFzg8pm?=
 =?us-ascii?q?2aGLXFGw+f9Vxmr2nOE52wM3GXJX8ZzchtRRWHJUxfhhwUUys+npIjCg+qw8nh?=
 =?us-ascii?q?el9j5j8N/l74tgdMyuVwOhbkSGjfowOoaiouRJibMRpb9QVC50bTMcyD4eN/BS?=
 =?us-ascii?q?BY/pu9rAOTLmyXfRhHDWYMWkacHVDsIqGu5cXc8+ifHue+LeHBYbCQpuxFTfuI?=
 =?us-ascii?q?2Yij0oh7/zaPK8WPOGNtD+Yg10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gi2gKeEKu6QnTt5Jixe1p8W3n/Iz74f3FEJhiFq?=
 =?us-ascii?q?djmtF6kAtCHXQKLRnK9XEwAUaydpOMRU6KI82xFHOdTHhdPtyr54kvk1Bk9FVV?=
 =?us-ascii?q?P/m8GpZs8KI2CnOFPEHkaLM7uGKiPRw8HqeqOxUrlQjORStx2ttjeXCU7jPjKf?=
 =?us-ascii?q?lzb3UxCjK/1DjCaePBZGooGybg5tCXT/TNLhchC0KsJ3giYswbIqhnLGL2ocMT?=
 =?us-ascii?q?lnfkNJr72Q6z5Yg/plF2xA6HplMfeLmyKD4+bELZYWtONhAj5omOJC/HQ617xV?=
 =?us-ascii?q?4TlYRPx0nSvetMJhr0u6nemP1DVnVgFDqjJKhIKNoEVjNr/V9phGWXbY4h0N6X?=
 =?us-ascii?q?+cBAgNp9tgEtfvobxfysDTlKLvLzdP69LV8tEaB8jRKcKHNmIuMBvpGDHOCgsF?=
 =?us-ascii?q?QiWmNWXeh0xbjfGT+WeZrpk8qpjwhpUOTqVXW0AyFvMfWQxZG4kZPJ59Wj4Mj7?=
 =?us-ascii?q?GWlogL6GC4oR2XQ99V7b7dUffHJPTpIzaQi/FnZh5Albb5K48TP4vT2EF4bFR+?=
 =?us-ascii?q?2oPQFByDDph2viR9Y1ps8w12+39kQzh2ghq9Zw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAABOnPdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCBOYECJ5gPgiFmiBGFLIkEgSQDTBIBARgNBgGIUiI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIDAwECJAsBDQE4AQMCCQEBBUsDHhMBB?=
 =?us-ascii?q?QEcGQWDHAGBaQMVAQQKm1M8jAkzgncFgTEBg0QNghECBhKHTIMPgRwXgX+BEYJ?=
 =?us-ascii?q?dgwtFAYc9AokjgW6Efo9FLgmCIIRchwiDIAsYgiaHK4c3jUOBCok8AgQCBAUCB?=
 =?us-ascii?q?Q8hgSYBaoEhMxoIKAiCcwEBATEJghIMF4NKhRSFTTEygQUBAYwiAQE?=
X-IPAS-Result: =?us-ascii?q?A0AOAABOnPdbh0O0hNFiHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?BOYECJ5gPgiFmiBGFLIkEgSQDTBIBARgNBgGIUiI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmIDAwECJAsBDQE4AQMCCQEBBUsDHhMBBQEcGQWDHAGBaQM?=
 =?us-ascii?q?VAQQKm1M8jAkzgncFgTEBg0QNghECBhKHTIMPgRwXgX+BEYJdgwtFAYc9Aokjg?=
 =?us-ascii?q?W6Efo9FLgmCIIRchwiDIAsYgiaHK4c3jUOBCok8AgQCBAUCBQ8hgSYBaoEhMxo?=
 =?us-ascii?q?IKAiCcwEBATEJghIMF4NKhRSFTTEygQUBAYwiAQE?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="139283257"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 22:26:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2502074AbeKWRJI (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 12:09:08 -0500
Received: from mail-pg1-f196.google.com ([209.85.215.196]:45568 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729253AbeKWRJI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 12:09:08 -0500
Received: by mail-pg1-f196.google.com with SMTP id y4so2622683pgc.12;
        Thu, 22 Nov 2018 22:26:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=WY7lE94eZeM6JKFyYa05G0/1cFXbQw6tUw3ja4+IQlg=;
        b=DGOdB88GbLE6xA1UUSHe84K+cMm6UjqzkMUrU1/xH2IKFGNhNHMw1UokQVzsNRo1xI
         nAauboaFhYXP+pQsWH3utUP9ZVNmppcEaEJKw9abwaUVjj1gb9lYn/e2k5e25RA6EBRf
         tlPbcmKyVcQueWVEZxTM9Rk8t6/OBA2TXb2q/23t99WTMrRfuEqfypi8IvIDtrnI26cv
         hsLXUwLMgFn5TZ+B4LbQlySbj788mxhj6pFl/gUIRW93pZdh2gyMem/QF724BoDmoDOf
         SZiGfC83YvtSDIf+ICNnM3mHvjDfO5dRPMfWxt7dw1VSuoYKRA8Cx8DL2zKzMayphjSQ
         M2Tw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references:mime-version:content-transfer-encoding;
        bh=WY7lE94eZeM6JKFyYa05G0/1cFXbQw6tUw3ja4+IQlg=;
        b=cjyNl9bU0Qppo+WLhhbL5umMReCot8jSMCQAvj55oUl9zI6I2fp6LTjcSnHPhTeOvD
         cI6TkC7pWL3MSxrBFyyqF2K7d5e6j7N48saantRPN5YVdixAAmSsZNMFAB0PB4zSpNR+
         iEg3snBkml8QNGkogg4qJgoKsQ8dQYML25iATBbOqVwMhru8gfTqS4DHVCWrRse6MlpV
         Wg/HoxlWgQSmylDZMzeu4tDpoAxGLdlz5s4MXD47Zsg9vSMI6ToAYE+wfW9kfBIeQx+y
         xvvv4hp6d9xp+lW4xGx+GvDdSm6f+ty0c1J3URWebyeL+vg70wykIWBAaJp+Uraxc17d
         11fw==
X-Gm-Message-State: AA+aEWY4jJKePNwvOIDwpmssjZdfRmZU/Q4DWcoTAqxSAm5MJ9LNgHME
        EReTbn8HlPU0UVEwPvI/SfxQgagnw0o=
X-Google-Smtp-Source: AFSGD/V6iIFdYXMyZk1HAus4xjkv/4auSpbCjbzEEm6KR8ni0obKaA3kQe1b5/T1QYS6LhlGxxqxeg==
X-Received: by 2002:a63:1c61:: with SMTP id c33mr12540263pgm.354.1542954378238;
        Thu, 22 Nov 2018 22:26:18 -0800 (PST)
Received: from bbox-2.seo.corp.google.com ([2401:fa00:d:0:98f1:8b3d:1f37:3e8])
        by smtp.gmail.com with ESMTPSA id j64-v6sm31548068pfc.43.2018.11.22.22.26.14
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 22:26:16 -0800 (PST)
From: Minchan Kim <minchan@kernel.org>
To: stable@vger.kernel.org
Cc: Andrew Morton <akpm@linux-foundation.org>, hare@suse.com,
        LKML <linux-kernel@vger.kernel.org>, sashal@kernel.org,
        Minchan Kim <minchan@kernel.org>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Howard Chen <howardsoc@google.com>
Subject: [PATCH for v4.14] zram: close udev startup race condition as default groups
Date: Fri, 23 Nov 2018 15:25:50 +0900
Message-Id: <20181123062550.163536-1-minchan@kernel.org>
X-Mailer: git-send-email 2.20.0.rc0.387.gc7a69e6b6c-goog
In-Reply-To: <20181115174504.GJ95254@sasha-vm>
References: <20181115174504.GJ95254@sasha-vm>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

commit fef912bf860e upstream.
commit 98af4d4df889 upstream.

I got a report from Howard Chen that he saw zram and sysfs race(ie,
zram block device file is created but sysfs for it isn't yet)
when he tried to create new zram devices via hotadd knob.

v4.20 kernel fixes it by [1, 2] but it's too large size to merge
into -stable so this patch fixes the problem by registering defualt
group by Greg KH's approach[3].

This patch should be applied to every stable tree [3.16+] currently
existing from kernel.org because the problem was introduced at 2.6.37
by [4].

[1] fef912bf860e, block: genhd: add 'groups' argument to device_add_disk
[2] 98af4d4df889, zram: register default groups with device_add_disk()
[3] http://kroah.com/log/blog/2013/06/26/how-to-create-a-sysfs-file-correctly/
[4] 33863c21e69e9, Staging: zram: Replace ioctls with sysfs interface

Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
Cc: Hannes Reinecke <hare@suse.com>
Tested-by: Howard Chen <howardsoc@google.com>
Signed-off-by: Minchan Kim <minchan@kernel.org>
---
 drivers/block/zram/zram_drv.c | 26 ++++++--------------------
 1 file changed, 6 insertions(+), 20 deletions(-)

diff --git a/drivers/block/zram/zram_drv.c b/drivers/block/zram/zram_drv.c
index 1e2648e4c286..27b202c64c84 100644
--- a/drivers/block/zram/zram_drv.c
+++ b/drivers/block/zram/zram_drv.c
@@ -1491,6 +1491,11 @@ static const struct attribute_group zram_disk_attr_group = {
 	.attrs = zram_disk_attrs,
 };
 
+static const struct attribute_group *zram_disk_attr_groups[] = {
+	&zram_disk_attr_group,
+	NULL,
+};
+
 /*
  * Allocate and initialize new zram device. the function returns
  * '>= 0' device_id upon success, and negative value otherwise.
@@ -1568,23 +1573,14 @@ static int zram_add(void)
 	if (ZRAM_LOGICAL_BLOCK_SIZE == PAGE_SIZE)
 		blk_queue_max_write_zeroes_sectors(zram->disk->queue, UINT_MAX);
 
+	disk_to_dev(zram->disk)->groups = zram_disk_attr_groups;
 	add_disk(zram->disk);
 
-	ret = sysfs_create_group(&disk_to_dev(zram->disk)->kobj,
-				&zram_disk_attr_group);
-	if (ret < 0) {
-		pr_err("Error creating sysfs group for device %d\n",
-				device_id);
-		goto out_free_disk;
-	}
 	strlcpy(zram->compressor, default_compressor, sizeof(zram->compressor));
 
 	pr_info("Added device: %s\n", zram->disk->disk_name);
 	return device_id;
 
-out_free_disk:
-	del_gendisk(zram->disk);
-	put_disk(zram->disk);
 out_free_queue:
 	blk_cleanup_queue(queue);
 out_free_idr:
@@ -1612,16 +1608,6 @@ static int zram_remove(struct zram *zram)
 	zram->claim = true;
 	mutex_unlock(&bdev->bd_mutex);
 
-	/*
-	 * Remove sysfs first, so no one will perform a disksize
-	 * store while we destroy the devices. This also helps during
-	 * hot_remove -- zram_reset_device() is the last holder of
-	 * ->init_lock, no later/concurrent disksize_store() or any
-	 * other sysfs handlers are possible.
-	 */
-	sysfs_remove_group(&disk_to_dev(zram->disk)->kobj,
-			&zram_disk_attr_group);
-
 	/* Make sure all the pending I/O are finished */
 	fsync_bdev(bdev);
 	zram_reset_device(zram);
-- 
2.20.0.rc0.387.gc7a69e6b6c-goog

