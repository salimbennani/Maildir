Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 15:31:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D10DD58040F;
	Thu, 22 Nov 2018 22:31:15 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 22:31:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5voWPhdvXDCCakqfKEuOrnI3lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZxSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzqFQAogC+BRGuCe701jNFhWX70bEg3ug9DQ3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKAcUeGzzKbUzTXMdfVW0ir45ojJdxAqvPaBXbdxccrX1UYvFxnKjlOL?=
 =?us-ascii?q?pIzmITyVzOINvHaf7+Z6UuKvkWEnphh3rzOyyMksjYzJiZgUylDC7Sh5w5g6Jc?=
 =?us-ascii?q?e+SEFlZd6oCpxQtzuVN4duQcMiWWZotzw6yrEcpZG7ey0KxZI6zBDcc/yKa5aE?=
 =?us-ascii?q?7g7nWeqLPDt1imxpdKiiixux7USs0OzxW8us3FpUoSdJjsTAu3UD1xPJ9sSLVv?=
 =?us-ascii?q?5w8Vqk1DqT0g3e7uJJIU4pmafeKJMu2bA9mYcWvEjeEC/7lkf7gaqYe0o6+eWl?=
 =?us-ascii?q?7fnsbK/8qZ+GLYB0jxnzMqQwlcy7BuQ1KhYOX2eF9uSmzrHj/lP2QK9MjvIolq?=
 =?us-ascii?q?nVqpfaJd4UpqKhAg9V1Jgs6wqnAju4zNgVmWMLIE9LdR6ZlYTlJlLDLOziAfq+?=
 =?us-ascii?q?gVmgiDJryOrHPr3lDJXNNH/DkLL5cLZ56k5czhczzN9G65JXFL4BOvTzVVH1tN?=
 =?us-ascii?q?DBCR84PQq0zPj9CNhmyIMeVnyAArWDPKPRr1CI/OQvLPeIZIMPvzb9Mfcl6+b0?=
 =?us-ascii?q?jXAlgV8dYbWp3ZwPZXC8H/RmIFuWbWDjg9ccCmoKugs+TOr3iFyNSzJTZnCyX7?=
 =?us-ascii?q?4i6TE/Eo6pEYDDRoW1irybwCi7BoFWZnxBCl2UEXfnbYSEW+sWZyKVOMNhkiEE?=
 =?us-ascii?q?WqKnS48uzhyusA76y7x6Luvb4CEYtJTj1MRr6O3Xjx096Tt0D8GF2WGXU250hn?=
 =?us-ascii?q?8IRyMx3K1no0x9zUmM3bJ7g/xfE9xT4fRJXxw+NZ7dyex6Ft/zVhjAftePVFap?=
 =?us-ascii?q?XNGmDSstQdI2xt8Ee1x9FMm6jhDfwyqqBKcYmKaQBJw09aLc3GL9J9xnxHbEz6?=
 =?us-ascii?q?Qhi1gmQs1SNWypnKJ/9g7TB5LXnEWdjaqlaaMc3CvV/meZ0WWOpF1YUBJ3Uajd?=
 =?us-ascii?q?XnAQfE3Woc795kPDVbCuD7snPxBFyc6DLKtKd9LogU9HRPflJNTRfWaxl32sCh?=
 =?us-ascii?q?aPw7OGdJDqdHkF3CXBFEgElBge8mucOgggGCituWLeAyZoFVL0fUzs9+5yqHe4?=
 =?us-ascii?q?Tk8xywGHdElh17uz+h4Iiv2QUfIT3rQYuCg/rzV4Bkqy39XTC9CYvQpuYL1cYc?=
 =?us-ascii?q?8h4FdAzW/WqhZyPoK+IKx4hl4RaQJ3v1jw2BVxEYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6Pkgt1XjvQSpFk0+83Vn09hZyW?=
 =?us-ascii?q?ec6o/NDAoIVZLxU0A39xdhqrHeYyk94Z7U1HJ2Pam1tD/Cx8wmBO8/xhm8eNdf?=
 =?us-ascii?q?NbuOFBXuHM0CG8iuNOsqlkCzYRIAIu9T+7A7PsO8e/Sdxa6kIfxvnDSljWRA/o?=
 =?us-ascii?q?BwyUaM9yt6Su7V0JcJ2fCY3g2bVzjiiFetqNz4mYdBZTsKBGqw1TDkBJJNZq11?=
 =?us-ascii?q?ZYsKCXquL9erydlkhp/tW2RX9FisB14d3M+peBySb0Hy3AFK1EQXp2CnljW8zz?=
 =?us-ascii?q?Bujz4pqa+f1jTUw+v+bBoHJnJLRG56gFf2IIi7k8oVXFK1YAgujhel41j1x7Ja?=
 =?us-ascii?q?pKhmM2bcW0NIcDXoIGF4VauwsKGPY8pO6JMurCVWX/6wYVGcSr7hvRQa1znvEH?=
 =?us-ascii?q?dZxDA+bzuqoIn2nwRmiGKBK3Z+tHrYecBqyRbf/tDcXuNR3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XlEQcgyy/71N?=
 =?us-ascii?q?pqVSLSoBbneIbr1Ke6MeNhfkZ2Al/x8M56GoB4kosti5Acw3kahpOJ/XUZlWf/?=
 =?us-ascii?q?K8lU2aX7bHAVXz4E38bV4BT52E1kNn+Ix5j2VnKHzstjZtm6ZHgb2iY878BMFa?=
 =?us-ascii?q?eV46ZInSpzolqksw3RZeJxkSsayfsr8HQamf0GuBIxziWBBbAfBUpYMjbtlxiS?=
 =?us-ascii?q?79C+sb9YZGCgcbWr0Ep+nNahDKyNow1GWXb5fIsiEjF07sllLF3M13jz4Jn+eN?=
 =?us-ascii?q?bMddITqgGUkxDYguhQKZIxleAFiTBpOG3jpn0l1/A0jQZ10p6kpoiHJH5g/Ka4?=
 =?us-ascii?q?Ah5eKz30aNkf+jDrjaZCgMmW25qjEYlmGjUORJHoV+6nECoOtfT7MAaDCCE8qn?=
 =?us-ascii?q?CeGbbFHA6Q8kFmr2/UE5CwNnGaP30ZzdRkRBmAK01TmgEUXDMmnpEnEgCm3tDu?=
 =?us-ascii?q?cEB85joJ/F73tgNMyv50Nxn4SmrQvx2najAwSJiCNhZW6hxC6lzRMcyf6OJzAi?=
 =?us-ascii?q?5Z8oegrAyLNmyUeQBIAXsVVUyDAlDpJqOu6sXY8+iEGuq+KOPDYbeUpuxbSfiI?=
 =?us-ascii?q?3oij0pd88zaPK8WPPWRiD/sh1UpYRn15H8XZmzMSSy0YjS7NbsibpAui9S1ztM?=
 =?us-ascii?q?yw7PPrWAf374uVF7RSKclv+wyxgaqbN++Qgzt5KS9F1pwWw3/E0qMf3FkUiyFh?=
 =?us-ascii?q?bDStFbUAtSjQTKPfgKNXDhgbaz9tO8tM9a4zwg5NOcvDgNPvyrF4luI1C0tCVV?=
 =?us-ascii?q?H5msGme80KI2K+NFPGHkqLN66GJTrEw87pe6O8VKZQgf5Qtx2xvzabDkDiMi6C?=
 =?us-ascii?q?lznvSxCgL+VMgDuHMxxZvYG3agxtBnT7TNL6dh27N8d6gicrwbIvnHPFK24dPS?=
 =?us-ascii?q?J4c0NMtbCQ6SJYgvNiG21O9HZlLO+EmzqH4OncMJoZrfxrAiFsneJA/Hs606dV?=
 =?us-ascii?q?7D1DRPFthCvSr9tur0u6neWV1jVnUARBqjBQiYKPvEViP7jZ95ZaVXbF+hIN8X?=
 =?us-ascii?q?ufCxAQq9R5Dd3vvrhaysLTm6LrNDdC79XU8NMcBsfOLsKHNXshMRzxFz/VDAsK?=
 =?us-ascii?q?VzirNW7EikxZkfGS8GCVr5cgppjtnpoOVqFUVFgvGvwGDURlGY9KHJAiRS8tm7?=
 =?us-ascii?q?qWpNAH6GD4rxTLQshe+JfdWaG8G/LqfROYi7JEbh1A4rL9ZdAWN4vw20VkQlp3?=
 =?us-ascii?q?hoLHHwzXR98b8X4pVRM9vEgYqCs2dWY0wU+wL1r1uHI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAACxnfdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBOYECJ4wRi36CIWaIEYUsiQSBJANMEgEBGA0GAYhSIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkCwENATgBAwIJAQEFSwMeE?=
 =?us-ascii?q?wEFARwZBYMcAYFpAxUBBAqbWDyMCTOCdwWBMQGDRA2CEQIGEodMgw+BHBeBf4E?=
 =?us-ascii?q?Rgl2DC0UBhz0CiSOBboR+j0UuCYIghFyHCIMgCxiCJocrhzeNQ4EKiTwCBAIEB?=
 =?us-ascii?q?QIFDyGBJWyBITMaCCgIgnMBAQExCYISDBeDSoUUhU0xMoEFAQGMIgEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAACxnfdbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BOYECJ4wRi36CIWaIEYUsiQSBJANMEgEBGA0GAYhSIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYgMDAQIkCwENATgBAwIJAQEFSwMeEwEFARwZBYMcAYF?=
 =?us-ascii?q?pAxUBBAqbWDyMCTOCdwWBMQGDRA2CEQIGEodMgw+BHBeBf4ERgl2DC0UBhz0Ci?=
 =?us-ascii?q?SOBboR+j0UuCYIghFyHCIMgCxiCJocrhzeNQ4EKiTwCBAIEBQIFDyGBJWyBITM?=
 =?us-ascii?q?aCCgIgnMBAQExCYISDBeDSoUUhU0xMoEFAQGMIgEB?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="53046052"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 22:31:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2502084AbeKWRLB (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 12:11:01 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:34268 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729253AbeKWRLB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 12:11:01 -0500
Received: by mail-pf1-f194.google.com with SMTP id h3so2906070pfg.1;
        Thu, 22 Nov 2018 22:28:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=ErDqdjEsmLSbUpdX6oGb3pbSY6xEibcOQetQLQGdD78=;
        b=oc6sn6R2WOP5kuK129ydTGk7VaczqCIINYeevmJEWgw4OmhG+rsbRfuU+pbhrSN2+v
         72rEk8SbTv+zWtPyVFvf7coYd/eYQk/cULHN/j2S3K45SFZneqP4CogWa8R04taVjoD5
         3q7+6SecPgbcKgtkCTQ7b3gvXAjy72XCrJIzEK79132vNPyLkGi/kyosTtyNsnCiuPXt
         ZYGYfDljj1BNXE7sq0jdkx6gjqnZN5b+ixKQARvh/TktBZl0gXZ0x6l9y8Kq1Ce9cFG0
         sSwKPpNcMtjkeupxTyV6HcgvJVwwcsYagh8h6xGI2Cbg3EbpFzbYYC/TF09RaOtz/1WO
         SItA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references:mime-version:content-transfer-encoding;
        bh=ErDqdjEsmLSbUpdX6oGb3pbSY6xEibcOQetQLQGdD78=;
        b=IqI9boF+fZgIK+xcky0+x8yYFEdVl5xzj5Pl0kfhHngj2egbrOd5sL7FUEA3xnUopC
         bn3kXi0GkRWnh6Mu/T+A4giPRgfvmlnkGfVTJRZerry55o/uJlXkRMyd7OH7jlPL8Yhe
         9Nfpu4OXFhT1FqJk6tqTVPQHlxMZ17hbqysBQrVJEXn4M1e91T2qeukG5Ao4GcfvAeNj
         ZZgw25OhSxKwu15IT1r5kIml2sBWFMMc2MhVp/MB3tjltZJi7Dg18vnhNOY9e3xqN/sK
         59+d5rf8+8samX3KQHpScq6FQNgTI4yaMYoUOVzOvqow6bOgeJFny9MpKWxelllwDdHj
         EkIg==
X-Gm-Message-State: AGRZ1gLTj8doPdVo1tHkDLNWpW26ArtnIzpg05ojxxfUb3PEsgUEF3yv
        bTDyIhqiHEfRzLNPUGgY6uhegwtRJ/Q=
X-Google-Smtp-Source: AJdET5eaanl5jJLsIhXsLHRy0pXGjSSWmVdopvRt2QjZQFPE5BI80DdV5Cqnvy9FXIgv6YhIfUBgPw==
X-Received: by 2002:aa7:8497:: with SMTP id u23mr14561578pfn.220.1542954490432;
        Thu, 22 Nov 2018 22:28:10 -0800 (PST)
Received: from bbox-2.seo.corp.google.com ([2401:fa00:d:0:98f1:8b3d:1f37:3e8])
        by smtp.gmail.com with ESMTPSA id m67sm468875pfb.25.2018.11.22.22.28.07
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 22:28:09 -0800 (PST)
From: Minchan Kim <minchan@kernel.org>
To: stable@vger.kernel.org
Cc: Andrew Morton <akpm@linux-foundation.org>, hare@suse.com,
        LKML <linux-kernel@vger.kernel.org>, sashal@kernel.org,
        Minchan Kim <minchan@kernel.org>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Howard Chen <howardsoc@google.com>
Subject: [PATCH for 4.9] zram: close udev startup race condition as default groups
Date: Fri, 23 Nov 2018 15:28:02 +0900
Message-Id: <20181123062802.197704-1-minchan@kernel.org>
X-Mailer: git-send-email 2.20.0.rc0.387.gc7a69e6b6c-goog
In-Reply-To: <20181115174504.GJ95254@sasha-vm>
References: <20181115174504.GJ95254@sasha-vm>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

commit fef912bf860e upstream.
commit 98af4d4df889 upstream.

I got a report from Howard Chen that he saw zram and sysfs race(ie,
zram block device file is created but sysfs for it isn't yet)
when he tried to create new zram devices via hotadd knob.

v4.20 kernel fixes it by [1, 2] but it's too large size to merge
into -stable so this patch fixes the problem by registering defualt
group by Greg KH's approach[3].

This patch should be applied to every stable tree [3.16+] currently
existing from kernel.org because the problem was introduced at 2.6.37
by [4].

[1] fef912bf860e, block: genhd: add 'groups' argument to device_add_disk
[2] 98af4d4df889, zram: register default groups with device_add_disk()
[3] http://kroah.com/log/blog/2013/06/26/how-to-create-a-sysfs-file-correctly/
[4] 33863c21e69e9, Staging: zram: Replace ioctls with sysfs interface

Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
Cc: Hannes Reinecke <hare@suse.com>
Tested-by: Howard Chen <howardsoc@google.com>
Signed-off-by: Minchan Kim <minchan@kernel.org>
---
 drivers/block/zram/zram_drv.c | 26 ++++++--------------------
 1 file changed, 6 insertions(+), 20 deletions(-)

diff --git a/drivers/block/zram/zram_drv.c b/drivers/block/zram/zram_drv.c
index b7c0b69a02f5..d64a53d3270a 100644
--- a/drivers/block/zram/zram_drv.c
+++ b/drivers/block/zram/zram_drv.c
@@ -1223,6 +1223,11 @@ static struct attribute_group zram_disk_attr_group = {
 	.attrs = zram_disk_attrs,
 };
 
+static const struct attribute_group *zram_disk_attr_groups[] = {
+	&zram_disk_attr_group,
+	NULL,
+};
+
 /*
  * Allocate and initialize new zram device. the function returns
  * '>= 0' device_id upon success, and negative value otherwise.
@@ -1303,24 +1308,15 @@ static int zram_add(void)
 		zram->disk->queue->limits.discard_zeroes_data = 0;
 	queue_flag_set_unlocked(QUEUE_FLAG_DISCARD, zram->disk->queue);
 
+	disk_to_dev(zram->disk)->groups = zram_disk_attr_groups;
 	add_disk(zram->disk);
 
-	ret = sysfs_create_group(&disk_to_dev(zram->disk)->kobj,
-				&zram_disk_attr_group);
-	if (ret < 0) {
-		pr_err("Error creating sysfs group for device %d\n",
-				device_id);
-		goto out_free_disk;
-	}
 	strlcpy(zram->compressor, default_compressor, sizeof(zram->compressor));
 	zram->meta = NULL;
 
 	pr_info("Added device: %s\n", zram->disk->disk_name);
 	return device_id;
 
-out_free_disk:
-	del_gendisk(zram->disk);
-	put_disk(zram->disk);
 out_free_queue:
 	blk_cleanup_queue(queue);
 out_free_idr:
@@ -1348,16 +1344,6 @@ static int zram_remove(struct zram *zram)
 	zram->claim = true;
 	mutex_unlock(&bdev->bd_mutex);
 
-	/*
-	 * Remove sysfs first, so no one will perform a disksize
-	 * store while we destroy the devices. This also helps during
-	 * hot_remove -- zram_reset_device() is the last holder of
-	 * ->init_lock, no later/concurrent disksize_store() or any
-	 * other sysfs handlers are possible.
-	 */
-	sysfs_remove_group(&disk_to_dev(zram->disk)->kobj,
-			&zram_disk_attr_group);
-
 	/* Make sure all the pending I/O are finished */
 	fsync_bdev(bdev);
 	zram_reset_device(zram);
-- 
2.20.0.rc0.387.gc7a69e6b6c-goog

