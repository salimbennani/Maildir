Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:23:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E8E125803DC
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 04:18:39 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 04:18:39 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ArCR6WRM2swcuVmqhMoIl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z7rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPQPMvpXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+Q4CwzKwBAsE84MvX?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQyjvMdelW1ivk5IXUdBAuvOuMWqhtesTX1EkvDR3KgU+N?=
 =?us-ascii?q?qYf4OD6V0/4Cs3KH4OV6U+KglnQnpB9rrjir28cskJfGiZgIyl3f7yV23ps6Jd?=
 =?us-ascii?q?2iR05ne9KrDJxQtySDOoZwX8gsQHlotT4kxrEaupO3ZjUGxIkkyhLFdfCKfYiF?=
 =?us-ascii?q?7gj+WOuTOTt0mm5pdbalixux8UWs0PPwWteq3FpQsyZIltnBu3YQ3BLJ8MeHUO?=
 =?us-ascii?q?Fy/kK51DaPyQ/T7uZELFgwlaraMJ4h3qUwmoAcsUTFAy/6gkL2jLWZdkk8++io?=
 =?us-ascii?q?7froYqn+q5OCK4N5iRvyPrkzlsG8G+g0LAYDUmiB9eih1rDv5Uj5T69Ljv0ynK?=
 =?us-ascii?q?nZqpfaJcEDq66gHQBV15sj5w+iADi4ztQXg30HIEtedxKAkojpPU3BL+7jDfu4?=
 =?us-ascii?q?h1SskTRryO7cMrzuH5XANnzDkLbnfbZg5E9Q0gszzdZD551KDrENOu78Wkj0tN?=
 =?us-ascii?q?HDCB85NAq0w+nhCNVgzI8eXniPAqCBPKPIrVCI/v4vI/WLZIINvDb9Kvsl6OD0?=
 =?us-ascii?q?gX42hF8QZq2p3ZoRaHClEfVqOUSZYXzwgtgfFWcGpBYxTOvviA7KbDhIenznX7?=
 =?us-ascii?q?4g/ippT8WiDJzfXcarh7qO2jr9GYdZIWVPC1SJGHGvcJ2YWvAKc2WLL8p81zAJ?=
 =?us-ascii?q?S7WlGLInzgyk4Qrzyr57KbjN9ygF8J7uytVxovfejAw/7iBcCcOb3GeQCWZukT?=
 =?us-ascii?q?QTWjU00atj9FF70UqJyqNigvZVRuBUstJGVR1yEJfZyuF2DM66DgPEd9KMRVqh?=
 =?us-ascii?q?as+rDTE4UpQ6xNpYMGhnHND3qxnZ1G+DBbMPFvSvGYY5+7+Ui334Pc10zXrc2e?=
 =?us-ascii?q?8lkkMrS9ZnL2CqhqdjsQPUAtiawA2ii6+2ePFEj2b2/2CZwD/L5RkAXQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BeAAAGTRJcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCCTxODfIh4jUB8hnyCEY1fgV8UGBSEQIMEIjcGDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCXAECAwECIAQfCikDAwECBgEBCgsDC?=
 =?us-ascii?q?gICIgQCAgMBHhIBBQEOAQ0GEwUDgxmCAQEEmzI8iw18M4kjgQ4SeYhpgkiCFoE?=
 =?us-ascii?q?Rgl01hGoXgwSCVwKJP4FzhRCQTQcCkVkYkUqZOg8hgTuBeDMaI4EBBoI1gicXj?=
 =?us-ascii?q?iI8MYEHilGBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BeAAAGTRJcmBHrdtBjHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?CTxODfIh4jUB8hnyCEY1fgV8UGBSEQIMEIjcGDQEDAQEBAQEBAgETAQEBAQEIC?=
 =?us-ascii?q?wsGGw4vgjYFAgMaAQaCXAECAwECIAQfCikDAwECBgEBCgsDCgICIgQCAgMBHhI?=
 =?us-ascii?q?BBQEOAQ0GEwUDgxmCAQEEmzI8iw18M4kjgQ4SeYhpgkiCFoERgl01hGoXgwSCV?=
 =?us-ascii?q?wKJP4FzhRCQTQcCkVkYkUqZOg8hgTuBeDMaI4EBBoI1gicXjiI8MYEHilGBdwE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="141970353"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 04:18:38 -0800
Received: from localhost ([::1]:52038 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXPws-0006Rf-15
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 07:18:38 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39048)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gXPwg-0006RP-AV
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 07:18:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gXPwc-0002wo-9P
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 07:18:26 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:46997)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gXPwc-0002qO-3T
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 07:18:22 -0500
Received: by mail-qk1-f195.google.com with SMTP id q1so939879qkf.13
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 04:18:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=h75SPBXJcFJqbsl0oFF5N2+K8fVG9RvkKn7R4POds6s=;
	b=sFXGoRFM6b3WdWNnIXdwVjI37jw0JCGd0CfU4fdE3g3csNtEAPuuU6RYi7YuetXo1o
	clQFPXR6XwYgFaz02sl3PfDLrEKYDetW1MxdhtgAI8dgckVN6NgIrfuZBXgvw8w6FCjc
	qMSlb8Fgf736YrTAU63FtHkWrDTUgfexkXcDKhZXG6w3Mg+SfLT9hEvDiAh88B0N0j10
	qPt014ghhAZ/FeWeNlAKwfCxcs4Zy22ZKweeamyxan8Q/9dvtlIKiXO+TUfqZNRFYD18
	MourUnJ7K999TY/1Bp5V0CW3Z9LB+7tuzMfQW9HC5H99hs8aYzaBuns5MRtCulwUH89f
	q1Vg==
X-Gm-Message-State: AA+aEWb6mzdtKHId7cgaEmh55opTrtI2/JwRo+XcuE6cfKQp41dIptqj
	SQfpwkpr/CxhifBxhe8usVdtMsV0LmGJsFUHjaUBpw==
X-Google-Smtp-Source: AFSGD/Wr+UT3R7amhKmhF7sNvz9m6eVBMUjV9G6qO7+T+kXEGpTWgPahmp3u4DwNNhDGYCAdbRHwf5gKTZOtbi5njQE=
X-Received: by 2002:ae9:dfc7:: with SMTP id t190mr20886936qkf.43.1544703500801;
	Thu, 13 Dec 2018 04:18:20 -0800 (PST)
MIME-Version: 1.0
References: <20180910083222.8245-1-marcandre.lureau@redhat.com>
	<20180910083222.8245-7-marcandre.lureau@redhat.com>
	<62b5734c-c23e-cfc2-701e-45692a7f1bd1@redhat.com>
	<20181213130130.40a31420@redhat.com>
In-Reply-To: <20181213130130.40a31420@redhat.com>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Thu, 13 Dec 2018 16:18:09 +0400
Message-ID: <CAMxuvayALT-jFsQxjLuO18Gz8y3444ZtJLx0wt4GzpV3nnUbnQ@mail.gmail.com>
To: Igor Mammedov <imammedo@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.222.195
Subject: Re: [Qemu-devel] [PATCH v12 6/6] tpm: add ACPI memory clear
 interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>,
	Stefan Berger <stefanb@linux.vnet.ibm.com>,
	Philippe Mathieu Daude <philmd@redhat.com>,
	"Michael S . Tsirkin" <mst@redhat.com>,
	qemu-devel <qemu-devel@nongnu.org>, "Bonzini,
	Paolo" <pbonzini@redhat.com>, Laszlo Ersek <lersek@redhat.com>,
	Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Thu, Dec 13, 2018 at 4:01 PM Igor Mammedov <imammedo@redhat.com> wrote:
>
> On Wed, 12 Dec 2018 17:22:21 +0100
> Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com> wrote:
>
> > On 9/10/18 10:32 AM, Marc-Andr=C3=A9 Lureau wrote:
> > > This allows to pass the last failing test from the Windows HLK TPM 2.=
0
> > > TCG PPI 1.3 tests.
> > >
> > > The interface is described in the "TCG Platform Reset Attack
> > > Mitigation Specification", chapter 6 "ACPI _DSM Function". According
> > > to Laszlo, it's not so easy to implement in OVMF, he suggested to do
> > > it in qemu instead.
> > >
> > > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> > > ---
> > >  hw/tpm/tpm_ppi.h     |  2 ++
> > >  hw/i386/acpi-build.c | 46 ++++++++++++++++++++++++++++++++++++++++++=
++
> > >  hw/tpm/tpm_crb.c     |  1 +
> > >  hw/tpm/tpm_ppi.c     | 22 +++++++++++++++++++++
> > >  hw/tpm/tpm_tis.c     |  1 +
> > >  docs/specs/tpm.txt   |  2 ++
> > >  hw/tpm/trace-events  |  3 +++
> > >  7 files changed, 77 insertions(+)
> > >
> > > diff --git a/hw/tpm/tpm_ppi.h b/hw/tpm/tpm_ppi.h
> > > index c2ab2ed300..b8f67962c7 100644
> > > --- a/hw/tpm/tpm_ppi.h
> > > +++ b/hw/tpm/tpm_ppi.h
> > > @@ -23,4 +23,6 @@ typedef struct TPMPPI {
> > >  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
> > >                    hwaddr addr, Object *obj, Error **errp);
> > >
> >
> > Can you add documentation?
> >
> > > +void tpm_ppi_reset(TPMPPI *tpmppi);
> > > +
> > >  #endif /* TPM_TPM_PPI_H */
> > > diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
> > > index c5e9a6e11d..2ab3e8fae7 100644
> > > --- a/hw/i386/acpi-build.c
> > > +++ b/hw/i386/acpi-build.c
> > > @@ -1824,6 +1824,13 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
> > >      pprq =3D aml_name("PPRQ");
> > >      pprm =3D aml_name("PPRM");
> > >
> > > +    aml_append(dev,
> > > +               aml_operation_region("TPP3", AML_SYSTEM_MEMORY,
> > > +                                    aml_int(TPM_PPI_ADDR_BASE + 0x15=
a),
> >
> > Can you add a definition for this magic value?
> > Maybe:
> >
> > #define TPM_PPI_MEMORY_OVERWRITE_OFFSET 0x15a
> >
> > or
> >
> > #define TPM_PPI_MOVV_OFFSET 0x15a
> I'd prefer explicit numeric values there as it's a bit easier to review
> and grep in 'spec' since one doesn't have to jump to define definition
> first to find out value to compare with spec.
> What I'd add though is verbatim comment from spec like we do
> in APCI code so we could jump to the field of interest in spec
> just doing copy&paste&search

I don't mind.
Philippe, are you okay going back to numeric values?

Igor, is this comment what you would expect where the 0x15a value is used:
/* 0x15a: movv field in ACPI PPI Interface, see specs/tpm.txt */

thanks
>
> >
> > > +                                    0x1));
> > > +    field =3D aml_field("TPP3", AML_BYTE_ACC, AML_NOLOCK, AML_PRESER=
VE);
> > > +    aml_append(field, aml_named_field("MOVV", 8));
> > > +    aml_append(dev, field);
> > >      /*
> > >       * DerefOf in Windows is broken with SYSTEM_MEMORY.  Use a dynam=
ic
> > >       * operation region inside of a method for getting FUNC[op].
> > > @@ -2166,7 +2173,46 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
> > >              aml_append(ifctx, aml_return(aml_buffer(1, zerobyte)));
> > >          }
> > >          aml_append(method, ifctx);
> > > +
> > > +        ifctx =3D aml_if(
> > > +            aml_equal(uuid,
> > > +                      aml_touuid("376054ED-CC13-4675-901C-4756D7F2D4=
5D")));
> > > +        {
> > > +            /* standard DSM query function */
> > > +            ifctx2 =3D aml_if(aml_equal(function, zero));
> > > +            {
> > > +                uint8_t byte_list[1] =3D { 0x03 };
> > > +                aml_append(ifctx2, aml_return(aml_buffer(1, byte_lis=
t)));
> > > +            }
> > > +            aml_append(ifctx, ifctx2);
> > > +
> > > +            /*
> > > +             * TCG Platform Reset Attack Mitigation Specification 1.=
0 Ch.6
> > > +             *
> > > +             * Arg 2 (Integer): Function Index =3D 1
> > > +             * Arg 3 (Package): Arguments =3D Package: Type: Integer
> > > +             *                  Operation Value of the Request
> > > +             * Returns: Type: Integer
> > > +             *          0: Success
> > > +             *          1: General Failure
> > > +             */
> > > +            ifctx2 =3D aml_if(aml_equal(function, one));
> > > +            {
> > > +                aml_append(ifctx2,
> > > +                           aml_store(aml_derefof(aml_index(arguments=
, zero)),
> > > +                                     op));
> > > +                {
> > > +                    aml_append(ifctx2, aml_store(op, aml_name("MOVV"=
)));
> > > +
> > > +                    /* 0: success */
> > > +                    aml_append(ifctx2, aml_return(zero));
> > > +                }
> > > +            }
> > > +            aml_append(ifctx, ifctx2);
> > > +        }
> > > +        aml_append(method, ifctx);
> > >      }
> > > +
> > >      aml_append(dev, method);
> > >  }
> > >
> > > diff --git a/hw/tpm/tpm_crb.c b/hw/tpm/tpm_crb.c
> > > index b243222fd6..48f6a716ad 100644
> > > --- a/hw/tpm/tpm_crb.c
> > > +++ b/hw/tpm/tpm_crb.c
> > > @@ -233,6 +233,7 @@ static void tpm_crb_reset(void *dev)
> > >  {
> > >      CRBState *s =3D CRB(dev);
> > >
> > > +    tpm_ppi_reset(&s->ppi);
> > >      tpm_backend_reset(s->tpmbe);
> > >
> > >      memset(s->regs, 0, sizeof(s->regs));
> > > diff --git a/hw/tpm/tpm_ppi.c b/hw/tpm/tpm_ppi.c
> > > index f2f07f895e..ac05ba8d3c 100644
> > > --- a/hw/tpm/tpm_ppi.c
> > > +++ b/hw/tpm/tpm_ppi.c
> > > @@ -16,8 +16,30 @@
> > >  #include "qapi/error.h"
> > >  #include "cpu.h"
> > >  #include "sysemu/memory_mapping.h"
> > > +#include "sysemu/reset.h"
> > >  #include "migration/vmstate.h"
> > >  #include "tpm_ppi.h"
> > > +#include "trace.h"
> > > +
> > > +void tpm_ppi_reset(TPMPPI *tpmppi)
> > > +{
> > > +    if (tpmppi->buf[0x15a] & 0x1) {
> >
> > TPM_PPI_MOVV_OFFSET
> >
> > > +        GuestPhysBlockList guest_phys_blocks;
> > > +        GuestPhysBlock *block;
> > > +
> > > +        guest_phys_blocks_init(&guest_phys_blocks);
> > > +        guest_phys_blocks_append(&guest_phys_blocks);
> > > +        QTAILQ_FOREACH(block, &guest_phys_blocks.head, next) {
> > > +            trace_tpm_ppi_memset(block->host_addr,
> > > +                             block->target_end - block->target_start=
);
> > > +            memset(block->host_addr, 0,
> > > +                   block->target_end - block->target_start);
> > > +            memory_region_set_dirty(block->mr, 0,
> > > +                                    block->target_end - block->targe=
t_start);
> > > +        }
> > > +        guest_phys_blocks_free(&guest_phys_blocks);
> > > +    }
> > > +}
> > >
> > >  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
> > >                    hwaddr addr, Object *obj, Error **errp)
> > > diff --git a/hw/tpm/tpm_tis.c b/hw/tpm/tpm_tis.c
> > > index 70432ffe8b..d9bfa956cc 100644
> > > --- a/hw/tpm/tpm_tis.c
> > > +++ b/hw/tpm/tpm_tis.c
> > > @@ -868,6 +868,7 @@ static void tpm_tis_reset(DeviceState *dev)
> > >      s->be_buffer_size =3D MIN(tpm_backend_get_buffer_size(s->be_driv=
er),
> > >                              TPM_TIS_BUFFER_MAX);
> > >
> > > +    tpm_ppi_reset(&s->ppi);
> > >      tpm_backend_reset(s->be_driver);
> > >
> > >      s->active_locty =3D TPM_TIS_NO_LOCALITY;
> > > diff --git a/docs/specs/tpm.txt b/docs/specs/tpm.txt
> > > index 332c2ae597..ce9bda3c89 100644
> > > --- a/docs/specs/tpm.txt
> > > +++ b/docs/specs/tpm.txt
> > > @@ -121,6 +121,8 @@ layout:
> > >   +----------+--------+--------+-------------------------------------=
------+
> > >   | next_step|   0x1  |  0x159 | Operation to execute after reboot by=
      |
> > >   |          |        |        | firmware. Used by firmware.         =
      |
> > > + +----------+--------+--------+-------------------------------------=
------+
> > > + | movv     |   0x1  |  0x15a | Memory overwrite variable           =
      |
> > >   +----------+--------+--------+-------------------------------------=
------+
> > >
> > >     The following values are supported for the 'func' field. They cor=
respond
> > > diff --git a/hw/tpm/trace-events b/hw/tpm/trace-events
> > > index 25bee0cecf..920d32ad55 100644
> > > --- a/hw/tpm/trace-events
> > > +++ b/hw/tpm/trace-events
> > > @@ -51,3 +51,6 @@ tpm_tis_mmio_write_init_abort(void) "Initiating abo=
rt"
> > >  tpm_tis_mmio_write_lowering_irq(void) "Lowering IRQ"
> > >  tpm_tis_mmio_write_data2send(uint32_t value, unsigned size) "Data to=
 send to TPM: 0x%08x (size=3D%d)"
> > >  tpm_tis_pre_save(uint8_t locty, uint32_t rw_offset) "locty: %d, rw_o=
ffset =3D %u"
> > > +
> > > +# hw/tpm/tpm_ppi.c
> > > +tpm_ppi_memset(uint8_t *ptr, size_t size) "memset: %p %zu"
> > >
> >
> > I'd split this patch in 2: Add ACPI, Add tpm_ppi_reset.
>

