Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 20:24:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 22813580117
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 01:57:22 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 03 Dec 2018 01:57:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Axw8VIxGp9ceTpGO57gedeZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p82+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCI+hXs4bzqUYWrRa8BwehC/7jxzFUinDoxq03yPghERjc0QA8A94CrH?=
 =?us-ascii?q?bZodPoP6kSS+C1y6zIwC3EYfxMwzfy9JHEfwwnof6RR7J3a9fax08yFwPfkFqf?=
 =?us-ascii?q?s5HlNC6S2+QIqWeb9fZvWvipi2E6sQF+vCKjxsMxionTmI0a0E3E+D5jwIkrON?=
 =?us-ascii?q?K4SFR0YcK+HJRMsCGaMpJ7T8U/SG9roCY30qMKtYK4cSQQ1Zgr2h3SZ+aZf4WG?=
 =?us-ascii?q?4h/vTvudLDVgiH57ZL6ygwy+/Eugx+HmS8W50UpGojBYntTIt30A0QHY5NKdRf?=
 =?us-ascii?q?tn5Eih3C6C1wDN5eFAJkA5ja7bK586wr4sjZofq0vDHinrmEnsi6+WbEok9vCp?=
 =?us-ascii?q?6+ThfLrmuoeRO5Fohgz9KKgih9GzDOciPgQQUWWW+f6w2KDh8EHhRbVFlPw2kq?=
 =?us-ascii?q?3XsJDAIsQbo7a0AxZL3YYm9hazFiqp38oGnXYZKFJJYQmIj4/0O1HIPP/3E+y/?=
 =?us-ascii?q?j1OokDdqxPDJIKftA5rQLnXblLfhfLB961NTyQYpzNBf4Y5UBa8FIP7pRkDxs9?=
 =?us-ascii?q?nYAwQ/MwyzxebnB9N91p4EVWKIGK+ZP7vesUWU6eI3P+mMeIgVtS75K/gk5P7h?=
 =?us-ascii?q?k2U1mFAAfaSy2ZsXaXa4HulpIkmDYHrshMsBHnkOvgYkUOPqj1iCAnZuYW2vVf?=
 =?us-ascii?q?c8+i0jE9DhSoPCXZy2xrqG2ii9A9tRfG8BD1mNFXLhccKDQ+sNbySJZdZslyFB?=
 =?us-ascii?q?WbW/Roty6Be1qQWvzrNmKvbTqDQVsI+m2NVr6umWjxwr6DFvE+yb1GeCSXwymX?=
 =?us-ascii?q?kHECQr1qJyqlAo11GYzKJjiOZZH9EA2/QcGC4gMJTG0vdmBsq2EifIZNSUUxzu?=
 =?us-ascii?q?Fty8BDsrU/orztMOalo7ENKn2EPtxS2vVpocjbfOLZo46COU+2XrKs9ggyLD3b?=
 =?us-ascii?q?Mqhl8qWMYJMXC8i6di3xLeC47AjwOSkKP8JvdU5zLE6GrWlTnGh0pfSgMlFPyd?=
 =?us-ascii?q?BX0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CuAQCx/ARchxHrdtBigheBMYJPE4N5i?=
 =?us-ascii?q?HeNN3yGeoIRjUGBcxQYFIRAg0IiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjY?=
 =?us-ascii?q?FAgMaAQaCWwEBAQECAQECIAQfAQkpAwIBAQIGAQEKCw0CAiIEAgIDAR4SAQUBH?=
 =?us-ascii?q?AYTBYMcgXoIAQSZJzyLDXwzgyqFZoEOEnmLEYIWgRGCXTWFAYMEglcCkCeQGQc?=
 =?us-ascii?q?CkTwYgVuFEYo6mF4PIYElgg0zGiNQMQaCNYInFxKOEDwxgQeIdYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CuAQCx/ARchxHrdtBigheBMYJPE4N5iHeNN3yGeoIRjUG?=
 =?us-ascii?q?BcxQYFIRAg0IiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMaAQaCWwEBA?=
 =?us-ascii?q?QECAQECIAQfAQkpAwIBAQIGAQEKCw0CAiIEAgIDAR4SAQUBHAYTBYMcgXoIAQS?=
 =?us-ascii?q?ZJzyLDXwzgyqFZoEOEnmLEYIWgRGCXTWFAYMEglcCkCeQGQcCkTwYgVuFEYo6m?=
 =?us-ascii?q?F4PIYElgg0zGiNQMQaCNYInFxKOEDwxgQeIdYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="55811872"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 01:57:20 -0800
Received: from localhost ([::1]:47665 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTkye-00020w-8a
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 04:57:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:33826)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gTkxK-0001Ex-5Z
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 04:55:59 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gTkxH-0003r4-0U
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 04:55:58 -0500
Received: from mail-qt1-f196.google.com ([209.85.160.196]:46661)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gTkxG-0003qa-Sb
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 04:55:54 -0500
Received: by mail-qt1-f196.google.com with SMTP id y20so12935059qtm.13
	for <qemu-devel@nongnu.org>; Mon, 03 Dec 2018 01:55:54 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=YObORjZHHTG8swlBNxI52UJ2h9DQp+cG4TNvfVejVEw=;
	b=r6z270Yml1Fn7BN7Dje9ruNIie+TWCN/XtqVKG8jxR5peZRl1uPjifGbNiyfVfZO0V
	6DFRccPT32Zh75zaa0Lvp3opsIf5NSD6YyX2mBvA3lb3wXhiYwWNsxWLhBTx/75Z98H1
	x+zdFIcV5LM3tx8FHfc/zAadfBoANhR8EIBL3aWKNGhdnfOfCDLGUqrotm01T5/epLtS
	Pmsq6GzQ1So6kRcoinFD3OnM4YpC/k/6eLjboKmuobVHSZx/ttietssoaOcejP27CqKY
	FWl8abmZnfayxRkSO8Rne4qkaxzit+dz8GXvrhCa/zcDBlb6q46PTfsBh4n3tXWzwQ6B
	NfIQ==
X-Gm-Message-State: AA+aEWYX89DJ/l9wLG/ikghl7e8WoNoG7342cc6E5AGCAhNFjNt4hb7/
	/olA6qg1cKGcr2JGoFTTGfO1TpwrQ9yNWy3em4RmoA==
X-Google-Smtp-Source: AFSGD/W95OO8TBGfqmS5qQZSOA1tXJPiWXRAOmV9mDFBJP7fI2j/VCIEUppdxt14SPSsucs3CP/1JgzzscVkUGP8Yu0=
X-Received: by 2002:ac8:3312:: with SMTP id t18mr14698292qta.225.1543830954432;
	Mon, 03 Dec 2018 01:55:54 -0800 (PST)
MIME-Version: 1.0
References: <20181029125733.14597-1-marcandre.lureau@redhat.com>
	<20181029125733.14597-6-marcandre.lureau@redhat.com>
	<87mupn6l5v.fsf@dusky.pond.sub.org>
In-Reply-To: <87mupn6l5v.fsf@dusky.pond.sub.org>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Mon, 3 Dec 2018 13:55:43 +0400
Message-ID: <CAMxuvawM0PV0EaCcP+=3ZWPQF5LXLDvxgsrgD0shPzDTm_1_dQ@mail.gmail.com>
To: "Armbruster, Markus" <armbru@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.160.196
Subject: Re: [Qemu-devel] [PATCH v2 5/6] monitor: prevent inserting new
 monitors after cleanup
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Bonzini, Paolo" <pbonzini@redhat.com>, qemu-devel <qemu-devel@nongnu.org>,
	Peter Xu <peterx@redhat.com>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi
On Mon, Dec 3, 2018 at 12:59 PM Markus Armbruster <armbru@redhat.com> wrote=
:
>
> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
> > Add a monitor_destroyed global to check if monitor_cleanup() has been
> > already called. In this case, don't insert the new monitor in the
> > list, but free it instead.
> >
> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
>
> The commit message explains what the patch does, but not why we want to
> do it.
>
> > ---
> >  monitor.c | 14 ++++++++++++--
> >  1 file changed, 12 insertions(+), 2 deletions(-)
> >
> > diff --git a/monitor.c b/monitor.c
> > index fffeb27ef9..7fe89daa87 100644
> > --- a/monitor.c
> > +++ b/monitor.c
> > @@ -263,10 +263,11 @@ typedef struct QMPRequest QMPRequest;
> >  /* QMP checker flags */
> >  #define QMP_ACCEPT_UNKNOWNS 1
> >
> > -/* Protects mon_list, monitor_qapi_event_state.  */
> > +/* Protects mon_list, monitor_qapi_event_state, monitor_destroyed.  */
> >  static QemuMutex monitor_lock;
> >  static GHashTable *monitor_qapi_event_state;
> >  static QTAILQ_HEAD(mon_list, Monitor) mon_list;
> > +static bool monitor_destroyed;
> >
> >  /* Protects mon_fdsets */
> >  static QemuMutex mon_fdsets_lock;
> > @@ -4536,8 +4537,16 @@ void error_vprintf_unless_qmp(const char *fmt, v=
a_list ap)
> >  static void monitor_list_append(Monitor *mon)
> >  {
> >      qemu_mutex_lock(&monitor_lock);
> > -    QTAILQ_INSERT_HEAD(&mon_list, mon, entry);
> > +    if (!monitor_destroyed) {
> > +        QTAILQ_INSERT_HEAD(&mon_list, mon, entry);
> > +        mon =3D NULL;
> > +    }
> >      qemu_mutex_unlock(&monitor_lock);
> > +
> > +    if (mon) {
> > +        monitor_data_destroy(mon);
> > +        g_free(mon);
> > +    }
> >  }
> >
> >  static void monitor_qmp_setup_handlers_bh(void *opaque)
> > @@ -4631,6 +4640,7 @@ void monitor_cleanup(void)
> >
> >      /* Flush output buffers and destroy monitors */
> >      qemu_mutex_lock(&monitor_lock);
> > +    monitor_destroyed =3D true;
> >      QTAILQ_FOREACH_SAFE(mon, &mon_list, entry, next) {
> >          QTAILQ_REMOVE(&mon_list, mon, entry);
> >          monitor_flush(mon);
>
> monitor_cleanup() is one of the last things main() calls before it
> returns.  If another thread creates a monitor afterwards, it won't be
> cleaned up.  I figure that's the reason we want this patch.  There might
> be more serious issues than failure to clean up.  Please explain in your
> commit message.

Is this clearer?

    monitor_cleanup() is one of the last things main() calls before it
    returns.  In the following patch, monitor_cleanup() will release the
    monitor_lock during flushing. There may be pending commands to insert
    new monitors, which would modify the mon_list during iteration, and
    the clean-up could thus miss those new insertions.

    Add a monitor_destroyed global to check if monitor_cleanup() has been
    already called. In this case, don't insert the new monitor in the
    list, but free it instead.

> monitor_list_append() is called by monitor_init(), either directly right
> before it returns, or via a bottom half if mon->use_io_thread.
> Therefore, @monitor_destroyed can only be true if monitor_init()
> commonly runs in a thread other than the main thread.  Please give an
> example where it does, in your commit message.

