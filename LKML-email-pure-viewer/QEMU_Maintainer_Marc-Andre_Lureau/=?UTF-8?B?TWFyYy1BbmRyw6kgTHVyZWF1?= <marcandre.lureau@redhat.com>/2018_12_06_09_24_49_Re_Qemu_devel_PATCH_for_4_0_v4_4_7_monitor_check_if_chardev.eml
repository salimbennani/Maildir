Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:43:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D480458014B
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 01:25:32 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 01:25:32 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AVaRVIRXHLwDjwNPeE6nkFt27RL3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSGuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJfzqEcBoxWjHQmhBuHhxzBVinL4waE1zf8hHBra3Aw5Bd8CrG?=
 =?us-ascii?q?jYoMn3OaoUTOu7zLPIzTLGb/5O3jny8pLIfQw4rfyQW7J/bNDRzlMyHA3Dk1WQ?=
 =?us-ascii?q?s5LqMCmI1u8QtGWb6vBvVfizhGE9rQF+vyKvydk2honNm4IV0E7L+j9kwIsuP9?=
 =?us-ascii?q?23VlN0Yd6+H5tMrS2VK4x2QsY7TmxupS00yaUGtIalcCQWy5kr3QPTZ+GEfoSS?=
 =?us-ascii?q?/B7uWuacLS1liH9nYL6zmQq+/Ey6xuD/VsS4yktGoytZntXWq3wA0xPe586aQf?=
 =?us-ascii?q?Vn5EihwyyA1wXL5+FEP080ka3bJoYlwr4xjZoTrV/DEjX5mEXwka+abEIk+vKn?=
 =?us-ascii?q?6+j/Y7XmoIGTN5Nshw3gLqgjmdazDfklPgUNRWSX5+qx2b358UHkQrhGlvg2nb?=
 =?us-ascii?q?PYsJDeK8QbvKm5AwpN34Y69Rm/Ciqm3M0FknYZMlJKZhaHg5HyNFHJPfD4C+uw?=
 =?us-ascii?q?jEq3kDtsw/DGP77hDYvXInnMjbfsZbJ9609ayAouwtFT/ZNUCrcdIP3tXk/9rs?=
 =?us-ascii?q?DXDhg8MwGvxebnD9N91owYWWKSGKOZN7nSsVCQ6uI1P+aMfJMVuCr6K/U94/7u?=
 =?us-ascii?q?jHw5lkEHcaimwJsac3S4HvVgI0WEbnvgmNYBEWEWvgUgSOzmkkGNUTlWZyX6Yq?=
 =?us-ascii?q?Qn+ztuCJ66FZyRAcepgaedx2G9GZtZYH0ADUqDVnLhdoGBUvFLbzqOI8hniXsd?=
 =?us-ascii?q?WL28DoMsyxyq5zL80Kdte+/d+ykEssD62d1oouHeixw2sCZ5FtmQyH2lSWZykW?=
 =?us-ascii?q?UVATgs0/dkvEZ/x1yfhLV+mOFSDtdJ5vlEATs9YNT11elwEc3pRg/bOp+sQUyl?=
 =?us-ascii?q?X87sSWU4VNc72cImeUtxG9y+yBvE2nz5LaUSkumuDYY/t4va02Jwb+Jg0XvPye?=
 =?us-ascii?q?F1ilA8ScJJOXerwKpi7QXaGqbTnkmZnrrsfqMZin2evFyfxHaD6RkLGDV7Vr/I?=
 =?us-ascii?q?CDVGPhPb?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CjAADH6QhchxHrdtBkHgEGBwaBVAYLA?=
 =?us-ascii?q?YEwgk8Tg3qIeIsugg2KCI1ZgV8UGBSEQIMVIjcGDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOL4I2BQIDGgEGglsBAQEBAgEBAiAjCiIHAwMBAgYBAQoLDQICEREEAgIDA?=
 =?us-ascii?q?R4SAQUBHAYTBYMcgXoIAQSaDzyLDYEviR+BDhJ5ixOCFoQjhDxFP4JFglcCiyO?=
 =?us-ascii?q?FDI9VVQcCkUIYgVuPVYoOjmUPIYE7SYEuMxojgQEGgjWCUI4QPDGBB4hlgXcBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0CjAADH6QhchxHrdtBkHgEGBwaBVAYLAYEwgk8Tg3qIeIs?=
 =?us-ascii?q?ugg2KCI1ZgV8UGBSEQIMVIjcGDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDG?=
 =?us-ascii?q?gEGglsBAQEBAgEBAiAjCiIHAwMBAgYBAQoLDQICEREEAgIDAR4SAQUBHAYTBYM?=
 =?us-ascii?q?cgXoIAQSaDzyLDYEviR+BDhJ5ixOCFoQjhDxFP4JFglcCiyOFDI9VVQcCkUIYg?=
 =?us-ascii?q?VuPVYoOjmUPIYE7SYEuMxojgQEGgjWCUI4QPDGBB4hlgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,321,1539673200"; 
   d="scan'208";a="55158766"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 01:25:28 -0800
Received: from localhost ([::1]:39743 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUpuR-0001dD-D8
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 04:25:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59140)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gUpuH-0001Yp-07
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 04:25:17 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gUpu8-0005m3-4N
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 04:25:15 -0500
Received: from mail-qt1-f194.google.com ([209.85.160.194]:34942)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gUpu2-0005l9-P5
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 04:25:04 -0500
Received: by mail-qt1-f194.google.com with SMTP id v11so25541323qtc.2
	for <qemu-devel@nongnu.org>; Thu, 06 Dec 2018 01:25:01 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=r2HB7Q3+0EUonBswr2YnaPdbSCr9UjRhhOwcW7vSF/Q=;
	b=iw0AT2uXLJDvkiSZ5nE9GWlSDYPlS04NN3v0Ujvcc7H5LDoo24SMTUB2U5WnRcxqze
	qwQF1VaIGkJZaTAANa4PH2xrJjr55A4skg3vVnYSax4fiVOQl94jvsTsYdNy4NBmJCjn
	cDaKn0e95HooiqjMp5349cUvNeN2ZHBaZ6rOG7T8c+O+VMkiN/hzwIYFutSUBXQpqPJJ
	kk+zdLorJXyEvxzGU0ZK08oPlVRaZ0KH282weJ/mllJI0VR3X2pxQbUsibmaCGvpKyY6
	DEF50hBc4JDmBhhumG9Uv7rzUfEydwlcU/BLQ9Zl1egG/rcNIOyy/mqYpFnudk0F6ljm
	/QGA==
X-Gm-Message-State: AA+aEWbQAJd4GuV4TrhLiFbnP6ZmmaTt9WfEfV/SowC0lDkZxCo4ITnY
	hExCnVm8DOB6q1yxyBt6vnivGxY61EPX69sGBmis1A==
X-Google-Smtp-Source: AFSGD/WdEHAw6mhdf8CQDGOVmhQkSI4UY+71awyMOc3zTVIMwpG4FKZsqUuGFlFjf9ekz39zLqxFosmzDKdrKAv30X4=
X-Received: by 2002:a0c:f212:: with SMTP id h18mr27210909qvk.106.1544088300750;
	Thu, 06 Dec 2018 01:25:00 -0800 (PST)
MIME-Version: 1.0
References: <20181205203737.9011-1-marcandre.lureau@redhat.com>
	<20181205203737.9011-5-marcandre.lureau@redhat.com>
	<87bm5zkx0o.fsf@dusky.pond.sub.org>
	<CAMxuvazPAjrEt2nyEVSwsVhap-dEGGXSa-N1GcdgK-UuhMfN+Q@mail.gmail.com>
	<87tvjrhvb4.fsf@dusky.pond.sub.org>
In-Reply-To: <87tvjrhvb4.fsf@dusky.pond.sub.org>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Thu, 6 Dec 2018 13:24:49 +0400
Message-ID: <CAMxuvawvii_FQCaZLAhrOmKZsVRZCbQw1Q67=wuajH1idszt9w@mail.gmail.com>
To: "Armbruster, Markus" <armbru@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.160.194
Subject: Re: [Qemu-devel] [PATCH for-4.0 v4 4/7] monitor: check if chardev
 can switch gcontext for OOB
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: lizhijian@cn.fujitsu.com, Jason Wang <jasowang@redhat.com>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>,
	Peter Xu <peterx@redhat.com>, qemu-devel <qemu-devel@nongnu.org>,
	zhangckid@gmail.com, "Bonzini, Paolo" <pbonzini@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi

On Thu, Dec 6, 2018 at 1:13 PM Markus Armbruster <armbru@redhat.com> wrote:
>
> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
> > Hi
> > On Thu, Dec 6, 2018 at 10:08 AM Markus Armbruster <armbru@redhat.com> w=
rote:
> >>
> >> One more question...
> >>
> >> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
> >>
> >> > Not all backends are able to switch gcontext. Those backends cannot
> >> > drive a OOB monitor (the monitor would then be blocking on main
> >> > thread).
> >> >
> >> > For example, ringbuf, spice, or more esoteric input chardevs like
> >> > braille or MUX.
> >>
> >> These chardevs don't provide QEMU_CHAR_FEATURE_GCONTEXT.
> >>
> >> > We currently forbid MUX because not all frontends are ready to run
> >> > outside main loop. Extend to add a context-switching feature check.
> >>
> >> Why check CHARDEV_IS_MUX() when chardev-mux already fails the
> >> qemu_char_feature_gcontext(chr, QEMU_CHAR_FEATURE_GCONTEXT) check?
> >>
> >
> >
> > It currently fails, but with "[PATCH 4/9] char: update the mux
> > hanlders in class callback", it won't.
>
> That's because it makes chardev-mux implement chr_update_read_handler(),
> and "[PATCH 3/7] char: add a QEMU_CHAR_FEATURE_GCONTEXT flag" assumes
> that a chardev implementing that "will take the updated gcontext into
> account".
>
> Sounds to me as if "[PATCH 4/9] char: update the mux hanlders in class
> callback" violates that assumption.  Why am I wrong?

The mux should be gcontext-feature neutral, or it should in fact
reflects the backend capability, since it is entirely driven by it.

For now, it is simpler to keep it mark as unsupport, and I'll probably
update the aforementioned patch when resubmitting.

> > But the main reason to keep an explicit check on mux is that the
> > monitor frontend doesn't know if other mux frontends can be called
> > from any context (when you set a context, it is set on the backend
> > side, events are dispatched by the backend).
> >
> > We may want to mix this extra frontend-side capability limitation with
> > FEATURE_GCONTEXT flag, but they are fundamentally different: to be
> > able to set a backend context VS attached mux frontends can be
> > dispatched from any context.
>
> I'm afraid I can't yet see the full picture.
>
> The goal of this series PATCH 3-5 is to catch certain thread-related
> badness in chardevs before it can happen.

Yes, as the context is associated with a thread. If a backend is not
able to switch context, it will keep dispatching in the default
context, which may have undesirable results for the frontend.

>
> Apparently, there are two separate kinds of badness:
>
> * The chardev backend may fail to cope with changed gcontext.  I don't
>   understand how exactly the backends screw up, but I doubt I have to
>   right now.
>
> * The chardev frontend may fail to... what exactly?  And why is only
>   chardev-mux affected?

For some reason, the chardev API let the frontend decide which context
should be used for the dispatch.

This is quite fine when you have a one-to-one relationship between
backend and frontend (as long as the backend complies with context
switching, ie FEATURE_GCONTEXT).

But in a one-to-many, as is the case with MUX, things get more
complicated, because one frontend may want to switch the context
(typically an oob monitor, moving dispatch to the iothread) while
another frontend (typically, a serial device) may not expect to be
dispatched from a different thread than the default thread.

As you can see, MUX has two problems wrt context switching: backend
and frontends. I think it would be safer to mark MUX as
!FEATURE_GCONTEXT (although in fact, you could use it if you really
now what you do with backend & frontends)

>
> [...]

