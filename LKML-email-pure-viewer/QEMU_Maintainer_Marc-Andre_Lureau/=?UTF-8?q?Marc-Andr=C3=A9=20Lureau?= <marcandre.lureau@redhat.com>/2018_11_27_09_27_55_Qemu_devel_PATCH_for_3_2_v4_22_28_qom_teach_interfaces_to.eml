Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 19:19:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 900C05803C2
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 01:45:17 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 01:45:17 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Af78+aBcnQub0WMPQajKzS6FolGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW/YB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgq1ZrhKuqABwzYHJboGNNvdwfKzQcc4USGZdQMlRTDdMAp+l?=
 =?us-ascii?q?b4YVE+YNIfpUoov7qlATrRW+Hw6sBOb3xzFPnHD2x7E13/09HAHAwQMgBcgJu2?=
 =?us-ascii?q?nSotXoLqcdT/q6zLTVxjjEavNZwy3955TSfRAnvP6MR6x/fdDVyUkyDQPKkE+f?=
 =?us-ascii?q?qZH+MjOPyOsCrmib4PB8Ve61l2EnrARxryGpy8wxiYfJnpoYxk7Y+Sh62oo5OM?=
 =?us-ascii?q?C0RU1hbdK6HpZdtzuWO5Z0T886XW1kpCI3xqcbtZO1YiQG0okryh3RZvCdbYSF?=
 =?us-ascii?q?4RTuX/uLLzhinnJqYre/ig6y8Ue+zu38UdG50FJLripejtnMrWoB1xPV6siaUP?=
 =?us-ascii?q?d9+V2h2TmX2wDS7OFLP1w0mLLFJ5I9wbM8jIcfvVnAEyPshkn7gq+bel859uWq?=
 =?us-ascii?q?8+jnZ6/ppp6YN496kAH+NaEul9SmAesmNwgOQnGX9vmi273940L5RKxGgeYxkq?=
 =?us-ascii?q?nEtpDVOdoUprW+Dw9R04Yj6AiwAy2p0dQFhXQHKFNFeBSaj4nmIV3OIfb4Deuh?=
 =?us-ascii?q?jFSoijtk2/fGPrj6D5XLKXjDlrjhfbBg60JGzwoz199f64pOCr4dOPLzRlPxtN?=
 =?us-ascii?q?vAAx89Mgy0wPjoBM9y14MDQm+PBq6ZMKXPsV6H/O4vIu+MZJMLtzb5MfQq+/nu?=
 =?us-ascii?q?jXpq0WIbZrSjiJsLdGijTLMhJ0SCfWGqhNAHHmEX+A0kQ6vvgVyGVDdVIHGqQ6?=
 =?us-ascii?q?M74Cp8EY+jEMLPS56ghO+82jymFMhTb2FCFlfeCHrtasCIVukBbGeIL9Z8nycY?=
 =?us-ascii?q?fb6mTYAnyFeprgCt0KdtLOff5ngFs4n+3sN+/ezZmEIO8mltAsGAlm2AUWxwtm?=
 =?us-ascii?q?UPQTAwweZ4u0Mu5E2E1P1diuZTUPVV6+nIGiMnL5PV0qQuDtnoUQvHcs2EDlK7?=
 =?us-ascii?q?WNivHBkrQ94xysNIaEF4TYbxxivf1janVudG34eAA4Y5p/rR?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAABTEf1bhxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJig3mIGF+kdIFxFhgUiHIiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?vgjYFAgMYCYJcAwMBAiAEHwopAwMBAgYBASQCIgQCAgMBUxkFgxyCAgEEpS18M?=
 =?us-ascii?q?4VAg2WBDYELiwKCFolxgjeCVwKPIHSPeAcCkSULGIlShzmYN4FGgg0zGiODPII?=
 =?us-ascii?q?nFxKOEDwxgQcci1eBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AWAABTEf1bhxHrdtBkHQEBBQEHBQGBUQgBCwGBMIJig3m?=
 =?us-ascii?q?IGF+kdIFxFhgUiHIiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMYCYJcA?=
 =?us-ascii?q?wMBAiAEHwopAwMBAgYBASQCIgQCAgMBUxkFgxyCAgEEpS18M4VAg2WBDYELiwK?=
 =?us-ascii?q?CFolxgjeCVwKPIHSPeAcCkSULGIlShzmYN4FGgg0zGiODPIInFxKOEDwxgQcci?=
 =?us-ascii?q?1eBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="53472059"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 01:45:16 -0800
Received: from localhost ([::1]:40936 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRZvg-0000yX-1r
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 04:45:16 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:48119)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gRZiQ-0004tt-6W
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:31:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gRZiP-0006Rv-Cy
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:31:34 -0500
Received: from mx1.redhat.com ([209.132.183.28]:41732)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gRZiP-0006Qg-5M
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 04:31:33 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 7E4B1307DAC1;
	Tue, 27 Nov 2018 09:31:32 +0000 (UTC)
Received: from localhost (ovpn-112-28.ams2.redhat.com [10.36.112.28])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 7A17B5DD63;
	Tue, 27 Nov 2018 09:31:31 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Tue, 27 Nov 2018 13:27:55 +0400
Message-Id: <20181127092801.21777-23-marcandre.lureau@redhat.com>
In-Reply-To: <20181127092801.21777-1-marcandre.lureau@redhat.com>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.42]);
	Tue, 27 Nov 2018 09:31:32 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH for-3.2 v4 22/28] qom: teach interfaces to
 implement post-init
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>,
	=?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The following patches are going to implement post_init callbacks for
settings properties. The interface post_init are called before the
instance post_init, so the default interface behaviour can be
overriden if necessary.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
---
 qom/object.c                |  8 +++++++-
 tests/check-qom-interface.c | 23 +++++++++++++++++++++--
 2 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/qom/object.c b/qom/object.c
index aa6f3a2a71..8fa59026c5 100644
--- a/qom/object.c
+++ b/qom/object.c
@@ -288,7 +288,6 @@ static void type_initialize(TypeImpl *ti)
         assert(ti->instance_size =3D=3D 0);
         assert(ti->abstract);
         assert(!ti->instance_init);
-        assert(!ti->instance_post_init);
         assert(!ti->instance_finalize);
         assert(!ti->num_interfaces);
     }
@@ -361,6 +360,13 @@ static void object_init_with_type(Object *obj, TypeI=
mpl *ti)
=20
 static void object_post_init_with_type(Object *obj, TypeImpl *ti)
 {
+    GSList *e;
+
+    for (e =3D ti->class->interfaces; e; e =3D e->next) {
+        TypeImpl *itype =3D OBJECT_CLASS(e->data)->type;
+        object_post_init_with_type(obj, itype);
+    }
+
     if (ti->instance_post_init) {
         ti->instance_post_init(obj);
     }
diff --git a/tests/check-qom-interface.c b/tests/check-qom-interface.c
index 2177f0dce5..cd2dd6dcee 100644
--- a/tests/check-qom-interface.c
+++ b/tests/check-qom-interface.c
@@ -31,9 +31,27 @@ typedef struct TestIfClass {
     uint32_t test;
 } TestIfClass;
=20
+typedef struct DirectImpl {
+    Object parent_obj;
+
+    bool if_post_init;
+} DirectImpl;
+
+#define TYPE_DIRECT_IMPL "direct-impl"
+#define DIRECT_IMPL(obj) \
+    OBJECT_CHECK(DirectImpl, (obj), TYPE_DIRECT_IMPL)
+
+static void test_if_post_init(Object *obj)
+{
+    DirectImpl *d =3D DIRECT_IMPL(obj);
+
+    d->if_post_init =3D true;
+}
+
 static const TypeInfo test_if_info =3D {
     .name          =3D TYPE_TEST_IF,
     .parent        =3D TYPE_INTERFACE,
+    .instance_post_init =3D test_if_post_init,
     .class_size =3D sizeof(TestIfClass),
 };
=20
@@ -47,11 +65,10 @@ static void test_class_init(ObjectClass *oc, void *da=
ta)
     tc->test =3D PATTERN;
 }
=20
-#define TYPE_DIRECT_IMPL "direct-impl"
-
 static const TypeInfo direct_impl_info =3D {
     .name =3D TYPE_DIRECT_IMPL,
     .parent =3D TYPE_OBJECT,
+    .instance_size =3D sizeof(DirectImpl),
     .class_init =3D test_class_init,
     .interfaces =3D (InterfaceInfo[]) {
         { TYPE_TEST_IF },
@@ -70,10 +87,12 @@ static void test_interface_impl(const char *type)
 {
     Object *obj =3D object_new(type);
     TestIf *iobj =3D TEST_IF(obj);
+    DirectImpl *d =3D DIRECT_IMPL(obj);
     TestIfClass *ioc =3D TEST_IF_GET_CLASS(iobj);
=20
     g_assert(iobj);
     g_assert(ioc->test =3D=3D PATTERN);
+    g_assert(d->if_post_init =3D=3D true);
     object_unref(obj);
 }
=20
--=20
2.20.0.rc1


