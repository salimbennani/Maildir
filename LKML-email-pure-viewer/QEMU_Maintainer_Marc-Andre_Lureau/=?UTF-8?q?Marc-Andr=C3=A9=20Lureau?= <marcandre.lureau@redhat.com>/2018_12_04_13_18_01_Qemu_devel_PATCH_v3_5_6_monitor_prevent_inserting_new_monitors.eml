Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:38:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B6754580443
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 05:24:45 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 05:24:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AAeegsBGoPIMnhXPb2OfTC51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7yrsmwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfDI2y?=
 =?us-ascii?q?bIkAD+QOMulEoIfzukMOoBm8CwSjGe/ixCNEiWHt3aAhz+QhCBvL0BA8E94Ssn?=
 =?us-ascii?q?nZqsj+OqcIUeCyyanF1TLNYOlM2Tjh8YTFbhYhruyWXbVqbMHfz1QvFxnbgVqK?=
 =?us-ascii?q?tIzuIjSY1uEXvGiB8+VvT+SvhHM9qw5vuDSvwtosipPXiY0P11DJ7j95z5goKt?=
 =?us-ascii?q?24UkF7fcSoH4dXtyGfLoZ7RN4pTWJwuCsi1LEKpZ22cDIXxJg6xBPTceKLfoaI?=
 =?us-ascii?q?7x75SeqcIy90iGx5dL+7nRq+7EatxvPmWsWp01tHoDBJnsfPu30Lyhfd8NKISu?=
 =?us-ascii?q?Fn8UekwTuP1x7c6uVDIU0skarbKoUhwqIrlpYJvkTDGDL2lF/xjK+MeUUo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwLkPqgzh8CyAv40PhYAUmWb4+iwyb/u8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5GhFa0oM+6xqmEjipzsoYkmcDLF5cYx2HiJXpO1fSL//mFvez?=
 =?us-ascii?q?hFCskDZox//YJLHgDYjNI2DHkLfge7Z99kFdxBAyzdBZ+5JbFLUBLOjvVU/2sd?=
 =?us-ascii?q?zVFRk5Mwuyw+boDtV9y5kSWWWVAq+WKK/Sq0OH5vozI+mQY48YoDL9K/km5/Hw?=
 =?us-ascii?q?l3M4lkIdcLKt3ZsWbnC4A/tnL1+YYXrqntcOD2MKshAiQ+ztjV3RGQNVfGu4Cq?=
 =?us-ascii?q?Ig+ikgWsXhCYbYWpvrhruH0yGmWJpMaSdDA1GIFH7uMIKcR/YLbjnVO8Jkj3kI?=
 =?us-ascii?q?WKasT9wc0wqzvlr/wrtjMu2G4yAdqNfv2cZ446jJmAgv+CdoJ8Ka1W6LUidzhG?=
 =?us-ascii?q?xfXCI83q10vRlgzEye27Nzmf1SGI9v4KZQXwIncJLR0eF+I9b1XA3HY5GOUln1?=
 =?us-ascii?q?bM+hBGQUR8g6hvYIb1z8U/G/lB3KwmL+BrYPnLWNCIY5tKbBxXX4Ou5nxnrG3b?=
 =?us-ascii?q?VnhF4jFJgcfVa6j7JyolCAT7XClF+UwuPzLfwR?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0COAgDLfwZchxHrdtBjHgEGBwaBZYExg?=
 =?us-ascii?q?mKDeYh4iy+DCZg+FhgUiBEiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxo?=
 =?us-ascii?q?BBoJcAwMBAiAjCikDAwECBgEBJAIiBAICAwFTGQUWgwaCAgEEpFCBL4VAg2aBD?=
 =?us-ascii?q?YELixOCFoERgl2GA4I3glcCkCuQHAcCkTYLGIlbh0uYdYFdgXYzGiNQgmyCJxc?=
 =?us-ascii?q?SjhA8MYEHHIh/gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0COAgDLfwZchxHrdtBjHgEGBwaBZYExgmKDeYh4iy+DCZg?=
 =?us-ascii?q?+FhgUiBEiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJcAwMBAiAjC?=
 =?us-ascii?q?ikDAwECBgEBJAIiBAICAwFTGQUWgwaCAgEEpFCBL4VAg2aBDYELixOCFoERgl2?=
 =?us-ascii?q?GA4I3glcCkCuQHAcCkTYLGIlbh0uYdYFdgXYzGiNQgmyCJxcSjhA8MYEHHIh/g?=
 =?us-ascii?q?XcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="53749000"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 05:24:27 -0800
Received: from localhost ([::1]:56717 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUAgd-0004L6-9M
	for like.xu@linux.intel.com; Tue, 04 Dec 2018 08:24:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54617)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gUAbS-0005Z4-Q5
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:19:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gUAbP-0002df-Mb
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:19:06 -0500
Received: from mx1.redhat.com ([209.132.183.28]:57256)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gUAbP-0002cd-Gu
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:19:03 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D91C25F
	for <qemu-devel@nongnu.org>; Tue,  4 Dec 2018 13:19:02 +0000 (UTC)
Received: from localhost (ovpn-112-31.ams2.redhat.com [10.36.112.31])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 533AD611D2;
	Tue,  4 Dec 2018 13:18:56 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Tue,  4 Dec 2018 17:18:01 +0400
Message-Id: <20181204131802.16885-6-marcandre.lureau@redhat.com>
In-Reply-To: <20181204131802.16885-1-marcandre.lureau@redhat.com>
References: <20181204131802.16885-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.29]);
	Tue, 04 Dec 2018 13:19:02 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v3 5/6] monitor: prevent inserting new monitors
 after cleanup
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>,
	Markus Armbruster <armbru@redhat.com>, peterx@redhat.com,
	=?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

monitor_cleanup() is one of the last things main() calls before it
returns.  In the following patch, monitor_cleanup() will release the
monitor_lock during flushing. There may be pending commands to insert
new monitors, which would modify the mon_list during iteration, and
the clean-up could thus miss those new insertions.

Add a monitor_destroyed global to check if monitor_cleanup() has been
already called. In this case, don't insert the new monitor in the
list, but free it instead.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
---
 monitor.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/monitor.c b/monitor.c
index 25cf4223e8..f0256bdec5 100644
--- a/monitor.c
+++ b/monitor.c
@@ -263,10 +263,11 @@ typedef struct QMPRequest QMPRequest;
 /* QMP checker flags */
 #define QMP_ACCEPT_UNKNOWNS 1
=20
-/* Protects mon_list, monitor_qapi_event_state.  */
+/* Protects mon_list, monitor_qapi_event_state, monitor_destroyed.  */
 static QemuMutex monitor_lock;
 static GHashTable *monitor_qapi_event_state;
 static QTAILQ_HEAD(mon_list, Monitor) mon_list;
+static bool monitor_destroyed;
=20
 /* Protects mon_fdsets */
 static QemuMutex mon_fdsets_lock;
@@ -4538,8 +4539,21 @@ void error_vprintf_unless_qmp(const char *fmt, va_=
list ap)
 static void monitor_list_append(Monitor *mon)
 {
     qemu_mutex_lock(&monitor_lock);
-    QTAILQ_INSERT_HEAD(&mon_list, mon, entry);
+    /*
+     * This prevents inserting new monitors during monitor_cleanup().
+     * A cleaner solution would involve the main thread telling other
+     * threads to terminate, waiting for their termination.
+     */
+    if (!monitor_destroyed) {
+        QTAILQ_INSERT_HEAD(&mon_list, mon, entry);
+        mon =3D NULL;
+    }
     qemu_mutex_unlock(&monitor_lock);
+
+    if (mon) {
+        monitor_data_destroy(mon);
+        g_free(mon);
+    }
 }
=20
 static void monitor_qmp_setup_handlers_bh(void *opaque)
@@ -4635,6 +4649,7 @@ void monitor_cleanup(void)
=20
     /* Flush output buffers and destroy monitors */
     qemu_mutex_lock(&monitor_lock);
+    monitor_destroyed =3D true;
     QTAILQ_FOREACH_SAFE(mon, &mon_list, entry, next) {
         QTAILQ_REMOVE(&mon_list, mon, entry);
         monitor_flush(mon);
--=20
2.20.0.rc1


