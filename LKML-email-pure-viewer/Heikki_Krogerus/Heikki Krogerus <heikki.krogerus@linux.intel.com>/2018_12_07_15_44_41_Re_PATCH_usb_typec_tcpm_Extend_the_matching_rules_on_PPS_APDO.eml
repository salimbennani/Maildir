Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:50:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1C45F5804F7;
	Fri,  7 Dec 2018 07:44:50 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 07:44:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIOjCqxzg9g1qXm7XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4fLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJcAY28?=
 =?us-ascii?q?YYQAAPYcMulaoYb9vEMOoBmlCAmwGO/j1iNEimPs0KEk1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?narsv6NKYRUeC2zanD0DDNb+lR2Tfy9ofIaA0hoeqRVr93ccre10gvFwDGjlWR?=
 =?us-ascii?q?s4DlPCmV1uMCs2eF9epgSPmvhnUjqwFwpDiv28gthpPIhoIT1lDL6yF5zJwpKt?=
 =?us-ascii?q?2/TU52eNipG4ZTuSGCL4Z6XN8uTmVytConxLAKp4S3cDUJxZg73RLSav6Kf5CV?=
 =?us-ascii?q?7h/nSuqdOzd1iXJ/dL+/mRq+61Wsx+3hWsSyzV1EtDBKksPWuXAIzxHT6taISv?=
 =?us-ascii?q?96/kq5xzaP2B7c6vteLUA3i6XbMZghzaA0lpYJtkTDBCD2lF33jK+QaEok5vCl?=
 =?us-ascii?q?5/r7brjivJOQKoF5hh/kPqgzmcGzHf40PwkMUmSD/OSzzrzj/Un3QLVQif02l7?=
 =?us-ascii?q?HUsJTbJcQdu664DBZZ0oU95BalCTepztAYkWAALFNLfhKIkZLpNkrQIPD3E/i/?=
 =?us-ascii?q?mU6gkDR1yPDcOL3uHJHNImLEkLf7crZx81RcxxYrzdBD+5JUDakMIPbyWk/yqt?=
 =?us-ascii?q?PUFBA4MxGvzubjCdV90J4eWG2VDq+YNqPSrUGH5uY1L+aQY48VvS73K+I56P72?=
 =?us-ascii?q?kX85hVgdcLGp3ZQNaXC4Au5pI0KDbXrsn9cOC2EKvgUlQezuiV2CVyNTZnmoU6?=
 =?us-ascii?q?I94DE7FJypDYPZSo+xh7yB2T+xHodKaWBeFlCMDXDoep2GW/cLdi2eOMxhkjsC?=
 =?us-ascii?q?VbinTI8szhWutA78y7p6IevY4CwYtZT/1Ndr4+3fjw099TtxD86FyWGCU3l0nn?=
 =?us-ascii?q?8URz8xxK1wu1d9yleE0ah7mfBYD8Zc5/FSXwc+NJ7cyfF6Ct/oVgLAeNeJVEip?=
 =?us-ascii?q?QtG8DT4tSdIxxscEY1xhFNW6khDDwy2qDqcWl7ORApw46Kbc33nrKMZ7xHbLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajK?=
 =?us-ascii?q?QGoQZlXIotjj5kPNVbmuCa85PQtHzsKCLqhKatjtjVhdQPfjOdLeY3++mmuqBB?=
 =?us-ascii?q?aIwK+MY5Tue2kHwCrdD00EmRgJ/XmaLQg+Gjuho2XGATNzD13vfV3j/fN+qHyh?=
 =?us-ascii?q?SE801B+Fb0t62rqx+x4Vg+GcSvwJ0rIFvichtyt7HFKn093KDNqAohJrfL9Abt?=
 =?us-ascii?q?Ml/FdHyWXZuhRhPpyhKqBigUIecwR3vk/0yxV7EIJAkdIurHMrygpyJrmV0FdA?=
 =?us-ascii?q?dzOewJDxNafbKmj0/BCzdaHW3kvS38qR+qcK8P44sUnsvBm1Fko+9HVqy8Na03?=
 =?us-ascii?q?+C6ZTFEgUTUYj9XV0q9xdnvb7aZCo954TK1XB3Nam0sznC288mBec/yxagectf?=
 =?us-ascii?q?P72AFAPoD8IaAM2uIvQwm1e1dhIEIPxS9KksMsKmavuKwrKkMPxhnTKml2tH5o?=
 =?us-ascii?q?9931mI9yp9TO7IwpkEz+uZ3guBSzfzklOhvtrrloBDYDEYBnC/xjT8BI5Neq1y?=
 =?us-ascii?q?ep4GCX2vI8Kr3Np+nYPiW3lC+F6lGVwGws6pdQOOYFPn2Q1fyFoYoWagmSu+1D?=
 =?us-ascii?q?F0lzAprqyC3C3B2ejidRwHOnJVS2lml1vjPY+0j9UCVkiycwcpjAel5Vr9x6VD?=
 =?us-ascii?q?pKV/LnPfQEdScyjtMmFiVLC9tr6DY85J9ZMpvj9bUOW6YVCGVLH9pwEW3D/kH2?=
 =?us-ascii?q?tb3Do7bS2luo3lnxxmj2KQNHRzo2DDecFzxhff48bQReVL0ToFRyl4iD/XCUa6?=
 =?us-ascii?q?P9Sy+dWUlpHDsv2xVm67V51TdzXrwp2EtCeh+WJqBhi/leipmtL7CQg6zTP719?=
 =?us-ascii?q?5yWCTIthn8ZZPn16a7MeJhZURoAF7868xnGoBxiIcwhZcQ2WQEiZWR53YIjWDz?=
 =?us-ascii?q?MdBD06LkcHUNXSILw8LS4AX9201sNHOJy5j5VnWA2MRhYda6b3gS2iI86cBKFa?=
 =?us-ascii?q?iV4KZFnStzvlq3swbRbeJhkTcazPsk8GQajP0RuAox0iWdBagfHUxZPSzvjRuE?=
 =?us-ascii?q?9d6/o7tMZGazb7ewzlFxks67DLGNuQxcXHf5epE/HS5/9Ml/MVTM0GHt5YHgYt?=
 =?us-ascii?q?XfcdUTthiMmRfak+dVMI4xluYNhSd/JWL9unglx/Q6jBN025G6oZOHK35s/K+i?=
 =?us-ascii?q?Bh5YNzv1Z94c+z33jKZemNqW0J6rHpl7BjoLW57oR+qyED0OrfTnKxqOEDokp3?=
 =?us-ascii?q?iAA7XfGguf6Fp8o3LLDpCmLHWXJHgfzdV/SxiRPk1fgAYIXDokmp41DBylxMvk?=
 =?us-ascii?q?cE1h/DAe+kb4qgdQyuJvLxT/UH3QpAK2ZTcvUpSfMABa7gJf50fWLMye6Ph8Hz?=
 =?us-ascii?q?pD852lrQyNLHGbZgtSAWEIXEyEG07sPr206dbc9OiYA/K0L+HSbrWWtexeS/CI?=
 =?us-ascii?q?yIqv04th4jaML9iPMWNkD/EhwUpDWnZ5G8vCljULSiwXkT/NbsGBqBe9/C13st?=
 =?us-ascii?q?6w8PDxVA3z4ouPDqNYMc9z9BCunaeDK+mQiT55KTlG15MMxnzIyLkF0F4RkSFu?=
 =?us-ascii?q?cDatHqoatS7QV6LdgatXDx8dayNuO8pE9aM83g9ROcHFjtP5zKJ3jvkwC11dT1?=
 =?us-ascii?q?zuhtmpZdAWI2G6LF7IHluLO6+cJTLVw8D7e6e8SbxLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7PcdrjT03xL04nG/FOXQAPj?=
 =?us-ascii?q?h8bUxNqKad7SdZgvV5BmxA4WBpLeiCmyaF8ebYLowavudsAiRxj+ha+mg1y6NJ?=
 =?us-ascii?q?7CFYQ/x4gCvTocRoo1Gjk+mPzCJoURtOqjlRgoKLsl5vOaHY9plGRHbF8wgB7W?=
 =?us-ascii?q?SWCxQWudRlDsfjtLxXytjKx+rPL2Jh4tbZtfcHAICAK9ODPWY6NjLmHznbCAZD?=
 =?us-ascii?q?RjmuYzLxnUtYxdGf936Wr9AZsJ/jlYATUfcPVFE0FfAbTEd/G9MPOopsdjcll6?=
 =?us-ascii?q?OLys8O+Xe66hLWQZMJ7dj8SvuODKC3e36ihr5eak5NmOugIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAABMlApch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBg2snmCSCDRSXO4EkA0wUGBMBh10iNgcNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKGAklAwwFSRMFg?=
 =?us-ascii?q?xyCAgWmQTOKLowigVc/g3UuhGURg0CCJgKJN5ZbVQcCgiEEjxsLGIl7hz2ZG4F?=
 =?us-ascii?q?NCF2BIU0jgzyQXT0BATEBgQQBAYplAQE?=
X-IPAS-Result: =?us-ascii?q?A0ACAABMlApch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBg2snmCSCDRSXO4EkA0wUGBMBh10iNgcNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKGAklAwwFSRMFgxyCAgWmQTOKLow?=
 =?us-ascii?q?igVc/g3UuhGURg0CCJgKJN5ZbVQcCgiEEjxsLGIl7hz2ZG4FNCF2BIU0jgzyQX?=
 =?us-ascii?q?T0BATEBgQQBAYplAQE?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="65805135"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 07 Dec 2018 07:44:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726141AbeLGPoq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 10:44:46 -0500
Received: from mga17.intel.com ([192.55.52.151]:35138 "EHLO mga17.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726010AbeLGPop (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 10:44:45 -0500
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
  by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 07:44:45 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="127997968"
Received: from kuha.fi.intel.com ([10.237.72.189])
  by fmsmga001.fm.intel.com with SMTP; 07 Dec 2018 07:44:42 -0800
Received: by kuha.fi.intel.com (sSMTP sendmail emulation); Fri, 07 Dec 2018 17:44:41 +0200
Date: Fri, 7 Dec 2018 17:44:41 +0200
From: Heikki Krogerus <heikki.krogerus@linux.intel.com>
To: Kyle Tso <kyletso@google.com>
Cc: linux@roeck-us.net, gregkh@linuxfoundation.org, badhri@google.com,
        linux-usb@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH] usb: typec: tcpm: Extend the matching rules on PPS APDO
 selection
Message-ID: <20181207154441.GA30561@kuha.fi.intel.com>
References: <20181206030227.9507-1-kyletso@google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181206030227.9507-1-kyletso@google.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 06, 2018 at 11:02:27AM +0800, Kyle Tso wrote:
> Current matching rules ensure that the voltage range of selected Source
> Capability is entirely within the range defined in one of the Sink
> Capabilities. This is reasonable but not practical because Sink may not
> support wide range of voltage when sinking power while Source could
> advertise its capabilities in raletively wider range. For example, a
> Source PDO advertising 3.3V-11V@3A (9V Prog of Fixed Nominal Voltage)
> will not be selected if the Sink requires 5V-12V@3A PPS power. However,
> the Sink could work well if the requested voltage range in RDOs is
> 5V-11V@3A.
> 
> To improve the usability, change the matching rules to what listed
> below:
> a. The Source PDO is selectable if any portion of the voltage range
>    overlaps one of the Sink PDO's voltage range.
> b. The maximum operational voltage will be the lower one between the
>    selected Source PDO and the matching Sink PDO.
> c. The maximum power will be the maximum operational voltage times the
>    maximum current defined in the selected Source PDO
> d. Select the Source PDO with the highest maximum power
> 
> Signed-off-by: Kyle Tso <kyletso@google.com>

Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>

> ---
>  drivers/usb/typec/tcpm/tcpm.c | 29 +++++++++++++++++------------
>  1 file changed, 17 insertions(+), 12 deletions(-)
> 
> diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c
> index 3620efee2688..3001df7bd602 100644
> --- a/drivers/usb/typec/tcpm/tcpm.c
> +++ b/drivers/usb/typec/tcpm/tcpm.c
> @@ -2213,7 +2213,8 @@ static unsigned int tcpm_pd_select_pps_apdo(struct tcpm_port *port)
>  	unsigned int i, j, max_mw = 0, max_mv = 0;
>  	unsigned int min_src_mv, max_src_mv, src_ma, src_mw;
>  	unsigned int min_snk_mv, max_snk_mv;
> -	u32 pdo;
> +	unsigned int max_op_mv;
> +	u32 pdo, src, snk;
>  	unsigned int src_pdo = 0, snk_pdo = 0;
>  
>  	/*
> @@ -2263,16 +2264,18 @@ static unsigned int tcpm_pd_select_pps_apdo(struct tcpm_port *port)
>  					continue;
>  				}
>  
> -				if (max_src_mv <= max_snk_mv &&
> -				    min_src_mv >= min_snk_mv) {
> +				if (min_src_mv <= max_snk_mv &&
> +				    max_src_mv >= min_snk_mv) {
> +					max_op_mv = min(max_src_mv, max_snk_mv);
> +					src_mw = (max_op_mv * src_ma) / 1000;
>  					/* Prefer higher voltages if available */
>  					if ((src_mw == max_mw &&
> -					     min_src_mv > max_mv) ||
> +					     max_op_mv > max_mv) ||
>  					    src_mw > max_mw) {
>  						src_pdo = i;
>  						snk_pdo = j;
>  						max_mw = src_mw;
> -						max_mv = max_src_mv;
> +						max_mv = max_op_mv;
>  					}
>  				}
>  			}
> @@ -2285,14 +2288,16 @@ static unsigned int tcpm_pd_select_pps_apdo(struct tcpm_port *port)
>  	}
>  
>  	if (src_pdo) {
> -		pdo = port->source_caps[src_pdo];
> -
> -		port->pps_data.min_volt = pdo_pps_apdo_min_voltage(pdo);
> -		port->pps_data.max_volt = pdo_pps_apdo_max_voltage(pdo);
> -		port->pps_data.max_curr =
> -			min_pps_apdo_current(pdo, port->snk_pdo[snk_pdo]);
> +		src = port->source_caps[src_pdo];
> +		snk = port->snk_pdo[snk_pdo];
> +
> +		port->pps_data.min_volt = max(pdo_pps_apdo_min_voltage(src),
> +					      pdo_pps_apdo_min_voltage(snk));
> +		port->pps_data.max_volt = min(pdo_pps_apdo_max_voltage(src),
> +					      pdo_pps_apdo_max_voltage(snk));
> +		port->pps_data.max_curr = min_pps_apdo_current(src, snk);
>  		port->pps_data.out_volt =
> -			min(pdo_pps_apdo_max_voltage(pdo), port->pps_data.out_volt);
> +			min(port->pps_data.max_volt, port->pps_data.out_volt);
>  		port->pps_data.op_curr =
>  			min(port->pps_data.max_curr, port->pps_data.op_curr);
>  	}
> -- 
> 2.20.0.rc2.403.gdbc3b29805-goog

-- 
heikki
