Return-Path: <virtualization-bounces@lists.linux-foundation.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:48:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3DE435803C2
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 10:04:23 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 10:04:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A9PhDjxcX9ZFI2UzACsW2Z3pzlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc27ZBaN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbgpVQOtRmzCwujCe/yxDJEmmP506Ih0+s/CgzGwA4tEsgSvH?=
 =?us-ascii?q?jIsNn5KqEfWv21wqnSyjXDautb1Tn65ojJbh8hoeuDUqx0ccHM1EcjDR7OgEuL?=
 =?us-ascii?q?qYzkJTOV1eUNs26V4+F9Uu+vjnUnqx1qrzi12Mgjl4nJiZgJylze6Sp5x4M1KM?=
 =?us-ascii?q?S+RUVmb9CkF55QuDubN4twWs4iR2BouCAnyrwJt567ezUKyJI6yBHFd/yHco+I?=
 =?us-ascii?q?4hT5WOaWOzd4i3Roc6+8iRaq6UWs1+LxWtWu3FpUsyZJj8PAum0M2hHX8MSLV+?=
 =?us-ascii?q?Vx8l+/1TqT0w3f8PxILE4qmabBNpIswbA9moANvUnAGCL9hV/4g7WMdko+/+il?=
 =?us-ascii?q?8+Tnbavipp+bL4J0jxvxMqUqmsClBeQ4Mw4OX3WU+OSy073j4Ev5T6hQgf0qk6?=
 =?us-ascii?q?nZt5baKd4cpq6jDA9Zyocj6xChADe6yNkUgHYKIE5fdB6ZkoTlJkvCLO35APq7?=
 =?us-ascii?q?mVigjSlny+jDPrL7A5XNKnbDkK3mfbZ480Nc1gszzcpD55JJEL4BJPPzW07ru9?=
 =?us-ascii?q?zEDx85NAq0z//8B9V6y4MeX36ADbGCMK7JtV+I5/kvI/WXZIMPvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMgl18derSp3Z0KZ3+iAvRmIkKZYXz2jtcGC2cKsRIyTPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o45jE6C4KpE53PR4+wgLGa2Ce7H5tWZn1JC1yWEHfocZmEVOkIaC6IPsBhlTkE?=
 =?us-ascii?q?BvCcTZQ830SuqBPi0Oggae7V4TED85bi0sVl6erOkx076T1zCYKayW7KSmh1mm?=
 =?us-ascii?q?YBQXgxxLx+pkpmjUmCy7RlivhZB9VP5vRPATo8LoPWmulzCtTuXVDff82VVV+i?=
 =?us-ascii?q?Q8evHTA2SJcrzsYTbl1hM9GjlQzYmS6rBaIF0rKMGZo4+77d2H63INxynG3b3q?=
 =?us-ascii?q?sshEVzX81UKGe9jbR+/QWAO4mcsUiQkeOSdaUY3TbV+S+p13eFv0xCGFpyXKzD?=
 =?us-ascii?q?GGgfZ0/Xtcz0oEnYUrStBK4POxFEj8WFL/0ZRMfuiAAMYfboON3TZyqK3S+MHh?=
 =?us-ascii?q?eSxbKKJsK+fn4B9D/QBEgNj0YY+nPQZlt2PTuov2+LVG8mLlnoeU65tLAm8H4?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAAA2hv1bhwyp04xYDBsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVEGAQEBCwGCaYEpjBFfiyqCDXwllh+BcxQYCwmBS4Ivg2AiNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEKCwkIKSMMgjYFAgMaAQaCWwEBAQECAQEBARoKEwwKHgsDA?=
 =?us-ascii?q?gEBAgYBAQoYHgQECAMBIwEVGgYTBYMcAYF5CAUKploziigFjA0RBoF/gRGCXTW?=
 =?us-ascii?q?DHgEEgR+GGgKPYzSPIA9GBwIChnqGGDODaQIWgVkjhGiCbAKHOY1GinGBRoINc?=
 =?us-ascii?q?BU7gmyLHIVdIQEBMYEjinyBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AEAAA2hv1bhwyp04xYDBsBAQEBAwEBAQcDAQEBgVEGAQE?=
 =?us-ascii?q?BCwGCaYEpjBFfiyqCDXwllh+BcxQYCwmBS4Ivg2AiNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEKCwkIKSMMgjYFAgMaAQaCWwEBAQECAQEBARoKEwwKHgsDAgEBAgYBAQoYHgQ?=
 =?us-ascii?q?ECAMBIwEVGgYTBYMcAYF5CAUKploziigFjA0RBoF/gRGCXTWDHgEEgR+GGgKPY?=
 =?us-ascii?q?zSPIA9GBwIChnqGGDODaQIWgVkjhGiCbAKHOY1GinGBRoINcBU7gmyLHIVdIQE?=
 =?us-ascii?q?BMYEjinyBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="53934067"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from mail.linuxfoundation.org ([140.211.169.12])
  by mtab.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 10:04:22 -0800
Received: from mail.linux-foundation.org (localhost [127.0.0.1])
	by mail.linuxfoundation.org (Postfix) with ESMTP id 2C73EBD1;
	Tue, 27 Nov 2018 18:04:22 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@mail.linuxfoundation.org
Received: from smtp1.linuxfoundation.org (smtp1.linux-foundation.org
	[172.17.192.35])
	by mail.linuxfoundation.org (Postfix) with ESMTPS id 8B0EAB73;
	Tue, 27 Nov 2018 18:04:20 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
	by smtp1.linuxfoundation.org (Postfix) with ESMTPS id 1E3AA70D;
	Tue, 27 Nov 2018 18:04:20 +0000 (UTC)
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 107BB83F3D;
	Tue, 27 Nov 2018 18:04:19 +0000 (UTC)
Received: from redhat.com (ovpn-116-85.ams2.redhat.com [10.36.116.85])
	by smtp.corp.redhat.com (Postfix) with SMTP id 96F9660BF6;
	Tue, 27 Nov 2018 18:04:09 +0000 (UTC)
Date: Tue, 27 Nov 2018 13:04:08 -0500
From: "Michael S. Tsirkin" <mst@redhat.com>
To: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
Subject: Re: [PATCH v5 5/7] iommu: Add virtio-iommu driver
Message-ID: <20181127125424-mutt-send-email-mst@kernel.org>
References: <20181122193801.50510-1-jean-philippe.brucker@arm.com>
	<20181122193801.50510-6-jean-philippe.brucker@arm.com>
	<20181123165742-mutt-send-email-mst@kernel.org>
	<fd221210-7e12-1d15-0c80-52a761f6893d@arm.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <fd221210-7e12-1d15-0c80-52a761f6893d@arm.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Tue, 27 Nov 2018 18:04:19 +0000 (UTC)
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	smtp1.linux-foundation.org
Cc: mark.rutland@arm.com, virtio-dev@lists.oasis-open.org,
	lorenzo.pieralisi@arm.com, tnowicki@caviumnetworks.com,
	devicetree@vger.kernel.org, marc.zyngier@arm.com,
	linux-pci@vger.kernel.org, joro@8bytes.org, will.deacon@arm.com,
	virtualization@lists.linux-foundation.org, eric.auger@redhat.com,
	iommu@lists.linux-foundation.org, robh+dt@kernel.org,
	bhelgaas@google.com, robin.murphy@arm.com, kvmarm@lists.cs.columbia.edu
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>,
	<mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: virtualization-bounces@lists.linux-foundation.org
Errors-To: virtualization-bounces@lists.linux-foundation.org

On Tue, Nov 27, 2018 at 05:50:50PM +0000, Jean-Philippe Brucker wrote:
> On 23/11/2018 22:02, Michael S. Tsirkin wrote:
> >> +/*
> >> + * __viommu_sync_req - Complete all in-flight requests
> >> + *
> >> + * Wait for all added requests to complete. When this function returns, all
> >> + * requests that were in-flight at the time of the call have completed.
> >> + */
> >> +static int __viommu_sync_req(struct viommu_dev *viommu)
> >> +{
> >> +	int ret = 0;
> >> +	unsigned int len;
> >> +	size_t write_len;
> >> +	struct viommu_request *req;
> >> +	struct virtqueue *vq = viommu->vqs[VIOMMU_REQUEST_VQ];
> >> +
> >> +	assert_spin_locked(&viommu->request_lock);
> >> +
> >> +	virtqueue_kick(vq);
> >> +
> >> +	while (!list_empty(&viommu->requests)) {
> >> +		len = 0;
> >> +		req = virtqueue_get_buf(vq, &len);
> >> +		if (!req)
> >> +			continue;
> >> +
> >> +		if (!len)
> >> +			viommu_set_req_status(req->buf, req->len,
> >> +					      VIRTIO_IOMMU_S_IOERR);
> >> +
> >> +		write_len = req->len - req->write_offset;
> >> +		if (req->writeback && len == write_len)
> >> +			memcpy(req->writeback, req->buf + req->write_offset,
> >> +			       write_len);
> >> +
> >> +		list_del(&req->list);
> >> +		kfree(req);
> >> +	}
> > 
> > I didn't notice this in the past but it seems this will spin
> > with interrupts disabled until host handles the request.
> > Please do not do this - host execution can be another
> > task that needs the same host CPU. This will then disable
> > interrupts for a very very long time.
> 
> In the guest yes, but that doesn't prevent the host from running another
> task right?

Doesn't prevent it but it will delay it significantly
until scheduler decides to kick the VCPU task out.

> My tests run fine when QEMU is bound to a single CPU, even
> though vcpu and viommu run in different threads
> 
> > What to do then? Queue in software and wake up task.
> 
> Unfortunately I can't do anything here, because IOMMU drivers can't
> sleep in the iommu_map() or iommu_unmap() path.
>
> The problem is the same
> for all IOMMU drivers. That's because the DMA API allows drivers to call
> some functions with interrupts disabled. For example
> Documentation/DMA-API-HOWTO.txt allows dma_alloc_coherent() and
> dma_unmap_single() to be called in interrupt context.

In fact I don't really understand how it's supposed to
work at all: you only sync when ring is full.
So host may not have seen your map request if ring
is not full.
Why is it safe to use the address with a device then?


> > As kick is vm exit, kick under interrupts disabled is discouraged too:
> > better to prepare for kick enable interrupts then kick.
> 
> That was on my list of things to look at, because it could relax
> things for device drivers that don't call us with interrupts disabled. I
> just tried it and I can see some performance improvement (7% and 4% on
> tcp_stream and tcp_maerts respectively, +/-2.5%).
> 
> Since it's an optimization I'll leave it for later (ACPI and module
> support is higher on my list). The resulting change is complicated
> because we now need to deal with threads adding new requests while
> sync() is running. With my current prototype one thread could end up
> staying in sync() while other threads add new async requests, so I need
> to find a way to bound it.
> 
> Thanks,
> Jean
_______________________________________________
Virtualization mailing list
Virtualization@lists.linux-foundation.org
https://lists.linuxfoundation.org/mailman/listinfo/virtualization
