Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 12:55:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A325C5807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 18:20:49 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 18:20:49 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AFLZUGhVgFU1s4c7vvrZe2MpB5j/V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbROOt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAekPPelXs4byulkBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BA5H98UrH?=
 =?us-ascii?q?jYsMn5OaUUXOuozKfI1zLDb/ZO1Dvz74bIcwwuofGWUr1udcra1FQhGxnYhVuO?=
 =?us-ascii?q?sozlPimV1ucMs2id4eZrSOWii2s8qwFtuTWv3NkjhZTJho0P1lDI7zl2wIEwJd?=
 =?us-ascii?q?ChTkNwfN2qEINIui2EK4d7QdkuT3x1tCs50LEKp5C2cSgQxJg6xRPTc+KLf5SM?=
 =?us-ascii?q?7x75SeqcLyl0iGh4dL+8iRu+61asx+76W8KpylhFtDBFncPJtn0V1xzc9MyHSv?=
 =?us-ascii?q?xl80el2DaPzBzT6vpeLUA7k6rbNoQtwrkqlpocqUjDHyn2l1vqjKKOaEko5uul?=
 =?us-ascii?q?5/76brn7pZKQLZF4hw/+P6g0h8CyA/w0Mg0UUGia/eS82qfj/Ur8QLhSl/05jK?=
 =?us-ascii?q?zZsI3DKcsGuKG5HRFa0oI65xmkCDemzdIYkmUZI1Jefx6Hi4npO1LQL/ziAva/?=
 =?us-ascii?q?nkyhkDNqx/DAI73gDY/BLnnFkLf9Y7l971RQxxY0zdBa/J9UDLYBIPT8Wk/3qd?=
 =?us-ascii?q?zUFBg5Mxa7w+r/EtVyypseWX6TAq+eKK7StV6I5uExLOWWa44VpS3wK/wk5/7o?=
 =?us-ascii?q?kH84lkURfaiv3ZsLdn+4Gu5qLFmeYXrp0Z88F3wXtF8+UPDykw/FFjpSfGqpGa?=
 =?us-ascii?q?Q74D49FcShF4iEQ4mshLmI2mC8BoFXYWZdTUmBFGqte4iaVvNfVSSJP8U0lzUF?=
 =?us-ascii?q?UaSmGZYs0AzruALkxr4iNOfN5yADqbrl09564fCVkgs9oidpBcaQ2H3YUmdvg2?=
 =?us-ascii?q?kTTCU31q0snUso2kqS2K50hPpXXYhD+uJAVAs9M5GG5+xnAs//W0TKedLfG3i8?=
 =?us-ascii?q?RdDzSxQwRdI4zttGWAA1J86jlBPC2WDiV7oOi5SRCZA0+76a1H/0cZUug03a3b?=
 =?us-ascii?q?Us2gF1CvBEMner0+smr1De?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALAAA2Hg9cmBHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMIZdiHiLMoINmUcRGBSEQIMtIjcGDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCXAECAwECIAQfCikDAwECBgEBChgCA?=
 =?us-ascii?q?iIEAgIDATkaBhhhgjuCAgEEpgh8M4otgQuLFhEGgX+BEYJkLoRrFoMEglcCiTW?=
 =?us-ascii?q?BdIQUfZA7BwICkU0CFoFciAo2hyGDAocljwmBXIF4cBWDKIImF447I4E4HIhMg?=
 =?us-ascii?q?XQDAQE?=
X-IPAS-Result: =?us-ascii?q?A0ALAAA2Hg9cmBHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMIZdiHiLMoINmUcRGBSEQIMtIjcGDQEDAQEBAQEBAgETAQEBAQEIC?=
 =?us-ascii?q?wsGGw4vgjYFAgMaAQaCXAECAwECIAQfCikDAwECBgEBChgCAiIEAgIDATkaBhh?=
 =?us-ascii?q?hgjuCAgEEpgh8M4otgQuLFhEGgX+BEYJkLoRrFoMEglcCiTWBdIQUfZA7BwICk?=
 =?us-ascii?q?U0CFoFciAo2hyGDAocljwmBXIF4cBWDKIImF447I4E4HIhMgXQDAQE?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="66212083"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 18:20:48 -0800
Received: from localhost ([::1]:35597 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWXfD-0002Ov-Ay
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 21:20:47 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50056)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mst@redhat.com>) id 1gWXcI-0000Jl-Kv
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 21:17:48 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mst@redhat.com>) id 1gWXcD-0006nc-K0
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 21:17:46 -0500
Received: from mx1.redhat.com ([209.132.183.28]:47214)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mst@redhat.com>) id 1gWXcD-0006mt-AQ
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 21:17:41 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 46D8A8830E;
	Tue, 11 Dec 2018 02:17:40 +0000 (UTC)
Received: from redhat.com (ovpn-120-187.rdu2.redhat.com [10.10.120.187])
	by smtp.corp.redhat.com (Postfix) with ESMTP id AE8EA5D962;
	Tue, 11 Dec 2018 02:17:36 +0000 (UTC)
Date: Mon, 10 Dec 2018 21:17:36 -0500
From: "Michael S. Tsirkin" <mst@redhat.com>
To: xuyandong <xuyandong2@huawei.com>
Message-ID: <20181210205229-mutt-send-email-mst@kernel.org>
References: <7CECC2DFC21538489F72729DF5EFB4D908ABD3A4@dggemm521-mbs.china.huawei.com>
	<20181209211730-mutt-send-email-mst@kernel.org>
	<7CECC2DFC21538489F72729DF5EFB4D908AC486D@DGGEMM501-MBX.china.huawei.com>
	<20181210130650-mutt-send-email-mst@kernel.org>
	<7CECC2DFC21538489F72729DF5EFB4D908AC78EE@DGGEMM501-MBX.china.huawei.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <7CECC2DFC21538489F72729DF5EFB4D908AC78EE@DGGEMM501-MBX.china.huawei.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Tue, 11 Dec 2018 02:17:40 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [BUG]Unassigned mem write during pci device
 hot-plug
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Huangweidong \(C\)" <weidong.huang@huawei.com>,
	Zhanghailiang <zhang.zhanghailiang@huawei.com>,
	"wangxin \(U\)" <wangxinxin.wang@huawei.com>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
	"marcel@redhat.com" <marcel@redhat.com>,
	Paolo Bonzini <pbonzini@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Dec 11, 2018 at 01:47:37AM +0000, xuyandong wrote:
> On Sat, Dec 08, 2018 at 11:58:59AM +0000, xuyandong wrote:
> > > > > Hi all,
> > > > >
> > > > >
> > > > >
> > > > > In our test, we configured VM with several pci-bridges and a
> > > > > virtio-net nic been attached with bus 4,
> > > > >
> > > > > After VM is startup, We ping this nic from host to judge if it =
is
> > > > > working normally. Then, we hot add pci devices to this VM with =
bus 0.
> > > > >
> > > > > We  found the virtio-net NIC in bus 4 is not working (can not
> > > > > connect) occasionally, as it kick virtio backend failure with e=
rror below:
> > > > >
> > > > >     Unassigned mem write 00000000fc803004 =3D 0x1
> > > > >
> > > > >
> > > > >
> > > > > memory-region: pci_bridge_pci
> > > > >
> > > > >   0000000000000000-ffffffffffffffff (prio 0, RW): pci_bridge_pc=
i
> > > > >
> > > > >     00000000fc800000-00000000fc803fff (prio 1, RW): virtio-pci
> > > > >
> > > > >       00000000fc800000-00000000fc800fff (prio 0, RW):
> > > > > virtio-pci-common
> > > > >
> > > > >       00000000fc801000-00000000fc801fff (prio 0, RW):
> > > > > virtio-pci-isr
> > > > >
> > > > >       00000000fc802000-00000000fc802fff (prio 0, RW):
> > > > > virtio-pci-device
> > > > >
> > > > >       00000000fc803000-00000000fc803fff (prio 0, RW):
> > > > > virtio-pci-notify  <- io mem unassigned
> > > > >
> > > > >       =E2=80=A6
> > > > >
> > > > >
> > > > >
> > > > > We caught an exceptional address changing while this problem
> > > > > happened, show as
> > > > > follow:
> > > > >
> > > > > Before pci_bridge_update_mappings=EF=BC=9A
> > > > >
> > > > >       00000000fc000000-00000000fc1fffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fc000000-00000000fc1fffff
> > > > >
> > > > >       00000000fc200000-00000000fc3fffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fc200000-00000000fc3fffff
> > > > >
> > > > >       00000000fc400000-00000000fc5fffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fc400000-00000000fc5fffff
> > > > >
> > > > >       00000000fc600000-00000000fc7fffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fc600000-00000000fc7fffff
> > > > >
> > > > >       00000000fc800000-00000000fc9fffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fc800000-00000000fc9fffff
> > > > > <- correct Adress Spce
> > > > >
> > > > >       00000000fca00000-00000000fcbfffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fca00000-00000000fcbfffff
> > > > >
> > > > >       00000000fcc00000-00000000fcdfffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fcc00000-00000000fcdfffff
> > > > >
> > > > >       00000000fce00000-00000000fcffffff (prio 1, RW): alias
> > > > > pci_bridge_pref_mem @pci_bridge_pci
> > > > > 00000000fce00000-00000000fcffffff
> > > > >
> > > > >
> > > > >
> > > > > After pci_bridge_update_mappings=EF=BC=9A
> > > > >
> > > > >       00000000fda00000-00000000fdbfffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fda00000-00000000fdbffff=
f
> > > > >
> > > > >       00000000fdc00000-00000000fddfffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fdc00000-00000000fddffff=
f
> > > > >
> > > > >       00000000fde00000-00000000fdffffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fde00000-00000000fdfffff=
f
> > > > >
> > > > >       00000000fe000000-00000000fe1fffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fe000000-00000000fe1ffff=
f
> > > > >
> > > > >       00000000fe200000-00000000fe3fffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fe200000-00000000fe3ffff=
f
> > > > >
> > > > >       00000000fe400000-00000000fe5fffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fe400000-00000000fe5ffff=
f
> > > > >
> > > > >       00000000fe600000-00000000fe7fffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fe600000-00000000fe7ffff=
f
> > > > >
> > > > >       00000000fe800000-00000000fe9fffff (prio 1, RW): alias
> > > > > pci_bridge_mem @pci_bridge_pci 00000000fe800000-00000000fe9ffff=
f
> > > > >
> > > > >       fffffffffc800000-fffffffffc800000 (prio 1, RW): alias
> > pci_bridge_pref_mem
> > > > > @pci_bridge_pci fffffffffc800000-fffffffffc800000   <- Exceptio=
nal Adress
> > > > Space
> > > >
> > > > This one is empty though right?
> > > >
> > > > >
> > > > >
> > > > > We have figured out why this address becomes this value,
> > > > > according to pci spec,  pci driver can get BAR address size by
> > > > > writing 0xffffffff to
> > > > >
> > > > > the pci register firstly, and then read back the value from thi=
s register.
> > > >
> > > >
> > > > OK however as you show below the BAR being sized is the BAR if a
> > > > bridge. Are you then adding a bridge device by hotplug?
> > >
> > > No, I just simply hot plugged a VFIO device to Bus 0, another
> > > interesting phenomenon is If I hot plug the device to other bus, th=
is doesn't
> > happened.
> > >
> > > >
> > > >
> > > > > We didn't handle this value  specially while process pci write =
in
> > > > > qemu, the function call stack is:
> > > > >
> > > > > Pci_bridge_dev_write_config
> > > > >
> > > > > -> pci_bridge_write_config
> > > > >
> > > > > -> pci_default_write_config (we update the config[address] valu=
e
> > > > > -> here to
> > > > > fffffffffc800000, which should be 0xfc800000 )
> > > > >
> > > > > -> pci_bridge_update_mappings
> > > > >
> > > > >                 ->pci_bridge_region_del(br, br->windows);
> > > > >
> > > > > -> pci_bridge_region_init
> > > > >
> > > > >                                                                =
 ->
> > > > > pci_bridge_init_alias (here pci_bridge_get_base, we use the wro=
ng
> > > > > value
> > > > > fffffffffc800000)
> > > > >
> > > > >                                                 ->
> > > > > memory_region_transaction_commit
> > > > >
> > > > >
> > > > >
> > > > > So, as we can see, we use the wrong base address in qemu to upd=
ate
> > > > > the memory regions, though, we update the base address to
> > > > >
> > > > > The correct value after pci driver in VM write the original val=
ue
> > > > > back, the virtio NIC in bus 4 may still sends net packets
> > > > > concurrently with
> > > > >
> > > > > The wrong memory region address.
> > > > >
> > > > >
> > > > >
> > > > > We have tried to skip the memory region update action in qemu
> > > > > while detect pci write with 0xffffffff value, and it does work,
> > > > > but
> > > > >
> > > > > This seems to be not gently.
> > > >
> > > > For sure. But I'm still puzzled as to why does Linux try to size =
the
> > > > BAR of the bridge while a device behind it is used.
> > > >
> > > > Can you pls post your QEMU command line?
> > >
> > > My QEMU command line:
> > > /root/xyd/qemu-system-x86_64 -name guest=3DLinux,debug-threads=3Don=
 -S
> > > -object
> > > secret,id=3DmasterKey0,format=3Draw,file=3D/var/run/libvirt/qemu/do=
main-194-
> > > Linux/master-key.aes -machine
> > > pc-i440fx-2.8,accel=3Dkvm,usb=3Doff,dump-guest-core=3Doff -cpu
> > > host,+kvm_pv_eoi -bios /usr/share/OVMF/OVMF.fd -m
> > > size=3D4194304k,slots=3D256,maxmem=3D33554432k -realtime mlock=3Dof=
f -smp
> > > 20,sockets=3D20,cores=3D1,threads=3D1 -numa node,nodeid=3D0,cpus=3D=
0-4,mem=3D1024
> > > -numa node,nodeid=3D1,cpus=3D5-9,mem=3D1024 -numa
> > > node,nodeid=3D2,cpus=3D10-14,mem=3D1024 -numa
> > > node,nodeid=3D3,cpus=3D15-19,mem=3D1024 -uuid
> > > 34a588c7-b0f2-4952-b39c-47fae3411439 -no-user-config -nodefaults
> > > -chardev
> > > socket,id=3Dcharmonitor,path=3D/var/run/libvirt/qemu/domain-194-Lin=
ux/moni
> > > tor.sock,server,nowait -mon
> > > chardev=3Dcharmonitor,id=3Dmonitor,mode=3Dcontrol -rtc base=3Dutc -=
no-hpet
> > > -global kvm-pit.lost_tick_policy=3Ddelay -no-shutdown -boot strict=3D=
on
> > > -device pci-bridge,chassis_nr=3D1,id=3Dpci.1,bus=3Dpci.0,addr=3D0x8=
 -device
> > > pci-bridge,chassis_nr=3D2,id=3Dpci.2,bus=3Dpci.0,addr=3D0x9 -device
> > > pci-bridge,chassis_nr=3D3,id=3Dpci.3,bus=3Dpci.0,addr=3D0xa -device
> > > pci-bridge,chassis_nr=3D4,id=3Dpci.4,bus=3Dpci.0,addr=3D0xb -device
> > > pci-bridge,chassis_nr=3D5,id=3Dpci.5,bus=3Dpci.0,addr=3D0xc -device
> > > piix3-usb-uhci,id=3Dusb,bus=3Dpci.0,addr=3D0x1.0x2 -device
> > > usb-ehci,id=3Dusb1,bus=3Dpci.0,addr=3D0x10 -device
> > > nec-usb-xhci,id=3Dusb2,bus=3Dpci.0,addr=3D0x11 -device
> > > virtio-scsi-pci,id=3Dscsi0,bus=3Dpci.0,addr=3D0x3 -device
> > > virtio-scsi-pci,id=3Dscsi1,bus=3Dpci.0,addr=3D0x4 -device
> > > virtio-scsi-pci,id=3Dscsi2,bus=3Dpci.0,addr=3D0x5 -device
> > > virtio-scsi-pci,id=3Dscsi3,bus=3Dpci.0,addr=3D0x6 -device
> > > virtio-serial-pci,id=3Dvirtio-serial0,bus=3Dpci.0,addr=3D0x7 -drive
> > > file=3D/mnt/sdb/xml/centos_74_x64_uefi.raw,format=3Draw,if=3Dnone,i=
d=3Ddrive-v
> > > irtio-disk0,cache=3Dnone -device
> > > virtio-blk-pci,scsi=3Doff,bus=3Dpci.0,addr=3D0x2,drive=3Ddrive-virt=
io-disk0,id
> > > =3Dvirtio-disk0,bootindex=3D1 -drive
> > > if=3Dnone,id=3Ddrive-ide0-1-1,readonly=3Don,cache=3Dnone -device
> > > ide-cd,bus=3Dide.1,unit=3D1,drive=3Ddrive-ide0-1-1,id=3Dide0-1-1 -n=
etdev
> > > tap,fd=3D35,id=3Dhostnet0 -device
> > > virtio-net-pci,netdev=3Dhostnet0,id=3Dnet0,mac=3D52:54:00:89:5d:8b,=
bus=3Dpci.4
> > > ,addr=3D0x1 -chardev pty,id=3Dcharserial0 -device
> > > isa-serial,chardev=3Dcharserial0,id=3Dserial0 -device
> > > usb-tablet,id=3Dinput0,bus=3Dusb.0,port=3D1 -vnc 0.0.0.0:0 -device
> > > cirrus-vga,id=3Dvideo0,vgamem_mb=3D8,bus=3Dpci.0,addr=3D0x12 -devic=
e
> > > virtio-balloon-pci,id=3Dballoon0,bus=3Dpci.0,addr=3D0xd -msg timest=
amp=3Don
> > >
> > > I am also very curious about this issue, in the linux kernel code, =
maybe double
> > check in function pci_bridge_check_ranges triggered this problem.
> >=20
> > If you can get the stacktrace in Linux when it tries to write this ff=
fff value, that
> > would be quite helpful.
> >=20
>=20
> After I add mdelay(100) in function pci_bridge_check_ranges, this pheno=
menon is
> easier to reproduce, below is my modify in kernel:
> diff --git a/drivers/pci/setup-bus.c b/drivers/pci/setup-bus.c
> index cb389277..86e232d 100644
> --- a/drivers/pci/setup-bus.c
> +++ b/drivers/pci/setup-bus.c
> @@ -27,7 +27,7 @@
>  #include <linux/slab.h>
>  #include <linux/acpi.h>
>  #include "pci.h"
> -
> +#include <linux/delay.h>
>  unsigned int pci_flags;
> =20
>  struct pci_dev_resource {
> @@ -787,6 +787,9 @@ static void pci_bridge_check_ranges(struct pci_bus =
*bus)
>                 pci_write_config_dword(bridge, PCI_PREF_BASE_UPPER32,
>                                                0xffffffff);
>                 pci_read_config_dword(bridge, PCI_PREF_BASE_UPPER32, &t=
mp);
> +               mdelay(100);
> +               printk(KERN_ERR "sleep\n");
> +                dump_stack();
>                 if (!tmp)
>                         b_res[2].flags &=3D ~IORESOURCE_MEM_64;
>                 pci_write_config_dword(bridge, PCI_PREF_BASE_UPPER32,
>

OK!
I just sent a Linux patch that should help.
I would appreciate it if you will give it a try
and if that helps reply to it with
a Tested-by: tag.

--=20
MST

