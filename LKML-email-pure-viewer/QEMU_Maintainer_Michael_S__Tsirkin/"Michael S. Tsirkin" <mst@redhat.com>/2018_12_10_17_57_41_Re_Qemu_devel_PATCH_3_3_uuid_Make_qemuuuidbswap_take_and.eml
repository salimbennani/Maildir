Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F024F580380
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 09:59:08 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 09:59:08 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Av3vynRU7AaoRiiyvZ3K9RyM4x+/V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRyDt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAekPPelXs4byulkBowamBQSuBu3ixSJEi3Hq0aIkyOQsCh3G0BA6Et4SrH?=
 =?us-ascii?q?jYsMv5OaEPWu611qnIyjDDYutY1Tn66YjHbhAhruuSUrJ0bMHf1FMjHB7bgFWL?=
 =?us-ascii?q?qIzlJTCV1uULs2SV8uFtUuevi3U7qwxquDig2NojionTiYIJ0FzL6SJ5wIMsKN?=
 =?us-ascii?q?C+VUV1YsakHYNOuy2GNIZ6WN4uT3xrtSog1LELt562cDIXxJkl3xLTdeCLfoyS?=
 =?us-ascii?q?7h7+WuudPy10iG9mdb+xnRq+70utx+vhXceuyllKtDBKktzUu3ANyRPT7s+HR+?=
 =?us-ascii?q?N5/kegwjaPyxvT5vtLIUAyiKrXMZkhwqQ/lpYLsETDGDH5mFnugaOIakkp+fKk?=
 =?us-ascii?q?5/n6brjlvJOQKYF5hwHkPqgzmMGzGeE4PRIPX2if9+S8zrrj/UjhTbVTkPI2l7?=
 =?us-ascii?q?TZvInHKssFuK62HQtV3p845Ba4Ejem1sgXkmccLF5CfBKHjovpNE/ULPH3EPey?=
 =?us-ascii?q?m1CskDZtx/DbMbztGJTNLn7fkLj/ebZx8VJTyA02zd1E4ZJUDbcBIP31Wk/srt?=
 =?us-ascii?q?DYCQU5MwOsz+b9FNp9zp8eWX6IAqKBNKPSsFyI6fw1L+iDeY8YozL9K/kj5/7z?=
 =?us-ascii?q?gn41g14dfa+13ZQJbHC0BOhpI0KcYSmkv9EaDG1fvhYiVPe4zxqGUCVPfDC0WK?=
 =?us-ascii?q?Qz4Cx9D5ipSoLKR4SoibrG2z+nH5pQfSdfB1WRVHvlaYiACMoKcz+Yd8pokzgY?=
 =?us-ascii?q?Uuq4Roo8kB2jqgL+jqBqN/fZ4TEws5Xl295ooerJmkYp6DZ2As+BhnyLVHx+hW?=
 =?us-ascii?q?gSRjU7j5x49HRw1lqZmY1xkvBVEdgbs+tETgogc5vV3uB3D9TaXgPHd82ODlG8?=
 =?us-ascii?q?TYP1Lys2S4d75t4FY09wH52ZyFj/xCuwAL4T3fTfAYco2rjR03j4O4B2zHOQh/?=
 =?us-ascii?q?pptEUvXsYabT7uvaV47QWGQteRy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AuAAAhqQ5cmBHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYExKoI4jHKLMIINmUQUGBSHbSI4EgEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4vgjYFAgMaAQaCXAECAwECJBMMCikDAwECBgEBChgmCAMBORoGEwWDH?=
 =?us-ascii?q?IICAQSnLTOKIYwhEQaBf4ERgxKKXAKJJ4IChRGQOwcCAopBhwwCFolmh1csmQS?=
 =?us-ascii?q?BXYF3cBWDJ4InFxJtAQKNOSMxgQccigWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AuAAAhqQ5cmBHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBZYE?=
 =?us-ascii?q?xKoI4jHKLMIINmUQUGBSHbSI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFA?=
 =?us-ascii?q?gMaAQaCXAECAwECJBMMCikDAwECBgEBChgmCAMBORoGEwWDHIICAQSnLTOKIYw?=
 =?us-ascii?q?hEQaBf4ERgxKKXAKJJ4IChRGQOwcCAopBhwwCFolmh1csmQSBXYF3cBWDJ4InF?=
 =?us-ascii?q?xJtAQKNOSMxgQccigWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="56284672"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 09:59:07 -0800
Received: from localhost ([::1]:34105 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWPpi-0001AP-QZ
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 12:59:06 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53278)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mst@redhat.com>) id 1gWPoZ-0008TH-Er
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:57:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mst@redhat.com>) id 1gWPoY-0001Xl-9u
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:57:55 -0500
Received: from mx1.redhat.com ([209.132.183.28]:55882)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mst@redhat.com>)
	id 1gWPoR-0001RG-Rp; Mon, 10 Dec 2018 12:57:48 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 9D0C53002E08;
	Mon, 10 Dec 2018 17:57:46 +0000 (UTC)
Received: from redhat.com (ovpn-120-192.rdu2.redhat.com [10.10.120.192])
	by smtp.corp.redhat.com (Postfix) with SMTP id 6904A60C60;
	Mon, 10 Dec 2018 17:57:42 +0000 (UTC)
Date: Mon, 10 Dec 2018 12:57:41 -0500
From: "Michael S. Tsirkin" <mst@redhat.com>
To: Peter Maydell <peter.maydell@linaro.org>
Message-ID: <20181210125731-mutt-send-email-mst@kernel.org>
References: <20181210112649.11581-1-peter.maydell@linaro.org>
	<20181210112649.11581-4-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181210112649.11581-4-peter.maydell@linaro.org>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.43]);
	Mon, 10 Dec 2018 17:57:47 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 3/3] uuid: Make qemu_uuid_bswap() take and
 return a QemuUUID
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Fam Zheng <famz@redhat.com>,
	qemu-block@nongnu.org, Ben Warren <ben@skyportsystems.com>,
	patches@linaro.org, Stefan Weil <sw@weilnetz.de>,
	qemu-devel@nongnu.org, Max Reitz <mreitz@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, Dec 10, 2018 at 11:26:49AM +0000, Peter Maydell wrote:
> Currently qemu_uuid_bswap() takes a pointer to the QemuUUID to
> be byte-swapped. This means it can't be used when the UUID
> to be swapped is in a packed member of a struct. It's also
> out of line with the general bswap*() functions we provide
> in bswap.h, which take the value to be swapped and return it.
> 
> Make qemu_uuid_bswap() take a QemuUUID and return the swapped version.
> 
> This fixes some clang warnings about taking the address of
> a packed struct member in block/vdi.c.
> 
> Signed-off-by: Peter Maydell <peter.maydell@linaro.org>

For acpi:

Reviewed-by: Michael S. Tsirkin <mst@redhat.com>

> ---
>  include/qemu/uuid.h  |  2 +-
>  block/vdi.c          | 16 ++++++++--------
>  hw/acpi/vmgenid.c    |  6 ++----
>  tests/vmgenid-test.c |  2 +-
>  util/uuid.c          | 10 +++++-----
>  5 files changed, 17 insertions(+), 19 deletions(-)
> 
> diff --git a/include/qemu/uuid.h b/include/qemu/uuid.h
> index 09489ce5c5e..037357d990b 100644
> --- a/include/qemu/uuid.h
> +++ b/include/qemu/uuid.h
> @@ -56,6 +56,6 @@ char *qemu_uuid_unparse_strdup(const QemuUUID *uuid);
>  
>  int qemu_uuid_parse(const char *str, QemuUUID *uuid);
>  
> -void qemu_uuid_bswap(QemuUUID *uuid);
> +QemuUUID qemu_uuid_bswap(QemuUUID uuid);
>  
>  #endif
> diff --git a/block/vdi.c b/block/vdi.c
> index 4cc726047c3..0c34f6bae46 100644
> --- a/block/vdi.c
> +++ b/block/vdi.c
> @@ -203,10 +203,10 @@ static void vdi_header_to_cpu(VdiHeader *header)
>      header->block_extra = le32_to_cpu(header->block_extra);
>      header->blocks_in_image = le32_to_cpu(header->blocks_in_image);
>      header->blocks_allocated = le32_to_cpu(header->blocks_allocated);
> -    qemu_uuid_bswap(&header->uuid_image);
> -    qemu_uuid_bswap(&header->uuid_last_snap);
> -    qemu_uuid_bswap(&header->uuid_link);
> -    qemu_uuid_bswap(&header->uuid_parent);
> +    header->uuid_image = qemu_uuid_bswap(header->uuid_image);
> +    header->uuid_last_snap = qemu_uuid_bswap(header->uuid_last_snap);
> +    header->uuid_link = qemu_uuid_bswap(header->uuid_link);
> +    header->uuid_parent = qemu_uuid_bswap(header->uuid_parent);
>  }
>  
>  static void vdi_header_to_le(VdiHeader *header)
> @@ -227,10 +227,10 @@ static void vdi_header_to_le(VdiHeader *header)
>      header->block_extra = cpu_to_le32(header->block_extra);
>      header->blocks_in_image = cpu_to_le32(header->blocks_in_image);
>      header->blocks_allocated = cpu_to_le32(header->blocks_allocated);
> -    qemu_uuid_bswap(&header->uuid_image);
> -    qemu_uuid_bswap(&header->uuid_last_snap);
> -    qemu_uuid_bswap(&header->uuid_link);
> -    qemu_uuid_bswap(&header->uuid_parent);
> +    header->uuid_image = qemu_uuid_bswap(header->uuid_image);
> +    header->uuid_last_snap = qemu_uuid_bswap(header->uuid_last_snap);
> +    header->uuid_link = qemu_uuid_bswap(header->uuid_link);
> +    header->uuid_parent = qemu_uuid_bswap(header->uuid_parent);
>  }
>  
>  static void vdi_header_print(VdiHeader *header)
> diff --git a/hw/acpi/vmgenid.c b/hw/acpi/vmgenid.c
> index d78b579a201..02717a8b0dc 100644
> --- a/hw/acpi/vmgenid.c
> +++ b/hw/acpi/vmgenid.c
> @@ -30,8 +30,7 @@ void vmgenid_build_acpi(VmGenIdState *vms, GArray *table_data, GArray *guid,
>       * first, since that's what the guest expects
>       */
>      g_array_set_size(guid, VMGENID_FW_CFG_SIZE - ARRAY_SIZE(guid_le.data));
> -    guid_le = vms->guid;
> -    qemu_uuid_bswap(&guid_le);
> +    guid_le = qemu_uuid_bswap(vms->guid);
>      /* The GUID is written at a fixed offset into the fw_cfg file
>       * in order to implement the "OVMF SDT Header probe suppressor"
>       * see docs/specs/vmgenid.txt for more details
> @@ -149,8 +148,7 @@ static void vmgenid_update_guest(VmGenIdState *vms)
>               * however, will expect the fields to be little-endian.
>               * Perform a byte swap immediately before writing.
>               */
> -            guid_le = vms->guid;
> -            qemu_uuid_bswap(&guid_le);
> +            guid_le = qemu_uuid_bswap(vms->guid);
>              /* The GUID is written at a fixed offset into the fw_cfg file
>               * in order to implement the "OVMF SDT Header probe suppressor"
>               * see docs/specs/vmgenid.txt for more details.
> diff --git a/tests/vmgenid-test.c b/tests/vmgenid-test.c
> index 0a6fb55f2eb..98db43f5a65 100644
> --- a/tests/vmgenid-test.c
> +++ b/tests/vmgenid-test.c
> @@ -110,7 +110,7 @@ static void read_guid_from_memory(QemuUUID *guid)
>      /* The GUID is in little-endian format in the guest, while QEMU
>       * uses big-endian.  Swap after reading.
>       */
> -    qemu_uuid_bswap(guid);
> +    *guid = qemu_uuid_bswap(*guid);
>  }
>  
>  static void read_guid_from_monitor(QemuUUID *guid)
> diff --git a/util/uuid.c b/util/uuid.c
> index ebf06c049ad..5787f0978c1 100644
> --- a/util/uuid.c
> +++ b/util/uuid.c
> @@ -110,10 +110,10 @@ int qemu_uuid_parse(const char *str, QemuUUID *uuid)
>  
>  /* Swap from UUID format endian (BE) to the opposite or vice versa.
>   */
> -void qemu_uuid_bswap(QemuUUID *uuid)
> +QemuUUID qemu_uuid_bswap(QemuUUID uuid)
>  {
> -    assert(QEMU_PTR_IS_ALIGNED(uuid, sizeof(uint32_t)));
> -    bswap32s(&uuid->fields.time_low);
> -    bswap16s(&uuid->fields.time_mid);
> -    bswap16s(&uuid->fields.time_high_and_version);
> +    bswap32s(&uuid.fields.time_low);
> +    bswap16s(&uuid.fields.time_mid);
> +    bswap16s(&uuid.fields.time_high_and_version);
> +    return uuid;
>  }
> -- 
> 2.19.2

