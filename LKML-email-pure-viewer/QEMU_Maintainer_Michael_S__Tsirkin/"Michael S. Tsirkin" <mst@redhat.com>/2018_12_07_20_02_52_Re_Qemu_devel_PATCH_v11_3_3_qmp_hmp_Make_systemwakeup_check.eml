Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:53:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 309FE5804F9
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 12:03:21 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 12:03:20 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AuBC1ch9IMUiF5/9uRHKM819IXTAuvvDOBiVQ1KB2?=
 =?us-ascii?q?2uscTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMNboRr4oRzut86ZrSAfpiC?=
 =?us-ascii?q?gZMT457HrXgdF0gK5CvR6tuwBzz4vSbYqINvRxY7ndcMsUS2RBQMhfVCJBDYyg?=
 =?us-ascii?q?YIQSDeUPIP5Yoov/qVYBsBezCxWgC/30yjJTmn/6wbc33/g9HQ3awgAtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSe65wq7JzTrfb/NZwyny6IzVeR48u/2HQKx+cdHQyUk1FAPFj1OQ?=
 =?us-ascii?q?pYL4ND6S0+QNqHSb4vF6Ve2xlmEnqxt+oiS1ysgwjYnJg5sYx1bZ/it62IY4Pc?=
 =?us-ascii?q?O0RFJ4bNK+DZdcqiKXO5FoTs4sQ2xkojs2x78etZKlYCQHzI4rywPRZvCZaYSE?=
 =?us-ascii?q?/xHuWeiLLTtmh39ofq+0iQyo/ki60OL8U9G50FZUoSpBldnBrnQN1x3I6sibUf?=
 =?us-ascii?q?tx5Eih2TCS1wzJ7eFEO080mbLaK54n3LEwioIevVrfEiL1gkn6kbKae0Y+9uS2?=
 =?us-ascii?q?5enqYq/qqoKeOoNsjwHxKKUumsixAeQiNQgOWnCW+f2i273m4E31WahFgeMokq?=
 =?us-ascii?q?bHtJDWPN8UpqmkAw9Tzoks9Q2/AzCi0NQZnnkIMkhJeR2aj4XxP1HOIfb4Deqw?=
 =?us-ascii?q?gli2kTdrwezGMaPlApnXMnfDl7LhcK17605bzgozwtZf549OBrEGOvLzVVf9tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc151oMfWmKAHLWVMazPsVKT4uIvIu+MZJIauTrnKvgl4eLu?=
 =?us-ascii?q?gmE9mVMHYaap2p4XOziFGO97KRCZfWb0mYVGVmMLpRYlCurtjlKETHhUfXn1Wq?=
 =?us-ascii?q?s94jQyDsWhFZvCQYa2x6WM2Tr+EpBIa2QVN1aXDH29coyFX+sLOjufJ9IknjEa?=
 =?us-ascii?q?WLzkUYI4yBy1qCf8zLxoKPeS/TcX4on+3tp47PGGiBcp6DZvBN6c2Wzec2Yhsm?=
 =?us-ascii?q?oORjIylIByp1Z800qOmYJxmfZfB9Ubs/9AVAY3MZ7Wk7UhI9/3UwPFONyOTQD1?=
 =?us-ascii?q?bM+hBGR7a9M6w9YDZw5GXZ2elRHZ3CusSfdBkqeXLIY5/qLVwz76IMMrmCWO77?=
 =?us-ascii?q?Uok1RzGpgHDmahnKMqslGLX4M=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACN0QpcmBHrdtBcBxsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVEGAQEBCwGBMCqBWl6ME1+LMoINfIgWjj2BdhEYFIddIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCXAECAwECJBMMCikDAwECBgEBC?=
 =?us-ascii?q?hgmCAMBHRwaBhMFglFLgWoDFQEEpl4ziAYNghyMIhEGgX+BEYJdNYJXgheFbgK?=
 =?us-ascii?q?QN5ACLgcCAo4agy8CFoljh1UsjmOKDIFGgg1wFYMngicXEo4pIzEBgQYch3wHI?=
 =?us-ascii?q?i2BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ADAACN0QpcmBHrdtBcBxsBAQEBAwEBAQcDAQEBgVEGAQE?=
 =?us-ascii?q?BCwGBMCqBWl6ME1+LMoINfIgWjj2BdhEYFIddIjQJDQEDAQEBAQEBAgETAQEBA?=
 =?us-ascii?q?QEICwsGGw4vgjYFAgMaAQaCXAECAwECJBMMCikDAwECBgEBChgmCAMBHRwaBhM?=
 =?us-ascii?q?FglFLgWoDFQEEpl4ziAYNghyMIhEGgX+BEYJdNYJXgheFbgKQN5ACLgcCAo4ag?=
 =?us-ascii?q?y8CFoljh1UsjmOKDIFGgg1wFYMngicXEo4pIzEBgQYch3wHIi2BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="56015670"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 12:03:19 -0800
Received: from localhost ([::1]:47957 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVMLH-0004IH-1j
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 15:03:19 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47624)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mst@redhat.com>) id 1gVMKz-0004Hx-JD
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 15:03:06 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mst@redhat.com>) id 1gVMKt-0001JQ-5N
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 15:03:01 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60158)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mst@redhat.com>) id 1gVMKs-0001J2-SP
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 15:02:55 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id CE62730020B2;
	Fri,  7 Dec 2018 20:02:53 +0000 (UTC)
Received: from redhat.com (ovpn-124-251.rdu2.redhat.com [10.10.124.251])
	by smtp.corp.redhat.com (Postfix) with SMTP id 8A7F010001BC;
	Fri,  7 Dec 2018 20:02:52 +0000 (UTC)
Date: Fri, 7 Dec 2018 15:02:52 -0500
From: "Michael S. Tsirkin" <mst@redhat.com>
To: Daniel Henrique Barboza <danielhb413@gmail.com>
Message-ID: <20181207150227-mutt-send-email-mst@kernel.org>
References: <20181205194701.17836-1-danielhb413@gmail.com>
	<20181205194701.17836-4-danielhb413@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181205194701.17836-4-danielhb413@gmail.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.44]);
	Fri, 07 Dec 2018 20:02:54 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v11 3/3] qmp hmp: Make system_wakeup check
 wake-up support and run state
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: mdroth@linux.vnet.ibm.com, armbru@redhat.com, imammedo@redhat.com,
	qemu-devel@nongnu.org, ehabkost@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, Dec 05, 2018 at 05:47:01PM -0200, Daniel Henrique Barboza wrote:
> The qmp/hmp command 'system_wakeup' is simply a direct call to
> 'qemu_system_wakeup_request' from vl.c. This function verifies if
> runstate is SUSPENDED and if the wake up reason is valid before
> proceeding. However, no error or warning is thrown if any of those
> pre-requirements isn't met. There is no way for the caller to
> differentiate between a successful wakeup or an error state caused
> when trying to wake up a guest that wasn't suspended.
> 
> This means that system_wakeup is silently failing, which can be
> considered a bug. Adding error handling isn't an API break in this
> case - applications that didn't check the result will remain broken,
> the ones that check it will have a chance to deal with it.
> 
> Adding to that, the commit before previous created a new QMP API called
> query-current-machine, with a new flag called wakeup-suspend-support,
> that indicates if the guest has the capability of waking up from suspended
> state. Although such guest will never reach SUSPENDED state and erroring
> it out in this scenario would suffice, it is more informative for the user
> to differentiate between a failure because the guest isn't suspended versus
> a failure because the guest does not have support for wake up at all.
> 
> All this considered, this patch changes qmp_system_wakeup to check if
> the guest is capable of waking up from suspend, and if it is suspended.
> After this patch, this is the output of system_wakeup in a guest that
> does not have wake-up from suspend support (ppc64):
> 
> (qemu) system_wakeup
> wake-up from suspend is not supported by this guest
> (qemu)
> 
> And this is the output of system_wakeup in a x86 guest that has the
> support but isn't suspended:
> 
> (qemu) system_wakeup
> Unable to wake up: guest is not in suspended state
> (qemu)
> 
> Reported-by: Balamuruhan S <bala24@linux.vnet.ibm.com>
> Signed-off-by: Daniel Henrique Barboza <danielhb413@gmail.com>


for ACPI:

Reviewed-by: Michael S. Tsirkin <mst@redhat.com>

> ---
>  hmp.c                   | 5 ++++-
>  hw/acpi/core.c          | 3 ++-
>  hw/char/serial.c        | 2 +-
>  hw/input/ps2.c          | 6 +++---
>  hw/timer/mc146818rtc.c  | 2 +-
>  include/sysemu/sysemu.h | 3 ++-
>  migration/migration.c   | 4 ++--
>  qapi/misc.json          | 8 +++++++-
>  qmp.c                   | 8 +++++++-
>  vl.c                    | 6 ++++--
>  10 files changed, 33 insertions(+), 14 deletions(-)
> 
> diff --git a/hmp.c b/hmp.c
> index 7828f93a39..0f5d943413 100644
> --- a/hmp.c
> +++ b/hmp.c
> @@ -1220,7 +1220,10 @@ void hmp_cont(Monitor *mon, const QDict *qdict)
>  
>  void hmp_system_wakeup(Monitor *mon, const QDict *qdict)
>  {
> -    qmp_system_wakeup(NULL);
> +    Error *err = NULL;
> +
> +    qmp_system_wakeup(&err);
> +    hmp_handle_error(mon, &err);
>  }
>  
>  void hmp_nmi(Monitor *mon, const QDict *qdict)
> diff --git a/hw/acpi/core.c b/hw/acpi/core.c
> index 52e18d7810..d6f0709691 100644
> --- a/hw/acpi/core.c
> +++ b/hw/acpi/core.c
> @@ -514,7 +514,8 @@ static uint32_t acpi_pm_tmr_get(ACPIREGS *ar)
>  static void acpi_pm_tmr_timer(void *opaque)
>  {
>      ACPIREGS *ar = opaque;
> -    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_PMTIMER);
> +
> +    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_PMTIMER, NULL);
>      ar->tmr.update_sci(ar);
>  }
>  
> diff --git a/hw/char/serial.c b/hw/char/serial.c
> index 02463e3388..7c42a2abfc 100644
> --- a/hw/char/serial.c
> +++ b/hw/char/serial.c
> @@ -611,7 +611,7 @@ static void serial_receive1(void *opaque, const uint8_t *buf, int size)
>      SerialState *s = opaque;
>  
>      if (s->wakeup) {
> -        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
>      }
>      if(s->fcr & UART_FCR_FE) {
>          int i;
> diff --git a/hw/input/ps2.c b/hw/input/ps2.c
> index eb33ee9b6f..d3161f1e7c 100644
> --- a/hw/input/ps2.c
> +++ b/hw/input/ps2.c
> @@ -255,7 +255,7 @@ static void ps2_put_keycode(void *opaque, int keycode)
>      PS2KbdState *s = opaque;
>  
>      trace_ps2_put_keycode(opaque, keycode);
> -    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
>  
>      if (s->translate) {
>          if (keycode == 0xf0) {
> @@ -285,7 +285,7 @@ static void ps2_keyboard_event(DeviceState *dev, QemuConsole *src,
>          return;
>      }
>  
> -    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
>      assert(evt->type == INPUT_EVENT_KIND_KEY);
>      qcode = qemu_input_key_value_to_qcode(key->key);
>  
> @@ -748,7 +748,7 @@ static void ps2_mouse_sync(DeviceState *dev)
>      }
>  
>      if (s->mouse_buttons) {
> -        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
>      }
>      if (!(s->mouse_status & MOUSE_STATUS_REMOTE)) {
>          /* if not remote, send event. Multiple events are sent if
> diff --git a/hw/timer/mc146818rtc.c b/hw/timer/mc146818rtc.c
> index e4e4de8b8a..69483152c3 100644
> --- a/hw/timer/mc146818rtc.c
> +++ b/hw/timer/mc146818rtc.c
> @@ -455,7 +455,7 @@ static void rtc_update_timer(void *opaque)
>      if (qemu_clock_get_ns(rtc_clock) >= s->next_alarm_time) {
>          irqs |= REG_C_AF;
>          if (s->cmos_data[RTC_REG_B] & REG_B_AIE) {
> -            qemu_system_wakeup_request(QEMU_WAKEUP_REASON_RTC);
> +            qemu_system_wakeup_request(QEMU_WAKEUP_REASON_RTC, NULL);
>          }
>      }
>  
> diff --git a/include/sysemu/sysemu.h b/include/sysemu/sysemu.h
> index 0446adacc6..162c4b16d9 100644
> --- a/include/sysemu/sysemu.h
> +++ b/include/sysemu/sysemu.h
> @@ -74,7 +74,8 @@ void qemu_exit_preconfig_request(void);
>  void qemu_system_reset_request(ShutdownCause reason);
>  void qemu_system_suspend_request(void);
>  void qemu_register_suspend_notifier(Notifier *notifier);
> -void qemu_system_wakeup_request(WakeupReason reason);
> +bool qemu_wakeup_suspend_enabled(void);
> +void qemu_system_wakeup_request(WakeupReason reason, Error **errp);
>  void qemu_system_wakeup_enable(WakeupReason reason, bool enabled);
>  void qemu_register_wakeup_notifier(Notifier *notifier);
>  void qemu_register_wakeup_support(void);
> diff --git a/migration/migration.c b/migration/migration.c
> index 49ffb9997a..ffc4d9e556 100644
> --- a/migration/migration.c
> +++ b/migration/migration.c
> @@ -2408,7 +2408,7 @@ static int postcopy_start(MigrationState *ms)
>      qemu_mutex_lock_iothread();
>      trace_postcopy_start_set_run();
>  
> -    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
>      global_state_store();
>      ret = vm_stop_force_state(RUN_STATE_FINISH_MIGRATE);
>      if (ret < 0) {
> @@ -2612,7 +2612,7 @@ static void migration_completion(MigrationState *s)
>      if (s->state == MIGRATION_STATUS_ACTIVE) {
>          qemu_mutex_lock_iothread();
>          s->downtime_start = qemu_clock_get_ms(QEMU_CLOCK_REALTIME);
> -        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
>          s->vm_was_running = runstate_is_running();
>          ret = global_state_store();
>  
> diff --git a/qapi/misc.json b/qapi/misc.json
> index deb982ed38..03df2c37cf 100644
> --- a/qapi/misc.json
> +++ b/qapi/misc.json
> @@ -1235,12 +1235,18 @@
>  ##
>  # @system_wakeup:
>  #
> -# Wakeup guest from suspend.  Does nothing in case the guest isn't suspended.
> +# Wake up guest from suspend. If the guest has wake-up from suspend
> +# support enabled (wakeup-suspend-support flag from
> +# query-current-machine), wake-up guest from suspend if the guest is
> +# in SUSPENDED state. Return an error otherwise.
>  #
>  # Since:  1.1
>  #
>  # Returns:  nothing.
>  #
> +# Note: prior to 4.0, this command does nothing in case the guest
> +# isn't suspended.
> +#
>  # Example:
>  #
>  # -> { "execute": "system_wakeup" }
> diff --git a/qmp.c b/qmp.c
> index e7c0a2fd60..f557d1617d 100644
> --- a/qmp.c
> +++ b/qmp.c
> @@ -183,7 +183,13 @@ void qmp_cont(Error **errp)
>  
>  void qmp_system_wakeup(Error **errp)
>  {
> -    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
> +    if (!qemu_wakeup_suspend_enabled()) {
> +        error_setg(errp,
> +                   "wake-up from suspend is not supported by this guest");
> +        return;
> +    }
> +
> +    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, errp);
>  }
>  
>  ObjectPropertyInfoList *qmp_qom_list(const char *path, Error **errp)
> diff --git a/vl.c b/vl.c
> index 8f5b3ef4e9..5b51bbc47c 100644
> --- a/vl.c
> +++ b/vl.c
> @@ -1752,11 +1752,13 @@ void qemu_register_suspend_notifier(Notifier *notifier)
>      notifier_list_add(&suspend_notifiers, notifier);
>  }
>  
> -void qemu_system_wakeup_request(WakeupReason reason)
> +void qemu_system_wakeup_request(WakeupReason reason, Error **errp)
>  {
>      trace_system_wakeup_request(reason);
>  
>      if (!runstate_check(RUN_STATE_SUSPENDED)) {
> +        error_setg(errp,
> +                   "Unable to wake up: guest is not in suspended state");
>          return;
>      }
>      if (!(wakeup_reason_mask & (1 << reason))) {
> @@ -1786,7 +1788,7 @@ void qemu_register_wakeup_support(void)
>      wakeup_suspend_enabled = true;
>  }
>  
> -static bool qemu_wakeup_suspend_enabled(void)
> +bool qemu_wakeup_suspend_enabled(void)
>  {
>      return wakeup_suspend_enabled;
>  }
> -- 
> 2.19.2

