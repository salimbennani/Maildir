Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 08:32:18 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 430515805CF;
	Sun, 16 Dec 2018 11:38:55 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 11:38:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcG1mzBTEixOYJVI8HdwBBHAcwNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBKEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmlBQm0Bu7i0SNIimPs0KEmz+gtDR/K0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8cXe6yzanH0TXDYOlI1jf59YPGbwotquySU7JrcMrR00ovFwLDjlme?=
 =?us-ascii?q?tIfoODaV1v8Rs2WA9epvS/+gi249pAFtuDSg2sAsiozQi48T11vK9j15zZ4rKd?=
 =?us-ascii?q?GkTEN3e8OoHZVOuy2AKod7Qd8uT3tptSs40rEKp4K3cSwQxJg6yRPTdeaLf5WL?=
 =?us-ascii?q?7x/tTuqdPzR1iXR4c7ylnRmy61KvyujkW8m0zllKqi1Fn8HStnACyRPT8NKLSv?=
 =?us-ascii?q?hj8Ue73zaAyQTT5vtDIUAumqrXM58hwrgumZoPqUnPADP6lUHsgKOLeEgo5PKk?=
 =?us-ascii?q?5/nkb7n6vJORNo15hhn7Mqs0m8y/Beo4MhIJX2ie4em80Lzj/UvkQLRFl/E2kb?=
 =?us-ascii?q?fWsIrcJcsFoq61GghV04gl6xmhFTery8oYnXYZI1JfYh6HjJbmO0vIIP/mCfez?=
 =?us-ascii?q?mVOskC1kx/zeJL3uHo3NLmTfkLfmZbt9709cyAktwtxF6JNUF6oMIPbyWk/3qd?=
 =?us-ascii?q?zZAQU1Mw2yw+b7Ftp90pkSVn6IAq+cKKnSq0OH5vozI+mQY48YoDb9JOIk5/7y?=
 =?us-ascii?q?l3A5nkURfam03ZQNbnC4Ee9rI0GYYXrqn9cAHn0Gvgs4TOz2llKCVSRfaGq1X6?=
 =?us-ascii?q?I5/js7Ep6pDZ/fRoCxh7yMxCW7HppIaWxcCVCMFnHod4ODW/oXbCKSI8lhkiEL?=
 =?us-ascii?q?VLS7So8h0w2uuxH+y7Z9MuXU/SgYv4r51Ndp/+3TiQ0y9TtsAsuHyGGNT2Z0nm?=
 =?us-ascii?q?ASSz8sxq9/o1dwylOC0ah+nvxZGsZf5/JPUgcmK5Hcy/Z2BMz1WgLEZt2JUkqp?=
 =?us-ascii?q?Qs26ATEtSdI829wObFx7G9m4ihDD3jClA7kal7GQAJw086Tc32X+JspnynbG0r?=
 =?us-ascii?q?UhgEciQsdVKWKmgat//RDJB4HVi0WZi7qqdaME0SHQ7miD03SBsFtYUAFqV6XF?=
 =?us-ascii?q?Rm4QZk3RodT95UPCSruuBK8jMgtAz86CN6RLZsfojVVAWPfsJtDeb3itlGe3AB?=
 =?us-ascii?q?aC3qmMY5bye2UBwCXdD1AJnB0J8naYKwcyHCehrHjYDDx1C13vZVjh8e1/qHO9?=
 =?us-ascii?q?U081wBuGb0xn17qp5BEVgeaQRO8U3rIBoC0hsSl7HE6h39LKDNqNvxZhfKRZYd?=
 =?us-ascii?q?M6/FdH1WLYuxZhPpC6KKBinFoecwVxv0PhzBh3DoRAkc43rHIl1gZyKKSY0E9f?=
 =?us-ascii?q?eDOcx5z/JrrXKmzq9hC1d6HWwk3e0MqR+qoX8vs4r0vsvQ63GUsi6XloyMRV3G?=
 =?us-ascii?q?aG6ZXMDwoSVozxX10z9xh7obHafyY865nV1X1qLam7rDvC18g1C+sizxaqZ81f?=
 =?us-ascii?q?P7+cFA/uD80aANCjKew3m1Szch0IJuFT9K4uMMOgePuLw6qrPOdmnDK7gmVL+o?=
 =?us-ascii?q?F90kSQ9yViTu7ExYoKw/ad3gGfTTfzkE+hstzrmYBDfTwSBGu/xjT+C45Le6Jy?=
 =?us-ascii?q?epwHCWGwLM2tx9VynoLiVGRc9FG+GVwGwsipeRyJYlz53A1Q01kXoHO9lSu5yT?=
 =?us-ascii?q?x0jy8mrq6F0CPSxOTicQINOnRXS2l6kVfsPY+0gsgaXUipdQQolAGp5V3nx6hd?=
 =?us-ascii?q?v6l/K2jTQUFVfyn5NW1iU62wtqacbM5L8p8nrSJXUOGka1CAVrH9uwca0z/kH2?=
 =?us-ascii?q?ZGxjA0bSuqupb6nxx9km6dN2x8rHnaecFxwxfQ+trcSOVV3joHQil4lDbWCkK9?=
 =?us-ascii?q?P9mv4dWbiZPDvvqiWGKmU51ZaTPrwp+YtCun+W1qBgWynvCpld3gCwQ60y7719?=
 =?us-ascii?q?9xWCXMrRb8ZJTr1qugPeJmeEloGEHz685gFo5ilYswgYka2WIGiZWN4XoHjWDz?=
 =?us-ascii?q?PM1Y2a3kbXoBXz4Lw8PP7wjj101uNXaJx4P/VnWAzcptfdi6YmUK2i0j68BGEr?=
 =?us-ascii?q?ub7LtBnSFtuFq3sRrRYeRhnjca0fYu7X8ag+ITtwY3wCSSHKsSHVVGMiz2jBuH?=
 =?us-ascii?q?8cq+rKpMaWarcLiw0ld+nN+7ALGDpAFcRGj2epM4ESBs6cV/NUrG0Gfv5YH8ZN?=
 =?us-ascii?q?nQcdUTuwWIkxfHiuhZMpMwmeAMhSp6ImL9pnwlxvU/jRxv25G6oYeGJ39s/KK/?=
 =?us-ascii?q?Hh5XKDn1a9kP9THqiKZUhtyW0Jy3HpV9BjULW4PlQumyHzIVsfTnKhyCEDkhqn?=
 =?us-ascii?q?qAHbrfHAmf6Fpprn7VEpCrMW2XK2cdzdl4WBadI0lfihgOXDomhp45ChyqxMv5?=
 =?us-ascii?q?fUd7/D8R40D3qgBWxuJ0LRX/UXrfpAS1ajcyUpefNwFb7gVD50fTLMyf4fh/Hy?=
 =?us-ascii?q?Be/p29sgONLnaXaBhPDWEMQkaEHUzsPqGy5dnc9OiVHuq/L/zTYbWXtOxRTfGI?=
 =?us-ascii?q?yYi00oth+TaMOd6CPn1jD/09x0pCUmp1G8XfmzUTVSMXkzjBYNKcpBe54id3tN?=
 =?us-ascii?q?yw8Oz3WALz4ouCE7tSPstu+xC1gqeDNvSchCVjKTZf2ZMD22XIyKUE3FMJjyFu?=
 =?us-ascii?q?dj+tEakPtCLXTaLQnLNXAAAfay9pKMRI6Kc81BFXOcHHktP1yqJ4jvktBlhfSF?=
 =?us-ascii?q?zugdupatIKIm2nMFPHBV2GNLCHJT3N3sH2brmwSbxWjOVIqRKwvSyXHFPkPjSG?=
 =?us-ascii?q?jzPpTQygMflQjCGHOxxToJ29chdoCWT5UN3qcAG0MN9pgj0w2rA0gnLKNWgBMT?=
 =?us-ascii?q?lzaU9Nr7uQ7T9GjfV7AWBO8n1lLeyckSaD8+bYMooWsedsAilsl+NV+nI6y75U?=
 =?us-ascii?q?7CFCXPN0mSvSocRoo1GpieSPzjtnUBxTqjdEno6LvENiObnH+ZlEQ3rL4BUN7W?=
 =?us-ascii?q?DDQygN8vFnDcfp84BdztfGnbm7fDdP993d9NA0BMXOLs+Ddn07Pky6NiTTCV5P?=
 =?us-ascii?q?aD+gNWjSgwRm1rmu7XyPrZk84NC4nYESYqVWWFw8CrURDUEzT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr6UCJHMg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACQqRZch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMFV+LFoINFJdEgXMUGBMBh0ciNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKS+CNiQBgmEBAQEBAgEBAiQTPwUBCQEBChguAzoaBhMFg?=
 =?us-ascii?q?x2BeQgFpgUzihyMPhEGgX+BEYMSimACiR6HLYU9ixEHAgKRWAIWgV2FHIJ6h1+?=
 =?us-ascii?q?ZZIFGgg5wFYMngicXjjshAQExgQUBARyNUwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAACQqRZch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMFV+LFoINFJdEgXMUGBMBh0ciNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKS+CNiQBgmEBAQEBAgEBAiQTPwUBCQEBChguAzoaBhMFgx2BeQgFpgUzihy?=
 =?us-ascii?q?MPhEGgX+BEYMSimACiR6HLYU9ixEHAgKRWAIWgV2FHIJ6h1+ZZIFGgg5wFYMng?=
 =?us-ascii?q?icXjjshAQExgQUBARyNUwEB?=
X-IronPort-AV: E=Sophos;i="5.56,361,1539673200"; 
   d="scan'208";a="142342751"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 16 Dec 2018 11:38:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730878AbeLPTiu (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 14:38:50 -0500
Received: from mx1.redhat.com ([209.132.183.28]:44670 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730747AbeLPTit (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 14:38:49 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com [10.5.11.12])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 4995581F12;
        Sun, 16 Dec 2018 19:38:49 +0000 (UTC)
Received: from redhat.com (ovpn-120-77.rdu2.redhat.com [10.10.120.77])
        by smtp.corp.redhat.com (Postfix) with SMTP id 447ED4139;
        Sun, 16 Dec 2018 19:38:48 +0000 (UTC)
Date: Sun, 16 Dec 2018 14:38:47 -0500
From: "Michael S. Tsirkin" <mst@redhat.com>
To: Bjorn Helgaas <helgaas@kernel.org>
Cc: linux-kernel@vger.kernel.org, xuyandong <xuyandong2@huawei.com>,
        stable@vger.kernel.org, Yinghai Lu <yinghai@kernel.org>,
        Jesse Barnes <jbarnes@virtuousgeek.org>,
        linux-pci@vger.kernel.org
Subject: Re: [PATCH] pci: avoid bridge feature re-probing on hotplug
Message-ID: <20181216143448-mutt-send-email-mst@kernel.org>
References: <20181211021617.24072-1-mst@redhat.com>
 <20181211141808.GE99796@google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181211141808.GE99796@google.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.27]); Sun, 16 Dec 2018 19:38:49 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 11, 2018 at 08:18:08AM -0600, Bjorn Helgaas wrote:
> Hi Michael,
> 
> Please run "git log --oneline drivers/pci/setup-bus.c" and follow
> the usual style.
> 
> On Mon, Dec 10, 2018 at 09:18:40PM -0500, Michael S. Tsirkin wrote:
> > commit 1f82de10d6 ("PCI/x86: don't assume prefetchable ranges are
> > 64bit") added probing of bridge support for 64 bit memory
> > each time bridge is re-enumerated.
> 
> Use conventional SHA1 reference (12-char SHA1).
> 
> > Unfortunately this probing is destructive if any device behind
> > the bridge is in use at this time.
> 
> Agreed, this sounds like a problem.
> 
> > There's no real need to re-probe the bridge features as the
> > regiters in question never change - detect that using
> > the memory flag being set and skip the probing.
> 
> s/regiters/registers/
> 
> > Avoiding repeated calls to pci_bridge_check_ranges might be even nicer
> > would be a bigger patch and probably not appropriate on stable.
> 
> Maybe so.  The ideal thing might be to have a trivial patch like this
> that can be marked for stable, immediately followed by the nicer
> patch.  Trivial band-aids tend to accumulate and make things harder in
> the future.
> 
> I'd have to take a much harder look at the problem to understand
> 1f82de10d6b1.  The comment about "double check" seems misleading -- as
> you say, the hardware doesn't change and checking once should be
> enough.  And if we're calling pci_bridge_check_ranges() more than
> necessary, that sounds like a problem, too.
> 
> > Reported-by: xuyandong <xuyandong2@huawei.com>
> > Cc: stable@vger.kernel.org
> > Cc: Yinghai Lu <yinghai@kernel.org>
> > Cc: Jesse Barnes <jbarnes@virtuousgeek.org>
> > Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
> > ---
> > 
> > This issue has been reported on upstream Linux and Centos.
> 
> Are there URLs to these reports that we could include in the changelog?
> 
> >  drivers/pci/setup-bus.c | 7 +++++++
> >  1 file changed, 7 insertions(+)
> > 
> > diff --git a/drivers/pci/setup-bus.c b/drivers/pci/setup-bus.c
> > index ed960436df5e..7ab42f76579e 100644
> > --- a/drivers/pci/setup-bus.c
> > +++ b/drivers/pci/setup-bus.c
> > @@ -741,6 +741,13 @@ static void pci_bridge_check_ranges(struct pci_bus *bus)
> >  	struct resource *b_res;
> >  
> >  	b_res = &bridge->resource[PCI_BRIDGE_RESOURCES];
> > +
> > +	/* Don't re-check after this was called once already:
> > +	 * important since bridge might be in use.
> > +	 */
> > +	if (b_res[1].flags & IORESOURCE_MEM)
> > +		return;
> 
> Use conventional multi-line comment style.

Will fix.

> This test isn't 100%: devices below the bridge could be using only IO,
> or theoretically could be even using just config space.

Right but
1. memory is not an optional capability for bridges. All pci bridges
   support memory bridging (unlike e.g. IO).
2. the line below accordingly sets IORESOURCE_MEM unconditionally
   even if devices below the bridge only use IO for now.

So IIUC this really results in bailing out if bridge has already
been configured. Did I miss something?


> If it's safe to bail out if the bridge is in use, why isn't it safe to
> bail out *always*?

Well IIUC we need to probe support for optional capabilities such
as IO and 64 bit bridging.
this is what this function does, doesn't it?

> >  	b_res[1].flags |= IORESOURCE_MEM;
> >  
> >  	pci_read_config_word(bridge, PCI_IO_BASE, &io);
> > -- 
> > MST
