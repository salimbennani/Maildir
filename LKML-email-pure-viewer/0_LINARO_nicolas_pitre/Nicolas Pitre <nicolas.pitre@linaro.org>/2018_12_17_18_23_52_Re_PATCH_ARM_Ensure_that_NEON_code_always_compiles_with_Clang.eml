Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:48:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 447655805CF;
	Mon, 17 Dec 2018 10:24:08 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 10:24:07 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A1+C8KBfu9RmqMFiyKjikbe6ylGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZRyN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEugOM+VWr4bzqFQBsQC+BRGuCe701j9EmmX70bEm3+k7Dw3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LL8cUeGpw6nPyTXMdehW0irn5ojJbhAhu++DVq93fMrXyEkgCwTFjlGK?=
 =?us-ascii?q?poz+JT+VzuUNs3SB7+V+Tu+vj28nqwdrrTi1wccgkI7Jhpgayl3d8yhy3Yg7Jd?=
 =?us-ascii?q?q9SEFhYN6kFoNdty6bN4tqQsMiXnpntDwmxb0BvJ62ejUBxpc/xxPHdfCLb4yF?=
 =?us-ascii?q?7gj+WOufPzt0nm9pdbGjixqo8EWtyPXwW8uo3FpQrSdJjMPAum0R2xHc8MSLVO?=
 =?us-ascii?q?Vx80Sn1D2SzQ7c8PtELloxlafDK54u3Lowlp0LvETdES/5hl/2gLWVdko64Oio?=
 =?us-ascii?q?7froYrH8qp+bLY90hRnyMqUomsOhHeQ1KhYCU3Sf9OimybHu81P1TK9XgvA1jq?=
 =?us-ascii?q?XVqpHXKMYDqq68GQBV04Ij6xilDzeh1dQVhX0HLFNDeBKagInlIlLOL+7iDfe5?=
 =?us-ascii?q?nVuslC5nx/fIP73nHJrNNGPOkKnufblj8U5Q0gkzws5F55JSFL4BJOj/WkjrtN?=
 =?us-ascii?q?zXFhM5KRC7w/77CNVh0YMTQWaPAq6aMKzMq1OJ6f8vLvKIZI8Uvjb9Nvck6+Tv?=
 =?us-ascii?q?jX8/hV8SY62p0YELZ3C/G/RsO1+Zbmb0gtcdDWcKuRIzTOzwh12DTT5cfXGyU7?=
 =?us-ascii?q?g85jEmEo2mC4jDS5upgLyA2ie7A5JXanpHClCKDXfnaYGEV+0QZyKVJ89riiYE?=
 =?us-ascii?q?WqS5S489yRGusxf3y7hgLuXK4CEYtpXj1N5z5+3Ujhwy8T10D8KA02CCVW10n2?=
 =?us-ascii?q?UIRyMo06B7u0By1lCD0a1gifxCCdNT/+9JUhs9NZPE1eN6ENDyWgXCftuTUlap?=
 =?us-ascii?q?WNemDCo1TtIwxd8Ofkl8F8+jjhDFwyqlHbsVm6aXC5wz96LWx2LxKNply3bayK?=
 =?us-ascii?q?khiEErQshVOm2gnKJ/8wnTCJTPk0WWjKuqcaUc3CjQ9GaM12aOvUdYUBJuXqXB?=
 =?us-ascii?q?R3wQekzWrdHh7EPYU7CuEagnMhdGycOaN6RFcMPpgktcSPfjItveZXmxlHm2BR?=
 =?us-ascii?q?qPwrOMb4/qe2EG0SXZCUgElR0T/HmcOQg/ACehv3zRDDh0GV3zZEPs9PF0qGmn?=
 =?us-ascii?q?QU8s0wGKc0ph2qKo9REPm/yTVekf3rIetycnsDV7AlC90snSC9qBoQphYapdbc?=
 =?us-ascii?q?k84FdByWLWqQh9Moa8IKBlg14Uax53sF/21xVrFoVAltAnrG8rzAp3LqKYzFNB?=
 =?us-ascii?q?djOC0ZDsILHXLXPy/BSua67Q1VHTy9KW+qYJ6PQlpFTvpgCpFkw+83p519lZyW?=
 =?us-ascii?q?eT5pLPDAAKS5L+Tl439wRmp7HdeiQy/YfU2mNjMKaqsj7OwckmBPY4xRm6eddf?=
 =?us-ascii?q?M6SEFBHpHs0eBsiuLvEqmlezYhIFOuBS6LA7P8e8e/Sa366rOf5qnCi6gmRf/I?=
 =?us-ascii?q?B9zkWM+jJ8S+7VxZoK3+uU3wqHVzjmilehvdv6mYRFZTEUA2q+xjLoBI9XZq1u?=
 =?us-ascii?q?Y4kLDX2iLNGwxtV7n5TtQWJX9Ea/B1Ma38+kYQCSb13h0gJKz0QYvHunlTG+zz?=
 =?us-ascii?q?NqiTEpr7OT0zDUzOTmaRUIJHRLRG5kjVr3JYi0jtYaXFWnbgQzlRul41r6yLZf?=
 =?us-ascii?q?pKhlM2bTRkJIdTDsL25+SquwqqaCY8lX5ZIosCVbSuS9bUqBSr7gpRsXyCfjH2?=
 =?us-ascii?q?pYxDAmeDCmoJT5nxpmiG2DKHZ/tmbWecZ1xR3H/tzTWeZR3iYaRCl/kTTXBEKz?=
 =?us-ascii?q?P8Oq/dWXkJfPqPu+WHiiVp1QcCnry52PtC2g6G1uAB2/me2zm9L9HQg71y/7y8?=
 =?us-ascii?q?dlVSHSoBngZYnr0rywMfh7cUlwGF/89816F5l+k4Qqg5Ecw3oahpST/XcclWfz?=
 =?us-ascii?q?MNNb2b/xbXYXRD4LxcLV7xbh2EF5Mn2JwIf5XG2HwsR9f9m6fn8W2iUl4sBJEq?=
 =?us-ascii?q?iU7aZInStoolWiqwLRbuNwnjMcyfso9X4bjPsFuAsrziWBHL8SGVNUMjDrlxSN?=
 =?us-ascii?q?99q+trlYZH6zcbis00pzhdWhDLCBog5GQnr4dIktHTRs7sphKlLDy2P86pvreN?=
 =?us-ascii?q?TLadITtxuUkwrPjuRPKZIxkOYKijRjOW7noXIlzOs7hwR03Z6mpIiHN3lt/KWh?=
 =?us-ascii?q?Dx5EMT31Ytkf+zD3gqZYg8aWxJuvHpR6FzUPXZvoS++oET0IufTmMQaODCMzqn?=
 =?us-ascii?q?OBFbXDGg+f7V9sr2jTHJCzK3GXOH4ZwM15SxaHI0xfhB0UUC8+np4kDQ2qwM3h?=
 =?us-ascii?q?cEFk5jEe/FL4qx1Myv52OBn7SGvQuACoajIsQpiFMBVW9h1C51vSMcGG7OJ8BS?=
 =?us-ascii?q?RY8YO6rACXNmyXfQdIDXwKWkyZAVDsJKKu6MLE8+iZAOq+MvTPba+PqexYS/eH?=
 =?us-ascii?q?25av3pF68DaLM8WFJmNiAOEj2kpfQXB5HNzUmjUISywKjiLNctSUpBGm9i1sqc?=
 =?us-ascii?q?C/9vvrVRnr5YuODbtSLNpu9wq3gaeFK+6fmiJ5JSxE2ZMLwH/C0KIf00IKiyFy?=
 =?us-ascii?q?azmtFqwNtS7TQ6LRma9XDB8bZzlwNMtS6KI80RdCOdTGitPuzbN4iv81C1FYVV?=
 =?us-ascii?q?3ugM2pZMoKI32jO1PDHkqEKLOGJTjTycHtfay8UaFQjPlTtxCoozmbDlTsPi6d?=
 =?us-ascii?q?mDjpTRyvNeBMgTqfPBxfvoG9bxlsBXLiTNLgdh20Ltt3gScqzr0zg3PALXQcPi?=
 =?us-ascii?q?Rkc0NRsr2Q6jtVgul+G2xE9HZqMfOIlDqZ7+bGLJYbqv9rAiVyl+JH73U20bpV?=
 =?us-ascii?q?7CdYRPNrnCvetMJho1ajkuOX0DpoTAJOqipXhIKMpUhjOb/W9p9FWXbF+hIC9W?=
 =?us-ascii?q?SRCxQQqNtjBd3ioKRQytnJlKLuJzZO6dPU/c0AB8fKLMKLKmYuMR3sGG2cMAxQ?=
 =?us-ascii?q?aze3NWjZz2ddmfeZ+3mRqYJy/p7lhJcFSrZdX1ExEvQAIktgFd0GZpxwW2V3v6?=
 =?us-ascii?q?SciZsu5HG5qBDKDP1boorKHqaUAP7oLD+Cy6FFewEF6bf5K40JMcv8wUM0OQoy?=
 =?us-ascii?q?p5jDB0eFBYMFmSZmdAJh5RwVqHU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AKAgCD6Bdch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZQKCaIECJ4x0ixmBaCUUiQGQNhIBARgLCAGHViI4EgEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCCkjDEIWAYFdJAGCYgECAgEBAjcGAQE3AQQBCQEBCg4EIhIDHhMBBQECD?=
 =?us-ascii?q?A4GEwWDHQGBaAMNCAUKnGs8iiCCH4J2AQEFgTABg0wNghQDBRKLEIEcgVc/gRA?=
 =?us-ascii?q?BM4IxLoJXRwKHQJBNkB8vBwKCJASEZYcdgzAYiXOHX44ygRKJeQYCCQcPIYE8g?=
 =?us-ascii?q?XczGjCDL4IbDBeDSoUUhV0iMoEEAQEBIIooXCuCIAEB?=
X-IPAS-Result: =?us-ascii?q?A0AKAgCD6Bdch0O0hNFjHAEBAQQBAQcEAQGBZQKCaIECJ4x?=
 =?us-ascii?q?0ixmBaCUUiQGQNhIBARgLCAGHViI4EgEDAQEBAQEBAgETAQEBCgsJCCkjDEIWA?=
 =?us-ascii?q?YFdJAGCYgECAgEBAjcGAQE3AQQBCQEBCg4EIhIDHhMBBQECDA4GEwWDHQGBaAM?=
 =?us-ascii?q?NCAUKnGs8iiCCH4J2AQEFgTABg0wNghQDBRKLEIEcgVc/gRABM4IxLoJXRwKHQ?=
 =?us-ascii?q?JBNkB8vBwKCJASEZYcdgzAYiXOHX44ygRKJeQYCCQcPIYE8gXczGjCDL4IbDBe?=
 =?us-ascii?q?DSoUUhV0iMoEEAQEBIIooXCuCIAEB?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="45322396"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 10:24:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388824AbeLQSX6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 13:23:58 -0500
Received: from mail-qk1-f193.google.com ([209.85.222.193]:42943 "EHLO
        mail-qk1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2388786AbeLQSX5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 13:23:57 -0500
Received: by mail-qk1-f193.google.com with SMTP id 68so7896087qke.9
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 10:23:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:in-reply-to:message-id:references
         :user-agent:mime-version;
        bh=P4GuFcNbaeLR0enY0NKknfehQDA9aBA5NA7dHQ7FTFc=;
        b=anF8KtfH5h2u/u82lNXVbLnHnW4pRnT8emNbzdMGu4BVrB6/eK5wFEc29YYbAerAD7
         8TFU2Ikpx/oTA3wsOw1h3HHmT2g6P1K8dYE1MjqHdLadMKKWEVNNECn2+pfgb4O6TPzC
         W66NLk1F8RRLiJKu4NV4aP4pNyXJ8kTICIsH0=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:in-reply-to:message-id
         :references:user-agent:mime-version;
        bh=P4GuFcNbaeLR0enY0NKknfehQDA9aBA5NA7dHQ7FTFc=;
        b=pnrk2gCfdWwIzTESFNnizEt/E+xYi8wWeaP51HmTCFdl38/KeLppmXcOLkL2oBq3t4
         lMQwh2AicccxDaDx4IuXZjBom7ifRIGJVURi3EY48Tz12z8sFVyODDFy2ktCpFrquCxm
         gFUT5AdseNx/tt2nh5aFljnLCZhoBO3UDLiQDNISjWi5dhtVrcv/vIv5DcTQ7jxWmn7e
         30Nax/pfzoCnIlmjCs8sP/sub65+23FXmDR3lEywxzqCk0DJNbLfLvld5K84i+dP85Iq
         XJE1hQTVT0fVCxUsXwCUfNrnsT+27igV0UtCjidKQI9hKZ3VnmAA/n7rxCQ9B7wyYhIO
         DEAA==
X-Gm-Message-State: AA+aEWbyQMKbBD3pfiJkLdYkn+yJcyKclhb6mMUToXhJBa2pnAyWkwL+
        1sdtZkq9n8uu5/ekKBst8rnuxw==
X-Google-Smtp-Source: AFSGD/XZyrsTzjtpaEzU+kGYptY/buHBFtYNi8KH/A9Ew6NwUND1DLZc3TjqMKW8qwnyT1lL52vBOQ==
X-Received: by 2002:a37:1ad9:: with SMTP id l86mr12842072qkh.54.1545071036115;
        Mon, 17 Dec 2018 10:23:56 -0800 (PST)
Received: from xanadu.home (modemcable228.104-82-70.mc.videotron.ca. [70.82.104.228])
        by smtp.gmail.com with ESMTPSA id 5sm10590138qtw.50.2018.12.17.10.23.54
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 17 Dec 2018 10:23:54 -0800 (PST)
Date: Mon, 17 Dec 2018 13:23:52 -0500 (EST)
From: Nicolas Pitre <nicolas.pitre@linaro.org>
To: Nathan Chancellor <natechancellor@gmail.com>
cc: Russell King <linux@armlinux.org.uk>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Jonathan Corbet <corbet@lwn.net>, linux-doc@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Nick Desaulniers <ndesaulniers@google.com>,
        Tri Vo <trong@android.com>
Subject: Re: [PATCH] ARM: Ensure that NEON code always compiles with Clang
In-Reply-To: <20181215212304.19390-1-natechancellor@gmail.com>
Message-ID: <nycvar.YSQ.7.76.1812171318310.3623@knanqh.ubzr>
References: <20181215212304.19390-1-natechancellor@gmail.com>
User-Agent: Alpine 2.21 (LFD 202 2017-01-01)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, 15 Dec 2018, Nathan Chancellor wrote:

> While building arm32 allyesconfig, I ran into the following errors:
> 
>   arch/arm/lib/xor-neon.c:17:2: error: You should compile this file with
>   '-mfloat-abi=softfp -mfpu=neon'
> 
>   In file included from lib/raid6/neon1.c:27:
>   /home/nathan/cbl/prebuilt/lib/clang/8.0.0/include/arm_neon.h:28:2:
>   error: "NEON support not enabled"
> 
> Building V=1 showed NEON_FLAGS getting passed along to Clang but
> __ARM_NEON__ was not getting defined. Ultimately, it boils down to Clang
> only defining __ARM_NEON__ when targeting armv7, rather than armv6k,
> which is the '-march' value for allyesconfig.
> 
> From lib/Basic/Targets/ARM.cpp in the Clang source:
> 
>   // This only gets set when Neon instructions are actually available, unlike
>   // the VFP define, hence the soft float and arch check. This is subtly
>   // different from gcc, we follow the intent which was that it should be set
>   // when Neon instructions are actually available.
>   if ((FPU & NeonFPU) && !SoftFloat && ArchVersion >= 7) {
>     Builder.defineMacro("__ARM_NEON", "1");
>     Builder.defineMacro("__ARM_NEON__");
>     // current AArch32 NEON implementations do not support double-precision
>     // floating-point even when it is present in VFP.
>     Builder.defineMacro("__ARM_NEON_FP",
>                         "0x" + Twine::utohexstr(HW_FP & ~HW_FP_DP));
>   }
> 
> Ard Biesheuvel recommended explicitly adding '-march=armv7-a' at the
> beginning of the NEON_FLAGS definitions so that __ARM_NEON__ always gets
> definined by Clang. This doesn't functionally change anything because
> that code will only run where NEON is supported, which is implicitly
> armv7.
> 
> Link: https://github.com/ClangBuiltLinux/linux/issues/287
> Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
> Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>

Did you test that this doesn't create issues with gcc e.g. complaints 
from the linker that objects have incompatible architecture 
specifications or similar annoyance? This already happened in the past 
but I forget the exact scenario. If you already did, or after you do 
validate with gcc as well, then you may add:

Acked-by: Nicolas Pitre <nico@linaro.org>



> ---
>  Documentation/arm/kernel_mode_neon.txt | 4 ++--
>  arch/arm/lib/Makefile                  | 2 +-
>  arch/arm/lib/xor-neon.c                | 2 +-
>  lib/raid6/Makefile                     | 2 +-
>  4 files changed, 5 insertions(+), 5 deletions(-)
> 
> diff --git a/Documentation/arm/kernel_mode_neon.txt b/Documentation/arm/kernel_mode_neon.txt
> index 525452726d31..b9e060c5b61e 100644
> --- a/Documentation/arm/kernel_mode_neon.txt
> +++ b/Documentation/arm/kernel_mode_neon.txt
> @@ -6,7 +6,7 @@ TL;DR summary
>  * Use only NEON instructions, or VFP instructions that don't rely on support
>    code
>  * Isolate your NEON code in a separate compilation unit, and compile it with
> -  '-mfpu=neon -mfloat-abi=softfp'
> +  '-march=armv7-a -mfpu=neon -mfloat-abi=softfp'
>  * Put kernel_neon_begin() and kernel_neon_end() calls around the calls into your
>    NEON code
>  * Don't sleep in your NEON code, and be aware that it will be executed with
> @@ -87,7 +87,7 @@ instructions appearing in unexpected places if no special care is taken.
>  Therefore, the recommended and only supported way of using NEON/VFP in the
>  kernel is by adhering to the following rules:
>  * isolate the NEON code in a separate compilation unit and compile it with
> -  '-mfpu=neon -mfloat-abi=softfp';
> +  '-march=armv7-a -mfpu=neon -mfloat-abi=softfp';
>  * issue the calls to kernel_neon_begin(), kernel_neon_end() as well as the calls
>    into the unit containing the NEON code from a compilation unit which is *not*
>    built with the GCC flag '-mfpu=neon' set.
> diff --git a/arch/arm/lib/Makefile b/arch/arm/lib/Makefile
> index ad25fd1872c7..0bff0176db2c 100644
> --- a/arch/arm/lib/Makefile
> +++ b/arch/arm/lib/Makefile
> @@ -39,7 +39,7 @@ $(obj)/csumpartialcopy.o:	$(obj)/csumpartialcopygeneric.S
>  $(obj)/csumpartialcopyuser.o:	$(obj)/csumpartialcopygeneric.S
>  
>  ifeq ($(CONFIG_KERNEL_MODE_NEON),y)
> -  NEON_FLAGS			:= -mfloat-abi=softfp -mfpu=neon
> +  NEON_FLAGS			:= -march=armv7-a -mfloat-abi=softfp -mfpu=neon
>    CFLAGS_xor-neon.o		+= $(NEON_FLAGS)
>    obj-$(CONFIG_XOR_BLOCKS)	+= xor-neon.o
>  endif
> diff --git a/arch/arm/lib/xor-neon.c b/arch/arm/lib/xor-neon.c
> index a6741a895189..4600b62d845f 100644
> --- a/arch/arm/lib/xor-neon.c
> +++ b/arch/arm/lib/xor-neon.c
> @@ -14,7 +14,7 @@
>  MODULE_LICENSE("GPL");
>  
>  #ifndef __ARM_NEON__
> -#error You should compile this file with '-mfloat-abi=softfp -mfpu=neon'
> +#error You should compile this file with '-march=armv7-a -mfloat-abi=softfp -mfpu=neon'
>  #endif
>  
>  /*
> diff --git a/lib/raid6/Makefile b/lib/raid6/Makefile
> index 2f8b61dfd9b0..bfec7c87c61e 100644
> --- a/lib/raid6/Makefile
> +++ b/lib/raid6/Makefile
> @@ -25,7 +25,7 @@ endif
>  ifeq ($(CONFIG_KERNEL_MODE_NEON),y)
>  NEON_FLAGS := -ffreestanding
>  ifeq ($(ARCH),arm)
> -NEON_FLAGS += -mfloat-abi=softfp -mfpu=neon
> +NEON_FLAGS += -march=armv7-a -mfloat-abi=softfp -mfpu=neon
>  endif
>  CFLAGS_recov_neon_inner.o += $(NEON_FLAGS)
>  ifeq ($(ARCH),arm64)
> -- 
> 2.20.1
> 
> 
