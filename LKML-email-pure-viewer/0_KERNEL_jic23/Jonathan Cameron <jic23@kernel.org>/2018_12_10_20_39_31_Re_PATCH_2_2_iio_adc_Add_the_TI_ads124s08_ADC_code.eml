Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:43:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 059E35807A2;
	Mon, 10 Dec 2018 12:42:44 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 12:42:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Awc2NCx+AD9MOLP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+IWIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIy+?=
 =?us-ascii?q?YYsBCOUOMvpXoYnmv1sDrwCzBRWuCe711jNFnGP60bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rQq9X1Mr0dUfy1zKbSyzXIcu1b1i346IfWaBAhpveMVq93fMrTyEkgCx3Jg1uL?=
 =?us-ascii?q?pIzmITyVzOINvHaf7+Z6UuKvkWEnphh3rzOyyMksjYzJiZgUylDC7Sh53Ic1Kc?=
 =?us-ascii?q?ekR058ZN6pFoZbuSKCN4ZuXM8uX2VltDwnxrAIp5K3ZjUGxZc7yxLFavGKcZCE?=
 =?us-ascii?q?7xH+WOqLJTp1hWhpdKyxihu960Ss1+LxW8qy3V1XtCRKiMPMuWoI1xHL6siIVP?=
 =?us-ascii?q?99/kC51DaR2ADc9PtELVo3laXFMZ4hxKA/lp4JvUTEBC/2l136jK6Qdko65uil?=
 =?us-ascii?q?8/rrbqniq5OGKoN5hB/yPr4zlsG8Heg0KAkDUmqD9eS5zrLj/En5QLtQjv0xl6?=
 =?us-ascii?q?nUqJTaJcUdpq6kDA5Zy4Uj5AilDzegztsYmWALLFVLeRKBkYfpIUrDIO73Dfih?=
 =?us-ascii?q?mVSgijRryO7cPr3nHJrNKmLPkLD7fbZy80Jc0hY8zchD55JIDbEMOPbzWk7ytN?=
 =?us-ascii?q?PGFBM4PBG0zv3jCNV80IMeRG2ODrWYMKPUrV+H+OYvL/OQa48SvTb3M+Il6OL2?=
 =?us-ascii?q?jX8lhV8derGk3ZsNZ3C5AvRpOUKZbWDsgtccC2gKuAU+QffuiF2DVz5TenmzU7?=
 =?us-ascii?q?g95jE9FIKpE4PDSpqxj7yG2SexBodWaXxeClCQDXfocJ2JW/ULaC2MOMNhkTsE?=
 =?us-ascii?q?Vb6nS48mzhyusA76y7x6Luvb4CEYtJTj1MRr6O3Xjx096Tt0D8GF2WGXU250hn?=
 =?us-ascii?q?8IRyMx3K1nu0N90VeD0a97g/BCD9xc/fFJXxw+NZ7dyex6Ft/zVhjAftePVFap?=
 =?us-ascii?q?XNGmDSstQdI2xt8Ee1x9FMm6jhDfwyqqBKcYl7+RC5wy6K7c23nxKNx7y3bJz6?=
 =?us-ascii?q?Qhi1gmQs1SNWypnKJ/9g7TB5LXnEWdjaqlaaMc3CvV/meZ0WWOpF1YUBJ3Uajd?=
 =?us-ascii?q?QH8QfFXWosrj6kPCVbCuD68nPRVHycKFLqtKadjpjVFdSffnOdTeZX+xmmiqCR?=
 =?us-ascii?q?aJwLOMcJTle2EH0CrBD0gElhgZ/WyaOggmGiehv2XeASRzGl31fUPj7/NyqHOh?=
 =?us-ascii?q?QU8y1AGFcUth2qGx+h4Ug/ycVvwS0qgFuCcntzV7AlK908jKBNqHogprZL9cbs?=
 =?us-ascii?q?8l4FdbyWLZsBRwPoChL6BngV4ebwR3vkP02xVrEIlAltIqrHcrzAp0JqKVy1dB?=
 =?us-ascii?q?dzKe3ZDtNbzbMGjy/Baza6HI3lHSysqZ+qAK6P4gsVXsoBmpFlY+83Vgy9RayX?=
 =?us-ascii?q?+c6YvFDQUMUZP9SF049wVnqL7AZCk95ITU1WN3PKmwsz/C3c8pBeQ/xhaheddf?=
 =?us-ascii?q?LL2LFAvoH8IGAMiuLfQgm0K1YRIcIOBS6Kk0MtumdvubwqKkIPxsnTOmjWtd5o?=
 =?us-ascii?q?B93VmB9y59Su7OwpYEzOuU3gqBVzfgklihttr7lpxDZTEXBmC/0zTrBJZNZq1u?=
 =?us-ascii?q?eoYGEX2uI8yrydpknZ7iRnlY+ESlB1wYws+peAOeYEDn0g1UyEsYv2anmSy+zz?=
 =?us-ascii?q?FvlzEpr6yf3DHBwuj4dRoHPHJLS3dmjVv2PYe0iNUaVlCybwc1jBul+Vr6x69D?=
 =?us-ascii?q?qaV/LmnfW0dJczLtL2F/VKu9rb6CY89J6JM1viRbSuW8YVaGSrHjpxsWyT/sH2?=
 =?us-ascii?q?xbxDojbTGlpo35nwBmiGKaNHtzrmDWedtzxRfc49zQX+VR0SAFRCl7iDnXAEaz?=
 =?us-ascii?q?P9+y8NWQlpfDtP2+Vm27Wp1Sdynr0Z2PtC+h6WJ2Bh2/mui5msf7HggizS/7y9?=
 =?us-ascii?q?5qWD3IrRnmZYnnzaa6MeNhfkRzAF/86sx6Gpxxk4cqhZEQ32QaiYuR/XYdjWjz?=
 =?us-ascii?q?NtBb07rkbHURXT4L38LV4A/91U1gNH2Jxpj1VnWAwsR7Ydm6bXgb2iY878BMFa?=
 =?us-ascii?q?eV46ZInSpzolqksw3RZeJxkSsayfsr8HQamf0GuBIxziWBBbAfBUxYPS3vlxuS?=
 =?us-ascii?q?9dy/ortYZH2zcbeuzkpxhs6uDKuNogxHXHb5e5EiHTJ/78llMVLM1mHz5Z/geN?=
 =?us-ascii?q?XKcd0TsRiUmQ/aj+dJMJIxiuYKhS1/NGLhun0lzvQ3jB100pG8oYiHMH5t/KOi?=
 =?us-ascii?q?Dx5cNz31Yd4T+z73gaZfmMaWw56gHpF7FjoXW5voSOqiECgOuvT/KwaODDo8p2?=
 =?us-ascii?q?+AFrXFGg+f7Fpmo2jLE5C2LHyXIHgZzdN/RBiSPkBfgQYUXCkkkZ49DAyl2Mvh?=
 =?us-ascii?q?cEJh7DAL+lH4sgdMyv5vNxTnUGfQvgKoZSkvSJSFMBpa9AJC51rWMcyD6OJ8BT?=
 =?us-ascii?q?pY84alrAyMLGybegtJAXsIWkyCG1DsIL2u6cPc/OifA+q0N+HObqmWqexCS/eI?=
 =?us-ascii?q?woqi04th/zaRL8WPI2NtD/sh1kpYWnB5HcvZli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50KTZG2ZMNxn/Iy7kf0EQRiyF0?=
 =?us-ascii?q?cDmtHqoPtTTQTKLLgaJXCx8bayVuNMpH9a483w9NOdLFhdPxzLJ3kvk1C1JdX1?=
 =?us-ascii?q?z7hs6pfdAKI326NF7fHkmLKa+JJSfVzMD3e6+8TbxQgf5Qtx2xvzabDkDiMi6C?=
 =?us-ascii?q?lznvSxCgL+VMgDuHMxxZvYG3agxtBnT7TNL6dh27N8d6jSE3wb0xnH/FKXQQPi?=
 =?us-ascii?q?R8c0xTqL2d9idYgvR5G2xc4XtpN+iEmyCF7+bGLpYaq+dkAiNxl+hC+nQ116NV?=
 =?us-ascii?q?7D1YRPxygCbTrsRho1ejkumOzDpoSBtPqjZRi4KNskVvIqHZ9phGWXbZ8xMB92?=
 =?us-ascii?q?SQCxIWp9R7Dt3jobxfyt/KlPG7FDAX39vSte4BHdDUOYrTPH88KwLpCRbIDU0O?=
 =?us-ascii?q?Sjv9Zk/FgEkIsvaU/2GVp55ygZHplYAJTPcPVl0+TKgyCUl/GtEGZpBtUWV3wv?=
 =?us-ascii?q?agkMcU6C/m/1HqT8JAs8WCD6rKDA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAADOzg5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYJogQInjBNfjAMGgTUUiQyEbRCJNBSBYhEYBwwBh20iNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKSMMQgEOAYFkJAGCYQEBAQECAQECJBMGAQE3AQQBC?=
 =?us-ascii?q?QEBCg4KCSUDDEgGEwUWgwYBgXQFCAQBCqUkgWwzgnYBAQWHJQiLBYEcgQ+BB4E?=
 =?us-ascii?q?RgmQugwWBQSSFcoEsAQGHaYYoRoVxiwABBgIBikOHASMKgVKIQIchlX6DMoFGg?=
 =?us-ascii?q?g4zGjBDgR6BTgmCEgwXg0qFFIU/QDKBAgMBASETglqJDgEB?=
X-IPAS-Result: =?us-ascii?q?A0ATAADOzg5ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBAYJ?=
 =?us-ascii?q?ogQInjBNfjAMGgTUUiQyEbRCJNBSBYhEYBwwBh20iNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKSMMQgEOAYFkJAGCYQEBAQECAQECJBMGAQE3AQQBCQEBCg4KCSUDDEg?=
 =?us-ascii?q?GEwUWgwYBgXQFCAQBCqUkgWwzgnYBAQWHJQiLBYEcgQ+BB4ERgmQugwWBQSSFc?=
 =?us-ascii?q?oEsAQGHaYYoRoVxiwABBgIBikOHASMKgVKIQIchlX6DMoFGgg4zGjBDgR6BTgm?=
 =?us-ascii?q?CEgwXg0qFFIU/QDKBAgMBASETglqJDgEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="141541984"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 12:42:41 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729089AbeLJUji (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 15:39:38 -0500
Received: from mail.kernel.org ([198.145.29.99]:44376 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727598AbeLJUjh (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 15:39:37 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 9FC2920821;
        Mon, 10 Dec 2018 20:39:34 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544474375;
        bh=BDVTQYQ2Rwk7O+sWc9YZfgDeK4oJp8mNM4xhfV+Y7Zc=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=bwI/nBUVzGSlcxCOrblUfWcB4ckSp+b500NoT0MAIcN5hB31+Y7aYZuxKAFGV0gj5
         EiQcqDDe2rJmpu6i9kigjO9F706vHcoUgTblrVxNm/GqjEw0JQ2n94tjeLeifTbFvP
         swoDJftPWLBC3VEb9XvCvNjIiRwcj/OgQ77Roo6M=
Date: Mon, 10 Dec 2018 20:39:31 +0000
From: Jonathan Cameron <jic23@kernel.org>
To: Dan Murphy <dmurphy@ti.com>
Cc: <linux-iio@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <robh+dt@kernel.org>
Subject: Re: [PATCH 2/2] iio: adc: Add the TI ads124s08 ADC code
Message-ID: <20181210203931.2975ef15@archlinux>
In-Reply-To: <b6690112-9862-8178-14d4-c4a65b201c29@ti.com>
References: <20181204175955.8259-1-dmurphy@ti.com>
        <20181204175955.8259-2-dmurphy@ti.com>
        <20181208115609.1311188a@archlinux>
        <b6690112-9862-8178-14d4-c4a65b201c29@ti.com>
X-Mailer: Claws Mail 3.17.1 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Dan,

Replies to queries inline.

On Mon, 10 Dec 2018 14:14:55 -0600
Dan Murphy <dmurphy@ti.com> wrote:

> Jonathan
> 
> Thanks for the review
> 
> On 12/08/2018 05:56 AM, Jonathan Cameron wrote:
> > On Tue, 4 Dec 2018 11:59:55 -0600
> > Dan Murphy <dmurphy@ti.com> wrote:
> >   
> >> Introduce the TI ADS124S08 and the ADS124S06 ADC
> >> devices from TI.  The ADS124S08 is the 12 channel ADC
> >> and the ADS124S06 is the 6 channel ADC device
> >>
> >> These devices share a common datasheet:
> >> http://www.ti.com/lit/gpn/ads124s08
> >>
> >> Signed-off-by: Dan Murphy <dmurphy@ti.com>  
> > Various minor things inline.
> >   
> 
> No worries.  I believe I used the ADS8688 driver as a reference so that driver
> may need to be updated as well

Great if you don't mind fixing the buffer size issue in there as well.

> 
> > Thanks,
> > 
> > Jonathan
> >   
> >> ---
> >>  drivers/iio/adc/Kconfig        |  10 +
> >>  drivers/iio/adc/Makefile       |   1 +
> >>  drivers/iio/adc/ti-ads124s08.c | 437 +++++++++++++++++++++++++++++++++
> >>  3 files changed, 448 insertions(+)
> >>  create mode 100644 drivers/iio/adc/ti-ads124s08.c
> >>
> >> diff --git a/drivers/iio/adc/Kconfig b/drivers/iio/adc/Kconfig
> >> index a52fea8749a9..e8c5686e6716 100644
> >> --- a/drivers/iio/adc/Kconfig
> >> +++ b/drivers/iio/adc/Kconfig
> >> @@ -887,6 +887,16 @@ config TI_ADS8688
> >>  	  This driver can also be built as a module. If so, the module will be
> >>  	  called ti-ads8688.
> >>  
> >> +config TI_ADS124S08
> >> +	tristate "Texas Instruments ADS124S08"
> >> +	depends on SPI && OF
> >> +	help
> >> +	  If you say yes here you get support for Texas Instruments ADS124S08
> >> +	  and ADS124S06 ADC chips
> >> +
> >> +	  This driver can also be built as a module. If so, the module will be
> >> +	  called ti-ads124s08.
> >> +
> >>  config TI_AM335X_ADC
> >>  	tristate "TI's AM335X ADC driver"
> >>  	depends on MFD_TI_AM335X_TSCADC && HAS_DMA
> >> diff --git a/drivers/iio/adc/Makefile b/drivers/iio/adc/Makefile
> >> index a6e6a0b659e2..d70293abfdba 100644
> >> --- a/drivers/iio/adc/Makefile
> >> +++ b/drivers/iio/adc/Makefile
> >> @@ -79,6 +79,7 @@ obj-$(CONFIG_TI_ADC161S626) += ti-adc161s626.o
> >>  obj-$(CONFIG_TI_ADS1015) += ti-ads1015.o
> >>  obj-$(CONFIG_TI_ADS7950) += ti-ads7950.o
> >>  obj-$(CONFIG_TI_ADS8688) += ti-ads8688.o
> >> +obj-$(CONFIG_TI_ADS124S08) += ti-ads124s08.o
> >>  obj-$(CONFIG_TI_AM335X_ADC) += ti_am335x_adc.o
> >>  obj-$(CONFIG_TI_TLC4541) += ti-tlc4541.o
> >>  obj-$(CONFIG_TWL4030_MADC) += twl4030-madc.o
> >> diff --git a/drivers/iio/adc/ti-ads124s08.c b/drivers/iio/adc/ti-ads124s08.c
> >> new file mode 100644
> >> index 000000000000..b6fc93f37355
> >> --- /dev/null
> >> +++ b/drivers/iio/adc/ti-ads124s08.c
> >> @@ -0,0 +1,437 @@
> >> +// SPDX-License-Identifier: GPL-2.0
> >> +// TI ADS124S0X chip family driver
> >> +// Copyright (C) 2018 Texas Instruments Incorporated - http://www.ti.com/  
> > An oddity of current kernel style is that typically only the spdx
> > line is // 
> > 
> > The rest are a normal kernel multiline comment.  
> 
> Ack.  Finding it is up to the maintainer here on the preference so I will change it.
> 
> >   
> >> +
> >> +#include <linux/err.h>
> >> +#include <linux/delay.h>
> >> +#include <linux/device.h>
> >> +#include <linux/kernel.h>
> >> +#include <linux/module.h>
> >> +#include <linux/of.h>
> >> +#include <linux/of_gpio.h>
> >> +#include <linux/slab.h>
> >> +#include <linux/sysfs.h>
> >> +
> >> +#include <linux/gpio/consumer.h>
> >> +#include <linux/regulator/consumer.h>
> >> +#include <linux/spi/spi.h>
> >> +
> >> +#include <linux/iio/iio.h>
> >> +#include <linux/iio/buffer.h>
> >> +#include <linux/iio/trigger_consumer.h>
> >> +#include <linux/iio/triggered_buffer.h>
> >> +#include <linux/iio/sysfs.h>
> >> +
> >> +#define ADS124S08_ID		0x00
> >> +#define ADS124S06_ID		0x01  
> > 
> > Use an enum for these as the actual values don't matter, only that
> > they are unique.
> >   
> 
> Ack.  Is there a preference on using the sentinnal or not?

If the sentinel is useful for a loop or range check then yes, if not
then don't bother.

> 
> >> +
> >> +/* Commands */
> >> +#define ADS124S_CMD_NOP		0x00  
> > Why this shorter prefix? Are all ADS124S parts
> > compatible with this list? 
> >   
> 
> Ack.  Yes the 124S are all compatible since there are only 2 ATM.
> 
> 
> >> +#define ADS124S_CMD_WAKEUP	0x02
> >> +#define ADS124S_CMD_PWRDWN	0x04
> >> +#define ADS124S_CMD_RESET	0x06
> >> +#define ADS124S_CMD_START	0x08
> >> +#define ADS124S_CMD_STOP	0x0a
> >> +#define ADS124S_CMD_SYOCAL	0x16
> >> +#define ADS124S_CMD_SYGCAL	0x17
> >> +#define ADS124S_CMD_SFOCAL	0x19
> >> +#define ADS124S_CMD_RDATA	0x12
> >> +#define ADS124S_CMD_RREG	0x20
> >> +#define ADS124S_CMD_WREG	0x40
> >> +
> >> +/* Registers */
> >> +#define ADS124S0X_ID		0x00  
> > Avoid wild cards in naming.  It always goes wrong when
> > along comes another part that is similar but not quite the
> > same yet fits in your naming scheme.  Just pick a part
> > and name after that.  
> 
> The issue is that there are some registers below that are S08 only
> and do not apply to the S06.
> 
> This is why I choose the wild card.  I can use the 08 since that has a master set.
> Unless I can keep the 0X

Use 08 seems like a good solution as they are definitely valid for that.

...

> >> +
> >> +static int ads124s_read(struct iio_dev *indio_dev, unsigned int chan)
> >> +{
> >> +	struct ads124s_private *priv = iio_priv(indio_dev);
> >> +	int ret;
> >> +	u32 tmp;
> >> +	struct spi_transfer t[] = {
> >> +		{
> >> +			.tx_buf = &priv->data[0],
> >> +			.len = 4,
> >> +			.cs_change = 1,
> >> +		}, {
> >> +			.tx_buf = &priv->data[1],
> >> +			.rx_buf = &priv->data[1],
> >> +			.len = 4,
> >> +		},
> >> +	};  
> > 
> > Pity we don't have a spi_write_the_read_with_cs or
> > something like that.  I wonder how common this structure is?  
> 
> This is common with this part and the ads8688 and another spi part I am working on for CAN.
> 
> I just don't know if there are any parts that hold CS for more then one data xfer.

There definitely are though I couldn't name one right now.
Some devices use the CS to reset a simple state machine.  If you drop
it then the state machine resets, even mid read.

...
> 
> >   
> >> +
> >> +static const struct iio_info ads124s_info = {
> >> +	.read_raw = &ads124s_read_raw,
> >> +};
> >> +
> >> +static irqreturn_t ads124s_trigger_handler(int irq, void *p)
> >> +{
> >> +	struct iio_poll_func *pf = p;
> >> +	struct iio_dev *indio_dev = pf->indio_dev;
> >> +	struct ads124s_private *priv = iio_priv(indio_dev);
> >> +	u16 buffer[ADS124S0X_MAX_CHANNELS];  
> > 
> > There is an unfortunate oddity in how push_to_buffers_with_timestamp
> > works in that it builds the data for the kfifo inline in the buffer
> > provided.  Thus that buffer has to have room for the channels and
> > the 64 bit timestamp.  
> 
> Hmmm.  This is like the 8688.  I am starting to think the 8688 needs to be updated.

Yes that looks wrong.  Thanks!

> 
> >   
> >> +	int i, j = 0;
> >> +	int ret;
> >> +
> >> +	for (i = 0; i < indio_dev->masklength; i++) {
> >> +		if (!test_bit(i, indio_dev->active_scan_mask))  
> > 
> > for_each_bit_set   
> 
> Same as above.  But I can change it.
> 
> >   
> >> +			continue;
> >> +
> >> +		ret = ads124s_write_reg(indio_dev, ADS124S0X_INPUT_MUX, i);  
> > 
> > Does this need to be rewritten if the channel is already correct?  
> 
> This is an iterative loop so the channel should be different each time 0 - 12

doh.  I'm not sure how I misread that.  However, not true for the raw
read above I think?
   
...
> > 
> > You can move to fully managed if you use devm_add_action_or_reset
> > to turn the regulator off.
> >   
> >> +
> >> +	return 0;
> >> +}
> >> +
> >> +static const struct spi_device_id ads124s_id[] = {
> >> +	{ "ads124s08", ADS124S08_ID },
> >> +	{ "ads124s06", ADS124S06_ID },
> >> +	{ }
> >> +};
> >> +MODULE_DEVICE_TABLE(spi, ads124s_id);
> >> +
> >> +static const struct of_device_id ads124s_of_table[] = {
> >> +	{ .compatible = "ti,ads124s08" },
> >> +	{ .compatible = "ti,ads124s06" },  
> > 
> > It's trivial but numerical order preferred as it makes it
> > obvious where to add new devices later.  
> 
> Actually I based these off the ID read from the device.
> The S08 ID is 0x0 and the S06 is 0x1.  Bit I can reorder this since it just the compatible.

Given that reason for the order is hidden by the defines
I'd reorder to avoid someone else coming and tidying it up later!

> 
> Dan
...

Jonathan
