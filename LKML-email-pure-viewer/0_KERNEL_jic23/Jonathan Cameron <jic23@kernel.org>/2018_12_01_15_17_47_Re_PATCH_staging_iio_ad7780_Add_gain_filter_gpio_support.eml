Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:26:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from mta-temp.ostc.intel.com (mta-temp.ostc.intel.com [10.54.63.100])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F05C4580847;
	Sat,  1 Dec 2018 18:20:52 -0800 (PST)
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mta-temp.ostc.intel.com (Postfix) with ESMTPS id 589CA623A8;
	Sat,  1 Dec 2018 07:19:07 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 01 Dec 2018 07:18:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AavqCCBRhzlCtq88jPRWCF074ytpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRWDt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+laoYnzoFQBogexCwm3HOPiyCRFhmPv3aAgz+gsCx3K0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6xy6nIyy/Mb+9W2Tjn7ojDbw4sruuJXb1ua8rRzk8vHB7Cg1WS?=
 =?us-ascii?q?qIzqIy2Z2+oWvmiY8eVgT+SvhHAjqw1rpTiv3Mgsh5DPi4kIxF7E8iB5z5w0Jd?=
 =?us-ascii?q?2+UEN7bt+kEIdQtyGHLIR6WN8tQ2ZtuCs817YIuoa7cTAUxJg7wxPTceGLfoaW?=
 =?us-ascii?q?7h75SeqcIit0iGhkdb+9nxq/8lWsxvf4W8S1ylpGsCRIn9bWunwQ2BHe6c6KQe?=
 =?us-ascii?q?Zn8Ei7wzaAzQXT5/lEIU8qkarbLIYswqA/lpUNq0TPBCz2l1vsjK+QaEok/vKk?=
 =?us-ascii?q?6+P9YrXpvpOcNol0hR/iMqk2hMCzHeA1PhITU2WV5+iwzqDv8E7lTLlQj/A7kL?=
 =?us-ascii?q?HVsJXAKsQaoq65DRVV0oEm6xunCzem0dIYnWQILV5cexKIkZLpO1fQL/D8FPu/?=
 =?us-ascii?q?hFqtkDF1yPDcJbDhHJrNIWbZkLv7frZy9VRcyAwtwtBb/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3ZEPcnC3AuxmI1mFYXrrmtoBEX0FvgsiTOPwj12OSz5TZ2uoUK?=
 =?us-ascii?q?I66TE2E4amDYbFRoCwj72Nxia7HptKZm9YDlCAC2vnd4KBW/0UciKdPtdhkiAY?=
 =?us-ascii?q?VbimU4Ih1xauuxHgx7pkKerU/CsYtZX42dhx5u3Tkwwy9DNuA8Sc1WGNU397nm?=
 =?us-ascii?q?cSSzAq26B/pFR3yk2f3qhgn/xYCdtT6utTXQchNZ7cyO96B8roWg3bfNeEU1Km?=
 =?us-ascii?q?QtSgATEsQdM92d4OY0BhG9q8ihDPxTalA7gQl7aTHpw77rrc32TtJ8Z603vG17?=
 =?us-ascii?q?Muj188TstLNG2pnKh/9wfICo7NkkWZkbuqdKsG0C7M8meD0XSBvEVCXAFsVqXF?=
 =?us-ascii?q?WGgVZlHKotTh+kPCU7iuBKw6PQRb186NNLFGat3zglVAX/fsJtLeb2W1m2ezAB?=
 =?us-ascii?q?aIwqiBbI7re2UbwSXcB1IIkwEV/XaaKwc+Aj2trH7ZDDxrDVjveV/j8fFiqHOn?=
 =?us-ascii?q?SU851xyFYFd/17Wr4BIVheaTS/UI3r0avicssDF0HFe739LLBNuMvQthfKNAYd?=
 =?us-ascii?q?wj5FdLz37Wtwt4Ppa4NaBtmkYecxhrv0Ppzxh3FoRAkc0trHM2zApzKbiU0E9b?=
 =?us-ascii?q?ezOfx5DwPrzXKm/9/B20b67W21fe0MuZ+6sV6fQ4rUnjsx+tFkY473pn1NxV2W?=
 =?us-ascii?q?OG5prWFAoSTY7xUkEv+hdgo7HVfCY86J3U1HF2Kqa0ryLN1MgvBOsmzRagYcxS?=
 =?us-ascii?q?MKeFFA/0Ds0bCNKiKO0sm1i1cB0EOPpe+7IzP8Ojb/GGwrKkPP58nDK6imRK+I?=
 =?us-ascii?q?B80l+W+yVgUOLJ3pYFzOue3guITDr8iFahssbqmYFLfz0SH2y/yTT6C45VfKF9?=
 =?us-ascii?q?YYELCWK2Kc2t2tp+n4LtW2Jf9FO7HVMG2dOmdgCIb1Pg2g1cz0IXrmK9mSu51j?=
 =?us-ascii?q?B7jysmrq6C0yPQ2eTicxwHN3VPRGlji1fsPIe1g8obXEiucwgmih+l6VzmyKhc?=
 =?us-ascii?q?oaR1N3PTTltQfyjqM2FiVbO9t7qDY8JV6JIkqz5XUPm6YV2BTr79oh0a0z7sHm?=
 =?us-ascii?q?dExTA7cS2qtYv9nxBglG2dK3NzpmLDec5s3Rff+MDcRflJ0zoEXiZ4kzrXBlu7?=
 =?us-ascii?q?P9Wz5tWbjZTDsuO/V2KnSJJTdzLmzYeBtCu9+G1rDgezn/G1mt37Dwc61TX32M?=
 =?us-ascii?q?VtVSXNtBz8eJXk17ymMeJ7eUllHF/95NB9Go1kkIswhZcQ1GMehpWU+3oHjGjy?=
 =?us-ascii?q?Pc9a2aL4cHoCWzoLz8TJ7wji3U1pNmiJyJ7hVnWB3sthYMG3YmAM1SI89cxKCL?=
 =?us-ascii?q?qU46ZCnSt6uVe4qQPRYf5gnjYS0/cu6Xgag/0Xtwop1CmSHrcSHUxANyz2ixuI?=
 =?us-ascii?q?98y+rLlQZGu3dLiw1Ul+ksq7ALCMvA5cQ2r5dYk4HSBr8Mp/Kl3M3Wb36oHlft?=
 =?us-ascii?q?nQcN0SugeVkxfGk+haNpYxmuAWiipgPGL3pWclxPIjjRxywZG6u5CKK3lq/KK8?=
 =?us-ascii?q?GBJZNyf6Z8UO+jH2lqZen92b34SuHpVnBzUKU4HkTfOuEDIOq/vnMxyCHyE7qn?=
 =?us-ascii?q?eeAbDfBxOQ6F96r3LTFJCmL2qYK2MezdVmWRmRPkhfgB0PUTU+n545EB2qxcP7?=
 =?us-ascii?q?fEd44DAR+kD3qh9Wxu10MBn/V3/VpB20ZTcsVJifMB1W4xlA50jPNMyR8PlzEz?=
 =?us-ascii?q?tE/pG7rwyNN2+bZxlODW4TQUyJHFTjPrio5dnd/OmUHOu+L/3SYbqQrexSTeuH?=
 =?us-ascii?q?xZWq0oF+5TaDKt2PPmV+D/08wkdCXXd5G9nAmzUSUSMXkTjBb9WcpBe69S16tc?=
 =?us-ascii?q?S/8PXtWALy6oqDEbpSMdNz+x+ohaePLfKfhCF8KTxAzJMD2WfIyKQD3F4Vkyxu?=
 =?us-ascii?q?dyeiEbUDtS7OTaLcgKxXDwQcayN8KsRI9b883hJWNM7fi9P10KN4j/EvB1dEU1?=
 =?us-ascii?q?zhht+mZcgQL26hM1PHAV6BNK6aKj3T38H3faS8RKVKg+VJrBKwoyiUEk/5MjSH?=
 =?us-ascii?q?ljnkTBSvMeBKjCGGMx1SooC9chBxCWf9SNLqcAG0MNhyjTcu2707mmvKNXIAMT?=
 =?us-ascii?q?h7a05NsryQ7SZCjvpjAWBO8nplIveCmyuC6+nYK5AWseZkAyhuluJa5mg6xKVR?=
 =?us-ascii?q?7C1eWPN1ny7SpMZ0o166iumP1iZnUB1WpzdLno2Lu0BiOaTf9pZYWHfE/AgC7W?=
 =?us-ascii?q?OfCxkRo9tlC9vvu71fy9TVlaLzLitC/MzQ/ccGG8fUL8eHYzIdNk+jMSTYAQ8I?=
 =?us-ascii?q?RDjvfUjbilxUlv2I6zfd+pE+p4jlnpYUV/lyTlA4Ev4TDGxsGtUGJ5gxVTQhx+?=
 =?us-ascii?q?21lskNsFi5qhDNRMxc9rvOU/+IBvOnfDSYhuMfTxgF27X1KcIULIKtiB8qUUVz?=
 =?us-ascii?q?gImfQxmYZttKuCA0K1Zs+Eg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAAC2pQJch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYFUgRSBAieDeYgYX4t8AQEGgTUUaIgjhGuGFoMogXMUGAMQAYR?=
 =?us-ascii?q?AgzYiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMQgEMAYFmJAGCYQEBAQECAQECI?=
 =?us-ascii?q?B0BASUFCgMBBAEJAQEKGAICBSECAgMMSAYTBYMcAYF0BQgEAaRvcIEvgnYBAQW?=
 =?us-ascii?q?HIwiBC4l1gRyBD4EHgRGCFEk1hGEBAR6DBIJXgSwBAYdyggGUTFQBBgIBhwCKM?=
 =?us-ascii?q?SMKgVFNhESDLocMiBaQV4FGgg0zGjCBYYFOCYISDBeDSoUUhT9AMoECAwEBIRO?=
 =?us-ascii?q?DCYdDgj4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ATAAC2pQJch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYF?=
 =?us-ascii?q?UgRSBAieDeYgYX4t8AQEGgTUUaIgjhGuGFoMogXMUGAMQAYRAgzYiNAkNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEKCwkIKSMMQgEMAYFmJAGCYQEBAQECAQECIB0BASUFCgMBBAE?=
 =?us-ascii?q?JAQEKGAICBSECAgMMSAYTBYMcAYF0BQgEAaRvcIEvgnYBAQWHIwiBC4l1gRyBD?=
 =?us-ascii?q?4EHgRGCFEk1hGEBAR6DBIJXgSwBAYdyggGUTFQBBgIBhwCKMSMKgVFNhESDLoc?=
 =?us-ascii?q?MiBaQV4FGgg0zGjCBYYFOCYISDBeDSoUUhT9AMoECAwEBIRODCYdDgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,303,1539673200"; 
   d="scan'208";a="42361779"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 01 Dec 2018 07:18:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726933AbeLBCai (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 21:30:38 -0500
Received: from mail.kernel.org ([198.145.29.99]:45390 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726767AbeLBCai (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 21:30:38 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 1069D20834;
        Sat,  1 Dec 2018 15:17:50 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543677473;
        bh=NGJlbQiwa9+fSsnEf1EOZn3darTjg47eXFSHEb+w8xM=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=qFWK0+PF9YuZIzoPT3Pu/huufXhGC3SR8RHlYtxCdN5PAjhV/mrEXJnoKuEiec/MB
         gYfEWaqbL42x8jf34wutX/NfT4k12yJwDgG4zvHEK8ZPNH5vQQWaeaG5uKiTfN0g6B
         1cOUCwDaZIok6jRjL8BiclKhZCcz0AnHpVR+ABlU=
Date: Sat, 1 Dec 2018 15:17:47 +0000
From: Jonathan Cameron <jic23@kernel.org>
To: "Ardelean, Alexandru" <alexandru.Ardelean@analog.com>
Cc: "giuliano.belinassi@gmail.com" <giuliano.belinassi@gmail.com>,
        "Popa, Stefan Serban" <StefanSerban.Popa@analog.com>,
        "kernel-usp@googlegroups.com" <kernel-usp@googlegroups.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "lars@metafoo.de" <lars@metafoo.de>,
        "knaack.h@gmx.de" <knaack.h@gmx.de>,
        "Hennerich, Michael" <Michael.Hennerich@analog.com>,
        "linux-iio@vger.kernel.org" <linux-iio@vger.kernel.org>,
        "devel@driverdev.osuosl.org" <devel@driverdev.osuosl.org>,
        "pmeerw@pmeerw.net" <pmeerw@pmeerw.net>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>
Subject: Re: [PATCH] staging: iio: ad7780: Add gain & filter gpio support
Message-ID: <20181201151747.16522ff4@archlinux>
In-Reply-To: <a71bb89842260368353ebb66dff66b8f0583755b.camel@analog.com>
References: <20181121180443.tjgcpu2webrq53rh@smtp.gmail.com>
        <CAG4RSAHcEYj5bUpxT8apwXZZpWkPowFJ333tZiTHhb9VVn4m7g@mail.gmail.com>
        <1543316945.22768.35.camel@analog.com>
        <a71bb89842260368353ebb66dff66b8f0583755b.camel@analog.com>
X-Mailer: Claws Mail 3.17.1 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 29 Nov 2018 12:19:08 +0000
"Ardelean, Alexandru" <alexandru.Ardelean@analog.com> wrote:

> On Tue, 2018-11-27 at 06:11 -0500, Popa, Stefan Serban wrote:
> > On Lu, 2018-11-26 at 17:24 -0200, Giuliano Belinassi wrote:
> > Hi, please see bellow
> >  =20
>=20
> One note from me here.
>=20
> > > Hi, thank you for the review
> > >  =20
> > > >=20
> > > > On Thu, 22 Nov 2018 11:01:00 +0000
> > > > "Popa, Stefan Serban" <StefanSerban.Popa@analog.com> wrote: =20
> > > > >=20
> > > > > I think that instead of setting the gain directly, we should use
> > > > > the IIO_CHAN_INFO_SCALE attribute. At page 12 of the ad7780
> > > > > datasheet
> > > > > there
> > > > > is a formula from which the output code can be calculated:
> > > > > Code =3D 2^(N =E2=88=92 1)
> > > > > =C3=97 [(AIN =C3=97 Gain /VREF) + 1]. So, by setting the scale fr=
om user
> > > > > space,
> > > > > the
> > > > > driver can calculate the correct gain by using the formula above.
> > > > > Also, it
> > > > > would be useful to introduce scale available.
> > > > > Furthermore, there is a new
> > > > > ad7124 adc driver which does this exact thing. Take a look here:
> > > > > http
> > > > > s://gi
> > > > > thub.com/analogdevicesinc/linux/blob/master/drivers/iio/adc/ad712=
4.
> > > > > c#
> > > > > L337. =20
> > >=20
> > > We have some questions about the code you provided to us:
> > >   1-) What is exactly the inputs for the write_raw function? =20
> >=20
> > In your write_raw() function you need to add IIO_CHAN_INFO_SCALE case.
> > Setting the scale from user space looks something like this: =20
> > root:/sys/bus/iio/devices/iio:device0> echo 0.000298 > in_voltage_scale=
 . =20
> > Furthermore, in your write_raw() function, val=3D0 and val2=3D298.
> > Knowing that full_scale_voltage =3D Vref / (gain * scale), we can calcu=
late
> > the gain =3D Vref / (full_scale_voltage * scale). We only support two g=
ains
> > (1 and 128), so we need to determine which one fits better with the
> > desired
> > scale. Finally, all we have left to do is to set the gain.=20
> >   =20
> > >   2-) Could you give more details about the math around lines 346-348?
> > > Is it correct to assume that the multiplication at line 346 won't
> > > overflow? (vref is an uint) =20
> >=20
> > It is correct that Vref is in microvolts, so for example, Vref of 2.5V =
 =3D
> > 2500000000uV. It won't overflow since we use the Vref as nominator, whi=
le
> > full_scale_voltage and scale are the denominators.
> >  =20
>=20
> [Regarding the AD7124] I guess I should be noted that the code can
> overflow, but in this case it shouldn't, because (according to the device
> datasheet) the maximum VREF can be 3600 mV.
> A user could specify (in the devicetree) something larger than 4300 mV (a=
nd
> that would overflow) but that would also make the readings useless as the
> external VREF would be invalid ; and there is also the risk of frying the
> chip in that case [something you really can't protect the user against].

Thanks Alex and Stefan for great detail here (glad you got to this before
I did ;)  One thing to add though is that if we have constraints like
this that would mess up the readings, it is sensible to check them
in the driver and at the very least put out a loud warning about the
problem, possibly even refuse to probe the driver.

The number of times I've spent hours chasing configuration problems
only to discover I was doing something stupid and the kernel silently
carried on regardlessly make me very keen on such commonsense protections.

I'm not going to review every driver to ensure they do this, but I'm keen
on them being checked where a possible problem has been identified!

Jonathan
>=20
> The internal VREF however is 2500 mV, so things should be fine from that
> point of view.
>=20
> Typically, in datasheets (at least from Analog Devices) it's good to take=
 a
> look at the specifications sections.
> [For AD7124] You will see that the internal VREF [page 8] is 2.5V (with
> approximation of +/-0.2%) and for external reference it goes all the way =
up
> to AVDD, which has typical values of 2.9V - 3.6V.
> So, for u32 this code should be fine and not overflow.
>=20
> One small thing that can be confusing about that code in AD7124 is that it
> gets multiplied with 1000000LL (which is signed long-long), but that shou=
ld
> be fine, since the operation should be converted to u32 (unsigned int)
> representation [by being assigned to vref], which ends up being fine in t=
he
> end.
>=20
> > >=20
> > > And regarding our code:
> > >   1-) The val in our write_raw function should be, in case of GAIN, a
> > > number that best approximate the actual gain value of 1 or 128? For
> > > instance, if the user inputs 126, we should default to 128? =20
> >=20
> > We should not allow the the user to input the gain, he needs to input t=
he
> > scale (see the mail from Jonathan and the above explanation). However, =
if
> > the calculated gain is one that is not supported, such as 126, we will
> > set
> > the closest matching value, in this case 128.
> >  =20
> > >   2-) In the case of FILTER, is it the same? Is the user sending the
> > > value in mHz (milihertz)? =20
> >=20
> > Yes, it is the same with the FILTER. You need to add
> > a IIO_CHAN_INFO_SAMP_FREQ case in your write_raw() function. From user
> > space, the input value should be in Hz, something like this: =20
> > root:/sys/bus/iio/devices/iio:device0> echo 10 > =20
> > in_voltage_sampling_frequency
> >  =20
> > >=20
> > > Thank you =20

