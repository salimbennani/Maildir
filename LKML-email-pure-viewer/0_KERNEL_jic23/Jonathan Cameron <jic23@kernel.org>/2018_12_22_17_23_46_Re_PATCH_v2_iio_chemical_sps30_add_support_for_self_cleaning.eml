Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:57:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5CDB158049E;
	Sat, 22 Dec 2018 09:24:00 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 09:24:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AdU5jcB93TiElnf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?0OMSIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIy+?=
 =?us-ascii?q?YYsBCOUOMvpXoYnmv1sDrwCzBRWuCe711jNFnGP60bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rQq9X1Mr0dUfy1zKbSyzXIcu1b1i346IfWaBAhpveMVq93fMrTyEkgCx3Jg1uL?=
 =?us-ascii?q?pIzmITyVzOINvHaf7+Z6UuKvkWEnphh3rzOyxckskpHEipwJxl3A7yl13Yg4Kc?=
 =?us-ascii?q?OiREJmYtOoDIFcuiCYOoduQc4uXntktSI7x7Ecp5K2cicHxI46yxPQaPGKdZWD?=
 =?us-ascii?q?7Aj5W+aLOzh4gWpoeLKhiBa29kit0vP8Vsaq31ZQtCZFkcfDtmoL1xPN7siLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IsxqQ8mocdvEjdBCP6hUb7gLOMekgl+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8y7AOQ4NBUOXmeC9eS/yrLj50v5T6tOjvEvla?=
 =?us-ascii?q?nYvpbaKtoBpqOiHQ9V3Zgs6wylAzelztsYh38HI0xBeB6diIjpIV7OLOjiDfij?=
 =?us-ascii?q?m1SsjCtrx/feM73lA5XNLWbMnK3ufLZg8ENczAszzdZC55NbEL0BIfTzWlPvu9?=
 =?us-ascii?q?zcFBM2Lwu0w+P/AtVnyoweQX6PArOeMK7KsV+H/OMvI/WWa48Sojr9K+Ul6OTo?=
 =?us-ascii?q?jX82glIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOnygl2YTTFTf2qyX7?=
 =?us-ascii?q?475jwjEo2mFofDRoeugLCbxie0BJ9Wa3tCClCNF3foaoqFV+0NaCKUPs9ujDgE?=
 =?us-ascii?q?WaK9RI8m0BGkrBX6xKZ/LurI5i0Ysoru1Ntv6O3Vjx0y8T10AN6b02GCVGx0mm?=
 =?us-ascii?q?IIRzkr3KFwu0B9y1GD0bRmjPxcD9Bc+/RJUgIiP57G0+N6E8zyWh7GftqRVVmp?=
 =?us-ascii?q?WMumDi8rQtIx2dAOZV19FMukjhzE2yqqALoVl7iQCZww86Lc2WXxJslnx3bH0q?=
 =?us-ascii?q?khk0cpQs9VOWK6ga5/8hDZB5TVnEWBi6aqaaMc0TbQ+2iZ02qBoltUUA5qXqXD?=
 =?us-ascii?q?RnAQeE3WoM/95kPDSb+uFLsmPhFAyc6ENqtFdNnpgU9aS/fkPdTUe3ixlHuoBR?=
 =?us-ascii?q?aU2rOMa5Lne3kc3CXYD0gEjwAT/HacOQgiHCuhpHjeDDhvFVLpbEPh6u1+qHK9?=
 =?us-ascii?q?Tk8pwACGdUxh17yp+hELgfyQUe8c3rUBuC05sTV7AE69387KC9qHvwduZqFcbs?=
 =?us-ascii?q?0y4VhZ1WPVrRdyPoG9IK94gF4ecAN3v1312hVzC4VAl9UqrXwwwApzL6KYzE1O?=
 =?us-ascii?q?dzeC0Z/sPb3XL3H4/AqzZK7OxlHezNGW978P6fQlsVnsoBulF0si83p91dlV3G?=
 =?us-ascii?q?CR5pHLDAoUTJLwXVw79xl8p7HGfCY945nY2mFrMamxqjXCwc4mBPM5yha8eNdS?=
 =?us-ascii?q?KLmEFA7uHMIAHcihNesql0Kvbh0aJuBS9bc4MN+8ePuCxaGkIvxgnDWgjWlc5I?=
 =?us-ascii?q?B900SM9zdzS+LS3pYFxe2Y0RWDVzvmkFihtcX3k5heZT4OBmq/1TTkBIlJa6xy?=
 =?us-ascii?q?fIYHE2evL9esxtVjgZ7gQHpY9F+lB1Mb186lYxuSb1rh3QJO0UQbu2ComSy9zz?=
 =?us-ascii?q?ZsiTEmsrKf3DDSw+TlbBcHOHRERHNhjVfvJoi4lcsaU1KrbwgqlRul41j1x65A?=
 =?us-ascii?q?qaR7LmnTR1pIfifsI2FjVKuwqqSNY8pV5Jw0tiVXVfy2YUqGRb7lvxsazyTjEn?=
 =?us-ascii?q?NexT8hcDGmoJf5nx18iG+GKHZzrXzZedx/xBvF5dzcQ+JR0SQCRCVilTbXAV28?=
 =?us-ascii?q?NcGz/dqIj5fDrvy+V2W5W51QaybrzJmMtCum5WJwBx2/kOu+mtnmEQg8zC/62M?=
 =?us-ascii?q?NmVSTOrBbgfIbr0762Pv5gfkltHFX88dZ1Gplikossg5EdwX0ahpSW/XUdi2vy?=
 =?us-ascii?q?P8tU2bnibHUTXz4E2MDa4BLq2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPsy734ahvsFuQs3wSWbH7ASBlJYPS33mhSM?=
 =?us-ascii?q?7tC+qrhXZWm1fbix0kp+gc6uDLWYrg5AX3b5f48oHTVs4cVnLFLMzHrz55n/d9?=
 =?us-ascii?q?bKatITsgCUnw3Ej+hIM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGnMaZxYWvEYt6GjkRQJvkV/GoEC8RtfT6MQaBCiY8p2?=
 =?us-ascii?q?yfGbreGw+f9Uhno2jOE5CtK3GYOn0Zwc9+SxmaIUxVmBoUUykinp4lCgCqw9Ts?=
 =?us-ascii?q?cUd+5jAM/174twFDyuRyOxnkVWffogioZywwSJieKhpW8w5D613UMcyY8uJ8AS?=
 =?us-ascii?q?VY8oe9owyKL2yRfx5IAn0RWkyYG1DjOaGj5dne/OiZBeq+LPrOba+NqexEUPeI?=
 =?us-ascii?q?yoyg0pF7/zaXLciPOnhiD/sm2ktMR3x5GsLZmykRRCwTjS7Cc8mbpBKk8C1tss?=
 =?us-ascii?q?+/6OjrWB7o5YaXEbRSLM5g+wqojqaDLeKQgCd5JC1c1pMNw3/I1bce0EQTiyFo?=
 =?us-ascii?q?azmiD7AAuTTRQ6LXn69dFwQbZD9rNMtU86I82RFAOdLaitPwzLJ3kuQ5BEtFVV?=
 =?us-ascii?q?P/nMGkfsgKI2C7NFPaC0eHLrWGJTvXw87pZaOwU6FfjOJRtxeoozaUD1fjPiif?=
 =?us-ascii?q?lznuTx2uMftDjCeePBxfvoGyahdsCWj5Q9LgZR22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6Gz8J0n0wEe6Bkj2Lp8XFMYQHt+BoA2wgi+5H+2YrzaB9?=
 =?us-ascii?q?4yRNRfgzkyzX+I1AuVajx8uIzDN7UBNI4h1CgY+RukMqbafY/cMbcXXJ5hQA6S?=
 =?us-ascii?q?OXERtc9IgtMcHmp60FkouHr6n0MjoXtouMpcY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAADKch5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBdfi20BAQaBNRSJBQ6EbolOFIFfFRgTAYcwIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCCkjDII6KQGCZwECAgEBAiQTBgEBNwEEAQkBAQoOBg0lA?=
 =?us-ascii?q?wwSNgYTBYMdgWoDCAUIBAGlFIFsM4J2AQEFhH8NghUIiyOBHIEPgQeBEYMSgle?=
 =?us-ascii?q?BcxsEhXeBLAEBiE+GMZBsMgEGAgGKV4NfgyckCpFcj2yKPYFGgg4zGjBDgR6BT?=
 =?us-ascii?q?oIbiQGFP0AygQIDAQEhE4pvgk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AOAADKch5ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBdfi20BAQaBNRSJBQ6EbolOFIFfFRgTAYcwIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCCkjDII6KQGCZwECAgEBAiQTBgEBNwEEAQkBAQoOBg0lAwwSNgYTBYMdgWo?=
 =?us-ascii?q?DCAUIBAGlFIFsM4J2AQEFhH8NghUIiyOBHIEPgQeBEYMSgleBcxsEhXeBLAEBi?=
 =?us-ascii?q?E+GMZBsMgEGAgGKV4NfgyckCpFcj2yKPYFGgg4zGjBDgR6BToIbiQGFP0AygQI?=
 =?us-ascii?q?DAQEhE4pvgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="143204585"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 09:23:58 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404345AbeLVRXz (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 12:23:55 -0500
Received: from mail.kernel.org ([198.145.29.99]:55340 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731167AbeLVRXy (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 12:23:54 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 42ABF21974;
        Sat, 22 Dec 2018 17:23:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545499433;
        bh=tfK8GXVHRc8eguZqSBemy1Mx2WbKhGjdXhtUQT8DRlo=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=dlCo3waX3Uh2mu7fOi4aK76g1kCmGz+XuXe6Hr8PCIR7ay86YftkVeo9wzMdrhV+u
         vq6T8QhvOhuWfbm6ceK1F0/u/yci04ebmKObrJu9QKh3dcd//lv4zPyfgddabS9nsa
         njbT7sAsw2qK3WhmMUrdGst3dG7uE86Acgmg6g3Y=
Date: Sat, 22 Dec 2018 17:23:46 +0000
From: Jonathan Cameron <jic23@kernel.org>
To: Tomasz Duszynski <tduszyns@gmail.com>
Cc: linux-iio@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2] iio: chemical: sps30: add support for self cleaning
Message-ID: <20181222172346.7d520112@archlinux>
In-Reply-To: <20181218202809.25822-1-tduszyns@gmail.com>
References: <20181218202809.25822-1-tduszyns@gmail.com>
X-Mailer: Claws Mail 3.17.2 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 18 Dec 2018 21:28:09 +0100
Tomasz Duszynski <tduszyns@gmail.com> wrote:

> Self cleaning is especially useful in cases where sensor undergoes
> frequent power on/off cycles. In such scenarios it is recommended to
> turn self cleaning at least once per week in order to maintain reliable
> measurements.
> 
> Self cleaning is activated by writing 1 to a dedicated attribute.
> Internal fan accelerates to its maximum speed and keeps spinning
> for about 10 seconds blowing out accumulated dust.
> 
> Signed-off-by: Tomasz Duszynski <tduszyns@gmail.com>
Applied to the togreg branch of iio.git.   I took this today rather than
leaving it on the list for longer simply because I'm not sure I'll be
very timely in applying patches.

If anyone has any comments, it'll only be out as testing so we can
still modify if that make sense for at least the next couple of weeks.

Thanks,

Jonathan

> ---
> v2:
>  * removed TODO item
>  * sensor cleaning is not measurement related per se so drop in_ prefix
> 
>  Documentation/ABI/testing/sysfs-bus-iio-sps30 |  8 +++++
>  drivers/iio/chemical/sps30.c                  | 35 ++++++++++++++++++-
>  2 files changed, 42 insertions(+), 1 deletion(-)
>  create mode 100644 Documentation/ABI/testing/sysfs-bus-iio-sps30
> 
> diff --git a/Documentation/ABI/testing/sysfs-bus-iio-sps30 b/Documentation/ABI/testing/sysfs-bus-iio-sps30
> new file mode 100644
> index 000000000000..e7ce2c57635e
> --- /dev/null
> +++ b/Documentation/ABI/testing/sysfs-bus-iio-sps30
> @@ -0,0 +1,8 @@
> +What:		/sys/bus/iio/devices/iio:deviceX/start_cleaning
> +Date:		December 2018
> +KernelVersion:	4.22
> +Contact:	linux-iio@vger.kernel.org
> +Description:
> +		Writing 1 starts sensor self cleaning. Internal fan accelerates
> +		to its maximum speed and keeps spinning for about 10 seconds in
> +		order to blow out accumulated dust.
> diff --git a/drivers/iio/chemical/sps30.c b/drivers/iio/chemical/sps30.c
> index fa3cd409b90b..f3b4390c8f5c 100644
> --- a/drivers/iio/chemical/sps30.c
> +++ b/drivers/iio/chemical/sps30.c
> @@ -7,7 +7,6 @@
>   * I2C slave address: 0x69
>   *
>   * TODO:
> - *  - support for turning on fan cleaning
>   *  - support for reading/setting auto cleaning interval
>   */
> 
> @@ -37,6 +36,7 @@
>  #define SPS30_READ_DATA_READY_FLAG 0x0202
>  #define SPS30_READ_DATA 0x0300
>  #define SPS30_READ_SERIAL 0xd033
> +#define SPS30_START_FAN_CLEANING 0x5607
> 
>  enum {
>  	PM1,
> @@ -104,6 +104,7 @@ static int sps30_do_cmd(struct sps30_state *state, u16 cmd, u8 *data, int size)
>  		break;
>  	case SPS30_STOP_MEAS:
>  	case SPS30_RESET:
> +	case SPS30_START_FAN_CLEANING:
>  		ret = sps30_write_then_read(state, buf, 2, NULL, 0);
>  		break;
>  	case SPS30_READ_DATA_READY_FLAG:
> @@ -275,7 +276,39 @@ static int sps30_read_raw(struct iio_dev *indio_dev,
>  	return -EINVAL;
>  }
> 
> +static ssize_t start_cleaning_store(struct device *dev,
> +				    struct device_attribute *attr,
> +				    const char *buf, size_t len)
> +{
> +	struct iio_dev *indio_dev = dev_to_iio_dev(dev);
> +	struct sps30_state *state = iio_priv(indio_dev);
> +	int val, ret;
> +
> +	if (kstrtoint(buf, 0, &val) || val != 1)
> +		return -EINVAL;
> +
> +	mutex_lock(&state->lock);
> +	ret = sps30_do_cmd(state, SPS30_START_FAN_CLEANING, NULL, 0);
> +	mutex_unlock(&state->lock);
> +	if (ret)
> +		return ret;
> +
> +	return len;
> +}
> +
> +static IIO_DEVICE_ATTR_WO(start_cleaning, 0);
> +
> +static struct attribute *sps30_attrs[] = {
> +	&iio_dev_attr_start_cleaning.dev_attr.attr,
> +	NULL
> +};
> +
> +static const struct attribute_group sps30_attr_group = {
> +	.attrs = sps30_attrs,
> +};
> +
>  static const struct iio_info sps30_info = {
> +	.attrs = &sps30_attr_group,
>  	.read_raw = sps30_read_raw,
>  };
> 
> --
> 2.20.1
> 

