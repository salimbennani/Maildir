Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:58:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7FFE25805CF;
	Sat, 22 Dec 2018 09:50:42 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 09:50:42 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AB8uUUhf5MEyYl1SdO5JyWabulGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc65bReN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPMuRWr4f6qFQBsRSwBRK0BO7t0TJImn370Lcm3+k7DQ3KwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+SyzKnO1zrDc/NW1i376IPVbB0uu/SMUqxqccrWz0kkCgTIjleR?=
 =?us-ascii?q?qYP5IT+Y2P8As2uF4Op6U+KglWonpxt2oji1ycchk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD45x7Ebo5K2eCkHxI45yxPRZPGLaZWE?=
 =?us-ascii?q?7x3gWeuXPDx2nmhqeKiliBa36UWgyvPzVs2z0FtSsCpFncfDtmoX2xzQ9MeHUP?=
 =?us-ascii?q?198Vml2TqV0ADT8O5ELVg1lardNZEh3qY9moQPvUnHBCP6hUv7gLGMekk5+eWk?=
 =?us-ascii?q?9/7rb7Tkq5OEMo97kAD+MqAgmsylBuQ4NxADX2ya+eS6yb3i8lT1QLZUgf0slK?=
 =?us-ascii?q?nWrpTaKd0cpq+3BQ9azJwj5g2hDzepztsYh2MLLFFbdxKdiYjmJVXOLOr/Dfel?=
 =?us-ascii?q?jFSgiC1ryOzePr39HpXNKWDOkLPgfbZ+9UFQ0gUyzc1E6pJQC7EBJu/zW0DruN?=
 =?us-ascii?q?zZCB85LxK7w+L9BNph0YMeXHqFArWFP6PKrV+I+uUvLvGMZIAPuTb9N+Iq5/n0?=
 =?us-ascii?q?gX85hF8SZ6+p3ZQMZXC8H/RmJViZYHX2jtcAF2cKohQxTOjwhFKeVj5TYm64X7?=
 =?us-ascii?q?gg6TEjFIKmEYDDS5i3j7ya3Ce7GZ5WanpcCl+WE3flbIGEW/YKaCKPLc5tiD0E?=
 =?us-ascii?q?Vb69S4A/0RGirhP1y71iLuDM4C0XqYrj1MRp5+3UjRwy9iZ7D8KH32GJTmF7hG?=
 =?us-ascii?q?UIRzAt0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCksQd0r3d8BfVxxG9W4gRDFxCqlHbkVm7uPBJw396Lc22P8J8J8y3bAya?=
 =?us-ascii?q?kggEMqQspJNW26mKF/8xLfCJLOk0Wcj6yqb7gT3DbR9GefymqDpFxXXxRuUarb?=
 =?us-ascii?q?R3wfZlHZrdLi5kzcSb+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEUEjwET/XOBNQgiBiego3jSDCB0GVLoeUPs9eh+qHW0?=
 =?us-ascii?q?TkIvywGKbkth16e6+xIPhPycTe8T0awAuCs7tzp0G1O91crMC9WcvwphYLlcYd?=
 =?us-ascii?q?Ql7Vhd0WLWqQN8MYKgLqx4nVEebhl4sFno1xV0DYVAj9MnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupAGoFlc4/3p7ydVU0n?=
 =?us-ascii?q?uc6Y/MDAodSp/xVkc39x5np7DVeCU95oXU1WFyPqmwqDPNx9UpBO49wBa6Y9hf?=
 =?us-ascii?q?KL+EFBP1E8ACHciuKfAllEKzbh0ZO+Be7qg0MN28d/uHwaKkIPxvnDa7gmtZ+o?=
 =?us-ascii?q?B91USM+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jIs22xtlkh5/hQWVY9EOlB14d3M+peBySb0Hy3AFK1EQXp2CnljW8zz?=
 =?us-ascii?q?Bujz4pqa+f1jTUw+v+bBoHJnJLRG56gFfuO4e0ldMaXEuvbwQzjxuq/0X6x6ta?=
 =?us-ascii?q?pKR5MWbTR1xFfyz3L2FkT6uxuaCOY89J6JM0rypXVP6wbkydSr74uxEayT/sH3?=
 =?us-ascii?q?NCxDAncDGnopX4kAZ9iG6HLnZzrXzZdNp0xRfe4tzcWPFQ0iAHRCl+lTnYGFy8?=
 =?us-ascii?q?M8O18tWTkpfJqvq+WH65Vp1PbSnrypuNtCih6m1rGxG/n+2zlcfhEQg1yiL709?=
 =?us-ascii?q?hqVSPVrBfzeIXr1qK6Mf55cUlsHlPz9816GoRmmIsqmJ4QwWQahomS/XcflGfz?=
 =?us-ascii?q?MNZb1rjkYHsDWzEL2MLV7xb/2EJ4MH2J3Y35W26ZwstgYdm6f2wX1jg878BMFK?=
 =?us-ascii?q?eb8rhEkTFprVq/qALbeeJ9kSsFyfsy9H4ahPkEuBYqziWYGLwTHFNXPSrxlxST?=
 =?us-ascii?q?9NC+rb5aZGKucbi2yUp/ksqtDLCEogFARnn5fo0uEjN37sV6KFjMymH86pn4eN?=
 =?us-ascii?q?nMatIergabnA3Hj+hRNZI9jP4KhTd8NGL5vH0lzfM7jBN00ZG7uoiHN3ti/Kaj?=
 =?us-ascii?q?DhFEMT31YtsZ+ivxgqZGgsaWw4evE41jGjoRWZvnU+moHCgOtfj9NAaODT48qm?=
 =?us-ascii?q?qdGbXFBg+S80Nmr3PJE5C2OHCbPngZzdN+RBaDIExTmhwbXDI/npQhDACl2NTh?=
 =?us-ascii?q?cFtl5jAW/lP5qhxMyv9xNxniSGjfoh2kaiwzSJiZIxpb9QVC50bTMcyD4eN/BS?=
 =?us-ascii?q?BY/pu9rAOTLmyXfRhHDWYMWkacHVDsIqGu5cXc8+ifHue+L+XBYbSNqexdVveE?=
 =?us-ascii?q?35Gv0pFh/zaDKMqPJGRiD+Yg10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gisjqeeLOGQnjh2KDZC2pMIxH/F07wf3F8UiyFz?=
 =?us-ascii?q?eDihC7UAtSjRTK3Onq9bFQIUayR2NMFQ9aIzwhFNOdLHitPyzrN4kv81C1JfWV?=
 =?us-ascii?q?P9gM2mecwKLH+7NF7cAEaLNbKGJSDEws3tYKO8T6FQg/tQtxGqpTmbFErjNCyZ?=
 =?us-ascii?q?lzb1TxCvLf1MjCaDMR1eoo69dBNtCWnlTN3+axy7MMV4jTs5wbAvgnPKNGgcMS?=
 =?us-ascii?q?Vzck9Xr72Q6z9Yjet7G2Bb8nVlKuyEyG6l6LzjNpsYuP0jOiNsnqoO+2g3xbJT?=
 =?us-ascii?q?qjlDXPVdkS3bqtlh5Vqhl7/c5CBgVU9srTBCmIKCuw1JMKDU7J5GESLG/RlXtk?=
 =?us-ascii?q?2TBg4Mqt8jDcfg7fMDguPTnb7+fW8Ru+nf+tERUo2NcJqK?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAABweB5ch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeMF1+LbQEBBoE1FIkThG6JThSBXxUYEwGHMCI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwyCOikBgmcDAwECNwYBATcBBQkBAQohJQMMSAYTBYMdgXUNB?=
 =?us-ascii?q?AGlE4IfgnYBAQWHIQiLI4EcgQ+BB4QjhEYjhXeBLAEBiCGBeIQeSZEeAQYCAYp?=
 =?us-ascii?q?XhwYkCpFcmimBRoIOMxowgWGBToIbNYhMhT9AMoECAwEBIRONPAEB?=
X-IPAS-Result: =?us-ascii?q?A0AUAABweB5ch0O0hNFkHQEBBQEHBQGBUQgBCwGDayeMF1+?=
 =?us-ascii?q?LbQEBBoE1FIkThG6JThSBXxUYEwGHMCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wyCOikBgmcDAwECNwYBATcBBQkBAQohJQMMSAYTBYMdgXUNBAGlE4IfgnYBAQW?=
 =?us-ascii?q?HIQiLI4EcgQ+BB4QjhEYjhXeBLAEBiCGBeIQeSZEeAQYCAYpXhwYkCpFcmimBR?=
 =?us-ascii?q?oIOMxowgWGBToIbNYhMhT9AMoECAwEBIRONPAEB?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="56240849"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 09:50:41 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391680AbeLVRuU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 12:50:20 -0500
Received: from mail.kernel.org ([198.145.29.99]:36174 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730497AbeLVRuT (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 12:50:19 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 8EF182054F;
        Sat, 22 Dec 2018 17:50:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545501018;
        bh=9cknvmJt7F/GJRsXo3taOcR/vtA4tMM68M08Txop0q8=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=AIWq3/4mFDsctuSrVTTwtBSz3mqxfQiskBSLldGymCYaS5zRBTCnPg1p4KSoMQbhi
         1Z/guYr9KeBvjGnm0V8aIzMZYo8ZoAirMyDPD3+JYYYV2BL0MoK2iOhX6ccylNKhCb
         z+OYArdYc8G/hiL5hC3XJJlzj/Q1MobZPkAAtA68=
Date: Sat, 22 Dec 2018 17:50:10 +0000
From: Jonathan Cameron <jic23@kernel.org>
To: Stefan Popa <stefan.popa@analog.com>
Cc: <robh+dt@kernel.org>, <mark.rutland@arm.com>,
        <Michael.Hennerich@analog.com>, <knaack.h@gmx.de>,
        <lars@metafoo.de>, <pmeerw@pmeerw.net>,
        <gregkh@linuxfoundation.org>, <linux-kernel@vger.kernel.org>,
        <linux-iio@vger.kernel.org>, <devel@driverdev.osuosl.org>
Subject: Re: [PATCH v2 4/6] staging: iio: adc: ad7606: Misc style fixes (no
 functional change)
Message-ID: <20181222175010.548516be@archlinux>
In-Reply-To: <1545049420-16484-5-git-send-email-stefan.popa@analog.com>
References: <1545049420-16484-1-git-send-email-stefan.popa@analog.com>
        <1545049420-16484-5-git-send-email-stefan.popa@analog.com>
X-Mailer: Claws Mail 3.17.2 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 17 Dec 2018 14:23:38 +0200
Stefan Popa <stefan.popa@analog.com> wrote:

> * Placed includes in alphabetical order
> * Added brackets around num and mask through out for AD760X_CHANNEL
> * Used single line comments where needed
> * Removed extra lines and spaces
> 
> Signed-off-by: Stefan Popa <stefan.popa@analog.com>
Applied.

Thanks,

Jonathan

> ---
>  drivers/staging/iio/adc/ad7606.c     | 27 ++++++++++++---------------
>  drivers/staging/iio/adc/ad7606.h     |  1 -
>  drivers/staging/iio/adc/ad7606_par.c | 27 ++++++++-------------------
>  drivers/staging/iio/adc/ad7606_spi.c | 16 ++++++++--------
>  4 files changed, 28 insertions(+), 43 deletions(-)
> 
> diff --git a/drivers/staging/iio/adc/ad7606.c b/drivers/staging/iio/adc/ad7606.c
> index 5f0712c..32854f1 100644
> --- a/drivers/staging/iio/adc/ad7606.c
> +++ b/drivers/staging/iio/adc/ad7606.c
> @@ -5,25 +5,25 @@
>   * Copyright 2011 Analog Devices Inc.
>   */
>  
> -#include <linux/interrupt.h>
> +#include <linux/delay.h>
>  #include <linux/device.h>
> -#include <linux/kernel.h>
> -#include <linux/slab.h>
> -#include <linux/sysfs.h>
> -#include <linux/regulator/consumer.h>
>  #include <linux/err.h>
>  #include <linux/gpio/consumer.h>
> -#include <linux/delay.h>
> -#include <linux/sched.h>
> +#include <linux/interrupt.h>
> +#include <linux/kernel.h>
>  #include <linux/module.h>
> +#include <linux/regulator/consumer.h>
> +#include <linux/sched.h>
> +#include <linux/slab.h>
> +#include <linux/sysfs.h>
>  #include <linux/util_macros.h>
>  
>  #include <linux/iio/iio.h>
> -#include <linux/iio/sysfs.h>
>  #include <linux/iio/buffer.h>
> -#include <linux/iio/trigger_consumer.h>
> +#include <linux/iio/sysfs.h>
>  #include <linux/iio/trigger.h>
>  #include <linux/iio/triggered_buffer.h>
> +#include <linux/iio/trigger_consumer.h>
>  
>  #include "ad7606.h"
>  
> @@ -249,8 +249,7 @@ static const struct attribute_group ad7606_attribute_group_range = {
>  	.attrs = ad7606_attributes_range,
>  };
>  
> -#define AD760X_CHANNEL(num, mask)				\
> -	{							\
> +#define AD760X_CHANNEL(num, mask) {				\
>  		.type = IIO_VOLTAGE,				\
>  		.indexed = 1,					\
>  		.channel = num,					\
> @@ -265,7 +264,7 @@ static const struct attribute_group ad7606_attribute_group_range = {
>  			.storagebits = 16,			\
>  			.endianness = IIO_CPU,			\
>  		},						\
> -	}
> +}
>  
>  #define AD7605_CHANNEL(num)	\
>  	AD760X_CHANNEL(num, 0)
> @@ -294,9 +293,7 @@ static const struct iio_chan_spec ad7606_channels[] = {
>  };
>  
>  static const struct ad7606_chip_info ad7606_chip_info_tbl[] = {
> -	/*
> -	 * More devices added in future
> -	 */
> +	/* More devices added in future */
>  	[ID_AD7605_4] = {
>  		.channels = ad7605_channels,
>  		.num_channels = 5,
> diff --git a/drivers/staging/iio/adc/ad7606.h b/drivers/staging/iio/adc/ad7606.h
> index 9a832d2..5d12410 100644
> --- a/drivers/staging/iio/adc/ad7606.h
> +++ b/drivers/staging/iio/adc/ad7606.h
> @@ -14,7 +14,6 @@
>   * @num_channels:	number of channels
>   * @has_oversampling:   whether the device has oversampling support
>   */
> -
>  struct ad7606_chip_info {
>  	const struct iio_chan_spec	*channels;
>  	unsigned int			num_channels;
> diff --git a/drivers/staging/iio/adc/ad7606_par.c b/drivers/staging/iio/adc/ad7606_par.c
> index 2d137b1..df607c7 100644
> --- a/drivers/staging/iio/adc/ad7606_par.c
> +++ b/drivers/staging/iio/adc/ad7606_par.c
> @@ -26,7 +26,7 @@ static int ad7606_par16_read_block(struct device *dev,
>  }
>  
>  static const struct ad7606_bus_ops ad7606_par16_bops = {
> -	.read_block	= ad7606_par16_read_block,
> +	.read_block = ad7606_par16_read_block,
>  };
>  
>  static int ad7606_par8_read_block(struct device *dev,
> @@ -41,7 +41,7 @@ static int ad7606_par8_read_block(struct device *dev,
>  }
>  
>  static const struct ad7606_bus_ops ad7606_par8_bops = {
> -	.read_block	= ad7606_par8_read_block,
> +	.read_block = ad7606_par8_read_block,
>  };
>  
>  static int ad7606_par_probe(struct platform_device *pdev)
> @@ -72,22 +72,12 @@ static int ad7606_par_probe(struct platform_device *pdev)
>  }
>  
>  static const struct platform_device_id ad7606_driver_ids[] = {
> -	{
> -		.name		= "ad7605-4",
> -		.driver_data	= ID_AD7605_4,
> -	}, {
> -		.name		= "ad7606-8",
> -		.driver_data	= ID_AD7606_8,
> -	}, {
> -		.name		= "ad7606-6",
> -		.driver_data	= ID_AD7606_6,
> -	}, {
> -		.name		= "ad7606-4",
> -		.driver_data	= ID_AD7606_4,
> -	},
> +	{ .name	= "ad7605-4", .driver_data = ID_AD7605_4, },
> +	{ .name	= "ad7606-4", .driver_data = ID_AD7606_4, },
> +	{ .name	= "ad7606-6", .driver_data = ID_AD7606_6, },
> +	{ .name	= "ad7606-8", .driver_data = ID_AD7606_8, },
>  	{ }
>  };
> -
>  MODULE_DEVICE_TABLE(platform, ad7606_driver_ids);
>  
>  static const struct of_device_id ad7606_of_match[] = {
> @@ -103,12 +93,11 @@ static struct platform_driver ad7606_driver = {
>  	.probe = ad7606_par_probe,
>  	.id_table = ad7606_driver_ids,
>  	.driver = {
> -		.name	 = "ad7606",
> -		.pm	 = AD7606_PM_OPS,
> +		.name = "ad7606",
> +		.pm = AD7606_PM_OPS,
>  		.of_match_table = ad7606_of_match,
>  	},
>  };
> -
>  module_platform_driver(ad7606_driver);
>  
>  MODULE_AUTHOR("Michael Hennerich <michael.hennerich@analog.com>");
> diff --git a/drivers/staging/iio/adc/ad7606_spi.c b/drivers/staging/iio/adc/ad7606_spi.c
> index f38f0d6..f842eba 100644
> --- a/drivers/staging/iio/adc/ad7606_spi.c
> +++ b/drivers/staging/iio/adc/ad7606_spi.c
> @@ -36,7 +36,7 @@ static int ad7606_spi_read_block(struct device *dev,
>  }
>  
>  static const struct ad7606_bus_ops ad7606_spi_bops = {
> -	.read_block	= ad7606_spi_read_block,
> +	.read_block = ad7606_spi_read_block,
>  };
>  
>  static int ad7606_spi_probe(struct spi_device *spi)
> @@ -48,14 +48,14 @@ static int ad7606_spi_probe(struct spi_device *spi)
>  			    &ad7606_spi_bops);
>  }
>  
> -static const struct spi_device_id ad7606_id[] = {
> -	{"ad7605-4", ID_AD7605_4},
> -	{"ad7606-8", ID_AD7606_8},
> -	{"ad7606-6", ID_AD7606_6},
> -	{"ad7606-4", ID_AD7606_4},
> +static const struct spi_device_id ad7606_id_table[] = {
> +	{ "ad7605-4", ID_AD7605_4 },
> +	{ "ad7606-4", ID_AD7606_4 },
> +	{ "ad7606-6", ID_AD7606_6 },
> +	{ "ad7606-8", ID_AD7606_8 },
>  	{}
>  };
> -MODULE_DEVICE_TABLE(spi, ad7606_id);
> +MODULE_DEVICE_TABLE(spi, ad7606_id_table);
>  
>  static const struct of_device_id ad7606_of_match[] = {
>  	{ .compatible = "adi,ad7605-4" },
> @@ -73,7 +73,7 @@ static struct spi_driver ad7606_driver = {
>  		.pm = AD7606_PM_OPS,
>  	},
>  	.probe = ad7606_spi_probe,
> -	.id_table = ad7606_id,
> +	.id_table = ad7606_id_table,
>  };
>  module_spi_driver(ad7606_driver);
>  

