Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 20:25:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 55E8F580117;
	Mon,  3 Dec 2018 02:40:12 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 02:40:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIaVqORQ+bPmLDCgh3QhLaN+YWtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64bRWHt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRN9zY7Ue5mVOfhlc6/BYd8XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4TyploOogG5BQiiGuzvyyJDi2Ls0q09zu8sFg7H3A06ENIJvn?=
 =?us-ascii?q?XbstT1OL0JXu+vy6nF1jPDbvxO2Tvn9IfIdRUhrOiKULltcsTR0VEiGx3ZgliU?=
 =?us-ascii?q?s4DpIj2Y2voXv2SG7OdsSfijhm8lpg1pvzSix8chhpPUio4IxV3I7zh1zYcvKd?=
 =?us-ascii?q?GlR0N2Z8OvHoFKuCGALYR2R9svQ2F2tyY+zb0LoYC7fCcUx5Q93RLfaOKIc5KO?=
 =?us-ascii?q?4h39UOadOzB4hGhqeL6nhhay91avyvHkW8WqzFpHqjBJnsTCu3wTzRDf98uKRu?=
 =?us-ascii?q?dn8kqg2zuDzwXT5ftFIUAwm6rbMZkhwrsom5oXsETDGDL2mUrvgK+VaEok4O6o?=
 =?us-ascii?q?5PrjYrn/oZ+dOYl0hR/kMqk1hMy/Dvo3MhIUU2iY5+u8zrvj8lP9QLlQif02iK?=
 =?us-ascii?q?bZvIjAJcsHvq65HxNV0oE75ha7Djem08oXkWMILVJYYx+Hi4npO1fTIPH3F/u/?=
 =?us-ascii?q?glKskCt1yPDCJLHuHpLNLn3bmrf7Ybl981JcyBY0zd1H55JbELABIO7pVU/2rt?=
 =?us-ascii?q?DYDgI5PBayw+boE9h90oIeWWSSAq6WKq/SsFmI5v4xLOmIfoMapDH9K/097f70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPanC4GeppL1+aYXrrhNcBF2AKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbyLxD27EYFOZmBaFlCMFm/leJ+fW/cMbyKSIdVtkiYe?=
 =?us-ascii?q?WrijUIIh0RCutAnny7toNObU+ysYtY7929hx/eHciRYy9TlsBcSHz26NV310nn?=
 =?us-ascii?q?8PRzIu36Bwu0p9xk2H0ah5mfNYE9NT6uhNUgc7M57c0uN7B8rzWgLHYteGVlKm?=
 =?us-ascii?q?Ts+6DjE2S9I728UObFplG9W+khDD2DKnDKIPmLyVGpM46KLc0GL3J8Zm1XnG0q?=
 =?us-ascii?q?4tj10lQstKMW2rnap/9wnVB47UnESVjaeqdaIA3CHT8GeP13aBvEZdUARoS6XK?=
 =?us-ascii?q?QWgfZlfKrdT+/k7NUqWhCao5PQdbyc6NMK1Kasb3glVAX/rjPNXeY2Ssm2a/Hx?=
 =?us-ascii?q?qIx7WMbJb0dGUZxinSFE8EkwUL93acKQc+Hjuho37ZDDF2CVLvYkbs8e5iqHO7?=
 =?us-ascii?q?Tk441R2KY1dm17qv/h4VhPqcS/wI07IAuSchrSh0HVmn09LXDdqAuxRufKFGbd?=
 =?us-ascii?q?wh51dH0HrTtxZhMZy4M6BimlkefhxtsEPqyRp2BZtPkMgwoHwx0Qp9NLiX0FVC?=
 =?us-ascii?q?dzOfw5D9IbnXKmj0/BCyZK/awFDe0NCK+qgR7PQ0sUnsvAasFkA66XVoz8FV02?=
 =?us-ascii?q?eA5pXNFAcTUY/xXlwr+BRgprDaYjMy54Xb1XB3Nam0sznC288mBec/yxagectf?=
 =?us-ascii?q?P72AFAPoD8IaAM2uIvQwm1e1dhIEIPxS9KksMsO8dvuJxLSkPPx9kzKhl2hH5p?=
 =?us-ascii?q?5y0liN9yZlVuHHxZIFzOyG0QudUDf8ikysssT2mYBCeDETEXCzySniBI5NeKJy?=
 =?us-ascii?q?eZwHBnupI82y3t9+nYLiW2ZE9F6/AFMLwM+oeRuIY139xwFQzlkXoXq8lCu8zj?=
 =?us-ascii?q?x0lSwpr6WF0CzPxeTiaAQIOmpRSGZ+ilfsJJC+j8oGU0iwcwgpiByl6F74x6dB?=
 =?us-ascii?q?vqR/LGrTQUBScyjtNW5iUaiwtruEY8FR7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rre5MbTRflL0joERSl4jyLaBly9?=
 =?us-ascii?q?P9mv4NWVmI3PsuG4V2K9SJJTdTPnwp+HtCu+/WdqGwGwn+ivmt37Fgg3ySz72M?=
 =?us-ascii?q?NrVSnSrBb8f5Pk16K1Me98ekloBVn869d1G41kk4swgo0Q1mYehpmP4XUHlmLz?=
 =?us-ascii?q?O81B2a3idHoNWSILw9nN7Qjg2U1jLWiGy5j3V3qD2cthe8e1YnkN1S0j9cBKB7?=
 =?us-ascii?q?yZ7LhFnStzv1q5ohjdYfl7njcB1/Qu7GQWjP0OuAoo1i+dGKwdHVFEPSzwkBSF?=
 =?us-ascii?q?98y+rKJSZGq1cLm/zkx+nc26DLGZowFRQ3L5epYkHS9t4cRzKlPM0Hvv6o76fN?=
 =?us-ascii?q?ncd84cthqRkx3YlehaNIoxluYWhSpgIW/ypmcqy+k/jRxzx526uJWHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DED8mpX?=
 =?us-ascii?q?eeB7XfBhWT6Ft8o3LMDpCrNGyXJH8DwtV5XxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosSJmfKwdW7hhf50jPN8yS9PlzHy?=
 =?us-ascii?q?Ze/p2utwGNLm2bZwJVDWAGQECEBlbjPqWw6tnE6eSXGu2+L/7Wa7WUteNeT+uI?=
 =?us-ascii?q?xY6o0oZ+/zaDKMSPPnphD/06wEZDXmp5G8PWmzoRUSwXijnNYtWfpBe9/C13s8?=
 =?us-ascii?q?++/O7qWALp+YuAFb9SPc9z9BCxhKeJL/SQizphKTZEypMMwmfFx6IC3FEJkSFh?=
 =?us-ascii?q?aTmsHa4EtS7MV6/Qnq5XDxgGayJ8LsdI7qQ83hVTNs7fkN/6yrl4jvstAVdfSV?=
 =?us-ascii?q?Phgt2pZdANI2ylKFPHBUOLOK6aKjHR3873Yb2zSbtLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcd3jDIsx700g3LKNWgEPj?=
 =?us-ascii?q?l9c0NCtLuQ7SxDj/V7GmxB6GdlLOaelyaY6enYNogZsf9xDitokOJa5Sdy97wA?=
 =?us-ascii?q?5iFJQPN8kTD6odlprFWr1OKIz34vSh1EqnVHmKqIsF9kNKGf8YNPHT7B9QgOq3?=
 =?us-ascii?q?+NFxADoddNA8fq/atXz5yHj6L6NzFN7tX8/sYGAcXQbsWdPz5pNRfuCTfSA00B?=
 =?us-ascii?q?TBatJXmZjEtY1LmR92aVqZ4Stpmqk50LDvdfU0Y4EOEdTFxkEcYLJJZsXxsti7?=
 =?us-ascii?q?vdh8kNoTK3th/dbMxAuJzNEP6fRb3gMjuWjrlsYxoO3KP2KpkVOoTn2ktkLF5g?=
 =?us-ascii?q?k8CCHkvWUtBQqysnSg49pm1L4GA4RWo2nwrgawWi43YSU/6pthgmkk11ZuFpvC?=
 =?us-ascii?q?3r8hElL1zFjC0giA86ntChyTOKbDPuJb2sdYVXDTfkuU8sNJ/yXwdya0u1h0Mg?=
 =?us-ascii?q?fDzVXbNVi7YmbWF3gw/Rv7NBA/NRCKBAbRQM3/aRfLMj1lEY4j2gwEVd6OfMD5?=
 =?us-ascii?q?1vvA0nYZTqpHVFn0p4bNcqI+rUJaxh1F9bheeFvi6wzaY6xwpab0AM82ebY2gD?=
 =?us-ascii?q?sVcTO70OLjqp5apn7gnG0z9CfnUcEuIho9p0+U4nfeeN1STt1/hEME/1f+CSMa?=
 =?us-ascii?q?KStnTamMOgXFw9zAULmlND8Lww1t0sNwKQVkYy3P6SGg4POM7qNw5YdYxR+WLV?=
 =?us-ascii?q?cCLItv/ChdpxPoOgBqXhV+rLt6sOhE+gNAIoBJgXqMUHEIOl3EzRIYHgNrFBgR?=
 =?us-ascii?q?Es4hn7PE2OSfhEZjqPkSwbuIe43pt+15IbISsSUktnNiDi1rfeoRAngbKpVdB+?=
 =?us-ascii?q?NmcbV4wbO3NwUsS9syhJpzJLCzzhgbFR8xSL8zKp/neYNzL7ddc2PPo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAADRBgVch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBFfjUyXNBSBXywTAYgDIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCCkvgjYigmUDAwECJFIGCQEBUANUBxIFgxyCAgQBpWIzhAEBhhyHbYQvgVc/g?=
 =?us-ascii?q?RGHWIYWAokmhgh7UY9GBwKCHwSPDiORJokEkS+CDTMaI4M8gicXjWZEMwExgQU?=
 =?us-ascii?q?BAYpsAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAADRBgVch0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBFfjUyXNBSBXywTAYgDIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkvgjYigmUDA?=
 =?us-ascii?q?wECJFIGCQEBUANUBxIFgxyCAgQBpWIzhAEBhhyHbYQvgVc/gRGHWIYWAokmhgh?=
 =?us-ascii?q?7UY9GBwKCHwSPDiORJokEkS+CDTMaI4M8gicXjWZEMwExgQUBAYpsAQE?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="140502120"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 02:40:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726390AbeLCKkg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 05:40:36 -0500
Received: from inva020.nxp.com ([92.121.34.13]:47436 "EHLO inva020.nxp.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726376AbeLCKkf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 05:40:35 -0500
Received: from inva020.nxp.com (localhost [127.0.0.1])
        by inva020.eu-rdc02.nxp.com (Postfix) with ESMTP id 6340A1A0345;
        Mon,  3 Dec 2018 11:40:04 +0100 (CET)
Received: from invc005.ap-rdc01.nxp.com (invc005.ap-rdc01.nxp.com [165.114.16.14])
        by inva020.eu-rdc02.nxp.com (Postfix) with ESMTP id 9D11D1A0302;
        Mon,  3 Dec 2018 11:39:54 +0100 (CET)
Received: from titan.ap.freescale.net (TITAN.ap.freescale.net [10.192.208.233])
        by invc005.ap-rdc01.nxp.com (Postfix) with ESMTP id AB00E402E1;
        Mon,  3 Dec 2018 18:39:42 +0800 (SGT)
From: Xiaowei Bao <xiaowei.bao@nxp.com>
To: bhelgaas@google.com, robh+dt@kernel.org, mark.rutland@arm.com,
        shawnguo@kernel.org, leoyang.li@nxp.com, kishon@ti.com,
        lorenzo.pieralisi@arm.com, arnd@arndb.de,
        gregkh@linuxfoundation.org, minghuan.Lian@nxp.com,
        mingkai.hu@nxp.com, roy.zang@nxp.com, kstewart@linuxfoundation.org,
        cyrille.pitchen@free-electrons.com, pombredanne@nexb.com,
        shawn.lin@rock-chips.com, niklas.cassel@axis.com,
        linux-pci@vger.kernel.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        linuxppc-dev@lists.ozlabs.org
Cc: Xiaowei Bao <xiaowei.bao@nxp.com>
Subject: [PATCHv3 3/4] pci: layerscape: Add the EP mode support.
Date: Mon,  3 Dec 2018 18:35:04 +0800
Message-Id: <20181203103505.46885-3-xiaowei.bao@nxp.com>
X-Mailer: git-send-email 2.14.1
In-Reply-To: <20181203103505.46885-1-xiaowei.bao@nxp.com>
References: <20181203103505.46885-1-xiaowei.bao@nxp.com>
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add the PCIe EP mode support for layerscape platform.

Signed-off-by: Xiaowei Bao <xiaowei.bao@nxp.com>
---
v2:
 - remove the EP mode check function.
v3:
 - modif the return value when enter default case.

 drivers/pci/controller/dwc/Makefile            |    2 +-
 drivers/pci/controller/dwc/pci-layerscape-ep.c |  146 ++++++++++++++++++++++++
 2 files changed, 147 insertions(+), 1 deletions(-)
 create mode 100644 drivers/pci/controller/dwc/pci-layerscape-ep.c

diff --git a/drivers/pci/controller/dwc/Makefile b/drivers/pci/controller/dwc/Makefile
index fcf91ea..e97e920 100644
--- a/drivers/pci/controller/dwc/Makefile
+++ b/drivers/pci/controller/dwc/Makefile
@@ -8,7 +8,7 @@ obj-$(CONFIG_PCI_EXYNOS) += pci-exynos.o
 obj-$(CONFIG_PCI_IMX6) += pci-imx6.o
 obj-$(CONFIG_PCIE_SPEAR13XX) += pcie-spear13xx.o
 obj-$(CONFIG_PCI_KEYSTONE) += pci-keystone.o
-obj-$(CONFIG_PCI_LAYERSCAPE) += pci-layerscape.o
+obj-$(CONFIG_PCI_LAYERSCAPE) += pci-layerscape.o pci-layerscape-ep.o
 obj-$(CONFIG_PCIE_QCOM) += pcie-qcom.o
 obj-$(CONFIG_PCIE_ARMADA_8K) += pcie-armada8k.o
 obj-$(CONFIG_PCIE_ARTPEC6) += pcie-artpec6.o
diff --git a/drivers/pci/controller/dwc/pci-layerscape-ep.c b/drivers/pci/controller/dwc/pci-layerscape-ep.c
new file mode 100644
index 0000000..dafb528
--- /dev/null
+++ b/drivers/pci/controller/dwc/pci-layerscape-ep.c
@@ -0,0 +1,146 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * PCIe controller EP driver for Freescale Layerscape SoCs
+ *
+ * Copyright (C) 2018 NXP Semiconductor.
+ *
+ * Author: Xiaowei Bao <xiaowei.bao@nxp.com>
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/of_pci.h>
+#include <linux/of_platform.h>
+#include <linux/of_address.h>
+#include <linux/pci.h>
+#include <linux/platform_device.h>
+#include <linux/resource.h>
+
+#include "pcie-designware.h"
+
+#define PCIE_DBI2_OFFSET		0x1000	/* DBI2 base address*/
+
+struct ls_pcie_ep {
+	struct dw_pcie		*pci;
+};
+
+#define to_ls_pcie_ep(x)	dev_get_drvdata((x)->dev)
+
+static int ls_pcie_establish_link(struct dw_pcie *pci)
+{
+	return 0;
+}
+
+static const struct dw_pcie_ops ls_pcie_ep_ops = {
+	.start_link = ls_pcie_establish_link,
+};
+
+static const struct of_device_id ls_pcie_ep_of_match[] = {
+	{ .compatible = "fsl,ls-pcie-ep",},
+	{ },
+};
+
+static void ls_pcie_ep_init(struct dw_pcie_ep *ep)
+{
+	struct dw_pcie *pci = to_dw_pcie_from_ep(ep);
+	struct pci_epc *epc = ep->epc;
+	enum pci_barno bar;
+
+	for (bar = BAR_0; bar <= BAR_5; bar++)
+		dw_pcie_ep_reset_bar(pci, bar);
+
+	epc->features |= EPC_FEATURE_NO_LINKUP_NOTIFIER;
+}
+
+static int ls_pcie_ep_raise_irq(struct dw_pcie_ep *ep, u8 func_no,
+				  enum pci_epc_irq_type type, u16 interrupt_num)
+{
+	struct dw_pcie *pci = to_dw_pcie_from_ep(ep);
+
+	switch (type) {
+	case PCI_EPC_IRQ_LEGACY:
+		return dw_pcie_ep_raise_legacy_irq(ep, func_no);
+	case PCI_EPC_IRQ_MSI:
+		return dw_pcie_ep_raise_msi_irq(ep, func_no, interrupt_num);
+	case PCI_EPC_IRQ_MSIX:
+		return dw_pcie_ep_raise_msix_irq(ep, func_no, interrupt_num);
+	default:
+		dev_err(pci->dev, "UNKNOWN IRQ type\n");
+		return -EINVAL;
+	}
+}
+
+static struct dw_pcie_ep_ops pcie_ep_ops = {
+	.ep_init = ls_pcie_ep_init,
+	.raise_irq = ls_pcie_ep_raise_irq,
+};
+
+static int __init ls_add_pcie_ep(struct ls_pcie_ep *pcie,
+					struct platform_device *pdev)
+{
+	struct dw_pcie *pci = pcie->pci;
+	struct device *dev = pci->dev;
+	struct dw_pcie_ep *ep;
+	struct resource *res;
+	int ret;
+
+	ep = &pci->ep;
+	ep->ops = &pcie_ep_ops;
+
+	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "addr_space");
+	if (!res)
+		return -EINVAL;
+
+	ep->phys_base = res->start;
+	ep->addr_size = resource_size(res);
+
+	ret = dw_pcie_ep_init(ep);
+	if (ret) {
+		dev_err(dev, "failed to initialize endpoint\n");
+		return ret;
+	}
+
+	return 0;
+}
+
+static int __init ls_pcie_ep_probe(struct platform_device *pdev)
+{
+	struct device *dev = &pdev->dev;
+	struct dw_pcie *pci;
+	struct ls_pcie_ep *pcie;
+	struct resource *dbi_base;
+	int ret;
+
+	pcie = devm_kzalloc(dev, sizeof(*pcie), GFP_KERNEL);
+	if (!pcie)
+		return -ENOMEM;
+
+	pci = devm_kzalloc(dev, sizeof(*pci), GFP_KERNEL);
+	if (!pci)
+		return -ENOMEM;
+
+	dbi_base = platform_get_resource_byname(pdev, IORESOURCE_MEM, "regs");
+	pci->dbi_base = devm_pci_remap_cfg_resource(dev, dbi_base);
+	if (IS_ERR(pci->dbi_base))
+		return PTR_ERR(pci->dbi_base);
+
+	pci->dbi_base2 = pci->dbi_base + PCIE_DBI2_OFFSET;
+	pci->dev = dev;
+	pci->ops = &ls_pcie_ep_ops;
+	pcie->pci = pci;
+
+	platform_set_drvdata(pdev, pcie);
+
+	ret = ls_add_pcie_ep(pcie, pdev);
+
+	return ret;
+}
+
+static struct platform_driver ls_pcie_ep_driver = {
+	.driver = {
+		.name = "layerscape-pcie-ep",
+		.of_match_table = ls_pcie_ep_of_match,
+		.suppress_bind_attrs = true,
+	},
+};
+builtin_platform_driver_probe(ls_pcie_ep_driver, ls_pcie_ep_probe);
-- 
1.7.1

