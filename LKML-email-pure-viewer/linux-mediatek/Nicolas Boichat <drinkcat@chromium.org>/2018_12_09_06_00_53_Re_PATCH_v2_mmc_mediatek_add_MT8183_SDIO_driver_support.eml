Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:57:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 449F15800CD;
	Sat,  8 Dec 2018 22:01:17 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 22:01:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Amgp23hATomfoTczJcGBOUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/rs6wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95eWCxPAIyy?=
 =?us-ascii?q?b4UBAekcM+hGs4b9vEMOoBmlCAmwGO/i0CNEimPq0aA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?natNT1O7sVUeCx1qbI1ijIYu5R2Tf89IfIcgouoe2RVr93bMXR00gvFwXGjlqM?=
 =?us-ascii?q?s4PlIyiY2fgNs2iB6OpgUOOvi3Miqw1rpTiv3Mgsh5DPi4kIxF7E8iB5z5w0Jd?=
 =?us-ascii?q?2+UEN0fcSkEIFOuCGELYd5XsQiQ2RutS0nybMGoYa2cDYWxJkj3RLTdvKKf5aS?=
 =?us-ascii?q?7h7+V+udPS10iXNndb6nmRq+7Uytxvf/W8S0ylpGsDdJnsXWunwQ0xHe6s6KQe?=
 =?us-ascii?q?Zn8Ei7wzaAzQXT5/lEIU8qkarbLIYswqA/lpUNq0TPBCz2l1vsjK+QaEok/vKk?=
 =?us-ascii?q?6+P9YrXpvpOcNol0hR/iMqk2hMCzHeA1PhITU2WV5+iwzqDv8E7lTLlQj/A7kL?=
 =?us-ascii?q?HVsJXAKsQaoq65DRVV0oEm6xunCzem0dIYnWQILV5cexKIkZLpO1fQL/D8FPu/?=
 =?us-ascii?q?hFqtkDF1yPDcJbDhHJrNIWbZkLv7frZy9VRcyAwtwtBb/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3ZEPcnC3AuxmI1mFYXrrmtoBEX0FvgsiTOPwj12OSz5TZ2uoUK?=
 =?us-ascii?q?I66TE2E4amDYbFRoCwj72Nxia7HptKZm9YDlCAC2vnd4KBW/0UciKdPtdhkiAY?=
 =?us-ascii?q?VbimU4Ih1xauuxHgx7pkKerU/CsYtZX42dhx5u3Tkwwy9DNuA8Sc1WGNU397nm?=
 =?us-ascii?q?cSSzAq26B/pFR3yk2f3qhgn/xYCdtT6utTXQchNZ7cyO96B8roWg3bfNeEU1Km?=
 =?us-ascii?q?QtSgATEsQdM92d4OY0BhG9q8ihDPxTalA7gQl7aTHpw77rrc32TtJ8Z603vG17?=
 =?us-ascii?q?Muj188TstLNG2pnKh/9wfICo7NkkWZkbuqdKsG0C7M8meD0XSBvEVCXAFsVqXF?=
 =?us-ascii?q?WGgVZlHKotTh+kPCU7iuBKw6PQRb186NNLFGat3zglVAX/fsJtLeb2W1m2ezAB?=
 =?us-ascii?q?aIwqiBbI7re2UbwSXcB1IIkwEV/XaaKwc+Aj2trH7ZDDxrDVjveV/j8fFiqHOn?=
 =?us-ascii?q?SU851xyFYFd/17Wr4BIVheaTS/UI3r0avicssDF0HFe739LLBNuMvQthfKNAYd?=
 =?us-ascii?q?wj5FdLz37Wtwt4Ppa4NaBtmkYecxhrv0Ppzxh3FoRAkc0trHM2zApzKbiU0E9b?=
 =?us-ascii?q?ezOfx5DwPrzXKm/9/B20b67W21fe0MuZ+6sV6fQ4rUnjsx+tFkY473pn1NxV2W?=
 =?us-ascii?q?OG5prWFAoSTY7xUkEv+hdgo7HVfCY86J3U1HF2Kqa0ryLN1MgvBOsmzRagYcxS?=
 =?us-ascii?q?MKeFFA/0Ds0bCNKiKO0sm1i1cB0EOPpe+7IzP8Ojb/GGwrKkPP58nDK6imRK+I?=
 =?us-ascii?q?B80l+W+yVgUOLJ3pYFzOue3guITDr8iFahssbqmYFLfz0SH2y/yTT6C45VfKF9?=
 =?us-ascii?q?YYELCWK2Kc2t2tp+n4LtW2Jf9FO7HVMG2dOmdgCIb1Pg2g1cz0IXrmK9mSu51j?=
 =?us-ascii?q?B7jysmrq6C0yPQ2eTicxwHN3VPRGlji1fsPIe1g8obXEiucwgmih+l6VzmyKhc?=
 =?us-ascii?q?oaR1N3PTTltQfyjqM2FiVbO9t7qDY8JV6JIkqz5XUPm6YV2BTr79oh0a0z7sHm?=
 =?us-ascii?q?dExTA7cS2qtYv9nxBglG2dK3NzpmLDec5s3Rff+MDcRflJ0zoEXiZ4kzrXBlu7?=
 =?us-ascii?q?P9Wz5tWbjZTDsuO/V2KnSJJTdzLmzYeBtCu9+G1rDgezn/G1mt37Dwc61TX32M?=
 =?us-ascii?q?VtVSXNtBz8eJXk17ymMeJ7eUllHF/95NB9Go1kkIswhZcQ1GMehpWU+3oHjGjy?=
 =?us-ascii?q?Pc9a2aL4cHoCWzoLz8TJ7wji3U1pNmiJyJ7hVnWB3sthYMG3YmAM1SI89cxKCL?=
 =?us-ascii?q?qU46ZCnSt6uVe4qQPRYf5gnjYS0/cu6Xgag/0Xtwop1CmSHrcSHUxANyz2ixuI?=
 =?us-ascii?q?98y+rLlQZGu3dLiw1Ul+ksq7ALCMvA5cQ2r5dYk4HSBr8Mp/Kl3M3Wb36oHlft?=
 =?us-ascii?q?nQcN0SugeVkxfGk+haNpYxmuAWiipgPGL3pWclxPIjjRxywZG6u5CKK3lq/KK8?=
 =?us-ascii?q?GBJZNyf6Z8UO+jH2lqZen92b34SuHpVnBzUKU4HkTfOuEDIOq/vnMxyCHyE7qn?=
 =?us-ascii?q?eeAbDfBxOQ6F96r3LTFJCmL2qYK2MezdVmWRmRPkhfgB0PUTU+n545EB2qxcP7?=
 =?us-ascii?q?fEd44DAR+kD3qh9Wxu10MBn/V3/VpB20ZTcsVJifMB1W4xlA50jPNMyR8PlzEz?=
 =?us-ascii?q?tE/pG7rwyNN2+bZxlODW4TQUyJHFTjPrio5dnd/OmUHOu+L/3SYbqQrexSTeuH?=
 =?us-ascii?q?xZWq0oF+5TaDKt2PPmV+D/08wkdCXXd5G9nAmzUSUSMXkTjBb9WcpBe69S16tc?=
 =?us-ascii?q?S/8PXtWALy6oqDEbpSMdNz+x+ohaePLfKfhCF8KTxAzJMD2WfIyKQD3F4Vkyxu?=
 =?us-ascii?q?dyeiEbUDtS7OTaLcgKxXDwQcayN8KsRI9b883hJWNM7fi9P10KN4j/EvB1dEU1?=
 =?us-ascii?q?zhht+mZcgQL26hM1PHAV6BNK6aKj3T38H3faS8RKVKg+VJrBKwoyiUEk/5MjSH?=
 =?us-ascii?q?ljnkTBSvMeBKjCGGMx1SooC9chBxCWf9SNLqcAG0MNhyjTcu2707mmvKNXIAMT?=
 =?us-ascii?q?h7a05NsryQ7SZCjvpjAWBO8nplIveCmyuC6+nYK5AWseZkAyhuluJa5mg6xKVR?=
 =?us-ascii?q?7C1eWPN1ny7SpMZ0o166iumP1iZnUB1WpzdLno2Lu0BiOaTf9pZYWHfE/AgC7W?=
 =?us-ascii?q?OfCxkRo9tlC9vvu71fy9TVlaLzLitC/MzQ/ccGG8fUL8eHYzIdNk/rGj/dCk0X?=
 =?us-ascii?q?TTm2HWTSi01UjPyRsHaSq8sUsJ/pzbwPQbhfXUd9PPQbAURsAJRWLI12WDAvmK?=
 =?us-ascii?q?Kzh84S4n+/sRyXQ99V6MOUHsmOCOnifW7KxYJPYAEFlPahddwe?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAD7rgxch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDeogZjA5QAQeBNRSJDI4xgXMsBwwBh10iNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBATcBBAEJAQEKCw0CA?=
 =?us-ascii?q?iYCAgMfEgEFARwQCQWDHAGBdAUIBZgoPIodcHwzgnYBAQWBMAELAYVeAwUSeYs?=
 =?us-ascii?q?WF3iBB4ERgxKBQYZEgleLK4UQkDwJhwiKRxiRPY1pLIsMMIElgg4zGggoCBpSB?=
 =?us-ascii?q?oI1ghsMDAuDSoUUhUwyM4EFAQGODAEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAAD7rgxch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDeogZjA5QAQeBNRSJDI4xgXMsBwwBh10iNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBATcBBAEJAQEKCw0CAiYCAgMfEgEFARw?=
 =?us-ascii?q?QCQWDHAGBdAUIBZgoPIodcHwzgnYBAQWBMAELAYVeAwUSeYsWF3iBB4ERgxKBQ?=
 =?us-ascii?q?YZEgleLK4UQkDwJhwiKRxiRPY1pLIsMMIElgg4zGggoCBpSBoI1ghsMDAuDSoU?=
 =?us-ascii?q?UhUwyM4EFAQGODAEB?=
X-IronPort-AV: E=Sophos;i="5.56,333,1539673200"; 
   d="scan'208";a="55564549"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 22:01:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726096AbeLIGBG (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 9 Dec 2018 01:01:06 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:39836 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726066AbeLIGBG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 9 Dec 2018 01:01:06 -0500
Received: by mail-pf1-f195.google.com with SMTP id c72so3832743pfc.6
        for <linux-kernel@vger.kernel.org>; Sat, 08 Dec 2018 22:01:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=zON7zlcAVCocl9y+d8mj7k02JkCt42bGGlfMifRWrZE=;
        b=RqGkAHn079ZHTRbvpmoLp6OhxlQet9lc9Pph7i9Sb1oAt5i0x5o8Qukv4A490rZAg2
         VB/ZYNk9SAm4PtxcN2hVcAcVPxPTB/g99q3W2FqwTPlVChC4Xz6h28SlXEglMqmVMn9w
         veiQw6b53diWCPqiB5R3Lmq855pA8MwlEwibg=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=zON7zlcAVCocl9y+d8mj7k02JkCt42bGGlfMifRWrZE=;
        b=onuY72Aj0gWne9F0zidUn5265NCq7shJhRxHbCEvdjqt6D5/Z7SgY+Ic5IeJ0FZMHK
         dXdv1pOsJ5/0IVSHjF2C+6dIjgbNbsp7bvsJcUxc4L4uHHiVg5dWNHAXhPTvM6KHaFZc
         sOpAGC0rdQouuEJgaXQF/cKnsI+shkB4SquM6UZTtSrpikrNjR187Wywi9/SdWjwiQzk
         xmyVSMwlHb7caEDKbiyg/zLp1btW/vjiawPJZhIpjQCV2d4b4kclYqUXXDKqTLd+YO/l
         tNIltpuKIEBOxf9zDtRq1PCWsQwSZiGIwEGj014IUFyiXNFH3owXiwOx85XueTdv3n46
         c4jA==
X-Gm-Message-State: AA+aEWaNwdQZuXraaV5uRy6tnOJg/PICI7tx5+xLUdeIAcBUsnge/3lT
        ijS7bHJF1hxJpMBxmqFSQD3QnIYicfhw9ncsJg/BfA==
X-Google-Smtp-Source: AFSGD/Vmdus5HkOeH3bjTbWi7mibzO6Xi+g0yjI/0SCyY3P0VxupNcQ2UFI73kKgFeIW/MoSD681tiExRgGwsN7fTJA=
X-Received: by 2002:a63:4c04:: with SMTP id z4mr7094955pga.312.1544335265191;
 Sat, 08 Dec 2018 22:01:05 -0800 (PST)
MIME-Version: 1.0
References: <1542873780-13911-1-git-send-email-jjian.zhou@mediatek.com>
 <CANMq1KCO7tUGpXBR6x8cWiVd+5if2sPxU5N9J2aiMtuWuff3eg@mail.gmail.com> <1543310856.15593.32.camel@mhfsdcap03>
In-Reply-To: <1543310856.15593.32.camel@mhfsdcap03>
From: Nicolas Boichat <drinkcat@chromium.org>
Date: Sun, 9 Dec 2018 14:00:53 +0800
Message-ID: <CANMq1KBwH9OqispbPf83TWDwbZ6KNj=Z5v+S7tYwBHnYtdTwWg@mail.gmail.com>
Subject: Re: [PATCH v2] mmc: mediatek: add MT8183 SDIO driver support
To: jjian.zhou@mediatek.com
Cc: Ulf Hansson <ulf.hansson@linaro.org>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Chaotian Jing <Chaotian.Jing@mediatek.com>,
        Ryder.Lee@mediatek.com, linux-mmc@vger.kernel.org,
        linux-arm Mailing List <linux-arm-kernel@lists.infradead.org>,
        linux-mediatek@lists.infradead.org, srv_heupstream@mediatek.com,
        lkml <linux-kernel@vger.kernel.org>, yong.mao@mediatek.com,
        Hsin-Yi Wang <hsinyi@chromium.org>, sean.wang@kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 27, 2018 at 5:27 PM Jjian Zhou <jjian.zhou@mediatek.com> wrote:
>
> On Mon, 2018-11-26 at 19:47 +0800, Nicolas Boichat wrote:
> > On Thu, Nov 22, 2018 at 4:03 PM Jjian Zhou <jjian.zhou@mediatek.com> wrote:
> > >
> > > MT8183 need SDIO driver. So it need add new code
> > > to support it.
> >
> > The description does not seem to match what is going on below: I don't
> > see anything that is obviously MT8183-specific. At first glance, this
> > seems like a patch that makes it possible to enable MMC_CAP_SDIO_IRQ
> > ("cap-sdio-irq" dt property).
> >
> > Can you describe in more detail what is going on here?
>
> Hi Nicolas,
>    Thank you for your comments.
>
> Host wants to use the new method to signal/process SDIO IRQs, must
> enable MMC_CAPS_SDIO_IRQ_NOTHREAD and implement the ->ack_sdio_irq()
> callback. The current driver doesn't support it. This code makes it
> possible to enable SDIO IRQs by using the new method. It is described as
> "MT8183 need SDIO driver". Because it is tested based on MT8183.
> How about the below commit message:
>
> This code wants to support SDIO IRQs. It enables MMC_CAP_SDIO_IRQ &
> MMC_CAP2_SDIO_IRQ_NOTHREAD and implement the ->ack_sdio_irq() callback.

Sorry, I forgot to reply earlier.

"This patch enables support for SDIO IRQs" sounds better to me, but
that's for the commit message.

For the commit _title_, you should not need to mention MT8183 (we have
a similar out-of-tree patch on chromeos-3.18 for MT8173:
https://crrev.com/c/319366, so I assume it'd be useful on many MTK
SoCs). But you can mention that this is tested on MT8183 in the commit
message.

I'd use "mmc: mediatek: Add MMC_CAP_SDIO_IRQ support" as commit title.

Thanks,

>    Thanks a lot.
>
> >
> > > Signed-off-by: Jjian Zhou <jjian.zhou@mediatek.com>
> > > Signed-off-by: Yong mao <yong.mao@mediatek.com>
> > > Signed-off-by: Chaotian Jing <chaotian.jing@mediatek.com>
> > > ---
> > >  drivers/mmc/host/mtk-sd.c | 51 ++++++++++++++++++++++++++++++++++++++++++++---
> > >  1 file changed, 48 insertions(+), 3 deletions(-)
> > >
> > > diff --git a/drivers/mmc/host/mtk-sd.c b/drivers/mmc/host/mtk-sd.c
> > > index 6334cc7..da2a047 100644
> > > --- a/drivers/mmc/host/mtk-sd.c
> > > +++ b/drivers/mmc/host/mtk-sd.c
> > > @@ -1114,6 +1114,7 @@ static void msdc_start_command(struct msdc_host *host,
> > >                 struct mmc_request *mrq, struct mmc_command *cmd)
> > >  {
> > >         u32 rawcmd;
> > > +       unsigned long flags;
> > >
> > >         WARN_ON(host->cmd);
> > >         host->cmd = cmd;
> > > @@ -1131,7 +1132,12 @@ static void msdc_start_command(struct msdc_host *host,
> > >         cmd->error = 0;
> > >         rawcmd = msdc_cmd_prepare_raw_cmd(host, mrq, cmd);
> > >
> > > +       if (host->mmc->caps & MMC_CAP_SDIO_IRQ)
> > > +               spin_lock_irqsave(&host->lock, flags);
> > >         sdr_set_bits(host->base + MSDC_INTEN, cmd_ints_mask);
> > > +       if (host->mmc->caps & MMC_CAP_SDIO_IRQ)
> > > +               spin_unlock_irqrestore(&host->lock, flags);
> > > +
> > >         writel(cmd->arg, host->base + SDC_ARG);
> > >         writel(rawcmd, host->base + SDC_CMD);
> > >  }
> > > @@ -1351,6 +1357,27 @@ static void msdc_request_timeout(struct work_struct *work)
> > >         }
> > >  }
> > >
> > > +static void msdc_enable_sdio_irq(struct mmc_host *mmc, int enb)
> > > +{
> > > +       unsigned long flags;
> > > +       struct msdc_host *host = mmc_priv(mmc);
> > > +
> > > +       if (enb)
> > > +               pm_runtime_get_sync(host->dev);
> > > +
> > > +       spin_lock_irqsave(&host->lock, flags);
> > > +       if (enb)
> > > +               sdr_set_bits(host->base + MSDC_INTEN, MSDC_INTEN_SDIOIRQ);
> > > +       else
> > > +               sdr_clr_bits(host->base + MSDC_INTEN, MSDC_INTEN_SDIOIRQ);
> > > +       spin_unlock_irqrestore(&host->lock, flags);
> > > +
> > > +       if (!enb) {
> > > +               pm_runtime_mark_last_busy(host->dev);
> > > +               pm_runtime_put_autosuspend(host->dev);
> > > +       }
> > > +}
> > > +
> > >  static irqreturn_t msdc_irq(int irq, void *dev_id)
> > >  {
> > >         struct msdc_host *host = (struct msdc_host *) dev_id;
> > > @@ -1373,7 +1400,12 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
> > >                 data = host->data;
> > >                 spin_unlock_irqrestore(&host->lock, flags);
> > >
> > > -               if (!(events & event_mask))
> > > +               if ((events & event_mask) & MSDC_INT_SDIOIRQ) {
> > > +                       msdc_enable_sdio_irq(host->mmc, 0);
> > > +                       sdio_signal_irq(host->mmc);
> > > +               }
> > > +
> > > +               if (!(events & (event_mask & ~MSDC_INT_SDIOIRQ)))
> > >                         break;
> > >
> > >                 if (!mrq) {
> > > @@ -1493,8 +1525,11 @@ static void msdc_init_hw(struct msdc_host *host)
> > >          */
> > >         sdr_set_bits(host->base + SDC_CFG, SDC_CFG_SDIO);
> > >
> > > -       /* disable detect SDIO device interrupt function */
> > > -       sdr_clr_bits(host->base + SDC_CFG, SDC_CFG_SDIOIDE);
> > > +       /* Config SDIO device detect interrupt function */
> > > +       if (host->mmc->caps & MMC_CAP_SDIO_IRQ)
> > > +               sdr_set_bits(host->base + SDC_CFG, SDC_CFG_SDIOIDE);
> > > +       else
> > > +               sdr_clr_bits(host->base + SDC_CFG, SDC_CFG_SDIOIDE);
> > >
> > >         /* Configure to default data timeout */
> > >         sdr_set_field(host->base + SDC_CFG, SDC_CFG_DTOC, 3);
> > > @@ -2013,6 +2048,11 @@ static void msdc_hw_reset(struct mmc_host *mmc)
> > >         sdr_clr_bits(host->base + EMMC_IOCON, 1);
> > >  }
> > >
> > > +static void msdc_ack_sdio_irq(struct mmc_host *mmc)
> > > +{
> > > +       msdc_enable_sdio_irq(mmc, 1);
> > > +}
> > > +
> > >  static const struct mmc_host_ops mt_msdc_ops = {
> > >         .post_req = msdc_post_req,
> > >         .pre_req = msdc_pre_req,
> > > @@ -2020,6 +2060,8 @@ static void msdc_hw_reset(struct mmc_host *mmc)
> > >         .set_ios = msdc_ops_set_ios,
> > >         .get_ro = mmc_gpio_get_ro,
> > >         .get_cd = mmc_gpio_get_cd,
> > > +       .enable_sdio_irq = msdc_enable_sdio_irq,
> > > +       .ack_sdio_irq = msdc_ack_sdio_irq,
> > >         .start_signal_voltage_switch = msdc_ops_switch_volt,
> > >         .card_busy = msdc_card_busy,
> > >         .execute_tuning = msdc_execute_tuning,
> > > @@ -2147,6 +2189,9 @@ static int msdc_drv_probe(struct platform_device *pdev)
> > >         else
> > >                 mmc->f_min = DIV_ROUND_UP(host->src_clk_freq, 4 * 4095);
> > >
> > > +       if (mmc->caps & MMC_CAP_SDIO_IRQ)
> > > +               mmc->caps2 |= MMC_CAP2_SDIO_IRQ_NOTHREAD;
> > > +
> > >         mmc->caps |= MMC_CAP_ERASE | MMC_CAP_CMD23;
> > >         /* MMC core transfer sizes tunable parameters */
> > >         mmc->max_segs = MAX_BD_NUM;
> > > --
> > > 1.9.1
> > >
>
>
