Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 16:09:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D4C1B580460;
	Fri, 30 Nov 2018 00:09:01 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 30 Nov 2018 00:09:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A1d5qPRKTFz5goho2v9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvjzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gq1ZrhKhvAR/zozPbY2JKPZzZL/RcMkGSWZdWMtaSixPApm7?=
 =?us-ascii?q?b4sKF+cOPuZYoJP7p1sBsBCxBwisD/7oxz5Ih3/6x6w73/4gEAHGxgMgGd0OvW?=
 =?us-ascii?q?/QrNX0MqcSTO+0wLPJzTXFc/NZxzP95JLUfRAmpPGBRLR9etfSx0k3Dw7JkEmc?=
 =?us-ascii?q?pIj/Mz+I2OkBrXKX4/djWO6zkWIqqgN8riCyysoolIXFnIIYx1De+Sh53oo5P8?=
 =?us-ascii?q?C0RUB6bNOiDZBerTuVN5FsTcMnW2xouDg1yrkBuZOjYigKx4ooxwTFZ/yEbYeI?=
 =?us-ascii?q?+BTjW/iVITtig3JlYr2/iw6z8Uim1OL8StG53EhWoidBiNXAq34A2wLJ5sSaSf?=
 =?us-ascii?q?Zx4l2t1DeN2gzL7+FLO0E0la7VK547xb4wk4IesUDCHi/whUX3g7aadkY69eiy?=
 =?us-ascii?q?7eTofLHmqoabN456jAHxLL4ul9ehAeQ3LAcORXKX+eei2735+032XrFKgucxkq?=
 =?us-ascii?q?nDv5DWPd4bqbKhAw9JzoYj7A6yDzOn0NQbg3YLNl1EeA+cgojtOlHOJu34DPil?=
 =?us-ascii?q?j1Stljdr2+7JPrn7DprRKXjDla/rfaxh5E5E1Aoz0ddf6opUCr4bIfLzRlX+tN?=
 =?us-ascii?q?vCAh85Lgy72eDnCNpm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4ubk?=
 =?us-ascii?q?jWUlll8FYampwZwXZWi6HvRhPUqVe3nsgtAHEWcMuQozV+jqiFyEUT5OaHe+Ra?=
 =?us-ascii?q?M85jcnCI24CYfPXJyigLuE3C2jBJ1ZenhGCkyQEXfvb4iLQewMaCKVIs9iiDAE?=
 =?us-ascii?q?T6KuS4062BGqtQ/6zadnL+XO9i0Zs5LjyMZ65+nJmR4u8jx0CtyX03uRQGFsgm?=
 =?us-ascii?q?MIWzg20bh8oUNnzFePy6x4g/1CGtxV6PNESQM6NZ/az+xnBNH+QAPBftGVSFm4?=
 =?us-ascii?q?RtWqGy0+TtU0w9UWeUZyB82ijgzf3yqtG7IaiqaEBIIq/a7G33j+PcB9y23Y26?=
 =?us-ascii?q?kniFUmRshPNWiihqNk8wjTBojJk1iWlqqwdKQc2jLN+3mHzWaUoE5YVwtwW73f?=
 =?us-ascii?q?XX8DfkvWscj55kTaQrCzE7snLBVOxdSCKqRQbN3plktJRPH4NdTaYmKxnXqwBB?=
 =?us-ascii?q?mSyrONaorqZ3sS3CHHBEcYlAAT+G6MNRIiCSe5v2LeEDtuGErzY0Pt9Ol+r2+7?=
 =?us-ascii?q?Tk80zg2Qc01tzb21+gQRhfydTfMT0akJuCMgqzVyAVa80MjaC9uGpwp9YqpcZc?=
 =?us-ascii?q?kx70tA1WLcrwZ9JICvL7h+hl4CdAR6p1nh1xFpBYRPj8crrGkmwxFvKa2FylxB?=
 =?us-ascii?q?cTCY3ZfuOrDMLmny/Rava7PZ213E0daW/LsP5+o8q1n5oA6pEU8i+W1909ZJy3?=
 =?us-ascii?q?uc+onKDA0KXJPxT0Y77QR1q6vbYyk9/YzU03JsPLKwsj/D3dIpGeQkxgyhf9dZ?=
 =?us-ascii?q?LKOLCgvyH9cGCMipLewgg0KpYQ4cPOBO6K40ONurd+GH2KG3Julghi+pjWNd7I?=
 =?us-ascii?q?B7zE2M7St8RvfU0Jkfx/GXwxWIVy37jFenqc33nYFEZTcPHmuw0yTkBYhRZrFs?=
 =?us-ascii?q?coYPE2uhP8q3xtBmjZ73R3FY7EKjB08B2MKxeRuSbkbx3A1K2UQMvHynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336pb?=
 =?us-ascii?q?q75lL2nQQkdIeDL6L3p4XauztbqCYshP540usShMVOS8YFaaSqPyohcA0iPjGX?=
 =?us-ascii?q?deyy4/dz2wppr5mBl6gnqHLHlvtHrZZd1wxRDH6d3cX/FR2SAKRCt5iTnRHVW8?=
 =?us-ascii?q?O9ip/dOJl5bMqOy+VmShVoFNfinv14+PqCy75WhyCx2lg/+zgsHnERQ90SLj1N?=
 =?us-ascii?q?llTyTIoAz8Yon2zau6N+1nc1JsBF/97cp6B45/npExhJEWxXgVmJGV8WAbnmf0?=
 =?us-ascii?q?NNVRwbj+Y2YVRT4X397V5xDo2EhiLnKK3Y31THuczdV6Z9mmfGwWwDky4N5QCK?=
 =?us-ascii?q?eb97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792msKVXY2OvfaKx1UVkm9ChEaqCohpdWHvifpciHClw7thwMV7W0X3z7J3kd8?=
 =?us-ascii?q?fUbd4JqhKUlBLAhfBPKJ0tjvoKmTZnOWXlsHI+0eE7ihhu3YygsIiDNmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDA8qG?=
 =?us-ascii?q?2UGb/BEg+E8ktms2jDE5O2N3GUOXkZy89tRAKGKUxbgQAUWig6n5EjGgCrwszh?=
 =?us-ascii?q?bFl25jQL6lHkrRtMz/piNwPjXWfHuAeodjA0RYCfLRpR8wFC/lrVPtaY7u5pBC?=
 =?us-ascii?q?FY+ZuhrAOWJ2yfZgRIC3wJW0OeC1DiOLmu+cfP8+yCCuWiKPvOZK2EqfZCWPeQ?=
 =?us-ascii?q?2ZKvzoxm8i6MNsqRP3liDP472ktZUXB6AcTZnDoPRDINlyLQdM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUQxkMShDp0?=
 =?us-ascii?q?dzazEbUMryrNTKPLl69TDh4bbT5zNcRS46I92AlNJdDUitfv2rFkif41Dk9PVU?=
 =?us-ascii?q?b9lcGxecwKP2a9OUvbBEaKMbSKPyHEz9vrbqO8V7JQiv5ZtxmxuTadDk/iMS6P?=
 =?us-ascii?q?lzjvVxCzL+5MiDuXMwBZuIG4ahxtE3TsTMr6ah2nN996lT03zqcyhnPPNG4cNy?=
 =?us-ascii?q?BzckJNrrKK6yNYje5yG2hA7npjMOmFlDyV7+jeKpYKr/RrBj54mP5d4HQ/mPNp?=
 =?us-ascii?q?63RcTvtziirUr/Z0rl2mm/XJwT1iFFJLpjFNmJ+jt0R+NajX+59MVGyC9xUIqS?=
 =?us-ascii?q?2WABUWuvNvC8Hjtq5dzNTCjuT4LzIR3cjT+J4uB8HSJ4q2MTJ1IBuvCnjGDAID?=
 =?us-ascii?q?QhavNGfClwpclu2f8jueqZ1s+cuko4YHVrIODA99LfgdEEkwRNE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAD27gBch0O0hNFiGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrJ4wRjAgpgT8BOGiWSoFxFhgTAYd0IjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkvgjYigmUDAwECJFIGCQEBUANUBxIFgxyCAgWnfDOKL4dsh?=
 =?us-ascii?q?Ct6gRyBETMBgikHiwoCkB2QCQcCDZEpGF6QPoh5j16BRoINcIM8gicXjioyAQE?=
 =?us-ascii?q?xAQGBAwEBjgEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AJAAD27gBch0O0hNFiGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrJ4wRjAgpgT8BOGiWSoFxFhgTAYd0IjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkvgjYigmUDAwECJFIGCQEBUANUBxIFgxyCAgWnfDOKL4dshCt6gRyBETMBgik?=
 =?us-ascii?q?HiwoCkB2QCQcCDZEpGF6QPoh5j16BRoINcIM8gicXjioyAQExAQGBAwEBjgEBA?=
 =?us-ascii?q?Q?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="55517658"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 00:08:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727233AbeK3TRS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 14:17:18 -0500
Received: from mga12.intel.com ([192.55.52.136]:50708 "EHLO mga12.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726992AbeK3TRS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 14:17:18 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 00:08:49 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="117325047"
Received: from linux.intel.com ([10.54.29.200])
  by fmsmga002.fm.intel.com with ESMTP; 30 Nov 2018 00:08:49 -0800
Received: from dazhang1-ssd.sh.intel.com (unknown [10.239.48.128])
        by linux.intel.com (Postfix) with ESMTP id 65FA3580460;
        Fri, 30 Nov 2018 00:08:47 -0800 (PST)
From: Zhang Yi <yi.z.zhang@linux.intel.com>
To: pbonzini@redhat.com, mdontu@bitdefender.com, ncitu@bitdefender.com
Cc: rkrcmar@redhat.com, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org, Zhang Yi <yi.z.zhang@linux.intel.com>
Subject: [RFC PATCH V2 05/11] KVM: VMX: Write the SPPTP to VMCS area.
Date: Fri, 30 Nov 2018 16:08:32 +0800
Message-Id: <11d0e5ff60c3e0cdac90872217299735e3ca8234.1543481993.git.yi.z.zhang@linux.intel.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <cover.1543481993.git.yi.z.zhang@linux.intel.com>
References: <cover.1543481993.git.yi.z.zhang@linux.intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Same as EPT page table, We initialized the SPPT,
and write the SPPT point into VMCS field.

Signed-off-by: Zhang Yi <yi.z.zhang@linux.intel.com>
---
 arch/x86/include/asm/vmx.h |  2 ++
 arch/x86/kvm/vmx.c         | 17 +++++++++++++++++
 2 files changed, 19 insertions(+)

diff --git a/arch/x86/include/asm/vmx.h b/arch/x86/include/asm/vmx.h
index 2aa088f..bd4ec8a 100644
--- a/arch/x86/include/asm/vmx.h
+++ b/arch/x86/include/asm/vmx.h
@@ -217,6 +217,8 @@ enum vmcs_field {
 	XSS_EXIT_BITMAP_HIGH            = 0x0000202D,
 	ENCLS_EXITING_BITMAP		= 0x0000202E,
 	ENCLS_EXITING_BITMAP_HIGH	= 0x0000202F,
+	SPPT_POINTER			= 0x00002030,
+	SPPT_POINTER_HIGH		= 0x00002031,
 	TSC_MULTIPLIER                  = 0x00002032,
 	TSC_MULTIPLIER_HIGH             = 0x00002033,
 	GUEST_PHYSICAL_ADDRESS          = 0x00002400,
diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index f76d3fb..e96b4c7 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -600,6 +600,7 @@ struct __packed vmcs12 {
 	u16 host_gs_selector;
 	u16 host_tr_selector;
 	u16 guest_pml_index;
+	u64 sppt_pointer;
 };
 
 /*
@@ -1158,6 +1159,7 @@ static const unsigned short vmcs_field_to_offset_table[] = {
 	FIELD64(VMREAD_BITMAP, vmread_bitmap),
 	FIELD64(VMWRITE_BITMAP, vmwrite_bitmap),
 	FIELD64(XSS_EXIT_BITMAP, xss_exit_bitmap),
+	FIELD64(SPPT_POINTER, sppt_pointer),
 	FIELD64(GUEST_PHYSICAL_ADDRESS, guest_physical_address),
 	FIELD64(VMCS_LINK_POINTER, vmcs_link_pointer),
 	FIELD64(GUEST_IA32_DEBUGCTL, guest_ia32_debugctl),
@@ -5348,11 +5350,17 @@ static u64 construct_eptp(struct kvm_vcpu *vcpu, unsigned long root_hpa)
 	return eptp;
 }
 
+static inline u64 construct_spptp(unsigned long root_hpa)
+{
+	return root_hpa & PAGE_MASK;
+}
+
 static void vmx_set_cr3(struct kvm_vcpu *vcpu, unsigned long cr3)
 {
 	struct kvm *kvm = vcpu->kvm;
 	unsigned long guest_cr3;
 	u64 eptp;
+	u64 spptp;
 
 	guest_cr3 = cr3;
 	if (enable_ept) {
@@ -5375,6 +5383,13 @@ static void vmx_set_cr3(struct kvm_vcpu *vcpu, unsigned long cr3)
 		ept_load_pdptrs(vcpu);
 	}
 
+	if (vcpu->arch.mmu->sppt_root != INVALID_PAGE &&
+	    enable_ept_spp) {
+		spptp = construct_spptp(vcpu->arch.mmu->sppt_root);
+		vmcs_write64(SPPT_POINTER, spptp);
+		vmx_flush_tlb(vcpu, true);
+	}
+
 	vmcs_writel(GUEST_CR3, guest_cr3);
 }
 
@@ -10505,6 +10520,8 @@ static void dump_vmcs(void)
 		pr_err("PostedIntrVec = 0x%02x\n", vmcs_read16(POSTED_INTR_NV));
 	if ((secondary_exec_control & SECONDARY_EXEC_ENABLE_EPT))
 		pr_err("EPT pointer = 0x%016llx\n", vmcs_read64(EPT_POINTER));
+	if ((secondary_exec_control & SECONDARY_EXEC_ENABLE_SPP))
+		pr_err("SPPT pointer = 0x%016llx\n", vmcs_read64(SPPT_POINTER));
 	n = vmcs_read32(CR3_TARGET_COUNT);
 	for (i = 0; i + 1 < n; i += 4)
 		pr_err("CR3 target%u=%016lx target%u=%016lx\n",
-- 
2.7.4

