Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:38:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B179A580460;
	Fri, 23 Nov 2018 19:11:57 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 19:11:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8znxqRTFLHNDHziKJtLl9Yq94dpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBKPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI2y?=
 =?us-ascii?q?bIkAD+QBM+hFoYf9vEMOoBmlCAWwGO/i0CNEimPq0aEm1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?narNT1NKEUUeuo0qfIzS/Mb/JQ2Tzg74XIfAwhofGWUrJxd8rc0lUvGB3BjlqO?=
 =?us-ascii?q?pozlJSma1vwNs2ia8+VgTvijhHIgqwF0uDSg3Nosh5DPi4kIyV7E7T10zJgpKd?=
 =?us-ascii?q?C8UkJ3fNCpHIVKuy2HNIZ6XtkuTmBqtSoizrALuoS3cDUUxJko3RLSauCLf5KV?=
 =?us-ascii?q?7h/sW+ucJypzimh/d7KlnRmy9FCtyu3iWcmw11ZHtjRFktbSuXAXzRDT6daISu?=
 =?us-ascii?q?F7/ki/3TaDzQfT6vtLIUwslKrbLYAuwqIom5YNrUjOGjX6lFj4gaOIbEko5+ul?=
 =?us-ascii?q?5/j9brjnpJKQL4p0hRv/MqQqlMy/G+M4Mg0WUmif+OS80qDj/ELgTLVJkPI2iK?=
 =?us-ascii?q?/Zv47eJcgCoa64DQlV3Zg56xukETem38oXnWMdIFJGZh2HlY7pNE/KIPziCve/?=
 =?us-ascii?q?mVusnC9xx//aJr3hHonNLn/bnbflfLZ96FBTxBA8zNBC/J9UDrABIPTuWk7+rt?=
 =?us-ascii?q?DYDxk5MxCqzObjEtlyyoQeWWeXCK+DLKzSqUOI5v4oI+SUZI8aojf9K+Q/6P7p?=
 =?us-ascii?q?l3M5mUIdcrOv3ZsYc324GvVmI0OEYXvjmNsBEGEKvhYgQ+zuklGNTTlTZ3OqVa?=
 =?us-ascii?q?Im+j47EJ6mDZvERo21gryB2zm0EodVZmBBDFCMF3Doep6AW/cNbiKSP8BgniYF?=
 =?us-ascii?q?VbinV48uyxWuuBXmxLpgK+re4jcYuo771Nhp++3Tkgk/+iZvD8Sd1GGNTHt4nn?=
 =?us-ascii?q?kSSD80x61/pU19ylGe0al3mfBYFNpT5+9XXQc+L5LT0+t6C9XqUALbYtiJUEqm?=
 =?us-ascii?q?QsmhATwpTdI+2dkOb1x5G9WjlB/D2SWqDqQRl7yKApw0763d02LwJ8Z713bJyq?=
 =?us-ascii?q?0hg0M6TctIMG2snrR/+BTLB47Vj0WZkL6nerkG0y7T6miP12qOs1teUA5rT6rF?=
 =?us-ascii?q?W3cTZk/VrdT84kPPVLuuCbUhMgtcxs+OMKpKatv1jVpYQPfvIsjRY2W0m22oHx?=
 =?us-ascii?q?aH2quMbJb2e2UaxCjSFVILkx4N8nqcNQgxHCGho3nAAzxoDl/vZ0Ls8e9jqHK0?=
 =?us-ascii?q?VEM0zgeKb1F/2Lqx4BIamfucS/YL1LIepCghsyl0HEq639/OF9qApg9hfKJAYd?=
 =?us-ascii?q?M94FZLz37ZuxZ6Ppy6K6Bih1gecwtsskPq1hV3DJhAkMcwoHMrygpyNbyX0Fdb?=
 =?us-ascii?q?ezyE2pDwP6XdKnPu8xC3d67Wxlbe3c6M9acL9vs5pEvsvQGzGkU57nVozsNa03?=
 =?us-ascii?q?2f5pXNEgofSpbxUkcx9xhnqLDWeCg954XI1XJyNam4qCPN29UsBOE90BavY89f?=
 =?us-ascii?q?ML+YFA/1C8AbB9WuJPY2lFSzbxMEPPpd9Kg7P869c/uG2airPPtvnT68jGRH5p?=
 =?us-ascii?q?x93VyI9yZmVuHI2JMFyemC3gSbTzf8kEuhssfvlIBeZDEdAnCwyTL5C45WfKFy?=
 =?us-ascii?q?e5gECX2vI8Gu2tpxnZrtVGNG+165AFMG3tSkeR6Tb1z7wA1R2l4boX2hmSuk0T?=
 =?us-ascii?q?N0lyslobaY3CzL2+7ibgYIOnZXRGl+ilfhOYi1j9EAUEmodQQpjwal5UDhyqhf?=
 =?us-ascii?q?paR/KXTTQEhScyj3KWFiTrW/tr6Yb8FT75MotD1dUP6gblCCVr79vxwa3jvhH2?=
 =?us-ascii?q?RE3jA7dDKqupLjkxxhkm2dL3VzrHvfec5uwxfS/9jcRf9X3jobSyh0kzjXBl6g?=
 =?us-ascii?q?P9a3+dWYjYvMsue7V2i5TJ1cbTHrzZ+ctCu8/WBrAQewn/eplt3lEAg61zT219?=
 =?us-ascii?q?1rVSXOsRb9bZPn16W8MeJ7YEZoAEXw5NZ9GoF7ioEwno0f2WAGhpWJ+noKiWTz?=
 =?us-ascii?q?Ps9a2a7kbHoNWCQEw9ja4AX+3E1jL3SJx5/2V3mHw8thYcW6bX0S2i4n889KD6?=
 =?us-ascii?q?KU5qRenSRpulq4sR7RYf9lkzcYyPsu62QVj/sHuQUz1SWdHq4dHVNDMiPyjRSI?=
 =?us-ascii?q?4MuzrKFWZGapbLix21ByndGnDLGevA5cXGz1dYslHS919s9/Kk7D0GXv6oH4f9?=
 =?us-ascii?q?nddc4TthqRkxvajulaMpQxlucRhSp8OGLwpnkly+89jRxz0pC2pomHK2Nx/K2n?=
 =?us-ascii?q?Bh5ULCH6Z8QW+jv1l6ZRgt6W35yzHpVmAjgER4HnTfWsEDIPr/jnMxuOHSY4qn?=
 =?us-ascii?q?eaH7rfAACe5F1nr3LJD5CkKXWXKGMFwtVlQRmXPFZfjxwMXDUmgp45ERinxM77?=
 =?us-ascii?q?f0d8+D8R/UT0qgdWxuJrKhn/UXrfpAGyZTcvU5WfKBtW7gdf50baK8Ce7+RzHz?=
 =?us-ascii?q?1G8Z2ltgCCNmubZwFQB2ETRkOEH0zjPqWp5dTY8+mYAfe+L+LTYbqUr+xSTeyI?=
 =?us-ascii?q?xZWp0otp5DuMMsSPPn9/D/w0wEZDXHZ5G9jHlDULUSAYiyXNb8uDrhem5iJ3tt?=
 =?us-ascii?q?y/8OjsWA/35YuAFbpSMdZs+xC3m6uDNPSQhCF2KTlGzJMM2GTIxaMb3F4TjSFu?=
 =?us-ascii?q?ajasHa4BtS7LUKLfhKtXAwQHZCN0MctC97g80RVVOc7HltP10aZ1geQoC1heT1?=
 =?us-ascii?q?zuhMGoadYOI2G8L17HAEeLNLKbJTzE2c33YKW8SaFOg+VQrRG/pTGbE0r7NDSZ?=
 =?us-ascii?q?izbpTwyvMf1LjCyDIBxeuYS9fgxxBmT5UN3magO0MNlsgD0ywL00gG7KNGEGPT?=
 =?us-ascii?q?h9dUNNsqOf7SdCjvpjHGxB62JvLfOYlCaB8+nYNpEWvONrAytukeJa5XU6y71N?=
 =?us-ascii?q?4yBFRPx6gi3SrtF1rlGik+mPzCdnURVUpjZKgoKLoVttOaHD+pZcXnbE+UFF0W?=
 =?us-ascii?q?LFJBkHvcctN8zzp61Kyt/Ciq/1YGNN/t/O4eMYBs7JOIeCbioidx3zF2iHIhEC?=
 =?us-ascii?q?SGuFNGfZz3BdmfCUvimbspgzq57EhJcKR7BBXUQ1F/gBTE9iGZoLPcEkDXsfjb?=
 =?us-ascii?q?eHgZtQtjKFpx7LSZAf58ifWw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AmAACHwPhbh0O0hNFjHgEGBwaBUggLA?=
 =?us-ascii?q?YNrJ5gRgWg5lyiBcywTAYhaIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJ?=
 =?us-ascii?q?iAwMBAnYGCQEBPhIDKSsGEwWCRzMiggIFp3yFQYRajAkXgUA/gREzjTgCiSOBb?=
 =?us-ascii?q?oQIkGkJf5BIgVmFC4MjhwGZdwGCCzMaCBcZgyeCJxeOMCszgQUBAYwhAQE?=
X-IPAS-Result: =?us-ascii?q?A0AmAACHwPhbh0O0hNFjHgEGBwaBUggLAYNrJ5gRgWg5lyi?=
 =?us-ascii?q?BcywTAYhaIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiAwMBAnYGCQEBP?=
 =?us-ascii?q?hIDKSsGEwWCRzMiggIFp3yFQYRajAkXgUA/gREzjTgCiSOBboQIkGkJf5BIgVm?=
 =?us-ascii?q?FC4MjhwGZdwGCCzMaCBcZgyeCJxeOMCszgQUBAYwhAQE?=
X-IronPort-AV: E=Sophos;i="5.56,272,1539673200"; 
   d="scan'208";a="54112087"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 19:11:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730686AbeKXN6g (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 24 Nov 2018 08:58:36 -0500
Received: from kvm5.telegraphics.com.au ([98.124.60.144]:56664 "EHLO
        kvm5.telegraphics.com.au" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730139AbeKXN5y (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 24 Nov 2018 08:57:54 -0500
Received: by kvm5.telegraphics.com.au (Postfix, from userid 502)
        id 5EA0028F6A; Fri, 23 Nov 2018 22:11:08 -0500 (EST)
To: Geert Uytterhoeven <geert@linux-m68k.org>
Cc: Andreas Schwab <schwab@linux-m68k.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Stephen N Chivers <schivers@csc.com.au>,
        Thomas Gleixner <tglx@linutronix.de>,
        Kars de Jong <jongk@linux-m68k.org>,
        Daniel Lezcano <daniel.lezcano@linaro.org>,
        Michael Schmitz <schmitzmic@gmail.com>,
        John Stultz <john.stultz@linaro.org>,
        Linus Walleij <linus.walleij@linaro.org>,
        linux-m68k@lists.linux-m68k.org, linux-kernel@vger.kernel.org
Message-Id: <d5cab859f9c4a138d51005cda1a3401f964dd745.1543028943.git.fthain@telegraphics.com.au>
In-Reply-To: <cover.1543028943.git.fthain@telegraphics.com.au>
References: <cover.1543028943.git.fthain@telegraphics.com.au>
From: Finn Thain <fthain@telegraphics.com.au>
Subject: [RFC PATCH v3 05/14] m68k: amiga: Convert to clocksource API
Date: Sat, 24 Nov 2018 14:09:03 +1100
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add a platform clocksource by adapting the existing arch_gettimeoffset
implementation.

Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
Acked-by: Linus Walleij <linus.walleij@linaro.org>
---
Changed since v2:
 - Don't check for timer interrupt in amiga_read_clk() when the timer is
about to be reloaded.

Changed since v1:
 - Moved clk_total access to within the irq lock.
---
 arch/m68k/amiga/config.c | 64 +++++++++++++++++++++++++++-------------
 1 file changed, 43 insertions(+), 21 deletions(-)

diff --git a/arch/m68k/amiga/config.c b/arch/m68k/amiga/config.c
index d4976c1aa0cc..0c2c07318f6c 100644
--- a/arch/m68k/amiga/config.c
+++ b/arch/m68k/amiga/config.c
@@ -17,6 +17,7 @@
 #include <linux/mm.h>
 #include <linux/seq_file.h>
 #include <linux/tty.h>
+#include <linux/clocksource.h>
 #include <linux/console.h>
 #include <linux/rtc.h>
 #include <linux/init.h>
@@ -461,7 +462,28 @@ void __init config_amiga(void)
 		*(unsigned char *)ZTWO_VADDR(0xde0002) |= 0x80;
 }
 
+static u64 amiga_read_clk(struct clocksource *cs);
+
+static struct clocksource amiga_clk = {
+	.name   = "ciab",
+	.rating = 250,
+	.read   = amiga_read_clk,
+	.mask   = CLOCKSOURCE_MASK(32),
+	.flags  = CLOCK_SOURCE_IS_CONTINUOUS,
+};
+
 static unsigned short jiffy_ticks;
+static u32 clk_total;
+
+static irqreturn_t ciab_timer_handler(int irq, void *dev_id)
+{
+	irq_handler_t timer_routine = dev_id;
+
+	clk_total += jiffy_ticks;
+	timer_routine(0, NULL);
+
+	return IRQ_HANDLED;
+}
 
 static void __init amiga_sched_init(irq_handler_t timer_routine)
 {
@@ -481,41 +503,41 @@ static void __init amiga_sched_init(irq_handler_t timer_routine)
 	 * Please don't change this to use ciaa, as it interferes with the
 	 * SCSI code. We'll have to take a look at this later
 	 */
-	if (request_irq(IRQ_AMIGA_CIAB_TA, timer_routine, 0, "timer", NULL))
+	if (request_irq(IRQ_AMIGA_CIAB_TA, ciab_timer_handler, IRQF_TIMER,
+			"timer", timer_routine))
 		pr_err("Couldn't register timer interrupt\n");
 	/* start timer */
 	ciab.cra |= 0x11;
-}
 
-#define TICK_SIZE 10000
+	clocksource_register_hz(&amiga_clk, amiga_eclock);
+}
 
-/* This is always executed with interrupts disabled.  */
-static u32 amiga_gettimeoffset(void)
+static u64 amiga_read_clk(struct clocksource *cs)
 {
-	unsigned short hi, lo, hi2;
+	unsigned long flags;
+	u8 msb, lsb, tmp;
 	u32 ticks, offset = 0;
 
-	/* read CIA B timer A current value */
-	hi  = ciab.tahi;
-	lo  = ciab.talo;
-	hi2 = ciab.tahi;
+	local_irq_save(flags);
 
-	if (hi != hi2) {
-		lo = ciab.talo;
-		hi = hi2;
-	}
-
-	ticks = hi << 8 | lo;
+	/* read CIA B timer A current value */
+	tmp = ciab.tahi;
+	lsb = ciab.talo;
+	msb = ciab.tahi;
+	if (msb != tmp)
+		lsb = ciab.talo;
 
-	if (ticks > jiffy_ticks / 2)
+	if (msb > 0)
 		/* check for pending interrupt */
 		if (cia_set_irq(&ciab_base, 0) & CIA_ICR_TA)
-			offset = 10000;
+			offset = jiffy_ticks;
+
+	ticks = jiffy_ticks - (msb << 8 | lsb);
+	ticks += offset + clk_total;
 
-	ticks = jiffy_ticks - ticks;
-	ticks = (10000 * ticks) / jiffy_ticks;
+	local_irq_restore(flags);
 
-	return (ticks + offset) * 1000;
+	return ticks;
 }
 
 static void amiga_reset(void)  __noreturn;
-- 
2.18.1

