Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:28:23 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX9+LEPJb9qe0AQ--.53489S3;
	Mon, 19 Nov 2018 09:23:24 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnB0OJEPJbDQxUAA--.2145S3;
	Mon, 19 Nov 2018 09:23:21 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id b22-v6so8295484pls.7
        for <xuliker@zju.edu.cn>; Sun, 18 Nov 2018 17:23:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :to:cc:message-id:in-reply-to:references:from:subject:date:sender
         :precedence:list-id;
        bh=PAlBtm6mZOeP5ipGH1fmOBhPhheb+64eIpr0fKQIbVs=;
        b=KkBQTD29QjN55WUh1zrR18h3O923/Lm9d3zQQRRlaMFR9xNXqg3RjBPrgYQu4ey6yC
         ICF4NuMg5g7bUJ/2P1mQqFzKbv/cAR4Hy6AaMWdBs+uZmrSQUgC/XhT0WYA5LJxiwUpT
         KU0DSrRBYFVL/YgVRTzQi6J2mK49LUc2riDcwyiuxVEj4DOMtCZgdhmaPzvqXkRwWIVU
         BjIMg010fqNFUaoUzWa7gdOIoao8Zm6PefohcXD4oumxDcWUjGLGgQZ8IpYwcT8DD469
         CQ4FzKcWHupXert4UpuBeqhhzp6l8KyhOIgNvufMfxP2dPeTMWPxBSv5Mql2YJooJPH9
         gWeQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gIRSW0hKKucTFPjMsjCksQezHWM60r1f1YE66ovIvqiqyvI3aXt
	sX+P+m4WKcsysSQEY0r1EgSS2QHPgkoKTX6syHVkb4Wv1r0eKro=
X-Received: by 2002:a17:902:6686:: with SMTP id e6-v6mr20113502plk.173.1542590600960;
        Sun, 18 Nov 2018 17:23:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2075126pju;
        Sun, 18 Nov 2018 17:23:20 -0800 (PST)
X-Google-Smtp-Source: AJdET5f2eCOksXZjIeQVKIENBFgqMRgj1HtSA72Ki2BKfqeaxzaOkBoiWDbL5fUZ94VeH1Vl/lsv
X-Received: by 2002:a63:da45:: with SMTP id l5mr18468052pgj.111.1542590600210;
        Sun, 18 Nov 2018 17:23:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542590600; cv=none;
        d=google.com; s=arc-20160816;
        b=OC6TC5a+61/4Px8+MfgMiGUlZ1to+MfdOCAjvvRIvWC1R4Bxu37y+GPTundBN8EbLM
         zTUesRppjc56zcXVY06mGirrIfS3JzEXU8l/9xKJx3BhQ1bYTjrznNLwoyxU/gYIoC+L
         MLLhhDNdunZliZAP/npZz3nmwje9mAg76djWRTuDrbmK+FxsA/1e6g3FesA1l+Fnk2cg
         XFFkwXjNlwtppfpslX9tXtAeSJCOQjCEcBCIXeRVAeLiYBE2zLs6peJr7P46Bsq2GHq0
         RFplv/EE3eiqLogwLpMpRdQnGmonV1jL3GWSmEsNuI6c2hWfh/oj3DDv92ctokqDLUIb
         n51Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:date:subject:from:references:in-reply-to
         :message-id:cc:to;
        bh=PAlBtm6mZOeP5ipGH1fmOBhPhheb+64eIpr0fKQIbVs=;
        b=Hm6Ow4z5l8LO7DYAC4hxbUyODHLt5sTgEQtk9fHU+mTcaBZEDV6K4cJckdEyvDKQDs
         uu+0ZZIuB7n1SlaR1g9Lma88s245jQB9ltEHSYlOmt1w/pkFn3XSTMMphGSMroG66C/t
         RM0ABSaHgaJe3muzXIbb8LcedQy8UCCCALmnM9HAl1otcQWey9tVPTomYcxLR4vGfCnO
         O5wnmvw6C8PSHGGSTZppuk2e1lhVobhEEyTPbNCLE7XV8yiPKh1a6RYN9eu9jLzEKunB
         K11OI/NglkB93b0zz/dsZEynjXnb801WoUKjNV6aqXcdIo3EfQFy1TqR3uDQYkopk3a5
         c3GQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n5si25326474pgh.422.2018.11.18.17.23.06;
        Sun, 18 Nov 2018 17:23:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728227AbeKSLoe (ORCPT <rfc822;piyush.popli@gmail.com>
        + 99 others); Mon, 19 Nov 2018 06:44:34 -0500
Received: from kvm5.telegraphics.com.au ([98.124.60.144]:49278 "EHLO
        kvm5.telegraphics.com.au" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727830AbeKSLoS (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 06:44:18 -0500
Received: by kvm5.telegraphics.com.au (Postfix, from userid 502)
        id E069F29DFD; Sun, 18 Nov 2018 20:22:17 -0500 (EST)
To: Geert Uytterhoeven <geert@linux-m68k.org>
Cc: Andreas Schwab <schwab@linux-m68k.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Stephen N Chivers <schivers@csc.com.au>,
        Thomas Gleixner <tglx@linutronix.de>,
        Daniel Lezcano <daniel.lezcano@linaro.org>,
        Michael Schmitz <schmitzmic@gmail.com>,
        John Stultz <john.stultz@linaro.org>,
        Linus Walleij <linus.walleij@linaro.org>,
        linux-m68k@lists.linux-m68k.org, linux-kernel@vger.kernel.org
Message-Id: <6597648024f9005bc763222c557f90a73f79e225.1542589838.git.fthain@telegraphics.com.au>
In-Reply-To: <cover.1542589838.git.fthain@telegraphics.com.au>
References: <cover.1542589838.git.fthain@telegraphics.com.au>
From: Finn Thain <fthain@telegraphics.com.au>
Subject: [RFC PATCH v2 08/14] m68k: bvme6000: Convert to clocksource API
Date: Mon, 19 Nov 2018 12:10:38 +1100
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnB0OJEPJbDQxUAA--.2145S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGrWfXr1kXFyDXw4fXw4UXFb_yoWrWr1fpr
	s7Cr90yF4jqr4xXws3GF17AF4aq3s3AF15Cr4UtryIkFZrtrykKanFkryaqF4DC393Zw1x
	XrW5JF13uF4UCw7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_JrI_
	JrylYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMxkF7I
	0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6w4lc2IjII80
	xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6xIIjxv20xvEc7CjxV
	AFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvEx4A2jsIEc7CjxVAF
	wI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480
	Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04
	k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVjvjDU0xZFpf9x07bmzVnUUUUU=

Add a platform clocksource by adapting the existing arch_gettimeoffset
implementation.

Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
Acked-by: Linus Walleij <linus.walleij@linaro.org>
---
Changed since v1:
 - Moved clk_total access to within the irq lock.
---
 arch/m68k/bvme6000/config.c | 52 +++++++++++++++++++++++++++----------
 1 file changed, 38 insertions(+), 14 deletions(-)

diff --git a/arch/m68k/bvme6000/config.c b/arch/m68k/bvme6000/config.c
index c27c104ac7e7..9691d741e9dc 100644
--- a/arch/m68k/bvme6000/config.c
+++ b/arch/m68k/bvme6000/config.c
@@ -18,6 +18,7 @@
 #include <linux/kernel.h>
 #include <linux/mm.h>
 #include <linux/tty.h>
+#include <linux/clocksource.h>
 #include <linux/console.h>
 #include <linux/linkage.h>
 #include <linux/init.h>
@@ -147,6 +148,21 @@ irqreturn_t bvme6000_abort_int (int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
+static u64 bvme6000_read_clk(struct clocksource *cs);
+
+static struct clocksource bvme6000_clk = {
+	.name   = "rtc",
+	.rating = 250,
+	.read   = bvme6000_read_clk,
+	.mask   = CLOCKSOURCE_MASK(32),
+	.flags  = CLOCK_SOURCE_IS_CONTINUOUS,
+};
+
+static u32 clk_total;
+
+#define RTC_TIMER_CLOCK_FREQ 8000000
+#define RTC_TIMER_CYCLES     (RTC_TIMER_CLOCK_FREQ / HZ)
+#define RTC_TIMER_COUNT      ((RTC_TIMER_CYCLES / 2) - 1)
 
 static irqreturn_t bvme6000_timer_int (int irq, void *dev_id)
 {
@@ -158,6 +174,7 @@ static irqreturn_t bvme6000_timer_int (int irq, void *dev_id)
     local_irq_save(flags);
     msr = rtc->msr & 0xc0;
     rtc->msr = msr | 0x20;		/* Ack the interrupt */
+    clk_total += RTC_TIMER_CYCLES;
     timer_routine(0, NULL);
     local_irq_restore(flags);
 
@@ -180,13 +197,13 @@ void bvme6000_sched_init (irq_handler_t timer_routine)
 
     rtc->msr = 0;	/* Ensure timer registers accessible */
 
-    if (request_irq(BVME_IRQ_RTC, bvme6000_timer_int, 0,
-				"timer", timer_routine))
+    if (request_irq(BVME_IRQ_RTC, bvme6000_timer_int, IRQF_TIMER, "timer",
+                    timer_routine))
 	panic ("Couldn't register timer int");
 
     rtc->t1cr_omr = 0x04;	/* Mode 2, ext clk */
-    rtc->t1msb = 39999 >> 8;
-    rtc->t1lsb = 39999 & 0xff;
+    rtc->t1msb = RTC_TIMER_COUNT >> 8;
+    rtc->t1lsb = RTC_TIMER_COUNT & 0xff;
     rtc->irr_icr1 &= 0xef;	/* Route timer 1 to INTR pin */
     rtc->msr = 0x40;		/* Access int.cntrl, etc */
     rtc->pfr_icr0 = 0x80;	/* Just timer 1 ints enabled */
@@ -198,14 +215,14 @@ void bvme6000_sched_init (irq_handler_t timer_routine)
 
     rtc->msr = msr;
 
+    clocksource_register_hz(&bvme6000_clk, RTC_TIMER_CLOCK_FREQ);
+
     if (request_irq(BVME_IRQ_ABORT, bvme6000_abort_int, 0,
 				"abort", bvme6000_abort_int))
 	panic ("Couldn't register abort int");
 }
 
 
-/* This is always executed with interrupts disabled.  */
-
 /*
  * NOTE:  Don't accept any readings within 5us of rollover, as
  * the T1INT bit may be a little slow getting set.  There is also
@@ -213,14 +230,18 @@ void bvme6000_sched_init (irq_handler_t timer_routine)
  * results...
  */
 
-u32 bvme6000_gettimeoffset(void)
+static u64 bvme6000_read_clk(struct clocksource *cs)
 {
+    unsigned long flags;
     volatile RtcPtr_t rtc = (RtcPtr_t)BVME_RTC_BASE;
     volatile PitRegsPtr pit = (PitRegsPtr)BVME_PIT_BASE;
-    unsigned char msr = rtc->msr & 0xc0;
+    unsigned char msr;
     unsigned char t1int, t1op;
     u32 v = 800000, ov;
 
+    local_irq_save(flags);
+
+    msr = rtc->msr & 0xc0;
     rtc->msr = 0;	/* Ensure timer registers accessible */
 
     do {
@@ -233,17 +254,20 @@ u32 bvme6000_gettimeoffset(void)
     } while (t1int != (rtc->msr & 0x20) ||
 		t1op != (pit->pcdr & 0x04) ||
 			abs(ov-v) > 80 ||
-				v > 39960);
+				v > RTC_TIMER_COUNT - (RTC_TIMER_COUNT / 100));
 
-    v = 39999 - v;
+    v = RTC_TIMER_COUNT - v;
     if (!t1op)				/* If in second half cycle.. */
-	v += 40000;
-    v /= 8;				/* Convert ticks to microseconds */
+	v += RTC_TIMER_CYCLES / 2;
     if (t1int)
-	v += 10000;			/* Int pending, + 10ms */
+	v += RTC_TIMER_CYCLES;
     rtc->msr = msr;
 
-    return v * 1000;
+    v += clk_total;
+
+    local_irq_restore(flags);
+
+    return v;
 }
 
 /*
-- 
2.18.1
