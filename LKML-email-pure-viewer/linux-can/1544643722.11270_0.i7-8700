Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:42:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B866D58079D;
	Tue, 11 Dec 2018 22:46:45 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 22:46:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AuPpzCxMtXQUHg39zXmYl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPnzpcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDIOg?=
 =?us-ascii?q?YYUBDO0PPedEoIfyqFQOtgO+CAu3CePz0z9FnGP60Lcm3+g8FwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7MKASXvq2zKnJyDXIcvBZ2Tfn54jOfRAqvPaBXatxccXLz0kvGBrFjlSW?=
 =?us-ascii?q?qYzqJT+U1+QNvHKd7+pvTu+vjWEmqxlrrjezwccsj5DEi4QIwV7H7SV02Jg5Kc?=
 =?us-ascii?q?G8RUJhfNKpHoVcuzuHO4Z1Xs8uWWBltSQixrACp5K3ZjUGxIo6yxLFavGKcJKE?=
 =?us-ascii?q?7g/9WOuVOTt4imxqdbGjixu39EWs1O7xWdOv31tPsyVIk8LDuWwI2hDN9seLVu?=
 =?us-ascii?q?dx80K71juP2A3c8edJKl0um6XBMZ4u2Lswm4ITsUvdGi/2n137jLGZdko64Oik?=
 =?us-ascii?q?8efnbav8pp+aKYB0jhvyMqM0msywGeg4Mw4OUHaH+emkyrHv4Un0TK9XgvA4jK?=
 =?us-ascii?q?XVqo3WKMcHqqKjAgJY0J4v6xOlADen1NQYk2MHLFVAeB+fi4jpOlfOIO33DPum?=
 =?us-ascii?q?gFSjji1rx/bYMb3lG5nNKXbCkLH/crZn8ENc1gUzws5F555OCbEOPujzWknvu9?=
 =?us-ascii?q?zcFBM5NBa0w+n/BNVnyoweQX6PArOeMK7KtV+I5+EvLPeWaI4apTbwMPwl5//o?=
 =?us-ascii?q?jX8kll4RZ6ip3Z0LaH+mGvRqOVmWYX3pgt0ZC2cFohI+TPD2iF2FSTNTZ2y9X6?=
 =?us-ascii?q?Mg5j4hD4KqF4fDRp23j7yH0ye2BZlWZmFAClCRHnbkbYSEW/EQaC2MJs9tiCAL?=
 =?us-ascii?q?Vb+kS4U5zxGhqBf6y6Z7LurT4iAYt5Xj28Zv6+3QkhEy8zp0D8OG3mGJTmF0mH?=
 =?us-ascii?q?4IRjAs0KB+p0x91kmM0axij/NEEtxT4utDUh0mOp7E0+x6F9fyVxrbcdeSSFam?=
 =?us-ascii?q?RdamDSsrTt0rwd8DeEJ9G9SkjhDe0CumGb4Vl7qXBJMq9qLQxWT+J8F4y3zezq?=
 =?us-ascii?q?kuk0EmQtdTNW2hnqN/9BLcB4jTn0Wdlqalb6Ic3CHW+WeHzGqOulxYUQFqXaXE?=
 =?us-ascii?q?W3AfelXZrdDj6kzeSL+uDKwtMhFdxs6aNqtKdtrpgE1bS/j5JtTRfXi9m2eqCh?=
 =?us-ascii?q?aO3bODcozqd2IZ3CXeDUgElxse/XKHNQg4GyegrHjSDD1oFVLzfUzs9fNyp2+8?=
 =?us-ascii?q?Tk8x1wuKdVFu16Kp+h4JgvyRU+4c0agauCg/sTl0HEyy39TNC9WeoQpsZ6FcYd?=
 =?us-ascii?q?I74Fda2mPVrQ19Ppq8L698gl4SaRh4v0Tr1x9vEIVPjdAqrG82zAp1Ma+YzFJB?=
 =?us-ascii?q?dzaf3ZDsOr3WKnP+/Ay1Z67RwFHe1NeW+qEA6Pkjr1XjvQepFlct8nl90tlV1W?=
 =?us-ascii?q?ec6YvODAYITZ3xVUM3/QBgp77Geik9+5/U1Xp0PKautj/Nxd0oC/Ulyxq6ZNhf?=
 =?us-ascii?q?Lb6LGxX0E80ZAMiuNvcnm1yobhICIeBT+7Q4P8Kgd/uaxqGrOPxsky6hjWRC+I?=
 =?us-ascii?q?p9yF6D9zJgSu7U2JYI2/GZ3hadWzjgllugs8D3lppCZTEdBWe/zSnkBIhMZqx9?=
 =?us-ascii?q?Z4oLCGGuI9GpydV6nZLiR3lY9Fu7DVMcxMCpYQaSb0D63QBIz0QXoGColjGizz?=
 =?us-ascii?q?NplDEltKyf0zLUw+TjbRYIJnRERG1/gljyO4i0iNYaUVOsbwgokhul+En7y7Ja?=
 =?us-ascii?q?pKR5M2ncX0NIczLqIGFlV6u6rqCCbNJX6JM0rSVXV/yxYFCbSrLnoxoWyTjjH3?=
 =?us-ascii?q?ZYxD0gczGqu5P5nwF1iW6HLXZzqmbZdt90xRvF+NPcQvtR1CIcRCZkkTnXGkS8?=
 =?us-ascii?q?P96x8NWWjZjDqOO+V2GmVpFJaink14CAtCi65W1sHxK/meu+mtnmEQg8zC/62M?=
 =?us-ascii?q?NmVSTOrBbgfIbr0762Pv5gfkltHFX88dZ1Gplikossg5EdwXgbiY+S/XYdk2fz?=
 =?us-ascii?q?MNNb1Ln6bHoMQz4L3tHU7BLk2E1lMnKG2Yb5Wm+BzctmYtmwenkW1T4l78BWFK?=
 =?us-ascii?q?eU66RJnShvrVq5tw7RYeV9kS0byfsh83Mah+AJuAwwziSSGLwSHE9YPTDymBSM?=
 =?us-ascii?q?9dyxsKJXZGO3e7iqyEV+hcyhDK2FogxEXXb5e5QiEjVq4sRxLl3My2Hz5Z/+eN?=
 =?us-ascii?q?bLc90TrBKUngzEj+hULpIxi/ULiTBmOWL7oX0q1eo7gQZy0pG9uYiNM39t876h?=
 =?us-ascii?q?Ah5EKj31YNse+i3qjaZbhMqX3pqgHpN8GjUQR5voTOmlEDYTtfThKgaPHycwqn?=
 =?us-ascii?q?adGbrDAwCf7F1qoG7IE5CuL3uXPmUWzc1+RBmBI0xSmBsbUy89np49CwCm3sjh?=
 =?us-ascii?q?cFpi6zAV5174rAZMy+1yOxn+VGffuBmnajMuRJeDKxpW6xlI513JPsyG8uJzAy?=
 =?us-ascii?q?ZY84WjrAOXL2yUeR9IAXsVWkCeBFDjI7qu5cTG8+eCHeqzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/Mb8mbpAql+i1qtM?=
 =?us-ascii?q?+/9u7nWBno5YuJBLtfKtFv+xGwgaeeOO+cnid5KTBE1pwSwX/E0qQQ3FkXiyt2?=
 =?us-ascii?q?bTmiDawAtTLRTKLXgqJXDwAUayJwNMtL7qIwxApNOdTcitP6yLF4lOM1C0xeWF?=
 =?us-ascii?q?zlm8GpY9EKIm6nOFPGAkaLKKqJJTnRz87rZqO8TKVajP9IuB2opTabD0jjMyyZ?=
 =?us-ascii?q?mDn0TB+vK/9DjSGBMBxauYGwaRJtCWnlTNL7ZRy3Kt53jTsqwbIqgnPGL3ITMT?=
 =?us-ascii?q?95c0lVtL2f8TtYguljG2xG9ndlMeiEmyOD4+bEMJoZrftrDTpyl+9B5HQ6yr1V?=
 =?us-ascii?q?7DxLRfBvmSvSqMJurE+ikuWV1jVnVx9OoC5RhI2XpUViJbnZ9p5YVHfE5h0N62?=
 =?us-ascii?q?CQCxUMp9R9C9zvu7pfyt7AlK/oLDdC8tTU/dYTBsTOKcKHNmYhPgTtGDLOEAQF?=
 =?us-ascii?q?SjurZinjgBkXlfKW3mWYqJcntoLrnpseDLNWHhRhE/AeIlxoGtMfPI1wWDI017?=
 =?us-ascii?q?KW2opAr36/qgTBAc5TuLjZWf+IR/biMjCUif9DfRRCief8LIIOJsjw0kpKdFZ3?=
 =?us-ascii?q?hsLJFlDWUNQLpTduOFwaukJIpVp5R24y3grXagqr7zdHDP+9mBEviw1xJ/Yt/T?=
 =?us-ascii?q?Hjy1EnPhzBoy5mwxp5osnsnT3EKG25F6y3R4wDTnOs70U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACZrRBch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTBQgVwECycKhzgDhE+LSIJrlz6BcxMBGBMBhzQiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYkAYJpAiQZAQE3AQUJAgEBTgMvJwQBDQUFgxyCA?=
 =?us-ascii?q?gECAQGabgKKB4FsM4J2AQEFhysIh3yEP4IWiQKFfYk6A4FwhFmQdwcCkUgjgVy?=
 =?us-ascii?q?IQocjAYkjj2oCBAIEBQINAQEFgUaCDjMaI4M8ghsJAxeDSopTcoEFAQEhiHGBH?=
 =?us-ascii?q?wGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAACZrRBch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTB?=
 =?us-ascii?q?QgVwECycKhzgDhE+LSIJrlz6BcxMBGBMBhzQiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYkAYJpAiQZAQE3AQUJAgEBTgMvJwQBDQUFgxyCAgECAQGabgKKB4F?=
 =?us-ascii?q?sM4J2AQEFhysIh3yEP4IWiQKFfYk6A4FwhFmQdwcCkUgjgVyIQocjAYkjj2oCB?=
 =?us-ascii?q?AIEBQINAQEFgUaCDjMaI4M8ghsJAxeDSopTcoEFAQEhiHGBHwGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="54831233"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 22:46:44 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726584AbeLLGqk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 01:46:40 -0500
Received: from mail-eopbgr00069.outbound.protection.outlook.com ([40.107.0.69]:4544
        "EHLO EUR02-AM5-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726251AbeLLGqk (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 01:46:40 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=QzzR4ccIZcJW5D2BfN0VXG1UiyWdqossgn0sP+bqAbI=;
 b=C+qG9foiYE+39hX8ezaiB4OHoDotOi/UbR4tOvKi2cAkA5Qy/EZoEJ+qxP9UwHoFOWmn/EV0HmHS56QHibWQC4mjZcVtdl9pwKnAVVUNMRnrQDrffBr4ME7Cg0YSlfTzkUvKj5sqs0RAhb6fm73ZFodjDBjnUNiz/wmN659t1l0=
Received: from DB7PR04MB4618.eurprd04.prod.outlook.com (52.135.138.152) by
 DB7PR04MB5420.eurprd04.prod.outlook.com (20.178.104.205) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Wed, 12 Dec 2018 06:46:35 +0000
Received: from DB7PR04MB4618.eurprd04.prod.outlook.com
 ([fe80::28ab:d6bc:2c00:a54b]) by DB7PR04MB4618.eurprd04.prod.outlook.com
 ([fe80::28ab:d6bc:2c00:a54b%5]) with mapi id 15.20.1404.026; Wed, 12 Dec 2018
 06:46:35 +0000
From: Joakim Zhang <qiangqing.zhang@nxp.com>
To: "mkl@pengutronix.de" <mkl@pengutronix.de>,
        "linux-can@vger.kernel.org" <linux-can@vger.kernel.org>
CC: "wg@grandegger.com" <wg@grandegger.com>,
        "netdev@vger.kernel.org" <netdev@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        dl-linux-imx <linux-imx@nxp.com>,
        Joakim Zhang <qiangqing.zhang@nxp.com>
Subject: [PATCH] can: flexcan: add TX support for variable payload size
Thread-Topic: [PATCH] can: flexcan: add TX support for variable payload size
Thread-Index: AQHUkeZs7DN/5MKD9Eu238RlkbDYTA==
Date: Wed, 12 Dec 2018 06:46:34 +0000
Message-ID: <20181212064419.18613-1-qiangqing.zhang@nxp.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.17.1
x-clientproxiedby: SG2PR02CA0060.apcprd02.prod.outlook.com
 (2603:1096:4:54::24) To DB7PR04MB4618.eurprd04.prod.outlook.com
 (2603:10a6:5:36::24)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=qiangqing.zhang@nxp.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [92.121.68.129]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DB7PR04MB5420;6:9RpW9U5ORT+2JP224xvggRM2cTbxsizRdGLCPslQ7UJ4HaiSQ2f1NMJOu3nvXVFLwYuEsppuNuwkx0B0CswR+Y+qEIS9d5rf4RQW7sa/x+tgFP5Z9A8wFuFnaG5kRj4nWMPtjIHeEF2+rG3V70tTYxojgxQR3rjT02WeaX123nYrO1wpFOyXIElh3YBE6lVkPQ62IRUeTiRyac1PrSvPwLdFBlk7WWTPZB6Y33lHR4dOiBPJ7BlOPITblDCVaxarAI4/o9H5OakA0uekJZXiGMP8sKZEa48fY7d1PHWW991wWxE+bgzHEpCQJVgPEcpYoCjp6AdczDyWNHQ2/lUbcjIn8aW+AEOOeU+akYhJ8pWENP9b5DwSyKh7ri3fYlt5+6R96KkAVNWMURkixY+NM3/xLd6jZKC/OOxv8FqTRDkHkkEsXQF0Ex9wRxPNrIYQCkg42+/slnYXCtxcRqooDA==;5:rSDgllWfSVPNG8HuB/pN/PVapyOBf8+2iPxMELTCgQSXq11E8ZzMB0dWq6j3S+QRtuGhMplAFH6EqEWDlfJMqwAUfWqRl6OLybiHO3+LDLjTvPIwvppah6357KaGDaVVr1OsF6U4G8iuRxDiLFa4MUnS9Jo4krzgA44ZgKvEgUo=;7:3uauC9HzCCBJrvUii4c0oWHoBTSHm8hfhRhXhp1F4Ai7WxyrJhYirbB+c8gBKILQJ+JPYBd9bv+xkwB2blZPsQoet40Eq6DguGhjGKqY5ltMFxV4TnLxzvfoOhgFtCNP2AHnZr0DAN+TDDYphMkRpw==
x-ms-office365-filtering-correlation-id: 324a28ec-88d2-4c90-9664-08d65ffd8dc1
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:DB7PR04MB5420;
x-ms-traffictypediagnostic: DB7PR04MB5420:
x-microsoft-antispam-prvs: <DB7PR04MB54202B61C4C6649B9C3507D7E6A70@DB7PR04MB5420.eurprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230017)(999002)(6040522)(2401047)(5005006)(8121501046)(3002001)(3231472)(944501520)(52105112)(93006095)(93001095)(10201501046)(6055026)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(20161123564045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(201708071742011)(7699051)(76991095);SRVR:DB7PR04MB5420;BCL:0;PCL:0;RULEID:;SRVR:DB7PR04MB5420;
x-forefront-prvs: 0884AAA693
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(396003)(39860400002)(376002)(366004)(346002)(136003)(199004)(189003)(106356001)(97736004)(316002)(105586002)(110136005)(4326008)(53936002)(54906003)(2501003)(6512007)(99286004)(5660300001)(478600001)(14454004)(476003)(486006)(2616005)(7736002)(81156014)(8676002)(8936002)(81166006)(50226002)(305945005)(256004)(6486002)(6436002)(36756003)(1076002)(25786009)(3846002)(66066001)(6116002)(186003)(2906002)(52116002)(6506007)(86362001)(102836004)(26005)(386003)(68736007)(71200400001)(71190400001);DIR:OUT;SFP:1101;SCL:1;SRVR:DB7PR04MB5420;H:DB7PR04MB4618.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: wbkLX/Fv+QFwMeElDvLVQkYIwKHAmbKu5PoaPd476z5HX87iv9lOVxgTEdBcdb64GdwxKog2ls4HHWjbkT4UU/jEPK1+JXbWkQDv7VwBmCo4g9/ZNN05mWh5Oc4A5nPiYbjVnG4Wsu/G4GayIoalADzy2UjRuIXcsi7bW9gppNea+JyDqndqhyHwcdfR2gwIwYVWv1Zd+u3+0D0ffzxAvn/ME6rKSmGrzZhIfwn4LkUon/toT6k++SNx29ft4sghziqlVTu5LXR2oCmZ7ObRJE40CrJpMZSLJrWQ4KLbrJ4l0g+zRY3u3qsowk7iFePa
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 324a28ec-88d2-4c90-9664-08d65ffd8dc1
X-MS-Exchange-CrossTenant-originalarrivaltime: 12 Dec 2018 06:46:35.4340
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DB7PR04MB5420
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Now the FlexCAN driver always use last mailbox for TX, it will work well
when MB payload size is 8/16 bytes.
TX mailbox would change to 13 when MB payload size is 64 bytes to
support CANFD. So we may need to set iflag register to add support for
variable payload size.

Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
---
 drivers/net/can/flexcan.c | 42 +++++++++++++++++++++++++++++----------
 1 file changed, 32 insertions(+), 10 deletions(-)

diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
index 0f36eafe3ac1..13fd085fcf84 100644
--- a/drivers/net/can/flexcan.c
+++ b/drivers/net/can/flexcan.c
@@ -141,7 +141,9 @@
 #define FLEXCAN_TX_MB_RESERVED_OFF_FIFO		8
 #define FLEXCAN_TX_MB_RESERVED_OFF_TIMESTAMP	0
 #define FLEXCAN_RX_MB_OFF_TIMESTAMP_FIRST	(FLEXCAN_TX_MB_RESERVED_OFF_TIME=
STAMP + 1)
-#define FLEXCAN_IFLAG_MB(x)		BIT((x) & 0x1f)
+#define FLEXCAN_IFLAG1_MB_NUM		32
+#define FLEXCAN_IFLAG1_MB(x)		BIT(x)
+#define FLEXCAN_IFLAG2_MB(x)		BIT((x) & 0x1f)
 #define FLEXCAN_IFLAG_RX_FIFO_OVERFLOW	BIT(7)
 #define FLEXCAN_IFLAG_RX_FIFO_WARN	BIT(6)
 #define FLEXCAN_IFLAG_RX_FIFO_AVAILABLE	BIT(5)
@@ -822,9 +824,15 @@ static inline u64 flexcan_read_reg_iflag_rx(struct fle=
xcan_priv *priv)
 	struct flexcan_regs __iomem *regs =3D priv->regs;
 	u32 iflag1, iflag2;
=20
-	iflag2 =3D priv->read(&regs->iflag2) & priv->reg_imask2_default &
-		~FLEXCAN_IFLAG_MB(priv->tx_mb_idx);
-	iflag1 =3D priv->read(&regs->iflag1) & priv->reg_imask1_default;
+	if (priv->tx_mb_idx >=3D FLEXCAN_IFLAG1_MB_NUM) {
+		iflag2 =3D priv->read(&regs->iflag2) & priv->reg_imask2_default &
+			~FLEXCAN_IFLAG2_MB(priv->tx_mb_idx);
+		iflag1 =3D priv->read(&regs->iflag1) & priv->reg_imask1_default;
+	} else {
+		iflag2 =3D priv->read(&regs->iflag2) & priv->reg_imask2_default;
+		iflag1 =3D priv->read(&regs->iflag1) & priv->reg_imask1_default &
+			~FLEXCAN_IFLAG1_MB(priv->tx_mb_idx);
+	}
=20
 	return (u64)iflag2 << 32 | iflag1;
 }
@@ -836,7 +844,8 @@ static irqreturn_t flexcan_irq(int irq, void *dev_id)
 	struct flexcan_priv *priv =3D netdev_priv(dev);
 	struct flexcan_regs __iomem *regs =3D priv->regs;
 	irqreturn_t handled =3D IRQ_NONE;
-	u32 reg_iflag2, reg_esr;
+	u32 reg_tx_iflag, tx_iflag_idx, reg_esr;
+	void __iomem *reg_iflag;
 	enum can_state last_state =3D priv->can.state;
=20
 	/* reception interrupt */
@@ -870,10 +879,18 @@ static irqreturn_t flexcan_irq(int irq, void *dev_id)
 		}
 	}
=20
-	reg_iflag2 =3D priv->read(&regs->iflag2);
+	if (priv->tx_mb_idx >=3D FLEXCAN_IFLAG1_MB_NUM) {
+		reg_tx_iflag =3D priv->read(&regs->iflag2);
+		tx_iflag_idx =3D FLEXCAN_IFLAG2_MB(priv->tx_mb_idx);
+		reg_iflag =3D &regs->iflag2;
+	} else {
+		reg_tx_iflag =3D priv->read(&regs->iflag1);
+		tx_iflag_idx =3D FLEXCAN_IFLAG1_MB(priv->tx_mb_idx);
+		reg_iflag =3D &regs->iflag1;
+	}
=20
 	/* transmission complete interrupt */
-	if (reg_iflag2 & FLEXCAN_IFLAG_MB(priv->tx_mb_idx)) {
+	if (reg_tx_iflag & tx_iflag_idx) {
 		u32 reg_ctrl =3D priv->read(&priv->tx_mb->can_ctrl);
=20
 		handled =3D IRQ_HANDLED;
@@ -885,7 +902,7 @@ static irqreturn_t flexcan_irq(int irq, void *dev_id)
 		/* after sending a RTR frame MB is in RX mode */
 		priv->write(FLEXCAN_MB_CODE_TX_INACTIVE,
 			    &priv->tx_mb->can_ctrl);
-		priv->write(FLEXCAN_IFLAG_MB(priv->tx_mb_idx), &regs->iflag2);
+		priv->write(tx_iflag_idx, reg_iflag);
 		netif_wake_queue(dev);
 	}
=20
@@ -1244,8 +1261,13 @@ static int flexcan_open(struct net_device *dev)
 	priv->tx_mb_idx =3D priv->mb_count - 1;
 	priv->tx_mb =3D flexcan_get_mb(priv, priv->tx_mb_idx);
=20
-	priv->reg_imask1_default =3D 0;
-	priv->reg_imask2_default =3D FLEXCAN_IFLAG_MB(priv->tx_mb_idx);
+	if (priv->tx_mb_idx >=3D FLEXCAN_IFLAG1_MB_NUM) {
+		priv->reg_imask1_default =3D 0;
+		priv->reg_imask2_default =3D FLEXCAN_IFLAG2_MB(priv->tx_mb_idx);
+	} else {
+		priv->reg_imask1_default =3D FLEXCAN_IFLAG1_MB(priv->tx_mb_idx);
+		priv->reg_imask2_default =3D 0;
+	}
=20
 	priv->offload.mailbox_read =3D flexcan_mailbox_read;
=20
--=20
2.17.1

