Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:34:42 -0000
Received: from icoremail.net (unknown [209.85.210.178])
	by mail-app2 (Coremail) with SMTP id by_KCgD3__sLAfNbtgi7AQ--.55782S3;
	Tue, 20 Nov 2018 02:29:32 +0800 (CST)
Received: from mail-pf1-f178.google.com (unknown [209.85.210.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH7kkJAfNb5LFZAA--.3135S3;
	Tue, 20 Nov 2018 02:29:29 +0800 (CST)
Received: by mail-pf1-f178.google.com with SMTP id w73so5925027pfk.10
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 10:29:29 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=bOob0epm6z41bmuNDKM3DGgWgU35X4Eqd37XHzurihc=;
        b=doaUc54D7V1Qc3m4TXA8CAXqVQQxcLT2e5S/OZ03OixlR7FEefHGjvDtZ/Ri5CPLHv
         vdY7bdGJtBqX/8YmEIE0Z8eKLunKbytDeYXftDuxpAFLAdbXafaZFCMP+02GT5nIeFKG
         yzRTTrr0X4puncAkOpyOgmL4vglCa1v+/vJV/ymIXzH4wDJ0MTKSevur+AiHnGsJAr/u
         N+kug2TsR65gzIQDN4cubShc4U17Xtb4F9Y8LRdsTlsQidosr3MN4rputMtXIh5gB59j
         L+HSBDqyc7XYnE5MHkyUUDn54XVyZHUoWfjMIHhsvS6Mgl51pjwOR8vAGQKJUAFZdHpC
         ZExQ==
X-Gm-Message-State: AGRZ1gLFsGIuwA8EYgpzyfPifBxveWRBQVjSgbsRuMxo/tFjieQB4E/y
	8Bm8StBHc2F9wE952C0HLD5/3ILJsGr5ZaEHhvmkDODOFOORTNc=
X-Received: by 2002:a63:1e17:: with SMTP id e23mr20852286pge.130.1542652169500;
        Mon, 19 Nov 2018 10:29:29 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3019665pju;
        Mon, 19 Nov 2018 10:29:28 -0800 (PST)
X-Google-Smtp-Source: AJdET5fBaN9RlCTlcMS+PTzesCLnJw+AYgkTTwVZjOM3g6sokse6MO7uS+HP96rgcNRypZwNG0R3
X-Received: by 2002:a17:902:128c:: with SMTP id g12-v6mr22722103pla.143.1542652168385;
        Mon, 19 Nov 2018 10:29:28 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542652168; cv=none;
        d=google.com; s=arc-20160816;
        b=n6ktchT3/pBmDAxYhbCozDK0Ro2WI3LMRQPkY5pfhBdqKDp18ntLaNvqInL25Dx8On
         uVucTW27WGtAmqcTzop9cQOO2dthhA+xI4LlGtAd4gVjkiy8tFfqBQZacy3cmjkL9u1V
         WobTC0iZusit9d1+qJ8o9q86KIHaF4O2wRng36PVcMaphPtHQSpiGhJu4Rey7C+LNot6
         TLNQjsqJ6Jr6DJvUsew5Xf7kS8VWWXn0v7+K+6lfvB72/DsnrHUgfZg2pWeFeavEA6rB
         iGslh8leWpnKBml/cL54lhRPgVWMym8SfsyO9dcqUE5ZfMvqaPYr6EMjpWJh9sQzNXQQ
         TznQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=bOob0epm6z41bmuNDKM3DGgWgU35X4Eqd37XHzurihc=;
        b=HrutHtiFG8e83BKgdTD+sXDBZQQ+g8xv1Vuea7hzqKy0M/lt3IqOezQVo5gHu1G2zP
         MVspXhA2rAAnBMug9k5FkbzFKxPnLeKY98k2+R4bATed/94zIiTrvexN4l/6UZVcGKzW
         ZKgirHrtOnrrV4bccKPw6k71UUVgzgGaBMiwQ+Zn5CX8Steg498NOhHP8LLibcZEgNTo
         15Kcex4I0U1PdFdPuTeji4cEUJWfCxBpbYgSh99oeh15axnr9RlKCml97EjUscW6Z/vM
         NkeLkSKhLhHm5XKCdnvPY5mD2AJ6/Hj8FLrIci46SOG3aDV4iz89eJvDtjQx5nihG1ev
         PSMA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@linaro.org header.s=google header.b=QVu7EZSz;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=linaro.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m3si40117007pgs.8.2018.11.19.10.29.04;
        Mon, 19 Nov 2018 10:29:28 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730420AbeKTEwr (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 23:52:47 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:34497 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730346AbeKTEwq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 23:52:46 -0500
Received: by mail-pf1-f196.google.com with SMTP id h3so8706612pfg.1
        for <linux-kernel@vger.kernel.org>; Mon, 19 Nov 2018 10:28:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=bOob0epm6z41bmuNDKM3DGgWgU35X4Eqd37XHzurihc=;
        b=QVu7EZSzvprnZ7jcuYrgKc8+div6LMpdATcOv0i1QNifK32HjDcwoZtrvCTgCdJT80
         0+DPUH6IUVRHpa9LLAxAhLLgvWyR62xbSYF/3dZKtsLUQcXAMlJ1PWX/ShK4wUSbFNAV
         gOWQGyZjemiaMLYa2EIwqwrVD0y6Iq8HUsycY=
X-Received: by 2002:a63:5153:: with SMTP id r19mr20972196pgl.281.1542652083298;
        Mon, 19 Nov 2018 10:28:03 -0800 (PST)
Received: from xps15 (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id w3sm42944675pge.8.2018.11.19.10.28.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 19 Nov 2018 10:28:02 -0800 (PST)
Date: Mon, 19 Nov 2018 11:27:59 -0700
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: Leo Yan <leo.yan@linaro.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Mike Leach <mike.leach@linaro.org>,
        Robert Walker <robert.walker@arm.com>,
        Al Grant <Al.Grant@arm.com>,
        Coresight ML <coresight@lists.linaro.org>
Subject: Re: [PATCH v1 3/5] perf cs-etm: Support for NO_SYNC packet
Message-ID: <20181119182759.GA608@xps15>
References: <1541912383-19915-1-git-send-email-leo.yan@linaro.org>
 <1541912383-19915-4-git-send-email-leo.yan@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1541912383-19915-4-git-send-email-leo.yan@linaro.org>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH7kkJAfNb5LFZAA--.3135S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Ar1rWFWUuFWDAr1DXF1DWrg_yoWxGw15pw
	45uFZxJ3W7tFySyw1rAF4kurya9rWSvFWIq34jqw4YyaySqr4agF18tws0k3WxCF1qg3yf
	Jr4qqrn3ZryYkF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPjb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAIcVC2
	z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIevJa73UjIFyTuYvjxUQNVkUUUU
	U

On Sun, Nov 11, 2018 at 12:59:41PM +0800, Leo Yan wrote:
> As described in OpenCSD (CoreSight decoder lib), in the decoding stream
> it includes one trace element with type OCSD_GEN_TRC_ELEM_NO_SYNC; the
> element indicates 'either at start of decode, or after overflow / bad
> packet', we should take it as a signal for the tracing off and this will
> cause tracing discontinuity.  From the trace dump with 'perf script',
> sometimes the element OCSD_GEN_TRC_ELEM_NO_SYNC collaborates with
> element OCSD_GEN_TRC_ELEM_TRACE_ON to show the tracing flow have been
> turned off and on, in this case the cs-etm code has handled TRACE_ON
> packet well so we observe the tracing discontinuity; but in another case
> it only inserts the element OCSD_GEN_TRC_ELEM_NO_SYNC into instructions
> packets, we miss to handle the case if has only standalone NO_SYNC
> element and users cannot receive the info for tracing discontinuity.
> 
> This patch introduces new type CS_ETM_TRACE_OFF to generate packet for
> receiving element OCSD_GEN_TRC_ELEM_NO_SYNC from decoder; when generate
> sample, CS_ETM_TRACE_OFF packet has almost the same behaviour with

Here you have used the word "almost", leading me to beleive there are cases
where the handling of TRACE_ON and NO_SYNC packets differ, but the
implementation enacts the same behavior for both.

Mike or Robert, can you confirm that TRACE_ON and NO_SYNC packets should be
treated the same way?

Leo, if handling of the TRACE_ON and NO_SYNC packets is the same then we should
treat them the same way in cs_etm_decoder__gen_trace_elem_printer(), i.e simply
call cs_etm_decoder__buffer_trace_on().  That way packet handling in cs-etm.c
doesn't change.  Otherwise see my comments below.

> CS_ETM_TRACE_ON packet: both of them invokes cs_etm__flush() to generate
> samples for the previous instructions packet, and in cs_etm__sample() it
> also needs to generate samples if TRACE_OFF packet is followed by one
> sequential instructions packet.  This patch also converts the address to
> 0 for TRACE_OFF packet, this is same with TRACE_ON packet as well.
> 
> Signed-off-by: Leo Yan <leo.yan@linaro.org>
> ---
>  tools/perf/util/cs-etm-decoder/cs-etm-decoder.c | 10 ++++++++++
>  tools/perf/util/cs-etm-decoder/cs-etm-decoder.h |  7 ++++---
>  tools/perf/util/cs-etm.c                        | 15 +++++++++++----
>  3 files changed, 25 insertions(+), 7 deletions(-)
> 
> diff --git a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c
> index 5efb616..9d52727 100644
> --- a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c
> +++ b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c
> @@ -369,6 +369,14 @@ cs_etm_decoder__buffer_range(struct cs_etm_decoder *decoder,
>  }
>  
>  static ocsd_datapath_resp_t
> +cs_etm_decoder__buffer_trace_off(struct cs_etm_decoder *decoder,
> +				 const uint8_t trace_chan_id)
> +{
> +	return cs_etm_decoder__buffer_packet(decoder, trace_chan_id,
> +					     CS_ETM_TRACE_OFF);
> +}
> +
> +static ocsd_datapath_resp_t
>  cs_etm_decoder__buffer_trace_on(struct cs_etm_decoder *decoder,
>  				const uint8_t trace_chan_id)
>  {
> @@ -389,6 +397,8 @@ static ocsd_datapath_resp_t cs_etm_decoder__gen_trace_elem_printer(
>  	case OCSD_GEN_TRC_ELEM_UNKNOWN:
>  		break;
>  	case OCSD_GEN_TRC_ELEM_NO_SYNC:
> +		resp = cs_etm_decoder__buffer_trace_off(decoder,
> +							trace_chan_id);

If we want to handle NO_SYNC element types, why introduce a "trace_off"
function?  Wouldn't it make more sense to call it
cs_etm_decoder__buffer_no_sync() ?

>  		decoder->trace_on = false;
>  		break;
>  	case OCSD_GEN_TRC_ELEM_TRACE_ON:
> diff --git a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
> index 9351bd1..a38c97c 100644
> --- a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
> +++ b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
> @@ -23,9 +23,10 @@ struct cs_etm_buffer {
>  };
>  
>  enum cs_etm_sample_type {
> -	CS_ETM_EMPTY = 0,
> -	CS_ETM_RANGE = 1 << 0,
> -	CS_ETM_TRACE_ON = 1 << 1,
> +	CS_ETM_EMPTY		= 0,
> +	CS_ETM_RANGE		= 1 << 0,
> +	CS_ETM_TRACE_ON		= 1 << 1,
> +	CS_ETM_TRACE_OFF	= 1 << 2,

CS_ETM_NO_SYNC, see above comment.  And please don't use indentation.


>  };
>  
>  enum cs_etm_isa {
> diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
> index f4fa877..2a0cef9 100644
> --- a/tools/perf/util/cs-etm.c
> +++ b/tools/perf/util/cs-etm.c
> @@ -517,8 +517,9 @@ static inline int cs_etm__t32_instr_size(struct cs_etm_queue *etmq,
>  
>  static inline u64 cs_etm__first_executed_instr(struct cs_etm_packet *packet)
>  {
> -	/* Returns 0 for the CS_ETM_TRACE_ON packet */
> -	if (packet->sample_type == CS_ETM_TRACE_ON)
> +	/* Returns 0 for TRACE_ON and TRACE_OFF packets */
> +	if (packet->sample_type == CS_ETM_TRACE_ON ||
> +	    packet->sample_type == CS_ETM_TRACE_OFF)
>  		return 0;
>  
>  	return packet->start_addr;
> @@ -527,8 +528,9 @@ static inline u64 cs_etm__first_executed_instr(struct cs_etm_packet *packet)
>  static inline
>  u64 cs_etm__last_executed_instr(const struct cs_etm_packet *packet)
>  {
> -	/* Returns 0 for the CS_ETM_TRACE_ON packet */
> -	if (packet->sample_type == CS_ETM_TRACE_ON)
> +	/* Returns 0 for TRACE_ON and TRACE_OFF packets */
> +	if (packet->sample_type == CS_ETM_TRACE_ON ||
> +	    packet->sample_type == CS_ETM_TRACE_OFF)
>  		return 0;
>  
>  	return packet->end_addr - packet->last_instr_size;
> @@ -930,6 +932,10 @@ static int cs_etm__sample(struct cs_etm_queue *etmq)
>  		if (etmq->prev_packet->sample_type == CS_ETM_TRACE_ON)
>  			generate_sample = true;
>  
> +		/* Generate sample for tracing off packet */
> +		if (etmq->prev_packet->sample_type == CS_ETM_TRACE_OFF)
> +			generate_sample = true;
> +
>  		/* Generate sample for branch taken packet */
>  		if (etmq->prev_packet->sample_type == CS_ETM_RANGE &&
>  		    etmq->prev_packet->last_instr_taken_branch)
> @@ -1085,6 +1091,7 @@ static int cs_etm__run_decoder(struct cs_etm_queue *etmq)
>  					cs_etm__sample(etmq);
>  					break;
>  				case CS_ETM_TRACE_ON:
> +				case CS_ETM_TRACE_OFF:
>  					/*
>  					 * Discontinuity in trace, flush
>  					 * previous branch stack
> -- 
> 2.7.4
> 
