Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 10:36:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6A0EC58037D;
	Thu, 22 Nov 2018 17:27:26 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 17:27:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A33MYqRZqP6qzKNW2k5ePfub/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizZh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM37X/ZisJwgqxYrhyuqRNwzIzIb4+aNfp+ZbvdcNEBSGpdXMtcTTBNDp+y?=
 =?us-ascii?q?YoYPCecKIOZWr5P6p1sLtRaxBxSsC/3txDBSh3/5xqw60+IuEQrb2wEhH88Ov2?=
 =?us-ascii?q?rUrNrvNacdSuG1zK/HzTjYb/NWxC3y6YbWfRAgu/2DQbVwcc/IxEQpCgjLgFKQ?=
 =?us-ascii?q?qYn/MDOU0OQAq2eb7+t8VeKvlm4osBt9rSSoxscpkoXFmp8ZxkrD9SVjz4Y4I8?=
 =?us-ascii?q?CzRk1jYdO8DpdcqyWXO5FrTs4sXW1kojs2x74atZKhfSUHyowrywPDZ/CdboSF?=
 =?us-ascii?q?4BDuWPyfLDtlnn5ofLOyiw69/EWg0OHwSMa53VJQoiZbj9XAqGoB2hLN5sWBV/?=
 =?us-ascii?q?Bz5F2u2SyV2ADW8uxEIV47la7cK5M53L4wmYQcsV7ZEi/1hkr2lqmWeVsg+uSy?=
 =?us-ascii?q?7OTneLrmqoedN49ylA7+LrwjltKjDek8KAQCQmaW9fqm2LH+/kD1XK9Gg/w0n6?=
 =?us-ascii?q?XBtZDVP8Ubpqq3Aw9P1YYj7g6yDzOn0NQegHkGI0tJeBGZgIjzPVHBPvT4Ae64?=
 =?us-ascii?q?g1Wiljdk2erGM6b/ApXCMHfDiq3tfbVj5E5Gzgo809Rf64hTCrEbL/L/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNF81oMdR22DGKCYML7JvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2IMdaGqkEfR+P0WZfX3sj88BEWgQvwo+UPbliFqYXT5Tena9Ra?=
 =?us-ascii?q?Q85j4gBYKiDIfDQJ2tgbOb0Ce6GJ1Wen5JClSWHXj0cIWEXu8GaDiOLc95jjwE?=
 =?us-ascii?q?Sb+hRpcj1RGpqgD20blnLu3S+i0espLuz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5GSBw6NZ7bz+x5EdzyQBjOftWSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7F1K?=
 =?us-ascii?q?Y7iVkqWM9PNWy8ia55+AjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbkoLxFOydCcJadQat3ml1NGROz9N9TYZG6xn2SwBR?=
 =?us-ascii?q?OMxr6XaIrqemMd3DjSCUQekgAT+2qGOhY6Biu7v23eCzluH0r1Y0zw6el+tG+7?=
 =?us-ascii?q?Tkgswg6XdUJhyaS69gQVhfOGTfMTxawLuCE6pjVwHVa92c/WCtWaqwpgeqVcfc?=
 =?us-ascii?q?0y4FNd2W3FsAx9O4SqL7p+iV4GbwR3o0Tu2g1rCoVBlMgqq28qzApyKK6CzFNN?=
 =?us-ascii?q?bTSY3Yr0Or3WLGny8wuia6rX2lHYzdaX9b0D6PU+q1X/og6pElAu/Glg09lQy3?=
 =?us-ascii?q?Gc/InFDBIOUZLtVUY67wJ1p7XEbSgy+YzV1WdgPrKpsjDfwd0pAuglyhG+f9pE?=
 =?us-ascii?q?NKOEFQnyE9AVBsS0KewqnUSpYQwAPOxI6KE0OMamfeOc2KG3JOZggC6mjWNf7Y?=
 =?us-ascii?q?F9z0KA7TZzRvTJ3pYF2f6Y2ASHWiz4jFegtMD3hI9FaSsTHmq51SjrGopRardu?=
 =?us-ascii?q?coYMDGekO9e3yclmh57xR35Y80auB0kH2MC1YxWSdUHy3QpK2UQRv3Ongyq4wy?=
 =?us-ascii?q?VonD4zqqqQwTLBw/7ldBoBIWNLQGhijVHxIYm7ldwaXU6obxQ3mxuh/0r1269b?=
 =?us-ascii?q?pKFnJWnJXUhIZzT2L31lUqaotruCYtRD6ZMyvSVMTeS8Z0uXSrr8oxscziPiEH?=
 =?us-ascii?q?FSxDE9dzG2pJr5mwZ2h36aLHZ2tHDZY91/xQ/D5NzAQv5cxjgGSzNiiTnUBVi8?=
 =?us-ascii?q?OMOl/c6OmJfAseC+VmShWYNVcSTwyYOAtS275XBlABGlnvCznMHnHhY+0SPhy9?=
 =?us-ascii?q?ZqUiDIpg7mYob3z6S6Lf5nfk5wCV788cV6HZtykokxhJEWwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiYWMZwCM949pKCK?=
 =?us-ascii?q?eJ9rNEmyR1r0G8rQLQZ/h9gzgcxeEv6H4cn+EGpg4twj+BDbAVGElSJTbsmAiQ?=
 =?us-ascii?q?79CisKVXY36icb2x1Ep9h9+tFr+DrR9HWHblZJgiBzR/4dtlMFLDy3Dz7oDkeN?=
 =?us-ascii?q?/NbdMcrBGUkhHAj/RLJ5I1jPYFmS1nOWflt30/1+E7lQBu3Y29vIWfN2Vt+6e5?=
 =?us-ascii?q?DgRZNzLvYcMT5yrtjb1fnsuN24CvH5NhGigEXZfyTPKoFi4SuurjNwqUDDI8rX?=
 =?us-ascii?q?KbE6LFHQCD8Edms27PE5ezOn6MPnYZytFiRASHKExbnQAZRzE6np8/FgC3y83t?=
 =?us-ascii?q?akZ55jYN5lHmrhtA0P5nNx76Um3Hvgendi80SISDLBpR9gxC5V3aMcmA4eJoBS?=
 =?us-ascii?q?1Y4oetrA+QKmyYegRIC3sGWlefClDnP7mu48TA8ueCCuq/KfvOfauBqehEW/iU?=
 =?us-ascii?q?wpKv15Ns/yyQOcWXInliE/o711JDXHB+BsTZgigPRDYRly7XdM6boxG8+iJso8?=
 =?us-ascii?q?C78fTrXh/v5ISVB7tTN9Vv5w65gaOZO+GMgyZ5LC5S1okQyn/Q1LgfwFkShjlu?=
 =?us-ascii?q?dzazELQAti3NTKPKlq9UFR4bbCxzO9VS76IhxQlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBflvhUuAaquTmFE07vJDCD?=
 =?us-ascii?q?lzjyWhCrMOFMijybPRNEtIG8dBZtFXbsTNb8ZhKnN993iCU8wacoiXPSKW4cLT?=
 =?us-ascii?q?98fltRrr2R6CNUmOlwF3Zd4XplM+aEnT2U7+3ZKpYQrPtqDT54l+Nc4HQm1bRV?=
 =?us-ascii?q?6DtIS+BymCvXttRuuU2pkvGTyjp7VxpDsjZKi5iNvUVnOKXZ8IFPWHfE/B0X62?=
 =?us-ascii?q?WQBA8Hp99kCt3ppqBRxcLDlKP1KDde7d3U+dEQCNTTKMKCYzIdNk/qEiPVCAdN?=
 =?us-ascii?q?UTOwKSnFgEZajLnG8n6Nhpk8tpXo3pEJT+kIekYyE6YrF0lFFd0IIZF4Fmc1jL?=
 =?us-ascii?q?Obhc8C5HyxhBnMTdpXv9bMUffEUqanEyqQkbQRP0hA+rj/N4lGboA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ApAAAIV/dbh0O0hNFiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaQN/MYwHjWclFJIwhHeBcywPBAGIUiI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiKCZQECAwECJDkZBgkBAQoYLgMlLwYNAQcBAQGDHAGCAQUKqFczh?=
 =?us-ascii?q?C0BgRKEVAWMCReBP0CBEScMgl+DGwIDhzkCiRmBeIQIEDMzT48kCYMIg3SGGIQ?=
 =?us-ascii?q?VBhiJYYcnLI0XhAyIJ4INcFCCbYImF4NKhRSFSzIBAYE1AQEBDosogR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ApAAAIV/dbh0O0hNFiHQEBBQEHBQGBUQgBCwGCaQN/MYw?=
 =?us-ascii?q?HjWclFJIwhHeBcywPBAGIUiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZ?=
 =?us-ascii?q?QECAwECJDkZBgkBAQoYLgMlLwYNAQcBAQGDHAGCAQUKqFczhC0BgRKEVAWMCRe?=
 =?us-ascii?q?BP0CBEScMgl+DGwIDhzkCiRmBeIQIEDMzT48kCYMIg3SGGIQVBhiJYYcnLI0Xh?=
 =?us-ascii?q?AyIJ4INcFCCbYImF4NKhRSFSzIBAYE1AQEBDosogR8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,267,1539673200"; 
   d="scan'208";a="54008449"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 17:27:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2439277AbeKWMGY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 07:06:24 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:39687 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1733058AbeKWMGY (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 07:06:24 -0500
Received: from DGGEMS412-HUB.china.huawei.com (unknown [172.30.72.59])
        by Forcepoint Email with ESMTP id 73B9F9B2BDCEA;
        Fri, 23 Nov 2018 09:24:16 +0800 (CST)
Received: from [127.0.0.1] (10.177.31.96) by DGGEMS412-HUB.china.huawei.com
 (10.3.19.212) with Microsoft SMTP Server id 14.3.408.0; Fri, 23 Nov 2018
 09:24:13 +0800
Subject: Re: [PATCH net-next] ptp: Fix pass zero to ERR_PTR() in
 ptp_clock_register
To: kbuild test robot <lkp@intel.com>
References: <20181122133202.21908-1-yuehaibing@huawei.com>
 <201811230114.mywyGh81%fengguang.wu@intel.com>
CC: <kbuild-all@01.org>, <davem@davemloft.net>,
        <richardcochran@gmail.com>, <dmitry.torokhov@gmail.com>,
        <linux-kernel@vger.kernel.org>, <netdev@vger.kernel.org>
From: YueHaibing <yuehaibing@huawei.com>
Message-ID: <bee2cccf-47e8-e26b-3504-c54114ec9141@huawei.com>
Date: Fri, 23 Nov 2018 09:24:12 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101
 Thunderbird/45.2.0
MIME-Version: 1.0
In-Reply-To: <201811230114.mywyGh81%fengguang.wu@intel.com>
Content-Type: text/plain; charset="windows-1252"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.177.31.96]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Sorry for this, I send a wrong patch.

On 2018/11/23 1:30, kbuild test robot wrote:
> Hi YueHaibing,
> 
> Thank you for the patch! Perhaps something to improve:
> 
> [auto build test WARNING on net-next/master]
> 
> url:    https://github.com/0day-ci/linux/commits/YueHaibing/ptp-Fix-pass-zero-to-ERR_PTR-in-ptp_clock_register/20181123-010251
> config: x86_64-randconfig-x017-201846 (attached as .config)
> compiler: gcc-7 (Debian 7.3.0-1) 7.3.0
> reproduce:
>         # save the attached .config to linux build tree
>         make ARCH=x86_64 
> 
> All warnings (new ones prefixed by >>):
> 
>    drivers/ptp/ptp_clock.c: In function 'ptp_clock_register':
>>> drivers/ptp/ptp_clock.c:269:18: warning: passing argument 1 of 'PTR_ERR' makes pointer from integer without a cast [-Wint-conversion]
>        err = PTR_ERR(-EINVAL);
>                      ^
>    In file included from arch/x86/include/asm/processor.h:32:0,
>                     from arch/x86/include/asm/cpufeature.h:8,
>                     from arch/x86/include/asm/thread_info.h:53,
>                     from include/linux/thread_info.h:38,
>                     from arch/x86/include/asm/preempt.h:7,
>                     from include/linux/preempt.h:81,
>                     from include/linux/radix-tree.h:27,
>                     from include/linux/idr.h:15,
>                     from drivers/ptp/ptp_clock.c:20:
>    include/linux/err.h:29:33: note: expected 'const void *' but argument is of type 'int'
>     static inline long __must_check PTR_ERR(__force const void *ptr)
>                                     ^~~~~~~
>    Cyclomatic Complexity 5 include/linux/compiler.h:__write_once_size
>    Cyclomatic Complexity 1 arch/x86/include/asm/bitops.h:fls64
>    Cyclomatic Complexity 1 include/linux/log2.h:__ilog2_u64
>    Cyclomatic Complexity 1 include/linux/list.h:INIT_LIST_HEAD
>    Cyclomatic Complexity 1 include/linux/math64.h:div_u64_rem
>    Cyclomatic Complexity 1 include/asm-generic/getorder.h:__get_order
>    Cyclomatic Complexity 3 include/linux/string.h:memset
>    Cyclomatic Complexity 1 include/linux/err.h:ERR_PTR
>    Cyclomatic Complexity 1 include/linux/err.h:PTR_ERR
>    Cyclomatic Complexity 1 include/linux/spinlock.h:spinlock_check
>    Cyclomatic Complexity 1 include/linux/spinlock.h:spin_unlock_irqrestore
>    Cyclomatic Complexity 1 include/linux/ktime.h:ktime_to_ns
>    Cyclomatic Complexity 1 include/linux/slab.h:kmalloc_type
>    Cyclomatic Complexity 28 include/linux/slab.h:kmalloc_index
>    Cyclomatic Complexity 68 include/linux/slab.h:kmalloc_large
>    Cyclomatic Complexity 4 include/linux/slab.h:kmalloc
>    Cyclomatic Complexity 1 include/linux/slab.h:kzalloc
>    Cyclomatic Complexity 2 drivers/ptp/ptp_private.h:queue_cnt
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:queue_free
>    Cyclomatic Complexity 2 drivers/ptp/ptp_clock.c:enqueue_external_timestamp
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:scaled_ppm_to_ppb
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:ptp_clock_getres
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:ptp_clock_settime
>    Cyclomatic Complexity 2 drivers/ptp/ptp_clock.c:ptp_clock_gettime
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:delete_ptp_clock
>    Cyclomatic Complexity 2 drivers/ptp/ptp_clock.c:ptp_aux_kworker
>    Cyclomatic Complexity 2 include/linux/ktime.h:ktime_set
>    Cyclomatic Complexity 1 include/linux/ktime.h:timespec64_to_ktime
>    Cyclomatic Complexity 9 drivers/ptp/ptp_clock.c:ptp_clock_adjtime
>    Cyclomatic Complexity 1 include/linux/err.h:IS_ERR
>    Cyclomatic Complexity 1 include/linux/pps_kernel.h:pps_get_ts
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:ptp_exit
>    Cyclomatic Complexity 3 drivers/ptp/ptp_clock.c:ptp_init
>    Cyclomatic Complexity 13 drivers/ptp/ptp_clock.c:ptp_clock_register
>    Cyclomatic Complexity 3 drivers/ptp/ptp_clock.c:ptp_clock_unregister
>    Cyclomatic Complexity 4 drivers/ptp/ptp_clock.c:ptp_clock_event
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:ptp_clock_index
>    Cyclomatic Complexity 5 drivers/ptp/ptp_clock.c:ptp_find_pin
>    Cyclomatic Complexity 1 drivers/ptp/ptp_clock.c:ptp_schedule_worker
> 
> vim +/PTR_ERR +269 drivers/ptp/ptp_clock.c
> 
>    205	
>    206	struct ptp_clock *ptp_clock_register(struct ptp_clock_info *info,
>    207					     struct device *parent)
>    208	{
>    209		struct ptp_clock *ptp;
>    210		int err = 0, index, major = MAJOR(ptp_devt);
>    211	
>    212		if (info->n_alarm > PTP_MAX_ALARMS)
>    213			return ERR_PTR(-EINVAL);
>    214	
>    215		/* Initialize a clock structure. */
>    216		err = -ENOMEM;
>    217		ptp = kzalloc(sizeof(struct ptp_clock), GFP_KERNEL);
>    218		if (ptp == NULL)
>    219			goto no_memory;
>    220	
>    221		index = ida_simple_get(&ptp_clocks_map, 0, MINORMASK + 1, GFP_KERNEL);
>    222		if (index < 0) {
>    223			err = index;
>    224			goto no_slot;
>    225		}
>    226	
>    227		ptp->clock.ops = ptp_clock_ops;
>    228		ptp->clock.release = delete_ptp_clock;
>    229		ptp->info = info;
>    230		ptp->devid = MKDEV(major, index);
>    231		ptp->index = index;
>    232		spin_lock_init(&ptp->tsevq.lock);
>    233		mutex_init(&ptp->tsevq_mux);
>    234		mutex_init(&ptp->pincfg_mux);
>    235		init_waitqueue_head(&ptp->tsev_wq);
>    236	
>    237		if (ptp->info->do_aux_work) {
>    238			kthread_init_delayed_work(&ptp->aux_work, ptp_aux_kworker);
>    239			ptp->kworker = kthread_create_worker(0, "ptp%d", ptp->index);
>    240			if (IS_ERR(ptp->kworker)) {
>    241				err = PTR_ERR(ptp->kworker);
>    242				pr_err("failed to create ptp aux_worker %d\n", err);
>    243				goto kworker_err;
>    244			}
>    245		}
>    246	
>    247		err = ptp_populate_pin_groups(ptp);
>    248		if (err)
>    249			goto no_pin_groups;
>    250	
>    251		/* Create a new device in our class. */
>    252		ptp->dev = device_create_with_groups(ptp_class, parent, ptp->devid,
>    253						     ptp, ptp->pin_attr_groups,
>    254						     "ptp%d", ptp->index);
>    255		if (IS_ERR(ptp->dev)) {
>    256			err = PTR_ERR(ptp->dev);
>    257			goto no_device;
>    258		}
>    259	
>    260		/* Register a new PPS source. */
>    261		if (info->pps) {
>    262			struct pps_source_info pps;
>    263			memset(&pps, 0, sizeof(pps));
>    264			snprintf(pps.name, PPS_MAX_NAME_LEN, "ptp%d", index);
>    265			pps.mode = PTP_PPS_MODE;
>    266			pps.owner = info->owner;
>    267			ptp->pps_source = pps_register_source(&pps, PTP_PPS_DEFAULTS);
>    268			if (!ptp->pps_source) {
>  > 269				err = PTR_ERR(-EINVAL);
>    270				pr_err("failed to register pps source\n");
>    271				goto no_pps;
>    272			}
>    273		}
>    274	
>    275		/* Create a posix clock. */
>    276		err = posix_clock_register(&ptp->clock, ptp->devid);
>    277		if (err) {
>    278			pr_err("failed to create posix clock\n");
>    279			goto no_clock;
>    280		}
>    281	
>    282		return ptp;
>    283	
>    284	no_clock:
>    285		if (ptp->pps_source)
>    286			pps_unregister_source(ptp->pps_source);
>    287	no_pps:
>    288		device_destroy(ptp_class, ptp->devid);
>    289	no_device:
>    290		ptp_cleanup_pin_groups(ptp);
>    291	no_pin_groups:
>    292		if (ptp->kworker)
>    293			kthread_destroy_worker(ptp->kworker);
>    294	kworker_err:
>    295		mutex_destroy(&ptp->tsevq_mux);
>    296		mutex_destroy(&ptp->pincfg_mux);
>    297		ida_simple_remove(&ptp_clocks_map, index);
>    298	no_slot:
>    299		kfree(ptp);
>    300	no_memory:
>    301		return ERR_PTR(err);
>    302	}
>    303	EXPORT_SYMBOL(ptp_clock_register);
>    304	
> 
> ---
> 0-DAY kernel test infrastructure                Open Source Technology Center
> https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
> 

