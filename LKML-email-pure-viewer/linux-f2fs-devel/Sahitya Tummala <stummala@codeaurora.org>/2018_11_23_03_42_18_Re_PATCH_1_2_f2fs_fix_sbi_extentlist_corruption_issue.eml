Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 12:23:00 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4AE4058037D;
	Thu, 22 Nov 2018 19:43:43 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 19:43:42 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2HFsKxYFU5sGzuN4RKChfKn/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci9Zx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocTPq6zKnJzTXfb/JZwyr25pbVchAkpPGDR7ZwftDMwkQoDAPFkkiQ?=
 =?us-ascii?q?qYngPzyP0uQCqXOW4PZnVe2ylWEosRxxoiKoxsc2kIbFnIUVykrL9Shgxos+ON?=
 =?us-ascii?q?62SFZjbNK6DJddszuWO5Z4T888WW1kpSU3xqEctZO6fiUG0IkrywLRZvCdbYSE?=
 =?us-ascii?q?/BbuWPyMLTp8nn5pZbayihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTN6siIVP?=
 =?us-ascii?q?R95F2t2TWR2ADJ7OFLP0Q0mbDcK547zb48jpsTsULdES/qgEj6krOae0E+9uS1?=
 =?us-ascii?q?5enrfK/qqoKfOoNokA3zM6YjltS6AesiMwgOW2ab+f671L3m5UD5RLRKjvsrkq?=
 =?us-ascii?q?jWqZzaJtoUprS/AwBL1oYv8hG/Djmg0NsGh3kKN0xFeB2ZgIjzIV3OI+73De25?=
 =?us-ascii?q?g1uylDdn3ffGPqfuApnVNHjMjK/hfaph605b0AczydFf55FKBb0bL/PzR1T8tN?=
 =?us-ascii?q?jZDh8/Lgy1zPzrCNR71oMCR22PBrWVP7/VsV+N/ugvOfWDZJcJuDbhLPgo//7u?=
 =?us-ascii?q?gmU4mV8BZ6ap2oEbaHClHvt8JUWZbmHhgtMAEWcMowo/Q/bmiFyEUT5PeXmyW7?=
 =?us-ascii?q?gw6S08CIKjFY3DXJyigKSd3CenGZ1bfmJGCleSHnvydIWEXPEMaCSVIsJ6ljwE?=
 =?us-ascii?q?VL6hS5Iu1B20tQ/6zaZnIfTQ+iECqZ3j09117fXJlR4u7Tx0E9id02aVQm5uhW?=
 =?us-ascii?q?MIRzg23KNlrUxn0FiD07N1g/hZFdxV+vNIXR02NZ/az+xmFd/yXhjNccuOSFaj?=
 =?us-ascii?q?Wt+mGy0+Tsotw98SZEZwA9aigQrF3yawB78VlqaEBJo78q/H23jxJsB9y2vJ1a?=
 =?us-ascii?q?U7jlkmRNdPOnOihqJl6wfTAIvJmV2Dl6m2baQcwDLN9GCbwGWTpk5YThB/Xb/F?=
 =?us-ascii?q?XX8FYEvWtsr25kXFQ7+qCrQnNw9BxNWGKqtLbN3pkFpHSO3iONTYf2K+hWOwCQ?=
 =?us-ascii?q?yUybOLaYrgY38d0znFCEgYjwAT+m6LOhUkCSe/vW3SFjxuGkjpY0P37+Z+rmi2?=
 =?us-ascii?q?Tks1zwGMck1g2KC5+h8ThfyAVfwT2qgItzsmqzVxBFy9xc7ZC8Kcpwp9e6VRec?=
 =?us-ascii?q?894FZC1WLeqwx9PpyhI7p+hlIEdAR3pUfu1xRxCoVPisUqqHIqzAxvKaOXyl9B?=
 =?us-ascii?q?djWY3YzuNb3TMGX94Beva6vO0FHEzNmW4rsP6Og/q1j7pg6pElQt8np53NhVyX?=
 =?us-ascii?q?eT/YjKAxcIXpL3UUY38AZ6qqreYik84YPUyHJtPbO1sj/Ex9ImGu8lxgy8cNdY?=
 =?us-ascii?q?NaOODBXyHNECB8iyNOwqnECkbxIZPOxI6KE4JcKnd/uc166tM+ZthzamjWVB4I?=
 =?us-ascii?q?Bg3UOA7St8SujU35kbx/GUxBeIVzD5jF25qMD4hZhEZS0OHmq40SXkHo9RabFo?=
 =?us-ascii?q?coYRFGiuJNe7xtNgiJ73Wn5U7UKsCEkC2MC0ZxWSdVv93QtL2EQToHynnza4zj?=
 =?us-ascii?q?NunzEoqKqfwDLBw+D4eBUbPW5LQXFojU3wLoisk9AaQE+oYhAplRuk/0r7x7JX?=
 =?us-ascii?q?pL9iL2nVWkpIeyn2L2d/Uqq/rLaCYshP6I82viVTSuizfVeaSrvlqRsAzyzjB3?=
 =?us-ascii?q?dexCw8dzyyuJX2hQZ6iGGeLHZ0tnbZYtt/xRTc5NzdQ/5ewDwGSTJ8iTnWAFi8?=
 =?us-ascii?q?Itao8c+Vl5fFruCxSWahWodPfinsyIOKrDG76nFyAR2jg/CzncXqEAgg3i/8zd?=
 =?us-ascii?q?VqVyTIrBDnb4nv1qS6N/9nf0ZyCF/97cp6Bp9xko8qiJ4M3ngag42f/WAbnmfr?=
 =?us-ascii?q?LdVbxaX+YWIORTERwt7Z+gjl2FB5IXKPyIL0TXGdwspnZ9mnbWIawCM978ZWCK?=
 =?us-ascii?q?iK6LxIhzd6ol29rQjJe/hygi8dyecy6H4dm+wJvQstziaHDbwIE0hXIzfslwiW?=
 =?us-ascii?q?4NCkt6pYenyvcber2Up6nNChCqyCow5GVHb4fJciATF/7sFlPF3Q133z75nueM?=
 =?us-ascii?q?PMYtILqh2UjxDAgvBJKJI2k/oGnytmNnj7vX040O47lh1u0Iq+vIiGLWVt4a24?=
 =?us-ascii?q?DgRZNj3ze8Mc5DXtgbxCkcaR2oClBo9hFSkTXJv0UfKoFyofuu/9OAaJFD08t2?=
 =?us-ascii?q?2XGb7CHQKE7EdmrnTPE42kNn2NJXkZy8liSweZJEBFnA8UWzA6lIYjFg+23Mzh?=
 =?us-ascii?q?bFt55jcJ6176sBRMz/xnNwLlXmfDvguoaSo0SJuCLBpQ9A5C/FzYMcif7uJ1Ai?=
 =?us-ascii?q?FZ8YetrA2LKmyHeQtICXsFVVCDB1DmJrOu/8XP8/CEBuqiKPvDebWPqetDV/eR?=
 =?us-ascii?q?2JKgyI1m8yyXNsWIOHliAOY22k5CXXB/BsTYlC8DSy0RlyLRccGboA2w9TFwrs?=
 =?us-ascii?q?C66P7rQh7g5ZOTC7tONtVi4xC2jrmCN+6ThyZ5KCxU1pAWxX/Px7gQwkQSizx1?=
 =?us-ascii?q?dzS2FbQAtCjNTL/fm6NNDh4bbT9zO9VM764mwgZNPsvbgMvv1rFklv41F0tFVV?=
 =?us-ascii?q?v5l86zeMwFOHu9O03HBUqRMLSGJCbGw8X2YaO6VL1Rg/9Ytxy2uTaHDUDjOi6P?=
 =?us-ascii?q?mCXuVxCqKetMlj2UPARCuIGhdRZgEXTjTNPjahGhLNB7lyE5wb0qiXPMLmMcNT?=
 =?us-ascii?q?l8c0VQrryf9y9Yg/N/G3Bf4XphN+WLhyGZ7+zAIJYMrfRrGjh0l/5d4Hkiy7pa?=
 =?us-ascii?q?9idERPl0mCvUttFvolGmnfOJyjpoSxdOrjdLhISWvURtI6nZ959AWWra8xIJ92?=
 =?us-ascii?q?mfFxMKp942QuHo7oJZx9fCiaG7CzZHu4bW9MYTCtXXAMGKKnwsNVzuAjGCXyUf?=
 =?us-ascii?q?Sjv+DmjfhlBMmbmu63iQp5wz4sz3hIcLT7ZfXXQ+Ef8XA1l/G8YLZpBtUWV3wv?=
 =?us-ascii?q?agkMcU6C/m/1HqT8JAs8WCD6rKDA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAABWdvdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBggCBayeMcI0tFJcnggcrAYhSIjYHDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKGAklAwwFGDELDYMcggEBBaZUg?=
 =?us-ascii?q?WwzgnYBAQWHFAiKbYEcF4FAP4QjhGODUIImkBGPcwmRJCOJUYc3LJgEgU0DggM?=
 =?us-ascii?q?zGggoCDuCbIIbDBeIXoVGODKBBAEBAYoJgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAABWdvdbh0O0hNFiHAEBAQQBAQcEAQGBUwUBAQsBggC?=
 =?us-ascii?q?BayeMcI0tFJcnggcrAYhSIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?gECAwECJBMGAQE3AQUJAQEKGAklAwwFGDELDYMcggEBBaZUgWwzgnYBAQWHFAi?=
 =?us-ascii?q?KbYEcF4FAP4QjhGODUIImkBGPcwmRJCOJUYc3LJgEgU0DggMzGggoCDuCbIIbD?=
 =?us-ascii?q?BeIXoVGODKBBAEBAYoJgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="53415614"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 19:42:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2408041AbeKWOYu (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 09:24:50 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:37148 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2393088AbeKWOYu (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 09:24:50 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 50EBC606DB; Fri, 23 Nov 2018 03:42:24 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542944544;
        bh=nynsI0kZEexZFuImh7SAzRBeRwXdDYhTK29Boc/12rE=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=dHO8t3Tv5AX8DKrNexHxUCQ+QlWdT7Z234ul3O+HzpmUF2D3nGQ/QKPgILvAAcAQR
         dLt/xNFpw5y8sjUBtXlc8Mv1qi6shoUN9ABBlJJjariHhCecxHtodeqCTX7/6TWmHD
         TizexAuOYwJdlK6VUiDqC7kkn6hR8J59HMq0WlCA=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from codeaurora.org (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
        (using TLSv1.2 with cipher DHE-RSA-AES128-SHA (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: stummala@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id AD3F5606DB;
        Fri, 23 Nov 2018 03:42:21 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542944543;
        bh=nynsI0kZEexZFuImh7SAzRBeRwXdDYhTK29Boc/12rE=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=Bo92dJ6xUSvKvUIOxTPj86/ooA9iyaqzLNLrsJQlDqg9XpLUtqeVgsyJtGevPr5iy
         lYAdPaNB1XRlHGh+wGU42NcznNEaZ0g3GVHwu3OEwg+yPPPbFoLuA869dxgaX4JioW
         fe+ac9pMEB17YgeALTcShM0BJGeJrupnT0K1Oy1c=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org AD3F5606DB
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=stummala@codeaurora.org
Date: Fri, 23 Nov 2018 09:12:18 +0530
From: Sahitya Tummala <stummala@codeaurora.org>
To: Jaegeuk Kim <jaegeuk@kernel.org>
Cc: Chao Yu <yuchao0@huawei.com>,
        linux-f2fs-devel@lists.sourceforge.net,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH 1/2] f2fs: fix sbi->extent_list corruption issue
Message-ID: <20181123034218.GA9838@codeaurora.org>
References: <1542884360-19470-1-git-send-email-stummala@codeaurora.org>
 <a1e799ad-a559-12cc-9f2d-a6f037640a35@huawei.com>
 <20181122121107.GB52295@jaegeuk-macbookpro.roam.corp.google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181122121107.GB52295@jaegeuk-macbookpro.roam.corp.google.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 22, 2018 at 04:11:07AM -0800, Jaegeuk Kim wrote:
> On 11/22, Chao Yu wrote:
> > On 2018/11/22 18:59, Sahitya Tummala wrote:
> > > When there is a failure in f2fs_fill_super() after/during
> > > the recovery of fsync'd nodes, it frees the current sbi and
> > > retries again. This time the mount is successful, but the files
> > > that got recovered before retry, still holds the extent tree,
> > > whose extent nodes list is corrupted since sbi and sbi->extent_list
> > > is freed up. The list_del corruption issue is observed when the
> > > file system is getting unmounted and when those recoverd files extent
> > > node is being freed up in the below context.
> > > 
> > > list_del corruption. prev->next should be fffffff1e1ef5480, but was (null)
> > > <...>
> > > kernel BUG at kernel/msm-4.14/lib/list_debug.c:53!
> > > task: fffffff1f46f2280 task.stack: ffffff8008068000
> > > lr : __list_del_entry_valid+0x94/0xb4
> > > pc : __list_del_entry_valid+0x94/0xb4
> > > <...>
> > > Call trace:
> > > __list_del_entry_valid+0x94/0xb4
> > > __release_extent_node+0xb0/0x114
> > > __free_extent_tree+0x58/0x7c
> > > f2fs_shrink_extent_tree+0xdc/0x3b0
> > > f2fs_leave_shrinker+0x28/0x7c
> > > f2fs_put_super+0xfc/0x1e0
> > > generic_shutdown_super+0x70/0xf4
> > > kill_block_super+0x2c/0x5c
> > > kill_f2fs_super+0x44/0x50
> > > deactivate_locked_super+0x60/0x8c
> > > deactivate_super+0x68/0x74
> > > cleanup_mnt+0x40/0x78
> > > __cleanup_mnt+0x1c/0x28
> > > task_work_run+0x48/0xd0
> > > do_notify_resume+0x678/0xe98
> > > work_pending+0x8/0x14
> > > 
> > > Fix this by cleaning up the extent tree of those recovered files
> > > before freeing up sbi and before next retry.
> > 
> > Would it be more clear to call shrink_dcache_sb earlier to invalid all
> > inodes and call f2fs_shrink_extent_tree release cached entries and trees in
> > error path?
> 
> Agreed.
> 
I have tried doing shrink_dcache_sb() earlier but that doesn't call
f2fs_shrink_extent_tree(). So I have moved f2fs_join_shrinker() earlier and 
tried calling f2fs_leave_shrinker() in the error path. That helps to clean up
the cached extent nodes. However, I see that extent tree is left intact for
those recovered files, which should not be a problem as it gets freed as part
of next umount/rm. Only one small problem I see with this is - during rm/umount when
those previoulsy recovered files are being evicted, extent tree memory gets
free'd but the counter sbi->total_ext_tree gets invalid as these recovered
files are not present as part of current sbi->extent_tree_root. So i have come
up with this patch below to fix this. Let me know if this looks good?

diff --git a/fs/f2fs/extent_cache.c b/fs/f2fs/extent_cache.c
index 1cb0fcc..3e4801e 100644
--- a/fs/f2fs/extent_cache.c
+++ b/fs/f2fs/extent_cache.c
@@ -654,9 +654,9 @@ unsigned int f2fs_shrink_extent_tree(struct f2fs_sb_info *sbi, int nr_shrink)
 		}
 		f2fs_bug_on(sbi, atomic_read(&et->node_cnt));
 		list_del_init(&et->list);
-		radix_tree_delete(&sbi->extent_tree_root, et->ino);
+		if (radix_tree_delete(&sbi->extent_tree_root, et->ino))
+			atomic_dec(&sbi->total_ext_tree);
 		kmem_cache_free(extent_tree_slab, et);
-		atomic_dec(&sbi->total_ext_tree);
 		atomic_dec(&sbi->total_zombie_tree);
 		tree_cnt++;
 
@@ -767,7 +767,8 @@ void f2fs_destroy_extent_tree(struct inode *inode)
 	/* delete extent tree entry in radix tree */
 	mutex_lock(&sbi->extent_tree_lock);
 	f2fs_bug_on(sbi, atomic_read(&et->node_cnt));
-	radix_tree_delete(&sbi->extent_tree_root, inode->i_ino);
+	if (radix_tree_delete(&sbi->extent_tree_root, inode->i_ino))
+		atomic_dec(&sbi->total_ext_tree);
 	kmem_cache_free(extent_tree_slab, et);
 	atomic_dec(&sbi->total_ext_tree);
 	mutex_unlock(&sbi->extent_tree_lock);
diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
index af58b2c..3e5588f 100644
--- a/fs/f2fs/super.c
+++ b/fs/f2fs/super.c
@@ -3295,6 +3295,7 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 	if (err)
 		goto free_root_inode;
 
+	f2fs_join_shrinker(sbi);
 #ifdef CONFIG_QUOTA
 	/* Enable quota usage during mount */
 	if (f2fs_sb_has_quota_ino(sb) && !f2fs_readonly(sb)) {
@@ -3379,8 +3380,6 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 			sbi->valid_super_block ? 1 : 2, err);
 	}
 
-	f2fs_join_shrinker(sbi);
-
 	f2fs_tuning_parameters(sbi);
 
 	f2fs_msg(sbi->sb, KERN_NOTICE, "Mounted with checkpoint version = %llx",
@@ -3402,6 +3401,8 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 	 * falls into an infinite loop in f2fs_sync_meta_pages().
 	 */
 	truncate_inode_pages_final(META_MAPPING(sbi));
+	shrink_dcache_sb(sb);
+	f2fs_leave_shrinker(sbi);
 	f2fs_unregister_sysfs(sbi);
 free_root_inode:
 	dput(sb->s_root);
@@ -3445,7 +3446,6 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 	/* give only one another chance */
 	if (retry) {
 		retry = false;
-		shrink_dcache_sb(sb);
 		goto try_onemore;
 	}
 	return err;

-- 
--
Sent by a consultant of the Qualcomm Innovation Center, Inc.
The Qualcomm Innovation Center, Inc. is a member of the Code Aurora Forum.
