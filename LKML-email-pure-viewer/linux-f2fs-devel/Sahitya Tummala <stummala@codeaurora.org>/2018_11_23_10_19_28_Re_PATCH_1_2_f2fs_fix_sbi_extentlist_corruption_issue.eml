Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:33:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6EA7158037D;
	Fri, 23 Nov 2018 02:19:41 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 02:19:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjO0KVRIowauWOAhwpdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvryrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjJSmnP6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvoLqgSUeG1zLXIzDrZcvhYxyr96I3Nch87pfGDR697fM3KyUkzCgPFi1CQ?=
 =?us-ascii?q?ppbhPzyPzekCr2+b4Pd+Wu21lm4nsQZxoiK1ycs2jYnJnI0Vx0nC+C5kw4g1Pc?=
 =?us-ascii?q?W1RFBnbdOgCpdcqi+XO5VsTs8/QGxkpDw2x7wEtJKjYSQG1JoqywTBZ/CZd4WE?=
 =?us-ascii?q?+A/vWeKLLTtlgH9ofq+0iQyo/ki60OL8U9G50FZUoSpBldnBrm4N1xPN5cidUP?=
 =?us-ascii?q?d9/Vmu2SyJ1w/N7uFIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7iLWaelgq9+S2?=
 =?us-ascii?q?8ejrf7brqoOGO4J1iAzyKqEulda+AeQ8PAgORW+b+eGk2b3n/E35RqhKj/Ivnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNM1YYi5RC/ACm80NkDg3kHI0xKeAidg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i2lzdr3f/GMqX7AprRNnjDjKvhfbFl5k5YyQozzs5Q64hbC7EcO//zXk7xtN?=
 =?us-ascii?q?rFDh42KQC0wuDnCMlj2YMaQ26AHqiZMKbKu1+S+u0vO/WMZJMSuDvlK/gq/f/u?=
 =?us-ascii?q?jWMjll8aZ6Wp3YYXZ2q+HvRpOEiZZXvsgtEcEWYFpAY+TerqiEGcXj5XfXq9Q6?=
 =?us-ascii?q?U85jQjAoK8EYjDXpytgKCG3CqjHJ1WYX5JBkqPEXfvcYWEXfAMZTmWIs9glDwE?=
 =?us-ascii?q?SLegR5Ug1RGoqA/11b5nIvDI9S0fsJLpzMJ16PHLlREu6Tx0CNyQ3HuWT2F0mW?=
 =?us-ascii?q?MIRCU63Lplrkx/0VqD1al4g/pFFd1c/f9JUwE6NYLCwOx+Edz9RgXBftKRQla8?=
 =?us-ascii?q?XtqmGS0xTs42w9IWYEZyAdOiggrH3yqrGbAVkbOLCYcw8qLd2XjxOsl8x2zH1K?=
 =?us-ascii?q?knk1kpXM9POXe6ia548gjZH5TJnFmBl6a2aaQc2zbA+3qZwmqQok5USg5wXr/D?=
 =?us-ascii?q?XXAEeETWq9P15kfBT7+rDbQqKQ9Byc+EKqtXZdzll1RGRPH/ONvAZ2K9gXu/BR?=
 =?us-ascii?q?GNxrmUdorlZ30d3DnBCEgDiw0c4GyJNRYgCSu7o2LRFjpuFUnxbEPq6uR+rHK7?=
 =?us-ascii?q?TkkpzwCFdUFh1ry1+gILivyYUf8cwrUEuCI5oTVuAFm9x87WC8aHpwd5YKVcYN?=
 =?us-ascii?q?Y94FBb1WLZtw1xJICgI7plhl4EdwR3vkXu1xpsB4VEkMgqqm4qzQVoJaKZ1lNB?=
 =?us-ascii?q?ay2X3ZTqNrLLLWny+Qila7TK1VHGzNaW5qAP5ewipFXnog6oGVQt8nV939ZOzn?=
 =?us-ascii?q?uT+4/FDAwRUZL2TEY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOErm0WpYggYM+xI9a80P9mpd/2J2KOwOOZgnTSmjXlI4Y?=
 =?us-ascii?q?xn00KM8TZ8RfDM35of3/6Y2Q6HXS/mjFi9qsD3hZxEZTYKE2qlyCjrGJReZrdv?=
 =?us-ascii?q?coYME2uuJdO4xs9/h5L0R3FX7lqjCE4Y18+zfhqSaUfw3QlR1UQRvHymljG0zz?=
 =?us-ascii?q?1ykzE1sKWf2DbCzPjldBoCImRLXnVtjU/wIYioiNAXREipbwkzmBql/0r63LVb?=
 =?us-ascii?q?pKJkImnXQEdIeTX2Lm54XquxsLqCf9BA6JcyvSpLV+S8ZEiQSqThrBsCzyPjA2?=
 =?us-ascii?q?xeySg5dz6woJX5nB96iGWHIHZotnXZesJwxRbZ5NPCQ/5cxT4GRCh+iTnKCVmw?=
 =?us-ascii?q?Jdip/dOIl5jdtuCyTX6uVppWcSPz14OPqDO75XF2AR24h/2ymsfoEQ8g3S/51t?=
 =?us-ascii?q?lqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaH+Y2AMRTIRw97V/RLq2EtsLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X4fguEJuxAiwj+TA78MBklYITLjlw6T?=
 =?us-ascii?q?4N+gtqVXa32icbyx1Ep4gNCgA6uOogBaWHblZJgiGTV84dl4MFLJyHfz8J3reM?=
 =?us-ascii?q?HMbdIPsR2ZiwvAj+9QKJ4rl/sFnyxnOX/mvX0+yu42lhhu3ZC8vIiaJGRh5qO5?=
 =?us-ascii?q?AhhENjLrY8Mf4C3ijaFbnsyOxYCgAo1hGikXXJvvVf+nCygdtfPjNwaTCjE8rm?=
 =?us-ascii?q?qbFKHbHQ+e7kdmsn3OH4qqN3GROHkW09FiSAOBK0xYhQAeRC86kYIhFgC22Mzh?=
 =?us-ascii?q?d1905jIL6V79tBRM0fhkNwXlXmfcuQeoaSo0SJ6FIxpN9QxC40bVMcqD7uN8BS?=
 =?us-ascii?q?1Y/5uhrBCTJWyffQhHEWYJWkmcDVD5Irau/cXA8/SfBuemL/rOZqiOqfVDV/iS?=
 =?us-ascii?q?w5KjyJBm/zGKNsWAJXRiC/w72kxeXXF2AcjZmjMPSzAJmCLJdcKUuBC8+ihvpM?=
 =?us-ascii?q?Cl7PvrQB7v5ZeIC7ZKMdVg5RG2gaSAN+6Rnip5KixY1pQDxXDW0rgfwUUShjpq?=
 =?us-ascii?q?dzmsF7QAqCHMQLjRmq9REx4UdSdzONFU4KI72wlHIdTbhc/t1r5kkv41DE9IWk?=
 =?us-ascii?q?b8ms6yf8wFPWG8OEnDBEaKL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylbhZtCG3jQMj6ZRGhLNB3jSM5wbsvi3PONG4cNy?=
 =?us-ascii?q?V8ckxXor2R6yNYnutwG2hb4nV5KumEnj6T7/PEJZYOrftrHiN0mvpa4XsgzbtV?=
 =?us-ascii?q?6SBERPptlyrTrt5huVemkuaUxzpjURpOrCtLhY2RsUVjP6XZ6odPWXLe8B0R6m?=
 =?us-ascii?q?WQDkdCm9wwId3mvOhh15Cbhb/4KD5Fq/rU4MIDCsmSI8WCZikPKx3sTQXdDAoZ?=
 =?us-ascii?q?XDfjCXzagkVZmbnG7WGIq50zrpHEk50CR7ZGTlsvH7UdEEszT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr6UCJHMg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAACQ0/dbh0O0hNFiGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAYIAgWsnjHCLHoINFJcnggcrAYhVIjYHDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYQEBAQECAQECJBMGAQE3AQQBCQEBChgJJQMMBRgxC?=
 =?us-ascii?q?w2DHIF6BwEFpi2BbDOCdgEBBYcSCIptgRwXgUA/hCOEY4NQgiaQEY9zCZEkI4F?=
 =?us-ascii?q?Zh3iHNyyJQY5DgUwBggYzGggoCDuCbIIbDBeIXoVGODKBBAEBAYlVgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AJAACQ0/dbh0O0hNFiGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAYIAgWsnjHCLHoINFJcnggcrAYhVIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYQEBAQECAQECJBMGAQE3AQQBCQEBChgJJQMMBRgxCw2DHIF6BwEFpi2?=
 =?us-ascii?q?BbDOCdgEBBYcSCIptgRwXgUA/hCOEY4NQgiaQEY9zCZEkI4FZh3iHNyyJQY5Dg?=
 =?us-ascii?q?UwBggYzGggoCDuCbIIbDBeIXoVGODKBBAEBAYlVgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="139301136"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 02:19:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2503225AbeKWVDP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 16:03:15 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:57950 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2394081AbeKWVDP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 16:03:15 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id E1B0E6081E; Fri, 23 Nov 2018 10:19:34 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542968374;
        bh=27DCqP1D3OqvelHChR0Wcisk1kC64Djcdi+3zh5K/h8=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=ntj5kPGpgzLT4eetILHrpjFFXpllsBS+G7yAjQOtYNR0WQL0gd1pDpbPaLissClrQ
         gtD2YVERRIyF1aFPtplYwoQwyIsH6MVw/AJn5rGNyEgPSjfcUEdSWT0yq5X7vDQXxz
         3lcwupMq4kQMWDgexOM8BpRM+JpkCqMiCs6g8BXQ=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from codeaurora.org (blr-c-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.19.19])
        (using TLSv1.2 with cipher DHE-RSA-AES128-SHA (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: stummala@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 16F3560A98;
        Fri, 23 Nov 2018 10:19:31 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1542968373;
        bh=27DCqP1D3OqvelHChR0Wcisk1kC64Djcdi+3zh5K/h8=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=g6TL942/J3VI6O1Nh0PSG3HYdt+F+zNFzbU9LSv9sA6d2YBBfSIJwaixHmnNVJP96
         Uf2lT0ZjaMd+8TeeFl/Ny6N2aCILsea5fFBehuBZGFtH6178nVlGl+vq9rZgMNrZZM
         KVn9nq4xBlev74zSQpBqYUxcB0gmX3vO5ghPO+Mk=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 16F3560A98
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=stummala@codeaurora.org
Date: Fri, 23 Nov 2018 15:49:28 +0530
From: Sahitya Tummala <stummala@codeaurora.org>
To: Chao Yu <yuchao0@huawei.com>
Cc: Jaegeuk Kim <jaegeuk@kernel.org>,
        linux-f2fs-devel@lists.sourceforge.net,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH 1/2] f2fs: fix sbi->extent_list corruption issue
Message-ID: <20181123101928.GB9838@codeaurora.org>
References: <1542884360-19470-1-git-send-email-stummala@codeaurora.org>
 <a1e799ad-a559-12cc-9f2d-a6f037640a35@huawei.com>
 <20181122121107.GB52295@jaegeuk-macbookpro.roam.corp.google.com>
 <20181123034218.GA9838@codeaurora.org>
 <75b71652-31a9-1061-37a4-9d137c3db9aa@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <75b71652-31a9-1061-37a4-9d137c3db9aa@huawei.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 23, 2018 at 05:52:16PM +0800, Chao Yu wrote:
> On 2018/11/23 11:42, Sahitya Tummala wrote:
> > On Thu, Nov 22, 2018 at 04:11:07AM -0800, Jaegeuk Kim wrote:
> >> On 11/22, Chao Yu wrote:
> >>> On 2018/11/22 18:59, Sahitya Tummala wrote:
> >>>> When there is a failure in f2fs_fill_super() after/during
> >>>> the recovery of fsync'd nodes, it frees the current sbi and
> >>>> retries again. This time the mount is successful, but the files
> >>>> that got recovered before retry, still holds the extent tree,
> >>>> whose extent nodes list is corrupted since sbi and sbi->extent_list
> >>>> is freed up. The list_del corruption issue is observed when the
> >>>> file system is getting unmounted and when those recoverd files extent
> >>>> node is being freed up in the below context.
> >>>>
> >>>> list_del corruption. prev->next should be fffffff1e1ef5480, but was (null)
> >>>> <...>
> >>>> kernel BUG at kernel/msm-4.14/lib/list_debug.c:53!
> >>>> task: fffffff1f46f2280 task.stack: ffffff8008068000
> >>>> lr : __list_del_entry_valid+0x94/0xb4
> >>>> pc : __list_del_entry_valid+0x94/0xb4
> >>>> <...>
> >>>> Call trace:
> >>>> __list_del_entry_valid+0x94/0xb4
> >>>> __release_extent_node+0xb0/0x114
> >>>> __free_extent_tree+0x58/0x7c
> >>>> f2fs_shrink_extent_tree+0xdc/0x3b0
> >>>> f2fs_leave_shrinker+0x28/0x7c
> >>>> f2fs_put_super+0xfc/0x1e0
> >>>> generic_shutdown_super+0x70/0xf4
> >>>> kill_block_super+0x2c/0x5c
> >>>> kill_f2fs_super+0x44/0x50
> >>>> deactivate_locked_super+0x60/0x8c
> >>>> deactivate_super+0x68/0x74
> >>>> cleanup_mnt+0x40/0x78
> >>>> __cleanup_mnt+0x1c/0x28
> >>>> task_work_run+0x48/0xd0
> >>>> do_notify_resume+0x678/0xe98
> >>>> work_pending+0x8/0x14
> >>>>
> >>>> Fix this by cleaning up the extent tree of those recovered files
> >>>> before freeing up sbi and before next retry.
> >>>
> >>> Would it be more clear to call shrink_dcache_sb earlier to invalid all
> >>> inodes and call f2fs_shrink_extent_tree release cached entries and trees in
> >>> error path?
> >>
> >> Agreed.
> >>
> > I have tried doing shrink_dcache_sb() earlier but that doesn't call
> > f2fs_shrink_extent_tree(). So I have moved f2fs_join_shrinker() earlier and 
> > tried calling f2fs_leave_shrinker() in the error path. That helps to clean up
> > the cached extent nodes. However, I see that extent tree is left intact for
> 
> I didn't get it, you mean, in error path, after we call shrink_dcache_sb &
> f2fs_leave_shrinker, for those recovered files, their extent nodes were
> evicted, but their extent trees are still in cache?
> 

Yes, only extent tree is present with zero extent nodes as
f2fs_leave_shrinker() is only clearing the exntent nodes from
sbi->extent_list.

> > those recovered files, which should not be a problem as it gets freed as part
> > of next umount/rm. Only one small problem I see with this is - during rm/umount when
> > those previoulsy recovered files are being evicted, extent tree memory gets
> > free'd but the counter sbi->total_ext_tree gets invalid as these recovered
> > files are not present as part of current sbi->extent_tree_root. So i have come
> > up with this patch below to fix this. Let me know if this looks good?
> > 
> > diff --git a/fs/f2fs/extent_cache.c b/fs/f2fs/extent_cache.c
> > index 1cb0fcc..3e4801e 100644
> > --- a/fs/f2fs/extent_cache.c
> > +++ b/fs/f2fs/extent_cache.c
> > @@ -654,9 +654,9 @@ unsigned int f2fs_shrink_extent_tree(struct f2fs_sb_info *sbi, int nr_shrink)
> >  		}
> >  		f2fs_bug_on(sbi, atomic_read(&et->node_cnt));
> >  		list_del_init(&et->list);
> > -		radix_tree_delete(&sbi->extent_tree_root, et->ino);
> > +		if (radix_tree_delete(&sbi->extent_tree_root, et->ino))
> > +			atomic_dec(&sbi->total_ext_tree);
> >  		kmem_cache_free(extent_tree_slab, et);
> > -		atomic_dec(&sbi->total_ext_tree);
> >  		atomic_dec(&sbi->total_zombie_tree);
> >  		tree_cnt++;
> >  
> > @@ -767,7 +767,8 @@ void f2fs_destroy_extent_tree(struct inode *inode)
> >  	/* delete extent tree entry in radix tree */
> >  	mutex_lock(&sbi->extent_tree_lock);
> >  	f2fs_bug_on(sbi, atomic_read(&et->node_cnt));
> > -	radix_tree_delete(&sbi->extent_tree_root, inode->i_ino);
> > +	if (radix_tree_delete(&sbi->extent_tree_root, inode->i_ino))
> > +		atomic_dec(&sbi->total_ext_tree);
> >  	kmem_cache_free(extent_tree_slab, et);
> >  	atomic_dec(&sbi->total_ext_tree);
> >  	mutex_unlock(&sbi->extent_tree_lock);
> > diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
> > index af58b2c..3e5588f 100644
> > --- a/fs/f2fs/super.c
> > +++ b/fs/f2fs/super.c
> > @@ -3295,6 +3295,7 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >  	if (err)
> >  		goto free_root_inode;
> >  
> > +	f2fs_join_shrinker(sbi);
> >  #ifdef CONFIG_QUOTA
> >  	/* Enable quota usage during mount */
> >  	if (f2fs_sb_has_quota_ino(sb) && !f2fs_readonly(sb)) {
> > @@ -3379,8 +3380,6 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >  			sbi->valid_super_block ? 1 : 2, err);
> >  	}
> >  
> > -	f2fs_join_shrinker(sbi);
> > -
> >  	f2fs_tuning_parameters(sbi);
> >  
> >  	f2fs_msg(sbi->sb, KERN_NOTICE, "Mounted with checkpoint version = %llx",
> > @@ -3402,6 +3401,8 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >  	 * falls into an infinite loop in f2fs_sync_meta_pages().
> >  	 */
> >  	truncate_inode_pages_final(META_MAPPING(sbi));
> > +	shrink_dcache_sb(sb);
> > +	f2fs_leave_shrinker(sbi);
> 
> Why not just calling f2fs_shrink_extent_tree(sbi, __count_extent_cache(sbi)); ?
> 

Sure, will update in the next patchset.

> Thanks,
> 
> >  	f2fs_unregister_sysfs(sbi);
> >  free_root_inode:
> >  	dput(sb->s_root);
> > @@ -3445,7 +3446,6 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
> >  	/* give only one another chance */
> >  	if (retry) {
> >  		retry = false;
> > -		shrink_dcache_sb(sb);
> >  		goto try_onemore;
> >  	}
> >  	return err;
> > 
> 

-- 
--
Sent by a consultant of the Qualcomm Innovation Center, Inc.
The Qualcomm Innovation Center, Inc. is a member of the Code Aurora Forum.
