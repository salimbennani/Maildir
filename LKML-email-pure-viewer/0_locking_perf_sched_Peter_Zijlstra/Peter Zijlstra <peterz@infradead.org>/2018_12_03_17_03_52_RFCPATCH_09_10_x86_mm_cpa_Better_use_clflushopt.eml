Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:55:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7F470580578;
	Mon,  3 Dec 2018 09:15:49 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 03 Dec 2018 09:15:48 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6JbMSBY5zs3KIHmEJm8IqHn/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci+Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM382/YhMJwgqxFvRyhqRNwzJLPYIGNNvdzZb/dcc8USGZdQspcTS5MD4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopHnqVQQsRuxGxOsD/7sxT9JhH/22bY60/g7EQ7cwQctGMoOv2?=
 =?us-ascii?q?rIrNrrLqcTUPu4zKjOzTXNdfNZwyry55bSfR88u/2MWqhwccXIxEQpCgjLjU2Q?=
 =?us-ascii?q?pJT7Mz+J0ukBqXWX4uR+We61lmIqqB19riKuy8oukoXFmI0YxkrZ+Sh33oo5P8?=
 =?us-ascii?q?O0RFN5bNK+DZdcqz2WOo1rSc04WW5oojw1yrgetJ67YicKzJMnygbBa/yIbYeI?=
 =?us-ascii?q?+AjvVOWPLjdignJqZra/iwy18Ui6xe3wTsi00FBUoSpZitTAqGwB2hjJ5sSaRP?=
 =?us-ascii?q?Zx4F2t1SuM2gzP8O1JIEI5mbLeK5E7w74wkpQTsV7EHi/zgEj2iK6WdkM5+umn?=
 =?us-ascii?q?8ujnYavppoWaN4BqjgHyK6Mum8K5AesmKAgDRHab+eui273550H5Q6tFjucwkq?=
 =?us-ascii?q?bHtJDWP8MbprS2AwNNyIYs9w6/Dyu60NQfhXQHKFNFeBGZgITzNFDOPev1DfO+?=
 =?us-ascii?q?g1SqjTdqyOrKPrznApXRMHfDlK3tcqp6605Z0AAz18xQ54pICrEdJ/L+Qk/xu8?=
 =?us-ascii?q?bZDh8lKQO0xPzrCNVg1owEX2KPDbSUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YZaOpx4cYaGikHvR6JEWUeXjsgtAfHmsQvQo+S+rqiFuFUTNIY3ayXq?=
 =?us-ascii?q?Q85iw0CY68DIfDQJytj6KF3CuhApJWYWVGAEiWEXj0b4WER+sMaCWKL8B7iTwE?=
 =?us-ascii?q?Vb+hS4w72RG0rgD6yaFqLu7V+i0eqJLi28J55+zVlREu6zN0C96R3H2KT2Fxhm?=
 =?us-ascii?q?kIXSM53LhjoUxhzVeOyat4jOZeFdBJ4/NJUx01NZjTz+FhD9DyWwTBfsqGSVq8?=
 =?us-ascii?q?Q9WmBy0xQcw1w9MUf0l9HNCihAjZ3yW2G78Vi6CLBJss/63BxXfxOdhyx2zG1K?=
 =?us-ascii?q?Y7iVkmWdVANWuhiq579AjTAorJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnXy9BR?=
 =?us-ascii?q?KJxrOKcYrrdH8R3CTbCEgYjQ8T+WyKOhQ5Bieku2jeFiBhFUrzY0Pw9ulzsG+7?=
 =?us-ascii?q?Tk4xzwGNc01h17q09gQJhfCGTPMTxLYEuCYnqzV7B1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYi8cqqG0lzQVsJqOYyl9O?=
 =?us-ascii?q?bC6Y0o3qNb3RKWny+w6vZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3prHHYiUn+4zYz3xtMamuvT/E1NIkH+8lyhemf9dC?=
 =?us-ascii?q?P6KIDg7yE8sGB8ewLOwmgUSmbhUBPOpK7q47I9umd+ea2K6sJOtghjOmgnhd74?=
 =?us-ascii?q?Bnz02M8DBwSujW0JYfwvGUxxeIWC34jFi8rM/3g4dEZTcJE2q7yCjkApNRZ6Jo?=
 =?us-ascii?q?cYYKD2euP9O4xtFki5HxXH5Y8UapB0ka18+xZRqSc1v90BVQ1EQWu3CmmTG0zy?=
 =?us-ascii?q?dpkzEvtaef2C3Ow+L/dBsIIGJLRW9ijUvyLoiwldwVQE+obw0xnhu/+Un637Rb?=
 =?us-ascii?q?pLh4L2TLQ0dHZTL2L2JhUqu3rLaCeNRA6JArsSVWVuSzf1aaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRSlihjnQHFS8?=
 =?us-ascii?q?Pdip/dOPmpfHs+C+UX+hV5JJfSnqy4OAqDW05WlwDRKjmPCzn8XtERIm3i/jy9?=
 =?us-ascii?q?lqSSLIoQ7/Yobx1qS2K+JnflRyC1/65Mp3AYV+koo2hJEN1nkWnJSV/XwbkWjt?=
 =?us-ascii?q?NdVXw77xbH0IRTQT2d7a/BDl2FF/LnKO34/5U3Sdwsh7aNWgbGIZxDk979xUB6?=
 =?us-ascii?q?eO97NLgzF1olWjoALVYPh9mCodyPQ05H4bheEJpBQiziGHDr8OGklYODTmlw6U?=
 =?us-ascii?q?4NCmsKVXeGGvfKCs1Ep5mNCtFrCDrRtaWHbkYZciBi5w4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj0oqgs4iAL2Vt4bi1?=
 =?us-ascii?q?AhpFNjDuY8MT+zftjbtRn8qM3oCvGIlhFSsPXJfyUf2oFzcSv+z9NwmSCD08tm?=
 =?us-ascii?q?ubGb3HEA+d8khmqmzAE4uxO3GLPnUZzshiRBqAJExZmg8URy43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/0fUMcuD7uJqAi?=
 =?us-ascii?q?FX5JuhoBaWKmycYQRIAnoEWkiFB1DlI7mv6sPM8+meBuqiMfTOZa+CpvBZV/eN?=
 =?us-ascii?q?3ZivyJdp/y6QNsWTOXlvF/071VRCXXB6GMTZmi8DSy8NlyLKYM6Uug28+jBsrs?=
 =?us-ascii?q?2k9PTrWQTv5ZaACrdIMNVv/Qy2jrmHN+KKmCl5LjNY3IsWxXDU0LgfwEISiyZ2?=
 =?us-ascii?q?eja3DLQPrjTNQ7zQm6NNCx4bajh+NM9J76I6wwlMNtTXitLz1r5kkPE1D01JWk?=
 =?us-ascii?q?DmmsGsfcYKOX2yNEvbBEaXM7SLPSHLw8DyYa+mVbJclvlbtx2utjadCELjOjWD?=
 =?us-ascii?q?lz/0VxGgK+1MjSebPABAt4G5aBpiFW/jTNf+YB2hLNB3lSE2waEzhn7SNW8TKz?=
 =?us-ascii?q?58c0ZMrr2W9SxZg/V/FHZH7npqNuSEnyeZ7+/FKpcZq/drAyJ0l/5E73Q+0bda?=
 =?us-ascii?q?8CZERPkm0BfV+9JnvVzgkuCJ0TdheBtItjtPwomMuAEqPbjF8bFDVGzC8RZL6n?=
 =?us-ascii?q?+fT1wSqsdoEM/HuqZe0NHDmav/bjBY/IH658wZUvDZNM+deEggMx7yBCTdRF8d?=
 =?us-ascii?q?QCKmL3P3hkpTivie+3SZ6J8gpc6/y9I1VrZHWQltRbshAUN/EYlaLQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAAAOZAVch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBAYNqFRKDeYh3iy2CIZc0gXEuEwGICSI1CA0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpIwxCARABgWIigmUDAwECIAQZAQE3AQUJAQEkAgUhAgIDDB0rBxIFg?=
 =?us-ascii?q?xyCAgWlF3B8DCeCdgEBBYJEhFgIgQuLEReBQD+MKIJXiQ4klwYKCYIjjw4jkSU?=
 =?us-ascii?q?BiQSRMQKCCU0wCIMnghsJAxeIXoVAPzKBBQEBhUCFFwEB?=
X-IPAS-Result: =?us-ascii?q?A0AnAAAOZAVch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBAYN?=
 =?us-ascii?q?qFRKDeYh3iy2CIZc0gXEuEwGICSI1CA0BAwEBAQEBAQIBEwEBAQoLCQgpIwxCA?=
 =?us-ascii?q?RABgWIigmUDAwECIAQZAQE3AQUJAQEkAgUhAgIDDB0rBxIFgxyCAgWlF3B8DCe?=
 =?us-ascii?q?CdgEBBYJEhFgIgQuLEReBQD+MKIJXiQ4klwYKCYIjjw4jkSUBiQSRMQKCCU0wC?=
 =?us-ascii?q?IMnghsJAxeIXoVAPzKBBQEBhUCFFwEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="55865326"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 09:15:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727009AbeLCROr (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 12:14:47 -0500
Received: from merlin.infradead.org ([205.233.59.134]:36688 "EHLO
        merlin.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726997AbeLCROr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 12:14:47 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=merlin.20170209; h=Content-Type:MIME-Version:References:
        Subject:Cc:To:From:Date:Message-Id:Sender:Reply-To:Content-Transfer-Encoding:
        Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
        Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=htZ08rlxgS2BEec6pWnM6IPnKncVCK07MaVOAwK8DCU=; b=ys8dXP2jF6pNUrWZGLgUD6+8mK
        vXmEIJFGUaTHENum4RAfeGYXRcXKTPdVV6pKTU5BO+wiafIUy+aVlHmZvCJgxAIG5irdD1SQ88oDA
        0I3GCN2JyiRM27geRlj3rw2hXyidQJkrorKANmJJlJr+ULMA3sXBbGjibGj28T4brvZ8kMXvysDGo
        B8NJqIbbVhibPrbAkIE6yegfePd/ikVKuAPjet7cMylLWJ69PfE/Z7cjGQ9vaQH0DWtZgaJQuH888
        JqEEugA59M+ftHVEiVjl05sCGzMz+qN52chPQeJxjKCD0sx96aTczwxh0xlhxh1Ck1XHGpoDZ8xse
        5Sezr5FA==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by merlin.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gTrni-0001H9-1s; Mon, 03 Dec 2018 17:14:39 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 0)
        id 3460C2029F4CD; Mon,  3 Dec 2018 18:14:26 +0100 (CET)
Message-Id: <20181203171043.626999883@infradead.org>
User-Agent: quilt/0.65
Date: Mon, 03 Dec 2018 18:03:52 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: dave.hansen@intel.com, luto@kernel.org, peterz@infradead.org
Cc: x86@kernel.org, Tom.StDenis@amd.com, linux-kernel@vger.kernel.org
Subject: [RFC][PATCH 09/10] x86/mm/cpa: Better use clflushopt
References: <20181203170343.054618965@infradead.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Currently we issue an MFENCE before and after flushing a range. This
means that if we flush a bunch of single page ranges -- like with the
cpa array, we issue a whole bunch of superfluous MFENCEs.

Reorgainze the code a little to avoid this.

Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
---
 arch/x86/mm/pageattr.c |   29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -251,15 +251,7 @@ static unsigned long __cpa_addr(struct c
  * Flushing functions
  */
 
-/**
- * clflush_cache_range - flush a cache range with clflush
- * @vaddr:	virtual start address
- * @size:	number of bytes to flush
- *
- * clflushopt is an unordered instruction which needs fencing with mfence or
- * sfence to avoid ordering issues.
- */
-void clflush_cache_range(void *vaddr, unsigned int size)
+static void clflush_cache_range_opt(void *vaddr, unsigned int size)
 {
 	const unsigned long clflush_size = boot_cpu_data.x86_clflush_size;
 	void *p = (void *)((unsigned long)vaddr & ~(clflush_size - 1));
@@ -268,11 +260,22 @@ void clflush_cache_range(void *vaddr, un
 	if (p >= vend)
 		return;
 
-	mb();
-
 	for (; p < vend; p += clflush_size)
 		clflushopt(p);
+}
 
+/**
+ * clflush_cache_range - flush a cache range with clflush
+ * @vaddr:	virtual start address
+ * @size:	number of bytes to flush
+ *
+ * clflushopt is an unordered instruction which needs fencing with mfence or
+ * sfence to avoid ordering issues.
+ */
+void clflush_cache_range(void *vaddr, unsigned int size)
+{
+	mb();
+	clflush_cache_range_opt(vaddr, size);
 	mb();
 }
 EXPORT_SYMBOL_GPL(clflush_cache_range);
@@ -339,6 +342,7 @@ static void cpa_flush(struct cpa_data *d
 	if (!cache)
 		return;
 
+	mb();
 	for (i = 0; i < cpa->numpages; i++) {
 		unsigned long addr = __cpa_addr(cpa, i);
 		unsigned int level;
@@ -349,8 +353,9 @@ static void cpa_flush(struct cpa_data *d
 		 * Only flush present addresses:
 		 */
 		if (pte && (pte_val(*pte) & _PAGE_PRESENT))
-			clflush_cache_range((void *)addr, PAGE_SIZE);
+			clflush_cache_range_opt((void *)addr, PAGE_SIZE);
 	}
+	mb();
 }
 
 static bool overlaps(unsigned long r1_start, unsigned long r1_end,


