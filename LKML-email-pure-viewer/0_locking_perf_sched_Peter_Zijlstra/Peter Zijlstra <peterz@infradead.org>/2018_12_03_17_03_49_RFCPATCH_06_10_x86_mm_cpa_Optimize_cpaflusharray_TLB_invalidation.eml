Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:55:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6729D580375;
	Mon,  3 Dec 2018 09:15:08 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 03 Dec 2018 09:15:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AjrHdHhz4SJ6u2ffXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4SLPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiy?=
 =?us-ascii?q?kIOTA5/m/Jl8Jwgq1Urw66pxxnwYPZe52VOOZwc6/BYd8XX2hMU8BMXCJBGIO8?=
 =?us-ascii?q?aI4PAvIbM+lGs4nyuUEOpga9CgmtBuPvziRIhmPs3aIgzu8sFhnG0xI8H90Qqn?=
 =?us-ascii?q?TVrc74NKYUUeC71qnH1yjMYO1M1jjg8oTIdQohof6VUL92bMHfylEvGhvbglmM?=
 =?us-ascii?q?rYHpJS6Z2+oTv2SB8uZtVv6jh3QmpgxzujSj2MghhpPUio8b1FzI7zt1zJs3KN?=
 =?us-ascii?q?GiVUJ3fcKoHZ1NvC+ALYR2WNktQ2RwtSY61LIGvZm7cTAUyJQo2RHfceaLc4uW?=
 =?us-ascii?q?7RL5UuaePzN4iGhieLKliBa+6UmgyuviWcmoyFtGsDZJn93WunwQ2RHf9NKLRu?=
 =?us-ascii?q?Z+80u9wzqC1gLe5vlBIU8ulKrbL5AhwqQ3lpoWqUnDGi72mEPrjK6Zb0kk+fan?=
 =?us-ascii?q?6/7hYrr4op+QLoh0iw/4MqswgMyyGvo4MgcQUGiB4+i816Ps/Vf/QLpUiv06iK?=
 =?us-ascii?q?7ZsIrVJcgDvK62HxdV0po/6xa4Fzqm1NUYnXoZI15fdxOHkpPkO1XPIPD+EPe+?=
 =?us-ascii?q?jE6gkDZtx/DaILLhBo/BIWTEkLfkZbx98VJTyBIvzdBD4JJZErEBL+jyWk/trt?=
 =?us-ascii?q?PYCQU1Mwypw+n9DtV92ZgTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lXU5g0MSfbG13ZsLb3C1BvZmI0KHbnb2gdcBFmEKvgw5TOHxjF2CUDhTZ2u9Xq?=
 =?us-ascii?q?4m5zE7Dp6mApnHRoy3nLOB2yK7FIVMZm9aElCMDWvod4KcVvgWcyKSIshhkj8e?=
 =?us-ascii?q?Wbi7UYAh1wqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuU99xU2F0aRih/xYFMZc5/VGUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmrOWHpM07LzT02LxJ8lnzXbGz7?=
 =?us-ascii?q?cuj18hTstLNm2mg6p/+hPXB47IlUWZiqmreb4d3C7L6GeM026OsFtEXw53VKXP?=
 =?us-ascii?q?RWofaVfOrdTl+kPCSKejBqk9PQtf18GOMKtKZcfvjVVdWvjjPs/TY2awm2e2GB?=
 =?us-ascii?q?aJyamAbIvse2UBwirdDFIInBwU/XaDLQI+HDuuo3rCDDxyElLie1/s8eh7qHO8?=
 =?us-ascii?q?Uk80zwGLY1d917av/R4Vn/icS/IV3rILoyohrzR0HFCg39PZEdaApgxhfLlCbt?=
 =?us-ascii?q?M5+ltIyWXZtwllNJy6M69inkIecxhwv072zRp3DptPkMc0o3Iq1gZ9Mr+Y305b?=
 =?us-ascii?q?eDOe3pDwPaPXJ3L2/BCuba7Wx17f3MyX+qcJ9PQ3tVHjsBu1GUol9nVty8NV3G?=
 =?us-ascii?q?eE5pXWEAoSVor8U0Yq9xRgu77WeCg854PO2n1qPqm5qTvC29MvBOs4xResZdZf?=
 =?us-ascii?q?MKWYFADsF80WHdShKOsvm1KxdBILIPhS9LIoP8Ohb/aGwq+rM/p6kzK8kGtH55?=
 =?us-ascii?q?px0kSS+CpmS+7ExooKzOuc3gSaSTj8llChssbslIBAZDESGHe/yCf+CI5QYK1y?=
 =?us-ascii?q?YZgECWO0L8KrwdV+gobnW2RE+167G1MGxMipdAKSblz8xwFR1V4boWe6mSu+1D?=
 =?us-ascii?q?F0lzAprqyC3C3B2ejidRwHOnJVS2lml1vjPY+0j9UCVkiycwcpjAel5Vr9x6VD?=
 =?us-ascii?q?pqRwNXPTQURLfyjxNW1iSbG/trmBY85O7pMnryNXXf+4YVCbTL79vhQb3zniH2?=
 =?us-ascii?q?tY2DA0aTWqto/lkBx9jWKXNGxzo2bBecFs2Rff48TRRP5L0ToBXiV4izjXBl6n?=
 =?us-ascii?q?Mtmt/NWUkYrDs++kW2KgUJ1TbTfkzYeauCSn4m1qBAW1n+qvld3/DQg6zSj72s?=
 =?us-ascii?q?FpVSrSrRbweInr17mgPuJhcUllH1v868t8GoFjnYo8npAQ2X4GhpqL+XoLi3v8?=
 =?us-ascii?q?MdJe2ajmdnoCWSYLw8LJ4AjiwEBjK3OJx4HjWXmHzMpuecK6Yn8I1SIn9M9FFr?=
 =?us-ascii?q?2U7LNfkCtxo1q4qx/RYPdnkjccz/su9GAVg+UTtAUxySWdB6gYHVNEMiz0ixSI?=
 =?us-ascii?q?89e+ob1LZGaodLi8zkt/ksqnDLGfuQFcQ3f5d4wmHS9x6MV/LV3N3Gfy6oHiZN?=
 =?us-ascii?q?nfc9YTugeInBfHiuhfMIgxmeYShSp7JWL9umUoxPUhghxp2ZG6oZKLK2Fw/K+i?=
 =?us-ascii?q?Bh5YNzv1Z94c+z33jKZemNqW0J6rHpl7BjoLW57oR+qyED0OrfTnKxqOEDokp3?=
 =?us-ascii?q?eZA7XfGBGQ6Fx8o3LTCZyrNGyXJHoEzdVkXhadP1dSgAQVXDU8g544GRqmxM3n?=
 =?us-ascii?q?cEdl+D8R4kT0pQdLyuJtLxP/SHvQpB+0ajcoT5iSNBpX7gZf50fMLMyR9ORzEz?=
 =?us-ascii?q?tD/p2mqgyNJXeWZwBJDWEPR0yFCErvPrio5dnc7eeYAvCyIOfJYbWLseZeTeuH?=
 =?us-ascii?q?xYqz0ot6+DaBLsWPMWdjD/042UpDXGp1G8fDmzUIRCwYiTjNb9OApBqn/i13r8?=
 =?us-ascii?q?a/8OnkWQ715IuPDadSPstr+xysnaiDMOuQjj5jKTlEzpMM2WPIyL8H0VEIliFh?=
 =?us-ascii?q?bCOtHqoAtCLXSKLQm7RaDxoaayN1KctJ4Lgw3ghLOc7HlNz10qR0geIyC1dATV?=
 =?us-ascii?q?bhgN2mZdQWI2GhM1PKHFqLNLWDJTHR3877e7+zSb1Og+VSrBCwvTebE0n+PjWM?=
 =?us-ascii?q?jTXpVhavMf1SgyGfJhBRpIa9chN1A2j5UN3mcgG7MMNwjTAuwbw7nHXKNWsdMT?=
 =?us-ascii?q?h6a0xMr72Q4jlegvVwAGFB6ntlLe+ZmyeW9eXYK5AWsed1DSRwje5V/HM6y74G?=
 =?us-ascii?q?pB1DEfB8hiaUrtdouFyguuiJ1jdjFhFJr3IDgJ+Xum1hNL/f+50GXmzLuFoV4H?=
 =?us-ascii?q?mdEQYipt1rENTjtqlcjN/Vm/HdMjBHpurZ4cYGT/rVKsacLGAoeU7xFSLZFhkt?=
 =?us-ascii?q?TDilL2jTikVR1vaI+SvG/dABtpHwlc9WGfdgX1svG6ZCBw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CpAACgYwVch0O0hNFjHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwEBg2oVEoN5iHeLLYIhmScsEwGICSI3Bg0BAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pIwxCARABgWIigmUDAwECIAQZAQE3AQUJAQEkAgUhAgIDDB0rBxIFgxyCAgWlG?=
 =?us-ascii?q?HB8DCeCdgEBBYJEhFgIgQuLEReBQD+MKIJXiTKXBgoJgiOPDiORJQEsiFiRRYF?=
 =?us-ascii?q?3TTAIgyeCGwwXiF6FQD8ygQUBAYVAhRcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CpAACgYwVch0O0hNFjHQEBBQEHBQGBVAUBCwEBg2oVEoN?=
 =?us-ascii?q?5iHeLLYIhmScsEwGICSI3Bg0BAwEBAQEBAQIBEwEBAQoLCQgpIwxCARABgWIig?=
 =?us-ascii?q?mUDAwECIAQZAQE3AQUJAQEkAgUhAgIDDB0rBxIFgxyCAgWlGHB8DCeCdgEBBYJ?=
 =?us-ascii?q?EhFgIgQuLEReBQD+MKIJXiTKXBgoJgiOPDiORJQEsiFiRRYF3TTAIgyeCGwwXi?=
 =?us-ascii?q?F6FQD8ygQUBAYVAhRcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="42530114"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 09:15:06 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727021AbeLCROs (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 12:14:48 -0500
Received: from merlin.infradead.org ([205.233.59.134]:36686 "EHLO
        merlin.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726945AbeLCROr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 12:14:47 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=merlin.20170209; h=Content-Type:MIME-Version:References:
        Subject:Cc:To:From:Date:Message-Id:Sender:Reply-To:Content-Transfer-Encoding:
        Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
        Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=HhiNqhb3jOvMbUh/hlKKnhM5bKaiR4erfCl/Ys4ZeUs=; b=g+5X5raoUqcvNfcTkh/dWAtP4O
        y8Tf0i5NXkik2toqLLGO5g7cwZtzyKZ9jhtfNTbK2pBuQVksiz3xWgFjLkjf4B1+GduMDTfoL5MRn
        zHx+yoMWfM4qEvbPc1cqhOvzOa5289y4j+9BErzhf6KkHASL9cHoCZp0fayeBrIvap5EepIG4E1Li
        krIxQTJIiQVwqdz9pTyfDYWEC29r0/3bYqPeCvmS362EoA79dJdP9ggGU1BJsUlRXaS/5shr3csel
        NMrIh6RT54g+HBb7zk0B1mivPPQCUoIv49VIoCoRdiqfP5+vsc517TY+bLyLTzuLbb0XdGTeUYmAn
        3jLMLzAQ==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by merlin.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gTrni-0001H7-10; Mon, 03 Dec 2018 17:14:39 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 0)
        id 266DA2029F4C7; Mon,  3 Dec 2018 18:14:26 +0100 (CET)
Message-Id: <20181203171043.430001980@infradead.org>
User-Agent: quilt/0.65
Date: Mon, 03 Dec 2018 18:03:49 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: dave.hansen@intel.com, luto@kernel.org, peterz@infradead.org
Cc: x86@kernel.org, Tom.StDenis@amd.com, linux-kernel@vger.kernel.org
Subject: [RFC][PATCH 06/10] x86/mm/cpa: Optimize cpa_flush_array() TLB invalidation
References: <20181203170343.054618965@infradead.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Instead of punting and doing tlb_flush_all(), do the same as
flush_tlb_kernel_range() does and use single page invalidations.

Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
---
 arch/x86/mm/mm_internal.h |    2 ++
 arch/x86/mm/pageattr.c    |   42 ++++++++++++++++++++++++------------------
 arch/x86/mm/tlb.c         |    4 +++-
 3 files changed, 29 insertions(+), 19 deletions(-)

--- a/arch/x86/mm/mm_internal.h
+++ b/arch/x86/mm/mm_internal.h
@@ -19,4 +19,6 @@ extern int after_bootmem;
 
 void update_cache_mode_entry(unsigned entry, enum page_cache_mode cache);
 
+extern unsigned long tlb_single_page_flush_ceiling;
+
 #endif	/* __X86_MM_INTERNAL_H */
--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -26,6 +26,8 @@
 #include <asm/pat.h>
 #include <asm/set_memory.h>
 
+#include "mm_internal.h"
+
 /*
  * The current flushing context - we pass it instead of 5 arguments:
  */
@@ -346,16 +348,26 @@ static void cpa_flush_range(unsigned lon
 	}
 }
 
-static void cpa_flush_array(unsigned long baddr, unsigned long *start,
-			    int numpages, int cache,
-			    int in_flags, struct page **pages)
+void __cpa_flush_array(void *data)
 {
-	unsigned int i, level;
+	struct cpa_data *cpa = data;
+	unsigned int i;
 
-	if (__inv_flush_all(cache))
+	for (i = 0; i < cpa->numpages; i++)
+		__flush_tlb_one_kernel(__cpa_addr(cpa, i));
+}
+
+static void cpa_flush_array(struct cpa_data *cpa, int cache)
+{
+	unsigned int i;
+
+	if (cpa_check_flush_all(cache))
 		return;
 
-	flush_tlb_all();
+	if (cpa->numpages <= tlb_single_page_flush_ceiling)
+		on_each_cpu(__cpa_flush_array, cpa, 1);
+	else
+		flush_tlb_all();
 
 	if (!cache)
 		return;
@@ -366,15 +378,11 @@ static void cpa_flush_array(unsigned lon
 	 * will cause all other CPUs to flush the same
 	 * cachelines:
 	 */
-	for (i = 0; i < numpages; i++) {
-		unsigned long addr;
+	for (i = 0; i < cpa->numpages; i++) {
+		unsigned long addr = __cpa_addr(cpa, i);
+		unsigned int level;
 		pte_t *pte;
 
-		if (in_flags & CPA_PAGES_ARRAY)
-			addr = (unsigned long)page_address(pages[i]);
-		else
-			addr = start[i];
-
 		pte = lookup_address(addr, &level);
 
 		/*
@@ -1771,12 +1779,10 @@ static int change_page_attr_set_clr(unsi
 		goto out;
 	}
 
-	if (cpa.flags & (CPA_PAGES_ARRAY | CPA_ARRAY)) {
-		cpa_flush_array(baddr, addr, numpages, cache,
-				cpa.flags, pages);
-	} else {
+	if (cpa.flags & (CPA_PAGES_ARRAY | CPA_ARRAY))
+		cpa_flush_array(&cpa, cache);
+	else
 		cpa_flush_range(baddr, numpages, cache);
-	}
 
 out:
 	return ret;
--- a/arch/x86/mm/tlb.c
+++ b/arch/x86/mm/tlb.c
@@ -15,6 +15,8 @@
 #include <asm/apic.h>
 #include <asm/uv/uv.h>
 
+#include "mm_internal.h"
+
 /*
  *	TLB flushing, formerly SMP-only
  *		c/o Linus Torvalds.
@@ -721,7 +723,7 @@ void native_flush_tlb_others(const struc
  *
  * This is in units of pages.
  */
-static unsigned long tlb_single_page_flush_ceiling __read_mostly = 33;
+unsigned long tlb_single_page_flush_ceiling __read_mostly = 33;
 
 void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,
 				unsigned long end, unsigned int stride_shift,


