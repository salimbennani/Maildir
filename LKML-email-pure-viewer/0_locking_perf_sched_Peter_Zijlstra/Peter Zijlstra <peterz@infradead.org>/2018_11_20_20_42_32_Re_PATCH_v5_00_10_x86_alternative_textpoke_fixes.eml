Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:39:19 -0000
Received: from icoremail.net (unknown [209.85.215.173])
	by mail-app4 (Coremail) with SMTP id cS_KCgDHH_K4CfRb2ujfAQ--.33584S3;
	Tue, 20 Nov 2018 21:18:53 +0800 (CST)
Received: from mail-pg1-f173.google.com (unknown [209.85.215.173])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnDEi1CfRbkk5eAA--.3018S3;
	Tue, 20 Nov 2018 21:18:46 +0800 (CST)
Received: by mail-pg1-f173.google.com with SMTP id w7so885185pgp.13
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 05:18:46 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=bDC1jsxvFOd8I5xXFBDzemAk6occ6ogzcepkNcGkf7U=;
        b=itbkkjqF/+URHtT47b7tveV6zdSfZxAL9BjJ6kpWG59khIySBZCYClfnvlWHgbMVqw
         fL8ergSiVCAucA+8K9FKdl98RqimkOscKo9fX4jgh0RSKtP2PdpmUXlOjSwQPXrGUKlV
         ajTWzaeiZtfoJ6W2y+szJGhPMYBbThSL7Z3pMvoTO/c+4wHBi53lVnADhTrbVGqoeYYA
         FRFmWxEf6IZr3pptcBAU5UYYzUqmou3qX9tjW4HkWtEO1cMNShIRIXUt/EH9Uwk+AtHx
         NPyflJA1etS7ezGk3ajCM+nl8a+QiewFFwTcffmPGv+l2LSiTeB08aPCxvXScn/EThfW
         l8Ow==
X-Gm-Message-State: AGRZ1gKe911iZGWp2Ec+JLGNGWv7zHPzb0wh6/7H8GtsXMtZGMBCHqNU
	n1EbeyjT/nOtc5Vr8Ysmq5DM+1QzFTlhXLPYqq+bBOf4LjGVl8A=
X-Received: by 2002:aa7:87ce:: with SMTP id i14mr2167648pfo.20.1542719925771;
        Tue, 20 Nov 2018 05:18:45 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp589621pju;
        Tue, 20 Nov 2018 05:18:44 -0800 (PST)
X-Google-Smtp-Source: AJdET5dgL08rgyW8viklTsnLmpwnm3z/Eszp2A61bG38j5M/HqaVmiVtLJndq9+Kx9opcPAA0mb9
X-Received: by 2002:a65:4946:: with SMTP id q6mr1807409pgs.201.1542719924752;
        Tue, 20 Nov 2018 05:18:44 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542719924; cv=none;
        d=google.com; s=arc-20160816;
        b=R2bPKJJ8/oPC6/znYGld8Sp/Ui/jJ3JVvO+TJaNAto5Diu73cZ3InPp1PP6XW14DUR
         keSiQU6dBdTs8IOldGkepKsgnDN8qyyezo/FqIXYHD+HClZQJKx1HufeEhr8gjlQtyOp
         NdrAMLxz5zT66VDIKv9DT6Teavaw3i4iAgqsUZq6OgbwHd0VTgz45R0/7hZv0Jcgw+qH
         vC6TjALA5iS+jEbPwgw2FY/YMxtRqzGVGn9VkGknFQIB2XJqnKQP/8KWNxkv912mhMuD
         GiUkD1l/N1xbOdLbrMedj/UQEaNERzS+XSiLJtCN2Jim03xNtOXFbswC92ikKfnqhUZP
         E48A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=bDC1jsxvFOd8I5xXFBDzemAk6occ6ogzcepkNcGkf7U=;
        b=JlOeZZgfpqw3Mza0ecBkKrlh7l19YNdt6TANUa8BQAuDEsayLPUuNIgV6TaRziVq9e
         MvEewPhUO1C0dG6rd/+e9TNkS5yCFsAb8eNwhUNkxNi+zH6pSVJRH1LKpQRHOW5GW57m
         o75iBCf506xi8MQZUkCVFeIOL7s0PrpVu5DMGs3eP5v+Jh3i30tScwwMlb3uDPnGE8hY
         5kG0q+Hs/0FvVQXQTvSa3eVIB0ylNdGO0UdHZ0bEqafGhklxIi1nHclNMYrN2H1wThns
         cRodTufGLVrlF6dNtSsCTk9wnUD0WSbAG77QPMHGSudsDO1ywVwrHFV/JqX7r8qYETxe
         eAXA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=fail header.i=@infradead.org header.s=bombadil.20170209 header.b=r9nG6HiW;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id x16-v6si7784737pfm.39.2018.11.20.05.18.30;
        Tue, 20 Nov 2018 05:18:44 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727245AbeKTXMD (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 18:12:03 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:59614 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725843AbeKTXMD (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 18:12:03 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Type:MIME-Version
        :References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=bDC1jsxvFOd8I5xXFBDzemAk6occ6ogzcepkNcGkf7U=; b=r9nG6HiWuCsZQBRPL3NoAUKNO
        nwNXdYVo9SsmR7+Gf7fqwvCtJUA1SXaPrYbZR6irKlSxajJPwW5Rh/ODmQ1ZJ6xBn9lNAt+OzDHPE
        xYqf7fEzv9ssoqqx6JcHG8cAzImyekK7ubZ9bU26hukv2ZbScTCmqfqKR+R7Z84vgskp0fa/Z1Mod
        BRT48rGfLvQun+zMkoVLRnO48LGyfSIHCrmBA6+z4yEjOx3qcqg7m5A5TjQI7s0DWWqjKzv38kvgo
        sXXPZsWIPuSv+33ekrIdirTKVAxNHz+kVCrmt50nCUuvX3UaShkmKTl4i5eGVsVXHuyPlRfSS8jsV
        W2hwkQA2g==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gP5MP-0003Qm-V4; Tue, 20 Nov 2018 12:42:49 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
        id 51D6F2029F87F; Tue, 20 Nov 2018 13:42:32 +0100 (CET)
Date: Tue, 20 Nov 2018 13:42:32 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: Nadav Amit <namit@vmware.com>
Cc: Ingo Molnar <mingo@redhat.com>, linux-kernel@vger.kernel.org,
        x86@kernel.org, "H. Peter Anvin" <hpa@zytor.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        linux_dti@icloud.com, linux-integrity@vger.kernel.org,
        linux-security-module@vger.kernel.org
Subject: Re: [PATCH v5 00/10] x86/alternative: text_poke() fixes
Message-ID: <20181120124232.GK2131@hirez.programming.kicks-ass.net>
References: <20181113130730.44844-1-namit@vmware.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181113130730.44844-1-namit@vmware.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnDEi1CfRbkk5eAA--.3018S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWw48ZrW5KF4DAFW7uw4DJwb_yoWrWw4kpF
	WUKwn5JrZ8GFykXwn7Aw4jvr1jywsagr1UJ3yDKwnFk3W3Wr9rtr1kC3Wjv395KFW8K3yY
	yFWYgr98Zr13t3JanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Cr0_Gr1UMcvjeVCFs4IE7xkEbVWUJVW8JwCjxxvEa2IrMx
	kF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6ry8MxkI
	7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW5JVW7JwCYIxAIcVC0I7IYx2IY6x
	kF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2z280aVCY1x02
	67AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij28IcwCF72vE77
	IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18MI8I3I0E7480
	Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr41lIxAIcVCF04
	k26cxKx2IYs7xG6r1I6r4UYxBIdaVFxhVjvjDU0xZFpf9x07bvYFtUUUUU=

On Tue, Nov 13, 2018 at 05:07:20AM -0800, Nadav Amit wrote:
> v4->v5:
> - Fix Xen breakage [Damian Tometzki]
> - BUG_ON() when poking_mm initialization fails [PeterZ]
> - Better comments on "x86/mm: temporary mm struct"
> - Cleaner removal of the custom poker

I'll re-iterate my position: it is impossible for the text not to match,
and if it somehow does not match, something went sideways in an
unrecoverably fashion.

text_poke() must not fail, ever. If it does, our text is inconsistent
and we must abort/panic/bug.

The only way I will accept anything else is if someone can come up with
a sensible scenario of text_poke() failing and recovering from it.
AFAICT there is no possible way to gracefully recover.

Consider a jump label with multiple patch sites; we patch the first,
then fail. In order to restore to a sane state, we must undo the
patching of the first, but undoing text_poke() fails again. Then
what?

Allowing text_poke() to fail only creates an unfixable mess. Esp. since
there is no sane scenario under which is can fail.

---


--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@ -695,7 +695,7 @@ void __init_or_module text_poke_early(vo
 __ro_after_init struct mm_struct *poking_mm;
 __ro_after_init unsigned long poking_addr;
 
-static int __text_poke(void *addr, const void *opcode, size_t len)
+static void __text_poke(void *addr, const void *opcode, size_t len)
 {
 	bool cross_page_boundary = offset_in_page(addr) + len > PAGE_SIZE;
 	temporary_mm_state_t prev;
@@ -731,13 +731,10 @@ static int __text_poke(void *addr, const
 	 * The lock is not really needed, but this allows to avoid open-coding.
 	 */
 	ptep = get_locked_pte(poking_mm, poking_addr, &ptl);
-
 	/*
-	 * If we failed to allocate a PTE, fail. This should *never* happen,
-	 * since we preallocate the PTE.
+	 * This must not fail; preallocated in poking_init().
 	 */
-	if (WARN_ON_ONCE(!ptep))
-		goto out;
+	VM_BUG_ON(!ptep)
 
 	pte = mk_pte(pages[0], PAGE_KERNEL);
 	set_pte_at(poking_mm, poking_addr, ptep, pte);
@@ -795,12 +792,14 @@ static int __text_poke(void *addr, const
 	unuse_temporary_mm(prev);
 
 	pte_unmap_unlock(ptep, ptl);
-out:
-	if (memcmp(addr, opcode, len))
-		r = -EFAULT;
+
+	/*
+	 * If the text doesn't match what we just wrote; something is
+	 * fundamentally screwy, there's nothing we can really do about that.
+	 */
+	BUG_ON(memcmp(addr, opcode, len));
 
 	local_irq_restore(flags);
-	return r;
 }
 
 /**
@@ -814,21 +813,10 @@ static int __text_poke(void *addr, const
  * in a way that permits an atomic write. It also makes sure we fit on a single
  * page.
  */
-int text_poke(void *addr, const void *opcode, size_t len)
+void text_poke(void *addr, const void *opcode, size_t len)
 {
-	int r;
-
 	lockdep_assert_held(&text_mutex);
-
-	r = __text_poke(addr, opcode, len);
-
-	/*
-	 * TODO: change the callers to consider the return value and remove this
-	 *       historical assertion.
-	 */
-	BUG_ON(r);
-
-	return r;
+	__text_poke(addr, opcode, len);
 }
 
 /**
@@ -847,7 +835,7 @@ int text_poke(void *addr, const void *op
  */
 int text_poke_kgdb(void *addr, const void *opcode, size_t len)
 {
-	return __text_poke(addr, opcode, len);
+	__text_poke(addr, opcode, len);
 }
 
 static void do_sync_core(void *info)
--- a/arch/x86/kernel/kgdb.c
+++ b/arch/x86/kernel/kgdb.c
@@ -767,10 +767,8 @@ int kgdb_arch_set_breakpoint(struct kgdb
 	 */
 	if (mutex_is_locked(&text_mutex))
 		return -EBUSY;
-	err = text_poke_kgdb((void *)bpt->bpt_addr, arch_kgdb_ops.gdb_bpt_instr,
+	text_poke_kgdb((void *)bpt->bpt_addr, arch_kgdb_ops.gdb_bpt_instr,
 			     BREAK_INSTR_SIZE);
-	if (err)
-		return err;
 	bpt->type = BP_POKE_BREAKPOINT;
 
 	return err;
@@ -788,11 +786,8 @@ int kgdb_arch_remove_breakpoint(struct k
 	 */
 	if (mutex_is_locked(&text_mutex))
 		goto knl_write;
-	err = text_poke_kgdb((void *)bpt->bpt_addr, bpt->saved_instr,
-			     BREAK_INSTR_SIZE);
-	if (err)
-		goto knl_write;
-	return err;
+	text_poke_kgdb((void *)bpt->bpt_addr, bpt->saved_instr, BREAK_INSTR_SIZE);
+	return 0;
 
 knl_write:
 	return probe_kernel_write((char *)bpt->bpt_addr,
