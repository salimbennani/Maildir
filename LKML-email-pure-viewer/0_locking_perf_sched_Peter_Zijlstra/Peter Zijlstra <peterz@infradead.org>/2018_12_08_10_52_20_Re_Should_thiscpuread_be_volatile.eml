Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:55:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5663B5803E4;
	Sat,  8 Dec 2018 02:55:42 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 02:55:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAn7+2hDNeRfcU0sDn+KFUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+p86wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobzqFkBohWlBQm0Bu7i0SNIi3zq0aEmz+gsCwPL0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8IX++r0KnH0y/DZO5V1jf86ojIdgshoe2WXb1qbMHczlEvGB3ZjlqO?=
 =?us-ascii?q?s4zkPiiY1uULs2iV9epvT/+ghHA9pA5suDSvwd0siobQi48T11vK+yJ5wIMvKt?=
 =?us-ascii?q?25Tk52edukH4FKty6GLYd2Q8UiQ29vuCs817YIuoa7cTAUxJg7wxPTceGLfoaW?=
 =?us-ascii?q?7h75SeqcIit0iGhkdb+9nxq+70etxvfhWsS6zlpGtDRJnsTOu3wXyhDf9tSLR/?=
 =?us-ascii?q?1g9Um7wzmPzRrc6uRcLEA0i6XbL5khz6Yulpocr0vDBDX6mEbog6+McEUr5Oyo?=
 =?us-ascii?q?5/7gYrX8qZ+QL450igfgPaQygsGzH/g0PwwUU2SG9+mwyqfv8VD6TblWlPE7k6?=
 =?us-ascii?q?vUvIjfJcsBp665BwFV0pwk6xa6Fzqm1NUYnX8aLFNKYR6HjJbmO0vIIP/mCfez?=
 =?us-ascii?q?mlOskTltx//YJL3sGYvNLnfdn7f7Z7p96FBTyBA1zd9B45JYELYBIOj8WkPprt?=
 =?us-ascii?q?zXEgc5MxCow+bgENh90oIeWWGRDaODP6LSrESF5uYuI+mKeY8UtyzxK/kj5/7y?=
 =?us-ascii?q?k3A5nUURcrWu3ZsScHq4BOhpI12FYXrwhdcMCWcKsRA/TOz2klKCViRfZ3avX6?=
 =?us-ascii?q?0m4DE7B5mrDYPCRoCrnbyA0z23HpxQZmBaFF+MFW3keJmDW/cJcCiSONNukiQY?=
 =?us-ascii?q?Vbi9TI8szROutAjkxLZ9LerU/SsYtZTk1NVu4+3TlBcy9SF7DsiH0mGNSX10kX?=
 =?us-ascii?q?0MRzMswK9/pkl9wE+Z0adkm/xYCcBT5/RRXwggLp7cz+t6C9PoVgLbZNiJSk2r?=
 =?us-ascii?q?QtGnATE3U9IwzMUCY0d7G9W+kB/D2zCmDKMSl7yOHJY06L7T32DtJ8ZhzHbLzK?=
 =?us-ascii?q?ohgEMgQsdVMW2mh7Rw9w7cB4PSl0WZlqCqdbkT3SLX9WeDy3aOs19cUAJqTarF?=
 =?us-ascii?q?WnUfbFPMrdvl/kPCU6OuCbM/PwRc08GCNLVFZsfpjVpcQvfjI8rRY2S2l2e0Bh?=
 =?us-ascii?q?aIw7eMYZHue2Uc2iXdFUcFnxoS/XaAKQgxGCOhr3jCAzxpEFLle1ns/vVmqHOn?=
 =?us-ascii?q?Uk80yBmHYFB72Lqr5BEZn/ycROkV3rIfpighrS55HFK839LQFtqBqBBtfKRaYd?=
 =?us-ascii?q?Mh/lhH0XjVuBB6PpylN6pinEIRcxxrv0Py0BV6EplAkckvrHMt0ApyKaKZ3Eld?=
 =?us-ascii?q?dz+C2pDwILnXKmj0/BCgcKPW3lDe0NCL+qYA8vg4qlPjvB23GUom6Xloz95V03?=
 =?us-ascii?q?6E7JXQEAUSSY7xUlow9xVivb7aZjcy5ozK2nxsK6W7qSLC1M8zC+sjyRageMlf?=
 =?us-ascii?q?PbiAFA/zFc0aGsevJPYrm1ivchILIuRS+LQoMMOhcvuMwLSrM/p4nDK6kWRH55?=
 =?us-ascii?q?hw00KR9yZmVuHExZcEw/GC0QuBWDfxl1OhssHxmYBZajAeBGu/yS74BIFPYq1+?=
 =?us-ascii?q?Z5oECWCrI8ev3NVxm4btW2JE9F6kH14Gws6pdgaIYFznwAJQ0l4boXq5liuizj?=
 =?us-ascii?q?x4ii0mobCb3CPT3evibh0HOmhQSWlmjFfsJ5W0jt8AUEipaQgpiAWq5ULgy6dH?=
 =?us-ascii?q?o6R/KnHZQV1UcCjuM2FiTqywu6KCYs5O8p8psT9bUP+hYVCcUbP9pxoa0yX+H2?=
 =?us-ascii?q?pR3jw7djequonnkBx+km6SMHFzrH/Bc8Fq2Rjf/MDcReJW3jceRil3kyPXBlu/?=
 =?us-ascii?q?P9mu59mUjI3MsuO9V2KgUJ1cby/rwJiEtCu6421qHBK+k+qymt3hDQg1zyv728?=
 =?us-ascii?q?N2WiXPqRb2epPr2LiiMeJ7YkloA0fx6spgFYF5iIcwhpAQ2X4Bi5WR/HoHl3rz?=
 =?us-ascii?q?MNpB1aL/anoNWSAEw9rP7Af5301jK2qDx5jlWXWF3sthe966b3sV2i0n7sBGEq?=
 =?us-ascii?q?eU7KFekitzrVq1tgbRYfl7njcAxvoi8n8ag+cVuAUzyiWRGKwdHU5dPSb0jRSH?=
 =?us-ascii?q?88i+rLlLZGaoabWw0Ut+ndO7A72YrABTRm35eos8Ei9q9cpwLkjM0HLo54Hged?=
 =?us-ascii?q?nQa88TtxKOnxfBiehVNIw+lv4QiSV7PmL9uGUvy/Qnghx2wZG6oI+HJn1x/KK+?=
 =?us-ascii?q?Bx5ULDz0aNkV+jHwlqZehceW0purHpVgHDULQZTpQeipEDIUqfToKQKOHCcgpX?=
 =?us-ascii?q?ecHLrVBRWf51t+r3LTD5CrMGmaK2IDwtVlQBmdOVZTgAQJXDghmp45FwaqxNHu?=
 =?us-ascii?q?cUtj5zAR4EL4pQVIyu5yKxb/VWLfrh+yajgoUJifMAZW7gZa6kfXK8Oe6/x8Hz?=
 =?us-ascii?q?pC8p29tgCNKXGbZwdVDWEPQEOEHEvuPr2v5dnG7uiZCfCyL/rIYbWSt+NeU+2E?=
 =?us-ascii?q?yo6o0otj5zyMLNmAPmF+D/0n3UpORXB4G8PEmzUWViwYjSTNY9SApBe7/C13od?=
 =?us-ascii?q?uy8PDqWALp+IuOBKFeMdRp+xCqn6iDM/Scizp+KTZdzpkM32PHyKAD3F4OjCFj?=
 =?us-ascii?q?bzmtHqoBtS7OT6LQm7VbDx0BayN0O8tH8bg83hRWOcPAjtP117h4juM6CltfVF?=
 =?us-ascii?q?zhnN2patIOI22nKFzHA0OLPqycJTLX28H3fb+8SbpIgepOqh2/oiybHFHjPziZ?=
 =?us-ascii?q?kznpVguiMeVNjCGdIRxft5uxchdrCWj/Ut3mbge3P8NwjT0z2bc0nG/FNXYAMT?=
 =?us-ascii?q?hgdENAtqGQ7SJdgvllB2NN9GZqLemalCaf9OTYLpcWsf12AiV7je5a4XI6y6dL?=
 =?us-ascii?q?4yFAXvB6hCzSrtt2qVG8juaP0iZnUAZJqjtThIOEp0NiOaDY9plGQXnF/RIN4n?=
 =?us-ascii?q?+WCxQFvNZlDtzvu6ZNytnAjq7zKTFC887K8ssYHcTbNMWHMH9yeSbuTRjdAAIb?=
 =?us-ascii?q?BReuNH2X00pUnPiMsHSQr4QSpZ3lmZ5IQbheAg8bDPQfX3xoANEYaKV2XDc/ja?=
 =?us-ascii?q?SSxJoQ6Gaztgv5RcNUpJnLW/ueR/L1J2DK3vF/exIUzOagfswoPYrh1hknMwEi?=
 =?us-ascii?q?kQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAABUogtch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBgmmBAieDeoh4izKCDRSXPYFuMQsIAYddIjY?=
 =?us-ascii?q?HDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAgEBAiAECwENAQE3AQQBC?=
 =?us-ascii?q?QEBChoCBSECAgMMBRgxGIMcAYF5CAUKpiRwfDOCdgEBBYcsAwWBC4sXF4FAP4Q?=
 =?us-ascii?q?jgx4EGIRLMYImiymVOQoJgiWEY4o7CxiROyyNZ4xoDYF5TTAIgycTgggJAxeGI?=
 =?us-ascii?q?4I7hUA/MoEFAQGLRwEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAABUogtch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBgmmBAieDeoh4izKCDRSXPYFuMQsIAYddIjYHDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCgsJCCkjDII2JAGCYgECAgEBAiAECwENAQE3AQQBCQEBChoCBSECAgM?=
 =?us-ascii?q?MBRgxGIMcAYF5CAUKpiRwfDOCdgEBBYcsAwWBC4sXF4FAP4Qjgx4EGIRLMYImi?=
 =?us-ascii?q?ymVOQoJgiWEY4o7CxiROyyNZ4xoDYF5TTAIgycTgggJAxeGI4I7hUA/MoEFAQG?=
 =?us-ascii?q?LRwEB?=
X-IronPort-AV: E=Sophos;i="5.56,330,1539673200"; 
   d="scan'208";a="54368386"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 02:55:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726204AbeLHKwi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 05:52:38 -0500
Received: from merlin.infradead.org ([205.233.59.134]:45078 "EHLO
        merlin.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726111AbeLHKwi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 05:52:38 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=merlin.20170209; h=In-Reply-To:Content-Transfer-Encoding:
        Content-Type:MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:
        Sender:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
        Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=NVvPx3iDHeHdNxEt/jMkPVpYf00zjygi86WbaLVtTko=; b=vkBRGpbf0hulaEwho0pic6HK8/
        bTXTQ++/fTK+ayvldzDCrc8czDT+fXzid0puCjq2d/Vh3y6NC/LuEkyyFVf7ZYLw2sRbDBJzkj0Qp
        xijaOUoDcW01Xee42NBjugUy3DaaLysE2QwC1YJRk0huCPUXk278KXlLkYtnJguomd2Se15qU1p63
        w5uRAg1Ss3tTXyEZ8uvTeK/S65mKr0DbTdLckPvPTQcZR+DteoBqWI1vHyuF05uabmurlf1uK1Cxe
        M2j/szHMRocCjx/hTDcrwngh3WBtCPA76y8/0cc/m5g7vxaB//IvkhL3jKTBleEgi32MYjOyW7+Em
        D702CVEg==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by merlin.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gVaDg-0001yl-Eg; Sat, 08 Dec 2018 10:52:25 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
        id 8A4D920725F5D; Sat,  8 Dec 2018 11:52:20 +0100 (CET)
Date: Sat, 8 Dec 2018 11:52:20 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: Nadav Amit <nadav.amit@gmail.com>
Cc: Matthew Wilcox <willy@infradead.org>,
        Vlastimil Babka <vbabka@suse.cz>,
        Linux-MM <linux-mm@kvack.org>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>,
        Ingo Molnar <mingo@redhat.com>,
        Thomas Gleixner <tglx@linutronix.de>
Subject: Re: Should this_cpu_read() be volatile?
Message-ID: <20181208105220.GF5289@hirez.programming.kicks-ass.net>
References: <20181203161352.GP10377@bombadil.infradead.org>
 <4F09425C-C9AB-452F-899C-3CF3D4B737E1@gmail.com>
 <20181203224920.GQ10377@bombadil.infradead.org>
 <C377D9EF-A0F4-4142-8145-6942DC29A353@gmail.com>
 <EB579DAE-B25F-4869-8529-8586DF4AECFF@gmail.com>
 <20181206102559.GG13538@hirez.programming.kicks-ass.net>
 <55B665E1-3F64-4D87-B779-D1B4AFE719A9@gmail.com>
 <20181207084550.GA2237@hirez.programming.kicks-ass.net>
 <C29C792A-3F47-482D-B0D8-99EABEDF8882@gmail.com>
 <C064896E-268A-4462-8D51-E43C1CF10104@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <C064896E-268A-4462-8D51-E43C1CF10104@gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 07, 2018 at 04:40:52PM -0800, Nadav Amit wrote:

> > I'm actually having difficulty finding the this_cpu_read() in any of the
> > functions you mention, so I cannot make any concrete suggestions other
> > than pointing at the alternative functions available.
> 
> 
> So I got deeper into the code to understand a couple of differences. In the
> case of select_idle_sibling(), the patch (Peter’s) increase the function
> code size by 123 bytes (over the baseline of 986). The per-cpu variable is
> called through the following call chain:
> 
> 	select_idle_sibling()
> 	=> select_idle_cpu()
> 	=> local_clock()
> 	=> raw_smp_processor_id()
> 
> And results in 2 more calls to sched_clock_cpu(), as the compiler assumes
> the processor id changes in between (which obviously wouldn’t happen).

That is the thing with raw_smp_processor_id(), it is allowed to be used
in preemptible context, and there it _obviously_ can change between
subsequent invocations.

So again, this change is actually good.

If we want to fix select_idle_cpu(), we should maybe not use
local_clock() there but use sched_clock_cpu() with a stable argument,
this code runs with IRQs disabled and therefore the CPU number is stable
for us here.

> There may be more changes around, which I didn’t fully analyze. But
> the very least reading the processor id should not get “volatile”.
> 
> As for finish_task_switch(), the impact is only few bytes, but still
> unnecessary. It appears that with your patch preempt_count() causes multiple
> reads of __preempt_count in this code:
> 
>        if (WARN_ONCE(preempt_count() != 2*PREEMPT_DISABLE_OFFSET,
>                      "corrupted preempt_count: %s/%d/0x%x\n",
>                      current->comm, current->pid, preempt_count()))
>                preempt_count_set(FORK_PREEMPT_COUNT);

My patch proposed here:

  https://marc.info/?l=linux-mm&m=154409548410209

would actually fix that one I think, preempt_count() uses
raw_cpu_read_4() which will loose the volatile with that patch.
