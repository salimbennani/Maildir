Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:18:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 929CC580213;
	Fri, 30 Nov 2018 06:06:26 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 06:06:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZ0aQ+RwTdBD8r6jXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4SIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiy?=
 =?us-ascii?q?kIOTA5/m/Jl8Jwgq1Urw68qBxk247ZYpqYNOZicq7TYd8WWXBMU8RXWidcAo28?=
 =?us-ascii?q?dYwPD+8ZMOhCsYb9u0UBrQGjDgavBePvyDtIhmTq3a0gyesqDAbL3BQ+ENISrn?=
 =?us-ascii?q?vUttT0ObwTUeCzwqnI1y/MYO5I1jjn9YfEaBchoeuDXb9pd8fa1EohFxvdg1mO?=
 =?us-ascii?q?tYDoOymZ2vkDvmSF9eZsSOGih3I9pwxwoDWj3tkgh4bTio4IxF3I6z91zJgoKd?=
 =?us-ascii?q?C6UkJ3fMKoHIdWuiqHLYV5WNkiTHttuCsiyr0Jp5q7fC8SxZQ5yB7QdeaHf5KL?=
 =?us-ascii?q?4h39TuaRJyl3hHZ/dLK4nRay/lCsyuz6VsaqzFZHtjRJnsXIu3wXyhDe5NaLRu?=
 =?us-ascii?q?Fg8kqixTqDzQHe5+NcLUAxj6XbKpohwrAqlpoUtETOBiv2mETwjK+LeUQo4+uo?=
 =?us-ascii?q?5Pr9YrXguJCcM5Z4igbwM6QohMO/G/81MhYBX2eF4+Swzr7j8lPjQLVMkPI2lr?=
 =?us-ascii?q?PVsJfAJcQUvqK5GRNa0p4/6xajCDeryNAYnXgELF1bYh6GgJXpNkrKIPD5C/e/?=
 =?us-ascii?q?nlutnC1qx/DAIr3uHJHNImLfn7fmeLZ381RcxxYrzdBD+5JUDakMIPLpVU/wqN?=
 =?us-ascii?q?zXFBg5Pxa0w+b6Etp90IweVHmLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH8zgUUdcrWx3ZsLdHC4GexrI0eeYXXymNsBEmAKvgw4TOztk1CCVT9TZ3CvX6?=
 =?us-ascii?q?Mz/D07CYSmDZvdSYCpmrCOwCC7HphObGBcFl+MCWvod5mDW/oUci2SOc9hkjsH?=
 =?us-ascii?q?VbS7UY8uzxOuuRT+y7pmKOrU5yIZuYji1Nhz++3cixUy+SZoAMSa1mGHV3t0kX?=
 =?us-ascii?q?8QRz8qwKB/plRwylSZ3qh+mfBYEd1T6OlPUgc1LpPcy+16C9bvWgPOZNuJSVCm?=
 =?us-ascii?q?Qsm4DjE1VN4+39gOY0NlEdW4kh/DxzaqA6MSl7GTGZM76Lzc0GbrK8Z90XnG0r?=
 =?us-ascii?q?IhgEcgQsdIMW2mhat/9wzICo7NkkWZkbuqdKsG0C7M8meD0XSBvEVCXAFsVqXF?=
 =?us-ascii?q?WGgVZlHKotTh+kPCU7iuBKw6PQRb186NNLFGat3zglVAX/fsJtLebnm1m2exAx?=
 =?us-ascii?q?aI27yNYJDre2UbwCXSFkwEnxoP8naBMAg0Hj2hrH7GDDxyCVLvZFvh8fV/qHO+?=
 =?us-ascii?q?SU800wGKbk1727qp4BIVguacS/cS3rICtycssDF0HFe739LLBNuMvQthfKNAYd?=
 =?us-ascii?q?wj5FdLz37Wtwt4Ppa4NaBtmkYecxhrv0Ppzxh4EIFAntYlrXw0zAt+M7mX0E5c?=
 =?us-ascii?q?eDyC25DwObrXKnfp8RCraq7W3Eze0dmM9qcO7vQ4t0vsvAWzGkU+9HVn1sFf02?=
 =?us-ascii?q?GA6ZXSEAoSTZXxX1439hhnvb3VfjMx5oLU1XJ2N6m0vSTP29YoBOsj1xahcM1T?=
 =?us-ascii?q?MKKCFA/uDcIaA9KiJ/Atm1isdhgEJvxd9LYoP8O6cPuLwLSrPOd8kz28l2RI/Y?=
 =?us-ascii?q?d93liK9yViUO7I3o8JzO2C0QuDSjjzkk2hssfxmY1fYTESH2y/yTXrBYJLZ61y?=
 =?us-ascii?q?e5oLBnmqI8Gt2tp+gJvtUWZC9FG/H1MGxNOpeR2KYl393A1cz0QWrWa8mSulyT?=
 =?us-ascii?q?x5iDUprquZ3CzTzOXubhsHOmhXRGZ8iVfgO5S7j9cfXEKwdQgmiAOl5Vrmx6hc?=
 =?us-ascii?q?vKl/LXPcQV1Lfyj1KGFuSLCwuaCBY85M6ZMotztYUOKnbFCeS779pQYa0iz5E2?=
 =?us-ascii?q?tfwjA7ay+lupHjkxNmj2KdKW55rGDFdsFo2Rff+NvcSOZR3zUcQyl0kzvXBlm6?=
 =?us-ascii?q?P9Sy+dWUlpHDsv2xVm67V51TdzXrwp2EtCeh+WJqBhi/leipmtL7CQg6zTP719?=
 =?us-ascii?q?5yWCXLthn8Y5Pn16SnMe19eEloC0Tx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNneJx4P6VnqH2Mdgace1YngK2i0j9cBFE7?=
 =?us-ascii?q?mb7KZLnSZuplq4rATRYeVynzsHyPsu7mIajP8NuAY30iqdBbUSF1FCPSPwjxSI?=
 =?us-ascii?q?88y+rKJPaWazdriw0VBynNG7A7GEvwFcQ235epY5EC9078V/Nk/M0XLp5oHlft?=
 =?us-ascii?q?nQccwcthmOnxjciOhVLYo7luAWiip/JWL9oXolxvYgghN02pG6uJWHJ39p/KKk?=
 =?us-ascii?q?GRNYMjz1Z8UO+jDil6pen8CW35yxEZVlADkEQJzoTfewGjIIqfvnLxqOECE7qn?=
 =?us-ascii?q?qDG7rQBwqf51l9r37VD5CnLXKXJGQazdV/QhmSPldfjRsQXDU7mJ45Cw+ryNbg?=
 =?us-ascii?q?cEd/+jAe+Fr4pgFQxeJvMhn1Sn3fqxuwajcoVJifKwJb7wFF50fIKMye8/h8Hy?=
 =?us-ascii?q?dC8p26qwyNLGObah9MDWEIXEyEGl/iMqOv5dnG7+iXGO6+I+HSbrWJrOxUT+2I?=
 =?us-ascii?q?yo630ot64zaMMd2CPnl8AP062UpDXnF5F97amzUVTCwXmDzCb9SGpBen4SB3qs?=
 =?us-ascii?q?G/8PL2WAPg/4ePCr1SMclx9BCym6uMK+mQhCNhIzZCypwM3WPIyKQY3FMKkS5u?=
 =?us-ascii?q?aiKiEa4eui/NVq7Qnq5XAgUfayNyMstI8q090hNMOc7dltP6yLp4guQpBFdCUF?=
 =?us-ascii?q?zrgtupatASI2GhKFPHA16GNKiHJT3O2c34fbmwRqFQjOpKsR29ojKbE07lPjSe?=
 =?us-ascii?q?mDjlTRGvMedQjC6FOBxSop2ychFoCWL7VtLpdgW7MMNrjT0x2bA1hmnFNWgZMT?=
 =?us-ascii?q?h9dUNCtryR7SNCjfV5FGxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7HIMePsglCLMo5huqle9n++nyzx7XR4IoTFOwMqPoFllEabU7J9NXTDD5h1JpX?=
 =?us-ascii?q?2dFxkQtfNkDNP1sqxdw9SJk7j8exlY9NeBxcYACtKcGsOFNGE9KxOhTCbZEAYf?=
 =?us-ascii?q?XxaqM2/FjkBQmf3U8Wea+Mtp4qPwkYYDH+cIHGc+EekXXxxo?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAAA5QwFch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDaxUSg3mIGF+LKYIhlzSBbjETAYd2IjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2IoJlAwMBAiAEGQEBNwEFCQEBJAIFIQICAwwdKwcSBYMcAYIBBaVPc?=
 =?us-ascii?q?HwMJ4J2AQEFgkSEXAcIgQuLDxeBQD+MKIJXiS+WfgoJgiKPCiORHyyIT5Eogg1?=
 =?us-ascii?q?NMAiDJ4IbiQGFQD8ygQUBAY1JAQE?=
X-IPAS-Result: =?us-ascii?q?A0AZAAA5QwFch0O0hNFkHQEBBQEHBQGBUQgBCwGDaxUSg3m?=
 =?us-ascii?q?IGF+LKYIhlzSBbjETAYd2IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlA?=
 =?us-ascii?q?wMBAiAEGQEBNwEFCQEBJAIFIQICAwwdKwcSBYMcAYIBBaVPcHwMJ4J2AQEFgkS?=
 =?us-ascii?q?EXAcIgQuLDxeBQD+MKIJXiS+WfgoJgiKPCiORHyyIT5Eogg1NMAiDJ4IbiQGFQ?=
 =?us-ascii?q?D8ygQUBAY1JAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="140257398"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 06:06:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726913AbeLABPp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 20:15:45 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:44620 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726779AbeLABPo (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 20:15:44 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=Content-Type:MIME-Version:References:
        Subject:Cc:To:From:Date:Message-Id:Sender:Reply-To:Content-Transfer-Encoding:
        Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
        Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=EkOnlpyWymR4eBDz4Zf4LKWAUCpS+ahpknQ+lsJJUwg=; b=py213SACxxv8l3hVYJuwEIT0Bq
        NIhPBhwLKfKqsV2yDvQlwXX95lMXd1CLlOkLJVr7tAE+8eFe/NjsE3wpBf6mSr6Gopl9urkCO3CtA
        Suii9xW6tyMbbQ3NW1JLkeLpNwMqdLRXk7dp6jMTWPs90x9vOy4jVZM8Je+Xo/z4q7/Y5UE9AvDXQ
        nAE5ygZBMHlMSJHx1MfuBjBtoI27ndo0CLEB6Q6LYibKERVUwK7R4l+yMBM2veCpISc3uN9czRW9A
        PSZ2yXccs6vTFuKRSAIOhxjhEpk+bm1JKIGd7UKW6/rZ3p3kTKC13MmKgF+d0UP8HxKcyeWY34e1G
        U+cqXA2Q==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100] helo=hirez.programming.kicks-ass.net)
        by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gSjQv-0003Dp-2G; Fri, 30 Nov 2018 14:06:17 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 0)
        id 614CE2029F873; Fri, 30 Nov 2018 15:06:14 +0100 (CET)
Message-Id: <20181130140337.485235040@infradead.org>
User-Agent: quilt/0.65
Date: Fri, 30 Nov 2018 14:44:56 +0100
From: Peter Zijlstra <peterz@infradead.org>
To: dave.hansen@intel.com, luto@kernel.org, peterz@infradead.org
Cc: x86@kernel.org, Tom.StDenis@amd.com, linux-kernel@vger.kernel.org
Subject: [PATCH 1/4] x86/mm/cpa: Add __cpa_addr() helper
References: <20181130134455.490139778@infradead.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline; filename=peterz-cpa-addr.patch
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The code to compute the virtual address of a cpa_data is duplicated;
introduce a helper before more copies happen.

Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
---
 arch/x86/mm/pageattr.c |   38 +++++++++++++++++++-------------------
 1 file changed, 19 insertions(+), 19 deletions(-)

--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -228,6 +228,23 @@ static bool __cpa_pfn_in_highmap(unsigne
 
 #endif
 
+static unsigned long __cpa_addr(struct cpa_data *cpa, int idx)
+{
+	if (cpa->flags & CPA_PAGES_ARRAY) {
+		struct page *page = cpa->pages[idx];
+
+		if (unlikely(PageHighMem(page)))
+			return 0;
+
+		return (unsigned long)page_address(page);
+	}
+
+	if (cpa->flags & CPA_ARRAY)
+		return cpa->vaddr[idx];
+
+	return *cpa->vaddr;
+}
+
 /*
  * Flushing functions
  */
@@ -1468,15 +1485,7 @@ static int __change_page_attr(struct cpa
 	unsigned int level;
 	pte_t *kpte, old_pte;
 
-	if (cpa->flags & CPA_PAGES_ARRAY) {
-		struct page *page = cpa->pages[cpa->curpage];
-		if (unlikely(PageHighMem(page)))
-			return 0;
-		address = (unsigned long)page_address(page);
-	} else if (cpa->flags & CPA_ARRAY)
-		address = cpa->vaddr[cpa->curpage];
-	else
-		address = *cpa->vaddr;
+	address = __cpa_addr(cpa, cpa->curpage);
 repeat:
 	kpte = _lookup_address_cpa(cpa, address, &level);
 	if (!kpte)
@@ -1557,16 +1566,7 @@ static int cpa_process_alias(struct cpa_
 	 * No need to redo, when the primary call touched the direct
 	 * mapping already:
 	 */
-	if (cpa->flags & CPA_PAGES_ARRAY) {
-		struct page *page = cpa->pages[cpa->curpage];
-		if (unlikely(PageHighMem(page)))
-			return 0;
-		vaddr = (unsigned long)page_address(page);
-	} else if (cpa->flags & CPA_ARRAY)
-		vaddr = cpa->vaddr[cpa->curpage];
-	else
-		vaddr = *cpa->vaddr;
-
+	vaddr = __cpa_addr(cpa, cpa->curpage);
 	if (!(within(vaddr, PAGE_OFFSET,
 		    PAGE_OFFSET + (max_pfn_mapped << PAGE_SHIFT)))) {
 


