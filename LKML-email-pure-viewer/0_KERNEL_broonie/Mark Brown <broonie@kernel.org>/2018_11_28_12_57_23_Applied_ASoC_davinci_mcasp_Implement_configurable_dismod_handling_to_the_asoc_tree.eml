Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:43:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BC88F5803ED;
	Wed, 28 Nov 2018 04:57:33 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 04:57:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ay4ITORUKRSwHNC/OlCapRJCOZELV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCAuqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeUDPuhWoZL9p0MMoBalGQWgGP/jxiNUinPqwaE31fkqHwHc3AwnGtIDqH?=
 =?us-ascii?q?Pao8/vNKcRTOu40bPIzTLNbvNQxDzw75PHcgomofGLW7JwcNTexFIsFwzblFWQ?=
 =?us-ascii?q?r5LqPzeP2uQKqWib4PNtWOSygGAprAFxpyKgxsYqioTRhYIa1ErE9SNnz4YxP9?=
 =?us-ascii?q?G4T1R7YdGiHZBNtC+aL5N7Tt0+T2xsoio217MLtYChcCQXy5kr2wTTZv2FfoSQ?=
 =?us-ascii?q?5h/vSvydLDhkiH5/Zr6yiBW//VK+xuHgSMW51ktBoDBfndnWrH8N0gTe6siZRf?=
 =?us-ascii?q?t5+UeswSiP1w/N5eFeO0w0lrTUK4QnwrEukpofq0PDHjX5mEnuja+WcFsr+vSw?=
 =?us-ascii?q?5uj5frnrooWQO5J6hw3gKKgih8+yDfgiPgUPXWWX4eG826fi/U39TrVKlPo2kq?=
 =?us-ascii?q?zBvZDeJMQboLO5AgBM3oYg9Rm/FTGm38ocnXUeK1JEdhSHgJbzO1zVPvD4Aumw?=
 =?us-ascii?q?g062nDdo2f/GJLvhDYvJLnTZl7fhZ7l951ZGyAUv1dBf+45UCrYZLfL3W0/xt8?=
 =?us-ascii?q?LXAgU2Mgyp2OvnDNR91oUDWWOAGKOZMaXSsUOW6eIrOeWDeIgVuDPlIfg/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx3ZsYcnG4Huh8LEWee3bsgsoBHn0MvgoxV+HqjFyCUThOZ3e9Ra?=
 =?us-ascii?q?485zc7CJ64AofHXIyinLuB3CKjFJ1Mem9GEkyMEWvvd4icWfcMbzydLtVikjwD?=
 =?us-ascii?q?U7ihTYgh2AqqtA/7zbpnM+XV9jcZtZLlyNh6+enTmQsu+jxzCsSXy3uNQH1snm?=
 =?us-ascii?q?MUWz8227hyrlZmyleD1qh4gOZUFcZJ6PNLSQo6MZ/cz+pnC9H9QA7Bf9GJSEq4?=
 =?us-ascii?q?TdWiGz0+UtUxw9oWaUZnB9qilgzD3zatA7INlLyEHpo0/rjY33jwPcl9zXnG2b?=
 =?us-ascii?q?Ilj1knRMtPKGKnirR+9wjVG47GjUGZm7y2eqQb2S7H7H2DwnaWvEFETA5wVr3I?=
 =?us-ascii?q?Um0FaUvIs9v1/EPCQKWoCbQ8LARBz8mOKq9Jat3siVVLX/PjONXYY2KslGa8Hx?=
 =?us-ascii?q?eIxrWQbIX0f2URxjnSCE8BkwoL53aJKRA+Bju9o2LZFDFhCEjgY13y/uVkqHO0?=
 =?us-ascii?q?VEk0zxqUYE1nzLe1/h8VhfqBS/IcxL4EuSEhqylqE1a5xd7ZF92Apw95dqVGfd?=
 =?us-ascii?q?w9+EtH1X7etwFlIpygLqVihlkCcwR3v0LizQl3Bp9HkcgwqHMqzQxyKa2D3VNF?=
 =?us-ascii?q?djOY243wO7LNJmnz+hCvd7DZ2lXE3NmK/acP7ewyq0//swGxCkoi73Jn3sFP3H?=
 =?us-ascii?q?uY+JrLAxQdUJLrXkks6hh1uqvVYi8+54PTy31hKq20sj7E29I0C+op0Begf9FD?=
 =?us-ascii?q?MKyaEA/+CdEVB8+rKOYygVimcgoEPPxO9K4zJ86nd+aG1LS3M+p6nTOmjX5I4I?=
 =?us-ascii?q?Zy0k+X8yp8S+jI34sKwv2C3wuHUSv8g0mlsszthY9EYjQSFHKlySf4HI5RerFy?=
 =?us-ascii?q?fYETBGe0Is242s9xh4TwVH5f7lKjAU0J2NWoeRaLc1PyxwlQ2lkJrny9niu4yS?=
 =?us-ascii?q?d5kzUorqqZwSzPzP7udBsBOm5XWmZiiU3gLpSzj9AfREKodRQmlAO55UbmwKhW?=
 =?us-ascii?q?vKR+L2jJTUZIZST2NHxiUq2ru7qGYs5P7o4osCpNXOS9Z1CaVqDyox8A3yz/GG?=
 =?us-ascii?q?tewSgxdyu2tZXhgxx6lGWdIW5xrHXDY8FwxhTf5NvGSf5KxDUGRyp4iTjRBlei?=
 =?us-ascii?q?Odmk5tGUl5bFsuCjWGOtTJxTcS/3zYyesCu3/3FlARq6n/qrgN3oDRA60TPn19?=
 =?us-ascii?q?ltTSjJrAzzYo7x26S4MOJneFJlBFv968p8B4F/nZE8hJAW2XgGmJqV+WALnnv0?=
 =?us-ascii?q?MdVewaj+dmYCRSYXw97J5wjowE5jIWiIx47jVnWd39FuZ9+1Ym4N3iI97sZKCL?=
 =?us-ascii?q?qb7bBenCt1pEa4ohzVYfRngjgdzv4u4mYAg+4VoAot0jmdArcKEEldPCzslA6H?=
 =?us-ascii?q?48qwrapJf2avbaa/1FBlkt+/FrGCrRpRWHL4epckAC9x4d9zMFPK0H3v9I7kfM?=
 =?us-ascii?q?PcYs4Uth2Rix3AlfRaKIotlvoWgipqIX79vXogy+IhjB1hx5e6vJWcK2V2/aK0?=
 =?us-ascii?q?GRpYNjzzZ8MO9TDhl6densCK34+xGpVtACkEXJztTfiwCjIdqeznNxqSED07sn?=
 =?us-ascii?q?qUAqDQHQib6Ed7tX7PF42rOmqTJHkYy9ViWRacKFZegAASQDU1gJo5Ghq2y8zm?=
 =?us-ascii?q?dUdz/ioR6ULgqhtQ1uJoMAHyUmXFqwetdDg0U4KTLAZM4gFB+kfVMtGe7uRpEC?=
 =?us-ascii?q?FD5ZChqA2NKmqGZwVHF20JW0qEB0z9Mbmq/9XP7++YBu+mJfvUfbqOsfBeV+uP?=
 =?us-ascii?q?xZ+30opm+CuMNtySPnZ4Cf03wFFDXXd/G8TWgDgPTy0XlyTQb8+Uvhu8+yt3rt?=
 =?us-ascii?q?yh//TvQg7g+YyPC75KO9V15x+2mbuDN/KXhCthKTZXyJIMxXzLyLgexlISiDtu?=
 =?us-ascii?q?dz6iEbsery7NUbnQl7RTDx4abSNzKcRJ47g93glLJc7UlNf12qRkgf4yDldPTU?=
 =?us-ascii?q?bhld2xZcwWP2G9M0vKC1yWNLudPz3E3cH2bbm4Sb1Rl+hUsxywuTCGE07sJDiD?=
 =?us-ascii?q?lj/pVwyxPuFIli2UIBteuISleBZ3FWfjVM7magG8MNJvkT02wLg0imnWOmIGLT?=
 =?us-ascii?q?d8c11CrruL4CNcg/V/HXFB73V/IemFnSaZ8/fXKpIMvfR3BSR0kvpQ4G4mxLtN?=
 =?us-ascii?q?8CFEWPt1lTPSr9F0pVGml+iPyjx/XxtPqjZEnoSLvUp5NKXd95lAX2vE/R0X4W?=
 =?us-ascii?q?WRDRQKu8VqCtn1t69MzdjPkfG7FDAXy9/I8NFUOsraIcaaK3tpZQLkBDPOShYH?=
 =?us-ascii?q?QzevKHrer1Bc1vqV8yvGgII9r83JkYANApVBU0MzXqcQEENiGt0PCJR6RDUplf?=
 =?us-ascii?q?iclsFetin2lwXYWMgP5sOPbfmVG/i6bW/B1bQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A3BgDYj/5bh0O0hNFkHAECHwQBBgGBT?=
 =?us-ascii?q?QKCaIECJ4xwiypSBoE1FIkKjiSBcxQYCwgBh2oiNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJhAQMDAQIkFwIBATcBBQkCGwMBAgolAwgEHSMIBhMFgxwBg?=
 =?us-ascii?q?XQNBAEKpS2BbDOCdgEBBYc+AwWMFRd4gQeBEYYXgUUXAQGDU4ImoB0Jhn2KKSO?=
 =?us-ascii?q?BWoUQBYomjVSKdIFGgg0zGggoCIMnglCITIJmgllAMgGBBAEBiiwPF4InAQE?=
X-IPAS-Result: =?us-ascii?q?A0A3BgDYj/5bh0O0hNFkHAECHwQBBgGBTQKCaIECJ4xwiyp?=
 =?us-ascii?q?SBoE1FIkKjiSBcxQYCwgBh2oiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJhAQMDAQIkFwIBATcBBQkCGwMBAgolAwgEHSMIBhMFgxwBgXQNBAEKpS2BbDO?=
 =?us-ascii?q?CdgEBBYc+AwWMFRd4gQeBEYYXgUUXAQGDU4ImoB0Jhn2KKSOBWoUQBYomjVSKd?=
 =?us-ascii?q?IFGgg0zGggoCIMnglCITIJmgllAMgGBBAEBiiwPF4InAQE?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="54657642"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 04:57:32 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728236AbeK1X7D (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 18:59:03 -0500
Received: from heliosphere.sirena.org.uk ([172.104.155.198]:60774 "EHLO
        heliosphere.sirena.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727823AbeK1X7D (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 18:59:03 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=sirena.org.uk; s=20170815-heliosphere; h=Date:Message-Id:In-Reply-To:
        Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:References:
        List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:
        List-Archive; bh=tlR5O0+EUrQ0tG3awhsa1rRlV6CkcZu8pwJ+AnuzZdc=; b=FJyqYHb5IhHo
        bUzex7h79/fEIrtFEQsFIw6mVCXoIf1rYQ1LcM1kZvLFm6Y+UMB8wBim4zoFmMwTDEujTRoT/WVhy
        uge4AeZDeyuuCaOxoHjVn7tnZeO1AH3et57OI9ocZe2Ys2+6UyatWmYEhvzaAksXC6V1DmDfgEiUi
        MQkpI=;
Received: from 92.40.248.202.threembb.co.uk ([92.40.248.202] helo=finisterre.ee.mobilebroadband)
        by heliosphere.sirena.org.uk with esmtpsa (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
        (Exim 4.89)
        (envelope-from <broonie@sirena.org.uk>)
        id 1gRzPA-0005Gc-Kn; Wed, 28 Nov 2018 12:57:24 +0000
Received: by finisterre.ee.mobilebroadband (Postfix, from userid 1000)
        id C26FE440078; Wed, 28 Nov 2018 12:57:23 +0000 (GMT)
From: Mark Brown <broonie@kernel.org>
To: Peter Ujfalusi <peter.ujfalusi@ti.com>
Cc: Mark Brown <broonie@kernel.org>, Mark Brown <broonie@kernel.org>,
        Liam Girdwood <lgirdwood@gmail.com>,
        devicetree@vger.kernel.org, alsa-devel@alsa-project.org,
        linux-kernel@vger.kernel.org, jsarha@ti.com, robh+dt@kernel.org,
        misael.lopez@ti.com, alsa-devel@alsa-project.org
Subject: Applied "ASoC: davinci-mcasp: Implement configurable dismod handling" to the asoc tree
In-Reply-To: <20181116134141.17396-5-peter.ujfalusi@ti.com>
Message-Id: <20181128125723.C26FE440078@finisterre.ee.mobilebroadband>
Date: Wed, 28 Nov 2018 12:57:23 +0000 (GMT)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The patch

   ASoC: davinci-mcasp: Implement configurable dismod handling

has been applied to the asoc tree at

   https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git 

All being well this means that it will be integrated into the linux-next
tree (usually sometime in the next 24 hours) and sent to Linus during
the next merge window (or sooner if it is a bug fix), however if
problems are discovered then the patch may be dropped or reverted.  

You may get further e-mails resulting from automated or manual testing
and review of the tree, please engage with people reporting problems and
send followup patches addressing any issues that are reported if needed.

If any updates are required or you are submitting further changes they
should be sent as incremental updates against current git, existing
patches will not be replaced.

Please add any relevant lists and maintainers to the CCs when replying
to this mail.

Thanks,
Mark

From bc184549853133303cf08d1f19477f9c87ef39fb Mon Sep 17 00:00:00 2001
From: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date: Fri, 16 Nov 2018 15:41:41 +0200
Subject: [PATCH] ASoC: davinci-mcasp: Implement configurable dismod handling

If the dismod is specified in the DT node, use the specified custom value
to configure the drive on state of the inactive TX slots.

If the dismod is not present or booted in legacy mode, the dismod is set
to low as it was the original behavior.

Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
Signed-off-by: Mark Brown <broonie@kernel.org>
---
 include/linux/platform_data/davinci_asp.h |  1 +
 sound/soc/davinci/davinci-mcasp.c         | 19 ++++++++++++++++++-
 sound/soc/davinci/davinci-mcasp.h         |  1 +
 3 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/include/linux/platform_data/davinci_asp.h b/include/linux/platform_data/davinci_asp.h
index 85ad68f9206a..7fe80f1c7e08 100644
--- a/include/linux/platform_data/davinci_asp.h
+++ b/include/linux/platform_data/davinci_asp.h
@@ -79,6 +79,7 @@ struct davinci_mcasp_pdata {
 	/* McASP specific fields */
 	int tdm_slots;
 	u8 op_mode;
+	u8 dismod;
 	u8 num_serializer;
 	u8 *serial_dir;
 	u8 version;
diff --git a/sound/soc/davinci/davinci-mcasp.c b/sound/soc/davinci/davinci-mcasp.c
index 0f3911be1c8e..40d3a916fb74 100644
--- a/sound/soc/davinci/davinci-mcasp.c
+++ b/sound/soc/davinci/davinci-mcasp.c
@@ -85,6 +85,7 @@ struct davinci_mcasp {
 	u32	tdm_mask[2];
 	int	slot_width;
 	u8	op_mode;
+	u8	dismod;
 	u8	num_serializer;
 	u8	*serial_dir;
 	u8	version;
@@ -834,7 +835,7 @@ static int mcasp_common_hw_param(struct davinci_mcasp *mcasp, int stream,
 		if (mcasp->serial_dir[i] == TX_MODE &&
 					tx_ser < max_active_serializers) {
 			mcasp_mod_bits(mcasp, DAVINCI_MCASP_XRSRCTL_REG(i),
-				       DISMOD_LOW, DISMOD_MASK);
+				       mcasp->dismod, DISMOD_MASK);
 			set_bit(PIN_BIT_AXR(i), &mcasp->pdir);
 			tx_ser++;
 		} else if (mcasp->serial_dir[i] == RX_MODE &&
@@ -847,6 +848,8 @@ static int mcasp_common_hw_param(struct davinci_mcasp *mcasp, int stream,
 			clear_bit(PIN_BIT_AXR(i), &mcasp->pdir);
 		} else if (mcasp->serial_dir[i] == TX_MODE) {
 			/* Unused TX pins, clear PDIR  */
+			mcasp_mod_bits(mcasp, DAVINCI_MCASP_XRSRCTL_REG(i),
+				       mcasp->dismod, DISMOD_MASK);
 			clear_bit(PIN_BIT_AXR(i), &mcasp->pdir);
 		}
 	}
@@ -1709,6 +1712,7 @@ static struct davinci_mcasp_pdata *davinci_mcasp_set_pdata_from_of(
 
 	if (pdev->dev.platform_data) {
 		pdata = pdev->dev.platform_data;
+		pdata->dismod = DISMOD_LOW;
 		return pdata;
 	} else if (match) {
 		pdata = devm_kmemdup(&pdev->dev, match->data, sizeof(*pdata),
@@ -1798,6 +1802,18 @@ static struct davinci_mcasp_pdata *davinci_mcasp_set_pdata_from_of(
 	if (ret >= 0)
 		pdata->sram_size_capture = val;
 
+	ret = of_property_read_u32(np, "dismod", &val);
+	if (ret >= 0) {
+		if (val == 0 || val == 2 || val == 3) {
+			pdata->dismod = DISMOD_VAL(val);
+		} else {
+			dev_warn(&pdev->dev, "Invalid dismod value: %u\n", val);
+			pdata->dismod = DISMOD_LOW;
+		}
+	} else {
+		pdata->dismod = DISMOD_LOW;
+	}
+
 	return  pdata;
 
 nodata:
@@ -1973,6 +1989,7 @@ static int davinci_mcasp_probe(struct platform_device *pdev)
 	mcasp->version = pdata->version;
 	mcasp->txnumevt = pdata->txnumevt;
 	mcasp->rxnumevt = pdata->rxnumevt;
+	mcasp->dismod = pdata->dismod;
 
 	mcasp->dev = &pdev->dev;
 
diff --git a/sound/soc/davinci/davinci-mcasp.h b/sound/soc/davinci/davinci-mcasp.h
index acb024ab6a9d..5e4060d8fe56 100644
--- a/sound/soc/davinci/davinci-mcasp.h
+++ b/sound/soc/davinci/davinci-mcasp.h
@@ -209,6 +209,7 @@
 #define DISMOD_3STATE	(0x0)
 #define DISMOD_LOW	(0x2 << 2)
 #define DISMOD_HIGH	(0x3 << 2)
+#define DISMOD_VAL(x)	((x) << 2)
 #define DISMOD_MASK	DISMOD_HIGH
 #define TXSTATE		BIT(4)
 #define RXSTATE		BIT(5)
-- 
2.19.1

