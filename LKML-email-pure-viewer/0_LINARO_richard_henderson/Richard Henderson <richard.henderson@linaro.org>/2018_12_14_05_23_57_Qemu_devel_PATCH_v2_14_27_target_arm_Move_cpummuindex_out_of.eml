Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:24:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 66E945803DC
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 21:30:47 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 13 Dec 2018 21:30:47 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AWxyKZRXSX8ek2WNFNsodx1lfizPV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRGCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+gqFVrhWjqBxx3oDUeIOYOvhxc6/Ac94WWXROXt1KWiBdHo+x?=
 =?us-ascii?q?dZcDAvAdMepEqYT2ulsArQG5BQmpHO7h1j5IiWP23aIgyeQuDBzN0g4+ENIIrX?=
 =?us-ascii?q?vbss/1NLwVUeCz0aLFyi/Db/JK1jf98ofIaA0ureuMXb1ud8re1FcgFxnejlWX?=
 =?us-ascii?q?r4zoJDeV1uULs2eB9epgUviji2k9qwF+uzWiwNonhIrRho8N1FzI6SZ0zJwoKd?=
 =?us-ascii?q?GlS0N3e8CoHZVQui2AKod7QNsuT3xrtSs40LEKp4O3cSoQxJg52RLSaeaLf5aH?=
 =?us-ascii?q?7x/tUuuaPC12i2h/eL2lgha/6UigxfP4VsmzyFtKqitFksLQtnAWzRDT5c6HSu?=
 =?us-ascii?q?Zn8kemwzaP2Bjf6uBCIU8qiarWM4AtzqIzm5YJrEjPAyz7lF/ogKKYdkgo4PWk?=
 =?us-ascii?q?5ub/brXjvJCcNot0ig/kMqQpn8yyGf04PRYLX2iG4OizyaPs/VPnT7VOl/E5ia?=
 =?us-ascii?q?7ZsI3cJcsHuKG5GAhZ0oIi6xa8ETiqytsZnWQfIVJBeRKHiZXpOl7ULPD5C/e/?=
 =?us-ascii?q?n0qjkDNxy//aOb3hB47ALn7EkLfncrZ97VNcxBA0zdBF6JJYEqsBL+7rWk/tqN?=
 =?us-ascii?q?zYCQc0Mwi1w+bkFtpxzIwfWX+UD6+dMaPSt0KI5+01L+mNYo8VpCjyK/w/6/Hy?=
 =?us-ascii?q?in85nAxVQK+ywJFCaGykBu80ZAKdYGHwmZEHFmEFuBd4S/blz1iLUDpWbnD1WL?=
 =?us-ascii?q?og5zY9E8W/AILeA4ygnrGFjxq9BYBcM2VPC1SQFiXxeoCZHvsBdi+WZ9VsiyEJ?=
 =?us-ascii?q?TqSJTYgn2hez8gjgxO18M+DW9yYE4I/lz8V//ObJlBs/pgBzWt2Q1nzIQ2xqk2?=
 =?us-ascii?q?cgQTgw06Zi50tnxQSty6991sZZHtxa/f8Bcgo8OZPG1Ot8Q4ToWwnBd82FDlar?=
 =?us-ascii?q?RNmrGyo2SPo1wtkHeUE7HM+t2EOQlxG2CqMYwuTYTKc/9bjRiiD8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AtAACVPxNchxHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKMdIsymWKBcxIBARgUh0UiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII?=
 =?us-ascii?q?2BQIDGAmCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHIIBAQEDm?=
 =?us-ascii?q?1A8ih2BbDOCdgEBBYJDhGcIEodrgyWBHIFXP4NuixGJQ4cGkEwHAoIkBI8mCxi?=
 =?us-ascii?q?JbYdeLJh9BgIJBw8hgSWCDk0wgy+CGwwXiF6FXlOBB4pugXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AtAACVPxNchxHrdtBjHgEGBwaBUQkLAYEwgmKMdIsymWK?=
 =?us-ascii?q?BcxIBARgUh0UiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAMDA?=
 =?us-ascii?q?QIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHIIBAQEDm1A8ih2BbDOCdgE?=
 =?us-ascii?q?BBYJDhGcIEodrgyWBHIFXP4NuixGJQ4cGkEwHAoIkBI8mCxiJbYdeLJh9BgIJB?=
 =?us-ascii?q?w8hgSWCDk0wgy+CGwwXiF6FXlOBB4pugXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,351,1539673200"; 
   d="scan'208";a="57445374"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 21:30:46 -0800
Received: from localhost ([::1]:59463 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXg3h-0001eN-FG
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 00:30:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:55754)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gXfxi-0004TP-Fh
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 00:24:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gXfxe-0005QF-Ct
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 00:24:32 -0500
Received: from mail-oi1-x241.google.com ([2607:f8b0:4864:20::241]:37726)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gXfxe-0005Q1-6c
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 00:24:30 -0500
Received: by mail-oi1-x241.google.com with SMTP id y23so3631501oia.4
	for <qemu-devel@nongnu.org>; Thu, 13 Dec 2018 21:24:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=AUMg+u27uMOuJ6XW+OsUe7C34ZHfjbNbRhgYaArpPkM=;
	b=BrZ00UN0vRm58yHg38v6IytT1EKGv1JUjTjDDmbGsCNanAEOr8Ur41MBiyx4KY97QP
	z4RReDOJPQPsozSKk8OfStxjiAZjr/KAcPLJl3tAlg/9REXFKrPQjPJrYYuZsAYfdyxM
	k8eo9JdqINMO7c8jy7SDWvneT4VPoWQN0mdQY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=AUMg+u27uMOuJ6XW+OsUe7C34ZHfjbNbRhgYaArpPkM=;
	b=FnV1PvkviGtQUkK90bOP2jb6ny0RMxkBhjJRo/RDtAP0ESTnkXCQ0wUIuuo2vwk7l8
	lp6XNChPqwkqZ2POieOCj6mLkSriEsKvoi6z5EpHrZHB+tnQoYJNLmjyI/JsIc6s3m+V
	O1ipI3tRIMCl2IQbe1uuSfAIVwflNnpEwqfBq4QP725uXSEdzEQCqttIwYwhcRBnQTpc
	9rl/5bIC6pDkFpttlwPk8xYKFbpQ+Cd5xbp9pltsA6nAEhjd5H4yZcRlUE+ekgIE20OP
	hWsZ3T9oWKQsu+eGZjH4uzS914+NEoR4u/tDa6Kuu/LCxZgnyYP46Sk5LhwqV1fmskKa
	q46w==
X-Gm-Message-State: AA+aEWZfUSFEdCnw1giOA90dUyjwDNi7w/LfGQyCRAQCF8GkkjujDhM0
	m3451BL9LjWZopmADrLRbrl39vDbiNjxGA==
X-Google-Smtp-Source: AFSGD/UiFqJeRAjhPdSM+PYcs4NLdLAi0IhkyAp7bYtzQPEnBMek4ubSlxhG/J0d1sHzxVHdZLHitw==
X-Received: by 2002:aca:4d47:: with SMTP id a68mr930371oib.43.1544765069266;
	Thu, 13 Dec 2018 21:24:29 -0800 (PST)
Received: from cloudburst.twiddle.net ([187.217.227.243])
	by smtp.gmail.com with ESMTPSA id r1sm1845379oti.44.2018.12.13.21.24.28
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Thu, 13 Dec 2018 21:24:28 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 23:23:57 -0600
Message-Id: <20181214052410.11863-15-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181214052410.11863-1-richard.henderson@linaro.org>
References: <20181214052410.11863-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::241
Subject: [Qemu-devel] [PATCH v2 14/27] target/arm: Move cpu_mmu_index out of
 line
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This function is, or will shortly become, too big to inline.

Reviewed-by: Peter Maydell <peter.maydell@linaro.org>
Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 target/arm/cpu.h    | 48 +++++----------------------------------------
 target/arm/helper.c | 44 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+), 43 deletions(-)

diff --git a/target/arm/cpu.h b/target/arm/cpu.h
index 898243c93e..6435997111 100644
--- a/target/arm/cpu.h
+++ b/target/arm/cpu.h
@@ -2739,54 +2739,16 @@ static inline int arm_mmu_idx_to_el(ARMMMUIdx mmu_idx)
 }
 
 /* Return the MMU index for a v7M CPU in the specified security and
- * privilege state
+ * privilege state.
  */
-static inline ARMMMUIdx arm_v7m_mmu_idx_for_secstate_and_priv(CPUARMState *env,
-                                                              bool secstate,
-                                                              bool priv)
-{
-    ARMMMUIdx mmu_idx = ARM_MMU_IDX_M;
-
-    if (priv) {
-        mmu_idx |= ARM_MMU_IDX_M_PRIV;
-    }
-
-    if (armv7m_nvic_neg_prio_requested(env->nvic, secstate)) {
-        mmu_idx |= ARM_MMU_IDX_M_NEGPRI;
-    }
-
-    if (secstate) {
-        mmu_idx |= ARM_MMU_IDX_M_S;
-    }
-
-    return mmu_idx;
-}
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate_and_priv(CPUARMState *env,
+                                                bool secstate, bool priv);
 
 /* Return the MMU index for a v7M CPU in the specified security state */
-static inline ARMMMUIdx arm_v7m_mmu_idx_for_secstate(CPUARMState *env,
-                                                     bool secstate)
-{
-    bool priv = arm_current_el(env) != 0;
-
-    return arm_v7m_mmu_idx_for_secstate_and_priv(env, secstate, priv);
-}
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate(CPUARMState *env, bool secstate);
 
 /* Determine the current mmu_idx to use for normal loads/stores */
-static inline int cpu_mmu_index(CPUARMState *env, bool ifetch)
-{
-    int el = arm_current_el(env);
-
-    if (arm_feature(env, ARM_FEATURE_M)) {
-        ARMMMUIdx mmu_idx = arm_v7m_mmu_idx_for_secstate(env, env->v7m.secure);
-
-        return arm_to_core_mmu_idx(mmu_idx);
-    }
-
-    if (el < 2 && arm_is_secure_below_el3(env)) {
-        return arm_to_core_mmu_idx(ARMMMUIdx_S1SE0 + el);
-    }
-    return el;
-}
+int cpu_mmu_index(CPUARMState *env, bool ifetch);
 
 /* Indexes used when registering address spaces with cpu_address_space_init */
 typedef enum ARMASIdx {
diff --git a/target/arm/helper.c b/target/arm/helper.c
index bd0cff5c27..56960411e3 100644
--- a/target/arm/helper.c
+++ b/target/arm/helper.c
@@ -12949,6 +12949,50 @@ int fp_exception_el(CPUARMState *env, int cur_el)
     return 0;
 }
 
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate_and_priv(CPUARMState *env,
+                                                bool secstate, bool priv)
+{
+    ARMMMUIdx mmu_idx = ARM_MMU_IDX_M;
+
+    if (priv) {
+        mmu_idx |= ARM_MMU_IDX_M_PRIV;
+    }
+
+    if (armv7m_nvic_neg_prio_requested(env->nvic, secstate)) {
+        mmu_idx |= ARM_MMU_IDX_M_NEGPRI;
+    }
+
+    if (secstate) {
+        mmu_idx |= ARM_MMU_IDX_M_S;
+    }
+
+    return mmu_idx;
+}
+
+/* Return the MMU index for a v7M CPU in the specified security state */
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate(CPUARMState *env, bool secstate)
+{
+    bool priv = arm_current_el(env) != 0;
+
+    return arm_v7m_mmu_idx_for_secstate_and_priv(env, secstate, priv);
+}
+
+int cpu_mmu_index(CPUARMState *env, bool ifetch)
+{
+    int el = arm_current_el(env);
+
+    if (arm_feature(env, ARM_FEATURE_M)) {
+        ARMMMUIdx mmu_idx = arm_v7m_mmu_idx_for_secstate(env, env->v7m.secure);
+
+        return arm_to_core_mmu_idx(mmu_idx);
+    }
+
+    if (el < 2 && arm_is_secure_below_el3(env)) {
+        return arm_to_core_mmu_idx(ARMMMUIdx_S1SE0 + el);
+    }
+    return el;
+}
+
 void cpu_get_tb_cpu_state(CPUARMState *env, target_ulong *pc,
                           target_ulong *cs_base, uint32_t *pflags)
 {
-- 
2.17.2


