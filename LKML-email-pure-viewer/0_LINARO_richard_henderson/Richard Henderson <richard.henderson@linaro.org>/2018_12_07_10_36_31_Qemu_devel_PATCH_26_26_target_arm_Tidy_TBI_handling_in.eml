Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6B3DB58042F
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 02:51:34 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 02:51:34 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AtCRRJBUHav93utrywhT/jKZeA9bV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRGCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+gqFVrhWjqBxx3oDUeIOYOvhxc6/Ac94WWXROXt1KWiBdHo+x?=
 =?us-ascii?q?dZcDAvAdMepEqYT2ulsArQG5BQmpHO7h1j5IiWP23aIgyeQuDBzN0g4+ENIIrX?=
 =?us-ascii?q?vbss/1NLwVUeCz0aLFyi/Db/JK1jf98ofIaA0ureuMXb1ud8re1FcgFxnejlWX?=
 =?us-ascii?q?r4zoJDeV1uULs2eB9epgUviji2k9qwF+uzWiwNonhIrRho8N1FzI6SZ0zJwoKd?=
 =?us-ascii?q?GlS0N3e8CoHZVQui2AKod7QNsuT3xrtSs+0LEKp4K3cScQxJg6xxPSb+aLf5WK?=
 =?us-ascii?q?7x79UuuaPC12i2h/eL2lgha/6UigxfP4VsmzyFtKqitFksLQtnAWzRDT5c6HSu?=
 =?us-ascii?q?Zn8kemwzaP2Bjf6uBCIU8qiarWM4AtzqIzm5YJrEjPAyz7lF/ogKKYdkgo4PWk?=
 =?us-ascii?q?5ub/brXjvJCcNot0ig/kMqQpn8yyGf04PRYLX2iG4OizyaPs/VPnT7VOl/E5ia?=
 =?us-ascii?q?7ZsI3cJcsHuKG5GAhZ0oIi6xa8ETiqytsZnWQfIVJBeRKHiZXpOl7ULPD5C/e/?=
 =?us-ascii?q?n0qjkDNxy//aOb3hB47ALn7EkLfncrZ97VNcxBA0zdBF6JJYEqsBL+7rWk/tqN?=
 =?us-ascii?q?zYCQc0Mwi1w+bkFtpxzIwfWX+UD6+dMaPSt0KI5+01L+mNYo8VpCjyK/w/6/Hy?=
 =?us-ascii?q?in85nAxVQK+ywJFCaGykBu80ZAKdYGHwmZEHFmEFuBd4S/blz1iLUDpWbnD1WL?=
 =?us-ascii?q?og5zY9E8W/AILeA4ygnrGFjxq9BYBcM2VPC1SQFiXxeoCZHvsBdi+WZ9VsiyEJ?=
 =?us-ascii?q?TqSJTYgn2hez8gjgxO18M+DW9yYE4I/lz8V//ObJlBs/pgBzWt2Q1nzIQ2xqk2?=
 =?us-ascii?q?cgQTgw06Zi50tnxQSty6991sZZHtxa/f8Bcgo8OZPG1Ot8Q4ToWwnBd82FDlar?=
 =?us-ascii?q?RNmrGyo2SPo1wtkHeUE7HM+t2EOQlxG2CqMYwuTYTKc/9bjRiiD8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BKAABBUApcmBHrdtBjHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwgmKMcosxmVyBcxIBARgUh1oiNgcNAQMBAQEBAQECARMBAQEBAQgLCwYbDiM?=
 =?us-ascii?q?MgjYFAgMYCYJcAwMBAiQZAQEECikBAgMBAgYBAT4KCAMBMAEFARwZBYMcggIBA?=
 =?us-ascii?q?QOZPTyKHYFsM4J2AQEFgkOEZwgSh16DE4EcgVc/g26LEYk5hwCQMAcCgiEEjxs?=
 =?us-ascii?q?LGIljh1UsmEgGAgkHDyGBLAKCBE0wgy+CGwwXiF6FXlOBB4hJgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BKAABBUApcmBHrdtBjHgEGBwaBUwcLAYEwgmKMcosxmVy?=
 =?us-ascii?q?BcxIBARgUh1oiNgcNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMYCYJcA?=
 =?us-ascii?q?wMBAiQZAQEECikBAgMBAgYBAT4KCAMBMAEFARwZBYMcggIBAQOZPTyKHYFsM4J?=
 =?us-ascii?q?2AQEFgkOEZwgSh16DE4EcgVc/g26LEYk5hwCQMAcCgiEEjxsLGIljh1UsmEgGA?=
 =?us-ascii?q?gkHDyGBLAKCBE0wgy+CGwwXiF6FXlOBB4hJgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="141184184"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 02:51:17 -0800
Received: from localhost ([::1]:45328 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVDj3-0000XT-6h
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 05:51:17 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59358)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gVDVW-00007O-5e
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:19 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gVDVT-00083g-4l
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:18 -0500
Received: from mail-ot1-x342.google.com ([2607:f8b0:4864:20::342]:41505)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gVDVS-00082y-Vf
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:15 -0500
Received: by mail-ot1-x342.google.com with SMTP id u16so3339889otk.8
	for <qemu-devel@nongnu.org>; Fri, 07 Dec 2018 02:37:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=U+yA0gpIKvjd3st8336MWjcYGoymhOrHRSCnKqU8W1M=;
	b=AIZY0ejoG1yXxsUlm3vBzEUoACwtyVyxXKTsJEN9MKhIyIBGVxmTCCD3Y1d6FwKRa8
	ZG+PA2qipXo5XdDy7yPLJ7NGxm3AMcQ/5b+o13rgwtd0g5jHYGFv5sii6w9JCBc6UlFN
	usS6jm9wEJIsdeELqrhdL5BfkOWvWpSa26TdU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=U+yA0gpIKvjd3st8336MWjcYGoymhOrHRSCnKqU8W1M=;
	b=ljYoN0Y8JA6NJa6xLp2VdpKAzF0gbBb1qChmxbr046qJeOve7nS9fj0030F4RON3iJ
	qwOOKkACXRJoX3ruROa7Zws32zWMo4qYBnp2eXT2HtX5k11ZQSoZ43AWZ1OfQ3vLj9s7
	ZVMyxQwh5P09HoJa+vC2V91xMAULXLjsx8tt5cO2L+LL7P1WPNiOlgdTLCqU6wWRhsNg
	p7Netzmbmeo4wCkBfZfKW0hsaazEvQJe6/JV4EYmbc+hfAufLXq9Ih/PAOMrAnpvjoD8
	Xs2uxeMz57VecvfScIWxE9UJDKLf3rG1MQNqIiKWTIkrSPHq1u8XUnYpP5su/3o63C+k
	31vA==
X-Gm-Message-State: AA+aEWYutx+HOrKkFAiw8lhS1ka2HMHBHeo/RMmViQrs4SzKe7tgYFpO
	101p1wbYlshmJ0XvIMINQMK5hcgdpiY=
X-Google-Smtp-Source: AFSGD/UFIL0NrZMm0R8FsFkwBi5tHFNKFI6QyKZQh7R3Ol03ARAwnTeO9O7i+O5E+7miBhIWLU/HzQ==
X-Received: by 2002:a9d:3e4a:: with SMTP id h10mr1179313otg.74.1544179033691; 
	Fri, 07 Dec 2018 02:37:13 -0800 (PST)
Received: from cloudburst.twiddle.net (172.189-204-159.bestel.com.mx.
	[189.204.159.172]) by smtp.gmail.com with ESMTPSA id
	c19sm2037594otl.16.2018.12.07.02.37.12
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Fri, 07 Dec 2018 02:37:13 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Fri,  7 Dec 2018 04:36:31 -0600
Message-Id: <20181207103631.28193-27-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181207103631.28193-1-richard.henderson@linaro.org>
References: <20181207103631.28193-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::342
Subject: [Qemu-devel] [PATCH 26/26] target/arm: Tidy TBI handling in
 gen_a64_set_pc
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org, ramana.radhakrishnan@arm.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

We can perform this with fewer operations.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 target/arm/translate-a64.c | 65 ++++++++++++++------------------------
 1 file changed, 23 insertions(+), 42 deletions(-)

diff --git a/target/arm/translate-a64.c b/target/arm/translate-a64.c
index 99e1405dff..15080cbb3c 100644
--- a/target/arm/translate-a64.c
+++ b/target/arm/translate-a64.c
@@ -261,7 +261,7 @@ void gen_a64_set_pc_im(uint64_t val)
 /* Load the PC from a generic TCG variable.
  *
  * If address tagging is enabled via the TCR TBI bits, then loading
- * an address into the PC will clear out any tag in the it:
+ * an address into the PC will clear out any tag in it:
  *  + for EL2 and EL3 there is only one TBI bit, and if it is set
  *    then the address is zero-extended, clearing bits [63:56]
  *  + for EL0 and EL1, TBI0 controls addresses with bit 55 == 0
@@ -276,56 +276,37 @@ void gen_a64_set_pc_im(uint64_t val)
  */
 static void gen_a64_set_pc(DisasContext *s, TCGv_i64 src)
 {
+    bool tbi0 = s->tbi0, tbi1 = s->tbi1;
 
     if (s->current_el <= 1) {
-        /* Test if NEITHER or BOTH TBI values are set.  If so, no need to
-         * examine bit 55 of address, can just generate code.
-         * If mixed, then test via generated code
-         */
-        if (s->tbi0 && s->tbi1) {
-            TCGv_i64 tmp_reg = tcg_temp_new_i64();
-            /* Both bits set, sign extension from bit 55 into [63:56] will
-             * cover both cases
-             */
-            tcg_gen_shli_i64(tmp_reg, src, 8);
-            tcg_gen_sari_i64(cpu_pc, tmp_reg, 8);
-            tcg_temp_free_i64(tmp_reg);
-        } else if (!s->tbi0 && !s->tbi1) {
-            /* Neither bit set, just load it as-is */
-            tcg_gen_mov_i64(cpu_pc, src);
-        } else {
-            TCGv_i64 tcg_tmpval = tcg_temp_new_i64();
-            TCGv_i64 tcg_bit55  = tcg_temp_new_i64();
-            TCGv_i64 tcg_zero   = tcg_const_i64(0);
+        if (tbi0 || tbi1) {
+            /* Sign-extend from bit 55.  */
+            tcg_gen_sextract_i64(cpu_pc, src, 0, 56);
 
-            tcg_gen_andi_i64(tcg_bit55, src, (1ull << 55));
+            if (tbi0 != tbi1) {
+                TCGv_i64 tcg_zero = tcg_const_i64(0);
 
-            if (s->tbi0) {
-                /* tbi0==1, tbi1==0, so 0-fill upper byte if bit 55 = 0 */
-                tcg_gen_andi_i64(tcg_tmpval, src,
-                                 0x00FFFFFFFFFFFFFFull);
-                tcg_gen_movcond_i64(TCG_COND_EQ, cpu_pc, tcg_bit55, tcg_zero,
-                                    tcg_tmpval, src);
-            } else {
-                /* tbi0==0, tbi1==1, so 1-fill upper byte if bit 55 = 1 */
-                tcg_gen_ori_i64(tcg_tmpval, src,
-                                0xFF00000000000000ull);
-                tcg_gen_movcond_i64(TCG_COND_NE, cpu_pc, tcg_bit55, tcg_zero,
-                                    tcg_tmpval, src);
+                /*
+                 * The two TBI bits differ.
+                 * If tbi0, then !tbi1: only use the extension if positive.
+                 * if !tbi0, then tbi1: only use the extension if negative.
+                 */
+                tcg_gen_movcond_i64(tbi0 ? TCG_COND_GE : TCG_COND_LT,
+                                    cpu_pc, cpu_pc, tcg_zero, cpu_pc, src);
+                tcg_temp_free_i64(tcg_zero);
             }
-            tcg_temp_free_i64(tcg_zero);
-            tcg_temp_free_i64(tcg_bit55);
-            tcg_temp_free_i64(tcg_tmpval);
+            return;
         }
-    } else {  /* EL > 1 */
-        if (s->tbi0) {
+    } else {
+        if (tbi0) {
             /* Force tag byte to all zero */
-            tcg_gen_andi_i64(cpu_pc, src, 0x00FFFFFFFFFFFFFFull);
-        } else {
-            /* Load unmodified address */
-            tcg_gen_mov_i64(cpu_pc, src);
+            tcg_gen_extract_i64(cpu_pc, src, 0, 56);
+            return;
         }
     }
+
+    /* Load unmodified address */
+    tcg_gen_mov_i64(cpu_pc, src);
 }
 
 typedef struct DisasCompare64 {
-- 
2.17.2


