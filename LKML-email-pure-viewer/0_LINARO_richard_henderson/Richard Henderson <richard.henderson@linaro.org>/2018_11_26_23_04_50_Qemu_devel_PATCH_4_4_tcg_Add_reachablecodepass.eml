Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:42:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EFA46580322
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 15:07:46 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 15:07:46 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AZnkTGRwC/P0j+6fXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2u8VIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJOT03/mbVhcx+kaxbuBCsqR5wzoLJboyZKORxfrjGcN8GWWZMRNpdWjZdDo+g?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YAsRq+ChWsBOz10D9Hm2L9068k3OQnDA7JwhYgH8kJsH?=
 =?us-ascii?q?TSsd74M70SUeGpw6nI1zrDde5Z1S396IfWdBAuvO+DXahrccrWz0kiDAfFjlSW?=
 =?us-ascii?q?qYP/JTOV0f4Bs2+B7+pvTO+ijXMspQJpojW32MsglorEipgIxlzZ9ih12pg5KN?=
 =?us-ascii?q?O4RUJhfNKpEoNcuiWYOodsX88uXm9ltDwnxrAEpZK3ZjUGxZc7yxPZdveJaZKH?=
 =?us-ascii?q?4gj5W+aUOTp4hGxqeLa4hxuq9Uigy/b8VtWv0FpQoSpFlMTMumoK1xzJ5ciLUv?=
 =?us-ascii?q?p9/kG/1jaTzw3f9P1ILEMumabGNpIswaQ8moQdvEnDBCP6hUf7gLeTdko+++io?=
 =?us-ascii?q?7+rnYq/hpp+ZL4J0kx/xMqEzmsCmHOs3LBYOUHaf+eilz7Lj+lD5QLNWgfIoia?=
 =?us-ascii?q?nVt5TaJcUYpqGnGQNU3Zsj5g67Dzen1tQYgHYGIEhEeBKBk4jmJVXOLOrkAve4?=
 =?us-ascii?q?hlShizFrx/fAPr3uBJXNM2LPkLD7fbZy80Jc0hY8zchD55JIDbEMOPbzWk7ytN?=
 =?us-ascii?q?PGFBM4PBG0zv3jCNV80IMeRG2ODrWYMKPUrV+H+OYvL/OQa48SvTauY8Uj/OPk?=
 =?us-ascii?q?2H8lhUcGL+7u2ZoMdGv+GPNgLEOEJ332jZAEGGYOuwM4C+vylFyFVyUUfnu3Qu?=
 =?us-ascii?q?cw6y82DNGbC5zeTNWoib2FwCDpB5BTeyVKB06BFTLyepyZVuwQQCSVJMBnj3oD?=
 =?us-ascii?q?T7f2UJIr1xylqFrnzaF6JPHf4CwSuMHf041s6ujO0B0/6zFwJ8Ka1W6LUidzhG?=
 =?us-ascii?q?xbaSUx2fVFoEd9w02PmYh1hfBVD8dU4bsdSAYxNZfGw6p6Btb+VxjaedGhTFeg?=
 =?us-ascii?q?S8+hRzYrQYRikJc1f09hFoD63Vj41C2wDupNmg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BmAAARfPxbhxHrdtBjHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwgmKMcIsklFKEdxSBXRQBARgUiGMiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?jDII2BQIDGAmCXAMDAQIkGQEBBAocDgIDAQIGAQE+CggDATABBQEcGQWDHIICA?=
 =?us-ascii?q?QSbADyKHYFsM4J2AQEFgkOEZAgSh0yEK4FXP4NuhRtlhQ6QEo9yBwKCHASLJ4N?=
 =?us-ascii?q?dCxiBWSOHVYc3LIlBjhwGAgkHDyGBLAmBfU0wgy+CGwwXiF6FX1GBB4ltKiyBd?=
 =?us-ascii?q?wEB?=
X-IPAS-Result: =?us-ascii?q?A0BmAAARfPxbhxHrdtBjHgEGBwaBUwcLAYEwgmKMcIsklFK?=
 =?us-ascii?q?EdxSBXRQBARgUiGMiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCX?=
 =?us-ascii?q?AMDAQIkGQEBBAocDgIDAQIGAQE+CggDATABBQEcGQWDHIICAQSbADyKHYFsM4J?=
 =?us-ascii?q?2AQEFgkOEZAgSh0yEK4FXP4NuhRtlhQ6QEo9yBwKCHASLJ4NdCxiBWSOHVYc3L?=
 =?us-ascii?q?IlBjhwGAgkHDyGBLAmBfU0wgy+CGwwXiF6FX1GBB4ltKiyBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,284,1539673200"; 
   d="scan'208";a="54414628"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 15:07:45 -0800
Received: from localhost ([::1]:39246 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRPyj-0005Cd-44
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 18:07:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43094)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gRPwH-0002oJ-Ir
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 18:05:16 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gRPwC-0000Px-PD
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 18:05:13 -0500
Received: from mail-pf1-x442.google.com ([2607:f8b0:4864:20::442]:33436)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gRPw5-0000H5-NP
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 18:05:03 -0500
Received: by mail-pf1-x442.google.com with SMTP id c123so6626614pfb.0
	for <qemu-devel@nongnu.org>; Mon, 26 Nov 2018 15:05:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:subject:date:message-id:in-reply-to:references;
	bh=a0XirnQ7KM4RULalH+OyIr7voieSl1aNO3zcM/erWq4=;
	b=NdyQs7524wesy0vigNHMby5pjG+QxRG9kxgP3PK8vJeFL/IJSCjPcV8B0UKIWrvmBI
	0PkBmSvPgKyD5KseCTJVcfpVi4U1P7c2mlXstMzDiFNcwW36YJBxXjJ7Oe5CR1EprdGl
	7F6INDx0qz3WDrcESXdI0m3ZVjihRfW+2+3/w=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
	:references;
	bh=a0XirnQ7KM4RULalH+OyIr7voieSl1aNO3zcM/erWq4=;
	b=hR7xk7pwz7TPQ70HxdTZJTqXRR/p3kywIBXOpL5BBDFqA3dnVuEfXk2tv0rvHbYARJ
	D79ZGWGp5LgMbLgwEwa1CzuYkZxHJibVJ9vBRGa+FzQgnKF/M9roAWhY331nUJ7HT2cs
	0cswQuJPaB1RhpQh7oka2DqSYDr/DamXt9DatQJvKCW14/n2Iy4nmhmgx2eVy9PDZ3Wp
	d0traMKvTUzl2vIwDwOoy/nwBVNNWo8PifXLiLIyizyOIpZVTVBhOROD9YWijBlyFkLK
	iXh97vS1pYw/nc/rmUSf7ervf3rGvoSzLPysiUm66ieCQV2Ei/ZSfbDfuzmWg9S6Fdry
	B/JQ==
X-Gm-Message-State: AA+aEWaNNPb6m4VSs3MaJVAlzLquueyHqyd8fxnpOtvGI45oof+uNmPI
	O+5/WXAdG0+0MiYDCHMm4Tt/+I2o76o=
X-Google-Smtp-Source: AFSGD/WmdAnOv9NGKs7wKQ17hICon9576ODyyOf0w8/XMg/UGcyD/+hta9PA+tCVlEwQI7+kUvY1PQ==
X-Received: by 2002:a65:534b:: with SMTP id w11mr26930014pgr.125.1543273498747;
	Mon, 26 Nov 2018 15:04:58 -0800 (PST)
Received: from cloudburst.twiddle.net (97-113-170-180.tukw.qwest.net.
	[97.113.170.180]) by smtp.gmail.com with ESMTPSA id
	o13sm1798703pfk.57.2018.11.26.15.04.57 for <qemu-devel@nongnu.org>
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Mon, 26 Nov 2018 15:04:57 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Mon, 26 Nov 2018 15:04:50 -0800
Message-Id: <20181126230450.672-5-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181126230450.672-1-richard.henderson@linaro.org>
References: <20181126230450.672-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::442
Subject: [Qemu-devel] [PATCH 4/4] tcg: Add reachable_code_pass
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Delete trivially dead code that follows unconditional branches and
noreturn helpers.  These can occur either via optimization or via
the structure of a target's translator following an exception.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 tcg/tcg.c | 76 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 76 insertions(+)

diff --git a/tcg/tcg.c b/tcg/tcg.c
index 31b9b58240..ffbf8f01ad 100644
--- a/tcg/tcg.c
+++ b/tcg/tcg.c
@@ -2301,6 +2301,81 @@ static void tcg_la_bb_end(TCGContext *s)
     }
 }
 
+/* Reachable analysis : remove unreachable code.  */
+static void reachable_code_pass(TCGContext *s)
+{
+    TCGOp *op, *op_next;
+    bool dead = false;
+
+    QTAILQ_FOREACH_SAFE(op, &s->ops, link, op_next) {
+        bool remove = dead;
+        TCGLabel *label;
+        int call_flags;
+
+        switch (op->opc) {
+        case INDEX_op_set_label:
+            label = arg_label(op->args[0]);
+            if (label->refs == 0) {
+                /*
+                 * While there is an occasional backward branch, virtually
+                 * all branches generated by the translators are forward.
+                 * Which means that generally we will have already removed
+                 * all references to the label that will be, and there is
+                 * little to be gained by iterating.
+                 */
+                remove = true;
+            } else {
+                /* Once we see a label, insns become live again.  */
+                dead = false;
+                remove = false;
+
+                /*
+                 * Optimization can fold conditional branches to unconditional.
+                 * If we find a label with one reference which is preceeded by
+                 * an unconditional branch to it, remove both.  This needed to
+                 * wait until the dead code in between them was removed.
+                 */
+                if (label->refs == 1) {
+                    TCGOp *op_prev = QTAILQ_PREV(op, TCGOpHead, link);
+                    if (op_prev->opc == INDEX_op_br &&
+                        label == arg_label(op_prev->args[0])) {
+                        tcg_op_remove(s, op_prev);
+                        remove = true;
+                    }
+                }
+            }
+            break;
+
+        case INDEX_op_br:
+        case INDEX_op_exit_tb:
+        case INDEX_op_goto_ptr:
+            /* Unconditional branches; everything following is dead.  */
+            dead = true;
+            break;
+
+        case INDEX_op_call:
+            /* Notice noreturn helper calls, raising exceptions.  */
+            call_flags = op->args[TCGOP_CALLO(op) + TCGOP_CALLI(op) + 1];
+            if (call_flags & TCG_CALL_NO_RETURN) {
+                dead = true;
+            }
+            break;
+
+        case INDEX_op_insn_start:
+            /* Never remove -- we need to keep these for unwind.  */
+            remove = false;
+            break;
+
+        default:
+            break;
+        }
+
+        if (remove) {
+            tcg_op_remove(s, op);
+        }
+    }
+}
+
 /* Liveness analysis : update the opc_arg_life array to tell if a
    given input arguments is dead. Instructions updating dead
    temporaries are removed. */
@@ -3537,6 +3612,7 @@ int tcg_gen_code(TCGContext *s, TranslationBlock *tb)
     atomic_set(&prof->la_time, prof->la_time - profile_getclock());
 #endif
 
+    reachable_code_pass(s);
     liveness_pass_1(s);
 
     if (s->nb_indirects > 0) {
-- 
2.17.2


