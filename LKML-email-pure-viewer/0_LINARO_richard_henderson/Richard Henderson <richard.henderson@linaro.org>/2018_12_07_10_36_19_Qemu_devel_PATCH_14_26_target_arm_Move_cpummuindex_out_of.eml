Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BBB7C5804C1
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 02:53:36 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 07 Dec 2018 02:53:36 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3APDS0HxNZe+O/o8stiFAl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/n+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhMtyg6JVvRyhvx5yzYzbbY2IOvdyYr3SfcgBSGZdQspcTTBND5mg?=
 =?us-ascii?q?Y4cTCecKIOZWr5P6p1sLtRawGQisC//vyjBSnH/5wLAx3eY/HgHAwQMvAcgOsG?=
 =?us-ascii?q?/TrNXzKawfVvq1zKjUwjXDdfxWwyry5JLIch8/p/GDQKx/cdDKyUkoEQPIlVGQ?=
 =?us-ascii?q?qY3jPzyPzOQNtHKX7+16VeKgkmMqrRx6rDu3xso0lIXFmoEYxkrZ+Slkw4s5P8?=
 =?us-ascii?q?O0RUB7bNK+DZddtTmWO5Z1T84mWW1kpjo2x7IctZKmfCUHzI4rywPdZvCZdYWD?=
 =?us-ascii?q?/wjtW/yLIThigXJoYLK/iAi28Uin0uD8Usi00E1WripeiNXMuXYN1wHJ5siAUP?=
 =?us-ascii?q?t98V+t2TeJ1w/N9uFJOV44mbbYJpI737I8i5kevV7dEiL4mEj6lrKae0c89uit?=
 =?us-ascii?q?8evnY7HmppGGN49zjwHzKr0uldK6AeQlKwQBQnaU+fqi273n5EH2W7JKjuAwkq?=
 =?us-ascii?q?bFrp/aPsMXpqq4Aw9WzIkv8Rm+Dyq+3dQcnHkHKk9FeR2dg4joPVHOPO73DfOl?=
 =?us-ascii?q?j1uwlzdrwuvLPrvmApXLIXjDlqrhcax6605Gxwo/1cpf6I5MCrEdPPLzXVf8tN?=
 =?us-ascii?q?jZDh86LQO42enmCMhm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4q2m?=
 =?us-ascii?q?sHkihFVIfbW1xYBFLze8H+96OAOfZnzjhMpHFn0F+Q83TejvgVvFViZPZnG0RO?=
 =?us-ascii?q?Ul6zQmTY6rE4rHFb2rm6GLiSKyH5lKYTJfB1WRVHvlaYiAHu0BcT+fOdNJlDsC?=
 =?us-ascii?q?Wr68DYg72ka1qQX4xrF7e/fS4TASrpn51dJ4tNHUwAg/8CExA8mD3mWlSWZykW?=
 =?us-ascii?q?UVATgs0/NRu0t4n22C2qhxmfAQNdFV6/5TSQA8fcrGzud6Asr+HALMeNuEUk2h?=
 =?us-ascii?q?RP2iADc4VNV3xMUBNRUuU+6+hwzOinL5S4QekKaGUcQ5?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAABBUApcmBHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKMcosxmVyBcxIBARgUh1oiNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDiM?=
 =?us-ascii?q?MgjYFAgMYCYJcAwMBAiQZAQEECikBAgMBAgYBAT4KCAMBMAEFARwZBYMcggIBA?=
 =?us-ascii?q?QOZPTyKHYFsM4J2AQEFgkOEZwgSh16DE4EcgVc/g26LEYk5hwCQMAcCgiEEjxs?=
 =?us-ascii?q?LGIljh1UsmEgGAgkHDyGBJYINTTCDL4IbDBeIXoVeU4EHiEmBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AgAABBUApcmBHrdtBjHgEGBwaBUQkLAYEwgmKMcosxmVy?=
 =?us-ascii?q?BcxIBARgUh1oiNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMYCYJcA?=
 =?us-ascii?q?wMBAiQZAQEECikBAgMBAgYBAT4KCAMBMAEFARwZBYMcggIBAQOZPTyKHYFsM4J?=
 =?us-ascii?q?2AQEFgkOEZwgSh16DE4EcgVc/g26LEYk5hwCQMAcCgiEEjxsLGIljh1UsmEgGA?=
 =?us-ascii?q?gkHDyGBJYINTTCDL4IbDBeIXoVeU4EHiEmBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="56512141"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 02:53:35 -0800
Received: from localhost ([::1]:45335 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVDlH-0002mr-4z
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 05:53:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59203)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gVDVD-0008Bu-7N
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:01 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gVDVC-0007kc-0c
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:36:59 -0500
Received: from mail-ot1-x341.google.com ([2607:f8b0:4864:20::341]:46154)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gVDVB-0007ht-Qj
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:36:57 -0500
Received: by mail-ot1-x341.google.com with SMTP id w25so3309703otm.13
	for <qemu-devel@nongnu.org>; Fri, 07 Dec 2018 02:36:57 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=XvZTGTYjUe/CqE8goYOLGOvh/OEaS2UEgrpCkPuGHNk=;
	b=AZNsB+iBtTqQReyBoRZmZT1kvswobHBVscI1PbpxKdjp/gPSj1DjtFi5/03aGCewiU
	aOGOvuKCle72NTvgYSD1R5lT7vI+C2WuFASnMNh4If9e+oCTBK49Ky3LnLs3STgprCc+
	4jKeS0m1AHE4Zxkzszt9vjRasNQCyFScuaBpA=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=XvZTGTYjUe/CqE8goYOLGOvh/OEaS2UEgrpCkPuGHNk=;
	b=AdoFc6+0ttAZ9mgMc5y55DO+7agL0oSSv2dRBzIAl5qAUY6EiGRMihT24KbVI8I8IA
	yXKzKH/cmq0eTMHwoUHGTpbbDjZWCBSfjJX+p2hhE9osiN5gYNkNFIKB8HHVphtEY+3z
	azRylQxPM8QMonIaq5c1QRvL39rVXuny39DhaHoQR33V5tu6/Kjx2NGFL90NyhEhiuR4
	eFfK737nd3YGPPbr0K5nLrYx7Ed+n4w8VXZ28Zc6WQA++7ZzeknZZysmqfztMGdFUa2m
	NxE3rEPyG+BuJPpno14LnuMwc2X3sY739erZKC46/QPQSCuo15kQKQa/eWvCF9fN1eDU
	Pn9Q==
X-Gm-Message-State: AA+aEWakFA/iwy1708uU9kNATUvlUSMfqa05GEkCiPy0MSqlIRnWkJnk
	mzpNhEDtq6RJ4CSu1pj+1OeKRQsZ318=
X-Google-Smtp-Source: AFSGD/UnP8/yIAFJ1CnNNQHgwH9sA2XFIUPWx7Vne+HNXlSpknOBp+VVoI4sM7QxnlvQsmu4J7IZRw==
X-Received: by 2002:a9d:1b0:: with SMTP id e45mr1182823ote.16.1544179016818;
	Fri, 07 Dec 2018 02:36:56 -0800 (PST)
Received: from cloudburst.twiddle.net (172.189-204-159.bestel.com.mx.
	[189.204.159.172]) by smtp.gmail.com with ESMTPSA id
	c19sm2037594otl.16.2018.12.07.02.36.55
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Fri, 07 Dec 2018 02:36:56 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Fri,  7 Dec 2018 04:36:19 -0600
Message-Id: <20181207103631.28193-15-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181207103631.28193-1-richard.henderson@linaro.org>
References: <20181207103631.28193-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::341
Subject: [Qemu-devel] [PATCH 14/26] target/arm: Move cpu_mmu_index out of
 line
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org, ramana.radhakrishnan@arm.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This function is, or will shortly become, too big to inline.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 target/arm/cpu.h    | 48 +++++----------------------------------------
 target/arm/helper.c | 44 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+), 43 deletions(-)

diff --git a/target/arm/cpu.h b/target/arm/cpu.h
index f70eff8bcf..18f2378b87 100644
--- a/target/arm/cpu.h
+++ b/target/arm/cpu.h
@@ -2731,54 +2731,16 @@ static inline int arm_mmu_idx_to_el(ARMMMUIdx mmu_idx)
 }
 
 /* Return the MMU index for a v7M CPU in the specified security and
- * privilege state
+ * privilege state.
  */
-static inline ARMMMUIdx arm_v7m_mmu_idx_for_secstate_and_priv(CPUARMState *env,
-                                                              bool secstate,
-                                                              bool priv)
-{
-    ARMMMUIdx mmu_idx = ARM_MMU_IDX_M;
-
-    if (priv) {
-        mmu_idx |= ARM_MMU_IDX_M_PRIV;
-    }
-
-    if (armv7m_nvic_neg_prio_requested(env->nvic, secstate)) {
-        mmu_idx |= ARM_MMU_IDX_M_NEGPRI;
-    }
-
-    if (secstate) {
-        mmu_idx |= ARM_MMU_IDX_M_S;
-    }
-
-    return mmu_idx;
-}
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate_and_priv(CPUARMState *env,
+                                                bool secstate, bool priv);
 
 /* Return the MMU index for a v7M CPU in the specified security state */
-static inline ARMMMUIdx arm_v7m_mmu_idx_for_secstate(CPUARMState *env,
-                                                     bool secstate)
-{
-    bool priv = arm_current_el(env) != 0;
-
-    return arm_v7m_mmu_idx_for_secstate_and_priv(env, secstate, priv);
-}
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate(CPUARMState *env, bool secstate);
 
 /* Determine the current mmu_idx to use for normal loads/stores */
-static inline int cpu_mmu_index(CPUARMState *env, bool ifetch)
-{
-    int el = arm_current_el(env);
-
-    if (arm_feature(env, ARM_FEATURE_M)) {
-        ARMMMUIdx mmu_idx = arm_v7m_mmu_idx_for_secstate(env, env->v7m.secure);
-
-        return arm_to_core_mmu_idx(mmu_idx);
-    }
-
-    if (el < 2 && arm_is_secure_below_el3(env)) {
-        return arm_to_core_mmu_idx(ARMMMUIdx_S1SE0 + el);
-    }
-    return el;
-}
+int cpu_mmu_index(CPUARMState *env, bool ifetch);
 
 /* Indexes used when registering address spaces with cpu_address_space_init */
 typedef enum ARMASIdx {
diff --git a/target/arm/helper.c b/target/arm/helper.c
index 158c550fab..eaa9e60e7b 100644
--- a/target/arm/helper.c
+++ b/target/arm/helper.c
@@ -12959,6 +12959,50 @@ int fp_exception_el(CPUARMState *env, int cur_el)
     return 0;
 }
 
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate_and_priv(CPUARMState *env,
+                                                bool secstate, bool priv)
+{
+    ARMMMUIdx mmu_idx = ARM_MMU_IDX_M;
+
+    if (priv) {
+        mmu_idx |= ARM_MMU_IDX_M_PRIV;
+    }
+
+    if (armv7m_nvic_neg_prio_requested(env->nvic, secstate)) {
+        mmu_idx |= ARM_MMU_IDX_M_NEGPRI;
+    }
+
+    if (secstate) {
+        mmu_idx |= ARM_MMU_IDX_M_S;
+    }
+
+    return mmu_idx;
+}
+
+/* Return the MMU index for a v7M CPU in the specified security state */
+ARMMMUIdx arm_v7m_mmu_idx_for_secstate(CPUARMState *env, bool secstate)
+{
+    bool priv = arm_current_el(env) != 0;
+
+    return arm_v7m_mmu_idx_for_secstate_and_priv(env, secstate, priv);
+}
+
+int cpu_mmu_index(CPUARMState *env, bool ifetch)
+{
+    int el = arm_current_el(env);
+
+    if (arm_feature(env, ARM_FEATURE_M)) {
+        ARMMMUIdx mmu_idx = arm_v7m_mmu_idx_for_secstate(env, env->v7m.secure);
+
+        return arm_to_core_mmu_idx(mmu_idx);
+    }
+
+    if (el < 2 && arm_is_secure_below_el3(env)) {
+        return arm_to_core_mmu_idx(ARMMMUIdx_S1SE0 + el);
+    }
+    return el;
+}
+
 void cpu_get_tb_cpu_state(CPUARMState *env, target_ulong *pc,
                           target_ulong *cs_base, uint32_t *pflags)
 {
-- 
2.17.2


