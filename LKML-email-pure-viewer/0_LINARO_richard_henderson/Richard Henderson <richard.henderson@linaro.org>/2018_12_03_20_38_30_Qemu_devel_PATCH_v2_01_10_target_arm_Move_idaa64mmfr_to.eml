Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:57:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2A173580578
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 12:42:13 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 12:42:12 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A4qTHbBN2GOyQTGDmc8gl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/n+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhMtyg6JVvRyhvx5yzYzbbY2IOvdyYr3SfcgBSGZdQspcTTBND5mg?=
 =?us-ascii?q?Y4cTCecKIOZWr5P6p1sLtRawGQisC//vyjBSnH/5wLAx3eY/HgHAwQMvAcgOsG?=
 =?us-ascii?q?/TrNXzKawfVvq1zKjUwjXDdfxWwyry5JLIch8/p/GDQKx/cdDKyUkoEQPIlVGQ?=
 =?us-ascii?q?qY3jPzyPzOQNtHKX7+16VeKgkmMqrRx6rDu3xso0lIXFmoEYxkrZ+Slkw4s5P8?=
 =?us-ascii?q?O0RUB7bNK+DZddtTmWO5Z1T84mWW1kpjo2x7IctZKmfCUHzI4rywPdZvCZdYWD?=
 =?us-ascii?q?/wjtW/yLIThigXJoYLK/iAi28Uin0uD8Usi00E1WripeiNXMuXYN1wHJ5siAUP?=
 =?us-ascii?q?t98V+t2TeJ1w/N9uFJOV44mbbYJpI737I8i5kevV7dEiL4mEj6lrKae0c89uit?=
 =?us-ascii?q?8evnY7HmppGGN49zjwHzKr0uldK6AeQlKwQBQnaU+fqi273n5EH2W7JKjuAwkq?=
 =?us-ascii?q?bFrp/aPsMXpqq4Aw9WzIkv8Rm+Dyq+3dQcnHkHKk9FeR2dg4joPVHOPO73DfOl?=
 =?us-ascii?q?j1uwlzdrwuvLPrvmApXLIXjDlqrhcax6605Gxwo/1cpf6I5MCrEdPPLzXVf8tN?=
 =?us-ascii?q?jZDh86LQO42enmCMhm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4q2m?=
 =?us-ascii?q?sHkihFVIfbW1xYBFLze8H+96OAOfZnzjhMpHFn0F+Q83TejvgVvFViZPZnG0RO?=
 =?us-ascii?q?Ul6zQmTY6rE4rHFb2rm6GLiSKyH5lKYTJfB1WRVHvlaYiAHu0BcT+fOdNJlDsC?=
 =?us-ascii?q?Wr68DYg72ka1qQX4xrF7e/fS4TASrpn51dJ4tNHUwAg/8CExA8mD3mWlSWZykW?=
 =?us-ascii?q?UVATgs0/NRu0t4n22C2qhxmfAQNdFV6/5TSQA8fcrGzud6Asr+HALMeNuEUk2h?=
 =?us-ascii?q?RP2iADc4VNV3xMUBNRUuU+6+hwzOinL5S4QekKaGUcQ5?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BiAAD7kwVchxHrdtBjHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwgmKMcI43lkyBcxIBARgUiAkiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jDII?=
 =?us-ascii?q?2BQIDGAmCXAMDAQIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHIICAQEDm?=
 =?us-ascii?q?nk8ih2BbDOCdgEBBYJDhGQIEodbgxOBHIFXP4ERgl2LEY8wfJAWBwKCHwSPDgs?=
 =?us-ascii?q?YgVuIADaHFSyYGgYCCQcPIYEsAYIFTTCDL4IbDBeIXoVeU4EHiGOBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BiAAD7kwVchxHrdtBjHgEGBwaBUwcLAYEwgmKMcI43lky?=
 =?us-ascii?q?BcxIBARgUiAkiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAMDA?=
 =?us-ascii?q?QIkGQEBBAopAQIDAQIGAQE+CggDATABBQEcGQWDHIICAQEDmnk8ih2BbDOCdgE?=
 =?us-ascii?q?BBYJDhGQIEodbgxOBHIFXP4ERgl2LEY8wfJAWBwKCHwSPDgsYgVuIADaHFSyYG?=
 =?us-ascii?q?gYCCQcPIYEsAYIFTTCDL4IbDBeIXoVeU4EHiGOBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="54346810"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 12:42:11 -0800
Received: from localhost ([::1]:52372 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTv2h-0008SY-4v
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 15:42:11 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:42260)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gTuzR-0005zH-D8
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 15:38:50 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gTuzO-0005ZZ-9F
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 15:38:49 -0500
Received: from mail-ot1-x344.google.com ([2607:f8b0:4864:20::344]:36332)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gTuzO-0005YZ-4B
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 15:38:46 -0500
Received: by mail-ot1-x344.google.com with SMTP id k98so12988440otk.3
	for <qemu-devel@nongnu.org>; Mon, 03 Dec 2018 12:38:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=HgiPURpwkuNHglqGFtsbvHALu/51kR4r/LhZdFeceZ4=;
	b=UUASMDz4Cb7gfyNRGUH/Z7bWnRUISHp7nCq1GLtM7wQPAE8nMRSbnCwb978qI7uaOi
	oQ2rYo99L6N5zhMWb726xvV0N8Wf8zz+cerBkG8NezW4DK62W9+1QrSZwjbArSrxfjgR
	aUEO0MTHRWiQ0LpLC1bc7BbPNUSHsBXvkImGc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=HgiPURpwkuNHglqGFtsbvHALu/51kR4r/LhZdFeceZ4=;
	b=fHpg+aZ/wkgTa+5g+zkOAsDKUWSj852EeTtR+eJOfC46k0iv3O/wblDa4+JN6S+ium
	gwOxAFkD9ZsZTaD9tjqb+ouPjJBiWZDlZUoBnDToVeSzx+4YKGHOEyh4WbMNUEj4AC77
	aSck5lcvbfX8w2qn4T24sISEKzU58fC8e12Pkpg4pfcSQ5yWsMzn8ygHJiMLznurQ/90
	fmX0EYhibAIxMeVihMVDLmt2voC4/smMkufIsWz8+vML6d92BMGieG9yBvB5K7zXY6iC
	q6MEEeb6vk6OH3jH2zkogrdLAOn9/xMlPZqFjvSpXLgu0LyOw8BJ/J02AB8qOwyfAH+g
	3vIw==
X-Gm-Message-State: AA+aEWZISLfRd0PoWCvVu1hXbg6rJvmv7SdE4fQFRNlNX967N/de0ogd
	MgFz/YpMcUw90PIhn0cS2pf/EC+80gA=
X-Google-Smtp-Source: AFSGD/X/mJsG3cJhtQlUCGzsHO3LRap8QLUsVUTxQ0djJhNFMRGmvwQzvt5NMT7j8Cbo7HyWGxXwkA==
X-Received: by 2002:a9d:8c6:: with SMTP id 64mr11674292otf.168.1543869525050; 
	Mon, 03 Dec 2018 12:38:45 -0800 (PST)
Received: from cloudburst.twiddle.net (172.189-204-159.bestel.com.mx.
	[189.204.159.172]) by smtp.gmail.com with ESMTPSA id
	m133sm6330063oib.52.2018.12.03.12.38.43
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Mon, 03 Dec 2018 12:38:44 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Mon,  3 Dec 2018 14:38:30 -0600
Message-Id: <20181203203839.757-2-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181203203839.757-1-richard.henderson@linaro.org>
References: <20181203203839.757-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::344
Subject: [Qemu-devel] [PATCH v2 01/10] target/arm: Move id_aa64mmfr* to
 ARMISARegisters
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

At the same time, define the fields for these registers,
and use those defines in arm_pamax().

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>

----
v2: Include the v8.5 fields; init the registers for kvm.
    Upcase all of the field names.
---
 target/arm/cpu.h       | 26 ++++++++++++++++++++++++--
 target/arm/internals.h |  3 ++-
 target/arm/cpu64.c     |  6 +++---
 target/arm/helper.c    |  4 ++--
 target/arm/kvm64.c     |  4 ++++
 5 files changed, 35 insertions(+), 8 deletions(-)

diff --git a/target/arm/cpu.h b/target/arm/cpu.h
index 2a73fed9a0..656a96a8f8 100644
--- a/target/arm/cpu.h
+++ b/target/arm/cpu.h
@@ -818,6 +818,8 @@ struct ARMCPU {
         uint64_t id_aa64isar1;
         uint64_t id_aa64pfr0;
         uint64_t id_aa64pfr1;
+        uint64_t id_aa64mmfr0;
+        uint64_t id_aa64mmfr1;
     } isar;
     uint32_t midr;
     uint32_t revidr;
@@ -839,8 +841,6 @@ struct ARMCPU {
     uint64_t id_aa64dfr1;
     uint64_t id_aa64afr0;
     uint64_t id_aa64afr1;
-    uint64_t id_aa64mmfr0;
-    uint64_t id_aa64mmfr1;
     uint32_t dbgdidr;
     uint32_t clidr;
     uint64_t mp_affinity; /* MP ID without feature bits */
@@ -1557,6 +1557,28 @@ FIELD(ID_AA64PFR0, GIC, 24, 4)
 FIELD(ID_AA64PFR0, RAS, 28, 4)
 FIELD(ID_AA64PFR0, SVE, 32, 4)
 
+FIELD(ID_AA64MMFR0, PARANGE, 0, 4)
+FIELD(ID_AA64MMFR0, ASIDBITS, 4, 4)
+FIELD(ID_AA64MMFR0, BIGEND, 8, 4)
+FIELD(ID_AA64MMFR0, SNSMEM, 12, 4)
+FIELD(ID_AA64MMFR0, BIGENDEL0, 16, 4)
+FIELD(ID_AA64MMFR0, TGRAN16, 20, 4)
+FIELD(ID_AA64MMFR0, TGRAN64, 24, 4)
+FIELD(ID_AA64MMFR0, TGRAN4, 28, 4)
+FIELD(ID_AA64MMFR0, TGRAN16_2, 32, 4)
+FIELD(ID_AA64MMFR0, TGRAN64_2, 36, 4)
+FIELD(ID_AA64MMFR0, TGRAN4_2, 40, 4)
+FIELD(ID_AA64MMFR0, EXS, 44, 4)
+
+FIELD(ID_AA64MMFR1, HAFDBS, 0, 4)
+FIELD(ID_AA64MMFR1, VMIDBITS, 4, 4)
+FIELD(ID_AA64MMFR1, VH, 8, 4)
+FIELD(ID_AA64MMFR1, HPDS, 12, 4)
+FIELD(ID_AA64MMFR1, LO, 16, 4)
+FIELD(ID_AA64MMFR1, PAN, 20, 4)
+FIELD(ID_AA64MMFR1, SPECSEI, 24, 4)
+FIELD(ID_AA64MMFR1, XNX, 28, 4)
+
 QEMU_BUILD_BUG_ON(ARRAY_SIZE(((ARMCPU *)0)->ccsidr) <= R_V7M_CSSELR_INDEX_MASK);
 
 /* If adding a feature bit which corresponds to a Linux ELF
diff --git a/target/arm/internals.h b/target/arm/internals.h
index d208b70a64..78e026d6e9 100644
--- a/target/arm/internals.h
+++ b/target/arm/internals.h
@@ -229,7 +229,8 @@ static inline unsigned int arm_pamax(ARMCPU *cpu)
         [4] = 44,
         [5] = 48,
     };
-    unsigned int parange = extract32(cpu->id_aa64mmfr0, 0, 4);
+    unsigned int parange =
+        FIELD_EX64(cpu->isar.id_aa64mmfr0, ID_AA64MMFR0, PARANGE);
 
     /* id_aa64mmfr0 is a read-only register so values outside of the
      * supported mappings can be considered an implementation error.  */
diff --git a/target/arm/cpu64.c b/target/arm/cpu64.c
index 873f059bf2..0babe483ac 100644
--- a/target/arm/cpu64.c
+++ b/target/arm/cpu64.c
@@ -141,7 +141,7 @@ static void aarch64_a57_initfn(Object *obj)
     cpu->pmceid0 = 0x00000000;
     cpu->pmceid1 = 0x00000000;
     cpu->isar.id_aa64isar0 = 0x00011120;
-    cpu->id_aa64mmfr0 = 0x00001124;
+    cpu->isar.id_aa64mmfr0 = 0x00001124;
     cpu->dbgdidr = 0x3516d000;
     cpu->clidr = 0x0a200023;
     cpu->ccsidr[0] = 0x701fe00a; /* 32KB L1 dcache */
@@ -195,7 +195,7 @@ static void aarch64_a53_initfn(Object *obj)
     cpu->isar.id_aa64pfr0 = 0x00002222;
     cpu->id_aa64dfr0 = 0x10305106;
     cpu->isar.id_aa64isar0 = 0x00011120;
-    cpu->id_aa64mmfr0 = 0x00001122; /* 40 bit physical addr */
+    cpu->isar.id_aa64mmfr0 = 0x00001122; /* 40 bit physical addr */
     cpu->dbgdidr = 0x3516d000;
     cpu->clidr = 0x0a200023;
     cpu->ccsidr[0] = 0x700fe01a; /* 32KB L1 dcache */
@@ -249,7 +249,7 @@ static void aarch64_a72_initfn(Object *obj)
     cpu->pmceid0 = 0x00000000;
     cpu->pmceid1 = 0x00000000;
     cpu->isar.id_aa64isar0 = 0x00011120;
-    cpu->id_aa64mmfr0 = 0x00001124;
+    cpu->isar.id_aa64mmfr0 = 0x00001124;
     cpu->dbgdidr = 0x3516d000;
     cpu->clidr = 0x0a200023;
     cpu->ccsidr[0] = 0x701fe00a; /* 32KB L1 dcache */
diff --git a/target/arm/helper.c b/target/arm/helper.c
index 0da1424f72..04c4a91b04 100644
--- a/target/arm/helper.c
+++ b/target/arm/helper.c
@@ -5207,11 +5207,11 @@ void register_cp_regs_for_features(ARMCPU *cpu)
             { .name = "ID_AA64MMFR0_EL1", .state = ARM_CP_STATE_AA64,
               .opc0 = 3, .opc1 = 0, .crn = 0, .crm = 7, .opc2 = 0,
               .access = PL1_R, .type = ARM_CP_CONST,
-              .resetvalue = cpu->id_aa64mmfr0 },
+              .resetvalue = cpu->isar.id_aa64mmfr0 },
             { .name = "ID_AA64MMFR1_EL1", .state = ARM_CP_STATE_AA64,
               .opc0 = 3, .opc1 = 0, .crn = 0, .crm = 7, .opc2 = 1,
               .access = PL1_R, .type = ARM_CP_CONST,
-              .resetvalue = cpu->id_aa64mmfr1 },
+              .resetvalue = cpu->isar.id_aa64mmfr1 },
             { .name = "ID_AA64MMFR2_EL1_RESERVED", .state = ARM_CP_STATE_AA64,
               .opc0 = 3, .opc1 = 0, .crn = 0, .crm = 7, .opc2 = 2,
               .access = PL1_R, .type = ARM_CP_CONST,
diff --git a/target/arm/kvm64.c b/target/arm/kvm64.c
index 0a502091e7..ad83e1479c 100644
--- a/target/arm/kvm64.c
+++ b/target/arm/kvm64.c
@@ -538,6 +538,10 @@ bool kvm_arm_get_host_cpu_features(ARMHostCPUFeatures *ahcf)
                               ARM64_SYS_REG(3, 0, 0, 6, 0));
         err |= read_sys_reg64(fdarray[2], &ahcf->isar.id_aa64isar1,
                               ARM64_SYS_REG(3, 0, 0, 6, 1));
+        err |= read_sys_reg64(fdarray[2], &achf->isar.id_aa64mmfr0,
+                              ARM64_SYS_REG(3, 0, 0, 7, 0));
+        err |= read_sys_reg64(fdarray[2], &achf->isar.id_aa64mmfr1,
+                              ARM64_SYS_REG(3, 0, 0, 7, 1));
 
         /*
          * Note that if AArch32 support is not present in the host,
-- 
2.17.2


