Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:57:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 86A6E5800CB;
	Sat,  8 Dec 2018 20:22:50 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 20:22:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ABlIbvhL/TYUCk0HmldmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/j7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoYb/qFQAthu+HQuhCfjzyjJLnHL6wbE23v4jHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtOqkSVOG1zLXSzTTDcvhYxzD96JLPchAiofGMWqxwetfWxEYyEgPFj0mQ?=
 =?us-ascii?q?qZblPj+PyuQNtHKb7+1jVeKvjG4ntRp8ojeqxsg2i4nJgpgZxUzD9SV82Ys4I8?=
 =?us-ascii?q?CzRk1jYdO8DpdcqyWXO5FrTs4sXW1kojs2x74atZKhfSUHyowrywDeZvCZb4SF?=
 =?us-ascii?q?5w/vWeaNLjp9mn5pZKyzihOs/US81+HxU8e530xXoSVZl9TDrWwB2h/P5cWCSP?=
 =?us-ascii?q?Zy5Fuu1iqK2g/I5OxIP0A5mKzGIJA72LEwjIAcsUHbEy/2hkr2iKiWe106+uin?=
 =?us-ascii?q?9evneK/qppyCOI9ujAHxLKAulta4AeQiPQgCR2mb+eKi273/5UD1XqlGg/ksnq?=
 =?us-ascii?q?XEvp3WO94XqrO6DgNJyIou6hSyAy+j0NsCnHkHKFxFeAiAj4jsI1zOJPH4DfGi?=
 =?us-ascii?q?g1WjiTtrxO7JPqfnAprTKnjPibDhfLh760FC0go+1s5f551KBbEbOv7zWVH+tM?=
 =?us-ascii?q?beDhAnNwy42eHnCM9y1o8GQ2KAHreZML/OsV+P/u8vJ+iMZIwLtzrnJPkl+uXj?=
 =?us-ascii?q?jXs4mV8bYKmo0oEbaHG+HvR6PUqZZWDgjcsGEWcPpgA+VvDliEWeUT5PYHa/R6?=
 =?us-ascii?q?I86Ss6CIK6F4jDQZqhgLyc3CihGJ1WaXtLClSNEXfuaoWFVO0AaCOUIs99jDME?=
 =?us-ascii?q?UaKtRJMm1RGrrAX60aZoLvLI+i0EspLuzNp15+rNmh0o9jx0CMKd02eKT2xvmm?=
 =?us-ascii?q?MIRjk23L1woEBny1eD17R4jOJcFdBJ+/xJVQI6P4bGz+NmE9DyRh7BftCRRVm8?=
 =?us-ascii?q?WdWmATYxTtErz98UeUl9Gc6vjhTC3yqsHr8UmKaHBJ0y8qLAwXfxI9xxxGrB1K?=
 =?us-ascii?q?kkl1MmWNdANXW6hq5j8AjeH43JnF+fl6qwcaQc3TTC9GGMzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPaBEgAkAAT+HKGOBM6BiegpWLeETNvGUjuY0Pq7elxtne7?=
 =?us-ascii?q?QlUowAGNak1rz6C19QINhfyAV/MT2aoJtzo7pDVqAlmxxdLWBMCGpwp6YqpcZ8?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?by+Y3ZH1Or3QNmny/BCuZ7TK2l3E19aW4KMP6PU+q1XspwypEksi83N609hayX?=
 =?us-ascii?q?ec55PKDBYMXpL1SEo46x96p7TCaCkn+4zUzWFsMbWzsjLawd0pAPUqyxm+cNZf?=
 =?us-ascii?q?Kq+LDxLyHNAACMioK+wqnEapYwkAPOBT8q40Isyne+GH2K6tIOZvgjamgX5b74?=
 =?us-ascii?q?B610KG7zB8RfLQ35YZ3/GY2ROKVjfhjFu7rs/7g4FFZTEIEWq5xijpH4pRZqx0?=
 =?us-ascii?q?fYYWBmaiOcy3xtNih5HzX35U7kKsB1QD2MWxYxqdc0T93RFM1UQQuXGngyq4wC?=
 =?us-ascii?q?BunDEzs6Wf2zbCw+L8exodO25HXXVtgk3oIYepkd8aRk+obw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b9ohsbyS/iH3?=
 =?us-ascii?q?FSxCsmdzGsoZj5mx16iGSALHd8tnbZeMdwxQvB69zYX/Jewj0GRCxggznNGle8?=
 =?us-ascii?q?J8Wp/cmTl5rbsOCxTXihVp5QcSns14+ArzG05W5pAR2+mfC8hNvnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Hodnmf0?=
 =?us-ascii?q?K9lb26P+bHwWSD4Pwt7V5hXl2UJ5InKIwYL5SmuSws97a9amZWMW3zo379pWB6?=
 =?us-ascii?q?eM8LxEgSx1r0K7rQ3LYPhxhDcdyeY0534cjOEEow4tziSbArAPEkhUJy3slxKU?=
 =?us-ascii?q?79+gqKVbfnqgcb+11EBmh9CuEKmCoh1AWHb+YpoiGC5w7sZlP17W3nz89JrkeM?=
 =?us-ascii?q?XOYtIJrRKbjQ3Aj+dOJZI1l/oKgzdnOG3nsX0kze47kQJh3ZWgsIebLGVt+bqz?=
 =?us-ascii?q?AgREOT3te8MT5jbtgL5CnsaR2oCjBJRgFS8NXJv1VvKoCzMSuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03kYUjGQCtwMzh?=
 =?us-ascii?q?bV115jQM5lPjrhtMy+RoNwTwU2vFpQeobCs0R4abLBZM8g5C4ELVO9SE7u1vBy?=
 =?us-ascii?q?FY4oGhrAuVJ2yZfQtICH8GWleeC1D/JLWu5sTA8+uFBuq4NfTOeq6DqehfV/eO?=
 =?us-ascii?q?2JKu3ZFq/zeKNsWTIHZiC+c31VZEXXB8A87ZgSkASzQLlyLRaM6WvBe9+ipqrs?=
 =?us-ascii?q?Cm7fTkQgTv6ZGUC7tVN9Vv9Au7gaOCN+6WmSZ4JixU1pIKxX/U1rcf2EQehD1p?=
 =?us-ascii?q?dzmoCb4ArzLCTLrMmq9LCB4WcyNzO9VJ76I/3QlNONTXitDv1r5/gf46FU1FVU?=
 =?us-ascii?q?H6msyyYcwKIme9NE7IBUqRNbSGIyHLzN/zYa+mVbJQi+BUvQWquTmHC0/jIiiD?=
 =?us-ascii?q?lz7xWh+1LOFDlzubMwJeuY2ndhZtCHPuTNbnah29Ld92gic6wbwyhnPWK2EcNS?=
 =?us-ascii?q?JwfF9Krr2V9SlYmOlwG3Rd7np5KumJgzqZ7+jdKpoMrfRnGDh7l+JE73Q80LZV?=
 =?us-ascii?q?6CBERPpomCrdtNJuolemkvWRxTpjShZBtjFLhIeTt0V4JarZ7oVAWWrD/B8V7W?=
 =?us-ascii?q?SfERIKp95kCt3po69Ry9jPm7j1KDdN6N/U+cocB87JKMOIKnYhMBzpGCLKAwsB?=
 =?us-ascii?q?VzKkKWbfh0kO2M2Vo0WcsZU+4rPsnZsDTvcPTFUqG/dcD0VmG9gLItF8XjYlnL?=
 =?us-ascii?q?qzg8sB5H74px7UEpZ0pJfCA96XAOn1OX6liqNDZBsP3/usIYESKpfqnVBlcF55?=
 =?us-ascii?q?nIPUM0XVVNFJ5CZma1ln8w127HFiQzhriAreYQS37SpWTKbskw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADllwxch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECFBODeogZjA6CDRSXPYFzEgEBGAM?=
 =?us-ascii?q?QAYddIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQEDAQIgBAsBD?=
 =?us-ascii?q?QEbHQEDAgkBAQUFFQMCAgUhAgIDDAUNAhEBBQEiEwWDHAGBaAEDFQEEmEs8iw1?=
 =?us-ascii?q?8FgUBF4J3BYQwChknDV2BNwIGEnmJeoEcgVc/gRGDEoJXhS4xgiYCiS+GDn1Rh?=
 =?us-ascii?q?GmKUy4HAoIhBIRjhxiDJCMKgVKICjaHIYd4hyuJZgYCCQcPIYElgg5NI4M8CYI?=
 =?us-ascii?q?SDBeDSop0HzIBgQQBASGNawEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAADllwxch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECFBODeogZjA6CDRSXPYFzEgEBGAMQAYddIjQJDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQEDAQIgBAsBDQEbHQEDAgkBAQU?=
 =?us-ascii?q?FFQMCAgUhAgIDDAUNAhEBBQEiEwWDHAGBaAEDFQEEmEs8iw18FgUBF4J3BYQwC?=
 =?us-ascii?q?hknDV2BNwIGEnmJeoEcgVc/gRGDEoJXhS4xgiYCiS+GDn1RhGmKUy4HAoIhBIR?=
 =?us-ascii?q?jhxiDJCMKgVKICjaHIYd4hyuJZgYCCQcPIYElgg5NI4M8CYISDBeDSop0HzIBg?=
 =?us-ascii?q?QQBASGNawEB?=
X-IronPort-AV: E=Sophos;i="5.56,333,1539673200"; 
   d="scan'208";a="44179569"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 20:22:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726086AbeLIEWj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 23:22:39 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:34842 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726056AbeLIEWi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 23:22:38 -0500
Received: by mail-pl1-f193.google.com with SMTP id p8so3657135plo.2;
        Sat, 08 Dec 2018 20:22:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent;
        bh=tF/HmfuYyXRuZl2fwaPDrE9wWRtMGoYsXgSlpP2vWuA=;
        b=YEiz/uMGeOchpypNxqoqEK3B7KNDboNLm06jeHbUu6hivO7LoQzeYWe1mWcVulYUsd
         WnOClsTGqj+BSg3fbE9KZ2LREZvlc3+3QQ7kZk+HU/cNtN6ab8pnMqXkf0AdKWMTN4NQ
         iZZxxn2GlnfvGOTG4gtXWbwV0IUlU3POtru+eF+fhuzMiH4FgTU63pZOlNMavNqT/28o
         qClw+lYjKARuH5RgJTLoV8VUStjVQsOlzEJP2VnIO5z+IEycGmI8pMZvltX5DQn85oK5
         dlHpeDt3rbyeASkAT5JqTgnfZNBue+vjajsn24AsHsNIVqnpfNBwNKWx3vtx3HS/dUBa
         EcKA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:content-transfer-encoding
         :in-reply-to:user-agent;
        bh=tF/HmfuYyXRuZl2fwaPDrE9wWRtMGoYsXgSlpP2vWuA=;
        b=oKF1v5xWJaS7bzqEPwy50vmsORMPan2tTm1YEjzs2X4zTNG1NBoAlKZlXUvU0a3aTv
         KjMUsjoEMfbRxr+K5tzZFySb+QxRUfTTip4FwsroJiPAfU/UQyHsTVw2atqnekkZ7r6r
         sDq9QqhgSnN017Ze/us65jYRct7fvMlk+kK49v+8vcor4NfQ7UEEZlpjIlm/NyuG9m1O
         CGWh+i4oeS6ctxAw43HdXNiXmfv6TU+mkxuGL3QWvqTEF5M59QWxhIACSf4wBZ5fnH4K
         SH18Xp9kydkTzI/T1ayIbYUcnNx9AhL1JussyygE1D4xsH/bT2dR6KB1IZM6FN+Cu+ze
         9VxA==
X-Gm-Message-State: AA+aEWZ8f3fDviblaHw1/dxFWCFwjX8HoK9OAywe9PqRVDwBaZyOcedA
        thm7Ic1VP/RAQUOP7bpXq/M=
X-Google-Smtp-Source: AFSGD/VksRc17JZMJQBS6PlIsofnQmOZdcMsbAoh9RNKTdVL0VMk2+1duk9k+Y+FU2/oSJaRrdjAqA==
X-Received: by 2002:a17:902:ab84:: with SMTP id f4mr7489319plr.207.1544329357525;
        Sat, 08 Dec 2018 20:22:37 -0800 (PST)
Received: from dtor-ws ([2620:15c:202:201:3adc:b08c:7acc:b325])
        by smtp.gmail.com with ESMTPSA id d11sm7562067pgi.25.2018.12.08.20.22.36
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 08 Dec 2018 20:22:36 -0800 (PST)
Date: Sat, 8 Dec 2018 20:22:34 -0800
From: Dmitry Torokhov <dmitry.torokhov@gmail.com>
To: =?utf-8?B?UGF3ZcWC?= Chmiel <pawel.mikolaj.chmiel@gmail.com>
Cc: robh+dt@kernel.org, mark.rutland@arm.com,
        devicetree@vger.kernel.org, linux-input@vger.kernel.org,
        linux-kernel@vger.kernel.org, xc-racer2@live.ca,
        simon@lineageos.org
Subject: Re: [PATCH 1/8] Input: tm2-touchkey: Add support for midas touchkey
Message-ID: <20181209042234.GB211094@dtor-ws>
References: <20181207105811.1831-1-pawel.mikolaj.chmiel@gmail.com>
 <20181207105811.1831-2-pawel.mikolaj.chmiel@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20181207105811.1831-2-pawel.mikolaj.chmiel@gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Paweł,

On Fri, Dec 07, 2018 at 11:58:04AM +0100, Paweł Chmiel wrote:
> From: Simon Shields <simon@lineageos.org>
> 
> The touchkey on midas boards is almost identical.
> The only real difference is that it uses the same register for both
> keycode and base.
> 
> Signed-off-by: Simon Shields <simon@lineageos.org>
> Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
> ---
>  drivers/input/keyboard/tm2-touchkey.c | 48 ++++++++++++++++++++++-----
>  1 file changed, 39 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/input/keyboard/tm2-touchkey.c b/drivers/input/keyboard/tm2-touchkey.c
> index abc266e40e17..37a5ced24009 100644
> --- a/drivers/input/keyboard/tm2-touchkey.c
> +++ b/drivers/input/keyboard/tm2-touchkey.c
> @@ -22,12 +22,13 @@
>  #include <linux/leds.h>
>  #include <linux/module.h>
>  #include <linux/of.h>
> +#include <linux/of_device.h>
>  #include <linux/pm.h>
>  #include <linux/regulator/consumer.h>
>  
> -#define TM2_TOUCHKEY_DEV_NAME		"tm2-touchkey"
> -#define TM2_TOUCHKEY_KEYCODE_REG	0x03
> -#define TM2_TOUCHKEY_BASE_REG		0x00
> +#define TM2_TOUCHKEY_DEV_NAME "tm2-touchkey"
> +#define MIDAS_TOUCHKEY_DEV_NAME "midas-touchkey"

I am not sure why we need to bother with name changes... We can get to
compatible if it is that interesting, but other than that it seems
only complicate things. Also, you use MIDAS_TOUCHKEY_DEV_NAME in only
one place and open-code it in others.

> +
>  #define TM2_TOUCHKEY_CMD_LED_ON		0x10
>  #define TM2_TOUCHKEY_CMD_LED_OFF	0x20
>  #define TM2_TOUCHKEY_BIT_PRESS_EV	BIT(3)
> @@ -40,12 +41,31 @@ enum {
>  	TM2_TOUCHKEY_KEY_BACK,
>  };
>  
> +struct touchkey_variant {
> +	const char *name;
> +	u8 keycode_reg;
> +	u8 base_reg;
> +};
> +
>  struct tm2_touchkey_data {
>  	struct i2c_client *client;
>  	struct input_dev *input_dev;
>  	struct led_classdev led_dev;
>  	struct regulator *vdd;
>  	struct regulator_bulk_data regulators[2];
> +	struct touchkey_variant *variant;

	const struct touchkey_variant *variant;

> +};
> +
> +static struct touchkey_variant tm2_touchkey_variant = {

static const

> +	.name = "tm2-touchkey",
> +	.keycode_reg = 0x03,
> +	.base_reg = 0x00,
> +};
> +
> +static struct touchkey_variant midas_touchkey_variant = {

static const

> +	.name = "midas-touchkey",
> +	.keycode_reg = 0x00,
> +	.base_reg = 0x00,
>  };
>  
>  static void tm2_touchkey_led_brightness_set(struct led_classdev *led_dev,
> @@ -66,7 +86,7 @@ static void tm2_touchkey_led_brightness_set(struct led_classdev *led_dev,
>  
>  	regulator_set_voltage(touchkey->vdd, volt, volt);
>  	i2c_smbus_write_byte_data(touchkey->client,
> -				  TM2_TOUCHKEY_BASE_REG, data);
> +				  touchkey->variant->base_reg, data);
>  }
>  
>  static int tm2_touchkey_power_enable(struct tm2_touchkey_data *touchkey)
> @@ -99,7 +119,7 @@ static irqreturn_t tm2_touchkey_irq_handler(int irq, void *devid)
>  	int key;
>  
>  	data = i2c_smbus_read_byte_data(touchkey->client,
> -					TM2_TOUCHKEY_KEYCODE_REG);
> +					touchkey->variant->keycode_reg);
>  	if (data < 0) {
>  		dev_err(&touchkey->client->dev,
>  			"failed to read i2c data: %d\n", data);
> @@ -153,6 +173,9 @@ static int tm2_touchkey_probe(struct i2c_client *client,
>  	touchkey->client = client;
>  	i2c_set_clientdata(client, touchkey);
>  
> +	touchkey->variant = (struct touchkey_variant *)


Is cast really needed?

> +		of_device_get_match_data(&client->dev);
> +
>  	touchkey->regulators[0].supply = "vcc";
>  	touchkey->regulators[1].supply = "vdd";
>  	error = devm_regulator_bulk_get(&client->dev,
> @@ -187,7 +210,7 @@ static int tm2_touchkey_probe(struct i2c_client *client,
>  		return -ENOMEM;
>  	}
>  
> -	touchkey->input_dev->name = TM2_TOUCHKEY_DEV_NAME;
> +	touchkey->input_dev->name = touchkey->variant->name;
>  	touchkey->input_dev->id.bustype = BUS_I2C;
>  
>  	input_set_capability(touchkey->input_dev, EV_KEY, KEY_PHONE);
> @@ -203,7 +226,7 @@ static int tm2_touchkey_probe(struct i2c_client *client,
>  	error = devm_request_threaded_irq(&client->dev, client->irq,
>  					  NULL, tm2_touchkey_irq_handler,
>  					  IRQF_ONESHOT,
> -					  TM2_TOUCHKEY_DEV_NAME, touchkey);
> +					  touchkey->variant->name, touchkey);
>  	if (error) {
>  		dev_err(&client->dev,
>  			"failed to request threaded irq: %d\n", error);
> @@ -211,7 +234,7 @@ static int tm2_touchkey_probe(struct i2c_client *client,
>  	}
>  
>  	/* led device */
> -	touchkey->led_dev.name = TM2_TOUCHKEY_DEV_NAME;
> +	touchkey->led_dev.name = touchkey->variant->name;
>  	touchkey->led_dev.brightness = LED_FULL;
>  	touchkey->led_dev.max_brightness = LED_ON;
>  	touchkey->led_dev.brightness_set = tm2_touchkey_led_brightness_set;
> @@ -257,12 +280,19 @@ static SIMPLE_DEV_PM_OPS(tm2_touchkey_pm_ops,
>  
>  static const struct i2c_device_id tm2_touchkey_id_table[] = {
>  	{ TM2_TOUCHKEY_DEV_NAME, 0 },
> +	{ MIDAS_TOUCHKEY_DEV_NAME, 0 },
>  	{ },
>  };
>  MODULE_DEVICE_TABLE(i2c, tm2_touchkey_id_table);
>  
>  static const struct of_device_id tm2_touchkey_of_match[] = {
> -	{ .compatible = "cypress,tm2-touchkey", },
> +	{
> +		.compatible = "cypress,tm2-touchkey",
> +		.data = &tm2_touchkey_variant,
> +	}, {
> +		.compatible = "cypress,midas-touchkey",
> +		.data = &midas_touchkey_variant,
> +	},
>  	{ },
>  };
>  MODULE_DEVICE_TABLE(of, tm2_touchkey_of_match);
> -- 
> 2.17.1
> 

Thanks.

-- 
Dmitry
