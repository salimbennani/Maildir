Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 16:44:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 382D15807A0;
	Sat, 15 Dec 2018 22:34:15 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 22:34:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0rBI9hNyi9WJ3levIFEl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPjzpMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyDJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KKMSXv66zabWzTTIcu5Y2TT86IfVaB8hp/aMXaxtesfW00YvEx3Kj1qO?=
 =?us-ascii?q?po3lJT+VzecNs2mG4OV6U+KvjHAnphpwojip2scjlI3JipgJxVDD8CV02YA4Ls?=
 =?us-ascii?q?C7Rk5jedOoDodcuiWAO4drTM4uXXtktDs5x7Eao5K2fSoHxIw6yxPRZPGLaZWE?=
 =?us-ascii?q?7xzsWeqLPDt1inNodKiiixqs8EWtzPD3WNOu31ZQtCVFl8HBtnAT2BzX7ciKUu?=
 =?us-ascii?q?V9/ki/1jaVzQzT6f9LIVoylaXFL54t2LkwloAcsUjbHy/2nlv5jLOOe0k65uSl?=
 =?us-ascii?q?7/7rbqjoq5OCLYN4lwLzPrg0lsG+A+k0Kg0OUHKa+eS42r3j50r5QLBSg/0yk6?=
 =?us-ascii?q?nZto3aJMsCqq66HQBVyIAj5Ai7Dzu/19QZk38HI0xfeB+ckYjpNE/BIOriAfe8?=
 =?us-ascii?q?nVusijFryO7CPrH7BZXNNHfDnK/7fblh805c1BYzzddH6pJQC7EBI+z8VlX+td?=
 =?us-ascii?q?zFFRI5Nw20w+D6CNRyzI8eWGSPArOHP6PWq1OH+uUvI+yUbo8PpDn9M+Ql5+Lp?=
 =?us-ascii?q?jXIhmV8SZ6ip3YcNZ3C/BPhmI1iZbmDqgtcOCmoKugs+TOr3iFyNSzJTZnCyX7?=
 =?us-ascii?q?4i6TE/Eo6pEYDDRoW1irybwCi7BoFWZnxBCl2UE3focJuLV+0PaCKVJM9hlDsE?=
 =?us-ascii?q?WKOlS48g0xGuqQD7x6BmLurS5i0Xq5bj2MJp6O3UkBE47SZ0ANiF02GRU2F0mX?=
 =?us-ascii?q?sFSCUt3KB/pkx9yU2P0bJijPxaDtFT4/JJUgEnNZ/T1eB6CtbyWh7fcdeNUlqp?=
 =?us-ascii?q?XtKmATQpRNIr39AOe1p9G8mljh3b3CqlGbkVm6aPBJw16K3c2XfxKt15y3bH0q?=
 =?us-ascii?q?khklYnTtFONW2gmq5w6QzTC5TVnEWekqagbb4c0zLV9Gef0WqOu1lVXxNqXqXb?=
 =?us-ascii?q?Q38TfEvWos7/5kPZUbCuD7MrMg9Cyc6HLqtHcdnpjVRARPf+N9XSeWOxm2GsBR?=
 =?us-ascii?q?mWwrOAdpble2IY3C/FEkgLjxgT/WqaNQg5HiquvnjRDCJwGl71Y0Pj6+9+qGil?=
 =?us-ascii?q?QU8y1AyKa0xh17yo+h8an/CcSvUT3q4atyclsTl7AFG939fOAdqauwVhZLlcYc?=
 =?us-ascii?q?864FpfyWLZtgl9Ppu8L6Bihl8SaRh3s1np1xVtDoVAkM4qrHwxwQp2KKKY1k5B?=
 =?us-ascii?q?djyC0ZDxPL3XNnf9/BS1Z6HK3VHe1c6c+r0T5/Qgt1XjoAapG1I4/HVjzdZU3G?=
 =?us-ascii?q?WT55XQAAUJTJL+T1w49x55p7HdfCkw/IfU1XxqMampvT7OwdMpBO05yhm+e9dT?=
 =?us-ascii?q?Kr+LFAj3E8cCHcihNPQqm0S1bhIDJO1T9LM0M9m6ePec2a+rPPxvnDSpjWlc5I?=
 =?us-ascii?q?B900SM9zdzS+LS3pYFxe2Y0RWDVzvmkFihtcX3k5heZT4OBmq/1TTkBIlJa61o?=
 =?us-ascii?q?fIYEFX2hI9eqydV5nZLtXWBX9ESiB18fxMCmYx6SYEHj0g1K0kQXp2eqmS+5zz?=
 =?us-ascii?q?xyjjEoobCT3C3Iw+T+ahUHPnRHS3VljVfpOYK0lcwVXFC0bwg1kxuo/Ub7x6lB?=
 =?us-ascii?q?qKV/NWXTWlpIfy7tImFmU6uwsKeCYsFV5JMptyVXTPqzYVSARrHhpBsa1jvpH3?=
 =?us-ascii?q?FCyzAjazGqppL5kgR4iG2HNnZzr3nZecZqyRfE/tPcRv1R3jsARCZmjznaHVy8?=
 =?us-ascii?q?P9iv/dWJmJbPqOG+V2S9VpJNdSnn15+PtCy+5WdyGx2wg+izmsH7EQg9ySL618?=
 =?us-ascii?q?NlVSLSoBb+Y4nr0b+3MeZmfkluGV/95NB2GoB4kossmp4Q3WIWiYmS/XoCiW3z?=
 =?us-ascii?q?K8lU2bribHoRQj4G293V7xLk2EF5LnKJ2pj2VnOSwsZ6Y9m6Y2UW2j8y7sxQCa?=
 =?us-ascii?q?eU6qBEkjVxolaisQ3RZv19lC8HyfQy8H4an/0JuA01wyWYA7ASHlNXMTbilhuW?=
 =?us-ascii?q?9NC+sLtYZHy0freuzkp+ksusDLWDogFaRXb4dY0uHS527sVjLl3M1Gf/5Z3jeN?=
 =?us-ascii?q?nVddgTrAGbkw/cj+hJL5I8juYKhS1iOW7nvHwq0eg7jQF13ZGhvYiKMGFt/KO/?=
 =?us-ascii?q?Ah5FOTz5fcIT+jfxjalAmsaaxZygHpJkGj8TRpvnUeqoEC4OtfTgLwuBCyczqn?=
 =?us-ascii?q?CfGbrCBwOf7FpmomnLE5CqMXGXOXYYwc9jRBmbOExQngQUUC8mkZ4+EwCg3Nbh?=
 =?us-ascii?q?f1th5jAN+l74rQNByuByOBn6TGjfvx2kaisuRJicMRpW7RxC50HPPsyF9e9zGy?=
 =?us-ascii?q?BY/pu8rA2CMGCbZgJIDX0XVUyAHVzsIr6u5dzY+eiCGuW+N+fOYamJqeFGV/aI?=
 =?us-ascii?q?wo+v0pJ7/zmWMMWDJGJiD/o92kpMRn15H8XZmzMSSy0YjS7NbsibpAui9S1ztM?=
 =?us-ascii?q?yw7PPrWAf374uVF7RSKclv+wyxgaqbN+6fmid5KTVb1pMN33PIy6If3Fkdiy5w?=
 =?us-ascii?q?bTmtDK8AuDXJTKLRnK9XEhEaZzlyNMtO86IzwA1NNdTHhdPy075yluQ1BEtdVV?=
 =?us-ascii?q?z9hsGpYtQHLHugNFzcHkaEKrSHKSfPw8H2eq68TbxQjONJtxy/ozqbEknjPiid?=
 =?us-ascii?q?mDntTRygLeZMjCSDNhxEpI69agptCXTkTN/+dh27Mdp3gScqzrEumnzKNXATMT?=
 =?us-ascii?q?5nfkNJr72Q6z5Yg/plF2xA6HplMfeLmyKD4+bELZYWtONhAj5omOJC/HQ617xV?=
 =?us-ascii?q?4TlERfNvnivSq99uo1e+neiOyjpoShxOqjlQiYKPvEViP7jZ95ZaVXbF+hIN8X?=
 =?us-ascii?q?ufCxAQq9R5Dd3vvvMY9t+asKP6LX9n+sjXtZ8YAsHOK+qMN3YsOAfzHyTdSgwf?=
 =?us-ascii?q?Qmj4G3vYghl0lPyC+2zdlZs7ppHqn4RGHrZfWUw4B7UBCUVpFdoFPr92WC8plf?=
 =?us-ascii?q?iQi8tetin2lwXYWMgP5sOPbfmVG/i6bW/B1bQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAAe8RVch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAQGDWBIng3yIGV+Mdi0Ul0SBcxQYEwGHRyI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgpL0IBEAGBYiQBgmIBAgMBAiBWBgkBAQoOCgICJgICA1QGD?=
 =?us-ascii?q?QYCAQEBgx2CAQWkR4EvhUCEXIELiyQPNAGBIj+BESeCa4gJglcCiTeGXZA+Rwc?=
 =?us-ascii?q?CgiQEjywGGJFSLJk4gUaCDk0jgzyCUI4NPQEBMYEFAQGBHIxnAQE?=
X-IPAS-Result: =?us-ascii?q?A0AJAAAe8RVch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAQGDWBIng3yIGV+Mdi0Ul0SBcxQYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgpL0IBEAGBYiQBgmIBAgMBAiBWBgkBAQoOCgICJgICA1QGDQYCAQEBgx2CAQW?=
 =?us-ascii?q?kR4EvhUCEXIELiyQPNAGBIj+BESeCa4gJglcCiTeGXZA+RwcCgiQEjywGGJFSL?=
 =?us-ascii?q?Jk4gUaCDk0jgzyCUI4NPQEBMYEFAQGBHIxnAQE?=
X-IronPort-AV: E=Sophos;i="5.56,360,1539673200"; 
   d="scan'208";a="55360104"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 15 Dec 2018 22:34:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729859AbeLPGeF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 01:34:05 -0500
Received: from mga18.intel.com ([134.134.136.126]:36885 "EHLO mga18.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729758AbeLPGeF (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 01:34:05 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
  by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 22:34:03 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,360,1539673200"; 
   d="scan'208";a="101877302"
Received: from kohsamui.iil.intel.com (HELO [10.236.193.12]) ([10.236.193.12])
  by orsmga008.jf.intel.com with ESMTP; 15 Dec 2018 22:33:58 -0800
Subject: Re: [PATCH v3] staging: android: ion: Add implementation of
 dma_buf_vmap and dma_buf_vunmap
To: Liam Mark <lmark@codeaurora.org>
Cc: Laura Abbott <labbott@redhat.com>,
        Greg KH <gregkh@linuxfoundation.org>,
        devel@driverdev.osuosl.org, tkjos@android.com, rve@android.com,
        linux-kernel@vger.kernel.org, maco@android.com,
        sumit.semwal@linaro.org
References: <1517400222-2854-1-git-send-email-alexey.skidanov@intel.com>
 <20180131130047.GA22917@kroah.com>
 <89be45dd-ac0e-4efb-2b21-e6c07b0cd66e@intel.com>
 <bf909d75-21a4-9d6d-2f72-887492821252@redhat.com>
 <7d836085-cd8d-300b-56be-e8db4ff37afc@intel.com>
 <alpine.DEB.2.10.1812152119130.2951@lmark-linux.qualcomm.com>
From: Alexey Skidanov <alexey.skidanov@intel.com>
Message-ID: <67f288db-d9ea-2d45-ddcf-a15dbff316f5@intel.com>
Date: Sun, 16 Dec 2018 08:35:49 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <alpine.DEB.2.10.1812152119130.2951@lmark-linux.qualcomm.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/16/18 7:20 AM, Liam Mark wrote:
> On Tue, 6 Feb 2018, Alexey Skidanov wrote:
> 
>>
>>
>> On 02/07/2018 01:56 AM, Laura Abbott wrote:
>>> On 01/31/2018 10:10 PM, Alexey Skidanov wrote:
>>>>
>>>> On 01/31/2018 03:00 PM, Greg KH wrote:
>>>>> On Wed, Jan 31, 2018 at 02:03:42PM +0200, Alexey Skidanov wrote:
>>>>>> Any driver may access shared buffers, created by ion, using
>>>>>> dma_buf_vmap and
>>>>>> dma_buf_vunmap dma-buf API that maps/unmaps previosuly allocated
>>>>>> buffers into
>>>>>> the kernel virtual address space. The implementation of these API is
>>>>>> missing in
>>>>>> the current ion implementation.
>>>>>>
>>>>>> Signed-off-by: Alexey Skidanov <alexey.skidanov@intel.com>
>>>>>> ---
>>>>>
>>>>> No review from any other Intel developers? :(
>>>> Will add.
>>>>>
>>>>> Anyway, what in-tree driver needs access to these functions?
>>>> I'm not sure that there are the in-tree drivers using these functions
>>>> and ion as> buffer exporter because they are not implemented in ion :)
>>>> But there are some in-tre> drivers using these APIs (gpu drivers) with
>>>> other buffer exporters.
>>>
>>> It's still not clear why you need to implement these APIs.
>> How the importing kernel module may access the content of the buffer? :)
>> With the current ion implementation it's only possible by dma_buf_kmap,
>> mapping one page at a time. For pretty large buffers, it might have some
>> performance impact.
>> (Probably, the page by page mapping is the only way to access large
>> buffers on 32 bit systems, where the vmalloc range is very small. By the
>> way, the current ion dma_map_kmap doesn't really map only 1 page at a
>> time - it uses the result of vmap() that might fail on 32 bit systems.)
>>
>>> Are you planning to use Ion with GPU drivers? I'm especially
>>> interested in this if you have a non-Android use case.
>> Yes, my use case is the non-Android one. But not with GPU drivers.
>>>
>>> Thanks,
>>> Laura
>>
>> Thanks,
>> Alexey
> 
> I was wondering if we could re-open the discussion on adding support to 
> ION for dma_buf_vmap.
> It seems like the patch was not taken as the reviewers wanted more 
> evidence of an upstream use case.
> 
> Here would be my upstream usage argument for including dma_buf_vmap 
> support in ION.
> 
> Currently all calls to ion_dma_buf_begin_cpu_access result in the creation 
> of a kernel mapping for the buffer, unfortunately the resulting call to 
> alloc_vmap_area can be quite expensive and this has caused a performance 
> regression for certain clients when they have moved to the new version of 
> ION.
> 
> The kernel mapping is not actually needed in ion_dma_buf_begin_cpu_access, 
> and generally isn't needed by clients. So if we remove the creation of the 
> kernel mapping in ion_dma_buf_begin_cpu_access and only create it when 
> needed we can speed up the calls to ion_dma_buf_begin_cpu_access.
> 
> An additional benefit of removing the creation of kernel mappings from 
> ion_dma_buf_begin_cpu_access is that it makes the ION code more secure.
> Currently a malicious client could call the DMA_BUF_IOCTL_SYNC IOCTL with 
> flags DMA_BUF_SYNC_END multiple times to cause the ION buffer kmap_cnt to 
> go negative which could lead to undesired behavior.
> 
> One disadvantage of the above change is that a kernel mapping is not 
> already created when a client calls dma_buf_kmap. So the following 
> dma_buf_kmap contract can't be satisfied.
> 
> /**
> * dma_buf_kmap - Map a page of the buffer object into kernel address 
> space. The
> * same restrictions as for kmap and friends apply.
> * @dmabuf:	[in]	buffer to map page from.
> * @page_num:	[in]	page in PAGE_SIZE units to map.
> *
> * This call must always succeed, any necessary preparations that might 
> fail
> * need to be done in begin_cpu_access.
> */
> 
> But hopefully we can work around this by moving clients to dma_buf_vmap.
I think the problem is with the contract. We can't ensure that the call
is always succeeds regardless the implementation - any mapping might
fail. Probably this is why  *all* clients of dma_buf_kmap() check the
return value (so it's safe to return NULL in case of failure).

I would suggest to fix the contract and to keep the dma_buf_kmap()
support in ION.
> 
> Based on discussions at LPC here is what was proposed:
> - #1 Add support to ION for dma_buf_vmap and dma_buf_vunmap
> - #2 Move any existing ION clients over from using dma_buf_kmap to 
> dma_buf_vmap
> - #3 Deprecate support in ION for dma_buf_kmap?
> - #4 Make the above performance optimization to 
> ion_dma_buf_begin_cpu_access to remove the creation of a kernel mapping.
> 
> Thoughts?
> 
> Liam
> 
> Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum,
> a Linux Foundation Collaborative Project
> 

Thanks,
Alexey
