Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:34:35 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 964A958037D;
	Fri, 23 Nov 2018 03:36:26 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 23 Nov 2018 03:36:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ALIU0bBJEUvUWK0un49mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/T/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPAp+y?=
 =?us-ascii?q?YYUMAeoOP+hXr4jhqFUBohS+HhGsCeH0xz9Un3/7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKofTPq1zKjSwjXFcvhYxCv955LSchAiv/6NXa97fM3MxEk1FgPKlFOQ?=
 =?us-ascii?q?pZb4MTOJzOsNqWub4PRgVO+0kWEnsQRxriKzyccrj4nEn4QYwU3K+yV+xYY6P9?=
 =?us-ascii?q?y4SEhjbN6qCptfqT+VOJZoTcM5QGFopCE6yqUctZ68ZigKx5IqzAPcZfyfa4WE?=
 =?us-ascii?q?/A7vWeKLLTtlin9pZqiziwux/ES80OHxV8u53E5UoiZYkNTArG0B2hPP5sSdV/?=
 =?us-ascii?q?dx4kas1SyP2gzN8u1EL147mKnHJ5Mkx7M/iJkevEvdESLzmEj6kKGWeVgh9+e2?=
 =?us-ascii?q?9uvof7Trq5qdOoJ1lA7zPaIjkdGlD+siKAgBRW2b9Py81LL9+U35R61HjuM5kq?=
 =?us-ascii?q?bHqpDWP8cbqbCjAw9TzIkj7wyzDzC80NQXhXUHLVRFdwybj4XxJV3CPPT1Ae2i?=
 =?us-ascii?q?j1mijjtn3e3KM779DpnXL3XOkq/tfbNn5E5dzAozw8pf55VRCrwZJPLzW0nxtM?=
 =?us-ascii?q?HXDxMgMAy73fznCNNj2YMaQG6PBaGYMKXMvl+S/e8vPeaMa5EPuDrnKPgq+eTu?=
 =?us-ascii?q?jXknll8ZZ6Wp2oEXaH+gEvR8P0qZeWbsgssGEWoSugo+Te/qh0OYXT9cena/RK?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEX3wbYWLR+8MaD6OIs9mijEE?=
 =?us-ascii?q?VaKuS4491R60sw/20bpnLvfO9S0eupLuz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5JUAA6OoDGw+x5DNDyXATBftCSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7c26?=
 =?us-ascii?q?k6j1kmRchPOXe8hqFl9QjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbknMRFOyciYJqtOa93ml1NGRPj4NdTaYmKxnXqwBB?=
 =?us-ascii?q?mSyrONaorqZ3sS3CHHBEcYlAAT+G6MNRIiCSe5v2LeEDtuGErybEz27+lxtmm3?=
 =?us-ascii?q?Tk8uwAGMdE1uyby19hkRhfyfTvMT2qkJuCMgqzVyAVa80MjaC9uGpwp9YqpcZc?=
 =?us-ascii?q?kx70tA1WLcrwZ9JICvL7h+hl4CdAR6p17h2A9pCopei8QqrGklzAxpKa2G1lNM?=
 =?us-ascii?q?bDeY3ZH2Or3KJWj+5hGva6jK2l7A1Naa4LsA6PM9q1/7pgGmClIi82l709lSy3?=
 =?us-ascii?q?ac+pTKDA8VUZLtUkY29wJ2p63Abik6/YPU0XxsMa+7sjLZ39IpBe0lyguvfttF?=
 =?us-ascii?q?MaOEEhPyHNMeB8S0NOMqnF2pZAoePO9O7K40I9+md/ye1aGxOOZvgj2ngnpH4Y?=
 =?us-ascii?q?xnyU2M6jdzRfTO35YGxPGYwBCKVzP9jFenr8D2lppIZTAUHmqj1yfkAJRdabF1?=
 =?us-ascii?q?fYYOEW2uOdG4xs1ih57xXH5V7F6iB04c1MC1YxaTblz90hdW1UQYunGnnSq4zz?=
 =?us-ascii?q?ppkzAmtKaf3SrOw/j8exoDIGJEWG5ijVL0K4iuk98aRFSobxQulBa9/0b6xrRU?=
 =?us-ascii?q?q75lL2bORkdEZS72IH94Uquxr7aNf9RA6Jc1vipJSuS8ZlaaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRSl5iTXNBlmw?=
 =?us-ascii?q?JcKp/ciSl5rYtuC+VmShVoBccCXxzIOAsje76nNuARGlg/+zndjnGxAg0SDnz9?=
 =?us-ascii?q?lqSTnIrBHkb4npzau6K+FnfkpvBFPm8Mp1AIJ+kogxhJEWx3cagI6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwiI84NpNCK?=
 =?us-ascii?q?uO7rxEnC11r0G8rQLQZ/h9gzgcxeEv6H4cn+EGpg4twj+BDbAVGElSJTbsmAiQ?=
 =?us-ascii?q?79CisKVXY36icbuq20p/h9yhDKyCrRtaWHb2YZoiGS5w7sNiMFPDynHz64fkeM?=
 =?us-ascii?q?XOYtIXrBGbjxDAj+1NIpIrivUKnTZnOX76vXA9zu47jB9u0ougsImJNWpt5765?=
 =?us-ascii?q?DQBCNjLuecwT4D7tgL1ansaX2YCvA5pgFi8KXJvuUfKnDjYSue77OAaJFT02sm?=
 =?us-ascii?q?2bFqbHHQ+D9EdmqGrCE4ysN3GSPnUYzM9tRB+AJExEmwAUXS43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/1zaPtaZ7uJ3Ai?=
 =?us-ascii?q?FU5JmhrBGWJ2yfZgRIC3wJW0OeC1DiOLmu+cfP8+yCCuWiKPvOZK2EqfZCWPeQ?=
 =?us-ascii?q?2ZKvzoxm8i6ONsqVO3ltEeY71lBfXXxjGMTZhjYPSzERly3XdM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUe3FkSizx3?=
 =?us-ascii?q?dzmwC7sAszTBTLnXmq9RAB4WcCdzNMpO76Ih0QhBI8/bitXp1rFmiv45EUtKVV?=
 =?us-ascii?q?vkmsuxf8wFP3m9NE/bBEaMLLmGJSPEw8D0YaO/SL1cluZUtwe3uTaUDUDjJCmD?=
 =?us-ascii?q?lyLyWhCrMOFMijybPRNEtIG8dBZtFXbsTNb8ZhKnN993iCU8wacoiXPSKW4cLT?=
 =?us-ascii?q?98fltXob2N9ixYmOtwGmxb4nphLOmJgCKZ7+jeKpYLvvpnGCV0l+RG4Hskz7tZ?=
 =?us-ascii?q?9j1LRPtwmCHKtN5hv0mmkvWTyjpgSBdOtjdLhIeRsUp+I6nW6plAVmjC/B8W6W?=
 =?us-ascii?q?WQChIKp8ZqC9H1uqBQzMTPm7z3KDtY793U+s4cDdDOKM2bKHohLQbpGDnMAQoF?=
 =?us-ascii?q?VzGrM2Tfh01bkP6K93yVroI1qp7jmJcVTr9bVVo1Fu4VC0h/HdwCJot3US0gkb?=
 =?us-ascii?q?KBkMEI4n++/1HtQ5Bit43DHtGVCvTmLDWekqJHZlNc2brlKcIQMYb60khhbUZh?=
 =?us-ascii?q?n4XiEU3XQdRMpGtqaQpi82tX930rZHcy0kStUR+k+nweBLbgtAQ3gw04Wvgk7j?=
 =?us-ascii?q?Th8n8+PF+Mryw1xhpi0e75iCycJWaiZJy7WptbXm+t7xA8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAC05fdbh0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTBQaXMECycKhzYDhE6LM0qCDRSXJxSBEANMEwEYCwgBgUuCdYQ?=
 =?us-ascii?q?XIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwEBARoKEwYBAREbC?=
 =?us-ascii?q?wEFCQEBAQEIGAkVEAMMGAEKJQIEDgUFgxwBgWkDFQECAQEKnA4CigeBbDOCdgE?=
 =?us-ascii?q?BBYR0GIIGAwWMCYFXP4ERgmQugxsBBIEjO4VbiSGBcoQIkCNGBwKCIIRchhiEE?=
 =?us-ascii?q?BATkQiNQ4pGAgQCBAUCDQEBBYFGgg0zGiNQgmyCGwkDFxKDOIUUhT5ygQUBASG?=
 =?us-ascii?q?KYQGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAAC05fdbh0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgTB?=
 =?us-ascii?q?QaXMECycKhzYDhE6LM0qCDRSXJxSBEANMEwEYCwgBgUuCdYQXIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYgECAwEBARoKEwYBAREbCwEFCQEBAQEIGAk?=
 =?us-ascii?q?VEAMMGAEKJQIEDgUFgxwBgWkDFQECAQEKnA4CigeBbDOCdgEBBYR0GIIGAwWMC?=
 =?us-ascii?q?YFXP4ERgmQugxsBBIEjO4VbiSGBcoQIkCNGBwKCIIRchhiEEBATkQiNQ4pGAgQ?=
 =?us-ascii?q?CBAUCDQEBBYFGgg0zGiNQgmyCGwkDFxKDOIUUhT5ygQUBASGKYQGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="54523959"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 03:36:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2503822AbeKWWRP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 17:17:15 -0500
Received: from mail-eopbgr50064.outbound.protection.outlook.com ([40.107.5.64]:45000
        "EHLO EUR03-VE1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1729929AbeKWWRO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 17:17:14 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=armh.onmicrosoft.com;
 s=selector1-arm-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OCRkKTrvjVuqfVmTM+EoXflk+Tighs1sFB4Bwaaeawo=;
 b=g0uh3QJWu23fVPpzu7ZrJgmv51nCdD9cPDXrRLY/4DoLdxJyaXZ/CKh+wkUfPtTcXw+gBvhatTK3LaQu0YSmDusjRGJ6tJovS4ea7Q2IcCjkNX1ccwQbPF7HQCIGEr5vzULaHzu/i555hqw5g3jZyly3XbrJGycgYAl0JKfhIBw=
Received: from AM0PR08MB3025.eurprd08.prod.outlook.com (52.134.93.10) by
 AM0PR08MB4099.eurprd08.prod.outlook.com (20.178.202.138) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1361.14; Fri, 23 Nov 2018 11:30:20 +0000
Received: from AM0PR08MB3025.eurprd08.prod.outlook.com
 ([fe80::e84e:50fd:edd6:66e4]) by AM0PR08MB3025.eurprd08.prod.outlook.com
 ([fe80::e84e:50fd:edd6:66e4%3]) with mapi id 15.20.1361.018; Fri, 23 Nov 2018
 11:30:20 +0000
From: Brian Starkey <Brian.Starkey@arm.com>
To: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
CC: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        "linux-sunxi@googlegroups.com" <linux-sunxi@googlegroups.com>,
        David Airlie <airlied@linux.ie>, Chen-Yu Tsai <wens@csie.org>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Sean Paul <sean@poorly.run>, nd <nd@arm.com>
Subject: Re: [PATCH v2 31/43] drm/sun4i: Add a dedicated ioctl call for
 allocating tiled buffers
Thread-Topic: [PATCH v2 31/43] drm/sun4i: Add a dedicated ioctl call for
 allocating tiled buffers
Thread-Index: AQHUgx/q489EEFisaUSe0aohlFTijA==
Date: Fri, 23 Nov 2018 11:30:20 +0000
Message-ID: <20181123113019.43vrzvj42l35el7z@DESKTOP-E1NTVVP.localdomain>
References: <20181123092515.2511-1-paul.kocialkowski@bootlin.com>
 <20181123092515.2511-32-paul.kocialkowski@bootlin.com>
In-Reply-To: <20181123092515.2511-32-paul.kocialkowski@bootlin.com>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
user-agent: NeoMutt/20180716-849-147d51
x-originating-ip: [217.140.106.52]
x-clientproxiedby: CWLP123CA0001.GBRP123.PROD.OUTLOOK.COM
 (2603:10a6:401:56::13) To AM0PR08MB3025.eurprd08.prod.outlook.com
 (2603:10a6:208:5c::10)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Brian.Starkey@arm.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR08MB4099;6:Np1u0MqhcVW/t60jtXrxWg2bAFmVXfXSnu4tE5Wt8UBARd+WBKKJhEq0xnHSZcvIdZuZkPlXQ73jVjob7n14pxc6yZKWMfjgR0nrnClMKGRcFa+dAO/kfHaPRGKqIRvAo+HPrs7THd/tAZ6KbMuzbK08nWYgH48p9/Z3TiY+xYvU2aw1gibCSUkx0iuSeVEghQ3wIZCVQLSVQ9Y0chV6DBc5INVfoMkkbQwDVd8c0ZMs9nCVEFs73BboG72CKc1hlr0OnxYgJ35U22W4pvPXRqjyfLOo0nmwydeWpoa+mWtqH5ANr8ErgzE5/IT94XsSq70R+EYun2Zo1PlAfW8XhrP7EyRg74rNIAzbJuArSFKfbvHG+oBIKsXMqOAdWbyJdoig+Zsh8Rcjet7kjG05CkF51PhajrfP00LiknYqNx6eSHUl3ZYFrfKH3ni2kNfUeHkqyp7LuELkvhiPPHOmDQ==;5:boJYrO8KywcUR+aE9rK8c33pJ1Bm6hAWgoEZ9/uVXKXvZ+A7A693DFsSBb4l/R8w8ruRqNToM5GCSRA3tIdVRBrJj9X6hO0NK5xkdXfr2ayUMuT1jUYaRTfHq2QELP1QFebfIJnWaH7v0faLEIIwTnanYijVJA8r7E/WreOCMzk=;7:fO64V9+NRxYFq3TR9tIxVQsShDhCIIJiV/Yd4H/laOgsLJYwQE4i56p8D9JwLxvjcRICfGCxwJtXk8CbWTbBiYn+jy9TiFWy1ScoYYAT/kRGH2AMcXa+Uwe7YgucyJ1GYQ/iFoZzZCvpKOIcReEAKQ==
x-ms-office365-filtering-correlation-id: 6c9b9609-c860-4ef0-667f-08d651370cca
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);SRVR:AM0PR08MB4099;
x-ms-traffictypediagnostic: AM0PR08MB4099:
nodisclaimer: True
x-microsoft-antispam-prvs: <AM0PR08MB4099E85A959E594F52B5C6EEF0D40@AM0PR08MB4099.eurprd08.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(3002001)(10201501046)(3231442)(944501410)(52105112)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(20161123564045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(201708071742011)(7699051)(76991095);SRVR:AM0PR08MB4099;BCL:0;PCL:0;RULEID:;SRVR:AM0PR08MB4099;
x-forefront-prvs: 086597191B
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(366004)(39860400002)(376002)(346002)(396003)(136003)(199004)(189003)(44832011)(229853002)(8936002)(105586002)(8676002)(6306002)(66066001)(6486002)(106356001)(81166006)(256004)(6436002)(81156014)(14444005)(33896004)(476003)(4326008)(11346002)(575784001)(86362001)(52116002)(99286004)(386003)(186003)(102836004)(486006)(7416002)(76176011)(6506007)(26005)(6246003)(54906003)(53936002)(478600001)(5660300001)(68736007)(14454004)(6916009)(1076002)(72206003)(3846002)(6116002)(71190400001)(71200400001)(97736004)(25786009)(316002)(9686003)(446003)(2906002)(7736002)(2900100001)(58126008)(6512007)(305945005)(2004002);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR08MB4099;H:AM0PR08MB3025.eurprd08.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: A8T7ncx16N5O9g629SSd3ufZSl26TzTZxDeCNCFDdLJP26/hH08jp+I/Es4qk4qtr8GhEGseAIquHegEkKsXWtFqK1JBytku5Oas44zq1yRcxTjaChMfR+VCPjO5ztjFVhT0msE63WC56gByqYLqgEo3yt9T9RylYZ1Buyg6GWL25a+8d9eGWrcY+vKmst0+Qw4Z75j7XDMUdP2Tqn2Wy8Q/wZKYcxR83qfFgE2RX6YdmrXjv5FbsMnCSJiSn0p0+q3LfcLpAv5NkZDzItD0BKnkIZzRiK5Jr48WzHDcgS8nMN+6LvEWyEn2Hld67p26GzDZ5rAsOvbGIdCprvP9wgfrpzJ6hKTFGlmUBVkRJ4w=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-ID: <3EC585BC2A7BAB48B698E197F41D16FD@eurprd08.prod.outlook.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: arm.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 6c9b9609-c860-4ef0-667f-08d651370cca
X-MS-Exchange-CrossTenant-originalarrivaltime: 23 Nov 2018 11:30:20.2348
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: f34e5979-57d9-4aaa-ad4d-b122a662184d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR08MB4099
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Paul,

On Fri, Nov 23, 2018 at 10:25:03AM +0100, Paul Kocialkowski wrote:
>This introduces a dedicated ioctl for allocating buffers for the VPU
>tiling mode. It allows setting up buffers that comply to the hardware
>alignment requirements, by aligning the stride and height to 32 bytes.
>
>Only YUV semiplanar and planar formats are allowed by the ioctl, as the
>hardware does not support the tiling mode for other formats.

What's the general feeling about a more generic version of this ioctl?
There doesn't seem to be anything Allwinner-specific in the ioctl
arguments.

It effectively boils down to:

	size =3D driver->get_fb_size_with_modifier(...);
 	cma_obj =3D drm_gem_cma_create(drm, size);

It would look exactly the same for Mali-DP, and probably others too.
Is it better to try and define something we can share instead of Arm
adding another nearly identical ioctl() later?

I think the minimal viable thing would be to just add modifiers to
your structure (I put them first because padding):

  struct drm_gem_create_with_modifiers {
  	__u64 modifiers[4];
  	__u32 height;
  	__u32 width;
  	__u32 format;
  	/* handle, offsets, pitches, size will be returned */
  	__u32 handle;
  	__u32 pitches[4];
  	__u32 offsets[4];
  	__u64 size;
  };

Thanks,
-Brian

>
>Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
>---
> drivers/gpu/drm/sun4i/sun4i_drv.c | 89 +++++++++++++++++++++++++++++++
> include/uapi/drm/sun4i_drm.h      | 42 +++++++++++++++
> 2 files changed, 131 insertions(+)
> create mode 100644 include/uapi/drm/sun4i_drm.h
>
>diff --git a/drivers/gpu/drm/sun4i/sun4i_drv.c b/drivers/gpu/drm/sun4i/sun=
4i_drv.c
>index ccdeae6299eb..5ae32973cf34 100644
>--- a/drivers/gpu/drm/sun4i/sun4i_drv.c
>+++ b/drivers/gpu/drm/sun4i/sun4i_drv.c
>@@ -21,6 +21,7 @@
> #include <drm/drm_gem_cma_helper.h>
> #include <drm/drm_fb_helper.h>
> #include <drm/drm_of.h>
>+#include <drm/sun4i_drm.h>
>
> #include "sun4i_drv.h"
> #include "sun4i_frontend.h"
>@@ -28,6 +29,92 @@
> #include "sun4i_tcon.h"
> #include "sun8i_tcon_top.h"
>
>+int drm_sun4i_gem_create_tiled(struct drm_device *drm, void *data,
>+			       struct drm_file *file_priv)
>+{
>+	struct drm_sun4i_gem_create_tiled *args =3D data;
>+	struct drm_gem_cma_object *cma_obj;
>+	struct drm_gem_object *gem_obj;
>+	uint32_t luma_stride, chroma_stride;
>+	uint32_t luma_height, chroma_height;
>+	uint32_t chroma_width;
>+	const struct drm_format_info *info;
>+	int ret;
>+
>+	info =3D drm_format_info(args->format);
>+	if (!info)
>+		return -EINVAL;
>+
>+	/* The tiled output format only applies to non-packed YUV formats. */
>+	if (!info->is_yuv || info->num_planes =3D=3D 1)
>+		return -EINVAL;
>+
>+	memset(args->pitches, 0, sizeof(args->pitches));
>+	memset(args->offsets, 0, sizeof(args->offsets));
>+
>+	/* Stride and height are aligned to 32 bytes for our tiled format. */
>+	luma_stride =3D ALIGN(args->width, 32);
>+	luma_height =3D ALIGN(args->height, 32);
>+
>+	chroma_width =3D args->width;
>+
>+	/* Semiplanar formats have both U and V data in their chroma plane. */
>+	if (drm_format_info_is_yuv_semiplanar(info))
>+		chroma_width *=3D 2;
>+
>+	chroma_stride =3D ALIGN(DIV_ROUND_UP(chroma_width, info->hsub), 32);
>+	chroma_height =3D ALIGN(DIV_ROUND_UP(args->height, info->vsub), 32);
>+
>+	if (drm_format_info_is_yuv_semiplanar(info)) {
>+		args->pitches[0] =3D luma_stride;
>+		args->pitches[1] =3D chroma_stride;
>+
>+		args->offsets[0] =3D 0;
>+		args->offsets[1] =3D luma_stride * luma_height;
>+
>+		args->size =3D luma_stride * luma_height +
>+			     chroma_stride * chroma_height;
>+	} else if (drm_format_info_is_yuv_planar(info)) {
>+		args->pitches[0] =3D luma_stride;
>+		args->pitches[1] =3D chroma_stride;
>+		args->pitches[2] =3D chroma_stride;
>+
>+		args->offsets[0] =3D 0;
>+		args->offsets[1] =3D luma_stride * luma_height;
>+		args->offsets[2] =3D luma_stride * luma_height +
>+				   chroma_stride * chroma_height;
>+
>+		args->size =3D luma_stride * luma_height +
>+			     chroma_stride * chroma_height * 2;
>+	} else {
>+		/* No support for other formats in tiled mode. */
>+		return -EINVAL;
>+	}
>+
>+	cma_obj =3D drm_gem_cma_create(drm, args->size);
>+	if (IS_ERR(cma_obj))
>+		return PTR_ERR(cma_obj);
>+
>+	gem_obj =3D &cma_obj->base;
>+
>+	/*
>+	 * allocate a id of idr table where the obj is registered
>+	 * and handle has the id what user can see.
>+	 */
>+	ret =3D drm_gem_handle_create(file_priv, gem_obj, &args->handle);
>+	/* drop reference from allocate - handle holds it now. */
>+	drm_gem_object_put_unlocked(gem_obj);
>+	if (ret)
>+		return ret;
>+
>+	return PTR_ERR_OR_ZERO(cma_obj);
>+}
>+
>+static const struct drm_ioctl_desc sun4i_drv_ioctls[] =3D {
>+	DRM_IOCTL_DEF_DRV(SUN4I_GEM_CREATE_TILED, drm_sun4i_gem_create_tiled,
>+			  DRM_UNLOCKED),
>+};
>+
> static int drm_sun4i_gem_dumb_create(struct drm_file *file_priv,
> 				     struct drm_device *drm,
> 				     struct drm_mode_create_dumb *args)
>@@ -44,6 +131,8 @@ static struct drm_driver sun4i_drv_driver =3D {
> 	.driver_features	=3D DRIVER_GEM | DRIVER_MODESET | DRIVER_PRIME | DRIVER=
_ATOMIC,
>
> 	/* Generic Operations */
>+	.ioctls			=3D sun4i_drv_ioctls,
>+	.num_ioctls		=3D ARRAY_SIZE(sun4i_drv_ioctls),
> 	.fops			=3D &sun4i_drv_fops,
> 	.name			=3D "sun4i-drm",
> 	.desc			=3D "Allwinner sun4i Display Engine",
>diff --git a/include/uapi/drm/sun4i_drm.h b/include/uapi/drm/sun4i_drm.h
>new file mode 100644
>index 000000000000..2c77584b057b
>--- /dev/null
>+++ b/include/uapi/drm/sun4i_drm.h
>@@ -0,0 +1,42 @@
>+/* SPDX-License-Identifier: GPL-2.0+ WITH Linux-syscall-note */
>+/* sun4i_drm.h
>+ *
>+ * Copyright (C) 2018 Paul Kocialkowski <paul.kocialkowski@bootlin.com>
>+ *
>+ * This program is free software; you can redistribute  it and/or modify =
it
>+ * under  the terms of  the GNU General  Public License as published by t=
he
>+ * Free Software Foundation;  either version 2 of the  License, or (at yo=
ur
>+ * option) any later version.
>+ */
>+
>+#ifndef _UAPI_SUN4I_DRM_H_
>+#define _UAPI_SUN4I_DRM_H_
>+
>+#include "drm.h"
>+
>+#if defined(__cplusplus)
>+extern "C" {
>+#endif
>+
>+struct drm_sun4i_gem_create_tiled {
>+	__u32 height;
>+	__u32 width;
>+	__u32 format;
>+	/* handle, offsets, pitches, size will be returned */
>+	__u32 handle;
>+	__u32 pitches[4];
>+	__u32 offsets[4];
>+	__u64 size;
>+};
>+
>+#define DRM_SUN4I_GEM_CREATE_TILED	0x00
>+
>+#define DRM_IOCTL_SUN4I_GEM_CREATE_TILED \
>+	DRM_IOWR(DRM_COMMAND_BASE + DRM_SUN4I_GEM_CREATE_TILED, \
>+		 struct drm_sun4i_gem_create_tiled)
>+
>+#if defined(__cplusplus)
>+}
>+#endif
>+
>+#endif /* _UAPI_SUN4I_DRM_H_ */
>--=20
>2.19.1
>
>_______________________________________________
>dri-devel mailing list
>dri-devel@lists.freedesktop.org
>https://lists.freedesktop.org/mailman/listinfo/dri-devel
