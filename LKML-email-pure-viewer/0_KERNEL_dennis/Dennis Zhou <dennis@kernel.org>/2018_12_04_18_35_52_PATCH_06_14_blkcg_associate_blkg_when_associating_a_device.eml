Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:42:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CB206580375;
	Tue,  4 Dec 2018 10:36:27 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 10:36:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ay2XfTBXDBvwP5H5nbEmF5TKqrMTV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGEu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeQPPuhWqIvyp1UVrRumBwShH//jxiNSi3Pqx6A2z/gtHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc37OqgMV+C1yqjIzS7eZPxV2Tf975XIeQ0mrP6RQ71wd8zRyUg0Fw7ejVWf?=
 =?us-ascii?q?t5blPzWL2eQJqWSb6PBgVe22hmMhtgp/oSCvy98yhoXVgo8Z0E3I+CtnzIovON?=
 =?us-ascii?q?G1S1J3bcSlHZZSry2WKo97T8c4T212pCo216cKtJ+7cSQQ1ZgqyR7SZvqaeIaS?=
 =?us-ascii?q?+B3jTvyeITJgiXJlZr2/gxGy/FC+yu3zSMa0ykxGrilbndnWsHACyRjT5tKASv?=
 =?us-ascii?q?tn8UetwTeP1wbN5eFYOU04i7bXJpo7zrItmJcfr17PEjL1lUnqlqObd0cp9vCt?=
 =?us-ascii?q?6+v9Y7XmopGcN5VzigH7Kqkuns2/AeIlMgkBRmSb+vqz1Kfl/ULnRLVGl/o2k6?=
 =?us-ascii?q?ffsJ/EP8QWvbC5AwBL3YY58Rq/DCmp0M4enXYZKFJJYhWHj5LmO13WOvD3Ee+/?=
 =?us-ascii?q?g0iwkDds3/3GOrzhApbTIXTZn7bhYK1w60pdyAo10NBe6IhYCrAHIPLvREDxsM?=
 =?us-ascii?q?bUAQM+Mwyx2+znEsly1psCWWKTBa+UKKPSvkWJ5uIzOeaMY5UZuDbgK/c/4f7u?=
 =?us-ascii?q?gmQ0mVscfamvwJsWZ2q0HvVgI0WFf3Xshs0NHnsNvgo7VObqkkGNUSZPZ3auWK?=
 =?us-ascii?q?Ix/jM7CIW4AovZRYCth7qB3CG8HpBNYmBGC1aMEWrndomeWvcMbj6SLdFlkjAe?=
 =?us-ascii?q?SbehTIoh3wm0tADm07pnMvbU+ioAuJ35z9h15+rTlRIo+TxuFcud0XqAT2V1nm?=
 =?us-ascii?q?MOWj8307pzoU17ylefz6d4h+ZUGsBU5/NMSg06L4LTz/RmC9DuXQLMZtSJR0yg?=
 =?us-ascii?q?Qtm8BTExT8g+w9kBY0tmH9WijxbD3zelArMPlryLAoA0/bzY33TrO8l9zHPG3r?=
 =?us-ascii?q?E7j1Y6WstPKXGmhqln+gfOHYHJjVuWm7yqdasG2i7N73mMzWyJsEFcUw5wVKHF?=
 =?us-ascii?q?UGsbZkvXq9T5+0zDQ6WvCbQhLgtO18qCJrFWZd3uiFVMXO3jN8jGY2Kth2ewAg?=
 =?us-ascii?q?6Fya6WY4r0ZWoRxiXdB1ICkwAI43mGMxMzBiOgo2LYETxvGkjjY0Lq8elitny7?=
 =?us-ascii?q?SlU4wB2Nb01kz7C14AIaheSAS/MP2bIJoDshqzRxHFa6w9LWC9qBqxB9fKlGZt?=
 =?us-ascii?q?M9+lNH1WPftwxyJZGgK6FihlgDcwV4pU/u1hN3Cplensgutn8l0A1yKaeA2lNb?=
 =?us-ascii?q?azyYxYzwOqHQKmTq5h+vb7DZ217A39eW4KsA8+k4pEj5swGvFUoi9Gtn3sJR03?=
 =?us-ascii?q?ud4JXKEQUTXYjwUkYx6xh1ubXabjMh6IPT0H1mKbO0vSPa29I1GOslzQ6tftdC?=
 =?us-ascii?q?MK+eCAD+CcwbB8i0J+wslFikdRYEPOFU9K4pMMKqbfqG2Ki3POl+mDKql3hI4I?=
 =?us-ascii?q?d40kiU7SpzVvbI34oZw/GfxgaHTTb8g0u7vcDthI9EYiseHmyhxij+BY5df7F9?=
 =?us-ascii?q?cpwPCWizPcK33NJ+h5j2Vn5c9V6jAU4G2cCzdRqTaVz9wRNf1UANrXO7niu4yi?=
 =?us-ascii?q?R+kys1oaqHwCzO3+PieQIHO25KXmVjjU3gIZOpj9AcR0WoawkplB245Uf13aRb?=
 =?us-ascii?q?paJ/L3XNTkdMZST5M2ZiUq6ovLqYf8FP8I8osTlQUOmkY1CVUKT9oxgZ0yPkBW?=
 =?us-ascii?q?de3yo0dzKpupX4mRx1lmSdIW13rHrYf8Fw2Bje6MbdRf5XwjoJWi14hSPLCVi7?=
 =?us-ascii?q?Otmj5c+UmIvbsuCiS2KhUYVecCnxwoOHrie752xqARukkvC3m93nFxU60CDh29?=
 =?us-ascii?q?lrUyXIsAjzYo3x26umNuJne1FiBEXg5MpiBoF+jowwiYkT2XcAh5WZ53oHkXrp?=
 =?us-ascii?q?PtVd1qLzd34NRT8Nw97I7wnpwkxjLnSVx43nUnWR2NduZ96/YmkOwCIy89hKCL?=
 =?us-ascii?q?uI7LxDhSZ1p1u4rQHLbvRnkDYS1+Au6GIEjOETowUi0D+dAr8JEElcPCzskQmI?=
 =?us-ascii?q?7t+koKVWYmavbaa/1E5kkd+9C7GCpxlWWGzldZc6AS9w8sJ/PUrQ0H3074HoYt?=
 =?us-ascii?q?jRYsgVth2JiBfAlOlVJYk1lvoLgypnJG38sWcky+49kRxhw5W6sJKbJGVq+aKz?=
 =?us-ascii?q?GgRYOSHtZ8MP5jHtir5Tkd2M0ICoGpVhBy8HXJ/1Tf+zFDIStPLnNxuBETEmq3?=
 =?us-ascii?q?ebH6bfEhGb6Et8s33PFJWrPWmNJHYF1dViWAWdJEtHjQAWRjo6m4A2FhuwyMz9?=
 =?us-ascii?q?akt55S0R5l3lqhtK0O1oLALyUmPepAeudzc1R4KTLBtQ7gFe+UjVNdaS4f50Hy?=
 =?us-ascii?q?Fd5pehthCCKnSHZwRUCmEEQkyFB1f+Prm3+NnP6e6YCvClL/vJZ7WOpvdTV/OJ?=
 =?us-ascii?q?xZKpz4tn8CyANsSJPnl+EfI73lBPUmx+G8Tcgz8PUTAYlzrRb86Hoxex4i13od?=
 =?us-ascii?q?6+8PToWwLv5JGDC7hIMdVo9BC5n72DN/OLhCtiLTZY15UMxWLHybQF3V4SjT1u?=
 =?us-ascii?q?eCepEbgaqSHNS6fQkLdNDxEHcyNzKNdI76Uk0wZXJM7Ukcn12aB4j/IvD1dFVE?=
 =?us-ascii?q?fsmsWoZcwMPmG8O0nLBEeNNLSaOzLLx9v7br+7Sb1VlO9UrQG/uS6HE0//OTSO?=
 =?us-ascii?q?jyXpVxGqMe1WkC6XJgBRuIGjfRZrEmXjSNPmahumMN54lzE2wLs0hm/UOm4YKz?=
 =?us-ascii?q?Rzb0RNrriI5yNCnvp/A3BB7mZiLeScmyeW9e/YKpMXsfttGit1luJa7248y7ta?=
 =?us-ascii?q?9yxEQP11mC3Prt9huV2mk++PyiZ5XxpKsDpEmIWLvUAxcZneo7tNX22M1QIH6m?=
 =?us-ascii?q?jYXx0ardxoIt7ioaZdzp7Dl/S3YAtP8c/StesRAICANMCvM3c7NxftXjnOA11B?=
 =?us-ascii?q?BRysNWjZgUFG2M6f93uYtNBuqpHqnpcVYrReTEw+FvxcDV5qSphKApBsUz1su7?=
 =?us-ascii?q?eQjc1AsXi5txTfbNldrpHMTvuUDfypIzGc2+pqfRwNlJ/1K4ISLcXJ20t/Ig12?=
 =?us-ascii?q?kYLMGlH4Xt1XpCBlKAgurxMeozBFUmQv1he9OUuW63gJGKvxx0Zuhw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAADJxwZch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBg2snmkKXNYFzEgEBGBMBh0wiNgcNAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKS+CNiQBgmIDAwECJEsHBgkBAVADMQEFARwGARIFgxyCAgWZQDyMCTOKMBKHX?=
 =?us-ascii?q?YQvF4F/gRGNbgKJLocBkBoJgiSPEgsYX4h8h0uCfYYJj0oCBAIJAgUPIYEsB4F?=
 =?us-ascii?q?/MxoIKAiDJ4InF447IjKBBQEBimIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAADJxwZch0O0hNFlHAEBAQQBAQcEAQGBUwUBAQsBg2s?=
 =?us-ascii?q?nmkKXNYFzEgEBGBMBh0wiNgcNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmIDA?=
 =?us-ascii?q?wECJEsHBgkBAVADMQEFARwGARIFgxyCAgWZQDyMCTOKMBKHXYQvF4F/gRGNbgK?=
 =?us-ascii?q?JLocBkBoJgiSPEgsYX4h8h0uCfYYJj0oCBAIJAgUPIYEsB4F/MxoIKAiDJ4InF?=
 =?us-ascii?q?447IjKBBQEBimIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="54891936"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 10:36:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726230AbeLDSgP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 13:36:15 -0500
Received: from mail-yb1-f193.google.com ([209.85.219.193]:42003 "EHLO
        mail-yb1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726175AbeLDSgO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 13:36:14 -0500
Received: by mail-yb1-f193.google.com with SMTP id s8so5114914ybe.9;
        Tue, 04 Dec 2018 10:36:14 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=bDtyDWFwsy3cTbCsYZQ052J7W94OKIQSuaqoyAgynY4=;
        b=Nz9kDgNWzh8FfTeoYV5SyI6eFZEA81lvdxa+NJQvFnu/3T6qFSsK+n/r8ZEjKSwEn/
         2BKBtPhGVFQYrF2tEUvDWXFyzP7x5L+BIIu7sb3dMzIip1mtaRV2QpZbAW1bXxpCERYS
         najmnPh8DZ8yO3NFZDv8xbDzvvHscLm0x1YxGrF0n4xTlcJpH3pH46vl953UIUHN0jJJ
         HM8/dW5wkO+p1i0yFa6eRGMyirP4u2TMgI2VMcOfZXLA4aMfye1p7bZBNG/Vt9jvWr5e
         Wk9FJj13ENGx/xatE4PakzZuhjvf8s7+SGRFqKf0FJcpzLIXpV+4+VO1Zjgk94ulzBCo
         JQhg==
X-Gm-Message-State: AA+aEWZZpwGBkJvayWhJLTQKCsm2kbikQrgTqn6nEFsaLfx04Tnj0FuZ
        NzDBVp+EQNqAhoZdMKGpzt8=
X-Google-Smtp-Source: AFSGD/WKmiNUKjzz+S7m8mOXWJUpFq1XsVWOiS6qv8bSYeC95hAcFQL+xgW5Mpq/2dD2XMf3Z/Nang==
X-Received: by 2002:a25:5f4c:: with SMTP id h12-v6mr20309268ybm.402.1543948572176;
        Tue, 04 Dec 2018 10:36:12 -0800 (PST)
Received: from dennisz-mbp.thefacebook.com ([199.201.65.135])
        by smtp.gmail.com with ESMTPSA id x82sm4274798ywb.34.2018.12.04.10.36.10
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 04 Dec 2018 10:36:11 -0800 (PST)
From: Dennis Zhou <dennis@kernel.org>
To: Jens Axboe <axboe@kernel.dk>, Tejun Heo <tj@kernel.org>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Josef Bacik <josef@toxicpanda.com>
Cc: kernel-team@fb.com, linux-block@vger.kernel.org,
        cgroups@vger.kernel.org, linux-kernel@vger.kernel.org,
        Dennis Zhou <dennis@kernel.org>
Subject: [PATCH 06/14] blkcg: associate blkg when associating a device
Date: Tue,  4 Dec 2018 13:35:52 -0500
Message-Id: <20181204183600.99746-7-dennis@kernel.org>
X-Mailer: git-send-email 2.13.5
In-Reply-To: <20181204183600.99746-1-dennis@kernel.org>
References: <20181204183600.99746-1-dennis@kernel.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Previously, blkg association was handled by controller specific code in
blk-throttle and blk-iolatency. However, because a blkg represents a
relationship between a blkcg and a request_queue, it makes sense to keep
the blkg->q and bio->bi_disk->queue consistent.

This patch moves association into the bio_set_dev macro(). This should
cover the majority of cases where the device is set/changed keeping the
two pointers consistent. Fallback code is added to
blkcg_bio_issue_check() to catch any missing paths.

Signed-off-by: Dennis Zhou <dennis@kernel.org>
---
 block/bio.c                |  1 +
 block/blk-iolatency.c      |  4 +---
 block/blk-throttle.c       |  1 -
 include/linux/bio.h        |  2 ++
 include/linux/blk-cgroup.h | 11 +++--------
 5 files changed, 7 insertions(+), 12 deletions(-)

diff --git a/block/bio.c b/block/bio.c
index 41ebb3f8e2fc..1e852ab904aa 100644
--- a/block/bio.c
+++ b/block/bio.c
@@ -2074,6 +2074,7 @@ void bio_associate_blkg(struct bio *bio)
 
 	rcu_read_unlock();
 }
+EXPORT_SYMBOL_GPL(bio_associate_blkg);
 
 /**
  * bio_disassociate_task - undo bio_associate_current()
diff --git a/block/blk-iolatency.c b/block/blk-iolatency.c
index cdbd10564e66..e6b47c255521 100644
--- a/block/blk-iolatency.c
+++ b/block/blk-iolatency.c
@@ -472,14 +472,12 @@ static void check_scale_change(struct iolatency_grp *iolat)
 static void blkcg_iolatency_throttle(struct rq_qos *rqos, struct bio *bio)
 {
 	struct blk_iolatency *blkiolat = BLKIOLATENCY(rqos);
-	struct blkcg_gq *blkg;
+	struct blkcg_gq *blkg = bio->bi_blkg;
 	bool issue_as_root = bio_issue_as_root_blkg(bio);
 
 	if (!blk_iolatency_enabled(blkiolat))
 		return;
 
-	bio_associate_blkg(bio);
-	blkg = bio->bi_blkg;
 	bio_issue_init(&bio->bi_issue, bio_sectors(bio));
 
 	while (blkg && blkg->parent) {
diff --git a/block/blk-throttle.c b/block/blk-throttle.c
index 228c3a007ebc..1c6529df2002 100644
--- a/block/blk-throttle.c
+++ b/block/blk-throttle.c
@@ -2118,7 +2118,6 @@ static inline void throtl_update_latency_buckets(struct throtl_data *td)
 static void blk_throtl_assoc_bio(struct bio *bio)
 {
 #ifdef CONFIG_BLK_DEV_THROTTLING_LOW
-	bio_associate_blkg(bio);
 	bio_issue_init(&bio->bi_issue, bio_sectors(bio));
 #endif
 }
diff --git a/include/linux/bio.h b/include/linux/bio.h
index 62715a5a4f32..6ee2ea8b378a 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -491,12 +491,14 @@ do {						\
 		bio_clear_flag(bio, BIO_THROTTLED);\
 	(bio)->bi_disk = (bdev)->bd_disk;	\
 	(bio)->bi_partno = (bdev)->bd_partno;	\
+	bio_associate_blkg(bio);		\
 } while (0)
 
 #define bio_copy_dev(dst, src)			\
 do {						\
 	(dst)->bi_disk = (src)->bi_disk;	\
 	(dst)->bi_partno = (src)->bi_partno;	\
+	bio_clone_blkcg_association(dst, src);	\
 } while (0)
 
 #define bio_dev(bio) \
diff --git a/include/linux/blk-cgroup.h b/include/linux/blk-cgroup.h
index c08e96e521ed..3c87ae71156f 100644
--- a/include/linux/blk-cgroup.h
+++ b/include/linux/blk-cgroup.h
@@ -802,21 +802,17 @@ static inline bool blk_throtl_bio(struct request_queue *q, struct blkcg_gq *blkg
 static inline bool blkcg_bio_issue_check(struct request_queue *q,
 					 struct bio *bio)
 {
-	struct blkcg *blkcg;
 	struct blkcg_gq *blkg;
 	bool throtl = false;
 
-	rcu_read_lock();
+	if (!bio->bi_blkg)
+		bio_associate_blkg(bio);
 
-	/* associate blkcg if bio hasn't attached one */
-	bio_associate_blkcg(bio, NULL);
-	blkcg = bio_blkcg(bio);
-	blkg = blkg_lookup_create(blkcg, q);
+	blkg = bio->bi_blkg;
 
 	throtl = blk_throtl_bio(q, blkg, bio);
 
 	if (!throtl) {
-		blkg = blkg ?: q->root_blkg;
 		/*
 		 * If the bio is flagged with BIO_QUEUE_ENTERED it means this
 		 * is a split bio and we would have already accounted for the
@@ -828,7 +824,6 @@ static inline bool blkcg_bio_issue_check(struct request_queue *q,
 		blkg_rwstat_add(&blkg->stat_ios, bio->bi_opf, 1);
 	}
 
-	rcu_read_unlock();
 	return !throtl;
 }
 
-- 
2.17.1

