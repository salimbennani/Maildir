Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:47:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 66112580443;
	Wed,  5 Dec 2018 00:55:30 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 00:55:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aq1uaJRxF82V3pQzXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4VK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhMWSJPAY2y?=
 =?us-ascii?q?aIkAD+QOMulEtIn9v1kDoACiBQWwHu7j1iVFimPq0aA8zu8vERvG3AslH98WqH?=
 =?us-ascii?q?rbtsj6O70MUeuo0KTIyDTDb+9L0jr67ojHaBUhofCQXb9rb8rRzEcuGBnfjlqO?=
 =?us-ascii?q?s4DqIzSV1uEUvmWd8uFuVvqvhnY5pw1tpjWj3Nogh4fXio4P11zJ9jl1zJw0KN?=
 =?us-ascii?q?C6UEJ3f8KoHZhKuyyeKod6WN8uT3t1tCs+1rELv4OwcjIQx5Q93RHfbuSKc4iW?=
 =?us-ascii?q?7RLnU+acOSl4hH17d7KlnRqy8lavyvf6Vsaq1FZGtC1FksPDtnwV1hzT7NaISu?=
 =?us-ascii?q?dl80u/xTqC0xrf5vxKLEwqj6bXNp0szqIqmpcSs0nPBir2l1/3jK+SeEUk4O+o?=
 =?us-ascii?q?6+H/b7Xip5+cMZJ0iw7nPqQthMO/G+I4PRYKX2SC/uS92rvj8lPjQLhRkP02nb?=
 =?us-ascii?q?fWsIrAKcQYuKG5GQlV3Zgn6xqlCDemytsYkWEdLF1ZYBKHk5TpO1bWLfD8DPe/?=
 =?us-ascii?q?gEqjnC1kxvDbJbDhBpTNLn7ekLbuZ7p96khcyBYtwtBb/Z5bFrYBIPfrUE/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/CNVyzIIeWX6VDa+eKq/SsUKI6fgpI+mDf4IVvDf9K/445//h?=
 =?us-ascii?q?l3M5mFkdfbW30psTcny3AvNmI0CBa3r2ntgBCXsKvhY5TOHyil2CViBca2yxX6?=
 =?us-ascii?q?I74DE7DoWmAJzHRoCshryBwSi6EodXZmBAFlCDD3Poe5+YVPcLbSKYOtVhnSAc?=
 =?us-ascii?q?Vbi9V48h0gmjuxXhy7pnKerU+TcUtYj529h3/ODTkRAy9TppD8WSyW2NTmd0nn?=
 =?us-ascii?q?8WSD8yxqxwvUt9ylKb26hin/NYDcBT5+9OUgoiNp7T1ep6B8r2WgLAZNiJTlmm?=
 =?us-ascii?q?T86iATEwSNIx3tAPb1x8G9WkkhDMwS6qD6UJmLyMAZw+6rjc0GTpJ8Zh13bG07?=
 =?us-ascii?q?EsgEQ8TctRK2KqnK5/+BLVB47SjUqZkaGmdaAf3C7I8GeO1m6OvEBeUA5tXqTJ?=
 =?us-ascii?q?R3EfZk3Krdvn4kPOVaOhCbMiMgFZ086NNrNKasH1jVVBXPrsJc7RY3yvlGuqBR?=
 =?us-ascii?q?aH3LWMbJH0dGUbxyjdDEkEkwYO/XeJLwQ+ByGho37AAzxqD17gf0Ts8exmonOh?=
 =?us-ascii?q?UkA01x2Kb1Fm17et5h4VhPmcS/QP3rIEuCYtsSl0EEy639LMD9qApgxhfKpHbN?=
 =?us-ascii?q?M54VdH03/ZtgNnMpyhKaBimkARcwBts0zy0BV3D51KkdI2o3My0ApyNaWY3Utb?=
 =?us-ascii?q?eDOcw5/xNaPYK2no8B+0dq7Zx0vR0NCV+qcI9vQ1sFHjvACvFko//HRrydhV03?=
 =?us-ascii?q?2A5prUCAoeS47+UkEy9xJivbHVfjE955/I1X1rKaS1siLC18g1C+c/yxegf81Q?=
 =?us-ascii?q?MKWLFALpF80aBs6uKPElmlSzbxIEOvxS+7AwP8+8a/SG36urNv56nD26lWRH/J?=
 =?us-ascii?q?x90kWU+ipmS+7Hw4wKw+uF0QuATTv8ikmustr2mYxdeT4dBG6/xjX6C45LYa1y?=
 =?us-ascii?q?e50GCWOvI82x29V/iIThW39e9F6/GVwG3NWldgaVb1z4xQdQz1gYoWS7mSukyD?=
 =?us-ascii?q?x5izEorquF0C3O2ejibwcHOmhQSWlmjFfsJ5W0jt8AUEipaQgpiAWq5ULgy6dH?=
 =?us-ascii?q?o6R/KnHZQV1UcCjuM2FiTqywu6KAY8FV8pMosiZXUOOmbVCBULH9oBga0yLlH2?=
 =?us-ascii?q?RAwjA2bDWqupT/nxxnh2ORNndzrHzFec5uwRfT/sDTRflU3jAeXil3lSHXBkSg?=
 =?us-ascii?q?P9mu5diVl43MsuekW2KjV51TdzLmzYeBtCu9+G1rDgezn/G1mt37Dwc61TX32M?=
 =?us-ascii?q?VtVSXNtBz8eJXk17ymMeJ7eUllHFz85NB7Go1kkoswmYsf2X4VhpiO+XoHkGHz?=
 =?us-ascii?q?MchU2K7kbXoNQyILzMDR4AT/xEJjKXeJzZrjVnqB2sthe8W6YmQO1yI47sBKC7?=
 =?us-ascii?q?2b4KZKnCRruVq4sRzeYeJmkTgD0/su52UXg+UIuAor0yWcDaoeHUhePSzwiRuI?=
 =?us-ascii?q?68qyo7lQZGaqabKwzlZxnci9DLGepQFRQGr5epAnHSNq78RwKlTM0GDo6oH/ed?=
 =?us-ascii?q?nddtYTthySkxfdgOlZMpMxlvwWhSV5PWLxp2Eqy+k+jRZ2x5G1oJCHK3lx/KK+?=
 =?us-ascii?q?GhNXLSf6Z8QX+jHwl6pemtuW0purHpVgHDULQZTpQeipEDIUqfToKQKOHCcgpX?=
 =?us-ascii?q?ecHLrVBRWf51t+r3LTD5CrMGmaJHsDwtVnWhadP1ZTgBwOUDU5g545FR2qxMr7?=
 =?us-ascii?q?f0di/T0R4l/4qh1RyuNnLRX/U2HfpBu2ZTcwUpSQMB1W7gRa7UfPLcOe9v5zHz?=
 =?us-ascii?q?1f/pC5rA2NLXGbZx1VDW4TXEyIHUvjPr6o5dnP6OWYAuu+L/3TYbSBs+BeVvGI?=
 =?us-ascii?q?xY6x3Yti5TqDKsKPPnx6Bf0hxkVDRWx5G9jemzgXSywYiSPNb82YpBe94CF3rd?=
 =?us-ascii?q?q/8PPkWA3x/4uPFqBSPM5r+xC3h6eDKuGRiDx4KTZeypMD23vIxKID014VjiFk?=
 =?us-ascii?q?byOtHqgYtS7RUKLQnbdaAAQGayxoLstH8aI90hNJOc7akd710r94jvgoC1ZKT1?=
 =?us-ascii?q?Dhm8epZdAULGG5Ll/IGEGLNLGeLz3R3873eb+8SaFXjOhMqx2wuDObH1X/MTiZ?=
 =?us-ascii?q?izbpVw6gMedXgSGfPRxevpy9cxl3BWjiStLmdgO0MNttgTIqxr00g2vANXQAPj?=
 =?us-ascii?q?hkb0NNsrqQ4DtYg/plHWxB63tlLe+clCeY7+nXMJAWsfRwDyRwluJa5mk6yrRP?=
 =?us-ascii?q?4CFFQvx1hDXdrtp0r166lemPz2kvbB0bizBEg8quukFkML+RopxBX3nD1AgA4W?=
 =?us-ascii?q?WZF1IBoN4zWfP1vKUF7NHDnby7ATJD75qA+8IZBtT8NseYOWAsdxHuHWiHX0M+?=
 =?us-ascii?q?UTe3ODSH1ARmm/aI+yjQ98Bipw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAAAnkQdch0O0hNFkHQEBBQEHBQEvg?=
 =?us-ascii?q?SIIAQsBg1wECyeMEo4vlziBcywTAYdOIjQJDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?vgjYkAYJiAwMBAnYGCQEBGDgDVAYOBQWDHIICBaYtiiyHb4QvF4FAP4ERjW4Ci?=
 =?us-ascii?q?yGFD5AfCZE2CxiRLCyaE4INMxoIGxWDJ4InF44+HgEBMYEFAQGLJwEB?=
X-IPAS-Result: =?us-ascii?q?A0AcAAAnkQdch0O0hNFkHQEBBQEHBQEvgSIIAQsBg1wECye?=
 =?us-ascii?q?MEo4vlziBcywTAYdOIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiAwMBA?=
 =?us-ascii?q?nYGCQEBGDgDVAYOBQWDHIICBaYtiiyHb4QvF4FAP4ERjW4CiyGFD5AfCZE2Cxi?=
 =?us-ascii?q?RLCyaE4INMxoIGxWDJ4InF44+HgEBMYEFAQGLJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="53893033"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 00:55:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727540AbeLEIwZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 03:52:25 -0500
Received: from ex13-edg-ou-002.vmware.com ([208.91.0.190]:46460 "EHLO
        EX13-EDG-OU-002.vmware.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1727458AbeLEIwN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 03:52:13 -0500
Received: from sc9-mailhost3.vmware.com (10.113.161.73) by
 EX13-EDG-OU-002.vmware.com (10.113.208.156) with Microsoft SMTP Server id
 15.0.1156.6; Wed, 5 Dec 2018 00:52:03 -0800
Received: from sc2-haas01-esx0118.eng.vmware.com (sc2-haas01-esx0118.eng.vmware.com [10.172.44.118])
        by sc9-mailhost3.vmware.com (Postfix) with ESMTP id 37C1841390;
        Wed,  5 Dec 2018 00:52:05 -0800 (PST)
From: Nadav Amit <namit@vmware.com>
To: Ingo Molnar <mingo@redhat.com>
CC: <linux-kernel@vger.kernel.org>, <x86@kernel.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>,
        Andy Lutomirski <luto@kernel.org>,
        Nadav Amit <nadav.amit@gmail.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>, <linux_dti@icloud.com>,
        <linux-integrity@vger.kernel.org>,
        <linux-security-module@vger.kernel.org>,
        Nadav Amit <namit@vmware.com>,
        Kees Cook <keescook@chromium.org>,
        Dave Hansen <dave.hansen@intel.com>,
        Masami Hiramatsu <mhiramat@kernel.org>
Subject: [PATCH v7 12/14] x86/alternative: Remove the return value of text_poke_*()
Date: Tue, 4 Dec 2018 17:34:06 -0800
Message-ID: <20181205013408.47725-13-namit@vmware.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181205013408.47725-1-namit@vmware.com>
References: <20181205013408.47725-1-namit@vmware.com>
MIME-Version: 1.0
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The return value of text_poke_early() and text_poke_bp() is useless.
Remove it.

Cc: Andy Lutomirski <luto@kernel.org>
Cc: Kees Cook <keescook@chromium.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Masami Hiramatsu <mhiramat@kernel.org>
Signed-off-by: Nadav Amit <namit@vmware.com>
---
 arch/x86/include/asm/text-patching.h |  4 ++--
 arch/x86/kernel/alternative.c        | 11 ++++-------
 2 files changed, 6 insertions(+), 9 deletions(-)

diff --git a/arch/x86/include/asm/text-patching.h b/arch/x86/include/asm/text-patching.h
index a75eed841eed..c90678fd391a 100644
--- a/arch/x86/include/asm/text-patching.h
+++ b/arch/x86/include/asm/text-patching.h
@@ -18,7 +18,7 @@ static inline void apply_paravirt(struct paravirt_patch_site *start,
 #define __parainstructions_end	NULL
 #endif
 
-extern void *text_poke_early(void *addr, const void *opcode, size_t len);
+extern void text_poke_early(void *addr, const void *opcode, size_t len);
 
 /*
  * Clear and restore the kernel write-protection flag on the local CPU.
@@ -37,7 +37,7 @@ extern void *text_poke_early(void *addr, const void *opcode, size_t len);
 extern void *text_poke(void *addr, const void *opcode, size_t len);
 extern void *text_poke_kgdb(void *addr, const void *opcode, size_t len);
 extern int poke_int3_handler(struct pt_regs *regs);
-extern void *text_poke_bp(void *addr, const void *opcode, size_t len, void *handler);
+extern void text_poke_bp(void *addr, const void *opcode, size_t len, void *handler);
 extern int after_bootmem;
 extern __ro_after_init struct mm_struct *poking_mm;
 extern __ro_after_init unsigned long poking_addr;
diff --git a/arch/x86/kernel/alternative.c b/arch/x86/kernel/alternative.c
index 18415e3b6000..2740ad2c6f21 100644
--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@ -264,7 +264,7 @@ static void __init_or_module add_nops(void *insns, unsigned int len)
 
 extern struct alt_instr __alt_instructions[], __alt_instructions_end[];
 extern s32 __smp_locks[], __smp_locks_end[];
-void *text_poke_early(void *addr, const void *opcode, size_t len);
+void text_poke_early(void *addr, const void *opcode, size_t len);
 
 /*
  * Are we looking at a near JMP with a 1 or 4-byte displacement.
@@ -666,8 +666,8 @@ void __init alternative_instructions(void)
  * instructions. And on the local CPU you need to be protected again NMI or MCE
  * handlers seeing an inconsistent instruction while you patch.
  */
-void *__init_or_module text_poke_early(void *addr, const void *opcode,
-				       size_t len)
+void __init_or_module text_poke_early(void *addr, const void *opcode,
+				      size_t len)
 {
 	unsigned long flags;
 
@@ -690,7 +690,6 @@ void *__init_or_module text_poke_early(void *addr, const void *opcode,
 		 * that causes hangs on some VIA CPUs.
 		 */
 	}
-	return addr;
 }
 
 __ro_after_init struct mm_struct *poking_mm;
@@ -893,7 +892,7 @@ int poke_int3_handler(struct pt_regs *regs)
  *	  replacing opcode
  *	- sync cores
  */
-void *text_poke_bp(void *addr, const void *opcode, size_t len, void *handler)
+void text_poke_bp(void *addr, const void *opcode, size_t len, void *handler)
 {
 	unsigned char int3 = 0xcc;
 
@@ -935,7 +934,5 @@ void *text_poke_bp(void *addr, const void *opcode, size_t len, void *handler)
 	 * the writing of the new instruction.
 	 */
 	bp_patching_in_progress = false;
-
-	return addr;
 }
 
-- 
2.17.1

