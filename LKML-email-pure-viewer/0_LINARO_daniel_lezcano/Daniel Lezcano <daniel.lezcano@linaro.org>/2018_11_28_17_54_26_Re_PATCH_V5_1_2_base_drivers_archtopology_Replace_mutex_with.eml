Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:39:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 837315803ED;
	Wed, 28 Nov 2018 09:56:21 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 09:56:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AlDGn2RH8eX7UhlLGathLvJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osq+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSiJPHI28?=
 =?us-ascii?q?YYsMAeQPM+lXoIvyqEcBoxulHQmhBvjiyiNLi3LswaE2z+osHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakcS++1yqjIwivHb/hL3zny9onJfQw7rvGKWrJ7bM3cxlQ1GAPDj1Wf?=
 =?us-ascii?q?t4jlMymR1usTsmmU8/BvVeSoi2M8rwFxoz6vyd02ionOnI4VzUrE9SpgzYszON?=
 =?us-ascii?q?a2Rkl7Ydu+H5tRsSGXL5d2Q80jQ2F0pCY11KcGtYSncygNzZQr3xrfa/2Bc4eS?=
 =?us-ascii?q?+BLjU/ydITBihHJqYL6/iQy9/lS+xeLnUcm011VKojBZndnLs3AA0QHY5MufSv?=
 =?us-ascii?q?Zl4EutxTKC2xrO5uxKP0w4j7fXJp09zrIql5ces1zPEy31lUnskqOaa1ko9vK2?=
 =?us-ascii?q?5+nnYrjqvIGQOolpgQ/kKKsugNawAeEgPwgOQWeb/eO82aX9/U32XrpKlOc6kq?=
 =?us-ascii?q?rHv5DAI8QUuKq5DxVS0oY55BazFzam0NIGknkbNF9JZg6LgozzN13TLv30E+2z?=
 =?us-ascii?q?j0mvnTt33fzLP7/sDo3ILnfZkbfhebh961RbyAo21d1f45NUCrccIPP8Q0Pxt8?=
 =?us-ascii?q?LXDgU/MwOqx+brEdJ9140YWW2RGK+UK73SsVCW6eI1OeWMZ5EauCz7K/c74/7i?=
 =?us-ascii?q?l3g5mUUSfaWxx5sYdGi4Huh6I0WeeXfshtYBEWQUsQYkQ+3qlUaPUTpSZ3a0Qq?=
 =?us-ascii?q?I96Ss3CIOgDYffWI+thKaN0zu8Hp1TfmpGEEyDEW/0d4WYXPcBcCKSLdVgkjwY?=
 =?us-ascii?q?T7ehTJUt1RGztADgzbpnIfHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/5YFdtN6P9TUQc6Mpjcz+p9C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfrPMZ9y3HG1K?=
 =?us-ascii?q?o7g1k8WMRPN3arhqp+9wjVGo7InF+Vl6esdaQAwiHN8H2PwnaJvEFdSARwS7nK?=
 =?us-ascii?q?XWgDZkvKqtT0/kDCQKWoCbg9NgtByNSNKq1FatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweNY01l1Lq1/xoViOeYS/MS2LIEpSggpy91HFa7w9LZFd6AqxB9c6VbZN?=
 =?us-ascii?q?M3+E1H2n7BtwxhIpygKLhviUMEfARpoUzizRV3BZ9GkcgxsnwqyhF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov62ln09hQ03?=
 =?us-ascii?q?ub+pXKDAoTXYjtUkot8Bh6vbXaYig754PbznBsNai0sjnf29MmHuclyxCgf8tB?=
 =?us-ascii?q?P6OADgP9D8oaB822Iuwwh1epdg4EPPxV9KMsJcymc+WJ2aG1M+dghj6plnlH75?=
 =?us-ascii?q?1n3UKK9Cp8TfDI0o0Bw/GZ2AuHSjj9gE2gssDxhYBLezUSEnCjxijjAY5bfrdy?=
 =?us-ascii?q?cpoTCWeyP823wc1zhp7wW3JC6FGvHVIH2M+zdhqUYFzwxglQ1UURoXy6liq01T?=
 =?us-ascii?q?10kzc1rqWB2CzC2fjtdB0COmRTXmltkU/sIZSoj9AdREWodQkpmwe/6kbg2qdb?=
 =?us-ascii?q?o75zL2/NTkdSfij6Nn1tXbG0trWffcFP8pQosSNMXeS4YFCaTKP9ohQA3yPiGW?=
 =?us-ascii?q?te2C40dzWwtprlmBx6jXqXLGxvo3rBZcFw2RDf6cTcRP5QxDYHRDN0iSLKBli6?=
 =?us-ascii?q?JNSp+dSUl5HesuGxTW6hV5tTcTX1woOErie0+WpqARinlfCphtLnCRQ60TP819?=
 =?us-ascii?q?RyVyXHtgz8Yoro16S9K+5nZVNnBFz/68p7HIFxjI0wiYoU2XgbgJWV4HUGnX3y?=
 =?us-ascii?q?MdVdxaLxcn4NSSQXzN7S5QjvwFdjIW6Rx4LlSnWdxdNsZtmgbWMRwC497cFKCK?=
 =?us-ascii?q?GP4bxAnCt1pEe4rA3Lbfh8mDcd1eUh6HoAj+4Vvwotyz2XAqoOEklAISzsixOI?=
 =?us-ascii?q?4si9rKpNZWaja7iw1FdkktCnA7GPuQVcWHf/epc/Ei589MR/MFTQ0HLt7oHoYs?=
 =?us-ascii?q?XfbdUWtheMiRfPk/BVKI4tlvoNnSdnPGP9vX4/xOIhgx1hw4q6vJSZJGV35622?=
 =?us-ascii?q?HARYNjLuasMX+zHti7ten8mM04CuGJVhBisEXJ/yQf20FzISsOztNxySHz0ktn?=
 =?us-ascii?q?ebBb3fEBeD6EdhqnLDCZGqOGuRJHkE1tViXxidKVdbgAAVWjU6g5E4GhqrxMzn?=
 =?us-ascii?q?bEd2+DQR6kTkpRtLz+JiLwP/XXvHpAe0djc0T4CSIwFM4QFF40fVLNaS7uZuHy?=
 =?us-ascii?q?xD+p2hrQqNKnGUZghSDGEJXFCECE7nPrW0+dbA9O2YDPKkL/TSebWOtfBeV/CQ?=
 =?us-ascii?q?yJKtyIRm+iiDNt6VMnl+FfE72VdDXXNkG8TfgToPUDcalybMb86duRe99Td7rs?=
 =?us-ascii?q?G58PT3Rg3v4ZGDBKdVMdVq4xq2m7uMN/aMhCZlLjZVzpMNxXjVyLgGwV4dkSdu?=
 =?us-ascii?q?eyO2EbQHsy7NQ7ndmqtWDx4ddiNyO9FE76M63glRJ8Hbjsn52aJ/jv4wE11FT0?=
 =?us-ascii?q?Dumtm1ZcwWJGGwLFPHC1iKNLSFJj3Lwtv7YaCmSb1Xg+VbqQewuSuAE0L4OjSD?=
 =?us-ascii?q?lj/pVw2gMO1WjSGbOgBet5+5chp3FWfjS9fmYAWhMNBrlT023aE0hnTSOGEGLD?=
 =?us-ascii?q?hzaFlNoaOQ7C9ChvV/GndM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?9CtEXuB6mDPOrt5ypFGrivWPyjtiUBZUtjlHnp6EvUV8NqXf7ZRAXXfE/BQQ7W?=
 =?us-ascii?q?SfERgKpt1lCsHxtKBU0NTAiKXzKDJa+dLO4cQcH9TUKN6AMHc5MRvmAjjUDA4E?=
 =?us-ascii?q?TT6tLW7ehkxdn+uU9n2atZU6rpnsmJwTSr5UTlA1F/UaClh7E9wGOpt4QjQkkb?=
 =?us-ascii?q?vIxPIPsFijthiZYMheupGPAvCPG/SpLDudibhsfRYEwbrka48UM9uo9VZlbwxW?=
 =?us-ascii?q?lYLLFk6Yed1fqSRnaUdgrExL8XV6CGk+yUnsbASF5H4VHOSz2BkshV0tMqwW6D?=
 =?us-ascii?q?7w7gJvdRLxrywqnRx0wI29jA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAAA91v5bh0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmkDfyeDeYgYjAiBYAglFJcuFIFdFAEBGAcMAYFLhiMiNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgDwENAQE3AQQBCQEBC?=
 =?us-ascii?q?hgCAiYCAgMxAQUBHAYNBgIBAQEEgxgBgXkIBAEKmxw8ih1wgS+CdgEBBYJDhGo?=
 =?us-ascii?q?IEnmJb4EcgVc/gREnDIJfgxMLAgKBLIM3gleHV4NCii6KVgcCghwEg3tiii4GG?=
 =?us-ascii?q?IFaTYRDgm4QJocHLIlNg1uKTQIEAgQFAgUPIYElgRxxMxowgy8JghIMFxKDOIU?=
 =?us-ascii?q?UhUA/MoEFAQGNMwEB?=
X-IPAS-Result: =?us-ascii?q?A0AgAAA91v5bh0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgmk?=
 =?us-ascii?q?DfyeDeYgYjAiBYAglFJcuFIFdFAEBGAcMAYFLhiMiNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgDwENAQE3AQQBCQEBChgCAiYCAgMxAQU?=
 =?us-ascii?q?BHAYNBgIBAQEEgxgBgXkIBAEKmxw8ih1wgS+CdgEBBYJDhGoIEnmJb4EcgVc/g?=
 =?us-ascii?q?REnDIJfgxMLAgKBLIM3gleHV4NCii6KVgcCghwEg3tiii4GGIFaTYRDgm4QJoc?=
 =?us-ascii?q?HLIlNg1uKTQIEAgQFAgUPIYElgRxxMxowgy8JghIMFxKDOIUUhUA/MoEFAQGNM?=
 =?us-ascii?q?wEB?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="42684851"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 09:56:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729649AbeK2E45 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 23:56:57 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:39910 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729165AbeK2E45 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 23:56:57 -0500
Received: by mail-wr1-f67.google.com with SMTP id t27so19268870wra.6
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 09:54:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=8xMCk4+ab81E1Ehso04+OwMObLxe7I7gMMe8OyYUruk=;
        b=EIhG7H/b8SRtALhIPoAB2wtED+h9CBzgyIpEbYHG/NWKBpDilhcZlfuAccOQ+oY/TI
         UIx7OUUlhSq4IL+Zf3S73jnxNEMNnrUtH9XLdj1s+Kr4nGRqx+ZajlD+aBAvX4hFMmfd
         pUTMvUFpohldMHOcHAo42G1xsxmv5XJSTXcbk=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=8xMCk4+ab81E1Ehso04+OwMObLxe7I7gMMe8OyYUruk=;
        b=StXDc13I3jrYsNBe9pNMhUggA5BdnIkXyaTA4gNeel1xvk8ugvQ8ZBr8/FcrkWJXuZ
         JHyD2BRQUb4QZccOF1SWEmmBshdbxsxLra+Fy4bcn548T0eU+9M1Ge1hiZKzQjRTgSMa
         e/0YMj2ZvI3LnKhqvEthSvvwkHuleYYJW8r3gK99F3FKVG5GH4SoyFIPQdCjNl6epHXQ
         kcVYA3PtyBjoy+kSQ2Fpe1nbesF441T7IOVoy/ZANF1ffFb3+F4LW4EtiVzl5+iYV9yu
         NkudX81oTKUC/9OfhBfFDgAZ+iaoKlOfZcXkll1hNzqDPMey9KvNgRVFjtp0lAZH7plP
         cDWg==
X-Gm-Message-State: AA+aEWaMw+8K0aDTNJisNF3Lpq2J4E12BEJS3yq++ZZ4B+kkg/Wu40as
        3gZVQkfeAB3Jug/BaRSkhuUegnnzu5s=
X-Google-Smtp-Source: AFSGD/WmJ9VZFZHvC+EAyEsr6eW/RBpmRkYc2ONQ2O5/+mrRuzBjlJLLLOLp+qX5Atzn0VpcHFoY8Q==
X-Received: by 2002:a5d:4903:: with SMTP id x3mr31370002wrq.11.1543427668533;
        Wed, 28 Nov 2018 09:54:28 -0800 (PST)
Received: from [192.168.0.40] (sju31-1-78-210-255-2.fbx.proxad.net. [78.210.255.2])
        by smtp.googlemail.com with ESMTPSA id 14sm4714565wmv.36.2018.11.28.09.54.27
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 28 Nov 2018 09:54:27 -0800 (PST)
Subject: Re: [PATCH V5 1/2] base/drivers/arch_topology: Replace mutex with
 READ_ONCE / WRITE_ONCE
To: Juri Lelli <juri.lelli@redhat.com>
Cc: rjw@rjwysocki.net, linux-kernel@vger.kernel.org,
        viresh.kumar@linaro.org, Sudeep Holla <sudeep.holla@arm.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        "Rafael J. Wysocki" <rafael@kernel.org>,
        Ingo Molnar <mingo@kernel.org>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Morten Rasmussen <morten.rasmussen@arm.com>
References: <1543325060-1599-1-git-send-email-daniel.lezcano@linaro.org>
 <20181128114454.GC4271@localhost.localdomain>
From: Daniel Lezcano <daniel.lezcano@linaro.org>
Message-ID: <17ecb59a-7647-ce56-0715-bfe8d520dd18@linaro.org>
Date: Wed, 28 Nov 2018 18:54:26 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181128114454.GC4271@localhost.localdomain>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 28/11/2018 12:44, Juri Lelli wrote:
> Hi Daniel,
> 
> On 27/11/18 14:24, Daniel Lezcano wrote:
>> The mutex protects a per_cpu variable access. The potential race can
>> happen only when the cpufreq governor module is loaded and at the same
>> time the cpu capacity is changed in the sysfs.
>>
>> There is no real interest of using a mutex to protect a variable
>> assignation when there is no situation where a task can take the lock
>> and block.
>>
>> Replace the mutex by READ_ONCE / WRITE_ONCE.
>>
>> Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
>> Cc: Sudeep Holla <sudeep.holla@arm.com>
>> Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org>
>> ---
>>  drivers/base/arch_topology.c  | 7 +------
>>  include/linux/arch_topology.h | 2 +-
>>  2 files changed, 2 insertions(+), 7 deletions(-)
>>
>> diff --git a/drivers/base/arch_topology.c b/drivers/base/arch_topology.c
>> index edfcf8d..fd5325b 100644
>> --- a/drivers/base/arch_topology.c
>> +++ b/drivers/base/arch_topology.c
>> @@ -31,12 +31,11 @@ void arch_set_freq_scale(struct cpumask *cpus, unsigned long cur_freq,
>>  		per_cpu(freq_scale, i) = scale;
>>  }
>>  
>> -static DEFINE_MUTEX(cpu_scale_mutex);
>>  DEFINE_PER_CPU(unsigned long, cpu_scale) = SCHED_CAPACITY_SCALE;
>>  
>>  void topology_set_cpu_scale(unsigned int cpu, unsigned long capacity)
>>  {
>> -	per_cpu(cpu_scale, cpu) = capacity;
>> +	WRITE_ONCE(per_cpu(cpu_scale, cpu), capacity);
>>  }
>>  
>>  static ssize_t cpu_capacity_show(struct device *dev,
>> @@ -71,10 +70,8 @@ static ssize_t cpu_capacity_store(struct device *dev,
>>  	if (new_capacity > SCHED_CAPACITY_SCALE)
>>  		return -EINVAL;
>>  
>> -	mutex_lock(&cpu_scale_mutex);
>>  	for_each_cpu(i, &cpu_topology[this_cpu].core_sibling)
>>  		topology_set_cpu_scale(i, new_capacity);
>> -	mutex_unlock(&cpu_scale_mutex);
> 
> IIRC this was meant to ensure atomic updates of all siblings with the new
> capacity value. I actually now wonder if readers should not grab the
> mutex as well (cpu_capacity_show()). Can't we get into a situation where
> a reader might see siblings with intermediate values (while the loop
> above is performing an update)?

With or without this patch, it is the case:

                task1                      task2
                  |                          |
  read("/sys/.../cpu1/cpu_capacity)          |
                  |                  write("/sys/.../cpu1/cpu_capacity")
  read("/sys/.../cpu2/cpu_capacity)          |


There is no guarantee userspace can have a consistent view of the
capacity. As soon as it reads a capacity, it can be changed in its back.


> BTW, please update my email address. :-)

Sure.


-- 
 <http://www.linaro.org/> Linaro.org │ Open source software for ARM SoCs

Follow Linaro:  <http://www.facebook.com/pages/Linaro> Facebook |
<http://twitter.com/#!/linaroorg> Twitter |
<http://www.linaro.org/linaro-blog/> Blog

