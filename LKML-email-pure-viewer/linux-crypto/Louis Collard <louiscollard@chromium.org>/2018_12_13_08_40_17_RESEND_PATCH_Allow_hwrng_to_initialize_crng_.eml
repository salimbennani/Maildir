Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D878458079C;
	Thu, 13 Dec 2018 00:43:40 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 00:43:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AF0y/ChDSW2bgFySZWjowUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pMWwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH42y?=
 =?us-ascii?q?YYgBAe0aPeZArYTwvEcCoQekCAWwHu7j1iNEi3nr1qM6yeQhFgTG0RQmEdIJrX?=
 =?us-ascii?q?TUrc71P7oMXOCyyKnIyS/Mb+lL1jzg74XIdhchoeyNXbJrbcXRzk0vFwffgVWK?=
 =?us-ascii?q?tIPoJC+a1uQXs2ic6upgVP+vi2s9pwF2uDivyd4hh4/UjYwbzVDE8D92wIczJd?=
 =?us-ascii?q?CgS050f8SkEJ1OuCGeLYd2RdkiQ25utS0nybMGoYa2cDYWxJkj3RLTdvKKf5aS?=
 =?us-ascii?q?7h7+V+udPS10iXNndb6nmRq//lSsxvD5W8m6yllGsjZJn9zRun0IyhDf9s2KRe?=
 =?us-ascii?q?Bg8kqg2zuC0gPe5ftZLUwpkKfWJYMtzaUwm5cWsknMAzX5l1/wgaSLbEsr4PKo?=
 =?us-ascii?q?5P7iYrj+pp+TKYt0igbmP6QwlcywH/44PhINX2eF4+S80qPs/UnjTLVNlP02nb?=
 =?us-ascii?q?HVsJHcJcsFuq60GxFZ3pon5hqlEjur3soUkWMaIF9GZB6LlYnkNlPWLPD9F/i/?=
 =?us-ascii?q?glCskDlxx/DBO73sGpHNLnnFkLf8crdx8k1cxxQpzdBZ+Z1UDqgNIPX9W0/3qt?=
 =?us-ascii?q?PYFAQ0MxK7w+n5EtVxzIAeVnyVAq+fLqzStUWE5uU1I+mDfIMVoiryK+A55/7y?=
 =?us-ascii?q?in80gVsdfaiq3ZQJcny5EelmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2Hp1MaWBHFlCDC3Doe5+EW/cRci2SJMBhnycA?=
 =?us-ascii?q?VbigTY8hyB6vuBX7y7phMurb5CkYuYj/29hy4u3ZjQsy+iBsD8SBz2GNSHl5nm?=
 =?us-ascii?q?EPRzAoxqx/okt9ylGF0ah/mPFYEd1T5/VUUgY1L5Lczup6C8zsVQLFZNuGVFGm?=
 =?us-ascii?q?QtC+CzErUt0x28MOY1p6G9i6lB/DxCqqA7gWl7CRHpw76KDc0mP1J8Z8zXbGya?=
 =?us-ascii?q?Ygg0MnQstJKW2pmKp/+xLPCI7OlkWTj7yqergE3C7R6GeDynKDvEJCXw52S6nF?=
 =?us-ascii?q?WXEfaVHQrdT2/U7CS76uCbI6MgpO08KCK61KasH3glVCXvvsJNPeY2epkWeqGR?=
 =?us-ascii?q?mI3q+MbJbte2gFwSrSElYEnB4J8XaGLwc+ADyhrHzYDDBpEVLvYEbs8e1lpXO/?=
 =?us-ascii?q?T080yRyKbkJ727q0/B4VmeKTS/cJ0r0Yvychri1+HEyh0NLOF9qAuw1hcb1Bbt?=
 =?us-ascii?q?wn/ldIy3jVtwxnMZymNKBtmFgefh9zv0Pv0RV3F4pBndIrrHMs0Ap9N6aY3Eld?=
 =?us-ascii?q?eDOf2JD6IqfXJXXq/BCzd67W3UnT0MqX+qcK7/Q4t1XjvQGzGko+6Xln1MNV03?=
 =?us-ascii?q?+d5pXMAwofSpbxUkcx9xhnqLDWeCg954XI1XJyNam4qCPN29UsBOE90BavY89f?=
 =?us-ascii?q?ML+YFA/1C8AVHcyuJ/Ilmle3bhMIJvtd9LMpMMy8cfuG26mrPPh7kTKijGRH5p?=
 =?us-ascii?q?19002W+yp9TO7Iw4gKw/WC0gSbUDf8iU+rstrrloBceTESAm2/xDDkBY5MfKF9?=
 =?us-ascii?q?YZwHCGauI8KtwNV+iIXgW3pZ9F6lGlMH19WleRuUb1zhwwJQ0V4brmCgmSu91z?=
 =?us-ascii?q?Z0iS0mrrKD3CzSxOTvbAAHOm9XS2Z4l1fjPI+0g8ocXEe2dQgplQKp6lrgyKhf?=
 =?us-ascii?q?uatwMXPTQUBOfyXtK2FiU62wtqeNYsJV6ZMotzlXX/q4YVyAVrH9pB4a2Tv5H2?=
 =?us-ascii?q?RC3DA7ay2qupLhkh16iWKRNnZyoGDCecFtwxfS/9jcRf9X3jobSyh0kzjXBl6g?=
 =?us-ascii?q?P9a3+dWYjYvMsue7V2i5TJ1cbTHrzZ+ctCu8/WBqAwewn+qwmt3kFgg2yzT72M?=
 =?us-ascii?q?NpVSXLrRb8ZJfk16KhPOJjf0loAkL86sVgFoF/lIswmI8f2XwAipqJ+noHlH/5?=
 =?us-ascii?q?Mc9H1qLmcHoNWTkLzsbV4Qf/301vNHCJx4P/VniGxsthZt+6Yn4Z2y4n7sBKDr?=
 =?us-ascii?q?uU46JAnSdvvlW4qgfRa+BnnjgB0fsu9GIag+YRtQou1CqdA6oeHUlFPSP2kRSI?=
 =?us-ascii?q?4MuzrKFWZGapbLix21ByndGnDLGevA5cXGz1dYslHS919s9/Kk7D0GXv6oH4f9?=
 =?us-ascii?q?ndddcTthyXkxjaleRUJow+luEWhSV5I2LypmMqy/Q0jRF12ZG6vY6HK3hi/a6j?=
 =?us-ascii?q?Ax5YMCH1aN0X+j33kalemcOW1Zi1Hpp9AjULQIfoTfWwHTIOsvTnMhyCETwmpX?=
 =?us-ascii?q?edBLrfBhSf6EZ9onLLEpCrMWyXJXYDwdVjQhmdOFJQgAQOUDommZ45ExigxNb9?=
 =?us-ascii?q?f0dh+jAR+ln4pwNXxe1yMBn/VnrfqB2sajcpU5WfKBtW7gdf50baK8Ce7+RzHz?=
 =?us-ascii?q?1G8Z2ltgCCNmubZwFQB2ETRkOEH0zjPqWp5dTY8eiXHO++IOXVYbmUtexSTfSI?=
 =?us-ascii?q?xY+s0ot7+TaDLN6PM2JmD/063EpDQH94F97YmzUJVywYiSbNY9SHqxe7/y19tt?=
 =?us-ascii?q?q//+jzWALz+YuPDKNfMNVo+xCrmKeDKvSfhCBjJTZD0ZMMw3DIxaMb3F4TjSFu?=
 =?us-ascii?q?ajasHa4BtS7LUKLfhKtXAwQHZCN0MctC97g80RVVOc7HltP10aZ1jv4rBFdEVl?=
 =?us-ascii?q?zhmcCpadYJI2GnM1PHC1iENK6bJT3Q2Mz3ZaK8SbtNjORbrRGwuDCbE1P9MTSH?=
 =?us-ascii?q?jTXmSxevMeRUhiGBIBNeoJ29cgpqCWX7Vt3mdwa0MMVpgjw227E0gnLKOHUYMT?=
 =?us-ascii?q?h9dUNNs7KR4TlZgvV5B2xO8H5lIfOYlCae6unSMowWvudzAiRoi+Ja52w3y6dU?=
 =?us-ascii?q?7CFBXvB6hDHeocJuo164lOmC0T5nUBtIqjZWi4OHp0RiOaPF9pZeXXbI5g4C7W?=
 =?us-ascii?q?KVCx4SvdtqFsXvu7xMytjIjK/yKC1N89TR/csdAcjbMMOGMHo7PhrvFz7ZFw8F?=
 =?us-ascii?q?TT+tNWHCiE1RivCS9nuJrpckrpjggoYBSrheVA99KvRPDkVjAcxHK41mRi8jua?=
 =?us-ascii?q?CUgdRO5nekqhTVAsJAscPpTPWXVNHoNTeCxZJDYx8B27+weYAUK4zg0EtmblBg?=
 =?us-ascii?q?kKzBG1DXWNFQp2tmdABi8xYFy2R3UmBmgxGtUQiq+nJGUKfsxhM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABgGxJch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTAlgRSBAieMFY4zl0CBcRQBARgLCAGHQyI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmkCPQEBNwEFCQJQAzEBBQE1BYMcAYIAAQQKmx48i?=
 =?us-ascii?q?h2CH4J2AQEFgTABhX8DBRKHa4J9JoEcF4FAP4lxhQ6LNIUSj3ZVCYIohGWKQSO?=
 =?us-ascii?q?BXIgQNocnAY4kin4CBAIJAgUPIYElgg4zGjCDL4IbDBeIXoVMMzIBgQQBAYxRA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0ANAABgGxJch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgTA?=
 =?us-ascii?q?lgRSBAieMFY4zl0CBcRQBARgLCAGHQyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmkCPQEBNwEFCQJQAzEBBQE1BYMcAYIAAQQKmx48ih2CH4J2AQEFgTA?=
 =?us-ascii?q?BhX8DBRKHa4J9JoEcF4FAP4lxhQ6LNIUSj3ZVCYIohGWKQSOBXIgQNocnAY4ki?=
 =?us-ascii?q?n4CBAIJAgUPIYElgg4zGjCDL4IbDBeIXoVMMzIBgQQBAYxRAQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="44790708"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 00:43:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727812AbeLMIkf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 03:40:35 -0500
Received: from mail-pg1-f196.google.com ([209.85.215.196]:44179 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727095AbeLMIkf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 03:40:35 -0500
Received: by mail-pg1-f196.google.com with SMTP id t13so708982pgr.11
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 00:40:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=from:to:cc:subject:date:message-id;
        bh=m3cLeHLRBiju9/BiIuYZUnRWafttwm6OywruYFw+J70=;
        b=TFs2sKBA7/Qow4XJfz9tHh5W17kHTFTTrLQmunFeH1/pOFVsHudSVVBKND94q29UAx
         lojB9X4v3q5P9oPcgHEo2Aolwu9fsX4w5ALiua0LlAoBW2N90KHTA1DGL2clHHG2GCAW
         7V2V7IiQzdHH+pjya1P6yMo/PfH4aJKBIwKkc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=m3cLeHLRBiju9/BiIuYZUnRWafttwm6OywruYFw+J70=;
        b=cWwcTHBvtfPj52w31W8KTtBtYlp09diIWSJiyZAFkK13pXyacpZk59cH+wP3rKsowJ
         ODTTc4+7O+2dB5x1WY6TdrdjrNgn+1e7s8U/Ahzm7YZAYPlfdDg9w05o5Lwj8jQHo4zJ
         nBQFkXQ8VjLkXrWOLCcxzJWVrOOBdWQH9vqdEaV9VwKzXasUccEKgfsAjOZNsOeb4qTz
         M9UcJJYz5i4p7aLdSFyIKonfQHyhoZHGzbx2ZY9G8EEVtpgXhj8WD/AWxR9iEKMz0tp6
         PlNRqhHFQbFEnuZfd9WmNVGAgfr5JCog5ioiMpQq4msj30tQaMeQ6CE19h+L2NOAZJQZ
         0mbg==
X-Gm-Message-State: AA+aEWaGO3L5UZoGsPjS9o4GBShFC3JjCACL6MVPwRkITKbYN6gqyYHO
        gz5vsmTLAUVbGC3m61UGiG++DA==
X-Google-Smtp-Source: AFSGD/UTbVg/iVrhybaQp/mDcbU+BdkBS3ztNJ/iSRElDfMooWONLkAT/5CqZA5Ay3jfRM5KVcR0+Q==
X-Received: by 2002:a63:2f86:: with SMTP id v128mr20326933pgv.407.1544690434284;
        Thu, 13 Dec 2018 00:40:34 -0800 (PST)
Received: from excession.tpe.corp.google.com ([2401:fa00:1:10:b167:8a11:31b5:8daa])
        by smtp.gmail.com with ESMTPSA id d202sm2047340pfd.58.2018.12.13.00.40.30
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 13 Dec 2018 00:40:33 -0800 (PST)
From: Louis Collard <louiscollard@chromium.org>
To: linux-crypto@vger.kernel.org
Cc: Matt Mackall <mpm@selenic.com>,
        Herbert Xu <herbert@gondor.apana.org.au>,
        Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Gary R Hook <gary.hook@amd.com>, Michael Buesch <m@bues.ch>,
        PrasannaKumar Muralidharan <prasannatsmkumar@gmail.com>,
        Louis Collard <louiscollard@chromium.org>,
        "Michael S . Tsirkin" <mst@redhat.com>,
        linux-kernel@vger.kernel.org, apronin@chromium.org,
        jarkko.sakkinen@linux.intel.com, linux@mniewoehner.de,
        david.bild@xaptum.com
Subject: [RESEND PATCH] Allow hwrng to initialize crng.
Date: Thu, 13 Dec 2018 16:40:17 +0800
Message-Id: <20181213084017.80850-1-louiscollard@chromium.org>
X-Mailer: git-send-email 2.13.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Some systems, for example embedded systems, do not generate
enough entropy on boot through interrupts, and boot may be blocked for
several minutes waiting for a call to getrandom to complete.

Currently, random data is read from a hwrng when it is registered,
and is loaded into primary_crng. This data is treated in the same
way as data that is device-specific but otherwise unchanging, and
so primary_crng cannot become initialized with the data from the
hwrng.

This change causes the data initially read from the hwrng to be
treated the same as subsequent data that is read from the hwrng if
it's quality score is non-zero.

The implications of this are:

The data read from hwrng can cause primary_crng to become
initialized, therefore avoiding problems of getrandom blocking
on boot.

Calls to getrandom (with GRND_RANDOM) may be using entropy
exclusively (or in practise, almost exclusively) from the hwrng.

Regarding the latter point; this behavior is the same as if a
user specified a quality score of 1 (bit of entropy per 1024 bits)
so hopefully this is not too scary a change to make.

This change is the result of the discussion here:
https://patchwork.kernel.org/patch/10453893/

Signed-off-by: Louis Collard <louiscollard@chromium.org>
Acked-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
---
 drivers/char/hw_random/core.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/char/hw_random/core.c b/drivers/char/hw_random/core.c
index 95be7228f327..99c3e4127949 100644
--- a/drivers/char/hw_random/core.c
+++ b/drivers/char/hw_random/core.c
@@ -24,6 +24,7 @@
 #include <linux/sched.h>
 #include <linux/slab.h>
 #include <linux/uaccess.h>
+#include <crypto/chacha20.h>
 
 #define RNG_MODULE_NAME		"hw_random"
 
@@ -64,13 +65,17 @@ static size_t rng_buffer_size(void)
 static void add_early_randomness(struct hwrng *rng)
 {
 	int bytes_read;
-	size_t size = min_t(size_t, 16, rng_buffer_size());
+	/* Read enough to initialize crng. */
+	size_t size = 2*CHACHA20_KEY_SIZE;
 
 	mutex_lock(&reading_mutex);
 	bytes_read = rng_get_data(rng, rng_buffer, size, 1);
 	mutex_unlock(&reading_mutex);
 	if (bytes_read > 0)
-		add_device_randomness(rng_buffer, bytes_read);
+		/* Allow crng to become initialized, but do not add
+		 * entropy to the pool.
+		 */
+		add_hwgenerator_randomness(rng_buffer, bytes_read, 0);
 }
 
 static inline void cleanup_rng(struct kref *kref)
-- 
2.13.5

