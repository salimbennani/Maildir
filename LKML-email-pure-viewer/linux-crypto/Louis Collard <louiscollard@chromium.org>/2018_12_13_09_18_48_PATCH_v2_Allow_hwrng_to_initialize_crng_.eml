Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B659C58079C;
	Thu, 13 Dec 2018 01:19:01 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 01:19:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AacJsBB03x/bxsArqsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTKfXxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJPDICy?=
 =?us-ascii?q?YYwUD+oZP+tVtJXxq0cUoBeiHwSgGP/jxzlVjXH2x6061OEhHBnA0gwnAtIOsW?=
 =?us-ascii?q?/Up8jrOacVVeC1yLPHzS/eYPhL3jr97I/Icg0gofGXQb1wds7RyU01GAPfk1qd?=
 =?us-ascii?q?spDqPzOP1uQKtmib7vdgVee1h24gsQFxrSGiy8ExgYfHgYIVz0rL9SR/wIstJt?=
 =?us-ascii?q?23VlR7Ydi6H5tUrS2aMJF2QswkTmp1uyg60qULtYCncCUO0pgr2hDSZ+Kdf4SV?=
 =?us-ascii?q?4R/vSPydLDZ6iX59Zr6yiAq+/VWlx+3yTMa4zEpGoy9YntTJq3wByxne5dOaRv?=
 =?us-ascii?q?Z8/Eqs3DWC2BrO5u1ZJE05m7fXJIUhz7M1lZccrF7METXwlU7rlqGZbF8k9fKt?=
 =?us-ascii?q?6+n/YrXpuJucN4hshwHgPaQhhNa/Df47MgcQRWib//qz1Ln58U3+WrVKgeU6kq?=
 =?us-ascii?q?jfsJ/EOcQWvrC1DxNR34o59hqyASmq3M4FkXQEMF5JYhOKgorxN1HLOv/4DPO/?=
 =?us-ascii?q?g1q2kDdswvDLJrnhApTLLnjen7btZLV95FBGyAo1099f44tYCrYPIfL1REDxrs?=
 =?us-ascii?q?fVDgE2MwOq2ebrEtZ92Z0EWWKJHKCZNLnesViS5uIgO+WMfpMauC7hK/g54P7j?=
 =?us-ascii?q?lXs5mV4efaa3x5cWZ224E+9iI0WYZ3rsn9gAHX0Lvgo4UOzlllmCXSRPaHa1Wq?=
 =?us-ascii?q?I2/is7B56+DYffWoCth6SM3CehEZ1XemBJEFeMHW3od4WZQfgMbi2SL9RlkjwF?=
 =?us-ascii?q?U7ihVoAg2QuvtA/817poMO7U9jcEupLk0dh///fTmg0q9TxoE8Sd1HmAT2Nznm?=
 =?us-ascii?q?wWXTM236d/oUp7yleEyqV4h/1YFdpO5/JGSAs6NJjcz/BkBND2QA7OYtCJSFO+?=
 =?us-ascii?q?SNW8HT4xVs4xw8MJY0tlAdqilRDD3y2pA7MPjbyEHp40/7nY33jwIcZ91nnH2L?=
 =?us-ascii?q?Mgj1kgXstAK2mmirRj+AjUAo7Di1+ZmLqydaQAwC7N83+OzWmUs0FeSgJwVaTF?=
 =?us-ascii?q?UmoZZkvZttn54kLCT7mzCbUoKAdByMiCKrdUZd3tl1lJWPDjONHGaWKrh2iwHQ?=
 =?us-ascii?q?qIxq+LbIfyZmoSxjvdB1YenwAT53mGMxM+CTmno27ZCDxuFlfvY0f3/Ol6qXO7?=
 =?us-ascii?q?SFI0zg6QY01g0bq15gAahfiGR/wP2bIEvT8rqy9oE1alw9LWF92AqhJ8c6pGf9?=
 =?us-ascii?q?My/k1L1WLDuAx7JZyvMaZii0UacwR2uUPuyhp2Bp9BkcgssHMl0g5yJbiE31NG?=
 =?us-ascii?q?cjOSxYrwNaHPKmnu4BCvbLbb2k3f0NaT/acP9PQ4qlX5sAG1DEYi9G9n091U03?=
 =?us-ascii?q?ua6ZXHFw4SUZP3UkYq+Bl2vbDaYi8h54zK0X1gK7W7sjjH29gxHusq1g6gf8tD?=
 =?us-ascii?q?MKODDAL9CckaCNahKeM0m1mldAkLPP1P+6EuOcOmdPyG2LCwMeZknTKmi3lH4Y?=
 =?us-ascii?q?9n3kKN8Sp8VvDH35Ifz/6E2QuHUi/2jE29vcDvhYBEeTYSE3K/yCj5HoJeerd+?=
 =?us-ascii?q?fIcLCWi0Jc23yc5zh5rsW35e6V6iCEkK2M6veRqOcVP92Rdc2lgQoXyigSG41S?=
 =?us-ascii?q?B7kyk1rqqD2yzD2/7idBsbNWFRXmltkFDsLZKyj98ERkiobhElmwe/6kb+2qdU?=
 =?us-ascii?q?ur5/L27VQUpTeyj2LmdiUra/t7aYYs5P7o8ovjtTUOimfV+aTbv9qQMA0yz/B2?=
 =?us-ascii?q?te2Cw7dzayt5T5nhx2kmKcIGxorHrEf8F93hPf5N3aRf5M0TsKXih4iT/LBlei?=
 =?us-ascii?q?O9ml58mbl5DGsuqmTWKuSoVTcTX3zYOHrCa753dlAQe8n/Cwnd3rCxM63jX419?=
 =?us-ascii?q?lpVCXIqgjzYo/w2qS+MOJneFRoBVDm58p7HIF+jpU/hJUK1XcGgZWV+GINkX3v?=
 =?us-ascii?q?PtVDxaL+cH0NSCYLwtHP5wjpwk9jLnOPx4/iUnWdw81hZ8S1Y28M2yI96dxKB7?=
 =?us-ascii?q?mQ7LBegSR1pV+4pxrLYfdhhjcd1ecu6HkCjuEKogUtzz+RArAPHUZCOyzsmA+F?=
 =?us-ascii?q?79S/rKVReWaufqK81Et4ndC9Er6CphtQV2r+epcnBSVw9NlwMErQ0H3v7YHpYN?=
 =?us-ascii?q?zQbdMQthKOiRvBgfZaKIktlvUUnypoInzyvWcqy+MgiRxu3Je6vJWIKml3/aK5?=
 =?us-ascii?q?BAJYOSPxZ88J5j7tiqNelN6M34+zBpVhBikLXJzwQPK0FzISsO7rNgeUHz06t3?=
 =?us-ascii?q?ebAqHfHQ6E5UdirnLPFY2rNn6NKHkYy9ViWAeSJEhFjA8IWzU6m4YzFhq2y8z5?=
 =?us-ascii?q?bEd5+jcR60bjpRRWzeJoMwT/Xn3bpAe1cTo0TJmfLBxL7gBN/UvVMMqe7v5tEC?=
 =?us-ascii?q?Fc5JGusAuNKmmDbQRSEW4JQlCEB0zkPrS259nP6e2YCfSlL/fUfbWCs+9eV+qL?=
 =?us-ascii?q?xZKy1Itp5S2MO96LPnljCf07x0VCUWp4G8TfhzUAVSgXmzjRYM6coRe24jd3od?=
 =?us-ascii?q?yn8PT3RALv4pOCCrtVMdVy4hC2nL2MN+iKiCZiLjZY0JwMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv41r5mgf40CFdFVl?=
 =?us-ascii?q?3hltuqZcwQJGG9O03IBFyWNLSdPjDLx8D3YaWhSbxflulUthuwuSqFHE/nJDiM?=
 =?us-ascii?q?iz7pVxW3O+FWkC6bJABeuJ26cht1E2fjUcnpagelP953lzE2xbw0i2jONW4dNz?=
 =?us-ascii?q?h8bkxMoqeR7SNenvVwBWhB4mB5IumDniaT9/PYJYoOsft3HiR0kPpX4Gg7y7tQ?=
 =?us-ascii?q?9i1LWOZ5lzfSrtFwpVGrie2PyjthUBpTpTdHnoOLvUN+OarH8plMQ2rL/BUI7W?=
 =?us-ascii?q?+IERQFu8NlCsHzu6BX0tXOlLj8KDFH89LV+8sTH8nVKMKdP3onPhrkAzrUDAoD?=
 =?us-ascii?q?TT62OmDTnU1dkPeO9nKLqpg2sITjmJ0LSuwTaFtgEvIcF1QgF8YTOItwdi0rnK?=
 =?us-ascii?q?Tdj8MS43e66h7LS5Z0pJfCA9aVHPT0YB2eib1NfRdAlbf/MIUIPYr/30V4ZnFx?=
 =?us-ascii?q?nJ7NHkvNWJZKuCI3PVx8m1lE7HUrFj574EnicA74pSZLTfM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAD9IhJch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTAlgRSBAieMFY4zl0CBcRQBARgLCAGHQyI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmkCPQEBNwEFCQJQAzEBBQE1BYMcAYIAAQQKmws8i?=
 =?us-ascii?q?h2CH4J2AQEFgTABhX8DBRKHa4J9JoEcF4FAP4lxhQ6LNIUSj3ZVCYIohGWKQSO?=
 =?us-ascii?q?BXIgQNocojiSKfgIEAgkCBQ8hgSWCDjMaMIMvghsMF4hehUwzMgGBBAEBjFEBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0ANAAD9IhJch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgTA?=
 =?us-ascii?q?lgRSBAieMFY4zl0CBcRQBARgLCAGHQyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmkCPQEBNwEFCQJQAzEBBQE1BYMcAYIAAQQKmws8ih2CH4J2AQEFgTA?=
 =?us-ascii?q?BhX8DBRKHa4J9JoEcF4FAP4lxhQ6LNIUSj3ZVCYIohGWKQSOBXIgQNocojiSKf?=
 =?us-ascii?q?gIEAgkCBQ8hgSWCDjMaMIMvghsMF4hehUwzMgGBBAEBjFEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="55011370"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 01:19:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727995AbeLMJS4 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 04:18:56 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:37570 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727063AbeLMJS4 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 04:18:56 -0500
Received: by mail-pg1-f195.google.com with SMTP id 80so775976pge.4
        for <linux-kernel@vger.kernel.org>; Thu, 13 Dec 2018 01:18:55 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=from:to:cc:subject:date:message-id;
        bh=LNSa3KiH1ZL0pwlhIbt5LEsdkwR+MuAQ2Tqqh2Nb6jk=;
        b=D5+Xz1G/TtOhctI8i9iw6O01K4ZlYJYuxze9D25tctDp6gDiz4p5U3EUp2IOTXFYtP
         IUISvHL1n1L4bmE5RQa2qb1rp1exwRt2CZendLiY5luv9aRL6z76zwtHWlEzybY0iAy1
         qH3v96jyaE4Hex9kCfyItkkpYcslnvQs+Hbgk=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=LNSa3KiH1ZL0pwlhIbt5LEsdkwR+MuAQ2Tqqh2Nb6jk=;
        b=pSP0ppbI6vm1XGlil6oxCOD0MRJV8S++ohk+YHNxQDv8KEEb/c5tU7GgXDvIat2zX7
         OJ75sQlDzQ1aCh32YSyi6sWBtgTKmzOXEg3c48kDvLOMCJJNlJU+y07icBxI5VD67HHl
         +REigRY43gNfbggTuN6v+K798S7UfHwuxs1SbVFXNn1qbimSawurbWdTcObZmvxxD9bY
         tUW0i3/DhH00WPvy64M0Fcxl8XRuZKd+W6FMJ34RuF9HQ3QGc00E8hHARdCtJPO5sCz8
         cgpRjUvghQsaqFC0NDx7iRjkWuccqD8JBgXDUuQbgZZQ5vRDT+L2T79SfpbHw3mKVucA
         J1+g==
X-Gm-Message-State: AA+aEWYQpU3CiHJazn+n1LiBTqF2r/iit7QeVxWBV6qcGFtlZK3WNdQI
        Qnii2zHQQCU0Hay8UAGf66hHaW4heiY=
X-Google-Smtp-Source: AFSGD/UgQH8CE4cQUvodDmvdUeuwX5jkIJhN51sFqvSwCBUcqpXlCMDKMCuOdZABX9YM3Jf5haAlHA==
X-Received: by 2002:a63:9749:: with SMTP id d9mr18209125pgo.415.1544692734840;
        Thu, 13 Dec 2018 01:18:54 -0800 (PST)
Received: from excession.tpe.corp.google.com ([2401:fa00:1:10:b167:8a11:31b5:8daa])
        by smtp.gmail.com with ESMTPSA id i123sm2683186pfg.164.2018.12.13.01.18.51
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 13 Dec 2018 01:18:54 -0800 (PST)
From: Louis Collard <louiscollard@chromium.org>
To: linux-crypto@vger.kernel.org
Cc: Matt Mackall <mpm@selenic.com>,
        Herbert Xu <herbert@gondor.apana.org.au>,
        Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Gary R Hook <gary.hook@amd.com>, Michael Buesch <m@bues.ch>,
        PrasannaKumar Muralidharan <prasannatsmkumar@gmail.com>,
        Louis Collard <louiscollard@chromium.org>,
        "Michael S . Tsirkin" <mst@redhat.com>,
        linux-kernel@vger.kernel.org, apronin@chromium.org,
        jarkko.sakkinen@linux.intel.com, linux@mniewoehner.de,
        david.bild@xaptum.com, tytso@mit.edu
Subject: [PATCH v2] Allow hwrng to initialize crng.
Date: Thu, 13 Dec 2018 17:18:48 +0800
Message-Id: <20181213091848.81327-1-louiscollard@chromium.org>
X-Mailer: git-send-email 2.13.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Some systems, for example embedded systems, do not generate
enough entropy on boot through interrupts, and boot may be blocked for
several minutes waiting for a call to getrandom to complete.

Currently, random data is read from a hwrng when it is registered,
and is loaded into primary_crng. This data is treated in the same
way as data that is device-specific but otherwise unchanging, and
so primary_crng cannot become initialized with the data from the
hwrng.

This change causes the data initially read from the hwrng to be
treated the same as subsequent data that is read from the hwrng if
it's quality score is non-zero.

The implications of this are:

The data read from hwrng can cause primary_crng to become
initialized, therefore avoiding problems of getrandom blocking
on boot.

Calls to getrandom (with GRND_RANDOM) may be using entropy
exclusively (or in practise, almost exclusively) from the hwrng.

Regarding the latter point; this behavior is the same as if a
user specified a quality score of 1 (bit of entropy per 1024 bits)
so hopefully this is not too scary a change to make.

This change is the result of the discussion here:
https://patchwork.kernel.org/patch/10453893/

Signed-off-by: Louis Collard <louiscollard@chromium.org>
Acked-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
---
 drivers/char/hw_random/core.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/char/hw_random/core.c b/drivers/char/hw_random/core.c
index 95be7228f327..7736e1a96321 100644
--- a/drivers/char/hw_random/core.c
+++ b/drivers/char/hw_random/core.c
@@ -24,6 +24,7 @@
 #include <linux/sched.h>
 #include <linux/slab.h>
 #include <linux/uaccess.h>
+#include <crypto/chacha20.h>
 
 #define RNG_MODULE_NAME		"hw_random"
 
@@ -64,13 +65,19 @@ static size_t rng_buffer_size(void)
 static void add_early_randomness(struct hwrng *rng)
 {
 	int bytes_read;
-	size_t size = min_t(size_t, 16, rng_buffer_size());
+	/* Read enough to initialize crng. */
+	size_t size = min_t(size_t,
+			    2*CHACHA20_KEY_SIZE,
+			    rng_buffer_size());
 
 	mutex_lock(&reading_mutex);
 	bytes_read = rng_get_data(rng, rng_buffer, size, 1);
 	mutex_unlock(&reading_mutex);
 	if (bytes_read > 0)
-		add_device_randomness(rng_buffer, bytes_read);
+		/* Allow crng to become initialized, but do not add
+		 * entropy to the pool.
+		 */
+		add_hwgenerator_randomness(rng_buffer, bytes_read, 0);
 }
 
 static inline void cleanup_rng(struct kref *kref)
-- 
2.13.5

