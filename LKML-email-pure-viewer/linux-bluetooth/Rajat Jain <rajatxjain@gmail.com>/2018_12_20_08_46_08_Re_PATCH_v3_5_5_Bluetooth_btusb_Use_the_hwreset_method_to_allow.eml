Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 19:13:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 95C36580522;
	Thu, 20 Dec 2018 00:46:25 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 00:46:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ac5mSThWteVR6z1Gdz/zwyaFPvQjV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCGvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOobPehWoYrzqUYQoxSiHgmsHOHixyRUhnPqx6A2z/gtHR3E0QEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKTe661qvIwi/fb/hL3Tny8onIchY8qvyLR7J/a8jRxlMzFwLKjFWf?=
 =?us-ascii?q?s43lPzWO2+QCtmiU9etgVea1h2E7rAFxpyGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T212pCo3zqcKtJ27cSQQ1pgr2QDTZ+aaf4WM?=
 =?us-ascii?q?4x/uUvuaLy1ii3J/Yr2/gg6/8Ui+xe34Ucm5yEhKriVbndnWrHwN1ALc6tKBSv?=
 =?us-ascii?q?Rj+ketwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYetV7PEjL4lUnolqOaa0Yp9vSy?=
 =?us-ascii?q?5+nmYLjqvpqcOJV1igH6PKQugMu/AeEgPwgKXmib//m81bL68U36XrpKlPs2nb?=
 =?us-ascii?q?fdsJzDIsQaqKi5DBFP0os49Ra/ACmp0M4CkXkEMl1FYhSHgJbtO13UJ/D4F/i/?=
 =?us-ascii?q?j0y2kDh33/DGIqHhApLVI3jHkbfhfqhy51RTyQou1t1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYGU2KVHqCZKL/SsUOP5u83I+mDfo4VuCrnJPgi/fLu?=
 =?us-ascii?q?jWI5lkUbfammxpYXbHG4HvJ7I0SWe3bsg9EBEXsUsQo6VuDllFqCUTtLbXaoQ6?=
 =?us-ascii?q?08/i07CJ6hDYrbXI+tm7yB3CC4HpFMfGBJEFKMHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXelRIo+jxyFcid12CNQHtynm?=
 =?us-ascii?q?MHXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+HD4+VMwxzMEUb0Z9AdqiiAvD0DSsA7MSk7yLB5k08qbH0nj1JsZ9zWvG1a?=
 =?us-ascii?q?Y7g1knRMtPKXOphqpl+wfPAI7Jll2Tl7y2eqQEwC7N6GCDwHKTs05CTg5/T7/J?=
 =?us-ascii?q?XXAFaUvQttT2+EXCQqSqCbQmNAtB1MGDJrFLat3vkVVJWvPjNM7CbGK2nme6HQ?=
 =?us-ascii?q?yIya+UbIr2Z2Ud2z3QCFQFkwAW+naGKQg+Bye7r2LCFjBuEkjvY0ft8el4p3O2?=
 =?us-ascii?q?VUs0zwCMb0182Lu54B8VhfqAS/wN2rIIojsuqzJxHFylxdLZF8KApxZ9fKVbed?=
 =?us-ascii?q?4y+lNH2nzWtgNjPp2sNbtthkMDfAttuUPu1BJ3CptbnMgurXMqyhdyKK2C3FNA?=
 =?us-ascii?q?cTOYwY7/OrnNJmbu+xCvbrbc2kvC39aO5qcP9PM4pk3jvQG0DEYt729r0thV03?=
 =?us-ascii?q?SG4JXKAxEfUZbwUkYx6hh7qKvWYig754PIy3JsNbO4vSPF29IsHOEl0Aqvf89D?=
 =?us-ascii?q?MKOYEw//C9caB8myJ+MwgVimcxUEMPpU9KEqJcOmduKK17KxM+ZkgT2pk35H4I?=
 =?us-ascii?q?d70k+X8yp8S+jI34sKwv2C3wuHUSv8g0mlsszthY9EYjQSFHKlySf4HI5RerFy?=
 =?us-ascii?q?fYETBGauIs273NV/i4T2W35F8l6uHFcG2M6veRqPYF3xxwxQ1UILoXO5nSu01S?=
 =?us-ascii?q?B7kzYsrqCHxizB3/zidAYbOm5MXGRij03jIZK3j9AZW0ikdRMpmwGm5Ub5xqhb?=
 =?us-ascii?q?orpwL2/ITEdMfij2KXxiU6SqurqDZc5P9I0nsSFNXOugZlCaT6b3owEG3CP7A2?=
 =?us-ascii?q?te2Dc7eimqu5rjmBx2kmCdLHd1rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIODriS75HdmAR2in/+pnN3nHhM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5X8HkWbw?=
 =?us-ascii?q?MdpBw67/YmQCRSUXw9HL+gjqw1NsLmiGx4/iUnWdw81hZ8S1Y28M2yI96dxKB7?=
 =?us-ascii?q?mQ7LBegSR1pV+4pxrLYfdhhjcd1ecu6HkCjuEVvwotyz+RA7EIEkleICzsjA+I?=
 =?us-ascii?q?79GloaVTZWavd6Ww1UVkkdCgCrGCvh9TWHLjdpg+Gi9w6911MEjQ333r9oHkZN?=
 =?us-ascii?q?7QYMoIuRKOlBfAi/VVJIg1lvoXnidnPWP9vXs4y+80lxBu3Je6vJSZJGVp5q62?=
 =?us-ascii?q?HhlYNjjtbcMJ5j7tlbpentqR3423HJVuADALU4XzTf6yDDIer/fnNxuNED0hrH?=
 =?us-ascii?q?eUA6HfEBSb6EdnqXLPDp+qO2uWJHkf0dVtWh2dKFZDjwATWTUwhoQ5GRyyxMz9?=
 =?us-ascii?q?bEd54Sgc517/qhtR0+JoKgPwUmHFqAezbTc0TpefIQFS7gFD4UfVLMOf4vhyHy?=
 =?us-ascii?q?Fe4p2usgiNJnaHaARPCGEDQlaECEz7Prmy+dnA9PCVBuqgIPvPYrWOqu1eW+2L?=
 =?us-ascii?q?xZK11Ytm8CiDNt+SPnl5FPA73ktDXXZkG8XWgTkPSioXlz7TYM6fvhuz5ip3rs?=
 =?us-ascii?q?Wn+vTxRA3v/ZePC6dVMdh34R+2nLyMN/SOiyd5MzpY0pIMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv41qJ5jv4wEVtKSU?=
 =?us-ascii?q?btld2pZcMUJWGwL1fHBEeNNLSbKjzH2cD3YaWgSbJOiOVYrQG/uTGeE0X7JDSM?=
 =?us-ascii?q?iyHpVwyzMeFLlCyaPAZRuIe4chZsD2jsVNPnah2hP99xgj072rk0hnLMNW4BPj?=
 =?us-ascii?q?lwaUJNrruM7SxGhvVzAXBO7n1gLbrMpyHM1eDaI4pek/JqBGwgjetY6Wg4wpNa?=
 =?us-ascii?q?6yZLQPEzkyzX+I1Urkmig9WInyBuUhNSujRChYSjskBrOKGf/Z5FClje+xdY12?=
 =?us-ascii?q?ySAghChdJkDJW7oalSw8TflqvyLh9N9tvV+Y0XAM2Ce5HPC2YoLRe8QG2cNwAC?=
 =?us-ascii?q?VzP+cDiH30E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B9AgDjVRtch0O0hNFjH4F4g2wng32De?=
 =?us-ascii?q?5Aagg0UiRJvjUgUgRADTC0TAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII?=
 =?us-ascii?q?2JAGCYQEBAQECAQECCBgEBBUBGwQZAQMCCQEBBQULDQICJgICAx8BDAEEAQUBA?=
 =?us-ascii?q?wEYBhMFgx2BaQEBAg0IBZt8PIsZfBYFARcNgmoFgjWCCAoZBAoZDV6BNwIGEnm?=
 =?us-ascii?q?LNBeBf4QjhGqDH4JXAoQIhT8BgXqFGZBiCYIpjzwYi2oMUYUVLJlQMDlsbYEhM?=
 =?us-ascii?q?xojgQGBHIEfgicXEoM4inQeM4EFAQGLEymCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0B9AgDjVRtch0O0hNFjH4F4g2wng32De5Aagg0UiRJvjUg?=
 =?us-ascii?q?UgRADTC0TAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECA?=
 =?us-ascii?q?QECCBgEBBUBGwQZAQMCCQEBBQULDQICJgICAx8BDAEEAQUBAwEYBhMFgx2BaQE?=
 =?us-ascii?q?BAg0IBZt8PIsZfBYFARcNgmoFgjWCCAoZBAoZDV6BNwIGEnmLNBeBf4QjhGqDH?=
 =?us-ascii?q?4JXAoQIhT8BgXqFGZBiCYIpjzwYi2oMUYUVLJlQMDlsbYEhMxojgQGBHIEfgic?=
 =?us-ascii?q?XEoM4inQeM4EFAQGLEymCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,376,1539673200"; 
   d="scan'208";a="56671409"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 00:46:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729184AbeLTIqW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 03:46:22 -0500
Received: from mail-qk1-f196.google.com ([209.85.222.196]:37001 "EHLO
        mail-qk1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725771AbeLTIqV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 03:46:21 -0500
Received: by mail-qk1-f196.google.com with SMTP id g125so506125qke.4;
        Thu, 20 Dec 2018 00:46:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:reply-to:from:date:message-id
         :subject:to:cc;
        bh=EOwgCUvZ74kmHVV7W4HoF6+v84HqgH+3RyqhHyrdvcg=;
        b=KLockwgg0k11EZ++bTLxYEUkSjGe3ossmToCnGYIVGz+jFAjgeSZwrh4HkIkBrEnMS
         cIQQwd8J9XC8OJpd7mdBZv3uqB/tJMrCjEB2AV5O2UwpbtFTtMc4PzdVDjNQnITztAEW
         FC9NjJWUpP/FS4Nhmy9Xdundv9YRCv6Y8CrTqzF3HVJcg8d98AeCYp74k3RYOW1CspfO
         0P2YtfpoNx1kzcDOoZmPnNRSAp3OiQTvwB0pJn+lVorTDxCMJHtyALqoqS2zKe6+bSU6
         kmNp1K33gSiFA8es0O3CAgciUeaQCga8y3J0SDXO6yYxOHt2kCLD84QsYhbBhHpNK2s5
         /Fgw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:reply-to
         :from:date:message-id:subject:to:cc;
        bh=EOwgCUvZ74kmHVV7W4HoF6+v84HqgH+3RyqhHyrdvcg=;
        b=fLBRqHmxRGQkjZTYd/fiQErOyESQ/zNnRk0wufDw8eAi7EQoPniMqNkefBEBcmuSpQ
         BKjM0VRWSNdkYY89kNW00TmVnhcCUivu7qGeqDB4asvDliMHiK5ldDfukycbPDnmVop7
         Xf9QSXwAkylxq1YSmZi3ovuZiPBnwywXUnfuOb89y77pLl3x7a5RmokoRANJ7Mp6NO1t
         HQPZyNCYnYNI6x4Zq93DUCrGkuV5eWdzFxoaRS3HdTLQlVv4TDxpE3Dc/2kiRw7nBcsg
         RKhLNEbz9MIbUP7qVeSZTKv4Xrek0Ek32rxytzThXA18wS7YHjUMao5F4cURBro6ltB3
         cudw==
X-Gm-Message-State: AA+aEWbw6zeIM/v3QRQEad5UxAQG7sLOqZWkiVaBKZyblgqlZ7DCdTCu
        NvxjjY/YLnAfI21YGeo+ISGKBW+B+3EGhK7hMAA=
X-Google-Smtp-Source: AFSGD/UdTKm/b7AXjKKoW0pwH6lR1CZD2/dc9enzIpw8qrvY5Nloaq7Tf4zisxqlQAwB75VOoqG+HepV4O8mURh35U4=
X-Received: by 2002:a37:bd5:: with SMTP id 204mr22232345qkl.242.1545295579755;
 Thu, 20 Dec 2018 00:46:19 -0800 (PST)
MIME-Version: 1.0
References: <20181117010748.24347-1-rajatja@google.com> <20181121235020.29461-1-rajatja@google.com>
 <20181121235020.29461-5-rajatja@google.com>
In-Reply-To: <20181121235020.29461-5-rajatja@google.com>
Reply-To: rajatxjain@gmail.com
From: Rajat Jain <rajatxjain@gmail.com>
Date: Thu, 20 Dec 2018 00:46:08 -0800
Message-ID: <CAA93t1qvPeDDnQ4294kZpfwEbvDMJdx30=aY1SBdx2vVyvzW0g@mail.gmail.com>
Subject: Re: [PATCH v3 5/5] Bluetooth: btusb: Use the hw_reset method to allow
 resetting the BT chip
To: Rajat Jain <rajatja@google.com>
Cc: Marcel Holtmann <marcel@holtmann.org>,
        Johan Hedberg <johan.hedberg@gmail.com>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        "David S. Miller" <davem@davemloft.net>,
        Dmitry Torokhov <dtor@chromium.org>,
        Alex Hung <alex.hung@canonical.com>,
        linux-bluetooth@vger.kernel.org,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-usb@vger.kernel.org, netdev <netdev@vger.kernel.org>,
        Dmitry Torokhov <dtor@google.com>, raghuram.hegde@intel.com,
        chethan.tumkur.narayan@intel.com, sukumar.ghorai@intel.com
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Nov 21, 2018 at 3:50 PM Rajat Jain <rajatja@google.com> wrote:
>
> If the platform provides it, use the reset gpio to reset the BT
> chip (requested by the HCI core if needed). This has been found helpful
> on some of Intel bluetooth controllers where the firmware gets stuck and
> the only way out is a hard reset pin provided by the platform.

Hi Folks,

I was wondering if you got a change to look at this patchset, and if
there is any feedback.

Thanks,

Rajat


>
> Signed-off-by: Rajat Jain <rajatja@google.com>
> ---
> v3: Better error handling for gpiod_get_optional()
> v2: Handle the EPROBE_DEFER case.
>
>  drivers/bluetooth/btusb.c | 40 +++++++++++++++++++++++++++++++++++++++
>  1 file changed, 40 insertions(+)
>
> diff --git a/drivers/bluetooth/btusb.c b/drivers/bluetooth/btusb.c
> index e8e148480c91..e7631f770fae 100644
> --- a/drivers/bluetooth/btusb.c
> +++ b/drivers/bluetooth/btusb.c
> @@ -29,6 +29,7 @@
>  #include <linux/of_device.h>
>  #include <linux/of_irq.h>
>  #include <linux/suspend.h>
> +#include <linux/gpio/consumer.h>
>  #include <asm/unaligned.h>
>
>  #include <net/bluetooth/bluetooth.h>
> @@ -475,6 +476,8 @@ struct btusb_data {
>         struct usb_endpoint_descriptor *diag_tx_ep;
>         struct usb_endpoint_descriptor *diag_rx_ep;
>
> +       struct gpio_desc *reset_gpio;
> +
>         __u8 cmdreq_type;
>         __u8 cmdreq;
>
> @@ -490,6 +493,26 @@ struct btusb_data {
>         int oob_wake_irq;   /* irq for out-of-band wake-on-bt */
>  };
>
> +
> +static void btusb_hw_reset(struct hci_dev *hdev)
> +{
> +       struct btusb_data *data = hci_get_drvdata(hdev);
> +       struct gpio_desc *reset_gpio = data->reset_gpio;
> +
> +       /*
> +        * Toggle the hard reset line if the platform provides one. The reset
> +        * is going to yank the device off the USB and then replug. So doing
> +        * once is enough. The cleanup is handled correctly on the way out
> +        * (standard USB disconnect), and the new device is detected cleanly
> +        * and bound to the driver again like it should be.
> +        */
> +       bt_dev_dbg(hdev, "%s: Initiating HW reset via gpio", __func__);
> +       clear_bit(HCI_QUIRK_HW_RESET_ON_TIMEOUT, &hdev->quirks);
> +       gpiod_set_value(reset_gpio, 1);
> +       mdelay(100);
> +       gpiod_set_value(reset_gpio, 0);
> +}
> +
>  static inline void btusb_free_frags(struct btusb_data *data)
>  {
>         unsigned long flags;
> @@ -2917,6 +2940,7 @@ static int btusb_probe(struct usb_interface *intf,
>                        const struct usb_device_id *id)
>  {
>         struct usb_endpoint_descriptor *ep_desc;
> +       struct gpio_desc *reset_gpio;
>         struct btusb_data *data;
>         struct hci_dev *hdev;
>         unsigned ifnum_base;
> @@ -3030,6 +3054,16 @@ static int btusb_probe(struct usb_interface *intf,
>
>         SET_HCIDEV_DEV(hdev, &intf->dev);
>
> +       reset_gpio = gpiod_get_optional(&data->udev->dev, "reset",
> +                                       GPIOD_OUT_LOW);
> +       if (IS_ERR(reset_gpio)) {
> +               err = PTR_ERR(reset_gpio);
> +               goto out_free_dev;
> +       } else if (reset_gpio) {
> +               data->reset_gpio = reset_gpio;
> +               hdev->hw_reset = btusb_hw_reset;
> +       }
> +
>         hdev->open   = btusb_open;
>         hdev->close  = btusb_close;
>         hdev->flush  = btusb_flush;
> @@ -3085,6 +3119,7 @@ static int btusb_probe(struct usb_interface *intf,
>                 set_bit(HCI_QUIRK_STRICT_DUPLICATE_FILTER, &hdev->quirks);
>                 set_bit(HCI_QUIRK_SIMULTANEOUS_DISCOVERY, &hdev->quirks);
>                 set_bit(HCI_QUIRK_NON_PERSISTENT_DIAG, &hdev->quirks);
> +               set_bit(HCI_QUIRK_HW_RESET_ON_TIMEOUT, &hdev->quirks);
>
>                 if (id->driver_info & BTUSB_INTEL) {
>                         hdev->setup = btusb_setup_intel;
> @@ -3225,6 +3260,8 @@ static int btusb_probe(struct usb_interface *intf,
>         return 0;
>
>  out_free_dev:
> +       if (data->reset_gpio)
> +               gpiod_put(data->reset_gpio);
>         hci_free_dev(hdev);
>         return err;
>  }
> @@ -3268,6 +3305,9 @@ static void btusb_disconnect(struct usb_interface *intf)
>         if (data->oob_wake_irq)
>                 device_init_wakeup(&data->udev->dev, false);
>
> +       if (data->reset_gpio)
> +               gpiod_put(data->reset_gpio);
> +
>         hci_free_dev(hdev);
>  }
>
> --
> 2.19.1.1215.g8438c0b245-goog
>
