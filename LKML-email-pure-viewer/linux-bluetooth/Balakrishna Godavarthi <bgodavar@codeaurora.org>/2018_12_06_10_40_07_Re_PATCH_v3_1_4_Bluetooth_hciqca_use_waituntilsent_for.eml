Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:44:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 10FBB58014B;
	Thu,  6 Dec 2018 02:40:16 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 02:40:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZ0gafxNM/TV0dDd8b1Ql6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn4osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleWDBODI2y?=
 =?us-ascii?q?b4UBEfcPMuRWr4f+qFoBowC+BRGuCe701j9FhH320bEm3+k7Dw3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LLofXvqxzKbSzjXDdfJW2Sz96IjOaB8qvPCCXbVtfsXL10kgDRnFjkmQ?=
 =?us-ascii?q?qYzkIjiY0f8Cs2ec7+V9T+2vlXQoqxtqrzezwccjl5fGiZgIylDe8iV52pw6Kc?=
 =?us-ascii?q?e/SE5hbt6pCZ1dvDyUOYtxR8MtWWBouCAix7Idvp67ezQKyJAmxx7ZcfCIb4+I?=
 =?us-ascii?q?4hflWe2MIjl4nGpodKyjixu260Ss1+PxWteu3FpXrSdJjsPAu3EP2hDL98SKTv?=
 =?us-ascii?q?hw8l281TuA1w3f8P9ILEQumaffKpMsxKM7mIAJvkTZBCD2nV37jK+IeUUg/eil?=
 =?us-ascii?q?8/rnYrr4qZ+GLYN0iR/xMr4omsOhBeQ0KA8OX3KU+eik1b3j+1P2QKlSg/Eojq?=
 =?us-ascii?q?XUtIrWKdkVq6KnGQNZz4Uu5wqlAzqn0tkUhXwHI0hEeBKDgYjpIVbOIPXgAPe7?=
 =?us-ascii?q?glSsliprxv/fMr3iHJrNNH7Dn6nlfbpk7E5dxgwzws5F559PFLEBL+z8WlXruN?=
 =?us-ascii?q?zbEBA5KQq0zPjjCNln0YMeQ22PDreDMKzOqV+I+v4vI+6UaY8RuTb9KOYq6+Th?=
 =?us-ascii?q?jH8kglIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOnygl2YTTFTf2qyX7?=
 =?us-ascii?q?475jwjCIKpF4bDRpy3j7yGxiu7HoBWaXpAClCDCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLlxEy8iJ7A96e02GKSWF0mG?=
 =?us-ascii?q?QISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rDisqTtIxxN8OYFxxG8+4gRDBxCeqB74Vl7qWBJ076K7c3n7xJ9pjxHbCzq?=
 =?us-ascii?q?Uuk14mQs5XP228mqF/7xTTB5LOk0iBlKalb6Ic0DTJ9GeC12WOuk5YXRV0UaXE?=
 =?us-ascii?q?W3Afe0TXoc745kPEU7+hF7AnPhFdxs6FL6tAcsfpgkleRPf/JNTeZHq8lHqqCh?=
 =?us-ascii?q?aW2LyAdorqdH8b3CXGFkcElQcf/XKFNQg7AiesuGbeDD1oFVLybELg6+h+qHWn?=
 =?us-ascii?q?TkAqywGGdVFu172w+hQNn/yTV+sT3q4YuCcmszh7AUyy38zIBNaapwpuZqNcYc?=
 =?us-ascii?q?gj71dBzm/Zsw19Ppq9L6FtnFIecgJ3v1/w2BVzEIlPjc8qrHYyxgpoNa2YyE9B?=
 =?us-ascii?q?dy+f3Z3oJr3XK2zy/Beza67W2lDSysqW9r0I6PQir1XjvQepFkU5/nVj0tlV1W?=
 =?us-ascii?q?ac55rQAAoTV5LxTlg49xxgq77GZSk94pve1WdwPqmsrj/Cx9UpCfM/xRakYdhe?=
 =?us-ascii?q?P72LFQ/oH8IBGsihNfYlm16qbhIDIuBf76o0P8Kgd/ub16+nJudgnDS6jWtZ5I?=
 =?us-ascii?q?BxyF6D9y15SuTQxZYK3+mY3hebVzf7lFqgst33lZpYaj0IH2u/yTLrBIheZqBp?=
 =?us-ascii?q?eYYLCGGuI9C4x9lkhp7tXWJY+0CnB18cxMCpfh+SZUTn3QJMzUQXvWCnmSygwj?=
 =?us-ascii?q?xukjEmsrCQ3DbTzOTlbhYHPHBERHNjjVv1PYe7ldQaU1W2YAgzkxul4133x6xa?=
 =?us-ascii?q?pKR5MmnSTl1EfynwL2F+TKSwsqCObNJI6JMtqS9XSvizYUiGSr7hpBsXyyPiH2?=
 =?us-ascii?q?pEyDE7bT2qoYj5nxphhWKZLXZzqmfZeM5qyRfe4tzcWeBe3j4cSCZkjjnXA0C2?=
 =?us-ascii?q?P8O18tWMi5fDrue+WnqjVpJJaynrzoCAtCyh6W1xGxK/nPOzmtzhEQck1y/2zN?=
 =?us-ascii?q?1qVSTOrBbhbYjnzaW6MeR7fkZ2AF/w8dZ1GoZ7koEonpEfxWAahomJ/XoAiWry?=
 =?us-ascii?q?Mc9U2aXkYHoPRD4LxcXY4Azk2E1lM3KIyJj1VnSbwst9eda6Znka1T4678BPEK?=
 =?us-ascii?q?2U9qBLnTNpolqkqgLceft9kS0cyfc06H4anvsGuAwiziiGBrASHE9YPTHjlhiS?=
 =?us-ascii?q?7tC+qrlXa3ircbSqyEV+mtWhBqmYog5AQHb5ZosiHSho48V6MVLM02f85pvqed?=
 =?us-ascii?q?bOdtITqgObkw3bgOdLMpIxmeEHhS5mOWL7oH0kxPQ3jR1o3ZGmooeHL39h876+?=
 =?us-ascii?q?Ah5dLjf1fd8c+inxjaZCmcabx5yvHpJkGjkRXZrnV/SoEC8JtfT8NgaDCzk8qn?=
 =?us-ascii?q?adGbrCEg6T8kZmr3TTE5+1M3GbPmUWzdJnRBOFPkxQnBgUXCkmnp4+Dg2l39bu?=
 =?us-ascii?q?cEB95jAM/FL4rgZMx/lsNxn+VGffuQipZi01SJiZMBpZ8AVC613JPsyZ6+J5Bz?=
 =?us-ascii?q?tY8YG5rAyRNmybYBxFDWMTVUyBGV/jJaOi5cXa/+ibG+q+LObOYbOUpuxFTPqI?=
 =?us-ascii?q?wZOv0o17/zeDLMmPP39iD+El1UpHR3x2B8PZmzAXQSwNiy3Nd9KbpAu7+iBvrs?=
 =?us-ascii?q?G/9+nrWBvy5YSVDbteK85v+xewgaeMLOOQgCd5KTBF1pID33PIyb4f3EIMhCFq?=
 =?us-ascii?q?bTWiDbMAtSvVRqLKhqBXFwIbaz90NMZQ76IzwAhNOc3YitP0zLJ4jeQ1C1BKVV?=
 =?us-ascii?q?P/gMGpeNcKLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBgzuGPBNFooGybBZsBXLnTNLncRC7NN53jTsrwbw7nH/KNGgcMS?=
 =?us-ascii?q?RifENJtLGf8SRYgvBnEWxb8nVlNfWEmzqe7+TANpYWsP5rDj5omO5A/Hs6y6Va?=
 =?us-ascii?q?7CdfSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPL3T9oNcVnbc4BIN8W?=
 =?us-ascii?q?KQBgwKptR/DN3vvqFQyt7Xm6PyKDdN6dTU/cQHCsjQKcKHNmchMBXzFD7VCgsF?=
 =?us-ascii?q?USCkNWXFi0NBl/GS8y7dkp9viJ/skZxGarhFU1g5XqcYDURsGvQBLY1xUzdilq?=
 =?us-ascii?q?SU2p0m/327+TPYQMxZpJHcVvSbSdroJD+HhKNYZxpAlbn3KogaKITh80dlZlRz?=
 =?us-ascii?q?gZ7NAUOWWspC9H4yJjQoqVlApSAtBlY43FjoP0b0uCce?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BWAgD4+whch0O0hNFkHgEGBwaBZYJqg?=
 =?us-ascii?q?QInjHKNOxSJDI5CgV8sDQYBg3o8AYMfIjgSAQMBAQEBAQECARMBAQEIDQkIKSM?=
 =?us-ascii?q?MgjYkAYJhAQEBAQIBAQIkEQIGAQE3AQQBCQEBAwcYLgMpKwYLCAUDgxkBgXQFC?=
 =?us-ascii?q?AUKpFiBbDOCdgEBBYcmAwWJBIF+gRwXgUA/gRGDEoMeBIEjIIV3iTcxhhc1kC0?=
 =?us-ascii?q?JhwSKOiCBXIUUgnGHVCyJZoNnjG+Bdn0IgyeCGwwXg0qFFIVHNwEyAYEEAQGKZ?=
 =?us-ascii?q?wEB?=
X-IPAS-Result: =?us-ascii?q?A0BWAgD4+whch0O0hNFkHgEGBwaBZYJqgQInjHKNOxSJDI5?=
 =?us-ascii?q?CgV8sDQYBg3o8AYMfIjgSAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBA?=
 =?us-ascii?q?QIBAQIkEQIGAQE3AQQBCQEBAwcYLgMpKwYLCAUDgxkBgXQFCAUKpFiBbDOCdgE?=
 =?us-ascii?q?BBYcmAwWJBIF+gRwXgUA/gRGDEoMeBIEjIIV3iTcxhhc1kC0JhwSKOiCBXIUUg?=
 =?us-ascii?q?nGHVCyJZoNnjG+Bdn0IgyeCGwwXg0qFFIVHNwEyAYEEAQGKZwEB?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="141016759"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 02:40:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729340AbeLFKkJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 05:40:09 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:58134 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727575AbeLFKkJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 05:40:09 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 716ED607B5; Thu,  6 Dec 2018 10:40:08 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544092808;
        bh=fUivZL1s5upLZ6o4BY6b7ICJk+NquYmE+NS6SkUqvb0=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=brQgcnZrc39UBOq3uo71BZ6Em/BpdDcNbzGA6x9z5dtn6zSZSYfHhOyCwtGPxoNLz
         G/xb9qSuudDUSS+0TvGoKjx+wi8F171+/qL2u32dhfFB4QiR1AEM8WVkKmakqw5sQX
         rn8Vo2XXcYJqyEm6W/6XMJLkDCTer5a/236GEKj4=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.2 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED,URIBL_RHS_DOB autolearn=no autolearn_force=no
        version=3.4.0
Received: from mail.codeaurora.org (localhost.localdomain [127.0.0.1])
        by smtp.codeaurora.org (Postfix) with ESMTP id E071460792;
        Thu,  6 Dec 2018 10:40:07 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544092807;
        bh=fUivZL1s5upLZ6o4BY6b7ICJk+NquYmE+NS6SkUqvb0=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=V7i27NWmde+SYh9gGSpWeqnVq3H4/HRcwjSy4AraCRD9fKuz5nQBLvrnJzHx1JMN0
         b88B+LGnCyM7SBD/ET/D9QBWP3Q0NibBKLvFaYC41D9LeczkXYcK+H7dqH1WukB7t9
         cdO7bKoRJxst3ldCmXpDVCdWSQ4N3oL63MxwRbCk=
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII;
 format=flowed
Content-Transfer-Encoding: 7bit
Date: Thu, 06 Dec 2018 16:10:07 +0530
From: Balakrishna Godavarthi <bgodavar@codeaurora.org>
To: Johan Hovold <johan@kernel.org>
Cc: marcel@holtmann.org, johan.hedberg@gmail.com, mka@chromium.org,
        linux-kernel@vger.kernel.org, linux-bluetooth@vger.kernel.org,
        hemantg@codeaurora.org, linux-arm-msm@vger.kernel.org,
        Johan Hovold <jhovold@gmail.com>
Subject: Re: [PATCH v3 1/4] Bluetooth: hci_qca: use wait_until_sent() for
 power pulses
In-Reply-To: <20181205062503.GG18087@localhost>
References: <20181130150247.26294-1-bgodavar@codeaurora.org>
 <20181130150247.26294-2-bgodavar@codeaurora.org>
 <20181205062503.GG18087@localhost>
Message-ID: <c9bcbaed89a18499fe42463b20367499@codeaurora.org>
X-Sender: bgodavar@codeaurora.org
User-Agent: Roundcube Webmail/1.2.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Johan,

On 2018-12-05 11:55, Johan Hovold wrote:
> On Fri, Nov 30, 2018 at 08:32:44PM +0530, Balakrishna Godavarthi wrote:
>> wcn3990 requires a power pulse to turn ON/OFF along with
>> regulators. Sometimes we are observing the power pulses are sent
>> out with some time delay, due to queuing these commands. This is
>> causing synchronization issues with chip, which intern delay the
>> chip setup or may end up with communication issues.
>> 
>> Signed-off-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>
>> ---
>> v3:
>>   * no change.
>> v2:
>>   * Updated function qca_send_power_pulse()
>>   * addressed reviewer comments.
> 
> Please make sure to include reviewers on CC when resending, and as
> someone else already mentioned, be a bit more specific about what
> changes you actually made in response to the review feedback you
> received.
> 

[Bala]: sure will add and provide more info in version change history.

>> v1:
>>  * initial patch
>> ---
>>  drivers/bluetooth/hci_qca.c | 37 
>> +++++++++++++------------------------
>>  1 file changed, 13 insertions(+), 24 deletions(-)
>> 
>> diff --git a/drivers/bluetooth/hci_qca.c b/drivers/bluetooth/hci_qca.c
>> index f036c8f98ea3..f5dd323c1967 100644
>> --- a/drivers/bluetooth/hci_qca.c
>> +++ b/drivers/bluetooth/hci_qca.c
>> @@ -1013,11 +1013,9 @@ static inline void host_set_baudrate(struct 
>> hci_uart *hu, unsigned int speed)
>>  		hci_uart_set_baudrate(hu, speed);
>>  }
>> 
>> -static int qca_send_power_pulse(struct hci_dev *hdev, u8 cmd)
>> +static int qca_send_power_pulse(struct hci_uart *hu, u8 cmd)
>>  {
>> -	struct hci_uart *hu = hci_get_drvdata(hdev);
>> -	struct qca_data *qca = hu->priv;
>> -	struct sk_buff *skb;
>> +	int ret;
>> 
>>  	/* These power pulses are single byte command which are sent
>>  	 * at required baudrate to wcn3990. On wcn3990, we have an external
>> @@ -1029,19 +1027,16 @@ static int qca_send_power_pulse(struct hci_dev 
>> *hdev, u8 cmd)
>>  	 * save power. Disabling hardware flow control is mandatory while
>>  	 * sending power pulses to SoC.
>>  	 */
>> -	bt_dev_dbg(hdev, "sending power pulse %02x to SoC", cmd);
>> -
>> -	skb = bt_skb_alloc(sizeof(cmd), GFP_KERNEL);
>> -	if (!skb)
>> -		return -ENOMEM;
>> -
>> +	bt_dev_dbg(hu->hdev, "sending power pulse %02x to SoC", cmd);
>>  	hci_uart_set_flow_control(hu, true);
>> +	ret = serdev_device_write(hu->serdev, &cmd, sizeof(cmd), 0);
> 
> You're still using 0 as a timeout here which is broken, as I already
> told you.
> 

[Bala]: got the change now will update to timeout to non zero value.

> From 4.21 this will result in an indefinite timeout, but currently
> implies not to wait for a full write buffer to drain at all.
> 
> As I also mentioned, you need to to make sure to call
> serdev_device_write_wakeup() in the write_wakup() path if you are going
> to use serdev_device_write() at all.
> 

[Bala]: this where i am confused.
         calling serdev_device_write is calling an wakeup internally. 
below is the flow

         ttyport_write_buf:
               * calling serdev_device_write() will call write_buf() in 
this call we are enabling bit "TTY_DO_WRITE_WAKEUP" and calling write()
                 i.e. uart_write() where we call in start_tx. this will 
go to the vendor specific write where in isr we call uart_write_wakeup()
                 
https://elixir.bootlin.com/linux/latest/source/drivers/tty/serial/qcom_geni_serial.c#L756

         
uart_write_wakeup()->ttyport_write_wakeup()->serdev_controller_write_wakeup()->hci_uart_write_wakeup()->hci_uart_tx_wakeup()

         the above is flow when serdev_device_write() is called, it is 
indirectly calling serdev_write_wakeup().

         Why actual we need to call an serdev_write_wakeup() is this 
wakeup related to the UART port or for the BT chip.

> Johan

-- 
Regards
Balakrishna.
