Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:52:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B72A6580380;
	Tue, 11 Dec 2018 08:37:58 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 08:37:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6WJYfB/BYbR3Rf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1ukTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVOQslfWSJBDI2i?=
 =?us-ascii?q?coUADeQBM+VXrobzvFsOtRmzCBKwBO7tyD9EmmP60Lck3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMsdj6LqMSXvq2zKnSzDXDdPNW2THn54PVcx4hpuyDUqhuccXL00kvCwPFjlSN?=
 =?us-ascii?q?ooHiJDyV2eMNvHWB4Op+T+2vkXUqpB12ojey2MgjkJTJhpgSylDe7yp12oE1Jc?=
 =?us-ascii?q?e3SENiZ9OvDZVetyafN4RsQ8MiRXlltz09yr0BpZ67eCkKyJI9yxHDbPyHdo6F?=
 =?us-ascii?q?6Q/gWuaJOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgQ2xHX6cWLUO?=
 =?us-ascii?q?Zx80ih1DqVyQze7vtILEQ1mKfdNpUv2KQ/loAJvkTGBiL2mFv5jKuRdkg85Oio?=
 =?us-ascii?q?5ProYq/8qp+fKYB0kAf+PboqmsClBuQ4KAcOU3Ca+eS6yrLj4VX0TKtWgvAyiK?=
 =?us-ascii?q?XVrZ7XKdoBqqKkAAJZzpwv5he9Aju+1dQXh3gHLFZLeBKdiIjpPknDIPT5Dfe5?=
 =?us-ascii?q?nlStny5nx/PYMb37BJXCMHzDnK7mfbdz7U5T1hAzwMtB55JbFL4BOuj/Wkzvu9?=
 =?us-ascii?q?zCCB82LQi0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKuxI0TPb2h12aTT5Te3GyUr?=
 =?us-ascii?q?o85j4hCYKmEZ3MRoe3jLyBwSe0BJtWZm9dB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cB35+3Uix4+7z90D8Ob02GLSGF5hW?=
 =?us-ascii?q?cIRz4w3KBirk1x0FaD0a5kg/NGEdxf/e9GUgA/NZTE1ex1F8jyWh7dfteOUFup?=
 =?us-ascii?q?WM6mATE2TtIy2dMOeVxyG9e5gxDH3iqqBaIVlrORCJw19KLcw2b+J8Jnx3na06?=
 =?us-ascii?q?khikEsQtFTOm2+mq5/6w/TCpbKk0qDkaamb6Ac3C/X+2eFwmqDp0VYUA92UaXY?=
 =?us-ascii?q?UnETfErWrdLl5kzcS7+iE6goMgxEycSaMKtFdsXpjUlaRPfkINnRfni+m3muCh?=
 =?us-ascii?q?qSxrODdozqe34D0yXbD0QElwMT/XOCNQUlAiehomTeDCFhFF71YkPs9/V+p22/?=
 =?us-ascii?q?TkMu0w6KaEhh3aKv+hEJnfycV+8T3rUctSg8sTp0Akiy08jWC9WaoQphZ7tTYd?=
 =?us-ascii?q?Um7VdD1GLZsRF9P5O6I6BjgF4ebxp4v0f02xprDYVAlNAgrGk2wwpqNaKYzFRB?=
 =?us-ascii?q?eiuE3ZDxP73XLXXy/BCvaqLMxlHSytGW+r0L6PQ5rVXjsxqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw8gmBO87xRevYdhe?=
 =?us-ascii?q?MLmIGxTvE8IHHceuLu8qm1+3bh8fOOBS9ag0P96pdvec2a6rOvpgkyyijWhd/I?=
 =?us-ascii?q?991UeM/TJmSuHUx5YF3+2Y3gyfWjb8kVetqNz4lZpFZDESBGW/zyfkCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmTG5zz?=
 =?us-ascii?q?NoiT4ptLeQ3CvUz+TkahUHIG9LSHB+glj2JYi7ks4VXFKvbwgvjxal4Uf6x65G?=
 =?us-ascii?q?pKVwNWXTQEFIfzToIGFmSKe/qr2CY8tX4pMyrSpXSPi8YUydSrPloxoa0jnvHm?=
 =?us-ascii?q?tEyDAgajGqvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquK+WHi7Vp1QcinrypmMtDCh6m1pAh2/nvazlcPhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HsHi2jz?=
 =?us-ascii?q?Ns9X2aD/bHoLXjMLx9/V4A742ExsNH6JxoT5VmmDzctlfdW1fmQW2icl5cBQFK?=
 =?us-ascii?q?iU9KBEnTdyolegrgLee/l9ki0dyfsz8nEahe4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHSpx7sV8Kl3AynPy5Z//eN?=
 =?us-ascii?q?nMc90TrAabnAnaj+haM58xkvsKhSx6OWPyp3Elyug7jQBw0pG+poSIN2Jt/Keh?=
 =?us-ascii?q?CB5CKjL1f98T+i3qjatGgsaW2IWvEo9gGzoRWpvoUOmoECkTtfn8MwaOETs8qm?=
 =?us-ascii?q?qUGLbFHA+f7ltmoGzLE5yxK36XI3wZx814RBaBPExfnBwUXDIik5EiDA+qw8jh?=
 =?us-ascii?q?cFpj6jAV+171sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGbZR5HDWQXVUyfHVzjIqOi5drd8+ibG+q+KeHBYa6VpOxaVveI?=
 =?us-ascii?q?w4+v04R88zaNMMWPImdtD/kh1kVfWnB5HtzTmy8TRCwPiyLNc8mbqQ+8+y1ws8?=
 =?us-ascii?q?C/6enrVxjp5YeVELtSNtNv+x+tjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtzNMRW7qI83QpNOc/BhtP2zL54ifE1BElfVV?=
 =?us-ascii?q?z8gcGkfsgKI2C7NFPaC0eHLrWGJTvXw87pZaOwU6FfjOJRtxeoozaUD1fjPiif?=
 =?us-ascii?q?lznuTx2gK/xMgzqBPBNAuICxaBJtCWn4QdLiax27NsJ3jDIszb01gHPKKXATMT?=
 =?us-ascii?q?xmf0xRqb2Q6DtSgu9jFGxZ8nplMe6Elj6F7+nZL5Yaq+dkDj5omOJa/ns6zaBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKOpU9iI7nW9oFcWXbY+xIA9W?=
 =?us-ascii?q?WRBA4Mp9tgC93vvbhfy9nPlK3pLjdC/MnZ/c8dB8jSNcKGP2AtMRvvGD7IEgQF?=
 =?us-ascii?q?SSSnOn3Yh0xYw7mu8Si3qZgzrNDMn4QJTrMTAF4yFvocIkdoBtoPJNFwRDxywp?=
 =?us-ascii?q?CBi8tdz3O6pRrLRd5auJmPefWeCOvmMiqZjPEQbRQPzbrmJJ47PYr31kV/cF5g?=
 =?us-ascii?q?lcLNAUWGDoMFmTFocgJh+BYFy3N5VGBmnhu9Mg4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BdAADA5w9ch0O0hNFkHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGCaYECJ4xzizGCDRSJDY5FgV8sDQYBg3o8AYJ3IjcGDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgECAwECJBECBgEBNwEFCQEBAwcYLgMpKwYLCAUDg?=
 =?us-ascii?q?xkBgXQNBQqkeIFsM4J2AQEFhygDBYkhgX6BHBeBQD+BEYMSgx4EgSMghXeJPTG?=
 =?us-ascii?q?GGTaQQAmHCYpAIIFchReCc4daLIl8g26MeYF4fQiDJ4IbDBeDSoUUhUc3ATIBg?=
 =?us-ascii?q?QQBAYpjAQE?=
X-IPAS-Result: =?us-ascii?q?A0BdAADA5w9ch0O0hNFkHQEBBQEHBQGBVAUBCwGCaYECJ4x?=
 =?us-ascii?q?zizGCDRSJDY5FgV8sDQYBg3o8AYJ3IjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgECAwECJBECBgEBNwEFCQEBAwcYLgMpKwYLCAUDgxkBgXQNBQqkeIF?=
 =?us-ascii?q?sM4J2AQEFhygDBYkhgX6BHBeBQD+BEYMSgx4EgSMghXeJPTGGGTaQQAmHCYpAI?=
 =?us-ascii?q?IFchReCc4daLIl8g26MeYF4fQiDJ4IbDBeDSoUUhUc3ATIBgQQBAYpjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55447459"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 08:37:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727951AbeLKQYn (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 11:24:43 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:44406 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727273AbeLKPmh (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 10:42:37 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id F226660913; Tue, 11 Dec 2018 15:42:36 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544542957;
        bh=6ggL3c3Hm2Qsp/HijtdSknvW4aClXsInkiPhUrDPlB8=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=cFQUEbuVRHeEnnXhh5H7rPcAJIzxwLJ7vCuZ5lY++q0y1z5HbwaEcY9VYThaMGjfD
         UDHgQxqYwdBUjFhLmmjGw5SW26iO80Y6I7z5FVRMXQzKZaTFh+8RSinH8rA1vb7QJd
         PlPLBAn9RH2kxW4fcS3TJg8ICMt28dAT9LPnBkB8=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from mail.codeaurora.org (localhost.localdomain [127.0.0.1])
        by smtp.codeaurora.org (Postfix) with ESMTP id A423A6029D;
        Tue, 11 Dec 2018 15:42:34 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544542954;
        bh=6ggL3c3Hm2Qsp/HijtdSknvW4aClXsInkiPhUrDPlB8=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=apM5iSjqEF/jsht4JPWKj87KMONWckUjtWKwwS0NIoolnf+UwtiYouZ3WHc/ZMHnV
         QVdhdBvwE7MkrXWKmhgKLeEqinUrefPfAoqG6SRnC9yj4PryfgkOn2g5WcY9xxZe23
         tlMWMZDSI/Q4OFSia8Q+csujUjFnmK6FVMHjsNFY=
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII;
 format=flowed
Content-Transfer-Encoding: 7bit
Date: Tue, 11 Dec 2018 21:12:34 +0530
From: Balakrishna Godavarthi <bgodavar@codeaurora.org>
To: Johan Hovold <johan@kernel.org>
Cc: marcel@holtmann.org, johan.hedberg@gmail.com, mka@chromium.org,
        linux-kernel@vger.kernel.org, linux-bluetooth@vger.kernel.org,
        hemantg@codeaurora.org, linux-arm-msm@vger.kernel.org,
        Johan Hovold <jhovold@gmail.com>
Subject: Re: [PATCH v3 1/4] Bluetooth: hci_qca: use wait_until_sent() for
 power pulses
In-Reply-To: <c9bcbaed89a18499fe42463b20367499@codeaurora.org>
References: <20181130150247.26294-1-bgodavar@codeaurora.org>
 <20181130150247.26294-2-bgodavar@codeaurora.org>
 <20181205062503.GG18087@localhost>
 <c9bcbaed89a18499fe42463b20367499@codeaurora.org>
Message-ID: <0a8cc07b08ee10812a99b46c78e616ce@codeaurora.org>
X-Sender: bgodavar@codeaurora.org
User-Agent: Roundcube Webmail/1.2.5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Johan,

On 2018-12-06 16:10, Balakrishna Godavarthi wrote:
> Hi Johan,
> 
> On 2018-12-05 11:55, Johan Hovold wrote:
>> On Fri, Nov 30, 2018 at 08:32:44PM +0530, Balakrishna Godavarthi 
>> wrote:
>>> wcn3990 requires a power pulse to turn ON/OFF along with
>>> regulators. Sometimes we are observing the power pulses are sent
>>> out with some time delay, due to queuing these commands. This is
>>> causing synchronization issues with chip, which intern delay the
>>> chip setup or may end up with communication issues.
>>> 
>>> Signed-off-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>
>>> ---
>>> v3:
>>>   * no change.
>>> v2:
>>>   * Updated function qca_send_power_pulse()
>>>   * addressed reviewer comments.
>> 
>> Please make sure to include reviewers on CC when resending, and as
>> someone else already mentioned, be a bit more specific about what
>> changes you actually made in response to the review feedback you
>> received.
>> 
> 
> [Bala]: sure will add and provide more info in version change history.
> 
>>> v1:
>>>  * initial patch
>>> ---
>>>  drivers/bluetooth/hci_qca.c | 37 
>>> +++++++++++++------------------------
>>>  1 file changed, 13 insertions(+), 24 deletions(-)
>>> 
>>> diff --git a/drivers/bluetooth/hci_qca.c 
>>> b/drivers/bluetooth/hci_qca.c
>>> index f036c8f98ea3..f5dd323c1967 100644
>>> --- a/drivers/bluetooth/hci_qca.c
>>> +++ b/drivers/bluetooth/hci_qca.c
>>> @@ -1013,11 +1013,9 @@ static inline void host_set_baudrate(struct 
>>> hci_uart *hu, unsigned int speed)
>>>  		hci_uart_set_baudrate(hu, speed);
>>>  }
>>> 
>>> -static int qca_send_power_pulse(struct hci_dev *hdev, u8 cmd)
>>> +static int qca_send_power_pulse(struct hci_uart *hu, u8 cmd)
>>>  {
>>> -	struct hci_uart *hu = hci_get_drvdata(hdev);
>>> -	struct qca_data *qca = hu->priv;
>>> -	struct sk_buff *skb;
>>> +	int ret;
>>> 
>>>  	/* These power pulses are single byte command which are sent
>>>  	 * at required baudrate to wcn3990. On wcn3990, we have an external
>>> @@ -1029,19 +1027,16 @@ static int qca_send_power_pulse(struct 
>>> hci_dev *hdev, u8 cmd)
>>>  	 * save power. Disabling hardware flow control is mandatory while
>>>  	 * sending power pulses to SoC.
>>>  	 */
>>> -	bt_dev_dbg(hdev, "sending power pulse %02x to SoC", cmd);
>>> -
>>> -	skb = bt_skb_alloc(sizeof(cmd), GFP_KERNEL);
>>> -	if (!skb)
>>> -		return -ENOMEM;
>>> -
>>> +	bt_dev_dbg(hu->hdev, "sending power pulse %02x to SoC", cmd);
>>>  	hci_uart_set_flow_control(hu, true);
>>> +	ret = serdev_device_write(hu->serdev, &cmd, sizeof(cmd), 0);
>> 
>> You're still using 0 as a timeout here which is broken, as I already
>> told you.
>> 
> 
> [Bala]: got the change now will update to timeout to non zero value.
> 
>> From 4.21 this will result in an indefinite timeout, but currently
>> implies not to wait for a full write buffer to drain at all.
>> 
>> As I also mentioned, you need to to make sure to call
>> serdev_device_write_wakeup() in the write_wakup() path if you are 
>> going
>> to use serdev_device_write() at all.
>> 
> 
> [Bala]: this where i am confused.
>         calling serdev_device_write is calling an wakeup internally.
> below is the flow
> 
>         ttyport_write_buf:
>               * calling serdev_device_write() will call write_buf() in
> this call we are enabling bit "TTY_DO_WRITE_WAKEUP" and calling
> write()
>                 i.e. uart_write() where we call in start_tx. this will
> go to the vendor specific write where in isr we call
> uart_write_wakeup()
> 
> https://elixir.bootlin.com/linux/latest/source/drivers/tty/serial/qcom_geni_serial.c#L756
> 
> 
> uart_write_wakeup()->ttyport_write_wakeup()->serdev_controller_write_wakeup()->hci_uart_write_wakeup()->hci_uart_tx_wakeup()
> 
>         the above is flow when serdev_device_write() is called, it is
> indirectly calling serdev_write_wakeup().
> 
>         Why actual we need to call an serdev_write_wakeup() is this
> wakeup related to the UART port or for the BT chip.
> 
>> Johan

Can you help me to understand, whether my understating is correct wrt 
serdev_wakeup().

-- 
Regards
Balakrishna.
