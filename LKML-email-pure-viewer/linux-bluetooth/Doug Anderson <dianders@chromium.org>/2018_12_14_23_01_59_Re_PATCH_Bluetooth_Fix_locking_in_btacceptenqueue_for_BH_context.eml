Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:10:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 942FD58061F;
	Fri, 14 Dec 2018 15:02:23 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 14 Dec 2018 15:02:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AR1tFuBwdj/xjnEXXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4QK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJYBAfQdMuZDt4nwpUADrQeiCQS2GO/j1iNEi33w0KYn0+ohCwbG3Ak4EtwAt3?=
 =?us-ascii?q?TUsdr1P7oOXOCz0abH0y/Db+hR2Tf79YPFdQ0uofCWUrJ2bMXe11MvFxjeg1qM?=
 =?us-ascii?q?qYzlJTSV1uEMs2iG6upsT+Wvi3QoqwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt0uT31stSogybALuYS3cDYXxJkl3RLSa+GLfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/XiVsm7zllKtDBJktrSuXAX0Rzc9MyHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz7oqmpYOv0nPADX6lFj1gaOKbEkp++ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/BeU4Mg4TX2mU4Oi816Ps/Vf/QLpUiv06i6?=
 =?us-ascii?q?7ZsZ7cJcsFvK60GBFV0ok95BalFTum08oXnWMBLF1bfBKLlY/pO0vBIPzgF/ew?=
 =?us-ascii?q?n0yskCt3x/DBJrDhBpTNLnvdn7v7crd99lVRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biEN99zJ8RWXqTAq+FN6PfqV+I6fguI+mQfoAVvyzxK/g45/H0?=
 =?us-ascii?q?i385lkQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EICmDYDdSYy3g7yB2yG7HptRZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddv/O3TlRYy9T9uA8SHyW6NTXp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUFWm?=
 =?us-ascii?q?Tc+gAT0rStIxwsUBY0ByG9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCoHUiUqZibileb4c3CHX8meD1nSBvEdfXA50UqXF?=
 =?us-ascii?q?WHQfa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ADyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyl0HFe439LRF9qApwpgcL9AYd?=
 =?us-ascii?q?8n51dHz2bZtw17PpyvNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23caHW3k/R0dmI9aYP8vg3sEjjsxyzGUok8HVn1MdV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?MaOZFAPoD8IWHcmvKOwwlFivYRIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr8llahvdztloBeeD4SGXCzyS76C45LZ61+?=
 =?us-ascii?q?ZJoEBn2qI8Kq2Np+nZntW3hD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZLRWljl1vtIZK4j8sHXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSL7yuQEa0yDgH2?=
 =?us-ascii?q?tZ3jw7bCulupb6nxx7jmKSMnBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzIOauyu8/2FqAxy/n/aol93jEAg61zL71t?=
 =?us-ascii?q?ZwWSXJqhb8fpfk16CgPe17eUloAUf269BmFYFmjoswmJYQ1GAZhpqP/HoLi2fz?=
 =?us-ascii?q?MchB1qL4Y3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4qAPRYftnkTsHx/oh9mUag/0Xtwo31SqSHKoSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WXv6oHjfd?=
 =?us-ascii?q?ncd9MSuQeSkxfdlOhVM5Mxm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b0Ju1EZVmHjULQYHkTfa1ED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTU4hJE5Ex6lxNf7?=
 =?us-ascii?q?fEdl/DwR5UP4qhhRyuJuLRb/SXzSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1DiPr6z5dnZ7uiXHOy+I+HVYbWJr+xeWOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C//+rqWALs5ouPCqFeMdZ1+xCxjqeMKfSQhDtiKTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNMHBl9P6zaR4geA1CltfUV?=
 =?us-ascii?q?zhm9qkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwyvMeBJjC2BIBNSop2ychZzBmjlV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB7+jXMJAWsf5qAiRyj+1b4XQ6xKFT?=
 =?us-ascii?q?7CFLX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaCKvqVHDFPN4A4N7G?=
 =?us-ascii?q?yLQzcDqtthAd7i8/RVydHnn6LpLzJD7teS+tETUZv6MsWCZVYmLBWhMTjYAREe?=
 =?us-ascii?q?SjjjYW3ejkpRneuJ3naVtJ8/q4Xp3p0URekIBxQOCvoGBxE9T5Q5K5BtU2ZhyO?=
 =?us-ascii?q?bDgQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0C7AgAfNhRch0O0hNFcCB0CHwUHgU0Cg?=
 =?us-ascii?q?miBAhQTg3yIeIsZgg0UiQ6JOIR9gXEVARgDEAGHRyI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsDCgICJgICAx8SA?=
 =?us-ascii?q?QUBHAYTBRaDBgGBcwUIBZpFPIofcIEJJoJ2AQEFhyUIEnmLMxeBf4ERgxKEXIM?=
 =?us-ascii?q?rgleJQIF4hRSQTgmHDYpNGIIqh0mHXyyZDgIEAgQFAgUPIYEsAViBLk0wCGwGg?=
 =?us-ascii?q?jUJixMuhTIfMoEFAQGNPgEB?=
X-IPAS-Result: =?us-ascii?q?A0C7AgAfNhRch0O0hNFcCB0CHwUHgU0CgmiBAhQTg3yIeIs?=
 =?us-ascii?q?Zgg0UiQ6JOIR9gXEVARgDEAGHRyI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsDCgICJgICAx8SAQUBHAYTBRaDBgG?=
 =?us-ascii?q?BcwUIBZpFPIofcIEJJoJ2AQEFhyUIEnmLMxeBf4ERgxKEXIMrgleJQIF4hRSQT?=
 =?us-ascii?q?gmHDYpNGIIqh0mHXyyZDgIEAgQFAgUPIYEsAViBLk0wCGwGgjUJixMuhTIfMoE?=
 =?us-ascii?q?FAQGNPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="57561457"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 15:02:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730327AbeLNXCO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 18:02:14 -0500
Received: from mail-vs1-f65.google.com ([209.85.217.65]:40640 "EHLO
        mail-vs1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729630AbeLNXCO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 18:02:14 -0500
Received: by mail-vs1-f65.google.com with SMTP id z3so4374146vsf.7
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 15:02:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=Ls7aozBV5PltLX4SJMOQ8ZWRffrHZSO3X5f7x+jd7fE=;
        b=L0Vt38VfRin/k1+oIgfpAa8RXKMBBU5PZs9j2m45TbBRLSKj47kAvRctKOoRnRE2Su
         8FVMzjBsTqvb+eosBXMdyF8imGC/CGZ5/RtTCXp31b1dkVr+3vWq4IeXD1uX9HSLh2sA
         NlJLCNpbjIh/OGEUWe4iFGaMG5Sw9fpndq11g=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=Ls7aozBV5PltLX4SJMOQ8ZWRffrHZSO3X5f7x+jd7fE=;
        b=WytdmDczMfwY3SpMidh7eL5XNlPXzLsO7uLUrrBiPr2VXnu+Z2545xPgYYLEZNO9e/
         OdKlWpEYuy8pZp1sy3XjuU8pI9Z+UIObwSI8RTE/6M1DbYQJpwu1M8gtBIVOX2qd+IDk
         cDETGHavNG5+ZssWig48FFOKnCi8xUIECqAtS8Zm2VcZB3X5CFPjP2BdzEFZWP+t2w49
         gqmA6g4MYw0pN1UyGq+MhNigFTDLztcMANXjUuNWNzBmI8Q+mBbcRf1VMyibi6W5lqPF
         QDKUk5WkVXz5hFnm1qUXRIJBAa9qG2sTUWDuPxqOOPdySSWmH4IMGZr4c6rYZpHYxw/G
         FxtQ==
X-Gm-Message-State: AA+aEWZzJhPdHBDtWVJKrRdlmBzZjZ2XvjOIPvTkO2VR5+LKhxAuua1W
        z2k/fRL/oBaOI4eCt6UhJkLwElEJOFo=
X-Google-Smtp-Source: AFSGD/UKyIpdIU3LW+BmFxoY1aF1efgFPzUotGYJJf9gllZQp4jEr9CrDN9oqtSPwh9ZNfPmmxMNmA==
X-Received: by 2002:a67:d85:: with SMTP id 127mr2030888vsn.211.1544828532490;
        Fri, 14 Dec 2018 15:02:12 -0800 (PST)
Received: from mail-vs1-f51.google.com (mail-vs1-f51.google.com. [209.85.217.51])
        by smtp.gmail.com with ESMTPSA id f88sm2314458vsa.7.2018.12.14.15.02.11
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 14 Dec 2018 15:02:11 -0800 (PST)
Received: by mail-vs1-f51.google.com with SMTP id v205so4385822vsc.3
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 15:02:11 -0800 (PST)
X-Received: by 2002:a67:1505:: with SMTP id 5mr2069890vsv.20.1544828530333;
 Fri, 14 Dec 2018 15:02:10 -0800 (PST)
MIME-Version: 1.0
References: <20181015223910.197729-1-mka@chromium.org>
In-Reply-To: <20181015223910.197729-1-mka@chromium.org>
From: Doug Anderson <dianders@chromium.org>
Date: Fri, 14 Dec 2018 15:01:59 -0800
X-Gmail-Original-Message-ID: <CAD=FV=W78QXLzc3ptPZ8y8QA4PLfs--qgJOtDhQ8WW+mCGEqQA@mail.gmail.com>
Message-ID: <CAD=FV=W78QXLzc3ptPZ8y8QA4PLfs--qgJOtDhQ8WW+mCGEqQA@mail.gmail.com>
Subject: Re: [PATCH] Bluetooth: Fix locking in bt_accept_enqueue() for BH context
To: Matthias Kaehlcke <mka@chromium.org>
Cc: marcel@holtmann.org, johan.hedberg@gmail.com,
        David Miller <davem@davemloft.net>, Dean_Jenkins@mentor.com,
        linux-bluetooth@vger.kernel.org, netdev <netdev@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>, khlebnikov@yandex-team.ru,
        Balakrishna Godavarthi <bgodavar@codeaurora.org>,
        Dmitry Grinberg <dmitrygr@google.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

On Mon, Oct 15, 2018 at 3:39 PM Matthias Kaehlcke <mka@chromium.org> wrote:
>
> With commit e16337622016 ("Bluetooth: Handle bt_accept_enqueue() socket
> atomically") lock_sock[_nested]() is used to acquire the socket lock
> before manipulating the socket. lock_sock[_nested]() may block, which
> is problematic since bt_accept_enqueue() can be called in bottom half
> context (e.g. from rfcomm_connect_ind()).
>
> The socket API provides bh_lock_sock[_nested]() to acquire the socket
> lock in bottom half context. Check the context in bt_accept_enqueue()
> and use the appropriate locking mechanism for the context.

I wonder if it would help to put the stack crawl in the commit message
too?  I think this is what the BUG was reporting (though the stack
seems a bet shorter than I'd expect due to compiler inlining)

  __might_sleep+0x4c/0x80
  lock_sock_nested+0x24/0x58
  bt_accept_enqueue+0x48/0xd4 [bluetooth]
  rfcomm_connect_ind+0x190/0x218 [rfcomm]
  rfcomm_run+0xe3c/0x163c [rfcomm]


> Fixes: e16337622016 ("Bluetooth: Handle bt_accept_enqueue() socket atomically")
> Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
> ---
> Not sure if this is the correct solution, it's certainly not elegant and
> checkpatch.pl complains that in_atomic() shouldn't be used outside of
> core kernel code. I'm open to other suggestions :)

I'm a total noob when it comes to Bluetooth, so I guess I'll try to
understand the callchains here.  As far as I can tell there are only 3
calls to bt_accept_enqueue, right?  I guess we can look at each of
them:

--

1. net/bluetooth/l2cap_sock.c:

Parent is locked with lock_sock().

--

2. net/bluetooth/rfcomm/sock.c:

Parent is locked with bh_lock_sock().  This is the case you were seeing.

--

3. net/bluetooth/sco.c

sco_conn_ready() => __sco_chan_add => bt_accept_enqueue()

...parent is locked with bh_lock_sock().

sco_connect() => sco_chan_add() => __sco_chan_add

...parent is NULL so we actually never call bt_accept_enqueue() in
this callchain.

So the net result is that the parent is locked with bh_lock_sock().

--

From looking at the above I guess it's pretty simple--if our parent
was locked with bh_lock_sock() then the child should be locked with
bh_lock_sock_nested().  If the parent was locked with lock_sock() then
the child should be locked with lock_sock_nested().

I wonder if a less controversial solution here (and one that wouldn't
upset checkpatch) is to just add a parameter to bt_accept_enqueue()
like "bh".  Then you'd pass true for "bh" in
"net/bluetooth/rfcomm/sock.c" and "net/bluetooth/sco.c" and false from
"net/bluetooth/l2cap_sock.c"

--

In any case the problem seems serious enough that I'd propose a Revert
of commit e16337622016 ("Bluetooth: Handle bt_accept_enqueue() socket
atomically") unless we can come up with an acceptable solution.


-Doug
