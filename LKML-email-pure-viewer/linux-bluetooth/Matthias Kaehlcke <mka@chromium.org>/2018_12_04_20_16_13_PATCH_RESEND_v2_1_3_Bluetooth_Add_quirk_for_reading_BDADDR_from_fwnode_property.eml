Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:44:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DA50D58014B;
	Tue,  4 Dec 2018 12:19:40 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 12:19:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Anv4iKxEf1pMgIJ4DON2dG51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75oc6+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoYbyqVQVrRumBwShH//jxzxSi3Pqx6A2z/gtHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3yOqgITeC10KnIzTTZYPNNxDzz7ZLHfQ4hofGIQb1wctTewlQoGgPAjVWf?=
 =?us-ascii?q?s5foMC+V1uQXtGib6utgVf+qi2I9rAFxuDevy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wpio3y6MKtYK+cSQXyJko2xvSZ+Kbf4SW?=
 =?us-ascii?q?5x/vSeOcLix5iX1/drKyghiy/Eugx+D5SMa7zVdHoTZAn9bWqn8A1gbc586aQf?=
 =?us-ascii?q?Vn5EihwyyA1wXL5+FEP080ka3bJoY/wr4/iJUTq17PHizol0Xsiq+ZaEEk9vKv?=
 =?us-ascii?q?6+T9bbXqvp6cN4lqhQHiKqkihNCzDOAiPgQTUWWX5/6w2KDg8EHlWrlHj/87nr?=
 =?us-ascii?q?HcsJ/AJMQboqC5AxVS0oYm8xu/Czam0NIFnXgINV5FewyIj5LvO17QJPD0FPC/?=
 =?us-ascii?q?glqqkDh13fDLJaPhAprTIXjZirvhfqhy61RayAUtydBT/ZVUCqsOIP7rQE/+qM?=
 =?us-ascii?q?TYDgMlMwyz2+vnDNR91oAAVm6VDa6ZLbjfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtcBHn0LvgoiVuPqj0eOUT5OZ3moWa?=
 =?us-ascii?q?I86So2CIanDYfFW4Csj6aN3Ca9Hp1KeG9GDkqAHmvvd4WBQ/0Mcj6dItd9kjwY?=
 =?us-ascii?q?UrisU40h1RawuwPgyLpnKezU+isftZ/40Nh15uvTlQw99DBuDsSd1X2NQH9wnm?=
 =?us-ascii?q?8SWzA226V/q1Rnylifyah4n+BYFdtL6vxTSQc6NZncz+9gB9DoQA3BfMyESFKn?=
 =?us-ascii?q?QtWgHDEwQcg9w94IY0ZhBdqiigrP0DatA78Qj7aLHoA78rrA33jtIMZw03XG27?=
 =?us-ascii?q?Mnj1U8RstPNHephqhw9wXIA47JkkOZl7uldKgG3S7N8nuDwnSKvE1CTAFwVqDF?=
 =?us-ascii?q?V2gFZkTKtdT5+l/CT7i2BLs6KARB19CNJrFKatLzi1VGX+nsONLZb2K1mGewAB?=
 =?us-ascii?q?KIy6iIbIrrfWUdwSrcBFIFkwAV4XaJKww+Cj29rGLZCTxkDUjvbF/08elitHO7?=
 =?us-ascii?q?SVc5wByQYE1/ybW54B4ViuaaS/MIwL0EvjwsqzF1HFa7wtLXBMCMpwtnfKVAf9?=
 =?us-ascii?q?w95E1L2n7etwx4JpagNbxthkYCcwRruEPjzwl3CoRFkcgtsHMqzApzJbiE0F9b?=
 =?us-ascii?q?cDOYx5TwOrzRKmn95x2vb6/W2lfD0NeZ4KsP6fI4q0n9swGtDEYt73Jn09xN2X?=
 =?us-ascii?q?uG+prKFBYSUY72Uksv7Rd6o6/VYyYj6ILUz3FjKrS0vSLY1NIvB+slzQigcsxb?=
 =?us-ascii?q?MKOFEg/yDsIbC9KvKOwsh1imcBYEMPpO+64zOsOsb+GG17KzPOZ8gDKminxK4Y?=
 =?us-ascii?q?Bg0k6W6yVwUO/J35YfzPGe0QuKTDP8jFanssDqloFIfzASHmyjySf6AI5dfLF9?=
 =?us-ascii?q?fYEOCW22Oc242s1+h4LxW35f7FOjHVIG19OzdhqIclP92hdc1UIJrny9mCu01i?=
 =?us-ascii?q?B7nCstrqWCwiPO2ePidBwcN25PRWlii0rsIIeug9AbWkiocxYmlB+/6UnmwKhb?=
 =?us-ascii?q?obx1L3PPTkdQYyj2M2ZiX7Owt7qDecJO6IkksT5KUOS6el2aTr/9ox0H0yLsBW?=
 =?us-ascii?q?dexTY7dy20tZX9hRB1lGWdLHNrpnrDZc5w3Qvf5MDbRfNJ3DoJXjN4iTrUBli7?=
 =?us-ascii?q?JdWp5s+bl5TAsuC/UWKuSJtTfDLvzYOBsiu7+GJrDQe+n/C1ht3oDww63TXn2N?=
 =?us-ascii?q?ltUCXCtAz8bZXz16SmLeJneVFlBV/m5Mp9AI1+kIowhJcL1Hgeh5WV+2cHkGjp?=
 =?us-ascii?q?PdVa36L+cGQCRToRz9HJ5wjl3VVpLmiVyILhSnWd3sxhasG5YmwM2yIx9cBKCL?=
 =?us-ascii?q?qO47xCkit4uV64rQPXYfhgkTYR0/ou6HgGg+4XvAoh1DmSArcXHUNAJyzjiwyI?=
 =?us-ascii?q?78yirKVQfGuvdLmw1Elkkty7ArCNvBpcWGrndZc4BiB/8N9/MF3X3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCbK2Vq+aK1?=
 =?us-ascii?q?GB9ZOSfzZ8MO4THtlqdek92S34CuGJVhBzoKUIHpTfKuDDIdq/DnOxySHz07r3?=
 =?us-ascii?q?eRAaDfEhOH6Ed6s3LPFIimOGqNK3keydViWQORJEhCgA0PWDU6n5g5Fh2lxcD7?=
 =?us-ascii?q?cUd54CwR6UD8qhdW1u1oMBz/WH/FpAi0cjc0VISfLB1O4wFA/UjVNNKR7vlpEy?=
 =?us-ascii?q?FE5JGhrxGNKm+GZwROF24JQVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpCXXdkG8TAhjUAUSoXmzjWb86cohe89TZ6rs?=
 =?us-ascii?q?S+8PTtRQLu6pGDC7pUMdVz5R+2hb2POPKXhCZ8MTxYzI8DxWfUyLgD214fkyFu?=
 =?us-ascii?q?eCesEbQDti7NTbjcmqxNDx4cZCN8KtFI778n3gRWPc7bi9X11qN3j/IvCldFU0?=
 =?us-ascii?q?Dhld+tZcAQP269M1bHDl6RNLuaPT3L3933YaSkRLJKkeVbrAewtiibEkP5OjSD?=
 =?us-ascii?q?liLkVxSuMeFKkSGaMwZSuIC7chZxF2fjSMjqZQG8MN9ylTc226E7hmvWNW4ANj?=
 =?us-ascii?q?hxa19NrryV7S9CnvpzAXBO7np7IumCgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC7KpN50v16mivWPyiZgUBdWqjdEnoSLvUBjOaXf7pZBWHbE8wgL7W?=
 =?us-ascii?q?WfEBkKo9plCtvyu6Ff0NTPlaTzKCtc/NLQ58cTG8/UKMfUeEYmZD/gAjXZCEMl?=
 =?us-ascii?q?Sjq3MGjZgQQJlfiI/XCRhpg9roTpkZwIDLhBWwpxXtEdCk1jVPwPLJ16RDxsxb?=
 =?us-ascii?q?ycjMcOo3qzoBPcXspysZXOV/bUCvLqfnLRx5VNeRoEiYiwa8w2N4n/1lYoIg12?=
 =?us-ascii?q?lZrHHmLcVM5ApylmYBNypkhRpjw2amoy0ArdbR6p6X4VXaqwmR89zBN5fOAk9T?=
 =?us-ascii?q?HE51YxL0DN4iwqnx9it8/ihGW0eSLtLKa5Rsl1Aif0s0MyP9uvRgV8RQayh0th?=
 =?us-ascii?q?NSrBAbVLgO0zJihQlAbAtM4XSrZnRqpebUpVnKnPag=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A1AAAM4AZch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgTCCOyeYIIIhiQuOKoFzEgEBGBMBh0wiNgcNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAwMBAiQLAQ0BATcBBQkBAVADMQEFARwGARIFgxyBd?=
 =?us-ascii?q?Q0BBJlIPIodgWwzgnYBAQWHKQgSh12CbSaBHBeBQD+BEY1uiVkLhk1Qj0oJkTY?=
 =?us-ascii?q?jgVuIADaHFSyIWo9KAgQCBAUCBQ8hgSwBggVNMAiDJ4IbDBcSiEyFYB8ygQUBA?=
 =?us-ascii?q?YphAQE?=
X-IPAS-Result: =?us-ascii?q?A0A1AAAM4AZch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBgTC?=
 =?us-ascii?q?COyeYIIIhiQuOKoFzEgEBGBMBh0wiNgcNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiQLAQ0BATcBBQkBAVADMQEFARwGARIFgxyBdQ0BBJlIPIodgWw?=
 =?us-ascii?q?zgnYBAQWHKQgSh12CbSaBHBeBQD+BEY1uiVkLhk1Qj0oJkTYjgVuIADaHFSyIW?=
 =?us-ascii?q?o9KAgQCBAUCBQ8hgSwBggVNMAiDJ4IbDBcSiEyFYB8ygQUBAYphAQE?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="53820767"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 12:19:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726303AbeLDUQh (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 15:16:37 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:41283 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726171AbeLDUQe (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 15:16:34 -0500
Received: by mail-pg1-f195.google.com with SMTP id 70so7871170pgh.8
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 12:16:33 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=I1tczKbzPD84L0kVYxKySMQXoPeV0CfDlNT382/LJic=;
        b=hP1GQw0JwKJS7Ciy+fwn6OnuoPYPR9Z8LYKhDk77xfZgpi/0BeWt4hWWk2BVRRr4Hn
         rTx9v9HKJtqvi3otdnwLQPUX05//4TkTt9FFLWrMAy+qMCCLbIXgFvqwqM2p0jhRrI/Y
         22Se9XxE3eG3IjPh4YDtGkQUw5zKh+Z92VGgM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=I1tczKbzPD84L0kVYxKySMQXoPeV0CfDlNT382/LJic=;
        b=t2koQuIR1Pwd2AILuj/unLc/K8v/X2FCeo/dGCC4GeGqG5+yfs1I1Fs5lIEQyC76Lv
         Z22ml7uKG7THtnd4/Rrpg4sp9vykCClRD1TngYDfT9mWL2s5US+2GhpW1uTHU7NNb93j
         KYahoQzh93f+I5G5UYNiLK+LZI1c0fukkKFNP1d6spMLPhduUmKv9l+c04LMy/ijQC87
         TfRGBGZpiO1nNBt0uMnLnIyE2vLKJvtUsart/24xlCPIUY0IC0J7Z+GLqyq99KNv0gnO
         4fo2Y4t58gCWZ8caMj1dSDP47SgCXeSZproQ0jeMobZKGVD1lkux2VrhsZpo2Xn934BU
         j9sQ==
X-Gm-Message-State: AA+aEWZJS8YIRkK2A5SVQ1VpOb123xa0Tk/Tf3AtnHtCd53KSuxUyT+N
        eD7EeTGU8LRyMPYYKg7ysDvHNTv/R0A=
X-Google-Smtp-Source: AFSGD/VIFtyE7T3SR22rxcAbjL8JJg0l7yQ17a/WOQ/u6oAr8chC7FwNeMM7uEZ3i9P6IaNoCg5PWQ==
X-Received: by 2002:a63:6906:: with SMTP id e6mr17693080pgc.144.1543954593399;
        Tue, 04 Dec 2018 12:16:33 -0800 (PST)
Received: from mka.mtv.corp.google.com ([2620:15c:202:1:b6af:f85:ed6c:ac6a])
        by smtp.gmail.com with ESMTPSA id b185sm29499593pga.85.2018.12.04.12.16.32
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 12:16:32 -0800 (PST)
From: Matthias Kaehlcke <mka@chromium.org>
To: Marcel Holtmann <marcel@holtmann.org>,
        Johan Hedberg <johan.hedberg@gmail.com>,
        "David S . Miller" <davem@davemloft.net>,
        Loic Poulain <loic.poulain@linaro.org>
Cc: linux-bluetooth@vger.kernel.org, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Balakrishna Godavarthi <bgodavar@codeaurora.org>,
        Brian Norris <briannorris@chromium.org>,
        Dmitry Grinberg <dmitrygr@google.com>,
        Matthias Kaehlcke <mka@chromium.org>
Subject: [PATCH RESEND v2 1/3] Bluetooth: Add quirk for reading BD_ADDR from fwnode property
Date: Tue,  4 Dec 2018 12:16:13 -0800
Message-Id: <20181204201615.245574-2-mka@chromium.org>
X-Mailer: git-send-email 2.20.0.rc1.387.gf8505762e3-goog
In-Reply-To: <20181204201615.245574-1-mka@chromium.org>
References: <20181204201615.245574-1-mka@chromium.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add HCI_QUIRK_USE_BDADDR_PROPERTY to allow controllers to retrieve
the public Bluetooth address from the firmware node property
'local-bd-address'. If quirk is set and the property does not exist
or is invalid the controller is marked as unconfigured.

Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
Reviewed-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>
Tested-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>
---
Changes in v2:
- added check for return value of ->setup()
- only read BD_ADDR from the property if it isn't assigned yet. This
  is needed to support configuration from user space
- refactored the branch of the new quirk to get rid of 'bd_addr_set'
- added 'Reviewed-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>' tag
---
 include/net/bluetooth/hci.h | 12 ++++++++++
 net/bluetooth/hci_core.c    | 45 +++++++++++++++++++++++++++++++++++++
 net/bluetooth/mgmt.c        |  6 +++--
 3 files changed, 61 insertions(+), 2 deletions(-)

diff --git a/include/net/bluetooth/hci.h b/include/net/bluetooth/hci.h
index c36dc1e20556a..fbba43e9bef5b 100644
--- a/include/net/bluetooth/hci.h
+++ b/include/net/bluetooth/hci.h
@@ -158,6 +158,18 @@ enum {
 	 */
 	HCI_QUIRK_INVALID_BDADDR,
 
+	/* When this quirk is set, the public Bluetooth address
+	 * initially reported by HCI Read BD Address command
+	 * is considered invalid. The public BD Address can be
+	 * specified in the fwnode property 'local-bd-address'.
+	 * If this property does not exist or is invalid controller
+	 * configuration is required before this device can be used.
+	 *
+	 * This quirk can be set before hci_register_dev is called or
+	 * during the hdev->setup vendor callback.
+	 */
+	HCI_QUIRK_USE_BDADDR_PROPERTY,
+
 	/* When this quirk is set, the duplicate filtering during
 	 * scanning is based on Bluetooth devices addresses. To allow
 	 * RSSI based updates, restart scanning if needed.
diff --git a/net/bluetooth/hci_core.c b/net/bluetooth/hci_core.c
index 7352fe85674be..d4149005a661e 100644
--- a/net/bluetooth/hci_core.c
+++ b/net/bluetooth/hci_core.c
@@ -30,6 +30,7 @@
 #include <linux/rfkill.h>
 #include <linux/debugfs.h>
 #include <linux/crypto.h>
+#include <linux/property.h>
 #include <asm/unaligned.h>
 
 #include <net/bluetooth/bluetooth.h>
@@ -1355,6 +1356,36 @@ int hci_inquiry(void __user *arg)
 	return err;
 }
 
+/**
+ * hci_dev_get_bd_addr_from_property - Get the Bluetooth Device Address
+ *				       (BD_ADDR) for a HCI device from
+ *				       a firmware node property.
+ * @hdev:	The HCI device
+ *
+ * Search the firmware node for 'local-bd-address'.
+ *
+ * All-zero BD addresses are rejected, because those could be properties
+ * that exist in the firmware tables, but were not updated by the firmware. For
+ * example, the DTS could define 'local-bd-address', with zero BD addresses.
+ */
+static int hci_dev_get_bd_addr_from_property(struct hci_dev *hdev)
+{
+	struct fwnode_handle *fwnode = dev_fwnode(hdev->dev.parent);
+	bdaddr_t ba;
+	int ret;
+
+	ret = fwnode_property_read_u8_array(fwnode, "local-bd-address",
+					    (u8 *)&ba, sizeof(ba));
+	if (ret < 0)
+		return ret;
+	if (!bacmp(&ba, BDADDR_ANY))
+		return -ENODATA;
+
+	hdev->public_addr = ba;
+
+	return 0;
+}
+
 static int hci_dev_do_open(struct hci_dev *hdev)
 {
 	int ret = 0;
@@ -1422,6 +1453,20 @@ static int hci_dev_do_open(struct hci_dev *hdev)
 		if (hdev->setup)
 			ret = hdev->setup(hdev);
 
+		if (ret)
+			goto setup_failed;
+
+		if (test_bit(HCI_QUIRK_USE_BDADDR_PROPERTY, &hdev->quirks)) {
+			if (!bacmp(&hdev->public_addr, BDADDR_ANY))
+				hci_dev_get_bd_addr_from_property(hdev);
+
+			if (!bacmp(&hdev->public_addr, BDADDR_ANY) ||
+			    !hdev->set_bdaddr ||
+			    hdev->set_bdaddr(hdev, &hdev->public_addr))
+				hci_dev_set_flag(hdev, HCI_UNCONFIGURED);
+		}
+
+setup_failed:
 		/* The transport driver can set these quirks before
 		 * creating the HCI device or in its setup callback.
 		 *
diff --git a/net/bluetooth/mgmt.c b/net/bluetooth/mgmt.c
index ccce954f81468..fae84353d030f 100644
--- a/net/bluetooth/mgmt.c
+++ b/net/bluetooth/mgmt.c
@@ -551,7 +551,8 @@ static bool is_configured(struct hci_dev *hdev)
 	    !hci_dev_test_flag(hdev, HCI_EXT_CONFIGURED))
 		return false;
 
-	if (test_bit(HCI_QUIRK_INVALID_BDADDR, &hdev->quirks) &&
+	if ((test_bit(HCI_QUIRK_INVALID_BDADDR, &hdev->quirks) ||
+	     test_bit(HCI_QUIRK_USE_BDADDR_PROPERTY, &hdev->quirks)) &&
 	    !bacmp(&hdev->public_addr, BDADDR_ANY))
 		return false;
 
@@ -566,7 +567,8 @@ static __le32 get_missing_options(struct hci_dev *hdev)
 	    !hci_dev_test_flag(hdev, HCI_EXT_CONFIGURED))
 		options |= MGMT_OPTION_EXTERNAL_CONFIG;
 
-	if (test_bit(HCI_QUIRK_INVALID_BDADDR, &hdev->quirks) &&
+	if ((test_bit(HCI_QUIRK_INVALID_BDADDR, &hdev->quirks) ||
+	     test_bit(HCI_QUIRK_USE_BDADDR_PROPERTY, &hdev->quirks)) &&
 	    !bacmp(&hdev->public_addr, BDADDR_ANY))
 		options |= MGMT_OPTION_PUBLIC_ADDRESS;
 
-- 
2.20.0.rc1.387.gf8505762e3-goog

