Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:51 -0000
Received: from icoremail.net (unknown [209.85.214.178])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH0KC6vJbjIO6AQ--.55316S3;
	Tue, 20 Nov 2018 00:53:23 +0800 (CST)
Received: from mail-pl1-f178.google.com (unknown [209.85.214.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBnTUmA6vJbQ2lZAA--.2649S3;
	Tue, 20 Nov 2018 00:53:21 +0800 (CST)
Received: by mail-pl1-f178.google.com with SMTP id b5so8438787plr.4
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:53:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=UZpVXszQMiY6NrF+iJOGm79CpA8yUc50lOaFHTZGJic=;
        b=rPuacWU6KGJabRH85UkCCO1OAxuO6CQ7ZYMIU1YcvKmFEJOKiJfHek9KMZJ1jIGdjT
         z4Vv0LZB19zGcdKUUNuOYy+HuS2kdbxB1Rn4g2cjGFopPMA475BUHPCi2MOm7tIOoOtF
         LOGGvQ6KtA3LY8apdSdVZBK6+1LmCREQE/G/s7nUyM+SoVtAAM52VBrdkYJnoP9fG12j
         uNBQ31drCAP3KIc5TSNvY3p0OEfr9e12mY4mtY+Tttm7tU6fic7klJfSYS7cpVAde8y0
         yd7MVujNQP9NQk++t0I/q8hDj9MA5pgl0JDamHHBRiDYwquKzjeiJgA+O1Ly/0uRArfS
         KQYg==
X-Gm-Message-State: AGRZ1gIMiTPlg39lofUFzluJLpMlc6LVyF5uICGZRZrTFhJjuooOMBLb
	qfVU+QnXCkwGtphXmuvwzizFEVa2RXUVWuThWpNtDEhOcrWOKTY=
X-Received: by 2002:a17:902:bd46:: with SMTP id b6mr22992604plx.231.1542646400727;
        Mon, 19 Nov 2018 08:53:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2903391pju;
        Mon, 19 Nov 2018 08:53:19 -0800 (PST)
X-Google-Smtp-Source: AJdET5eR07a+1iOVNY2r7i3GpiQMbhPfasd4JI2JE8wbrsjue16K5AZAlCNZ7uCOFbPwam/rM46s
X-Received: by 2002:a63:bc02:: with SMTP id q2mr20993916pge.116.1542646399914;
        Mon, 19 Nov 2018 08:53:19 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646399; cv=none;
        d=google.com; s=arc-20160816;
        b=WBR3a8Jsr3z4LNp4VrdDhQYTnPRvviohV6ug4w03jh7CjQKQH3xEUU8xsS+AiMq/lh
         aFHhK13dCBhRvK90CztugClj3qN+8a2ZUge9Hjaghn+s7CO15XlVRLV6jX2IT1sGAsoC
         /zxyXElanvugPLZdtiupAgoA6qakmLU2g2d58C7dGlzTO09g5EpBeyDKBupVaSE0G0FO
         2Y0KFeymzvPcz2GYj8u62uGBkcmWXSDwPv/t184RuQxsx/tmYT61a8cJxRHXt+PVXT7N
         CXvxBxFHov/Qsj7jGUD8u8ccDJTFN2v9kA6fIbHN2ow9SYVoQlpy7uImpD03RQNLj8KJ
         p0YA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=UZpVXszQMiY6NrF+iJOGm79CpA8yUc50lOaFHTZGJic=;
        b=sEdhy4efd1ZHSqRex0M2MshWNOLigiCdwdR/k/4VO/JSJrhp1kziv0HjdPqBDcRUin
         39fNl0OMrahcQCIS2o8jUsEcahSly6cOGWh9gV1ZIhrPkkbgjtEbfo0GbJ6lOwqBQcra
         Ayhocl3O9ZPkrav371aApVxO6oAH1BCKt6Ppxjz39hzCHRIYnnSq3rGI4CuAdH2q9ySV
         aFMefVcZmvwWZI14thKB9Ig31rm22xCV91HwRgpLFlY4SNDpp7VoBQCBgBm7n7f31bsF
         ZCO/yNrB5nquf40W706LxXGXgqmgksj9b4RS6I3HDSNZEdUeRYG5acFYT7GyjUKXZ8fO
         0RmA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="dXk7Iuq/";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id g12si30935670pgd.567.2018.11.19.08.53.05;
        Mon, 19 Nov 2018 08:53:19 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390618AbeKTDQu (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:16:50 -0500
Received: from mail.kernel.org ([198.145.29.99]:54892 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2389075AbeKTDQu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:16:50 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2E84221104;
        Mon, 19 Nov 2018 16:52:35 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646355;
        bh=3NNOCJegBSSVcmOGpzDTmduE9rrTOmzWFSfJ+3DKSxw=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=dXk7Iuq/eLKyLT/zu1O1Im+CtALk8pJ1VNx+K83P53HjgsnhoSVIckOtfmh9Tj2oi
         Es405wK3G3cwICYv7ALJv076eBCFBY27fqrtU+Qka4JwBG/I8nVhGSnuJ1UsDcJwyL
         pB8TiOT7to+aU4MNauCoPHWUiDysFhLqYhTlQ0MU=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Phil Elwell <phil@raspberrypi.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.9 10/83] sc16is7xx: Fix for multi-channel stall
Date: Mon, 19 Nov 2018 17:28:36 +0100
Message-Id: <20181119162613.988059711@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162612.046511542@linuxfoundation.org>
References: <20181119162612.046511542@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBnTUmA6vJbQ2lZAA--.2649S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrW3Gr17Xr1ruFyDKrW7Arb_yoWrtFWxpa
	y3Ga4q9r4kJF48uwnrJa10kF90kwn5JrW5CryktwnYywn0qr1FqrW3Ka4FvrW5CrykJ340
	vF4Y9w18Ga9rZrJanT9S1TB71UUUUUJqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmqb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2kKe7AKxV
	WUXVWUAwAS0I0E0xvYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv
	7VC0I7IYx2IY67AKxVWUAVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r
	1j6r4UM4x0Y48IcxkI7VAKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_JwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI
	8IcVAFwI0_tr0E3s1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E
	87Iv67AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2
	Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_
	Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1V
	AY17CE14v26r126r1DMIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIY
	CTnIWIevJa73UjIFyTuYvjxUd3xhDUUUU

4.9-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Phil Elwell <phil@raspberrypi.org>

[ Upstream commit 8344498721059754e09d30fe255a12dab8fb03ef ]

The SC16IS752 is a dual-channel device. The two channels are largely
independent, but the IRQ signals are wired together as an open-drain,
active low signal which will be driven low while either of the
channels requires attention, which can be for significant periods of
time until operations complete and the interrupt can be acknowledged.
In that respect it is should be treated as a true level-sensitive IRQ.

The kernel, however, needs to be able to exit interrupt context in
order to use I2C or SPI to access the device registers (which may
involve sleeping).  Therefore the interrupt needs to be masked out or
paused in some way.

The usual way to manage sleeping from within an interrupt handler
is to use a threaded interrupt handler - a regular interrupt routine
does the minimum amount of work needed to triage the interrupt before
waking the interrupt service thread. If the threaded IRQ is marked as
IRQF_ONESHOT the kernel will automatically mask out the interrupt
until the thread runs to completion. The sc16is7xx driver used to
use a threaded IRQ, but a patch switched to using a kthread_worker
in order to set realtime priorities on the handler thread and for
other optimisations. The end result is non-threaded IRQ that
schedules some work then returns IRQ_HANDLED, making the kernel
think that all IRQ processing has completed.

The work-around to prevent a constant stream of interrupts is to
mark the interrupt as edge-sensitive rather than level-sensitive,
but interpreting an active-low source as a falling-edge source
requires care to prevent a total cessation of interrupts. Whereas
an edge-triggering source will generate a new edge for every interrupt
condition a level-triggering source will keep the signal at the
interrupting level until it no longer requires attention; in other
words, the host won't see another edge until all interrupt conditions
are cleared. It is therefore vital that the interrupt handler does not
exit with an outstanding interrupt condition, otherwise the kernel
will not receive another interrupt unless some other operation causes
the interrupt state on the device to be cleared.

The existing sc16is7xx driver has a very simple interrupt "thread"
(kthread_work job) that processes interrupts on each channel in turn
until there are no more. If both channels are active and the first
channel starts interrupting while the handler for the second channel
is running then it will not be detected and an IRQ stall ensues. This
could be handled easily if there was a shared IRQ status register, or
a convenient way to determine if the IRQ had been deasserted for any
length of time, but both appear to be lacking.

Avoid this problem (or at least make it much less likely to happen)
by reducing the granularity of per-channel interrupt processing
to one condition per iteration, only exiting the overall loop when
both channels are no longer interrupting.

Signed-off-by: Phil Elwell <phil@raspberrypi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/sc16is7xx.c |   19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -661,7 +661,7 @@ static void sc16is7xx_handle_tx(struct u
 		uart_write_wakeup(port);
 }
 
-static void sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
+static bool sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
 {
 	struct uart_port *port = &s->p[portno].port;
 
@@ -670,7 +670,7 @@ static void sc16is7xx_port_irq(struct sc
 
 		iir = sc16is7xx_port_read(port, SC16IS7XX_IIR_REG);
 		if (iir & SC16IS7XX_IIR_NO_INT_BIT)
-			break;
+			return false;
 
 		iir &= SC16IS7XX_IIR_ID_MASK;
 
@@ -692,16 +692,23 @@ static void sc16is7xx_port_irq(struct sc
 					    port->line, iir);
 			break;
 		}
-	} while (1);
+	} while (0);
+	return true;
 }
 
 static void sc16is7xx_ist(struct kthread_work *ws)
 {
 	struct sc16is7xx_port *s = to_sc16is7xx_port(ws, irq_work);
-	int i;
 
-	for (i = 0; i < s->devtype->nr_uart; ++i)
-		sc16is7xx_port_irq(s, i);
+	while (1) {
+		bool keep_polling = false;
+		int i;
+
+		for (i = 0; i < s->devtype->nr_uart; ++i)
+			keep_polling |= sc16is7xx_port_irq(s, i);
+		if (!keep_polling)
+			break;
+	}
 }
 
 static irqreturn_t sc16is7xx_irq(int irq, void *dev_id)

