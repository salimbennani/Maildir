Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:05:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 88672580332;
	Thu, 22 Nov 2018 02:19:14 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 02:19:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIzk5LhbyLHJkDECSu2wjezv/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocUPq1w7fHzT7eav1WwzD955LIchw4o/+DR6hwcdbUyUY1EQPOk1Kd?=
 =?us-ascii?q?qYP/PzyL2eQNsGib4vFkVeKujW4ntg5wojaoxscxjInGm5gaykzF9SV+xoY5P9?=
 =?us-ascii?q?q4SFR0YdO9FpZbqiKUN5NuT888X21lvDw2xqAItJKlZiQG1ZcqywLFZ/GGcYWE?=
 =?us-ascii?q?+hbuWeaLLTp8gH9pYq+zihis/US6zuDxWM+520tQoCVfiNnDrHUN2gTT6seZTv?=
 =?us-ascii?q?t9+V+s2SiA1w/N8OFIO0M0mrTBK54n3LEwkoAfsUPZHi/5gEn2jamWeVs4+uWw?=
 =?us-ascii?q?9ejrfrHrqoWBO4J6lA3yKLkil8+jDegiMwUDXXCX+eGm273i+U35Tq9Kjvozkq?=
 =?us-ascii?q?TBtJDaJMIbprO2AgNM0YYs9Qy/DzG439QchHUHK1xEeBSZgIjzIFzOPv/4Auml?=
 =?us-ascii?q?g1i2kzdk2erGPrv/DZXJNHTDl63hfbll505G1AUz1cxf545TCrwZJPLzW0zxu8?=
 =?us-ascii?q?LCAh42Lgy52OLnCNR71oMDVmODGK6ZMKXOsVCW4uIjOfWDZIgQuDzlMfgq++bu?=
 =?us-ascii?q?jWMlmV8aZaSp3YEYaHGkHvt8JEWVe3rsgsobHmcMsQozV+jqiFyEUT5OaHe+Ra?=
 =?us-ascii?q?M85jcnCI24CYfPXJyigLuE3C2jBJ1ZenhGCkyQEXfvb4iEWfAMZzyILs9ilTwE?=
 =?us-ascii?q?U76hS4g62BGqtQ/6zadnL+XO9i0Zs5LjyMZ65+nJmR4u8jx0CtyX03uRQGFsgm?=
 =?us-ascii?q?MIWzg20bhlrkxmyleD1qt4j+ZCFdNJ5fNESQM6NZ/az+xnBNH+QAPBftGVSFm4?=
 =?us-ascii?q?RtWqGy0+TtU0w9UWeUZyB82ijgzf3yqtG7IVlKaEBJou/qLY3nj+PcB9y3nd2a?=
 =?us-ascii?q?kljlkmRNZPNGK8iq5+8QjTG5DGk0GDm6m2cqQc2TbH9H2fwmqWoEFYTAlwXL3Y?=
 =?us-ascii?q?Un8FeEvZs8715kPYQL+oErQoLA1BxcmGKqtJb93piU5LRPPiONTYfmKwlH28BR?=
 =?us-ascii?q?eOxrOQcoXqf38R0znaCEgBiwoT52qJNRAiBie9pGLTFCFhGkjxY0zy6+V+qGm0?=
 =?us-ascii?q?Tkkvzw6UaU1szL61+h8ThfyBRPIfxLMEuCE9qzpqGFaxxc7ZC92FpwB5ZqVTfc?=
 =?us-ascii?q?s94Etb1WLerwF9Ip2gL6Vlhl4CcwR2v1ni1wltBoVHi8gqqHIqzAx9Ka+D1FNB?=
 =?us-ascii?q?djWY3Y3/O7HNK2ny+gyvZLDS2l3EzNmW/aIP4uwiq1r/pAGpClYi83J/3tZP13?=
 =?us-ascii?q?uT+JrLAxQSUJ7rSUk36gV1qKvcYik+4IPUy2ZhMa21sj/ExtIoC/Epyhemf9dD?=
 =?us-ascii?q?LqyEEBX+HNEdB8irMOYqgUSmbgoYPOBO8645J8Ond+ac1KG3JuphnTKmgn5B4I?=
 =?us-ascii?q?ByyU+M8yt8SujV35cK2f2Y3w2HVyvig1elqMz4hYdEZTQKFGql1SfkHJJRZrF1?=
 =?us-ascii?q?fYsTE2euItG4yc9kh5HwXH5U7lijCE0c2M+oYBadc0by3QlN2ksJu3ynni24wi?=
 =?us-ascii?q?dwkzEoqKqfwSPPz/7jdBoBJm5EWm1igU3wLoizitAQRFKoYBQxlBu5+Ub6wLBW?=
 =?us-ascii?q?paR+L2XJQUZEZTP2L3xkUqarsrqCYshP6I4nsClNUeS8Z0yaRaD5oxcAzyzjGG?=
 =?us-ascii?q?5ezighdz62opX5gwB6iGWFIXZxtnXZY8JwxRTY5NDGXv5exDkGRCp5iTnRGFe8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSXJowz7YoXx1aS6MORnc1JsBF/97cp6B45/npExhJEWxXgVmJGV8WAbnmf0?=
 =?us-ascii?q?NNVRwbj+Y2YVRT4X397V5xDo2E55IXKI3Y75VmidzdFnZ9m1eW4W3iM978ZXCK?=
 =?us-ascii?q?ab9rBEnC11okamogLVe/RygjAdyf424n4An+4JoBYtzjmaAr0KGElYPC/smA6S?=
 =?us-ascii?q?49GwsqpXf3qvfqaq1EVlg9+hFr6CrxpYWHb4fJciACBx4t9+MFLKzH389IXkdM?=
 =?us-ascii?q?PMYtIUsx2eiw3AgPRNKJItivoKgjJqOX76vX0g0eI6jAZh3ZenvIicMGVt/bm0?=
 =?us-ascii?q?AhpZNj3zesMS9SvhjadYnsaKwY+vGo9tFSkMXJvtVfioCi4dtez7NwaSFz0xsm?=
 =?us-ascii?q?yUFqDYHQ+b9UdqtXbPE42wOnGTJXkZy8hiRRaHKExehgAUQCs1npojGg+2w8zh?=
 =?us-ascii?q?dV9z5ioN6V7gthtM1uVoOgH9UmjFoQendCw0RIKDLBZM7QFC+kTVMdGY7u1pBC?=
 =?us-ascii?q?FV5ZmhrA2LKmyGaAVEF2AJWkqYB1/9Ormi/8XP8++dBuCmNfvBfa2OqfBCV/eP?=
 =?us-ascii?q?3Z+u0oxm/yuVNsWSJHZiCec32lFEXXB/FMTUgDEPSy0RlyLQYM+Xvha8+itrrs?=
 =?us-ascii?q?+h9PTnQh7g5YyKC7FKK9Vg5wi2gbufN+6XnCt5KShX1pIPxX/LybgTxl0Siztp?=
 =?us-ascii?q?dzmiD7sArzPNTLnLl69TDh4bbT5zNcRS46I92AlNJdDUitfv2rFkif41Dk9PVU?=
 =?us-ascii?q?b9lcGxecwKP2a9OUvdC0aWL7uGPyPEwsHtbaO4SL1dl+FUtxy2uTaGHE7vJDWD?=
 =?us-ascii?q?lz/1Vx+xNeFAlj2UPBtbuIulaBZiFXDjTM76ah28KNJ3kTw2wbguinzWL2ITLT?=
 =?us-ascii?q?h8fF1LrrCL6SNYg/N/G3FO73Z/LOmEnTqZ4PfcKpoMrfRrBSF0nfpA4Hsm07tV?=
 =?us-ascii?q?8D1ERPttlSrStNFupVSmkuiJyjV/URtOqixEhISEvUh5PaXZ959AWWvL/R4X7G?=
 =?us-ascii?q?WQDQgKqMVhCtH1p69Qzd3Px+rPL2Jt+tWczcoVAcecfM2ON2ogOBzmQmP8DBYM?=
 =?us-ascii?q?UjOqc2rYghoOvuuV8yi6tJU14rv2n5MOD59STkAwH/VSXkt/EdMBIL9zXzU5gb?=
 =?us-ascii?q?CckcgE7Ga/qx+XQ99V6MOUHsmOCOnifW7KxYJPYAEFlPahddwe?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAsgfZbh0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMEIwBgg0UlyYUgV8UGBMBiFAiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIkEwYBATcBBQkBAQoYCSUDDAVJE?=
 =?us-ascii?q?wWDHIICBAGpCoFsM4J2AQEFhyIIim2BHBeBf4QjgVSDEoNNgiaJASAEll8Jiim?=
 =?us-ascii?q?GewsYgVmFC4okmDCBRoINMxoIKAiDJ4IbDBeIXoU/PzKBAgMBASETjHUBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAsgfZbh0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMEIwBgg0UlyYUgV8UGBMBiFAiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYkAYJiAQIDAQIkEwYBATcBBQkBAQoYCSUDDAVJEwWDHIICBAGpCoF?=
 =?us-ascii?q?sM4J2AQEFhyIIim2BHBeBf4QjgVSDEoNNgiaJASAEll8JiimGewsYgVmFC4okm?=
 =?us-ascii?q?DCBRoINMxoIKAiDJ4IbDBeIXoU/PzKBAgMBASETjHUBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="41867484"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 02:19:12 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2394130AbeKVU5y (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 15:57:54 -0500
Received: from mail.kernel.org ([198.145.29.99]:52710 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2387447AbeKVU5x (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 15:57:53 -0500
Received: from localhost (unknown [95.99.132.93])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 0A56E20684;
        Thu, 22 Nov 2018 10:19:04 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542881946;
        bh=mF182HNntgqJiCdTomz8KE4JWX96LxCiMGktvNxe0lI=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=WloBIhHnEUq8t3JgrHU/RlSRu9Z8xgMNDK7hcwi77Ty3nPUyyfCbnT3JkHl+mtF/0
         HXJ+CgG1p9gFxgBBIh0WNKrCmmOX0JYD3NS2eOzHgwh69Js7Js8RjsS+hhioZGQz3o
         zaUU+sE5NoMf+fnNQUKT8LJzQdnj7kHGI5iy0eIY=
Date: Thu, 22 Nov 2018 11:19:02 +0100
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: Gao Xiang <gaoxiang25@huawei.com>
Cc: devel@driverdev.osuosl.org, linux-erofs@lists.ozlabs.org,
        Chao Yu <yuchao0@huawei.com>,
        LKML <linux-kernel@vger.kernel.org>, weidu.du@huawei.com,
        Miao Xie <miaoxie@huawei.com>
Subject: Re: [PATCH 02/10] staging: erofs: fix race when the managed cache is
 enabled
Message-ID: <20181122101902.GB3189@kroah.com>
References: <20181120143425.43637-1-gaoxiang25@huawei.com>
 <20181120143425.43637-3-gaoxiang25@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181120143425.43637-3-gaoxiang25@huawei.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 20, 2018 at 10:34:17PM +0800, Gao Xiang wrote:
> When the managed cache is enabled, the last reference count
> of a workgroup must be used for its workstation.
> 
> Otherwise, it could lead to incorrect (un)freezes in
> the reclaim path, and it would be harmful.
> 
> A typical race as follows:
> 
> Thread 1 (In the reclaim path)  Thread 2
> workgroup_freeze(grp, 1)                                refcnt = 1
> ...
> workgroup_unfreeze(grp, 1)                              refcnt = 1
>                                 workgroup_get(grp)      refcnt = 2 (x)
> workgroup_put(grp)                                      refcnt = 1 (x)
>                                 ...unexpected behaviors
> 
> * grp is detached but still used, which violates cache-managed
>   freeze constraint.
> 
> Reviewed-by: Chao Yu <yuchao0@huawei.com>
> Signed-off-by: Gao Xiang <gaoxiang25@huawei.com>
> ---
>  drivers/staging/erofs/internal.h |   1 +
>  drivers/staging/erofs/utils.c    | 131 +++++++++++++++++++++++++++------------
>  2 files changed, 93 insertions(+), 39 deletions(-)
> 
> diff --git a/drivers/staging/erofs/internal.h b/drivers/staging/erofs/internal.h
> index 57575c7f5635..89dbd0888e53 100644
> --- a/drivers/staging/erofs/internal.h
> +++ b/drivers/staging/erofs/internal.h
> @@ -250,6 +250,7 @@ static inline bool erofs_workgroup_get(struct erofs_workgroup *grp, int *ocnt)
>  }
>  
>  #define __erofs_workgroup_get(grp)	atomic_inc(&(grp)->refcount)
> +#define __erofs_workgroup_put(grp)	atomic_dec(&(grp)->refcount)
>  
>  extern int erofs_workgroup_put(struct erofs_workgroup *grp);
>  
> diff --git a/drivers/staging/erofs/utils.c b/drivers/staging/erofs/utils.c
> index ea8a962e5c95..90de8d9195b7 100644
> --- a/drivers/staging/erofs/utils.c
> +++ b/drivers/staging/erofs/utils.c
> @@ -83,12 +83,21 @@ int erofs_register_workgroup(struct super_block *sb,
>  
>  	grp = xa_tag_pointer(grp, tag);
>  
> -	err = radix_tree_insert(&sbi->workstn_tree,
> -		grp->index, grp);
> +	/*
> +	 * Bump up reference count before making this workgroup
> +	 * visible to other users in order to avoid potential UAF
> +	 * without serialized by erofs_workstn_lock.
> +	 */
> +	__erofs_workgroup_get(grp);
>  
> -	if (!err) {
> -		__erofs_workgroup_get(grp);
> -	}
> +	err = radix_tree_insert(&sbi->workstn_tree,
> +				grp->index, grp);
> +	if (unlikely(err))
> +		/*
> +		 * it's safe to decrease since the workgroup isn't visible
> +		 * and refcount >= 2 (cannot be freezed).
> +		 */
> +		__erofs_workgroup_put(grp);
>  
>  	erofs_workstn_unlock(sbi);
>  	radix_tree_preload_end();
> @@ -97,19 +106,91 @@ int erofs_register_workgroup(struct super_block *sb,
>  
>  extern void erofs_workgroup_free_rcu(struct erofs_workgroup *grp);
>  
> +static void  __erofs_workgroup_free(struct erofs_workgroup *grp)
> +{
> +	atomic_long_dec(&erofs_global_shrink_cnt);
> +	erofs_workgroup_free_rcu(grp);
> +}
> +
>  int erofs_workgroup_put(struct erofs_workgroup *grp)
>  {
>  	int count = atomic_dec_return(&grp->refcount);
>  
>  	if (count == 1)
>  		atomic_long_inc(&erofs_global_shrink_cnt);
> -	else if (!count) {
> -		atomic_long_dec(&erofs_global_shrink_cnt);
> -		erofs_workgroup_free_rcu(grp);
> -	}
> +	else if (!count)
> +		__erofs_workgroup_free(grp);
>  	return count;
>  }
>  
> +#ifdef EROFS_FS_HAS_MANAGED_CACHE
> +/* for cache-managed case, customized reclaim paths exist */
> +static void erofs_workgroup_unfreeze_final(struct erofs_workgroup *grp)
> +{
> +	erofs_workgroup_unfreeze(grp, 0);
> +	__erofs_workgroup_free(grp);
> +}
> +
> +bool erofs_try_to_release_workgroup(struct erofs_sb_info *sbi,
> +				    struct erofs_workgroup *grp,
> +				    bool cleanup)
> +{
> +	/*
> +	 * for managed cache enabled, the refcount of workgroups
> +	 * themselves could be < 0 (freezed). So there is no guarantee
> +	 * that all refcount > 0 if managed cache is enabled.
> +	 */
> +	if (!erofs_workgroup_try_to_freeze(grp, 1))
> +		return false;
> +
> +	/*
> +	 * note that all cached pages should be unlinked
> +	 * before delete it from the radix tree.
> +	 * Otherwise some cached pages of an orphan old workgroup
> +	 * could be still linked after the new one is available.
> +	 */
> +	if (erofs_try_to_free_all_cached_pages(sbi, grp)) {
> +		erofs_workgroup_unfreeze(grp, 1);
> +		return false;
> +	}
> +
> +	/* it is impossible to fail after we freeze the workgroup */
> +	BUG_ON(xa_untag_pointer(radix_tree_delete(&sbi->workstn_tree,
> +						  grp->index)) != grp);
> +

It is not a good idea to crash the system.  Please try to recover from
this, a BUG_ON() implies that the developer has no idea how to handle
this type of error so either it can never happen (which means that the
BUG_ON can be removed), or you need to fix the logic to handle this type
of issue when it does happen.

I'm not going to take this as-is, sorry.

greg k-h
