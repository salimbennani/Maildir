Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:27 -0000
Received: from icoremail.net (unknown [209.85.214.178])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX9O_6PJbone6AQ--.54990S3;
	Tue, 20 Nov 2018 00:45:52 +0800 (CST)
Received: from mail-pl1-f178.google.com (unknown [209.85.214.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnj0uM5_JbaWFZAA--.5451S3;
	Tue, 20 Nov 2018 00:40:45 +0800 (CST)
Received: by mail-pl1-f178.google.com with SMTP id b22-v6so9398484pls.7
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:40:45 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=Xsx0p/PAcJS7ol9O3uM57c5JcyKB0BZnblsQN5p7NrI=;
        b=O1z2UcqxDO87PEIn7s8rn8eCPNKPsUCq1lBJv2jzxE4wPsFnxOzorVqpzUwpeQqzgD
         Q/2iPZTzf3bmX3Zd7oB6X2RY9unzQbaTVgVaqpWDBDuNpimkHe8oYasmk6UsbeCFnx1t
         Ux+ubbre/kneNgmEp/w0spFrNv9O+4O5tXfXcZVaKN6GGNuuPlbOJNzLuurm5cyTPJ/q
         W05Z10tLjR6pS+If//yrcPJ/Bizv0RIPLn9CiYneS2i99aLwq2AAg0P2LjIO8q5USM3d
         GTKD2hvtj6ko9IXF9yPnosUQkSzxuFE5l2QBSDV3wEaa+zyelKncAvzyS0DHPB3t6B1O
         dvQA==
X-Gm-Message-State: AGRZ1gIo6BhDvom3BzzIvRKwpwft2PGK6/RDqsI0AR4APpOztiVPwWHA
	8JHrWH5U3NxqNcJU37B3tVQc0/Nhk+PujK1K4IfQdvt/e10J798=
X-Received: by 2002:a17:902:bd46:: with SMTP id b6mr22949790plx.231.1542645644721;
        Mon, 19 Nov 2018 08:40:44 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2888900pju;
        Mon, 19 Nov 2018 08:40:43 -0800 (PST)
X-Google-Smtp-Source: AJdET5eIxnpqy8q5Ie/l6LhXTLH31/azPkbwtUDlSsPpQXfdORyyMYzEEiQ9l8Zs9IHTjUAYY4RA
X-Received: by 2002:a17:902:780a:: with SMTP id p10mr23734008pll.54.1542645643672;
        Mon, 19 Nov 2018 08:40:43 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542645643; cv=none;
        d=google.com; s=arc-20160816;
        b=EUSLAwzhpV6mT3jAYM1LQZtyANHFVw7SoEgG/Zixgi8fIvfnIi9PU1bPLcW9CsPzDX
         OOSPx/qk3dYGOnyWNAJAvmQHKJJv/60hC9m3lrUY9wEsvVL+R5jOwlw6kK37kB1kjQL/
         frRwWq/MUFyO62GXSJzyozEre1aqCwufsjmUAeyz80iTsYGA7ML9EHaJyOAg8qNYg3aA
         KNR3m5eyYVIa7+p6BMucMOs6zpTj6cRfsA97Vfoq2Ty2Ca9Jg9kQDTsTbUTDjQgEbWCg
         luaQxkgf1lxyVQNZFCpmpxRb068Yplf6O0u9oGyH5kGV20yfvrEgil3cr+Oa0/IvEsfy
         eoHQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=Xsx0p/PAcJS7ol9O3uM57c5JcyKB0BZnblsQN5p7NrI=;
        b=fmrPrGzPfpdJTlqphRRAKwMlY0NknjNk8hyxKTSbvvpFNE0aCvnYU7IFIOWzDx2rXh
         NzuYjdLmEbINeSUKdZkZsKGPlV54LFdz8kzvxd5X6gGtVQAlsLbfTUXdrSH84tGPe+rV
         Busq6HNvqZ/Us63Tjx3kvux+p/9WPqtoHVE+QI591W3YfChXUSsMiuenAFfPIjILSHbk
         zb03x8mhTlqtH9roJKyeldSbkjKZOhX1HLl/d1rI4Oesu10bsEmZqqKbXrxXzqqZCpwc
         2zhEdC0TfrjWkRprt9amjMvc1ji6qwjQNJ3Wen7o0w68ijrjRFIp2KiLtm10X6n5ebeL
         4sAA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="NbZe21/m";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id c37si16344338pgm.156.2018.11.19.08.40.28;
        Mon, 19 Nov 2018 08:40:43 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732969AbeKTDE1 (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:04:27 -0500
Received: from mail.kernel.org ([198.145.29.99]:37454 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732606AbeKTDE1 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:04:27 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id DC7DF208E3;
        Mon, 19 Nov 2018 16:40:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542645617;
        bh=r2mu3UMSBlJoF/dN6kdIHnNDX5F+bs6xTrL3ZJSdoQY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=NbZe21/mnYxnSPwBtcTFOQHDMUkjrsTj07lzyLiECQepEm9xVkjZ/mG4XqMQDEqpO
         jgAT7J9dKbpa/SIm6mtAo98m2Vl0+GrgP7aqQch8U1ixXCewiNaRhWULHdPjsTBg8K
         LSAfai4ngnalsd1dQY/QeP1FBpA8kg68KoE6nzH8=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Phil Elwell <phil@raspberrypi.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.18 024/171] sc16is7xx: Fix for multi-channel stall
Date: Mon, 19 Nov 2018 17:27:00 +0100
Message-Id: <20181119162623.703478896@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162618.909354448@linuxfoundation.org>
References: <20181119162618.909354448@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnj0uM5_JbaWFZAA--.5451S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrW3Gr17Xr1ruFyDKrW7Arb_yoWrtFW3pF
	W3Ga4q9r4kJF4UuwnrJa10kFyYkwn5JrW5CryktwnYyw1Yqr1FqrW3Ka4FvrW5CrykJ348
	Zr4Y9w18Ga9rZrJanT9S1TB71UUUUU7qnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPCb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26r4UJVWxJr1l84ACjcxK6I8E87Iv6xkF7I0E14v26r4UJVWxJr1le2I262
	IYc4CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAF
	wI0_Jw0_WrylYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0x
	vY0x0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCj
	j44lc2xSY4AK6IIF6r1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26w1j6s
	0DMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwCYIxAIcVC2z280aVAFwI0_Gr1j
	6F4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw2
	8IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E
	5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAV
	WUtwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI
	43ZEXa7IUoUCztUUUUU==

4.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Phil Elwell <phil@raspberrypi.org>

[ Upstream commit 8344498721059754e09d30fe255a12dab8fb03ef ]

The SC16IS752 is a dual-channel device. The two channels are largely
independent, but the IRQ signals are wired together as an open-drain,
active low signal which will be driven low while either of the
channels requires attention, which can be for significant periods of
time until operations complete and the interrupt can be acknowledged.
In that respect it is should be treated as a true level-sensitive IRQ.

The kernel, however, needs to be able to exit interrupt context in
order to use I2C or SPI to access the device registers (which may
involve sleeping).  Therefore the interrupt needs to be masked out or
paused in some way.

The usual way to manage sleeping from within an interrupt handler
is to use a threaded interrupt handler - a regular interrupt routine
does the minimum amount of work needed to triage the interrupt before
waking the interrupt service thread. If the threaded IRQ is marked as
IRQF_ONESHOT the kernel will automatically mask out the interrupt
until the thread runs to completion. The sc16is7xx driver used to
use a threaded IRQ, but a patch switched to using a kthread_worker
in order to set realtime priorities on the handler thread and for
other optimisations. The end result is non-threaded IRQ that
schedules some work then returns IRQ_HANDLED, making the kernel
think that all IRQ processing has completed.

The work-around to prevent a constant stream of interrupts is to
mark the interrupt as edge-sensitive rather than level-sensitive,
but interpreting an active-low source as a falling-edge source
requires care to prevent a total cessation of interrupts. Whereas
an edge-triggering source will generate a new edge for every interrupt
condition a level-triggering source will keep the signal at the
interrupting level until it no longer requires attention; in other
words, the host won't see another edge until all interrupt conditions
are cleared. It is therefore vital that the interrupt handler does not
exit with an outstanding interrupt condition, otherwise the kernel
will not receive another interrupt unless some other operation causes
the interrupt state on the device to be cleared.

The existing sc16is7xx driver has a very simple interrupt "thread"
(kthread_work job) that processes interrupts on each channel in turn
until there are no more. If both channels are active and the first
channel starts interrupting while the handler for the second channel
is running then it will not be detected and an IRQ stall ensues. This
could be handled easily if there was a shared IRQ status register, or
a convenient way to determine if the IRQ had been deasserted for any
length of time, but both appear to be lacking.

Avoid this problem (or at least make it much less likely to happen)
by reducing the granularity of per-channel interrupt processing
to one condition per iteration, only exiting the overall loop when
both channels are no longer interrupting.

Signed-off-by: Phil Elwell <phil@raspberrypi.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/tty/serial/sc16is7xx.c |   19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

--- a/drivers/tty/serial/sc16is7xx.c
+++ b/drivers/tty/serial/sc16is7xx.c
@@ -657,7 +657,7 @@ static void sc16is7xx_handle_tx(struct u
 		uart_write_wakeup(port);
 }
 
-static void sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
+static bool sc16is7xx_port_irq(struct sc16is7xx_port *s, int portno)
 {
 	struct uart_port *port = &s->p[portno].port;
 
@@ -666,7 +666,7 @@ static void sc16is7xx_port_irq(struct sc
 
 		iir = sc16is7xx_port_read(port, SC16IS7XX_IIR_REG);
 		if (iir & SC16IS7XX_IIR_NO_INT_BIT)
-			break;
+			return false;
 
 		iir &= SC16IS7XX_IIR_ID_MASK;
 
@@ -688,16 +688,23 @@ static void sc16is7xx_port_irq(struct sc
 					    port->line, iir);
 			break;
 		}
-	} while (1);
+	} while (0);
+	return true;
 }
 
 static void sc16is7xx_ist(struct kthread_work *ws)
 {
 	struct sc16is7xx_port *s = to_sc16is7xx_port(ws, irq_work);
-	int i;
 
-	for (i = 0; i < s->devtype->nr_uart; ++i)
-		sc16is7xx_port_irq(s, i);
+	while (1) {
+		bool keep_polling = false;
+		int i;
+
+		for (i = 0; i < s->devtype->nr_uart; ++i)
+			keep_polling |= sc16is7xx_port_irq(s, i);
+		if (!keep_polling)
+			break;
+	}
 }
 
 static irqreturn_t sc16is7xx_irq(int irq, void *dev_id)

