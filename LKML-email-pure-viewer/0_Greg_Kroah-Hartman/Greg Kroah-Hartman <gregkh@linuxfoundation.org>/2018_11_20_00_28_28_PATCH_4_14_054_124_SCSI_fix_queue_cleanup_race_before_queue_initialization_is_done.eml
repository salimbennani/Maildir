Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:38 -0000
Received: from icoremail.net (unknown [209.85.215.170])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv+6g6fJbmH26AQ--.55525S3;
	Tue, 20 Nov 2018 00:49:37 +0800 (CST)
Received: from mail-pg1-f170.google.com (unknown [209.85.215.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3nUmf6fJbGmdZAA--.5723S3;
	Tue, 20 Nov 2018 00:49:35 +0800 (CST)
Received: by mail-pg1-f170.google.com with SMTP id 17so13817861pgg.1
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:49:35 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=fvVSg7sQYevmO/VQJWcBgIC+RrU2VKKa1KwSe9b1Pj4=;
        b=fwgEb1o9/R38PRGYMiGjjjSkj4LjRyR1Pt9Pd97cCapDavRL69Bnn3iuwIWt7xjbPv
         E5P8UJ46JuhG3dzwRFROBFlqNFFQVCQG4A/mgt7a60FjHHus52aG4jUI+qhTknTZT9AA
         Nu8NIahpr+NYYYf12o9yOHstzT6VE0gIZWwMqmHJmD4jIV7K+MxgsrB4A4g8nAoTudvT
         XkLDkp0Blhj+ES8qA0UgnQfYhO5zWPjzsofeN7UTDsQpUD82kUQQUagrs5XFuSjHEI6K
         SsQtoq9//AKjWCTeGU7HN3Qys04rY4ED/fngUO7r/QCDV5Uq+T0s26nb5BdUdGrXg1gb
         QjNQ==
X-Gm-Message-State: AGRZ1gJZS6ySJHbZncjNgv8WhG8AFPSlZRWNB2C2xr6L4ULIHV6XXXeI
	kLoYcrOxi3cZ+F8qYxbdinne3b5fUfzIeO2AfGfaUC9f6iEqeuM=
X-Received: by 2002:a62:3687:: with SMTP id d129-v6mr23883008pfa.56.1542646175524;
        Mon, 19 Nov 2018 08:49:35 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2899078pju;
        Mon, 19 Nov 2018 08:49:34 -0800 (PST)
X-Google-Smtp-Source: AJdET5ebr8cFM5yDuvAhedHUQz/fhGn200gPcJvRCC9ao9MYNp8shMw5U7WNyEfViCBr+6Lji0/e
X-Received: by 2002:a62:4b4b:: with SMTP id y72-v6mr23852690pfa.67.1542646174740;
        Mon, 19 Nov 2018 08:49:34 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646174; cv=none;
        d=google.com; s=arc-20160816;
        b=dlnXzjs7Y8jXE851tnOQIUfLtRLx6/FRINpmRUYAxbI8FvZGC6Sm3Ydr+SzO66jPBY
         5V1VdSQ/M5JxlujlEVGMOLKnPjJ7LKA9Uz6U+xlNr0W+R0E6oROVmhxT/4Mu8xqo8vVf
         RYGnFy1i6YZlXdrCrt4M+vXIISO/jlmCacgAFRRnvXlgSnkVgLAiepzZOqh5IqMuC/yO
         a1/H71tUY+FSxuHcSOir7H6+ueGK8A2+1mu/5jFqI+GELtfEjpL6FVl8KPNIaO1zR+GG
         NgwVmTEEGcGXXCEHwk2dObJ09XMXvK1AWVcQ3TU/PYpk3BZQxMleR/pmNTJu6fTNEy0B
         CCXw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=fvVSg7sQYevmO/VQJWcBgIC+RrU2VKKa1KwSe9b1Pj4=;
        b=FRxgufuFtDjMCqkcYg6U9D+6iEmFb385SctY/em5KpsvyERqlVigzePDdx4A3xz7cl
         TQ/vt6bj5tx2kaJbj/cfqZu6y9S7+LLvC2zPtFOjSOiIHG7jjByompvFTF+8pM5tf0eI
         SJtYwOyY3Yo8W+ow3H8y9Y9ElNZ9hPsIJ1hWN1xNAZR7ywQA3FOFS6DpQdvGB0YPTmEy
         irHhJ2Jqe5CYqmv0Pf2tLBK/+irnFdWLkG0L4mOopeXDXjWU6fY8YwvntWgavU1VvSyX
         edcB96UXfuMD93RrmcYm3WxCHgnltac2ZjKMBQIyH/o8Pg+DSx74Qdz6u28mmx0jzBAc
         lKyQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=s31oYwVN;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d12si30006929pln.340.2018.11.19.08.49.20;
        Mon, 19 Nov 2018 08:49:34 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389649AbeKTDNU (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:13:20 -0500
Received: from mail.kernel.org ([198.145.29.99]:50024 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2389110AbeKTDNU (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:13:20 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 9FC51206BA;
        Mon, 19 Nov 2018 16:49:06 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646147;
        bh=piQbWpmKejRE+ACLR+9DwHSjirW4NhNtg7n9xp7WwGo=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=s31oYwVN3dWj9CG2D7hPS4uINkDe13dyyypbkHFhe4IyyHqu+2wRHEHaGQbl7OVcK
         n6V7Cr8/AUU1s0KUKZFUCovDAF7Qu/6AAsq9YQ/NqkWKBBMFbA348vaH4nR5HV5alv
         IM/ewwUvleBbYW2D/wab1G3yZa3dQIdHEvn4i+Yg=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Andrew Jones <drjones@redhat.com>,
        Bart Van Assche <bart.vanassche@wdc.com>,
        linux-scsi@vger.kernel.org,
        "Martin K. Petersen" <martin.petersen@oracle.com>,
        Christoph Hellwig <hch@lst.de>,
        "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>,
        "jianchao.wang" <jianchao.w.wang@oracle.com>,
        Ming Lei <ming.lei@redhat.com>, Jens Axboe <axboe@kernel.dk>
Subject: [PATCH 4.14 054/124] SCSI: fix queue cleanup race before queue initialization is done
Date: Mon, 19 Nov 2018 17:28:28 +0100
Message-Id: <20181119162623.999392166@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162612.951907286@linuxfoundation.org>
References: <20181119162612.951907286@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3nUmf6fJbGmdZAA--.5723S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxurWxZr18Cw17ZryDur1ftFb_yoW5ZrW7pw
	s3Ja13Cw4kJr48G3yUXw4xCrySqws5GryfXFWfGwn3XF98Jryvvr1Iqw4UXFWfAr92kF4S
	qrWDXrWvgr18ZFJanT9S1TB71UUUUUDqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r126r1DMcIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWx
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20x
	vEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02
	F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GF
	ylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZF
	pf9x07bpyIbUUUUU=

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Ming Lei <ming.lei@redhat.com>

commit 8dc765d438f1e42b3e8227b3b09fad7d73f4ec9a upstream.

c2856ae2f315d ("blk-mq: quiesce queue before freeing queue") has
already fixed this race, however the implied synchronize_rcu()
in blk_mq_quiesce_queue() can slow down LUN probe a lot, so caused
performance regression.

Then 1311326cf4755c7 ("blk-mq: avoid to synchronize rcu inside blk_cleanup_queue()")
tried to quiesce queue for avoiding unnecessary synchronize_rcu()
only when queue initialization is done, because it is usual to see
lots of inexistent LUNs which need to be probed.

However, turns out it isn't safe to quiesce queue only when queue
initialization is done. Because when one SCSI command is completed,
the user of sending command can be waken up immediately, then the
scsi device may be removed, meantime the run queue in scsi_end_request()
is still in-progress, so kernel panic can be caused.

In Red Hat QE lab, there are several reports about this kind of kernel
panic triggered during kernel booting.

This patch tries to address the issue by grabing one queue usage
counter during freeing one request and the following run queue.

Fixes: 1311326cf4755c7 ("blk-mq: avoid to synchronize rcu inside blk_cleanup_queue()")
Cc: Andrew Jones <drjones@redhat.com>
Cc: Bart Van Assche <bart.vanassche@wdc.com>
Cc: linux-scsi@vger.kernel.org
Cc: Martin K. Petersen <martin.petersen@oracle.com>
Cc: Christoph Hellwig <hch@lst.de>
Cc: James E.J. Bottomley <jejb@linux.vnet.ibm.com>
Cc: stable <stable@vger.kernel.org>
Cc: jianchao.wang <jianchao.w.wang@oracle.com>
Signed-off-by: Ming Lei <ming.lei@redhat.com>
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 block/blk-core.c        |    5 ++---
 drivers/scsi/scsi_lib.c |    8 ++++++++
 2 files changed, 10 insertions(+), 3 deletions(-)

--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -671,9 +671,8 @@ void blk_cleanup_queue(struct request_qu
 	 * dispatch may still be in-progress since we dispatch requests
 	 * from more than one contexts.
 	 *
-	 * No need to quiesce queue if it isn't initialized yet since
-	 * blk_freeze_queue() should be enough for cases of passthrough
-	 * request.
+	 * We rely on driver to deal with the race in case that queue
+	 * initialization isn't done.
 	 */
 	if (q->mq_ops && blk_queue_init_done(q))
 		blk_mq_quiesce_queue(q);
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -683,6 +683,12 @@ static bool scsi_end_request(struct requ
 		 */
 		scsi_mq_uninit_cmd(cmd);
 
+		/*
+		 * queue is still alive, so grab the ref for preventing it
+		 * from being cleaned up during running queue.
+		 */
+		percpu_ref_get(&q->q_usage_counter);
+
 		__blk_mq_end_request(req, error);
 
 		if (scsi_target(sdev)->single_lun ||
@@ -690,6 +696,8 @@ static bool scsi_end_request(struct requ
 			kblockd_schedule_work(&sdev->requeue_work);
 		else
 			blk_mq_run_hw_queues(q, true);
+
+		percpu_ref_put(&q->q_usage_counter);
 	} else {
 		unsigned long flags;
 

