Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:33:11 -0000
Received: from icoremail.net (unknown [209.85.215.175])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH_oc7PJbnIy6AQ--.55485S3;
	Tue, 20 Nov 2018 01:00:14 +0800 (CST)
Received: from mail-pg1-f175.google.com (unknown [209.85.215.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwA3HkoX7PJb625ZAA--.2455S3;
	Tue, 20 Nov 2018 01:00:07 +0800 (CST)
Received: by mail-pg1-f175.google.com with SMTP id 70so14091294pgh.8
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 09:00:07 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=fMdTpl5Y1lH2cBWr3M+sx48H1sbyo3L/wSK8kvZBEG0=;
        b=Eob9hJQqw39Jom4pCEftybf8RPp7ZSpXkNJH4ScqiVKzlgm3cJJdvSCuaedJTXYGO0
         3HtQeTLoTI6ubOLOgUHlp8vULYKcQfmJLsBBLmjPt6rgKLS8rnYSI4VkaFwsB6hRmXoY
         CFfMORp353z2Z6TSTbW01RP/E3y9VSeqekjdy1ltg86uIJ/zlpJBdYgKa+UgFsIUNMrt
         meOwT0OlgTUyt0E0wY2Ij6Ivrtbd8UPW54M/aRN/qx60RAMwavbzfMzQivv/J411ea0k
         V6gI++Q3wwB6S/xSoVHOruNtfjhKjLDal7FXJrKWLrtKHXXlntO64zqp9IeVslPi4XaS
         mPDg==
X-Gm-Message-State: AGRZ1gL4R1rvFbr3Fm9cds5vUYByxLl2TiMDW4B0FGb3QZuT6Fhwolad
	rXtuK3HR7tmV69fDJUddmugHYqLCwKoZX6NM+MnMBiLJhmzs9js=
X-Received: by 2002:a63:3c44:: with SMTP id i4mr20498940pgn.286.1542646806849;
        Mon, 19 Nov 2018 09:00:06 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2910994pju;
        Mon, 19 Nov 2018 09:00:06 -0800 (PST)
X-Google-Smtp-Source: AJdET5dx0SdE2wlgbKPOGsd98lJb9eu41BPAVhP1NOxrS547J3+d8qriQh9L2idCy7sJwUlmcYQX
X-Received: by 2002:a63:b105:: with SMTP id r5mr20995304pgf.442.1542646805966;
        Mon, 19 Nov 2018 09:00:05 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646805; cv=none;
        d=google.com; s=arc-20160816;
        b=RilYX37WHtVJAuWHhNw9UXxWLJifWr3t3B8DLwUpjDAj8OreONjYpL2ualAmqvmmpK
         jru1+pfGK/Py8DD7y4RZASOleksdXLb0Lq2AcHXmMtr21ryeKG8XLIcmyuE6cQSrSTMa
         7d/036huoLiBrxAtGFRuUhQ3Rmn2I5zzRoFWSgARx9WC5zYrG2sQgitPNa97Mhi7GjY2
         wISnieBIDOZuMZeImuuFOLLQUJguN9mZmOkQC9DvJtYM+bjzKh5vkA6gxPgZApFm9Y9A
         mnq0JKMhGkm0URcO1rEXCRn4gj5sNn1s/RZT5E4W1Z2Dm66HeoivqtMCZbPJmqxZZw/x
         7IoA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=fMdTpl5Y1lH2cBWr3M+sx48H1sbyo3L/wSK8kvZBEG0=;
        b=sH4Sn1s1ivb2V+jxaW8+iWThEv6pZqNTleS/6SoBcrxXM58Z9iO2mqHUu7PONEyc5T
         ++yc6eBZyU/9Mn8cNuiaevtFkb5iP07uiAu3j8tDqm9JHnGCIWJAKN691QYyLzdkes7U
         B1piuxePAuQPucnYYQcEaO5fITCUoZ3rKNYDhrkEAN+QOPqaHH4cIxs21HPfI5JVQZwC
         g/CVvAmw8CWzwv1Gxul5SyxvPZE7siLrg4mVbGE5ReLxLi+coZtzJLd94sRIYDvvAnHJ
         BOkW8FQ1EUIwpvuVL7bA6e1KvWZXX170/EPW4NtkxQ3MCPbegd+oqvXeEhJGoDCsLwfy
         TRVw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="bcJ/dwN8";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z8si38035019pgf.577.2018.11.19.08.59.51;
        Mon, 19 Nov 2018 09:00:05 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405125AbeKTDXv (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:23:51 -0500
Received: from mail.kernel.org ([198.145.29.99]:35976 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2404671AbeKTDXu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:23:50 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 74223214ED;
        Mon, 19 Nov 2018 16:59:34 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646775;
        bh=G8sHXX+GFIXH7nexmo8j49QbrPyb+HT7cOeJE2TAZBI=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=bcJ/dwN8iSa2Jn7ov61zwoNksRO3HUqOqiXU59+XQWKIXg8hDqkGJ4xmGAsqUy8J8
         4uH4vO7rMld6vj2HvfwQgtDCeRj3BqTrBWWYyu3oHXB9/wYsuvIQuH+O83M2tJaMHt
         sfrfQMWXRWXmuR1TYY/Y6sbfR53oVgS8xCfra9XI=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Xu Wen <wen.xu@gatech.edu>,
        Qu Wenruo <wqu@suse.com>, David Sterba <dsterba@suse.com>
Subject: [PATCH 4.4 085/160] btrfs: locking: Add extra check in btrfs_init_new_buffer() to avoid deadlock
Date: Mon, 19 Nov 2018 17:28:44 +0100
Message-Id: <20181119162639.499685427@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162630.031306128@linuxfoundation.org>
References: <20181119162630.031306128@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwA3HkoX7PJb625ZAA--.2455S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJw15Xw48JFyDKw1rWw4DArb_yoWrtFyxpa
	1Skry3GryUXr4DXF1xGw4Iv34ru3ykJw4UWrZ5tr4fXayUZwn3XF9rCw1IgryUKrWfJr4D
	Za1j934UtwnrZrDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPvb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r126r1DMcIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VW8MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26F4UJVW0
	owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64
	kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG
	67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMI
	IYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuY
	vjxUDNVyUUUUU

4.4-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit b72c3aba09a53fc7c1824250d71180ca154517a7 upstream.

[BUG]
For certain crafted image, whose csum root leaf has missing backref, if
we try to trigger write with data csum, it could cause deadlock with the
following kernel WARN_ON():

  WARNING: CPU: 1 PID: 41 at fs/btrfs/locking.c:230 btrfs_tree_lock+0x3e2/0x400
  CPU: 1 PID: 41 Comm: kworker/u4:1 Not tainted 4.18.0-rc1+ #8
  Workqueue: btrfs-endio-write btrfs_endio_write_helper
  RIP: 0010:btrfs_tree_lock+0x3e2/0x400
  Call Trace:
   btrfs_alloc_tree_block+0x39f/0x770
   __btrfs_cow_block+0x285/0x9e0
   btrfs_cow_block+0x191/0x2e0
   btrfs_search_slot+0x492/0x1160
   btrfs_lookup_csum+0xec/0x280
   btrfs_csum_file_blocks+0x2be/0xa60
   add_pending_csums+0xaf/0xf0
   btrfs_finish_ordered_io+0x74b/0xc90
   finish_ordered_fn+0x15/0x20
   normal_work_helper+0xf6/0x500
   btrfs_endio_write_helper+0x12/0x20
   process_one_work+0x302/0x770
   worker_thread+0x81/0x6d0
   kthread+0x180/0x1d0
   ret_from_fork+0x35/0x40

[CAUSE]
That crafted image has missing backref for csum tree root leaf.  And
when we try to allocate new tree block, since there is no
EXTENT/METADATA_ITEM for csum tree root, btrfs consider it's free slot
and use it.

The extent tree of the image looks like:

  Normal image                      |       This fuzzed image
  ----------------------------------+--------------------------------
  BG 29360128                       | BG 29360128
   One empty slot                   |  One empty slot
  29364224: backref to UUID tree    | 29364224: backref to UUID tree
   Two empty slots                  |  Two empty slots
  29376512: backref to CSUM tree    |  One empty slot (bad type) <<<
  29380608: backref to D_RELOC tree | 29380608: backref to D_RELOC tree
  ...                               | ...

Since bytenr 29376512 has no METADATA/EXTENT_ITEM, when btrfs try to
alloc tree block, it's an valid slot for btrfs.

And for finish_ordered_write, when we need to insert csum, we try to CoW
csum tree root.

By accident, empty slots at bytenr BG_OFFSET, BG_OFFSET + 8K,
BG_OFFSET + 12K is already used by tree block COW for other trees, the
next empty slot is BG_OFFSET + 16K, which should be the backref for CSUM
tree.

But due to the bad type, btrfs can recognize it and still consider it as
an empty slot, and will try to use it for csum tree CoW.

Then in the following call trace, we will try to lock the new tree
block, which turns out to be the old csum tree root which is already
locked:

btrfs_search_slot() called on csum tree root, which is at 29376512
|- btrfs_cow_block()
   |- btrfs_set_lock_block()
   |  |- Now locks tree block 29376512 (old csum tree root)
   |- __btrfs_cow_block()
      |- btrfs_alloc_tree_block()
         |- btrfs_reserve_extent()
            | Now it returns tree block 29376512, which extent tree
            | shows its empty slot, but it's already hold by csum tree
            |- btrfs_init_new_buffer()
               |- btrfs_tree_lock()
                  | Triggers WARN_ON(eb->lock_owner == current->pid)
                  |- wait_event()
                     Wait lock owner to release the lock, but it's
                     locked by ourself, so it will deadlock

[FIX]
This patch will do the lock_owner and current->pid check at
btrfs_init_new_buffer().
So above deadlock can be avoided.

Since such problem can only happen in crafted image, we will still
trigger kernel warning for later aborted transaction, but with a little
more meaningful warning message.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=200405
Reported-by: Xu Wen <wen.xu@gatech.edu>
CC: stable@vger.kernel.org # 4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   14 ++++++++++++++
 1 file changed, 14 insertions(+)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -7835,6 +7835,20 @@ btrfs_init_new_buffer(struct btrfs_trans
 	buf = btrfs_find_create_tree_block(root, bytenr);
 	if (!buf)
 		return ERR_PTR(-ENOMEM);
+
+	/*
+	 * Extra safety check in case the extent tree is corrupted and extent
+	 * allocator chooses to use a tree block which is already used and
+	 * locked.
+	 */
+	if (buf->lock_owner == current->pid) {
+		btrfs_err_rl(root->fs_info,
+"tree block %llu owner %llu already locked by pid=%d, extent tree corruption detected",
+			buf->start, btrfs_header_owner(buf), current->pid);
+		free_extent_buffer(buf);
+		return ERR_PTR(-EUCLEAN);
+	}
+
 	btrfs_set_header_generation(buf, trans->transid);
 	btrfs_set_buffer_lockdep_class(root->root_key.objectid, buf, level);
 	btrfs_tree_lock(buf);

