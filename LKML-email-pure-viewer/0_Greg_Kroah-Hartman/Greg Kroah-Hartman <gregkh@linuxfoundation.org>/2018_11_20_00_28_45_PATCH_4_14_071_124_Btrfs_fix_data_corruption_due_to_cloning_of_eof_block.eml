Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:41 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_6fO6fJbhX66AQ--.55349S3;
	Tue, 20 Nov 2018 00:50:23 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3m0fN6fJbhWdZAA--.2412S3;
	Tue, 20 Nov 2018 00:50:21 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id w7so14065285pgp.13
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:50:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=HkZqihgMn2cTkdZ9O9UEpkWs1CX83Z4XJ1LujguKrIk=;
        b=SjSMJHUXi1Q6eAjUo9WYMMSF5qmr5MdaVKh/5IMp4i+jJfH3zDn/bTRW4eb+r0Z34W
         4abkGh/Er4TwXnufC0y+PDF/lQxMKjP32tiJDIv6OxB4W2h6ejHoA0EHFVE18fD5e/sP
         KF4bTMbDttiOi97w8BQbXAmQC5+Zr8lb7r0Hp5ivRqxMewoFYhnhjYYdA29TIHbZ4sj1
         VqDkYHWrLlH8XcCzTpxlJNuhTVbetQ4cvf1Mr/YbO5U/T6XPaOrn65cNehvhX6VGl462
         /OHVnIwZTuoqyzF2LRWQOz0I3QMmgJZvZIAqe3lwGeOV1F3j7lpApKnSkr0WCprNIP1y
         mjvw==
X-Gm-Message-State: AGRZ1gLV3J3eq2BzF22BJ2F3KrrAKLtpl8HVBvyxgEPecP5i/m8pebdh
	ppWcORER5WVQyyV7avlIhstMu7ln4U6V3XdnHOfFoK+cYavJLa4=
X-Received: by 2002:a63:2c0e:: with SMTP id s14mr21179162pgs.132.1542646221462;
        Mon, 19 Nov 2018 08:50:21 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2899993pju;
        Mon, 19 Nov 2018 08:50:20 -0800 (PST)
X-Google-Smtp-Source: AJdET5eP6XM8UAnhic8H/y8WlHy9GT1Z6j3j4Ppjkw8wGTDA6j8JYB4tw7w0CVxbezGauvb88RGV
X-Received: by 2002:a17:902:2aaa:: with SMTP id j39mr15090917plb.335.1542646220521;
        Mon, 19 Nov 2018 08:50:20 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646220; cv=none;
        d=google.com; s=arc-20160816;
        b=eLQWQjU+Ih7mdphn3NIG7Sj3Ya4cd1VGBIfl6jHrCHh+aRCugRfo311aZWzJn/W4Yh
         YIz9Z5M8+cC1VjeBVtE+pANg8PCOF9PomBb5Vqig/vJI1NJNjBVkWRYBAFrFo2Fg+AXM
         QTENvj7O0V5dBt2Oi0KWy90SlVustorg3scDXR3M8jBjAtk2rzNECnifMbz1WSsXx4sy
         o71OnQRfo8pTQUhD0sCsdEAdZuRjiHukuadXe4rcIF5LWnt72lNvgB2Kw0NAPvSvIHnB
         4rxf1P352qzpfAi6xdCP7hH4juwiEjIWgn0DOk8sIEOzIWHB+5pS44iXWCF6pqGTTPVA
         NxOA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=HkZqihgMn2cTkdZ9O9UEpkWs1CX83Z4XJ1LujguKrIk=;
        b=Sr+uEaryJind3gXuwm8Stxh0t5KkVwpUGk3wideOXMU7TPJIOHPS7bAWIpxgAkh1rD
         ro7F/ArABzBYCp9heefJ1wpCBchRWjTpmkkGjx+kWKlEAOUhGukcqQp+2n3r2XqRigjL
         8zYb1cO2HCGhjblNDELhW5QapRnT+1ZcOuXKzzP0tQXB4tuDlA/YiNBgsQhDxHbLx5yN
         +4BDvCSfiLVELuJ3O57+bUCdrAkYxeANVy6dZzyZElTYPXlbNPSAaO9jyA0B6BsnsOEg
         uzd4FtS5ruBxkea4JeZlpjLIBQOxR6T7sj4zLNbDq2D5FrEtadw2Yf6Pfcid5dXhd1ia
         1/Og==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=frPEyZIH;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p19si28766215pgj.375.2018.11.19.08.50.05;
        Mon, 19 Nov 2018 08:50:20 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389877AbeKTDOH (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:14:07 -0500
Received: from mail.kernel.org ([198.145.29.99]:51282 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2388976AbeKTDOG (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:14:06 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 41042208E3;
        Mon, 19 Nov 2018 16:49:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646193;
        bh=kfeWNCP1BnrYJvrCm1kH6+IY03YeXtNQvBWu4KNR3Fs=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=frPEyZIHURoWpNWInF983sSdYgMyGvmty3HDCNQF4WEjPCvbSRbnEKzNtv6m8/ord
         bYUODjSpTbztvfRc9gjT2l9wOA57eVs82yos+KqfYM7ncdp5dUiLtpObdHy/FDWsla
         WLhg1ur5YHL7Dw9eQnRsMzSRiaLieA9DTxqri+Qk=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Filipe Manana <fdmanana@suse.com>,
        David Sterba <dsterba@suse.com>
Subject: [PATCH 4.14 071/124] Btrfs: fix data corruption due to cloning of eof block
Date: Mon, 19 Nov 2018 17:28:45 +0100
Message-Id: <20181119162626.953616726@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162612.951907286@linuxfoundation.org>
References: <20181119162612.951907286@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3m0fN6fJbhWdZAA--.2412S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXrWrKryfArW8Ww1kXr4ktFb_yoWrJw1kpF
	W3JF1SkF4kJF97Cw18A3W8J34Y9w1v9F4UZFyUX348Z3WYy3WSkr47KFy09aySy397Ar1j
	qF4qq34jk3WDAaDanT9S1TB71UUUUUDqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r126r1DMcIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWx
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20x
	vEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02
	F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw
	1lIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZF
	pf9x07bdLvNUUUUU=

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Filipe Manana <fdmanana@suse.com>

commit ac765f83f1397646c11092a032d4f62c3d478b81 upstream.

We currently allow cloning a range from a file which includes the last
block of the file even if the file's size is not aligned to the block
size. This is fine and useful when the destination file has the same size,
but when it does not and the range ends somewhere in the middle of the
destination file, it leads to corruption because the bytes between the EOF
and the end of the block have undefined data (when there is support for
discard/trimming they have a value of 0x00).

Example:

 $ mkfs.btrfs -f /dev/sdb
 $ mount /dev/sdb /mnt

 $ export foo_size=$((256 * 1024 + 100))
 $ xfs_io -f -c "pwrite -S 0x3c 0 $foo_size" /mnt/foo
 $ xfs_io -f -c "pwrite -S 0xb5 0 1M" /mnt/bar

 $ xfs_io -c "reflink /mnt/foo 0 512K $foo_size" /mnt/bar

 $ od -A d -t x1 /mnt/bar
 0000000 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5
 *
 0524288 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c
 *
 0786528 3c 3c 3c 3c 00 00 00 00 00 00 00 00 00 00 00 00
 0786544 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 *
 0790528 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5
 *
 1048576

The bytes in the range from 786532 (512Kb + 256Kb + 100 bytes) to 790527
(512Kb + 256Kb + 4Kb - 1) got corrupted, having now a value of 0x00 instead
of 0xb5.

This is similar to the problem we had for deduplication that got recently
fixed by commit de02b9f6bb65 ("Btrfs: fix data corruption when
deduplicating between different files").

Fix this by not allowing such operations to be performed and return the
errno -EINVAL to user space. This is what XFS is doing as well at the VFS
level. This change however now makes us return -EINVAL instead of
-EOPNOTSUPP for cases where the source range maps to an inline extent and
the destination range's end is smaller then the destination file's size,
since the detection of inline extents is done during the actual process of
dropping file extent items (at __btrfs_drop_extents()). Returning the
-EINVAL error is done early on and solely based on the input parameters
(offsets and length) and destination file's size. This makes us consistent
with XFS and anyone else supporting cloning since this case is now checked
at a higher level in the VFS and is where the -EINVAL will be returned
from starting with kernel 4.20 (the VFS changed was introduced in 4.20-rc1
by commit 07d19dc9fbe9 ("vfs: avoid problematic remapping requests into
partial EOF block"). So this change is more geared towards stable kernels,
as it's unlikely the new VFS checks get removed intentionally.

A test case for fstests follows soon, as well as an update to filter
existing tests that expect -EOPNOTSUPP to accept -EINVAL as well.

CC: <stable@vger.kernel.org> # 4.4+
Signed-off-by: Filipe Manana <fdmanana@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/ioctl.c |   12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -3909,9 +3909,17 @@ static noinline int btrfs_clone_files(st
 		goto out_unlock;
 	if (len == 0)
 		olen = len = src->i_size - off;
-	/* if we extend to eof, continue to block boundary */
-	if (off + len == src->i_size)
+	/*
+	 * If we extend to eof, continue to block boundary if and only if the
+	 * destination end offset matches the destination file's size, otherwise
+	 * we would be corrupting data by placing the eof block into the middle
+	 * of a file.
+	 */
+	if (off + len == src->i_size) {
+		if (!IS_ALIGNED(len, bs) && destoff + len < inode->i_size)
+			goto out_unlock;
 		len = ALIGN(src->i_size, bs) - off;
+	}
 
 	if (len == 0) {
 		ret = 0;

