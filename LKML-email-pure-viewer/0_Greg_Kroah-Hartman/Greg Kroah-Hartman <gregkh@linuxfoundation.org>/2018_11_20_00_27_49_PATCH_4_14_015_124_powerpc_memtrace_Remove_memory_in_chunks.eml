Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:32:34 -0000
Received: from icoremail.net (unknown [209.85.215.171])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX_s46fJb0nq6AQ--.55367S3;
	Tue, 20 Nov 2018 00:47:53 +0800 (CST)
Received: from mail-pg1-f171.google.com (unknown [209.85.215.171])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnyEQ26fJbMmZZAA--.3485S3;
	Tue, 20 Nov 2018 00:47:50 +0800 (CST)
Received: by mail-pg1-f171.google.com with SMTP id s198so915358pgs.2
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:47:50 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=k4bW30jDReqSLtdf/lQdTzl02vy4UhHZs8nmnHtcmWw=;
        b=VPgtzB5jqO/ufSfEN9ulbhS3oHU/LDWf7EwEbES9GXAZfzD6GUuBLRkk8xR+fslh9D
         kj3+9LoPx+dDnnGMpEcIn5/e4+JIvcLFDE4bpXJkBkb9by6ul6+FTF/6AnZzLxPXAw3h
         T9xJGCdoZl4BLq4XI8cXUZfRMaZIHt+5BTknDCVjlIB/41gEaOKSQQbO5VVMmO0HGNcb
         qGNtvFbFhll/YJgC2b+qeJDqJmXjmD0KhGGIFgFRJ7isLDB7+cciWkIMGT0mxXjqvLif
         C5wU1Lrj+ZPQ8Q4k6YlbQ5gilmC0BrJse+Ln0RG0bQIVouEHV3dhkFlTAtXxv3ciRMo3
         QNBA==
X-Gm-Message-State: AGRZ1gLXYa57+/+Sa7InZZpWTSgrb08g2Mk4r8IugxPxTLsss1Z7xtpr
	aIAi25XRjaFQOrOOAG7rO7LQn5Kkgt+IRymwPaHgqI2Et9YBpU8=
X-Received: by 2002:a62:6a88:: with SMTP id f130mr2732801pfc.201.1542646070243;
        Mon, 19 Nov 2018 08:47:50 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2897200pju;
        Mon, 19 Nov 2018 08:47:49 -0800 (PST)
X-Google-Smtp-Source: AJdET5f+8DB22LcGVCj9z2ggm5cNLNyDgyc8x4PYcoNM1qGkKP/timcC4NeQEXG6oiVR2bmFPgcu
X-Received: by 2002:a63:ff62:: with SMTP id s34mr20862153pgk.325.1542646069427;
        Mon, 19 Nov 2018 08:47:49 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646069; cv=none;
        d=google.com; s=arc-20160816;
        b=v83I0FpW+2LCPwtmPGrHb/si8+1qEWgfbuoBj/CtAagll0ltcuB54Gfsk0i3svMD+/
         F6U7FzPOTqK/k+XS1pGD6ZhZ4q9NVX6VAUoMBaIGWiGRazOBQMto/VcFzBYa6B7uT5MP
         I0nTtzY/WLNq7SjSA1OArckx1wbVySPbAlRWN/kLMIb1vbZRqLghB9z3npYPTPzR3DEr
         OZDi4U7GqLQpsA/B2mDReJMfeaN3xN/hyvw1hh7kLwWqz1oh0FNEXDhlixPenPQHTu4m
         6GzB1zNq9ts2yHcQ5ldnvfhwnKes2jicUZ7e+cfvOXtw/2RPEBab1xjGpxIwbbw0hhIU
         d7tw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=k4bW30jDReqSLtdf/lQdTzl02vy4UhHZs8nmnHtcmWw=;
        b=j9J2yHHv/oEYzvzctLyq0+tWKYxtiQCo0ceCCD0SEYboEUfadXg2CzaA2oA1nrhna3
         /Qt9QVNbG5axTXdPxJbFVxt8AGocfZJJVgWqghmKGlboeBo14xGWvTV5ksJslPsHJSFM
         I+sylHoEJHiUr6HJC+1K2qKH1zkeWUCpsUJknZlcoOvaWOrR1blce4OCKM1TjcSAn1Q2
         QN5Tsc7ImGaP8HL7cnFiff+IhxC4rCZObvtHA33qCRfZrL/RuVglu3//e8NqrE+IT2Lh
         XFa3zqgCGpvWyZWwp0KAo2DaWir2004SSqGdg5hAlJ/Sv7o+HtN/uSW6yct7mkF+C/SG
         LBsA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b="eyBlQ8/i";
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t127si13639766pfd.21.2018.11.19.08.47.34;
        Mon, 19 Nov 2018 08:47:49 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389098AbeKTDLg (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:11:36 -0500
Received: from mail.kernel.org ([198.145.29.99]:47522 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2388196AbeKTDLg (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:11:36 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 7CB142145D;
        Mon, 19 Nov 2018 16:47:23 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646044;
        bh=n4sBl1VuAd8e/omIZ5nQYGs4R8V9o73AA6sFXxvuvek=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=eyBlQ8/iFVcUd1E4VgGQND+yZRCPF2jpNGd0j+/cr4+MOJVhcGeQt7WvrsoRLS1Cb
         c6az/c6hBp3VicVw3JlPrLge/xliAuZy1AsmMc8b2sU22uN3GX0+pgyv8UlUA2UObU
         EUx+p3f+Nf5Nqcx+dwm1GPzpwhSZW1Mh4lNtfmSY=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Rashmica Gupta <rashmica.g@gmail.com>,
        Michael Ellerman <mpe@ellerman.id.au>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.14 015/124] powerpc/memtrace: Remove memory in chunks
Date: Mon, 19 Nov 2018 17:27:49 +0100
Message-Id: <20181119162615.894653973@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162612.951907286@linuxfoundation.org>
References: <20181119162612.951907286@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnyEQ26fJbMmZZAA--.3485S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAr1UZFWxtFWxGF18GFW8Xrb_yoW5urWUpr
	4fJwsIkrW8tFnrAF4xKFn5XrykKw4vy3y5K39xA3sxCa17WryI9ry7tFy0vFyDJry0vrW7
	tr4kAF4Y9F4kXaUanT9S1TB71UUUUUDqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_tr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r126r1DMcIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VWUMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWx
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20x
	vEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02
	F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_JF0_Jw
	1lIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZF
	pf9x07becTPUUUUU=

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Rashmica Gupta <rashmica.g@gmail.com>

[ Upstream commit 3f7daf3d7582dc6628ac40a9045dd1bbd80c5f35 ]

When hot-removing memory release_mem_region_adjustable() splits iomem
resources if they are not the exact size of the memory being
hot-deleted. Adding this memory back to the kernel adds a new resource.

Eg a node has memory 0x0 - 0xfffffffff. Hot-removing 1GB from
0xf40000000 results in the single resource 0x0-0xfffffffff being split
into two resources: 0x0-0xf3fffffff and 0xf80000000-0xfffffffff.

When we hot-add the memory back we now have three resources:
0x0-0xf3fffffff, 0xf40000000-0xf7fffffff, and 0xf80000000-0xfffffffff.

This is an issue if we try to remove some memory that overlaps
resources. Eg when trying to remove 2GB at address 0xf40000000,
release_mem_region_adjustable() fails as it expects the chunk of memory
to be within the boundaries of a single resource. We then get the
warning: "Unable to release resource" and attempting to use memtrace
again gives us this error: "bash: echo: write error: Resource
temporarily unavailable"

This patch makes memtrace remove memory in chunks that are always the
same size from an address that is always equal to end_of_memory -
n*size, for some n. So hotremoving and hotadding memory of different
sizes will now not attempt to remove memory that spans multiple
resources.

Signed-off-by: Rashmica Gupta <rashmica.g@gmail.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 arch/powerpc/platforms/powernv/memtrace.c |   21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

--- a/arch/powerpc/platforms/powernv/memtrace.c
+++ b/arch/powerpc/platforms/powernv/memtrace.c
@@ -119,17 +119,15 @@ static bool memtrace_offline_pages(u32 n
 	walk_memory_range(start_pfn, end_pfn, (void *)MEM_OFFLINE,
 			  change_memblock_state);
 
-	lock_device_hotplug();
-	remove_memory(nid, start_pfn << PAGE_SHIFT, nr_pages << PAGE_SHIFT);
-	unlock_device_hotplug();
 
 	return true;
 }
 
 static u64 memtrace_alloc_node(u32 nid, u64 size)
 {
-	u64 start_pfn, end_pfn, nr_pages;
+	u64 start_pfn, end_pfn, nr_pages, pfn;
 	u64 base_pfn;
+	u64 bytes = memory_block_size_bytes();
 
 	if (!NODE_DATA(nid) || !node_spanned_pages(nid))
 		return 0;
@@ -142,8 +140,21 @@ static u64 memtrace_alloc_node(u32 nid,
 	end_pfn = round_down(end_pfn - nr_pages, nr_pages);
 
 	for (base_pfn = end_pfn; base_pfn > start_pfn; base_pfn -= nr_pages) {
-		if (memtrace_offline_pages(nid, base_pfn, nr_pages) == true)
+		if (memtrace_offline_pages(nid, base_pfn, nr_pages) == true) {
+			/*
+			 * Remove memory in memory block size chunks so that
+			 * iomem resources are always split to the same size and
+			 * we never try to remove memory that spans two iomem
+			 * resources.
+			 */
+			lock_device_hotplug();
+			end_pfn = base_pfn + nr_pages;
+			for (pfn = base_pfn; pfn < end_pfn; pfn += bytes>> PAGE_SHIFT) {
+				remove_memory(nid, pfn << PAGE_SHIFT, bytes);
+			}
+			unlock_device_hotplug();
 			return base_pfn << PAGE_SHIFT;
+		}
 	}
 
 	return 0;

