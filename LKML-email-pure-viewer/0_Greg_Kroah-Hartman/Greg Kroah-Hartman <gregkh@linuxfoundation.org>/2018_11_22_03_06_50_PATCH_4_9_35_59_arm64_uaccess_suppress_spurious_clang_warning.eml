Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:35:25 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app4 (Coremail) with SMTP id cS_KCgDXv7qlr_VbtIzoAQ--.59358S3;
	Thu, 22 Nov 2018 03:19:02 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwC3mESjr_Vb2_BkAA--.477S3;
	Thu, 22 Nov 2018 03:18:59 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id b22-v6so6836545pls.7
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 11:18:59 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=ojOXdCzgMMS/KNYi6S1UptJ738SgLEsFNODBGhxHmbM=;
        b=Em/cASPXUvYV8yvR1NrGoMka/llPC6WgFMHCnOl8qSmaFNrmbiGd8z88RwqEXRSP+G
         SfgJgpHQqqxg0W51AY15wGGvfYePm7NtnHvKaX3FjKE7fU8X5/iGri+8zrymdoV8XYDC
         9c/njno56duzS2DSGayd5N+fmaAhFMHwSnrZ/fR/mX7l9inoxhVI2tZVmXZhgvBrq2Vm
         9zilx6ITcCDdrMuEPNCB8GxsUwKPiKj3ToTfDxRsD9a6Pb7IWOu/3ijEASVeHllS7oAS
         RQIaE+JsJ0cicTC1F+qGfVqhXQrLDkmmCxx2wTTel+JKhHWT7diY3pZP9D1yjobWoIQT
         jocw==
X-Gm-Message-State: AA+aEWa8R/zGfS3hbUAiZgYlmzbW44feS7XO/jQgnB24T1AzZ1J18tgJ
	0S0rQ5vOy9uMA2TQk4pNdCe62bJTbLcETnLCqTYW/C18q3BettQ=
X-Received: by 2002:a63:cd17:: with SMTP id i23mr7045958pgg.13.1542827939420;
        Wed, 21 Nov 2018 11:18:59 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2363314pju;
        Wed, 21 Nov 2018 11:18:51 -0800 (PST)
X-Google-Smtp-Source: AFSGD/W5gZVceECc6eTO7A1IfusTWaY2BHwEIWdPL40jzpNX18CjgVKOB3ru84iC4z50DD5M1hE4
X-Received: by 2002:a17:902:7603:: with SMTP id k3mr8129318pll.285.1542827931161;
        Wed, 21 Nov 2018 11:18:51 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542827931; cv=none;
        d=google.com; s=arc-20160816;
        b=GMEpkT80ancyRehWrXC+yVvXpY+Iib/xT2/uTvG37RuKFX72blXbuLoBsjMrO69U1m
         Bq5u0tv9grY9lowb1lUf/FfocO7mObOS6ZXgQjtEjBjNpuS6e3kvvS4wbhTEYIKNCiiQ
         +tnrSDFyIqsNuSJ2/yoNekosipuApRcxP1toxViCPjHbn+lpr8DmrGgmwrIMWfC8jybD
         cN8yzdqDfvyBdbWYkpvwEeWf42w4ooJmZe/Cfux4yp/etc+sSPTBk5stooExEAd746/l
         ZcJixV6GNAtqOWWZv/ofpReBDRTMiHfmTcU0Gk9nUWIBJLiQcsTu1k42jA49rOiDIdfB
         ekow==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=ojOXdCzgMMS/KNYi6S1UptJ738SgLEsFNODBGhxHmbM=;
        b=09kU0VvXMkxKVQ+fQybE3lb8vT0CTFdG0OseU47kDv1SM1iDRPkyThzm5TP6b+V0q/
         DA0P78+oDaGvh/Gq8Q2wvSVql+Wsfbs33wNkgJtPwG8f7R2EoKNeEg5mPqbV2nEBr/gk
         si5UigSU7YoyAePNAb+yLmxpGLmLSO9UkfVYDQIIrRrLq4/ykbspZQgeP7zdhwv4GFI6
         pTAQ32Pg4FAwEYpGK1NVJfOvhzS9ykj+OMBoaNHYCFZSj3qeyVst1vqA0NA9j5wK8x4n
         w6uqEtASd3XU9C14p0StpC15ztNOBX3W+5HR+EyXKTHl5IYCJ42AhyzQogT4oUXk2Ftk
         t38g==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=Y8DTMIIX;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id 127-v6si52306548pfg.268.2018.11.21.11.18.27;
        Wed, 21 Nov 2018 11:18:51 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389166AbeKVFrf (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Thu, 22 Nov 2018 00:47:35 -0500
Received: from mail.kernel.org ([198.145.29.99]:43152 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2389139AbeKVFre (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 00:47:34 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 5F47D206BB;
        Wed, 21 Nov 2018 19:12:00 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542827520;
        bh=KbCNDhqeRC6lM8xuozkTYKQJsafE1Fm296pZ4vSZTr8=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=Y8DTMIIXMzHPygA9J6IcDXMfk0ohrBkzRMrT/fcfGZnMS+OCfW2B8cZ7i5gylWwdv
         5X/WeGi+ksWGW5YyIPqVkCQJVbIKBGe/m/Ixn6FkNYckYHMtfmBrz7YZcsdYlc048S
         DKeCuRDX7zD5RTYdgRroa+/mbbYOmGuuopv9Ar8A=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Matthias Kaehlcke <mka@chromium.org>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Nick Desaulniers <ndesaulniers@google.com>
Subject: [PATCH 4.9 35/59] arm64: uaccess: suppress spurious clang warning
Date: Wed, 21 Nov 2018 20:06:50 +0100
Message-Id: <20181121183509.626442199@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181121183508.262873520@linuxfoundation.org>
References: <20181121183508.262873520@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwC3mESjr_Vb2_BkAA--.477S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw1UWw1rWr1rXrW5ZF1fZwb_yoW5WrWUpF
	W3CF1DKr4kWrWxAayUA3y8Zr4rXa93GryYgrZYk34qyw15Ar95tr4rKr9IkFWUJFy8Za1Y
	yF4Ygwn5Ga1qq3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPlb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1q6rW5McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VWrMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26r4UJVWx
	Jr1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20x
	vEw4C26cxK6c8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02
	F40E14v26r1j6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GF
	ylIxkGc2Ij64vIr41lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZF
	pf9x07bWPfQUUUUU=

4.9-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Mark Rutland <mark.rutland@arm.com>

commit d135b8b5060ea91dd751ff172d179eb4eab1e966 upstream.

Clang tries to warn when there's a mismatch between an operand's size,
and the size of the register it is held in, as this may indicate a bug.
Specifically, clang warns when the operand's type is less than 64 bits
wide, and the register is used unqualified (i.e. %N rather than %xN or
%wN).

Unfortunately clang can generate these warnings for unreachable code.
For example, for code like:

do {                                            \
        typeof(*(ptr)) __v = (v);               \
        switch(sizeof(*(ptr))) {                \
        case 1:                                 \
                // assume __v is 1 byte wide    \
                asm ("{op}b %w0" : : "r" (v));  \
                break;                          \
        case 8:                                 \
                // assume __v is 8 bytes wide   \
                asm ("{op} %0" : : "r" (v));    \
                break;                          \
        }
while (0)

... if op() were passed a char value and pointer to char, clang may
produce a warning for the unreachable case where sizeof(*(ptr)) is 8.

For the same reasons, clang produces warnings when __put_user_err() is
used for types that are less than 64 bits wide.

We could avoid this with a cast to a fixed-width type in each of the
cases. However, GCC will then warn that pointer types are being cast to
mismatched integer sizes (in unreachable paths).

Another option would be to use the same union trickery as we do for
__smp_store_release() and __smp_load_acquire(), but this is fairly
invasive.

Instead, this patch suppresses the clang warning by using an x modifier
in the assembly for the 8 byte case of __put_user_err(). No additional
work is necessary as the value has been cast to typeof(*(ptr)), so the
compiler will have performed any necessary extension for the reachable
case.

For consistency, __get_user_err() is also updated to use the x modifier
for its 8 byte case.

Acked-by: Will Deacon <will.deacon@arm.com>
Signed-off-by: Mark Rutland <mark.rutland@arm.com>
Reported-by: Matthias Kaehlcke <mka@chromium.org>
Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 arch/arm64/include/asm/uaccess.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/arch/arm64/include/asm/uaccess.h
+++ b/arch/arm64/include/asm/uaccess.h
@@ -198,7 +198,7 @@ do {									\
 			       (err), ARM64_HAS_UAO);			\
 		break;							\
 	case 8:								\
-		__get_user_asm("ldr", "ldtr", "%",  __gu_val, (ptr),	\
+		__get_user_asm("ldr", "ldtr", "%x",  __gu_val, (ptr),	\
 			       (err), ARM64_HAS_UAO);			\
 		break;							\
 	default:							\
@@ -272,7 +272,7 @@ do {									\
 			       (err), ARM64_HAS_UAO);			\
 		break;							\
 	case 8:								\
-		__put_user_asm("str", "sttr", "%", __pu_val, (ptr),	\
+		__put_user_asm("str", "sttr", "%x", __pu_val, (ptr),	\
 			       (err), ARM64_HAS_UAO);			\
 		break;							\
 	default:							\

