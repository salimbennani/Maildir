Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:33:11 -0000
Received: from icoremail.net (unknown [209.85.214.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH34V7PJbg4y6AQ--.55724S3;
	Tue, 20 Nov 2018 01:00:06 +0800 (CST)
Received: from mail-pl1-f179.google.com (unknown [209.85.214.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnj0sP7PJb2G5ZAA--.5584S3;
	Tue, 20 Nov 2018 01:00:00 +0800 (CST)
Received: by mail-pl1-f179.google.com with SMTP id b5so8446919plr.4
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 09:00:00 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=FPLYYXKNXA5pBeTTIZxoLVtzVNtbCoPgs4736EuwTT4=;
        b=MdfOVLDI/GUfLg5D5jxLqA+q5c00gh82sCrmiz1r0v2VefFH6/qSuyAQPxHwMuXT84
         MHKgfSb9IuJSrARMX1Ql8pzmXuyHfgyVBDvbhIXirAC91hoNxGdOkFK3CmwqUwB6UH1f
         rYF0mbbPV4wdYwoewAjjef93/NJfQHxwwRJwc8I8z5qMI7OSArCW422zb8bDfWoltg+l
         i0nZIFSFrInajSggfivWpaFJs8SyL1rb7VS/4FsA6AzhVfSrPgmpqRSqkXl/OJd9MDgE
         jSgQf8/sWaGokRiipglu5EePw/R6aTfAc7Yg8W7qGrKNk6gXJoFHN2hn21IOzzzsDzcr
         Q+5A==
X-Gm-Message-State: AA+aEWb1xpryvbMMpIBr7JxmKr+Y3I77vy1axyu0wlfE/NnFVNcj3Zc0
	r4yfB1MnG3htIw+ek7dMexs2JNRZv3uf8P0NaTZngipH3ha4nuM=
X-Received: by 2002:a17:902:8f97:: with SMTP id z23mr13710707plo.283.1542646799711;
        Mon, 19 Nov 2018 08:59:59 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2910866pju;
        Mon, 19 Nov 2018 08:59:58 -0800 (PST)
X-Google-Smtp-Source: AJdET5c6bf68wJgZkqVy9wddrVQfF8ygkPbWY7RckzFzhpmHTpuDP98c4la4zMHhsERsA2nWzPyn
X-Received: by 2002:aa7:80ce:: with SMTP id a14-v6mr23363321pfn.86.1542646798711;
        Mon, 19 Nov 2018 08:59:58 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542646798; cv=none;
        d=google.com; s=arc-20160816;
        b=nCNmsmlnE42qxEGQnwfEEY+jYPeKqKVkx8I74/BAQ4mMRkPcE8q9NqvszRqgtp8fbd
         GwMJp2bUwfHFsXXCcqutzxAfg0SMnoesepfEzT/jzSljZyMAUjwBpmAz8nF7e47qFyYs
         0yYSHkJN3dEzz2VcDUVkmUJk8JTMN97OYoCkeBooQmwiTn4ZEBxQFEVT6iqDs82O7YWj
         MattCyBQEyIjW66XgvLjiyi3bZ51ur4h0yGAfr7Y2Wgk1Ws1EtBrYRrRnoKGOsmN/t2I
         ce59I5x6nb7JWdgvdlkG85y8/YYB0Us+Tj4Pr7LeDr5IqFY/GDE1H0tJZmgNYG302vuq
         sDdA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=FPLYYXKNXA5pBeTTIZxoLVtzVNtbCoPgs4736EuwTT4=;
        b=Jvcs0bOjmkxUi7U7xIW3nPSHTwLNfzC+K1Mmx3XBfNxeSuBCElQlNjJ/ACxW33AulW
         /9+BQtFcrkjDvAN1C8WCbeVTjs5HjDM1bMwMTV6ohZaNCdeFGZ4ps/XZnNVwfyDsu/dN
         3XtxKUFuo0VMig2Myo1izvFCEPCaP2CRj/opNfZAzFQHW/laxV8XhQ5n3fxYGAqcH6lk
         4WDFnsf5DjRPtiKu6xWYoLOyd2zrxSX0UbU1mdnsBabQSGFyKciKoXLFyb/1CPAia/XU
         SuaJM0f0IceTmHqQmW/3GM57K1SIZpwkR4oENTTsSyjSzVAhgGGAap6k7nhKNX/1Wloj
         CRNw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=nRD61WdC;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id i2si4169819pfi.125.2018.11.19.08.59.44;
        Mon, 19 Nov 2018 08:59:58 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405112AbeKTDXr (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 22:23:47 -0500
Received: from mail.kernel.org ([198.145.29.99]:35926 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2404671AbeKTDXr (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 22:23:47 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id D08DC214F1;
        Mon, 19 Nov 2018 16:59:30 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542646771;
        bh=hGAL2gNYoW8X/TmqcSC7L+xJPCiX7wgPm4/daDvYzHY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=nRD61WdCDR4wUoL2Wiag3yXTT5RrQpf8CfLSZ28qZr9c8edq4y1aNXhmvy0C09ATq
         3NJ9VOPYQcEYBzySVW++U1T3Vsprs00SJAus+Zfb2ulB+TQFhw+Nw91B+dIefUoo4G
         Qz2Sx/yJkhvhcYrAywX2nMz+PzPhm06GfS09W5jw=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Xu Wen <wen.xu@gatech.edu>,
        Qu Wenruo <wqu@suse.com>, David Sterba <dsterba@suse.com>
Subject: [PATCH 4.4 084/160] btrfs: Handle owner mismatch gracefully when walking up tree
Date: Mon, 19 Nov 2018 17:28:43 +0100
Message-Id: <20181119162639.384830312@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162630.031306128@linuxfoundation.org>
References: <20181119162630.031306128@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnj0sP7PJb2G5ZAA--.5584S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZw18tw1xAr4rXF1fCF45Jrb_yoWrWrWDpr
	4akas8Jr1rJw15CFs7KF4F9r4fK3WkXw4xXwn3u3y0gasrJr1aqa4Sk3W8CFyUCrZ5JFWU
	Xa1jgwn8GFnF9FJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPvb7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26F4UJVW0owA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r1q6rW5McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IYc2
	Ij64vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc7Ca8VAvwVCFzxkY4VCF77xA
	MxkIecxEwVCI4VW8MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3w
	CYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4UJVWxJr1lcIIF0xvEx4A2jsIE14v26F4UJVW0
	owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64
	kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG
	67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMI
	IYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuY
	vjxUqX18DUUUU

4.4-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Qu Wenruo <wqu@suse.com>

commit 65c6e82becec33731f48786e5a30f98662c86b16 upstream.

[BUG]
When mounting certain crafted image, btrfs will trigger kernel BUG_ON()
when trying to recover balance:

  kernel BUG at fs/btrfs/extent-tree.c:8956!
  invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
  CPU: 1 PID: 662 Comm: mount Not tainted 4.18.0-rc1-custom+ #10
  RIP: 0010:walk_up_proc+0x336/0x480 [btrfs]
  RSP: 0018:ffffb53540c9b890 EFLAGS: 00010202
  Call Trace:
   walk_up_tree+0x172/0x1f0 [btrfs]
   btrfs_drop_snapshot+0x3a4/0x830 [btrfs]
   merge_reloc_roots+0xe1/0x1d0 [btrfs]
   btrfs_recover_relocation+0x3ea/0x420 [btrfs]
   open_ctree+0x1af3/0x1dd0 [btrfs]
   btrfs_mount_root+0x66b/0x740 [btrfs]
   mount_fs+0x3b/0x16a
   vfs_kern_mount.part.9+0x54/0x140
   btrfs_mount+0x16d/0x890 [btrfs]
   mount_fs+0x3b/0x16a
   vfs_kern_mount.part.9+0x54/0x140
   do_mount+0x1fd/0xda0
   ksys_mount+0xba/0xd0
   __x64_sys_mount+0x21/0x30
   do_syscall_64+0x60/0x210
   entry_SYSCALL_64_after_hwframe+0x49/0xbe

[CAUSE]
Extent tree corruption.  In this particular case, reloc tree root's
owner is DATA_RELOC_TREE (should be TREE_RELOC), thus its backref is
corrupted and we failed the owner check in walk_up_tree().

[FIX]
It's pretty hard to take care of every extent tree corruption, but at
least we can remove such BUG_ON() and exit more gracefully.

And since in this particular image, DATA_RELOC_TREE and TREE_RELOC share
the same root (which is obviously invalid), we needs to make
__del_reloc_root() more robust to detect such invalid sharing to avoid
possible NULL dereference as root->node can be NULL in this case.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=200411
Reported-by: Xu Wen <wen.xu@gatech.edu>
CC: stable@vger.kernel.org # 4.4+
Signed-off-by: Qu Wenruo <wqu@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/btrfs/extent-tree.c |   18 ++++++++++++------
 fs/btrfs/relocation.c  |    2 +-
 2 files changed, 13 insertions(+), 7 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -8704,15 +8704,14 @@ static noinline int walk_up_proc(struct
 	if (eb == root->node) {
 		if (wc->flags[level] & BTRFS_BLOCK_FLAG_FULL_BACKREF)
 			parent = eb->start;
-		else
-			BUG_ON(root->root_key.objectid !=
-			       btrfs_header_owner(eb));
+		else if (root->root_key.objectid != btrfs_header_owner(eb))
+			goto owner_mismatch;
 	} else {
 		if (wc->flags[level + 1] & BTRFS_BLOCK_FLAG_FULL_BACKREF)
 			parent = path->nodes[level + 1]->start;
-		else
-			BUG_ON(root->root_key.objectid !=
-			       btrfs_header_owner(path->nodes[level + 1]));
+		else if (root->root_key.objectid !=
+			 btrfs_header_owner(path->nodes[level + 1]))
+			goto owner_mismatch;
 	}
 
 	btrfs_free_tree_block(trans, root, eb, parent, wc->refs[level] == 1);
@@ -8720,6 +8719,11 @@ out:
 	wc->refs[level] = 0;
 	wc->flags[level] = 0;
 	return 0;
+
+owner_mismatch:
+	btrfs_err_rl(root->fs_info, "unexpected tree owner, have %llu expect %llu",
+		     btrfs_header_owner(eb), root->root_key.objectid);
+	return -EUCLEAN;
 }
 
 static noinline int walk_down_tree(struct btrfs_trans_handle *trans,
@@ -8773,6 +8777,8 @@ static noinline int walk_up_tree(struct
 			ret = walk_up_proc(trans, root, path, wc);
 			if (ret > 0)
 				return 0;
+			if (ret < 0)
+				return ret;
 
 			if (path->locks[level]) {
 				btrfs_tree_unlock_rw(path->nodes[level],
--- a/fs/btrfs/relocation.c
+++ b/fs/btrfs/relocation.c
@@ -1318,7 +1318,7 @@ static void __del_reloc_root(struct btrf
 	struct mapping_node *node = NULL;
 	struct reloc_control *rc = root->fs_info->reloc_ctl;
 
-	if (rc) {
+	if (rc && root->node) {
 		spin_lock(&rc->reloc_root_tree.lock);
 		rb_node = tree_search(&rc->reloc_root_tree.rb_root,
 				      root->node->start);

