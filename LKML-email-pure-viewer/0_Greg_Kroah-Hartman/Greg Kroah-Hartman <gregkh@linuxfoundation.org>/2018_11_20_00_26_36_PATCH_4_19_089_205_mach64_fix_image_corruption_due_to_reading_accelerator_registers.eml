Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:31:53 -0000
Received: from icoremail.net (unknown [209.85.215.172])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+6R5vJbyWm6AQ--.55121S3;
	Tue, 20 Nov 2018 00:36:37 +0800 (CST)
Received: from mail-pg1-f172.google.com (unknown [209.85.215.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3VUGL5vJbZ15ZAA--.3490S3;
	Tue, 20 Nov 2018 00:36:28 +0800 (CST)
Received: by mail-pg1-f172.google.com with SMTP id d72so10617465pga.9
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 08:36:28 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=GBdtQL/mQzM3qYrTrXq2FLhGK64gxCYQjbJXFpzxLDw=;
        b=aQznqIrVJ+zGl3Q1LmWh8bsFcBW5eJgLVPoHS8VlxnTqPTNTrOpJ3F6SBVWIR5KikV
         Xs4iv0tKhDNfKYffWIWMlzcmumXh0Lfw2ujZzNQUXXEUUONQPaS4firbFWqmROnGmKRc
         QBREpLueynkBm8YhvIUuDPvdjXIysxv2cjo55NGmd2653IevEF2ENm19Ej1svgZBZSqQ
         scI+s57MYn2VL6h65+wMzXjMRlWzpEQ6NqVcgqXXJpX0bGf8Wv8S5LNBiu2tg5iNFFjW
         tcdjbmefVmg07pOzAzlPvGYy0Y3BlGCzE+pz760goHhGOI5zGS7dszk2Vq1R5f91mGiq
         ug9Q==
X-Gm-Message-State: AGRZ1gJNoEInYWhrpSKzeRqx97+kQjBuRxdUbL27NpVC+4ehKQaTNxmS
	CsGL4rIrrL19qYh89o6iRjGzpgp3s8yj3+nFK+bNGQun8ULDAKU=
X-Received: by 2002:aa7:87ce:: with SMTP id i14mr15893492pfo.20.1542645387697;
        Mon, 19 Nov 2018 08:36:27 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2884270pju;
        Mon, 19 Nov 2018 08:36:26 -0800 (PST)
X-Google-Smtp-Source: AJdET5colrjM/G49QoShKfa6EseWjfX7Ln4jn69VzClBrfvlTOAdaGEzZkw+xW1YKUssqC5IYPoc
X-Received: by 2002:a17:902:aa08:: with SMTP id be8-v6mr23203123plb.294.1542645386943;
        Mon, 19 Nov 2018 08:36:26 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542645386; cv=none;
        d=google.com; s=arc-20160816;
        b=wdRUw6QHJSYFbyNwApTsjY5EsZJehGZ7kNOqdEMyOtVD5soKx7HgWikFa4bNWYbUmi
         RFb4TPvZw3C8c8jcXx/hEMEFFolKR1E+Eyp+e7l4CSaUwullqRUJVnjfxi7Ljw1N/ih8
         qnr5KsB6SmAlHWWJLGCynBxu2Pu8RJ8J/HZMqesL0JSLsCmZp7Aoi20vQ9fNN1mzN4bk
         hpiNReR/ZseZgrvEe55BVnk3VN0bHVGfbppEhTB1aUlpSp7/iB/eCH9B5eQRA58M9Ywj
         BkYEpr+EV+sIWUFfa358M+9ZptlC7DwLwKRzzo+QyYvKzS57qbs7U8bahtJstVcZOsNU
         R0hQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=GBdtQL/mQzM3qYrTrXq2FLhGK64gxCYQjbJXFpzxLDw=;
        b=IpM/WFIVWFbW3Gk1/iiez0eQ5uPkdk49Azca1ZYzs/nNawumaqzeujav0Ug8wFDmpm
         hukYGI2mhPlwv2STxrYPy4fPAy2egZq65KeHU0e/XgbrE4AGXgycj0xT7ZTWjpJRzSr2
         kvjni7ayUZn14Fs6Qq4ctmk70hQG1/LDJWbK7xKgbNdTfauAw2JaH6p+jWZkd1VaFOkH
         El7EPtzYp1Xv24udwzOdzY5JK/v4l0QAUt9Wiax/KRv2xL8tJKlmrKlqTxg3yqjp5b/A
         vTU1EJmz94Ts/u1JmQUpAAZB0sZx2wXkPmMKTAnBHuCWn9mSHjCjEZmAkGQvrBTYgX9T
         sYDw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=csL5ZnFU;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id n18-v6si39723777plp.294.2018.11.19.08.36.12;
        Mon, 19 Nov 2018 08:36:26 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731260AbeKTC6J (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 21:58:09 -0500
Received: from mail.kernel.org ([198.145.29.99]:57044 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729974AbeKTC6H (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 21:58:07 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 23A452089F;
        Mon, 19 Nov 2018 16:33:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1542645239;
        bh=1HUFzHNltnDyyD8aRqV4SWxaEsFuDNaYf68Rz+Hf3S0=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=csL5ZnFUChAzVPLUT9QhfpmjGG4wGRVAQZhGIxgp9sn2KJn4OzXzLrxngfR7Llm2R
         N9swz8ukVyBheJX04bnZhIT+mKsFb/QcK6U7OR8jVlHWirIa7GXRgZfX9cmLNNAIUW
         XTxhKzhjF3E5i8tZ3VgfAztT1aiPfV1siCa5Xtuc=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Mikulas Patocka <mpatocka@redhat.com>,
        =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <syrjala@sci.fi>,
        Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Subject: [PATCH 4.19 089/205] mach64: fix image corruption due to reading accelerator registers
Date: Mon, 19 Nov 2018 17:26:36 +0100
Message-Id: <20181119162631.957045785@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181119162616.586062722@linuxfoundation.org>
References: <20181119162616.586062722@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3VUGL5vJbZ15ZAA--.3490S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxArW5Kw1rZF15tr15Ww4Durg_yoWrWr4Dp3
	9xCrnxZr48Xw4jyw4rXrWqkrn0kr4xtrZxJr9Yya4Fyas8Z395tw1rX3Zaqa4ru3yDZFW5
	Z34UKrs0kFs7AwUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPGb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26r4UJVWxJr1l84ACjcxK6I8E87Iv6xkF7I0E14v26r4UJVWxJr1le2I262
	IYc4CY6c8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAF
	wI0_JrI_JrylYx0Ex4A2jsIE14v26r1j6r4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0x
	vY0x0EwIxGrwCjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCj
	j44lc2xSY4AK6IIF6r1lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26w1j6s
	0DMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UMxvI42IY6I8E87Iv67AKxVW8Jr0_
	Cr1UMxvI42IY6I8E87Iv6xkF7I0E14v26r4UJVWxJr1l42xK82IYc2Ij64vIr41l42xK82
	IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAq
	x4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r
	1DMIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIF
	yTuYvjxUq9miDUUUU

4.19-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Mikulas Patocka <mpatocka@redhat.com>

commit c09bcc91bb94ed91f1391bffcbe294963d605732 upstream.

Reading the registers without waiting for engine idle returns
unpredictable values. These unpredictable values result in display
corruption - if atyfb_imageblit reads the content of DP_PIX_WIDTH with the
bit DP_HOST_TRIPLE_EN set (from previous invocation), the driver would
never ever clear the bit, resulting in display corruption.

We don't want to wait for idle because it would degrade performance, so
this patch modifies the driver so that it never reads accelerator
registers.

HOST_CNTL doesn't have to be read, we can just write it with
HOST_BYTE_ALIGN because no other part of the driver cares if
HOST_BYTE_ALIGN is set.

DP_PIX_WIDTH is written in the functions atyfb_copyarea and atyfb_fillrect
with the default value and in atyfb_imageblit with the value set according
to the source image data.

Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
Reviewed-by: Ville Syrjälä <syrjala@sci.fi>
Cc: stable@vger.kernel.org
Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 drivers/video/fbdev/aty/mach64_accel.c |   22 +++++++++-------------
 1 file changed, 9 insertions(+), 13 deletions(-)

--- a/drivers/video/fbdev/aty/mach64_accel.c
+++ b/drivers/video/fbdev/aty/mach64_accel.c
@@ -127,7 +127,7 @@ void aty_init_engine(struct atyfb_par *p
 
 	/* set host attributes */
 	wait_for_fifo(13, par);
-	aty_st_le32(HOST_CNTL, 0, par);
+	aty_st_le32(HOST_CNTL, HOST_BYTE_ALIGN, par);
 
 	/* set pattern attributes */
 	aty_st_le32(PAT_REG0, 0, par);
@@ -233,7 +233,8 @@ void atyfb_copyarea(struct fb_info *info
 		rotation = rotation24bpp(dx, direction);
 	}
 
-	wait_for_fifo(4, par);
+	wait_for_fifo(5, par);
+	aty_st_le32(DP_PIX_WIDTH, par->crtc.dp_pix_width, par);
 	aty_st_le32(DP_SRC, FRGD_SRC_BLIT, par);
 	aty_st_le32(SRC_Y_X, (sx << 16) | sy, par);
 	aty_st_le32(SRC_HEIGHT1_WIDTH1, (width << 16) | area->height, par);
@@ -269,7 +270,8 @@ void atyfb_fillrect(struct fb_info *info
 		rotation = rotation24bpp(dx, DST_X_LEFT_TO_RIGHT);
 	}
 
-	wait_for_fifo(3, par);
+	wait_for_fifo(4, par);
+	aty_st_le32(DP_PIX_WIDTH, par->crtc.dp_pix_width, par);
 	aty_st_le32(DP_FRGD_CLR, color, par);
 	aty_st_le32(DP_SRC,
 		    BKGD_SRC_BKGD_CLR | FRGD_SRC_FRGD_CLR | MONO_SRC_ONE,
@@ -284,7 +286,7 @@ void atyfb_imageblit(struct fb_info *inf
 {
 	struct atyfb_par *par = (struct atyfb_par *) info->par;
 	u32 src_bytes, dx = image->dx, dy = image->dy, width = image->width;
-	u32 pix_width_save, pix_width, host_cntl, rotation = 0, src, mix;
+	u32 pix_width, rotation = 0, src, mix;
 
 	if (par->asleep)
 		return;
@@ -296,8 +298,7 @@ void atyfb_imageblit(struct fb_info *inf
 		return;
 	}
 
-	pix_width = pix_width_save = aty_ld_le32(DP_PIX_WIDTH, par);
-	host_cntl = aty_ld_le32(HOST_CNTL, par) | HOST_BYTE_ALIGN;
+	pix_width = par->crtc.dp_pix_width;
 
 	switch (image->depth) {
 	case 1:
@@ -370,12 +371,11 @@ void atyfb_imageblit(struct fb_info *inf
 		mix = FRGD_MIX_D_XOR_S | BKGD_MIX_D;
 	}
 
-	wait_for_fifo(6, par);
-	aty_st_le32(DP_WRITE_MASK, 0xFFFFFFFF, par);
+	wait_for_fifo(5, par);
 	aty_st_le32(DP_PIX_WIDTH, pix_width, par);
 	aty_st_le32(DP_MIX, mix, par);
 	aty_st_le32(DP_SRC, src, par);
-	aty_st_le32(HOST_CNTL, host_cntl, par);
+	aty_st_le32(HOST_CNTL, HOST_BYTE_ALIGN, par);
 	aty_st_le32(DST_CNTL, DST_Y_TOP_TO_BOTTOM | DST_X_LEFT_TO_RIGHT | rotation, par);
 
 	draw_rect(dx, dy, width, image->height, par);
@@ -424,8 +424,4 @@ void atyfb_imageblit(struct fb_info *inf
 			aty_st_le32(HOST_DATA0, get_unaligned_le32(pbitmap), par);
 		}
 	}
-
-	/* restore pix_width */
-	wait_for_fifo(1, par);
-	aty_st_le32(DP_PIX_WIDTH, pix_width_save, par);
 }

