Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:39:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DE3BE58055F;
	Tue, 18 Dec 2018 07:44:30 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 07:44:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ayn4ZjBVuGBWNNzO+wb5aVOmqqRfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHtadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe270bfHwi/Fb/hLxzr96JLIchE6ofGQWrJwacrRxlc1FwPeiVWQ?=
 =?us-ascii?q?r5HuMjSO1usTqWeb6fBsVeC1h2E7qwFxuDmvxtwwionOnoIVyk7L9T9iwIYyI9?=
 =?us-ascii?q?21U097Ydi4EJROsyGWLZd5QsQnQ2xxvisx174IuYajcSQU1JgqwwTTZ+GJfoSW?=
 =?us-ascii?q?+B7vSeWcLStiiH9ker+znwu+/Ey+xuHmVsS50ExGoypbntXWuX0A2Rre4dWdRP?=
 =?us-ascii?q?Rn5EeuwzOP2hjT6u5aJUA0krLWK4AuwrEujJofq0fDETHsmEXwkqCWcl8o+u+y?=
 =?us-ascii?q?6+Toernmp5mcOJFoigzmLKgihsiyDf4lPgUAQWSX4/mw2b7/8UHjQbhHjOU6kq?=
 =?us-ascii?q?zDv5DbIcQbqLS5AwhQ0os77xa/DjGm0MkXnHUeL1JKZgiHj473NFHKOfz4Cvm+?=
 =?us-ascii?q?g1Kynzdx3P3GILLhDYvXLnTZk7fuY6x960hCxwo319xf4IhUCr4ZLPLpRkDxrM?=
 =?us-ascii?q?DYDgM+MwGsx+bnCdZ92Z0EVWOAH6+UK6fSsV6O5uIyLOiAfo4VuDDhK/c74/7i?=
 =?us-ascii?q?l2M2mVgYfaOxx5sYdGi4Huh6I0WeeXfsgs0OEWYWvgUkS+zmkl2CUSNJaHa0UK?=
 =?us-ascii?q?Ix/TU7CIOgDYfeSYGhmr2B3CGnHpJIYmBKEEyDEXDtd4+cQfcDdDqSItN9kjwD?=
 =?us-ascii?q?TbWhSYgh2g+0uA/5zLpnKOzU+ioDuJLn1dh14fDTlB4o+Tx1CcSdz3+CT2Vukm?=
 =?us-ascii?q?wUQD822bh1oVZhxVebzah4n/tYGMRJ6PNSUgc6Mp3cw/ZgC9/oWALMZdOJSFeg?=
 =?us-ascii?q?QtW7DjA9VNMxw9kSY0ljH9WulAzM3y2vA7UNjbyEGIQ08r7A33j2P8t9yGzJ1K?=
 =?us-ascii?q?87g1kiQ8tAL2umhqFk+gjXBo7JlViZlqmweaQd2i7N6HmMzW6UsE5EVw5wVL3P?=
 =?us-ascii?q?XWoDaUvOsdT5+kTCQqezBrs9LAtO19SOKqtQZd3vllVJWvHjNNPaY2KynmewAQ?=
 =?us-ascii?q?2FxreNbIrsZmUc0z/RCEkCkwAP43mGMRIyCTumo2LbFDZuD07gY1vw8elir3O2?=
 =?us-ascii?q?VlI7wBuUb0J/zba1+gQahfqHS/wN2LIJoyMhqzRyHFag0NPaEduApwx9fKpCZd?=
 =?us-ascii?q?Mx+ktI1WXctwZlJJyvM7hihkICcwRwp07uyxR3CoBHkcg2rHMrzBB+Kb6C3FNG?=
 =?us-ascii?q?bTOY2ZHwOrvYKmTp+BCvaqjW2kzR0dqM+6cP7ug4pEvnvA2zCkUi9HBn2cFP03?=
 =?us-ascii?q?SA/pXKEBYSUZXpX0kt8xh1ub7bbTc95o/OznJsLLS7vSXE29IqA+sl1A2tf9Ne?=
 =?us-ascii?q?MKOCCQ/zHNcWB8moKOw2hVepaggIM/xV9K4xJ8mmbeeJ2La3POZ8mzKrlWRG4J?=
 =?us-ascii?q?1n3k2Q7SZ9S+7I0IwDw/GXxQaHUzb8jFG8ssH4g4xEZDcSHnahxijgHoJeeqpy?=
 =?us-ascii?q?fYMTA2e0P8K33sl+h4LqW3NA7l6jBk8J19WzeRWPaFzxxwtQ2loNoXymgCe30y?=
 =?us-ascii?q?Z7kzU0oaWBxizOxOLieQEDOm5KQmlikFjtLZK1j9AcQEincQwpmAG56kb9wqhR?=
 =?us-ascii?q?vL5/IHXLQUdUYyj2KHlvU6uxtraYY89D8ogosThRUOmnZVCaS7j9owYV0i/5Hm?=
 =?us-ascii?q?tewiw7eC+uupnjgxN6j2edJm5prHXFYcFw2Qvf5NvESP5TxDUGXip4iTrQBlSm?=
 =?us-ascii?q?JNmm59aUl5TCsuC4SW2hUIZecS3qzYOGqSu66ndmARy5n/CvhNLnFRI23jP819?=
 =?us-ascii?q?lvTS/ItgrzYpH316SmNuJqZklpC0X768ZgGIF+k40wiYoU2XgbgJWV4HUGnX3y?=
 =?us-ascii?q?MdVdxaLxcn4NSSQXzN7S5QjvwFdjIW6Rx4LlSnWdxdNsZ9qgbWMXwC49791KB7?=
 =?us-ascii?q?2S7LxLhiZ1plu4rQTMYflyhDsdyP0u6GIEjOENogYi0iKdArUKF0lCISPsjwiI?=
 =?us-ascii?q?78y5rKhPYWavcLuw21BkkdGvEr6CuR1cV2jjepg5AyBw9Mp/PUnI0H3y7IHkZd?=
 =?us-ascii?q?bRYcgSth2SjxfPkexVJIgtmfoNgCptIXj9smE9y+4nkRxu2om3vJSAK2Vo5q64?=
 =?us-ascii?q?AwRXNjvoZ8MI4THtjL1TnsKX34CpA5VgFS8HXJruTfK0Dj0Sse7rOBqJED05sn?=
 =?us-ascii?q?2bA6bQHReD6Ed6qHLCC4ukOGuQJHkd0NVuXh2dJFFEjQAQXTU6mIM5Fw+wyMzg?=
 =?us-ascii?q?dkd5+i4e5lriphRQzeJoMgH1Un3Dqwewdjc0VJ+fIQJU7g5Y4kfaL9ee4vhvHy?=
 =?us-ascii?q?1C/Z2hsQ+NKnGdZwtSFmEEQUiEB1HlPrmz6tjM6emYBuyiL/TQZbWCs/BRV/CN?=
 =?us-ascii?q?xZi3yItp4y6MNtmTPnllF/A62k1DXW1gG8TEgToPTTYblznKb86dqxex4Sl3rs?=
 =?us-ascii?q?G58PT2VwPj/4qPC71OMdpx/xC6m7uMN+mVhCxhMzZXyosMxWPUyLgYxFMSiz9h?=
 =?us-ascii?q?dziuEbQDtC7BVqHQmrVQDx4UdSxzLtZI77kn0wlJOM7bjM7117Figv40DVdFSU?=
 =?us-ascii?q?LumsWzacMWJGG9MUvNBFyXO7SeOT3L38b3bLumRr1Nl+pUrQO/uDaBH0/nPzSO?=
 =?us-ascii?q?jD3pVxGpMeFRgyCXJh1euIehchlzDWjvVs7pahq+MNVvlz053aU0hm/WNW4bKT?=
 =?us-ascii?q?V8b0JNrriK4SxEmPlwB2xB4WRjLeSfnyaZ7u/YKosZsPdxAyR0kf5a72o+y7dP?=
 =?us-ascii?q?8C5EQ/l1kjPIrtFyu1GmjvWPyj1/XRtOsDlLgoeLvURkOarB95hAWWzL/BQC7W?=
 =?us-ascii?q?iLDxQKpt1lCsDguqxKy9jPkr7zJylG897O4cQcAM3Ue4q7Ny8INxb4UBrJEAwA?=
 =?us-ascii?q?TCSwNmCX00hAjPa69XCPqJU+7J/2l8xdZKVcUQkOG/ocQm9lBt0ZPJBvXj4+ir?=
 =?us-ascii?q?mdxJoT6HO46huXT8VAv4vbUeqSDO/0LzCxjL9Yah9OyrT9e9dAfrbn0lBvPwEp?=
 =?us-ascii?q?1L/BHFDdCJUU+nVs?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAA7FRlch0O0hNFaChkBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgVEEAQEBAQELAYNZEieMFV+LGimBZBEDl0YUgV0XGBMBhx0?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNiQBgmEBAQEBAgEBAiQTPwYJAQEKD?=
 =?us-ascii?q?goJDBkDDAVJEwUWgweBeQgFqEszijSMP3qBHIERgxKEOwEaBAFlgnqCJgKJIhK?=
 =?us-ascii?q?CB4UVkFQHApFUDBiRV5lzgUaCDnCDPJB8HgEBMQGBBAEBixMBDheCJwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAA7FRlch0O0hNFaChkBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgVEEAQEBAQELAYNZEieMFV+LGimBZBEDl0YUgV0XGBMBhx0iNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEKCwkIKS+CNiQBgmEBAQEBAgEBAiQTPwYJAQEKDgoJDBkDDAVJEwU?=
 =?us-ascii?q?WgweBeQgFqEszijSMP3qBHIERgxKEOwEaBAFlgnqCJgKJIhKCB4UVkFQHApFUD?=
 =?us-ascii?q?BiRV5lzgUaCDnCDPJB8HgEBMQGBBAEBixMBDheCJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="55647230"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 07:44:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727099AbeLRPoU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 10:44:20 -0500
Received: from mga05.intel.com ([192.55.52.43]:59200 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726999AbeLRPoT (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 10:44:19 -0500
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 07:44:18 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="101613051"
Received: from sjchrist-coffee.jf.intel.com (HELO linux.intel.com) ([10.54.74.154])
  by orsmga006.jf.intel.com with ESMTP; 18 Dec 2018 07:44:18 -0800
Date: Tue, 18 Dec 2018 07:44:18 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Andy Lutomirski <luto@kernel.org>
Cc: Dave Hansen <dave.hansen@intel.com>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        X86 ML <x86@kernel.org>,
        Platform Driver <platform-driver-x86@vger.kernel.org>,
        linux-sgx@vger.kernel.org, nhorman@redhat.com,
        npmccallum@redhat.com, "Ayoun, Serge" <serge.ayoun@intel.com>,
        shay.katz-zamir@intel.com,
        Haitao Huang <haitao.huang@linux.intel.com>,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        "Svahn, Kai" <kai.svahn@intel.com>, mark.shanahan@intel.com,
        Suresh Siddha <suresh.b.siddha@intel.com>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Darren Hart <dvhart@infradead.org>,
        Andy Shevchenko <andy@infradead.org>,
        "open list:X86 ARCHITECTURE (32-BIT AND 64-BIT)" 
        <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v17 18/23] platform/x86: Intel SGX driver
Message-ID: <20181218154417.GC28326@linux.intel.com>
References: <20181116010412.23967-1-jarkko.sakkinen@linux.intel.com>
 <20181116010412.23967-19-jarkko.sakkinen@linux.intel.com>
 <7d5cde02-4649-546b-0f03-2d6414bb80b5@intel.com>
 <20181217180102.GA12560@linux.intel.com>
 <20181217183613.GD12491@linux.intel.com>
 <20181217184333.GA26920@linux.intel.com>
 <ccfb67a0-fd8d-82c8-8018-fd68e901f287@intel.com>
 <CALCETrX0W4dhFJBHEbDbKed_QZxmw6ZNMajfsoVgqGqhMB0nDg@mail.gmail.com>
 <20181217222047.GG12491@linux.intel.com>
 <CALCETrX1HXZvMk8UM6wV5StTj+vvqehAvybJYk66At60t91QGQ@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CALCETrX1HXZvMk8UM6wV5StTj+vvqehAvybJYk66At60t91QGQ@mail.gmail.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 17, 2018 at 08:59:54PM -0800, Andy Lutomirski wrote:
> On Mon, Dec 17, 2018 at 2:20 PM Sean Christopherson
> <sean.j.christopherson@intel.com> wrote:
> >
> 
> > My brain is still sorting out the details, but I generally like the idea
> > of allocating an anon inode when creating an enclave, and exposing the
> > other ioctls() via the returned fd.  This is essentially the approach
> > used by KVM to manage multiple "layers" of ioctls across KVM itself, VMs
> > and vCPUS.  There are even similarities to accessing physical memory via
> > multiple disparate domains, e.g. host kernel, host userspace and guest.
> >
> 
> In my mind, opening /dev/sgx would give you the requisite inode.  I'm
> not 100% sure that the chardev infrastructure allows this, but I think
> it does.

My fd/inode knowledge is lacking, to say the least.  Whatever works, so
long as we have a way to uniquely identify enclaves.

> > The only potential hiccup I can see is the build flow.  Currently,
> > EADD+EEXTEND is done via a work queue to avoid major performance issues
> > (10x regression) when userspace is building multiple enclaves in parallel
> > using goroutines to wrap Cgo (the issue might apply to any M:N scheduler,
> > but I've only confirmed the Golang case).  The issue is that allocating
> > an EPC page acts like a blocking syscall when the EPC is under pressure,
> > i.e. an EPC page isn't immediately available.  This causes Go's scheduler
> > to thrash and tank performance[1].
> 
> What's the issue, and how does a workqueue help?  I'm wondering if a
> nicer solution would be an ioctl to add lots of pages in a single
> call.

Adding pages via workqueue makes the ioctl itself fast enough to avoid
triggering Go's rescheduling.  A batched EADD flow would likely help,
I just haven't had the time to rework the userspace side to be able to
test the performance.

> >
> > Alternatively, we could change the EADD+EEXTEND flow to not insert the
> > added page's PFN into the owner's process space, i.e. force userspace to
> > fault when it runs the enclave.  But that only delays the issue because
> > eventually we'll want to account EPC pages, i.e. add a cgroup, at which
> > point we'll likely need current->mm anyways.
> 
> You should be able to account the backing pages to a cgroup without
> actually sticking them into the EPC, no?  Or am I misunderstanding?  I
> guess we'll eventually want a cgroup to limit use of the limited EPC
> resources.

It's the latter, a cgroup to limit EPC.  The mm is used to retrieve the
cgroup without having track e.g. the task_struct.
