Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:32:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B717B58037D;
	Thu, 22 Nov 2018 15:22:12 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 15:22:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ADYETQhdq1OK7ArYtgN9XL6OvlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/YBON2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+SyzKbWyTXIcvNY1inn6IjOaB8hp+yDUqxrccHMzkQvFQTFgUuU?=
 =?us-ascii?q?qYH+PTOV0foCs2yV7+V+T+KvjXQoqwdsrTex3ccgkI7Jhpgayl3d8yhy3Yg7Jd?=
 =?us-ascii?q?q9SEFhYN6kFoNdtyKEOItsRMMtXWVotDw9yr0ctp62ejUBxpc/xxPHdfCLb4yF?=
 =?us-ascii?q?7gj+WOufPzt0nm9pdbGjixqo8EWtyPXwWte13VpUsiZIl8XAu3UQ2xDP9sSLVv?=
 =?us-ascii?q?5w8lqg1DqTygze7+9JLloqmqrVLpMszKM8m5UdsUnGBSD7nFv5g7WTe0gn+eWl?=
 =?us-ascii?q?7+rnb7P7rZGGLYB0kBvxMqE2l8y/H+s4Ng8OUnCF+eSzyrLj51f1QLZUgf0slK?=
 =?us-ascii?q?nWrpTaKd4cpq6jDA9Zyocj6xChADe6yNkUg2ULIVZfdB6agYXlJUvCLO37APuj?=
 =?us-ascii?q?mVihkTVmy+jDPrL7A5XNKnbDkK3mfbZ480NczAszzdZC55NbE70BI+z8WlX3tN?=
 =?us-ascii?q?PGCh81Kgu0wujhCNpjzIMTQnyPAqCHP6PIq1OI5fwgI/OKZIALvDbxMf8l5+Th?=
 =?us-ascii?q?jXMhg18SYbGp3YcLaHC/BvlmJ0SZYXnyjdsbHmYKoxEzTOjriF2ETD5SaGy+X6?=
 =?us-ascii?q?M65jEnFo2mCZ3PSZyqgLyExC27BIFZZnhaClCQFnflb4WEVO0NaCKOOMBhlSYI?=
 =?us-ascii?q?Vbi8S4A70xGuuxT3y75mLurS5y0Zuojv1Nlz5+3Pix4y8SZ4ANia02GIV2t0hH?=
 =?us-ascii?q?8HRycq3KBjpkxw0lWD0a9mjPBCFtxT4PVJUgE9NZPHy+x6CtbyWh/Of9uTSVam?=
 =?us-ascii?q?RMmmDi81Tt4r39AOZEN9Ec24jh/fxyqqH6MVl7uTCZMu6aLc33/xJ8Vnx3bczq?=
 =?us-ascii?q?YhjUIrQs9ONW2gm65++BLfB4/Pk0WFiamqcb4Q0zLK9GeG1WCOpl1XUBZsUaXZ?=
 =?us-ascii?q?WnASfkjWos7/5k/YS7+uCK4oMg1OycOZLqtKa9vpjUhJRfv5OdTeZX6xlHm0BR?=
 =?us-ascii?q?qS2ryMa4/qcX0H3CrBEEgEjxwT/XGeOAcjHCihvXzRACZuFV31ZUPs6vdxqHW8?=
 =?us-ascii?q?Qk8wzAGKaklh2qGx+h4Ug/ycVvwS0qgFuCcntzV7AlK908jKBNqHogprZL9cbs?=
 =?us-ascii?q?8l4FdbyWLZsBRwMYG6IKB8mFESaQR3sFno1xVsFIpAl9MnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupB2pFksn83Vgz9lV03?=
 =?us-ascii?q?ud6o/WDAYIVpLxSEI39xl8p7HVeSQ944LU1XtxMai7qDPC2tQpBPc7xRakZdtQ?=
 =?us-ascii?q?LKSEFArqGc0AG8euMPAqm0Subh8cJu9S8LA7Psy4ePqGwqKkJ/tgky+8gmRB44?=
 =?us-ascii?q?B91VyM+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jIs2qxtlkm5HhQX9Z9F65CFMA18+kYh6Sb1373Q1N2kUbu32nmS2kzz?=
 =?us-ascii?q?NqlzEltLaQ3CvLw+76bhoIJnZLRHV+jVfrOYW0ldEaU1SyYAgziRSl4lz2x65F?=
 =?us-ascii?q?q6RlLmnfWFtHcDLyL25/TKSwrL2CY8hU5ZMssCVXVvm8YF+ARr78pRsazz3sH2?=
 =?us-ascii?q?9EyD8ncDGqv43znwZmh2KFMHZzsH3ZdNlwxBfe/tDdReRd3iEbRCl+kjTXAlm8?=
 =?us-ascii?q?P9+0/dSbjZvDs+a+V36/WZ1XayXk0YSAtC6j721wHRK/h+yzmsHgEQUi0y/0zc?=
 =?us-ascii?q?NqVSbLrBb7eIXrzL61MeFkfklpAl/z9cx6F5p6kosxgpEQxHcbio+U/XoBjWf8?=
 =?us-ascii?q?L9Fb1bjiY3oKQD4B28TV7xT92E1/MnKJwJr0V3WHzctmfdW6YGIW2iQm4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTvlxuS?=
 =?us-ascii?q?7tCytqVXZHu1fri220pzhtShDLCEogFBV3f1YJYiHSls7sphNFLAymH86obheN?=
 =?us-ascii?q?PId9IcqgWUkwvcj+hSMJ8xk/sKhSl9Nm7ns3wq1fU7jQBw0pGgp4eINX9t/K2i?=
 =?us-ascii?q?Dx5cNz31Yd4T+z73gaZfmMaWw56gHpF7FjoXW5voSOqiECgOuvT/KwaODDo8p2?=
 =?us-ascii?q?+HGbrYGA+T8kZnoGjJE5C2LHGXP3gZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lZSwuR5iYKBpW8xtO50PIMcGF6uJzHi?=
 =?us-ascii?q?dY/oCurQCXK2ybYRhIAn8NWkCeG1/jObyu78Ha8+eEHuq+M+fOYbKWpOxcTfiI?=
 =?us-ascii?q?wIyg0pB88zaQLMmPPWRiD/4m2kpFR395AN/UmzEOSywRiiLMYNSXpBa6+i1rsM?=
 =?us-ascii?q?+/9O7nVx7o5YuKE7FSK8lg+wiqgaefMO6dnCZ4KTFF1pMV2H/H0r4f0EQJiyFp?=
 =?us-ascii?q?cTmtHq8NtSrMTKLWh69WAAQXayJ1NMtU8a082hNBNtLcitPwzrR4lOI6C09ZVV?=
 =?us-ascii?q?z9ncGkfcwKLH+8NFPEB0aLNa6KJT7Rw8HwbqOzV6dQjPhPtxCrvTabEknjPimM?=
 =?us-ascii?q?ljXzVhCvN/1Mgz+fPBBEpI69dRNtA3D5TN36ch27LMN3jTouzLIum3PFLnQcPi?=
 =?us-ascii?q?Z8ck9Xqr2Q7DhVgvF+G2xH83pkIvOImyef7+nENJkWteFnDThzl+Jf+H460ada?=
 =?us-ascii?q?7DlYRPxpnyvftsJuo1CjkuWV1jVrSgZBqjZVi4KNpkhiPaTZ9p9dWXfL5h4N7G?=
 =?us-ascii?q?OQCwgUqNthENHgp6dQyt3XnqLpNDhC687U/dcbB8XMKMOIKnwhMR/oGD7SFAQE?=
 =?us-ascii?q?TD6rOnvZh0xSi/yS8nyVrp4nqpnjgpYOS7lbVEArGfMeEEhqANsCIJIkFg8jxL?=
 =?us-ascii?q?qaitMYoHmzth/cQO1EsZ3dEPGfG/PiLHCel7YXSQEPxObaKokXfqP2wUprbFV3?=
 =?us-ascii?q?h8yeGU3dWfhPpSBlYAIupkxL/HVlCGop1BS2OUuW/HYPGKvszVYNgQxkbLForW?=
 =?us-ascii?q?+07g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADfOfdbh0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIE5gQInjBGMAIINFJIvhHeBJANMEgEBGA8EAYh?=
 =?us-ascii?q?SIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQEDAQI3BgEBNwEFC?=
 =?us-ascii?q?QEBChUCAQklAwwFIAEFARQhBYMcAYIBAQQKnDg8ih2CH4J2AQEFgTABhWYDBRK?=
 =?us-ascii?q?KW4EcFz6BQYERgxKDAhkEgT8BAYNTgiaJGwqBboQId06PJAmCIIRciigLGF96h?=
 =?us-ascii?q?3g2hwEsjReKRgYCCQcPIYElbIEhTTAIgycSAYIIDBcSiEyFXx8yAQGBAAMBASE?=
 =?us-ascii?q?TiWOCPgEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAADfOfdbh0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIE5gQInjBGMAIINFJIvhHeBJANMEgEBGA8EAYhSIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQEDAQI3BgEBNwEFCQEBChUCAQklAww?=
 =?us-ascii?q?FIAEFARQhBYMcAYIBAQQKnDg8ih2CH4J2AQEFgTABhWYDBRKKW4EcFz6BQYERg?=
 =?us-ascii?q?xKDAhkEgT8BAYNTgiaJGwqBboQId06PJAmCIIRciigLGF96h3g2hwEsjReKRgY?=
 =?us-ascii?q?CCQcPIYElbIEhTTAIgycSAYIIDBcSiEyFXx8yAQGBAAMBASETiWOCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,267,1539673200"; 
   d="scan'208";a="139258144"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 15:21:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2439076AbeKWKDh (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 05:03:37 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:33994 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2392635AbeKWKDh (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 05:03:37 -0500
Received: by mail-pl1-f194.google.com with SMTP id f12-v6so9802622plo.1
        for <linux-kernel@vger.kernel.org>; Thu, 22 Nov 2018 15:21:55 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=joelfernandes.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=WGnK2W1fNMNjJUmjzBmpHixfeOx8rrinn/2HUMu/9ms=;
        b=j0fvkVfrNDaJKqlIhqgDQc1aP197LuKByPQV8a9DCZW1HRro7pTxuMIczzZQiG8oqh
         gNBaBd34G52KLw+pH1iyYtDWawdrUfxTOgOKM/H5qNieaLDn9eauJZtjtPVGRf9Javhh
         h5IDF+/WxrdZLwXhKMSQ9T5ci+fTguXrMiQL4=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=WGnK2W1fNMNjJUmjzBmpHixfeOx8rrinn/2HUMu/9ms=;
        b=QK96ylShZgdq3Tk5THKfgkvx1iuO35ucAiiAcQIao2f/+lDVj2hkU1uEfxYWTEifSK
         DNp2q4iHk3igEWOgXc7Yr75gkmgvJY351Upp+zpgSrWNeX/y4WZxX4l1hvS8HX0a0TcE
         Oy8f4fikQfUXHlLP79YD76nndYoayjFSLkN45JKJ2VEhAeBnhqc7GzhTVk+doTvaLzL1
         x1lnIPXNxWjEoLPU3xcEkj4sVWOr43GGmz56p06sVNJ5jZTaMCiBpdCSSM/8Ika2Jn2F
         kKlztUE3HOTdVk7Mlcupd6zbCg9amhN6yPwvXKj0+k6pOCsfJHFhgNI+tRSfxnb8M1nI
         RRpA==
X-Gm-Message-State: AA+aEWaszMuGCT2a1NhwgzN20587DEEoV/k/12cdFoxIeaCjfXkZHuTQ
        HhWw9VfChLnLuY1Opbu5am+00CgneYk=
X-Google-Smtp-Source: AFSGD/XfEZTIpG//Te8YOdDUWEzHKhMIec+FJ4M9+kro35NtdeBr61zHDLD0zfeUeYgv2HLy1yYJ+g==
X-Received: by 2002:a17:902:50e:: with SMTP id 14mr5074980plf.141.1542928914652;
        Thu, 22 Nov 2018 15:21:54 -0800 (PST)
Received: from localhost ([2620:0:1000:1601:3aef:314f:b9ea:889f])
        by smtp.gmail.com with ESMTPSA id d3sm73232160pgl.64.2018.11.22.15.21.53
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 22 Nov 2018 15:21:53 -0800 (PST)
Date: Thu, 22 Nov 2018 15:21:52 -0800
From: Joel Fernandes <joel@joelfernandes.org>
To: linux-kernel@vger.kernel.org
Cc: Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Andy Lutomirski <luto@kernel.org>,
        Hugh Dickins <hughd@google.com>,
        Khalid Aziz <khalid.aziz@oracle.com>,
        linux-api@vger.kernel.org, linux-kselftest@vger.kernel.org,
        linux-mm@kvack.org,
        =?iso-8859-1?Q?Marc-Andr=E9?= Lureau 
        <marcandre.lureau@redhat.com>,
        Matthew Wilcox <willy@infradead.org>,
        Mike Kravetz <mike.kravetz@oracle.com>,
        Shuah Khan <shuah@kernel.org>,
        Stephen Rothwell <sfr@canb.auug.org.au>
Subject: Re: [PATCH -next 2/2] selftests/memfd: modify tests for
 F_SEAL_FUTURE_WRITE seal
Message-ID: <20181122232152.GA17060@google.com>
References: <20181120052137.74317-1-joel@joelfernandes.org>
 <20181120052137.74317-2-joel@joelfernandes.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181120052137.74317-2-joel@joelfernandes.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Nov 19, 2018 at 09:21:37PM -0800, Joel Fernandes (Google) wrote:
> Modify the tests for F_SEAL_FUTURE_WRITE based on the changes
> introduced in previous patch.
> 
> Also add a test to make sure the reopen issue pointed by Jann Horn [1]
> is fixed.
> 
> [1] https://lore.kernel.org/lkml/CAG48ez1h=v-JYnDw81HaYJzOfrNhwYksxmc2r=cJvdQVgYM+NA@mail.gmail.com/
> 
> Cc: Jann Horn <jannh@google.com>
> Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
> ---
>  tools/testing/selftests/memfd/memfd_test.c | 88 +++++++++++-----------
>  1 file changed, 44 insertions(+), 44 deletions(-)

Since we squashed [1] the mm/memfd patch modifications suggested by Andy into
the original patch, I also squashed the selftests modifications and appended
the patch inline below if you want to take this instead:

[1] https://lore.kernel.org/lkml/20181122230906.GA198127@google.com/T/#m8ba68f67f3ec24913a977b62bcaeafc4b194b8c8

---8<-----------------------

From: "Joel Fernandes (Google)" <joel@joelfernandes.org>
Subject: [PATCH v4] selftests/memfd: add tests for F_SEAL_FUTURE_WRITE seal

Add tests to verify sealing memfds with the F_SEAL_FUTURE_WRITE works as
expected.

Signed-off-by: Joel Fernandes (Google) <joel@joelfernandes.org>
---
 tools/testing/selftests/memfd/memfd_test.c | 74 ++++++++++++++++++++++
 1 file changed, 74 insertions(+)

diff --git a/tools/testing/selftests/memfd/memfd_test.c b/tools/testing/selftests/memfd/memfd_test.c
index 10baa1652fc2..c67d32eeb668 100644
--- a/tools/testing/selftests/memfd/memfd_test.c
+++ b/tools/testing/selftests/memfd/memfd_test.c
@@ -54,6 +54,22 @@ static int mfd_assert_new(const char *name, loff_t sz, unsigned int flags)
 	return fd;
 }
 
+static int mfd_assert_reopen_fd(int fd_in)
+{
+	int r, fd;
+	char path[100];
+
+	sprintf(path, "/proc/self/fd/%d", fd_in);
+
+	fd = open(path, O_RDWR);
+	if (fd < 0) {
+		printf("re-open of existing fd %d failed\n", fd_in);
+		abort();
+	}
+
+	return fd;
+}
+
 static void mfd_fail_new(const char *name, unsigned int flags)
 {
 	int r;
@@ -255,6 +271,25 @@ static void mfd_assert_read(int fd)
 	munmap(p, mfd_def_size);
 }
 
+/* Test that PROT_READ + MAP_SHARED mappings work. */
+static void mfd_assert_read_shared(int fd)
+{
+	void *p;
+
+	/* verify PROT_READ and MAP_SHARED *is* allowed */
+	p = mmap(NULL,
+		 mfd_def_size,
+		 PROT_READ,
+		 MAP_SHARED,
+		 fd,
+		 0);
+	if (p == MAP_FAILED) {
+		printf("mmap() failed: %m\n");
+		abort();
+	}
+	munmap(p, mfd_def_size);
+}
+
 static void mfd_assert_write(int fd)
 {
 	ssize_t l;
@@ -692,6 +727,44 @@ static void test_seal_write(void)
 	close(fd);
 }
 
+/*
+ * Test SEAL_FUTURE_WRITE
+ * Test whether SEAL_FUTURE_WRITE actually prevents modifications.
+ */
+static void test_seal_future_write(void)
+{
+	int fd, fd2;
+	void *p;
+
+	printf("%s SEAL-FUTURE-WRITE\n", memfd_str);
+
+	fd = mfd_assert_new("kern_memfd_seal_future_write",
+			    mfd_def_size,
+			    MFD_CLOEXEC | MFD_ALLOW_SEALING);
+
+	p = mfd_assert_mmap_shared(fd);
+
+	mfd_assert_has_seals(fd, 0);
+
+	mfd_assert_add_seals(fd, F_SEAL_FUTURE_WRITE);
+	mfd_assert_has_seals(fd, F_SEAL_FUTURE_WRITE);
+
+	/* read should pass, writes should fail */
+	mfd_assert_read(fd);
+	mfd_assert_read_shared(fd);
+	mfd_fail_write(fd);
+
+	fd2 = mfd_assert_reopen_fd(fd);
+	/* read should pass, writes should still fail */
+	mfd_assert_read(fd2);
+	mfd_assert_read_shared(fd2);
+	mfd_fail_write(fd2);
+
+	munmap(p, mfd_def_size);
+	close(fd2);
+	close(fd);
+}
+
 /*
  * Test SEAL_SHRINK
  * Test whether SEAL_SHRINK actually prevents shrinking
@@ -945,6 +1018,7 @@ int main(int argc, char **argv)
 	test_basic();
 
 	test_seal_write();
+	test_seal_future_write();
 	test_seal_shrink();
 	test_seal_grow();
 	test_seal_resize();
-- 
2.19.1.1215.g8438c0b245-goog

