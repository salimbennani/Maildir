Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:00:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E7CCB58049E
	for <like.xu@linux.intel.com>; Sun, 23 Dec 2018 03:42:50 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Dec 2018 03:42:50 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ASTzeLBVdvbyXskS6PrdwkG0OX03V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSEvqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gqxYrhympRN/zZPaYJmXOfR8ca7RYN0XSXZfUcZKTCFNHp+w?=
 =?us-ascii?q?YpETA+cbIepUs4/wrEYOoxukAgmsAfvixDhSiX/s3q0xzvosHhvY3AM+Bt4DrH?=
 =?us-ascii?q?TVrNHvO6cUTO++0a7FzTDZYPNM2jfx8pTHfQo/of6SRL5/a8rQyU01GAPDk1qd?=
 =?us-ascii?q?so3lPzeP2eQLrmeU8fBsWv6oi2I9tgFxoSGiy8ExgYfKnoIY0k7I+Tl6zYovON?=
 =?us-ascii?q?G0VU12bcS6HJZetyyWLZZ6T8E6T2xruSs20KAKtJy5cSQQ1ZgqxR3SZ+aaf4SV?=
 =?us-ascii?q?7R/uUvuaLy1ii3J/Yr2/gg6/8Ui+xe34Ucm5yFJKritektnQrXABzRPT6s6aSv?=
 =?us-ascii?q?dn+UehwzmP2xjS6uFCP080ibLWJ4A9zrMzjJYfrFnPEyzslEnogqKbdl8o9vWq?=
 =?us-ascii?q?5uj/Z7XpvJ6cN4t6igHkNaQun9SyAf0mPQgLQmiX4Pmz26P9/ULnRLVGl+Y5kq?=
 =?us-ascii?q?7EsJDcOcsUuLW5DwhR0oYi6BawES2q0dsFnXQfKFJFeRSHj5XmOl3UIfD4C+u/?=
 =?us-ascii?q?jEqokDtx2//GObjhD47LLnjElrfhcrB961NGxAo019Bf6IpYCqsdL/LrRk/xqN?=
 =?us-ascii?q?vYAwc9Mwy1wOboFs9x14wDWW+UBq+ZMaXSsUKH5+41IumMYpMVtyj5K/Q/+/Hu?=
 =?us-ascii?q?ino5yhcge7K0184XdGygBaYhZEGYemb3xNEGF2gMo0w5VuOtjVSDVTtaYTG1R7?=
 =?us-ascii?q?494TcgT5urCJqGSo2zjbjS4SGgA5cDY2lHDkyLQ27lcpjBV/oSZSbXOMJ4jzEf?=
 =?us-ascii?q?SZCnTIku0wzosxX1nKF6JOjZ8TFNqJT4ydJu7PfSnxxhyTshFsmYziSBQn95mk?=
 =?us-ascii?q?sOQDk52r05plZyjh+a3K1lxuRAHvRV4PVGVBp8MoTTi6RgCtvyUxjNONeETlqr?=
 =?us-ascii?q?WM6hBxk1T9Q42dhIZFxyX52uhw7C0wKlArUOkLrNCIYz6qjR1mK3Jso7wmuV+r?=
 =?us-ascii?q?MmigwDS9FMfUavmKM63hnXDojF2xGcnrypM68VwiOI/XaHxGyClEBcWQh8XOPO?=
 =?us-ascii?q?WjYCZR2F/pzC+kreQur2WvwcOQxbxJvaJw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AsAgBJdB9chxHrdtBjgheBMYJijHaLG?=
 =?us-ascii?q?oMJlmcUgV0XGBSHMCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+COgUCAxgOgmE?=
 =?us-ascii?q?DAwECJB8KLAMBAgYBAT4HAwgDAVMHEgWDHYICAQMBpw0zih2HfoRBghaBEYJdh?=
 =?us-ascii?q?R6FdwKJTYYWkWgHApFdDBiJfodoiVmQUIFGgg4zGjSDK4InFxKOC3KBBAMgizC?=
 =?us-ascii?q?BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AsAgBJdB9chxHrdtBjgheBMYJijHaLGoMJlmcUgV0XGBS?=
 =?us-ascii?q?HMCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+COgUCAxgOgmEDAwECJB8KLAMBA?=
 =?us-ascii?q?gYBAT4HAwgDAVMHEgWDHYICAQMBpw0zih2HfoRBghaBEYJdhR6FdwKJTYYWkWg?=
 =?us-ascii?q?HApFdDBiJfodoiVmQUIFGgg4zGjSDK4InFxKOC3KBBAMgizCBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,386,1539673200"; 
   d="scan'208";a="46140073"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Dec 2018 03:42:50 -0800
Received: from localhost ([::1]:47562 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gb29h-0003Ay-Ff
	for like.xu@linux.intel.com; Sun, 23 Dec 2018 06:42:49 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50491)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mark.cave-ayland@ilande.co.uk>) id 1gb26M-0000jq-0H
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 06:39:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mark.cave-ayland@ilande.co.uk>) id 1gb26J-0008Vi-JC
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 06:39:21 -0500
Received: from chuckie.co.uk ([82.165.15.123]:48728
	helo=s16892447.onlinehome-server.info)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mark.cave-ayland@ilande.co.uk>)
	id 1gb26H-0008Rg-LO; Sun, 23 Dec 2018 06:39:17 -0500
Received: from host86-177-178-114.range86-177.btcentralplus.com
	([86.177.178.114] helo=kentang.home)
	by s16892447.onlinehome-server.info with esmtpsa
	(TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32) (Exim 4.76)
	(envelope-from <mark.cave-ayland@ilande.co.uk>)
	id 1gb26T-0000Xw-Sc; Sun, 23 Dec 2018 11:39:31 +0000
From: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
To: qemu-devel@nongnu.org, qemu-ppc@nongnu.org, richard.henderson@linaro.org,
	david@gibson.dropbear.id.au
Date: Sun, 23 Dec 2018 11:38:56 +0000
Message-Id: <20181223113859.3675-4-mark.cave-ayland@ilande.co.uk>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20181223113859.3675-1-mark.cave-ayland@ilande.co.uk>
References: <20181223113859.3675-1-mark.cave-ayland@ilande.co.uk>
X-SA-Exim-Connect-IP: 86.177.178.114
X-SA-Exim-Mail-From: mark.cave-ayland@ilande.co.uk
X-SA-Exim-Version: 4.2.1 (built Sun, 08 Jan 2012 02:45:44 +0000)
X-SA-Exim-Scanned: Yes (on s16892447.onlinehome-server.info)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x
X-Received-From: 82.165.15.123
Subject: [Qemu-devel] [PATCH 3/6] target/ppc: rework vmul{e, o}{s, u}{b, h,
 w} instructions to use Vsr* macros
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The current implementations make use of the endian-specific macros HI_IDX and
LO_IDX directly to calculate array offsets.

Rework the implementation to use the Vsr* macros so that these per-endian
references can be removed.

Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
---
 target/ppc/int_helper.c | 48 +++++++++++++++++++++++++++---------------------
 1 file changed, 27 insertions(+), 21 deletions(-)

diff --git a/target/ppc/int_helper.c b/target/ppc/int_helper.c
index f084a706ee..dc5c9fb8d8 100644
--- a/target/ppc/int_helper.c
+++ b/target/ppc/int_helper.c
@@ -1118,33 +1118,39 @@ void helper_vmsumuhs(CPUPPCState *env, ppc_avr_t *r, ppc_avr_t *a,
     }
 }
 
-#define VMUL_DO(name, mul_element, prod_element, cast, evenp)           \
+#define VMUL_DO_EVN(name, mul_element, mul_access, prod_access, cast)   \
     void helper_v##name(ppc_avr_t *r, ppc_avr_t *a, ppc_avr_t *b)       \
     {                                                                   \
         int i;                                                          \
                                                                         \
-        VECTOR_FOR_INORDER_I(i, prod_element) {                         \
-            if (evenp) {                                                \
-                r->prod_element[i] =                                    \
-                    (cast)a->mul_element[i * 2 + HI_IDX] *              \
-                    (cast)b->mul_element[i * 2 + HI_IDX];               \
-            } else {                                                    \
-                r->prod_element[i] =                                    \
-                    (cast)a->mul_element[i * 2 + LO_IDX] *              \
-                    (cast)b->mul_element[i * 2 + LO_IDX];               \
-            }                                                           \
+        for (i = 0; i < ARRAY_SIZE(r->mul_element); i += 2) {           \
+            r->prod_access(i >> 1) = (cast)a->mul_access(i) *           \
+                                     (cast)b->mul_access(i);            \
+        }                                                               \
+    }
+
+#define VMUL_DO_ODD(name, mul_element, mul_access, prod_access, cast)   \
+    void helper_v##name(ppc_avr_t *r, ppc_avr_t *a, ppc_avr_t *b)       \
+    {                                                                   \
+        int i;                                                          \
+                                                                        \
+        for (i = 0; i < ARRAY_SIZE(r->mul_element); i += 2) {           \
+            r->prod_access(i >> 1) = (cast)a->mul_access(i + 1) *       \
+                                     (cast)b->mul_access(i + 1);        \
         }                                                               \
     }
-#define VMUL(suffix, mul_element, prod_element, cast)            \
-    VMUL_DO(mule##suffix, mul_element, prod_element, cast, 1)    \
-    VMUL_DO(mulo##suffix, mul_element, prod_element, cast, 0)
-VMUL(sb, s8, s16, int16_t)
-VMUL(sh, s16, s32, int32_t)
-VMUL(sw, s32, s64, int64_t)
-VMUL(ub, u8, u16, uint16_t)
-VMUL(uh, u16, u32, uint32_t)
-VMUL(uw, u32, u64, uint64_t)
-#undef VMUL_DO
+
+#define VMUL(suffix, mul_element, mul_access, prod_access, cast)       \
+    VMUL_DO_EVN(mule##suffix, mul_element, mul_access, prod_access, cast)  \
+    VMUL_DO_ODD(mulo##suffix, mul_element, mul_access, prod_access, cast)
+VMUL(sb, s8, VsrSB, VsrSH, int16_t)
+VMUL(sh, s16, VsrSH, VsrSW, int32_t)
+VMUL(sw, s32, VsrSW, VsrSD, int64_t)
+VMUL(ub, u8, VsrB, VsrH, uint16_t)
+VMUL(uh, u16, VsrH, VsrW, uint32_t)
+VMUL(uw, u32, VsrW, VsrD, uint64_t)
+#undef VMUL_DO_EVN
+#undef VMUL_DO_ODD
 #undef VMUL
 
 void helper_vperm(CPUPPCState *env, ppc_avr_t *r, ppc_avr_t *a, ppc_avr_t *b,
-- 
2.11.0


