Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:54:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CF8F958079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 11:51:38 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 11:51:38 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AmFZI0RNny/NPIMxzQ8Il6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/n8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSSJPDIC+?=
 =?us-ascii?q?YIsBAOUPMvtWr5H/qlUMohayGAehCP/xxT9TnXL6wbQ63v49HQ3awAAsA9QDu2?=
 =?us-ascii?q?nUotXvM6cSVPi4wq/SwjXedfNZxzH96JTVeR8uoPGMQ7NwftTLyUIyEA7FikuQ?=
 =?us-ascii?q?qY37PzOUyOsNqXOW7/B+Wu2yi24osR1xriKzyccrj4nEn4QYwU3H+yVh2Is5O8?=
 =?us-ascii?q?G0RU1hbdK5DZddtDuWO5V4T84iWW1kpSQ3xqUYtZKneCUG0okryhDBZ/CdboSF?=
 =?us-ascii?q?4RzuWPyPLTp7gn9uZaixiAyo8Ue6z+3xTsm030hOripCitTMsnEN1wfP6sicUP?=
 =?us-ascii?q?d98UGh2SuV2wDU8OFELlg4lavdK5E/3r49joQfvVjAEyPshUn6kaybel869uWm?=
 =?us-ascii?q?6+nreKjqq52EO49xkA7+M6AumsKlAeQ/NwgDR3Gb9vq51L3+5EH2XatFjuMona?=
 =?us-ascii?q?ndqZzVPsMbprO/AwBJzIkj8BGzDzOn0NQbg3YLNl1EeA+fgojtOlHOJu34DPil?=
 =?us-ascii?q?j1Stljdr2+7JPrn7DprRKXjDlazsfbB6605axwozy81f64hTCrEbL/L/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNF81oMdR22DGKCYML7JvF+M5+IvJfSMZYAPtDb8Lfgl++Dh?=
 =?us-ascii?q?jXsjlVABeqmp2MhfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGnh5m3?=
 =?us-ascii?q?5NSzIo0aRXp0t7xVGel69ijK92D9tWstdATx03M4KU8e1kCt3oElbFYNaXSVu8?=
 =?us-ascii?q?as+rDTE4UpQ6xNpYMBU1IMmrkh2Wh3niOLQSjbHeQcVsqq8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AuAADDZRFcmBHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBMIJijHSLMplggXMUGBSHPiI1CA0BAwEBAQEBAQIBEwEBAQEBCAsLBhs?=
 =?us-ascii?q?OL4I2BQIDGgEGglwDAwECJB8KKQMDAQIGAQFICAMBUxkFgxyCAgEEp1czhUCEZ?=
 =?us-ascii?q?4w8F4FAP4ERh32FcQKJPYFzhBWRRwmRTAsYgVyIDYddii6PEYFIAoIKMxoIGxW?=
 =?us-ascii?q?DJ4InFxKODEAxgQccim2BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AuAADDZRFcmBHrdtBkHQEBBQEHBQGBUgcBCwGBMIJijHS?=
 =?us-ascii?q?LMplggXMUGBSHPiI1CA0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOL4I2BQIDGgEGg?=
 =?us-ascii?q?lwDAwECJB8KKQMDAQIGAQFICAMBUxkFgxyCAgEEp1czhUCEZ4w8F4FAP4ERh32?=
 =?us-ascii?q?FcQKJPYFzhBWRRwmRTAsYgVyIDYddii6PEYFIAoIKMxoIGxWDJ4InFxKODEAxg?=
 =?us-ascii?q?Qccim2BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="141878669"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 11:51:37 -0800
Received: from localhost ([::1]:47726 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXAXh-0006v0-6n
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 14:51:37 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47372)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <lvivier@redhat.com>) id 1gXAMy-0005cW-2M
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 14:40:33 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <lvivier@redhat.com>) id 1gXAMv-0007lr-S6
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 14:40:31 -0500
Received: from mx1.redhat.com ([209.132.183.28]:59266)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <lvivier@redhat.com>)
	id 1gXAMr-0007hV-Tn; Wed, 12 Dec 2018 14:40:26 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 2D55E308ED44;
	Wed, 12 Dec 2018 19:40:25 +0000 (UTC)
Received: from thinkpad.redhat.com (ovpn-204-190.brq.redhat.com
	[10.40.204.190])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 46B38608C8;
	Wed, 12 Dec 2018 19:40:22 +0000 (UTC)
From: Laurent Vivier <lvivier@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 20:40:09 +0100
Message-Id: <20181212194009.2951-5-lvivier@redhat.com>
In-Reply-To: <20181212194009.2951-1-lvivier@redhat.com>
References: <20181212194009.2951-1-lvivier@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.44]);
	Wed, 12 Dec 2018 19:40:25 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH 4/4] block/sheepdog: Convert from DPRINTF()
 macro to trace events
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Laurent Vivier <lvivier@redhat.com>,
	qemu-block@nongnu.org, qemu-trivial@nongnu.org,
	"Richard W.M. Jones" <rjones@redhat.com>,
	=?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <f4bug@amsat.org>,
	Liu Yuan <namei.unix@gmail.com>, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Laurent Vivier <lvivier@redhat.com>
---
 block/sheepdog.c   | 47 +++++++++++++++++-----------------------------
 block/trace-events | 14 ++++++++++++++
 2 files changed, 31 insertions(+), 30 deletions(-)

diff --git a/block/sheepdog.c b/block/sheepdog.c
index 0125df9d49..a5000d271b 100644
--- a/block/sheepdog.c
+++ b/block/sheepdog.c
@@ -28,6 +28,7 @@
 #include "sysemu/block-backend.h"
 #include "qemu/bitops.h"
 #include "qemu/cutils.h"
+#include "trace.h"
=20
 #define SD_PROTO_VER 0x01
=20
@@ -299,19 +300,6 @@ static inline size_t count_data_objs(const struct Sh=
eepdogInode *inode)
                         (1UL << inode->block_size_shift));
 }
=20
-#undef DPRINTF
-#ifdef DEBUG_SDOG
-#define DEBUG_SDOG_PRINT 1
-#else
-#define DEBUG_SDOG_PRINT 0
-#endif
-#define DPRINTF(fmt, args...)                                           =
\
-    do {                                                                =
\
-        if (DEBUG_SDOG_PRINT) {                                         =
\
-            fprintf(stderr, "%s %d: " fmt, __func__, __LINE__, ##args); =
\
-        }                                                               =
\
-    } while (0)
-
 typedef struct SheepdogAIOCB SheepdogAIOCB;
 typedef struct BDRVSheepdogState BDRVSheepdogState;
=20
@@ -750,7 +738,7 @@ static coroutine_fn void reconnect_to_sdog(void *opaq=
ue)
         Error *local_err =3D NULL;
         s->fd =3D get_sheep_fd(s, &local_err);
         if (s->fd < 0) {
-            DPRINTF("Wait for connection to be established\n");
+            trace_sd_reconnect_to_sdog();
             error_report_err(local_err);
             qemu_co_sleep_ns(QEMU_CLOCK_REALTIME, 1000000000ULL);
         }
@@ -847,7 +835,7 @@ static void coroutine_fn aio_read_response(void *opaq=
ue)
         break;
     case AIOCB_FLUSH_CACHE:
         if (rsp.result =3D=3D SD_RES_INVALID_PARMS) {
-            DPRINTF("disable cache since the server doesn't support it\n=
");
+            trace_sd_aio_read_response();
             s->cache_flags =3D SD_FLAG_CMD_DIRECT;
             rsp.result =3D SD_RES_SUCCESS;
         }
@@ -1639,7 +1627,7 @@ static int sd_open(BlockDriverState *bs, QDict *opt=
ions, int flags,
     s->discard_supported =3D true;
=20
     if (snap_id || tag[0]) {
-        DPRINTF("%" PRIx32 " snapshot inode was open.\n", vid);
+        trace_sd_open(vid);
         s->is_snapshot =3D true;
     }
=20
@@ -2252,7 +2240,7 @@ static void sd_close(BlockDriverState *bs)
     unsigned int wlen, rlen =3D 0;
     int fd, ret;
=20
-    DPRINTF("%s\n", s->name);
+    trace_sd_close(s->name);
=20
     fd =3D connect_to_sdog(s, &local_err);
     if (fd < 0) {
@@ -2429,7 +2417,7 @@ static int sd_create_branch(BDRVSheepdogState *s)
     char *buf;
     bool deleted;
=20
-    DPRINTF("%" PRIx32 " is snapshot.\n", s->inode.vdi_id);
+    trace_sd_create_branch_snapshot(s->inode.vdi_id);
=20
     buf =3D g_malloc(SD_INODE_SIZE);
=20
@@ -2445,7 +2433,7 @@ static int sd_create_branch(BDRVSheepdogState *s)
         goto out;
     }
=20
-    DPRINTF("%" PRIx32 " is created.\n", vid);
+    trace_sd_create_branch_created(vid);
=20
     fd =3D connect_to_sdog(s, &local_err);
     if (fd < 0) {
@@ -2467,7 +2455,7 @@ static int sd_create_branch(BDRVSheepdogState *s)
=20
     s->is_snapshot =3D false;
     ret =3D 0;
-    DPRINTF("%" PRIx32 " was newly created.\n", s->inode.vdi_id);
+    trace_sd_create_branch_new(s->inode.vdi_id);
=20
 out:
     g_free(buf);
@@ -2561,11 +2549,11 @@ static void coroutine_fn sd_co_rw_vector(Sheepdog=
AIOCB *acb)
         }
=20
         if (create) {
-            DPRINTF("update ino (%" PRIu32 ") %" PRIu64 " %" PRIu64 " %l=
d\n",
-                    inode->vdi_id, oid,
-                    vid_to_data_oid(inode->data_vdi_id[idx], idx), idx);
+            trace_sd_co_rw_vector_update(inode->vdi_id, oid,
+                                  vid_to_data_oid(inode->data_vdi_id[idx=
], idx),
+                                  idx);
             oid =3D vid_to_data_oid(inode->vdi_id, idx);
-            DPRINTF("new oid %" PRIx64 "\n", oid);
+            trace_sd_co_rw_vector_new(oid);
         }
=20
         aio_req =3D alloc_aio_req(s, acb, oid, len, offset, flags, creat=
e,
@@ -2670,9 +2658,8 @@ static int sd_snapshot_create(BlockDriverState *bs,=
 QEMUSnapshotInfo *sn_info)
     SheepdogInode *inode;
     unsigned int datalen;
=20
-    DPRINTF("sn_info: name %s id_str %s s: name %s vm_state_size %" PRId=
64 " "
-            "is_snapshot %d\n", sn_info->name, sn_info->id_str,
-            s->name, sn_info->vm_state_size, s->is_snapshot);
+    trace_sd_snapshot_create_info(sn_info->name, sn_info->id_str, s->nam=
e,
+                                  sn_info->vm_state_size, s->is_snapshot=
);
=20
     if (s->is_snapshot) {
         error_report("You can't create a snapshot of a snapshot VDI, "
@@ -2681,7 +2668,7 @@ static int sd_snapshot_create(BlockDriverState *bs,=
 QEMUSnapshotInfo *sn_info)
         return -EINVAL;
     }
=20
-    DPRINTF("%s %s\n", sn_info->name, sn_info->id_str);
+    trace_sd_snapshot_create(sn_info->name, sn_info->id_str);
=20
     s->inode.vm_state_size =3D sn_info->vm_state_size;
     s->inode.vm_clock_nsec =3D sn_info->vm_clock_nsec;
@@ -2726,8 +2713,8 @@ static int sd_snapshot_create(BlockDriverState *bs,=
 QEMUSnapshotInfo *sn_info)
     }
=20
     memcpy(&s->inode, inode, datalen);
-    DPRINTF("s->inode: name %s snap_id %x oid %x\n",
-            s->inode.name, s->inode.snap_id, s->inode.vdi_id);
+    trace_sd_snapshot_create_inode(s->inode.name, s->inode.snap_id,
+                                   s->inode.vdi_id);
=20
 cleanup:
     g_free(inode);
diff --git a/block/trace-events b/block/trace-events
index 49f31966e7..7a92d7b3db 100644
--- a/block/trace-events
+++ b/block/trace-events
@@ -189,3 +189,17 @@ file_xfs_discard(const char* error) "cannot punch ho=
le (%s)"
 file_FindEjectableOpticalMedia(const char *media) "Matching using %s"
 file_setup_cdrom(const char *partition) "Using %s as optical disc"
 file_hdev_is_sg(int type, int version) "SG device found: type=3D%d, vers=
ion=3D%d"
+
+# block/sheepdog.c
+sd_reconnect_to_sdog(void) "Wait for connection to be established"
+sd_aio_read_response(void) "disable cache since the server doesn't suppo=
rt it"
+sd_open(uint32_t vid) "0x%" PRIx32 " snapshot inode was open."
+sd_close(const char *name) "%s"
+sd_create_branch_snapshot(uint32_t vdi) "0x%" PRIx32 " is snapshot."
+sd_create_branch_created(uint32_t vdi) "0x%" PRIx32 " is created."
+sd_create_branch_new(uint32_t vdi) "0x%" PRIx32 " was newly created."
+sd_co_rw_vector_update(uint32_t vdi, uint64_t oid, uint64_t data, long i=
dx) "update ino (%" PRIu32 ") %" PRIu64 " %" PRIu64 " %ld"
+sd_co_rw_vector_new(uint64_t oid) "new oid 0x%" PRIx64
+sd_snapshot_create_info(const char *sn_name, const char *id, const char =
*name, int64_t size, int is_snapshot) "sn_info: name %s id_str %s s: name=
 %s vm_state_size %" PRId64 " " "is_snapshot %d"
+sd_snapshot_create(const char *sn_name, const char *id) "%s %s"
+sd_snapshot_create_inode(const char *name, uint32_t snap, uint32_t vdi) =
"s->inode: name %s snap_id 0x%x vdi 0x%x"
--=20
2.19.2


