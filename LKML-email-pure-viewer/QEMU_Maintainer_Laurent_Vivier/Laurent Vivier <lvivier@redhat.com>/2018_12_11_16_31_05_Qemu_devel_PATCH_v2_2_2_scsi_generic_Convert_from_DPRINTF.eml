Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:51:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B221258079D
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 08:35:57 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 08:35:57 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2RL3DxC1SsceNV61C+KCUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX+rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJPDI2/?=
 =?us-ascii?q?bYQPAeUOMvpXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+Q4CwzKwBAsE84MvX?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQyzvMde5W2S3j54jObhAqvP6DXbNuccrQ10YvDR7Og1KU?=
 =?us-ascii?q?qYz7PjOVyOUNvHaB7+d7T+KglXMoqwFrrTiz3Msjlo7JhocMx13C6C53w541KM?=
 =?us-ascii?q?WmREJnYtOoCoZcuzyZOodsXM8vTWFltDwnxrAEoZK3YjQGxZA9yxLCZfGLbZKE?=
 =?us-ascii?q?7g/gWeufOzt0mnFodbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gJ1xzS8ciHVu?=
 =?us-ascii?q?B98l2u2TaJygDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7m1/6gLKLekgn4OSk?=
 =?us-ascii?q?9erqb7X8qpOBNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OSlyrLj+FD5TKxXgfIojK?=
 =?us-ascii?q?nWrpTaKd0Aqa6+Hg9V1Jos5AikDzuh1NQYnHoHI0xfdBOIkojkI1XOIPH+Dfei?=
 =?us-ascii?q?jFWgijZrx/baPrL/BpXBNGTMkLDkfbtm7U5czwwzzd9Z55JJEL0BJ+jzWkDpuN?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl0oMeWGGPDbGDPKLdrF+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaCPwI/J9Pk/MYWbwmsxTViAOvxEiV6rsj1uNVyMVYGy9GK?=
 =?us-ascii?q?c15zU+AYThCp/fR4erm/uY0SKmW5FbeG1CWW2KCmriIoCNWvMQb3CLL8p81zAJ?=
 =?us-ascii?q?S7WlDpUszAyjrxPSzb1hIezJvCoCusX4ydJ36ubPwAw07iF+FM+H0muAHF1zy3?=
 =?us-ascii?q?oFQiJz0K1hrEhVzFCF3q5lxftCGo99/fRMByMzKITRyfAyNdHsWw/bNoONVle4?=
 =?us-ascii?q?Q9i8KSs8QtI435kFZEMrSIbqtQzKwyf/W+xdrLeMHpFht/uEh3U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AjAAAb5g9cmBHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDe4h4izGDCZZWgXMUGBSHLiI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhs?=
 =?us-ascii?q?OL4I2BQIDGgEGglwDAwECIAQfCikDAwECBgEBJAIiBAICAwFTEAkFgxyCAgEEp?=
 =?us-ascii?q?XB8M4VAhG2BC4swF4FAP4ERgl2IOoJXAok7hgSRPAmRRgsYgVyICjaHJJkzgUa?=
 =?us-ascii?q?CDjMaCBsVgyeCJxcSjgxAMYEHHIhQgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AjAAAb5g9cmBHrdtBkHgEGBwaBUQkLAYEwgmKDe4h4izG?=
 =?us-ascii?q?DCZZWgXMUGBSHLiI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOL4I2BQIDGgEGg?=
 =?us-ascii?q?lwDAwECIAQfCikDAwECBgEBJAIiBAICAwFTEAkFgxyCAgEEpXB8M4VAhG2BC4s?=
 =?us-ascii?q?wF4FAP4ERgl2IOoJXAok7hgSRPAmRRgsYgVyICjaHJJkzgUaCDjMaCBsVgyeCJ?=
 =?us-ascii?q?xcSjgxAMYEHHIhQgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55887689"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 08:35:58 -0800
Received: from localhost ([::1]:39961 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWl0m-0003Vd-57
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 11:35:56 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37630)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <lvivier@redhat.com>) id 1gWkwF-0008RU-IB
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:31:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <lvivier@redhat.com>) id 1gWkwE-0004s2-Bx
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:31:15 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38876)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <lvivier@redhat.com>) id 1gWkwE-0004rj-3N
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:31:14 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 5678987628;
	Tue, 11 Dec 2018 16:31:13 +0000 (UTC)
Received: from thinkpad.redhat.com (ovpn-204-190.brq.redhat.com
	[10.40.204.190])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 751835C20D;
	Tue, 11 Dec 2018 16:31:11 +0000 (UTC)
From: Laurent Vivier <lvivier@redhat.com>
To: qemu-devel@nongnu.org
Date: Tue, 11 Dec 2018 17:31:05 +0100
Message-Id: <20181211163105.31834-3-lvivier@redhat.com>
In-Reply-To: <20181211163105.31834-1-lvivier@redhat.com>
References: <20181211163105.31834-1-lvivier@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Tue, 11 Dec 2018 16:31:13 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v2 2/2] scsi-generic: Convert from DPRINTF()
 macro to trace events
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Fam Zheng <fam@euphon.net>, Paolo Bonzini <pbonzini@redhat.com>,
	=?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <f4bug@amsat.org>,
	Laurent Vivier <lvivier@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Laurent Vivier <lvivier@redhat.com>
Reviewed-by: Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com>
Tested-by: Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com>
---
 hw/scsi/scsi-generic.c | 56 ++++++++++++++++++++----------------------
 hw/scsi/trace-events   | 11 +++++++++
 2 files changed, 37 insertions(+), 30 deletions(-)

diff --git a/hw/scsi/scsi-generic.c b/hw/scsi/scsi-generic.c
index 7237b4162e..842f8e0893 100644
--- a/hw/scsi/scsi-generic.c
+++ b/hw/scsi/scsi-generic.c
@@ -18,21 +18,10 @@
 #include "hw/scsi/scsi.h"
 #include "hw/scsi/emulation.h"
 #include "sysemu/block-backend.h"
+#include "trace.h"
=20
 #ifdef __linux__
=20
-//#define DEBUG_SCSI
-
-#ifdef DEBUG_SCSI
-#define DPRINTF(fmt, ...) \
-do { printf("scsi-generic: " fmt , ## __VA_ARGS__); } while (0)
-#else
-#define DPRINTF(fmt, ...) do {} while(0)
-#endif
-
-#define BADF(fmt, ...) \
-do { fprintf(stderr, "scsi-generic: " fmt , ## __VA_ARGS__); } while (0)
-
 #include <scsi/sg.h>
 #include "scsi/constants.h"
=20
@@ -98,8 +87,7 @@ static void scsi_command_complete_noio(SCSIGenericReq *=
r, int ret)
         }
     }
=20
-    DPRINTF("Command complete 0x%p tag=3D0x%x status=3D%d\n",
-            r, r->req.tag, status);
+    trace_scsi_generic_command_complete_noio(r, r->req.tag, status);
=20
     scsi_req_complete(&r->req, status);
 done:
@@ -259,7 +247,7 @@ static void scsi_read_complete(void * opaque, int ret=
)
     }
=20
     len =3D r->io_header.dxfer_len - r->io_header.resid;
-    DPRINTF("Data ready tag=3D0x%x len=3D%d\n", r->req.tag, len);
+    trace_scsi_generic_read_complete(r->req.tag, len);
=20
     r->len =3D -1;
=20
@@ -335,7 +323,7 @@ static void scsi_read_data(SCSIRequest *req)
     SCSIDevice *s =3D r->req.dev;
     int ret;
=20
-    DPRINTF("scsi_read_data tag=3D0x%x\n", req->tag);
+    trace_scsi_generic_read_data(req->tag);
=20
     /* The request is used as the AIO opaque value, so add a ref.  */
     scsi_req_ref(&r->req);
@@ -356,7 +344,7 @@ static void scsi_write_complete(void * opaque, int re=
t)
     SCSIGenericReq *r =3D (SCSIGenericReq *)opaque;
     SCSIDevice *s =3D r->req.dev;
=20
-    DPRINTF("scsi_write_complete() ret =3D %d\n", ret);
+    trace_scsi_generic_write_complete(ret);
=20
     assert(r->req.aiocb !=3D NULL);
     r->req.aiocb =3D NULL;
@@ -371,7 +359,7 @@ static void scsi_write_complete(void * opaque, int re=
t)
     if (r->req.cmd.buf[0] =3D=3D MODE_SELECT && r->req.cmd.buf[4] =3D=3D=
 12 &&
         s->type =3D=3D TYPE_TAPE) {
         s->blocksize =3D (r->buf[9] << 16) | (r->buf[10] << 8) | r->buf[=
11];
-        DPRINTF("block size %d\n", s->blocksize);
+        trace_scsi_generic_write_complete_blocksize(s->blocksize);
     }
=20
     scsi_command_complete_noio(r, ret);
@@ -388,7 +376,7 @@ static void scsi_write_data(SCSIRequest *req)
     SCSIDevice *s =3D r->req.dev;
     int ret;
=20
-    DPRINTF("scsi_write_data tag=3D0x%x\n", req->tag);
+    trace_scsi_generic_write_data(req->tag);
     if (r->len =3D=3D 0) {
         r->len =3D r->buflen;
         scsi_req_data(&r->req, r->len);
@@ -411,6 +399,21 @@ static uint8_t *scsi_get_buf(SCSIRequest *req)
     return r->buf;
 }
=20
+static void scsi_generic_command_dump(uint8_t *cmd, int len)
+{
+    int i;
+    char *line_buffer, *p;
+
+    line_buffer =3D g_malloc(len * 5 + 1);
+
+    for (i =3D 0, p =3D line_buffer; i < len; i++) {
+        p +=3D sprintf(p, " 0x%02x", cmd[i]);
+    }
+    trace_scsi_generic_send_command(line_buffer);
+
+    g_free(line_buffer);
+}
+
 /* Execute a scsi command.  Returns the length of the data expected by t=
he
    command.  This will be Positive for data transfers from the device
    (eg. disk reads), negative for transfers to the device (eg. disk writ=
es),
@@ -422,16 +425,9 @@ static int32_t scsi_send_command(SCSIRequest *req, u=
int8_t *cmd)
     SCSIDevice *s =3D r->req.dev;
     int ret;
=20
-#ifdef DEBUG_SCSI
-    DPRINTF("Command: data=3D0x%02x", cmd[0]);
-    {
-        int i;
-        for (i =3D 1; i < r->req.cmd.len; i++) {
-            printf(" 0x%02x", cmd[i]);
-        }
-        printf("\n");
+    if (trace_event_get_state_backends(TRACE_SCSI_GENERIC_SEND_COMMAND))=
 {
+        scsi_generic_command_dump(cmd, r->req.cmd.len);
     }
-#endif
=20
     if (r->req.cmd.xfer =3D=3D 0) {
         g_free(r->buf);
@@ -693,7 +689,7 @@ static void scsi_generic_realize(SCSIDevice *s, Error=
 **errp)
=20
     /* define device state */
     s->type =3D scsiid.scsi_type;
-    DPRINTF("device type %d\n", s->type);
+    trace_scsi_generic_realize_type(s->type);
=20
     switch (s->type) {
     case TYPE_TAPE:
@@ -716,7 +712,7 @@ static void scsi_generic_realize(SCSIDevice *s, Error=
 **errp)
         break;
     }
=20
-    DPRINTF("block size %d\n", s->blocksize);
+    trace_scsi_generic_realize_blocksize(s->blocksize);
=20
     /* Only used by scsi-block, but initialize it nevertheless to be cle=
an.  */
     s->default_scsi_version =3D -1;
diff --git a/hw/scsi/trace-events b/hw/scsi/trace-events
index e9625f790c..3c2fd7f52f 100644
--- a/hw/scsi/trace-events
+++ b/hw/scsi/trace-events
@@ -320,3 +320,14 @@ scsi_disk_emulate_command_UNKNOWN(int cmd, const cha=
r *name) "Unknown SCSI comma
 scsi_disk_dma_command_READ(uint64_t lba, uint32_t len) "Read (sector %" =
PRId64 ", count %u)"
 scsi_disk_dma_command_WRITE(const char *cmd, uint64_t lba, int len) "Wri=
te %s(sector %" PRId64 ", count %u)"
 scsi_disk_new_request(uint32_t lun, uint32_t tag, const char *line) "Com=
mand: lun=3D%d tag=3D0x%x data=3D%s"
+
+# hw/scsi/scsi-generic.c
+scsi_generic_command_complete_noio(void *req, uint32_t tag, int statuc) =
"Command complete %p tag=3D0x%x status=3D%d"
+scsi_generic_read_complete(uint32_t tag, int len) "Data ready tag=3D0x%x=
 len=3D%d"
+scsi_generic_read_data(uint32_t tag) "scsi_read_data tag=3D0x%x"
+scsi_generic_write_complete(int ret) "scsi_write_complete() ret =3D %d"
+scsi_generic_write_complete_blocksize(int blocksize) "block size %d"
+scsi_generic_write_data(uint32_t tag) "scsi_write_data tag=3D0x%x"
+scsi_generic_send_command(const char *line) "Command: data=3D%s"
+scsi_generic_realize_type(int type) "device type %d"
+scsi_generic_realize_blocksize(int blocksize) "block size %d"
--=20
2.19.2


