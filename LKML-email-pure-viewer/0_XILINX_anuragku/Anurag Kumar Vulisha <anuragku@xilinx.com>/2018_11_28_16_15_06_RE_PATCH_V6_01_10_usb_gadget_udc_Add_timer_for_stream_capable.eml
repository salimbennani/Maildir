Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:38:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 553F65802E4;
	Wed, 28 Nov 2018 08:19:00 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 28 Nov 2018 08:19:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AdWoTSRbI1rBnPeZVwfjBFnv/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcu9Zx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYsTAeQPPuhYoIv8p1QSohWxChKsBPvtxzJTmn/2xLE23/g9HQ3awgAtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSfy4zK/VzTXZdfxW1ir25o3VchAku/6MR697fsXMyUkrFgPFlVWQ?=
 =?us-ascii?q?ppb4ND6SzOsNtXWb7/B6WuKgiG4nthp8ozeuxscoi4nJgI0UxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N4b968CJZcqT2WOo9sTs8/TWxkpjw2xqAFtJKnZiQHyZYqywbCZ/GId4WE?=
 =?us-ascii?q?+A/vWeKVLDtihH9pZKiziwu8/EWu0uH8WNe73VVWoidAl9TBt3MA2ALO5cWCTv?=
 =?us-ascii?q?Zy4l2u1DKK2g/P6OxLPFo7mK/GJJMjw7M/i5weulnZECDsgkX5lqqWe10k+ue2?=
 =?us-ascii?q?7+TnZa3rpoGTN4BqkAHyKKculdKlAeQ+LAcOW3KX+eOm1L3s5UH5QbNKgeMqkq?=
 =?us-ascii?q?TBrpzWOcAWqrSkDwJbzIov8QuzAjS63NgCnHQKLkpJeBedgIjoP1HOLur4DfC6?=
 =?us-ascii?q?g1m0lDdrxvbGPqDuA5nULXjMjq3hfbBj5E5Y0QYzyt5e55RKBbEbO//zREDxu8?=
 =?us-ascii?q?LCDhMjMAy73fznCNNj2YMaQ26PBbWZMKzKvV+S+u0vO/WMZJMSuDvlL/gl5v3u?=
 =?us-ascii?q?gmEjlV4SYKmkxp8XaHG+HvR7LESVe3vsgtEdEWgUugoyVvDliFqHUTRLfXa9Q7?=
 =?us-ascii?q?o85i0nCIKhFYrDRpqigL2d3CihGZ1afGBGCk2WHnfueIWJQPMMaCOUIs98nT0I?=
 =?us-ascii?q?T7mhS4k91R6wsA/20aZoLu3R+icAr5LsyMB15/HPlRE17TF0DcOd3H+XQ2F3mW?=
 =?us-ascii?q?MIQTk23KdkrEx5y1eD17V4gvNCGdxS4fNJThk1NZrGw+NmDNDyXxrLfs2VR1a+?=
 =?us-ascii?q?XtWmHTYxQ8orzN8VY0Z9HNaiggrZ3yWwAb8YjLiLBJ0y8qLB0Hn9Pcd9y3Da1K?=
 =?us-ascii?q?Y/i1kqWNdANWqjhqRn7QjcG5bJk1mFl6atbakc3zTC9GGZwWqKvUFXSghwUare?=
 =?us-ascii?q?UHAbZ0vWq8n550zYQ7+vD7QnLhVOycqYJqRWbd3piE1MRO3/N9TGf2Kxh2CwCA?=
 =?us-ascii?q?6VybyWcorlZX8R3CXHB0gCiAAc43CGOQ86BieipmLeCCdjFVbuY0Pq7Ol/p2m3?=
 =?us-ascii?q?Tk4yzwGWcUJh06C59QIShfyZU/kTxK4LuD89qzVoG1awx8/ZBMCepwV/ZqlcYc?=
 =?us-ascii?q?ky4FFc1W3HsQxwJZigL6Fkhl4DfAV7pULu1xNrCopelcgmtm8lzA13KaiAylNO?=
 =?us-ascii?q?ayuY3YzsOr3QMmTy4BGva6vR2lHC0NaX+r0D6Ogip1XkpgGpEksi83No09RO13?=
 =?us-ascii?q?uc55PKDBcdUJ7rU0Y38QR6qK/eYiUn+4zU0nhsO7GusjDew9IpGPclyhG4cthF?=
 =?us-ascii?q?NKOLCgDzHNMaBsS0M+MqhkWmYQgCPOBR8640Idird/+H2K6tIeZhkyiqjWVB4I?=
 =?us-ascii?q?BhzE2M8zBwRfLP35YA2/uYxBeIVy/gjFe9tcD6gYBFZSwIEmWj0yTlBY5Rabd0?=
 =?us-ascii?q?fYYEEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?BzkzwxtKqf3TDBzP74dBUaPW5HXm9igkn2IYi1ltwVQFKnbww0mxS7/0b6wK5b?=
 =?us-ascii?q?qb97L2nSR0dIYif3I3tjUqu2qrqNfcpP5Ik0viVQVeS2eUqaRaLloxsGzyPjGH?=
 =?us-ascii?q?NTxTA6dz2wupT1hQd6iH+bLHtoqHrZeMdwxQrQ5dDGRP5R2CYGSzd8iTXNGle8?=
 =?us-ascii?q?ONyp982Ol5jfquC+S36hVppLfCnp14yArii75W5tARGlhPC8gN7nEQs70S/9yd?=
 =?us-ascii?q?ZqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaL/Y2AKRTIRwd7V4Q7l1VZnLnKIwYL5S3qcztFgZ9m8fmMZxCY949pWB6?=
 =?us-ascii?q?eT6bxOhTF1rUagrQLNffh9mS8Qyfg0534bme0JuBctwT+bArAdBkRYOS3slxKV?=
 =?us-ascii?q?79GxtqlXZWCvcaSu20p6h9yuELaCogREUnbjZpgiBTNw7tl4MF/U1X3z64Lkd8?=
 =?us-ascii?q?PKYdMdqBKUiAvAgPZPKJ0qiPUKnyVnNHn5vX0kze47kBNv0Yu7vIiBN2Vi4qa5?=
 =?us-ascii?q?DgREOT3yYsMZ4ivtgrpGnsaKw4CvGY1sGikMXJvtV/6pESgdtfL6NwaVCz08q2?=
 =?us-ascii?q?yWGb7eHQ+Z9UdnoGjDE5GtN3GLOnYZyc9uSwWaJExamAoURik1noYlFgC2w8zs?=
 =?us-ascii?q?aFx26SoW5l78txtA0OZoNwTkX2fbpQeobCo0SZeFIBpX6AFC+1naMciE4u1vGC?=
 =?us-ascii?q?FY+4WrrBaRJWyDewRIEWYJV1SGB1/5O7mh+8LA//KEBuakLPvOfLaOqfFYV/iS?=
 =?us-ascii?q?3pKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnqWAXv5ZaWC7tPK9pv/Qq6gbyEN+6WiyZ0MjJY1pIKxX/Vx7kTxl8Siydy?=
 =?us-ascii?q?dzazFbQMrzLCTKXVmqVPFR4UdztzNNdU76I7xgRNOdDUitL21r57j/45EVRFVU?=
 =?us-ascii?q?bmmsGme8MKOXy9NEjcCUaPNbSGIyDLws7tbaO9T71QkPtbtxmqtTmHFE/jOyyJ?=
 =?us-ascii?q?lyP1WBC3LeFMkCabMQREt4GgaRltE3bsTdL8Zh2/Md96ljk2wbwyhnPXOm8QKz?=
 =?us-ascii?q?l8c0VRrrKO6SNUmOlwG2tE7nB9N+mLhz6Z7/XEKpYRqfZrHiV0l+dA7Hsm0bda?=
 =?us-ascii?q?8CFES+JzmCbJqt5uolemkvSAyzZ9URpOrCpLi5yPvUl4JarZ8ZxAU27e/B0R9W?=
 =?us-ascii?q?WQFwgKp9x9B9zvoa9QzN3PlKP1KDha8tPU/dETB87bKM+cNHohMBzpGCPbDQcf?=
 =?us-ascii?q?TD6rM33fiFJZkP2I6nKVqZ06+dDQn88gR7taTFF9PPoeAEUtSNYLJJ12djApi7?=
 =?us-ascii?q?iWiIgP/3Xo6FH+XshV9rPdUfuSRNXmMiqchL8MMxQSzLz7LawXN4vmy0Jld192?=
 =?us-ascii?q?lZjLHEyWWspC9GkpRws9pg127HVkSCVnwF7ocAWF+ngMEfeyklg2gxFgaP4hsj?=
 =?us-ascii?q?rg/gFzbnjNpCI22Gk2h9LhjXjFcjnxJaGYXoxMDSfw8U8rPcW/CyR8YA+1mkpr?=
 =?us-ascii?q?fBTFQvoFhL9hcGphgknfuJ5nFvtVTKkCaxgVk7XfTfgu011ZqyPv5UJd/+bDEp?=
 =?us-ascii?q?BikQombdb4pX9G2ypgYcQzKKiWL7BA1VhRgK3IuTWngKR5+ggRKlxFyX6bdDQP?=
 =?us-ascii?q?owRcLL4pKjCx1vBtrweFnm0QVnILUq8DpO9w/0x1GPmFxjio7aNHK1uxPqTLJq?=
 =?us-ascii?q?WEoWHPltOgUlI010UY0UJC+O4lgo8Yb0OIWhV3n/OqHBMTOJ+HcFkNYg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAADZvv5bh0O0hNFkDg0BAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVEGAQEBCwGBMCUFJoFcBAsnCoc2A4ROiz9Kgg0UiHyOMoEkA0wTARg?=
 =?us-ascii?q?TAYRAAoMsIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECJ?=
 =?us-ascii?q?BMGAQE3AQUGAwEBAQEIEQQBAR8JBwMeERQJCAIEAQ0FBQOCTkuBagMNCAECApt?=
 =?us-ascii?q?/AooHgWwzgnYBAQWBBQGEDQ0LggkIFIwCEQaBQD+BEUaCTIJXgXM+gy6CJokHG?=
 =?us-ascii?q?AIGBIFuhVSPAi4JjgWDRIFahRCKK4h2hWmJQgIEAgQFAg0BAQWBRoINMxoIGxW?=
 =?us-ascii?q?DJ4IbDBeDSoMWhwIEATZyAYEEAQEhikWBLgGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AEAADZvv5bh0O0hNFkDg0BAQEBAwEBAQcDAQEBgVEGAQE?=
 =?us-ascii?q?BCwGBMCUFJoFcBAsnCoc2A4ROiz9Kgg0UiHyOMoEkA0wTARgTAYRAAoMsIjQJD?=
 =?us-ascii?q?QEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECJBMGAQE3AQUGAwE?=
 =?us-ascii?q?BAQEIEQQBAR8JBwMeERQJCAIEAQ0FBQOCTkuBagMNCAECApt/AooHgWwzgnYBA?=
 =?us-ascii?q?QWBBQGEDQ0LggkIFIwCEQaBQD+BEUaCTIJXgXM+gy6CJokHGAIGBIFuhVSPAi4?=
 =?us-ascii?q?JjgWDRIFahRCKK4h2hWmJQgIEAgQFAg0BAQWBRoINMxoIGxWDJ4IbDBeDSoMWh?=
 =?us-ascii?q?wIEATZyAYEEAQEhikWBLgGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="55214164"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 08:18:58 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728831AbeK2DSF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 22:18:05 -0500
Received: from mail-eopbgr760089.outbound.protection.outlook.com ([40.107.76.89]:27282
        "EHLO NAM02-CY1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727979AbeK2DSF (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 22:18:05 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=xilinx.onmicrosoft.com; s=selector1-xilinx-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=MfvVl/mv5gRuYTKpuk/qhcKiwc+P7gLS1voq+xZGzXo=;
 b=eJZJYLSeUeOmnZR6hkDbPvyJkX2hh5SlB7x9Nzszcm6mUuyXPpb2TsK72INBVZn7gmojlrn3WmdH/XZukhw/vKL8/13KLPYNnknYE/p3KIW0PiSsHz3s6dfDWBxnePFvJ9R3Qz72171hqFgA2Bm5BvuQ7DhYaLN9qKB9REFzqI8=
Received: from BL0PR02MB5633.namprd02.prod.outlook.com (20.177.241.80) by
 BL0PR02MB4420.namprd02.prod.outlook.com (10.167.179.21) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1339.21; Wed, 28 Nov 2018 16:15:06 +0000
Received: from BL0PR02MB5633.namprd02.prod.outlook.com
 ([fe80::68ed:9ca9:c7da:d76d]) by BL0PR02MB5633.namprd02.prod.outlook.com
 ([fe80::68ed:9ca9:c7da:d76d%2]) with mapi id 15.20.1361.019; Wed, 28 Nov 2018
 16:15:06 +0000
From: Anurag Kumar Vulisha <anuragku@xilinx.com>
To: Felipe Balbi <balbi@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Alan Stern <stern@rowland.harvard.edu>,
        Johan Hovold <johan@kernel.org>,
        Jaejoong Kim <climbbb.kim@gmail.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Roger Quadros <rogerq@ti.com>
CC: "linux-usb@vger.kernel.org" <linux-usb@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "v.anuragkumar@gmail.com" <v.anuragkumar@gmail.com>,
        Thinh Nguyen <thinhn@synopsys.com>,
        Tejas Joglekar <tejas.joglekar@synopsys.com>,
        Ajay Yugalkishore Pandey <APANDEY@xilinx.com>
Subject: RE: [PATCH V6 01/10] usb: gadget: udc: Add timer for stream capable
 endpoints
Thread-Topic: [PATCH V6 01/10] usb: gadget: udc: Add timer for stream capable
 endpoints
Thread-Index: AQHUYvbRwEYgzRXr0k+ojhd/SBDozaVPfhoAgBXv3pA=
Date: Wed, 28 Nov 2018 16:15:06 +0000
Message-ID: <BL0PR02MB563317DEAFAD7C06B52FC23DA7D10@BL0PR02MB5633.namprd02.prod.outlook.com>
References: <1539436498-24892-1-git-send-email-anurag.kumar.vulisha@xilinx.com>
 <1539436498-24892-2-git-send-email-anurag.kumar.vulisha@xilinx.com>
 <87k1lfiwx3.fsf@linux.intel.com>
In-Reply-To: <87k1lfiwx3.fsf@linux.intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-Auto-Response-Suppress: DR, RN, NRN, OOF, AutoReply
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=anuragku@xilinx.com; 
x-originating-ip: [149.199.50.133]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;BL0PR02MB4420;6:UOEkBcsyddr53y1MgUQImhwuJor0D5M+sAu6vnNgo6TFi8xpdtalRruQNVOHDyFgEU3SoqT7/dOATcyUG89sI0yJXBPUczR9tSvNFBAeU2HiWJlo2v/8f7MOalAbXgbm78MOWAUEcWUrjHMhK+ofsIjB82keSSYgWwmIzfrbZh4msgy7c16rPGwCPpvaTRGD+afvaURKrn3zDeDotAcxB05r9LASSwuJJuH2CTJv73EKLTC91NUAUDGQVKO/YnZUP88Hrhq5vg+48E7ClKB/BJrGdEWIMBaQhob/oXJDXMQZKaN4TuPu+yL/rziaLFAyVoLbRp/2DipUAGXe6s9sLh9CcZXRLhZNwn7G92uXsk9wFCMeU4vPDLHksqmt7OctYRPyVvXi0eLbsedenITke0XP1FgEHc0KNfD39R6QJoUxufQVzEq54raNuanH7Lsf/sBFeMsIRdNwZRvUFz+5kA==;5:iyu/Msz33hYMYUltnRSKMxZtzyxoUl6CefEQS086pIVmFBOOhc2xNFZOPUTgM7x4Ftz3M8Zux3Wj4uuIQV9ubobbfPqu7xL9TeWIxokjfQjII6hefaNfQGnw21PVXZIJuHkmuO/1S64Vly8CfYjSrxbZT/ceMJlRXacGT+pfhJg=;7:pDHScARCUSxZ38Y/wZdcjr/Xmy3cTojInCQ6dUbKrnp0fLAjuHRe7xbhBy4rY4vygRTL8rl/zLo0OnYOMJxjUpdAiCDbz7B/EVHFIccVYtd6GmQztvXL4+jqQigVqEU5M1JvILxdG0GbWKbkqGDQkA==
x-ms-exchange-antispam-srfa-diagnostics: SOS;SOR;
x-ms-office365-filtering-correlation-id: 43445c24-abf5-4b61-3915-08d6554ca930
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:BL0PR02MB4420;
x-ms-traffictypediagnostic: BL0PR02MB4420:
x-ld-processed: 657af505-d5df-48d0-8300-c31994686c5c,ExtAddr
x-microsoft-antispam-prvs: <BL0PR02MB442029509671CC7944FC0D3DA7D10@BL0PR02MB4420.namprd02.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(93006095)(93001095)(10201501046)(3231443)(999002)(944501410)(52105112)(3002001)(6055026)(148016)(149066)(150057)(6041310)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(20161123558120)(20161123560045)(201708071742011)(7699051)(76991095);SRVR:BL0PR02MB4420;BCL:0;PCL:0;RULEID:;SRVR:BL0PR02MB4420;
x-forefront-prvs: 0870212862
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(39860400002)(136003)(366004)(376002)(346002)(396003)(199004)(189003)(13464003)(2906002)(6116002)(3846002)(68736007)(81156014)(81166006)(256004)(14444005)(305945005)(229853002)(8936002)(74316002)(8676002)(25786009)(478600001)(86362001)(105586002)(71200400001)(71190400001)(106356001)(6436002)(14454004)(186003)(26005)(5660300001)(486006)(476003)(54906003)(446003)(110136005)(11346002)(9686003)(4326008)(7416002)(39060400002)(66066001)(33656002)(102836004)(6506007)(99286004)(55016002)(76176011)(551934003)(7736002)(7696005)(53936002)(316002)(2171002)(97736004)(6246003)(107886003);DIR:OUT;SFP:1101;SCL:1;SRVR:BL0PR02MB4420;H:BL0PR02MB5633.namprd02.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: OEh2/wFH5bLsL0qd+TPNdEvisiyCgvDSfX8xnbg58Ad6hsUAQeB5IEelnrx99jZpqihcYtefYJvPluws/oP1jqHmdC0zUJGhoh82Ab5KLhnCmUVx0pyJzkeo5Q07jTAEBp+kmG8616k+TG8LPIpptEaHYleTfAaQHUBZYOv4+hvzLTdE4/pfXjdZGjMrC9m6FUxr8oS4WuVYBPbO3BsW5lgLVTAZBkDrCz9gtCAmqT+6lvDjJT3+wAxOG47tpKKGqGnx2Hk/R/Ia9QISLtuaI8fplZ2NLigEeUR9c0bXsHQ0Y+/kGbtZ4YlO5WoE+SXP5gJC1zvOCgRapMRkJjYmBAqzLLMuxjKONLEpZUuZYZo=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: xilinx.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 43445c24-abf5-4b61-3915-08d6554ca930
X-MS-Exchange-CrossTenant-originalarrivaltime: 28 Nov 2018 16:15:06.3107
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 657af505-d5df-48d0-8300-c31994686c5c
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL0PR02MB4420
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Felipe,

Thanks a lot for spending your time in reviewing this patch. Please find
my comments inline

>-----Original Message-----
>From: Felipe Balbi [mailto:balbi@kernel.org]
>Sent: Wednesday, November 14, 2018 7:28 PM
>To: Anurag Kumar Vulisha <anuragku@xilinx.com>; Greg Kroah-Hartman
><gregkh@linuxfoundation.org>; Alan Stern <stern@rowland.harvard.edu>; Joha=
n
>Hovold <johan@kernel.org>; Jaejoong Kim <climbbb.kim@gmail.com>; Benjamin
>Herrenschmidt <benh@kernel.crashing.org>; Roger Quadros <rogerq@ti.com>
>Cc: linux-usb@vger.kernel.org; linux-kernel@vger.kernel.org;
>v.anuragkumar@gmail.com; Thinh Nguyen <thinhn@synopsys.com>; Tejas Jogleka=
r
><tejas.joglekar@synopsys.com>; Ajay Yugalkishore Pandey <APANDEY@xilinx.co=
m>;
>Anurag Kumar Vulisha <anuragku@xilinx.com>
>Subject: Re: [PATCH V6 01/10] usb: gadget: udc: Add timer for stream capab=
le
>endpoints
>
>
>Hi,
>
>Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com> writes:
>> When bulk streams are enabled for an endpoint, there can
>> be a condition where the gadget controller waits for the
>> host to issue prime transaction and the host controller
>> waits for the gadget to issue ERDY. This condition could
>> create a deadlock. To avoid such potential deadlocks, a
>> timer is started after queuing any request for the stream
>> capable endpoint in usb_ep_queue(). The gadget driver is
>> expected to stop the timer if a valid stream event is found.
>> If no stream event is found, the timer expires after the
>> STREAM_TIMEOUT_MS value and a callback function registered
>> by gadget driver to endpoint ops->stream_timeout API would be
>> called, so that the gadget driver can handle this situation.
>> This kind of behaviour is observed in dwc3 controller and
>> expected to be generic issue with other controllers supporting
>> bulk streams also.
>>
>> Signed-off-by: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
>> ---
>>  Changes in v6:
>> 	1. This patch is newly added in this series to add timer into udc/core.=
c
>> ---
>>  drivers/usb/gadget/udc/core.c | 71
>++++++++++++++++++++++++++++++++++++++++++-
>>  include/linux/usb/gadget.h    | 12 ++++++++
>>  2 files changed, 82 insertions(+), 1 deletion(-)
>>
>> diff --git a/drivers/usb/gadget/udc/core.c b/drivers/usb/gadget/udc/core=
.c
>> index af88b48..41cc23b 100644
>> --- a/drivers/usb/gadget/udc/core.c
>> +++ b/drivers/usb/gadget/udc/core.c
>> @@ -52,6 +52,24 @@ static int udc_bind_to_driver(struct usb_udc *udc,
>>  /* --------------------------------------------------------------------=
----- */
>>
>>  /**
>> + * usb_ep_stream_timeout - callback function for endpoint stream timeou=
t timer
>> + * @arg: pointer to struct timer_list
>> + *
>> + * This function gets called only when bulk streams are enabled in the =
endpoint
>> + * and only after ep->stream_timeout_timer has expired. The timer gets =
expired
>> + * only when the gadget controller failed to find a valid stream event =
for this
>> + * endpoint. On timer expiry, this function calls the endpoint-specific=
 timeout
>> + * handler registered to endpoint ops->stream_timeout API.
>> + */
>> +static void usb_ep_stream_timeout(struct timer_list *arg)
>> +{
>> +	struct usb_ep *ep =3D from_timer(ep, arg, stream_timeout_timer);
>> +
>> +	if (ep->stream_capable && ep->ops->stream_timeout)
>
>why is the timer only for stream endpoints? What if we want to run this
>on non-stream capable eps?
>

I have seen this issue only with stream capable eps between PRIME & EPRDY. =
But this issue
can potentially occur with non-stream endpoints also. Will remove this stre=
am capable checks
in next series of patch.

>> +		ep->ops->stream_timeout(ep);
>
>you don't ned an extra operation here, ep_dequeue should be enough.
>

I think issuing ep_dequeue() would be more trickier than calling ep->ops->s=
tream_timeout().
This is because, every gadget driver has their own way of handling ep_deque=
ue. Some
drivers (like dwc3) may sleep for an event (wait_event_lock_irq) in the ep_=
dequeue routine.
Since we are calling ep_dequeue from timer timeout callback which is in sof=
tirq context,
sleeping or waiting for an event would hang the system. Also adding ep->ops=
->stream_timeout()
would make the gadget drivers handle the issue in better way based on their=
 implementation.
Another advantage is the drivers which doesn't have this timeout issue does=
n't have to register the
timeout handler and can avoid the logic of deleting the timer for every req=
uest. So, I think
ep->ops->stream_timeout() would be better than having a generic handler whi=
ch does
ep_dequeue() & ep_queue(). Please provide your suggestion on this implement=
ation.

>> @@ -102,6 +132,10 @@ int usb_ep_enable(struct usb_ep *ep)
>>  	if (ret)
>>  		goto out;
>>
>> +	if (ep->stream_capable)
>> +		timer_setup(&ep->stream_timeout_timer,
>> +			    usb_ep_stream_timeout, 0);
>
>the timer should be per-request, not per-endpoint. Otherwise in case of
>multiple requests being queued, you can't give them different timeouts

I agree with you. Will correct this in next series of patch.

>
>> @@ -269,6 +321,13 @@ int usb_ep_queue(struct usb_ep *ep,
>>
>>  	ret =3D ep->ops->queue(ep, req, gfp_flags);
>>
>> +	if (ep->stream_capable) {
>> +		ep->stream_timeout_timer.expires =3D jiffies +
>> +				msecs_to_jiffies(STREAM_TIMEOUT_MS);
>
>timeout value should be passed by the gadget driver. Add a new
>usb_ep_queue_timeout() that takes the new argument. Rename the current
>usb_ep_queue() to static int __usb_ep_queue() with an extra argument for
>timeout and introduce usb_ep_queue() without the argument, calling
>__usb_ep_queue() passing timeout as 0.
>

Thanks for correcting and providing the steps for implementing. Will modify=
 as
suggested in next series of patch.

>> diff --git a/include/linux/usb/gadget.h b/include/linux/usb/gadget.h
>> index e5cd84a..2ebaef0 100644
>> --- a/include/linux/usb/gadget.h
>> +++ b/include/linux/usb/gadget.h
>> @@ -144,6 +144,7 @@ struct usb_ep_ops {
>>
>>  	int (*fifo_status) (struct usb_ep *ep);
>>  	void (*fifo_flush) (struct usb_ep *ep);
>> +	void (*stream_timeout) (struct usb_ep *ep);
>
>why?
>

As discussed above, the common timeout handler with ep_dequeue() and
ep_queue() may not work for all the gadget drivers, adding the stream_timeo=
ut()
in ep->ops would enable the drivers to implement their own handler for
handling the stream timeout issue.

Thanks,
Anurag Kumar Vulisha
>--
>balbi
