Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:54:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 04FEA580375;
	Mon,  3 Dec 2018 08:08:36 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 08:08:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Atpgd/R3BHLecDMy1smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTKfTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJBHo2y?=
 =?us-ascii?q?YYgBD+UDPOZXs4bzqFQVrRumBwShH//vyiZUinPqwaE2z/otHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3pOacUTOC11rPHzTreZP1TxDf97ZLHcgo8qv6DQLJwdcvRyVIvFwzfk16d?=
 =?us-ascii?q?rpbqPzWI1uQXqWeb4OlgVf+0hm8oqgFxpjmvxsEji4XTmo0VzVXE+Dx/zY0oJt?=
 =?us-ascii?q?O4UFZ2bcC4HJZUrS2WKoV7Tt04T211uys21qcKtJ+5cSQS1ZgqyBrSZ+aaf4WM?=
 =?us-ascii?q?5h/vTuacLStiiH54dr+yiQ6+8Ua+xeD/SsW51VNHoytGn9bSq38A0hje5dSdRf?=
 =?us-ascii?q?Z5+0quxTSC2B3J5exBPE85l6vWJIMnz7UtjJQcq17DETXzmEjujK+ZaEEk+u+w?=
 =?us-ascii?q?5uT5bbXpuIWcO5V3ig7gKKQunNKwAeAiPggJRWib9vyw1Lzl/ULnXLVHluM6nr?=
 =?us-ascii?q?XdvZzAOMgWqLC1DxVI3osg9xqzFTar3dYAkXkCNl1FeRaHj4bzO1HJJfD1FfO/?=
 =?us-ascii?q?g1WqkDd2yPHKJ77hDYvXLnjFjrjhea9x60lSyQo1099f/YlZCq8OIP3tQE/9rt?=
 =?us-ascii?q?/YAQEjMwyy3ennDM9x1oQEWWKAGqOZKr/dsUeU5uIzJOmBfIsVuDf+K/c7/fLv?=
 =?us-ascii?q?gmI5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5SezgkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIK8AofCWoCimruB0D27Hp1LfG9GDF+MHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXelRM19TNqFcid0GaNT2dynm?=
 =?us-ascii?q?MPXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+Gz4xVdIxw9gNY0pnAdWtlBLD0jGuA78UkbyLGZM1/rjd33j3O8Zy1XLG2L?=
 =?us-ascii?q?M9gFkhR8tFLXemibJn9wjPG47JlF2Ul6WweqQaxiLN8GaDwnCIvEFXSwNwVaTF?=
 =?us-ascii?q?XXYCZkrZt9j550XCT6OwBrQjKAdO1cmCKq5SYN3zkVpGXOvjOMjZY2+phmi/Hw?=
 =?us-ascii?q?iIya2WYIrqYWod2j7dB1YCkwwU+XaGNg0+BiO6rmLaDTxuE0/vYkz2/el/rnO7?=
 =?us-ascii?q?UlE7zwWQY0J90Lq1/wYfheaARPMLwrIEpCAhpi1pE1mnwdLZFcCMpwp7c6Vaet?=
 =?us-ascii?q?My/lFH2Hndtwx8OJygMq9jikQfcwRxo0PhyRF3Bp9cnsgtqXMg1BByJr6A0FNd?=
 =?us-ascii?q?azOY2oj9OqHWKmn3+xCvd67W21HE3NaK4KsP7+44q1HivAGvGUov6HFn09hT03?=
 =?us-ascii?q?uB6ZTGFgsSUZTtUkkp8xh2va3VYi4454nMz31jLbG0siPe29IuHOYq0BKgcMlQ?=
 =?us-ascii?q?MayaFA7+CdYVB9WzJ+MwnVipbRUEPP5J+a4wPsOmceaG2aGxMOZhmjKmkXpI4I?=
 =?us-ascii?q?Rn3k2Q8Cp8T/bC34wZzPGAwguHSzD8gU+hs8Dqg4xLeSseH2u/ySf+Ao5RabZ/?=
 =?us-ascii?q?fYIKCWeoPs22yc9yh5/rW35E6lGjA0kK19OueRqXd1b9xxFf1VwLoXy7niu11y?=
 =?us-ascii?q?Z0kzA1oaWFxizB3uPieAABOmFVXmlijE7gLpSugNAeQUencRIplByj5Uvhw6hb?=
 =?us-ascii?q?paJ/L3TcQEtSfij2KX1iXbW0traYf8FP75Youz1NUOugeVCaVqL9oxwC3iLjHm?=
 =?us-ascii?q?tS3jA6eyuxupXkmRx3k2adLHd1rHrEdsB83xbf5NrARfFP2joKXjV3iT7SBlKk?=
 =?us-ascii?q?Jdmm4c2Ul4vfsuC5T2+hVIdccTPozYODsyu3/3ZqDge8n/Cwm93nFxY10Sng2t?=
 =?us-ascii?q?luVCXIqgv8Y4bx26S7N+JnYldnBFvm58VmHYF+l5M6hIsM1ngCmpWV4X0HnH/z?=
 =?us-ascii?q?MNpB3qLydngNRT8Nw9PO5Ajl2UtjLm+Gxo7jV3WdxNdhaMe+Ym8Mxi096MVKAr?=
 =?us-ascii?q?+O7LNYhSt1vka4rQXJbPh+hDgdyOEi6H4Hg+4TvgotwT6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999sB/MFPP0HLp8I3lds?=
 =?us-ascii?q?ffbckPthKKiRfPlPZaKIg+lvcRgSpnOGT9vWAqyuIhjBxu2426s5aDK2l34K25?=
 =?us-ascii?q?BRtYPCXvZ8wP4jHtkbpensGO0oCzGZVhHy8HXZryQvKuDTISru/nNweVHT04q3?=
 =?us-ascii?q?ebH6ffHACF5EdnqXLPD46kN3WNKHYFytViQQGXJFZDjwAMQDU6gpk5Gxixy8P7?=
 =?us-ascii?q?d0d54i0R6kT8qhtR0e9oMxj/UmHCpAancDs0SZ6fLAZI4QFG/UvaLcue7udrFS?=
 =?us-ascii?q?FC4pKhtBCNKnCcZwlQD2EGQEmECE74PrW0+dnM6euYBve9L/vTZ7WBs/deWuyM?=
 =?us-ascii?q?xZKu1Itm4jmNOt+OPnlkE/00xE5DUWplFMTenjUFUzYXmD7Vb86HuBe8/TV6r8?=
 =?us-ascii?q?C48PT2QQLv+JGAC71IPdV0/BC2h6iDOvWUhCZ4LzZYy5wNyWXJyLgZwF4dlSVu?=
 =?us-ascii?q?eyOxHrQHsC7HVLjQlbNPDx4HdyNzM9NF76Ii0QlMOs7bidL12qR7jv4vDFdFWk?=
 =?us-ascii?q?Lumtu0ZcwROGy9MFLHBECWNLWJPzHLwsf3Yb+iRr1UlulbqxqwuTODGU/5IjuD?=
 =?us-ascii?q?jyXpVwyoMexUli6bIQdRuJujfRdtE2TjSNPmZwa/MN92iz023LI1imnLNW4aLT?=
 =?us-ascii?q?hzbUdNoqeM4iNfh/V1A3ZB4WZ9LemYhyaZ6PHVKooXsftuGCh7i/hW72g6y7RL?=
 =?us-ascii?q?6iFJX/h1mCrUrt5zrFCqiOiPyjx7UBVQrjZHnp6EvUJnOa/B7JlPRW7E/A4R7W?=
 =?us-ascii?q?WXExkLp8FqCtvqu6BRzNjAjKPyKDdY/NLS8ssRHMzUKMOBMHo8PhvlAj/UDA0Z?=
 =?us-ascii?q?TTG1MWHTnVBSkPaX9i7dkp9vg5zlntI1VrJBUhRhDe8XEEJNBtsdJJ5xUnUkmK?=
 =?us-ascii?q?SFhdQEo3eysU+Cat9du8XuUO+ICPqnCyuchKMMWQYMwKj4JMxHP4vmwUVtaURS?=
 =?us-ascii?q?jIXOGkzAG9tKp3syPUcPvExR/S0mHSUI0EX/Z1bouSdLGA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAACdUwVch0O0hNFiDg4BAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYEwKiaBXAQLJwqHNgOETotBSoINFIh9jjeBJANMEwEYEwGEQAK?=
 =?us-ascii?q?DRyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQEBAgEBAjcGAQE3A?=
 =?us-ascii?q?QUGAwEBAQEIEQQBAQEeCQcDHhEUCQgCBAoEBQUDgk5LgWoDDQgBAgKaXwKKB4I?=
 =?us-ascii?q?fgnYBAQWEeQ0LggkIFIwIEQaBQD+BEUaCTIFBAYEVgjGDLoImiRAegXOFW45xJ?=
 =?us-ascii?q?y4Jjg6DRoFbhRGKOo50iVICBAIEBQINAQEFgUaCDTMaCBsVgyeCG4NtgxaHAjt?=
 =?us-ascii?q?ygQUBASGHaQSBKgGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AOAACdUwVch0O0hNFiDg4BAQEEAQEHBAEBgVEHAQELAYE?=
 =?us-ascii?q?wKiaBXAQLJwqHNgOETotBSoINFIh9jjeBJANMEwEYEwGEQAKDRyI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQEBAgEBAjcGAQE3AQUGAwEBAQEIEQQ?=
 =?us-ascii?q?BAQEeCQcDHhEUCQgCBAoEBQUDgk5LgWoDDQgBAgKaXwKKB4IfgnYBAQWEeQ0Lg?=
 =?us-ascii?q?gkIFIwIEQaBQD+BEUaCTIFBAYEVgjGDLoImiRAegXOFW45xJy4Jjg6DRoFbhRG?=
 =?us-ascii?q?KOo50iVICBAIEBQINAQEFgUaCDTMaCBsVgyeCG4NtgxaHAjtygQUBASGHaQSBK?=
 =?us-ascii?q?gGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="43293343"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 08:08:34 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726723AbeLCQIg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 11:08:36 -0500
Received: from mail-eopbgr810072.outbound.protection.outlook.com ([40.107.81.72]:19293
        "EHLO NAM01-BY2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726560AbeLCQIg (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 11:08:36 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=xilinx.onmicrosoft.com; s=selector1-xilinx-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=v43zDua4GLq9c6JErXxEgUi3BCZ6ChilDJIIPazEdNU=;
 b=r+y9wpEGlpOO6KZYHRcd5hMZEWAsfP5Q3oQlqknetRFYzXhzmdozJIkq1SWT6FX6w2PqWCBaQVhDBmuBPy5YiBwU7qKLy3LGWJCYBZyK9GR7ETct4VzoTiF8n+enS9W4vrEXU3X9eODj0xm62J/CmXK5UT4p3kCfz8lFCMNaAkw=
Received: from BL0PR02MB5633.namprd02.prod.outlook.com (20.177.241.80) by
 BL0PR02MB4788.namprd02.prod.outlook.com (20.177.144.85) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1382.21; Mon, 3 Dec 2018 16:05:25 +0000
Received: from BL0PR02MB5633.namprd02.prod.outlook.com
 ([fe80::68ed:9ca9:c7da:d76d]) by BL0PR02MB5633.namprd02.prod.outlook.com
 ([fe80::68ed:9ca9:c7da:d76d%2]) with mapi id 15.20.1382.020; Mon, 3 Dec 2018
 16:05:25 +0000
From: Anurag Kumar Vulisha <anuragku@xilinx.com>
To: Alan Stern <stern@rowland.harvard.edu>
CC: Felipe Balbi <balbi@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Shuah Khan <shuah@kernel.org>, Johan Hovold <johan@kernel.org>,
        Jaejoong Kim <climbbb.kim@gmail.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Roger Quadros <rogerq@ti.com>,
        Manu Gautam <mgautam@codeaurora.org>,
        "martin.petersen@oracle.com" <martin.petersen@oracle.com>,
        Bart Van Assche <bvanassche@acm.org>,
        Mike Christie <mchristi@redhat.com>,
        Matthew Wilcox <willy@infradead.org>,
        Colin Ian King <colin.king@canonical.com>,
        "linux-usb@vger.kernel.org" <linux-usb@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "v.anuragkumar@gmail.com" <v.anuragkumar@gmail.com>,
        Thinh Nguyen <thinhn@synopsys.com>,
        Tejas Joglekar <tejas.joglekar@synopsys.com>,
        Ajay Yugalkishore Pandey <APANDEY@xilinx.com>
Subject: RE: [PATCH v7 01/10] usb: gadget: udc: Add timer support for usb
 requests
Thread-Topic: [PATCH v7 01/10] usb: gadget: udc: Add timer support for usb
 requests
Thread-Index: AQHUiWbrxVzoMt2EkU67+RgGKmmQY6Vrp4EAgAEXBVCAAF3jgIAAAp+A
Date: Mon, 3 Dec 2018 16:05:24 +0000
Message-ID: <BL0PR02MB563382F544FBEA926452DCF1A7AE0@BL0PR02MB5633.namprd02.prod.outlook.com>
References: <BL0PR02MB563334585C8E1EEFF91EAA39A7AE0@BL0PR02MB5633.namprd02.prod.outlook.com>
 <Pine.LNX.4.44L0.1812030945440.21114-100000@netrider.rowland.org>
In-Reply-To: <Pine.LNX.4.44L0.1812030945440.21114-100000@netrider.rowland.org>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-Auto-Response-Suppress: DR, RN, NRN, OOF, AutoReply
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=anuragku@xilinx.com; 
x-originating-ip: [149.199.50.133]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;BL0PR02MB4788;6:YPCtVN7guMDf3Rd3Mi88YYrLUsqusxPwC8QAtHwLkuNLUf9QKTkh+7dRGh7nA9aSiLibGNxcOUbAg85uXpxDPDo0vKwz/Fla29m2q7fcEkUOqaIyE23kmXezAipyFdve5qnCse2r4tyjbHODrOR9/W5maEdZwqs+RNNoJwhg583yMH37mwGzCZ7u3CgCSXTsRXhTyG+19FOgrh88wa8UeTncb+Y5wnIUJsEeaHVh8/084n+unFF2gXQM9rAFdHDAeWl7FIjThgydfUfCkJ+Vj83XIZAcd8p8h/CTr+QVieLSkhND/VXmDZePJ+lz0lDrgHKS/pHKvTaYDjIexWb6kKwNa10cqoN2Hi1K3opMKfE+4DDYmax83SYptkqlq0qfgbFT+loi36y2XAXtNSSDd5TqI+fMh2Kr775fZCufIm2+Ulkg00NWCsxUT1FeFhp779K7d2rdPoEWQEtQmii5vQ==;5:6NCRO8PtOThxwZfXRh9t1QhJxGwpxWUBaemXYpdsZcHZkxJ2HD7zA6Qz7lS21RtA/tbhbcCRQjPBZ9Ax44Z6dgktB5q5Lia+1PuKBBqubN6ewDx9Z0W4+oPqvZMaKuJTdCYcs1wTys/WSL/EO+zlP4ABd1XdeIiJE+/xvKTvwdI=;7:dC0HipeiC7AiAUMPBZ/qgFYGNaKS6wlPOhYtKW9l58ygjPUDPaFj/RrO1d7LmkjEbOcNcAADKslg+QfetpVrr+gxBXnRJTDB5D89LpRiehJQ2ZnTMn+u35gbYBD1HgBeJoB/yNNaQE7cQBzjD/CWLQ==
x-ms-office365-filtering-correlation-id: e2a7c5fe-b12f-4acd-ec45-08d6593922bc
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:BL0PR02MB4788;
x-ms-traffictypediagnostic: BL0PR02MB4788:
x-ld-processed: 657af505-d5df-48d0-8300-c31994686c5c,ExtAddr
x-microsoft-antispam-prvs: <BL0PR02MB478830B2A8E0E6126A0C92FCA7AE0@BL0PR02MB4788.namprd02.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(10201501046)(3231455)(999002)(944501493)(52105112)(93006095)(93001095)(3002001)(6055026)(148016)(149066)(150057)(6041310)(20161123560045)(20161123564045)(20161123558120)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(201708071742011)(7699051)(76991095);SRVR:BL0PR02MB4788;BCL:0;PCL:0;RULEID:;SRVR:BL0PR02MB4788;
x-forefront-prvs: 08756AC3C8
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(136003)(39860400002)(346002)(396003)(366004)(376002)(189003)(199004)(13464003)(99286004)(551934003)(105586002)(26005)(106356001)(8936002)(14444005)(81166006)(81156014)(8676002)(55016002)(486006)(476003)(4326008)(53936002)(33656002)(102836004)(186003)(66066001)(97736004)(9686003)(256004)(2906002)(11346002)(446003)(229853002)(71190400001)(71200400001)(478600001)(316002)(3846002)(86362001)(54906003)(14454004)(6436002)(107886003)(2171002)(6116002)(7416002)(7736002)(305945005)(6506007)(76176011)(68736007)(6246003)(74316002)(25786009)(5660300001)(6916009)(39060400002)(7696005);DIR:OUT;SFP:1101;SCL:1;SRVR:BL0PR02MB4788;H:BL0PR02MB5633.namprd02.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: AFHIYrmnnmIfeG/52MQHLSd1iFpSclLDvVTd5vIw8AnxjZ8t844I2MAMe0k8kGMeUH12kzWp/Ots2OwPSn7pDu1qop4UVgnRiyNDckbXHiT1DmcQQbGmV4QcnsaqRrwKSkQ0sRNjNfbfRAcujxQ6oTFNFXPlByBxw2OHMjwPTOT7E2RXdkL5e6A4bKG+NP6CV4sgFAj59v2SZ3Yn6U+kPdAJNKEgtAgS/tYlEEtPEDr7nrcrWXu1xBjL5WncbtyJ3bBPHywCZZoH/2eOR+0+09gZdxgegsmH4PnzF+WsjDiNpRFtPIbN8G6fo3A9+hh0ymElwzR9/eqRlhm9xRSm8CRoUPa1Ov2sBLuXCrmGnSQ=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: xilinx.com
X-MS-Exchange-CrossTenant-Network-Message-Id: e2a7c5fe-b12f-4acd-ec45-08d6593922bc
X-MS-Exchange-CrossTenant-originalarrivaltime: 03 Dec 2018 16:05:24.8757
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 657af505-d5df-48d0-8300-c31994686c5c
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL0PR02MB4788
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


Hi Alan,

>-----Original Message-----
>From: Alan Stern [mailto:stern@rowland.harvard.edu]
>Sent: Monday, December 03, 2018 8:21 PM
>To: Anurag Kumar Vulisha <anuragku@xilinx.com>
>Cc: Felipe Balbi <balbi@kernel.org>; Greg Kroah-Hartman
><gregkh@linuxfoundation.org>; Shuah Khan <shuah@kernel.org>; Johan Hovold
><johan@kernel.org>; Jaejoong Kim <climbbb.kim@gmail.com>; Benjamin
>Herrenschmidt <benh@kernel.crashing.org>; Roger Quadros <rogerq@ti.com>; M=
anu
>Gautam <mgautam@codeaurora.org>; martin.petersen@oracle.com; Bart Van
>Assche <bvanassche@acm.org>; Mike Christie <mchristi@redhat.com>; Matthew
>Wilcox <willy@infradead.org>; Colin Ian King <colin.king@canonical.com>; l=
inux-
>usb@vger.kernel.org; linux-kernel@vger.kernel.org; v.anuragkumar@gmail.com=
;
>Thinh Nguyen <thinhn@synopsys.com>; Tejas Joglekar
><tejas.joglekar@synopsys.com>; Ajay Yugalkishore Pandey <APANDEY@xilinx.co=
m>
>Subject: RE: [PATCH v7 01/10] usb: gadget: udc: Add timer support for usb =
requests
>
>On Mon, 3 Dec 2018, Anurag Kumar Vulisha wrote:
>
>> >First of all, if some sort of deadlock causes a transfer to fail to
>> >complete, the host is expected to cancel and restart it.  Not the
>> >gadget.
>> >
>>
>> Thanks for spending your time in reviewing this patch.  The deadlock
>> is  a very rare case scenario and is happening because both the gadget
>> controller & host controllers get out of sync and are stuck waiting for =
the
>> relevant event. For example this issue is observed in stream protocol wh=
ere
>> the gadget controller is waiting on Host controller to issue PRIME trans=
action
>> and  Host controller is waiting on gadget to issue ERDY transaction. Sin=
ce
>> the stream protocol is gadget driven, the host may not proceed further u=
ntil it
>> receives a valid Start Stream (ERDY) transaction from gadget.
>
>That's not entirely true.  Can't the host cancel the transfer and then
>restart it?
>

Yes the host can cancel the transfer. This issue originated from the endpoi=
nts using bulk
streaming protocol and may not occur with normal endpoints. AFAIK bulk stre=
aming is
gadget driven, where the gadget is allowed to select which stream id transf=
er the host
should work on . Since the host doesn't have control on when the transfer w=
ould be
selected by gadget, it may wait for longer timeouts before cancelling the t=
ransfer.=20

>> Since the gadget
>> controller driver is aware that the controller is stuck , makes it respo=
nsible
>> to recover the controller from hang condition by restarting the transfer=
 (which
>> triggers the controller FSM to issue ERDY to host).
>
>Isn't there a cleaner way to recover than by cancelling the request and
>resubmitting it?
>

dequeuing the request issues the stop transfer command to the controller, w=
hich
cleans all the hardware resource allocated for that endpoint. This also res=
ets the
hardware FSMs for that endpoint . So, when re-queuing of the transfer happe=
ns
the controller starts allocating hardware resources again, thus avoiding th=
e probability
of entering into the issue. I am not sure of other controllers, but for dwc=
3, issuing
the stop transfer is the only way to handle this issue.=20

@Felipe:  Can you please provide your suggestion on this. =20
 =20
>> >Second, if a request timer expires and the request is cancelled, the
>> >gadget driver's completion handler will be called.  This is not what
>> >you want if the UDC core is going to resubmit the request
>> >automatically.
>> >
>> >Third, if a request timer expires and the timer handler calls
>> >usb_ep_dequeue() followed immediately by usb_ep_queue_timeout(), the
>> >resubmit will probably fail because the dequeue won't have completed
>> >yet.
>> >
>> >Fourth, the patch contains a race between the timer expiring and the
>> >request completing.
>>
>> Thanks for correcting, I agree with you on all the above 3 cases that th=
e
>> resubmission of the request should only be done from the class driver an=
d
>> the udc core should simply dequeue the request on timeout. I am not sure
>> why I haven't seen any issue while testing on this patch series. I will =
modify
>> the code to handle the resubmitting of requests properly.
>
>How can the gadget driver know what timeout to use?  The host is
>allowed to be as slow as it wants; the gadget driver doesn't have any
>way to tell when the host wants to start the transfer.

Yes , I agree with you that the timeout may vary from usage to usage. This =
timeout
should be decided by the class driver which queues the request. As discusse=
d above
this issue was observed in streaming protocol , which  is very much faster =
than normal
BOT modes and it works on super speed .  More over the gadget controller de=
cides
the selection of the stream id on which the host should work , so taking al=
l these into
consideration I kept 50ms timeout for stream transfers, so that the perform=
ance may
not get decreased.

Thanks,
Anurag Kumar Vulisha
