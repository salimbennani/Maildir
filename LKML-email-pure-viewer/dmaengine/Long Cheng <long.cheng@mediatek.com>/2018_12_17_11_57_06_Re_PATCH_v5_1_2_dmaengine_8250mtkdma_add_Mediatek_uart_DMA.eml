Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:42:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 34D8D5805FC;
	Mon, 17 Dec 2018 03:57:27 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 03:57:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUnTdvh+7pv+wBf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+8QIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRmRPQ8ZfWTJPDIy+?=
 =?us-ascii?q?YYsAE+0PM+lXoInmv1sDrwCzBRWuCe711jNFnGP60K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rSq9X1MqgSWv2rwanI0zrDafxW0ir65YjMdRAhp/6MUahsfsrR10YvEQzFg06V?=
 =?us-ascii?q?qYP7IjyV1/4Cs3SF4OpjT+6gl2knqwRorzWp28wiiZHJi5oLxlzY8Sh12ps5KN?=
 =?us-ascii?q?OmREJhfNKpE4dcuzubOoZ0Ws8uXntktDgmxrAIo5K3YSkHxZo9yxPcdvCKdZWD?=
 =?us-ascii?q?7Aj5W+aLOzh4gWpoeLKhiBa29kit0vP8Vsaq31ZQtCZFkcfDtmoL1xPN7siLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IsxqQ8mocdvEjdBCP6hUb7gLOMekgl+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8y7AOQ4NBUOXmeC9eS/yrLj50v5T6tOjvEvla?=
 =?us-ascii?q?nYvpbaKtoBpqOiHQ9V3Zgs6wylAzelztsYh38HI0xBeB6diIjpIV7OLOjiDfij?=
 =?us-ascii?q?m1SsjCtrx/feM73lA5XNLWbMnK3ufLZg8ENczAszzdZC55NbEL0BIfTzWlPvu9?=
 =?us-ascii?q?zcFBM2Lwu0w+P/AtVnyoweQX6PArOeMK7KsV+H/OMvI/WWa48Sojr9K+Ul6OTo?=
 =?us-ascii?q?jX82glIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOnygl2YTTFTf2qyX7?=
 =?us-ascii?q?475jwjCoKmCpnMSpqugLyG2ie7GJpWa3tCClCNF3foaoqFV+0NaCKUPs9ujDgE?=
 =?us-ascii?q?WaK9RI8m0BGkrBX6xKZ/LurI5i0Ysoru28Ju5+3TkhEy9iZ4D96H3GGPVGx0mm?=
 =?us-ascii?q?IIRzkr3KFwu0B9y1GD0bRmjPxcD9Bc+/RJUgIiP57G0+N6E8zyWh7GftqRS1ap?=
 =?us-ascii?q?WNOmDSs1TtIw2dAOZUl9Fs6mjhDC2SqqHrAUm6aKBJwy7qLTwXzxK9xhxHbB0a?=
 =?us-ascii?q?krl0MmTddXNW26mq5/8BDeCJPTnEWHiammb6Qc0zTL9GeY02WOukZUUApzUaXA?=
 =?us-ascii?q?WXASfU/WrdX/5kPfQL6iE7UnMg1dycGcLqtGcMHmjVJDRP37ItTRf3qxm3usBR?=
 =?us-ascii?q?aP3r6DcZDle3sD0ynHCEgLiQYT/W2YOgg4HSqhp2PeDDpzFVPgeU/s8O9+qG+l?=
 =?us-ascii?q?QU8w1Q2Fc0ph17+t8B4PmfOcU+8T3q4DuCo5tzV0HVO939XKC9qApwttZrlcbc?=
 =?us-ascii?q?k64Fdd0WLZtgp9PpO7IqBmh14edRl3vkz02xV2DIVAjdYlrHcwwAVuLqKY1UtL?=
 =?us-ascii?q?dymE0pDoJr3XNm7y8Qi1ZK7SxF7f38iZ+6cV5PsjtlXsoRumFkwh83VgzdlYyH?=
 =?us-ascii?q?+c5pTMDAoPXpP9SEc39x5mp77EZikx/Z/b1XppMaOsqD/Nx8opBPc5yhanZ9pe?=
 =?us-ascii?q?ML6EGBXuHMEABsmuKPYlm16mbh8fOOBS9ag0P96pdvec2a6rOvpgkyyijWhd/I?=
 =?us-ascii?q?991UeM/TJmSuHUx5YF3+2Y3gyfWjfmjVeurtr4mZpZajEVBGa/zzbrBJRQZqFr?=
 =?us-ascii?q?YYkEE2OuLNCpydVkgJ7tXWVV9FqiB1MAxc+odgCeb1373Q1My0sXpWarlje/zz?=
 =?us-ascii?q?xxizsptLaQ3DTSw+T+cxoKIm5KRGh4gVbsO4S0lM0aXE6zYggtlRul41v6xqdB?=
 =?us-ascii?q?qKR+KWnTXVlHfyzsI25+Vauws6KIY9RT55MwrSVXTOO8bEiYSrHnuRsa0CDjH2?=
 =?us-ascii?q?xEyDAgbT6quZb5nx18iG2DKnZ+t37ZecB2xRfC693QX/9R3jwaRCZmjTnbHESz?=
 =?us-ascii?q?P96s/d+MjZfMrvi+V369Vp1UaSTqzZmPtCyh6W1oAB2/meu+mtnmEQg8zC/62M?=
 =?us-ascii?q?NmVSTOrBbgfIbr0762Pv5gfkltHFX88dZ1Gplikossg5EdwXsaiY+U/XYdkWfz?=
 =?us-ascii?q?LM9U2aTxbHcWQT4LwtjV4BXq2UF5L3KJwZ75WWuZwsd7e9a6ZWYW0Don789WEK?=
 =?us-ascii?q?eU8KBEnSxtr1q9rALRYuJyki0TyPQw834an/8GuBA2wSqDGLASElJVPSjtlxSO?=
 =?us-ascii?q?8tC/o79bZGepcbisykV+mcqtA62FogFZQHz5YIstHTds7sVjN1LByGHz6obheN?=
 =?us-ascii?q?XKbNMcrBuUkwrbj+hOKZI8jf4KhSthOWLgsnwp0e87jRpy3Z6kuIiLMXli/KW8?=
 =?us-ascii?q?AhRALD36e9sT+i3xjaZZhsuZxJqgHpJlGjUWRpfoSe+oHSkWtfTmMQaODTI9pm?=
 =?us-ascii?q?2aGbrZAQ+Q9kNmo2jTHJCsMnGdPGMZwsl6RBmBOExfhxgZXDcgkZ48CA+q39bt?=
 =?us-ascii?q?cFtj6jAS+174qQZMyuRyOBnkSWrfoAaoajEpSJmQNhZW7wdC51vLPsya9O58Ay?=
 =?us-ascii?q?ZY/pi5pgyXNmObfxhIDX0OWkGcB1HjOaSu5cDd8+eCAOqyNeDOYbKIqexRTPqI?=
 =?us-ascii?q?wZOv0o17/zeDLMmPP39iD+El1UpHR3x2B8PZmzAXQSwNiy3Nd9KbpAu7+iBvrs?=
 =?us-ascii?q?Cw7vXrWAHs5YuOEbdSMs9v+xe5gaidLe6QmT15JC1c1pMNw3/I1bce0EQTiyFo?=
 =?us-ascii?q?azmiD7AAuTTRQ6LXn69dFwQbZD9rNMtU86I82RFANtTGitzuzL53kP40B01BVV?=
 =?us-ascii?q?zggcypYc0KI2egNFLIHkqLNbKGJSHVzMHze6+zVbpQjOBMvR2qpTmbC1PjPiiE?=
 =?us-ascii?q?lzTxSxCvMORMgDuHMxBEpI69cghiCW74QdLiax27NsJ3jDIszb01gHPKKXATMT?=
 =?us-ascii?q?xmf0xRqb2Q6DtSgu9jFGxZ8nplMe6Elj6Z7ubCLJYWtPprAiJsmONb4HQ10b1V?=
 =?us-ascii?q?7C5fSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPPaRyp4VYnvN+loy5G?=
 =?us-ascii?q?OfQ0ARqtJjTMLmva94ydXVkq/3bjBY/ISH09EbAp3wL8SIeFEhPBzmUGrQCw0K?=
 =?us-ascii?q?CzWrOGfQr0lQnPCb6nCW6JM9r86/y9I1VrZHWQltRbshAUN/EYlHec8vUw=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAADJjRdch0O0hNFeBhwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVIGAQELAYNrJ4N8lA+CDRRollyBcxQYEwGBS4YKIjUIDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCCkvgjYkAYJiAQIDAQIgBFIGCQEBChgCAiYCAgNUBgoEBQWDHYIAA?=
 =?us-ascii?q?QWnfnwzih6BC4szgVc/gRGCXTWEc4MWglcCizaEXjaQTwcCgiQEj0oKAoFRiCc?=
 =?us-ascii?q?mhygsihWPI4FIA4IJMxojgzyQaDIBATGBBQEBjW8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AWAADJjRdch0O0hNFeBhwBAQEEAQEHBAEBgVIGAQELAYN?=
 =?us-ascii?q?rJ4N8lA+CDRRollyBcxQYEwGBS4YKIjUIDQEDAQEBAQEBAgETAQEBCgsJCCkvg?=
 =?us-ascii?q?jYkAYJiAQIDAQIgBFIGCQEBChgCAiYCAgNUBgoEBQWDHYIAAQWnfnwzih6BC4s?=
 =?us-ascii?q?zgVc/gRGCXTWEc4MWglcCizaEXjaQTwcCgiQEj0oKAoFRiCcmhygsihWPI4FIA?=
 =?us-ascii?q?4IJMxojgzyQaDIBATGBBQEBjW8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="56647538"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 03:57:25 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732616AbeLQL5V (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 06:57:21 -0500
Received: from mailgw02.mediatek.com ([1.203.163.81]:51786 "EHLO
        mailgw02.mediatek.com" rhost-flags-OK-FAIL-OK-FAIL) by vger.kernel.org
        with ESMTP id S1727255AbeLQL5V (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 06:57:21 -0500
X-UUID: 2420496297034a8c81cef50108929910-20181217
X-UUID: 2420496297034a8c81cef50108929910-20181217
Received: from mtkcas32.mediatek.inc [(172.27.4.250)] by mailgw02.mediatek.com
        (envelope-from <long.cheng@mediatek.com>)
        (mailgw01.mediatek.com ESMTP with TLS)
        with ESMTP id 1336393856; Mon, 17 Dec 2018 19:57:08 +0800
Received: from MTKCAS32.mediatek.inc (172.27.4.184) by MTKMBS31N1.mediatek.inc
 (172.27.4.69) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Mon, 17 Dec
 2018 19:57:07 +0800
Received: from [10.17.3.153] (10.17.3.153) by MTKCAS32.mediatek.inc
 (172.27.4.170) with Microsoft SMTP Server id 15.0.1395.4 via Frontend
 Transport; Mon, 17 Dec 2018 19:57:06 +0800
Message-ID: <1545047826.28871.69.camel@mhfsdcap03>
Subject: Re: [PATCH v5 1/2] dmaengine: 8250_mtk_dma: add Mediatek uart DMA
 support
From: Long Cheng <long.cheng@mediatek.com>
To: Sean Wang <sean.wang@kernel.org>
CC: <vkoul@kernel.org>, <robh+dt@kernel.org>, <mark.rutland@arm.com>,
        Ryder Lee =?UTF-8?Q?=28=E6=9D=8E=E5=BA=9A=E8=AB=BA=29?= 
        <ryder.lee@mediatek.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        <dan.j.williams@intel.com>, <gregkh@linuxfoundation.org>,
        <jslaby@suse.com>,
        Sean Wang =?UTF-8?Q?=28=E7=8E=8B=E5=BF=97=E4=BA=98=29?= 
        <sean.wang@mediatek.com>, <dmaengine@vger.kernel.org>,
        <devicetree@vger.kernel.org>,
        <linux-arm-kernel@lists.infradead.org>,
        <linux-mediatek@lists.infradead.org>,
        <linux-kernel@vger.kernel.org>, <linux-serial@vger.kernel.org>,
        <srv_heupstream@mediatek.com>, <yingjoe.chen@mediatek.com>,
        YT Shen <yt.shen@mediatek.com>,
        Long Cheng <long.cheng@mediatek.com>
Date: Mon, 17 Dec 2018 19:57:06 +0800
In-Reply-To: <CAGp9LzqFS5ku8-WE0Xc2xwztw9DumeU0DE4ZXbpH8w8u12LnOA@mail.gmail.com>
References: <1544506645-27979-1-git-send-email-long.cheng@mediatek.com>
         <1544506645-27979-2-git-send-email-long.cheng@mediatek.com>
         <CAGp9LzqB=hzkOHZqa-ZzRLcJujU--7gxYZczXiEj3DiH+FmhbQ@mail.gmail.com>
         <1544700985.28871.26.camel@mhfsdcap03>
         <CAGp9LzpGfVgjL9MMQyh2iZRD9bJiuH0B0GTg_bahaa5ju2wmzw@mail.gmail.com>
         <1545035989.28871.41.camel@mhfsdcap03>
         <CAGp9LzqFS5ku8-WE0Xc2xwztw9DumeU0DE4ZXbpH8w8u12LnOA@mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.2.3-0ubuntu6 
Content-Transfer-Encoding: 7bit
MIME-Version: 1.0
X-MTK: N
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 2018-12-17 at 02:07 -0800, Sean Wang wrote:
> On Mon, Dec 17, 2018 at 12:40 AM Long Cheng <long.cheng@mediatek.com> wrote:
> >
> > On Fri, 2018-12-14 at 12:09 -0800, Sean Wang wrote:
> 
> < ... >
> 
> > > > > > +
> > > > > > +               mtk_dma_chan_write(c, VFF_ADDR, cfg->src_addr);
> > > > > > +               mtk_dma_chan_write(c, VFF_LEN, rx_len);
> > > > > > +               mtk_dma_chan_write(c, VFF_THRE, VFF_RX_THRE(rx_len));
> > > > > > +               mtk_dma_chan_write(c,
> > > > > > +                                  VFF_INT_EN, VFF_RX_INT_EN0_B
> > > > > > +                                  | VFF_RX_INT_EN1_B);
> > > > > > +               mtk_dma_chan_write(c, VFF_INT_FLAG, VFF_RX_INT_FLAG_CLR_B);
> > > > > > +               mtk_dma_chan_write(c, VFF_EN, VFF_EN_B);
> > > > >
> > > > > I'd prefer to move those channel interrupt enablement to
> > > > > .device_alloc_chan_resources
> > > > > and related disablement to .device_free_chan_resources
> > > > >
> > > >
> > > > i think that, first need set the config to HW, and the enable the DMA.
> > > >
> > >
> > > I've read through the client driver and the dmaengine, I probably know
> > > how interaction they work and find out there is something you seem
> > > completely make a wrong.
> > >
> > > You can't do enable DMA with enabling VFF here. That causes a big
> > > problem, DMA would self decide to move data and not managed and issued
> > > by the dmaengine framework. For instance in DMA Tx path, because you
> > > enable the DMA and DMA  buffer (VFF) and UART Tx ring uses the same
> > > memory area,  DMA would self start to move data once data from
> > > userland go in Tx ring even without being issued by dmaengine.
> > >
> > > Instead, you should ensure all descriptors are being batched by
> > > .device_prep_slave_sg and DMA does not start moving data until
> > > .device_issue_pending done and once descriptors are issued, DMA
> > > hardware or software have to do it as fast as possible.
> > >
> >
> > the VFF enable just enable the DMA function. DMA can't move data here.
> > Now, the code get length of the data in '.device_prep_slave_sg'.
> > And let DMA move data in '.device_issue_pending function'. in here, just
> > enable the function.
> >
> 
> My all curiosity are all from the descriptor programmed in
> .device_issue_pending in the other drivers at least includes
> information such data length, target address, and hardware control
> code, but in the driver only includes data length and even the target
> address is set up at device_config, that seems unusual.
> 
> And, It does too for DMA_DEV_TO_MEM?  What I see is there is almost no
> any code be programmed for kick off the hardware for the direction but
> DMA still can move. That is another point I got confused.
> 

8250_dma in tty, mapping xmit buffer to DMA buffer. and the tx just use
the only one buffer. it's ring buffer. 8250_dma set the begin address
and length of the buffer by means of '.deivce_config' function. 
when TX happen, tty_write will write data to xmit buffer. in 8250_dma,
will set the address and length of the data by means of
'.device_prep_slave_sg'. but the address is in the xmit buffer rang. the
WPT(write pointer), RPT(read pointer) registers are recored the DMA data
transfer status, include the current location of transmission. and the
apdma is only for UART. So don't need recored the the address of data ,
target address in '.device_prep_slave_sg'.
in '.device_issue_pending', just using the data length from descriptor,
WPT ,  we can figure out what's data need to move. then update the WPT
and flush TX.

RX too. RX use other buffer in instead of XMIT buffer. when RX interrupt
coming, will update the RPT, and 8250_dma will get the length from vchan
complete. then 8250_dma can get the data.

> > > > > > +
> > > > > > +               if (!c->requested) {
> > > > > > +                       c->requested = true;
> > > > > > +                       ret = request_irq(mtkd->dma_irq[chan->chan_id],
> > > > > > +                                         mtk_dma_rx_interrupt,
> > > > > > +                                         IRQF_TRIGGER_NONE,
> > > > > > +                                         KBUILD_MODNAME, chan);
> > > > >
> > > > > ISR registration usually happens as the driver got probe, it can give
> > > > > the system more flexibility to manage such IRQ affinity on the fly.
> > > > >
> > > >
> > > > i will move the request irq to alloc channel.
> > > >
> > >
> > > why don't let it done in driver probe?
> > >
> > there are many uart ports, like UART[0-5]. in probe, just get the all
> > irq of ports. which port is using, who request irq. example, UART1 is
> > using. we just request irq of uart1. uart0, uart[2-5] don't need request
> > irq.
> >
> > > > > > +                       if (ret < 0) {
> > > > > > +                               dev_err(chan->device->dev, "Can't request rx dma IRQ\n");
> > > > > > +                               return -EINVAL;
> > > > > > +                       }
> > > > > > +               }
> > > > > > +       } else if (cfg->direction == DMA_MEM_TO_DEV)    {
> > > > > > +               unsigned int tx_len = cfg->dst_addr_width * 1024;
> > > > >
> > > > > Ditto as above, it seems you should use cfg->dst_port_window_size
> > > > >
> > > > > > +
> > > > > > +               mtk_dma_chan_write(c, VFF_ADDR, cfg->dst_addr);
> > > > > > +               mtk_dma_chan_write(c, VFF_LEN, tx_len);
> > > > > > +               mtk_dma_chan_write(c, VFF_THRE, VFF_TX_THRE(tx_len));
> > > > > > +               mtk_dma_chan_write(c, VFF_INT_FLAG, VFF_TX_INT_FLAG_CLR_B);
> > > > > > +               mtk_dma_chan_write(c, VFF_EN, VFF_EN_B);
> > > > >
> > > > > ditto, I'd prefer to move those channel interrupt enablement to
> > > > > .device_alloc_chan_resources and related disablement to
> > > > > .device_free_chan_resources
> > > > >
> > > > > > +
> > > > > > +               if (!c->requested) {
> > > > > > +                       c->requested = true;
> > > > > > +                       ret = request_irq(mtkd->dma_irq[chan->chan_id],
> > > > > > +                                         mtk_dma_tx_interrupt,
> > > > > > +                                         IRQF_TRIGGER_NONE,
> > > > > > +                                         KBUILD_MODNAME, chan);
> > > > >
> > > > > ditto, we can request ISR with devm_request_irq in the driver got
> > > > > probe and trim the c->request member
> > > > >
> > > > > > +                       if (ret < 0) {
> > > > > > +                               dev_err(chan->device->dev, "Can't request tx dma IRQ\n");
> > > > > > +                               return -EINVAL;
> > > > > > +                       }
> > > > > > +               }
> > > > > > +       }
> > > > > > +
> > > > > > +       if (mtkd->support_33bits)
> > > > > > +               mtk_dma_chan_write(c, VFF_4G_SUPPORT, VFF_4G_SUPPORT_B);
> > > > > > +
> > > > > > +       if (mtk_dma_chan_read(c, VFF_EN) != VFF_EN_B) {
> > > > > > +               dev_err(chan->device->dev,
> > > > > > +                       "config dma dir[%d] fail\n", cfg->direction);
> > > > > > +               return -EINVAL;
> > > > > > +       }
> > > > > > +
> > > > > > +       return 0;
> > > > > > +}
> > > > > > +
< ... >

