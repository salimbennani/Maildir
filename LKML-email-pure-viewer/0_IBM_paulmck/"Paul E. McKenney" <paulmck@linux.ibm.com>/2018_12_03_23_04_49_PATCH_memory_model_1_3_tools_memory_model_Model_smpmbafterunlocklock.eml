Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:59:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9463E580375;
	Mon,  3 Dec 2018 15:08:02 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 15:08:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AWDOknhU9512YcHS17LtE6qU/lu7V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeQPOuhXrYf9qVgVrRumBwShH//jxiNSi3Pqx6A2z/gtHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc37OKkIS++10a3IxijMYf9MxDzz75THfBU/rvGKW7J/b8rQxUcyHA7CllWf?=
 =?us-ascii?q?s5HlPzeQ1usRsGiW9O5gVeOpi246pAB9uDmvydwpioXTmo0VzVXE+Dx/zY0oJt?=
 =?us-ascii?q?O4UFZ2bcC4HJZUrS2WKoV7Tt04T211uys21qcKtJ+5cSQSzJkr3RzSZ+Cdf4WL?=
 =?us-ascii?q?/B7vTuicLDR+iXl4YrywnQyy/lKlyuDkVsm7zlJKri1dn9nSuXACyQbT5tKESv?=
 =?us-ascii?q?Rj5Eeh3yiA1wTJ5uFDO0A0mrLXK58nwrEuipoeqVrPEjPylUnskaObeFso9vK1?=
 =?us-ascii?q?5+nkfrnqvJ6ROo1shgH7KKsum8i/AeoiMggJWmiW4eC81Lzl/U3kT7RGl/42nb?=
 =?us-ascii?q?fDsJDcO8sbore1Awhb04Yl9Rm/FSyr0MoXnXYZNlJJYhGHgJbzO1HIPv/4Ce2z?=
 =?us-ascii?q?g1O2kDdk3/zGJKHuAo3RLnjfl7fsZbJ9609fyAUt19xe6I9UB6oFIPLyXE/xqd?=
 =?us-ascii?q?PZAgU4Mwyy3+boFtF92pkCVmKIB6+TKLnSvkOQ5uIzP+mMY5cYuDbnJPgk+/7h?=
 =?us-ascii?q?l3g5lUUdfam0x5QXbn+4E+9iI0WYZ3rsn9gAHX0Lvgo4UOzlllmCXSRPaHa1Wq?=
 =?us-ascii?q?I2/is7B56+DYffWoCth6SM3CW8HpJIfGxGCVeMEXHud4WDQPoMbCOSIsl8kj0L?=
 =?us-ascii?q?T7ShSokh1Q2wuw/+0bZoMu3U+igAv5L5yNd1//HTlQ019TFsFcudyGGNT2Z3nm?=
 =?us-ascii?q?8SXT85xqJ/rFd5yleC16h4nvNZGcZS5/NPTgc1K5rcw/ZmBND1XwLLZs2JR0q+?=
 =?us-ascii?q?QtW6HTExSco8w9wUbEZ7AdmiihHD0DCsA78ajLGLAJ008qTB33n+Pcp9ynDG1L?=
 =?us-ascii?q?U/gFkiWMdAKWqmhqtn/QjJG4HJi1mZl7qtdakEwSHC7nmDwnSUsEFYSgFwV77F?=
 =?us-ascii?q?Um4ZZkfRqdT55UbCT7u1BLQjMwtBz9OCK6RQZt3oi1VGWOnsONDEb22tnGewAA?=
 =?us-ascii?q?6CxqmQY4ryZ2UdwCLdBVAZnA8J43aJKxIyBie7rGLYFzxhC1Tvbljo8el/rnO7?=
 =?us-ascii?q?U0A1wxuLb01ny7q65BoVieaARPMU27IOoD0hpClsHFahw9LWDMKNpxZgfKVZZt?=
 =?us-ascii?q?M9/FdH1GLDuwxhJJCgKLpihlofcwRxsEPjzBF3CoRGkcg3o3Im1gtyKaSE0Fxf?=
 =?us-ascii?q?czOUx4z/OrrSKmPq5hCgd7bW2k3C0NaR4qoA8vA4pEvsvQ63Fksu6W5o08RI3H?=
 =?us-ascii?q?SG4JXKDw0SUYzqX0Yz9hh6oazaYyYn64PV031sLbe7sjvY1901A+slzw6qf81D?=
 =?us-ascii?q?P6OcCA/yD8oaCtCuKew3gVSmcggIPeFS9KEuOcOmeOCL2KqqPOZmgTKngn5L4I?=
 =?us-ascii?q?F70kKQ6SV8TvTE0IoCw/GdxgGHTSvzjE+9ssDrnoBJfSsSHmujxif+Ho5ee6py?=
 =?us-ascii?q?cZwNCWiwOc23x8xyiIL3VH5c6VGsGUkG2MiveReJa1z93AtQ1VkYoHC9mCu4yS?=
 =?us-ascii?q?B0nC8trqaFwCPOxOHifgIdOmFXXGlikUvsIY+sgtEaXUikdQgomAG+5UbnwahW?=
 =?us-ascii?q?v6B/L2jVQUdVcCn6NWBiUq2strWcZ85D8o8nsSJSUO6ke1CVVqb9owcG0yPkB2?=
 =?us-ascii?q?Zexio0dyupupX6mBx2knmdI2xwrHraeMFwwwnQ5NrHSP5V3zoGQjR4iDbNCli9?=
 =?us-ascii?q?Odmp4cubl5PZvu+iUGKhU4VZcTP3woOYqCu7+WpqDAW/nv+pnd3rCwo60S7919?=
 =?us-ascii?q?RxUSXIrRD8YpTk1qigMOJneFVoC0H468ZgBo5+lY4wjokK2XcGnpWV4WYHkWDr?=
 =?us-ascii?q?PNVYw63+bWABRT4Ww9HP5gjl11ZuLnaIx4L/S3WczdFtZ9i8YmMKxC0969pGB7?=
 =?us-ascii?q?uT7LxBhSF1uEa3rRrNYfhhmTcQ0f4u6H8Zg+4TogYswDuSAqsOHUZGJyzjjAqH?=
 =?us-ascii?q?78qxrKhMYGavcL6w1FdxnNy7DbGCpB1cV2j9eps4ASBw6cB/OkrW0HLv8oHkZM?=
 =?us-ascii?q?XQbdULux2IlBfAivJZKZMrmfoMmCpnInn9vXw+xu4/jBxu24y6vYedJ2Vs+qK5?=
 =?us-ascii?q?HgBXNjnva8wP/THtiL5UntyK0IC3ApVhBjILUYPzQv2yFzISsennOxyKED0hsX?=
 =?us-ascii?q?qbHbvfHQmC6EZptX7PEparN22JK3kd19ltWB6dJElHigAOQDo6hoI5FhytxMH5?=
 =?us-ascii?q?ckd2/DUR6UDjqhdW1uJkLRr/UnrcpAe1bDc7UoOfIQFS7gFD4UfVLMOf4vhyHy?=
 =?us-ascii?q?Fe4p2usgiNJnaHaARPCGEDQlaECEz7Prmy+dnA9PCVB+q5L/vTeLWOtPZRV/GS?=
 =?us-ascii?q?yZK01Ytm+TmMO96LPnljCf07x0VCUWp4G8TfhzUAVSgXmzjRYM6coRe24jd3od?=
 =?us-ascii?q?yn8PT3RALv4pOCC7tMPtVu+BC2gqaDO/SThCZjLjZY2Y0DxWXVyLgEx1MSjyBu?=
 =?us-ascii?q?dz+wEbUPryLNTaTQmrNJAB4fcS98KMxI76ck1AlXJcHbks/11qJ/jvMtEVhFSE?=
 =?us-ascii?q?fumtu3as0KOW29MFLHCV2PNLSHIz3L3s72bbm9Sb1WkOVbqRmwtSyHHE/kOzSJ?=
 =?us-ascii?q?jyPpWAy3MeFQkCGbOwRTuJ28chZoE2TsUMjqZQG7MNBpiz072rk0hnLMNW4BPj?=
 =?us-ascii?q?lwaUJNrruM7SxGhvVzAXBO7n1gLeOcgSaW8/HYKooKsftsGil1l/hV4HI/y7tU?=
 =?us-ascii?q?6iFLXP10mCvIod5orFGrie2PyjthUBpTpTdHnoOLvUN+OarH8plMQ2rL/BUI7T?=
 =?us-ascii?q?bYNxNfo9pjF82quK1KzNXLvLz8JS0E8N/O+8YYQc/OJ4bPNHsnLAqsESTfDCMb?=
 =?us-ascii?q?QjOxc2LSnUpQlLeV7HLR5p07rJfrsJkDULlWUBoyDPxJJF5iGYlIGJ5qWnsJ1/?=
 =?us-ascii?q?a+h+0F43yzvVOZEN1To5TCXfG6BfTpNSbfjLNBIRAPxOWrfswoKoTn1hk6ORFB?=
 =?us-ascii?q?l4PQFh+VBIgVrw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D+AQDMtgVch0O0hNFjHQIfBQeBTQKCa?=
 =?us-ascii?q?IECJ4xwjTwUiH2JPoR5gXMSAQEYBwwBiAkiNAkNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMgjYkAYJiAgEDAQIPZwYJAQEfMQMeCysHEgUdgn8BgWkDFQMCm0CJWAEBA?=
 =?us-ascii?q?YIdiAUNghyHbYQvEQaBQD+BEYVpiAUCkCqPaC4HAgKGfocOgyMLGJEmLIhYhXC?=
 =?us-ascii?q?JUgIEBgUCEwGBRoINcBWDJwmFRostUYEFAQEhijkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0D+AQDMtgVch0O0hNFjHQIfBQeBTQKCaIECJ4xwjTwUiH2?=
 =?us-ascii?q?JPoR5gXMSAQEYBwwBiAkiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJiA?=
 =?us-ascii?q?gEDAQIPZwYJAQEfMQMeCysHEgUdgn8BgWkDFQMCm0CJWAEBAYIdiAUNghyHbYQ?=
 =?us-ascii?q?vEQaBQD+BEYVpiAUCkCqPaC4HAgKGfocOgyMLGJEmLIhYhXCJUgIEBgUCEwGBR?=
 =?us-ascii?q?oINcBWDJwmFRostUYEFAQEhijkBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="65136194"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 03 Dec 2018 15:08:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726058AbeLCXH6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 18:07:58 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:46636 "EHLO
        mx0a-001b2d01.pphosted.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1725858AbeLCXH6 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 18:07:58 -0500
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id wB3N7rIi014496
        for <linux-kernel@vger.kernel.org>; Mon, 3 Dec 2018 18:07:57 -0500
Received: from e14.ny.us.ibm.com (e14.ny.us.ibm.com [129.33.205.204])
        by mx0a-001b2d01.pphosted.com with ESMTP id 2p5c14m75c-1
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 18:07:55 -0500
Received: from localhost
        by e14.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted
        for <linux-kernel@vger.kernel.org> from <paulmck@linux.vnet.ibm.com>;
        Mon, 3 Dec 2018 23:04:56 -0000
Received: from b01cxnp23033.gho.pok.ibm.com (9.57.198.28)
        by e14.ny.us.ibm.com (146.89.104.201) with IBM ESMTP SMTP Gateway: Authorized Use Only! Violators will be prosecuted;
        (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
        Mon, 3 Dec 2018 23:04:51 -0000
Received: from b01ledav003.gho.pok.ibm.com (b01ledav003.gho.pok.ibm.com [9.57.199.108])
        by b01cxnp23033.gho.pok.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id wB3N4oWJ19923064
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL);
        Mon, 3 Dec 2018 23:04:50 GMT
Received: from b01ledav003.gho.pok.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id B1FBFB2065;
        Mon,  3 Dec 2018 23:04:50 +0000 (GMT)
Received: from b01ledav003.gho.pok.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 80ECCB2066;
        Mon,  3 Dec 2018 23:04:50 +0000 (GMT)
Received: from paulmck-ThinkPad-W541 (unknown [9.70.82.38])
        by b01ledav003.gho.pok.ibm.com (Postfix) with ESMTP;
        Mon,  3 Dec 2018 23:04:50 +0000 (GMT)
Received: by paulmck-ThinkPad-W541 (Postfix, from userid 1000)
        id 8663E16C1BF4; Mon,  3 Dec 2018 15:04:53 -0800 (PST)
From: "Paul E. McKenney" <paulmck@linux.ibm.com>
To: linux-kernel@vger.kernel.org, linux-arch@vger.kernel.org,
        mingo@kernel.org
Cc: stern@rowland.harvard.edu, parri.andrea@gmail.com,
        will.deacon@arm.com, peterz@infradead.org, boqun.feng@gmail.com,
        npiggin@gmail.com, dhowells@redhat.com, j.alglave@ucl.ac.uk,
        luc.maranget@inria.fr, akiyks@gmail.com,
        Andrea Parri <andrea.parri@amarulasolutions.com>,
        "Paul E. McKenney" <paulmck@linux.ibm.com>,
        Daniel Lustig <dlustig@nvidia.com>
Subject: [PATCH memory-model 1/3] tools/memory-model: Model smp_mb__after_unlock_lock()
Date: Mon,  3 Dec 2018 15:04:49 -0800
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181203230411.GA27476@linux.ibm.com>
References: <20181203230411.GA27476@linux.ibm.com>
X-TM-AS-GCONF: 00
x-cbid: 18120323-0052-0000-0000-00000360A0F7
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010166; HX=3.00000242; KW=3.00000007;
 PH=3.00000004; SC=3.00000270; SDB=6.01126571; UDB=6.00585088; IPR=6.00906705;
 MB=3.00024430; MTD=3.00000008; XFM=3.00000015; UTC=2018-12-03 23:04:55
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18120323-0053-0000-0000-00005EFA5487
Message-Id: <20181203230451.28921-1-paulmck@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-03_12:,,
 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 priorityscore=1501
 malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
 clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
 mlxlogscore=982 adultscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.0.1-1810050000 definitions=main-1812030206
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Andrea Parri <andrea.parri@amarulasolutions.com>

>From the header comment for smp_mb__after_unlock_lock():

  "Place this after a lock-acquisition primitive to guarantee that
   an UNLOCK+LOCK pair acts as a full barrier.  This guarantee applies
   if the UNLOCK and LOCK are executed by the same CPU or if the
   UNLOCK and LOCK operate on the same lock variable."

This formalizes the above guarantee by defining (new) mb-links according
to the law:

  ([M] ; po ; [UL] ; (co | po) ; [LKW] ;
	fencerel(After-unlock-lock) ; [M])

where the component ([UL] ; co ; [LKW]) identifies "UNLOCK+LOCK pairs on
the same lock variable" and the component ([UL] ; po ; [LKW]) identifies
"UNLOCK+LOCK pairs executed by the same CPU".

In particular, the LKMM forbids the following two behaviors (the second
litmus test below is based on

  Documentation/RCU/Design/Memory-Ordering/Tree-RCU-Memory-Ordering.html

c.f., Section "Tree RCU Grace Period Memory Ordering Building Blocks"):

C after-unlock-lock-same-cpu

(*
 * Result: Never
 *)

{}

P0(spinlock_t *s, spinlock_t *t, int *x, int *y)
{
	int r0;

	spin_lock(s);
	WRITE_ONCE(*x, 1);
	spin_unlock(s);
	spin_lock(t);
	smp_mb__after_unlock_lock();
	r0 = READ_ONCE(*y);
	spin_unlock(t);
}

P1(int *x, int *y)
{
	int r0;

	WRITE_ONCE(*y, 1);
	smp_mb();
	r0 = READ_ONCE(*x);
}

exists (0:r0=0 /\ 1:r0=0)

C after-unlock-lock-same-lock-variable

(*
 * Result: Never
 *)

{}

P0(spinlock_t *s, int *x, int *y)
{
	int r0;

	spin_lock(s);
	WRITE_ONCE(*x, 1);
	r0 = READ_ONCE(*y);
	spin_unlock(s);
}

P1(spinlock_t *s, int *y, int *z)
{
	int r0;

	spin_lock(s);
	smp_mb__after_unlock_lock();
	WRITE_ONCE(*y, 1);
	r0 = READ_ONCE(*z);
	spin_unlock(s);
}

P2(int *z, int *x)
{
	int r0;

	WRITE_ONCE(*z, 1);
	smp_mb();
	r0 = READ_ONCE(*x);
}

exists (0:r0=0 /\ 1:r0=0 /\ 2:r0=0)

Signed-off-by: Andrea Parri <andrea.parri@amarulasolutions.com>
Cc: Alan Stern <stern@rowland.harvard.edu>
Cc: Will Deacon <will.deacon@arm.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Boqun Feng <boqun.feng@gmail.com>
Cc: Nicholas Piggin <npiggin@gmail.com>
Cc: David Howells <dhowells@redhat.com>
Cc: Jade Alglave <j.alglave@ucl.ac.uk>
Cc: Luc Maranget <luc.maranget@inria.fr>
Cc: "Paul E. McKenney" <paulmck@linux.ibm.com>
Cc: Akira Yokosawa <akiyks@gmail.com>
Cc: Daniel Lustig <dlustig@nvidia.com>
Signed-off-by: Paul E. McKenney <paulmck@linux.ibm.com>
---
 tools/memory-model/linux-kernel.bell | 3 ++-
 tools/memory-model/linux-kernel.cat  | 4 +++-
 tools/memory-model/linux-kernel.def  | 1 +
 3 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/tools/memory-model/linux-kernel.bell b/tools/memory-model/linux-kernel.bell
index b84fb2f67109..796513362c05 100644
--- a/tools/memory-model/linux-kernel.bell
+++ b/tools/memory-model/linux-kernel.bell
@@ -29,7 +29,8 @@ enum Barriers = 'wmb (*smp_wmb*) ||
 		'sync-rcu (*synchronize_rcu*) ||
 		'before-atomic (*smp_mb__before_atomic*) ||
 		'after-atomic (*smp_mb__after_atomic*) ||
-		'after-spinlock (*smp_mb__after_spinlock*)
+		'after-spinlock (*smp_mb__after_spinlock*) ||
+		'after-unlock-lock (*smp_mb__after_unlock_lock*)
 instructions F[Barriers]
 
 (* Compute matching pairs of nested Rcu-lock and Rcu-unlock *)
diff --git a/tools/memory-model/linux-kernel.cat b/tools/memory-model/linux-kernel.cat
index 882fc33274ac..8f23c74a96fd 100644
--- a/tools/memory-model/linux-kernel.cat
+++ b/tools/memory-model/linux-kernel.cat
@@ -30,7 +30,9 @@ let wmb = [W] ; fencerel(Wmb) ; [W]
 let mb = ([M] ; fencerel(Mb) ; [M]) |
 	([M] ; fencerel(Before-atomic) ; [RMW] ; po? ; [M]) |
 	([M] ; po? ; [RMW] ; fencerel(After-atomic) ; [M]) |
-	([M] ; po? ; [LKW] ; fencerel(After-spinlock) ; [M])
+	([M] ; po? ; [LKW] ; fencerel(After-spinlock) ; [M]) |
+	([M] ; po ; [UL] ; (co | po) ; [LKW] ;
+		fencerel(After-unlock-lock) ; [M])
 let gp = po ; [Sync-rcu] ; po?
 
 let strong-fence = mb | gp
diff --git a/tools/memory-model/linux-kernel.def b/tools/memory-model/linux-kernel.def
index 6fa3eb28d40b..b27911cc087d 100644
--- a/tools/memory-model/linux-kernel.def
+++ b/tools/memory-model/linux-kernel.def
@@ -23,6 +23,7 @@ smp_wmb() { __fence{wmb}; }
 smp_mb__before_atomic() { __fence{before-atomic}; }
 smp_mb__after_atomic() { __fence{after-atomic}; }
 smp_mb__after_spinlock() { __fence{after-spinlock}; }
+smp_mb__after_unlock_lock() { __fence{after-unlock-lock}; }
 
 // Exchange
 xchg(X,V)  __xchg{mb}(X,V)
-- 
2.17.1

