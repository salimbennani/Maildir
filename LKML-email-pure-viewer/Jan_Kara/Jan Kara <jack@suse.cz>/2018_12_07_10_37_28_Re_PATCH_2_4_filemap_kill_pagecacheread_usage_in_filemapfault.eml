Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 868DF5804C1;
	Fri,  7 Dec 2018 02:40:36 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 02:40:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Anh0tuBWY4vMo33pUuRm5HucqoGbV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCFuKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE2z/gtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27yLPHzTPeZP1Twzj98pLHeQ0mrPGOR71/bcnRxFI0FwPYlVWf?=
 =?us-ascii?q?t5bpMC+U1+kUtWWQ8uluVfq3hmI5tw18piKjytoih4XXnI4Z11PJ+TljzIs0J9?=
 =?us-ascii?q?C0UFN3bNqkHZdKqi2XOYt7Ttk8T212pCo20KMKtJ60cSUM1Z8p3QTQa+adfIiN?=
 =?us-ascii?q?+h/jVPieITN/hH99ZrK/iAi98VK6xu3/SMa0ylBKoTRBktXWsXANzRPT5tCGSv?=
 =?us-ascii?q?t74EihxS6C2x7P5uxAO0w4iKTWJ4A7zrItlZcfrV7PEy70lUnuia+ZbEQk+uym?=
 =?us-ascii?q?6+T9ZbXmo4eRN4t1igH4L6QvldWzAecmPQgUWWiU5+C82KTk/Uz3RrVFkOc2n7?=
 =?us-ascii?q?LHsJDVO8sbvLS1AwxL3YY57RawETOm3M4fnXkdI1JJYAiHgJTxO1HSPPD4Cu+y?=
 =?us-ascii?q?g1CtkDdo2f/KJLLgAojWI3jHkbfhe6t96kFGxAoyy9Bf+4xbCrUbLP3vXU/xsc?=
 =?us-ascii?q?TSDgUlPAys3+bnFNJ925seWW2VA6+ZLLndsViS6uIvPumDfokVuDnmJvgh5v7u?=
 =?us-ascii?q?i2I5mFAHcamo25sXdG63HvB8L0qFZnrsh88LEX0WsQomUOzqlFqCXCZRZ3a1Qa?=
 =?us-ascii?q?0w/DI7CIWgDYfFQYCgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907doNPHU+i0ftZLgztR1/ffclRMp+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvR5C9/oXALNZNOJSFe8?=
 =?us-ascii?q?TdWgDjE8VdYxw94IY0ZgFNSulBHD3yy2A7ALk7yHHoA78qXZ33LpPcZy127G1L?=
 =?us-ascii?q?U9j1khWsZAKHephrBh+ATJB47GiUOZl720eqQa2yLN8GSDzW+KvExDVA5wUKPF?=
 =?us-ascii?q?XW0QZ0fMrNT54F/CQKGqCbg9LgRBzsuCILNQatL1lVVGWOvjONPGbm2sgWiwGw?=
 =?us-ascii?q?iHyqmMbIXwfWUdxzvSCE4fngAX/HaGMxU+Byi7r2LfCjxuCUzgY0f2/eZir3O7?=
 =?us-ascii?q?S1c+zxuWYE15y7q15hkViOSAS/MS27IEvzshqzV0HVqnw9LaEd2ApxBlfKVdZ9?=
 =?us-ascii?q?M970xK1WbYtwx7I5yhILpuhl8YcwRroUzu0w97BZlHkcgvtHkq1hZ9KbqE0FNd?=
 =?us-ascii?q?cDOVxYr/OrnJJWj94h+ua7Ta1UrD0NmL4KgP7vc4q1L9vAyyEkoi8nNn08Ra0n?=
 =?us-ascii?q?eG55XKChYSXoz1Ukot6xd6oLTaaDEn54zIzX1sLbW0sjja1tMpGesp0Aqvc81e?=
 =?us-ascii?q?MaOEDgDyFcIaCtOqKOwrnVipcx0FMPpT9K4yI8Opaf+G1LS3M+ZnmTKslX5H75?=
 =?us-ascii?q?xl0kKQ6yp8TfbF34wEw/6ExASHTSrzjFC7vsDxh49EfzASEnOjxif+AI5ee7N9?=
 =?us-ascii?q?fZwMCWeoOMC3wtR+h5jwW39X7lKjBlUG2NO3dhqWdVDywQpQ1UEPq3y9hSS41y?=
 =?us-ascii?q?B0ky0urqeH3C3Owv7udRodNm5QWWlii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JEovj9NUOS/YlCaTaTxowAA3CPgHG?=
 =?us-ascii?q?texTY7eC+supjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+G+TW2hUYdfcSvqzYOGrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diGYFxiIowiIsQ2XgHnJqV+3UHnHz3?=
 =?us-ascii?q?MdVa36L+cXUMSSQKw97T/AjqxkljImiVyIL+U3WX2tFhaMWiYmMKxiI96NhHCK?=
 =?us-ascii?q?KV7LxHhyR5uFS5ohzKYfhhgDgd0+Ah52AAg+EGowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6AS9w6cB/PEjN0XLp7IHkZc?=
 =?us-ascii?q?LQbckSthCPlxfAju5VKI8+l/YQhCpnP379smMhy+IhkRNu2pS6tpCdK2px5KK5?=
 =?us-ascii?q?HgJYNjrtaswI4D7tiqJentuM04CrA5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhiRgOSJElBjwAPRjk6goQ1FgO3xMzi?=
 =?us-ascii?q?bUd54Coe5kXjpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SbZgRPEGEJQ1GECErlPrW0/tnA9O6YBuWlIvvKYLWOr/FeVviS?=
 =?us-ascii?q?yZKu1Itm4yiDNsGVMnZ+CP0731JJXWplFMTBhzUPVysXmjrNb8GFpRe8+S53rs?=
 =?us-ascii?q?Gl/PToQgLv4oSPBKVIMdVy4BC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy58LtZI4Lkm3gZTOc/XkNf11r9jg/4xCldFU0?=
 =?us-ascii?q?Hhm86zacwLJWG9KE3IBEKROLuaIj3Lxtn9YbmgRr1IkOVUqxqwtC6HE0/iOzSP?=
 =?us-ascii?q?jSXmWwqzPuFMki6bOgdTuIW8chZrFGjiQ8jqahy9MN9rkzI2xac4iW/NNW4ZKT?=
 =?us-ascii?q?J8aV9CrqWM7SNEhfVyA2xA4WBjLemBmiaZ6fHXK5cWsfRxBCR0mPlX4HA7y7tT?=
 =?us-ascii?q?8SFFS+Z5mCrUrt5yvV6mlvODxSZgUBpL+X53g9epul5vN+3z/5JBWj6Q/hUW4G?=
 =?us-ascii?q?u4FxMaptB9A9vjsuZbzd2Zx4zpLzIX0dvStegVHcGcfMCOO3kJKgfyFXjfHl1W?=
 =?us-ascii?q?HnaQKWjDihkFw7mp/XqPo81/88C0lQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BaAAD2TApch0O0hNFjHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGDayeYI1IGgTUUiQyQHTETAYdaIjcGDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?vgjYkAYJiAQIDAQIkEz8GCQEBChgJExIDDAUYMRMFgxyBdQ0EAaYCM4hWgVmMH?=
 =?us-ascii?q?xd4gQeBEYMSiDaCBCICoGcJkUALGIFciBIrhCeCeCyaS4F3TTiDJ5BcPzKBBQE?=
 =?us-ascii?q?BikABAQ?=
X-IPAS-Result: =?us-ascii?q?A0BaAAD2TApch0O0hNFjHQEBBQEHBQGBVAUBCwGDayeYI1I?=
 =?us-ascii?q?GgTUUiQyQHTETAYdaIjcGDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiAQIDA?=
 =?us-ascii?q?QIkEz8GCQEBChgJExIDDAUYMRMFgxyBdQ0EAaYCM4hWgVmMHxd4gQeBEYMSiDa?=
 =?us-ascii?q?CBCICoGcJkUALGIFciBIrhCeCeCyaS4F3TTiDJ5BcPzKBBQEBikABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55946012"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 02:40:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726011AbeLGKhc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 05:37:32 -0500
Received: from mx2.suse.de ([195.135.220.15]:35542 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725986AbeLGKhc (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 05:37:32 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 0FDA3ADD4;
        Fri,  7 Dec 2018 10:37:30 +0000 (UTC)
Received: by quack2.suse.cz (Postfix, from userid 1000)
        id A96BC1E0D9D; Fri,  7 Dec 2018 11:37:28 +0100 (CET)
Date: Fri, 7 Dec 2018 11:37:28 +0100
From: Jan Kara <jack@suse.cz>
To: Josef Bacik <josef@toxicpanda.com>
Cc: kernel-team@fb.com, hannes@cmpxchg.org,
        linux-kernel@vger.kernel.org, tj@kernel.org, david@fromorbit.com,
        akpm@linux-foundation.org, linux-fsdevel@vger.kernel.org,
        linux-mm@kvack.org, riel@redhat.com, jack@suse.cz
Subject: Re: [PATCH 2/4] filemap: kill page_cache_read usage in filemap_fault
Message-ID: <20181207103728.GD13008@quack2.suse.cz>
References: <20181130195812.19536-1-josef@toxicpanda.com>
 <20181130195812.19536-3-josef@toxicpanda.com>
 <20181207095750.GC13008@quack2.suse.cz>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181207095750.GC13008@quack2.suse.cz>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri 07-12-18 10:57:50, Jan Kara wrote:
> On Fri 30-11-18 14:58:10, Josef Bacik wrote:
> > If we do not have a page at filemap_fault time we'll do this weird
> > forced page_cache_read thing to populate the page, and then drop it
> > again and loop around and find it.  This makes for 2 ways we can read a
> > page in filemap_fault, and it's not really needed.  Instead add a
> > FGP_FOR_MMAP flag so that pagecache_get_page() will return a unlocked
> > page that's in pagecache.  Then use the normal page locking and readpage
> > logic already in filemap_fault.  This simplifies the no page in page
> > cache case significantly.
> > 
> > Signed-off-by: Josef Bacik <josef@toxicpanda.com>
> 
> Thanks for the patch. I like the simplification but I think it could be
> even improved... see below.
> 
> > @@ -2449,9 +2426,11 @@ vm_fault_t filemap_fault(struct vm_fault *vmf)
> >  		count_memcg_event_mm(vmf->vma->vm_mm, PGMAJFAULT);
> >  		ret = VM_FAULT_MAJOR;
> >  retry_find:
> > -		page = find_get_page(mapping, offset);
> > +		page = pagecache_get_page(mapping, offset,
> > +					  FGP_CREAT|FGP_FOR_MMAP,
> > +					  vmf->gfp_mask);
> >  		if (!page)
> > -			goto no_cached_page;
> > +			return vmf_error(-ENOMEM);
> 
> So why don't you just do:
> 
> 		page = pagecache_get_page(mapping, offset,
> 					  FGP_CREAT | FGP_LOCK, vmf->gfp_mask);
> 		if (!page)
> 			return vmf_error(-ENOMEM);
> 		goto check_uptodate;
> 
> where check_uptodate would be a label before 'PageUptodate' check?
> 
> Then you don't have to introduce new flag for pagecache_get_page() and you
> also don't have to unlock and then lock again the page... And you can still
> delete all the code you've deleted.

Ah, you don't want lock_page() to block in case someone raced with you and
instantiated the page so that you can drop mmap_sem. OK, the patch looks
good to me then. You can add:

Reviewed-by: Jan Kara <jack@suse.cz>

								Honza
-- 
Jan Kara <jack@suse.com>
SUSE Labs, CR
