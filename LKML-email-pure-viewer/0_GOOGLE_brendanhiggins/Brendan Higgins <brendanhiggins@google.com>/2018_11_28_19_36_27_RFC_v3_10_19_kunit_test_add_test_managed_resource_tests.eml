Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:40:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E08CC5803ED;
	Wed, 28 Nov 2018 11:38:16 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 11:38:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJuypKxwuvF5G033XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4fKvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmhi?=
 =?us-ascii?q?UIOT02/2HZjcJ+kaJVrgy9qBxk247ZYpqYNOZicq7HYd8XX3ZNU8RXWidcAo28?=
 =?us-ascii?q?dYwPD+8ZMOtFtYnyuV0OogakCgmqGejhyD5IhnD53a071eQhChzN0Qs7ENIUrn?=
 =?us-ascii?q?vUqsj6O70UUeC1zanIwjrDb/JQ2Tfm84XIfRchofaDXbJ0b8Xd01UgFwTAjliJ?=
 =?us-ascii?q?r4HuIjCb1vwVvmSF8+ZtUfijh3Mppg1vuDSj28QhhpXTio8UyF3I7Tt1zJoxKN?=
 =?us-ascii?q?GiS0N2YcSoHIVNuyyaLYd6XN8uT39utS0n0LMJo4S7czIPyJk/xx7QdfiHc4+Q?=
 =?us-ascii?q?7xL9W+aePy14iGhmeL2hnRay91avyunmWsmzylZKoTJJktjKtn8Tyxze8taLRu?=
 =?us-ascii?q?d580u7xDqC2R7f5vtZLU03iabXMZ8sz7wompoWq0vDHyv2mEvsjK+Rc0Up4uyo?=
 =?us-ascii?q?6+XhYrX7qZ6QLox0hR/kMqQohMO/Bf00Mg8AXmid5+u8zqbu/VP2QLpUlP06iK?=
 =?us-ascii?q?rZv47AJcQduKG5BxVZ0oE56xawFzumysgXnWEbLFJZfxKKl4zpO1DNIP/mF/u+?=
 =?us-ascii?q?jEmsnSxvx/DHOL3hH5rMImLCkLfnYbZy9UpcxBAvwtBY4pJeEqsBL+7rWk/tqN?=
 =?us-ascii?q?zYCQc0MwyuzObmFNVyzIQeVXiPAq+EKqzSt1CI6/krI+mNYo8VpTn8J+Ik5/7o?=
 =?us-ascii?q?kX82h1sdcbO10psQbXCyBu5mLFmBYXrwntcBFn8Hvgg5TOP0klGCUjlTZ3C0X6?=
 =?us-ascii?q?I7/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4CcUfcWdC2SOtNhkiAD?=
 =?us-ascii?q?VbW5UYAhzhGutAj5y7Z9NOrb4C8YuInn1Nh04e3TiB4z+SZ1D8Sbz2GCUWV0kn?=
 =?us-ascii?q?kUSD8x2aB1uVZ9xUub0ahkn/xYEsRe5/BTXQc8L5Lcy+16BMr0WgLOZdqJTFem?=
 =?us-ascii?q?QtO7ATA+VN4xwtkOY1pjFNWmlBzMwy2qA7oNnbyRGJM06r7c32T2J8tl1nnJzr?=
 =?us-ascii?q?chgEc8TstPL2KmgLV/+BbVB4LOl0WZlKOqdaAH0S7J9WeDy3eOvU5CXA5xV6XF?=
 =?us-ascii?q?QW4QZk/Modvl4UPCSqekCa47PQtZ1c6CNqxKZ8X0glpcWvfsJs7SY2KrlGe2Hh?=
 =?us-ascii?q?aH2LWMYZHue2Uc2iXdFUcFnxoS/XaAKQgxGCOhr3jCAzxpEFLle1ns/vVmqHOn?=
 =?us-ascii?q?Uk80yBmHb1Fg17qw/R4VmfycSvMJ0rIYoishrC90HFK839LQBNqNvA5hfKRaYd?=
 =?us-ascii?q?Mg71ZLz2PZtwphPpO+K6BunEIRcwNyv0n2zRV4Fp1AkdQ2rHMt1Ad9M6aY301O?=
 =?us-ascii?q?djyG3ZH8IKbYKnTv8x+1ba7W2Vbe0MiN96cL6fQ4rUjjvQ6zGkoj9XVnz8da03?=
 =?us-ascii?q?+G6prWCwoSVIr7Ulwr+Bhiu7Hafi496pvU1H1xK6W7riXO2tMpBOQ/zBagcMxS?=
 =?us-ascii?q?MKeFFA/0Ds0bCNKiKO0sm1i1cB0EOPpe+7IzP8Ojb/GGwrKkPP58nDK6imRK+J?=
 =?us-ascii?q?p90kOQ+CVmUO7HwpEFz+ue3gSZTTf8jU6tvdztloBAeD4dAHC/yS/iBINKYq1y?=
 =?us-ascii?q?fIALCXqhIsGtx9V+gYLtVGBc9FK5G1wG38qpcwKIb1PhxQ1QyVgXoXu/lCq4zj?=
 =?us-ascii?q?x4iTEoorCE3CzTxeTvbx4HOm9NRGl/glbgO4m0j9YGXEe2awgljgeq5UH/x6JD?=
 =?us-ascii?q?vqRwM3HTQVtUfyjxN2xiULG/tqCBY85M75Mkqz5XX/6/YVCZS779pQUV0yX4Em?=
 =?us-ascii?q?taxTA7cSyqu5rjkxx7jmKdMGh8rH7Ddc5swhff4cTWReRN0ToeWCl4lT7XC0C8?=
 =?us-ascii?q?Ptaz+tWYjZXDsuG4V2+6Up1TcC/rzZ6PtSeh5G1qBwG/kO63mtH9DQc61ir73c?=
 =?us-ascii?q?FwVSrUtBb8fpXr16OiPOJkZEZoBUXw68pnGo5klIswi4od2XwbhpWT4HoGnn3/?=
 =?us-ascii?q?MdRd2aLicnUNQSQHzMLS4AjgwEdjNG6Gx5rlVnWBxctsf9y6YmIV2i0n9cxLBr?=
 =?us-ascii?q?mb7KdYnSRruFq3thzeYeJynjoGzfsu6Xgag/wGuQY3zyWdBKwSEldcPSD2ixuI?=
 =?us-ascii?q?6NW+pr1NZGmzabiwyFZ+nde5AbGepQFcXWz1e5Y4Ei9288V/K0nM0Hzo54Hged?=
 =?us-ascii?q?nQa88TtxKOnxfBiehVNIw+lv4QiSV7PmL9uGUvy/Qnghx2wZG6oI+HJn12862j?=
 =?us-ascii?q?BR5YMiD1a9kX+jHwlqtemseW34ayHpRuADkLXZ3oTe62HzIWr/joKwGOEDgkoH?=
 =?us-ascii?q?eBBbXfBROf6Fthr3/XEZCkLXSXK2cCzdl4WBmRPk9fgB0XXDUnmJ42DBuqydfl?=
 =?us-ascii?q?cEd44DAR+1H5pgFNyuJuKxnwTGPfqB20ZTczTZiVNABW4R1a50fJLcye6fp+Hi?=
 =?us-ascii?q?Ff/p28tQyNN3aUZwJSAWESXUyEAV/jM6Kq5dnB9eiYG+W/I+HPYbWItexRSfOI?=
 =?us-ascii?q?yYiz3Yth+jaGLt+PMWV6D/0nxkpDWmh0G8THlDUOSCwXlCPNY9SYpBem/S13od?=
 =?us-ascii?q?6w8O72WAL0/oaPD7pSMdNy+xG5m6uDNuiQhDpnJjZczJ8D2XjIyL0H1l4Ily5u?=
 =?us-ascii?q?byWtEagHtSPVVq3Qh7RYDwQFZCJzLsdI66M80xJJOc7ajNP1y7F5guQ0C1dDSV?=
 =?us-ascii?q?zuhMWpadYWLGG6MVPNHFyLO6ieJT3X38H3ZruxSaFRjOVRrRG/pSyXHFPjPjud?=
 =?us-ascii?q?kTnkTBSvMeBKjCGGMx1SooC9chBxCWf9SNLqcAG0MNhyjTcu2707mmvKNXIAMT?=
 =?us-ascii?q?h7a05Mrqef7SVdgvV+HWxO9ntkLemelCaf4OnVMZIWsfptAiRpmONW+nU6y71J?=
 =?us-ascii?q?7C5aQPx5gjfdrtlrowLuru7axSBqXxlOgjJKgp+bs0J/P6nQ6phHXzDD5h1JpW?=
 =?us-ascii?q?adBg8BoNxmItLovK9Ux57Ek6e3YDJJ/MjT8+MfCtLSJcbBN2AudVLyGCPdDCMG?=
 =?us-ascii?q?QCStOGWZgFZSw9+I8XjAhII3rJTlntIuS7BUVVouXqcQEEljENUEIJZ4UTIiip?=
 =?us-ascii?q?aUi8kH4Xf4px7UEpYJ9qvbX+6fVK28YA2SiqNJMkMF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAADG7f5bh0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N5lCCCIZcugSQDTCwTAYQ8AoMwIjQJDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDII2IoJlAwMBAiAEGQEBNwEFCQEBJAImAgIDMQEFARwHEgWDHIICBZtjPIodc?=
 =?us-ascii?q?HwzgnYBAQWCRIRlCBJ5hmCEKxeBQD+FbgmBSgKEZYJXjyZ3kAAJgiCDEot0Cxi?=
 =?us-ascii?q?RFYh2j0MwgSVsgSEzGiODPIIbDBeDSop0HjOBBQEBjWMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAADG7f5bh0O0hNFjHgEGBwaBUQkLAYNrJ4N5lCCCIZc?=
 =?us-ascii?q?ugSQDTCwTAYQ8AoMwIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlAwMBA?=
 =?us-ascii?q?iAEGQEBNwEFCQEBJAImAgIDMQEFARwHEgWDHIICBZtjPIodcHwzgnYBAQWCRIR?=
 =?us-ascii?q?lCBJ5hmCEKxeBQD+FbgmBSgKEZYJXjyZ3kAAJgiCDEot0CxiRFYh2j0MwgSVsg?=
 =?us-ascii?q?SEzGiODPIIbDBeDSop0HjOBBQEBjWMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="54737969"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 11:38:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729429AbeK2Gky (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 01:40:54 -0500
Received: from mail-pg1-f202.google.com ([209.85.215.202]:44441 "EHLO
        mail-pg1-f202.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729117AbeK2Gkx (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 01:40:53 -0500
Received: by mail-pg1-f202.google.com with SMTP id a2so12710101pgt.11
        for <linux-kernel@vger.kernel.org>; Wed, 28 Nov 2018 11:38:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=4IKZcfrlGwiEH28lOjBx5LUer+sMqwxtctpWBn7VdAA=;
        b=UCoLXEex5P9gF0WFmCQLfGm+EaXZnIgPgEFS3D1b4XYYWAOr+oa/EhGwwpLKUwMoHv
         tuJbY1Jo3rvL8QmWbs7VoXQHUKjYsLzaBbfgWlUF+9QyDx525KsLaNCtov3bGDxjIhMq
         aM9iwePUKMTX37lxS70ZAWsaefCmazhkVU1LrnhwSaPzk58SYuodbP5WiEVAf4ddjWGQ
         vg3Lc4t7W5ZhhY1HXZ3yidiCg+ml4Pij4s8TMqdveqJjh4UqSzIhEcso6TdsYOZbQN5H
         NW1ao59aOBDsIVqCi+2gphq5l6I2W8ahTtcVviP7cBirF0n/1VG8Pw3Xk2vaa5oYScKA
         /1Zw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=4IKZcfrlGwiEH28lOjBx5LUer+sMqwxtctpWBn7VdAA=;
        b=iSte9bvBcBzWv6mNkFlR9TZhLoXni3FiV23TYaR3sOgYfzE2ArossX30Fuwu0k9d8x
         EFaaWvbFgbVp4T6zstN3xMrKagFEM8Aa0hz93kL6CSVe2mqkwOtNz7+JYazukEoCQXbq
         tvhgt8C4J+We5uC7BP5hgfbHxwrfk/F8YOSzNnAaAJ5reqPB9VIXv03e5/HO2QdzZl/B
         xhsYNzfHrUAGSmreizLucBUKtlyx4vzWzv35hibF3RreozblmbR72/pF+pu+3xI3SwLp
         p646t+LcH2tiS00oq8EEnQD7UkDlu0Hd1xct0gwWzlngtGK1NTXIWvM5hB1Hc0IyQZ93
         vg0w==
X-Gm-Message-State: AA+aEWaMGV42yU6RBEMOWQ6Cz1aofzUodyDw2AADk5N/2dU1zgmzOUPc
        FZo7IWPu1EniHUNUOhWHDrT4mWFyA4+eMfCYAlBbYw==
X-Google-Smtp-Source: AFSGD/WnggAFh0owRTchvcPojBQP+KX0t2TGac4DD2dNnzBrZvZn2nu84oJBGeXQPeslzFI8Ot+IGoVssdKwirNseddX6g==
X-Received: by 2002:aa7:81cc:: with SMTP id c12mr2953373pfn.69.1543433888545;
 Wed, 28 Nov 2018 11:38:08 -0800 (PST)
Date: Wed, 28 Nov 2018 11:36:27 -0800
In-Reply-To: <20181128193636.254378-1-brendanhiggins@google.com>
Message-Id: <20181128193636.254378-11-brendanhiggins@google.com>
Mime-Version: 1.0
References: <20181128193636.254378-1-brendanhiggins@google.com>
X-Mailer: git-send-email 2.20.0.rc0.387.gc7a69e6b6c-goog
Subject: [RFC v3 10/19] kunit: test: add test managed resource tests
From: Brendan Higgins <brendanhiggins@google.com>
To: gregkh@linuxfoundation.org, keescook@google.com, mcgrof@kernel.org,
        shuah@kernel.org
Cc: joel@jms.id.au, mpe@ellerman.id.au, joe@perches.com, brakmo@fb.com,
        rostedt@goodmis.org, Tim.Bird@sony.com, khilman@baylibre.com,
        julia.lawall@lip6.fr, linux-kselftest@vger.kernel.org,
        kunit-dev@googlegroups.com, linux-kernel@vger.kernel.org,
        jdike@addtoit.com, richard@nod.at, linux-um@lists.infradead.org,
        daniel@ffwll.ch, dri-devel@lists.freedesktop.org, robh@kernel.org,
        dan.j.williams@intel.com, linux-nvdimm@lists.01.org,
        kieran.bingham@ideasonboard.com, frowand.list@gmail.com,
        knut.omang@oracle.com, Brendan Higgins <brendanhiggins@google.com>,
        Avinash Kondareddy <avikr@google.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Tests how tests interact with test managed resources in their lifetime.

Signed-off-by: Avinash Kondareddy <avikr@google.com>
Signed-off-by: Brendan Higgins <brendanhiggins@google.com>
---
 kunit/test-test.c | 121 +++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 110 insertions(+), 11 deletions(-)

diff --git a/kunit/test-test.c b/kunit/test-test.c
index 88b3bcf9c4e00..36fd95c90a26a 100644
--- a/kunit/test-test.c
+++ b/kunit/test-test.c
@@ -7,31 +7,130 @@
  */
 #include <kunit/test.h>
 
-static void test_test_catches_segfault(struct kunit *test)
+static void kunit_test_catches_segfault(struct kunit *test)
 {
 	void (*invalid_func)(void) = (void (*)(void)) SIZE_MAX;
 
 	KUNIT_ASSERT_SIGSEGV(test, invalid_func());
 }
 
-static int test_test_init(struct kunit *test)
+/*
+ * Context for testing test managed resources
+ * is_resource_initialized is used to test arbitrary resources
+ */
+struct kunit_test_context {
+	struct kunit test;
+	bool is_resource_initialized;
+};
+
+static int fake_resource_init(struct kunit_resource *res, void *context)
 {
+	struct kunit_test_context *ctx = context;
+
+	res->allocation = &ctx->is_resource_initialized;
+	ctx->is_resource_initialized = true;
 	return 0;
 }
 
-static void test_test_exit(struct kunit *test)
+static void fake_resource_free(struct kunit_resource *res)
+{
+	bool *is_resource_initialized = res->allocation;
+
+	*is_resource_initialized = false;
+}
+
+static void kunit_test_init_resources(struct kunit *test)
+{
+	struct kunit_test_context *ctx = test->priv;
+
+	kunit_init_test(&ctx->test, "testing_test_init_test");
+
+	KUNIT_EXPECT_TRUE(test, list_empty(&ctx->test.resources));
+}
+
+static void kunit_test_alloc_resource(struct kunit *test)
+{
+	struct kunit_test_context *ctx = test->priv;
+	struct kunit_resource *res;
+	kunit_resource_free_t free = fake_resource_free;
+
+	res = kunit_alloc_resource(&ctx->test,
+				   fake_resource_init,
+				   fake_resource_free,
+				   ctx);
+
+	KUNIT_ASSERT_NOT_ERR_OR_NULL(test, res);
+	KUNIT_EXPECT_EQ(test, &ctx->is_resource_initialized, res->allocation);
+	KUNIT_EXPECT_TRUE(test, list_is_last(&res->node, &ctx->test.resources));
+	KUNIT_EXPECT_EQ(test, free, res->free);
+}
+
+static void kunit_test_free_resource(struct kunit *test)
 {
+	struct kunit_test_context *ctx = test->priv;
+	struct kunit_resource *res = kunit_alloc_resource(&ctx->test,
+							  fake_resource_init,
+							  fake_resource_free,
+							  ctx);
+
+	kunit_free_resource(&ctx->test, res);
+
+	KUNIT_EXPECT_EQ(test, false, ctx->is_resource_initialized);
+	KUNIT_EXPECT_TRUE(test, list_empty(&ctx->test.resources));
+}
+
+static void kunit_test_cleanup_resources(struct kunit *test)
+{
+	int i;
+	const int num_res = 5;
+	struct kunit_test_context *ctx = test->priv;
+	struct kunit_resource *resources[num_res];
+
+	for (i = 0; i < num_res; i++) {
+		resources[i] = kunit_alloc_resource(&ctx->test,
+						    fake_resource_init,
+						    fake_resource_free,
+						    ctx);
+	}
+
+	kunit_cleanup(&ctx->test);
+
+	KUNIT_EXPECT_TRUE(test, list_empty(&ctx->test.resources));
+}
+
+static int kunit_test_init(struct kunit *test)
+{
+	struct kunit_test_context *ctx = kzalloc(sizeof(*ctx), GFP_KERNEL);
+
+	if (!ctx)
+		return -ENOMEM;
+	test->priv = ctx;
+
+	kunit_init_test(&ctx->test, "test_test_context");
+	return 0;
+}
+
+static void kunit_test_exit(struct kunit *test)
+{
+	struct kunit_test_context *ctx = test->priv;
+
+	kunit_cleanup(&ctx->test);
+	kfree(ctx);
 }
 
-static struct kunit_case test_test_cases[] = {
-	KUNIT_CASE(test_test_catches_segfault),
+static struct kunit_case kunit_test_cases[] = {
+	KUNIT_CASE(kunit_test_catches_segfault),
+	KUNIT_CASE(kunit_test_init_resources),
+	KUNIT_CASE(kunit_test_alloc_resource),
+	KUNIT_CASE(kunit_test_free_resource),
+	KUNIT_CASE(kunit_test_cleanup_resources),
 	{},
 };
 
-static struct kunit_module test_test_module = {
-	.name = "test-test",
-	.init = test_test_init,
-	.exit = test_test_exit,
-	.test_cases = test_test_cases,
+static struct kunit_module kunit_test_module = {
+	.name = "kunit-test",
+	.init = kunit_test_init,
+	.exit = kunit_test_exit,
+	.test_cases = kunit_test_cases,
 };
-module_test(test_test_module);
+module_test(kunit_test_module);
-- 
2.20.0.rc0.387.gc7a69e6b6c-goog

