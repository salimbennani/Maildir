Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:38:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4B5E55803C2;
	Mon, 26 Nov 2018 09:10:23 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 09:10:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKMCGDxKmJgVV7azO7dmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv7+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kaKTA5/mHZistzgqxVrh2uqB5wzJLbboGOLPpzfLjQfc8YSGdbQspdSyJMD4G6?=
 =?us-ascii?q?YoASD+QBJ+FYr4zlqlQOtxS+BAysC/npyjRVgHH22qs60+s8GgzB2AwgGNQOsH?=
 =?us-ascii?q?vRrNrvMqcfSvq1w7fVwjXDdfxWxS3x55TPchAkuPyBW697f8nJyUQ3CQ/JklGd?=
 =?us-ascii?q?pZb4Mz6byOgBqXWX4ul8We61imMqqRl9riazysookIXFm4wYxk7e+Slkw4s4K8?=
 =?us-ascii?q?e0RFB4bNOiDZBerTuVN5FsTcMnW2xouDg1yrkBuZOjYigKx4ooxwTFZ/yEbYeI?=
 =?us-ascii?q?+BTjW/iVITtig3JlYr2/iw6z8Uim1OL8StG53EhWoidBiNXAq34A2wLJ5sSaSf?=
 =?us-ascii?q?Zx4l2t1DeN2gzL7+FLO0E0la7VK547xb4wk4IesUDCHi/whUX3g7aadkY69eiy?=
 =?us-ascii?q?7eTofLHmqoabN456jAHxLL4ul9ehAeQ3LAcORXKX+eei2735+032XrFKgucxkq?=
 =?us-ascii?q?nDv5DWPd4bqbKhAw9JzoYj7A6yDzOn0NQbg3YLNl1EeA+cgojtOlHOJu34DPil?=
 =?us-ascii?q?j1Stljdr2+7JPrn7DprRKXjDla/rfaxh5E5E1Aoz0ddf6opUCr4bIfLzRlX+tN?=
 =?us-ascii?q?vCAh85Lgy72eDnCNpm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4ubk?=
 =?us-ascii?q?jWUlll8FYampwZwXZWi6HvRhPUqVe3nsgtAHEWcMuQozV+jqiFyEUT5OaHe+Ra?=
 =?us-ascii?q?M85jcnCI24CYfPXJyigLuE3C2jBJ1ZenhGCkyQEXfvb4iLQewMaCKVIs9iiDAE?=
 =?us-ascii?q?T6KuS4062BGqtQ/6zadnL+XO9i0Zs5LjyMZ65+nJmR4u8jx0CtyX03uRQGFsgm?=
 =?us-ascii?q?MIWzg20bh8oUNnzFePy6x4g/1CGtxV6PNESQM6NZ/az+xnBNH+QAPBftGVSFm4?=
 =?us-ascii?q?RtWqGy0+TtU0w9UWeUZyB82ijgzf3yqtG7IaiqaEBIIq/a7G33j+PcB9y23Y26?=
 =?us-ascii?q?kniFUmRshPNWiihqNk8wjTBojJk1iWlqqwdKQc2jLN+3mHzWaUoE5YVwtwW73f?=
 =?us-ascii?q?XX8DfkvWscj55kTaQrCzE7snLBVOxdSCKqRQbN3plktJRPH4NdTaYmKxnXqwBB?=
 =?us-ascii?q?mSyrONaorqZ3sS3CHHBEcYlAAT+G6MNRIiCSe5v2LeEDtuGErzY0Pt9Ol+r2+7?=
 =?us-ascii?q?Tk80zg2Qc01tzb21+gQRhfydTfMT0akJuCMgqzVyAVa80MjaC9uGpwp9YqpcZc?=
 =?us-ascii?q?kx70tA1WLcrwZ9JICvL7h+hl4CdAR6p1nh1xFpBYRPj8crrGkmwxFvKa2FylxB?=
 =?us-ascii?q?cTCY3ZfuOrDMLmny/Rava7PZ213E0daW/LsP5+o8q1n5oA6pEU8i+W1909ZJy3?=
 =?us-ascii?q?uc+onKDA0KXJPxT0Y77QR1q6vbYyk9/YzU03JsPLKwsj/D3dIpGeQkxgyhf9dZ?=
 =?us-ascii?q?LKOLCgvyH9cGCMipLewgg0KpYQ4cPOBO6K40ONurd+GH2KG3Julghi+pjWNd7I?=
 =?us-ascii?q?B7zE2M7St8RvfU0Jkfx/GXwxWIVy37jFenqc33nYFEZTcPHmuw0yTkBYhRZrFs?=
 =?us-ascii?q?coYPE2uhP8q3xtBmjZ73R3FY7EKjB08B2MKxeRuSbkbx3A1K2UQMvHynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336pb?=
 =?us-ascii?q?q75lL2nQQkdIeDL6L3p4XauztbqCYshP540usShMVOS8YFaaSqPyohcA0iPjGX?=
 =?us-ascii?q?deyy4/dz2wppr5mBl6gnqHLHlvtHrZZd1wxRDH6d3cX/FR2SAKRCt5iTnRHVW8?=
 =?us-ascii?q?O9ip/dOJl5bMqOy+VmShVoFNfinv14+PqCy75WhyCx2lg/+zgsHnERQ90SLj1N?=
 =?us-ascii?q?llTyTIoAz8Yon2zau6N+1nc1JsBF/97cp6B45/npExhJEWxXgVmJGV8WAbnmf0?=
 =?us-ascii?q?NNVRwbj+Y2YVRT4X397V5xDo2EhiLnKK3Y31THuczdV6Z9mmfGwWwDky4N5QCK?=
 =?us-ascii?q?eb97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792msKVXY2OvfaKx1UVkm9ChEaqCohpdWHvifpciHClw7thwMV7W0X3z7J3kd8?=
 =?us-ascii?q?fUbd4JqhKUlBLAhfBPKJ0tjvoKmTZnOWXlsHI+0eE7ihhu3YygsIiDNmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDA8qG?=
 =?us-ascii?q?2UGb/BEg+E8ktms2jDE5O2N3GUOXkZy89tRAKGKUxbgQAUWig6n5EjGgCrwszh?=
 =?us-ascii?q?bFl25jQL6lHkrRtMz/piNwPjXWfHuAeodjA0RYCfLRpR8wFC/lrVPtaY7u5pBC?=
 =?us-ascii?q?FY+ZuhrAOWJ2yfZgRIC3wJW0OeC1DiOLmu+cfP8+yCCuWiKPvOZK2EqfZCWPeQ?=
 =?us-ascii?q?2ZKvzoxm8i6MNsqRP3liDP472ktZUXB6AcTZnDoPRDINlyLQdM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUQxkMShDp0?=
 =?us-ascii?q?dzazEbUMryrNTKPLl69TDh4bbT5zNcRS46I92AlNJdDUitfv2rFkif41Dk9PVU?=
 =?us-ascii?q?b9lcGxecwKP2a9OUvbBEaKMbSKPyHEz9vrbqO8V7JQiv5ZtxmxuTadDk/iMS6P?=
 =?us-ascii?q?lzjvVxCzL+5MiDuXMwBZuIG4ahxtE3TsTMr6ah2nN996lT03zqcyhnPPNG4cNy?=
 =?us-ascii?q?BzckJNrrKK6yNYje5yG2hA7npjMOmFlDyV7+jeKpYKr/RrBj54mP5d4HQ/mPNp?=
 =?us-ascii?q?63R9RfVz0ADbr5Y6qFinuuaK2nx6S0wK4j9InIejuURkJLWc+J5dX3rN4BMK6y?=
 =?us-ascii?q?OXERtZicFiD4jQsqFVw96HsKX1J38W99XS8s4VAeDOJc6HOWZnOh3sTm2HRDAZ?=
 =?us-ascii?q?RCKmYDmMz3dWl+ufoyWY?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAACvJ/xbh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGDayeDeYh3iyOBYAglFJkWGRgTAYhjIjcGDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkvgjYigmUBAgMBAiAEUgYJAQEKGAICJgICA1QGAQwGA?=
 =?us-ascii?q?gEBAYMcgWoDFQWmI3wziiCBC4p+F4F/gREnDIJfglaFLIJXAoh/hl00j3IJkSk?=
 =?us-ascii?q?GGIlRhzeYMIFcgXczGggbFYMngicXjjohAQExgQUBARyLXwEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAACvJ/xbh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGDayeDeYh3iyOBYAglFJkWGRgTAYhjIjcGDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkvgjYigmUBAgMBAiAEUgYJAQEKGAICJgICA1QGAQwGAgEBAYMcgWoDFQW?=
 =?us-ascii?q?mI3wziiCBC4p+F4F/gREnDIJfglaFLIJXAoh/hl00j3IJkSkGGIlRhzeYMIFcg?=
 =?us-ascii?q?XczGggbFYMngicXjjohAQExgQUBARyLXwEB?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="52670365"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 09:10:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726980AbeK0EE7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 26 Nov 2018 23:04:59 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60070 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726224AbeK0EE7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Nov 2018 23:04:59 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com [10.5.11.22])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id C68F7307DAA3;
        Mon, 26 Nov 2018 17:10:15 +0000 (UTC)
Received: from llong.remote.csb (dhcp-17-55.bos.redhat.com [10.18.17.55])
        by smtp.corp.redhat.com (Postfix) with ESMTP id D6DED105706A;
        Mon, 26 Nov 2018 17:10:14 +0000 (UTC)
Subject: Re: [PATCH] debugobjects: avoid recursive calls with kmemleak
To: Qian Cai <cai@gmx.us>, akpm@linux-foundation.org
Cc: tglx@linutronix.de, yang.shi@linux.alibaba.com, arnd@arndb.de,
        catalin.marinas@arm.com, linux-kernel@vger.kernel.org
References: <20181126165343.2339-1-cai@gmx.us>
From: Waiman Long <longman@redhat.com>
Openpgp: preference=signencrypt
Autocrypt: addr=longman@redhat.com; prefer-encrypt=mutual; keydata=
 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
 weim8xU=
Organization: Red Hat
Message-ID: <f42cacfd-e97d-7471-f520-619fbbee63ff@redhat.com>
Date: Mon, 26 Nov 2018 12:10:14 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181126165343.2339-1-cai@gmx.us>
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
Content-Language: en-US
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.42]); Mon, 26 Nov 2018 17:10:16 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/26/2018 11:53 AM, Qian Cai wrote:
> CONFIG_DEBUG_OBJECTS_RCU_HEAD does not play well with kmemleak due to
> recursive calls.
>
> fill_pool
>   kmemleak_ignore
>     make_black_object
>       put_object
>         __call_rcu (kernel/rcu/tree.c)
>           debug_rcu_head_queue
>             debug_object_activate
>               debug_object_init
>                 fill_pool
>                   kmemleak_ignore
>                     make_black_object
>                       ...
>
> Hence, adding SLAB_NOLEAKTRACE to kmem_cache_create() to not register a
> newly allocated debug objects at all.
>
> Suggested-by: Catalin Marinas <catalin.marinas@arm.com>
> Signed-off-by: Qian Cai <cai@gmx.us>
> ---
>  lib/debugobjects.c | 5 ++---
>  1 file changed, 2 insertions(+), 3 deletions(-)
>
> diff --git a/lib/debugobjects.c b/lib/debugobjects.c
> index eab7727b46ed..55437fd5128b 100644
> --- a/lib/debugobjects.c
> +++ b/lib/debugobjects.c
> @@ -135,7 +135,6 @@ static void fill_pool(void)
>  		if (!new)
>  			return;
>  
> -		kmemleak_ignore(new);
>  		raw_spin_lock_irqsave(&pool_lock, flags);
>  		hlist_add_head(&new->node, &obj_pool);
>  		debug_objects_allocated++;
> @@ -1128,7 +1127,6 @@ static int __init debug_objects_replace_static_objects(void)
>  		obj = kmem_cache_zalloc(obj_cache, GFP_KERNEL);
>  		if (!obj)
>  			goto free;
> -		kmemleak_ignore(obj);
>  		hlist_add_head(&obj->node, &objects);
>  	}
>  
> @@ -1182,7 +1180,8 @@ void __init debug_objects_mem_init(void)
>  
>  	obj_cache = kmem_cache_create("debug_objects_cache",
>  				      sizeof (struct debug_obj), 0,
> -				      SLAB_DEBUG_OBJECTS, NULL);
> +				      SLAB_DEBUG_OBJECTS | SLAB_NOLEAKTRACE,
> +				      NULL);
>  
>  	if (!obj_cache || debug_objects_replace_static_objects()) {
>  		debug_objects_enabled = 0;

Acked-by: Waiman Long <longman@redhat.com>

