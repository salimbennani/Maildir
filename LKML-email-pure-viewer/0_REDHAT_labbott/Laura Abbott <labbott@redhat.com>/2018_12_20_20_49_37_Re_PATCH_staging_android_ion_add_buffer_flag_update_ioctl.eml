Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:42:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 65E3A58050C;
	Thu, 20 Dec 2018 12:50:33 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 12:50:32 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AsZlkhROyZ08sPS5llU0l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn5r8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyTJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7Mr0dUf2vzKbS0D7Oc+hZ1iz66IjUbhAqvPaBXbZqfsXK0kYvEB/FjkmL?=
 =?us-ascii?q?pIz/ITyay+QNvHKH7+Z6Se2vjGsnphh3rzOyyMksjYzJiZgUylDC7Sh5xIc1Jd?=
 =?us-ascii?q?ulSE90fNGkCppQtz+EOItsWsMiWWZouCQkxbIapZ63Zi8KyI4oxxPZdveJcJCI?=
 =?us-ascii?q?7wr9WOqNJTp0nm9pdbyhixqo7EStyfHwWtO13VtItiZJjNjBumwQ2xHW68WLVu?=
 =?us-ascii?q?Vx80Kl1DuMywzf9uRJLl0umqXFKpMsx7s9m5kOvUnMBSD7nlj9grWMeUU+4Oeo?=
 =?us-ascii?q?7vzqYrX4qZ+YMI95kh/+MqswlcylG+g4MRYBX3Kd+eui0L3v50r5QK9FjvEuk6?=
 =?us-ascii?q?nZto7VJdgDq6KnHwNY1pwv5wuxAju4ytgUgHoKIE5fdB+GjYXlI1TOL+r5Dfe7?=
 =?us-ascii?q?jVSsijBrx/XeM73lA5XNKGXDkbj4cbZ+9UFc0gwzws5b555NDbEALvTzVVHrtN?=
 =?us-ascii?q?HDEB85PBK7w/z9BNV+yIweQ2SPDbGdMK/Itl+I/O0vL/GWZIAJoDb9N+Ql5/n2?=
 =?us-ascii?q?gH89mF8dfrem0YEYaXClBflmJ0SZYXzxgtYOC2sKvww+TPD0h12GSzJce3GyX6?=
 =?us-ascii?q?ck7DEhFI2mFZvDRpyqgLGZ3Ce0BJxWZnxcBVCLC3vod5iEVO0KaCKdOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVVW50hW?=
 =?us-ascii?q?MIRzg13Kxlu0xy0FWD3LN8g/xZE9xT+vxIXh07NZ7a0+x1FdTyVhjdcdeOTVas?=
 =?us-ascii?q?Ws+mDi0pTtIt398OZF5wG9a4gRDFxSaqB74VmKaNBJw76a/c23nxJ8Bgy3fJzq?=
 =?us-ascii?q?Uhjl8mQtdROm2inKJw6w/TB4vRmUWDi6mqbbgc3DLK9Gqb0GWBpl9YXxBqXaXF?=
 =?us-ascii?q?R38fYFDWosr/5k/FS7+uCrEnMg9axM6GK6tKbMDpjFpcSPfiPtTef3y+m2OqCR?=
 =?us-ascii?q?mUwbOMaZLge38B0yXFFEgEjwcT8G6bOgckGCeuvXjSDDx0GlLpeEPj7+9+pWi/?=
 =?us-ascii?q?Tk81yQGKckJg26C0+h4TmfyTVfcT0qgYtycmrjV+BEy90M7OC9qcuwphe71RYc?=
 =?us-ascii?q?884FdC0mLZqwx9P5y6I6B+nFIedB53v0fv1xVxBYVNiswqrHIszApvJqOUylJB?=
 =?us-ascii?q?dzWE3Z/uPr3bMHX9/Beqa6TOwFHRzM6W+rsT6PQ/s1jspgWpGVQt8np509hZyW?=
 =?us-ascii?q?CT5ojXAwUIV5LxUUE39wZhqrHeYyk94Z7U1HJ2Pam1tD/Cx8wmBO8/xhm8eNdf?=
 =?us-ascii?q?NbuOFBXuHM0CG8iuNOsqlkCpbxIZJuxd6LQ4PsKmd/Sc3q6rM/1tnDanjWRB/Y?=
 =?us-ascii?q?B83ViA9yt6Su7UwZkFx+uU0ReAVzf5lF2hqNz4mZhYZTEOGWqy0TLkBI9NaaJo?=
 =?us-ascii?q?Z4YEFGCuL9exxtpgnZ7tWmdU+0K5CFMCxcCmZwCSb1v73QBL0UQXoHqnmTa3zj?=
 =?us-ascii?q?BukjEpqLaf0zLKw+j4aBUHPWtLTnF4jVjwOYi0k8waXE+wYgkplRup/0b7y7JA?=
 =?us-ascii?q?pKRiKWneWkNIfynwL2F/Xaq8rLuCY8hT6Jw2tSVbSvizYVefSrTluRsVzzvjH3?=
 =?us-ascii?q?dCxDA8bzyquI/2nwZ5iGKeK3Z/tmHZdttzxRfc5dzcQ+Be3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XnEAcg1i/3zd?=
 =?us-ascii?q?tqVSTOrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXoOXzELwsTZ4Aj42EJ5KHKJyJn0VnGcwstnetm7bXka2iM778BWFq?=
 =?us-ascii?q?iU6KZIkjdyolq9tQjRe+Ryni8Byfsy734Xm+QJuAsuziqHGLwTE1dXPTfwlxuW?=
 =?us-ascii?q?9dCxt7tYZHygcbWr0Ep+nNahDKyNow1GWXb5fIsiEjF07sllLF3M13jz4Jn+eN?=
 =?us-ascii?q?bMddITqgGUkxDYguhJL5Ixk+AGhCt9NmL7oH0l0PU7jR110JG+vYiHLXht/a2j?=
 =?us-ascii?q?Dh5ZMD31e90c+jX3galCmcaW2pilHo99FTUTQJvoUfWoHSoJuvv9MAaOFCA8pm?=
 =?us-ascii?q?2fGbrCBgKf7EZmr3TSE5GkLX2XJX8Zzcl8SxmZPkBQnAcUXDAilJ4jCg+q3NDh?=
 =?us-ascii?q?cFt+5j0J5F73sB5MxfxzNxXlTmfTvgSoaio3SJiCKhpZ9BpC6lzRMcyf6OJzAi?=
 =?us-ascii?q?5Z8oegrAyLNmyUeQBIAXsVVUyDAlDpJqOu6sXY8+iEGuq+KOPDYLWJqexDTveI?=
 =?us-ascii?q?2Iig0o188zaXMcWPOHZiAuY/2kpCW3B5BsvYly8OSywRiyLCccqbqA2g9S1wq8?=
 =?us-ascii?q?C16O7rVx735YuTF7tSNs1i+xCojqeCNO6Qhyd5JSxb1pMWwn/Ix6YQ3EQPiyF1?=
 =?us-ascii?q?bDStFbUAtSjQTKPfgKNXDhgbaz9tO8tM9a4zwg5NOcvDgNPvyrF4luI1C0tCVV?=
 =?us-ascii?q?H5gM6peNcFI3ujO1LHHkqLMLWGKCbPw8H2Z6O8VLJRgP9Vtx22pTaUDUvjMi6f?=
 =?us-ascii?q?mDnuUhClKftMgz2DPBxCpIG9dQ5gCXTiTNLjcBG0LMV7giE2wbIqgHPHLmocMT?=
 =?us-ascii?q?l6c0NQobyc9yJYgvNjG2Nf6nppN/WLmyGc7+PAMJYZreNrAjhol+Jd+Hk7y6Fa?=
 =?us-ascii?q?7CdBRPx0nivdtt9vo1G8nemJxTpqSx5OqjdNhIKWskRuI6TZ9p9cWXna+BIB93?=
 =?us-ascii?q?mfCxMPp4gtNtq68ZJdzNfTnaW7aB0DuZqA5dEdAsWSOs+BP1IhMAHoHD/fCw1D?=
 =?us-ascii?q?RjmuYyWXzVdAlfCOsGaYq4czrrDomZwHULgdU0Y6XLtOEVlgHcBEO5pyQTogub?=
 =?us-ascii?q?qaiscS4jy5thaHF+tAuZWScvuPG/ynATyTiqVYL08MyLnyKpgPHpf210xrdh9x?=
 =?us-ascii?q?m4GcSBmYZsxEviA0Nlx8m05K6nUrCzRrg08=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAADG/xtch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAQGBL4E5gQIng32IGYt8gWAIJRSWZGWBcxMBARgNBgGBS4J?=
 =?us-ascii?q?1AoJsIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDEIWAYFdJAGCYQEBAQEDAQIgB?=
 =?us-ascii?q?AsBBUEGBgMBAQoRBAEBAQICIwMCAgMlDAEFAQsJCAYBDAYCAQEBFoMHAYIBAQQ?=
 =?us-ascii?q?Km3I8ixl8M4QtAYEShGkSeYs0F4FAP4E4DIIqNYMeA4RoglcCi0KFGZAIWgmHE?=
 =?us-ascii?q?YYyhBwGGIFfTYdMh2WJTYEGg3WLHgIEAgQFAgUPIYElgg4zGggbFUgTgkwJgh4?=
 =?us-ascii?q?XiF6FYB8yAYEEAQEhh1aFaQEB?=
X-IPAS-Result: =?us-ascii?q?A0AiAADG/xtch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAQGBL4E5gQIng32IGYt8gWAIJRSWZGWBcxMBARgNBgGBS4J1AoJsIjQJDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCA0JCCkjDEIWAYFdJAGCYQEBAQEDAQIgBAsBBUEGBgMBAQo?=
 =?us-ascii?q?RBAEBAQICIwMCAgMlDAEFAQsJCAYBDAYCAQEBFoMHAYIBAQQKm3I8ixl8M4QtA?=
 =?us-ascii?q?YEShGkSeYs0F4FAP4E4DIIqNYMeA4RoglcCi0KFGZAIWgmHEYYyhBwGGIFfTYd?=
 =?us-ascii?q?Mh2WJTYEGg3WLHgIEAgQFAgUPIYElgg4zGggbFUgTgkwJgh4XiF6FYB8yAYEEA?=
 =?us-ascii?q?QEhh1aFaQEB?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="56031666"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 12:50:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387684AbeLTUu3 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 15:50:29 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:36321 "EHLO
        mail-qk1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2387606AbeLTUu2 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 15:50:28 -0500
Received: by mail-qk1-f195.google.com with SMTP id o125so1850631qkf.3
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 12:50:27 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=TjSouy7zWJMLSrFzX0eZM9IOf1R2Thbe9v8nUckp6Bo=;
        b=lQVJ6POkoMbqCHuD7vbH7JUlTk5RPCkPhcJIsyAe7pYxUeJgsWQ2CXy+QarysKrUjR
         UDWQjMcUxdKvzbtX+xAO+Ow1VJ3tU7EZwKmWwBRjhInXJNh5+I0urnmNyCTsk43t8y6t
         kO9utatqoS7vxwbWi1Hj+7P8QBJVXUN4gN8ljvHlbYF4e9EjW8J9aVyvqONFHA7tqNje
         lTItQmXtsnxMTqR6X6y4W99LGm9a34niN9mKEOhpztudJeSov4BeH9Xcj1GX5QXdT9Bb
         tUbdJ8cKLSJ6cSh5CPVQ26GNBGlYnbi+Sk/shyuvbaLdfowVl3J/GcaH7pbeVS96Ya34
         5SiA==
X-Gm-Message-State: AA+aEWZnShQ0CtZeXz+YSLGhWM0qsP6LUlJxvMUwX5IxuVvvJltPrZMb
        YXwTS1nJeoJJ/N9rNFO0KYJs2FgtlwBfMQ==
X-Google-Smtp-Source: AFSGD/VnXFTvej5jJFzf6cHGpQszjudTb8Oe+ci51iBTrgW1eOcQivpvE+aeOrw+X7NVbloNHlHGdg==
X-Received: by 2002:ae9:efd6:: with SMTP id d205mr24522156qkg.274.1545339027119;
        Thu, 20 Dec 2018 12:50:27 -0800 (PST)
Received: from ?IPv6:2601:602:9800:dae6::814b? ([2601:602:9800:dae6::814b])
        by smtp.gmail.com with ESMTPSA id p42sm4190723qte.8.2018.12.20.12.49.47
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 20 Dec 2018 12:50:26 -0800 (PST)
Subject: Re: [PATCH] staging: android: ion: add buffer flag update ioctl
To: "Zengtao (B)" <prime.zeng@hisilicon.com>,
        "sumit.semwal@linaro.org" <sumit.semwal@linaro.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        =?UTF-8?Q?Arve_Hj=c3=b8nnev=c3=a5g?= <arve@android.com>,
        Todd Kjos <tkjos@android.com>,
        Martijn Coenen <maco@android.com>,
        Joel Fernandes <joel@joelfernandes.org>,
        "devel@driverdev.osuosl.org" <devel@driverdev.osuosl.org>,
        "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
        "linaro-mm-sig@lists.linaro.org" <linaro-mm-sig@lists.linaro.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
References: <1545239943-15414-1-git-send-email-prime.zeng@hisilicon.com>
 <b0cc8d05-b313-9433-4e48-d0d39aa1858b@redhat.com>
 <678F3D1BB717D949B966B68EAEB446ED24E2926A@dggemm526-mbx.china.huawei.com>
From: Laura Abbott <labbott@redhat.com>
Message-ID: <786ad55f-4651-56ce-cd5c-ca02f7ac4093@redhat.com>
Date: Thu, 20 Dec 2018 12:49:37 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <678F3D1BB717D949B966B68EAEB446ED24E2926A@dggemm526-mbx.china.huawei.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/19/18 5:39 PM, Zengtao (B) wrote:
> Hi laura:
> 
>> -----Original Message-----
>> From: Laura Abbott [mailto:labbott@redhat.com]
>> Sent: Thursday, December 20, 2018 2:10 AM
>> To: Zengtao (B) <prime.zeng@hisilicon.com>; sumit.semwal@linaro.org
>> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>; Arve Hjønnevåg
>> <arve@android.com>; Todd Kjos <tkjos@android.com>; Martijn Coenen
>> <maco@android.com>; Joel Fernandes <joel@joelfernandes.org>;
>> devel@driverdev.osuosl.org; dri-devel@lists.freedesktop.org;
>> linaro-mm-sig@lists.linaro.org; linux-kernel@vger.kernel.org
>> Subject: Re: [PATCH] staging: android: ion: add buffer flag update ioctl
>>
>> On 12/19/18 9:19 AM, Zeng Tao wrote:
>>> In some usecases, the buffer cached attribute is not determined at
>>> allocation time, it's determined just before the real cpu mapping.
>>> And from the memory view of point, a buffer should not have the
>> cached
>>> attribute util is really mapped by the cpu. So in this patch, we
>>> introduced the new ioctl command to target the requirement.
>>>
>>
>> This is racy and error prone. Can you explain more what problem you are
>> trying to solve?
> 
> My use case is like this:
> 1.  There are two process A and B, A takes case of ion buffer allocation, and
>   pass the buffer fd to B, then B maps and uses it.
> 2.  Process B need to map the buffer with different cached attribute for
> different use case, for example, if the buffer is used for pure software algorithm,
> then we need to map it as cached, otherwise non-cached, and B needs to deal
> with both cases.
> And unfortunately the mmap syscall takes no cached flags and we can't decide
> the cache attribute when we are doing the mmap, so I introduce new the ioctl
> even though I think the solution is not as good.
> 
> 

Thanks for the explanation, this was about the use case I expected.
I'm pretty sure I had this exact problem once upon a time and we
didn't come up with a solution. I'd still like to get rid of
uncached buffers in general and just use cached buffers
(see http://driverdev.linuxdriverproject.org/pipermail/driverdev-devel/2018-November/128842.html)
What's your usecase for uncached buffers?

>>
>>> Signed-off-by: Zeng Tao <prime.zeng@hisilicon.com>
>>> ---
>>>    drivers/staging/android/ion/ion-ioctl.c |  4 ++++
>>>    drivers/staging/android/ion/ion.c       | 17 +++++++++++++++++
>>>    drivers/staging/android/ion/ion.h       |  1 +
>>>    drivers/staging/android/uapi/ion.h      | 22
>> ++++++++++++++++++++++
>>>    4 files changed, 44 insertions(+)
>>>
>>> diff --git a/drivers/staging/android/ion/ion-ioctl.c
>>> b/drivers/staging/android/ion/ion-ioctl.c
>>> index a8d3cc4..60bb702 100644
>>> --- a/drivers/staging/android/ion/ion-ioctl.c
>>> +++ b/drivers/staging/android/ion/ion-ioctl.c
>>> @@ -12,6 +12,7 @@
>>>
>>>    union ion_ioctl_arg {
>>>    	struct ion_allocation_data allocation;
>>> +	struct ion_buffer_flag_data update;
>>>    	struct ion_heap_query query;
>>>    };
>>>
>>> @@ -83,6 +84,9 @@ long ion_ioctl(struct file *filp, unsigned int cmd,
>>> unsigned long arg)
>>>
>>>    		break;
>>>    	}
>>> +	case ION_IOC_BUFFER_UPDATE:
>>> +		ret = ion_buffer_update(data.update.fd, data.update.flags);
>>> +		break;
>>>    	case ION_IOC_HEAP_QUERY:
>>>    		ret = ion_query_heaps(&data.query);
>>>    		break;
>>> diff --git a/drivers/staging/android/ion/ion.c
>>> b/drivers/staging/android/ion/ion.c
>>> index 9907332..f1404dc 100644
>>> --- a/drivers/staging/android/ion/ion.c
>>> +++ b/drivers/staging/android/ion/ion.c
>>> @@ -436,6 +436,23 @@ int ion_alloc(size_t len, unsigned int
>> heap_id_mask, unsigned int flags)
>>>    	return fd;
>>>    }
>>>
>>> +int ion_buffer_update(unsigned int fd, unsigned int flags) {
>>> +	struct dma_buf *dmabuf;
>>> +	struct ion_buffer *buffer;
>>> +
>>> +	dmabuf = dma_buf_get(fd);
>>> +
>>> +	if (!dmabuf)
>>> +		return -EINVAL;
>>> +
>>> +	buffer = dmabuf->priv;
>>> +	buffer->flags = flags;
>>> +	dma_buf_put(dmabuf);
>>> +
>>> +	return 0;
>>> +}
>>> +
>>>    int ion_query_heaps(struct ion_heap_query *query)
>>>    {
>>>    	struct ion_device *dev = internal_dev; diff --git
>>> a/drivers/staging/android/ion/ion.h
>>> b/drivers/staging/android/ion/ion.h
>>> index c006fc1..99bf9ab 100644
>>> --- a/drivers/staging/android/ion/ion.h
>>> +++ b/drivers/staging/android/ion/ion.h
>>> @@ -199,6 +199,7 @@ int ion_heap_pages_zero(struct page *page,
>> size_t size, pgprot_t pgprot);
>>>    int ion_alloc(size_t len,
>>>    	      unsigned int heap_id_mask,
>>>    	      unsigned int flags);
>>> +int ion_buffer_update(unsigned int fd, unsigned int flags);
>>>
>>>    /**
>>>     * ion_heap_init_shrinker
>>> diff --git a/drivers/staging/android/uapi/ion.h
>>> b/drivers/staging/android/uapi/ion.h
>>> index 5d70098..99753fc 100644
>>> --- a/drivers/staging/android/uapi/ion.h
>>> +++ b/drivers/staging/android/uapi/ion.h
>>> @@ -74,6 +74,20 @@ struct ion_allocation_data {
>>>    	__u32 unused;
>>>    };
>>>
>>> +/**
>>> + * struct ion_buffer_flag_data - metadata passed from userspace for
>>> +update
>>> + * buffer flags
>>> + * @fd:			file descriptor of the buffer
>>> + * @flags:		flags passed to the buffer
>>> + *
>>> + * Provided by userspace as an argument to the ioctl  */
>>> +
>>> +struct ion_buffer_flag_data {
>>> +	__u32 fd;
>>> +	__u32 flags;
>>> +}
>>> +
>>>    #define MAX_HEAP_NAME			32
>>>
>>>    /**
>>> @@ -116,6 +130,14 @@ struct ion_heap_query {
>>>    				      struct ion_allocation_data)
>>>
>>>    /**
>>> + * DOC: ION_IOC_BUFFER_UPDATE - update the specified ion buffer
>> flags
>>> + *
>>> + * Takes an ion_buffer_flag_data structure and returns the result of
>>> +the
>>> + * buffer flag update operation.
>>> + */
>>> +#define ION_IOC_BUFFER_UPDATE	_IOWR(ION_IOC_MAGIC, 1, \
>>> +				      struct ion_buffer_flag_data)
>>> +/**
>>>     * DOC: ION_IOC_HEAP_QUERY - information about available heaps
>>>     *
>>>     * Takes an ion_heap_query structure and populates information
>> about
>>>
> 

