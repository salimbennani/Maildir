Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:11:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E72785805FC
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 15:20:35 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 15:20:35 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ACvCnCxI3bbhQ31P8ENmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfIvvxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPWSJPAYGz?=
 =?us-ascii?q?b4USAeoZP+tWrYbwq0YAoBeiGwasH/jixiNUinLswaE2z/gtHR3A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakWVuC1zK/IxijeYfNQ3jf85pXDfxcjofGXW7JwdsTQxFI1Fwzbk1qQ?=
 =?us-ascii?q?qZbqPy+P2usRtGib6vNtWOSygGAprAFxpyKgxsYqioTRiYIVzE3E+T9+wIYvKt?=
 =?us-ascii?q?21TlNwb928EJZIqS2WK4h7Ttk/T211uys20KMKtJC7cSQQ1ZgqxQbTZ+Kbf4WM?=
 =?us-ascii?q?+B7vSeicLSliiH54e7+yiQy+/Vajx+D6S8K6ykxFrjBfndnJrn0N1wLc6syASv?=
 =?us-ascii?q?Zl+keh2C2P1xzI6u1eLkA0k7fbJ4Qmwr4qmZofqUXDHinol0XqlKKaaFko9+uy?=
 =?us-ascii?q?5+j6f7nrpYWQO5F6hwz+KKgih86yDfw9MgcUXmib/eq81Kfk/U38WLhKl+M5kq?=
 =?us-ascii?q?zEsJzDOMsUuLC5DBFR0oo68Bm/CCqm0NIEknYZN1JJfxaHj4nqO17QOvz5Auq/?=
 =?us-ascii?q?jkyokDdqwfDGI7LgDo/MLnjFjLfuY7J951RAxwo0yNBS/JRUCrYHIPL8XE/xqc?=
 =?us-ascii?q?bUDhgjMwy72+rnEsly1psCWWKTBa+UKKfSsV6L5u0xOeWNa5IVtS35K/gk4f7u?=
 =?us-ascii?q?kHA4lUUcfamvwZsYdnS4Eu56LEWeZHq/yuoHCnoA6woiUPTx2hrFVT9Ie230Wa?=
 =?us-ascii?q?U66TcmToW8AsDGT4GphbWHmyCjApxRYHsBE12JDDLkepuJX6QxbjmPKJpkmz0A?=
 =?us-ascii?q?Sb/zUoIkyFSiuRH3z/99I/PJ9zYEnZTk0tdz+qvUjx5l7iF+DcmWzzSQSXpplH?=
 =?us-ascii?q?gDXT480fNDphlkx1KelKJ8hPdbPdpU4fxPT0E9L5GYh/V3Ds23Vg/fc9OhTlGg?=
 =?us-ascii?q?TdO7RzYrQYEf2dgLNmR6G9PqtRbEwGL+AaQTkKOjHpE48qvAmXP2IpAumD79yK?=
 =?us-ascii?q?A9ggx+EYN0Pmq8i/s6rlCLCg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CGAgDcORRchxHrdtBkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExKoEPgSmMdIsZmXiBYhEYBw2BS4V8IjgSAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?jDII2BQIDGgEGglwDAwECQwopAwMBAgYBAUgIAwFTBxIFBIMYAYIAAQSnOYJMg?=
 =?us-ascii?q?nSEa4w+F4FAP4Nug0gLBIEkhhgCiTCGHH6QB0cJkU8LGIlzh1+JO4dtiDmBXYF?=
 =?us-ascii?q?3MxoIGxWDJwmDNAEIh1aFXSMxgQcciyuBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CGAgDcORRchxHrdtBkHQEBBQEHBQGBZYExKoEPgSmMdIs?=
 =?us-ascii?q?ZmXiBYhEYBw2BS4V8IjgSAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGgEGg?=
 =?us-ascii?q?lwDAwECQwopAwMBAgYBAUgIAwFTBxIFBIMYAYIAAQSnOYJMgnSEa4w+F4FAP4N?=
 =?us-ascii?q?ug0gLBIEkhhgCiTCGHH6QB0cJkU8LGIlzh1+JO4dtiDmBXYF3MxoIGxWDJwmDN?=
 =?us-ascii?q?AEIh1aFXSMxgQcciyuBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="66926828"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 15:20:34 -0800
Received: from localhost ([::1]:35949 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXwkz-0005Ms-P1
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 18:20:33 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39956)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <jsnow@redhat.com>) id 1gXwgW-0000yI-4d
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 18:15:57 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <jsnow@redhat.com>) id 1gXwgU-0003HZ-86
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 18:15:56 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34092)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <jsnow@redhat.com>)
	id 1gXwgN-0002QM-Qm; Fri, 14 Dec 2018 18:15:48 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id E655C7EBA9;
	Fri, 14 Dec 2018 23:15:40 +0000 (UTC)
Received: from probe.redhat.com (ovpn-122-54.rdu2.redhat.com [10.10.122.54])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 143D419C65;
	Fri, 14 Dec 2018 23:15:33 +0000 (UTC)
From: John Snow <jsnow@redhat.com>
To: qemu-block@nongnu.org,
	qemu-devel@nongnu.org
Date: Fri, 14 Dec 2018 18:15:12 -0500
Message-Id: <20181214231512.5295-8-jsnow@redhat.com>
In-Reply-To: <20181214231512.5295-1-jsnow@redhat.com>
References: <20181214231512.5295-1-jsnow@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Fri, 14 Dec 2018 23:15:40 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v3 7/7] iotests: add iotest 236 for testing
 bitmap merge
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, vsementsov@virtuozzo.com,
	Markus Armbruster <armbru@redhat.com>,
	Max Reitz <mreitz@redhat.com>, John Snow <jsnow@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

New interface, new smoke test.
---
 tests/qemu-iotests/236     | 124 +++++++++++++++++++++++
 tests/qemu-iotests/236.out | 200 +++++++++++++++++++++++++++++++++++++
 tests/qemu-iotests/group   |   1 +
 3 files changed, 325 insertions(+)
 create mode 100755 tests/qemu-iotests/236
 create mode 100644 tests/qemu-iotests/236.out

diff --git a/tests/qemu-iotests/236 b/tests/qemu-iotests/236
new file mode 100755
index 0000000000..edf16c4ab1
--- /dev/null
+++ b/tests/qemu-iotests/236
@@ -0,0 +1,124 @@
+#!/usr/bin/env python
+#
+# Test bitmap merges.
+#
+# Copyright (c) 2018 John Snow for Red Hat, Inc.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
+# owner=jsnow@redhat.com
+
+import json
+import iotests
+from iotests import log
+
+iotests.verify_image_format(supported_fmts=['qcow2'])
+
+patterns = [("0x5d", "0",         "64k"),
+            ("0xd5", "1M",        "64k"),
+            ("0xdc", "32M",       "64k"),
+            ("0xcd", "0x3ff0000", "64k")]  # 64M - 64K
+
+overwrite = [("0xab", "0",         "64k"), # Full overwrite
+             ("0xad", "0x00f8000", "64k"), # Partial-left (1M-32K)
+             ("0x1d", "0x2008000", "64k"), # Partial-right (32M+32K)
+             ("0xea", "0x3fe0000", "64k")] # Adjacent-left (64M - 128K)
+
+def query_bitmaps(vm):
+    res = vm.qmp("query-block")
+    return {device['device']: device['dirty-bitmaps'] for
+            device in res['return']}
+
+with iotests.FilePath('img') as img_path, \
+     iotests.VM() as vm:
+
+    log('--- Preparing image & VM ---\n')
+    iotests.qemu_img_pipe('create', '-f', iotests.imgfmt, img_path, '64M')
+    vm.add_drive(img_path)
+    vm.launch()
+
+    log('--- Adding preliminary bitmaps A & B ---\n')
+    vm.qmp_log("block-dirty-bitmap-add", node="drive0", name="bitmapA")
+    vm.qmp_log("block-dirty-bitmap-add", node="drive0", name="bitmapB")
+
+    # Dirties 4 clusters. count=262144
+    log('')
+    log('--- Emulating writes ---\n')
+    for p in patterns:
+        cmd = "write -P%s %s %s" % p
+        log(cmd)
+        log(vm.hmp_qemu_io("drive0", cmd))
+
+    log(json.dumps(query_bitmaps(vm), indent=2, separators=(',', ': ')))
+
+    log('')
+    log('--- Disabling B & Adding C ---\n')
+    vm.qmp_log("transaction", indent=2, actions=[
+        { "type": "block-dirty-bitmap-disable",
+          "data": { "node": "drive0", "name": "bitmapB" }},
+        { "type": "block-dirty-bitmap-add",
+          "data": { "node": "drive0", "name": "bitmapC" }},
+        # Purely extraneous, but test that it works:
+        { "type": "block-dirty-bitmap-disable",
+          "data": { "node": "drive0", "name": "bitmapC" }},
+        { "type": "block-dirty-bitmap-enable",
+          "data": { "node": "drive0", "name": "bitmapC" }},
+    ])
+
+    log('')
+    log('--- Emulating further writes ---\n')
+    # Dirties 6 clusters, 3 of which are new in contrast to "A".
+    # A = 64 * 1024 * (4 + 3) = 458752
+    # C = 64 * 1024 * 6       = 393216
+    for p in overwrite:
+        cmd = "write -P%s %s %s" % p
+        log(cmd)
+        log(vm.hmp_qemu_io("drive0", cmd))
+
+    log('')
+    log('--- Disabling A & C ---\n')
+    vm.qmp_log("transaction", indent=2, actions=[
+        { "type": "block-dirty-bitmap-disable",
+          "data": { "node": "drive0", "name": "bitmapA" }},
+        { "type": "block-dirty-bitmap-disable",
+          "data": { "node": "drive0", "name": "bitmapC" }}
+    ])
+
+    # A: 7 clusters
+    # B: 4 clusters
+    # C: 6 clusters
+    log(json.dumps(query_bitmaps(vm), indent=2, separators=(',', ': ')))
+
+    log('')
+    log('--- Creating D as a merge of B & C ---\n')
+    # Good hygiene: create a disabled bitmap as a merge target.
+    vm.qmp_log("transaction", indent=2, actions=[
+        { "type": "block-dirty-bitmap-add",
+          "data": { "node": "drive0", "name": "bitmapD", "disabled": True }},
+        { "type": "block-dirty-bitmap-merge",
+          "data": { "node": "drive0", "target": "bitmapD",
+                    "bitmaps": ["bitmapB", "bitmapC"] }}
+    ])
+
+    # A and D should now both have 7 clusters apiece.
+    # B and C remain unchanged with 4 and 6 respectively.
+    log(json.dumps(query_bitmaps(vm), indent=2, separators=(',', ': ')))
+
+    # A and D should be equivalent.
+    vm.qmp_log('x-debug-block-dirty-bitmap-sha256',
+               node="drive0", name="bitmapA")
+    vm.qmp_log('x-debug-block-dirty-bitmap-sha256',
+               node="drive0", name="bitmapD")
+
+    vm.shutdown()
diff --git a/tests/qemu-iotests/236.out b/tests/qemu-iotests/236.out
new file mode 100644
index 0000000000..42c131504d
--- /dev/null
+++ b/tests/qemu-iotests/236.out
@@ -0,0 +1,200 @@
+--- Preparing image & VM ---
+
+--- Adding preliminary bitmaps A & B ---
+
+{"execute": "block-dirty-bitmap-add", "arguments": {"name": "bitmapA", "node": "drive0"}}
+{"return": {}}
+{"execute": "block-dirty-bitmap-add", "arguments": {"name": "bitmapB", "node": "drive0"}}
+{"return": {}}
+
+--- Emulating writes ---
+
+write -P0x5d 0 64k
+{"return": ""}
+write -P0xd5 1M 64k
+{"return": ""}
+write -P0xdc 32M 64k
+{"return": ""}
+write -P0xcd 0x3ff0000 64k
+{"return": ""}
+{
+  "drive0": [
+    {
+      "status": "active",
+      "count": 262144,
+      "name": "bitmapB",
+      "granularity": 65536
+    },
+    {
+      "status": "active",
+      "count": 262144,
+      "name": "bitmapA",
+      "granularity": 65536
+    }
+  ]
+}
+
+--- Disabling B & Adding C ---
+
+{
+  "arguments": {
+    "actions": [
+      {
+        "data": {
+          "name": "bitmapB",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-disable"
+      },
+      {
+        "data": {
+          "name": "bitmapC",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-add"
+      },
+      {
+        "data": {
+          "name": "bitmapC",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-disable"
+      },
+      {
+        "data": {
+          "name": "bitmapC",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-enable"
+      }
+    ]
+  },
+  "execute": "transaction"
+}
+{
+  "return": {}
+}
+
+--- Emulating further writes ---
+
+write -P0xab 0 64k
+{"return": ""}
+write -P0xad 0x00f8000 64k
+{"return": ""}
+write -P0x1d 0x2008000 64k
+{"return": ""}
+write -P0xea 0x3fe0000 64k
+{"return": ""}
+
+--- Disabling A & C ---
+
+{
+  "arguments": {
+    "actions": [
+      {
+        "data": {
+          "name": "bitmapA",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-disable"
+      },
+      {
+        "data": {
+          "name": "bitmapC",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-disable"
+      }
+    ]
+  },
+  "execute": "transaction"
+}
+{
+  "return": {}
+}
+{
+  "drive0": [
+    {
+      "status": "disabled",
+      "count": 393216,
+      "name": "bitmapC",
+      "granularity": 65536
+    },
+    {
+      "status": "disabled",
+      "count": 262144,
+      "name": "bitmapB",
+      "granularity": 65536
+    },
+    {
+      "status": "disabled",
+      "count": 458752,
+      "name": "bitmapA",
+      "granularity": 65536
+    }
+  ]
+}
+
+--- Creating D as a merge of B & C ---
+
+{
+  "arguments": {
+    "actions": [
+      {
+        "data": {
+          "disabled": true,
+          "name": "bitmapD",
+          "node": "drive0"
+        },
+        "type": "block-dirty-bitmap-add"
+      },
+      {
+        "data": {
+          "bitmaps": [
+            "bitmapB",
+            "bitmapC"
+          ],
+          "node": "drive0",
+          "target": "bitmapD"
+        },
+        "type": "block-dirty-bitmap-merge"
+      }
+    ]
+  },
+  "execute": "transaction"
+}
+{
+  "return": {}
+}
+{
+  "drive0": [
+    {
+      "status": "disabled",
+      "count": 458752,
+      "name": "bitmapD",
+      "granularity": 65536
+    },
+    {
+      "status": "disabled",
+      "count": 393216,
+      "name": "bitmapC",
+      "granularity": 65536
+    },
+    {
+      "status": "disabled",
+      "count": 262144,
+      "name": "bitmapB",
+      "granularity": 65536
+    },
+    {
+      "status": "disabled",
+      "count": 458752,
+      "name": "bitmapA",
+      "granularity": 65536
+    }
+  ]
+}
+{"execute": "x-debug-block-dirty-bitmap-sha256", "arguments": {"name": "bitmapA", "node": "drive0"}}
+{"return": {"sha256": "7abe3d7e3c794cfaf9b08bc9ce599192c96a2206f07b42d9997ff78fdd7af744"}}
+{"execute": "x-debug-block-dirty-bitmap-sha256", "arguments": {"name": "bitmapD", "node": "drive0"}}
+{"return": {"sha256": "7abe3d7e3c794cfaf9b08bc9ce599192c96a2206f07b42d9997ff78fdd7af744"}}
diff --git a/tests/qemu-iotests/group b/tests/qemu-iotests/group
index 61a6d98ebd..a61f9e83d6 100644
--- a/tests/qemu-iotests/group
+++ b/tests/qemu-iotests/group
@@ -233,3 +233,4 @@
 233 auto quick
 234 auto quick migration
 235 auto quick
+236 auto quick
\ No newline at end of file
-- 
2.17.2


