Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:48:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0DA7D5805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 11:22:32 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 11:22:31 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AXMJBBRP6XYw+rlCXhi8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z8pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRthfVyJBDI2/?=
 =?us-ascii?q?YYUAAeUOMuREoIfyulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9CAHLxhAsE84AvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjNa/RW2Tf76IPVbx4hp/aMXLxtesfWy0kvDAXFjlKe?=
 =?us-ascii?q?qIH+JTOayPkCs2iB4Op8T+6gl2knqwRorzWp28wiiZHJi5oLxlzY9ih12ps5Kc?=
 =?us-ascii?q?C7RUJhf9KpHptduzuHO4Z0Ws8uXX1ktSIgxrEbt5O3YjIGxIkkyhPRcfCLbYuF?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oAJwBsic1mCXB1p5m2?=
 =?us-ascii?q?4OWyQxwuVYrk1w1EyA0Lkw1+JDGNle4e9SVRkSK5/G0/F9GcL1HAnGe4HNABy/?=
 =?us-ascii?q?T9C7RDs1Sdky69kJZUl7BpOllB+Jl36zDroI0raPA5c32qTb2Xf3OoB60XmQkO?=
 =?us-ascii?q?FrllQjX45DOHOrgoZ58A7cAZOPlF+W3e7+bKkZwWvB+XmOyUKIu0dXVhM2Vr/K?=
 =?us-ascii?q?CyMxfEzT+Pb+5kWKdLmpFvxzMBBHztGqMKZGatT1y15BQaGwa5zlf2utljLoVl?=
 =?us-ascii?q?6zzbSWYd+vIj1F0Q=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DgAwDg9hdchxHrdtBjHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBKYN8iHiLGYFgCCWZSxQYAxGEQIMWIjgSAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4jDII2BQIDGgEGglsBAQEBAgEBAiAjCikDAwECBgEBCAIYAgIiBAICAwFTB?=
 =?us-ascii?q?gEMCAEBAYMdAYF4CAEEjGubU4EviiaBC4szF4FAP4E4DIJfhQGDCIJXApBLkE4?=
 =?us-ascii?q?Jhw2DQIcHBhiCKodJEYdOLIkQkCiBXYF3MxoIGxU7gmwJi2SFDCMxgQcciwYHT?=
 =?us-ascii?q?4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0DgAwDg9hdchxHrdtBjHQEBBQEHBQGBZYExgTmBKYN8iHi?=
 =?us-ascii?q?LGYFgCCWZSxQYAxGEQIMWIjgSAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDG?=
 =?us-ascii?q?gEGglsBAQEBAgEBAiAjCikDAwECBgEBCAIYAgIiBAICAwFTBgEMCAEBAYMdAYF?=
 =?us-ascii?q?4CAEEjGubU4EviiaBC4szF4FAP4E4DIJfhQGDCIJXApBLkE4Jhw2DQIcHBhiCK?=
 =?us-ascii?q?odJEYdOLIkQkCiBXYF3MxoIGxU7gmwJi2SFDCMxgQcciwYHT4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="55524100"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 11:22:30 -0800
Received: from localhost ([::1]:48638 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYyTG-0007Nz-5n
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 14:22:30 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47266)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <jsnow@redhat.com>) id 1gYySi-0007Hu-Mt
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 14:21:57 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <jsnow@redhat.com>) id 1gYySh-0008Fm-OI
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 14:21:56 -0500
Received: from mx1.redhat.com ([209.132.183.28]:49562)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <jsnow@redhat.com>)
	id 1gYySa-00089x-GH; Mon, 17 Dec 2018 14:21:48 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 1A3A4811DC;
	Mon, 17 Dec 2018 19:21:47 +0000 (UTC)
Received: from [10.18.17.232] (dhcp-17-232.bos.redhat.com [10.18.17.232])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 43557600C9;
	Mon, 17 Dec 2018 19:21:46 +0000 (UTC)
To: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>
References: <20181214231512.5295-1-jsnow@redhat.com>
	<20181214231512.5295-7-jsnow@redhat.com>
	<0780ebaa-3e11-c197-85f9-9133dc227d65@virtuozzo.com>
	<de056aa7-d383-af0f-6059-44e008c1649e@virtuozzo.com>
From: John Snow <jsnow@redhat.com>
Openpgp: preference=signencrypt
Autocrypt: addr=jsnow@redhat.com; prefer-encrypt=mutual; keydata=
	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
Message-ID: <009ac77d-84c2-3123-f710-755a5bcf2452@redhat.com>
Date: Mon, 17 Dec 2018 14:21:45 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <de056aa7-d383-af0f-6059-44e008c1649e@virtuozzo.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Mon, 17 Dec 2018 19:21:47 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v3 6/7] iotests: allow pretty-print for
 qmp_log
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Markus Armbruster <armbru@redhat.com>,
	Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 12/17/18 11:37 AM, Vladimir Sementsov-Ogievskiy wrote:
> 17.12.2018 17:26, Vladimir Sementsov-Ogievskiy wrote:
>> 15.12.2018 2:15, John Snow wrote:
>>> If iotests have lines exceeding >998 characters long, git doesn't
>>> want to send it plaintext to the list. We can solve this by allowing
>>> the iotests to use pretty printed QMP output that we can match agains=
t
>>> instead.
>>>
>>> As a bonus, it's much nicer for human eyes, too.
>>>
>>> Note that this changes the sort order for "command" and "arguments",
>>> so I restrict this reordering to occur only when the indent is specif=
ied.
>>> ---
>>> =C2=A0 tests/qemu-iotests/iotests.py | 17 +++++++++++++----
>>> =C2=A0 1 file changed, 13 insertions(+), 4 deletions(-)
>>>
>>> diff --git a/tests/qemu-iotests/iotests.py b/tests/qemu-iotests/iotes=
ts.py
>>> index 9595429fea..ab5823c011 100644
>>> --- a/tests/qemu-iotests/iotests.py
>>> +++ b/tests/qemu-iotests/iotests.py
>>> @@ -447,12 +447,21 @@ class VM(qtest.QEMUQtestMachine):
>>> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0 result.append(filter_qmp_event(ev))
>>> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 return result
>>> -=C2=A0=C2=A0=C2=A0 def qmp_log(self, cmd, filters=3D[filter_testfile=
s], **kwargs):
>>> -=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 logmsg =3D '{"execute": "=
%s", "arguments": %s}' % \
>>> -=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (=
cmd, json.dumps(kwargs, sort_keys=3DTrue))
>>> +=C2=A0=C2=A0=C2=A0 def qmp_log(self, cmd, indent=3DNone, filters=3D[=
filter_testfiles], **kwargs):
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 # Python < 3.4 needs to k=
now not to add whitespace when pretty-printing:
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 separators =3D (',', ': '=
) if indent is not None else (',', ': ')
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if indent is not None:
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 f=
ullcmd =3D { "execute": cmd,
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 "ar=
guments": kwargs }
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 l=
ogmsg =3D json.dumps(fullcmd, indent=3Dindent, separators=3Dseparators,
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 sort_keys=3DTrue)
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 else:
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 l=
ogmsg =3D '{"execute": "%s", "arguments": %s}' % \
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0 (cmd, json.dumps(kwargs, sort_keys=3DTrue))
>>
>> definitely overlogic on None/is not None, but anyway, ',' separator le=
ads to less
>> beautiful output. So, I think it is better to do just "re.sub(r'\s+\n'=
, '\n', longmsg)"
>> on final message, here or in log(), or in both.

I can't use "if indent" because 0 is a valid indentation, and I decided
to keep the "correct" order for execute/arguments if no indentation is
requested.

How is ',' less beautiful? When pretty-printing output ',' only occurs
at the end of a line anyway. I don't understand the critique.

>=20
> find myself composing counter-proposal patch, will send soon...
>=20
>>
>>> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 log(logmsg, fi=
lters)
>>> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 result =3D sel=
f.qmp(cmd, **kwargs)
>>> -=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 log(json.dumps(result, so=
rt_keys=3DTrue), filters)
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 log(json.dumps(result, in=
dent=3Dindent, separators=3Dseparators,
>>> +=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 sort_keys=
=3DTrue), filters)
>>> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 return result
>>> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 def run_job(self, job, auto_finalize=3D=
True, auto_dismiss=3DFalse):
>>>
>>
>>
>=20
>=20

