Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:30:54 -0000
Received: from icoremail.net (unknown [209.85.214.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDHHyanyfJbhLK5AQ--.55554S3;
	Mon, 19 Nov 2018 22:33:29 +0800 (CST)
Received: from mail-pl1-f179.google.com (unknown [209.85.214.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnzkqiyfJbbe9YAA--.4525S3;
	Mon, 19 Nov 2018 22:33:07 +0800 (CST)
Received: by mail-pl1-f179.google.com with SMTP id e5so4655593plb.5
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 06:33:07 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :message-id:subject:from:to:cc:date:in-reply-to:references
         :mime-version:content-transfer-encoding:sender:precedence:list-id;
        bh=CQ9yLFogkk83H8XAAfVPU8/IpTtVnd0U7XIxq8qeMn4=;
        b=SPIsvwDlnYfMnrBXCcldFr5fgcl60skt3WncRp1ZuOxQCzKcexMFyOCP6E8z2mD5rJ
         WdyBos0+ZZ7+xpAABUToE5Th1CRUl2ZnvfJVJ1sni/fgG7AZ5ooaB678OCxAHNA+COM1
         ZS8ehqLzaX/pGYPWI3tM84a2q3/XNl6fQLjB2WFwRxdrXw3995+r7QmbBLGWJ91gd/xA
         V7Kr9ZyrRtsR9dHSzRNvq9LpOX3XfDUFR7Eq04hzgWmBMOsq6moAEj3pAo9tI3y4mUCI
         RRFrEtl2c8UUeqpPdvh9W10WWLFqlAyqvc32/M+ucKDebzK0aumi5Nx6cXEezs+PJC8Y
         /Yqg==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJFfma/mmSeiImVsMwraTfMkoR0n0ynVarQ6eqpCEVqoP5HQi9U
	72krfVol0ctbCk2pstywsvc5Hb5iUbthK3PAZSboVUPkFHMd+KQ=
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr23234002plp.9.1542637986682;
        Mon, 19 Nov 2018 06:33:06 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2735998pju;
        Mon, 19 Nov 2018 06:33:05 -0800 (PST)
X-Google-Smtp-Source: AJdET5d22l5y0SWSDg9/Xdz+ajm8CMlZXOg6qHceqxJUlBSo6poEibU4uhTmabe0jgojHcrlbwnC
X-Received: by 2002:a62:4681:: with SMTP id o1-v6mr23443029pfi.172.1542637985278;
        Mon, 19 Nov 2018 06:33:05 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542637985; cv=none;
        d=google.com; s=arc-20160816;
        b=T55utQK5Jp++xxl269n9w2Fpd56Bex7NZdAn0Odx2r/LRoJ8bHLdEQPsfW7tjtMwP+
         EtFbfVp0efhQpLvkfYU2uHQtiWZhfi15ka3N2n+/qcBIEh7DmErt5LKy4wK3VTZ4L4la
         O9zgFKBpX/RTr4d6jr2b6SpAPDI18LDhDhkPYUuGZdhcgs0yX+COASn0ejNDlw7NbmOY
         I7KevcTkMKN9Jrdy5N642CPt0midD5W85cicRC77Eje1cMlKosRz+UkjUGJ3vKRkKtZe
         FrR2wOQrT/EhaHzejosNmqGy5CKo5PRed3hMrL7QQggSpR9gOZIuH/DcjqjiLizlDZr+
         73lg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:date:cc:to:from:subject:message-id;
        bh=CQ9yLFogkk83H8XAAfVPU8/IpTtVnd0U7XIxq8qeMn4=;
        b=Nq1ebvR5rogc4y8KiilH4e6QQJCvFSTZ0SqV8WbyzH7fUR3+w3tE+nXOtsFs/OlpYt
         07T+B3p5t1QnDfVuqtagoyKp7ZQ3B1Sjk63so+58y5JWrFWa9VtfaKx99rsOYWXFlIKJ
         QZpCO0YylZuUEyvNATMCofH4ohSMYcue+UOOJlySmlJx5FBHMjjGmMNjCdmBR8t1/IlF
         UM15F07uBkfyKKMr6p9KC2J9af4rZT9tMmKcrGlYQ2YIY7y2ay4K+h7znIWA9kpEqUAY
         C5tls5PY1eL5EpeaV5pe/jRadQibAHHebo8P8q6loTBv8cCyX5xf/UGAXEtEml2uhXGm
         YwTA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m1si35136182pgm.194.2018.11.19.06.32.39;
        Mon, 19 Nov 2018 06:33:05 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729386AbeKTA4T (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Mon, 19 Nov 2018 19:56:19 -0500
Received: from metis.ext.pengutronix.de ([85.220.165.71]:38715 "EHLO
        metis.ext.pengutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726235AbeKTA4T (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 19 Nov 2018 19:56:19 -0500
Received: from lupine.hi.pengutronix.de ([2001:67c:670:100:3ad5:47ff:feaf:1a17] helo=lupine)
        by metis.ext.pengutronix.de with esmtp (Exim 4.89)
        (envelope-from <p.zabel@pengutronix.de>)
        id 1gOkbG-0005MV-HB; Mon, 19 Nov 2018 15:32:30 +0100
Message-ID: <1542637950.5139.12.camel@pengutronix.de>
Subject: Re: [PATCH 1/1] reset: imx7: Add support for i.MX8MQ
From: Philipp Zabel <p.zabel@pengutronix.de>
To: Andrey Smirnov <andrew.smirnov@gmail.com>,
        linux-kernel@vger.kernel.org
Cc: Fabio Estevam <fabio.estevam@nxp.com>, cphealy@gmail.com,
        l.stach@pengutronix.de, Leonard Crestez <leonard.crestez@nxp.com>,
        "A.s. Dong" <aisheng.dong@nxp.com>,
        Richard Zhu <hongxing.zhu@nxp.com>, linux-imx@nxp.com,
        linux-arm-kernel@lists.infradead.org
Date: Mon, 19 Nov 2018 15:32:30 +0100
In-Reply-To: <20181117181131.9330-2-andrew.smirnov@gmail.com>
References: <20181117181131.9330-1-andrew.smirnov@gmail.com>
         <20181117181131.9330-2-andrew.smirnov@gmail.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.22.6-1+deb9u1 
Mime-Version: 1.0
Content-Transfer-Encoding: 8bit
X-SA-Exim-Connect-IP: 2001:67c:670:100:3ad5:47ff:feaf:1a17
X-SA-Exim-Mail-From: p.zabel@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de); SAEximRunCond expanded to false
X-PTX-Original-Recipient: linux-kernel@vger.kernel.org
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnzkqiyfJbbe9YAA--.4525S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvAXoW3KFy8GrykGr1kAr4rtF47urg_yoW8JryrKo
	W8ZF4xGF18Xa45X34Y9wnrXa9xuwsFq3y8JFWxZFWkKr1kA34UJr1DAw1xKay3trWqkF4r
	G34UAFWUtFy3Gay8n29KB7ZKAUJUUUUU529EdanIXcx71UUUUU7v73VFW2AGmfu7jjvjm3
	AaLaJ3UjIYCTnIWjp_UUUOn7k0a2IF6w4xM7kC6x804xWl14x267AKxVWUJVW8JwAFIxvE
	14AKwVWUJVWUGwA2ocxC64kIII0Yj41l84x0c7CEw4AK67xGY2AK021l84ACjcxK6xIIjx
	v20xvE14v26F1j6w1UM28EF7xvwVC0I7IYx2IY6xkF7I0E14v26F4j6r4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	JVWUGwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_Xrylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26ryj6F1UMx
	vI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCY
	IxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExV
	AvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AK
	xVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrx
	kI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7I
	U53wI3UUUUU==

Hi Andrey,

thank you for the patch.

In general, sharing the lookup table with i.MX7 is fine iff it is a
strict superset. But I don't think that is the case (see below).
Even so, this will change if there ever is another i.MX7 or i.MX8M
variant that is also a superset of i.MX7, but not a superset of
i.MX8M.Â Also, just listing all resets in order of appearance would make
review a bit easier.

I don't like increasing IMX7_RESET_NUM though, i.MX8M should have its
own nr_resets.

On Sat, 2018-11-17 at 10:11 -0800, Andrey Smirnov wrote:
> SRC IP block used in i.MX8MQ is a superset of what is found in i.MX7D,

Is this true, though?

i.MX7 has SRC_ERCR at offset 0x14 and HSICPHY_RCR at offset 0x1c.
According to documentation, i.MX8M is missing those at least.

> so add all of the definitions necessary to support both.
>
> Cc: p.zabel@pengutronix.de
> Cc: Fabio Estevam <fabio.estevam@nxp.com>
> Cc: cphealy@gmail.com
> Cc: l.stach@pengutronix.de
> Cc: Leonard Crestez <leonard.crestez@nxp.com>
> Cc: "A.s. Dong" <aisheng.dong@nxp.com>
> Cc: Richard Zhu <hongxing.zhu@nxp.com>
> Cc: linux-imx@nxp.com
> Cc: linux-arm-kernel@lists.infradead.org
> Cc: linux-kernel@vger.kernel.org
> Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
> ---
>  drivers/reset/Kconfig                   |  2 +-
>  drivers/reset/reset-imx7.c              | 66 ++++++++++++++++++++++++-
>  include/dt-bindings/reset/imx7-reset.h  | 15 +++++-
>  include/dt-bindings/reset/imx8m-reset.h | 47 ++++++++++++++++++
>  4 files changed, 127 insertions(+), 3 deletions(-)
>  create mode 100644 include/dt-bindings/reset/imx8m-reset.h
> 
> diff --git a/drivers/reset/Kconfig b/drivers/reset/Kconfig
> index c21da9fe51ec..4909aab7401b 100644
> --- a/drivers/reset/Kconfig
> +++ b/drivers/reset/Kconfig
> @@ -50,7 +50,7 @@ config RESET_HSDK
>  config RESET_IMX7
>  	bool "i.MX7 Reset Driver" if COMPILE_TEST
>  	depends on HAS_IOMEM
> -	default SOC_IMX7D
> +	default SOC_IMX7D || SOC_IMX8MQ
>  	select MFD_SYSCON
>  	help
>  	  This enables the reset controller driver for i.MX7 SoCs.
> diff --git a/drivers/reset/reset-imx7.c b/drivers/reset/reset-imx7.c
> index 77911fa8f31d..dffad618f805 100644
> --- a/drivers/reset/reset-imx7.c
> +++ b/drivers/reset/reset-imx7.c
> @@ -21,14 +21,16 @@
>  #include <linux/reset-controller.h>
>  #include <linux/regmap.h>
>  #include <dt-bindings/reset/imx7-reset.h>
> +#include <dt-bindings/reset/imx8m-reset.h>
>  
>  struct imx7_src {
>  	struct reset_controller_dev rcdev;
>  	struct regmap *regmap;
>  };
>  
> -enum imx7_src_registers {
> +enum imx_src_registers {
>  	SRC_A7RCR0		= 0x0004,
> +	SRC_A53RCR0		= 0x0004,
>  	SRC_M4RCR		= 0x000c,
>  	SRC_ERCR		= 0x0014,
>  	SRC_HSICPHY_RCR		= 0x001c,
> @@ -36,7 +38,9 @@ enum imx7_src_registers {
>  	SRC_USBOPHY2_RCR	= 0x0024,
>  	SRC_MIPIPHY_RCR		= 0x0028,
>  	SRC_PCIEPHY_RCR		= 0x002c,

These aren't complete. I see at least SRC_HDMI_RCR, SRC_DISP_RCR,
SRC_GPU_RCR, and SRC_VPU_RCR missing.

> +	SRC_PCIE2PHY_RCR	= 0x0048,

And SRC_MIPIPHY1_RCR, SRC_MIPIPHY2_RCR. Please check the reference
manual and complete the list of registers that contain resets.

>  	SRC_DDRC_RCR		= 0x1000,
> +

Whitespace.

>  };
>  
>  struct imx7_src_signal {
> @@ -67,11 +71,67 @@ static const struct imx7_src_signal imx7_src_signals[IMX7_RESET_NUM] = {
>  	[IMX7_RESET_PCIEPHY]		= { SRC_PCIEPHY_RCR, BIT(2) | BIT(1) },
>  	[IMX7_RESET_PCIEPHY_PERST]	= { SRC_PCIEPHY_RCR, BIT(3) },
>  	[IMX7_RESET_PCIE_CTRL_APPS_EN]	= { SRC_PCIEPHY_RCR, BIT(6) },
> +	[IMX7_RESET_PCIE_CTRL_APPS_CLK_REQ] = { SRC_PCIEPHY_RCR, BIT(4) },

Now I feel like CTRL_APPS_EN shouldn't have been added here either. But
while there I wasn't really sure about whether that is actually a valid
reset, I'm pretty sure that this one isn't.
I think that i.MX8M either needs a clock driver to control this bit and
the corresponding IOMUXC GPR bit to enable the PCIe refclk, or the PCIe
driver has to access this register via syscon. I really don't want to
see a clock enable signal described in the device tree as a reset.

>  	[IMX7_RESET_PCIE_CTRL_APPS_TURNOFF] = { SRC_PCIEPHY_RCR, BIT(11) },
>  	[IMX7_RESET_DDRC_PRST]		= { SRC_DDRC_RCR, BIT(0) },
>  	[IMX7_RESET_DDRC_CORE_RST]	= { SRC_DDRC_RCR, BIT(1) },
> +
> +	[IMX8M_RESET_A53_CORE_POR_RESET2] = { SRC_A53RCR0, BIT(2) },
> +	[IMX8M_RESET_A53_CORE_POR_RESET3] = { SRC_A53RCR0, BIT(3) },
> +	[IMX8M_RESET_A53_CORE_RESET2]     = { SRC_A53RCR0, BIT(6) },
> +	[IMX8M_RESET_A53_CORE_RESET3]     = { SRC_A53RCR0, BIT(7) },

Missing IMX8M_RESET_A53_DBG_RESET2,3.

> +	[IMX8M_RESET_A53_ETM_RESET2]      = { SRC_A53RCR0, BIT(14) },
> +	[IMX8M_RESET_A53_ETM_RESET3]      = { SRC_A53RCR0, BIT(15) },

Missing some reset registers here.

> +	[IMX8M_RESET_PCIE2PHY]		= { SRC_PCIEPHY_RCR, BIT(2) | BIT(1) },
> +	[IMX8M_RESET_PCIE2PHY_PERST]      = { SRC_PCIE2PHY_RCR, BIT(3) },
> +	[IMX8M_RESET_PCIE2_CTRL_APPS_EN]  = { SRC_PCIE2PHY_RCR, BIT(6) },
> +	[IMX8M_RESET_PCIE2_CTRL_APPS_CLK_REQ] = { SRC_PCIE2PHY_RCR, BIT(4) },

See above.

> +	[IMX8M_RESET_PCIE2_CTRL_APPS_TURNOFF] = { SRC_PCIE2PHY_RCR, BIT(11) },

Missing some reset registers here.

>  };
>  
> +static inline void imx7_src_check_definitions(void)
> +{
> +	BUILD_BUG_ON(IMX8M_RESET_A53_CORE_POR_RESET0 !=
> +		     IMX7_RESET_A7_CORE_POR_RESET0);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_CORE_POR_RESET1 !=
> +		     IMX7_RESET_A7_CORE_POR_RESET1);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_CORE_RESET0 !=
> +		     IMX7_RESET_A7_CORE_RESET0);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_CORE_RESET1 !=
> +		     IMX7_RESET_A7_CORE_RESET1);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_DBG_RESET0 !=
> +		     IMX7_RESET_A7_DBG_RESET0);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_DBG_RESET1 !=
> +		     IMX7_RESET_A7_DBG_RESET1);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_ETM_RESET0 !=
> +		     IMX7_RESET_A7_ETM_RESET0);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_ETM_RESET1 !=
> +		     IMX7_RESET_A7_ETM_RESET1);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_SOC_DBG_RESET !=
> +		     IMX7_RESET_A7_SOC_DBG_RESET);
> +	BUILD_BUG_ON(IMX8M_RESET_A53_L2RESET != IMX7_RESET_A7_L2RESET);
> +	BUILD_BUG_ON(IMX8M_RESET_SW_M4C_RST != IMX7_RESET_SW_M4C_RST);
> +	BUILD_BUG_ON(IMX8M_RESET_SW_M4P_RST != IMX7_RESET_SW_M4P_RST);
> +	BUILD_BUG_ON(IMX8M_RESET_EIM_RST != IMX7_RESET_EIM_RST);
> +	BUILD_BUG_ON(IMX8M_RESET_HSICPHY_PORT_RST !=
> +		     IMX7_RESET_HSICPHY_PORT_RST);
> +	BUILD_BUG_ON(IMX8M_RESET_USBPHY1_POR != IMX7_RESET_USBPHY1_POR);
> +	BUILD_BUG_ON(IMX8M_RESET_USBPHY1_PORT_RST !=
> +		     IMX7_RESET_USBPHY1_PORT_RST);
> +	BUILD_BUG_ON(IMX8M_RESET_USBPHY2_POR != IMX7_RESET_USBPHY2_POR);
> +	BUILD_BUG_ON(IMX8M_RESET_USBPHY2_PORT_RST !=
> +		     IMX7_RESET_USBPHY2_PORT_RST);
> +	BUILD_BUG_ON(IMX8M_RESET_MIPI_PHY_MRST != IMX7_RESET_MIPI_PHY_MRST);
> +	BUILD_BUG_ON(IMX8M_RESET_MIPI_PHY_SRST != IMX7_RESET_MIPI_PHY_SRST);
> +	BUILD_BUG_ON(IMX8M_RESET_PCIEPHY != IMX7_RESET_PCIEPHY);
> +	BUILD_BUG_ON(IMX8M_RESET_PCIE_CTRL_APPS_EN !=
> +		     IMX7_RESET_PCIE_CTRL_APPS_EN);
> +	BUILD_BUG_ON(IMX8M_RESET_PCIE_CTRL_APPS_TURNOFF !=
> +		     IMX7_RESET_PCIE_CTRL_APPS_TURNOFF);
> +	BUILD_BUG_ON(IMX8M_RESET_DDRC_PRST != IMX7_RESET_DDRC_PRST);
> +	BUILD_BUG_ON(IMX8M_RESET_DDRC_CORE_RST != IMX7_RESET_DDRC_CORE_RST);
> +}

This won't be necessary with a separate lookup table.

>  static struct imx7_src *to_imx7_src(struct reset_controller_dev *rcdev)
>  {
>  	return container_of(rcdev, struct imx7_src, rcdev);
> @@ -85,6 +145,7 @@ static int imx7_reset_set(struct reset_controller_dev *rcdev,
>  	unsigned int value = assert ? signal->bit : 0;
>  
>  	switch (id) {
> +	case IMX8M_RESET_PCIE2PHY: /* FALLTHROUGH */

I'd prefer lowercase /* fallthrough */.

>  	case IMX7_RESET_PCIEPHY:
>  		/*
>  		 * wait for more than 10us to release phy g_rst and
> @@ -94,6 +155,7 @@ static int imx7_reset_set(struct reset_controller_dev *rcdev,
>  			udelay(10);
>  		break;
>  
> +	case IMX8M_RESET_PCIE2_CTRL_APPS_EN: /* FALLTHROUGH */

And here.

>  	case IMX7_RESET_PCIE_CTRL_APPS_EN:
>  		value = (assert) ? 0 : signal->bit;
>  		break;
> @@ -126,6 +188,8 @@ static int imx7_reset_probe(struct platform_device *pdev)
>  	struct device *dev = &pdev->dev;
>  	struct regmap_config config = { .name = "src" };
>  
> +	imx7_src_check_definitions();
> +
>  	imx7src = devm_kzalloc(dev, sizeof(*imx7src), GFP_KERNEL);
>  	if (!imx7src)
>  		return -ENOMEM;
> diff --git a/include/dt-bindings/reset/imx7-reset.h b/include/dt-bindings/reset/imx7-reset.h
> index 31b3f87dde9a..8fefd694d481 100644
> --- a/include/dt-bindings/reset/imx7-reset.h
> +++ b/include/dt-bindings/reset/imx7-reset.h
> @@ -57,8 +57,21 @@
>  #define IMX7_RESET_DDRC_CORE_RST	24
>  
>  #define IMX7_RESET_PCIE_CTRL_APPS_TURNOFF 25
> +#define IMX7_RESET_PCIE_CTRL_APPS_CLK_REQ 26

See above.

> -#define IMX7_RESET_NUM			26

Please leave this at 26.

> +#define	IMX8M_RESET_A53_CORE_POR_RESET2	27
> +#define IMX8M_RESET_A53_CORE_POR_RESET3	28
> +#define IMX8M_RESET_A53_CORE_RESET2	29
> +#define	IMX8M_RESET_A53_CORE_RESET3	30
> +#define IMX8M_RESET_A53_ETM_RESET2	31
> +#define IMX8M_RESET_A53_ETM_RESET3	32
> +#define IMX8M_RESET_PCIE2PHY		33
> +#define IMX8M_RESET_PCIE2PHY_PERST	34
> +#define IMX8M_RESET_PCIE2_CTRL_APPS_EN	35
> +#define IMX8M_RESET_PCIE2_CTRL_APPS_CLK_REQ 36

See above.

> +#define IMX8M_RESET_PCIE2_CTRL_APPS_TURNOFF 37

Move these into imx8m-reset.h

> +
> +#define IMX7_RESET_NUM			38

And add a separate IMX8M_RESET_NUM.

> 
>  #endif
>  
> diff --git a/include/dt-bindings/reset/imx8m-reset.h b/include/dt-bindings/reset/imx8m-reset.h
> new file mode 100644
> index 000000000000..8fa840354723
> --- /dev/null
> +++ b/include/dt-bindings/reset/imx8m-reset.h
> @@ -0,0 +1,47 @@
> +/* SPDX-License-Identifier: GPL-2.0 */
> +/*
> + * Copyright (C) 2018 Zodiac Inflight Innovations
> + *
> + * Author: Andrey Smirnov <andrew.smirnov@gmail.com>
> + */
> +
> +#ifndef DT_BINDING_RESET_IMX8M_H
> +#define DT_BINDING_RESET_IMX8M_H
> +
> +#include "imx7-reset.h"
> +
> +#define IMX8M_RESET_A53_CORE_POR_RESET0 IMX7_RESET_A7_CORE_POR_RESET0
> +#define IMX8M_RESET_A53_CORE_POR_RESET1 IMX7_RESET_A7_CORE_POR_RESET1
> +
> +#define IMX8M_RESET_A53_CORE_RESET0     IMX7_RESET_A7_CORE_RESET0
> +#define IMX8M_RESET_A53_CORE_RESET1     IMX7_RESET_A7_CORE_RESET1
> +
> +#define IMX8M_RESET_A53_DBG_RESET0	IMX7_RESET_A7_DBG_RESET0
> +#define IMX8M_RESET_A53_DBG_RESET1	IMX7_RESET_A7_DBG_RESET1
> +
> +#define IMX8M_RESET_A53_ETM_RESET0	IMX7_RESET_A7_ETM_RESET0
> +#define IMX8M_RESET_A53_ETM_RESET1	IMX7_RESET_A7_ETM_RESET1
> +
> +#define IMX8M_RESET_A53_SOC_DBG_RESET   IMX7_RESET_A7_SOC_DBG_RESET
> +#define IMX8M_RESET_A53_L2RESET         IMX7_RESET_A7_L2RESET
> +#define IMX8M_RESET_SW_M4C_RST          IMX7_RESET_SW_M4C_RST
> +#define IMX8M_RESET_SW_M4P_RST          IMX7_RESET_SW_M4P_RST

> +#define IMX8M_RESET_EIM_RST             IMX7_RESET_EIM_RST
> +#define IMX8M_RESET_HSICPHY_PORT_RST    IMX7_RESET_HSICPHY_PORT_RST

These two don't exist according to the reference manual.

> +#define IMX8M_RESET_USBPHY1_POR         IMX7_RESET_USBPHY1_POR
> +#define IMX8M_RESET_USBPHY1_PORT_RST    IMX7_RESET_USBPHY1_PORT_RST

These two don't seem to exist either. I only see a single OTG1_PHY_RESET
bit in that register.

> +#define IMX8M_RESET_USBPHY2_POR         IMX7_RESET_USBPHY2_POR
> +#define IMX8M_RESET_USBPHY2_PORT_RST    IMX7_RESET_USBPHY2_PORT_RST

Same here.

> +#define IMX8M_RESET_MIPI_PHY_MRST       IMX7_RESET_MIPI_PHY_MRST
> +#define IMX8M_RESET_MIPI_PHY_SRST       IMX7_RESET_MIPI_PHY_SRST

These don't exist either. The MIPIPHY_RCR register instead has 5
different _RESET_N bits.

> +#define IMX8M_RESET_PCIEPHY             IMX7_RESET_PCIEPHY
> +#define IMX8M_RESET_PCIEPHY_PERST	IMX7_RESET_PCIEPHY_PERST
> +#define IMX8M_RESET_PCIE_CTRL_APPS_EN   IMX7_RESET_PCIE_CTRL_APPS_EN
> +#define IMX8M_RESET_DDRC_PRST           IMX7_RESET_DDRC_PRST
> +#define IMX8M_RESET_DDRC_CORE_RST       IMX7_RESET_DDRC_CORE_RST
> +
> +#define IMX8M_RESET_PCIE_CTRL_APPS_TURNOFF IMX7_RESET_PCIE_CTRL_APPS_TURNOFF
> +#define IMX8M_RESET_PCIE_CTRL_APPS_CLK_REQ IMX7_RESET_PCIE_CTRL_APPS_CLK_REQ
> +
> +#endif


regards
Philipp
