Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:32:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C4DE758037D;
	Thu, 22 Nov 2018 23:46:45 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga006-1.jf.intel.com with ESMTP; 22 Nov 2018 23:46:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A699dGRBzNgnnSJ5ppsMWUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/p8qwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KODE38G7VisJ+gqFVrg+/qRNj2I7UeIOYOeFifq/BZ94WWXZNUtpTWiFHH4iy?=
 =?us-ascii?q?b5EPD+0EPetAtYf9p1oOrR+/BQm0HOPk1zxHiWXt0qIk1+QqDAbL3BQgH9IPtH?=
 =?us-ascii?q?TUrc31NL8IXeG01qbH1ivMb/dN1Dfy7YjHaBEhofWWUb1sdsrRzFAiGgXYhVuT?=
 =?us-ascii?q?sYzoJy2Z2vgJvmSB8uZtW/yjh3Q6pwxyvjSj3MYhh4vRio4L1lzJ8T91zYU1KN?=
 =?us-ascii?q?GiVUJ2YNypHIFNuyyeN4Z7RN4pTXtytyYg0LIGvIa2fCgUx5QjwB7Sc+KHc4eW?=
 =?us-ascii?q?7RL5TuqRIil3hGhjeL2hgxa+60+gyvfzVsWs0VZKqDRKksXUu3wTyxDe7tKLRu?=
 =?us-ascii?q?Zz80u/wzqDygPe5v1eLU01l6fXM5shzaQxlpoXv0TDBCj2mEDuga+Sd0Uk/PWo?=
 =?us-ascii?q?6uv+brXluJCcLYl0hR/6Mqg3ncy+D+I4PRYUX2WA5+S826Ps/VfjTLVJkPI2iK?=
 =?us-ascii?q?/Zv47eJcgBoa65GQBV3p456xmjFzemzMgYnX4fIVJBeRKHjJbmN0vBIfDlFvq/?=
 =?us-ascii?q?h1WskDF2x/HJJLHhA5PNLmTdn7flZ7py90lcyA8rx9BF+51UEq0BIO70WkLptN?=
 =?us-ascii?q?zXFB45MxCuzObgEtl91p4eVniJAq+WK67StV6I5uQyI+iDfoMVuTD9K+Q76P7q?=
 =?us-ascii?q?l3M2hVgdfayx15sNdH+4BuhmI1meYXf0gNcBFnkFshA9TOztjl2CVzlTam22X6?=
 =?us-ascii?q?I94DE7FY2nAZ3CRoCrnLyOwiO7EodKaWBBD1CGCW3oeJmcW/cQdCKSJddsnSYf?=
 =?us-ascii?q?VbihTI8h1guitBXgxLplNefU/iwYtZT+1Nl6/eHTlBcy9SBqAMSZyW2CU2Z0nm?=
 =?us-ascii?q?YQTT8swK9/uVB9ykuE0aVggPxXD9pT6+lNUgc7L5HcyeN6Bsv2WgLAeNeJVVmn?=
 =?us-ascii?q?Ts+nATE3UtI+3dsOb1xhFNWlixDJxzCqDKMNl7yXGJw09brR0GXrKMZj1XnKzq?=
 =?us-ascii?q?khgEMgQstUK2KmgKlz9wzQB47Ml0WUjKKqdaUa3C7Q+2aP12uOvEdEUAFuVaXJ?=
 =?us-ascii?q?R2wQZkzTrd7h/EPNU6euCag7MgtG0cONN7FFasP3gllcRPfsItLeY3mvlGe2Hh?=
 =?us-ascii?q?uIwrKMbIz3e2QSxindCU4EkxwN8naCLwQxGiCho2fGBjx0CV3ve1/s8fV5qH6j?=
 =?us-ascii?q?Uk80zgSKb0p917q1+h8Zn+CcR+kU3rIevCchqjN0HFmm0tLSCtqAoRdhfapGbd?=
 =?us-ascii?q?M85ldHyXzWtwhnMpO8KKBig0YUcx5rsEP2yxV3FoJAnNAwo3Mu0gVzJryX0VNb?=
 =?us-ascii?q?ezyDwJD/J6fYKm/x/BCoda7bwVXe0NeQ+qcS5/U0sVTjvAe1FkU893VrycVa03?=
 =?us-ascii?q?yZ5p/SFgodTYrxUlor9xh9v7zbYjQ965nI2nF2MKi0siXN29QmBOY+zhagftFf?=
 =?us-ascii?q?ML6LFQPoEs0aAdSuJ/Ium1Szch0EO+VS/rYuP8y6b/uGxLKrPOF4kTK8jGRI/J?=
 =?us-ascii?q?py0liR+Cp7UOLI2YgKw+uZ3geeSzjzllOhvd3ploBeYjESGHGyySzlBI5Xe61z?=
 =?us-ascii?q?cpwHCWaoI82r2Np+g4ThVGJf9F6mH1kGwtOmeQKOb1zh2g1dzUQWoX29lSq41T?=
 =?us-ascii?q?B0iCwprqyE0SzKwuTicgcHO2FRSGlji1fsPZa7j9QAUEe0aAgpkQOv5VzmyKhD?=
 =?us-ascii?q?uKR/M27TTF9KfyfsNWFiUaiwtr2Yb85U8pwosiZXUOW6YV+ETL7wuB8a0yLlH2?=
 =?us-ascii?q?tDyzE3bTCqupPlnxNkjGKRNmp8rH3cecto3xfQ+MTcReJN3joBXCR5iSPYBl+m?=
 =?us-ascii?q?M9mr/NWUkYzOsuS/V2KnS51SfjPnzYKGtCun+2JqBQezkOy0mt3iCQI6yzP018?=
 =?us-ascii?q?F2VSXUqxbxeorr2L67Me59fkloGUXz68x1GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3WYw8thZMO1bnkY2y0j9MBKFL?=
 =?us-ascii?q?mb7KZfkiRruFq4ohncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zFZ+ndekDL2YowBTQnD5eoo5HS9r78VyK1bM0Hz16oH5d9?=
 =?us-ascii?q?jcd9MTthuIkxjei+hZMo4+lv0PhSB/I2LyoWUly/InjRxpxZy1p5KIK2Jp/KKk?=
 =?us-ascii?q?GBJYMiD1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS6EV8oHLKDZ+rLGubJGUDwdVhWRmdJ1FfgAYOUzUhhZM5EgGqxMr8?=
 =?us-ascii?q?cEZ2/DwR51j4qgdSxeJsLRXwTmDfpAKwYDcuVJefNAZW7h1F50rNMc2e6f9zHz?=
 =?us-ascii?q?hF/pK7qgyBMHebZwNODWEGQUGEA1HjPr+z5djP6eSYB+y+L+fQbrWKs+BRS/CI?=
 =?us-ascii?q?xZe32It84zmMLtmPPmVlD/Aj2kpMQ3F5G8famzUOUSAXlDjNb8mUpBii4C13s9?=
 =?us-ascii?q?u//e/vWALu44uPFrRTPc9u+xCwnaeMKeqQiDxlJjZf05MG3WXIx6QH3F4OlyFu?=
 =?us-ascii?q?cCGgHq4dtSHWVqLfhK9WAwQfayNyL8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDT38H3YKa8RadMg+lOqxKwuSiUE0n4MzSH?=
 =?us-ascii?q?ljnpUQ2vMO5WgCGaOhxepJ+ychJ3BWf/S9LmbwWxMMVrgj0u3b00mnTKOHYcMD?=
 =?us-ascii?q?dmdUNNq7yQ7SVAjfR+G2xO9HxlLeafliad7unYLIsWsPRxDiR1keJa/Go1y79P?=
 =?us-ascii?q?4C5YQ/x1nXiaktk7v1ajuuCS0SFqW1xFrTMYqpiMuBBaOaTd94FYEUTN9h8JpT?=
 =?us-ascii?q?GICxUOpsN9TM/msa1U4tfKnaP3bjxF9oSHroMnG8HIJZffYzIaOh3zFWuMAQ?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAADer/dbh0O0hNFiHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N5g3uQG4INFIkIjh+BcywTAYhSIjQJDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDII2IoJkAQEBAQIBAQIgBBkBGx0BAwEBCQEBBQULDQICJgICAx4BAREBBQEcG?=
 =?us-ascii?q?QWDHIFpAQMNCAWbWjyLDXwWBQEXgncFhCwKGScNWoE3AgYSeYp+gVc/gRGDEoJ?=
 =?us-ascii?q?WhSyCVwKJGQqHO452LgcCghwEi2SDKxiRCI5NiVQwgSWCDTMaI1AxgjuCGwwXg?=
 =?us-ascii?q?0qKUz4zgQUBAYwiAQE?=
X-IPAS-Result: =?us-ascii?q?A0AcAADer/dbh0O0hNFiHgEGBwaBUQkLAYNrJ4N5g3uQG4I?=
 =?us-ascii?q?NFIkIjh+BcywTAYhSIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJkAQEBA?=
 =?us-ascii?q?QIBAQIgBBkBGx0BAwEBCQEBBQULDQICJgICAx4BAREBBQEcGQWDHIFpAQMNCAW?=
 =?us-ascii?q?bWjyLDXwWBQEXgncFhCwKGScNWoE3AgYSeYp+gVc/gRGDEoJWhSyCVwKJGQqHO?=
 =?us-ascii?q?452LgcCghwEi2SDKxiRCI5NiVQwgSWCDTMaI1AxgjuCGwwXg0qKUz4zgQUBAYw?=
 =?us-ascii?q?iAQE?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="41271746"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 23:46:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2502431AbeKWS3n (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 13:29:43 -0500
Received: from mail-oi1-f195.google.com ([209.85.167.195]:32954 "EHLO
        mail-oi1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2502420AbeKWS3n (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 13:29:43 -0500
Received: by mail-oi1-f195.google.com with SMTP id c206so9300477oib.0
        for <linux-kernel@vger.kernel.org>; Thu, 22 Nov 2018 23:46:40 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=PkwJzD5gIlc7X3+74iL+HcExhZPKip8StS+vQP/JJVY=;
        b=M4EcZXfVczOtrlbQF4QM53NPVXh8A8NTh4JwH6dXzu1RI12Fcjt0CLH87ZpGN9MhfD
         UrjI/xisnKBSAH+25XZtk1S9X8ZHJtCa5YJc0bNDDwKUF0zWP7fR3rrZGtPHPNHQyzVr
         OwC1nInD06c+0ezJPnQbZ7XYBE+Gufds5GKtILCqsDBmpxsk2/XhLZ45J5iiyRFw3/t5
         RGJILo0yzAHbGBuLB6yX1mwxotCfsJt2fHUQZq9Np07P3Q1vBWA8J17sRDQPoNd288FG
         7Gdy/1vZEgemd1donbZ83uMjZKR4+3EQDDF4C6atqacFrmhVbSowPGHyq2QtWMPLybCu
         cA7Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=PkwJzD5gIlc7X3+74iL+HcExhZPKip8StS+vQP/JJVY=;
        b=iKm1ucPXsWFZ5H7SeUdqgdcTJp4VhT9cTGrcwq7KiZdTHY6oizQrj+jT/rsVu+Nq6z
         4HaqXxl6FLvs/TnAfSNADWH2ZVxtuZbHGtU0yxoY81D+c9g6cRY1DliqwbtYFnksXwE0
         TnpD4OX+LaWypE69U7uEfTERWNdia3FZHDzDU7MtllCi97Ac403q3b25bfj4Uc7XlnF7
         U78Wahh+TbdIy65JXddzZLzooM/fFmFydFi5ymMZphmiGpZh1+kzIwdNhBCabRLbRQ8I
         o0FNI7vIl/yNUnzkSIV0ZjGbBrd7EyfE9rQkx7TRecClpiQmGLX24+fdNLfn+AoN3lFn
         xXJg==
X-Gm-Message-State: AGRZ1gLmmLUVbpzFKEGK13ahgeqtrBmorrw+xsynOAfZNEt/FXyntgS2
        fRU87fjp0mQa4KjKI+uJCy+20RHg1ZbNHvbvuSBI/AbZ
X-Google-Smtp-Source: AJdET5eReRsDstRSGD1fW1kvmFc14ySxjr/oAifHDYT+Ai9Zfz4pvxvoA+NOWz59ah0pO8H5eFvdJv9EW3aHwTwrQbA=
X-Received: by 2002:aca:c003:: with SMTP id q3-v6mr8070939oif.45.1542959199575;
 Thu, 22 Nov 2018 23:46:39 -0800 (PST)
MIME-Version: 1.0
References: <20181117130337.5856-1-tom@aussec.com> <20181117130337.5856-2-tom@aussec.com>
 <20181117130337.5856-3-tom@aussec.com>
In-Reply-To: <20181117130337.5856-3-tom@aussec.com>
From: Philipp Zabel <philipp.zabel@gmail.com>
Date: Fri, 23 Nov 2018 08:46:28 +0100
Message-ID: <CA+gwMcfQ5cUZPmAJ6Uhb0KQsmwjtoSdRJVnAzk9mwy=-M19M2Q@mail.gmail.com>
Subject: Re: [PATCH v8 2/4] pps: descriptor-based gpio, capture-clear addition
To: tom@aussec.com
Cc: LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Tom,

On Sat, Nov 17, 2018 at 2:07 PM Tom Burkart <tom@aussec.com> wrote:
>
> This patch changes the GPIO access for the pps-gpio driver from the
> integer based ABI to the descriptor based ABI.  It also adds the
> extraction of the device tree capture-clear option.

Is the capture-clear property documented in
Documentation/devicetree/bindings/pps/pps-gpio.txt?
If not, you should add a binding documentation patch.

> Signed-off-by: Tom Burkart <tom@aussec.com>
> ---
>  drivers/pps/clients/pps-gpio.c | 80 +++++++++++++++++++++---------------------
>  include/linux/pps-gpio.h       |  3 +-
>  2 files changed, 41 insertions(+), 42 deletions(-)
>
> diff --git a/drivers/pps/clients/pps-gpio.c b/drivers/pps/clients/pps-gpio.c
> index 333ad7d5b45b..d2fbc91dc8fc 100644
> --- a/drivers/pps/clients/pps-gpio.c
> +++ b/drivers/pps/clients/pps-gpio.c
> @@ -31,7 +31,7 @@
>  #include <linux/slab.h>
>  #include <linux/pps_kernel.h>
>  #include <linux/pps-gpio.h>
> -#include <linux/gpio.h>
> +#include <linux/gpio/consumer.h>
>  #include <linux/list.h>
>  #include <linux/of_device.h>
>  #include <linux/of_gpio.h>
> @@ -41,9 +41,9 @@ struct pps_gpio_device_data {
>         int irq;                        /* IRQ used as PPS source */
>         struct pps_device *pps;         /* PPS source device */
>         struct pps_source_info info;    /* PPS source information */
> +       struct gpio_desc *gpio_pin;     /* GPIO port descriptors */
>         bool assert_falling_edge;
>         bool capture_clear;
> -       unsigned int gpio_pin;
>  };
>
>  /*
> @@ -61,18 +61,49 @@ static irqreturn_t pps_gpio_irq_handler(int irq, void *data)
>
>         info = data;
>
> -       rising_edge = gpio_get_value(info->gpio_pin);
> +       rising_edge = gpiod_get_value(info->gpio_pin);
>         if ((rising_edge && !info->assert_falling_edge) ||
>                         (!rising_edge && info->assert_falling_edge))
>                 pps_event(info->pps, &ts, PPS_CAPTUREASSERT, NULL);
>         else if (info->capture_clear &&
>                         ((rising_edge && info->assert_falling_edge) ||
> -                        (!rising_edge && !info->assert_falling_edge)))
> +                       (!rising_edge && !info->assert_falling_edge)))
>                 pps_event(info->pps, &ts, PPS_CAPTURECLEAR, NULL);
>
>         return IRQ_HANDLED;
>  }
>
> +static int pps_gpio_setup(struct platform_device *pdev)
> +{
> +       struct pps_gpio_device_data *data = platform_get_drvdata(pdev);
> +       const struct pps_gpio_platform_data *pdata = pdev->dev.platform_data;
> +       struct device_node *np = pdev->dev.of_node;
> +       int ret;

Unused variable?

> +
> +       if (pdata) {
> +               data->gpio_pin = pdata->gpio_pin;
> +
> +               data->assert_falling_edge = pdata->assert_falling_edge;
> +               data->capture_clear = pdata->capture_clear;

This is just a matter of personal taste, so feel free to ignore:
I would keep the pdata branch in pps_gpio_probe and call this function
pps_gpio_dt_setup, to reduce indentation of the OF branch.

> +       } else {
> +               data->gpio_pin = devm_gpiod_get(&pdev->dev,
> +                       NULL,   /* request "gpios" */
> +                       GPIOD_IN);
> +               if (IS_ERR(data->gpio_pin)) {
> +                       dev_err(&pdev->dev,
> +                               "failed to request PPS GPIO\n");
> +                       return PTR_ERR(data->gpio_pin);
> +               }
> +
> +               if (of_get_property(np, "assert-falling-edge", NULL))
> +                       data->assert_falling_edge = true;
> +
> +               if (of_get_property(np, "capture-clear", NULL))
> +                       data->capture_clear = true;

Those two should use the of_property_read_bool wrapper.

> +       }
> +       return 0;
> +}
> +
>  static unsigned long
>  get_irqf_trigger_flags(const struct pps_gpio_device_data *data)
>  {
> @@ -90,53 +121,23 @@ get_irqf_trigger_flags(const struct pps_gpio_device_data *data)
>  static int pps_gpio_probe(struct platform_device *pdev)
>  {
>         struct pps_gpio_device_data *data;
> -       const char *gpio_label;
>         int ret;
>         int pps_default_params;
> -       const struct pps_gpio_platform_data *pdata = pdev->dev.platform_data;
> -       struct device_node *np = pdev->dev.of_node;
>
>         /* allocate space for device info */
>         data = devm_kzalloc(&pdev->dev, sizeof(struct pps_gpio_device_data),

Could use sizeof(*data) here. Otherwise,

Reviewed-by: Philipp Zabel <philipp.zabel@gmail.com>

regards
Philipp
