Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:48:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C4A6C5803C2;
	Tue, 27 Nov 2018 10:04:20 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 10:04:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AM3kKVRSuk9uS3tiB3ymjr4BUQtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBCCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRNwzIDUe5mVOfhlc6/Bft4XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4TzpkUBrRykBQmjBePk1zFGhn3s0q051OQhDxzN0QsvH90Qt3?=
 =?us-ascii?q?TUttr1NKYIXe+ozqnH1zbDb/RI2Trm7IjIcxYhruuWXbJ3a8bRzlMvFwzcg1iW?=
 =?us-ascii?q?tIfrMTSV1uEXvGia6eptTeavi20iqwF1uDSvwd0siobPi4kIyV7E7T10zJgpKd?=
 =?us-ascii?q?C8UkJ3fNCpHIVKuy2HNIZ6XtkuTmBqtSoi1LEKpIC3cDIFxZkn3RLSav6Kf5KW?=
 =?us-ascii?q?7h/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSszlZKoTRKksPWunAOyRPT8M6HRe?=
 =?us-ascii?q?V5/ku73jaPzQ/T5vlFIUAyi6XbN4YszqAsmpcXq0jPAyH7lFvsgKOLdUgo5vKk?=
 =?us-ascii?q?5uXlb7n+o5+TLY50igXwMqQ0ncy/BPw1MgwPX2id5OS926Tv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIndJcUVoK62HRVV35096xawETimys4UnXoZI1JffhKIkYzpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V905sUWXiTDa+BLKPSrViI6/ovI+aWZY8VpCzyK/8/6/7u?=
 =?us-ascii?q?kH82g1kdfaay0JsTaXC4GOlmIkqDbXrthNcBDXkFvg4kQOP2j12CVCZZZ2yuUK?=
 =?us-ascii?q?Ik+jE7FIWmAJ/BRoCqnrONxiS7HppQZmBADVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+Dcjwoy9TxzD8SeyW2NVXt7nm?=
 =?us-ascii?q?ETSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T82lAT4rSNI92dsOY0dnFNWkgRDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iWiryldboC0yLX9GeM12yOvFpGXw52VqnF?=
 =?us-ascii?q?WXMfZk7Srdni4kPCTrmuCakoMwdbyM6CLLdKZcPtjVlcWPjjP9HeaXqrm2isHR?=
 =?us-ascii?q?aI2q+MbI3ydmoAxirdFlYLnxoT/XmcMwg+HTmuo2TFATxqFFLvZV7s8OZkpHO6?=
 =?us-ascii?q?SE800x+Fb0l727Wp/R4VgOSWS+kP0bIcpCchtzJ0EU6h39LXDtqAoBZhfKVcYN?=
 =?us-ascii?q?8n/FdLz2XZtxZ5PpyhKaBiiUUTcwB2v0PoyhV2BZ9MkcksrHM20gVyLbiU309G?=
 =?us-ascii?q?dzOdxZrwIKHYKnHu/BCzbK7bwkvR0NKI9aYA9vs5q0/vsxq0FkU/6Xpn1dpV03?=
 =?us-ascii?q?yC5pjRCAoSUJTxUls49hRgprHaZDU96J3Q1XF2Laa0tTrC0cozBOQ50hagY8tf?=
 =?us-ascii?q?MKScGQ7yDs0WHdShJPYrmlipdB0EOu9S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+sstr2mY9Yfz4SBHewyS/+CI5XeKJy?=
 =?us-ascii?q?Z4cLBX6yLMKtwtVxmoDiW2Rf9F6lHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6jVbsIJK4jtAAUEizcggpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxka3Dn5H2?=
 =?us-ascii?q?tdxzA7cCumuo7jkBx5i2KdLXBzo2TfecxrwRff5drcReNe3zYcRSl4jyXXCUa4?=
 =?us-ascii?q?P9Wz4dqUkJLDuPikV229Tp1TbTXrzYSYuSq7/2JqBgezn/Kymt3hCgU61S7719?=
 =?us-ascii?q?93VSTHthr8Y4/r17ikPuJjZEVnGFj8689iEIFkjoQwnI0Q2WQdhpiN/noIi2bz?=
 =?us-ascii?q?Pc9b2aLjdnUNQzELzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYf18njce0/Qi8nAbjP8SuAox0CqdGKsdEldCPSzjjBmI?=
 =?us-ascii?q?69G+rKNKZGega7Sw1Ux+ncy/A7GGuA1TRHH5epI6Fy9q8sp/KE7M0GH06oz8ZN?=
 =?us-ascii?q?nQatcTugeVkhjaiehVNYkxluELhSd8PWL9vHsly/M0jBB03JG6upSHJHtp/K6j?=
 =?us-ascii?q?HhFYMTj1bdsJ+j7xlaZegtqW34e3E5p6ADoLW5/oTe+yHDIWqPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM5FBqlxMn/?=
 =?us-ascii?q?f0di/DwR+kT0qhhRyuJrKhn/VH3QpByzZzcwSZifKgdW7w5Y60fUN8ye8vx8Hy?=
 =?us-ascii?q?VC8pK9qwyNL3SRZx5UAmERRkyEG1fjM6Gu5NnH7uiYH/e+IOHIYbmUsuxeUPGI?=
 =?us-ascii?q?xZ2034ti/jaMMNiPP3Z4A/063EpDQW52G8DDlzoTTCwXkjrHb9SHqxek5i13ss?=
 =?us-ascii?q?e//ezrWA3x5IuPCLhSMdR19xC1m6eDMOGQizhjKTZFzZMB3nvIyLkZ3F4PhCBi?=
 =?us-ascii?q?bTitEbIctSHTSKLcgLNYDxkeaylrLstH87o83hVROc7ckt76zKN4geUvC1hbVV?=
 =?us-ascii?q?3tgMWpZc0RLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlQjCGaORxSop2yfgxxBmjjUt3mbAa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMpYXvuFtAiRxluJa5mw1yrpV?=
 =?us-ascii?q?7C5eQvx1lzDfrtpvo1Ggj+mOxSBrUBtIqjZXmo2LuV9uNrne9plFCj74+0cJ7G?=
 =?us-ascii?q?ONG1ESovN7BdD1/aNd0N7CkOT0MjgR3cjT+J4zCs/OJ8PPHHgoMh33UGrbAQwf?=
 =?us-ascii?q?Qj/tOWPWhEtDuPWT8HSPqd49sJe6y8lGcaNSSFFgTqBSMU9iBtFXeJo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CAAQDchv1bh0O0hNFkgheBW4EPgQInm?=
 =?us-ascii?q?BmCIZcsFIFiDwEBGAcMAYEqAYYvIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII?=
 =?us-ascii?q?2IoJsAiQLAQ0BATcBBQkCUAMxAQUBOoJRSwGCAQQBCpoLPIodgWwzgnYBAQWBA?=
 =?us-ascii?q?DABhXYDBRKHUIMPgRyBVz+BEYYXgWAEAYVyiSUEDiOWNAcCghwEhB0/gy2GfAs?=
 =?us-ascii?q?YgVmHeYc5iW6DWIpKAgQCCQIFDyGBJYINMxowQ4JsH4IFAxeIXoVBPjKBBAEBA?=
 =?us-ascii?q?TuMVAEB?=
X-IPAS-Result: =?us-ascii?q?A0CAAQDchv1bh0O0hNFkgheBW4EPgQInmBmCIZcsFIFiDwE?=
 =?us-ascii?q?BGAcMAYEqAYYvIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJsAiQLAQ0BA?=
 =?us-ascii?q?TcBBQkCUAMxAQUBOoJRSwGCAQQBCpoLPIodgWwzgnYBAQWBADABhXYDBRKHUIM?=
 =?us-ascii?q?PgRyBVz+BEYYXgWAEAYVyiSUEDiOWNAcCghwEhB0/gy2GfAsYgVmHeYc5iW6DW?=
 =?us-ascii?q?IpKAgQCCQIFDyGBJYINMxowQ4JsH4IFAxeIXoVBPjKBBAEBATuMVAEB?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="53541934"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 10:03:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727017AbeK1FCf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 00:02:35 -0500
Received: from mail-wm1-f51.google.com ([209.85.128.51]:37212 "EHLO
        mail-wm1-f51.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726389AbeK1FCf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 00:02:35 -0500
Received: by mail-wm1-f51.google.com with SMTP id g67so9739976wmd.2
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 10:03:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=I1dCCKcSrdyMdX7ZtjZEmH50Fm7bA7CSIp+F9f/Y5l0=;
        b=c8gTA69vepmHvNueruytrRYeJgrKGlM7yU2i6zlOlPpoMfcu9yVth7tjusfay6cssp
         hr75q0Pq2P10Fpq5Fs8Ma6s4HC+dNLSHmjpNkrc6Nb0s1kPbX4YdSysW5sE8tjQUSf5a
         AWdnJz/FLbKEDASK0wDaeNvbZLcI8wz4F2XY0=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=I1dCCKcSrdyMdX7ZtjZEmH50Fm7bA7CSIp+F9f/Y5l0=;
        b=X9Ti144OG7tXE7yx9KwWJNGdLv25ugCoiqZrg7xHNvEQfJFdADYlLzrJf+YJgw8mFJ
         ce20a5CcwfOVvOOsEo2B2G9GCsmHlgZ6EfZwoOg+hbxypsgifXPcxK3HN9zBweuxY/9C
         5yBBrVGJVsFmtBMaEAFGCfnuTQbW8aTuiir4kq/Tparoh9bL5duUSSjT49tFdOfzZG/U
         Q0E47LW2BJ0TY0NWfpyJEIuW+CKYLnuJBYfR0tqLCTm37fRzbk7gaXkmzSYqRZGqxLgS
         6V9V0tXuS5RHd2zFv3fsiy60plZZS5mDF+Utu513H/pDSlS6hXB02FLCppBlsMjmEige
         6iPQ==
X-Gm-Message-State: AGRZ1gLjrQeLf17hTqubOuSrw740C0hv1ctbDDuJmo1iwiBITh4ZSr6U
        FY84lW1JIa/7DOw3bBgvY1yI3w==
X-Google-Smtp-Source: AJdET5ejxgk6vLaUVXm8M46Vrm7owym9+1J2POKufgLIQPR1YA6S2kvfJbttxuaSm/fj2bnHPTDFog==
X-Received: by 2002:a1c:8089:: with SMTP id b131mr29247794wmd.141.1543341831101;
        Tue, 27 Nov 2018 10:03:51 -0800 (PST)
Received: from localhost.localdomain ([212.45.67.2])
        by smtp.googlemail.com with ESMTPSA id a17sm6459921wrs.58.2018.11.27.10.03.49
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 27 Nov 2018 10:03:50 -0800 (PST)
From: Georgi Djakov <georgi.djakov@linaro.org>
To: linux-pm@vger.kernel.org
Cc: gregkh@linuxfoundation.org, rjw@rjwysocki.net, robh+dt@kernel.org,
        mturquette@baylibre.com, khilman@baylibre.com,
        vincent.guittot@linaro.org, skannan@codeaurora.org,
        bjorn.andersson@linaro.org, amit.kucheria@linaro.org,
        seansw@qti.qualcomm.com, daidavid1@codeaurora.org,
        evgreen@chromium.org, mark.rutland@arm.com,
        lorenzo.pieralisi@arm.com, abailon@baylibre.com,
        maxime.ripard@bootlin.com, arnd@arndb.de, thierry.reding@gmail.com,
        ksitaraman@nvidia.com, sanjayc@nvidia.com,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org,
        linux-arm-msm@vger.kernel.org, linux-tegra@vger.kernel.org,
        georgi.djakov@linaro.org
Subject: [PATCH v10 0/8] Introduce on-chip interconnect API
Date: Tue, 27 Nov 2018 20:03:42 +0200
Message-Id: <20181127180349.29997-1-georgi.djakov@linaro.org>
X-Mailer: git-send-email 2.19.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Modern SoCs have multiple processors and various dedicated cores (video, gpu,
graphics, modem). These cores are talking to each other and can generate a
lot of data flowing through the on-chip interconnects. These interconnect
buses could form different topologies such as crossbar, point to point buses,
hierarchical buses or use the network-on-chip concept.

These buses have been sized usually to handle use cases with high data
throughput but it is not necessary all the time and consume a lot of power.
Furthermore, the priority between masters can vary depending on the running
use case like video playback or CPU intensive tasks.

Having an API to control the requirement of the system in terms of bandwidth
and QoS, so we can adapt the interconnect configuration to match those by
scaling the frequencies, setting link priority and tuning QoS parameters.
This configuration can be a static, one-time operation done at boot for some
platforms or a dynamic set of operations that happen at run-time.

This patchset introduce a new API to get the requirement and configure the
interconnect buses across the entire chipset to fit with the current demand.
The API is NOT for changing the performance of the endpoint devices, but only
the interconnect path in between them.

The API is using a consumer/provider-based model, where the providers are
the interconnect buses and the consumers could be various drivers.
The consumers request interconnect resources (path) to an endpoint and set
the desired constraints on this data flow path. The provider(s) receive
requests from consumers and aggregate these requests for all master-slave
pairs on that path. Then the providers configure each participating in the
topology node according to the requested data flow path, physical links and
constraints. The topology could be complicated and multi-tiered and is SoC
specific.

Below is a simplified diagram of a real-world SoC topology. The interconnect
providers are the NoCs.

+----------------+    +----------------+
| HW Accelerator |--->|      M NoC     |<---------------+
+----------------+    +----------------+                |
                        |      |                    +------------+
 +-----+  +-------------+      V       +------+     |            |
 | DDR |  |                +--------+  | PCIe |     |            |
 +-----+  |                | Slaves |  +------+     |            |
   ^ ^    |                +--------+     |         |   C NoC    |
   | |    V                               V         |            |
+------------------+   +------------------------+   |            |   +-----+
|                  |-->|                        |-->|            |-->| CPU |
|                  |-->|                        |<--|            |   +-----+
|     Mem NoC      |   |         S NoC          |   +------------+
|                  |<--|                        |---------+    |
|                  |<--|                        |<------+ |    |   +--------+
+------------------+   +------------------------+       | |    +-->| Slaves |
  ^  ^    ^    ^          ^                             | |        +--------+
  |  |    |    |          |                             | V
+------+  |  +-----+   +-----+  +---------+   +----------------+   +--------+
| CPUs |  |  | GPU |   | DSP |  | Masters |-->|       P NoC    |-->| Slaves |
+------+  |  +-----+   +-----+  +---------+   +----------------+   +--------+
          |
      +-------+
      | Modem |
      +-------+

TODO:
* Create icc_set_extended() to handle parameters such as latency and other
  QoS values. Nvidia and Qcom guys are interested in this.
* Cache the path between the nodes instead of walking the graph on each get().
* Sync interconnect requests with the idle state of the device.

Changes since patchset v9 (https://lkml.org/lkml/2018/8/31/444)
* Converted from using global node identifiers to local per provider ids.
* Dropped msm8916 platform driver until we figure out DT bindings.
* Included sdm845 platform driver instead.
* Added macros for converting to mbps, gbps, etc. to icc units.
* Added comments about aggregation, other minor changes.
* Fixed uninitialized variable. (Gustavo A. R. Silva)
* Removed set but not used variable. (YueHaibing)
* Fixed build error without DEBUGFS. (Arnd Bergmann)

Changes since patchset v8 (https://lkml.org/lkml/2018/8/10/387)
* Fixed the names of the files when built as modules.
* Corrected some typos in comments.

Changes since patchset v7 (https://lkml.org/lkml/2018/7/31/647)
* Addressed comments on kernel-doc and grammar. (Randy)
* Picked Reviewed-by: Evan
* Squashed consumer and provider DT bindings into single patch. (Rob)
* Cleaned-up msm8916 DT bindings docs by removing unused port ids.
* Updated documentation for the cases when NULL is returned. (Saravana)
* New patch to add myself as maintainer.

Changes since patchset v6 (https://lkml.org/lkml/2018/7/9/698)
* [patches 1,6]: Move the aggregation within the provider from the framework to
  the platform driver's set() callback, as the aggregation point could be SoC
  specific.
* [patch 1]: Include missing header, reset state only of the traversed nodes,
  move more code into path_init(), add more asserts, move misplaced mutex,
  simplify icc_link_destroy() (Evan)
* [patch 1]: Fix the order of requests to go from source to destination. (Alex)
* [patch 7]: Use better wording in the documentation. (Evan)
* [patch 6]: Reorder struct members, sort nodes alphabetically, improve naming
  of variables , add missing clk_disable_unprepare() in error paths. (Matthias)
* [patch 6]: Remove redundant NULL pointer check in msm8916 driver. (Alex)
* [patch 6]: Add missing depend on QCOM_SMD_RPM in Kconfig. (Evan)
* [patch 3]: Don't check for errors on debugfs calls, remove debugfs directory
  when module is unloaded (Greg)

Changes since patchset v5 (https://lkml.org/lkml/2018/6/20/453)
* Fix the modular build, make rpm-smd driver a module.
* Optimize locking and move to higher level. (Evan)
* Code cleanups. Fix typos. (Evan, Matthias)
* Add the source node to the path. (Evan)
* Rename path_allocate() to path_init() with minor refactoring. (Evan)
* Rename *_remove() functions to *_destroy().
* Return fixed errors in icc_link_destroy(). (Evan)
* Fix krealloc() usage in icc_link_destroy(). (Evan)
* Add missing kfree() in icc_node_create(). (Matthias)
* Make icc_node_add() return void. (Matthias)
* Change mutex_init to mutex_lock in icc_provider_add(). (Matthias)
* Add new icc_node_del() function to delete nodes from provider.
* Fix the header guard to reflect the path in smd-rpm.h. (Evan)
* Check for errors returned by qcom_icc_rpm_smd_send(). (Evan)
* Propagate the error of icc_provider_del(). (Evan)

Changes since patchset v4 (https://lkml.org/lkml/2018/3/9/856)
* Simplified locking by using a single global mutex. (Evan)
* Changed the aggregation function interface.
* Implemented functions for node, link, provider removal. (Evan)
* Naming changes on variables and functions, removed redundant code. (Evan)
* Fixes and clarifications in the docs. (Matthias, Evan, Amit, Alexandre)
* Removed mandatory reg DT property, made interconnect-names optional. (Bjorn)
* Made interconnect-cells property required to align with other bindings. (Neil)
* Moved msm8916 specific bindings into a separate file and patch. (Bjorn)
* Use the names, instead of the hardcoded ids for topology. (Matthias)
* Init the node before creating the links. (Evan)
* Added icc_units_to_bps macro. (Amit)

Changes since patchset v3 (https://lkml.org/lkml/2017/9/8/544)
* Refactored the constraints aggregation.
* Use the IDR API.
* Split the provider and consumer bindings into separate patches and propose
  new bindings for consumers, which allows to specify the local source port.
* Adopted the icc_ prefix for API functions.
* Introduced separate API functions for creating interconnect nodes and links.
* Added DT lookup support in addition to platform data.
* Dropped the event tracing patch for now.
* Added a patch to provide summary via debugfs.
* Use macro for the list of topology definitions in the platform driver.
* Various minor changes.

Changes since patchset v2 (https://lkml.org/lkml/2017/7/20/825)
* Split the aggregation into per node and per provider. Cache the
  aggregated values.
* Various small refactorings and cleanups in the framework.
* Added a patch introducing basic tracepoint support for monitoring
  the time required to update the interconnect nodes.

Changes since patchset v1 (https://lkml.org/lkml/2017/6/27/890)
* Updates in the documentation.
* Changes in request aggregation, locking.
* Dropped the aggregate() callback and use the default as it currently
  sufficient for the single vendor driver. Will add it later when needed.
* Dropped the dt-bindings draft patch for now.

Changes since RFC v2 (https://lkml.org/lkml/2017/6/12/316)
* Converted documentation to rst format.
* Fixed an incorrect call to mutex_lock. Renamed max_bw to peak_bw.

Changes since RFC v1 (https://lkml.org/lkml/2017/5/15/605)
* Refactored code into shorter functions.
* Added a new aggregate() API function.
* Rearranged some structs to reduce padding bytes.

Changes since RFC v0 (https://lkml.org/lkml/2017/3/1/599)
* Removed DT support and added optional Patch 3 with new bindings proposal.
* Converted the topology into internal driver data.
* Made the framework modular.
* interconnect_get() now takes (src and dst ports as arguments).
* Removed public declarations of some structs.
* Now passing prev/next nodes to the vendor driver.
* Properly remove requests on _put().
* Added refcounting.
* Updated documentation.
* Changed struct interconnect_path to use array instead of linked list.

David Dai (2):
  interconnect: qcom: Add sdm845 interconnect provider driver
  arm64: dts: sdm845: Add interconnect provider DT nodes

Georgi Djakov (5):
  interconnect: Add generic on-chip interconnect API
  dt-bindings: Introduce interconnect binding
  interconnect: Allow endpoints translation via DT
  interconnect: Add debugfs support
  MAINTAINERS: add a maintainer for the interconnect API

 .../bindings/interconnect/interconnect.txt    |  60 ++
 .../bindings/interconnect/qcom,sdm845.txt     |  24 +
 Documentation/interconnect/interconnect.rst   |  94 ++
 MAINTAINERS                                   |  10 +
 arch/arm64/boot/dts/qcom/sdm845.dtsi          |   5 +
 drivers/Kconfig                               |   2 +
 drivers/Makefile                              |   1 +
 drivers/interconnect/Kconfig                  |  15 +
 drivers/interconnect/Makefile                 |   6 +
 drivers/interconnect/core.c                   | 796 +++++++++++++++++
 drivers/interconnect/qcom/Kconfig             |  13 +
 drivers/interconnect/qcom/Makefile            |   5 +
 drivers/interconnect/qcom/sdm845.c            | 836 ++++++++++++++++++
 .../dt-bindings/interconnect/qcom,sdm845.h    | 143 +++
 include/linux/interconnect-provider.h         | 142 +++
 include/linux/interconnect.h                  |  58 ++
 16 files changed, 2210 insertions(+)
 create mode 100644 Documentation/devicetree/bindings/interconnect/interconnect.txt
 create mode 100644 Documentation/devicetree/bindings/interconnect/qcom,sdm845.txt
 create mode 100644 Documentation/interconnect/interconnect.rst
 create mode 100644 drivers/interconnect/Kconfig
 create mode 100644 drivers/interconnect/Makefile
 create mode 100644 drivers/interconnect/core.c
 create mode 100644 drivers/interconnect/qcom/Kconfig
 create mode 100644 drivers/interconnect/qcom/Makefile
 create mode 100644 drivers/interconnect/qcom/sdm845.c
 create mode 100644 include/dt-bindings/interconnect/qcom,sdm845.h
 create mode 100644 include/linux/interconnect-provider.h
 create mode 100644 include/linux/interconnect.h

