Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C135D5804FD;
	Thu,  6 Dec 2018 13:53:31 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 13:53:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2WA+whOwjGsgECQj2Zsl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn7osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyDJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7Or0dUf60zKbV0D7NYelZ2Tbg44XPbx8uu/CMUq9qfsrPyEkgCh7Jg06M?=
 =?us-ascii?q?poziIjyayP4Cs3WB7+pnT+KgkXQrqwZrojig38ohjJTCiIENyl3c6yl13II4Kc?=
 =?us-ascii?q?elREN1f9KoCoZcuiKGO4dsQ84vQXlktDs+x7ACo5K3YTQGxZU9yxLCd/CKfZKE?=
 =?us-ascii?q?7gzjWeueJzpzmWhrd6ilhxmo9Eit0u38Wdew0FZNtidFjNbMuW4X1xDJ6ciIVO?=
 =?us-ascii?q?F9/kG/1jaLzQzT7ftEIU8smaraLZ4u3KIwm4INvUjfGiL6glj6gaGIekk+5+Sl?=
 =?us-ascii?q?6Pjrbq/nq5KeL4N0jxvxMqUqmsyxG+Q4NQ0OUnCf+eS90r3j4EL4TKxJjvIoiK?=
 =?us-ascii?q?nZto7VJcACqq6+DQ5V1Jgs6wykAje439QXg2MHIEhGeB2ZlYjpPU/BIPTiAfe4?=
 =?us-ascii?q?mVSsny9nx+raMb35HpXNMn/Dna/lfbZ86E5T1hA/zN9C559PDrEBIfTzWlL+td?=
 =?us-ascii?q?DCDx85NRC0zPjjCNlnyoweXmePCLeDMKzOqV+I+v4vI+6UaY8Vojn9KuQl6OTp?=
 =?us-ascii?q?jXMjmV8dYLOm3Z0YaH2jGvRmIkOZYWfjg9sbEGcKuBY+Q/LuiFGYTTFTYHOyVb?=
 =?us-ascii?q?om5j4nEIKmEZvDRoe1jbyD2ye0AIdaZmNBClCKF3focJ6JW/MNaCKUP89gnSYI?=
 =?us-ascii?q?VbmnS489yx6usBX2xKZgLurR4icYr47s1MBp5+3PkhE/7SZ7D9+d02GKTGF4hH?=
 =?us-ascii?q?kISCU03K1kpUx9y1GD0bV3gvBCFNxT4e9JXRk+NZLG0+N6DNXyUBrbftiVUFam?=
 =?us-ascii?q?XsmmATYpQ9Iy2dAOZVxxG9Gjjh/Z2SqqDKQYl7iKBJwy76Ld0GL9J8d7y3bayq?=
 =?us-ascii?q?Yhi0MqTddINW2jnqR/7RTcB5bVk0WFkKanbbkT0zTT9Gid12aOvFtXUAhrUarb?=
 =?us-ascii?q?W3ATYU/Wrdf85kPGVLKuDbUnMg1cyc+NMKdKa9vpjUlYS/fnItjRf2Wxm2KoDx?=
 =?us-ascii?q?aS2ryMdJbqe3ka3CjFFUcLiR4T8micOQg+HCihpXneAyJoFV/0Z0Ps8O9+qG60?=
 =?us-ascii?q?T0MuzgGKaVFh2KSx+hIPmfOcTPYT1KoeuCg9szV0AEq939XOBtqcpgpheaJcYc?=
 =?us-ascii?q?894FZHz27ZqxZxPpu6L6Bmh14edQt3sljq1xV2DIVAjMcroGkrzAp0NaKXzldB?=
 =?us-ascii?q?eymE0pD3P73dMnPy8wy3a67KxlHe186b9b0L6PsmpFTsogGoGlA5/HV6ztZayX?=
 =?us-ascii?q?2c5pbNDAoMSp/xVkc39x5np7DVeCU95oXU1WFyPqmwqDPNx9UpBO49wBa6Y9hf?=
 =?us-ascii?q?KL+EFBP1E8ACB8muNfYmlESzYhMFPOBd7qg0P8y9evuC2a6rOvtgnT28gWRG5o?=
 =?us-ascii?q?B9zlyD9y5mRuHU2JYFxumS3hGbWDfkkFehrsf3lJheZTETAmWw0zLkC5NWZqFo?=
 =?us-ascii?q?e4YEF32uI8yuytpinZHtX2NX+0C5B1MB3s+kYh6Sb1373Q1N2kUbu32nmS2kzz?=
 =?us-ascii?q?NqlzEltLaQ3CvLw+76bhoIJnZLRHV+jVfrOYW1j9EaUFKobgQzjxul+ED6yrNf?=
 =?us-ascii?q?pKR+KWnTXEhJczL3L2FkTqu/qL6Cb9RT55MvtCVdSP68bkyCSr7hvxsa1DvuH2?=
 =?us-ascii?q?lEyzAhdDGquZL5kwZhiG2HL3Zzr3vZecduyhfZ/9HcQf9R3jwbRCh3kzXXB168?=
 =?us-ascii?q?P8W38tWQjZvMrue+V2e5XJ1JbSbr1Z+AtDe85WByARywhfezlsflEQg71y/2zN?=
 =?us-ascii?q?1qVSTOrBbhbYjnzaW6MeR7fkZ2AF/w8dZ1GoZ7koEonpEfxWAahomJ/XoAiWrz?=
 =?us-ascii?q?Ms9U2aPkYHoNWD4E2djV4Af+1U1nL3KJwZ/5V3qHzstgYdm6fn0Z2iYn489WD6?=
 =?us-ascii?q?eU6aROnTFprVqgsQLRff99ky8Yyfsv634VmfsFuQQzwSWGHrAdA1NYMjfymBSS?=
 =?us-ascii?q?4NCzt6FXZGepcbit20tyh9GhDLeeog5CXHb1YIstHSh17s9nKlLDzGXz6p34eN?=
 =?us-ascii?q?nXdd8TqhqUkxLag+lUMp0xkOcKhTF8OWL8pnAlz+87jRpz3ZC1poSHKmNt/L6n?=
 =?us-ascii?q?DR5cLDH6e8QT+jT1h6ZEgsmWx5yvHolmGjgTR5TnV/WoEDYPtfj9MwaODSYxqn?=
 =?us-ascii?q?OaGbrZAA+e511qr3PJE5C3KX6XIGMVwsllRBmYPEZfmhwbXC0mnp4lEQCn3M7h?=
 =?us-ascii?q?f1185j8P/V70sAdMxvhrNxniUWffuQGoZS0vSJWEKBpW7wdC51raMMCE7+JzGT?=
 =?us-ascii?q?1Y8YOlrACXNmObYAFIB3kTWkOYH1DjIqWu5d7Y/umYAeq+MuLOYaiUpuxYTfuI?=
 =?us-ascii?q?3pWv0o1p/zuXMsWPP39iD+A020ZZXHB5HdjZlCsLSyANiy3NaMubrg+m+iJrts?=
 =?us-ascii?q?C/7OjrWAX36IuPFbRSMNZv+xO3gauZNO6QniF5KTlG2ZMW2H/I06MS3FoTiyFo?=
 =?us-ascii?q?ajmsHq4MtS/LTKLMhKBXCwQXZD90NMtN96g8xBVCOdbHitPp0b51luQ6C0peWl?=
 =?us-ascii?q?z7hM6oZdYGI2W8NF7cAEaLNbKGJSDEws3tYKO8T6FQg/tQtxGqpTmbFErjNCyZ?=
 =?us-ascii?q?lzb1TxCvLf1MjCaDMRxCuYG9dwxhBnT5QN36ah20Ltl3gCYywb01gHPKKGEdPS?=
 =?us-ascii?q?J9c0NLsr2f8ydYju9jFGxG63pvNfOElDqB7+nENpYWtuNmAyRumOJc5XQ6yr1V?=
 =?us-ascii?q?4zlFRfx1giTSqNFurkqikumOzDpnTRVPpixKhIKNoUVtJ6HZ+oNcVnbD+RJepV?=
 =?us-ascii?q?mXXjsHoMFqC5XDualTzcaHwK3+Ly1N8pTY/8IfANb8LMOBOWAmdx3zF2iQRCYb?=
 =?us-ascii?q?RDjjGnvSikoVxPyM+WeYo54SoZj2n58PV7odU0Y6QKA0EENgSfALPpZ7Fh8tkP?=
 =?us-ascii?q?bPgMcJ6XOgrRWIbM5dsp3OS+iVG/ypLyyW2+oXLyAUyK/1eNxAfrbw3FZvPxwj?=
 =?us-ascii?q?xNzH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABOmQlch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBggCBayeDeogZjA+BYAglFJc6gXMUGBMBh1ciNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiAEEQgBATcBBQkBAQoVAwICJgICA?=
 =?us-ascii?q?ykrBgEMBgIBAQGDHIICBaVUcHwzgnYBAQWCQ4RiCIELiXiBHIIWgTgMgl+IBYJ?=
 =?us-ascii?q?XgSwBiAqGSDaPZkYGA5FAHoFchRWCcRCHRIkOiRWGaYFGgg0zGjBDgR6BToIbD?=
 =?us-ascii?q?BeIXoVgHzKBBQEBijoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAABOmQlch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBggC?=
 =?us-ascii?q?BayeDeogZjA+BYAglFJc6gXMUGBMBh1ciNAkNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJhAQEBAQMBAiAEEQgBATcBBQkBAQoVAwICJgICAykrBgEMBgIBAQG?=
 =?us-ascii?q?DHIICBaVUcHwzgnYBAQWCQ4RiCIELiXiBHIIWgTgMgl+IBYJXgSwBiAqGSDaPZ?=
 =?us-ascii?q?kYGA5FAHoFchRWCcRCHRIkOiRWGaYFGgg0zGjBDgR6BToIbDBeIXoVgHzKBBQE?=
 =?us-ascii?q?BijoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="141117915"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 13:53:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726021AbeLFVx1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 16:53:27 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:39948 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725945AbeLFVx0 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 16:53:26 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 1BAF060B7E; Thu,  6 Dec 2018 21:53:24 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544133205;
        bh=Q8BIfm9Udyijxho8wELnzvz/rcNmTRyjFuV2hlA5Ty0=;
        h=Subject:To:Cc:References:From:Date:In-Reply-To:From;
        b=AuRqnsHBkYSzfFPlk/gZglFDUh0zFLqXLD0OalilLTJ4MXdVMWVgEaJVcd/ou5zQk
         drYlXj1FhL1S3s9mDCaI6KliiBZcdj1R8rR2xrQHvPaRwXwKgzmdJK0liAk7lJX2CE
         Si+M6LTwlqbpmOZ8GJ7BjHUoEvmWyJQNSYs++vB8=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from [10.46.162.234] (i-global254.qualcomm.com [199.106.103.254])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: daidavid1@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 5942F6019F;
        Thu,  6 Dec 2018 21:53:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544133203;
        bh=Q8BIfm9Udyijxho8wELnzvz/rcNmTRyjFuV2hlA5Ty0=;
        h=Subject:To:Cc:References:From:Date:In-Reply-To:From;
        b=Qk6N1dXhax+JGynONfXAz1NccXegykdM6lPQtGMxnMem+QL/Ka+tA4s1wVhevQmWH
         TrBmhQlI25qYnFlxPJAdW+89VjuK1DXH3K/peAwIvCA5zhCesjS8Br6ExYEuux8Xsj
         n+WHWTWLieJXJ3Mvs/Iwt25g3lm7XW8GZisS5f0o=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 5942F6019F
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=daidavid1@codeaurora.org
Subject: Re: [PATCH v10 5/7] interconnect: qcom: Add sdm845 interconnect
 provider driver
To: Georgi Djakov <georgi.djakov@linaro.org>,
        Evan Green <evgreen@chromium.org>
Cc: linux-pm@vger.kernel.org, gregkh@linuxfoundation.org,
        rjw@rjwysocki.net, robh+dt@kernel.org,
        Michael Turquette <mturquette@baylibre.com>,
        khilman@baylibre.com, Vincent Guittot <vincent.guittot@linaro.org>,
        Saravana Kannan <skannan@codeaurora.org>,
        Bjorn Andersson <bjorn.andersson@linaro.org>,
        amit.kucheria@linaro.org, seansw@qti.qualcomm.com,
        mark.rutland@arm.com, lorenzo.pieralisi@arm.com,
        Alexandre Bailon <abailon@baylibre.com>,
        maxime.ripard@bootlin.com, Arnd Bergmann <arnd@arndb.de>,
        thierry.reding@gmail.com, ksitaraman@nvidia.com,
        sanjayc@nvidia.com, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        linux-arm-msm@vger.kernel.org, linux-tegra@vger.kernel.org
References: <20181127180349.29997-1-georgi.djakov@linaro.org>
 <20181127180349.29997-6-georgi.djakov@linaro.org>
 <CAE=gft4tO96n0vAubo1_vvcTO4yarDcTNOTuL6cLpmLDDNxrfA@mail.gmail.com>
 <cfcb39ba-860c-5a3f-911f-ab52b5250390@linaro.org>
From: David Dai <daidavid1@codeaurora.org>
Message-ID: <266c7bf9-18c1-8255-eca2-814aab3850c6@codeaurora.org>
Date: Thu, 6 Dec 2018 13:53:21 -0800
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <cfcb39ba-860c-5a3f-911f-ab52b5250390@linaro.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/5/2018 8:00 AM, Georgi Djakov wrote:
> Hi Evan,
>
> On 12/1/18 02:39, Evan Green wrote:
>> On Tue, Nov 27, 2018 at 10:04 AM Georgi Djakov <georgi.djakov@linaro.org> wrote:
>>> From: David Dai <daidavid1@codeaurora.org>
>>>
>>> Introduce Qualcomm SDM845 specific provider driver using the
>>> interconnect framework.
>>>
>>> Signed-off-by: David Dai <daidavid1@codeaurora.org>
>>> Signed-off-by: Georgi Djakov <georgi.djakov@linaro.org>
>>> ---
>>>   .../bindings/interconnect/qcom,sdm845.txt     |  24 +
>>>   drivers/interconnect/Kconfig                  |   5 +
>>>   drivers/interconnect/Makefile                 |   1 +
>>>   drivers/interconnect/qcom/Kconfig             |  13 +
>>>   drivers/interconnect/qcom/Makefile            |   5 +
>>>   drivers/interconnect/qcom/sdm845.c            | 836 ++++++++++++++++++
>>>   .../dt-bindings/interconnect/qcom,sdm845.h    | 143 +++
>>>   7 files changed, 1027 insertions(+)
>>>   create mode 100644 Documentation/devicetree/bindings/interconnect/qcom,sdm845.txt
>>>   create mode 100644 drivers/interconnect/qcom/Kconfig
>>>   create mode 100644 drivers/interconnect/qcom/Makefile
>>>   create mode 100644 drivers/interconnect/qcom/sdm845.c
>>>   create mode 100644 include/dt-bindings/interconnect/qcom,sdm845.h
>>>
>>> diff --git a/Documentation/devicetree/bindings/interconnect/qcom,sdm845.txt b/Documentation/devicetree/bindings/interconnect/qcom,sdm845.txt
>>> new file mode 100644
>>> index 000000000000..d45150e99665
>>> --- /dev/null
>>> +++ b/Documentation/devicetree/bindings/interconnect/qcom,sdm845.txt
>>> @@ -0,0 +1,24 @@
>>> +Qualcomm SDM845 Network-On-Chip interconnect driver binding
>>> +-----------------------------------------------------------
>>> +
>>> +SDM845 interconnect providers support system bandwidth requirements through
>>> +RPMh hardware accelerators known as Bus Clock Manager(BCM). The provider is able
>>> +to communicate with the BCM through the Resource State Coordinator(RSC)
>>> +associated with each execution environment. Provider nodes must reside within
>>> +an RPMh device node pertaining to their RSC and each provider maps to
>>> +a single RPMh resource.
>>> +
>>> +Required properties :
>>> +- compatible : shall contain only one of the following:
>>> +                       "qcom,sdm845-rsc-hlos"
>> I wonder if maybe hlos isn't necessary. Unless you somehow imagine
>> secure mode would have a device tree entry in here as well? Probably
>> not.
> Ok, will remove it. David, please chime in if you have any concerns with
> this.

No strong preferences in terms of naming, but need to make the 
distinction between this and potential other rsc types if we're to add 
additional provider drivers.

>>> +- #interconnect-cells : should contain 1
>>> +
>>> +Examples:
>>> +
>>> +apps_rsc: rsc {
>>> +               qnoc: qnoc-rsc-hlos {
>>> +                       compatible = "qcom,sdm845-rsc-hlos";
>>> +                       #interconnect-cells = <1>;
>>> +               };
>>> +};
>>> +
>> ...
>>> diff --git a/drivers/interconnect/qcom/sdm845.c b/drivers/interconnect/qcom/sdm845.c
>>> new file mode 100644
>>> index 000000000000..1678de91ca52
>>> --- /dev/null
>>> +++ b/drivers/interconnect/qcom/sdm845.c
>>> @@ -0,0 +1,836 @@
>> ...
>>> +
>>> +static void tcs_list_gen(struct list_head *bcm_list,
>>> +                        struct tcs_cmd *tcs_list, int *n)
>> We could make the prototype of this function be:
>>
>> static void tcs_list_gen(struct list_head *bcm_list,
>>          struct tcs_cmd tcs_list[SDM845_MAX_VCD], int n[SDM845_MAX_VCD])
>>
>> which would catch errors if somebody later passed in an array that
>> wasn't the right size, since we blindly memset below.
> Yes, sounds good. I will try to optimize it.
>
> Thanks,
> Georgi
>
>>> +{
>>> +       struct qcom_icc_bcm *bcm;
>>> +       bool commit;
>>> +       size_t idx = 0, batch = 0, cur_vcd_size = 0;
>>> +
>>> +       memset(n, 0, sizeof(int) * SDM845_MAX_VCD);
>>> +
>>> +       list_for_each_entry(bcm, bcm_list, list) {
>>> +               commit = false;
>>> +               cur_vcd_size++;
>>> +               if ((list_is_last(&bcm->list, bcm_list)) ||
>>> +                   bcm->aux_data.vcd != list_next_entry(bcm, list)->aux_data.vcd) {
>>> +                       commit = true;
>>> +                       cur_vcd_size = 0;
>>> +               }
>>> +               tcs_cmd_gen(&tcs_list[idx], bcm->vote_x, bcm->vote_y,
>>> +                           bcm->addr, commit);
>>> +               idx++;
>>> +               n[batch]++;
>>> +               /*
>>> +                * Batch the BCMs in such a way that we do not split them in
>>> +                * multiple payloads when they are under the same VCD. This is
>>> +                * to ensure that every BCM is committed since we only set the
>>> +                * commit bit on the last BCM request of every VCD.
>>> +                */
>>> +               if (n[batch] >= MAX_RPMH_PAYLOAD) {
>>> +                       if (!commit) {
>>> +                               n[batch] -= cur_vcd_size;
>>> +                               n[batch + 1] = cur_vcd_size;
>>> +                       }
>>> +                       batch++;
>>> +               }
>>> +       }
>>> +}
>>> +

-- 
The Qualcomm Innovation Center, Inc. is a member of the Code Aurora Forum,
a Linux Foundation Collaborative Project

