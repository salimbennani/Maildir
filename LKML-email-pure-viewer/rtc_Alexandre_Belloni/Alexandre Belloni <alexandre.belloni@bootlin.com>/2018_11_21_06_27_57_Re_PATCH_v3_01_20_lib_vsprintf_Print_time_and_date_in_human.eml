Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:42:19 -0000
Received: from icoremail.net (unknown [209.85.214.178])
	by mail-app2 (Coremail) with SMTP id by_KCgD3_2OcivRbhqPCAQ--.55395S3;
	Wed, 21 Nov 2018 06:28:45 +0800 (CST)
Received: from mail-pl1-f178.google.com (unknown [209.85.214.178])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnD0uXivRbziNgAA--.4140S3;
	Wed, 21 Nov 2018 06:28:39 +0800 (CST)
Received: by mail-pl1-f178.google.com with SMTP id b5-v6so2358724pla.6
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 14:28:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=Y1VlnjbkYkT0qhelrtFG8+UB0k6ZroIxGJ8e1/7GVb4=;
        b=JtI7A2LkTwIgyHBZyTfzr57qIcXAm4GTDfEf9m2tEBTGA9+hRjciZYg6baGj5Edihw
         IDaQnoPci91y0NGF36fTfwfsL0Nz6lU5lOT0KZL8v3zJFBJEQwYE4Hrp5xZfU6pSXR+m
         aE+H1KM3vyRo6THW5yAH19LmH4edeVPwP++yYCduzTG66rmLVhBRFQsbcvVHsj8Nn9Ax
         0v+aE5BbafMLzZUAHmQBO395b0D81c0GdWCrLwo2+aoPj/DG1tQoOgYw1gSNpaDlbeMB
         uMij9Ch1WWBDLtrY9yGMdyb3GvIB7KcPwCuUGpOYcnDGp+M7V3TThVn2b0GHbWrfkeEB
         llkw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWYYm7OS1LNfiURm9vZLbCNI89L5oKNVgzph8AqKJiQMMbOibQlm
	uv3MB6p/Yjj4d2TQ/pXMEbk1P1j7vtO6k1CkvBepLHvn39ww9uw=
X-Received: by 2002:a63:bc02:: with SMTP id q2mr3638816pge.116.1542752918773;
        Tue, 20 Nov 2018 14:28:38 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1197387pju;
        Tue, 20 Nov 2018 14:28:37 -0800 (PST)
X-Google-Smtp-Source: AFSGD/Uq0NG7e/qpAzbz448jlvoFoSS6SvSkpVuLz+q3LJCL8BeItt2f7qaJHBbXQBUJSVC8IRAr
X-Received: by 2002:a17:902:5ac2:: with SMTP id g2mr4080380plm.313.1542752917604;
        Tue, 20 Nov 2018 14:28:37 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542752917; cv=none;
        d=google.com; s=arc-20160816;
        b=wH0cS71cb+wNJnccuaNc+D1Kczf3XS/di0Es8btlB2lgl84B2TzdDEVa6TIFvQvA3e
         37ss/sNVVLNI0/3NOc3MwRwsK6h+fS4kL0/IXs71FRFpQenPPKtOv65pYTufdRvTK9t+
         AimmiAuHR1XS0S4OCb9ntb2lhXl8iZy3o3yc+lkg01iilwrB65tZBsezwDXQ7Ydqcauh
         yPqDpQutVMFQzdOBU9oXUrc8UQ+U+p0qrcFSfOfh4T1lVU1m7bOUXRLcz7grgChDRWw1
         dw24nwU4AItaBdKeaDKwQv2EY/TmcPeDos1AvQ+SCR01qZzh+Hc0CR0FTpxk/SG8lVN7
         Otow==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=Y1VlnjbkYkT0qhelrtFG8+UB0k6ZroIxGJ8e1/7GVb4=;
        b=tY0ikdHnJnkmF44geE+nl6sU92w59JPEfkcYb+U9fC6FHTAAVZVeAADLhlLku/qRSW
         0EK9pwUj5K4yku20528D37f78iRrqRou5LhKWWLenKc8be36iaW84qdhMt7UQibi0pfX
         S7tevSyvTbydVbgyVPFtlexlNBgALahkpe/DxgPSpXpFjH0GuaUdm4LukcLXNQdv4qDL
         /Gh+ozn6YfW2wMkp37Jsonalr7/YdTQBfPfHF6hRMGHT+2HPQNUrPPgGbdIM9EZ64Ghp
         lKl6HfuQ3349MyxOhsNpiq0f4g+mLPUDDvvz9FOywqX/EniyCwKs41owr5ao8k9uSEqa
         GEog==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id v9si37235476pgt.464.2018.11.20.14.28.22;
        Tue, 20 Nov 2018 14:28:37 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726072AbeKUI72 (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Wed, 21 Nov 2018 03:59:28 -0500
Received: from mail.bootlin.com ([62.4.15.54]:56521 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725913AbeKUI72 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 03:59:28 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 2E657207BD; Tue, 20 Nov 2018 23:27:57 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from localhost (unknown [88.191.26.124])
        by mail.bootlin.com (Postfix) with ESMTPSA id E30032072D;
        Tue, 20 Nov 2018 23:27:56 +0100 (CET)
Date: Tue, 20 Nov 2018 23:27:57 +0100
From: Alexandre Belloni <alexandre.belloni@bootlin.com>
To: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        linux-kernel@vger.kernel.org,
        Alessandro Zummo <a.zummo@towertech.it>,
        linux-rtc@vger.kernel.org, Arnd Bergmann <arnd@arndb.de>,
        Joe Perches <joe@perches.com>,
        Mark Salyzyn <salyzyn@android.com>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>,
        Dmitry Torokhov <dmitry.torokhov@gmail.com>,
        Guan Xuetao <gxt@mprc.pku.edu.cn>,
        Ingo Molnar <mingo@kernel.org>,
        Jason Wessel <jason.wessel@windriver.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Jonathan Hunter <jonathanh@nvidia.com>,
        Krzysztof Kozlowski <krzk@kernel.org>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        Thierry Reding <thierry.reding@gmail.com>
Subject: Re: [PATCH v3 01/20] lib/vsprintf: Print time and date in human
 readable format via %pt
Message-ID: <20181120222756.GI8367@piout.net>
References: <20181113171729.19645-1-andriy.shevchenko@linux.intel.com>
 <20181113171729.19645-2-andriy.shevchenko@linux.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181113171729.19645-2-andriy.shevchenko@linux.intel.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnD0uXivRbziNgAA--.4140S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKr48XF1rtw1UWrWUKF13CFg_yoW3Aw45pa
	13K3y3tan7AFn7W347J3WDC3WrW345Wr4j9w4DWw1fCrn8GryDJay3KrnYyr93CryxAayI
	vr45KFZ8CayDt3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6Fylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUg2Nt
	UUUUU

Hello,

(Please update my email address).

On 13/11/2018 19:17:10+0200, Andy Shevchenko wrote:
> There are users which print time and date represented by content of
> struct rtc_time in human readable format.
> 
> Instead of open coding that each time introduce %ptR[dt][rv] specifier.
> 
> Note, users have to select PRINTK_PEXT_TIMEDATE option in a Kconfig.
> 
> Cc: Arnd Bergmann <arnd@arndb.de>
> Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
> Cc: Dmitry Torokhov <dmitry.torokhov@gmail.com>
> Cc: Geert Uytterhoeven <geert@linux-m68k.org>
> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn>
> Cc: Ingo Molnar <mingo@kernel.org>
> Cc: Jason Wessel <jason.wessel@windriver.com>
> Cc: Jonathan Corbet <corbet@lwn.net>
> Cc: Jonathan Hunter <jonathanh@nvidia.com>
> Cc: Krzysztof Kozlowski <krzk@kernel.org>
> Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
> Cc: Thierry Reding <thierry.reding@gmail.com>
> Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
> ---
>  Documentation/core-api/printk-formats.rst |  20 ++++
>  lib/test_printf.c                         |   6 +
>  lib/vsprintf.c                            | 140 ++++++++++++++++++++++
>  3 files changed, 166 insertions(+)
> 
> diff --git a/Documentation/core-api/printk-formats.rst b/Documentation/core-api/printk-formats.rst
> index ff48b55040ef..8342a65eab0b 100644
> --- a/Documentation/core-api/printk-formats.rst
> +++ b/Documentation/core-api/printk-formats.rst
> @@ -412,6 +412,26 @@ Examples::
>  
>  Passed by reference.
>  
> +Time and date (struct rtc_time)
> +-------------------------------
> +
> +::
> +
> +	%ptR		YYYY-mm-dd HH:MM:SS
> +	%ptRd		YYYY-mm-dd
> +	%ptRt		HH:MM:SS
> +	%ptR[dt][rv]
> +
> +For printing date and time as represented by struct rtc_time structure in
> +human readable format.
> +
> +By default year will be incremented by 1900 and month by 1. Use %ptRr (raw)
> +to suppress this behaviour. On the other hand when %ptRv is applied
> +validation mechanism will be in use, i.e. numbers out of range will be
> +replaced by ** or ****.
> +
> +Passed by reference.
> +
>  struct clk
>  ----------
>  
> diff --git a/lib/test_printf.c b/lib/test_printf.c
> index 53527ea822b5..97b7d14961d6 100644
> --- a/lib/test_printf.c
> +++ b/lib/test_printf.c
> @@ -418,6 +418,11 @@ struct_va_format(void)
>  {
>  }
>  
> +static void __init
> +struct_rtc_time(void)
> +{
> +}
> +
>  static void __init
>  struct_clk(void)
>  {
> @@ -529,6 +534,7 @@ test_pointer(void)
>  	uuid();
>  	dentry();
>  	struct_va_format();
> +	struct_rtc_time();
>  	struct_clk();
>  	bitmap();
>  	netdev_features();
> diff --git a/lib/vsprintf.c b/lib/vsprintf.c
> index 37a54a6dd594..8455cbda8d6c 100644
> --- a/lib/vsprintf.c
> +++ b/lib/vsprintf.c
> @@ -30,6 +30,7 @@
>  #include <linux/ioport.h>
>  #include <linux/dcache.h>
>  #include <linux/cred.h>
> +#include <linux/rtc.h>
>  #include <linux/uuid.h>
>  #include <linux/of.h>
>  #include <net/addrconf.h>
> @@ -822,6 +823,20 @@ static const struct printf_spec default_dec_spec = {
>  	.precision = -1,
>  };
>  
> +static const struct printf_spec default_dec02_spec = {
> +	.base = 10,
> +	.field_width = 2,
> +	.precision = -1,
> +	.flags = ZEROPAD,
> +};
> +
> +static const struct printf_spec default_dec04_spec = {
> +	.base = 10,
> +	.field_width = 4,
> +	.precision = -1,
> +	.flags = ZEROPAD,
> +};
> +
>  static noinline_for_stack
>  char *resource_string(char *buf, char *end, struct resource *res,
>  		      struct printf_spec spec, const char *fmt)
> @@ -1549,6 +1564,127 @@ char *address_val(char *buf, char *end, const void *addr, const char *fmt)
>  	return special_hex_number(buf, end, num, size);
>  }
>  
> +static noinline_for_stack
> +char *date_str(char *buf, char *end, const struct rtc_time *tm, bool v, bool r)
> +{
> +	int year = tm->tm_year + (r ? 0 : 1900);
> +	int mon = tm->tm_mon + (r ? 0 : 1);
> +
> +	if (unlikely(v && (unsigned int)tm->tm_year > 200))
> +		buf = string(buf, end, "****", default_str_spec);

I think you should drop the validation option. This is only used in a
deprecated ABI and is mostly wrong as many RTCs will still be valid
after 2100.

> +	else
> +		buf = number(buf, end, year, default_dec04_spec);
> +
> +	if (buf < end)
> +		*buf = '-';
> +	buf++;
> +
> +	if (unlikely(v && (unsigned int)tm->tm_mon > 11))
> +		buf = string(buf, end, "**", default_str_spec);
> +	else
> +		buf = number(buf, end, mon, default_dec02_spec);
> +
> +	if (buf < end)
> +		*buf = '-';
> +	buf++;
> +
> +	if (unlikely(v && (unsigned int)tm->tm_mday > 31))
> +		buf = string(buf, end, "**", default_str_spec);

Same here, this doesn't protect February, April, June, September and
November. There is one RTC that think that 31st of November is valid.

> +	else
> +		buf = number(buf, end, tm->tm_mday, default_dec02_spec);
> +
> +	return buf;
> +}
> +
> +static noinline_for_stack
> +char *time_str(char *buf, char *end, const struct rtc_time *tm, bool v, bool r)
> +{
> +	if (unlikely(v && (unsigned int)tm->tm_hour > 24))
> +		buf = string(buf, end, "**", default_str_spec);
> +	else
> +		buf = number(buf, end, tm->tm_hour, default_dec02_spec);
> +
> +	if (buf < end)
> +		*buf = ':';
> +	buf++;
> +
> +	if (unlikely(v && (unsigned int)tm->tm_min > 59))
> +		buf = string(buf, end, "**", default_str_spec);
> +	else
> +		buf = number(buf, end, tm->tm_min, default_dec02_spec);
> +
> +	if (buf < end)
> +		*buf = ':';
> +	buf++;
> +
> +	if (unlikely(v && (unsigned int)tm->tm_sec > 59))
> +		buf = string(buf, end, "**", default_str_spec);

Some RTCs will consider 60 valid. So, really, instead of fixing all of
those, I'd just get rid of the validation option.

> +	else
> +		buf = number(buf, end, tm->tm_sec, default_dec02_spec);
> +
> +	return buf;
> +}
> +
> +static noinline_for_stack
> +char *rtc_str(char *buf, char *end, const struct rtc_time *tm, const char *fmt)
> +{
> +	bool have_t = true, have_d = true;
> +	bool validate = false;
> +	bool raw = false;
> +	int count = 2;
> +	bool found;
> +
> +	switch (fmt[count]) {
> +	case 'd':
> +		have_t = false;
> +		count++;
> +		break;
> +	case 't':
> +		have_d = false;
> +		count++;
> +		break;
> +	}
> +
> +	found = true;
> +	do {
> +		switch (fmt[count++]) {
> +		case 'r':
> +			raw = true;
> +			break;
> +		case 'v':
> +			validate = true;
> +			break;
> +		default:
> +			found = false;
> +			break;
> +		}
> +	} while (found);
> +
> +	if (have_d)
> +		buf = date_str(buf, end, tm, validate, raw);
> +	if (have_d && have_t) {
> +		if (buf < end)
> +			*buf = ' ';

I'd go for ISO 8601 and use a 'T' here.

> +		buf++;
> +	}
> +	if (have_t)
> +		buf = time_str(buf, end, tm, validate, raw);
> +
> +	return buf;
> +}
> +
> +static noinline_for_stack
> +char *timeanddate(char *buf, char *end, void *ptr, struct printf_spec spec,
> +		  const char *fmt)
> +{
> +	switch (fmt[1]) {
> +	case 'R':
> +		return rtc_str(buf, end, (const struct rtc_time *)ptr, fmt);
> +	default:
> +		return ptr_to_id(buf, end, ptr, spec);
> +	}
> +}
> +
>  static noinline_for_stack
>  char *clock(char *buf, char *end, struct clk *clk, struct printf_spec spec,
>  	    const char *fmt)
> @@ -1828,6 +1964,8 @@ char *device_node_string(char *buf, char *end, struct device_node *dn,
>   * - 'd[234]' For a dentry name (optionally 2-4 last components)
>   * - 'D[234]' Same as 'd' but for a struct file
>   * - 'g' For block_device name (gendisk + partition number)
> + * - 't[R][dt][rv]' For time and date as represented:
> + *      R    struct rtc_time
>   * - 'C' For a clock, it prints the name (Common Clock Framework) or address
>   *       (legacy clock framework) of the clock
>   * - 'Cn' For a clock, it prints the name (Common Clock Framework) or address
> @@ -1952,6 +2090,8 @@ char *pointer(const char *fmt, char *buf, char *end, void *ptr,
>  		return address_val(buf, end, ptr, fmt);
>  	case 'd':
>  		return dentry_name(buf, end, ptr, spec, fmt);
> +	case 't':
> +		return timeanddate(buf, end, ptr, spec, fmt);
>  	case 'C':
>  		return clock(buf, end, ptr, spec, fmt);
>  	case 'D':
> -- 
> 2.19.1
> 

-- 
Alexandre Belloni, Bootlin
Embedded Linux and Kernel engineering
https://bootlin.com
