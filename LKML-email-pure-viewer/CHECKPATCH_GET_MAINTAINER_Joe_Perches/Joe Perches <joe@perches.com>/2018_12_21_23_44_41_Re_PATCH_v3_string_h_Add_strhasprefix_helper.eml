Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:56:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 06CA358050C;
	Fri, 21 Dec 2018 15:44:52 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 15:44:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtuT1uRx2mTt4ZkTXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ekRL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWlPUNtRWSJfDI2z?=
 =?us-ascii?q?bYUPAPYPMulXoIf9vEMOoBmlCAmwBu7i0CNEimPs0KEn1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?naqNL1O7kPWu6v0qbI1ynMb/NI1jfm9YPFdRIhofaSUr9racre11MvGB/FjlqO?=
 =?us-ascii?q?sozpJS+a1uMIs2WC6edrSOGhi3Y/pg1vvjSiwt0ghpTHi44L0FzI6CZ0zJovKd?=
 =?us-ascii?q?C5SkN3edGpHZlKuy2HN4Z6X9kuT3xotSs00LELuZC2cS4Xw5o93RHfceaIc42Q?=
 =?us-ascii?q?7xLjSumRJTB4iWp7eLKwmRmy61Ksyu7iWcmu1lZFsC5FnsPLtnAX2Bzf8smHSv?=
 =?us-ascii?q?1j8Ue9wTuDyRzf5+VeLUwpm6fXNYQtzqMzm5YPq0jOHy37lF3zjKCMd0Uk/uao?=
 =?us-ascii?q?6/7gYrXjvpKcM450igfjMqUhg8C/Avo3MhIIX2eF/eSwzbrj/EP/QLpUlP07ib?=
 =?us-ascii?q?fZsJ/EKsQBvKK5ABFa0pwl6xmhCzeqytMYnWMILF5dYhKIk5DpO03SIPD/Ffq/?=
 =?us-ascii?q?h1WskDR1yPzcMbzhH47ALnzCkLfnYLZ85FRQyAs1zdBD+Z1UDqsNL+70Wk/0rN?=
 =?us-ascii?q?bYFAM2MxSow+b7D9VwzoMeVniOAq+FKqzStkWE5uIyI+aWYo8Vty3wK/wk5/7o?=
 =?us-ascii?q?kH84lkURfaiv3ZsLdn+4Gu5qLFmeYXrpmt0BC3sFvhIiTOz2j12PSSRcZ22yX6?=
 =?us-ascii?q?I75TE3EpimAp3BRo22hLyB3SG7HoBZZ2xcC1CMF2voeJuAW/sWdC2SJcphmCQe?=
 =?us-ascii?q?Vbe9U48hyQ2utAjixrpkNOXU/DcUtZbi1Ndv4e3Tmgo/9Th1D8SbzmGMQHt4nm?=
 =?us-ascii?q?IORz8qwq9/pVZxxUuE0ah9m/ZYD8Bc5+tVUgcmMp7R1/F1BMrsWg3fZNuJSEyp?=
 =?us-ascii?q?QtO9AT4vSNI9xNsOY0V4G9WmlR3D2yuqA7kIl72EHpA086Tc32TvKMZ50XrJyK?=
 =?us-ascii?q?4hj1w+SMtVKWKmnrJ/9xTUB4PRjkqWjbiqeroG0C7N7miDy3GOs19eUANrVaXF?=
 =?us-ascii?q?XHYfZlbZrNjj50PCSaOuBqojMgdb1cGCLa5KYMXzjVpaXPfjJMjeY2WplmesBB?=
 =?us-ascii?q?aIw7SMbJbqe2QdxindFFIIkwcJ/XaCNAg+ACihrnnaDDxvE1Lvfkzt/fN/qHO9?=
 =?us-ascii?q?Uk870QWKY1d92Lqy/x4fneacRO8L3rIYpCchrC15E0y5393IBNuPuQpgcL9Hbt?=
 =?us-ascii?q?Mg/VhIz2TZtw96Ppy+NK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23a6/Wx0vS38qM9qYO6PQ3sVPjvA6yG0om8nVn1cRV0n?=
 =?us-ascii?q?SG6pXLCgoSTYz+UkIt+xdmoLHaZzE355nI2n10Lam0rjjC1sozBOsk1hmvZc1f?=
 =?us-ascii?q?P76DFAPoFc0VGdKuKO0zl1e1dB0EOP1d+7AuP8OhcfuLw6qrPOdmnDK7gmVL+o?=
 =?us-ascii?q?F90kSQ9yViTu7ExYoKw/ad3gGfTTfzkE+hstzrmYBDfTwTHmu/xTLkBYJLfa1y?=
 =?us-ascii?q?YIALBHyqI822wNV+mpHsV2RZ9F6lG1MJxsupdQCOYFz62A1azV4XrmC/mSuk0z?=
 =?us-ascii?q?x0lCkkrqiF0yzUwOTidx0HNnRQRGZ4jlfsIom0j9YEU0iudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSr/yuRwa3znhH2?=
 =?us-ascii?q?tfwjA2bDWqupT/nxxnh2ORNndzrHzFec5uwRfT/sDTRflU3jAeXil3lSHXBkSg?=
 =?us-ascii?q?P9mu5diUlI3MsuGkW2KhS51cay/rzYybuSu/5G1qBwC/nv+plt3mFwg6zTH019?=
 =?us-ascii?q?1wWSrUqxb8Z5Hh176mPuJ/YkloGFj85tJ/GoF/kYs/nosc2HYEiZWO4XoIj33z?=
 =?us-ascii?q?Ps5F1qLkY3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4sQXRYf1nkjYc0/Qu7mMag/oSuAos1SidBrESHU9FPS3jjRiI?=
 =?us-ascii?q?7ta+rLlJa2ara7S/yE1+ndW5BrGYvg5cQGr5eoslHSJo9cpwKlXM0Hnu6o3+fN?=
 =?us-ascii?q?nQcMkethmVkxfGkuhUJ4g9lvsMhSp7J239uWcpxPI8jRxrxZu6ppSIK31x/KKl?=
 =?us-ascii?q?BR5VLj/1aNkW+j7zlqZShNqW05qsHpV8GTULQZ3oQuizED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTQ6mZ45CxmqxNH7?=
 =?us-ascii?q?f0d//DwR/Vn4qh1Dyu9zMxn/U2HfpBqnazsuSZifKgZW4R9G50vPLcOe6edzFT?=
 =?us-ascii?q?lC/pK9tAyNNnCbZwNQAGEJREOEBlPjPrqv5dXa8OiYHO2+L/TQbrWUtOxeTOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16tt?=
 =?us-ascii?q?qw8OnwVwL1+4SOC6FeMdFu+x2thaeDNuiQhDt2KDpC15MMw2PIx6Yb3FIIly5u?=
 =?us-ascii?q?cDytG6watSHRVKLQhrNXDxkDZiNvNctI6rgw0RVXNcHHitP6yLh4g+UxC1dEU1?=
 =?us-ascii?q?zhh86oadYLI2G7KFPIGkKLOK6aKj3MxsH9ebm8RqFIjOVIqx2wvi6WEk/5MTSF?=
 =?us-ascii?q?kjnpVhavPvlNjSGbJhNevo69fw1pCWjiStLmdxK6PMV2jT0w3b07mHfKOXQAPj?=
 =?us-ascii?q?h7dkMe5oGXuBhEj+tyHSR76WF5IOWY03KD6PLEJ5oKmfRsBShxlvkc5241neh7?=
 =?us-ascii?q?9iZBEd5ylWPqo8Rlo1y92r2NzTdPSBdUoTZGn8SAukA0avaRzYVJRXuRpEFF1m?=
 =?us-ascii?q?6XERlf4oI9UtA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CHAQDPeR1ch0O0hNFkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YNsJ4x1jSkUgQ2YLDITAYcwIjgSAQMBAQEBAQECARMBAQEIDQkIKS+COikBgmY?=
 =?us-ascii?q?BAQEBAgEBAnYFAQkBAQoYLgNUBhMFgx2BeggDAqdEhUGEZYw/F4F/hCOKYAKJe?=
 =?us-ascii?q?YFKhGUBN5BlCYIpj1iRXyyZcYFcgXdNIxWDJ5B8IDGBBAEBASCODgEB?=
X-IPAS-Result: =?us-ascii?q?A0CHAQDPeR1ch0O0hNFkHQEBBQEHBQGBZYNsJ4x1jSkUgQ2?=
 =?us-ascii?q?YLDITAYcwIjgSAQMBAQEBAQECARMBAQEIDQkIKS+COikBgmYBAQEBAgEBAnYFA?=
 =?us-ascii?q?QkBAQoYLgNUBhMFgx2BeggDAqdEhUGEZYw/F4F/hCOKYAKJeYFKhGUBN5BlCYI?=
 =?us-ascii?q?pj1iRXyyZcYFcgXdNIxWDJ5B8IDGBBAEBASCODgEB?=
X-IronPort-AV: E=Sophos;i="5.56,383,1539673200"; 
   d="scan'208";a="56183336"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 15:44:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733312AbeLUXoq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 18:44:46 -0500
Received: from smtprelay0247.hostedemail.com ([216.40.44.247]:32906 "EHLO
        smtprelay.hostedemail.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1729993AbeLUXoq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 18:44:46 -0500
Received: from filter.hostedemail.com (clb03-v110.bra.tucows.net [216.40.38.60])
        by smtprelay03.hostedemail.com (Postfix) with ESMTP id BBBEB837F243;
        Fri, 21 Dec 2018 23:44:44 +0000 (UTC)
X-Session-Marker: 6A6F6540706572636865732E636F6D
X-Spam-Summary: 2,0,0,,d41d8cd98f00b204,joe@perches.com,:::::::::::::::::,RULES_HIT:41:355:379:599:800:960:973:988:989:1260:1277:1311:1313:1314:1345:1359:1437:1515:1516:1518:1534:1541:1593:1594:1711:1730:1747:1777:1792:2110:2198:2199:2393:2553:2559:2562:2691:2828:3138:3139:3140:3141:3142:3353:3622:3865:3866:3867:3868:3870:3871:3872:3873:3874:4321:5007:6119:7903:10004:10400:10450:10455:10848:10967:11026:11232:11658:11914:12050:12296:12740:12760:12895:13069:13311:13357:13439:14096:14097:14181:14659:14721:19904:19999:21080:21324:21627:30054:30090:30091,0,RBL:47.151.153.53:@perches.com:.lbl8.mailshell.net-62.8.0.100 64.201.201.201,CacheIP:none,Bayesian:0.5,0.5,0.5,Netcheck:none,DomainCache:0,MSF:not bulk,SPF:fn,MSBL:0,DNSBL:neutral,Custom_rules:0:0:0,LFtime:26,LUA_SUMMARY:none
X-HE-Tag: crime30_8085851411b13
X-Filterd-Recvd-Size: 2862
Received: from XPS-9350.home (unknown [47.151.153.53])
        (Authenticated sender: joe@perches.com)
        by omf16.hostedemail.com (Postfix) with ESMTPA;
        Fri, 21 Dec 2018 23:44:43 +0000 (UTC)
Message-ID: <75e15c5d66ecd6964231be0f5b3cf702ac242bc1.camel@perches.com>
Subject: Re: [PATCH v3] string.h: Add str_has_prefix() helper
From: Joe Perches <joe@perches.com>
To: Steven Rostedt <rostedt@goodmis.org>
Cc: LKML <linux-kernel@vger.kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Tom Zanussi <zanussi@kernel.org>
Date: Fri, 21 Dec 2018 15:44:41 -0800
In-Reply-To: <20181221182507.2fdc756f@gandalf.local.home>
References: <20181221181316.6d32bdc8@gandalf.local.home>
         <b77cd7378434bf8ea804f2fd0caa662b9b7d07f0.camel@perches.com>
         <20181221182507.2fdc756f@gandalf.local.home>
Content-Type: text/plain; charset="ISO-8859-1"
User-Agent: Evolution 3.30.1-1build1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, 2018-12-21 at 18:25 -0500, Steven Rostedt wrote:
> On Fri, 21 Dec 2018 15:19:33 -0800
> Joe Perches <joe@perches.com> wrote:
> 
> > I believe this should be bool.
> > 
> > I don't find a use for non-zero assigned len value in the kernel
> > for strncmp and I believe the function should simply be:
> > 
> > static inline bool str_has_prefix(const char *str, const char prefix[])
> > {
> > 	return !strncmp(str, prefix, strlen(prefix));
> > }
> 
> diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c
[]
> @@ -172,8 +172,8 @@ cache_type_store(struct device *dev, struct device_attribute *attr,
>  		 * it's not worth the risk */
>  		return -EINVAL;
>  
> -	if (strncmp(buf, temp, sizeof(temp) - 1) == 0) {
> -		buf += sizeof(temp) - 1;
> +	if ((len = str_has_prefix(buf, temp))) {
> +		buf += len;

That's not really a use of the non-zero strncmp return value.

You are attempting an optimization not already done.
I also wonder if it's actually an optimization as the
return value may not be precomputed.

Also the assignment in the test isn't preferred style.

> And there's more places like this.

Any where the non-zero return value is actually used?

> > It's hard to believe __always_inline vs inline matters 
> > for any single line function.
> 
> I've been burnt by gcc deciding to not inline single functions before.

Complex single functions sure, but single line inlines?
I haven't seen that externed anywhere.

Today no inline function is marked __always_inline in
string.h

I don't doubt there should be some standardization
of inline vs __always_inline in the kernel, but this
right now seems different just for difference sake.

cheers, Joe

