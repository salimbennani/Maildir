Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:58:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EE4B0580375
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 12:24:59 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 12:24:59 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AakBzYxL6a7DaJuZWEdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXK/T7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQsleWCNPDJ28?=
 =?us-ascii?q?YYQNAeoOM+hWoYrgqVsWrxawBwahCP7hxzNUmHD2xrY30/g4EQzcwAAsA8gDvX?=
 =?us-ascii?q?bSod7oNKkSS+e1zKzQwDvEbvNZxTf955LWfRAlvPqCQbVwcdbRyUIyEA7Fi0if?=
 =?us-ascii?q?qZbiPzOJ1uQAqGyb7+tmVeKyhG8rsR9xoj6xyccwkIXJh5kaylXe+Splx4Y1IM?=
 =?us-ascii?q?S1RUhmatCqF5tQsjuVN4pwQs46WG5npjw6yqcctp69cygF1o4ryALYa/yCa4SI?=
 =?us-ascii?q?7BbjVOeNLjd7nnJpYq6whxG38US4zu38V9K70EhLripfjtnArHcN1wbc6sSfVP?=
 =?us-ascii?q?R9+Fuh1iyJ1wDc7uFLP1k4lbLbK54m3r4wkYAfsUPZHi/5gEn2jamWdl44+uey?=
 =?us-ascii?q?5OTneK/pppqGO4BojQH+N6IjkdG8D+QgKgUCQXSX9Oem2LH+4EH0Q69GguM4n6?=
 =?us-ascii?q?TZqpzWOMYWqra9DgNP0osu5QyzAyqk3dkch3ULMVZIdRCBgoP0IV/BOur4Au26?=
 =?us-ascii?q?g1m0kDdk2fTGPrr5D5XJL3jDi6vhfa1n505Tzgoz0MpT55VOCrEOOP7zW0nxu8?=
 =?us-ascii?q?LEDhIhLQC43+XqBM9g2o8DWm+DGLGVPa3SvFOS++4iIfGAZIoPtzb8L/gl6eTu?=
 =?us-ascii?q?jXg8mVIFZKmmw54XaG2hEvt7PUqZf2TjgtMYHWgRuQo+Uerqh0GcXj5IYHqyW6?=
 =?us-ascii?q?M85jIlB468AobDW5iggLiA3Ce9A51XaXpKClGKEXf0aYqEX+0AZz6VIs9kiTEE?=
 =?us-ascii?q?U7+hS4ku1RGoqQ/20b1nLvDb+iEAr5LsyMB15/HPlRE17TF0C8Wd02KTQG1ukW?=
 =?us-ascii?q?IIWiQ73KR+oUx711eC3rJ0g/1eFdxP+fxJVh02OoLbz+x/WJjPXBncdIKJVEq+?=
 =?us-ascii?q?WYfhRjUwVc4qhdkJZUl7BpOllB+E2iOrB7ockfuMHIA19aTHmGH8Its4x3vY2a?=
 =?us-ascii?q?1ysl89X8EaMGSngrJ4pRHeApOMn0iHmqLvb6kFwSPW6E+FymyBulweVxR/Br7Y?=
 =?us-ascii?q?V3ISbVeDsNLi+0nZRKWvA7l0DgwU5ceEK6ZOXeWvun9LXu3qPttfKza7ln2qDB?=
 =?us-ascii?q?CHy5uWYYbqcnlb1yLYXgxMqAkW8HuGfSojDD2opSqKFzVrGF/vS0/l4O9/uDWw?=
 =?us-ascii?q?SUpinC+QaEg08ru++hcYgbSmTO8TluYBtD0mtzVcGFe7wsKQFdyNu0xgdqAaat?=
 =?us-ascii?q?Q4tgQUnVnFvhBwa8TzZ5tpgUQTJkEu5xvj?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0C3AQDRMghchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTAlgRSBKYN5hQWDc4svgg18jRGLNQ8BARgHDYQ7AwKDEyI3Bg0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECDxEjCiIHA?=
 =?us-ascii?q?wMBAgYBAQoVAwICIgQCAgMBQxAGARIFHYJ/AYF5CAECAgqbYYlYAQEBboEviiY?=
 =?us-ascii?q?FgQuLExeBf4ERM4IqBy6DHgKBYYMEglcCiSkGMoZQUI9VCYcDilcKkSWJCYxAg?=
 =?us-ascii?q?w4CBAYFAhMBgVyBdzMaCBsVeAUGVoFOglCDOIUUhV5TgQIFIROHUyspgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0C3AQDRMghchxHrdtBkHAEBAQQBAQcEAQGBVAQBAQsBgTA?=
 =?us-ascii?q?lgRSBKYN5hQWDc4svgg18jRGLNQ8BARgHDYQ7AwKDEyI3Bg0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECDxEjCiIHAwMBAgYBAQoVAwI?=
 =?us-ascii?q?CIgQCAgMBQxAGARIFHYJ/AYF5CAECAgqbYYlYAQEBboEviiYFgQuLExeBf4ERM?=
 =?us-ascii?q?4IqBy6DHgKBYYMEglcCiSkGMoZQUI9VCYcDilcKkSWJCYxAgw4CBAYFAhMBgVy?=
 =?us-ascii?q?BdzMaCBsVeAUGVoFOglCDOIUUhV5TgQIFIROHUyspgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="43731137"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 12:24:58 -0800
Received: from localhost ([::1]:36587 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUdj7-00088X-RR
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 15:24:57 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43306)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mdroth@linux.vnet.ibm.com>) id 1gUdix-00088C-NE
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 15:24:49 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mdroth@linux.vnet.ibm.com>) id 1gUdit-00036u-PB
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 15:24:47 -0500
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:38772)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mdroth@linux.vnet.ibm.com>)
	id 1gUdit-00036O-GT
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 15:24:43 -0500
Received: from pps.filterd (m0098396.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id
	wB5KOUGQ133459
	for <qemu-devel@nongnu.org>; Wed, 5 Dec 2018 15:24:42 -0500
Received: from e15.ny.us.ibm.com (e15.ny.us.ibm.com [129.33.205.205])
	by mx0a-001b2d01.pphosted.com with ESMTP id 2p6kwn4wyy-1
	(version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
	for <qemu-devel@nongnu.org>; Wed, 05 Dec 2018 15:24:41 -0500
Received: from localhost
	by e15.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
	Violators will be prosecuted
	for <qemu-devel@nongnu.org> from <mdroth@linux.vnet.ibm.com>;
	Wed, 5 Dec 2018 20:24:40 -0000
Received: from b01cxnp22033.gho.pok.ibm.com (9.57.198.23)
	by e15.ny.us.ibm.com (146.89.104.202) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	(version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
	Wed, 5 Dec 2018 20:24:37 -0000
Received: from b01ledav005.gho.pok.ibm.com (b01ledav005.gho.pok.ibm.com
	[9.57.199.110])
	by b01cxnp22033.gho.pok.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
	wB5KOa3B18153472
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=FAIL); Wed, 5 Dec 2018 20:24:36 GMT
Received: from b01ledav005.gho.pok.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 76C92AE05C;
	Wed,  5 Dec 2018 20:24:36 +0000 (GMT)
Received: from b01ledav005.gho.pok.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4FDA3AE064;
	Wed,  5 Dec 2018 20:24:36 +0000 (GMT)
Received: from localhost (unknown [9.53.179.197])
	by b01ledav005.gho.pok.ibm.com (Postfix) with ESMTP;
	Wed,  5 Dec 2018 20:24:36 +0000 (GMT)
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
To: =?utf-8?q?Daniel_P=2E_Berrang=C3=A9?= <berrange@redhat.com>,
	Sameeh Jubran <sameeh@daynix.com>
From: Michael Roth <mdroth@linux.vnet.ibm.com>
In-Reply-To: <20181205171818.GA1136@redhat.com>
References: <20181025140631.634922-1-sameeh@daynix.com>
	<20181205171818.GA1136@redhat.com>
User-Agent: alot/0.7
Date: Wed, 05 Dec 2018 14:24:32 -0600
X-TM-AS-GCONF: 00
x-cbid: 18120520-0068-0000-0000-0000036CE165
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010177; HX=3.00000242; KW=3.00000007;
	PH=3.00000004; SC=3.00000270; SDB=6.01127478; UDB=6.00585631;
	IPR=6.00907612; 
	MB=3.00024464; MTD=3.00000008; XFM=3.00000015; UTC=2018-12-05 20:24:39
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18120520-0069-0000-0000-000046AA4804
Message-Id: <154404147264.6063.14869520867110106084@sif>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
	definitions=2018-12-05_08:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	priorityscore=1501
	malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
	clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
	mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
	scancount=1 engine=8.0.1-1810050000 definitions=main-1812050179
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 148.163.156.1
Subject: Re: [Qemu-devel] [RFC 0/2] Attempt to implement the standby feature
 for assigned network devices
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Yan Vugenfirer <yan@daynix.com>, Jason Wang <jasowang@redhat.com>,
	qemu-devel@nongnu.org, Eduardo Habkost <ehabkost@redhat.com>,
	"Michael S . Tsirkin" <mst@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Quoting Daniel P. Berrang=C3=A9 (2018-12-05 11:18:18)
> On Thu, Oct 25, 2018 at 05:06:29PM +0300, Sameeh Jubran wrote:
> > From: Sameeh Jubran <sjubran@redhat.com>
> > =

> > Hi all,
> > =

> > Background:
> > =

> > There has been a few attempts to implement the standby feature for vfio
> > assigned devices which aims to enable the migration of such devices. Th=
is
> > is another attempt.
> > =

> > The series implements an infrastructure for hiding devices from the bus
> > upon boot. What it does is the following:
> > =

> > * In the first patch the infrastructure for hiding the device is added
> >   for the qbus and qdev APIs. A "hidden" boolean is added to the device
> >   state and it is set based on a callback to the standby device which
> >   registers itself for handling the assessment: "should the primary dev=
ice
> >   be hidden?" by cross validating the ids of the devices.
> > =

> > * In the second patch the virtio-net uses the API to hide the vfio
> >   device and unhides it when the feature is acked.
> =

> IIUC, the general idea is that we want to provide a pair of associated NIC
> devices to the guest, one emulated, one physical PCI device. The guest wo=
uld
> put them in a bonded pair. Before migration the PCI device is unplugged &=
 a
> new PCI device plugged on target after migration. The guest traffic conti=
nues
> without interuption due to the emulate device.
> =

> This kind of conceptual approach can already be implemented today by mana=
gement
> apps. The only hard problem that exists today is how the guest OS can fig=
ure
> out that a particular pair of devices it has are intended to be used toge=
ther. =

> =

> With this series, IIUC, the virtio-net device is getting a given property=
 which
> defines the qdev ID of the associated VFIO device. When the guest OS acti=
vates
> the virtio-net device and acknowledges the STANDBY feature bit, qdev then
> unhides the associated VFIO device.
> =

> AFAICT the guest has to infer that the device which suddenly appears is t=
he one
> associated with the virtio-net device it just initialized, for purposes of
> setting up the NIC bonding. There doesn't appear to be any explicit assoc=
ation
> between the devices exposed to the guest.
> =

> This feels pretty fragile for a guest needing to match up devices when th=
ere
> are many pairs of devices exposed to a single guest.

The impression I get from linux.git:Documentation/networking/net_failover.r=
st =

is that the matching is done based on the primary/standby NICs having
the same MAC address. In theory you pass both to a guest and based on
MAC it essentially does automatic, and if you additionally add STANDBY
it'll know to use a virtio-net device specifically for failover.

None of this requires any sort of hiding/plugging of devices from
QEMU/libvirt (except for the VFIO unplug we'd need to initiate live migrati=
on
and the VFIO hotplug on the other end to switch back over).

That simplifies things greatly, but also introduces the problem of how
an older guest will handle seeing 2 NICs with the same MAC, which IIUC
is why this series is looking at hotplugging the VFIO device only after
we confirm STANDBY is supported by the virtio-net device, and why it's
being done transparent to management.

> =

> Unless I'm mis-reading the patches, it looks like the VFIO device always =
has
> to be available at the time QEMU is started. There's no way to boot a gue=
st
> and then later hotplug a VFIO device to accelerate the existing virtio-ne=
t NIC.
> Or similarly after migration there might not be any VFIO device available
> initially when QEMU is started to accept the incoming migration. So it mi=
ght
> need to run in degraded mode for an extended period of time until one bec=
omes
> available for hotplugging. The use of qdev IDs makes this troublesome, as=
 the
> qdev ID of the future VFIO device would need to be decided upfront before=
 it
> even exists.

> =

> So overall I'm not really a fan of the dynamic hiding/unhiding of devices=
. I
> would much prefer to see some way to expose an explicit relationship betw=
een
> the devices to the guest.

If we place the burden of determining whether the guest supports STANDBY
on the part of users/management, a lot of this complexity goes away. For
instance, one possible implementation is to simply fail migration and say
"sorry your VFIO device is still there" if the VFIO device is still around
at the start of migration (whether due to unplug failure or a
user/management forgetting to do it manually beforehand).

So how important is it that setting F_STANDBY cap doesn't break older
guests? If the idea is to support live migration with VFs then aren't
we still dead in the water if the guest boots okay but doesn't have
the requisite functionality to be migrated later? Shouldn't that all
be sorted out as early as possible? Is a very clear QEMU error message
in this case insufficient?

And if backward compatibility is important, are there alternative
approaches? Like maybe starting off with a dummy MAC and switching over
to the duplicate MAC only after F_STANDBY is negotiated? In that case
we could still warn users/management about it but still have the guest
be otherwise functional.

> =

> > Disclaimers:
> > =

> > * I have only scratch tested this and from qemu side, it seems to be
> >   working.
> > * This is an RFC so it lacks some proper error handling in few cases
> >   and proper resource freeing. I wanted to get some feedback first
> >   before it is finalized.
> > =

> > Command line example:
> > =

> > /home/sameeh/Builds/failover/qemu/x86_64-softmmu/qemu-system-x86_64 \
> > -netdev tap,id=3Dhostnet0,script=3Dworld_bridge_standalone.sh,downscrip=
t=3Dno,ifname=3Dcc1_71 \
> > -netdev tap,vhost=3Don,id=3Dhostnet1,script=3Dworld_bridge_standalone.s=
h,downscript=3Dno,ifname=3Dcc1_72,queues=3D4 \
> > -device virtio-net,host_mtu=3D1500,netdev=3Dhostnet1,id=3Dcc1_72,vector=
s=3D10,mq=3Don,primary=3Dcc1_71 \
> > -device e1000,netdev=3Dhostnet0,id=3Dcc1_71,standby=3Dcc1_72 \
> > =

> > Migration support:
> > =

> > Pre migration or during setup phase of the migration we should send an
> > unplug request to the guest to unplug the primary device. I haven't had
> > the chance to implement that part yet but should do soon. Do you know
> > what's the best approach to do so? I wanted to have a callback to the
> > virtio-net device which tries to send an unplug request to the guest and
> > if succeeds then the migration continues. It needs to handle the case w=
here
> > the migration fails and then it has to replug the primary device back.
> =

> Having QEMU do this internally gets into a world of pain when you have
> multiple devices in the guest.
> =

> Consider if we have 2 pairs of devices. We unplug one VFIO device, but
> unplugging the second VFIO device fails, thus we try to replug the first
> VFIO device but this now fails too. We don't even get as far as starting
> the migration before we have to return an error.
> =

> The mgmt app will just see that the migration failed, but it will not
> be sure which devices are now actually exposed to the guest OS correctly.
> =

> The similar problem hits if we started the migration data stream, but
> then had to abort and so need to tear try to replug in the source but
> failed for some reasons.
> =

> Doing the VFIO device plugging/unplugging explicitly from the mgmt app
> gives that mgmt app direct information about which devices have been
> successfully made available to the guest at all time, becuase the mgmt
> app can see the errors from each step of the process.  Trying to do
> this inside QEMU doesn't achieve anything the mgmt app can't already
> do, but it obscures what happens during failures.  The same applies at
> the libvirt level too, which is why mgmt apps today will do the VFIO
> unplug/replug either side of migration themselves.
> =

> =

> Regards,
> Daniel
> -- =

> |: https://berrange.com      -o-    https://www.flickr.com/photos/dberran=
ge :|
> |: https://libvirt.org         -o-            https://fstop138.berrange.c=
om :|
> |: https://entangle-photo.org    -o-    https://www.instagram.com/dberran=
ge :|
>=20


