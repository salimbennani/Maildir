Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:42:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7BE215802E4;
	Wed, 28 Nov 2018 03:29:48 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 03:29:48 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AYMw3bhDHg1fRrzcqPPQ8UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/o8mwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95SWSJcAo2y?=
 =?us-ascii?q?cYUBAOgPPelEoYbyqFQArQCmBQSuH+7v1j1Fi2Xq0aEmyeksEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqEPUe+uy6nIyDTDb+lL0jnh6YjIdAwhru+IXbltdsfRzUovFx7DjlqN?=
 =?us-ascii?q?s4zqJTCV2/8Ts2WV9eZgTuGvhnchpgpsoTav3t8hhpfVio8R0FzI6Ct0zJgvKd?=
 =?us-ascii?q?GlS0N3fcSoHZpSui2CKYd6X80vT3t1tCs4yrAKo5C2cSoQxJg62xLSbeGMfZKS?=
 =?us-ascii?q?7RL5TumRJC91hHJ7d7K7gBa/6VagyuLiWcmuylpKrTRKksPKtn8T0xzf8M+HSu?=
 =?us-ascii?q?Fy/ku52DaP0R7c6v1cLEwqiabWL4QtzqM+m5YNq0jPAyz7lFnsgKKXdEgo4u2o?=
 =?us-ascii?q?5P7mYrXiqJ+cLYh0igTmP6Qqm8y/B/k4MwcXU2iY5+u8zrvj8lP9QLlTif03nK?=
 =?us-ascii?q?/Zv47AJckAuK65DBFa0pw55xa8ETimytIYkmcDLF5ffxKHlYfpN0nUIP/kFfe/?=
 =?us-ascii?q?n0iskDBzyvDCP73hAYvCImLMkbf8Zrt9709cyAwuzdFQ/Z5UC7cBIO7tVU/1rt?=
 =?us-ascii?q?DXEhg5Mwmsyeb9FNp9zp8eWX6IAqKBMKPdq16I5v41LOmLfoMVuCv9JOIj5/7h?=
 =?us-ascii?q?lnI5nV4dfa+03ZoYcny4H/JmI1mHbnromNsODWAKvg8mRuzwlFKCSSJTZ2q1X6?=
 =?us-ascii?q?8k5DE7D5ypAZ3ARoCqhryB2iC7E4ZSZmBHDFCMDHjpe5+FW/cKdCKdPMthniYY?=
 =?us-ascii?q?WrimTo8rzQuuuxPiy7p7MurU/TUVuoj41Nh14O3Tlgs+9SZuAMSfyGyNS2B0nm?=
 =?us-ascii?q?UVRz45xqx/oEp9ykud3qh8mfBXCdtT5/ZRWAcgKZHc1/B6C8z1Wg/ZfdeGUlCm?=
 =?us-ascii?q?Ts+iATEwVN0xxdAObl15G9WjiBDDwiWrD6UUl7yNGJw77Kbc02LtKMZ6znbMzL?=
 =?us-ascii?q?MhgEU+QstTKW2mgbZy+BXJCI7XjUqVjaaqer4a3C7W6miDy22CvEVbUA51VaXI?=
 =?us-ascii?q?RnQfZkrQrdTk6ULOVb6uCbI7MgRfzc6OMLdFatrsjV9eXvfsJMzeY36tm2e3HR?=
 =?us-ascii?q?uH26mDbJT0dGkH3CXSEk4EkxsN8naALgU+Aiaho2TDDD1hD17vYkXs8fVgp3O/?=
 =?us-ascii?q?VEM70waKb0h53bqv5hEVneCcS+8U3r8cpCchqjB0HFGh39LWC9uMvRZhcL9bYd?=
 =?us-ascii?q?Mn5FdH1GTZtwNmM5ykLqBigEMecgtts0Pv0RV3FptPkcwwoHw2ywpyLLqS0Eld?=
 =?us-ascii?q?eDOAwZDwJrrXJ3Ho8xCrdaHX1U/R0daM9qgU9fQ3tk/svAeqFkol7XVqyN1V03?=
 =?us-ascii?q?qa5pXXAwseS5PxUkAr9xdko7HWeDUy54TR1Xd0K6m7rifC2841BOsi0huhf8pf?=
 =?us-ascii?q?PLmYGwPoEswaB9KhKOolm1WyahIEPeZS9LM7Ps+8dvuG3rKrM/hknD68kWtH54?=
 =?us-ascii?q?V92FqW9yVgUu7Iw4oFw/aA0wudVjfzkE2ustrqloBDfz0SGHSwyTLlBIJIeqJ9?=
 =?us-ascii?q?Z4ILBnqwLM2twdV+gYXgW3pZ9F6lGlMH19WleRuUb1zhwwJQ0V4brmCgmSu91z?=
 =?us-ascii?q?Z0iS0mrrKD3CzSxOTvbBoGOm9RSGhil1vsOpW0j9YBUUisbggpkgal5Engy6ha?=
 =?us-ascii?q?oqR/M3fcQUNScyfqKGFiV7O6tqCebM5X9JMorSJXXfy+YV+AUL79oBga0yT5E2?=
 =?us-ascii?q?tF3j87dDKqupT/nxNkjmKQN3JzrHvfecFtyhbT/t3cRfhN3jUYQCl0kyXYBl+5?=
 =?us-ascii?q?P9Ox59Wbi4/DsvyiV2KmTpBScTPkzYSauCu55G1qBwayn/Symt3hDAg73jX319?=
 =?us-ascii?q?hsVSXUshn8ZpPn2Li9MeJiZkNoHkPz69JmGoFilYs9nJIQ1mIbhpmP/XoHjH38?=
 =?us-ascii?q?MdNU2a/laHoNRDgLw8Pa4QT/2U1jKG6JyJz9VnmH3sRhYNy6aHsM2i0h98BKFL?=
 =?us-ascii?q?uU7LtckCtwo1q4rhjebeJznzgD0vsu9GAVg/sStwUz1CWdDasfHU1ZPSzqihSJ?=
 =?us-ascii?q?4MqyrKRRZGazb7ew0FByksymDLGHugtcQmr2eo8+HS9s6cVyKE7M0Hr26o3+ed?=
 =?us-ascii?q?jfd9QTtgCPkxfbjuhYM5YxlvsMhSp6NmPxp3wly+gnjRNw2ZG2ppSIK2Jo/Kih?=
 =?us-ascii?q?GB5XKiX1Z98P+jHqlatRhdyZ34erHpV8ADkLWIboQOmsEDITs/TnKgmPHCc9qn?=
 =?us-ascii?q?edBbrQAwuf5F16oHLIFpChL2uXK2UBzdV+WBmdI1RSgAIOUzU/gJE5DRqmxND7?=
 =?us-ascii?q?fEd6+zAR5UP4qh1WxeJzLBT/VmbfpAG1ajY7UpSfLRxW7h1c6EfRK8CR8uVzHy?=
 =?us-ascii?q?RA9J27sAONMnCbZxhPDWwRWk2EAE3jPqCz5dba9eiUHPG+L/zIYbWBsuFeU/aI?=
 =?us-ascii?q?xZSy0opp5TqMN8OPPmV8AP0/wEZMQXd5G8HBkTUVVyMXjz7Nb9KcpBqk+i14sM?=
 =?us-ascii?q?G/8PfoWALu/4ePCKFSMdJg+x+om6eDKvWQiT19KTZZ0JMM2HDJxKIe3F4UlyFh?=
 =?us-ascii?q?aT2tHa4cui7KSaLagrVXAAIDayNvKMtI6Lox0RNQOcHAkNP6yL55guQxC1dETl?=
 =?us-ascii?q?HhnsCpZcoXI2CyLl/HBUCLNKiYKj3P2c34faS8SbhIhuVOqxKwoSqbE1PkPjmb?=
 =?us-ascii?q?iznpVhWvPftQgy2BIBNeuJ+ychB2BGjnTdLmbAC7MdBtgT03x700mm3FNWoGPT?=
 =?us-ascii?q?dgdENNq6Wa7TlEjfVnB2xB8n1lIPGEmimD6enYL5cWsf1zDSV1l+JV+nI6y7RO?=
 =?us-ascii?q?4SFARfx1njbSr9F0r1GnlOmP1iRoUB5UpjlXg4KLuBYqBaKMzZBDUGzFtDsM6X?=
 =?us-ascii?q?iLQ0ARrthsENypsqFU18PnlaHybjlDpYH658wZUuzJIsWCMWBpCxvvBDPQRF8B?=
 =?us-ascii?q?TiOtOXvWhGRDy7eJ9SvG/dABtpHwlc9WGfdgX1svG6ZfUxw9EQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CCAQAle/5bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N5iHeLKlIGgTUUiQqOOIFfLBMBh2oiOBIBAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpL4I2JAGCYgECAwECIARSBgkBAQoYAgImAgIDVAYTBYMcgXUNBAGmKXwzh?=
 =?us-ascii?q?UGFB4ELiwoXeIEHhCOEZQWDG4JXAosXhFCFXopWCZFJkRUsmUI3gXYzGggwgye?=
 =?us-ascii?q?CJxeOHj8BMYECAwEBIROMRQEB?=
X-IPAS-Result: =?us-ascii?q?A0CCAQAle/5bh0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N5iHe?=
 =?us-ascii?q?LKlIGgTUUiQqOOIFfLBMBh2oiOBIBAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCY?=
 =?us-ascii?q?gECAwECIARSBgkBAQoYAgImAgIDVAYTBYMcgXUNBAGmKXwzhUGFB4ELiwoXeIE?=
 =?us-ascii?q?HhCOEZQWDG4JXAosXhFCFXopWCZFJkRUsmUI3gXYzGggwgyeCJxeOHj8BMYECA?=
 =?us-ascii?q?wEBIROMRQEB?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="53645237"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 03:29:46 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728050AbeK1WbC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 17:31:02 -0500
Received: from shell.v3.sk ([90.176.6.54]:37728 "EHLO shell.v3.sk"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727476AbeK1WbC (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 17:31:02 -0500
Received: from localhost (localhost [127.0.0.1])
        by zimbra.v3.sk (Postfix) with ESMTP id 151F2989A3;
        Wed, 28 Nov 2018 12:29:39 +0100 (CET)
Received: from shell.v3.sk ([127.0.0.1])
        by localhost (zimbra.v3.sk [127.0.0.1]) (amavisd-new, port 10032)
        with ESMTP id X0_dvJbXB4v5; Wed, 28 Nov 2018 12:29:36 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by zimbra.v3.sk (Postfix) with ESMTP id C18BB989B2;
        Wed, 28 Nov 2018 12:29:35 +0100 (CET)
X-Virus-Scanned: amavisd-new at zimbra.v3.sk
Received: from shell.v3.sk ([127.0.0.1])
        by localhost (zimbra.v3.sk [127.0.0.1]) (amavisd-new, port 10026)
        with ESMTP id efbIHuhGnyHC; Wed, 28 Nov 2018 12:29:35 +0100 (CET)
Received: from belphegor (nat-pool-brq-t.redhat.com [213.175.37.10])
        by zimbra.v3.sk (Postfix) with ESMTPSA id A66AB989A3;
        Wed, 28 Nov 2018 12:29:34 +0100 (CET)
Message-ID: <868bd721260bc8948835fe2a697a047ae2277cd0.camel@v3.sk>
Subject: Re: [PATCH v3 03/14] media: ov7670: hook s_power onto v4l2 core
From: Lubomir Rintel <lkundrak@v3.sk>
To: Sakari Ailus <sakari.ailus@iki.fi>
Cc: Mauro Carvalho Chehab <mchehab@kernel.org>,
        Jonathan Corbet <corbet@lwn.net>, linux-media@vger.kernel.org,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
        James Cameron <quozl@laptop.org>, Pavel Machek <pavel@ucw.cz>,
        Libin Yang <lbyang@marvell.com>,
        Albert Wang <twang13@marvell.com>
Date: Wed, 28 Nov 2018 12:29:33 +0100
In-Reply-To: <20181122122146.a6wydozsg676i3w7@valkosipuli.retiisi.org.uk>
References: <20181120100318.367987-1-lkundrak@v3.sk>
         <20181120100318.367987-4-lkundrak@v3.sk>
         <20181122122146.a6wydozsg676i3w7@valkosipuli.retiisi.org.uk>
Content-Type: text/plain; charset="UTF-8"
User-Agent: Evolution 3.30.2 (3.30.2-2.fc29) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 2018-11-22 at 14:21 +0200, Sakari Ailus wrote:
> Hi Lubomir,
> 
> On Tue, Nov 20, 2018 at 11:03:08AM +0100, Lubomir Rintel wrote:
> > The commit 71862f63f351 ("media: ov7670: Add the ov7670_s_power function")
> > added a power control routing. However, it was not good enough to use as
> > a s_power() callback: it merely flipped on the power GPIOs without
> > restoring the register settings.
> > 
> > Fix this now and register an actual power callback.
> > 
> > Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
> > 
> > ---
> > Changes since v2:
> > - Restore the controls, format and frame rate on power on
> > 
> >  drivers/media/i2c/ov7670.c | 50 +++++++++++++++++++++++++++++++++-----
> >  1 file changed, 44 insertions(+), 6 deletions(-)
> > 
> > diff --git a/drivers/media/i2c/ov7670.c b/drivers/media/i2c/ov7670.c
> > index ead0c360df33..cbaab60aaaac 100644
> > --- a/drivers/media/i2c/ov7670.c
> > +++ b/drivers/media/i2c/ov7670.c
> > @@ -242,6 +242,7 @@ struct ov7670_info {
> >  	struct ov7670_format_struct *fmt;  /* Current format */
> >  	struct ov7670_win_size *wsize;
> >  	struct clk *clk;
> > +	int on;
> >  	struct gpio_desc *resetb_gpio;
> >  	struct gpio_desc *pwdn_gpio;
> >  	unsigned int mbus_config;	/* Media bus configuration flags */
> > @@ -1615,19 +1616,54 @@ static int ov7670_s_register(struct v4l2_subdev *sd, const struct v4l2_dbg_regis
> >  }
> >  #endif
> >  
> > -static int ov7670_s_power(struct v4l2_subdev *sd, int on)
> > +static void ov7670_power_on(struct v4l2_subdev *sd)
> >  {
> >  	struct ov7670_info *info = to_state(sd);
> >  
> > +	if (info->on)
> > +		return;
> > +
> >  	if (info->pwdn_gpio)
> > -		gpiod_set_value(info->pwdn_gpio, !on);
> > -	if (on && info->resetb_gpio) {
> > +		gpiod_set_value(info->pwdn_gpio, 0);
> > +	if (info->resetb_gpio) {
> >  		gpiod_set_value(info->resetb_gpio, 1);
> >  		usleep_range(500, 1000);
> >  		gpiod_set_value(info->resetb_gpio, 0);
> >  		usleep_range(3000, 5000);
> >  	}
> >  
> > +	info->on = true;
> > +}
> > +
> > +static void ov7670_power_off(struct v4l2_subdev *sd)
> > +{
> > +	struct ov7670_info *info = to_state(sd);
> > +
> > +	if (!info->on)
> > +		return;
> > +
> > +	if (info->pwdn_gpio)
> > +		gpiod_set_value(info->pwdn_gpio, 1);
> > +
> > +	info->on = false;
> > +}
> > +
> > +static int ov7670_s_power(struct v4l2_subdev *sd, int on)
> > +{
> > +	struct ov7670_info *info = to_state(sd);
> > +
> > +	if (info->on == on)
> > +		return 0;
> > +
> > +	if (on) {
> > +		ov7670_power_on (sd);
> > +		ov7670_apply_fmt(sd);
> > +		ov7675_apply_framerate(sd);
> > +		v4l2_ctrl_handler_setup(&info->hdl);
> > +	} else {
> > +		ov7670_power_off (sd);
> > +	}
> > +
> >  	return 0;
> >  }
> >  
> > @@ -1660,6 +1696,7 @@ static int ov7670_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
> >  static const struct v4l2_subdev_core_ops ov7670_core_ops = {
> >  	.reset = ov7670_reset,
> >  	.init = ov7670_init,
> > +	.s_power = ov7670_s_power,
> >  #ifdef CONFIG_VIDEO_ADV_DEBUG
> >  	.g_register = ov7670_g_register,
> >  	.s_register = ov7670_s_register,
> > @@ -1825,6 +1862,7 @@ static int ov7670_probe(struct i2c_client *client,
> >  		else
> >  			return ret;
> >  	}
> > +
> >  	if (info->clk) {
> >  		ret = clk_prepare_enable(info->clk);
> >  		if (ret)
> > @@ -1841,7 +1879,7 @@ static int ov7670_probe(struct i2c_client *client,
> >  	if (ret)
> >  		goto clk_disable;
> >  
> > -	ov7670_s_power(sd, 1);
> > +	ov7670_power_on(sd);
> >  
> >  	/* Make sure it's an ov7670 */
> >  	ret = ov7670_detect(sd);
> > @@ -1929,7 +1967,7 @@ static int ov7670_probe(struct i2c_client *client,
> >  hdl_free:
> >  	v4l2_ctrl_handler_free(&info->hdl);
> >  power_off:
> > -	ov7670_s_power(sd, 0);
> > +	ov7670_power_off(sd);
> >  clk_disable:
> >  	clk_disable_unprepare(info->clk);
> >  	return ret;
> > @@ -1945,7 +1983,7 @@ static int ov7670_remove(struct i2c_client *client)
> >  	v4l2_ctrl_handler_free(&info->hdl);
> >  	clk_disable_unprepare(info->clk);
> >  	media_entity_cleanup(&info->sd.entity);
> > -	ov7670_s_power(sd, 0);
> > +	ov7670_power_off(sd);
> >  	return 0;
> >  }
> >  
> 
> Could you consider instead switching to runtime PM? A few drivers such as
> the ov2685 driver does that already.

Yes, I'll take a look. Thanks for the suggestion. I didn't know such
thing exists, so it may take some time for me to grasp it though.

Take care,
Lubo

> 

