Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:55:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AA2B5580522;
	Fri, 21 Dec 2018 12:35:01 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 21 Dec 2018 12:35:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AsSj5dBJ1b+RgRtyl3tmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvz8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQsleWCNPDJ6i?=
 =?us-ascii?q?YYUPDeUOM+hYoYrzqVsVtRuzBxKhBP/2yjJSmnP6wbc33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvoKKcdT/i1zKnWwjXFcvhbxDD96YjVfRs8pvyMRql/cc3RyEYyDA7FjUuf?=
 =?us-ascii?q?qZbjPzyL0uQBqW+b7/BvVe+2jWMstgJ/oiC3y8syloXEgpgZxk3K+Cln2oo5ON?=
 =?us-ascii?q?61RFJhbdOlEpZcrzyWO5d5T884Xm1ltjg2xqcatZKhfiUHx5IqzAPFZfOdaYiH?=
 =?us-ascii?q?+BfjWf6RIThmgHJlf6qyhwi98Ue+0O3wTMq030hQripDjNbMsmoB1xvJ6siIUv?=
 =?us-ascii?q?d9/0Gh1iiT1w3L9O1IPUQ5mbDGJ5Mv3LI8jIcfvEffEiPsmUj7jreadkA+9eip?=
 =?us-ascii?q?7+TnbK/mppiZN4JsjgH+M6IumtGwAOghMQgBQXKb+eKi273n5EH5R7tLjvsona?=
 =?us-ascii?q?nDq53aO8sbqbCjAwNP0YYs9Qy/DzG439Qch3UHK0hFeB2fg4jzJ17OOOz4Deu4?=
 =?us-ascii?q?g1m0lDdrxvPGMaP7DpTCM3jOi7Phfbd7605Bxws/19Ff55RICr4fJPL/QFP+tN?=
 =?us-ascii?q?vdDhUhKQy73/7nCMlh1oMZQW+PArWWMKLOsVCS4eIjOemMZJIPtzb7JPgo/Pru?=
 =?us-ascii?q?jX4/mV8Acqilx5oXaHakHvt4J0WVe2bjgtAEEW0SpAoxUPTqiEGeUT5Uf3u9Rb?=
 =?us-ascii?q?k85jE8CIKlF4vDXJqigL6a0Se/H51WYH1GC1+WHXfpcYWER+kDaCaILsB9lTwE?=
 =?us-ascii?q?UKCrS5U92hG2qA/6171nI/LX+iICs5Lvztx15+zJmhE0+jx5FMCd02CLT2FpkW?=
 =?us-ascii?q?IEXT423KZjoUNjzlePy7R3g/tdFdZL/fNGTh86NYLAz+x9E939RxjOfsmXR1q8?=
 =?us-ascii?q?QtWpGzcxTskvzN8IZEp9H9aijhXH3yexB78VlrqLBIE7867G3njxIdp9xGjC1K?=
 =?us-ascii?q?U7k1YmRc5PP3W8hqFj7wjTG5LJk0KBmqm3b6scwjDC+H2DzWWUukFYSxB/UaPe?=
 =?us-ascii?q?UHAbZ0vWq8n550zYQ7+vD7QnLhVOycqYJqRWbd3piE1MRO3/N9TGf2Kxh2CwCA?=
 =?us-ascii?q?6UxrONaYrqfHkd3CXdCUQejwAf53GGNRI6BiegpWLeAydjFVbuY0Pq7Ol/p2m3?=
 =?us-ascii?q?Tk4yzwGWcUJh06C59QIShfyZU/kTxK4LuD89qzVoG1awx8jZC96eqAtuYqpdYc?=
 =?us-ascii?q?kx70xa1W3ErQN9OJ+gL6d8hlMFdwR3vkXu1wh4C4lakMgqqm8qwxR2Ka6CzFxB?=
 =?us-ascii?q?cDaY14jqOrLLMmny4Ayva6nO11Dezdaa4LsA5O45qlXjpg6pEEUi/m5j09lU1X?=
 =?us-ascii?q?uc+5rLABATUZL3TkY46Rx6q6vGbSk64oPezWdsPrWssj/ex9IpA/Moygyhf9hD?=
 =?us-ascii?q?KqyEDhL9E8oAC8ioNuMqgVmpYgsYM+9I8K47It2pd+GB2K6tJ+tgmDOmjWJa4I?=
 =?us-ascii?q?FyyE6M9ix8SvLW0JYB2f2XwgyHVzLkhle7rs/3gZxEZS0VHmenySnkBZRdZ61o?=
 =?us-ascii?q?cYYQFGeuJda6xtF/h57rRn5Z+0SvB1IA2M+1ZxWSa0bx0hFX1UQSuXangze3zy?=
 =?us-ascii?q?RokzE1qaqSxC7OzP74dBoEOW5LQ3NujUz2Loi3jNAaXU6oYBYvlBa+4Ub6xq5b?=
 =?us-ascii?q?pLlwLmXJQEdIeTT2IH9mUqeqqrWCZMtP4osysSpLSOS8fUyaSrnlrhoaySzjGH?=
 =?us-ascii?q?FSxDI6dzGsoZj5mx16iGSALHd8tnbZeMdwxQvB69zYX/Jewj0GRCxggznNGle8?=
 =?us-ascii?q?J8Wp/cmTl5rbseCxTWOhWodTcSn214yAsiS76HZuAR2+mfCzh9LmHRI70S/9y9?=
 =?us-ascii?q?llSyHIoAzgbYns0qSwKfhncVVwBF/g98p6HZlzko4xhJETw3cWnJuU8mQckWfv?=
 =?us-ascii?q?L9pbw7nxY2QXRT4E2NPV5Anl2Et+LnOG3Y75V3Odwtd/aNm+eG8ZxiU978VSAq?=
 =?us-ascii?q?eO8LNEhTd1oka/rQ/Jffh9mTIdxeEv6XEAheEJpREtzj6cAr0JGUlYPCrslwmH?=
 =?us-ascii?q?7tykraVXYnqvfqa01EZkgd+hC7SCqBlGWHnlYpciATNw7sJnPV3XynLz7YXkeM?=
 =?us-ascii?q?TKYdIXqx2ZiBPAj+lTKJIsmfsGnytnOWThvXI7z+43lwBh3Za/vIKfMWVi4Lq5?=
 =?us-ascii?q?AgJENj3yf84T+CvijaNAkcaNxYyvAo9tGjYWXJvrUPKoFigdte/8OgaKET08rG?=
 =?us-ascii?q?qbGLXFEQ+e7kdms2zAE5SxO36LI3kZyM1oRAOBK0xHnAAUQDI6k4Y5FwCt2czh?=
 =?us-ascii?q?aVp56SoX5lLisRtMzeRoNxbkX2fbpQeobCo0SZeFIBpX6AFC+1naMciE4u1vGC?=
 =?us-ascii?q?FY+4WrrBaRJWyDewRIEWYJV1SEB1/9P7mu5trA8+mCCuq9NfvOZrqOpvJEV/eV?=
 =?us-ascii?q?3pKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnkQh/v6pCVC7RMMdRj4RS2gaaYOu6UhSZ5LytY15wWyX/JzrgfwEAdiyV0?=
 =?us-ascii?q?ezaxFrQAsDbHTLjMla9PEx4bdyRzOdNU76I92wlBI9LUhsnp2b54kPE1DUxIVV?=
 =?us-ascii?q?jgmsGveMwLLHuxNFLBBEaXKruGISfHzN3wYaO5UbdQlvlbtwWsuTaHFE/uJjSC?=
 =?us-ascii?q?mCPvVxCqMOFMijmUPR1euI6ndBZtBnPuTNbnah29Ld92gic6wbwyhnPWK2EcNS?=
 =?us-ascii?q?JwfF9Krr2VvmtkhaBTFnZM7TJPJPKJmyGD4qGMJpwfqvZrBT55v+la+nM/yqZQ?=
 =?us-ascii?q?qiZeS6ox0C7Os8R3vly6juSnwDN2VBtEsDsNj4WO7mt4PqCMzYVNQXbJ+lon6n?=
 =?us-ascii?q?ScQ0ARrdx0BvXstrpWx9yJk7j8fmQRu+nI9NcRUpCHYPmMN2AsZF+wQGbZ?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CFBAA0TR1ch0O0hNFkHgEGBwaBZYNsJ?=
 =?us-ascii?q?4N9lX0lFIMxlgsXGBMBhDsDAoJwIjgSAQMBAQEBAQECARMBAQEIDQkIKSMMgjo?=
 =?us-ascii?q?pAYJnAQICAQECIAQZAQE3AQQBCQEBCg4MAiYCAgNEEAYBEgWDHYF6CAWlOHB8M?=
 =?us-ascii?q?4J2AQEFhycIgQuLNBeBQD+BETNkgU0uhGUcgwiCV49igQCFRIshCZFpGJFfiRc?=
 =?us-ascii?q?8kEmBXYF3MxoIKAh4C1aBToIbiQGFYB8ygQIDAQEhE416AQE?=
X-IPAS-Result: =?us-ascii?q?A0CFBAA0TR1ch0O0hNFkHgEGBwaBZYNsJ4N9lX0lFIMxlgs?=
 =?us-ascii?q?XGBMBhDsDAoJwIjgSAQMBAQEBAQECARMBAQEIDQkIKSMMgjopAYJnAQICAQECI?=
 =?us-ascii?q?AQZAQE3AQQBCQEBCg4MAiYCAgNEEAYBEgWDHYF6CAWlOHB8M4J2AQEFhycIgQu?=
 =?us-ascii?q?LNBeBQD+BETNkgU0uhGUcgwiCV49igQCFRIshCZFpGJFfiRc8kEmBXYF3MxoIK?=
 =?us-ascii?q?Ah4C1aBToIbiQGFYB8ygQIDAQEhE416AQE?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="58500382"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 12:35:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390309AbeLUUe5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 15:34:57 -0500
Received: from mail.kernel.org ([198.145.29.99]:54724 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1732146AbeLUUe4 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 15:34:56 -0500
Received: from localhost (unknown [104.132.0.74])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id D33D621773;
        Fri, 21 Dec 2018 20:34:55 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545424495;
        bh=vwPzy//5Zq8kHAFJXX1ENCRdop7FngE2euBI1e5qEUg=;
        h=Subject:Cc:To:From:In-Reply-To:References:Date:From;
        b=qxAbeRlcdqBkyIea3IXs7gOpFZ7kAwj8Vp+W8jRlKG12i+iGHUHhpeJudTIXTaa3v
         igAuXQ7m0vYyRDMKUo/9Nhvx7Bh1fNRdbeBII28dSJZuXTv/gmIgP/VO8f+Q9e6ZFT
         Bf7MLO6WJy5cIYwzFI+4p/7/2Z5sj123XS8+4DBg=
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
Subject: Re: [PATCH] clk: Remove global clk traversal on fetch parent index
Cc: linux-clk@vger.kernel.org, linux-kernel@vger.kernel.org,
        Derek Basehore <dbasehore@chromium.org>
To: Derek Basehore <dbasehore@chromium.org>, mturquette@baylibre.com
From: Stephen Boyd <sboyd@kernel.org>
In-Reply-To: <20181221003100.157581-1-dbasehore@chromium.org>
User-Agent: alot/0.8
References: <20181221003100.157581-1-dbasehore@chromium.org>
Message-ID: <154542449501.13075.1518070014652024380@swboyd.mtv.corp.google.com>
Date: Fri, 21 Dec 2018 12:34:55 -0800
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Quoting Derek Basehore (2018-12-20 16:31:00)
> It's not required to traverse the entire clk tree when the parents
> array contains a NULL value. You already have the parent clk_core
> pointer, so you can just compare the parent->name and parent_names[i]
> pointers.

Ok.

>=20
> In cases where clk names are never registered, this can be
> a substantial power improvement since a mux having an unregistered
> parent name will traverse the clk tree on every set_rate. This can
> happen hundreds of times a second on CPU clks.
>=20
> Change-Id: I85499d2e576249568ff508e424ca8d5009e6e2b1

This should go away.

> Signed-off-by: Derek Basehore <dbasehore@chromium.org>
> ---
>  drivers/clk/clk.c | 13 +++++++++++--
>  1 file changed, 11 insertions(+), 2 deletions(-)
>=20
> diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
> index af011974d4ec..57a95c713286 100644
> --- a/drivers/clk/clk.c
> +++ b/drivers/clk/clk.c
> @@ -1516,9 +1516,18 @@ static int clk_fetch_parent_index(struct clk_core =
*core,
>         if (!parent)
>                 return -EINVAL;
> =20
> -       for (i =3D 0; i < core->num_parents; i++)
> -               if (clk_core_get_parent_by_index(core, i) =3D=3D parent)
> +       for (i =3D 0; i < core->num_parents; i++) {
> +               if (core->parents[i] =3D=3D parent)
> +                       return i;
> +
> +               if (core->parents[i])
> +                       continue;
> +
> +               if (!strcmp(parent->name, core->parent_names[i])) {
> +                       core->parents[i] =3D parent;
>                         return i;
> +               }
> +       }
> =20

Wow, this looks really familiar. In fact, take a look at commit
da0f0b2c3ad2 ("clk: Correct lookup logic in clk_fetch_parent_index()")
and you'll see that it's almost the same code. The main difference is
that this patch's clk_fetch_parent_index() doesn't call __clk_lookup()
to get a pointer to the clk it already has. And then in commit
470b5e2f97cf ("clk: simplify clk_fetch_parent_index() function") we
consolidated all the logic to simplify things, but it seems that we
became confused that the result of !strcmp(parent, names[i]) is actually
only true when the strings are equal. That was an invalid
transformation. Ouch. But this is a good find!

So this patch is reverting commit 470b5e2f97cf and then optimizing it to
never call __clk_lookup() because it's useless. I'll need to add a
comment and expand on the commit text here so that it's more obvious
what's going on. Otherwise someone will come by and try to consolidate
again and we'll do this all over again.

