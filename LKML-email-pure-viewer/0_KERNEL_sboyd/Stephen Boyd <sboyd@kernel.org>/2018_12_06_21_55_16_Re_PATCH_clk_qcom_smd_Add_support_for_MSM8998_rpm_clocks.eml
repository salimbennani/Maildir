Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6C197580375;
	Thu,  6 Dec 2018 13:55:24 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 13:55:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A23hsBRxhQh1wKmbXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8XK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXZOUcleWSJfAo2z?=
 =?us-ascii?q?bYUPAekPMuhFoYf9vEMOoBmlCAmwHePi0CNEimPs0KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nascn1O7kKUeC10qbIyyjIYu5R2Tb99YfDbxcsoeqXUrJ3ccve1FIiFwDbgVWK?=
 =?us-ascii?q?r4zqITeV2v4Ks2iB4OptTOSigHMkpQFpujWj2Nsgh43Tio4IxF3I6z91zJs2KN?=
 =?us-ascii?q?GkUkJ2YNypHINNuy2GOIZ6WN4uTm92tCog17EKo5y2cSoMxZ863RDQceaHfJKN?=
 =?us-ascii?q?4h/7VOaePzN4hHV9dbKhiBa971Kgxvf/VsaqylZKqDRKkt3WunAKzRzT5dCLSv?=
 =?us-ascii?q?p7/ki/xTaCzx7f5v1ALEwuiKbWJYAtzqQtmpcQrUjPBC77lUfugK+TbEok++yo?=
 =?us-ascii?q?6+r9YrXho5+RL4t0igD4MqQzlc2zGOc4PRYUX2id5+u80KTv/Ur3QbVMkPI2iL?=
 =?us-ascii?q?LUsI7VJcsFvK61GQxV3Zg56xa5ETim1M4UnX4dLFJKYB6HlZTmO0nSIPDkCvey?=
 =?us-ascii?q?m1CskDZox//YJLHgDYjNI2PHkLfge7Z99kFdxBAyzdBZ+5JbFLUBLOjvVU/2sd?=
 =?us-ascii?q?zSFgU5PBCsw+b7FNV90ZsTWWKVDa+YLKPdq1iI6vgvI+mRfoAVvjn9JuMh5/7v?=
 =?us-ascii?q?i385hFAccbOo3ZsRdHC3APBmL1+Fbnrrh9cLCX0KsRYmTOz2lF2CViZeZ3S1X6?=
 =?us-ascii?q?0i/D07C4WmDYHFRoCqm7GB2Ca7HptLZmFJEFyMEHHod5maVPcIci6dPshhkjkc?=
 =?us-ascii?q?X7i7V4AhzQ2utBP9y7d/NOXU4S0YtZXg1NRv/e3cjxMy+CdwD8Sc1WGNUm51kn?=
 =?us-ascii?q?kJRz8wwKBwv0h9xk2f3qh/hvxSDcZT6O9RUgcmKZ7cyPR3C9PoVQLHZNuJTFem?=
 =?us-ascii?q?Tc+gATE+Vd8xx94OY0BgG9StlBzD3iyqA6MLmLyPHpA77qXc333pLcZn13nGzL?=
 =?us-ascii?q?Uhj0UhQsZXKGKpnLB/+BbJC47JiUqZkb2qeroa3CLK8GeDzm+OvEVDXQ50UKXF?=
 =?us-ascii?q?W20fZ0TModT44EPCU6GhCbA9PgRdzs6CL7NAasf1glVeWPfjJNPebnqslGiqGx?=
 =?us-ascii?q?aH2KmAbIrwdGUbxyXSFk4EnhsX/XaHMwg+Gyigr3jfDDxoCVLgfUfs/fNip3O8?=
 =?us-ascii?q?S08+1xuKYFF517qp5h4VguSRS+8S3rIBvychtzV0HVan09LKEdaAoBBhfKFdYd?=
 =?us-ascii?q?M771dKzmbZtw17Ppy9IKFunF8ecwJrv0zw0xV7EJlPkc8vrHky1gp9NbqY0E9d?=
 =?us-ascii?q?dzOfxZ3/ILnXJXf9/R+xa6/awErR0MuL9agV7vQ4qFLjvB+yG0om8nVn1cRV0n?=
 =?us-ascii?q?SG6pXLCgoSTYz+UkIt+xdmoLHaZzE355nI2n10Lam0rjjC1sopBes40BqvY81T?=
 =?us-ascii?q?MaKEFADoFc0aCNOjKOgrm1ivcxIFM/pe9K8yP8O6afSG3LSnM/pnnDKjlW5H+p?=
 =?us-ascii?q?xy0lqQ9ypgTe7Fx4wFw/CE0QSdTTfzkVChvtrxmY9afzESH3OzxjT+C45Ve6J9?=
 =?us-ascii?q?Y5wLCWCoI8CswtV+hpjtW2NX9VK5BlMG3tOpdgSWb1DnwQJQ0kEXq2S9mSSk1z?=
 =?us-ascii?q?x0jy0prq2H0S3OwuTubhoGNnRQRGl/i1fhOoy0j9EcXEi1YAkljhql5UDmx6dF?=
 =?us-ascii?q?oKRzNXXcQUBNfyLuNWFtTrOwtqaeY85I8J4osz9YUP6/YVCZTb7xuQAa3DngH2?=
 =?us-ascii?q?tdxTA7cS+lupPikhx+iWKdKmtzrXXDdcFxwxff+MLTRfpL0jUaQyl4jCHdBkKg?=
 =?us-ascii?q?MNmx4dWUi5DDv/i+Vm27UZ1fayvrzYKGtCag4W1qABu/n+28m9H9EAg61zP72M?=
 =?us-ascii?q?duVSnSsBn8ZYzr3bygMe17ZkloGEP8681iF4F9iIQwhYsc2XgHhpqP+3oHnnz+?=
 =?us-ascii?q?MdFa2aL4cXoMSiQHw9/T4Aj5xkJjKmiFyJ7+VnWY2sFhfcW1YnsK2iIh6MBHEK?=
 =?us-ascii?q?KU7L1HnSRvuFa5oxzeYeNhnjgD0/sh82AVg/sGuAc2yiWdA7YSHVRXPCD2lhSI?=
 =?us-ascii?q?6cy+o7tTZGq1bbew009+l8i7DL6eugFcRGr5epA6EC9s6cV/NUjA0Xzp5YHiZd?=
 =?us-ascii?q?nQdskTthyPnhfEjuhVLo8xl/UQiSpmP2L9oWMqy+ohgRNy2pG6uZCNK39x86Kh?=
 =?us-ascii?q?Hh5YKjr1atsI9T73iqZemtuW05qrHpV8ATgLWJroTfS1EDMdr/jnNgCOECEipX?=
 =?us-ascii?q?efA7bQAQif6EJ+pXLVD5+rL22XJGUezdh6RhmSPklfjx4PXDkggp41DAOqxNHi?=
 =?us-ascii?q?cEdk4DAe/EX4pwBIyuJpMRn/T2jeqB2pajcyVJiQMh5W4hte6EfSNMyU9vhzED?=
 =?us-ascii?q?1A/p29sAyNLXSWZgRPDWEUQ0yEGkrsPr+06dnb9OiYAOW+IuDKYbWPr+xeSviJ?=
 =?us-ascii?q?yYiu0otg4zaDKMGPMmN+AP0830pJRWp5FNjBmzUTVywXkDrAb86Fqxe9+S13rc?=
 =?us-ascii?q?G//O7oWAL14ouPBKVdMc9y+xCtmqqDM++QhCBkKTdXzJ8MxHnIyKQB014WkS1h?=
 =?us-ascii?q?az6tEbEYvy7XUK3QgrNXDwIcay5rLsRI8rkz3hNTNs/bkN/10r94g+UxC1dEU1?=
 =?us-ascii?q?zhh86oadYLI2G7KFPIGkKLOK6aKj3MxsH9ebm8RqFIjOVIqx2wvi6WE1PiPjSG?=
 =?us-ascii?q?jTXmSwqjPv1MjC6FOhxTo4W9chdrCWj+Q9PqcBy7MNlrjTIoxb04nG/FNWkZMT?=
 =?us-ascii?q?JkaUNCsqWQ7T9EgvV4A2FA7mBqLe+BmyaY6enXMpcXsftxDSRymOJX+3A6y7pT?=
 =?us-ascii?q?7CFZS/15girSrthyo164lumD0CZoUB1LqmUDuIXen0hsN7/U59FgRHnDtEYP7X?=
 =?us-ascii?q?ifDDwBoNdoA8D1vLpZjN/Vm/S3YDJL6dGS59YAA8HSJOqOKn9nOh3sXHbREBYf?=
 =?us-ascii?q?VCOmKX3Sr0ZUgfWT/GeY6JM9r9ykgp0ESvxXSHQ2G+kcB0AjG8YNc7ltWTZxqq?=
 =?us-ascii?q?KWlM4F4zKUqwjdDJFBtJfWWtqRDO/pJTLfiqNLMUhbiYjkJJgeY9Wok3dpbUN3?=
 =?us-ascii?q?ycGTQxLd?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BAAAA7mglch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2sng3qUKIFoJRSZLRQYEwGEOwMCgxciNwYNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAQICAQECIB0BATcBBAEJAQEKDgwCJgICA0QQBgESB?=
 =?us-ascii?q?YMcgXoIBaVTcIEvgnYBAQWHJgiBC4sUF4FAP4ERM4IxLoFBg0CDBIJXkDWFOYp?=
 =?us-ascii?q?zCZFGGJE2iQ6PfoFcgXczGggoCHgFBlaBToIbGIhphWAfMoECAwEBIROKBgEB?=
X-IPAS-Result: =?us-ascii?q?A0BAAAA7mglch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?ng3qUKIFoJRSZLRQYEwGEOwMCgxciNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAQICAQECIB0BATcBBAEJAQEKDgwCJgICA0QQBgESBYMcgXoIBaVTcIE?=
 =?us-ascii?q?vgnYBAQWHJgiBC4sUF4FAP4ERM4IxLoFBg0CDBIJXkDWFOYpzCZFGGJE2iQ6Pf?=
 =?us-ascii?q?oFcgXczGggoCHgFBlaBToIbGIhphWAfMoECAwEBIROKBgEB?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="43926971"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 13:55:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726052AbeLFVzU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 16:55:20 -0500
Received: from mail.kernel.org ([198.145.29.99]:59244 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725972AbeLFVzS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 16:55:18 -0500
Received: from localhost (unknown [104.132.1.77])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 81E012081C;
        Thu,  6 Dec 2018 21:55:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544133317;
        bh=58o7wj7mBWhPeIdyXdGX6xBxzVrsyTDPdXl18Bzxd+I=;
        h=To:From:In-Reply-To:Cc:References:Subject:Date:From;
        b=nU+loz+iD+acKlaHlzZsOvQ3FsI24j2XyUKAhFSDKwWHNGo3s9Dn6LJCnTQeglyob
         Qt1EXKJQB8QOTT8wD4rWIp8Rdev9+Zyn2wFVOdWwOnbp+FaTz9FOB2dzxIWzdX56qL
         dkbrg0B+0L4VrrIMBHMKs6ifyHXNMeq5rPORf/uw=
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
To: Jeffrey Hugo <jhugo@codeaurora.org>, mark.rutland@arm.com,
        mturquette@baylibre.com, robh+dt@kernel.org
From: Stephen Boyd <sboyd@kernel.org>
In-Reply-To: <1544130666-32252-1-git-send-email-jhugo@codeaurora.org>
Cc: bjorn.andersson@linaro.org, marc.w.gonzalez@free.fr,
        linux-clk@vger.kernel.org, devicetree@vger.kernel.org,
        linux-arm-msm@vger.kernel.org, linux-kernel@vger.kernel.org,
        Jeffrey Hugo <jhugo@codeaurora.org>
References: <1544130666-32252-1-git-send-email-jhugo@codeaurora.org>
Message-ID: <154413331679.88331.15909045605070653326@swboyd.mtv.corp.google.com>
User-Agent: alot/0.7
Subject: Re: [PATCH] clk: qcom: smd: Add support for MSM8998 rpm clocks
Date: Thu, 06 Dec 2018 13:55:16 -0800
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Quoting Jeffrey Hugo (2018-12-06 13:11:06)
> Add rpm smd clocks, PMIC and bus clocks which are required on MSM8998
> for clients to vote on.
> =

> Signed-off-by: Jeffrey Hugo <jhugo@codeaurora.org>
> ---
>  .../devicetree/bindings/clock/qcom,rpmcc.txt       |  1 +
>  drivers/clk/qcom/clk-smd-rpm.c                     | 62 ++++++++++++++++=
++++++
>  include/dt-bindings/clock/qcom,rpmcc.h             |  6 +++
>  3 files changed, 69 insertions(+)
> =

> diff --git a/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt b/Doc=
umentation/devicetree/bindings/clock/qcom,rpmcc.txt
> index 87b4949..16c4293 100644
> --- a/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
> +++ b/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
> @@ -17,6 +17,7 @@ Required properties :
>                         "qcom,rpmcc-apq8064", "qcom,rpmcc"
>                         "qcom,rpmcc-msm8996", "qcom,rpmcc"
>                         "qcom,rpmcc-qcs404", "qcom,rpmcc"
> +                       "qcom,rpmcc-msm8998", "qcom,rpmcc"

Can you keep this sorted on the first compatible?

>  =

>  - #clock-cells : shall contain 1
>  =


Rob may prefer this file is split from the driver part into a different
patch.

> diff --git a/drivers/clk/qcom/clk-smd-rpm.c b/drivers/clk/qcom/clk-smd-rp=
m.c
> index d3aadae..269304e 100644
> --- a/drivers/clk/qcom/clk-smd-rpm.c
> +++ b/drivers/clk/qcom/clk-smd-rpm.c
> @@ -655,11 +655,73 @@ static int clk_smd_rpm_enable_scaling(struct qcom_s=
md_rpm *rpm)
>         .num_clks =3D ARRAY_SIZE(qcs404_clks),
>  };
>  =

> +/* msm8998 */
> +DEFINE_CLK_SMD_RPM(msm8998, snoc_clk, snoc_a_clk, QCOM_SMD_RPM_BUS_CLK, =
1);
> +DEFINE_CLK_SMD_RPM(msm8998, cnoc_clk, cnoc_a_clk, QCOM_SMD_RPM_BUS_CLK, =
2);
> +DEFINE_CLK_SMD_RPM(msm8998, ce1_clk, ce1_a_clk, QCOM_SMD_RPM_CE_CLK, 0);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, div_clk1, div_clk1_a, 0xb);
> +DEFINE_CLK_SMD_RPM(msm8998, ipa_clk, ipa_a_clk, QCOM_SMD_RPM_IPA_CLK, 0);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk1, bb_clk1_a, 1);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk2, bb_clk2_a, 2);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, bb_clk3_pin, bb_clk3_a_pin=
, 3);
> +DEFINE_CLK_SMD_RPM(msm8998, mmssnoc_axi_rpm_clk, mmssnoc_axi_rpm_a_clk,
> +                  QCOM_SMD_RPM_MMAXI_CLK, 0);
> +DEFINE_CLK_SMD_RPM(msm8998, aggre1_noc_clk, aggre1_noc_a_clk,
> +                  QCOM_SMD_RPM_AGGR_CLK, 1);
> +DEFINE_CLK_SMD_RPM(msm8998, aggre2_noc_clk, aggre2_noc_a_clk,
> +                  QCOM_SMD_RPM_AGGR_CLK, 2);
> +DEFINE_CLK_SMD_RPM_QDSS(msm8998, qdss_clk, qdss_a_clk,
> +                       QCOM_SMD_RPM_MISC_CLK, 1);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, rf_clk1, rf_clk1_a, 4);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, rf_clk2_pin, rf_clk2_a_pin=
, 5);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, rf_clk3, rf_clk3_a, 6);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, rf_clk3_pin, rf_clk3_a_pin=
, 6);
> +static struct clk_smd_rpm *msm8998_clks[] =3D {
> +       [RPM_SMD_SNOC_CLK] =3D &msm8998_snoc_clk,
> +       [RPM_SMD_SNOC_A_CLK] =3D &msm8998_snoc_a_clk,
> +       [RPM_SMD_CNOC_CLK] =3D &msm8998_cnoc_clk,
> +       [RPM_SMD_CNOC_A_CLK] =3D &msm8998_cnoc_a_clk,
> +       [RPM_SMD_CE1_CLK] =3D &msm8998_ce1_clk,
> +       [RPM_SMD_CE1_A_CLK] =3D &msm8998_ce1_a_clk,
> +       [RPM_SMD_DIV_CLK1] =3D &msm8998_div_clk1,
> +       [RPM_SMD_DIV_A_CLK1] =3D &msm8998_div_clk1_a,
> +       [RPM_SMD_IPA_CLK] =3D &msm8998_ipa_clk,
> +       [RPM_SMD_IPA_A_CLK] =3D &msm8998_ipa_a_clk,
> +       [RPM_SMD_BB_CLK1] =3D &msm8998_bb_clk1,
> +       [RPM_SMD_BB_CLK1_A] =3D &msm8998_bb_clk1_a,
> +       [RPM_SMD_BB_CLK2] =3D &msm8998_bb_clk2,
> +       [RPM_SMD_BB_CLK2_A] =3D &msm8998_bb_clk2_a,
> +       [RPM_SMD_BB_CLK3_PIN] =3D &msm8998_bb_clk3_pin,
> +       [RPM_SMD_BB_CLK3_A_PIN] =3D &msm8998_bb_clk3_a_pin,
> +       [RPM_SMD_MMAXI_CLK] =3D &msm8998_mmssnoc_axi_rpm_clk,
> +       [RPM_SMD_MMAXI_A_CLK] =3D &msm8998_mmssnoc_axi_rpm_a_clk,
> +       [RPM_SMD_AGGR1_NOC_CLK] =3D &msm8998_aggre1_noc_clk,
> +       [RPM_SMD_AGGR1_NOC_A_CLK] =3D &msm8998_aggre1_noc_a_clk,
> +       [RPM_SMD_AGGR2_NOC_CLK] =3D &msm8998_aggre2_noc_clk,
> +       [RPM_SMD_AGGR2_NOC_A_CLK] =3D &msm8998_aggre2_noc_a_clk,
> +       [RPM_SMD_QDSS_CLK] =3D &msm8998_qdss_clk,
> +       [RPM_SMD_QDSS_A_CLK] =3D &msm8998_qdss_a_clk,
> +       [RPM_SMD_RF_CLK1] =3D &msm8998_rf_clk1,
> +       [RPM_SMD_RF_CLK1_A] =3D &msm8998_rf_clk1_a,
> +       [RPM_SMD_RF_CLK2_PIN] =3D &msm8998_rf_clk2_pin,
> +       [RPM_SMD_RF_CLK2_A_PIN] =3D &msm8998_rf_clk2_a_pin,
> +       [RPM_SMD_RF_CLK3] =3D &msm8998_rf_clk3,
> +       [RPM_SMD_RF_CLK3_A] =3D &msm8998_rf_clk3_a,
> +       [RPM_SMD_RF_CLK3_PIN] =3D &msm8998_rf_clk3_pin,
> +       [RPM_SMD_RF_CLK3_A_PIN] =3D &msm8998_rf_clk3_a_pin,
> +};
> +
> +static const struct rpm_smd_clk_desc rpm_clk_msm8998 =3D {
> +       .clks =3D msm8998_clks,
> +       .num_clks =3D ARRAY_SIZE(msm8998_clks),
> +};
> +
>  static const struct of_device_id rpm_smd_clk_match_table[] =3D {
>         { .compatible =3D "qcom,rpmcc-msm8916", .data =3D &rpm_clk_msm891=
6 },
>         { .compatible =3D "qcom,rpmcc-msm8974", .data =3D &rpm_clk_msm897=
4 },
>         { .compatible =3D "qcom,rpmcc-msm8996", .data =3D &rpm_clk_msm899=
6 },
>         { .compatible =3D "qcom,rpmcc-qcs404",  .data =3D &rpm_clk_qcs404=
  },
> +       { .compatible =3D "qcom,rpmcc-msm8998", .data =3D &rpm_clk_msm899=
8 },

And this sorted too.

>         { }
>  };
>  MODULE_DEVICE_TABLE(of, rpm_smd_clk_match_table);
