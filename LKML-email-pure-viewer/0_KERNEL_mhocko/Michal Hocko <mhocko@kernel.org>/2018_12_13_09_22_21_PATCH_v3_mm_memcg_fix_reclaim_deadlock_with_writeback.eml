Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 378B8580380;
	Thu, 13 Dec 2018 01:22:33 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 01:22:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AYQ5JbxX57+J2iZq53iZi1JqKHbXV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHvadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeQPPuhWqIvyp1UBohWxHgmsHOHixyRUinL1x6A2z/4sHR3a0AEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKVu61zbXHzTXZYPNSxDzz6o/IfQwiofGLQLl9ds/RyUkoFwzZjVWQ?=
 =?us-ascii?q?rpfoPzCL2eQXtWiU8e5gWfioi249pAF8uz6izdovhInRno8Z1EzI+CFjzIooK9?=
 =?us-ascii?q?C0VlR3bcOnHZdMrS2XNol7Tts8T211tis20KAKtJ6mcCQQzJkqxwTTZ+GJfoSU?=
 =?us-ascii?q?5B/oSfyfLi1ihH1/fbKynxay/lakyu37TsS0zllKoTRfktXWtXACyQbT6s6ZRf?=
 =?us-ascii?q?t55Euh3iyP1w/L5uFFJ0A7i7bbJoY/zrIskpcfq1nPEyHolEnskaObdVko9vKp?=
 =?us-ascii?q?5unlernmo4WTN45wigHwKKQuncm/DPw8MggPWWib5Ou92KTg/ULnWrVKiOM5kq?=
 =?us-ascii?q?3AvJDdK8UboLC2AxVO34Y95BawES2m3M4bnXYZNlJFfgyIj4zzN1HJOvD4Au+z?=
 =?us-ascii?q?g06wnzdz2/DGIrrhD43JLnjCk7fuY6xx6kFByAcoydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B93JsEWW2TGq+ZLL/SsViQ6+IvOeaMZZMVtyz6K/Q/5/7u?=
 =?us-ascii?q?kGU2mVkSfaSy2ZsXaXa4HulpIkmDYHrshMsBHnkOvgYkUOPqj1iCWyZJZ3muR6?=
 =?us-ascii?q?I8+i07CIW+AIfBQYCinqaN3CS8Hp1QYGBGDUuBEXPpd4WCRvcNZzieIs5nkjwY?=
 =?us-ascii?q?S7ehT5Ut2g2ptA//07BnNPbb+jUEtZL/09h4//fclQoy9TxzDMSRyXuNQHt2nm?=
 =?us-ascii?q?4TQz823aZ/oVFyy1uZ0Kh4heBYGsJX5/9TTgg6MpvcxfRgC9/uQgLBYsuJSFG+?=
 =?us-ascii?q?T9WlGz4xSMg9w9sPY0lnHdWigQvO3y6rA78TiryKC4Y48qPa33jtOcl9z2zK27?=
 =?us-ascii?q?Umj1kjWsFPL3GphrZj9wjPAI7Ei1iWmLy0dasCxiLN9H2MzWyVvE5GVg58VqHF?=
 =?us-ascii?q?XXMaZkvSttn54kLCT7mzCbUoKAdByMiCKrdUZd3tl1lJWPDjONHGaWKrh2iwHQ?=
 =?us-ascii?q?qIxq+LbIfyZmoSxjvdB1YenwAT53mGMxM+CTmno2/FCDxuFFTvY17j8OVkqXO7?=
 =?us-ascii?q?SFM0wB+Ob0F7y7W1/RsVj+SGS/wPxrIEpDshqzJsEVah3tLWDt2ApxZhfKRce9?=
 =?us-ascii?q?89/E1L1WXDtwx5P5ygKa9ii0UacwR2uUPuyhp2Bp9BkcgssHMl0g5yJbiE31NG?=
 =?us-ascii?q?cjOSxYrwNaHPKmnu4BCvbLbb1Uva0NmI9aYA9vQ5p0/4swG0C0Ut6XNn09pS03?=
 =?us-ascii?q?uC/ZjKCAsSUZTsUkc47RR6prfaYjUj6IPQz3FjLa60sjra0dIzGOQl0gqgf8tY?=
 =?us-ascii?q?MK6cFA7yDtcWCNS0JO0rm1imdBQEPO9J+a4wPsOmceaG2aGxMOZhmjKmkXpI4I?=
 =?us-ascii?q?Rn3k2Q8Cp8T/bC34wZzPGAwguHSzD8gU+7ssD2hY9LfysSEXe4yST+Ao5eeLdy?=
 =?us-ascii?q?fYcSBWiyOcK3wshxiID3W35f8l6uHFcG2M6veRqPYF3xxwxQ1UILoXO5nSu01S?=
 =?us-ascii?q?B7kzYsrqCHxizB3/zidAYbOm5MXGRjjVbsLZK0jtwAR0iocg4pmQCh5Ub7wahb?=
 =?us-ascii?q?uat+I3PSQUdOYyj5MWViXrGsubqFZs5F8IkovjlPUOSgfVCaTabwoxkA3CP5HG?=
 =?us-ascii?q?texzc7eyuxuprjnBx6i2OdLHBto3rfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6YtCq0/2pqDQe9n/CynN3qCgw60S7919?=
 =?us-ascii?q?l3WiTEthf8Yo/316ukNeJrZFVnBFj568BiAIFxjpMwhI0M2XgdnpiV/mAIkWbp?=
 =?us-ascii?q?PdVbxKLxdnwNRTEQzt7R4Qjl3lBjL32Ty4L4UHWd3tVuZ92gbmwK3SI96thACL?=
 =?us-ascii?q?2I47xcgSt1vl24oBrUYfh8nTcS0+Ei6XAEjOESpAoi0D+dDasMEklCMizhjBCI?=
 =?us-ascii?q?79G4rKVKa2eja7mw1Exind+/CLGOuB1TWHH8ep06By9/8t1/ME7Q0H308ozkZN?=
 =?us-ascii?q?7QbdcJuhyViRjAifVVKIkqlvoLnidnPWP9vXs4y+80lxBu3Je6vJSZJGVp5q62?=
 =?us-ascii?q?HhlYNjjtbcMJ5j7tlbpentqR3423BZpuADILXJ/1Tf6yFDISqO/qNwKPED06t3?=
 =?us-ascii?q?eaFqDTHQ6Z6Ed6sX3PF4qnOG2QJHkc1d9iXgWSJFRDgAAIWzU3hpw5GRqvxMP/?=
 =?us-ascii?q?a0d1/CwR6kT7qhtRyeJoKh//XX3EpAqzbjc0SZ6fLAdZ7w1Y5kfVN9Ce4fx3Hy?=
 =?us-ascii?q?1C4pKhqwmNIHSBZwtUFWEJRlCEB1f7M7iu4tnA7vGYBvekIPvIe7mOsuteV/GH?=
 =?us-ascii?q?xZ+01otm/jCMNtiAP3V4Dv073FZDUm59G8jDhzoPTCkXnTrXb8GHvBe85jF3rs?=
 =?us-ascii?q?en/fTrRg3v5IiPC7hTMdl1+BC2m6CDN+GOiyZjNDZYzYgBxXvJyLgZwV4ThDti?=
 =?us-ascii?q?dzirEbQcqyHNSLjclbNQDx4ecylzLtdH77og3glRPs7Wksn61qNjgf4vFVhEVU?=
 =?us-ascii?q?btmsWoZcERJ2G9NVXHBFuENbicJD3Lxd33br24SbFKkOpUsBiwsy6BE0D/JjSD?=
 =?us-ascii?q?iyXpVxe3POFQjSGbOQZSt52nfhlxCWjsUtTmZwa/MN92iz023LI1imnLNW4aLT?=
 =?us-ascii?q?hzbUdNoqeM4iNfh/V1A3ZB4WZ9LemYhyaZ6PHVK5YMvvttByR0luRa72w7yrtV?=
 =?us-ascii?q?9i5EQvN1lTDWrt5vpVGmj+aOxiBmUBpItjZEmoaLsV9+NqXe85kTEUrDqTsL4X?=
 =?us-ascii?q?+dFFwvoMF5Ddun76lT0t3nkKP1NScH/dXJ+8cVG8nTLoSAKnV3dVKjOz/ODQ8B?=
 =?us-ascii?q?BRftfVrfmlBQlfaMvDXBrZkgq5zosIEOV6NWUVsrUPUTD0kzT/IYJ5IiezIvkb?=
 =?us-ascii?q?efxO4P7nm55E3URMJRvZfvVf+IB/jrbjGDgu8XNFMz3brkINFLZcXA0Et4Zww/?=
 =?us-ascii?q?xdySFg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAAlJBJch0O0hNFbCBwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYFVghYnjBVfjUAUl0CBcxIBARgTAYdDIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvgjYkAYJiAwMBAiQLAUYGCQEBGAcxAzEBBQEcBgESBRaDBoIBB?=
 =?us-ascii?q?AGbFTyMCTOKNRKHa4Q/F4FAP4ERh20BhgACizKVXQmRTgsYiWyHXokuj3QCBAI?=
 =?us-ascii?q?EBQIFDyGBJYIOMxoIKAiDJ5BcPzIBgQQBAYoFgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAAAlJBJch0O0hNFbCBwBAQEEAQEHBAEBgVEHAQELAYF?=
 =?us-ascii?q?VghYnjBVfjUAUl0CBcxIBARgTAYdDIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvg?=
 =?us-ascii?q?jYkAYJiAwMBAiQLAUYGCQEBGAcxAzEBBQEcBgESBRaDBoIBBAGbFTyMCTOKNRK?=
 =?us-ascii?q?Ha4Q/F4FAP4ERh20BhgACizKVXQmRTgsYiWyHXokuj3QCBAIEBQIFDyGBJYIOM?=
 =?us-ascii?q?xoIKAiDJ5BcPzIBgQQBAYoFgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="141955089"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 01:22:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728077AbeLMJWa (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 04:22:30 -0500
Received: from mail-ed1-f67.google.com ([209.85.208.67]:45991 "EHLO
        mail-ed1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727343AbeLMJWa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 04:22:30 -0500
Received: by mail-ed1-f67.google.com with SMTP id d39so1385173edb.12;
        Thu, 13 Dec 2018 01:22:28 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=JUicFBR02yoMFdfZBlyVnEhzti2L20thT/sD8xlcfyI=;
        b=lPGESSAbtYCyFi8tMSpyXk1ytCu0PbIuCHBTMjkXQCJJh4wgwBQZOqkxaWjv97neL/
         nqc03aklc/DrMBR+TIMRlFMC6pzXAfgPuBBN4jo7rNVghpieLUZmf4uK7lIost57mQgp
         FQB3ATaYcAahfCej937Id0doB1xdqZNyGiD4YfNB9RGpQtQzmJLtFRyRaR/3IC/HdMD0
         RhBfK5YQRuy0eeH1sdHGbgQMJTtsbOYciSu3CS7++0LHPSPGW/FRgNquvSqWpYY7vpn6
         0PTz6oxIDMTe3wkC2JUeN8GJrZr3Hde2i82RIqucZayhHeOYdEVAf/OU9s6Q5MmHtIZ+
         5DwQ==
X-Gm-Message-State: AA+aEWZ/ujhk8VfmHmIGE9wiR7KCR4/qmvsT1Cd7HH0joIZ2y4XI/+Mi
        xG/LfNHD3e7L8vjRaJav6/s=
X-Google-Smtp-Source: AFSGD/VVTDGIqbyHthrws0tyrv81OrMOTPIkOhePFkpMhdy/flordrFKk+vHkSil+fdCwb5w4zkDdg==
X-Received: by 2002:a50:9b1d:: with SMTP id o29mr20594527edi.246.1544692947665;
        Thu, 13 Dec 2018 01:22:27 -0800 (PST)
Received: from tiehlicka.suse.cz (prg-ext-pat.suse.com. [213.151.95.130])
        by smtp.gmail.com with ESMTPSA id z9sm472036edr.61.2018.12.13.01.22.26
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 13 Dec 2018 01:22:26 -0800 (PST)
From: Michal Hocko <mhocko@kernel.org>
To: Andrew Morton <akpm@linux-foundation.org>,
        "Kirill A. Shutemov" <kirill@shutemov.name>
Cc: Liu Bo <bo.liu@linux.alibaba.com>, Jan Kara <jack@suse.cz>,
        Dave Chinner <david@fromorbit.com>,
        "Theodore Ts'o" <tytso@mit.edu>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Vladimir Davydov <vdavydov.dev@gmail.com>,
        <linux-mm@kvack.org>, <linux-fsdevel@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Shakeel Butt <shakeelb@google.com>,
        Michal Hocko <mhocko@suse.com>,
        Stable tree <stable@vger.kernel.org>
Subject: [PATCH v3] mm, memcg: fix reclaim deadlock with writeback
Date: Thu, 13 Dec 2018 10:22:21 +0100
Message-Id: <20181213092221.27270-1-mhocko@kernel.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181212155055.1269-1-mhocko@kernel.org>
References: <20181212155055.1269-1-mhocko@kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Michal Hocko <mhocko@suse.com>

Liu Bo has experienced a deadlock between memcg (legacy) reclaim and the
ext4 writeback
task1:
[<ffffffff811aaa52>] wait_on_page_bit+0x82/0xa0
[<ffffffff811c5777>] shrink_page_list+0x907/0x960
[<ffffffff811c6027>] shrink_inactive_list+0x2c7/0x680
[<ffffffff811c6ba4>] shrink_node_memcg+0x404/0x830
[<ffffffff811c70a8>] shrink_node+0xd8/0x300
[<ffffffff811c73dd>] do_try_to_free_pages+0x10d/0x330
[<ffffffff811c7865>] try_to_free_mem_cgroup_pages+0xd5/0x1b0
[<ffffffff8122df2d>] try_charge+0x14d/0x720
[<ffffffff812320cc>] memcg_kmem_charge_memcg+0x3c/0xa0
[<ffffffff812321ae>] memcg_kmem_charge+0x7e/0xd0
[<ffffffff811b68a8>] __alloc_pages_nodemask+0x178/0x260
[<ffffffff8120bff5>] alloc_pages_current+0x95/0x140
[<ffffffff81074247>] pte_alloc_one+0x17/0x40
[<ffffffff811e34de>] __pte_alloc+0x1e/0x110
[<ffffffffa06739de>] alloc_set_pte+0x5fe/0xc20
[<ffffffff811e5d93>] do_fault+0x103/0x970
[<ffffffff811e6e5e>] handle_mm_fault+0x61e/0xd10
[<ffffffff8106ea02>] __do_page_fault+0x252/0x4d0
[<ffffffff8106ecb0>] do_page_fault+0x30/0x80
[<ffffffff8171bce8>] page_fault+0x28/0x30
[<ffffffffffffffff>] 0xffffffffffffffff

task2:
[<ffffffff811aadc6>] __lock_page+0x86/0xa0
[<ffffffffa02f1e47>] mpage_prepare_extent_to_map+0x2e7/0x310 [ext4]
[<ffffffffa08a2689>] ext4_writepages+0x479/0xd60
[<ffffffff811bbede>] do_writepages+0x1e/0x30
[<ffffffff812725e5>] __writeback_single_inode+0x45/0x320
[<ffffffff81272de2>] writeback_sb_inodes+0x272/0x600
[<ffffffff81273202>] __writeback_inodes_wb+0x92/0xc0
[<ffffffff81273568>] wb_writeback+0x268/0x300
[<ffffffff81273d24>] wb_workfn+0xb4/0x390
[<ffffffff810a2f19>] process_one_work+0x189/0x420
[<ffffffff810a31fe>] worker_thread+0x4e/0x4b0
[<ffffffff810a9786>] kthread+0xe6/0x100
[<ffffffff8171a9a1>] ret_from_fork+0x41/0x50
[<ffffffffffffffff>] 0xffffffffffffffff

He adds
: task1 is waiting for the PageWriteback bit of the page that task2 has
: collected in mpd->io_submit->io_bio, and tasks2 is waiting for the LOCKED
: bit the page which tasks1 has locked.

More precisely task1 is handling a page fault and it has a page locked
while it charges a new page table to a memcg. That in turn hits a memory
limit reclaim and the memcg reclaim for legacy controller is waiting on
the writeback but that is never going to finish because the writeback
itself is waiting for the page locked in the #PF path. So this is
essentially ABBA deadlock:
                                        lock_page(A)
                                        SetPageWriteback(A)
                                        unlock_page(A)
lock_page(B)
                                        lock_page(B)
pte_alloc_pne
  shrink_page_list
    wait_on_page_writeback(A)
                                        SetPageWriteback(B)
                                        unlock_page(B)

                                        # flush A, B to clear the writeback

This accumulating of more pages to flush is used by several filesystems
to generate a more optimal IO patterns.

Waiting for the writeback in legacy memcg controller is a workaround
for pre-mature OOM killer invocations because there is no dirty IO
throttling available for the controller. There is no easy way around
that unfortunately. Therefore fix this specific issue by pre-allocating
the page table outside of the page lock. We have that handy
infrastructure for that already so simply reuse the fault-around pattern
which already does this.

There are probably other hidden __GFP_ACCOUNT | GFP_KERNEL allocations
from under a fs page locked but they should be really rare. I am not
aware of a better solution unfortunately.

Reported-and-Debugged-by: Liu Bo <bo.liu@linux.alibaba.com>
Cc: stable
Fixes: c3b94f44fcb0 ("memcg: further prevent OOM with too many dirty pages")
Signed-off-by: Michal Hocko <mhocko@suse.com>
---
 mm/memory.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/mm/memory.c b/mm/memory.c
index 4ad2d293ddc2..bb78e90a9b70 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -2993,6 +2993,17 @@ static vm_fault_t __do_fault(struct vm_fault *vmf)
 	struct vm_area_struct *vma = vmf->vma;
 	vm_fault_t ret;
 
+	/*
+	 * Preallocate pte before we take page_lock because this might lead to
+	 * deadlocks for memcg reclaim which waits for pages under writeback.
+	 */
+	if (pmd_none(*vmf->pmd) && !vmf->prealloc_pte) {
+		vmf->prealloc_pte = pte_alloc_one(vmf->vma->vm_mm, vmf->address);
+		if (!vmf->prealloc_pte)
+			return VM_FAULT_OOM;
+		smp_wmb(); /* See comment in __pte_alloc() */
+	}
+
 	ret = vma->vm_ops->fault(vmf);
 	if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE | VM_FAULT_RETRY |
 			    VM_FAULT_DONE_COW)))
-- 
2.19.2

