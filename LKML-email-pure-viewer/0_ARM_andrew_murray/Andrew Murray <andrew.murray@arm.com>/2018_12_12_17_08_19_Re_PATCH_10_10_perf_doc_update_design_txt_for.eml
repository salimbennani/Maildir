Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:53:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8BBFD58079D;
	Wed, 12 Dec 2018 09:08:29 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 12 Dec 2018 09:08:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ABt+/0xV2RDjkr9n4XWUsZXQaTCjV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGBv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe240K/IwijZb/xI1zb29Y/Gcg07ofGWR71xcdfaxE41GAPDk1qQ?=
 =?us-ascii?q?s5LqPj2P2uQIrmib9fBgWvivimM8sQ5xuD2vyt0whYnOg4IY01bJ/jh3zoYyIN?=
 =?us-ascii?q?23Uk97Ydi8HZRMsCGaM5Z2QsY5TGFpoik20KMJtoOmfCQS05Qn3x/fa/qGc4eU?=
 =?us-ascii?q?+RLvTuCRLilkhH59e7KwmQyy8U6+xe34TMW010xKriVDn9LRtX4NzwTe5tabRv?=
 =?us-ascii?q?Z55EutxDiC2x7J5u1ZIk04ibDXJp8jz7IoiJYfrEbOEjXrlEj5kKOabFgo9vS1?=
 =?us-ascii?q?5+j9YLjqupmRPJJuhA7kKKQhgMm/DPw4MgcQW2ib/vyx1KPs/ULnWrVGlP42nb?=
 =?us-ascii?q?fDsJDcO8sborS1AwhP0oYs8xq/DjGm38oEnXQfMl5JZBaKg5L0N1zAPvz0F+qz?=
 =?us-ascii?q?jlewnDtxxv3LPKXtApDXIXjClLfhc6x960lZyAcrydBf5pRUCqwOIf7qWU/+qs?=
 =?us-ascii?q?bYDhknPAyw2urnD9t81oUAVmKVGaKZLqzSvkGS5u41IOmDepUVuDDjJPgh/fLu?=
 =?us-ascii?q?imU5mVAFcamzwZQXcGy4HuhhI0iBZXrsg9QBHnkQsgsxUeznk1mCUT9VZ3avUK?=
 =?us-ascii?q?Mw/DA7CIS6DYjdQoChmqCO3CC+HpdOfGBJFkiMEWv0d4WDQ/oMaDidIs59kjMe?=
 =?us-ascii?q?UritUY8h1Qy0uw/8xLpqNe7U+iwetZL+29l5/ezTlRcu9TNqC8SRyX2CT2Zxnm?=
 =?us-ascii?q?kQXT85wLh/oVBhyleEyaV4gftYGsJJ6/NKVQc6M5jcz+thBtD2WwLBeMqJSVm8?=
 =?us-ascii?q?TtWnBzExUsw+w9sUb0lhHNWiiwjJ3zC2DL8Ni7yLGJs0/7rG0HjqJ8Z9zHXG2L?=
 =?us-ascii?q?M7j1Y8QMtCLmmmhq959wjOCI/FiUSZl6C2dasC2C7B7nuMzW2LvEtASg5/Tb3F?=
 =?us-ascii?q?XWwDZkvRtdn55VnNT7m0BbQjMwtO08iCKqRRZ93tjFVGQurjOdvEb2KwnWewGQ?=
 =?us-ascii?q?iHxreWYIX2fGUd2T3XCFIYnAAL4XaGKQ8+Cz+8rG3EEjxhC0jjY0P2/ul4s3O0?=
 =?us-ascii?q?UEk0wwaOb01i0rq1/gUYhfidS/MVw7IFtz0tqzRyHFahwd3WD8CMqBZmfKVZed?=
 =?us-ascii?q?k9+ktI1XrFtwxhOZytN71tiUQAcwtppU/u1w94CoNbkcc0qnMn1w5yKaOe0FNc?=
 =?us-ascii?q?eDKUx5HwOrvLKmbs+BCjcbLZ2lbb0NyO4KcA9Ow4q0n/vAGuDkci73Rn09xS03?=
 =?us-ascii?q?uA5pXLDBAeUY7rXkYw7Rh6o7DaYi8y547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+aEuO8OpafSH17CrPep6hz2mkHlI75?=
 =?us-ascii?q?p70kKP8Cp8VPXF35IEw/GewwuGWC3wjFanssDrh49EYSseEXa4ySjhHIRRfLF9?=
 =?us-ascii?q?fZ4XCWeyJM263tV/h4P3V3FE7lKiBlMG19WveRqddFH92QxQ1UIKoX2ogye4zj?=
 =?us-ascii?q?p0ky03oaqbxiDB3+PidB8fMG5RWGZilUvsIZSzj90CRkiobhQmmwG/5UnnwKhX?=
 =?us-ascii?q?vqJ/IHfJQUdJZiT5M3ttUq+tubWcec5P75UovD5TUOS9Z1CaV7H8rwEb0yPlA2?=
 =?us-ascii?q?tR2jQ7eyu2tZX+mhxwkHidI2prrHrFZcFwwg/S5dzdRfJL3jsKXjJ4iSTRBlWn?=
 =?us-ascii?q?O9mp/NOUl4rMs+ykVmKhUIFTfjfvzY+aqCS74mhqCwWln/+vgt3nDRQ60Sjj2t?=
 =?us-ascii?q?loTyrIthX8Yors16igKuJoZEpoBFz968p8BI5+lJA9hJUR2Xgcm5WU8mALkWb1?=
 =?us-ascii?q?MdVHx63+aGABSiIMw97Q+ALlwlFsLmqVx4LlUXWQ2stgaMO9Ym8M2CI97sZKBb?=
 =?us-ascii?q?yQ7LxFmyt1v1W5oRjQYfh7gjcS1/8u5GQGjOEOvQon1j+dDawKHUlEISzskAyF?=
 =?us-ascii?q?79Oko6VWfmqvcaWw21B4ndCuF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSgCpnOGH9smc/x+81kxNuxo26s5adK2p24q25?=
 =?us-ascii?q?GBFYOybxZ8MS/DHtkKlfktyX34CpApVuBDELUIH0QvKvFTIYre7nOBqWED0gtn?=
 =?us-ascii?q?ebHqLSHROY6EdjtX7OEoqkN3eKJHkC1tViRQKQJEhegAASQTU7kYQ1FgGsxMz9?=
 =?us-ascii?q?bkh54iod6UL/qhtJ0uhoLQXwUn/DpAe0bTc5UIOQIwBR7gFG+kfZK8ie7v9oEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+K?=
 =?us-ascii?q?xZ2114tp4S2MOt+TPnV4DP07x0lDXW1/G8vDgDUCUCgXlyPLb86Gqxaw4Cx3rs?=
 =?us-ascii?q?aj8Pv1XALj/5eAC7xXMd934RC5nb+DN/KMhCZ+MTtZ1pQMxWLRyLgCxlESjTti?=
 =?us-ascii?q?dyKqEbQGui7AV6bQmq5RDx4GZCJ/LspI76Qg3gZTPc7XkM/61rl9jvQtEVdKSU?=
 =?us-ascii?q?Thmt21ZcwNO2y9NE3IBEeINLSFJD3H2cL3Ybm7Sb1fkupUrQCwuS2AHk/nPzSD?=
 =?us-ascii?q?kSTpVh+1PeFNiiGbIAJRuIWnfhlxDmjjScrsagenP99vkT023bo0i2vQOm4BKj?=
 =?us-ascii?q?d8aV1Cr72K4SNcg/VyAGhB7ntjLemZlCeV9ejYKpAKsfR1BiR4jf5V4HM/y7FN?=
 =?us-ascii?q?9iFLWOR1mDfOrt5pu1ymjuiPyj99XBVSsDpEmIKLsltkOajC8plAWHDE/A8C7G?=
 =?us-ascii?q?mKChQKocdlBcPru6xK1tfPk6fzIi9Y893I5cscG9TUKMWfPXshKxXpHjvUDAoD?=
 =?us-ascii?q?TTGzNGDfh1ZSkPed9nCOqpg6q57smIcBS7NBVVw1EO8aBVphHNAYPJh3WTYkwv?=
 =?us-ascii?q?ani5sj5WC/twXWSstXpNjrX/aWSaHkKCyYlqVDaRUF2/X0JIAXHoTh3gppbVws?=
 =?us-ascii?q?z6rQHE+FdNZBuCB+Jiopul9E4TAqR2s/wU/6LAaw+mUaBNa9hBtwgQx7N7d+vA?=
 =?us-ascii?q?zw6ks6cwKZ7BA7l1M8zJC82Wic?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACjPxFch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgmmBAhQTjBWMEoINFJc/gXMsDQYBhDwCgwA?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQI3PwYJAQEKG?=
 =?us-ascii?q?AklAwwFFDUTBYMcAYF5CAQBCqdDhC0BCwGFbQWMPIFXP4QjgwUZAwKFE4IEIgK?=
 =?us-ascii?q?LMJVcBwKCIwSEZIYshBUjgVyIQ4cnLIoCg2+MaIIOMxojUA0GgiUBM4Zyg287h?=
 =?us-ascii?q?T8/AQExAQGBAwEBjQABAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAACjPxFch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgmmBAhQTjBWMEoINFJc/gXMsDQYBhDwCgwAiNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQI3PwYJAQEKGAklAwwFFDUTBYM?=
 =?us-ascii?q?cAYF5CAQBCqdDhC0BCwGFbQWMPIFXP4QjgwUZAwKFE4IEIgKLMJVcBwKCIwSEZ?=
 =?us-ascii?q?IYshBUjgVyIQ4cnLIoCg2+MaIIOMxojUA0GgiUBM4Zyg287hT8/AQExAQGBAwE?=
 =?us-ascii?q?BjQABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="57190856"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 09:08:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728000AbeLLRIX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 12:08:23 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:45576 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726358AbeLLRIX (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 12:08:23 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id A68F780D;
        Wed, 12 Dec 2018 09:08:22 -0800 (PST)
Received: from localhost (unknown [10.37.6.11])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id B3CE93F575;
        Wed, 12 Dec 2018 09:08:21 -0800 (PST)
Date: Wed, 12 Dec 2018 17:08:19 +0000
From: Andrew Murray <andrew.murray@arm.com>
To: Christoffer Dall <christoffer.dall@arm.com>
Cc: Michael Ellerman <mpe@ellerman.id.au>,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        Shawn Guo <shawnguo@kernel.org>,
        Sascha Hauer <s.hauer@pengutronix.de>,
        Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>, x86@kernel.org,
        linux-alpha@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Joerg Roedel <joro@8bytes.org>,
        "paulus@samba.org" <paulus@samba.org>
Subject: Re: [PATCH 10/10] perf/doc: update design.txt for
 exclude_{host|guest} flags
Message-ID: <20181212170819.GD48249@e119886-lin.cambridge.arm.com>
References: <1542363853-13849-1-git-send-email-andrew.murray@arm.com>
 <1542363853-13849-11-git-send-email-andrew.murray@arm.com>
 <87pnv00yuf.fsf@concordia.ellerman.id.au>
 <20181120133202.GH35798@e119886-lin.cambridge.arm.com>
 <87bm5sxqya.fsf@concordia.ellerman.id.au>
 <20181211135903.GG13393@e119886-lin.cambridge.arm.com>
 <20181212080742.GA30263@e113682-lin.lund.arm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181212080742.GA30263@e113682-lin.lund.arm.com>
User-Agent: Mutt/1.10.1+81 (426a6c1) (2018-08-26)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 12, 2018 at 09:07:42AM +0100, Christoffer Dall wrote:
> On Tue, Dec 11, 2018 at 01:59:03PM +0000, Andrew Murray wrote:
> > On Tue, Dec 11, 2018 at 10:06:53PM +1100, Michael Ellerman wrote:
> > > [ Reviving old thread. ]
> > > 
> > > Andrew Murray <andrew.murray@arm.com> writes:
> > > > On Tue, Nov 20, 2018 at 10:31:36PM +1100, Michael Ellerman wrote:
> > > >> Andrew Murray <andrew.murray@arm.com> writes:
> > > >> 
> > > >> > Update design.txt to reflect the presence of the exclude_host
> > > >> > and exclude_guest perf flags.
> > > >> >
> > > >> > Signed-off-by: Andrew Murray <andrew.murray@arm.com>
> > > >> > ---
> > > >> >  tools/perf/design.txt | 4 ++++
> > > >> >  1 file changed, 4 insertions(+)
> > > >> >
> > > >> > diff --git a/tools/perf/design.txt b/tools/perf/design.txt
> > > >> > index a28dca2..7de7d83 100644
> > > >> > --- a/tools/perf/design.txt
> > > >> > +++ b/tools/perf/design.txt
> > > >> > @@ -222,6 +222,10 @@ The 'exclude_user', 'exclude_kernel' and 'exclude_hv' bits provide a
> > > >> >  way to request that counting of events be restricted to times when the
> > > >> >  CPU is in user, kernel and/or hypervisor mode.
> > > >> >  
> > > >> > +Furthermore the 'exclude_host' and 'exclude_guest' bits provide a way
> > > >> > +to request counting of events restricted to guest and host contexts when
> > > >> > +using virtualisation.
> > > >> 
> > > >> How does exclude_host differ from exclude_hv ?
> > > >
> > > > I believe exclude_host / exclude_guest are intented to distinguish
> > > > between host and guest in the hosted hypervisor context (KVM).
> > > 
> > > OK yeah, from the perf-list man page:
> > > 
> > >            u - user-space counting
> > >            k - kernel counting
> > >            h - hypervisor counting
> > >            I - non idle counting
> > >            G - guest counting (in KVM guests)
> > >            H - host counting (not in KVM guests)
> > > 
> > > > Whereas exclude_hv allows to distinguish between guest and
> > > > hypervisor in the bare-metal type hypervisors.
> > > 
> > > Except that's exactly not how we use them on powerpc :)
> > > 
> > > We use exclude_hv to exclude "the hypervisor", regardless of whether
> > > it's KVM or PowerVM (which is a bare-metal hypervisor).
> > > 
> > > We don't use exclude_host / exclude_guest at all, which I guess is a
> > > bug, except I didn't know they existed until this thread.
> > > 
> > > eg, in a KVM guest:
> > > 
> > >   $ perf record -e cycles:G /bin/bash -c "for i in {0..100000}; do :;done"
> > >   $ perf report -D | grep -Fc "dso: [hypervisor]"
> > >   16
> > > 
> > > 
> > > > In the case of arm64 - if VHE extensions are present then the host
> > > > kernel will run at a higher privilege to the guest kernel, in which
> > > > case there is no distinction between hypervisor and host so we ignore
> > > > exclude_hv. But where VHE extensions are not present then the host
> > > > kernel runs at the same privilege level as the guest and we use a
> > > > higher privilege level to switch between them - in this case we can
> > > > use exclude_hv to discount that hypervisor role of switching between
> > > > guests.
> > > 
> > > I couldn't find any arm64 perf code using exclude_host/guest at all?
> > 
> > Correct - but this is in flight as I am currently adding support for this
> > see [1].
> > 
> > > 
> > > And I don't see any x86 code using exclude_hv.
> > 
> > I can't find any either.
> > 
> > > 
> > > But maybe that's OK, I just worry this is confusing for users.
> > 
> > There is some extra context regarding this where exclude_guest/exclude_host
> > was added, see [2] and where exclude_hv was added, see [3]
> > 
> > Generally it seems that exclude_guest/exclude_host relies upon switching
> > counters off/on on guest/host switch code (which works well in the nested
> > virt case). Whereas exclude_hv tends to rely solely on hardware capability
> > based on privilege level (which works well in the bare metal case where
> > the guest doesn't run at same privilege as the host).
> > 
> > I think from the user perspective exclude_hv allows you to see your overhead
> > if you are a guest (i.e. work done by bare metal hypervisor associated with
> > you as the guest). Whereas exclude_guest/exclude_host doesn't allow you to
> > see events above you (i.e. the kernel hypervisor) if you are the guest...
> > 
> > At least that's how I read this, I've copied in others that may provide
> > more authoritative feedback.
> > 
> > [1] https://lists.cs.columbia.edu/pipermail/kvmarm/2018-December/033698.html
> > [2] https://www.spinics.net/lists/kvm/msg53996.html
> > [3] https://lore.kernel.org/patchwork/patch/143918/
> > 
> 
> I'll try to answer this in a different way, based on previous
> discussions with Joerg et al. who introduced these flags.  Assume no
> support for nested virtualization as a first approximation:
> 
>   If you are running as a guest:
>     - exclude_hv: stop counting events when the hypervisor runs
>     - exclude_host: has no effect
>     - exclude_guest: has no effect
>   
>   If you are running as a host/hypervisor:
>    - exclude_hv: has no effect
>    - exclude_host: only count events when the guest is running
>    - exclude_guest: only count events when the host is running
> 
> With nested virtualization, you get the natural union of the above.
> 
> **This has nothing to do with the design of the hypervisor such as the
> ARM non-VHE KVM which splits its execution across EL1 and EL2 -- those
> are both considered host from the point of view of Linux as a hypervisor
> using KVM, and both considered hypervisor from the point of view of a
> guest.**

For clarity, this is what arm64 currently does (assuming no nesting and
without the current version of this patchset):

   If you are running as a guest (VHE or !VHE host):
     - exclude_hv: has no effect for a KVM guest (filters hypervisor on !VHE
		   bare metal hypervisor guest)
     - exclude_host: has no effect
     - exclude_guest: has no effect
   
   If you are running as a host/hypervisor:
    - exclude_hv: has no effect for VHE (filters EL2 on !VHE)
    - exclude_host: only count events when the guest is running
    - exclude_guest: only count events when the host is running
 
Is this as expected?

Thanks,

Andrew Murray

> 
> 
> Thanks,
> 
>     Christoffer
