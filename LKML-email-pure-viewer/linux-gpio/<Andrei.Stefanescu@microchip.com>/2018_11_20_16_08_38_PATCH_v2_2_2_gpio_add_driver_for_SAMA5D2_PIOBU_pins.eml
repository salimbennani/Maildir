Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 11:07:51 -0000
Received: from icoremail.net (unknown [209.85.215.180])
	by mail-app4 (Coremail) with SMTP id cS_KCgDHH04pwfNbZjHeAQ--.36747S3;
	Tue, 20 Nov 2018 16:09:14 +0800 (CST)
Received: from mail-pg1-f180.google.com (unknown [209.85.215.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAnD0sowfNbVvJcAA--.216S3;
	Tue, 20 Nov 2018 16:09:12 +0800 (CST)
Received: by mail-pg1-f180.google.com with SMTP id s198so559459pgs.2
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 00:09:12 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :thread-topic:thread-index:date:message-id:references:in-reply-to
         :accept-language:content-language:spamdiagnosticoutput
         :spamdiagnosticmetadata:content-transfer-encoding:mime-version
         :sender:precedence:list-id;
        bh=dMW7YkuIRgGofzlypO1eZjqLZwbyxlPxqkNV+WLjqWg=;
        b=lyGtxPyO1KzicH0zACY0uI8ZJ/9/+mNu0/nIKieGj2SmDJaWOhhMTkW1+2km2u+IgU
         6MdKDEF9Fv+jtEVMQ8VFDzYBe/ljem39eFD9P2y0JQ2GsEEMvrPidvyrCryR9N7ZcaVT
         vb1RZce+3KNvFpmsPSfbm0oVrlc9Mg2aa/gaZINg7v2xq0EX5UIhKOG9rQKudL3ZF6K7
         PmdMJABgORsffD9iyKgU4VnTH+t/GWMPSFY25yTv4tvsVtRFDmCvvykEjs3EP4iLzH36
         TRgvWcseV2VPergMiQoCx17xes48q1iaq2iep8YnjsWP7wbab4LGbCKrXns2ih/3B3mQ
         Q/MA==
X-Gm-Message-State: AA+aEWYCVs4RYnDu9el8sU5Fs1pcVPCuYGigKnTT2OPJe8syVMW4v+ND
	iIPlOF8Y4eb60QayCNwt/WeyzNBGbB4B5wrx1kH9KYSBEIVXr6g=
X-Received: by 2002:a63:f615:: with SMTP id m21mr1042259pgh.428.1542701351842;
        Tue, 20 Nov 2018 00:09:11 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp304708pju;
        Tue, 20 Nov 2018 00:09:11 -0800 (PST)
X-Google-Smtp-Source: AFSGD/Wu7vZWCoDNQtWOlaqJU16+KF1cfT4zM7+4HwIUrnVMW2OjfzYXQ1gA/WckmidMMBjLPFmV
X-Received: by 2002:a63:4c6:: with SMTP id 189mr997112pge.391.1542701350966;
        Tue, 20 Nov 2018 00:09:10 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542701350; cv=none;
        d=google.com; s=arc-20160816;
        b=OuZ5KGJqM8vAfvxXGhHw0s0p98AEe9xkA0LFvICjuVpvtxMpPkQ+kglSz0czuGZYVx
         wlRu54710Mzdo9gjSG5Hdt/nBS7ONF4rLeh4Te3UnYQp5r6EQerCnbz3YaRVa4mn0vMi
         u2S/mp8ADkOKymAmrWkcrWfau55IgyvE3SjZYA9b6QD868VDsno9pv9l0opykNz45uPu
         f4bJygLvRougU3hJGLz775OBCfIUyVYQWy4iJ954wrg/izFinWt04l42quIPFcszO3I6
         1MZw4mGzUfohDQTwS103pO+KWzp8ucrJVaqG6yChbsSA4wP8q5lNfDvyN0bUAfjaccqp
         xD3g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:content-transfer-encoding
         :spamdiagnosticmetadata:spamdiagnosticoutput:content-language
         :accept-language:in-reply-to:references:message-id:date:thread-index
         :thread-topic:subject:cc:to:from:dkim-signature;
        bh=dMW7YkuIRgGofzlypO1eZjqLZwbyxlPxqkNV+WLjqWg=;
        b=Z82ByuiZOjWtyYRDkNyE3f+kkUGJSb6EDUmtvDDgeeUw7MD78qPsI1USc6HPWMpzFd
         HxOV1IKZutjI2qyZVXWu4ceO3hn0THinztgJnmM0D8sU55l2NcUwnjyKbT/z1/Gzca+B
         Wrf1NivtS2wxsDg9Dq6OCxBEb7XQ5obf2XXkbGjDER5NLAOsba3kCuRcTIadHLLdKy70
         jz4uDeW8WnHf8t1E1zZXn9KBSOg74l7rMxHkwhLV7Zo9yiNGYs0tH7vq+ZXxUc6Ihgxu
         O/lH+u18JhbPyWI9Ubm15r8pKcvekWx9OhgWWdS7CazC+o5thkLLlqjhySNqcj8MR5KY
         W1AA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@microchiptechnology.onmicrosoft.com header.s=selector1-microchiptechnology-onmicrosoft-com header.b=UDYdmPai;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e188-v6si41682077pfe.203.2018.11.20.00.08.56;
        Tue, 20 Nov 2018 00:09:10 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726407AbeKTSgb (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 13:36:31 -0500
Received: from esa3.microchip.iphmx.com ([68.232.153.233]:8423 "EHLO
        esa3.microchip.iphmx.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725908AbeKTSga (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 13:36:30 -0500
X-IronPort-AV: E=Sophos;i="5.56,256,1539673200"; 
   d="scan'208";a="23487245"
Received: from smtpout.microchip.com (HELO email.microchip.com) ([198.175.253.82])
  by esa3.microchip.iphmx.com with ESMTP/TLS/DHE-RSA-AES256-SHA; 20 Nov 2018 01:08:41 -0700
Received: from NAM03-CO1-obe.outbound.protection.outlook.com (10.10.215.89) by
 email.microchip.com (10.10.76.108) with Microsoft SMTP Server (TLS) id
 14.3.352.0; Tue, 20 Nov 2018 01:08:40 -0700
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=microchiptechnology.onmicrosoft.com;
 s=selector1-microchiptechnology-onmicrosoft-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dMW7YkuIRgGofzlypO1eZjqLZwbyxlPxqkNV+WLjqWg=;
 b=UDYdmPaiylq0NPBsPKB8J7lm+vzoo8ATZfa3VxPIZEbKgEBltoX60mmf43FtKDB3kb7gXkzJHnjYwrPympmAHlRARBWvkjSLTOxsDnuBc27FsNSL+5DB2rBlshsDinRcAm2WRrC38BMH8naVQNKiBTRWdZxqwsSSHTcEPRFfwHc=
Received: from BN6PR1101MB2243.namprd11.prod.outlook.com (10.174.113.19) by
 BN6PR1101MB2260.namprd11.prod.outlook.com (10.174.113.135) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1339.23; Tue, 20 Nov 2018 08:08:38 +0000
Received: from BN6PR1101MB2243.namprd11.prod.outlook.com
 ([fe80::853f:28dc:6c66:cfb1]) by BN6PR1101MB2243.namprd11.prod.outlook.com
 ([fe80::853f:28dc:6c66:cfb1%4]) with mapi id 15.20.1339.026; Tue, 20 Nov 2018
 08:08:38 +0000
From: <Andrei.Stefanescu@microchip.com>
To: <linus.walleij@linaro.org>, <gregkh@linuxfoundation.org>,
        <Nicolas.Ferre@microchip.com>, <robh+dt@kernel.org>,
        <mark.rutland@arm.com>
CC: <Ludovic.Desroches@microchip.com>, <Cristian.Birsan@microchip.com>,
        <linux-arm-kernel@lists.infradead.org>,
        <linux-gpio@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <devicetree@vger.kernel.org>, <Andrei.Stefanescu@microchip.com>
Subject: [PATCH v2 2/2] gpio: add driver for SAMA5D2 PIOBU pins
Thread-Topic: [PATCH v2 2/2] gpio: add driver for SAMA5D2 PIOBU pins
Thread-Index: AQHUgKg+jtQwbw5Ftk+WoFtT+pmzKQ==
Date: Tue, 20 Nov 2018 08:08:38 +0000
Message-ID: <1542701330-23466-3-git-send-email-andrei.stefanescu@microchip.com>
References: <1542701330-23466-1-git-send-email-andrei.stefanescu@microchip.com>
In-Reply-To: <1542701330-23466-1-git-send-email-andrei.stefanescu@microchip.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: VI1PR07CA0183.eurprd07.prod.outlook.com
 (2603:10a6:802:3e::31) To BN6PR1101MB2243.namprd11.prod.outlook.com
 (2603:10b6:405:52::19)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [94.177.32.154]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;BN6PR1101MB2260;6:FP6N+sH1AqfhDFwsafZxUp0mCJrFsDcvQ3EXdICXTd53PzIPAJj7VXHNnRd4kXaq5qOg37WQhcvr9UrtSmNecD0RYRHG84KE9U6UEirMUEgGK3mohpwXk4Wi1ZQgIxJVxsqYINBqATFvNLRG5+sFl0BYno993QyvQdTVPV+aNGa1jhqOKgt6IvqIFB8GiBGq7kiP8Da6CEF7XzrLi4LZV5oPPprMB7gO1wbQJvaCOQndVZ3smFvzSPejyvnGkD8UMH9biMspo16wQmMtGc0q+HYmd8TtSPfp9Y4YkJptd4jjraHuBk9vxTdKNih7bR9GcKn60r778t5ruTE1EFIfF8as8a3dhgQdaBLeh5J1bYEA1d9B2lBFem9HQgBnBXodInyfCbbT1p7t6WFHIMng8g3zkHaUrjybepC2P0PQRCuBs7/2hkKrTUALQHi2Yhi6xt81DEv2K8xW0L+tL92YMw==;5:jt9P6SF4scBl+HvhQZqEe3kw3EQ2YZc6pI2OlGUoPh+bCBhwVsf/a12EGeRh7H8+24KeukcmYRhmoWaYNkiyT1IdVXCJx6snXuwXFAkGDLDfDUQzhvMFrRYs0bnGmCK/VvCLaoMTnBKAvexus75n9ekRzLSTfDbtbSUVK1TKgXo=;7:AmqKgDcbHC9ZJ6357PsCJAml5QyeOa5UOO3NDsGCp36K8LGL30ND0sUD1HkGns6s6CxO3bWFT8rMmM9ba1iw/2+MtydW9XoCsbQNu1EEH+ilombt+n9JTHFyNdXDgWEA9X+WNcmtCbDj3NwVXRU6wQ==
x-ms-office365-filtering-correlation-id: 8f7d9926-833b-4cdc-3af5-08d64ebf607c
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:BN6PR1101MB2260;
x-ms-traffictypediagnostic: BN6PR1101MB2260:
x-microsoft-antispam-prvs: <BN6PR1101MB226017C21A098CDDF2E2A5A8EDD90@BN6PR1101MB2260.namprd11.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(6040522)(2401047)(5005006)(8121501046)(10201501046)(3002001)(3231442)(944501410)(52105112)(93006095)(93001095)(148016)(149066)(150057)(6041310)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(20161123560045)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:BN6PR1101MB2260;BCL:0;PCL:0;RULEID:;SRVR:BN6PR1101MB2260;
x-forefront-prvs: 08626BE3A5
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(376002)(136003)(396003)(366004)(39860400002)(346002)(199004)(189003)(6486002)(14454004)(11346002)(53936002)(2616005)(446003)(476003)(2900100001)(2501003)(6512007)(86362001)(106356001)(575784001)(2906002)(36756003)(316002)(486006)(8676002)(72206003)(81166006)(81156014)(478600001)(105586002)(6116002)(3846002)(71190400001)(71200400001)(256004)(14444005)(68736007)(6436002)(97736004)(102836004)(4326008)(386003)(6506007)(186003)(7736002)(305945005)(76176011)(5660300001)(25786009)(99286004)(26005)(8936002)(66066001)(110136005)(52116002)(107886003)(54906003)(309714004);DIR:OUT;SFP:1101;SCL:1;SRVR:BN6PR1101MB2260;H:BN6PR1101MB2243.namprd11.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: microchip.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: quGL6w6EmLpNCPv9M/jp2F1x/GVtaI2ekWpfhCwax1/3R4rpmGVRnhAhDlwDQoI2YzT5PtM9i3FNyvhTUX23PtHZ7HSQBEcZhNlH0WLC7o8EKBTC/09K2t6uNQmfDyogNf8xv17Zmy92dASRUS5xQDvrbpYKw/ZpjGJMGGcdSeqMdiUDL9nwA4r/+tgfJbnaEyAbbyTLgQRKkUcaP5vqbz5j3rX8IVJ03AmTSScaCmhqPkmH3gElF1nrxhqF/Ge/VT5ILW3E2aZ6G9KbPPfOupsQ6k27H7xygtVs3lt+K3w/k02Od8+25vjtW823AZVpKSmbEqLnNOfohfubK403lTCWz4CNdF8/d8gmvBWwgxY=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-MS-Exchange-CrossTenant-Network-Message-Id: 8f7d9926-833b-4cdc-3af5-08d64ebf607c
X-MS-Exchange-CrossTenant-originalarrivaltime: 20 Nov 2018 08:08:38.7728
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3f4057f3-b418-4d4e-ba84-d55b4e897d88
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BN6PR1101MB2260
X-OriginatorOrg: microchip.com
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAnD0sowfNbVvJcAA--.216S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3Jr13Xr15JFW5Kw15trWfuFg_yoWftF1kpF
	4Ykry3Jr45Cw4ft340kFs5A3ZIvw47tr4fKr97Ca45Z34Utr1vqFWjkFyFyF1Ykr97Ga1D
	tFZ5t3yj9FW0yF7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_KF4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lw4CEc2x0rVAKj4
	xxMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Av
	z4vEIxC_GFylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r4j6ryUMxvI42
	IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvEx4A2jsIE14v26rxl6s0DMxvI42IY
	6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Jr0_JF7vcSsGvfC2KfnxnUUI43ZEXa7IU5LTm3UU
	UUU==

PIOBU pins do not lose their voltage during Backup/Self-refresh.
This patch adds a simple GPIO controller for them and a
maintainer for the driver.

This driver adds support for using the pins as GPIO
offering the possibility to read/set the voltage.

Signed-off-by: Andrei Stefanescu <andrei.stefanescu@microchip.com>
---
 MAINTAINERS                       |   7 ++
 drivers/gpio/Kconfig              |  11 ++
 drivers/gpio/Makefile             |   1 +
 drivers/gpio/gpio-sama5d2-piobu.c | 253 ++++++++++++++++++++++++++++++++++=
++++
 4 files changed, 272 insertions(+)
 create mode 100644 drivers/gpio/gpio-sama5d2-piobu.c

diff --git a/MAINTAINERS b/MAINTAINERS
index f485597..88369f1 100644
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@ -9760,6 +9760,13 @@ M:	Nicolas Ferre <nicolas.ferre@microchip.com>
 S:	Supported
 F:	drivers/power/reset/at91-sama5d2_shdwc.c
=20
+MICROCHIP SAMA5D2-COMPATIBLE PIOBU GPIO
+M:	Andrei Stefanescu <andrei.stefanescu@microchip.com>
+L:	linux-arm-kernel@lists.infradead.org (moderated for non-subscribers)
+L:	linux-gpio@vger.kernel.org
+F:	drivers/gpio/gpio-sama5d2-piobu.c
+F:	Documentation/devicetree/bindings/gpio/gpio-sama5d2-piobu.txt
+
 MICROCHIP SPI DRIVER
 M:	Nicolas Ferre <nicolas.ferre@microchip.com>
 S:	Supported
diff --git a/drivers/gpio/Kconfig b/drivers/gpio/Kconfig
index 833a1b5..1c41fac 100644
--- a/drivers/gpio/Kconfig
+++ b/drivers/gpio/Kconfig
@@ -429,6 +429,17 @@ config GPIO_REG
 	  A 32-bit single register GPIO fixed in/out implementation.  This
 	  can be used to represent any register as a set of GPIO signals.
=20
+config GPIO_SAMA5D2_PIOBU
+	tristate "SAMA5D2 PIOBU GPIO support"
+	depends on MFD_SYSCON
+	select GPIO_SYSCON
+	help
+	  Say yes here to use the PIOBU pins as GPIOs.
+
+	  PIOBU pins on the SAMA5D2 can be used as GPIOs.
+	  The difference from regular GPIOs is that they
+	  maintain their value during backup/self-refresh.
+
 config GPIO_SIOX
 	tristate "SIOX GPIO support"
 	depends on SIOX
diff --git a/drivers/gpio/Makefile b/drivers/gpio/Makefile
index 671c447..f18d345 100644
--- a/drivers/gpio/Makefile
+++ b/drivers/gpio/Makefile
@@ -108,6 +108,7 @@ obj-$(CONFIG_GPIO_RDC321X)	+=3D gpio-rdc321x.o
 obj-$(CONFIG_GPIO_RCAR)		+=3D gpio-rcar.o
 obj-$(CONFIG_GPIO_REG)		+=3D gpio-reg.o
 obj-$(CONFIG_ARCH_SA1100)	+=3D gpio-sa1100.o
+obj-$(CONFIG_GPIO_SAMA5D2_PIOBU)	+=3D gpio-sama5d2-piobu.o
 obj-$(CONFIG_GPIO_SCH)		+=3D gpio-sch.o
 obj-$(CONFIG_GPIO_SCH311X)	+=3D gpio-sch311x.o
 obj-$(CONFIG_GPIO_SNPS_CREG)	+=3D gpio-creg-snps.o
diff --git a/drivers/gpio/gpio-sama5d2-piobu.c b/drivers/gpio/gpio-sama5d2-=
piobu.c
new file mode 100644
index 0000000..db0cb5d
--- /dev/null
+++ b/drivers/gpio/gpio-sama5d2-piobu.c
@@ -0,0 +1,253 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * SAMA5D2 PIOBU GPIO controller
+ *
+ * Copyright (C) 2018 Microchip Technology Inc. and its subsidiaries
+ *
+ * Author: Andrei Stefanescu <andrei.stefanescu@microchip.com>
+ *
+ */
+#include <linux/bits.h>
+#include <linux/gpio/driver.h>
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/mfd/syscon.h>
+#include <linux/module.h>
+#include <linux/of.h>
+#include <linux/platform_device.h>
+#include <linux/regmap.h>
+
+#define PIOBU_NUM 8
+#define PIOBU_REG_SIZE 4
+
+/*
+ * backup mode protection register for tamper detection
+ * normal mode protection register for tamper detection
+ * wakeup signal generation
+ */
+#define PIOBU_BMPR 0x7C
+#define PIOBU_NMPR 0x80
+#define PIOBU_WKPR 0x90
+
+#define PIOBU_BASE 0x18 /* PIOBU offset from SECUMOD base register address=
. */
+
+#define PIOBU_DET_OFFSET 16
+
+/* In the datasheet this bit is called OUTPUT */
+#define PIOBU_DIRECTION BIT(8)
+#define PIOBU_OUT BIT(8)
+#define PIOBU_IN 0
+
+#define PIOBU_SOD BIT(9)
+#define PIOBU_PDS BIT(10)
+
+#define PIOBU_HIGH BIT(9)
+#define PIOBU_LOW 0
+
+struct sama5d2_piobu {
+	struct gpio_chip chip;
+	struct regmap *regmap;
+};
+
+/**
+ * sama5d2_piobu_setup_pin() - prepares a pin for set_direction call
+ *
+ * Do not consider pin for tamper detection (normal and backup modes)
+ * Do not consider pin as tamper wakeup interrupt source
+ */
+static int sama5d2_piobu_setup_pin(struct gpio_chip *chip, unsigned int pi=
n)
+{
+	int ret;
+	struct sama5d2_piobu *piobu =3D container_of(chip, struct sama5d2_piobu,
+						   chip);
+	unsigned int mask =3D BIT(PIOBU_DET_OFFSET + pin);
+
+	ret =3D regmap_update_bits(piobu->regmap, PIOBU_BMPR, mask, 0);
+	if (ret)
+		return ret;
+
+	ret =3D regmap_update_bits(piobu->regmap, PIOBU_NMPR, mask, 0);
+	if (ret)
+		return ret;
+
+	return regmap_update_bits(piobu->regmap, PIOBU_WKPR, mask, 0);
+}
+
+/**
+ * sama5d2_piobu_write_value() - writes value & mask at the pin's PIOBU re=
gister
+ */
+static int sama5d2_piobu_write_value(struct gpio_chip *chip, unsigned int =
pin,
+				     unsigned int mask, unsigned int value)
+{
+	int reg;
+	struct sama5d2_piobu *piobu =3D container_of(chip, struct sama5d2_piobu,
+						   chip);
+
+	reg =3D PIOBU_BASE + pin * PIOBU_REG_SIZE;
+
+	return regmap_update_bits(piobu->regmap, reg, mask, value);
+}
+
+/**
+ * sama5d2_piobu_read_value() - read the value with masking from the pin's=
 PIOBU
+ *			      register
+ */
+static int sama5d2_piobu_read_value(struct gpio_chip *chip, unsigned int p=
in,
+				    unsigned int mask)
+{
+	struct sama5d2_piobu *piobu =3D container_of(chip, struct sama5d2_piobu,
+						   chip);
+	unsigned int val, reg;
+	int ret;
+
+	reg =3D PIOBU_BASE + pin * PIOBU_REG_SIZE;
+	ret =3D regmap_read(piobu->regmap, reg, &val);
+	if (ret < 0)
+		return ret;
+
+	return val & mask;
+}
+
+/**
+ * sama5d2_piobu_set_direction() - mark pin as input or output
+ */
+static int sama5d2_piobu_set_direction(struct gpio_chip *chip,
+				       unsigned int direction,
+				       unsigned int pin)
+{
+	return sama5d2_piobu_write_value(chip, pin, PIOBU_DIRECTION, direction);
+}
+
+/**
+ * sama5d2_piobu_get_direction() - gpiochip get_direction
+ */
+static int sama5d2_piobu_get_direction(struct gpio_chip *chip,
+				       unsigned int pin)
+{
+	int ret =3D sama5d2_piobu_read_value(chip, pin, PIOBU_DIRECTION);
+
+	if (ret < 0)
+		return ret;
+
+	return (ret =3D=3D PIOBU_IN) ? 1 : 0;
+}
+
+/**
+ * sama5d2_piobu_direction_input() - gpiochip direction_input
+ */
+static int sama5d2_piobu_direction_input(struct gpio_chip *chip,
+					 unsigned int pin)
+{
+	return sama5d2_piobu_set_direction(chip, PIOBU_IN, pin);
+}
+
+/**
+ * sama5d2_piobu_direction_output() - gpiochip direction_output
+ */
+static int sama5d2_piobu_direction_output(struct gpio_chip *chip,
+					  unsigned int pin, int value)
+{
+	return sama5d2_piobu_set_direction(chip, PIOBU_OUT, pin);
+}
+
+/**
+ * sama5d2_piobu_get() - gpiochip get
+ */
+static int sama5d2_piobu_get(struct gpio_chip *chip, unsigned int pin)
+{
+	/* if pin is input, read value from PDS else read from SOD */
+	int ret =3D sama5d2_piobu_get_direction(chip, pin);
+
+	if (ret =3D=3D 1)
+		ret =3D sama5d2_piobu_read_value(chip, pin, PIOBU_PDS);
+	else if (!ret)
+		ret =3D sama5d2_piobu_read_value(chip, pin, PIOBU_SOD);
+
+	if (ret < 0)
+		return ret;
+
+	return !!ret;
+}
+
+/**
+ * sama5d2_piobu_set() - gpiochip set
+ */
+static void sama5d2_piobu_set(struct gpio_chip *chip, unsigned int pin,
+			      int value)
+{
+	if (!value)
+		value =3D PIOBU_LOW;
+	else
+		value =3D PIOBU_HIGH;
+
+	sama5d2_piobu_write_value(chip, pin, PIOBU_SOD, value);
+}
+
+static int sama5d2_piobu_probe(struct platform_device *pdev)
+{
+	struct sama5d2_piobu *piobu;
+	int ret, i;
+
+	piobu =3D devm_kzalloc(&pdev->dev, sizeof(*piobu), GFP_KERNEL);
+	if (!piobu)
+		return -ENOMEM;
+
+	platform_set_drvdata(pdev, piobu);
+	piobu->chip.label =3D pdev->name;
+	piobu->chip.parent =3D &pdev->dev;
+	piobu->chip.of_node =3D pdev->dev.of_node;
+	piobu->chip.owner =3D THIS_MODULE,
+	piobu->chip.get_direction =3D sama5d2_piobu_get_direction,
+	piobu->chip.direction_input =3D sama5d2_piobu_direction_input,
+	piobu->chip.direction_output =3D sama5d2_piobu_direction_output,
+	piobu->chip.get =3D sama5d2_piobu_get,
+	piobu->chip.set =3D sama5d2_piobu_set,
+	piobu->chip.base =3D -1,
+	piobu->chip.ngpio =3D PIOBU_NUM,
+	piobu->chip.can_sleep =3D 0,
+
+	piobu->regmap =3D syscon_node_to_regmap(pdev->dev.parent->of_node);
+	if (IS_ERR(piobu->regmap)) {
+		dev_err(&pdev->dev, "Failed to get syscon regmap %ld\n",
+			PTR_ERR(piobu->regmap));
+		return PTR_ERR(piobu->regmap);
+	}
+
+	ret =3D devm_gpiochip_add_data(&pdev->dev, &piobu->chip, piobu);
+	if (ret) {
+		dev_err(&pdev->dev, "Failed to add gpiochip %d\n", ret);
+		return ret;
+	}
+
+	for (i =3D 0; i < PIOBU_NUM; ++i) {
+		ret =3D sama5d2_piobu_setup_pin(&piobu->chip, i);
+		if (ret) {
+			dev_err(&pdev->dev, "Failed to setup pin: %d %d\n",
+				i, ret);
+			return ret;
+		}
+	}
+
+	return 0;
+}
+
+static const struct of_device_id sama5d2_piobu_ids[] =3D {
+	{ .compatible =3D "microchip,sama5d2-piobu" },
+	{},
+};
+MODULE_DEVICE_TABLE(of, sama5d2_piobu_ids);
+
+static struct platform_driver sama5d2_piobu_driver =3D {
+	.driver =3D {
+		.name		=3D "sama5d2-piobu",
+		.of_match_table	=3D of_match_ptr(sama5d2_piobu_ids)
+	},
+	.probe =3D sama5d2_piobu_probe,
+};
+
+module_platform_driver(sama5d2_piobu_driver);
+
+MODULE_VERSION("1.0");
+MODULE_LICENSE("GPL v2");
+MODULE_DESCRIPTION("SAMA5D2 PIOBU controller driver");
+MODULE_AUTHOR("Andrei Stefanescu <andrei.stefanescu@microchip.com>");
--=20
2.7.4
