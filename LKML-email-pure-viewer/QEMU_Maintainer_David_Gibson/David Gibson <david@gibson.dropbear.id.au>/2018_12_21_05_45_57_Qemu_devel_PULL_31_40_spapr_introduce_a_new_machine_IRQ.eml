Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:45:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 11456580522
	for <like.xu@linux.intel.com>; Thu, 20 Dec 2018 22:22:47 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 22:22:46 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AZrahPhMwog/n5E33f3El6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/jzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhMtyg6JVrx2uuxNxzZPMYIyXNvRzcb7RcN0GSWVfRcZcTDBBApqm?=
 =?us-ascii?q?YocTFecNIeRVoo/grFUOtxu+AgysCfvhxDBSmH/23LA12PkgHwHHxwMgBNUOsH?=
 =?us-ascii?q?LJp9jyKagdS/61zKjVwjjYYPNW2Czy6JPPchAnu/2DQKhwcc3JyUY0CQzKlE+Q?=
 =?us-ascii?q?pZbkPzyIzOgCqXWb4vNmWOmyiGAnsxl8riazysovkIXFm58Zx1Pe+Slnzos4Jc?=
 =?us-ascii?q?e0RFN5bNK8DpdduD2WO5ZzT84sR2xkpDo2x7gYtZO+YSQHzZEqywDZZveaaYaH?=
 =?us-ascii?q?+AjjW/yUITpghHJqZra/hxGq/Eiky+38TdW00E1QoipKlNnMq2oB1xvJ6siIUv?=
 =?us-ascii?q?d9/0Gh1iiT1w3L9O1IPUM5mbDGJ5I8wbM8jIQfvErDEyPshUn7jreadkA+9eip?=
 =?us-ascii?q?7+TnbK/mppiZN4JskwHxLKEumtGmDeslLAcOQXaU+eCl2LL4+k35XbNKgeEona?=
 =?us-ascii?q?nCt5zaIcUbpq2nDANP3Ycj9g6yDzOn0NQegHkGI0hJeBOBj4j1JV7OJOr0Auu4?=
 =?us-ascii?q?g1SpizprwffGPrvuApXLM3jPirDhfaxy60JE0go80chf545ICrEGOP/zXk7xtN?=
 =?us-ascii?q?/GARMjPA203v3qCNF81oMYRGKODbWVMKLUsV+U+O0vJ/OAa5MSuDb4eLAY4eXz?=
 =?us-ascii?q?hyo5hUMFZvvump8Wc2yjWPJhJUqffDzrmNhGFG4Lug83SqvtkEGDVjhIIG+/Wr?=
 =?us-ascii?q?956jwlBYb1MIHYW4r4hbWA2Du8TIRbY30DBl2SHHOtbYidRvoXdAqUJclulCFC?=
 =?us-ascii?q?UqKuHJQ83xOjvxOv1rx8M+DP8TcZv5+w6N8g/+DPmAt08DVlA8mZ10mJTmd9hG?=
 =?us-ascii?q?ROQCU5j45lpkko5l6d0KQwrP1SDttVr6dFWxk7ObbTzuZhDNa0VhjGZt2EQUzg?=
 =?us-ascii?q?Q9ngCCxnHYF5+MMHf0soQ4bqtRvExSf/W7I=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAACJhRxchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTAqgjiDfYgZX4sdgg2XXoFzFRgUhy4iNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4jDII2BQIDGAmCXAMDAQIgBBkBAQQKKQECAwECBgEBHwUCIgQCA?=
 =?us-ascii?q?gMBKCsZBYMdggIBBKVncHwzgnYBAQWCQ4RuCIELhnODJYEcF4F/gRGLG4JXoT4?=
 =?us-ascii?q?JgimPMAwYYpB7mg2BRoIOMxoIFxmDJ4IbDBd/AQd9jC0tMYEEA4wigXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AZAACJhRxchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTA?=
 =?us-ascii?q?qgjiDfYgZX4sdgg2XXoFzFRgUhy4iNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jD?=
 =?us-ascii?q?II2BQIDGAmCXAMDAQIgBBkBAQQKKQECAwECBgEBHwUCIgQCAgMBKCsZBYMdggI?=
 =?us-ascii?q?BBKVncHwzgnYBAQWCQ4RuCIELhnODJYEcF4F/gRGLG4JXoT4JgimPMAwYYpB7m?=
 =?us-ascii?q?g2BRoIOMxoIFxmDJ4IbDBd/AQd9jC0tMYEEA4wigXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="57294988"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 20 Dec 2018 22:22:46 -0800
Received: from localhost ([::1]:42604 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gaECr-0002q5-8W
	for like.xu@linux.intel.com; Fri, 21 Dec 2018 01:22:45 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60890)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gaDed-0001LK-55
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 00:47:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gaDea-0000Zv-JK
	for qemu-devel@nongnu.org; Fri, 21 Dec 2018 00:47:22 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:42431)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gaDeZ-0008TI-PE; Fri, 21 Dec 2018 00:47:20 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43Ld0T3f2Bz9sPL; Fri, 21 Dec 2018 16:46:15 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1545371177;
	bh=5iQ4/J0EmskhwPvjURJBIVZEB0hsWx86pzDMjyiVKdE=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=RyUYZllBAUczd5DgQz2gfUHnrSn3zG96EvoQnetyA3uN77vuY4GMwnJjuNiNHxiRg
	ivoUarRGve9l/Fz6I+JgpH6eN7eUin6dRgA44/iw2wWPn5YStNttWaLoFLGRJH05Jb
	nGPFtXeF0hxTRngvfzsXr+3Cd8SkcsNnsqkwb6fQ=
From: David Gibson <david@gibson.dropbear.id.au>
To: peter.maydell@linaro.org
Date: Fri, 21 Dec 2018 16:45:57 +1100
Message-Id: <20181221054606.22007-32-david@gibson.dropbear.id.au>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181221054606.22007-1-david@gibson.dropbear.id.au>
References: <20181221054606.22007-1-david@gibson.dropbear.id.au>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: [Qemu-devel] [PULL 31/40] spapr: introduce a new machine IRQ
 backend for XIVE
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: gkurz@redhat.com, lvivier@redhat.com, qemu-devel@nongnu.org,
	qemu-ppc@nongnu.org, clg@kaod.org,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: C=C3=A9dric Le Goater <clg@kaod.org>

The XIVE IRQ backend uses the same layout as the new XICS backend but
covers the full range of the IRQ number space. The IRQ numbers for the
CPU IPIs are allocated at the bottom of this space, below 4K, to
preserve compatibility with XICS which does not use that range.

This should be enough given that the maximum number of CPUs is 1024
for the sPAPR machine under QEMU. For the record, the biggest POWER8
or POWER9 system has a maximum of 1536 HW threads (16 sockets, 192
cores, SMT8).

Signed-off-by: C=C3=A9dric Le Goater <clg@kaod.org>
Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
---
 hw/ppc/spapr_irq.c         | 93 ++++++++++++++++++++++++++++++++++++++
 include/hw/ppc/spapr.h     |  2 +
 include/hw/ppc/spapr_irq.h |  2 +
 3 files changed, 97 insertions(+)

diff --git a/hw/ppc/spapr_irq.c b/hw/ppc/spapr_irq.c
index f8b651de0e..1f5aac55d3 100644
--- a/hw/ppc/spapr_irq.c
+++ b/hw/ppc/spapr_irq.c
@@ -12,6 +12,7 @@
 #include "qemu/error-report.h"
 #include "qapi/error.h"
 #include "hw/ppc/spapr.h"
+#include "hw/ppc/spapr_xive.h"
 #include "hw/ppc/xics.h"
 #include "sysemu/kvm.h"
=20
@@ -205,6 +206,98 @@ sPAPRIrq spapr_irq_xics =3D {
     .print_info  =3D spapr_irq_print_info_xics,
 };
=20
+/*
+ * XIVE IRQ backend.
+ */
+static void spapr_irq_init_xive(sPAPRMachineState *spapr, Error **errp)
+{
+    MachineState *machine =3D MACHINE(spapr);
+    sPAPRMachineClass *smc =3D SPAPR_MACHINE_GET_CLASS(spapr);
+    uint32_t nr_servers =3D spapr_max_server_number(spapr);
+    DeviceState *dev;
+    int i;
+
+    /* KVM XIVE device not yet available */
+    if (kvm_enabled()) {
+        if (machine_kernel_irqchip_required(machine)) {
+            error_setg(errp, "kernel_irqchip requested. no KVM XIVE supp=
ort");
+            return;
+        }
+    }
+
+    dev =3D qdev_create(NULL, TYPE_SPAPR_XIVE);
+    qdev_prop_set_uint32(dev, "nr-irqs", smc->irq->nr_irqs);
+    /*
+     * 8 XIVE END structures per CPU. One for each available priority
+     */
+    qdev_prop_set_uint32(dev, "nr-ends", nr_servers << 3);
+    qdev_init_nofail(dev);
+
+    spapr->xive =3D SPAPR_XIVE(dev);
+
+    /* Enable the CPU IPIs */
+    for (i =3D 0; i < nr_servers; ++i) {
+        spapr_xive_irq_claim(spapr->xive, SPAPR_IRQ_IPI + i, false);
+    }
+}
+
+static int spapr_irq_claim_xive(sPAPRMachineState *spapr, int irq, bool =
lsi,
+                                Error **errp)
+{
+    if (!spapr_xive_irq_claim(spapr->xive, irq, lsi)) {
+        error_setg(errp, "IRQ %d is invalid", irq);
+        return -1;
+    }
+    return 0;
+}
+
+static void spapr_irq_free_xive(sPAPRMachineState *spapr, int irq, int n=
um)
+{
+    int i;
+
+    for (i =3D irq; i < irq + num; ++i) {
+        spapr_xive_irq_free(spapr->xive, i);
+    }
+}
+
+static qemu_irq spapr_qirq_xive(sPAPRMachineState *spapr, int irq)
+{
+    return spapr_xive_qirq(spapr->xive, irq);
+}
+
+static void spapr_irq_print_info_xive(sPAPRMachineState *spapr,
+                                      Monitor *mon)
+{
+    CPUState *cs;
+
+    CPU_FOREACH(cs) {
+        PowerPCCPU *cpu =3D POWERPC_CPU(cs);
+
+        xive_tctx_pic_print_info(XIVE_TCTX(cpu->intc), mon);
+    }
+
+    spapr_xive_pic_print_info(spapr->xive, mon);
+}
+
+/*
+ * XIVE uses the full IRQ number space. Set it to 8K to be compatible
+ * with XICS.
+ */
+
+#define SPAPR_IRQ_XIVE_NR_IRQS     0x2000
+#define SPAPR_IRQ_XIVE_NR_MSIS     (SPAPR_IRQ_XIVE_NR_IRQS - SPAPR_IRQ_M=
SI)
+
+sPAPRIrq spapr_irq_xive =3D {
+    .nr_irqs     =3D SPAPR_IRQ_XIVE_NR_IRQS,
+    .nr_msis     =3D SPAPR_IRQ_XIVE_NR_MSIS,
+
+    .init        =3D spapr_irq_init_xive,
+    .claim       =3D spapr_irq_claim_xive,
+    .free        =3D spapr_irq_free_xive,
+    .qirq        =3D spapr_qirq_xive,
+    .print_info  =3D spapr_irq_print_info_xive,
+};
+
 /*
  * sPAPR IRQ frontend routines for devices
  */
diff --git a/include/hw/ppc/spapr.h b/include/hw/ppc/spapr.h
index 198764066d..cb3082d319 100644
--- a/include/hw/ppc/spapr.h
+++ b/include/hw/ppc/spapr.h
@@ -16,6 +16,7 @@ typedef struct sPAPREventLogEntry sPAPREventLogEntry;
 typedef struct sPAPREventSource sPAPREventSource;
 typedef struct sPAPRPendingHPT sPAPRPendingHPT;
 typedef struct ICSState ICSState;
+typedef struct sPAPRXive sPAPRXive;
=20
 #define HPTE64_V_HPTE_DIRTY     0x0000000000000040ULL
 #define SPAPR_ENTRY_POINT       0x100
@@ -175,6 +176,7 @@ struct sPAPRMachineState {
     const char *icp_type;
     int32_t irq_map_nr;
     unsigned long *irq_map;
+    sPAPRXive  *xive;
=20
     bool cmd_line_caps[SPAPR_CAP_NUM];
     sPAPRCapabilities def, eff, mig;
diff --git a/include/hw/ppc/spapr_irq.h b/include/hw/ppc/spapr_irq.h
index bd7301e6d9..23cdb51b87 100644
--- a/include/hw/ppc/spapr_irq.h
+++ b/include/hw/ppc/spapr_irq.h
@@ -13,6 +13,7 @@
 /*
  * IRQ range offsets per device type
  */
+#define SPAPR_IRQ_IPI        0x0
 #define SPAPR_IRQ_EPOW       0x1000  /* XICS_IRQ_BASE offset */
 #define SPAPR_IRQ_HOTPLUG    0x1001
 #define SPAPR_IRQ_VIO        0x1100  /* 256 VIO devices */
@@ -42,6 +43,7 @@ typedef struct sPAPRIrq {
=20
 extern sPAPRIrq spapr_irq_xics;
 extern sPAPRIrq spapr_irq_xics_legacy;
+extern sPAPRIrq spapr_irq_xive;
=20
 void spapr_irq_init(sPAPRMachineState *spapr, Error **errp);
 int spapr_irq_claim(sPAPRMachineState *spapr, int irq, bool lsi, Error *=
*errp);
--=20
2.19.2


