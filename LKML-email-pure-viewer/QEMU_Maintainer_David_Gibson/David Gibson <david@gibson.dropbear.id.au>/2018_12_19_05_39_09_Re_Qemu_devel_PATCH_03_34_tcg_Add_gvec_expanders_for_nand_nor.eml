Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:30:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CEB1E5805CF
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 22:01:24 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 22:01:24 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJ8vp9hOeY6SXI2YZ6q0l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z8osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2/?=
 =?us-ascii?q?YYsAAPYOMvtaoIbzulUOtRmzCwujCe/yxDJEmmH53bYh3uQuDQ3LxhYtE84UvX?=
 =?us-ascii?q?jKqtj+KaccUfqyzKnN1TjNYelZ2Sn86IfVbxsvoPCMUqlrccrWz0kkCgTIgUiK?=
 =?us-ascii?q?poz7PjOay/8As2ea7+V7TuKvjGgnpxtsrTi1wccskpLGiZwPxVDe7yl5wZs6Kc?=
 =?us-ascii?q?eiR05meNOpFoZbuS+dN4tzWMwiQmdotT49yrwHvZ60ZjMFyI89yx7YcfyHfJCE?=
 =?us-ascii?q?7Q/5VOaWOTd3n2xqd6ilhxqo8Eiv1+vxXdS33lZStidJjMXAu3MX2xDO98SKSe?=
 =?us-ascii?q?Fx8lmv1DuPzQzf9+NJLVgqmafUN5It37s9m5QXvEjfAiP7nVv6gaqLekgh/+Wk?=
 =?us-ascii?q?9eLqaaj8qJCGLY97kAT+P7wumsOhBeQ4NRADX2ya+eSnyL3j5lf1QLpMjv0riK?=
 =?us-ascii?q?XZt4raJcsDqq64BQ9azJoj5g6hAzu609kUh2QLIE9GdR6dkYTkNVHDLOrlAfq9?=
 =?us-ascii?q?m1islS1kx/HCPr3vGJXNKX3Dna/4fblj7k5c1RM/ws1B6JJKFL4BJOv/VVT2tN?=
 =?us-ascii?q?zFCB82LxK7w/3gBNV514MeWnyADrWWMaPPqVKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z4MZXC+GfRmJUqZYXzxgtsbFmcKpAU+QPTwiFKeST5Te2qyX6?=
 =?us-ascii?q?Uk6zE/CYKmDpnMSpqigbycxyq7GpxWZmZbClGDC3vodoOEW+sSZyKWOMNujjsE?=
 =?us-ascii?q?Vb3yA7Inzgyk4Q/m16J8fK2T/iwDqYml0t9z6OvO0xYo+ntxBsWZ1miLCGZsgm?=
 =?us-ascii?q?IPQSRxxa16vAlxx0mO1ftFhedFH4lW7vJNTgBoLJPZ0ql2Bs7/Xkfbc86URU26?=
 =?us-ascii?q?atOhBz43U5Q22dBZeFt3GdipkkXe2TG3CaQejb2BCc8I9ffm3nPxLtxxg1bL0q?=
 =?us-ascii?q?UslUIhRIMbL2ythqdl+07TCojFnl+CkKCCcaUa1TTKsmCZwjzdkltfVVtcWLvE?=
 =?us-ascii?q?UTgwZ0HNqtKxsk/LUb6iIbsmOBBGz4iOMKxSYNDglxNHSLHqJYKNMCqKh26sCE?=
 =?us-ascii?q?PQlfu3Z43wdjBYhX2FBQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAADW3RlchxHrdtBkFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVIEAQEBAQsBgTCBOYEpjHWNKpdcgXMCDgUYBw2HJSI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCXAECAwECPQEBBAopAQIDAQIGA?=
 =?us-ascii?q?QEKGAkdCAMBCwUYMRMFBIMZAYIBAQSlQIIfgnYBAQWHJQcIgm2INoEcF4F/gRG?=
 =?us-ascii?q?CZC6IOoImoSgJgimEZopFDBhggUqPLJE4iD6BRwGCDDMaCBcZgycJghIMF4IEh?=
 =?us-ascii?q?lqFUy0xgQQDi2mBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ADAADW3RlchxHrdtBkFgQBAQEBAQIBAQEBBwIBAQEBgVI?=
 =?us-ascii?q?EAQEBAQsBgTCBOYEpjHWNKpdcgXMCDgUYBw2HJSI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgbDiMMgjYFAgMaAQaCXAECAwECPQEBBAopAQIDAQIGAQEKGAkdCAMBCwU?=
 =?us-ascii?q?YMRMFBIMZAYIBAQSlQIIfgnYBAQWHJQcIgm2INoEcF4F/gRGCZC6IOoImoSgJg?=
 =?us-ascii?q?imEZopFDBhggUqPLJE4iD6BRwGCDDMaCBcZgycJghIMF4IEhlqFUy0xgQQDi2m?=
 =?us-ascii?q?BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,371,1539673200"; 
   d="asc'?scan'208";a="67465709"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 22:01:23 -0800
Received: from localhost ([::1]:57765 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZUv4-0004ec-U6
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 01:01:23 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:41300)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gZUrq-0002HG-Bh
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 00:58:03 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gZUro-0007Lv-RV
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 00:58:02 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:34789)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gZUrn-0007Jz-KA; Wed, 19 Dec 2018 00:58:00 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 43KPLq3zwwz9sB7; Wed, 19 Dec 2018 16:57:55 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1545199075;
	bh=KK0QeSUM4FmSgj1QqhUcxMfsmCg7O9+6S57bmBkbOgc=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=oorgI5bI80Di5GWI2ae0Lz1JqFjD1hc1UE/Zk8ND8MAjfeaoEMgUA3DCdp00Z26jo
	VLCsMYipYzXlVwfBVT9ncNZakfpuLu1DjWN6j5SpSj5rBZ8YRNDQK/X/KzqMw3ydxs
	7lbRqwb1Haw9NFviZTNdAOPQqs8k7Rks/Hx2RhuM=
Date: Wed, 19 Dec 2018 16:39:09 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: Richard Henderson <richard.henderson@linaro.org>
Message-ID: <20181219053909.GF30570@umbus.fritz.box>
References: <20181218063911.2112-1-richard.henderson@linaro.org>
	<20181218063911.2112-4-richard.henderson@linaro.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="qftxBdZWiueWNAVY"
Content-Disposition: inline
In-Reply-To: <20181218063911.2112-4-richard.henderson@linaro.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH 03/34] tcg: Add gvec expanders for nand, nor,
 eqv
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, mark.cave-ayland@ilande.co.uk, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--qftxBdZWiueWNAVY
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Dec 17, 2018 at 10:38:40PM -0800, Richard Henderson wrote:
> Signed-off-by: Richard Henderson <richard.henderson@linaro.org>

Reviewed-by: David Gibson <david@gibson.dropbear.id.au>

> ---
>  accel/tcg/tcg-runtime.h      |  3 +++
>  tcg/tcg-op-gvec.h            |  6 +++++
>  tcg/tcg-op.h                 |  3 +++
>  accel/tcg/tcg-runtime-gvec.c | 33 +++++++++++++++++++++++
>  tcg/tcg-op-gvec.c            | 51 ++++++++++++++++++++++++++++++++++++
>  tcg/tcg-op-vec.c             | 21 +++++++++++++++
>  6 files changed, 117 insertions(+)
>=20
> diff --git a/accel/tcg/tcg-runtime.h b/accel/tcg/tcg-runtime.h
> index 1bd39d136d..835ddfebb2 100644
> --- a/accel/tcg/tcg-runtime.h
> +++ b/accel/tcg/tcg-runtime.h
> @@ -211,6 +211,9 @@ DEF_HELPER_FLAGS_4(gvec_or, TCG_CALL_NO_RWG, void, pt=
r, ptr, ptr, i32)
>  DEF_HELPER_FLAGS_4(gvec_xor, TCG_CALL_NO_RWG, void, ptr, ptr, ptr, i32)
>  DEF_HELPER_FLAGS_4(gvec_andc, TCG_CALL_NO_RWG, void, ptr, ptr, ptr, i32)
>  DEF_HELPER_FLAGS_4(gvec_orc, TCG_CALL_NO_RWG, void, ptr, ptr, ptr, i32)
> +DEF_HELPER_FLAGS_4(gvec_nand, TCG_CALL_NO_RWG, void, ptr, ptr, ptr, i32)
> +DEF_HELPER_FLAGS_4(gvec_nor, TCG_CALL_NO_RWG, void, ptr, ptr, ptr, i32)
> +DEF_HELPER_FLAGS_4(gvec_eqv, TCG_CALL_NO_RWG, void, ptr, ptr, ptr, i32)
> =20
>  DEF_HELPER_FLAGS_4(gvec_ands, TCG_CALL_NO_RWG, void, ptr, ptr, i64, i32)
>  DEF_HELPER_FLAGS_4(gvec_xors, TCG_CALL_NO_RWG, void, ptr, ptr, i64, i32)
> diff --git a/tcg/tcg-op-gvec.h b/tcg/tcg-op-gvec.h
> index ff43a29a0b..d65b9d9d4c 100644
> --- a/tcg/tcg-op-gvec.h
> +++ b/tcg/tcg-op-gvec.h
> @@ -242,6 +242,12 @@ void tcg_gen_gvec_andc(unsigned vece, uint32_t dofs,=
 uint32_t aofs,
>                         uint32_t bofs, uint32_t oprsz, uint32_t maxsz);
>  void tcg_gen_gvec_orc(unsigned vece, uint32_t dofs, uint32_t aofs,
>                        uint32_t bofs, uint32_t oprsz, uint32_t maxsz);
> +void tcg_gen_gvec_nand(unsigned vece, uint32_t dofs, uint32_t aofs,
> +                       uint32_t bofs, uint32_t oprsz, uint32_t maxsz);
> +void tcg_gen_gvec_nor(unsigned vece, uint32_t dofs, uint32_t aofs,
> +                      uint32_t bofs, uint32_t oprsz, uint32_t maxsz);
> +void tcg_gen_gvec_eqv(unsigned vece, uint32_t dofs, uint32_t aofs,
> +                      uint32_t bofs, uint32_t oprsz, uint32_t maxsz);
> =20
>  void tcg_gen_gvec_andi(unsigned vece, uint32_t dofs, uint32_t aofs,
>                         int64_t c, uint32_t oprsz, uint32_t maxsz);
> diff --git a/tcg/tcg-op.h b/tcg/tcg-op.h
> index db4e9188f4..1974bf1cae 100644
> --- a/tcg/tcg-op.h
> +++ b/tcg/tcg-op.h
> @@ -961,6 +961,9 @@ void tcg_gen_or_vec(unsigned vece, TCGv_vec r, TCGv_v=
ec a, TCGv_vec b);
>  void tcg_gen_xor_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b);
>  void tcg_gen_andc_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b);
>  void tcg_gen_orc_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b);
> +void tcg_gen_nand_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b);
> +void tcg_gen_nor_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b);
> +void tcg_gen_eqv_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b);
>  void tcg_gen_not_vec(unsigned vece, TCGv_vec r, TCGv_vec a);
>  void tcg_gen_neg_vec(unsigned vece, TCGv_vec r, TCGv_vec a);
> =20
> diff --git a/accel/tcg/tcg-runtime-gvec.c b/accel/tcg/tcg-runtime-gvec.c
> index 90340e56e0..d1802467d5 100644
> --- a/accel/tcg/tcg-runtime-gvec.c
> +++ b/accel/tcg/tcg-runtime-gvec.c
> @@ -512,6 +512,39 @@ void HELPER(gvec_orc)(void *d, void *a, void *b, uin=
t32_t desc)
>      clear_high(d, oprsz, desc);
>  }
> =20
> +void HELPER(gvec_nand)(void *d, void *a, void *b, uint32_t desc)
> +{
> +    intptr_t oprsz =3D simd_oprsz(desc);
> +    intptr_t i;
> +
> +    for (i =3D 0; i < oprsz; i +=3D sizeof(vec64)) {
> +        *(vec64 *)(d + i) =3D ~(*(vec64 *)(a + i) & *(vec64 *)(b + i));
> +    }
> +    clear_high(d, oprsz, desc);
> +}
> +
> +void HELPER(gvec_nor)(void *d, void *a, void *b, uint32_t desc)
> +{
> +    intptr_t oprsz =3D simd_oprsz(desc);
> +    intptr_t i;
> +
> +    for (i =3D 0; i < oprsz; i +=3D sizeof(vec64)) {
> +        *(vec64 *)(d + i) =3D ~(*(vec64 *)(a + i) | *(vec64 *)(b + i));
> +    }
> +    clear_high(d, oprsz, desc);
> +}
> +
> +void HELPER(gvec_eqv)(void *d, void *a, void *b, uint32_t desc)
> +{
> +    intptr_t oprsz =3D simd_oprsz(desc);
> +    intptr_t i;
> +
> +    for (i =3D 0; i < oprsz; i +=3D sizeof(vec64)) {
> +        *(vec64 *)(d + i) =3D ~(*(vec64 *)(a + i) ^ *(vec64 *)(b + i));
> +    }
> +    clear_high(d, oprsz, desc);
> +}
> +
>  void HELPER(gvec_ands)(void *d, void *a, uint64_t b, uint32_t desc)
>  {
>      intptr_t oprsz =3D simd_oprsz(desc);
> diff --git a/tcg/tcg-op-gvec.c b/tcg/tcg-op-gvec.c
> index ec231b78fb..81689d02f7 100644
> --- a/tcg/tcg-op-gvec.c
> +++ b/tcg/tcg-op-gvec.c
> @@ -1920,6 +1920,57 @@ void tcg_gen_gvec_orc(unsigned vece, uint32_t dofs=
, uint32_t aofs,
>      }
>  }
> =20
> +void tcg_gen_gvec_nand(unsigned vece, uint32_t dofs, uint32_t aofs,
> +                       uint32_t bofs, uint32_t oprsz, uint32_t maxsz)
> +{
> +    static const GVecGen3 g =3D {
> +        .fni8 =3D tcg_gen_nand_i64,
> +        .fniv =3D tcg_gen_nand_vec,
> +        .fno =3D gen_helper_gvec_nand,
> +        .prefer_i64 =3D TCG_TARGET_REG_BITS =3D=3D 64,
> +    };
> +
> +    if (aofs =3D=3D bofs) {
> +        tcg_gen_gvec_not(vece, dofs, aofs, oprsz, maxsz);
> +    } else {
> +        tcg_gen_gvec_3(dofs, aofs, bofs, oprsz, maxsz, &g);
> +    }
> +}
> +
> +void tcg_gen_gvec_nor(unsigned vece, uint32_t dofs, uint32_t aofs,
> +                      uint32_t bofs, uint32_t oprsz, uint32_t maxsz)
> +{
> +    static const GVecGen3 g =3D {
> +        .fni8 =3D tcg_gen_nor_i64,
> +        .fniv =3D tcg_gen_nor_vec,
> +        .fno =3D gen_helper_gvec_nor,
> +        .prefer_i64 =3D TCG_TARGET_REG_BITS =3D=3D 64,
> +    };
> +
> +    if (aofs =3D=3D bofs) {
> +        tcg_gen_gvec_not(vece, dofs, aofs, oprsz, maxsz);
> +    } else {
> +        tcg_gen_gvec_3(dofs, aofs, bofs, oprsz, maxsz, &g);
> +    }
> +}
> +
> +void tcg_gen_gvec_eqv(unsigned vece, uint32_t dofs, uint32_t aofs,
> +                      uint32_t bofs, uint32_t oprsz, uint32_t maxsz)
> +{
> +    static const GVecGen3 g =3D {
> +        .fni8 =3D tcg_gen_eqv_i64,
> +        .fniv =3D tcg_gen_eqv_vec,
> +        .fno =3D gen_helper_gvec_eqv,
> +        .prefer_i64 =3D TCG_TARGET_REG_BITS =3D=3D 64,
> +    };
> +
> +    if (aofs =3D=3D bofs) {
> +        tcg_gen_gvec_dup8i(dofs, oprsz, maxsz, -1);
> +    } else {
> +        tcg_gen_gvec_3(dofs, aofs, bofs, oprsz, maxsz, &g);
> +    }
> +}
> +
>  static const GVecGen2s gop_ands =3D {
>      .fni8 =3D tcg_gen_and_i64,
>      .fniv =3D tcg_gen_and_vec,
> diff --git a/tcg/tcg-op-vec.c b/tcg/tcg-op-vec.c
> index cefba3d185..d77fdf7c1d 100644
> --- a/tcg/tcg-op-vec.c
> +++ b/tcg/tcg-op-vec.c
> @@ -275,6 +275,27 @@ void tcg_gen_orc_vec(unsigned vece, TCGv_vec r, TCGv=
_vec a, TCGv_vec b)
>      }
>  }
> =20
> +void tcg_gen_nand_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b)
> +{
> +    /* TODO: Add TCG_TARGET_HAS_nand_vec when adding a backend supports =
it. */
> +    tcg_gen_and_vec(0, r, a, b);
> +    tcg_gen_not_vec(0, r, r);
> +}
> +
> +void tcg_gen_nor_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b)
> +{
> +    /* TODO: Add TCG_TARGET_HAS_nor_vec when adding a backend supports i=
t. */
> +    tcg_gen_or_vec(0, r, a, b);
> +    tcg_gen_not_vec(0, r, r);
> +}
> +
> +void tcg_gen_eqv_vec(unsigned vece, TCGv_vec r, TCGv_vec a, TCGv_vec b)
> +{
> +    /* TODO: Add TCG_TARGET_HAS_eqv_vec when adding a backend supports i=
t. */
> +    tcg_gen_xor_vec(0, r, a, b);
> +    tcg_gen_not_vec(0, r, r);
> +}
> +
>  void tcg_gen_not_vec(unsigned vece, TCGv_vec r, TCGv_vec a)
>  {
>      if (TCG_TARGET_HAS_not_vec) {

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--qftxBdZWiueWNAVY
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwZ2XwACgkQbDjKyiDZ
s5I12A/+PWgxRk6rmnilapLioHt3tX9O9bdnKZim6mBpTFVdVw7yLRIRPPPLCErd
Gy0cRUOVVh9XCaX/O0r28S4FWhiWuaruDuEhNxIMFQbgeBJGIsGDwtVbb1zh39WY
QL4KKBBbnjo79QShf/GWAi5BOY39ZBXMPlZFN/wyxy6IrhAkvPHm+xMDYeF8Xitg
u1NCF/NbK1czSjPGzpYcbW8f79FjlOGvTNq3zplSSHqJd/dzuSYgNWfUKA7d9XcP
TfxzYb+lNPyIsTGSUglKYC7iOj14/XUPaUVz4dR9GDmRWUsn1sMeb+Qij2hghJ+M
v7bnrZhV+e5V/8TDSPcRBCyTPguKV+fgd0ilKx4LiWSf/bY7ZMv5Vh7Y2sQvvN6E
uqzYoH7CBgwuKSM7l4Awxj87axyc2dGikYYQKHfj/2g308O4AVgizTlZNkCCVwrR
A+1ZmYhuRCqemkHIax/JKcdSKl836Lsuf03Rxoy1q+kUt/KVW6gqRMNfqr04oPBj
15xNkknUBrTuKLgU9bmthrab01OBhhtHWSx9soIXmtSkylsHwbUAwTUNUAKNW8e5
JHvieg+vmg2w2WeR9dxOW8ER1pSCViUNkNUxo15QJwyPd+1ULllWjnIdGIkoXh8D
KsDuUyVdGvKEkDaIKduUVMMY9Bvl30IxOI4DBPiYXZYdhXik53A=
=GayB
-----END PGP SIGNATURE-----

--qftxBdZWiueWNAVY--

