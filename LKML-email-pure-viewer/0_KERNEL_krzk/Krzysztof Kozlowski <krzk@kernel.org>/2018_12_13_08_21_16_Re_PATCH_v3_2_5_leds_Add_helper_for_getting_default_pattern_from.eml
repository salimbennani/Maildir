Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:20:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 82EE958079C;
	Thu, 13 Dec 2018 00:21:36 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 13 Dec 2018 00:21:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A3j4YdBQhvZHC0sEbfilVT9NBANpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRaEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KhsVRHolT?=
 =?us-ascii?q?wHNyYn/27Llsx+gqVboBe7qBx+xY7ffYWZOfV6c6/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqIIUeG0zKjI1jTCb+9R2Tfz9YPGdxchoPCIXbJ3f8vR0kovFwLYhViX?=
 =?us-ascii?q?qozlJTKU1ucWvmiY8eVgT+SvhHAjqw1rpTiv3Mgsh5DPi4kIxF7E8iB5z5w0Jd?=
 =?us-ascii?q?2+UEN7Zd+kEIVOuCGYMIt2X9kiQ2dytyY+0LEJpZm7fC0SxJQk2RHfcfqHfJaM?=
 =?us-ascii?q?4h75U+aROzh4iGp5d7KigRay8FKsxfH9V8SyzV1ErTJFn8HSunwR0xHf8NWLR/?=
 =?us-ascii?q?Vj8ku7xDqC1Bzf5vtFLE02jabXNYItz7oqmpcQsUnPBDH6lFn1gaOMa0kp+PWk?=
 =?us-ascii?q?5uL6abv8vJCcLZV7igTmP6QuhMO/BeM4PxAQX2iU5+u8zqfv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIrdJcQBqa61Gw5V0oA95BajFzqqzsgUkH0dIF5Ydh+LkZLlN0zNLfzkF/uy?=
 =?us-ascii?q?glahnC9ux//cP73hBpvNLmLEkLfkZbt9709cyAwuzdFQ/p5UCa8OIOj1WkDvsN?=
 =?us-ascii?q?zUFxg5MgKyw+n5EtVwzZ0eWW2RDa+DKq/SskGH5vgpI+aSYI8ZojH9K+Iq5/L2?=
 =?us-ascii?q?l382hUcdfbW13ZsQcH24GvVmI0aHbnb2jdYBDHwHvg4/TOzslV2DXiRfZ3e0X6?=
 =?us-ascii?q?Ig+D47DJiqApvERoComLaBxju0HoVKZmBaDVCBCXfoeJ+FW/cQci2SJdVtkjwZ?=
 =?us-ascii?q?Vbe7TY8h2gqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuU59ylCd3qRigPxYEtpT5/VOUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmrORH5w08qXc33vrK8Zn0XnG1r?=
 =?us-ascii?q?Isj10nQstJKG2nibRz9wnVB47VjUqZk7ymergb3C7I7G2D13aBvFlEUA5sVqXI?=
 =?us-ascii?q?RXMfaVHQrdjj4kPCTqWhCbIoMgZazc6CK61KasDmjFlcRffjPsjebHy1m2uqGR?=
 =?us-ascii?q?mIwbaMZpLwe2oBxCXdFFQEkwcL8HmbLwc+GDmur3jeDDN0E1LveF3j8e95pHO/?=
 =?us-ascii?q?TU80ygWKYlZl17q0/B4VmPOdR+kS3rICpCcutTF0EEyh0NLRDtqKvxBhc7lEYd?=
 =?us-ascii?q?Mh/FdH0nrUuBFnMZy+Ma9unF4efB5xv0P1yRp3DJ5NkcwrrHMs0QpzJriU0FJH?=
 =?us-ascii?q?dzOEw5/wPqfbJXX1/BCqc6TWwE3R0M6K+qcT7/Q1s0njvACsFkol73Vn09lU32?=
 =?us-ascii?q?GA5pnQCwoSS5bxUkcx9xh1vLzaZig954XJ1XxjK6W0sznC2843C+sh0BqvY9Bf?=
 =?us-ascii?q?MKacHg/oD8IaH9SuKPAtm1WxdB0EOP5d9aEqMMKmbfeJw7OrM/t6kzKgjmRH55?=
 =?us-ascii?q?5931mI9yp9TO7IwpkEz+uZ3guBSzfzklOhvtrrloBDYDEYBnC/xjT8BI5Neq1y?=
 =?us-ascii?q?ep4GCGezI8Gt2tpynZ/sW35C+16lCFMLw8upeRuUb1zg0gxcz0UXoXq7mSSmyz?=
 =?us-ascii?q?x4iS0mrq2a3CbW2eTtaAIHOnJXRGlllVrsO4m0gMwAU0iycgcpkwGp5UDkyKhB?=
 =?us-ascii?q?paRzNnXcTl1MfyfrMW5iSKywtryZbs5L6ZMotzhXUeumbVCbTL79vwUV0yf5E2?=
 =?us-ascii?q?RCwzA7cimguo/lkBxilGKdMHFzoWLZeMFx3xve5MbQReVM3joAXyR4jTjXBl6h?=
 =?us-ascii?q?P9im59mUlpHDsvygWGKlTJFcbS7rzYaYviuh+WJqGQG/n+y0mtD/Ewg1yzX719?=
 =?us-ascii?q?ppVSXPthr8eZPk16e5MeJmeElnGln85tF+GoF/lIswmZ4R1WIbhpWT4XoIj2Pz?=
 =?us-ascii?q?Pc9H1qL5aXoHXSQLzMLN4Aj5xE1jKWqExoLjWXWa2MdhZdi6YmUN1yI57sBKDr?=
 =?us-ascii?q?qU7bNekSt0pFq4sRzeYfxnkjgBzvsu7WYQg/sVtwo10iWdHrcSEFFbPSP2lhSE?=
 =?us-ascii?q?9dC+rLhNa2apfri9z05+ndGnDLGfrQBQQnf5epE+HSBu6sVzKk7D0Hr26ov8Yt?=
 =?us-ascii?q?nfccoTtgGIkxfHl+VVLZMxlvkQiiZ9N2Pyo2Yly/Ilghx0xp61opKHK2p28aK9?=
 =?us-ascii?q?Ax5YMCD1ZswJ9jHsi6ZegtiZ34S1Epp9HTULWYPiTei0HzIKqfTnKwGOHSUgqn?=
 =?us-ascii?q?ecHLrTBw6e511gr3LSCJCrLHCXKWIdzdVjQhmdOUNejBoVXDU8gp42CASqyNb9?=
 =?us-ascii?q?f0d+4zAb/kT4pQdUyuJ0Kxn/VX/SqxyyZTczTJifMQBa7gVf50rONcye7+RzHz?=
 =?us-ascii?q?xX/5G7rQyNLHCbaBpMDW0TRkOEAFXjNKG05dbc6+iYGva+L/zWbLWMs+NeUumH?=
 =?us-ascii?q?xYm13ot65TqMNdiPPnp/D/09wEVDRmt0G8DYmzUJViwWmDjBb8+dpBeg5CJ3qt?=
 =?us-ascii?q?qz/+jsWALq/YGPEaddMc1z+xCqhqeOL+6RhCFkKTZBy5MD33nIxKIE3F4VjSFu?=
 =?us-ascii?q?eCKgEbABtS7LUaLRlbVbDx8dayNvKsRI67gw0RVKOc7ektn1zKJ3juYpC1dZUl?=
 =?us-ascii?q?zsgsGpatILI2G+N1PHBVyHNLecJT3MzMH4f7m8SaBLjOhPsx2wuDCbE1LsPziZ?=
 =?us-ascii?q?ljnpUQyvPv9IjC2BIBNev4S9eA53CWf/VNLmdgG7MNhvgDIs3L07nWnKOnAcMD?=
 =?us-ascii?q?Rmd0NNr6ad7SdZgvV5BmxA4WBpLeiCmyaF8ebYLowavudsAiRxj+ha+mg1y6NJ?=
 =?us-ascii?q?7CFYQ/x4gDfSrt9ro128juaD0CZoUBpQpTZNn4+LuURiOaPE9phPQ3rE/RQN7X?=
 =?us-ascii?q?mOBBQOvddqFtrvu6VIwNjViK3zMCtC887T/cYEB8nbMsSHMH8gMRrvADHVDQsF?=
 =?us-ascii?q?QiStNWHQnEFdlPCS9nuIrpk1sJTsmZwOSqNFW1wxDP8VFkNlHNlRaKtwCystj7?=
 =?us-ascii?q?OfpNMD+jy1vkr/XsJf67PdROOJE+noJn66iqtAYAQTwrKweYcJJI7T2EF4bFR+?=
 =?us-ascii?q?2oPQFByDDph2viR9Y1ps8w12+39kQzhvik8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DWAgA2FhJch0O0hNFjFggBBgcGgWWCa?=
 =?us-ascii?q?oECJ4N8ljgUiQ2QJBYYCwgBh0MiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNgy?=
 =?us-ascii?q?CegEBAQECAQECIAQZAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcGQWDHAGBcwUIB?=
 =?us-ascii?q?QqbITyKHXB8M4J2AQEFgURAhSwIgQuKFYEcF4FAP4ERgmQugxMLAwECgiqCN4J?=
 =?us-ascii?q?Xj0mRSAmHDYpMGIIpjyGDBIsgixYPIYE8gXdNMAg7MQaCNQmCEjWDOCiEbIVAP?=
 =?us-ascii?q?zIBAYEDAQGMUQEB?=
X-IPAS-Result: =?us-ascii?q?A0DWAgA2FhJch0O0hNFjFggBBgcGgWWCaoECJ4N8ljgUiQ2?=
 =?us-ascii?q?QJBYYCwgBh0MiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNgyCegEBAQECAQECI?=
 =?us-ascii?q?AQZAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcGQWDHAGBcwUIBQqbITyKHXB8M4J?=
 =?us-ascii?q?2AQEFgURAhSwIgQuKFYEcF4FAP4ERgmQugxMLAwECgiqCN4JXj0mRSAmHDYpMG?=
 =?us-ascii?q?IIpjyGDBIsgixYPIYE8gXdNMAg7MQaCNQmCEjWDOCiEbIVAPzIBAYEDAQGMUQE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="43881228"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 00:21:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727322AbeLMIVb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 03:21:31 -0500
Received: from mail.kernel.org ([198.145.29.99]:52022 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727065AbeLMIVb (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 03:21:31 -0500
Received: from mail-lj1-f171.google.com (mail-lj1-f171.google.com [209.85.208.171])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 9126C20880;
        Thu, 13 Dec 2018 08:21:29 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544689289;
        bh=32YueCvqktQrU8uMAdobf3nWHw7Lcs9sxvDnl8mJoi0=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=BuyRE/V1nwtvaACO0FOiFYmEA5VYItlE5amRIcfnAad9JlQnP5yCvyn6atd/vJQQ+
         0FVC62kgLwCI//5aMueYpcE/TAvXx/JbEeBuuw2YkC1Quv7Zdxlj1xfXtFg3im2/ZC
         lsyktqQmCkMMh4A8kM9vWOAXEzB9spDxoX+00s1w=
Received: by mail-lj1-f171.google.com with SMTP id g11-v6so991742ljk.3;
        Thu, 13 Dec 2018 00:21:29 -0800 (PST)
X-Gm-Message-State: AA+aEWb0XguQ7L2KZY/5ARi2nQ1P+LBH/VFagoiFR/0z6ep1WfNAZOsj
        zFq2Q7k3KYpqNrDa7i9FY8peAUpKH7YU+rMwW0o=
X-Google-Smtp-Source: AFSGD/UsO8xGxAZFJ+Ut2AleD9hkjhN/NwPU4MZeaoN1bX04qGjqbebeQhuipW1GBMue4Y7mmpIktue9Vba8kVcFBU8=
X-Received: by 2002:a2e:5d12:: with SMTP id r18-v6mr15598316ljb.89.1544689287635;
 Thu, 13 Dec 2018 00:21:27 -0800 (PST)
MIME-Version: 1.0
References: <1544613406-27026-1-git-send-email-krzk@kernel.org>
 <1544613406-27026-3-git-send-email-krzk@kernel.org> <20181212122227.GB11088@amd>
In-Reply-To: <20181212122227.GB11088@amd>
From: Krzysztof Kozlowski <krzk@kernel.org>
Date: Thu, 13 Dec 2018 09:21:16 +0100
X-Gmail-Original-Message-ID: <CAJKOXPcka9qc7CgXhA0jbEFUurAYO=GZP0utiuYcNee4AmnMNg@mail.gmail.com>
Message-ID: <CAJKOXPcka9qc7CgXhA0jbEFUurAYO=GZP0utiuYcNee4AmnMNg@mail.gmail.com>
Subject: Re: [PATCH v3 2/5] leds: Add helper for getting default pattern from
 Device Tree
To: pavel@ucw.cz
Cc: jacek.anaszewski@gmail.com, robh+dt@kernel.org,
        mark.rutland@arm.com, baolin.wang@linaro.org,
        linux-leds@vger.kernel.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 12 Dec 2018 at 13:22, Pavel Machek <pavel@ucw.cz> wrote:
>
> On Wed 2018-12-12 12:16:43, Krzysztof Kozlowski wrote:
> > Multiple LED triggers might need to access default pattern so add a
> > helper for that.
> >
> > Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
>
> Acked-by: Pavel Machek <pavel@ucw.cz>
>
> >
> > New patch in the series
> >
> > ---
> >  drivers/leds/led-class.c | 25 +++++++++++++++++++++++++
> >  include/linux/leds.h     |  3 +++
> >  2 files changed, 28 insertions(+)
> >
> > diff --git a/drivers/leds/led-class.c b/drivers/leds/led-class.c
> > index 3c7e3487b373..44b95e6480f6 100644
> > --- a/drivers/leds/led-class.c
> > +++ b/drivers/leds/led-class.c
> > @@ -17,6 +17,7 @@
> >  #include <linux/leds.h>
> >  #include <linux/list.h>
> >  #include <linux/module.h>
> > +#include <linux/of.h>
> >  #include <linux/slab.h>
> >  #include <linux/spinlock.h>
> >  #include <linux/timer.h>
> > @@ -244,6 +245,30 @@ static int led_classdev_next_name(const char *init_name, char *name,
> >  }
> >
> >  /**
> > + * led_classdev_get_default_pattern - return default pattern
> > + *
> > + * @led_cdev: the led_classdev structure for this device
> > + *
> > + * Return: Null terminated string with default pattern from DeviceTree or NULL
> > + */
>
> Is it valid kerneldoc?

Yes, maybe kind a short but in general it follows style.
https://www.kernel.org/doc/Documentation/kernel-doc-nano-HOWTO.txt

> Note that core still owns the string so that
> caller is not expected to free it?

That should be obvious by returning "const char *". The
of_property_string() does not mention such case neither... I  can
document it but really "const char *" is self-documenting code.

> > +const char *led_classdev_get_default_pattern(struct led_classdev *led_cdev)
> > +{
> > +     struct device_node *np = dev_of_node(led_cdev->dev);
> > +     const char *pattern;
> > +
> > +     if (!np)
> > +             return NULL;
> > +
> > +     if (of_property_read_string(np, "led-pattern", &pattern))
> > +             return NULL;
> > +
> > +     if (!strlen(pattern))
> > +             return NULL;
> > +
> > +     return pattern;
> > +}

I missed here EXPORT_SYMBOL_GPL.

Best regards,
Krzysztof

> > +
> > +/**
> >   * of_led_classdev_register - register a new object of led_classdev class.
> >   *
> >   * @parent: parent of LED device
> > diff --git a/include/linux/leds.h b/include/linux/leds.h
> > index 5263f87e1d2c..9da2bfa183ea 100644
> > --- a/include/linux/leds.h
> > +++ b/include/linux/leds.h
> > @@ -129,6 +129,9 @@ struct led_classdev {
> >       struct mutex            led_access;
> >  };
> >
> > +extern const char *
> > +led_classdev_get_default_pattern(struct led_classdev *led_cdev);
> > +
> >  extern int of_led_classdev_register(struct device *parent,
> >                                   struct device_node *np,
> >                                   struct led_classdev *led_cdev);
>
> --
> (english) http://www.livejournal.com/~pavelmachek
> (cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blog.html
