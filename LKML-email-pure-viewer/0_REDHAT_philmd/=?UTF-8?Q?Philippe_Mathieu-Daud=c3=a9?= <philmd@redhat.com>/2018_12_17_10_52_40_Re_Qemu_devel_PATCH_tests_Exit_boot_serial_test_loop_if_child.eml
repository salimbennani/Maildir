Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:42:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C5C8E5805E2
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 03:00:39 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 17 Dec 2018 03:00:39 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJx5HYBAQbqxH4r/v6t/uUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37pMywAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95PWSxPAo2y?=
 =?us-ascii?q?bIUBAOQOMulas4bzqEYArQO8CAeuC+7j1zFFimPo0q0hyOkhDQLL0RY8E94Svn?=
 =?us-ascii?q?nZrtP4P7oSX+Cvy6nIyC3OYelW2Tf87IjIcwghoemSUr1odsTe01UvFwPEjlqO?=
 =?us-ascii?q?tIzpJj2b2f4Qs2eG9e1rSOWii3YnqwFwpjivw9ojh5LTho0L11/E9T92wJovKd?=
 =?us-ascii?q?KkT057ZMepHZ1NvC+ZL4t7Wt0uT31rtSog17EKpJ22cDIUxJkpxxPTceGLfoqQ?=
 =?us-ascii?q?7h/gV+udOyl0iG9/dL6hmxq+71KsxvD+W8Wq1ltBszBLncPWtn8X0hze8siHRe?=
 =?us-ascii?q?V5/kemwTuP0wHT6vpYIUAvj6bbJJghwqMqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jkb7n8u5OQKox5hhvgPqkgmsGzG/k0PwoWU2ie4+u81bnj/UPjQLVNi/07ir?=
 =?us-ascii?q?DZv47fJcQGv6K2HhFa0pg95Ba7Fjupy9MYnWQBLF1ZZh2HlI/lO1XPIPD7E/iz?=
 =?us-ascii?q?mVutkCpzyvDCP73hBIjNL3fZnLfge7Z991BTyA4pwd9D4JJUD6oMIPT0Wk/3u9?=
 =?us-ascii?q?zYCAI5Pxazw+b9B9VxzpkeVn6XAq+FLKPStkeF5uYuI+mPeoAZojn8K+U+6v7q?=
 =?us-ascii?q?jH85n0IdfKaz0ZsWbnC4AuppI0GDbXXwhdcBFDRCgwwlUea/iEGeSSUBIDG2Xr?=
 =?us-ascii?q?kg/Xc9D4SpC5qFQZqix7mI3SO+F5sRYXhaC1eKCjDxeoCZHvsBdi+WcfJniSEO?=
 =?us-ascii?q?AL2oSos90kO3uQrnjrZqMOfQvzcVrI/uz8Rd4erVmhcvsztuAJOGzmuPQmpoy3?=
 =?us-ascii?q?4OXCI8x6tloEZwmWuEhJJ5iPxRD9Abx/5PXgogLpnah7hgCtvyUxjNONeETlqr?=
 =?us-ascii?q?WM6hBxk1T9Q42dhIZFxyTZHqlx3Gwm+mDqEYk5SNA5o79L+a2GL+dOhnzHOT7K?=
 =?us-ascii?q?kgi1g+WsZ4EGS6hq9y6k3/DpPFEg3Nj6arcaEQ9DTA+GeK0SyFu0QOA104arnM?=
 =?us-ascii?q?QX1KPhielt/+/E6XCub2Ubk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AzAAANgRdchxHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAYEwgTyBJoN8iHiLF4FgLXyYTxIBARgUh1QiNwYNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIGw4vgjYFAgMaAQaCXAECAwECIAQLARMKKQMDAQIGAQEKG?=
 =?us-ascii?q?AICIgQCAgMBMAEFARwGAQwGAgEBAYMdgXQNAQMBnCE8ixB8M4kRgQ0SeYszF4F?=
 =?us-ascii?q?/gREngjY1gUuGPoJXAolCl1cJkVQGGIFdiBYRJocoiTyQAQIEAgQFAgUPIYE7g?=
 =?us-ascii?q?XgzIhsVgyeCJxeOHnGBB4t4gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AzAAANgRdchxHrdtBkGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAYEwgTyBJoN8iHiLF4FgLXyYTxIBARgUh1QiNwYNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIGw4vgjYFAgMaAQaCXAECAwECIAQLARMKKQMDAQIGAQEKGAICIgQCAgMBMAE?=
 =?us-ascii?q?FARwGAQwGAgEBAYMdgXQNAQMBnCE8ixB8M4kRgQ0SeYszF4F/gREngjY1gUuGP?=
 =?us-ascii?q?oJXAolCl1cJkVQGGIFdiBYRJocoiTyQAQIEAgQFAgUPIYE7gXgzIhsVgyeCJxe?=
 =?us-ascii?q?OHnGBB4t4gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="57760972"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 03:00:38 -0800
Received: from localhost ([::1]:45900 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYqdZ-0003qY-5i
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 06:00:37 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37274)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gYqcD-0002Y7-CA
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:59:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gYqVy-00052H-L9
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:52:50 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:36870)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gYqVw-0004zr-Lx
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:52:46 -0500
Received: by mail-wr1-f67.google.com with SMTP id s12so11323297wrt.4
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 02:52:42 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=7pe/y2GUwXerxiWH+BNtqLw1BWbjzCL/6Z7VAKRF8Fo=;
	b=j5zjvFCzsaV9KqilVVqfOkvOijncWh8j9w2u0h7Amheek70Y8tEomO/DIm8j+UDSdT
	d3ZmHSxbRlaV3KUwhV9rub3B2vA4r2Vp3uBSyixsfJRrlGJ+6jAD2hJy47QyUPbcRTBe
	nBUkQ+aKYV4vGdmO+TPet1NvfX18zsaLNft05OEQaT1IZ0dnjqsDUGl8Yy+Bat3d3z35
	Jz5xzL6USkBvrPI0TJkWyOuaTQZGPryh2FKQkdE5fyg3+fSLu6K+qXQ7+D3F8eyZmn1C
	d5tdd+85YvzB44fzGJLfkcHHB91TWhbu/andSG6JadUh/g2XsH9XG+Km2bi2ufrbh7gO
	e+6w==
X-Gm-Message-State: AA+aEWYV/vH7dJA7cGidQ2ECFx1msYdEzgY0ob4KDhsw1JkYJTC/CGxj
	WqAnZs44dKV8GI8If5CkbcpIVw==
X-Google-Smtp-Source: AFSGD/WXs21S0B5LOe/x0wL3rt60ImWGclM+J+JUJUFqBrlMZpCnW+PQOSiRcXVvQRrvUMl9z2Leyw==
X-Received: by 2002:adf:be0f:: with SMTP id n15mr10534352wrh.267.1545043961607;
	Mon, 17 Dec 2018 02:52:41 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172]) by smtp.gmail.com with ESMTPSA id
	f66sm13215325wmd.28.2018.12.17.02.52.40
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 17 Dec 2018 02:52:41 -0800 (PST)
To: Richard Henderson <richard.henderson@linaro.org>, qemu-devel@nongnu.org
References: <20181217035816.21777-1-richard.henderson@linaro.org>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <fb23fabe-4f49-0ef1-2f0d-9e509665e7ec@redhat.com>
Date: Mon, 17 Dec 2018 11:52:40 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181217035816.21777-1-richard.henderson@linaro.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.221.67
Subject: Re: [Qemu-devel] [PATCH] tests: Exit boot-serial-test loop if child
 dies
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>,
	Thomas Huth <thuth@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/17/18 4:58 AM, Richard Henderson wrote:
> There's no point in waiting 5 full minutes when there will be
> no more output.  Compute timeout based on elapsed wall clock
> time instead of N * delays, as the delay is a minimum sleep time.
> 
> Cc: Thomas Huth <thuth@redhat.com>
> Cc: Laurent Vivier <lvivier@redhat.com>
> Cc: Paolo Bonzini <pbonzini@redhat.com>
> Signed-off-by: Richard Henderson <richard.henderson@linaro.org>

Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>

> ---
>  tests/libqtest.h         |  8 +++++
>  tests/boot-serial-test.c | 16 +++++++--
>  tests/libqtest.c         | 70 +++++++++++++++++++++++++---------------
>  3 files changed, 65 insertions(+), 29 deletions(-)
> 
> diff --git a/tests/libqtest.h b/tests/libqtest.h
> index 96a6c01352..9758c51be6 100644
> --- a/tests/libqtest.h
> +++ b/tests/libqtest.h
> @@ -1011,4 +1011,12 @@ bool qmp_rsp_is_err(QDict *rsp);
>   */
>  void qmp_assert_error_class(QDict *rsp, const char *class);
>  
> +/**
> + * qtest_probe_child:
> + * @s: QTestState instance to operate on.
> + *
> + * Returns: true if the child is still alive.
> + */
> +bool qtest_probe_child(QTestState *s);
> +
>  #endif
> diff --git a/tests/boot-serial-test.c b/tests/boot-serial-test.c
> index 8ec6aed35d..54b9347325 100644
> --- a/tests/boot-serial-test.c
> +++ b/tests/boot-serial-test.c
> @@ -130,11 +130,12 @@ static testdef_t tests[] = {
>  
>  static bool check_guest_output(const testdef_t *test, int fd)
>  {
> -    int i, nbr = 0, pos = 0, ccnt;
> +    int nbr = 0, pos = 0, ccnt;
> +    time_t now, start = time(NULL);
>      char ch;
>  
> -    /* Poll serial output... Wait at most 360 seconds */
> -    for (i = 0; i < 36000; ++i) {
> +    /* Poll serial output... */
> +    while (1) {
>          ccnt = 0;
>          while (ccnt++ < 512 && (nbr = read(fd, &ch, 1)) == 1) {
>              if (ch == test->expect[pos]) {
> @@ -148,6 +149,15 @@ static bool check_guest_output(const testdef_t *test, int fd)
>              }
>          }
>          g_assert(nbr >= 0);
> +        /* Wait only if the child is still alive.  */
> +        if (!qtest_probe_child(global_qtest)) {
> +            break;
> +        }
> +        /* Wait at most 360 seconds.  */
> +        now = time(NULL);
> +        if (now - start >= 360) {
> +            break;
> +        }
>          g_usleep(10000);
>      }
>  
> diff --git a/tests/libqtest.c b/tests/libqtest.c
> index 43be078518..1d75d3c936 100644
> --- a/tests/libqtest.c
> +++ b/tests/libqtest.c
> @@ -39,10 +39,11 @@ struct QTestState
>  {
>      int fd;
>      int qmp_fd;
> +    pid_t qemu_pid;  /* our child QEMU process */
> +    int wstatus;
> +    bool big_endian;
>      bool irq_level[MAX_IRQ];
>      GString *rx;
> -    pid_t qemu_pid;  /* our child QEMU process */
> -    bool big_endian;
>  };
>  
>  static GHookList abrt_hooks;
> @@ -96,36 +97,52 @@ static int socket_accept(int sock)
>      return ret;
>  }
>  
> +bool qtest_probe_child(QTestState *s)
> +{
> +    pid_t pid = s->qemu_pid;
> +
> +    if (pid != -1) {
> +        pid = waitpid(pid, &s->wstatus, WNOHANG);
> +        if (pid == 0) {
> +            return true;
> +        }
> +        s->qemu_pid = -1;
> +    }
> +    return false;
> +}
> +
>  static void kill_qemu(QTestState *s)
>  {
> -    if (s->qemu_pid != -1) {
> -        int wstatus = 0;
> -        pid_t pid;
> -
> -        kill(s->qemu_pid, SIGTERM);
> -        TFR(pid = waitpid(s->qemu_pid, &wstatus, 0));
> +    pid_t pid = s->qemu_pid;
> +    int wstatus;
>  
> +    /* Skip wait if qtest_probe_child already reaped.  */
> +    if (pid != -1) {
> +        kill(pid, SIGTERM);
> +        TFR(pid = waitpid(s->qemu_pid, &s->wstatus, 0));
>          assert(pid == s->qemu_pid);
> -        /*
> -         * We expect qemu to exit with status 0; anything else is
> -         * fishy and should be logged with as much detail as possible.
> -         */
> -        if (wstatus) {
> -            if (WIFEXITED(wstatus)) {
> -                fprintf(stderr, "%s:%d: kill_qemu() tried to terminate QEMU "
> -                        "process but encountered exit status %d\n",
> -                        __FILE__, __LINE__, WEXITSTATUS(wstatus));
> -            } else if (WIFSIGNALED(wstatus)) {
> -                int sig = WTERMSIG(wstatus);
> -                const char *signame = strsignal(sig) ?: "unknown ???";
> -                const char *dump = WCOREDUMP(wstatus) ? " (core dumped)" : "";
> +    }
>  
> -                fprintf(stderr, "%s:%d: kill_qemu() detected QEMU death "
> -                        "from signal %d (%s)%s\n",
> -                        __FILE__, __LINE__, sig, signame, dump);
> -            }
> -            abort();
> +    /*
> +     * We expect qemu to exit with status 0; anything else is
> +     * fishy and should be logged with as much detail as possible.
> +     */
> +    wstatus = s->wstatus;
> +    if (wstatus) {
> +        if (WIFEXITED(wstatus)) {
> +            fprintf(stderr, "%s:%d: kill_qemu() tried to terminate QEMU "
> +                    "process but encountered exit status %d\n",
> +                    __FILE__, __LINE__, WEXITSTATUS(wstatus));
> +        } else if (WIFSIGNALED(wstatus)) {
> +            int sig = WTERMSIG(wstatus);
> +            const char *signame = strsignal(sig) ?: "unknown ???";
> +            const char *dump = WCOREDUMP(wstatus) ? " (core dumped)" : "";
> +
> +            fprintf(stderr, "%s:%d: kill_qemu() detected QEMU death "
> +                    "from signal %d (%s)%s\n",
> +                    __FILE__, __LINE__, sig, signame, dump);
>          }
> +        abort();
>      }
>  }
>  
> @@ -228,6 +245,7 @@ QTestState *qtest_init_without_qmp_handshake(const char *extra_args)
>  
>      g_test_message("starting QEMU: %s", command);
>  
> +    s->wstatus = 0;
>      s->qemu_pid = fork();
>      if (s->qemu_pid == 0) {
>          setenv("QEMU_AUDIO_DRV", "none", true);
> 

