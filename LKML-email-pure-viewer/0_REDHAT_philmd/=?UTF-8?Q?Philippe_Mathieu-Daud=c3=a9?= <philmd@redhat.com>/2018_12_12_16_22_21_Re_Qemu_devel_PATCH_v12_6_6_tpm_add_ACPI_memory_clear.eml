Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:52:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 15E5F58079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 08:22:44 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 08:22:43 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AwtoOzByDF99HyrzXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoQLfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXRPXshRWSJCDI2z?=
 =?us-ascii?q?YYQAAOgdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0m0OksCx3K0BAuEt8Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTG1zXDb/JS2Tf88IjIag4urumLU71qbcrRyUgvGB3YjlmJ?=
 =?us-ascii?q?p4LqJS6V2fkXtGOG6OdgTeKvi28jqwF0vzei3d0shZfUiYIV0F/E6T91z5oyJd?=
 =?us-ascii?q?29UUN2Z8OvHphItyyCKYd6XsAvT3t1tConybAKo4C3cSYKxZg92hLSaeSLf5WM?=
 =?us-ascii?q?7x/jTuqdPDZ1iXN/dL6imRq/81KsxvPhWsWo1ltBszBLncPWtn8X0hze8siHRe?=
 =?us-ascii?q?V5/kemwTuP0wHT6vpYIUAvj6bbJJghwqMqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jkb7n8u5OQKox5hhvgPqkgmsGzG/k0PwoWU2ie4+u81bnj/UPjQLVNi/07ir?=
 =?us-ascii?q?DZv47fJcQGv6K2HhFa0pg95Ba7Fjupy9MYnWQBLF1ZZh2HlI/lO1XPIPD7E/iz?=
 =?us-ascii?q?mVutkCpzyvDCP73hBIjNL3fZnLfge7Z991BTyA4pwd9D4JJUD6oMIPT0Wk/3u9?=
 =?us-ascii?q?zYCAI5Pxazw+b9B9VxzpkeVn6XAq+FLKPStkeF5uYuI+mPeoAZojn8K+U+6v7q?=
 =?us-ascii?q?jH85n0IdfKaz0ZsWbnC4AuppI0GDbXXwhdcBFDRCgwwlUea/iEGeSSUBIDG2Xr?=
 =?us-ascii?q?kg/Xc9D4SpC5qFQZqix7mI3SO+F5sRYXhaC1eKCjDxeoCZHvsBdi+WcfJniSEO?=
 =?us-ascii?q?AL2oSos90kO3uQrnjrZqMOfQvzcVrI/uz8Rd4erVmhcvsztuAJOGzmuPQmpoy3?=
 =?us-ascii?q?4OXCI8x6tloEZwmWuEhI1xmfcdPNpf/XJ+dhogOJfBh7h/Asr5UwTNZNrPTEu8?=
 =?us-ascii?q?T9y7KSs8QtI435kFZEMrX527gxXemianHbIRv7qMApMy7+TbxXe1b+J00GTC0+?=
 =?us-ascii?q?EMlUIrQYMbMWC8naN83xLeC47AjwOSkKP8JooG2yuYzGeCyWuWpExvdQdsUaTI?=
 =?us-ascii?q?QDUzb1baLJyt/kPDS7qiIa4qPgtI1YiJLa4cOY6htklPWPq2YIeWWGm2gWrlQE?=
 =?us-ascii?q?/Qnr4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ByAAASNRFcmBHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYExgk8Tg3uIeIszgWAtfJZrgV8SAQEYFIc+IjgSAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEBAQgLCwYbDi+CNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoYA?=
 =?us-ascii?q?gIiBAICAwEwAQUBDgENBgEMBgIBAQGDHIF1DQEDAZpJPIsNfDOJIIENEnmIaYJ?=
 =?us-ascii?q?IF4F/gREngjY1hGqDG4JXAok9gXOVXAmRUQYYiWkQh02JKY9vAgQCBAUCBQ8hg?=
 =?us-ascii?q?TyBdzMiGxWDJ4InF44ecYEHiwWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ByAAASNRFcmBHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBZYE?=
 =?us-ascii?q?xgk8Tg3uIeIszgWAtfJZrgV8SAQEYFIc+IjgSAQMBAQEBAQECARMBAQEBAQgLC?=
 =?us-ascii?q?wYbDi+CNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoYAgIiBAICAwEwAQU?=
 =?us-ascii?q?BDgENBgEMBgIBAQGDHIF1DQEDAZpJPIsNfDOJIIENEnmIaYJIF4F/gREngjY1h?=
 =?us-ascii?q?GqDG4JXAok9gXOVXAmRUQYYiWkQh02JKY9vAgQCBAUCBQ8hgTyBdzMiGxWDJ4I?=
 =?us-ascii?q?nF44ecYEHiwWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="44677454"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 08:22:42 -0800
Received: from localhost ([::1]:45963 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX7HV-0006j2-B7
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 11:22:41 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43895)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gX7HL-0006ik-Kl
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 11:22:32 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gX7HH-0007nt-F3
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 11:22:31 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:39795)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gX7HH-0007ld-4o
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 11:22:27 -0500
Received: by mail-wr1-f68.google.com with SMTP id t27so18292860wra.6
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 08:22:25 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=8B3jkndPoibfX7BIsXsm4lsEICo/lyIt4mhZbqAdRB0=;
	b=oLw8455WRGIDLgK4HoJBF+w0v+qNmJLyRv+ezMLR/Ki0eOG6l/Ve/AyxeA/xN/QPTC
	FhO09oBdiAG7Is6RhRWZSNIP/7WVZkwczJaxAR4xLlp/JK5p8Eo0zqmSFz/IH8Wg4fcX
	tpHlFSNyiNTIUNeAz8xZo8I3TW9BAeEvHwLTebwDG0sliXbalJfZlbVBullEMljGt5ra
	C7ddVmkKEd4n0IwEuVqoKvXu16IDa4fLEpzKuhNdXPkNST01Z/Mq+cKhsaKhwX6Blv22
	U3PScxEIl34QE8USGzbtPxocQLvt6JTEfq2VsEnJPF72mNQVoLpTQYrvRjnD0wnbc6Nt
	UiKw==
X-Gm-Message-State: AA+aEWZzJ3SvxFVya2KJohkNqJKRr2qfiqvOcEb/+v/KTocR28yRMuei
	zjr12FMnqIstBKm+/gTRkZgJUw==
X-Google-Smtp-Source: AFSGD/UFu67rWybkMR2tCjj1eg9+IkqNg7Invg4GZh+zN754Ly2cjnQvn5MjGNK6ijQAVajMc7ZxTA==
X-Received: by 2002:a5d:620f:: with SMTP id y15mr17317490wru.314.1544631743860;
	Wed, 12 Dec 2018 08:22:23 -0800 (PST)
Received: from [10.201.33.118] ([195.166.127.210])
	by smtp.gmail.com with ESMTPSA id
	o8sm17182348wrx.15.2018.12.12.08.22.22
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 12 Dec 2018 08:22:23 -0800 (PST)
To: =?UTF-8?Q?Marc-Andr=c3=a9_Lureau?= <marcandre.lureau@redhat.com>,
	qemu-devel@nongnu.org, Laszlo Ersek <lersek@redhat.com>
References: <20180910083222.8245-1-marcandre.lureau@redhat.com>
	<20180910083222.8245-7-marcandre.lureau@redhat.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <62b5734c-c23e-cfc2-701e-45692a7f1bd1@redhat.com>
Date: Wed, 12 Dec 2018 17:22:21 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20180910083222.8245-7-marcandre.lureau@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.221.68
Subject: Re: [Qemu-devel] [PATCH v12 6/6] tpm: add ACPI memory clear
 interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>,
	"Michael S. Tsirkin" <mst@redhat.com>,
	stefanb@linux.vnet.ibm.com, Igor Mammedov <imammedo@redhat.com>,
	Paolo Bonzini <pbonzini@redhat.com>, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 9/10/18 10:32 AM, Marc-André Lureau wrote:
> This allows to pass the last failing test from the Windows HLK TPM 2.0
> TCG PPI 1.3 tests.
> 
> The interface is described in the "TCG Platform Reset Attack
> Mitigation Specification", chapter 6 "ACPI _DSM Function". According
> to Laszlo, it's not so easy to implement in OVMF, he suggested to do
> it in qemu instead.
> 
> Signed-off-by: Marc-André Lureau <marcandre.lureau@redhat.com>
> ---
>  hw/tpm/tpm_ppi.h     |  2 ++
>  hw/i386/acpi-build.c | 46 ++++++++++++++++++++++++++++++++++++++++++++
>  hw/tpm/tpm_crb.c     |  1 +
>  hw/tpm/tpm_ppi.c     | 22 +++++++++++++++++++++
>  hw/tpm/tpm_tis.c     |  1 +
>  docs/specs/tpm.txt   |  2 ++
>  hw/tpm/trace-events  |  3 +++
>  7 files changed, 77 insertions(+)
> 
> diff --git a/hw/tpm/tpm_ppi.h b/hw/tpm/tpm_ppi.h
> index c2ab2ed300..b8f67962c7 100644
> --- a/hw/tpm/tpm_ppi.h
> +++ b/hw/tpm/tpm_ppi.h
> @@ -23,4 +23,6 @@ typedef struct TPMPPI {
>  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
>                    hwaddr addr, Object *obj, Error **errp);
>  

Can you add documentation?

> +void tpm_ppi_reset(TPMPPI *tpmppi);
> +
>  #endif /* TPM_TPM_PPI_H */
> diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
> index c5e9a6e11d..2ab3e8fae7 100644
> --- a/hw/i386/acpi-build.c
> +++ b/hw/i386/acpi-build.c
> @@ -1824,6 +1824,13 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
>      pprq = aml_name("PPRQ");
>      pprm = aml_name("PPRM");
>  
> +    aml_append(dev,
> +               aml_operation_region("TPP3", AML_SYSTEM_MEMORY,
> +                                    aml_int(TPM_PPI_ADDR_BASE + 0x15a),

Can you add a definition for this magic value?
Maybe:

#define TPM_PPI_MEMORY_OVERWRITE_OFFSET 0x15a

or

#define TPM_PPI_MOVV_OFFSET 0x15a

> +                                    0x1));
> +    field = aml_field("TPP3", AML_BYTE_ACC, AML_NOLOCK, AML_PRESERVE);
> +    aml_append(field, aml_named_field("MOVV", 8));
> +    aml_append(dev, field);
>      /*
>       * DerefOf in Windows is broken with SYSTEM_MEMORY.  Use a dynamic
>       * operation region inside of a method for getting FUNC[op].
> @@ -2166,7 +2173,46 @@ build_tpm_ppi(TPMIf *tpm, Aml *dev)
>              aml_append(ifctx, aml_return(aml_buffer(1, zerobyte)));
>          }
>          aml_append(method, ifctx);
> +
> +        ifctx = aml_if(
> +            aml_equal(uuid,
> +                      aml_touuid("376054ED-CC13-4675-901C-4756D7F2D45D")));
> +        {
> +            /* standard DSM query function */
> +            ifctx2 = aml_if(aml_equal(function, zero));
> +            {
> +                uint8_t byte_list[1] = { 0x03 };
> +                aml_append(ifctx2, aml_return(aml_buffer(1, byte_list)));
> +            }
> +            aml_append(ifctx, ifctx2);
> +
> +            /*
> +             * TCG Platform Reset Attack Mitigation Specification 1.0 Ch.6
> +             *
> +             * Arg 2 (Integer): Function Index = 1
> +             * Arg 3 (Package): Arguments = Package: Type: Integer
> +             *                  Operation Value of the Request
> +             * Returns: Type: Integer
> +             *          0: Success
> +             *          1: General Failure
> +             */
> +            ifctx2 = aml_if(aml_equal(function, one));
> +            {
> +                aml_append(ifctx2,
> +                           aml_store(aml_derefof(aml_index(arguments, zero)),
> +                                     op));
> +                {
> +                    aml_append(ifctx2, aml_store(op, aml_name("MOVV")));
> +
> +                    /* 0: success */
> +                    aml_append(ifctx2, aml_return(zero));
> +                }
> +            }
> +            aml_append(ifctx, ifctx2);
> +        }
> +        aml_append(method, ifctx);
>      }
> +
>      aml_append(dev, method);
>  }
>  
> diff --git a/hw/tpm/tpm_crb.c b/hw/tpm/tpm_crb.c
> index b243222fd6..48f6a716ad 100644
> --- a/hw/tpm/tpm_crb.c
> +++ b/hw/tpm/tpm_crb.c
> @@ -233,6 +233,7 @@ static void tpm_crb_reset(void *dev)
>  {
>      CRBState *s = CRB(dev);
>  
> +    tpm_ppi_reset(&s->ppi);
>      tpm_backend_reset(s->tpmbe);
>  
>      memset(s->regs, 0, sizeof(s->regs));
> diff --git a/hw/tpm/tpm_ppi.c b/hw/tpm/tpm_ppi.c
> index f2f07f895e..ac05ba8d3c 100644
> --- a/hw/tpm/tpm_ppi.c
> +++ b/hw/tpm/tpm_ppi.c
> @@ -16,8 +16,30 @@
>  #include "qapi/error.h"
>  #include "cpu.h"
>  #include "sysemu/memory_mapping.h"
> +#include "sysemu/reset.h"
>  #include "migration/vmstate.h"
>  #include "tpm_ppi.h"
> +#include "trace.h"
> +
> +void tpm_ppi_reset(TPMPPI *tpmppi)
> +{
> +    if (tpmppi->buf[0x15a] & 0x1) {

TPM_PPI_MOVV_OFFSET

> +        GuestPhysBlockList guest_phys_blocks;
> +        GuestPhysBlock *block;
> +
> +        guest_phys_blocks_init(&guest_phys_blocks);
> +        guest_phys_blocks_append(&guest_phys_blocks);
> +        QTAILQ_FOREACH(block, &guest_phys_blocks.head, next) {
> +            trace_tpm_ppi_memset(block->host_addr,
> +                             block->target_end - block->target_start);
> +            memset(block->host_addr, 0,
> +                   block->target_end - block->target_start);
> +            memory_region_set_dirty(block->mr, 0,
> +                                    block->target_end - block->target_start);
> +        }
> +        guest_phys_blocks_free(&guest_phys_blocks);
> +    }
> +}
>  
>  bool tpm_ppi_init(TPMPPI *tpmppi, struct MemoryRegion *m,
>                    hwaddr addr, Object *obj, Error **errp)
> diff --git a/hw/tpm/tpm_tis.c b/hw/tpm/tpm_tis.c
> index 70432ffe8b..d9bfa956cc 100644
> --- a/hw/tpm/tpm_tis.c
> +++ b/hw/tpm/tpm_tis.c
> @@ -868,6 +868,7 @@ static void tpm_tis_reset(DeviceState *dev)
>      s->be_buffer_size = MIN(tpm_backend_get_buffer_size(s->be_driver),
>                              TPM_TIS_BUFFER_MAX);
>  
> +    tpm_ppi_reset(&s->ppi);
>      tpm_backend_reset(s->be_driver);
>  
>      s->active_locty = TPM_TIS_NO_LOCALITY;
> diff --git a/docs/specs/tpm.txt b/docs/specs/tpm.txt
> index 332c2ae597..ce9bda3c89 100644
> --- a/docs/specs/tpm.txt
> +++ b/docs/specs/tpm.txt
> @@ -121,6 +121,8 @@ layout:
>   +----------+--------+--------+-------------------------------------------+
>   | next_step|   0x1  |  0x159 | Operation to execute after reboot by      |
>   |          |        |        | firmware. Used by firmware.               |
> + +----------+--------+--------+-------------------------------------------+
> + | movv     |   0x1  |  0x15a | Memory overwrite variable                 |
>   +----------+--------+--------+-------------------------------------------+
>  
>     The following values are supported for the 'func' field. They correspond
> diff --git a/hw/tpm/trace-events b/hw/tpm/trace-events
> index 25bee0cecf..920d32ad55 100644
> --- a/hw/tpm/trace-events
> +++ b/hw/tpm/trace-events
> @@ -51,3 +51,6 @@ tpm_tis_mmio_write_init_abort(void) "Initiating abort"
>  tpm_tis_mmio_write_lowering_irq(void) "Lowering IRQ"
>  tpm_tis_mmio_write_data2send(uint32_t value, unsigned size) "Data to send to TPM: 0x%08x (size=%d)"
>  tpm_tis_pre_save(uint8_t locty, uint32_t rw_offset) "locty: %d, rw_offset = %u"
> +
> +# hw/tpm/tpm_ppi.c
> +tpm_ppi_memset(uint8_t *ptr, size_t size) "memset: %p %zu"
> 

I'd split this patch in 2: Add ACPI, Add tpm_ppi_reset.

