Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:27:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4F57858079D
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 02:47:18 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 02:47:18 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AwGUBbhWBeYL83kZmqocsFskulZrV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSDuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZlMJwgqJYrhyvqRNwzIzbb52aOvRjZqPQf9EUSGVcUstfSyBOHJi8?=
 =?us-ascii?q?YpATD+cCJ+tUs5XxqlUMoBa4GAKiBPnvyjhNhnLux6M60+UhEQXH3Aw4B9IBrm?=
 =?us-ascii?q?zbotLvO6cOUeC1zbfHzSjaY/1Ywzj99ZXHdQo8qvyLRbJwccvRyU0qFwzYlViQ?=
 =?us-ascii?q?s5LqMC6V1usXr2iX9fZvVeWqi2M+rQx6vzahxsApiobTh4IVzEjJ+j9iz4YuP9?=
 =?us-ascii?q?G3VVR0YcK+H5dIrC6aK412Ttk/TG5ypCY10KUKuYSlcygO0pgo2gTQa+CdfIWO?=
 =?us-ascii?q?/xntV/6RLC9miH55e7+znQu+/VWjx+HmSMW53lZHojBYntTOrnwA1B/e5tKZRv?=
 =?us-ascii?q?dg5EutxyqD2x7J5u1ZI004i6zWIIM7zLEqjJocq0HDEzf2mEroiK+WcV0p+uyp?=
 =?us-ascii?q?6+T8frXmvYWQN4ByigHjKKgunda/AesgPggPWWiU5/i82aX98UHlQ7hGlOA6nr?=
 =?us-ascii?q?TavZzAO8gWqK60DxVI3osh8xq/Ci2p0NUcnXkJNlJFfxeHgpDwO17QJfD4EO6z?=
 =?us-ascii?q?jEmynzd12f/GOqTtDY7KLnjelrfuYahy61VbxAo3zNBf5IxbBqsOIfLuQkLxsN?=
 =?us-ascii?q?3YDhkkMw272ernCdN91p8AVmKLGKOWLKTSsVqT6+IpJOmMYoAVuDDgK/Q/4P7u?=
 =?us-ascii?q?l3A5lUcHfaa1xZsXdGy4HvN+LkWdYHrsgckOHX0FvwojV+HqjFyCUThOZ3e9Ra?=
 =?us-ascii?q?485zc7CJ64AofHXIyinLuB3CLoVqBQfX1MX1CQDW/zJcLDX/YXdDnUJMhnnToZ?=
 =?us-ascii?q?E7+7RMgk3BCqsQb8jL1/MuvT/DZfrJ/myZ156vPekUIP8ydpBZGY2mCJU2Ymh2?=
 =?us-ascii?q?4NWno60b5ypQlnx06e3LNkq/pfE9NV+rVOSAhtLoPWzeFxF4XvXBncdMyCUles?=
 =?us-ascii?q?T4aaBmQeQ8g9i/8JbUh4EtOkxkTAxSO6Drs9jbGHBJUotKnb2i61b99wzmuD2K?=
 =?us-ascii?q?Q/gl0ORMxJOmu7wKll+Fv9HYnMxn2ZlqKrbbwR6wvE6GeCwHfLkEhFXI84Bb3F?=
 =?us-ascii?q?XHQaamPMoNj571+ERLirX+d0ejBdwNKPf/MZIubiik9LEa/u?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DiBwAIiRNchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZQKBL4E8gRMTg3yIeIszgWAtiRSQNBIBARgUh0ciOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDi9CAQ4BgWQFAgMYCYJbAQEBAQIBAQIgBAsBEwopAwMBAgYBAQoOC?=
 =?us-ascii?q?gICIgQCAgMBHRMBBQEcBgEMBgIBAQGDHIFpAwgFCAEDAZo4PIsPfDOIBg2BD4E?=
 =?us-ascii?q?NEnmLMxeBf4E4gmuCV4UuglcCiR4kjEWKYi8JjiqDKgYYiW8Qh06JM4YIiXYCB?=
 =?us-ascii?q?AIEBQIFDyGBPIF3MyIbFYMngicXjh5xgQeDNIcrgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DiBwAIiRNchxHrdtBjHAEBAQQBAQcEAQGBZQKBL4E8gRM?=
 =?us-ascii?q?Tg3yIeIszgWAtiRSQNBIBARgUh0ciOBIBAwEBAQEBAQIBEwEBAQoLCQgbDi9CA?=
 =?us-ascii?q?Q4BgWQFAgMYCYJbAQEBAQIBAQIgBAsBEwopAwMBAgYBAQoOCgICIgQCAgMBHRM?=
 =?us-ascii?q?BBQEcBgEMBgIBAQGDHIFpAwgFCAEDAZo4PIsPfDOIBg2BD4ENEnmLMxeBf4E4g?=
 =?us-ascii?q?muCV4UuglcCiR4kjEWKYi8JjiqDKgYYiW8Qh06JM4YIiXYCBAIEBQIFDyGBPIF?=
 =?us-ascii?q?3MyIbFYMngicXjh5xgQeDNIcrgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="142123844"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 02:47:17 -0800
Received: from localhost ([::1]:60863 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXl00-00062x-Ma
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 05:47:16 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36783)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXkza-0005sO-9z
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 05:46:51 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXkzV-0005Z2-0G
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 05:46:49 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:35443)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gXkzU-0005WK-KM
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 05:46:44 -0500
Received: by mail-wm1-f65.google.com with SMTP id c126so5318878wmh.0
	for <qemu-devel@nongnu.org>; Fri, 14 Dec 2018 02:46:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=bwKP1HODnl4W0VKBe2wCpKxx1TUh3KdcXi8yFMwiQsQ=;
	b=QKKLi7jjNzwSlx7USQYoDJX2qaHkvqCZHj5IfBMh7Dcp9FFwt8+G3jxy+sU6ncO21M
	fRq36vrLdyQC9ohWyW9tq5SgU1flyhhTjJFPL8VF/Xv6zCusIdr/r6zLkr4WcXdxHwhe
	3rrVWezOta8zHilkpWqsTFqnk49s3jqxKnZq08S4FnGhlr6ozDNQLYuT/qKx+C3wlYTk
	bV8XmszGcDSOE79nq4aSpHCxKDd5on8TE1JBUs610n6IHy+idtiZ7V6+5GX5m0/3hB2N
	kSGTZDv6xigcbsLxayHFsGgs+SGbaNyWQIcS+YZuir0AxiSg2Eb8oapgUNf5tH3Yf6rf
	KA2Q==
X-Gm-Message-State: AA+aEWb7A+XbIdVjPPo0WauJ80v+1ARgKC/l/gy1iHwD/Swpk/EB06it
	ULgMoktpXYZ9PoWEOLQwRZ8xrpxQFBY=
X-Google-Smtp-Source: AFSGD/Wcg+HVhyik2fqwPq74dGMTOBF6vBqG/jNqohWamuDiITPkrHkvmArxSptkMOyV4aIDhZmHHw==
X-Received: by 2002:a1c:a00f:: with SMTP id j15mr2660013wme.84.1544784403268; 
	Fri, 14 Dec 2018 02:46:43 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172])
	by smtp.gmail.com with ESMTPSA id 133sm3368025wme.9.2018.12.14.02.46.42
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 14 Dec 2018 02:46:42 -0800 (PST)
To: Gerd Hoffmann <kraxel@redhat.com>, qemu-devel@nongnu.org
References: <20181210140808.26794-1-kraxel@redhat.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <7ed7720f-af5a-966a-221a-b9872bbd257c@redhat.com>
Date: Fri, 14 Dec 2018 11:46:41 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181210140808.26794-1-kraxel@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.65
Subject: Re: [Qemu-devel] [PATCH] input: avoid malloc for mouse events
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: felix.yzg@gmail.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/10/18 3:08 PM, Gerd Hoffmann wrote:
> There is no reason to allocate mouse events using malloc, we can
> allcoate them from stack instead, save a few cpu cycles and make the
> code more readable with c99 initializers.

Good idea.

> 
> Suggested-by: FelixYao <felix.yzg@gmail.com>
> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>

Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>

> ---
>  include/ui/input.h |  3 ---
>  ui/input.c         | 68 +++++++++++++++++++++++++-----------------------------
>  2 files changed, 31 insertions(+), 40 deletions(-)
> 
> diff --git a/include/ui/input.h b/include/ui/input.h
> index 34ebc67c5a..8c8ccb999f 100644
> --- a/include/ui/input.h
> +++ b/include/ui/input.h
> @@ -49,7 +49,6 @@ int qemu_input_key_value_to_scancode(const KeyValue *value, bool down,
>                                       int *codes);
>  int qemu_input_linux_to_qcode(unsigned int lnx);
>  
> -InputEvent *qemu_input_event_new_btn(InputButton btn, bool down);
>  void qemu_input_queue_btn(QemuConsole *src, InputButton btn, bool down);
>  void qemu_input_update_buttons(QemuConsole *src, uint32_t *button_map,
>                                 uint32_t button_old, uint32_t button_new);
> @@ -58,8 +57,6 @@ bool qemu_input_is_absolute(void);
>  int qemu_input_scale_axis(int value,
>                            int min_in, int max_in,
>                            int min_out, int max_out);
> -InputEvent *qemu_input_event_new_move(InputEventKind kind,
> -                                      InputAxis axis, int value);
>  void qemu_input_queue_rel(QemuConsole *src, InputAxis axis, int value);
>  void qemu_input_queue_abs(QemuConsole *src, InputAxis axis, int value,
>                            int min_in, int max_in);
> diff --git a/ui/input.c b/ui/input.c
> index 7c9a4109c4..f9d413fef9 100644
> --- a/ui/input.c
> +++ b/ui/input.c
> @@ -458,22 +458,18 @@ void qemu_input_event_send_key_delay(uint32_t delay_ms)
>      }
>  }
>  
> -InputEvent *qemu_input_event_new_btn(InputButton btn, bool down)
> -{
> -    InputEvent *evt = g_new0(InputEvent, 1);
> -    evt->u.btn.data = g_new0(InputBtnEvent, 1);
> -    evt->type = INPUT_EVENT_KIND_BTN;
> -    evt->u.btn.data->button = btn;
> -    evt->u.btn.data->down = down;
> -    return evt;
> -}
> -
>  void qemu_input_queue_btn(QemuConsole *src, InputButton btn, bool down)
>  {
> -    InputEvent *evt;
> -    evt = qemu_input_event_new_btn(btn, down);
> -    qemu_input_event_send(src, evt);
> -    qapi_free_InputEvent(evt);
> +    InputBtnEvent bevt = {
> +        .button = btn,
> +        .down = down,
> +    };
> +    InputEvent evt = {
> +        .type = INPUT_EVENT_KIND_BTN,
> +        .u.btn.data = &bevt,
> +    };
> +
> +    qemu_input_event_send(src, &evt);
>  }
>  
>  void qemu_input_update_buttons(QemuConsole *src, uint32_t *button_map,
> @@ -513,37 +509,35 @@ int qemu_input_scale_axis(int value,
>      return ((int64_t)value - min_in) * range_out / range_in + min_out;
>  }
>  
> -InputEvent *qemu_input_event_new_move(InputEventKind kind,
> -                                      InputAxis axis, int value)
> -{
> -    InputEvent *evt = g_new0(InputEvent, 1);
> -    InputMoveEvent *move = g_new0(InputMoveEvent, 1);
> -
> -    evt->type = kind;
> -    evt->u.rel.data = move; /* evt->u.rel is the same as evt->u.abs */
> -    move->axis = axis;
> -    move->value = value;
> -    return evt;
> -}
> -
>  void qemu_input_queue_rel(QemuConsole *src, InputAxis axis, int value)
>  {
> -    InputEvent *evt;
> -    evt = qemu_input_event_new_move(INPUT_EVENT_KIND_REL, axis, value);
> -    qemu_input_event_send(src, evt);
> -    qapi_free_InputEvent(evt);
> +    InputMoveEvent move = {
> +        .axis = axis,
> +        .value = value,
> +    };
> +    InputEvent evt = {
> +        .type = INPUT_EVENT_KIND_REL,
> +        .u.rel.data = &move,
> +    };
> +
> +    qemu_input_event_send(src, &evt);
>  }
>  
>  void qemu_input_queue_abs(QemuConsole *src, InputAxis axis, int value,
>                            int min_in, int max_in)
>  {
> -    InputEvent *evt;
> -    int scaled = qemu_input_scale_axis(value, min_in, max_in,
> +    InputMoveEvent move = {
> +        .axis = axis,
> +        .value = qemu_input_scale_axis(value, min_in, max_in,
>                                         INPUT_EVENT_ABS_MIN,
> -                                       INPUT_EVENT_ABS_MAX);
> -    evt = qemu_input_event_new_move(INPUT_EVENT_KIND_ABS, axis, scaled);
> -    qemu_input_event_send(src, evt);
> -    qapi_free_InputEvent(evt);
> +                                       INPUT_EVENT_ABS_MAX),
> +    };
> +    InputEvent evt = {
> +        .type = INPUT_EVENT_KIND_ABS,
> +        .u.abs.data = &move,
> +    };
> +
> +    qemu_input_event_send(src, &evt);
>  }
>  
>  void qemu_input_check_mode_change(void)
> 

