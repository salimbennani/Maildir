Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EECE358052C
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 02:13:24 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 02:13:24 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJLqR+BV0MS3lE1JqVn8N6vPzAQ3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSGv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp2y?=
 =?us-ascii?q?b4UPAeQCM+hXoYbyqFkSohWxGAesHOHixD1Hi3Pr06A2z/ouERrd0Qw8HN8Dqm?=
 =?us-ascii?q?jYoMn7OaoQV+2+0anGzS/Eb/NTwTrz8ojIchElofGNRbJwadTexlEoGQzfklWQ?=
 =?us-ascii?q?qY3lMC2I1ugUvWaU9fdgWv+1jGU6rAxxujivxsYoionMm40Y0UrE+jtkz4Y1P9?=
 =?us-ascii?q?K4VFR3bsKjEJtVriyXMZZ9TMA6Q2xwpio21r4LtYSmcCQXy5kr3QDTZvKHfoSS?=
 =?us-ascii?q?/x7uVv6dLDR7iX5/Zr6zmgy+/Va8xuHiTMW4zVRHojRDn9LRrH4CzQbT5dKCSv?=
 =?us-ascii?q?Zl/keuxzKP1wfL5+FAIEA0jrbbK4U7zr4/kJoTrF7PHijsmEX5lKOWd0Mk9fa0?=
 =?us-ascii?q?6+n/fLnqupyRO5Vphg3jMakigNKzDOo4PwQUQmSW+/yw1Lj58k34RLVKgOc2kq?=
 =?us-ascii?q?7csJ3CPMQUuKu5AxJM3ok+9Rm/ESmp0NABkXYcK1JFZRSHgJT3NFHVJ/z4Cfa/?=
 =?us-ascii?q?g1eynztxyPHGI6XsApHMLnjFjbfgcqxx609ayAov099f44hYBa0GIPL2QULxst?=
 =?us-ascii?q?vYDhk2Mwyy3ubrEtJ91pkRWW6XGK+WLLvSsUOU5uIoO+SMYI4VuDXjJPQ/6P/u?=
 =?us-ascii?q?kGQ0mVscfamvwJsWZ2q0HvVgI0WFf3Xshs0NHnsNvgo7H6TXjkafW2tTe2qqRP?=
 =?us-ascii?q?B7oTU6E569S4HEQI+rnfqGxij8G5RXYmVPDBeLCWvpcIOfHO4BbT/XLsJ/nzhX?=
 =?us-ascii?q?aL66VoV00BivsBP9maNqK/eR9iAGuJamztVs+uDIiTk08jp7Cdnb1HuCGHpplG?=
 =?us-ascii?q?EFTCNjwaZkvEZmwU2C26Urv/sNOMZS7LtjVg45ONaIwuZ+AtP/chjMcteAVBCt?=
 =?us-ascii?q?RdDwRXkoQ9cshtMDfUt5M9OliB/FwmytGbBGuaaMAckM8qPY3mDpKvFYwmrG1a?=
 =?us-ascii?q?Q8ynUvX8fOfTm+hq978gT7HYPFk0yF0a2tcPJPj2b26G6fwD/W7wljWwlqXPCA?=
 =?us-ascii?q?BChHaw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAQDbRgpcmBHrdtBiGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBZYExgTyBExODeoh4jREIJZlCEgEBGBSHWiI4EgEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BAQEICwsGGw4vgjYFAgMaAQaCXAECAwECIA8BEwopAwMBAgYBAQoOCgICIgQCA?=
 =?us-ascii?q?gMBMAEFARwGAQwGAgEBAYMcgXUNAQMBmUU8iw2BL4kigQ0SeYsUF4F/gTgMgl+?=
 =?us-ascii?q?IBYJXAoksh1mPXQmRRAYYiWIQh0SJD49kAgQCBAUCBQ8hgTyBdjMiGxWDJxOCP?=
 =?us-ascii?q?Y4McYEHiEiBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAQDbRgpcmBHrdtBiGwEBAQEDAQEBBwMBAQGBZYExgTy?=
 =?us-ascii?q?BExODeoh4jREIJZlCEgEBGBSHWiI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4vg?=
 =?us-ascii?q?jYFAgMaAQaCXAECAwECIA8BEwopAwMBAgYBAQoOCgICIgQCAgMBMAEFARwGAQw?=
 =?us-ascii?q?GAgEBAYMcgXUNAQMBmUU8iw2BL4kigQ0SeYsUF4F/gTgMgl+IBYJXAoksh1mPX?=
 =?us-ascii?q?QmRRAYYiWIQh0SJD49kAgQCBAUCBQ8hgTyBdjMiGxWDJxOCPY4McYEHiEiBdwE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55944026"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 02:13:24 -0800
Received: from localhost ([::1]:45176 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVD8N-0006xc-5Y
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 05:13:23 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52899)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gVD8A-0006vx-V2
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:13:11 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gVD87-0002b7-MD
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:13:10 -0500
Received: from mail-wm1-f51.google.com ([209.85.128.51]:35038)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gVD85-0002E2-Ic
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:13:07 -0500
Received: by mail-wm1-f51.google.com with SMTP id c126so3928688wmh.0
	for <qemu-devel@nongnu.org>; Fri, 07 Dec 2018 02:13:00 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=TBnuPdiv+YYyR2AgFmobVDcK50XB7bfMC4zCWLTzQkc=;
	b=E/auo+sgKJrU/OJM3pzW3J3MhT0TYoDKrEQ7/SpCROgPBHSlmubQD41b6A140H+I6n
	I5tzVHJlG1mWqLRsjRUeoD4NLMFxzxIr2f5jbMvDdQrlxSgZ4isc+HZfGAP6ST5ChPgH
	A9kv+oF/9qaG3G/I2enbb458cZc0Hh/PEOBrREy6yl00IaUYKDmtPcPUqIycf2k4sSB+
	xPuu8a0pIeVZcBNboK/qTP00Igl4Tfnd5FVzuYOyAPx+ULtwxGPdIHm8RpuEUY3jsD3L
	4gwmMYlPcP6WCaiuq5VgJylV0GPz8Nr46jNm0fGO/TvLAeeX2p10PTop1PbfaJXL0mgb
	vvmw==
X-Gm-Message-State: AA+aEWbWRy8URz98GLtHIwmcqA9NVhYbtGlPvscnN4c31KmXdI8jlZdM
	JR5mLC3ntejLO+Yv9U+/OUK/pQ==
X-Google-Smtp-Source: AFSGD/Xr0oYecCzqG7xBzWLi1ztc1fVDn7+f0AzB43ThIimAIjYaJngHholywezD53LP1Rb3m+qddA==
X-Received: by 2002:a1c:5585:: with SMTP id
	j127-v6mr1535828wmb.127.1544177579961; 
	Fri, 07 Dec 2018 02:12:59 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172]) by smtp.gmail.com with ESMTPSA id
	k128sm1416863wmd.37.2018.12.07.02.12.59
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 07 Dec 2018 02:12:59 -0800 (PST)
To: Eric Blake <eblake@redhat.com>, qemu-devel@nongnu.org
References: <20181206151856.77503-1-eblake@redhat.com>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <9022c85e-9bbd-3500-edcd-c4ff014c5604@redhat.com>
Date: Fri, 7 Dec 2018 11:12:58 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181206151856.77503-1-eblake@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.51
Subject: Re: [Qemu-devel] [PATCH] cutils: Assert in-range base for
 string-to-integer conversions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-trivial@nongnu.org, vsementsov@virtuozzo.com, armbru@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/6/18 4:18 PM, Eric Blake wrote:
> POSIX states that the value of endptr is unspecified if strtol()
> fails with EINVAL due to an invalid base argument.  Since none of
> the callers to check_strtox_error() initialized endptr, we could
> end up propagating uninitialized data back to a caller on error.
> However, passing an out-of-range base is already a sign of poor
> programming, so let's just assert that base is in range, at which
> point check_strtox_error() can be tightened to assert that it is
> receiving an initialized ep that points somewhere within the
> caller's original string, regardless of whether strto*() succeeded
> or failed with ERANGE.
> 
> Reported-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
> Signed-off-by: Eric Blake <eblake@redhat.com>
> ---
> 
> Also tested that this does not negatively impact David's pending
> additions of qemu_strtod{,_finite}().  Thus:
> Based-on: <20181121164421.20780-1-david@redhat.com>
> 
>  util/cutils.c | 8 ++++++++
>  1 file changed, 8 insertions(+)
> 
> diff --git a/util/cutils.c b/util/cutils.c
> index 91930d1bbeb..e098debdc0c 100644
> --- a/util/cutils.c
> +++ b/util/cutils.c
> @@ -278,6 +278,7 @@ int qemu_strtosz_metric(const char *nptr, const char **end, uint64_t *result)
>  static int check_strtox_error(const char *nptr, char *ep,
>                                const char **endptr, int libc_errno)
>  {
> +    assert(ep >= nptr);
>      if (endptr) {
>          *endptr = ep;
>      }
> @@ -325,6 +326,7 @@ int qemu_strtoi(const char *nptr, const char **endptr, int base,
>      char *ep;
>      long long lresult;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!nptr) {
>          if (endptr) {
>              *endptr = nptr;
> @@ -377,6 +379,7 @@ int qemu_strtoui(const char *nptr, const char **endptr, int base,
>      char *ep;
>      long long lresult;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!nptr) {
>          if (endptr) {
>              *endptr = nptr;
> @@ -433,6 +436,7 @@ int qemu_strtol(const char *nptr, const char **endptr, int base,
>  {
>      char *ep;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!nptr) {
>          if (endptr) {
>              *endptr = nptr;
> @@ -475,6 +479,7 @@ int qemu_strtoul(const char *nptr, const char **endptr, int base,
>  {
>      char *ep;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!nptr) {
>          if (endptr) {
>              *endptr = nptr;
> @@ -502,6 +507,7 @@ int qemu_strtoi64(const char *nptr, const char **endptr, int base,
>  {
>      char *ep;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!nptr) {
>          if (endptr) {
>              *endptr = nptr;
> @@ -525,6 +531,7 @@ int qemu_strtou64(const char *nptr, const char **endptr, int base,
>  {
>      char *ep;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!nptr) {
>          if (endptr) {
>              *endptr = nptr;
> @@ -657,6 +664,7 @@ int parse_uint(const char *s, unsigned long long *value, char **endptr,
>      char *endp = (char *)s;
>      unsigned long long val = 0;
> 
> +    assert((unsigned) base <= 36 && base != 1);
>      if (!s) {
>          r = -EINVAL;
>          goto out;
> 

Reviewed-by: Philippe Mathieu-Daudé <philmd@redhat.com>

