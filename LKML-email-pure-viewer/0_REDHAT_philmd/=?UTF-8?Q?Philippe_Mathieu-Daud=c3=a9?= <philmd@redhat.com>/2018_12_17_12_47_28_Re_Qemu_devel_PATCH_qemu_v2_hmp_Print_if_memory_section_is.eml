Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:43:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C79855805AD
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 04:48:00 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 04:48:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A+j39oRYWAZIU21XgEMskOSP/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy7bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzJPAo28?=
 =?us-ascii?q?YYUMAeQOM+lXoIvhqFUBsBW+HQuhCuHgxzNViHL6wbM10/86HAHa3wEtBc4CvG?=
 =?us-ascii?q?jaodj3MqoZTOC7zLPPzTXGd/5Ywzf96InMchAgufGMRax/ftLWx0Y1CwPFjlSQ?=
 =?us-ascii?q?ppL4Pz+M2OoCqXWb4Pd6UumyjGMnswFxojmrxscpl4bEnZgVxU7Z+iV52ok1Oc?=
 =?us-ascii?q?e0R1J8Yd6hCZZdsTyROYhuQs46XW1kpCU3xqcbtZKmfyUG0ooryhDfZvCdboSF?=
 =?us-ascii?q?4ArvWeWSLDtimn5pZaiziwiu/US+0OHwS8u53EhMoyFYiNfDrGoN2AbW6sWfSv?=
 =?us-ascii?q?ty4EOh2TGX2gDX6+FEOlw0lbHBJ54uxL4wi4AfsUPZHi/5gEn2jamWeVs4+uWw?=
 =?us-ascii?q?9ejrfrbrqoWBO4NpiQzyKLoil8K/DOgiLwQDXXCX+eGm273i+U35Tq9Kjvozkq?=
 =?us-ascii?q?TBqZDVO8EbprOgDwBIzIkj9QiwDzO/3NsDmnkHMVRFdw6ZgIjyPF3OJPH4DfSh?=
 =?us-ascii?q?jFi2nzZr2ujLPrngApXLM3jCn63tfbd7605A1gUzycpT6I5TCrEEO//zXEjxtN?=
 =?us-ascii?q?rXDh8/Lgy42eHnCM9y1o8GQ2KAHreZML/OsV+P/u8vJ+iMZIwLtzrnJPkl+uXj?=
 =?us-ascii?q?jXs4mV8bYKmo0oEbaHG+HvR6PUqZZWDgjcsGEWcP7UIDSvf3ggiCTSJLfCT1GK?=
 =?us-ascii?q?Y9/S0gToShC4jFW8aqmrPG2S66GphfYCdBEkyNFnHzMJyJXupJZC+ML8syrzof?=
 =?us-ascii?q?SLL0ToYg0Q2p5hb3zqciIufK9yldr5/6ydVu+8XVkhc98yEyCN6ShHqQRWN5lX?=
 =?us-ascii?q?9dWjktwapkqlZ8wFrQ7a8tqvhVBdFCr9BASAszLp7R0fd5CsG6DgvAff+OWlKv?=
 =?us-ascii?q?SM7gGyxnCpooztoTJkpwBdimphbE2SWsHvkSjbPYKoYz9/fk33n1Jt5lxkHj3b?=
 =?us-ascii?q?UhjlQ7B+dGKGEnzvpn9wnXAoLhiUiVl6+2M68b2Xiepy+40WOSsRQAA0ZLWqLf?=
 =?us-ascii?q?UCVaPxOOoA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CQAgAgmhdchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgTkDgSaDfIh4imI1gWAtfJhPEgEBGAMRhECDFSI4EgEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOIwyCNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoOCgICI?=
 =?us-ascii?q?gQCAgMBMAEFARwGAQwGAgEBAYMdAYFzDQEDAZw0PIsQfDOJEYENEnmLMxeBf4E?=
 =?us-ascii?q?RJ4I2NYUtglyCVwKJHoYvkUwJhw2KRwYYiXMRh06JPJABAgQCBAUCBQ8hgTyBd?=
 =?us-ascii?q?zMiGxWDJwmCHhcSgSmMY3GBB4t4gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CQAgAgmhdchxHrdtBkHAEBAQQBAQcEAQGBZYExgTkDgSa?=
 =?us-ascii?q?DfIh4imI1gWAtfJhPEgEBGAMRhECDFSI4EgEDAQEBAQEBAgETAQEBCgsJCBsOI?=
 =?us-ascii?q?wyCNgUCAxoBBoJcAQIDAQIgBAsBEwopAwMBAgYBAQoOCgICIgQCAgMBMAEFARw?=
 =?us-ascii?q?GAQwGAgEBAYMdAYFzDQEDAZw0PIsQfDOJEYENEnmLMxeBf4ERJ4I2NYUtglyCV?=
 =?us-ascii?q?wKJHoYvkUwJhw2KRwYYiXMRh06JPJABAgQCBAUCBQ8hgTyBdzMiGxWDJwmCHhc?=
 =?us-ascii?q?SgSmMY3GBB4t4gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="142413885"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 04:47:59 -0800
Received: from localhost ([::1]:46465 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYsJS-0007Kq-79
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 07:47:58 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44504)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gYsJ7-0007Ki-Or
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 07:47:39 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gYsJ4-0005Qc-Dx
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 07:47:37 -0500
Received: from mail-wr1-f66.google.com ([209.85.221.66]:33561)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gYsJ2-0005Mn-Ay
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 07:47:34 -0500
Received: by mail-wr1-f66.google.com with SMTP id c14so12158625wrr.0
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 04:47:31 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=yCn20+FS7x6ZMVNU9rM9ji0PDZP4JHpP6iJfiCX+Djc=;
	b=JvRXgrCgbyPPWF2/TxnBfjxSFdViTM7B9kxEZtg1hrGJHwBk7bdrP/5Ox97y9Gv5QN
	l9oErBtdiHvT6582LSqe4+Ynf0UKfnsWd1GDAgn1XcTNfmaoRwX/kZtQbBNdNBvgotdK
	U4JkEwDXSIln8QfC3gdlWmJf9z4W2KU36p8YgbzvXOhu73F1VZ4L3AMadnjG6GUJbJTk
	DqP8iuP+mCvyTYLIWAGK/8ZHBMna/9UkjjDiMfBeiIjkxbIC756GSeWU2CC/pJUfZ7su
	a7SP1rxpo3SiJAMxOCDBT/aFt1y3WtiIb3fGAf8ZUPn4JMPFu0YCBSCfPJa3kiAznVmW
	3Sag==
X-Gm-Message-State: AA+aEWZLsMVz9YNjhQy7C+rGHunQfWxdjzVO4JORDe3848W2LLfKbUvF
	T9EPYDkMjpm5WMmv2P20fmr6QQ==
X-Google-Smtp-Source: AFSGD/WGGfiNgBBVIEbkonjOqKhD04RgsjtZArhT+f1wRbqMksRcVytjM8hmOids8KZAZCNQlTgCxg==
X-Received: by 2002:adf:fbc8:: with SMTP id d8mr10301734wrs.318.1545050850416; 
	Mon, 17 Dec 2018 04:47:30 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172]) by smtp.gmail.com with ESMTPSA id
	o81sm17020517wmd.10.2018.12.17.04.47.29
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 17 Dec 2018 04:47:29 -0800 (PST)
To: Alexey Kardashevskiy <aik@ozlabs.ru>, qemu-devel@nongnu.org
References: <20181214025849.84274-1-aik@ozlabs.ru>
	<8727c6e5-006c-20e5-cb6b-be525154e184@redhat.com>
	<bda42f7c-9068-3c4d-d839-7f6c52561cc9@ozlabs.ru>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <69a29694-b777-721a-eafd-4ff38c457f6d@redhat.com>
Date: Mon, 17 Dec 2018 13:47:28 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <bda42f7c-9068-3c4d-d839-7f6c52561cc9@ozlabs.ru>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.221.66
Subject: Re: [Qemu-devel] [PATCH qemu v2] hmp: Print if memory section is
 registered with an accelerator
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>,
	Daniel Henrique Barboza <danielhb413@gmail.com>,
	"Dr . David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/17/18 2:27 AM, Alexey Kardashevskiy wrote:
> On 14/12/2018 22:07, Philippe Mathieu-DaudÃ© wrote:
>> Hi Alexey,
>>
>> On 12/14/18 3:58 AM, Alexey Kardashevskiy wrote:
>>> This adds an accelerator name to the "into mtree -f" to tell the user if
>>> a particular memory section is registered with the accelerator;
>>> the primary user for this is KVM and such information is useful
>>> for debugging purposes.
>>>
>>> This adds a has_memory() callback to the accelerator class allowing any
>>> accelerator to have a label in that memory tree dump.
>>>
>>> Since memory sections are passed to memory listeners and get registered
>>> in accelerators (rather than memory regions), this only prints new labels
>>> for flatviews attached to the system address space.
>>>
>>> An example:
>>>  Root memory region: system
>>>   0000000000000000-0000002fffffffff (prio 0, ram): /objects/mem0 kvm
>>>   0000003000000000-0000005fffffffff (prio 0, ram): /objects/mem1 kvm
>>>   0000200000000020-000020000000003f (prio 1, i/o): virtio-pci
>>>   0000200080000000-000020008000003f (prio 0, i/o): capabilities
>>>
>>> Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
>>> ---
>>>
>>> This supercedes "[PATCH qemu] hmp: Print if memory section is registered in KVM"
>>>
>>> ---
>>> Changes:
>>> v2:
>>> * added an accelerator callback instead of hardcoding it to kvm only
>>> ---
>>>  include/sysemu/accel.h |  2 ++
>>>  accel/kvm/kvm-all.c    | 10 ++++++++++
>>>  memory.c               | 22 ++++++++++++++++++++++
>>>  3 files changed, 34 insertions(+)
>>>
>>> diff --git a/include/sysemu/accel.h b/include/sysemu/accel.h
>>> index 637358f..30b456d 100644
>>> --- a/include/sysemu/accel.h
>>> +++ b/include/sysemu/accel.h
>>> @@ -25,6 +25,7 @@
>>>  
>>>  #include "qom/object.h"
>>>  #include "hw/qdev-properties.h"
>>> +#include "exec/hwaddr.h"
>>>  
>>>  typedef struct AccelState {
>>>      /*< private >*/
>>> @@ -41,6 +42,7 @@ typedef struct AccelClass {
>>>      int (*available)(void);
>>>      int (*init_machine)(MachineState *ms);
>>>      void (*setup_post)(MachineState *ms, AccelState *accel);
>>> +    bool (*has_memory)(MachineState *ms, hwaddr start_addr, hwaddr size);
>>>      bool *allowed;
>>>      /*
>>>       * Array of global properties that would be applied when specific
>>> diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
>>> index 4880a05..634f386 100644
>>> --- a/accel/kvm/kvm-all.c
>>> +++ b/accel/kvm/kvm-all.c
>>> @@ -2589,11 +2589,21 @@ int kvm_get_one_reg(CPUState *cs, uint64_t id, void *target)
>>>      return r;
>>>  }
>>>  
>>> +static bool kvm_accel_has_memory(MachineState *ms, hwaddr start_addr,
>>> +                                 hwaddr size)
>>> +{
>>> +    KVMState *kvm = KVM_STATE(ms->accelerator);
>>> +    KVMMemoryListener *kml = &kvm->memory_listener;
>>> +
>>> +    return NULL != kvm_lookup_matching_slot(kml, start_addr, size);
>>> +}
>>> +
>>>  static void kvm_accel_class_init(ObjectClass *oc, void *data)
>>>  {
>>>      AccelClass *ac = ACCEL_CLASS(oc);
>>>      ac->name = "KVM";
>>>      ac->init_machine = kvm_init;
>>> +    ac->has_memory = kvm_accel_has_memory;
>>>      ac->allowed = &kvm_allowed;
>>>  }
>>>  
>>> diff --git a/memory.c b/memory.c
>>> index d14c6de..61e758a 100644
>>> --- a/memory.c
>>> +++ b/memory.c
>>> @@ -29,7 +29,9 @@
>>>  #include "exec/ram_addr.h"
>>>  #include "sysemu/kvm.h"
>>>  #include "sysemu/sysemu.h"
>>> +#include "sysemu/accel.h"
>>>  #include "hw/qdev-properties.h"
>>> +#include "hw/boards.h"
>>>  #include "migration/vmstate.h"
>>>  
>>>  //#define DEBUG_UNASSIGNED
>>> @@ -2924,6 +2926,8 @@ struct FlatViewInfo {
>>>      int counter;
>>>      bool dispatch_tree;
>>>      bool owner;
>>> +    AccelClass *ac;
>>> +    const char *ac_name;
>>>  };
>>>  
>>>  static void mtree_print_flatview(gpointer key, gpointer value,
>>> @@ -2939,6 +2943,7 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>>>      int n = view->nr;
>>>      int i;
>>>      AddressSpace *as;
>>> +    bool system_as = false;
>>>  
>>>      p(f, "FlatView #%d\n", fvi->counter);
>>>      ++fvi->counter;
>>> @@ -2950,6 +2955,9 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>>>              p(f, ", alias %s", memory_region_name(as->root->alias));
>>>          }
>>>          p(f, "\n");
>>> +        if (as == &address_space_memory) {
>>> +            system_as = true;
>>> +        }
>>>      }
>>>  
>>>      p(f, " Root memory region: %s\n",
>>> @@ -2985,6 +2993,13 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>>>          if (fvi->owner) {
>>>              mtree_print_mr_owner(p, f, mr);
>>>          }
>>> +
>>> +        if (system_as && fvi->ac &&
>>> +            fvi->ac->has_memory(current_machine,
>>> +                                int128_get64(range->addr.start),
>>> +                                MR_SIZE(range->addr.size) + 1)) {
>>> +            p(f, " %s", fvi->ac_name);
>>
>> Why not simply display fvi->ac->name?
>> You could avoid to add the ac_name field.
> 
> 
> Well, I thought I better print whatever the user passed via the command
> line (which is current_machine->accel and equals to "kvm" in my case)
> rather than robotic, dry and excessive "kvm-accel".

I have no hit for 'kvm-accel':

$ git grep kvm-accel
$

Names looks human friendly:

$ git grep 'ac->name ='
accel/kvm/kvm-all.c:2595:    ac->name = "KVM";
accel/tcg/tcg-all.c:74:    ac->name = "tcg";
hw/xen/xen-common.c:184:    ac->name = "Xen";
target/i386/hax-all.c:1088:    ac->name = "HAX";
target/i386/hvf/hvf.c:959:    ac->name = "HVF";
target/i386/whpx-all.c:1477:    ac->name = "WHPX";
qtest.c:755:    ac->name = "QTest";

>>
>>> +        }
>>>          p(f, "\n");
>>>          range++;
>>>      }
>>> @@ -3028,6 +3043,13 @@ void mtree_info(fprintf_function mon_printf, void *f, bool flatview,
>>>          };
>>>          GArray *fv_address_spaces;
>>>          GHashTable *views = g_hash_table_new(g_direct_hash, g_direct_equal);
>>> +        AccelClass *ac = ACCEL_GET_CLASS(current_machine->accelerator);
>>> +
>>> +        if (ac->has_memory) {
>>> +            fvi.ac = ac;
>>> +            fvi.ac_name = current_machine->accel ? current_machine->accel :
>>> +                object_class_get_name(OBJECT_CLASS(ac));
>>> +        }
>>>  
>>>          /* Gather all FVs in one table */
>>>          QTAILQ_FOREACH(as, &address_spaces, address_spaces_link) {
>>>

