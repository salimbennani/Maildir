Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:27:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 365CE5803DC
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 03:07:40 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 03:07:39 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A59XKDxCIhv/wdUPHo3JkUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37psSwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95PWSxPAo2y?=
 =?us-ascii?q?bIUBAOQOMulas4bzqEYArQO8CAeuC+7j1zFFimPo0q0hyOkhDQPL0RY8E94Svn?=
 =?us-ascii?q?nZrtP4P7oSX+Cvy6nIyC3OYelW2Tf87IjIcwghoemSUr1odsTe01UvFwPEjlqO?=
 =?us-ascii?q?tIzpJj2b2f4Qs2eG9e1rSOWii3YnqwFwpjivw9ojh5LTho0L11/E9T92wJovKd?=
 =?us-ascii?q?KkT057ZMepHZ1NvC+ZL4t7Wt0uT31rtSog17EKpJ22cDIUxJkpxxPTceGLfoqQ?=
 =?us-ascii?q?7h/gV+udOyl0iG9/dL6hmxq+71KsxvD+W8Wq1ltBszBLncPWtn8X0hze8siHRe?=
 =?us-ascii?q?V5/kemwTuP0wHT6vpYIUAvj6bbJJghwqMqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jkb7n8u5OQKox5hhvgPqkgmsGzG/k0PwoWU2ie4+u81bnj/UPjQLVNi/07ir?=
 =?us-ascii?q?DZv47fJcQGv6K2HhFa0pg95Ba7Fjupy9MYnWQBLF1ZZh2HlI/lO1XPIPD7E/iz?=
 =?us-ascii?q?mVutkCpzyvDCP73hBIjNL3fZnLfge7Z991BTyA4pwd9D4JJUD6oMIPT0Wk/3u9?=
 =?us-ascii?q?zYCAI5Pxazw+b9B9VxzpkeVn6XAq+FLKPStkeF5uYuI+mPeoAZojn8K+U+6v7q?=
 =?us-ascii?q?jH85n0IdfKaz0ZsWbnC4AuppI0GDbXXwhdcBFDRCgwwlUea/iEGeSSUBIDG2Xr?=
 =?us-ascii?q?kg/Xc9D4SpC5qFQZqix7mI3SO+F5sRYXhaC1eKCjDxeoCZHvsBdi+WcfJniSEO?=
 =?us-ascii?q?AL2oSos90kO3uQrnjrZqMOfQvzcVrI/uz8Rd4erVmhcvsztuAJOGzmuPQmpoy3?=
 =?us-ascii?q?4OXCI8x6tloEZwmWuEhIF8juxVBJRw7ulFWxw6OIDHzO1rQ4T7WwHpecWNQVy9?=
 =?us-ascii?q?BM+7V3V5V9803poCblhwH/2kiRbM2TfsBKUaxJKRA5lhyqLd23npP8tK7n/a1K?=
 =?us-ascii?q?gskhwKS9ZDtCXynq5+8w3fL5TEn0WQi+ChcqFKj32Fz3uK0Wfb5BIQawV3S6iQ?=
 =?us-ascii?q?GClHPkY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CCBAANjhNchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgTkDgSaDfIh4ing1gWAtfJhMEgEBGAMRhECDByI4EgEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOIwyCNgUCAxoBBoJcAQIDAQIgBB8KKQMDAQIGAQEKDgoCAiIEA?=
 =?us-ascii?q?gIDATABBQEcBgEMBgIBAQGDHAGBcw0BAwGaKDyLD3wziSKBDRJ5izMXgX+BESe?=
 =?us-ascii?q?CNjWFLYJYglcCiR6GLkeRBQmHDYpHBhiJbxCHTokzj34CBAIEBQIFDyGBPIF3M?=
 =?us-ascii?q?yIbFYMnCYIeFxKBKYxjcYEHil+BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CCBAANjhNchxHrdtBjHAEBAQQBAQcEAQGBZYExgTkDgSa?=
 =?us-ascii?q?DfIh4ing1gWAtfJhMEgEBGAMRhECDByI4EgEDAQEBAQEBAgETAQEBCgsJCBsOI?=
 =?us-ascii?q?wyCNgUCAxoBBoJcAQIDAQIgBB8KKQMDAQIGAQEKDgoCAiIEAgIDATABBQEcBgE?=
 =?us-ascii?q?MBgIBAQGDHAGBcw0BAwGaKDyLD3wziSKBDRJ5izMXgX+BESeCNjWFLYJYglcCi?=
 =?us-ascii?q?R6GLkeRBQmHDYpHBhiJbxCHTokzj34CBAIEBQIFDyGBPIF3MyIbFYMnCYIeFxK?=
 =?us-ascii?q?BKYxjcYEHil+BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="56349004"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 03:07:39 -0800
Received: from localhost ([::1]:60953 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXlJi-0000pN-A1
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 06:07:38 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43622)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXlJQ-0000nd-NE
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 06:07:21 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <philmd@redhat.com>) id 1gXlJM-0003RY-IZ
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 06:07:20 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:53437)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <philmd@redhat.com>) id 1gXlJM-0003QR-AT
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 06:07:16 -0500
Received: by mail-wm1-f67.google.com with SMTP id y1so5256587wmi.3
	for <qemu-devel@nongnu.org>; Fri, 14 Dec 2018 03:07:16 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:message-id
	:date:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=190nlW6xp2lkzMAh6qPcBChCTh6XkA1VFt88toCPORI=;
	b=J922NCMxQGzPb//oeXV3EKo6bj/AdHaEiT+wIKMSgMlWLX8Mbp2NudnH1A4FDeByMA
	tmX6fTZRJzOSmaGCDwREDv2oaPlbH+b4nk5WShPCapm9HLOdTclHaOQxYKtsgP4ejUx+
	vf+4l4lmEaJCfz3FhWH7bGaDHtfDvKcEjL+rahKtvNSvY9eO4w+8phpdaMcu8aO2ZzNH
	VD03d408v4mXqxuea3v7ixlAQ6ZToV6XSFNMBbxph4tm1llxXJjarQfAhSp3o4f0zWiw
	YREOm1r17u+wWelRwtQM7DLGp7yPQ5EfiRfhaMmBJjdXDLA7brd53LEd6DfgDKWuiJqz
	BX3g==
X-Gm-Message-State: AA+aEWbGv8jkbfCDUZHKgh/4g2XBhV3YraF04b9ZI6P26zMpZbO4QbVd
	KocDCMwGxmjffSAVTURVyyWrIw==
X-Google-Smtp-Source: AFSGD/Vdrsz8Yi3CXBiGKNqBXY740xNnRa+hHh84EuNsAJyQm9AnCmis6ZSEZSMTfl94hN/T3FwNDA==
X-Received: by 2002:a1c:e242:: with SMTP id z63mr2776639wmg.2.1544785635228;
	Fri, 14 Dec 2018 03:07:15 -0800 (PST)
Received: from [192.168.1.34] (172.red-88-21-202.staticip.rima-tde.net.
	[88.21.202.172]) by smtp.gmail.com with ESMTPSA id
	q185sm5839492wmg.14.2018.12.14.03.07.14
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 14 Dec 2018 03:07:14 -0800 (PST)
To: Alexey Kardashevskiy <aik@ozlabs.ru>, qemu-devel@nongnu.org
References: <20181214025849.84274-1-aik@ozlabs.ru>
From: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Openpgp: id=89C1E78F601EE86C867495CBA2A3FD6EDEADC0DE;
	url=http://pgp.mit.edu/pks/lookup?op=get&search=0xA2A3FD6EDEADC0DE
Message-ID: <8727c6e5-006c-20e5-cb6b-be525154e184@redhat.com>
Date: Fri, 14 Dec 2018 12:07:13 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181214025849.84274-1-aik@ozlabs.ru>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.67
Subject: Re: [Qemu-devel] [PATCH qemu v2] hmp: Print if memory section is
 registered with an accelerator
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>,
	Daniel Henrique Barboza <danielhb413@gmail.com>,
	"Dr . David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi Alexey,

On 12/14/18 3:58 AM, Alexey Kardashevskiy wrote:
> This adds an accelerator name to the "into mtree -f" to tell the user if
> a particular memory section is registered with the accelerator;
> the primary user for this is KVM and such information is useful
> for debugging purposes.
> 
> This adds a has_memory() callback to the accelerator class allowing any
> accelerator to have a label in that memory tree dump.
> 
> Since memory sections are passed to memory listeners and get registered
> in accelerators (rather than memory regions), this only prints new labels
> for flatviews attached to the system address space.
> 
> An example:
>  Root memory region: system
>   0000000000000000-0000002fffffffff (prio 0, ram): /objects/mem0 kvm
>   0000003000000000-0000005fffffffff (prio 0, ram): /objects/mem1 kvm
>   0000200000000020-000020000000003f (prio 1, i/o): virtio-pci
>   0000200080000000-000020008000003f (prio 0, i/o): capabilities
> 
> Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
> ---
> 
> This supercedes "[PATCH qemu] hmp: Print if memory section is registered in KVM"
> 
> ---
> Changes:
> v2:
> * added an accelerator callback instead of hardcoding it to kvm only
> ---
>  include/sysemu/accel.h |  2 ++
>  accel/kvm/kvm-all.c    | 10 ++++++++++
>  memory.c               | 22 ++++++++++++++++++++++
>  3 files changed, 34 insertions(+)
> 
> diff --git a/include/sysemu/accel.h b/include/sysemu/accel.h
> index 637358f..30b456d 100644
> --- a/include/sysemu/accel.h
> +++ b/include/sysemu/accel.h
> @@ -25,6 +25,7 @@
>  
>  #include "qom/object.h"
>  #include "hw/qdev-properties.h"
> +#include "exec/hwaddr.h"
>  
>  typedef struct AccelState {
>      /*< private >*/
> @@ -41,6 +42,7 @@ typedef struct AccelClass {
>      int (*available)(void);
>      int (*init_machine)(MachineState *ms);
>      void (*setup_post)(MachineState *ms, AccelState *accel);
> +    bool (*has_memory)(MachineState *ms, hwaddr start_addr, hwaddr size);
>      bool *allowed;
>      /*
>       * Array of global properties that would be applied when specific
> diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
> index 4880a05..634f386 100644
> --- a/accel/kvm/kvm-all.c
> +++ b/accel/kvm/kvm-all.c
> @@ -2589,11 +2589,21 @@ int kvm_get_one_reg(CPUState *cs, uint64_t id, void *target)
>      return r;
>  }
>  
> +static bool kvm_accel_has_memory(MachineState *ms, hwaddr start_addr,
> +                                 hwaddr size)
> +{
> +    KVMState *kvm = KVM_STATE(ms->accelerator);
> +    KVMMemoryListener *kml = &kvm->memory_listener;
> +
> +    return NULL != kvm_lookup_matching_slot(kml, start_addr, size);
> +}
> +
>  static void kvm_accel_class_init(ObjectClass *oc, void *data)
>  {
>      AccelClass *ac = ACCEL_CLASS(oc);
>      ac->name = "KVM";
>      ac->init_machine = kvm_init;
> +    ac->has_memory = kvm_accel_has_memory;
>      ac->allowed = &kvm_allowed;
>  }
>  
> diff --git a/memory.c b/memory.c
> index d14c6de..61e758a 100644
> --- a/memory.c
> +++ b/memory.c
> @@ -29,7 +29,9 @@
>  #include "exec/ram_addr.h"
>  #include "sysemu/kvm.h"
>  #include "sysemu/sysemu.h"
> +#include "sysemu/accel.h"
>  #include "hw/qdev-properties.h"
> +#include "hw/boards.h"
>  #include "migration/vmstate.h"
>  
>  //#define DEBUG_UNASSIGNED
> @@ -2924,6 +2926,8 @@ struct FlatViewInfo {
>      int counter;
>      bool dispatch_tree;
>      bool owner;
> +    AccelClass *ac;
> +    const char *ac_name;
>  };
>  
>  static void mtree_print_flatview(gpointer key, gpointer value,
> @@ -2939,6 +2943,7 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>      int n = view->nr;
>      int i;
>      AddressSpace *as;
> +    bool system_as = false;
>  
>      p(f, "FlatView #%d\n", fvi->counter);
>      ++fvi->counter;
> @@ -2950,6 +2955,9 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>              p(f, ", alias %s", memory_region_name(as->root->alias));
>          }
>          p(f, "\n");
> +        if (as == &address_space_memory) {
> +            system_as = true;
> +        }
>      }
>  
>      p(f, " Root memory region: %s\n",
> @@ -2985,6 +2993,13 @@ static void mtree_print_flatview(gpointer key, gpointer value,
>          if (fvi->owner) {
>              mtree_print_mr_owner(p, f, mr);
>          }
> +
> +        if (system_as && fvi->ac &&
> +            fvi->ac->has_memory(current_machine,
> +                                int128_get64(range->addr.start),
> +                                MR_SIZE(range->addr.size) + 1)) {
> +            p(f, " %s", fvi->ac_name);

Why not simply display fvi->ac->name?
You could avoid to add the ac_name field.

> +        }
>          p(f, "\n");
>          range++;
>      }
> @@ -3028,6 +3043,13 @@ void mtree_info(fprintf_function mon_printf, void *f, bool flatview,
>          };
>          GArray *fv_address_spaces;
>          GHashTable *views = g_hash_table_new(g_direct_hash, g_direct_equal);
> +        AccelClass *ac = ACCEL_GET_CLASS(current_machine->accelerator);
> +
> +        if (ac->has_memory) {
> +            fvi.ac = ac;
> +            fvi.ac_name = current_machine->accel ? current_machine->accel :
> +                object_class_get_name(OBJECT_CLASS(ac));
> +        }
>  
>          /* Gather all FVs in one table */
>          QTAILQ_FOREACH(as, &address_spaces, address_spaces_link) {
> 

