Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:41:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1937758079D;
	Thu, 13 Dec 2018 12:06:36 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 12:06:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfjRQax9ki72Wvv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?2+4VIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJKjA3/mLQhMN/g6xbuwqhqh5kzoLIY4yYLuZyc7nBcd8GQ2dKQ8ZfVzZGAoO5?=
 =?us-ascii?q?d4YPFOoBPftCoIn9vFYOrgWxBROqBOzxzj9EnHj23bc10+knDArI3xQgEsoQvH?=
 =?us-ascii?q?jIqNj5LroeXO6rwKXS0DnObO9a1S385YXKahwtv/6BUah0fMbLyEQiGBnJgkuf?=
 =?us-ascii?q?pID4OT6ey/4DvHKB7+V6UOKik24npB91ojio3soslIbJiZwPylze9iV23pw1Jd?=
 =?us-ascii?q?umR05/e9KkF4FQty6CO4t3RMMtXX1otT4kxrEavZO3ZjUGxZo5yxLFdvCKcJSE?=
 =?us-ascii?q?7gjiWeuTOTt4gWhqeLO7hxa860igzej8W9Gw0FZLqCpFj9bNumkO1xPN8MiHTO?=
 =?us-ascii?q?Vy/kO41TaI2QHT7P9LIVovmKrFJJ4u3KQwmoAQsUvdBC/2nlv5jKuMekUj4Oio?=
 =?us-ascii?q?5PzrYq/6qZ+EK490lgb+P7wqmsy+AuQ3LBICXmeG+emn0L3j/Ev5QKhFj/Esk6?=
 =?us-ascii?q?nZtozaKtofpqKjHwBV1YMj4Q6lDzi6yNQYgWUHLFVddRKHlYfpOk3OL+r/Dful?=
 =?us-ascii?q?g1SsjS1kx/bJPrD6BpXNL37DkKrufLpn6k5czhYzws5b555OFr4BJ/fzUFfrtN?=
 =?us-ascii?q?PEFh85LxC0w+H/BdV/0YMRR3iDAqyeMKPUt1+I4fkiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9Bv5mOVmWYWLwgtcdFmcHphAxTPfqiF2FUj5ffWyyUL?=
 =?us-ascii?q?g+5jwgDIKmDIHDRp2igbCb3Se7GIFWaX5CClyWDXjocICEUe8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8izx6ushX2y75mLuXO/C0Yuonu1Nx05+3ViBEz+iZ4D8Wb02GRUW50mn?=
 =?us-ascii?q?kESCMx3KB6uUZ90EuM0bBkg/xEEtxe/+5GXR0kNZHC1eB6C8r9WgTaftiXTlaq?=
 =?us-ascii?q?RdGmATI0TtI12NIOZ0d9G9O/jhHMxSaqArkVl6CVC5ww6K7Tw3/xJ8NlwXbcyK?=
 =?us-ascii?q?Yhl0UmQtdINWC+m6Fw7RbTCJDTn0WZjamqc78c0zDL9GqYyWqOvUdYUBN/UKnf?=
 =?us-ascii?q?XHAfYFfWosr95k/YU7CuDrEnOBNbycGeMqtKdsHpjVJeSff/OdTeZmWxm3uwBR?=
 =?us-ascii?q?eI3L+McJDme2IH3CXZCUgElQ8T8G2CNQg/ACehvm3fACZvFVLpf0Pj7+1+pGmn?=
 =?us-ascii?q?QU8zygGAd1dh2Kat+h4JmfycTOse0agAuCg/pDR7Ala808jNBNqdugVuZqNcYd?=
 =?us-ascii?q?A64FdZzm/Zsw19Ppq9L6FtnFIecgJ3v1/w2BVzEIlPjc8qrHYyxgpoNa2YyE9B?=
 =?us-ascii?q?dy+f3Z3oOrzXN3P+8wy1Z6/X2lHRytCW+qgU5fQ8qlXjuhypF0U4/3Vm1dlVz2?=
 =?us-ascii?q?WT5pHQAAUOVpLxV1499wJmqLHCfik9+4TU2GV2Mam1rjDNwcgpC/Yiyhq6eddQ?=
 =?us-ascii?q?LrmEFA7rH8IGHceuLPEllEazbhIDOuBf76o0P8Kgd/ub16+nJudgnDS6jWtZ5I?=
 =?us-ascii?q?BxyF6D9y15SuTQxZYK3+mY3hebVzf7lFqgssH3lZpEZD0IBWq/1C7kCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmSmiwD?=
 =?us-ascii?q?xukDEpra2f0DbVw+v4dxoHOW9LRG98glfqOoW0i9EaXE61bwkmjhel5ED6x7RF?=
 =?us-ascii?q?q6R7NWXcXUBIfy3uJWF4TqSwrqaCY9JI6J4wsSRYSuO8bUqYSr78pRsXyCfjH2?=
 =?us-ascii?q?pYxDAmeDCmoJT5nxpmiG2DKHZ/tmbWecZ1xR3H/tzTWeZR3iYaRCl/kTTXBUKz?=
 =?us-ascii?q?P9iz8dWUipfMqOa+V226W51XcCnry56AtSSh6W1rBx2/g+68mtn9HQcm1i/70s?=
 =?us-ascii?q?FgVT/Uoxbkfonry6O6PPpifklpB1/z8dB2G49gnYsrmJEfx2IaiY6L8nodnmf+?=
 =?us-ascii?q?KtFb2aP4bHoQSj8H2d/V4A752EJ9KnKF3Z72VnKYwsF5fdm1fnsW2j4h78BNEK?=
 =?us-ascii?q?qU8LtEnS5vrlu5tw3RZ+V9niwGyfsv83Mah+AJuAwwziSSGLwSHE9YPTDymBSM?=
 =?us-ascii?q?9dyxsKJXZGO3e7iqyEV+hcyhDK2FogxEQ3n2YJAiHStt7sllNFLMzWb+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM2dt87i8?=
 =?us-ascii?q?AhFGLT35fd8T9ivujaZDncaWwoavEY96GjgQWJvoTPSoEC8dtPj9NgaOFiE8pW?=
 =?us-ascii?q?mfGbbFAQCf70JmpWrVE5+3L3GXOGUZzdJ6SRidI0xfnRkUXCggkZ4/DAyq38vh?=
 =?us-ascii?q?cEF25j0K4l74qx1Myv9nNhXlU2ffohuoZSkwSJSFMBVW6QRC7V/PMcOC9uJzAz?=
 =?us-ascii?q?1Y/pq5oQyNNGObZgdIDWIIWkCeBFDjJL6u5dbe/OiCG+q+NODDYbGPqexYSveJ?=
 =?us-ascii?q?yoij0opg/zaQKMqPOmNuAOE82kpGRXp5AdjWmy0TSywLkCLAd9SUpAqn9S1tsM?=
 =?us-ascii?q?++8O7nWAbu5YaUD7tSMNNv+w25gKuZNu6Qgjp5Jihc1p8W2XDIz70f1kYIiy5y?=
 =?us-ascii?q?bzmtDagAtSnVQaLMm69XCgQXZD9pOMRU76IzwA9NNNXfitP00L54k/E0B01EVV?=
 =?us-ascii?q?znhsGme8gKL3uhO1PAAUaBLK6GKiHTw8HrfaO8TqVdjeVOuB22vDabEknjMSyC?=
 =?us-ascii?q?ljnpTR+vN+5MgTqfPBxfvoG9bxlsBXLiTNLgdh20Ltt3gScqzr0zg3OZfVIbZC?=
 =?us-ascii?q?N8bkpNhr6d9yVVhrN4AWMFpmZqKfmsnyef8vXCLZAXob1nD2A8kuNc73MS0bZZ?=
 =?us-ascii?q?7ChYAvdynW+attNyrku0uuiJxCBuXBdHpnBMno3P9Ul8OazD6rFBX3je9R4A5G?=
 =?us-ascii?q?nWDA4F45NvA9jx4fgIl/DAkavyLHFJ9NeQtcEGCMz8Is2LPWRnKR6tUDDdEAsE?=
 =?us-ascii?q?CzSsKG3FjmRZkfeb7HrTqYI17tDlnpYDUKQdTlslG/ceIkBkGtUYJ9FwRDxg2b?=
 =?us-ascii?q?KSis8F4TyyrRDDbMFbuJndUbSVG/qrYC6Yi6VZIQMJx7zQIoEaN4m90EtnLhFi?=
 =?us-ascii?q?loPMCUvWXPhXryFhZxNyq0JItDByVG803U/+Qhmg7H8aCbi/mRtywgt5b/8k7y?=
 =?us-ascii?q?zE7FAwKV7H4iA3lQ15gdj5jCqBWCT8IKe5QcddDC+w/1A8NJy9Qw9yNyWggUEi?=
 =?us-ascii?q?PzDBAblXy/N/eGFDkgLQuZJTX/VbSOkMbBYOyPS/a/w23FFYrSu7g0lK+a+NBZ?=
 =?us-ascii?q?BrjgI2bZ+EtX9M2wt/KtUyIOiYLalRy3BUh6STrmqm0f03zAYCJkELtmSId2pA?=
 =?us-ascii?q?vUwPPbohDzG15eEq4guH33NAeGEIVvZsq+Br5Gs6Ie2Lyy+m2LlGbgi0L+G3Iq?=
 =?us-ascii?q?edtnLFnMjOQ192315M30BD8LVt0YEgbk+dTWgrzb2MB1IXM8febwBfaoxZ832X?=
 =?us-ascii?q?NSqPtOzlyIh0JJm0UOvvSLygrqER11mkAQ8pN4cB9MIMGt+ryk6Lfo/cMLcZxE?=
 =?us-ascii?q?B1t0zQL1KfAaERdQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACPuxJch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAhUSjBVfizOCIWiWWIFzFBgDEAGHRSI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiKCbAIvAQ0BATcBBQkCHzEDWxIFgxwBggAFp2iCH4J2A?=
 =?us-ascii?q?QEFgQAEAYUCgSQIh32Be4EogRwXgX+BEYJdB4FvAQmJEZBHkEoJhk1AikELGJF?=
 =?us-ascii?q?JAYkukBuBRoIOfYMvCYISGId0dYE9g0tXIDKBBAEBATuMBwEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAACPuxJch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAhUSjBVfizOCIWiWWIFzFBgDEAGHRSI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiKCbAIvAQ0BATcBBQkCHzEDWxIFgxwBggAFp2iCH4J2AQEFgQAEAYUCgSQ?=
 =?us-ascii?q?Ih32Be4EogRwXgX+BEYJdB4FvAQmJEZBHkEoJhk1AikELGJFJAYkukBuBRoIOf?=
 =?us-ascii?q?YMvCYISGId0dYE9g0tXIDKBBAEBATuMBwEB?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="142041383"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 12:06:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729045AbeLMUAQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 15:00:16 -0500
Received: from mail.kernel.org ([198.145.29.99]:43602 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727713AbeLMUAQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 15:00:16 -0500
Received: from localhost.localdomain (c-24-9-64-241.hsd1.co.comcast.net [24.9.64.241])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2E88120811;
        Thu, 13 Dec 2018 20:00:13 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544731214;
        bh=L2B6NsvYG8sR66Scc6ehr8zjSFOj3gfamMjeWNmBDp4=;
        h=From:To:Cc:Subject:Date:From;
        b=Bug4bD42Be22Jea46Qiuc1hLDCqZ4r6vmzPgHbNKhw2885lW48DcafmeDgDioC6xl
         6gIUcyT9psBX4VgXdpdAX5LPzLQ6KHqRoDZNKd/ea8xisQKWepKS///nJEHp0T20IP
         BeNHjF3bcwzFbO0qXag+qQpZ2otse/5Mhw9jqakc=
From: shuah@kernel.org
To: shuah@kernel.org, tglx@linutronix.de, mingo@redhat.com,
        peterz@infradead.org, dvhart@infradead.org, bamv2005@gmail.com,
        brgl@bgdev.pl, fathi.boudra@linaro.org, anders.roxell@linaro.org,
        daniel.diaz@linaro.org, pintu.ping@gmail.com, pbonzini@redhat.com,
        drjones@redhat.com, hofsass@google.com, peterx@redhat.com,
        peng.hao2@zte.com.cn, wei@redhat.com, davem@davemloft.net,
        dcaratti@redhat.com, akpm@linux-foundation.org, mhocko@suse.com,
        khalid.aziz@oracle.com, mpe@ellerman.id.au,
        aneesh.kumar@linux.vnet.ibm.com, dima@arista.com
Cc: linux-kselftest@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-gpio@vger.kernel.org, stable@vger.kernel.org
Subject: [PATCH] selftests: Fix test errors related to lib.mk khdr target
Date: Thu, 13 Dec 2018 13:00:11 -0700
Message-Id: <20181213200011.10779-1-shuah@kernel.org>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Shuah Khan <shuah@kernel.org>

Commit b2d35fa5fc80 ("selftests: add headers_install to lib.mk") added
khdr target to run headers_install target from the main Makefile. The
logic uses KSFT_KHDR_INSTALL and top_srcdir as controls to initialize
variables and include files to run headers_install from the top level
Makefile. There are a few problems with this logic.

1. Exposes top_srcdir to all tests
2. Common logic impacts all tests
3. Uses KSFT_KHDR_INSTALL, top_srcdir, and khdr in an adhoc way. Tests
   add "khdr" dependency in their Makefiles to TEST_PROGS_EXTENDED in
   some cases, and STATIC_LIBS in other cases. This makes this framework
   confusing to use.

The common logic that runs for all tests even when KSFT_KHDR_INSTALL
isn't defined by the test. top_srcdir is initialized to a default value
when test doesn't initialize it. It works for all tests without a sub-dir
structure and tests with sub-dir structure fail to build.

e.g: make -C sparc64/drivers/ or make -C drivers/dma-buf

../../lib.mk:20: ../../../../scripts/subarch.include: No such file or directory
make: *** No rule to make target '../../../../scripts/subarch.include'.  Stop.

There is no reason to require all tests to define top_srcdir and there is
no need to require tests to add khdr dependency using adhoc changes to
TEST_* and other variables.

Fix it with a consistent use of KSFT_KHDR_INSTALL and top_srcdir from tests
that have the dependency on headers_install.

Change common logic to include khdr target define and "all" target with
dependency on khdr when KSFT_KHDR_INSTALL is defined.

Only tests that have dependency on headers_install have to define just
the KSFT_KHDR_INSTALL, and top_srcdir variables and there is no need to
specify khdr dependency in the test Makefiles.

Fixes: b2d35fa5fc80 ("selftests: add headers_install to lib.mk")
Cc: stable@vger.kernel.org
Signed-off-by: Shuah Khan <shuah@kernel.org>

---
 tools/testing/selftests/android/Makefile                 | 2 +-
 tools/testing/selftests/futex/functional/Makefile        | 1 +
 tools/testing/selftests/gpio/Makefile                    | 6 +++---
 tools/testing/selftests/kvm/Makefile                     | 2 +-
 tools/testing/selftests/lib.mk                           | 8 ++++----
 tools/testing/selftests/networking/timestamping/Makefile | 1 +
 tools/testing/selftests/tc-testing/bpf/Makefile          | 1 +
 tools/testing/selftests/vm/Makefile                      | 1 +
 8 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/tools/testing/selftests/android/Makefile b/tools/testing/selftests/android/Makefile
index d9a725478375..72c25a3cb658 100644
--- a/tools/testing/selftests/android/Makefile
+++ b/tools/testing/selftests/android/Makefile
@@ -6,7 +6,7 @@ TEST_PROGS := run.sh
 
 include ../lib.mk
 
-all: khdr
+all:
 	@for DIR in $(SUBDIRS); do		\
 		BUILD_TARGET=$(OUTPUT)/$$DIR;	\
 		mkdir $$BUILD_TARGET  -p;	\
diff --git a/tools/testing/selftests/futex/functional/Makefile b/tools/testing/selftests/futex/functional/Makefile
index ad1eeb14fda7..30996306cabc 100644
--- a/tools/testing/selftests/futex/functional/Makefile
+++ b/tools/testing/selftests/futex/functional/Makefile
@@ -19,6 +19,7 @@ TEST_GEN_FILES := \
 TEST_PROGS := run.sh
 
 top_srcdir = ../../../../..
+KSFT_KHDR_INSTALL := 1
 include ../../lib.mk
 
 $(TEST_GEN_FILES): $(HEADERS)
diff --git a/tools/testing/selftests/gpio/Makefile b/tools/testing/selftests/gpio/Makefile
index 46648427d537..07f572a1bd3f 100644
--- a/tools/testing/selftests/gpio/Makefile
+++ b/tools/testing/selftests/gpio/Makefile
@@ -10,8 +10,6 @@ TEST_PROGS_EXTENDED := gpio-mockup-chardev
 GPIODIR := $(realpath ../../../gpio)
 GPIOOBJ := gpio-utils.o
 
-include ../lib.mk
-
 all: $(TEST_PROGS_EXTENDED)
 
 override define CLEAN
@@ -19,7 +17,9 @@ override define CLEAN
 	$(MAKE) -C $(GPIODIR) OUTPUT=$(GPIODIR)/ clean
 endef
 
-$(TEST_PROGS_EXTENDED):| khdr
+KSFT_KHDR_INSTALL := 1
+include ../lib.mk
+
 $(TEST_PROGS_EXTENDED): $(GPIODIR)/$(GPIOOBJ)
 
 $(GPIODIR)/$(GPIOOBJ):
diff --git a/tools/testing/selftests/kvm/Makefile b/tools/testing/selftests/kvm/Makefile
index 01a219229238..52bfe5e76907 100644
--- a/tools/testing/selftests/kvm/Makefile
+++ b/tools/testing/selftests/kvm/Makefile
@@ -1,6 +1,7 @@
 all:
 
 top_srcdir = ../../../..
+KSFT_KHDR_INSTALL := 1
 UNAME_M := $(shell uname -m)
 
 LIBKVM = lib/assert.c lib/elf.c lib/io.c lib/kvm_util.c lib/ucall.c lib/sparsebit.c
@@ -44,7 +45,6 @@ $(OUTPUT)/libkvm.a: $(LIBKVM_OBJ)
 
 all: $(STATIC_LIBS)
 $(TEST_GEN_PROGS): $(STATIC_LIBS)
-$(STATIC_LIBS):| khdr
 
 cscope: include_paths = $(LINUX_TOOL_INCLUDE) $(LINUX_HDR_PATH) include lib ..
 cscope:
diff --git a/tools/testing/selftests/lib.mk b/tools/testing/selftests/lib.mk
index 0a8e75886224..8b0f16409ed7 100644
--- a/tools/testing/selftests/lib.mk
+++ b/tools/testing/selftests/lib.mk
@@ -16,18 +16,18 @@ TEST_GEN_PROGS := $(patsubst %,$(OUTPUT)/%,$(TEST_GEN_PROGS))
 TEST_GEN_PROGS_EXTENDED := $(patsubst %,$(OUTPUT)/%,$(TEST_GEN_PROGS_EXTENDED))
 TEST_GEN_FILES := $(patsubst %,$(OUTPUT)/%,$(TEST_GEN_FILES))
 
+ifdef KSFT_KHDR_INSTALL
 top_srcdir ?= ../../../..
 include $(top_srcdir)/scripts/subarch.include
 ARCH		?= $(SUBARCH)
 
-all: $(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED) $(TEST_GEN_FILES)
-
 .PHONY: khdr
 khdr:
 	make ARCH=$(ARCH) -C $(top_srcdir) headers_install
 
-ifdef KSFT_KHDR_INSTALL
-$(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED) $(TEST_GEN_FILES):| khdr
+all: khdr $(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED) $(TEST_GEN_FILES)
+else
+all: $(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED) $(TEST_GEN_FILES)
 endif
 
 .ONESHELL:
diff --git a/tools/testing/selftests/networking/timestamping/Makefile b/tools/testing/selftests/networking/timestamping/Makefile
index 14cfcf006936..c46c0eefab9e 100644
--- a/tools/testing/selftests/networking/timestamping/Makefile
+++ b/tools/testing/selftests/networking/timestamping/Makefile
@@ -6,6 +6,7 @@ TEST_PROGS := hwtstamp_config rxtimestamp timestamping txtimestamp
 all: $(TEST_PROGS)
 
 top_srcdir = ../../../../..
+KSFT_KHDR_INSTALL := 1
 include ../../lib.mk
 
 clean:
diff --git a/tools/testing/selftests/tc-testing/bpf/Makefile b/tools/testing/selftests/tc-testing/bpf/Makefile
index dc92eb271d9a..be5a5e542804 100644
--- a/tools/testing/selftests/tc-testing/bpf/Makefile
+++ b/tools/testing/selftests/tc-testing/bpf/Makefile
@@ -4,6 +4,7 @@ APIDIR := ../../../../include/uapi
 TEST_GEN_FILES = action.o
 
 top_srcdir = ../../../../..
+KSFT_KHDR_INSTALL := 1
 include ../../lib.mk
 
 CLANG ?= clang
diff --git a/tools/testing/selftests/vm/Makefile b/tools/testing/selftests/vm/Makefile
index 6e67e726e5a5..e13eb6cc8901 100644
--- a/tools/testing/selftests/vm/Makefile
+++ b/tools/testing/selftests/vm/Makefile
@@ -25,6 +25,7 @@ TEST_GEN_FILES += virtual_address_range
 
 TEST_PROGS := run_vmtests
 
+KSFT_KHDR_INSTALL := 1
 include ../lib.mk
 
 $(OUTPUT)/userfaultfd: LDLIBS += -lpthread
-- 
2.17.1

