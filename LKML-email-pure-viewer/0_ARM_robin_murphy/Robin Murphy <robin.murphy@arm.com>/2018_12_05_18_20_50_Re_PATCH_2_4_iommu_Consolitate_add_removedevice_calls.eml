Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:57:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6337E580375;
	Wed,  5 Dec 2018 10:20:58 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 10:20:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Av+3d8B3QqKNWr+T8smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSIvXxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJcUMhPWSxPAoCy?=
 =?us-ascii?q?YYUBAOUOP+lXs4bzp0AWrRa8HgSsGOHixyVUinPq06A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZosnyNKgJUOC1yrTDwzLeb/NMwTf96IjJeQ0mrPGWWrJ/asvRyU81GwPAk1WQ?=
 =?us-ascii?q?s5TlPzOV1+kWqWeb9e9gWfizhG4grgF8uz6izdovhInRno8Z1EzI+CFjzIooK9?=
 =?us-ascii?q?C0VlR3bcOnHZdMrS2XNol7Tts8T211uis20KAKtJGncCQQ1Zgr2wPTZ+aFfoSU?=
 =?us-ascii?q?5B/oSfyfLi1ihH1/fbKynxay/lakyu37TsS0zllKoTRfktXWtXACyQbT6s6ZRf?=
 =?us-ascii?q?t55Euh3iyP1w/L5uFFJ0A7i7bbJoY/zrIskpcfq1nPEyHolEnskaObdVko9vKp?=
 =?us-ascii?q?5unlernmo4WTN45wigHwKKQuncm/DPw8MggPWWib5Ou92KTg/ULnWrVKiOM5kq?=
 =?us-ascii?q?3AvJDdK8UboLC2AxVO34Y95BawES2m3M4bnXYZNlJFfgyIj4zzN1HJOvD4Au+z?=
 =?us-ascii?q?g06wnzdz2/DGIrrhD43JLnjCk7fuY6xx6kFByAcoydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B93JsEWW2TGq+ZLL/SsViQ6+IvOeaMZZMVtyz6K/Q/5/7u?=
 =?us-ascii?q?kGU2mVkSfaSy2ZsXaXa4HulpIkmDYHrshMsBHnkOvgYkUOPqj1iCWyZJZ3muR6?=
 =?us-ascii?q?I8+i07CIW+AIfBQYCinqaN3CS8Hp1QYGBGDUuBEXPpd4WCRvcNZzieIs5nkjwY?=
 =?us-ascii?q?S7ehT5Ut2g2ptA//07BnNPbb+jUEtZL/09h4//fclQoy9TxzDMSRyXuNQHt2nm?=
 =?us-ascii?q?4TQz823aZ/oVFyy1uZ0Kh4heBYGsJX5/9TTgg6MpvcxfRgC9/uQgLBYsuJSFG+?=
 =?us-ascii?q?T9WlGz4xSMg9w9sPY0lnHdWigQvO3y6rA78TiryKC4Y48qPa33jtOcl9z2zK27?=
 =?us-ascii?q?Umj1kjWsFPL3GphrZj9wjPAI7Ei1iWmLy0dasCxiLN9H2MzWyVvE5GVg58VqHF?=
 =?us-ascii?q?XXMaZkvSttn54kLCT7mzCbUoKAdByMiCKrdUZd3tl1lJWPDjONHGaWKrh2iwHQ?=
 =?us-ascii?q?qIxq+LbIfyZmoSxjvdB1YenwAT53mGMxM+CTmno2/FCDxuFFTvY17j8OVkqXO7?=
 =?us-ascii?q?SFM0wB+Ob0F7y7W1/RsVj+SGS/wPxrIEpDshqzJsEVah3tLWDt2ApxZhfKRce9?=
 =?us-ascii?q?89/E1L1WXDtwx5P5ygKa9ii0UacwR2uUPuyhp2Bp9BkcgssHMl0g5yJbiE31NG?=
 =?us-ascii?q?cjOSxYrwNaHPKmnu4BCvbLbb1Uva0NmI9aYA9vQ5p0/4swG0C0Ut6XNn09pS03?=
 =?us-ascii?q?uC/ZjKCAsSUZTsUkc47RR6prfaYjUj6IPQz3FjLa60sjra0dIzGOQl0gqgf8tY?=
 =?us-ascii?q?MK6cFA7yDtcWCNS0JO0rm1imdBQEPO9J+a4wPsOmceaG2aGxMOZhmjKmkXpI4I?=
 =?us-ascii?q?Rn3k2Q8Cp8T/bC34wZzPGAwguHSzD8gU+7ssD2hY9LfysSEXe4yST+Ao5eeLdy?=
 =?us-ascii?q?fYcSBWiyOcK3wshxiID3W35f8l6uHFcG2M6veRqPYF3xxwxQ1UILoXO5nSu01S?=
 =?us-ascii?q?B7kzYsrqCHxizB3/zidAYbOm5MXGRjjVbsLZK0jtwAR0iocg4pmQCh5Ub7wahb?=
 =?us-ascii?q?uat+I3PSQUdOYyj5MWViXrGsubqFZs5F8IkovjlPUOSgfVCaTabwoxkA3CP5HG?=
 =?us-ascii?q?texzc7eyuxuprjnBx6i2OdLHBto3rfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6YtCq0/2pqDQe9n/CynN3qCgw60S7919?=
 =?us-ascii?q?l3WiTEthf8Yo/316ukNeJrZFVnBFj568BiAIFxjpMwhI0M2XgdnpiV/mAIkWbp?=
 =?us-ascii?q?PdVbxKLxdnwNRTEQzt7R4Qjl3lBjL32Ty4L4UHWd3tVuZ92gbmwK3SI96thACL?=
 =?us-ascii?q?2I47xcgSt1vl24oBrUYfh8nTcS0+Ei6XAEjOESpAoi0D+dDasMEklCMizhjBCI?=
 =?us-ascii?q?79G4rKVKa2eja7mw1Exind+/CLGOuB1TWHH8ep06By9/8t1/ME7Q0H308ozkZN?=
 =?us-ascii?q?7QbdcJuhyViRjAifVVKIkqlvoLnidnPWP9vXs4y+80lxBu3Je6vJSZJGVp5q62?=
 =?us-ascii?q?HhlYNjjtbcMJ5j7tlbpentqR3423BZpuADILXJ/1Tf6yFDISqO/qNwKPED06t3?=
 =?us-ascii?q?eaFqDTHQ6Z6Ed6sX3PF4qnOG2QJHkc1d9iXgWSJFRDgAAIWzU3hpw5GRqvxMP/?=
 =?us-ascii?q?a0d1/CwR6kT7qhtRyeJoKh//XX3EpAqzbjc0SZ6fLAdZ7w1Y5kfVN9Ce4fx3Hy?=
 =?us-ascii?q?1C4pKhqwmNIHSBZwtUFWEJRlCEB1f7M7iu4tnA7vGYBvekIPvIe7mOsuteV/GH?=
 =?us-ascii?q?xZ+01otm/jCMNtiAP3V4Dv073FZDUm59G8jDhzoPTCkXnTrXb8GHvBe85jF3rs?=
 =?us-ascii?q?en/fTrRg3v5IiPC7hTMdl1+BC2m6CDN+GOiyZjNDZYzYgBxXvJyLgZwV4ThDti?=
 =?us-ascii?q?dzirEbQcqyHNSLjclbNQDx4ecylzLtdH77og3glRPs7Wksn61qNjgf4vFVhEVU?=
 =?us-ascii?q?btmsWoZcERJ2G9NVXHBFuENbicJD3Lxd33br24SbFKkOpUsBiwsy6BE0D/JjSD?=
 =?us-ascii?q?iyXpVxe3POFQjSGbOQZSt52nfhlxCWjsUtTmZwa/MN92iz023LI1imnLNW4aLT?=
 =?us-ascii?q?hzbUdNoqeM4iNfh/V1A3ZB4WZ9LemYhyaZ6PHVK5YMvvttByR0luRa72w7yrtV?=
 =?us-ascii?q?9i5EQvN1lTDWrt5vpVGmj+aOxiBmUBpItjZEmoaLsV9+NqXe85kTEUrDqTAK4H?=
 =?us-ascii?q?+fQy4NqtdoDpW7uadKzfCfnrPvJSwE9Mjbq49UBs/RLd+vNHs6LQGvHD/SERtA?=
 =?us-ascii?q?Qzm2M23Wm01alreV7HLGgII9r83Wn5APTPd+SUYtFuJSXl5iFt0EZpJqRCskgJ?=
 =?us-ascii?q?aSlstO7n27+kqCDP5Gt4zKA6rBSc7kLyyU2PwdP0MF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AVAACNFghch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2sng3mUJ4FgCCUUlziBcywTAYdTIjUIDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkvgjYkAYJhAQEBAQMBAiAEEUEGCQEBCg4HAwICJgICA1QGAQwGAgEBA?=
 =?us-ascii?q?YMcggIEAaYbfDOFQIRqgQuLE4FXP4E4DIJfiAWCVwKJM4ZIhW6KbQcCgiAEjxg?=
 =?us-ascii?q?eiXCHPyyIXZE8AYILMxojgzyCJxeOHT8BATGBBQEBilwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AVAACNFghch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBg2s?=
 =?us-ascii?q?ng3mUJ4FgCCUUlziBcywTAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkA?=
 =?us-ascii?q?YJhAQEBAQMBAiAEEUEGCQEBCg4HAwICJgICA1QGAQwGAgEBAYMcggIEAaYbfDO?=
 =?us-ascii?q?FQIRqgQuLE4FXP4E4DIJfiAWCVwKJM4ZIhW6KbQcCgiAEjxgeiXCHPyyIXZE8A?=
 =?us-ascii?q?YILMxojgzyCJxeOHT8BATGBBQEBilwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="43706624"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 10:20:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728476AbeLESUy (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 13:20:54 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:32782 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727402AbeLESUx (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 13:20:53 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 44BD280D;
        Wed,  5 Dec 2018 10:20:53 -0800 (PST)
Received: from [10.1.196.75] (e110467-lin.cambridge.arm.com [10.1.196.75])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 4DC983F575;
        Wed,  5 Dec 2018 10:20:52 -0800 (PST)
Subject: Re: [PATCH 2/4] iommu: Consolitate ->add/remove_device() calls
To: Joerg Roedel <joro@8bytes.org>, iommu@lists.linux-foundation.org
Cc: linux-acpi@vger.kernel.org, linux-kernel@vger.kernel.org,
        Joerg Roedel <jroedel@suse.de>
References: <20181205143646.4876-1-joro@8bytes.org>
 <20181205143646.4876-3-joro@8bytes.org>
From: Robin Murphy <robin.murphy@arm.com>
Message-ID: <3ca13757-edf8-95cb-6316-73d202f97dbf@arm.com>
Date: Wed, 5 Dec 2018 18:20:50 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181205143646.4876-3-joro@8bytes.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 05/12/2018 14:36, Joerg Roedel wrote:
> From: Joerg Roedel <jroedel@suse.de>
> 
> Put them into separate functions and call those where the
> plain ops have been called before.
> 
> Signed-off-by: Joerg Roedel <jroedel@suse.de>
> ---
>   drivers/iommu/iommu.c | 54 ++++++++++++++++++++++---------------------
>   include/linux/iommu.h |  3 +++
>   2 files changed, 31 insertions(+), 26 deletions(-)
> 
> diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c
> index edbdf5d6962c..ad4dc51eb69c 100644
> --- a/drivers/iommu/iommu.c
> +++ b/drivers/iommu/iommu.c
> @@ -110,6 +110,26 @@ void iommu_device_unregister(struct iommu_device *iommu)
>   	spin_unlock(&iommu_device_lock);
>   }
>   
> +int iommu_probe_device(struct device *dev)
> +{
> +	const struct iommu_ops *ops = dev->bus->iommu_ops;
> +
> +	if (!ops->add_device)
> +		return 0;

Is there any good reason to let .add_device/.remove_device be optional 
still? Everyone's implemented them for a while now, and on a practical 
level I don't really see how else we could expect devices to be taken in 
and out of their appropriate groups correctly.

Robin.

> +
> +	WARN_ON(dev->iommu_group);
> +
> +	return ops->add_device(dev);
> +}
> +
> +void  iommu_release_device(struct device *dev)
> +{
> +	const struct iommu_ops *ops = dev->bus->iommu_ops;
> +
> +	if (ops->remove_device && dev->iommu_group)
> +		ops->remove_device(dev);
> +}
> +
>   static struct iommu_domain *__iommu_domain_alloc(struct bus_type *bus,
>   						 unsigned type);
>   static int __iommu_attach_device(struct iommu_domain *domain,
> @@ -1117,16 +1137,7 @@ struct iommu_domain *iommu_group_default_domain(struct iommu_group *group)
>   
>   static int add_iommu_group(struct device *dev, void *data)
>   {
> -	struct iommu_callback_data *cb = data;
> -	const struct iommu_ops *ops = cb->ops;
> -	int ret;
> -
> -	if (!ops->add_device)
> -		return 0;
> -
> -	WARN_ON(dev->iommu_group);
> -
> -	ret = ops->add_device(dev);
> +	int ret = iommu_probe_device(dev);
>   
>   	/*
>   	 * We ignore -ENODEV errors for now, as they just mean that the
> @@ -1141,11 +1152,7 @@ static int add_iommu_group(struct device *dev, void *data)
>   
>   static int remove_iommu_group(struct device *dev, void *data)
>   {
> -	struct iommu_callback_data *cb = data;
> -	const struct iommu_ops *ops = cb->ops;
> -
> -	if (ops->remove_device && dev->iommu_group)
> -		ops->remove_device(dev);
> +	iommu_release_device(dev);
>   
>   	return 0;
>   }
> @@ -1153,27 +1160,22 @@ static int remove_iommu_group(struct device *dev, void *data)
>   static int iommu_bus_notifier(struct notifier_block *nb,
>   			      unsigned long action, void *data)
>   {
> +	unsigned long group_action = 0;
>   	struct device *dev = data;
> -	const struct iommu_ops *ops = dev->bus->iommu_ops;
>   	struct iommu_group *group;
> -	unsigned long group_action = 0;
>   
>   	/*
>   	 * ADD/DEL call into iommu driver ops if provided, which may
>   	 * result in ADD/DEL notifiers to group->notifier
>   	 */
>   	if (action == BUS_NOTIFY_ADD_DEVICE) {
> -		if (ops->add_device) {
> -			int ret;
> +		int ret;
>   
> -			ret = ops->add_device(dev);
> -			return (ret) ? NOTIFY_DONE : NOTIFY_OK;
> -		}
> +		ret = iommu_probe_device(dev);
> +		return (ret) ? NOTIFY_DONE : NOTIFY_OK;
>   	} else if (action == BUS_NOTIFY_REMOVED_DEVICE) {
> -		if (ops->remove_device && dev->iommu_group) {
> -			ops->remove_device(dev);
> -			return 0;
> -		}
> +		iommu_release_device(dev);
> +		return NOTIFY_OK;
>   	}
>   
>   	/*
> diff --git a/include/linux/iommu.h b/include/linux/iommu.h
> index a1d28f42cb77..2357841845bb 100644
> --- a/include/linux/iommu.h
> +++ b/include/linux/iommu.h
> @@ -398,6 +398,9 @@ void iommu_fwspec_free(struct device *dev);
>   int iommu_fwspec_add_ids(struct device *dev, u32 *ids, int num_ids);
>   const struct iommu_ops *iommu_ops_from_fwnode(struct fwnode_handle *fwnode);
>   
> +int iommu_probe_device(struct device *dev);
> +void  iommu_release_device(struct device *dev);
> +
>   #else /* CONFIG_IOMMU_API */
>   
>   struct iommu_ops {};
> 
