Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:37:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7E291580460;
	Fri, 23 Nov 2018 13:53:44 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 23 Nov 2018 13:53:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZNPeZhGTdzu3n99DkL2jlZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osS/bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7Ses8US2pfU8pITiBMH5mz?=
 =?us-ascii?q?YJYTAuUcO+ZWs5Xyp0UTohegGAKgAOPixiJNinLwwKY00fkuERve0QIgAdwArX?=
 =?us-ascii?q?raotbyOqgdTe+7w7LIzS3BYv5NxTfw65LFfgw7rP2QX799d9fax0k1FwPCi1Wd?=
 =?us-ascii?q?sY7rMC2R1usTtWiQ8u9uVeWui24ktQ56vz+ixscyhYnNmI0VzErI9SZ+wIY0Jt?=
 =?us-ascii?q?23VlV2bsKjEJtUsyGVLZB5QsQ4Q25yoio11roGuZuicSUM1Z8pyRnfa/mdfIiJ?=
 =?us-ascii?q?5BLuTOiRIS1mi317Zb2wmQ2y8Uu8yu37Tsm4ylFKrjBKktXUqn8N0BjT6sydRf?=
 =?us-ascii?q?Rm+UehwyyA2xrP5eFDJEA5k7fQJZ05wrMoiJYfrUDOEjXrlEj4kqOabFgo9+u0?=
 =?us-ascii?q?5+j9Y7jrpIeQOoB1hw3kLKgjlMyyDf4mPgQQXWWX4/qw2KPh8ED/Xb5ElOc5kr?=
 =?us-ascii?q?PDv5DfPckbprC2AwtS0os79Ra/ACmp0M4CkXkEMl1FYhSHgJbtO13UJ/D4F/i/?=
 =?us-ascii?q?j0ytkDdt2f/GIqXsDovRInXHirvtYLhw51BGxAYuzt1T+4hYB7ADLf7rX0/+rt?=
 =?us-ascii?q?3YDhs3MwyuxObnDc1w1ocfWWKJH6+YP7resVyW6eI1JemDeosVtC/6K/kr4f7h?=
 =?us-ascii?q?k2U5lEQDfammw5QXcmq0Hvd4LEWDZ3rjnNMBHX0NvgokQ+zmkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIanDYfAWI+hmrOA3DqgE51SZ2BGDE2MEHjye4WFXfcMdDydIst7njMY?=
 =?us-ascii?q?UrihTpcr1Quyuw/i17pnMu3U9zUYtZ351dh1+/fclRYo+Tx0EsSSyWeNT25vk2?=
 =?us-ascii?q?MMRj822r1/oENnxleC16h4n+JXFdhJ6/xVVQc6MIbWz/ZmBNDqRgLBYtCJRU6k?=
 =?us-ascii?q?QtWhHz49VNExw9gIY0Z7HNWvlRTD3yusA78ImL2HHp008qTA33fvI8Zx0WrJ1K?=
 =?us-ascii?q?4kj1M+WMtAKXWmhrJj9wjUH4PGiV6Zl6atdaQfxiLN7n2MzWiVsUFcUQ5wV7jF?=
 =?us-ascii?q?XH8FakvXq9T5+l3NT7u0Bbs7NQtBzNaIKrFWZd3xkVVGWPDjNczdY22rnWe8Hx?=
 =?us-ascii?q?KIxrKWY4rsdGUQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e65wQaheKCRP8J3rILoiEhqy5qE1a72N7WD9mApw9lfKhHZd?=
 =?us-ascii?q?M94VFH1X/WtgBnP5ygKbxiiUAacwhto0zu0BB3AJ1akcc2tHMq0BZyKaWA3Vxc?=
 =?us-ascii?q?bTyYw47/NqfXKmbo+hCvcLDZ2lfF3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzEh54PV0H1sNrW0sj/C2t4zGOsp0BGgf81b?=
 =?us-ascii?q?MKOFEg/yHNYXB8yvKOwshlioYQgIPOFU9K4oIcymc+GK17KsPOZlhDiml3hI4J?=
 =?us-ascii?q?hh0kKQ8CpxUvTH35IbzPCXwASGVy3wg0y8ss/qg49EYzISHm2hySX/AI5RZ6ty?=
 =?us-ascii?q?fZsECGu0Is23wMl+iIDpW3JC6FGjAFYG0tezeRWOd1z9wRFQ1UMPrH2nhCu01S?=
 =?us-ascii?q?B7nysor6qfxiPOxevieQEDOm5KQmlikFjtLZK1j9AcQEincQwpmAG56kb9wqhR?=
 =?us-ascii?q?vL5/IHXLQUdUYyj2KHlvUrGxtrWeecFP8o4nsSJNXOS6f1+aUL/9rwIG3Cz5G2?=
 =?us-ascii?q?tR2S40dyutupX/hBF6jGOdLHBurHvWY81wxBHf5MDCSv5VxDYJWC54iTzPDFim?=
 =?us-ascii?q?I9ap5cmUl4vEsu2mV2OhV4dfcCnxwYObqSu743ZnARm+n/C1h93mHhI20S7919?=
 =?us-ascii?q?l2SyrIqAzwbZXs16S/KehnZFVnBEfg68pmHYFziokwi4sK2XgZhZWV+mALkXzp?=
 =?us-ascii?q?PtVY2qL+bXwNSiANw9PO5Ajl2UtjLm+Gxo7jV3WdxNdhaMe+Ym8Mxi096MVKAr?=
 =?us-ascii?q?+O7LNYhSt1vka4rQXJbPl9hDgdzuEi6Hwbg+EPowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6Hi9/9MR/PEjM0H3u8I7kft?=
 =?us-ascii?q?bQYMkXth2VlRfAkudUJIgwlvoMmSpoJ2b9sWc5xO48iBxkxYu6s5SfK2Vx4KK5?=
 =?us-ascii?q?BQZVNjj0Z8MQ4D7hl6hfkdiN34CzAJphAC4EU4XyTfKnCz8SsfXnNwCTEDwzsH?=
 =?us-ascii?q?ubGLzfHROB50ditX7AD5erN3SPLnkD0dpiXAWdJFBYgA0MQDU6mZs5GhqrxcP7?=
 =?us-ascii?q?dkd5+ysR5kX5qhZXzuJoNh//UnrQpQuyazc0ToSfIwRS7g1Y+0jVNsme5PppHy?=
 =?us-ascii?q?5E5p2hsBCNKmuDagtTF24JXUiEB035Mrmq+NnN6OyYBuu4L/vTbrSCs+1eV/GU?=
 =?us-ascii?q?xZ2x1otq5SqDNsKKPnN6Ff00xlJDXWxlG8TegzgPSTYYlyfTYM6Avhu85jd7rs?=
 =?us-ascii?q?Oi8PToRQLv45GAC6BJPNVr+hC2h7qDNuGKiCZ4LzZYyo0DxXvSxLcD214Sjjlk?=
 =?us-ascii?q?dyOxHrQYqS7NUKXQl7dXDh4cdiNzLdZI4Lg63gVXIs7bjdX11rFjg/4xCldFU0?=
 =?us-ascii?q?Hhm86zacwLJWG9KE3IBEKROLuaIj3Lxtn9YbmgRr1IkOVUqxqwtC6bE0D9PzSD?=
 =?us-ascii?q?lDrpVxG1PeFPliGbOxNet5+nchZwEmjuV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuW9fTYJY0MsfR1AiV4jeZa4HUhxrtR?=
 =?us-ascii?q?7SFEQuF1mSTIot5vpVGmjveAyj59XBVSrTZLgZqBvV9+NqXB6plARXHE8QoR7W?=
 =?us-ascii?q?WRDhQGvcdqBsfztKBQ1NfPkrn+KDND89LS4MsdCNLYKMOBMHo9LxXpHCTYAxcC?=
 =?us-ascii?q?TT6uLWvfnVBSkOmO9n2JqZg3spjtl4AISr9eVVw1EOsVC0VlHNMYJpd3USgpkb?=
 =?us-ascii?q?qajM4O+Hq/owPdRMRcvpDbSP2SBe/jJyqejblBNFM0xubUJJoSOsXS2lZma1Qy?=
 =?us-ascii?q?yI3LAU7RUNxlpixncx9yoUgbo1ZkSWhm+0/hZwXlw3gSFvP8yh47jgZ4J+cq9T?=
 =?us-ascii?q?Thy1wwIl7DriwqmQ86ntCz0mPZSyL4MKrlBdIeMCHzrUVkd8+qTg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAABgdvhbh0O0hNFZCh4BBgcGgVEJC?=
 =?us-ascii?q?wGCaYECJ4N5lBiCIZIwhHeBcS4NBgGIWiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiSCagIgBAsBRgYJAiQCGA4CAgNaEwWDHAGCAQQBCqZ5fDOELQELAYVcB?=
 =?us-ascii?q?YELhlOEK4FXP4h2gy+CVwKgAgcCghwEhFyKKCOBWYgIhyYBLIlBg1aMM4INMxo?=
 =?us-ascii?q?jgzyCJxeDSoUUhVYnM4EFAQGMIQEB?=
X-IPAS-Result: =?us-ascii?q?A0AcAABgdvhbh0O0hNFZCh4BBgcGgVEJCwGCaYECJ4N5lBi?=
 =?us-ascii?q?CIZIwhHeBcS4NBgGIWiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiSCagIgB?=
 =?us-ascii?q?AsBRgYJAiQCGA4CAgNaEwWDHAGCAQQBCqZ5fDOELQELAYVcBYELhlOEK4FXP4h?=
 =?us-ascii?q?2gy+CVwKgAgcCghwEhFyKKCOBWYgIhyYBLIlBg1aMM4INMxojgzyCJxeDSoUUh?=
 =?us-ascii?q?VYnM4EFAQGMIQEB?=
X-IronPort-AV: E=Sophos;i="5.56,271,1539673200"; 
   d="scan'208";a="54580306"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 13:53:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727113AbeKXIjj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 24 Nov 2018 03:39:39 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:33420 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726979AbeKXIjj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 24 Nov 2018 03:39:39 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: koike)
        with ESMTPSA id 1EC7F263AE1
From: Helen Koike <helen.koike@collabora.com>
To: David Airlie <airlied@linux.ie>
Cc: dnicoara@chromium.org, alexandros.frantzis@collabora.com,
        linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
        Gustavo Padovan <gustavo.padovan@collabora.com>,
        tomasz Figa <tfiga@chromium.org>,
        Sean Paul <seanpaul@google.com>, kernel@collabora.com,
        =?UTF-8?q?St=C3=A9phane=20Marchesin?= <marcheu@google.com>
Subject: [PATCH] drm: add capability DRM_CAP_ASYNC_UPDATE
Date: Fri, 23 Nov 2018 19:53:26 -0200
Message-Id: <20181123215326.14274-1-helen.koike@collabora.com>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Allow userspace to identify if the driver supports async update.

Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
[prepared for upstream]
Signed-off-by: Helen Koike <helen.koike@collabora.com>

---
Hi,

This patch introduces the ASYNC_UPDATE cap, which originated from the
discussion regarding DRM_MODE_ATOMIC_AMEND on [1], to allow user to
figure that async_update exists.

This was tested using a small program that exercises the uAPI for easy
sanity testing. The program was created by Alexandros and modified by
Enric to test the capability flag [2].

The test worked on a rockchip Ficus v1.1 board on top of mainline plus
the patch to update cursors asynchronously through atomic plus the patch
that introduces the ATOMIC_AMEND flag for the drm/rockchip driver.

To test, just build the program and use the --atomic flag to use the cursor
plane with the ATOMIC_AMEND flag. E.g.

  drm_cursor --atomic

[1] https://patchwork.freedesktop.org/patch/243088/
[2] https://gitlab.collabora.com/eballetbo/drm-cursor/commits/async-capability

Thanks
Helen


 drivers/gpu/drm/drm_ioctl.c | 11 +++++++++++
 include/uapi/drm/drm.h      |  1 +
 2 files changed, 12 insertions(+)

diff --git a/drivers/gpu/drm/drm_ioctl.c b/drivers/gpu/drm/drm_ioctl.c
index 94bd872d56c4..4a7e0f874171 100644
--- a/drivers/gpu/drm/drm_ioctl.c
+++ b/drivers/gpu/drm/drm_ioctl.c
@@ -31,6 +31,7 @@
 #include <drm/drm_ioctl.h>
 #include <drm/drmP.h>
 #include <drm/drm_auth.h>
+#include <drm/drm_modeset_helper_vtables.h>
 #include "drm_legacy.h"
 #include "drm_internal.h"
 #include "drm_crtc_internal.h"
@@ -229,6 +230,7 @@ static int drm_getcap(struct drm_device *dev, void *data, struct drm_file *file_
 {
 	struct drm_get_cap *req = data;
 	struct drm_crtc *crtc;
+	struct drm_plane *plane;
 
 	req->value = 0;
 
@@ -292,6 +294,15 @@ static int drm_getcap(struct drm_device *dev, void *data, struct drm_file *file_
 	case DRM_CAP_CRTC_IN_VBLANK_EVENT:
 		req->value = 1;
 		break;
+	case DRM_CAP_ASYNC_UPDATE:
+		req->value = 1;
+		list_for_each_entry(plane, &dev->mode_config.plane_list, head) {
+			if (!plane->helper_private->atomic_async_update) {
+				req->value = 0;
+				break;
+			}
+		}
+		break;
 	default:
 		return -EINVAL;
 	}
diff --git a/include/uapi/drm/drm.h b/include/uapi/drm/drm.h
index 300f336633f2..ff01540cbb1d 100644
--- a/include/uapi/drm/drm.h
+++ b/include/uapi/drm/drm.h
@@ -649,6 +649,7 @@ struct drm_gem_open {
 #define DRM_CAP_PAGE_FLIP_TARGET	0x11
 #define DRM_CAP_CRTC_IN_VBLANK_EVENT	0x12
 #define DRM_CAP_SYNCOBJ		0x13
+#define DRM_CAP_ASYNC_UPDATE		0x14
 
 /** DRM_IOCTL_GET_CAP ioctl argument type */
 struct drm_get_cap {
-- 
2.19.1

