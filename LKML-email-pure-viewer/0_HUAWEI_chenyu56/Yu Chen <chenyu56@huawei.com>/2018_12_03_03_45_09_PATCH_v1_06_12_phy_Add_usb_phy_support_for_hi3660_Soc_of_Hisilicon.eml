Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:51:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AE99A580117;
	Sun,  2 Dec 2018 19:45:53 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 02 Dec 2018 19:45:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVlLzwBTjAUBzUb6eSObqAUwUpdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YReBt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAeQCM+hfrYb9qVQBoge/BQm3HOPiyCRFhmPq0aAgz+gsCx3K0BAmEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO+30anD0CvOb/NI1jf79YPFdQwuofGSUrJ2ccvR1EkiGgLeg1WQ?=
 =?us-ascii?q?tIzqJT2U2foMs2SB8+VgUuevhnchpgpsrDavwcIshZPIhoIT0l3E9Th5z5w7JN?=
 =?us-ascii?q?KmSU53e8KrEJxVtyycKoB4QdsiTnl2tComzrAKo4O3cSYUxJg92hLSaOCLf5KJ?=
 =?us-ascii?q?7x/hTOqdPCt0iG5/dL6imxq/81KsxvDhWsS6ylpGsyRIn9bKu3sQzRLc8NKHRe?=
 =?us-ascii?q?F4/kq52TaAyQTT6uZcLEAqmqrUNYQhzqQzlpUNq0TDGDH5mEHsgK+RbEUk9fCk?=
 =?us-ascii?q?6+XhYrr4up+RL5F4hh36P6g0h8CyD/o0PhITU2WY5eiwzrzu8E/hTLVPlPI2k6?=
 =?us-ascii?q?3ZsJ7AJcQco660GwtV0ocl6xaiADaqydcYkmcdLFJDZh2Hi5HlO1bAIfD+E/i/?=
 =?us-ascii?q?mU+hkClkx//YJL3tGJbNIWbZkLfnY7l971RQyA0pzdBQ/55UEK0OIOrvWk/ts9?=
 =?us-ascii?q?zVFhs5Mw23w+n5Etl82Z4eVHmLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH8zgUUdcrWx3ZsLdHC4GexrI0WDbnrtntcOC2AKshA+TOz3klKCVzFTam22X6?=
 =?us-ascii?q?I94DE7FY2nAZ3CRoCrnLyOwiO7EodKaWBBD1CGCW3oeJmcW/cQdCKSJddskj4D?=
 =?us-ascii?q?Vbe/UYMh1hautAn8y7pgNefU/iwYtZT+1Nl6/eHTlBcy9SBqAMSZyW2CU2Z0nm?=
 =?us-ascii?q?YQTT8swK9/uVB9ykuE0aVgmfNYDtxT5/RKUgsgL57T1e56Bsv2WgLAeNeJVVmn?=
 =?us-ascii?q?Ts+nATE3UtI+3dsOb1xhFNWlixDJxzCqDKMNl7yXGJw09brR33vrKMZ70XrG0K?=
 =?us-ascii?q?ghgEMgQstALmCmgq9/9w7OB4/GiUmZlqCqdbgC0y7J7muM0W2OvERAWg5qTarF?=
 =?us-ascii?q?RWwfZlfRrdnh+0zNVaGuBqo9PgtB08GCLLBKZcPvjVlBQPfjO9HeY2aqlme0BB?=
 =?us-ascii?q?aIwK6MbYXwd2Uc2iXdFFYLkwQJ8XmaMgg+Az+ro3jCAzx2CVLvf0Ts/PFjp3yh?=
 =?us-ascii?q?UE870RuGb0172Lqz4R4am/qcRugX3rIFvichtjp1EEy839LQF9qPuQ5hcL9Abt?=
 =?us-ascii?q?M65VdNzXjZuBBlPpy8M6BigUYTcxh2v0Pr0BV3FoVAkMgwoHM21gZyLriY0FdA?=
 =?us-ascii?q?dzOe0pD9IbnXKmj0/BCyZK/awFDe0NCK+qgR7PQ0sUnsvAasFkA66XVoz8FV02?=
 =?us-ascii?q?eA5pXNFAcdS5bxXVg49hdkp7DWeDIy557J2nJ2N6m0sTjC28wyCeshyxagecpf?=
 =?us-ascii?q?MayeGA/zFc0aG9ahKOgwl1e1aRIEOfhY9LQoMMO+a/uGxKmrMf5gnTK7l2hI/J?=
 =?us-ascii?q?px00OM9yVmTO7I0I0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn4TtW39E+1G5HVMJxcipdQCUb1Pjxw1Q1F0brmC9liu80j?=
 =?us-ascii?q?N7jSsprq2Z3CHVx+TidRwHOnNERWV4jFfsJ5S0gM4eXESycwcpkx6l717gx6dH?=
 =?us-ascii?q?vKR/M3XTQUBQcin2LmFuSKuxuqCZY85S7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rrf5sbTReRS3joFQyl0kyLXCUK/?=
 =?us-ascii?q?P9mq/NWUkYnMsualWmKlV51TdzTrzIyauCu6421qHQOwn/SpltL7Fgg61Dfx18?=
 =?us-ascii?q?N2WiXQsBb8fo7r2ry6MO19eUlkHl3868t8GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3We2MRhZsO2YmML2i0n6cBKB7?=
 =?us-ascii?q?yZ7LhFnStzv1q5ohjdYfl7njcB1/Qu7GQWjP0OuAoo1i+dGKwdHVFEPSzwkBSF?=
 =?us-ascii?q?99W+rKRUZGm1a7Sx2lRxncu9DL6cuAFTQ2j2eo0tHSJr6sV/MVTM0GD8643+ed?=
 =?us-ascii?q?nQa84TuQOQkxvak+dVL5cxnOIQhSV7IWL9oWEly+kjgBxy2pG6uZKLKmR386K/?=
 =?us-ascii?q?Hx5YLSb1Z8II9zHpjKZemNuW3o+1EpVgHDULQIXnTfayHD0OsvTnMh6EECcgpX?=
 =?us-ascii?q?eDBbrfAQif5V99oH3VFJCrM2yXKGMdzdV/XxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosSpiQNh9W4R9Z50vPLcyS9OFzHz?=
 =?us-ascii?q?xb/p28qgyCMHebah9MDWEIXEyEGl/iMqOv5dnG7+iXGO6+I+HSbrWJrOxUT+2I?=
 =?us-ascii?q?yo630ot64zaMMd2CP3llD/0mw0pDQGp2G8LDlzUUTCwXkS3NYtWfpBe9/C13s8?=
 =?us-ascii?q?++/O7qWALp+YuAFb9SPc9z9BCxhKeJL/SQizphKTZEypMMwmfFyLgB014TiCFu?=
 =?us-ascii?q?dDitHa4DtS7XS6LQlbFYDwQGayNoL8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDT2c73fLizSadOg+RUrRGwvTebHlTnPjSC?=
 =?us-ascii?q?kTnpSh+uPftNjCGdIBxRpoW9fgxxBmjkSdLscge7P8NvjT0q3b00gWvHNXIdMT?=
 =?us-ascii?q?h5aU9Csqec4j9YgvphHWxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7CtcXvx6hDPSrsJyo1GhiuSOyiBoUBxLqjZKgoKEpURjOaXD+ZlGVnbJ5xYN7W?=
 =?us-ascii?q?SWCxQXqNppENzvu6ZMytfRkKL/MitN89XR/ZhUO8+BfMaGNmcxdAfyEhbKAwYf?=
 =?us-ascii?q?Cz2mL2fSgwpaiv7EsjXBopUkq5PhhIADR5dFW1EvUPAXEEJoGJoFOpghGntwlb?=
 =?us-ascii?q?+dkd5N5nekqhTVbNtVs4qBVf+IB/jrbjGDgu8XSQEPxObJMMw4NoD9kxhpalR8?=
 =?us-ascii?q?jZmXRWLQQNlSrywnZQgx9hYeuENiR3E+jhq2Ijim52UeQLvtxkY7?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACPpQRch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAicKjAeMCYIhlzQUgWIpAxABh3YiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKSMMgjYkAYJiAwMBAiQuJAYJAQFQA1QGAQ0FBYMcAYIBBaRBM4oeh?=
 =?us-ascii?q?22EL4IWgRGCZIR0H4V3AoEqAQGGNIFGgXmED3tRjwBFAQYCAYFZj1gLGJEmiQS?=
 =?us-ascii?q?RL4INTSOBboFOCYV/g0aHGjQxgQQBAQEOi2iBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAACPpQRch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAicKjAeMCYIhlzQUgWIpAxABh3YiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiQuJAYJAQFQA1QGAQ0FBYMcAYIBBaRBM4oeh22EL4IWgRGCZIR?=
 =?us-ascii?q?0H4V3AoEqAQGGNIFGgXmED3tRjwBFAQYCAYFZj1gLGJEmiQSRL4INTSOBboFOC?=
 =?us-ascii?q?YV/g0aHGjQxgQQBAQEOi2iBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,308,1539673200"; 
   d="scan'208";a="140470457"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 19:45:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725929AbeLCDpp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 2 Dec 2018 22:45:45 -0500
Received: from szxga07-in.huawei.com ([45.249.212.35]:46582 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725789AbeLCDpp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 2 Dec 2018 22:45:45 -0500
Received: from DGGEMS412-HUB.china.huawei.com (unknown [172.30.72.59])
        by Forcepoint Email with ESMTP id 542E943F61AC4;
        Mon,  3 Dec 2018 11:45:37 +0800 (CST)
Received: from vm100-107-113-134.huawei.com (100.107.113.134) by
 DGGEMS412-HUB.china.huawei.com (10.3.19.212) with Microsoft SMTP Server id
 14.3.408.0; Mon, 3 Dec 2018 11:45:32 +0800
From: Yu Chen <chenyu56@huawei.com>
To: <linux-usb@vger.kernel.org>, <devicetree@vger.kernel.org>,
        <linux-kernel@vger.kernel.org>
CC: <suzhuangluan@hisilicon.com>, <kongfei@hisilicon.com>,
        Yu Chen <chenyu56@huawei.com>,
        Kishon Vijay Abraham I <kishon@ti.com>,
        "David S. Miller" <davem@davemloft.net>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Mauro Carvalho Chehab <mchehab+samsung@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        "Arnd Bergmann" <arnd@arndb.de>, Shawn Guo <shawnguo@kernel.org>,
        Pengcheng Li <lpc.li@hisilicon.com>,
        Jianguo Sun <sunjianguo1@huawei.com>,
        Masahiro Yamada <yamada.masahiro@socionext.com>,
        Jiancheng Xue <xuejiancheng@hisilicon.com>,
        John Stultz <john.stultz@linaro.org>,
        Binghui Wang <wangbinghui@hisilicon.com>
Subject: [PATCH v1 06/12] phy: Add usb phy support for hi3660 Soc of Hisilicon
Date: Mon, 3 Dec 2018 11:45:09 +0800
Message-ID: <20181203034515.91412-7-chenyu56@huawei.com>
X-Mailer: git-send-email 2.15.0-rc2
In-Reply-To: <20181203034515.91412-1-chenyu56@huawei.com>
References: <20181203034515.91412-1-chenyu56@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [100.107.113.134]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This driver handles usb phy power on and shutdown for hi3660 Soc of
Hisilicon.

Cc: Kishon Vijay Abraham I <kishon@ti.com>
Cc: "David S. Miller" <davem@davemloft.net>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Arnd Bergmann <arnd@arndb.de>
Cc: Shawn Guo <shawnguo@kernel.org>
Cc: Pengcheng Li <lpc.li@hisilicon.com>
Cc: Jianguo Sun <sunjianguo1@huawei.com>
Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
Cc: Jiancheng Xue <xuejiancheng@hisilicon.com>
Cc: John Stultz <john.stultz@linaro.org>
Cc: Binghui Wang <wangbinghui@hisilicon.com>
Signed-off-by: Yu Chen <chenyu56@huawei.com>
--
v1: Remove unused code and add comment for time delay as suggested by
Kishon Vijay Abraham I.
--
---
 MAINTAINERS                             |   2 +
 drivers/phy/hisilicon/Kconfig           |  10 ++
 drivers/phy/hisilicon/Makefile          |   1 +
 drivers/phy/hisilicon/phy-hi3660-usb3.c | 237 ++++++++++++++++++++++++++++++++
 4 files changed, 250 insertions(+)
 create mode 100644 drivers/phy/hisilicon/phy-hi3660-usb3.c

diff --git a/MAINTAINERS b/MAINTAINERS
index 1b6b3026804c..1c09c2ca516d 100644
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@ -15471,7 +15471,9 @@ M:	Binghui Wang <wangbinghui@hisilicon.com>
 L:	linux-usb@vger.kernel.org
 S:	Maintained
 F:	Documentation/devicetree/bindings/usb/dwc3-hisi.txt
+F:	Documentation/devicetree/bindings/phy/phy-hi3660-usb3.txt
 F:	drivers/usb/dwc3/dwc3-hisi.c
+F:	drivers/phy/hisilicon/phy-hi3660-usb3.c
 
 USB ISP116X DRIVER
 M:	Olav Kongas <ok@artecdesign.ee>
diff --git a/drivers/phy/hisilicon/Kconfig b/drivers/phy/hisilicon/Kconfig
index b40ee54a1a50..3c142f08987c 100644
--- a/drivers/phy/hisilicon/Kconfig
+++ b/drivers/phy/hisilicon/Kconfig
@@ -12,6 +12,16 @@ config PHY_HI6220_USB
 
 	  To compile this driver as a module, choose M here.
 
+config PHY_HI3660_USB
+	tristate "hi3660 USB PHY support"
+	depends on (ARCH_HISI && ARM64) || COMPILE_TEST
+	select GENERIC_PHY
+	select MFD_SYSCON
+	help
+	  Enable this to support the HISILICON HI3660 USB PHY.
+
+	  To compile this driver as a module, choose M here.
+
 config PHY_HISTB_COMBPHY
 	tristate "HiSilicon STB SoCs COMBPHY support"
 	depends on (ARCH_HISI && ARM64) || COMPILE_TEST
diff --git a/drivers/phy/hisilicon/Makefile b/drivers/phy/hisilicon/Makefile
index f662a4fe18d8..75ba64e2faf8 100644
--- a/drivers/phy/hisilicon/Makefile
+++ b/drivers/phy/hisilicon/Makefile
@@ -1,4 +1,5 @@
 obj-$(CONFIG_PHY_HI6220_USB)		+= phy-hi6220-usb.o
+obj-$(CONFIG_PHY_HI3660_USB)		+= phy-hi3660-usb3.o
 obj-$(CONFIG_PHY_HISTB_COMBPHY)		+= phy-histb-combphy.o
 obj-$(CONFIG_PHY_HISI_INNO_USB2)	+= phy-hisi-inno-usb2.o
 obj-$(CONFIG_PHY_HIX5HD2_SATA)		+= phy-hix5hd2-sata.o
diff --git a/drivers/phy/hisilicon/phy-hi3660-usb3.c b/drivers/phy/hisilicon/phy-hi3660-usb3.c
new file mode 100644
index 000000000000..102966e49e01
--- /dev/null
+++ b/drivers/phy/hisilicon/phy-hi3660-usb3.c
@@ -0,0 +1,237 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Phy provider for USB 3.0 controller on HiSilicon 3660 platform
+ *
+ * Copyright (C) 2017-2018 Hilisicon Electronics Co., Ltd.
+ *		http://www.huawei.com
+ *
+ * Authors: Yu Chen <chenyu56@huawei.com>
+ *
+ */
+
+#include <linux/kernel.h>
+#include <linux/mfd/syscon.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/phy/phy.h>
+#include <linux/regmap.h>
+
+#define PERI_CRG_CLK_EN4			(0x40)
+#define PERI_CRG_CLK_DIS4			(0x44)
+#define GT_CLK_USB3OTG_REF			BIT(0)
+#define GT_ACLK_USB3OTG				BIT(1)
+
+#define PERI_CRG_RSTEN4				(0x90)
+#define PERI_CRG_RSTDIS4			(0x94)
+#define IP_RST_USB3OTGPHY_POR			BIT(3)
+#define IP_RST_USB3OTG				BIT(5)
+
+#define PERI_CRG_ISODIS				(0x148)
+#define USB_REFCLK_ISO_EN			BIT(25)
+
+#define PCTRL_PERI_CTRL3			(0x10)
+#define PCTRL_PERI_CTRL3_MSK_START		(16)
+#define USB_TCXO_EN				BIT(1)
+
+#define PCTRL_PERI_CTRL24			(0x64)
+#define SC_CLK_USB3PHY_3MUX1_SEL		BIT(25)
+
+#define USBOTG3_CTRL0				(0x00)
+#define SC_USB3PHY_ABB_GT_EN			BIT(15)
+
+#define USBOTG3_CTRL2				(0x08)
+#define USBOTG3CTRL2_POWERDOWN_HSP		BIT(0)
+#define USBOTG3CTRL2_POWERDOWN_SSP		BIT(1)
+
+#define USBOTG3_CTRL3				(0x0C)
+#define USBOTG3_CTRL3_VBUSVLDEXT		BIT(6)
+#define USBOTG3_CTRL3_VBUSVLDEXTSEL		BIT(5)
+
+#define USBOTG3_CTRL4				(0x10)
+
+#define USBOTG3_CTRL7				(0x1c)
+#define REF_SSP_EN				BIT(16)
+
+#define HI3660_USB_DEFAULT_PHY_PARAM		(0x1c466e3)
+
+struct hi3660_priv {
+	struct device *dev;
+	struct regmap *peri_crg;
+	struct regmap *pctrl;
+	struct regmap *otg_bc;
+	u32 eye_diagram_param;
+
+	u32 peri_crg_offset;
+	u32 pctrl_offset;
+	u32 otg_bc_offset;
+};
+
+static int hi3660_phy_init(struct phy *phy)
+{
+	struct hi3660_priv *priv = phy_get_drvdata(phy);
+	u32 val, mask;
+	int ret;
+
+	/* usb refclk iso disable */
+	ret = regmap_write(priv->peri_crg, PERI_CRG_ISODIS, USB_REFCLK_ISO_EN);
+	if (ret)
+		goto out;
+
+	/* enable usb_tcxo_en */
+	val = USB_TCXO_EN | (USB_TCXO_EN << PCTRL_PERI_CTRL3_MSK_START);
+	ret = regmap_write(priv->pctrl, PCTRL_PERI_CTRL3, val);
+	if (ret)
+		goto out;
+
+	/* assert phy */
+	val = IP_RST_USB3OTGPHY_POR | IP_RST_USB3OTG;
+	ret = regmap_write(priv->peri_crg, PERI_CRG_RSTEN4, val);
+	if (ret)
+		goto out;
+
+	/* enable phy ref clk */
+	val = SC_USB3PHY_ABB_GT_EN;
+	mask = val;
+	ret = regmap_update_bits(priv->otg_bc, USBOTG3_CTRL0, mask, val);
+	if (ret)
+		goto out;
+
+	val = REF_SSP_EN;
+	mask = val;
+	ret = regmap_update_bits(priv->otg_bc, USBOTG3_CTRL7, mask, val);
+	if (ret)
+		goto out;
+
+	/* exit from IDDQ mode */
+	mask = USBOTG3CTRL2_POWERDOWN_HSP | USBOTG3CTRL2_POWERDOWN_SSP;
+	ret = regmap_update_bits(priv->otg_bc, USBOTG3_CTRL2, mask, 0);
+	if (ret)
+		goto out;
+
+	/* delay for exit from IDDQ mode */
+	usleep_range(100, 100);
+
+	/* deassert phy */
+	val = IP_RST_USB3OTGPHY_POR | IP_RST_USB3OTG;
+	ret = regmap_write(priv->peri_crg, PERI_CRG_RSTDIS4, val);
+	if (ret)
+		goto out;
+
+	/* delay for phy deasserted */
+	usleep_range(10000, 15000);
+
+	/* fake vbus valid signal */
+	val = USBOTG3_CTRL3_VBUSVLDEXT | USBOTG3_CTRL3_VBUSVLDEXTSEL;
+	mask = val;
+	ret = regmap_update_bits(priv->otg_bc, USBOTG3_CTRL3, mask, val);
+	if (ret)
+		goto out;
+
+	/* delay for vbus valid */
+	usleep_range(100, 100);
+
+	ret = regmap_write(priv->otg_bc, USBOTG3_CTRL4,
+			priv->eye_diagram_param);
+	if (ret)
+		goto out;
+
+	return 0;
+out:
+	dev_err(priv->dev, "failed to init phy ret: %d\n", ret);
+	return ret;
+}
+
+static int hi3660_phy_exit(struct phy *phy)
+{
+	struct hi3660_priv *priv = phy_get_drvdata(phy);
+	u32 val;
+	int ret;
+
+	/* assert phy */
+	val = IP_RST_USB3OTGPHY_POR;
+	ret = regmap_write(priv->peri_crg, PERI_CRG_RSTEN4, val);
+	if (ret)
+		goto out;
+
+	/* disable usb_tcxo_en */
+	val = USB_TCXO_EN << PCTRL_PERI_CTRL3_MSK_START;
+	ret = regmap_write(priv->pctrl, PCTRL_PERI_CTRL3, val);
+	if (ret)
+		goto out;
+
+	return 0;
+out:
+	dev_err(priv->dev, "failed to exit phy ret: %d\n", ret);
+	return ret;
+}
+
+static struct phy_ops hi3660_phy_ops = {
+	.init		= hi3660_phy_init,
+	.exit		= hi3660_phy_exit,
+	.owner		= THIS_MODULE,
+};
+
+static int hi3660_phy_probe(struct platform_device *pdev)
+{
+	struct phy_provider *phy_provider;
+	struct device *dev = &pdev->dev;
+	struct phy *phy;
+	struct hi3660_priv *priv;
+
+	priv = devm_kzalloc(dev, sizeof(*priv), GFP_KERNEL);
+	if (!priv)
+		return -ENOMEM;
+
+	priv->dev = dev;
+	priv->peri_crg = syscon_regmap_lookup_by_phandle(dev->of_node,
+					"hisilicon,pericrg-syscon");
+	if (IS_ERR(priv->peri_crg)) {
+		dev_err(dev, "no hisilicon,pericrg-syscon\n");
+		return PTR_ERR(priv->peri_crg);
+	}
+
+	priv->pctrl = syscon_regmap_lookup_by_phandle(dev->of_node,
+					"hisilicon,pctrl-syscon");
+	if (IS_ERR(priv->pctrl)) {
+		dev_err(dev, "no hisilicon,pctrl-syscon\n");
+		return PTR_ERR(priv->pctrl);
+	}
+
+	priv->otg_bc = syscon_regmap_lookup_by_phandle(dev->of_node,
+					"hisilicon,usb3-otg-bc-syscon");
+	if (IS_ERR(priv->otg_bc)) {
+		dev_err(dev, "no hisilicon,usb3-otg-bc-syscon\n");
+		return PTR_ERR(priv->otg_bc);
+	}
+
+	if (of_property_read_u32(dev->of_node, "hisilicon,eye-diagram-param",
+		&(priv->eye_diagram_param)))
+		priv->eye_diagram_param = HI3660_USB_DEFAULT_PHY_PARAM;
+
+	phy = devm_phy_create(dev, NULL, &hi3660_phy_ops);
+	if (IS_ERR(phy))
+		return PTR_ERR(phy);
+
+	phy_set_drvdata(phy, priv);
+	phy_provider = devm_of_phy_provider_register(dev, of_phy_simple_xlate);
+	return PTR_ERR_OR_ZERO(phy_provider);
+}
+
+static const struct of_device_id hi3660_phy_of_match[] = {
+	{.compatible = "hisilicon,hi3660-usb-phy",},
+	{ },
+};
+MODULE_DEVICE_TABLE(of, hi3660_phy_of_match);
+
+static struct platform_driver hi3660_phy_driver = {
+	.probe	= hi3660_phy_probe,
+	.driver = {
+		.name	= "hi3660-usb-phy",
+		.of_match_table	= hi3660_phy_of_match,
+	}
+};
+module_platform_driver(hi3660_phy_driver);
+
+MODULE_AUTHOR("Yu Chen <chenyu56@huawei.com>");
+MODULE_LICENSE("GPL v2");
+MODULE_DESCRIPTION("Hilisicon Hi3660 USB3 PHY Driver");
-- 
2.15.0-rc2

