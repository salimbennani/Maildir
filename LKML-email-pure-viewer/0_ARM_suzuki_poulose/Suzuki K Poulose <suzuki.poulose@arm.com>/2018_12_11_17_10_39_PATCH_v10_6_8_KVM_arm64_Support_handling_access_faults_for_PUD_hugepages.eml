Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:53:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F237058079D;
	Tue, 11 Dec 2018 09:12:27 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 09:12:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ACFi+vBXn6cij5+33kVCWKuJmazPV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCEv6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwwYDUYJqNNPd8Za7RYc8WSHBdUstLSyBNHoWx?=
 =?us-ascii?q?ZJYPAeobOuZYqpHwqUYTrRq/GAmsB+LvwSJNiHTrx6M61PkhEQXB3Aw7Ad0FrX?=
 =?us-ascii?q?PZrM7oNKYTTOC1z6jIwS/bb/NRxDf97I/Icgs/rvyXR71wa8/RxVMzGAPCi1Wd?=
 =?us-ascii?q?sIroNC6W2OQVq2WX8fZsWOa1h2I6pQx9vCKjytovh4XVnI4Yy1LJ+T1nzIooJ9?=
 =?us-ascii?q?C0UlN3bNG4HJdKqi2WK5Z6TtkgTm10visx16cItoShfCcQzZQq3x7fZOKDc4iP?=
 =?us-ascii?q?+h/jSumRLilihH5/e7KwmQyy8U6+xe34TMW010xKriVdntnNsHACyQDT59CZRv?=
 =?us-ascii?q?dh+kqtwyuD2g7N5u1ePEw5lrbXJ4Qgz7MyjpYTtF7MHi7ymEX4lq+WcUAk9/Cs?=
 =?us-ascii?q?6+TmZLXmu5CdO5Z3ig7gKKQunNKwAeAhPggJUWmb//qz1Kf48E3nT7VFkOc2nr?=
 =?us-ascii?q?PasJ/EP8QboLC2AwtP3oYk8Ra/AC+q0M4EknkfMFJFZBWHgpDtO1HPI/D3E+2z?=
 =?us-ascii?q?gluxkDpww/DGP7vhAojCL3TZkbfhe6p95FBYyAYp0d9f4JdUAKkbIP3vQk/xqM?=
 =?us-ascii?q?DYDhghPgy02ennCcl92ZkZWW6VAq+ZLbndsVmH5u80J+mMZYkVuCvyKvQ/5v7u?=
 =?us-ascii?q?i2M5lkEZfaWzwZQXb3W4FOx8I0qFeXrsnssBEWASswo8S+zllkeOUT1UZ3a0Wa?=
 =?us-ascii?q?I84So2CIanDYfFW4Csj6aN3Ca9Hp1KeG9GDkqAHmvvd4WBQ/0Mcj6dItd9kjwY?=
 =?us-ascii?q?UrisU5Uu1QqutA/9yLprNPDU9TcatZ/40Nh15uvTlQw99DBuDsSd1X2NQH9wnm?=
 =?us-ascii?q?8SWzA226V/q1Rnylifyah4n+BYFdtL6vNKSAg6M4TQz+h7C9/oXALBccyESFKn?=
 =?us-ascii?q?QtWgHDEwQcg9w94IY0ZhBdqiigrP0DatA78Qj7aLHoA78rrA33jtIMZw02vJ27?=
 =?us-ascii?q?M/j1Y4WMdPNXephqhk9wfNAY7FlEGZl6WvdaQYxyPN8GaDzWyTvEBXSgJwUKPF?=
 =?us-ascii?q?XWwBaUvSt9j2+kTCT7q2A7Q9LgRB0dKCKrdNatDxkFpJXunjN8rEb2KxgWiwAw?=
 =?us-ascii?q?2Iya2KbIfxf2Ud3SPdCFULkgwJ/HaGMxQ+CTmlo27EEDNuElfvaVv28eZisHO7?=
 =?us-ascii?q?UlM0zwaSYk191rq1/xkVheCcS/ITxL4EpD0tqzJuHFa53tLWDdWAqhFlfKVdZ9?=
 =?us-ascii?q?M9/VhG2XjYtwx7IpyvMaRiikQCfARwukPkzw93BZlYkcg2sHMqyxJ/Jric0Fxf?=
 =?us-ascii?q?eDKXw5DxNqfMJWnv4R+gcajW2lLZ0NaI4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547M1XxsLLO4vSPY19MoBOsq0BCgf9hE?=
 =?us-ascii?q?PaOAFQ/yFdAaBse0JOwrnVipcgwLPORI+KEoOMOmcuOM2LS3M+Z4gDKmkWNH7Z?=
 =?us-ascii?q?hn0kKN6yVzUPTI0IsCw/2C2AuISS38jFa4vs/rg49EYSwdEXSlySjjAo5cfaly?=
 =?us-ascii?q?fYcNCWezLMy73NR+h5jxW3FG8F6vHU8J2MiseRCKdVzywRVQ1VgLoXyggSa5zz?=
 =?us-ascii?q?10nyspr6aFxyzO3uLieQEDOm5KQmlikFjtLZK1j9AcQEincQwpmAG56kb9wqhR?=
 =?us-ascii?q?vL5/IHXLQUdUYyj2KHlvUqmqubqYYM5P65QovT9MUOumYlCaSb/9ox0E3CPlBG?=
 =?us-ascii?q?ZewDE7dze3upT2hRB6iWSdLGpto3rdY81/2RDf5NnET/5LwjUGXDV4iSXQBlWk?=
 =?us-ascii?q?P9im59KUm43BsuC/UWKsTZlTcSjtzYOduyq3/2xqARujn/+tnt3rCxQ10Sj+19?=
 =?us-ascii?q?NyTyXHsA78YpX316S9Ke9nfVNnBF7m58p6B4FxiI0whJ4L1Hgeh5WV+2cHkGjp?=
 =?us-ascii?q?PdVa36L+cGQCRToRz9HJ5wjl3VVpLmiVyILhSnWd3sxhasG/YmMX2SIy9dpGCa?=
 =?us-ascii?q?mK47xfgSt6vEC4ohnPbvhnkTcQ0v8u6H8cg+EUtwsh1CSdArYOHUZGOSzgjQiH?=
 =?us-ascii?q?79e7rK9PfmagbaCw1FZindCmFLyCvgZcWHPjdpYjByBw6Nh/MEnX0H3y8YzkfN?=
 =?us-ascii?q?jQbdQOthybiRvAju5VKI4vmfoOnyZoJWX9vXg9we4hkRNuxY26vJSAK2h15622?=
 =?us-ascii?q?GBlYNjnoZ88J/jHtkL1TnsKX34CpA5VgFS8HXJruTfK0Dj0Sse7rOBqJED05sn?=
 =?us-ascii?q?2bA6bQHReD6Ed6qHLCC5KrOGuSJHYH1tVuXgWdKFZcgAAJXzU6g5g5GRqxxMH6?=
 =?us-ascii?q?dEd55zYR5kP3qxdWy+JoMQX/XXnbpAuydjg0T52fJgJM7g5e/0fVLdCe7uVrEi?=
 =?us-ascii?q?BY+Z2hsRWNKnGBaAROF20JQUuEB1bsPrS14dnA8u6YBvexLvfUYLWOr/BeWOmM?=
 =?us-ascii?q?xZ61zoRm+DOMPN2VPnZ+F/07xlZDXXdhFsTZhToPSi8XlyHMb8KBpxe84Cp3rs?=
 =?us-ascii?q?+h//TxRQLv/pCCC79TMdVp5hC3jr2PN++WhCZlNzlY0okAymPPyLgaxFQSkT1h?=
 =?us-ascii?q?dyGxEbQcsi7AVLjfmrJMAB4BdSxyNNFE76Y93gRWPc7bi9X11qN3j/IvCldFU0?=
 =?us-ascii?q?Dhld+tZcAQP269M1bHDl6RNLuaPT3L3933YaSkRL1MjeVUsge8tiqBH0D/PjSM?=
 =?us-ascii?q?iT/pWgurMeFNiiGbIRNftJu8chZrFWjsUtbmZgenP99wiD082ac0iW/SNW4ALT?=
 =?us-ascii?q?h8dFtAr72K4iNeh/V/GmpB4WJkLOmEgSmZ6ebYJ40SsftqBCR0iu1b7G47y7tT?=
 =?us-ascii?q?8CFLWvh1lDHOod5pplH12tWInz5mVgde7z9RgceIsF9kNKHx8phbRW2C/RQD92?=
 =?us-ascii?q?ycBh0G4dx/BY7BoadVn+PShr/wKX9hu+rT4M8bHMWcfNmaImciMFzxHyPQCxAI?=
 =?us-ascii?q?ZTexMCfUgEkLw6LazWGcspVv8suko5EJULIODFE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A5AAB+7w9ch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGDayeYJIINFJc+gXMsEwGHLiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?2IoJlAwMBAiRNBQYJAQEfMQNUGQWDHIICBAGnATOKLYd8hD+BVz+BEYJkiwoCi?=
 =?us-ascii?q?TuXQAcCkVMWkUCafwGCB00jgzyCJxeOHT8BATGBBQEBimMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A5AAB+7w9ch0O0hNFkHQEBBQEHBQGBUwYBCwGDayeYJII?=
 =?us-ascii?q?NFJc+gXMsEwGHLiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJlAwMBAiRNB?=
 =?us-ascii?q?QYJAQEfMQNUGQWDHIICBAGnATOKLYd8hD+BVz+BEYJkiwoCiTuXQAcCkVMWkUC?=
 =?us-ascii?q?afwGCB00jgzyCJxeOHT8BATGBBQEBimMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="141677755"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 09:12:25 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726733AbeLKRMX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 12:12:23 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:53602 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727915AbeLKRMS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 12:12:18 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 4F4AC174E;
        Tue, 11 Dec 2018 09:12:18 -0800 (PST)
Received: from en101.cambridge.arm.com (en101.cambridge.arm.com [10.1.196.93])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 8378F3F6A8;
        Tue, 11 Dec 2018 09:12:16 -0800 (PST)
From: Suzuki K Poulose <suzuki.poulose@arm.com>
To: linux-arm-kernel@lists.infradead.org
Cc: suzuki.poulose@arm.com, linux-kernel@vger.kernel.org,
        kvmarm@lists.cs.columbia.edu, kvm@vger.kernel.org,
        marc.zyngier@arm.com, christoffer.dall@arm.com,
        will.deacon@arm.com, catalin.marinas@arm.com,
        anshuman.khandual@arm.com
Subject: [PATCH v10 6/8] KVM: arm64: Support handling access faults for PUD hugepages
Date: Tue, 11 Dec 2018 17:10:39 +0000
Message-Id: <1544548241-6417-7-git-send-email-suzuki.poulose@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544548241-6417-1-git-send-email-suzuki.poulose@arm.com>
References: <1544548241-6417-1-git-send-email-suzuki.poulose@arm.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Punit Agrawal <punit.agrawal@arm.com>

In preparation for creating larger hugepages at Stage 2, extend the
access fault handling at Stage 2 to support PUD hugepages when
encountered.

Provide trivial helpers for arm32 to allow sharing of code.

Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
Cc: Christoffer Dall <christoffer.dall@arm.com>
Cc: Marc Zyngier <marc.zyngier@arm.com>
Cc: Russell King <linux@armlinux.org.uk>
Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: Will Deacon <will.deacon@arm.com>
[ Replaced BUG() => WARN_ON(1) in PUD helpers ]
Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
---
 arch/arm/include/asm/kvm_mmu.h   |  9 +++++++++
 arch/arm64/include/asm/kvm_mmu.h |  7 +++++++
 arch/arm64/include/asm/pgtable.h |  6 ++++++
 virt/kvm/arm/mmu.c               | 22 +++++++++++-----------
 4 files changed, 33 insertions(+), 11 deletions(-)

diff --git a/arch/arm/include/asm/kvm_mmu.h b/arch/arm/include/asm/kvm_mmu.h
index a49655f..3a40720 100644
--- a/arch/arm/include/asm/kvm_mmu.h
+++ b/arch/arm/include/asm/kvm_mmu.h
@@ -85,6 +85,9 @@ void kvm_clear_hyp_idmap(void);
 #define kvm_pfn_pte(pfn, prot)	pfn_pte(pfn, prot)
 #define kvm_pfn_pmd(pfn, prot)	pfn_pmd(pfn, prot)
 
+#define kvm_pud_pfn(pud)	({ WARN_ON(1); 0; })
+
+
 #define kvm_pmd_mkhuge(pmd)	pmd_mkhuge(pmd)
 
 /*
@@ -108,6 +111,12 @@ static inline bool kvm_s2pud_exec(pud_t *pud)
 	return false;
 }
 
+static inline pud_t kvm_s2pud_mkyoung(pud_t pud)
+{
+	BUG();
+	return pud;
+}
+
 static inline pte_t kvm_s2pte_mkwrite(pte_t pte)
 {
 	pte_val(pte) |= L_PTE_S2_RDWR;
diff --git a/arch/arm64/include/asm/kvm_mmu.h b/arch/arm64/include/asm/kvm_mmu.h
index c755b37..612032b 100644
--- a/arch/arm64/include/asm/kvm_mmu.h
+++ b/arch/arm64/include/asm/kvm_mmu.h
@@ -187,6 +187,8 @@ void kvm_clear_hyp_idmap(void);
 #define kvm_pfn_pte(pfn, prot)		pfn_pte(pfn, prot)
 #define kvm_pfn_pmd(pfn, prot)		pfn_pmd(pfn, prot)
 
+#define kvm_pud_pfn(pud)		pud_pfn(pud)
+
 #define kvm_pmd_mkhuge(pmd)		pmd_mkhuge(pmd)
 
 static inline pte_t kvm_s2pte_mkwrite(pte_t pte)
@@ -266,6 +268,11 @@ static inline bool kvm_s2pud_exec(pud_t *pudp)
 	return !(READ_ONCE(pud_val(*pudp)) & PUD_S2_XN);
 }
 
+static inline pud_t kvm_s2pud_mkyoung(pud_t pud)
+{
+	return pud_mkyoung(pud);
+}
+
 #define hyp_pte_table_empty(ptep) kvm_page_empty(ptep)
 
 #ifdef __PAGETABLE_PMD_FOLDED
diff --git a/arch/arm64/include/asm/pgtable.h b/arch/arm64/include/asm/pgtable.h
index 50b1ef8..f51e227 100644
--- a/arch/arm64/include/asm/pgtable.h
+++ b/arch/arm64/include/asm/pgtable.h
@@ -314,6 +314,11 @@ static inline pte_t pud_pte(pud_t pud)
 	return __pte(pud_val(pud));
 }
 
+static inline pud_t pte_pud(pte_t pte)
+{
+	return __pud(pte_val(pte));
+}
+
 static inline pmd_t pud_pmd(pud_t pud)
 {
 	return __pmd(pud_val(pud));
@@ -381,6 +386,7 @@ static inline int pmd_protnone(pmd_t pmd)
 #define pfn_pmd(pfn,prot)	__pmd(__phys_to_pmd_val((phys_addr_t)(pfn) << PAGE_SHIFT) | pgprot_val(prot))
 #define mk_pmd(page,prot)	pfn_pmd(page_to_pfn(page),prot)
 
+#define pud_mkyoung(pud)	pte_pud(pte_mkyoung(pud_pte(pud)))
 #define pud_write(pud)		pte_write(pud_pte(pud))
 
 #define __pud_to_phys(pud)	__pte_to_phys(pud_pte(pud))
diff --git a/virt/kvm/arm/mmu.c b/virt/kvm/arm/mmu.c
index 8e44dcc..bd74960 100644
--- a/virt/kvm/arm/mmu.c
+++ b/virt/kvm/arm/mmu.c
@@ -1698,6 +1698,7 @@ static int user_mem_abort(struct kvm_vcpu *vcpu, phys_addr_t fault_ipa,
  */
 static void handle_access_fault(struct kvm_vcpu *vcpu, phys_addr_t fault_ipa)
 {
+	pud_t *pud;
 	pmd_t *pmd;
 	pte_t *pte;
 	kvm_pfn_t pfn;
@@ -1707,24 +1708,23 @@ static void handle_access_fault(struct kvm_vcpu *vcpu, phys_addr_t fault_ipa)
 
 	spin_lock(&vcpu->kvm->mmu_lock);
 
-	pmd = stage2_get_pmd(vcpu->kvm, NULL, fault_ipa);
-	if (!pmd || pmd_none(*pmd))	/* Nothing there */
+	if (!stage2_get_leaf_entry(vcpu->kvm, fault_ipa, &pud, &pmd, &pte))
 		goto out;
 
-	if (pmd_thp_or_huge(*pmd)) {	/* THP, HugeTLB */
+	if (pud) {		/* HugeTLB */
+		*pud = kvm_s2pud_mkyoung(*pud);
+		pfn = kvm_pud_pfn(*pud);
+		pfn_valid = true;
+	} else	if (pmd) {	/* THP, HugeTLB */
 		*pmd = pmd_mkyoung(*pmd);
 		pfn = pmd_pfn(*pmd);
 		pfn_valid = true;
-		goto out;
+	} else {
+		*pte = pte_mkyoung(*pte);	/* Just a page... */
+		pfn = pte_pfn(*pte);
+		pfn_valid = true;
 	}
 
-	pte = pte_offset_kernel(pmd, fault_ipa);
-	if (pte_none(*pte))		/* Nothing there either */
-		goto out;
-
-	*pte = pte_mkyoung(*pte);	/* Just a page... */
-	pfn = pte_pfn(*pte);
-	pfn_valid = true;
 out:
 	spin_unlock(&vcpu->kvm->mmu_lock);
 	if (pfn_valid)
-- 
2.7.4

