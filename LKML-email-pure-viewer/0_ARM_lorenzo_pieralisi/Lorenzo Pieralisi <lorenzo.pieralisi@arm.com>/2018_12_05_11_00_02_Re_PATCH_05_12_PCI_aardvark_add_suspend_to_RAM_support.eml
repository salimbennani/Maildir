Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:51:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3424A5804F9;
	Wed,  5 Dec 2018 03:00:19 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 03:00:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ab+XroBxqU3e47xrXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4fLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJcAY28?=
 =?us-ascii?q?YYQAAPYcMulaoYb9vEMOoBmlCAmwGO/i0CNEimPs0KEk1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?naqtL1NL0MXuCzzajIyijIYelX2Tjj8ojHaBQhofCXXbJxbMHczk0vFwTfjlqO?=
 =?us-ascii?q?r4zkPjSV2v4Vs2ia8eVgT/igi2omqwFqozii3d0jipPMho4P1l/E8iB5zZ8zKN?=
 =?us-ascii?q?alS0B7ecapHIVMuyyeLYd6X80vT39ytConybAKpYS3cSkIxZg/2RLTdv6Kf5KV?=
 =?us-ascii?q?7h/sSOqdOyp0iG54dL6lhRu+7U6twfDmWMauylZFtC9Fn8HMtn8T0xzT7dCKSu?=
 =?us-ascii?q?Vy/ki/wzaDzQPT5f9eIUAyi6XbL4QtwrkqlpocqUjDHyn2l1vqjKKOaEko5uyl?=
 =?us-ascii?q?5/76brjouJOQLZJ4hwLiPqg0m8GyA/w0Mg0UUGia/eS82qfj/Ur8QLhSiv02k6?=
 =?us-ascii?q?/ZsI3VJMgCpa62HRVV0oA95Ba7Fjum19oZnX8ZI1JfYx+HkYfpNE/UIPziDvew?=
 =?us-ascii?q?nU6skDF1yPDCJLHhBY/NLnfbnLf7Ybl981JcyBY0zd1H45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFRs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+OUfo8apC79K+Q55/7p?=
 =?us-ascii?q?lXI5mUUSfai13ZQNb3C0BPRmI1iDbnrqjdcMCmMKvgs4TOz3h1yOSz9TZ3CuX6?=
 =?us-ascii?q?0i4jE3Ep6pDYDGRoq1mryOwD+7HoFKZmBBEl2ME3DoeJueV/cPbyKSJMlhkjsf?=
 =?us-ascii?q?WLilSo8h0wyutQDgx7pmKOrU5jMXtZb52Ndp4O3TkAk49SZoAMSFz2GNU2Z0k3?=
 =?us-ascii?q?sSSD8t3KB/pk99xk2Z0adigfxVDthT5/JPUgcnOp/Q1e16C9buWg3feteFUkqp?=
 =?us-ascii?q?QtKjATspVNI+38cOY1phG9Wllh3D3DClA7kPm7yPBZw76KTc33fqKsZ5ynbG0r?=
 =?us-ascii?q?QhjlY8TstOM22mmrBw9wzJC4HVlEWZkr6gdb4A0y7V6GeD0W2OsVlFXwFqT6XK?=
 =?us-ascii?q?Q2oTZkvMotT//UPNUbmuBbMjMgtCzM6CLrBHatnojVVAWffiN87SY2O3m2esGx?=
 =?us-ascii?q?mIwqmAY5bte2UYxC/dElQLkxgP/XaaMggzHjqurHjADDNwD17vY1nj8e9lqHyl?=
 =?us-ascii?q?SE851AWKb0xn17qo9R8Zn/2cS/UP3r0avCctsSl7HFG439jOEdqPuxJhfLlAYd?=
 =?us-ascii?q?M6+FpHyWPZtwl6Ppy8L6BjhkQScxhts0PpzRV3DoRAkc4lrH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0U493VozdZU3G?=
 =?us-ascii?q?Wc55nQFwUSTI/+XVwx9xh5oLHafDIw54fV1X1qLKm1vSXO29MvBOs51Bmge81T?=
 =?us-ascii?q?P7+DFA/3C8caHdShKPQ2m1i1aRIJJOBT9LMuM8y6bfeH2a6rM/xmnDKplmlH5I?=
 =?us-ascii?q?F90kSR9ytzUOLI3pAFw+2G0QuDTTvzkFChssXvk4BeeT4SBna/yTTjBINJfK1y?=
 =?us-ascii?q?fJoEBn20I8KqwdVynZjtVGBC9F6iHl8JxNWmeR6PYFPjxw1Q0kIXrGejmSu5yT?=
 =?us-ascii?q?x0jj4oorCe3CzI3+Ttah4HNnRXS2lliFfmOZK0gMwCXEi0cwgpkwOo5Eb7x6RB?=
 =?us-ascii?q?pKVzNXLTQVpOfyXtK2FiU62wtqeNYsJV6ZMotzlXX/q4YVyAVrH9pB4a2Tv5H2?=
 =?us-ascii?q?RC3DA7ay2qupLhkhx4km2dNnVzrHneec1q3hfQ/t/cRf1Q3joAWiZ4jyLaBly9?=
 =?us-ascii?q?P9mv4NWVmI3PsuG4V2K9SJJTdTPnwp+HtCu+/WdqGwGwn+ivmt37Fgg3yS/62M?=
 =?us-ascii?q?NtVSnSrhb8Y4/r2r++MeJmeEloGVD959B7GoF4jos/mpUQ1WIGiZWS+HoNiX3z?=
 =?us-ascii?q?PslD2aLicHoNQiYGw93P7wjkwkFjLm+JyJj/VnWS2cZhY9i6YmUL2iMy9cxKCa?=
 =?us-ascii?q?GU7KBakitxuFa3sQXRYf1llDcH1fQu8GIag/0OuAc1yyWdA7MSElNCMS3iiRuI?=
 =?us-ascii?q?9My+o7tNZGm0b7ewzkV+kMulDLGDpAFcRXn4do0jHS928sVwLlbM3Gfv5YHjfd?=
 =?us-ascii?q?nadcgTuQGMkxfck+hVL4o8luYNhSpiI278vGcqy+gmjRx1xpG6vZOKK2Fs/KK/?=
 =?us-ascii?q?Hx5ZOSf5Z8IV+jHxk6lemtya0JyoHpVkAj8LRofnTeq0EDIOsvTqLx2BHyc7qn?=
 =?us-ascii?q?efBLrTBwuf6Fp9onLLEpCrMWyXJXYDwdVjQhmdOFJQgAQOUDommZ45ExigxNb9?=
 =?us-ascii?q?f0dh+jAR+ln4pwNOyu1yMhnwTHzfqB20ajsuS5ifMRlW7hxE50jPKsyT9eZzHy?=
 =?us-ascii?q?Be/p28ow2BMG2bZwJUDW4XXkyIHUzsPr6r5dPY6eiXGvK+L+fSYbWJseFfV/CI?=
 =?us-ascii?q?xY+20ot75TmMMN+DPmJlD/091UpORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqDN/CfhCd6KTZb15MA33zIyKIY3F4dlS5u?=
 =?us-ascii?q?bSStEa8buC7JTaLQnLJXDhEBZyNyMstI87wz3g1XNcHHjdP106ZyjuQpBFddSV?=
 =?us-ascii?q?zhhsapaNQQLGGgL1zHHliENbScKT3PwsH6eqe8SbxWjOVJuBy8ozebE0n/Pjud?=
 =?us-ascii?q?kznlTQygMeZJjCuDJhxRpJm9cgpxCWjkVN/mdhy7MNptgTIq27E7mnPKOnAaMT?=
 =?us-ascii?q?Vnd0NNr7uQ7T5Xg/llGmxB6GZlIveAmyqD8+bYLZMWu+NxAitoj+Ja/Gg6y7xN?=
 =?us-ascii?q?4SBEXvN1ni7Srt9oo16+k+iPyiBoUBxBqjtQgIKLvENiObjW95VaWHbE+g4N4n?=
 =?us-ascii?q?uUCxgQu9RlDdjv6OhszY2Frqv9ITpGu/CStfQNHM/fK8PNeC47MwXBAjzLHRAC?=
 =?us-ascii?q?Rj2qc2fSmxoOvuuV8yixqYI3rIrr0KIPR6VSUF0uF7tODkN/EdoQJ9FvXz4+mL?=
 =?us-ascii?q?qal88g7GC76hLWQZMJ7dj8SvuODKC3e36ihr5eak5NmOugIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACXrgdch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVqCESeMEowOgg0UlziBcywTAYdRIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJhAQEBAQIBAQIkEz8GCQEBChgJJQMMB?=
 =?us-ascii?q?UkTBYJRS4F6CAQBpgAziiuMHoFXP4QjiDaCJgKLIpU0BwKCIASPEyOBW4g7hxm?=
 =?us-ascii?q?aRIINTSODPIInF44dPwEBMYEFAQGIUCmCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAACXrgdch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVqCESeMEowOgg0UlziBcywTAYdRIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkvgjYkAYJhAQEBAQIBAQIkEz8GCQEBChgJJQMMBUkTBYJRS4F6CAQ?=
 =?us-ascii?q?BpgAziiuMHoFXP4QjiDaCJgKLIpU0BwKCIASPEyOBW4g7hxmaRIINTSODPIInF?=
 =?us-ascii?q?44dPwEBMYEFAQGIUCmCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="53905402"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 03:00:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727639AbeLELAO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 06:00:14 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:51844 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726937AbeLELAN (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 06:00:13 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id AD35A80D;
        Wed,  5 Dec 2018 03:00:12 -0800 (PST)
Received: from e107981-ln.cambridge.arm.com (e107981-ln.cambridge.arm.com [10.1.197.40])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id B86383F575;
        Wed,  5 Dec 2018 03:00:09 -0800 (PST)
Date: Wed, 5 Dec 2018 11:00:02 +0000
From: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
To: "Rafael J. Wysocki" <rjw@rjwysocki.net>
Cc: Miquel Raynal <miquel.raynal@bootlin.com>, sudeep.holla@arm.com,
        Gregory Clement <gregory.clement@bootlin.com>,
        Jason Cooper <jason@lakedaemon.net>,
        Andrew Lunn <andrew@lunn.ch>,
        Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Bjorn Helgaas <bhelgaas@google.com>,
        devicetree@vger.kernel.org, Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>, linux-pci@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        Antoine Tenart <antoine.tenart@bootlin.com>,
        Maxime Chevallier <maxime.chevallier@bootlin.com>,
        Nadav Haklai <nadavh@marvell.com>
Subject: Re: [PATCH 05/12] PCI: aardvark: add suspend to RAM support
Message-ID: <20181205110002.GA12435@e107981-ln.cambridge.arm.com>
References: <20181123141831.8214-1-miquel.raynal@bootlin.com>
 <1999610.6DN9RK2Tt3@aspire.rjw.lan>
 <20181204094558.GA24588@e107981-ln.cambridge.arm.com>
 <1966692.fVZYlVgWHv@aspire.rjw.lan>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1966692.fVZYlVgWHv@aspire.rjw.lan>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 04, 2018 at 10:42:19PM +0100, Rafael J. Wysocki wrote:
> On Tuesday, December 4, 2018 10:45:58 AM CET Lorenzo Pieralisi wrote:
> > On Mon, Dec 03, 2018 at 11:00:20PM +0100, Rafael J. Wysocki wrote:
> > > On Monday, December 3, 2018 4:38:46 PM CET Miquel Raynal wrote:
> > > > Hi Lorenzo,
> > > > 
> > > > Lorenzo Pieralisi <lorenzo.pieralisi@arm.com> wrote on Mon, 3 Dec 2018
> > > > 10:27:08 +0000:
> > > > 
> > > > > [+Rafael, Sudeep]
> > > > > 
> > > > > On Fri, Nov 23, 2018 at 03:18:24PM +0100, Miquel Raynal wrote:
> > > > > > Add suspend and resume callbacks. The priority of these are
> > > > > > "_noirq()", to workaround early access to the registers done by the
> > > > > > PCI core through the ->read()/->write() callbacks at resume time.
> > > > > > 
> > > > > > Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
> > > > > > ---
> > > > > >  drivers/pci/controller/pci-aardvark.c | 52 +++++++++++++++++++++++++++
> > > > > >  1 file changed, 52 insertions(+)
> > > > > > 
> > > > > > diff --git a/drivers/pci/controller/pci-aardvark.c b/drivers/pci/controller/pci-aardvark.c
> > > > > > index 108b3f15c410..7ecf1ac4036b 100644
> > > > > > --- a/drivers/pci/controller/pci-aardvark.c
> > > > > > +++ b/drivers/pci/controller/pci-aardvark.c
> > > > > > @@ -1108,6 +1108,55 @@ static int advk_pcie_setup_clk(struct advk_pcie *pci
> > > > > >  	return ret;
> > > > > >  }
> > > > > >  
> > > > > > +static int __maybe_unused advk_pcie_suspend(struct device *dev)
> > > > > > +{
> > > > > > +	struct advk_pcie *pcie = dev_get_drvdata(dev);
> > > > > > +
> > > > > > +	advk_pcie_disable_phy(pcie);
> > > > > > +
> > > > > > +	clk_disable_unprepare(pcie->clk);  
> > > > > 
> > > > > I have noticed it is common practice, still, I would like to check whether
> > > > > it is allowed to call functions that may sleep in a NOIRQ suspend/resume
> > > > > callback ?
> > > > 
> > > > You are right this is weird. I double checked and for instance,
> > > > pcie-mediatek.c, pci-tegra.c and pci-imx6.c do the exact same thing. There are
> > > > probably other cases where drivers call functions that may sleep from a NOIRQ
> > > > context. I am interested to know if this is valid and if not, what is the
> > > > alternative?
> > > > 
> > > 
> > > Yes, it is valid.  _noirq means that the high-level action handlers
> > > will not be invoked for interrupts occurring during that period, but
> > > that doesn't apply to timer interrupts.
> > > 
> > > IOW, don't expect *your* IRQ handler to be invoked then (if this is
> > > not a timer IRQ), but you can sleep.
> > 
> > Hi Rafael, all,
> > 
> > I did not ask my question (that may be silly) properly apologies. I know
> > that the S2R context allows sleeping the question is, in case
> > clk_disable_unprepare() (and resume counterparts) sleeps,
> 
> If it just sleeps, then this is not a problem, but if it actually *waits*
> for something meaningful to happen (which I guess is what you really mean),
> then things may go awry.

That's what I meant and I assume that's reason why the
*_prepare/unprepare() API are allowed to sleep, waiting for
an event to trigger.

> > what is going to wake it up, given that we are in the S2R NOIRQ phase and as
> > you said the action handlers (that are possibly required to wake up the eg
> > clk_disable_unprepare() caller) are disabled (unless, AFAIK,
> > IRQF_NO_SUSPEND is passed at IRQ request time in the respective driver).
> 
> So if it waits for an action handler to do something and wake it up, it may
> very well deadlock.  I have no idea if that really happens, though.

I have no idea either, that's why I asked the clock maintainers too,
the point is, the clk API allows this behaviour, I do not think it is safe
to rely on a non-blocking clk back-end, that's why I raised the question
in the first place.

> > The clk API implementations back-ends are beyond my depth, I just wanted
> > to make sure I understand how the S2R flow is expected to work in this
> > specific case.
> 
> Action handlers won't run unless the IRQs are marked as IRQF_NO_SUSPEND
> (well, there are a few more complications I don't recall exactly, but
> that's the basic rule).  If anything depends on them to run, it will block.

It looks like this patch (and more code in the kernel) expects either
the clk calls not to block or the action handler implemented in the
clock back-ends to run in S2R-NOIRQ (possibly by using the
IRQF_NO_SUSPEND flag).

I would appreciate if the clock maintainers can shed some light on
this.

Thanks,
Lorenzo
