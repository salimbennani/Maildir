Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:53:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 860725804D6;
	Fri, 21 Dec 2018 08:44:26 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 08:44:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0bFpcByNABffCSbXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ekQLPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJYBAfQdMuZDt4nwpUADrQeiCQS2GO/j1iNEi33w0KYn0+ohCwbG3Ak4Et8QsH?=
 =?us-ascii?q?TbstP1OL4QXuCo0aLG0y7DYOlX2Tzg74XJfA4uofeXXb9rbcXR0kgvGB3fglWX?=
 =?us-ascii?q?s4zlMCqY2+IQuGaY9+ptTfyjh3Ijpg1rvzSiyNkghpPUio8W1lzI7yR0zYQtKd?=
 =?us-ascii?q?GmVEJ2ZcSoHZhQui2AKod6XMAvT3tntSs0zLANpIS1czIQyJs9wh7Sc/yHfJaM?=
 =?us-ascii?q?4hLkTOuRPzh4i2x/eL6lhBa971KgyuviWcmwylpKqTBFktbUunAM0Rzc9NSHR+?=
 =?us-ascii?q?Nj8ku93TuDzR3f5+9aLUwuiKbWKIItzqQxm5cRqUjDGzX5mETyjK+YbEUk/e2o?=
 =?us-ascii?q?5vzjYrXnoJ+cKoB1hhj9MqswgMy/B/o3MgwXU2ic9+W80qPs/VfiTbVUgf05jL?=
 =?us-ascii?q?PZvIrZJcsFvK65BRFa0oI55xa4FTem38wUnWMbI1JdZBKHk4/pNknKIPD5Dvew?=
 =?us-ascii?q?nU6gkTh2x/3dOr3hA5PNLmXMkbv7fLZ97VJcxxQ3zdxF+51UDbQBKurpWkDtrN?=
 =?us-ascii?q?zYEgM5MwuszubnEtp9158eVniIAqODMKPSrEWH5uQgI+SXYI8VuTD9K+Uq5vL0?=
 =?us-ascii?q?jH85n0Mdcret3ZcNdH+4GfFmKV2DYXXwmtcBDXsKvg0mQePwk12CUTlTZ3WoU6?=
 =?us-ascii?q?Im/D47CpmrDYPCRoCrnbyA0z23HpxQZmBaFF+MFW3keJmDW/cJcCiSONNukiQY?=
 =?us-ascii?q?Vbi9TI8szRKuuxX8y7Z9KurU+zcXtZTs1NVu4+3TlBcy9SF7DsiH0mGNSX10kX?=
 =?us-ascii?q?0MRzMswK9/pkl9wE+Z0adkm/xYCcBT5/RRXwgnL5Hc0fJ1B8ryWg3beNeJU0ip?=
 =?us-ascii?q?QtOhDTE1TdIxxtsObl15G9WjiBDDwiWrD6UUl7yNGJw77Kbc02LtKMZ6znbMzL?=
 =?us-ascii?q?MhgEU+QstTKW2mgbZy+BXJCI7XjUqVjaaqer4a3C7W6miDy3GDvEVZUA52TKXE?=
 =?us-ascii?q?UmoTZkrQrdTl+EzCS6WiBqggMgtE0cSCMLdFasX1jVVaQ/fuIMjeY2O0m2e3GR?=
 =?us-ascii?q?aIxrONYJD2e2kH2yXdEkwEkwEV/XaJLgU+Aiaho2TDDD1hD17vYkXs8fVgp3O/?=
 =?us-ascii?q?VEM70waKb0h53bqv5hEVneCcS+8U3r8coighryt7HVmj0NPWEdaPvBdhc7hGbt?=
 =?us-ascii?q?M741dH0nzZuhd5PpyhKaBim1Effx52v0PoyxV4FIFAndI2o3MtyQp4MbiY309Z?=
 =?us-ascii?q?dzOEwZDwPaXaK2nv/By1d6HawFDf0NaM9acJ5/Q1sFHjvACvFko//HRrydhV03?=
 =?us-ascii?q?2A5prUCAoeS47+UkEy9xJivbHVfjE955/I1X1rKaS0qD7C1M4zC+s/1xmgeM1T?=
 =?us-ascii?q?MKWaGw/oEs0WHtShJ/Yum1e0cB0EJudS9KgvMsOidvuG3rOrPel6kDKni2RH/J?=
 =?us-ascii?q?5y0kaW+yVgTe7I2o4Pw+uE0QufSzf8kFChv9j3mIBFfz0THnCzyTP5BI5XfaBy?=
 =?us-ascii?q?eYcLCWGzI8y43Nl+hpjtW2JG+16nHV8JxMipeR+KZVznwQJQzVgXoWCgmSagzT?=
 =?us-ascii?q?x7iSsprqmc3CzJ2ejibwAIOm1IRGlji1fjP460gsseXEipaQgpiRSk6Vz7x6hd?=
 =?us-ascii?q?uKRwMW3TTV1UcCjxKmFoSrGwuaaaY85T9JMotj1aUeSmblCdULL9oRoa0yX4Em?=
 =?us-ascii?q?taxTA7cSyqu5rjkxx7jmKdMGh8rH7Ddc5swhff4cTWReRN0ToeWCl4lT7XC0C/?=
 =?us-ascii?q?P9az/NWYjZfDsv2kWGKnWZ1eai3rzYKGtCum6mxmGxy/n/avmtL5FQg2yzP019?=
 =?us-ascii?q?5vVS/QthbzfpHr17imMeJgZkRoAV7868lgFY1knIo/mooQ2WQEiZWP5nUIj33z?=
 =?us-ascii?q?MdpA1KL6bXoNQyMLwtHP7Ajk3k1jMmyGx4bjWnqBxcthYsGwYnkK1SIl88BKFK?=
 =?us-ascii?q?CU4aRYnStyp1q0twPQbuJ7njcA0vsu838ajvoNuAosyCWdH78TEVNZPSzqixSH?=
 =?us-ascii?q?8dS+oL9La2aodLi6zFB+ksy5DLGevgFcX270dYw4Ei936sV/LUjA0Hnu6oz/fN?=
 =?us-ascii?q?nQbNQTtgCbkhvajuhVLo4xmeQOhSZ9JW39unglwfYhjRNyxZG6oJSHK2J18aK7?=
 =?us-ascii?q?GBFYMyP6Z9gJ9jHxl6penduW34OyHpVnADoLR4DlTfapEDIUqPTmOByCEDw6qn?=
 =?us-ascii?q?eHB7XfGRWT51thr3LKC5qrLW2YJGEFzdV+QxmQPExegAcJXDUjg542DAaqyNb6?=
 =?us-ascii?q?cEd+4DAR6UX1qh9NyuJuKhn+XX3TpAauajcoVpefKABa4R1F50fQKcae9P58Hz?=
 =?us-ascii?q?lE/p29qwyAMmybaBpJDWEKWUyEBkrvPrq05dnH/OiXGPC+L+bVYbiVrexeVvGI?=
 =?us-ascii?q?xY+g04d8/jaMMNmPMWdmD/EhxkVDWnV5EdzDmzoTUywXiz7Nb8mDqRim5y14td?=
 =?us-ascii?q?q//+rrWQ714YuPCqBfMdFu+xCwnKeCOPSchCd/KTZEyJwMwWXEx6QY3F4Xkytu?=
 =?us-ascii?q?bSWiEawctS7RS6LdgrNXDx8eay9pKMRE9b4z3glTNs7dkd710r94jvgoC1ZKT1?=
 =?us-ascii?q?Dhm8epZdAULGG5Ll/IGEGLNLGeLz3R3873eb+8SaFXjOhMtxy/ozCbE0riPjSF?=
 =?us-ascii?q?jzboVhCvPvtKjCGUJxFevIC9chBwCWnsVt7maxu7MMNpgj0y27E7mnTKNWtPeQ?=
 =?us-ascii?q?R7JmhKorDYziJAmvhlUzhK6XZoLuicgyuDx+bdI5cS9/BsB3Inufhd5SERy7ZT?=
 =?us-ascii?q?qRBZDMBukSqa+sFjpUqOmfKOx3xgShUY+WUDv56CoUg3YfaRzZJHQ3uRuUtVtW?=
 =?us-ascii?q?g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADxFh1ch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng32IGV+LbQEBBoE1FIkCjkmBcxQBGBMBhzAiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKS+COikBgmYBAQEBAwECIARSBgkBAQoLCgMCAiYCAgMeA?=
 =?us-ascii?q?RIBBQEcBhMFgx2BagMIDQWaQzyLGXwziAYNgh0SeYs0F3iBB4ERgxKCV4Uyglc?=
 =?us-ascii?q?CiUuBeIUckDMzCY42gzMYgWCIGjeHLo9jihICBAIEBQIFDyGBJYIOTTAIbAaCN?=
 =?us-ascii?q?YInF44qMzKBBQEBji4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAADxFh1ch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng32IGV+LbQEBBoE1FIkCjkmBcxQBGBMBhzAiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKS+COikBgmYBAQEBAwECIARSBgkBAQoLCgMCAiYCAgMeARIBBQEcBhMFgx2?=
 =?us-ascii?q?BagMIDQWaQzyLGXwziAYNgh0SeYs0F3iBB4ERgxKCV4UyglcCiUuBeIUckDMzC?=
 =?us-ascii?q?Y42gzMYgWCIGjeHLo9jihICBAIEBQIFDyGBJYIOTTAIbAaCNYInF44qMzKBBQE?=
 =?us-ascii?q?Bji4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="57867850"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 08:44:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389133AbeLUQoX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 11:44:23 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:42116 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725868AbeLUQoW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 11:44:22 -0500
Received: by mail-ed1-f65.google.com with SMTP id y20so5163027edw.9
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 08:44:20 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=bV0KAnk3tQchKK12t/V41YVSjxMoTHWPpGkNXrDUEIk=;
        b=MxJZ00FpZkm2dtiQaF5HAejDTh7J1fx+5aczQjmsdZrjqMIBGme0eZaOYwiQYQBrvZ
         CZTYoqd0vsWdZ+x1JFpeBsOK1Ay/1wQzACn8d+f+ulgsXVO+bMV0UvjlHZvU4X0SQCke
         Ab6fEKyTkmYorHdeVdA8m4jHNc/u97bwaSFdv7L4SiSdT7vw13yyK4BdLa5/c5MQQea/
         4RObJ4jKQ0+iFvSGcOl7+NV8QfqvSz/0QUOcpGn7OK1kOdbeOVkaso1sqZKtK+Uhdg5a
         7D3p8eMsyCFxz9tI+OVGrpID3YVKgxhpAjE1NCYvmo9zVBEilR5QP3EEdo/1oDETdUax
         2ePw==
X-Gm-Message-State: AA+aEWZkK0a0Ho2Ka42lzQc6H+C6ynDnpEZFoNHVoer/hJ3fTzUBqjY1
        tMlL5yuthLu4yofxRKIX0EJ/5OUhvUc=
X-Google-Smtp-Source: AFSGD/Uf+Txi3nkQw0CJamXslqA/Rc+WcMJSEXZT5I0KI3IRNVx94yaYPWpvqNMKv4JT2t247kpaBA==
X-Received: by 2002:a17:906:6011:: with SMTP id o17-v6mr2553149ejj.237.1545410659933;
        Fri, 21 Dec 2018 08:44:19 -0800 (PST)
Received: from mail-wm1-f43.google.com (mail-wm1-f43.google.com. [209.85.128.43])
        by smtp.gmail.com with ESMTPSA id j4sm3138649edh.69.2018.12.21.08.44.19
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 08:44:19 -0800 (PST)
Received: by mail-wm1-f43.google.com with SMTP id m22so6355728wml.3
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 08:44:19 -0800 (PST)
X-Received: by 2002:a1c:2382:: with SMTP id j124mr3483733wmj.14.1545410659115;
 Fri, 21 Dec 2018 08:44:19 -0800 (PST)
MIME-Version: 1.0
References: <20181221152110.17982-1-codekipper@gmail.com> <20181221152110.17982-2-codekipper@gmail.com>
In-Reply-To: <20181221152110.17982-2-codekipper@gmail.com>
From: Chen-Yu Tsai <wens@csie.org>
Date: Sat, 22 Dec 2018 00:44:07 +0800
X-Gmail-Original-Message-ID: <CAGb2v66-JmONW9AYqoSmifrEj+nstREdsbkcy9ECwnJ47zxARA@mail.gmail.com>
Message-ID: <CAGb2v66-JmONW9AYqoSmifrEj+nstREdsbkcy9ECwnJ47zxARA@mail.gmail.com>
Subject: Re: [PATCH v3 1/9] ASoC: sun4i-i2s: Adjust regmap settings
To: Code Kipper <codekipper@gmail.com>
Cc: Maxime Ripard <maxime.ripard@free-electrons.com>,
        linux-sunxi <linux-sunxi@googlegroups.com>,
        linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Liam Girdwood <lgirdwood@gmail.com>,
        Mark Brown <broonie@kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Linux-ALSA <alsa-devel@alsa-project.org>,
        "Andrea Venturi (pers)" <be17068@iperbole.bo.it>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 21, 2018 at 11:21 PM <codekipper@gmail.com> wrote:
>
> From: Marcus Cooper <codekipper@gmail.com>
>
> Bypass the regmap cache when flushing the i2s FIFOs and modify the tables
> to reflect this.
>
> Signed-off-by: Marcus Cooper <codekipper@gmail.com>
> ---
>  sound/soc/sunxi/sun4i-i2s.c | 29 +++++++++--------------------
>  1 file changed, 9 insertions(+), 20 deletions(-)
>
> diff --git a/sound/soc/sunxi/sun4i-i2s.c b/sound/soc/sunxi/sun4i-i2s.c
> index d5ec1a20499d..64d073cb2aee 100644
> --- a/sound/soc/sunxi/sun4i-i2s.c
> +++ b/sound/soc/sunxi/sun4i-i2s.c
> @@ -548,9 +548,11 @@ static int sun4i_i2s_set_fmt(struct snd_soc_dai *dai, unsigned int fmt)
>  static void sun4i_i2s_start_capture(struct sun4i_i2s *i2s)
>  {
>         /* Flush RX FIFO */
> +       regcache_cache_bypass(i2s->regmap, true);
>         regmap_update_bits(i2s->regmap, SUN4I_I2S_FIFO_CTRL_REG,
>                            SUN4I_I2S_FIFO_CTRL_FLUSH_RX,
>                            SUN4I_I2S_FIFO_CTRL_FLUSH_RX);
> +       regcache_cache_bypass(i2s->regmap, false);

IIRC the flush cache bit is self-clearing. So you likely want to mark
this register as volatile. If it is marked as volatile, then all access
to that register bypasses the cache, so the regcache_cache_bypass calls
are unneeded.

However, looking at the code, the write would seem to be ignored if the
regmap is in the cache_only state. We only set this when the bus clock
is disabled. Under such a condition, bypassing the cache and forcing a
write would be unwise, as the system either drops the write, or stalls
altogether.

>
>         /* Clear RX counter */
>         regmap_write(i2s->regmap, SUN4I_I2S_RX_CNT_REG, 0);
> @@ -569,9 +571,11 @@ static void sun4i_i2s_start_capture(struct sun4i_i2s *i2s)
>  static void sun4i_i2s_start_playback(struct sun4i_i2s *i2s)
>  {
>         /* Flush TX FIFO */
> +       regcache_cache_bypass(i2s->regmap, true);
>         regmap_update_bits(i2s->regmap, SUN4I_I2S_FIFO_CTRL_REG,
>                            SUN4I_I2S_FIFO_CTRL_FLUSH_TX,
>                            SUN4I_I2S_FIFO_CTRL_FLUSH_TX);
> +       regcache_cache_bypass(i2s->regmap, false);
>
>         /* Clear TX counter */
>         regmap_write(i2s->regmap, SUN4I_I2S_TX_CNT_REG, 0);
> @@ -703,13 +707,7 @@ static const struct snd_soc_component_driver sun4i_i2s_component = {
>
>  static bool sun4i_i2s_rd_reg(struct device *dev, unsigned int reg)
>  {
> -       switch (reg) {
> -       case SUN4I_I2S_FIFO_TX_REG:
> -               return false;
> -
> -       default:
> -               return true;
> -       }
> +       return true;

I don't understand why this is relevant. Do you need to read back from the TX
FIFO?

If so, just drop the call-back altogether. If no callback is provided and no
rd_table is provided either, it defaults to all registers under max_register
(if max_register < 0) are readable.

However this seems like it deserves to be a separate patch (where you explain
in the commit log why it's needed).

Regards
ChenYu

>  }
>
>  static bool sun4i_i2s_wr_reg(struct device *dev, unsigned int reg)
> @@ -728,6 +726,8 @@ static bool sun4i_i2s_volatile_reg(struct device *dev, unsigned int reg)
>  {
>         switch (reg) {
>         case SUN4I_I2S_FIFO_RX_REG:
> +       case SUN4I_I2S_FIFO_TX_REG:
> +       case SUN4I_I2S_FIFO_STA_REG:
>         case SUN4I_I2S_INT_STA_REG:
>         case SUN4I_I2S_RX_CNT_REG:
>         case SUN4I_I2S_TX_CNT_REG:
> @@ -738,23 +738,12 @@ static bool sun4i_i2s_volatile_reg(struct device *dev, unsigned int reg)
>         }
>  }
>
> -static bool sun8i_i2s_rd_reg(struct device *dev, unsigned int reg)
> -{
> -       switch (reg) {
> -       case SUN8I_I2S_FIFO_TX_REG:
> -               return false;
> -
> -       default:
> -               return true;
> -       }
> -}
> -
>  static bool sun8i_i2s_volatile_reg(struct device *dev, unsigned int reg)
>  {
>         if (reg == SUN8I_I2S_INT_STA_REG)
>                 return true;
>         if (reg == SUN8I_I2S_FIFO_TX_REG)
> -               return false;
> +               return true;
>
>         return sun4i_i2s_volatile_reg(dev, reg);
>  }
> @@ -809,7 +798,7 @@ static const struct regmap_config sun8i_i2s_regmap_config = {
>         .reg_defaults   = sun8i_i2s_reg_defaults,
>         .num_reg_defaults       = ARRAY_SIZE(sun8i_i2s_reg_defaults),
>         .writeable_reg  = sun4i_i2s_wr_reg,
> -       .readable_reg   = sun8i_i2s_rd_reg,
> +       .readable_reg   = sun4i_i2s_rd_reg,
>         .volatile_reg   = sun8i_i2s_volatile_reg,
>  };
>
> --
> 2.20.1
>
