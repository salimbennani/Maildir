Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 070D5580380
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 09:12:08 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 09:12:07 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A69DsABUgw0hFLBkPOnSb9LO19lvV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSGvqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp2y?=
 =?us-ascii?q?b4UPAeQCM+hXoYbyqFkSohWxGAesHOHixD1Hi3Pr06A2z/ouERrd0Qw8BtIDqm?=
 =?us-ascii?q?jYoMn7OaoQV+2+0anGzS/Eb/NTwTrz7pLHcgsgoPGIWrJ7bMXfyVM0FwzbjVWb?=
 =?us-ascii?q?tIvoPzeL2eQXqGiU8elgWPm1i2E5tg5xoiKgxts2hobVgYIVz0nJ+CNky4g2Pd?=
 =?us-ascii?q?21UFB3bcKnHZdKqi2WKoh7Ttk8T2xmuCs20KAKtJyjcCQU1JgqwwTTZ+GJfoSW?=
 =?us-ascii?q?+B7vSeWcLDliiH57e7+ygQu5/1K6xe3mTMa01U5HripbndnIsXAAzxjT6smcSv?=
 =?us-ascii?q?th5UetwzmP1wbO6u1eJkA0j6XbJ4Ygwr42iJUTrVzOEjHqlEj1lqOaa1go9+uy?=
 =?us-ascii?q?5+j5bLjrpoWQO5J2hw3mN6QhgM2/AeA2MggUWGib/Pyx1KT98k38XbVGl+A5nb?=
 =?us-ascii?q?fHsJ/EIcQXv7W2AwhI0oYl9xmwESym3NMcnXkGL1JKZgiLjof0O1zWJPD4DPG/?=
 =?us-ascii?q?g0mjkTtxxvDGOKHhDYvJLnTZjLjherN95lVayAo0y9Bf6JRUCqwbLPL0QE/xu8?=
 =?us-ascii?q?TUDgUlPAys3+bnFNJ925saWWKOAa+WLrnesFCV5u80J+mMZYkVuCvyKvQ/5v7u?=
 =?us-ascii?q?i2M5lkEZfaWzwZQXb3W4TbxbJV6Eay/snssZCjVN+Q4/V/DxzluFVzFVejC1Ra?=
 =?us-ascii?q?174zg6DIevC8DEXpysh7qamz62G4ATam1YB1TfLHHzao/RXv4NbD6VcNZslyFB?=
 =?us-ascii?q?WbW/Rotkzxy3qQLh15JhKezb/DBesojsg8No7e/eng1n6DpvEs6G2HuMRWwnom?=
 =?us-ascii?q?Rdfz832KFnuUFK716f0al1nrl0HMFfZrsdSgc7MZvQ5/Z3B9D7RkTKedLfDB7s?=
 =?us-ascii?q?Z9StATg8SpoKi5lGX118AdajiFqLiy+xH5cPmrCLDYBy+aXZiSvfPcF4nlLPz7?=
 =?us-ascii?q?sliBELWNBCNiXygqNl7AXQL5TEn0WQi+ChcqFKj32Fz3uK0Wfb5BIQawV3S6iQ?=
 =?us-ascii?q?GClHPkY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BgAAAjnQ5cmBHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAYEwgk8Tg3qIeIswgg18kVmGbxQYFIMsgRSDLSI3Bg0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQEBCAsLBhsOL4I2BQIDGgEGglwBAgMBAiAEHwopAwMBAgYBA?=
 =?us-ascii?q?QoYAgIiBAICAwFTBgEMBgIBAQGDHIICAQSmBHwzhUCEYIELixYXgUA/gREngjY?=
 =?us-ascii?q?1hQGDBII1IgKJL4YOgU6PagmRSQYYgVyFF4JzNochLIh2kA6BXIF4MxoIGxWDJ?=
 =?us-ascii?q?4InF44eQDGBBxyKBYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BgAAAjnQ5cmBHrdtBkGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAYEwgk8Tg3qIeIswgg18kVmGbxQYFIMsgRSDLSI3Bg0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QEBCAsLBhsOL4I2BQIDGgEGglwBAgMBAiAEHwopAwMBAgYBAQoYAgIiBAICAwF?=
 =?us-ascii?q?TBgEMBgIBAQGDHIICAQSmBHwzhUCEYIELixYXgUA/gREngjY1hQGDBII1IgKJL?=
 =?us-ascii?q?4YOgU6PagmRSQYYgVyFF4JzNochLIh2kA6BXIF4MxoIGxWDJ4InF44eQDGBBxy?=
 =?us-ascii?q?KBYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="66137404"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 09:12:07 -0800
Received: from localhost ([::1]:33863 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWP6E-0003yI-9R
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 12:12:06 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40909)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <lersek@redhat.com>) id 1gWP60-0003x8-GO
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:11:54 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <lersek@redhat.com>) id 1gWP5x-0007qX-Ap
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:11:52 -0500
Received: from mx1.redhat.com ([209.132.183.28]:58018)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <lersek@redhat.com>) id 1gWP5w-0007q7-Vc
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:11:49 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D8771C0587D1
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 17:11:47 +0000 (UTC)
Received: from lacos-laptop-7.usersys.redhat.com (ovpn-124-101.rdu2.redhat.com
	[10.10.124.101])
	by smtp.corp.redhat.com (Postfix) with ESMTP id D07DA1001F5E;
	Mon, 10 Dec 2018 17:11:36 +0000 (UTC)
To: =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>,
	"Michael S . Tsirkin" <mst@redhat.com>
References: <20181207170400.5129-1-philmd@redhat.com>
	<20181207170400.5129-7-philmd@redhat.com>
From: Laszlo Ersek <lersek@redhat.com>
Message-ID: <22bb9367-f39a-c13b-8b0d-22c622a59433@redhat.com>
Date: Mon, 10 Dec 2018 18:11:35 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
	Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181207170400.5129-7-philmd@redhat.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Mon, 10 Dec 2018 17:11:47 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 6/6] hw/nvram/fw_cfg: Add
 fw_cfg_add_file_from_host()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Igor Mammedov <imammedo@redhat.com>, Gerd Hoffmann <kraxel@redhat.com>,
	qemu-devel@nongnu.org, Eduardo Habkost <ehabkost@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/07/18 18:04, Philippe Mathieu-Daud=C3=A9 wrote:
> Add a function to read the full content of file on the host, and add
> a new 'file' name item to the fw_cfg device.
>=20
> Signed-off-by: Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com>
> ---
>  hw/nvram/fw_cfg.c         | 22 ++++++++++++++++++++++
>  include/hw/nvram/fw_cfg.h | 22 ++++++++++++++++++++++
>  2 files changed, 44 insertions(+)
>=20
> diff --git a/hw/nvram/fw_cfg.c b/hw/nvram/fw_cfg.c
> index 50525ec1dd..f3232fcb16 100644
> --- a/hw/nvram/fw_cfg.c
> +++ b/hw/nvram/fw_cfg.c
> @@ -842,6 +842,28 @@ void fw_cfg_add_file(FWCfgState *s,  const char *f=
ilename,
>      fw_cfg_add_file_callback(s, filename, NULL, NULL, NULL, data, len,=
 true);
>  }
> =20
> +void *fw_cfg_add_file_from_host(FWCfgState *s, const char *filename,
> +                                const char *host_path, size_t *len)
> +{
> +    GError *gerr =3D NULL;
> +    gchar *ptr =3D NULL;
> +    gsize contents_len =3D 0;
> +
> +
> +    if (g_file_get_contents(host_path, &ptr, &contents_len, &gerr)) {
> +        fw_cfg_add_file(s, filename, ptr, contents_len);

Can you rename "ptr" to "data" or "contents"?

> +    } else {
> +        error_report("failed to read file %s, %s", host_path, gerr->me=
ssage);

OK... most functions in this file that populate fw_cfg and can fail
(from external data) still use error_report() + a NULL retval, so this
looks consistent.

> +        g_error_free(gerr);
> +        return NULL;
> +    }
> +    if (len) {
> +        *len =3D contents_len;
> +    }
> +
> +    return ptr;
> +}
> +
>  void *fw_cfg_modify_file(FWCfgState *s, const char *filename,
>                          void *data, size_t len)
>  {
> diff --git a/include/hw/nvram/fw_cfg.h b/include/hw/nvram/fw_cfg.h
> index 28630b2f26..8de8d63433 100644
> --- a/include/hw/nvram/fw_cfg.h
> +++ b/include/hw/nvram/fw_cfg.h
> @@ -166,6 +166,28 @@ void fw_cfg_add_i64(FWCfgState *s, uint16_t key, u=
int64_t value);
>  void fw_cfg_add_file(FWCfgState *s, const char *filename, void *data,
>                       size_t len);
> =20
> +/**
> + * fw_cfg_add_file_from_host:
> + * @s: fw_cfg device being modified
> + * @filename: name of new fw_cfg file item
> + * @host_path: path of the host file to read the data from
> + * @len: pointer to hold the length of the host file (optional)
> + *
> + * Read the content of a host file as a raw "blob" then add a new NAME=
D
> + * fw_cfg item of the file size. If @len is provided, it will contains=
 the

s/will contains/will contain/

> + * total length read from the host file. The data referenced by the st=
arting
> + * pointer is only linked, NOT copied, into the data structure of the =
fw_cfg
> + * device.

Please drop the last sentence; it does not apply here. There is no
starting pointer passed to this function.

... Should we perhaps replace the last sentence by stating that the data
read from the host filesystem is owned by the new fw_cfg entry?

> + * The next available (unused) selector key starting at FW_CFG_FILE_FI=
RST
> + * will be used; also, a new entry will be added to the file directory
> + * structure residing at key value FW_CFG_FILE_DIR, containing the ite=
m name,
> + * data size, and assigned selector key value.
> + *
> + * Returns: pointer to the file content, or NULL if an error occured.
> + */
> +void *fw_cfg_add_file_from_host(FWCfgState *s, const char *filename,
> +                                const char *host_path, size_t *len);
> +
>  /**
>   * fw_cfg_add_file_callback:
>   * @s: fw_cfg device being modified
>=20

Hmmmm. If you do return the pointer to the data just read, directly
exposing the allocation address to the caller, then we could in theory
make this new interface consistent with the rest, and make the *caller*
own the data. Then the currently proposed documentation would be sort-of
accurate (the new fw_cfg entry would not own the data just read -- the
caller would). It's hard to divine what's the best approach here,
without seeing any call sites.

... Purely from a consistency POV, I think I'm slightly attracted to
make the fw_cfg reference again a non-owning one, and force the caller
of fw_cfg_add_file_from_host() to own the data read.

Thanks
Laszlo

