Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 22 Nov 2018 00:34:47 -0000
Received: from icoremail.net (unknown [209.85.214.176])
	by mail-app4 (Coremail) with SMTP id cS_KCgC3f5mfrfVblILoAQ--.108S3;
	Thu, 22 Nov 2018 03:10:25 +0800 (CST)
Received: from mail-pl1-f176.google.com (unknown [209.85.214.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3W0edrfVbfuhkAA--.3648S3;
	Thu, 22 Nov 2018 03:10:21 +0800 (CST)
Received: by mail-pl1-f176.google.com with SMTP id gn14so6812483plb.10
        for <xuliker@zju.edu.cn>; Wed, 21 Nov 2018 11:10:21 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent:sender:precedence
         :list-id;
        bh=Dr+sppTQXohOziejuX8HT89y4LqsC65C+0T4Dph7Mwc=;
        b=ZFErw4MuWTipfrmrpDLH3BmXNpHVGfJJnyn5FEkOH9tGh55iZjDbIzcF9sAOPP0rob
         Z35UdVx6GOsi5WKd3iWGEfHT4LGkbN747j9o+L0cr3dcydSUdkc7Qj8KRv/p9P3tE2sJ
         sTw4xQxG1NvOMJfkfgKpgV/tFobCDJNsvI40Ub46YeDJ4qiwc+38BSSDmBaMmCnugOk0
         jTgl1zmOgyAqog4cAcDGu0Ki+VGdT1EnmqCLb9upjhwY4pdH7LEjV4lrFCaWtnv3pci3
         KrZFw7zFRXt5p9ItapNm8U46nOGzBUr4CP+zF+Z0jMUzAmAZ44Ejwxf2sJ99y1yujlR5
         gddw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
X-Gm-Message-State: AGRZ1gJeAe8zEYbHG+UUtsjOeUlRsYo9PTd8SGefLGvooVEBnuMtDb1L
	buZI8LyZ2PThQsmJFIgMoCc5Weynjort36aCMt1TxtLHNSPsCFg=
X-Received: by 2002:a62:2b17:: with SMTP id r23-v6mr8266322pfr.251.1542827420883;
        Wed, 21 Nov 2018 11:10:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp2353862pju;
        Wed, 21 Nov 2018 11:10:15 -0800 (PST)
X-Google-Smtp-Source: AJdET5cZ3SkiCybv0ewrGLoaWGOSJVskVbTmdEcseYPeXCMa+ntgifqqBf5xmFgUZ0OvoRLruBuc
X-Received: by 2002:a62:7f94:: with SMTP id a142mr8152424pfd.96.1542827415083;
        Wed, 21 Nov 2018 11:10:15 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542827415; cv=none;
        d=google.com; s=arc-20160816;
        b=wI70RExfKDkGzZMzqacsMfFvm+8Bf71wan3PkUpAxZp3pIWBneFjLn0sdQq7d+tVYI
         +J9TreiLFKR8xO0SDXgVJRTZQoVFHQDRh4BMJp15IGJZdz6vRsf9KzW7gTqId8HTozBq
         xIPGwPSq6w19fNXxyLVRUhk7+3wGJzhPvW9j/27+3yerBT+J9KxrL9Yn0qfdoMTSWLp7
         4v3X5SpyLKkPFfO4OXy3lbZvwM79ckPgmMfoL9cHjdUimRDAy4LmIVL2jBdgA4uIY/XI
         YGELNREkP7kdDtUcxRbc2lpjMD0mxzGGIRt3B0p8a1BscvJ0vdOTBGrfRo5OcS9BOkUG
         iofw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date;
        bh=Dr+sppTQXohOziejuX8HT89y4LqsC65C+0T4Dph7Mwc=;
        b=ek9Wm9HuSu/KWd3YI7btyGq7/9TeuPJvxJKjuZpjDpPI7xzl30zmISpKu3Kg4NUDDJ
         Yspx4nnWmY0a4q2DjhmExPjSa0AatFeTEjZPA52SaFMjWxQJHxEd2MgbtOGDtcVteWr1
         USeK90dS2XvT85BV7rNNYP2aFvxtns+eVut4ZUSdfZgD0/DlYRBCOrUKU1v81ZczlzXv
         G8TCxg9dqdhXkG07n6vVOPml9ixFB4ZqpkPrtgP0lM58HyiGYHApMIU55Rki0PVk6p4y
         tKE64RLnJkAOxQTI9dPIhnv61kMlnD2yhqkoyARUCaDy27zPEju8cYCyWyADoyDy+DDx
         3Gow==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id t9si35138214plz.427.2018.11.21.11.09.24;
        Wed, 21 Nov 2018 11:10:15 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732293AbeKVEGp (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Wed, 21 Nov 2018 23:06:45 -0500
Received: from mx2.suse.de ([195.135.220.15]:47122 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1729285AbeKVEGp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 23:06:45 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 3A9CFB005;
        Wed, 21 Nov 2018 17:31:25 +0000 (UTC)
Date: Wed, 21 Nov 2018 18:31:23 +0100
From: Michal Hocko <mhocko@kernel.org>
To: Hugh Dickins <hughd@google.com>
Cc: Baoquan He <bhe@redhat.com>, Vlastimil Babka <vbabka@suse.cz>,
        David Hildenbrand <david@redhat.com>, linux-mm@kvack.org,
        pifang@redhat.com, linux-kernel@vger.kernel.org,
        akpm@linux-foundation.org, aarcange@redhat.com,
        Mel Gorman <mgorman@suse.de>
Subject: Re: Memory hotplug softlock issue
Message-ID: <20181121173123.GS12932@dhcp22.suse.cz>
References: <20181116091409.GD14706@dhcp22.suse.cz>
 <20181119105202.GE18471@MiWiFi-R3L-srv>
 <20181119124033.GJ22247@dhcp22.suse.cz>
 <20181119125121.GK22247@dhcp22.suse.cz>
 <20181119141016.GO22247@dhcp22.suse.cz>
 <20181119173312.GV22247@dhcp22.suse.cz>
 <alpine.LSU.2.11.1811191215290.15640@eggly.anvils>
 <20181119205907.GW22247@dhcp22.suse.cz>
 <20181120015644.GA5727@MiWiFi-R3L-srv>
 <alpine.LSU.2.11.1811192127130.2848@eggly.anvils>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <alpine.LSU.2.11.1811192127130.2848@eggly.anvils>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3W0edrfVbfuhkAA--.3648S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJF1xJry3Cw13uFWxKrW3Jrb_yoW5uw15pF
	WxGw13Kan7Jr1Sq3WxZw4kZ3WYgws3Jr43Jr95GrnrZa98XFn7Kr1Ikr4qvFWrCrs3JF4q
	qF42yas7A3Z8AFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW8Jr0_Cr1UM28EF7xvwVC2z280aVCY1x0267AKxVW8Jr0_Cr1UM2AIxVAIcx
	kEcVAq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v2
	6r106r15McIj6I8E87Iv67AKxVWUJVW8JwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64
	vIr41l7I0Y6sxI4wCY1x0264kExVAvwVAq07x20xylc2xSY4AK6IIF6rWlc2IjII80xcxE
	wVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6xIIjxv20xvEc7CjxVAFwI
	0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26F4j6r4UJwCYIxAIcVC2z280aVCY1x0267AKxVW8
	JVW8Jr1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I
	8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AK
	xVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI
	8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuYvjxUQ7DGDUUUU

On Mon 19-11-18 21:44:41, Hugh Dickins wrote:
[...]
> [PATCH] mm: put_and_wait_on_page_locked() while page is migrated
> 
> We have all assumed that it is essential to hold a page reference while
> waiting on a page lock: partly to guarantee that there is still a struct
> page when MEMORY_HOTREMOVE is configured, but also to protect against
> reuse of the struct page going to someone who then holds the page locked
> indefinitely, when the waiter can reasonably expect timely unlocking.

I would add the following for the "problem statement". Feel free to
reuse per your preference:
"
An elevated reference count, however, stands in the way of migration and
forces it to fail with a bad timing. This is especially a problem for
memory offlining which retries for ever (or until the operation is
terminated from userspace) because a heavy refault workload can trigger
essentially an endless loop of migration failures. Therefore
__migration_entry_wait is essentially harmful for the even it is waiting
for.
"

> But in fact, so long as wait_on_page_bit_common() does the put_page(),
> and is careful not to rely on struct page contents thereafter, there is
> no need to hold a reference to the page while waiting on it.  That does
> mean that this case cannot go back through the loop: but that's fine for
> the page migration case, and even if used more widely, is limited by the
> "Stop walking if it's locked" optimization in wake_page_function().

I would appreciate this would be more explicit about the existence of
the elevated-ref-count problem but it reduces it to a tiny time window
compared to the whole time the waiter is blocked. So a great
improvement.

> Add interface put_and_wait_on_page_locked() to do this, using negative
> value of the lock arg to wait_on_page_bit_common() to implement it.
> No interruptible or killable variant needed yet, but they might follow:
> I have a vague notion that reporting -EINTR should take precedence over
> return from wait_on_page_bit_common() without knowing the page state,
> so arrange it accordingly - but that may be nothing but pedantic.
> 
> shrink_page_list()'s __ClearPageLocked(): that was a surprise!

and I can imagine a bad one. Do we really have to be so clever here?
The unlock_page went away in the name of performance (a978d6f521063)
and I would argue that this is a slow path where this is just not worth
it.

> this
> survived a lot of testing before that showed up.  It does raise the
> question: should is_page_cache_freeable() and __remove_mapping() now
> treat a PG_waiters page as if an extra reference were held?  Perhaps,
> but I don't think it matters much, since shrink_page_list() already
> had to win its trylock_page(), so waiters are not very common there: I
> noticed no difference when trying the bigger change, and it's surely not
> needed while put_and_wait_on_page_locked() is only for page migration.
> 
> Signed-off-by: Hugh Dickins <hughd@google.com>

The patch looks good to me - quite ugly but it doesn't make the existing
code much worse.

With the problem described Vlastimil fixed, feel free to add
Acked-by: Michal Hocko <mhocko@suse.com>

And thanks for a prompt patch. This is something I've been chasing for
quite some time. __migration_entry_wait came to my radar only recently
because this is an extremely volatile area.
-- 
Michal Hocko
SUSE Labs
