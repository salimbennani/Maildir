Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 21:10:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7E1995805F0;
	Tue, 18 Dec 2018 04:36:50 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 04:36:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AMZCTmBOn/+wvmJQcp4wl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPjzrsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWTJPAo28?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyDJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj6O6MSXvquzKnUzDXDavJW2TPg44XVaB8uuvKMUqhtesfW10kgDBnKgU6T?=
 =?us-ascii?q?qYP/JD6VzfkNs3OF4OZ6Se2uincqpgdsqTas3schkpfFip4Rx1ze6Cl0zpg5Kc?=
 =?us-ascii?q?elREN4fdKoCppduiOCO4drRs4vQ3tktDs0x7AGo5K3YjYGxIg9yxLBa/GKfI6F?=
 =?us-ascii?q?6Q/5WumLOzd3nndldaq/hxms9UigzfXxVte70FlUtCpJiNrMuW4X1xzV9MeHTu?=
 =?us-ascii?q?Fx/kC72TaAzwzT6+dELl4olafDNZIt3ro9moAOvUnNACP6glj6gayKekk+++Wl?=
 =?us-ascii?q?6fzrYrD8qZ+dM490hBv+MqMrmsGnBeQ4Mw4OX3WU+Oil173s41f5QLNUgf0yi6?=
 =?us-ascii?q?XZt57bJcIFqa6jGAJVzIkj5AilDzu809QXg2MHLFRbdxKDlYTpPEvOIP/gAfel?=
 =?us-ascii?q?n1usiCtrx+zBPrD5BpXNL3vDn6n7cbdy9k5R0w4zzdFZ55JJBbANOvPzWknttN?=
 =?us-ascii?q?PGCh81KRC7w+HiCN9lzIMRRXqPArOFMKPVqVKI5vggI+iQZIAPvzbxMfgl5+P0?=
 =?us-ascii?q?gn8/ll8QZq2p3ZoRaHClEfVqOUSZYXzwgtgfFWcGpBYxTOvviFeaSz5ce26yX7?=
 =?us-ascii?q?4g5jE8EI+mD4DDSZ63jLyC2ye7GJtWZmddB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cBv6O3IlREy8j90A96H026XTWF5hW?=
 =?us-ascii?q?cIRz4w3KBirk1x0FaD0a5kg/NGEdxf/e9GUgA/NZTE1ex1F8jyWh7dfteOUFum?=
 =?us-ascii?q?Qc+pATcrQtI1wt8BeUB9G9q5gxDH3iqqBaIVlrORCJw19KLcw2b+J8Jnx3na06?=
 =?us-ascii?q?khikEsQtFTOm2+mq5/6w/TCpbUnEqDiaala74Q3C7X+2eF1mqBokdYXAl0UaXG?=
 =?us-ascii?q?WHAfYlDbrdD45kPEUr+vBq4rMgpHyc6eNKRKbsflgklBRPfmIN7eeX6+m3+sBR?=
 =?us-ascii?q?aUwbOBdJfldH8D3CrDEkQEkxoc/XCdNQcgACesuGbeDD1oFVLybELg6+h+qHWn?=
 =?us-ascii?q?TkAqywGGdVFu172w+hQNn/yTV+sT3q4YuCcmszh0AFe939fRC9qcpwpgfL9QYc?=
 =?us-ascii?q?8n7FdAz2LZsw19PpqvL615gl4ecgJ3v17h1hltC4VAl9Qqo20uzAZoNa2Y11ZB?=
 =?us-ascii?q?fSuC3Z/sIr3XNnXy/Be3ZqHM3lHRztmX9bkP6fgisFrjoRymGVAk83Vk1NlVzW?=
 =?us-ascii?q?CR5pHLDAoUTJLwXVw79xl8p7HGfCY945nY2mFrMamxqjXCwc4mBPM5yha8eNdS?=
 =?us-ascii?q?KKOFFBLoH8IGHcSvKewqlEKvbhILJ+1S8K80P8W7d/qJwqKrPeBgnC64gmRD+o?=
 =?us-ascii?q?xyzkWM9y9kQO7Sw5kF2+2Y3heAVzrkllehs9z4lppeZT4PGWqz0y7kC5BLZq1z?=
 =?us-ascii?q?ZIoEFX2hI8mqydpgnZ7tXHhY+UWnB1MH3s+pZBWTY0b83Q1WyUQYv3inlTGkwD?=
 =?us-ascii?q?xzljEjtrCf0zDWw+T+aBoHPXZGRWljjVv2IYm4lcsaXFWubwUykBul5ED6x7VU?=
 =?us-ascii?q?pahlLmnTR1tIcDbyL214TqSwsb+CadZV6Jw0qSVXTPi8YVeCR77/uRQaySDjH2?=
 =?us-ascii?q?hZxDwhbDGloJb5nx97iGKbMnlzqmHUecVxxRfZ+dzdSuRd3jsARClklzbXAkKw?=
 =?us-ascii?q?MMWu/dWRj53DqPyxV3q9Vp1Pdinm1YOBuzG85WFwAx2/nvazl8bjEQg71y/7yt?=
 =?us-ascii?q?ZrWT/JrBb6fonkyaC6Pfh7cUlvAV/289B6FZ1mkossmJEQ3mAXhpaP8noGi2vz?=
 =?us-ascii?q?Mchb1rj4bHoCXjMLx9/V4A742ExsNH6JxoT5VmmDzctlfdW1fmQW2icl5cBQFK?=
 =?us-ascii?q?iU9KBEnTdyolegqALRYPt9kS0Hxfog9nEamP0JtxQ3ziqGHL8SB0ZYMDfolxSJ?=
 =?us-ascii?q?6dC+sapWaHyucbi2yEpxg9ShAKuerQFbXXbzYo0iEjNo7sVjLFLM12X+6p3jeN?=
 =?us-ascii?q?nVd94StwebkxHdj+hOM5Ixl+EHhS5mOWL7oH0kxPQ3jR1o3ZGmooeHL39h876+?=
 =?us-ascii?q?Ah5dLjf1fd8c+inxjaZCmcabx5ugEY9mGjUPQZvkV/aoEC8JuPTjNgaOFiA8q3?=
 =?us-ascii?q?iBFbreGw+f9Flpr3bVH5+3MHGXIWETzc9+SxmFOExfnAcUUS04npEjEwCl2tfh?=
 =?us-ascii?q?fF1l5jwL5V74txhMyv9uNxblSWfSvwOoajYySJiCIxta9ABC50HJMcOA6uJ/BT?=
 =?us-ascii?q?1X/pqkrAaVMGyUexxIDX0VWkyDH13iPr6u5cTZ8+iFHOW+KeHCYa6JqexYWPeF?=
 =?us-ascii?q?3pav0opg/zaROcSDJHhiD/sn2kVdWXB1AdjWmzIKSyYPjSLCc9abpAug+i1wts?=
 =?us-ascii?q?2/8OrkWAPs5YuMCrteK9Zv+wqxgaeMKeGQnjt5KS1D25MIxH/IzqUf3VEIhyFv?=
 =?us-ascii?q?cTmtDaoPtSrXQK3Mna9XCgYRazlvO8tQ86I8wg5NNNbBhdPozbF4lOA6CldfWV?=
 =?us-ascii?q?zlm8GkfsgKI2C7NFPaC0eHLrWGJTvXw87pZaOwU6FfjOJRtxeoozaUD1fjPiif?=
 =?us-ascii?q?lznuTx2vLeBMjCSBMBNCoo2ybhZtBnblTN/9bh27Mdl3jSA5wLEuh3PKM3IcPi?=
 =?us-ascii?q?Z4c09XsrKQ6iZYiO1lG2Nd9nplMfWEmyGB4ujYMJkWt/5rAiVyl+1C4XU6y6Fa?=
 =?us-ascii?q?7CdLRPFunCvSr9huo0ypk+WVyzpnVgZOpShPhI6RoUpiPqDZpdF8XiPh8RZFwm?=
 =?us-ascii?q?KKDh0M749gBdr1vqlW4sTCn6LoKTFN7tbd58oAFo7SJd7RdDIFMBz0CHvxKUNR?=
 =?us-ascii?q?ST+tKHGagkl1k++b/X7TqYI1/MvCgp0LH4FfXUcpF/YbDgxPFdYBKd8jQDktm7?=
 =?us-ascii?q?2SpNUV/nf4pwuHF5YShYzOSv/HWaanEz2el7QRIkJQmb4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BuAQCk6Bhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N8lBKBYAglFJk3LxMBh2EiOBIBAwEBAQEBAQIBEwEBAQoLCQgpL4I?=
 =?us-ascii?q?2JAGCYQEBAQECAQECIARSBQEJAQEKDgoCAhgHBwICA1QGAQwGAgEBAYMdgXkIB?=
 =?us-ascii?q?AGnTXwzhUCDHIFagQuLNBeBQD+BOAyCX4RKgz+CVwKJIoIZhF6RCwmKUocIBhi?=
 =?us-ascii?q?KAodViUSSDIF3MxoIMIMnglCODD8ygQUBAYsmgk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0BuAQCk6Bhch0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N8lBK?=
 =?us-ascii?q?BYAglFJk3LxMBh2EiOBIBAwEBAQEBAQIBEwEBAQoLCQgpL4I2JAGCYQEBAQECA?=
 =?us-ascii?q?QECIARSBQEJAQEKDgoCAhgHBwICA1QGAQwGAgEBAYMdgXkIBAGnTXwzhUCDHIF?=
 =?us-ascii?q?agQuLNBeBQD+BOAyCX4RKgz+CVwKJIoIZhF6RCwmKUocIBhiKAodViUSSDIF3M?=
 =?us-ascii?q?xoIMIMnglCODD8ygQUBAYsmgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="55620321"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 04:36:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726592AbeLRMgp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 07:36:45 -0500
Received: from mx2.suse.de ([195.135.220.15]:33524 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726419AbeLRMgp (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 07:36:45 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 5C7A9B03A;
        Tue, 18 Dec 2018 12:36:43 +0000 (UTC)
Subject: Re: [PATCH 09/14] mm, compaction: Ignore the fragmentation avoidance
 boost for isolation and compaction
To: Mel Gorman <mgorman@techsingularity.net>,
        Linux-MM <linux-mm@kvack.org>
Cc: David Rientjes <rientjes@google.com>,
        Andrea Arcangeli <aarcange@redhat.com>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Michal Hocko <mhocko@kernel.org>, ying.huang@intel.com,
        kirill@shutemov.name, Andrew Morton <akpm@linux-foundation.org>,
        Linux List Kernel Mailing <linux-kernel@vger.kernel.org>
References: <20181214230310.572-1-mgorman@techsingularity.net>
 <20181214230310.572-10-mgorman@techsingularity.net>
From: Vlastimil Babka <vbabka@suse.cz>
Openpgp: preference=signencrypt
Message-ID: <f8aeec16-65de-b873-3362-3c7cb30c4ac6@suse.cz>
Date: Tue, 18 Dec 2018 13:36:42 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <20181214230310.572-10-mgorman@techsingularity.net>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/15/18 12:03 AM, Mel Gorman wrote:
> When pageblocks get fragmented, watermarks are artifically boosted to pages
> are reclaimed to avoid further fragmentation events. However, compaction
> is often either fragmentation-neutral or moving movable pages away from
> unmovable/reclaimable pages. As the actual watermarks are preserved,
> allow compaction to ignore the boost factor.

Right, I should have realized that when reviewing the boost patch. I
think it would be useful to do the same change in
__compaction_suitable() as well. Compaction has its own "gap".

> 1-socket thpscale
>                                     4.20.0-rc6             4.20.0-rc6
>                                finishscan-v1r4           noboost-v1r4
> Amean     fault-both-1         0.00 (   0.00%)        0.00 *   0.00%*
> Amean     fault-both-3      3849.90 (   0.00%)     3753.53 (   2.50%)
> Amean     fault-both-5      5054.13 (   0.00%)     5396.32 (  -6.77%)
> Amean     fault-both-7      7061.77 (   0.00%)     7393.46 (  -4.70%)
> Amean     fault-both-12    11560.59 (   0.00%)    12155.50 (  -5.15%)
> Amean     fault-both-18    16120.15 (   0.00%)    16445.96 (  -2.02%)
> Amean     fault-both-24    19804.31 (   0.00%)    20465.03 (  -3.34%)
> Amean     fault-both-30    25018.73 (   0.00%)    20813.54 *  16.81%*
> Amean     fault-both-32    24380.19 (   0.00%)    22384.02 (   8.19%)
> 
> The impact on the scan rates is a mixed bag because this patch is very
> sensitive to timing and whether the boost was active or not. However,
> detailed tracing indicated that failure of migration due to a premature
> ENOMEM triggered by watermark checks were eliminated.
> 
> Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
> ---
>  mm/page_alloc.c | 2 +-
>  1 file changed, 1 insertion(+), 1 deletion(-)
> 
> diff --git a/mm/page_alloc.c b/mm/page_alloc.c
> index 80535cd55a92..c7b80e62bfd9 100644
> --- a/mm/page_alloc.c
> +++ b/mm/page_alloc.c
> @@ -3043,7 +3043,7 @@ int __isolate_free_page(struct page *page, unsigned int order)
>  		 * watermark, because we already know our high-order page
>  		 * exists.
>  		 */
> -		watermark = min_wmark_pages(zone) + (1UL << order);
> +		watermark = zone->_watermark[WMARK_MIN] + (1UL << order);
>  		if (!zone_watermark_ok(zone, 0, watermark, 0, ALLOC_CMA))
>  			return 0;
>  
> 

