Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 07:58:45 -0000
Received: from icoremail.net (unknown [209.85.210.176])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnXyetY_Nbl8XbAQ--.38977S3;
	Tue, 20 Nov 2018 09:30:22 +0800 (CST)
Received: from mail-pf1-f176.google.com (unknown [209.85.210.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD320eqY_NbaTJbAA--.17574S3;
	Tue, 20 Nov 2018 09:30:18 +0800 (CST)
Received: by mail-pf1-f176.google.com with SMTP id c72so154815pfc.6
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 17:30:18 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=V3m6gtQ1iRlWcRSMq0w2qWBRsEA6IUH9wDb9KBQbc1w=;
        b=M8PI7zHjgt3j8RWNBCkgax1ttSqXXw36DBj1pgcOK9oB2MSy3DfyppEnqyUZf1sOua
         01wRa6pyjlHCJrEmNXGvbwhCVsaK0ovMoTu1bWCN1Qz/KgcZMVaVEpIvdVPT39blt4yA
         EZnZWwcnLqyZcfwwTBAL++s5PS6JyeEtpG2+yR768n0x9LFnYzRbwa43NeO2c9MscPpt
         VfeMgHT1z6j2WjM1WP0qtDbqJrrTnaWsfdw927PNnoHSr7go7YdWLUk+3GBU3aJLY5c5
         1EJl2IMoM7JvGvK5iAtqF/vAIS8ogZ0MBXvWNnuagGU956yGdeTcSXVP+XMcGApqm+wQ
         BaYA==
X-Gm-Message-State: AA+aEWZ+BtJ1EdINYdxrRTS1/DmbDQBh4Fad+WSKKYR6nCJFucd3EbpU
	rIxwC/sHbQ/p3mcc7bMDjkv2vvRdNEcMPfl5I+9LTfnGF2zbhqM=
X-Received: by 2002:a63:f615:: with SMTP id m21mr47905pgh.428.1542677418457;
        Mon, 19 Nov 2018 17:30:18 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3421597pju;
        Mon, 19 Nov 2018 17:30:17 -0800 (PST)
X-Google-Smtp-Source: AJdET5eZLZ9mkTB5RrkKRGja73+aQsjllTfJfnyFXJGFhYpxJGPpI65DJh/ZBywJFvUbUdDuqKMu
X-Received: by 2002:a62:4886:: with SMTP id q6mr65828pfi.182.1542677417519;
        Mon, 19 Nov 2018 17:30:17 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542677417; cv=none;
        d=google.com; s=arc-20160816;
        b=nBfor6SFK+7XbnSBUkrxt6QAq81kGXvwsw8iX4UqkF4/pgiUl+DrSW6JUKBI0P01IZ
         /ZFSFLWML+vnsErUPhKTpf5xCTMkc91mb3LPvcVf6uF8d/c3Jz5sLWVZU38tzeGwpB1P
         WmwHj7Fg5TXxQd8ANCT3rsrPBmpLfoiSITZYfR/jlCS5fvgI8RylohN5D89Pp3zM4ug/
         wg7duL9XtJAL0e0fgWSSnQkIMh3b0rYBMn/ZL99MASQUOEA5ckE3R5ZhvrDmkLVnsF+h
         fC6EaAOycF+9fT0e1DQk3MXII9RvyWaR+ZI34GuLm8nz6hLN/QwR2hZwy8UHil1p4TOP
         gVtg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=V3m6gtQ1iRlWcRSMq0w2qWBRsEA6IUH9wDb9KBQbc1w=;
        b=cgeSxt0YEYnoB7Y/7jqG58JmdV0ERQw0J7Nf5A1+UYQEbbJjCR18in5oNx10t/48w8
         TcLBe0r0V2XTIaJ9sfnwVABgxlepbtjmPdzpmtl8H7aAH6woBaLzLu/ERZ0Smzeko5TH
         vzXG5G0AVAb9YEj3Nk/OBeHurH9PfDanrq/j83f/Ngr5+dDIVZBv4BC3oD9iF28B+bW8
         YlhtIHhLvpwZurGJ7HMjv4O/XdxSeqj1u9MLKlN1YlcoAjPQANkMXXVB+fr6n7E4ke7U
         YQqvt8x6oo64IG1CuO0oR0OzduBNRNOH/Ov00fcFiGVhhiD367OS9Th+GJfyIq4Xakmj
         RVww==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=RQ22EFOG;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id y2si38635678pgl.148.2018.11.19.17.30.01;
        Mon, 19 Nov 2018 17:30:17 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730288AbeKTL41 (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 06:56:27 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:35121 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726119AbeKTL41 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 06:56:27 -0500
Received: by mail-it1-f196.google.com with SMTP id v11so1148548itj.0
        for <linux-kernel@vger.kernel.org>; Mon, 19 Nov 2018 17:29:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=V3m6gtQ1iRlWcRSMq0w2qWBRsEA6IUH9wDb9KBQbc1w=;
        b=RQ22EFOGMlzy4jAQwMHeVgHN7RcelmsF4D/OEYzl1jUdfCnv/tHR60j/BG//zRs98L
         pd1d+KQNo0EiNOINb1Ilr5Euvl0AQTVgjMu8ERtKiWyVDIYkl/1KWRpbucUnuS10OeH0
         lTHSwR5vWBO2LhvbjarXqFcliL8Yp7elGW9jccCK/TEhCPs2ihu47N6GgwQCHhgaZ7dU
         gdOzR8WcmCs9lhCFAQZIWgZWikJNmf1c1SAKjuO0TI3ntaoAzTnCkHfDfOH+DnBDr+hy
         Fb+2wtvVpEGhCEWTKfQ9iOCwELpsdCvTIcGyklVwIm8H4hSIy5wDVnx09/4IJm5RkueQ
         3Mog==
X-Received: by 2002:a24:55d4:: with SMTP id e203mr484324itb.36.1542677394424;
        Mon, 19 Nov 2018 17:29:54 -0800 (PST)
Received: from google.com ([2620:15c:183:0:a0c3:519e:9276:fc96])
        by smtp.gmail.com with ESMTPSA id p10-v6sm13209106ioh.20.2018.11.19.17.29.53
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 19 Nov 2018 17:29:53 -0800 (PST)
Date: Mon, 19 Nov 2018 18:29:50 -0700
From: Yu Zhao <yuzhao@google.com>
To: Hugh Dickins <hughd@google.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2] mm: fix swap offset when replacing shmem page
Message-ID: <20181120012950.GA94981@google.com>
References: <20181119004719.156411-1-yuzhao@google.com>
 <20181119010924.177177-1-yuzhao@google.com>
 <alpine.LSU.2.11.1811191343280.17359@eggly.anvils>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <alpine.LSU.2.11.1811191343280.17359@eggly.anvils>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD320eqY_NbaTJbAA--.17574S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF4fJF47Ary7tFyxXF48tFb_yoW5tr1kpr
	WDJFn8Kr4rAr9ayF4xXayvyr1fZw1fGayrA345K3WrZwnFqr10kF4Ikryq9a47ZrZ7A3yr
	tF4UtFn7uF4qyFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY02Av
	z4vEIxC_KwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Gr0_Xr1lcIIF0x
	vE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_GcCE3s1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r126r1DMIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOJ73PUU
	UUU==

On Mon, Nov 19, 2018 at 02:11:27PM -0800, Hugh Dickins wrote:
> On Sun, 18 Nov 2018, Yu Zhao wrote:
> 
> > We used to have a single swap address space with swp_entry_t.val
> > as its radix tree index. This is not the case anymore. Now Each
> > swp_type() has its own address space and should use swp_offset()
> > as radix tree index.
> > 
> > Signed-off-by: Yu Zhao <yuzhao@google.com>
> 
> This fix is a great find, thank you! But completely mis-described!

Yes, now I remember making swap offset as key was done long after per
swap device radix tree.

> And could you do a smaller patch, keeping swap_index, that can go to
> stable without getting into trouble with the recent xarrifications?
> 
> Fixes: bde05d1ccd51 ("shmem: replace page if mapping excludes its zone")
> Cc: stable@vger.kernel.org # 3.5+
> 
> Seems shmem_replace_page() has been wrong since the day I wrote it:
> good enough to work on swap "type" 0, which is all most people ever use
> (especially those few who need shmem_replace_page() at all), but broken
> once there are any non-0 swp_type bits set in the higher order bits.

But you did get it right when you wrote the function, which was before
the per swap device radix tree. so
Fixes: f6ab1f7f6b2d ("mm, swap: use offset of swap entry as key of swap cache")
looks good?

> > ---
> >  mm/shmem.c | 11 +++++++----
> >  1 file changed, 7 insertions(+), 4 deletions(-)
> > 
> > diff --git a/mm/shmem.c b/mm/shmem.c
> > index d44991ea5ed4..685faa3e0191 100644
> > --- a/mm/shmem.c
> > +++ b/mm/shmem.c
> > @@ -1509,11 +1509,13 @@ static int shmem_replace_page(struct page **pagep, gfp_t gfp,
> >  {
> >  	struct page *oldpage, *newpage;
> >  	struct address_space *swap_mapping;
> > -	pgoff_t swap_index;
> > +	swp_entry_t entry;
> 
> Please keep swap_index as well as adding entry.

Ack.

> >  	int error;
> >  
> > +	VM_BUG_ON(!PageSwapCache(*pagep));
> > +
> 
> I'd prefer you to drop that, it has no bearing on this patch;
> we used to have it, along with lots of other VM_BUG_ONs in here,
> but they outlived their usefulness, and don't need reintroducing -
> they didn't help at all to prevent the actual bug you've found.
> 
> >  	oldpage = *pagep;
> > -	swap_index = page_private(oldpage);
> > +	entry.val = page_private(oldpage);
> 
> entry.val = page_private(oldpage);
> swap_index = swp_offset(entry);
> 
> >  	swap_mapping = page_mapping(oldpage);
> >  
> >  	/*
> > @@ -1532,7 +1534,7 @@ static int shmem_replace_page(struct page **pagep, gfp_t gfp,
> >  	__SetPageLocked(newpage);
> >  	__SetPageSwapBacked(newpage);
> >  	SetPageUptodate(newpage);
> > -	set_page_private(newpage, swap_index);
> > +	set_page_private(newpage, entry.val);
> 
> Yes.
> 
> >  	SetPageSwapCache(newpage);
> >  
> >  	/*
> > @@ -1540,7 +1542,8 @@ static int shmem_replace_page(struct page **pagep, gfp_t gfp,
> >  	 * a nice clean interface for us to replace oldpage by newpage there.
> >  	 */
> >  	xa_lock_irq(&swap_mapping->i_pages);
> > -	error = shmem_replace_entry(swap_mapping, swap_index, oldpage, newpage);
> > +	error = shmem_replace_entry(swap_mapping, swp_offset(entry),
> > +				    oldpage, newpage);
> 
> I'd prefer to omit that hunk, to avoid the xa_lock_irq() in the context;
> the patch is just as good if we keep the swap_index variable.
> 
> >  	if (!error) {
> >  		__inc_node_page_state(newpage, NR_FILE_PAGES);
> >  		__dec_node_page_state(oldpage, NR_FILE_PAGES);
> > -- 
> > 2.19.1.1215.g8438c0b245-goog
> 
> Thanks,
> Hugh
