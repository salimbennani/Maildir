Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:41:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CE8BC58055F;
	Wed, 19 Dec 2018 09:38:05 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 09:38:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANv3MSxSnpDRIsGocTzoyBB0Iq9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64Zx2Gt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAeQCM+hfrYb9qVQBoxSlBQm0Bu7i0SNEi3zs0KEmyektDR3K0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8OX+CyyanH1zPDZO5X1zfg84jIcgwuofGNXbJ2bMHczkYvFx7fjlWX?=
 =?us-ascii?q?s4PlOSiY1usIs2eB7upgUfijhHIgqwF0uzWiwNonhIrRho8N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZhMuy2ANoZ7QNsuT39ptSok1rELvIO3cDQXx5ki2xHTd/iKf5SN?=
 =?us-ascii?q?7x79SOqdPTJ1iXdndb+6nBm97EatxfP6W8KpylhFtDBFncPJtn0V1xzc9MyHSv?=
 =?us-ascii?q?xl80e/1jaAyRrT5vtHIU8qj6rbLYAuwroqmpoUq0TDETf6mETwjKCIakUp4vak?=
 =?us-ascii?q?5/jjb7n8u5OROZF4hhvjPqkthsCzG+U1PwoWU2ie4+u81bnj/UPjQLVNi/07iq?=
 =?us-ascii?q?3ZsJHcJcQGqa+1GgxV3Zg56xa5ETim1M0UnX4JLVJDZh2HlZPkO0/BIP/mF/ez?=
 =?us-ascii?q?mVesnylxx/DAILLhBo/BLn/ZkLfuZbp98VJTyBIvzdBD4JJZErUBIPPwWkDvrt?=
 =?us-ascii?q?DZAQI5Pheww+bmDtV9y4wfVXiOAq+fLKPdr1uI6vgzLOmLYY8foCz9JOQ95/7y?=
 =?us-ascii?q?kX85nkcQfamz0psWdHC3BPNmL1+ZYXrxmNgBF2gKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbyLxD27EYFOZmBaFlCMFm/leJ+fW/cMbyKSIdVtkiYe?=
 =?us-ascii?q?WrijUIIh0RCutAnny7toNObU+ysYtY7929hx/eHciRYy9TlsBcSHz26NV310nn?=
 =?us-ascii?q?8PRzIu36Bwu0p9xk2H0ah5mfNYE9NT6uhNUgc7M57c0uN7B8rzWgLHYteGVlKm?=
 =?us-ascii?q?Ts+6DjE2S9I728UObFplG9W+khDD2DKnDKIPmLyVGpM46KLc0GL3J8Zm1XnG0q?=
 =?us-ascii?q?4tj10lQstKMW2rnap/9wnVB47UnESVjaeqdaIA3CHT8GeP13aBvEZdUARoS6XK?=
 =?us-ascii?q?QWgfZlfKrdT+/k7NUqWhCao5PQdbyc6NMK1Kasb3glVAX/rjPNXeY2Ssm2a/Hx?=
 =?us-ascii?q?qIx7WMbJb0dGUZxinSFE8EkwUL93acKQc+Hjuho37ZDDF2CVLvYkbs8e5iqHO7?=
 =?us-ascii?q?Tk441R2KY1dm17qv/h4VhPqcS/wI07IAuSchrSh0HVmn09LXDdqAuxRufKFGbd?=
 =?us-ascii?q?wh51dH0HrTtxZhMZy4M6BimlkefhxtsEPqyRp2BZtPkMgwoHwx0Qp9NLiX0FVC?=
 =?us-ascii?q?dzOfw5D9IbnXKmj0/BCyZK/awFDe0NCK+qgR7PQ0sUnsvAasFkA66XVoz8FV02?=
 =?us-ascii?q?eA5pXNFAcTUY/xXlwr+BRgprDaYjMy54Xb1XB3Nam0sznC288mBec/yxagectf?=
 =?us-ascii?q?P72AFAPoD8IaAM2uIvQwm1e1dhIEIPxS9KksMsO8dvuJxLSkPPx9kzKhl2hH5p?=
 =?us-ascii?q?5y0liN9yZlVuHHxZIFzOyG0QudUDf8ikysssT2mYBCeDETEXCzySniBI5NeKJy?=
 =?us-ascii?q?eZwHBnupI82y3t9+nYLiW2ZE9F6/AFMLwM+oeRuIY139xwFQzlkXoXq8lCu8zj?=
 =?us-ascii?q?x0lSwpr6WF0CzPxeTiaAQIOmpRSGZ+ilfsJJC+j8oGU0iwcwgpiByl6F74x6dB?=
 =?us-ascii?q?vqR/LGrTQUBScyjtNW5iUaiwtruEY8FR7pMlqiFXUOW6YVCHRb/xuRoa0yX/H2?=
 =?us-ascii?q?RAwDA3bS2lupL8nxZikmKSMG5zrGbFecF33Rre5MbTRflL0joERSl4jyLaBly9?=
 =?us-ascii?q?P9mv4NWVmI3PsuG4V2K9SJJTdTPnwp+HtCu+/WdqGwGwn+ivmt37Fgg3ySz72M?=
 =?us-ascii?q?NrVSnSrBb8f5Pk16K1Me98ekloBVn869d1G41kk4swgo0Q1mYehpmP4XUHlmLz?=
 =?us-ascii?q?O81B2a3idHoNWSILw9nN7Qjg2U1jLWiGy5j3V3qD2cthe8e1YnkN1S0j9cBKB7?=
 =?us-ascii?q?yZ7LhFnStzv1q5ohjdYfl7njcB1/Qu7GQWjP0OuAoo1i+dGKwdHVFEPSzwkBSF?=
 =?us-ascii?q?98y+rKJSZGq1cLm/zkx+nc26DLGZowFRQ3L5epYkHS9t4cRzKlPM0Hvv6o76fN?=
 =?us-ascii?q?ncd84cthqRkx3YlehaNIoxluYWhSpgIW/ypmcqy+k/jRxzx526uJWHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DED8mpX?=
 =?us-ascii?q?eeB7XfBhWT6Ft8o3LMDpCrNGyXJH8DwtV5XxSdIE1fgAYJXDQ1hJI5FwaqxND/?=
 =?us-ascii?q?f0d9/Dwe+ln4qh5UwOJyKxb/SnvfpBuvajosSJmfKwdW7hhf50jPN8yS9PlzHy?=
 =?us-ascii?q?Ze/p2utwGNLm2bZwJVDWAGQECEBlbjPqWw6tnE6eSXGu2+L/7Wa7WUteNeT+uI?=
 =?us-ascii?q?xY6o0oZ+/zaDKMSPPnphD/06wEZDXmp5G8PWmzoRUSwXijnNYtWfpBe9/C13s8?=
 =?us-ascii?q?++/O7qWALp+YuAFb9SPc9z9BCxhKeJL/SQizphKTZEypMMwmfFx6IC3FEJkSFh?=
 =?us-ascii?q?aTmsHa4EtS7MV6/Qnq5XDxgGayJ8LsdI7qQ83hVTNs7fkN/6yrl4jvstAVdfSV?=
 =?us-ascii?q?Phgt2pZdANI2ylKFPHBUOLOK6aKjHR3873Yb2zSbtLgeVQth2wvyubEkD5MjSC?=
 =?us-ascii?q?kTnpSw6gMeVWgC6HOxxevZm3cgxxBmj7UNLmdhq7Pcd3jDIsx700g3LKNWgEPj?=
 =?us-ascii?q?l9c0NCtLuQ7SxDj/V7GmxB6GdlLOaelyaY6enYNogZsf9xDitokOJa5Sdy97wA?=
 =?us-ascii?q?6CBCWewwnS76rcBnqFLglfOAmRR9Vx8bkDFOjYTDklh5Oa7Z958IDXnZ5hUE60?=
 =?us-ascii?q?2fDh0Lo51uDdi56PMY8cTGiK+mcGQKyNnT58ZJQpGMcM8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAAAmgRpch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBLYEOJ4wWi3xQAQEGgUmJDwNvjUiBcRUBARgTAYctIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkCwENARsdAQMCCQEBBUsDI?=
 =?us-ascii?q?BEBBQEcGQWDHYFpAQMIDQEEnFY8jBUWBQEXgncFhEEKGScNXoE3AgYSh2yDJYE?=
 =?us-ascii?q?cF3iBB4ERiGCFEgKJJSSHDZBeCZFWJIl3h2IsmS8GAgkHDyGBJYIOTSMVgyeCG?=
 =?us-ascii?q?wwXg0qKdB8ygQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0AcAAAmgRpch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BLYEOJ4wWi3xQAQEGgUmJDwNvjUiBcRUBARgTAYctIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYgMDAQIkCwENARsdAQMCCQEBBUsDIBEBBQEcGQWDHYF?=
 =?us-ascii?q?pAQMIDQEEnFY8jBUWBQEXgncFhEEKGScNXoE3AgYSh2yDJYEcF3iBB4ERiGCFE?=
 =?us-ascii?q?gKJJSSHDZBeCZFWJIl3h2IsmS8GAgkHDyGBJYIOTSMVgyeCGwwXg0qKdB8ygQU?=
 =?us-ascii?q?BAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="55843480"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 09:38:04 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730579AbeLSRiC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 12:38:02 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:52539 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728595AbeLSRiA (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 12:38:00 -0500
Received: by mail-it1-f196.google.com with SMTP id g76so10894147itg.2
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 09:38:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=UdqeJGh8eBs0Vxjdpc2lfQPUvzKGZN7048QD4f17sLA=;
        b=g24Jm02lTHisRulhMjdKrS2YpsweRYzgegnBG/62cvxcmiLNgIurArCftA5qWknRcr
         hoR88vnD4Exj2GKoEpY2VDrVeILyJ25fgFPGWiZggVZIFb9xM5geAPqzvRgGZtU3ABYH
         zSCKeesB9RTNLerkW83FhRA4AMaXqrotM7GKRx4p656dQa5Fwe8kew2r1IGLVWQJSLHU
         oLOgi0FK0FjsKNMd0R9LNqW++j8RloOlYkJeYXgNqwZ13Bue0/la6q8aJhjVqfPl/3aA
         ICZADCbALxPUGO6iclE+ADAmEVX5Vg7Yx57dbS1LIZPjPBPO7FsEl06kH79YYVp1hLyc
         ihvw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=UdqeJGh8eBs0Vxjdpc2lfQPUvzKGZN7048QD4f17sLA=;
        b=qrD2egL2zGfht7/Eh8vqk68i5MfRs6quOmsDr3MnxrbnPsYnxprO+ctUdY0B7yoU/s
         nqjM7wXpqOeu7NZGBHCRs48BWlJiU8xSau1D4sG+MvCJycJuLBLjbM4xbsOuXslDnlXV
         spBsXJiqpo3ej2L60pPLZmlsDA2M76FD8fYgOuRvyYYqwV7XpTomfWhTYmr0DcXkZnGg
         vaWM2nIPPWcFkl4jvZSQWpEe4SwgKmufIQzsTqY9hZLFlY9xieK+XRTFHlVw3x18awyT
         3zw9F01TmbrXXax69RAtkLAdICeAuMPI/QL1p9GX2oSpr33EVHm3NgruihBkyFbiIDba
         P4mw==
X-Gm-Message-State: AA+aEWaUu0WwANGJZGhqG80L0EVImARj7AazNXcqNqHLpwpIHFDR1DzS
        F9wKUs15nTyiT0tZUACNXvM=
X-Google-Smtp-Source: AFSGD/X/at+ZP0D1i56JW5Q0CfBhmDQagfdlxtZeCCXMZ2r09a82BkphuHqGE17Jaii2XvlGm4rCgQ==
X-Received: by 2002:a24:25ce:: with SMTP id g197mr7454854itg.61.1545241080179;
        Wed, 19 Dec 2018 09:38:00 -0800 (PST)
Received: from tower.thefacebook.com ([2620:10d:c090:200::7:bd3e])
        by smtp.gmail.com with ESMTPSA id a10sm3637728itc.3.2018.12.19.09.37.58
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 19 Dec 2018 09:37:59 -0800 (PST)
From: Roman Gushchin <guroan@gmail.com>
X-Google-Original-From: Roman Gushchin <guro@fb.com>
To: linux-mm@kvack.org
Cc: Matthew Wilcox <willy@infradead.org>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Michal Hocko <mhocko@suse.com>, linux-kernel@vger.kernel.org,
        kernel-team@fb.com, Roman Gushchin <guro@fb.com>
Subject: [PATCH 1/3] mm: refactor __vunmap() to avoid duplicated call to find_vm_area()
Date: Wed, 19 Dec 2018 09:37:49 -0800
Message-Id: <20181219173751.28056-2-guro@fb.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181219173751.28056-1-guro@fb.com>
References: <20181219173751.28056-1-guro@fb.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

__vunmap() calls find_vm_area() twice without an obvious reason:
first directly to get the area pointer, second indirectly by calling
remove_vm_area(), which is again searching for the area.

To remove this redundancy, let's split remove_vm_area() into
__remove_vm_area(struct vmap_area *), which performs the actual area
removal, and remove_vm_area(const void *addr) wrapper, which can
be used everywhere, where it has been used before.

On my test setup, I've got up to 12% speed up on vfree()'ing 1000000
of 4-pages vmalloc blocks.

Signed-off-by: Roman Gushchin <guro@fb.com>
Acked-by: Johannes Weiner <hannes@cmpxchg.org>
Reviewed-by: Matthew Wilcox <willy@infradead.org>
---
 mm/vmalloc.c | 47 +++++++++++++++++++++++++++--------------------
 1 file changed, 27 insertions(+), 20 deletions(-)

diff --git a/mm/vmalloc.c b/mm/vmalloc.c
index 871e41c55e23..7660e3ef4133 100644
--- a/mm/vmalloc.c
+++ b/mm/vmalloc.c
@@ -1462,6 +1462,24 @@ struct vm_struct *find_vm_area(const void *addr)
 	return NULL;
 }
 
+static struct vm_struct *__remove_vm_area(struct vmap_area *va)
+{
+	struct vm_struct *vm = va->vm;
+
+	might_sleep();
+
+	spin_lock(&vmap_area_lock);
+	va->vm = NULL;
+	va->flags &= ~VM_VM_AREA;
+	va->flags |= VM_LAZY_FREE;
+	spin_unlock(&vmap_area_lock);
+
+	kasan_free_shadow(vm);
+	free_unmap_vmap_area(va);
+
+	return vm;
+}
+
 /**
  *	remove_vm_area  -  find and remove a continuous kernel virtual area
  *	@addr:		base address
@@ -1472,31 +1490,20 @@ struct vm_struct *find_vm_area(const void *addr)
  */
 struct vm_struct *remove_vm_area(const void *addr)
 {
+	struct vm_struct *vm = NULL;
 	struct vmap_area *va;
 
-	might_sleep();
-
 	va = find_vmap_area((unsigned long)addr);
-	if (va && va->flags & VM_VM_AREA) {
-		struct vm_struct *vm = va->vm;
-
-		spin_lock(&vmap_area_lock);
-		va->vm = NULL;
-		va->flags &= ~VM_VM_AREA;
-		va->flags |= VM_LAZY_FREE;
-		spin_unlock(&vmap_area_lock);
-
-		kasan_free_shadow(vm);
-		free_unmap_vmap_area(va);
+	if (va && va->flags & VM_VM_AREA)
+		vm = __remove_vm_area(va);
 
-		return vm;
-	}
-	return NULL;
+	return vm;
 }
 
 static void __vunmap(const void *addr, int deallocate_pages)
 {
 	struct vm_struct *area;
+	struct vmap_area *va;
 
 	if (!addr)
 		return;
@@ -1505,17 +1512,18 @@ static void __vunmap(const void *addr, int deallocate_pages)
 			addr))
 		return;
 
-	area = find_vmap_area((unsigned long)addr)->vm;
-	if (unlikely(!area)) {
+	va = find_vmap_area((unsigned long)addr);
+	if (unlikely(!va || !va->vm)) {
 		WARN(1, KERN_ERR "Trying to vfree() nonexistent vm area (%p)\n",
 				addr);
 		return;
 	}
 
+	area = va->vm;
 	debug_check_no_locks_freed(area->addr, get_vm_area_size(area));
 	debug_check_no_obj_freed(area->addr, get_vm_area_size(area));
 
-	remove_vm_area(addr);
+	__remove_vm_area(va);
 	if (deallocate_pages) {
 		int i;
 
@@ -1530,7 +1538,6 @@ static void __vunmap(const void *addr, int deallocate_pages)
 	}
 
 	kfree(area);
-	return;
 }
 
 static inline void __vfree_deferred(const void *addr)
-- 
2.19.2

