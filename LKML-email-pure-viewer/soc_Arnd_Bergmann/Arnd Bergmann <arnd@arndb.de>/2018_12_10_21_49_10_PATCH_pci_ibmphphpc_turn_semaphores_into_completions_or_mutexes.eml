Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:44:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BA3C65807A2;
	Mon, 10 Dec 2018 13:50:15 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 13:50:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ae2AvcBInMiNfCXN8h9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv/9rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIAOUPMv1Yr5H/qlYVsRezBhOhCP/1xzNUmnP727Ax3eQ7EQHB2QwtB84DsG?=
 =?us-ascii?q?7SrNroKawfTP66zLPHzTXGdfxW3zH945XPfx87u/GMW69/fNHLxkk1EQPKk06f?=
 =?us-ascii?q?pZb4MDyLz+kAtXWQ4el4Ve+3lWIrtwV8riKyysoilIXFnJ8Zx1PY+SljwYs4J8?=
 =?us-ascii?q?W0RFNnbdOgCpdcqiWXO5VsTs4tXm1kojs2x7kJtJO9YSME0o4oxwTFZPyCa4WI?=
 =?us-ascii?q?4gzsVOKWITpgmnJld6ywhwyo/Uij1OL8TM+030hOriZfldnMrH8N2wTS6siBVP?=
 =?us-ascii?q?R94l+s1SiT2w3X8O1IPE45mbTBJ5I8wbM8ioAfvEXBEyPunUX5lq6WdkEq+uiy?=
 =?us-ascii?q?7OTnZ63rppudN49ylwH/Pb0ims+hDuQiNAgBQWyb9f271Lzt+032Xq9Kg+Yokq?=
 =?us-ascii?q?nWrp/aP94Xpq2nDA9P1IYs9RK/Ay2h0NQCknkLNEhFdw6fj4j1J1HOJ+j1DfO+?=
 =?us-ascii?q?g1Svjjhn3f/HPqD6D5XJL3jDlqrhfLln505dzgoz0c5Q55ZOBr4dJ/LzX1f7tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc191owEWGKPHrWWMKTIvV+I++IgOe+MZIAOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWAUT5UeXm+Ra?=
 =?us-ascii?q?E85jY9CIKgCofOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIsV5iDwL?=
 =?us-ascii?q?SaChS5M91RGprAL10aFnLurT+i0br57jzsJ65+/ImBE29Dx0Cdmd0m6XQ2F1mG?=
 =?us-ascii?q?MIWyE53KRlrUNhzVeD1LByg+ZEGtxL+/NJTgA6OIbfz+NgDdD+QAbBftaTR1ag?=
 =?us-ascii?q?TdWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QpX9FANXO4iaJl9wjcHYjJk16HmKascqgc2C3N9GKHzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYJhfydTvMT2a4EuCchqjluAFaxxdXWC8CEpwpgeqVcbs?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?bymX3ZTuNbzYNGbz/AqjZLXL2l7DytmW/KQP6PMmq1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svz7CxtIlHvcqxgyhftdf?=
 =?us-ascii?q?KqyEEgDyHtYeB8ivLuwqhleoYggFPOBU6K47Iceme+Ga166sOeZqhCimgnhf4I?=
 =?us-ascii?q?BhzkKM8DJxSvTJ35kZ2f6YxBaIVzDmgFenrM/3g4FEaSgOEWWlzSjrGZBeZrd1?=
 =?us-ascii?q?fYYNEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?Bzkzwxrquf3TbCwuT4eBocJ25LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe8xP54kysSVUU+S8ZkqWSqXnrBsZ0CPjHm?=
 =?us-ascii?q?1eyy49dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpbDqO++UHitVp9ScSnt1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk6Mp1AIB+npEwhJENw3cagJqV8GEDkWfy?=
 =?us-ascii?q?N9VbxK3/YGAMRT4N397a/gzl1Fd/IXKOwoLzTm+dzdd5Z9mmfmMW3Tow78VLCK?=
 =?us-ascii?q?eX9rNIhyV0rUSjrQLNf/d9hCwSxuU06H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhZpciGipw4t9+MV3W1n3z95rkeM?=
 =?us-ascii?q?LRbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOzLufcwT/TXtjbtEksaSwoCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQZz89tRByDK0xEmgwUQC82np0kFgCp2czh?=
 =?us-ascii?q?dl125isK6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSNK2ycegRIFHwJVVaCB1z5Jbmu4t/A8+eDC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXly3Tbs6bpxS8+ixtos?=
 =?us-ascii?q?C86vTrXw3v6pWVC7tPKtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMUcT5zO9BS760i3ghBI8rbitLu2758j/41DUpFVF?=
 =?us-ascii?q?P7lsGoY8wKP3+yNFfdCEmXM7SGICXBw9vrbqOkVb1QkOJUugWsuTaaFk/vJCiM?=
 =?us-ascii?q?myP1WBCvL+5MijqWPBhfuIG7bxZsBnLvTNPgah2nLtB3iSc6zqEzhnPPLWQcKy?=
 =?us-ascii?q?Rzc1tRrr2M6iNVmvV+FHZH7npgLOmEnT6W7ujYKpkMt/trDT95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiA1JyrWNhhoWRuw1CNKHW/5BbESLO/B8J4m?=
 =?us-ascii?q?yZEDwFoNxqDtCpsKdVnIvhjqX2fR5Y9d6c18YGCM3dLsTPZHM7NxbBESTSAAFD?=
 =?us-ascii?q?QTP9ZjKXvFBUjPzHri7dlZM9sJW53cNWErI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A9AABl3g5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2snmkSXUYFfLBMBh20iNwYNAQMBAQEBAQECARMBAQEIDQkIKS+?=
 =?us-ascii?q?CNiQBgmkCLwFGBgkCGCYSAzogEwWDHIICBAGnWYorh3KELxc+gUGDDIYAhXMCi?=
 =?us-ascii?q?TmBcIQUkTgJgRWBEI8fCxhgiRGHSwEsmmCBeE0kFIMngicXjh4/MoEEAQEBjBw?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0A9AABl3g5ch0O0hNFkHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?nmkSXUYFfLBMBh20iNwYNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmkCLwFGB?=
 =?us-ascii?q?gkCGCYSAzogEwWDHIICBAGnWYorh3KELxc+gUGDDIYAhXMCiTmBcIQUkTgJgRW?=
 =?us-ascii?q?BEI8fCxhgiRGHSwEsmmCBeE0kFIMngicXjh4/MoEEAQEBjBwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55325833"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 13:50:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728727AbeLJVuK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 16:50:10 -0500
Received: from mout.kundenserver.de ([217.72.192.75]:37385 "EHLO
        mout.kundenserver.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726392AbeLJVuK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 16:50:10 -0500
Received: from wuerfel.lan ([109.192.41.194]) by mrelayeu.kundenserver.de
 (mreue108 [212.227.15.145]) with ESMTPA (Nemesis) id
 1Mg6i8-1h63FD1cP0-00hb38; Mon, 10 Dec 2018 22:49:57 +0100
From: Arnd Bergmann <arnd@arndb.de>
To: Bjorn Helgaas <bhelgaas@google.com>
Cc: Arnd Bergmann <arnd@arndb.de>,
        "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>,
        Lukas Wunner <lukas@wunner.de>,
        Andy Shevchenko <andy.shevchenko@gmail.com>,
        Tyrel Datwyler <tyreld@linux.vnet.ibm.com>,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH] pci: ibmphp_hpc: turn semaphores into completions or mutexes
Date: Mon, 10 Dec 2018 22:49:10 +0100
Message-Id: <20181210214955.1826522-1-arnd@arndb.de>
X-Mailer: git-send-email 2.20.0
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Provags-ID: V03:K1:qhve+nZpkFnqRZRfGZVu9wzsBEgdK1F2PWrbJbyJ3XpojC+cco0
 V80XYv4X5dfRUpzMMckq+FB/pPHzOGzsnBVtE2tzwVZCPysus5SIHvqbVe1vW1b23afkheR
 POlXgF87a9EjHrzd3BzNITPKQQgjf/FzTyvyiZtw8TSMTdz07aTa4TjWjf2ApgdJAgPf7k5
 evMPrA2/j7aULWqc9GMLw==
X-Spam-Flag: NO
X-UI-Out-Filterresults: notjunk:1;V03:K0:edl0Oj4NHg0=:OgJmciwDIzp20J2h6R+Mnc
 PYXPnRVEISUN1oF3Kh7JbpYeDxC8i2AjPmTQL2MwCJ8wNdsvChC/8ER97pYqnxJWZQMlnHato
 YT0nNREFpzAtl4OmW+ok4T6g0cAciZG2tHxVbuk+QqC1XiIh25Bfcw0dyOjg5+KmlZIawN7Mq
 jCo0h/qFpXMeLzrqQCpGc6xbzcgsCfJ796Yf6RO06hfWDdlPTUzJnS3r920HehAM/kXhNYEk/
 Cl5bw+qY+Z1+fIoTySLd2vQ8T3BXwzaucf4skDUOFwY8sJkacQij393VEbncRNNI4OFYA4yxW
 ikroMD/Mw7GSeQAlkadyZA1ezWpFKMlTqdu9lZn58IT6pyX4RfCXFUJcbpxb852bS52HFQ1B9
 DrZwb0wMIPk65nSMEDCA1AlZTrnzZrMkGvN6vUHa5hUSfI7GGFhg6h4+nRM1UMMehSLuL+zHL
 Wos/4RUxEpsr9o5veTOaSp4914F8izmjRQJo59I7F6fB8aFmGR6EvvaQyHXu2/FPsLLn6JiBv
 nKibCaKufexCT5+IHm+o54v/M+cm5uUuAipYLYTRbudCpHrvUUKGryJcrCAgBO0LRbZWGgrT6
 yfkG2yPmSMcbYnLT3ibkiAG73dORPHWwXOxF1/VQlyfbXkemFCoVbj8NfYvEhWvuhFtzrgjo1
 uqZl3cMbnwa6DG5d85NLM/sERCC96gECM+Ir33BV5Mzam1XgTLT0K1khISfcPnzZeBqLD7xkM
 PNPGRyHI7QycP4S+dttNiJJj4Z9xGs6qZy+Z2A==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The sem_exit variable is conceptually a completion, so it should
be called that.

Similarly, the semOperations semaphore is a simple mutex, and
can be changed into that, respectively.

With both converted, the ibmphp_hpc_initvars() function is no longer
used and can be removed.

Signed-off-by: Arnd Bergmann <arnd@arndb.de>
---
 drivers/pci/hotplug/ibmphp.h      |  1 -
 drivers/pci/hotplug/ibmphp_core.c |  2 --
 drivers/pci/hotplug/ibmphp_hpc.c  | 47 +++++++++----------------------
 3 files changed, 14 insertions(+), 36 deletions(-)

diff --git a/drivers/pci/hotplug/ibmphp.h b/drivers/pci/hotplug/ibmphp.h
index b89f850c3a4e..e90a4ebf6550 100644
--- a/drivers/pci/hotplug/ibmphp.h
+++ b/drivers/pci/hotplug/ibmphp.h
@@ -378,7 +378,6 @@ int ibmphp_add_pfmem_from_mem(struct resource_node *);
 struct bus_node *ibmphp_find_res_bus(u8);
 void ibmphp_print_test(void);	/* for debugging purposes */
 
-void ibmphp_hpc_initvars(void);
 int ibmphp_hpc_readslot(struct slot *, u8, u8 *);
 int ibmphp_hpc_writeslot(struct slot *, u8);
 void ibmphp_lock_operations(void);
diff --git a/drivers/pci/hotplug/ibmphp_core.c b/drivers/pci/hotplug/ibmphp_core.c
index 5752b57198e3..e04b17d81e38 100644
--- a/drivers/pci/hotplug/ibmphp_core.c
+++ b/drivers/pci/hotplug/ibmphp_core.c
@@ -1312,8 +1312,6 @@ static int __init ibmphp_init(void)
 
 	ibmphp_debug = debug;
 
-	ibmphp_hpc_initvars();
-
 	for (i = 0; i < 16; i++)
 		irqs[i] = 0;
 
diff --git a/drivers/pci/hotplug/ibmphp_hpc.c b/drivers/pci/hotplug/ibmphp_hpc.c
index 752c384cbd4c..508a62a6b5f9 100644
--- a/drivers/pci/hotplug/ibmphp_hpc.c
+++ b/drivers/pci/hotplug/ibmphp_hpc.c
@@ -15,13 +15,13 @@
 
 #include <linux/wait.h>
 #include <linux/time.h>
+#include <linux/completion.h>
 #include <linux/delay.h>
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/init.h>
 #include <linux/mutex.h>
 #include <linux/sched.h>
-#include <linux/semaphore.h>
 #include <linux/kthread.h>
 #include "ibmphp.h"
 
@@ -88,10 +88,10 @@ static int to_debug = 0;
 //----------------------------------------------------------------------------
 // global variables
 //----------------------------------------------------------------------------
-static struct mutex sem_hpcaccess;	// lock access to HPC
-static struct semaphore semOperations;	// lock all operations and
+static DEFINE_MUTEX(sem_hpcaccess);	// lock access to HPC
+static DEFINE_MUTEX(operations_mutex);	// lock all operations and
 					// access to data structures
-static struct semaphore sem_exit;	// make sure polling thread goes away
+static DECLARE_COMPLETION(exit_complete); // make sure polling thread goes away
 static struct task_struct *ibmphp_poll_thread;
 //----------------------------------------------------------------------------
 // local function prototypes
@@ -109,23 +109,6 @@ static int hpc_wait_ctlr_notworking(int, struct controller *, void __iomem *, u8
 //----------------------------------------------------------------------------
 
 
-/*----------------------------------------------------------------------
-* Name:    ibmphp_hpc_initvars
-*
-* Action:  initialize semaphores and variables
-*---------------------------------------------------------------------*/
-void __init ibmphp_hpc_initvars(void)
-{
-	debug("%s - Entry\n", __func__);
-
-	mutex_init(&sem_hpcaccess);
-	sema_init(&semOperations, 1);
-	sema_init(&sem_exit, 0);
-	to_debug = 0;
-
-	debug("%s - Exit\n", __func__);
-}
-
 /*----------------------------------------------------------------------
 * Name:    i2c_ctrl_read
 *
@@ -780,7 +763,7 @@ void free_hpc_access(void)
 *---------------------------------------------------------------------*/
 void ibmphp_lock_operations(void)
 {
-	down(&semOperations);
+	mutex_lock(&operations_mutex);
 	to_debug = 1;
 }
 
@@ -790,7 +773,7 @@ void ibmphp_lock_operations(void)
 void ibmphp_unlock_operations(void)
 {
 	debug("%s - Entry\n", __func__);
-	up(&semOperations);
+	mutex_unlock(&operations_mutex);
 	to_debug = 0;
 	debug("%s - Exit\n", __func__);
 }
@@ -816,7 +799,7 @@ static int poll_hpc(void *data)
 
 	while (!kthread_should_stop()) {
 		/* try to get the lock to do some kind of hardware access */
-		down(&semOperations);
+		mutex_lock(&operations_mutex);
 
 		switch (poll_state) {
 		case POLL_LATCH_REGISTER:
@@ -871,13 +854,13 @@ static int poll_hpc(void *data)
 			break;
 		case POLL_SLEEP:
 			/* don't sleep with a lock on the hardware */
-			up(&semOperations);
+			mutex_unlock(&operations_mutex);
 			msleep(POLL_INTERVAL_SEC * 1000);
 
 			if (kthread_should_stop())
 				goto out_sleep;
 
-			down(&semOperations);
+			mutex_lock(&operations_mutex);
 
 			if (poll_count >= POLL_LATCH_CNT) {
 				poll_count = 0;
@@ -887,12 +870,12 @@ static int poll_hpc(void *data)
 			break;
 		}
 		/* give up the hardware semaphore */
-		up(&semOperations);
+		mutex_unlock(&operations_mutex);
 		/* sleep for a short time just for good measure */
 out_sleep:
 		msleep(100);
 	}
-	up(&sem_exit);
+	complete(&exit_complete);
 	debug("%s - Exit\n", __func__);
 	return 0;
 }
@@ -1060,9 +1043,9 @@ void __exit ibmphp_hpc_stop_poll_thread(void)
 	debug("after locking operations\n");
 
 	// wait for poll thread to exit
-	debug("before sem_exit down\n");
-	down(&sem_exit);
-	debug("after sem_exit down\n");
+	debug("before exit_complete down\n");
+	wait_for_completion(&exit_complete);
+	debug("after exit_completion down\n");
 
 	// cleanup
 	debug("before free_hpc_access\n");
@@ -1070,8 +1053,6 @@ void __exit ibmphp_hpc_stop_poll_thread(void)
 	debug("after free_hpc_access\n");
 	ibmphp_unlock_operations();
 	debug("after unlock operations\n");
-	up(&sem_exit);
-	debug("after sem exit up\n");
 
 	debug("%s - Exit\n", __func__);
 }
-- 
2.20.0

