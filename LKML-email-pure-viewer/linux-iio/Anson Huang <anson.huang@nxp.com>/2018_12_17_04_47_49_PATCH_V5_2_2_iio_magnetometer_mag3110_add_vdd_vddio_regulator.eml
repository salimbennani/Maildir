Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 14:06:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A84225805E2;
	Sun, 16 Dec 2018 20:48:02 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 20:48:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvYRazhbQr+uAbi5eKt9oS17/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpM64Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYsTAeQPPuhYoIv6qVsPsRSwCgajBPj3yjJKnXL2wbQ63v49HQzcwAAsAtQDu2?=
 =?us-ascii?q?nUotXvM6cSVPi4wbXOzTXYaPNW3yr25orVch87p/GMUq97fM3LxkkpDAPFiVOQ?=
 =?us-ascii?q?pZblPzOIzOsNtWeb4vFmVeOgk24rsR1+oj+qxso1jITCm4Ebykjc+Cln3Io4Ic?=
 =?us-ascii?q?e0RFN1bNK6CpdcqiKXO5dsTs4jQWxkoDs2xqACtJKhciUG1Y4rywPdZvGIaYSF?=
 =?us-ascii?q?4xPuWP6fIThmh39pZLeyihOo/ke9xO3xVcy50FhFoydBj9bBs20C2ALI5cWIT/?=
 =?us-ascii?q?Zw/kSs2TiS2A3V9+pKO1o7lbDBJJ4k2rMwloQcsUDEHiLuhkX2g7GZdl8+9uir?=
 =?us-ascii?q?9evneLPmqYGYN4NujQH+KKsultS+AeQ+LAcOQ3CW9fqg2LDn50H1XbtHguMsnq?=
 =?us-ascii?q?XEs53WOd4Xq6+7DgNN14Ys8Re/DzOo0NQCmnkHKUpIeBaGj4jvJlHPL+n0DfSh?=
 =?us-ascii?q?jFS2ljdk2fTGMqTmApTDKHjMjq3hcK1j605T1gUz18pT55FKBbEbJvL8REvxuM?=
 =?us-ascii?q?bfDh8jPAy42/znB8ll1oMCRWKPBbeUMKfTsV+L+O0jOeaNZJIOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWCUTFJZnayQ7?=
 =?us-ascii?q?gz5jYhBIKmEIfMXIatgLOa0Se/H51WYH1GC1+WHXfpcYWER+kDaCaILsB9lTwE?=
 =?us-ascii?q?UKCrS5U92hG2qA/6171nI/LW+i0fq53vztt15+rVlRE08jx5FMCd02CLT2FpkW?=
 =?us-ascii?q?IEXT423KZjoUNjzlePy7R3g/tdFdZL/fNGTh86NYLAz+x9E939QBnBfteOSFal?=
 =?us-ascii?q?WNmmGys+TtAqzt8KYkZ9Hciijx/Z0yqrBb8Vi6KEBJgu/q3A2HjxIt53y2za26?=
 =?us-ascii?q?k5k1kmXsxPOHWlhqFl8QjfHYrJk0SDmKaseqQRxyrN9GaFzWqTs0BUSg9wUaPZ?=
 =?us-ascii?q?XX8BYkvat8j25kTHT7W2E7QoLhNBydKeKqtNctDmkE9JROn9N9jEY2K+gWGwBQ?=
 =?us-ascii?q?2WybOKa4bqf2Yd3CDZCEUflwAT/HCGNRUxByu7omLeCiBuGkzrY0/27eZ+r3a7?=
 =?us-ascii?q?RFcuzw6Wd01hy6a1+hkNiPOBUfwTwKwLtD0hqzpuGla9xMzZC9ybqgplfaVcZ8?=
 =?us-ascii?q?494Vhd2WLYsQx9IoKvL6R4ilECdAR3ulvk1w9rBYVYjcgqsHQqwRJuKaKZ1VNB?=
 =?us-ascii?q?cC+Y3ZDwO7HNNmn+5heva7TS2lHf1taW9bwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzWdjMa2qvT7Nxd0oBPEpxQ29f9hC?=
 =?us-ascii?q?KqyEEgzyE8oEB8W1LOwqml6pbg8LPexI9a40Od+meOWC2KKxIOlgmzemh3xd4I?=
 =?us-ascii?q?9hykKM6zZ8SunQ0pcF3vGUxBeIWy39jVehqM/3n49EaCoWHmq+zyjkGYFQardz?=
 =?us-ascii?q?fYYNFWehPcm3ys9iiJ7qXn5S7ESjCE8e2M+1ZRqSaETw3RdR1UsLu3Ongza3zz?=
 =?us-ascii?q?tunzEvsKWfxi3Oz/3+exUdPm5EWXdtjU3rIYiylN0aWEmobw40lBqq/0r6xq5b?=
 =?us-ascii?q?pLhhIGnXW0tHYy/2L2R6WKuqqrWCe9JP6I8vsShPUOW8YEqWS77nrxsBziPjGX?=
 =?us-ascii?q?BTxDQ6dzGsp5X4kAZ2iGObLHZvsnXZfdt8ygvY5NzZXfRRxCYJRDFkiTnLAVix?=
 =?us-ascii?q?J9up8s+Ol5fAseC+UHitVoZJfinozoOAtS276nNsARCkm/Czm9vnERU10CPh1t?=
 =?us-ascii?q?lqUznIowj4YoXxy6u6NudndFFyBFDg88p6Bp1+kowoiZAQw3cagY+Z/XgGkWf1?=
 =?us-ascii?q?Kthb3aP+bHwQRT8E2dLV4Q7l2FF9IXKN3Y72SnKdws55bdmgfmwWwj4979xNCK?=
 =?us-ascii?q?qM77xLhyp1rkC4rQLMe/d9mDgdxOAq6H4bheEJpQUswj+cArAUAUlXIyjsmw6U?=
 =?us-ascii?q?4NC5qaVdfHyvfqSo1EpigdChC6mPogRdWHb6YJguByFx4dtkMFLQznLz8Jrrd8?=
 =?us-ascii?q?fKbdIcrRCUlxbAj+5IKJM+jPYKhCxnOX7jsn0h0eI0kRtu3ZSitoidN2pt5L65?=
 =?us-ascii?q?AgJfNjDte8MT/TTtgbxfn8mM2YCvA45hGi4KXJbzSfKoETQStenoNgqUET08rG?=
 =?us-ascii?q?ubFqTbHQOF9EhmqHfPGYixN36LPHkZ0cliRB6FKUNEmg8UWzE6noMjGgCu2czs?=
 =?us-ascii?q?a0N55jEX5l7lpRpA0ONoNx/jUmjBoAekcCs7SJ+aLBBO9AFN+1/VMdCC7uJ0By?=
 =?us-ascii?q?xY/IeurAmTJWyAfQhIEXsFWk+ZB1DgI7mu48PP8/ODC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXliLKcs6bvQq89Tdxrs?=
 =?us-ascii?q?yl6/TrXwTv5YSUBrtWMNVv/Q22gKiZO+6RgiZ5NShX1pcWyXDUz7gf2UYYizty?=
 =?us-ascii?q?eDm1DbQAqSnNQbrQmqBJDh4baCBzNMpS46I/xAlNPsHbhc3v1r5llf44EFNFVV?=
 =?us-ascii?q?3nmsG0as0GOWC9NFXbBEmVMLSKPyHEw8byYamkU71fkP1UtwGsuTacC0LsJCmD?=
 =?us-ascii?q?mCLzVx+xMeBAliWbPB1FtYG5cxZtD3XjTd38Zh26Nt93kSM5wbkuinzWMm4cNC?=
 =?us-ascii?q?B2c1lRob2I8SNYnvJ/FnRd7npkKOmIgTqW4/PEJZYWr/RrBD95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiSBBOsCpEhJqXvUV+PqXU7plBVmzC/BII7G?=
 =?us-ascii?q?WQDQwFptplCtL1vaBQxcPClKbyKDdE7tLV8tEQB8nSKMKbLnUhNQDlFyLTDAsA?=
 =?us-ascii?q?HnaXMjSVhU1Wyqq69XCPqJU+7J/2l9BGHr1aXwZuPvAXEEJoGJoFOpghGntukr?=
 =?us-ascii?q?iShcULo3qWoxzBAslX9NiTVfSbCP7sbjaxgrxUIRcFl/ewZ4AaLJbT3kF+Y1d9?=
 =?us-ascii?q?m8LGFgCYCdREuDZJawIoqUtK9z5yQzt3kwj9bw6g+mA7Dfu5kwQpzA1zfa5loC?=
 =?us-ascii?q?/p7lotOXLSoSY9ilZ3n9j513TZOiT2JqfzUZ1+CCfusUU1dJThTEw9ORe1l0wn?=
 =?us-ascii?q?OCvsRL9LibZkM2dxh1mY8dFKEORfC7dZfBsZw/2/bu8tl19br2/vkUpO/+iDE4?=
 =?us-ascii?q?Z+kAIsfbaltXcG0AVmOpp9b6vUJbRIw0IWg6WfpSau/vsthgQZIgxFpGSWeTAJ?=
 =?us-ascii?q?tVZOM743PCOu1vdwrweFnm0HMCIJXuEsr+Ng3kQ7IPiJ0yPn1fhEME/7f7iaJr?=
 =?us-ascii?q?iftnnKvcmOWU85ykIPkQ9C57cglY9peVCTUEYuwZOSGg4POM6ELhtaJYIG/mLU?=
 =?us-ascii?q?eiCPvM3OzIhzMoH7EfrnG6vG/r4ZjkuMFRYkGZgN54IaE9PkhFnVIc7PJa4Izw?=
 =?us-ascii?q?ks7ULwKQPBRL5TZAiGizYLr+myyJJ8wZNaIzgSR256NGO++/yf8hU2mveYXds6?=
 =?us-ascii?q?SnoeU4AYLHUzUcL8kClc+X1dWn3/mOYYzhWSqj79oQzOAzTmKdlufvGZYVVrEt?=
 =?us-ascii?q?78sWE78q6rmRvW85L2OW73L5Jht8XJ5OdcoIyIXbccB7VwrUbXlpVCSnGCTWHC?=
 =?us-ascii?q?C5i2KoL2Zo1qasb7QD7uXlGhijk4U938Mf6zIaWSxwLlX4BZtM+cxj91cYf3Ej?=
 =?us-ascii?q?AYBgc1pOwZ4q94TRMMboB9YhPysQk6caulL03QhtGvRXu9bDhbVf9Syc2kaLFN?=
 =?us-ascii?q?iSkhdOm3zD0nVJ5si6H9/0MWWJwUhxT2yvOqZo0YWi/2UDQJdQjUuScnnm1JOe?=
 =?us-ascii?q?M7w+N5yxTN5x1UeSiRee1lQGFAstogH1SXKHowAW09AVaBx8KX+hSh3rw68i9Q?=
 =?us-ascii?q?lMpO1uhMvz71uZqZaS/6C4KxrpCAmiw7at5ug7B4N4OrdsKAr5TY2DzCRZ/fmg?=
 =?us-ascii?q?uVSGixEP8MyYsYGz5RXPQdwTJtAscBo4cUrBNpDso=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AsAQC/KRdch0O0hNFkgheBMVCBXAQLJ?=
 =?us-ascii?q?wqHOQOPekqCIZdEFIFfEwEYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwy?=
 =?us-ascii?q?CNiQBgmIDAwECJBkBATcBBQkBAQEBTgMvJQIEAQ0FBYMdggABAQICnBECigqBb?=
 =?us-ascii?q?DOCdgEBBYEEAQGGEgiHfYRBgVc/gRGHVyCFe4k6hluBCY99BwKCJASPNBaRUok?=
 =?us-ascii?q?8jG+DEgIEAgQFAg0BAQWBRoIOMxojgzyCUIM4ihwBNnKBBQEBIYwvAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0AsAQC/KRdch0O0hNFkgheBMVCBXAQLJwqHOQOPekqCIZd?=
 =?us-ascii?q?EFIFfEwEYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmIDAwECJ?=
 =?us-ascii?q?BkBATcBBQkBAQEBTgMvJQIEAQ0FBYMdggABAQICnBECigqBbDOCdgEBBYEEAQG?=
 =?us-ascii?q?GEgiHfYRBgVc/gRGHVyCFe4k6hluBCY99BwKCJASPNBaRUok8jG+DEgIEAgQFA?=
 =?us-ascii?q?g0BAQWBRoIOMxojgzyCUIM4ihwBNnKBBQEBIYwvAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,364,1539673200"; 
   d="scan'208";a="56152459"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 16 Dec 2018 20:48:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731506AbeLQErx (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 23:47:53 -0500
Received: from mail-eopbgr00086.outbound.protection.outlook.com ([40.107.0.86]:62722
        "EHLO EUR02-AM5-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726318AbeLQErx (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 23:47:53 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=kNm4RnV+zl/5wzKObQa9uQrxpz5i+W2tM/VRsNexTo8=;
 b=Ll43saOlG1Rn3crsEcYVNVtmFhEFh7nlMHYF+/XMpLJL4M3WhlSEDLFuDIHOeTheSDJqP/nCgyO/mpslnNc1M9kc7AfTJfIW6Jw8paAAElZQ7xqVYDhVzrTiy7+PqjPl01JqVXOoLFVH7ml5GO/s8SolKgVnj9QyiVrTwACwhZU=
Received: from DB3PR0402MB3916.eurprd04.prod.outlook.com (52.134.72.18) by
 DB3PR0402MB3721.eurprd04.prod.outlook.com (52.134.67.141) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Mon, 17 Dec 2018 04:47:49 +0000
Received: from DB3PR0402MB3916.eurprd04.prod.outlook.com
 ([fe80::adf8:f49d:deb4:58fd]) by DB3PR0402MB3916.eurprd04.prod.outlook.com
 ([fe80::adf8:f49d:deb4:58fd%3]) with mapi id 15.20.1425.021; Mon, 17 Dec 2018
 04:47:49 +0000
From: Anson Huang <anson.huang@nxp.com>
To: "jic23@kernel.org" <jic23@kernel.org>,
        "knaack.h@gmx.de" <knaack.h@gmx.de>,
        "lars@metafoo.de" <lars@metafoo.de>,
        "pmeerw@pmeerw.net" <pmeerw@pmeerw.net>,
        "robh+dt@kernel.org" <robh+dt@kernel.org>,
        "mark.rutland@arm.com" <mark.rutland@arm.com>,
        "olivier.moysan@st.com" <olivier.moysan@st.com>,
        "masneyb@onstation.org" <masneyb@onstation.org>,
        "broonie@kernel.org" <broonie@kernel.org>,
        "peda@axentia.se" <peda@axentia.se>,
        "rtresidd@electromag.com.au" <rtresidd@electromag.com.au>,
        "linux-iio@vger.kernel.org" <linux-iio@vger.kernel.org>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "festevam@gmail.com" <festevam@gmail.com>,
        "preid@electromag.com.au" <preid@electromag.com.au>
CC: dl-linux-imx <linux-imx@nxp.com>
Subject: [PATCH V5 2/2] iio: magnetometer: mag3110: add vdd/vddio regulator
 operation support
Thread-Topic: [PATCH V5 2/2] iio: magnetometer: mag3110: add vdd/vddio
 regulator operation support
Thread-Index: AQHUlcOp9VjSnhNIRk+OC0KV2BawtQ==
Date: Mon, 17 Dec 2018 04:47:49 +0000
Message-ID: <1545021679-4025-2-git-send-email-Anson.Huang@nxp.com>
References: <1545021679-4025-1-git-send-email-Anson.Huang@nxp.com>
In-Reply-To: <1545021679-4025-1-git-send-email-Anson.Huang@nxp.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK2PR06CA0011.apcprd06.prod.outlook.com
 (2603:1096:202:2e::23) To DB3PR0402MB3916.eurprd04.prod.outlook.com
 (2603:10a6:8:10::18)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DB3PR0402MB3721;6:lxeNj9/56Yq6AQbt0OxCSSZoooxIAiUKz7AwTq9SjhmskXNwjgg0UDsem6b2pYtQm7Jqt4oTpaLcvmBVlOUkIJplFDOYaNM493haA0EUuF+6zdg62WyLtddY8ekNZMZLfao1+JTN0KSrUfXu9eJNy/hwa1FLyU0mydyWU1UFee+l/i5u6V1bcyALtbRYBHv8DkSHqIzDfXZKrqOLGwi1C4H8aNnZQK1RycpWJrQPW0RQLHEXjHwwuvSTYs8RqCVjaDMOiVD2hluLByNuJgns+rzLdDNZXRD5gCDNZzni6I661x+KgJ5RCgh3EaXpq3Ycwnw2kufC0nL4HJ5JxInoMORlF3UVILMjfYMrF16KfsUQAN/9fuJ4KCLEZrOYxMUlbKDi0U8TQ5duxEfsYPfMWx4SMKQJrbRL3upZd43l6G30f5lgxKHhz5JXJ+R4SkQjbQEYmD+wCBRJt2vdAPm7uA==;5:xFeq5XNU0Hkm9kDYouxW+MoVFaooieh8lw9Cssq2Nnw3Zund/sKZexlEyrotfrx1q7gpz8eSqE7uC1lqQHTxPcbbq+C8cg/26GTK2wJF4aXkrR4sq68OBAumTYKlPNxsJfO17vsT3a/4RXDgMhngJFGlQFOUbSyat7R8JFJIDt8=;7:En6eq6QDWded7U2Iz4cjD2BZ3oZzp4hYqSx4jk1yAsO1gb6UjDro3Hud2g9ulCfBu4k7SPn5jFxDl7R8w2bJ2DjshKsdPgxc3wm5Kzl0IUp9ua3rYUJsVrKIYb/uawhS74KPGVP3+5n46k5dkL5QDw==
x-ms-office365-filtering-correlation-id: 2db0ae84-9b20-467d-40df-08d663dacb89
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:DB3PR0402MB3721;
x-ms-traffictypediagnostic: DB3PR0402MB3721:
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=anson.huang@nxp.com; 
x-microsoft-antispam-prvs: <DB3PR0402MB3721E6D70FF534DC05AFB31FF5BC0@DB3PR0402MB3721.eurprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230021)(999002)(5005020)(6040522)(2401047)(8121501046)(3002001)(10201501046)(3231475)(944501520)(52105112)(93006095)(93001095)(6055026)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:DB3PR0402MB3721;BCL:0;PCL:0;RULEID:;SRVR:DB3PR0402MB3721;
x-forefront-prvs: 08897B549D
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(346002)(376002)(366004)(136003)(39860400002)(396003)(54534003)(189003)(199004)(97736004)(256004)(8676002)(39060400002)(81156014)(4326008)(6512007)(105586002)(53936002)(305945005)(7416002)(486006)(2501003)(476003)(106356001)(2616005)(478600001)(5660300001)(66066001)(71200400001)(11346002)(446003)(71190400001)(36756003)(76176011)(6116002)(3846002)(386003)(6506007)(7736002)(2906002)(50226002)(8936002)(25786009)(6436002)(52116002)(316002)(86362001)(6486002)(99286004)(68736007)(186003)(102836004)(14454004)(81166006)(26005)(14444005)(2201001)(110136005)(921003)(1121003);DIR:OUT;SFP:1101;SCL:1;SRVR:DB3PR0402MB3721;H:DB3PR0402MB3916.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: Ie5GHKnQpJ5rvegT8+C/BgfUfCnxq/rdBpfc24HOhkcC4oZqteN8830f2eDX+9Iudc74Pxl8O+sG01Ao51IC/qAcBgzhW+BSelLG2seyUodkzm4FERIMQYZyt3XAl/zEv/iidOQh+92nuERj3K4P6VDyzmr+fXyTRlWwv5jSZl/XX0+05MCf0Q0/QMkS8ALm+0Y7SrisORKaa06lpDjro4DgYRNzUnzQzF6a48njK5hcwxG5PNWUCZKwVNVW/UGGbLxHwZEm1ljxQnoiDsr5Ku9BWJ+3kcxKuAuOWM5tFAjQSMucnBFRB4/wX7zfmhw4
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 2db0ae84-9b20-467d-40df-08d663dacb89
X-MS-Exchange-CrossTenant-originalarrivaltime: 17 Dec 2018 04:47:49.3818
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DB3PR0402MB3721
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The magnetometer's power supplies could be controllable on some platforms,
such as i.MX6Q-SABRESD board, the mag3110's power supplies are controlled
by a GPIO fixed regulator, need to make sure the regulators are enabled
before any communication with mag3110, this patch adds vdd/vddio regulator
operation support.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
---
ChangeLog since V4:
    -  using devm_regulator_get() instead of devm_regulator_get_optional() =
since the regulator is
       there always, if dtb does NOT specify one, regulator framework will =
assign dummy regulator for it
---
 drivers/iio/magnetometer/mag3110.c | 92 ++++++++++++++++++++++++++++++++++=
----
 1 file changed, 84 insertions(+), 8 deletions(-)

diff --git a/drivers/iio/magnetometer/mag3110.c b/drivers/iio/magnetometer/=
mag3110.c
index f063355..32660ce 100644
--- a/drivers/iio/magnetometer/mag3110.c
+++ b/drivers/iio/magnetometer/mag3110.c
@@ -20,6 +20,7 @@
 #include <linux/iio/buffer.h>
 #include <linux/iio/triggered_buffer.h>
 #include <linux/delay.h>
+#include <linux/regulator/consumer.h>
=20
 #define MAG3110_STATUS 0x00
 #define MAG3110_OUT_X 0x01 /* MSB first */
@@ -56,6 +57,8 @@ struct mag3110_data {
 	struct mutex lock;
 	u8 ctrl_reg1;
 	int sleep_val;
+	struct regulator *vdd_reg;
+	struct regulator *vddio_reg;
 };
=20
 static int mag3110_request(struct mag3110_data *data)
@@ -469,17 +472,48 @@ static int mag3110_probe(struct i2c_client *client,
 	struct iio_dev *indio_dev;
 	int ret;
=20
-	ret =3D i2c_smbus_read_byte_data(client, MAG3110_WHO_AM_I);
-	if (ret < 0)
-		return ret;
-	if (ret !=3D MAG3110_DEVICE_ID)
-		return -ENODEV;
-
 	indio_dev =3D devm_iio_device_alloc(&client->dev, sizeof(*data));
 	if (!indio_dev)
 		return -ENOMEM;
=20
 	data =3D iio_priv(indio_dev);
+
+	data->vdd_reg =3D devm_regulator_get(&client->dev, "vdd");
+	if (IS_ERR(data->vdd_reg)) {
+		ret =3D PTR_ERR(data->vdd_reg);
+		if (ret !=3D -EPROBE_DEFER)
+			dev_err(&client->dev, "failed to get VDD regulator!\n");
+		return ret;
+	}
+
+	ret =3D regulator_enable(data->vdd_reg);
+	if (ret) {
+		dev_err(&client->dev, "failed to enable VDD regulator!\n");
+		return ret;
+	}
+
+	data->vddio_reg =3D devm_regulator_get(&client->dev, "vddio");
+	if (IS_ERR(data->vddio_reg)) {
+		ret =3D PTR_ERR(data->vddio_reg);
+		if (ret !=3D -EPROBE_DEFER)
+			dev_err(&client->dev, "failed to get VDDIO regulator!\n");
+		goto disable_regulator_vdd;
+	}
+
+	ret =3D regulator_enable(data->vddio_reg);
+	if (ret) {
+		dev_err(&client->dev, "failed to enable VDDIO regulator!\n");
+		goto disable_regulator_vdd;
+	}
+
+	ret =3D i2c_smbus_read_byte_data(client, MAG3110_WHO_AM_I);
+	if (ret < 0)
+		goto disable_regulators;
+	if (ret !=3D MAG3110_DEVICE_ID) {
+		ret =3D -ENODEV;
+		goto disable_regulators;
+	}
+
 	data->client =3D client;
 	mutex_init(&data->lock);
=20
@@ -499,7 +533,7 @@ static int mag3110_probe(struct i2c_client *client,
=20
 	ret =3D mag3110_change_config(data, MAG3110_CTRL_REG1, data->ctrl_reg1);
 	if (ret < 0)
-		return ret;
+		goto disable_regulators;
=20
 	ret =3D i2c_smbus_write_byte_data(client, MAG3110_CTRL_REG2,
 		MAG3110_CTRL_AUTO_MRST_EN);
@@ -520,16 +554,24 @@ static int mag3110_probe(struct i2c_client *client,
 	iio_triggered_buffer_cleanup(indio_dev);
 standby_on_error:
 	mag3110_standby(iio_priv(indio_dev));
+disable_regulators:
+	regulator_disable(data->vddio_reg);
+disable_regulator_vdd:
+	regulator_disable(data->vdd_reg);
+
 	return ret;
 }
=20
 static int mag3110_remove(struct i2c_client *client)
 {
 	struct iio_dev *indio_dev =3D i2c_get_clientdata(client);
+	struct mag3110_data *data =3D iio_priv(indio_dev);
=20
 	iio_device_unregister(indio_dev);
 	iio_triggered_buffer_cleanup(indio_dev);
 	mag3110_standby(iio_priv(indio_dev));
+	regulator_disable(data->vddio_reg);
+	regulator_disable(data->vdd_reg);
=20
 	return 0;
 }
@@ -537,14 +579,48 @@ static int mag3110_remove(struct i2c_client *client)
 #ifdef CONFIG_PM_SLEEP
 static int mag3110_suspend(struct device *dev)
 {
-	return mag3110_standby(iio_priv(i2c_get_clientdata(
+	struct mag3110_data *data =3D iio_priv(i2c_get_clientdata(
+		to_i2c_client(dev)));
+	int ret;
+
+	ret =3D mag3110_standby(iio_priv(i2c_get_clientdata(
 		to_i2c_client(dev))));
+	if (ret)
+		return ret;
+
+	ret =3D regulator_disable(data->vddio_reg);
+	if (ret) {
+		dev_err(dev, "failed to disable VDDIO regulator\n");
+		return ret;
+	}
+
+	ret =3D regulator_disable(data->vdd_reg);
+	if (ret) {
+		dev_err(dev, "failed to disable VDD regulator\n");
+		return ret;
+	}
+
+	return 0;
 }
=20
 static int mag3110_resume(struct device *dev)
 {
 	struct mag3110_data *data =3D iio_priv(i2c_get_clientdata(
 		to_i2c_client(dev)));
+	int ret;
+
+	ret =3D regulator_enable(data->vdd_reg);
+	if (ret) {
+		dev_err(dev, "failed to enable VDD regulator\n");
+		return ret;
+	}
+
+	ret =3D regulator_enable(data->vddio_reg);
+	if (ret) {
+		dev_err(dev, "failed to enable VDDIO regulator\n");
+		regulator_disable(data->vdd_reg);
+		return ret;
+	}
=20
 	return i2c_smbus_write_byte_data(data->client, MAG3110_CTRL_REG1,
 		data->ctrl_reg1);
--=20
2.7.4

