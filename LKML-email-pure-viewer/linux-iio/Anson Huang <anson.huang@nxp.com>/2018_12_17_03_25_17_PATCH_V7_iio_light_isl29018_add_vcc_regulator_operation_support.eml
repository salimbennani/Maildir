Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 14:06:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EAB795805FC;
	Sun, 16 Dec 2018 19:28:29 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 19:28:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIVzN3xOphDFL9naY7/cl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPT4oMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDIOg?=
 =?us-ascii?q?YYUBDO0PPedEoIfyqFQOtgO+CAu3CePz0z9FnGP60Lcm3+g8FwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KKESUfuyzKnO0D7Nbe5W1i376IjHbxsspuuDXbRrccrWz0kjDQPFjkiK?=
 =?us-ascii?q?pozjMDOYzeINsmeD7+Z6Se2vjGsnphh3rzOyxckskpHEipwJxl3A7yl13Yg4Kc?=
 =?us-ascii?q?OiREJmYtOoDIFcuiCYOoduX88uXmVltDw0x7Ebo5K3YSoHxZs9yxPeavGLa4aI?=
 =?us-ascii?q?7QzgWeqNJDp1gWhqd6+xhxux9EWgxOLxW82p31tPsyVKjMLDu38I2hHT6cWHRO?=
 =?us-ascii?q?Zy80G80jiVzQ/T8PtLIUUsmKrbNZEhxrkwm4INsUTMACD2gl/6jKyIeUU+/Oin?=
 =?us-ascii?q?9eDnbq/hpp+GOI94kgD+MqIwlcyjGek0LBQCUmyB9eih2rDv41f1TKhJg/EqiK?=
 =?us-ascii?q?XUsZLXKdwepqGjAg9V1ogj6wy4DzejyNkYmXgHLFRYeBOIloTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgiTBrxv7APrL/GJXANWbDkLj/crZn8UJcyxQ8zcpZ551KDrENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9Bv5mOVmWYWLwgtcdFmcHpgo+Q/briF2eSzFTYGy+X6?=
 =?us-ascii?q?Ih5j4hDoKmApzORoSsgLyHwSe6EYdaZmFAClCQD3joc5+IVOsLaCKXOsVhiCAL?=
 =?us-ascii?q?VaC9S4890hGjrA36y715IebO+S0YspTj1N5y5+DIkREy9Dp0D9mS0m2XTmF0mH?=
 =?us-ascii?q?8ISCEy3KxlvUN9zVKD27Big/NEDdxT++9JUgAiOJHG1Ox6C9fyWgHbcteTUlmm?=
 =?us-ascii?q?QM6rATUwTtI33t8PbFxxG9SkjhDfwSWqB6UZmKCMBJwx6qjcxWT+J95hy3ba06?=
 =?us-ascii?q?ksl1omTdFJNWG8gq5/9hLcB4jGk0iCk6aqdKIc3DPC9WuZzGqOul1YXxB0Uanf?=
 =?us-ascii?q?QX8fYU7Wp8zj5kzeV7+uFagnMgxZxMGfMKRKdMPmgU9GRPj5PtTeeHy+m2G3CR?=
 =?us-ascii?q?aMxbOMaY7qdn4Z3CXcDkgEjg8S8WyHNQg4GieuvWbeACZyGlLoZkPm6fN+p2+j?=
 =?us-ascii?q?Tk8o0wGKaFVs2Kev9R4Lm/OQUfMT0agCuCc6tTp0Gk2w39bXC9qGugpgc79QYd?=
 =?us-ascii?q?I74Fdby23ZsxZxMYCnL6BnnlQeaRh4v1vy1xVrDYVNidQqrHIvzAp1NaKY0FNA?=
 =?us-ascii?q?eymE3ZzqPb3XMG3y/BGpa67ZwVze1NeW+qES6PU3sVnjvQepFlY8/HVjydVaz3?=
 =?us-ascii?q?yc5pDSBgoITZ3xSlo39wR9p7zCeCY9453b1HJyPqi0qDPNwM8pC/Y/xRamfNdf?=
 =?us-ascii?q?N72EGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9iphSuLSw5kJ2fCZ3gudWDf6g1esqcT3mYFCZTEPEWuz0ynkBIhNZqJs?=
 =?us-ascii?q?eYYHE3uhI8qyxt9mnZ7iR2ZY9EK/B1MBwMKpYxuSYEDn0g1KyEsXpmarmS2mwD?=
 =?us-ascii?q?xukjElt7aQ0zbKw+v/ahUHIGlLRG95gFfoIIi0ic0aXUeyYwgokhul+Vj1x6xB?=
 =?us-ascii?q?qKtjKGnTRF9CfzLqIGF6Tquwqr2CbtZP6ZMpqylWUP6wYUuHSr77uBYa1yLjH2?=
 =?us-ascii?q?1DxDE0bT2qu5P5nwBkh2KZNnp8sH3ZecRozxfF+NPcXeJR3iYBRCRgiznYHEK8?=
 =?us-ascii?q?P9qq/dWTjZvDqfqxV2GiVp1Sdynk04WAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3G4FknYs3np0Q23kahpOO8HoDkGfz?=
 =?us-ascii?q?N8hb2K3kYHoMQz4L38Da4Az/1EJ/KXKJwprzVm+Bzct5e9m6fmQW1zo+789QCa?=
 =?us-ascii?q?eY9rxEnTZvrVq+ogLcevx9njYbyfsz538WmeAJuAwxziqDBrAeB1VXPSvplx6Q?=
 =?us-ascii?q?9dCxsL1XZHqzcbi3zEd+mNGhDLKYrQ1GVnf2ZIwiHTNu4cVlK13Dzmfz6o7/dd?=
 =?us-ascii?q?nUbNITsACUkhjag+hULpIxiuQFhS59NW3hun0lzvYxjQZy0pGioIiHN2Jt8bql?=
 =?us-ascii?q?Ah5fMz35fcIS9SvrjaZDhcaWxIGvE45lGjUKWpvoUP2pHCgTtfThKwaBDjk8pm?=
 =?us-ascii?q?2HFrrYGA+V8F1moG7XE5C3K3GXI2EUws54SxmaIExfnRoYXDEnnpMiEgCqxcrh?=
 =?us-ascii?q?cFp25zwL5174rAdMxfxsNxXlTmjfowKoYC8uSJeDNBpW8h1C50DNPMyc9O1zGj?=
 =?us-ascii?q?9X/oa7oAyRMGCbZBlIDWIUWkyCHV/jJaKj5d3B8+ieG+q/IOHCYbSIqexCSfiI?=
 =?us-ascii?q?wYij3Zdh/zaJLs+PJGVtD+Un2kpfWnB0A8TYmzISSywOiiLCdcibqA2n+i1wqM?=
 =?us-ascii?q?C//+/mWAbu5YuJFrtTPs9j+xGwgaefKeGQgDx1Jipf1pMJ3XXI0qQQ3EYOiyFy?=
 =?us-ascii?q?cDmgCbQAujDMTKLTma9XDgQXayBpNMtP4KIzwBNNOdPAit7u0r54j/g1C0pKVF?=
 =?us-ascii?q?D7m8GpY9AKLH+5NF/dGEmLM7GGLyXRw87reaO8VaFQjOJMuhKqpDaUCFXjMSqD?=
 =?us-ascii?q?ljXzUxCvMPpBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9T9YgvR6G2Bb8nVpN/WLmyaH4OneMZsWtfprAiJpl+NV+ng6yr1V?=
 =?us-ascii?q?7D1aS/xxgifdstluo1S+mOmV1jVnSAZOqipMhI+TvURtI6PZ9pxBWXbC5B0M7G?=
 =?us-ascii?q?WQBA4Mp9tqEdDvv6FQyt7SlKP8MjtC8tTU/dcCCMjQMs6ILH0hMR+6UALTWUEH?=
 =?us-ascii?q?TDXxbkncilZbnfXU8Wea5NBuqJnnwsEmSbJBUlExUPQABRIhVJYBJp5+VTBikZ?=
 =?us-ascii?q?aUid5O6Xf05E3SQsxTtZOBVtqdBOWpJDvPyfEOYxIS2pv9IJgaOIr8nUBvIBEu?=
 =?us-ascii?q?mI3QAGLVUMxErCpmKAM59gEFumB7Q2ApxGr9bw6g+mBVE/Oo1FZikg5zbP4y3C?=
 =?us-ascii?q?/p7lotORzMqTdm1AF7ndTjnCDUcT/2BLm/UJsQCCfusUU1dJThTEw9OQmzm1F0?=
 =?us-ascii?q?cTbFQJpPgLZ6M2NmkgnRvd1IA/EKCeUOZB4W2OHSZPgy11lYgjuoyFUB5ubfD5?=
 =?us-ascii?q?Zm0gwwftTk+3ZB3R9zKd04P6rdIIJXwVVKwKGDpCml0qY22gBIYw5H/m6JZCMW?=
 =?us-ascii?q?sUkgObwvJi7u9etpo0TWlTZYZGUSXv8Crfdj90d7MOOFmWaomaZZJ0G9H+GbIq?=
 =?us-ascii?q?iFoW/FnMHOSVQ1kEoV3QER5aJ70MsLfk6ZXFw1y76YGFICMs+EIBwDPORI832G?=
 =?us-ascii?q?VCCVtuOF4Y98OYr1QunuVuiI8qYJi0SrNAA5B8IH6cFXTcrk613RMcqydO1N8h?=
 =?us-ascii?q?4q/gm+YQzdVPk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ArAQCiFhdch0O0hNFcB4IXgTFQgVwEC?=
 =?us-ascii?q?ycKhzkDj3pKgiGXRIFzEwEYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwy?=
 =?us-ascii?q?CNiQBgmkCJBkBATcBBQkCAQFOAy8nBAENBQWDHYIAAQECAptSAooKgWwzgnYBA?=
 =?us-ascii?q?QWBBAEBhhEIh32EQYFXP4ERh3cJhXKJOoZbgQmPfQcCgiQEjzQWkVKID4EtjG+?=
 =?us-ascii?q?DEgIEAgQFAg0BAQWBRoIOMxojgzyCJxeDSoocATZygQUBASGLASmBBQGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0ArAQCiFhdch0O0hNFcB4IXgTFQgVwECycKhzkDj3pKgiG?=
 =?us-ascii?q?XRIFzEwEYEwGHRyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmkCJBkBA?=
 =?us-ascii?q?TcBBQkCAQFOAy8nBAENBQWDHYIAAQECAptSAooKgWwzgnYBAQWBBAEBhhEIh32?=
 =?us-ascii?q?EQYFXP4ERh3cJhXKJOoZbgQmPfQcCgiQEjzQWkVKID4EtjG+DEgIEAgQFAg0BA?=
 =?us-ascii?q?QWBRoIOMxojgzyCJxeDSoocATZygQUBASGLASmBBQGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,363,1539673200"; 
   d="scan'208";a="142370952"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 16 Dec 2018 19:28:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726395AbeLQDZY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 22:25:24 -0500
Received: from mail-eopbgr40083.outbound.protection.outlook.com ([40.107.4.83]:11587
        "EHLO EUR03-DB5-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726267AbeLQDZY (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 22:25:24 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nxp.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=LRADkM+JTsQwiSMAy8JruNmHI8jNZoO2jb0bkJMAVZ4=;
 b=A1dAGTqEqB0b9NDCipAco0kyJ+HZvS1etTAfPR/3/eAPMvkmxxxZTzeaoWutAulNpjV2yqs6/pyU47FGt1BSzIiuvVv5TYuQ77471rpOLEF6VDsr08Xl4QgL01y1KTLXrKZOo8fa+SQvGRaoKGJh78xDPiQp2qFMI3m6MR4ZL60=
Received: from DB3PR0402MB3916.eurprd04.prod.outlook.com (52.134.72.18) by
 DB3PR0402MB3658.eurprd04.prod.outlook.com (52.134.65.28) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Mon, 17 Dec 2018 03:25:17 +0000
Received: from DB3PR0402MB3916.eurprd04.prod.outlook.com
 ([fe80::adf8:f49d:deb4:58fd]) by DB3PR0402MB3916.eurprd04.prod.outlook.com
 ([fe80::adf8:f49d:deb4:58fd%3]) with mapi id 15.20.1425.021; Mon, 17 Dec 2018
 03:25:17 +0000
From: Anson Huang <anson.huang@nxp.com>
To: "jic23@kernel.org" <jic23@kernel.org>,
        "knaack.h@gmx.de" <knaack.h@gmx.de>,
        "lars@metafoo.de" <lars@metafoo.de>,
        "pmeerw@pmeerw.net" <pmeerw@pmeerw.net>,
        "linux-iio@vger.kernel.org" <linux-iio@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "festevam@gmail.com" <festevam@gmail.com>,
        "preid@electromag.com.au" <preid@electromag.com.au>
CC: dl-linux-imx <linux-imx@nxp.com>
Subject: [PATCH V7] iio: light: isl29018: add vcc regulator operation support
Thread-Topic: [PATCH V7] iio: light: isl29018: add vcc regulator operation
 support
Thread-Index: AQHUlbghL8UoJu3CiUOnqyrpi++urw==
Date: Mon, 17 Dec 2018 03:25:17 +0000
Message-ID: <1545016752-9865-1-git-send-email-Anson.Huang@nxp.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: git-send-email 2.7.4
x-clientproxiedby: HK0PR01CA0006.apcprd01.prod.exchangelabs.com
 (2603:1096:203:92::18) To DB3PR0402MB3916.eurprd04.prod.outlook.com
 (2603:10a6:8:10::18)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=anson.huang@nxp.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [119.31.174.66]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DB3PR0402MB3658;6:Qah2zcJmZT5nx8PV4wpOsrl9/GhLlQyXY/OF/6GN71/xtXi2+yuvuIovspl0bbuUDbE4YMDTVbGk28gDKml1BHts/SHSoAOZo1maCMdsK7el/TrMP0QLg+uvdE/470BwUlu8P7lBxqGQGyTG98uQB8N/0G24lxpwqX5FEgHGjUr37W2IUhSdD2hJQp2iW30SmrIroQU9PFRdMdf8cZ0WidiiOIgIqqbclpL07PNth2+l9SqnrDTWwj/G5RIzxX14T546FgkUir7x3wqcm2tdAY2Aev0Y1J1v0zpcHoYVTrm8eABHu2e+DutJpgpt2n17/TaJn4eeBPaGcJulkafiqDrlIB+ri3gYpdBawTD7GrOT3Pj1kOwFwxuZxHYNz+qrFmztgtr4bnUxsq4eFDy0b/dE/9/IAvNU2Agrh3SgkOoPX0faQkkNlinS8mkL+9W4jHZRtLQy+F14sukYuluKfw==;5:qCFF9WUkWwmWXO8EFWo8TbtPmIhK5Rgl5JbXuZzPC2FJhPqYbXLVp/dAgKL6OUqMh7kwpxvK7puWMqN+0WjJGACQdDK6ftoIjfURjU7/ga3ru9vvGwQMUrHEWf66YtApCFQIXPJQvuPNqH0jvHF1oubxwihOWx/JK1qZFSY50UY=;7:gI4UoEXrOSOYPuAVEevxd088tu5TgUx9fRAUUQBP8p7Ewq40MVn4Ptc4Xk7KI8tiNzRagflTGtUB1335wdu/EJe7yLbiYWPc8unvEp3RRnJWNzwZcH0n1kv8V8yHIlO+Wu7AayCtfVRQttJbqhLrZw==
x-ms-office365-filtering-correlation-id: 02912b1d-7287-4fec-0895-08d663cf440d
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:DB3PR0402MB3658;
x-ms-traffictypediagnostic: DB3PR0402MB3658:
x-microsoft-antispam-prvs: <DB3PR0402MB3658405AED4EAFFB74334D22F5BC0@DB3PR0402MB3658.eurprd04.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230021)(999002)(6040522)(2401047)(5005006)(8121501046)(3002001)(3231475)(944501520)(52105112)(93006095)(93001095)(10201501046)(6055026)(148016)(149066)(150057)(6041310)(20161123560045)(20161123564045)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(201708071742011)(7699051)(76991095);SRVR:DB3PR0402MB3658;BCL:0;PCL:0;RULEID:;SRVR:DB3PR0402MB3658;
x-forefront-prvs: 08897B549D
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(396003)(136003)(366004)(346002)(376002)(39860400002)(54534003)(189003)(199004)(52314003)(6436002)(7736002)(25786009)(106356001)(97736004)(105586002)(68736007)(305945005)(6486002)(36756003)(99286004)(4326008)(39060400002)(6512007)(5660300001)(52116002)(14444005)(256004)(53936002)(316002)(110136005)(386003)(102836004)(81156014)(6506007)(2616005)(486006)(2906002)(86362001)(476003)(50226002)(2201001)(66066001)(2501003)(6116002)(478600001)(71190400001)(71200400001)(8936002)(3846002)(186003)(81166006)(14454004)(26005)(8676002);DIR:OUT;SFP:1101;SCL:1;SRVR:DB3PR0402MB3658;H:DB3PR0402MB3916.eurprd04.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: BrNTzDa3gdE3dP8WDZPm8CIlYAmgyV+NQPF25eyhumfub93Q4mlKQeCQQK7NXIEyCf6ak5o1VYYEWDbHbTlOeRDSE1cTTpnB+tM/KwOPOtcF0YvIA6nOIC9kp1ZIzMKV/bjkQHYZsTna3+EbznxenHXf5lZhVOwNI2Ct+N/pM1gF3oier6oD4D4NQBfRRDsTe0VY7xuxcCVVapybcgrOK5tGu+gJTalZ8fzuvC9/8iYaV7gK0xmO2SF9141jpe/WIZDHaKQmMjviT5wLRd1JKeBcmsBRB+e6Kdw6FvFJ9fonCxc/PoZ2Si+yPqLqEsZz
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nxp.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 02912b1d-7287-4fec-0895-08d663cf440d
X-MS-Exchange-CrossTenant-originalarrivaltime: 17 Dec 2018 03:25:17.5572
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 686ea1d3-bc2b-4c6f-a92c-d99c5c301635
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DB3PR0402MB3658
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The light sensor's power supply could be controllable by regulator
on some platforms, such as i.MX6Q-SABRESD board, the light sensor
isl29023's power supply is controlled by a GPIO fixed regulator,
need to make sure the regulator is enabled before any operation of
sensor, this patch adds vcc regulator operation support.

Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
---
ChangeLog since V6
    - using devm_regulator_get() instead of devm_regulator_get_optional() s=
ince the regulator is
      there anyway, if dtb does NOT specify one, regulator framework will a=
ssign dummy regulator for it;
    - Setup devm action for cleaning up regulator resource for error handli=
ng.
---
 drivers/iio/light/isl29018.c | 58 ++++++++++++++++++++++++++++++++++++++++=
++++
 1 file changed, 58 insertions(+)

diff --git a/drivers/iio/light/isl29018.c b/drivers/iio/light/isl29018.c
index b45400f..63f7b9d 100644
--- a/drivers/iio/light/isl29018.c
+++ b/drivers/iio/light/isl29018.c
@@ -23,6 +23,7 @@
 #include <linux/mutex.h>
 #include <linux/delay.h>
 #include <linux/regmap.h>
+#include <linux/regulator/consumer.h>
 #include <linux/slab.h>
 #include <linux/iio/iio.h>
 #include <linux/iio/sysfs.h>
@@ -95,6 +96,7 @@ struct isl29018_chip {
 	struct isl29018_scale	scale;
 	int			prox_scheme;
 	bool			suspended;
+	struct regulator	*vcc_reg;
 };
=20
 static int isl29018_set_integration_time(struct isl29018_chip *chip,
@@ -708,6 +710,17 @@ static const char *isl29018_match_acpi_device(struct d=
evice *dev, int *data)
 	return dev_name(dev);
 }
=20
+static void isl29018_disable_regulator_action(void *_data)
+{
+	struct isl29018_chip *chip =3D _data;
+	int err;
+
+	err =3D regulator_disable(chip->vcc_reg);
+	if (err)
+		dev_err(regmap_get_device(chip->regmap),
+			"failed to disable VCC regulator!\n");
+}
+
 static int isl29018_probe(struct i2c_client *client,
 			  const struct i2c_device_id *id)
 {
@@ -742,6 +755,37 @@ static int isl29018_probe(struct i2c_client *client,
 	chip->scale =3D isl29018_scales[chip->int_time][0];
 	chip->suspended =3D false;
=20
+	chip->vcc_reg =3D devm_regulator_get(&client->dev, "vcc");
+	if (IS_ERR(chip->vcc_reg)) {
+		err =3D PTR_ERR(chip->vcc_reg);
+		if (err !=3D -EPROBE_DEFER)
+			dev_err(&client->dev, "failed to get VCC regulator!\n");
+		return err;
+	}
+
+	err =3D regulator_enable(chip->vcc_reg);
+	if (err) {
+		dev_err(&client->dev, "failed to enable VCC regulator!\n");
+		return err;
+	}
+
+	chip->regmap =3D devm_regmap_init_i2c(client,
+				isl29018_chip_info_tbl[dev_id].regmap_cfg);
+	if (IS_ERR(chip->regmap)) {
+		err =3D PTR_ERR(chip->regmap);
+		dev_err(&client->dev, "regmap initialization fails: %d\n", err);
+		regulator_disable(chip->vcc_reg);
+		return err;
+	}
+
+	err =3D devm_add_action(&client->dev, isl29018_disable_regulator_action,
+				 chip);
+	if (err) {
+		isl29018_disable_regulator_action(chip);
+		dev_err(&client->dev, "failed to setup regulator cleanup action!\n");
+		return err;
+	}
+
 	chip->regmap =3D devm_regmap_init_i2c(client,
 				isl29018_chip_info_tbl[dev_id].regmap_cfg);
 	if (IS_ERR(chip->regmap)) {
@@ -768,6 +812,7 @@ static int isl29018_probe(struct i2c_client *client,
 static int isl29018_suspend(struct device *dev)
 {
 	struct isl29018_chip *chip =3D iio_priv(dev_get_drvdata(dev));
+	int ret;
=20
 	mutex_lock(&chip->lock);
=20
@@ -777,6 +822,12 @@ static int isl29018_suspend(struct device *dev)
 	 * So we do not have much to do here.
 	 */
 	chip->suspended =3D true;
+	ret =3D regulator_disable(chip->vcc_reg);
+	if (ret) {
+		dev_err(dev, "failed to disable VCC regulator\n");
+		mutex_unlock(&chip->lock);
+		return ret;
+	}
=20
 	mutex_unlock(&chip->lock);
=20
@@ -790,6 +841,13 @@ static int isl29018_resume(struct device *dev)
=20
 	mutex_lock(&chip->lock);
=20
+	err =3D regulator_enable(chip->vcc_reg);
+	if (err) {
+		dev_err(dev, "failed to enable VCC regulator\n");
+		mutex_unlock(&chip->lock);
+		return err;
+	}
+
 	err =3D isl29018_chip_init(chip);
 	if (!err)
 		chip->suspended =3D false;
--=20
2.7.4

