Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:56:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9640A5803DC;
	Sat,  8 Dec 2018 10:19:49 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 10:19:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A6OUSXBIYMX77os1sPtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/TyrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kJNzA37nzZhM9+jK1UvB2uuh5wzIDPYIGNNvdzZb/dcc8ASGZdQspcTTJND4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopH6qVQUtxuxGRejBOfoyjRVm3H5wa060+EgEQHawAwrAtUDsH?=
 =?us-ascii?q?HOo9XvKKgdT+S1zK7SwTXYc/xW2TL96InUchA9vP2BRr1wcc/LxkkuEwPJlEmf?=
 =?us-ascii?q?qYvgPz6M0OkGrmuV7/J4WO6xl2Iqrxt9riWhy8sykIXFm4EYxkze+Sh4wos5Pc?=
 =?us-ascii?q?C0RUF1bNK+DZdcqyOXO5F5T84iWW1kpSA3waAct5GhZigF0pEnygbfa/OZd4iI?=
 =?us-ascii?q?5QruVPieIThmnnJpYrG/iAio8Uim1OL8UtO40FFQripKitXMt3YN2ALP6sWfVP?=
 =?us-ascii?q?dx4kOs1SyS2w3d9O1IO104mKnHJ5I7w7M9lIIfsUHZES/3nEX2grWWdkIh+uWw?=
 =?us-ascii?q?7+TnY7PmpoKTNoNtiQHxLL4umsqhDuQ8KwQOWGaa+eKi27355kD5XrpKgeMskq?=
 =?us-ascii?q?XDs5DVO94bpqinDA9RyIoj7Ay/Dzi+3NQCgXYHNE5FeA6Aj4XxP1HOIfP4Auml?=
 =?us-ascii?q?j1WjjTdm3PTGPrznApXQIXnPirbhfbBh60FCzAo/18xQ55VRCrsZOvL8RlfxtM?=
 =?us-ascii?q?DEDh8+KwG0w/zoCNRh1owEXmKDGK+ZML7Ivl+O6eIiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9Hv5+OUWWfWLsgssdEWcNpgc+Tuvqh0OYXT5QYHayWa?=
 =?us-ascii?q?Q85jYgBYKiDIfDQJ2tgbOb0Ce6GJ1Wen5JClSWHXj0cIWEXu8GaDiOLc95jjwE?=
 =?us-ascii?q?Sb+hRpc72hG1tA/6zLlnIvDO+iICt5Luz9x15+zVlREv+j14FcWd02eRT25qmm?=
 =?us-ascii?q?MEXSM53Kd6oUZl0FeMzbB4g+BEFdxU//5JUR01NZjGw+x+CtD9QATBftiSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7b26?=
 =?us-ascii?q?Y7kVkpXNFDNW28ia557AjcGYjJn0Kdl6apcKQc2DXA9GOCzWqIoUFZXxR8UaTD?=
 =?us-ascii?q?XXADeETWqc716V/FT7+rEb4nKBdOydaeKqtWbd3klUhJS+39ONvAeW6xm32/BR?=
 =?us-ascii?q?CTxrySaornYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0Bhy7u1+hsShfyAS/MS3qgIuDs7pzVzBla929PWC9yPpwd6eKVcYN?=
 =?us-ascii?q?U94EpI1G7Dtgx9OICgIL5mhlIEbwt3uEbu3Q1tCopcicgqsG8qzA1qJK2C1FNO?=
 =?us-ascii?q?aTyZ0o7wO7HNMWby4Q2gZLTQ2lHd19aW5LwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzX1tMbSuvjDewd4oBeslxQymf9dQ?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1lyEKM9jZzRfTS35kYxPGUxA2HWCnmjFegq8z4hZpLZTUPEWWh0yjkA4hRa7Z2?=
 =?us-ascii?q?fYYKD2euPsK2ys9/h57rR35X6lqjC0ka18+ufBqYd0b90hFI1UQLvXynnjO1zj?=
 =?us-ascii?q?x1kz0zrquTxjfOw/nkdBccPm5LRW9ijUrjIISujtAaWlSoYBYtlBe/+Un6wK1b?=
 =?us-ascii?q?rrxlL2bPWUdIYzT2L2Z6X6uyrLWCec1P6JAvsSlNS+Sze1OaSr38oxsczSzjGX?=
 =?us-ascii?q?BTxDQ6dzGsp5X4kAZ2iGObLHZvsnXZfdt8ygvY5NzZXfRRxCYJRDFkiTnLAVix?=
 =?us-ascii?q?J9mo8s+Tl5vZsOC+VmShW4ZXcSnqy4OAqSS66XdrAR25g/C8hNnnHRIm3i/80t?=
 =?us-ascii?q?lgTT/IowrkYon3y6S6NvpqfkpyC1/98cZ6Gpx+nZE2hJEfwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiZ2MW2yE94NpQBK?=
 =?us-ascii?q?aa8rNEhjd1rUSirQ3Kf/d9hDgdxOAq6H4bheEJpQUswj+cArAUAUlXIyjsmw6U?=
 =?us-ascii?q?4NC5qaVdfHyvfqSo1EpigdChC6mPoh1bWHb8YJsjHDV/7sNiMFLXy33z65rpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5Lm2?=
 =?us-ascii?q?DQRfNj3xesMf4DXtjbtFk8aS3oCvGIhhGzoRUJvpS/KoDCwdtfD9OwmSFz08r2?=
 =?us-ascii?q?+RGaDDEg+H9Edms3XPHoipN36NIXkW085iSAOBJEBFgwAUQTY6noM/Fg+w38zs?=
 =?us-ascii?q?a0N55jEX5l7lpRpA0ONoNx/jUmjBoAekcCs7SJ+aLBBO9AFN+1/VMdCC7uJ0By?=
 =?us-ascii?q?xZ/pqhrBGUKmyGfQtIC3sFWleDB1DlMbmj/t3A8+meBuqjIPrCe7SOqepCV/iW?=
 =?us-ascii?q?wZKjyJdp/zGJNs+XJHltE+U72lZfXXB+A8nZmysASy0UlyLObs6XvhS8+jdwrs?=
 =?us-ascii?q?Cw7vvrQh/v5ZCUBrtWMNVv/Q22gKiZO+6RgiZ5NShX1pcWyXDUz7gf2UYYizty?=
 =?us-ascii?q?eDm1DbQAqSnNQbrKla9KFBEbcT18NctS46I43wlAIsrbitLz1r5lgf85EVZFVV?=
 =?us-ascii?q?r9ms63YcwGOX2yNFTCBEyTLrSJOSXLw93rYaO7UbBQkORUtxiqtTmHCUPsIjSD?=
 =?us-ascii?q?mCfvVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo7yQ9yxYhPB/G21H7nV9LOiEmzyW7+/XKpsNtftrAyJ0l/9V4XggyrtV?=
 =?us-ascii?q?6j1ES+JxmCfIstFupFSmwaGzzW9jWQBVgjNGmIuFukIkNaidvrxBUnbN8RZLzW?=
 =?us-ascii?q?iWDRkQptBlItTpsqRXxZ7Ek6e3YDVD+IiP1cgRHc7ZLISAKnVleRnvETffD00F?=
 =?us-ascii?q?ZTGuJSfTiggViPSf+2eKhoA/p5X2h9wIR6MfHFMvG/wZCmxhHdofMJlwQzUomK?=
 =?us-ascii?q?Kai8hO4mCx6FHKWMhUt5aBTvWKCN3mLj+dirYCbBwNhfvxKYkDP4v3wVEkQ0N2?=
 =?us-ascii?q?kYDHEkz4VNZEpipuKAQzpRZj6n97G0g6wUnobgTl23QTEP+oglZijwJkaukp83?=
 =?us-ascii?q?H36FcyJ0bW/QM/lUAwnZPuhjXHI225F7u5QYwDU3m8jEM2KJ6uGws=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAACYCgxch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgl6BDSeME4wPgWg5iQ+OLoFzEgEBGBMBh10iNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIKSMMgjYigmUDAwECJBMGARsdAQMCCQEBBRApEgMeAhEBBQEcB?=
 =?us-ascii?q?xIFgxyBaQEDFQWZPjyMCRYFAReCdwWENwoZJw1dgTcCBhKKc4EcghaBETOFNoI?=
 =?us-ascii?q?fhWYCgSoBnxwuBgECgVVQi3uDLxiJZodXiSKGAYlmBgIJBw8hgSWCDjMaI4EBb?=
 =?us-ascii?q?YFOghuDbYprKDKBBQEBjDEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAACYCgxch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgl6?=
 =?us-ascii?q?BDSeME4wPgWg5iQ+OLoFzEgEBGBMBh10iNAkNAQMBAQEBAQECARMBAQEKCwkIK?=
 =?us-ascii?q?SMMgjYigmUDAwECJBMGARsdAQMCCQEBBRApEgMeAhEBBQEcBxIFgxyBaQEDFQW?=
 =?us-ascii?q?ZPjyMCRYFAReCdwWENwoZJw1dgTcCBhKKc4EcghaBETOFNoIfhWYCgSoBnxwuB?=
 =?us-ascii?q?gECgVVQi3uDLxiJZodXiSKGAYlmBgIJBw8hgSWCDjMaI4EBbYFOghuDbYprKDK?=
 =?us-ascii?q?BBQEBjDEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,331,1539673200"; 
   d="scan'208";a="65949253"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 08 Dec 2018 10:19:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726299AbeLHSTp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 13:19:45 -0500
Received: from mail-qt1-f193.google.com ([209.85.160.193]:38853 "EHLO
        mail-qt1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726142AbeLHSTp (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 13:19:45 -0500
Received: by mail-qt1-f193.google.com with SMTP id p17so8160739qtl.5;
        Sat, 08 Dec 2018 10:19:44 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=g4OFN6eemQMqhRIJQa2XiEjm3UXDOntNSgSULrBno2I=;
        b=YOX+hnXiYx7gdUnlIxaxaQHe+dn83E3qufUQsU0WcpoxN3CdCs96lAuG6MX34/jtDa
         mNHeG6e/YJH8oqRYYLSkOGiZR8iniAqrkstocyzJJZHAr6nREYM7aMQtGlfQ4sDCzdWv
         IvPHjc0q5Xohn2Y6/hWvPtDCSLmsBqIvsaf/O6+PGTwBNk/x/bd0OK3OvkXAToEA0Z/w
         4Na5BFZ9dJEFqzlxNcPvRKoXAcOoKWQt8q2mzjN651+M70Y3G6cdAG3Dr4KY1S00N+Ed
         NPDNWUNOBWSK9LjL7+LN2YxTyNj0z29WU/PEwJVLYKeL5Dm2Udqr6Ba+LTWRsuRkc8OA
         Xc1Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=g4OFN6eemQMqhRIJQa2XiEjm3UXDOntNSgSULrBno2I=;
        b=WAOtwSbT5IBJarONX2NEC0VUJzJBeuw4awHMkC4wGPXyeXIeUAo3RsEoNGKI6W57vH
         A0I6EWOkcprMfhajyl+8yEY9mwZOguJbdI1blvZFy1aIUBsoFdQ9lt6Dfg9YfG+0e37T
         hUGjkHaLzyv8+rJAkyhGDXj0OCckZuLNa0JcQASfxO1I1Y7JUugv+orPTYcGs5FIGacG
         O3AQnxuLfTcxJiSYq0HFt02eM4rKyKcKvB93IRqBYHN6uk8s9xdFfgkaxUBbChd1y18f
         eHBJ6kOTPugDcDUpsNE5UcLVlnrt3stTFUfV7X56hpAzbQJ1O09RRJd7+L9Dt7VNNF7a
         Y9/Q==
X-Gm-Message-State: AA+aEWa5hJH2BzjfO1ZsLwX9nb2ieI/Ajp7H++Cq5GSIFU1SSg6grZQO
        6GfaE/6fRRQyYGxbBQQT8aw=
X-Google-Smtp-Source: AFSGD/WZiuk50zuzRkK4cGxfdItnaZioz1C64N9W8eTKA1obuJ2yvHdoLQKKYJAh4M5uvW3HGactjA==
X-Received: by 2002:ac8:280f:: with SMTP id 15mr6671364qtq.31.1544293184010;
        Sat, 08 Dec 2018 10:19:44 -0800 (PST)
Received: from smtp.gmail.com ([143.107.45.1])
        by smtp.gmail.com with ESMTPSA id v186sm3705967qkd.13.2018.12.08.10.19.41
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 08 Dec 2018 10:19:43 -0800 (PST)
Date: Sat, 8 Dec 2018 16:19:38 -0200
From: Marcelo Schmitt <marcelo.schmitt1@gmail.com>
To: lars@metafoo.de, Michael.Hennerich@analog.com, jic23@kernel.org,
        knaack.h@gmx.de, pmeerw@pmeerw.net, gregkh@linuxfoundation.org,
        stefan.popa@analog.com, alexandru.Ardelean@analog.com
Cc: linux-iio@vger.kernel.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org, kernel-usp@googlegroups.com
Subject: [PATCH 2/3] staging: iio: ad5933: use clock framework for clock
 reference
Message-ID: <2e60aac1f824d421b355e0df8b4a564fb422202b.1544292845.git.marcelo.schmitt1@gmail.com>
References: <cover.1544292845.git.marcelo.schmitt1@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <cover.1544292845.git.marcelo.schmitt1@gmail.com>
User-Agent: NeoMutt/20171215
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add the option to specify the external clock (MCLK) using the clock
framework.
Also remove the old platform data structure.

Signed-off-by: Marcelo Schmitt <marcelo.schmitt1@gmail.com>
Signed-off-by: Gabriel Capella <gabriel@capella.pro>
Co-Developed-by: Gabriel Capella <gabriel@capella.pro>
---
 .../staging/iio/impedance-analyzer/ad5933.c   | 43 ++++++++++---------
 1 file changed, 22 insertions(+), 21 deletions(-)

diff --git a/drivers/staging/iio/impedance-analyzer/ad5933.c b/drivers/staging/iio/impedance-analyzer/ad5933.c
index 730bc397a26b..3134295f014f 100644
--- a/drivers/staging/iio/impedance-analyzer/ad5933.c
+++ b/drivers/staging/iio/impedance-analyzer/ad5933.c
@@ -16,6 +16,7 @@
 #include <linux/err.h>
 #include <linux/delay.h>
 #include <linux/module.h>
+#include <linux/clk.h>
 
 #include <linux/iio/iio.h>
 #include <linux/iio/sysfs.h>
@@ -82,20 +83,10 @@
 #define AD5933_POLL_TIME_ms		10
 #define AD5933_INIT_EXCITATION_TIME_ms	100
 
-/**
- * struct ad5933_platform_data - platform specific data
- * @ext_clk_hz:		the external clock frequency in Hz, if not set
- *			the driver uses the internal clock (16.776 MHz)
- * @vref_mv:		the external reference voltage in millivolt
- */
-
-struct ad5933_platform_data {
-	unsigned long			ext_clk_hz;
-};
-
 struct ad5933_state {
 	struct i2c_client		*client;
 	struct regulator		*reg;
+	struct clk			*mclk;
 	struct delayed_work		work;
 	struct mutex			lock; /* Protect sensor state */
 	unsigned long			mclk_hz;
@@ -111,9 +102,6 @@ struct ad5933_state {
 	unsigned int			poll_time_jiffies;
 };
 
-static struct ad5933_platform_data ad5933_default_pdata  = {
-};
-
 #define AD5933_CHANNEL(_type, _extend_name, _info_mask_separate, _address, \
 		_scan_index, _realbits) { \
 	.type = (_type), \
@@ -690,9 +678,9 @@ static int ad5933_probe(struct i2c_client *client,
 			const struct i2c_device_id *id)
 {
 	int ret;
-	struct ad5933_platform_data *pdata = dev_get_platdata(&client->dev);
 	struct ad5933_state *st;
 	struct iio_dev *indio_dev;
+	unsigned long ext_clk_hz = 0;
 
 	indio_dev = devm_iio_device_alloc(&client->dev, sizeof(*st));
 	if (!indio_dev)
@@ -704,9 +692,6 @@ static int ad5933_probe(struct i2c_client *client,
 
 	mutex_init(&st->lock);
 
-	if (!pdata)
-		pdata = &ad5933_default_pdata;
-
 	st->reg = devm_regulator_get(&client->dev, "vdd");
 	if (IS_ERR(st->reg))
 		return PTR_ERR(st->reg);
@@ -723,8 +708,21 @@ static int ad5933_probe(struct i2c_client *client,
 
 	st->vref_mv = ret / 1000;
 
-	if (pdata->ext_clk_hz) {
-		st->mclk_hz = pdata->ext_clk_hz;
+	st->mclk = devm_clk_get(&client->dev, "mclk");
+	if (IS_ERR(st->mclk) && PTR_ERR(st->mclk) != -ENOENT) {
+		ret = PTR_ERR(st->mclk);
+		goto error_disable_reg;
+	}
+
+	if (!IS_ERR(st->mclk)) {
+		ret = clk_prepare_enable(st->mclk);
+		if (ret < 0)
+			goto error_disable_reg;
+		ext_clk_hz = clk_get_rate(st->mclk);
+	}
+
+	if (ext_clk_hz) {
+		st->mclk_hz = ext_clk_hz;
 		st->ctrl_lb = AD5933_CTRL_EXT_SYSCLK;
 	} else {
 		st->mclk_hz = AD5933_INT_OSC_FREQ_Hz;
@@ -744,7 +742,7 @@ static int ad5933_probe(struct i2c_client *client,
 
 	ret = ad5933_register_ring_funcs_and_init(indio_dev);
 	if (ret)
-		goto error_disable_reg;
+		goto error_disable_mclk;
 
 	ret = ad5933_setup(st);
 	if (ret)
@@ -758,6 +756,8 @@ static int ad5933_probe(struct i2c_client *client,
 
 error_unreg_ring:
 	iio_kfifo_free(indio_dev->buffer);
+error_disable_mclk:
+	clk_disable_unprepare(st->mclk);
 error_disable_reg:
 	regulator_disable(st->reg);
 
@@ -772,6 +772,7 @@ static int ad5933_remove(struct i2c_client *client)
 	iio_device_unregister(indio_dev);
 	iio_kfifo_free(indio_dev->buffer);
 	regulator_disable(st->reg);
+	clk_disable_unprepare(st->mclk);
 
 	return 0;
 }
-- 
2.17.1

