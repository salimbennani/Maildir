Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 94F04580322;
	Tue, 27 Nov 2018 12:13:46 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 12:13:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKyr26B+KYk6ZXP9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1uMTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaM+dwfr7GfdMCW2VOQtpRWSJGAoO5?=
 =?us-ascii?q?dYQPDuwBNvtco4Tyo1YCqB2zDhSuCuzy0D9FnnH4060k3eo8Eg/G0gMvEM4Tv3?=
 =?us-ascii?q?vWotr1L78SXOKuwanH0TnOdelb1Svn5YTWdB0qvPGCXah3ccrU0UQhDRnKjkuO?=
 =?us-ascii?q?pozhIjib0f4CvHSb7+V+VuKklmkqqxlrrTix2MgsjpLEhp8JxVHK7yl23Ic0KM?=
 =?us-ascii?q?S+RUVmb9CkF55QuDubN4twWs4iR2BouDgkxb0Evp67YTIKyJI9yB7bcfCIb4+I?=
 =?us-ascii?q?4hf7WOmNPDd4gnNldKijiBez6USgxPD8Vs+o31ZWrypFld/MuWoJ1xzS9siGSu?=
 =?us-ascii?q?Fx8l641TqWyg/c9P9ELEYpnqTYM54s2qA8moYXvEjZAyP7llv6gLWLekgn5uSk?=
 =?us-ascii?q?8eXqb7f+qpOBM4J5ihvyPrkzlsGxG+g0LAkDU3KG9em42rDu+1DyTq9Qgf0siK?=
 =?us-ascii?q?bZtYjXJcQFqa69BA9Yypgj6xmhADe8ytgYnmcILEhDeB2Zi4jlIVbOIOr3Dfun?=
 =?us-ascii?q?glSslilkx+zeM7H/HpnAKmLPnKrvcLpj8UJQ1Qk+wcxF659VCLwNOPfzVVXwtN?=
 =?us-ascii?q?zcAB85KQu0w+P/BdV514MeX3+PA6CAPKPRr1CI/OQvLPeIZIMMvzb8Jf4l6OD0?=
 =?us-ascii?q?jXIih18dcrem3YENZHC7APtmOUOZbmTogtsbFmcKpAU+QPTwiFKeST5Te2qyX6?=
 =?us-ascii?q?Uk6zE/CYKmDpnMSpqigbycxyq7GpxWZmZbClGDC3vodoOEW+sSZyKWOMNujjsE?=
 =?us-ascii?q?Vb25QY87yR6urBP6y6ZgLufM+i0Xr5Pj1MRv6O3Ujx0y9SF0AN6b02GCVGx0mm?=
 =?us-ascii?q?IIRzkr3KFwu0B9y1GD0bRmjPxcD9Bc+/RJUgIiP57G0+N6E8zyWh7GftqRSlam?=
 =?us-ascii?q?RcupDSsyTtI2xd8OZUF9Fs6mjhDC2SqqHrAUm6aKBJwy7qLTwXzxK9xhxHbB0a?=
 =?us-ascii?q?krl0MmTddXNW26mq5/8BDeCJTSk0WZkKaqdr4Q3DTX+2eB1meOuEBYUAhtUaTK?=
 =?us-ascii?q?R3wfZ03Wrcjn6UPGVbOhFbMnMg5Zw86YNqRKcsHpjUlBRPr7O9TReWSxl320BR?=
 =?us-ascii?q?aJ3LyMaoXqdn4Z3CXcDkgEjg8S8WyHNQg4GieuvWbeACZyGlLoZkPm6fN+p2+j?=
 =?us-ascii?q?Tk8o0wGKaFVs2Kev9R4Lm/OQUfMT0agCuCc6tTp0GlGx39bVC9qFowpsZ6FcYd?=
 =?us-ascii?q?I74Fda2mPVrQ19Ppq8L698gl4SaRh4v0Tr1x9vEIVPjdAqrG82zAp1Ma+XzUlO?=
 =?us-ascii?q?dy2G0pzqOr3YMG/y/AuxZK7QwVze1NeW+qES6PU3sVnjvQepFlY8/HVjydVaz3?=
 =?us-ascii?q?yc5pDSBgoITZ3xSlo39wR9p7zCfik95obU1XpwMam0sj7Owc4pCPEiyha6e9df?=
 =?us-ascii?q?MaWEFADpHs0eBsiuLvEqmlezYhIFOuBS6LA7P8e8e/Sa366rOf5qnCi6gmRf/I?=
 =?us-ascii?q?B9zkWM+jJmRe7MwZkEzO+X3wudWzjnkVeur9r4mYZHZTEVAGqy0izkBI9XZq1v?=
 =?us-ascii?q?cocHE2auI8urxtpgg57hQWJX9FmmB1kews+mZQKSb0Dh3Q1XzUkWoWGnlTGkwD?=
 =?us-ascii?q?BukjAprrCQ3CrBw+n5cBoHO2hLRHRtjFv2IIi0icwaU1asbwQziBSl4kP6zbBB?=
 =?us-ascii?q?pKtjN2nTXVtIfy/uImF4U6u/qqCNY9RS55MvqylXVvqzYUqbSrLkvxQVySfjEH?=
 =?us-ascii?q?ZAyzAhcDGqvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquC/V2O7WpxTayXr1p6AtC2g6G1uAB2/me2zm9L9HQg71y/7y8?=
 =?us-ascii?q?dlVSHSoBngZYnr0rywMfh7cUlwGF/89816F5l8koQqnpEQ2nsahpKP8Xoci2jz?=
 =?us-ascii?q?MtZb2aP4bHUTQz4G2NrV4Anj2E1+IXOF3YP5VnOBwsR/Y9m2eH8Z2iU478pSEq?=
 =?us-ascii?q?eb8KREnTdpolq/tQ/QYeJynjAHxfss6X4ahfoEuA4sziWbH7ATElNUPS3qlxSU?=
 =?us-ascii?q?8d++qL9ba3qocbi1zEB+h8yuDKmeogFAX3b0YpQiEjVx7sllMFLMzWf86ofreN?=
 =?us-ascii?q?TLadITtxuUkwrPjuRPKZIxkOYKijRjOW7noXIlzOs7hwR03Z6mpIiHN3lt/KWh?=
 =?us-ascii?q?Dx5dNz31ZNkc9ivjjKlAhcaWw56gHo96FToVRpvoQumlEDYTtfThKgaPHycwqn?=
 =?us-ascii?q?adGbrDAwCf7F1qoG7IE5CuL3uXPmUWzc1+RBmBI0xSmBwUXDI/npIjFwGl3srh?=
 =?us-ascii?q?cFpi5jAK5171sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGUfB5HDWYNWkyZHVzjOqSu6MLE8+iZAOq+MvTPba+PqexYS/eH?=
 =?us-ascii?q?25av3pF68DaLM8WFJmNiAOEj2kpfQXB5HNzUmzcVRCwSiS3NdNSXpAum9i10s8?=
 =?us-ascii?q?C/8+nrWAT16ouUELZSNdRv+xargaaMLeKQhSB5KSpG2ZMI33PH1L8f3FsKgSF0?=
 =?us-ascii?q?azatCagAtTLKTK/Imq5XCAMbazpuNMRS6aIwxBJNOcnditP6zbN4iv81C1FYVV?=
 =?us-ascii?q?3ugM2pZMoKI32jO1PDHkqEKLOGJTjTycHtfay8UaFQjPlTtxCouTaUDU7jPjeA?=
 =?us-ascii?q?lznoTRyvMvtMjCaUPBNAooG9bw1tBHPnTNLnbB27LdB2gSc3wb0ymnPFK2ocPS?=
 =?us-ascii?q?JgfENKq72a9TlYjelnG2xd8nplKvGJlDyE7+bDMJYZr/tqDj5wl+Jb+3k6z7pV?=
 =?us-ascii?q?7CdZRP16gifSr9huo024nemL0DZoTB1OqjNTjoKRoUpiIbnZ9oVHWXvc4BIN7G?=
 =?us-ascii?q?CQBw4WqNd/FtLvu75fyt7UmaL3KTdC9c/U/MQGC8jVLsKHLGQuMR7zFDHICwsF?=
 =?us-ascii?q?SCahNXvDiExFjPGS6nqVo4A6q5f2npoOT75bVFotGfIbCkRqBtoCIJhsUzMgkL?=
 =?us-ascii?q?6bitMI5HWkoBnQQsVaoo7IVvaIDfrzLzaZiOoMWxxd47riLocUfrby2E9jbFR8?=
 =?us-ascii?q?1NDIElDTXtcLuSRibQ4yrUNl9Hl4U3112kT5Zwfr63gWQ62ahBkz3zN3f+kpvB?=
 =?us-ascii?q?Ll6Fc6JRKevCIunU0ZhN76xzuDJm2iZJysVJ1bXnKn/3M6NYn2FkMoNAA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAAJpP1bh0O0hNFjFgUBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVQDAQEBCwGCaYECJ5gYgg0UjXM0inIGDx0LCAGBS4YPIjcGDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkjDII2JIJjAQICAQECaA4FAQkBAQohJQMMBRgxGIMcA?=
 =?us-ascii?q?YF5CAQBCqdBiFeBSg+CbYkgF4F/gRGDEoMTCwOFFYIEIgKJJy6BQJR3CYIghFy?=
 =?us-ascii?q?GS4NeIwpVeiMqh2KHA41GjE2BdzMaCDCDJwmCGQQYWgGCbyiKLD4zAQGBAwEBi?=
 =?us-ascii?q?l2CKQEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAAAJpP1bh0O0hNFjFgUBAQEBAwEBAQcDAQEBgVQDAQE?=
 =?us-ascii?q?BCwGCaYECJ5gYgg0UjXM0inIGDx0LCAGBS4YPIjcGDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkjDII2JIJjAQICAQECaA4FAQkBAQohJQMMBRgxGIMcAYF5CAQBCqdBiFe?=
 =?us-ascii?q?BSg+CbYkgF4F/gRGDEoMTCwOFFYIEIgKJJy6BQJR3CYIghFyGS4NeIwpVeiMqh?=
 =?us-ascii?q?2KHA41GjE2BdzMaCDCDJwmCGQQYWgGCbyiKLD4zAQGBAwEBil2CKQEB?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="asc'?scan'208";a="53563358"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 12:13:44 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726582AbeK1HMp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 02:12:45 -0500
Received: from atrey.karlin.mff.cuni.cz ([195.113.26.193]:42000 "EHLO
        atrey.karlin.mff.cuni.cz" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726434AbeK1HMo (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 02:12:44 -0500
Received: by atrey.karlin.mff.cuni.cz (Postfix, from userid 512)
        id 33682809E5; Tue, 27 Nov 2018 21:13:36 +0100 (CET)
Date: Tue, 27 Nov 2018 21:13:38 +0100
From: Pavel Machek <pavel@ucw.cz>
To: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Cc: x86@kernel.org, platform-driver-x86@vger.kernel.org,
        linux-sgx@vger.kernel.org, dave.hansen@intel.com,
        sean.j.christopherson@intel.com, nhorman@redhat.com,
        npmccallum@redhat.com, serge.ayoun@intel.com,
        shay.katz-zamir@intel.com, haitao.huang@intel.com,
        andriy.shevchenko@linux.intel.com, tglx@linutronix.de,
        kai.svahn@intel.com, Jonathan Corbet <corbet@lwn.net>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "H. Peter Anvin" <hpa@zytor.com>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
        open list <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v16 22/22] x86/sgx: SGX documentation
Message-ID: <20181127201338.GB20692@amd>
References: <20181106134758.10572-1-jarkko.sakkinen@linux.intel.com>
 <20181106134758.10572-23-jarkko.sakkinen@linux.intel.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
        protocol="application/pgp-signature"; boundary="yEPQxsgoJgBvi8ip"
Content-Disposition: inline
In-Reply-To: <20181106134758.10572-23-jarkko.sakkinen@linux.intel.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--yEPQxsgoJgBvi8ip
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi!

> Documentation of the features of the Software Guard eXtensions used
> by the Linux kernel and basic design choices for the core and driver
> and functionality.

> --- /dev/null
> +++ b/Documentation/x86/intel_sgx.rst
> @@ -0,0 +1,201 @@
> +=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> +Intel(R) SGX driver
> +=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> +
> +Introduction
> +=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> +
> +Intel(R) SGX is a set of CPU instructions that can be used by applicatio=
ns to
> +set aside private regions of code and data. The code outside the enclave=
 is
> +disallowed to access the memory inside the enclave by the CPU access con=
trol.
> +In a way you can think that SGX provides inverted sandbox. It protects t=
he
> +application from a malicious host.

Spelling out "Software Guard eXtensions" somewhere around here would
be nice.

As would be notice that due to Spectre / Meltdown / L1TF / ... this
sandboxing functionality does not really work on any CPU that is on
the market today.


> +Enclave can only execute code inside the ELRANGE. Instructions that may =
cause
> +VMEXIT, IO instructions and instructions that require a privilege change=
 are
> +prohibited inside the enclave. Interrupts and exceptions always cause en=
clave
> +to exit and jump to an address outside the enclave given when the enclav=
e is
> +entered by using the leaf instruction ENCLS(EENTER).


> +Launch control
> +--------------
> +
> +To launch an enclave, two structures must be provided for ENCLS(EINIT):
> +
> +1. **SIGSTRUCT:** signed measurement of the enclave binary.
> +2. **EINITTOKEN:** a cryptographic token CMAC-signed with a AES256-key c=
alled
> +   *launch key*, which is re-generated for each boot cycle.
> +
> +The CPU holds a SHA256 hash of a 3072-bit RSA public key inside
> +IA32_SGXLEPUBKEYHASHn MSRs. Enclaves with a SIGSTRUCT that is signed wit=
h this
> +key do not require a valid EINITTOKEN and can be authorized with special
> +privileges. One of those privileges is ability to acquire the launch key=
 with
> +ENCLS(EGETKEY).
> +
> +**IA32_FEATURE_CONTROL[17]** is used by the BIOS configure whether
> +IA32_SGXLEPUBKEYHASH MSRs are read-only or read-write before locking the
> +feature control register and handing over control to the operating syste=
m.

Would it be possible to explain what this means? Basically my BIOS
decides what enclaves I can run? Who generates the EINITTOKENs and can
my code get one?=20

What other priviledges does signed SIGSTRUCT give to the enclave?

> +Launching enclaves
> +------------------
> +
> +The current kernel implementation supports only unlocked MSRs i.e.
> +FEATURE_CONTROL_SGX_LE_WR must be set. The launch is performed by settin=
g the
> +MSRs to the hash of the public key modulus of the enclave signer, which =
is one
> +of the fields in the SIGSTRUCT.

Aha, so in current kernel implementation kernel decides what enclaves
I can run?

Anyway, all this is "interesting reading" but not really suitable for
system administrator who is not expert in Intel CPUs. Do we need some
kind of explanation for ARM kernel hackers, system administrators and
other interested parties?

									Pavel
--=20
(english) http://www.livejournal.com/~pavelmachek
(cesky, pictures) http://atrey.karlin.mff.cuni.cz/~pavel/picture/horses/blo=
g.html

--yEPQxsgoJgBvi8ip
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: Digital signature

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iEYEARECAAYFAlv9pXIACgkQMOfwapXb+vK7VQCcDuktVD3svHKCgW5RurdIi+2f
0yEAn3aIi6SeyfMyF1hr4we7uTEG6c5J
=XkFd
-----END PGP SIGNATURE-----

--yEPQxsgoJgBvi8ip--
