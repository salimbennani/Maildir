Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:05:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E12D658061F
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 06:48:50 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga002-1.jf.intel.com with ESMTP; 14 Dec 2018 06:48:50 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AYwwkJhfH8CdGRuBWQ+JZeIyxlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW5ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgqxcoh2hqRNwzJLbbo+ILPpzfKHTcNwHSWdPQspeSTdBD5ig?=
 =?us-ascii?q?b4YMFecNIfxVo5X/qlYIsBCwBROsBOTqyjJQnHH5w7E63Po7EQrb2wIvBdIPv2?=
 =?us-ascii?q?nKo9XxMKcZTOe4zLHWwjXfcfxWwy3x6I3SfREhvP6DQ7Zwcc7KxEkrFgPFiE+f?=
 =?us-ascii?q?qZbiPz+P0eQNqWeb4vNmWOmyiGAnsxl8riazysovkIXFm58Zx1Pe+Slnzos4Jc?=
 =?us-ascii?q?e0RFN5bNK8E5ZcqjuWO5VsTs8/Xm1luDw2xqAJtJO4eiUB1Y4pyATFa/OddoiF?=
 =?us-ascii?q?+hLjW/iVITd/nH9lfLO/hw2u8Ui70OH8Wc+00EtQoipCiNnMuWgB1x3V6seZVv?=
 =?us-ascii?q?tw5lmt1SqM2gzJ9+1IPEM5mbDFJ5MvwrM8jIcfvEbbEi/zgkr2jauWdks++uiv?=
 =?us-ascii?q?7uTqeqzmqYGZN49pkw3xL7ohmtKhDuQ8KwQBRG+b+fm61LL/40L5W7JGjvk3kq?=
 =?us-ascii?q?narp/WP8saprOhDg9R04Yj7Qu/Dji83NQZm3kHMExKeBadg4f1PFHOJev1DfG4?=
 =?us-ascii?q?g1Sqnzdrwe3GMqfmApXXIXjPiK3hcqpl605A1AozyshS55ZVCrECPv3/QEDwtM?=
 =?us-ascii?q?HDAx89Mgy0xfvnCdpn2oMfX2KPHrGWMKfIvVCU4eIvJrrEWYkOpTyoK+Q5/+W8?=
 =?us-ascii?q?yjg9mEQBZu+v2p0Ybm3+Ge5pZECQYH7pi9FGFn8Wvw04V6vzhVifFDJeeXu2DJ?=
 =?us-ascii?q?86/SwxXYevDIPfQdK0jbmcmSu2AJBSI3pLE02BCmvAcYKCVPERLiWILZh6jzYG?=
 =?us-ascii?q?WLO9HpInzgykrwTgyrBqfdbTrzQVsI+m2NVr6un7kxY0+jppScOH3DKjVWZxy1?=
 =?us-ascii?q?sFWzIslIV2sEBwzlPLhbB1n/FCU9la9v9EVgMSMZ/axvZ9TdfoVVSSLZ+yVF+6?=
 =?us-ascii?q?T4D+UnkKRdUrzopWbg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AwAgDwwRNchxHrdtBkgheBMYJig3yIe?=
 =?us-ascii?q?KR8gXYPAQEYFIdHIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxgJglw?=
 =?us-ascii?q?DAwECIA8BDQEBBAoqAgMBAgYBASQCIgQCAgMBMAEFARwZBYMcggEBAwGaFTyKH?=
 =?us-ascii?q?3CBL4J2AQEFgkOEZggSeYZyhEGBVz+BEYRdhjyCV4lEhgqRTAcCgiQEjycLGIl?=
 =?us-ascii?q?zh1+ZOgIEAgkCBQ8hgSWCDjMaMIMvE4IUF4hehT9yAYEGi0CBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AwAgDwwRNchxHrdtBkgheBMYJig3yIeKR8gXYPAQEYFId?=
 =?us-ascii?q?HIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxgJglwDAwECIA8BDQEBB?=
 =?us-ascii?q?AoqAgMBAgYBASQCIgQCAgMBMAEFARwZBYMcggEBAwGaFTyKH3CBL4J2AQEFgkO?=
 =?us-ascii?q?EZggSeYZyhEGBVz+BEYRdhjyCV4lEhgqRTAcCgiQEjycLGIlzh1+ZOgIEAgkCB?=
 =?us-ascii?q?Q8hgSWCDjMaMIMvE4IUF4hehT9yAYEGi0CBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,353,1539673200"; 
   d="scan'208";a="57493969"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 06:48:49 -0800
Received: from localhost ([::1]:33908 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXoll-0005ri-6H
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 09:48:49 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:38511)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gXofs-0000Ew-C6
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 09:42:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gXofq-0004Xz-TW
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 09:42:44 -0500
Received: from mail-wr1-x433.google.com ([2a00:1450:4864:20::433]:39783)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <peter.maydell@linaro.org>)
	id 1gXofq-0004Vp-Gl
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 09:42:42 -0500
Received: by mail-wr1-x433.google.com with SMTP id t27so5675190wra.6
	for <qemu-devel@nongnu.org>; Fri, 14 Dec 2018 06:42:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:subject:date:message-id:in-reply-to:references:mime-version
	:content-transfer-encoding;
	bh=ocJ+E5sOMsP8YGN7X2pKhQSITlDRtDfGO4yqEUdDpnc=;
	b=QgO2H34FnOqHaHw6XybHUFJoiiTwqm0ZM9HBtTnzOg2+Nk/r2HSBEjxrydvKNhoLxk
	tmT9xoeKB+5Gm0Id8PPtaRv3nw72Mqmt+i0hkChLlctHTk0vYnpnfhxzRtxL/3Ok+GV4
	LtcTBlmYKFI8h6QcKEJpJoxSQvVmt7fv4UjBg=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=ocJ+E5sOMsP8YGN7X2pKhQSITlDRtDfGO4yqEUdDpnc=;
	b=njC8rh3sIaO95FqIb57dv92sM2mUo9/bNkJKojTbY+i/gnvwCcIg+Jkyx9SFUtgm/2
	WVPOAcRpU86tW70RrTQEb96yuBBc9amk5ziaD7jw3Rz/MAUr3sLlnF+XM0okrgxbstKN
	MMlGHYE4pfBObWW5ciz4SfNvfSs4yWjH2O7EOwBhjnEyrLYjSEzXvfmiJJmUPX0SWl/f
	crAdBf0BsKOtyseVws6n/qPpo2P/hl2y04OXqlx/6hGOOOvtOllQrN2/3u6Rqa4Eej3l
	GK0L7aC2C8SQlyLzmsqCwxia198aS1j0XsJb4IEqXTRCJuTewVwtnQXekBEdQMfobMU0
	3Yow==
X-Gm-Message-State: AA+aEWbjSCABBH7lHgoKypzOPOYWBUCpwzv39bp8rpn/WcUTRpnQZ9k/
	CWOnGRkJPTRx0iscvlYeHkUsVlwg8qE=
X-Google-Smtp-Source: AFSGD/WGorvghXrjdKEN6BaV0DgkdbtXXeBpQ2YpvHBCoSuSqkhmcyTmbU1UHbryMphK+UnYUW+/mA==
X-Received: by 2002:adf:b783:: with SMTP id s3mr3005964wre.274.1544798560167; 
	Fri, 14 Dec 2018 06:42:40 -0800 (PST)
Received: from orth.archaic.org.uk (orth.archaic.org.uk. [81.2.115.148])
	by smtp.gmail.com with ESMTPSA id m6sm3263204wrv.24.2018.12.14.06.42.39
	for <qemu-devel@nongnu.org>
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Fri, 14 Dec 2018 06:42:39 -0800 (PST)
From: Peter Maydell <peter.maydell@linaro.org>
To: qemu-devel@nongnu.org
Date: Fri, 14 Dec 2018 14:42:12 +0000
Message-Id: <20181214144214.1260-21-peter.maydell@linaro.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181214144214.1260-1-peter.maydell@linaro.org>
References: <20181214144214.1260-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::433
Subject: [Qemu-devel] [PULL 20/22] tests/test-arm-mptimer: Don't leak string
 memory
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The test-arm-mptimer setup creates a lot of test names using
g_strdup_printf() and never frees them. This is entirely
harmless since it's one-shot test code, but it clutters
up the output from clang's LeakSanitizer. Refactor to
use a helper function so we can free the memory.

Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
Reviewed-by: Richard Henderson <richard.henderson@linaro.org>
Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>
Message-id: 20181204132952.2601-5-peter.maydell@linaro.org
---
 tests/test-arm-mptimer.c | 153 ++++++++++++++++++---------------------
 1 file changed, 69 insertions(+), 84 deletions(-)

diff --git a/tests/test-arm-mptimer.c b/tests/test-arm-mptimer.c
index cb8f2df9141..156a39f50dd 100644
--- a/tests/test-arm-mptimer.c
+++ b/tests/test-arm-mptimer.c
@@ -991,10 +991,25 @@ static void test_timer_zero_load_nonscaled_periodic_to_prescaled_oneshot(void)
     g_assert_cmpuint(timer_get_and_clr_int_sts(), ==, 0);
 }
 
+/*
+ * Add a qtest test that comes in two versions: one with
+ * a timer scaler setting, and one with the timer nonscaled.
+ */
+static void add_scaler_test(const char *str, bool scale,
+                            void (*fn)(const void *))
+{
+    char *name;
+    int *scaler = scale ? &scaled : &nonscaled;
+
+    name = g_strdup_printf("%s=%d", str, *scaler);
+    qtest_add_data_func(name, scaler, fn);
+    g_free(name);
+}
+
 int main(int argc, char **argv)
 {
-    int *scaler = &nonscaled;
     int ret;
+    int scale;
 
     g_test_init(&argc, &argv, NULL);
 
@@ -1012,89 +1027,59 @@ int main(int argc, char **argv)
     qtest_add_func("mptimer/prescaler", test_timer_prescaler);
     qtest_add_func("mptimer/prescaler_on_the_fly", test_timer_prescaler_on_the_fly);
 
-tests_with_prescaler_arg:
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/oneshot scaler=%d", *scaler),
-                        scaler, test_timer_oneshot);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/pause scaler=%d", *scaler),
-                        scaler, test_timer_pause);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/reload scaler=%d", *scaler),
-                        scaler, test_timer_reload);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/periodic scaler=%d", *scaler),
-                        scaler, test_timer_periodic);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/oneshot_to_periodic scaler=%d", *scaler),
-                        scaler, test_timer_oneshot_to_periodic);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/periodic_to_oneshot scaler=%d", *scaler),
-                        scaler, test_timer_periodic_to_oneshot);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_oneshot_counter_to_0 scaler=%d", *scaler),
-                        scaler, test_timer_set_oneshot_counter_to_0);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_periodic_counter_to_0 scaler=%d", *scaler),
-                        scaler, test_timer_set_periodic_counter_to_0);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/noload_oneshot scaler=%d", *scaler),
-                        scaler, test_timer_noload_oneshot);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/noload_periodic scaler=%d", *scaler),
-                        scaler, test_timer_noload_periodic);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/zero_load_oneshot scaler=%d", *scaler),
-                        scaler, test_timer_zero_load_oneshot);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/zero_load_periodic scaler=%d", *scaler),
-                        scaler, test_timer_zero_load_periodic);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/zero_load_oneshot_to_nonzero scaler=%d", *scaler),
-                        scaler, test_timer_zero_load_oneshot_to_nonzero);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/zero_load_periodic_to_nonzero scaler=%d", *scaler),
-                        scaler, test_timer_zero_load_periodic_to_nonzero);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/nonzero_load_oneshot_to_zero scaler=%d", *scaler),
-                        scaler, test_timer_nonzero_load_oneshot_to_zero);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/nonzero_load_periodic_to_zero scaler=%d", *scaler),
-                        scaler, test_timer_nonzero_load_periodic_to_zero);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_periodic_counter_on_the_fly scaler=%d", *scaler),
-                        scaler, test_timer_set_periodic_counter_on_the_fly);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/enable_and_set_counter scaler=%d", *scaler),
-                        scaler, test_timer_enable_and_set_counter);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_counter_and_enable scaler=%d", *scaler),
-                        scaler, test_timer_set_counter_and_enable);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/oneshot_with_counter_0_on_start scaler=%d", *scaler),
-                        scaler, test_timer_oneshot_with_counter_0_on_start);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/periodic_with_counter_0_on_start scaler=%d", *scaler),
-                        scaler, test_timer_periodic_with_counter_0_on_start);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/periodic_counter scaler=%d", *scaler),
-                        scaler, test_periodic_counter);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_counter_periodic_with_zero_load scaler=%d", *scaler),
-                        scaler, test_timer_set_counter_periodic_with_zero_load);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_oneshot_load_to_0 scaler=%d", *scaler),
-                        scaler, test_timer_set_oneshot_load_to_0);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/set_periodic_load_to_0 scaler=%d", *scaler),
-                        scaler, test_timer_set_periodic_load_to_0);
-    qtest_add_data_func(
-        g_strdup_printf("mptimer/zero_load_mode_switch scaler=%d", *scaler),
-                        scaler, test_timer_zero_load_mode_switch);
-
-    if (scaler == &nonscaled) {
-        scaler = &scaled;
-        goto tests_with_prescaler_arg;
+    for (scale = 0; scale < 2; scale++) {
+        add_scaler_test("mptimer/oneshot scaler",
+                        scale, test_timer_oneshot);
+        add_scaler_test("mptimer/pause scaler",
+                        scale, test_timer_pause);
+        add_scaler_test("mptimer/reload scaler",
+                        scale, test_timer_reload);
+        add_scaler_test("mptimer/periodic scaler",
+                        scale, test_timer_periodic);
+        add_scaler_test("mptimer/oneshot_to_periodic scaler",
+                        scale, test_timer_oneshot_to_periodic);
+        add_scaler_test("mptimer/periodic_to_oneshot scaler",
+                        scale, test_timer_periodic_to_oneshot);
+        add_scaler_test("mptimer/set_oneshot_counter_to_0 scaler",
+                        scale, test_timer_set_oneshot_counter_to_0);
+        add_scaler_test("mptimer/set_periodic_counter_to_0 scaler",
+                        scale, test_timer_set_periodic_counter_to_0);
+        add_scaler_test("mptimer/noload_oneshot scaler",
+                        scale, test_timer_noload_oneshot);
+        add_scaler_test("mptimer/noload_periodic scaler",
+                        scale, test_timer_noload_periodic);
+        add_scaler_test("mptimer/zero_load_oneshot scaler",
+                        scale, test_timer_zero_load_oneshot);
+        add_scaler_test("mptimer/zero_load_periodic scaler",
+                        scale, test_timer_zero_load_periodic);
+        add_scaler_test("mptimer/zero_load_oneshot_to_nonzero scaler",
+                        scale, test_timer_zero_load_oneshot_to_nonzero);
+        add_scaler_test("mptimer/zero_load_periodic_to_nonzero scaler",
+                        scale, test_timer_zero_load_periodic_to_nonzero);
+        add_scaler_test("mptimer/nonzero_load_oneshot_to_zero scaler",
+                        scale, test_timer_nonzero_load_oneshot_to_zero);
+        add_scaler_test("mptimer/nonzero_load_periodic_to_zero scaler",
+                        scale, test_timer_nonzero_load_periodic_to_zero);
+        add_scaler_test("mptimer/set_periodic_counter_on_the_fly scaler",
+                        scale, test_timer_set_periodic_counter_on_the_fly);
+        add_scaler_test("mptimer/enable_and_set_counter scaler",
+                        scale, test_timer_enable_and_set_counter);
+        add_scaler_test("mptimer/set_counter_and_enable scaler",
+                        scale, test_timer_set_counter_and_enable);
+        add_scaler_test("mptimer/oneshot_with_counter_0_on_start scaler",
+                        scale, test_timer_oneshot_with_counter_0_on_start);
+        add_scaler_test("mptimer/periodic_with_counter_0_on_start scaler",
+                        scale, test_timer_periodic_with_counter_0_on_start);
+        add_scaler_test("mptimer/periodic_counter scaler",
+                        scale, test_periodic_counter);
+        add_scaler_test("mptimer/set_counter_periodic_with_zero_load scaler",
+                        scale, test_timer_set_counter_periodic_with_zero_load);
+        add_scaler_test("mptimer/set_oneshot_load_to_0 scaler",
+                        scale, test_timer_set_oneshot_load_to_0);
+        add_scaler_test("mptimer/set_periodic_load_to_0 scaler",
+                        scale, test_timer_set_periodic_load_to_0);
+        add_scaler_test("mptimer/zero_load_mode_switch scaler",
+                        scale, test_timer_zero_load_mode_switch);
     }
 
     qtest_start("-machine vexpress-a9");
-- 
2.19.2


