Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 08:31:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 58FCF5805CF
	for <like.xu@linux.intel.com>; Sun, 16 Dec 2018 04:42:31 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 04:42:31 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsoUxdBM2sBFQ+JQWQ/Yl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/z7osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPQPMvpXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+Q4CwzKwBAsE84MvX?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQ1zvMce9W1inn6IPVdR4uu/GNUq9ufsrVzUkkCgTIjk2O?=
 =?us-ascii?q?poz5ITyVzP4Bs22B4OtgSO2glWonqwVqrzirx8csjJPGhpgSylze8iV52ok1KM?=
 =?us-ascii?q?S+RUVmYtCkCINduz+GO4Z1WM8uXnxktSUgxrEYt5O2fDIGxIklyhLHdfCKcpSE?=
 =?us-ascii?q?7xDmWeafIjp3n25pdbewihux8EWtxejxWteo3FtPqydJjNbBu38L2hfO8MaIUO?=
 =?us-ascii?q?F98V2k2TuX1wDc9OVEIUcsmKrfKp4h2aIwloEJvUTMGC/2hV/6jKiMdkUr4uSo?=
 =?us-ascii?q?6uLnbav6ppKEKYN4lgLzPr4zlsCiAuk0KBYCUmab9OimybHu/1X1QLBQgf03lq?=
 =?us-ascii?q?nZvoraJcMepqOhGg9azIMj6wumAzi7ztsYg2cILFZcdB2ciIjpJlfOL+zmAvek?=
 =?us-ascii?q?hFislDZrx/PYMbH7DZTNM2DOkLPgfbZ79k5dxxA/zdFZ55JIFL4BJOj/VVP2tN?=
 =?us-ascii?q?zdFRI5NQu0w+DoCNV7y4MSQ2WPArWWMK/Kq1+H+vovI/WQZI8SoDv9L/kl5/3w?=
 =?us-ascii?q?gnMjll4dYLKk3Z8WaHC+A/RnLF+VYXvqgtcdD2gKuhAyQ/DtiF2HAnZuYW2vVf?=
 =?us-ascii?q?c8+i0jE9DhSoPCXZy2xrqG2ii9A9tRfG8BD1mNFXLhccKDQ+sNbySJZdZslyFB?=
 =?us-ascii?q?WbW/Roty6Be1qQWvzrNmKvbTqDQVsI+m2NVr6umWjxwr6DFvE+yb1GeCSXwymX?=
 =?us-ascii?q?kHECQr1qJyqlAo11GYzKJjiOZZH9EA2/QcaRs3O5fah8xzCdb1URDANoOSVFuo?=
 =?us-ascii?q?S9OmCBk+S9swx5kFZEMrSPu4iRWW5ye2DqVdsrWaCJEw9uqIx3XtKtw7zn/X2K?=
 =?us-ascii?q?Qli3EiQ81GL2rggbRwoVuAT7XVmlmUwv75PZ8X2zTAoSLalTKD?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAADlRxZchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCYoN8iHiLF4INfIgZjkOBcxQYFIRAgwciNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4jDII2BQIDGgEGglsBAQEBAgEBAiAdAQEECikBAgIBAQIGA?=
 =?us-ascii?q?QEKCw0CAiIEAgIDAR0BEgEFARwGEwWDHYFpAw0IAQSZEzyKIHCBL4J2AQEFhHc?=
 =?us-ascii?q?NghQIEnmLM4FXP4ERgl01gleCCgEBChSDCIJXiSCCGJU0LwcCgiQEjAKDMBiBX?=
 =?us-ascii?q?Y91LIoVhQOKEQ8hgSYBggwzGjB0BoI1ghs1iEyFP0ExgQeLLg4XMIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AeAADlRxZchxHrdtBjHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?CYoN8iHiLF4INfIgZjkOBcxQYFIRAgwciNQgNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4jDII2BQIDGgEGglsBAQEBAgEBAiAdAQEECikBAgIBAQIGAQEKCw0CAiIEAgI?=
 =?us-ascii?q?DAR0BEgEFARwGEwWDHYFpAw0IAQSZEzyKIHCBL4J2AQEFhHcNghQIEnmLM4FXP?=
 =?us-ascii?q?4ERgl01gleCCgEBChSDCIJXiSCCGJU0LwcCgiQEjAKDMBiBXY91LIoVhQOKEQ8?=
 =?us-ascii?q?hgSYBggwzGjB0BoI1ghs1iEyFP0ExgQeLLg4XMIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,361,1539673200"; 
   d="scan'208";a="67039344"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 16 Dec 2018 04:42:30 -0800
Received: from localhost ([::1]:42186 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYVkb-0003Az-JI
	for like.xu@linux.intel.com; Sun, 16 Dec 2018 07:42:29 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44508)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gYVkH-0003AM-QH
	for qemu-devel@nongnu.org; Sun, 16 Dec 2018 07:42:11 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gYVif-0008IZ-Qm
	for qemu-devel@nongnu.org; Sun, 16 Dec 2018 07:40:31 -0500
Received: from mail-oi1-x244.google.com ([2607:f8b0:4864:20::244]:43288)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <peter.maydell@linaro.org>)
	id 1gYVid-0008DP-B4
	for qemu-devel@nongnu.org; Sun, 16 Dec 2018 07:40:28 -0500
Received: by mail-oi1-x244.google.com with SMTP id u18so8076450oie.10
	for <qemu-devel@nongnu.org>; Sun, 16 Dec 2018 04:40:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc:content-transfer-encoding;
	bh=DQksBx0hukGNAa0E/7bRD42EwhU3vx/mO9Gk/AUBMZY=;
	b=XUK30s6pmc7AOMvTJgwL+ma2/jTPAAW9tcBdIT14v4KUdLA0in7rQ2zcjw8h3AQpsx
	Ka9m5pQvN7jqRkMpOyWo+WUUASYpuYx3f2SgkJRSwIJNA5k2dIWNFYf2YXur+uJbeuUa
	/hiL/nfUubVrkECIRIwOVZ74KtMlVBDQIB8i8=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=DQksBx0hukGNAa0E/7bRD42EwhU3vx/mO9Gk/AUBMZY=;
	b=sjoi2/fgE1AYaVaI6d1zmlDm/Y0P5PuFW5SQilizHcRW0hjRFDLaS4dH03157YVzRJ
	FR26xxg1fWW47sv9wZuRYISGlmAIyBh5Yv1vDGEeOibbGBnD1C8sFNso5RFnWEG7rQxD
	HOysw9zy99joVhaLBT6i06ig3Fp7PD5E14Oh5jnL45M+vtdGvB/uqMe+LH3h+rNSNIl8
	GibVgo5pTVBJjxlDhb+C1P0o4J2r9yaPKQIdct4ZkLG5f/pYwc1AwKh6x5wrwVRkDRjo
	IbrWCO5+tJp92TQWzPX/s2U/zKHgGW97lqFLi2Ybf41mhkDXKt2KscgIOFQDJIvjZ+2P
	Rg9Q==
X-Gm-Message-State: AA+aEWZ/I3UgpE2Sk88iJiEKtVmtJQcTxKhtTt65rUpUVVjBWbHmCqrj
	ECChwUzNXT5RCHmV2JOkVWsGV/rhcE6D1fXGDVCTzw==
X-Google-Smtp-Source: AFSGD/Ws7LGGPHvYgJiaBCtxxeztR5VzzQe5XLKV6oddEZo/igGXLNcvTrRo0L+IR8M5ubDEP36TYdYuvAaq5SvEUxM=
X-Received: by 2002:aca:1e17:: with SMTP id m23mr3297462oic.332.1544964022993; 
	Sun, 16 Dec 2018 04:40:22 -0800 (PST)
MIME-Version: 1.0
References: <20181112214224.31560-1-contrib@steffen-goertz.de>
	<20181112214224.31560-6-contrib@steffen-goertz.de>
	<CAFEAcA_oxGQY6K4wQ3TTz1moa8rrXd=Hd3bcjE5NM2d=omn0YQ@mail.gmail.com>
	<e1e4c8d7-cb81-7f1d-ae38-a4cac5c85a48@steffen-goertz.de>
	<CAFEAcA_Du4OTLqfNECY=BTvW089RTNu3qpxm2yv=iLL9g-m5qQ@mail.gmail.com>
	<20181216062024.GA6123@stefanha-x1.localdomain>
In-Reply-To: <20181216062024.GA6123@stefanha-x1.localdomain>
From: Peter Maydell <peter.maydell@linaro.org>
Date: Sun, 16 Dec 2018 12:40:11 +0000
Message-ID: <CAFEAcA-jpTXrrn1XWCPwa64XZrK88OQR6pr70Pw7J7URW-B0uw@mail.gmail.com>
To: Stefan Hajnoczi <stefanha@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::244
Subject: Re: [Qemu-devel] [PATCH v5 05/14] hw/nvram/nrf51_nvm: Add nRF51
 non-volatile memories
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Jim Mussared <jim@groklearning.com>,
	=?UTF-8?Q?Steffen_G=C3=B6rtz?= <mail@steffen-goertz.de>,
	=?UTF-8?Q?Steffen_G=C3=B6rtz?= <contrib@steffen-goertz.de>,
	QEMU Developers <qemu-devel@nongnu.org>, Joel Stanley <joel@jms.id.au>,
	Paolo Bonzini <pbonzini@redhat.com>, Julia Suvorova <jusual@mail.ru>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Sun, 16 Dec 2018 at 06:20, Stefan Hajnoczi <stefanha@gmail.com> wrote:
>
> On Mon, Nov 26, 2018 at 05:43:59PM +0000, Peter Maydell wrote:
> > On Mon, 26 Nov 2018 at 00:24, Steffen G=C3=B6rtz <mail@steffen-goertz.d=
e> wrote:
> > > What else is necessary to invalidate stale blocks?
> >
> > You need an AddressSpace that points to the MemoryRegion(s)
> > you're altering, and you need to use the operations on
> > the AddressSpace like address_space_write(). These will
> > under the hood do the right thing with TB invalidation.
>
> I'm not sure about this.

> I see nothing that invalidates TBs in the address_space_write() code for
> MMIO memory regions (not RAM).  Only the RAM case calls
> invalidate_and_set_dirty().

Hmm, I think I see what you mean -- the problem
is because your ram backed region is created with
memory_region_init_rom_device(), which means that
if you try to write to the MR via address_space_write()
you get the guest access path which ends up in the
MemoryRegionOps write function, whereas what we wanted
was to access the MR via the write-host-RAM code path
which updates the dirty state.

> There are a few complications with this device:
>
> 1. Stores from the CPU are only honored when the NRF51_NVMC_CONFIG_WEN
>    write enable bit is set.  NRF51_NVMC_ERASEPCRx and
>    NRF51_NVMC_ERASEALL commands use a separate erase enable bit
>    (NRF51_NVMC_CONFIG_EEN) and are therefore different from normal
>    writes.

i.e. we want guest writes to the region to go
via a write function so we can impose the right semantics.

> 2. Stores from the CPU can only flip 1s to 0s (this is NOR flash).  When
>    we erase a page of flash memory it must be set to 0xff (i.e. flip
>    0s to 1s).

i.e. we have some other operations which need to perform
writes directly on the underlying storage.

> 3. nrf51_nvm.c:flash_write() does not mark the page dirty for live
>    migration.

...and this is the bug we need to avoid: any write to the
underlying storage must update dirty status, both for
migration and for TCG cached code invalidation.

> My questions:
>
> 1. Is the current rom+mmio device approach okay or should it be modelled
>    differently?
>
> 2. Erase operations cannot use ordinary address_space_write() for the
>    reasons mentioned above.  Should this device directly call
>    cpu_physical_memory_set_dirty_range() and tb_invalidate_phys_range()?

I think that these functions are too low level for devices to be
calling directly, and we should have something at the MemoryRegion or
AddressSpace level to do what we need. Perhaps some API for
"this is a rom_device MemoryRegion, create me a new MemoryRegion
which is a pure RAM MemoryRegion view of the underlying storage".
(The device could then put that into a private AddressSpace and
use that for when it wants to do updates directly to storage.)
Or perhaps we could just say "practically all uses of rom_device
MemoryRegions will want to be able to write to the underlying
storage, we should provide an API that handles flushing for them".

Paolo, do you have a view?

(Our only other users of rom_device are hw/block/pflash_cfi0[12].c;
I think they get away with this because they mostly flip the device
out of romd mode before updating the backing storage. That works
but is very heavyweight, and is almost working by accident rather
than design.)

thanks
-- PMM

