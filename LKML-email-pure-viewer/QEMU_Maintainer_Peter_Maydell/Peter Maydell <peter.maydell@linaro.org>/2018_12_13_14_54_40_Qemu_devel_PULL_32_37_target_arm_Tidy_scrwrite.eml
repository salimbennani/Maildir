Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:38:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E53BE58079D
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 07:11:39 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 07:11:39 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AqlKU4hQkIaLfnGct54Qsi066Wtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zZxGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJ+j6xVpxCupxJwzIDbfY+VLPhzcKHScN8HS2dNQtheVzdaD4+g?=
 =?us-ascii?q?bIYCFfYNMPxEo4XhoVYFsBuwBROrBOPq0jJGnGH53bEk3OQ7DArI2xYvHtITv3?=
 =?us-ascii?q?vKqNX1MLoZXOetzKbW0TXMcelW1S346IfSchEuvO+DXbZ0ccfKzUkvFgXFgU+K?=
 =?us-ascii?q?qYziJT+V0f4Ns2eC4udmSOmhiHYnphlvrjSzxcogkJTFip8Wx1ze6yl0zoY4Kc?=
 =?us-ascii?q?elREN5edKoDodcuz2HO4ZzQc4tWH1ktSMnxrIbpZK2eS0HxIohyhXCcfKIaZKI?=
 =?us-ascii?q?7QjmVOuJITd3mnZleLWniha28Eig0fH8VtKu3FZFqCpFj8PAtncX1xzc8sSHS/?=
 =?us-ascii?q?198Vm92TuXyQzf9uJJLVopmabGKJMt2KA8m5QTvEjZAyP7ml36jKqMeUUl/uio?=
 =?us-ascii?q?5f7nYrLjppKELo97lAT+Mrk3lsOiH+s4LBYBX2yC9eun073j4Ev5T6lUgf0tla?=
 =?us-ascii?q?XZtJHaJccFqaKjDA5Vz54u6xK+DzegzdQZkmMLLFNDeBKbkYfpP0vCL+z/Dfe6?=
 =?us-ascii?q?mFmsljBrx/bJPr3nH5XBNH/DkK3ufbpl8U5T1BIzzcxD55JTErwBJPPzWkzvu9?=
 =?us-ascii?q?DCAR45Lhe5w+LmCNV7y4MfVniDAq6fMKPOr1CI4vgjLPWLZI8Q637ALeM47avu?=
 =?us-ascii?q?kWMhgg1aOq2oxocMLna/GPtgPgOee3Wrh94AFWIDuE05VPDrj1uZFideYmv3U6?=
 =?us-ascii?q?8i6zVoNYS9EI2WQ4mshKCGjj62G4ATam1YB1TJC3rxaoifR98KbySdJNInlSYL?=
 =?us-ascii?q?AqO8QY0s3g37qQnh1rB8JfDV8CBLiZW2zdVw+qjfmA8/8RRyCMKS1XzLSHt7zU?=
 =?us-ascii?q?0SQDpj5K1jrFY1716S3aV8h7QMDdFP6ukPVw4rOZPYy8R+Ctb7QAWHec2GHgX1?=
 =?us-ascii?q?Cu66CC08G4pii+QFZFxwTo2v?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ApAgCJdRJcmBHrdtBjgheBMYJijHSNQ?=
 =?us-ascii?q?XyWWIFuGRgUh0UiNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxgJglw?=
 =?us-ascii?q?DAwECLwETCiwDAQIGAQEfKQgDAVMZBYMcggEBBKg+hUCEb4d9hD+BVz+BEYJdh?=
 =?us-ascii?q?gOFDgKhDwcCgiQEjyYLGJFKLJkdgUaCDjMaMIMvE4IUF44dQTEBgQaKUYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ApAgCJdRJcmBHrdtBjgheBMYJijHSNQXyWWIFuGRgUh0U?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxgJglwDAwECLwETCiwDA?=
 =?us-ascii?q?QIGAQEfKQgDAVMZBYMcggEBBKg+hUCEb4d9hD+BVz+BEYJdhgOFDgKhDwcCgiQ?=
 =?us-ascii?q?EjyYLGJFKLJkdgUaCDjMaMIMvE4IUF44dQTEBgQaKUYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="56211927"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 07:10:53 -0800
Received: from localhost ([::1]:53166 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXSdY-00024V-Eu
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 10:10:52 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36033)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gXSOU-0004RX-5p
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:55:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gXSOR-0007aF-FE
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:55:16 -0500
Received: from orth.archaic.org.uk ([2001:8b0:1d0::2]:53510)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pm215@archaic.org.uk>)
	id 1gXSOQ-000747-I0
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 09:55:14 -0500
Received: from pm215 by orth.archaic.org.uk with local (Exim 4.89)
	(envelope-from <pm215@archaic.org.uk>) id 1gXSOF-0007Mg-31
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 14:55:03 +0000
From: Peter Maydell <peter.maydell@linaro.org>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 14:54:40 +0000
Message-Id: <20181213145445.17935-33-peter.maydell@linaro.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181213145445.17935-1-peter.maydell@linaro.org>
References: <20181213145445.17935-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2001:8b0:1d0::2
Subject: [Qemu-devel] [PULL 32/37] target/arm: Tidy scr_write
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Richard Henderson <richard.henderson@linaro.org>

Because EL3 has a fixed execution mode, we can properly decide
which of the bits are RES{0,1}.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
Message-id: 20181203203839.757-8-richard.henderson@linaro.org
Reviewed-by: Peter Maydell <peter.maydell@linaro.org>
Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
---
 target/arm/cpu.h    |  2 --
 target/arm/helper.c | 14 +++++++++-----
 2 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/target/arm/cpu.h b/target/arm/cpu.h
index 20d97b66def..b8dbdb5e014 100644
--- a/target/arm/cpu.h
+++ b/target/arm/cpu.h
@@ -1312,8 +1312,6 @@ static inline void xpsr_write(CPUARMState *env, uint32_t val, uint32_t mask)
 #define SCR_FIEN              (1U << 21)
 #define SCR_ENSCXT            (1U << 25)
 #define SCR_ATA               (1U << 26)
-#define SCR_AARCH32_MASK      (0x3fff & ~(SCR_RW | SCR_ST))
-#define SCR_AARCH64_MASK      (0x3fff & ~SCR_NET)
 
 /* Return the current FPSCR value.  */
 uint32_t vfp_get_fpscr(CPUARMState *env);
diff --git a/target/arm/helper.c b/target/arm/helper.c
index bf020364e1d..1dad277804f 100644
--- a/target/arm/helper.c
+++ b/target/arm/helper.c
@@ -1279,11 +1279,15 @@ static void vbar_write(CPUARMState *env, const ARMCPRegInfo *ri,
 
 static void scr_write(CPUARMState *env, const ARMCPRegInfo *ri, uint64_t value)
 {
-    /* We only mask off bits that are RES0 both for AArch64 and AArch32.
-     * For bits that vary between AArch32/64, code needs to check the
-     * current execution mode before directly using the feature bit.
-     */
-    uint32_t valid_mask = SCR_AARCH64_MASK | SCR_AARCH32_MASK;
+    /* Begin with base v8.0 state.  */
+    uint32_t valid_mask = 0x3fff;
+
+    if (arm_el_is_aa64(env, 3)) {
+        value |= SCR_FW | SCR_AW;   /* these two bits are RES1.  */
+        valid_mask &= ~SCR_NET;
+    } else {
+        valid_mask &= ~(SCR_RW | SCR_ST);
+    }
 
     if (!arm_feature(env, ARM_FEATURE_EL2)) {
         valid_mask &= ~SCR_HCE;
-- 
2.19.2


