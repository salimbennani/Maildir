Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:52:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6D31A5807A0
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 08:54:25 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 08:54:25 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AvM0yiRzpwgna4vnXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoXL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJUBAPYcM+ZArYTzpVQDoQawCAWwGuzv0SRFhmPq0aAgz+gtDR3K0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6v0qbI0SvMb+lL0jn68ofJcg0uru+IXbJ0bMHczlEvGB3ZjlqO?=
 =?us-ascii?q?s4zpJTaV2f4NsmeG8eVgUeavhnUjqwFwpDig3N0sio7TioIS0FDE+jx0zYAoLt?=
 =?us-ascii?q?O7UE52ecCoHIdTui2AKod6X8AvT3t2tCs0yrAKo4O3cSoSxJg5xhPTd/6Kfo2G?=
 =?us-ascii?q?4h/gT+mdPTJ1iX1mdb++iBu/9FasxvH5W8Sx3ltHoSVIn9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/lAIUA1jqrbN4UhzqQ/lpoVrETPBCj2mF/5jKOOd0Uk/Pan?=
 =?us-ascii?q?6/j/b7n4upORNJV4hhzjPqktgMCzH+o1PwgUU2SG++mwzLjj8lf4QLVOgP02iK?=
 =?us-ascii?q?7ZsJXCKMQCuKG5BhJV3p8+5BmhETepztAYkWAcI1JCZRKHiZTmNE/VIPz/Cfe/?=
 =?us-ascii?q?glesnylxy/HJI73sGpHNLnnFkLf8crdx8U9cyAwvzd9B45JYEK0OIPX2WkLqst?=
 =?us-ascii?q?zYCRk5MwOyw+b6Etl90ZkeWW2XDq+DLKzSqUOI5v4oI+SUYI8VuTX9JOY/6//h?=
 =?us-ascii?q?kH80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TL+itVuZTDQGZ2quR7?=
 =?us-ascii?q?luoXY/CZm6FsHFQYaihqHH2z20WZhfZ2RDA1bLFm/0doKCQLAVZSePZ8NsjDEA?=
 =?us-ascii?q?BoWnUJIrgBSntQvmzOh+I+/JvyEVq5/nkcJ4/vDejg0a8ztyAMKAlWaXQDZvg2?=
 =?us-ascii?q?kKSjQqib15ulF30VyZ0KJ10MBfQOZS7PNASAtyFZPaw+FgENf0Elbbf9yJQUyq?=
 =?us-ascii?q?BNWrBz08VMk2xfcKYkB0AdLkiQrMiXmEGbgQwoSGGJEuuofVznT8I8I1n27LyK?=
 =?us-ascii?q?Q7yVwvU8dCMWmOgq95/hLUQYnTnBPKxO6Raa0A0XuVpy+4xm2UsRQdCVYoXA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AtAAD76g9cmBHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJPE4N7iBlfizGCDXyRWoR8gXMUGBSHLiI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQEBCAsLBhsOIwyCNgUCAxoBBoJbAQEBAQIBAQIgBBkBAQQKJAUBAgIBAQIGA?=
 =?us-ascii?q?QEKCw0CAiIEAgIDAR4SAQUBHAYTBYMcgXoIAQSaJjyKHXB8M4J2AQEFhygIEnm?=
 =?us-ascii?q?LMIFXP4ERgl01iAWCV4k6A5dABwKCIgSPKxiRQCyYeA8hgSWCDjMaMHQGgjWCG?=
 =?us-ascii?q?wwXEohMhT9BMYEHiGyBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AtAAD76g9cmBHrdtBkHQEBBQEHBQGBUQgBCwGBMIJPE4N?=
 =?us-ascii?q?7iBlfizGCDXyRWoR8gXMUGBSHLiI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOI?=
 =?us-ascii?q?wyCNgUCAxoBBoJbAQEBAQIBAQIgBBkBAQQKJAUBAgIBAQIGAQEKCw0CAiIEAgI?=
 =?us-ascii?q?DAR4SAQUBHAYTBYMcgXoIAQSaJjyKHXB8M4J2AQEFhygIEnmLMIFXP4ERgl01i?=
 =?us-ascii?q?AWCV4k6A5dABwKCIgSPKxiRQCyYeA8hgSWCDjMaMHQGgjWCGwwXEohMhT9BMYE?=
 =?us-ascii?q?HiGyBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="54731914"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 08:54:24 -0800
Received: from localhost ([::1]:40093 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWlId-0003wK-MS
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 11:54:23 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47535)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gWlH1-0002ZP-NI
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:52:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gWlH0-0005Ul-OT
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:52:43 -0500
Received: from mail-ot1-x344.google.com ([2607:f8b0:4864:20::344]:37647)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <peter.maydell@linaro.org>)
	id 1gWlH0-0005Tq-Fw
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:52:42 -0500
Received: by mail-ot1-x344.google.com with SMTP id 40so14687322oth.4
	for <qemu-devel@nongnu.org>; Tue, 11 Dec 2018 08:52:42 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc; bh=NPENoEtjOyEBHK8U2w7OmWEyWEFnDUgtlDT0m6hUEoI=;
	b=cDbXTQ6SndDmPFu2IZz+tB0AnyT569OJVYOEXLsVKU/tFhL7xOwbX8CXisZ+kQJ2Mq
	w40PpfD9EIjUUSm0jnvf5vDDj15sQge+hyhGwMfGE8mtfzqv9BO6pZzhluGzGJXesLEm
	o2MGBv9uPRy77+wFyM+5Gm8H11sOITsoRZSAo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc;
	bh=NPENoEtjOyEBHK8U2w7OmWEyWEFnDUgtlDT0m6hUEoI=;
	b=gwArgQVRY92DhSirfLRJH4A7dtcX2DWdVDryqRR2VZbQE8GEJg+h1MpuimekJjwZ4t
	F5Li5ej+WXGe8aMiuo1DkQ0RGh14+WrwSmqunbMXYfYEJWJYOdk4KXefI4Y6WnJNlsdq
	114w45HuTwaQlLE1BEOqoQBOCnz71gdK57+6Osrjb+vGC+QoPfW3pMrraAoK9Ot5zJh1
	ccmQ3QJLcFjICWNtgmofwoq237ZUhwcOGr6xL2Sljh4+ZsI9Vc/eJl67Tn3ExW41F+Am
	ni2EPlKH9HbqQqQ4Y6Z/bvDJQRKNP0+YIV4YzwmR6sqxgxymoQ6NwdMsd2eOQTjJrZ3N
	uNSQ==
X-Gm-Message-State: AA+aEWaklFd3Og4csAbzODm3alpA6WR6eFJ2r82uNqisi2klz7l4gbAT
	x024IDTZFZ3jLCg/3zHCS8dhlOZc5ZuokmL6xU5mkvp9
X-Google-Smtp-Source: AFSGD/VPmVk2NryqglTsx6TBYoTx3bB3Zcl9xbj8HR1awn5DvAiY1P2WmZpaELFeQb21o/P2TNFA3ltcUECaXfi4lLk=
X-Received: by 2002:a9d:bf7:: with SMTP id 110mr12318959oth.201.1544547161801; 
	Tue, 11 Dec 2018 08:52:41 -0800 (PST)
MIME-Version: 1.0
References: <20181207103631.28193-1-richard.henderson@linaro.org>
	<20181207103631.28193-18-richard.henderson@linaro.org>
In-Reply-To: <20181207103631.28193-18-richard.henderson@linaro.org>
From: Peter Maydell <peter.maydell@linaro.org>
Date: Tue, 11 Dec 2018 16:52:30 +0000
Message-ID: <CAFEAcA_stGu-L5oH2gLbmsnS2QVPOxz4kg-ToJQfWSHmMf1unA@mail.gmail.com>
To: Richard Henderson <richard.henderson@linaro.org>
Content-Type: text/plain; charset="UTF-8"
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::344
Subject: Re: [Qemu-devel] [PATCH 17/26] target/arm: Reuse aa64_va_parameters
 for setting tbflags
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: QEMU Developers <qemu-devel@nongnu.org>,
	Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, 7 Dec 2018 at 10:37, Richard Henderson
<richard.henderson@linaro.org> wrote:
>
> The arm_regime_tbi{0,1} functions are replacable with the new function
> by giving the lowest and highest address.
>
> Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
> ---
>  target/arm/cpu.h    | 35 -----------------------------
>  target/arm/helper.c | 55 +++++++++------------------------------------
>  2 files changed, 10 insertions(+), 80 deletions(-)

> diff --git a/target/arm/helper.c b/target/arm/helper.c
> index 99ceed2cab..3ad5909b1e 100644
> --- a/target/arm/helper.c
> +++ b/target/arm/helper.c
> @@ -8967,48 +8967,6 @@ static inline ARMMMUIdx stage_1_mmu_idx(ARMMMUIdx mmu_idx)
>      return mmu_idx;
>  }
>
> -/* Returns TBI0 value for current regime el */
> -uint32_t arm_regime_tbi0(CPUARMState *env, ARMMMUIdx mmu_idx)
> -{
> -    TCR *tcr;
> -    uint32_t el;
> -
> -    /* For EL0 and EL1, TBI is controlled by stage 1's TCR, so convert
> -     * a stage 1+2 mmu index into the appropriate stage 1 mmu index.
> -     */
> -    mmu_idx = stage_1_mmu_idx(mmu_idx);
> -
> -    tcr = regime_tcr(env, mmu_idx);
> -    el = regime_el(env, mmu_idx);
> -
> -    if (el > 1) {
> -        return extract64(tcr->raw_tcr, 20, 1);
> -    } else {
> -        return extract64(tcr->raw_tcr, 37, 1);
> -    }
> -}
> -
> -/* Returns TBI1 value for current regime el */
> -uint32_t arm_regime_tbi1(CPUARMState *env, ARMMMUIdx mmu_idx)
> -{
> -    TCR *tcr;
> -    uint32_t el;
> -
> -    /* For EL0 and EL1, TBI is controlled by stage 1's TCR, so convert
> -     * a stage 1+2 mmu index into the appropriate stage 1 mmu index.
> -     */
> -    mmu_idx = stage_1_mmu_idx(mmu_idx);
> -
> -    tcr = regime_tcr(env, mmu_idx);
> -    el = regime_el(env, mmu_idx);
> -
> -    if (el > 1) {
> -        return 0;
> -    } else {
> -        return extract64(tcr->raw_tcr, 38, 1);
> -    }
> -}
> -
>  /* Return the TTBR associated with this translation regime */
>  static inline uint64_t regime_ttbr(CPUARMState *env, ARMMMUIdx mmu_idx,
>                                     int ttbrn)
> @@ -13041,9 +12999,16 @@ void cpu_get_tb_cpu_state(CPUARMState *env, target_ulong *pc,
>
>          *pc = env->pc;
>          flags = ARM_TBFLAG_AARCH64_STATE_MASK;
> -        /* Get control bits for tagged addresses */
> -        flags |= (arm_regime_tbi0(env, mmu_idx) << ARM_TBFLAG_TBI0_SHIFT);
> -        flags |= (arm_regime_tbi1(env, mmu_idx) << ARM_TBFLAG_TBI1_SHIFT);
> +
> +#ifndef CONFIG_USER_ONLY
> +        /* Get control bits for tagged addresses.  Note that the
> +         * translator only uses this for instruction addresses.
> +         */
> +        flags |= (aa64_va_parameters(env, 0, mmu_idx, false).tbi
> +                  << ARM_TBFLAG_TBI0_SHIFT);
> +        flags |= (aa64_va_parameters(env, -1, mmu_idx, false).tbi
> +                  << ARM_TBFLAG_TBI1_SHIFT);
> +#endif

This has lost the bit of the old functions that converted
the stage 1+2 MMU index into a stage 1 MMU index. The call
to regime_el() in aa64_va_parameters() will assert if it is
passed ARMMMUIdx_S12NSE0 or ARMMMUIdx_S12NSE1. (In the code
paths in the get_phys_addr() functions, this is handled by
the top level get_phys_addr() code, so get_phys_addr_lpae()
never sees a stage 1+2 MMU index.)

thanks
-- PMM

