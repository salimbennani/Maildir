Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:39:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 30AB8580375
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 05:37:53 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 05:37:52 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2A7KCRfKfF7tcMytKHI3IX+BlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW/Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgqxcoh2hqRNwzYHJboGNNvdwfKzQcc4USGZdQMlRTDdMDp+/?=
 =?us-ascii?q?YoYVE+YMJ/pUo5X7qlATrRW+Hw6sBOb3xzFSmHD2wbM10/48Gg/BxgMhH88Bv2?=
 =?us-ascii?q?rQrNXxKawfVvi1w7fUzTrddfNawzL955LIcx88v/6MWbZwfNHVyUkuEQPKlE+Q?=
 =?us-ascii?q?qYv/MzOSzOQNvHGW4ux9Xuysk24qsx99riSsy8s2l4XFm4EYxkra+Sh3wIs5P8?=
 =?us-ascii?q?C0RUxjbdK6DJdcqzyWOo51T8w5X21lvTs2xaAatZO+eSUG1pIqzAPFZfOdaYiH?=
 =?us-ascii?q?+BfjWf6RIThmgHJlf6qyhxKz8Ui71u38TdO40FlMripYiNXMsWoN1xPL5siGTP?=
 =?us-ascii?q?ty4Fuh1C6R2wzP6exIO104mbfYJpI73LI9mJoevV7eEiL0gEn2ibWZdkQg+uim?=
 =?us-ascii?q?8eTnZbDmq4eFN4BqjwH+L70ildGhDuQmLAcOW3GX9v+71L3++032XKtFjuYxnq?=
 =?us-ascii?q?ndsZDaJtoUqrS2Ag9Iyosj7xe/DzG70NUXh3UHLVRFeA6ZgIjtIV3BPPf4DfKk?=
 =?us-ascii?q?jlSqlzdrwf/GPrv8ApnXKXjDirjhca5n60FA0Aoz0cxf55VMB7EFIfLzWVH+uM?=
 =?us-ascii?q?bXDx8kKAG0x+fnCNNg1oIRQ26PA6mZML/Mvl+M/O4gP+6MZIpG8Av7MOUvsv7y?=
 =?us-ascii?q?kWciyxhaeaiywYBRbne+EfJ7ZUKDbj3pi9YFFG4M+Q0mUO3tjkbFSDNWejO+Ur?=
 =?us-ascii?q?wx4mIGDpm7B9LGT4GpnLvTxSq+A9haa35LDhWWHG71ep6Yc/ELbi2UP4lmiDNT?=
 =?us-ascii?q?TqWrSYIqyUSzshTnwaFsNOve934kssf62d1oouTJkDk08jp7Cdnb1HuCCyltk2?=
 =?us-ascii?q?YVAjM7wq17iUp6zFiFzO5/mfMLO8ZU4qZxXxs3L9b5xv12BtT2ElbZc8uEUhCj?=
 =?us-ascii?q?S8SqDDU1ZtYwxdYUZAB6Adr03UOL5DajH7JAz+/DP5cz6K+Jh3U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AjAABHggZchxHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJijBJfiy+ZVoFuGRgUiBEiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?vgjYFAgMYCYJcAwMBAiQLARMKKQMDAQIGAQFICAMBUwcSBYMcggIBBKVQM4VAh?=
 =?us-ascii?q?HOHb4QvgVc/g26Ef4YSAo8xkRYHAoIgBI8SCxiRJgiIfY9wKYEdgg0zGjCDL4I?=
 =?us-ascii?q?mARcSjgtBMYEHiEVWgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AjAABHggZchxHrdtBjHQEBBQEHBQGBUQgBCwGBMIJijBJ?=
 =?us-ascii?q?fiy+ZVoFuGRgUiBEiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMYCYJcA?=
 =?us-ascii?q?wMBAiQLARMKKQMDAQIGAQFICAMBUwcSBYMcggIBBKVQM4VAhHOHb4QvgVc/g26?=
 =?us-ascii?q?Ef4YSAo8xkRYHAoIgBI8SCxiRJgiIfY9wKYEdgg0zGjCDL4ImARcSjgtBMYEHi?=
 =?us-ascii?q?EVWgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="53750523"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 05:37:52 -0800
Received: from localhost ([::1]:56799 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUAtb-0006C8-A5
	for like.xu@linux.intel.com; Tue, 04 Dec 2018 08:37:51 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58219)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gUAmK-0007xs-ET
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:30:21 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pm215@archaic.org.uk>) id 1gUAmG-0001FD-KV
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:30:20 -0500
Received: from orth.archaic.org.uk ([2001:8b0:1d0::2]:53236)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pm215@archaic.org.uk>)
	id 1gUAm7-0000pO-4L; Tue, 04 Dec 2018 08:30:07 -0500
Received: from pm215 by orth.archaic.org.uk with local (Exim 4.89)
	(envelope-from <pm215@archaic.org.uk>)
	id 1gUAlt-0008Bm-Iw; Tue, 04 Dec 2018 13:29:53 +0000
From: Peter Maydell <peter.maydell@linaro.org>
To: qemu-arm@nongnu.org,
	qemu-devel@nongnu.org
Date: Tue,  4 Dec 2018 13:29:48 +0000
Message-Id: <20181204132952.2601-2-peter.maydell@linaro.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181204132952.2601-1-peter.maydell@linaro.org>
References: <20181204132952.2601-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2001:8b0:1d0::2
Subject: [Qemu-devel] [PATCH 1/5] target/arm: Free name string in
 ARMCPRegInfo hashtable entries
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: patches@linaro.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

When we add a new entry to the ARMCPRegInfo hash table in
add_cpreg_to_hashtable(), we allocate memory for tehe
ARMCPRegInfo struct itself, and we also g_strdup() the
name string. So the hashtable's value destructor function
must free the name string as well as the struct.

Spotted by clang's leak sanitizer. The leak here is a
small one-off leak at startup, because we don't support
CPU hotplug, and so the only time when we destroy
hash table entries is for the case where ARM_CP_OVERRIDE
means we register a wildcard entry and then override it later.

Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
---
 target/arm/cpu.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/target/arm/cpu.c b/target/arm/cpu.c
index 60411f6bfe0..b84a6c0e678 100644
--- a/target/arm/cpu.c
+++ b/target/arm/cpu.c
@@ -642,6 +642,20 @@ uint64_t arm_cpu_mp_affinity(int idx, uint8_t clustersz)
     return (Aff1 << ARM_AFF1_SHIFT) | Aff0;
 }
 
+static void cpreg_hashtable_data_destroy(gpointer data)
+{
+    /*
+     * Destroy function for cpu->cp_regs hashtable data entries.
+     * We must free the name string because it was g_strdup()ed in
+     * add_cpreg_to_hashtable(). It's OK to cast away the 'const'
+     * from r->name because we know we definitely allocated it.
+     */
+    ARMCPRegInfo *r = data;
+
+    g_free((void *)r->name);
+    g_free(r);
+}
+
 static void arm_cpu_initfn(Object *obj)
 {
     CPUState *cs = CPU(obj);
@@ -649,7 +663,7 @@ static void arm_cpu_initfn(Object *obj)
 
     cs->env_ptr = &cpu->env;
     cpu->cp_regs = g_hash_table_new_full(g_int_hash, g_int_equal,
-                                         g_free, g_free);
+                                         g_free, cpreg_hashtable_data_destroy);
 
     QLIST_INIT(&cpu->pre_el_change_hooks);
     QLIST_INIT(&cpu->el_change_hooks);
-- 
2.19.2


