Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:05:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 657EA5805FC
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 06:45:24 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 06:45:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AdstNOhK01dXMXGoIrtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfKf3xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTA382/Zjc5/jKxUrx29qBJx3pbUbYOXOvdxY6/Qc88WSnRaXstKSyxMAZmx?=
 =?us-ascii?q?Y5cVAuYdP+tVqZT2qVsUrRu5AAmhHPnhxSFUhnDox60xzuMvHhvG3QM9Ad0OtH?=
 =?us-ascii?q?DUp8jyOacKT++10LfHzS/ZY/NTwzj86JXHfQ4lofGIRr9wdcvRyU81GAPfiVWc?=
 =?us-ascii?q?s4vlPyma1ukUtWWQ8uluVfq3hmI5tw18oSKjytoxhoTKnI4Z1F7J+CVjzIooJ9?=
 =?us-ascii?q?C0UE12bcO+HJdOrS2WKpZ6T8M4T211tys3ybsLsoOhcicQ0pQo3RvfZuSHc4eW?=
 =?us-ascii?q?5hLjU/6cITN5hHJ+ZLK/nAy+8Uemyu3hTMW010xKriVdntnNsHACyQDT59CZRv?=
 =?us-ascii?q?dh/UqtwyuD2x3Q5+1eP0w5m6rWJ4Q8zrMyjpYTtF7MHi7ymEX4lq+WcUAk9/Cx?=
 =?us-ascii?q?6+v5Z7Xmu4aQOJJqhQHgLKsuntWzDv8/MggTWWiU5fqz1Kbk8U39QbVKjeM5nr?=
 =?us-ascii?q?PWsZDHPckboq+5AwlI0ocs8Rq/DjGm0MgGknkDNl5KZBWHj43yNlHIJ/D4C/i/?=
 =?us-ascii?q?g1KxkDtxwPDGJLLhDo3XLnffiLfhYap960lExQo3zNBf5IxbBqsOIfLuQULxsN?=
 =?us-ascii?q?3YDhkkMw272ernCdN91p8AVmKLGKOWLKTSsVrbrt8pOPSGMY8JpC7meb9i4//1?=
 =?us-ascii?q?kWR/n1gbcq+0m5wNZze9F/ViJkyfJn30ntYGF3xNpwc7UanmhUOPVW1uYW2vVf?=
 =?us-ascii?q?c57zA/FIX0FIrGW8WhjaKM2GKhE4RLa3taIlaLF3juasODQfhbcz+YIMJqjmkZ?=
 =?us-ascii?q?U6O8QZQqzxCkuVzGzO9+I+/JvyEVq5/n/N5y4eLViFc17zMnId6a1jS1Qn15hC?=
 =?us-ascii?q?stTi460aR76Rhlx0uOy+59iu1UGNhXz/dIVA4gMtjb1eMsWIO6YR7IYtrcEAXu?=
 =?us-ascii?q?ed6hGzxkFt8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUBACvwRNchxHrdtBkgheBMYJig3yIe?=
 =?us-ascii?q?J9/hH0UgV8SAQEYFIMshBsiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQI?=
 =?us-ascii?q?DGAmCXAMDAQIgBAsBDQEBBAoqAgMBAgYBASQCIgQCAgMBMAEFARwQCQWDHIIBA?=
 =?us-ascii?q?QMBmhU8ih9wfDOCdgEBBYJDhGYIEnmGcoRBgVc/gRGCFIVogx2CV4k6CiaHM49?=
 =?us-ascii?q?9BwKCJASPJwsYgV2IFjeHKCyZDgIEAgkCBQ8hgSWCDjMaMIMvE4IRAxcSiEyFP?=
 =?us-ascii?q?3IBgQaLQIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AUBACvwRNchxHrdtBkgheBMYJig3yIeJ9/hH0UgV8SAQE?=
 =?us-ascii?q?YFIMshBsiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAMDAQIgB?=
 =?us-ascii?q?AsBDQEBBAoqAgMBAgYBASQCIgQCAgMBMAEFARwQCQWDHIIBAQMBmhU8ih9wfDO?=
 =?us-ascii?q?CdgEBBYJDhGYIEnmGcoRBgVc/gRGCFIVogx2CV4k6CiaHM499BwKCJASPJwsYg?=
 =?us-ascii?q?V2IFjeHKCyZDgIEAgkCBQ8hgSWCDjMaMIMvE4IRAxcSiEyFP3IBgQaLQIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,353,1539673200"; 
   d="scan'208";a="56369407"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 06:45:22 -0800
Received: from localhost ([::1]:33887 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXoiQ-0003GE-1s
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 09:45:22 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:38249)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gXofX-0008Me-Rx
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 09:42:25 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <peter.maydell@linaro.org>) id 1gXofW-0004GQ-EG
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 09:42:23 -0500
Received: from mail-wm1-x335.google.com ([2a00:1450:4864:20::335]:36477)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <peter.maydell@linaro.org>)
	id 1gXofW-0004Eq-74
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 09:42:22 -0500
Received: by mail-wm1-x335.google.com with SMTP id a18so6060893wmj.1
	for <qemu-devel@nongnu.org>; Fri, 14 Dec 2018 06:42:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:subject:date:message-id:in-reply-to:references:mime-version
	:content-transfer-encoding;
	bh=sEd4o/P6TtT/xiZnlj1YU+bU4hPJjApnlkUfuGsu6eo=;
	b=CfwOtjSxquUK56PfnXmyKbdcdRM+W1jsGCkciDwTcQPIaePyg06obFjh/a1oa3d/Hz
	3VhSEC0Zanm+YEfrKnpvM80FpY6oG5u0eHlgSIeaYhMoTQAKFhs9crzyOdoLywZWQCGf
	z4KuUmZvbuVWXukfgM7fndlGlPtf09wpfCak4=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=sEd4o/P6TtT/xiZnlj1YU+bU4hPJjApnlkUfuGsu6eo=;
	b=cmWXqSD1TSdvIqOmOjKQX5zNDRngzrRekdraTZzMnOaPwUjiHSdMdMcZ61kXafVtP1
	3VRUJkVIpqOi3ehm9EXBY34cyx7JBNfK5hn3Nt5K2DaFpz/Ys9N/tfGFyh7Q6Jakc42c
	T/bdzZFl4zDWi7CK7iPPvf293XIj9k71eMhG7kiCOS3a8bNhasoXcCjw6Inw4lTu8mF2
	gRLS7WM64EpcYBBnGmoD9+/0/LU/6F8Z+aqSXOOa83421DcNj+ZrMI6hXqtRMnmcDh+2
	M/DlSbZUFeCqhyos2TO6v8tySpctu9jrpfDrDvL//VhDPRHG1nhf9e2CTHRoPEoR/Dlt
	1BPg==
X-Gm-Message-State: AA+aEWaXo8BHBYmGyJh2LAJYsJf9qd8sIE9SieIS7vpjC1bn/xRpQASX
	nqwQwR9skk3usSFjF4mIS7vKVsXu6E8=
X-Google-Smtp-Source: AFSGD/WtehE1h1taZYALAhNuENd/lz0u9rRvnce7bKNP2EuCVuZZGm7TsR8e8uWTAzXFK1WNRL7Rfg==
X-Received: by 2002:a1c:7ec4:: with SMTP id z187mr3434582wmc.43.1544798540879; 
	Fri, 14 Dec 2018 06:42:20 -0800 (PST)
Received: from orth.archaic.org.uk (orth.archaic.org.uk. [81.2.115.148])
	by smtp.gmail.com with ESMTPSA id m6sm3263204wrv.24.2018.12.14.06.42.19
	for <qemu-devel@nongnu.org>
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Fri, 14 Dec 2018 06:42:20 -0800 (PST)
From: Peter Maydell <peter.maydell@linaro.org>
To: qemu-devel@nongnu.org
Date: Fri, 14 Dec 2018 14:41:55 +0000
Message-Id: <20181214144214.1260-4-peter.maydell@linaro.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181214144214.1260-1-peter.maydell@linaro.org>
References: <20181214144214.1260-1-peter.maydell@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::335
Subject: [Qemu-devel] [PULL 03/22] Rename cpu_physical_memory_write_rom() to
 address_space_write_rom()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The API of cpu_physical_memory_write_rom() is odd, because it
takes an AddressSpace, unlike all the other cpu_physical_memory_*
access functions. Rename it to address_space_write_rom(), and
bring its API into line with address_space_write().

Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>
Acked-by: Michael S. Tsirkin <mst@redhat.com>
Message-id: 20181122133507.30950-3-peter.maydell@linaro.org
---
 include/exec/cpu-common.h   |  2 --
 include/exec/memory.h       | 26 ++++++++++++++++++++++++++
 exec.c                      | 14 ++++++++------
 hw/core/loader.c            |  4 ++--
 hw/intc/apic.c              |  7 ++++---
 hw/misc/tz-mpc.c            |  2 +-
 hw/sparc/sun4m.c            |  5 +++--
 docs/devel/loads-stores.rst | 35 ++++++++++++++++-------------------
 8 files changed, 60 insertions(+), 35 deletions(-)

diff --git a/include/exec/cpu-common.h b/include/exec/cpu-common.h
index 18b40d6145c..2ad2d6d86bb 100644
--- a/include/exec/cpu-common.h
+++ b/include/exec/cpu-common.h
@@ -111,8 +111,6 @@ bool cpu_physical_memory_is_io(hwaddr phys_addr);
  */
 void qemu_flush_coalesced_mmio_buffer(void);
 
-void cpu_physical_memory_write_rom(AddressSpace *as, hwaddr addr,
-                                   const uint8_t *buf, int len);
 void cpu_flush_icache_range(hwaddr start, int len);
 
 extern struct MemoryRegion io_mem_rom;
diff --git a/include/exec/memory.h b/include/exec/memory.h
index 8e61450de32..ffd23ed8d8d 100644
--- a/include/exec/memory.h
+++ b/include/exec/memory.h
@@ -1792,6 +1792,32 @@ MemTxResult address_space_write(AddressSpace *as, hwaddr addr,
                                 MemTxAttrs attrs,
                                 const uint8_t *buf, int len);
 
+/**
+ * address_space_write_rom: write to address space, including ROM.
+ *
+ * This function writes to the specified address space, but will
+ * write data to both ROM and RAM. This is used for non-guest
+ * writes like writes from the gdb debug stub or initial loading
+ * of ROM contents.
+ *
+ * Note that portions of the write which attempt to write data to
+ * a device will be silently ignored -- only real RAM and ROM will
+ * be written to.
+ *
+ * Return a MemTxResult indicating whether the operation succeeded
+ * or failed (eg unassigned memory, device rejected the transaction,
+ * IOMMU fault).
+ *
+ * @as: #AddressSpace to be accessed
+ * @addr: address within that address space
+ * @attrs: memory transaction attributes
+ * @buf: buffer with the data transferred
+ * @len: the number of bytes to write
+ */
+MemTxResult address_space_write_rom(AddressSpace *as, hwaddr addr,
+                                    MemTxAttrs attrs,
+                                    const uint8_t *buf, int len);
+
 /* address_space_ld*: load from an address space
  * address_space_st*: store to an address space
  *
diff --git a/exec.c b/exec.c
index 92679508ba3..6e875f0640a 100644
--- a/exec.c
+++ b/exec.c
@@ -3430,11 +3430,12 @@ static inline MemTxResult address_space_write_rom_internal(AddressSpace *as,
 }
 
 /* used for ROM loading : can write in RAM and ROM */
-void cpu_physical_memory_write_rom(AddressSpace *as, hwaddr addr,
-                                   const uint8_t *buf, int len)
+MemTxResult address_space_write_rom(AddressSpace *as, hwaddr addr,
+                                    MemTxAttrs attrs,
+                                    const uint8_t *buf, int len)
 {
-    address_space_write_rom_internal(as, addr, MEMTXATTRS_UNSPECIFIED,
-                                     buf, len, WRITE_DATA);
+    return address_space_write_rom_internal(as, addr, attrs,
+                                            buf, len, WRITE_DATA);
 }
 
 void cpu_flush_icache_range(hwaddr start, int len)
@@ -3879,8 +3880,9 @@ int cpu_memory_rw_debug(CPUState *cpu, target_ulong addr,
             l = len;
         phys_addr += (addr & ~TARGET_PAGE_MASK);
         if (is_write) {
-            cpu_physical_memory_write_rom(cpu->cpu_ases[asidx].as,
-                                          phys_addr, buf, l);
+            address_space_write_rom(cpu->cpu_ases[asidx].as, phys_addr,
+                                    MEMTXATTRS_UNSPECIFIED,
+                                    buf, l);
         } else {
             address_space_rw(cpu->cpu_ases[asidx].as, phys_addr,
                              MEMTXATTRS_UNSPECIFIED,
diff --git a/hw/core/loader.c b/hw/core/loader.c
index aa0b3fc8679..66a616608af 100644
--- a/hw/core/loader.c
+++ b/hw/core/loader.c
@@ -1103,8 +1103,8 @@ static void rom_reset(void *unused)
             void *host = memory_region_get_ram_ptr(rom->mr);
             memcpy(host, rom->data, rom->datasize);
         } else {
-            cpu_physical_memory_write_rom(rom->as, rom->addr, rom->data,
-                                          rom->datasize);
+            address_space_write_rom(rom->as, rom->addr, MEMTXATTRS_UNSPECIFIED,
+                                    rom->data, rom->datasize);
         }
         if (rom->isrom) {
             /* rom needs to be written only once */
diff --git a/hw/intc/apic.c b/hw/intc/apic.c
index 97ffdd820f2..c9dd65b3a03 100644
--- a/hw/intc/apic.c
+++ b/hw/intc/apic.c
@@ -122,9 +122,10 @@ static void apic_sync_vapic(APICCommonState *s, int sync_type)
         }
         vapic_state.irr = vector & 0xff;
 
-        cpu_physical_memory_write_rom(&address_space_memory,
-                                      s->vapic_paddr + start,
-                                      ((void *)&vapic_state) + start, length);
+        address_space_write_rom(&address_space_memory,
+                                s->vapic_paddr + start,
+                                MEMTXATTRS_UNSPECIFIED,
+                                ((void *)&vapic_state) + start, length);
     }
 }
 
diff --git a/hw/misc/tz-mpc.c b/hw/misc/tz-mpc.c
index e0c58ba37ec..fb48a1540b9 100644
--- a/hw/misc/tz-mpc.c
+++ b/hw/misc/tz-mpc.c
@@ -448,7 +448,7 @@ static int tz_mpc_attrs_to_index(IOMMUMemoryRegion *iommu, MemTxAttrs attrs)
 {
     /* We treat unspecified attributes like secure. Transactions with
      * unspecified attributes come from places like
-     * cpu_physical_memory_write_rom() for initial image load, and we want
+     * rom_reset() for initial image load, and we want
      * those to pass through the from-reset "everything is secure" config.
      * All the real during-emulation transactions from the CPU will
      * specify attributes.
diff --git a/hw/sparc/sun4m.c b/hw/sparc/sun4m.c
index 3c29b68e67f..639906cca30 100644
--- a/hw/sparc/sun4m.c
+++ b/hw/sparc/sun4m.c
@@ -559,8 +559,9 @@ static void idreg_init(hwaddr addr)
     s = SYS_BUS_DEVICE(dev);
 
     sysbus_mmio_map(s, 0, addr);
-    cpu_physical_memory_write_rom(&address_space_memory,
-                                  addr, idreg_data, sizeof(idreg_data));
+    address_space_write_rom(&address_space_memory, addr,
+                            MEMTXATTRS_UNSPECIFIED,
+                            idreg_data, sizeof(idreg_data));
 }
 
 #define MACIO_ID_REGISTER(obj) \
diff --git a/docs/devel/loads-stores.rst b/docs/devel/loads-stores.rst
index 57d8c524bfe..c74cd090e64 100644
--- a/docs/devel/loads-stores.rst
+++ b/docs/devel/loads-stores.rst
@@ -253,6 +253,22 @@ Regexes for git grep
  - ``\<address_space_ldu\?[bwql]\(_[lb]e\)\?\>``
  - ``\<address_space_st[bwql]\(_[lb]e\)\?\>``
 
+``address_space_write_rom``
+~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+This function performs a write by physical address like
+``address_space_write``, except that if the write is to a ROM then
+the ROM contents will be modified, even though a write by the guest
+CPU to the ROM would be ignored. This is used for non-guest writes
+like writes from the gdb debug stub or initial loading of ROM contents.
+
+Note that portions of the write which attempt to write data to a
+device will be silently ignored -- only real RAM and ROM will
+be written to.
+
+Regexes for git grep
+ - ``address_space_write_rom``
+
 ``{ld,st}*_phys``
 ~~~~~~~~~~~~~~~~~
 
@@ -315,25 +331,6 @@ For new code they are better avoided:
 Regexes for git grep
  - ``\<cpu_physical_memory_\(read\|write\|rw\)\>``
 
-``cpu_physical_memory_write_rom``
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-This function performs a write by physical address like
-``address_space_write``, except that if the write is to a ROM then
-the ROM contents will be modified, even though a write by the guest
-CPU to the ROM would be ignored.
-
-Note that unlike ``cpu_physical_memory_write()`` this function takes
-an AddressSpace argument, but unlike ``address_space_write()`` this
-function does not take a ``MemTxAttrs`` or return a ``MemTxResult``.
-
-**TODO**: we should probably clean up this inconsistency and
-turn the function into ``address_space_write_rom`` with an API
-matching ``address_space_write``.
-
-``cpu_physical_memory_write_rom``
-
-
 ``cpu_memory_rw_debug``
 ~~~~~~~~~~~~~~~~~~~~~~~
 
-- 
2.19.2


