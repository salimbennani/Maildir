Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:53:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DC0E1580375;
	Mon,  3 Dec 2018 07:19:31 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 07:19:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Akm1VhRzypCbQH5jXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8UKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwBu7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nZsNP1NLwSUeCoyanH1zPDZO5T1zf98ofIdA0uoeyWUrJ0bMHczlMgFwXejlWQ?=
 =?us-ascii?q?tIzlOima1uIXv2iY7+pvT+SvhHM6qw5rpjii3d0jipPMho4P1l/E8iB5zZ8zKN?=
 =?us-ascii?q?alS0B7ecapHIVMuyyeLYd6X80vT39ytConybAKpYS3cSkIxZg/2RLTdv6Kf5KV?=
 =?us-ascii?q?7h/sSOqdOyp0iG54dL6lhRu+7U6twfDmWMauylZFtC9Fn8HMtn8T0xzT7dCKSu?=
 =?us-ascii?q?Vy/ki/wzaDzQPT5f9eIUAyi6XbL4QtwrkqlpocqUjDHyn2l1vqjKKOaEko5uyl?=
 =?us-ascii?q?5/76brjouJOQLZJ4hwLiPqg0m8GyA/w0Mg0UUGia/eS82qfj/Ur8QLhSiv02k6?=
 =?us-ascii?q?/ZsI3VJMgCpa62HRVV0oA95Ba7Fjum19oZnX8ZI1JfYx+HkYfpNE/UIPziDvew?=
 =?us-ascii?q?nU6skDF1yPDCJLHhBY/NLnfbnLf7Ybl981JcyBY0zd1H45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFRs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+OUfo8apC79K+Q55/7p?=
 =?us-ascii?q?lXI5mUUSfai13ZQNb3C0BPRmI1iDbnrqjdcMCmMKvgs4TOz3h1yOSz9TZ3CuX6?=
 =?us-ascii?q?0i4jE3Ep6pDYDGRoq1mryOwD+7HoFKZmBBEl2ME3DoeJueV/cPbyKSJMlhkjsf?=
 =?us-ascii?q?WLilSo8h0wyutQDgx7pmKOrU5jMXtZb52Ndp4O3TkAk49SZoAMSFz2GNU2Z0k3?=
 =?us-ascii?q?sSSD8t3KB/pk99xk2Z0adigfxVDthT5/JPUgcnOp/Q1e16C9buWg3feteFUkqp?=
 =?us-ascii?q?QtKjATspVNI+38cOY1phG9Wllh3D3DClA7kPm7yPBZw76KTc33fqKsZ5ynbG0r?=
 =?us-ascii?q?QhjlY8TstOM22mmrBw9wzJC4HVlEWZkr6gdb4A0y7V6GeD0W2OsVlFXwFqT6XK?=
 =?us-ascii?q?Q2oTZkvMotT//UPNUbmuBbMjMgtCzM6CLrBHatnojVVAWffiN87SY2O3m2esGx?=
 =?us-ascii?q?mIwqmAY5bte2UYxC/dElQLkxgP/XaaMggzHjqurHjADDNwD17vY1nj8e9lqHyl?=
 =?us-ascii?q?SE851AWKb0xn17qo9R8Zn/2cS/UP3r0avCctsSl7HFG439jOEdqPuxJhfLlAYd?=
 =?us-ascii?q?M6+FpHyWPZtwl6Ppy8L6BjhkQScxhts0PpzRV3DoRAkc4lrH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0U493VozdZU3G?=
 =?us-ascii?q?Wc55nQFwUSTI/+XVwx9xh5oLHafDIw54fV1X1qLKm1vSXO29MvBOs51Bmge81T?=
 =?us-ascii?q?P7+DFA/3C8caHdShKPQ2m1i1aRIJJOBT9LMuM8y6bfeH2a6rM/xmnDKplmlH5I?=
 =?us-ascii?q?F90kSR9ytzUOLI3pAFw+2G0QuDTTvzkFChssXvk4BeeT4SBna/yTTjBINJfK1y?=
 =?us-ascii?q?fJoEBn20I8KqwdVynZjtVGBC9F6iHl8JxNWmeR6PYFPjxw1Q0kIXrGejmSu5yT?=
 =?us-ascii?q?x0jj4oorCe3CzI3+Ttah4HNnRXS2lliFfmOZK0gMwCXEi0cwgpkwOo5Eb7x6RB?=
 =?us-ascii?q?pKVzNXLTQVpOfyXtK2FiU62wtqeNYsJV6ZMotzlXX/q4YVyAVrH9pB4a2Tv5H2?=
 =?us-ascii?q?RC3DA7ay2qupLhkhx4km2dNnVzrHneec1q3hfQ/t/cRf1Q3joAWiZ4jyLaBly9?=
 =?us-ascii?q?P9mv4NWVmI3PsuG4V2K9SJJTdTPnwp+HtCu+/WdqGwGwn+ivmt37Fgg3yS/62M?=
 =?us-ascii?q?NtVSnSrhb8Y4/r2r++MeJmeEloGVD959B7GoF4jos/mpUQ1WIGiZWS+HoNiX3z?=
 =?us-ascii?q?PslD2aLicHoNQiYGw93P7wjkwkFjLm+JyJj/VnWS2cZhY9i6YmUL2iMy9cxKCa?=
 =?us-ascii?q?GU7KBakitxuFa3sQXRYf1llDcH1fQu8GIag/0OuAc1yyWdA7MSElNCMS3iiRuI?=
 =?us-ascii?q?9My+o7tNZGm0b7ewzkV+kMulDLGDpAFcRXn4do0jHS928sVwLlbM3Gfv5YHjfd?=
 =?us-ascii?q?nadcgTuQGMkxfck+hVL4o8luYNhSpiI278vGcqy+gmjRx1xpG6vZOKK2Fs/KK/?=
 =?us-ascii?q?Hx5ZOSf5Z8IV+jHxk6lemtya0JyoHpVkAj8LRofnTeq0EDIOsvTqLx2BHyc7qn?=
 =?us-ascii?q?efBLrTBwuf6Fp9onLLEpCrMWyXJXYDwdVjQhmdOFJQgAQOUDommZ45ExigxNb9?=
 =?us-ascii?q?f0dh+jAR+ln4pwNOyu1yMhnwTHzfqB20ajsuS5ifMRlW7hxE50jPKsyT9eZzHy?=
 =?us-ascii?q?Be/p28ow2BMG2bZwJUDW4XXkyIHUzsPr6r5dPY6eiXGvK+L+fSYbWJseFfV/CI?=
 =?us-ascii?q?xY+20ot75TmMMN+DPmJlD/091UpORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqDN/CfhCd6KTZb15MA33zIyKIY3F4dlS5u?=
 =?us-ascii?q?bSStEa8buC7JTaLQnLJXDhEBZyNyMstI87wz3g1XNcHHjdP106ZyjuQpBFddSV?=
 =?us-ascii?q?zhhsapaNQQLGGgL1zHHliENbScKT3PwsH6eqe8SbxWjOVJuBy8ozebE0n/Pjud?=
 =?us-ascii?q?kznlTQygMeZJjCuDJhxRpJm9cgpxCWjkVN/mdhy7MNptgTIq27E7mnPKOnAaMT?=
 =?us-ascii?q?Vnd0NNr7uQ7T5Xg/llGmxB6GZlIveAmyqD8+bYLZMWu+NxAitoj+Ja/Gg6y7xN?=
 =?us-ascii?q?4SBEXvN1ni7Srt9oo16+k+iPyiBoUBxBqjtQgIKLvENiObjW95VaWHbE+g4N4n?=
 =?us-ascii?q?uUCxgQu9RlDdjv6OhszY33iaTyNH9r/Mjd4sIYT5zMNcSGLDwoPgDgBzfQJAIf?=
 =?us-ascii?q?SHigMmSJwwRejvSb7Hi9qpkhtoOqk4FIQbhfSVk/F/pcB0h4T/IYJ5IidzU/ka?=
 =?us-ascii?q?OehchAxnq3qhXMTcES6pnBTfKPBPzpbjWZhL9IehIM6briKMIYMYitiB8qUUVz?=
 =?us-ascii?q?gImfQxmYZttKuCA0K1Zs+Eg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAAQSQVch0O0hNFiDg4BAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYNrFBODeYgYjAqBYC0UlzSBcywTAYgJIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCCkvgjYkAYJiAQIDAQIgUQUGCQEBChgCAiYCAgNUBgEKAgYCAQEBg?=
 =?us-ascii?q?xyCAgQBpUCBL4VAhF+BC4sRgVc/gREngj0uiAWCVwKJMIZENZAXBwKCHwSPEx6?=
 =?us-ascii?q?BW4gQhzuJBIEDkCyCDU0jgzyCJxeNYkM3AQExgQUBAYpXAQE?=
X-IPAS-Result: =?us-ascii?q?A0AOAAAQSQVch0O0hNFiDg4BAQEEAQEHBAEBgVEHAQELAYN?=
 =?us-ascii?q?rFBODeYgYjAqBYC0UlzSBcywTAYgJIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkvg?=
 =?us-ascii?q?jYkAYJiAQIDAQIgUQUGCQEBChgCAiYCAgNUBgEKAgYCAQEBgxyCAgQBpUCBL4V?=
 =?us-ascii?q?AhF+BC4sRgVc/gREngj0uiAWCVwKJMIZENZAXBwKCHwSPEx6BW4gQhzuJBIEDk?=
 =?us-ascii?q?CyCDU0jgzyCJxeNYkM3AQExgQUBAYpXAQE?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="54289745"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 07:19:30 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726615AbeLCPTc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 10:19:32 -0500
Received: from foss.arm.com ([217.140.101.70]:39614 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726549AbeLCPTc (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 10:19:32 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 6EAFB168F;
        Mon,  3 Dec 2018 07:19:26 -0800 (PST)
Received: from [10.1.37.145] (p8cg001049571a15.cambridge.arm.com [10.1.37.145])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 918683F5AF;
        Mon,  3 Dec 2018 07:19:24 -0800 (PST)
Subject: Re: [PATCH v9 7/8] KVM: arm64: Update age handlers to support PUD
 hugepages
To: Punit Agrawal <punit.agrawal@arm.com>, kvmarm@lists.cs.columbia.edu
Cc: suzuki.poulose@arm.com, marc.zyngier@arm.com,
        Catalin Marinas <catalin.marinas@arm.com>, will.deacon@arm.com,
        linux-kernel@vger.kernel.org,
        Christoffer Dall <christoffer.dall@arm.com>,
        punitagrawal@gmail.com, Russell King <linux@armlinux.org.uk>,
        linux-arm-kernel@lists.infradead.org
References: <20181031175745.18650-1-punit.agrawal@arm.com>
 <20181031175745.18650-8-punit.agrawal@arm.com>
From: Anshuman Khandual <anshuman.khandual@arm.com>
Message-ID: <db1e8281-a7cb-5d2a-8ad3-6d275fc49582@arm.com>
Date: Mon, 3 Dec 2018 20:49:30 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181031175745.18650-8-punit.agrawal@arm.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 10/31/2018 11:27 PM, Punit Agrawal wrote:
> In preparation for creating larger hugepages at Stage 2, add support
> to the age handling notifiers for PUD hugepages when encountered.
> 
> Provide trivial helpers for arm32 to allow sharing code.
> 
> Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
> Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
> Cc: Christoffer Dall <christoffer.dall@arm.com>
> Cc: Marc Zyngier <marc.zyngier@arm.com>
> Cc: Russell King <linux@armlinux.org.uk>
> Cc: Catalin Marinas <catalin.marinas@arm.com>
> Cc: Will Deacon <will.deacon@arm.com>
> ---
>  arch/arm/include/asm/kvm_mmu.h   |  6 +++++
>  arch/arm64/include/asm/kvm_mmu.h |  5 ++++
>  arch/arm64/include/asm/pgtable.h |  1 +
>  virt/kvm/arm/mmu.c               | 39 ++++++++++++++++----------------
>  4 files changed, 32 insertions(+), 19 deletions(-)
> 
> diff --git a/arch/arm/include/asm/kvm_mmu.h b/arch/arm/include/asm/kvm_mmu.h
> index fea5e723e3ac..e62f0913ce7d 100644
> --- a/arch/arm/include/asm/kvm_mmu.h
> +++ b/arch/arm/include/asm/kvm_mmu.h
> @@ -117,6 +117,12 @@ static inline pud_t kvm_s2pud_mkyoung(pud_t pud)
>  	return pud;
>  }
>  
> +static inline bool kvm_s2pud_young(pud_t pud)
> +{
> +	BUG();
> +	return false;
> +}
> +
>  static inline pte_t kvm_s2pte_mkwrite(pte_t pte)
>  {
>  	pte_val(pte) |= L_PTE_S2_RDWR;
> diff --git a/arch/arm64/include/asm/kvm_mmu.h b/arch/arm64/include/asm/kvm_mmu.h
> index 612032bbb428..9f941f70775c 100644
> --- a/arch/arm64/include/asm/kvm_mmu.h
> +++ b/arch/arm64/include/asm/kvm_mmu.h
> @@ -273,6 +273,11 @@ static inline pud_t kvm_s2pud_mkyoung(pud_t pud)
>  	return pud_mkyoung(pud);
>  }
>  
> +static inline bool kvm_s2pud_young(pud_t pud)
> +{
> +	return pud_young(pud);
> +}
> +
>  #define hyp_pte_table_empty(ptep) kvm_page_empty(ptep)
>  
>  #ifdef __PAGETABLE_PMD_FOLDED
> diff --git a/arch/arm64/include/asm/pgtable.h b/arch/arm64/include/asm/pgtable.h
> index f51e2271e6a3..bb0f3f17a7a9 100644
> --- a/arch/arm64/include/asm/pgtable.h
> +++ b/arch/arm64/include/asm/pgtable.h
> @@ -386,6 +386,7 @@ static inline int pmd_protnone(pmd_t pmd)
>  #define pfn_pmd(pfn,prot)	__pmd(__phys_to_pmd_val((phys_addr_t)(pfn) << PAGE_SHIFT) | pgprot_val(prot))
>  #define mk_pmd(page,prot)	pfn_pmd(page_to_pfn(page),prot)
>  
> +#define pud_young(pud)		pte_young(pud_pte(pud))
>  #define pud_mkyoung(pud)	pte_pud(pte_mkyoung(pud_pte(pud)))
>  #define pud_write(pud)		pte_write(pud_pte(pud))
>  
> diff --git a/virt/kvm/arm/mmu.c b/virt/kvm/arm/mmu.c
> index bd749601195f..3893ea6a50bf 100644
> --- a/virt/kvm/arm/mmu.c
> +++ b/virt/kvm/arm/mmu.c
> @@ -1225,6 +1225,11 @@ static int stage2_pmdp_test_and_clear_young(pmd_t *pmd)
>  	return stage2_ptep_test_and_clear_young((pte_t *)pmd);
>  }
>  
> +static int stage2_pudp_test_and_clear_young(pud_t *pud)
> +{
> +	return stage2_ptep_test_and_clear_young((pte_t *)pud);
> +}
> +
>  /**
>   * kvm_phys_addr_ioremap - map a device range to guest IPA
>   *
> @@ -1932,42 +1937,38 @@ void kvm_set_spte_hva(struct kvm *kvm, unsigned long hva, pte_t pte)
>  
>  static int kvm_age_hva_handler(struct kvm *kvm, gpa_t gpa, u64 size, void *data)
>  {
> +	pud_t *pud;
>  	pmd_t *pmd;
>  	pte_t *pte;
>  
> -	WARN_ON(size != PAGE_SIZE && size != PMD_SIZE);
> -	pmd = stage2_get_pmd(kvm, NULL, gpa);
> -	if (!pmd || pmd_none(*pmd))	/* Nothing there */
> +	WARN_ON(size != PAGE_SIZE && size != PMD_SIZE && size != PUD_SIZE);
> +	if (!stage2_get_leaf_entry(kvm, gpa, &pud, &pmd, &pte))
>  		return 0;
>  
> -	if (pmd_thp_or_huge(*pmd))	/* THP, HugeTLB */
> +	if (pud)
> +		return stage2_pudp_test_and_clear_young(pud);
> +	else if (pmd)
>  		return stage2_pmdp_test_and_clear_young(pmd);
> -
> -	pte = pte_offset_kernel(pmd, gpa);
> -	if (pte_none(*pte))
> -		return 0;
> -
> -	return stage2_ptep_test_and_clear_young(pte);
> +	else
> +		return stage2_ptep_test_and_clear_young(pte);
>  }
>  
>  static int kvm_test_age_hva_handler(struct kvm *kvm, gpa_t gpa, u64 size, void *data)
>  {
> +	pud_t *pud;
>  	pmd_t *pmd;
>  	pte_t *pte;
>  
> -	WARN_ON(size != PAGE_SIZE && size != PMD_SIZE);
> -	pmd = stage2_get_pmd(kvm, NULL, gpa);
> -	if (!pmd || pmd_none(*pmd))	/* Nothing there */
> +	WARN_ON(size != PAGE_SIZE && size != PMD_SIZE && size != PUD_SIZE);
> +	if (!stage2_get_leaf_entry(kvm, gpa, &pud, &pmd, &pte))
>  		return 0;
>  
> -	if (pmd_thp_or_huge(*pmd))		/* THP, HugeTLB */
> +	if (pud)
> +		return kvm_s2pud_young(*pud);
> +	else if (pmd)
>  		return pmd_young(*pmd);
> -
> -	pte = pte_offset_kernel(pmd, gpa);
> -	if (!pte_none(*pte))		/* Just a page... */
> +	else
>  		return pte_young(*pte);
> -
> -	return 0;
>  }
>  
>  int kvm_age_hva(struct kvm *kvm, unsigned long start, unsigned long end)
> 

If stage2_get_leaf_entry() is avoided (which it should be) some of the previous
patches can be folded into just a single one like defining new HW page table
definitions, arm32 trivial functions and PUD specific additions at various
stage 2 page table walkers etc.
