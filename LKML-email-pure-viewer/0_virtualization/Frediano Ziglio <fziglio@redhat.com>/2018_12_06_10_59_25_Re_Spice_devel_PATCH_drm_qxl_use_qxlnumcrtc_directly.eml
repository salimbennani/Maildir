Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:44:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E68D558014B;
	Thu,  6 Dec 2018 03:02:30 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 06 Dec 2018 03:02:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASFwwABSBfZQuUAm9elieBi5RStpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRyFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94VQnZPUMZPWiBYG4+z?=
 =?us-ascii?q?bpIDAfMbPeZZoIn9pl0OogGiBQmtAuPvxSZEiHzu3aEjzuohDBrG3BQ+EN0SrH?=
 =?us-ascii?q?TfsdH5OacOXeywyqTD0DfNYO5M2Trl5obGcg4vr/KOUrJ+bMTexlUgGQzEjlWM?=
 =?us-ascii?q?sozlJzGY2/8Rs2WZ8+VsSf6jh3Ilpgx3vzOhxt0sio7Mho8Nyl7E7zt2z5s0Jd?=
 =?us-ascii?q?KiTk57ZsOvH5hRtyGVM4t2Q8QiSHxvtSY0y7wGuJG7fCwLyJQg3BPfceKIfJWI?=
 =?us-ascii?q?4h35SOadOyt3hHVgeL+mgRu57EuuyvXkW8WqzFpHqjBJnsTCu3wTzRDf98uKRu?=
 =?us-ascii?q?dn8kqg2zuDzx3f5v1eLU06m6fXMZAszqAqmpYOsEnPBjL6lFnsgKKZbEko5+yl?=
 =?us-ascii?q?5uT9brn4p5KQL5F4hh36P6g0h8CyD/o0PhITU2WY9+mwzqPv8E7/Tb5XlPM5iL?=
 =?us-ascii?q?PZv4rfJckDpq62HQtV0oE75hahADepzs4YkWMELF1bYhKHiZbmO1XULPD/F/e/?=
 =?us-ascii?q?jEygkDZtx//YIr3sGovBImTHnbv7YLpw5VBQxBAuwd1c+55YELAMLfDrVk/0rt?=
 =?us-ascii?q?PYDxs5MwKuw+bgDdVwzoceWWOJAq+EP6LeqFyI6fw1I+mKeoAVvC/xK/8r5v7o?=
 =?us-ascii?q?k3A5g0QQfbem3ZQJcnC0BPdmLFuDYXrqnNgBFX0Gvg0kTOzlkFGCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EIamDYbARo+zmrCA0zq7E4ZSZmBHDFCMDHjpe5+FW/cKdCKdPMthniYY?=
 =?us-ascii?q?WrimTo8rzQuuuxPiy7p7MurU/TUVtZL529h0++3cjxYy+SZ0D8SAyW6NSW50k3?=
 =?us-ascii?q?gMRz832qB/vEN8xk2C0ah+n/xXC9hT6+lVXQc9MJ7W1/Z6BMzqWgLdYteJT06r?=
 =?us-ascii?q?QtehAT4vVN4xwNgOY0B7G9WllR3D2yuqA7kIl72EHpA086Tc32TvKMZ50XrJyK?=
 =?us-ascii?q?4hj1w+SMtVKWKmnrJ/9xTUB4PRiUqZjKaqdaMf3CLX7meM12iOsVpcUA5xV6XF?=
 =?us-ascii?q?QH8ealHXrdT/+kPNUbuuBa47PQtGzM6IMrFKZcHxjVVaWPfjP8zTY2GrlGe2Hx?=
 =?us-ascii?q?qIwrKMY5Dse2USxyjdDEkEkwYO/XeJLwQ+ByGho37AAzxqD17gf0Ts8exmonOh?=
 =?us-ascii?q?UkA01x2Kb1Fm17et5xEan+KcRO0J0rIEoighrS50E0i7397RD9qApA9hfKFHbN?=
 =?us-ascii?q?M54VdH03/ZtgNnMpyhKaBimkARcwBts0zy0BV3D51KkdI2o3My0ApyNaWY3Utc?=
 =?us-ascii?q?eDyCw5D/JKfbKmno8xCpcK7ZxFfe3c2S+qcO7vQ4tlrisBuoFkok73Vozd1V32?=
 =?us-ascii?q?GA6ZXNCQoYSYjxXVov9xhmu7HaZTEw55/V1X1pNqm0rj/C2tIzCOs50BqgeM1f?=
 =?us-ascii?q?MKeFFA/0HM0XHMyuKO0sm1i0YRMIJuFS9KgoP8y4c/uKwrKkPOFlnDi+l2RI/J?=
 =?us-ascii?q?h90l6Q9yp7UuPHxZIFzO+X3wSZVzbwlkyust3qlo9eYzESHW2/yTb/CY5VZ61y?=
 =?us-ascii?q?e5sLCGi0L822wNV+m4DiW3pC+FG/AFMG3dejeQCOYFzlwQ1QyUMXrGSnmCul1T?=
 =?us-ascii?q?B7jyslr6uf3CPUxeTiewEKOmpKRGlkkFftLpK4j9EcXEi0cQcpkAGp6lr9x6he?=
 =?us-ascii?q?vK5/NXXcQV9UfyjqKGFvSrGwtruebMFV8pMnrCJXXP66YV+EUL79ogIW3D/5EG?=
 =?us-ascii?q?ta2T80aSuqupL/nxFhjGKdLXBzrGfWeM1qxBff4sDcSuBV3jYcWCZ4jjzXDECm?=
 =?us-ascii?q?P9a15dWUi4vDsuemWmOhV51faynqwZmbtCum421nGhm/n/G1mt36Hgk2yy7719?=
 =?us-ascii?q?92VSrWqBbweJXk16O/Meh/ZElnGEf869ZmGoF5ioYwhosf2WIZhpWW+noLi3zz?=
 =?us-ascii?q?Ps9Y2aL9bXoNQyAEw9jO7Qjh2U1jKG+Jxo3jWnWcxMthe8e1YmcM1i0h6MBKDb?=
 =?us-ascii?q?+e7KZYkittvlq4sQXRbOB9nzgHzvsi8nwag+APuAc2yiWdA7YSHVRXPCD2lhSI?=
 =?us-ascii?q?6cy+o7tTZGq1bbew009+l8i7DL6eugFcRGr5epA6EC9z9Mp/MUjA0H3u6o7+ft?=
 =?us-ascii?q?nQYskethmVkxfGkuhUJ4g9lvsMhSp7J239uWcpxPI8jRxrxZu6ppSIK31x/KKl?=
 =?us-ascii?q?BR5VLjj1Z8IQ+j73l6pfkNiZ35uzHpp/ADUER4XnTeinED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTUmmZ45Exqmxc37?=
 =?us-ascii?q?f0d/+zAR/UX4qhpXx+JsNhn/VHrfpQiyZjc1TpifMARZ7gVY60jJNsye6/p5Hz?=
 =?us-ascii?q?tE8Z25sAyNNmubahxTAm4TXUyEA03jMqOq5dnd6OWYAuu+L/3TYbSBs+BeVvGI?=
 =?us-ascii?q?xY6x3Yti5TqDKsKPPnx6Bf0hxkVDRWx5G9jemzgXSSwYjSfNYNCApBum5i17tM?=
 =?us-ascii?q?O/8OnoWALy44uAEaBSPM5r+xC3h6eDKuGRiDx4KTZeypMD23vIxKID014VjiFk?=
 =?us-ascii?q?byOtHqgYtS7RUKLQnbdaDh4cayNuLctI8rgz3g9XNc7AjdP10LF4g+UxC1dEU1?=
 =?us-ascii?q?zhh86oadYLI2G7KFPIGkKLOK6aKj3MxsH9ebm8RqFIjOVIqx2wvi6WE0/9MTSC?=
 =?us-ascii?q?lDnpVBGvPftPjCGBOxxet5+ycgxwCWj4V9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB9ebYN40ZseF1DSV0je5a5HU6xqBR?=
 =?us-ascii?q?7CFFQvx1hSTTosRvo1GgjumA1D5nXABSpTZMgYKBpV9iNrnB9plcRXbE+woA7X?=
 =?us-ascii?q?mRCxQPvddqFsfjtLxQytfRkqL+MzNC89PS/csBCMnYMsOHMHw9MRX3HD7YFhcK?=
 =?us-ascii?q?TTmuNWvHnUxSjOmS9mGJrpg9spXtmIABSrleVFw0EPMVEkVkHNwYL5dxUTMpir?=
 =?us-ascii?q?qbjM8O5XqjoxjdXsRavpbbVv2MBfXjMiqWjb5BZ0hA/bStAokJOsXb3EJsb1B8?=
 =?us-ascii?q?msyeGFDZTd1JijdsYg89vANG930oHUMp3EewRBmg7H4aE/n8rB85jgp5KbAj5j?=
 =?us-ascii?q?bj51YwDkDHqCs5jA86ntCz0mPZSyL4MKrlBdIeMCHzrUVkd86jTg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAABiAQlch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYECFBMKg3CIGV+NFiUUji2JDYFzFBgDEAGEQIM?=
 =?us-ascii?q?WIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JIJjAQICAQECIARSBQEJAQEBA?=
 =?us-ascii?q?QgODAINGQICA1QCBBMFgxwBgXkIBaVVfDOKK4ELixMXgUA/gREzgl+FAYMEglc?=
 =?us-ascii?q?CiTWBb4RZNpAsCYcEikIYgimHOIdULJhfgUaCDTMaCBsVO4JsCYIeF4YUiCchA?=
 =?us-ascii?q?QExgQUBARyJLIEfAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAABiAQlch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYECFBMKg3CIGV+NFiUUji2JDYFzFBgDEAGEQIMWIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JIJjAQICAQECIARSBQEJAQEBAQgODAINGQICA1Q?=
 =?us-ascii?q?CBBMFgxwBgXkIBaVVfDOKK4ELixMXgUA/gREzgl+FAYMEglcCiTWBb4RZNpAsC?=
 =?us-ascii?q?YcEikIYgimHOIdULJhfgUaCDTMaCBsVO4JsCYIeF4YUiCchAQExgQUBARyJLIE?=
 =?us-ascii?q?fAQE?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="56343424"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 03:02:28 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729367AbeLFK70 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 05:59:26 -0500
Received: from mx1.redhat.com ([209.132.183.28]:44814 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727763AbeLFK70 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 05:59:26 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com [10.5.11.14])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 9D93331256C4;
        Thu,  6 Dec 2018 10:59:25 +0000 (UTC)
Received: from colo-mx.corp.redhat.com (colo-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.20])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 8DD2F5D9CD;
        Thu,  6 Dec 2018 10:59:25 +0000 (UTC)
Received: from zmail25.collab.prod.int.phx2.redhat.com (zmail25.collab.prod.int.phx2.redhat.com [10.5.83.31])
        by colo-mx.corp.redhat.com (Postfix) with ESMTP id 7D0B5181B9E4;
        Thu,  6 Dec 2018 10:59:25 +0000 (UTC)
Date: Thu, 6 Dec 2018 05:59:25 -0500 (EST)
From: Frediano Ziglio <fziglio@redhat.com>
To: Gerd Hoffmann <kraxel@redhat.com>
Cc: dri-devel@lists.freedesktop.org, David Airlie <airlied@redhat.com>,
        David Airlie <airlied@linux.ie>,
        "open list:DRM DRIVER FOR QXL VIRTUAL GPU" 
        <spice-devel@lists.freedesktop.org>,
        open list <linux-kernel@vger.kernel.org>,
        "open list:DRM DRIVER FOR QXL VIRTUAL GPU" 
        <virtualization@lists.linux-foundation.org>
Message-ID: <207905511.48580418.1544093965441.JavaMail.zimbra@redhat.com>
In-Reply-To: <20181206103352.20587-1-kraxel@redhat.com>
References: <20181206103352.20587-1-kraxel@redhat.com>
Subject: Re: [Spice-devel] [PATCH] drm/qxl: use qxl_num_crtc directly
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.33.32.16, 10.4.195.26]
Thread-Topic: drm/qxl: use qxl_num_crtc directly
Thread-Index: 6gu8SzX0lYQlCzMHMHMoA70PwbJvvQ==
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.46]); Thu, 06 Dec 2018 10:59:25 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

> 
> Just use qxl_num_crtc directly everywhere instead of using
> qdev->monitors_config->max_allowed.  Drops pointless indirection
> and also is less confusing.
> 

To me is MORE confusing, why comparing number of something with
another number? Previously code was comparing number of monitors
with number of monitors, not number of CRTs with number of
monitors.

Why we are optimizing code that, as yours same saying, we are
not much actively improving?

> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
> ---
>  drivers/gpu/drm/qxl/qxl_display.c | 21 +++++++++------------
>  1 file changed, 9 insertions(+), 12 deletions(-)
> 
> diff --git a/drivers/gpu/drm/qxl/qxl_display.c
> b/drivers/gpu/drm/qxl/qxl_display.c
> index ce0b9c40fc..6437369a31 100644
> --- a/drivers/gpu/drm/qxl/qxl_display.c
> +++ b/drivers/gpu/drm/qxl/qxl_display.c
> @@ -80,10 +80,10 @@ static int
> qxl_display_copy_rom_client_monitors_config(struct qxl_device *qdev)
>  		DRM_DEBUG_KMS("no client monitors configured\n");
>  		return status;
>  	}
> -	if (num_monitors > qdev->monitors_config->max_allowed) {
> +	if (num_monitors > qxl_num_crtc) {
>  		DRM_DEBUG_KMS("client monitors list will be truncated: %d < %d\n",
> -			      qdev->monitors_config->max_allowed, num_monitors);
> -		num_monitors = qdev->monitors_config->max_allowed;
> +			      qxl_num_crtc, num_monitors);
> +		num_monitors = qxl_num_crtc;
>  	} else {
>  		num_monitors = qdev->rom->client_monitors_config.count;
>  	}
> @@ -96,8 +96,7 @@ static int
> qxl_display_copy_rom_client_monitors_config(struct qxl_device *qdev)
>  		return status;
>  	}
>  	/* we copy max from the client but it isn't used */
> -	qdev->client_monitors_config->max_allowed =
> -				qdev->monitors_config->max_allowed;
> +	qdev->client_monitors_config->max_allowed = qxl_num_crtc;
>  	for (i = 0 ; i < qdev->client_monitors_config->count ; ++i) {
>  		struct qxl_urect *c_rect =
>  			&qdev->rom->client_monitors_config.heads[i];
> @@ -204,7 +203,7 @@ static int qxl_add_monitors_config_modes(struct
> drm_connector *connector,
>  
>  	if (!qdev->monitors_config)
>  		return 0;
> -	if (h >= qdev->monitors_config->max_allowed)
> +	if (h >= qxl_num_crtc)
>  		return 0;
>  	if (!qdev->client_monitors_config)
>  		return 0;
> @@ -307,8 +306,7 @@ static void qxl_crtc_update_monitors_config(struct
> drm_crtc *crtc,
>  		return;
>  	}
>  
> -	if (!qdev->monitors_config ||
> -	    qdev->monitors_config->max_allowed <= i)
> +	if (!qdev->monitors_config || qxl_num_crtc <= i)
>  		return;
>  
>  	head.id = i;
> @@ -348,9 +346,10 @@ static void qxl_crtc_update_monitors_config(struct
> drm_crtc *crtc,
>  	if (oldcount != qdev->monitors_config->count)
>  		DRM_DEBUG_KMS("active heads %d -> %d (%d total)\n",
>  			      oldcount, qdev->monitors_config->count,
> -			      qdev->monitors_config->max_allowed);
> +			      qxl_num_crtc);
>  
>  	qdev->monitors_config->heads[i] = head;
> +	qdev->monitors_config->max_allowed = qxl_num_crtc;
>  	qxl_send_monitors_config(qdev);
>  }
>  
> @@ -1097,9 +1096,8 @@ int qxl_create_monitors_object(struct qxl_device *qdev)
>  {
>  	int ret;
>  	struct drm_gem_object *gobj;
> -	int max_allowed = qxl_num_crtc;
>  	int monitors_config_size = sizeof(struct qxl_monitors_config) +
> -		max_allowed * sizeof(struct qxl_head);
> +		qxl_num_crtc * sizeof(struct qxl_head);
>  
>  	ret = qxl_gem_object_create(qdev, monitors_config_size, 0,
>  				    QXL_GEM_DOMAIN_VRAM,
> @@ -1121,7 +1119,6 @@ int qxl_create_monitors_object(struct qxl_device *qdev)
>  		qxl_bo_physical_address(qdev, qdev->monitors_config_bo, 0);
>  
>  	memset(qdev->monitors_config, 0, monitors_config_size);
> -	qdev->monitors_config->max_allowed = max_allowed;
>  	return 0;
>  }
>  

Frediano
