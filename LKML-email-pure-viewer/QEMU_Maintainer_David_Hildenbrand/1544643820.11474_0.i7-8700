Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:43:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4EF605803DC
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 01:43:17 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 01:43:17 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AdokB3xaQTvyAXZICOHnVElb/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrsm8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHI2y?=
 =?us-ascii?q?YYgNAOoPIOhYt4vwqVkBoBejCwSgGP3gyiRTi3PqwaE3yfgtHR3a0AA8Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27wrPHzSvCb/xLxDzz6onIchQ8rv6SW7J/atDRxlMpFwzYk16d?=
 =?us-ascii?q?rpHqMCmL1uQMrmeW9PBgWvyyhG4nsQ5xviKjydsrionMn48YzE3P+yZhwIstO9?=
 =?us-ascii?q?G0VE12bcS5HJdNtCyWLZV6T80iTm1ypSo3yKUKtYCncCUO0pgr2hDSZ+Kdf4SV?=
 =?us-ascii?q?4R/uWvydLSl7iX9jZbmxnQy98VK6xe35TsS00EhFri5CktTUsnAN1gfT6tScSv?=
 =?us-ascii?q?dn8Ueh3yuP2xrU6uFeLkA4javbK5g/zb4sjpcfr1jPEyzslEnrkaObdV8o9vam?=
 =?us-ascii?q?5unneLnqu52RO5dxig7kM6QunsK/Af4/MggLR2Wb4Pqz1Lj+/UHgXbpFkOM2nb?=
 =?us-ascii?q?fdsJzDPssbobO5AwlJ3Yk98BazCDOm0NUbnXYZNl5Edw+HgpDtO1HPJvD4EPi+?=
 =?us-ascii?q?j06tkDdt2/DJILnhDo/RIXjElbfsZrB960layAo8y9Bf+ohYCrYbIPL8QkPxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENF91oIdWW2RGKOYP77SvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JtEIE2+BelsdkWFfWL30JBGFWYRohF4Suvsh1ufFzlJaDG3Vq?=
 =?us-ascii?q?M44zg9T4W+EYbEQJvqmbGEwWK3E4NbYjN7DEuRGyLtfoSAR/BecS+XP4ptnyIJ?=
 =?us-ascii?q?Uf27RpY82AqynAn9zbVhM6zT4CJPro/p1tV++7jOkwov/yd/FcWX3jKxSDRtk2?=
 =?us-ascii?q?YVAjM7wq17iUp6zFiFzO5/mfMLO8ZU4qZlWxk7Odb8zuh2Btb4QAvHcp/dRF+4?=
 =?us-ascii?q?Q9mOGzw9TtsthdQJZhAuSJ2Zkhnf0n/yUPcunLuRCclxq/qE0g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAAAI2BBcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCYoxzizOZYIFxFhgUhzoiNQgNAQMBAQEBAQECARMBAQEBAQg?=
 =?us-ascii?q?LCwYbDi+CNgUCAxoBBoJcAwMBAiQfCikDAwECBgEBSAgDAVMZBYMcggIBBKZYM?=
 =?us-ascii?q?4VAhHCIUoNqF4F/g26GA4UOAosulVkJgiaPJAsYYIkJh1uZOYFIAYILcBWDJ4I?=
 =?us-ascii?q?nF44eQDGBBxyLFIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AgAAAI2BBcmBHrdtBjHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?CYoxzizOZYIFxFhgUhzoiNQgNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCA?=
 =?us-ascii?q?xoBBoJcAwMBAiQfCikDAwECBgEBSAgDAVMZBYMcggIBBKZYM4VAhHCIUoNqF4F?=
 =?us-ascii?q?/g26GA4UOAosulVkJgiaPJAsYYIkJh1uZOYFIAYILcBWDJ4InF44eQDGBBxyLF?=
 =?us-ascii?q?IF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="141793024"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 01:43:16 -0800
Received: from localhost ([::1]:43505 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX12y-0007dm-0v
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 04:43:16 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:35386)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <david@redhat.com>) id 1gX0ol-0004F9-Gu
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:28:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <david@redhat.com>) id 1gX0ok-0002J5-3h
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:28:35 -0500
Received: from mx1.redhat.com ([209.132.183.28]:39658)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <david@redhat.com>) id 1gX0og-0002Fo-8u
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:28:31 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id A2C88C0495BB;
	Wed, 12 Dec 2018 09:28:28 +0000 (UTC)
Received: from t460s.redhat.com (ovpn-117-229.ams2.redhat.com [10.36.117.229])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 1E1D25D756;
	Wed, 12 Dec 2018 09:28:26 +0000 (UTC)
From: David Hildenbrand <david@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 10:28:20 +0100
Message-Id: <20181212092821.18260-2-david@redhat.com>
In-Reply-To: <20181212092821.18260-1-david@redhat.com>
References: <20181212092821.18260-1-david@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Wed, 12 Dec 2018 09:28:28 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v4 1/2] range: add some more functions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Eduardo Habkost <ehabkost@redhat.com>, David Hildenbrand <david@redhat.com>,
	"Michael S . Tsirkin" <mst@redhat.com>,
	"Dr . David Alan Gilbert" <dgilbert@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Add some more functions that will be used in memory-device context.

range_init(): Init using lower bound and size, check for validity
range_init_nofail(): Init using lower bound and size, validity asserted
range_size(): Extract the size of a range
range_overlaps_range(): Check for overlaps of two ranges
range_contains_range(): Check if one range is contained in the other

Reviewed-by: Igor Mammedov <imammedo@redhat.com>
Signed-off-by: David Hildenbrand <david@redhat.com>
---
 include/qemu/range.h | 62 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

diff --git a/include/qemu/range.h b/include/qemu/range.h
index 7e75f4e655..ba606c6bc0 100644
--- a/include/qemu/range.h
+++ b/include/qemu/range.h
@@ -112,6 +112,68 @@ static inline uint64_t range_upb(Range *range)
     return range->upb;
 }
 
+/*
+ * Initialize @range to span the interval [@lob,@lob + @size - 1].
+ * @size may be 0. If the range would overflow, returns -ERANGE, otherwise
+ * 0.
+ */
+static inline int QEMU_WARN_UNUSED_RESULT range_init(Range *range, uint64_t lob,
+                                                     uint64_t size)
+{
+    if (lob + size < lob) {
+        return -ERANGE;
+    }
+    range->lob = lob;
+    range->upb = lob + size - 1;
+    range_invariant(range);
+    return 0;
+}
+
+/*
+ * Initialize @range to span the interval [@lob,@lob + @size - 1].
+ * @size may be 0. Range must not overflow.
+ */
+static inline void range_init_nofail(Range *range, uint64_t lob, uint64_t size)
+{
+    range->lob = lob;
+    range->upb = lob + size - 1;
+    range_invariant(range);
+}
+
+/*
+ * Get the size of @range.
+ */
+static inline uint64_t range_size(const Range *range)
+{
+    return range->upb - range->lob + 1;
+}
+
+/*
+ * Check if @range1 overlaps with @range2. If one of the ranges is empty,
+ * the result is always "false".
+ */
+static inline bool range_overlaps_range(const Range *range1,
+                                        const Range *range2)
+{
+    if (range_is_empty(range1) || range_is_empty(range2)) {
+        return false;
+    }
+    return !(range2->upb < range1->lob || range1->upb < range2->lob);
+}
+
+/*
+ * Check if @range1 contains @range2. If one of the ranges is empty,
+ * the result is always "false".
+ */
+static inline bool range_contains_range(const Range *range1,
+                                        const Range *range2)
+{
+    if (range_is_empty(range1) || range_is_empty(range2)) {
+        return false;
+    }
+    return range1->lob <= range2->lob && range1->upb >= range2->upb;
+}
+
 /*
  * Extend @range to the smallest interval that includes @extend_by, too.
  */
-- 
2.17.2


