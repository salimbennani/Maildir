Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:43:35 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 730AE5803DC
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 01:37:48 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 12 Dec 2018 01:37:48 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ARWDmyhbG5ttST0CwB36fA/H/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrsm8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHI2y?=
 =?us-ascii?q?YYgNAOoPIOhYt4vwqVkBoBejCwSgGP3gyiRTi3PqwaE3yfgtHR3a0AA8Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27wrPHzSvCb/xLxDzz6onIchQ8rv6SW7J/atDRxlMpFwzYk16d?=
 =?us-ascii?q?rpHqMCmL1uQMrmeW9PBgWvyyhG4nsQ5xviKjydsrionMn48YzE3P+yZhwIstO9?=
 =?us-ascii?q?G0VE12bcS5HJdNtCyWLZV6T80iTm1ypSo3yKUKtYCncCUO0pgr2hDSZ+Kdf4SV?=
 =?us-ascii?q?4R/uWvydLSl7iX9jZbmxnQy98VK6xe35TsS00EhFri5CktTUsnAN1gfT6tScSv?=
 =?us-ascii?q?dn8Ueh3yuP2xrU6uFeLkA4javbK5g/zb4sjpcfr1jPEyzslEnrkaObdV8o9vam?=
 =?us-ascii?q?5unneLnqu52RO5dxig7kM6QunsK/Af4/MggLR2Wb4Pqz1Lj+/UHgXbpFkOM2nb?=
 =?us-ascii?q?fdsJzDPssbobO5AwlJ3Yk98BazCDOm0NUbnXYZNl5Edw+HgpDtO1HPJvD4EPi+?=
 =?us-ascii?q?j06tkDdt2/DJILnhDo/RIXjElbfsZrB960layAo8y9Bf+ohYCrYbIPL8QkPxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENF91oIdWW2RGKOYP77SvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JtEIE2+BelsdkWFfWL30JBGFWYRohF4Suvsh1ufFzlJaDG3Vq?=
 =?us-ascii?q?M44zg9T4W+EYbEQJvqmbGEwWK3E4NbYjN7DEuRGyLtfoSAR/BecS+XP4ptnyIJ?=
 =?us-ascii?q?Uf27RpY82AqynAn9zbVhM6zT4CJPro/p1tV++7jOkwov/yd/FcWX3jKxSDRtk2?=
 =?us-ascii?q?YVAjM7wq17iUp6zFiFzO5/mfMLO8ZU4qZlWxk7Odb8zuh2Btb4QAvHcp/dRF+4?=
 =?us-ascii?q?Q9mOGzw9TtsthdQJZhAuSJ2Zkhnf0n/yUPcunLuRCclxq/qE0g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AdAABv1RBcmBHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJijBRfizOZYBSBXxQYFIc6IjQJDQEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4vgjYFAgMaAQaCXAMDAQIkHwokBQMDAQIGAQFICAMBUxkFgxyCAgEEpk0zh?=
 =?us-ascii?q?UCEcIw8F4F/gRGHfIVyAok9gXGVWQmCJo8kCxhgiQmHWyyZDYFGgg5wFYMngic?=
 =?us-ascii?q?Xjh5AMYEHHIsUgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AdAABv1RBcmBHrdtBjHQEBBQEHBQGBUQgBCwGBMIJijBR?=
 =?us-ascii?q?fizOZYBSBXxQYFIc6IjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFAgMaA?=
 =?us-ascii?q?QaCXAMDAQIkHwokBQMDAQIGAQFICAMBUxkFgxyCAgEEpk0zhUCEcIw8F4F/gRG?=
 =?us-ascii?q?HfIVyAok9gXGVWQmCJo8kCxhgiQmHWyyZDYFGgg5wFYMngicXjh5AMYEHHIsUg?=
 =?us-ascii?q?XcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="43725422"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 01:37:46 -0800
Received: from localhost ([::1]:43470 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX0xd-0002xq-VF
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 04:37:46 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59807)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <david@redhat.com>) id 1gX0eI-0002qD-5U
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:17:47 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <david@redhat.com>) id 1gX0eC-0005jz-2O
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:17:46 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38563)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <david@redhat.com>)
	id 1gX0eB-0005jN-NI; Wed, 12 Dec 2018 04:17:39 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 8F4E5811DD;
	Wed, 12 Dec 2018 09:17:38 +0000 (UTC)
Received: from t460s.redhat.com (ovpn-117-229.ams2.redhat.com [10.36.117.229])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 09F9C1019625;
	Wed, 12 Dec 2018 09:17:32 +0000 (UTC)
From: David Hildenbrand <david@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 10:16:23 +0100
Message-Id: <20181212091623.16950-12-david@redhat.com>
In-Reply-To: <20181212091623.16950-1-david@redhat.com>
References: <20181212091623.16950-1-david@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Wed, 12 Dec 2018 09:17:38 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v4 11/11] spapr_pci: perform unplug via the
 hotplug handler
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Collin Walling <walling@linux.ibm.com>, Pierre Morel <pmorel@linux.ibm.com>,
	"Michael S . Tsirkin" <mst@redhat.com>, Cornelia Huck <cohuck@redhat.com>,
	David Hildenbrand <david@redhat.com>, Greg Kurz <groug@kaod.org>,
	Christian Borntraeger <borntraeger@de.ibm.com>,
	qemu-s390x@nongnu.org, qemu-ppc@nongnu.org, Thomas Huth <thuth@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>, Richard Henderson <rth@twiddle.net>,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Introduce and use the "unplug" callback.

This is a preparation for multi-stage hotplug handlers, whereby the bus
hotplug handler is overwritten by the machine hotplug handler. This handler
will then pass control to the bus hotplug handler. So to get this running
cleanly, we also have to make sure to go via the hotplug handler chain when
actually unplugging a device after an unplug request. Lookup the hotplug
handler and call "unplug".

Reviewed-by: Greg Kurz <groug@kaod.org>
Reviewed-by: Igor Mammedov <imammedo@redhat.com>
Acked-by: David Gibson <david@gibson.dropbear.id.au>
Signed-off-by: David Hildenbrand <david@redhat.com>
---
 hw/ppc/spapr_pci.c | 33 +++++++++++++++++++++------------
 1 file changed, 21 insertions(+), 12 deletions(-)

diff --git a/hw/ppc/spapr_pci.c b/hw/ppc/spapr_pci.c
index 2374d55fc1..bfb02ee96b 100644
--- a/hw/ppc/spapr_pci.c
+++ b/hw/ppc/spapr_pci.c
@@ -1370,18 +1370,9 @@ static int spapr_create_pci_child_dt(sPAPRPHBState *phb, PCIDevice *dev,
 /* Callback to be called during DRC release. */
 void spapr_phb_remove_pci_device_cb(DeviceState *dev)
 {
-    /* some version guests do not wait for completion of a device
-     * cleanup (generally done asynchronously by the kernel) before
-     * signaling to QEMU that the device is safe, but instead sleep
-     * for some 'safe' period of time. unfortunately on a busy host
-     * this sleep isn't guaranteed to be long enough, resulting in
-     * bad things like IRQ lines being left asserted during final
-     * device removal. to deal with this we call reset just prior
-     * to finalizing the device, which will put the device back into
-     * an 'idle' state, as the device cleanup code expects.
-     */
-    pci_device_reset(PCI_DEVICE(dev));
-    object_unparent(OBJECT(dev));
+    HotplugHandler *hotplug_ctrl = qdev_get_hotplug_handler(dev);
+
+    hotplug_handler_unplug(hotplug_ctrl, dev, &error_abort);
 }
 
 static sPAPRDRConnector *spapr_phb_get_pci_func_drc(sPAPRPHBState *phb,
@@ -1490,6 +1481,23 @@ out:
     }
 }
 
+static void spapr_pci_unplug(HotplugHandler *plug_handler,
+                             DeviceState *plugged_dev, Error **errp)
+{
+    /* some version guests do not wait for completion of a device
+     * cleanup (generally done asynchronously by the kernel) before
+     * signaling to QEMU that the device is safe, but instead sleep
+     * for some 'safe' period of time. unfortunately on a busy host
+     * this sleep isn't guaranteed to be long enough, resulting in
+     * bad things like IRQ lines being left asserted during final
+     * device removal. to deal with this we call reset just prior
+     * to finalizing the device, which will put the device back into
+     * an 'idle' state, as the device cleanup code expects.
+     */
+    pci_device_reset(PCI_DEVICE(plugged_dev));
+    object_unparent(OBJECT(plugged_dev));
+}
+
 static void spapr_pci_unplug_request(HotplugHandler *plug_handler,
                                      DeviceState *plugged_dev, Error **errp)
 {
@@ -1965,6 +1973,7 @@ static void spapr_phb_class_init(ObjectClass *klass, void *data)
     dc->user_creatable = true;
     set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);
     hp->plug = spapr_pci_plug;
+    hp->unplug = spapr_pci_unplug;
     hp->unplug_request = spapr_pci_unplug_request;
 }
 
-- 
2.17.2


