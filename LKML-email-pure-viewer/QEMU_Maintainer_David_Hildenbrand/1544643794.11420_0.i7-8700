Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:43:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5A76B5803DC
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 01:24:40 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 12 Dec 2018 01:24:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A19A8YxRV5k1Se89/kaNEBRnTLtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYRKN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?YYUBDOgOPehFoYnlpVYArxSzCRSiCe/z1DBInWT70bEm3+k7DQ3KwBAsE84IvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafG1zrDcfJW1irg44bKcxAhpeyDUqx2ccXK00kgDQXFgUiN?=
 =?us-ascii?q?ooHiIjyazPoNs2mG4Od7T+KglXMoqwFrrTiz3Msjlo7JhocMx13C6C53w541KM?=
 =?us-ascii?q?WmREJnYtOoCoZcuzyZOodsXM8vTWFltDwnxrAEoZK3YjQGxZA9yxLCZfGLbZKE?=
 =?us-ascii?q?7g/gWeufOzt0mnFodbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gJ1xzS8ciHVu?=
 =?us-ascii?q?B98l2u2TaJygDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7m1/6gLKLekgn4OSk?=
 =?us-ascii?q?9erqb7X8qpOBNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OSlyrLj+FD5TKxXgfIojK?=
 =?us-ascii?q?nWrpTaKd0Aqa6+Hg9V1Jos5AikDzuh1NQYnHoHI0xfdBOIkojkI1XOIPH+Dfei?=
 =?us-ascii?q?jFWgijZrx/baPrL/BpXBNGTMkLDkfbtm7U5czwwzzd9Z55JJEL0BJ+jzWkDpuN?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl0oMeWGGPDbGDPKLdrF+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaCPwI/J9Pk/MYWbwmsxTViAOvxEiV6rsj1uNVyMVYGy9GK?=
 =?us-ascii?q?c15zU+AYThCp/fR4erm/uY0SKmW5FbeG1CWW2KCmriIoCNWvMQb3CLL8p81zAJ?=
 =?us-ascii?q?S7WlDpUszAyjrxPSzb1hIezJvCoCusX4ydJ36ubPwAw07iF+FM+H0muAHF1zy3?=
 =?us-ascii?q?oFQiJz0K1hrEhVzFCF3q5lxftCGo99/fRMByszK5/Qh8x7D9z/XAjbd9GFAAKq?=
 =?us-ascii?q?S8unDRkrQ94xysNIaEF4TYbxxivf1janVudG34eAA4Y5p+eFhyD8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BCAACW0hBcmBHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMCqCOIxzizOZYIFzFBgUhzoiNgcNAQMBAQEBAQECARMBAQEBAQgLCwY?=
 =?us-ascii?q?bDi+CNgUCAxoBBoJcAwMBAiQfCikDAwECBgEBSAgDAUIRGQWCUUuCAgEEpkgzh?=
 =?us-ascii?q?UCEcIw8F4F/jn8Ciy6VWQmCJo8kCxhgiQmHWyyZDYFNA4IEcBWDJ4InFxKODEA?=
 =?us-ascii?q?xgQccixSBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BCAACW0hBcmBHrdtBjHQEBBQEHBQGBUwYBCwGBMCqCOIx?=
 =?us-ascii?q?zizOZYIFzFBgUhzoiNgcNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CNgUCAxoBB?=
 =?us-ascii?q?oJcAwMBAiQfCikDAwECBgEBSAgDAUIRGQWCUUuCAgEEpkgzhUCEcIw8F4F/jn8?=
 =?us-ascii?q?Ciy6VWQmCJo8kCxhgiQmHWyyZDYFNA4IEcBWDJ4InFxKODEAxgQccixSBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="57131135"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 01:24:26 -0800
Received: from localhost ([::1]:43359 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX0kk-0000IW-1h
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 04:24:26 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59486)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <david@redhat.com>) id 1gX0df-0002Gm-RA
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:17:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <david@redhat.com>) id 1gX0dc-0005TO-Jd
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:17:07 -0500
Received: from mx1.redhat.com ([209.132.183.28]:43534)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <david@redhat.com>)
	id 1gX0dc-0005Sy-Bc; Wed, 12 Dec 2018 04:17:04 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 802E52D7E0;
	Wed, 12 Dec 2018 09:17:03 +0000 (UTC)
Received: from t460s.redhat.com (ovpn-117-229.ams2.redhat.com [10.36.117.229])
	by smtp.corp.redhat.com (Postfix) with ESMTP id BC2D1105704D;
	Wed, 12 Dec 2018 09:16:44 +0000 (UTC)
From: David Hildenbrand <david@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 10:16:17 +0100
Message-Id: <20181212091623.16950-6-david@redhat.com>
In-Reply-To: <20181212091623.16950-1-david@redhat.com>
References: <20181212091623.16950-1-david@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Wed, 12 Dec 2018 09:17:03 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v4 05/11] pci/pcihp: perform check for bus
 capability in pre_plug handler
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Collin Walling <walling@linux.ibm.com>, Pierre Morel <pmorel@linux.ibm.com>,
	"Michael S . Tsirkin" <mst@redhat.com>, Cornelia Huck <cohuck@redhat.com>,
	David Hildenbrand <david@redhat.com>, Greg Kurz <groug@kaod.org>,
	Christian Borntraeger <borntraeger@de.ibm.com>,
	qemu-s390x@nongnu.org, qemu-ppc@nongnu.org, Thomas Huth <thuth@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>, Richard Henderson <rth@twiddle.net>,
	David Gibson <david@gibson.dropbear.id.au>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Perform the check in the pre_plug handler. In addition, we need the
capability only if the device is actually hotplugged (and not created
during machine initialization). This is a preparation for coldplugging
pci devices via that hotplug handler.

Reviewed-by: Igor Mammedov <imammedo@redhat.com>
Signed-off-by: David Hildenbrand <david@redhat.com>
---
 hw/acpi/pcihp.c         | 21 +++++++++++++++------
 hw/acpi/piix4.c         | 16 ++++++++++++++--
 include/hw/acpi/pcihp.h |  2 ++
 3 files changed, 31 insertions(+), 8 deletions(-)

diff --git a/hw/acpi/pcihp.c b/hw/acpi/pcihp.c
index 80d42e12ff..5e7cef173c 100644
--- a/hw/acpi/pcihp.c
+++ b/hw/acpi/pcihp.c
@@ -217,17 +217,24 @@ void acpi_pcihp_reset(AcpiPciHpState *s)
     acpi_pcihp_update(s);
 }
 
-void acpi_pcihp_device_plug_cb(HotplugHandler *hotplug_dev, AcpiPciHpState *s,
-                               DeviceState *dev, Error **errp)
+void acpi_pcihp_device_pre_plug_cb(HotplugHandler *hotplug_dev,
+                                   DeviceState *dev, Error **errp)
 {
-    PCIDevice *pdev = PCI_DEVICE(dev);
-    int slot = PCI_SLOT(pdev->devfn);
-    int bsel = acpi_pcihp_get_bsel(pci_get_bus(pdev));
-    if (bsel < 0) {
+    /* Only hotplugged devices need the hotplug capability. */
+    if (dev->hotplugged &&
+        acpi_pcihp_get_bsel(pci_get_bus(PCI_DEVICE(dev))) < 0) {
         error_setg(errp, "Unsupported bus. Bus doesn't have property '"
                    ACPI_PCIHP_PROP_BSEL "' set");
         return;
     }
+}
+
+void acpi_pcihp_device_plug_cb(HotplugHandler *hotplug_dev, AcpiPciHpState *s,
+                               DeviceState *dev, Error **errp)
+{
+    PCIDevice *pdev = PCI_DEVICE(dev);
+    int slot = PCI_SLOT(pdev->devfn);
+    int bsel;
 
     /* Don't send event when device is enabled during qemu machine creation:
      * it is present on boot, no hotplug event is necessary. We do send an
@@ -236,6 +243,8 @@ void acpi_pcihp_device_plug_cb(HotplugHandler *hotplug_dev, AcpiPciHpState *s,
         return;
     }
 
+    bsel = acpi_pcihp_get_bsel(pci_get_bus(pdev));
+    g_assert(bsel >= 0);
     s->acpi_pcihp_pci_status[bsel].up |= (1U << slot);
     acpi_send_event(DEVICE(hotplug_dev), ACPI_PCI_HOTPLUG_STATUS);
 }
diff --git a/hw/acpi/piix4.c b/hw/acpi/piix4.c
index e330f24c71..e586cfdc53 100644
--- a/hw/acpi/piix4.c
+++ b/hw/acpi/piix4.c
@@ -370,6 +370,18 @@ static void piix4_pm_powerdown_req(Notifier *n, void *opaque)
     acpi_pm1_evt_power_down(&s->ar);
 }
 
+static void piix4_device_pre_plug_cb(HotplugHandler *hotplug_dev,
+                                    DeviceState *dev, Error **errp)
+{
+    if (object_dynamic_cast(OBJECT(dev), TYPE_PCI_DEVICE)) {
+        acpi_pcihp_device_pre_plug_cb(hotplug_dev, dev, errp);
+    } else if (!object_dynamic_cast(OBJECT(dev), TYPE_PC_DIMM) &&
+               !object_dynamic_cast(OBJECT(dev), TYPE_CPU)) {
+        error_setg(errp, "acpi: device pre plug request for not supported"
+                   " device type: %s", object_get_typename(OBJECT(dev)));
+    }
+}
+
 static void piix4_device_plug_cb(HotplugHandler *hotplug_dev,
                                  DeviceState *dev, Error **errp)
 {
@@ -392,8 +404,7 @@ static void piix4_device_plug_cb(HotplugHandler *hotplug_dev,
             acpi_cpu_plug_cb(hotplug_dev, &s->cpuhp_state, dev, errp);
         }
     } else {
-        error_setg(errp, "acpi: device plug request for not supported device"
-                   " type: %s", object_get_typename(OBJECT(dev)));
+        g_assert_not_reached();
     }
 }
 
@@ -702,6 +713,7 @@ static void piix4_pm_class_init(ObjectClass *klass, void *data)
      */
     dc->user_creatable = false;
     dc->hotpluggable = false;
+    hc->pre_plug = piix4_device_pre_plug_cb;
     hc->plug = piix4_device_plug_cb;
     hc->unplug_request = piix4_device_unplug_request_cb;
     hc->unplug = piix4_device_unplug_cb;
diff --git a/include/hw/acpi/pcihp.h b/include/hw/acpi/pcihp.h
index 8a65f99fc8..ce31625850 100644
--- a/include/hw/acpi/pcihp.h
+++ b/include/hw/acpi/pcihp.h
@@ -56,6 +56,8 @@ typedef struct AcpiPciHpState {
 void acpi_pcihp_init(Object *owner, AcpiPciHpState *, PCIBus *root,
                      MemoryRegion *address_space_io, bool bridges_enabled);
 
+void acpi_pcihp_device_pre_plug_cb(HotplugHandler *hotplug_dev,
+                                   DeviceState *dev, Error **errp);
 void acpi_pcihp_device_plug_cb(HotplugHandler *hotplug_dev, AcpiPciHpState *s,
                                DeviceState *dev, Error **errp);
 void acpi_pcihp_device_unplug_cb(HotplugHandler *hotplug_dev, AcpiPciHpState *s,
-- 
2.17.2


