Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:39:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 47E59580380;
	Mon, 10 Dec 2018 08:09:50 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 08:09:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AeYcA0RDhqILUJJi8+iaRUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP79oMuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypUAOrQO8CAS3C+Pj1iVFi2Xq0aEmzegsFxzN0gw6H9IJtX?=
 =?us-ascii?q?TZtNv5OqkXUeC00KnI1zXCZO5Z1jvn9YPGdA4uoe+NXbJ2f8ba1E4iFwfYgVWO?=
 =?us-ascii?q?soHqJTeV1vgJs2ia6epgSO2uh3QgqwFrrTii38EhgZTHiIISz1DL7yR5wIAtKN?=
 =?us-ascii?q?23SU57fd6kEIZLuCGHLIt5XNkiTH1vuCY81r0Jp5i7fDQQxJs7wB7fbuSLc4eJ?=
 =?us-ascii?q?4hL/VOaRPCx3iGh5d7K4gha/91WrxO7kVsSszlpGsi5InsPRun0DyRDf8NWLR/?=
 =?us-ascii?q?hh8ku72DuC1Rjf5vxALE07j6bXNoItz7wqmpYOs0nPBC/7lUfwgaSLbEsr4PKo?=
 =?us-ascii?q?5P7iYrj+pp+TKYt0igbmP6QwlcywH/44PhINX2eF4+S80qPs/UnjTLVNlP02nb?=
 =?us-ascii?q?HVsJHcJcsFuq60GxFZ3pon5hqlEjur3soUkWMaIF9GZB6LlYnkNlPWLPD9F/i/?=
 =?us-ascii?q?glCskDlxx/DBO73sGpHNLnnFkLf8crdx8k1cxxQpzdBZ+Z1UDqgNIPX9W0/3qt?=
 =?us-ascii?q?PYFAQ0MxK7w+n5EtVxzIAeVnyVAq+fLqzStUWE5uU1I+mDfIMVoiryK+A55/7y?=
 =?us-ascii?q?in80gVsdfaiq3ZQJcny5EelmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2Hp1MaWBHFlCDC3Doe5+EW/cRci2SJMBhnycA?=
 =?us-ascii?q?VbigTY8hyB6vuBX7y7phMurb5CkYuYj/29hy4u3ZjQsy+iBsD8SBz2GNSHl5nm?=
 =?us-ascii?q?EPRzAoxqx/okt9ylGF0ah/mPFYEd1T5/VUUgY1L5Lczup6C8zsVQLFZNuGVFGm?=
 =?us-ascii?q?QtC+CzErUt0x28MOY1p6G9i6lB/DxCqqA7gWl7CRHpw76KDc0mP1J8Z8zXbGya?=
 =?us-ascii?q?Ygg0MnQstJKW2pmKp/+xLPCI7OlkWTj7yqergE3C7R6GeDynKDvEJCXw52S6nF?=
 =?us-ascii?q?WXEfaVHQrdT2/U7CS76uCbI6MgpO08KCK61KasH3glVCXvvsJNPeY2epkWeqGR?=
 =?us-ascii?q?mI3q+MbJbte2gFwSrSElYEnB4J8XaGLwc+ADyhrHzYDDBpEVLvYEbs8e1lpXO/?=
 =?us-ascii?q?T080yRyKbkJ727q0/B4VmeKTS/cJ0r0Yvychri1+HEyh0NLOF9qAuw1hcb1Bbt?=
 =?us-ascii?q?wn/ldIy3jVtwxnMZymNKBtmFgefh9zv0Pv0RV3F4pBndIrrHMs0Ap9N6aY3Eld?=
 =?us-ascii?q?eDOf2JD6IqfXJXXq/BCzd67W3UnT0MqX+qcK7/Q4t1XjvQGzGko+6Xln1MNV03?=
 =?us-ascii?q?+d5pXMAwofSpbxUkcx9xhnqLDWeCg954XI1XJyNam4qCPN29UsBOE90BavY89f?=
 =?us-ascii?q?ML+YFA/1C8AVHcyuJ/Ilmle3bhMIJvtd9LMpMMy8cfuG26mrPPh7kTKijGRH5p?=
 =?us-ascii?q?19002W+yp9TO7Iw4gKw/WC0gSbUDf8iU+rstrrloBceTESAm2/xDDkBY5MfKF9?=
 =?us-ascii?q?YZwHCGauI8KtwNV+iIXgW3pZ9F6lGlMH19WleRuUb1zhwwJQ0V4brmCgmSu91z?=
 =?us-ascii?q?Z0iS0mrrKD3CzSxOTvbAAHOm9XS2Z4l1fjPI+0g8ocXEe2dQgplQKp6lrgyKhf?=
 =?us-ascii?q?uatwMXPTQUBOfyXtK2FiU62wtqeNYsJV6ZMotzlXX/q4YVyAVrH9pB4a2Tv5H2?=
 =?us-ascii?q?RC3DA7ay2qupLhkh16iWKRNnZyoGDCecFtwxfS/9jcRf9X3jobSyh0kzjXBl6g?=
 =?us-ascii?q?P9a3+dWYjYvMsue7V2i5TJ1cbTHrzZ+ctCu8/WBqAwewn+qwmt3kFgg2yzT72M?=
 =?us-ascii?q?NpVSXLrRb8ZJfk16KhPOJjf0loAkL86sVgFoF/lIswmI8f2XwAipqJ+noHlH/5?=
 =?us-ascii?q?Mc9H1qLmcHoNWTkLzsbV4Qf/301vNHCJx4P/VniGxsthZt+6Yn4Z2y4n7sBKDr?=
 =?us-ascii?q?uU46JAnSdvvlW4qgfRa+BnnjgB0fsu9GIag+YRtQou1CqdA6oeHUlFPSP2kRSI?=
 =?us-ascii?q?4MuzrKFWZGapbLix21ByndGnDLGevA5cXGz1dYslHS919s9/Kk7D0GXv6oH4f9?=
 =?us-ascii?q?ndddcTthyXkxjaleRUJow+luEWhSV5I2LypmMqy/Q0jRF12ZG6vY6HK3hi/a6j?=
 =?us-ascii?q?Ax5YMCH1aN0X+j33kalemcOW1Zi1Hpp9AjULQIfoTfWwHTIOsvTnMhyCETwmpX?=
 =?us-ascii?q?edBLrfBhSf6EZ9onLLEpCrMWyXJXYDwdVjQhmdOFJQgAQOUDommZ45ExigxNb9?=
 =?us-ascii?q?f0dh+jAR+ln4pwNXxe1yMBn/VnrfqB2sajcpU5WfKBtW7gdf50baK8Ce7+RzHz?=
 =?us-ascii?q?1G8Z2ltgCCNmubZwFQB2ETRkOEH0zjPqWp5dTY8eiXHO++IOXVYbmUtexSTfSI?=
 =?us-ascii?q?xY+s0ot7+TaDLN6PM2JmD/063EpDQH94F97YmzUJVywYiSbNY9SHqxe7/y19tt?=
 =?us-ascii?q?q//+jzWALz+YuPDKNfMNVo+xCrmKeDKvSfhCBjJTZD0ZMMw3DIxaMb3F4TjSFu?=
 =?us-ascii?q?ajasHa4BtS7LUKLfhKtXAwQHZCN0MctC97g80RVVOc7HltP10aZ1jv4rBFdEVl?=
 =?us-ascii?q?zhmcCpadYJI2GnM1PHC1iENK6bJT3Q2Mz3ZaK8SbtNjORbrRGwuDCbE1P9MTSH?=
 =?us-ascii?q?jTXmSxevMeRUhiGBIBNeoJ29cgpqCWX7Vt3mdwa0MMVpgjw227E0gnLKOHUYMT?=
 =?us-ascii?q?h9dUNNs7KR4TlZgvV5B2xO8H5lIfOYlCae6unSMowWvudzAiRoi+Ja52w3y6dU?=
 =?us-ascii?q?7CFBXvB6hDHeocJuo164lOmC0T5nUBtIqjZWi4OHp0RiOaPF9pZeXXbI5g4C7W?=
 =?us-ascii?q?KVCx4SvdtqFsXvu7xMytjIjK/yKC1N89TR/csdAcjbMMOGMHo7PhrvFz7ZFw8F?=
 =?us-ascii?q?TT+tNWHCiE1RivCS9nuJrpckrpjggoYBSrheVA99KvRPMk14GJQoPY1rWTVsxa?=
 =?us-ascii?q?aSkcpO72eksB7XbMBbpouBXfWXV7GnEj+dg/FubhYDwbf1ZdAJP4n180hjbERq?=
 =?us-ascii?q?2YHLA1GWWspC9GkpTAYxrV4F0H9xR2t7j0DlbQyk5lcQGOSykxpwjRFxN6Bl0z?=
 =?us-ascii?q?Ph7B8RK0HWqTE3jgFlntHojhiLfTLxJbv2VoZTXW68nk49I9vfXhpyaAyohk9l?=
 =?us-ascii?q?fGPAWq5Wp7htb2ZmjEnbo5QZStBGSqgRKjMVxO2Ndr0Wlxx4pzumwwUPse/JF7?=
 =?us-ascii?q?NrkBcucJixvzRHwQ01P419HrDZOKcclgsYvamJpCL9k7lpmAI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAAAIjw5ch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGCaYECJ5gigg0UkkGEfIFzAg0dDwQBh20iNQgNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIkUgYJAQEKGAklAwwdKwYBF?=
 =?us-ascii?q?4McAYIBBAEKplwzhAIBKgGFYwoFgm2JNBEGgX+BEYMSgSgZAYFcAhWFAYImApA?=
 =?us-ascii?q?3kD4HAgKHBoo8I4FchReKSiyIdoRzjGMBggt9CIMngicMC4NKihwBOTwBMgGBB?=
 =?us-ascii?q?AEBjBgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AFAAAIjw5ch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGCaYECJ5gigg0UkkGEfIFzAg0dDwQBh20iNQgNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKSMMgjYkAYJiAQIDAQIkUgYJAQEKGAklAwwdKwYBF4McAYIBBAEKplw?=
 =?us-ascii?q?zhAIBKgGFYwoFgm2JNBEGgX+BEYMSgSgZAYFcAhWFAYImApA3kD4HAgKHBoo8I?=
 =?us-ascii?q?4FchReKSiyIdoRzjGMBggt9CIMngicMC4NKihwBOTwBMgGBBAEBjBgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="asc'?scan'208";a="66126134"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 10 Dec 2018 08:09:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727664AbeLJQJp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 11:09:45 -0500
Received: from vmicros1.altlinux.org ([194.107.17.57]:50242 "EHLO
        vmicros1.altlinux.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727494AbeLJQJn (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 11:09:43 -0500
Received: from mua.local.altlinux.org (mua.local.altlinux.org [192.168.1.14])
        by vmicros1.altlinux.org (Postfix) with ESMTP id 4643A72CC66;
        Mon, 10 Dec 2018 19:09:40 +0300 (MSK)
Received: by mua.local.altlinux.org (Postfix, from userid 508)
        id 392467CF2A6; Mon, 10 Dec 2018 19:09:40 +0300 (MSK)
Date: Mon, 10 Dec 2018 19:09:40 +0300
From: "Dmitry V. Levin" <ldv@altlinux.org>
To: Paul Burton <paul.burton@mips.com>,
        Ralf Baechle <ralf@linux-mips.org>,
        James Hogan <jhogan@kernel.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Andy Lutomirski <luto@kernel.org>
Cc: Elvira Khabirova <lineprinter@altlinux.org>,
        Eugene Syromyatnikov <esyr@redhat.com>,
        Kees Cook <keescook@chromium.org>,
        Jann Horn <jannh@google.com>, linux-api@vger.kernel.org,
        strace-devel@lists.strace.io, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v5 24/25] ptrace: add PTRACE_GET_SYSCALL_INFO request
Message-ID: <20181210160940.GF14149@altlinux.org>
References: <20181210043126.GX6131@altlinux.org>
 <201812102200.snodXJSH%fengguang.wu@intel.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="ZPt4rx8FFjLCG7dd"
Content-Disposition: inline
In-Reply-To: <201812102200.snodXJSH%fengguang.wu@intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--ZPt4rx8FFjLCG7dd
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi, things are getting too complicated and we need some advice how to deal
with this frame_pointer issue.

On Mon, Dec 10, 2018 at 10:26:50PM +0800, kbuild test robot wrote:
> Hi Elvira,
>=20
> Thank you for the patch! Yet something to improve:
>=20
> [auto build test ERROR on linus/master]
> [also build test ERROR on v4.20-rc6]
> [cannot apply to next-20181207]
> [if your patch is applied to the wrong git tree, please drop us a note to=
 help improve the system]
>=20
> url:    https://github.com/0day-ci/linux/commits/Dmitry-V-Levin/ptrace-ad=
d-PTRACE_GET_SYSCALL_INFO-request/20181210-174745
> config: mips-malta_kvm_defconfig (attached as .config)
> compiler: mipsel-linux-gnu-gcc (Debian 7.2.0-11) 7.2.0
> reproduce:
>         wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbi=
n/make.cross -O ~/bin/make.cross
>         chmod +x ~/bin/make.cross
>         # save the attached .config to linux build tree
>         GCC_VERSION=3D7.2.0 make.cross ARCH=3Dmips=20
>=20
> All errors (new ones prefixed by >>):
>=20
>    kernel/ptrace.c: In function 'ptrace_get_syscall_info':
> >> kernel/ptrace.c:942:20: error: implicit declaration of function 'frame=
_pointer'; did you mean 'trace_printk'? [-Werror=3Dimplicit-function-declar=
ation]
>       .frame_pointer =3D frame_pointer(regs)
>                        ^~~~~~~~~~~~~
>                        trace_printk
>    cc1: some warnings being treated as errors
>=20
> vim +942 kernel/ptrace.c
>=20
>    931=09
>    932	static int
>    933	ptrace_get_syscall_info(struct task_struct *child, unsigned long u=
ser_size,
>    934				void __user *datavp)
>    935	{
>    936		struct pt_regs *regs =3D task_pt_regs(child);
>    937		struct ptrace_syscall_info info =3D {
>    938			.op =3D PTRACE_SYSCALL_INFO_NONE,
>    939			.arch =3D syscall_get_arch(child),
>    940			.instruction_pointer =3D instruction_pointer(regs),
>    941			.stack_pointer =3D user_stack_pointer(regs),
>  > 942			.frame_pointer =3D frame_pointer(regs)
>    943		};
>    944		unsigned long actual_size =3D offsetof(struct ptrace_syscall_info=
, entry);
>    945		unsigned long write_size;
>    946=09
>    947		/*
>    948		 * This does not need lock_task_sighand() to access
>    949		 * child->last_siginfo because ptrace_freeze_traced()
>    950		 * called earlier by ptrace_check_attach() ensures that
>    951		 * the tracee cannot go away and clear its last_siginfo.
>    952		 */
>    953		switch (child->last_siginfo ? child->last_siginfo->si_code : 0) {
>    954		case SIGTRAP | 0x80:
>    955			switch (child->ptrace_message) {
>    956			case PTRACE_EVENTMSG_SYSCALL_ENTRY:
>    957				actual_size =3D ptrace_get_syscall_info_entry(child, regs,
>    958									    &info);
>    959				break;
>    960			case PTRACE_EVENTMSG_SYSCALL_EXIT:
>    961				actual_size =3D ptrace_get_syscall_info_exit(child, regs,
>    962									   &info);
>    963				break;
>    964			}
>    965			break;
>    966		case SIGTRAP | (PTRACE_EVENT_SECCOMP << 8):
>    967			actual_size =3D ptrace_get_syscall_info_seccomp(child, regs,
>    968								      &info);
>    969			break;
>    970		}
>    971=09
>    972		write_size =3D min(actual_size, user_size);
>    973		return copy_to_user(datavp, &info, write_size) ? -EFAULT : actual=
_size;
>    974	}
>    975=09

We decided to add .frame_pointer to struct ptrace_syscall_info just for
consistency with .instruction_pointer and .stack_pointer; I must have been
misled by comments in asm-generic/ptrace.h into thinking that
frame_pointer() is universally available across architectures.

Unlike .instruction_pointer and .stack_pointer that are actually needed
in strace, .frame_pointer is not used, so from strace PoV we don't really
need it.

So the question is, does anybody need a
struct ptrace_syscall_info.frame_pointer?

If yes, how can frame_pointer() be defined on MIPS?
Or should we just forget about making sense of frame_pointer() and remove
struct ptrace_syscall_info.frame_pointer from the proposed API?


--=20
ldv

--ZPt4rx8FFjLCG7dd
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIcBAEBCAAGBQJcDo/DAAoJEAVFT+BVnCUICIgQAKh+d6RX34ftfTYO4197Q6II
6KMnUxcItqrc2welYp+xMCCiz831/STwqczpfeNNYtKnmaXKgcghjGleF0QFmRv3
0Y3zM9YzynIVIWwBH8lKYWasWTYoekNsT8bTf7uUP6ycD5kSVrLo0DgcuJV2n27s
TmJ9ez3AdpdleGRJQkmGeWTKvId+woQR3v+Ag0LcRmOtbEwm2PlQX3IxiV+SEr51
Fqy3FO56oDENuZjr2i16begsUPz7fHKlQHLvn65P+Hw43Dw6i50ywXBwsJmd1hFI
fA4udKAK4Zu6LfUrNA8EeEshSjMz4Scrq+5/d1vpDTN161TstFgLXtnae6FYIxms
d217pbktjP3Sy9Mge5jSHZosC0+rqJj5x/1iNGkchviJITfh8SjD1fofngycQyVA
ZbyQUPE7o9Rrr/Vrb0cD16E/Tg3FJEA0U61ZNJP57SsGeG7L3aQ0o3rHo4WnrnCQ
PNXnnduLI9Q/Zy9k3Jq6rYn5p/moPcR5HHday3klbrnvmdMtdX7i1dzZeyND3JpG
i0/bWgF597xWtwvt4sdWRry8P42oIxwL5iyFPGiC83IoekHz/o5WUuXgjWNY6YOI
XM8q5ctTLWEZF8KvdLOwwjmTeJ6gLXOfO2wQhDRhgFs3uCfnP8zokDynzF7EKf6C
ZEGfug6XU0R1J745wfue
=LBY1
-----END PGP SIGNATURE-----

--ZPt4rx8FFjLCG7dd--
