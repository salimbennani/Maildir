Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 14:24:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7425E580322;
	Mon, 26 Nov 2018 22:11:46 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 26 Nov 2018 22:11:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJubSWxRy7lsvYR7kh8kRZiIyIdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBKCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34Or8TUe+py6nIyS/Mb+hL0jrg74jIcwwuofGWUrJsbMHczlQgFxnEjlWW?=
 =?us-ascii?q?qozqIyma1vgWvmeH7+pgT+Wvi2smqwFspzij3MAsipPGho8MzF3P6CZ3wJ4tKN?=
 =?us-ascii?q?GmVEJ2ZcSoHIZeui2ELYd6X8AvT31ytCs7yLAKoYC3cDQOxZg9xBPSa+aLf5aV?=
 =?us-ascii?q?7h/sTuqdPDN1iXJjdbminRi961Kgxff5VsSs0FZFsC5Fkt7Uu3AT2Bzc9NKHRu?=
 =?us-ascii?q?F+/ki/wzaP0R7c6uVeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFnygaOMa0kp9Pak?=
 =?us-ascii?q?5/76brjlupOQLY55hwPmPqQrgMO/AOA4MgYUX2ic/OSxzLnj/Uz/QLVXgfw6i6?=
 =?us-ascii?q?rZv47AJcQduKG5BxZZ0oEt6ha5ETimys8VnWcILF1bYhKLlYvpNE/UIPD+E/i/?=
 =?us-ascii?q?h06gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPYqUWI6f43I+mQeI8Vvy7wK/g/6P7v?=
 =?us-ascii?q?kX82g1gdcbOp3ZsKcn+4GPtmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2Hp9RZm9YEFyMEnDod4OCW/cLcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mFyW6NVGF0nm?=
 =?us-ascii?q?QLRzMsxqBwu059x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDY0VnFNWklBzD2yuqDKUTl7yEH5E09qPc337sJ8dy0XrG1a?=
 =?us-ascii?q?8hj0U4TctLL2Gpmql/9w3LDY7Tj0qZj7qqdbgb3CPV6WiM13SOs19CXA5wS6rF?=
 =?us-ascii?q?W2sfaVXQrdj+4kPCTLquCbA8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgO8nmcKwgxGD2to2LEAzxoDlLgfUXs/PJ6qHO6?=
 =?us-ascii?q?SE800g6LY1dg17qz5h4am/icR+kP0bIDvScrsy90E0ql39LKF9qAoBJsfLldYd?=
 =?us-ascii?q?M451dHyWLZtgxnMpy8NaxigUQecwB2v0Po2BV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk3sVHjsx+mF0U883RrycJa02?=
 =?us-ascii?q?aB6ZrQCgoSUpXxUlgs+hh+prHaZDQ95ozO2X1tN6m0riHN29YzCOQ5zRages9V?=
 =?us-ascii?q?MLmYGw/qD80aG8+uJfQqmli0dB4LIPpe9a80P8y8cfuG17WmPOJhnDKgkGRG75?=
 =?us-ascii?q?px0kOK9ypgVOHI24wJzO2f3guCTz38lkuustjrmYBYYjEfBnC/ySn4C4FLfK19?=
 =?us-ascii?q?YIELBX2oI8Kp3NV+hofhVGJC+16nGlwJxtWpeR2Ub1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUmobggljhuk6Vzhx6hG?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D07dSuluo/6nxx5j2KRNm1zo2DaecFzxBff4sLTRfhK0zoCRSl4jyTXB1em?=
 =?us-ascii?q?M9mo+9WUi4nMsuSkW229UZ1TdDHhzZmcuyuj+W1qHRq/kuizm9L9Fgg2yy3719?=
 =?us-ascii?q?hsVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL9dnUNRCQHw97I4Af/3k1jIWmEx4b4VnWb38tgaMO2YmIQ2iIh8c9KDL?=
 =?us-ascii?q?2Y46BDnStwulC4tx7eYeBhnjcBzvsj8Hsag+AKuAU31CmcDK4dHVJEPSPyjRSH?=
 =?us-ascii?q?9M6xrL9YZGu0dbiw1Ux+nc2uDb2YowFcXmr5dYkmHSNq8sp/N1fM2mXp6o74YN?=
 =?us-ascii?q?nQcc4TthqMnhfciOhVLYg9l/sQiiphJGL9pmYly+8ggBxq3JG6upWHKmp38KK4?=
 =?us-ascii?q?BB5YKiP6Z8cJ9j7xiqZem96c35qzEZV5BjULQJzoQOqzHz0IsvTnMxuOHCc4qn?=
 =?us-ascii?q?eGArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph5DAe/Fv4pQVXyu5yKxnzSGTfpBqrajcpTpiQNgFW4xpG50fUN8ye8+1yEz?=
 =?us-ascii?q?tZ/p2nsAyCNGibax5UAmEOX0yOH0rjMaW25dnc7+iYAfKzLvvJYbWTsOxeSu2H?=
 =?us-ascii?q?xZS13ot9+DaMMMqPM2JmD/063EpDQH94F97YmzUJVywYiSbNY9SHqxe7/y19tt?=
 =?us-ascii?q?q//+jzWALz+YuPDKNfMdVx9BC3gqeDNO+QiDx6KTZC0ZMMymHHyKIC3F4JkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdT1?=
 =?us-ascii?q?Phh9qmZdYULGC9Ll/HAEeLOa+CJT3KxcH3fKy9RadRjOVSqx2/pzKbH1X/MTSE?=
 =?us-ascii?q?kjnjTwqvPv1UjCGHIBxev5mwcgpsCWjmVt7pdge3P8N3jTIox705nXfKNW8aMT?=
 =?us-ascii?q?hhfEJBtLyQ7SVEgvphH2xN9GZqLe6BmyyB9enXNo4Wsed3AiRzj+9b4G41y71Q?=
 =?us-ascii?q?7CFFQvx6gCrTrt50rFGgnemC0T5nUBtIqjZWi4OHp0RiOaPF9pZeXXbI5g4C7W?=
 =?us-ascii?q?KVC0dCm9wwNdDuqqEY7sWHwL3+KSZDtdbJ1c4RC8ndNM+EdnEmNEy6NiTTCV4j?=
 =?us-ascii?q?TDWsMWjEz2ZakfqS/2Hd+pQgq57vk5MSYrRbTlswF+4fTEN/E4pRc99MQjo4nO?=
 =?us-ascii?q?vD34Yz7n2koUyUHZ0Csw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAACg3/xbh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeDeYgYjARQAQeBNRSJBo4jgXYpEwGIaCI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsNAgImAgIDHxIBB?=
 =?us-ascii?q?QEcBhMFA4MZgXUFCAWaEDyKHXCBL4J2AQEFhysIEnmKfhd4gQeEI4FBgwYbgyC?=
 =?us-ascii?q?CV4sWhAt2j3UJkTAYkQmYJjCBJYINMxoIKAhsBoI1ghsYh0CBKYVLMjOBBQEBi?=
 =?us-ascii?q?xWCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0AOAACg3/xbh0O0hNFkHQEBBQEHBQGBUQgBCwGDayeDeYg?=
 =?us-ascii?q?YjARQAQeBNRSJBo4jgXYpEwGIaCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcBhMFA4MZgXU?=
 =?us-ascii?q?FCAWaEDyKHXCBL4J2AQEFhysIEnmKfhd4gQeEI4FBgwYbgyCCV4sWhAt2j3UJk?=
 =?us-ascii?q?TAYkQmYJjCBJYINMxoIKAhsBoI1ghsYh0CBKYVLMjOBBQEBixWCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="41680240"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 22:11:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728076AbeK0RIZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 12:08:25 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:46812 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727222AbeK0RIY (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 12:08:24 -0500
Received: by mail-pl1-f195.google.com with SMTP id t13so15074720ply.13
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 22:11:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=Y23FnFMaO6YrW2i31ESgNSKdX3WAEiLSrILGYcVJTUM=;
        b=eC83hecsH8wV31fX9f9EARfHoHFK4aJSIaShlnD0t0ossfcqWVrtjKitcK4pECp0Oz
         LdoBnSeNjDtdS7L/+557XHQlfeEaEZse4zgs3a0Zd68lZ6+CAe75torNksQ7tZFyZvrK
         7JqMPe2WDUhUNcSEemNAhzLFy3n4Hd5GTblc8=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=Y23FnFMaO6YrW2i31ESgNSKdX3WAEiLSrILGYcVJTUM=;
        b=boA0DvKCQKVkOL4O0wy70BL0jYJUFgSzUOy1+dX6fu414XWLpck8fURMyzN8b4WeaA
         wUE4oKuCuXq0d5CN70mEVuAXtGBnEHEoaEUPv+aR06SKXi44H+avytNku+yV9zpR5Q6f
         mVCpVdiDWj4x3Fiq9VTd+dDpGXtux6g2Ft1CAHZc5oOgJQF6AdfjvBetwBNq8WrjG9iH
         7h4yTS2ufWAPJheWjrsu4VPlGEOe8ZQcfAGhPzt9Y0iXfvxIvr5Vom276m0WrF2087zZ
         lS4aHkwYptIx+yff5epTjJfefg4E6Ya2MMKK/QdQFRg73z6kx4WuNMlDlVfg2LG0uvTF
         UbaQ==
X-Gm-Message-State: AA+aEWZxbldMj+V0JT/HZSVl9LIm0xKhCybWbJteWowQflQQYLcWJZ0+
        LV6m3oRH+cTA3R3PWrlCEfOjT9KmC2vAo0T97hYc+g==
X-Google-Smtp-Source: AFSGD/XAnF/79j+d9SPaa4UgIn90+0geQB1AJiUlWx4xqAHtVOKoxvaQScQPGZrhTYvfdZ1ezFqN9ntSMsGyUT6Lfio=
X-Received: by 2002:a17:902:2887:: with SMTP id f7mr30308943plb.176.1543299097441;
 Mon, 26 Nov 2018 22:11:37 -0800 (PST)
MIME-Version: 1.0
References: <20181127034254.24721-1-weiyi.lu@mediatek.com> <20181127034254.24721-13-weiyi.lu@mediatek.com>
In-Reply-To: <20181127034254.24721-13-weiyi.lu@mediatek.com>
From: Nicolas Boichat <drinkcat@chromium.org>
Date: Tue, 27 Nov 2018 14:11:26 +0800
Message-ID: <CANMq1KA+YSXv+zFebk0goeeax_sLZUo1t0oMsUOe0ioiwaCOHw@mail.gmail.com>
Subject: Re: [PATCH v2 11/11] soc: mediatek: Add MT8183 scpsys support
To: Weiyi Lu <weiyi.lu@mediatek.com>
Cc: Matthias Brugger <matthias.bgg@gmail.com>, sboyd@codeaurora.org,
        Rob Herring <robh@kernel.org>, jamesjj.liao@mediatek.com,
        Fan Chen <fan.chen@mediatek.com>,
        linux-arm Mailing List <linux-arm-kernel@lists.infradead.org>,
        lkml <linux-kernel@vger.kernel.org>,
        linux-mediatek@lists.infradead.org, linux-clk@vger.kernel.org,
        srv_heupstream@mediatek.com
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 27, 2018 at 11:43 AM Weiyi Lu <weiyi.lu@mediatek.com> wrote:
>
> Add scpsys driver for MT8183
>
> Signed-off-by: Weiyi Lu <weiyi.lu@mediatek.com>
> ---
>  drivers/soc/mediatek/mtk-scpsys.c | 227 +++++++++++++++++++++++++++++-
>  1 file changed, 226 insertions(+), 1 deletion(-)
>
> diff --git a/drivers/soc/mediatek/mtk-scpsys.c b/drivers/soc/mediatek/mtk-scpsys.c
> index 80be2e05e4e0..aac76c45a681 100644
> --- a/drivers/soc/mediatek/mtk-scpsys.c
> +++ b/drivers/soc/mediatek/mtk-scpsys.c
> @@ -29,6 +29,7 @@
>  #include <dt-bindings/power/mt7622-power.h>
>  #include <dt-bindings/power/mt7623a-power.h>
>  #include <dt-bindings/power/mt8173-power.h>
> +#include <dt-bindings/power/mt8183-power.h>
>
>  #define MTK_POLL_DELAY_US   10
>  #define MTK_POLL_TIMEOUT    (jiffies_to_usecs(HZ))
> @@ -397,7 +398,6 @@ static int scpsys_power_on(struct generic_pm_domain *genpd)
>         if (ret < 0)
>                 goto err_pwr_ack;
>
> -

Oh, this belongs in patch [04/11].

>         val &= ~PWR_CLK_DIS_BIT;
>         writel(val, ctl_addr);
>
> @@ -1179,6 +1179,217 @@ static const struct scp_subdomain scp_subdomain_mt8173[] = {
>         {MT8173_POWER_DOMAIN_MFG_2D, MT8173_POWER_DOMAIN_MFG},
>  };
>
> +/*
> + * MT8183 power domain support
> + */
> +
> +static const struct scp_domain_data scp_domain_data_mt8183[] = {
> +       [MT8183_POWER_DOMAIN_AUDIO] = {
> +               .name = "audio",
> +               .sta_mask = PWR_STATUS_AUDIO,
> +               .ctl_offs = 0x0314,
> +               .sram_pdn_bits = GENMASK(11, 8),
> +               .sram_pdn_ack_bits = GENMASK(15, 12),
> +               .basic_clk_name = {"audio", "audio1", "audio2"},
> +       },
> +       [MT8183_POWER_DOMAIN_CONN] = {
> +               .name = "conn",
> +               .sta_mask = PWR_STATUS_CONN,
> +               .ctl_offs = 0x032c,
> +               .sram_pdn_bits = 0,
> +               .sram_pdn_ack_bits = 0,
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2a0, 0x2a4, 0, 0x228,
> +                               BIT(13) | BIT(14), BIT(13) | BIT(14)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_MFG_ASYNC] = {
> +               .name = "mfg_async",
> +               .sta_mask = PWR_STATUS_MFG_ASYNC,
> +               .ctl_offs = 0x0334,
> +               .sram_pdn_bits = 0,
> +               .sram_pdn_ack_bits = 0,
> +               .basic_clk_name = {"mfg"},
> +       },
> +       [MT8183_POWER_DOMAIN_MFG] = {
> +               .name = "mfg",
> +               .sta_mask = PWR_STATUS_MFG,
> +               .ctl_offs = 0x0338,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +       },
> +       [MT8183_POWER_DOMAIN_MFG_CORE0] = {
> +               .name = "mfg_core0",
> +               .sta_mask = BIT(7),
> +               .ctl_offs = 0x034c,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +       },
> +       [MT8183_POWER_DOMAIN_MFG_CORE1] = {
> +               .name = "mfg_core1",
> +               .sta_mask = BIT(20),
> +               .ctl_offs = 0x0310,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +       },
> +       [MT8183_POWER_DOMAIN_MFG_2D] = {
> +               .name = "mfg_2d",
> +               .sta_mask = PWR_STATUS_MFG_2D,
> +               .ctl_offs = 0x0348,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2a8, 0x2ac, 0, 0x258,
> +                               BIT(19) | BIT(20) | BIT(21),
> +                               BIT(19) | BIT(20) | BIT(21)),
> +                       BUS_PROT(IFR_TYPE, 0x2a0, 0x2a4, 0, 0x228,
> +                               BIT(21) | BIT(22), BIT(21) | BIT(22)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_DISP] = {
> +               .name = "disp",
> +               .sta_mask = PWR_STATUS_DISP,
> +               .ctl_offs = 0x030c,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +               .basic_clk_name = {"mm"},
> +               .subsys_clk_prefix = "mm",
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2a8, 0x2ac, 0, 0x258,
> +                               BIT(16) | BIT(17), BIT(16) | BIT(17)),
> +                       BUS_PROT(IFR_TYPE, 0x2a0, 0x2a4, 0, 0x228,
> +                               BIT(10) | BIT(11), BIT(10) | BIT(11)),
> +                       BUS_PROT(SMI_TYPE, 0x3c4, 0x3c8, 0, 0x3c0,
> +                               GENMASK(7, 0), GENMASK(7, 0)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_CAM] = {
> +               .name = "cam",
> +               .sta_mask = BIT(25),
> +               .ctl_offs = 0x0344,
> +               .sram_pdn_bits = GENMASK(9, 8),
> +               .sram_pdn_ack_bits = GENMASK(13, 12),
> +               .basic_clk_name = {"cam"},
> +               .subsys_clk_prefix = "cam",
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2d4, 0x2d8, 0, 0x2ec,
> +                               BIT(4) | BIT(5) | BIT(9) | BIT(13),
> +                               BIT(4) | BIT(5) | BIT(9) | BIT(13)),
> +                       BUS_PROT(IFR_TYPE, 0x2a0, 0x2a4, 0, 0x228,
> +                               BIT(28), BIT(28)),
> +                       BUS_PROT(IFR_TYPE, 0x2d4, 0x2d8, 0, 0x2ec,
> +                               BIT(11), 0),
> +                       BUS_PROT(SMI_TYPE, 0x3c4, 0x3c8, 0, 0x3c0,
> +                               BIT(3) | BIT(4), BIT(3) | BIT(4)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_ISP] = {
> +               .name = "isp",
> +               .sta_mask = PWR_STATUS_ISP,
> +               .ctl_offs = 0x0308,
> +               .sram_pdn_bits = GENMASK(9, 8),
> +               .sram_pdn_ack_bits = GENMASK(13, 12),
> +               .basic_clk_name = {"isp"},
> +               .subsys_clk_prefix = "isp",
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2d4, 0x2d8, 0, 0x2ec,
> +                               BIT(3) | BIT(8), BIT(3) | BIT(8)),
> +                       BUS_PROT(IFR_TYPE, 0x2d4, 0x2d8, 0, 0x2ec,
> +                               BIT(10), 0),
> +                       BUS_PROT(SMI_TYPE, 0x3c4, 0x3c8, 0, 0x3c0,
> +                               BIT(2), BIT(2)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_VDEC] = {
> +               .name = "vdec",
> +               .sta_mask = BIT(31),
> +               .ctl_offs = 0x0300,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +               .bp_table = {
> +                       BUS_PROT(SMI_TYPE, 0x3c4, 0x3c8, 0, 0x3c0,
> +                               BIT(7), BIT(7)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_VENC] = {
> +               .name = "venc",
> +               .sta_mask = PWR_STATUS_VENC,
> +               .ctl_offs = 0x0304,
> +               .sram_pdn_bits = GENMASK(11, 8),
> +               .sram_pdn_ack_bits = GENMASK(15, 12),
> +               .bp_table = {
> +                       BUS_PROT(SMI_TYPE, 0x3c4, 0x3c8, 0, 0x3c0,
> +                               BIT(1), BIT(1)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_VPU_TOP] = {
> +               .name = "vpu_top",
> +               .sta_mask = BIT(26),
> +               .ctl_offs = 0x0324,
> +               .sram_pdn_bits = GENMASK(8, 8),
> +               .sram_pdn_ack_bits = GENMASK(12, 12),
> +               .basic_clk_name = {"vpu", "vpu1"},
> +               .subsys_clk_prefix = "vpu",
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2d4, 0x2d8, 0, 0x2ec,
> +                               GENMASK(9, 6) | BIT(12),
> +                               GENMASK(9, 6) | BIT(12)),
> +                       BUS_PROT(IFR_TYPE, 0x2a0, 0x2a4, 0, 0x228,
> +                               BIT(27), BIT(27)),
> +                       BUS_PROT(IFR_TYPE, 0x2d4, 0x2d8, 0, 0x2ec,
> +                               BIT(10) | BIT(11), BIT(10) | BIT(11)),
> +                       BUS_PROT(SMI_TYPE, 0x3c4, 0x3c8, 0, 0x3c0,
> +                               BIT(5) | BIT(6), BIT(5) | BIT(6)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_VPU_CORE0] = {
> +               .name = "vpu_core0",
> +               .sta_mask = BIT(27),
> +               .ctl_offs = 0x33c,
> +               .sram_iso_ctrl = true,
> +               .sram_pdn_bits = GENMASK(11, 8),
> +               .sram_pdn_ack_bits = GENMASK(13, 12),
> +               .basic_clk_name = {"vpu2"},
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2c4, 0x2c8, 0, 0x2e4,
> +                               BIT(6), BIT(6)),
> +                       BUS_PROT(IFR_TYPE, 0x2c4, 0x2c8, 0, 0x2e4,
> +                               BIT(0) | BIT(2) | BIT(4),
> +                               BIT(0) | BIT(2) | BIT(4)),
> +               },
> +       },
> +       [MT8183_POWER_DOMAIN_VPU_CORE1] = {
> +               .name = "vpu_core1",
> +               .sta_mask = BIT(28),
> +               .ctl_offs = 0x0340,
> +               .sram_iso_ctrl = true,
> +               .sram_pdn_bits = GENMASK(11, 8),
> +               .sram_pdn_ack_bits = GENMASK(13, 12),
> +               .basic_clk_name = {"vpu3"},
> +               .bp_table = {
> +                       BUS_PROT(IFR_TYPE, 0x2c4, 0x2c8, 0, 0x2e4,
> +                               BIT(7), BIT(7)),
> +                       BUS_PROT(IFR_TYPE, 0x2c4, 0x2c8, 0, 0x2e4,
> +                               BIT(1) | BIT(3) | BIT(5),
> +                               BIT(1) | BIT(3) | BIT(5)),
> +               },
> +       },
> +};
> +
> +static const struct scp_subdomain scp_subdomain_mt8183[] = {
> +       {MT8183_POWER_DOMAIN_MFG_ASYNC, MT8183_POWER_DOMAIN_MFG},
> +       {MT8183_POWER_DOMAIN_MFG, MT8183_POWER_DOMAIN_MFG_2D},
> +       {MT8183_POWER_DOMAIN_MFG, MT8183_POWER_DOMAIN_MFG_CORE0},
> +       {MT8183_POWER_DOMAIN_MFG, MT8183_POWER_DOMAIN_MFG_CORE1},
> +       {MT8183_POWER_DOMAIN_DISP, MT8183_POWER_DOMAIN_CAM},
> +       {MT8183_POWER_DOMAIN_DISP, MT8183_POWER_DOMAIN_ISP},
> +       {MT8183_POWER_DOMAIN_DISP, MT8183_POWER_DOMAIN_VDEC},
> +       {MT8183_POWER_DOMAIN_DISP, MT8183_POWER_DOMAIN_VENC},
> +       {MT8183_POWER_DOMAIN_DISP, MT8183_POWER_DOMAIN_VPU_TOP},
> +       {MT8183_POWER_DOMAIN_VPU_TOP, MT8183_POWER_DOMAIN_VPU_CORE0},
> +       {MT8183_POWER_DOMAIN_VPU_TOP, MT8183_POWER_DOMAIN_VPU_CORE1},
> +};
> +
>  static const struct scp_soc_data mt2701_data = {
>         .domains = scp_domain_data_mt2701,
>         .num_domains = ARRAY_SIZE(scp_domain_data_mt2701),
> @@ -1245,6 +1456,17 @@ static const struct scp_soc_data mt8173_data = {
>         .bus_prot_reg_update = true,
>  };
>
> +static const struct scp_soc_data mt8183_data = {
> +       .domains = scp_domain_data_mt8183,
> +       .num_domains = ARRAY_SIZE(scp_domain_data_mt8183),
> +       .subdomains = scp_subdomain_mt8183,
> +       .num_subdomains = ARRAY_SIZE(scp_subdomain_mt8183),
> +       .regs = {
> +               .pwr_sta_offs = 0x0180,
> +               .pwr_sta2nd_offs = 0x0184
> +       }
> +};
> +
>  /*
>   * scpsys driver init
>   */
> @@ -1268,6 +1490,9 @@ static const struct of_device_id of_scpsys_match_tbl[] = {
>         }, {
>                 .compatible = "mediatek,mt8173-scpsys",
>                 .data = &mt8173_data,
> +       }, {
> +               .compatible = "mediatek,mt8183-scpsys",
> +               .data = &mt8183_data,
>         }, {
>                 /* sentinel */
>         }
> --
> 2.18.0
>
