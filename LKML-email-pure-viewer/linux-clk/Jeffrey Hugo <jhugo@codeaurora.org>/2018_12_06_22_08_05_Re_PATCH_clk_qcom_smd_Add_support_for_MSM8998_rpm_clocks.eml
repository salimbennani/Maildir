Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:35 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 15D535804F9;
	Thu,  6 Dec 2018 14:08:15 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 14:08:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArCnwyhyHSkh89CrXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8UL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwBu7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?naqMv6NKkcUeCv0qbJzSjIYfFL2Tfy74jDbxcsofOMXbJtfsrRzlIiGB/CjlqN?=
 =?us-ascii?q?t4PqJS6V1v4Ks2iB9eVsT+Wvi3QoqwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt4uTmVstSog17EKpZ+2cDIXxJg7yRPTceKLfoiH?=
 =?us-ascii?q?7x/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSszlZKoTRKksPWunAOyRPT8M6HRe?=
 =?us-ascii?q?V5/ku73jaPzQ/T5vlFIUAyi6XbN4YszqAsmpcXq0jPAyH7lFvsgKOLdUgo5vKk?=
 =?us-ascii?q?5uXlb7n+o5+TLY50igXwMqQ0ncy/BPw1MgwPX2id5OS926Tv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIndJcUVoK62HRVV35096xawETimys4UnXoZI1JffhKIkYzpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V905sUWXiTDa+BLKPSrViI6/ovI+aWZY8VpCzyK/8/6/7u?=
 =?us-ascii?q?kH82g1kdfaay0JsTaXC4GOlmIkqDbXrthNcBDXkFvg4kQOP2j12CVCZZZ2yuUK?=
 =?us-ascii?q?Ik+jE7FIWmAJ/BRoCqnrONxiS7HppQZmBADVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+Dcjwoy9TxzD8SeyW2NVXt7nm?=
 =?us-ascii?q?ETSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T82lAT4rSNI92dsOY0dnFNWkgRDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iWiryldboC0yLX9GeM12yOvFpGXw52VqnF?=
 =?us-ascii?q?WXMfZk7Srdni4kPCTrmuCakoMwdbyM6CLLdKZcPtjVlcWPjjP9HeaXqrm2isHR?=
 =?us-ascii?q?aI2q+MbI3ydmoAxirdFlYLnxoT/XmcMwg+HTmuo2TFATxqFFLvZV7s8OZkpHO6?=
 =?us-ascii?q?SE800x+Fb0l727Wp/R4VgOSWS+kP0bIcpCchtzJ0EU6h39LXDtqAoBZhfKVcYN?=
 =?us-ascii?q?8n/FdLz2XZtxZ5PpyhKaBiiUUTcwB2v0PoyhV2BZ9MkcksrHM20gVyLbiU309G?=
 =?us-ascii?q?dzOdxZrwIKHYKnHu/BCzbK7bwkvR0NKI9aYA9vs5q0/vsxq0FkU/6Xpn1dpV03?=
 =?us-ascii?q?yC5pjRCAoSUJTxUls49hRgprHaZDU96J3Q1XF2Laa0tTrC0cozBOQ50hagY8tf?=
 =?us-ascii?q?MKScGQ7yDs0WHdShJPYrmlipdB0EOu9S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+sstr2mY9Yfz4SBHewyS/+CI5XeKJy?=
 =?us-ascii?q?Z4cLBX6yLMKtwtVxmoDiW2Rf9F6lHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6jVbsIJK4jtAAUEizcggpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxka3Dn5H2?=
 =?us-ascii?q?tdxzA7cCumuo7jkBx5i2KdLXBzo2TfecxrwRff5drcReNe3zYcRSl4jyXXCUa4?=
 =?us-ascii?q?P9Wz4dqUkJLDuPikV229Tp1TbTXrzYSYuSq7/2JqBgezn/Kymt3hCgU61S7719?=
 =?us-ascii?q?93VSTHthr8Y4/r17ikPuJjZEVnGFj8689iEIFkjoQwnI0Q2WQdhpiN/noIi2bz?=
 =?us-ascii?q?Pc9b2aLjdnUNQzELzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYf18njce0/Qi8nAbjP8SuAox0CqdGKsdEldCPSzjjBmI?=
 =?us-ascii?q?69G+rKNKZGega7Sw1Ux+ncy/A7GGuA1TRHH5epI6Fy9q8sp/KE7M0GH06oz8ZN?=
 =?us-ascii?q?nQatcTugeVkhjaiehVNYkxluELhSd8PWL9vHsly/M0jBB03JG6upSHJHtp/K6j?=
 =?us-ascii?q?HhFYMTj1bdsJ+j7xlaZegtqW34e3E5p6ADoLW5/oTe+yHDIWqPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM5FBqlxMn/?=
 =?us-ascii?q?f0di/DwR+kT0qhhRyuJrKhn/VH3QpByzZzcwSZifKgdW7w5Y60fUN8ye8vx8Hy?=
 =?us-ascii?q?VC8pK9qwyNL3SRZx5UAmERRkyEG1fjM6Gu5NnH7uiYH/e+IOHIYbmUsuxeUPGI?=
 =?us-ascii?q?xZ2034ti/jaMMNiPP3Z4A/063EpDQW52G8DDlzoTTCwXkjrHb9SHqxek5i13ss?=
 =?us-ascii?q?e//ezrWA3x5IuPCLhSMdR19xC1m6eDMOGQizhjKTZFzZMB3nvIyLkZ3F4PhCBi?=
 =?us-ascii?q?bTitEbIctSHTSKLcgLNYDxkeaylrLstH87o83hVROc7ckt76zKN4geUvC1hbVV?=
 =?us-ascii?q?3tgMWpZc0RLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlQjCGaORxSop2yfgxxBmjjUt3mbAa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMpYXvuFtAiRxluJa5mw1yrpV?=
 =?us-ascii?q?7C5eQvx1lzDfrtpvo1Ggj+mOxSBrUBtIqjZXmo2LuV9uNrne9plFCj74+0c28W?=
 =?us-ascii?q?iICxkM7/FiG9Gn77tazcnDvKH+MjFP95TT58RKQ4DRIdiEdmA8LR7gHjL8BREA?=
 =?us-ascii?q?CzWsMCWXglBAiuiP+2GJo7Awo4nomZAUR/lQU1lxXukdAEQmEMAqI5ptWD4g17?=
 =?us-ascii?q?mBg50m/327+TvcSstAs4GPdu+dBr27KjaEgr5sbBwEzLrlN4MJP8v8wUM0OQoy?=
 =?us-ascii?q?p5jDB0eFBYMFmSZmdAJh5RwVqHU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAQAgnQlch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYIBgWsng3qUKIFgCCUUmS0UGBMBh1ciOBIBAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiQBgmIBAgMBAiAVCAEBNwEFCQEBCg4KAgImAgIDKSsGAQwGAgEBAYMcg?=
 =?us-ascii?q?gIFpU9wgS+CdgEBBYJDhGMIgQuJeIEcF4FAP4ERJwyCMS6BQYZEglePfzaPZkY?=
 =?us-ascii?q?JkUAIFoliEIdEiQ6JFYZpgV2BdjMaCCgIgyeCGxiIaYVfIDKBBQEBijoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAQAgnQlch0O0hNFjHAEBAQQBAQcEAQGBZYIBgWsng3q?=
 =?us-ascii?q?UKIFgCCUUmS0UGBMBh1ciOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBA?=
 =?us-ascii?q?gMBAiAVCAEBNwEFCQEBCg4KAgImAgIDKSsGAQwGAgEBAYMcggIFpU9wgS+CdgE?=
 =?us-ascii?q?BBYJDhGMIgQuJeIEcF4FAP4ERJwyCMS6BQYZEglePfzaPZkYJkUAIFoliEIdEi?=
 =?us-ascii?q?Q6JFYZpgV2BdjMaCCgIgyeCGxiIaYVfIDKBBQEBijoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="54892614"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 14:08:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726161AbeLFWIK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 17:08:10 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:57292 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725935AbeLFWIJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 17:08:09 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 62D17616D6; Thu,  6 Dec 2018 22:08:08 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544134088;
        bh=oxUE6oTeSELGXzu6IsKLsX14JbJ6dn8xZAFYCWdFlJw=;
        h=Subject:To:Cc:References:From:Date:In-Reply-To:From;
        b=aV8VZGLvGxz6aGKP4Ri7Y4Qhv0Tnw1Xa8eaoeWZlX1FhDuFLjOkabJKdnfe4YWcpb
         01eIIrWOvMPsHOPiN2BSyEkCxtHHAmC9Rw8eNT1XR2D4fdEfWbW1k8OUFrssG2qmup
         rk9/as2Y9LdV56z2t9h5eMjtdtOGCUDbw93Rz2Xs=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from [10.226.60.81] (i-global254.qualcomm.com [199.106.103.254])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: jhugo@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 3A5A9616A0;
        Thu,  6 Dec 2018 22:08:06 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544134087;
        bh=oxUE6oTeSELGXzu6IsKLsX14JbJ6dn8xZAFYCWdFlJw=;
        h=Subject:To:Cc:References:From:Date:In-Reply-To:From;
        b=A0sN6HL+9HRNOglpSz3gzOGMfzlWW0Y5hBOxLetRenk/GWUXrDLST8QZfVJqHCMmB
         mBV/YVwGRCNV4SnLkth8YcL16a/KHEPnjIP0Ao4r1bxDK/ABbwXVNgDtc0e93JHtC8
         0/9rOmGzcghRJ6YToe3as3p4GbWEC5zKEC+VfK1o=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 3A5A9616A0
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=jhugo@codeaurora.org
Subject: Re: [PATCH] clk: qcom: smd: Add support for MSM8998 rpm clocks
To: Stephen Boyd <sboyd@kernel.org>, mark.rutland@arm.com,
        mturquette@baylibre.com, robh+dt@kernel.org
Cc: bjorn.andersson@linaro.org, marc.w.gonzalez@free.fr,
        linux-clk@vger.kernel.org, devicetree@vger.kernel.org,
        linux-arm-msm@vger.kernel.org, linux-kernel@vger.kernel.org
References: <1544130666-32252-1-git-send-email-jhugo@codeaurora.org>
 <154413331679.88331.15909045605070653326@swboyd.mtv.corp.google.com>
From: Jeffrey Hugo <jhugo@codeaurora.org>
Message-ID: <05485272-a117-b8e5-e7c5-d0dd8cc8fef4@codeaurora.org>
Date: Thu, 6 Dec 2018 15:08:05 -0700
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <154413331679.88331.15909045605070653326@swboyd.mtv.corp.google.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/6/2018 2:55 PM, Stephen Boyd wrote:
> Quoting Jeffrey Hugo (2018-12-06 13:11:06)
>> Add rpm smd clocks, PMIC and bus clocks which are required on MSM8998
>> for clients to vote on.
>>
>> Signed-off-by: Jeffrey Hugo <jhugo@codeaurora.org>
>> ---
>>   .../devicetree/bindings/clock/qcom,rpmcc.txt       |  1 +
>>   drivers/clk/qcom/clk-smd-rpm.c                     | 62 ++++++++++++++++++++++
>>   include/dt-bindings/clock/qcom,rpmcc.h             |  6 +++
>>   3 files changed, 69 insertions(+)
>>
>> diff --git a/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt b/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
>> index 87b4949..16c4293 100644
>> --- a/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
>> +++ b/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
>> @@ -17,6 +17,7 @@ Required properties :
>>                          "qcom,rpmcc-apq8064", "qcom,rpmcc"
>>                          "qcom,rpmcc-msm8996", "qcom,rpmcc"
>>                          "qcom,rpmcc-qcs404", "qcom,rpmcc"
>> +                       "qcom,rpmcc-msm8998", "qcom,rpmcc"
> 
> Can you keep this sorted on the first compatible?

No problem, that's a quick fix.  Same with the ordering nit below.

> 
>>   
>>   - #clock-cells : shall contain 1
>>   
> 
> Rob may prefer this file is split from the driver part into a different
> patch.
> 
>> diff --git a/drivers/clk/qcom/clk-smd-rpm.c b/drivers/clk/qcom/clk-smd-rpm.c
>> index d3aadae..269304e 100644
>> --- a/drivers/clk/qcom/clk-smd-rpm.c
>> +++ b/drivers/clk/qcom/clk-smd-rpm.c
>> @@ -655,11 +655,73 @@ static int clk_smd_rpm_enable_scaling(struct qcom_smd_rpm *rpm)
>>          .num_clks = ARRAY_SIZE(qcs404_clks),
>>   };
>>   
>> +/* msm8998 */
>> +DEFINE_CLK_SMD_RPM(msm8998, snoc_clk, snoc_a_clk, QCOM_SMD_RPM_BUS_CLK, 1);
>> +DEFINE_CLK_SMD_RPM(msm8998, cnoc_clk, cnoc_a_clk, QCOM_SMD_RPM_BUS_CLK, 2);
>> +DEFINE_CLK_SMD_RPM(msm8998, ce1_clk, ce1_a_clk, QCOM_SMD_RPM_CE_CLK, 0);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, div_clk1, div_clk1_a, 0xb);
>> +DEFINE_CLK_SMD_RPM(msm8998, ipa_clk, ipa_a_clk, QCOM_SMD_RPM_IPA_CLK, 0);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk1, bb_clk1_a, 1);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk2, bb_clk2_a, 2);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, bb_clk3_pin, bb_clk3_a_pin, 3);
>> +DEFINE_CLK_SMD_RPM(msm8998, mmssnoc_axi_rpm_clk, mmssnoc_axi_rpm_a_clk,
>> +                  QCOM_SMD_RPM_MMAXI_CLK, 0);
>> +DEFINE_CLK_SMD_RPM(msm8998, aggre1_noc_clk, aggre1_noc_a_clk,
>> +                  QCOM_SMD_RPM_AGGR_CLK, 1);
>> +DEFINE_CLK_SMD_RPM(msm8998, aggre2_noc_clk, aggre2_noc_a_clk,
>> +                  QCOM_SMD_RPM_AGGR_CLK, 2);
>> +DEFINE_CLK_SMD_RPM_QDSS(msm8998, qdss_clk, qdss_a_clk,
>> +                       QCOM_SMD_RPM_MISC_CLK, 1);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, rf_clk1, rf_clk1_a, 4);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, rf_clk2_pin, rf_clk2_a_pin, 5);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, rf_clk3, rf_clk3_a, 6);
>> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, rf_clk3_pin, rf_clk3_a_pin, 6);
>> +static struct clk_smd_rpm *msm8998_clks[] = {
>> +       [RPM_SMD_SNOC_CLK] = &msm8998_snoc_clk,
>> +       [RPM_SMD_SNOC_A_CLK] = &msm8998_snoc_a_clk,
>> +       [RPM_SMD_CNOC_CLK] = &msm8998_cnoc_clk,
>> +       [RPM_SMD_CNOC_A_CLK] = &msm8998_cnoc_a_clk,
>> +       [RPM_SMD_CE1_CLK] = &msm8998_ce1_clk,
>> +       [RPM_SMD_CE1_A_CLK] = &msm8998_ce1_a_clk,
>> +       [RPM_SMD_DIV_CLK1] = &msm8998_div_clk1,
>> +       [RPM_SMD_DIV_A_CLK1] = &msm8998_div_clk1_a,
>> +       [RPM_SMD_IPA_CLK] = &msm8998_ipa_clk,
>> +       [RPM_SMD_IPA_A_CLK] = &msm8998_ipa_a_clk,
>> +       [RPM_SMD_BB_CLK1] = &msm8998_bb_clk1,
>> +       [RPM_SMD_BB_CLK1_A] = &msm8998_bb_clk1_a,
>> +       [RPM_SMD_BB_CLK2] = &msm8998_bb_clk2,
>> +       [RPM_SMD_BB_CLK2_A] = &msm8998_bb_clk2_a,
>> +       [RPM_SMD_BB_CLK3_PIN] = &msm8998_bb_clk3_pin,
>> +       [RPM_SMD_BB_CLK3_A_PIN] = &msm8998_bb_clk3_a_pin,
>> +       [RPM_SMD_MMAXI_CLK] = &msm8998_mmssnoc_axi_rpm_clk,
>> +       [RPM_SMD_MMAXI_A_CLK] = &msm8998_mmssnoc_axi_rpm_a_clk,
>> +       [RPM_SMD_AGGR1_NOC_CLK] = &msm8998_aggre1_noc_clk,
>> +       [RPM_SMD_AGGR1_NOC_A_CLK] = &msm8998_aggre1_noc_a_clk,
>> +       [RPM_SMD_AGGR2_NOC_CLK] = &msm8998_aggre2_noc_clk,
>> +       [RPM_SMD_AGGR2_NOC_A_CLK] = &msm8998_aggre2_noc_a_clk,
>> +       [RPM_SMD_QDSS_CLK] = &msm8998_qdss_clk,
>> +       [RPM_SMD_QDSS_A_CLK] = &msm8998_qdss_a_clk,
>> +       [RPM_SMD_RF_CLK1] = &msm8998_rf_clk1,
>> +       [RPM_SMD_RF_CLK1_A] = &msm8998_rf_clk1_a,
>> +       [RPM_SMD_RF_CLK2_PIN] = &msm8998_rf_clk2_pin,
>> +       [RPM_SMD_RF_CLK2_A_PIN] = &msm8998_rf_clk2_a_pin,
>> +       [RPM_SMD_RF_CLK3] = &msm8998_rf_clk3,
>> +       [RPM_SMD_RF_CLK3_A] = &msm8998_rf_clk3_a,
>> +       [RPM_SMD_RF_CLK3_PIN] = &msm8998_rf_clk3_pin,
>> +       [RPM_SMD_RF_CLK3_A_PIN] = &msm8998_rf_clk3_a_pin,
>> +};
>> +
>> +static const struct rpm_smd_clk_desc rpm_clk_msm8998 = {
>> +       .clks = msm8998_clks,
>> +       .num_clks = ARRAY_SIZE(msm8998_clks),
>> +};
>> +
>>   static const struct of_device_id rpm_smd_clk_match_table[] = {
>>          { .compatible = "qcom,rpmcc-msm8916", .data = &rpm_clk_msm8916 },
>>          { .compatible = "qcom,rpmcc-msm8974", .data = &rpm_clk_msm8974 },
>>          { .compatible = "qcom,rpmcc-msm8996", .data = &rpm_clk_msm8996 },
>>          { .compatible = "qcom,rpmcc-qcs404",  .data = &rpm_clk_qcs404  },
>> +       { .compatible = "qcom,rpmcc-msm8998", .data = &rpm_clk_msm8998 },
> 
> And this sorted too.
> 
>>          { }
>>   };
>>   MODULE_DEVICE_TABLE(of, rpm_smd_clk_match_table);


-- 
Jeffrey Hugo
Qualcomm Datacenter Technologies as an affiliate of Qualcomm 
Technologies, Inc.
Qualcomm Technologies, Inc. is a member of the
Code Aurora Forum, a Linux Foundation Collaborative Project.
