Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:41:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 654125803C2;
	Wed, 28 Nov 2018 02:25:29 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 02:25:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ac3ko9xdFFQdhGBVSH1cXPwkflGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YhCN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJIiWP60Lcg3ug9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX/61zKnJ0zrDdelW2Dfg44bUbB8uvPCMXbR/ccHMzkQvCwPFjlSO?=
 =?us-ascii?q?poz/JTOU1v4Bs3KF4OV9VOKvjWEnphp+ojiq3Mgsi43JipgJxVDD8CV02YA4Ls?=
 =?us-ascii?q?C7Rk5jedOoDodcuiWAO4drTM4uXXtktDs5x7Eao5K2fSoHxIw5yxLCafGLaZaE?=
 =?us-ascii?q?7gznWeqLPDt1hWhpdbOwihu07EOu0PfzVtOu31ZPtidFksfDtnQK1xHL9MiHRe?=
 =?us-ascii?q?Vy/l271TaMyQ/T8OdELl4wlabBLJ4h2LEwmoISsUTFACD2hF37gLGKekgg4OSk?=
 =?us-ascii?q?9urqbqv8qpOBNIJ4lhvyP6Usl8CnBOQ3KAkOX2yV+eSm073j+FX0QLFLjv0wj6?=
 =?us-ascii?q?nYv4nWJccFqa6jBQ9azIIj5w+4Dzao1tQXg2MHIUlbeBKIkYfpIUvCIPPmAvel?=
 =?us-ascii?q?hVSjjjNry+rBPr37DZXBNmLDn6v5fbZh905czxI+zdRe55JXFL4NOv3yWlLqud?=
 =?us-ascii?q?zcDx85NRG0wun9BNV80IMeRXyAAquDPKzOtl+I4/olI/OQa48NpDb9N/8l6ubu?=
 =?us-ascii?q?jXAjmF8dYbOm3ZwNZHC4A/RpOUOZYXX3j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJ/JRpqxj7yZwCe7AppWa3hEClCLD3jkbYaEW/AKaCKUJc9siTgE?=
 =?us-ascii?q?VbmnS4882hCirg76y7x7LuXK/i0Ur47s1N9w5+fLjxE96SR0D9iB02GKV2x7hH?=
 =?us-ascii?q?gIRz8x3KB8u0B90E2M0apjjvxcFNxT4e5JUwggOZ7dyex6F879WgbbctiVT1am?=
 =?us-ascii?q?R82sASstQdIp398Of0F9Fs2hjh/Z2SqmGbsVl72RC5wy/aLRxHzxJ8d7y3bb26?=
 =?us-ascii?q?gtlVgmQs1TNWK4gq5z7RTcB4nMk0+Bjaalabwc3DLR9GeE1WeBoVtXUBBuXqnf?=
 =?us-ascii?q?XXAQfE3Wrc/n6UPESLOuDbcnMg5FycOZLqtKa9vpjUhJRfv5OdTeZX6xlHm0BR?=
 =?us-ascii?q?qS2ryMa4/qcX0H3CrBEEgEjxwT/XGeOAcjHCihvXzRACZuFV31ZUPs6vdxqHWg?=
 =?us-ascii?q?Q08wzgGKaVBh1rWv9h4Ug/ycV+0c3rYetCg9rDV0GU6338jKBNqYuwphYKJcbM?=
 =?us-ascii?q?sh4FdG0GLZsBB9PpygLqx4ml4SaQN3v1nq1xV2DIVAntMnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupBumFk48/HRozdZU02?=
 =?us-ascii?q?GQ6Y7XDAUPS53xVEU39x9kp7zBZik95oXU1WBjMKWusz/C3c4pC/Uhyhq6Y9hf?=
 =?us-ascii?q?N6aEHhfoE8IGH8iuNPAqm1+xYxMEIeBe7rI7M9mndvuGwqGrOulgkSmijWRG5o?=
 =?us-ascii?q?B9z02N+zB9Su7Ow5YK3fWY0hGbWDf7iVerqtr3lpxcZTEOAmq/zjDpBJRQZqJu?=
 =?us-ascii?q?Z4kLE3qhI8qtytV4mZHtQX9Y+Ee/CFwc3M+mZASdb0b63Q1WzkkXpX2nmS2lzz?=
 =?us-ascii?q?17iT0pr6yf3DDQzOTmbhYIJmlLRGx6h1f2PYe0l8waXFSvbwUxlBql5Fz2xqhB?=
 =?us-ascii?q?qKRkMmnTR1xFfyz3L2FkT6uxuaCOY89J6JM0rypXVP6wbkydSr74uxEayT/sH3?=
 =?us-ascii?q?NCxDAncDGnopf5kAZgiGKeL3Zzq2DVedpqyhfc59zcRPhR0SQARCRjjTnXB168?=
 =?us-ascii?q?P8Sm/NmOlpfDtPy+WHylVpFJbSbryoaAvjOh5WJ2GR2/g+yzmtr/HAk6yyD70M?=
 =?us-ascii?q?NmVSfJrBb6eYTr06W6MeR6fkhnHlP86sx6Gp1gnYs0np0fxX8ahpCN93odjWjz?=
 =?us-ascii?q?Kclb2b75bHcVRj4E2d/V7BLl2E1+NH2JwY35W26ZwstgYdm6f2wX1jg878BMFK?=
 =?us-ascii?q?eb8rhEkTFprVq/qALbeeJ9kSsFyfsy9H4ahPkEuA8sziWeGL8eB0dZMjL3lxSU?=
 =?us-ascii?q?8d++tr5Ya3i1cbi/z0d+mdGhDLefogBTQnr5e5EiHTNu4cV7Kl7DzHrz6oT8ct?=
 =?us-ascii?q?nKcd0TrgGUkwvHj+VNNJIxkf8KiTBmOG3nu30l1vU7jQdv3ZyhuIiHKmNt/L+2?=
 =?us-ascii?q?AxJCNz31Yd8T9S/pjapEgsmW2IWvFI17GjoXRJvoUe6oEDUKuPv8LQmOFzk8qm?=
 =?us-ascii?q?qBFbrbAA+S80Nmr3PJE5C2OHCbPngZzdN+RBaDIExTmhwbXDI/npQhDACl2NTh?=
 =?us-ascii?q?cFtl5jAW/lP4qAFDyud2OBnkSGvfuB2kajQpSJicMRpW6BtN51zOPMya7+JzGT?=
 =?us-ascii?q?xY/5K7oAyMLGybexpHDWUTVkOYAFDjO6Gk5cPc/OiAGuq+M/zObK2OqOxZSveI?=
 =?us-ascii?q?3I+v3ZFg/zqWLcWPOX9iD/Ig10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gi2gaidNu6QhyV5KTdC2pMP33/Iz7cf00AIiyFz?=
 =?us-ascii?q?bDmgCrAAtS/LTKLNla5bFR8bayVvNMRW66IwxBVCOcneitntzL53kuY1C0tZVV?=
 =?us-ascii?q?zmgsymf9EKLHqnNFzZBEeHLrCGJTzQzsHzYKO8T6BQjepOux2xvzabD1HsPjCZ?=
 =?us-ascii?q?mzb1UBCvNPlGjDuHMxxGpIG9bhFtBHD/TNLnbx23KsN4gScqzr00mHzKM3URMT?=
 =?us-ascii?q?x9c0NLs72R4jlUgvR5G2xd8HVlKfOIlDqe7+ndMpwWq+dkAjxol+JG53Q307tU?=
 =?us-ascii?q?4ztCRPxwmSvSqMZholCmkuaVzDpnXwFDqjJKhIKNoEVjNr/V9phGWXbY4h0N6X?=
 =?us-ascii?q?+cBAgNp9tgWZXTvPVvx9mHsqO7fChE8vrS48oQBsGSI8WCZikPKx3sTQLUDQYf?=
 =?us-ascii?q?Vy/jD2zThkpS2KWO9nyYtIIr7ILhlJsIRZdUUVU0ErURDUEzT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr6UCJHMg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACIbP5bh0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBFfiyqCDRSJDW6DeYk6gXMCDQMBARg?=
 =?us-ascii?q?TAYdpIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECJBkBG?=
 =?us-ascii?q?x0BAwEBCQEBBQUOCgklAwwFDxEBBQEiEwWDHAGBaAEDDQgEAZpgPIwJFgUBF4J?=
 =?us-ascii?q?3BYRcChknDV2BMAcCBhKCW4gMgRyBVz+BEYMSiDaCJgKJH4YFgUePMAcCghwEj?=
 =?us-ascii?q?wYjColOC4cymCEGAgkHDyGBJYINMxojgzyCGwwXg0qKVD8ygQIDAQEhE4xFAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAACIbP5bh0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBFfiyqCDRSJDW6DeYk6gXMCDQMBARgTAYdpIjQJDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECJBkBGx0BAwEBCQEBBQU?=
 =?us-ascii?q?OCgklAwwFDxEBBQEiEwWDHAGBaAEDDQgEAZpgPIwJFgUBF4J3BYRcChknDV2BM?=
 =?us-ascii?q?AcCBhKCW4gMgRyBVz+BEYMSiDaCJgKJH4YFgUePMAcCghwEjwYjColOC4cymCE?=
 =?us-ascii?q?GAgkHDyGBJYINMxojgzyCGwwXg0qKVD8ygQIDAQEhE4xFAQE?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="asc'?scan'208";a="42607264"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 02:25:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727811AbeK1V0e (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 16:26:34 -0500
Received: from mail-ed1-f66.google.com ([209.85.208.66]:46581 "EHLO
        mail-ed1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727616AbeK1V0e (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 16:26:34 -0500
Received: by mail-ed1-f66.google.com with SMTP id o10so21565712edt.13;
        Wed, 28 Nov 2018 02:25:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=k4H7Xm0CTNlwqyRSfRV5M6UF/vdgF3CYaGdBnwOOsfk=;
        b=jVgcPh9mH2xA5XELOJ9FE4NosF225ut6n7fOD7CgEtaBBFhDGy3VrgNdxpriP07sno
         wWQMrsDMSjLe7UbmZajP+6+dxlkB8WzeEASD3ZVSCzb19CXl2UaoyHmoCKut2k0zBsGB
         kKda1HMSL/1UQ0KDogoShp9By82X5Ok8mjGR6YhqBSp+GpSKFkA/Mg1s5osxMbcMr33D
         ETIBt45djo4tX9X8EwyoS9Tq5A9AQaO4IrfgBk8t8sCB3H2gK/+v50TP77Q6FSF+FHOE
         96iYEvb8eoIta3wfBAzrAX+8t8XnCZbkZZ+tf0toLjRfDy7BKReFFAL/OzCH08z/VUx/
         4FRA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=k4H7Xm0CTNlwqyRSfRV5M6UF/vdgF3CYaGdBnwOOsfk=;
        b=Ponp3NSIQjZRkmNFb/QeJPbXGB5W3njb1OMzFgdz7BoJ2nxytHRb9Vp/a0iR0cmCal
         J2jh0aaYjpQwqf+FluZ1EqDcGbZ9QebVbfPS9MvV+SCLtTCREZz4936fL+erHPHyMF9v
         VLBFunYjVBa7BPfwiTlA7jUKksICbd3CjGAfjrCh86WM7z2VK6D3MzwVSw2YuZqU5nwf
         Hx8tyhnYNpl11jQmL1TId9UzY45IAHug1AWYM81RqcUCPn4tEOIqkqqIvosMQimeIwj6
         4fSFn98SpDdNijFGJD2Ps24d0lY9Jml3Wr6cZAIuT8c1Ri1U27mJK3nUGVWY56iU7NUi
         CGoQ==
X-Gm-Message-State: AA+aEWaLOoTIf0yAeFRi9UXz0RX8QjIHjZRFuoOH7Z0Pb2sYsR/B96YH
        PWiYPBwXfFObu6ndY7q7BZE=
X-Google-Smtp-Source: AFSGD/UvHUb9sJosBRyUm/pNITd8Z8JUIx3ZNOdKkoUgxtdvHrOt5ksGh49tCCsLt2NEZSpGbYOg0Q==
X-Received: by 2002:a50:b85d:: with SMTP id k29mr29975444ede.86.1543400721982;
        Wed, 28 Nov 2018 02:25:21 -0800 (PST)
Received: from localhost (pD9E51040.dip0.t-ipconnect.de. [217.229.16.64])
        by smtp.gmail.com with ESMTPSA id s27-v6sm999967ejm.14.2018.11.28.02.25.20
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 28 Nov 2018 02:25:21 -0800 (PST)
Date: Wed, 28 Nov 2018 11:25:20 +0100
From: Thierry Reding <thierry.reding@gmail.com>
To: Wei Ni <wni@nvidia.com>
Cc: daniel.lezcano@linaro.org, linux-tegra@vger.kernel.org,
        rui.zhang@intel.com, edubezval@gmail.com, srikars@nvidia.com,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v3 3/3] thermal: tegra: parse sensor id before sensor
 register
Message-ID: <20181128102520.GC20723@ulmo>
References: <1543383877-20555-1-git-send-email-wni@nvidia.com>
 <1543383877-20555-4-git-send-email-wni@nvidia.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="kVXhAStRUZ/+rrGn"
Content-Disposition: inline
In-Reply-To: <1543383877-20555-4-git-send-email-wni@nvidia.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--kVXhAStRUZ/+rrGn
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Wed, Nov 28, 2018 at 01:44:37PM +0800, Wei Ni wrote:
> Since different platforms may not support all 4
> sensors, so the sensor registration may be failed.
> Add codes to parse dt to find sensor id which
> need to be registered. So that the registration
> can be successful on all platform.
>=20
> Signed-off-by: Wei Ni <wni@nvidia.com>
> ---
>  drivers/thermal/tegra/soctherm.c | 46 ++++++++++++++++++++++++++++++++++=
++++--
>  1 file changed, 44 insertions(+), 2 deletions(-)
>=20
> diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soc=
therm.c
> index 375cadbc24cd..79e4628224d7 100644
> --- a/drivers/thermal/tegra/soctherm.c
> +++ b/drivers/thermal/tegra/soctherm.c
> @@ -1224,6 +1224,44 @@ static void soctherm_init(struct platform_device *=
pdev)
>  	tegra_soctherm_throttle(&pdev->dev);
>  }
> =20
> +static bool tegra_soctherm_find_sensor_id(int sensor_id)
> +{
> +	int id;

You might want to make this and the sensor_id parameter unsigned int to
match the signedness of the ID in the specifier arguments and the sensor
groups.

Thierry

> +	bool ret =3D false;
> +	struct of_phandle_args sensor_specs;
> +	struct device_node *np, *sensor_np;
> +
> +	np =3D of_find_node_by_name(NULL, "thermal-zones");
> +	if (!np)
> +		return ret;
> +
> +	sensor_np =3D of_get_next_child(np, NULL);
> +	for_each_available_child_of_node(np, sensor_np) {

Aren't we leaking np here? I think we need of_node_put() after
of_get_next_child() to make sure the reference to the "thermal-zones"
node is properly released.

> +		if (of_parse_phandle_with_args(sensor_np, "thermal-sensors",
> +						 "#thermal-sensor-cells",
> +						 0, &sensor_specs))
> +			continue;
> +
> +		if (sensor_specs.args_count !=3D 1) {
> +			WARN(sensor_specs.args_count > 1,
> +			     "%s: wrong cells in sensor specifier %d\n",
> +			     sensor_specs.np->name, sensor_specs.args_count);
> +			continue;

This is odd. You check for args_count !=3D 1 but then WARN on args_count >
1. Shouldn't both of these conditions be the same?

> +		} else {

Also, since the above has "continue;", we don't really need the else
block.

> +			id =3D sensor_specs.args[0];
> +			if (sensor_id =3D=3D id) {

It might not be worth to store the ID in a separate variable, we could
just do:

	if (sensor_specs.args[0] =3D=3D sensor_id)

Thierry
> +				ret =3D true;
> +				break;
> +			}
> +		}
> +	}
> +
> +	of_node_put(np);
> +	of_node_put(sensor_np);
> +
> +	return ret;
> +}
> +
>  static const struct of_device_id tegra_soctherm_of_match[] =3D {
>  #ifdef CONFIG_ARCH_TEGRA_124_SOC
>  	{
> @@ -1365,13 +1403,15 @@ static int tegra_soctherm_probe(struct platform_d=
evice *pdev)
>  		zone->sg =3D soc->ttgs[i];
>  		zone->ts =3D tegra;
> =20
> +		if (!tegra_soctherm_find_sensor_id(soc->ttgs[i]->id))
> +			continue;
>  		z =3D devm_thermal_zone_of_sensor_register(&pdev->dev,

I'd would prefer a blank line after the if block for readability.

>  							 soc->ttgs[i]->id, zone,
>  							 &tegra_of_thermal_ops);
>  		if (IS_ERR(z)) {
>  			err =3D PTR_ERR(z);
> -			dev_err(&pdev->dev, "failed to register sensor: %d\n",
> -				err);
> +			dev_err(&pdev->dev, "failed to register sensor %s: %d\n",
> +				soc->ttgs[i]->name, err);
>  			goto disable_clocks;
>  		}
> =20
> @@ -1434,6 +1474,8 @@ static int __maybe_unused soctherm_resume(struct de=
vice *dev)
>  		struct thermal_zone_device *tz;
> =20
>  		tz =3D tegra->thermctl_tzs[soc->ttgs[i]->id];
> +		if (!tz)
> +			continue;
>  		err =3D tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);

Same here:

		if (!tz)
			continue;

		err =3D ...

Thierry

--kVXhAStRUZ/+rrGn
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAABCAAdFiEEiOrDCAFJzPfAjcif3SOs138+s6EFAlv+bQ0ACgkQ3SOs138+
s6F/cQ//Vf8Nl9UGrETe7X0iojhxbFD3lElHpm9N8PLev8elRoyKjTDs5ixDFsry
Qv4+/5MpR/rsOGyAQ2t1ACR9Sy7n3juoqIisAZTXYTbxA8n9/j/Zq5zesL5Z2I4p
2HeRLtaFl186YNU9yQtcJsg6TwW+o3SwDRm+49XkQ0xopbcB+3p0dm8J55dOhnMz
F4bYrs3qoG+49i1EhL8oYhk5APdPxIg8TtWePXdEkZgVZ+v/VTuBoXHn/9HnCcOk
RAozYT8AB5wr3elLoXaQN/ijKZOEBPRmQoZ/BmbUVAwJd2G4tmEEy3WlSibU4C1d
VQgUW0JUr6/+v6Q1ohs/H2m9bnq/x9VbjoAI40IlJoPhvv2TZMGIWc2uj1vdJD6k
NuD87kmI+WgiiFOOE9ZpMy4RT7MTepBLpJICruz2ekY+RAbry/yK7/jfclTXWTtK
Ck+CaTm/cja/CEW3OfJ3dJvbgGFN52N6wOy/DUntlOsIWqtmFamvRbK0SgmyVV0q
3axq+c2dCZ3uHqWE8UKsobmDCXGue73j9vqCb+3o4hVfqKNQcw60J7EnzXN6FUhS
Lcc5MuvHidcBbOlbgQMxx3QEYhTKY/HnzO4p+omifourqHOxbEjf1QV5EoyW40DU
H+ozEkLZcB7igniaCR2QqBcgMdWjnDg2KAKxPP0b6IiSsUO/nwQ=
=w2OA
-----END PGP SIGNATURE-----

--kVXhAStRUZ/+rrGn--
