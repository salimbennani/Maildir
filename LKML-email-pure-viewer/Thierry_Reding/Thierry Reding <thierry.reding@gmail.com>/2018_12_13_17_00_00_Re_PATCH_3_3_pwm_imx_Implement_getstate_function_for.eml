Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:39:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BB4B458061F;
	Thu, 13 Dec 2018 09:00:09 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 09:00:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfW9+9xOetHBp0USgji4l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPjyp8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bIUPAeUOMvpFoIb/qVQOtgO+CAu3CePg1jNFnGX70bEg3ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7KqcSUeGrw6nS1zXCb+5d1yvj54fVcxAhp/6MVq93fMrNyUkvFh3Kjk+K?=
 =?us-ascii?q?qY3lJT+VzPoCvHWa7+pmWuKikGEnqwRrrTiuwscgkJXGhoUQyl3d8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpFIFcuzyUOodoWM8uXmJltDogxrAHu5O3ZDYGxIklyhLFdfCLbYyF?=
 =?us-ascii?q?7gj+WOuQOzt1hX1odbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gT1xzc9MeHUO?=
 =?us-ascii?q?Fx/kS/1jaV0QDc9OVELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gauMekk59OWk?=
 =?us-ascii?q?9f7rbqjlq5OALYN5iwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj+Uz5QLNXjvw5i6?=
 =?us-ascii?q?XZs47VJd4dpqGnBw9Zy4Ej6hi5Dzi4ytQVhmcHLF1bdxKdlYTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgijBrx+rJPrH5GJXCMmDDkKv9fbZ680NczAszzdNB6J5OBbABPen+WkvwtN?=
 =?us-ascii?q?zeEx84PBa4w+fhCNVhyIweXXiDDbOeMKPXqVWI/P4gI/GQZI8JvzbwM/gl6OTv?=
 =?us-ascii?q?jX8lg1AderOl3ZsKaH+iGPRmLF6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+EIimF5vMRpixgLyd2ye2Bp9WZmdYBVyWEnfocIOEW/ELaC+JJs9hkzoE?=
 =?us-ascii?q?VaWuSoM71BGushP6xKRjLubO5iIYspfj3sBv5+LPjREy6SB0D8OF3m6XVGF0nm?=
 =?us-ascii?q?QIRzws0KBlu0N9yEyO0ax5g/xeCNxS6OlFUgY8NZ7A0eN6D8r+VR7GfteMUFym?=
 =?us-ascii?q?WMmpASktTtItxN8De0V9FM+kjhzZ2yqqAqUal7qEBJEv9qLc3n7xJ9tyynrc1a?=
 =?us-ascii?q?khiUUmTdVLNWG8mqF/8A3TDZbTk0qFj6aqabgc3CnV+Wie12WOol9XXBRwUarf?=
 =?us-ascii?q?W3AffVXZrdL+6kPGTL+uDLAnPxBFyc6DLKtKd9LogU9HRPflJNTRfWaxl32sCh?=
 =?us-ascii?q?aPw7OGdJDqdHkF3CXBFEgElBge8mucOgggGCituWLeAyZoFVL0fUzs9/JzqHe6?=
 =?us-ascii?q?Tk8y0gGLYFdt17uz+h4Jm/OcT+kf0a4DuCcksz90Bkqy38rKC9qcoApsZLlcYd?=
 =?us-ascii?q?I44FdAyWLZtwx8Moa8L6x4gV4eaQB3v0Lo1xV4EYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6PkgsVrjuB+mF0U8/HRnydVayG?=
 =?us-ascii?q?ac6YjQAwoUUpLxVVg3+gN+p7HbZCk9+ozV2WdtMamyrj/NxdYpCPE5xRanetdV?=
 =?us-ascii?q?KLmEGxPqE80GG8iuL/Qnmli0bh4eIO9e7q81P8O8ePuA166mJ+JgnDOgjWRa74?=
 =?us-ascii?q?FxyEOM9yxgSuHW25YJ2e2X3gyCVz3klleurtj3mZxYZTEVBme/0ynkC5JLaa1o?=
 =?us-ascii?q?YIkLDn2iI8upydVkhp7hQmJX+0SnB1wbxsCpYx2Sb1rm0A1U1EQXp2GnmCSiwz?=
 =?us-ascii?q?x1lTEpsrSQ3CjUz+v+cxoHP3ZBRHN+glf0PYi0k9caUVCobggojhek5Vz2x7NG?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdTGloI/5nx95iGKaNnpzt2DWecJzxRfe4tzTW/hR0yECRCl5jznXG1e9?=
 =?us-ascii?q?M8Oo/dWSi5fMrOS+W3i9WZ1UdCnh1ZmAuzej5W12HR2/mOi+m939Hgg9yyP71d?=
 =?us-ascii?q?hqVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr9bHUXRD4H2d7V4BX/101lIXKE3Ib5VnSbwst8aNi2eGIW2iQh789UDK?=
 =?us-ascii?q?eY9qBLnSxwolCgtwLefeB9nisByfsp8HMahuAJuAk3wSmHDLEdA1JYPTDymBSS?=
 =?us-ascii?q?9N+xsr9XZGm0fLi01Up+m82hDb6YrgFdXnb5ZoktHStq4spjN1LM1WX56pv4d9?=
 =?us-ascii?q?nIcdITqhqUng/cj+hSLZI9jPsLijBhOWLgpn0l0O87gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlHykIuvTgMwaODScwqn?=
 =?us-ascii?q?OGGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6zAT/FH4rwVDyvlyOxnjSGvfpxqoajQpSJiZNhVW9RpP50PUMcyY8+JyED?=
 =?us-ascii?q?tU/pynrAyRNGObYx5EAn0OWkyBH1rjJKWh5cHc8+iEAeqzN/vPYbKTqexHSveH?=
 =?us-ascii?q?35Sv3pF9/zaLMMWPMWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKdVv9A63gaeANO6QhTx1KTVC1pMLyn/H1qIf3EMJiyx1?=
 =?us-ascii?q?czmtELIAtTPCTa7Km69XCQIbZD13NMdS86082QxNM9bBitzpzr54kuI1C1BdWF?=
 =?us-ascii?q?P7h8GmftYKLH+9NV/dAEaLNa+LJTnKw8HxfKO9RqdcjORStx2spzmbF1XvMSiE?=
 =?us-ascii?q?lznsTxqvK/1DjDmHPBxCv4GwagptCWnmTN78dhK3KsN4jT0ozr0ynX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyOB5enCNpkWqedrAjhzl+9C4HU10b1V?=
 =?us-ascii?q?7CRFRPxzgCTTr95urEugkumA0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxFZ7+diX+DwtuhzztXOkq+2C6lE8t2cqdZaBMzZKcSKdXkmPBzoFxbMAQ0K?=
 =?us-ascii?q?UCKxMmfelwpRnafB2GeSq80GqpnhgoAfAoVWWF0zGbtOFkRkEcYYMdFtUz8ll7?=
 =?us-ascii?q?Gzg8sB5H74px7UEpYJ9qvbX+6fVK28YA2SiqNJMl5Rmev1?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAAA4jxJch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBVAEBAQEBAQsBg2sng3yIeIs0gg0UiRBug3yLOQINAwEBGBM?=
 =?us-ascii?q?Bh0UiNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIgBBkBGx0BA?=
 =?us-ascii?q?wIJAQEFAwIYCSECAgMMBQ8RAQUBIhMFgxwBgWcBAxUEAYtpkAc8iw18FgUBF4J?=
 =?us-ascii?q?3BYRFChknDV2BMAcCBhKCW4NtglmBbYEcgVc/gRGDEoRZgywxgiYCoQ8HAoIkB?=
 =?us-ascii?q?I8mIwqBUogQCyuHKCyYdgYCCQcPIYE7gXgzGiODPIIbDBeDSopUPzKBAgMBASE?=
 =?us-ascii?q?TiVCCPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AFAAA4jxJch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BVAEBAQEBAQsBg2sng3yIeIs0gg0UiRBug3yLOQINAwEBGBMBh0UiNwYNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIgBBkBGx0BAwIJAQEFAwIYCSE?=
 =?us-ascii?q?CAgMMBQ8RAQUBIhMFgxwBgWcBAxUEAYtpkAc8iw18FgUBF4J3BYRFChknDV2BM?=
 =?us-ascii?q?AcCBhKCW4NtglmBbYEcgVc/gRGDEoRZgywxgiYCoQ8HAoIkBI8mIwqBUogQCyu?=
 =?us-ascii?q?HKCyYdgYCCQcPIYE7gXgzGiODPIIbDBeDSopUPzKBAgMBASETiVCCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="asc'?scan'208";a="56229973"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 09:00:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729632AbeLMRAF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 12:00:05 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:32817 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729569AbeLMRAF (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 12:00:05 -0500
Received: by mail-ed1-f65.google.com with SMTP id p6so2650367eds.0;
        Thu, 13 Dec 2018 09:00:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=pcnIrSCb3TiNxanA4JWzs3t6qu5AG3XJHatulUqJN2s=;
        b=EeVK8xft/IYpyiBqSbYcZtv5maZF9VdKRTmivNTERFFkzWcKpDXNLn7iAhnVDdbKVM
         gV2Xkjf0ZUWgCuTUQvgMlyhKCV/uz0Ro+buj18j7E+7fCC1U5+nJZoQ+g/GTJPwsS6sT
         8bfz88F4CJe2KTaeEZpAt8oOddlOxQxHtOO5BfJRSBH2ErDuCEXil3CEfbrP5V/9XPD2
         Lj7z6hreyB4KqheBMEccGGv9CmlSteQTaM7mnDrOWcWeGXFqFYwWrtjUYlespMFcUC7z
         +MYFSEqvUh6qVNMRQlJ/DAKLWae+3bHo3MPA9LFJ5s9qUkbAHG+am1VKyxCT65iAUbn/
         UB/A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=pcnIrSCb3TiNxanA4JWzs3t6qu5AG3XJHatulUqJN2s=;
        b=q8uppa+bV5xoMt+VU57WRcLvlqD5RzHnLjrxXA9lTykTnEUYUvlf1IAjI/1QpHJWs2
         dw7A+d+U6xl1pwSiuG/O0zH+B+vuEtT8q5gmGgz2EqXWcbzykVdF8yGFp2+4+U+04iFX
         tRMKkbUmKyRbQUGeJYgiqe10rL9ZDKnaM5a7MI6Ls+ujwsMU8x09FjBReE75q+w0taKX
         ZBCzuB+v6V9u0/a2zbv5jw+CM20F1b4mfSgPiylLtudtz+0tTPIPvCGxdAgyYer26sDD
         sEnqYZH9M+PuU27zFqyUnR7ZcyWl82iq/30yEAvx0zHxDKGQYmMyscxr8YZDuyWkkxWh
         NhgQ==
X-Gm-Message-State: AA+aEWbh0Pkqi3nPvRiP5ghvcj2zOqYA7oP4PT1zGPePEi/3CEgkm8JT
        DvOkV5l2QXMpuGHnk4wQQLROR0e/
X-Google-Smtp-Source: AFSGD/Wc9btZ2VDghWbh5QWYdw0rKV2bp0cJDJz+mWrsRX/Zz6m3lAT4vbLYIaMzNn6MU4R+abLyrQ==
X-Received: by 2002:a50:c252:: with SMTP id t18mr81920edf.57.1544720402645;
        Thu, 13 Dec 2018 09:00:02 -0800 (PST)
Received: from localhost (pD9E51040.dip0.t-ipconnect.de. [217.229.16.64])
        by smtp.gmail.com with ESMTPSA id l51sm740367edb.36.2018.12.13.09.00.01
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 13 Dec 2018 09:00:01 -0800 (PST)
Date: Thu, 13 Dec 2018 18:00:00 +0100
From: Thierry Reding <thierry.reding@gmail.com>
To: Uwe =?utf-8?Q?Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>
Cc: Michal =?utf-8?B?Vm9rw6HEjQ==?= <michal.vokac@ysoft.com>,
        linux-pwm@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH 3/3] pwm: imx: Implement get_state() function for
 hardware readout
Message-ID: <20181213170000.GA14581@ulmo>
References: <1538403588-68850-1-git-send-email-michal.vokac@ysoft.com>
 <1538403588-68850-3-git-send-email-michal.vokac@ysoft.com>
 <20181212105432.GD17654@ulmo>
 <20181213085213.7k5ihn7bdrtess3g@pengutronix.de>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="jI8keyz6grp/JLjh"
Content-Disposition: inline
In-Reply-To: <20181213085213.7k5ihn7bdrtess3g@pengutronix.de>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--jI8keyz6grp/JLjh
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Thu, Dec 13, 2018 at 09:52:13AM +0100, Uwe Kleine-K=C3=B6nig wrote:
> On Wed, Dec 12, 2018 at 11:54:32AM +0100, Thierry Reding wrote:
> > On Mon, Oct 01, 2018 at 04:19:48PM +0200, Michal Vok=C3=A1=C4=8D wrote:
> > > Implement the get_state() function and set the initial state to refle=
ct
> > > real state of the hardware. This allows to keep the PWM running if it=
 was
> > > enabled in bootloader. It is very similar to the GPIO behavior. GPIO =
pin
> > > set as output in bootloader keep the same setting in Linux unless it =
is
> > > reconfigured.
> > >=20
> > > If we find the PWM block enabled we need to prepare and enable its so=
urce
> > > clock otherwise the clock will be disabled late in the boot as unused.
> > > That will leave the PWM in enabled state but with disabled clock. Tha=
t has
> > > a side effect that the PWM output is left at its current level at whi=
ch
> > > the clock was disabled. It is totally non-deterministic and it may be=
 LOW
> > > or HIGH.
> > >=20
> > > Signed-off-by: Michal Vok=C3=A1=C4=8D <michal.vokac@ysoft.com>
> > > ---
> > >  drivers/pwm/pwm-imx.c | 53 +++++++++++++++++++++++++++++++++++++++++=
++++++++++
> > >  1 file changed, 53 insertions(+)
> >=20
> > Applied, thanks.
>=20
> Did you miss my feedback for this patch or did you choose to ignore it?

Don't have anything in my inbox, but I see that it's there on patchwork,
so I suspect it was eaten by the spam filter. Let me copy-paste here and
go through it.

> > @@ -93,6 +96,55 @@ struct imx_chip {
> >
> >  #define to_imx_chip(chip) container_of(chip, struct imx_chip, chip)
> >
> > +static void imx_pwm_get_state(struct pwm_chip *chip,
> > +  struct pwm_device *pwm, struct pwm_state *state)
>=20
> broken alignment.

I can fix that up, no need to resend for that.

> > +{
> > + struct imx_chip *imx =3D to_imx_chip(chip);
> > + u32 period, prescaler, pwm_clk, ret, val;
> > + u64 tmp;
> > +
> > + val =3D readl(imx->mmio_base + MX3_PWMCR);
> > +
> > + if (val & MX3_PWMCR_EN) {
> > +  state->enabled =3D true;
> > +  ret =3D clk_prepare_enable(imx->clk_per);
> > +  if (ret)
> > +   return;
> > + } else {
> > +  state->enabled =3D false;
> > + }
> > +
> > + switch (FIELD_GET(MX3_PWMCR_POUTC, val)) {
> > + case MX3_PWMCR_POUTC_NORMAL:
> > +  state->polarity =3D PWM_POLARITY_NORMAL;
> > +  break;
> > + case MX3_PWMCR_POUTC_INVERTED:
> > +  state->polarity =3D PWM_POLARITY_INVERSED;
> > +  break;
> > + default:
> > +  dev_warn(chip->dev, "can't set polarity, output disconnected");
>=20
> Should we return an error here?

We can't return an error here because the function has a void return
type. I'm not sure what it means if the POUTC is neither "normal" nor
"inverted", but perhaps a good idea would be to default to either of
those two in that case, or perhaps forcibly disable the PWM so that
we get known-good values in the registers?

I'm tempted not to treat this as a blocker because it's not actually
a bug or anything. Prior to this patch we also ignore whatever this
field was set to.

> > + }
> > +
> > + prescaler =3D MX3_PWMCR_PRESCALER_GET(val);
> > + pwm_clk =3D clk_get_rate(imx->clk_per);
> > + pwm_clk =3D DIV_ROUND_CLOSEST_ULL(pwm_clk, prescaler);
> > + val =3D readl(imx->mmio_base + MX3_PWMPR);
>=20
> It would be more cautionous to not rely on the reserved bits to read as
> zero. So I suggest to mask the value with 0xffff.

If that's what the documentation says I think it's okay to rely on it.
But I can add the mask if we want to play it extra safe.

> > + period =3D val >=3D MX3_PWMPR_MAX ? MX3_PWMPR_MAX : val;
> > +
> > + /* PWMOUT (Hz) =3D PWMCLK / (PWMPR + 2) */
> > + tmp =3D NSEC_PER_SEC * (u64)(period + 2);
> > + state->period =3D DIV_ROUND_CLOSEST_ULL(tmp, pwm_clk);
>=20
> Would it make sense to introduce a policy about how to round in this
> case? (Similarily for .apply?) This is of course out of scope for this
> patch.

I'm not sure what you means by policy. The above already does round to
closest. Is that not an appropriate policy?

Thierry

--jI8keyz6grp/JLjh
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAABCAAdFiEEiOrDCAFJzPfAjcif3SOs138+s6EFAlwSkAwACgkQ3SOs138+
s6EvbRAAiSoc68kPXavkXZaCnhLaycjollGIu/aIustggx3HHqDdj2NtxG2EW/SF
VtpYuBhq2KcayaEjz8lnIc2LFYJpUdPrIH1DfXy9KDrk+wzPpXlQbTXWJyringWp
3H5arVlIRlLqI6RBkxHY2cAakUJpBdyULir9TNPX/Sdy/Zn06keJzSQOodXpfJ60
fsRcQ+oMddsBYtj2rUSSWpkGkHkcZKfo93e4rfm86+1MEcva6ysjv6Sa3FQNFPq5
f/N1SiVEYgAmSkf/o+uuu3hKLDr3GVb2jIA4XYOPBmUmAfhpsBZyILTwgoIq8mcA
S5KBMhMr5oe/1SHTZe1d2v6N9+gRiDLDJPQa3v1wMkXqH/ukzmKCmmesDvXXj4LC
hc/WmC6acDqJckWoY7hwFyn7BzIBp/BQ5LmXxeLGREYQKfnHULUv9fcZs2Kgh2Nf
QYGs9cf07+liqqUIVdEX47LTLih0xUbPyfeC78mT6ItLk4dDFTMydgCfwPDpkbFm
hldkWKyg9ylW+K03RnQHAZeT28nQzzC1AhoB5TeoJMS8RtuK1CNe+laKkkD6Pc1j
tBGasO/tqCypLhzbpjQvk8dxJSzrv6Wz8WSEnWqnSGOYkqkyWnajQ572Cb6EjxFl
UiOWJDYkSRDQO8q8JvfLib/tS4R5z+jcJvT39vONj6IVTVvUnTE=
=XRn/
-----END PGP SIGNATURE-----

--jI8keyz6grp/JLjh--
