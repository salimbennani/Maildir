Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:43:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 262F75803DC;
	Wed, 12 Dec 2018 02:00:26 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 12 Dec 2018 02:00:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AaWr47h1R9NU+E6nGsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSI/vxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelWoJL9p0MMoBalGQmsHfnixiNUinPq36A31fkqHwHc3AwnGtIDqH?=
 =?us-ascii?q?rarND0NKcOS+C0zLTDwjrDbvNL2jf975bIeQ0mrP6RQ7JxcdfRyUooFwPblViQ?=
 =?us-ascii?q?povlPzSa1uQJrWeX9fZvVeWqi2M+rQx6vzahxsApiobTh4IVzEjJ9Sp4wIYpJd?=
 =?us-ascii?q?24VVV0bcS4H5tXsiGXMZZ9TMA6Q2xwpio21rkLtYSmcCUE1pgr3QPTZv+bf4SS?=
 =?us-ascii?q?4x/uVv6dLSlkiH9hYr6yhBa//VK9xuD9V8S4yktGoy5Fn9TKq3sDzQbc6tKdRf?=
 =?us-ascii?q?t45kqh2SiA1wTU6uxcP0A0mrTUK4Q7zr4ziJUTq0LDETHymEnsi6+WbEok9vCp?=
 =?us-ascii?q?6+ThfLrmuoeRO5Fohgz6KKgih8KyDfoiPgQTXGWX5f6w2bzh8EHhRbVFlPw2kq?=
 =?us-ascii?q?3XsJDAIsQbo7a0AwtU0oYl9ha+AC6q0NcGknkdKlJKZhaHg5HuO1DAJvD3E+2/?=
 =?us-ascii?q?jk+ykDdk2f/GJKftApbTIXjZlrfuY7J951RbyAopwtBT/4hUBa0ZIPLvRk/xs8?=
 =?us-ascii?q?TVDhs4Mwy33enrEtp81p4FVGKLA6+ZNr7SsFCS6uIuJemMeJEauDLnJ/c54P7u?=
 =?us-ascii?q?iGczmUUBcqmxwZsXdHe4E+xmI0qDYHrsns0OEWAQsgo+UezlkluCUTFIana2Xq?=
 =?us-ascii?q?I84Cw7CY28AYfCQICtnKKO3COhEpJKYWBGD0iGEW30eIWcR/cMdCWSL9djkjwD?=
 =?us-ascii?q?S7etUYwh1RaotA/8zLpqNe7U+iwetZL+29l5/ezTlRcu9TNqC8SRyX2CT2Zxnm?=
 =?us-ascii?q?kQXT85wLh/oVBhyleEyaV3medYFdxU5/NKSAs6L4TTz+5hBtD2WwLBeMqJSVm8?=
 =?us-ascii?q?TtWnBzExUsw+w9sUb0lhHNWiiwjJ3zC2DL8Ni7yLGJs0/7rf33frIcZx0XLG1K?=
 =?us-ascii?q?g7gFkgTctCLmmmhq959wjOCI/FiUSZl6C2dasC2C7B7nuMzW2LvEtASg5/Tb3F?=
 =?us-ascii?q?XWwDZkvRtdn2+1nNT6GwBrg9MgtO08iCKrBUZd3villGQPTjONHaY2+qn2ewBB?=
 =?us-ascii?q?CIxq6DbYbwemUd2jndB1YAkwwJ4XmGMg0+DD+7o23CFDxuCU7vY0T0/OZjsny7?=
 =?us-ascii?q?UFE7wxuKb0J70bq14QAahfqHRvMX37IEvjohqjpuEFa82dLWF8SPpw57cKpAZt?=
 =?us-ascii?q?M95U9N1XjFuAxlIpygM6dii0YCcwR2ukPu0Al3CoVAkMQwsHMm1g1yKbic0FNA?=
 =?us-ascii?q?cTOY0ov9OrnWKmn04RCuZLTa2lDY0NaK5KgP7O40pEnkvAGsDkAi6Wlo08FJ03?=
 =?us-ascii?q?uA4ZXHFBAdUZbvXUc46Rd7p6vWbTIg54zJz3JsN6q0sjjc298yAOslyxCgf8pQ?=
 =?us-ascii?q?Ma+eFQ/yFdEaCNaqKOAwh1epaRcENvhI9KEoJ8Oma+eG2KmzMedggTKql3hI7J?=
 =?us-ascii?q?p800KM7SV8TOHI0o0Bw/GZ2AuHSjj9gE2gssDxhYBLezUSEnCjxijjAY5bfrdy?=
 =?us-ascii?q?cpoTCWeyP823wc1zh4TsW3FE7lGjHU4J2MizdRqUcVP9xwxQ2V0LrnO9nSu30i?=
 =?us-ascii?q?J7kysurqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfyn2LntuU6uqurqZfs5P7oglsSFWUOS6fFCbRaTxoxoc0yP/AW?=
 =?us-ascii?q?RewCo3eC2tupX8hxZ6kn6SLG5vrHrFfsF93RXf68bGRf5S3ToGQzN0iSLNCVi/?=
 =?us-ascii?q?PNmp/NOUmInFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qW6K+1neVNkBF3968p8AYx+loowhJcN2XkVnJmV/HwHkXvt?=
 =?us-ascii?q?PtVfw67xcH0NRTsTyd7P/AflwFFjLm6Ox4/hVXWS2Mpha8O6YmMLwC096c9KBb?=
 =?us-ascii?q?yQ7LxFmyt1v1W5oRjQYfh7gjcS1/8u5GQGjOEOvQon1j+dDawKHUlEISzskAyF?=
 =?us-ascii?q?79W/rKVUfmmja7ax21RlndC9Er6CuBpTV2jjepctBiJw6sR/MFTR0Hz88I3ked?=
 =?us-ascii?q?/Qbc4NuR2QiRvPk+9VKJcpnPoQmSVnIX79vWEiy+MjkRxu2pS6sJKGKmp3+qK5?=
 =?us-ascii?q?HwVYNib0Z84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5Uh9tX3PFJSrN2yNKHkd0NVvXx2dJE1ZgAAJUzQ2hJ85Fga2xMP/?=
 =?us-ascii?q?dEd1/Cwe5ln9qhFU0OJnKwH/UnvDpAevcjo0SoKQLB9I4QFZ/UvVLdaS7uFuHy?=
 =?us-ascii?q?Fb452hqhaCKneAagRMDGEJXFGEBl/5Mrmv49nA7/aXBu6kI/TSZrWOrPRUV+2U?=
 =?us-ascii?q?ypK3zotm4zGMO92PP3llEv07w1dDUmp/G8jDgDUPTCoXly3WYs6fpRe8/DB3r8?=
 =?us-ascii?q?+l/PTqXgLv+ZWAC79IPdpz/BC2hL+JN/SMiyZhNTZYypQMyGfIyLcB3V4SiCJu?=
 =?us-ascii?q?dzi3HbQDry7NS63QlbFNDx4GcCN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDE2dz3brimSbJOjORYrRmwuTeAHk/nPzSD?=
 =?us-ascii?q?kSTpVh+1PeFNiiGbIAJRuIWnfhlxDmjjScrsagenP99vkT023bo0i2vWNW4dND?=
 =?us-ascii?q?hwaV9CoqeM4iNYnPp/HXdM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?9CtEXuB6mDPOrt5ypFGriumOxSBhUBpLqzZLgpqEvERiOarD8JlAVm3J/BYM7W?=
 =?us-ascii?q?WWFhQLqMFpCtzpu6BM1NfPkLj/JytF89LRroMgAJ39LM+XOXwtPAChIDnIBRMI?=
 =?us-ascii?q?Sz2sfTXQg01Rneu6+XqSoZw37JPrncxdZKVcUQkZE/IGEFUtIs0fI5BpFmcoj6?=
 =?us-ascii?q?+Gj8kWzXW5qxbVSYNRuZWRBaHaOunmNDvM1eoMXBAP276taN1LboA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAADI2xBch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIUE4N7lCuCDRSSQ4R8gSQDTCwNBgGBS4J1gnsiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgHQEBNwEFCQEBCgsDCgICJgICAx8SA?=
 =?us-ascii?q?QUBHAYTBYMcAYF5CAUKmgs8ih1wgS+CdgEBBYEwAYV6AwUSeYsxF4FAP4Qjgx4?=
 =?us-ascii?q?CgSo3gwSCV4swlVkJhTuBT4pLGJFELI1tixEwgSVtgSEzGggbFWwGgjWCGwwXg?=
 =?us-ascii?q?0qKVD4zCnsBAYpagk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AaAADI2xBch0O0hNFjHgEGBwaBUQkLAYJpgQIUE4N7lCu?=
 =?us-ascii?q?CDRSSQ4R8gSQDTCwNBgGBS4J1gnsiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJhAQEBAQIBAQIgHQEBNwEFCQEBCgsDCgICJgICAx8SAQUBHAYTBYMcAYF?=
 =?us-ascii?q?5CAUKmgs8ih1wgS+CdgEBBYEwAYV6AwUSeYsxF4FAP4Qjgx4CgSo3gwSCV4swl?=
 =?us-ascii?q?VkJhTuBT4pLGJFELI1tixEwgSVtgSEzGggbFWwGgjWCGwwXg0qKVD4zCnsBAYp?=
 =?us-ascii?q?agk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="57134267"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 02:00:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726943AbeLLKAV (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 05:00:21 -0500
Received: from mail-it1-f195.google.com ([209.85.166.195]:40306 "EHLO
        mail-it1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726598AbeLLKAV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 05:00:21 -0500
Received: by mail-it1-f195.google.com with SMTP id h193so8833373ita.5
        for <linux-kernel@vger.kernel.org>; Wed, 12 Dec 2018 02:00:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=PCMMGWyvPYrev9RR1m66VHnWBNlCo9exbcjAzzQ0GsY=;
        b=nmtX3NCIJkrEYG3XiirWVUn3UXjltP3qD6QYKNVajpYBMBXqcQ70lUE/mkTTzSTjIs
         E3o2Vi/o0SKo/0xK66EVgDm1/FD8e3UGUc++D0y7pxgDG6LdxYBXxXi0WH2dHOD5X4By
         sExGCkwPqNW8qijjBlk4qFH3s8AH0E+AdYu6sSD6bqnudNZs82KWfvZnL88jo4tfYImw
         4qXCruH0j3F7zg1BrLhbsjV6E0y9iNW4wJ0XYzAo2JrBytBqwhgdC9chcghQWHaUhyqp
         swF+Dr/MegyIiVL/JBuVh1eVQDFQ0G7U4/DYumw6I27cnwsjcQJbrv+YTMGt/SwHnPJV
         xKog==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=PCMMGWyvPYrev9RR1m66VHnWBNlCo9exbcjAzzQ0GsY=;
        b=nxWPJyuYOQSPoGl3dDktypWwd8d2vYIbwRKMeQJahyp3pbPy2z1kXyePoW4rhIR07z
         2ULTcUdURQZe2WaYtxSO20Q53LY5JBJAYkTV2XV4x/WiwiV3QBQWIks+LxKhz6syfrzz
         VaQnO4ON3m/eMYpnM8lsxA1P+xQJ+jaeCoP/QXAmajF7gt4chPKEjJD5oHmcusDJUWRr
         UaV6XKjrbVvQul+jtRwfIooBkKNn6HW4JlLEoBBBDXBzYura9EChrOO3VvE1Ti81TF9h
         JwkIcD7pQ52H1iuLHw+4Oz5Mjp1oJk2Kn+5zrQasdKVHts0pvnIjmuE0hE6VnD2XXGzo
         ouhg==
X-Gm-Message-State: AA+aEWa/qJlZvR44GK7k9y0xutsRUL08d25pJRWqrh/c8F2e1PvX24Wz
        zIdqYyiKf9pX9xREKrYzBKqcXZuFqNQP4MHsdDnwlQ==
X-Google-Smtp-Source: AFSGD/USiE8ycoxzcQn8ODaBzFHNxyFTET8S7Hpo9x3/FQinJvTMXH23PP2HT0IRkxbOGOXHOboOTof4+WpATOLp634=
X-Received: by 2002:a24:f14d:: with SMTP id q13mr4887004iti.166.1544608819792;
 Wed, 12 Dec 2018 02:00:19 -0800 (PST)
MIME-Version: 1.0
References: <20181211133453.2835077-1-arnd@arndb.de> <CACT4Y+bRzY9hO5b=TjHeXTsVVO1z3eBOHz6oLgBhVR4OSm1d1w@mail.gmail.com>
 <CAG_fn=U2d799W6GiujK4pedkLZr=LJrFrZhfCQ=Kin35quA76g@mail.gmail.com>
In-Reply-To: <CAG_fn=U2d799W6GiujK4pedkLZr=LJrFrZhfCQ=Kin35quA76g@mail.gmail.com>
From: Dmitry Vyukov <dvyukov@google.com>
Date: Wed, 12 Dec 2018 11:00:08 +0100
Message-ID: <CACT4Y+bEvJVAS+bdAS+p5SzX4DrfzvTSfV1qzH=BszpGjtoL6g@mail.gmail.com>
Subject: Re: [PATCH] kasan: fix kasan_check_read/write definitions
To: Alexander Potapenko <glider@google.com>
Cc: Arnd Bergmann <arnd@arndb.de>,
        Andrew Morton <akpm@linux-foundation.org>,
        Andrey Ryabinin <aryabinin@virtuozzo.com>,
        anders.roxell@linaro.org,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Andrey Konovalov <andreyknvl@google.com>,
        Stephen Rothwell <sfr@canb.auug.org.au>,
        kasan-dev <kasan-dev@googlegroups.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Linux-MM <linux-mm@kvack.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 11, 2018 at 11:25 PM Alexander Potapenko <glider@google.com> wr=
ote:
> > > Building little-endian allmodconfig kernels on arm64 started failing
> > > with the generated atomic.h implementation, since we now try to call
> > > kasan helpers from the EFI stub:
> > >
> > > aarch64-linux-gnu-ld: drivers/firmware/efi/libstub/arm-stub.stub.o: i=
n function `atomic_set':
> > > include/generated/atomic-instrumented.h:44: undefined reference to `_=
_efistub_kasan_check_write'
> > >
> > > I suspect that we get similar problems in other files that explicitly
> > > disable KASAN for some reason but call atomic_t based helper function=
s.
> > >
> > > We can fix this by checking the predefined __SANITIZE_ADDRESS__ macro
> > > that the compiler sets instead of checking CONFIG_KASAN, but this in =
turn
> > > requires a small hack in mm/kasan/common.c so we do see the extern
> > > declaration there instead of the inline function.
> >
> >
> > Alexander, I think you are doing a similar thing for similar reasons
> > in KMSAN patch (see KMSAN_CHECK_ATOMIC_PARAMS):
> > https://github.com/google/kmsan/commit/17ebbfe19624c84adf79b0e5a74fd258=
c49ff12b
> > Namely, non-KMSAN-instrumented files must not get KMSAN callbacks from
> > atomics too.
> I'll need to double-check, but it occurs to me that we won't need
> additional hooks for atomics in KMSAN - the compiler instrumentation
> should suffice.

Compiler asm instrumentation will only insert conservative
initialization, but not checks of arguments, right?
I mean these checks are optional in the sense that it's only false
negatives, but since we already have them and they don't seem to lead
to false positives, why do we want to remove them?


> > Arnd patch does it the other way around: non-instrumented files need
> > to opt-in instead of opt-out.
> Shouldn't we put __SANITIZE_ADDRESS__ somewhere into mm/kasan/kasan.h the=
n?
> > Let's settle on a common way to do this, so that we can use it
> > consistently across all tools.
> >
> >
> >
> > > Fixes: b1864b828644 ("locking/atomics: build atomic headers as requir=
ed")
> > > Reported-by: Anders Roxell <anders.roxell@linaro.org>
> > > Signed-off-by: Arnd Bergmann <arnd@arndb.de>
> > > ---
> > >  include/linux/kasan-checks.h | 2 +-
> > >  mm/kasan/common.c            | 2 ++
> > >  2 files changed, 3 insertions(+), 1 deletion(-)
> > >
> > > diff --git a/include/linux/kasan-checks.h b/include/linux/kasan-check=
s.h
> > > index d314150658a4..a61dc075e2ce 100644
> > > --- a/include/linux/kasan-checks.h
> > > +++ b/include/linux/kasan-checks.h
> > > @@ -2,7 +2,7 @@
> > >  #ifndef _LINUX_KASAN_CHECKS_H
> > >  #define _LINUX_KASAN_CHECKS_H
> > >
> > > -#ifdef CONFIG_KASAN
> > > +#if defined(__SANITIZE_ADDRESS__) || defined(__KASAN_INTERNAL)
> > >  void kasan_check_read(const volatile void *p, unsigned int size);
> > >  void kasan_check_write(const volatile void *p, unsigned int size);
> > >  #else
> > > diff --git a/mm/kasan/common.c b/mm/kasan/common.c
> > > index 03d5d1374ca7..51a7932c33a3 100644
> > > --- a/mm/kasan/common.c
> > > +++ b/mm/kasan/common.c
> > > @@ -14,6 +14,8 @@
> > >   *
> > >   */
> > >
> > > +#define __KASAN_INTERNAL
> > > +
> > >  #include <linux/export.h>
> > >  #include <linux/interrupt.h>
> > >  #include <linux/init.h>
> > > --
> > > 2.20.0
> > >
>
>
>
> --
> Alexander Potapenko
> Software Engineer
>
> Google Germany GmbH
> Erika-Mann-Stra=C3=9Fe, 33
> 80636 M=C3=BCnchen
>
> Gesch=C3=A4ftsf=C3=BChrer: Paul Manicle, Halimah DeLaine Prado
> Registergericht und -nummer: Hamburg, HRB 86891
> Sitz der Gesellschaft: Hamburg
