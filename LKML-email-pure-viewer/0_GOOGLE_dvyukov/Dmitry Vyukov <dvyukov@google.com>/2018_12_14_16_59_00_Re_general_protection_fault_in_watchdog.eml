Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:07:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 17EBD5805FC;
	Fri, 14 Dec 2018 09:05:47 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 14 Dec 2018 09:05:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Am+kF5BzjshjpLrzXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8TKfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/1jcKPAZtMaXXROUdpNVyJPBYO8?=
 =?us-ascii?q?apEAD+sHPe1Fq4XwqF8DoR64CAKxBu3g1yVIi2f50q000esvEQ/I0g89EdwQrH?=
 =?us-ascii?q?vUt831OaUJXOCp0KXF1ynPY+9K1Tr/7oXDbxAvoeuLXbJ1acffx0wvFwLZjlWK?=
 =?us-ascii?q?qY3uIjya1+QQs2iY6OpgS/+khmk6pAFvojmv28Qsio7Xho8OxVDE8iJ5wIkxJd?=
 =?us-ascii?q?KmUkJ0fdmkEJ5JuiycKoB4TMQiQ2RytyY7zL0LoYW0fC8NyJQ7wx7favqHf5KU?=
 =?us-ascii?q?7RLkUeadOS13hGp9eLKknxay9lSgxvfgWcmz1VZHqDdOnNrUtn0VyRDf9syKRu?=
 =?us-ascii?q?Fg8kqvxzqDzR3f5+JYLUwulKfWKYYtzqAsmpcXq0jOHS/7lF/rgKKXd0go4PWk?=
 =?us-ascii?q?5uDpb7jgu5SSLZV7ihvkPaQrgsG/Afo3MgwJX2WD5+S826Ps/VfjTLVJkPI2iK?=
 =?us-ascii?q?/Zv47eJcgBoa65GQBV3p4i6xa5ETimzMwVkWcbIF9BYh6LkobkN0/ULPzlDvqz?=
 =?us-ascii?q?n06gnTZpyvzeO73uGJTNLnzNkLf7erZ97lZRyA4yzdBZ+pJVBagNIPHtVU/rst?=
 =?us-ascii?q?zXEBs5PxWzw+fpDtVyyJkeVHmRAq+WLqzSq0WE5uExLOmWYo8apjL9J+Ii5/70?=
 =?us-ascii?q?gn81gUUdcrWx3ZsLdHC4GexrI0GYYXrvnNgNC2gLvhclQezuiV2CVyNTZnmoU6?=
 =?us-ascii?q?I94DE7FJypDYPZSo+xh7yB2T+xHodKaWBeFlCMDXDoep2EW/gWaSKSPtVukjse?=
 =?us-ascii?q?WbihVo8uzxeutADhxrpjL+rU/DAYtJ352Nh04e3TiQ899ThuA8uB1GGNSnl+nn?=
 =?us-ascii?q?kUSD8uwKB/vUt9x0+B0ah/nfNUD99T5/RPUgc8Mp7R1Oh6C9H0WgLccdaFUlem?=
 =?us-ascii?q?QtO6AT4vStI92cMBY0F4G9+6lBDMwzKqA6MJl7yMHJE76Lnc33j2J8Z+0XrGzr?=
 =?us-ascii?q?Muj1s9T8tLNG2mgLN/9gfJC47IlUWZi7ildaAG0CHR82eDyHKEvFtEXw5oTaXF?=
 =?us-ascii?q?QXcfa1PVrdvj4EPOVbuuCbU9PQtHxs6PMa9KatzvjVVbS/bvItXeY2Stm2iuAR?=
 =?us-ascii?q?aE3K+DbI3ve28FxiXSFFAEkxwP/XaBLQUxGz2uo3zAAzB0FVLgeUXs8fJgp3O9?=
 =?us-ascii?q?SUM0ywKKb0hl17eu/h4VhPqcS+4c374euSchrSl0E0i5397MF9WAoA9hdr1GYd?=
 =?us-ascii?q?wh+FdHyX7ZtwtlM5O9Na9imEARfx53v0z00RV3EZtPkc4xoXMuzQpyL7+Y0Vxb?=
 =?us-ascii?q?ezOZ25DwJqPYKm3o8B+zbK7W30nU0MyK9acX9PQ4t1LjsRm1Fkoj9nVn1MVV03?=
 =?us-ascii?q?uc55nQEAoeS5XxUlwz9xh7obHabTIw54fV1X1qLKm1vSXO29MvBOs51Bmge81T?=
 =?us-ascii?q?P7+DFA/3C8caHdShKPQ2m1i1aRIJJPpd9KoqMMKpafSH2LSnM/19nD27l2tH5o?=
 =?us-ascii?q?N90kWS9ydnTu7I3pAFw+yX3wedVjf8ikuhvd7zmYxeeT4SGW+/wzD+BIFNfq1y?=
 =?us-ascii?q?YZoLCWC2Lsy329VynYLiV2RZ9V6jHVwG3sCpdAGWb1z82w1QyEsWrWammSu+0z?=
 =?us-ascii?q?x7jTUporCD0yzJxuTobAAHNXJTRGl+kVfsJpC5j8obXEe0dQcpjgaq5UHgy6hd?=
 =?us-ascii?q?uqt/NWjTTV5UcCfsK2FtT7W/tqCFY85J854otSRXUOKhYVGVULL9oh0a0z/9EG?=
 =?us-ascii?q?ta3jw0azaqupDhlRxglG2dNGpzrGbeecxoxRbf5cbQRP5L0jodWSl4jyLaBly9?=
 =?us-ascii?q?P9mv4NWVmI3PsuG4V2K9SJJTdTPnwp+HtCu+/WdqGwGwn+ivmt37Fgg3yS372M?=
 =?us-ascii?q?NwVSXLrxb8ZZPn17+gPuJkfUloBVn85NR8GoxlloswhZcQ2WUVh5mP/HoHl3vz?=
 =?us-ascii?q?Pstf2a7kcHUNQjsLycbP4Af5wE1jMm6Jx4XhW3Sd2MRhYMO2YmEX2iI79M1KDK?=
 =?us-ascii?q?aU7LpZnSp6uFa4rATRYeRjkTcZ0/ch9Hkag+QRsgo30iqdGqwSHVVfPSH0lBSH?=
 =?us-ascii?q?9dG+oL9XZGaya7ew0kV+kMulDLGDpAFcRXn4do0jHS928sVwLlbM3Gfv5YHjfd?=
 =?us-ascii?q?nadcgTuQGMkxfck+hVL4o8lv8LhSpkI23xp3MkxPAgjRxyw566ppOIJHt3/KK2?=
 =?us-ascii?q?GRNYMjz1Z8UO+jDil6pen8CW35yxEZVlADkEQJzoTfewGjIIqfvnLxqOECE7qn?=
 =?us-ascii?q?qDBbrfGgqf5F1nrn3VFZCrKmqXJGIYzdh5QBmdJUpfgB0bXTkgn545EByqy9Ll?=
 =?us-ascii?q?cEtj+j8R4Vv4oANWyu10Lxn/TnvfpACwZzgvUpefKx5W7hxY60fRLMyT9eZzHy?=
 =?us-ascii?q?Be/p28ow2BMG2bZwJUDW4XXkyIHUzsPr6r5dPY6eiXGvK+L+fSYbWJseFeVe2H?=
 =?us-ascii?q?xZex3Yt95TqMKt+DPnp/D/04x0pDW2p2G9/CljULSiwXkT/NbsGBqBe9/C13st?=
 =?us-ascii?q?6w8PDxVA3z4ouPDqNYMc9z9BCunaeDK+mQiT55KDZfy5MM3GLIx6IZ3FIIkCFu?=
 =?us-ascii?q?cD+tEbsbuC7JTaLQnLJXDhEBZyNyMstI87wz3g1XNcHHjdP106ZyjuQpBFddSV?=
 =?us-ascii?q?zhhsapaNQKI26jNVPHB0WLNLWcKT3I2cH3Zqy8RqNKjOVJrB29ojKbE07lPjSe?=
 =?us-ascii?q?mDjlTRGvMedQjC6FOBxSop2ychFoCWL7VtLpdgW7MMNrjT0x2bA7nG7KOnUGMT?=
 =?us-ascii?q?dic0JBtLmQ7SJDj/V7GmxB6GdlLOaelyaY6enYNogZsf9xDitokOJa5Wwwy6FJ?=
 =?us-ascii?q?4yFcWPx1hCzSo8Zyo1Gnl+mD0CZoXABSpTZLmo2Lu15vOaHY9plGRHbF8wgB7W?=
 =?us-ascii?q?SWCxQWudRlDsfjtLxXytjKjKjzMitN88rI/csAAMjZMMKGP2AnMRrsGT7UChMK?=
 =?us-ascii?q?TD+rNW7FgUxdn+qf9nmUrpg8t5jtl4ACSr5dVFwpCPwaDl5pE8AFIJdyDXsYlu?=
 =?us-ascii?q?u+jcUI7H72jB7aR8IS6pXHUfmRBt3sJSyfgL0CYAEHl+DWN4MWY6H+2lB4exFE?=
 =?us-ascii?q?jZnJHFSYCdxTszBiaREcr0JK/3xzCGY03hS2OUuW/HYPGKvszVYNgQxkbLFoqW?=
 =?us-ascii?q?7h?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D8AACx4hNch0O0hNFkEwEBCAEBBQEHB?=
 =?us-ascii?q?QGBZYJqgQIng3yWHhSXV4EQBUosCwgBh0ciOBIBAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiSCYgEBAQECAQECIB0BATcBBQkBAQoLAwoCAhEVAgIDHxIBBQEcBhMFA?=
 =?us-ascii?q?xGDCAGBeAgFCpo9PIofcIEvgnYBAQWHJgMFEnmLMxeBQD+BEYMSgx4CAhiBAh9?=
 =?us-ascii?q?lgkeCV4s4lWIJhT2BUIpNGIFdhRwFilSOMYshMIE8gXczGggbFTsxBoI1ghsJA?=
 =?us-ascii?q?xeDSopUPjMBBIEAAQGKa4JMAQE?=
X-IPAS-Result: =?us-ascii?q?A0D8AACx4hNch0O0hNFkEwEBCAEBBQEHBQGBZYJqgQIng3y?=
 =?us-ascii?q?WHhSXV4EQBUosCwgBh0ciOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiSCYgEBA?=
 =?us-ascii?q?QECAQECIB0BATcBBQkBAQoLAwoCAhEVAgIDHxIBBQEcBhMFAxGDCAGBeAgFCpo?=
 =?us-ascii?q?9PIofcIEvgnYBAQWHJgMFEnmLMxeBQD+BEYMSgx4CAhiBAh9lgkeCV4s4lWIJh?=
 =?us-ascii?q?T2BUIpNGIFdhRwFilSOMYshMIE8gXczGggbFTsxBoI1ghsJAxeDSopUPjMBBIE?=
 =?us-ascii?q?AAQGKa4JMAQE?=
X-IronPort-AV: E=Sophos;i="5.56,353,1539673200"; 
   d="scan'208";a="44093194"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 09:05:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729981AbeLNQ7N (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 11:59:13 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:51808 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729409AbeLNQ7N (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 11:59:13 -0500
Received: by mail-it1-f193.google.com with SMTP id x19so9822640itl.1
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 08:59:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=pX4aR1lu7wJBeZZTeK3sSpuD9jJX/CI6ffE/yAvqj3E=;
        b=gvvibs+uTlUhw6zoMluwumFRecjSVusX13oex2s1l30bZGtESKpC7LGObtj6WyUzpj
         8Z9pnTmEaIwpa6kZrnqpCXiLsa2lbgACDqeOffk3eK9cOtkN5hSO+0ha0Npx8W/WX8xD
         bLGsppEfeRPpp6EV1SpVqnP2q3/hWJrLgKXzzb+tu5HS8XiB0ob/c99F3Q3iqcLNdZtV
         OIRb3I5pWHttJjaQshzGOICrU5+RN4lq2l1YyMO33+3NALXWzxyUwH54I39zH8KgN+OX
         ZDt1wbACx/tlYghIlYfHspWPWiGuqzD9LasIEMMfAOcgKxTiTJ4554NBwiiyjqbMDxmG
         aPfw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=pX4aR1lu7wJBeZZTeK3sSpuD9jJX/CI6ffE/yAvqj3E=;
        b=hW+NFntPbmvUudNOrKo4MBaf5MxiumCVY0KByLZh3r1hhdHiqivTn2+Uw3HmMnj53T
         rGJcpv0P4hRjemzXPoxKYHcoTjkTFo27WNyO1oIgZY6/tJgNSoS9E46CMG4L8RRp7dNE
         X6SvNTHoM7Jof6l/+X+wd8RGGe5vLv37eZeEQ5hiSqHpoSUZ8KwbmT4dwURnuxCLkT4C
         BENgrcHt3WXswDRBcApTck4l3CXgogELw+Ik1DXR20j2yWiKEOOA806yJ96hIN4K+lPd
         59USxA6FyNHTfefrXSCnCzBJwE1L1eC5Q3+1nqO3Gr/T0bspy3XVYk9vjfnifPx4An7R
         zhtA==
X-Gm-Message-State: AA+aEWbiy3e62YUC6S3bYXNJTwB5tAWITkzGfKKUCSEnOurcAQIgmNrk
        sV5T+kEK6jBNAabzVvuctiV2834yqON1pmO5nmlErQ==
X-Google-Smtp-Source: AFSGD/UG8x7sSNhNd7UzdfLJhXQpMe+VO0FVtGApvkejcciXZSsIZektQj3DJbyJXfi+YDUuYxtAWy6EoAYvzb79lbk=
X-Received: by 2002:a24:b20e:: with SMTP id u14mr3885372ite.12.1544806751640;
 Fri, 14 Dec 2018 08:59:11 -0800 (PST)
MIME-Version: 1.0
References: <0000000000004ea80b057cfae21e@google.com> <CACT4Y+Z+AhQxf6=ecOkX1bOU5h7kMHYnR6CAhBv9eO5jQVeG3g@mail.gmail.com>
 <20181214132836.GE5343@dhcp22.suse.cz> <CACT4Y+aXFXnObgC-7NVe87-1bbqs2oNBBXe2mrfshLKnFqkTGA@mail.gmail.com>
 <20181214135419.GG5343@dhcp22.suse.cz> <CACT4Y+b1Qc069LO25JhJh51zTAMBL6t_E7LRZiSPi8FP0v+zUQ@mail.gmail.com>
 <20181214165258.GI5343@dhcp22.suse.cz>
In-Reply-To: <20181214165258.GI5343@dhcp22.suse.cz>
From: Dmitry Vyukov <dvyukov@google.com>
Date: Fri, 14 Dec 2018 17:59:00 +0100
Message-ID: <CACT4Y+be8ZX8rTX9aogU23r267XR1_8P25iQ16YK72zFLd_u_w@mail.gmail.com>
Subject: Re: general protection fault in watchdog
To: Michal Hocko <mhocko@kernel.org>
Cc: Pablo Neira Ayuso <pablo@netfilter.org>,
        Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>,
        Florian Westphal <fw@strlen.de>,
        David Miller <davem@davemloft.net>,
        NetFilter <netfilter-devel@vger.kernel.org>,
        netdev <netdev@vger.kernel.org>,
        syzbot <syzbot+7713f3aa67be76b1552c@syzkaller.appspotmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Paul McKenney <paulmck@linux.vnet.ibm.com>,
        Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>,
        rafael.j.wysocki@intel.com,
        syzkaller-bugs <syzkaller-bugs@googlegroups.com>,
        vkuznets@redhat.com, Linux-MM <linux-mm@kvack.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 14, 2018 at 5:53 PM Michal Hocko <mhocko@kernel.org> wrote:
>
> On Fri 14-12-18 15:31:44, Dmitry Vyukov wrote:
> > On Fri, Dec 14, 2018 at 2:54 PM Michal Hocko <mhocko@kernel.org> wrote:
> > >
> > > On Fri 14-12-18 14:42:33, Dmitry Vyukov wrote:
> > > > On Fri, Dec 14, 2018 at 2:28 PM Michal Hocko <mhocko@kernel.org> wrote:
> > > > >
> > > > > On Fri 14-12-18 14:11:05, Dmitry Vyukov wrote:
> > > > > > On Fri, Dec 14, 2018 at 1:51 PM syzbot
> > > > > > <syzbot+7713f3aa67be76b1552c@syzkaller.appspotmail.com> wrote:
> > > > > > >
> > > > > > > Hello,
> > > > > > >
> > > > > > > syzbot found the following crash on:
> > > > > > >
> > > > > > > HEAD commit:    f5d582777bcb Merge branch 'for-linus' of git://git.kernel...
> > > > > > > git tree:       upstream
> > > > > > > console output: https://syzkaller.appspot.com/x/log.txt?x=16aca143400000
> > > > > > > kernel config:  https://syzkaller.appspot.com/x/.config?x=c8970c89a0efbb23
> > > > > > > dashboard link: https://syzkaller.appspot.com/bug?extid=7713f3aa67be76b1552c
> > > > > > > compiler:       gcc (GCC) 8.0.1 20180413 (experimental)
> > > > > > > syz repro:      https://syzkaller.appspot.com/x/repro.syz?x=1131381b400000
> > > > > > > C reproducer:   https://syzkaller.appspot.com/x/repro.c?x=13bae593400000
> > > > > > >
> > > > > > > IMPORTANT: if you fix the bug, please add the following tag to the commit:
> > > > > > > Reported-by: syzbot+7713f3aa67be76b1552c@syzkaller.appspotmail.com
> > > > > >
> > > > > > +linux-mm for memcg question
> > > > > >
> > > > > > What the repro does is effectively just
> > > > > > setsockopt(EBT_SO_SET_ENTRIES). This eats all machine memory and
> > > > > > causes OOMs. Somehow it also caused the GPF in watchdog when it
> > > > > > iterates over task list, perhaps some scheduler code leaves a dangling
> > > > > > pointer on OOM failures.
> > > > > >
> > > > > > But what bothers me is a different thing. syzkaller test processes are
> > > > > > sandboxed with a restrictive memcg which should prevent them from
> > > > > > eating all memory. do_replace_finish calls vmalloc, which uses
> > > > > > GFP_KERNEL, which does not include GFP_ACCOUNT (GFP_KERNEL_ACCOUNT
> > > > > > does). And page alloc seems to change memory against memcg iff
> > > > > > GFP_ACCOUNT is provided.
> > > > > > Am I missing something or vmalloc is indeed not accounted (DoS)? I see
> > > > > > some explicit uses of GFP_KERNEL_ACCOUNT, e.g. the one below, but they
> > > > > > seem to be very sparse.
> > > > > >
> > > > > > static void *seq_buf_alloc(unsigned long size)
> > > > > > {
> > > > > >      return kvmalloc(size, GFP_KERNEL_ACCOUNT);
> > > > > > }
> > > > > >
> > > > > > Now looking at the code I also don't see how kmalloc(GFP_KERNEL) is
> > > > > > accounted... Which makes me think I am still missing something.
> > > > >
> > > > > You are not missing anything. We do not account all allocations and you
> > > > > have to explicitly opt-in by __GFP_ACCOUNT. This is a deliberate
> > > > > decision. If the allocation is directly controlable by an untrusted user
> > > > > and the memory is associated with a process life time then this looks
> > > > > like a good usecase for __GFP_ACCOUNT. If an allocation outlives a
> > > > > process then there the flag should be considered with a great care
> > > > > because oom killer is not able to resolve the memcg pressure and so the
> > > > > limit enforcement is not effective.
> > > >
> > > > Interesting.
> > > > I understand that namespaces, memcg's and processes (maybe even
> > > > threads) can have arbitrary overlapping. But I naively thought that in
> > > > canonical hierarchical cases it should all somehow work.
> > > > Question 1: is there some other, stricter sandboxing mechanism?
> > >
> > > I do not think so
> > >
> > > > We try
> > > > to sandbox syzkaller processes with everything available , because
> > > > these OOMs usually leads either to dead machines or hang/stall false
> > > > positives, which are nasty.
> > >
> > > Which is a useful test on its own. If you are able to trigger the global
> > > OOM from a restricted environment then you have a good candidate to
> > > consider a new __GFP_ACCOUNT user.
> > >
> > > > Question 2: this is a simple DoS vector, right? If I put a container
> > > > into a 1MB memcg, it can still eat arbitrary amount of non-pagable
> > > > kernel memory?
> > >
> > > As I've said. If there is a direct vector to allocated an unbounded
> > > amount of memory from the userspace (trusted users aside) then yes this
> > > sounds like a DoS to me.
> >
> > +netfilter maintainers for this easy DoS vector
> > short story: vmalloc in do_replace_finish allows unbounded memory
> > allocation not accounted to memcg
>
> Haven't we discussed that recently?

I just gave an executive summary to the new people I added to CC.

> > Looks pretty unbounded:
> >
> > [  763.451796] syz-executor681: vmalloc: allocation failure, allocated
> > 1027440640 of 1879052288 bytes, mode:0x6000c0(GFP_KERNEL),
> > nodemask=(null)
> >
> > But how does this play with what you said about memory outliving
> > process? Netfilter tables can definitely outlive the process, they are
> > attached to net ns.
>
> Not very well, but it is not hopeless either. The charged memory
> wouldn't go away with oom victims so it will stay there until somebody
> destroys those objects. On the other hand any process within that memcg
> would be killed so a DoS should be somehow contained.
>
> > Also, am I reading this correctly that potentially thousands of kernel
> > memory allocations need to be converted to ACCOUNT? I mean for small
> > ones we maybe care less, but they _should_ be accounted. They can also
> > build up, or just simply allow small repeated allocations.
> >
> > GFP_KERNEL Referenced in 11070 files:
> > https://elixir.bootlin.com/linux/latest/ident/GFP_KERNEL
> >
> > GFP_KERNEL_ACCOUNT Referenced in 19 files:
> > https://elixir.bootlin.com/linux/latest/ident/GFP_KERNEL_ACCOUNT
>
> Yes, we do not care about all kernel objects. Most of them are contained
> by some high-level objects already. The purpose of the kmem accounting
> is to limit those objects that can grow really large and are reclaimable
> in some way.

I see, thanks for the explanations.
