Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 757825807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 09:41:14 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 09:41:14 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3An6chWxMa0B5NTZb27IMl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/r8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhc5+jK1UrxyvugR/zozWboyaKfZzcL/Rcs0BRWdaQspRTjZMDp+g?=
 =?us-ascii?q?Y4cTE+YMO/tToYnnp1sJqBuzHQegCu31yjNSm3T407c10/ogEQ7bwQctA9YOv2?=
 =?us-ascii?q?7SrN7oNakSUOS1w7LWwjXZc/NdxDPx6IfJchA9pP2AU697fM3MxkkgFgPFik6f?=
 =?us-ascii?q?ppL/PzOJzekNqXaU4PdgVe21l24rsR1+oj+qxso1jITCm4Ebykjc+Cln3Io4Js?=
 =?us-ascii?q?e0RFNmbdOnCpdcqS+XOotsTs8/QWxkoDg2xqECtJKhYSQHxoorywTCZ/GEfYWE?=
 =?us-ascii?q?+AzvWeWXLDxlnnxqYqi/iAy38UW4yu3zSM200FFSoypBk9nMrWwN1wfJ5siITP?=
 =?us-ascii?q?t9412t2TGV1wDc8u1EIEY0mrTHK5M53LI8ipkevV7eEiPrm0j6lrGae0sk9+Sy?=
 =?us-ascii?q?9ujqYK3qppqGOI91jgH+PL4umsu6AekgKwgBQW2b+fml2LL+40L5XqtFjvkvnq?=
 =?us-ascii?q?bCt5DaOMIbqbKnDA9O1Yoj7xe/DzS439gCkngHMUpIeBaGj4jvJlHPL+r0Dfa5?=
 =?us-ascii?q?g1Swjjhrw+rKMaHmApXINXXDlrDhfbBy605a1Qo/19df54hbCr0ZOvL8RlfxtM?=
 =?us-ascii?q?DEDh8+KwG0x+fnCNZj2Y8EVmOPH7SUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YLuGU24AKYiW4Auh+OBfeJn7tmcsaV2ENuAU4UartklLFVDdSY3O7We?=
 =?us-ascii?q?U7/i06D4S9Sp7OQ53ojLGf0SPoI5tNe2oTD1mNFWvvJZyJXupJZC+ML8skiDEd?=
 =?us-ascii?q?SLW6V6cn0hehshK8zKBoefHJ8C8Vvo62yd5u+ufIngsz/zEnM8PIymyIUiR4k3?=
 =?us-ascii?q?0FQxcw26Zwp1E7zU2MgoZihPkNX/BJobtlWxk7Odb1y+V8Q//zXgjMZMvBCFmn?=
 =?us-ascii?q?XpTsSWU9QdM1ydIUf25nFtmihwyF1C2vVexG34eXDYA5p/qPl0P6INxwni7L?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BRAADfpA5cmBHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMIJijHKLMIINl1GBcxQYFIdtIjYHDQEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4vgjYFAgMYCYJXBQMDAQJDChcSAwMBAgYBAR8pCAMBUxkFMIJsUYExAQSnS?=
 =?us-ascii?q?4VAhGCMIReBQD+BEY1uAoknEpc8BwICkUILGIlmh1eZMIFNAoIFcBWDJ4InFxK?=
 =?us-ascii?q?OC0ExgQccigWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BRAADfpA5cmBHrdtBkHQEBBQEHBQGBUwYBCwGBMIJijHK?=
 =?us-ascii?q?LMIINl1GBcxQYFIdtIjYHDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFAgMYC?=
 =?us-ascii?q?YJXBQMDAQJDChcSAwMBAgYBAR8pCAMBUxkFMIJsUYExAQSnS4VAhGCMIReBQD+?=
 =?us-ascii?q?BEY1uAoknEpc8BwICkUILGIlmh1eZMIFNAoIFcBWDJ4InFxKOC0ExgQccigWBd?=
 =?us-ascii?q?wEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55289131"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 09:41:13 -0800
Received: from localhost ([::1]:34008 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWPYO-0006Lr-1D
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 12:41:12 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46089)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgilbert@redhat.com>) id 1gWPPZ-0006RJ-0p
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:32:07 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgilbert@redhat.com>) id 1gWPPX-0003eS-Ix
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:32:04 -0500
Received: from mx1.redhat.com ([209.132.183.28]:26824)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgilbert@redhat.com>) id 1gWPPX-0003dh-9f
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:32:03 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 9336230224BE;
	Mon, 10 Dec 2018 17:32:01 +0000 (UTC)
Received: from dgilbert-t530.redhat.com (unknown [10.36.118.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 39B341001914;
	Mon, 10 Dec 2018 17:32:00 +0000 (UTC)
From: "Dr. David Alan Gilbert (git)" <dgilbert@redhat.com>
To: qemu-devel@nongnu.org
Date: Mon, 10 Dec 2018 17:31:48 +0000
Message-Id: <20181210173151.16629-5-dgilbert@redhat.com>
In-Reply-To: <20181210173151.16629-1-dgilbert@redhat.com>
References: <20181210173151.16629-1-dgilbert@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.49]);
	Mon, 10 Dec 2018 17:32:01 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [RFC PATCH 4/7] virtio-fs: Add vhost-user slave
 commands for mapping
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: sweil@redhat.com, swhiteho@redhat.com, stefanha@redhat.com,
	vgoyal@redhat.com, miklos@szeredi.hu
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: "Dr. David Alan Gilbert" <dgilbert@redhat.com>

The daemon may request that fd's be mapped into the virtio-fs cache
visible to the guest.
These mappings are triggered by commands sent over the slave fd
from the daemon.

Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
---
 contrib/libvhost-user/libvhost-user.h |  3 +++
 docs/interop/vhost-user.txt           | 35 +++++++++++++++++++++++++++
 hw/virtio/vhost-user-fs.c             | 20 +++++++++++++++
 hw/virtio/vhost-user.c                | 16 ++++++++++++
 include/hw/virtio/vhost-user-fs.h     | 24 ++++++++++++++++++
 5 files changed, 98 insertions(+)

diff --git a/contrib/libvhost-user/libvhost-user.h b/contrib/libvhost-use=
r/libvhost-user.h
index 4aa55b4d2d..6cff0ff189 100644
--- a/contrib/libvhost-user/libvhost-user.h
+++ b/contrib/libvhost-user/libvhost-user.h
@@ -99,6 +99,9 @@ typedef enum VhostUserSlaveRequest {
     VHOST_USER_SLAVE_IOTLB_MSG =3D 1,
     VHOST_USER_SLAVE_CONFIG_CHANGE_MSG =3D 2,
     VHOST_USER_SLAVE_VRING_HOST_NOTIFIER_MSG =3D 3,
+    VHOST_USER_SLAVE_FS_MAP =3D 4,
+    VHOST_USER_SLAVE_FS_UNMAP =3D 5,
+    VHOST_USER_SLAVE_FS_SYNC =3D 6,
     VHOST_USER_SLAVE_MAX
 }  VhostUserSlaveRequest;
=20
diff --git a/docs/interop/vhost-user.txt b/docs/interop/vhost-user.txt
index c2194711d9..29cdd74523 100644
--- a/docs/interop/vhost-user.txt
+++ b/docs/interop/vhost-user.txt
@@ -815,6 +815,41 @@ Slave message types
       This request should be sent only when VHOST_USER_PROTOCOL_F_HOST_N=
OTIFIER
       protocol feature has been successfully negotiated.
=20
+ * VHOST_USER_SLAVE_FS_MAP
+
+      Id: 4
+      Equivalent ioctl: N/A
+      Slave payload: fd + n * (offset + address + len)
+      Master payload: N/A
+
+      Requests that the QEMU mmap the given fd into the virtio-fs cache;
+      multiple chunks can be mapped in one command.
+      A reply is generated indicating whether mapping succeeded.
+
+ * VHOST_USER_SLAVE_FS_UNMAP
+
+      Id: 5
+      Equivalent ioctl: N/A
+      Slave payload: n * (address + len)
+      Master payload: N/A
+
+      Requests that the QEMU un-mmap the given range in the virtio-fs ca=
che;
+      multiple chunks can be unmapped in one command.
+      A reply is generated indicating whether unmapping succeeded.
+
+ * VHOST_USER_SLAVE_FS_SYNC
+
+      Id: 6
+      Equivalent ioctl: N/A
+      Slave payload: n * (address + len)
+      Master payload: N/A
+
+      Requests that the QEMU causes any changes to the virtio-fs cache t=
o
+      be synchronised with the backing files.  Multiple chunks can be sy=
nced
+      in one command.
+      A reply is generated indicating whether syncing succeeded.
+      [Semantic details TBD]
+
 VHOST_USER_PROTOCOL_F_REPLY_ACK:
 -------------------------------
 The original vhost-user specification only demands replies for certain
diff --git a/hw/virtio/vhost-user-fs.c b/hw/virtio/vhost-user-fs.c
index 14ee922661..da70d9cd2c 100644
--- a/hw/virtio/vhost-user-fs.c
+++ b/hw/virtio/vhost-user-fs.c
@@ -21,6 +21,26 @@
 #include "hw/virtio/vhost-user-fs.h"
 #include "monitor/monitor.h"
=20
+int vhost_user_fs_slave_map(struct vhost_dev *dev, VhostUserFSSlaveMsg *=
sm,
+                            int fd)
+{
+    /* TODO */
+    return -1;
+}
+
+int vhost_user_fs_slave_unmap(struct vhost_dev *dev, VhostUserFSSlaveMsg=
 *sm)
+{
+    /* TODO */
+    return -1;
+}
+
+int vhost_user_fs_slave_sync(struct vhost_dev *dev, VhostUserFSSlaveMsg =
*sm)
+{
+    /* TODO */
+    return -1;
+}
+
+
 static void vuf_get_config(VirtIODevice *vdev, uint8_t *config)
 {
     VHostUserFS *fs =3D VHOST_USER_FS(vdev);
diff --git a/hw/virtio/vhost-user.c b/hw/virtio/vhost-user.c
index e09bed0e4a..beb028c7e2 100644
--- a/hw/virtio/vhost-user.c
+++ b/hw/virtio/vhost-user.c
@@ -12,6 +12,7 @@
 #include "qapi/error.h"
 #include "hw/virtio/vhost.h"
 #include "hw/virtio/vhost-user.h"
+#include "hw/virtio/vhost-user-fs.h"
 #include "hw/virtio/vhost-backend.h"
 #include "hw/virtio/virtio.h"
 #include "hw/virtio/virtio-net.h"
@@ -97,6 +98,9 @@ typedef enum VhostUserSlaveRequest {
     VHOST_USER_SLAVE_IOTLB_MSG =3D 1,
     VHOST_USER_SLAVE_CONFIG_CHANGE_MSG =3D 2,
     VHOST_USER_SLAVE_VRING_HOST_NOTIFIER_MSG =3D 3,
+    VHOST_USER_SLAVE_FS_MAP =3D 4,
+    VHOST_USER_SLAVE_FS_UNMAP =3D 5,
+    VHOST_USER_SLAVE_FS_SYNC =3D 6,
     VHOST_USER_SLAVE_MAX
 }  VhostUserSlaveRequest;
=20
@@ -169,6 +173,7 @@ typedef union {
         VhostUserConfig config;
         VhostUserCryptoSession session;
         VhostUserVringArea area;
+        VhostUserFSSlaveMsg fs;
 } VhostUserPayload;
=20
 typedef struct VhostUserMsg {
@@ -1010,6 +1015,17 @@ static void slave_read(void *opaque)
         ret =3D vhost_user_slave_handle_vring_host_notifier(dev, &payloa=
d.area,
                                                           fd[0]);
         break;
+#ifdef CONFIG_VHOST_USER_FS
+    case VHOST_USER_SLAVE_FS_MAP:
+        ret =3D vhost_user_fs_slave_map(dev, &payload.fs, fd[0]);
+        break;
+    case VHOST_USER_SLAVE_FS_UNMAP:
+        ret =3D vhost_user_fs_slave_unmap(dev, &payload.fs);
+        break;
+    case VHOST_USER_SLAVE_FS_SYNC:
+        ret =3D vhost_user_fs_slave_sync(dev, &payload.fs);
+        break;
+#endif
     default:
         error_report("Received unexpected msg type.");
         ret =3D -EINVAL;
diff --git a/include/hw/virtio/vhost-user-fs.h b/include/hw/virtio/vhost-=
user-fs.h
index be153e1c7a..9989bcd9e7 100644
--- a/include/hw/virtio/vhost-user-fs.h
+++ b/include/hw/virtio/vhost-user-fs.h
@@ -23,6 +23,24 @@
 #define VHOST_USER_FS(obj) \
         OBJECT_CHECK(VHostUserFS, (obj), TYPE_VHOST_USER_FS)
=20
+/* Structures carried over the slave channel back to QEMU */
+#define VHOST_USER_FS_SLAVE_ENTRIES 8
+
+/* For the flags field of VhostUserFSSlaveMsg */
+#define VHOST_USER_FS_FLAG_MAP_R (1ull << 0)
+#define VHOST_USER_FS_FLAG_MAP_W (1ull << 1)
+
+typedef struct {
+    /* Offsets within the file being mapped */
+    uint64_t fd_offset[VHOST_USER_FS_SLAVE_ENTRIES];
+    /* Offsets within the cache */
+    uint64_t c_offset[VHOST_USER_FS_SLAVE_ENTRIES];
+    /* Lengths of sections */
+    uint64_t len[VHOST_USER_FS_SLAVE_ENTRIES];
+    /* Flags, from VHOST_USER_FS_FLAG_* */
+    uint64_t flags[VHOST_USER_FS_SLAVE_ENTRIES];
+} VhostUserFSSlaveMsg;
+
 typedef struct {
     CharBackend chardev;
     char *tag;
@@ -44,4 +62,10 @@ typedef struct {
     MemoryRegion cache;
 } VHostUserFS;
=20
+/* Callbacks from the vhost-user code for slave commands */
+int vhost_user_fs_slave_map(struct vhost_dev *dev, VhostUserFSSlaveMsg *=
sm,
+                            int fd);
+int vhost_user_fs_slave_unmap(struct vhost_dev *dev, VhostUserFSSlaveMsg=
 *sm);
+int vhost_user_fs_slave_sync(struct vhost_dev *dev, VhostUserFSSlaveMsg =
*sm);
+
 #endif /* _QEMU_VHOST_USER_FS_H */
--=20
2.19.2


