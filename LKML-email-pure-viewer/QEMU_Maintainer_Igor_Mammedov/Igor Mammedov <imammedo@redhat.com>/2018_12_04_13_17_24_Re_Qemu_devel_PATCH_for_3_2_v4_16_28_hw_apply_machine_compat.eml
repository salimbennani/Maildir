Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:38:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B9E78580375
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 05:18:10 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 05:18:10 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AzBv+ax8kunGaAv9uRHKM819IXTAuvvDOBiVQ1KB2?=
 =?us-ascii?q?1O8cTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMNboRr4oRzut86ZrSAfpiC?=
 =?us-ascii?q?gZMT457HrXgdF0gK5CvR6tuwBzz4vSbYqINvRxY7ndcMsUS2RBQMhfVC5OAo2z?=
 =?us-ascii?q?YIQTAOQPIP5Yoov/qVYBsBezCxWgC/30yjJTmn/2xLc33/g9HQ3a3gEtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSeO7zKbPzTXZcvhY3i3y6I3Nch8/vP6MWqxwetfWxEkuEgPKlFCQ?=
 =?us-ascii?q?qYn7MDyI0eQAqHKb4PR9WuKvkWEntxt9rSSoxscpk4TEgJ8exFPc9Shh3oo5Od?=
 =?us-ascii?q?61RFRmbdK5E5ZcrT+WOoV2T884Xm1luj42xqMatZO/ZiQG1ZoqywDFZ/CacIWF?=
 =?us-ascii?q?7AjvWPiSLDp+mXlrYqiwhwyo/kil0uD8Vte70FJNriddltnMt2sN1wDI6sSdRf?=
 =?us-ascii?q?t9+Fqh1SyI1wDJ5eFIOUE0lazFJJ492rM8iIYfvEfZEiPrhUn7j7Waelsq9+Wo?=
 =?us-ascii?q?8ejrf7frqoeZN4BuiwH+Nqoumta4AeQ9KgUORnaU+eGh1LH64EL2XqtKgeMykq?=
 =?us-ascii?q?XAq5/aItkbpqilDABLyYYv7BK/Dzal0NsGh3UGI09FdQqDj4joPVHOPf/5Ae2+?=
 =?us-ascii?q?g1SqjDdk2fTGMqf9DZXKK3jOi7HhfbF7605Tzgoz0MpT55VOCrEOOP7zQFP+tM?=
 =?us-ascii?q?TEDh8lNAy52+LnCNR+1owAQ26ODbKZPbjWsV+J4OIvPuaNaJUUuDb7N/gq+fru?=
 =?us-ascii?q?gWUlll8aeKn6laYRc22yS/R6P12CMz2rhtYaDXxMuA04Q+r3zlqYXnlWbne2Wq?=
 =?us-ascii?q?s6oTYjFIOhC5yEX42onfmN0Tm2Gs5rYHtbAAWJGHbsa4LWQvoJdWeeL9Fslnke?=
 =?us-ascii?q?WKG8RpQ9/RepsgD81vxgNOWD4TASt5/oyI1o4fbOnwo57z1+Apeh1DSgQ3x9hG?=
 =?us-ascii?q?8PDx8/1qN4ulA1nlqD2KJ7hOdEPcZe6/NATkExMpuKnMJgDNWnew3GZJ+sQVOj?=
 =?us-ascii?q?T9mhH3llT9c4xtoDb0FVAdiujhnfmSGtBulGxPSwGJUo//eEjDDKLMFnxiODjf?=
 =?us-ascii?q?F5gg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AwAABcfQZchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgTCCTxODeYh4iy+CDYkRDo4qgXMUGBSEQINRIjYHDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAgEBAiAEHwopAwIBAQIGAQEKD?=
 =?us-ascii?q?goCAgUaAwQCAgMBCxI2BhMFFoMGgWoDCAUIAQSkTnwzhUCCSg2CHIELixMXgUA?=
 =?us-ascii?q?/hCOCEEeCKoMEglcCiyCUeS4JijaDXYMjCxiJW4dLjniJfYFNDYF5TSMVgyeCJ?=
 =?us-ascii?q?xcSjgxAMYEHHIh/gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AwAABcfQZchxHrdtBjHAEBAQQBAQcEAQGBUwUBAQsBgTC?=
 =?us-ascii?q?CTxODeYh4iy+CDYkRDo4qgXMUGBSEQINRIjYHDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOL4I2BQIDGgEGglsBAQEBAgEBAiAEHwopAwIBAQIGAQEKDgoCAgUaAwQCAgM?=
 =?us-ascii?q?BCxI2BhMFFoMGgWoDCAUIAQSkTnwzhUCCSg2CHIELixMXgUA/hCOCEEeCKoMEg?=
 =?us-ascii?q?lcCiyCUeS4JijaDXYMjCxiJW4dLjniJfYFNDYF5TSMVgyeCJxcSjgxAMYEHHIh?=
 =?us-ascii?q?/gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="140682238"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 05:18:09 -0800
Received: from localhost ([::1]:56680 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUAaX-0003u3-1q
	for like.xu@linux.intel.com; Tue, 04 Dec 2018 08:18:09 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54093)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gUAa6-0003pC-3D
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:17:43 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gUAa4-0008AV-GS
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 08:17:42 -0500
Received: from mx1.redhat.com ([209.132.183.28]:59858)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>)
	id 1gUAZz-0007yy-Cm; Tue, 04 Dec 2018 08:17:35 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 6C3EF307D91D;
	Tue,  4 Dec 2018 13:17:34 +0000 (UTC)
Received: from localhost (unknown [10.43.2.182])
	by smtp.corp.redhat.com (Postfix) with ESMTP id F2E1560923;
	Tue,  4 Dec 2018 13:17:25 +0000 (UTC)
Date: Tue, 4 Dec 2018 14:17:24 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: Eduardo Habkost <ehabkost@redhat.com>
Message-ID: <20181204141724.5f06bd1b@redhat.com>
In-Reply-To: <20181130114142.GV18284@habkost.net>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
	<20181127092801.21777-17-marcandre.lureau@redhat.com>
	<20181127125644.GB18284@habkost.net>
	<CAMxuvaySoJ2TokV8M81CVU3Hp4dC25c+PW_p2kk+V88-88U-CQ@mail.gmail.com>
	<20181127133527.GI18284@habkost.net>
	<20181128184027.7d584eaa@redhat.com>
	<CAJ+F1CK5NkgsJWFGZ7kvR81KyeOPE_ytk=tOjKqTUGtbfywmJQ@mail.gmail.com>
	<20181129175055.GQ18284@habkost.net>
	<CAJ+F1CJBKVibRrgjiNKjSJ5ufK=CUodx26aHnKzeL3Cs7adbeA@mail.gmail.com>
	<20181130115526.5974ca7a@redhat.com>
	<20181130114142.GV18284@habkost.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Tue, 04 Dec 2018 13:17:34 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v4 16/28] hw: apply machine compat
 properties without touching globals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	"Michael S. Tsirkin" <mst@redhat.com>,
	David Hildenbrand <david@redhat.com>,
	Cornelia Huck <cohuck@redhat.com>, QEMU <qemu-devel@nongnu.org>,
	Christian Borntraeger <borntraeger@de.ibm.com>,
	Qemu-s390x list <qemu-s390x@nongnu.org>, "open
	list:ARM" <qemu-arm@nongnu.org>,
	=?UTF-8?B?TWFyYy1BbmRyw6k=?= Lureau <marcandre.lureau@gmail.com>,
	Paolo Bonzini <pbonzini@redhat.com>,
	"open list:sPAPR pseries" <qemu-ppc@nongnu.org>,
	David Gibson <david@gibson.dropbear.id.au>,
	Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, 30 Nov 2018 09:41:42 -0200
Eduardo Habkost <ehabkost@redhat.com> wrote:

> On Fri, Nov 30, 2018 at 11:55:26AM +0100, Igor Mammedov wrote:
> > On Fri, 30 Nov 2018 01:36:03 +0400
> > Marc-Andr=C3=A9 Lureau <marcandre.lureau@gmail.com> wrote:
> >  =20
> > > Hi
> > >=20
> > > On Thu, Nov 29, 2018 at 9:51 PM Eduardo Habkost <ehabkost@redhat.com>=
 wrote: =20
> > > >
> > > > On Thu, Nov 29, 2018 at 02:32:18PM +0400, Marc-Andr=C3=A9 Lureau wr=
ote:   =20
> > > > > Hi
> > > > > On Wed, Nov 28, 2018 at 9:53 PM Igor Mammedov <imammedo@redhat.co=
m> wrote:   =20
> > > > > >
> > > > > > On Tue, 27 Nov 2018 11:35:27 -0200
> > > > > > Eduardo Habkost <ehabkost@redhat.com> wrote:
> > > > > >   =20
> > > > > > > On Tue, Nov 27, 2018 at 05:10:05PM +0400, Marc-Andr=C3=A9 Lur=
eau wrote:   =20
> > > > > > > > On Tue, Nov 27, 2018 at 4:57 PM Eduardo Habkost <ehabkost@r=
edhat.com> wrote:   =20
> > > > > > > > >
> > > > > > > > > On Tue, Nov 27, 2018 at 01:27:49PM +0400, Marc-Andr=C3=A9=
 Lureau wrote:   =20
> > > > > > > > > > Similarly to accel properties, move compat properties o=
ut of globals
> > > > > > > > > > registration, and apply the machine compat properties d=
uring
> > > > > > > > > > device_post_init().
> > > > > > > > > >
> > > > > > > > > > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau=
@redhat.com>   =20
> > > > > > > > > [...]   =20
> > > > > > > > > > diff --git a/hw/core/qdev.c b/hw/core/qdev.c
> > > > > > > > > > index 7066d28271..3b31b2c025 100644
> > > > > > > > > > --- a/hw/core/qdev.c
> > > > > > > > > > +++ b/hw/core/qdev.c
> > > > > > > > > > @@ -971,17 +971,26 @@ static void device_initfn(Object =
*obj)
> > > > > > > > > >  }
> > > > > > > > > >
> > > > > > > > > >  static const GPtrArray *ac_compat_props;
> > > > > > > > > > +static const GPtrArray *mc_compat_props;   =20
> > > > > > why you didn't use just 'compat_props' for both?
> > > > > > (it would be cleaner have single registry for compat
> > > > > > properties, and the place that takes care of registration
> > > > > > will take care of necessary ordering)   =20
> > > > >
> > > > > There are two arrays, one from the accelerator class, the other f=
rom
> > > > > the machine class. We can't make it a singleton (all compats prop=
s for
> > > > > the various machines would be mixed).
> > > > >
> > > > > We could create a third array that would be the set of both, but =
that
> > > > > would require more copy/allocation.   =20
> > > >
> > > > I am failing to see the advantage of replacing the `global_props`
> > > > static variable from qdev-properties.c with a collection of
> > > > separate static variables scattered around the code.  I thought
> > > > the main point of the changes was to reduce the amount of
> > > > duplicate data stored in static variables. =20
> > Main point was to use compats for backends then on top of that=20
> > we added split global from compat properties goal.
> >  =20
> > > > I was expecting something like this:
> > > >
> > > > accel.c:
> > > >
> > > >   void accel_apply_compat_props(AccelState *accel, Object *obj)
> > > >   {
> > > >       object_apply_global_props(obj, ACCEL_GET_CLASS(accel)->compat=
_props, &error_abort);
> > > >   }
> > > >
> > > > machine.c:
> > > >
> > > >   /* Apply compat properties and global properties to an object */
> > > >   void machine_apply_compat_props(MachineState *ms, Object *obj)
> > > >   {
> > > >       accel_apply_compat_props(ms->accel, obj);
> > > >       object_apply_global_props(obj, MACHINE_GET_CLASS(ms)->compat_=
props, &error_abort);
> > > >   }
> > > >
> > > > compat-props.c:
> > > >
> > > >   static void object_apply_compat_props(Object *obj)
> > > >   {
> > > >       MachineState *machine =3D MACHINE(qdev_get_machine());
> > > >       machine_apply_compat_props(machine, obj);
> > > >   }
> > > >
> > > > qdev.c:
> > > >
> > > >   static void device_post_init(Object *obj)
> > > >   {
> > > >       object_apply_compat_props(obj);
> > > >       apply_user_provided_globals(obj);
> > > >   }
> > > >
> > > > object_interface.c:
> > > >
> > > >   void user_creatable_complete(Object *obj, Error **errp)
> > > >   {
> > > >       object_apply_compat_props(obj);
> > > >       ...
> > > >       ucc->complete(...)
> > > >   }
> > > >   =20
> > >=20
> > > I like that solution too (which you also proposed in the other
> > > thread). But we have to decide whether it's acceptable to reference
> > > MachineState, or if the compat properties should be registered. =20
> > I dislike pulling in machine into basic object code and
> > I think a separate compats would be cleaner interface without
> > layer violation. But to unstuck, lets go with qdev_get_machine()
> > for now. =20
>=20
> Which basic object code?  The only reference to machine above is
> at compat-props.c.  I don't see any layering violation here.
I see compat properties as just a set of arbitrary properties
that's applied to objects depending on configuration.
Which currently includes machine version and accel type
but in no way inherently tied to them.

As for layering violation, we do it in device model cases
as it's machine related (ugly 'acceptable' but helps to cut corners)
and with new interface it will be used wit backends which are not
machine related at all.

Doing like you suggest would make it usable with current machine
initialization order (with some fixes) but if one would consider
a bit earlier time (preconfig time) and creating machine step by
step from there it might be less usable (as it needs machine instance,
it still would be possible but probably more tricky (pure speculation)).

So I'd vote for abstracted from machine compat props that could be
called from any object that implements interface and explicit
compats registration (like we do now) and explicit registration failure
if compats happend to be applied to any object. But in case of this
series I'm fine with any approach just to get compat properties work
with backends for now.



