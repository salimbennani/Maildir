Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:46:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 58EEA58079D
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 05:43:45 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 05:43:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ARHPn1BDOlPMN+fujPLouUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPXzosbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2/?=
 =?us-ascii?q?bYQPAeUOMvpXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+Q4CwzKwBAsE84MvX?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQzjvDYPRW2S3g44bPaB8hpPSMUqxtfsrW10kkCgTIjlSV?=
 =?us-ascii?q?qYP/OjOV0/oCvHWc7+d7T+KglXMoqwFrrTiz3Msjlo7JhocMx13C6C53w541KM?=
 =?us-ascii?q?WmREJnYtOoCoZcuzyZOodsXM8vTWFltDwnxrAEoZK3YjQGxZA9yxLCZfGLbZKE?=
 =?us-ascii?q?7g/gWeufOzt0mnFodbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gJ1xzS8ciHVu?=
 =?us-ascii?q?B98l2u2TaJygDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7m1/6gLKLekgn4OSk?=
 =?us-ascii?q?9erqb7X8qpOBNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OSlyrLj+FD5TKxXgfIojK?=
 =?us-ascii?q?nWrpTaKd0Aqa6+Hg9V1Jos5AikDzuh1NQYnHoHI0xfdBOIkojkI1XOIPH+Dfei?=
 =?us-ascii?q?jFWgijZrx/baPrL/BpXBNGTMkLDkfbtm7U5czwwzzd9Z55JJEL0BJ+jzWkDpuN?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl0oMeWGGPDbGDPKLdrF+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaCPwI/J9Pk/MYWbwmsxTViAOvxEiV6rsj1uNVyMVYGy9GK?=
 =?us-ascii?q?c15zU+AYThCp/fR4erm/uY0SKmW5FbeG1CWW2KCmriIoCNWvMQb3CLL8p81zAJ?=
 =?us-ascii?q?S7WlDpUszAyjrxPSzb1hIezJvCoCusX4ydJ36ubPwAw07iF+FM+H0muAHF1zy0?=
 =?us-ascii?q?YBXTRz9aZzu8017kqZ3KFly6hdHMZY7vVFSAp8MYPGwuVnI8r/VgLIYpGCT1Pw?=
 =?us-ascii?q?Efu8BjRkb9022ZcrakN4FtmlkFiX3i+jBroYm7ujHpE48qvAmXP2IpAumD79yK?=
 =?us-ascii?q?A9ggx+EYN0Pmq8i/s6rlCLCg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BQAAA3vg9cmBHrdtBlHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMIE5gRYTg3uIeIsxgg2JIYk1hHyBcxQYAxGEQIJtIjYHDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCXAECAgEBAiAEHwopAwIBAQIGAQEKG?=
 =?us-ascii?q?gIFHQQCAgMBC0gGEwWDHAGBdAUIAQSlKXwzhUCEbIELizAXgUA/g241ghCCcYM?=
 =?us-ascii?q?EglcCiReGKJE8CYcJij0LGIlmh1osmQeBTQeCAE0jFYMnCYIeFxKODEAxgQcci?=
 =?us-ascii?q?E6BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BQAAA3vg9cmBHrdtBlHQEBBQEHBQGBUwYBCwGBMIE5gRY?=
 =?us-ascii?q?Tg3uIeIsxgg2JIYk1hHyBcxQYAxGEQIJtIjYHDQEDAQEBAQEBAgETAQEBAQEIC?=
 =?us-ascii?q?wsGGw4vgjYFAgMaAQaCXAECAgEBAiAEHwopAwIBAQIGAQEKGgIFHQQCAgMBC0g?=
 =?us-ascii?q?GEwWDHAGBdAUIAQSlKXwzhUCEbIELizAXgUA/g241ghCCcYMEglcCiReGKJE8C?=
 =?us-ascii?q?YcJij0LGIlmh1osmQeBTQeCAE0jFYMnCYIeFxKODEAxgQcciE6BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55417918"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 05:43:44 -0800
Received: from localhost ([::1]:38211 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWiK7-0000dL-QY
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 08:43:43 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53898)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gWiJt-0000c8-99
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 08:43:30 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gWiJs-0003OR-AU
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 08:43:29 -0500
Received: from mx1.redhat.com ([209.132.183.28]:41210)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>)
	id 1gWiJl-0003Io-34; Tue, 11 Dec 2018 08:43:22 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 7A6A4307D91D;
	Tue, 11 Dec 2018 13:43:19 +0000 (UTC)
Received: from localhost (unknown [10.43.2.182])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 2887060C64;
	Tue, 11 Dec 2018 13:43:15 +0000 (UTC)
Date: Tue, 11 Dec 2018 14:43:13 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: =?UTF-8?B?TWFyYy1BbmRyw6k=?= Lureau <marcandre.lureau@redhat.com>
Message-ID: <20181211144313.12befbbb@redhat.com>
In-Reply-To: <20181204142023.15982-17-marcandre.lureau@redhat.com>
References: <20181204142023.15982-1-marcandre.lureau@redhat.com>
	<20181204142023.15982-17-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Tue, 11 Dec 2018 13:43:19 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v5 16/19] RFC: arm: replace
 instance_post_init()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>, Andrew Jones <drjones@redhat.com>,
	"open list:ARM" <qemu-arm@nongnu.org>, qemu-devel@nongnu.org,
	ehabkost@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue,  4 Dec 2018 18:20:20 +0400
Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> wrote:

> Replace arm_cpu_post_init() instance callback by calling it from leaf
> classes, to avoid potential ordering issue with other post_init callbacks.
>=20
> Note: this patch is no longer needed in this series, since the
> compat-props interface approach was abandoned.
>=20
> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> Suggested-by: Igor Mammedov <imammedo@redhat.com>
Current call chain is
  aarch64_a57_initfn()
  arm_cpu_post_init()
  device_post_init()

so no compats nor globals influence arm_cpu_post_init() flow,
so it's save to squash it in initfn.

Reviewed-by: Igor Mammedov <imammedo@redhat.com>
=20
> ---
>  target/arm/cpu.h   |  2 ++
>  target/arm/cpu.c   | 15 ++++++++++++---
>  target/arm/cpu64.c | 11 ++++++++++-
>  3 files changed, 24 insertions(+), 4 deletions(-)
>=20
> diff --git a/target/arm/cpu.h b/target/arm/cpu.h
> index 2a73fed9a0..84fba2b24b 100644
> --- a/target/arm/cpu.h
> +++ b/target/arm/cpu.h
> @@ -884,6 +884,8 @@ static inline ARMCPU *arm_env_get_cpu(CPUARMState *en=
v)
>      return container_of(env, ARMCPU, env);
>  }
> =20
> +void arm_cpu_post_init(Object *obj);
> +
>  uint64_t arm_cpu_mp_affinity(int idx, uint8_t clustersz);
> =20
>  #define ENV_GET_CPU(e) CPU(arm_env_get_cpu(e))
> diff --git a/target/arm/cpu.c b/target/arm/cpu.c
> index 60411f6bfe..8a4aae7438 100644
> --- a/target/arm/cpu.c
> +++ b/target/arm/cpu.c
> @@ -734,7 +734,7 @@ static Property arm_cpu_pmsav7_dregion_property =3D
>  static Property arm_cpu_initsvtor_property =3D
>              DEFINE_PROP_UINT32("init-svtor", ARMCPU, init_svtor, 0);
> =20
> -static void arm_cpu_post_init(Object *obj)
> +void arm_cpu_post_init(Object *obj)
>  {
>      ARMCPU *cpu =3D ARM_CPU(obj);
> =20
> @@ -2094,6 +2094,7 @@ static void arm_host_initfn(Object *obj)
>      ARMCPU *cpu =3D ARM_CPU(obj);
> =20
>      kvm_arm_set_cpu_features_from_host(cpu);
> +    arm_cpu_post_init(ARM_CPU(obj));
>  }
> =20
>  static const TypeInfo host_arm_cpu_type_info =3D {
> @@ -2108,14 +2109,23 @@ static const TypeInfo host_arm_cpu_type_info =3D {
> =20
>  #endif
> =20
> +static void arm_cpu_instance_init(Object *obj)
> +{
> +    const ARMCPUInfo *info =3D object_class_get_class_data(object_get_cl=
ass(obj));
> +
> +    info->initfn(obj);
> +    arm_cpu_post_init(obj);
> +}
> +
>  static void cpu_register(const ARMCPUInfo *info)
>  {
>      TypeInfo type_info =3D {
>          .parent =3D TYPE_ARM_CPU,
>          .instance_size =3D sizeof(ARMCPU),
> -        .instance_init =3D info->initfn,
> +        .instance_init =3D arm_cpu_instance_init,
>          .class_size =3D sizeof(ARMCPUClass),
>          .class_init =3D info->class_init,
> +        .class_data =3D (void *)info,
>      };
> =20
>      type_info.name =3D g_strdup_printf("%s-" TYPE_ARM_CPU, info->name);
> @@ -2128,7 +2138,6 @@ static const TypeInfo arm_cpu_type_info =3D {
>      .parent =3D TYPE_CPU,
>      .instance_size =3D sizeof(ARMCPU),
>      .instance_init =3D arm_cpu_initfn,
> -    .instance_post_init =3D arm_cpu_post_init,
>      .instance_finalize =3D arm_cpu_finalizefn,
>      .abstract =3D true,
>      .class_size =3D sizeof(ARMCPUClass),
> diff --git a/target/arm/cpu64.c b/target/arm/cpu64.c
> index 873f059bf2..dbfc3ee490 100644
> --- a/target/arm/cpu64.c
> +++ b/target/arm/cpu64.c
> @@ -447,14 +447,23 @@ static void aarch64_cpu_class_init(ObjectClass *oc,=
 void *data)
>      cc->gdb_arch_name =3D aarch64_gdb_arch_name;
>  }
> =20
> +static void aarch64_cpu_instance_init(Object *obj)
> +{
> +    const ARMCPUInfo *info =3D object_class_get_class_data(object_get_cl=
ass(obj));
> +
> +    info->initfn(obj);
> +    arm_cpu_post_init(obj);
> +}
> +
>  static void aarch64_cpu_register(const ARMCPUInfo *info)
>  {
>      TypeInfo type_info =3D {
>          .parent =3D TYPE_AARCH64_CPU,
>          .instance_size =3D sizeof(ARMCPU),
> -        .instance_init =3D info->initfn,
> +        .instance_init =3D aarch64_cpu_instance_init,
>          .class_size =3D sizeof(ARMCPUClass),
>          .class_init =3D info->class_init,
> +        .class_data =3D (void *)info,
>      };
> =20
>      type_info.name =3D g_strdup_printf("%s-" TYPE_ARM_CPU, info->name);


