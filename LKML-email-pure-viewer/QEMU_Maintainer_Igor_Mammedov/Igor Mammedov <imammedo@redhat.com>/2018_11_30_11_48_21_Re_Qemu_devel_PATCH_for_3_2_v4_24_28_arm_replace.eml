Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:16:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A15FE580224
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 03:48:51 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 03:48:51 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3As+j5URTFJWVpTsevWDvnPG4tvNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zbBGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBDOgOPehXoIbhqFUAsAO+CAuuCu7g1zNFiGP60rMh0+k6DQHGxRYtE84SvH?=
 =?us-ascii?q?jIrtj4MroZX+CvzKnPyDXOd/BY2Tj66IjSbxsvpuuDXbd1ccXP1EYvEB3FhUiX?=
 =?us-ascii?q?pIzkOjOazOENs22F4OV9UuKikHQnpB9srTiv3MgslpPFiZ4SylDB7Ch0xps+K9?=
 =?us-ascii?q?6gSENjf9KoDJhduzuHO4drQc4uWX9ktSg6x7EcpJK2fjAGxIo7yxPbcfCLboaF?=
 =?us-ascii?q?7gz5WOqMIjp1imhpdKy8ihu07EOu0PfzVtOu31ZPtidFksfDtnQK1xHL7siHS+?=
 =?us-ascii?q?B9/lu62TqV2ADT7PxELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gayMekk55+Sl?=
 =?us-ascii?q?6P7rbqvoq5KcLYN4lwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj5FP2QLBXjvEvj6?=
 =?us-ascii?q?bWro7aKtofpqKgGABV1Zsj6xCjADi4y9QUmn0HLFNGeB2ZlYToNEzOLej8Dfe+?=
 =?us-ascii?q?hVSsjThqy+rHPr3nHpXCMHzDnK39crZ67k5R0wwzzddZ55JbDLEBPej/WkjrtN?=
 =?us-ascii?q?zXFhM5KRC7w/77CNVh0YMTQWaPAq6aMKzMq1OJ6f8vLvKIZI8Uvjb9Nvck6+Tv?=
 =?us-ascii?q?jX8/hV8SY62p0YELZ3C/G/Q1a3ifemfm19cdDX8R7E15SO3xlEbEVzlVaHCvGa?=
 =?us-ascii?q?Um6XY+AYOiCI7FAYe1nL2G2jz8B5BTeyVKB06BFSTVcZ6ZUaIJYSOWPsgzizEB?=
 =?us-ascii?q?SP2tRpEs0VS0uRbnxqF7BuzT/CIeqNTkztci/PDZlxw56WlpCd+A2XqGVWB+kz?=
 =?us-ascii?q?A0QGoT1bp05GV7xk0CmYxlmfFRCJQH4vpTWQ48OYTRiehnEd37Ryrbc9uJQUrg?=
 =?us-ascii?q?SdKjV2IfVNU0lv4BZFw1Ptynix3P2DTiV74QnrmOCZAz2rjR03j4O4B2zHOQh/?=
 =?us-ascii?q?pptEUvXsYabT7uvaV47QWGQteRy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAABOIgFchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBOYEWE4N5iBhfiyqCDYkfiTCEeYFzFBgDEYRAgzQiNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEKCwkIGw4vgjYFAgMaAQaCXAECAgEBAiAEHwopAwIBAQIGA?=
 =?us-ascii?q?QEKGgIFHQQCAgMBC0gGEwWDHAGBdAUIAQSmYHwzhUCEboELixAXgUA/g241ghC?=
 =?us-ascii?q?CcYMEglcCiQiGIZEICYZ/ii0LGIlZh0YsmC6BRoINTSMVgycJgh4Xjh5AMYEHH?=
 =?us-ascii?q?IwIgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AUAABOIgFchxHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BOYEWE4N5iBhfiyqCDYkfiTCEeYFzFBgDEYRAgzQiNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEKCwkIGw4vgjYFAgMaAQaCXAECAgEBAiAEHwopAwIBAQIGAQEKGgIFHQQCAgM?=
 =?us-ascii?q?BC0gGEwWDHAGBdAUIAQSmYHwzhUCEboELixAXgUA/g241ghCCcYMEglcCiQiGI?=
 =?us-ascii?q?ZEICYZ/ii0LGIlZh0YsmC6BRoINTSMVgycJgh4Xjh5AMYEHHIwIgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="53307416"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 03:48:50 -0800
Received: from localhost ([::1]:59489 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gShHs-000219-DQ
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 06:48:48 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46218)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gShHc-0001z1-W6
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:48:33 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gShHc-0007sf-48
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:48:32 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51356)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>)
	id 1gShHX-0007pM-Na; Fri, 30 Nov 2018 06:48:27 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id F002B394D48;
	Fri, 30 Nov 2018 11:48:26 +0000 (UTC)
Received: from localhost (unknown [10.43.2.182])
	by smtp.corp.redhat.com (Postfix) with ESMTP id C330626540;
	Fri, 30 Nov 2018 11:48:22 +0000 (UTC)
Date: Fri, 30 Nov 2018 12:48:21 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: =?UTF-8?B?TWFyYy1BbmRyw6k=?= Lureau <marcandre.lureau@redhat.com>
Message-ID: <20181130124821.292bd5c9@redhat.com>
In-Reply-To: <20181127092801.21777-25-marcandre.lureau@redhat.com>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
	<20181127092801.21777-25-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.38]);
	Fri, 30 Nov 2018 11:48:27 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v4 24/28] arm: replace
 instance_post_init()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>, "open
	list:ARM" <qemu-arm@nongnu.org>, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, 27 Nov 2018 13:27:57 +0400
Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> wrote:

> Replace arm_cpu_post_init() instance callback by calling it from leaf
> classes, to avoid potential the ordering issue with interfaces
> post-init.
>=20
> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> Suggested-by: Igor Mammedov <imammedo@redhat.com>
> ---
>  target/arm/cpu.h   |  2 ++
>  target/arm/cpu.c   | 15 ++++++++++++---
>  target/arm/cpu64.c | 11 ++++++++++-
>  3 files changed, 24 insertions(+), 4 deletions(-)
>=20
> diff --git a/target/arm/cpu.h b/target/arm/cpu.h
> index 2a73fed9a0..84fba2b24b 100644
> --- a/target/arm/cpu.h
> +++ b/target/arm/cpu.h
> @@ -884,6 +884,8 @@ static inline ARMCPU *arm_env_get_cpu(CPUARMState *en=
v)
>      return container_of(env, ARMCPU, env);
>  }
> =20
> +void arm_cpu_post_init(Object *obj);
> +
>  uint64_t arm_cpu_mp_affinity(int idx, uint8_t clustersz);
> =20
>  #define ENV_GET_CPU(e) CPU(arm_env_get_cpu(e))
> diff --git a/target/arm/cpu.c b/target/arm/cpu.c
> index 60411f6bfe..8a4aae7438 100644
> --- a/target/arm/cpu.c
> +++ b/target/arm/cpu.c
> @@ -734,7 +734,7 @@ static Property arm_cpu_pmsav7_dregion_property =3D
>  static Property arm_cpu_initsvtor_property =3D
>              DEFINE_PROP_UINT32("init-svtor", ARMCPU, init_svtor, 0);
> =20
> -static void arm_cpu_post_init(Object *obj)
> +void arm_cpu_post_init(Object *obj)
>  {
>      ARMCPU *cpu =3D ARM_CPU(obj);
> =20
> @@ -2094,6 +2094,7 @@ static void arm_host_initfn(Object *obj)
>      ARMCPU *cpu =3D ARM_CPU(obj);
> =20
>      kvm_arm_set_cpu_features_from_host(cpu);
> +    arm_cpu_post_init(ARM_CPU(obj));
>  }
> =20
>  static const TypeInfo host_arm_cpu_type_info =3D {
> @@ -2108,14 +2109,23 @@ static const TypeInfo host_arm_cpu_type_info =3D {
> =20
>  #endif
> =20
> +static void arm_cpu_instance_init(Object *obj)
> +{
> +    const ARMCPUInfo *info =3D object_class_get_class_data(object_get_cl=
ass(obj));
> +
> +    info->initfn(obj);
> +    arm_cpu_post_init(obj);
> +}
now imagine leaf cpu class call chain:
before patch:
   arm-cpu::initfn()
   cortex-a8::initfn()
      set feature AAA
   device_post_init()
     -> arm_cpu_post_init()
          if (AAA)
             do something  =20

after patch:
   arm-cpu::initfn()
      -> arm_cpu_post_init()
            if (AAA)
               do something  <--- won't happen anymore
   cortex-a8::initfn()

arm_cpu_post_init() helper has to go to leaf classes only

> +
>  static void cpu_register(const ARMCPUInfo *info)
>  {
>      TypeInfo type_info =3D {
>          .parent =3D TYPE_ARM_CPU,
>          .instance_size =3D sizeof(ARMCPU),
> -        .instance_init =3D info->initfn,
> +        .instance_init =3D arm_cpu_instance_init,
>          .class_size =3D sizeof(ARMCPUClass),
>          .class_init =3D info->class_init,
> +        .class_data =3D (void *)info,
>      };
> =20
>      type_info.name =3D g_strdup_printf("%s-" TYPE_ARM_CPU, info->name);
> @@ -2128,7 +2138,6 @@ static const TypeInfo arm_cpu_type_info =3D {
>      .parent =3D TYPE_CPU,
>      .instance_size =3D sizeof(ARMCPU),
>      .instance_init =3D arm_cpu_initfn,
> -    .instance_post_init =3D arm_cpu_post_init,
>      .instance_finalize =3D arm_cpu_finalizefn,
>      .abstract =3D true,
>      .class_size =3D sizeof(ARMCPUClass),
> diff --git a/target/arm/cpu64.c b/target/arm/cpu64.c
> index 873f059bf2..dbfc3ee490 100644
> --- a/target/arm/cpu64.c
> +++ b/target/arm/cpu64.c
> @@ -447,14 +447,23 @@ static void aarch64_cpu_class_init(ObjectClass *oc,=
 void *data)
>      cc->gdb_arch_name =3D aarch64_gdb_arch_name;
>  }
> =20
> +static void aarch64_cpu_instance_init(Object *obj)
> +{
> +    const ARMCPUInfo *info =3D object_class_get_class_data(object_get_cl=
ass(obj));
> +
> +    info->initfn(obj);
> +    arm_cpu_post_init(obj);
> +}
> +
>  static void aarch64_cpu_register(const ARMCPUInfo *info)
>  {
>      TypeInfo type_info =3D {
>          .parent =3D TYPE_AARCH64_CPU,
>          .instance_size =3D sizeof(ARMCPU),
> -        .instance_init =3D info->initfn,
> +        .instance_init =3D aarch64_cpu_instance_init,
>          .class_size =3D sizeof(ARMCPUClass),
>          .class_init =3D info->class_init,
> +        .class_data =3D (void *)info,
>      };
> =20
>      type_info.name =3D g_strdup_printf("%s-" TYPE_ARM_CPU, info->name);


