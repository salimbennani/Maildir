Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:41:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 31C1758014B
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 08:48:33 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 04 Dec 2018 08:48:32 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ANL4+iRe1w6Cw9+Mv4sfaM+PSlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW9ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMDeUBM+lXoJXyqVUTtRuzBwuiCezyxjJGmnP5w7Y63v89EQzExgEsA84CvG?=
 =?us-ascii?q?jKoNjzKawcUfq1zK7NzTjbbP1W1jD96JLVeR4mu/6MWLdwftTMxkkoCQPOk1Kd?=
 =?us-ascii?q?qY3gPzyP0+QNtnaU4PdnVe+0kW4otRx+oji1yccwkIXGmoUVylXd+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4E5ZcrTyWO5Z1T884XW1ltiY3xqcbtZO5ZCQG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDp2nn5pZrGyihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTX6siGUf?=
 =?us-ascii?q?t94lyh1SyA1wDV9+FIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7j7Waelg59uWr?=
 =?us-ascii?q?8ejrfLvrq5+GO4NpiAzyKqEulda+AeQ8PAgORW+b+eGk2b3640L5RahKguQrna?=
 =?us-ascii?q?bHrpDVO8AbqreiDA9Sz4Yj7QqwACm90NgfmXkHLVFFdwydg4nmJlHDOPT4Dfa5?=
 =?us-ascii?q?g1SxnzZn3fHGPrv9AprTKnjPiqvufbF460NHzgozytZf551SCrEcOv7zXVXxtN?=
 =?us-ascii?q?PAAh8jLwO02/rnCMl61o4GXWKPA6yZP73IvV6H++IiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9HqcuHkOCfHC5gssdCXxY+U06Tff2kxuEVjhcYWv0WL?=
 =?us-ascii?q?gzoTQyCYajBIGEQZixgbuHx2CiE5hLI2xLFF2IQkrubJiODvIFaSaOJZ14nzkZ?=
 =?us-ascii?q?ELSsVYIlkAujrRL30KZPKO3S9SsF85X5249u+ufRmBouoCFyFNmXyGqXTmt5zV?=
 =?us-ascii?q?8PEhYw0LpyvgRfzVGOyuAsj+ZaEtpe/NtTXws6PIKaxOt/XYPcQAXEK/aGT0zu?=
 =?us-ascii?q?Z9yjBDw9Scx5l94LakN4FtmlpgrO0yqjH/kekLndV898yb7Vw3Wkf5U18H3Bzq?=
 =?us-ascii?q?R0ygB+GsY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAAAbrwZchxHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwgk8TjBJfjT2JH4kxhHmBcxQYFIdMIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAgEBAiQTDAopAwIBAQIGAQEKD?=
 =?us-ascii?q?goJHQgDAQtIBhMFgxyBdQUIAQSmBzOFQIRwgi6JcBeBQD+BEYMSghCITAKJMYF?=
 =?us-ascii?q?vhFiQUQmRNgsYgVuIADaHFZh3gUaCDU0jFYMngiQDFxKODEAxgQcciE+BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AIAAAbrwZchxHrdtBkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwgk8TjBJfjT2JH4kxhHmBcxQYFIdMIjQJDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOL4I2BQIDGgEGglsBAQEBAgEBAiQTDAopAwIBAQIGAQEKDgoJHQgDAQtIBhM?=
 =?us-ascii?q?FgxyBdQUIAQSmBzOFQIRwgi6JcBeBQD+BEYMSghCITAKJMYFvhFiQUQmRNgsYg?=
 =?us-ascii?q?VuIADaHFZh3gUaCDU0jFYMngiQDFxKODEAxgQcciE+BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="56040906"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 08:48:25 -0800
Received: from localhost ([::1]:57875 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUDs1-0006D6-3e
	for like.xu@linux.intel.com; Tue, 04 Dec 2018 11:48:25 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39327)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gUDnL-0001Zo-Dh
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 11:43:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gUDnJ-0001ZI-Tk
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 11:43:35 -0500
Received: from mx1.redhat.com ([209.132.183.28]:40226)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>)
	id 1gUDn2-0000qw-Hs; Tue, 04 Dec 2018 11:43:18 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 91F0B96E9;
	Tue,  4 Dec 2018 16:43:12 +0000 (UTC)
Received: from localhost (unknown [10.40.205.13])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 415557F1BF;
	Tue,  4 Dec 2018 16:43:07 +0000 (UTC)
Date: Tue, 4 Dec 2018 17:43:05 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: Andrew Jones <drjones@redhat.com>
Message-ID: <20181204174305.34a8644d@redhat.com>
In-Reply-To: <20181204151052.otrsahh4dqehiwif@kamzik.brq.redhat.com>
References: <20181130130032.11835-1-sameo@linux.intel.com>
	<20181130130032.11835-9-sameo@linux.intel.com>
	<20181204151052.otrsahh4dqehiwif@kamzik.brq.redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.28]);
	Tue, 04 Dec 2018 16:43:12 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v3 8/8] hw: acpi: Remove AcpiRsdpDescriptor
 and fix tests
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>,
	Peter Maydell <peter.maydell@linaro.org>, Thomas Huth <thuth@redhat.com>,
	Samuel Ortiz <sameo@linux.intel.com>, Ben Warren <ben@skyportsystems.com>,
	"Michael S. Tsirkin" <mst@redhat.com>, qemu-devel@nongnu.org,
	Shannon Zhao <shannon.zhaosl@gmail.com>, qemu-arm@nongnu.org,
	Paolo Bonzini <pbonzini@redhat.com>, Richard Henderson <rth@twiddle.net>,
	Eduardo Habkost <ehabkost@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, 4 Dec 2018 16:10:52 +0100
Andrew Jones <drjones@redhat.com> wrote:

> On Fri, Nov 30, 2018 at 02:00:32PM +0100, Samuel Ortiz wrote:
> > The only remaining AcpiRsdpDescriptor users are the ACPI utils for the
> > BIOS table tests.
> > We remove that dependency and can thus remove the structure itself.
> > 
> > Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
> > ---
> >  include/hw/acpi/acpi-defs.h | 13 -----------
> >  tests/acpi-utils.h          |  4 +++-
> >  tests/acpi-utils.c          | 46 ++++++++++++++++++++++++++++++-------
> >  tests/bios-tables-test.c    | 21 +++++++++++++----
> >  tests/vmgenid-test.c        |  8 ++++---
> >  5 files changed, 62 insertions(+), 30 deletions(-)
> > 
> > diff --git a/include/hw/acpi/acpi-defs.h b/include/hw/acpi/acpi-defs.h
> > index 8425ecb8c6..5021cb9e79 100644
> > --- a/include/hw/acpi/acpi-defs.h
> > +++ b/include/hw/acpi/acpi-defs.h
> > @@ -40,19 +40,6 @@ enum {
> >      ACPI_FADT_F_LOW_POWER_S0_IDLE_CAPABLE,
> >  };
> >  
> > -struct AcpiRsdpDescriptor {        /* Root System Descriptor Pointer */
> > -    uint64_t signature;              /* ACPI signature, contains "RSD PTR " */
> > -    uint8_t  checksum;               /* To make sum of struct == 0 */
> > -    uint8_t  oem_id [6];             /* OEM identification */
> > -    uint8_t  revision;               /* Must be 0 for 1.0, 2 for 2.0 */
> > -    uint32_t rsdt_physical_address;  /* 32-bit physical address of RSDT */
> > -    uint32_t length;                 /* XSDT Length in bytes including hdr */
> > -    uint64_t xsdt_physical_address;  /* 64-bit physical address of XSDT */
> > -    uint8_t  extended_checksum;      /* Checksum of entire table */
> > -    uint8_t  reserved [3];           /* Reserved field must be 0 */
> > -} QEMU_PACKED;
> > -typedef struct AcpiRsdpDescriptor AcpiRsdpDescriptor;
> > -
> >  typedef struct AcpiRsdpData {
> >      uint8_t oem_id[6]; /* OEM identification */
> >      uint8_t revision;  /* Must be 0 for 1.0, 2 for 2.0 */
> > diff --git a/tests/acpi-utils.h b/tests/acpi-utils.h
> > index ac52abd0dd..4f4899deb5 100644
> > --- a/tests/acpi-utils.h
> > +++ b/tests/acpi-utils.h
> > @@ -82,6 +82,8 @@ typedef struct {
> >  
> >  uint8_t acpi_calc_checksum(const uint8_t *data, int len);
> >  uint32_t acpi_find_rsdp_address(void);
> > -void acpi_parse_rsdp_table(uint32_t addr, AcpiRsdpDescriptor *rsdp_table);
> > +uint32_t acpi_get_rsdt_address(uint8_t *rsdp_table);
> > +uint64_t acpi_get_xsdt_address(uint8_t *rsdp_table);
> > +void acpi_parse_rsdp_table(uint32_t addr, uint8_t *rsdp_table);
> >  
> >  #endif  /* TEST_ACPI_UTILS_H */
> > diff --git a/tests/acpi-utils.c b/tests/acpi-utils.c
> > index 41dc1ea9b4..d07f7487e2 100644
> > --- a/tests/acpi-utils.c
> > +++ b/tests/acpi-utils.c
> > @@ -52,14 +52,44 @@ uint32_t acpi_find_rsdp_address(void)
> >      return off;
> >  }
> >  
> > -void acpi_parse_rsdp_table(uint32_t addr, AcpiRsdpDescriptor *rsdp_table)
> > +uint32_t acpi_get_rsdt_address(uint8_t *rsdp_table)
> >  {
> > -    ACPI_READ_FIELD(rsdp_table->signature, addr);
> > -    ACPI_ASSERT_CMP64(rsdp_table->signature, "RSD PTR ");
> > +    uint32_t rsdt_physical_address;
> >  
> > -    ACPI_READ_FIELD(rsdp_table->checksum, addr);
> > -    ACPI_READ_ARRAY(rsdp_table->oem_id, addr);
> > -    ACPI_READ_FIELD(rsdp_table->revision, addr);
> > -    ACPI_READ_FIELD(rsdp_table->rsdt_physical_address, addr);
> > -    ACPI_READ_FIELD(rsdp_table->length, addr);
> > +    memcpy(&rsdt_physical_address, &rsdp_table[16 /* RsdtAddress offset */], 4);
> > +    return le32_to_cpu(rsdt_physical_address);
> > +}
> > +
> > +uint64_t acpi_get_xsdt_address(uint8_t *rsdp_table)
> > +{
> > +    uint64_t xsdt_physical_address;
> > +    uint8_t revision = rsdp_table[15 /* Revision offset */];
> > +
> > +    /* We must have revision 2 if we're looking for an XSDT pointer */
> > +    g_assert(revision == 2);
> > +
> > +    memcpy(&xsdt_physical_address, &rsdp_table[24 /* XsdtAddress offset */], 8);
> > +    return le64_to_cpu(xsdt_physical_address);
> > +}
> > +
> > +void acpi_parse_rsdp_table(uint32_t addr, uint8_t *rsdp_table)
> > +{
> > +    uint8_t revision;
> > +
> > +    /* Read mandatory revision 0 table data (20 bytes) first */
> > +    memread(addr, rsdp_table, 20);
> > +    revision = rsdp_table[15 /* Revision offset */];
> > +
> > +    switch (revision) {
> > +    case 0: /* ACPI 1.0 RSDP */
> > +        break;
> > +    case 2: /* ACPI 2.0+ RSDP */
> > +        /* Read the rest of the RSDP table */
> > +        memread(addr + 20, rsdp_table + 20, 16);
> > +        break;
> > +    default:
> > +        g_assert_not_reached();
> > +    }
> > +
> > +    ACPI_ASSERT_CMP64(*((uint64_t *)(rsdp_table)), "RSD PTR ");
> >  }
> > diff --git a/tests/bios-tables-test.c b/tests/bios-tables-test.c
> > index d661d9be62..8749b77b36 100644
> > --- a/tests/bios-tables-test.c
> > +++ b/tests/bios-tables-test.c
> > @@ -27,7 +27,7 @@ typedef struct {
> >      const char *machine;
> >      const char *variant;
> >      uint32_t rsdp_addr;
> > -    AcpiRsdpDescriptor rsdp_table;
> > +    uint8_t rsdp_table[36 /* ACPI 2.0+ RSDP size */];
> >      AcpiRsdtDescriptorRev1 rsdt_table;
> >      uint32_t dsdt_addr;
> >      uint32_t facs_addr;
> > @@ -85,19 +85,30 @@ static void test_acpi_rsdp_address(test_data *data)
> >  
> >  static void test_acpi_rsdp_table(test_data *data)
> >  {
> > -    AcpiRsdpDescriptor *rsdp_table = &data->rsdp_table;
> > +    uint8_t *rsdp_table = data->rsdp_table, revision;
> >      uint32_t addr = data->rsdp_addr;
> >  
> >      acpi_parse_rsdp_table(addr, rsdp_table);
> > +    revision = rsdp_table[15 /* Revision offset */];
> >  
> > -    /* rsdp checksum is not for the whole table, but for the first 20 bytes */
> > -    g_assert(!acpi_calc_checksum((uint8_t *)rsdp_table, 20));
> > +    switch (revision) {
> > +    case 0: /* ACPI 1.0 RSDP */
> > +        /* With rev 1, checksum is only for the first 20 bytes */
> > +        g_assert(!acpi_calc_checksum(rsdp_table,  20));
> > +        break;
> > +    case 2: /* ACPI 2.0+ RSDP */
> > +        /* With revision 2, we have 2 checksums */
> > +        g_assert(!acpi_calc_checksum(rsdp_table, 20));
> > +        g_assert(!acpi_calc_checksum(rsdp_table, 36));  
> 
> Missing break. I guess this wasn't yet tested with ACPI 2.0+?
> Are we going to extend the tests to do that?
I'm working on adding arm/virt board to these tests,
so that will use this 2.0 path

> 
> > +    default:
> > +        g_assert_not_reached();
> > +    }
> >  }
> >  
> >  static void test_acpi_rsdt_table(test_data *data)
> >  {
> >      AcpiRsdtDescriptorRev1 *rsdt_table = &data->rsdt_table;
> > -    uint32_t addr = le32_to_cpu(data->rsdp_table.rsdt_physical_address);
> > +    uint32_t addr = acpi_get_rsdt_address(data->rsdp_table);
> >      uint32_t *tables;
> >      int tables_nr;
> >      uint8_t checksum;
> > diff --git a/tests/vmgenid-test.c b/tests/vmgenid-test.c
> > index 0a6fb55f2e..97219ae86c 100644
> > --- a/tests/vmgenid-test.c
> > +++ b/tests/vmgenid-test.c
> > @@ -35,7 +35,7 @@ static uint32_t acpi_find_vgia(void)
> >  {
> >      uint32_t rsdp_offset;
> >      uint32_t guid_offset = 0;
> > -    AcpiRsdpDescriptor rsdp_table;
> > +    uint8_t rsdp_table[36 /* ACPI 2.0+ RSDP size */];
> >      uint32_t rsdt, rsdt_table_length;
> >      AcpiRsdtDescriptorRev1 rsdt_table;
> >      size_t tables_nr;
> > @@ -52,9 +52,11 @@ static uint32_t acpi_find_vgia(void)
> >  
> >      g_assert_cmphex(rsdp_offset, <, RSDP_ADDR_INVALID);
> >  
> > -    acpi_parse_rsdp_table(rsdp_offset, &rsdp_table);
> > +    acpi_parse_rsdp_table(rsdp_offset, rsdp_table);
> > +
> > +    rsdt = acpi_get_rsdt_address(rsdp_table);
> > +    g_assert(rsdt);
> >  
> > -    rsdt = le32_to_cpu(rsdp_table.rsdt_physical_address);
> >      /* read the header */
> >      ACPI_READ_TABLE_HEADER(&rsdt_table, rsdt);
> >      ACPI_ASSERT_CMP(rsdt_table.signature, "RSDT");
> > -- 
> > 2.19.2
> > 
> >  
> 
> Besides the missing break
> 
> Reviewed-by: Andrew Jones <drjones@redhat.com>
> 


