Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:45:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 868D65803C2
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 06:54:01 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 06:54:01 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AuFijTxBdNqqLvKtlIwAaUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX9r8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2/?=
 =?us-ascii?q?bYQPAeUOMvpXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+kjCwzKwBAsE84QvH?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQzjvDYPRW2S3g44bPaB8hpPSMUqxtfsrW10kkCgTIjlSV?=
 =?us-ascii?q?qYP/OjOV0/oCvHWc7+d7T+KglXMoqwFrrTiz3Msjlo7JhocMx13C6C53w541KM?=
 =?us-ascii?q?WmREJnYtOoCoZcuzyZOodsXM8vTWFltDwnxrAEoZK3YjQGxZA9yxLCZfGLbZKE?=
 =?us-ascii?q?7g/gWeufOzt0mnFodbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gJ1xzS8ciHVu?=
 =?us-ascii?q?B98l2u2TaJygDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7m1/6gLKLekgn4OSk?=
 =?us-ascii?q?9erqb7X8qpOBNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OSlyrLj+FD5TKxXgfIojK?=
 =?us-ascii?q?nWrpTaKd0Aqa6+Hg9V1Jos5AikDzuh1NQYnHoHI0xfdBOIkojkI1XOIPH+Dfei?=
 =?us-ascii?q?jFWgijZrx/baPrL/BpXBNGTMkLDkfbtm7U5czwwzzd9Z55JJEL0BJ+jzWkDpuN?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl0oMeWGGPDbGDPKLdrF+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaCPwI/J9Pk/MYWbwmsxTViAOvxEiV6rsj1uNVyMVYGy9GK?=
 =?us-ascii?q?c15zU+AYThCp/fR4erm/uY0SKmW5FbeG1CWW2KCmriIoCNWvMQb3CLL8p81zAJ?=
 =?us-ascii?q?S7WlDpUszAyjrxPSzb1hIezJvCoCusX4ydJ36ubPwAw07iF+FM+H0muAHF1zy1?=
 =?us-ascii?q?8IQDo/x+hfvFB9ggOf0bVkg9RCGNBT7u8PWQA/Y83y1et/XvH9XRiJW96MTVuq?=
 =?us-ascii?q?RcvuVTA0R9c0ztMJS1xwF9WrklbI2C/8UOxdrKCCGJFhqvGU5HP2Pcsoji+ejK?=
 =?us-ascii?q?Q=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAA5Wv1bhxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCTxOMEV+LKYINiR2OI4FzFBgUiHoiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4vgjYFAgMaAQaCXAECAgEBAiQTDAopAwIBAQIGAQEKDhMdCAMBC?=
 =?us-ascii?q?0gGEwWDHIF1BQgBBKV7M4VAhGmMDReBQD+BEYMSgUtFgiuGIQKJJ4Y8kCkJkSU?=
 =?us-ascii?q?LGIFZh3k2hwMsmAuBRoINTSMVgyeCJxcSjgxAMYEHHIo1R4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AYAAA5Wv1bhxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CTxOMEV+LKYINiR2OI4FzFBgUiHoiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4vg?=
 =?us-ascii?q?jYFAgMaAQaCXAECAgEBAiQTDAopAwIBAQIGAQEKDhMdCAMBC0gGEwWDHIF1BQg?=
 =?us-ascii?q?BBKV7M4VAhGmMDReBQD+BEYMSgUtFgiuGIQKJJ4Y8kCkJkSULGIFZh3k2hwMsm?=
 =?us-ascii?q?AuBRoINTSMVgyeCJxcSjgxAMYEHHIo1R4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="139750324"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 06:54:00 -0800
Received: from localhost ([::1]:42856 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRekR-0002Z2-Sh
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 09:53:59 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36158)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gReVk-0005bJ-UP
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 09:38:50 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gReVg-000646-St
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 09:38:48 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38720)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>) id 1gReVg-00061B-JP
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 09:38:44 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id B165A30024E7;
	Tue, 27 Nov 2018 14:38:43 +0000 (UTC)
Received: from localhost (unknown [10.43.2.182])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 7293F26575;
	Tue, 27 Nov 2018 14:38:10 +0000 (UTC)
Date: Tue, 27 Nov 2018 15:38:09 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: Thomas Huth <thuth@redhat.com>
Message-ID: <20181127153809.3fae7754@redhat.com>
In-Reply-To: <1542049690-12826-7-git-send-email-thuth@redhat.com>
References: <1542049690-12826-1-git-send-email-thuth@redhat.com>
	<1542049690-12826-7-git-send-email-thuth@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.43]);
	Tue, 27 Nov 2018 14:38:43 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 6/7] tests/vmgenid: Make test
 independent of global_qtest
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>, Ben Warren <ben@skyportsystems.com>,
	qemu-devel@nongnu.org, Paolo Bonzini <pbonzini@redhat.com>,
	John Snow <jsnow@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, 12 Nov 2018 20:08:09 +0100
Thomas Huth <thuth@redhat.com> wrote:

> The biggest part has already been done in the previous patch, we now
> only have to replace some few qmp() and readb() calls with the
> corresponding qtest_*() functions to get there.
> 
> Signed-off-by: Thomas Huth <thuth@redhat.com>

Acked-by: Igor Mammedov <imammedo@redhat.com>

> ---
>  tests/vmgenid-test.c | 31 +++++++++++++++++--------------
>  1 file changed, 17 insertions(+), 14 deletions(-)
> 
> diff --git a/tests/vmgenid-test.c b/tests/vmgenid-test.c
> index c9c4f8c..84449ce 100644
> --- a/tests/vmgenid-test.c
> +++ b/tests/vmgenid-test.c
> @@ -95,17 +95,17 @@ static uint32_t acpi_find_vgia(QTestState *qts)
>      return guid_offset;
>  }
>  
> -static void read_guid_from_memory(QemuUUID *guid)
> +static void read_guid_from_memory(QTestState *qts, QemuUUID *guid)
>  {
>      uint32_t vmgenid_addr;
>      int i;
>  
> -    vmgenid_addr = acpi_find_vgia(global_qtest);
> +    vmgenid_addr = acpi_find_vgia(qts);
>      g_assert(vmgenid_addr);
>  
>      /* Read the GUID directly from guest memory */
>      for (i = 0; i < 16; i++) {
> -        guid->data[i] = readb(vmgenid_addr + i);
> +        guid->data[i] = qtest_readb(qts, vmgenid_addr + i);
>      }
>      /* The GUID is in little-endian format in the guest, while QEMU
>       * uses big-endian.  Swap after reading.
> @@ -113,12 +113,12 @@ static void read_guid_from_memory(QemuUUID *guid)
>      qemu_uuid_bswap(guid);
>  }
>  
> -static void read_guid_from_monitor(QemuUUID *guid)
> +static void read_guid_from_monitor(QTestState *qts, QemuUUID *guid)
>  {
>      QDict *rsp, *rsp_ret;
>      const char *guid_str;
>  
> -    rsp = qmp("{ 'execute': 'query-vm-generation-id' }");
> +    rsp = qtest_qmp(qts, "{ 'execute': 'query-vm-generation-id' }");
>      if (qdict_haskey(rsp, "return")) {
>          rsp_ret = qdict_get_qdict(rsp, "return");
>          g_assert(qdict_haskey(rsp_ret, "guid"));
> @@ -139,45 +139,48 @@ static char disk[] = "tests/vmgenid-test-disk-XXXXXX";
>  static void vmgenid_set_guid_test(void)
>  {
>      QemuUUID expected, measured;
> +    QTestState *qts;
>  
>      g_assert(qemu_uuid_parse(VGID_GUID, &expected) == 0);
>  
> -    global_qtest = qtest_initf(GUID_CMD(VGID_GUID));
> +    qts = qtest_initf(GUID_CMD(VGID_GUID));
>  
>      /* Read the GUID from accessing guest memory */
> -    read_guid_from_memory(&measured);
> +    read_guid_from_memory(qts, &measured);
>      g_assert(memcmp(measured.data, expected.data, sizeof(measured.data)) == 0);
>  
> -    qtest_quit(global_qtest);
> +    qtest_quit(qts);
>  }
>  
>  static void vmgenid_set_guid_auto_test(void)
>  {
>      QemuUUID measured;
> +    QTestState *qts;
>  
> -    global_qtest = qtest_initf(GUID_CMD("auto"));
> +    qts = qtest_initf(GUID_CMD("auto"));
>  
> -    read_guid_from_memory(&measured);
> +    read_guid_from_memory(qts, &measured);
>  
>      /* Just check that the GUID is non-null */
>      g_assert(!qemu_uuid_is_null(&measured));
>  
> -    qtest_quit(global_qtest);
> +    qtest_quit(qts);
>  }
>  
>  static void vmgenid_query_monitor_test(void)
>  {
>      QemuUUID expected, measured;
> +    QTestState *qts;
>  
>      g_assert(qemu_uuid_parse(VGID_GUID, &expected) == 0);
>  
> -    global_qtest = qtest_initf(GUID_CMD(VGID_GUID));
> +    qts = qtest_initf(GUID_CMD(VGID_GUID));
>  
>      /* Read the GUID via the monitor */
> -    read_guid_from_monitor(&measured);
> +    read_guid_from_monitor(qts, &measured);
>      g_assert(memcmp(measured.data, expected.data, sizeof(measured.data)) == 0);
>  
> -    qtest_quit(global_qtest);
> +    qtest_quit(qts);
>  }
>  
>  int main(int argc, char **argv)


