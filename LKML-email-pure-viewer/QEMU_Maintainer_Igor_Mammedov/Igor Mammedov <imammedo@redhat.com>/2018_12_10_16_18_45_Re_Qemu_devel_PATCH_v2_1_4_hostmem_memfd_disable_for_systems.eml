Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:39:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8F4E6580380
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 08:19:21 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 10 Dec 2018 08:19:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AX42pGRcUHLinimbrWZHQ27NJlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW9Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMDeUBM+lXoJXyqVUTtRuzBwuiCezyxjJGmnP5w7Y63v89EQzExgEsA84CvG?=
 =?us-ascii?q?jKoNjzKawcUfq1zK7NzTjbbP1W1jD96JLVeR4mu/6MWLdwftTMxkkoCQPOk1Kd?=
 =?us-ascii?q?qY3gPzyP0+QNtnaU4PdnVe+0kW4otRx+oji1yccwkIXGmoUVylXd+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4E5ZcrTyWO5Z1T884XW1ltiY3xqcbtZO5ZCQG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDp2nn5pZrGyihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTX6siGUf?=
 =?us-ascii?q?t94lyh1SyA1wDV9+FIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7j7Waelg59uWr?=
 =?us-ascii?q?8ejrfLvrq5+GO4NpiAzyKqEulda+AeQ8PAgORW+b+eGk2b3640L5RahKguQrna?=
 =?us-ascii?q?bHrpDVO8AbqreiDA9Sz4Yj7QqwACm90NgfmXkHLVFFdwydg4nmJlHDOPT4Dfa5?=
 =?us-ascii?q?g1SxnzZn3fHGPrv9AprTKnjPiqvufbF460NHzgozytZf551SCrEcOv7zXVXxtN?=
 =?us-ascii?q?PAAh8jLwO02/rnCMl61o4GXWKPA6yZP73IvV6H++IiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9HqcuHkOCfHC5gssdCXxY+U06Tff2kxuEVjhcYWv0WL?=
 =?us-ascii?q?gzoTQyCYajBIGEQZixgbuHx2CiE5hLI2xLFF2IQkrubJiODvIFaSaOJZ14nzkZ?=
 =?us-ascii?q?ELSsVYIlkAujrRL30KZPKO3S9SsF85X5249u+ufRmBouoCFyFNmXyGqXTmt5zV?=
 =?us-ascii?q?8PEh4yzak3hEVty1KOzbMw1/0eENVD5vZEThwSLpfZ1PF8BJb5XQeXLfmTT1Pz?=
 =?us-ascii?q?Y9qhG3kUR9c0ztMJfQ4pGtCrixXO0y2CGbIZl7WXQpcz9/SPjDDKO89hxiOeh+?=
 =?us-ascii?q?EahF48T54KbDX+iw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BbAACjkA5cmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCCYoxyizCCDYkgkCQUGBSHbSI3Bg0BAwEBAQEBAQIBEwEBAQE?=
 =?us-ascii?q?BCAsLBhsOL4I2BQIDGgEGglwBAgIBAQIkEwwKKQMCAQECBgEBCg4THQgDAQtIB?=
 =?us-ascii?q?hMFgxyBdQUIAQSmXzOKIIwhF4FAP4ERgXCBIopcAodngUgKhkqBCI9qCZFEI4F?=
 =?us-ascii?q?ciAo2hyGZMIFcgXhNIxWDJ4InFxKODEAxgQccigWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BbAACjkA5cmBHrdtBjHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?CYoxyizCCDYkgkCQUGBSHbSI3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOL4I2B?=
 =?us-ascii?q?QIDGgEGglwBAgIBAQIkEwwKKQMCAQECBgEBCg4THQgDAQtIBhMFgxyBdQUIAQS?=
 =?us-ascii?q?mXzOKIIwhF4FAP4ERgXCBIopcAodngUgKhkqBCI9qCZFEI4FciAo2hyGZMIFcg?=
 =?us-ascii?q?XhNIxWDJ4InFxKODEAxgQccigWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="56840490"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 08:19:20 -0800
Received: from localhost ([::1]:33557 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWOHA-0003Fe-60
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 11:19:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:56044)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gWOGu-0003Ek-4M
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:19:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <imammedo@redhat.com>) id 1gWOGr-0003ny-0N
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:19:04 -0500
Received: from mx1.redhat.com ([209.132.183.28]:50096)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <imammedo@redhat.com>) id 1gWOGq-0003nX-O6
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:19:00 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id DD67F30B8FB2;
	Mon, 10 Dec 2018 16:18:58 +0000 (UTC)
Received: from Igors-MacBook-Pro.local (ovpn-112-73.ams2.redhat.com
	[10.36.112.73])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 8D6BA5C219;
	Mon, 10 Dec 2018 16:18:48 +0000 (UTC)
Date: Mon, 10 Dec 2018 17:18:45 +0100
From: Igor Mammedov <imammedo@redhat.com>
To: Ilya Maximets <i.maximets@samsung.com>
Message-ID: <20181210171845.4f132e25@Igors-MacBook-Pro.local>
In-Reply-To: <20181127135030.1671-2-i.maximets@samsung.com>
References: <20181127135030.1671-1-i.maximets@samsung.com>
	<CGME20181127135045eucas1p1e259cacbab5e715f7845b9beee22f882@eucas1p1.samsung.com>
	<20181127135030.1671-2-i.maximets@samsung.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.49]);
	Mon, 10 Dec 2018 16:18:59 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v2 1/4] hostmem-memfd: disable for systems
 wihtout sealing support
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>,
	Paolo Bonzini <pbonzini@redhat.com>, Gerd Hoffmann <kraxel@redhat.com>,
	Eduardo Habkost <ehabkost@redhat.com>, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, 27 Nov 2018 16:50:27 +0300
Ilya Maximets <i.maximets@samsung.com> wrote:

s/wihtout/without/ in subj

> If seals are not supported, memfd_create() will fail.
> Furthermore, there is no way to disable it in this case because
> '.seal' property is not registered.
> 
> This issue leads to vhost-user-test failures on RHEL 7.2:
> 
>   qemu-system-x86_64: -object memory-backend-memfd,id=mem,size=2M,: \
>                       failed to create memfd: Invalid argument
> 
> and actually breaks the feature on such systems.
> 
> Let's restrict memfd backend to systems with sealing support.
> 
> Signed-off-by: Ilya Maximets <i.maximets@samsung.com>
> ---
>  backends/hostmem-memfd.c | 18 ++++++++----------
>  tests/vhost-user-test.c  |  6 +++---
>  2 files changed, 11 insertions(+), 13 deletions(-)
> 
> diff --git a/backends/hostmem-memfd.c b/backends/hostmem-memfd.c
> index b6836b28e5..a3455da9c9 100644
> --- a/backends/hostmem-memfd.c
> +++ b/backends/hostmem-memfd.c
> @@ -156,15 +156,13 @@ memfd_backend_class_init(ObjectClass *oc, void *data)
>                                                "Huge pages size (ex: 2M, 1G)",
>                                                &error_abort);
>      }
> -    if (qemu_memfd_check(MFD_ALLOW_SEALING)) {
> -        object_class_property_add_bool(oc, "seal",
> -                                       memfd_backend_get_seal,
> -                                       memfd_backend_set_seal,
> -                                       &error_abort);
> -        object_class_property_set_description(oc, "seal",
> -                                              "Seal growing & shrinking",
> -                                              &error_abort);
> -    }
> +    object_class_property_add_bool(oc, "seal",
> +                                   memfd_backend_get_seal,
> +                                   memfd_backend_set_seal,
> +                                   &error_abort);
> +    object_class_property_set_description(oc, "seal",
> +                                          "Seal growing & shrinking",
> +                                          &error_abort);
>  }
>  
>  static const TypeInfo memfd_backend_info = {
> @@ -177,7 +175,7 @@ static const TypeInfo memfd_backend_info = {
>  
>  static void register_types(void)
>  {
> -    if (qemu_memfd_check(0)) {
> +    if (qemu_memfd_check(MFD_ALLOW_SEALING)) {
>          type_register_static(&memfd_backend_info);
that would either lead to not clear error that type doesn't exist.
it could be better to report sensible error from memfd_backend_memory_alloc() if
the feature is required but not supported by host 

>      }
>  }
> diff --git a/tests/vhost-user-test.c b/tests/vhost-user-test.c
> index 45d58d8ea2..e3e9a33580 100644
> --- a/tests/vhost-user-test.c
> +++ b/tests/vhost-user-test.c
> @@ -169,7 +169,7 @@ static char *get_qemu_cmd(TestServer *s,
>                            int mem, enum test_memfd memfd, const char *mem_path,
>                            const char *chr_opts, const char *extra)
>  {
> -    if (memfd == TEST_MEMFD_AUTO && qemu_memfd_check(0)) {
> +    if (memfd == TEST_MEMFD_AUTO && qemu_memfd_check(MFD_ALLOW_SEALING)) {
>          memfd = TEST_MEMFD_YES;
>      }
>  
> @@ -903,7 +903,7 @@ static void test_multiqueue(void)
>      s->queues = 2;
>      test_server_listen(s);
>  
> -    if (qemu_memfd_check(0)) {
> +    if (qemu_memfd_check(MFD_ALLOW_SEALING)) {
>          cmd = g_strdup_printf(
>              QEMU_CMD_MEMFD QEMU_CMD_CHR QEMU_CMD_NETDEV ",queues=%d "
>              "-device virtio-net-pci,netdev=net0,mq=on,vectors=%d",
> @@ -963,7 +963,7 @@ int main(int argc, char **argv)
>      /* run the main loop thread so the chardev may operate */
>      thread = g_thread_new(NULL, thread_function, loop);
>  
> -    if (qemu_memfd_check(0)) {
> +    if (qemu_memfd_check(MFD_ALLOW_SEALING)) {
>          qtest_add_data_func("/vhost-user/read-guest-mem/memfd",
>                              GINT_TO_POINTER(TEST_MEMFD_YES),
>                              test_read_guest_mem);


