Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:57:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1C8DA58049E;
	Sat, 22 Dec 2018 08:47:24 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 08:47:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXJQ0bxMxTvcuaOs7TMIl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KP/zp8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsVfWCJPDI28?=
 =?us-ascii?q?cYUBEuQBMulEoInmv1sDrwCzBRWwCO7h1jNEmmX70K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rJsNX6KrkSXv6zzKLV0TvDaOhW2Svj54fVbhAqvPaBXah3ccrK1UkgCR7KjkmL?=
 =?us-ascii?q?pIzqODOV0fkCs22a7+p7T+6vjHQnqw5orzWp28wiiZHJi5oLxlzY8Sh12ps5KN?=
 =?us-ascii?q?OmREJhfNKpE4dcuzubOoZ0Ws8vQmBltDwkxrAJo5K2fCkHxI4lyhPcbfGMbpKG?=
 =?us-ascii?q?7Qj5VOmLJDd1nHJld6y7hxa16UWg1OL8Wdeu0FpQrSpKjMPMtnYT2BzX8MSHTe?=
 =?us-ascii?q?F9/ki51TaO0QDc9P1ELFgqmabHL5Mt2KM8m5QNvUjZAyP7m1n6gLWXe0gm4uSo?=
 =?us-ascii?q?7v7oYrTipp+SLY90jQT+P7wqmsy+B+Q4LwcPU3GY+euizr3j+1P2QLFTgv0xnK?=
 =?us-ascii?q?jZto7VJd4Aq66nDA9azJwj5wy8Dzi4ytQYm2cILFZfdBKAlYjpNEnCIOrkAven?=
 =?us-ascii?q?n1SsjDBryujCPr3gAZXCMGLPkbj8fbtm705cyQwzzc1Q5p5OC7EBJu7zVVH1tN?=
 =?us-ascii?q?DCEhA5NAm0yf79CNphzoMeRX6PAqiBPaPSq1CI5/4vLPOLZIMPuDb9NuIq5/jh?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+RvTwiFKeST5Te2qyX6?=
 =?us-ascii?q?Uk6z4hE4KmDYDDRoO3jLybxii7HIZbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48kzRuurhP1y6J7LurI/S0VrZHj28Jz5+HJkREy9CZ7D8KS02yWS2F0n2?=
 =?us-ascii?q?UIRyI53axloEx9zEuD3rZ8g/BCCdNT4PZJWB8gNZHA1+x6F8zyWgXZc9iUUlmm?=
 =?us-ascii?q?XMupDSsxTt0rxd8OeFhyG9OlghDH3CqqBrsVmqePBJw19KLcwnfwK9x8y3bAyK?=
 =?us-ascii?q?kukV0mTtFTOm2hg6517xLTCJLRk0WFi6aqcrwR0zPX+2ed02WCpkFYXxR2UaXe?=
 =?us-ascii?q?Q38fYFDbrdD45kPEUr+vBq4rMgpHyc6eNKRKbsflgklBRPfmIN7eeX6+m3+sBR?=
 =?us-ascii?q?aUwbOBdJbqe2QY3CXaFEgEkwAS8WyaNQQkASehuWbeDD1oFVLgeE7s9eh+qHWm?=
 =?us-ascii?q?Tk471Q2Kbkth16ar9R4Rn/CTV/QT3rccsic7tzp0BEq9387RC9eYvQVheLtTYN?=
 =?us-ascii?q?wj71ZHz27WrBF9MYG6IKBkhV4edBp3sljq1xV2DIVAjMcroGkrzAp0NaKXzldB?=
 =?us-ascii?q?eymE0pD3P73dMnPy8wy3a67KxlHe186b+6cS6Pgit1rvpgCoFko4/HVh3NlYyH?=
 =?us-ascii?q?+c5pTMDAoPXpP9SEc39x5mp77EZikx/Z/b1XppMaOsqD/Nx8opBPc5yhanZ9pf?=
 =?us-ascii?q?KqKEGxPoHM0AGseuL/Ymm163YRIePeBe7bI7MNmid/SbxqGrJuFgnDS9gGRD4Y?=
 =?us-ascii?q?B91F+M9iVmRu7J2ZYF3++X3g+dWzjgi1eht9j9mZpYajEKAmq/1S/kCZZRZ61z?=
 =?us-ascii?q?Z4oKCX2iI9aqxtV4nJPtX39Y9Fi+B1IJwsOpeBySb0Dj0g1Uz0gYvXunmS6gxT?=
 =?us-ascii?q?xujz4ptraf3DDJw+n6dhoIIHRLRGphjVfrO4S0lMoVXEurbwgokhuq+0D6yrNf?=
 =?us-ascii?q?pKR+KWnTXEhJczL3L2FkTqu/qL6Cb9RT55MvtCVdSP68bkyCSr7hvxsa1DvuHm?=
 =?us-ascii?q?tEyzA8bT2quJT5nxphhWKZLXZzqmfZeM5qyRfe4tzcWeBe3j4cSCZkjjnXA0C2?=
 =?us-ascii?q?P8O18tWMi5fDrue+WnqiVpJJcCnn14OAtDah6m1sDh2yhPSzmtzhEQgn3i73zd?=
 =?us-ascii?q?hqVSPUrBniZonnzbi1MeVifkNwHl/z99J6Gp1ikos3nJwQ3HkahpaP8nYdn2b8?=
 =?us-ascii?q?L85b2b7gY3oXXjEE3cTV4Af+1U1nL3KJwZ/5V3qHzstgYdm6fn0Z2iYn489WD6?=
 =?us-ascii?q?eU6aROnTFprVqgsQLRff99ky8Byfsp7X4WmeAItxArziWAGbASBkhYMDfolxSJ?=
 =?us-ascii?q?6dC+sapWaHyucbi2yEpxg9ShAKuerQFbXXbzYo0iEjNo7sVjLFLM12X+5Zr+d9?=
 =?us-ascii?q?nXadITqweYkxPdj+VOLJIxl/wKhTdoOG7nvH0lzfI7ggJq3Z2goIeHLGBt9rqj?=
 =?us-ascii?q?AhFELj31e98T+jb1gKZchMmW2p6gHo57FjUXRpfoTu+oEDEPtfThLQmOCyYxqn?=
 =?us-ascii?q?OaGbrZAA+e511qr3PJE5C3KX6XIGMVwsllRBmYPEZfmhwbXC0mnp4lEQCn3Mzg?=
 =?us-ascii?q?cEBk5jAI+173sB1MxvhzNxn4VGffqxylajM1SJiZMRpX4RtO50bTMcyC8O1zGz?=
 =?us-ascii?q?tU8YGmrAyIMmabfRhHDXkVWkyYAFDuJrmu6sfB8+ibBeq+LuHCYbaUqexZWPeH?=
 =?us-ascii?q?24iv0pZ9/zuXMsWPP39iD+A020ZZXHB5HdjZlCsLSyANiy3NaMubrg+m+iJrts?=
 =?us-ascii?q?C/7OjrWAX36ISVFrtdKs9v9A62gKuZM+6QhT10KTJZ1pMK2H/Jx6IT3F8UiyFy?=
 =?us-ascii?q?aTatFa4MujLKTKLVgqVXFQIUaztvNMtU6KIxxhVNOc/eit/vyrF0lOI6C1dbWl?=
 =?us-ascii?q?zngcypYc0KI2egNFLIHkqLNbKGJSHVzMHze6+zVbpQjOBMvR2qpTmbC1PjPiiE?=
 =?us-ascii?q?lzTxVxGgK+dMjCSaPBxYoI68cxZtBnLlTNLpcRC7NN53jTsrwbw7nH/KNGgcMS?=
 =?us-ascii?q?RifENJtLGf8SRYgvAsU1BGu35kK/SU3iWU9e/VLr4IvvZxRCd5jeRX5DI90bQG?=
 =?us-ascii?q?wjtDQalOhCbMo9gmmVa9juSD1nIzSh1VtjtHmKqEukJuPKTCsJ5aViCXr1o28W?=
 =?us-ascii?q?yMBkFS9JNeAdr1tvUVk4CXmQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAAxaR5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBg2sng36IeI0qFJdPgXMVGBMBhzAiNgcNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+COikBgmcDAwECIARSBgkBAR8FAgUTDgICAwwtGxkFgx2CAgWlfXwMJ?=
 =?us-ascii?q?4VBhGWBC4s0F4F/jCyCVwKJTYF4hB6BAJBoCZFdJJFmLZl8gU0IgX8zGggoCIM?=
 =?us-ascii?q?nkHkiMoEFAQGNcAEB?=
X-IPAS-Result: =?us-ascii?q?A0AeAAAxaR5ch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBg2s?=
 =?us-ascii?q?ng36IeI0qFJdPgXMVGBMBhzAiNgcNAQMBAQEBAQECARMBAQEKCwkIKS+COikBg?=
 =?us-ascii?q?mcDAwECIARSBgkBAR8FAgUTDgICAwwtGxkFgx2CAgWlfXwMJ4VBhGWBC4s0F4F?=
 =?us-ascii?q?/jCyCVwKJTYF4hB6BAJBoCZFdJJFmLZl8gU0IgX8zGggoCIMnkHkiMoEFAQGNc?=
 =?us-ascii?q?AEB?=
X-IronPort-AV: E=Sophos;i="5.56,384,1539673200"; 
   d="scan'208";a="143201683"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 08:47:22 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387826AbeLVQrV (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 11:47:21 -0500
Received: from mail.kernel.org ([198.145.29.99]:36942 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725899AbeLVQrO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 11:47:14 -0500
Received: from gandalf.local.home (cpe-66-24-56-78.stny.res.rr.com [66.24.56.78])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id B4A6D21B90;
        Sat, 22 Dec 2018 16:28:57 +0000 (UTC)
Received: from rostedt by gandalf.local.home with local (Exim 4.91)
        (envelope-from <rostedt@goodmis.org>)
        id 1gak92-0001FH-PD; Sat, 22 Dec 2018 11:28:56 -0500
Message-Id: <20181222162856.666843139@goodmis.org>
User-Agent: quilt/0.65
Date: Sat, 22 Dec 2018 11:20:09 -0500
From: Steven Rostedt <rostedt@goodmis.org>
To: linux-kernel@vger.kernel.org
Cc: Ingo Molnar <mingo@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Joe Perches <joe@perches.com>,
        Namhyung Kim <namhyung@kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Yoshinori Sato <ysato@users.sourceforge.jp>,
        Rich Felker <dalias@libc.org>, linux-sh@vger.kernel.org,
        Tom Zanussi <zanussi@linux.intel.com>
Subject: [for-next][PATCH 2/5] tracing: Use str_has_prefix() helper for histogram code
References: <20181222162007.697862256@goodmis.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: "Steven Rostedt (VMware)" <rostedt@goodmis.org>

The tracing histogram code contains a lot of instances of the construct:

 strncmp(str, "const", sizeof("const") - 1)

This can be prone to bugs due to typos or bad cut and paste. Use the
str_has_prefix() helper macro instead that removes the need for having two
copies of the constant string.

Cc: Tom Zanussi <zanussi@linux.intel.com>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
---
 kernel/trace/trace_events_hist.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/kernel/trace/trace_events_hist.c b/kernel/trace/trace_events_hist.c
index c5448c103770..9d590138f870 100644
--- a/kernel/trace/trace_events_hist.c
+++ b/kernel/trace/trace_events_hist.c
@@ -1881,8 +1881,8 @@ static int parse_action(char *str, struct hist_trigger_attrs *attrs)
 	if (attrs->n_actions >= HIST_ACTIONS_MAX)
 		return ret;
 
-	if ((strncmp(str, "onmatch(", sizeof("onmatch(") - 1) == 0) ||
-	    (strncmp(str, "onmax(", sizeof("onmax(") - 1) == 0)) {
+	if ((str_has_prefix(str, "onmatch(")) ||
+	    (str_has_prefix(str, "onmax("))) {
 		attrs->action_str[attrs->n_actions] = kstrdup(str, GFP_KERNEL);
 		if (!attrs->action_str[attrs->n_actions]) {
 			ret = -ENOMEM;
@@ -1899,34 +1899,34 @@ static int parse_assignment(char *str, struct hist_trigger_attrs *attrs)
 {
 	int ret = 0;
 
-	if ((strncmp(str, "key=", sizeof("key=") - 1) == 0) ||
-	    (strncmp(str, "keys=", sizeof("keys=") - 1) == 0)) {
+	if ((str_has_prefix(str, "key=")) ||
+	    (str_has_prefix(str, "keys="))) {
 		attrs->keys_str = kstrdup(str, GFP_KERNEL);
 		if (!attrs->keys_str) {
 			ret = -ENOMEM;
 			goto out;
 		}
-	} else if ((strncmp(str, "val=", sizeof("val=") - 1) == 0) ||
-		 (strncmp(str, "vals=", sizeof("vals=") - 1) == 0) ||
-		 (strncmp(str, "values=", sizeof("values=") - 1) == 0)) {
+	} else if ((str_has_prefix(str, "val=")) ||
+		   (str_has_prefix(str, "vals=")) ||
+		   (str_has_prefix(str, "values="))) {
 		attrs->vals_str = kstrdup(str, GFP_KERNEL);
 		if (!attrs->vals_str) {
 			ret = -ENOMEM;
 			goto out;
 		}
-	} else if (strncmp(str, "sort=", sizeof("sort=") - 1) == 0) {
+	} else if (str_has_prefix(str, "sort=")) {
 		attrs->sort_key_str = kstrdup(str, GFP_KERNEL);
 		if (!attrs->sort_key_str) {
 			ret = -ENOMEM;
 			goto out;
 		}
-	} else if (strncmp(str, "name=", sizeof("name=") - 1) == 0) {
+	} else if (str_has_prefix(str, "name=")) {
 		attrs->name = kstrdup(str, GFP_KERNEL);
 		if (!attrs->name) {
 			ret = -ENOMEM;
 			goto out;
 		}
-	} else if (strncmp(str, "clock=", sizeof("clock=") - 1) == 0) {
+	} else if (str_has_prefix(str, "clock=")) {
 		strsep(&str, "=");
 		if (!str) {
 			ret = -EINVAL;
@@ -1939,7 +1939,7 @@ static int parse_assignment(char *str, struct hist_trigger_attrs *attrs)
 			ret = -ENOMEM;
 			goto out;
 		}
-	} else if (strncmp(str, "size=", sizeof("size=") - 1) == 0) {
+	} else if (str_has_prefix(str, "size=")) {
 		int map_bits = parse_map_size(str);
 
 		if (map_bits < 0) {
@@ -3558,7 +3558,7 @@ static struct action_data *onmax_parse(char *str)
 	if (!onmax_fn_name || !str)
 		goto free;
 
-	if (strncmp(onmax_fn_name, "save", sizeof("save") - 1) == 0) {
+	if (str_has_prefix(onmax_fn_name, "save")) {
 		char *params = strsep(&str, ")");
 
 		if (!params) {
@@ -4346,7 +4346,7 @@ static int parse_actions(struct hist_trigger_data *hist_data)
 	for (i = 0; i < hist_data->attrs->n_actions; i++) {
 		str = hist_data->attrs->action_str[i];
 
-		if (strncmp(str, "onmatch(", sizeof("onmatch(") - 1) == 0) {
+		if (str_has_prefix(str, "onmatch(")) {
 			char *action_str = str + sizeof("onmatch(") - 1;
 
 			data = onmatch_parse(tr, action_str);
@@ -4355,7 +4355,7 @@ static int parse_actions(struct hist_trigger_data *hist_data)
 				break;
 			}
 			data->fn = action_trace;
-		} else if (strncmp(str, "onmax(", sizeof("onmax(") - 1) == 0) {
+		} else if (str_has_prefix(str, "onmax(")) {
 			char *action_str = str + sizeof("onmax(") - 1;
 
 			data = onmax_parse(action_str);
-- 
2.19.2


