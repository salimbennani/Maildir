Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:48:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 32745580551;
	Thu, 29 Nov 2018 09:13:23 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 09:13:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKkfGoxbVTT02tK+GSBbICc7/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizYR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQOP+hYoY7yqFQSohW+HhGsCeH0xz9UhHL7x7E23v49HQ3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocTPy1w7fWzTrdafNdxCvz6I/TchA9v/6DQK5wetfWxEk1EAPFlUmQ?=
 =?us-ascii?q?ppL4MDOJzekNvG+b7+19WuKqim4nsBt9oj+1xscjk4TEgJ8exF7D9SV82ok1JN?=
 =?us-ascii?q?u4RVZnYdG+C5RQsz+VN5BsTsMkRGFlvjsxxL4euZOjYiQG1JAqywTCZ/GJbYSE?=
 =?us-ascii?q?+A/vWeWNLTtihX9oeqqzihez/ES61OHxWdO43VZLoyZfkNTBtXYA3AHJ5MedUP?=
 =?us-ascii?q?ty5EKh1C6P1w/N7uFEJlg5lbTUK5E/2L48jJkTvlrZHi/whkr2iLWadkI++uin?=
 =?us-ascii?q?8+jnY7PmqYGAN4JslA3yLqAjltaiDek2LAQCRXWX9Oeg2LH5/ED0Qq1Gjvgsna?=
 =?us-ascii?q?nYtJDaK94bpqm8AwJN1oYj6hC/Dyqp0dgBnnkIMkhFeBSZgIjtIl3OJ/75DfGh?=
 =?us-ascii?q?jFS2izpr2f/GMaP7ApnXLXjMjq3hfbBj5E5Y0gYzyspf551MBrEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhNwy0wuXnB8tn2oIRRGKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mVUFZ6mmwYMXaGykHvRhO0iZYWDjgtYdEWgQuQoyVuzqiECYXj5VaHa/RK?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEX3wbYWLR+8MaD6OIs9mijEE?=
 =?us-ascii?q?V7+hRJE72RGtsw/6zbxnLu3P9y0ctJLj0sV15uLJmREz8zx0E9qS02WXQ25omW?=
 =?us-ascii?q?MIQic83Lpjrkxl1leDza94juRCGtxI5/NJVQQ6OYTGz+NgCdD/QQbBftaPSFa7?=
 =?us-ascii?q?TdSqGzAxTtQtw9AQZ0ZxAcmtjhfG3yCyGb8ai6SLBIAo8qLbx3XxJNxyy3Dc2K?=
 =?us-ascii?q?kljlkpWM1PNWK9i6579gjTAZPJkkqDm6arc6QcwDDC9GOZwWWSu0FYVRZ6Ub/Z?=
 =?us-ascii?q?UnAHekvWsdP561vfQLC0F7QoLBFNyc6YJatMcd3mk1NGSPDnONTdZmKxn3y9BR?=
 =?us-ascii?q?KJxrOKcYrrdH8R3CTbCEgYjQ8T+WyKOhQ5Bieku2jeFiBhFUrzY0Pw9ulzsG60?=
 =?us-ascii?q?QVUqzw6UdUFh16C6+hgOhfOCTfMexbYEuCYnqzVpE1exxdPWC9ycpwV/eKVQe8?=
 =?us-ascii?q?8y4FBC1WjBrQxyIoSgL7x+hl4Zawl3o0Lu1xBwCoVckcgrrGkmzBZoJaKfylNB?=
 =?us-ascii?q?czKY3Zb/OrDMLmny/Rava7PZ213E0daW/LsP5+o8q1n5oA6pEU8i+W1909ZJy3?=
 =?us-ascii?q?uc+onKDA0KXJ3rVkY46Rd7qK/aYyUn/IzUyGBjPrOysj/B3NIpGvAoyhKhf9dZ?=
 =?us-ascii?q?LaOFGxX+E8wcB8iyNuMqn0KlYQ4DPOBX7KQ0Jd+pd+Oa2K63O+ZthDKnjXld7I?=
 =?us-ascii?q?9hyE6N9ip8RfTO35YK2PyY2gqHVzHhjFauqMz3mIZEZS0MEWq70yTrGIlRZqhq?=
 =?us-ascii?q?d4YRFWiuO9G3xsl5h5P1QX5Y9UKsCEkc2MC0fhqedVr90hNK1UQWuHCohTG3zz?=
 =?us-ascii?q?hpnD43tKqf2yrOzv/mdBoGPG5LWWZjgU3tIYiyk9AVQkyoYxI1mxui4Ebw37Jb?=
 =?us-ascii?q?q7hnL2nPXUdIeDD7LmFjUqeqtruOedVP6I4usShMVOS8YFaaSqPyohcA0iPjGX?=
 =?us-ascii?q?deyy4/dz2wppr5mBl6gnqHLHlvtHrZZd1wxRDH6dzeX/FRxDkGRCp/iTXNHViz?=
 =?us-ascii?q?Jdqp/daVl5fFrO++UXmsVplScSnt0IOBuzG35WxsAR2jgf+znsfrHhQ90S/+z9?=
 =?us-ascii?q?NqTznHrA7gYon30KS3KeJmcVNvBFPm6cp6G4d+n5A0hJER33gam5qU8WAGkWf1?=
 =?us-ascii?q?LdVUx6b+YGARSj4Mxt7f+BLl11F7LnKV24L5UW2Qwsh7aNm7eG8W2j894NpMCK?=
 =?us-ascii?q?eb97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792mqaVXZWWvfqKq2Etwg9+hF62CrR9GWHniZJgiByBw4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj3Y29vIiCMWls/bi2?=
 =?us-ascii?q?AhhFNj3ufMMT+yrgjaJfnsaQwoCuEY9tGjQNXJv0U/2oFCgeuujgNwaLCDc8sG?=
 =?us-ascii?q?uUGaLDHQ+D70drt2nAHIqsN3GTOXkV19FiRASGKUxbgQAUWig6n5EjGgCrwszh?=
 =?us-ascii?q?bFl25jQL6lHkrRtMz/piNwPjXWfHuAeodjA0RYCdLBVM6wFN+VzVPdaC7u5pHC?=
 =?us-ascii?q?FY456hrBGLKmOBfARFFmUJWk2CB1D+Mbii/9jA8+6EBuWgK/vCe6mBqetbV/2Q?=
 =?us-ascii?q?35KgzpNm/yqQNsWIJnRjD/o72ldaXXBkAcvZnS8DSzcQlyLLYM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUf3EAdiyBt?=
 =?us-ascii?q?dzmuELQMry3NTLjXmq9YEREbcT5zNNBT4qI43wlNP9Pbi9zv2r55iP41F0lKVV?=
 =?us-ascii?q?j7ls61YswKJnm3NEnbC0aTKLSGOTrLztntbqOhUrJQlvtbth2qtTafEk/uJTCD?=
 =?us-ascii?q?lzjvVxCyPuBAliCbPBpCuI6jdhZhE3TsTNXjahejKt94kSU2waEohnPNLWMcLT?=
 =?us-ascii?q?l8c0ZXorKM9y9XnvV/FHJH7nd+KemEmiCZ7/TXK5oMsPtrBDh0mPxe4Hgg17RV?=
 =?us-ascii?q?6yRETuRvmCTOtt5uv02mku6XxztnShVOrDNLhIONvUp6OKTZ9oNPWXDL/B8W6W?=
 =?us-ascii?q?WQChIKp8ZqC9H1uqBQzMTPm7z3KDtY793U+s4cVIDoL5euNnYweT70BDnRDREe?=
 =?us-ascii?q?Tj/jYWXCm0t1mfSb/XSNr4Qzrt7qlYZYGZFBU1lgLe8XFEljVOYFO4t6Ui9sxa?=
 =?us-ascii?q?Scl9IF6WaWox7WSMBbpdbATP3EUqanEyqQkbQRP0hA+rj/N4lGc9Sjg0E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAADDHQBch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAYNrJ4xwiymCDRSXMIFuGRgTAYd0IjYHDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvgjYkAYJiAQICAQECJBM/BgkBAQoOExMSAwxIBhMFgxyBeggFp?=
 =?us-ascii?q?0Izii2MFheBf4QjilwCiQcggXKEUTSFLIpZCZEnI4Faj0IsiU+OU4FNC4F7Mxo?=
 =?us-ascii?q?IKAiDJ4JQjikiMoEFAQGNOgEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAADDHQBch0O0hNFkGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAYNrJ4xwiymCDRSXMIFuGRgTAYd0IjYHDQEDAQEBAQEBAgETAQEBCA0JCCkvg?=
 =?us-ascii?q?jYkAYJiAQICAQECJBM/BgkBAQoOExMSAwxIBhMFgxyBeggFp0Izii2MFheBf4Q?=
 =?us-ascii?q?jilwCiQcggXKEUTSFLIpZCZEnI4Faj0IsiU+OU4FNC4F7MxoIKAiDJ4JQjikiM?=
 =?us-ascii?q?oEFAQGNOgEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="42858676"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 09:13:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730701AbeK3ETQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 23:19:16 -0500
Received: from mail.kernel.org ([198.145.29.99]:33480 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728551AbeK3ETP (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 23:19:15 -0500
Received: from gandalf.local.home (cpe-66-24-56-78.stny.res.rr.com [66.24.56.78])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2B7E7213A2;
        Thu, 29 Nov 2018 17:13:09 +0000 (UTC)
Date: Thu, 29 Nov 2018 12:13:07 -0500
From: Steven Rostedt <rostedt@goodmis.org>
To: Andy Lutomirski <luto@amacapital.net>
Cc: Linus Torvalds <torvalds@linux-foundation.org>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Andrew Lutomirski <luto@kernel.org>,
        the arch/x86 maintainers <x86@kernel.org>,
        Linux List Kernel Mailing <linux-kernel@vger.kernel.org>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Ingo Molnar <mingo@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>, mhiramat@kernel.org,
        jbaron@akamai.com, Jiri Kosina <jkosina@suse.cz>,
        David.Laight@aculab.com, bp@alien8.de, julia@ni.com,
        jeyu@kernel.org, Peter Anvin <hpa@zytor.com>
Subject: Re: [PATCH v2 4/4] x86/static_call: Add inline static call
 implementation for x86-64
Message-ID: <20181129121307.12393c57@gandalf.local.home>
In-Reply-To: <0A629D30-ADCF-4159-9443-E5727146F65F@amacapital.net>
References: <20181126160217.GR2113@hirez.programming.kicks-ass.net>
        <20181126171036.chcbmb35ygpxziub@treble>
        <20181126175624.bruqfbkngbucpvxr@treble>
        <20181126200801.GW2113@hirez.programming.kicks-ass.net>
        <20181126212628.4apztfazichxnt7r@treble>
        <20181127084330.GX2113@hirez.programming.kicks-ass.net>
        <CALCETrXam8JBtXE3S97Vyb_=+pmjgr23SoZ-Dm5pmYtwZYA+7Q@mail.gmail.com>
        <20181129094210.GC2131@hirez.programming.kicks-ass.net>
        <ECF632D9-581B-40B7-9F0A-6B5607A4D0E3@amacapital.net>
        <20181129143853.GO2131@hirez.programming.kicks-ass.net>
        <20181129163342.tp5wlfcyiazwwyoh@treble>
        <CAHk-=wg5wUXJX5mF+22WXWM_vPESb+p6-z-ZrG7rC1k2O7u=NQ@mail.gmail.com>
        <0A629D30-ADCF-4159-9443-E5727146F65F@amacapital.net>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 29 Nov 2018 09:02:23 -0800
Andy Lutomirski <luto@amacapital.net> wrote:


> > Instead, I'd suggest:
> > 
> > - just restart the instruction (with the suggested "ptregs->rip --")
> > 
> > - to avoid any "oh, we're not making progress" issues, just fix the
> > instruction yourself to be the right call, by looking it up in the
> > "what needs to be fixed" tables.
> > 
> > No?  
> 
> I thought that too.  I think it deadlocks. CPU A does
> text_poke_bp().  CPU B is waiting for a spinlock with IRQs off.  CPU
> C holds the spinlock and hits the int3.  The int3 never goes away
> because CPU A is waiting for CPU B to handle the sync_core IPI.

I agree that this can happen.

> 
> Or do you think we can avoid the IPI while the int3 is there?

No, we really do need to sync after we change the second part of the
command with the int3 on it. Unless there's another way to guarantee
that the full instruction gets seen when we replace the int3 with the
finished command.

To refresh everyone's memory for why we have an IPI (as IPIs have an
implicit memory barrier for the CPU).

We start with:

   e8 01 02 03 04

and we want to convert it to: e8 ab cd ef 01

And let's say the instruction crosses a cache line that breaks it into
e8 01 and 02 03 04.

We add the breakpoint:

  cc 01 02 03 04

We do a sync (so now everyone should see the break point), because we
don't want to update the second part and another CPU happens to update
the second part of the cache, and might see:

  e8 01 cd ef 01

Which would not be good.

And we need another sync after we change the code so all CPUs see

  cc ab cd ef 01

Because when we remove the break point, we don't want other CPUs to see

  e8 ab 02 03 04

Which would also be bad.

-- Steve
