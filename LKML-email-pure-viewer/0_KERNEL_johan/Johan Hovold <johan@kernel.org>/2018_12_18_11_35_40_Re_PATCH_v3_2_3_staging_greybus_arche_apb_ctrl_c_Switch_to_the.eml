Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 21:10:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2904658055F;
	Tue, 18 Dec 2018 03:35:54 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 03:35:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ae0LGKR2RrAi9rmt2smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSL/3xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Cy?=
 =?us-ascii?q?b4UAAOUdIOlXrYfyp0AWrRa8HgSsGP/jxyVUinPqx6A2zeIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotHyNKcSS++1yrTDwzfEb/NI3jf97JXHeQ0mrPGOWrJwcdDeyU80GgPGkFqQ?=
 =?us-ascii?q?s4rlMC2R1ugXtGib9eVgWPuphmU6qA9xuiCiytkwhoTNnI4Z117J+TtjzIooJt?=
 =?us-ascii?q?C0VFR3bN+mHZdItCyXN5F6Tt0sTm10oio217kLtYKhcCQX1ZgqxhjSYOGdfYeS?=
 =?us-ascii?q?+BLsTuORLC94hH17fLK/gA6/8VavyuLiTMm4ylVKoTRfktnKqH8N0wbf6s+dSv?=
 =?us-ascii?q?ty5kuh2DCP2B7P6uxcP0w4ia7WJ4Q8zrM+iJYfq1nPEyzqlEnsjaKbdF0o+u2y?=
 =?us-ascii?q?5OTmZrXmqIWcN4hxigzmNqQum8q/Afk3MwQXXGiU5/681Lv98k39WblKifM3kq?=
 =?us-ascii?q?/Hv5DAPskbuKG5DBFP0oo56BawES2m0NIGknkDNl5FfwiHj4fxN1HUPP/4Feu/?=
 =?us-ascii?q?g0irkDpzw/DGP77hDYvXInnMjbfsZrJ9609ayAouwtFT/ZNUCrcdIP3tXk/9rs?=
 =?us-ascii?q?DXDhg8Mwas2eboFM191p8CWWKIGqKZMLndsV6U5u01JOmAfo8VuCvnJPgj6P7j?=
 =?us-ascii?q?lns5mV4bfam00pobcnG4HvJ6I0qHZXrgmMsOEWAPvgAmVuzllEWCUSJPZ3a1R6?=
 =?us-ascii?q?885DY7B5y8AYfAQYCthrqB3CCgE51SZ2BGDE2MEHjye4WFXfcMdDydIst7njMY?=
 =?us-ascii?q?UrihTpcr1Quyuw/i17pnMu3U9zUCupL41Nh14O7TmQso9TNuDcSQyGWNT2Bynm?=
 =?us-ascii?q?MVSD46xqF/oUphylid1ah0meBXFdtW5/lRSAc1KYbcz/BmC9D1Qg/Bfc2GSFC8?=
 =?us-ascii?q?TtWiADE+VNQxw9AVbkZ5GtWiiA3D3iWwD78UkbyLGII78qbG03ftIMZ9zm7M1L?=
 =?us-ascii?q?M9gFk+XstPKWqmi7Zi+AfJGY7GjV+Vl6aweqQaxy7C6mGDwW2KvEFbVQ5wVb7I?=
 =?us-ascii?q?XXQeZkvQsNT46VnOT76oCbQ7LARBzdSOJbdNat3slV9GXuvsOMzCY2KtnGe9HQ?=
 =?us-ascii?q?uHyamSbIX0YWkd3D/SCE4fkw8N+3aLLgw+Biano2LDAz1iD1PvY0Xw8eZgrHO3?=
 =?us-ascii?q?VFM7zwaPb0d5zbq65gYVheCAS/MUxr8EpCYhqzBzHFah39LXC8CMpxZ7cKVbe9?=
 =?us-ascii?q?M95FZH1WTWtwFmOpygLqZihkMRcghtvkPu0Ql3BZtEkcQwsHwqyw9yI7qC0Fxd?=
 =?us-ascii?q?bzOYwYzwOrrPJ2bo+BCgdaHX1U/e0dqM4agP9ek3pE/lvAGqEUoi7W5q091U03?=
 =?us-ascii?q?ua+5XLAxAeUZP3UkYr6Rd6o6vWbTU654PRzXdsK7W7sife29I1A+so0hahf8pF?=
 =?us-ascii?q?PKyYDgPzEs0aCNKoKOwlgFWpahMEPOZP9K87Jc+mdv2G2LK1M+Zkhj6pkWNH4I?=
 =?us-ascii?q?Vl2EKW6yV8UvLI34oCw/yAxAuHVivzg027ss/qnoBIfzcSEXSlySjlHYJeerd9?=
 =?us-ascii?q?fYIWBmiwOc23wdN+ioXpW35Z8l6jGlwH1NWoeRqUc1zywwlQ2V4LrnygnCuy1y?=
 =?us-ascii?q?Z0nC0xrqqDwCzOxPzvdRoGOmJRRGhul0zsIZWyj90BWEiobg4plAaq5Ergxqhb?=
 =?us-ascii?q?orh/IHfXQUtSYyf2KGRiWLOqtrWee85P9I8osSJPXeS+e1+aUL39oxgd0y/5BG?=
 =?us-ascii?q?tR3jM7dzKrupX/gRN6jnmQLHJyrHrfZMFxyg3T5N3aRf5NwDUGQDN0hiXQBli5?=
 =?us-ascii?q?J9Op58mbl4/fsuCiUGKsTp1SfjPszY+atiu75GtqDAa7n/CynN3nDAc73TX619?=
 =?us-ascii?q?lsSSXHshL8bpP32KS9NOJtZlNoC0Pk68pmBoF+lZM9hJIK1ngbnJmV/WcHnn31?=
 =?us-ascii?q?MdVUwq/+aHsNRTgWw9/a+gTl2UtjLm6XyIL9THmS3sxhZ9yiaGMMxi0999xKCL?=
 =?us-ascii?q?uT7LFcmCt1o1m4ohjLbflzgDgd0ucu52AAg+4SpgUt1CqdD6sWHUlZOyzsihuJ?=
 =?us-ascii?q?48q/rKVReGagb7yw2FBiktCmCbGIuhtcV2rhepc+AS9w6d1yME7L0H328I3lec?=
 =?us-ascii?q?PfbdQOth2PiBfAjvNYKJYwlvoMmCpmNnjxvXwjy+4nkxNu2Yu2s5SAK2Vo5Ki5?=
 =?us-ascii?q?GAJXNiXpZ8MP/THglb1RkdyR34CrA5VtADELXIbzQPKsETISs+nnNgmUHD09rH?=
 =?us-ascii?q?ebBaTQHQuF5Eh6qHLPFoihN2uLK3kB0dViWB6dKVRdgA8OWTU1gIU5Ghq2xMD7?=
 =?us-ascii?q?c0d5+zMR5kP+qhRW0eJlLB3/UmbZpAe1ZTY4UpmfLBxK7g5c40fZK9CR7uV2Hy?=
 =?us-ascii?q?tA5J2usBSNKnCHZwRPFWwIWkuEB036Prmz/9bA9fKUBvG5L/vIbrWDsuheV/aO?=
 =?us-ascii?q?xZKy3Ypq5TeMNsOTPnZ8C/03wFZMXXd8G87BgTUAVzQXlz7Rb86cvBq8+jN4rs?=
 =?us-ascii?q?G88PToWQLj/4iPC6FVMdVg5R+2m7qDN/WLiSZ9KDZY0I4MxHDSxLge2l4Slz9h?=
 =?us-ascii?q?dz23Hbscsi7NSbramrVLAB4DdyNzKMxI4rom0QlQIsHbkM36175igv4xCldITl?=
 =?us-ascii?q?jhmsCvZcwXLGCxLlLHBECXNLuYIT3H2d34YaS5SbdIluVbqwWwuSqHE0/kJjmD?=
 =?us-ascii?q?izjpVxW1Pe5Qli2UIBxet5+7cht2DWjjTdTmagC0MdNtjD02x6E0iW3ONWIGLT?=
 =?us-ascii?q?d8dEZNpKWK7SxEmvV/B3BB7n19IOiEgSmZ6ezYKpcQsfRzAyV0l/hV4HI1y7ZO?=
 =?us-ascii?q?6CFERfp1mDbdr9J0olGmlPWPxSRjUBZUtjlLg4eL7g1ePvD/94JAUHqM3xsI4W?=
 =?us-ascii?q?yKQ0AMpsBlA9HssqVcw8Lnm6f6KTME+NXRq5gyHc/RfeCAMHMneTruBjnQAENR?=
 =?us-ascii?q?TzmrPGf3hEFHlvyWsHqPoc5p+dDXhJMSR+oDBxQOHfQABxEgRYRaLQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAABe2xhch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAQGDaieMdIsagg0UiQGORRSBXxMBARgTAYdfIjYHDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCCkjDEIBDgGBZCQBgmIBAgMBAiQTBgE4AQMCCQEBBQUYC?=
 =?us-ascii?q?QwHEgMMBQ0TAQUBASETBYMdgWkDFQQBm3g8jBUzgncFhRYNghUCBhKLEYEcF4F?=
 =?us-ascii?q?/gRGDEoJXgWUpBVaFIAKJPAqHW49TMAmCKYwGgyUkClZ9iBmHYYpJhQSJfwIEA?=
 =?us-ascii?q?gQFAgUPIYEsB4IAMxoIKAiDJ4IbDBcSgziKVD8ygQQBAQGBUIwjAQE?=
X-IPAS-Result: =?us-ascii?q?A0AOAABe2xhch0O0hNFkGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAQGDaieMdIsagg0UiQGORRSBXxMBARgTAYdfIjYHDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCCkjDEIBDgGBZCQBgmIBAgMBAiQTBgE4AQMCCQEBBQUYCQwHEgMMBQ0TAQU?=
 =?us-ascii?q?BASETBYMdgWkDFQQBm3g8jBUzgncFhRYNghUCBhKLEYEcF4F/gRGDEoJXgWUpB?=
 =?us-ascii?q?VaFIAKJPAqHW49TMAmCKYwGgyUkClZ9iBmHYYpJhQSJfwIEAgQFAgUPIYEsB4I?=
 =?us-ascii?q?AMxoIKAiDJ4IbDBcSgziKVD8ygQQBAQGBUIwjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="56804733"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 03:35:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726619AbeLRLfo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 06:35:44 -0500
Received: from mail-lj1-f193.google.com ([209.85.208.193]:43740 "EHLO
        mail-lj1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726395AbeLRLfn (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 06:35:43 -0500
Received: by mail-lj1-f193.google.com with SMTP id q2-v6so2755119lji.10
        for <linux-kernel@vger.kernel.org>; Tue, 18 Dec 2018 03:35:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=XH9ZRCaOeLdsJZWLJEJTaoMn2AczNCZW+Di9zNqp7Qk=;
        b=lnXffSePzcRgG9S45pIT0jZA6XttRkE1O1gOvLX4V8dRvLfk6W+g/VpPX7BLeabvKd
         bZVITqxtZaRX7N0crizovVslCUmo+WTMF6x5HOxH7t/x96m4HAMWJ2C4nwFU6cTPbgiX
         Id38uuIQwSY1cGaGb7/pMFwKouEAhf6AQfYvfquLVQj2Frk/m4oZPaOuORx95jSaOcs+
         J/Q40+kj/ndyfNS9F0gaxgA9/XseKgngOnzAh286nja+Ve9057XHUGMKXW9yjdBa5B9G
         2d1omBMVc38lHqHOTfvTf/EJ8Os72MHS83lV4MEUV8j1J6XW9XT/fJYd5hO/xD6FYZ7p
         k6UA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=XH9ZRCaOeLdsJZWLJEJTaoMn2AczNCZW+Di9zNqp7Qk=;
        b=Iq69K/QTZxST88QzpXqbed2+D522yuA/df8LwGpfhjUqg8n+ulgY+mkcSEij54egzY
         +7EBQABqMs+KSS4gM7qM1Q68AqCzME6dreibXb3oh4emEzo/MqECLR8UetWdI6wsQTXh
         igtrsbWV/VRxZVNkg+2KogokRw8M/aden4LcAdODloj6gTVjfLdyCpODlrIhI79RysYK
         6ve0NiBzHrN681fap7ScPKPxxbp6Yegwj6WF5u1xUZFCFkGhrrdGjI0q2Emvh75xkOMA
         9HgyANr+IKRJ7Dc2pzdGby6h6GNUYQme3BQ0d9WPD6l2O/nz/VAsihXd9ODV5KegskDX
         thfg==
X-Gm-Message-State: AA+aEWaM/MNEEIQZzxUXafB4v1X48Y2oJXN/Ob9EE5j9KbX5K47io4v/
        2dX85V8D4sqeTdzgbsloOTc=
X-Google-Smtp-Source: AFSGD/WfJJMPBPXmVqOrfQE38lN+cW7efBKw8Nx3IXEjLN5UQNLV9IpddO6zrvfoyby4A2WrLgkGPg==
X-Received: by 2002:a2e:145a:: with SMTP id 26-v6mr9691256lju.116.1545132939990;
        Tue, 18 Dec 2018 03:35:39 -0800 (PST)
Received: from xi.terra (c-74bee655.07-184-6d6c6d4.bbcust.telenor.se. [85.230.190.116])
        by smtp.gmail.com with ESMTPSA id y9sm3168588lfe.75.2018.12.18.03.35.39
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 18 Dec 2018 03:35:39 -0800 (PST)
Received: from johan by xi.terra with local (Exim 4.91)
        (envelope-from <johan@kernel.org>)
        id 1gZDf2-0004x5-U1; Tue, 18 Dec 2018 12:35:41 +0100
Date: Tue, 18 Dec 2018 12:35:40 +0100
From: Johan Hovold <johan@kernel.org>
To: Nishad Kamdar <nishadkamdar@gmail.com>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Johan Hovold <johan@kernel.org>, Alex Elder <elder@kernel.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH v3 2/3] staging: greybus: arche-apb-ctrl.c: Switch to the
 gpio descriptor interface
Message-ID: <20181218113540.GN20658@localhost>
References: <cover.1542898267.git.nishadkamdar@gmail.com>
 <9ebe2c3909643701e5936da3778bf4fab3e53036.1542898267.git.nishadkamdar@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <9ebe2c3909643701e5936da3778bf4fab3e53036.1542898267.git.nishadkamdar@gmail.com>
User-Agent: Mutt/1.11.1 (2018-12-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 22, 2018 at 10:38:18PM +0530, Nishad Kamdar wrote:
> Use the gpiod interface instead of the deprecated old non-descriptor
> interface.
> 
> Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
> ---
> Changes in v2:
>  - Resolved compilation errors.
> ---
>  drivers/staging/greybus/arche-apb-ctrl.c | 159 +++++++++--------------
>  1 file changed, 65 insertions(+), 94 deletions(-)
> 
> diff --git a/drivers/staging/greybus/arche-apb-ctrl.c b/drivers/staging/greybus/arche-apb-ctrl.c
> index be5ffed90bcf..e887f6aee20b 100644
> --- a/drivers/staging/greybus/arche-apb-ctrl.c
> +++ b/drivers/staging/greybus/arche-apb-ctrl.c
> @@ -8,9 +8,8 @@
>  
>  #include <linux/clk.h>
>  #include <linux/delay.h>
> -#include <linux/gpio.h>
> +#include <linux/gpio/consumer.h>
>  #include <linux/interrupt.h>
> -#include <linux/of_gpio.h>
>  #include <linux/of_irq.h>
>  #include <linux/module.h>
>  #include <linux/pinctrl/consumer.h>
> @@ -24,12 +23,12 @@ static void apb_bootret_deassert(struct device *dev);
>  
>  struct arche_apb_ctrl_drvdata {
>  	/* Control GPIO signals to and from AP <=> AP Bridges */
> -	int resetn_gpio;
> -	int boot_ret_gpio;
> -	int pwroff_gpio;
> -	int wake_in_gpio;
> -	int wake_out_gpio;
> -	int pwrdn_gpio;
> +	struct gpio_desc *resetn;
> +	struct gpio_desc *boot_ret;
> +	struct gpio_desc *pwroff;
> +	struct gpio_desc *wake_in;
> +	struct gpio_desc *wake_out;
> +	struct gpio_desc *pwrdn;
>  
>  	enum arche_platform_state state;
>  	bool init_disabled;
> @@ -37,28 +36,28 @@ struct arche_apb_ctrl_drvdata {
>  	struct regulator *vcore;
>  	struct regulator *vio;
>  
> -	int clk_en_gpio;
> +	struct gpio_desc *clk_en;
>  	struct clk *clk;
>  
>  	struct pinctrl *pinctrl;
>  	struct pinctrl_state *pin_default;
>  
>  	/* V2: SPI Bus control  */
> -	int spi_en_gpio;
> +	struct gpio_desc *spi_en;
>  	bool spi_en_polarity_high;
>  };
>  
>  /*
>   * Note that these low level api's are active high
>   */
> -static inline void deassert_reset(unsigned int gpio)
> +static inline void deassert_reset(struct gpio_desc *gpio)
>  {
> -	gpio_set_value(gpio, 1);
> +	gpiod_set_value(gpio, 1);
>  }
>  
> -static inline void assert_reset(unsigned int gpio)
> +static inline void assert_reset(struct gpio_desc *gpio)
>  {
> -	gpio_set_value(gpio, 0);
> +	gpiod_set_value(gpio, 0);
>  }

As the comment above deassert_reset() suggests, this change will
actually change the semantics of these calls by taking any gpio flags
into account (e.g. ACTIVE_LOW which will invert the signals).

Perhaps you should just use gpiod_set_raw_value() for now, and this can
be addressed later. Alternatively, drop the comment and invert the
polarity here and any users will need to update their device trees.

Either way, mention this in the commit message.

>  /*
> @@ -75,11 +74,11 @@ static int coldboot_seq(struct platform_device *pdev)
>  		return 0;
>  
>  	/* Hold APB in reset state */
> -	assert_reset(apb->resetn_gpio);
> +	assert_reset(apb->resetn);
>  
>  	if (apb->state == ARCHE_PLATFORM_STATE_FW_FLASHING &&
> -	    gpio_is_valid(apb->spi_en_gpio))
> -		devm_gpio_free(dev, apb->spi_en_gpio);
> +	    apb->spi_en)

No need to break the line any more.

> +		devm_gpiod_put(dev, apb->spi_en);
>  
>  	/* Enable power to APB */
>  	if (!IS_ERR(apb->vcore)) {
> @@ -101,13 +100,13 @@ static int coldboot_seq(struct platform_device *pdev)
>  	apb_bootret_deassert(dev);
>  
>  	/* On DB3 clock was not mandatory */
> -	if (gpio_is_valid(apb->clk_en_gpio))
> -		gpio_set_value(apb->clk_en_gpio, 1);
> +	if (apb->clk_en)
> +		gpiod_set_value(apb->clk_en, 1);
>  
>  	usleep_range(100, 200);
>  
>  	/* deassert reset to APB : Active-low signal */
> -	deassert_reset(apb->resetn_gpio);
> +	deassert_reset(apb->resetn);
>  
>  	apb->state = ARCHE_PLATFORM_STATE_ACTIVE;
>  
> @@ -119,6 +118,7 @@ static int fw_flashing_seq(struct platform_device *pdev)
>  	struct device *dev = &pdev->dev;
>  	struct arche_apb_ctrl_drvdata *apb = platform_get_drvdata(pdev);
>  	int ret;
> +	unsigned long flags;
>  
>  	if (apb->init_disabled ||
>  	    apb->state == ARCHE_PLATFORM_STATE_FW_FLASHING)
> @@ -136,25 +136,20 @@ static int fw_flashing_seq(struct platform_device *pdev)
>  		return ret;
>  	}
>  
> -	if (gpio_is_valid(apb->spi_en_gpio)) {

spi_en_gpio is currently optional, so cannot just drop the check.

> -		unsigned long flags;
> +	if (apb->spi_en_polarity_high)
> +		flags = GPIOD_OUT_HIGH;
> +	else
> +		flags = GPIOD_OUT_LOW;

This should probably also be converted to honouring the gpio flags, but
perhaps better to do in a later patch.

>  
> -		if (apb->spi_en_polarity_high)
> -			flags = GPIOF_OUT_INIT_HIGH;
> -		else
> -			flags = GPIOF_OUT_INIT_LOW;
> -
> -		ret = devm_gpio_request_one(dev, apb->spi_en_gpio,
> -					    flags, "apb_spi_en");
> -		if (ret) {
> -			dev_err(dev, "Failed requesting SPI bus en gpio %d\n",
> -				apb->spi_en_gpio);
> -			return ret;
> -		}
> +	apb->spi_en = devm_gpiod_get(dev, "gb,spi-en-gpio", flags);
> +	if (IS_ERR(apb->spi_en)) {
> +		ret = PTR_ERR(apb->spi_en);
> +		dev_err(dev, "Failed requesting SPI bus en GPIO: %d\n", ret);
> +		return ret;
>  	}
>  
>  	/* for flashing device should be in reset state */
> -	assert_reset(apb->resetn_gpio);
> +	assert_reset(apb->resetn);
>  	apb->state = ARCHE_PLATFORM_STATE_FW_FLASHING;
>  
>  	return 0;
> @@ -177,8 +172,8 @@ static int standby_boot_seq(struct platform_device *pdev)
>  		return 0;
>  
>  	if (apb->state == ARCHE_PLATFORM_STATE_FW_FLASHING &&
> -	    gpio_is_valid(apb->spi_en_gpio))
> -		devm_gpio_free(dev, apb->spi_en_gpio);
> +	    apb->spi_en)

No line break. Check this throughout.

> +		devm_gpiod_put(dev, apb->spi_en);
>  
>  	/*
>  	 * As per WDM spec, do nothing

> @@ -404,12 +379,8 @@ static int apb_ctrl_get_devtree_data(struct platform_device *pdev,
>  	}
>  
>  	/* Only applicable for platform >= V2 */
> -	apb->spi_en_gpio = of_get_named_gpio(np, "spi-en-gpio", 0);
> -	if (apb->spi_en_gpio >= 0) {
> -		if (of_property_read_bool(pdev->dev.of_node,
> -					  "spi-en-active-high"))
> -			apb->spi_en_polarity_high = true;
> -	}
> +	if (of_property_read_bool(pdev->dev.of_node, "gb,spi-en-active-high"))
> +		apb->spi_en_polarity_high = true;

Guess it's fine to drop the spi_en check here though.

Johan
