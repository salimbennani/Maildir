Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 10:58:08 -0000
Received: from icoremail.net (unknown [209.85.214.172])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH9K3sPRbwnDDAQ--.56704S3;
	Wed, 21 Nov 2018 09:11:20 +0800 (CST)
Received: from mail-pl1-f172.google.com (unknown [209.85.214.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXOUW1sPRbFqFgAA--.2307S3;
	Wed, 21 Nov 2018 09:11:17 +0800 (CST)
Received: by mail-pl1-f172.google.com with SMTP id e5so2884296plb.5
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 17:11:17 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:in-reply-to:message-id:references:user-agent:mime-version
         :sender:precedence:list-id;
        bh=CBeYW30Z0HB62m1uZkWJvu1sgDpq1cWZindpCQ/lqxk=;
        b=OJZrr5g2pO4nwybbM+I2eGMS/sVJ38mZtiNkTMbyiiSN401LZ/akrlMtoQ/Grk6jiz
         ems6ueb2iLUXAN9gEljr0kTxqlZVKN2HwPmIrMdJoF7+iOb4zcKHSvK+rd7oHjZ15IJ0
         aal9SQr4PQqEHQcrsQRqy41dZnN1hcMDa9vwvlzb+boIiDt/81XZP+uKDFFjGOD4xwcS
         98IEilUmCucKoUfGe2jTqTIa/NBC72QjkOGP+7C6JyHRI/tgi7CkdJI31uBYIFC0RUx+
         eLbOsIfBcyN03wgLesDHJSTaLwTZ64qcYdIsc7IXJt0PMxNkx1xOLKwTcHn+hdIWHwk8
         ykbQ==
X-Gm-Message-State: AA+aEWYxo9sVd8JOL/3jIlTQfNPzMRifBzNpVYDoWGmFsupPv+NJEXKj
	cHpUCcp/r5u6KF1TXDV2I7MFb5B/epPouI3224UAmlMHH1nFCss=
X-Received: by 2002:a17:902:784d:: with SMTP id e13mr4702226pln.188.1542762677402;
        Tue, 20 Nov 2018 17:11:17 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1329181pju;
        Tue, 20 Nov 2018 17:11:15 -0800 (PST)
X-Google-Smtp-Source: AJdET5cB2vOOJi2PK7GmXoLFVN+kLSjuEmZ1DtixpLy5+ZSmM0ac82h3VH1/am4cM6n0ww17cJMt
X-Received: by 2002:a62:c21c:: with SMTP id l28mr4579976pfg.74.1542762675944;
        Tue, 20 Nov 2018 17:11:15 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542762675; cv=none;
        d=google.com; s=arc-20160816;
        b=wBhkE4Dfibh2UoqO6Y8b3HvXZ3qMJUnCEKFLjQqY7yDbvHj2BKJ8O7kcw14XtrYUz2
         xE8yss26GPM2dErV0SvAoGQL3Y3WD/RuluYjKC8gtj4fB4bVXuf+BEMV7OBEumMvH5K+
         vxs6VujANkLLpZFDem0w0FhRnIlCLy5ftCgvTmycD8MaYSKNBUuXKP0vGLwa11pvhCL5
         gllvWt9N2vDB6qhhmtkkTCQIOpARy/88jF3GIgSYhNdoHPwEU0CLpLRqgNtB1hSXS1ni
         HKZ7CbhKGIXgmkjm7+XfrZLQ5uyQpiKVPJaLj/LROKDazXT+csI4eKNLswYhndkWZRCe
         C7fA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:mime-version:user-agent:references
         :message-id:in-reply-to:subject:cc:to:from:date:dkim-signature;
        bh=CBeYW30Z0HB62m1uZkWJvu1sgDpq1cWZindpCQ/lqxk=;
        b=qDZlcdUfowh9sjpqZkxpiPnxMnuJSuXrATT/iniomaoi3Gb+5dR6tqCweskUG16ZA5
         bkCOQnFvGz50BJtesaDqEwxFuOkbv8J5HDgsIhgawiwu3LeooTkIbi/QM20QUWD9KWoT
         7gGfPScUyKRM7TTqFgE3haZCp8s2gCXKHjqTlkjvrTs5Tb+sP5kMIqTZ6RCS+SAoLtYD
         t1r2Hn/tQFhcyh7tlW2B7KQqeYYG1wmz1WQZSmofSBD3AoHgRWBj/YemlFPB0skSYwVH
         2zzHfaYWJisRPT6SMU9WWqK8IEE3igxYY24yFjN6zDntrmYNk6Ba6otVUnjHqonP8K1D
         QjCw==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@google.com header.s=20161025 header.b=FtGcOjSu;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e1si27179091pln.55.2018.11.20.17.11.01;
        Tue, 20 Nov 2018 17:11:15 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726311AbeKULkx (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Wed, 21 Nov 2018 06:40:53 -0500
Received: from mail-pl1-f195.google.com ([209.85.214.195]:38042 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725939AbeKULkw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 06:40:52 -0500
Received: by mail-pl1-f195.google.com with SMTP id e5so2875817plb.5
        for <linux-kernel@vger.kernel.org>; Tue, 20 Nov 2018 17:08:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:from:to:cc:subject:in-reply-to:message-id:references
         :user-agent:mime-version;
        bh=CBeYW30Z0HB62m1uZkWJvu1sgDpq1cWZindpCQ/lqxk=;
        b=FtGcOjSu6q3lEVOo15vmYdTTwAlc+7ReZszZCGNPpaSI4CnzwtsekoTuFjigqgk5t1
         Ni1CuHqig60CxZK0fNSXmt2Gsn8Ffc59nuD8rBmacGpno67LFPsCeiGd1q5+gSzMMDDh
         UeIJnDjziPn6VyI7I2oXrtOM5YCGzjdP80MlW9/cg/1k1ZYUZn2uJ9n7NKyPqBJcXZx2
         dnM0ZBNoUxAMJSnOxPLeSKxwgTaid7wf6GZ4hTxYvP6bnYqjv94LxLeuSxwsyKtp7lnW
         EmAZnpnxl3ES26jdNUADP02VI+iI+Q6dkPRocnvH0YX4Ee/IgXPH6VyZATJNSkTg9wsk
         JZhA==
X-Received: by 2002:a17:902:74c1:: with SMTP id f1mr4513636plt.273.1542762528042;
        Tue, 20 Nov 2018 17:08:48 -0800 (PST)
Received: from [100.112.89.103] ([104.133.8.103])
        by smtp.gmail.com with ESMTPSA id t90sm35800294pfj.23.2018.11.20.17.08.46
        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 20 Nov 2018 17:08:46 -0800 (PST)
Date: Tue, 20 Nov 2018 17:08:39 -0800 (PST)
From: Hugh Dickins <hughd@google.com>
X-X-Sender: hugh@eggly.anvils
To: Vlastimil Babka <vbabka@suse.cz>
cc: Hugh Dickins <hughd@google.com>, Baoquan He <bhe@redhat.com>,
        Michal Hocko <mhocko@kernel.org>,
        David Hildenbrand <david@redhat.com>, linux-mm@kvack.org,
        pifang@redhat.com, linux-kernel@vger.kernel.org,
        akpm@linux-foundation.org, aarcange@redhat.com,
        Mel Gorman <mgorman@suse.de>
Subject: Re: Memory hotplug softlock issue
In-Reply-To: <3f1a82a8-f2aa-ac5e-e6a8-057256162321@suse.cz>
Message-ID: <alpine.LSU.2.11.1811201630360.2061@eggly.anvils>
References: <20181115143204.GV23831@dhcp22.suse.cz> <20181116012433.GU2653@MiWiFi-R3L-srv> <20181116091409.GD14706@dhcp22.suse.cz> <20181119105202.GE18471@MiWiFi-R3L-srv> <20181119124033.GJ22247@dhcp22.suse.cz> <20181119125121.GK22247@dhcp22.suse.cz>
 <20181119141016.GO22247@dhcp22.suse.cz> <20181119173312.GV22247@dhcp22.suse.cz> <alpine.LSU.2.11.1811191215290.15640@eggly.anvils> <20181119205907.GW22247@dhcp22.suse.cz> <20181120015644.GA5727@MiWiFi-R3L-srv> <alpine.LSU.2.11.1811192127130.2848@eggly.anvils>
 <3f1a82a8-f2aa-ac5e-e6a8-057256162321@suse.cz>
User-Agent: Alpine 2.11 (LSU 23 2013-08-11)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXOUW1sPRbFqFgAA--.2307S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJF1xury5ZrWrGrW5JFWxCrg_yoWrXr1DpF
	WrK3ZrKF4DJ34SgrnrXw4kZa4Yvwn3trW3AryrGrn7Zay5Xr9akF1IkF1kZFyxCrs3Ar4q
	yF4UtasrZF90yrDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPFb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6w4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26r4UJVWxJr1lcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c
	8Ij28IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j
	6r18MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64
	vIr41lIxAIcVCF04k26cxKx2IYs7xG6Fyj6rWUJbIYCTnIWIevJa73UjIFyTuYvjxUHBMN
	DUUUU

On Tue, 20 Nov 2018, Vlastimil Babka wrote:
> On 11/20/18 6:44 AM, Hugh Dickins wrote:
> > [PATCH] mm: put_and_wait_on_page_locked() while page is migrated
> > 
> > We have all assumed that it is essential to hold a page reference while
> > waiting on a page lock: partly to guarantee that there is still a struct
> > page when MEMORY_HOTREMOVE is configured, but also to protect against
> > reuse of the struct page going to someone who then holds the page locked
> > indefinitely, when the waiter can reasonably expect timely unlocking.
> > 
> > But in fact, so long as wait_on_page_bit_common() does the put_page(),
> > and is careful not to rely on struct page contents thereafter, there is
> > no need to hold a reference to the page while waiting on it.  That does
> 
> So there's still a moment where refcount is elevated, but hopefully
> short enough, right?

Correct: and given page migration's 10 passes, it would have to be very
unlucky to hit one of those transiently elevated refcounts every time:
so I don't think it's a grave drawback at all - certainly much less
grave than how it's done at present.

I admit that doing a get_page_unless_zero() immediately before the
put_and_wait_on_page_locked() looks rather silly, but I think we do
have to hold a reference in order to set PG_waiters. Then for other
future uses (e.g. in find_get_entry() or lock_page_or_retry()),
the reference to be dropped has been taken earlier anyway.

> Let's see if it survives Baoquan's stress testing.
> 
> > mean that this case cannot go back through the loop: but that's fine for
> > the page migration case, and even if used more widely, is limited by the
> > "Stop walking if it's locked" optimization in wake_page_function().
> > 
> > Add interface put_and_wait_on_page_locked() to do this, using negative
> > value of the lock arg to wait_on_page_bit_common() to implement it.
> > No interruptible or killable variant needed yet, but they might follow:
> > I have a vague notion that reporting -EINTR should take precedence over
> > return from wait_on_page_bit_common() without knowing the page state,
> > so arrange it accordingly - but that may be nothing but pedantic.
> > 
> > shrink_page_list()'s __ClearPageLocked(): that was a surprise! this
> > survived a lot of testing before that showed up.  It does raise the
> > question: should is_page_cache_freeable() and __remove_mapping() now
> > treat a PG_waiters page as if an extra reference were held?  Perhaps,
> > but I don't think it matters much, since shrink_page_list() already
> > had to win its trylock_page(), so waiters are not very common there: I
> > noticed no difference when trying the bigger change, and it's surely not
> > needed while put_and_wait_on_page_locked() is only for page migration.
> > 
> > Signed-off-by: Hugh Dickins <hughd@google.com>
> > ---
> 
> ...
> 
> > @@ -1100,6 +1111,17 @@ static inline int wait_on_page_bit_common(wait_queue_head_t *q,
> >  			ret = -EINTR;
> >  			break;
> >  		}
> > +
> > +		if (lock < 0) {
> > +			/*
> > +			 * We can no longer safely access page->flags:
> 
> Hmm...
> 
> > +			 * even if CONFIG_MEMORY_HOTREMOVE is not enabled,
> > +			 * there is a risk of waiting forever on a page reused
> > +			 * for something that keeps it locked indefinitely.
> > +			 * But best check for -EINTR above before breaking.
> > +			 */
> > +			break;
> > +		}
> >  	}
> >  
> >  	finish_wait(q, wait);
> 
> ... the code continues by:
> 
>         if (thrashing) {
>                 if (!PageSwapBacked(page))
> 
> So maybe we should not set 'thrashing' true when lock < 0?

Very good catch, thank you Vlastimil: as you might have guessed, the
patch from a pre-PSI kernel applied cleanly, and I just hadn't reviewed
the surrounding context properly before sending out.

I cannot say immediately what the right answer is, I'll have to do some
research first: maybe not enter the block that sets thrashing true when
lock < 0, as you suggest, or maybe force lock < 0 to 0 and put_page()
afterwards, or... 

Hugh
