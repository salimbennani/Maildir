Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:52:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 927215804C1
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 04:44:33 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 05 Dec 2018 04:44:33 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AkzojNRSVj2zp3odgOAWpGITWWNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBaAt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZcPAeQCM+ZWrYbyu1QAohSjCwm0Bu7hyDBFimL40KEmzeshChrL3BA5H9IMrH?=
 =?us-ascii?q?jYsMn5OLkUXOuozKfI1zLDb/ZO1Dnn8ofIbxQhquyCU7Jta8rR01MgFwXZjl6N?=
 =?us-ascii?q?roHrJSma1vkJs2SB4eRgSPivi3Q9pAF3vjii3dsjiojVhoIPy1DF+j91z5oyJd?=
 =?us-ascii?q?29UUN2Z8OvHphItyyCKYd6XsAvT3t1tConybAKo4C3cSYKxZg92hLSaeSLf5WL?=
 =?us-ascii?q?7x/jTuqdPzd1iGhkdb+/nRq+70etx+vhXceuyllKtDBKktzUu3ANyRPT7s+HR+?=
 =?us-ascii?q?N5/kegwjaPyxvT5vtLIUAyiKrXMZkhwqQ/lpYLsETDGDH5mFnugaOIakkp+fKk?=
 =?us-ascii?q?5/n6brjlvJOQKYF5hwHkPqgzmMGzGeE4PRIPX2if9+S8zrrj/UjhTbVTkPI2l7?=
 =?us-ascii?q?TZvInHKssFuK62HQtV3p845Ba4Ejem1sgXkmccLF5CfBKHjovpNE/ULPH3EPey?=
 =?us-ascii?q?m1CskDZtx/DbMbztGJTNLn7fkLj/ebZx8VJTyA02zd1E4ZJUDbcBIP31Wk/srt?=
 =?us-ascii?q?DYCQU5MwOsz+b9FNp9zp8eWX6IAqKBNKPSsFyI6fw1L+iDeY8YozL9K/kj5/7z?=
 =?us-ascii?q?gn41g14dfa+13ZQJbHC0BOhpI0KcYSmkv9EaDG1fvhYiVPe4zxqGUCVPfDC0WK?=
 =?us-ascii?q?Qz4Cx9D5ipSoLKR4SoibrG2z+nH5pQfSdfB1WRVHvlaYiACMoKcz+Yd8pokzgY?=
 =?us-ascii?q?Uuq4Roo8kB2jqgL+jqBqN/fZ4TEws5Xl295ooerJmkYp6DZ2As+BhnyLVHx+hW?=
 =?us-ascii?q?gSRjU7j5x49HR011PL/bVimfVeCZQH3/pUVkEWKITGxupmI9vzRhjAbpGCT1Pw?=
 =?us-ascii?q?Bp2PBy0xSdQgi+cDeU9nF532hxbf3y2sEvkNmqaCHpAc+aPAxXnhYc16ziCV+r?=
 =?us-ascii?q?MmigweS9ZLfUG7nLR28RSbU7bAjkHfu7uwb60awAbG9XuZzHrIt0ZdBl0jGZ7Z?=
 =?us-ascii?q?VGwSMxOF5e/y4VnPGvr3Uewq?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAADYxwdchxHrdtBkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBgTCCTwEBEYxxiy+CDXyWUBSBXxQYFIRAAoM?=
 =?us-ascii?q?QIjYHDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAwECJBMMC?=
 =?us-ascii?q?gMmAwMBAgMDAQEBAQgRBAEBAR4IAQcDASQeCQgCBAESBQODGQGCAQEDAaVqM4o?=
 =?us-ascii?q?rjB6BVz+BEYJdNYMeBIEkOweFVAKLIoQTkSEHAoIkiwCEFiCRL4kJj3WBTQ2Be?=
 =?us-ascii?q?TMaI4FuCoFEgiQDF44dQTEBgQaJJoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAADYxwdchxHrdtBkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBgTCCTwEBEYxxiy+CDXyWUBSBXxQYFIRAAoMQIjYHDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAwECJBMMCgMmAwMBAgMDAQE?=
 =?us-ascii?q?BAQgRBAEBAR4IAQcDASQeCQgCBAESBQODGQGCAQEDAaVqM4orjB6BVz+BEYJdN?=
 =?us-ascii?q?YMeBIEkOweFVAKLIoQTkSEHAoIkiwCEFiCRL4kJj3WBTQ2BeTMaI4FuCoFEgiQ?=
 =?us-ascii?q?DF44dQTEBgQaJJoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="56182228"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 04:44:32 -0800
Received: from localhost ([::1]:33993 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUWXW-0004Y4-Pu
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 07:44:30 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57809)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=870045bc7=Paul.Durrant@citrix.com>)
	id 1gUWX8-0003q2-Kh
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:44:07 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=870045bc7=Paul.Durrant@citrix.com>)
	id 1gUWX7-0006pU-Fr
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:44:06 -0500
Received: from smtp.eu.citrix.com ([185.25.65.24]:26459)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <prvs=870045bc7=Paul.Durrant@citrix.com>)
	id 1gUWX2-0006mO-0R; Wed, 05 Dec 2018 07:44:00 -0500
X-IronPort-AV: E=Sophos;i="5.56,317,1539648000"; d="scan'208";a="82822652"
From: Paul Durrant <Paul.Durrant@citrix.com>
To: Paul Durrant <Paul.Durrant@citrix.com>, Anthony Perard
	<anthony.perard@citrix.com>
Thread-Topic: [PATCH 04/18] xen: create xenstore areas for XenDevice-s
Thread-Index: AQHUgayYuUgB3IvyUUiYDf+F3yeN9aVnFC6AgAkMWqCAAAwq8A==
Date: Wed, 5 Dec 2018 12:43:57 +0000
Message-ID: <d5bf17f689a34e69b9e3b7b92bcfe4fd@AMSPEX02CL03.citrite.net>
References: <20181121151211.15997-1-paul.durrant@citrix.com>
	<20181121151211.15997-5-paul.durrant@citrix.com>
	<20181129184841.GJ14786@perard.uk.xensource.com>
	<589a4488f1ba4e4496775cc06bda291d@AMSPEX02CL03.citrite.net>
In-Reply-To: <589a4488f1ba4e4496775cc06bda291d@AMSPEX02CL03.citrite.net>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-transport-fromentityheader: Hosted
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 185.25.65.24
Subject: Re: [Qemu-devel] [PATCH 04/18] xen: create xenstore areas for
 XenDevice-s
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Stefano Stabellini <sstabellini@kernel.org>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
	Max Reitz <mreitz@redhat.com>,
	"xen-devel@lists.xenproject.org" <xen-devel@lists.xenproject.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

> -----Original Message-----
> From: Qemu-devel [mailto:qemu-devel-
> bounces+paul.durrant=3Dcitrix.com@nongnu.org] On Behalf Of Paul Durrant
> Sent: 05 December 2018 12:05
> To: Anthony Perard <anthony.perard@citrix.com>
> Cc: Kevin Wolf <kwolf@redhat.com>; Stefano Stabellini
> <sstabellini@kernel.org>; qemu-block@nongnu.org; qemu-devel@nongnu.org;
> Max Reitz <mreitz@redhat.com>; xen-devel@lists.xenproject.org
> Subject: Re: [Qemu-devel] [PATCH 04/18] xen: create xenstore areas for
> XenDevice-s
>=20
> > -----Original Message-----
> > From: Anthony PERARD [mailto:anthony.perard@citrix.com]
> > Sent: 29 November 2018 18:49
> > To: Paul Durrant <Paul.Durrant@citrix.com>
> > Cc: qemu-block@nongnu.org; qemu-devel@nongnu.org; xen-
> > devel@lists.xenproject.org; Stefano Stabellini <sstabellini@kernel.org>=
;
> > Kevin Wolf <kwolf@redhat.com>; Max Reitz <mreitz@redhat.com>
> > Subject: Re: [PATCH 04/18] xen: create xenstore areas for XenDevice-s
> >
> > On Wed, Nov 21, 2018 at 03:11:57PM +0000, Paul Durrant wrote:
> > > This patch adds a new source module, xen-bus-helper.c, which builds o=
n
> > > basic libxenstore primitives to provide functions to create (setting
> > > permissions appropriately) and destroy xenstore areas, and functions
> to
> > > 'printf' and 'scanf' nodes therein. The main xen-bus code then uses
> > > these primitives [1] to initialize and destroy the frontend and
> backend
> > > areas for a XenDevice during realize and unrealize respectively.
> > >
> > > The 'xen-qdisk' implementation is extended with a 'get_name' method
> that
> > > returns the VBD number. This number is reqired to 'name' the xenstore
> >
> >                                          ^ required
> >
>=20
> Ok.
>=20
> > > diff --git a/hw/xen/xen-bus-helper.c b/hw/xen/xen-bus-helper.c
> > > new file mode 100644
> > > index 0000000000..d9ee2ed6a0
> > > --- /dev/null
> > > +++ b/hw/xen/xen-bus-helper.c
> > [...]
> > > +void xs_node_destroy(struct xs_handle *xsh, const char *node)
> > > +{
> > > +    xs_rm(xsh, XBT_NULL, node);
> >
> > We should check for error, and grab errno.
> >
>=20
> I'll make all of them fill in an Error *
>=20
> > > +}
> > > +
> > > +void xs_node_vprintf(struct xs_handle *xsh, const char *node,
> > > +                     const char *key, const char *fmt, va_list ap)
> > > +{
> > > +    char *path, *value;
> > > +
> > > +    path =3D (strlen(node) !=3D 0) ? g_strdup_printf("%s/%s", node, =
key)
> :
> > > +        g_strdup(key);
> >
> > A comment would be helpful to findout how to use that function,
> > especialy the fact that with node=3D"", we write to $key instead of
> > $node/$key.
>=20
> Ok, I'll add comments into the header.
>=20
> >
> > > +    value =3D g_strdup_vprintf(fmt, ap);
> >
> > Looks like g_vasprintf() would be better, since it returns the lenght a=
s
> > well.
> >
>=20
> Yes.

I tried this and it appears not to exist in the version of glib in my envir=
onment so I guess I'll stick with g_strdup_printf().

  Paul

>=20
> > > +
> > > +    xs_write(xsh, XBT_NULL, path, value, strlen(value));
> >
> > You should check for failures, and grab errno.
> >
> > > +    g_free(value);
> > > +    g_free(path);
> > > +}
> > > +
> > > +int xs_node_vscanf(struct xs_handle *xsh, const char *node, const
> char
> > *key,
> > > +                   const char *fmt, va_list ap)
> > > +{
> > > +    char *path, *value;
> > > +    int rc;
> > > +
> > > +    path =3D (strlen(node) !=3D 0) ? g_strdup_printf("%s/%s", node, =
key)
> :
> > > +        g_strdup(key);
> > > +
> > > +    value =3D xs_read(xsh, XBT_NULL, path, NULL);
> >
> > The xenstore.h isn't clear about failure of this function, it is
> > supposed to return a malloced value. Do we actually need to check if
> value
> > is NULL?
>=20
> The comment above xs_read() in xs.c is:
>=20
> /* Get the value of a single file, nul terminated.
>  * Returns a malloced value: call free() on it after use.
>  * len indicates length in bytes, not including the nul.
>  */
>=20
> and I think we should check it for NULL before passing it to vsscanf().
>=20
> >
> > > +
> > > +    rc =3D value ? vsscanf(value, fmt, ap) : EOF;
> > > +
> > > +    free(value);
> > > +    g_free(path);
> > > +
> > > +    return rc;
> > > +}
> > > +
> > > diff --git a/hw/xen/xen-bus.c b/hw/xen/xen-bus.c
> > > index dede2d914a..663aa8e117 100644
> > > --- a/hw/xen/xen-bus.c
> > > +++ b/hw/xen/xen-bus.c
> > [...]
> >
> > > +static void xen_device_backend_destroy(XenDevice *xendev)
> > > +{
> > > +    XenBus *xenbus =3D XEN_BUS(qdev_get_parent_bus(DEVICE(xendev)));
> > > +
> > > +    if (!xendev->backend_path) {
> > > +        return;
> > > +    }
> > > +
> > > +    g_assert(xenbus->xsh);
> > > +
> > > +    xs_node_destroy(xenbus->xsh, xendev->backend_path);
> > > +    g_free(xendev->backend_path);
> >
> > It would be nice to also set backend_path to NULL.
> >
>=20
> Yes, it should be for idempotency.
>=20
> > > diff --git a/include/hw/xen/xen-bus-helper.h b/include/hw/xen/xen-bus=
-
> > helper.h
> > > new file mode 100644
> > > index 0000000000..53570650db
> > > --- /dev/null
> > > +++ b/include/hw/xen/xen-bus-helper.h
> > > @@ -0,0 +1,26 @@
> > > +/*
> > > + * Copyright (c) Citrix Systems Inc.
> > > + * All rights reserved.
> > > + */
> > > +
> > > +#ifndef HW_XEN_BUS_HELPER_H
> > > +#define HW_XEN_BUS_HELPER_H
> >
> > That should probably include xen_common.h, to have `enum xenbus_state`,
> > `struct xs_handle`, ..
>=20
> Ok.
>=20
> >
> > > +const char *xs_strstate(enum xenbus_state state);
> > > +
> > > +void xs_node_create(struct xs_handle *xsh, const char *node,
> > > +                    struct xs_permissions perms[],
> > > +                    unsigned int nr_perms, Error **errp);
> > > +void xs_node_destroy(struct xs_handle *xsh, const char *node);
> > > +
> > > +void xs_node_vprintf(struct xs_handle *xsh, const char *node,
> > > +                     const char *key, const char *fmt, va_list ap);
> > > +void xs_node_printf(struct xs_handle *xsh, const char *node, const
> char
> > *key,
> > > +                    const char *fmt, ...);
> >
> > This prototype needs GCC_FMT_ATTR(), that's the printf format
> > __attribute__.
> >
> > > +
> > > +int xs_node_vscanf(struct xs_handle *xsh, const char *node, const
> char
> > *key,
> > > +                   const char *fmt, va_list ap);
> > > +int xs_node_scanf(struct xs_handle *xsh, const char *node, const cha=
r
> > *key,
> > > +                  const char *fmt, ...);
> >
> > Maybe here as well.
>=20
> Will do.
>=20
>  Paul
>=20
> >
> >
> > --
> > Anthony PERARD


