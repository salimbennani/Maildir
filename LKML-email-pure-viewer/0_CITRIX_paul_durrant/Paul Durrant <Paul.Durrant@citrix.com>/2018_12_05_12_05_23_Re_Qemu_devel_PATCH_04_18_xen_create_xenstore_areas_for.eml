Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:51:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 76F41580433
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 04:06:07 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 04:06:07 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A3MFJYxFkWE4VNDNpkHe0+J1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7yr8uwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfHoOy?=
 =?us-ascii?q?YYgBD+QDMulEoIfyqEYArQO8CAeuC+7j1zFFimPo0q0hyOkhDRjG3A48E94SrH?=
 =?us-ascii?q?jYstP4P7oSX+Cvy6nIyC3OYelM1jfg7IjDbx4voeyWXbJqa8XRz1UvHB7Cg1uK?=
 =?us-ascii?q?s4PlIjeV2v4DvWiG9epgT/igi2g7qwxqvjevx9ssipPIhoMa0FzL6SJ5wIMsKN?=
 =?us-ascii?q?C+VUV1YsakHYNOuy2GNIZ6WN4uT3xrtSog1LELt562cDIXxJkl3xLTdv+KfoiS?=
 =?us-ascii?q?7h79VOudOzZ1iXJ/dL6hiBu/91WrxPfmWcmuyllKqzJIktnSuXAJ0Bze8syHSv?=
 =?us-ascii?q?pm/ke9wjaDzQ/T6udZIUwukqrbMZEhzqYxlpoVr0vDAjf7lFvqgKKVbEko5/Wk?=
 =?us-ascii?q?5uf9brn4qJKRN5V4hhz8P6g2n8ywG+U4MgwAX2iB/uS80aXu/VTnT7VPk/06i7?=
 =?us-ascii?q?TWv47EJcsFoq61GhRa0oE+6xa5Ezipzs8YkX4DLFJEexKIkZLlOl7TIP3gCfe/?=
 =?us-ascii?q?glKskCpkxvzcP73hBInNIWbHkLv7Ybl97EtcxRE1zdBY4ZJUBbcBIO/pVk/2rt?=
 =?us-ascii?q?zYAQc1MxaozOb/FNV9yoQeVHqLAq+YM6Pdr0WE5+0yI+SXYI8VuTD9K+Uq5vL0?=
 =?us-ascii?q?jH85n0Mdcret3ZcNdH+4GfFmcA2kZ2HxiIIBDXsSpVh5C+jrk0GZFzhUYXm0Qu?=
 =?us-ascii?q?Q7/D58DYunCYLKQMeqmKCA2yGgWYRbY30DBl2SHHO7SoOfRv1ZbSuTJtNmwCUJ?=
 =?us-ascii?q?UKXkR4I/2BXrrgLj1rd8MsLS/SsXs4+l08J6sPbOnxM//iAhEsKGzmuWRHt1lG?=
 =?us-ascii?q?5bezhj9aZjoUt72x+73LJxmfAQQdVV+/NOVBZ8LZPGxvZ2I9vzRhjAbpGCT1Pw?=
 =?us-ascii?q?Efu8BjRkdtssx5ciflxnEtO+xkT71jeuRZMIjaaCAoAc+aPAxXnhYc16ziCVh+?=
 =?us-ascii?q?Eak1A6T54XZiWdjall+l2WXtaRng=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAABivgdchxHrdtBkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBgTCCTxOMcYsvgg18llAUgV8UGBSEQAKDECI?=
 =?us-ascii?q?2Bw0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJbAQEBAQIBAQIkEwwKA?=
 =?us-ascii?q?yYDAwECAwMBAQEBCBEEAQEBHggBBwMBJB4JCAIEEwUDgxmBeggBAwGldzOKK4w?=
 =?us-ascii?q?egVc/gRGCXTWERjsHhVQCiyKEE4Y0im0HAoIkiwCEFiCRL5h+gU0IgX4zGiODP?=
 =?us-ascii?q?IIkAxeOHUExgQeJJoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAABivgdchxHrdtBkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBgTCCTxOMcYsvgg18llAUgV8UGBSEQAKDECI2Bw0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgbDi+CNgUCAxoBBoJbAQEBAQIBAQIkEwwKAyYDAwECAwMBAQE?=
 =?us-ascii?q?BCBEEAQEBHggBBwMBJB4JCAIEEwUDgxmBeggBAwGldzOKK4wegVc/gRGCXTWER?=
 =?us-ascii?q?jsHhVQCiyKEE4Y0im0HAoIkiwCEFiCRL5h+gU0IgX4zGiODPIIkAxeOHUExgQe?=
 =?us-ascii?q?JJoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="55000962"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 04:06:06 -0800
Received: from localhost ([::1]:33725 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUVwL-0003KZ-Ur
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 07:06:05 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43022)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=870045bc7=Paul.Durrant@citrix.com>)
	id 1gUVw4-0003Jg-8O
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:05:51 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=870045bc7=Paul.Durrant@citrix.com>)
	id 1gUVw0-0000hK-1j
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:05:48 -0500
Received: from smtp.ctxuk.citrix.com ([185.25.65.24]:17021
	helo=SMTP.EU.CITRIX.COM)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <prvs=870045bc7=Paul.Durrant@citrix.com>)
	id 1gUVvm-0000Bj-DV; Wed, 05 Dec 2018 07:05:32 -0500
X-IronPort-AV: E=Sophos;i="5.56,317,1539648000"; d="scan'208";a="82820773"
From: Paul Durrant <Paul.Durrant@citrix.com>
To: Anthony Perard <anthony.perard@citrix.com>
Thread-Topic: [PATCH 04/18] xen: create xenstore areas for XenDevice-s
Thread-Index: AQHUgayYuUgB3IvyUUiYDf+F3yeN9aVnFC6AgAkMWqA=
Date: Wed, 5 Dec 2018 12:05:23 +0000
Message-ID: <589a4488f1ba4e4496775cc06bda291d@AMSPEX02CL03.citrite.net>
References: <20181121151211.15997-1-paul.durrant@citrix.com>
	<20181121151211.15997-5-paul.durrant@citrix.com>
	<20181129184841.GJ14786@perard.uk.xensource.com>
In-Reply-To: <20181129184841.GJ14786@perard.uk.xensource.com>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-transport-fromentityheader: Hosted
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 185.25.65.24
Subject: Re: [Qemu-devel] [PATCH 04/18] xen: create xenstore areas for
 XenDevice-s
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Stefano Stabellini <sstabellini@kernel.org>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
	Max Reitz <mreitz@redhat.com>,
	"xen-devel@lists.xenproject.org" <xen-devel@lists.xenproject.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

> -----Original Message-----
> From: Anthony PERARD [mailto:anthony.perard@citrix.com]
> Sent: 29 November 2018 18:49
> To: Paul Durrant <Paul.Durrant@citrix.com>
> Cc: qemu-block@nongnu.org; qemu-devel@nongnu.org; xen-
> devel@lists.xenproject.org; Stefano Stabellini <sstabellini@kernel.org>;
> Kevin Wolf <kwolf@redhat.com>; Max Reitz <mreitz@redhat.com>
> Subject: Re: [PATCH 04/18] xen: create xenstore areas for XenDevice-s
>=20
> On Wed, Nov 21, 2018 at 03:11:57PM +0000, Paul Durrant wrote:
> > This patch adds a new source module, xen-bus-helper.c, which builds on
> > basic libxenstore primitives to provide functions to create (setting
> > permissions appropriately) and destroy xenstore areas, and functions to
> > 'printf' and 'scanf' nodes therein. The main xen-bus code then uses
> > these primitives [1] to initialize and destroy the frontend and backend
> > areas for a XenDevice during realize and unrealize respectively.
> >
> > The 'xen-qdisk' implementation is extended with a 'get_name' method tha=
t
> > returns the VBD number. This number is reqired to 'name' the xenstore
>=20
>                                          ^ required
>=20

Ok.

> > diff --git a/hw/xen/xen-bus-helper.c b/hw/xen/xen-bus-helper.c
> > new file mode 100644
> > index 0000000000..d9ee2ed6a0
> > --- /dev/null
> > +++ b/hw/xen/xen-bus-helper.c
> [...]
> > +void xs_node_destroy(struct xs_handle *xsh, const char *node)
> > +{
> > +    xs_rm(xsh, XBT_NULL, node);
>=20
> We should check for error, and grab errno.
>=20

I'll make all of them fill in an Error *

> > +}
> > +
> > +void xs_node_vprintf(struct xs_handle *xsh, const char *node,
> > +                     const char *key, const char *fmt, va_list ap)
> > +{
> > +    char *path, *value;
> > +
> > +    path =3D (strlen(node) !=3D 0) ? g_strdup_printf("%s/%s", node, ke=
y) :
> > +        g_strdup(key);
>=20
> A comment would be helpful to findout how to use that function,
> especialy the fact that with node=3D"", we write to $key instead of
> $node/$key.

Ok, I'll add comments into the header.

>=20
> > +    value =3D g_strdup_vprintf(fmt, ap);
>=20
> Looks like g_vasprintf() would be better, since it returns the lenght as
> well.
>=20

Yes.

> > +
> > +    xs_write(xsh, XBT_NULL, path, value, strlen(value));
>=20
> You should check for failures, and grab errno.
>=20
> > +    g_free(value);
> > +    g_free(path);
> > +}
> > +
> > +int xs_node_vscanf(struct xs_handle *xsh, const char *node, const char
> *key,
> > +                   const char *fmt, va_list ap)
> > +{
> > +    char *path, *value;
> > +    int rc;
> > +
> > +    path =3D (strlen(node) !=3D 0) ? g_strdup_printf("%s/%s", node, ke=
y) :
> > +        g_strdup(key);
> > +
> > +    value =3D xs_read(xsh, XBT_NULL, path, NULL);
>=20
> The xenstore.h isn't clear about failure of this function, it is
> supposed to return a malloced value. Do we actually need to check if valu=
e
> is NULL?

The comment above xs_read() in xs.c is:

/* Get the value of a single file, nul terminated.                         =
=20
 * Returns a malloced value: call free() on it after use.                  =
=20
 * len indicates length in bytes, not including the nul.                   =
=20
 */

and I think we should check it for NULL before passing it to vsscanf().

>=20
> > +
> > +    rc =3D value ? vsscanf(value, fmt, ap) : EOF;
> > +
> > +    free(value);
> > +    g_free(path);
> > +
> > +    return rc;
> > +}
> > +
> > diff --git a/hw/xen/xen-bus.c b/hw/xen/xen-bus.c
> > index dede2d914a..663aa8e117 100644
> > --- a/hw/xen/xen-bus.c
> > +++ b/hw/xen/xen-bus.c
> [...]
>=20
> > +static void xen_device_backend_destroy(XenDevice *xendev)
> > +{
> > +    XenBus *xenbus =3D XEN_BUS(qdev_get_parent_bus(DEVICE(xendev)));
> > +
> > +    if (!xendev->backend_path) {
> > +        return;
> > +    }
> > +
> > +    g_assert(xenbus->xsh);
> > +
> > +    xs_node_destroy(xenbus->xsh, xendev->backend_path);
> > +    g_free(xendev->backend_path);
>=20
> It would be nice to also set backend_path to NULL.
>=20

Yes, it should be for idempotency.

> > diff --git a/include/hw/xen/xen-bus-helper.h b/include/hw/xen/xen-bus-
> helper.h
> > new file mode 100644
> > index 0000000000..53570650db
> > --- /dev/null
> > +++ b/include/hw/xen/xen-bus-helper.h
> > @@ -0,0 +1,26 @@
> > +/*
> > + * Copyright (c) Citrix Systems Inc.
> > + * All rights reserved.
> > + */
> > +
> > +#ifndef HW_XEN_BUS_HELPER_H
> > +#define HW_XEN_BUS_HELPER_H
>=20
> That should probably include xen_common.h, to have `enum xenbus_state`,
> `struct xs_handle`, ..

Ok.

>=20
> > +const char *xs_strstate(enum xenbus_state state);
> > +
> > +void xs_node_create(struct xs_handle *xsh, const char *node,
> > +                    struct xs_permissions perms[],
> > +                    unsigned int nr_perms, Error **errp);
> > +void xs_node_destroy(struct xs_handle *xsh, const char *node);
> > +
> > +void xs_node_vprintf(struct xs_handle *xsh, const char *node,
> > +                     const char *key, const char *fmt, va_list ap);
> > +void xs_node_printf(struct xs_handle *xsh, const char *node, const cha=
r
> *key,
> > +                    const char *fmt, ...);
>=20
> This prototype needs GCC_FMT_ATTR(), that's the printf format
> __attribute__.
>=20
> > +
> > +int xs_node_vscanf(struct xs_handle *xsh, const char *node, const char
> *key,
> > +                   const char *fmt, va_list ap);
> > +int xs_node_scanf(struct xs_handle *xsh, const char *node, const char
> *key,
> > +                  const char *fmt, ...);
>=20
> Maybe here as well.

Will do.

 Paul

>=20
>=20
> --
> Anthony PERARD

