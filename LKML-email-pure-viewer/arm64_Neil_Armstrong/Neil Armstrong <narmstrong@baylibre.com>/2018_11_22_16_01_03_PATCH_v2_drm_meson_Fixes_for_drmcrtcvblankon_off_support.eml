Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:29:18 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F18DE58037D;
	Thu, 22 Nov 2018 08:01:36 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 08:01:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AuaY9/hW+FGx2DSfEIcwSLZNgnTXV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCHuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwzIHaYJqNNPd8Za7RYdAXSHBdUstLSyBNHoWx?=
 =?us-ascii?q?ZJYPAeobOuZYqpHwqUMQohu/AQmnGf/iyiVNhn/twa06yeMhEQfJ3Ac9GN8Otm?=
 =?us-ascii?q?7brM/wNKcJTeC11q7IzTPMb/5Nwjjy8ojJchQgof6XR7J/b9DdxlUoFwPAl1id?=
 =?us-ascii?q?r5HuMTCN1ukVrWSX8+5tWfiyh2MptQ19uCWjy8QwhoXTh48YyEjI+CFlzIovJN?=
 =?us-ascii?q?C1RlR3bcCrHZZfrS2XOZZ6T8U/SG9yoik60KcJuZujcSgK1psnwxnfZuSZc4iH?=
 =?us-ascii?q?/B3jTvydITRmi3J/frKwmRKy/VKnyu3mWcm4yFdKrixbndnQrn0ByQDf58ydRv?=
 =?us-ascii?q?dg8EqtxyyD2x3Q5+1YO0w5lKjWJ4YkwrEql5oTtUrDHjXxmEXzlKKWckQk+u61?=
 =?us-ascii?q?6+Xoe7nmpYGTN5Vyig7gNqQig8u/AOo+MgcQRWiW4vq81LL98k3jWrlKjeM5kr?=
 =?us-ascii?q?PfsJ/EIcQXvKm5AxVa0oo78RawEy+m0MgEnXkANF9FfBOHj4v3NF3UL/H4EOyy?=
 =?us-ascii?q?g1CtkDdt2vDHMaftApTLLnjfjrjheaxx5FJbyAo21dpf/Y5bCqkdIPLvXU/8rN?=
 =?us-ascii?q?zYAQU4Mwyo2ennD89x1oMDWW2VBK+ZP7jfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtUBEWAUsQYkT+zqj1uCUThUZ3upW6?=
 =?us-ascii?q?I85zc7CJ+pDIvZR4CthqCB0zm/HpFMem9GDVWMG2/yd4qYQ/cMdD6SIsh5nzMe?=
 =?us-ascii?q?TrihS4gh1RK0uA/g0bVnLPHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/9YGsZV5/9TVgc6NITTz+p1C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfsPcl91WjJ2L?=
 =?us-ascii?q?Mhj1Y8RMtPLnOphqh4+wjXBI7JlkGZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAw?=
 =?us-ascii?q?2FxreNbIrsZmUc0z/RCEkCkwAP43mGMRIyCTumo2LbFDZuD07gY1vw8elir3O2?=
 =?us-ascii?q?VlM0zwCPb01my7q1+h4UieaAS/8J2bIEoiMhqzRyHFayxN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUytnwqyBR9KK2G31JB?=
 =?us-ascii?q?bT+Xxo3wNaDNJWn0/xCvbLDW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXYykg54/OyXJgK6i1sj/Y1NIvC+so0RKgf9ZZ?=
 =?us-ascii?q?MKOZGw7+CcwaB86yKOM0n1ildA4LPOdX9KQsJcOpa+OG2LK3POZnhD+ml2VH75?=
 =?us-ascii?q?xn3UKW6iV8TfTE35AbzPGC3wuLTivzg02lss/qh49EfzYSHmykxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwXoHymgye5zy?=
 =?us-ascii?q?Z4kyo0rqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfSj5NXtiUqiztrqFecJP84knsSZUUOS9Z1CVVLj9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iDnNCVi7?=
 =?us-ascii?q?JdWp/9SUl5HYv+C6VmKhUIBTcCbxwYOBsiu7+XNlARmlk/+vnd3nFBAw0TXn2N?=
 =?us-ascii?q?lySSXIsBH8b5Ho16ugMOJrZEloBELm5Mp8FYFziY8whJAW2XgHiZSZ53sHkWHv?=
 =?us-ascii?q?MdpF3aLydmYCRTkOw9TN+gjqxFVjLm6Vx4L+Tnidx8phZ9qgbW8M1CMy8dtKCL?=
 =?us-ascii?q?uK47xehiR6vEC4rQ3KbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJindCmCbGOuABdV2z/epc/Bi9w9cR/PUnI0H3y7IHkZd?=
 =?us-ascii?q?bRYcgSth2SjxfPkexVJIgtmfoNgCptIXj9smE9y+4nkRxu2om3s5OdJGVq+KK5?=
 =?us-ascii?q?HwRUNjnoZ84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5UdktX3PFo6kN2qNKHkF19liRwSdJE9CgAASRjo6hYU0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKcyf7uVuHy?=
 =?us-ascii?q?FB452utgqNJnaAZwRPC2EJVVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpDUm54G8TamDUPSjYblyHXb86cqxez5Dd3rt?=
 =?us-ascii?q?2k8PnwXALv5I2PC6ZdMNl1+hC2h7uDOPCUhCpjNTlY0ZYMz2fSyLcDxF4Slz1u?=
 =?us-ascii?q?dz61HLsaqC7CV7jQlbFXDhIBbyNzNdBF76Y93glLJM7ahcn51r9+jv4pFVhFUU?=
 =?us-ascii?q?btld2uZcwPO2u9Lk/IBF6XNLSaIj3G2933YaK5SbFKkOpYrQG/uTaFHE/lJTmD?=
 =?us-ascii?q?kzjpVxayMeBDli2bPRpeuJ2jfRZpE2TsUNXmahijOt9tkTI22aE0hm/NNWMEMT?=
 =?us-ascii?q?lzaUVNrriR7SNemvp+GmxB4WBjLemLgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC6B5uJp9l2vlOiCzhJpXgVKrnBAhNGlp0JnbIPU950IcGzB5w4X6m?=
 =?us-ascii?q?OfQ0AMrsFgEcH1vKZf4tLGhabyIi1PtdnT+J1PVIDvNMubPS95YlLSEznOAV5d?=
 =?us-ascii?q?QA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAACg0vZbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgVUFghEnjBBfiyKCIZIvhHeBJANMEgEBGBMBiFIiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYigmwCJAsBDQEBNwEFCQI+EgMxAQUBNQWCUUuCA?=
 =?us-ascii?q?gQBnXY8ih2BbDOCdgEBBYcbCBKHTIMPgRwXgUA/gRGBcIt7n3oKCZEkI4lRhzc?=
 =?us-ascii?q?sl10CBAIJAgUPIYElgg1NI4M8ghsMF4NKilM/MgGBBAEBjFQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AWAACg0vZbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgVU?=
 =?us-ascii?q?FghEnjBBfiyKCIZIvhHeBJANMEgEBGBMBiFIiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYigmwCJAsBDQEBNwEFCQI+EgMxAQUBNQWCUUuCAgQBnXY8ih2BbDO?=
 =?us-ascii?q?CdgEBBYcbCBKHTIMPgRwXgUA/gRGBcIt7n3oKCZEkI4lRhzcsl10CBAIJAgUPI?=
 =?us-ascii?q?YElgg1NI4M8ghsMF4NKilM/MgGBBAEBjFQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="139227453"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 08:01:12 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2438051AbeKWClG (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 21:41:06 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:39046 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2391924AbeKWClG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 21:41:06 -0500
Received: by mail-wm1-f65.google.com with SMTP id u13-v6so9611317wmc.4
        for <linux-kernel@vger.kernel.org>; Thu, 22 Nov 2018 08:01:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=baylibre-com.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=avXVXp5/1rPIrpnI1Fss2xx2pja/uAfXzl4UBTq39+k=;
        b=wW52EcV90WmSABXnWBouUYFMl+m+jX6cNxzLnZziUHaEL/7bJpzT9cmQYiusVWmArV
         9XJIkCts42X5KzCocJeTPcGu5y73pPZvpjmHOS43YIT/3QAH+DZjjBPU0pFeuAx9gcKV
         +dWO3ca5IrCC7kqyGO6uo9ObDBtitzXSRBG9R6LqHO19dNx9gnZ6Rh2kfbJt63v0/o2L
         aM6MQaWfXMLTUpVgHOdIz1ir/p8laZx4PpxK7mKAo6Gx/m/bfMQY53O6faDzc0zFzL56
         JXhOoHMHb6YSBibgA+TI3camtvWrJ/2pwsMb5V4v9rqa1A+gSrD4qxdFpgXRq5GxkxPM
         ZrfQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=avXVXp5/1rPIrpnI1Fss2xx2pja/uAfXzl4UBTq39+k=;
        b=EO2UmouHEyCUXiFgjnT7fMkcJMciI7uYWCwIe1ecHY7S4tgK5J6Rrzu+10jRf4+Tho
         D61Vzuk28bzO78nvpkrNGI/f+Exq2wSpXaMnrgWLRLTu9+ze5Jl00Xt38MPHEf+5Ti2y
         sL64IOVCWxbY8Xp4hvV5FtwijDF9PTXEyuQ4aGjQ5k26iIvSJpJUHxNEXiq63qd5PFHO
         ArcMKsH1pWlu00LK7IPS4BusxYn8CPRsBaAuQUkZPVDo0v4N18sMEK4x9zRDaXGwGYym
         tbMDikG1u/wIkHiNSqov/DtmINBFrUjySI4BQmVdJazH6DVHx1yZ+yBRM/rOz4t3VCW6
         +seQ==
X-Gm-Message-State: AA+aEWY3+AlyOJKJ5DPZz5+udM/EK3Psjhkx9Y6ybd8le47FTheuZSzt
        OHa0I3o8bCK8XooIasw9u7jlEw==
X-Google-Smtp-Source: AFSGD/UhZNeUOyDkE2gZnGrKr75oCTTjbVKDqHid/3a77ZabgIERDU9PKRNbFDJI+MUHuVS/aJ6ooA==
X-Received: by 2002:a1c:e184:: with SMTP id y126mr7300225wmg.13.1542902465973;
        Thu, 22 Nov 2018 08:01:05 -0800 (PST)
Received: from bender.baylibre.local (lmontsouris-657-1-212-31.w90-63.abo.wanadoo.fr. [90.63.244.31])
        by smtp.gmail.com with ESMTPSA id v189-v6sm5058288wmd.40.2018.11.22.08.01.04
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 22 Nov 2018 08:01:05 -0800 (PST)
From: Neil Armstrong <narmstrong@baylibre.com>
To: daniel@ffwll.ch
Cc: Neil Armstrong <narmstrong@baylibre.com>,
        dri-devel@lists.freedesktop.org, linux-amlogic@lists.infradead.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH v2] drm/meson: Fixes for drm_crtc_vblank_on/off support
Date: Thu, 22 Nov 2018 17:01:03 +0100
Message-Id: <20181122160103.10993-1-narmstrong@baylibre.com>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Since Linux 4.17, calls to drm_crtc_vblank_on/off are mandatory, and we get
a warning when ctrc is disabled :
" driver forgot to call drm_crtc_vblank_off()"

But, the vsync IRQ was not totally disabled due the transient hardware
state and specific interrupt line, thus adding proper IRQ masking from
the HHI system control registers.

The last change fixes a race condition introduced by calling the added
drm_crtc_vblank_on/off when an HPD event occurs from the HDMI connector,
triggering a WARN_ON() in the _atomic_begin() callback when the CRTC
is disabled, thus also triggering a WARN_ON() in drm_vblank_put() :

WARNING: CPU: 0 PID: 1185 at drivers/gpu/drm/meson/meson_crtc.c:157 meson_crtc_atomic_begin+0x78/0x80
[...]
Call trace:
  meson_crtc_atomic_begin+0x78/0x80
  drm_atomic_helper_commit_planes+0x140/0x218
  drm_atomic_helper_commit_tail+0x38/0x80
  commit_tail+0x7c/0x80
  drm_atomic_helper_commit+0xdc/0x150
  drm_atomic_commit+0x54/0x60
  restore_fbdev_mode_atomic+0x198/0x238
  restore_fbdev_mode+0x6c/0x1c0
  drm_fb_helper_restore_fbdev_mode_unlocked+0x7c/0xf0
  drm_fb_helper_set_par+0x34/0x60
  drm_fb_helper_hotplug_event.part.28+0xb8/0xc8
  drm_fbdev_client_hotplug+0xa4/0xe0
  drm_client_dev_hotplug+0x90/0xe0
  drm_kms_helper_hotplug_event+0x3c/0x48
  drm_helper_hpd_irq_event+0x134/0x168
  dw_hdmi_top_thread_irq+0x3c/0x50
[...]
WARNING: CPU: 0 PID: 1185 at drivers/gpu/drm/drm_vblank.c:1026 drm_vblank_put+0xb4/0xc8
[...]
 Call trace:
  drm_vblank_put+0xb4/0xc8
  drm_crtc_vblank_put+0x24/0x30
  drm_atomic_helper_wait_for_vblanks.part.9+0x130/0x2b8
  drm_atomic_helper_commit_tail+0x68/0x80
[...]

The issue is that vblank need to be enabled in any occurence of :
- atomic_enable()
- atomic_begin() and state->enable == true, which was not the case

Moving the CRTC enable code to a common function and calling in one
of these occurence solves this race condition and makes sure vblank
is enabled in each call to _atomic_begin() from the HPD event leading
to drm_atomic_helper_commit_planes().

To Summarize :
- Make sure that the CRTC code will call the drm_crtc_vblank_on()/off()
- *Really* mask the Vsync IRQ
- Initialize and enable vblank at the first _atomic_begin()/_atomic_enable()

Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
---
 drivers/gpu/drm/meson/meson_crtc.c | 27 +++++++++++++++++++++++++--
 drivers/gpu/drm/meson/meson_venc.c |  3 +++
 2 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/meson/meson_crtc.c b/drivers/gpu/drm/meson/meson_crtc.c
index d78168f979db..75d97f1b2e8f 100644
--- a/drivers/gpu/drm/meson/meson_crtc.c
+++ b/drivers/gpu/drm/meson/meson_crtc.c
@@ -46,6 +46,7 @@ struct meson_crtc {
 	struct drm_crtc base;
 	struct drm_pending_vblank_event *event;
 	struct meson_drm *priv;
+	bool enabled;
 };
 #define to_meson_crtc(x) container_of(x, struct meson_crtc, base)
 
@@ -81,8 +82,7 @@ static const struct drm_crtc_funcs meson_crtc_funcs = {
 
 };
 
-static void meson_crtc_atomic_enable(struct drm_crtc *crtc,
-				     struct drm_crtc_state *old_state)
+static void meson_crtc_enable(struct drm_crtc *crtc)
 {
 	struct meson_crtc *meson_crtc = to_meson_crtc(crtc);
 	struct drm_crtc_state *crtc_state = crtc->state;
@@ -106,6 +106,22 @@ static void meson_crtc_atomic_enable(struct drm_crtc *crtc,
 	writel_bits_relaxed(VPP_POSTBLEND_ENABLE, VPP_POSTBLEND_ENABLE,
 			    priv->io_base + _REG(VPP_MISC));
 
+	drm_crtc_vblank_on(crtc);
+
+	meson_crtc->enabled = true;
+}
+
+static void meson_crtc_atomic_enable(struct drm_crtc *crtc,
+				     struct drm_crtc_state *old_state)
+{
+	struct meson_crtc *meson_crtc = to_meson_crtc(crtc);
+	struct meson_drm *priv = meson_crtc->priv;
+
+	DRM_DEBUG_DRIVER("\n");
+
+	if (!meson_crtc->enabled)
+		meson_crtc_enable(crtc);
+
 	priv->viu.osd1_enabled = true;
 }
 
@@ -117,6 +133,8 @@ static void meson_crtc_atomic_disable(struct drm_crtc *crtc,
 
 	DRM_DEBUG_DRIVER("\n");
 
+	drm_crtc_vblank_off(crtc);
+
 	priv->viu.osd1_enabled = false;
 	priv->viu.osd1_commit = false;
 
@@ -135,6 +153,8 @@ static void meson_crtc_atomic_disable(struct drm_crtc *crtc,
 
 		crtc->state->event = NULL;
 	}
+
+	meson_crtc->enabled = false;
 }
 
 static void meson_crtc_atomic_begin(struct drm_crtc *crtc,
@@ -143,6 +163,9 @@ static void meson_crtc_atomic_begin(struct drm_crtc *crtc,
 	struct meson_crtc *meson_crtc = to_meson_crtc(crtc);
 	unsigned long flags;
 
+	if (crtc->state->enable && !meson_crtc->enabled)
+		meson_crtc_enable(crtc);
+
 	if (crtc->state->event) {
 		WARN_ON(drm_crtc_vblank_get(crtc) != 0);
 
diff --git a/drivers/gpu/drm/meson/meson_venc.c b/drivers/gpu/drm/meson/meson_venc.c
index 9be0376e0329..ab72ddda242d 100644
--- a/drivers/gpu/drm/meson/meson_venc.c
+++ b/drivers/gpu/drm/meson/meson_venc.c
@@ -71,6 +71,7 @@
  */
 
 /* HHI Registers */
+#define HHI_GCLK_MPEG2		0x148 /* 0x52 offset in data sheet */
 #define HHI_VDAC_CNTL0		0x2F4 /* 0xbd offset in data sheet */
 #define HHI_VDAC_CNTL1		0x2F8 /* 0xbe offset in data sheet */
 #define HHI_HDMI_PHY_CNTL0	0x3a0 /* 0xe8 offset in data sheet */
@@ -1663,10 +1664,12 @@ unsigned int meson_venci_get_field(struct meson_drm *priv)
 void meson_venc_enable_vsync(struct meson_drm *priv)
 {
 	writel_relaxed(2, priv->io_base + _REG(VENC_INTCTRL));
+	regmap_update_bits(priv->hhi, HHI_GCLK_MPEG2, BIT(25), BIT(25));
 }
 
 void meson_venc_disable_vsync(struct meson_drm *priv)
 {
+	regmap_update_bits(priv->hhi, HHI_GCLK_MPEG2, BIT(25), 0);
 	writel_relaxed(0, priv->io_base + _REG(VENC_INTCTRL));
 }
 
-- 
2.19.1

