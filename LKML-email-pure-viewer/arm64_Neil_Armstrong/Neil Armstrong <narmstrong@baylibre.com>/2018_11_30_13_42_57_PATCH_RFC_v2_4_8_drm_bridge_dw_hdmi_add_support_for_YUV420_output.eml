Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:18:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DE282580224;
	Fri, 30 Nov 2018 05:43:37 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 05:43:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ACLacWxPHe9wPy/JUrYUl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPrzo8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCOgOPehXoIfyvFsOtRmzCBKwCO7s0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMtNv6KqYSUeSox6TU1zXDauhW2Svn6IjPdBAhruyHULV2ccXL00kvEhjFjkmK?=
 =?us-ascii?q?qYziOTOV2f8AvHOB4OtgUeKvinUoqxtvrTS12sgsjYzJi5sTx1vZ+yt5x4M1Ks?=
 =?us-ascii?q?e5SE59edOkH5pQtz2aN4trWcwuWX1nuCE/yrAApJW1fzAKxYw5yxLDb/GLaZWE?=
 =?us-ascii?q?7xz9WOqLPDt1h25pdKi+ihuw6UStzvHwWtO13VtEtCZJjNbBu38X2xHd98SKTO?=
 =?us-ascii?q?Z28F271jaVzQ/T7/lJIUAqmqrfLJ4s2qAwlpUNvkTZBCP2m1v5jLWQdko6/uik?=
 =?us-ascii?q?8ePnYq/pppOENo90jB/xMrg2l8ChHeg1NhICU3WV9OiizrHv4E70TKlQgvA3kK?=
 =?us-ascii?q?TVqJXaKt4apq69DQ9VyIEj6xOnAjei0dQYm2QHLV1cdBKEkYfpIVfOL+78Dfum?=
 =?us-ascii?q?hFStnjFryO7cPrD6HJXNIWbMkK37cbZ+9UFc0gwzws5b555ODbEBOv3zVlfrtN?=
 =?us-ascii?q?PEFh85LxC0w+H/BdV514MeWnyADrWWMaPPqlKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z4PYnCiAvtmO1mZYWbrgtoZEWcFpAs+TPDwh12FSzJTZ2uyUL?=
 =?us-ascii?q?g65jE0E4+mCYbDRoawgL2Oxiu7H5tWZnxYBVCIC3vna4KEW/IUYiKIPsBhiiAE?=
 =?us-ascii?q?VaSmS4I51xGusxH1x6BkLurT/C0Ys5Xj2cNx5+3SkxEy6DN1A96c02GLU2F7gG?=
 =?us-ascii?q?cISyUq06B4pEx30k2D3rRgg/xECdxT4OtEXR0hNZ7cyOx6CMr+WhjbcdeLU1um?=
 =?us-ascii?q?RtSmATcsTtM+2dMOYkB9G8m8gRDHxSalH7gVl7mTDpwu7q3cx2TxJ9p6y3ve16?=
 =?us-ascii?q?kulV8mTtFLNW2nnKF/8QfTCpXNk0WYkaaqaKsd0DTM9GeF0WqBokVYXBRsXqXC?=
 =?us-ascii?q?WHAVflHWosjh5kPeU7+uDqwqPRZbxs6cNKRGcN3pgk9ARPf4JtveZWW9m2OzBR?=
 =?us-ascii?q?aNwrOBd47qe2Qb3CXAB0kIiQET/XCaNQcgAietuX7RDDtrFVj3eUPj7fF+qG+n?=
 =?us-ascii?q?Tk8z1wyFcldu16Sr9RIPhfyTUfUT3qkatycnsDh0GFe939TLC9uPvQZhfaNcYc?=
 =?us-ascii?q?8j71dDz27Wqwt9Ppm4JaB4mlEeaxh3v1/p1xhvFoVAkM0qrHQ2zApyKaOUyk9B?=
 =?us-ascii?q?eymf3ZDqPr3XK2/y/B+0Zq7S21He1suW+6gV5PQ5rVXjoB+mFk44/3p71NlV1m?=
 =?us-ascii?q?OW5o/WAwoKTZLxTkE3+gBgqLHefCY86J3b1H12Paavrz/NxsgmBO0myhanYddS?=
 =?us-ascii?q?K6eEFA70E80HCMmiMu0qm161bh0aOOBe7rI7P8Sjd/Gewq6kIP5gnC66jWRA+I?=
 =?us-ascii?q?180l+M+zBgReLS3pcFw+uX3g2IVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClMc2c+mZQCdb0bg0g1Xz0gXp2KomTG5zz?=
 =?us-ascii?q?Btjz4mtK6f0zHQzOT4cxoHPHVGRG1jjVfqPIi1gMoWXEmubwg1ihSl4Vz2yLRc?=
 =?us-ascii?q?pKR6N2PTW1tHfzDqL2F+Vau9rrqDY89V5JIoqylXS/m8YVaBR775ohsa1T7jHm?=
 =?us-ascii?q?REyDA6cTGqpov2nxhghG2BK3ZzqWLTedtsyhfH+NzcWflR0yIERCZikznXBVu8?=
 =?us-ascii?q?P96z8dWPjZjDseO+V2OnVpJNdynm1oeAtCq95W13DhyzhfGzmtv7EQck1S/3zc?=
 =?us-ascii?q?VlVSLNrBzkeInky7y6Mf57fklvHFL969B1GoZknosyhZEQ32MXhpGU/XoBjGfy?=
 =?us-ascii?q?Ps9X2aP4bHoRWzELx8TZ7xTi2E1mNniJ3Z72Vm2Bwst9YNm3emAW1Tg878xQCK?=
 =?us-ascii?q?eU8aZLnS16olejqQLRYP59nioSyPc06X4ahf0JtxQpzimHHr8SGkxYNzT2lxuU?=
 =?us-ascii?q?99C+sLlXZGG3fLi11Up+nsquAKuMow5CQ3b5ZoktHTVr4cphKlLM32b+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM3lt/KW8?=
 =?us-ascii?q?AhJCNzz6fcUT+iz2jaZFn8abxISvHpRnGjUWU5rkV/OoEDQOtfv5MwaCCiEzqn?=
 =?us-ascii?q?CeGbDHBw+Q9F9mr27TE5CsL3yYP2MWzdJmRBmAPkBfhB0UUS4+np44EACq2cPg?=
 =?us-ascii?q?fF145jAX+l73tB9Mxvh0OBn4V2fVvB2oZSssSJiDMBpW6RlP50XPPsyb8O1zBD?=
 =?us-ascii?q?tU/oG7oAyON2ybZBlIDWcTVUyfHF3jOriu5d/d8+mXHOa+Lv3OYamQpuxaTfuH?=
 =?us-ascii?q?2ZWv0o5+9TaWKsqPJmViD+E82kdbXXF5HNnZmywSSyMNkSLBddWbpBC6+i14tc?=
 =?us-ascii?q?2/9PXrWATy5YqAEbdSMNNv+wyojqeHLeKfmCF5KTNA3JMW2XDI0KQf3EIViyx2?=
 =?us-ascii?q?dzmiD7UAtS3OTKLRgKNXDAQbayR8NMRW9aI8wxJNNNXfitP00L54k/E0B01EVV?=
 =?us-ascii?q?znhsGme8gKL3uhO1PAAUaBLK6GKiHTw8HrfaO8TqVdg/9JtxKrozaUDU/iMi6H?=
 =?us-ascii?q?lznoTB2vNeBMjCeGPB1Roo29cxBtCXT9Q9LicBG0LNh3jTguy70umnzKLXIcMS?=
 =?us-ascii?q?R7c05Vsr2Q7CZYju9jFGBb8nVlLfeLmyCC4uncK5YWt+ZrAytum+Jb5nQ616Va?=
 =?us-ascii?q?7CVeSPNpnyvSq8Zko0u6nemX1jpnTB1Opy5LhY2Ru0ViPKTZ9p9YVnfF/BIC92?=
 =?us-ascii?q?OQCxsRqtthC93vvb1Qy9fVmKLyLjdC78zb/c8GC8fIL8KHNSlpDR28ESTfDAoZ?=
 =?us-ascii?q?URagMm3SjlFHl+ubsHqPodxyo97skZgCQ5dAXVkuC/UVTE9iGZhKBJ5qRD4ijf?=
 =?us-ascii?q?iDjcgD5XOksDHQSMhTpZfBXPWbG/mpIzGcyfF8ZxoMwKvgZbYaPID/kxh6LEtz?=
 =?us-ascii?q?lonOM1LdW99QvjdmaA4k5klApjw2dWQ111OtSh6k5nBbQf62lTYsjQB9JO8t9S?=
 =?us-ascii?q?/3pVwwIwyO7As9kUo20e75FTqXfSS5eKe9XIJRIzHyq0U6MtX3TlAxJQi7jU1h?=
 =?us-ascii?q?OXHeRqpYlbdIf2dslAvdv91EHvsPY7dDZUo2yPCTL9wy1E9AsCKhygcT4+LfDI?=
 =?us-ascii?q?B+jgwsframpmNE2gh5YZg+IqmGd/kB9URZmq/b5nzg7es22gJLYh9VqG4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AdAABWPQFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBAYJogQInjHCLKYIhlzSBJANPDwEBGAsIAYd2IjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDEIBEAGBYiQBgmIDAwECJAsBDQEBNwEFCQEBPhIDMQEFA?=
 =?us-ascii?q?RwGARIFgxwBggEEAQqbADyKHYFsM4J2AQEFhygDBRKHWoMSgRwXgUA/gRGBcIJ?=
 =?us-ascii?q?jgV0ChzygLQoJhn+DL4Z+I4lZh0aIe4RkilcCBAIJAgUPIYEmAYILTSODPIIbD?=
 =?us-ascii?q?AwLg0qKVD8yAYEEAQGCOIsRAQE?=
X-IPAS-Result: =?us-ascii?q?A0AdAABWPQFch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBAYJ?=
 =?us-ascii?q?ogQInjHCLKYIhlzSBJANPDwEBGAsIAYd2IjUIDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDEIBEAGBYiQBgmIDAwECJAsBDQEBNwEFCQEBPhIDMQEFARwGARIFgxwBggE?=
 =?us-ascii?q?EAQqbADyKHYFsM4J2AQEFhygDBRKHWoMSgRwXgUA/gRGBcIJjgV0ChzygLQoJh?=
 =?us-ascii?q?n+DL4Z+I4lZh0aIe4RkilcCBAIJAgUPIYEmAYILTSODPIIbDAwLg0qKVD8yAYE?=
 =?us-ascii?q?EAQGCOIsRAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="140254574"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 05:43:36 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726897AbeLAAwc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 19:52:32 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:36806 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726900AbeLAAwb (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 19:52:31 -0500
Received: by mail-wr1-f68.google.com with SMTP id u3so5337557wrs.3
        for <linux-kernel@vger.kernel.org>; Fri, 30 Nov 2018 05:43:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=baylibre-com.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=gyebw/EI077PXzjcmm/oCYFx4PvbCD+M6lZz10KG+WU=;
        b=1nf6iPuU+OMti4OPU4Mgq4GLgftxYRFhZMkbRY35GSB3l6VCAa8wEtcLy7wfR6qmtI
         ra4BidzI2IvcmIgfBxK49At5qgzN1L9SrheHEOmWe9zThPkP0G9+nE60zjz11aD0acIv
         6XjRHG95qK+rOS43XYnGamqJebqwRintYi6igSvbPSD7AKa7wXNKpWfSVy7TvD3/p4Oa
         DApExTQfrAM42n8W3JdEO2oXglD/WYSLkANip7C984Ppuis4IroTBuGuy75UDa5BuWGd
         zBNDErS9WQUEVDklsFM8T9iklJDE2Cc96dfhZ1hGN20UO7Hn6zNRqE4/qDPQVoe+iSNX
         BaXw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=gyebw/EI077PXzjcmm/oCYFx4PvbCD+M6lZz10KG+WU=;
        b=CtCwMq+a6nMtA+gfD4dV02/gGBYa7CSd2Slb+DosUa435KkTQh1IzgN3vn3h2G5E31
         1pie5IN3f8nRmO/kXGuS0FMZTwAE3YxggzBChaePpmKVNaf7EJhD7UWuPxHCkCzUhcve
         mtwRIALM4CvVqj70jnslUtA+BeAnOOu5yCE52GUI9M0IXBsPQ2RNmUNT3RAAvrM3lnFo
         zXpYicNpIWmeqnsJbgKJf0q3hDGX3QZc6St51IQGv2rfef0oVc7lNGfjQp6b1ZPUhCiZ
         VmlBBbxQ0QLyIgXiQUXD8Ux6lf8CzCT5KzvICAcaEQY70KSdRsauiBr4HktUOOXgzBTB
         U/Yg==
X-Gm-Message-State: AA+aEWblrsIyW4SqoXrw00LAsDidenYV1GqkEAiZTBfxRv497c+pEfI9
        uVwXHAIntfSdI/Lkd7j+AOZ3UMYiP4i1Yg==
X-Google-Smtp-Source: AFSGD/W1wWdj6sMnwgPoBoRb3O1xCMLMLycnaXW4nFAesnJyh8OuWm0L1gPMUXCRluuD9xFcg3jW2Q==
X-Received: by 2002:adf:ef0d:: with SMTP id e13mr4935471wro.29.1543585388974;
        Fri, 30 Nov 2018 05:43:08 -0800 (PST)
Received: from bender.baylibre.local (lmontsouris-657-1-212-31.w90-63.abo.wanadoo.fr. [90.63.244.31])
        by smtp.gmail.com with ESMTPSA id 125sm6864898wml.35.2018.11.30.05.43.07
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Fri, 30 Nov 2018 05:43:08 -0800 (PST)
From: Neil Armstrong <narmstrong@baylibre.com>
To: architt@codeaurora.org, a.hajda@samsung.com,
        Laurent.pinchart@ideasonboard.com,
        Philipp Zabel <p.zabel@pengutronix.de>,
        Sandy Huang <hjc@rock-chips.com>,
        =?UTF-8?q?Heiko=20St=C3=BCbner?= <heiko@sntech.de>,
        maxime.ripard@bootlin.com
Cc: Neil Armstrong <narmstrong@baylibre.com>,
        dri-devel@lists.freedesktop.org, linux-amlogic@lists.infradead.org,
        linux-kernel@vger.kernel.org, Zheng Yang <zhengyang@rock-chips.com>
Subject: [PATCH RFC v2 4/8] drm/bridge: dw-hdmi: add support for YUV420 output
Date: Fri, 30 Nov 2018 14:42:57 +0100
Message-Id: <20181130134301.17963-5-narmstrong@baylibre.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181130134301.17963-1-narmstrong@baylibre.com>
References: <20181130134301.17963-1-narmstrong@baylibre.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

In order to support the HDMI2.0 YUV420 display modes, this patch
adds support for the YUV420 TMDS Clock divided by 2 and the controller
passthrough mode.

YUV420 Synopsys PHY support will need some specific configuration table
to support theses modes.

This patch is based on work from Zheng Yang <zhengyang@rock-chips.com> in
the Rockchip Linux 4.4 BSP at [1]

[1] https://github.com/rockchip-linux/kernel/tree/release-4.4

Cc: Zheng Yang <zhengyang@rock-chips.com>
Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
---
 drivers/gpu/drm/bridge/synopsys/dw-hdmi.c | 68 ++++++++++++++++++-----
 1 file changed, 54 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
index fcd941d52753..4a9a24e854db 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
@@ -99,6 +99,7 @@ struct hdmi_vmode {
 	unsigned int mpixelclock;
 	unsigned int mpixelrepetitioninput;
 	unsigned int mpixelrepetitionoutput;
+	unsigned int mtmdsclock;
 };
 
 struct hdmi_data_info {
@@ -543,7 +544,7 @@ static void hdmi_init_clk_regenerator(struct dw_hdmi *hdmi)
 static void hdmi_clk_regenerator_update_pixel_clock(struct dw_hdmi *hdmi)
 {
 	mutex_lock(&hdmi->audio_mutex);
-	hdmi_set_clk_regenerator(hdmi, hdmi->hdmi_data.video_mode.mpixelclock,
+	hdmi_set_clk_regenerator(hdmi, hdmi->hdmi_data.video_mode.mtmdsclock,
 				 hdmi->sample_rate);
 	mutex_unlock(&hdmi->audio_mutex);
 }
@@ -552,7 +553,7 @@ void dw_hdmi_set_sample_rate(struct dw_hdmi *hdmi, unsigned int rate)
 {
 	mutex_lock(&hdmi->audio_mutex);
 	hdmi->sample_rate = rate;
-	hdmi_set_clk_regenerator(hdmi, hdmi->hdmi_data.video_mode.mpixelclock,
+	hdmi_set_clk_regenerator(hdmi, hdmi->hdmi_data.video_mode.mtmdsclock,
 				 hdmi->sample_rate);
 	mutex_unlock(&hdmi->audio_mutex);
 }
@@ -653,6 +654,20 @@ static bool hdmi_bus_fmt_is_yuv422(unsigned int bus_format)
 	}
 }
 
+static bool hdmi_bus_fmt_is_yuv420(unsigned int bus_format)
+{
+	switch (bus_format) {
+	case MEDIA_BUS_FMT_UYYVYY8_0_5X24:
+	case MEDIA_BUS_FMT_UYYVYY10_0_5X30:
+	case MEDIA_BUS_FMT_UYYVYY12_0_5X36:
+	case MEDIA_BUS_FMT_UYYVYY16_0_5X48:
+		return true;
+
+	default:
+		return false;
+	}
+}
+
 static int hdmi_bus_fmt_color_depth(unsigned int bus_format)
 {
 	switch (bus_format) {
@@ -882,7 +897,8 @@ static void hdmi_video_packetize(struct dw_hdmi *hdmi)
 	u8 val, vp_conf;
 
 	if (hdmi_bus_fmt_is_rgb(hdmi->hdmi_data.enc_out_bus_format) ||
-	    hdmi_bus_fmt_is_yuv444(hdmi->hdmi_data.enc_out_bus_format)) {
+	    hdmi_bus_fmt_is_yuv444(hdmi->hdmi_data.enc_out_bus_format) ||
+	    hdmi_bus_fmt_is_yuv420(hdmi->hdmi_data.enc_out_bus_format)) {
 		switch (hdmi_bus_fmt_color_depth(
 					hdmi->hdmi_data.enc_out_bus_format)) {
 		case 8:
@@ -1036,7 +1052,7 @@ EXPORT_SYMBOL_GPL(dw_hdmi_phy_i2c_write);
  */
 void dw_hdmi_set_high_tmds_clock_ratio(struct dw_hdmi *hdmi)
 {
-	unsigned long mtmdsclock = hdmi->hdmi_data.video_mode.mpixelclock;
+	unsigned long mtmdsclock = hdmi->hdmi_data.video_mode.mtmdsclock;
 
 	/* Control for TMDS Bit Period/TMDS Clock-Period Ratio */
 	if (hdmi->connector.display_info.hdmi.scdc.supported) {
@@ -1198,6 +1214,8 @@ static int hdmi_phy_configure_dwc_hdmi_3d_tx(struct dw_hdmi *hdmi,
 	const struct dw_hdmi_curr_ctrl *curr_ctrl = pdata->cur_ctr;
 	const struct dw_hdmi_phy_config *phy_config = pdata->phy_config;
 
+	/* TOFIX Will need 420 specific PHY configuration tables */
+
 	/* PLL/MPLL Cfg - always match on final entry */
 	for (; mpll_config->mpixelclock != ~0UL; mpll_config++)
 		if (mpixelclock <= mpll_config->mpixelclock)
@@ -1245,6 +1263,7 @@ static int hdmi_phy_configure(struct dw_hdmi *hdmi)
 	const struct dw_hdmi_phy_data *phy = hdmi->phy.data;
 	const struct dw_hdmi_plat_data *pdata = hdmi->plat_data;
 	unsigned long mpixelclock = hdmi->hdmi_data.video_mode.mpixelclock;
+	unsigned long mtmdsclock = hdmi->hdmi_data.video_mode.mtmdsclock;
 	int ret;
 
 	dw_hdmi_phy_power_off(hdmi);
@@ -1273,7 +1292,7 @@ static int hdmi_phy_configure(struct dw_hdmi *hdmi)
 	}
 
 	/* Wait for resuming transmission of TMDS clock and data */
-	if (mpixelclock > HDMI14_MAX_TMDSCLK)
+	if (mtmdsclock > HDMI14_MAX_TMDSCLK)
 		msleep(100);
 
 	return dw_hdmi_phy_power_on(hdmi);
@@ -1383,6 +1402,9 @@ static void hdmi_config_AVI(struct dw_hdmi *hdmi, struct drm_display_mode *mode)
 	struct hdmi_avi_infoframe frame;
 	u8 val;
 
+	if (hdmi_bus_fmt_is_yuv420(hdmi->hdmi_data.enc_out_bus_format))
+		is_hdmi2_sink = true;
+
 	/* Initialise info frame from DRM mode */
 	drm_hdmi_avi_infoframe_from_display_mode(&frame, mode, is_hdmi2_sink);
 
@@ -1390,6 +1412,8 @@ static void hdmi_config_AVI(struct dw_hdmi *hdmi, struct drm_display_mode *mode)
 		frame.colorspace = HDMI_COLORSPACE_YUV444;
 	else if (hdmi_bus_fmt_is_yuv422(hdmi->hdmi_data.enc_out_bus_format))
 		frame.colorspace = HDMI_COLORSPACE_YUV422;
+	else if (hdmi_bus_fmt_is_yuv420(hdmi->hdmi_data.enc_out_bus_format))
+		frame.colorspace = HDMI_COLORSPACE_YUV420;
 	else
 		frame.colorspace = HDMI_COLORSPACE_RGB;
 
@@ -1547,15 +1571,18 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 	struct drm_hdmi_info *hdmi_info = &hdmi->connector.display_info.hdmi;
 	struct hdmi_vmode *vmode = &hdmi->hdmi_data.video_mode;
 	int hblank, vblank, h_de_hs, v_de_vs, hsync_len, vsync_len;
-	unsigned int vdisplay;
+	unsigned int vdisplay, hdisplay;
 
-	vmode->mpixelclock = mode->clock * 1000;
+	vmode->mtmdsclock = vmode->mpixelclock = mode->clock * 1000;
 
 	dev_dbg(hdmi->dev, "final pixclk = %d\n", vmode->mpixelclock);
 
+	if (hdmi_bus_fmt_is_yuv420(hdmi->hdmi_data.enc_out_bus_format))
+		vmode->mtmdsclock /= 2;
+
 	/* Set up HDMI_FC_INVIDCONF */
 	inv_val = (hdmi->hdmi_data.hdcp_enable ||
-		   vmode->mpixelclock > HDMI14_MAX_TMDSCLK ||
+		   vmode->mtmdsclock > HDMI14_MAX_TMDSCLK ||
 		   hdmi_info->scdc.scrambling.low_rates ?
 		HDMI_FC_INVIDCONF_HDCP_KEEPOUT_ACTIVE :
 		HDMI_FC_INVIDCONF_HDCP_KEEPOUT_INACTIVE);
@@ -1589,6 +1616,22 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 
 	hdmi_writeb(hdmi, inv_val, HDMI_FC_INVIDCONF);
 
+	hdisplay = mode->hdisplay;
+	hblank = mode->htotal - mode->hdisplay;
+	h_de_hs = mode->hsync_start - mode->hdisplay;
+	hsync_len = mode->hsync_end - mode->hsync_start;
+
+	/*
+	 * When we're setting a YCbCr420 mode, we need
+	 * to adjust the horizontal timing to suit.
+	 */
+	if (hdmi_bus_fmt_is_yuv420(hdmi->hdmi_data.enc_out_bus_format)) {
+		hdisplay /= 2;
+		hblank /= 2;
+		h_de_hs /= 2;
+		hsync_len /= 2;
+	}
+
 	vdisplay = mode->vdisplay;
 	vblank = mode->vtotal - mode->vdisplay;
 	v_de_vs = mode->vsync_start - mode->vdisplay;
@@ -1607,7 +1650,7 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 
 	/* Scrambling Control */
 	if (hdmi_info->scdc.supported) {
-		if (vmode->mpixelclock > HDMI14_MAX_TMDSCLK ||
+		if (vmode->mtmdsclock > HDMI14_MAX_TMDSCLK ||
 		    hdmi_info->scdc.scrambling.low_rates) {
 			/*
 			 * HDMI2.0 Specifies the following procedure:
@@ -1645,15 +1688,14 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 	}
 
 	/* Set up horizontal active pixel width */
-	hdmi_writeb(hdmi, mode->hdisplay >> 8, HDMI_FC_INHACTV1);
-	hdmi_writeb(hdmi, mode->hdisplay, HDMI_FC_INHACTV0);
+	hdmi_writeb(hdmi, hdisplay >> 8, HDMI_FC_INHACTV1);
+	hdmi_writeb(hdmi, hdisplay, HDMI_FC_INHACTV0);
 
 	/* Set up vertical active lines */
 	hdmi_writeb(hdmi, vdisplay >> 8, HDMI_FC_INVACTV1);
 	hdmi_writeb(hdmi, vdisplay, HDMI_FC_INVACTV0);
 
 	/* Set up horizontal blanking pixel region width */
-	hblank = mode->htotal - mode->hdisplay;
 	hdmi_writeb(hdmi, hblank >> 8, HDMI_FC_INHBLANK1);
 	hdmi_writeb(hdmi, hblank, HDMI_FC_INHBLANK0);
 
@@ -1661,7 +1703,6 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 	hdmi_writeb(hdmi, vblank, HDMI_FC_INVBLANK);
 
 	/* Set up HSYNC active edge delay width (in pixel clks) */
-	h_de_hs = mode->hsync_start - mode->hdisplay;
 	hdmi_writeb(hdmi, h_de_hs >> 8, HDMI_FC_HSYNCINDELAY1);
 	hdmi_writeb(hdmi, h_de_hs, HDMI_FC_HSYNCINDELAY0);
 
@@ -1669,7 +1710,6 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
 	hdmi_writeb(hdmi, v_de_vs, HDMI_FC_VSYNCINDELAY);
 
 	/* Set up HSYNC active pulse width (in pixel clks) */
-	hsync_len = mode->hsync_end - mode->hsync_start;
 	hdmi_writeb(hdmi, hsync_len >> 8, HDMI_FC_HSYNCINWIDTH1);
 	hdmi_writeb(hdmi, hsync_len, HDMI_FC_HSYNCINWIDTH0);
 
-- 
2.19.2

