Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:36:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id ECB6E58055F;
	Tue, 18 Dec 2018 05:17:37 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 05:17:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9E0WlhH2hjN7ZA0pU6kNOp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75oMy+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSiJPHI28?=
 =?us-ascii?q?YYsID+QCM+hXoYbyqFkSohWxHgmsHOHixyRUhnL1x6A2z/gtHA/E0QEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKSe660qjIzTHeZP5Kwzf97ZPIcgw7ofGLW7JwftfaxE4pFwzflFWQ?=
 =?us-ascii?q?rJflPy+P1uQKtWib4PFtWvm1hG8nrwFxoyOgxt0yhYXTmo0VzVXE+Dx/zY0oK9?=
 =?us-ascii?q?O4T0t7bsSlEJtWryyaOIp2Qt8iQ2F1oyk20KEJuZm+fCUM1Z8pxAbfZuSZf4SU?=
 =?us-ascii?q?5h/vTvudLDlmiH5/Zb6yhAq+/VKhx+D+TsW51EpGojBEn9TCrHwByRPe58edRv?=
 =?us-ascii?q?Zz40us3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqVrDHiDol0XslqOWdVsr+vKu?=
 =?us-ascii?q?6+v5ZrXqvJicN5V7ig3mM6QunNKwAfggPwQQQ2SW/f6w2KDt8EHnWrlGk/47nr?=
 =?us-ascii?q?XDvJ3bJ8kXvqu5DBVU0oYn5Ra/FTCm0NEAkHkDLVJFfg+HjofwN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtywPDHMLvhDYvXLnXYjrfhcqhy61RGxAow099f/ZRUBa8FIP7pXU/xrt?=
 =?us-ascii?q?PYAgcjMwOo2+bnFMl91oQGVGKLA6+ZM73dvUWH5+IyOOSMYI4VuDDgK/kq/fLu?=
 =?us-ascii?q?jHk5mUMDcqmtx5cYdHe4HvF+KUWDfXXsmssBEXsNvgcmTOzlklyCUSJJaHa1Ra?=
 =?us-ascii?q?485iw7B5igDYfMXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsp5mDwe?=
 =?us-ascii?q?SbehU5Mh1Q2ptALiybpnKfTb9jcbtZLk0th14erTmAo29Tx1CcSdzm6MQ3t1nm?=
 =?us-ascii?q?MOWz85wqR/rVZhxVeE1Khym+ZYGsBL5/NVTgc6MobRwPZhC9DyXQLBfc2FSEy8?=
 =?us-ascii?q?TdWkGjwxStMxw9kTY0dyAdmijxbD3za0DL8RjbCEGJs08qfE1XjrO8l902rG1L?=
 =?us-ascii?q?Umj1Q+QctAL2umirR79wjSHYHJlUqZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAx?=
 =?us-ascii?q?GExrePbIrvf2UQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e65wQaheKCRP8J3rILoiEhqy5qE1a7xN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUysHMqzQ9yKaWE0FNB?=
 =?us-ascii?q?dzKUx4zwNqfQKmno+BCvaqjW2l7F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzEn6IPQy3JtPre7sz/Y190yGesq1wyvf9Fc?=
 =?us-ascii?q?MKODCg//CMkaB8moKOw3lFmldBMEPOZO9KEqO8OqbeeJ2KmuPOx4hjKpkXxH4J?=
 =?us-ascii?q?xh0kKL7yd9SvPI04wZzP2C3wqHVy3zjFGuss3snYBEZDcSHnewyCT+BY5RYLFy?=
 =?us-ascii?q?cpgPCWu0P8K3wdB+jYb3W3FE7F6jG08G2MixdBqIblzywRdf1V4Krnyggye4yS?=
 =?us-ascii?q?J7kysorqaGwCPB2eDiewcZNW5RQ2lii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JMpsSRNXOW8e1yaUaP9ox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHVBlem?=
 =?us-ascii?q?Jdmp/taUl5DZvuClTW2hVZ5TcSjtzYyesiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox/kpE/hJYK1XgYh5WV+2EKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98NKB7?=
 =?us-ascii?q?2V7LBenSt1v0C3rQTeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNCkDbGCoRtTVGz3e5g8Bi9w8ttwMEjX33Lt8IHkd8?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GgJYNjrwZ88J+zDil6BentuN34C0H5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhtXwOSJEtbgAAJRjk6moM5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7uBpEC?=
 =?us-ascii?q?Fd4JKhtxaBKnCBawRLEGEJWVGEB1b5Mbm1/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBmzQPTDEXlzvQb8GBohew4DZ3rs?=
 =?us-ascii?q?e58PTkQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYtS7CUqPQmqxUDx4acS9zN9FI76Uz3gZTI87bl8j126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9tiyGE0D4JDSM?=
 =?us-ascii?q?iTnoWwqrMeFNlyybOB1euIegchdiE2TjTdTmagGlP99zlzE53bo0hnbSP24GLT?=
 =?us-ascii?q?d8a19NrqGX7S5AnvV/GmlB4mB5IuWehymZ7/fXKpANvPtvAyR0kf9a4Xsgx7tU?=
 =?us-ascii?q?6iFEWOJ6mC/IotFypFGml/GFyiB7XxpWtjZLmIWLsF1iOKrD8JlAXHfE/BQV4m?=
 =?us-ascii?q?SRCxQFvd1lCtL0tqBUy9jPkr/zKThY/9LV+8scG9bbKMadPHU9NhrpHW2cMAxQ?=
 =?us-ascii?q?ZDinL3PShQR9mfOe/zXBp946o5rgkbIVQ7pASVo6UPgdDxIhVNUYK5d2Qi8Mmr?=
 =?us-ascii?q?mXgccV/32kpV/WXsoe9rTOS+ifB+mpMDefhrlNfQcgwL/1JJ8UMIf80lZuLFJ9?=
 =?us-ascii?q?mcCCI0rRWdFVumVTZwU5pA0Z6D5sR2c+32r9ZwWi/WMJEvi1jlg6h106Kd8k8j?=
 =?us-ascii?q?v9q3cqL1zF7H8wkkIZg9LugnWacD/pN+G7WoQAT2LUukkyNaTAX5J/awCo1Rhk?=
 =?us-ascii?q?OTbHQJpKiadtfmAthAKK/dNKEO5dSKACeh4IzOubT/8v1khYqyPhzkhCtsXfDp?=
 =?us-ascii?q?43sgYrddaFtXdbxxhkatF9carZPq9S0kJXgK2mtCa50uE72gJYLEEIpjDBMBUU?=
 =?us-ascii?q?sVAFY+F1bxGj+fZhvEnbw2NO?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAAB+8hhch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBVAMBAQELAYJpgQIng3yUEoFgCCUUl1qBEANPEAEBGAsIAYccIjcGDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAwECIAQLAQ0BATcBBQkBAQoOC?=
 =?us-ascii?q?gICJgICAzEBBQEcBgEMBgIBAQGDHQGCAAQBCptdPIopcHwzgnYBAQWHLgMFEnm?=
 =?us-ascii?q?KGIEcF4FAP4ERJwyCX4MeAoFFBYMfgleHdZknCgmHD4pLCBaJdhGHUIlEhHeLE?=
 =?us-ascii?q?QIEAgQFAgUPIYE7gXhNI4M8ghsJAxcSgziKVD8yAYEEAQGLJimCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0AcAAB+8hhch0O0hNFkGwEBAQEDAQEBBwMBAQGBVAMBAQE?=
 =?us-ascii?q?LAYJpgQIng3yUEoFgCCUUl1qBEANPEAEBGAsIAYccIjcGDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCgsJCCkjDII2JAGCYgECAwECIAQLAQ0BATcBBQkBAQoOCgICJgICAzEBBQE?=
 =?us-ascii?q?cBgEMBgIBAQGDHQGCAAQBCptdPIopcHwzgnYBAQWHLgMFEnmKGIEcF4FAP4ERJ?=
 =?us-ascii?q?wyCX4MeAoFFBYMfgleHdZknCgmHD4pLCBaJdhGHUIlEhHeLEQIEAgQFAgUPIYE?=
 =?us-ascii?q?7gXhNI4M8ghsJAxcSgziKVD8yAYEEAQGLJimCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="56351198"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 05:17:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726716AbeLRNRb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 08:17:31 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:40003 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726419AbeLRNRa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 08:17:30 -0500
Received: by mail-wm1-f65.google.com with SMTP id f188so2085344wmf.5
        for <linux-kernel@vger.kernel.org>; Tue, 18 Dec 2018 05:17:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=baylibre-com.20150623.gappssmtp.com; s=20150623;
        h=subject:to:cc:references:from:openpgp:autocrypt:organization
         :message-id:date:user-agent:mime-version:in-reply-to
         :content-language:content-transfer-encoding;
        bh=sZpOglEQJHXm6l+E0U04xMqFqLZJ1bCx/aa8V/K6NrE=;
        b=pxrW5YspGZMsERGOaI83PhrJ9DzPGOMLD0lVIuWhZTUFJnjmBW4TLs7iaCpo16SN6g
         KwjJWhAjnpnGoKhME5K0TRfi54pTvam+eNYdBkhmUbj6+W8a2uYDg8bbwrLNvypexUgz
         qtFEBI6ukaJHcUy6TEzt50kDez5WhUDZIyr2Xdujqhf9g4ZXu9XBmicky1q8CuqaIQ6X
         qc3sUhqXVqzSaAJXQ9sBIOBoZnM2gPv8wJsYbe+upJ66tAIzqSdQj/pRuVWp0i42hIpT
         +jkvQN/V7SAV3RxdKU304XufzVQlvaleWGFbXxbSzCFrc6CKSY10ZH9FxXlAaS48MqNe
         8CaQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:openpgp:autocrypt
         :organization:message-id:date:user-agent:mime-version:in-reply-to
         :content-language:content-transfer-encoding;
        bh=sZpOglEQJHXm6l+E0U04xMqFqLZJ1bCx/aa8V/K6NrE=;
        b=M8FxtzTqnwtD6dQVO8spZPR+vbgHUooEznx2gKrmfLpDtzK0gWKd8D3l/YDv4F2As8
         cW48ovF0ykFoZUySotq2pH4rI2ZrDkxqf7kB+yr61k19h0y2TsoTiPsHIDt0lLVvAKti
         d0nAn+NPRkrHNaDe0XbJeHX28i1EE6w5ePNeCSEcJPcHsgBDZIeIfY6+1mcUjnMo8MRb
         KWOvE+/ERDdiBEuVj4SyG2swN9VBVigCG/glFrdVJjuVrXoJQhIirB2RhChCUagq8jD4
         A5nRi7n9agRhpPMItq82BW265GQNEdnsvtkmnE59HaSJVokGkemQRAlUNbHo8FrfXpV1
         Pf6Q==
X-Gm-Message-State: AA+aEWZ2la8xKffmtdNMvmVSAo5oarRRbnpJRFjcsxs67YCxPEqP6ahD
        1C+r6kLXrIdRTWuF3ydgtsrSXg==
X-Google-Smtp-Source: AFSGD/V3btMxNPAtd+cb3x/FCBNGzB1C9Q8TqiEibpmuBhHKZHvfslW/ZFchVJKDRsnXT8xZIALFow==
X-Received: by 2002:a7b:c397:: with SMTP id s23mr3089203wmj.127.1545139047213;
        Tue, 18 Dec 2018 05:17:27 -0800 (PST)
Received: from [10.1.2.12] (lmontsouris-657-1-212-31.w90-63.abo.wanadoo.fr. [90.63.244.31])
        by smtp.gmail.com with ESMTPSA id t76sm2980375wme.33.2018.12.18.05.17.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 18 Dec 2018 05:17:26 -0800 (PST)
Subject: Re: [PATCH RFC v2 1/8] drm/bridge: dw-hdmi: Add SCDC and TMDS
 Scrambling support
To: Andrzej Hajda <a.hajda@samsung.com>, architt@codeaurora.org,
        Laurent.pinchart@ideasonboard.com,
        Philipp Zabel <p.zabel@pengutronix.de>,
        Sandy Huang <hjc@rock-chips.com>,
        =?UTF-8?Q?Heiko_St=c3=bcbner?= <heiko@sntech.de>,
        maxime.ripard@bootlin.com
Cc: dri-devel@lists.freedesktop.org, linux-amlogic@lists.infradead.org,
        linux-kernel@vger.kernel.org,
        Nickey Yang <nickey.yang@rock-chips.com>,
        Huicong Xu <xhc@rock-chips.com>
References: <20181130134301.17963-1-narmstrong@baylibre.com>
 <CGME20181130134341epcas3p330f854d94ebca73704d6582158d7d5b7@epcas3p3.samsung.com>
 <20181130134301.17963-2-narmstrong@baylibre.com>
 <66eb4d1d-8924-2ee7-7fa4-5b78ae8cea0f@samsung.com>
From: Neil Armstrong <narmstrong@baylibre.com>
Openpgp: preference=signencrypt
Autocrypt: addr=narmstrong@baylibre.com; prefer-encrypt=mutual; keydata=
 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
 ZaTUOEkgIor5losDrePdPgE=
Organization: Baylibre
Message-ID: <23173350-170b-023e-f724-becbab469ec1@baylibre.com>
Date: Tue, 18 Dec 2018 14:17:25 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <66eb4d1d-8924-2ee7-7fa4-5b78ae8cea0f@samsung.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 18/12/2018 13:25, Andrzej Hajda wrote:
> Hi Neil,
> 
> 
> On 30.11.2018 14:42, Neil Armstrong wrote:
>> Add support for SCDC Setup for TMDS Clock > 3.4GHz and enable TMDS
>> Scrambling when supported or mandatory.
>>
>> This patch also adds an helper to setup the control bit to support
>> the high TMDS Bit Period/TMDS Clock-Period Ratio as required with
>> TMDS Clock > 3.4GHz for HDMI2.0 3840x2160@60/50 modes.
>>
>> These changes were based on work done by Huicong Xu <xhc@rock-chips.com>
>> and Nickey Yang <nickey.yang@rock-chips.com> to support HDMI2.0 modes
>> on the Rockchip 4.4 BSP kernel at [1]
>>
>> [1] https://github.com/rockchip-linux/kernel/tree/release-4.4
>>
>> Cc: Nickey Yang <nickey.yang@rock-chips.com>
>> Cc: Huicong Xu <xhc@rock-chips.com>
>> Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
>> ---
>>  drivers/gpu/drm/bridge/synopsys/dw-hdmi.c | 88 ++++++++++++++++++++++-
>>  drivers/gpu/drm/bridge/synopsys/dw-hdmi.h |  1 +
>>  include/drm/bridge/dw_hdmi.h              |  1 +
>>  3 files changed, 87 insertions(+), 3 deletions(-)
>>
>> diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
>> index 64c3cf027518..fcd941d52753 100644
>> --- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
>> +++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
>> @@ -28,6 +28,7 @@
>>  #include <drm/drm_crtc_helper.h>
>>  #include <drm/drm_edid.h>
>>  #include <drm/drm_encoder_slave.h>
>> +#include <drm/drm_scdc_helper.h>
>>  #include <drm/bridge/dw_hdmi.h>
>>  
>>  #include <uapi/linux/media-bus-format.h>
>> @@ -43,6 +44,11 @@
>>  
>>  #define HDMI_EDID_LEN		512
>>  
>> +/* DW-HDMI Controller >= 0x200a are at least compliant with SCDC version 1 */
>> +#define SCDC_MIN_SOURCE_VERSION	0x1
>> +
>> +#define HDMI14_MAX_TMDSCLK	340000000
>> +
>>  enum hdmi_datamap {
>>  	RGB444_8B = 0x01,
>>  	RGB444_10B = 0x03,
>> @@ -1015,6 +1021,33 @@ void dw_hdmi_phy_i2c_write(struct dw_hdmi *hdmi, unsigned short data,
>>  }
>>  EXPORT_SYMBOL_GPL(dw_hdmi_phy_i2c_write);
>>  
>> +/*
>> + * HDMI2.0 Specifies the following procedure for High TMDS Bit Rates:
>> + * - The Source shall suspend transmission of the TMDS clock and data
>> + * - The Source shall write to the TMDS_Bit_Clock_Ratio bit to change it
>> + * from a 0 to a 1 or from a 1 to a 0
>> + * - The Source shall allow a minimum of 1 ms and a maximum of 100 ms from
>> + * the time the TMDS_Bit_Clock_Ratio bit is written until resuming
>> + * transmission of TMDS clock and data
>> + *
>> + * To respect the 100ms maximum delay, the dw_hdmi_set_high_tmds_clock_ratio()
>> + * helper should called right before enabling the TMDS Clock and Data in
>> + * the PHY configuration callback.
>> + */
>> +void dw_hdmi_set_high_tmds_clock_ratio(struct dw_hdmi *hdmi)
>> +{
>> +	unsigned long mtmdsclock = hdmi->hdmi_data.video_mode.mpixelclock;
>> +
>> +	/* Control for TMDS Bit Period/TMDS Clock-Period Ratio */
>> +	if (hdmi->connector.display_info.hdmi.scdc.supported) {
>> +		if (mtmdsclock > HDMI14_MAX_TMDSCLK)
>> +			drm_scdc_set_high_tmds_clock_ratio(hdmi->ddc, 1);
>> +		else
>> +			drm_scdc_set_high_tmds_clock_ratio(hdmi->ddc, 0);
>> +	}
>> +}
>> +EXPORT_SYMBOL_GPL(dw_hdmi_set_high_tmds_clock_ratio);
>> +
>>  static void dw_hdmi_phy_enable_powerdown(struct dw_hdmi *hdmi, bool enable)
>>  {
>>  	hdmi_mask_writeb(hdmi, !enable, HDMI_PHY_CONF0,
>> @@ -1216,6 +1249,8 @@ static int hdmi_phy_configure(struct dw_hdmi *hdmi)
>>  
>>  	dw_hdmi_phy_power_off(hdmi);
>>  
>> +	dw_hdmi_set_high_tmds_clock_ratio(hdmi);
>> +
>>  	/* Leave low power consumption mode by asserting SVSRET. */
>>  	if (phy->has_svsret)
>>  		dw_hdmi_phy_enable_svsret(hdmi, 1);
>> @@ -1237,6 +1272,10 @@ static int hdmi_phy_configure(struct dw_hdmi *hdmi)
>>  		return ret;
>>  	}
>>  
>> +	/* Wait for resuming transmission of TMDS clock and data */
>> +	if (mpixelclock > HDMI14_MAX_TMDSCLK)
>> +		msleep(100);
>> +
>>  	return dw_hdmi_phy_power_on(hdmi);
>>  }
>>  
>> @@ -1340,11 +1379,12 @@ static void hdmi_tx_hdcp_config(struct dw_hdmi *hdmi)
>>  
>>  static void hdmi_config_AVI(struct dw_hdmi *hdmi, struct drm_display_mode *mode)
>>  {
>> +	bool is_hdmi2_sink = hdmi->connector.display_info.hdmi.scdc.supported;
>>  	struct hdmi_avi_infoframe frame;
>>  	u8 val;
>>  
>>  	/* Initialise info frame from DRM mode */
>> -	drm_hdmi_avi_infoframe_from_display_mode(&frame, mode, false);
>> +	drm_hdmi_avi_infoframe_from_display_mode(&frame, mode, is_hdmi2_sink);
>>  
>>  	if (hdmi_bus_fmt_is_yuv444(hdmi->hdmi_data.enc_out_bus_format))
>>  		frame.colorspace = HDMI_COLORSPACE_YUV444;
>> @@ -1503,7 +1543,8 @@ static void hdmi_config_vendor_specific_infoframe(struct dw_hdmi *hdmi,
>>  static void hdmi_av_composer(struct dw_hdmi *hdmi,
>>  			     const struct drm_display_mode *mode)
>>  {
>> -	u8 inv_val;
>> +	u8 inv_val, bytes;
>> +	struct drm_hdmi_info *hdmi_info = &hdmi->connector.display_info.hdmi;
>>  	struct hdmi_vmode *vmode = &hdmi->hdmi_data.video_mode;
>>  	int hblank, vblank, h_de_hs, v_de_vs, hsync_len, vsync_len;
>>  	unsigned int vdisplay;
>> @@ -1513,7 +1554,9 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
>>  	dev_dbg(hdmi->dev, "final pixclk = %d\n", vmode->mpixelclock);
>>  
>>  	/* Set up HDMI_FC_INVIDCONF */
>> -	inv_val = (hdmi->hdmi_data.hdcp_enable ?
>> +	inv_val = (hdmi->hdmi_data.hdcp_enable ||
>> +		   vmode->mpixelclock > HDMI14_MAX_TMDSCLK ||
>> +		   hdmi_info->scdc.scrambling.low_rates ?
>>  		HDMI_FC_INVIDCONF_HDCP_KEEPOUT_ACTIVE :
>>  		HDMI_FC_INVIDCONF_HDCP_KEEPOUT_INACTIVE);
>>  
>> @@ -1562,6 +1605,45 @@ static void hdmi_av_composer(struct dw_hdmi *hdmi,
>>  		vsync_len /= 2;
>>  	}
>>  
>> +	/* Scrambling Control */
>> +	if (hdmi_info->scdc.supported) {
>> +		if (vmode->mpixelclock > HDMI14_MAX_TMDSCLK ||
>> +		    hdmi_info->scdc.scrambling.low_rates) {
>> +			/*
>> +			 * HDMI2.0 Specifies the following procedure:
>> +			 * After the Source Device has determined that
>> +			 * SCDC_Present is set (=1), the Source Device should
>> +			 * write the accurate Version of the Source Device
>> +			 * to the Source Version field in the SCDCS.
>> +			 * Source Devices compliant shall set the
>> +			 * Source Version = 1.
>> +			 */
>> +			drm_scdc_readb(&hdmi->i2c->adap, SCDC_SINK_VERSION,
>> +				       &bytes);
>> +			drm_scdc_writeb(&hdmi->i2c->adap, SCDC_SOURCE_VERSION,
>> +				min_t(u8, bytes, SCDC_MIN_SOURCE_VERSION));
>> +
>> +			/* Enabled Scrambling in the Sink */
>> +			drm_scdc_set_scrambling(&hdmi->i2c->adap, 1);
>> +
>> +			/*
>> +			 * To activate the scrambler feature, you must ensure
>> +			 * that the quasi-static configuration bit
>> +			 * fc_invidconf.HDCP_keepout is set at configuration
>> +			 * time, before the required mc_swrstzreq.tmdsswrst_req
>> +			 * reset request is issued.
>> +			 */
>> +			hdmi_writeb(hdmi, (u8)~HDMI_MC_SWRSTZ_TMDSSWRST_REQ,
> 
> 
> Are you sure you need casting to u8?

Not sure, it's already casted in dw_hdmi_clear_overflow() :

...
hdmi_writeb(hdmi, (u8)~HDMI_MC_SWRSTZ_TMDSSWRST_REQ, HDMI_MC_SWRSTZ);
...

I'll check if it's really needed.

> 
> 
>> +				    HDMI_MC_SWRSTZ);
>> +			hdmi_writeb(hdmi, 1, HDMI_FC_SCRAMBLER_CTRL);
>> +		} else {
>> +			hdmi_writeb(hdmi, 0, HDMI_FC_SCRAMBLER_CTRL);
>> +			hdmi_writeb(hdmi, (u8)~HDMI_MC_SWRSTZ_TMDSSWRST_REQ,
>> +				    HDMI_MC_SWRSTZ);
>> +			drm_scdc_set_scrambling(&hdmi->i2c->adap, 0);
>> +		}
>> +	}
>> +
>>  	/* Set up horizontal active pixel width */
>>  	hdmi_writeb(hdmi, mode->hdisplay >> 8, HDMI_FC_INHACTV1);
>>  	hdmi_writeb(hdmi, mode->hdisplay, HDMI_FC_INHACTV0);
>> diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h
>> index 9d90eb9c46e5..3f3c616eba97 100644
>> --- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h
>> +++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h
>> @@ -255,6 +255,7 @@
>>  #define HDMI_FC_MASK2                           0x10DA
>>  #define HDMI_FC_POL2                            0x10DB
>>  #define HDMI_FC_PRCONF                          0x10E0
>> +#define HDMI_FC_SCRAMBLER_CTRL                  0x10E1
>>  
>>  #define HDMI_FC_GMD_STAT                        0x1100
>>  #define HDMI_FC_GMD_EN                          0x1101
>> diff --git a/include/drm/bridge/dw_hdmi.h b/include/drm/bridge/dw_hdmi.h
>> index 9c56412bb2cf..7a02744ce0bc 100644
>> --- a/include/drm/bridge/dw_hdmi.h
>> +++ b/include/drm/bridge/dw_hdmi.h
>> @@ -157,6 +157,7 @@ void dw_hdmi_setup_rx_sense(struct dw_hdmi *hdmi, bool hpd, bool rx_sense);
>>  void dw_hdmi_set_sample_rate(struct dw_hdmi *hdmi, unsigned int rate);
>>  void dw_hdmi_audio_enable(struct dw_hdmi *hdmi);
>>  void dw_hdmi_audio_disable(struct dw_hdmi *hdmi);
>> +void dw_hdmi_set_high_tmds_clock_ratio(struct dw_hdmi *hdmi);
>>  
>>  /* PHY configuration */
>>  void dw_hdmi_phy_i2c_set_addr(struct dw_hdmi *hdmi, u8 address);
> 
> Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>

Thanks,
Neil

> 
>  --
> Regards
> Andrzej
> 
> 
> 

