Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:55:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0922E580380;
	Tue, 11 Dec 2018 12:32:11 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 12:32:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AaQXLuhXU6zYI9Knir9/PvcRxhTHV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCEuqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwwYDUYJqNNPd8Za7RYc8WSHBdUstLSyBNHoWx?=
 =?us-ascii?q?ZJYPAeobOuZYqpHwqVUQohSgHQmjHv7kxDFJhn/wx6I61v4uEQfH3Ac9GN8BrW?=
 =?us-ascii?q?rbo8vtNKgIS+y1z7fHzS/Fb/xI3Tfw84fIchU7rvGNWbJ8a9beyU4qFw7ciFib?=
 =?us-ascii?q?tI/rPyuN2+gTr2SW6/BsWf+hhmI5sQ19vzuiyts2hoTIhI8Z0lTJ+CZjzIorK9?=
 =?us-ascii?q?C1R1R3bN66HJdKqS2XOZd6T8U/SG9yoik60KcJuZujcSgK1psnwxnfZuSZc4iH?=
 =?us-ascii?q?/B3jTvydITRmi3J/frKwmRKy/VKnyu3mWcm4yFdKrixbndnQrn0ByQDf58ydRv?=
 =?us-ascii?q?dg8EqtxyyD2x3Q5+1YO0w5lKjWJ4YkwrEql5oTtUrDHjXxmEXzlKKWckQk+u61?=
 =?us-ascii?q?6+Xoe7nmpYGTN5Vyig7gNqQig8u/AOo+MgcQRWiW4vq81LL98k3jWrlKjeM5kr?=
 =?us-ascii?q?PfsJ/EIcQXvKm5AxVa0oo78RawEy+m0MgEnXkANF9FfBOHj4v3NF3UL/H4EOyy?=
 =?us-ascii?q?g1CtkDdt2vDHMaftApTLLnjfjrjheaxx5FJbyAo21dpf/Y5bCqkdIPLvXU/8rN?=
 =?us-ascii?q?zYAQU4Mwyo2ennD89x1oMDWW2VBK+ZP7jfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtUBEWAUsQYkT+zqj1uCUThUZ3upW6?=
 =?us-ascii?q?I85zc7CJ+pDIvZR4CthqCB0zm/HpFMem9GDVWMG2/yd4qYQ/cMdD6SIsh5nzMe?=
 =?us-ascii?q?TrihS4gh1RK0uA/g0bVnLPHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/9YGsZV5/9TVgc6NITTz+p1C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfsPcl91WjJ2L?=
 =?us-ascii?q?Mhj1Y8RMtPLnOphqh4+wjXBI7JlkGZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAw?=
 =?us-ascii?q?2FxreNbIrsZmUc0z/RCEkCkwAP43mGMRIyCTumo2LbFDZuD07gY1vw8elir3O2?=
 =?us-ascii?q?VlM0zwCPb01my7q1+h4UieaAS/8J2bIEoiMhqzRyHFayxN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUytnwqyBR9KK2G31JB?=
 =?us-ascii?q?bT+Xxo3wNaDNJWn0/xCvbLDW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXYykg54/OyXJgK6i1sj/Y1NIvC+so0RKgf9ZZ?=
 =?us-ascii?q?MKOZGw7+CcwaB86yKOM0n1ildA4LPOdX9KQsJcOpa+OG2LK3POZnhD+ml2VH75?=
 =?us-ascii?q?xn3UKW6iV8TfTE35AbzPGC3wuLTivzg02lss/qh49EfzYSHmykxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwXoHymgye5zy?=
 =?us-ascii?q?Z4kyo0rqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfSj5NXtiUqiztrqFecJP84knsSZUUOS9Z1CVVLj9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iDnNCVi7?=
 =?us-ascii?q?JdWp/9SUl5HYv+C6VmKhUIBTcCbxwYOBsiu7+XNlARmlk/+vnd3nFBAw0TXn2N?=
 =?us-ascii?q?lySSXIsBH8b5Ho16ugMOJrZEloBELm5Mp8FYFziY8whJAW2XgHiZSZ53sHkWHv?=
 =?us-ascii?q?MdpF3aLydmYCRTkOw9TN+gjqxFVjLm6Vx4L+Tnidx8phZ9qgbW8M1CMy8dtKCL?=
 =?us-ascii?q?uK47xehiR6vEC4rQ3KbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJindCmCbGOuABdV2z/epc/Bi9w9cR/PUnI0H3y7IHkZd?=
 =?us-ascii?q?bRYcgSth2SjxfPkexVJIgtmfoNgCptIXj9smE9y+4nkRxu2om3s5OdJGVq+KK5?=
 =?us-ascii?q?HwRUNjnoZ84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5UdktX3PFo6kN2qNKHkF19liRwSdJE9CgAASRjo6hYU0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKcyf7uVuHy?=
 =?us-ascii?q?FB452utgqNJnaAZwRPC2EJVVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpDUm54G8TamDUPSjYblyHXb86cqxez5Dd3rt?=
 =?us-ascii?q?2k8PnwXALv5I2PC6ZdMNl1+hC2h7uDOPCUhCpjNTlY0ZYMz2fSyLcDxF4Slz1u?=
 =?us-ascii?q?dz61HLsaqC7CV7jQlbFXDhIBbyNzNdBF76Y93glLJM7ahcn51r9+jv4pFVhFUU?=
 =?us-ascii?q?btld2uZcwPO2u9Lk/IBF6XNLSaIj3G2933YaK5SbFKkOpYrQG/uTaFHE/lJTmD?=
 =?us-ascii?q?kzjpVxayMeBDli2bPRpeuJ2jfRZpE2TsUNXmahijOt9tkTI22aE0hm/NNWMEMT?=
 =?us-ascii?q?lzaUVNrriR7SNemvp+GmxB4WBjLemLgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC6B5uJp9l2vjOSK4jZuThdLrjFFmMSNsFkmcaHY8IRQHHXJ5hQA6U?=
 =?us-ascii?q?2OBBkQ4dhoENviv+ZX0Necurj0LWJu/t/M9IMwBs7dLcuBMTJ1PRfkADeSDwYf?=
 =?us-ascii?q?SzOvHW7ajk1Z1vqV8yvG/dABtpHwlc9WGfdgX1svG6ZCBw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAABFHhBch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBRfizKCIYkQji6BcxIBARgTAYcuIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2IoJlAwMBAiQZARsdAQMCCQEBBRA7Ax4CEQEFARwHEgUWg?=
 =?us-ascii?q?waBaQEDFQWaODyMCRYFAReCdwWCRIF9ChknDV2BNwIGEodqgyOBHIIWgRGFaYg?=
 =?us-ascii?q?FApA8kBEuBwKCJot8gyQLGIlmh1osiHeGAYloAgQCBAUCBQ8hgSWCDk0jgQGCO?=
 =?us-ascii?q?4IbDBeDSop0HzKBBAEBAYpjAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAABFHhBch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBRfizKCIYkQji6BcxIBARgTAYcuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2IoJlAwMBAiQZARsdAQMCCQEBBRA7Ax4CEQEFARwHEgUWgwaBaQEDFQWaODy?=
 =?us-ascii?q?MCRYFAReCdwWCRIF9ChknDV2BNwIGEodqgyOBHIIWgRGFaYgFApA8kBEuBwKCJ?=
 =?us-ascii?q?ot8gyQLGIlmh1osiHeGAYloAgQCBAUCBQ8hgSWCDk0jgQGCO4IbDBeDSop0HzK?=
 =?us-ascii?q?BBAEBAYpjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="56484741"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 12:32:09 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726509AbeLKU3E (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 15:29:04 -0500
Received: from mail-yb1-f195.google.com ([209.85.219.195]:40131 "EHLO
        mail-yb1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726134AbeLKU2T (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 15:28:19 -0500
Received: by mail-yb1-f195.google.com with SMTP id e12so761343ybq.7;
        Tue, 11 Dec 2018 12:28:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=XvlRkzZ4YlQVOEhU88THshuPvVunE7aXqYdp+3GKcUo=;
        b=abeVjgJPQ+fDLZ8tsTMY2jMNT5JJRL7njZaehqSVMhtTQ1Lyl5MFNEWH8Ae+H3hjsE
         3cwwlii/TRDk07SRx33bQwPhv3sWmlZnag0mNJwENWJp/1QmdS2c9eEOQPA1nV8zA+Fu
         4bpxOO1phm2i4hw4N4yTGWYyYRg0Y323RaiSqk3b3XDqnVMFX34FoWpwyEyzqqtOA+o+
         ZzojfS/6H5QGrKs7jqznEEzoXroRnJp7COlW7kcgeFJNBbxhscQAiCYX22b25UjLSaMT
         99+UPdYeeVBAAS9bvHmY+cL3LgiH3dinKAq1B7ua0PwSV0Z2de3e4/TtjUYbpu79sGE6
         7fbg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=XvlRkzZ4YlQVOEhU88THshuPvVunE7aXqYdp+3GKcUo=;
        b=lGtzKS73HH4yVauhJICM6cLufADWt5GQLxfdyMSeVusdhA/8a2gnjwBnn1TsLODhR9
         uwNTvhRsDBesTk9Dhpq2eQPKdE3H0CizYCLOxYQbmg6MvlRJI1ugQaqD2omdNkv30WEj
         0ogAAC3aw40/TCJbyJlAuwVrWNeDDKWfB/mDJAg6te/Xs9Owc+PJ6uvTaxzz45twx8ID
         JGyLdRVms4v0ZQuq9qrzIukmZ+bwnuXEZ5xcqkZdKdh8wvcNlcWPOQk7mC16KGOf2hGE
         5SNGaiuhoeJ/cbM8UB7DPlLUNpCtMJJ59HG6HBME7csfwbQf8KHrrCbk4ConnQxF/4Jd
         MtMA==
X-Gm-Message-State: AA+aEWafbcPMP3UBpnXlVoeyEeWHUJ8x1uU9LskA1LPcYp5lpy+hQ6se
        7N0MNCCPa/N4ZeIZZV79uv0=
X-Google-Smtp-Source: AFSGD/WNzLdBBxxDXeytdi0ehRKyRyQ8TB0iupnaudH7CjcsmhoNiSnsJylUnJR9yc1mdPinLRyK3w==
X-Received: by 2002:a25:418d:: with SMTP id o135mr17660113yba.166.1544560098687;
        Tue, 11 Dec 2018 12:28:18 -0800 (PST)
Received: from deepa-ubuntu.lan (c-98-234-52-230.hsd1.ca.comcast.net. [98.234.52.230])
        by smtp.gmail.com with ESMTPSA id l35sm5415078ywh.48.2018.12.11.12.28.17
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 11 Dec 2018 12:28:18 -0800 (PST)
From: Deepa Dinamani <deepa.kernel@gmail.com>
To: davem@davemloft.net, linux-kernel@vger.kernel.org
Cc: netdev@vger.kernel.org, arnd@arndb.de, y2038@lists.linaro.org,
        isdn@linux-pingi.de
Subject: [PATCH v2 4/8] socket: Use old_timeval types for socket timestamps
Date: Tue, 11 Dec 2018 12:25:16 -0800
Message-Id: <20181211202520.16799-5-deepa.kernel@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181211202520.16799-1-deepa.kernel@gmail.com>
References: <20181211202520.16799-1-deepa.kernel@gmail.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

As part of y2038 solution, all internal uses of
struct timeval are replaced by struct __kernel_old_timeval
and struct compat_timeval by struct old_timeval32.
Make socket timestamps use these new types.

This is mainly to be able to verify that the kernel build
is y2038 safe when such non y2038 safe types are not
supported anymore.

Signed-off-by: Deepa Dinamani <deepa.kernel@gmail.com>
Cc: isdn@linux-pingi.de
---
 drivers/isdn/mISDN/socket.c | 2 +-
 include/linux/skbuff.h      | 6 +++---
 net/bluetooth/hci_sock.c    | 4 ++--
 net/compat.c                | 6 +++---
 net/ipv4/tcp.c              | 2 +-
 net/rds/recv.c              | 2 +-
 net/socket.c                | 2 +-
 7 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/isdn/mISDN/socket.c b/drivers/isdn/mISDN/socket.c
index 15d3ca37669a..4ab8b1b6608f 100644
--- a/drivers/isdn/mISDN/socket.c
+++ b/drivers/isdn/mISDN/socket.c
@@ -103,7 +103,7 @@ mISDN_ctrl(struct mISDNchannel *ch, u_int cmd, void *arg)
 static inline void
 mISDN_sock_cmsg(struct sock *sk, struct msghdr *msg, struct sk_buff *skb)
 {
-	struct timeval	tv;
+	struct __kernel_old_timeval	tv;
 
 	if (_pms(sk)->cmask & MISDN_TIME_STAMP) {
 		skb_get_timestamp(skb, &tv);
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index a2e8297a5b00..e2dc01330cb1 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -3453,16 +3453,16 @@ static inline ktime_t skb_get_ktime(const struct sk_buff *skb)
 /**
  *	skb_get_timestamp - get timestamp from a skb
  *	@skb: skb to get stamp from
- *	@stamp: pointer to struct timeval to store stamp in
+ *	@stamp: pointer to struct __kernel_old_timeval to store stamp in
  *
  *	Timestamps are stored in the skb as offsets to a base timestamp.
  *	This function converts the offset back to a struct timeval and stores
  *	it in stamp.
  */
 static inline void skb_get_timestamp(const struct sk_buff *skb,
-				     struct timeval *stamp)
+				     struct __kernel_old_timeval *stamp)
 {
-	*stamp = ktime_to_timeval(skb->tstamp);
+	*stamp = ns_to_kernel_old_timeval(skb->tstamp);
 }
 
 static inline void skb_get_timestampns(const struct sk_buff *skb,
diff --git a/net/bluetooth/hci_sock.c b/net/bluetooth/hci_sock.c
index 10dfd20c748e..32aff3755480 100644
--- a/net/bluetooth/hci_sock.c
+++ b/net/bluetooth/hci_sock.c
@@ -1400,9 +1400,9 @@ static void hci_sock_cmsg(struct sock *sk, struct msghdr *msg,
 
 	if (mask & HCI_CMSG_TSTAMP) {
 #ifdef CONFIG_COMPAT
-		struct compat_timeval ctv;
+		struct old_timeval32 ctv;
 #endif
-		struct timeval tv;
+		struct __kernel_old_timeval tv;
 		void *data;
 		int len;
 
diff --git a/net/compat.c b/net/compat.c
index 720ab07276b0..8dea66c96926 100644
--- a/net/compat.c
+++ b/net/compat.c
@@ -209,8 +209,8 @@ int put_cmsg_compat(struct msghdr *kmsg, int level, int type, int len, void *dat
 {
 	struct compat_cmsghdr __user *cm = (struct compat_cmsghdr __user *) kmsg->msg_control;
 	struct compat_cmsghdr cmhdr;
-	struct compat_timeval ctv;
-	struct compat_timespec cts[3];
+	struct old_timeval32 ctv;
+	struct old_timespec32 cts[3];
 	int cmlen;
 
 	if (cm == NULL || kmsg->msg_controllen < sizeof(*cm)) {
@@ -220,7 +220,7 @@ int put_cmsg_compat(struct msghdr *kmsg, int level, int type, int len, void *dat
 
 	if (!COMPAT_USE_64BIT_TIME) {
 		if (level == SOL_SOCKET && type == SO_TIMESTAMP_OLD) {
-			struct timeval *tv = (struct timeval *)data;
+			struct __kernel_old_timeval *tv = (struct __kernel_old_timeval *)data;
 			ctv.tv_sec = tv->tv_sec;
 			ctv.tv_usec = tv->tv_usec;
 			data = &ctv;
diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index 496848ab0269..5a86ce0bdf32 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -1864,7 +1864,7 @@ static void tcp_update_recv_tstamps(struct sk_buff *skb,
 static void tcp_recv_timestamp(struct msghdr *msg, const struct sock *sk,
 			       struct scm_timestamping *tss)
 {
-	struct timeval tv;
+	struct __kernel_old_timeval tv;
 	bool has_timestamping = false;
 
 	if (tss->ts[0].tv_sec || tss->ts[0].tv_nsec) {
diff --git a/net/rds/recv.c b/net/rds/recv.c
index 04e30d63a159..435bf2320cd3 100644
--- a/net/rds/recv.c
+++ b/net/rds/recv.c
@@ -549,7 +549,7 @@ static int rds_cmsg_recv(struct rds_incoming *inc, struct msghdr *msg,
 
 	if ((inc->i_rx_tstamp != 0) &&
 	    sock_flag(rds_rs_to_sk(rs), SOCK_RCVTSTAMP)) {
-		struct timeval tv = ktime_to_timeval(inc->i_rx_tstamp);
+		struct __kernel_old_timeval tv = ns_to_kernel_old_timeval(inc->i_rx_tstamp);
 		ret = put_cmsg(msg, SOL_SOCKET, SO_TIMESTAMP_OLD,
 			       sizeof(tv), &tv);
 		if (ret)
diff --git a/net/socket.c b/net/socket.c
index dfc5742ccfbb..c92f0e97ae58 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -720,7 +720,7 @@ void __sock_recv_timestamp(struct msghdr *msg, struct sock *sk,
 
 	if (need_software_tstamp) {
 		if (!sock_flag(sk, SOCK_RCVTSTAMPNS)) {
-			struct timeval tv;
+			struct __kernel_old_timeval tv;
 			skb_get_timestamp(skb, &tv);
 			put_cmsg(msg, SOL_SOCKET, SO_TIMESTAMP_OLD,
 				 sizeof(tv), &tv);
-- 
2.17.1

