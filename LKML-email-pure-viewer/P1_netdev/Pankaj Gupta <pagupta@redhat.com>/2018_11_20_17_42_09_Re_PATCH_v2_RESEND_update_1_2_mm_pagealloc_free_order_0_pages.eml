Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 11:09:11 -0000
Received: from icoremail.net (unknown [209.85.214.174])
	by mail-app4 (Coremail) with SMTP id cS_KCgDnX7sU2_Nbcs7eAQ--.57254S3;
	Tue, 20 Nov 2018 17:59:49 +0800 (CST)
Received: from mail-pl1-f174.google.com (unknown [209.85.214.174])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHaUUR2_Nb93VdAA--.1299S3;
	Tue, 20 Nov 2018 17:59:45 +0800 (CST)
Received: by mail-pl1-f174.google.com with SMTP id z23so769858plo.0
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 01:59:45 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:message-id:in-reply-to:references:subject
         :mime-version:content-transfer-encoding:thread-topic:thread-index
         :sender:precedence:list-id;
        bh=UNlWl0B/C+Z+0YKo/DXTCJYwDx6BnU54WQ1DUqA0q8A=;
        b=VxjlG2zNYqfy48OAG0sNzLjgPtYplIMIv2Z5s0P/m6wa4hiyBXG0YN2lHqYh9CM6dr
         jLjid49Vzl0jlY9gnJWpMaMWTN+02CqDVzrPvrq12L09pjRszUfzacqEfiGAyYRSqY28
         2wpV4qAHMtNBJXZfPOm2fOhOZJHFPWPKsUlLI5D1Khd/ScFIpnF3WNGdHvzI1q9s7910
         t+HDfoA/sfTDoBOA+0Oq+jlytN3yfIN1aYLxqHocizg4CwSN7jZ+WX+5H4KfaasnGhIa
         Qjjs70ST8tX2L2IvPlmwyJ5B5fcbpOocOV5O+vy8u3OgIquzRe/xuh08qzKH8m+Y0QLu
         zJlQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AA+aEWbkzmIkxNJ2F/oVw3E9qnWPBSUnJl3bwJKqKhInVCDEKEENlUV0
	+0XgEJAYIz825KR5PhBMwln26lwo+gSbgHFfYKfEi72UV96oDeg=
X-Received: by 2002:a17:902:9698:: with SMTP id n24-v6mr1557282plp.9.1542707985386;
        Tue, 20 Nov 2018 01:59:45 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp396731pju;
        Tue, 20 Nov 2018 01:59:44 -0800 (PST)
X-Google-Smtp-Source: AFSGD/VTFMl88DbBodsINq6RVHtv7EIBzN2vlY63Fulwe1Ku36unqdKzuXWZpIhox9r793zMQs5x
X-Received: by 2002:a65:530c:: with SMTP id m12mr1270340pgq.224.1542707984455;
        Tue, 20 Nov 2018 01:59:44 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542707984; cv=none;
        d=google.com; s=arc-20160816;
        b=Nj1veJtn71Rpn4z4tGTgwRNDW0/jaNkw4PaTDQguq59h3jOWcyRn2dvDHpo6TbZt/q
         Ee4MO2vZh1Jvc++jFNvrmJupC7cS10T9h7zi2P9UFTceTuPtdSjH1kgAIZPRW8tClOWQ
         81H5WvsNweYz+eHfTQaO1SVvfNrn5Hnm86f2FKJhryafd4mfEYz1m2KiEBvFc1ePdtIU
         CfktxBf4eS275ZSJLSa0h4dju9Kob9ZBS4QcOUoRqzgqv/Uv+J2dHj6HygoBmQow11E9
         37uHLWVunJ+pVN3r1ik4MldSEmEvteeKchPoDkUMcNs5FFU7DDFP1OLxcq+u+we+T17R
         FmpA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:thread-index:thread-topic
         :content-transfer-encoding:mime-version:subject:references
         :in-reply-to:message-id:cc:to:from:date;
        bh=UNlWl0B/C+Z+0YKo/DXTCJYwDx6BnU54WQ1DUqA0q8A=;
        b=A9rnDRC5sgJSReEhkSG14SoELHXk37dOmRmXu78ul9liMg8FoDfgcVmwUxLJCINKzG
         tkoXps6S4NI7oCiPC/d0tHL4NOGJQ5jRTA5h0JSLRKO6UDjvTHoir6crCA0uWhNP0fTW
         tDodAVhl93/kF02C5zEjOxnH5NeoMVBG76aYFxiC4Ogo6dRwrH7xgc21Uowv4tm9P8Rp
         IACqxop0rKs+LH939sk46I2SNLbOd7tnbXRdA5bs1oroyE5g0uafjrEquGXENUAR26ba
         0KPvPdzjSNmkPARmThj3o43ZI2Ao7P7K6051bLOsA+wlLxsw9SWdWlFsnxiEbZVMBWHg
         G54g==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id l68-v6si49254869pfl.56.2018.11.20.01.59.30;
        Tue, 20 Nov 2018 01:59:44 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727740AbeKTUKY convert rfc822-to-8bit (ORCPT
        <rfc822;nullbytes00@gmail.com> + 99 others);
        Tue, 20 Nov 2018 15:10:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:46554 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725846AbeKTUKY (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 15:10:24 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com [10.5.11.14])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 2B80C307DAC0;
        Tue, 20 Nov 2018 09:42:11 +0000 (UTC)
Received: from colo-mx.corp.redhat.com (colo-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.20])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 8AECC18E56;
        Tue, 20 Nov 2018 09:42:10 +0000 (UTC)
Received: from zmail21.collab.prod.int.phx2.redhat.com (zmail21.collab.prod.int.phx2.redhat.com [10.5.83.24])
        by colo-mx.corp.redhat.com (Postfix) with ESMTP id 96830181AAB1;
        Tue, 20 Nov 2018 09:42:09 +0000 (UTC)
Date: Tue, 20 Nov 2018 04:42:09 -0500 (EST)
From: Pankaj Gupta <pagupta@redhat.com>
To: Aaron Lu <aaron.lu@intel.com>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        netdev@vger.kernel.org, Andrew Morton <akpm@linux-foundation.org>,
        =?utf-8?Q?Pawe=C5=82?= Staszewski <pstaszewski@itcare.pl>,
        Jesper Dangaard Brouer <brouer@redhat.com>,
        Eric Dumazet <eric.dumazet@gmail.com>,
        Tariq Toukan <tariqt@mellanox.com>,
        Ilias Apalodimas <ilias.apalodimas@linaro.org>,
        Yoel Caspersen <yoel@kviknet.dk>,
        Mel Gorman <mgorman@techsingularity.net>,
        Saeed Mahameed <saeedm@mellanox.com>,
        Michal Hocko <mhocko@suse.com>,
        Vlastimil Babka <vbabka@suse.cz>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Alexander Duyck <alexander.h.duyck@linux.intel.com>,
        Ian Kumlien <ian.kumlien@gmail.com>
Message-ID: <683236105.35259866.1542706929529.JavaMail.zimbra@redhat.com>
In-Reply-To: <20181120014544.GB10657@intel.com>
References: <20181119134834.17765-1-aaron.lu@intel.com> <20181119134834.17765-2-aaron.lu@intel.com> <20181120014544.GB10657@intel.com>
Subject: Re: [PATCH v2 RESEND update 1/2] mm/page_alloc: free order-0 pages
 through PCP in page_frag_free()
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8BIT
X-Originating-IP: [10.67.116.119, 10.4.195.6]
Thread-Topic: mm/page_alloc: free order-0 pages through PCP in page_frag_free()
Thread-Index: vlSeekjqFLNNlIX5GbvvfvYHef1EEA==
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.42]); Tue, 20 Nov 2018 09:42:11 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHaUUR2_Nb93VdAA--.1299S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGF4DZF4UCFyUWr47Jw1DKFg_yoWrJFyrpa
	yDG3Z8CFykJw45JwnrJ3Z29F1fCws5GFW3Gry5WF15Zw1akrySkr1I9r1kZrW7uF1kCa1I
	vws0yry2k3Z09a7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBEb7Iv0xC_Zr1lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r4fMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUCVW8JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_GFv_WrylIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6r1j6r1xYxBIdaVFxhVjvjDU0xZFpf9x07bezuXUUUUU
	=


> 
> page_frag_free() calls __free_pages_ok() to free the page back to
> Buddy. This is OK for high order page, but for order-0 pages, it
> misses the optimization opportunity of using Per-Cpu-Pages and can
> cause zone lock contention when called frequently.
> 
> PaweÅ‚ Staszewski recently shared his result of 'how Linux kernel
> handles normal traffic'[1] and from perf data, Jesper Dangaard Brouer
> found the lock contention comes from page allocator:
> 
>   mlx5e_poll_tx_cq
>   |
>    --16.34%--napi_consume_skb
>              |
>              |--12.65%--__free_pages_ok
>              |          |
>              |           --11.86%--free_one_page
>              |                     |
>              |                     |--10.10%--queued_spin_lock_slowpath
>              |                     |
>              |                      --0.65%--_raw_spin_lock
>              |
>              |--1.55%--page_frag_free
>              |
>               --1.44%--skb_release_data
> 
> Jesper explained how it happened: mlx5 driver RX-page recycle
> mechanism is not effective in this workload and pages have to go
> through the page allocator. The lock contention happens during
> mlx5 DMA TX completion cycle. And the page allocator cannot keep
> up at these speeds.[2]
> 
> I thought that __free_pages_ok() are mostly freeing high order
> pages and thought this is an lock contention for high order pages
> but Jesper explained in detail that __free_pages_ok() here are
> actually freeing order-0 pages because mlx5 is using order-0 pages
> to satisfy its page pool allocation request.[3]
> 
> The free path as pointed out by Jesper is:
> skb_free_head()
>   -> skb_free_frag()
>     -> page_frag_free()
> And the pages being freed on this path are order-0 pages.
> 
> Fix this by doing similar things as in __page_frag_cache_drain() -
> send the being freed page to PCP if it's an order-0 page, or
> directly to Buddy if it is a high order page.
> 
> With this change, PaweÅ‚ hasn't noticed lock contention yet in
> his workload and Jesper has noticed a 7% performance improvement
> using a micro benchmark and lock contention is gone. Ilias' test
> on a 'low' speed 1Gbit interface on an cortex-a53 shows ~11%
> performance boost testing with 64byte packets and __free_pages_ok()
> disappeared from perf top.
> 
> [1]: https://www.spinics.net/lists/netdev/msg531362.html
> [2]: https://www.spinics.net/lists/netdev/msg531421.html
> [3]: https://www.spinics.net/lists/netdev/msg531556.html
> 
> Reported-by: PaweÅ‚ Staszewski <pstaszewski@itcare.pl>
> Analysed-by: Jesper Dangaard Brouer <brouer@redhat.com>
> Acked-by: Vlastimil Babka <vbabka@suse.cz>
> Acked-by: Mel Gorman <mgorman@techsingularity.net>
> Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
> Acked-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
> Tested-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
> Acked-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
> Acked-by: Tariq Toukan <tariqt@mellanox.com>
> Signed-off-by: Aaron Lu <aaron.lu@intel.com>
> ---
> update: fix Tariq's email tag.
> 
>  mm/page_alloc.c | 10 ++++++++--
>  1 file changed, 8 insertions(+), 2 deletions(-)
> 
> diff --git a/mm/page_alloc.c b/mm/page_alloc.c
> index 421c5b652708..8f8c6b33b637 100644
> --- a/mm/page_alloc.c
> +++ b/mm/page_alloc.c
> @@ -4677,8 +4677,14 @@ void page_frag_free(void *addr)
>  {
>  	struct page *page = virt_to_head_page(addr);
>  
> -	if (unlikely(put_page_testzero(page)))
> -		__free_pages_ok(page, compound_order(page));
> +	if (unlikely(put_page_testzero(page))) {
> +		unsigned int order = compound_order(page);
> +
> +		if (order == 0)
> +			free_unref_page(page);
> +		else
> +			__free_pages_ok(page, order);
> +	}
>  }
>  EXPORT_SYMBOL(page_frag_free);
>  
> --
> 2.17.2

A good optimization for zero order allocations.  
Acked-by: Pankaj gupta <pagupta@redhat.com>
 
Thanks,
Pankaj
