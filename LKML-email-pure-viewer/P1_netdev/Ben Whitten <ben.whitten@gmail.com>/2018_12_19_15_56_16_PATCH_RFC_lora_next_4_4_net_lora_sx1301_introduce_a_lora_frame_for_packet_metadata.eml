Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:40:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 86CAE580522;
	Wed, 19 Dec 2018 07:56:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga007-1.jf.intel.com with ESMTP; 19 Dec 2018 07:56:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVMEaihLChn4YVlyqMdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/zyrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIDeUBM/1Yr5H/qlYVsReyGROhCP/1xzNUmnP727Ax3eQ7EQHB2QwtB88Dv2?=
 =?us-ascii?q?rSrN7oNKgSUeG1zLXUzTrdafNdxDDw55PWfRAnu/2NU7JwccvNyUkzCQzFiE6d?=
 =?us-ascii?q?qYPgPzyP1+QNt3KX4PZnVeKqkmMqrRx6rDaoxscpkIbJh4QVx0jA9SV+2oY6P8?=
 =?us-ascii?q?e0R1JhYdOiDZBetDmaOpNoTs8+R2xkojs2x7MYtZKhYSQHy4grywTeZvGFa4SE?=
 =?us-ascii?q?/w7vWeKLLTtlhn9od6iziwuy/ES90OHxV8u53VBXpSRfiNbMrGoC1xnL58iHVP?=
 =?us-ascii?q?R9+kCh1C6R1wDc9O5EO1o4lanFJJ47xL4/iJ4TvV7EHi/sl0X6lK6WdkM69ei0?=
 =?us-ascii?q?8+nrfKnqq5uGO4NphAzyLL4iltG8DOgkKAQDXmqW9fy51LL5/E35RLtKjucxkq?=
 =?us-ascii?q?ncqJ3aIcUbpqikAw5ay4oj6AiwDy2g0NsGmXkLNVVFeRyBj4f3IVHDO+74Dfih?=
 =?us-ascii?q?jFS2ijtrxO7JPqfnAprTKnjPirDhfaxy60JE0go80chf545ICrEGOP/zXk7xtN?=
 =?us-ascii?q?/GARMjPA203v3qCNF81oMYRGKODbWVMKLUsV+U+O0vJ/OAa5MSuDb4M/Il/eLh?=
 =?us-ascii?q?jWclmV8BeqmkxZsXZ2q5HvR6OUqZZmDggtccEWgQuAo+Q/fniFmDUT5VenazUL?=
 =?us-ascii?q?gw5jA9CIK6E4jDQpqhj6CG3Ce+BpdWfHxJCkiQEXf0cIWJQ/UMaCWMLcN7kTwE?=
 =?us-ascii?q?Ur6hS4km1Ry1sA/6yrxnLvfb+yECtJLj0sR16PPXlR0o6TN0CMGd2XmXT25ohm?=
 =?us-ascii?q?MIWyM23KdnrENn0VeD0a94g/9CGdxJ/fxJUBw3NZrdz+x8FtDzVRjNftaPSFa6?=
 =?us-ascii?q?XNqmBSs9Qc42w98Le0x9Acmtjgjf3yq2BL8Yj7+LC4Yy8q7G23jxJtxyy3DJ1K?=
 =?us-ascii?q?Q6i1kmQ81PNXCph6Jl9gjTAZLJnFudl6qwaasc2yvN/n+ZzWWSpEFYTBJwUaLd?=
 =?us-ascii?q?UH8CfETWs8r26lnCT7C0D7QnKRVOyciFJqtOad3piFFGSeznONTfZWKxhmixCQ?=
 =?us-ascii?q?yJxrOKcIrlZWEd0D/BB0gDlgAZ5WyGOhQmBie9v2LeCyRjGk/1bEPy7+ZysnO7?=
 =?us-ascii?q?QVUyzwGRcUJh0aG4+hoUhfyaVvMS0agIuCYnqzVoAlm928jaBMaHpwpkZK9ce8?=
 =?us-ascii?q?8y4E9b1WLFsAxwJoCgL6Fnhl4ZbwR3v0Pv2w9rColalsgqtncqzAt0KaKXy15B?=
 =?us-ascii?q?czKY3ZbtOrzYMGXy/Rava7LI1VHaytqZ5qAP6PEgoVX5oA6pDlYi82lg09RNyX?=
 =?us-ascii?q?Sc4ovFDQUMXpPxSEo47AV6qKzAbSk75IPU0mNsPLKwsj/D3dIpGeQkxgyhf9dZ?=
 =?us-ascii?q?LKOLCgvyH9cGCMipLewgg0KpYQ4cPOBO6K40ONurdvub2KKxIOlshjOnjWRd74?=
 =?us-ascii?q?B73UKB7C58Su/O35YYzPCUxAqHVzHgjFi/tsD7g5xLZTYXHmCn0yjrGJZRZrFu?=
 =?us-ascii?q?fYYMEWquOcy3yclkiJ73RnFY80SvB1UY18+zeBqedkDy0hdU1UsKv3Ongyy4zz?=
 =?us-ascii?q?pvnjEtr6qf2jHOwuv4eBoGPG5LWHdtjVP2LYeoiNAaWVCibxI1mxu9+Ub6269b?=
 =?us-ascii?q?qbx/LmnSW0tJfzL6L3p/Uqu2rbeCZ89P6JU1sSRYSui8YFaaSqLjrBseyS/sA2?=
 =?us-ascii?q?xexDUjfTGwppr5hwB6iH6aLHtrrnrWY9twxRTc5NzbX/JRxSAJRCp7iTnWAFiz?=
 =?us-ascii?q?Id+p8M6Ql5fCtOC+Sm2gWodScSnt0YOPqi+76Xd2Dh24mvC5gsfnHhQi0S/ny9?=
 =?us-ascii?q?lqUj3FrRbmbYnszai6M+Nnfk9zCV/46sp6HJx+k4QqiJER33gamoua/X4dnWjv?=
 =?us-ascii?q?NtVb3Lr0bGARSj4T397V/A/l1VVgLn2TxoL1THWdwtZ7aNm8bWMbwSY978FMCK?=
 =?us-ascii?q?eJ471Ihyp1olykrQ3PZfhxhCsSyfwr6HQCmeEGpBItzjmBArAVBURYOC3slxeS?=
 =?us-ascii?q?4NykoqRYen2vcaSu20pkht+uEquCog5HVXb9e5ciGzJw78plPFLN1n3z9p/reN?=
 =?us-ascii?q?3KYd0PsR2Ulg/Kj/JJJ5IpivoKmS1nNHrhvX0izu43lx1v0ou8vIiaMGVt56O5?=
 =?us-ascii?q?DwVcNj30YcMT5z7sgbxfnsaQw4CgAJFhFi8XU5vvSPKiCCgSuuj/NwaSDD08rW?=
 =?us-ascii?q?+WFqHFEg+Y7EdmsmjDE5S2N3yMIHkZzNNiRASSJUBFgQAUWik6kYA9Fgyw2MPh?=
 =?us-ascii?q?d0J57CgL5lHkshtM1v5oNx7nX2fdvgiobyk7SIOFIBpK9A1C5FrVMc+D7uJ1BS?=
 =?us-ascii?q?5Y5YasrAiMKmydegRJAnsFWk2CB1D/ILau4cPM/PSfBuq7N/HOe6mBqfRCV/eU?=
 =?us-ascii?q?wpKiyotn/zGRNsWWI3ltFfs71lBYXXB+HcTZlC4CSygWlyLLcs6aqw2w+ixxrs?=
 =?us-ascii?q?Cj7vvrXBjj6peIC7tXKd9v4Qy5gb+fN+6MgyZ0MTZY2Y0NxX/Ly7gf3UQeiyJ0?=
 =?us-ascii?q?dzmqHrQPqzTNTL/LmqJMCx4baiVzNNZH7q4m3wlNP9Lbhc3x1rJikvE1DFJFX0?=
 =?us-ascii?q?T7ms61fcwKP329NFTfCUmRKbSJPifLzN/3YK+mTb1Qjf5ZtxmxuTadDk/iMS6P?=
 =?us-ascii?q?lzjvVxCzL+5MiDuXMwBZuIG4ahxtE3TsTMr6ah2nN996lSE2wbwxhn/QKWEQKy?=
 =?us-ascii?q?Rzc0NTob2W9i5YhvR/G2pc7ntqN+WEmiCZ7/XGJZYSq/dkHiN0l+dC6nQg17RV?=
 =?us-ascii?q?9D1EROBymCbKrt9huVemkuyOyjphSBVPqzZLi5iNvUVtIqjZ8phAWXDZ/BMC92?=
 =?us-ascii?q?mQChIKp8d7Bd3roaxf1t/PlKegYAtFpsnI9NEaBsfUNOqIdnwqLFzkFCOSEBRB?=
 =?us-ascii?q?BTyqL2D3nUFGluyW8nzTs4N+4pHikZcUQLJBfEcoDf5cBkk2MsYFJcJdUzVsrr?=
 =?us-ascii?q?6akNIF4zLqphTXAtpav4zbW/S6DvDmKTLfhr5BMUhbiYjkJJgeY9Wok3dpbUN3?=
 =?us-ascii?q?ycGTQxLd?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACfaRpch0O0hNFkDg4BAQEEAQEHB?=
 =?us-ascii?q?AEBgVEHAQELAYJpgQInjBaLfIIhigGNSBSBXxMBARgDEAGHLSI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmIDAwECJBkBGx0BAwIJAQEFORIDIBEBBQEcB?=
 =?us-ascii?q?xIFgx0BgWgBAxUEAZxjPIwVFgUBF4J3BYQ+ChknDV6BNwIGEodsgyWBHIFXP4E?=
 =?us-ascii?q?Rh3cFhXYCoTQHAoIlBI8tJIl3h2KJSIgoh2sCBAIEBQIFDyGBJYIOTSODPAmCE?=
 =?us-ascii?q?gwXEoM4FooCO0AygQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACfaRpch0O0hNFkDg4BAQEEAQEHBAEBgVEHAQELAYJ?=
 =?us-ascii?q?pgQInjBaLfIIhigGNSBSBXxMBARgDEAGHLSI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmIDAwECJBkBGx0BAwIJAQEFORIDIBEBBQEcBxIFgx0BgWgBAxU?=
 =?us-ascii?q?EAZxjPIwVFgUBF4J3BYQ+ChknDV6BNwIGEodsgyWBHIFXP4ERh3cFhXYCoTQHA?=
 =?us-ascii?q?oIlBI8tJIl3h2KJSIgoh2sCBAIEBQIFDyGBJYIOTSODPAmCEgwXEoM4FooCO0A?=
 =?us-ascii?q?ygQUBAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="58147978"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 07:56:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730560AbeLSP4q (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 10:56:46 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:37081 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730502AbeLSP4e (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 10:56:34 -0500
Received: by mail-wm1-f67.google.com with SMTP id g67so6969396wmd.2;
        Wed, 19 Dec 2018 07:56:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=Dx/xK0RPW2Lm4RTnTSdayPB1mXeHlkjPqDKxt/FlTYM=;
        b=uT3RP4hZ/DEf3FHnmnLfA0r3NF1GIV1bsBOVPUlc9/prQ9MSPHrlpI4O+/KnlZZaDx
         IP4kkm0Rd+OPfRycRd5UKqh+mTKCBaz0riQLbsCWStbcwqMjytVZaJf4RBCbHuagNovc
         chuD2iyqKld37WgcAzc2RzpowHlRjJ1n8RbpBWv828/Bv0fyKw+nCKbrOgmkLV5T66HU
         nMawDGBcUalrU1AT6rbLpfBU9j9JH5Hsv8wpN1TC3rVV91ruqroIQ1YAXUPdNPG4Bh/8
         SGID7Rg3z8pMAJ4JxVEDJ/2vXy2rccCXn1NhHDQH1fdHWfKVTLBVBqhuQqacWvf+nB7V
         z72w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references;
        bh=Dx/xK0RPW2Lm4RTnTSdayPB1mXeHlkjPqDKxt/FlTYM=;
        b=rQd16Z3J+8zjX2RdJv3Q5ltGqI9Ef0to2S5jtej2/lLRjtdxHTVcKEZV/uLmKx+T9N
         jcFic+4j8M53wasJmt4SMSLcgf7vkoFWisisv4Dwk0ov9rMc81wKOQS40gC75/vHvqnu
         52zsDN+ThHR7WaSLEjAj5tYS6B/Tj0gF/wdfJTZPaOn+yIj3zHpjiHwuY9sl53FjB4KU
         SErC1W1Ki5wiOVzQl5zhvIR0jINZ24QCUSqblafiAxfqwZbzNf3grBb0NFoVYVcnoS+A
         Suso78bA0CaMbbx0hI4LEuCZM407T2xd1HQLBlG+b8q9nCC+FSUcLc2xiAzzaPoiyWEw
         N+Cw==
X-Gm-Message-State: AA+aEWbAzo+319jpIVhMlJKdujVAJgYZGeNRHBXcfkeH9qKMQW9ARRHw
        3Ghqm9ZzViLagtMT4LS2d9A=
X-Google-Smtp-Source: AFSGD/WzrHrGMbMsACXlzav1xUQl3C83IiETnFwMbF8GBgDUaeahhM8ywgLn4QaMgw+3VzWzGQBK6Q==
X-Received: by 2002:a1c:b1d5:: with SMTP id a204mr8133515wmf.32.1545234990621;
        Wed, 19 Dec 2018 07:56:30 -0800 (PST)
Received: from Sarah.corp.lairdtech.com ([109.174.151.67])
        by smtp.gmail.com with ESMTPSA id c9sm6836099wmh.27.2018.12.19.07.56.29
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 19 Dec 2018 07:56:30 -0800 (PST)
From: Ben Whitten <ben.whitten@gmail.com>
X-Google-Original-From: Ben Whitten <ben.whitten@lairdtech.com>
To: starnight@g.ncu.edu.tw, jiri@resnulli.us, afaerber@suse.de
Cc: linux-lpwan@lists.infradead.org,
        linux-arm-kernel@lists.infradead.org, netdev@vger.kernel.org,
        Ben Whitten <ben.whitten@lairdtech.com>,
        "David S. Miller" <davem@davemloft.net>,
        linux-kernel@vger.kernel.org
Subject: [PATCH RFC lora-next 4/4] net: lora: sx1301: introduce a lora frame for packet metadata
Date: Wed, 19 Dec 2018 15:56:16 +0000
Message-Id: <20181219155616.9547-5-ben.whitten@lairdtech.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181219155616.9547-1-ben.whitten@lairdtech.com>
References: <20181219155616.9547-1-ben.whitten@lairdtech.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Information such as spreading factor, coding rate and power are on a per
transmission basis so it makes sence to include this in a header much
like CAN frames do.

Signed-off-by: Ben Whitten <ben.whitten@lairdtech.com>
---
 drivers/net/lora/dev.c    |  2 -
 drivers/net/lora/sx1301.c | 79 +++++++++++++++++++++++++++++++++------
 include/uapi/linux/lora.h | 46 +++++++++++++++++++++++
 3 files changed, 114 insertions(+), 13 deletions(-)

diff --git a/drivers/net/lora/dev.c b/drivers/net/lora/dev.c
index 0d4823de8c06..62dbe21668b0 100644
--- a/drivers/net/lora/dev.c
+++ b/drivers/net/lora/dev.c
@@ -11,8 +11,6 @@
 #include <linux/lora/skb.h>
 #include <net/rtnetlink.h>
 
-#define LORA_MTU 256 /* XXX */
-
 struct sk_buff *alloc_lora_skb(struct net_device *dev, u8 **data)
 {
 	struct sk_buff *skb;
diff --git a/drivers/net/lora/sx1301.c b/drivers/net/lora/sx1301.c
index 9bcbb967f307..fed6d6201bf3 100644
--- a/drivers/net/lora/sx1301.c
+++ b/drivers/net/lora/sx1301.c
@@ -584,7 +584,7 @@ static int sx1301_load_tx_gain_lut(struct sx1301_priv *priv)
 	return ret;
 };
 
-static int sx1301_tx(struct sx1301_priv *priv, void *data, int len)
+static int sx1301_tx(struct sx1301_priv *priv, struct lora_frame *frame)
 {
 	int ret, i;
 	u8 buff[256 + 16];
@@ -617,11 +617,67 @@ static int sx1301_tx(struct sx1301_priv *priv, void *data, int len)
 	hdr->tx_power = 15; /* HACK power entry 15 */
 
 	hdr->u.lora.crc16_en = 1; /* Enable CRC16 */
-	hdr->u.lora.cr = 1; /* CR 4/5 */
-	hdr->u.lora.sf = 7; /* SF7 */
-	hdr->u.lora.payload_len = len; /* Set the data len to the skb len */
+
+	switch (frame->cr) {
+	case LORA_CR_4_5:
+		hdr->u.lora.cr = 1; /* CR 4/5 */
+		break;
+	case LORA_CR_4_6:
+		hdr->u.lora.cr = 2; /* CR 4/6 */
+		break;
+	case LORA_CR_4_7:
+		hdr->u.lora.cr = 3; /* CR 4/7 */
+		break;
+	case LORA_CR_4_8:
+		hdr->u.lora.cr = 4; /* CR 4/8 */
+		break;
+	default:
+		return -ENXIO;
+	}
+
+	switch (frame->sf) {
+	case LORA_SF_6:
+		hdr->u.lora.sf = 6; /* SF6 */
+		break;
+	case LORA_SF_7:
+		hdr->u.lora.sf = 7; /* SF7 */
+		break;
+	case LORA_SF_8:
+		hdr->u.lora.sf = 8; /* SF8 */
+		break;
+	case LORA_SF_9:
+		hdr->u.lora.sf = 9; /* SF9 */
+		break;
+	case LORA_SF_10:
+		hdr->u.lora.sf = 10; /* SF10 */
+		break;
+	case LORA_SF_11:
+		hdr->u.lora.sf = 11; /* SF11 */
+		break;
+	case LORA_SF_12:
+		hdr->u.lora.sf = 12; /* SF12 */
+		break;
+	default:
+		return -ENXIO;
+	}
+
+	hdr->u.lora.payload_len = frame->len; /* Set the data length */
 	hdr->u.lora.implicit_header = 0; /* No implicit header */
-	hdr->u.lora.mod_bw = 0; /* Set 125KHz BW */
+
+	switch (frame->bw) {
+	case LORA_BW_125KHZ:
+		hdr->u.lora.mod_bw = 0; /* 125KHz BW */
+		break;
+	case LORA_BW_250KHZ:
+		hdr->u.lora.mod_bw = 1; /* 250KHz BW */
+		break;
+	case LORA_BW_500KHZ:
+		hdr->u.lora.mod_bw = 2; /* 500KHz BW */
+		break;
+	default:
+		return -ENXIO;
+	}
+
 	hdr->u.lora.ppm_offset = 0; /* TODO no ppm offset? */
 	hdr->u.lora.invert_pol = 0; /* TODO set no inverted polarity */
 
@@ -632,7 +688,7 @@ static int sx1301_tx(struct sx1301_priv *priv, void *data, int len)
 
 	/* Copy the TX data into the buffer ready to go */
 
-	memcpy((void *)&buff[16], data, len);
+	memcpy((void *)&buff[16], frame->data, frame->len);
 
 	/* Reset any transmissions */
 	ret = regmap_write(priv->regmap, SX1301_TX_TRIG, 0);
@@ -644,7 +700,7 @@ static int sx1301_tx(struct sx1301_priv *priv, void *data, int len)
 	if (ret)
 		return ret;
 	ret = regmap_noinc_write(priv->regmap, SX1301_TX_DATA_BUF_DATA, buff,
-				 len + 16);
+				 frame->len + 16);
 	if (ret)
 		return ret;
 
@@ -653,8 +709,8 @@ static int sx1301_tx(struct sx1301_priv *priv, void *data, int len)
 	if (ret)
 		return ret;
 
-	dev_dbg(priv->dev, "Transmitting packet of size %d: ", len);
-	for (i = 0; i < len + 16; i++)
+	dev_dbg(priv->dev, "Transmitting packet of size %d: ", frame->len);
+	for (i = 0; i < frame->len + 16; i++)
 		dev_dbg(priv->dev, "%X", buff[i]);
 
 	return ret;
@@ -683,17 +739,18 @@ static void sx1301_tx_work_handler(struct work_struct *ws)
 	struct sx1301_priv *priv = container_of(ws, struct sx1301_priv,
 						tx_work);
 	struct net_device *netdev = dev_get_drvdata(priv->dev);
+	struct lora_frame *frame = (struct lora_frame *)priv->tx_skb->data;
 	int ret;
 
 	netdev_dbg(netdev, "%s\n", __func__);
 
 	if (priv->tx_skb) {
-		ret = sx1301_tx(priv, priv->tx_skb->data, priv->tx_skb->len);
+		ret = sx1301_tx(priv, frame);
 		if (ret) {
 			netdev->stats.tx_errors++;
 		} else {
 			netdev->stats.tx_packets++;
-			netdev->stats.tx_bytes += priv->tx_skb->len;
+			netdev->stats.tx_bytes += frame->len;
 		}
 
 		if (!(netdev->flags & IFF_ECHO) ||
diff --git a/include/uapi/linux/lora.h b/include/uapi/linux/lora.h
index 4ff00b9c3c20..d675025d2a6e 100644
--- a/include/uapi/linux/lora.h
+++ b/include/uapi/linux/lora.h
@@ -21,4 +21,50 @@ struct sockaddr_lora {
 	} lora_addr;
 };
 
+#define LORA_MAX_DLEN	256
+
+enum lora_bw {
+	LORA_BW_125KHZ,
+	LORA_BW_250KHZ,
+	LORA_BW_500KHZ,
+};
+
+enum lora_cr {
+	LORA_CR_4_5,
+	LORA_CR_4_6,
+	LORA_CR_4_7,
+	LORA_CR_4_8,
+};
+
+enum lora_sf {
+	LORA_SF_6,
+	LORA_SF_7,
+	LORA_SF_8,
+	LORA_SF_9,
+	LORA_SF_10,
+	LORA_SF_11,
+	LORA_SF_12,
+};
+
+/**
+ * struct lora_frame - LoRa frame structure
+ * @freq: Frequency of LoRa transmission in Hz
+ * @power: Power of transmission in dBm
+ * @bw:  bandwidth, 125, 250 or 500 KHz
+ * @cr:  coding rate, 4/5 to 4/8
+ * @sf:  spreading factor from SF6 to 12
+ * @data:   LoRa frame payload (up to LORA_MAX_DLEN byte)
+ */
+struct lora_frame {
+	__u32		freq; /* transmission frequency in Hz */
+	__u8		power; /* transmission power in dBm */
+	enum lora_bw	bw; /* bandwidth */
+	enum lora_cr	cr; /* coding rate */
+	enum lora_sf	sf; /* spreading factor */
+	__u8		len;
+	__u8		data[LORA_MAX_DLEN] __attribute__((aligned(8)));
+};
+
+#define LORA_MTU (sizeof(struct lora_frame))
+
 #endif /* _UAPI_LINUX_LORA_H */
-- 
2.17.1

