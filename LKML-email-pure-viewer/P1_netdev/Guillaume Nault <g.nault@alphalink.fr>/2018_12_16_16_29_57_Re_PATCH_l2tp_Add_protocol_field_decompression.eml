Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 08:32:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B4AF85805FC;
	Sun, 16 Dec 2018 08:38:13 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Dec 2018 08:38:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AOdbSAhU1iJBmnaldluUd4pH4cPvV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCAu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27zbTIzTTHb/NSwzj99Y3IfQ48qv+UR71wbM7RyVUyHA7CgVWc?=
 =?us-ascii?q?s4rlMCmI1uQJr2iW9PBvVea3i24nsQ5xpjmvxsEvioXTiIIV0EnJ+CNky4g2Pd?=
 =?us-ascii?q?21UFB3bcKgHZdKqi2XOZV6Ttk/T2xrpCo20LwLtJyjcCUJ1pgr3QPTZ+Kbf4SS?=
 =?us-ascii?q?/x7uV+WcLS1miH55ZL6ygQu5/1K6xe3mTMa01U5HripbndnIsXAAzwLT6seZRf?=
 =?us-ascii?q?tn5Euh2iiA1xrV6u5aJUA4j63bK4QuwrIol5oTt1rMHjPulUnokKObcl8o9vWm?=
 =?us-ascii?q?5uj5eLnqu5yRO5Nuhgz/MKkigsm/Dv45MggKUWib4+O81Lj78E39QbVKiOA2k6?=
 =?us-ascii?q?bAvJDZO8sbvKi5DBFR0oo67Ba+ATGm38oCnXQcMlJFdwyIj5LzN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtxwPDGJLLhDo3XLnffiLfhYap960lExQo3zNBf5IxbBqsOIfLuQULxsN?=
 =?us-ascii?q?3YDhkkMw272ernCdN91p8AVmKLGKOWLKTSsVqQ7OI1P+aMfJMVuCr6K/U95/7h?=
 =?us-ascii?q?l345mUMHcqmux5cXaG24Ee5gI0WWenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIe+B4fZWo+tmKCB3Du8HpBOZGBGDU6DHW3rd4WDXfcMbiWSL9RlkjwF?=
 =?us-ascii?q?U7ihVoAg2QuvtA/817poMO7U9jcEupLk0dh///fTmg0q9TxoE8Sd1HmAQHtvnm?=
 =?us-ascii?q?MIQD8237pzoVZnxVeByqV4h/1YFdpO5/JGSAs6NJjcz/BkBND2QA7OYtCJSFO+?=
 =?us-ascii?q?SNW8HT4xVs4xw8MJY0tlGNWtlBbD0zCuA78UjbOLApM0/7nY33jwIcZ91nnH2L?=
 =?us-ascii?q?Mgj1kgXstAK2mmirRj+AjUAo7Di1+ZmLqydaQAwC7N83+OwneUs0FGTgF8S6XF?=
 =?us-ascii?q?UmoZZkvNs9v54ETOT7utCbQiNgtM0sqCKqpMat30glRKXvbjONLCY22vn2e8Hw?=
 =?us-ascii?q?qHxrSJbIDyYWUSwD3dCFQYkwAU5XuJKBIxBjm/rG7EDDxhD1TvY1jy/ul4s367?=
 =?us-ascii?q?Sk40zweXb0xuzba1+xgVheCCRPMXxL4LpCAhqzBsFlanw93WE8aApxZmfKhEfd?=
 =?us-ascii?q?M94VJH1WXFtwx9Pp2sNbxiikQZcwRtu0Pu1hN3CopbnMgurXMqyhdyKK2C3FNA?=
 =?us-ascii?q?cTOYwY7/OrnNJmbu+xCvbrbc2kvC39aO5qcP9PM4pk35swGtCEUj/Gto0tlP33?=
 =?us-ascii?q?SH+5XFERAdUZTyUkYw6Rh3vLXaYig754PJ2nxgK6i0sjne2903AOsp0Aqvf9Ba?=
 =?us-ascii?q?MKmcDg/9D9UaB9SyKOwtg1Wobg8EMPpO+6IuPsKmd+GJ2KikPOt7mDKmjGJH4J?=
 =?us-ascii?q?1y006W9ip8TPLI0IgBw/2CwgSHUDL8hk+7ss/rgYBEeS0SHm2nxCj+BY5eerd9?=
 =?us-ascii?q?fZwWBmepOcG3wMtxh4TsW3JB6FGsHVcG19K3dhqIaFz92xZd1UAWoXyhhCu5wC?=
 =?us-ascii?q?Z4kzAvrqqDwiPOx/7uewYAOm5OXGNil0vjIZCoj9AGW0ildwgolBq/6Uf63aRb?=
 =?us-ascii?q?v7l/L2/ITEdMfij2KXxiU6SqurqDZc5P9I0nsSFNXOugZlCaT6b3owEG3CP7A2?=
 =?us-ascii?q?te2Dc7eimouprjhRx6i2GdLHFpoHrCY85wxhTf5N3aRfFP2DoLXy14iTjRBlih?=
 =?us-ascii?q?MNil59SUl5Hfsu+gU2KtTIFccS7uzYmYriu0+XVqAQGjn/C0gtDmERI10Sjh29?=
 =?us-ascii?q?loVCXIqg3xYo3q16S8LOJmcVNkBF7668pmBI5+lpE8i40X2Xgfnp+V52YIkX/v?=
 =?us-ascii?q?MdVH3qLzdHkNSiQKw9LP4AjlxVdsLnSGx4/iUnWdw81hZ8S1Y28M2yI96dxKB7?=
 =?us-ascii?q?mQ7LBegSR1pV+4pxrLYfdhhjcd1ecu6HkCjuEMuQotzT+SDqocHEZGJizsiwqH?=
 =?us-ascii?q?78qlo6pJfmavfqO91E5/ndCnEbGDrRtQWHf/epc+AyBw6t9zP07L0H328ovkYs?=
 =?us-ascii?q?XfbcoPth2IlBfNl/RVKJU0lvYQhCtoI2T9vWA+y+4gjBxjxpW6vImBK2Vw86O1?=
 =?us-ascii?q?GB9YNjvpZ8wN/jHhl7pRnsGT34q3BJVuBi0LXIf0TfKvCD8dru7oNwGKED0hsH?=
 =?us-ascii?q?ubHaffEBSb6EdnqXLPDp+qO2uWJHkf0dVtWh2dKFZDjwATWTUwhoQ5GRyyxMz9?=
 =?us-ascii?q?bEd54Sgc5lzipRtJ1O1oLAPzUnvFqAerdzc0S4WfLBxM4QFZ/ErVNc2e7uRuHy?=
 =?us-ascii?q?BX5JGhrQqNKnCFaARMF20GRkuEB1X7NLm0+dbA6/SYBva5L/bWYbSOrvFeV+6V?=
 =?us-ascii?q?xZ211Itq5S2MNsKJPnltFPA73ktDXXZkG8XWgTkPSioXlz7TYM6fvhuz5ip3rs?=
 =?us-ascii?q?Wn+vTxRA3v/ZePC6dVMdh3+xC5n6aDN+2ThCZ4MzpY1YkMxXjHyLcBxl4Sljpu?=
 =?us-ascii?q?eiKpEbQBsy7NUa3RlrVWDx4ddyN8Ks9I47gg0QlKPM7Rksn12aJgjv4pF1dFUk?=
 =?us-ascii?q?Tsldu0ZcMROWGyKlPGCFyPNLSHPjDLx8D3YaWhSbxflulUthuwuSqFHE/nJDiM?=
 =?us-ascii?q?iz7pVxW3O+FWkC6bJABeuJ26cht1FWjjTdfmZgenP9NtkTI2waM7hnXROG4YMD?=
 =?us-ascii?q?h8dV5Nr7KK4SNZhPV/B3JO7n5/IeaYnCaZ6vHSKowKvvtzHiR0i+Va7Ww6yrRP?=
 =?us-ascii?q?6iFEQf11mC3Kod9vo1GpiO+PyjV8XRpKqzZLgp+LvEp4NaXY8JlARWjL/BYX4W?=
 =?us-ascii?q?qMDBQKoogtNtq6gKlVguDVk77oJTFB9JqA5sYZCs6SMNiALGEsNxnuMDrVCgIf?=
 =?us-ascii?q?SnisL26J1GJHl/TH2WCUqpwzt53h0LwHV7tHHAg6UPUTF0B5NNUGOJd+WjIikv?=
 =?us-ascii?q?iVlphbtjKFsBDNSZAC7dj8XfWIDKCqcW7BgA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ASAAC6fhZch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYNqJ4wVjgMUjXyJSIFxLhMBh0ciNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS9CARABgWIkAYJiAQIDAQIkEz8GCQEBCg4KCSUDDEgGEwWDHYIBBAGla?=
 =?us-ascii?q?DOKHYw+gVc/hCOBfohiAokwOIc0j30HAoEQkD8jCoFThRyKWZsKIIIOMxongzi?=
 =?us-ascii?q?CJxeOHj8BMYECAwEBIROBKIwOAQE?=
X-IPAS-Result: =?us-ascii?q?A0ASAAC6fhZch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYN?=
 =?us-ascii?q?qJ4wVjgMUjXyJSIFxLhMBh0ciNAkNAQMBAQEBAQECARMBAQEKCwkIKS9CARABg?=
 =?us-ascii?q?WIkAYJiAQIDAQIkEz8GCQEBCg4KCSUDDEgGEwWDHYIBBAGlaDOKHYw+gVc/hCO?=
 =?us-ascii?q?BfohiAokwOIc0j30HAoEQkD8jCoFThRyKWZsKIIIOMxongziCJxeOHj8BMYECA?=
 =?us-ascii?q?wEBIROBKIwOAQE?=
X-IronPort-AV: E=Sophos;i="5.56,361,1539673200"; 
   d="scan'208";a="67054024"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 16 Dec 2018 08:38:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730757AbeLPQiJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 16 Dec 2018 11:38:09 -0500
Received: from zimbra.alphalink.fr ([217.15.80.77]:58952 "EHLO
        zimbra.alphalink.fr" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730609AbeLPQiG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 16 Dec 2018 11:38:06 -0500
Received: from localhost (localhost [127.0.0.1])
        by mail-2-cbv2.admin.alphalink.fr (Postfix) with ESMTP id 485712B5202D;
        Sun, 16 Dec 2018 17:29:22 +0100 (CET)
Received: from zimbra.alphalink.fr ([127.0.0.1])
        by localhost (mail-2-cbv2.admin.alphalink.fr [127.0.0.1]) (amavisd-new, port 10032)
        with ESMTP id aVyryvOCQWW6; Sun, 16 Dec 2018 17:29:20 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by mail-2-cbv2.admin.alphalink.fr (Postfix) with ESMTP id A500F2B52035;
        Sun, 16 Dec 2018 17:29:20 +0100 (CET)
X-Virus-Scanned: amavisd-new at mail-2-cbv2.admin.alphalink.fr
Received: from zimbra.alphalink.fr ([127.0.0.1])
        by localhost (mail-2-cbv2.admin.alphalink.fr [127.0.0.1]) (amavisd-new, port 10026)
        with ESMTP id qT-yJbMPiA3c; Sun, 16 Dec 2018 17:29:20 +0100 (CET)
Received: from localhost (unknown [82.120.188.200])
        by mail-2-cbv2.admin.alphalink.fr (Postfix) with ESMTPSA id 565292B5202D;
        Sun, 16 Dec 2018 17:29:20 +0100 (CET)
Date: Sun, 16 Dec 2018 17:29:57 +0100
From: Guillaume Nault <g.nault@alphalink.fr>
To: Sam Protsenko <semen.protsenko@linaro.org>
Cc: James Chapman <jchapman@katalix.com>,
        "David S. Miller" <davem@davemloft.net>, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] l2tp: Add protocol field decompression
Message-ID: <20181216162605.qn2jjbyb2bgcbxgq@kdev>
References: <20181214175921.6859-1-semen.protsenko@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181214175921.6859-1-semen.protsenko@linaro.org>
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 14, 2018 at 07:59:21PM +0200, Sam Protsenko wrote:
> When Protocol Field Compression (PFC) is enabled, the "Protocol" field
> in PPP packet will be received without leading 0x00. See section 6.5 in
> RFC 1661 for details. So let's decompress protocol field if needed, the
> same way it's done in drivers/net/ppp/pptp.c.
> 
> In case when "nopcomp" pppd option is not enabled, PFC (pcomp) can be
> negotiated during LCP handshake, and L2TP driver in kernel will receive
> PPP packets with compressed Protocol field, which in turn leads to next
> error:
> 
>     Protocol Rejected (unsupported protocol 0x2145)
> 
> because instead of Protocol=0x0021 in PPP packet there will be
> Protocol=0x21. This patch unwraps it back to 0x0021, which fixes the
> issue.
> 
> Sending the compressed Protocol field will be implemented in subsequent
> patch, this one is self-sufficient.
> 
> Signed-off-by: Sam Protsenko <semen.protsenko@linaro.org>
> ---
>  net/l2tp/l2tp_ppp.c | 4 ++++
>  1 file changed, 4 insertions(+)
> 
> diff --git a/net/l2tp/l2tp_ppp.c b/net/l2tp/l2tp_ppp.c
> index 04d9946dcdba..c03c6461f236 100644
> --- a/net/l2tp/l2tp_ppp.c
> +++ b/net/l2tp/l2tp_ppp.c
> @@ -236,6 +236,10 @@ static void pppol2tp_recv(struct l2tp_session *session, struct sk_buff *skb, int
>  	    skb->data[1] == PPP_UI)
>  		skb_pull(skb, 2);
>  
> +	/* Decompress protocol field if PFC is enabled */
> +	if ((*skb->data) & 0x1)
> +		*(u8 *)skb_push(skb, 1) = 0;
> +
Sorry, but PFC is PPP stuff. It's absolutely independent from the
transport layer. Therefore, it belongs to ppp_generic.c and L2TP has
nothing do with it.

I know some other transports got it wrong, but let's stop
re-implementing PPP features in every lower layer. Teaching ppp_input()
about PFC is all that is needed to get the feature work correctly on
all transports. As a bonus, it'd bring PFC support to PPPoE and would
let us drop the duplicated code from pptp.c, ppp_async.c and
ppp_synctty.c.

As an example of the problems caused by mixing the PPP and L2TP
layers, consider the case of L2TP sockets that aren't PPPOX_BOUND.
They're supposed to receive the original PPP frames. Now with your
patch if the protocol was compressed, the L2TP socket receives a fake
header. User space didn't ask for that and has no way to figure out
what was the original packet. To make things worse, that behaviour now
changes depending on the kernel version.

If you all agree, can we please revert this patch and properly
implement PFC in ppp_generic.c?
