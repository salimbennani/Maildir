Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:21:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 651B3580224;
	Fri, 30 Nov 2018 10:47:56 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 10:47:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUmcINR8y8Tfsef9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1ekfIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CWGRPQMhRWSxCDI2y?=
 =?us-ascii?q?YYQAAOgOMvpXoYnmv1sDrwCzBRWuCe711jNEmnH70K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rWstr1NaESXv6vzKLVyDvMdfdW2TPz6YfWcxAhveyHULVwccrS00YvEwfFj1uO?=
 =?us-ascii?q?pozkIzOZy/8As2ee7+V6VOKvj3QrpB12ojiq38ohjJTCiIENyl3c6yl13II4Kc?=
 =?us-ascii?q?elREN1f9KoCoZcuiKGO4dsQ84vQXlktDgmxrEat5O2eTYFx44iyhPccPOIb4aI?=
 =?us-ascii?q?7xf9W+ufPTt0mHdodbyiixqu8UWtz/PzW8i73VtOqydIk8fAuW4Q2BHW5MWLVO?=
 =?us-ascii?q?Zx80G80jiVzQ/T8PtLIUUsmKrbNZEhxrkwm4INsUTMACD2gl/6jKyIeUU+/Oin?=
 =?us-ascii?q?9eDnbq/hpp+GOI94kgD+MqIwlcyjGek0LBQCUmyB9eih2rDv41f1TKhJg/EqiK?=
 =?us-ascii?q?XUsZLXKdwepqGjAg9V1ogj6wy4DzejyNkYmXgHLFRYeBOIloTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgiTBrxv7APrL/GJXANWbDkLj/crZn8UJcyxQ8zcpZ551KDrENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9Bv5mOVmWYWLwgtcdFmcHpgo+Q/briF2eSzFTYGy+X6?=
 =?us-ascii?q?Ih5j4hDoKmApzORoSsgLyHwSe6EYdaZmFAClCQD3joc5+IVOsLaCKXOsVhiCAL?=
 =?us-ascii?q?VaC9S4890hGjrA36y715IebO+S0YspTj1N5y5+DIkREy9Dp0D9mS0m2XTmF0mH?=
 =?us-ascii?q?8ISCEy3KxlvUN9zVKD27Big/NEDdxT++9JUgAiOJHG1Ox6C9fyWgHbcteTUlmm?=
 =?us-ascii?q?QM6rATUwTtI33t8PbFxxG9SkjhDfwSWqB6UZmKCMBJwx6qjcxWT+J95hy3ba06?=
 =?us-ascii?q?ksl1omTdFJNWG8gq5/9hLcB4jGk0iCk6aqdKIc3DPC9WuZzGqOul1YXxB0Uanf?=
 =?us-ascii?q?QX8fYU7Wp8zj5kzeV7+uFagnMgxZxMGfMKRKdMPmgU9GRPj5PtTeeHy+m2G3CR?=
 =?us-ascii?q?aMxbOMaY7qdn4Z3CXcDkgEjg8S8WyHNQg4GieuvWbeACZyGlLoZkPm6fN+p2+j?=
 =?us-ascii?q?Tk8o0wGKaFVs2Kev9R4Lm/OQUfMT0agCuCc6tTp0Gk2w39bXC9qGugpgc79QYd?=
 =?us-ascii?q?I74Fdby23ZsxZxMYCnL6BnnlQeaRh4v1vy1xVrDYVNidQqrHIvzAp1NaKY0FNA?=
 =?us-ascii?q?eymE3ZzqPb3XMG3y/BGpa67ZwVze1NeW+qES6PU3sVnjvQepFlY8/HVjydVaz3?=
 =?us-ascii?q?yc5pDSBgoITZ3xSlo39wR9p7zCeCY9453b1HJyPqi0qDPNwM8pC/Y/xRamfNdf?=
 =?us-ascii?q?N72EGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9iphSuLSw5kJ2fCZ3gudWDf6g1esqcT3mYFCZTEPEWuz0ynkBIhNZqJs?=
 =?us-ascii?q?eYYHE3uhI8qyxt9mnZ7iR2ZY9EK/B1MBwMKpYxuSYEDn0g1KyEsXpmarmS2mwD?=
 =?us-ascii?q?xukjElt7aQ0zbKw+v/ahUHIGlLRG95gFfoIIi0ic0aXUeyYwgokhul+Vj1x6xB?=
 =?us-ascii?q?qKtjKGnTRF9CfzLqIGF6Tquwqr2CbtZP6ZMpqylWUP6wYUuHSr77uBYa1yLjH2?=
 =?us-ascii?q?1DxDE0bT2qu5P5nwBkh2KZNnp8sH3ZecRozxfF+NPcXeJR3iYBRCRgiznYHEK8?=
 =?us-ascii?q?P9qq/dWTjZvDqfqxV2GiVp1Sdynk04WAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3G4FknYs3np0Q23kahpOO8HoDkGfz?=
 =?us-ascii?q?N8hb2K3kYHoMQz4L38Da4Az/1EJ/KXKJwprzVm+Bzct5e9m6fmQW1zo+789QCa?=
 =?us-ascii?q?eY9rxEnTZvrVq+ogLcevx9njYbyfsz538WmeAJuAwxziqDBrAeB1VXPSvplx6Q?=
 =?us-ascii?q?9dCxsL1XZHqzcbi3zEd+mNGhDLKYrQ1GVnf2ZIwiHTNu4cVlK13Dzmfz6o7/dd?=
 =?us-ascii?q?nUbNITsACUkhjag+hULpIxiuQFhS59NW3hun0lzvYxjQZy0pGioIiHN2Jt8bql?=
 =?us-ascii?q?Ah5fMz35fcIS9SvrjaZDhcaWxIGvE45lGjUKWpvoUP2pHCgTtfThKwaBDjk8pm?=
 =?us-ascii?q?2HFrrYGA+V8F1moG7XE5C3K3GXI2EUws54SxmaIExfnRoYXDEnnpMiEgCqxcrh?=
 =?us-ascii?q?cFp25zwL5174rAdMxfxsNxXlTmjfowKoYC8uSJeDNBpW8h1C50DNPMyc9O1zGj?=
 =?us-ascii?q?9X/oa7oAyRMGCbZBlIDWIUWkyCHV/jJaKj5d3B8+ieG+q/IOHCYbSIqexCSfiI?=
 =?us-ascii?q?wYij3Zdh/zaJLs+PJGVtD+Un2kpfWnB0A8TYmzISSywOiiLCdcibqA2n+i1wqM?=
 =?us-ascii?q?C//+/mWAbu5YuJFrtTPs9j+xGwgaefKeGQgDx1Jipf1pMJ3XXI0qQQ3EYOiyFy?=
 =?us-ascii?q?cDmgCbQAujDMTKLTma9XDgQXayBpNMtP4KIzwBNNOdPAit7u0r54j/g1C0pKVF?=
 =?us-ascii?q?D7m8GpY9AKLH+5NF/dGEmLM7GGLyXRw87reaO8VaFQjOJMuhKqpDaUCFXjMSqD?=
 =?us-ascii?q?ljXzUxCvMPpBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9T9YgvR6G2Bb8nVpN/WLmyaH4OneMZsWtfprAiJpl+NV+ng6yr1V?=
 =?us-ascii?q?7D1aS/xxgifdstluo1S+mOmV1jVnSAZOqipMhI+TvURtI6PZ9pxBWXbC5B0M7G?=
 =?us-ascii?q?WQBA4Mp9tqEdDvv6FQyt7SlKP8MjtC8tTU/dcCCMjQMs6ILH0hMR+6UALTWSUB?=
 =?us-ascii?q?SiSqPGeXqUVclvyW8nzd+pZ8pJHtnpcKTr5zW1k8F/dcAUNgSphKA4pxXzMlkr?=
 =?us-ascii?q?nTrMcZ7GG+rVGFRMxLt4vHV7SRHPPuKDeaipFfYBAJxrX1PZhVPYr+jQgqQ192?=
 =?us-ascii?q?honVU27NW9YF9iRnYhU5v21J7X54CGYzjQatIC+k/n4fXcXy1js3jg9ze65loD?=
 =?us-ascii?q?vl/VoyDlbDuiY1lE4/hZPjjCzHIxDrK6LlfYxXDSfu/2s4NpfkTgdpJVmynkVg?=
 =?us-ascii?q?MCjJRq4Ip7RlfGFvzgTbvM0cSrZnUaRYbUpIlrmsbPIy3AEZ833/yA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAADwhAFch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAQGBL4I7FBODeYN7hB2NagglFIkOjiaBcxIBARgTAYd2IjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCA0JCCkjDEIBEAGBYiQBgmIBAgMBAiAEGQEbHQEDA?=
 =?us-ascii?q?gkBAQUFCwMKAgImAgIDHgIRAQUBHAYBDAYCAQEBgxyBaQEDFQEEmxw8iw18FgU?=
 =?us-ascii?q?BF4J3BYJEgXgKGScNXYE3AgYSeYlzgRyCFoE4DIIxLoJXhS6CVwKBKgGORZAXL?=
 =?us-ascii?q?gYDgVOMN4MnBhiJWQuHO4h7hW+DC4ZBAgQCBAUCBQ8hgSWCDU0jgQFtgU6CGww?=
 =?us-ascii?q?XEoM4ilQ/MoEFAQEhhwuDRwSCSQEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAADwhAFch0O0hNFjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAQGBL4I7FBODeYN7hB2NagglFIkOjiaBcxIBARgTAYd2IjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkjDEIBEAGBYiQBgmIBAgMBAiAEGQEbHQEDAgkBAQUFCwMKAgI?=
 =?us-ascii?q?mAgIDHgIRAQUBHAYBDAYCAQEBgxyBaQEDFQEEmxw8iw18FgUBF4J3BYJEgXgKG?=
 =?us-ascii?q?ScNXYE3AgYSeYlzgRyCFoE4DIIxLoJXhS6CVwKBKgGORZAXLgYDgVOMN4MnBhi?=
 =?us-ascii?q?JWQuHO4h7hW+DC4ZBAgQCBAUCBQ8hgSWCDU0jgQFtgU6CGwwXEoM4ilQ/MoEFA?=
 =?us-ascii?q?QEhhwuDRwSCSQEB?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="140297651"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 10:47:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726776AbeLAF6C (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 00:58:02 -0500
Received: from mail-wm1-f66.google.com ([209.85.128.66]:55042 "EHLO
        mail-wm1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725817AbeLAF6C (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 00:58:02 -0500
Received: by mail-wm1-f66.google.com with SMTP id z18so6838545wmc.4;
        Fri, 30 Nov 2018 10:47:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=rF4Pfy5RoNbnkTsERaQReBugwZFvzeB3IKiFlH+BmbY=;
        b=uNpbs8U5nmURax26mtGpqkB2snhCGDWGreTuD6Sq0B8eJ/h9ihaT0ueabRpWi9QU+f
         c7wgQq0i4xh+YvOI2i20ygO3pU5OC5ZWzNPAiCMunOxgZB4N5Hk2fAnOm2LRGGcbOuA2
         nHUPYq1I3Q/pTR0uk66vqJLGpICnjb2CPJ/Sk5uJqvW3tcFjni9NC6AdgrSMcINFoJak
         uNwmU7W5/cDYS1uHvUx+SfYSIn0qyolBgAoC3mnusOw38C9Nt4YyqT8gIF2G5Vd6sKxn
         VOLLytVN4zmvFfAnbbLP5L0CuFvSNULL31NE+GiIIwWtNz6WmbfJjLpo568izJszHiuq
         Lpfw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=rF4Pfy5RoNbnkTsERaQReBugwZFvzeB3IKiFlH+BmbY=;
        b=UE9y3mg99a+N6IBw4uu4S9wZzdnJ953mgWSat3NpCUDlsoFnCakdh4WckbICNIlRua
         v0llMK0oDqIhOFn4GIi/Z7UX2YEkR9z/kcMoUdB29ANyQuKCu9rjbzN9J+9qraimwgHf
         rHwMaStN4hlwyTi9qa2J2H2ItEX0EOT8Gi4Df/SzgQf0cvDsniXVbScuP7o4lRMjhdOk
         71sSs2yl8t5bRTB1BwxJK8RD8guzFkS37XVgWjP0w4duW/P81tmy1EvDZPdqo03UxdAi
         O5Olq75hJlJlvr6V7E21A1x+YuvWBVd3pBVX4XDMI5lmYGwT5bIN9S6FBHFGu9zs8qnb
         g+QQ==
X-Gm-Message-State: AA+aEWZDnxzbvffdXsPlRDrNv0XzvTXyrbYZDGsUsM1D4Ey1JtBndGM7
        lHNTffffPLdOCxfrvBJfkASincp8
X-Google-Smtp-Source: AFSGD/Wc+UrgbBjzdu3WhUc41BCAQo8slYcI/LaD/Umotni0MqSivI5wwkEQD8CnLkU9dZI6BEbXeQ==
X-Received: by 2002:a7b:cb86:: with SMTP id m6mr6601313wmi.61.1543603667660;
        Fri, 30 Nov 2018 10:47:47 -0800 (PST)
Received: from ?IPv6:2003:ea:8bcf:e300:3105:e649:62ed:321? (p200300EA8BCFE3003105E64962ED0321.dip0.t-ipconnect.de. [2003:ea:8bcf:e300:3105:e649:62ed:321])
        by smtp.googlemail.com with ESMTPSA id y34sm12828227wrd.68.2018.11.30.10.47.46
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 30 Nov 2018 10:47:47 -0800 (PST)
Subject: Re: [RFC PATCH net v2] net: phy: Fix the issue that netif always
 links up after resuming
To: Florian Fainelli <f.fainelli@gmail.com>,
        Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
        Andrew Lunn <andrew@lunn.ch>,
        "David S. Miller" <davem@davemloft.net>
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org
References: <1543569916-8714-1-git-send-email-hayashi.kunihiko@socionext.com>
 <26e04d2e-16e5-ac0b-daab-931b8f5a0103@gmail.com>
From: Heiner Kallweit <hkallweit1@gmail.com>
Message-ID: <47b5606c-564c-2fe8-0683-65288dafe028@gmail.com>
Date: Fri, 30 Nov 2018 19:47:37 +0100
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <26e04d2e-16e5-ac0b-daab-931b8f5a0103@gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 30.11.2018 18:46, Florian Fainelli wrote:
> 
> 
> On 11/30/2018 1:25 AM, Kunihiko Hayashi wrote:
>> Even though the link is down before entering hibernation,
>> there is an issue that the network interface always links up after resuming
>> from hibernation.
>>
>> The phydev->state is PHY_READY before enabling the network interface, so
>> the link is down. After resuming from hibernation, the phydev->state is
>> forcibly set to PHY_UP in mdio_bus_phy_restore(), and the link becomes up.
>>
>> This patch adds a new convenient function to check whether the PHY is in
>> a started state, and expects to solve the issue by changing phydev->state
>> to PHY_UP and calling phy_start_machine() only when the PHY is started.
>>
>> Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
>> Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
>> ---
>>  drivers/net/phy/phy.c        |  2 +-
>>  drivers/net/phy/phy_device.c |  9 +++++----
>>  include/linux/phy.h          | 10 ++++++++++
>>  3 files changed, 16 insertions(+), 5 deletions(-)
>>
>> diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
>> index 1d73ac3..f484d03 100644
>> --- a/drivers/net/phy/phy.c
>> +++ b/drivers/net/phy/phy.c
>> @@ -670,7 +670,7 @@ void phy_stop_machine(struct phy_device *phydev)
>>  	cancel_delayed_work_sync(&phydev->state_queue);
>>  
>>  	mutex_lock(&phydev->lock);
>> -	if (phydev->state > PHY_UP && phydev->state != PHY_HALTED)
>> +	if (phy_is_started(phydev))
>>  		phydev->state = PHY_UP;
>>  	mutex_unlock(&phydev->lock);
>>  }
>> diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
>> index ab33d17..2c39717 100644
>> --- a/drivers/net/phy/phy_device.c
>> +++ b/drivers/net/phy/phy_device.c
>> @@ -309,10 +309,11 @@ static int mdio_bus_phy_restore(struct device *dev)
>>  		return ret;
>>  
>>  	/* The PHY needs to renegotiate. */
>> -	phydev->link = 0;
>> -	phydev->state = PHY_UP;
>> -
>> -	phy_start_machine(phydev);
>> +	if (phy_is_started(phydev)) {
>> +		phydev->link = 0;
>> +		phydev->state = PHY_UP;
>> +		phy_start_machine(phydev);
>> +	}
> 
> Don't you need some of these steps to be performed under phydev->lock
> being held? See comment below.
> 
Yes, locking should be done. The old code sets phydev->state
w/o holding the lock, I'd says this was wrong.

>>  
>>  	return 0;
>>  }
>> diff --git a/include/linux/phy.h b/include/linux/phy.h
>> index 3ea87f7..c194b45 100644
>> --- a/include/linux/phy.h
>> +++ b/include/linux/phy.h
>> @@ -898,6 +898,16 @@ static inline bool phy_is_pseudo_fixed_link(struct phy_device *phydev)
>>  }
>>  
>>  /**
>> + * phy_is_started - Convenience function for testing whether a PHY is in
>> + * a started state
>> + * @phydev: the phy_device struct
>> + */
>> +static inline bool phy_is_started(struct phy_device *phydev)
>> +{
> 
> An assert with the phydev->lock mutex being held here would greatly
> help, because otherwise this is possibly racy.
> 
Have a look at __phy_resume() to see what is meant with this comment.

>> +	return phydev->state >= PHY_UP && phydev->state != PHY_HALTED;
>> +}
>> +
>> +/**
>>   * phy_write_mmd - Convenience function for writing a register
>>   * on an MMD on a given PHY.
>>   * @phydev: The phy_device struct
>>
> 

