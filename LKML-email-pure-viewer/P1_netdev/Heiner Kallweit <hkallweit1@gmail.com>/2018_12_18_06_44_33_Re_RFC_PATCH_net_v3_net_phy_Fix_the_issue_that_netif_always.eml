Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 18:07:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B44C05805FC;
	Mon, 17 Dec 2018 22:44:46 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 22:44:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUwZ5eBwm7AsVrO/XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8fK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwBu7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?narsv6NKYUUe+r1qnD0DDNYOlS2Tf55onHbBEhoe2RVr93ccrRylMgFwfBjlSe?=
 =?us-ascii?q?t4PlPi+V2vkWvmiU6upvT+Ovi2o9pw5tpTivw94hh4/UjYwbzVDE8D92wIczJd?=
 =?us-ascii?q?CgU057ed+kEJ1Rty6GLIt6WMUiTH90uCoizb0HuJq7czIRx5Q83RLfbOaHc4eO?=
 =?us-ascii?q?7xn+V+iROS91iGx5dL+7nRq+7EatxvPmWsWp01tGsjBJn9jOu3wVyRDf9tSLR/?=
 =?us-ascii?q?V480i/wzmC0gPe5fpYLkA6kKfUNZAszqIsmpcWs0nMAzP5lUbzga+Ya0ok9Oyl?=
 =?us-ascii?q?5uHkb7r6uJCQKYp5hhzgPakslcGyB/kzPBIUUGiB4+u80aXu/U3nT7VOif07ir?=
 =?us-ascii?q?fZsJ/EKsQBvKK5ABFa0pwl6xmhCzeqytMYnWMILF5deRKHiZbmO03WLfzmEfuy?=
 =?us-ascii?q?h06gnCplyvzYJLHtH5bAImTZnLrgf7tx80tcxxAyzdBb6ZJUELYBIPfrV0/1td?=
 =?us-ascii?q?zYCAI5MgOtz+bkFtp9zIUeVnyLAqOAN6PTv1mI6fw1I+SXeo8VtyjyK+I/6/7t?=
 =?us-ascii?q?k3A5g1kdcret3ZcNb3C4BPtmL12DYXXwmtcBDXsKvg0mQezuiV2CUiBca2y9Xq?=
 =?us-ascii?q?Ih/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4CcUfcWdC2SOtNhkiAD?=
 =?us-ascii?q?VbW5S48uzxCutBPgxLpgNObU+jAYuojl1Nh6/ODTkRAy9TppD8WSyW2NTmd0nn?=
 =?us-ascii?q?8WSD8yxqxwvUt9ylKb26hin/NYDcBT5+9OUgoiN57cyPJ1B8rxWgLGeNeJTlGm?=
 =?us-ascii?q?T86iATEwSNIx3tAPb1x8G9WkkhDMwS6qD6UJmLyMAZw+6rjc0GTpJ8Zh13bG07?=
 =?us-ascii?q?EsgEM9QstPMm2mhbRz9xLJCI7LiEiZk6eqdaIB3C/C7muDzGyOvF1GXw50S6nK?=
 =?us-ascii?q?QXcfZk7Op9Tj+kzCV6OuCaggMgZZys6NMK1KZsftjVVHXvjjPtvebnm1m2exAx?=
 =?us-ascii?q?aI27yNYJDre2UbwCXSFkwEnxoP8naBMAg0Hj2hrH7GDDxyCVLvZFvh/vRkp3Ol?=
 =?us-ascii?q?UEA41QGKYFdn17qu5BEVg/uQS/cQ3rIBvCcssDF0HFe739LLBNuMvQthfKNAYd?=
 =?us-ascii?q?wj5FdLz37Wtwt4Ppa4NaBtmkYecxhrv0Ppzxh4F59PkdY0o38wzAp9M6SY0Ehf?=
 =?us-ascii?q?eDOexp3wPrzXKm/v/BGgcaLW21fe0MqI9acL8vg3t1LjvASxHEo473pny8VV02?=
 =?us-ascii?q?eb5pjSEAoSUJfxUkEr9xh6p7DWeDU965nT1X12Nam0sznC290yCeshyxagecpf?=
 =?us-ascii?q?MayeGA/zFc0aG9ahKOgwl1e1aRIEOfhY9LQoMMO+a/uGxKmrMf56kzKik2tG75?=
 =?us-ascii?q?5y00KW+yVnV+7HwowKw/eb3guASTfxl1OhssHxmYBZajAeBGu/yS74BIFPYq1+?=
 =?us-ascii?q?Z5oECWCrI8ev3NVxm4btW2JE9F6kH14H2NKpdQCOYFDn3AxQ1V4YoXqomSajyz?=
 =?us-ascii?q?x0kjcprreQ3SDUwuTicgYHNXBPRGV4kVjsJo20hcgAXEe0dwgpiAel5UHiyqhB?=
 =?us-ascii?q?paRwM3PcQV1VcCjxNW1iVLW/tqCDY8JW9JwnqyFXX/miblCATb79pQAX0yfiH2?=
 =?us-ascii?q?tY2TA6eCumupT/nxxmlm2dKGx/o2beecF13R3f/sDTReZN3joaQyl1kTnWBlmm?=
 =?us-ascii?q?M9ip59mUjIrDsualWmKlV51TdzTrzIyauCu6421qHQOwn/SpltL7Fgg61Dfx18?=
 =?us-ascii?q?N2WiXQsBb8fo7r2ry4Me19ZEloB1z8681gFoFliIQwh5IQ2XkchpqL+3oKimPz?=
 =?us-ascii?q?MdRd2aLjY3sBXz8Lw9jJ4Af73E1vNG6Gx4X8Vn+F2Mtue8G6Yn8K2iI6981LCL?=
 =?us-ascii?q?2b7LtekSt3o1q4qxncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zEl+ksqgDL2YogFcRWz2epEtHSJr6sV/MVTM0GD8643+ed?=
 =?us-ascii?q?nQa84TuQOQkxvak+dVL5cxnOIQhSV7IWL9oWEly+kjgBxr3JG6v5KIJ39j/a2n?=
 =?us-ascii?q?GR5YKiP6Z9kI9T7zl6Zekd2b34SuHpVnBzUKU4HkTfOuEDIOq/vnMxyCHyE7qn?=
 =?us-ascii?q?eeAbDfBxOQ6F96r3LTFJCmL22XJH4czdl4RRiSPkpfgB0PXDUhn540DQSqxM3n?=
 =?us-ascii?q?cEdk6TEd/F/4qh1Qyu12MxnzSHvQpACtaj0sUpiQMAJW7h1e50fSKcGR9fh8Hy?=
 =?us-ascii?q?Zc/p28tgCNLnGbah9MDWEIXEyEGl/iMqOv5dnG7+iXGO6+I+HSbrWJrOxUT+2I?=
 =?us-ascii?q?yo630ot64zaMMd2CPnt4AP0+xEVDRmp1G9jDlzUMViwXlD/Nb8iBqxen4SB3qs?=
 =?us-ascii?q?G/8PL2WAPg/4ePCr1SMclx9BCym6uMK+mQhCNhIzZCypwM3WPIyKQY3FMKiyBu?=
 =?us-ascii?q?cCStEa0dtSHXSqLcgLRXDxkdayN8L8ZI66M83g9QOc/UkN/117h4juIrBFdBT1?=
 =?us-ascii?q?DuhsapZckSKWGnKFzHHFqLNKiBJTDTw8H4f6K8Sb5TjOVVrRGwuiybE0jsPjud?=
 =?us-ascii?q?jTnpSguvPPpIjCGaOhxepY68fgxsCWjlUNLpdBm7PMVrgj0xxL0+nmnKOnIEMT?=
 =?us-ascii?q?hgb0NNqaWd4jlFgvpkAWxO8HpkIfOAmyaY9OTYLpcWsf12AiV7je5a4XI6y6dL?=
 =?us-ascii?q?4yFAXvB6hCzSrtt2qVG8juaP0iZnUAZJqjtTmIKLvEBiNb/F+ZVaRXnE/AwC7W?=
 =?us-ascii?q?OLBhQOpttlDMDvuq9KxtjOkqLzNClN89bO8cQAAMjULdqNMGA9PhrxBD7UEAwF?=
 =?us-ascii?q?QCarNG7FgUxdlfCS9nuNoZk7qpjjgpwOSrBAWVwxF/MaDFllHdMYLJd2WDMkja?=
 =?us-ascii?q?CUjMoS6XWiqxnRQZYSgpeSde+UAPXuKzHRrbBVbgAIwPusLY0CP5b72gphd197?=
 =?us-ascii?q?nIXJHGLLWttMpStsfhNyq0JIpitQVGo2jmLoawWg+jcwHPqwgRM3lkMqYeck8D?=
 =?us-ascii?q?Pz7lYrf3LFoSIxlA86ntCz0mPZSyL4MKrlBdIeMCHzrUVkd8qjGws=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CTAABalhhch0O0hNFcCBwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVMFAQELAQGBL4E5gQIng3yDe5AXgWAtFJdGgXMTAQEYCwgBh1oiNgcNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEKCwkIKSMMQgEQAYFiJAGCYQEBAQECAQECIAQZARsdAQMBA?=
 =?us-ascii?q?QkBAQUFCw0CAiYCAgMeAgUMAQUBHAYNBgIBAQGDHQGBZwEDDQgBBAqcEDyLGXw?=
 =?us-ascii?q?WBQEXgncFgTEBgRKCBwoZJw1egTcCAQUSeYoYgRyCFoE4gj0ugldHA4E7gy2CV?=
 =?us-ascii?q?wKBKgGObZBZMAYDgVaFOYYvcIMrBhiJdQyHU443gRKDMIZOAgQCBAUCBQ8hgSw?=
 =?us-ascii?q?NgXpNI4EBbYFOghsMFxKDOIRZO4VAPzIBgQQBASGBGYlxBIJJAQE?=
X-IPAS-Result: =?us-ascii?q?A0CTAABalhhch0O0hNFcCBwBAQEEAQEHBAEBgVMFAQELAQG?=
 =?us-ascii?q?BL4E5gQIng3yDe5AXgWAtFJdGgXMTAQEYCwgBh1oiNgcNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEKCwkIKSMMQgEQAYFiJAGCYQEBAQECAQECIAQZARsdAQMBAQkBAQUFCw0CAiY?=
 =?us-ascii?q?CAgMeAgUMAQUBHAYNBgIBAQGDHQGBZwEDDQgBBAqcEDyLGXwWBQEXgncFgTEBg?=
 =?us-ascii?q?RKCBwoZJw1egTcCAQUSeYoYgRyCFoE4gj0ugldHA4E7gy2CVwKBKgGObZBZMAY?=
 =?us-ascii?q?DgVaFOYYvcIMrBhiJdQyHU443gRKDMIZOAgQCBAUCBQ8hgSwNgXpNI4EBbYFOg?=
 =?us-ascii?q?hsMFxKDOIRZO4VAPzIBgQQBASGBGYlxBIJJAQE?=
X-IronPort-AV: E=Sophos;i="5.56,367,1539673200"; 
   d="scan'208";a="67274328"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 17 Dec 2018 22:44:44 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726400AbeLRGol (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 01:44:41 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:46408 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726316AbeLRGol (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 01:44:41 -0500
Received: by mail-wr1-f67.google.com with SMTP id l9so14618097wrt.13;
        Mon, 17 Dec 2018 22:44:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=B5u5+vBxgD9xlHeoHbKSPKD3Kjqv8tr1Txk+1XYLZEk=;
        b=BBFRGP25wKb4ziGNOEaa1u9bzCgo7zLo+7dToki/u5R3wdYWQf0xof23Z9b8uvsQyF
         ds8LQPyH87En9jT7EZKRwG/SCnRzr/51SD00HpI7PhGGALGh0j9aYAOILpR1bkY4POCD
         EvsDpW+Fo4HyFN3f5fHa526simA674t0lqATivZHcX0lxwEkFecxxfelVR+sRR6FCQcD
         06IjaewoTcMBvbwYOz6WoScHf8/OiysG8HO6fRSwrtH5xVsSkhYsweUp0lW0B/FBVs5R
         eQ+4Gu+BA1+JAzMubmXW8dczbLG8qWbG/FUDer3VL2AhtGIlq+xc/OghNTyrViewZyDy
         v9bQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=B5u5+vBxgD9xlHeoHbKSPKD3Kjqv8tr1Txk+1XYLZEk=;
        b=h8c3ie96O6rbGackXADdxoa4MXrJ7KiyYk8shuaAvK0D5FYuvFDNM4P5mBbE7szPoQ
         muCnw+E6DJZZWE7fEHWLRv4Bm5xu4wEpwMVJ1h+mDvmFkzLbkTAHauv3iQIt41Yw+sCG
         kAhAEQd5Pw99tWW+Fs03iJPdceZ/V58npIKWtItNCaxYKqT15nTj/q6eGuSPtRGmLRE3
         AyA3i0ITnRTC/QAoyf7Nrik16jdCsLs6jD4vLpuOSqyV+1QbcG8ShrAVJT68FDN0uRcw
         0y3DdyMtyKtChderL3Qqhb+GbKW24sjheZxWB1bejL0NsY2TuC+i7QIsycbcozm7g0dF
         4RhQ==
X-Gm-Message-State: AA+aEWamEGnuh2pY++UDbJXIVex+2J4pTm8JlT6+9lmaPJ2ESCZfK0Qo
        BiBjlnO6SX2Wr9eXtjPdVlCpNQqB
X-Google-Smtp-Source: AFSGD/W534s5IU7Bqw8vwueUFwHYVPr1wSp4dwmWUMqnTzHDzUjYqQlgaLRPMnqdMpHhNoI84I+4zQ==
X-Received: by 2002:adf:8421:: with SMTP id 30mr13840225wrf.153.1545115478920;
        Mon, 17 Dec 2018 22:44:38 -0800 (PST)
Received: from ?IPv6:2003:ea:8bcf:e300:7dc8:fdf9:8ce2:1e74? (p200300EA8BCFE3007DC8FDF98CE21E74.dip0.t-ipconnect.de. [2003:ea:8bcf:e300:7dc8:fdf9:8ce2:1e74])
        by smtp.googlemail.com with ESMTPSA id f18sm1436934wrs.92.2018.12.17.22.44.37
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 Dec 2018 22:44:38 -0800 (PST)
Subject: Re: [RFC PATCH net v3] net: phy: Fix the issue that netif always
 links up after resuming
To: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Cc: Andrew Lunn <andrew@lunn.ch>,
        Florian Fainelli <f.fainelli@gmail.com>,
        "David S. Miller" <davem@davemloft.net>, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <bb910914-73e5-c040-08d5-5f16d259b105@gmail.com>
 <a4bec1b7-1899-591a-c3b6-599e3730e2c1@gmail.com>
 <20181218152507.F2C6.4A936039@socionext.com>
From: Heiner Kallweit <hkallweit1@gmail.com>
Message-ID: <fcfb1597-e8f4-27c6-ae8c-646fd43c846d@gmail.com>
Date: Tue, 18 Dec 2018 07:44:33 +0100
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <20181218152507.F2C6.4A936039@socionext.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 18.12.2018 07:25, Kunihiko Hayashi wrote:
> Hi Heiner,
> 
> On Mon, 17 Dec 2018 19:43:31 +0100 <hkallweit1@gmail.com> wrote:
> 
>> On 17.12.2018 19:41, Heiner Kallweit wrote:
>>> On 17.12.2018 07:41, Kunihiko Hayashi wrote:
>>>> Hi,
>>>>
>>>> Gentle ping...
>>>> Are there any comments about changes since v2?
>>>>
>>>> v2: https://www.spinics.net/lists/netdev/msg536926.html
>>>>
>>>> Thank you,
>>>>
>>>> On Mon, 3 Dec 2018 17:22:29 +0900 <hayashi.kunihiko@socionext.com> wrote:
>>>>
>>>>> Even though the link is down before entering hibernation,
>>>>> there is an issue that the network interface always links up after resuming
>>>>> from hibernation.
>>>>>
>>>>> The phydev->state is PHY_READY before enabling the network interface, so
>>>>> the link is down. After resuming from hibernation, the phydev->state is
>>>>> forcibly set to PHY_UP in mdio_bus_phy_restore(), and the link becomes up.
>>>>>
>>>>> This patch adds a new convenient function to check whether the PHY is in
>>>>> a started state, and expects to solve the issue by changing phydev->state
>>>>> to PHY_UP and calling phy_start_machine() only when the PHY is started.
>>>>>
>>> This convenience function and the related change to phy_stop() are part of
>>> the following already and don't need to be part of your patch.
>>> https://patchwork.ozlabs.org/patch/1014171/
> 
> I see. I'll follow your patch when necessary.
> 
>>>>> Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
>>>>> Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
>>>>> ---
>>>>>
>>>>> Changes since v2:
>>>>>  - add mutex lock/unlock for changing phydev->state
>>>>>  - check whether the mutex is locked in phy_is_started()
>>>>>  
>>>>> Changes since v1:
>>>>>  - introduce a new helper function phy_is_started() and use it instead of
>>>>>    checking link status
>>>>>  - replace checking phydev->state with phy_is_started() in
>>>>>    phy_stop_machine()
>>>>>
>>>>> drivers/net/phy/phy.c        |  2 +-
>>>>>  drivers/net/phy/phy_device.c | 12 +++++++++---
>>>>>  include/linux/phy.h          | 13 +++++++++++++
>>>>>  3 files changed, 23 insertions(+), 4 deletions(-)
>>>>>
>>>>> diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
>>>>> index 1d73ac3..f484d03 100644
>>>>> --- a/drivers/net/phy/phy.c
>>>>> +++ b/drivers/net/phy/phy.c
>>>>> @@ -670,7 +670,7 @@ void phy_stop_machine(struct phy_device *phydev)
>>>>>  	cancel_delayed_work_sync(&phydev->state_queue);
>>>>>  
>>>>>  	mutex_lock(&phydev->lock);
>>>>> -	if (phydev->state > PHY_UP && phydev->state != PHY_HALTED)
>>>>> +	if (phy_is_started(phydev))
>>>>>  		phydev->state = PHY_UP;
>>>
>>> I'm wondering whether we need to do this. If the PHY is attached,
>>> then mdio_bus_phy_suspend() calls phy_stop_machine() which does
>>> exactly the same. If the PHY is not attached, then we don't have
>>> to do anything. Therefore I think we just have to do the same as
>>> in mdio_bus_phy_resume():
>>>
>>> if (phydev->attached_dev && phydev->adjust_link)
>>> 	phy_start_machine(phydev);
> 
> Agreed.
> 
> Although the original code changed phydev->state,
> it seems that it's only enough to
> - call phy_stop_machine() in mdio_bus_phy_suspend()
> - call phy_start_machine() in mdio_bus_phy_resume() and mdio_bus_phy_restore()
> if the PHY is attached.
> 
>>> Can you test this?
> 
> I tested your code instead of applying my entire patch, and I confirmed
> that the code solved the issue in my environment.
> 
> Do you make new patch instead of my patch?
> (and I can add Reported-by: for the issue and Tested-by:)
> 
Up to you. It's fine with me if you submit the patch, but I can also do it
and mention you in Reported-by and Tested-by. Just let me know.

> Thank you,
> 
> 
>>>
>> Sorry for the confusion, this comment is related to the next part
>> of your patch.
>>
>>>>>  	mutex_unlock(&phydev->lock);
>>>>>  }
>>>>> diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
>>>>> index ab33d17..4897d24 100644
>>>>> --- a/drivers/net/phy/phy_device.c
>>>>> +++ b/drivers/net/phy/phy_device.c
>>>>> @@ -309,10 +309,16 @@ static int mdio_bus_phy_restore(struct device *dev)
>>>>>  		return ret;
>>>>>  
>>>>>  	/* The PHY needs to renegotiate. */
>>>>> -	phydev->link = 0;
>>>>> -	phydev->state = PHY_UP;
>>>>> +	mutex_lock(&phydev->lock);
>>>>> +	if (phy_is_started(phydev)) {
>>>>> +		phydev->state = PHY_UP;
>>>>> +		mutex_unlock(&phydev->lock);
>>>>> +		phydev->link = 0;
>>>>> +		phy_start_machine(phydev);
>>>>> +	} else {
>>>>> +		mutex_unlock(&phydev->lock);
>>>>> +	}
>>>>>  
>>>>> -	phy_start_machine(phydev);
>>>>>  
>>>>>  	return 0;
>>>>>  }
>>>>> diff --git a/include/linux/phy.h b/include/linux/phy.h
>>>>> index 3ea87f7..dd21537 100644
>>>>> --- a/include/linux/phy.h
>>>>> +++ b/include/linux/phy.h
>>>>> @@ -898,6 +898,19 @@ static inline bool phy_is_pseudo_fixed_link(struct phy_device *phydev)
>>>>>  }
>>>>>  
>>>>>  /**
>>>>> + * phy_is_started - Convenience function for testing whether a PHY is in
>>>>> + * a started state
>>>>> + * @phydev: the phy_device struct
>>>>> + *
>>>>> + * The caller must have taken the phy_device mutex lock.
>>>>> + */
>>>>> +static inline bool phy_is_started(struct phy_device *phydev)
>>>>> +{
>>>>> +	WARN_ON(!mutex_is_locked(&phydev->lock));
>>>>> +	return phydev->state >= PHY_UP && phydev->state != PHY_HALTED;
>>>>> +}
>>>>> +
>>>>> +/**
>>>>>   * phy_write_mmd - Convenience function for writing a register
>>>>>   * on an MMD on a given PHY.
>>>>>   * @phydev: The phy_device struct
>>>>> -- 
>>>>> 2.7.4
>>>>
>>>> ---
>>>> Best Regards,
>>>> Kunihiko Hayashi
>>>>
>>>>
>>>>
>>>
> 
> ---
> Best Regards,
> Kunihiko Hayashi
> 
> 
> 

