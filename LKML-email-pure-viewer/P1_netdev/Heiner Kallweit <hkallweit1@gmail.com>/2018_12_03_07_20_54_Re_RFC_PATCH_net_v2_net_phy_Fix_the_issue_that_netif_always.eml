Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:52:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B3553580117;
	Sun,  2 Dec 2018 23:21:11 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 02 Dec 2018 23:21:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AdHOhChIMPgyQ0zmWN9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/v7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVsVtRuzBxKhBP/txzJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv3KqgSUOa1w7fSzT7eav1ZwzP96IzGcx8/oPGMQa97fM3RyUksDQzFilGQ?=
 =?us-ascii?q?qIL7MDOUyuQBrnOW7+VlVe21im4nrxt9rSSoxscpk4TEgJ8exFPc9Shh3oo5Od?=
 =?us-ascii?q?m1RFRmbdOqDpdcrTyWOohqTs84Qmxluj42xqMatZKnciUHzYooyATaZvGEaIeH?=
 =?us-ascii?q?/hzjWeOPLjp2mH5pZLeyihK9/ES9xODxU9W73EpWoidLl9TBuG4B2wHO5sWCTv?=
 =?us-ascii?q?Z98Fqt1SiJ2gvO8O9LO1o0mrDeK5M5wr4/iJ4TsUPbEy/ol0X5krWWel8n+ue2?=
 =?us-ascii?q?8eTnZKvpppuGO49zkAH+Pbwims25AesmLggDR3aX9fi42bH54EH0TqtGgucrnq?=
 =?us-ascii?q?TarJzWP8UWq6yhDw9QyIkj6hK/Dzm80NQfmHkKNFZFeBOBj4j0NFDCOfP4Auml?=
 =?us-ascii?q?g1Sqjjhrw+nKPrrvA5XLMHfDiqzsfahy60FC0go/19Nf6IxOCrEHPv3zXlX9tN?=
 =?us-ascii?q?vCDh82KwC02froCM1h1oMCXmKCGquZMKLRsVCW/O4uLPSMaZQRuDb8Lfgl+vHv?=
 =?us-ascii?q?gWU4mV8bYammw58XZGqkEfRhJkWTeWDsjcsZEWcWogo+S/TniF2YXj5Se3a9Ra?=
 =?us-ascii?q?U86is7CIK7F4jDQI+tjaeF3Ce6GJ1We29HBkqNEXfua4WLRfMMZDiOLc9mlzwO?=
 =?us-ascii?q?TaKhRJM51RGyqA/6zKJqLujT+iIGr57j19915+vVlRE17jF0C8Wd02eQT2B7hG?=
 =?us-ascii?q?8IRjk23Lxhrkx50FuMza94g/lAH9xJ+/xJShs6NYLbz+FiEd/yQQLBftCKSFq8?=
 =?us-ascii?q?WNWpGzMxQ8k1w98PZUZ9BtqjggrC3yqsH78aibiLCIYo/aLb2nj7P9x9xGre1K?=
 =?us-ascii?q?k9k1kmRdNCNW68ia557QTTA4/JnF+fl6albqkc2C/N9GGezWuBpk1YUQhwUbnb?=
 =?us-ascii?q?UnAbfEfZsdP55kbaRb+0FbsnKhdBydKFKqZSd9Lml0tGS+n5NNTeeW2xnXywCg?=
 =?us-ascii?q?iOxr+LaIrqeGAd3CHGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYIivOGVfMcwKgIuCc7pDVyB1aywdTWBsGEpwpgeqVcfN?=
 =?us-ascii?q?w87E1G1WLfqwxyIJigI7p+iV4ZdgR9p1nu2AlvCoVcjcgqq2snzBZzKaKd11NB?=
 =?us-ascii?q?azOY3JDqNr3LMGXy+wqva6rX2lHY39ab4aMP6PU+q1X+swClDEsi83N709ZL13?=
 =?us-ascii?q?uQ/InFDA0XUZjpSEY46wB6p63GYik6/47bz3lsPre7szDc29MlHvAqygu9cNhF?=
 =?us-ascii?q?NqOEFwjyE9MBCsiqKewqnUWpbx0eMOBT8q40I92pd/+c1KG3O+ZgmSqsjX5b74?=
 =?us-ascii?q?BlzkKM6y18R/bI3pYY2f2XwhGLVjb8jFi7tMD3lptJZTUTHmq51CjlC5RdZqx0?=
 =?us-ascii?q?fYYXF2iuJ9e7ycl5h57oQ3RY7kKsB0sa2M+1fhqfd0b93QxM2ksNu3yohCy4wy?=
 =?us-ascii?q?Zykz43tKqf3TXCzPj4exoDJ2FEWnNijVDqIYWvi9AaXU6obxUmlRe/5Eb6wbRb?=
 =?us-ascii?q?q7p7L2XJXUhIeC32JXl4UqSsrrqCf9JP6JQwvCRXUeSwe1CbRqTmoxsH1SPuBG?=
 =?us-ascii?q?9exDE9dzG3tZT1hR16iGSBLHltqHrVY91/xRDa5NbEX/5ewiIGRDVkiTnQHlW8?=
 =?us-ascii?q?PcOm/c+Xl5fAteCyTXmhWYdQcSnozIOAsjW05WtxDB27nvCznMDnEAcg3S/60d?=
 =?us-ascii?q?lqSTvHrBLmbob30KS6NPptflN0C1/k98p6BoZ+n5MwhZ4K3ngWnJeV/XsBkWro?=
 =?us-ascii?q?NdVb2KT+bGcCRDIRwt7V5hTl11NnLn6T2435UXCdyNN7Z9amemMWxj4978dSBa?=
 =?us-ascii?q?eX9rNEnDF5olqlrQ3LZ/h9kSwQyf8v6H4cnuEItxAhziSbArAOA0ZYOTbgmAiP?=
 =?us-ascii?q?79C7tK9XfnqgcaCs1EpimtCsFLSCogBfWHnjYJsjEzF/7t5jMF3Syn388Z/reM?=
 =?us-ascii?q?Pfbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOz3pYMMT/yvhjKdEkcaQwoCvBY5hGjQQUZvsTPKoFi8StPv9OwaPFj08tm?=
 =?us-ascii?q?mUGb7FEQCD70dmqmrFE4q3OHGPOHkZ0dJiSQGGK0NFhwAUWCg6koQ9FgC338Hh?=
 =?us-ascii?q?dEZ55jYM5l/3sBdMy+RoNwXhXWfbvgundjA0SJ2HJhpM8g5C/1vVMdCZ7u9rHS?=
 =?us-ascii?q?FX5JihoxKWKmCBewREF2IJWlGHB1D+OLmh/8LA/vOcBuq/KfvOfLqPpfZfV/eO?=
 =?us-ascii?q?2ZKgzI9m8yyQOcWIO3loF+c71VZbXXBlB8TZnC0CSiwQlyLQds6buQ2z+ittos?=
 =?us-ascii?q?Ck9/TrXg3v6JCLC7tTN9Vv5h+3jb2CN+6WmCZ2NzJY2okQyn/PzbgVxEQShD12?=
 =?us-ascii?q?dzmxDbQAsjbATKLOla9WDB4baCJzONFL76Im2QlNNtDUisno1r5jlfM1D1ZFVV?=
 =?us-ascii?q?r8msCmf8AKIme9NE/ZC0aPLriJOTrLw8Tva6OmVbJQlPlUtwG3uTuDCUDjIy+M?=
 =?us-ascii?q?lyP3WBGvK+1MiCCbMQdauIG8dBZtFGfiQMjnah29LN94kzk2zacoiXPNMG4WKS?=
 =?us-ascii?q?J8fF9Vrr2M8SNYhe1yG3BA7npgN+WLhzyV4PXYKpkIt/tmGSB0l+Nc4HQnxLpZ?=
 =?us-ascii?q?9iBERPppmCTMqt5iuU2pku6KyjB/ShpBti5LhJ6XvUVlIajY9oNPWXDB/BIM62?=
 =?us-ascii?q?WfExULp9t/Bd3ptKBd0dzPlKP1KDdf/NPY58ocB87IKM2ZNHotKwbmGDnRDFhN?=
 =?us-ascii?q?cTn+FnzZhkxck/ba1nSEp4M6q9C4mJMfQ6RbVRo2C/UbCkVmG/QZJ5x2WTUpga?=
 =?us-ascii?q?Ldh8kNsz72gh3WXsRTuNjpX/OUDPHrKX7Ng/9KbhoOzLf8LKwcM4T63wppbVws?=
 =?us-ascii?q?z6rQHE+Ffd1MpCB7Jiw9pEFS/XliBjkz2Evhbhyg4WNKPfGxlx8yzAB5ZLJ+p3?=
 =?us-ascii?q?/X/14rKw+S92MLm04rlICg2GjJfQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAAAf2QRch0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwEBgS+COyeDeYN7kCaBYC0UiQ6OJoFzEgEBGBMBh38?=
 =?us-ascii?q?iNQgNAQMBAQEBAQECARMBAQEKCwkIKSMMQgEQAYFiJAGCYQEBAQECAQECIAQZA?=
 =?us-ascii?q?RsdAQMBAQkBAQUFCw0CAiYCAgMeAhEBBQEcBgEMBgIBAQGDHIFpAQMNCAEEmSI?=
 =?us-ascii?q?8iw18FgUBF4J3BYJEgWsKGScNXYE3AgYSeYl1gRyCFoE4gj0ugleFLoJXAoEqA?=
 =?us-ascii?q?Y5JkB4uBgOBVIw6gygGGIlbC4dAiQSFcIMRhkECBAIEBQIFDyGBJwOCCE0jgQF?=
 =?us-ascii?q?tgU6CGwwXEoM4ilQ/MoEFAQEhh1yCIgSCSQEB?=
X-IPAS-Result: =?us-ascii?q?A0AGAAAf2QRch0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwEBgS+COyeDeYN7kCaBYC0UiQ6OJoFzEgEBGBMBh38iNQgNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEKCwkIKSMMQgEQAYFiJAGCYQEBAQECAQECIAQZARsdAQMBAQkBAQU?=
 =?us-ascii?q?FCw0CAiYCAgMeAhEBBQEcBgEMBgIBAQGDHIFpAQMNCAEEmSI8iw18FgUBF4J3B?=
 =?us-ascii?q?YJEgWsKGScNXYE3AgYSeYl1gRyCFoE4gj0ugleFLoJXAoEqAY5JkB4uBgOBVIw?=
 =?us-ascii?q?6gygGGIlbC4dAiQSFcIMRhkECBAIEBQIFDyGBJwOCCE0jgQFtgU6CGwwXEoM4i?=
 =?us-ascii?q?lQ/MoEFAQEhh1yCIgSCSQEB?=
X-IronPort-AV: E=Sophos;i="5.56,309,1539673200"; 
   d="scan'208";a="42465227"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 23:21:08 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725894AbeLCHVI (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 02:21:08 -0500
Received: from mail-wr1-f66.google.com ([209.85.221.66]:46975 "EHLO
        mail-wr1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725847AbeLCHVI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 02:21:08 -0500
Received: by mail-wr1-f66.google.com with SMTP id l9so10915785wrt.13;
        Sun, 02 Dec 2018 23:21:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=Sn0cKQ7gIu3agA/rbDcwxLafxGaSuHBuqc0EO2rc7Mk=;
        b=OVJGbrQjUH2hF1jhrDhGeSuEumxUgOZhP+DPIZmy9/A2Nv6wFTnHlqEQ6aJXuyOtYW
         kbPwLMBLG9o6zY4Gy/NJFJkF9x+/2yXlSvLio0uAT8o6Sd3lRYS4nx0qUtoiBj/fnzcZ
         3pruV9fgKe3zQiEDPXkV1hcbNCz2DyVzGkJHlfwolmWCuLzIwGHGbm7Kw5Hj5e0d6LDG
         Ll27pW7LjdByPvs9ff6HxIsw4RaiDK1A1KAphypsXw3FKPwmr5v/S3rW2W22qJiuklu7
         klBDJiENGKpACjV/UaOe68RRnoMoCB6i7fl9jeWuadE7ie/Vm3FBjYrvwCLxZJ5Qt8BP
         Iu1g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=Sn0cKQ7gIu3agA/rbDcwxLafxGaSuHBuqc0EO2rc7Mk=;
        b=rLJl84hmi7xHZ67s/l4B9uMT923+MgQqgAobV1MuCtpucmlLgWDmYj8MuoX7etjk2i
         8NsyOVHafrYEowJjRDEGm5ER4LKleaCCYTipPE5KYiCrp4l0Qz2II3ssC6/9IGjVctag
         i/iDptGaE+CKaO1mTRQ77Kd0MQyNUz8nkAPEZBj48sVfw/U4DUK1ly8k1fnLGW+5KHIp
         VxRUveCEIG559cBYqlGWfr38Fy5vDyNmX/sCdIqgXh+dWvWI0SleDwkZ0+5l7d5R7D3C
         IiJO30E3hw55KIzchOjN6ff57xIid2fd+YaRqMSIYCntoFXrodLm5M1kdqQ0GB/zlqDV
         4V0A==
X-Gm-Message-State: AA+aEWYRS8ZlLpwB4xrrCRvRA4g2oqIH1zO1TNUIm4cbzV4LZG9WdUQC
        zPjg87sHG8Q8jv06QQnzGnsXQ9Tq
X-Google-Smtp-Source: AFSGD/W3f67DfUo8FnifmlWT50uhdWIKFRWgz1Y7vt+jLkjwZ5XiQIpu3ldmHQEq6At8dqy1y+s0RA==
X-Received: by 2002:adf:8068:: with SMTP id 95mr12913148wrk.181.1543821662930;
        Sun, 02 Dec 2018 23:21:02 -0800 (PST)
Received: from ?IPv6:2003:ea:8bcf:e300:9413:c003:3211:9f12? (p200300EA8BCFE3009413C00332119F12.dip0.t-ipconnect.de. [2003:ea:8bcf:e300:9413:c003:3211:9f12])
        by smtp.googlemail.com with ESMTPSA id b16sm10400056wrm.41.2018.12.02.23.21.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 02 Dec 2018 23:21:02 -0800 (PST)
Subject: Re: [RFC PATCH net v2] net: phy: Fix the issue that netif always
 links up after resuming
To: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
        Florian Fainelli <f.fainelli@gmail.com>
Cc: Andrew Lunn <andrew@lunn.ch>,
        "David S. Miller" <davem@davemloft.net>, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <26e04d2e-16e5-ac0b-daab-931b8f5a0103@gmail.com>
 <47b5606c-564c-2fe8-0683-65288dafe028@gmail.com>
 <20181203133512.57D3.4A936039@socionext.com>
From: Heiner Kallweit <hkallweit1@gmail.com>
Message-ID: <7b8b2a82-d997-9dcd-8e3e-39ed80293e57@gmail.com>
Date: Mon, 3 Dec 2018 08:20:54 +0100
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.2
MIME-Version: 1.0
In-Reply-To: <20181203133512.57D3.4A936039@socionext.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 03.12.2018 05:35, Kunihiko Hayashi wrote:
> Hi Florian Heiner,
> 
> On Fri, 30 Nov 2018 19:47:37 +0100 <hkallweit1@gmail.com> wrote:
> 
>> On 30.11.2018 18:46, Florian Fainelli wrote:
>>>
>>>
>>> On 11/30/2018 1:25 AM, Kunihiko Hayashi wrote:
>>>> Even though the link is down before entering hibernation,
>>>> there is an issue that the network interface always links up after resuming
>>>> from hibernation.
>>>>
>>>> The phydev->state is PHY_READY before enabling the network interface, so
>>>> the link is down. After resuming from hibernation, the phydev->state is
>>>> forcibly set to PHY_UP in mdio_bus_phy_restore(), and the link becomes up.
>>>>
>>>> This patch adds a new convenient function to check whether the PHY is in
>>>> a started state, and expects to solve the issue by changing phydev->state
>>>> to PHY_UP and calling phy_start_machine() only when the PHY is started.
>>>>
>>>> Suggested-by: Heiner Kallweit <hkallweit1@gmail.com>
>>>> Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
>>>> ---
>>>>  drivers/net/phy/phy.c        |  2 +-
>>>>  drivers/net/phy/phy_device.c |  9 +++++----
>>>>  include/linux/phy.h          | 10 ++++++++++
>>>>  3 files changed, 16 insertions(+), 5 deletions(-)
>>>>
>>>> diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
>>>> index 1d73ac3..f484d03 100644
>>>> --- a/drivers/net/phy/phy.c
>>>> +++ b/drivers/net/phy/phy.c
>>>> @@ -670,7 +670,7 @@ void phy_stop_machine(struct phy_device *phydev)
>>>>  	cancel_delayed_work_sync(&phydev->state_queue);
>>>>  
>>>>  	mutex_lock(&phydev->lock);
>>>> -	if (phydev->state > PHY_UP && phydev->state != PHY_HALTED)
>>>> +	if (phy_is_started(phydev))
>>>>  		phydev->state = PHY_UP;
>>>>  	mutex_unlock(&phydev->lock);
>>>>  }
>>>> diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
>>>> index ab33d17..2c39717 100644
>>>> --- a/drivers/net/phy/phy_device.c
>>>> +++ b/drivers/net/phy/phy_device.c
>>>> @@ -309,10 +309,11 @@ static int mdio_bus_phy_restore(struct device *dev)
>>>>  		return ret;
>>>>  
>>>>  	/* The PHY needs to renegotiate. */
>>>> -	phydev->link = 0;
>>>> -	phydev->state = PHY_UP;
>>>> -
>>>> -	phy_start_machine(phydev);
>>>> +	if (phy_is_started(phydev)) {
>>>> +		phydev->link = 0;
>>>> +		phydev->state = PHY_UP;
>>>> +		phy_start_machine(phydev);
>>>> +	}
>>>
>>> Don't you need some of these steps to be performed under phydev->lock
>>> being held? See comment below.
>>>
>> Yes, locking should be done. The old code sets phydev->state
>> w/o holding the lock, I'd says this was wrong.
> 
> Indeed. The phydev->state should be set with locking the mutex even here.
> 
> And it seems that setting phydev->link and calling phy_start_machine() don't
> need to hold the lock. Is it correct?
> 
Yes

>>>>  
>>>>  	return 0;
>>>>  }
>>>> diff --git a/include/linux/phy.h b/include/linux/phy.h
>>>> index 3ea87f7..c194b45 100644
>>>> --- a/include/linux/phy.h
>>>> +++ b/include/linux/phy.h
>>>> @@ -898,6 +898,16 @@ static inline bool phy_is_pseudo_fixed_link(struct phy_device *phydev)
>>>>  }
>>>>  
>>>>  /**
>>>> + * phy_is_started - Convenience function for testing whether a PHY is in
>>>> + * a started state
>>>> + * @phydev: the phy_device struct
>>>> + */
>>>> +static inline bool phy_is_started(struct phy_device *phydev)
>>>> +{
>>>
>>> An assert with the phydev->lock mutex being held here would greatly
>>> help, because otherwise this is possibly racy.
>>>
>> Have a look at __phy_resume() to see what is meant with this comment.
> 
> I see. I found that there was a lock detection in this function.
> The phy_is_started() should have the same detection, shouldn't it?
> 
Correct

> Thank you,
> 
>>>> +	return phydev->state >= PHY_UP && phydev->state != PHY_HALTED;
>>>> +}
>>>> +
>>>> +/**
>>>>   * phy_write_mmd - Convenience function for writing a register
>>>>   * on an MMD on a given PHY.
>>>>   * @phydev: The phy_device struct
>>>>
>>>
> 
> ---
> Best Regards,
> Kunihiko Hayashi
> 
Heiner
> 
> 

