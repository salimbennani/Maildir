Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:50:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E186E58079D
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 05:32:56 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:32:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AKk77ABKSJDi8+TuKDtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgeI/TxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTA382/YiMJwg61Urhy8vxxywYzabY6IOPdwYq/SY8gaSHFdUsZITSFNHp+w?=
 =?us-ascii?q?Y5cTA+cHIO1Wr5P9p1wLrRamAAejGv3vyj5OhnTr3aI61OAhEQ/b1wEnHNIPvn?=
 =?us-ascii?q?PUrNH7NKoJS+C60rTHzTXZYPNKwzvy9I/IchU4rPyKQLl+ctLRxFExGw/ZjVic?=
 =?us-ascii?q?s5HpMy6W2+gXrWSW4eptWfiyh2Mlsw19vCSjy8M2hoXUiI8Z1ErI+Th6zYs7P9?=
 =?us-ascii?q?G0Vk12bNi5G5VKrS6aLZF5QsY6TmFopik6zroGtIa/fCgL05Qn2wXfZ+aIc4iO?=
 =?us-ascii?q?/xLvTuGRIS13hH59ebK/gQi98VS4x+HiSsW500xGojdYntTPrHwByRLe58idRv?=
 =?us-ascii?q?dg/EqtwTOP2BrS6uFAL0A0j63bK5s5z74piJUTtFnDEjbrl0rokq+ZaEEk9vGz?=
 =?us-ascii?q?5OTgf7XmoIOTOJFvig35NqQum8+/DvoiPgkBQmiW4eC81Lzl/U3kT7RGlPw2kq?=
 =?us-ascii?q?/FsJ/EIcQXvLK2AwhQ0os47Ra/CDGm0NsenXkaNl5FfwiHj4fxN1HUPP/4Feu/?=
 =?us-ascii?q?g0irkDpzw/DGP77hDYvXInnMjbfsZrJ9609ayAouwtFT/ZNUCrcdIP3tXk/9rs?=
 =?us-ascii?q?DXDhg8M1/8/uD8Fd8o1p8CQXndReidMbjOqhmO4eQgJfTKY5Ua/zP0Kvwg7vip?=
 =?us-ascii?q?imclmFgbZu6w0J4KLXy1APlicHifemfm19IIEGMWuVgnQen3zVGPTzNXImy/Rr?=
 =?us-ascii?q?8x/S0TDoWgAoHeAIe3j+uawS25E5ZKM31AEU2GCnzydo+JCMsLPTufJ9IkmDgD?=
 =?us-ascii?q?XruJTYgn2hez8gjgxOlJNO3Rrw4Vq5PlnOdy4+ObwRIt8jh6J96Q32GEUyd/mW?=
 =?us-ascii?q?ZeFGx+57x2vUEokgTL6qN/mfENTdE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AlAAAgDRFcmBHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJijBRfizOCDYkTjkCBcRYYFIc+IjQJDQEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4vgjYFAgMYCYJcAwMBAiQfCikDAwECBgEBHykIAwEdNhkFgxyBagMVA?=
 =?us-ascii?q?QSmWjOFQIJHDYIcjDwXgUA/gRGFaYIEc4UOAqBeLgmOJ4MlCxiJaYddjy2KEoF?=
 =?us-ascii?q?Ggg4zGggbFYMngicXEo4MQDGBBxyKFFWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AlAAAgDRFcmBHrdtBjHQEBBQEHBQGBUQgBCwGBMIJijBR?=
 =?us-ascii?q?fizOCDYkTjkCBcRYYFIc+IjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFA?=
 =?us-ascii?q?gMYCYJcAwMBAiQfCikDAwECBgEBHykIAwEdNhkFgxyBagMVAQSmWjOFQIJHDYI?=
 =?us-ascii?q?cjDwXgUA/gRGFaYIEc4UOAqBeLgmOJ4MlCxiJaYddjy2KEoFGgg4zGggbFYMng?=
 =?us-ascii?q?icXEo4MQDGBBxyKFFWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="56033779"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 05:31:56 -0800
Received: from localhost ([::1]:44914 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX4cF-0005WY-HC
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 08:31:55 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:45979)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4YR-0002L5-O6
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4YP-0000qf-NM
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:27:59 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34042)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kwolf@redhat.com>)
	id 1gX4YK-0000lr-0g; Wed, 12 Dec 2018 08:27:52 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 5618AC034DC2;
	Wed, 12 Dec 2018 13:27:51 +0000 (UTC)
Received: from linux.fritz.box.com (ovpn-117-245.ams2.redhat.com
	[10.36.117.245])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 4472E60C5C;
	Wed, 12 Dec 2018 13:27:50 +0000 (UTC)
From: Kevin Wolf <kwolf@redhat.com>
To: qemu-block@nongnu.org
Date: Wed, 12 Dec 2018 14:26:57 +0100
Message-Id: <20181212132735.16080-4-kwolf@redhat.com>
In-Reply-To: <20181212132735.16080-1-kwolf@redhat.com>
References: <20181212132735.16080-1-kwolf@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Wed, 12 Dec 2018 13:27:51 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 03/41] dmg: including dmg-lzfse module inside
 dmg block driver.
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, peter.maydell@linaro.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Julio Faracco <jcfaracco@gmail.com>

This commit includes the support to new module dmg-lzfse into dmg block
driver. It includes the support for block type ULFO (0x80000007).

Signed-off-by: Julio Faracco <jcfaracco@gmail.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
---
 block/dmg.h |  3 +++
 block/dmg.c | 28 ++++++++++++++++++++++++++++
 2 files changed, 31 insertions(+)

diff --git a/block/dmg.h b/block/dmg.h
index 2ecf239ba5..f28929998f 100644
--- a/block/dmg.h
+++ b/block/dmg.h
@@ -55,4 +55,7 @@ typedef struct BDRVDMGState {
 extern int (*dmg_uncompress_bz2)(char *next_in, unsigned int avail_in,
                                  char *next_out, unsigned int avail_out)=
;
=20
+extern int (*dmg_uncompress_lzfse)(char *next_in, unsigned int avail_in,
+                                   char *next_out, unsigned int avail_ou=
t);
+
 #endif
diff --git a/block/dmg.c b/block/dmg.c
index 1d9283ba2f..86bb2344ea 100644
--- a/block/dmg.c
+++ b/block/dmg.c
@@ -33,6 +33,9 @@
 int (*dmg_uncompress_bz2)(char *next_in, unsigned int avail_in,
                           char *next_out, unsigned int avail_out);
=20
+int (*dmg_uncompress_lzfse)(char *next_in, unsigned int avail_in,
+                            char *next_out, unsigned int avail_out);
+
 enum {
     /* Limit chunk sizes to prevent unreasonable amounts of memory being=
 used
      * or truncating when converting to 32-bit types
@@ -107,6 +110,7 @@ static void update_max_chunk_size(BDRVDMGState *s, ui=
nt32_t chunk,
     switch (s->types[chunk]) {
     case 0x80000005: /* zlib compressed */
     case 0x80000006: /* bzip2 compressed */
+    case 0x80000007: /* lzfse compressed */
         compressed_size =3D s->lengths[chunk];
         uncompressed_sectors =3D s->sectorcounts[chunk];
         break;
@@ -188,6 +192,8 @@ static bool dmg_is_known_block_type(uint32_t entry_ty=
pe)
         return true;
     case 0x80000006:    /* bzip2 */
         return !!dmg_uncompress_bz2;
+    case 0x80000007:    /* lzfse */
+        return !!dmg_uncompress_lzfse;
     default:
         return false;
     }
@@ -425,6 +431,7 @@ static int dmg_open(BlockDriverState *bs, QDict *opti=
ons, int flags,
     }
=20
     block_module_load_one("dmg-bz2");
+    block_module_load_one("dmg-lzfse");
=20
     s->n_chunks =3D 0;
     s->offsets =3D s->lengths =3D s->sectors =3D s->sectorcounts =3D NUL=
L;
@@ -623,6 +630,27 @@ static inline int dmg_read_chunk(BlockDriverState *b=
s, uint64_t sector_num)
                 return ret;
             }
             break;
+        case 0x80000007:
+            if (!dmg_uncompress_lzfse) {
+                break;
+            }
+            /* we need to buffer, because only the chunk as whole can be
+             * inflated. */
+            ret =3D bdrv_pread(bs->file, s->offsets[chunk],
+                             s->compressed_chunk, s->lengths[chunk]);
+            if (ret !=3D s->lengths[chunk]) {
+                return -1;
+            }
+
+            ret =3D dmg_uncompress_lzfse((char *)s->compressed_chunk,
+                                       (unsigned int) s->lengths[chunk],
+                                       (char *)s->uncompressed_chunk,
+                                       (unsigned int)
+                                           (512 * s->sectorcounts[chunk]=
));
+            if (ret < 0) {
+                return ret;
+            }
+            break;
         case 1: /* copy */
             ret =3D bdrv_pread(bs->file, s->offsets[chunk],
                              s->uncompressed_chunk, s->lengths[chunk]);
--=20
2.19.2


