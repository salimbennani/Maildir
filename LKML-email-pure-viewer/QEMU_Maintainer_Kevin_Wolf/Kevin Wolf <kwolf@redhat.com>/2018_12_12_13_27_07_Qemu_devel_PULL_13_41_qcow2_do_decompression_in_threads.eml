Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:50:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AEDAD580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 05:33:03 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:33:03 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AHuUdPB/k3czht/9uRHKM819IXTAuvvDOBiVQ1KB3?=
 =?us-ascii?q?2uIcTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMMvrRr42RDui9b9mRh/2hi?=
 =?us-ascii?q?kJNDA28m/XhcN/gqxGuBKspR5xzoHJbIybKPZxYLjdcMgGSWpYRMtdSzBNDp+g?=
 =?us-ascii?q?Y4YJEuEPPfxYr474p1YWqBWxGxesBOLpyjRVhnD22qk60+o8GgzB3wwhEdUOsH?=
 =?us-ascii?q?DarNjuLqcdT/26zKnSwjXfdf9ZxTD96I3Rfx0nvPqCXqpwfNLPxUUzFA7JlEic?=
 =?us-ascii?q?pZHmMj+PyOgAvWiW4/B9We+tk2IrtR19rzy1yssxhITFmJgZxk3H+Ch32oo5O9?=
 =?us-ascii?q?61RUhmatC+CpRQrTuVN45uT8MiXW5ovCE6x6UCuZ66ZygK1I8nywTQa/yBboiE?=
 =?us-ascii?q?+BXjVPyeITtghXJlfqywhwqq/ES+1uHxVdO43EtXoidGiNXAqH4A2hzJ5sSaSP?=
 =?us-ascii?q?Zx5kKh1iyO1wDX5OFEO0c0la/DJp443LEwk4cTvV3eESDohkX5kquWelw/9eiv?=
 =?us-ascii?q?9uTnZKnpqYGHN4NzjgH+M6culdKlDeU3LwgDR2yb+eW61L3+8kz1WrRKjvsqkq?=
 =?us-ascii?q?bHtJDWP9gUpqm8AwJO1IYj7BC/Dzig0NQFh3UHK0hFeB2fg4jzJ17OOOz4Deu4?=
 =?us-ascii?q?g1m0lDdrxvPGMaP7DpTCM3jOi7Phfbd7605Bxws/19Ff55RICr4fJPL/QFP+tN?=
 =?us-ascii?q?vdDkxxDgqv3uyyCMlhzphMHiWLA7SFK+XUtlmH4P9pJPODI4ocuTL4Iv5i4Oby?=
 =?us-ascii?q?jHg/ghgEcKy0mJcadn28TclgOFiTNH/lg9MdFjUTsw8jCeDnllCGFCRefmu/RL?=
 =?us-ascii?q?4U4DY9B4S7S4DZSde2nbaD0SynS4BQfX1MEVuWEH3lJLmDDu4BbT/XKMtmmT8s?=
 =?us-ascii?q?U7+nRIk8kxa0u1zU0b1ie8nZ5Cwe/a3k0NY9s+7MkhU83SZ5A8SUzyeGSGQizT?=
 =?us-ascii?q?BAfCM/wK0q+R818VyEy6Ut2/E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAADVDBFcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowUX4szgg2XU4FxFhgUhz4iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?BAQgLCwYbDi+CNgUCAxgJglwDAwECJB8KKQMDAQIGAQEfKQgDAVMZBYMcggIBB?=
 =?us-ascii?q?KZbM4VAhHCMPBeBQD+BEYhghQ4CiRmXcwmRTAsYiWmHXZk/gUaCDjMaCBsVgye?=
 =?us-ascii?q?CJAMXjh5AMYEHHIppgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AZAADVDBFcmBHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowUX4szgg2XU4FxFhgUhz4iNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDi+CN?=
 =?us-ascii?q?gUCAxgJglwDAwECJB8KKQMDAQIGAQEfKQgDAVMZBYMcggIBBKZbM4VAhHCMPBe?=
 =?us-ascii?q?BQD+BEYhghQ4CiRmXcwmRTAsYiWmHXZk/gUaCDjMaCBsVgyeCJAMXjh5AMYEHH?=
 =?us-ascii?q?IppgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="55588032"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 05:33:02 -0800
Received: from localhost ([::1]:44920 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX4dJ-0006Gi-Ut
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 08:33:02 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46200)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4Yi-0002hk-Eu
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:17 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4Yh-0001Fh-HL
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:16 -0500
Received: from mx1.redhat.com ([209.132.183.28]:50270)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kwolf@redhat.com>)
	id 1gX4Yc-00015m-1K; Wed, 12 Dec 2018 08:28:10 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 5A81A308624F;
	Wed, 12 Dec 2018 13:28:09 +0000 (UTC)
Received: from linux.fritz.box.com (ovpn-117-245.ams2.redhat.com
	[10.36.117.245])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 4AE9A60C44;
	Wed, 12 Dec 2018 13:28:08 +0000 (UTC)
From: Kevin Wolf <kwolf@redhat.com>
To: qemu-block@nongnu.org
Date: Wed, 12 Dec 2018 14:27:07 +0100
Message-Id: <20181212132735.16080-14-kwolf@redhat.com>
In-Reply-To: <20181212132735.16080-1-kwolf@redhat.com>
References: <20181212132735.16080-1-kwolf@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.49]);
	Wed, 12 Dec 2018 13:28:09 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 13/41] qcow2: do decompression in threads
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, peter.maydell@linaro.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>

Do decompression in threads, like it is already done for compression.
This improves asynchronous compressed reads performance.

Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
Reviewed-by: Alberto Garcia <berto@igalia.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
---
 block/qcow2.c | 34 +++++++++++++++++++++++++++-------
 1 file changed, 27 insertions(+), 7 deletions(-)

diff --git a/block/qcow2.c b/block/qcow2.c
index c1886c46e3..0b5ad13006 100644
--- a/block/qcow2.c
+++ b/block/qcow2.c
@@ -3807,20 +3807,24 @@ static ssize_t qcow2_decompress(void *dest, size_=
t dest_size,
=20
 #define MAX_COMPRESS_THREADS 4
=20
+typedef ssize_t (*Qcow2CompressFunc)(void *dest, size_t dest_size,
+                                     const void *src, size_t src_size);
 typedef struct Qcow2CompressData {
     void *dest;
     size_t dest_size;
     const void *src;
     size_t src_size;
     ssize_t ret;
+
+    Qcow2CompressFunc func;
 } Qcow2CompressData;
=20
 static int qcow2_compress_pool_func(void *opaque)
 {
     Qcow2CompressData *data =3D opaque;
=20
-    data->ret =3D qcow2_compress(data->dest, data->dest_size,
-                               data->src, data->src_size);
+    data->ret =3D data->func(data->dest, data->dest_size,
+                           data->src, data->src_size);
=20
     return 0;
 }
@@ -3830,10 +3834,9 @@ static void qcow2_compress_complete(void *opaque, =
int ret)
     qemu_coroutine_enter(opaque);
 }
=20
-/* See qcow2_compress definition for parameters description */
-static ssize_t qcow2_co_compress(BlockDriverState *bs,
-                                 void *dest, size_t dest_size,
-                                 const void *src, size_t src_size)
+static ssize_t coroutine_fn
+qcow2_co_do_compress(BlockDriverState *bs, void *dest, size_t dest_size,
+                     const void *src, size_t src_size, Qcow2CompressFunc=
 func)
 {
     BDRVQcow2State *s =3D bs->opaque;
     BlockAIOCB *acb;
@@ -3843,6 +3846,7 @@ static ssize_t qcow2_co_compress(BlockDriverState *=
bs,
         .dest_size =3D dest_size,
         .src =3D src,
         .src_size =3D src_size,
+        .func =3D func,
     };
=20
     while (s->nb_compress_threads >=3D MAX_COMPRESS_THREADS) {
@@ -3865,6 +3869,22 @@ static ssize_t qcow2_co_compress(BlockDriverState =
*bs,
     return arg.ret;
 }
=20
+static ssize_t coroutine_fn
+qcow2_co_compress(BlockDriverState *bs, void *dest, size_t dest_size,
+                  const void *src, size_t src_size)
+{
+    return qcow2_co_do_compress(bs, dest, dest_size, src, src_size,
+                                qcow2_compress);
+}
+
+static ssize_t coroutine_fn
+qcow2_co_decompress(BlockDriverState *bs, void *dest, size_t dest_size,
+                    const void *src, size_t src_size)
+{
+    return qcow2_co_do_compress(bs, dest, dest_size, src, src_size,
+                                qcow2_decompress);
+}
+
 /* XXX: put compressed sectors first, then all the cluster aligned
    tables to avoid losing bytes in alignment */
 static coroutine_fn int
@@ -3993,7 +4013,7 @@ qcow2_co_preadv_compressed(BlockDriverState *bs,
         goto fail;
     }
=20
-    if (qcow2_decompress(out_buf, s->cluster_size, buf, csize) < 0) {
+    if (qcow2_co_decompress(bs, out_buf, s->cluster_size, buf, csize) < =
0) {
         ret =3D -EIO;
         goto fail;
     }
--=20
2.19.2


