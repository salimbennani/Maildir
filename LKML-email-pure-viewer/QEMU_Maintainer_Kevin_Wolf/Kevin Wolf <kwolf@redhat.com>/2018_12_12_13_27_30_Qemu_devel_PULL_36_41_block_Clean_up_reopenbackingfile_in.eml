Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:50:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DBBED580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 05:53:15 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 05:53:16 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AgMLrcBDveL6vQUI6SdCBUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPTyr8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/m/UhMNygqJUrx2vqQFnw4PWYo+YO+dyc63BcdwEXmpMRdpdVzVbD4+g?=
 =?us-ascii?q?c4cDE/YNMOBFpIf9vVsOqh6+CBGpCuzx1D9Ih3n21rA63OQmFQHG0hErEtUNsH?=
 =?us-ascii?q?Xaq9X1MKkSXPuvzKbW0DrDb+lZ2Svn5IfUdRAhpOiBULRtesTS0UkiDx3JgkmT?=
 =?us-ascii?q?pID/Ij+Zy+cAv3KF4+duVe+jkXMrpgNprjSx2sshjpPFip8bx1za7yl13YU4KN?=
 =?us-ascii?q?OiREJlYtOpFoZbuTuAOItsWMwiRnlluCYkxb0Cvp62ZCwKyJU8xx7DcPyLaYeI?=
 =?us-ascii?q?4hT+VOqLJjd4nn1ldKq+hxa070eg1vXxWteo3FtJtCZJj8TAu3MX2xDN5MWKSu?=
 =?us-ascii?q?Fx8lqj1DqX0gDc8OBEIUQ6larBLJ4hx6Y9loMNvkTGAy/6gVj5g7GIdko6/uik?=
 =?us-ascii?q?8v/oYrL7pp+aK4B7lBr+PqMqmsy+AuQ3LBICXmeG+emk0L3j/Ev5QKhFj/Esk6?=
 =?us-ascii?q?nZtozaKtofpqKjHwBV1YMj5g25Dzeh1tQYkn8HLE9fdBKAlYjpNEnCIOrkAven?=
 =?us-ascii?q?n1SsjDBryujCPr3gAZXCMGLPkbj8fbtm705cyQwzzc1Q5p5OC7EBJu7zVVH1tN?=
 =?us-ascii?q?DCEhA5NAm0kK7aDs5g3NYeRX6XGf3ed6fTqkOToOQoJeaKeckSojm6LvEk4/vn?=
 =?us-ascii?q?izg+gUMceq+ymoIabW39Evl4LkHKXHz3n91UFG4LuhY5HvXnjUDHXTNNanL3Ra?=
 =?us-ascii?q?8l+zwgFKqgCoHMQJ3rh6aOizymFJ9bbXwTF1aXDH3zfJ+FUfpfVCXHO8Jkj3kO?=
 =?us-ascii?q?Ub+qSKcn0hehshK8zKBofcTO/ShNlp/91d492OrXm1lm9iNzC8q1yWyBT2ho2G?=
 =?us-ascii?q?gPQmllj+hEvUVhxwLbguBDiPtCGIkL6g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAADOERFcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCYoxzizOCDZJXhHyBcxQYFIc+IjUIDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BAQEICwsGGw4vgjYFAgMYCYJcAwMBAiQfCikDAwECBgEBHykIAwFTGQWDHIICA?=
 =?us-ascii?q?QSmXjOFQIRvjDwXgUA/gRGHT4V9IgKJPZdPCZFMCxiBXIgNNocnLJkTgUcBggw?=
 =?us-ascii?q?zGggbFYMngicXEo4MQDGBBxyKaYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AnAADOERFcmBHrdtBjHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?CYoxzizOCDZJXhHyBcxQYFIc+IjUIDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vg?=
 =?us-ascii?q?jYFAgMYCYJcAwMBAiQfCikDAwECBgEBHykIAwFTGQWDHIICAQSmXjOFQIRvjDw?=
 =?us-ascii?q?XgUA/gRGHT4V9IgKJPZdPCZFMCxiBXIgNNocnLJkTgUcBggwzGggbFYMngicXE?=
 =?us-ascii?q?o4MQDGBBxyKaYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="44652441"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 05:53:14 -0800
Received: from localhost ([::1]:45052 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX4ws-0006KP-5X
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 08:53:14 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46863)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4ZL-0003aY-E2
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <kwolf@redhat.com>) id 1gX4ZK-0001rj-C7
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 08:28:55 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34682)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <kwolf@redhat.com>)
	id 1gX4ZE-0001m6-VK; Wed, 12 Dec 2018 08:28:49 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 37C96811AC;
	Wed, 12 Dec 2018 13:28:48 +0000 (UTC)
Received: from linux.fritz.box.com (ovpn-117-245.ams2.redhat.com
	[10.36.117.245])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 24F8960C44;
	Wed, 12 Dec 2018 13:28:46 +0000 (UTC)
From: Kevin Wolf <kwolf@redhat.com>
To: qemu-block@nongnu.org
Date: Wed, 12 Dec 2018 14:27:30 +0100
Message-Id: <20181212132735.16080-37-kwolf@redhat.com>
In-Reply-To: <20181212132735.16080-1-kwolf@redhat.com>
References: <20181212132735.16080-1-kwolf@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Wed, 12 Dec 2018 13:28:48 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PULL 36/41] block: Clean up reopen_backing_file() in
 block/replication.c
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, peter.maydell@linaro.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Alberto Garcia <berto@igalia.com>

This function is used to put the hidden and secondary disks in
read-write mode before launching the backup job, and back in read-only
mode afterwards.

This patch does the following changes:

  - Use an options QDict with the "read-only" option instead of
    passing the changes as flags only.

  - Simplify the code (it was unnecessarily complicated and verbose).

  - Fix a bug due to which the secondary disk was not being put back
    in read-only mode when writable=3Dfalse (because in this case
    orig_secondary_flags always had the BDRV_O_RDWR flag set).

  - Stop clearing the BDRV_O_INACTIVE flag.

The flags parameter to bdrv_reopen_queue() becomes redundant and we'll
be able to get rid of it in a subsequent patch.

Signed-off-by: Alberto Garcia <berto@igalia.com>
Reviewed-by: Max Reitz <mreitz@redhat.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
---
 block/replication.c | 45 +++++++++++++++++++++------------------------
 1 file changed, 21 insertions(+), 24 deletions(-)

diff --git a/block/replication.c b/block/replication.c
index 0c2989d2cb..af9dba8696 100644
--- a/block/replication.c
+++ b/block/replication.c
@@ -20,6 +20,7 @@
 #include "block/block_backup.h"
 #include "sysemu/block-backend.h"
 #include "qapi/error.h"
+#include "qapi/qmp/qdict.h"
 #include "replication.h"
=20
 typedef enum {
@@ -39,8 +40,8 @@ typedef struct BDRVReplicationState {
     char *top_id;
     ReplicationState *rs;
     Error *blocker;
-    int orig_hidden_flags;
-    int orig_secondary_flags;
+    bool orig_hidden_read_only;
+    bool orig_secondary_read_only;
     int error;
 } BDRVReplicationState;
=20
@@ -349,44 +350,40 @@ static void secondary_do_checkpoint(BDRVReplication=
State *s, Error **errp)
     }
 }
=20
+/* This function is supposed to be called twice:
+ * first with writable =3D true, then with writable =3D false.
+ * The first call puts s->hidden_disk and s->secondary_disk in
+ * r/w mode, and the second puts them back in their original state.
+ */
 static void reopen_backing_file(BlockDriverState *bs, bool writable,
                                 Error **errp)
 {
     BDRVReplicationState *s =3D bs->opaque;
     BlockReopenQueue *reopen_queue =3D NULL;
-    int orig_hidden_flags, orig_secondary_flags;
-    int new_hidden_flags, new_secondary_flags;
     Error *local_err =3D NULL;
=20
     if (writable) {
-        orig_hidden_flags =3D s->orig_hidden_flags =3D
-                                bdrv_get_flags(s->hidden_disk->bs);
-        new_hidden_flags =3D (orig_hidden_flags | BDRV_O_RDWR) &
-                                                    ~BDRV_O_INACTIVE;
-        orig_secondary_flags =3D s->orig_secondary_flags =3D
-                                bdrv_get_flags(s->secondary_disk->bs);
-        new_secondary_flags =3D (orig_secondary_flags | BDRV_O_RDWR) &
-                                                     ~BDRV_O_INACTIVE;
-    } else {
-        orig_hidden_flags =3D (s->orig_hidden_flags | BDRV_O_RDWR) &
-                                                    ~BDRV_O_INACTIVE;
-        new_hidden_flags =3D s->orig_hidden_flags;
-        orig_secondary_flags =3D (s->orig_secondary_flags | BDRV_O_RDWR)=
 &
-                                                    ~BDRV_O_INACTIVE;
-        new_secondary_flags =3D s->orig_secondary_flags;
+        s->orig_hidden_read_only =3D bdrv_is_read_only(s->hidden_disk->b=
s);
+        s->orig_secondary_read_only =3D bdrv_is_read_only(s->secondary_d=
isk->bs);
     }
=20
     bdrv_subtree_drained_begin(s->hidden_disk->bs);
     bdrv_subtree_drained_begin(s->secondary_disk->bs);
=20
-    if (orig_hidden_flags !=3D new_hidden_flags) {
-        reopen_queue =3D bdrv_reopen_queue(reopen_queue, s->hidden_disk-=
>bs, NULL,
-                                         new_hidden_flags);
+    if (s->orig_hidden_read_only) {
+        int flags =3D bdrv_get_flags(s->hidden_disk->bs);
+        QDict *opts =3D qdict_new();
+        qdict_put_bool(opts, BDRV_OPT_READ_ONLY, !writable);
+        reopen_queue =3D bdrv_reopen_queue(reopen_queue, s->hidden_disk-=
>bs,
+                                         opts, flags);
     }
=20
-    if (!(orig_secondary_flags & BDRV_O_RDWR)) {
+    if (s->orig_secondary_read_only) {
+        int flags =3D bdrv_get_flags(s->secondary_disk->bs);
+        QDict *opts =3D qdict_new();
+        qdict_put_bool(opts, BDRV_OPT_READ_ONLY, !writable);
         reopen_queue =3D bdrv_reopen_queue(reopen_queue, s->secondary_di=
sk->bs,
-                                         NULL, new_secondary_flags);
+                                         opts, flags);
     }
=20
     if (reopen_queue) {
--=20
2.19.2


