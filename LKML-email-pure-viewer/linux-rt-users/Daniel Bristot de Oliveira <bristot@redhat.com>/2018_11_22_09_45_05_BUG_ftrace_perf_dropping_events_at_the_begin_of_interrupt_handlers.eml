Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 19:04:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B390A58046A;
	Thu, 22 Nov 2018 01:45:20 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 01:45:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AqfNpgxEupgNF4hCICbS3ip1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osu4bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSSJPAp6y?=
 =?us-ascii?q?YYgBAeUPMulXs4bzp0AWrRa8HgSsGODixyVUinPq06A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotvvO6cUUOC60q3IxijeYvNM2Df985TIchc9ofqRQL1/b9fax1ArFwPEkFWf?=
 =?us-ascii?q?t43lPymP2e8QtGWU9PBgVeO0i247rAFxviOixt0yhYbUhoIa0EzE+T9lz4YyIN?=
 =?us-ascii?q?21UUh2asOnHptIryyWKZd6T8c4T211tis21KcKtYO4cSQW0pgqxhzSZ+SFfoWM?=
 =?us-ascii?q?+B7uWvidLS1liH9nfL+znQi+/VSkx+D6S8K6ykxFrjBfndnJrn0N1wLc6syASv?=
 =?us-ascii?q?Zl4Eeh1iiA1xrJ5uFHP080j6zbJIAlwrIqkZoTq0vDEjf3mEXwkqCWal0p9va0?=
 =?us-ascii?q?5+njeLnqu5GRO5Fuhg3jMakihtazDOU6PwQWWmiU4+W81Lnt/U3jR7VKi+U7kq?=
 =?us-ascii?q?3YsJDcOMQaqbe1AwxL3YY57RawETOm3M0fnXgJKlJKZgiHgpP3O1HBPv/4F+2z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDo/KLnjZn7ftZax95FJEyAov0dBf4IpZCrUAIPLwRED9rt?=
 =?us-ascii?q?PZDgIiPgywwubnDsh914wEVWKOBK+ZLL3dsVuS6u0zJOmMYZcfuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcdfaaz3JsXdGq3HvN8L0WZfHrjmNEBEWgRswo6TezqjkCCUDFJa3azWa?=
 =?us-ascii?q?I8+i80CIa8AYjfQYCthaSL3D2nEZ1OemBGFleMHG/qd4WDRfgAciGSIshnkjwC?=
 =?us-ascii?q?UrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI5xrt/oUx6yleAy6R4meZXFd5I6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKpA7APkbyHHpg08qPG0Hj3KMZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSAN/TL/K?=
 =?us-ascii?q?XW4BaUfMrdT2/EXCT6SwBrQhNQdBzc2CKq5OatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweRYk1l1rq1/AMVhPOGR/MS2LIEpDkuqzFuEFmh2NLWDsKKpxB9c6VEfd?=
 =?us-ascii?q?M9/FBH2HrFtwx8O5ygKLxihl4ecghto0PizRJ3Cp9EkcgrqnMqwxF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov629o091L3H?=
 =?us-ascii?q?qT+JrLDBAeXonsUkkq7Rd6obLaYi4j547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a80IsOqbeeJ1LSqPeZghj2mi2tH7Z?=
 =?us-ascii?q?t50kKN8Sp8V+HJ04wEw/GewguISTP8gE29vcDwnIBOfSsSEXanySj4GI5RYbV/?=
 =?us-ascii?q?fZwKCWiyOcK33Mhxh5n3V35e6lGjHVIG1Na1dhWIa1zywBNf1V4QoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5Uvix6lb?=
 =?us-ascii?q?pb5zLmnJTUdTYij2KXpvUq+xtrqEfs5O54kksSRRUOSgf1+aTqTxrAcd0yPmB2?=
 =?us-ascii?q?Fe3iw0dym2upXlmBx3kGCdI2xprHraesFwwg3T5MfGSv5S3ToGRS94hifRBlWn?=
 =?us-ascii?q?O9mp/NOUl4rMs+ykVmKhUIFTfjfvzY+aqCS74mhqCwWln/+vgt3nDRQ60Sjj2t?=
 =?us-ascii?q?hqTyrIqwzwYovq16S8Ku9nekhoBFnh68t1AI1+k40whI0O1ngenJma4X0HkWLr?=
 =?us-ascii?q?O9VBxa3+dGYNRSIMw9PN4wjqwkxjImiJx4LkTHqdxMRhasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArUTHUlbJyPgjRqJ?=
 =?us-ascii?q?4M6lrKVLemmva6O/21RkndCuF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSmSpnPmf9sWckyuEhixxuwIq6vJOGK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHTInsH?=
 =?us-ascii?q?ibHr7fHRKF5EdisnLCCJSrN3CRJHkEwtRuXhidJEpDgA8KWDU2hII2FgevxMb5?=
 =?us-ascii?q?akd2+igR5kLkqhtL0u9oNQPwUmLBqwezcDs0VIKTLBlL7gFB+kfVN9aR7vloEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+I?=
 =?us-ascii?q?xJKoz4tm5iuMOd+JPnV4FP073UxDXX9iFsTdmjUPTTEXli3XY86aohe85jN4rs?=
 =?us-ascii?q?Sl/Pv3XwLv4JOFC6FOPtV35xC2naCDOvaQhClnKDZY1ZAMxX7SxLgcxl4SjC5u?=
 =?us-ascii?q?eCe3EbQdri7AV6bQmq5RDx4GZCJ/LspI76Qg3gZTPc7XkM/61rl9jvQtEVdKSU?=
 =?us-ascii?q?Thmt21ZcwNO2yyLk7HC12RNLuYJTzH2cX3YaKnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWnMN92iD0626E7imnWOm4cLz?=
 =?us-ascii?q?d8dVhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuGi50jf5V4Gwmy7tJ?=
 =?us-ascii?q?6yFJXPx0lzHUrt5rolGmlPGAyztnUBVUrDZLi5mGvUFjOaXf65lBVmzI/BML7W?=
 =?us-ascii?q?WMFRsKo8FpBcHou6BVmZDzk/fINDpc/tScx8wHG8XYNIrTKn06LRflBBbbCwwJ?=
 =?us-ascii?q?SD+wc2bFiBoZ2NiI8HSRop9ygZH2hpMKSrgTWFF9M/4eDQwxFdcHLb90UykinL?=
 =?us-ascii?q?rdi9QHsz72iDr0YI0OupHBS+LXAvj1LjudpadLagFOwr7iK4kXcIrh1BoxREN9?=
 =?us-ascii?q?mdHmEkzRUNQFiDdgdRMzvA1B/TBZSmwt1kP/Y0v56mUSDuKzgjYshwd+aPhr/z?=
 =?us-ascii?q?DptQRkbmHWrTc9xRFi0e7uhiqcJXuodP+9?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AVAABkefZbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2uEH4h3iyKBaDmXJoIFAQErAYhQIjUIDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkvgjYkAYJpAhsFDwFGBgkCJAIYDgICAzEBBQEiAQwIAQEBgxyCAgQBn?=
 =?us-ascii?q?kE8iw2BL4VAhGcSeYp+F4F/gTgMimGCVwKIf4ISiiWKTAmRKQYYiVGHNgGYCQI?=
 =?us-ascii?q?EAgQFAgUPIYEmAYILMxoIGxWDKJBaP4E3AQGKXiuCHQMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AVAABkefZbh0O0hNFiHAEBAQQBAQcEAQGBUgYBAQsBg2u?=
 =?us-ascii?q?EH4h3iyKBaDmXJoIFAQErAYhQIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkA?=
 =?us-ascii?q?YJpAhsFDwFGBgkCJAIYDgICAzEBBQEiAQwIAQEBgxyCAgQBnkE8iw2BL4VAhGc?=
 =?us-ascii?q?SeYp+F4F/gTgMimGCVwKIf4ISiiWKTAmRKQYYiVGHNgGYCQIEAgQFAgUPIYEmA?=
 =?us-ascii?q?YILMxoIGxWDKJBaP4E3AQGKXiuCHQMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="52263612"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 01:45:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2393540AbeKVUXx (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 15:23:53 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:34866 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2387572AbeKVUXw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 15:23:52 -0500
Received: by mail-wr1-f68.google.com with SMTP id 96so8579452wrb.2
        for <linux-kernel@vger.kernel.org>; Thu, 22 Nov 2018 01:45:08 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:to:cc:from:subject:message-id:date:user-agent
         :mime-version:content-language:content-transfer-encoding;
        bh=U3AU2qOkyo1ezlGTDOrc+mJ3FZW3+NwkgiA28ZfegGU=;
        b=Ca4UtWYSdzLFm/PT+iG8UI7U9lvwBDySHo5vVCkAwPfWZVlKD13XSBB0Q4RaAl8aIG
         LvUkg6ob9av3RmYcbYFB4l8J/LqZ3l8U2FdpBjI1U/owsQiH6QYBBmf9w1ewgEP8nGa6
         c49CBFhsvNNHgQN09gBZcXvqtBfAfLzDZ5p2gFL7/adA/MAB9l8oc2gJDWDMJrOCt+f8
         Wmm5b299hBqIMH2rmjEPZKcKs94PeCrh7dCZN2jpdGK5wtt8Zz6l7cXAahoY5NBLG5MF
         4G+L8Wn5aZy3aSH10KyQKqm4nKWockOPt4GRacestMkF2NW4rhLLV9HOr/POJtHgkv7a
         YqTw==
X-Gm-Message-State: AA+aEWYNOcOzGCQfGjnvfAgWcNfrTN7tMPE5uBel1tB8SiFYjMSXBrD3
        MIZYzMALKb+XK7cwvjeV1XgkLg==
X-Google-Smtp-Source: AFSGD/XAqcKPO0F3Oy11hOhhxl1+SdYo5Ck1hIQK0yNGnTiEX9OnK/FVsKfLYVoREXsBoBdQz3Jyvg==
X-Received: by 2002:adf:c189:: with SMTP id x9-v6mr9337911wre.233.1542879907342;
        Thu, 22 Nov 2018 01:45:07 -0800 (PST)
Received: from t460s.bristot.redhat.com (host209-179-dynamic.32-79-r.retail.telecomitalia.it. [79.32.179.209])
        by smtp.gmail.com with ESMTPSA id b129sm2561767wmd.24.2018.11.22.01.45.05
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 01:45:06 -0800 (PST)
To: Steven Rostedt <rostedt@goodmis.org>,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        LKML <linux-kernel@vger.kernel.org>
Cc: Clark Williams <williams@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        linux-rt-users <linux-rt-users@vger.kernel.org>,
        Marko Pusch <marko.pusch@siemens.com>,
        Tommaso Cucinotta <tommaso.cucinotta@sssup.it>,
        =?UTF-8?Q?R=c3=b4mulo_Silva_de_Oliveira?= 
        <romulo.deoliveira@ufsc.br>, Ingo Molnar <mingo@redhat.com>
From: Daniel Bristot de Oliveira <bristot@redhat.com>
Subject: BUG: ftrace/perf dropping events at the begin of interrupt handlers
Message-ID: <a5e8182e-de6c-caaf-3106-a43b54198b97@redhat.com>
Date: Thu, 22 Nov 2018 10:45:05 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

While developing the automata [1], I've hit cases in which need resched
and/or sched wakeup events were being fired with preemption and/or
interrupts enabled. However, this is not possible because interrupts must
be disabled to avoid concurrence with an interrupt handler, and the
preemption must be disabled to avoid concurrence with the scheduler.
The tool I use to validate the model is based on perf, and it was
complaining about this situation. Iâ€™ve talked to Arnaldo about it
two months.

Further debug on perf has shown that those cases always took place
associated with the occurrence of interrupts. At ELC Europe
Marko Pusch (Siemens) also mentioned hitting cases in which he saw
missing events related to IRQ handling, but using ftrace. Steven and
I also discussed this during the last Plumbers (Vancouver - CA) and we
agreed that there is a problem on ftrace too.

To reproduce this problem with ftrace, one needs to enable function
tracer and do kernel operations in a CPU in which IRQs are taking place.

For instance, in a single CPU VM, run:

# while [ 1 ]; do echo > /dev/null; done

In a shell, and 

# trace-cmd record -b [enough buff to avoid missing trace because of buffer overun] -p function sleep 5

In another shell.

Then, using trace-cmd report --debug, we can see the problem. Here is one
example of output, first the expected one:

================ Regular execution =================
In the regular execution, a thread is working...
         kswapd0-32    [000]   218.980065: function:                   __delete_from_page_cache [61:0x898:24]
         kswapd0-32    [000]   218.980065: function:                      unaccount_page_cache_page [55:0x8b4:24]
         kswapd0-32    [000]   218.980065: function:                         page_mapped [72:0x8d0:24]
         kswapd0-32    [000]   218.980065: function:                         PageHuge [56:0x8ec:24]
         kswapd0-32    [000]   218.980065: function:                         __mod_node_page_state [56:0x908:24]
         kswapd0-32    [000]   218.980065: function:                      PageHuge [53:0x924:24]
         kswapd0-32    [000]   218.980065: function:                      shmem_mapping [77:0x940:24]
         kswapd0-32    [000]   218.980065: function:             workingset_update_node [69:0x95c:24]
         kswapd0-32    [000]   218.980065: function:                   _raw_spin_unlock_irqrestore [59:0x978:24]
         kswapd0-32    [000]   218.980065: function:             unlock_page [64:0x994:24]
         kswapd0-32    [000]   218.980065: function:             pagevec_remove_exceptionals [75:0x9b0:24]
         kswapd0-32    [000]   218.980065: function:             __pagevec_release [78:0x9cc:24]

Then an interrupt takes place (do_IRQ is the handler)
         kswapd0-32    [000]   218.980068: function:             do_IRQ [2539:0x9e8:24]
         kswapd0-32    [000]   218.980068: function:                irq_enter [90:0xa04:24]
         kswapd0-32    [000]   218.980068: function:                   rcu_irq_enter [68:0xa20:24]
         kswapd0-32    [000]   218.980068: function:                   rcu_nmi_enter [72:0xa3c:24]
         kswapd0-32    [000]   218.980068: function:                   irqtime_account_irq [61:0xa58:24]

And handle_irq is executed as part of the handler, called by do_IRQ:
         kswapd0-32    [000]   218.980068: function:                handle_irq [107:0xa74:24]			
         kswapd0-32    [000]   218.980068: function:                   handle_edge_irq [167:0xa90:24]
         kswapd0-32    [000]   218.980068: function:                      _raw_spin_lock [76:0xaac:24]
         kswapd0-32    [000]   218.980069: function:                      irq_may_run [68:0xac8:24]
         kswapd0-32    [000]   218.980069: function:                      irq_chip_ack_parent [105:0xae4:24]
         kswapd0-32    [000]   218.980069: function:                      apic_ack_edge [102:0xb00:24]
         kswapd0-32    [000]   218.980069: function:                         apic_chip_data.part.16 [65:0xb1c:24]
         kswapd0-32    [000]   218.980069: function:                         __irq_complete_move [68:0xb38:24]
         kswapd0-32    [000]   218.980069: function:                      apic_ack_irq [58:0xb54:24]
         kswapd0-32    [000]   218.980069: function:                      handle_irq_event [114:0xb70:24]
         kswapd0-32    [000]   218.980069: function:                         handle_irq_event_percpu [67:0xb8c:24]
         kswapd0-32    [000]   218.980069: function:                            __handle_irq_event_percpu [58:0xba8:24]

This is the device interrupt in charge:
         kswapd0-32    [000]   218.980069: function:                               vring_interrupt [100:0xbc4:24]
         kswapd0-32    [000]   218.980069: function:                                  virtblk_done [118:0xbe0:24]
         kswapd0-32    [000]   218.980069: function:                                     _raw_spin_lock_irqsave [82:0xbfc:24]
         kswapd0-32    [000]   218.980070: function:                                     virtqueue_disable_cb [60:0xc18:24]
         kswapd0-32    [000]   218.980070: function:                                     virtqueue_get_buf [74:0xc34:24]
         kswapd0-32    [000]   218.980070: function:                                     virtqueue_get_buf_ctx [69:0xc50:24]
         kswapd0-32    [000]   218.980070: function:                                        detach_buf [74:0xc6c:24]
         kswapd0-32    [000]   218.980070: function:                                           vring_unmap_one [73:0xc88:24]
         kswapd0-32    [000]   218.980070: function:                                              vring_use_dma_api [65:0xca4:24]
         kswapd0-32    [000]   218.980070: function:                                           vring_unmap_one [81:0xcc0:24]
         kswapd0-32    [000]   218.980070: function:                                              vring_use_dma_api [56:0xcdc:24]
         kswapd0-32    [000]   218.980070: function:                                           vring_unmap_one [58:0xcf8:24]
         kswapd0-32    [000]   218.980070: function:                                              vring_use_dma_api [55:0xd14:24]
         kswapd0-32    [000]   218.980070: function:                                           vring_unmap_one [53:0xd30:24]
         kswapd0-32    [000]   218.980070: function:                                              vring_use_dma_api [56:0xd4c:24]
         kswapd0-32    [000]   218.980070: function:                                           kfree [76:0xd68:24]
         kswapd0-32    [000]   218.980070: function:                                     blk_mq_complete_request [141:0xd84:24]
         kswapd0-32    [000]   218.980071: function:                                        cpus_share_cache [87:0xda0:24]
         kswapd0-32    [000]   218.980071: function:                                        blk_mq_end_request [96:0xdbc:24]
         kswapd0-32    [000]   218.980071: function:                                           blk_update_request [70:0xdd8:24]
         kswapd0-32    [000]   218.980071: function:                                              blk_status_to_errno [82:0xdf4:24]
         kswapd0-32    [000]   218.980071: function:                                              blk_account_io_completion [67:0xe10:24]
         kswapd0-32    [000]   218.980071: function:                                              bio_advance [98:0xe2c:24]
         kswapd0-32    [000]   218.980071: function:                                              bio_endio [73:0xe48:24]
         kswapd0-32    [000]   218.980071: function:                                                 rq_qos_done_bio [65:0xe64:24]
         kswapd0-32    [000]   218.980071: function:                                                 bio_disassociate_task [82:0xe80:24]
         kswapd0-32    [000]   218.980071: function:                                              xfs_end_bio [90:0xe9c:24]
         kswapd0-32    [000]   218.980071: function:                                                 blk_status_to_errno [72:0xeb8:24]
         kswapd0-32    [000]   218.980071: function:                                              xfs_destroy_ioend [76:0xed4:24]
         kswapd0-32    [000]   218.980072: function:                                                 end_page_writeback [83:0xef0:24]
         kswapd0-32    [000]   218.980072: function:                                                    test_clear_page_writeback [70:0xf0c:24]
         kswapd0-32    [000]   218.980072: function:                                                       page_mapping [57:0xf28:24]
         kswapd0-32    [000]   218.980072: function:                                                       lock_page_memcg [74:0xf44:24]
         kswapd0-32    [000]   218.980072: function:                                                       mem_cgroup_page_lruvec [63:0xf60:24]
         kswapd0-32    [000]   218.980072: function:                                                       _raw_spin_lock_irqsave [86:0xf7c:24]
         kswapd0-32    [000]   218.980072: function:                                                       mem_cgroup_wb_domain [272:0xf98:24]
         kswapd0-32    [000]   218.980072: function:                                                       _raw_spin_unlock_irqrestore [69:0xfb4:24]
         kswapd0-32    [000]   218.980072: function:                                                       __mod_node_page_state [66:0xfd0:24]

For the sake of completeness, here is a debug message about the start of
a new sub-buffer - no messages about dropped events.
CPU:0 [SUBBUFFER START] [218980072425:0x23120000]
         kswapd0-32    [000]   218.980072: function:                                                       dec_zone_page_state [0:0x10:24]
================ Regular execution =================


Here is an occurence of the problem:
================ Problematic execution =================
A thread is running:
       trace-cmd-761   [000]   218.979853: function:                                                          __inc_node_page_state [57:0xb54:24]
       trace-cmd-761   [000]   218.979853: function:                                                          __inc_node_state [53:0xb70:24]
       trace-cmd-761   [000]   218.979853: function:                                                          mem_cgroup_commit_charge [60:0xb8c:24]
       trace-cmd-761   [000]   218.979853: function:                                                             commit_charge [55:0xba8:24]
       trace-cmd-761   [000]   218.979853: function:                                                             mem_cgroup_charge_statistics [60:0xbc4:24]
       trace-cmd-761   [000]   218.979853: function:                                                             memcg_check_events [60:0xbe0:24]
       trace-cmd-761   [000]   218.979853: function:                                                       lru_cache_add [59:0xbfc:24]
       trace-cmd-761   [000]   218.979854: function:                                                       __lru_cache_add [53:0xc18:24]

Than handle_irq is called outside of the context....
       trace-cmd-761   [000]   218.979857: function:             handle_irq [3780:0xc34:24]
       trace-cmd-761   [000]   218.979857: function:                handle_edge_irq [0:0xc50:24]
       trace-cmd-761   [000]   218.979857: function:                   _raw_spin_lock [0:0xc6c:24]
       trace-cmd-761   [000]   218.979857: function:                   irq_may_run [0:0xc88:24]
       trace-cmd-761   [000]   218.979857: function:                   irq_chip_ack_parent [0:0xca4:24]
       trace-cmd-761   [000]   218.979857: function:                   apic_ack_edge [0:0xcc0:24]
       trace-cmd-761   [000]   218.979857: function:                      apic_chip_data.part.16 [0:0xcdc:24]
       trace-cmd-761   [000]   218.979857: function:                      __irq_complete_move [0:0xcf8:24]
       trace-cmd-761   [000]   218.979857: function:                   apic_ack_irq [0:0xd14:24]
       trace-cmd-761   [000]   218.979857: function:                   handle_irq_event [0:0xd30:24]
       trace-cmd-761   [000]   218.979857: function:                      handle_irq_event_percpu [0:0xd4c:24]
       trace-cmd-761   [000]   218.979857: function:                         __handle_irq_event_percpu [0:0xd68:24]

and it also handles the same device interrupt.
       trace-cmd-761   [000]   218.979857: function:                            vring_interrupt [0:0xd84:24]
       trace-cmd-761   [000]   218.979857: function:                               virtblk_done [0:0xda0:24]
       trace-cmd-761   [000]   218.979857: function:                                  _raw_spin_lock_irqsave [0:0xdbc:24]
       trace-cmd-761   [000]   218.979857: function:                                  virtqueue_disable_cb [0:0xdd8:24]
       trace-cmd-761   [000]   218.979857: function:                                  virtqueue_get_buf [0:0xdf4:24]
       trace-cmd-761   [000]   218.979857: function:                                  virtqueue_get_buf_ctx [0:0xe10:24]
       trace-cmd-761   [000]   218.979857: function:                                     detach_buf [0:0xe2c:24]
       trace-cmd-761   [000]   218.979857: function:                                        vring_unmap_one [0:0xe48:24]
       trace-cmd-761   [000]   218.979857: function:                                           vring_use_dma_api [0:0xe64:24]
       trace-cmd-761   [000]   218.979857: function:                                        vring_unmap_one [0:0xe80:24]
       trace-cmd-761   [000]   218.979857: function:                                           vring_use_dma_api [0:0xe9c:24]
       trace-cmd-761   [000]   218.979857: function:                                        vring_unmap_one [0:0xeb8:24]
       trace-cmd-761   [000]   218.979857: function:                                           vring_use_dma_api [0:0xed4:24]
       trace-cmd-761   [000]   218.979857: function:                                        vring_unmap_one [0:0xef0:24]
       trace-cmd-761   [000]   218.979857: function:                                           vring_use_dma_api [0:0xf0c:24]
       trace-cmd-761   [000]   218.979857: function:                                        kfree [0:0xf28:24]
       trace-cmd-761   [000]   218.979857: function:                                  blk_mq_complete_request [0:0xf44:24]
       trace-cmd-761   [000]   218.979857: function:                                     cpus_share_cache [0:0xf60:24]
       trace-cmd-761   [000]   218.979857: function:                                     blk_mq_end_request [0:0xf7c:24]
       trace-cmd-761   [000]   218.979857: function:                                        blk_update_request [0:0xf98:24]
       trace-cmd-761   [000]   218.979857: function:                                           blk_status_to_errno [0:0xfb4:24]
       trace-cmd-761   [000]   218.979857: function:                                           blk_account_io_completion [0:0xfd0:24]

Again... the debug was on... but no messages about dropped events.
CPU:0 [SUBBUFFER START] [218979863426:0x2310d000]
       trace-cmd-761   [000]   218.979863: function:                                           bio_advance [0:0x10:24]
================ Faulty execution =================

Thus, ftrace and perf, sometimes, are dropping events at the begin of
interrupt handlers. And that is The reason why interrupt disable and
preempt disable were not being recorded (and causing problem in the
automata execution) is that these events take place in the very early
execution of the interrupt handler, in the section in which the
perf/ftrace are dropping events [ without notifying ].

[1] This is a good demonstration of problems that can be found using the
automata model presented in this workshop paper:

Modeling the Behavior of Threads in the PREEMPT_RT Linux Kernel Using
Automata. Daniel Bristot de Oliveira, Tommaso Cucinotta, RÃ´mulo Silva de
Oliveira - EWiLi'2018 â€“ Embedded operating system workshop Torino, Italy,
4 October 2018.

And in the presentations:
"Mind the gap between real-time Linux and real-time theory"
"How can we catch problems that can break the PREEMPT_RT preemption model?"
At the Linux Plumbers (Vancouver - CA)

Steven is already aware of this problem, and he is working on it.

Thanks!

-- Daniel
