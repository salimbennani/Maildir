Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 25 Nov 2018 22:13:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 02A605803EB;
	Sun, 25 Nov 2018 05:17:44 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 25 Nov 2018 05:17:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUxHGRBVrvWUf0Uo7z7iMGTZnGnfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCBvqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhXrYf9qVwBohSiCgesH/vvxz1Ti3/q36A3yfgtHBva0AA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27yK7IzTPZYPNK2Tfy8o7IeQ0/rP6WWLJ/b9DRyU4pFwjYiViQ?=
 =?us-ascii?q?q43lMC+L2ukDqGWb7PRvVfipi2E5rwF9uD+vxt0jioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1TFR3bcOqHZdOrS2WKoh7Tt84T2xpuis20r4LtYOhcCUOyZkr3QDTZvKIfoSS?=
 =?us-ascii?q?/x7uW+WcLDFlj3x/Yr2/nQy98U24x+38SMa01FFKozJbktnDqH8NzQbf6suZRf?=
 =?us-ascii?q?tn+EeuxzKP2xrU6uFeLkA4javbK5g/zb4sjpcfr1jPEyvslEnrgqKaaF8o9vWr?=
 =?us-ascii?q?5uj7eLnrp52RO5dxig7kM6QunsK/Af4/MggLR2Wb/eW81Lv+/Uz2WblKjeM5kr?=
 =?us-ascii?q?PfsJ/EIcQXv6m5AgFT0ok98RayFCmm0NsGknkdNl5FewyIj5LvO17QJPD0F/C/?=
 =?us-ascii?q?g06jkDtz3fDJIqXhAonRLnjEiLrhebd9601CxwYpwtFf+olZCrUAIPL1R0/wu8?=
 =?us-ascii?q?bUDh4/Mwyo3ennDM9x2Z8ZWWKKGqWZKr/dsUeU5uIzJOmBfI8Vtyz8K/g5/fHu?=
 =?us-ascii?q?imU1mV8Afaaz25sXZ2u1HvBnI0WffHrtjc0NEWYMvgoiUuPqjEeOXiJUZ3a3R6?=
 =?us-ascii?q?g8/C00CJq6DYffQYCgmL6B3CClEZFMZWBGDVaMEXHvd4ifX/cMaSSSItJukzAe?=
 =?us-ascii?q?VLihTZMh2g+qtAPg17VnKe/U8DUCtZ3/zNh1+/HTlRYq+DNuFMSd02aNT2Jukm?=
 =?us-ascii?q?MSXTA23rtyoUh8yleFzKh5jOZUFd1V5/NVTAg6MYTQwPB9C9D3QgjBZMuGSE66?=
 =?us-ascii?q?QtW6BjE8VtExzMUIY0pnH9WijwrM3yylA7IOk7yLBZo08r/T3nTrJsZ9zWrG27?=
 =?us-ascii?q?clj1U8XsRPMmimjLZl9wfPH47Jj1mZl6GyeKsBxiHN6nmMwXCOvE5CVg5wSrvK?=
 =?us-ascii?q?XXYYakvSrtT540fCQqSqCbQmNAtB1MGDJrFLat3vkVVJWvPjNM7CbGK2nme6HQ?=
 =?us-ascii?q?yIya+UbIr2Z2Ud2z3QB1UenAAN43mKLwg+CT2no2LFEjNuE0niY0ft8el4tXO6?=
 =?us-ascii?q?QVU4zwCMb019ybW1/gQZiuCbS/MWxrgEojsuqy1oHFah2NLbE8aApwtkfKVbfd?=
 =?us-ascii?q?M94FdG2XjFtwBnOZygNaRihl8YcwR4pE7u0xR3CoNdkckltn8qzQxyKb6G31NF?=
 =?us-ascii?q?bT+XwZfwOrjPIGno4B+vc7LW2k3Z0NuO4KgP7Oo3qlr9swCpDEYt6Ghn3MRP3H?=
 =?us-ascii?q?ua5ZXKCxQSXIn1UkY28Rh6ur7bbjM854PSyX1jL620viXe1NIuAesv0gygcMtH?=
 =?us-ascii?q?MKOYCA/yFNUXBsizKOAwh1eldBMFPOBI+64yMMOrbP+G2K+tPOZ9kzOql2VH4I?=
 =?us-ascii?q?Zh0k2S8ypwUPLH35EAw/uAxAuISy/8jEu9ssDwgY1EfzASEXalxij+GYFRYbd+?=
 =?us-ascii?q?fYAVBme0Is2738lxiITpW3FF6lGjHVQG2MmydBqWblz92xBQ1EsNrXymnyu40y?=
 =?us-ascii?q?J7kzUzoqWD2yzOxvzodAAbNW5TWGlikVDsLJC0jtAbRkSpbxIllAC45Ub83KVb?=
 =?us-ascii?q?oKV/L2/OQUZHZST2LmdiUreuubqGecJA9JQosSBPWuSmfV+aUqL9owcd0y77HW?=
 =?us-ascii?q?tR3io7dzKpupX+hRB6k3iSLHVwrHrYf8F/2xHf6cfYRf5Q2DoGWSZ5hSPWBli6?=
 =?us-ascii?q?I9mm49GUm43fveC5UmKrTodTfjXzzYOcqCu74nVnAB2lkPC0gNHnEwk60Sng2t?=
 =?us-ascii?q?luVCXIqgv8Y4bx26S7N+JnYldnBFvm58VmHYF+l5M6hIsM1ngCmpWV4X0HnH/w?=
 =?us-ascii?q?MdpB2KLydnoNRSMRzN7T7wjow0ljLnOPx4LkWXSR2MphZ9+mYmwI3iIx9dxFCK?=
 =?us-ascii?q?CR7LZchyt6vkK4rR7NYfh6hjodzPou6H0AjO0Ttgsi0D6dAqwMEklCJiPjiQ6I?=
 =?us-ascii?q?79+loaVTZWavd6Ww1UVkkdCgCrGCvh9TWHLjdpg+Gi9w6911MEjQ333r9oHkZN?=
 =?us-ascii?q?7QYMoPth2TlhfMlelUJ4g3lvoXnipnImP9sGYhy+46ixxuwJ67sJKGK2Vr4KK2?=
 =?us-ascii?q?HBpYOifpaMMU/zHnlbxekdqO34CzApVhHS0GU4DyQvKvFDISqO7rNwKTEDAnrn?=
 =?us-ascii?q?ebGLzfHRKQ6Ut8rnLPFYyrOG+TJHUD0dpiQxydLlRFgA8IRDU6goI5Fgeyyczj?=
 =?us-ascii?q?akh54y4e5kXiphtQ0O5oNAT/UmTCpAeucDg0U4OSLB5X7gFE+kfUPtaS7uN1Hy?=
 =?us-ascii?q?FE4JKhqBaBJXCcZwRNFWsJQFCLB0j/Prmy4tnN6+iZBu2jL/vXfLWBs+peW+2T?=
 =?us-ascii?q?xZKo1Itm8C2BNsGOPnlkEv061VBPXXF/G8TFhToPTzYbmD7Kb86evB284DF4rt?=
 =?us-ascii?q?ij8PT3XwLi/YuPBKVTMdVs+BC2gL2PN+2KhCZ+JjZXyIkMxWLTyLUE2F4Siidu?=
 =?us-ascii?q?dySiELgatC7NSr7QlbFTDxIBdyxzM85I5bom3gZRIc7bls/11rlgg/EvFldKTk?=
 =?us-ascii?q?bhld+pZMAQJ2G9NUjKBEKKNLSAOD3KzNv7YaK6Sb1MkupUswe8tiqcE0/mJj6D?=
 =?us-ascii?q?jSXmVwizMeFQiyGWJABeuIC4chp3FWfvVs7pah2lP99xljA2xbw0hnXXNW8TKz?=
 =?us-ascii?q?R8ckVNrqGO4iNcmPlwB2tB7n99J+mehymZ9/XYKooRsfZzAiV7jeRa4HE7y7tT?=
 =?us-ascii?q?9C5FRfx1lzHUrt5huFymluiPyjx6UBtBsDpLhYSLvVl8NqXd7JVPRXHE/BdepV?=
 =?us-ascii?q?mXXjoDrcFkAdCnlKlLzNnCjuqnJj5I6dPf8I0TDtPSKc+dGGE9dxHuHWiHIhEC?=
 =?us-ascii?q?SGuJMmfWm0xUlrm5/3iYtJ884szumZFUEZdYWUYzG/dcDV5qSo9RaKxrVy8pxO?=
 =?us-ascii?q?bIxPUD4mCz+VyIHJ1X?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AmAAAloPpbh0O0hNFiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeMEV+LIFABAQaBNRSJBoRqiTgUgV8UGBMBiFoiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJiAQICAQECJBMGAQE3AQQBCQEBCiElAwxIBhMFg?=
 =?us-ascii?q?xyBdQUIBAGlMoFsM4J2AQEFhxMIim2BHIEPgQeBEYMShGIFhXKBLAEBh22BeIR?=
 =?us-ascii?q?LgQKPIwEGAgGRJCMKkH6YMIFGgg0zGjCBYYFOghsMFxKITIU+QDKBAgMBASETj?=
 =?us-ascii?q?DYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AmAAAloPpbh0O0hNFiHQEBBQEHBQGBUQgBCwGDayeMEV+?=
 =?us-ascii?q?LIFABAQaBNRSJBoRqiTgUgV8UGBMBiFoiNAkNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJiAQICAQECJBMGAQE3AQQBCQEBCiElAwxIBhMFgxyBdQUIBAGlMoF?=
 =?us-ascii?q?sM4J2AQEFhxMIim2BHIEPgQeBEYMShGIFhXKBLAEBh22BeIRLgQKPIwEGAgGRJ?=
 =?us-ascii?q?CMKkH6YMIFGgg0zGjCBYYFOghsMFxKITIU+QDKBAgMBASETjDYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,278,1539673200"; 
   d="scan'208";a="41436573"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 25 Nov 2018 05:17:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726393AbeKZAIo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 25 Nov 2018 19:08:44 -0500
Received: from mail.kernel.org ([198.145.29.99]:33858 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726062AbeKZAIo (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 25 Nov 2018 19:08:44 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id A89EB20868;
        Sun, 25 Nov 2018 13:17:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543151859;
        bh=QGfXxsOdbAo+37EwoOmajI+DB0G6LVoFTF2mQEe+tn0=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=vRbszNhOM+wit0aEb/lJrf0wx+PPmXI44Wp7ax+Lv3aBxO9LDB1NhOt3xdgrGeZwN
         ow/vqAAnLolWmxwJR3i0vxxx6aAvBy5pieICUFann4mpV3AvpvrZVicGMpgARQFlia
         vzuWxrrS3PgOMhw/2xvmE2eXuDwcwlcsYmmasj+A=
Date: Sun, 25 Nov 2018 13:17:35 +0000
From: Jonathan Cameron <jic23@kernel.org>
To: Fabrice Gasnier <fabrice.gasnier@st.com>
Cc: <linux-arm-kernel@lists.infradead.org>,
        <linux-kernel@vger.kernel.org>, <mcoquelin.stm32@gmail.com>,
        <alexandre.torgue@st.com>, <linux-iio@vger.kernel.org>,
        <lars@metafoo.de>, <knaack.h@gmx.de>, <pmeerw@pmeerw.net>,
        <linux-stm32@st-md-mailman.stormreply.com>
Subject: Re: [PATCH 3/3] iio: adc: stm32-adc: switch off running adc when
 going to low power
Message-ID: <20181125131735.616d6cf9@archlinux>
In-Reply-To: <1542708752-26163-4-git-send-email-fabrice.gasnier@st.com>
References: <1542708752-26163-1-git-send-email-fabrice.gasnier@st.com>
        <1542708752-26163-4-git-send-email-fabrice.gasnier@st.com>
X-Mailer: Claws Mail 3.17.1 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 20 Nov 2018 11:12:32 +0100
Fabrice Gasnier <fabrice.gasnier@st.com> wrote:

> Switch off ADC when going to low power mode, in case it has been left
> running in buffer mode. Then re-enable it when resuming.
> 
> Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
My suspicion is that we have other drivers not correctly handing this
case, but as far as I can see you have it well covered here.

Applied to the togreg branch of iio.git and pushed out as testing
for the autobuilders to play with it.

Thanks,

Jonathan

> ---
>  drivers/iio/adc/stm32-adc.c | 79 ++++++++++++++++++++++++++++++++++++---------
>  1 file changed, 63 insertions(+), 16 deletions(-)
> 
> diff --git a/drivers/iio/adc/stm32-adc.c b/drivers/iio/adc/stm32-adc.c
> index 32c9c61..2a9891c 100644
> --- a/drivers/iio/adc/stm32-adc.c
> +++ b/drivers/iio/adc/stm32-adc.c
> @@ -1518,7 +1518,7 @@ static int stm32_adc_dma_start(struct iio_dev *indio_dev)
>  	return 0;
>  }
>  
> -static int stm32_adc_buffer_postenable(struct iio_dev *indio_dev)
> +static int __stm32_adc_buffer_postenable(struct iio_dev *indio_dev)
>  {
>  	struct stm32_adc *adc = iio_priv(indio_dev);
>  	struct device *dev = indio_dev->dev.parent;
> @@ -1542,10 +1542,6 @@ static int stm32_adc_buffer_postenable(struct iio_dev *indio_dev)
>  		goto err_clr_trig;
>  	}
>  
> -	ret = iio_triggered_buffer_postenable(indio_dev);
> -	if (ret < 0)
> -		goto err_stop_dma;
> -
>  	/* Reset adc buffer index */
>  	adc->bufi = 0;
>  
> @@ -1556,9 +1552,6 @@ static int stm32_adc_buffer_postenable(struct iio_dev *indio_dev)
>  
>  	return 0;
>  
> -err_stop_dma:
> -	if (adc->dma_chan)
> -		dmaengine_terminate_all(adc->dma_chan);
>  err_clr_trig:
>  	stm32_adc_set_trig(indio_dev, NULL);
>  err_pm_put:
> @@ -1568,20 +1561,30 @@ static int stm32_adc_buffer_postenable(struct iio_dev *indio_dev)
>  	return ret;
>  }
>  
> -static int stm32_adc_buffer_predisable(struct iio_dev *indio_dev)
> +static int stm32_adc_buffer_postenable(struct iio_dev *indio_dev)
> +{
> +	int ret;
> +
> +	ret = iio_triggered_buffer_postenable(indio_dev);
> +	if (ret < 0)
> +		return ret;
> +
> +	ret = __stm32_adc_buffer_postenable(indio_dev);
> +	if (ret < 0)
> +		iio_triggered_buffer_predisable(indio_dev);
> +
> +	return ret;
> +}
> +
> +static void __stm32_adc_buffer_predisable(struct iio_dev *indio_dev)
>  {
>  	struct stm32_adc *adc = iio_priv(indio_dev);
>  	struct device *dev = indio_dev->dev.parent;
> -	int ret;
>  
>  	adc->cfg->stop_conv(adc);
>  	if (!adc->dma_chan)
>  		stm32_adc_conv_irq_disable(adc);
>  
> -	ret = iio_triggered_buffer_predisable(indio_dev);
> -	if (ret < 0)
> -		dev_err(&indio_dev->dev, "predisable failed\n");
> -
>  	if (adc->dma_chan)
>  		dmaengine_terminate_all(adc->dma_chan);
>  
> @@ -1590,6 +1593,17 @@ static int stm32_adc_buffer_predisable(struct iio_dev *indio_dev)
>  
>  	pm_runtime_mark_last_busy(dev);
>  	pm_runtime_put_autosuspend(dev);
> +}
> +
> +static int stm32_adc_buffer_predisable(struct iio_dev *indio_dev)
> +{
> +	int ret;
> +
> +	__stm32_adc_buffer_predisable(indio_dev);
> +
> +	ret = iio_triggered_buffer_predisable(indio_dev);
> +	if (ret < 0)
> +		dev_err(&indio_dev->dev, "predisable failed\n");
>  
>  	return ret;
>  }
> @@ -2013,6 +2027,40 @@ static int stm32_adc_remove(struct platform_device *pdev)
>  	return 0;
>  }
>  
> +#if defined(CONFIG_PM_SLEEP)
> +static int stm32_adc_suspend(struct device *dev)
> +{
> +	struct stm32_adc *adc = dev_get_drvdata(dev);
> +	struct iio_dev *indio_dev = iio_priv_to_dev(adc);
> +
> +	if (iio_buffer_enabled(indio_dev))
> +		__stm32_adc_buffer_predisable(indio_dev);
> +
> +	return pm_runtime_force_suspend(dev);
> +}
> +
> +static int stm32_adc_resume(struct device *dev)
> +{
> +	struct stm32_adc *adc = dev_get_drvdata(dev);
> +	struct iio_dev *indio_dev = iio_priv_to_dev(adc);
> +	int ret;
> +
> +	ret = pm_runtime_force_resume(dev);
> +	if (ret < 0)
> +		return ret;
> +
> +	if (!iio_buffer_enabled(indio_dev))
> +		return 0;
> +
> +	ret = stm32_adc_update_scan_mode(indio_dev,
> +					 indio_dev->active_scan_mask);
> +	if (ret < 0)
> +		return ret;
> +
> +	return __stm32_adc_buffer_postenable(indio_dev);
> +}
> +#endif
> +
>  #if defined(CONFIG_PM)
>  static int stm32_adc_runtime_suspend(struct device *dev)
>  {
> @@ -2026,8 +2074,7 @@ static int stm32_adc_runtime_resume(struct device *dev)
>  #endif
>  
>  static const struct dev_pm_ops stm32_adc_pm_ops = {
> -	SET_SYSTEM_SLEEP_PM_OPS(pm_runtime_force_suspend,
> -				pm_runtime_force_resume)
> +	SET_SYSTEM_SLEEP_PM_OPS(stm32_adc_suspend, stm32_adc_resume)
>  	SET_RUNTIME_PM_OPS(stm32_adc_runtime_suspend, stm32_adc_runtime_resume,
>  			   NULL)
>  };

