Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:37:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 38B99580380;
	Mon, 10 Dec 2018 05:13:25 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 05:13:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AN30jrBbIVkoKyiu57l3U/Nf/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci4bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM3/mHZhNJtgqxYrhKuqABwzJPWb46bL/p+ZqHQcMgGRWZdRMtdSzBND5mi?=
 =?us-ascii?q?Y4YJEuEPPfxYr474p1YWsxa+BROsBOL0yj9UgX/206M63Po7EQrb0gIvBdYOsH?=
 =?us-ascii?q?DJp9jyKKgSUfq1zKjTzTXfaPNW1zn955bSchw7vP6DR7Zwcc7KxEY1DQPFi0+c?=
 =?us-ascii?q?ppDiPzOQz+kAtXWQ4el4Ve+3lWIrtwV8riKyysoilIXFnJ8Zx1PY+SljwYs4J8?=
 =?us-ascii?q?W0RFBmbdOmCpdcqi6XO5dsTs8/X21kpTw2x78atZO9YSME0o4oxwTFZPyCa4WI?=
 =?us-ascii?q?4gzsVOKWITpgmnJld6ywhwyo/Uij1OL8TM+030hOriZfldnMrH8N2wTS6siBVP?=
 =?us-ascii?q?R94l+s1SiT2w3X8O1IPE45mbTBJ5I8wbM8ioAfvEXBEyPunUX5lq6WdkEq+uiy?=
 =?us-ascii?q?7OTnZ63rppudN49ylwH/Pb0ims+hDuQiNAgBQWyb9f271Lzt+032Xq9Kg+Yokq?=
 =?us-ascii?q?nWrp/aP94Xpq2nDA9P1IYs9RK/Ay2h0NQCknkLNEhFdw6fj4j1J1HOJ+j1DfO+?=
 =?us-ascii?q?g1Svjjhn3f/HPqD6D5XJL3jDlqrhfLln505dzgoz0c5Q55ZOBr4dJ/LzX1f7tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc191owEWGKPHrWWMKTIvV+I++IgOe+MZIAOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWAUT5UeXm+Ra?=
 =?us-ascii?q?E85jY9CIKgCofOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIsV5iDwL?=
 =?us-ascii?q?SaChS5M91RGprAL10aFnLurT+i0br57jzsJ65+/ImBE29Dx0Cdmd0m6XQ2F1mG?=
 =?us-ascii?q?MIWyE53KRlrUNhzVeD1LByg+ZEGtxL+/NJTgA6OIbfz+NgDdD+QAbBftaTR1ag?=
 =?us-ascii?q?TdWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QpX9FANXO4iaJl9wjcHYjJk16HmKascqgc2C3N9GKHzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYJhfydTvMT2a4EuCchqjluAFaxxdXWC8CEpwpgeqVcbs?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?bymX3ZTuNbzYNGbz/AqjZLXL2l7DytmW/KQP6PMmq1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svz7CxtIlHvcqxgyhftdf?=
 =?us-ascii?q?KqyEEgDyHtYeB8ivLuwqhleoYggFPOBU6K47Iceme+Ga166sOeZqhCimgnhf4I?=
 =?us-ascii?q?BhzkKM8DJxSvTJ35kZ2f6YxBaIVzDmgFenrM/3g4FEaSgOEWWlzSjrGZBeZrd1?=
 =?us-ascii?q?fYYNEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?Bzkzwxrquf3TbCwuT4eBocJ25LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe8xP54kysSVUU+S8ZkqWSqXnrBsZ0CPjHm?=
 =?us-ascii?q?1eyy49dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpbDqO++UHitVp9ScSnt1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk6Mp1AIB+npEwhJENw3cagJqV8GEDkWfy?=
 =?us-ascii?q?N9VbxK3/YGAMRT4N397a/gzl1Fd/IXKOwoLzTm+dzdd5Z9mmfmMW3Tow78VLCK?=
 =?us-ascii?q?eX9rNIhyV0rUSjrQLNf/d9hCwSxuU06H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhZpciGipw4t9+MV3W1n3z95rkeM?=
 =?us-ascii?q?LRbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOzLufcwT/TXtjbtEksaSwoCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQZz89tRByDK0xEmgwUQC82np0kFgCp2czh?=
 =?us-ascii?q?dl125isK6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSNK2ycegRIFHwJVVaCB1z5Jbmu4t/A8+eDC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXly3Tbs6bpxS8+ixtos?=
 =?us-ascii?q?C86vTrXw3v6pWVC7tPKtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMUcT5zO9BS760i3ghBI8rbitLu2758j/41DUpFVF?=
 =?us-ascii?q?P7lsGoY8wKP3+yNFfdCEmXM7SGICXBw9vrbqOkVb1QkOJUugWsuTaaFk/vJCiM?=
 =?us-ascii?q?myP1WBCvL+5MijqWPBhfuIG7bxZsBnLvTNPgah2nLtB3iSc6zqEzhnPPLWQcKy?=
 =?us-ascii?q?Rzc1tRrr2M6iNVmvV+FHZH7npgLOmEnT6W7ujYKpkMt/trDT95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiA1JyrWNTiYSE+0VrPv/x5IVNH33D+VQG6z?=
 =?us-ascii?q?a+ERMP8vBlENz0p6dexNXV3I76LDMKp9nU58oHG8/aJs+ddnYoNR7BESTRSgAC?=
 =?us-ascii?q?SGj4Zinkm0VBnaTKpTWupZ8gp820lQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAfZQ5ch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeME1+LMIINFJc9gXEuEwGHbSI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpL4I2IoJlAQIDAQIkEz8GCQEBChgJJQMMBVwFgxyCAgQBp?=
 =?us-ascii?q?gQzih+MIYFXP4QjhEqBBIUOAqB1BwKCIQSPHyORPZp2gg5NI1CCbIInF44ePgE?=
 =?us-ascii?q?BMYEFAQGJfIJNAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAfZQ5ch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeME1+LMIINFJc9gXEuEwGHbSI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpL4I2IoJlAQIDAQIkEz8GCQEBChgJJQMMBVwFgxyCAgQBpgQzih+MIYFXP4Q?=
 =?us-ascii?q?jhEqBBIUOAqB1BwKCIQSPHyORPZp2gg5NI1CCbIInF44ePgEBMYEFAQGJfIJNA?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="141475689"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 05:13:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727106AbeLJNNU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 08:13:20 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:53674 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726209AbeLJNNU (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 08:13:20 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 1561E15AB;
        Mon, 10 Dec 2018 05:13:20 -0800 (PST)
Received: from localhost (e113682-lin.copenhagen.arm.com [10.32.144.41])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 7A3DC3F575;
        Mon, 10 Dec 2018 05:13:19 -0800 (PST)
Date: Mon, 10 Dec 2018 14:13:17 +0100
From: Christoffer Dall <christoffer.dall@arm.com>
To: peng.hao2@zte.com.cn
Cc: drjones@redhat.com, marc.zyngier@arm.com,
        kvmarm@lists.cs.columbia.edu, linux-arm-kernel@lists.infradead.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] kvm/arm: return 0 when the number of objects is not
 lessthan min
Message-ID: <20181210131317.GP30263@e113682-lin.lund.arm.com>
References: <20181205083236.5tzhnxfhi4h4nknn@kamzik.brq.redhat.com>
 <201812060956304771332@zte.com.cn>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <201812060956304771332@zte.com.cn>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 06, 2018 at 09:56:30AM +0800, peng.hao2@zte.com.cn wrote:
> >On Wed, Dec 05, 2018 at 09:15:51AM +0800, Peng Hao wrote:
> >> Return 0 when there is enough kvm_mmu_memory_cache object.
> >>
> >> Signed-off-by: Peng Hao <peng.hao2@zte.com.cn>
> >> ---
> >>  virt/kvm/arm/mmu.c | 2 +-
> >>  1 file changed, 1 insertion(+), 1 deletion(-)
> >>
> >> diff --git a/virt/kvm/arm/mmu.c b/virt/kvm/arm/mmu.c
> >> index ed162a6..fcda0ce 100644
> >> --- a/virt/kvm/arm/mmu.c
> >> +++ b/virt/kvm/arm/mmu.c
> >> @@ -127,7 +127,7 @@ static int mmu_topup_memory_cache(struct kvm_mmu_memory_cache *cache,
> >>      while (cache->nobjs < max) {
> >>          page = (void *)__get_free_page(PGALLOC_GFP);
> >>          if (!page)
> >> -            return -ENOMEM;
> >> +            return cache->nobjs >= min ? 0 : -ENOMEM;
> >
> >This condition will never be true here, as the exact same condition is
> >already checked above, and if it had been true, then we wouldn't be here.
> >
> >What problem are you attempting to solve?
> >
> if (cache->nobjs >= min)                      ------here cache->nobjs<min,it can continue downward 
>      return 0;
> while (cache->nobjs < max) {
>     page = (void *)__get_free_page(PGALLOC_GFP);
>     if (!page)
>        return -ENOMEM;                         -----here it is possible that  (cache->nobjs >= min) and (cache->nobjs<max)
>     cache->objects[cache->nobjs++] = page; ---here cache->nobjs increasing
>   }
> 
> I just think the logic of this function is to return 0 as long as (cache->nobjs >= min).
> thanks.

That's not the intention, nor is it on any of the other architectures
implementing the same thing (this one goes on the list of stuff we
should be sharing between architectures).

The idea is that you fill up the cache when it goes below min, and you
are always able to fill up to max.

If you're not able to fill up to max, then your system is seriously low
on memory and continuing to run this VM is not likely to be a good idea,
so you might as well tell user space to do something now instead of
waiting until the situation is even worse.


Thanks,

    Christoffer
