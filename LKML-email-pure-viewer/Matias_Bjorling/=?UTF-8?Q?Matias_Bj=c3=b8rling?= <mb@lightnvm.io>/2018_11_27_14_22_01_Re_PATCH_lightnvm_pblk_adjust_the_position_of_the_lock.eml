Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 22:24:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1DED35803C2;
	Tue, 27 Nov 2018 06:22:12 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 06:22:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+ooc0hYrzf3xvn901S1ds6j/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci/YR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM37X/ZisJwgqxYrhyuqRNwzIzIb4+aL/p+ZqHQcMgGRWdDRMtdSzBND428?=
 =?us-ascii?q?YoYJEuEPPfxYr474p1YWqhWxHxWsBOL1xT9TnnD7wK86y/w7EQHC3QwgGd0Ou2?=
 =?us-ascii?q?nTodXwL6gfSuS1zKjHzTXDc/NW3yn96I3SfhAgpvGBRLR9etffx0koEgPKlFSQ?=
 =?us-ascii?q?qYr9MjONzesNt2ub4/N8WuKokW4otRt9rSShx8oql4LHhZoVx0ja+SllxIs5P8?=
 =?us-ascii?q?C0RUBlbdK+DZddtD2WO5F3T84gW21lvCY3xqcbtZO6fSUG0pcqywDFZ/GGcoWF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTte00FlUoSpfiNXMtW4C1wbV6seZTv?=
 =?us-ascii?q?tx5ECh2SyA1wzL6+FEJ147lbbDJpI/3rI9koAfvVnNEyPogkn6kaybelk+9uWp?=
 =?us-ascii?q?6enrerDmqYWdN49whAH+KKMumsmnDOQ8MwgOWXWb+Oul2L3g40L5WrNKgeMykq?=
 =?us-ascii?q?XAt5DbK8IbqbCjAwJOzIYj5AiwDy283NQbg3YHNlRFdwyDj4TzPFHOOv/4Ae+l?=
 =?us-ascii?q?g1uwiDdr2+zGPrr5D5XJL3jDk6nucaxy6k5B0wczydFf55RJCrAOOv7zW0nxtM?=
 =?us-ascii?q?DGAR89KQC73+HnCNBl3IMERW2PGrOZML/VsVKQ5uIgOeiMZJMPtzb6MfQl5+Pu?=
 =?us-ascii?q?gmU/mV8SZqSp2ZoXaHalHvVpOUmZYHzsgssfHmcOpAYxUOvqiFiaWz5Je3myR7?=
 =?us-ascii?q?485i08CI++D4fDQZ6ijKaC3Ce8GJ1WYGdGB0uIEXfpcYWERvgNZDiTIs9njjwL?=
 =?us-ascii?q?S7yhR5U92hGpsQ/w06BnIfbM+i0EqZLj08B46PfIlREy8jx0DN6R03uXQGF2hW?=
 =?us-ascii?q?4IQz423KZioU1y0FuD0K54g+BGGtxX/f9GTgA6NZvExexgF9/yQh7BfsuOSFu+?=
 =?us-ascii?q?QdWpGzcxQsg1w98PeUl9HdqigwvH3yqrBb8VirOKCIY18qLaw3j+OcJ9x2za26?=
 =?us-ascii?q?kmilksWtFPOnG+hq5j6wjTAJbEnFiDmKa0a6sQxi7N+32FzWqVok5YVgl8UaHG?=
 =?us-ascii?q?XXAaYkvbttD55kLET7+zBrUrKApBycieKqRUbt3ll0lJRPDmON7GeWK+h3+wBQ?=
 =?us-ascii?q?qUxrOLdIflZn8S3DvDB0QekwAc53CGNRMgCSenuG/eCD1uFVTyY0Lj6+V+qXW7?=
 =?us-ascii?q?TlMqwAGOdUFuy721+hsNj/yGV/wTxq4EuDsmqzhsAFa93tfWC92cpwphfKRQe8?=
 =?us-ascii?q?897E1A1WLDswx9P5qgL695i14acgR3uV7u1hptBoVBl8gqsG0lzA5oJa2E11NB?=
 =?us-ascii?q?ciuS3YrsNb3PNmny4BevZrbM1VHaztmX9bkA6fQip1r4oQGmC1At83Nk09lSzX?=
 =?us-ascii?q?uR/ZHKDAsUUZLsXUc77Rl6p7fGYiYj44PYz2FjMa6xsjXawdImGPMlygq8f9dY?=
 =?us-ascii?q?KK6FFBLyH9cGCMS0Ke0qm0KmbhQLPO1J8K40PsWmd+aJ2aKxPeZgmi6mgnpD4I?=
 =?us-ascii?q?xnzk2M8C98QPbS35kZ2/GYwheHVzDkgVe7s8D4hZpLZSsPEWq40yTkApBeZrdz?=
 =?us-ascii?q?fYoSFWihOcm3ychgiJ73XH5Y8kWuB1cH2M+vZBqTYEbx3QxW1UQLv3OnnTG0wC?=
 =?us-ascii?q?BzkzEstqCfxjDBw/z+dBobPW5GXGljjVb2LYm0ldwaR1Wobw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b/oxQAySPjHG?=
 =?us-ascii?q?hexDchezGxoJr5nB96iGObLHltqnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6BtDG05WpwDR29nvCznMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpaV8mAGkWvp?=
 =?us-ascii?q?MdVbxLjxbHwCRTMQx97V4Q7l2FBsL36TxoL5UGmdzdVlZ9WgfmwW3Sc95dhQCK?=
 =?us-ascii?q?iI9LxEgTd1ol2goALUYPh9nS0SxeEg6XEEmOEJpBQizj+GDb8MB0lYMjfhlxCJ?=
 =?us-ascii?q?79C4saVWa3yjcbm21Epig9+hCKuOrR1bWHb8Yp0iBzN/7t1jMFLQ133+8p3keN?=
 =?us-ascii?q?7Vbd4JtxybiRHAj/VOKJIql/oHni5nOWP7vX04xO83lx1u3ZemvIeZL2Vh5r62?=
 =?us-ascii?q?AhldNjftfcMc5intjbpCnsaRx42gBY9uGjIPXJv1V/6oFC8SuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03npwjGQCv2sPh?=
 =?us-ascii?q?a1115iwL6l77txtMyf9oNx/lXWfEvwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137Priu4sTA8/GFBuWkKfvCe66OqetYV/eH?=
 =?us-ascii?q?3p+v1opm/zCRNsSAJHViDvs72lZdUnB9AcjWhzIPSykPnSLXc8GbvAu8+jFwrs?=
 =?us-ascii?q?2n8PTkRgPv5YiMC7tTK9lv+Aq2gaCMN+GOniZ5NC1Y24gIxX/JzrgfwVEThztv?=
 =?us-ascii?q?dzmrDbQPqyrNQLjMla9QCh4RczlzO9dQ76IgwglNPtbWhcno1rFjlP46FVdEWU?=
 =?us-ascii?q?blmsGofsEKJ2C9NFXaBEeELriGJDvLw93pbqO4U7FfkOJUtxioszaBD0DjJiiD?=
 =?us-ascii?q?lyXuVx23LeFMjSSbMAZCt42nbhltCXbsTNT9Zx2/Md93iyA2wLIuinPLM24cLS?=
 =?us-ascii?q?Zzc0dXorKM6iNYh+11G3Zd4Xp9MemEhyGZ4vHYK5kMt/trByV0l+RC73U7y7ta?=
 =?us-ascii?q?9idERPNulSvWr95upUymk+aVxjpmVhpOtihEhIaRsUp+PqXZ88oIZXGR/hsT7G?=
 =?us-ascii?q?iKIx8MqsthA9f0/atXz5yHj7/zNT4E79vS/sY0CM3dKcbBO30kYjTzHzuBKQIZ?=
 =?us-ascii?q?TDewAkvdF1ZZkfedvimQpLA+q5fshJwQT/laUwpmRbshFk15EYlac99MVTQ+nO?=
 =?us-ascii?q?vDgQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACoUv1bh0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJsfyeMEY4UFIh7jjGBJANMEgEBGBMBiHkiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYigmQBAQEBAgEBAiQRCAEBNwEFCQEBChguAx4TA?=
 =?us-ascii?q?QUBHAcMBgIBAQGDHIFqAw0IBAGZRTyKHYFsM4J2AQEFgkOCQg2BDx5nCBKKX4E?=
 =?us-ascii?q?cF4FAP4E4gmuCV4gFj2WPey4JjgSDJh6JUhCHKY5QiUACBAIEBQIFDyGBJYINe?=
 =?us-ascii?q?Qw7gmyCGwwXg0qKVD8yAYEEAQGNagEB?=
X-IPAS-Result: =?us-ascii?q?A0ADAACoUv1bh0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJsfyeMEY4UFIh7jjGBJANMEgEBGBMBiHkiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYigmQBAQEBAgEBAiQRCAEBNwEFCQEBChguAx4TAQUBHAcMBgIBAQG?=
 =?us-ascii?q?DHIFqAw0IBAGZRTyKHYFsM4J2AQEFgkOCQg2BDx5nCBKKX4EcF4FAP4E4gmuCV?=
 =?us-ascii?q?4gFj2WPey4JjgSDJh6JUhCHKY5QiUACBAIEBQIFDyGBJYINeQw7gmyCGwwXg0q?=
 =?us-ascii?q?KVD8yAYEEAQGNagEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="64169925"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 27 Nov 2018 06:22:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728101AbeK1BUK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 20:20:10 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:33799 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726417AbeK1BUK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 20:20:10 -0500
Received: by mail-lj1-f196.google.com with SMTP id u6-v6so20209592ljd.1
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 06:22:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=lightnvm-io.20150623.gappssmtp.com; s=20150623;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=vsMTG1GlyfgjNQeIjQBRUaW+k2MHzv5C2e2Hf7Pp9iU=;
        b=hcRgMb2cJU4dsvlcbj2cAMTJru0tzWpK8LXeLJxUsdEh+DG/YBUuhu4FBZ3nahJpDi
         SlUxsQHJIJ6C3D7j0b/mThLO7vulYvF2xeG2HM4fIOSajXFlQiUw4ZmlPB/zqYH5Yktr
         bUVtfQpLbzAzs7taAkqD2K/jZ5+59HFVBcBiW5ozpDLscTuXyBGJpdyfsaN1hto2tuRM
         LXkvAIXtSWoSbuUWxUb8EFRUm5ZE6ZGgCclK7Nct19B3E6cwtEaMG3WTqAa+ptXMduOd
         BUnJPrHNWPmK0uTP+z24Cnb8sp2ztU0ecWZZeObnTDc8pOtwmGRX9RtOIS/specn7/fn
         Ct8A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=vsMTG1GlyfgjNQeIjQBRUaW+k2MHzv5C2e2Hf7Pp9iU=;
        b=sDkVm2wPExsWiWFvtaho/6GR8JRj/6njM4ObL97qcm/3Az8Fgf1k77FjRWSmfHoSe9
         DPeR6/6USmlP/pp5I95DYozs0HFIKgMB/SFg2WwLcApCpjVa+qBHjp5bVid5P4czX15z
         DfB48/Npi7VpN1VBacuDEyFF7CnuBXdCxb8g4ZfeWcWWxcNyPudHtCFDc1ymfPX3NfRZ
         Q2Pq1IoqerpEkMrljUzkgM+/FbvF2iTysw+f/j4d16Nw7xfG9s6ZTNtF3rb9/kmFHHWA
         xQHYDaUhMTTsJkbrO3VVWwMTEKU1gbeOlzl1wu0tOKFEoeuDzAiP3wFWnJVSJbrrzXd2
         WSBA==
X-Gm-Message-State: AA+aEWanDbcgKzA0aa62mB0uvcBEwUTZTFe2JOPkhhXJkl5PFN0Bo6GL
        azQz1LtHX+j8JzD9bVkT/HQAl8EOLYs=
X-Google-Smtp-Source: AFSGD/XjJMiKWCc4RxTZp0UhG916aQK7pKcigYgtziS9Bz2KFND136V0/14YGaxj+NEfQHLidEuTXA==
X-Received: by 2002:a2e:458b:: with SMTP id s133-v6mr19551929lja.170.1543328523665;
        Tue, 27 Nov 2018 06:22:03 -0800 (PST)
Received: from [192.168.0.36] (95-166-82-66-cable.dk.customer.tdc.net. [95.166.82.66])
        by smtp.googlemail.com with ESMTPSA id y131sm615566lfc.43.2018.11.27.06.22.02
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 27 Nov 2018 06:22:02 -0800 (PST)
Subject: Re: [PATCH] lightnvm: pblk: adjust the position of the lock
To: javier@cnexlabs.com, suhua.tanke@gmail.com
Cc: axboe@kernel.dk, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <20181127015309.2374-1-suhua.tanke@gmail.com>
 <F75BC3C7-FACE-4C04-A9BE-5A3AA25D3466@cnexlabs.com>
From: =?UTF-8?Q?Matias_Bj=c3=b8rling?= <mb@lightnvm.io>
Message-ID: <a53eb78d-90d3-f84e-a0bf-9acbc32671f4@lightnvm.io>
Date: Tue, 27 Nov 2018 15:22:01 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <F75BC3C7-FACE-4C04-A9BE-5A3AA25D3466@cnexlabs.com>
Content-Type: text/plain; charset=windows-1252; format=flowed
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/27/2018 01:57 PM, Javier Gonzalez wrote:
> 
>> On 27 Nov 2018, at 02.53, Hua Su <suhua.tanke@gmail.com> wrote:
>>
>> Add lock protection for list operations.
>> Signed-off-by: Hua Su <suhua.tanke@gmail.com>
>> ---
>> drivers/lightnvm/pblk-core.c | 17 ++++++++++-------
>> 1 file changed, 10 insertions(+), 7 deletions(-)
>>
>> diff --git a/drivers/lightnvm/pblk-core.c b/drivers/lightnvm/pblk-core.c
>> index 6944aac43b01..e490df217dac 100644
>> --- a/drivers/lightnvm/pblk-core.c
>> +++ b/drivers/lightnvm/pblk-core.c
>> @@ -1286,24 +1286,27 @@ int pblk_line_recov_alloc(struct pblk *pblk, struct pblk_line *line)
>> 	list_del(&line->list);
>>
>> 	ret = pblk_line_prepare(pblk, line);
>> -	if (ret) {
>> -		list_add(&line->list, &l_mg->free_list);
>> -		spin_unlock(&l_mg->free_lock);
>> -		return ret;
>> -	}
>> -	spin_unlock(&l_mg->free_lock);
>> +	if (ret)
>> +		goto out;
>>
>> 	ret = pblk_line_alloc_bitmaps(pblk, line);
>> 	if (ret)
>> -		return ret;
>> +		goto out;
>>
>> 	if (!pblk_line_init_bb(pblk, line, 0)) {
>> 		list_add(&line->list, &l_mg->free_list);
>> +		spin_unlock(&l_mg->free_lock);
>> 		return -EINTR;
>> 	}
>> +	spin_unlock(&l_mg->free_lock);
>>
>> 	pblk_rl_free_lines_dec(&pblk->rl, line, true);
>> 	return 0;
>> +
>> +out:
>> +	list_add(&line->list, &l_mg->free_list);
>> +	spin_unlock(&l_mg->free_lock);
>> +	return ret;
>> }
>>
>> void pblk_line_recov_close(struct pblk *pblk, struct pblk_line *line)
>> --
>> 2.19.1
> 
> This path is only touched by the recovery path, which is single
> threaded, so there is no race condition as is. Also, if recovery fails,
> pblk will not create the instance at all. This said, it would be
> good to protect the list_add on the pblk_line_init_bb() error path in
> case this code is used for some other purpose in the future.

I like your explanation here. Another option is that we could add a 
comment to notify the developer that it safe in this context?

> 
> However, the implementation you propose has some issues due to the
> extended critical zone, which covers pblk_line_alloc_bitmaps(). Here,
> allocations are intentionally non-atomic (i.e., GFP_KERNEL).
> 
> You can instead do the following:
> 
> diff --git i/drivers/lightnvm/pblk-core.c w/drivers/lightnvm/pblk-core.c
> index 615817bf97e3..02c4c1708c45 100644
> --- i/drivers/lightnvm/pblk-core.c
> +++ w/drivers/lightnvm/pblk-core.c
> @@ -1301,15 +1301,22 @@ int pblk_line_recov_alloc(struct pblk *pblk, struct pblk_line *line)
> 
>          ret = pblk_line_alloc_bitmaps(pblk, line);
>          if (ret)
> -               return ret;
> +               goto fail;
> 
>          if (!pblk_line_init_bb(pblk, line, 0)) {
> -               list_add(&line->list, &l_mg->free_list);
> -               return -EINTR;
> +               ret = -EINTR;
> +               goto fail;
>          }
> 
>          pblk_rl_free_lines_dec(&pblk->rl, line, true);
>          return 0;
> +
> +fail:
> +       spin_lock(&l_mg->free_lock);
> +       list_add(&line->list, &l_mg->free_list);
> +       spin_unlock(&l_mg->free_lock);
> +
> +       return ret;
>   }
> 
>   void pblk_line_recov_close(struct pblk *pblk, struct pblk_line *line)
> 
> Javier
> 
> 

