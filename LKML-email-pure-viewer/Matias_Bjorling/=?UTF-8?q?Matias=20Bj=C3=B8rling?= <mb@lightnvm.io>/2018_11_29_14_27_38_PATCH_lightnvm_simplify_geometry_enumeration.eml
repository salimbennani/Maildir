Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:46:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AF0CE5802E4;
	Thu, 29 Nov 2018 07:19:35 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:19:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AYBbQwB1fckf3gsr+smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSLvjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zict+g61HrxyuvBx/24zZbZqJNPd9ZK7RYckXSXZDU8tXSidPApm8?=
 =?us-ascii?q?b4wKD+cZOuhXtZX9p1oUohulGAKhGeHv0idShn/y3K061eshGhzB0QwlBN0Dq3?=
 =?us-ascii?q?DUrNT6NKcSTeC1yrfIzTDZY/NX3jfw8Y7FeQ0ir/GURb98b9bdxE01Gw/YgFic?=
 =?us-ascii?q?t5bpMy6W2+gRqWSW7uhtWfqrhmMnsQ19vzmiy8Y2hoTKmI4Z0FHJ+CR/zY0oP9?=
 =?us-ascii?q?O3UlR7bsShEJZItyGVKY92QsQ6TmF2tyY11KcGtYS4fCcU0pQnwQDQa/idf4iP?=
 =?us-ascii?q?+BLjW/6dITZ+hH17ZLKynwi+/VSkx+HmS8W53khGojBYntTPqnwBzR3e58qfRv?=
 =?us-ascii?q?t45Eih2DKP1w7J6uFDJEA5ja7bK58nwr4tmZsfqEfDETHsmEXwkqCWclwo+u+m?=
 =?us-ascii?q?6uThfLrmvISRN5F7ig7gKKQigM+/DvoiMggIQWeb/f6w1Lr5/U32WLlKlOE5kr?=
 =?us-ascii?q?HFsJDGIsQWvqq5Aw5W0ok98Rq+ACqm3c8cnXkGKlJFZR2Gg5LoO1HIPPD3E/O/?=
 =?us-ascii?q?j06wnzdswvDMJqfhDYnVLnjfjLfheq5w605Gxwoy0dBQ/ZVUBqsBIPLuQEDxst?=
 =?us-ascii?q?PYAwQ9Mwy1xebnFdp82pkfWWKJHq+WLqfSvUWU6eIoJumGfJUVtyrlK/g5+/7u?=
 =?us-ascii?q?imc0mV0afaa3x5cXa3e4HvJgI0WeenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIe+B4fZWo+tmKCB3Du8HpBOfG9GEVCMEXDrd4meQfcDciCSL9RlkjwF?=
 =?us-ascii?q?U7ihVoAg2QuvtA/817poMO7U9jcEupLk0dh///fTmg0q9TxoE8Sd1HmAT2JukW?=
 =?us-ascii?q?MOXTM22KF/rlZ7yleMyqV4h/1YFdpO5/JGSAs6NJjcz/BkBND2QA7OYtCJSFO+?=
 =?us-ascii?q?SNW8HT4xVs4xw8MJY0tlBtqtlA7D0DSwD78VjbOLAoc0/bza33T2I8Z9yHPG1K?=
 =?us-ascii?q?06glkiQ8tPM3Cmh6Fl+wjSAY7Jj1uWl6KweasA2y7N8X+JzXCSs0FATA5wTaLF?=
 =?us-ascii?q?UGgCaUTMs9T2+FnOT7+0BrQhKQtO18iCJ7BOat3oi1VGWfjiNM7fY2K3h2e/Gx?=
 =?us-ascii?q?KIyqmQY4rtfmUXxD/dB1QckwAP4XaGMhAzBjugo2LbCzxuCVLvYkP2/elisn+7?=
 =?us-ascii?q?SVU0zwWLb01n2Lq44RoVhf2aS/MO0bMIoiYhqzNoHFmj29LaEcaPpw1kfK9Ee9?=
 =?us-ascii?q?My/E9H1X7Ftwx6JpGvNaRiiUARcgtpv0LizQ54CphdnscwqnMqzw1yKbyD3VNF?=
 =?us-ascii?q?djOY243wO7LNJmnz+hCvd7DZ2lXE3NmK/acP7ewyq0//swGxCkoi73Jn3sFV0n?=
 =?us-ascii?q?uB/JnFEBAeUJPxUkkt8Rh6qKrXYi0854PSyH1tPrO4sj7E29I1GuQlzgyscMtY?=
 =?us-ascii?q?MKOBDAXyCdEVB9CyKOw2nFikdggEPOFO+6EuJcOpavyG1LStPOl+hjKmjH1L75?=
 =?us-ascii?q?xn3UKI6iVzVPTI35EDw/yD2guHVjH8jEqus8ztmIBEYy0SEXS7yST+GIFRYahy?=
 =?us-ascii?q?d54RCWiyO8232sl+h5n1Vn9Y9V6vHVMH1NWyeRqPaVzwxglQ1UURoXy6liq01T?=
 =?us-ascii?q?10kzc1rqWB2CzC2fjtdB0COmRTXmltkU/sIZSoj9AdREWobRImlAGm5Ub5wKhX?=
 =?us-ascii?q?vr9/IHPQQUdLfij2KX9tUq2ru7qGYs5P7o4osCpNXOS9Z1CaVqDyox8A3yz/GG?=
 =?us-ascii?q?tewSgxdyu2tZXhgxx6lGWdIW5zrXXDfsF83xXf5N3aRfNK2joGRS94iSTYB1Sm?=
 =?us-ascii?q?Ptmp+8mUmInHsuykS22hUZhTezHxzYycrCu7+XFqARqnkvCwgNLnEBI20S/m19?=
 =?us-ascii?q?ZwUyXIow3xYo3q16S8LOJmcVNkBF7668pmBI5+lpE8i40X2Xgfnp+V52YIkX/v?=
 =?us-ascii?q?MdVH3qLzdH8NRT8Iw9HP+gTk1lNsLmmVx43nTHWS2dVuZ8O1Ym4N3iI97sZKCL?=
 =?us-ascii?q?qb7bBenCt1pEa4ohzVYfRngjgdzv4u4mYAg+4VoAot0jmdArcKEElEOizskg6E?=
 =?us-ascii?q?7tGko6VReWavaqOw1EtlkNClDbGCpBxcWXnjdpcjGy9w8ttwMFbW3HLv7YHkfc?=
 =?us-ascii?q?HabcgPuR2MjxfAk+9VJYoqmfUQgipnPX/9sWchy+4mlhFu2ZC6vI6aK2Ri5q65?=
 =?us-ascii?q?AxhYNiHraMMX4D3ikaFensOO1YC1ApphAikLXIfvTf+wEjIdr/HnOBiVEDEmtn?=
 =?us-ascii?q?eXA7nfHRKc6Ed7qXLACYurOmqTJHkYy9ViWRacKFZegAASQDU1gJo5Ghq2y8zm?=
 =?us-ascii?q?dUdz/ioR6ULgqhtQ1uJoMAHyU2fYpAe1czc0VYKQLBxM4gFZ4EfVN8Oe4/l3Hy?=
 =?us-ascii?q?FZ+J2hsQOMJnaaZwROEWEGREiEC0r/Mbmp4NnK6/KYCfamL/vSfbWOrvRTV/eW?=
 =?us-ascii?q?ypKu0Ytm/DeMOt+MPnl4CP071VRMXWpkG8TCgDgPTy0XlyTQb8+Uvhu8+yt3rt?=
 =?us-ascii?q?yh//TvQg7g+YyPC75KO9V15x+2mbuDN/KXhCthMzlYy4gDxWXWx7kfxlISjyBu?=
 =?us-ascii?q?eiKpEbQBsy7NUa3RlrVWDx4ddyN8Ks9I47gg0QlKPM7Rksn12aJgjv4pF1dFUk?=
 =?us-ascii?q?Tsmt2oZcwPOW2yKEnLC1qLNLuYIz3G2MX3YaK6Sb1Ng+RYrRywuTCHE0D9OjSP?=
 =?us-ascii?q?jSXmVxeqMetUliGUIAReuJ2hchZqEWXiTMjpahu+MN92iz052bw1hnPQOm4aPj?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsagjPiMhlu1d+jI4jbhS?=
 =?us-ascii?q?6iZcR/tdmS3Oo9ooqFaj1qGKwyBsURwIpiRKiY2KsEFvJr7a97FBX2rJ+FQG6m?=
 =?us-ascii?q?DUQxYDudpoEPXkva1AztHFj+T4LzIR3cjT+J45DtTVIdnPGnixKx7oHjGcWA4P?=
 =?us-ascii?q?ZTqqOmHDgVJY1vCVoC7G5qMmo4ThzcJdAoRQU0Y4Q6sX?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AbAAC0AgBch0O0hNFaChwBAQEEAQEHB?=
 =?us-ascii?q?AEBgVIGAQELAYNrJ4N5iHeLKYIhlzCBJANMEgEBGBMBh3QiNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYigmwCIAQLAQ0BATcBBQkCJAIYDgICAzEBBQEjEgWDH?=
 =?us-ascii?q?IICBAGaUDyKHXB8M4J2AQEFhiEeZwgSeYZggw+BHBeBQD+IeYMvgleJLYV7kH0?=
 =?us-ascii?q?JkScjgVqHfjaHDQGIeI8vAgQCBAUCBQ8hgScBggp5DDuCbIIbDBeDSopUPzIBg?=
 =?us-ascii?q?QQBAY06AQE?=
X-IPAS-Result: =?us-ascii?q?A0AbAAC0AgBch0O0hNFaChwBAQEEAQEHBAEBgVIGAQELAYN?=
 =?us-ascii?q?rJ4N5iHeLKYIhlzCBJANMEgEBGBMBh3QiNQgNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYigmwCIAQLAQ0BATcBBQkCJAIYDgICAzEBBQEjEgWDHIICBAGaUDyKHXB?=
 =?us-ascii?q?8M4J2AQEFhiEeZwgSeYZggw+BHBeBQD+IeYMvgleJLYV7kH0JkScjgVqHfjaHD?=
 =?us-ascii?q?QGIeI8vAgQCBAUCBQ8hgScBggp5DDuCbIIbDBeDSopUPzIBgQQBAY06AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="53158906"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 07:19:34 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387941AbeK3Bdj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 20:33:39 -0500
Received: from mail-lf1-f66.google.com ([209.85.167.66]:44806 "EHLO
        mail-lf1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2387917AbeK3Bdi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 20:33:38 -0500
Received: by mail-lf1-f66.google.com with SMTP id z13so1565398lfe.11
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 06:28:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=lightnvm-io.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=v4vz3sbNBH1XzX3GydMDty1pB9dgsxmbyenTp4UEM2g=;
        b=01nhtLSOQ7vb/NXRZVxVKtSkqCHTXr9/A4oQQPr9J9b6WQHNmBDdmdUK0gcHChQAYw
         pWV43ZPZeUtkTT7voJGB19uuIhcc9XipCB4oLE3oNO0QY5T8UxIJxwBYrAIYxGlsFgUC
         MMWu+DnfkCQrBpqkMqwNKhQplbJf7N6Txeyz8QGhrZVXHFPICp1gS+Gh2DFLejviIz9f
         ccifjgqEgiQeHO8GtjNtzWkeE4KT0ZcQe0GaItOSLXMr2sLni36MUYoPzVc+PXwSxnPx
         oWSoG3Zwfj+jFFoocGlziL4zoY13JCWZjLhlGRphuj0VVDDr6Wy9aonK2JPLvN/7CMIw
         dVIA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=v4vz3sbNBH1XzX3GydMDty1pB9dgsxmbyenTp4UEM2g=;
        b=gR7EfK6M0/hZEvK38qeyeCzQYxiF04/UWUDLhC+In8JVSHVIp2zll7fYC3qZOqcU+Q
         GancECGl+swKhU1EJ6oGm45h8erh2xwE7rM2RqLvF4vRhZ3XQDDSyResB6dAhrDz7liE
         Pux2NGcyaRGdj2+NTO35c2QMIq1IdPt41BpVDE1Sr4y5bHwQhiNpbXSIeHPVu9c8a19O
         mntd5TUxhuKEmAZi902nFXrLBbID980koL2x87Pgk6Q40bkqwgHZV6uayKYpu5s8aJpv
         QGYzAHbEkIDe8cbIhELJH6LAoPAjnLKpVn7IreiFjRNP4rtFlvoObXWUr0b1Q+dkBRqk
         /ijw==
X-Gm-Message-State: AA+aEWYriKsW+zroqlTORUdnuuLGii3A2Lf8j8CqmPme6jDqmOhkGgYl
        wnEjLdFzFJP2jcE48bHKseDikQ==
X-Google-Smtp-Source: AFSGD/Ub3RUnFyfDx0S48fa+hcgyMzCJcXLKW7ISdSubwlWj/q0PqXbJQjqnB/lHOdEhwYfKtr+ezQ==
X-Received: by 2002:a19:7d42:: with SMTP id y63mr1145504lfc.47.1543501684696;
        Thu, 29 Nov 2018 06:28:04 -0800 (PST)
Received: from skyninja.webspeed.dk (95-166-82-66-cable.dk.customer.tdc.net. [95.166.82.66])
        by smtp.gmail.com with ESMTPSA id c19sm326970lfg.86.2018.11.29.06.28.03
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 29 Nov 2018 06:28:03 -0800 (PST)
From: =?UTF-8?q?Matias=20Bj=C3=B8rling?= <mb@lightnvm.io>
To: igor.j.konopko@intel.com, marcin.dziegielewski@intel.com,
        javier@cnexlabs.com
Cc: linux-block@vger.kernel.org, linux-kernel@vger.kernel.org,
        keith.busch@intel.com, linux-nvme@lists.infradead.org,
        =?UTF-8?q?Matias=20Bj=C3=B8rling?= <mb@lightnvm.io>
Subject: [PATCH] lightnvm: simplify geometry enumeration
Date: Thu, 29 Nov 2018 15:27:38 +0100
Message-Id: <20181129142738.9567-1-mb@lightnvm.io>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Currently the geometry of an OCSSD is enumerated using a two step
approach:

First, nvm_register is called, the OCSSD identify command is issued,
and second the geometry sos and csecs values are read either from the
OCSSD identify if it is a 1.2 drive, or from the NVMe namespace data
structure if it is a 2.0 device.

This patch recombines it into a single step, such that nvm_register can
use the csecs and sos fields independent of which version is used. This
enables one to dynamically size the lightnvm subsystem dma pool.

Signed-off-by: Matias Bj√∏rling <mb@lightnvm.io>
---
 drivers/lightnvm/core.c      | 12 +++++-------
 drivers/nvme/host/core.c     | 18 +++++++++---------
 drivers/nvme/host/lightnvm.c | 18 ++++++------------
 drivers/nvme/host/nvme.h     |  2 --
 4 files changed, 20 insertions(+), 30 deletions(-)

diff --git a/drivers/lightnvm/core.c b/drivers/lightnvm/core.c
index 73ab3cf26868..a1d52e934ce4 100644
--- a/drivers/lightnvm/core.c
+++ b/drivers/lightnvm/core.c
@@ -1145,25 +1145,23 @@ int nvm_register(struct nvm_dev *dev)
 	if (!dev->q || !dev->ops)
 		return -EINVAL;
 
+	ret = nvm_init(dev);
+	if (ret)
+		return ret;
+
 	dev->dma_pool = dev->ops->create_dma_pool(dev, "ppalist");
 	if (!dev->dma_pool) {
 		pr_err("nvm: could not create dma pool\n");
+		nvm_free(dev);
 		return -ENOMEM;
 	}
 
-	ret = nvm_init(dev);
-	if (ret)
-		goto err_init;
-
 	/* register device with a supported media manager */
 	down_write(&nvm_lock);
 	list_add(&dev->devices, &nvm_devices);
 	up_write(&nvm_lock);
 
 	return 0;
-err_init:
-	dev->ops->destroy_dma_pool(dev->dma_pool);
-	return ret;
 }
 EXPORT_SYMBOL(nvm_register);
 
diff --git a/drivers/nvme/host/core.c b/drivers/nvme/host/core.c
index 65c42448e904..387833b37e38 100644
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@ -1516,8 +1516,6 @@ static void __nvme_revalidate_disk(struct gendisk *disk, struct nvme_id_ns *id)
 	if (ns->noiob)
 		nvme_set_chunk_size(ns);
 	nvme_update_disk_info(disk, ns, id);
-	if (ns->ndev)
-		nvme_nvm_update_nvm_info(ns);
 #ifdef CONFIG_NVME_MULTIPATH
 	if (ns->head->disk)
 		nvme_update_disk_info(ns->head->disk, ns, id);
@@ -3086,13 +3084,6 @@ static void nvme_alloc_ns(struct nvme_ctrl *ctrl, unsigned nsid)
 	nvme_setup_streams_ns(ctrl, ns);
 	nvme_set_disk_name(disk_name, ns, ctrl, &flags);
 
-	if ((ctrl->quirks & NVME_QUIRK_LIGHTNVM) && id->vs[0] == 0x1) {
-		if (nvme_nvm_register(ns, disk_name, node)) {
-			dev_warn(ctrl->device, "LightNVM init failure\n");
-			goto out_unlink_ns;
-		}
-	}
-
 	disk = alloc_disk_node(0, node);
 	if (!disk)
 		goto out_unlink_ns;
@@ -3106,6 +3097,13 @@ static void nvme_alloc_ns(struct nvme_ctrl *ctrl, unsigned nsid)
 
 	__nvme_revalidate_disk(disk, id);
 
+	if ((ctrl->quirks & NVME_QUIRK_LIGHTNVM) && id->vs[0] == 0x1) {
+		if (nvme_nvm_register(ns, disk_name, node)) {
+			dev_warn(ctrl->device, "LightNVM init failure\n");
+			goto out_put_disk;
+		}
+	}
+
 	down_write(&ctrl->namespaces_rwsem);
 	list_add_tail(&ns->list, &ctrl->namespaces);
 	up_write(&ctrl->namespaces_rwsem);
@@ -3119,6 +3117,8 @@ static void nvme_alloc_ns(struct nvme_ctrl *ctrl, unsigned nsid)
 	kfree(id);
 
 	return;
+ out_put_disk:
+	put_disk(ns->disk);
  out_unlink_ns:
 	mutex_lock(&ctrl->subsys->lock);
 	list_del_rcu(&ns->siblings);
diff --git a/drivers/nvme/host/lightnvm.c b/drivers/nvme/host/lightnvm.c
index d64805dc8efb..51d957ccf328 100644
--- a/drivers/nvme/host/lightnvm.c
+++ b/drivers/nvme/host/lightnvm.c
@@ -973,22 +973,11 @@ int nvme_nvm_ioctl(struct nvme_ns *ns, unsigned int cmd, unsigned long arg)
 	}
 }
 
-void nvme_nvm_update_nvm_info(struct nvme_ns *ns)
-{
-	struct nvm_dev *ndev = ns->ndev;
-	struct nvm_geo *geo = &ndev->geo;
-
-	if (geo->version == NVM_OCSSD_SPEC_12)
-		return;
-
-	geo->csecs = 1 << ns->lba_shift;
-	geo->sos = ns->ms;
-}
-
 int nvme_nvm_register(struct nvme_ns *ns, char *disk_name, int node)
 {
 	struct request_queue *q = ns->queue;
 	struct nvm_dev *dev;
+	struct nvm_geo *geo;
 
 	_nvme_nvm_check_size();
 
@@ -996,6 +985,11 @@ int nvme_nvm_register(struct nvme_ns *ns, char *disk_name, int node)
 	if (!dev)
 		return -ENOMEM;
 
+	/* Note that csecs and sos will be overridden if it is a 1.2 drive. */
+	geo = &dev->geo;
+	geo->csecs = 1 << ns->lba_shift;
+	geo->sos = ns->ms;
+
 	dev->q = q;
 	memcpy(dev->name, disk_name, DISK_NAME_LEN);
 	dev->ops = &nvme_nvm_dev_ops;
diff --git a/drivers/nvme/host/nvme.h b/drivers/nvme/host/nvme.h
index 9fefba039d1e..4f5399c8808b 100644
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -541,13 +541,11 @@ static inline void nvme_mpath_stop(struct nvme_ctrl *ctrl)
 #endif /* CONFIG_NVME_MULTIPATH */
 
 #ifdef CONFIG_NVM
-void nvme_nvm_update_nvm_info(struct nvme_ns *ns);
 int nvme_nvm_register(struct nvme_ns *ns, char *disk_name, int node);
 void nvme_nvm_unregister(struct nvme_ns *ns);
 extern const struct attribute_group nvme_nvm_attr_group;
 int nvme_nvm_ioctl(struct nvme_ns *ns, unsigned int cmd, unsigned long arg);
 #else
-static inline void nvme_nvm_update_nvm_info(struct nvme_ns *ns) {};
 static inline int nvme_nvm_register(struct nvme_ns *ns, char *disk_name,
 				    int node)
 {
-- 
2.17.1

