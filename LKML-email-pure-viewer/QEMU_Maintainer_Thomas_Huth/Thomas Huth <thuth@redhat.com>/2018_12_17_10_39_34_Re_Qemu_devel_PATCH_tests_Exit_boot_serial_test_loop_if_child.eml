Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:41:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 975E95805FC
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 02:40:23 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 02:40:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AocccKB2/CXsSCTAzsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMfIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXRPXshRWSxGAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIfzukMOoBm8CwSjGe/ixCNEiWHt3aAhz+QhCBvL0BA8E98Asn?=
 =?us-ascii?q?nZqsj+OqcIUeCyyanF1SvNb/NR2Tf48ofIaQ0qr/ORXbJsccra1E4iFx/FjlWN?=
 =?us-ascii?q?tYzlPyiY1v4TvGeG7+pvT/6vh3Q7pAF2pzii38EhgZTKiIIN0l3I6zl1zYUvKd?=
 =?us-ascii?q?GlVUJ2YsSoHIVeuiyaLYd6X8EvT3l2tComzrAKo4O3cSYUxJg92hLSaPKKf5KW?=
 =?us-ascii?q?7h/gUuuaPC12i2h/eL2lgha/6UigxfP4VsmzyFtKqitFksLQtnAWzRDT5c6HSu?=
 =?us-ascii?q?Zn8kemwzaP2Bjf6uBCIU8qiarWM4AtzqIzm5YJrEjPAyz7lF/ogKKYdkgo4PWk?=
 =?us-ascii?q?5ub/brXjvJCcNot0ig/kMqQpn8yyGf04PRYLX2iG4OizyaPs/VPnT7VOl/E5ia?=
 =?us-ascii?q?7ZsI3cJcsHuKG5GAhZ0oIi6xa8ETiqytsZnWQfIVJBeRKHiZXpOl7ULPD5C/e/?=
 =?us-ascii?q?n0qjkDNxy//aOb3hB47ALn7EkLfncrZ97VNcxBA0zdBF6JJYEqsBL+7rWk/tqN?=
 =?us-ascii?q?zYCQc0Mwi1w+bkFtpxzIwfWX+UD6+dMaPSt0KI5+01L+mNYo8VpCjyK/w/6/Hy?=
 =?us-ascii?q?in85nAxVQK+ywJFCaGykBu80ZAKdYGHwmZEHFmEFuBd4S/blz1iLUDpWbnD1WL?=
 =?us-ascii?q?og5zY9E8W/AILeA4ygnrGFjxq9BYBcM2VPC1SQFiXxeoCZHvsBdi+WZ9VsiyEJ?=
 =?us-ascii?q?TqSJTYgn2hez8gjgxO18M+DW9yYE4I/lz8V//ObJlBs/pgBzWv6c2GGEVW08vm?=
 =?us-ascii?q?4OSzIsx6d56Rhny1yD2LJ0xfxVE9Be/ehOVC8+NJjV1es8DMr9DEaJZ9qMVROq?=
 =?us-ascii?q?T8urBRk3SdQ+xcJIZFxySPu4iRWW4yqtBrYO35yWGJx8pr7cwmTxD9xwx3bPyO?=
 =?us-ascii?q?8qiFxwEZgHDnGvmqMqr1ubPIXOiUjM0v/yLak=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A9AACkfBdchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgTCCYoN8iHiLF4FgCCV8llyBcxQYFIRAgxQiNgcNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4vgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoYA?=
 =?us-ascii?q?gIiBAICAwFTBgEMBgIBAQGDHYF5CAEEp2x8M4oegQuLMxeBQD+BEScMgio1gUu?=
 =?us-ascii?q?DNoMIglcCiUKXVwmRVAYYgV2IFjeHKIk8kCiBTQGCBjMaCBsVgyeCJxeOHkAxg?=
 =?us-ascii?q?Qcci1yBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0A9AACkfBdchxHrdtBkHAEBAQQBAQcEAQGBUwUBAQsBgTC?=
 =?us-ascii?q?CYoN8iHiLF4FgCCV8llyBcxQYFIRAgxQiNgcNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4vgjYFAgMaAQaCWwEBAQECAQECIAQfCikDAgEBAgYBAQoYAgIiBAICAwFTBgE?=
 =?us-ascii?q?MBgIBAQGDHYF5CAEEp2x8M4oegQuLMxeBQD+BEScMgio1gUuDNoMIglcCiUKXV?=
 =?us-ascii?q?wmRVAYYgV2IFjeHKIk8kCiBTQGCBjMaCBsVgyeCJxeOHkAxgQcci1yBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="142403102"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 02:40:08 -0800
Received: from localhost ([::1]:45850 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYqJj-0007oS-Dm
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 05:40:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34029)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <thuth@redhat.com>) id 1gYqJL-0007oJ-Gc
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:39:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <thuth@redhat.com>) id 1gYqJI-0002yF-9r
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:39:43 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51908)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <thuth@redhat.com>) id 1gYqJI-0002wX-2L
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:39:40 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 95B12C0546DD;
	Mon, 17 Dec 2018 10:39:38 +0000 (UTC)
Received: from thuth.remote.csb (dhcp-200-199.str.redhat.com [10.33.200.199])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 2F9F61055007;
	Mon, 17 Dec 2018 10:39:34 +0000 (UTC)
To: Richard Henderson <richard.henderson@linaro.org>, qemu-devel@nongnu.org
References: <20181217035816.21777-1-richard.henderson@linaro.org>
From: Thomas Huth <thuth@redhat.com>
Openpgp: preference=signencrypt
Autocrypt: addr=thuth@redhat.com; keydata=
	xsFNBFH7eUwBEACzyOXKU+5Pcs6wNpKzrlJwzRl3VGZt95VCdb+FgoU9g11m7FWcOafrVRwU
	yYkTm9+7zBUc0sW5AuPGR/dp3pSLX/yFWsA/UB4nJsHqgDvDU7BImSeiTrnpMOTXb7Arw2a2
	4CflIyFqjCpfDM4MuTmzTjXq4Uov1giGE9X6viNo1pxyEpd7PanlKNnf4PqEQp06X4IgUacW
	tSGj6Gcns1bCuHV8OPWLkf4hkRnu8hdL6i60Yxz4E6TqlrpxsfYwLXgEeswPHOA6Mn4Cso9O
	0lewVYfFfsmokfAVMKWzOl1Sr0KGI5T9CpmRfAiSHpthhHWnECcJFwl72NTi6kUcUzG4se81
	O6n9d/kTj7pzTmBdfwuOZ0YUSqcqs0W+l1NcASSYZQaDoD3/SLk+nqVeCBB4OnYOGhgmIHNW
	0CwMRO/GK+20alxzk//V9GmIM2ACElbfF8+Uug3pqiHkVnKqM7W9/S1NH2qmxB6zMiJUHlTH
	gnVeZX0dgH27mzstcF786uPcdEqS0KJuxh2kk5IvUSL3Qn3ZgmgdxBMyCPciD/1cb7/Ahazr
	3ThHQXSHXkH/aDXdfLsKVuwDzHLVSkdSnZdt5HHh75/NFHxwaTlydgfHmFFwodK8y/TjyiGZ
	zg2Kje38xnz8zKn9iesFBCcONXS7txENTzX0z80WKBhK+XSFJwARAQABzRxUaG9tYXMgSHV0
	aCA8dGguaHV0aEBnbXguZGU+wsF7BBMBAgAlAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIX
	gAUCUfuWKwIZAQAKCRAu2dd0/nAttbe/EACb9hafyOb2FmhUqeAiBORSsUifFacQ7laVjcgR
	I4um8CSHvxijYftpkM2EdAtmXIKgbNDpQoXcWLXB9lu9mLgTO4DVT00TRR65ikn3FCWcyT74
	ENTOzRKyKLsDCjhXKPblTPIQbYAUCOWElcyAPm0ERd62fA/rKNxgIiNo/l4UODOMoOJm2/Ox
	ZoTckW68Eqv7k9L7m7j+Hn3hoDTjAmcCBJt+j7pOhzWvCbqoNOIH8C8qvPaNlrba+R/K6jkO
	6jZkTbYQpGIofEQJ/TNn38IsNGpI1ALTHWFtoMxp3j2Imz0REO6dRE2fHRN8sVlHgkoeGhmY
	NbDsDE1jFQOEObFnu0euk//7BXU7tGOHckVAZ8T1smiRPHfQU7UEH2a/grndxJ+PNeM5w7n2
	l+FN3cf2KgPotCK2s9MjSdZA7C5e3rFYO8lqiqTJKvc62vqp3e7B0Kjyy5/QtzSOejBij2QL
	xkKSFNtxIz4MtuxN8e3IDQNxsKry3nF7R4MDvouXlMo6wP9KuyNWb+vFJt9GtbgfDMIFVamp
	ZfhEWzWRJH4VgksENA4K/BzjEHCcbTUb1TFsiB1VRnBPJ0SqlvifnfKk6HcpkDk6Pg8Q5FOJ
	gbNHrdgXsm+m/9GF2zUUr+rOlhVbK23TUqKqPfwnD7uxjpakVcJnsVCFqJpZi1F/ga9IN87B
	TQRR+3lMARAAtp831HniPHb9AuKq3wj83ujZK8lH5RLrfVsB4X1wi47bwo56BqhXpR/zxPTR
	eOFT0gnbw9UkphVc7uk/alnXMDEmgvnuxv89PwIQX6k3qLABeV7ykJQG/WT5HQ6+2DdGtVw3
	2vjYAPiWQeETsgWRRQMDR0/hwp8s8tL/UodwYCScH6Vxx9pdy353L1fK4Bb9G73a+9FPjp9l
	x+WwKTsltVqSBuSjyZQ3c3EE8qbTidXZxB38JwARH8yN3TX+t65cbBqLl/zRUUUTapHQpUEd
	yoAsHIml32e4q+3xdLtTdlLi7FgPBItSazcqZPjEcYW73UAuLcmQmfJlQ5PkDiuqcitn+KzH
	/1pqsTU7QFZjbmSMJyXY0TDErOFuMOjf20b6arcpEqse1V3IKrb+nqqA2azboRm3pEANLAJw
	iVTwK3qwGRgK5ut6N/Znv20VEHkFUsRAZoOusrIRfR5HFDxlXguAdEz8M/hxXFYYXqOoaCYy
	6pJxTjy0Y/tIfmS/g9Bnp8qg9wsrsnk0+XRnDVPak++G3Uq9tJPwpJbyO0vcqEI3vAXkAB7X
	VXLzvFwi66RrsPUoDkuzj+aCNumtOePDOCpXQGPpKl+l1aYRMN/+lNSk3+1sVuc2C07WnYyE
	gV/cbEVklPmKrNwu6DeUyD0qI/bVzKMWZAiB1r56hsGeyYcAEQEAAcLBXwQYAQIACQUCUft5
	TAIbDAAKCRAu2dd0/nAttYTwEACLAS/THRqXRKb17PQmKwZHerUvZm2klo+lwQ3wNQBHUJAT
	p2R9ULexyXrJPqjUpy7+voz+FcKiuQBTKyieiIxO46oMxsbXGZ70o3gxjxdYdgimUD6U8PPd
	JH8tfAL4BR5FZNjspcnscN2jgbF4OrpDeOLyBaj6HPmElNPtECHWCaf1xbIFsZxSDGMA6cUh
	0uX3Q8VI7JN1AR2cfiIRY7NrIlWYucJxyKjO3ivWm69nCtsHiJ0wcF8KlVo7F2eLaufo0K8A
	ynL8SHMF3VEyxsXOP2f1UR9T2Ur30MXcTBpjUxml1TX3RWY5uH89Js/jlIugBwuAmacJ7JYh
	lTg6sF/GNc4nPb4kk2yktNWTade+TzsllYlJPaorD2Qe8qX0iFUhFC6y9+O6mP4ZvWoYapp9
	ezYNuebMgEr93ob1+4sFg3812wNP01WqsGtWCJHnPv/JoonFdMzD/bIkXGEJMk6ks2kxQQZq
	g6Ik/s/vxOfao/xCn8nHt7GwvVy41795hzK6tbSl+BuyCRp0vfPRP34OnK7+jR2nvQpJu/pU
	rCELuGwT9hsYkUPjVd4lfylN3mzEc6iAv/wwjsc0DRTSQCpXT3v2ymTAsRKrVaEZLibTXaf+
	WslxWek3xNYRiqwwWAJuL652eAlxUgQ5ZS+fXBRTiQpJ+F26I/2lccScRd9G5w==
Organization: Red Hat
Message-ID: <e6ac1cea-5500-c479-389d-da99b0ac9ae5@redhat.com>
Date: Mon, 17 Dec 2018 11:39:34 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
	Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181217035816.21777-1-richard.henderson@linaro.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Mon, 17 Dec 2018 10:39:38 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH] tests: Exit boot-serial-test loop if child
 dies
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Laurent Vivier <lvivier@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>,
	"Michael S . Tsirkin" <mst@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 2018-12-17 04:58, Richard Henderson wrote:
> There's no point in waiting 5 full minutes when there will be
> no more output.

Sounds like a very good idea, indeed.

As a follow up patch, we should likely use this in the other tests that
use TCG, too (i.e. in boot_sector_test() in tests/boot-sector.c).

>  Compute timeout based on elapsed wall clock
> time instead of N * delays, as the delay is a minimum sleep time.
>=20
> Cc: Thomas Huth <thuth@redhat.com>
> Cc: Laurent Vivier <lvivier@redhat.com>
> Cc: Paolo Bonzini <pbonzini@redhat.com>
> Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
> ---
>  tests/libqtest.h         |  8 +++++
>  tests/boot-serial-test.c | 16 +++++++--
>  tests/libqtest.c         | 70 +++++++++++++++++++++++++---------------
>  3 files changed, 65 insertions(+), 29 deletions(-)
>=20
> diff --git a/tests/libqtest.h b/tests/libqtest.h
> index 96a6c01352..9758c51be6 100644
> --- a/tests/libqtest.h
> +++ b/tests/libqtest.h
> @@ -1011,4 +1011,12 @@ bool qmp_rsp_is_err(QDict *rsp);
>   */
>  void qmp_assert_error_class(QDict *rsp, const char *class);
> =20
> +/**
> + * qtest_probe_child:
> + * @s: QTestState instance to operate on.
> + *
> + * Returns: true if the child is still alive.
> + */
> +bool qtest_probe_child(QTestState *s);
> +
>  #endif
> diff --git a/tests/boot-serial-test.c b/tests/boot-serial-test.c
> index 8ec6aed35d..54b9347325 100644
> --- a/tests/boot-serial-test.c
> +++ b/tests/boot-serial-test.c
> @@ -130,11 +130,12 @@ static testdef_t tests[] =3D {
> =20
>  static bool check_guest_output(const testdef_t *test, int fd)
>  {
> -    int i, nbr =3D 0, pos =3D 0, ccnt;
> +    int nbr =3D 0, pos =3D 0, ccnt;
> +    time_t now, start =3D time(NULL);
>      char ch;
> =20
> -    /* Poll serial output... Wait at most 360 seconds */
> -    for (i =3D 0; i < 36000; ++i) {
> +    /* Poll serial output... */
> +    while (1) {
>          ccnt =3D 0;
>          while (ccnt++ < 512 && (nbr =3D read(fd, &ch, 1)) =3D=3D 1) {
>              if (ch =3D=3D test->expect[pos]) {
> @@ -148,6 +149,15 @@ static bool check_guest_output(const testdef_t *te=
st, int fd)
>              }
>          }
>          g_assert(nbr >=3D 0);
> +        /* Wait only if the child is still alive.  */
> +        if (!qtest_probe_child(global_qtest)) {
> +            break;
> +        }
> +        /* Wait at most 360 seconds.  */
> +        now =3D time(NULL);
> +        if (now - start >=3D 360) {
> +            break;
> +        }
>          g_usleep(10000);
>      }
> =20
> diff --git a/tests/libqtest.c b/tests/libqtest.c
> index 43be078518..1d75d3c936 100644
> --- a/tests/libqtest.c
> +++ b/tests/libqtest.c
> @@ -39,10 +39,11 @@ struct QTestState
>  {
>      int fd;
>      int qmp_fd;
> +    pid_t qemu_pid;  /* our child QEMU process */
> +    int wstatus;
> +    bool big_endian;
>      bool irq_level[MAX_IRQ];
>      GString *rx;
> -    pid_t qemu_pid;  /* our child QEMU process */
> -    bool big_endian;
>  };
> =20
>  static GHookList abrt_hooks;
> @@ -96,36 +97,52 @@ static int socket_accept(int sock)
>      return ret;
>  }
> =20
> +bool qtest_probe_child(QTestState *s)
> +{
> +    pid_t pid =3D s->qemu_pid;
> +
> +    if (pid !=3D -1) {
> +        pid =3D waitpid(pid, &s->wstatus, WNOHANG);
> +        if (pid =3D=3D 0) {
> +            return true;
> +        }
> +        s->qemu_pid =3D -1;
> +    }
> +    return false;
> +}
> +
>  static void kill_qemu(QTestState *s)
>  {
> -    if (s->qemu_pid !=3D -1) {
> -        int wstatus =3D 0;
> -        pid_t pid;
> -
> -        kill(s->qemu_pid, SIGTERM);
> -        TFR(pid =3D waitpid(s->qemu_pid, &wstatus, 0));
> +    pid_t pid =3D s->qemu_pid;
> +    int wstatus;
> =20
> +    /* Skip wait if qtest_probe_child already reaped.  */
> +    if (pid !=3D -1) {
> +        kill(pid, SIGTERM);
> +        TFR(pid =3D waitpid(s->qemu_pid, &s->wstatus, 0));
>          assert(pid =3D=3D s->qemu_pid);
> -        /*
> -         * We expect qemu to exit with status 0; anything else is
> -         * fishy and should be logged with as much detail as possible.
> -         */
> -        if (wstatus) {
> -            if (WIFEXITED(wstatus)) {
> -                fprintf(stderr, "%s:%d: kill_qemu() tried to terminate=
 QEMU "
> -                        "process but encountered exit status %d\n",
> -                        __FILE__, __LINE__, WEXITSTATUS(wstatus));
> -            } else if (WIFSIGNALED(wstatus)) {
> -                int sig =3D WTERMSIG(wstatus);
> -                const char *signame =3D strsignal(sig) ?: "unknown ???=
";
> -                const char *dump =3D WCOREDUMP(wstatus) ? " (core dump=
ed)" : "";
> +    }
> =20
> -                fprintf(stderr, "%s:%d: kill_qemu() detected QEMU deat=
h "
> -                        "from signal %d (%s)%s\n",
> -                        __FILE__, __LINE__, sig, signame, dump);
> -            }
> -            abort();
> +    /*
> +     * We expect qemu to exit with status 0; anything else is
> +     * fishy and should be logged with as much detail as possible.
> +     */
> +    wstatus =3D s->wstatus;
> +    if (wstatus) {
> +        if (WIFEXITED(wstatus)) {
> +            fprintf(stderr, "%s:%d: kill_qemu() tried to terminate QEM=
U "
> +                    "process but encountered exit status %d\n",

The string is not 100% accurate now anymore - we might not have tried to
kill QEMU here since it exited earlier already. It's not that important,
but in case you respin, you could maybe adjust this text a little bit.

> +                    __FILE__, __LINE__, WEXITSTATUS(wstatus));
> +        } else if (WIFSIGNALED(wstatus)) {
> +            int sig =3D WTERMSIG(wstatus);
> +            const char *signame =3D strsignal(sig) ?: "unknown ???";
> +            const char *dump =3D WCOREDUMP(wstatus) ? " (core dumped)"=
 : "";
> +
> +            fprintf(stderr, "%s:%d: kill_qemu() detected QEMU death "
> +                    "from signal %d (%s)%s\n",
> +                    __FILE__, __LINE__, sig, signame, dump);
>          }
> +        abort();
>      }
>  }
> =20
> @@ -228,6 +245,7 @@ QTestState *qtest_init_without_qmp_handshake(const =
char *extra_args)
> =20
>      g_test_message("starting QEMU: %s", command);
> =20
> +    s->wstatus =3D 0;
>      s->qemu_pid =3D fork();
>      if (s->qemu_pid =3D=3D 0) {
>          setenv("QEMU_AUDIO_DRV", "none", true);
>=20

Patch looks fine to me, I'm going to queue this for the next qtests pull
request (unless you want to respin because of the error string or other
reasons).

Reviewed-by: Thomas Huth <thuth@redhat.com>

