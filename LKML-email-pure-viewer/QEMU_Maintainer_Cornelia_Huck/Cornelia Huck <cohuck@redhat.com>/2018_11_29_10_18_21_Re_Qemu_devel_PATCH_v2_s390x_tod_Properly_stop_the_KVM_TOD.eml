Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 19:48:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2AF1C5803ED
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 02:20:33 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 02:20:33 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJnS14hK1UnuUPt1MLtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfLfzxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPAYGz?=
 =?us-ascii?q?b4UID+UOIelWoJTzp0MMoBW8CgSgGe3ixiNWiX/txqA6z+YsHBva0AA8A94Crn?=
 =?us-ascii?q?LZp8j1OqcIVuC1ybHFwCvEb/NM3zfy9ozIchE7rvqRX7xwbNbeyUoyHA7CklqQ?=
 =?us-ascii?q?rozlPy6J2eQOqGWb9fRvWv+vi2E9twF9uCSgxsApioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1S1R3bcO5HJZTrS2WKYV7T8M4T211uis20qMKtYK/cSQQ1ZgqyQDTZ+aaf4WL?=
 =?us-ascii?q?7B/vTvidLDR+iXl4YrywnQyy/lKlyuDkVsm7zlJKri1dn9nIt3ANzADT6tOdRv?=
 =?us-ascii?q?ty+EehxCyD1wfJ6uFLOUw0lKzbJIA9wrMoiJYfrUfOEjXrlEnrj6KabFso9+ao?=
 =?us-ascii?q?5uj9f7nrpIeQN4puhQH/NqQulNa/AeM9MgUWRmiU5+G81KD68ULkXrpKkOM5kq?=
 =?us-ascii?q?3AvJ/BIsQbu6i5DBNL3YY47Bq/Czam0NcGknUdI1NFZQqKj4zoO1HIPfD5Au2z?=
 =?us-ascii?q?g1WqkDd32f/GOqftDYnKLnjGi7rhe7F960hTyAo10NBT/ZVUCqsOIP7rQE/+qM?=
 =?us-ascii?q?TYDgMlMwyz2+vnDNR91oAAVm6VDa6ZLbjfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsjtMqbmulFKFmP1mBeiirxdMACnsR+Aw5SuPslRuFSzEUYn+zW6?=
 =?us-ascii?q?c14HY8EJ6nCoHYAZmghaHE0CqlE5kFW2ZdF1rZFH7pc5mDCe4BbT/XLsJ/nzhB?=
 =?us-ascii?q?T7W4VoI6yTmoswn1zachKfDbrTYFv5Du38Qg+uvIiBsp/iZ1BcnO72bYY2hqn2?=
 =?us-ascii?q?9AZz4y0K15q1Z0zFvLhaRxnf1UPcZe6/NATkExMpuKnMJgDNWncQXbeNqNSV/u?=
 =?us-ascii?q?YsitAnllRdUx3tQNS1xwF9WrklbI2C/8UOxdrKCCGJFhqvGU5HP2Pcsoji+ejK?=
 =?us-ascii?q?Q=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACFvP9bhxHrdtBlGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIJPE4wRX4spgg2XQhSBXxQYFIdyIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGglwBAgIBAQIkEwwKKQMCAQECBgEBC?=
 =?us-ascii?q?hAuCAMBUwYTBYMcgXoIAQSnPzOFQIRtjBYXgUA/hCOCEIItLIVzAokohkKQOQm?=
 =?us-ascii?q?RJwsYiViHRJhMgUaCDTMaCBsVgyeCJxcSjgxAMYEHHIpPKiyBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAACFvP9bhxHrdtBlGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIJPE4wRX4spgg2XQhSBXxQYFIdyIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCBsOL4I2BQIDGgEGglwBAgIBAQIkEwwKKQMCAQECBgEBChAuCAMBUwYTBYM?=
 =?us-ascii?q?cgXoIAQSnPzOFQIRtjBYXgUA/hCOCEIItLIVzAokohkKQOQmRJwsYiViHRJhMg?=
 =?us-ascii?q?UaCDTMaCBsVgyeCJxcSjgxAMYEHHIpPKiyBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="53123291"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 02:20:32 -0800
Received: from localhost ([::1]:53233 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSJQt-0000tg-6S
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 05:20:31 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47964)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cohuck@redhat.com>) id 1gSJP1-0007t2-MX
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 05:18:37 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cohuck@redhat.com>) id 1gSJOx-0005Cw-O1
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 05:18:35 -0500
Received: from mx1.redhat.com ([209.132.183.28]:37220)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cohuck@redhat.com>)
	id 1gSJOx-0005Bp-E6; Thu, 29 Nov 2018 05:18:31 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 47145C050014;
	Thu, 29 Nov 2018 10:18:29 +0000 (UTC)
Received: from gondolin (ovpn-117-114.ams2.redhat.com [10.36.117.114])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 6F053183D3;
	Thu, 29 Nov 2018 10:18:25 +0000 (UTC)
Date: Thu, 29 Nov 2018 11:18:21 +0100
From: Cornelia Huck <cohuck@redhat.com>
To: David Hildenbrand <david@redhat.com>
Message-ID: <20181129111821.1c04e68d.cohuck@redhat.com>
In-Reply-To: <20181128095939.5684-1-david@redhat.com>
References: <20181128095939.5684-1-david@redhat.com>
Organization: Red Hat GmbH
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Thu, 29 Nov 2018 10:18:29 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v2] s390x/tod: Properly stop the KVM TOD
 while the guest is not running
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Thomas Huth <thuth@redhat.com>, Janosch Frank <frankja@linux.ibm.com>,
	qemu-devel@nongnu.org, Christian Borntraeger <borntraeger@de.ibm.com>,
	qemu-s390x@nongnu.org, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, 28 Nov 2018 10:59:39 +0100
David Hildenbrand <david@redhat.com> wrote:

> Just like on other architectures, we should stop the clock while the guest
> is not running. This is already properly done for TCG. Right now, doing an
> offline migration (stop, migrate, cont) can easily trigger stalls in the
> guest.
> 
> Even doing a
>     (hmp) stop
>     ... wait 2 minutes ...
>     (hmp) cont
> will already trigger stalls.
> 
> So whenever the guest stops, backup the KVM TOD. When continuing to run
> the guest, restore the KVM TOD.
> 
> One special case is starting a simple VM: Reading the TOD from KVM to
> stop it right away until the guest is actually started means that the
> time of any simple VM will already differ to the host time. We can
> simply leave the TOD running and the guest won't be able to recognize
> it.
> 
> For migration, we actually want to keep the TOD stopped until really
> starting the guest. To be able to catch most errors, we should however
> try to set the TOD in addition to simply storing it. So we can still
> catch basic migration problems.
> 
> If anything goes wrong while backing up/restoring the TOD, we have to
> ignore it (but print a warning). This is then basically a fallback to
> old behavior (TOD remains running).
> 
> I tested this very basically with an initrd:
>     1. Start a simple VM. Observed that the TOD is kept running. Old
>        behavior.
>     2. Ordinary live migration. Observed that the TOD is temporarily
>        stopped on the destination when setting the new value and
>        correctly started when finally starting the guest.
>     3. Offline live migration. (stop, migrate, cont). Observed that the
>        TOD will be stopped on the source with the "stop" command. On the
>        destination, the TOD is temporarily stopped when setting the new
>        value and correctly started when finally starting the guest via
>        "cont".
>     4. Simple stop/cont correctly stops/starts the TOD. (multiple stops
>        or conts in a row have no effect, so works as expected)
> 
> In the future, we might want to send the guest a special kind of time sync
> interrupt under some conditions, so it can synchronize its tod to the
> host tod. This is interesting for migration scenarios but also when we
> get time sync interrupts ourselves. This however will most probably have
> to be handled in KVM (e.g. when the tods differ too much) and is not
> desired e.g. when debugging the guest. (single stepping should not

I'll drop the period after 'guest' when applying.

> result in permanent time syncs). I consider something like that an add-on
> on top of this basic "don't break the guest" handling.
> 
> Signed-off-by: David Hildenbrand <david@redhat.com>
> ---
> 
> v1 -> v2:
> - Add time sync idea suggested by Christian to description
> - Drop one unnecessary "return"
> - Register in realize() and not in instance_init()
> 
> 
>  hw/s390x/tod-kvm.c     | 91 +++++++++++++++++++++++++++++++++++++++++-
>  hw/s390x/tod.c         |  5 +++
>  include/hw/s390x/tod.h |  8 +++-
>  3 files changed, 101 insertions(+), 3 deletions(-)
> 

(...)

> +static void kvm_s390_tod_realize(S390TODState *td, Error **errp)
> +{
> +    /*
> +     * We need to know when the VM gets started/stopped to start/stop the TOD.
> +     * As we can never have more than one TOD instance (and that will never be
> +     * removed), registering here and never unregistering is good enough.
> +     */
> +    qemu_add_vm_change_state_handler(kvm_s390_tod_vm_state_change, td);
> +}
> +

Yes, this should work. If we were really paranoid, we could add some
code that fails realizing a second instance, but that's probably
overkill.

(...)

Patch looks good to me, but I'd like to have a review before queuing.

