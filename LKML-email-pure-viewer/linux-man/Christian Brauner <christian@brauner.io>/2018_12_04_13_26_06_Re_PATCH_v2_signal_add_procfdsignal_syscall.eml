Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:38:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B1052580443;
	Tue,  4 Dec 2018 05:26:25 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 04 Dec 2018 05:26:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0IpFghDHJlzwpw4RjsZjUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pcmwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypVUBrQCmBQSuH+7v1iNEi2Xq0aEmyeksEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34ObkSUeCvzanI1inDb/JM1jf79YPFbwohruuRXbJ2b8XR01QkGgTZgVWQ?=
 =?us-ascii?q?s4zlPiiV1vgMs2eB6eptTvmgi3Q9pAFspDig2N0shpPIhoIS013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fdqpHIFNuyyUKYd6WN4uTmJ0tCogy7ALu4a3cDYFxZg7yBPSbvOKfoeU?=
 =?us-ascii?q?7h/sUeudPDl1iXx/d7+6iBu/8VSsxvH5W8av01tGsCVIn9zWuXwR2RHf982KRe?=
 =?us-ascii?q?B980u9xzmC0g7T5+5YLUwpk6fQNoQvzaQqlpUJtETOBi/2l1vyjK+Rbkgk5Oeo?=
 =?us-ascii?q?5Pr9Yrn8pZ+TKZV0igfgPaQqgMC/Bv44MgcWU2ia/+SzyqHj8FXnTLlWivA6iL?=
 =?us-ascii?q?TVvZ7EKcgBu6K0ABNZ3pwi5hu9Fzum1c4XnXgDLFJLYhKHiI3pNknKIPD5C/e/?=
 =?us-ascii?q?nlutnC5ox//YJL3hBIvCLnzanLfmc7d97VBTyBAowNBB6JJbFKsBLOjwWkDvrt?=
 =?us-ascii?q?zYCAE2Mwiuz+bgEtV92ZsSWXiTDa+BLKPSrViI6/orI+mNZ48apizxKvc45/P1?=
 =?us-ascii?q?iX85mFkdfbSm3JcNaXC4GOhmLFudYXb2ntgBFmIKtBIkTOP2kF2CTSJTZ3GqUq?=
 =?us-ascii?q?I8/D47CZ6mAp3ERoy3gLyBwT20HptZZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72dh34O3ciws+9T9zD8Sb1WGNSHp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUEyp?=
 =?us-ascii?q?Qs6mATE2TdI92cUObFx/G9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCo7KiUqZkbymdaAd3CHX8meDwnGDvEVZUA52TKXE?=
 =?us-ascii?q?UmoTZkrQrdTl+EzCS6WiBqggMgtE0cSCMLdFasX1jVVaQ/fuIMnRbHivm2iuHx?=
 =?us-ascii?q?qIxqmDbIzxe2oD2iXRD0wEkwMW/XaCLgU+Aiaho2TDDD1hD17vYkXs8fVgp3O/?=
 =?us-ascii?q?VEM70waKb0h53bqv5hEVneCcS+8U3r8cpSgusSt0E0in09LWEdWAoRFhc7taYd?=
 =?us-ascii?q?4m5FdH1GTZtxFyP5C6LqBigEIefBpzv0/0yxp3DYBAm9AwrHw21ApyNb6Y0FRZ?=
 =?us-ascii?q?ejOE3JDwP7rXKnXy/BGvcaLWxkvS0NGM+qcL6fQ4rVrjsRqtFkoj9XVnztZU32?=
 =?us-ascii?q?Gd5pXMEAodT5bxXlwr+Bh9orHQejM96J/M1X1wLam0tSfP1MgtBOQ7xRevYdde?=
 =?us-ascii?q?PLmfGw/vDsIVHc6uKO8tm1i3dR8EOOFS9KgpP8KpbfeG2airPPp+kzKil2hI/I?=
 =?us-ascii?q?d90keU/SpmVuHIx4oFw+2f3gafVzb8kU2tvdztlYFFZTEdBGy/ySf/CY5VZ61y?=
 =?us-ascii?q?e5sLCGi0L822wNV+m4DiW3pC+FG/AFMG3dejeQCOYFzlwQ1QyUMXrGS9mSu50z?=
 =?us-ascii?q?N7iSspobeY3CDUxeTtagAHOm9SSGZ+l1jsJZW7gM4AXEivaQgkjx+l5Uf8x6hG?=
 =?us-ascii?q?q6VzNWjTQUFUfyfoK2FuSLe/tr2HY8RX8pMnrT1XUPigYVCdUrP8oxoa3znjHm?=
 =?us-ascii?q?dE3zA7ajeqt479nxx7jmKdMXlyoGDYecF22RfQ+tjcSeRN0ToBQSlykSPXCUSk?=
 =?us-ascii?q?P9m14dWUkI/OsuKkWGK7VZ1Tci7rwZmbtCSh5m1qAhy/n/atld3hCgU61S7719?=
 =?us-ascii?q?93VSTHthr8Y4/r17ikPuJjZEVnGFj8689iEIFkjoQwnI0Q2WQdhpiN/XsIi2Dz?=
 =?us-ascii?q?Pc9Z2aL/anoAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4rhjeYflnkjcd1Psh8ngag+4StQopzyWdBK0SHEZCMSztkRSI?=
 =?us-ascii?q?886xrKFNaGmzdriw0VJ0ncq9A7GavgFcRHH5d48nHS9x7cVwKkjA0XPt5YH/ZN?=
 =?us-ascii?q?nfc8gTuQaKnBfagOhYM5YxlvsMhSp6NmPxp3wly+gnjRNw2ZG2ppSIK2Jo/Kih?=
 =?us-ascii?q?GB5XKiX1Z98P+jHqlategsGW34W1EpRgADoLWoboTemzEDITrvnnMweOEDshqn?=
 =?us-ascii?q?aUA7bfHAmf6Ft4oHLLCZykK3aXJHwBx9V4WBadPFBfgBwTXDgihZE2DAeqxMj8?=
 =?us-ascii?q?cEtj4jAR+0X1qh9NyuJuKhn+XX3TpAauajcoVpefKABa4R1F50fQKcae9P58Hz?=
 =?us-ascii?q?lE/p29qwyAMm6baB5NDW4XQUyIHUzjMqOt5dnd8OiYG+y+IOHVYbiVrexeVvGI?=
 =?us-ascii?q?xY+g04d8/jaMMNmPMWdmD/EhxkVDWnV5EdzDmzoTUywXiz7Nb8mDqRa8/S13s9?=
 =?us-ascii?q?m/8OnxVwLp/4ePELxSMdNg+x2thaeDNuiQhDt2KDpC15MMw2PIx6Yb3FIIly5u?=
 =?us-ascii?q?cDytG6watSHRVKLQhrNXDxkDZiNzKsRI7qE83gpMOcLBidP1zLl4jvErBFdfSF?=
 =?us-ascii?q?zhgdqkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwqgMfxXgyGBIhNfuJuxchJsCWX4SNLmaxu7MMJ4jDEswL00gG/KOnAYMT?=
 =?us-ascii?q?Rmb0xNqbiQ5ztCgvpjA2xB8mZlLe6cliaF7unYL4wavudxDitol+JV/nI6xqBR?=
 =?us-ascii?q?7CFFQvx1hSTTosRvo1GgjumA1D5nXABSpTZMgYKBpV9iNrnB9plcRXbE+woA7G?=
 =?us-ascii?q?WKBBQMottlC9vvtLhRy9jPjq3zLjhC/snQ/csdAcjUNc2GPGAgMRrvBD7bEg8F?=
 =?us-ascii?q?QSS3OmHYgkwO2M2Vo1ORqYI7o56kp5cPT7JBHAg7Cf4bD0l/NMYPLJd+QnUvlr?=
 =?us-ascii?q?vN3+AS4n/rhxnLRd5Gv5nBHtiICOjpJSzR2bJEfRoT3bLxK6wZLITm3UF4LFh9?=
 =?us-ascii?q?yteZU3HMVMxA93UyJjQ/p19ApT0nFjU+?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAAD5fwZch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUgUBAQELAYEwJYIWJ4N5lCeCDRSXNYIFAQErAYgRIjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCCkjDII2JAGCYgECAwECIAQZAQE3AQUJAQEKDgoCAgUhAgIDD?=
 =?us-ascii?q?CUBBQECGgYYgxyCAgEEmQc8ih1wfDOCdgEBBYcuCBJ5iXeBHBeBf4NuNYgFgle?=
 =?us-ascii?q?JIQ6GA5EXCYIkjxIjX4h8h0ssmCIGAgkHDyGBJgGCCzMaLIMzghsMF4Yuh3A/M?=
 =?us-ascii?q?oEEAQEBixIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AGAAD5fwZch0O0hNFjGwEBAQEDAQEBBwMBAQGBUgUBAQE?=
 =?us-ascii?q?LAYEwJYIWJ4N5lCeCDRSXNYIFAQErAYgRIjUIDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?CkjDII2JAGCYgECAwECIAQZAQE3AQUJAQEKDgoCAgUhAgIDDCUBBQECGgYYgxy?=
 =?us-ascii?q?CAgEEmQc8ih1wfDOCdgEBBYcuCBJ5iXeBHBeBf4NuNYgFgleJIQ6GA5EXCYIkj?=
 =?us-ascii?q?xIjX4h8h0ssmCIGAgkHDyGBJgGCCzMaLIMzghsMF4Yuh3A/MoEEAQEBixIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="42662027"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 05:26:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726222AbeLDN0R (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 08:26:17 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:39004 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725802AbeLDN0Q (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 08:26:16 -0500
Received: by mail-pf1-f196.google.com with SMTP id c72so8213249pfc.6
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 05:26:16 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=brauner.io; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=lUBWBMjwQZh4BgUZEUxqp89yk9ZvrcKIj+bZ2O6Ba/Y=;
        b=ZKALe0PQvtHSGg/TFfVRQEh8CFJN1/pKILkYhksseQxqcMak9vfVZ2CIkD4viok2jp
         RFbR4ys6dd4EBXxAyuhhTMQ+HwL8P1ebIvH+sjjHPYSh8wmvZvO9Xpcjxe3+04GRSV3w
         YrBo40ehWR4H1Ejw6AGToo46Q6f/AhMFBxK3nqlOHdWDVzStYAvGH6G13agJHO5m65zJ
         qUajQgnDTgNGVnv5wyQ+CnTXGGq/e3JcPP9RIxPdW3H58LETa8qZz64JkCOXvp7sJffT
         8ITCtrFVIVEEYOxCiUPPBlFGpuzwXBKaQeox17xJBXvK3R/nq5P53m0ZUppNg5K/Kf/4
         D08g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=lUBWBMjwQZh4BgUZEUxqp89yk9ZvrcKIj+bZ2O6Ba/Y=;
        b=MdCHYImBjhFeJELfZig8N+x3cNk3+0RONOj1LowPpcF7K3i8GAbXcOe4HZw9jpErF4
         hDAHRFHIl3s86BncWbykv5ThdPbleOLgruVKhgvLxvuZjIST2L7fKneCar5cu8Il/TBJ
         M8Kf7eC3W3KiJEpfhSHl0mA/GSaiLWeR0I7CimLtvshurFw7dF1o7PMNmvo4gFVWzPMN
         CRdpSwEAq8zr4TIJw0salRscADTltjHuoQbFxUlfL1gECoQNvY69MhTwLGKTfWSzDY8d
         sC98BzzRGSEyRqDfkkoH6VLx5B7BU3zgNuoh15W4SxlU1sw/D0rWFqCg1BxAhThiE8O4
         ooVw==
X-Gm-Message-State: AA+aEWY6kJltv0q3+f4RrGVSN5EzI0WS4OhFIl8NHtq5QMekIfu7bgJ4
        0maZu/7a0/q+zMHDrUlKfE7krw==
X-Google-Smtp-Source: AFSGD/UMMQ+4X7LRJlfx1JJmrWBaFOnUteR+FjXX1vdXEFDRkY45wCSUpTnoNcHTa3gAz3V1Olonuw==
X-Received: by 2002:a63:ea15:: with SMTP id c21mr15889850pgi.361.1543929975524;
        Tue, 04 Dec 2018 05:26:15 -0800 (PST)
Received: from brauner.io ([2404:4404:133a:4500:b824:a031:b50e:f401])
        by smtp.gmail.com with ESMTPSA id d18sm22759112pfj.47.2018.12.04.05.26.08
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 04 Dec 2018 05:26:14 -0800 (PST)
Date: Tue, 4 Dec 2018 14:26:06 +0100
From: Christian Brauner <christian@brauner.io>
To: Florian Weimer <fweimer@redhat.com>
Cc: ebiederm@xmission.com, linux-kernel@vger.kernel.org,
        serge@hallyn.com, jannh@google.com, luto@kernel.org,
        akpm@linux-foundation.org, oleg@redhat.com, cyphar@cyphar.com,
        viro@zeniv.linux.org.uk, linux-fsdevel@vger.kernel.org,
        linux-api@vger.kernel.org, dancol@google.com, timmurray@google.com,
        linux-man@vger.kernel.org, Kees Cook <keescook@chromium.org>
Subject: Re: [PATCH v2] signal: add procfd_signal() syscall
Message-ID: <20181204132604.aspfupwjgjx6fhva@brauner.io>
References: <20181120105124.14733-1-christian@brauner.io>
 <87in0g5aqo.fsf@oldenburg.str.redhat.com>
 <746B7C49-CC7B-4040-A7EF-82491796D360@brauner.io>
 <20181202100304.labt63mzrlr5utdl@brauner.io>
 <8736rebl9s.fsf@oldenburg.str.redhat.com>
 <20181203180224.fkvw4kajtbvru2ku@brauner.io>
 <874lbtjvtd.fsf@oldenburg2.str.redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <874lbtjvtd.fsf@oldenburg2.str.redhat.com>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 04, 2018 at 01:55:10PM +0100, Florian Weimer wrote:
> * Christian Brauner:
> 
> > On Mon, Dec 03, 2018 at 05:57:51PM +0100, Florian Weimer wrote:
> >> * Christian Brauner:
> >> 
> >> > Ok, I finally have access to source code again. Scratch what I said above!
> >> > I looked at the code and tested it. If the process has exited but not
> >> > yet waited upon aka is a zombie procfd_send_signal() will return 0. This
> >> > is identical to kill(2) behavior. It should've been sort-of obvious
> >> > since when a process is in zombie state /proc/<pid> will still be around
> >> > which means that struct pid must still be around.
> >> 
> >> Should we make this state more accessible, by providing a different
> >> error code?
> >
> > No, I don't think we want that. Imho, It's not really helpful. Signals
> > are still delivered to zombies. If zombie state were to always mean that
> > no-one is going to wait on this thread anymore then it would make sense
> > to me. But given that zombie can also mean that someone put a
> > sleep(1000) right before their wait() call in the parent it seems odd to
> > report back that it is a zombie.
> 
> It allows for error checking that the recipient of a signal is still
> running.  It's obviously not reliable, but I think it could be helpful
> in the context of closely cooperating processes.
> 
> >> Will the system call ever return ESRCH, given that you have a handle for
> >> the process?
> >
> > Yes, whenever you signal a process that has already been waited upon:
> > - get procfd handle referring to <proc>
> > - <proc> exits and is waited upon
> > - procfd_send_signal(procfd, ...) returns -1 with errno == ESRCH
> 
> I see, thanks.
> 
> >> Do you want to land all this in one kernel release?  I wonder how
> >> applications are supposed to discover kernel support if functionality is
> >> split across several kernel releases.  If you get EINVAL or EBADF, it
> >> may not be obvious what is going on.
> >
> > Sigh, I get that but I really don't want to have to land this in one big
> > chunk. I want this syscall to go in in a as soon as we can to fulfill
> > the most basic need: having a way that guarantees us that we signal the
> > process that we intended to signal.
> >
> > The thread case is easy to implement on top of it. But I suspect we will
> > quibble about the exact semantics for a long time. Even now we have been
> > on multiple - justified - detrous. That's all pefectly fine and
> > expected. But if we have the basic functionality in we have time to do
> > all of that. We might even land it in the same kernel release still. I
> > really don't want to come of as tea-party-kernel-conservative here but I
> > have time-and-time again seen that making something fancy and cover ever
> > interesting feature in one patchset takes a very very long time.
> >
> > If you care about userspace being able to detect that case I can return
> > EOPNOTSUPP when a tid descriptor is passed.
> 
> I suppose that's fine.  Or alternatively, when thread group support is
> added, introduce a flag that applications have to use to enable it, so
> that they can probe for support by checking support for the flag.
> 
> I wouldn't be opposed to a new system call like this either:
> 
>   int procfd_open (pid_t thread_group, pid_t thread_id, unsigned flags);
> 
> But I think this is frowned upon on the kernel side.

If this is purely about getting a procfd then I think this isn't really
necessary since you can get it from /proc/<pid> and
/proc/<pid>/task/<tid> so a syscall just for that is likely overkill.
However, I started to pick up the CLONE_FD patchset but ideally I would
like it to be way simpler to what was proposed back in the day (which is
not a critique, I just don't feel comfortable with bringing massive
patches to the table that I can barely judge wrt to their correctness.
:)). I have toyed around with this a little and I'm tempted to simply
have the syscall always return an fd for the process and not require a
separate flag for this. But I need to work through the details and this
is really far out into the (kernel) future.

> 
> >> What happens if you use the new interface with an O_PATH descriptor?
> >
> > You get EINVAL. When an O_PATH file descriptor is created the kernel
> > will set file->f_op = &empty_fops at which point the check I added 
> >         if (!proc_is_tgid_procfd(f.file))
> >                 goto err;
> > will fail. Imho this is correct behavior since technically signaling a
> > struct pid is the equivalent of writing to a file and hence doesn't
> > purely operate on the file descriptor level.
> 
> Yes, that's quite reasonable.  Thanks.
> 
> Florian
