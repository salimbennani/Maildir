Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EC9185804F9;
	Thu,  6 Dec 2018 13:33:42 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 06 Dec 2018 13:33:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AckCp/x/hkUXPM/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1u0VIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOM+laoIbzvFsOtRmzCBKwBO7s0DJEmmP60Lc43uknDArI3BYgH9ULsH?=
 =?us-ascii?q?nMstj1NL0SUeGuzKnUzDXMdfVW0irg5YjSaB8hvPeMUqxqccHMzkQgCwPFjk+R?=
 =?us-ascii?q?qYz+IzOV1/4Cs26A4uV7T+KgkXMnqwdvrTi13Mssi47Ji5sTx1vZ+yt5x4M1Ks?=
 =?us-ascii?q?e5SE59edOkE4VftzucN4RoRsMuWWZouDw1yrAApJW1fzAKxYw5yxLDb/GLaZWE?=
 =?us-ascii?q?7xz9WOqLPDt1h25pdKi+ihuw6USs1OLxWtW73VtPoSdIncXAu38I2hDO5MWKRO?=
 =?us-ascii?q?Fy80Ku1DuPywzf9uRJLls3mKbFJJMsx6Q/moYdvEjeGyL5g0X7gLOIeUgh9Oil?=
 =?us-ascii?q?5Pjrbqjgq5SBLYF7kBv+Pb4rmsGnAeQ3LAwOX2+D9OSi273s41f5TK9JjvIoiK?=
 =?us-ascii?q?nZto7VJcABqq6+GQ9V3Z4v6xe5Dzi4zNQVhWcLIE5BdR6dkoTkNU/CLOrlAfq8?=
 =?us-ascii?q?n1igijZmyvLeMr3kGJrNL3zDkLn7fbZ67k5R0A4zzdFZ55JJBbANOfHzVVHrtN?=
 =?us-ascii?q?zeEBA5NxW4w+HpCdV7yIweQ3mCArGWMKzMq1+E/OEvLPeWZI8Tpjn9L+Ip5/n0?=
 =?us-ascii?q?jX82gVMdZ7Wm3YMLaHCkGfRrO0GZYXvvgtgfC2sLsRc+QffuiF2DVz5TenmzU7?=
 =?us-ascii?q?g95jE9FIKpE4PDSpqxj7yG2SexBodWaXxeClCQDXfocJ2JW/cWZyKTPs9uiDsE?=
 =?us-ascii?q?WaKhS488zx6usgD6xqFjLurV/C0YqJ3i2MJ05+3ViRE96zh0A96B3GGKSmF+hn?=
 =?us-ascii?q?kISCMu3KBjvUx9zU+O0ap/g/NGD9BT5PRJUgE8NZ7b1OF6D9HyWgTcftaGUlqm?=
 =?us-ascii?q?Q9OmAS0vQdI12dMBf0F9G9C6hBDZwyWqG6MVl6CMBJEs6K3cxHjxJ8F+y3rczq?=
 =?us-ascii?q?kulVsmT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbrdfj6UPEVbOuDbUnPRFHyc6NMaZKbtzpjVNbRPbsItjeYmSxm3uuCh?=
 =?us-ascii?q?aM3L+DcI3qe2AF1iXHFEcEixwT/WqBNQUmGyiuuXzeAyJ0GVLveUzs9/J+p229?=
 =?us-ascii?q?TkMzywGKbEhh176u9x4RhPycTe4T370etCcgrTV0AEiy39bMB9WcoApheb1WYc?=
 =?us-ascii?q?kh71dfyWLZqwt9M4S9IK94mF4RbR57v0P02BVxEYVPj84qoWguzApzL6KYzVxA?=
 =?us-ascii?q?eymZ3ZD2Jr3YNG3y8AqzZK7R31HUyMyW9bsX6PQkt1XjuxmkFlYj83Vi1NlVz3?=
 =?us-ascii?q?uc55XQAAoOS57xVVw39xx7p7HcbSkw/IfU1XxqMampvT7OwdMpBO05yhm+e9dT?=
 =?us-ascii?q?Kr+LFAj3E8cCHcihNPQqm0S1bhIDJO1d7qo0MN2pdvSY2K+nJv1vnC+7gmtd5o?=
 =?us-ascii?q?B90UWM9zRnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtW3x9VjnZLiR2RU9V+jB1wc3s+pdgGfb1j83Q1WyEQWrmarmSq+zz?=
 =?us-ascii?q?xojT4pqrCT0zDJw+TnbBAHIHJERHF+jVfwJoi5l8oaXEm0YAczjhuq+EH6y7Jd?=
 =?us-ascii?q?pKthNWnTQF5EcDTsIGFmT6S/qKCCY8lJ6J4ztSVXUeK8YU2VS7Lnohsa1T/jEH?=
 =?us-ascii?q?VaxDwhaz6qvZD5lQRgiG2BNHZzsGbZecZoyBbf5dzQX/5Q0iAdRClljznaHVy8?=
 =?us-ascii?q?P9iv/dWJmJbPqOG+V2S9VpJNdSnn15+PtCy+5WdyGx2wg+izmsH7EQg9ySL71c?=
 =?us-ascii?q?NlVT/LrBb/ZYnnzb+6PvhkfklrBV/87dR1Godln4s0hZEQ32Uah5qP8XoGl2fz?=
 =?us-ascii?q?LctU2abkYHURQj4Lxsbf4BL51017MnKJ24X5W22dw8R7YNm2eGEW2iM7781RDK?=
 =?us-ascii?q?eU7bpEnTZ6o1airALRZ+R9kSkZyfc09HEahOQJshI3ziqBGrASAVVYPSv0mhSL?=
 =?us-ascii?q?9d++rb9bZGaycbeq0kp+ksusDLWDogFaRXb4dY0uHS527sVjLl3M1Gf/5Z3jeN?=
 =?us-ascii?q?nVddgTrAGbkw/cj+hJL5I8jv8KhStkOW3np3EkxfA0jQdy3Z6kpoiIMHti/Li2?=
 =?us-ascii?q?AhNDMj31ZsUT+izijKpEn8aW2ZyvEYtlGjkRQJToSveoGioItfv7LwaODCE8qn?=
 =?us-ascii?q?CDFLrDGg+f7V1qrnPVHJCtKnGXP2IZzdR5SRmZJUxfhh0UXTogkp44EACq2NLu?=
 =?us-ascii?q?cENj6j8N4V74rwNGyvh0OBnnTmffuACoZy8vR5eFKxpW6hxC613RMcyD9e9zGy?=
 =?us-ascii?q?BY/pu8rA2CMGCbZgJIDX0XVUyAHVzsIr6u5dzY+eiCGuW+N+fOYamJqeFGVfeH?=
 =?us-ascii?q?35ev3ZV9/zqWKsWDJHpiD+A42kpeW3B2Ad/Zli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50KDZf1pMR3H/I1aIQ3FgIhyF1?=
 =?us-ascii?q?cDmtF7sAuDXJTKLRnK9XEhEaZzlyNMtO86IzwA1NNdTHhdPy075yluQ1BEtdVV?=
 =?us-ascii?q?z9hsGpYtQHI2GjO1PGB0aLN7WGKSfIw8HtZqO8RqNfjP9Jtx2rojubF07jPjKe?=
 =?us-ascii?q?lzjmTRyvMOdMjD2FMxxaoo2ybhFtCW37RtL8dhK7KMN3jSExwbAsnHzKKHUTMS?=
 =?us-ascii?q?JifEJNtLGQ6SJYj+57G2xA6HplMOaFlzyY7+neNpYZr/9rDj5omOJd5XQw06FV?=
 =?us-ascii?q?4z1cRPxphCvSqcZjo02nkumK0DZoTABCpSpLhI2Vu0VvIqHZ9phGWXbZ8xMB92?=
 =?us-ascii?q?SQCxIWp9R7Dt3jobxfyt/KlKjrMjdN78rU/dcAB8jTMM+GMGAuMRzsGD7VCgsK?=
 =?us-ascii?q?VT+qNWHFiExbn/Gf7XmVrpk8qpjxl5sCUL5bVFopFvwEDkRpBsANIJByXmBsrb?=
 =?us-ascii?q?nOxuMS5HH2k1+ZbsRXsp3dU/uUS727JTyYgLVJfR4g0bb5Np8SMYu90EtnPApU?=
 =?us-ascii?q?hoPPTmHQR9FWvixoaEceukxQ9nVkBjk421jkcR+s6Xk7H+S9gxg7kE1/ZrJ+p3?=
 =?us-ascii?q?/X/14rKw+S92MLm04rlICg2GjJfQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACPlAlch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIE5gQIng3qIGYwPgg0UkkGEeYFzEgEBGA0GAYd?=
 =?us-ascii?q?XIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIA8BDQEBN?=
 =?us-ascii?q?wEEAQkBAQoYAgIFIQICAwwlAQUBAhoGEwWDHAGBeQgBBAqadjyKHXCBL4J2AQE?=
 =?us-ascii?q?FgTABhXQDBRJ5iXiBHBeBf4QjgwUZBIE/AQGDIoJXiTOGBpEoCYIkhGCKNyNgi?=
 =?us-ascii?q?QKHVCyNToprBgIJBw8hgSWCDTMaLIMzEgGCCAwXhi6CMIVAPzIBAQEBgQABAQG?=
 =?us-ascii?q?HfII+AQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAACPlAlch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIE5gQIng3qIGYwPgg0UkkGEeYFzEgEBGA0GAYdXIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIA8BDQEBNwEEAQkBAQoYAgI?=
 =?us-ascii?q?FIQICAwwlAQUBAhoGEwWDHAGBeQgBBAqadjyKHXCBL4J2AQEFgTABhXQDBRJ5i?=
 =?us-ascii?q?XiBHBeBf4QjgwUZBIE/AQGDIoJXiTOGBpEoCYIkhGCKNyNgiQKHVCyNToprBgI?=
 =?us-ascii?q?JBw8hgSWCDTMaLIMzEgGCCAwXhi6CMIVAPzIBAQEBgQABAQGHfII+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="56441015"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 13:33:41 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726466AbeLFVco (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 16:32:44 -0500
Received: from mail-pl1-f172.google.com ([209.85.214.172]:33986 "EHLO
        mail-pl1-f172.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726278AbeLFVcJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 16:32:09 -0500
Received: by mail-pl1-f172.google.com with SMTP id w4so774390plz.1
        for <linux-kernel@vger.kernel.org>; Thu, 06 Dec 2018 13:32:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=brauner.io; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent;
        bh=SQGgSb/KnMtoG4jQJN1PfQ9jFVjQzn4lSqrAShZGfPc=;
        b=fG5VY4b1Jj+02ynTkkJlhLNJ5mOWWC2oEPd0XbfgVFWPLunFfJ+1t9Rt6I118mngnM
         GIGOotAraCLPxrjGqJEX+N/6fJSrl0AMiVpKOblJcGDjxH0xR2plVonZb/pvyE6jIPUE
         lHWWiKnq5dLaBfIDppJ6FDaeCpq+qT6T7rfsxv+KKHuIs1tQ93tQADHrgoDujBj/8Ycl
         /Nh1w5VZu30UF5ZRNk9K3TbemXwq5/yRy4rVqyAiZoJzivv/r40waWQ2OoajJ18FS7we
         N1G5PWQjgrpdecnG2JvLiJv1fPlA8aNS1Krv2P5/uqsEdH3FPSZqpEHPnqWmQQyX9mPe
         vvjQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:content-transfer-encoding
         :in-reply-to:user-agent;
        bh=SQGgSb/KnMtoG4jQJN1PfQ9jFVjQzn4lSqrAShZGfPc=;
        b=ORoasb4XCF0T1CmSymjLd1dgQTVocouxWwavuH0bmgIdhmdZbJoLN6BQj4KolANt1r
         FIgPJDqLobP2MkGPeNy5yhmFriRIO6WXRNwdGU5Qh/fyFGefjoc8tKJUuVs/g9wQm3MH
         0pvvVfkn5FoZP1qN5UwkzT69Qc8zgzGKFLbo5vQ1INlkgjxuX6RnGy594AEwPirE3wSn
         1TetVu0WqcgyYSkGABfbm4ir6KBdKesGX0XuyNBtlJ5fL68dqQN/CcEzkDG+9m7G85kM
         w1z3OIQozzrmLI/bFQkvNMpIDEC27x8QsQApquCuqvAHyIaecTHXBwcVkVWCNtV8FHRG
         O2NA==
X-Gm-Message-State: AA+aEWY9vkGavOgYXBFVEaWPCto8ssOKXo1I5HqdULfW4EYAwNa3atp9
        QDD7crLycYoUsUO7+emcZbTzyxOx5FGZQw==
X-Google-Smtp-Source: AFSGD/X+exnoI51REF40RGArGEdD14EJuN4S8BZVYIr34h3VJs5qKXikeU3h0QH6jtbINCf9kXXN6A==
X-Received: by 2002:a17:902:7c82:: with SMTP id y2mr29404714pll.33.1544131928434;
        Thu, 06 Dec 2018 13:32:08 -0800 (PST)
Received: from brauner.io ([2404:4404:133a:4500:b824:a031:b50e:f401])
        by smtp.gmail.com with ESMTPSA id m20sm1147218pgv.93.2018.12.06.13.32.00
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 06 Dec 2018 13:32:07 -0800 (PST)
Date: Thu, 6 Dec 2018 22:31:57 +0100
From: Christian Brauner <christian@brauner.io>
To: "Eric W. Biederman" <ebiederm@xmission.com>
Cc: linux-kernel@vger.kernel.org, linux-api@vger.kernel.org,
        luto@kernel.org, arnd@arndb.de, serge@hallyn.com, jannh@google.com,
        akpm@linux-foundation.org, oleg@redhat.com, cyphar@cyphar.com,
        viro@zeniv.linux.org.uk, linux-fsdevel@vger.kernel.org,
        dancol@google.com, timmurray@google.com, linux-man@vger.kernel.org,
        keescook@chromium.org, fweimer@redhat.com, tglx@linutronix.de,
        x86@kernel.org
Subject: Re: [PATCH v4] signal: add taskfd_send_signal() syscall
Message-ID: <20181206213152.gvci7ijr3dokew7w@brauner.io>
References: <20181206121858.12215-1-christian@brauner.io>
 <87sgzahf7k.fsf@xmission.com>
 <D372C766-572C-4897-8F02-2FD0E72CCFAC@brauner.io>
 <875zw6bh2z.fsf@xmission.com>
 <20181206193017.wpxls5p3zgjd6rv2@brauner.io>
 <871s6u9z6u.fsf@xmission.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <871s6u9z6u.fsf@xmission.com>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Dec 06, 2018 at 02:29:13PM -0600, Eric W. Biederman wrote:
> Christian Brauner <christian@brauner.io> writes:
> 
> > On Thu, Dec 06, 2018 at 01:17:24PM -0600, Eric W. Biederman wrote:
> >> Christian Brauner <christian@brauner.io> writes:
> >> 
> >> > On December 7, 2018 4:01:19 AM GMT+13:00, ebiederm@xmission.com wrote:
> >> >>Christian Brauner <christian@brauner.io> writes:
> >> >>
> >> >>> The kill() syscall operates on process identifiers (pid). After a
> >> >>process
> >> >>> has exited its pid can be reused by another process. If a caller
> >> >>sends a
> >> >>> signal to a reused pid it will end up signaling the wrong process.
> >> >>This
> >> >>> issue has often surfaced and there has been a push [1] to address
> >> >>this
> >> >>> problem.
> >> >>>
> >> >>> This patch uses file descriptors (fd) from proc/<pid> as stable
> >> >>handles on
> >> >>> struct pid. Even if a pid is recycled the handle will not change. The
> >> >>fd
> >> >>> can be used to send signals to the process it refers to.
> >> >>> Thus, the new syscall taskfd_send_signal() is introduced to solve
> >> >>this
> >> >>> problem. Instead of pids it operates on process fds (taskfd).
> >> >>
> >> >>I am not yet thrilled with the taskfd naming.
> >> >
> >> > Userspace cares about what does this thing operate on?
> >> > It operates on processes and threads.
> >> > The most common term people use is "task".
> >> > I literally "polled" ten non-kernel people for that purpose and asked:
> >> > "What term would you use to refer to a process and a thread?"
> >> > Turns out it is task. So if find this pretty apt.
> >> > Additionally, the proc manpage uses task in the exact same way (also see the commit message).
> >> > If you can get behind that name even if feeling it's not optimal it would be great.
> >> 
> >> Once I understand why threads and not process groups.  I don't see that
> >> logic yet.
> >
> > The point is: userspace takes "task" to be a generic term for processes
> > and tasks. Which is what is important. The term also covers process
> > groups for all that its worth. Most of userspace isn't even aware of
> > that distinction necessarily.
> >
> > fd_send_signal() makes the syscall name meaningless: what is userspace
> > signaling too? The point being that there's a lot more that you require
> > userspace to infer from fd_send_signal() than from task_send_signal()
> > where most people get the right idea right away: "signals to a process
> > or thread".
> >
> >> 
> >> >>Is there any plan to support sesssions and process groups?
> >> >
> >> > I don't see the necessity.
> >> > As I said in previous mails:
> >> > we can emulate all interesting signal syscalls with this one.
> >> 
> >> I don't know what you mean by all of the interesting signal system
> >> calls.  I do know you can not replicate kill(2).
> >
> > [1]: You cannot replicate certain aspects of kill *yet*. We have
> > established this before. If we want process group support later we do
> > have the flags argument to extend the sycall.
> 
> Then you have horrible contradiction in the API.
> 
> Either the grouping is a property of your file descriptor or the
> grouping comes from the flags argument.

See the first part of Daniel's answer in [1] answer which makes sense to
me. I won't repeat it here.
[1]: https://lore.kernel.org/lkml/CAKOZuevgPv1CbAZF-ha0njdq6rd6QkU7T8qmmERJLsL45CeVzg@mail.gmail.com/

> 
> If the grouping is specified in the flags argument then pidfd is the
> proper name for your file descriptors, and the appropriate prefix
> for your system call.
> 
> If the grouping is a property of your file descriptor it does not make
> sense to talk about using the flags argument later.
> 
> Your intention is to add the thread case to support pthreads once the
> process case is sorted out.  So this is something that needs to be made
> clear.  Did I miss how you plan to handle threads?

Yeah, maybe you missed it in the commit message [2] which is based on a
discussion with Andy [3] and Arnd [4]:

[2]: https://lore.kernel.org/lkml/20181206121858.12215-1-christian@brauner.io/
     /* taskfd_send_signal() replaces multiple pid-based syscalls */
    The taskfd_send_signal() syscall currently takes on the job of the
    following syscalls that operate on pids:
    - kill(2)
    - rt_sigqueueinfo(2)
    The syscall is defined in such a way that it can also operate on thread fds
    instead of process fds. In a future patchset I will extend it to operate on
    taskfds from /proc/<pid>/task/<tid> at which point it will additionally
    take on the job of:
    - tgkill(2)
    - rt_tgsigqueueinfo(2)
    Right now this is intentionally left out to keep this patchset as simple as
    possible (cf. [4]). If a taskfd of /proc/<pid>/task/<tid> is passed
    EOPNOTSUPP will be returned to give userspace a way to detect when I add
    support for such taskfds (cf. [10]).

[3]: https://lore.kernel.org/lkml/CALCETrUY=Hk6=BjgPuDBgj5J1T_b5Q5u1uVOWHjGWXwmHoZBEQ@mail.gmail.com/
     > Yes, I see no reason why not. My idea is to extend it - after we have a
     > basic version in - to also work with:
     > /proc/<pid>/task/<tid>
     > If I'm not mistaken this should be sufficient to get rt_tgsigqueueinfo.
     > The thread will be uniquely identified by the tid descriptor and no
     > combination of /proc/<pid> and /proc/<pid>/task/<tid> is needed. Does
     > that sound reasonable?
    
     Yes. So it would currently replace rt_gsigqueueinfo() but
     not rt_tgsigqueueinfo(), and could be extended to do both
     afterwards, without making the interface ugly in any form?
     
     I suppose we can always add more flags if needed, and you
     already ensure that flags is zero for the moment.

[4]: https://lore.kernel.org/lkml/CAK8P3a1_if7+Ak2eefU6JeZT9KW827gkLHaObX-QOsHrB5ZwfA@mail.gmail.com/
     "Is the current procfd_signal() proposal (under whichever name)
     sufficient to correctly implement both sys_rt_sigqueueinfo() and
     sys_rt_tgsigqueueinfo()?"

> 
> And this fundamentally and definitely gets into all of my concerns about
> proper handling of pid_task and PIDTYPE_TGID etc.
> 
> >> Sending signals to a process group the "kill(-pgrp)" case with kill
> >> sends the signals to an atomic snapshot of processes.  If the signal
> >> is SIGKILL then it is guaranteed that then entire process group is
> >> killed with no survivors.
> >
> > See [1].
> >
> >> 
> >> > We succeeded in doing that.
> >> 
> >> I am not certain you have.
> >
> > See [1].
> >
> >> 
> >> > No need to get more fancy.
> >> > There's currently no obvious need for more features.
> >> > Features should be implemented when someone actually needs them.
> >> 
> >> That is fair.  I don't understand what you are doing with sending
> >> signals to a thread.  That seems like one of the least useful
> >> corner cases of sending signals.
> >
> > It's what glibc and Florian care about for pthreads and their our
> > biggest user atm so they get some I'd argue they get some say in this. :)
> 
> Fair enough.  If glibc could use this then we certainly have users and a
> user case.

Florian was asking specifically in [5]:

[5]: https://lore.kernel.org/lkml/87in0g5aqo.fsf@oldenburg.str.redhat.com/
     "Looking at the rt_tgsigqueueinfo interface, is there a way to implement
     the “tg” part with the current procfd_signal interface?"

> 
> Eric
