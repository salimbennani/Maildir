Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:24:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from mta-temp.ostc.intel.com (mta-temp.ostc.intel.com [10.54.63.100])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B39515808D3;
	Sat,  1 Dec 2018 18:20:32 -0800 (PST)
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mta-temp.ostc.intel.com (Postfix) with ESMTPS id 8A80261A37;
	Sat,  1 Dec 2018 01:18:58 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 01 Dec 2018 01:17:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ab9kbPxLVpxru2tjtD9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/z7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMheWS5OAo2z?=
 =?us-ascii?q?YIQTAOQPIPhWoYn+qVsVtRuzBxKhBP/2yj9NmnP6wbc33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModjrNKcSS+G1zLLUzTXCdfxW3yr25ZXSch87vPGMW6x/cdDMwkQoCwzFjk+Q?=
 =?us-ascii?q?qY3+PzOJ1+QCqW6b4vF7WuK1kWEntgdxrSa1xss2i4nJgZsYx1bZ/it62IY4Pc?=
 =?us-ascii?q?O0RFJ/bNK+DZdduT+WO5FrTs4hX21koic3x78etZKmfiUG1o4ryh7eZvCdboSF?=
 =?us-ascii?q?7AjvWeaQLDp+mXlrYqiwhwyo/kil0uD8Vte70FJNriddjNnMuW4C1wbJ5siEVP?=
 =?us-ascii?q?R95EGh1iiL1wzJ7eFEO080mbLaK54n3LEwioIevVrfEiLygkn6kaGbels+9uS1?=
 =?us-ascii?q?6Onrfq/qq56eOoNsjwHxKKUumsixAeQiNQgOWnCW+eC91L3l4E34T6xGjv4ona?=
 =?us-ascii?q?nDtpDVO8Abqre+Aw5b1IYs9Qy/Aiy40NQXg3YHNkhJeBGZgIjzPVHBPvT4Ae24?=
 =?us-ascii?q?g1S2nzdn3+rGMaH5ApXRMnjDl6/sfbJ8605f1gU/199e549PB7EFIfLzXFLxtd?=
 =?us-ascii?q?PCAh84NQy03/joCNFn2owCXmKPB7eTMLnOvl+Q+uIvP+6MaZcVuDnnKvgl++Th?=
 =?us-ascii?q?jXgjlV8dYKmmx50XaH+jE/RiIkWZZ2fsg9gbHWcLuAo+UPLliFmYXTFPYHayWr?=
 =?us-ascii?q?o25isnB4K+EYfDWoetjaSD3Ce8AJJafGNGCleKEXfucIWJQPMMaCOUIs98nT0I?=
 =?us-ascii?q?T7mhS4k91R6wsA/20aZoLu3R+icAr5LsyMB15/HPlRE17TF7Fd+d02GKT2F3hG?=
 =?us-ascii?q?8IXSU53KJkrEx5y1eD17V4gvNCGdxS4fNJThk1NZrGw+NmDNDyXxrLfs2VR1a+?=
 =?us-ascii?q?XtWmHTYxQ8oyw9AUZUZxAdGijhHZ0CqsDL8YjLiLBJ0y8qLB0Hn9Pcd9y3Da1K?=
 =?us-ascii?q?Y/i1kqWNdANWqjhqRn7QjcG5bJk1mFl6atbakTwTTC9HmdwmaUvEFXSghwUb7b?=
 =?us-ascii?q?UnAZYUfWqdf55kbGT7K1DbQnMw1BydONK6dQa93pi0lGS+nnONjEf22xnGKwDw?=
 =?us-ascii?q?6SxryQdIrqZ3kd3CLFBUcZiQ8T42iJORI+Bii7pWLeFyJhFVT0bkPo8Ol+rm67?=
 =?us-ascii?q?T0AuwwGLaU1hy6S6+hoPifOATPMT26oOuD09pDVsAFa9w9XWBsKcpwpgeaVcZs?=
 =?us-ascii?q?894FdH1G7DqwxxJJugL7pmhl4fdQR3sFjj1xF2CoVGjMgro2kmzAt0KaKEzlxB?=
 =?us-ascii?q?cymU0oz3Or3SMmPy5gyga7bK2lHC19ab4r0A6PAmpFTsog6oFlAu/G5609ZIyX?=
 =?us-ascii?q?Sc4JbKDA0MUZ/qVkY39h56p6zVYyUn5oPU02FsPrewsjPYx90pA+4lwA66f9hD?=
 =?us-ascii?q?KKOECBPyE8oCCsmuNewmgUSmYggFPeBS7qE0OcymeuCC2K6qOuZggT2ngX5G4I?=
 =?us-ascii?q?B7zkKD6S58RvTU0JYCxvGSxhGHWCvkjFe9rsD3nphJZSsTHmWj0yfkHpNeZqpo?=
 =?us-ascii?q?cYYNF2iuOcy3ysxiiJH3X35X6UCsB0kB2M+vYheSa1393QtN1UUYu3CnmC24zy?=
 =?us-ascii?q?BqnDEttKaQwCvOw+H6fhodJmFLXHVijUvrIYWsj9EaXVKkbggzmBu++Eb6wbNW?=
 =?us-ascii?q?pKB+L2nVXEdJcDL6L2BkUqusqLWCZ9RD548vsSVSSO68e0yVSqbhoxsG1CPuB2?=
 =?us-ascii?q?leyyohdzGpuZX5mAZ2iHmHI3Zwr3rZeMdwygnZ5NHHQf5R3zwGRDR3iDXNB1i8?=
 =?us-ascii?q?OcWp8suQl5vZru++UGehXIVJcSb31YOAqDe75WpyDBy/hf+zncfrEQo70S/9zN?=
 =?us-ascii?q?RqUSTIrBDhYojkzai6MORnflV2C1/48cZ1BoZ+ko4ojpEKxXcanomV/WYAkWrr?=
 =?us-ascii?q?MtVUw6P+YGANRT4W2dHV5gfl1VZnLnKIwYL5S3qcztFgZ9m8fmMZxCY949pWB6?=
 =?us-ascii?q?eT6bxOhTF1rUagrQLNffh9mS8Qyf4v6H4Zme4FogQswTuGArAOA0ZYJzfjmAqS?=
 =?us-ascii?q?79Cxt6hXYGevcb6t1Etxh9yhDbeCoh1CV3b9YJstAShw7sBnOlLWzHLz8p3keM?=
 =?us-ascii?q?XXbd8Lqh2UlBLAg/JUKZ0rkPoKmDFnOXn8vXA+z+47jBpu3Yy1vYSdKmVt+r65?=
 =?us-ascii?q?DQBcNjHve8wT/TTth75EnsmKx4CvAolhGjITUZTzV/2oFzYSten9OwaKDT0xsX?=
 =?us-ascii?q?ObGbvZHQ+C50ZqtXPPE5a3N36JIHkV18ltRB6YJEZHmgAbQC06noIlFgCt3MHh?=
 =?us-ascii?q?cl125jUP6V7jsBdM1vhkNxriUmfcuQeobC07SIOEIRpS7wFC4VrVMMOE4uJyGS?=
 =?us-ascii?q?FY4oOurAiXJmOHYARICHkDWlaYCFD7Irmu+d7A/vCYB+q5MvvOeKiOpvZYV/uS?=
 =?us-ascii?q?3pKv1Y1m/zmXO8WLP3liCeA720VZUXB4HcTZhysASygNmy3RaM6boQ+2+jdroc?=
 =?us-ascii?q?Cn7PTrRAXv6JOPC7RMMNVv+BO2gaaZO+6TniZ5LjlY2Y0WxX/V07gSx1oSiyBo?=
 =?us-ascii?q?dzmwHrUMry/NTKTMmqBJCx4XcT98NMxN76gkxAlCJdbbis/p1r5/lvM6EUpFWk?=
 =?us-ascii?q?f7ms63Zc0GOWW9NFLcCUaPNbSGIyDLws7tbaO9T71QkPtbtxmqtTmHFE/jOyyJ?=
 =?us-ascii?q?lyP1WBC3LeFMkCabMQRCuIG8dxZhE3TsQMj6ZR27LtB3iyY7wbk1hnPMKG4dPi?=
 =?us-ascii?q?Jwc0JLrr2M8yxYhu9zFHBG7npgNeOEgTqW7/HEKpYKtvtmGiR1mPhc4HQ/yrtV?=
 =?us-ascii?q?6jlLRf11mCTIqN5urEqrku2OyjphTRpPpSxHhIONvUV+J6rZ8oNMVmrD/BIIvi?=
 =?us-ascii?q?2sDEEjvd1pQvfioa9Vw97J3Pb6MjFO29vO+8cWQcTZfobPGXwtIFLNBSLTCQof?=
 =?us-ascii?q?Vj2qfTXbmlBauPKf7HuYqt49sJe6y7QUTboOf1wvF+gGC01jVPYYKYpxUylsxb?=
 =?us-ascii?q?Wbls8T+Xu3qjHbXsxHuJ3dEPOVV6a8YA2FhKVJMkNbiYjzKp4eY8iigxRv?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAABVUQJch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAYNrJ4N5lCOCDRSXNIFzEgEBGBMBhECDNiI2Bw0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgpIwyCNiQBgmIBAgMBAiAEGQEBNwEFCQEBChgCAiYCAgMxA?=
 =?us-ascii?q?QUBHAYBDQUFgxyCAgWZezyKHXB8M4J2AQEFgkOEZAgSeYl1gRwXgX+BOB+CTIU?=
 =?us-ascii?q?BgwQxgiaJDSCBc5UgCYIjjzFfiHwQhzksiFePQQIEAgQFAgUPIYEsBIICMxosc?=
 =?us-ascii?q?QGCQYIbhlGIBSoygQUBAY00AQE?=
X-IPAS-Result: =?us-ascii?q?A0AJAABVUQJch0O0hNFjGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAYNrJ4N5lCOCDRSXNIFzEgEBGBMBhECDNiI2Bw0BAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgpIwyCNiQBgmIBAgMBAiAEGQEBNwEFCQEBChgCAiYCAgMxAQUBHAYBDQUFgxy?=
 =?us-ascii?q?CAgWZezyKHXB8M4J2AQEFgkOEZAgSeYl1gRwXgX+BOB+CTIUBgwQxgiaJDSCBc?=
 =?us-ascii?q?5UgCYIjjzFfiHwQhzksiFePQQIEAgQFAgUPIYEsBIICMxoscQGCQYIbhlGIBSo?=
 =?us-ascii?q?ygQUBAY00AQE?=
X-IronPort-AV: E=Sophos;i="5.56,302,1539673200"; 
   d="scan'208";a="140358043"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 01 Dec 2018 01:17:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726577AbeLAU34 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 15:29:56 -0500
Received: from mail-it1-f195.google.com ([209.85.166.195]:54281 "EHLO
        mail-it1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726299AbeLAU34 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 15:29:56 -0500
Received: by mail-it1-f195.google.com with SMTP id i145so2260354ita.4
        for <linux-kernel@vger.kernel.org>; Sat, 01 Dec 2018 01:17:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=brauner.io; s=google;
        h=date:user-agent:in-reply-to:references:mime-version
         :content-transfer-encoding:subject:to:cc:from:message-id;
        bh=mrSp3pTBiD1qDYQHP+IvL1wIPPJwoVZAeIrhY8kUNWc=;
        b=AaQk3y+GiiOhLYx6lcXw9cFeX793DITmD+IZBkiPwaPN1i1hOzRlPHtOBThFU/EyZZ
         eKAuhMWS0on0/60npzQIx9z5AgWmLa8rF3jrioFbdKrlm2SfHxKMdngT0kyox0hcT4qK
         zGAVzNCpH4v7F/QFs/rlbhdblIsTyNzyhNm50Wf3fzF91IZcGkOR4oAOKwPnuug/lhvQ
         ecvAklgbeKdhL1P+U+WdUjkl84DmLRzcRiTDAoQP+AqH3xXSvKza3RDF+t4JoS7CJkgI
         BqhTV849EGIZX6xtsmSp/Pr71bTa0Ssi/iLuqHXt22ut57cV5csNL3Cg6wloyi7TpY5Z
         70cw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:user-agent:in-reply-to:references
         :mime-version:content-transfer-encoding:subject:to:cc:from
         :message-id;
        bh=mrSp3pTBiD1qDYQHP+IvL1wIPPJwoVZAeIrhY8kUNWc=;
        b=mQ3na7S2loqR5dF7jfrw34juNk/H60OILn3h3rxntoMJOa8rt+skUvwEfci8x3oNtD
         g3HaRqYs5HW6hidiolJa1VwMny4WDGJJoXoVC5X/+lMd3n6Q5qhMcnnELdgJyH34BdiJ
         tyeM3GIaR9nAfFtBOsjHI+16DciOgtS4SO70ykx1MVwhWoElqJWdc3/BlvUvIHl2wusa
         Ez6DaTLAfrOESxxlf7iMwhh2umAguAacdNPTuSH7+Dnh/C/VVlTCvVXRaYIzo7wMb7+a
         a0v8EcnSFuVzVbIQGRoNdQhLh/u+F6Zyl6FmNnXdzaoCjhmVDQf0QzbE/mAuI4OdU/tc
         Mn+Q==
X-Gm-Message-State: AA+aEWZEu/xVZnOQAOQIsetEpyIMBHaJ11UO5FZ6ZytDN2kfECpTCHEy
        RqruBsAwKXHdixzhvZsQoz/+Mw==
X-Google-Smtp-Source: AFSGD/UK9A+UlifJf42SrkkWK471JrRIGTzSmd3V84HnZDuzQAQDAvSXWtMS9N6yTyBlp+Olgu13WA==
X-Received: by 2002:a02:8449:: with SMTP id l9-v6mr8106942jah.130.1543655871345;
        Sat, 01 Dec 2018 01:17:51 -0800 (PST)
Received: from [26.67.160.54] ([172.56.13.56])
        by smtp.gmail.com with ESMTPSA id 14sm1776731itm.3.2018.12.01.01.17.49
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 01 Dec 2018 01:17:50 -0800 (PST)
Date: Sat, 01 Dec 2018 22:17:40 +1300
User-Agent: K-9 Mail for Android
In-Reply-To: <CAK8P3a1OX1Hb17=NbTYqZxgEM-sk5-dh_VeKa0bXJpq=k=KxHA@mail.gmail.com>
References: <20181120105124.14733-1-christian@brauner.io> <87in0g5aqo.fsf@oldenburg.str.redhat.com> <36323361-90BD-41AF-AB5B-EE0D7BA02C21@amacapital.net> <993B98AC-51DF-4131-AF7F-7DA2A7F485F1@brauner.io> <CALCETrWnQNMQcCmFZrftVVYgAMW6DT3gyxvVb_v9_enUCUkHiw@mail.gmail.com> <20181129195551.woe2bl3z3yaysqb6@brauner.io> <6E21165F-2C76-4877-ABD9-0C86D55FD6AA@amacapital.net> <CAK8P3a2i9DFaS9-3A9V_pKwFfwVR0bDqgLosmivge3Cx2VyiuQ@mail.gmail.com> <87y39b2lm2.fsf@xmission.com> <20181130065606.kmilbbq46oeycjp5@brauner.io> <CAK8P3a0kqPii5TwFAo_JHLX=o_FDMFVKXxgzzbDjLFZ7OQ5QCQ@mail.gmail.com> <CALCETrW2aphWwEY4=hUwo_JBCvkQyMjxzxGd9FCW017kMLaMOQ@mail.gmail.com> <CAK8P3a1isSRCd-OLJK15C+gSJdpeR=zEXghc8+AMM5QYYw3Tyg@mail.gmail.com> <CALCETrWcJCjNGEqgq57Bm8O3qWkfEwau2SiXAv+SNYvNmXnBCA@mail.gmail.com> <CAK8P3a1OX1Hb17=NbTYqZxgEM-sk5-dh_VeKa0bXJpq=k=KxHA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
 charset=utf-8
Content-Transfer-Encoding: quoted-printable
Subject: Re: [PATCH v2] signal: add procfd_signal() syscall
To: Arnd Bergmann <arnd@arndb.de>, Andy Lutomirski <luto@kernel.org>
CC: "Eric W . Biederman" <ebiederm@xmission.com>,
        Florian Weimer <fweimer@redhat.com>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>, cyphar@cyphar.com,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS-devel Mailing List <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Daniel Colascione <dancol@google.com>,
        Tim Murray <timmurray@google.com>, linux-man@vger.kernel.org,
        Kees Cook <keescook@chromium.org>
From: Christian Brauner <christian@brauner.io>
Message-ID: <9D19D003-EA65-4D05-A3A6-10EA8F506DFF@brauner.io>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On December 1, 2018 9:51:18 PM GMT+13:00, Arnd Bergmann <arnd@arndb=2Ede> w=
rote:
>On Sat, Dec 1, 2018 at 12:54 AM Andy Lutomirski <luto@kernel=2Eorg>
>wrote:
>> On Fri, Nov 30, 2018 at 2:10 PM Arnd Bergmann <arnd@arndb=2Ede> wrote:
>> > On Fri, Nov 30, 2018 at 5:36 PM Andy Lutomirski <luto@kernel=2Eorg>
>wrote:
>> > > On Fri, Nov 30, 2018 at 3:41 AM Arnd Bergmann <arnd@arndb=2Ede>
>wrote:
>> > > > siginfo_t as it is now still has a number of other downsides,
>and Andy in
>> > > > particular didn't like the idea of having three new variants on
>x86
>> > > > (depending on how you count)=2E His alternative suggestion of
>having
>> > > > a single syscall entry point that takes a 'signfo_t __user *'
>but interprets
>> > > > it as compat_siginfo depending on
>in_compat_syscall()/in_x32_syscall()
>> > > > should work correctly, but feels wrong to me, or at least
>inconsistent
>> > > > with how we do this elsewhere=2E
>
>> > The '548 | 0x40000000' part seems to be the only sensible
>> > way to handle x32 here=2E What exactly would you propose to
>> > avoid defining the other entry points?
>>
>> I would propose that it should be 335 | 0x40000000=2E  I can't see any
>> reasonable way to teach the kernel to reject 335 | 0x40000000 that
>> wouldn't work just as well to accept it and make it do the right
>> thing=2E  Currently we accept it and do the *wrong* thing, which is no
>> good=2E
>>
>> > and we have to
>> > add more complexity to the copy_siginfo_from_user()
>> > implementation to duplicate the hack that exists in
>> > copy_siginfo_from_user32()=2E
>>
>> What hack are you referring to here?
>
>I mean this part:
>
>#ifdef CONFIG_COMPAT
>int copy_siginfo_to_user32(struct compat_siginfo __user *to,
>                           const struct kernel_siginfo *from)
>#if defined(CONFIG_X86_X32_ABI) || defined(CONFIG_IA32_EMULATION)
>{
>        return __copy_siginfo_to_user32(to, from, in_x32_syscall());
>}
>int __copy_siginfo_to_user32(struct compat_siginfo __user *to,
>                       const struct kernel_siginfo *from, bool x32_ABI)
>#endif
>{
>=2E=2E=2E
>        case SIL_CHLD:
>                new=2Esi_pid    =3D from->si_pid;
>                new=2Esi_uid    =3D from->si_uid;
>                new=2Esi_status =3D from->si_status;
>#ifdef CONFIG_X86_X32_ABI
>                if (x32_ABI) {
>                    new=2E_sifields=2E_sigchld_x32=2E_utime =3D from->si_=
utime;
>                    new=2E_sifields=2E_sigchld_x32=2E_stime =3D from->si_=
stime;
>                } else
>#endif
>                {
>                        new=2Esi_utime =3D from->si_utime;
>                        new=2Esi_stime =3D from->si_stime;
>                }
>                break;
>=2E=2E=2E
>}
>#endif
>
>If we have a '548 | 0x40000000' entry pointing to
>__x32_compat_sys_procfd_kill, then that will do the right
>thing=2E If you instead try to have x32 call into the native
>sys_procfd_kill, then copy_siginfo_to_user() will also have
>to know about x32, effectively duplicating that mess above,
>unless you want to also change all users of
>copy_siginfo_to_user32() to use copy_siginfo_to_user()
>and handle all cases in one function=2E

I've been looking into having siginfo64_t
with the new copy_siginfo_to_user64()
function=2E It looks like a pretty intricate=20
task=2E Are we sure that we want to go
down this road? I'm not sure that it'll be
worth it=2E Especially since we force yet
another signal struct on user space=2E

