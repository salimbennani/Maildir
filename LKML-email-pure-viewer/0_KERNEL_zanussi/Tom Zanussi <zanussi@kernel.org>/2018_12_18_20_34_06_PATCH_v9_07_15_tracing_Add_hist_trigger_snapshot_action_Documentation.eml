Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:43:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E2CDC5805CF;
	Tue, 18 Dec 2018 12:36:48 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 18 Dec 2018 12:36:48 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArIOVgh95iOp35f9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+IRIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsLxUb46WSqv475yRBHqlS?=
 =?us-ascii?q?gHLSc1/nzKisxrlKJUvg6upwBmz47QZ4GUOud1cqfdcN8fQ2dOWdpfWSxfD4+l?=
 =?us-ascii?q?docBDfcOPfxBo4fgulsOtgO+ChewC+Pz1zREgmH60bE/3+knDArI3hEvH8gWvX?=
 =?us-ascii?q?rUstv7KakcX+OywqbKwzXMbf1W2Szl6IXKaR0tve2AUKhsfcfL1UUjCwXIhUiQ?=
 =?us-ascii?q?p4z/ODOV0/wAvXac7+plSOmgiHQoqwdsoji03ccsi5TCi4UUy1/e8yV53Z01Jc?=
 =?us-ascii?q?a5SENgYt6rDoFQtyeEOItyWM8iRHtouCkjx7AApJW1fzAKxYw5yxLDb/GLaZWE?=
 =?us-ascii?q?7xz9WOqLPDt1h25pdKi+ihuw6UStzu7xWtOq3FpUsiZJiMfAu34O2hDJ6cWLV/?=
 =?us-ascii?q?1w9Vq71zmVzQDc8ORELFg0laXFL54hxaY9loQcsUvdBC/6gkb2g7GMdkUi5Oeo?=
 =?us-ascii?q?7/7rYrL8pp+TL4N0iwf+PboymsGnH+g0LgwDU3KG9emyyrHv51D1TbZWgvEsk6?=
 =?us-ascii?q?TUsojWJcEBqa64Bw9V3Jwj6xG6Dzq+1NQYnH8HLE9KeR6ejIjmJUvOIPbmAve7?=
 =?us-ascii?q?mlislzlqx/bYMb37GZjNMHfDn6n7fbpn6E5T1hAzzdZB6JJQEL0BJ+jzWkDpuN?=
 =?us-ascii?q?zCEhA5KxC0w/rgCNhl0oMeWGGPDbGDPKLdrF+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaHqgBPRpP12ZYWbwgtcGCWoKvhAxTO32iFKYVj5ffXayX7?=
 =?us-ascii?q?8m6TE9B4KrFoPDRoGrgLyc0ya3BJxWZmZaCl+SFXfkbZmLW/AJaCiKOM9ujiQE?=
 =?us-ascii?q?VaS9S48mzRyutgj6xKR9IurX/S0Ys5Tj1N9u6u3XlBEy8yF0DsuH32GMSWF0gn?=
 =?us-ascii?q?0HRzss0K9jpkx9z0+J0bJkjPxACdxT+/RJXx8gOp7Hz+x6DNPyVhjbftiTSlar?=
 =?us-ascii?q?WdGmATA3TtIszN4CeUd9G9O+jh/d2yqmGaMal7uOBJYs6KLTw2DxJ9phy3bBzK?=
 =?us-ascii?q?QhjEMpQs1VOW2ih65w7Q7TB4HSnkWdlqaqc7kc3SHX+GeCy2qOoF9XUApqXarZ?=
 =?us-ascii?q?WnAfY1Pcrc7l6UPaU7+uFbMnPxNcxsGYNKtFdMfljVVcS/flI9TRfWSxl2C0BR?=
 =?us-ascii?q?aLw7OMaJHne2Ec3CXbFUgFnBof/XeANQgiGCihp3jSAyBpFVLqe0ns6/VxqGun?=
 =?us-ascii?q?Tk8oyAGHd1Bu2KCr+hELn/CcS+kc3rQfuCg/rTV5B1K939PQC9qdqAttZqRcYd?=
 =?us-ascii?q?Uh4FhZ0WLVrRByPpulL6p6nF4Rbxx3v1/y1xVwEohAjckqrHYtzApuKaKZ0ElN?=
 =?us-ascii?q?dy+C0ZD3IL3XLmjy/Baga6PN3lHe0dCW+roA6fgiqlXjuh2pGVQm83l9z9ZV1H?=
 =?us-ascii?q?6c7I3QDAUOSZLxTlo39x9iqr7AZiky+YzV2mNsMKWuqTDCxs8mC/EjyhajeNdf?=
 =?us-ascii?q?LriJFAvzE80cGsivJ/Ymm1mvbhIYIu9S8LQ4MN+hd/uDwKSrJvpvnCq6jWRb54?=
 =?us-ascii?q?BwykKN9zdmRuHUxZoEwvGY0RGBVzfzl1qhtsH3mYZZZTAdBGa/yC7kBJJPaa12?=
 =?us-ascii?q?Z4oEFWCuI8ivzNVkm5HtQ2JY9EKkB14ews+peAadYEbn3QJN0kQbu3qnljWizz?=
 =?us-ascii?q?x1ij0msrCQ3CjTzOv8bhoHPWhLSXJmjVftJ4i0kt8bUFKpbwgviBuq+0L6y7JH?=
 =?us-ascii?q?q6R4KmnZWV1IcDTuL2F+TquwsaKPYs5O6J8ysSRbSv+8YU2cSrPmpxsa0iXjH3?=
 =?us-ascii?q?ZRxTwhdjGqvIn5kAJ+iG6HMHlzq3/Zc9lqxRjD/NzcWeJR3j0eSSl6kzbXHFu8?=
 =?us-ascii?q?P9qu/dmOjJfMqOO+V2GgVp1Vbybry5iNtC+65W1sHB2+kOq/mtzhEQgmzyD708?=
 =?us-ascii?q?NmWjnPrBb5eoPrzbi1Mfp7fkl0A1/x88p7FZt5kocqhpEQ2H4ai46R/XoGl2fz?=
 =?us-ascii?q?LNpa1bj/bHoLWT4E3drV7BL5101kK3KD35j5WWmFwst9e9m6ZXsb2iEn4MBLEq?=
 =?us-ascii?q?uU7KFEkjFzolq3tg/RZfl9njEAyfoh8nIagucJuBYzwSWZGLwdAU5YPSn0nRSS?=
 =?us-ascii?q?89++tLlXZHqocbWo0Up+nNOhA6uYrgBSRnn5YYsiEjFq7spkLl3MynLz55rgeN?=
 =?us-ascii?q?nRa9ITqxKVnw3Bj+hTNJI+iP4KiTB7NmL6uH0v0/Q7ggB23ZGmoIiHLH1g/L6+?=
 =?us-ascii?q?Ah5dLDH0Ztkc+jfwjaZFhcaW3puiHpFgGjUNQZvpQuikEDMUtfT7KQmOFCcwpW?=
 =?us-ascii?q?ucGbraBQWf8ltpr2rTE5C3MHGaPGIWws9lRBmZOUxTmgQUXCghk549FwCqwtHh?=
 =?us-ascii?q?cUhj6jAQ4F74tgVDyuZyOxbjVWffoR+iai0oR5iHMBpW8gZC6l/XMcOE6+J8AT?=
 =?us-ascii?q?pY8oe9rACXKWybegdIDXwPWkOeHFDuJb2u5djG8+iFCeuyNfrOYbOSqeNAU/eE?=
 =?us-ascii?q?346g0oxj/zyULMWAImFiD+En2kpERX14G8PZmygWSywKjS3NadSXpAy7+i1xoc?=
 =?us-ascii?q?Cy6/DrWAPp5YuSBLpeK9Rv+xaqgaidM+6cnjp2KTFd1pkU33/H1KAf3EIOiyFp?=
 =?us-ascii?q?bzStEaoPtS/OTKLTm69bFR0bazl0NMtH8a08xBRNOdXAh9Px1754iOM1ClhfWV?=
 =?us-ascii?q?zgnMGpedIFI2WnOFzbA0aLMayMJSfXzMHvfaO8VbpQgf1OuB2tojmbCVHsPzSZ?=
 =?us-ascii?q?mzntVhCiKuVMjCCdPBxDt4CxaBdtCW7/TN34bh23KsN4jTozwbcsnHPFKXYcMS?=
 =?us-ascii?q?Rgc0NKtrCQ8SJYgvBlF2Nd9HZqMemElDif7+TDLpYWsP1rAjl7lu5A4XQ6zadV?=
 =?us-ascii?q?4z9ARPBvhCTSqdtuqUm8kuaT0jpnTAZOqjFTiYOLp0piP6DZ9phGWXnc/RMN7X?=
 =?us-ascii?q?+fCxIFp9Z+Dt3vuqZQysXAla7pKTdC9c7U8tUYB8TONM2HN38hYlLVH2vOCxAZ?=
 =?us-ascii?q?QDK3HW7YgEBYkerU8Wea/bYgrZ25pJ0LAo1SUkEuDfJSXlZsGsEZO5ZfXT4+l7?=
 =?us-ascii?q?OfyskS6izt/1HqWMxGs8WfBbqpCvL1JWPD0LQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BNAAAnWRlch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgVqCESeMdYscgWglFJk5FRgTAYcdIjcGDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCCkjDII2DIJ7AwMBAj0BATcBBQkBAR8cAhMDVBkFglJLggEFpjWCH4J2A?=
 =?us-ascii?q?QEFgQCGJwiHfoMlgRwXgX+BRIg+AoRdIok2EocKkFQJhk+LERiRV5lzgVyBeE0?=
 =?us-ascii?q?wCDuCbIIbDBeIXoVeITIBgQMBAQE7JYo1gksBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BNAAAnWRlch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBgVq?=
 =?us-ascii?q?CESeMdYscgWglFJk5FRgTAYcdIjcGDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2D?=
 =?us-ascii?q?IJ7AwMBAj0BATcBBQkBAR8cAhMDVBkFglJLggEFpjWCH4J2AQEFgQCGJwiHfoM?=
 =?us-ascii?q?lgRwXgX+BRIg+AoRdIok2EocKkFQJhk+LERiRV5lzgVyBeE0wCDuCbIIbDBeIX?=
 =?us-ascii?q?oVeITIBgQMBAQE7JYo1gksBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="scan'208";a="44565408"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 12:36:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727643AbeLRUe5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 15:34:57 -0500
Received: from mail.kernel.org ([198.145.29.99]:56426 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727631AbeLRUey (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 15:34:54 -0500
Received: from localhost.localdomain (c-98-220-238-81.hsd1.il.comcast.net [98.220.238.81])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 40D1D218AE;
        Tue, 18 Dec 2018 20:34:52 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545165293;
        bh=YwpG66b1PbbNfHWKoWOhJAYkAamckUuMJ0ABZ58yDWU=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:In-Reply-To:
         References:From;
        b=jIM1qg/DLEXudzihcJkXyIEF1TAmkt6Hj8mH7VAYb5jf8p/fcpwUXeRj4El+4XSEv
         zKzvsf65oK8WZNs7voAZjQTGP0gFXf7IVaYQGBbH9QG4q1+uO+cemZwBAt8mo1VH7F
         +tWH8HxEF039UOJy7edONPFfZlIgY7CqxDYE+j3M=
From: Tom Zanussi <zanussi@kernel.org>
To: rostedt@goodmis.org
Cc: tglx@linutronix.de, mhiramat@kernel.org, namhyung@kernel.org,
        vedang.patel@intel.com, bigeasy@linutronix.de,
        joel@joelfernandes.org, mathieu.desnoyers@efficios.com,
        julia@ni.com, linux-kernel@vger.kernel.org,
        linux-rt-users@vger.kernel.org
Subject: [PATCH v9 07/15] tracing: Add hist trigger snapshot() action Documentation
Date: Tue, 18 Dec 2018 14:34:06 -0600
Message-Id: <6f732396a9a6c514e13a24250d3d94fb101561c3.1545161056.git.tom.zanussi@linux.intel.com>
X-Mailer: git-send-email 2.14.1
In-Reply-To: <cover.1545161056.git.tom.zanussi@linux.intel.com>
References: <cover.1545161056.git.tom.zanussi@linux.intel.com>
In-Reply-To: <cover.1545161056.git.tom.zanussi@linux.intel.com>
References: <cover.1545161056.git.tom.zanussi@linux.intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Tom Zanussi <tom.zanussi@linux.intel.com>

Add Documentation for the hist:handlerXXX($var).snapshot() action.

Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
---
 Documentation/trace/histogram.rst | 110 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 110 insertions(+)

diff --git a/Documentation/trace/histogram.rst b/Documentation/trace/histogram.rst
index 63e522107e59..353317bc3825 100644
--- a/Documentation/trace/histogram.rst
+++ b/Documentation/trace/histogram.rst
@@ -1874,6 +1874,7 @@ The available actions are:
 
   - <synthetic_event_name>(param list)         - generate synthetic event
   - save(field,...)                            - save current event fields
+  - snapshot()                                 - snapshot the trace buffer
 
 The following commonly-used handler.action pairs are available:
 
@@ -2030,6 +2031,115 @@ The following commonly-used handler.action pairs are available:
             Entries: 2
             Dropped: 0
 
+  - onmax(var).snapshot()
+
+    The 'onmax(var).snapshot()' hist trigger action is invoked
+    whenever the value of 'var' associated with a histogram entry
+    exceeds the current maximum contained in that variable.
+
+    The end result is that a global snapshot of the trace buffer will
+    be saved in the tracing/snapshot file if 'var' exceeds the current
+    maximum for any hist trigger entry.
+
+    Note that in this case the maximum is a global maximum for the
+    current trace instance, which is the maximum across all buckets of
+    the histogram.  The key of the specific trace event that caused
+    the global maximum and the global maximum itself are displayed,
+    along with a message stating that a snapshot has been taken and
+    where to find it.  The user can use the key information displayed
+    to locate the corresponding bucket in the histogram for even more
+    detail.
+
+    As an example the below defines a couple of hist triggers, one for
+    sched_waking and another for sched_switch, keyed on pid.  Whenever
+    a sched_waking event occurs, the timestamp is saved in the entry
+    corresponding to the current pid, and when the scheduler switches
+    back to that pid, the timestamp difference is calculated.  If the
+    resulting latency, stored in wakeup_lat, exceeds the current
+    maximum latency, a snapshot is taken.  As part of the setup, all
+    the scheduler events are also enabled, which are the events that
+    will show up in the snapshot when it is taken at some point:
+
+    # echo 1 > /sys/kernel/debug/tracing/events/sched/enable
+
+    # echo 'hist:keys=pid:ts0=common_timestamp.usecs \
+            if comm=="cyclictest"' >> \
+            /sys/kernel/debug/tracing/events/sched/sched_waking/trigger
+
+    # echo 'hist:keys=next_pid:wakeup_lat=common_timestamp.usecs-$ts0: \
+            onmax($wakeup_lat).save(next_prio,next_comm,prev_pid,prev_prio, \
+	    prev_comm):onmax($wakeup_lat).snapshot() \
+	    if next_comm=="cyclictest"' >> \
+	    /sys/kernel/debug/tracing/events/sched/sched_switch/trigger
+
+    When the histogram is displayed, for each bucket the max value
+    and the saved values corresponding to the max are displayed
+    following the rest of the fields.
+
+    If a snaphot was taken, there is also a message indicating that,
+    along with the value and event that triggered the global maximum:
+
+    # cat /sys/kernel/debug/tracing/events/sched/sched_switch/hist
+      { next_pid:       2101 } hitcount:        200
+	max:         52  next_prio:        120  next_comm: cyclictest \
+        prev_pid:          0  prev_prio:        120  prev_comm: swapper/6
+
+      { next_pid:       2103 } hitcount:       1326
+	max:        572  next_prio:         19  next_comm: cyclictest \
+        prev_pid:          0  prev_prio:        120  prev_comm: swapper/1
+
+      { next_pid:       2102 } hitcount:       1982 \
+	max:         74  next_prio:         19  next_comm: cyclictest \
+        prev_pid:          0  prev_prio:        120  prev_comm: swapper/5
+
+    Snapshot taken (see tracing/snapshot).  Details:
+	triggering value { onmax($wakeup_lat) }:        572	\
+	triggered by event with key: { next_pid:       2103 }
+
+    Totals:
+        Hits: 3508
+        Entries: 3
+        Dropped: 0
+
+    In the above case, the event that triggered the global maximum has
+    the key with next_pid == 2103.  If you look at the bucket that has
+    2103 as the key, you'll find the additional values save()'d along
+    with the local maximum for that bucket, which should be the same
+    as the global maximum (since that was the same value that
+    triggered the global snapshot).
+
+    And finally, looking at the snapshot data should show at or near
+    the end the event that triggered the snapshot (in this case you
+    can verify the timestamps between the sched_waking and
+    sched_switch events, which should match the time displayed in the
+    global maximum):
+
+    # cat /sys/kernel/debug/tracing/snapshot
+
+     <...>-2103  [005] d..3   309.873125: sched_switch: prev_comm=cyclictest prev_pid=2103 prev_prio=19 prev_state=D ==> next_comm=swapper/5 next_pid=0 next_prio=120
+     <idle>-0     [005] d.h3   309.873611: sched_waking: comm=cyclictest pid=2102 prio=19 target_cpu=005
+     <idle>-0     [005] dNh4   309.873613: sched_wakeup: comm=cyclictest pid=2102 prio=19 target_cpu=005
+     <idle>-0     [005] d..3   309.873616: sched_switch: prev_comm=swapper/5 prev_pid=0 prev_prio=120 prev_state=S ==> next_comm=cyclictest next_pid=2102 next_prio=19
+     <...>-2102  [005] d..3   309.873625: sched_switch: prev_comm=cyclictest prev_pid=2102 prev_prio=19 prev_state=D ==> next_comm=swapper/5 next_pid=0 next_prio=120
+     <idle>-0     [005] d.h3   309.874624: sched_waking: comm=cyclictest pid=2102 prio=19 target_cpu=005
+     <idle>-0     [005] dNh4   309.874626: sched_wakeup: comm=cyclictest pid=2102 prio=19 target_cpu=005
+     <idle>-0     [005] dNh3   309.874628: sched_waking: comm=cyclictest pid=2103 prio=19 target_cpu=005
+     <idle>-0     [005] dNh4   309.874630: sched_wakeup: comm=cyclictest pid=2103 prio=19 target_cpu=005
+     <idle>-0     [005] d..3   309.874633: sched_switch: prev_comm=swapper/5 prev_pid=0 prev_prio=120 prev_state=S ==> next_comm=cyclictest next_pid=2102 next_prio=19
+     <idle>-0     [004] d.h3   309.874757: sched_waking: comm=gnome-terminal- pid=1699 prio=120 target_cpu=004
+     <idle>-0     [004] dNh4   309.874762: sched_wakeup: comm=gnome-terminal- pid=1699 prio=120 target_cpu=004
+     <idle>-0     [004] d..3   309.874766: sched_switch: prev_comm=swapper/4 prev_pid=0 prev_prio=120 prev_state=S ==> next_comm=gnome-terminal- next_pid=1699 next_prio=120
+ gnome-terminal--1699  [004] d.h2   309.874941: sched_stat_runtime: comm=gnome-terminal- pid=1699 runtime=180706 [ns] vruntime=1126870572 [ns]
+     <idle>-0     [003] d.s4   309.874956: sched_waking: comm=rcu_sched pid=9 prio=120 target_cpu=007
+     <idle>-0     [003] d.s5   309.874960: sched_wake_idle_without_ipi: cpu=7
+     <idle>-0     [003] d.s5   309.874961: sched_wakeup: comm=rcu_sched pid=9 prio=120 target_cpu=007
+     <idle>-0     [007] d..3   309.874963: sched_switch: prev_comm=swapper/7 prev_pid=0 prev_prio=120 prev_state=S ==> next_comm=rcu_sched next_pid=9 next_prio=120
+  rcu_sched-9     [007] d..3   309.874973: sched_stat_runtime: comm=rcu_sched pid=9 runtime=13646 [ns] vruntime=22531430286 [ns]
+  rcu_sched-9     [007] d..3   309.874978: sched_switch: prev_comm=rcu_sched prev_pid=9 prev_prio=120 prev_state=R+ ==> next_comm=swapper/7 next_pid=0 next_prio=120
+      <...>-2102  [005] d..4   309.874994: sched_migrate_task: comm=cyclictest pid=2103 prio=19 orig_cpu=5 dest_cpu=1
+      <...>-2102  [005] d..4   309.875185: sched_wake_idle_without_ipi: cpu=1
+     <idle>-0     [001] d..3   309.875200: sched_switch: prev_comm=swapper/1 prev_pid=0 prev_prio=120 prev_state=S ==> next_comm=cyclictest next_pid=2103 next_prio=19
+
 3. User space creating a trigger
 --------------------------------
 
-- 
2.14.1

