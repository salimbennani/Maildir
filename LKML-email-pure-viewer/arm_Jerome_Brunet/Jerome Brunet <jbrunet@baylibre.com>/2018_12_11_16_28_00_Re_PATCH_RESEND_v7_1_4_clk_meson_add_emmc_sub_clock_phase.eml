Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:51:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 27BCE58079D;
	Tue, 11 Dec 2018 08:32:12 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 08:32:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ahl5U/xBRjMYmvpyIpLZXUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+osmwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95SWSJcAo2y?=
 =?us-ascii?q?cYUBAOgPPelEoYbyqFQArQCmBQSuH+7v1j1Fi2Xq0aEmyeksEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqMMXuCvy6nIyCvMZO5L1Dfn9YjIdA4uoe2RVr93c8re0lMvFx7DjlqO?=
 =?us-ascii?q?tYzoJCia2f4Nsmif7upvTvivhHA9pw5tpTivw94hh4/UjYwW0lDJ7Tt1zJoxKN?=
 =?us-ascii?q?GiVUJ2b8CoHIFNuyyZK4d6WMIvTmNwtCok0LIKpYO3cS0Ux5kpyBPSbuKIfJaT?=
 =?us-ascii?q?7R/iUeucLjZ1iXZ5dL+6mhq+7Umtxfb5W8avyllFsCRIn9zCu3wQyRPc982KR/?=
 =?us-ascii?q?l980qgxDqC0R3Y5PteLkAuj6XbLoYswr4umZoXtkTOBjH2mErog6+MbEkk+fan?=
 =?us-ascii?q?6/7hYrr4op+QLYh0ihvxMqg2m8y/B/o3MhQWUmSF5eix0Kfv8VD3TblUlPE6j6?=
 =?us-ascii?q?rUvIzAKckapKO1GwpV3Zwi6xa7ATemytMYnXwfIVJBeRKHiZXpOl7XLPD7E/i/?=
 =?us-ascii?q?mVKsnylvx/zfOb3gDJPNIWbZkLr6Y7Z95FBTyBApwdBc+Z1UELcBL+z3WkPrs9?=
 =?us-ascii?q?zYFBA5PxSuw+n7ENV9yp8eWWWXD6+dMaPSskGH6vggIumRf4IVvDf9K/445//h?=
 =?us-ascii?q?l3M5mFkdfbW30psTcny3AvNmI0CBa3r2ntgBCXsKvhY5TOHyiF2NSz9TZ2qoUK?=
 =?us-ascii?q?I7/D07CJ+mAp3FRoCim7GB2Ca7HptLZmFJEFyMEHHod5maVPcIci6dPshhkjkc?=
 =?us-ascii?q?X7i7V4AhzQ2utBP9y7d/LOrU/TMXuYjg1Nhy4e3TkxYy+CdwD8Sc1WGNUm51kn?=
 =?us-ascii?q?kJRz8wwKBwv0h9xk2f3qh/hvxSDcZT6O9RUgcmKZ7cyPR3BMrpWgLBedeJS0yq?=
 =?us-ascii?q?Qs+8DjEzVd8xx94OY0BgG9StlBzD3iyqA6MLmLyPHpA77qXc333pLcZn13nGzL?=
 =?us-ascii?q?Uhj0UhQsZXNm2pnKh/+xLXB47IiUqZkamqeL8Y3C7M8meD0GWPsFtZUA52TaXK?=
 =?us-ascii?q?Q3QfalHKotT+40PIV6WuBqg/Mgtd1c6CLbNHZcDzglVYWvjvItTebHi3m2erGx?=
 =?us-ascii?q?mIwLSAbI7pe2UY2CXQE0wEkwEV/XabOgkyHCaho2TCDDNwEVLjeV/j8e57qHmj?=
 =?us-ascii?q?VE870xmKb1F917qy4hMamOaTS+0N0b4euCcusTN0HE2j0NLQENeAowthfKNBYd?=
 =?us-ascii?q?Iy+ltH1GTZtxBjMZykNaxtmlkecwFvtUP0yxp3EplAkdQtrH4y0ApyKKeY0FRd?=
 =?us-ascii?q?dzOY3ZH8IKHXJnP1/BC1b67W21fe0NmN96cL6fQ4rUjjvQ6zGkoj9XVnz8da03?=
 =?us-ascii?q?+G6prWCwoSVIr7Ulwr+Bhiu7Hafi496pvO2n1oL6a1vSHN2tIzCOQ+1xavYs1Q?=
 =?us-ascii?q?MKWHFA/1Dc0XHMyuKO0sm1i0YRMIJuFS9KgoP8y4c/uKwrKkPOFlnDi+l2RI/J?=
 =?us-ascii?q?h90l6Q9yp7UuPJ34sFz+uE0QedVjb8jE2ussb4mY1fYTESH2y/yTXrBYJLZ61y?=
 =?us-ascii?q?e5oLBnmqI8Gt2tp+gJvtUWZC9FG/H1MGxNOpeR2KYlzn3A1fyV4YoWa6liu/1T?=
 =?us-ascii?q?B0lS8mrrCe3CDX3+vtbh4HNXNVS2l4ilfsJ5O5j9QbXEiucggomwGp5Uf8x6hH?=
 =?us-ascii?q?uqt/K3PfTltPfyjzN2tiSLe/tqKeY85T75MlqSVWUOWmbVGaULL9uAYa0yX4Em?=
 =?us-ascii?q?taxTA7cSyqu5rjkxx7jmKdMGh8rH7Ddc5swhff4cTWReRN0ToeWCl4lT7XC0C+?=
 =?us-ascii?q?P9az59WUlJTDsuekW2K6TJJTcirrzYKGtCSl421nGhm/n/G1mt36Hgk2yy7719?=
 =?us-ascii?q?92VSrWqBbweJXk16O/Meh/ZElnGEf869ZmGoF5ioYxhIsf2X8AipWX/HoHl3z+?=
 =?us-ascii?q?MdFa2aL4cXoMSiQHw9/T4Aj5xkJjKmiFyJ7+VnWY2sFhfcW1YnsK2iIh6MBHEK?=
 =?us-ascii?q?SU46ZFnSdvolq4sBjeYf5ynjoGzfsu6Xgag/wGuQY3zyWdBKwSEldcPSD2ixuI?=
 =?us-ascii?q?6NW+pr1NZGmzabiwyFZ+nde5AbGHowFcW2z2do0sHCBu9cV/LEzD0Gfo5Y76Yt?=
 =?us-ascii?q?nQYskethmVkxfGkuhUJ4g9lvsMhSp7J239uWcpxPI8jRxrxZu6ppSIK31x/KKl?=
 =?us-ascii?q?BR5VLiH1Z8QW+j33jKdRhMCW3520HpV6GzUGR5/oTfOuEDIPuvXrLQeOEDsgqn?=
 =?us-ascii?q?iFHbrTBxOQ6EBjr3jXCZCkK2mXJGUFzdVlXBSSP1ZQgAcQXDUnhJI5Eh2qydfl?=
 =?us-ascii?q?cEd44DAR+1H5pgFNyuJuKxnwTGPfqB20ZTczTZiVNABW4R1a50fJLcye6fp+Hy?=
 =?us-ascii?q?NC8Z2ksgONMXaXZxhSAWEKR0yEBE3jPr+06tnb6OWYAuu+L/3TYbSBs+BeVvGI?=
 =?us-ascii?q?xY6x3Yti5TqDKsKPPnx6Bf0hxkVDRWx5G9jemzgXSy0XkD/Nb9eGpBim/C17tN?=
 =?us-ascii?q?u/8PPtWALg/oaPD7pSMdNy+xG5m6uDNuiQhDpnJjZczJ8D2XjIyL0H1l4Ily5u?=
 =?us-ascii?q?byWtEagHtSPVTKLfhK5XDx0YayNyLsdI7Lg83g5COcHFkNP1y6V4g+UxC1dEU1?=
 =?us-ascii?q?zhh86oadYLI2G7KFPIGkKLOK6aKj3MxsH9ebm8RqFIjOVIqx2wvi6WHFX+PjuY?=
 =?us-ascii?q?jTnmSRCuPftIjCGaJxFevIC9chBwCWnsVt7maxu7MMNpgj0y27E7mnTKNWsEOz?=
 =?us-ascii?q?hmb0xNtqGQ7T9fgvhnB2xB739lIfOYlCqD8+bYKogZsf1wDyRwluJa5mk6yrRP?=
 =?us-ascii?q?4CFFQvx1hDXdrtp0r166lemPzyJtUABSpTZTmIKLoUJiNL3Z95ZaX3bE+RMN7W?=
 =?us-ascii?q?OIBBULp9tqENvvu69Lx9jLlaLzLipC8t3O8csdAcjUNNyIMH47PRX1Hz7UCVhN?=
 =?us-ascii?q?cTn+F2DWgVxclrmq/3vd+po7o578mZxIUrZdfFUwEvQVC08jF9sHdtM/eD4llf?=
 =?us-ascii?q?aylssT+WC5qhaZEMNTpJXcSuiVB/rHIj+IibhOfRZOyrT9e9c9LIr+jm5vcF5/?=
 =?us-ascii?q?kczgAVfWUMwF9i9rdBIyrVll+nFvSmw5wU+jYQSotixAXcWolwI731MtKd8m8y?=
 =?us-ascii?q?3hthJufgLH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAAAX5Q9ch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwgjsng3uIGYwQgg0Ulz4UgRADTBIBARgTAYcuIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQEDAQIgBBkBATcBBQkBAQoVA?=
 =?us-ascii?q?wICJgICAzEBBQEcBgESBYMcggIBBJonPIodcHwzgnYBAQWCRIRkCBJ5ihSBHBe?=
 =?us-ascii?q?BQD+BEYMShEYEgzuCV4sthFqQdgmRaYlmh1qJI49pBgIJBw8hgSWCDjMaCBsVg?=
 =?us-ascii?q?yeCG4NtilQ/MgGBBAEBiBaCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0AEAAAX5Q9ch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwgjsng3uIGYwQgg0Ulz4UgRADTBIBARgTAYcuIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYQEBAQEDAQIgBBkBATcBBQkBAQoVAwICJgICAzEBBQE?=
 =?us-ascii?q?cBgESBYMcggIBBJonPIodcHwzgnYBAQWCRIRkCBJ5ihSBHBeBQD+BEYMShEYEg?=
 =?us-ascii?q?zuCV4sthFqQdgmRaYlmh1qJI49pBgIJBw8hgSWCDjMaCBsVgyeCG4NtilQ/MgG?=
 =?us-ascii?q?BBAEBiBaCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55446474"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 08:32:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727384AbeLKQ2H (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 11:28:07 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:36127 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726628AbeLKQ2G (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 11:28:06 -0500
Received: by mail-wr1-f68.google.com with SMTP id u3so14768347wrs.3
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 08:28:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=baylibre-com.20150623.gappssmtp.com; s=20150623;
        h=message-id:subject:from:to:cc:date:in-reply-to:references
         :user-agent:mime-version:content-transfer-encoding;
        bh=f7K6GN5/aa8DCXT+gCMZwybLJkMHYSJQth2S97vanzo=;
        b=Np6rTVgqPxvJka6+7brT/Eim4w/Hd2CraROFW2i6SrUrrtDFf+5dxyKFNR3HTU+Zgt
         +vCWjDHnZGc+F2olDiYddyTEFyE/GNi7dXqazkNISskFklqX+tdSVgwQx266peIz9ct7
         ePiHh0fyp/cbKyR8yoQ4JWkKDUdxboWNTu/CO7Kbc+hPD0HikMWm5UZWPVkPYk6KshBt
         TVAN4io2nE8969uKqKTlM9HJeuZ9HHUQjRUln6G/cYZK4DZW7daog3ijzWsGzvI107jG
         echLmz0tB9thiCWCCAyAPjjj65fhYTyfmOvQecfFe+330PeTTAP6+VfsaquG/0Z/GKzF
         cpTw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:message-id:subject:from:to:cc:date:in-reply-to
         :references:user-agent:mime-version:content-transfer-encoding;
        bh=f7K6GN5/aa8DCXT+gCMZwybLJkMHYSJQth2S97vanzo=;
        b=LblpA5Ah9tM93hwDllq1RqnUuEE27joZdfvFtKLKjD2hxGtUjGpNjZShYVYhsQ1Lal
         zrnuOh5jOdHjgk2072Yf1QfGCYBsjkiPgi8FdW2Q9paqdnlhwgZID/LHiIuD5sFJwH4y
         VfTA+VGRoRZN29GGelkMGcNyyv2dR2HbpHLmK469h5FVe4XmJNki9u6u5UjpzN0/QL4n
         9t0S+1g3MrhI2ViESubtoy7zxG8a3GXuKbFKpOZFG3tQwl8z8Bk3JrN1iLLS7eJ+bNAO
         UPyd1D1s/czQSvYAG9cszp+Wlhhy3/5wZwIMVM/RDyGispkCWnxAQ2ZfoLGclTZAwUyE
         h6Fg==
X-Gm-Message-State: AA+aEWbRa/5vkUY5lFn925+k42zu5BHNqCRQER2M/0QET7HH6hDRvQ1l
        lxlADsaZFwmkXIxLW8QSCQ9XFA==
X-Google-Smtp-Source: AFSGD/UXMlaOEMcHHY+QljpOlM8+FZoMmIr7+8jsqKzy6aCccOZYqm9qFkRhYtZH8/ETWEHMRXDEXA==
X-Received: by 2002:adf:ce86:: with SMTP id r6mr14862307wrn.257.1544545683894;
        Tue, 11 Dec 2018 08:28:03 -0800 (PST)
Received: from boomer.baylibre.com ([2a01:e34:eeb6:4690:106b:bae3:31ed:7561])
        by smtp.gmail.com with ESMTPSA id y34sm44330957wrd.68.2018.12.11.08.28.01
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 11 Dec 2018 08:28:02 -0800 (PST)
Message-ID: <8e1c711b477eeee60809f33926cf9c6a52f530cd.camel@baylibre.com>
Subject: Re: [PATCH RESEND v7 1/4] clk: meson: add emmc sub clock phase
 delay driver
From: Jerome Brunet <jbrunet@baylibre.com>
To: Jianxin Pan <jianxin.pan@amlogic.com>,
        Neil Armstrong <narmstrong@baylibre.com>
Cc: Yixun Lan <yixun.lan@amlogic.com>,
        Kevin Hilman <khilman@baylibre.com>,
        Carlo Caione <carlo@caione.org>,
        Michael Turquette <mturquette@baylibre.com>,
        Stephen Boyd <sboyd@kernel.org>, Rob Herring <robh@kernel.org>,
        Miquel Raynal <miquel.raynal@bootlin.com>,
        Boris Brezillon <boris.brezillon@bootlin.com>,
        Martin Blumenstingl <martin.blumenstingl@googlemail.com>,
        Liang Yang <liang.yang@amlogic.com>,
        Jian Hu <jian.hu@amlogic.com>,
        Qiufang Dai <qiufang.dai@amlogic.com>,
        Hanjie Lin <hanjie.lin@amlogic.com>,
        Victor Wan <victor.wan@amlogic.com>, linux-clk@vger.kernel.org,
        linux-amlogic@lists.infradead.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        devicetree@vger.kernel.org
Date: Tue, 11 Dec 2018 17:28:00 +0100
In-Reply-To: <1544457877-51301-2-git-send-email-jianxin.pan@amlogic.com>
References: <1544457877-51301-1-git-send-email-jianxin.pan@amlogic.com>
         <1544457877-51301-2-git-send-email-jianxin.pan@amlogic.com>
Content-Type: text/plain; charset="UTF-8"
User-Agent: Evolution 3.30.2 (3.30.2-2.fc29) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 2018-12-11 at 00:04 +0800, Jianxin Pan wrote:
> From: Yixun Lan <yixun.lan@amlogic.com>
> 
> Export the emmc sub clock phase delay ops which will be used
> by the emmc sub clock driver itself.
> 
> Signed-off-by: Yixun Lan <yixun.lan@amlogic.com>
> Signed-off-by: Jianxin Pan <jianxin.pan@amlogic.com>
> ---
>  drivers/clk/meson/Makefile          |  2 +-
>  drivers/clk/meson/clk-phase-delay.c | 64
> +++++++++++++++++++++++++++++++++++++
>  drivers/clk/meson/clkc.h            | 13 ++++++++
>  3 files changed, 78 insertions(+), 1 deletion(-)
>  create mode 100644 drivers/clk/meson/clk-phase-delay.c
> 
> diff --git a/drivers/clk/meson/Makefile b/drivers/clk/meson/Makefile
> index 72ec8c4..39ce566 100644
> --- a/drivers/clk/meson/Makefile
> +++ b/drivers/clk/meson/Makefile
> @@ -2,7 +2,7 @@
>  # Makefile for Meson specific clk
>  #
>  
> -obj-$(CONFIG_COMMON_CLK_AMLOGIC) += clk-pll.o clk-mpll.o clk-phase.o
> +obj-$(CONFIG_COMMON_CLK_AMLOGIC) += clk-pll.o clk-mpll.o clk-phase.o clk-
> phase-delay.o
>  obj-$(CONFIG_COMMON_CLK_AMLOGIC_AUDIO)	+= clk-triphase.o sclk-div.o
>  obj-$(CONFIG_COMMON_CLK_MESON_AO) += meson-aoclk.o
>  obj-$(CONFIG_COMMON_CLK_MESON8B) += meson8b.o
> diff --git a/drivers/clk/meson/clk-phase-delay.c b/drivers/clk/meson/clk-
> phase-delay.c
> new file mode 100644
> index 0000000..84e7b63
> --- /dev/null
> +++ b/drivers/clk/meson/clk-phase-delay.c
> @@ -0,0 +1,64 @@
> +// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
> +/*
> + * Amlogic Meson MMC Sub Clock Controller Driver
> + *
> + * Copyright (c) 2017 Baylibre SAS.
> + * Author: Jerome Brunet <jbrunet@baylibre.com>
> + *
> + * Copyright (c) 2018 Amlogic, inc.
> + * Author: Yixun Lan <yixun.lan@amlogic.com>
> + * Author: Jianxin Pan <jianxin.pan@amlogic.com>
> + */
> +
> +#include <linux/clk-provider.h>
> +#include "clkc.h"
> +
> +static int meson_clk_phase_delay_get_phase(struct clk_hw *hw)
> +{
> +	struct clk_regmap *clk = to_clk_regmap(hw);
> +	struct meson_clk_phase_delay_data *ph;
> +	unsigned long period_ps, p, d;
> +	int degrees;
> +
> +	ph = meson_clk_get_phase_delay_data(clk);
> +	p = meson_parm_read(clk->map, &ph->phase);
> +	degrees = p * 360 / (1 << (ph->phase.width));
> +
> +	period_ps = DIV_ROUND_UP(NSEC_PER_SEC * 1000,
> +				 clk_hw_get_rate(hw));
> +
> +	d = meson_parm_read(clk->map, &ph->delay);
> +	degrees += d * ph->delay_step_ps * 360 / period_ps;
> +	degrees %= 360;
> +
> +	return degrees;
> +}
> +
> +static int meson_clk_phase_delay_set_phase(struct clk_hw *hw, int degrees)
> +{
> +	struct clk_regmap *clk = to_clk_regmap(hw);
> +	struct meson_clk_phase_delay_data *ph;
> +	unsigned long period_ps, d = 0, r;
> +
> +	ph = meson_clk_get_phase_delay_data(clk);
> +	period_ps = DIV_ROUND_UP(NSEC_PER_SEC * 1000, clk_hw_get_rate(hw));
> +
> +	/*
> +	 * First compute the phase index (p), the remainder (r) is the
> +	 * part we'll try to acheive using the delays (d).
> +	 */
> +	r = do_div(degrees, 360 / 1 << (ph->phase.width));
> +	d = DIV_ROUND_CLOSEST(r * period_ps,
> +			      360 * ph->delay_step_ps);
> +	d = min(d, PMASK(ph->delay.width));
> +
> +	meson_parm_write(clk->map, &ph->phase, degrees);
> +	meson_parm_write(clk->map, &ph->delay, d);
> +	return 0;
> +}
> +
> +const struct clk_ops meson_clk_phase_delay_ops = {
> +	.get_phase = meson_clk_phase_delay_get_phase,
> +	.set_phase = meson_clk_phase_delay_set_phase,
> +};
> +EXPORT_SYMBOL_GPL(meson_clk_phase_delay_ops);
> diff --git a/drivers/clk/meson/clkc.h b/drivers/clk/meson/clkc.h
> index 6b96d55..30470c6 100644
> --- a/drivers/clk/meson/clkc.h
> +++ b/drivers/clk/meson/clkc.h
> @@ -105,6 +105,18 @@ struct clk_regmap _name = {				
> 		\
>  	},								\
>  };
>  
> +struct meson_clk_phase_delay_data {
> +	struct parm			phase;
> +	struct parm			delay;
> +	unsigned int			delay_step_ps;
> +};
> +
> +static inline struct meson_clk_phase_delay_data *
> +meson_clk_get_phase_delay_data(struct clk_regmap *clk)
> +{
> +	return clk->data;
> +}

This is only usefull in the related clock driver, no need to export it

> +
>  /* clk_ops */
>  extern const struct clk_ops meson_clk_pll_ro_ops;
>  extern const struct clk_ops meson_clk_pll_ops;
> @@ -112,5 +124,6 @@ struct clk_regmap _name = {				
> 		\
>  extern const struct clk_ops meson_clk_mpll_ro_ops;
>  extern const struct clk_ops meson_clk_mpll_ops;
>  extern const struct clk_ops meson_clk_phase_ops;
> +extern const struct clk_ops meson_clk_phase_delay_ops;
>  
>  #endif /* __CLKC_H */


