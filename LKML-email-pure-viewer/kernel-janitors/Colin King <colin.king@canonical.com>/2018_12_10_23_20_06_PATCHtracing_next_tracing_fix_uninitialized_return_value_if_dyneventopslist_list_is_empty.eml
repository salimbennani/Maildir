Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:44:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BA4115807A2;
	Mon, 10 Dec 2018 15:20:14 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 15:20:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANn3pYhJev/9icbkMJtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvX4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIAOUOIelWr5Llp1YMtha+GQqhCfnzxjJSmnP736s32PkhHwHc2wwgGsoDvW?=
 =?us-ascii?q?rTrNXxNacSV/2+wqzJzTXFYPNdxDDw55TPchAloPGMW6h8ccnQyUkpGAPIlUmf?=
 =?us-ascii?q?ppbjPzOS0OQNsnSU4PBkVe61l2EnrARxryGpy8wxiYfJnpoYxk7Y+Sh92oo5ON?=
 =?us-ascii?q?O1RFBhbdK5E5ZcqzuWOop0T886R2xkpTw2xqAFtJO/ZiQHy5AqywTCZ/CabYSF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTte00FlUoSpfiNXMtW4C1wbV6seZTv?=
 =?us-ascii?q?tx5ECh2SyA1wzL6+FEJ147lbbDJpI/3rI9koAfvVnNEyPogkn6kaybelk+9uWp?=
 =?us-ascii?q?6enrerDmqYWdN49whAH+KKMumsmnDOQ8MwgOWXWb+Oul2L3g40L5WrNKgeMykq?=
 =?us-ascii?q?XAt5DbK8IbqbCjAwJOzIYj5AiwDy283NQbg3YHNlRFdwyDj4TzPFHOOv/4Ae+l?=
 =?us-ascii?q?g1uwiDdr2+zGPrr5D5XJL3jDk6nucaxy6k5B0wczydFf55RJCrAOOv7zW0nxtM?=
 =?us-ascii?q?DGAR89KQC73+HnCNBl3IMERW2PGrOZML/VsVKQ5uIgOeiMZJMPtzb6MfQl5+Pu?=
 =?us-ascii?q?gmU/mV8SZqSp2ZoXaHalHvVpOUmZYHzsgssfHmcOpAYxUOvqiFiaWz5Je3myR7?=
 =?us-ascii?q?485i08CI++D4fDQZ6ijKaC3Ce8GJ1WYGdGB0uIEXfpcYWERvgNZDiTIs9njjwL?=
 =?us-ascii?q?S7yhR5U92hGpsQ/w06BnIfbM+i0EqZLj08B46PfIlREy8jx0DN6R03uXQGF2hW?=
 =?us-ascii?q?4IQz423KZioU1y0FuD0K54g+BGGtxX/f9GTgA6NZvExexgF9/yQh7BfsuOSFu+?=
 =?us-ascii?q?QdWpGzcxQsg1w98PeUl9HdqigwvH3yqrBb8VirOKCIY18qLaw3j+OcJ9x2za26?=
 =?us-ascii?q?kmilksWtFPOnG+hq5j6wjTAJbEnFiDmKa0a6sQxi7N+32FzWqVok5YVgl8UaHG?=
 =?us-ascii?q?XXAaYkvbttD55kLET7+zBrUrKApBycieKqRUbt3ll0lJRPDmON7GeWK+h3+wBQ?=
 =?us-ascii?q?qUxrOLdIflZn8S3DvDB0QekwAc53CGNRMgCSenuG/eCD1uFVTyY0Lj6+V+qXW7?=
 =?us-ascii?q?TlMqwAGOdUFuy721+hsNj/yGV/wTxq4EuDsmqzhsAFa93tfWC92cpwphfKRQe8?=
 =?us-ascii?q?897E1A1WLDswx9P5qgL695i14acgR3uV7u1hptBoVBl8gqsG0lzA5oJa2E11NB?=
 =?us-ascii?q?ciuS3YrsNb3PNmny4BevZrbM1VHaztmX9bkA6fQip1r4oQGmC1At83Nk09lSzX?=
 =?us-ascii?q?uR/ZHKDAsUUZLsXUc77Rl6p7fGYiYj44PYz2FjMa6xsjXawdImGPMlygq8f9dY?=
 =?us-ascii?q?KK6FFBLyH9cGCMS0Ke0qm0KmbhQLPO1J8K40PsWmd+aJ2aKxPeZgmi6mgnpD4I?=
 =?us-ascii?q?xnzk2M8C98QPbS35kZ2/GYwheHVzDkgVe7s8D4hZpLZSsPEWq40yTkApBeZrdz?=
 =?us-ascii?q?fYoSFWihOcm3ychgiJ73XH5Y8kWuB1cH2M+vZBqTYEbx3QxW1UQLv3OnnTG0wC?=
 =?us-ascii?q?BzkzEstqCfxjDBw/z+dBobPW5GXGljjVb2LYm0ldwaR1Wobw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b/oxQAySPjHG?=
 =?us-ascii?q?hexDchezGxoJr5nB96iGObLHltqnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6BtDG05WpwDR29nvCznMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpaV8mAGkWvp?=
 =?us-ascii?q?MdVbxLjxbHwCRTMQx97V4Q7l2FBsL36TxoL5UGmdzdVlZ9WgfmwW3Sc95dhQCK?=
 =?us-ascii?q?iI9LxEgTd1ol2goALUYPh9nS0SxeEg6XEEmOEJpBQizj+GDb8MB0lYMjfhlxCJ?=
 =?us-ascii?q?79C4saVWa3yjcbm21Epig9+hCKuOrR1bWHb8Yp0iBzN/7t1jMFLQ133+8p3keN?=
 =?us-ascii?q?7Vbd4JtxybiRHAj/VOKJIql/oHni5nOWP7vX04xO83lx1u3ZemvIeZL2Vh5r62?=
 =?us-ascii?q?AhldNjftfcMc5intjbpCnsaRx42gBY9uGjIPXJv1V/6oFC8SuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03npwjGQCv2sPh?=
 =?us-ascii?q?a1115iwL6l77txtMyf9oNx/lXWfEvwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137Priu4sTA8/GFBuWkKfvCe66OqetYV/eH?=
 =?us-ascii?q?3p+v1opm/zCRNsSAJHViDvs72lZdUnB9AcjWhzIPSykPnSLXc8GbvAu8+jFwrs?=
 =?us-ascii?q?2n8PTkRgPv5YiMC7tTK9lv+Aq2gaCMN+GOniZ5NC1Y24gIxX/JzrgfwVEThztv?=
 =?us-ascii?q?dzmrDbQPqyrNQLjMla9QCh4RczlzO9dQ76IgwglNPtbWhcno1rFjlP46FVdEWU?=
 =?us-ascii?q?blmsGofsEKJ2C9NFXaBEeELriGJDvLw93pbqO4U7FfkOJUtxioszaBD0DjJiiD?=
 =?us-ascii?q?lyXuVx23LeFMjSSbMAZCt42nbhltCXbsTNT9Zx2/Md93iyA2wLIuinPLM24cLS?=
 =?us-ascii?q?Zzc0dXorKM6iNYh+11G3Zd4Xp9MemEhyGZ4vHYK5kMt/trByV0l+RC73U7y7ta?=
 =?us-ascii?q?9idERPNulSvWr95upUymk+aVxjpmVhpOtihEhIaRsUp+PqXZ88oIZXGRxw4A82?=
 =?us-ascii?q?iWQy4NvMdoBsGn77pX0cTCmL7bJzBF/9fV5o0bHceCbIqmNnUmeT/uHDjdFkNR?=
 =?us-ascii?q?SD+tOmb3nUFRkPiOsHaSq85phILrnc8lTbtaUhQWF/UVQhBuG9gDJtF0XzUrub?=
 =?us-ascii?q?WSiskO5HG3qF/aQ8AM7cOPbe6bHfi6cGXRtrJDfRZdhOqgdYk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BYAAAX9A5ch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YFaghEng3qIeI1UgzGPEIR8gXAXGBMBh20iNAkNAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKS+CNiQBgmkCIA8BRgYJAh8FAiYCAgNEFgESBYJRS4ICBAGmL4EviiyBC4Znh?=
 =?us-ascii?q?C+BVz+BEYdcgzuCVwKgdQcCgiEEjx8jkTwBLIh2kA6BRoIOMxojUIJsglCOCz8?=
 =?us-ascii?q?BMoEFAQGJT4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0BYAAAX9A5ch0O0hNFkHgEGBwaBUQkLAYFaghEng3qIeI1?=
 =?us-ascii?q?UgzGPEIR8gXAXGBMBh20iNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmkCI?=
 =?us-ascii?q?A8BRgYJAh8FAiYCAgNEFgESBYJRS4ICBAGmL4EviiyBC4ZnhC+BVz+BEYdcgzu?=
 =?us-ascii?q?CVwKgdQcCgiEEjx8jkTwBLIh2kA6BRoIOMxojUIJsglCOCz8BMoEFAQGJT4JNA?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="141562408"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 15:20:12 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729234AbeLJXUL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 18:20:11 -0500
Received: from youngberry.canonical.com ([91.189.89.112]:49974 "EHLO
        youngberry.canonical.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726841AbeLJXUK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 18:20:10 -0500
Received: from 1.general.cking.uk.vpn ([10.172.193.212] helo=localhost)
        by youngberry.canonical.com with esmtpsa (TLS1.0:RSA_AES_256_CBC_SHA1:32)
        (Exim 4.76)
        (envelope-from <colin.king@canonical.com>)
        id 1gWUqM-0001vh-Nt; Mon, 10 Dec 2018 23:20:06 +0000
From: Colin King <colin.king@canonical.com>
To: Steven Rostedt <rostedt@goodmis.org>,
        Ingo Molnar <mingo@redhat.com>
Cc: kernel-janitors@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH][tracing-next] tracing: fix uninitialized return value if dyn_event_ops_list list is empty
Date: Mon, 10 Dec 2018 23:20:06 +0000
Message-Id: <20181210232006.12348-1-colin.king@canonical.com>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Colin Ian King <colin.king@canonical.com>

Currently, in the unlikely case when the dyn_event_ops_list list is
empty then ret is never assigned a value and the function will return
with a uninitialized garbage return value from ret.  Fix this corner
case by setting ret to zero.

Fixes: 5448d44c3855 ("tracing: Add unified dynamic event framework")
Signed-off-by: Colin Ian King <colin.king@canonical.com>
---
 kernel/trace/trace_dynevent.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/trace/trace_dynevent.c b/kernel/trace/trace_dynevent.c
index dd1f43588d70..4f633476c307 100644
--- a/kernel/trace/trace_dynevent.c
+++ b/kernel/trace/trace_dynevent.c
@@ -74,7 +74,7 @@ int dyn_event_release(int argc, char **argv, struct dyn_event_operations *type)
 static int create_dyn_event(int argc, char **argv)
 {
 	struct dyn_event_operations *ops;
-	int ret;
+	int ret = 0;
 
 	if (argv[0][0] == '-' || argv[0][0] == '!')
 		return dyn_event_release(argc, argv, NULL);
-- 
2.19.1

