Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 15:31:40 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 51B1758037D;
	Thu, 22 Nov 2018 22:51:55 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 22:51:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+ibjBBL0grwOpZKCe9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPzzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVsVtRuzBxKhBP/sxzJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv7LqgSV+G1w7fMzT7eaf1Zxzb855TSfRAnpvGHQLV9ftfLxkkpFgPKkFGQ?=
 =?us-ascii?q?pZbhPzyL1+UCr3KU7+xnVe+0j24nqgdxrSK1xscrkIXJgZgVyl/d+Ch/3Y07K9?=
 =?us-ascii?q?q4SEthbt6lFptdrz2aNoV3QsM+X2Fnpjw6xqcatp68eSgG0JAnxx/Za/OdaYiI?=
 =?us-ascii?q?5QjvVOGLITd3nH5ldqiwiAqs/ke7ze38Ucq03ExWoSpCl9nBsG0G2R/L6sWfVP?=
 =?us-ascii?q?dx4kOs1SyS2w3d9O1IO104mKnHJ5I7w7M9lIIfvEbBEyPshUn7gq6bel8l9+Wo?=
 =?us-ascii?q?8ejqbbrrq5mBPIFukA7+KL4hmsmnDOQ4LAcOW2+b9Pyi1L3s40L5Wq9Gjv4ona?=
 =?us-ascii?q?nDtpDVO8AbqrS+Aw9P3YYv8xe/DzG439QEhXQLMk5JdRadg4T0NVzCPur0Aeq8?=
 =?us-ascii?q?jliwijtmxvLLMqXkAprXL3jDlLnhfax6605Z0AczydFf55RJCrAOOf7zWVH+tM?=
 =?us-ascii?q?beDhAnNwy42uHnCdt71owAQ2KCGbGZMKzMvl+S/O4vIPeDZJUTuDnjL/gp/fnu?=
 =?us-ascii?q?jWU2mVMFZ6mmwYMXaGykHvRhO0iZZXvsgtQfHmsQsQs+UffniFmDUT5VenazUL?=
 =?us-ascii?q?gw5jA9CIK6E4jDQpqhj6CG3Ce+BpdWfHxJCkiQEXf0cIWJQ/cMZziTIs99iDME?=
 =?us-ascii?q?UqKtS4881R60sg/6xKFqLu7V+i0eqJLi28J55+zVlREu6zN0C96R3H2KT2Fxhm?=
 =?us-ascii?q?kIXSM53LhjoUxhzVeOyap4g/tGGtBJ5PNJVQE6NZjbz+FhD9DyWwTBfsqGSVq8?=
 =?us-ascii?q?Q9WmBy0xQcw1w9MUf0l9HNCihAjZ3yW2G78Vi6CLBJss/63GxHjxJ8F9y3Xc2K?=
 =?us-ascii?q?k7lVYmQNBCNWmnhq556gjSCJTFk0Sfl6a2a6sc2DTB+3uEzWqLpEtYShJ/Ub3Z?=
 =?us-ascii?q?XXADYUvbtdf56VnET7O0DbQnMxFOyciNKqZRbt3pjFNGROrsOdjEYmKxnXuwCg?=
 =?us-ascii?q?iMxr+WcIXqfGAd1j3HCEcYiwAT4WqGNQ8mCyi8uW3eEiJhGUjvY0z29+l+s220?=
 =?us-ascii?q?TkkzwwGObE1h0r619wURhfydTfMTw70FtD0gqzVyAFaywdbWB8CcqApmeaVWec?=
 =?us-ascii?q?k970tf1WLFqwx9OYStIL14iV4AbQt7pUPu2A9xCoVbj8cqqmgnzA5zKaKezVNA?=
 =?us-ascii?q?eCmU3ZH2Or3LNGby+AqjZLLR2lHbyNyW4LsA6Owkq1X/uwGkDlYi83Ri09lSz3?=
 =?us-ascii?q?uc5pXLABAOUZ7rVUY37Rx6p7DcYiky/I7U0XxsMa+psj7Nwd4pBe0lygq+cNdb?=
 =?us-ascii?q?Kq+LCAjyE8gCDci0NOMqg0Spbg4DPO1K7qE0O92pdvSY16+rJupvhy+mgnld74?=
 =?us-ascii?q?B70UKM8DR8R/XM35YExfGYwwSGWy39jFenrsD4h4REaSsOEWq4zCjuHJRRabFq?=
 =?us-ascii?q?fYYXFWeuJNW6x9Vjh5L3R3FU7l+iB1Mc18+vdhqfdFj93QxW1UQKrn2rgyq4zz?=
 =?us-ascii?q?pokz43qqqTxjDBw+PndBAfIG5EWHFijUvwIYizl90aRkmoYBQzmxu/+En6wLJX?=
 =?us-ascii?q?pKJhIGnJQEdEZjT5IHtmUqStqLWCeclP6JUzvCVTUeS8Z02aS7Hnrxsb1SPjA3?=
 =?us-ascii?q?VRxDQhez62vZX5mgRwiHiBI3ZrsHrZZcZwyA/f5dzdX/JQ3iAKRDJliTnRHVW8?=
 =?us-ascii?q?O9ip/dOJl5bMqOy+VmShVoFNfinv14+PqCy75WhyCx2lg/+zgsHnERQ90SLj1d?=
 =?us-ascii?q?llTz/IrBX/Yonszai6KvhofkprBF/97cp1BId+n5A0hJER33gam5qU8WAGkWf1?=
 =?us-ascii?q?LdVUx6b+YGARSj4Mxt7f+BLl11F7LnKV24L5UW2Qw8t7aNm9eG8W2CM978ZRBa?=
 =?us-ascii?q?eQ7bxEmzZ1o1WioQLQZ/h9gikSyf805HEGhOEJvRInzj+BDbAKAUlYISvsmgyL?=
 =?us-ascii?q?79+kraVbfmavcaWq20p4ktCsF7WCogBaWHbkdZYuBy5w7sNjMF3S1H3/8J3reN?=
 =?us-ascii?q?7VbdgLrB2bjw/Aj/RJKJI2jvcKgCtnOWHnsnE/xe80kwdu3Y2ks4idMGpi4ri5?=
 =?us-ascii?q?AhFDOz3xZsMT/CztjKlEksaX2YCvAotuGjERUJT0SvKoFSoYte77OAaWDD08tn?=
 =?us-ascii?q?CbFKLDHQ+Y7UdqtXPOHIqtN3GKP3kZ1tRiSQKZJExehgAUQTo7koQ4FgCs2Mzu?=
 =?us-ascii?q?bkN56ioN6V7/rxtG0vhoOAXnUmfDuAeobS85R4OFIxpR6gFC+l3ZMciD7u9oGy?=
 =?us-ascii?q?FY/5uhrBGCK2CBZgRIC30JVVKAB1z5Irau4tzA+fCCBuWiN/vOfamOqetGWveK?=
 =?us-ascii?q?352v15Vp/y2WOsWTJHViDOA72kleXXB/AcvZgC4CSygWlyLLcs6aqw2w+ixxrs?=
 =?us-ascii?q?Cj7vvrXBjj6peIC7tXKd9v4Qy5gb+fN+6MgyZ0MTZZ1pQRxX/R1bgQxlgShzt1?=
 =?us-ascii?q?dzmqF7QAujXATKbRmq9REh4aZDl/NMpO76IgwAZNPdTXhc/y1r59lvQ1EUtKVU?=
 =?us-ascii?q?T9msG1YswHO2G9O03GBEaIN7SGJCfHw8LtYaO7Rr1fkv9UtwCruTuAF0/jPzKD?=
 =?us-ascii?q?lyTmVhy1MOFMij2bMwJauI2nbhltDm3jRsr8ahKnKN93kSE2wbosi3zQKG4TKi?=
 =?us-ascii?q?J8fF1Nr7GK6SNYg+5yG2hA7npjMOmFlDyV7+jeKpYKr/RrBj54mP5d4HQ/07FV?=
 =?us-ascii?q?9j1LRORpmCvOqd5ju02mkuiKyjZ9TBVCsCpEhIKVskVkIqjZ8phAWXDZ/BMC92?=
 =?us-ascii?q?mQChIKp8d7Bd3roaxf1t/PlKfrIjdY793U5dccB9TTKM+fMHsuKxzpGDvVDAsD?=
 =?us-ascii?q?VTGqNGHfiFZbkPGd7XCVqpk6qp7xmJsBULNbVVo1Fu8EBURhBtANPJB3XjZ32Y?=
 =?us-ascii?q?Kc2fEF5DKYrVGFW8NblpbZV/6TCLPkLzPPyfFYZxoF26npa54eOoz91GRtb1B7?=
 =?us-ascii?q?mMLBHE+UFdRMpDBxKxM5r19E2GZxQ3d12E//bA6ppngJGq2ahBkz3yd3Z+Ug8H?=
 =?us-ascii?q?/I7kU8L1zN7H88mU8wlNGjhT2Dezf3K4+0XIdfES2ysFI+ZMCoCz1pZBG/yBQ3?=
 =?us-ascii?q?fAzPQKhc2v45LThm?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAADWovdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmkDfyeDeYgYi36BYC0UlyeBcxIBARgHDAGBS4cHIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECIAQLAQ0BATcBBQkBAQoOCgICJ?=
 =?us-ascii?q?gICAzEBBQEcBgEMBgIBAQEEgxgBggEEAQqbVTyKHXB8M4J2AQEFgkOEUAgSeYl?=
 =?us-ascii?q?igRyBVz+BOIJrgxALAgKEY4JXh1KBSYYAgUWOT1UHAoIcBIN7YYotBhiCJocrE?=
 =?us-ascii?q?IcnjUOKRgIEAgQFAgUPIYElgg0zGjCDLwmCEoNthRSFPz8ygQUBAYwiAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAADWovdbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgmk?=
 =?us-ascii?q?DfyeDeYgYi36BYC0UlyeBcxIBARgHDAGBS4cHIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkjDII2JAGCYgECAwECIAQLAQ0BATcBBQkBAQoOCgICJgICAzEBBQEcBgE?=
 =?us-ascii?q?MBgIBAQEEgxgBggEEAQqbVTyKHXB8M4J2AQEFgkOEUAgSeYligRyBVz+BOIJrg?=
 =?us-ascii?q?xALAgKEY4JXh1KBSYYAgUWOT1UHAoIcBIN7YYotBhiCJocrEIcnjUOKRgIEAgQ?=
 =?us-ascii?q?FAgUPIYElgg0zGjCDLwmCEoNthRSFPz8ygQUBAYwiAQE?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="53426163"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 22:51:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2502166AbeKWReo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 12:34:44 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:36409 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2393326AbeKWRem (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 12:34:42 -0500
Received: by mail-wr1-f67.google.com with SMTP id t3so11234443wrr.3
        for <linux-kernel@vger.kernel.org>; Thu, 22 Nov 2018 22:51:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=8fRs6K7Qo+Olips1i1eYdvrYuqy7YjLDebXbeK3WRmo=;
        b=A4o9qMBvIfFNsmKWBbQvV3jPZ7SUxozomE/Wszp157wFFXo+kgbCFBjCtQe4m1z/Bh
         6A4lYS+74Pbp5xcWCo7KMpo6lKH2Paq4FFYL+lnUL56bSYNN5iRP3DnKYYxCuB9q78bT
         BzUQHOYaS6u08vRlrMzA/AICo+hE7rfDVpj+Y=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=8fRs6K7Qo+Olips1i1eYdvrYuqy7YjLDebXbeK3WRmo=;
        b=e/lLF7Udr+/PjzwmhLVJZ5Rm+kEVxPWzRJ8A4cata13Yp8/s02czGo5rfN/KCd/f+3
         FSNoUA/iEnCpZneVYb8lXCrX9lkbYL1Cf2FzJvIDDqHptASy+BueNAeS2SrwuDGKRKmG
         P8L6rhjbHIT2H8KdVokunAsYzSUGT3XPXf0wDizAn5bsaljbLHTOTnUrNz6AWfuWKIoz
         MTiY7fQCTeNGyXg6e1NjWQGbPZCe9LqM5gHCgGZeA2wp26xOwyx9jJezzoR1Qrv+Wtrb
         i0L2DvtjV+ELxV77o9tz2eKV4xTudBD75mKhfb3S1AYyuz5R+crjZkARgZDvS37RmW0t
         CRBQ==
X-Gm-Message-State: AA+aEWbR4NvvfOaqFt9KvKRjtjvt8pNUc/+JW5J0/k/dVW4MqNy6EDi0
        k14QDTz/BYPgh1aQ+ysi1jx/VqpEa/A=
X-Google-Smtp-Source: AFSGD/VXFEShY2EtI4n5n5JJ5QWfjczZ6RtyGQorsBVfO87E3ft3PKs47SX2F5Ia6/xXiCWUCiSMUw==
X-Received: by 2002:adf:e846:: with SMTP id d6mr12941071wrn.72.1542955905598;
        Thu, 22 Nov 2018 22:51:45 -0800 (PST)
Received: from [192.168.0.40] (44.65.136.77.rev.sfr.net. [77.136.65.44])
        by smtp.googlemail.com with ESMTPSA id b131sm8654436wma.21.2018.11.22.22.51.44
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 22:51:44 -0800 (PST)
Subject: Re: [PATCH v2 1/3] thermal: tegra: continue if sensor register fails
To: Wei Ni <wni@nvidia.com>, thierry.reding@gmail.com,
        linux-tegra@vger.kernel.org
Cc: rui.zhang@intel.com, edubezval@gmail.com,
        linux-kernel@vger.kernel.org
References: <1542103567-5521-1-git-send-email-wni@nvidia.com>
 <1542103567-5521-2-git-send-email-wni@nvidia.com>
 <d212af68-fd18-74d4-d81c-ed8b3c0f136a@linaro.org>
 <70f08208-d04c-c9a4-07e6-d377c33a9386@nvidia.com>
 <d77fe117-3cde-108f-e1d7-2871f3d4c485@linaro.org>
 <5e09bc13-7880-40f2-3f90-01d2cc3510ba@nvidia.com>
 <299fc8a0-39e4-1bd9-821b-4712a7f25028@linaro.org>
 <2f5d3135-6a25-82ce-cf3a-d804484644a1@nvidia.com>
From: Daniel Lezcano <daniel.lezcano@linaro.org>
Message-ID: <d9668442-94b7-b673-51cf-66e92b6a31ab@linaro.org>
Date: Fri, 23 Nov 2018 07:51:43 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <2f5d3135-6a25-82ce-cf3a-d804484644a1@nvidia.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


Hi wei,

On 23/11/2018 07:15, Wei Ni wrote:
> 
> 
> On 22/11/2018 9:07 PM, Daniel Lezcano wrote:
>> On 22/11/2018 08:10, Wei Ni wrote:
>>>
>>>
>>> On 21/11/2018 8:51 PM, Daniel Lezcano wrote:
>>>> On 21/11/2018 11:23, Wei Ni wrote:
>>>>>
>>>>>
>>>>> On 21/11/2018 4:55 PM, Daniel Lezcano wrote:
>>>>>> On 13/11/2018 11:06, Wei Ni wrote:
>>>>>>> Don't bail when a sensor fails to register with the
>>>>>>> thermal zone and allow other sensors to register.
>>>>>>> This allows other sensors to register with thermal
>>>>>>> framework even if one sensor fails registration.
>>>>>>
>>>>>> I'm not sure if ignoring the error is really safe. Can you describe the
>>>>>> real situation you want to overcome ? How do you differentiate critical
>>>>>> sensors ?
>>>>>
>>>>> The driver will always try to register 4 thermal zones, including cpu,
>>>>> gpu, mem and pll, but if the dts file doesn't set the corresponding
>>>>> sensors, then the register will be failed.
>>>>> Normally, the dts file will set all 4 sensors, but there may have some
>>>>> platform doesn't support them all. So we post this patch.
>>>>
>>>> Ignoring errors is not the way to go to support different platforms. Fix
>>>> the DT.
>>>
>>> The issue isn't in DT file. The Tegra soc thermal include 4 sensors:
>>> cpu, gpu, mem, pll. But in some platforms, for example, we may only need
>>> to support 2 sensors, such as cpu and gpu, so we only configure these
>>> two senors in DT file. But the driver will always try to register 4
>>> sensors, cpu/gpu/mem/pll, so mem and pll will be registered failed. So
>>> in this case we need to ignoring the failure, and continue to enable the
>>> driver.
>>
>> You can fix this by changing the driver to support the platform and
>> register the sensor you are interested in.
>>
>> Ignoring errors is not a good idea.
> 
> If hit the errors, the driver will print out the warning. In current
> code, the driver probe routine will return failure directly, indeed it
> didn't do anything either except print out warnings.
> I think this error should not block other sensors' registration. Let's
> consider this case, we have four sensors, if the one sensor register
> failed, then the driver return probe failure, so the drive will not be
> enabled, and other sensor can't work either, it mean the device may boot
> up without any thermal sensors.
> Or if the error is the -ENODEV, that mean the we didn't set
> corresponding sensor id in the dt file, so we can continue to register.
> If the error is other value, then we can return directly.

It is a possibility but may be there are a couple of alternatives:

1. If there is a compatible string for the platform variant, use it to
probe the right sensors

or

2. Use the qoriq driver approach by reparsing the DT and find out the
thermal zone and their respective sensor id.


>>>>> BTW, what do you mean "critical sensors"? We will set critical trip temp
>>>>> for all sensors.
>>>>
>>>> I meant sensor for thermal zone getting really high temperature.
>>>
>>> We doesn't have the critical sensors. We set the critical trip temp for
>>> all registered sensors. And these trip temp is set to the Tegra
>>> hardware. So it mean if the temperature reached the critical trip point,
>>> then the system will be shutdown directly.
>>>
>>>>
>>>>
>>>>>>> Signed-off-by: Wei Ni <wni@nvidia.com>
>>>>>>> ---
>>>>>>>  drivers/thermal/tegra/soctherm.c | 8 +++++---
>>>>>>>  1 file changed, 5 insertions(+), 3 deletions(-)
>>>>>>>
>>>>>>> diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soctherm.c
>>>>>>> index ed28110a3535..a824d2e63af3 100644
>>>>>>> --- a/drivers/thermal/tegra/soctherm.c
>>>>>>> +++ b/drivers/thermal/tegra/soctherm.c
>>>>>>> @@ -1370,9 +1370,9 @@ static int tegra_soctherm_probe(struct platform_device *pdev)
>>>>>>>  							 &tegra_of_thermal_ops);
>>>>>>>  		if (IS_ERR(z)) {
>>>>>>>  			err = PTR_ERR(z);
>>>>>>> -			dev_err(&pdev->dev, "failed to register sensor: %d\n",
>>>>>>> -				err);
>>>>>>> -			goto disable_clocks;
>>>>>>> +			dev_warn(&pdev->dev, "failed to register sensor %s: %d\n",
>>>>>>> +				 soc->ttgs[i]->name, err);
>>>>>>> +			continue;
>>>>>>>  		}
>>>>>>>  
>>>>>>>  		zone->tz = z;
>>>>>>> @@ -1434,6 +1434,8 @@ static int __maybe_unused soctherm_resume(struct device *dev)
>>>>>>>  		struct thermal_zone_device *tz;
>>>>>>>  
>>>>>>>  		tz = tegra->thermctl_tzs[soc->ttgs[i]->id];
>>>>>>> +		if (!tz)
>>>>>>> +			continue;
>>>>>>>  		err = tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);
>>>>>>>  		if (err) {
>>>>>>>  			dev_err(&pdev->dev,
>>>>>>>
>>>>>>
>>>>>>
>>>>
>>>>
>>
>>


-- 
 <http://www.linaro.org/> Linaro.org │ Open source software for ARM SoCs

Follow Linaro:  <http://www.facebook.com/pages/Linaro> Facebook |
<http://twitter.com/#!/linaroorg> Twitter |
<http://www.linaro.org/linaro-blog/> Blog

