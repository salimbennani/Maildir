Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 22:12:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4D5D858061F
	for <like.xu@linux.intel.com>; Thu, 13 Dec 2018 06:00:26 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 06:00:26 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AGipaERRG85WEo7D9ejrQeE9wJ9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBaCt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cYUPAeQDMuhboYbyqEcBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BA5H98UrH?=
 =?us-ascii?q?jYsM/4OaUUXOuozKfI1zLDb/ZO1Dn68ofIaBMhoeyXXbltbcfR00wvGBjfjlWN?=
 =?us-ascii?q?sozlIy2a1v4QuGWc9eVgT+evhHU9qwFsuTWv3NkjhZTJho0P1lDI7zl2wIEwJd?=
 =?us-ascii?q?ChTkNwfNCqEJxVty6ANot2RNsvQ31ouSYi1LIKo5+7fDMMxZ86xBDfc+SKf5aU?=
 =?us-ascii?q?7h/gTuqdPCp0iXF/dL6hiRu/8VKsxvD+W8WszlpGsi5InsPRun0DyRDf8NWLR/?=
 =?us-ascii?q?hz80u7xzqC1Abe4fxeL08uj6rUMZshz6YwlpUNtUTDGTf7mEH3jK+NakUk4fKk?=
 =?us-ascii?q?6+vhYrX7vJOcMJV0ig7mPqQvnMywH/g4PxAQU2SH+umwzqDv8VD6TblQkPE7nK?=
 =?us-ascii?q?nUvIrHKckZvqK5BhVa0ocn6xaxFTem19EYkGEeLF1bfRKHkpHlNEzQL/DmE/i/?=
 =?us-ascii?q?h02gnyxsx/DbOL3uHovCLmPEnLflfLZ96FBTxBA8zNBC/59UDrABIPTuWk7+rt?=
 =?us-ascii?q?DYDxk5MxCqzObjEtlyyoQeWWeUD6+fN6PSt1CI5uQyI+WWY48Vojn9J+A/5/Hy?=
 =?us-ascii?q?lX85hUMdfa6x0JsTaXC4HeppL1+WYHrxmdoBFWYKvgwjTO3lklGCUDhTZ2qsUK?=
 =?us-ascii?q?I4/D00FIWmDYKQDr2rm6GLiSenAoVNNCcBDlGXDWyucYKCVPERLiWILYhkmz0A?=
 =?us-ascii?q?ULGnDIg5yRCpshS90rdiM6/Y9zMVscHe0sNo7bjWnBA26TsmFsmYziSBQn95mi?=
 =?us-ascii?q?YSSiYr0btjiUp6zFiFzO5/mfMPDsFZ5f5CTlInM4XBxfdxEdH4V1H9eYKsQUyt?=
 =?us-ascii?q?B/ygDSuwBvYs2dIHfg4pHty4hRnF0zCnRbsIjbGCGbQu/67c1mS3LMF4nSXozq?=
 =?us-ascii?q?4k2nwvWMhSLiWPnKt17RXIG4PT2xGQjaOgb7k0xiPB9G6fi2GJuRcLA0ZLTazZ?=
 =?us-ascii?q?UCVHNQPtptPj6xaHFuf2BA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A3AABEZRJcmBHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGBMIE5gRYTg3yIeI1AiSGOM4FzFBgDEYRAgwQiNQgNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEBAQgLCwYbDiMMgjYFAgMaAQaCWwEBAQECAQECICMKKQMCAQECBgEBChgCA?=
 =?us-ascii?q?gUdBAICAwELAQQYMRMFFoMGAYFzBQgBBKZ2gS+EQUCFL4ELh0eDaheBf4MlfoU?=
 =?us-ascii?q?BgwSCNSICj0eRSAmHDYpMGIFcTYdDNocomUmBSAGCC3AVgycJgh4XEogJgRSEb?=
 =?us-ascii?q?0AxgQccijWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0A3AABEZRJcmBHrdtBjHQEBBQEHBQGBUgcBCwGBMIE5gRY?=
 =?us-ascii?q?Tg3yIeI1AiSGOM4FzFBgDEYRAgwQiNQgNAQMBAQEBAQECARMBAQEBAQgLCwYbD?=
 =?us-ascii?q?iMMgjYFAgMaAQaCWwEBAQECAQECICMKKQMCAQECBgEBChgCAgUdBAICAwELAQQ?=
 =?us-ascii?q?YMRMFFoMGAYFzBQgBBKZ2gS+EQUCFL4ELh0eDaheBf4MlfoUBgwSCNSICj0eRS?=
 =?us-ascii?q?AmHDYpMGIFcTYdDNocomUmBSAGCC3AVgycJgh4XEogJgRSEb0AxgQccijWBdwE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="44820719"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 13 Dec 2018 06:00:25 -0800
Received: from localhost ([::1]:52774 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXRXM-0006Vk-BX
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 09:00:24 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46940)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gXRWK-00060n-KG
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 08:59:21 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gXRWD-0001M3-SE
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 08:59:18 -0500
Received: from mx1.redhat.com ([209.132.183.28]:43518)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gXRWD-0001Jz-BM
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 08:59:13 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 4C18E3084244;
	Thu, 13 Dec 2018 13:59:11 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id E01F51019630;
	Thu, 13 Dec 2018 13:59:08 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 752BA113860E; Thu, 13 Dec 2018 14:59:07 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
	<20181208111606.8505-23-marcandre.lureau@redhat.com>
	<874lbkoxy8.fsf@dusky.pond.sub.org>
	<CAMxuvaxu_G62E0Gg677FvCapiswJ+6i3wqzrg78qOVtsizHuVg@mail.gmail.com>
Date: Thu, 13 Dec 2018 14:59:07 +0100
In-Reply-To: <CAMxuvaxu_G62E0Gg677FvCapiswJ+6i3wqzrg78qOVtsizHuVg@mail.gmail.com>
	(=?utf-8?Q?=22Marc-Andr=C3=A9?= Lureau"'s message of "Tue, 11 Dec 2018
	20:07:49 +0400")
Message-ID: <87ftv1r0ic.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.40]);
	Thu, 13 Dec 2018 13:59:11 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-4.0 v7 22/27] qapi: add 'If:' condition
 to enum values documentation
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Michael Roth <mdroth@linux.vnet.ibm.com>, "Armbruster,
	Markus" <armbru@redhat.com>, qemu-devel <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:

> Hi
>
> On Tue, Dec 11, 2018 at 8:00 PM Markus Armbruster <armbru@redhat.com> wro=
te:
>>
>> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>>
>> > Use a common function to generate the "If:..." line.
>> >
>> > While at it, get rid of the existing \n\n (no idea why it was
>> > there). Use a line-break in member description, this seems to look
>> > slightly better in the plaintext version.
>>
>> Where exactly in the patch is this done?
>
> -    if ifcond:
> -        body +=3D '\n\n@b{If:} @code{%s}' % ", ".join(ifcond)
> +    body +=3D texi_if(ifcond, suffix=3D'')

Thanks.  I suspected that much, but wasn't sure.

> See also doc-good.texi output
>
>>
>> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
>> > ---
>> >  scripts/qapi/doc.py             | 24 +++++++++++++++---------
>> >  tests/qapi-schema/doc-good.json |  4 +++-
>> >  tests/qapi-schema/doc-good.out  |  1 +
>> >  tests/qapi-schema/doc-good.texi |  2 +-
>> >  4 files changed, 20 insertions(+), 11 deletions(-)
>> >
>> > diff --git a/scripts/qapi/doc.py b/scripts/qapi/doc.py
>> > index 76cb186ff9..2133ded47e 100755
>> > --- a/scripts/qapi/doc.py
>> > +++ b/scripts/qapi/doc.py
>> > @@ -126,19 +126,26 @@ def texi_body(doc):
>> >      return texi_format(doc.body.text)
>> >
>> >
>> > -def texi_enum_value(value):
>> > +def texi_if(ifcond, prefix=3D'\n', suffix=3D'\n'):
>> > +    """Format the #if condition"""
>> > +    return '%s@b{If:} @code{%s}%s' % (
>> > +        prefix, ', '.join(ifcond), suffix) if ifcond else ''
>>
>> I like the ternary operator, but I nevertheless think this function is
>> easier to read as
>>
>>        if not ifcond:
>>            return ''
>>        return '%s@b{If:} @code{%s}%s' % (prefix, ', '.join(ifcond), suff=
ix)
>>
>
> No difference to me, sure
>
>> > +
>> > +
>> > +def texi_enum_value(value, desc, suffix=3D''):
>> >      """Format a table of members item for an enumeration value"""
>> > -    return '@item @code{%s}\n' % value.name
>> > +    return '@item @code{%s}\n%s%s' % (
>> > +        value.name, desc, texi_if(value.ifcond, prefix=3D'@*'))
>>
>> Do you ignore suffix intentionally?
>
> yes

That's kind of surprising, until you pry open the abstraction and
realize that we reach this one only from the first call of member_func()
below, which ...

>>
>> >
>> >
>> > -def texi_member(member, suffix=3D''):
>> > +def texi_member(member, desc=3D'', suffix=3D''):
>> >      """Format a table of members item for an object type member"""
>> >      typ =3D member.type.doc_type()
>> >      membertype =3D ': ' + typ if typ else ''
>> > -    return '@item @code{%s%s}%s%s\n' % (
>> > +    return '@item @code{%s%s}%s%s\n%s' % (
>> >          member.name, membertype,
>> >          ' (optional)' if member.optional else '',
>> > -        suffix)
>> > +        suffix, desc)
>> >
>> >
>> >  def texi_members(doc, what, base, variants, member_func):
>> > @@ -155,7 +162,7 @@ def texi_members(doc, what, base, variants, member=
_func):
>> >              desc =3D 'One of ' + members_text + '\n'
>> >          else:
>> >              desc =3D 'Not documented\n'
>> > -        items +=3D member_func(section.member) + desc
>> > +        items +=3D member_func(section.member, desc)
>>
>> Here, you pass a @desc argument, but no @suffix.
>>
>> @member_func is either texi_enum_value() or texi_member().  Works.

... doesn't pass @suffix.  So @suffix is empty when we ignore it.

>> >      if base:
>> >          items +=3D '@item The members of @code{%s}\n' % base.doc_type=
()
>> >      if variants:
>> > @@ -165,7 +172,7 @@ def texi_members(doc, what, base, variants, member=
_func):
>> >              if v.type.is_implicit():
>> >                  assert not v.type.base and not v.type.variants
>> >                  for m in v.type.local_members:
>> > -                    items +=3D member_func(m, when)
>> > +                    items +=3D member_func(m, suffix=3Dwhen)
>>
>> Here, you pass a @suffix argument, but no @desc.
>>
>> texi_enum_value() would choke on that, but it can't occur here, because
>> enums have no variants.
>>
>> Still, I'd prefer texi_enum_value() and texi_member() to have the exact
>> same signature.
>
> OK (not sure what is the more pythonic way)

I suspect there's a clean solution struggling to get out.  But I can't
grasp it yet.

>>
>> >              else:
>> >                  items +=3D '@item The members of @code{%s}%s\n' % (
>> >                      v.type.doc_type(), when)
>> > @@ -185,8 +192,7 @@ def texi_sections(doc, ifcond):
>> >              body +=3D texi_example(section.text)
>> >          else:
>> >              body +=3D texi_format(section.text)
>> > -    if ifcond:
>> > -        body +=3D '\n\n@b{If:} @code{%s}' % ", ".join(ifcond)
>> > +    body +=3D texi_if(ifcond, suffix=3D'')
>> >      return body
>> >
>> >
[...]

