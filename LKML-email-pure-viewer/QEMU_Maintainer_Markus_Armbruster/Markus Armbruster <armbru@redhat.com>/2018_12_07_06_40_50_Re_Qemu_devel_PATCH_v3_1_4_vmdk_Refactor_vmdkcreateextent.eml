Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 16:18:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2E9F5580375
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 22:41:17 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 22:41:16 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A5UP79hOFt1C2qOWWXGkl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/v4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSSJBDI2+?=
 =?us-ascii?q?YIUMAeUOMvpXoZTlp1YMrxWzChSgCe3zxjBWnX/7xrE63/g7HA3awAAtBc4CvX?=
 =?us-ascii?q?LJp9v1LqcSVuW1wbHPwzrZdfNW2ir96JPVeR09u/GMWKl/cdDMyUk0CwPKkE+Q?=
 =?us-ascii?q?opHiMjyPzOQNtnOU7/B9Ve+0kW4otRx+oji1yccwkIXGmoUVylXd+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4E5ZcrTyWO5Z1T884XW1ltiY3xqcbtZO5ZCQG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDp2nn5pZrGyihCv+ka60OL8TNO70FNSoypFjNbMsncN2gTX6siGUf?=
 =?us-ascii?q?t94lyh1SyA1wDV9+FIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7j7Waelg59uWr?=
 =?us-ascii?q?8ejrfLvrq5+GO4NpiAzyKqEulda+AeQ8PAgORW+b+eGk2b3640L5RahKguQrna?=
 =?us-ascii?q?bHrpDVO8AbqreiDA9Sz4Yj7QqwACm90NgfmXkHLVFFdwydg4nmJlHDOPT4Dfa5?=
 =?us-ascii?q?g1SxnzZn3fHGPrv9AprTKnjPiqvufbF460NHzgozytZf551SCrEcOv7zXVXxtN?=
 =?us-ascii?q?PAAh8jLwO02/rnCMl61o4GXWKPA6yZP73IvV6H++IiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9HqcuHkOCfHC5gssdCXxY+U06Tff2kxuEVjhcYWv0WL?=
 =?us-ascii?q?gzoTQyCYajBIGEQZixgbuHx2CiE5hLI2xLFF2IQkrubJiODvIFaSaOJZ14nzkZ?=
 =?us-ascii?q?ELSsVYIlkAujrRL30KZPKO3S9SsF85X5249u+ufRmBouoCFyFNmXyGqXTmt5zV?=
 =?us-ascii?q?8PEhw7wqF56XN6zlnLhatnhPhWPcZe6/NATkExMpuKnMJgDNWnfwvbfcqSAH+8?=
 =?us-ascii?q?R9+8HCotQ8h5l9YUZkxnBv24gxzD1jbsCLgQwe/YTKco+77RiiCib/12zGzLge?=
 =?us-ascii?q?x41wEr?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABhFQpcmBHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJPE4wTX40+iSCJNYR6gXMUGBSHWSI0CQ0BAwEBAQEBAQIBEwEBAQE?=
 =?us-ascii?q?BCAsLBhsOL4I2BQIDGgEGglsBAQEBAgEBAkMKKQMCAQECBgEBCg4HDB0IAwELA?=
 =?us-ascii?q?QQYMRMFgxyBdQUIAQSnCoowjB8XgX+BEYMSilwCiTaXLAmRShiJYodULJhugUa?=
 =?us-ascii?q?CDXAVgyeQXEAxgQcciCyBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAABhFQpcmBHrdtBjHQEBBQEHBQGBUQgBCwGBMIJPE4w?=
 =?us-ascii?q?TX40+iSCJNYR6gXMUGBSHWSI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOL4I2B?=
 =?us-ascii?q?QIDGgEGglsBAQEBAgEBAkMKKQMCAQECBgEBCg4HDB0IAwELAQQYMRMFgxyBdQU?=
 =?us-ascii?q?IAQSnCoowjB8XgX+BEYMSilwCiTaXLAmRShiJYodULJhugUaCDXAVgyeQXEAxg?=
 =?us-ascii?q?QcciCyBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,324,1539673200"; 
   d="scan'208";a="43971675"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 22:41:16 -0800
Received: from localhost ([::1]:44471 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gV9p5-0000mE-Eg
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 01:41:15 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50602)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gV9op-0000jR-Cq
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 01:41:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gV9oo-0008PO-Dc
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 01:40:59 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34428)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>)
	id 1gV9oj-0008AA-Fb; Fri, 07 Dec 2018 01:40:53 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id A96E73078AB5;
	Fri,  7 Dec 2018 06:40:52 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 341605EDE0;
	Fri,  7 Dec 2018 06:40:52 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id A46C8113860E; Fri,  7 Dec 2018 07:40:50 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Kevin Wolf <kwolf@redhat.com>
References: <20181206151304.8388-1-kwolf@redhat.com>
	<20181206151304.8388-2-kwolf@redhat.com>
Date: Fri, 07 Dec 2018 07:40:50 +0100
In-Reply-To: <20181206151304.8388-2-kwolf@redhat.com> (Kevin Wolf's message of
	"Thu, 6 Dec 2018 16:13:01 +0100")
Message-ID: <871s6t4z65.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Fri, 07 Dec 2018 06:40:52 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v3 1/4] vmdk: Refactor vmdk_create_extent
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, qemu-block@nongnu.org, mreitz@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Kevin Wolf <kwolf@redhat.com> writes:

> From: Fam Zheng <famz@redhat.com>
>
> The extracted vmdk_init_extent takes a BlockBackend object and
> initializes the format metadata. It is the common part between "qemu-img
> create" and "blockdev-create".
>
> Add a "BlockBackend *pbb" parameter to vmdk_create_extent, to return the
> opened BB to the caller in the next patch.

I'd do this part in the next patch, when it has a user.  Matter of
taste.

>
> Signed-off-by: Fam Zheng <famz@redhat.com>
> Signed-off-by: Kevin Wolf <kwolf@redhat.com>
> ---
>  block/vmdk.c | 69 ++++++++++++++++++++++++++++++++--------------------
>  1 file changed, 43 insertions(+), 26 deletions(-)
>
> diff --git a/block/vmdk.c b/block/vmdk.c
> index 2c9e86d98f..32fc2c84b3 100644
> --- a/block/vmdk.c
> +++ b/block/vmdk.c
> @@ -1741,35 +1741,17 @@ static int coroutine_fn vmdk_co_pwrite_zeroes(BlockDriverState *bs,
>      return ret;
>  }
>  
> -static int vmdk_create_extent(const char *filename, int64_t filesize,
> -                              bool flat, bool compress, bool zeroed_grain,
> -                              QemuOpts *opts, Error **errp)
> +static int vmdk_init_extent(BlockBackend *blk,
> +                            int64_t filesize, bool flat,
> +                            bool compress, bool zeroed_grain,
> +                            Error **errp)
>  {
>      int ret, i;
> -    BlockBackend *blk = NULL;
>      VMDK4Header header;
> -    Error *local_err = NULL;
>      uint32_t tmp, magic, grains, gd_sectors, gt_size, gt_count;
>      uint32_t *gd_buf = NULL;
>      int gd_buf_size;
>  
> -    ret = bdrv_create_file(filename, opts, &local_err);
> -    if (ret < 0) {
> -        error_propagate(errp, local_err);
> -        goto exit;
> -    }
> -
> -    blk = blk_new_open(filename, NULL, NULL,
> -                       BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL,
> -                       &local_err);
> -    if (blk == NULL) {
> -        error_propagate(errp, local_err);
> -        ret = -EIO;
> -        goto exit;
> -    }
> -
> -    blk_set_allow_write_beyond_eof(blk, true);
> -
>      if (flat) {
>          ret = blk_truncate(blk, filesize, PREALLOC_MODE_OFF, errp);
>          goto exit;
> @@ -1863,15 +1845,50 @@ static int vmdk_create_extent(const char *filename, int64_t filesize,
>                       gd_buf, gd_buf_size, 0);
>      if (ret < 0) {
>          error_setg(errp, QERR_IO_ERROR);
> -        goto exit;
>      }
>  
>      ret = 0;
> +exit:
> +    g_free(gd_buf);
> +    return ret;
> +}
> +
> +static int vmdk_create_extent(const char *filename, int64_t filesize,
> +                              bool flat, bool compress, bool zeroed_grain,
> +                              BlockBackend **pbb,
> +                              QemuOpts *opts, Error **errp)
> +{
> +    int ret;
> +    BlockBackend *blk = NULL;
> +    Error *local_err = NULL;
> +
> +    ret = bdrv_create_file(filename, opts, &local_err);
> +    if (ret < 0) {
> +        error_propagate(errp, local_err);
> +        goto exit;
> +    }
> +
> +    blk = blk_new_open(filename, NULL, NULL,
> +                       BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL,
> +                       &local_err);
> +    if (blk == NULL) {
> +        error_propagate(errp, local_err);
> +        ret = -EIO;
> +        goto exit;
> +    }
> +
> +    blk_set_allow_write_beyond_eof(blk, true);
> +
> +    ret = vmdk_init_extent(blk, filesize, flat, compress, zeroed_grain, errp);
>  exit:
>      if (blk) {
> -        blk_unref(blk);
> +        if (pbb) {
> +            *pbb = blk;
> +        } else {
> +            blk_unref(blk);
> +            blk = NULL;

Dead assignment.  Matter of taste.

> +        }
>      }
> -    g_free(gd_buf);
>      return ret;
>  }
>  
> @@ -2094,7 +2111,7 @@ static int coroutine_fn vmdk_co_create_opts(const char *filename, QemuOpts *opts
>          snprintf(ext_filename, PATH_MAX, "%s%s", path, desc_filename);
>  
>          if (vmdk_create_extent(ext_filename, size,
> -                               flat, compress, zeroed_grain, opts, errp)) {
> +                               flat, compress, zeroed_grain, NULL, opts, errp)) {
>              ret = -EINVAL;
>              goto exit;
>          }

Reviewed-by: Markus Armbruster <armbru@redhat.com>

