Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:32:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D6B33580039
	for <like.xu@linux.intel.com>; Wed, 19 Dec 2018 00:58:07 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 00:58:07 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AuUIJEh3ByEB39aP6smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMfKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfVyJPAIyy?=
 =?us-ascii?q?bIUAAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0myuQsCx3K0BA6Et8Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTGyi/Mb+lV2Tfg84jDbwwsoeuJXb1ra8rR1FIvFx/bgVWK?=
 =?us-ascii?q?tIfoOCma1v4Is2eA9epgSPmii3Q5pA5sojig3NsshpPViYISz1DJ7CN0y5s2K9?=
 =?us-ascii?q?2gUEN3f8KoHZhKuy2HKod7QdkuT39mtSs60LEKpJy2cDAUxJg7wxPTceGLfoaW?=
 =?us-ascii?q?7h75SeqcIjl1iGh7dL+8gRu57FKuxffmVsau1VZHtipFncfItnAKzxHT7smHSu?=
 =?us-ascii?q?Bh/ke6wzqP2AbT6vxeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFn1gaOMa0ko5+ul?=
 =?us-ascii?q?5/75brjoppKQLZJ4hwPmPqQrgMO/AOA4MgYUX2ic/OSxzKTj8lP8QLVXl/E5j7?=
 =?us-ascii?q?fWsI7EKsQfv6K2GAhV0psl6xmjETimy9MUnX0GLFJGZh2LlYfoO0zWLfD8DPe/?=
 =?us-ascii?q?hUmskThxy/DHOL3hHovCLnzZnLj9erZ97lVRyAw0zdBZ6JJUDKwBLOj0Wk/ru9?=
 =?us-ascii?q?zUFgU5PBCsw+b7FNV90ZsTWWaOAq+aLqzeq1CJ5v80LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G6cuHkOCfHC5gssdCXxY+U06Tff2kxuEVjhcYWv0WL?=
 =?us-ascii?q?gzoTQyCYajBIGEQZixgbuHx2CiE5hLI2xLFF2IQkrubJiODvIFaSaOJZ14nzkZ?=
 =?us-ascii?q?ELSsVYIlkAujrRL30KZPKO3S9SsF85X5249u+ufRmBouoCFyFNmXyGqXTmt5zV?=
 =?us-ascii?q?8PEho/xqs6iEpx0NbL9bVijvVFXYhW7ulCWwE2L5Oay/FgBtnvcg3Ed9aNDl2h?=
 =?us-ascii?q?R4P1Lys2S4cUysUNfl01Ms+nhArexDanGfdBnqaODoYp2rjR03j4O4B2zHOQh/?=
 =?us-ascii?q?pptEUvXsYabT7uvaV47QWGQteRy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CXAgB7BxpchxHrdtBjHgEGBwaBZYExg?=
 =?us-ascii?q?gReg32IeIsdUgaBNXyIGQ6QKhcYFIRAgmkiOBIBAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?bDi+CNgUCAxoBBoJbAQEBAQIBAQIgIwopAwIBAQIGAQEKGAICBRoDBAICAwELA?=
 =?us-ascii?q?QQNCzETBYMdgWoDCAUIAQSmZoEviAYNgh2BC4s0F3iBB4ERgl01gleCKoMIglc?=
 =?us-ascii?q?CoFUnMwmOMIMxGIFdhR+Ceodgj1KKKoFdgXdwFYMngicXEo4MQDGBBxyLTYF3A?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0CXAgB7BxpchxHrdtBjHgEGBwaBZYExggReg32IeIsdUga?=
 =?us-ascii?q?BNXyIGQ6QKhcYFIRAgmkiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBB?=
 =?us-ascii?q?oJbAQEBAQIBAQIgIwopAwIBAQIGAQEKGAICBRoDBAICAwELAQQNCzETBYMdgWo?=
 =?us-ascii?q?DCAUIAQSmZoEviAYNgh2BC4s0F3iBB4ERgl01gleCKoMIglcCoFUnMwmOMIMxG?=
 =?us-ascii?q?IFdhR+Ceodgj1KKKoFdgXdwFYMngicXEo4MQDGBBxyLTYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208";a="56503103"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 19 Dec 2018 00:58:06 -0800
Received: from localhost ([::1]:58358 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZXg5-00040I-Q5
	for like.xu@linux.intel.com; Wed, 19 Dec 2018 03:58:05 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36796)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gZXfq-0003zs-6a
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 03:57:51 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gZXfn-0001F9-1I
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 03:57:50 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51026)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gZXfm-0001Eh-PR
	for qemu-devel@nongnu.org; Wed, 19 Dec 2018 03:57:46 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 08F11169736;
	Wed, 19 Dec 2018 08:57:46 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id A6D7C608EE;
	Wed, 19 Dec 2018 08:57:45 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 36641113860E; Wed, 19 Dec 2018 09:57:44 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@gmail.com>
References: <20181218182234.28876-1-armbru@redhat.com>
	<CAJ+F1CLo4YRnGWHsyoUWDrPU1X2z-5+eDmdGsw-zp7ihTpD_+Q@mail.gmail.com>
Date: Wed, 19 Dec 2018 09:57:44 +0100
In-Reply-To: <CAJ+F1CLo4YRnGWHsyoUWDrPU1X2z-5+eDmdGsw-zp7ihTpD_+Q@mail.gmail.com>
	(=?utf-8?Q?=22Marc-Andr=C3=A9?= Lureau"'s message of "Wed, 19 Dec 2018
	00:35:07 +0400")
Message-ID: <87d0pxnbav.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Wed, 19 Dec 2018 08:57:46 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC PATCH v2 00/15] qapi: add #if pre-processor
 conditions to generated code (part 3)
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: QEMU <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Marc-Andr=C3=A9 Lureau <marcandre.lureau@gmail.com> writes:

> Hi
>
> On Tue, Dec 18, 2018 at 10:26 PM Markus Armbruster <armbru@redhat.com> wr=
ote:
>>
>> Marc-Andr=C3=A9 posted v1 that relies on a QAPI schema language extension
>> 'top-unit' to permit splitting the generated code.  Here is his cover
>> letter:
>>
>>     The thrid and last part (of "[PATCH v2 00/54] qapi: add #if
>>     pre-processor conditions to generated code") is about adding schema
>>     conditions based on the target.
>>
>>     For now, the qapi code is compiled in common objects (common to all
>>     targets). This makes it impossible to add #if TARGET_ARM for example.
>>
>>     The patch "RFC: qapi: learn to split the schema by 'top-unit'"
>>     proposes to split the schema by "top-unit", so that generated code c=
an
>>     be built either in common objects or per-target. That patch is a bit
>>     rough, I would like to get some feedback about the approach before
>>     trying to improve it. The following patches demonstrate usage of
>>     target-based #if conditions, and getting rid of the
>>     qmp_unregister_command() hack.
>>
>> We already have a way to split generated code: QAPI modules.  I took
>> the liberty to rework Marc-Andr=C3=A9's series to use a target module
>> instead.  Less code, no change to the QAPI language.
>>
>> One of the patches (marked WIP) is a total hack.  Fixable, but I want
>> to get this out for discussion first.
>
> The approach you propose includes -target.h header in the top headers,
> effectively making all the qapi code target-dependent, no?

Yes, but...

> I am actually a bit surprised there are no poisoined define errors.
> Possibly because the top-level header is rarely included.

... next to nothing includes the top-level header:

    $ git-grep -E 'include.*"(qapi/)?qapi-[^-]*.h'
    monitor.c:#include "qapi/qapi-commands.h"

Here we actually need all commands, complete with their
target-dependence.

    monitor.c:#include "qapi/qapi-introspect.h"
    tests/test-qobject-input-visitor.c:#include "qapi/qapi-introspect.h"

qapi-introspect.[ch] are monolithic.

    ui/cocoa.m:#include "qapi/qapi-commands.h"

This is just lazy; we should include just the qapi-commands-FOO we
actually need.  I'll ask the maintainer for help with cleaning this up.

Including top-level headers has been a bad idea ever since we generate
modular headers (commit 252dc3105fc), because it leads to "touch the
QAPI schema, have some coffee while the world is recompiled".

Adding target-dependent conditionals makes this bad idea impractical in
target-independent code.  Feature!

> By contrast, my approach has the advantage of a clean split between
> target and non-target dependent code, which I would feel more
> confident about.
>
> That's the reason why I promptly discarded the QAPI modules approach
> without having second thoughts at least. Now you force me to
> reconsider it though.

Please do :)

