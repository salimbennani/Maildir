Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EB2A45807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 09:32:02 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 09:32:02 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AISCTkhTkeo7FfeDCKVefx7D/Ydpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zbReN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?YYsBAegOM+VWoIbyu1QAogawBRGuCe3txTJEm3H70bEk3OQ6CgzGwBUgEsgSvH?=
 =?us-ascii?q?jIttj4NqEfWv21wqnSyjXDautb1zDn54jScRAhvOqMVq9sfMrLzEkgDBnFjkiL?=
 =?us-ascii?q?qYz5ITyVzPkGvm+B4Op6UOKgkHQnqxxqrzi12Mgjl4nJiZgJylze6Sp5x4M1KM?=
 =?us-ascii?q?S+RUVmYtCkCINduz+GO4Z1WM8uXnxktSUgxrEYt5O2fDIGxIklyhLHdfCLb4yF?=
 =?us-ascii?q?7gj+WOufPzt0nm9pdbGxihqo70StyevxXdSu3llQtCpKiNzMu2gN1xPN7siHTe?=
 =?us-ascii?q?Nw/kOg2TaUywDT8ftIIU8ylarGMZIhxaQwlpULvUTCGC/5hln2gbeIekk4+eWk?=
 =?us-ascii?q?8fnrbqjlq5OGKYN5hAHzPr4zlsG9Geg4NxIBX2mf+eSyzr3j+kj5Ta1TjvIol6?=
 =?us-ascii?q?nZrYnWKtkFqa6nHQBV1p8v5A24Dze71tQXgWcILElCdBKDjojpOE/BLOr3DPei?=
 =?us-ascii?q?m1mslDZrx/bbPrzuGJnNL37DkKv/crZ58UJT1A0zzdVE6pJSDbEBJv3zWknstN?=
 =?us-ascii?q?DCCR85KQO0z/79CNphzoMeRX6PAqiBPaPWsF+I5fwgL/ODZY8Iozv9L/kl5/jz?=
 =?us-ascii?q?jX42g1MdfK+p3YcJZ3C8BPhpP0KZYX+/yuoHCnoA6woiUPTx2hrFVT9Ie230Wa?=
 =?us-ascii?q?U66TcmToW8AsDGT4GphbWHmyCjApxRYHsBE12JDDLkepuJX6QxbjmPKJpkmz0A?=
 =?us-ascii?q?Sb/zUoIkyFSiuRH3z/99I/PJ9zYEnZTk0tdz+qvUjx5l7iF+DcmWzzSQSXpplH?=
 =?us-ascii?q?gDXT480fNDphlYw02IlIF+j+bZXfhO/f5AT09uMJfGxOV8B8r/HAbcZNqAVX68?=
 =?us-ascii?q?T9mmCC13RdU0lYwgeUF4TvCrlBPexGKDGbofjaGQGJEuuvbVxX37PdtV0XvK1K?=
 =?us-ascii?q?A9yVIhR50cZiWdmqdj+l2LVMbymEKDmvPvLPxE0Q=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AzAgCMog5cmBHrdtBkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBFhODeoh4izCCDYkgkCQUGAMRhECDLSI4EgEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4jDII2BQIDGgEGglwBAgIBAQIgIwopAwIBAQIGAQEKGgIFGgMEAgIDA?=
 =?us-ascii?q?QsBBBgxEwWDHAGBdAUIAQSmG4EviiCBC4sWF4F/hCOFAYMEglcCjz2GN4sBCYc?=
 =?us-ascii?q?IikcYgVxNhEqCc4dXmTCBXYF3cBWDJwmCR4kdhG9AMYEHHIoFgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AzAgCMog5cmBHrdtBkHQEBBQEHBQGBZYExgTmBFhODeoh?=
 =?us-ascii?q?4izCCDYkgkCQUGAMRhECDLSI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2B?=
 =?us-ascii?q?QIDGgEGglwBAgIBAQIgIwopAwIBAQIGAQEKGgIFGgMEAgIDAQsBBBgxEwWDHAG?=
 =?us-ascii?q?BdAUIAQSmG4EviiCBC4sWF4F/hCOFAYMEglcCjz2GN4sBCYcIikcYgVxNhEqCc?=
 =?us-ascii?q?4dXmTCBXYF3cBWDJwmCR4kdhG9AMYEHHIoFgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55287404"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 09:32:01 -0800
Received: from localhost ([::1]:33958 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWPPV-0006AI-6V
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 12:32:01 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:45990)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWPP8-00067s-Up
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:31:41 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWPP7-0003XB-V4
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:31:38 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52076)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gWPP7-0003Wr-Mz
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 12:31:37 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0385C30C41A8;
	Mon, 10 Dec 2018 17:31:37 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 8B81860C75;
	Mon, 10 Dec 2018 17:31:36 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 1275D113860E; Mon, 10 Dec 2018 18:31:35 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
	<20181208111606.8505-16-marcandre.lureau@redhat.com>
Date: Mon, 10 Dec 2018 18:31:35 +0100
In-Reply-To: <20181208111606.8505-16-marcandre.lureau@redhat.com>
	(=?utf-8?Q?=22Marc-Andr=C3=A9?=
	Lureau"'s message of "Sat, 8 Dec 2018 15:15:54 +0400")
Message-ID: <87zhtdcmq0.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.45]);
	Mon, 10 Dec 2018 17:31:37 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-4.0 v7 15/27] qapi: add an error in
 case a discriminator is conditional
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, Michael Roth <mdroth@linux.vnet.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:

> Making a discriminator conditional doesn't make much sense.

Good point (so easy to overlook!), but why first add the 'if' feature
broken that way in PATCH 13, then fix it up in PATCH 15?

>                                                             Instead,
> the union could be made conditional.

What do you mean by that?

> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> ---
>  scripts/qapi/common.py                          |  8 ++++++++
>  tests/Makefile.include                          |  1 +
>  .../flat-union-invalid-if-discriminator.err     |  1 +
>  .../flat-union-invalid-if-discriminator.exit    |  1 +
>  .../flat-union-invalid-if-discriminator.json    | 17 +++++++++++++++++
>  .../flat-union-invalid-if-discriminator.out     |  0
>  6 files changed, 28 insertions(+)
>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.err
>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.exit
>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.json
>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.out
>
> diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
> index aec51acb07..f79b3fad54 100644
> --- a/scripts/qapi/common.py
> +++ b/scripts/qapi/common.py
> @@ -578,6 +578,7 @@ def find_alternate_member_qtype(qapi_type):
>  # Return the discriminator enum define if discriminator is specified as =
an
>  # enum type, otherwise return None.
>  def discriminator_find_enum_define(expr):
> +    name =3D expr['union']
>      base =3D expr.get('base')
>      discriminator =3D expr.get('discriminator')
>=20=20
> @@ -594,6 +595,7 @@ def discriminator_find_enum_define(expr):
>=20=20
>      if isinstance(discriminator_value, dict):
>          discriminator_value =3D discriminator_value['type']
> +
>      return enum_types.get(discriminator_value)
>=20=20
>=20=20

These two hunks are leftovers, please drop.

> @@ -800,7 +802,12 @@ def check_union(expr, info):
>                                 "struct '%s'"
>                                 % (discriminator, base))
>          if isinstance(discriminator_value, dict):
> +            if discriminator_value.get('if'):
> +                raise QAPISemError(info, 'The discriminator %s.%s for un=
ion %s '
> +                                   'must not be conditional' %
> +                                   (base, discriminator, name))
>              discriminator_value =3D discriminator_value['type']
> +
>          enum_define =3D enum_types.get(discriminator_value)
>          allow_metas =3D ['struct']
>          # Do not allow string discriminator
> @@ -1023,6 +1030,7 @@ def check_exprs(exprs):
>=20=20
>          if 'include' in expr:
>              continue
> +        info =3D expr_elem['info']
>          if 'union' in expr and not discriminator_find_enum_define(expr):
>              name =3D '%sKind' % expr['union']
>          elif 'alternate' in expr:
> diff --git a/tests/Makefile.include b/tests/Makefile.include
> index ea5d1e8787..3f5a1d0c30 100644
> --- a/tests/Makefile.include
> +++ b/tests/Makefile.include
> @@ -409,6 +409,7 @@ qapi-schema +=3D flat-union-inline-invalid-dict.json
>  qapi-schema +=3D flat-union-int-branch.json
>  qapi-schema +=3D flat-union-invalid-branch-key.json
>  qapi-schema +=3D flat-union-invalid-discriminator.json
> +qapi-schema +=3D flat-union-invalid-if-discriminator.json
>  qapi-schema +=3D flat-union-no-base.json
>  qapi-schema +=3D flat-union-optional-discriminator.json
>  qapi-schema +=3D flat-union-string-discriminator.json
> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.err b/=
tests/qapi-schema/flat-union-invalid-if-discriminator.err
> new file mode 100644
> index 0000000000..0c94c9860d
> --- /dev/null
> +++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.err
> @@ -0,0 +1 @@
> +tests/qapi-schema/flat-union-invalid-if-discriminator.json:13: The discr=
iminator TestBase.enum1 for union TestUnion must not be conditional
> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.exit b=
/tests/qapi-schema/flat-union-invalid-if-discriminator.exit
> new file mode 100644
> index 0000000000..d00491fd7e
> --- /dev/null
> +++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.exit
> @@ -0,0 +1 @@
> +1
> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.json b=
/tests/qapi-schema/flat-union-invalid-if-discriminator.json
> new file mode 100644
> index 0000000000..618ec36396
> --- /dev/null
> +++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.json
> @@ -0,0 +1,17 @@
> +{ 'enum': 'TestEnum',
> +  'data': [ 'value1', 'value2' ] }
> +
> +{ 'struct': 'TestBase',
> +  'data': { 'enum1': { 'type': 'TestEnum', 'if': 'FOO' } } }
> +
> +{ 'struct': 'TestTypeA',
> +  'data': { 'string': 'str' } }
> +
> +{ 'struct': 'TestTypeB',
> +  'data': { 'integer': 'int' } }
> +
> +{ 'union': 'TestUnion',
> +  'base': 'TestBase',
> +  'discriminator': 'enum1',
> +  'data': { 'value1': 'TestTypeA',
> +            'value2': 'TestTypeB' } }
> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.out b/=
tests/qapi-schema/flat-union-invalid-if-discriminator.out
> new file mode 100644
> index 0000000000..e69de29bb2

Patch looks good otherwise.

