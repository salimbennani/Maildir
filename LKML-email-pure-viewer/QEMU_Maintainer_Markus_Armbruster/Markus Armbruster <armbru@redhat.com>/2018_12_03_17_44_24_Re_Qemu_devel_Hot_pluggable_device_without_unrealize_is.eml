Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:56:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 90416580375
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 09:54:06 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 03 Dec 2018 09:54:07 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A0ya30B0lnyFH81AMsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesWKPzxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPWSxPDIGz?=
 =?us-ascii?q?YYgBAOUOIelWspH9qlkMoxaxGAWhCv/jxSFThnLtwa02z/4sHR3a0AE6A94Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41K7Gwi/Zb/NVxDf985XDfww7ofGJRr1wa9fRyVIzFwzblFWb?=
 =?us-ascii?q?tIvoMCmP1uQIqGeb9fdgWPm1i2E5tg5xoiKgxts2hobVgYIVz0nJ+CNky4g7It?=
 =?us-ascii?q?24TVR0Yd+iEJZItiGaMoR2Qt44Q21ypCk6zbgGtJimdyYJ0JQq3wDTZ+CEfoSS?=
 =?us-ascii?q?/x7vSeWcLS1miH9reL+znQu+/Eq4xuHiSsW51ExGojdLn9XSrHwByh/e58adRv?=
 =?us-ascii?q?dj/Uqs3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqUDDHi7tmEXql6+abEok+u61?=
 =?us-ascii?q?6+j9ZbXmvJCcO5d1igH4LKsuhtSyDfokPgUNRWSX5Pmw2b758UHnTrhHjuc6nr?=
 =?us-ascii?q?TbvZzCIMQUvK+5Awtb0oY57Ba/Ci+r0M0GknkCMVJJYQ+IgJb3O17QJPD0FOyw?=
 =?us-ascii?q?g1OxkDdt2//JIKbhDpLJLnjCk7fuY6xx6kFByAcrydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B925gYWWKIBK+ZP6XSsUKS6uIoOemMa5cZuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcZfamo3psYdmq0H/t7I0iCZXrsg9EBEXoFvwYkTezqjkGCXiBXZ3qoQ6?=
 =?us-ascii?q?084TQ7W8qbC5zeTNWtnKCZx3X8WZlXfXxdTFaLF3juasODQfhLbSuTJspolHsD?=
 =?us-ascii?q?TaSgTIk6kgijsRK/x7d5I+6HxysDqJi20dF04/HUxwg/8CExA8mD3mXIVWxtg2?=
 =?us-ascii?q?4TWxcw26Zwp1E7zU2MhrNlif5VHsAG+vVSTw0hPoTdxeEpN9enYg/dc83BbV+3?=
 =?us-ascii?q?TtiiBXllVt8tzsVIZk9sF9imijjH3iyjGbhTkKaEUs8a6KXZil34PcVg0D7vzq?=
 =?us-ascii?q?wrlUQ9XsZVfTmvnKt17RX7HYPFk0yF0a2tcPJPj2b26G6fwD/W7wljWwlqXPCA?=
 =?us-ascii?q?BChHaw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BWAgDPbAVchxHrdtBjHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBKYxwiy1SBoE1iR+QHBQYBw2ICSI4EgEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OIwyCNgUCAxoBBoJbAQEBAQIBAQIkHwopAwIBAQIGAQEKGAkdCAMBCwEEGDETB?=
 =?us-ascii?q?YMcAYF0BQgBBAqnGTOELQGFcAWMHBd4gQeBEYIUfoMeA4c7AoksgXOKP4piCZE?=
 =?us-ascii?q?8GIlbh0uCfIptK4pZgV2BdnAVgyeGCIpUQDEBAYEFHIhEgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BWAgDPbAVchxHrdtBjHQEBBQEHBQGBZYExgTmBKYxwiy1?=
 =?us-ascii?q?SBoE1iR+QHBQYBw2ICSI4EgEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxoBB?=
 =?us-ascii?q?oJbAQEBAQIBAQIkHwopAwIBAQIGAQEKGAkdCAMBCwEEGDETBYMcAYF0BQgBBAq?=
 =?us-ascii?q?nGTOELQGFcAWMHBd4gQeBEYIUfoMeA4c7AoksgXOKP4piCZE8GIlbh0uCfIptK?=
 =?us-ascii?q?4pZgV2BdnAVgyeGCIpUQDEBAYEFHIhEgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="42539429"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 09:54:05 -0800
Received: from localhost ([::1]:51231 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTsQ0-0007ev-6k
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 12:54:04 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:42261)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gTsGp-0004qZ-Fc
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 12:44:39 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gTsGl-0001me-Lm
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 12:44:34 -0500
Received: from mx1.redhat.com ([209.132.183.28]:49427)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gTsGk-0001k5-6W
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 12:44:30 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 2381C461D0;
	Mon,  3 Dec 2018 17:44:29 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-104.ams2.redhat.com
	[10.36.116.104])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id ED4DF6C1FD;
	Mon,  3 Dec 2018 17:44:25 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 7DB57113860E; Mon,  3 Dec 2018 18:44:24 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Peter Maydell <peter.maydell@linaro.org>
References: <20181129152552.14363-1-liq3ea@163.com>
	<87ftvj4shh.fsf@dusky.pond.sub.org>
	<CAFEAcA9LtBfxmaLnwX_ZFoGxZd6fFAkjdqJKiwy-Ztmcs5aM3w@mail.gmail.com>
	<87efb3nhbz.fsf@dusky.pond.sub.org>
	<CAFEAcA_z+4MRQVC0n3P1FsEe2oBUQ-yUj=NGEBwkd4X6wVhf1w@mail.gmail.com>
Date: Mon, 03 Dec 2018 18:44:24 +0100
In-Reply-To: <CAFEAcA_z+4MRQVC0n3P1FsEe2oBUQ-yUj=NGEBwkd4X6wVhf1w@mail.gmail.com>
	(Peter Maydell's message of "Fri, 30 Nov 2018 11:20:57 +0000")
Message-ID: <87efay4i9z.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.29]);
	Mon, 03 Dec 2018 17:44:29 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] Hot-pluggable device without ->unrealize() is
 highly suspect
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: fam@euphon.net, Juan Quintela <quintela@redhat.com>,
	Li Qiang <liq3ea@163.com>, Li Qiang <liq3ea@gmail.com>,
	QEMU Developers <qemu-devel@nongnu.org>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>,
	Paolo Bonzini <pbonzini@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Peter Maydell <peter.maydell@linaro.org> writes:

> On Fri, 30 Nov 2018 at 07:40, Markus Armbruster <armbru@redhat.com> wrote:
>> Peter Maydell <peter.maydell@linaro.org> writes:
>> > Add an assert somewhere and catch it with the usual
>> > "instantiate everything" qtest?
>
>> The troublemaker is (3), where we may end up with an overridden
>> realize-like method and an non-matching, un-overridden unrealize-like
>> method.  Got any smart ideas?
>
> Mmm, I see the difficulty. I suppose in theory we could have
> a custom linter like clang-tidy and check that anything that
> sets a realize pointer also sets an unrealize, but that's
> pie-in-the-sky territory at the moment.
>
> Asserting that there is an unrealize would catch at least
> some cases of "forgot to handle hotplug", though, right?

Yes.  I figure it's worth doing.

Another idea: track down all the instances of "parent class implements
::realize(), ::unrealize(), which in turn call methods its children may
implement", and rename the children's methods to be called realize(),
unrealize(), so that we can find offenders with a git-grep -E
'->(un)?realize *='.

>> > More generally, what is causing dc390 to be hotpluggable?
>> > I can't see anything obvious in the class init.
>>
>> It's a PCI device.  These are all hot-pluggable by default.
>
> Maybe we should change that? Most people writing a
> PCI device are probably not thinking about hotplug.

More on that below.

> Though in the dc390 case it would probably not help to have
> to set a dc->hotpluggable flag, because it would inherit that
> from am53c974 too.
>
> I wonder if the dc390 could be structured in a way that
> it doesn't subclass a complete non-abstract pci device like
> that...

Yes, a common abstract base class would be cleaner.

>> >                                                 If we
>> > have APIs where the default is "you get this weird thing
>> > you weren't thinking about but it's broken because
>> > you weren't thinking about it" then we will have a whole
>> > class of bugs that we then need to squash device by device[*].
>> > I think it would be better for devices to have to explicitly
>> > opt in to implementing things like hotplug -- that way the
>> > failure mode is just "this isn't hotpluggable", we can
>> > report that helpfully to the user, and if anybody cares
>> > they can add the support.
>>
>> I tend to agree, although for PCI devices, not being hot-pluggable is
>> kind of weird, except for the ones that only occur soldered onto
>> mainboards.
>
> Real hardware PCI devices are not hot-pluggable by default
> as far as I'm aware; PCIe may be hot-pluggable but I think
> need to be designed to support it.
> This is a random non-hotplug-safe PCIe card:
> https://i.stack.imgur.com/tXug5.jpg
> PRSNT2# (pin 17 side B) is connected to Ground on pin 18
> (these are the rightmost two connections visible); for
> hotplug it must be connected to PRSNT1# (which is pin 1 side A),
> AIUI.
>
> But the hardware situation is kind of a tangent from how
> we try to design our APIs.

It's best not to deviate from real hardware without a good reason.
Making it harder to create the same stupid bugs over and over again is a
good reason.

