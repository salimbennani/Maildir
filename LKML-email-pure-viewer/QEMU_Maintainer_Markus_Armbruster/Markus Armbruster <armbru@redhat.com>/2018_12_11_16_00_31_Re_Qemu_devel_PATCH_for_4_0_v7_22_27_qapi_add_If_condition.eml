Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:51:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CD2C0580380
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 08:25:00 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 08:25:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A61wj0xGteNoOua6OXxZ7mp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p86/bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHI28?=
 =?us-ascii?q?YYUNAOQCM+lXoJXyqVQToxumBwSiBuzixiJGi3Pqw6I6yP8sER3f3AE6A94CrG?=
 =?us-ascii?q?7ZodfzOawPUe611q7IzTDbYv1Rwzj98ovIcg06ofqRQb9wa8/RxlI1FwPYlVWQ?=
 =?us-ascii?q?tZLqPymI3ekKqWeb9e9gWvm1i246sAxxuCagydosiobTmoIZ0EzL9SJ8wIssI9?=
 =?us-ascii?q?CzVUB1YdmhEJRKtiGaMZN7Qt8iQmFwpik20LwGuYW9cSMXy5on3wbSZ+Kbf4WL?=
 =?us-ascii?q?+B7vSfudLDRiiH57dr+yhwy+/VWix+HkSMW4zFJHojBYntTCqHwBzQHf58uJR/?=
 =?us-ascii?q?dn4Eus2jCC3B3J5O5eO0A7j6/bJoYhwrEukpoTtlzOHiv3mEXtkK+WbV8o+ueu?=
 =?us-ascii?q?6+T6eLnmoYWcN4BshgH/NKQhhNC/DPwmPgQSXGWX4/mw2KDg8EHjXrlHgP07nr?=
 =?us-ascii?q?PEvJ3YPcgbo7S2Aw5R0oYt8Ra/CDKm3cwBnXYZKVJFZQuLgJX3NFHQPv/4Ce6z?=
 =?us-ascii?q?jE+rkDd2wfDJIqPuAo7KInjHkbfhfqhy51RTyQou1d1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYFVGKJBa+ZNqzSsVmV5u41JOmMfoAVtC7nK/c5//7u?=
 =?us-ascii?q?kWM5mVgFcKmt3JsXa263Eu5pIkWEenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIf1RbrFXZ2n1bydwD+gTNoRYmFdFkvKF3DueIOZHfAWZ2WXK85llzUC?=
 =?us-ascii?q?Er+5V44m0wrprQL/1v9rI/TZ/n4ls4n+3o1w7uzXiRZg7DFxEoGR3n+ASyRuk3?=
 =?us-ascii?q?oVSiQq9KZ4p0N71xGEy6cvmOFSF9FY+6ZUVBwnP4XX1e1wBoPOXVfkd82CDX+g?=
 =?us-ascii?q?Ts8nSRUsVN843pdaZk9nENykggrOmS63GbIcipSRCZA0+76a1H/0cZVT0XHDgY?=
 =?us-ascii?q?wolVo7WYNmL2isnLNk6wXJT9rAiUCTjbuCb6kQ3CfRsmyEyDzd7wljTAdsXPCd?=
 =?us-ascii?q?DjgkbUzMoIG8vxuaQg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0C6AAC04w9cmBHrdtBkHgEGBwaBVAYLA?=
 =?us-ascii?q?YEwgTmBFhODe4h4izGCDYkhkCQUGAMRhECCbiI3Bg0BAwEBAQEBAQIBEwEBAQE?=
 =?us-ascii?q?BCAsLBhsOIwyCNgUCAxoBBoJcAQICAQECICMKKQMCAQECBgEBChoCBR0EAgIDA?=
 =?us-ascii?q?QsBBBgxEwWDHAGBdAUIAQSlboEvhEFAhSuBC4dGg2oXgX+EI4UBgwSCNSICjz+?=
 =?us-ascii?q?RPAmHCYpIGIFcTYc9NockmTOBXIF4cBWDJwmCHhcSiAmBFIRvQDGBBxyIToF3A?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0C6AAC04w9cmBHrdtBkHgEGBwaBVAYLAYEwgTmBFhODe4h?=
 =?us-ascii?q?4izGCDYkhkCQUGAMRhECCbiI3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCN?=
 =?us-ascii?q?gUCAxoBBoJcAQICAQECICMKKQMCAQECBgEBChoCBR0EAgIDAQsBBBgxEwWDHAG?=
 =?us-ascii?q?BdAUIAQSlboEvhEFAhSuBC4dGg2oXgX+EI4UBgwSCNSICjz+RPAmHCYpIGIFcT?=
 =?us-ascii?q?Yc9NockmTOBXIF4cBWDJwmCHhcSiAmBFIRvQDGBBxyIToF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="56435376"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 08:24:59 -0800
Received: from localhost ([::1]:39867 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWkqB-0003M0-1L
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 11:24:59 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54006)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWkSp-00073X-8c
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:00:57 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWkSm-0006EC-Ro
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:00:51 -0500
Received: from mx1.redhat.com ([209.132.183.28]:50800)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gWkSk-00063x-1A
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:00:47 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id C9D72C079C45;
	Tue, 11 Dec 2018 16:00:33 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 591DC60C6A;
	Tue, 11 Dec 2018 16:00:33 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id CAFAE113860E; Tue, 11 Dec 2018 17:00:31 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
	<20181208111606.8505-23-marcandre.lureau@redhat.com>
Date: Tue, 11 Dec 2018 17:00:31 +0100
In-Reply-To: <20181208111606.8505-23-marcandre.lureau@redhat.com>
	(=?utf-8?Q?=22Marc-Andr=C3=A9?=
	Lureau"'s message of "Sat, 8 Dec 2018 15:16:01 +0400")
Message-ID: <874lbkoxy8.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Tue, 11 Dec 2018 16:00:33 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-4.0 v7 22/27] qapi: add 'If:' condition
 to enum values documentation
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, Michael Roth <mdroth@linux.vnet.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:

> Use a common function to generate the "If:..." line.
>
> While at it, get rid of the existing \n\n (no idea why it was
> there). Use a line-break in member description, this seems to look
> slightly better in the plaintext version.

Where exactly in the patch is this done?

> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> ---
>  scripts/qapi/doc.py             | 24 +++++++++++++++---------
>  tests/qapi-schema/doc-good.json |  4 +++-
>  tests/qapi-schema/doc-good.out  |  1 +
>  tests/qapi-schema/doc-good.texi |  2 +-
>  4 files changed, 20 insertions(+), 11 deletions(-)
>
> diff --git a/scripts/qapi/doc.py b/scripts/qapi/doc.py
> index 76cb186ff9..2133ded47e 100755
> --- a/scripts/qapi/doc.py
> +++ b/scripts/qapi/doc.py
> @@ -126,19 +126,26 @@ def texi_body(doc):
>      return texi_format(doc.body.text)
>=20=20
>=20=20
> -def texi_enum_value(value):
> +def texi_if(ifcond, prefix=3D'\n', suffix=3D'\n'):
> +    """Format the #if condition"""
> +    return '%s@b{If:} @code{%s}%s' % (
> +        prefix, ', '.join(ifcond), suffix) if ifcond else ''

I like the ternary operator, but I nevertheless think this function is
easier to read as

       if not ifcond:
           return ''
       return '%s@b{If:} @code{%s}%s' % (prefix, ', '.join(ifcond), suffix)

> +
> +
> +def texi_enum_value(value, desc, suffix=3D''):
>      """Format a table of members item for an enumeration value"""
> -    return '@item @code{%s}\n' % value.name
> +    return '@item @code{%s}\n%s%s' % (
> +        value.name, desc, texi_if(value.ifcond, prefix=3D'@*'))

Do you ignore suffix intentionally?

>=20=20
>=20=20
> -def texi_member(member, suffix=3D''):
> +def texi_member(member, desc=3D'', suffix=3D''):
>      """Format a table of members item for an object type member"""
>      typ =3D member.type.doc_type()
>      membertype =3D ': ' + typ if typ else ''
> -    return '@item @code{%s%s}%s%s\n' % (
> +    return '@item @code{%s%s}%s%s\n%s' % (
>          member.name, membertype,
>          ' (optional)' if member.optional else '',
> -        suffix)
> +        suffix, desc)
>=20=20
>=20=20
>  def texi_members(doc, what, base, variants, member_func):
> @@ -155,7 +162,7 @@ def texi_members(doc, what, base, variants, member_fu=
nc):
>              desc =3D 'One of ' + members_text + '\n'
>          else:
>              desc =3D 'Not documented\n'
> -        items +=3D member_func(section.member) + desc
> +        items +=3D member_func(section.member, desc)

Here, you pass a @desc argument, but no @suffix.

@member_func is either texi_enum_value() or texi_member().  Works.

>      if base:
>          items +=3D '@item The members of @code{%s}\n' % base.doc_type()
>      if variants:
> @@ -165,7 +172,7 @@ def texi_members(doc, what, base, variants, member_fu=
nc):
>              if v.type.is_implicit():
>                  assert not v.type.base and not v.type.variants
>                  for m in v.type.local_members:
> -                    items +=3D member_func(m, when)
> +                    items +=3D member_func(m, suffix=3Dwhen)

Here, you pass a @suffix argument, but no @desc.

texi_enum_value() would choke on that, but it can't occur here, because
enums have no variants.

Still, I'd prefer texi_enum_value() and texi_member() to have the exact
same signature.

>              else:
>                  items +=3D '@item The members of @code{%s}%s\n' % (
>                      v.type.doc_type(), when)
> @@ -185,8 +192,7 @@ def texi_sections(doc, ifcond):
>              body +=3D texi_example(section.text)
>          else:
>              body +=3D texi_format(section.text)
> -    if ifcond:
> -        body +=3D '\n\n@b{If:} @code{%s}' % ", ".join(ifcond)
> +    body +=3D texi_if(ifcond, suffix=3D'')
>      return body
>=20=20
>=20=20
> diff --git a/tests/qapi-schema/doc-good.json b/tests/qapi-schema/doc-good=
.json
> index 984cd8ed06..c7fe08c530 100644
> --- a/tests/qapi-schema/doc-good.json
> +++ b/tests/qapi-schema/doc-good.json
> @@ -55,7 +55,9 @@
>  #
>  # @two is undocumented
>  ##
> -{ 'enum': 'Enum', 'data': [ 'one', 'two' ], 'if': 'defined(IFCOND)' }
> +{ 'enum': 'Enum', 'data':
> +  [ { 'name': 'one', 'if': 'defined(IFENUM)' }, 'two' ],
> +  'if': 'defined(IFCOND)' }

IFCOND applies to the enum, and IFENUM applies to one of its values.
Awkward.  Let's rename IFENUM to IFONE.

>=20=20
>  ##
>  # @Base:
> diff --git a/tests/qapi-schema/doc-good.out b/tests/qapi-schema/doc-good.=
out
> index c2fc5c774a..a05535b69b 100644
> --- a/tests/qapi-schema/doc-good.out
> +++ b/tests/qapi-schema/doc-good.out
> @@ -11,6 +11,7 @@ enum QType
>  module doc-good.json
>  enum Enum
>      member one
> +        if ['defined(IFENUM)']
>      member two
>      if ['defined(IFCOND)']
>  object Base
> diff --git a/tests/qapi-schema/doc-good.texi b/tests/qapi-schema/doc-good=
.texi
> index e42eace474..5c0231e0e6 100644
> --- a/tests/qapi-schema/doc-good.texi
> +++ b/tests/qapi-schema/doc-good.texi
> @@ -84,12 +84,12 @@ Examples:
>  @table @asis
>  @item @code{one}
>  The @emph{one} @{and only@}
> +@*@b{If:} @code{defined(IFENUM)}

@* forces a line break.  Putting it at the end of the previous line
would be tidier, but let's ignore that for now.

>  @item @code{two}
>  Not documented
>  @end table
>  @code{two} is undocumented
>=20=20
> -
>  @b{If:} @code{defined(IFCOND)}
>  @end deftp

