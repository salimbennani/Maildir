Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:47:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3BC655802E4
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 07:40:02 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:40:02 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AB3AA3Bxfc+hUkO3XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoWLPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfVyJPAIyy?=
 =?us-ascii?q?bIUAAOUdMuhFt4nwpVkAoBSjCQSiGO/g1CRIi2Tq3aEmyektDR3K0RY8E98IrX?=
 =?us-ascii?q?/arM/1NKAXUe2ty6fH1y/Db/BL2Tfm9YPFbgohofSXUrJqbMrR0lUvGB3fjl6N?=
 =?us-ascii?q?roHqJSmV1uEWvGiB8uptTvivhHA6pAFxuDev2t0ghZXOhoIQ013J8zhyzogyJd?=
 =?us-ascii?q?29UkF7YNikHYNftyGcKot6WMQiQ3tnuCs817YIuoa7cTAUxJg7xBPTceGLf5WL?=
 =?us-ascii?q?7x75SuqcLzd1iGh4dL+9nxq+71Ssx+nmWsWp3ltGsDBJnsTPu30DzRDf9MuKR/?=
 =?us-ascii?q?1g9Um7wzmPzRrc6uRcLEA0i6XbL5khz6Y0lpoSqkTDAjT2lF/5jK+Qa0Uo4O+o?=
 =?us-ascii?q?6/7oYrn+p5+cMZF7ih3mP6gwhsCyAv40PhUTU2WY4+iwyrPu8E3jTLlXjPA6iq?=
 =?us-ascii?q?zZv4rbJcQfqK65GQhV0oM75hamETim1ckYkWAaI11bZhKIkYzpN0jVL/D/EPe/?=
 =?us-ascii?q?hUijnylwx/zBOr3hA5bNIWbZnLbuYLZw80pcyAs1zdBC6JNYELABIPTvWkDvsN?=
 =?us-ascii?q?zUFAM2Mwuxw+v8DtV90YUeWW2JAq+EKq/StkWI5u03L+mWeIAVoCr9K+Qi5/P2?=
 =?us-ascii?q?iX85mFwdcrez0ZoYdXC1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X/?=
 =?us-ascii?q?F02zcgFYjzDZvfXpv/x/uF3TynBdtQYWZJDE3KFm3nMICNWvMJYSTVJdd9kzsC?=
 =?us-ascii?q?Tv+4Roo8kB2jqgL+mIdhNfferygRtJb/04ps6ujO0B0/6zFwSt6QynyAVH1cmG?=
 =?us-ascii?q?QOSDkrmqdlrhtm112B3KNk1uFeDsFZ/PhTUw03ZqLbmsFgCtu6cAbIfdrBHFus?=
 =?us-ascii?q?RtylDBkrQ94xysNIaEF4TYaMlBfGig+jGbwIjPSiHpk+6L/Hw3Xrb5J00XPMzr?=
 =?us-ascii?q?QJlVQqQsJTc2ahg/gspEDoG4fVnhDBxO6RfqMG0XuIrT/bwA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BGAgCcBwBchxHrdtBkgheBMYE5gRYTj?=
 =?us-ascii?q?HCLKYINiRAOjiYUgV8UGAsJh3QiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jDII?=
 =?us-ascii?q?2BQIDGgEGglsBAQICAQECQwopAwIBAQIGAQEYCiMDCAMBDAQNBwQaFxMFgxwBg?=
 =?us-ascii?q?WkDCAUIAQQKp1KELQEDAgxCgwANghcFjBYXgX+BEYVpRwECAoErARIBhXoCn3U?=
 =?us-ascii?q?uCYZ+hhhwgywYFolCh0SNWIELiWuBTQKBE3FwFYMnE4IUFxKITIVAQDEBgQYci?=
 =?us-ascii?q?mBHgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BGAgCcBwBchxHrdtBkgheBMYE5gRYTjHCLKYINiRAOjiY?=
 =?us-ascii?q?UgV8UGAsJh3QiNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGgEGglsBA?=
 =?us-ascii?q?QICAQECQwopAwIBAQIGAQEYCiMDCAMBDAQNBwQaFxMFgxwBgWkDCAUIAQQKp1K?=
 =?us-ascii?q?ELQEDAgxCgwANghcFjBYXgX+BEYVpRwECAoErARIBhXoCn3UuCYZ+hhhwgywYF?=
 =?us-ascii?q?olCh0SNWIELiWuBTQKBE3FwFYMnE4IUFxKITIVAQDEBgQYcimBHgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="53856300"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 07:39:59 -0800
Received: from localhost ([::1]:54887 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSOQ4-00024C-D8
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 10:40:00 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47925)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gSOOf-0000zV-H5
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 10:38:34 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gSOOc-0001re-Bw
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 10:38:33 -0500
Received: from mx1.redhat.com ([209.132.183.28]:18809)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gSOOc-0001rC-37
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 10:38:30 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 9633EC057F9A;
	Thu, 29 Nov 2018 15:38:28 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-104.ams2.redhat.com
	[10.36.116.104])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 3C0C15C883;
	Thu, 29 Nov 2018 15:38:28 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id C6EC21132928; Thu, 29 Nov 2018 16:38:26 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Eric Blake <eblake@redhat.com>
References: <1541156463-2730-1-git-send-email-liq3ea@gmail.com>
	<64f88d81-8de1-a4b3-196f-c5c95a45e4e5@redhat.com>
Date: Thu, 29 Nov 2018 16:38:26 +0100
In-Reply-To: <64f88d81-8de1-a4b3-196f-c5c95a45e4e5@redhat.com> (Eric Blake's
	message of "Mon, 5 Nov 2018 17:01:50 -0600")
Message-ID: <877egv99n1.fsf_-_@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Thu, 29 Nov 2018 15:38:28 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] QAPI 'size' vs. 'uint64' (was: [PATCH] qapi: misc:
 change the 'pc' to unsinged 64 in CpuInfo)
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Li Qiang <liq3ea@gmail.com>, armbru@redhat.com, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Eric Blake <eblake@redhat.com> writes:

> On 11/2/18 6:01 AM, Li Qiang wrote:
>> When trigger a 'query-cpus' qmp, the pc is an signed value like
>> following:
>> {"arch": "x86", ...  "pc": -1732653994, "halted": true,...}
>> It is strange. Change it to uint64_t.
>>
>> Signed-off-by: Li Qiang <liq3ea@gmail.com>
>> ---
>>   qapi/misc.json | 12 ++++++------
>>   1 file changed, 6 insertions(+), 6 deletions(-)
>
> I don't see this as causing any major backwards-incompatible behavior
> to clients that can parse full 64-bit unsigned numbers (note that not
> all JSON parsers do so - here's frowning at you, jansson - but libvirt
> is okay).
>
> Reviewed-by: Eric Blake <eblake@redhat.com>

Client breakage is possible, but feels unlikely.  To break, a client has
to (a) accept negative numbers modulo 2^64, and (b) don't accept numbers
>= 2^63.  That's extra work.  Clients that simply use strtoul() are
unaffected.  We accepted this very risk when we fixed the QObject
visitor for unsigned integers in commit 5923f85fb82.  Relevant part of
the commit message:

    Note: before the patch, uint64_t values above INT64_MAX are sent over
    json QMP as negative values, e.g. UINT64_MAX is sent as -1. After the
    patch, they are sent unmodified.  Clearly a bug fix, but we have to
    consider compatibility issues anyway.  libvirt should cope fine,
    because its parsing of unsigned integers accepts negative values
    modulo 2^64.  There's hope that other clients will, too.

This patch needs to discuss the risk, too.  Suggest to steal from the
commit message I quoted.


There's another question: 'uint64' or 'size'?

Short answer: I think we better stick to 'uint64' here.  Long answer
follows.

Both QAPI types map to uint64_t in C.  The difference is twofold:

* It serves as a documentation of intent in the QAPI schema.  Or rather
  it would, if we used it more consistently.

  Related:
  [RFC PATCH 00/56] qapi: Use 'size' for byte counts & offsets
  https://lists.gnu.org/archive/html/qemu-devel/2017-08/msg01089.html
  Message-Id: <1502117160-24655-1-git-send-email-armbru@redhat.com>

  From its cover letter:

      Byte sizes, offsets and the like should use QAPI type 'size'
      (uint64_t).  This rule is more honored in the breach than in the
      observance.  Fix the obvious offenders.

  The series doesn't fix the program counters in the CpuInfoFOO.

* A few visitors treat 'size' differently:

  - The opts visitor parses with qemu_strtosz() instead of parse_uint(),
    and it doesn't support ranges.  Let's ignore ranges.  qemu_strtosz()
    accepts convenience syntax like 1.5M for 1.5 * 1024 * 1024.

    This visitor is used for parsing CLI options -numa, -netdev,
    -object, -acpitable, HMP netdev_add, object_add, and the -object
    equivalents of qemu-img, qemu-io, qemu-nbd.
    
  - The QObject input visitor's keyval flavour parses with
    qemu_strtosz() instead of qemu_strtou64().

    This visitor is used for parsing CLI options -display (except for
    its legacy forms), -blockdev, and by block layer in ways that are
    too complex to explain here.

  - The string input visitor[*] parses with qemu_strtosz() (via
    parse_option_size()) instead of qemu_strtou64(), and it doesn't
    support ranges.

    This visitor is used for parsing HMP migrate_set_parameter and QOM
    property values.  It's also used for getting QOM property values
    (don't ask, it's terrible).

  - The string output visitor uses format PRIu64 instead of PRId64 and
    optionally PRIx64 as well, and it doesn't support ranges.  This
    visitor is used for HMP info migrate, info memdev, info network,
    info qtree.  It's also used for getting QOM property values
    (terrible).

  Yes, this stuff could have used adult design supervision.

  As far as I can tell, none of the 'size' differences is relevant for
  this patch.

So, on the one hand, program counters are byte counts, so 'size' feels
more appropriate.  On the other hand, the important part is changing to
unsigned, and 'uint64' gets us there without the additional baggage of
'size'.

The additional baggage looks irrelevant for this patch.  But perhaps we
should make up our mind on usage of 'size' in general.

The true reason it exists is the desire for convenience syntax at the
human interface.  Fair enough, but it doesn't scale: we could use
convenience syntax in many other places, but creating a special type for
each kind is an awful way to get it.  If we had a better, more general
way to specify "use this convenience syntax for human interfaces" in the
schema, we could get rid of size.


[*] With David Hildenbrand's patches applied.

