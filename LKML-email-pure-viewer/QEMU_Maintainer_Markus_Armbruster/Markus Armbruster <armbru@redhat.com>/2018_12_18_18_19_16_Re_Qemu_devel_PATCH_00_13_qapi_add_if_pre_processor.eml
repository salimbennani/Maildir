Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:41:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 695A258055F
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 10:20:46 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 18 Dec 2018 10:20:45 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AkmRqehCpzsNSEQ/49E3qUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPXypMbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJPAo2y?=
 =?us-ascii?q?bYQBDOQOMulEoIfyulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9CAHLxhAsE84UvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjNaOlZ2S3+6IjVaRAqvO2BXah1ccXK00kvChjFjkmO?=
 =?us-ascii?q?poz/IjiY0f4Cs3Ke7+V7T+KvlnUqqxtvrTeyxscjkJXJipgJxVDD8CV02YA4Ls?=
 =?us-ascii?q?C7Rk5jedOoDodcuiKAO4drX88vQHtktDg0x7AGo5K3YSoHxIw5yxLDb/GLaZWE?=
 =?us-ascii?q?7xz9WOqLPDt1h3xodKihixux90Wr1/fyWdOu0FlQqypIitnMuW4J1xzU8sWHTv?=
 =?us-ascii?q?p9/ly92TaUzQzT5edEIV0umarcMZ4hzaY8lpsVsUvdAi/7gFv6gLOVe0k+5+Sk?=
 =?us-ascii?q?9ufqbq/4qpKSN4J4kBzyP6Y2lsy6G+s4MwwOX2aB+eS70b3u5VT5T6tPjv0ri6?=
 =?us-ascii?q?XWrY7VJdoFqa69GgNayYEj6wu5Dzi6ztsYhn4LLFZEeBKEkYflIV7PIO3gAPe7?=
 =?us-ascii?q?glSsliprxv/cMr3gBJXNMmbMkLP7cblh7E5czRE+zdZY55JSBbEBJu/zVlX2tN?=
 =?us-ascii?q?zCAR81Kxa0zPr/CNVhyoMeXnqCAquYMKPRr1CE/O0uI/SXaY8RuTb9LeUl5vH0?=
 =?us-ascii?q?gX84n18dYbem3Z8NZH+kGfRmJhbRXHz3n91UEXsWphFsC6vuiUaeSnhVYHC9Wb?=
 =?us-ascii?q?964Ss0T4evDIPGT4bqh6Sd3SC9BdpPa2VbT1yBD3rsJLiCQOoGPSebI8t9lW4d?=
 =?us-ascii?q?WL28DoMsyxyq8RX30qdqNfb8/CoeupT+kt9v6LrIiBsw+DdoWtmbyHyHVGpun2?=
 =?us-ascii?q?kFFAMxiYV2u0c441GPyykwp+FCGNVOr6dMWx0xPJjQ1eE8D83oVwvcVs2ERFav?=
 =?us-ascii?q?XpOtBjRnHfwrxNpbRk9nGMi5xjnZ2iCwHqQJmqbDUJUu96jGwlDrKsp9wmqA36?=
 =?us-ascii?q?4k2Qp1CvBTPHGr0/YsvzPYAJTExgDAz/6n?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BHBACNORlchxHrdtBjg0iCTxODfIh4i?=
 =?us-ascii?q?xyCDXyIJ5AlGhgUhx0iOBIBAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJ?=
 =?us-ascii?q?cAQICAQECICMKKQMCAQECBgEBChoCBR0EAgIDAQsBBBgxEwUWgweBdAUIAQSnS?=
 =?us-ascii?q?oEvii6BC4s0F4F/gRGCXTWICYJXAqBNVwmRYBiJdodhmXOBXYF3cBWDJ4InFxK?=
 =?us-ascii?q?ODEAxgQcci02BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BHBACNORlchxHrdtBjg0iCTxODfIh4ixyCDXyIJ5AlGhg?=
 =?us-ascii?q?Uhx0iOBIBAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJcAQICAQECICMKK?=
 =?us-ascii?q?QMCAQECBgEBChoCBR0EAgIDAQsBBBgxEwUWgweBdAUIAQSnSoEvii6BC4s0F4F?=
 =?us-ascii?q?/gRGCXTWICYJXAqBNVwmRYBiJdodhmXOBXYF3cBWDJ4InFxKODEAxgQcci02Bd?=
 =?us-ascii?q?wEB?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="44546936"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 10:20:45 -0800
Received: from localhost ([::1]:55719 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZJz2-000284-JP
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 13:20:44 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:42478)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gZJxp-0001UF-FC
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 13:19:30 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gZJxn-0001Xf-BC
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 13:19:29 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34514)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gZJxl-0001KI-7B
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 13:19:27 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 1A452C0495B4
	for <qemu-devel@nongnu.org>; Tue, 18 Dec 2018 18:19:22 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id B6D72600CC;
	Tue, 18 Dec 2018 18:19:17 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 1F6C9113860E; Tue, 18 Dec 2018 19:19:16 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20181216140902.23986-1-marcandre.lureau@redhat.com>
Date: Tue, 18 Dec 2018 19:19:16 +0100
In-Reply-To: <20181216140902.23986-1-marcandre.lureau@redhat.com>
	(=?utf-8?Q?=22Marc-Andr=C3=A9?=
	Lureau"'s message of "Sun, 16 Dec 2018 18:08:49 +0400")
Message-ID: <87lg4mbsuz.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Tue, 18 Dec 2018 18:19:22 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 00/13] qapi: add #if pre-processor
 conditions to generated code (part 3)
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:

> Hi,
>
> The thrid and last part (of "[PATCH v2 00/54] qapi: add #if
> pre-processor conditions to generated code") is about adding schema
> conditions based on the target.
>
> For now, the qapi code is compiled in common objects (common to all
> targets). This makes it impossible to add #if TARGET_ARM for example.
>
> The patch "RFC: qapi: learn to split the schema by 'top-unit'"
> proposes to split the schema by "top-unit", so that generated code can
> be built either in common objects or per-target. That patch is a bit
> rough, I would like to get some feedback about the approach before
> trying to improve it. The following patches demonstrate usage of
> target-based #if conditions, and getting rid of the
> qmp_unregister_command() hack.

Lovely except for the 'top-unit' feature.  I believe the existing
modules can do the job.  Quoting my "[PATCH v2 00/29] Modularize
generated QAPI code":

    Related: Marc-Andr=C3=A9's 'unit' pragma proposal.  That's a different
    way to split off parts of the generated code, motivated by the
    desire to use poisoned identifiers such as TARGET_I386.  I noted in
    my review of v3 that I "can either accept it, or come up with a
    better solution."  This is my attempt at a better solution.  It's a
    bit more ambitious, and thus more useful (I hope).  The pragma has
    one theoretical advantage, though: you can modularize the generated
    output in different ways than the input.  The patches using don't do
    that, however.

I'm going to post RFC patches that show how to do a target-dependent
module.  Then we can discuss the two approaches.

