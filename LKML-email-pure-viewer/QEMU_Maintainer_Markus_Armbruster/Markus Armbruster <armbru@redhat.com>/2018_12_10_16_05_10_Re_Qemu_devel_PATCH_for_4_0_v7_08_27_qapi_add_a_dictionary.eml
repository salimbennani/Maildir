Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:39:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D4ECD5807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 08:10:23 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 08:10:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ALQk+Jxxyh67Ni0XXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uMVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhRWSJDDY2/?=
 =?us-ascii?q?YYQAAPYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bEj0+k7DQ3KwBYtEtAIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafP1zrDdfBW2Srm6IPVbh0hu/SMUqlqccrM0kkvCx3Kjk+N?=
 =?us-ascii?q?ooHiJTyVzOENvHOB7+p9Tu+vkXAopBxxoje12scgkJXGhoUQyl3d8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpE4FcuzyHO4Z1WM8uXW9ltSYgxrEbu5O3ZDYGxIgjyhLFdvCKfZaE?=
 =?us-ascii?q?7gj+WOuSLzp0nmxpdbG5ih2v60av0Pf8WdOx0FtSripKjN3MtncV2hzX68iHUe?=
 =?us-ascii?q?d9/ly71TaA0QDT9/tIIUcularUM5Ihw7gwmYQPsUnbACP6hEb7gLWLekk5+eWk?=
 =?us-ascii?q?8frrb7vmq5OGKoN5iBnyMqE0lcy+BeQ4PBIOX2+e+emkzb3s40j5QKhTgvIrjK?=
 =?us-ascii?q?bZro7VJcACqqGiBA9Vz4Aj5AqhADe919gYmXgHLFFbdx6dgInpJknDIPT5Dfe5?=
 =?us-ascii?q?nlStny1nx/HAPr39HJrNKmLPn6vmfbZ48ENczg0zzdZQ55JSF7ENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9TbxbJV6Eay/snssZCjVN+Q4/V/DxzluFVzFVejC1Ra?=
 =?us-ascii?q?174zg6DIevC8DEXpysh7qamz62G4ATam1YB1TfLHHzao/RXv4NbD6VcNZslyFB?=
 =?us-ascii?q?WbW/Rotkzxy3qQLh15JhKezb/DBesojsg8No7e/eng1n6DpvEs6G2HuMRWwnom?=
 =?us-ascii?q?RdYjYs1+VWp0BnS2CnzLJ1iuEQQdla/fhAVAsgONjY0vZ3As3aQA/Nft6VDl2h?=
 =?us-ascii?q?R4P1Lys2S4cUysUNfl01Ms+nhArexDanGfdBnqaODoYp2rjR03j4O4B2zHOQh/?=
 =?us-ascii?q?pptEUvXsYabT7uvaV47QWGQteRy0g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CmAgA4jw5cmBHrdtBjHgEGBwaBZYExg?=
 =?us-ascii?q?TmBFhODeoh4izCCDYkgkCQUGAMRhECDLSI4EgEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4jDII2BQIDGgEGglwBAgIBAQIgIwopAwIBAQIGAQEKGgIFGgMEAgIDAQsBB?=
 =?us-ascii?q?BgxEwWDHAGBdAUIAQSlaoEviiCBC4sWF4F/gRGDEoFUgy2DBIJXAokVhiiROAm?=
 =?us-ascii?q?HCIpHGIIphz2HV5kwgV2Bd3AVO4JsCYIeFxKJHYRvQDGBBxyKBYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CmAgA4jw5cmBHrdtBjHgEGBwaBZYExgTmBFhODeoh4izC?=
 =?us-ascii?q?CDYkgkCQUGAMRhECDLSI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDG?=
 =?us-ascii?q?gEGglwBAgIBAQIgIwopAwIBAQIGAQEKGgIFGgMEAgIDAQsBBBgxEwWDHAGBdAU?=
 =?us-ascii?q?IAQSlaoEviiCBC4sWF4F/gRGDEoFUgy2DBIJXAokVhiiROAmHCIpHGIIphz2HV?=
 =?us-ascii?q?5kwgV2Bd3AVO4JsCYIeFxKJHYRvQDGBBxyKBYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="56264711"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 08:10:22 -0800
Received: from localhost ([::1]:33514 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWO8T-00063u-PB
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 11:10:21 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52109)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWO3p-0001o3-QQ
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:05:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWO3l-0004cp-QZ
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:05:33 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51032)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gWO3f-0004Xa-1x
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 11:05:27 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 9FB3D30842CE;
	Mon, 10 Dec 2018 16:05:14 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id DBE355D717;
	Mon, 10 Dec 2018 16:05:11 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 68D01113860E; Mon, 10 Dec 2018 17:05:10 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9_Lureau?= <marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
	<20181208111606.8505-9-marcandre.lureau@redhat.com>
	<87h8flfktf.fsf@dusky.pond.sub.org>
Date: Mon, 10 Dec 2018 17:05:10 +0100
In-Reply-To: <87h8flfktf.fsf@dusky.pond.sub.org> (Markus Armbruster's message
	of "Mon, 10 Dec 2018 16:44:28 +0100")
Message-ID: <87woohxt8p.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.40]);
	Mon, 10 Dec 2018 16:05:14 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-4.0 v7 08/27] qapi: add a dictionary
 form with 'name' key for enum members
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, Michael Roth <mdroth@linux.vnet.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

One more thing...

Markus Armbruster <armbru@redhat.com> writes:

> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
>> Desugar the enum NAME form to { 'name': NAME }. This will allow to add
>> new enum members, such as 'if' in the following patch.
>>
>> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
>> ---
>>  scripts/qapi/common.py                        | 49 ++++++++++++++++---
>>  tests/Makefile.include                        |  3 +-
>>  tests/qapi-schema/enum-bad-member.err         |  1 +
>>  ...-dict-member.exit =3D> enum-bad-member.exit} |  0
>>  tests/qapi-schema/enum-bad-member.json        |  2 +
>>  ...um-dict-member.out =3D> enum-bad-member.out} |  0
>>  .../qapi-schema/enum-dict-member-unknown.err  |  2 +
>>  .../qapi-schema/enum-dict-member-unknown.exit |  1 +
>>  .../qapi-schema/enum-dict-member-unknown.json |  2 +
>>  .../qapi-schema/enum-dict-member-unknown.out  |  0
>>  tests/qapi-schema/enum-dict-member.err        |  1 -
>>  tests/qapi-schema/enum-dict-member.json       |  2 -
>>  12 files changed, 52 insertions(+), 11 deletions(-)
>>  create mode 100644 tests/qapi-schema/enum-bad-member.err
>>  rename tests/qapi-schema/{enum-dict-member.exit =3D> enum-bad-member.ex=
it} (100%)
>>  create mode 100644 tests/qapi-schema/enum-bad-member.json
>>  rename tests/qapi-schema/{enum-dict-member.out =3D> enum-bad-member.out=
} (100%)
>>  create mode 100644 tests/qapi-schema/enum-dict-member-unknown.err
>>  create mode 100644 tests/qapi-schema/enum-dict-member-unknown.exit
>>  create mode 100644 tests/qapi-schema/enum-dict-member-unknown.json
>>  create mode 100644 tests/qapi-schema/enum-dict-member-unknown.out
>>  delete mode 100644 tests/qapi-schema/enum-dict-member.err
>>  delete mode 100644 tests/qapi-schema/enum-dict-member.json
>>
>> diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
[...]
>> @@ -847,18 +851,32 @@ def check_alternate(expr, info):
>>              types_seen[qt] =3D key
>>=20=20
>>=20=20
>> +def normalize_enum(expr):
>> +    members =3D expr['data']
>> +
>> +    # translate short member form to dict form
>> +    expr['data'] =3D [m if isinstance(m, dict) else {'name': m} for m i=
n members]
>> +
>> +
>>  def check_enum(expr, info):
>>      name =3D expr['enum']
>> -    members =3D expr.get('data')
>> +    members =3D expr['data']
>>      prefix =3D expr.get('prefix')
>>=20=20
>> -    if not isinstance(members, list):
>> -        raise QAPISemError(info,
>> -                           "Enum '%s' requires an array for 'data'" % n=
ame)
>>      if prefix is not None and not isinstance(prefix, str):
>>          raise QAPISemError(info,
>>                             "Enum '%s' requires a string for 'prefix'" %=
 name)
>> +
>> +    if not isinstance(members, list):
>> +        raise QAPISemError(info,
>> +                           "Enum '%s' requires an array for 'data'" % n=
ame)
>> +
>
> Did you move this check down intentionally?
>
>>      for member in members:
>> +        if isinstance(member, dict):
>> +            source =3D "dictionary member of enum '%s'" % name
>> +            check_known_keys(info, source, member, ['name'], [])
>> +            member =3D member['name']
>> +
>>          check_name(info, "Member of enum '%s'" % name, member,
>>                     enum_member=3DTrue)
>
> Again, slightly more complicated than v6 because it now runs before
> normalization.  We'll revisit this at [*] below.

If we keep it this way, then let's at least avoid assigning to the loop
control variable:

                member_name =3D member['name']
            else:
                member_name =3D member
            check_name(info, "Member of enum '%s'" % name, member_name,
                       enum_member=3DTrue)

[...]

