Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:48:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 01853580380
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 07:40:41 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 07:40:40 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AzPRJrBNLMVftakoZv2Ul6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/X4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSSJBDI2+?=
 =?us-ascii?q?YIUMAeUOMvpXoYbgqVsWrxawBwahCP7hxzNUmHD2xrY30/g4EQzcwAAsA8gDvX?=
 =?us-ascii?q?bSod7oNKkSS+e1zKzQwDvEdfxWwzT96JXTchs8vfyMR7dwftHLyUkyDAPFkkuf?=
 =?us-ascii?q?qZb4ND6SzOsNqW2b4PF6VeKykGMnsR9+rSWvxsg2lonFnJ4aylfB9Shgxos+ON?=
 =?us-ascii?q?62SFZjbNK6DJddtDuWO5ZrTs4hWW1kpig3x70ctZKmfiUG0IorywLbZvCdboSF?=
 =?us-ascii?q?7AzvWPyMLTp7in9pYqyzihW0/EO90OPzTNO030xPriddktnDqHQN1xvL58iDS/?=
 =?us-ascii?q?t95Vuh2S2V2wDc7OFEPFo4la3BK54u2rIwl5wTvlrfHiLuhkn6kKybel859uS1?=
 =?us-ascii?q?6OnreKvqq5GcOoNulw3zMLwimsmlDuQ5NggOUXKb+eO51LD75E32XrBKjuAvnq?=
 =?us-ascii?q?bErp/aO9oUpqqgDwBO1YYj9hC/ACu439QDmnUHKFNFeBGZgITzNFDOPej1DfO+?=
 =?us-ascii?q?g1SqjTdqyOrKPrznApXRMHfDlK3tcqp6605Z0wczy9df55RbCrEHPfL/QEjxtM?=
 =?us-ascii?q?bXDhMhKQy73/7nCMlh1oMZQW+PBq6ZMKDMvlOS6eMvPvKBZIsUuDb7Nvgk6OTi?=
 =?us-ascii?q?jX4/mV8BY6ap2YEbZ2y/HvRjcA2kZ2HxiIIBDXsSpVh5C+jrk0GZFzhUYXm0Qu?=
 =?us-ascii?q?Q7/D58DYunCYLKQMeqmKCA2yGgWYRbY30DBl2SHHO7SoOfRv1ZbSuTJtNmwCUJ?=
 =?us-ascii?q?UKXkR4I/2BXrrgLj1rd8MsLS/SsXs4+l08J6sPbOnxM//iAhEsKGzmuWRHt1lG?=
 =?us-ascii?q?5bezhj+allqglUzFuZUOBcnuZVHMEbs/ZASAwzM5LGwqp+Fsr/Ux/pZNqFSF+6?=
 =?us-ascii?q?BN6hBGdiYMg2xooralx+Bs7qpwrG1TC3GKMYjfTfDYYx+LjB92L8K8Z01zDN06?=
 =?us-ascii?q?x33ApueddGKWDz3v03zAPUHYOc1hzBz6s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CHAgCS2Q9cmBHrdtBkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBFhODe4h4izGCDYkhkCQUGAMRhECCbiI4EgEDAQEBAQEBAgETAQEBAQE?=
 =?us-ascii?q?ICwsGGw4jDII2BQIDGgEGglwBAgIBAQIgIwopAwIBAQIGAQEKGgIFGgMEAgIDA?=
 =?us-ascii?q?QsBBBgxEwWDHAGBdAUIAQSlVIEviiuBC4swF4F/hCOFAYMEglcCjz+GN4sFCYc?=
 =?us-ascii?q?JikgYgVxNhEqCc4damTOBXYF3cBWDJwmCR4kdhG9AMYEHHIhOgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CHAgCS2Q9cmBHrdtBkHQEBBQEHBQGBZYExgTmBFhODe4h?=
 =?us-ascii?q?4izGCDYkhkCQUGAMRhECCbiI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2B?=
 =?us-ascii?q?QIDGgEGglwBAgIBAQIgIwopAwIBAQIGAQEKGgIFGgMEAgIDAQsBBBgxEwWDHAG?=
 =?us-ascii?q?BdAUIAQSlVIEviiuBC4swF4F/hCOFAYMEglcCjz+GN4sFCYcJikgYgVxNhEqCc?=
 =?us-ascii?q?4damTOBXYF3cBWDJwmCR4kdhG9AMYEHHIhOgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55435769"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 07:40:39 -0800
Received: from localhost ([::1]:38743 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWk9G-0003xj-AB
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 10:40:38 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58922)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWjtD-0007CO-La
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 10:24:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWjt8-0003ZS-ID
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 10:24:03 -0500
Received: from mx1.redhat.com ([209.132.183.28]:59798)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gWjt8-0003YY-2l
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 10:23:58 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id EB6DB58E40;
	Tue, 11 Dec 2018 15:23:56 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 6F942105705F;
	Tue, 11 Dec 2018 15:23:53 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 05034113860E; Tue, 11 Dec 2018 16:23:52 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
	<20181208111606.8505-16-marcandre.lureau@redhat.com>
	<87zhtdcmq0.fsf@dusky.pond.sub.org>
Date: Tue, 11 Dec 2018 16:23:51 +0100
In-Reply-To: <87zhtdcmq0.fsf@dusky.pond.sub.org> (Markus Armbruster's message
	of "Mon, 10 Dec 2018 18:31:35 +0100")
Message-ID: <87y38woznc.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.39]);
	Tue, 11 Dec 2018 15:23:57 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-4.0 v7 15/27] qapi: add an error in
 case a discriminator is conditional
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, Michael Roth <mdroth@linux.vnet.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Two more nits...

Markus Armbruster <armbru@redhat.com> writes:

> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
>> Making a discriminator conditional doesn't make much sense.
>
> Good point (so easy to overlook!), but why first add the 'if' feature
> broken that way in PATCH 13, then fix it up in PATCH 15?
>
>>                                                             Instead,
>> the union could be made conditional.
>
> What do you mean by that?
>
>> Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
>> ---
>>  scripts/qapi/common.py                          |  8 ++++++++
>>  tests/Makefile.include                          |  1 +
>>  .../flat-union-invalid-if-discriminator.err     |  1 +
>>  .../flat-union-invalid-if-discriminator.exit    |  1 +
>>  .../flat-union-invalid-if-discriminator.json    | 17 +++++++++++++++++
>>  .../flat-union-invalid-if-discriminator.out     |  0
>>  6 files changed, 28 insertions(+)
>>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminato=
r.err
>>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminato=
r.exit
>>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminato=
r.json
>>  create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminato=
r.out
>>
>> diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
>> index aec51acb07..f79b3fad54 100644
>> --- a/scripts/qapi/common.py
>> +++ b/scripts/qapi/common.py
>> @@ -578,6 +578,7 @@ def find_alternate_member_qtype(qapi_type):
>>  # Return the discriminator enum define if discriminator is specified as=
 an
>>  # enum type, otherwise return None.
>>  def discriminator_find_enum_define(expr):
>> +    name =3D expr['union']

Dead assignment.

>>      base =3D expr.get('base')
>>      discriminator =3D expr.get('discriminator')
>>=20=20
>> @@ -594,6 +595,7 @@ def discriminator_find_enum_define(expr):
>>=20=20
>>      if isinstance(discriminator_value, dict):
>>          discriminator_value =3D discriminator_value['type']
>> +
>>      return enum_types.get(discriminator_value)
>>=20=20
>>=20=20
>
> These two hunks are leftovers, please drop.
>
>> @@ -800,7 +802,12 @@ def check_union(expr, info):
>>                                 "struct '%s'"
>>                                 % (discriminator, base))
>>          if isinstance(discriminator_value, dict):
>> +            if discriminator_value.get('if'):
>> +                raise QAPISemError(info, 'The discriminator %s.%s for u=
nion %s '

pycodestyle complains

    scripts/qapi/common.py:806:80: E501 line too long (80 > 79 characters)

>> +                                   'must not be conditional' %
>> +                                   (base, discriminator, name))
>>              discriminator_value =3D discriminator_value['type']
>> +
>>          enum_define =3D enum_types.get(discriminator_value)
>>          allow_metas =3D ['struct']
>>          # Do not allow string discriminator
>> @@ -1023,6 +1030,7 @@ def check_exprs(exprs):
>>=20=20
>>          if 'include' in expr:
>>              continue
>> +        info =3D expr_elem['info']
>>          if 'union' in expr and not discriminator_find_enum_define(expr):
>>              name =3D '%sKind' % expr['union']
>>          elif 'alternate' in expr:
>> diff --git a/tests/Makefile.include b/tests/Makefile.include
>> index ea5d1e8787..3f5a1d0c30 100644
>> --- a/tests/Makefile.include
>> +++ b/tests/Makefile.include
>> @@ -409,6 +409,7 @@ qapi-schema +=3D flat-union-inline-invalid-dict.json
>>  qapi-schema +=3D flat-union-int-branch.json
>>  qapi-schema +=3D flat-union-invalid-branch-key.json
>>  qapi-schema +=3D flat-union-invalid-discriminator.json
>> +qapi-schema +=3D flat-union-invalid-if-discriminator.json
>>  qapi-schema +=3D flat-union-no-base.json
>>  qapi-schema +=3D flat-union-optional-discriminator.json
>>  qapi-schema +=3D flat-union-string-discriminator.json
>> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.err b=
/tests/qapi-schema/flat-union-invalid-if-discriminator.err
>> new file mode 100644
>> index 0000000000..0c94c9860d
>> --- /dev/null
>> +++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.err
>> @@ -0,0 +1 @@
>> +tests/qapi-schema/flat-union-invalid-if-discriminator.json:13: The disc=
riminator TestBase.enum1 for union TestUnion must not be conditional
>> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.exit =
b/tests/qapi-schema/flat-union-invalid-if-discriminator.exit
>> new file mode 100644
>> index 0000000000..d00491fd7e
>> --- /dev/null
>> +++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.exit
>> @@ -0,0 +1 @@
>> +1
>> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.json =
b/tests/qapi-schema/flat-union-invalid-if-discriminator.json
>> new file mode 100644
>> index 0000000000..618ec36396
>> --- /dev/null
>> +++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.json
>> @@ -0,0 +1,17 @@
>> +{ 'enum': 'TestEnum',
>> +  'data': [ 'value1', 'value2' ] }
>> +
>> +{ 'struct': 'TestBase',
>> +  'data': { 'enum1': { 'type': 'TestEnum', 'if': 'FOO' } } }
>> +
>> +{ 'struct': 'TestTypeA',
>> +  'data': { 'string': 'str' } }
>> +
>> +{ 'struct': 'TestTypeB',
>> +  'data': { 'integer': 'int' } }
>> +
>> +{ 'union': 'TestUnion',
>> +  'base': 'TestBase',
>> +  'discriminator': 'enum1',
>> +  'data': { 'value1': 'TestTypeA',
>> +            'value2': 'TestTypeB' } }
>> diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.out b=
/tests/qapi-schema/flat-union-invalid-if-discriminator.out
>> new file mode 100644
>> index 0000000000..e69de29bb2
>
> Patch looks good otherwise.

