Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BE63B5804F7;
	Fri,  7 Dec 2018 19:52:56 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 19:52:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ATq7B6RJ3ktKQAVlbGtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/j7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVsVtRuzBxKhBP/txzJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvwNacSSuC1zK7OzT7eYPxW2DX955LIcxs8vfyDRqhwftDRyUY1EgPOk1ae?=
 =?us-ascii?q?opHiMjOW1+QNqGib7+1mVe+0l24nqht9rSSoxscpk4TEgJ8exF7D9SV82ok1JN?=
 =?us-ascii?q?u4RVZ0Yd6lDJtQtzyaOJBsTsw+RGFovSA3waAFt56jZCUG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDtknn5oebCyiw6v/UWgyODwTNS43VRWoiZfj9XBtGwB2wbO5sSbVv?=
 =?us-ascii?q?dw+Fqq1yyV2ADJ8O5EJFg5larFJJ4lxb49joQTsUvdES/sgkn2j7GZdl8i+ue2?=
 =?us-ascii?q?7+TreLLmpoWTN4NsiwH+NLohmtCnDOgmLgQDW3KX9fmy2bH950H1XbZHguEsnq?=
 =?us-ascii?q?TYsp3WPcEbqbS4Aw9R3IYj8RG/DzK+3dQcnHkHKk9FeR2eg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i1lzdqyfbGMaP7ApjWMHjDn6nufaxn505f1gUz19Zf6IxQCr0bJ/LzQEDxuM?=
 =?us-ascii?q?TCDhAlKwy03/rnCNJl24MaWGKPAbGWPLndsF+V/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSvgoxVu3qiEGYXj5UfXqyX7?=
 =?us-ascii?q?886Ss9CIKpForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2tg/6zKRoIvDX+i0fs5Lj0t916vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83OoTHz+x6DNDyWRjNfs2TR1ak?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5jFkpWM1POXeihq5+7QfTAYHJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnWC8BR?=
 =?us-ascii?q?KLxrOJaIrnYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0BuyqC6+gALivCGS/McxLQEuDw/pDVyB1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYjcgqrXYqzA1uKaKY0FJN?=
 =?us-ascii?q?bS+Y0Yr3Or3NLmny/Rava6HN11Ha0daW/LoP6fsip1XiugGpClQt83F939ZJ1H?=
 =?us-ascii?q?uc443ADBAOXpLpTkY36x96qqnAbSk5+YzV2mNjMKmuvjDZxtImGfEqyhCjf9dY?=
 =?us-ascii?q?LqOJDwvyE8wcB8izJ+0mgVmpbhQYPO9M8K44Jd+pd/yD2KSzJuZvgCqmjXhb4I?=
 =?us-ascii?q?B6yk+N9zd8RvTU0JofwvCY3hGIVzHzjFq6tsD3mIZEZSwdH2alyCjkApJRabN2?=
 =?us-ascii?q?fYoRFWiuJMi3zM1kh5HxQ35Y6EKjB1Qe1c+zeBqdc0by3RdN2kQQu3CnnzW3zy?=
 =?us-ascii?q?Z1kz0wsqWQxijOzPn8exodPW5LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe85O6JIyvSRXSui8ek2aSrjmrhse0iPjGX?=
 =?us-ascii?q?ZexT8hezGrvJX5gwJ1iGaHIHlvq3rZfNl6xQ3D69zEWf5Rwj0GSTF6iTbNHFi8?=
 =?us-ascii?q?PNqp/dKOm5fYqO++VGGhVpxVcSb1y4ONry+75WxsAR2ikPG/gNznEQ4m0SDl09?=
 =?us-ascii?q?lmTznHrBH5YoPzzaS1LfpnflV0BF/788d7GptxkowqiJES2HgagI6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwiE94NpLCK?=
 =?us-ascii?q?uO7LxEgDF6oly3rQ/KZfh9nzEdyeYh6XIAguEJvhYtwTuZArwIAUZYOinsnQyS?=
 =?us-ascii?q?79+itKVXeHqvcb+o2Up7nNChD6uNrhtSWXnnYZciATF/7t9kP13Syn3z5ZrpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5L65?=
 =?us-ascii?q?AhldNjHvZsIc4DftjbtFnsaN3oCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQW1s9tRB6ZJExCmgwUWCg6k4U9FgCrwszh?=
 =?us-ascii?q?bUh46ioQ5l7+thtD1OZoOwPjXWfYoQeici00R4SHLBpK8gFC4F/YMc6E4eJ2AS?=
 =?us-ascii?q?5Y5YetrBCXJmyYegRIDnwJWkqeCFD4JbSu4djA8+6FBuuxNffOYLOOqfBAWPeM?=
 =?us-ascii?q?356gzoxm/zOUPMWVInZiF+E72lZEXX1hG8XZnCgPSzUKly3Xac6Xvgy8+ipxrs?=
 =?us-ascii?q?Cw6/nrXAPv5Y2SC7pdK9lv+ha2gbudOO6Unip2NTFY1pYUz3/S1LcfxEISiz1p?=
 =?us-ascii?q?dzS1EbQPqy/NTKHTmq9WFRIbaDlzNMxH760ixAlNJNXbh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZuAetuTmACU/sIDSC?=
 =?us-ascii?q?myPtVxCuKuxMiCCbPBpDuICyaBptCG7jTM74ZR2/KtN4kTo2wbgsjHPQKWEcKS?=
 =?us-ascii?q?R8c19KrrCI8SNYg/B/F3Zd4XZ/MeaEmziW7+/DJ5YSsPtrBDl0lu1A7HQ7zbtV?=
 =?us-ascii?q?8D9LRPhvlCTOqd5upkmskvOTxTp/TBpOtjFLiZqLvEp4P6XZ85hAWXDc8xMM7W?=
 =?us-ascii?q?WfERIKp9R+B93ruqBQzMXPla3pJDdD9dLU4dUTB8zOJM2bN3ohNEmhJDmBMgob?=
 =?us-ascii?q?QD3jGmjCm0VY2KWM92OYrd41o4XwkZ8mQbhXWVUoDPQAAwJiBtNUZN8jUy0ri7?=
 =?us-ascii?q?OWiuYD5WC5qRjMQYNdpJ+RBdyIBvC6CzeCjb5CLyUJw7rpZa0ZLIT70kkqSxEu?=
 =?us-ascii?q?n4XRG03WdcxM5CZma1ln8w127HFiQzhriAreYQS37SpWTKbskw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BZAADPPwtch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmkDfyeDeogZjXEIJRSDMZQMgXMSAQEYCwgBh10iNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKSMMgjYkAYJiAQIDAQIgBBkBATcBBQkBAQoYAgImAgIDR?=
 =?us-ascii?q?BAGAQoCAQUCAQEBgxwBggEFCqclcHwzgnYBAQWBMAGBEoRrAwWBC4l7gRwRBoF?=
 =?us-ascii?q?/gTgMgl+DHgKEZYJXiymEE0c1kDEJhwaDOYcGCBaJc4dFiR+EcYp0AgICAgQFA?=
 =?us-ascii?q?hSBRl+BLjMiGxWDJ4IbDBeDSopbOAExgQUBAYtLAQE?=
X-IPAS-Result: =?us-ascii?q?A0BZAADPPwtch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmk?=
 =?us-ascii?q?DfyeDeogZjXEIJRSDMZQMgXMSAQEYCwgBh10iNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKSMMgjYkAYJiAQIDAQIgBBkBATcBBQkBAQoYAgImAgIDRBAGAQoCAQUCAQE?=
 =?us-ascii?q?BgxwBggEFCqclcHwzgnYBAQWBMAGBEoRrAwWBC4l7gRwRBoF/gTgMgl+DHgKEZ?=
 =?us-ascii?q?YJXiymEE0c1kDEJhwaDOYcGCBaJc4dFiR+EcYp0AgICAgQFAhSBRl+BLjMiGxW?=
 =?us-ascii?q?DJ4IbDBeDSopbOAExgQUBAYtLAQE?=
X-IronPort-AV: E=Sophos;i="5.56,328,1539673200"; 
   d="scan'208";a="44103387"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 19:52:36 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726126AbeLHDwd (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 22:52:33 -0500
Received: from fllv0015.ext.ti.com ([198.47.19.141]:52910 "EHLO
        fllv0015.ext.ti.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726081AbeLHDwd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 22:52:33 -0500
Received: from lelv0266.itg.ti.com ([10.180.67.225])
        by fllv0015.ext.ti.com (8.15.2/8.15.2) with ESMTP id wB83qTjq010504;
        Fri, 7 Dec 2018 21:52:29 -0600
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ti.com;
        s=ti-com-17Q1; t=1544241149;
        bh=3P0O3B5bw0xS4JcckgtPlgLmh/2nXG+17vIamKPLIWw=;
        h=Subject:To:CC:References:From:Date:In-Reply-To;
        b=S9NTh4co9fsKSwgHfTlIWdi8zNCQ4DiBp6KKKMVvbdQuJwbduADeXuH1lLp7fYEnF
         b9ITxiMJJ4oR73PXns5lPBm5SOOBuQ5L0J4Ly8tS/5yMks9iE/dv5To/dduYucEel3
         Ucou+PHcCiajem4KstqfTtyaMpGXsTyhXYFAjAIo=
Received: from DFLE102.ent.ti.com (dfle102.ent.ti.com [10.64.6.23])
        by lelv0266.itg.ti.com (8.15.2/8.15.2) with ESMTPS id wB83qT2T031659
        (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=FAIL);
        Fri, 7 Dec 2018 21:52:29 -0600
Received: from DFLE115.ent.ti.com (10.64.6.36) by DFLE102.ent.ti.com
 (10.64.6.23) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id 15.1.1591.10; Fri, 7
 Dec 2018 21:52:28 -0600
Received: from dlep32.itg.ti.com (157.170.170.100) by DFLE115.ent.ti.com
 (10.64.6.36) with Microsoft SMTP Server (version=TLS1_0,
 cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.1591.10 via Frontend Transport;
 Fri, 7 Dec 2018 21:52:28 -0600
Received: from [172.24.190.233] (ileax41-snat.itg.ti.com [10.172.224.153])
        by dlep32.itg.ti.com (8.14.3/8.13.8) with ESMTP id wB83qPgC014378;
        Fri, 7 Dec 2018 21:52:26 -0600
Subject: Re: [PATCH v6 2/5] phy: qcom-qmp: Utilize fully-specified DT
 registers
To: Vivek Gautam <vivek.gautam@codeaurora.org>, <evgreen@chromium.org>
CC: Rob Herring <robh@kernel.org>, Andy Gross <andy.gross@linaro.org>,
        Doug Anderson <dianders@chromium.org>, <swboyd@chromium.org>,
        Can Guo <cang@codeaurora.org>,
        open list <linux-kernel@vger.kernel.org>,
        Manu Gautam <mgautam@codeaurora.org>
References: <20181206233205.193244-1-evgreen@chromium.org>
 <20181206233205.193244-3-evgreen@chromium.org>
 <CAFp+6iHj=Z=MQA0WJBLHb9_KyYPz_snxoYNXAgbGndiqEc_=YQ@mail.gmail.com>
From: Kishon Vijay Abraham I <kishon@ti.com>
Message-ID: <55197846-2b93-9b94-d39e-361f67cf9503@ti.com>
Date: Sat, 8 Dec 2018 09:22:17 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <CAFp+6iHj=Z=MQA0WJBLHb9_KyYPz_snxoYNXAgbGndiqEc_=YQ@mail.gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-EXCLAIMER-MD-CONFIG: e1e8a2fd-e40a-4ac6-ac9b-f7e9cc9ee180
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

On 07/12/18 2:16 PM, Vivek Gautam wrote:
> On Fri, Dec 7, 2018 at 5:06 AM Evan Green <evgreen@chromium.org> wrote:
>>
>> Utilize the newly fixed up DT bindings to get the tx2 and rx2 register
>> regions for the second lane of dual-lane PHYs. Before this change,
>> the driver was simply using lane one's register region and adding
>> 0x400, which reached well beyond the DT-specified register
>> allocation. This would have been a crash were it not for the page size
>> on ARM64. Fix the driver not to rely on the magic of virtual memory by
>> using the newly specified DT register regions for tx2 and rx2.
>>
>> In order to support existing device trees, this change also contains a
>> fallback mode for when those new register regions don't exist, which
>> reverts to the original behavior of overreaching and prints a complaint.
>>
>> Signed-off-by: Evan Green <evgreen@chromium.org>
>> Reviewed-by: Douglas Anderson <dianders@chromium.org>
>> ---
>> As Doug mentioned, this should land before the dts patches land, otherwise
>> the old driver code will use the tx2 register region as pcs_misc.
>>
>> Changes in v6: None
>> Changes in v5: None
>> Changes in v4: None
>> Changes in v3: None
>> Changes in v2: None
>>
>>  drivers/phy/qualcomm/phy-qcom-qmp.c | 51 +++++++++++++++++++++--------
>>  1 file changed, 38 insertions(+), 13 deletions(-)
>>
>> diff --git a/drivers/phy/qualcomm/phy-qcom-qmp.c b/drivers/phy/qualcomm/phy-qcom-qmp.c
>> index 514db7248a5d0..8204d55e2d650 100644
>> --- a/drivers/phy/qualcomm/phy-qcom-qmp.c
>> +++ b/drivers/phy/qualcomm/phy-qcom-qmp.c
>> @@ -72,6 +72,9 @@
>>
>>  #define MAX_PROP_NAME                          32
>>
>> +/* Define the assumed distance between lanes for underspecified device trees. */
>> +#define QMP_PHY_LEGACY_LANE_STRIDE             0x400
>> +
>>  struct qmp_phy_init_tbl {
>>         unsigned int offset;
>>         unsigned int val;
>> @@ -733,9 +736,6 @@ struct qmp_phy_cfg {
>>         bool has_phy_dp_com_ctrl;
>>         /* true, if PHY has secondary tx/rx lanes to be configured */
>>         bool is_dual_lane_phy;
>> -       /* Register offset of secondary tx/rx lanes for USB DP combo PHY */
>> -       unsigned int tx_b_lane_offset;
>> -       unsigned int rx_b_lane_offset;
>>
>>         /* true, if PCS block has no separate SW_RESET register */
>>         bool no_pcs_sw_reset;
>> @@ -748,6 +748,8 @@ struct qmp_phy_cfg {
>>   * @tx: iomapped memory space for lane's tx
>>   * @rx: iomapped memory space for lane's rx
>>   * @pcs: iomapped memory space for lane's pcs
>> + * @tx2: iomapped memory space for second lane's tx (in dual lane PHYs)
>> + * @rx2: iomapped memory space for second lane's rx (in dual lane PHYs)
>>   * @pcs_misc: iomapped memory space for lane's pcs_misc
>>   * @pipe_clk: pipe lock
>>   * @index: lane index
>> @@ -759,6 +761,8 @@ struct qmp_phy {
>>         void __iomem *tx;
>>         void __iomem *rx;
>>         void __iomem *pcs;
>> +       void __iomem *tx2;
>> +       void __iomem *rx2;
>>         void __iomem *pcs_misc;
>>         struct clk *pipe_clk;
>>         unsigned int index;
>> @@ -975,8 +979,6 @@ static const struct qmp_phy_cfg qmp_v3_usb3phy_cfg = {
>>
>>         .has_phy_dp_com_ctrl    = true,
>>         .is_dual_lane_phy       = true,
>> -       .tx_b_lane_offset       = 0x400,
>> -       .rx_b_lane_offset       = 0x400,
>>  };
>>
>>  static const struct qmp_phy_cfg qmp_v3_usb3_uniphy_cfg = {
>> @@ -1031,9 +1033,6 @@ static const struct qmp_phy_cfg sdm845_ufsphy_cfg = {
>>         .mask_pcs_ready         = PCS_READY,
>>
>>         .is_dual_lane_phy       = true,
>> -       .tx_b_lane_offset       = 0x400,
>> -       .rx_b_lane_offset       = 0x400,
>> -
>>         .no_pcs_sw_reset        = true,
>>  };
>>
>> @@ -1238,12 +1237,12 @@ static int qcom_qmp_phy_init(struct phy *phy)
>>         qcom_qmp_phy_configure(tx, cfg->regs, cfg->tx_tbl, cfg->tx_tbl_num);
>>         /* Configuration for other LANE for USB-DP combo PHY */
>>         if (cfg->is_dual_lane_phy)
>> -               qcom_qmp_phy_configure(tx + cfg->tx_b_lane_offset, cfg->regs,
>> +               qcom_qmp_phy_configure(qphy->tx2, cfg->regs,
>>                                        cfg->tx_tbl, cfg->tx_tbl_num);
>>
>>         qcom_qmp_phy_configure(rx, cfg->regs, cfg->rx_tbl, cfg->rx_tbl_num);
>>         if (cfg->is_dual_lane_phy)
>> -               qcom_qmp_phy_configure(rx + cfg->rx_b_lane_offset, cfg->regs,
>> +               qcom_qmp_phy_configure(qphy->rx2, cfg->regs,
>>                                        cfg->rx_tbl, cfg->rx_tbl_num);
>>
>>         qcom_qmp_phy_configure(pcs, cfg->regs, cfg->pcs_tbl, cfg->pcs_tbl_num);
>> @@ -1615,8 +1614,9 @@ int qcom_qmp_phy_create(struct device *dev, struct device_node *np, int id)
>>
>>         /*
>>          * Get memory resources for each phy lane:
>> -        * Resources are indexed as: tx -> 0; rx -> 1; pcs -> 2; and
>> -        * pcs_misc (optional) -> 3.
>> +        * Resources are indexed as: tx -> 0; rx -> 1; pcs -> 2.
>> +        * For dual lane PHYs: tx2 -> 3, rx2 -> 4, pcs_misc (optional) -> 5
>> +        * For single lane PHYs: pcs_misc (optional) -> 3.
>>          */
>>         qphy->tx = of_iomap(np, 0);
>>         if (!qphy->tx)
>> @@ -1630,7 +1630,32 @@ int qcom_qmp_phy_create(struct device *dev, struct device_node *np, int id)
>>         if (!qphy->pcs)
>>                 return -ENOMEM;
>>
>> -       qphy->pcs_misc = of_iomap(np, 3);
>> +       /*
>> +        * If this is a dual-lane PHY, then there should be registers for the
>> +        * second lane. Some old device trees did not specify this, so fall
>> +        * back to old legacy behavior of assuming they can be reached at an
>> +        * offset from the first lane.
>> +        */
>> +       if (qmp->cfg->is_dual_lane_phy) {
>> +               qphy->tx2 = of_iomap(np, 3);
>> +               qphy->rx2 = of_iomap(np, 4);
>> +               if (!qphy->tx2 || !qphy->rx2) {
>> +                       dev_warn(dev,
>> +                                "Underspecified device tree, falling back to legacy register regions\n");
>> +
>> +                       /* In the old version, pcs_misc is at index 3. */
>> +                       qphy->pcs_misc = qphy->tx2;
>> +                       qphy->tx2 = qphy->tx + QMP_PHY_LEGACY_LANE_STRIDE;
>> +                       qphy->rx2 = qphy->rx + QMP_PHY_LEGACY_LANE_STRIDE;
>> +
>> +               } else {
>> +                       qphy->pcs_misc = of_iomap(np, 5);
>> +               }
>> +
>> +       } else {
>> +               qphy->pcs_misc = of_iomap(np, 3);
>> +       }
>> +
>>         if (!qphy->pcs_misc)
>>                 dev_vdbg(dev, "PHY pcs_misc-reg not used\n");
>>
>> --
>> 2.18.1
>>
> 
> Tested on db820c [1]. USB, PCIe come up.
> Tested-by: Vivek Gautam <vivek.gautam@codeaurora.org>
> 
> [1] https://github.com/vivekgautam1/linux/tree/origin/v4.20-rc5/db820c

Thank you Vivek.
Evan, can you resend this series after rebasing to phy -next and also your
other series?

Thanks
Kishon
