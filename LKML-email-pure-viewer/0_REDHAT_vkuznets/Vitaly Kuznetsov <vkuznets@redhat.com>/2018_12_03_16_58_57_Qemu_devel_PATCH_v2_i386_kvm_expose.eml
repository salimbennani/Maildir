Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:56:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 065AC580375
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 09:41:12 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 09:41:11 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AbJ8r4h3TCuwzvJOBsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMQKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfWSJCDYyy?=
 =?us-ascii?q?YJYBD/IDMOhaoITxulUDoQegCgm3H+7j1iZIi2Xq0aEmz+gtDQfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34O6gTUeCp1qbIyTXCZO5T1zfg6YnIdA4uoe2XXbJ3b8ra1E4iFx3GjlWN?=
 =?us-ascii?q?qI3lOS2a1vgWs2WA9epvS/+gi249pAFtuDSg2sAsiozQi48T11vK9j15zZ4rKd?=
 =?us-ascii?q?GkS0N3e8OoHIZTui2AKYd7TMMvT3t1tCs40rEKp4K3cSwQxJg6yRPTdeaLf5WL?=
 =?us-ascii?q?7x/tTuqdPzR1iXR4c7ylnRmy61KvyujkW8m0zllKqi1Fn8HItnAMzBzT9tOHRu?=
 =?us-ascii?q?Fy/kenxDaDzQfT6vtLIUwslKrbLYAuwqIom5YNrUjOHTX6lFjrgKKVbEko5Oal?=
 =?us-ascii?q?5uT9brn7pJKQL4p0hRv/MqQqlMy/G+M4Mg0WUmiC5+u80aDj8VTkT7pUkP05jK?=
 =?us-ascii?q?3ZvInBKsQcu665BRNa3Zg46xq4Czem0dcYkmcdIFNKZRKKl4zpO1DIIPDlAvaz?=
 =?us-ascii?q?mVWskDF3x//YOr3tGInCLn/GkLr6e7Z97EhcyAU1zdBC/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3chfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGnh5m3?=
 =?us-ascii?q?5NSzIo0aRXp0t7xVGel69ijK92D9tWss1ITg4+JNb/0v58BszpXRyJKsmKVUSg?=
 =?us-ascii?q?T8m9KSs8QtI435kFZEMrSIbqtQzKwyf/W+xdrLeMHpFht/uEh3U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DcAADGaQVchxHrdtBjHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMIJijHCLLYMJiCOJMIZsFBgUgyyEXSI3Bg0BAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgbDi+CNgUCAxoBBoJfBAIkHwopAwMBAgYCRQMIAwFsBYMcgXUNAQSnDDOFQ?=
 =?us-ascii?q?IRijBwXgUA/gRABAYJcixECiTCBb5UhCZExCxiJW4dLLJhBgVyBd00jFYMnglC?=
 =?us-ascii?q?ODEAxgQcciESBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0DcAADGaQVchxHrdtBjHQEBBQEHBQGBVAUBCwGBMIJijHC?=
 =?us-ascii?q?LLYMJiCOJMIZsFBgUgyyEXSI3Bg0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCA?=
 =?us-ascii?q?xoBBoJfBAIkHwopAwMBAgYCRQMIAwFsBYMcgXUNAQSnDDOFQIRijBwXgUA/gRA?=
 =?us-ascii?q?BAYJcixECiTCBb5UhCZExCxiJW4dLLJhBgVyBd00jFYMnglCODEAxgQcciESBd?=
 =?us-ascii?q?wEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="54313732"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 09:41:10 -0800
Received: from localhost ([::1]:51070 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTsDV-0001Zb-F1
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 12:41:09 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54216)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <vkuznets@redhat.com>) id 1gTrYn-0000f9-Oy
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:59:07 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <vkuznets@redhat.com>) id 1gTrYl-0000JF-3a
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:59:05 -0500
Received: from mx1.redhat.com ([209.132.183.28]:59288)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <vkuznets@redhat.com>) id 1gTrYj-0000EN-5P
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:59:03 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 7EB502D7FB;
	Mon,  3 Dec 2018 16:59:00 +0000 (UTC)
Received: from vitty.brq.redhat.com (unknown [10.43.2.155])
	by smtp.corp.redhat.com (Postfix) with ESMTP id ED0C95C26D;
	Mon,  3 Dec 2018 16:58:58 +0000 (UTC)
From: Vitaly Kuznetsov <vkuznets@redhat.com>
To: qemu-devel@nongnu.org
Date: Mon,  3 Dec 2018 17:58:57 +0100
Message-Id: <20181203165857.9819-1-vkuznets@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Mon, 03 Dec 2018 16:59:00 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v2] i386/kvm: expose
 HV_CPUID_ENLIGHTMENT_INFO.EAX and HV_CPUID_NESTED_FEATURES.EAX as feature
 words
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Paolo Bonzini <pbonzini@redhat.com>, Marcelo Tosatti <mtosatti@redhat.com>,
	Roman Kagan <rkagan@virtuozzo.com>, Eduardo Habkost <ehabkost@redhat.com>,
	Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

It was found that QMP users of QEMU (e.g. libvirt) may need
HV_CPUID_ENLIGHTMENT_INFO.EAX/HV_CPUID_NESTED_FEATURES.EAX information. I=
n
particular, 'hv_tlbflush' and 'hv_evmcs' enlightenments are only exposed =
in
HV_CPUID_ENLIGHTMENT_INFO.EAX.

HV_CPUID_NESTED_FEATURES.EAX is exposed for two reasons: convenience
(we don't need to export it from hyperv_handle_properties() and as
future-proof for Enlightened MSR-Bitmap, PV EPT invalidation and
direct virtual flush features.

While on it, add a comment explaining why .feat_names are currently
commented out for Hyper-V feature words.

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>
---
Changes since v1:
- Add a comment explaining why .feat_names are currently
  commented out for Hyper-V feature words. [Paolo Bonzini]
- Add Roman's R-b tag.
---
 target/i386/cpu.c | 37 +++++++++++++++++++++
 target/i386/cpu.h |  2 ++
 target/i386/kvm.c | 85 +++++++++++++++++++++++++----------------------
 3 files changed, 84 insertions(+), 40 deletions(-)

diff --git a/target/i386/cpu.c b/target/i386/cpu.c
index f81d35e1f9..6685c8e5f6 100644
--- a/target/i386/cpu.c
+++ b/target/i386/cpu.c
@@ -929,6 +929,13 @@ static FeatureWordInfo feature_word_info[FEATURE_WOR=
DS] =3D {
          */
         .no_autoenable_flags =3D ~0U,
     },
+    /*
+     * .feat_names are commented out for Hyper-V enlightenments because =
we
+     * don't want to have two different ways for enabling them on QEMU c=
ommand
+     * line. Some features (e.g. "hyperv_time", "hyperv_vapic", ...) req=
uire
+     * enabling several feature bits simultaneously, exposing these bits
+     * individually may just confuse guests.
+     */
     [FEAT_HYPERV_EAX] =3D {
         .type =3D CPUID_FEATURE_WORD,
         .feat_names =3D {
@@ -980,6 +987,36 @@ static FeatureWordInfo feature_word_info[FEATURE_WOR=
DS] =3D {
         },
         .cpuid =3D { .eax =3D 0x40000003, .reg =3D R_EDX, },
     },
+    [FEAT_HV_RECOMM_EAX] =3D {
+        .type =3D CPUID_FEATURE_WORD,
+        .feat_names =3D {
+            NULL /* hv_recommend_pv_as_switch */,
+            NULL /* hv_recommend_pv_tlbflush_local */,
+            NULL /* hv_recommend_pv_tlbflush_remote */,
+            NULL /* hv_recommend_msr_apic_access */,
+            NULL /* hv_recommend_msr_reset */,
+            NULL /* hv_recommend_relaxed_timing */,
+            NULL /* hv_recommend_dma_remapping */,
+            NULL /* hv_recommend_int_remapping */,
+            NULL /* hv_recommend_x2apic_msrs */,
+            NULL /* hv_recommend_autoeoi_deprecation */,
+            NULL /* hv_recommend_pv_ipi */,
+            NULL /* hv_recommend_ex_hypercalls */,
+            NULL /* hv_hypervisor_is_nested */,
+            NULL /* hv_recommend_int_mbec */,
+            NULL /* hv_recommend_evmcs */,
+            NULL,
+            NULL, NULL, NULL, NULL,
+            NULL, NULL, NULL, NULL,
+            NULL, NULL, NULL, NULL,
+            NULL, NULL, NULL, NULL,
+        },
+        .cpuid =3D { .eax =3D 0x40000004, .reg =3D R_EAX, },
+    },
+    [FEAT_HV_NESTED_EAX] =3D {
+        .type =3D CPUID_FEATURE_WORD,
+        .cpuid =3D { .eax =3D 0x4000000A, .reg =3D R_EAX, },
+    },
     [FEAT_SVM] =3D {
         .type =3D CPUID_FEATURE_WORD,
         .feat_names =3D {
diff --git a/target/i386/cpu.h b/target/i386/cpu.h
index 9c52d0cbeb..dd881510ac 100644
--- a/target/i386/cpu.h
+++ b/target/i386/cpu.h
@@ -497,6 +497,8 @@ typedef enum FeatureWord {
     FEAT_HYPERV_EAX,    /* CPUID[4000_0003].EAX */
     FEAT_HYPERV_EBX,    /* CPUID[4000_0003].EBX */
     FEAT_HYPERV_EDX,    /* CPUID[4000_0003].EDX */
+    FEAT_HV_RECOMM_EAX, /* CPUID[4000_0004].EAX */
+    FEAT_HV_NESTED_EAX, /* CPUID[4000_000A].EAX */
     FEAT_SVM,           /* CPUID[8000_000A].EDX */
     FEAT_XSAVE,         /* CPUID[EAX=3D0xd,ECX=3D1].EAX */
     FEAT_6_EAX,         /* CPUID[6].EAX */
diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index f524e7d929..b4d2b40a40 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -797,6 +797,48 @@ static int hyperv_handle_properties(CPUState *cs)
         }
         env->features[FEAT_HYPERV_EAX] |=3D HV_SYNTIMERS_AVAILABLE;
     }
+    if (cpu->hyperv_relaxed_timing) {
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_RELAXED_TIMING_RECOMME=
NDED;
+    }
+    if (cpu->hyperv_vapic) {
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_APIC_ACCESS_RECOMMENDE=
D;
+    }
+    if (cpu->hyperv_tlbflush) {
+        if (kvm_check_extension(cs->kvm_state,
+                                KVM_CAP_HYPERV_TLBFLUSH) <=3D 0) {
+            fprintf(stderr, "Hyper-V TLB flush support "
+                    "(requested by 'hv-tlbflush' cpu flag) "
+                    " is not supported by kernel\n");
+            return -ENOSYS;
+        }
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_REMOTE_TLB_FLUSH_RECOM=
MENDED;
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_EX_PROCESSOR_MASKS_REC=
OMMENDED;
+    }
+    if (cpu->hyperv_ipi) {
+        if (kvm_check_extension(cs->kvm_state,
+                                KVM_CAP_HYPERV_SEND_IPI) <=3D 0) {
+            fprintf(stderr, "Hyper-V IPI send support "
+                    "(requested by 'hv-ipi' cpu flag) "
+                    " is not supported by kernel\n");
+            return -ENOSYS;
+        }
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_CLUSTER_IPI_RECOMMENDE=
D;
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_EX_PROCESSOR_MASKS_REC=
OMMENDED;
+    }
+    if (cpu->hyperv_evmcs) {
+        uint16_t evmcs_version;
+
+        if (kvm_vcpu_enable_cap(cs, KVM_CAP_HYPERV_ENLIGHTENED_VMCS, 0,
+                                (uintptr_t)&evmcs_version)) {
+            fprintf(stderr, "Hyper-V Enlightened VMCS "
+                    "(requested by 'hv-evmcs' cpu flag) "
+                    "is not supported by kernel\n");
+            return -ENOSYS;
+        }
+        env->features[FEAT_HV_RECOMM_EAX] |=3D HV_ENLIGHTENED_VMCS_RECOM=
MENDED;
+        env->features[FEAT_HV_NESTED_EAX] =3D evmcs_version;
+    }
+
     return 0;
 }
=20
@@ -869,7 +911,6 @@ int kvm_arch_init_vcpu(CPUState *cs)
     uint32_t unused;
     struct kvm_cpuid_entry2 *c;
     uint32_t signature[3];
-    uint16_t evmcs_version;
     int kvm_base =3D KVM_CPUID_SIGNATURE;
     int r;
     Error *local_err =3D NULL;
@@ -944,44 +985,8 @@ int kvm_arch_init_vcpu(CPUState *cs)
=20
         c =3D &cpuid_data.entries[cpuid_i++];
         c->function =3D HV_CPUID_ENLIGHTMENT_INFO;
-        if (cpu->hyperv_relaxed_timing) {
-            c->eax |=3D HV_RELAXED_TIMING_RECOMMENDED;
-        }
-        if (cpu->hyperv_vapic) {
-            c->eax |=3D HV_APIC_ACCESS_RECOMMENDED;
-        }
-        if (cpu->hyperv_tlbflush) {
-            if (kvm_check_extension(cs->kvm_state,
-                                    KVM_CAP_HYPERV_TLBFLUSH) <=3D 0) {
-                fprintf(stderr, "Hyper-V TLB flush support "
-                        "(requested by 'hv-tlbflush' cpu flag) "
-                        " is not supported by kernel\n");
-                return -ENOSYS;
-            }
-            c->eax |=3D HV_REMOTE_TLB_FLUSH_RECOMMENDED;
-            c->eax |=3D HV_EX_PROCESSOR_MASKS_RECOMMENDED;
-        }
-        if (cpu->hyperv_ipi) {
-            if (kvm_check_extension(cs->kvm_state,
-                                    KVM_CAP_HYPERV_SEND_IPI) <=3D 0) {
-                fprintf(stderr, "Hyper-V IPI send support "
-                        "(requested by 'hv-ipi' cpu flag) "
-                        " is not supported by kernel\n");
-                return -ENOSYS;
-            }
-            c->eax |=3D HV_CLUSTER_IPI_RECOMMENDED;
-            c->eax |=3D HV_EX_PROCESSOR_MASKS_RECOMMENDED;
-        }
-        if (cpu->hyperv_evmcs) {
-            if (kvm_vcpu_enable_cap(cs, KVM_CAP_HYPERV_ENLIGHTENED_VMCS,=
 0,
-                                    (uintptr_t)&evmcs_version)) {
-                fprintf(stderr, "Hyper-V Enlightened VMCS "
-                        "(requested by 'hv-evmcs' cpu flag) "
-                        "is not supported by kernel\n");
-                return -ENOSYS;
-            }
-            c->eax |=3D HV_ENLIGHTENED_VMCS_RECOMMENDED;
-        }
+
+        c->eax =3D env->features[FEAT_HV_RECOMM_EAX];
         c->ebx =3D cpu->hyperv_spinlock_attempts;
=20
         c =3D &cpuid_data.entries[cpuid_i++];
@@ -1005,7 +1010,7 @@ int kvm_arch_init_vcpu(CPUState *cs)
=20
             c =3D &cpuid_data.entries[cpuid_i++];
             c->function =3D HV_CPUID_NESTED_FEATURES;
-            c->eax =3D evmcs_version;
+            c->eax =3D env->features[FEAT_HV_NESTED_EAX];
         }
     }
=20
--=20
2.19.2


