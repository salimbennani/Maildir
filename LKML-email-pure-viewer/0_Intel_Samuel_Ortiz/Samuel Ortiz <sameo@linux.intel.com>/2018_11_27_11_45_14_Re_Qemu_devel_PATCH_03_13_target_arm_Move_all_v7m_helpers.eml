Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 20:27:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6603858041B
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 03:46:15 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 03:46:15 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AS97YIRZvNi6w2g05IIdodsz/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy4Zx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMAeoOMvpXoJTyqVQMoxSwGBGsCeHtxDJHm3P707E23Po6EQzdwAwtHMgDvG?=
 =?us-ascii?q?jIoNjvKasfV/2+wqnSzTXEavNbwSrz55LNchA8v/6MWa97f9PLyUkzFgPEj0ib?=
 =?us-ascii?q?pIv+PzyP0+QCrW+b4vFkVeKujW4ntg5wriKuxscqlonGmIYVxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N1b96jFZtfrSCaN41uT8MtQmFopCY6yqAdtpKhYCcKz5EnyhjCYPKEa4iF?=
 =?us-ascii?q?+gzvWPqSLDtimX5pZbGyiwys/UWuyuDwTNS43VRSoiZYnNTBuWoB2wHd58WIUP?=
 =?us-ascii?q?dx40ms1DeV2w3S6uxJJ10/m7DBJJ472LEwk4IesUTdES/yn0X7lKuWdkQ/+ui0?=
 =?us-ascii?q?8OTreLrmppmBN4NujQH+KKsultS+AeQ+LAcOQ3CW9fqg2LDg50H1XahGg/4snq?=
 =?us-ascii?q?XHvp3XJd4XqrO7DgNN14Ys8Re/DzOo0NQCmnkHKUpIeAuZgIjsJlHCOe33Aumh?=
 =?us-ascii?q?g1uylDdn3uvJPrr8ApXLMnfMjqzhcbF5605dywo808pT5p1JCrwZJPLzW0nxtM?=
 =?us-ascii?q?HXDxMjMgy0xfrnB8t51o8ERW2PBaqZPbjUsV+P4OIvLO+MZJIPtDb6Mfgl6Obi?=
 =?us-ascii?q?jWUlll8FYampwZwXZWi8HvRnIEWWf2Dgg9gcEWoRugo+TerqiECNUDJJZnayWb?=
 =?us-ascii?q?486S8/CI68EYjDQYWt0/S82jymFMhWenxeEQLLVnPpbJmfHfELbi2UP4lmiDND?=
 =?us-ascii?q?ULGgT4oo01aprBP7zLx8afPZ/zBduZ/92dwm2uvIiBtn8DV1C9iagXiASnwxkm?=
 =?us-ascii?q?4WSjtzxq1mvEFm1n+F1q53heEeEsZcsOhUWAU3PoKJ0uphFtrpURjAdNradFHz?=
 =?us-ascii?q?eti6DCt5a9sgz9IKZw4pA9i+gwqF2iO7D7IRk5SPBZo96KWa2GL+cZVT0XHDgZ?=
 =?us-ascii?q?IoikQrRoNoL3GnlOYr7AHWConhl0SfirbsdKIA0SqL/2CGmznd9HpEWRJ9BP2W?=
 =?us-ascii?q?FUsUYVHb+JGgvhvP?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACHLf1bhxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwEBgS+BOXA5jBFfi3cBAQaBNXyIIYRqiTmBcxQYDQe?=
 =?us-ascii?q?IciI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMQgEOAYFkBQIDGgEGglsBAQEBA?=
 =?us-ascii?q?gEBAiQLARMKKQMCAQECBgEBChgJHQgDAQsFSRMFgxwBgXQFCAEECqYkM4QtAYV?=
 =?us-ascii?q?7BYwNF3iBB4ERgl01gx4ChRaCBCICiSMElmUJhnyKKSMKAoFNiC+HA41GinGBR?=
 =?us-ascii?q?oINMxoIGxWDJ4InFxKDOIpUQDEKfYFgihOBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ADAACHLf1bhxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwEBgS+BOXA5jBFfi3cBAQaBNXyIIYRqiTmBcxQYDQeIciI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQoLCQgbDiMMQgEOAYFkBQIDGgEGglsBAQEBAgEBAiQLARMKKQM?=
 =?us-ascii?q?CAQECBgEBChgJHQgDAQsFSRMFgxwBgXQFCAEECqYkM4QtAYV7BYwNF3iBB4ERg?=
 =?us-ascii?q?l01gx4ChRaCBCICiSMElmUJhnyKKSMKAoFNiC+HA41GinGBRoINMxoIGxWDJ4I?=
 =?us-ascii?q?nFxKDOIpUQDEKfYFgihOBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="52797423"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 03:46:14 -0800
Received: from localhost ([::1]:41627 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRboj-0001ZP-Rq
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 06:46:13 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34769)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <sameo@linux.intel.com>) id 1gRboR-0001W3-VR
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 06:45:57 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <sameo@linux.intel.com>) id 1gRboN-0002Sf-WC
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 06:45:55 -0500
Received: from mga03.intel.com ([134.134.136.65]:53006)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <sameo@linux.intel.com>)
	id 1gRboM-0002Q6-NR; Tue, 27 Nov 2018 06:45:51 -0500
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
	by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	27 Nov 2018 03:45:46 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; d="scan'208";a="95610094"
Received: from sdommett-mobl2.ger.corp.intel.com (HELO caravaggio)
	([10.252.8.174])
	by orsmga008.jf.intel.com with ESMTP; 27 Nov 2018 03:45:44 -0800
Date: Tue, 27 Nov 2018 12:45:14 +0100
From: Samuel Ortiz <sameo@linux.intel.com>
To: Peter Maydell <peter.maydell@linaro.org>
Message-ID: <20181127114514.GB4393@caravaggio>
References: <20181113165247.4806-1-sameo@linux.intel.com>
	<20181113165247.4806-4-sameo@linux.intel.com>
	<CAFEAcA98so9yyJN=qAhD=Kr6pi1xxfrxt28atqZ8ATVJYXTaMg@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <CAFEAcA98so9yyJN=qAhD=Kr6pi1xxfrxt28atqZ8ATVJYXTaMg@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 134.134.136.65
Subject: Re: [Qemu-devel] [PATCH 03/13] target: arm: Move all v7m helpers
 into their own file
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Richard Henderson <richard.henderson@linaro.org>,
	qemu-arm <qemu-arm@nongnu.org>,
	Philippe =?iso-8859-1?Q?Mathieu-Daud=E9?= <philmd@redhat.com>,
	QEMU Developers <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi Peter,

On Tue, Nov 20, 2018 at 01:54:08PM +0000, Peter Maydell wrote:
> On 13 November 2018 at 16:52, Samuel Ortiz <sameo@linux.intel.com> wrote:
> > In preparation for supporting TCG disablement on ARM, we move all TCG
> > related v7m helpers and APIs into their own file (m_helper.c for all
> > v*-m helpers).
> > arm_v7m_cpu_do_interrupt pulls a large number of static functions
> > out of helper.c into m_helper.c because it is TCG dependent.
> >
> > Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
> > Signed-off-by: Philippe Mathieu-Daudé <philmd@redhat.com>
> > Tested-by: Philippe Mathieu-Daudé <philmd@redhat.com>
> > Reviewed-by: Robert Bradford <robert.bradford@intel.com>
> > ---
> >  target/arm/internals.h   |   37 +
> >  target/arm/helper.c      | 2209 +++-----------------------------------
> >  target/arm/m_helper.c    | 1892 ++++++++++++++++++++++++++++++++
> >  target/arm/Makefile.objs |    2 +-
> >  4 files changed, 2086 insertions(+), 2054 deletions(-)
> >  create mode 100644 target/arm/m_helper.c
> 
> > +/* Function used to synchronize QEMU's AArch64 register set with AArch32
> > + * register set.  This is necessary when switching between AArch32 and AArch64
> > + * execution state.
> > + */
> > +void aarch64_sync_32_to_64(CPUARMState *env)
> >  {
> > -    uint32_t new_ss_msp, new_ss_psp;
> > +    int i;
> > +    uint32_t mode = env->uncached_cpsr & CPSR_M;
> >
> > -    if (env->v7m.secure == new_secstate) {
> > -        return;
> > +    /* We can blanket copy R[0:7] to X[0:7] */
> > +    for (i = 0; i < 8; i++) {
> > +        env->xregs[i] = env->regs[i];
> >      }
> >
> > -    /* All the banked state is accessed by looking at env->v7m.secure
> > -     * except for the stack pointer; rearrange the SP appropriately.
> > +    /* Unless we are in FIQ mode, x8-x12 come from the user registers r8-r12.
> > +     * Otherwise, they come from the banked user regs.
> >       */
> > -    new_ss_msp = env->v7m.other_ss_msp;
> > -    new_ss_psp = env->v7m.other_ss_psp;
> > -
> > -    if (v7m_using_psp(env)) {
> > -        env->v7m.other_ss_psp = env->regs[13];
> > -        env->v7m.other_ss_msp = env->v7m.other_sp;
> > -    } else {
> > -        env->v7m.other_ss_msp = env->regs[13];
> > -        env->v7m.other_ss_psp = env->v7m.other_sp;
> > -    }
> > -
> > -    env->v7m.secure = new_secstate;
> > -
> > -    if (v7m_using_psp(env)) {
> > -        env->regs[13] = new_ss_psp;
> > -        env->v7m.other_sp = new_ss_msp;
> > +    if (mode == ARM_CPU_MODE_FIQ) {
> > +        for (i = 8; i < 13; i++) {
> > +            env->xregs[i] = env->usr_regs[i - 8];
> > +        }
> >      } else {
> > -        env->regs[13] = new_ss_msp;
> > -        env->v7m.other_sp = new_ss_psp;
> > +        for (i = 8; i < 13; i++) {
> > +            env->xregs[i] = env->regs[i];
> > +        }
> >      }
> > -}
> >
> > -void HELPER(v7m_bxns)(CPUARMState *env, uint32_t dest)
> > -{
> > -    /* Handle v7M BXNS:
> > -     *  - if the return value is a magic value, do exception return (like BX)
> > -     *  - otherwise bit 0 of the return value is the target security state
> > +    /* Registers x13-x23 are the various mode SP and FP registers. Registers
> > +     * r13 and r14 are only copied if we are in that mode, otherwise we copy
> > +     * from the mode banked register.
> >       */
> > -    uint32_t min_magic;
> > -
> > -    if (arm_feature(env, ARM_FEATURE_M_SECURITY)) {
> > -        /* Covers FNC_RETURN and EXC_RETURN magic */
> > -        min_magic = FNC_RETURN_MIN_MAGIC;
> > +    if (mode == ARM_CPU_MODE_USR || mode == ARM_CPU_MODE_SYS) {
> > +        env->xregs[13] = env->regs[13];
> > +        env->xregs[14] = env->regs[14];
> >      } else {
> > -        /* EXC_RETURN magic only */
> > -        min_magic = EXC_RETURN_MIN_MAGIC;
> > +        env->xregs[13] = env->banked_r13[bank_number(ARM_CPU_MODE_USR)];
> > +        /* HYP is an exception in that it is copied from r14 */
> > +        if (mode == ARM_CPU_MODE_HYP) {
> > +            env->xregs[14] = env->regs[14];
> > +        } else {
> > +            env->xregs[14] = env->banked_r14[bank_number(ARM_CPU_MODE_USR)];
> > +        }
> >      }
> 
> This part of the patch is a mess to read. I suspect this is a
> combination of (a) your git not being configured to use a better
> diff algorithm than the default (try "algorithm = histogram"
> in the [diff] section of your .gitconfig), and it doing an effective
> revert of 593cfa2b637b92d37 by accident.
Yes, the unintentional and partial revert made the patch messy.
I fixed that.


> It's also an absolutely enormous patch, even for a "just
> moving code" patch, which makes it hard to review even
> with diff --color-moved. Maybe it would be better in two
> pieces ("helper routines for various insns" and "exception
> handling functions" seems like a workable split).
Splitting and fixing the original patch made things much easier to read,
thanks for the suggestion. See:
https://github.com/intel/nemu/pull/167/commits/5da42ba691bc05f3311332cfb3fe6db33b456904
https://github.com/intel/nemu/pull/167/commits/43cf20ed61e8c1f77d4706e29ba54df620a5091e

Cheers,
Samuel.

