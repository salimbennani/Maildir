Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:35:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C55AE58037D;
	Fri, 23 Nov 2018 04:55:26 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 04:55:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AT+gUShZxe0XyeVi0z9RH0hX/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm6ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFUBrxSxCxKsBPvtxzJTmn/437c33/g9HQzcwgAtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSfq7w7fUzTXZcvhY3jP955LVfR8/ovGHQLV9cdLUyUkrDQzKk0uf?=
 =?us-ascii?q?qY/+MjOOy+QNqHaU4/B8WuKojm4qsgd8qSWhyMcrj4nGnIMVylbc+CV63ok1P9?=
 =?us-ascii?q?u4R1B/YdK+F5tQrS6aOo1rSc0hW2FloDg2xqECtJKhYSQHxoorywTCZ/GEb4SE?=
 =?us-ascii?q?+BPuWeSJLTtlgH9oeKiziwu8/EWg0OHwSNe43EpQoiZbktTBuXYA3AHJ5MedUP?=
 =?us-ascii?q?ty5EKh1C6P1w/N7uFEJlg5lbTUK5E/2L48jJkTvlrZHi/whkr2iLWadkI++uin?=
 =?us-ascii?q?8+jnY7PmqYGAN4JslA3yLqAjltaiDek2LAQCRXWX9Oeg2LH5/ED0Qq1Gjvgsna?=
 =?us-ascii?q?nYtJDaK94bpqm8AwJN1oYj6hC/Dyqp0dgBnnkIMkhFeBSZgIjtIl3OJ/75DfGh?=
 =?us-ascii?q?jFS2izpr2f/GMaP7ApnXLXjMjq3hfbBj5E5Y0gYzyspf551MBrEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhNwy0wuXnB8tn2oIRRGKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mVUFZ6mmwYMXaGykHvRhO0iZYWDjgtYdEWgQuQoyVuzqiECYXj5VaHa/RK?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEX3wbYWLR+8MaD6OIs9mijEE?=
 =?us-ascii?q?V7+hRJE72RGtsw/6zbxnLu3P9y0ctJLj0sV15uLJmREz8zx0E9qS02WXQ25omW?=
 =?us-ascii?q?MIQic83Lpjrkxl1leDza94juRCGtxI5/NJVQQ6OYTGz+NgCdD/QQbBftaPSFa7?=
 =?us-ascii?q?TdSqGzAxTtQtw9AQZ0ZxAcmtjhfG3yCyGb8ai6SLBIAo8qLbx3XxJNxyy3Dc2K?=
 =?us-ascii?q?kljlkpWM1PNWK9i6579gjTAZPJkkqDm6arc6QcwDDC9GOZwWWSu0FYVRZ6Ub/Z?=
 =?us-ascii?q?UnAHekvWsdP561vfQLC0F7QoLBFNyc6YJatMcd3mk1NGSPDnONTdZmKxn3y9BR?=
 =?us-ascii?q?KJxrOKcYrrdH8R3CTbCEgYjQ8T+WyKOhQ5Bieku2jeFiBhFUrzY0Pw9ulzsG60?=
 =?us-ascii?q?QVUqzw6UdUFh16C6+hgOhfOCTfMexbYEuCYnqzVpE1exxdPWC9ycpwV/eKVQe8?=
 =?us-ascii?q?8y4FBC1WjBrQxyIoSgL7x+hl4Zawl3o0Lu1xBwCoVckcgrrGkmzBZoJaKfylNB?=
 =?us-ascii?q?czKY3Zb/OrDMLmny/Rava7PZ213E0daW/LsP5+o8q1n5oA6pEU8i+W1909ZJy3?=
 =?us-ascii?q?uc+onKDA0KXJ3rVkY46Rd7qK/aYyUn/IzUyGBjPrOysj/B3NIpGvAoyhKhf9dZ?=
 =?us-ascii?q?LaOFGxX+E8wcB8iyNuMqn0KlYQ4DPOBX7KQ0Jd+pd+Oa2K63O+ZthDKnjXld7I?=
 =?us-ascii?q?9hyE6N9ip8RfTO35YK2PyY2gqHVzHhjFauqMz3mIZEZS0MEWq70yTrGIlRZqhq?=
 =?us-ascii?q?d4YRFWiuO9G3xsl5h5P1QX5Y9UKsCEkc2MC0fhqedVr90hNK1UQWuHCohTG3zz?=
 =?us-ascii?q?hpnD43tKqf2yrOzv/mdBoGPG5LWWZjgU3tIYiyk9AVQkyoYxI1mxui4Ebw37Jb?=
 =?us-ascii?q?q7hnL2nPXUdIeDD7LmFjUqeqtruOedVP6I4usShMVOS8YFaaSqPyohcA0iPjGX?=
 =?us-ascii?q?deyy4/dz2wppr5mBl6gnqHLHlvtHrZZd1wxRDH6dzeX/FRxDkGRCp/iTXNHViz?=
 =?us-ascii?q?Jdqp/daVl5fFrO++UXmsVplScSnt0IOBuzG35WxsAR2jgf+znsfrHhQ90S/+z9?=
 =?us-ascii?q?NqTznHrA7gYon30KS3KeJmcVNvBFPm6cp6G4d+n5A0hJER33gam5qU8WAGkWf1?=
 =?us-ascii?q?LdVUx6b+YGARSj4Mxt7f+BLl11F7LnKV24L5UW2Qwsh7aNm7eG8W2j894NpMCK?=
 =?us-ascii?q?eb97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792mqaVXZWWvfqKq2Etwg9+hF62CrR9GWHniZJgiByBw4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj3Y29vIiCMWls/bi2?=
 =?us-ascii?q?AhhFNj3ufMMT+yrgjaJfnsaQwoCuEY9tGjQNXJv0U/2oFCgeuujgNwaLCDc8sG?=
 =?us-ascii?q?uUGaLDHQ+D70drt2nAHIqsN3GTOXkV19FiRASGKUxbgQAUWig6n5EjGgCrwszh?=
 =?us-ascii?q?bFl25jQL6lHkrRtMz/piNwPjXWfHuAeodjA0RYCdLBVM6wFN+VzVPdaC7u5pHC?=
 =?us-ascii?q?FY456hrBGLKmOBfARFFmUJWk2CB1D+Mbii/9jA8+6EBuWgK/vCe6mBqetbV/2Q?=
 =?us-ascii?q?35KgzpNm/yqQNsWIJnRjD/o72ldaXXBkAcvZnS8DSzcQlyLLYM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUf3EAdiyBt?=
 =?us-ascii?q?dzmuELQMry3NTLjXmq9YEREbcT5zNNBT4qI43wlNP9Pbi9zv2r55iP41F0lKVV?=
 =?us-ascii?q?j7ls61YswKJnm3NEnbC0aTKLSGOTrLztntbqOhUrJQlvtbth2qtTafEk/uJTCD?=
 =?us-ascii?q?lzjvVxCyPuBAliCbPBpCuI6jdhZhE3TsTNXjahejKt94kSU2waEohnPNLWMcLT?=
 =?us-ascii?q?l8c0ZXorKM9y9XnvV/FHJH7nd+KemEmiCZ7/TXK5oMsPtrBDh0mPxe4Hgg17RV?=
 =?us-ascii?q?6yRETuRvmCTOtt5uv02mku6XxztnShVOrDNLhIONvUp6OKTZ9oNPWXDL/B8W6W?=
 =?us-ascii?q?WQChIKp8ZqC9H1uqBQzMTPm7z3KDtY793U+s4cVIDoL5e7PWY6LB2hODfSAAJN?=
 =?us-ascii?q?GSamM27ChkoYk/yI8HCRhpl/rp/yldwVQ7xGTlVzEP5cCFwzT/IYJ5IiZj44i/?=
 =?us-ascii?q?a+iMcE6Hn2+AHUQMxWs5PvTe+JDLPkLzPP3uoMXAcB3b6tdddbDYb8wUE3LwAi?=
 =?us-ascii?q?xIk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAADh9/dbh0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECJ4wRi3+CDRSXJ4FzLA0GAYRAhBciNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJiAQIDAQIwBz8GCQEBCg4KCRMSAwxIBhMFgxwBggEEAQqoI?=
 =?us-ascii?q?YoUBYwJF4FAP4QjgwIZBIE/AQEehVsCiRmBeIVNjyQJhnyKKCOJXIcsjUOMM4I?=
 =?us-ascii?q?NMxoIGxWDKBGLCoU/PzMBgQMBAYljgj4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ATAADh9/dbh0O0hNFjHQEBBQEHBQGBUQgBCwGCaYECJ4w?=
 =?us-ascii?q?Ri3+CDRSXJ4FzLA0GAYRAhBciNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJiAQIDAQIwBz8GCQEBCg4KCRMSAwxIBhMFgxwBggEEAQqoIYoUBYwJF4FAP4Q?=
 =?us-ascii?q?jgwIZBIE/AQEehVsCiRmBeIVNjyQJhnyKKCOJXIcsjUOMM4INMxoIGxWDKBGLC?=
 =?us-ascii?q?oU/PzMBgQMBAYljgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="52381470"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 04:55:25 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2504445AbeKWXg0 convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Fri, 23 Nov 2018 18:36:26 -0500
Received: from mx2.suse.de ([195.135.220.15]:39124 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2403778AbeKWXg0 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 18:36:26 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 19CFAAEC0;
        Fri, 23 Nov 2018 12:52:20 +0000 (UTC)
Date: Fri, 23 Nov 2018 13:52:19 +0100
From: Petr Mladek <pmladek@suse.com>
To: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Dmitriy Vyukov <dvyukov@google.com>,
        Steven Rostedt <rostedt@goodmis.org>,
        Alexander Potapenko <glider@google.com>,
        Fengguang Wu <fengguang.wu@intel.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        Ingo Molnar <mingo@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Will Deacon <will.deacon@arm.com>
Subject: Re: [PATCH 3/3] lockdep: Use line-buffered printk() for lockdep
 messages.
Message-ID: <20181123125219.k5flkypofll7jwtr@pathway.suse.cz>
References: <1541165517-3557-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp>
 <1541165517-3557-3-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp>
 <20181107151900.gxmdvx42qeanpoah@pathway.suse.cz>
 <20181108044510.GC2343@jagdpanzerIV>
 <9648a384-853c-942e-6a8d-80432d943aae@i-love.sakura.ne.jp>
 <20181109061204.GC599@jagdpanzerIV>
 <07dcbcb8-c5a7-8188-b641-c110ade1c5da@i-love.sakura.ne.jp>
 <20181109154326.apqkbsojmbg26o3b@pathway.suse.cz>
 <2d0d1f60-d8b6-41e0-6845-0eb62f211e40@i-love.sakura.ne.jp>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: 8BIT
In-Reply-To: <2d0d1f60-d8b6-41e0-6845-0eb62f211e40@i-love.sakura.ne.jp>
User-Agent: NeoMutt/20170421 (1.8.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat 2018-11-10 17:52:17, Tetsuo Handa wrote:
> On 2018/11/10 0:43, Petr Mladek wrote:
> > On Fri 2018-11-09 18:55:26, Tetsuo Handa wrote:
> >> How early_printk requirement affects line buffered printk() API?
> >>
> >> I don't think it is impossible to convert from
> >>
> >>      printk("Testing feature XYZ..");
> >>      this_may_blow_up_because_of_hw_bugs();
> >>      printk(KERN_CONT " ... ok\n");
> >>
> >> to
> >>
> >>      printk("Testing feature XYZ:\n");
> >>      this_may_blow_up_because_of_hw_bugs();
> >>      printk("Testing feature XYZ.. ... ok\n");
> >>
> >> in https://lore.kernel.org/lkml/CA+55aFwmwdY_mMqdEyFPpRhCKRyeqj=+aCqe5nN108v8ELFvPw@mail.gmail.com/ .
> > 
> > I just wonder how this pattern is common. I have tried but I failed
> > to find any instance.
> > 
> > This problem looks like a big argument against explicit buffers.
> > But I wonder if it is real.
> 
> An example of boot up messages where buffering makes difference.
> 
> Vanilla:
> 
> [    0.260459] smp: Bringing up secondary CPUs ...
> [    0.269595] x86: Booting SMP configuration:
> [    0.270461] .... node  #0, CPUs:      #1
> [    0.066578] Disabled fast string operations
> [    0.066578] mce: CPU supports 0 MCE banks
> [    0.066578] smpboot: CPU 1 Converting physical 2 to logical package 1
> [    0.342569]  #2
> [    0.066578] Disabled fast string operations
> [    0.066578] mce: CPU supports 0 MCE banks
> [    0.066578] smpboot: CPU 2 Converting physical 4 to logical package 2
> [    0.413442]  #3
> [    0.066578] Disabled fast string operations
> [    0.066578] mce: CPU supports 0 MCE banks
> [    0.066578] smpboot: CPU 3 Converting physical 6 to logical package 3
> [    0.476562] smp: Brought up 1 node, 4 CPUs
> [    0.477477] smpboot: Max logical packages: 8
> [    0.477514] smpboot: Total of 4 processors activated (22691.70 BogoMIPS)
> 
> With try_buffered_printk() patch:
> 
> [    0.279768] smp: Bringing up secondary CPUs ...
> [    0.288825] x86: Booting SMP configuration:
> [    0.066748] Disabled fast string operations
> [    0.066748] mce: CPU supports 0 MCE banks
> [    0.066748] smpboot: CPU 1 Converting physical 2 to logical package 1
> [    0.066748] Disabled fast string operations
> [    0.066748] mce: CPU supports 0 MCE banks
> [    0.066748] smpboot: CPU 2 Converting physical 4 to logical package 2
> [    0.066748] Disabled fast string operations
> [    0.066748] mce: CPU supports 0 MCE banks
> [    0.066748] smpboot: CPU 3 Converting physical 6 to logical package 3
> [    0.495862] .... node  #0, CPUs:      #1 #2 #36smp: Brought up 1 node, 4 CPUs
> [    0.496833] smpboot: Max logical packages: 8
> [    0.497609] smpboot: Total of 4 processors activated (22665.22 BogoMIPS)
> 
> 
> 
> Hmm, arch/x86/kernel/smpboot.c is not emitting '\n' after #num
> 
>         if (system_state < SYSTEM_RUNNING) {
>                 if (node != current_node) {
>                         if (current_node > (-1))
>                                 pr_cont("\n");
>                         current_node = node;
> 
>                         printk(KERN_INFO ".... node %*s#%d, CPUs:  ",
>                                node_width - num_digits(node), " ", node);
>                 }
> 
>                 /* Add padding for the BSP */
>                 if (cpu == 1)
>                         pr_cont("%*s", width + 1, " ");
> 
>                 pr_cont("%*s#%d", width - num_digits(cpu), " ", cpu);
> 
>         } else
>                 pr_info("Booting Node %d Processor %d APIC 0x%x\n",
>                         node, cpu, apicid);
> 
> and causing
> 
>         pr_info("Brought up %d node%s, %d CPU%s\n",
>                 num_nodes, (num_nodes > 1 ? "s" : ""),
>                 num_cpus,  (num_cpus  > 1 ? "s" : ""));
> 
> line to be concatenated to previous line.
> Maybe disable try_buffered_printk() if system_state !=
> SYSTEM_RUNNING ?

We need to solve continuous lines also during boot. Also similar
problems might be in the code that is called in SYSTEM_RUNNING state.

This is yet another clue that try_buffered_printk() approach is not
that good idea.

Best Regards,
Petr
