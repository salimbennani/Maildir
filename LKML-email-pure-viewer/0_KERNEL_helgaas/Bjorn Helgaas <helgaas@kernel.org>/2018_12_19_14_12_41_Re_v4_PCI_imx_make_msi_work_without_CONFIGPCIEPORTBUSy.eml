Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 22:53:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 31EE3580261;
	Wed, 19 Dec 2018 06:12:51 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 06:12:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Av/B4tRERtZjAhGLFpjR9v51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os64bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YZYMAeoPMulXs5TyqFkAohulHQmhBvjiyiNUinLswaE2z/4sHR/A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOaoPU+C1y7PIzTPeZP1Uxzj97IfIfQo7rvGXQLl9dsrRxlcrFwPKlFqf?=
 =?us-ascii?q?s5flMiiW1usTqWib6fRvVea1h24gsQFxrSGiy8ExgYfHgYIVz0rL9SR/wIstJt?=
 =?us-ascii?q?23VlR7Ydi6H5tUrS2aMJF2Qsw6T2FpviY6xKcGtoSmcycU0pso2gTTa/udc4iH?=
 =?us-ascii?q?5B/oSeWfIS9giX57ZL6ygwy+/VWux+HiTMW4zVVHojZfntTNtH0BzwHf58qJR/?=
 =?us-ascii?q?dn4Eus2SyD2x3R5+1ZO0w4iLfXJp0nz7UtjJQcq17DETXzmEjujK+ZaEEk+u+w?=
 =?us-ascii?q?5uT5bbXpuIWcO5V3ig7gKKQunNKwAeAiPggJRWib9vyw1Lzl/ULnXLVHluM6nr?=
 =?us-ascii?q?XdvZzAOMgWqLC1DxVI3osg9xqzFTar3dYAkXkCNl1FeRaHj4bzO1HJJfD1FfO/?=
 =?us-ascii?q?g1WqkDd2yPHKJ77hDYvXLnjFjrjhea9x60lSyQo1099f/YlZCq8OIP3tQE/9rt?=
 =?us-ascii?q?/YAQEjMwyy3ennDM9x1oQEWWKAGqOZKr/dsUeU5uIzJOmBfIsVuDf+K/c7/fLv?=
 =?us-ascii?q?gmI5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5SezgkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIK8AofCWoCimruB0D27Hp1LfG9GDF+MHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXelRM19TNqFcid0GaNT2dynm?=
 =?us-ascii?q?MPXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+Gz4xVdIxw9gNY0pnAdWtlBLD0jGuA78UkbyLGZM1/rjd33j3O8Zy1XLG2L?=
 =?us-ascii?q?M9gFkhR8tFLXemibJn9wjPG47JlF2Ul6WweqQaxiLN8GaDwnCIvEFXSwNwVaTF?=
 =?us-ascii?q?XXYCZkrZt9j550XCT6OwBrQjKAdO1cmCKq5SYN3zkVpGXOvjOMjZY2+phmi/Hw?=
 =?us-ascii?q?iIya2WYIrqYWod2j7dB1YCkwwU+XaGNg0+BiO6rmLaDTxuE0/vYkz2/el/rnO7?=
 =?us-ascii?q?UlE7zwWQY0J90Lq1/wYfheaARPMLwrIEpCAhpi1pE1mnwdLZFcCMpwp7c6Vaet?=
 =?us-ascii?q?My/lFH2Hndtwx8OJygMq9jikQfcwRxo0PhyRF3Bp9cnsgtqXMg1BByJr6A0FNd?=
 =?us-ascii?q?azOY2oj9OqHWKmn3+xCvd67W21HE3NaK4KsP7+44q1HivAGvGUov6HFn09hT03?=
 =?us-ascii?q?uB6ZTGFgsSUZTtUkkp8xh2va3VYi4454nMz31jLbG0siPe29IuHOYq0BKgcMlQ?=
 =?us-ascii?q?MayaFA7+CdYVB9WzJ+MwnVipbRUEPP5J+a4wPsOmceaG2aGxMOZhmjKmkXpI4I?=
 =?us-ascii?q?Rn3k2Q8Cp8T/bC34wZzPGAwguHSzD8gU+hs8Dqg4xLeSseH2u/ySf+Ao5RabZ/?=
 =?us-ascii?q?fYIKCWeoPs22yc9yh5/rW35E6lGjA0kK19OueRqXd1b9xxFf1VwLoXy7niu11y?=
 =?us-ascii?q?Z0kzA1oaWFxizB3uPieAABOmFVXmlijE7gLpSugNAeQUencRIplByj5Uvhw6hb?=
 =?us-ascii?q?paJ/L3TcQEtSfij2KX1iXbW0traYf8FP75Youz1NUOugeVCaVqL9oxwC3iLjHm?=
 =?us-ascii?q?tS3jA6eyuxupXkmRx3k2adLHd1rHrEdsB83xbf5NrARfFP2joKXjV3iT7SBlKk?=
 =?us-ascii?q?Jdmm4c2Ul4vfsuC5T2+hVIdccTPozYODsyu3/3ZqDge8n/Cwm93nFxY10Sng2t?=
 =?us-ascii?q?luVCXIqgv8Y4bx26S7N+JnYldnBFvm58VmHYF+l5M6hIsM1ngCmpWV4X0HnH/z?=
 =?us-ascii?q?MNpB3qLydngNRT8Nw9PO5Ajl2UtjLm+Gxo7jV3WdxNdhaMe+Ym8Mxi096MVKAr?=
 =?us-ascii?q?+O7LNYhSt1vka4rQXJbPh+hDgdyOEi6H4Hg+4TvgotwT6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999sB/MFPP0HLp8I3lds?=
 =?us-ascii?q?ffbckPthKKiRfPlPZaKIg+lvcRgSpnOGT9vWAqyuIhjBxu2426s5aDK2l34K25?=
 =?us-ascii?q?BRtYPCXvZ8wP4jHtkbpensGO0oCzGZVhHy8HXZryQvKuDTISru/nNweVHT04q3?=
 =?us-ascii?q?ebH6ffHACF5EdnqXLPD46kN3WNKHYFytViQQGXJFZDjwAMQDU6gpk5Gxixy8P7?=
 =?us-ascii?q?d0d54i0R6kT8qhtR0e9oMxj/UmHCpAancDs0SZ6fLAZI4QFG/UvaLcue7udrFS?=
 =?us-ascii?q?FC4pKhtBCNKnCcZwlQD2EGQEmECE74PrW0+dnM6euYBve9L/vTZ7WBs/deWuyM?=
 =?us-ascii?q?xZKu1Itm4jmNOt+OPnlkE/00xE5DUWplFMTenjUFUzYXmD7Vb86HuBe8/TV6r8?=
 =?us-ascii?q?C48PT2QQLv+JGAC71IPdV0/BC2h6iDOvWUhCZ4LzZYy5wNyWXJyLgZwF4dlSVu?=
 =?us-ascii?q?eyOxHrQHsC7HVLjQlbNPDx4HdyNzM9NF76Ii0QlMOs7bidL12qR7jv4vDFdFWk?=
 =?us-ascii?q?Lumtu0ZcwROGy9MFLHBECWNLWJPzHLwsf3Yb+iRr1UlulbqxqwuTODGU/5IjuD?=
 =?us-ascii?q?jyXpVwyoMexUli6bIQdRuJujfRdtE2TjSNPmZwa/MN92iz023LI1imnLNW4aLT?=
 =?us-ascii?q?hzbUdNoqeM4iNfh/V1A3ZB4WZ9LemYhyaZ6PHVKooXsftuGCh7i/hW72g6y7RL?=
 =?us-ascii?q?6iFJX/h1mCrUrt5zrFCqiOiPyjx7UBVQrjZHnp6EvUJnOa/B7JlPRW7E/A4R7W?=
 =?us-ascii?q?WXExkLp8FqCtvqu6BRzNjAjKPyKDdY/NLS8ssRHMzUKMOBMHo8PhvlAj/UDA0Z?=
 =?us-ascii?q?TTG1MWHTnVBSkPaX9i7dkp9vkJnnmJMURvdpVEF9QvMdDEt1HdoNZoV3Qxsiga?=
 =?us-ascii?q?bdh8kNsymQth7UEe9YuYrBHtKfBfrmIS3R2blJYxQByKjQLokJMID/nUt4ZQ8p?=
 =?us-ascii?q?z8zxB0PMUIUV8WVaZQgurRAIqSAmQw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADxUBpch0O0hNFlGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgmmBAieMFl+LHYINFJJMhH2BcxUYDQYBhy0?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQEBJBMGAQEsC?=
 =?us-ascii?q?wEEAQkBAQoOCgklAwwFEwE1EwWDHQGBaQMNCAUKpn+BbDOCdgEBBYEwAYV4CIs?=
 =?us-ascii?q?jgRwXgX+EI4JXRwEEhReCJotBhReQXgmHEIYxhBUMGIFeTYRSiS6BLiyOFYtBg?=
 =?us-ascii?q?UaCDjMaCCgIO4JsCQqCCIkBhV4hMgEBgQADAQEhE40sAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAADxUBpch0O0hNFlGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgmmBAieMFl+LHYINFJJMhH2BcxUYDQYBhy0iNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQEBJBMGAQEsCwEEAQkBAQoOCgk?=
 =?us-ascii?q?lAwwFEwE1EwWDHQGBaQMNCAUKpn+BbDOCdgEBBYEwAYV4CIsjgRwXgX+EI4JXR?=
 =?us-ascii?q?wEEhReCJotBhReQXgmHEIYxhBUMGIFeTYRSiS6BLiyOFYtBgUaCDjMaCCgIO4J?=
 =?us-ascii?q?sCQqCCIkBhV4hMgEBgQADAQEhE40sAQE?=
X-IronPort-AV: E=Sophos;i="5.56,373,1539673200"; 
   d="scan'208";a="45623803"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 06:12:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728401AbeLSOMo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 09:12:44 -0500
Received: from mail.kernel.org ([198.145.29.99]:58850 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727635AbeLSOMo (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 09:12:44 -0500
Received: from localhost (173-25-171-118.client.mchsi.com [173.25.171.118])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 669512084A;
        Wed, 19 Dec 2018 14:12:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545228763;
        bh=mYSv6C/anEPEOntT611vVWNftpPDSMGVwZM4K2vIyl8=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=ByvLzt4YfomMJA54EMmSb1yQTm5xnxXrsuygozJeZ5oY5zmyIugwowSxbSaIjs0k7
         WEWq/5bv8YbYMp8rBhUNcvtBtvW0kRl/4hzorhM+j6FYGYvR25WM0MqOZa6cAwOiuD
         LibnrvKayjkp4raXjyz97OA3rX0H3qoqwfRNMFJo=
Date: Wed, 19 Dec 2018 08:12:41 -0600
From: Bjorn Helgaas <helgaas@kernel.org>
To: Richard Zhu <hongxing.zhu@nxp.com>
Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        Lucas Stach <l.stach@pengutronix.de>,
        Andrew Smirnov <andrew.smirnov@gmail.com>,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org,
        Sven Van Asbroeck <thesven73@gmail.com>,
        Niklas Cassel <niklas.cassel@axis.com>,
        Kishon Vijay Abraham I <kishon@ti.com>,
        Gustavo Pimentel <gustavo.pimentel@synopsys.com>,
        Shawn Lin <shawn.lin@rock-chips.com>,
        Trent Piepho <tpiepho@impinj.com>
Subject: Re: [v4] PCI: imx: make msi work without CONFIG_PCIEPORTBUS=y
Message-ID: <20181219141241.GB12763@google.com>
References: <1544768762-18124-1-git-send-email-hongxing.zhu@nxp.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1544768762-18124-1-git-send-email-hongxing.zhu@nxp.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

[+cc Sven, Trent, et al from related report:
https://lore.kernel.org/linux-pci/20181218210444.5950-1-TheSven73@googlemail.com]

On Fri, Dec 14, 2018 at 06:44:15AM +0000, Richard Zhu wrote:
> Assertion of the MSI Enable bit of RC's MSI CAP is mandatory required to
> trigger MSI on i.MX6 PCIe.
> This bit would be asserted when CONFIG_PCIEPORTBUS=y.
> Thus, the MSI works fine on i.MX6 PCIe before the commit "f3fdfc4".
> 
> Assert it unconditionally when MSI is enabled.
> Otherwise, the MSI wouldn't be triggered although the EP is present and
> the MSIs are assigned.

OK, I think I finally understand most of what's going on.  Please
check the following possible changelog text:

  The MSI Enable bit in the MSI Capability (PCIe r4.0, sec 7.7.1.2)
  controls whether a Function can request service using MSI.

  i.MX6 Root Ports implement the MSI Capability and may use MSI to
  request service for events like PME, hotplug, AER, etc.  In
  addition, on i.MX6, the MSI Enable bit controls delivery of MSI
  interrupts from components below the Root Port.

  Prior to f3fdfc4ac3a2 ("PCI: Remove host driver Kconfig selection of
  CONFIG_PCIEPORTBUS"), enabling CONFIG_PCI_IMX6 automatically also
  enabled CONFIG_PCIEPORTBUS, and when portdrv claimed the Root Ports,
  it set the MSI Enable bit so it could use PME, hotplug, AER, etc.
  As a side effect, that also enabled delivery of MSI interrupts from
  downstream components.

  After f3fdfc4ac3a2, the imx6q-pcie driver can operate without
  portdrv, but that means imx6q-pcie must set the MSI Enable bit
  itself if downstream components use MSI.

  Fixes: f3fdfc4ac3a2 ("PCI: Remove host driver Kconfig selection of CONFIG_PCIEPORTBUS")

I still don't understand exactly *how* MSI Enable affects MSI from
downstream components, since the downstream component just does a DMA
write, and the Root Port can't tell whether the write is to memory or
interrupt controller unless the Root Port knows where the MSI targets
are, e.g., if the interrupt controller is actually part of the RC.

Bjorn

> Signed-off-by: Richard Zhu <hongxing.zhu@nxp.com>
> Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
> ---
> Changes v1 -> v2:
> * Assert the MSI_EN unconditionally when MSI is supported.
> Changes v2 -> v3:
> * Remove the IS_ENABLED(CONFIG_PCI_MSI) since the driver depends on
> PCI_MSI_IRQ_DOMAIN
> * Extended with a check for pci_msi_enabled() to see if the user
> explicitly want legacy IRQs
> Changes v3 -> v4:
> * Refer to Bjorn's comments, refine the subject and commit log and change
> the PCI_MSI_CAP to PCIE_RC_IMX6_MSI_CAP.
> ---
>  drivers/pci/controller/dwc/pci-imx6.c | 10 ++++++++++
>  1 file changed, 10 insertions(+)
> 
> diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
> index 26087b3..639bb27 100644
> --- a/drivers/pci/controller/dwc/pci-imx6.c
> +++ b/drivers/pci/controller/dwc/pci-imx6.c
> @@ -74,6 +74,7 @@ struct imx6_pcie {
>  #define PHY_PLL_LOCK_WAIT_USLEEP_MAX	200
>  
>  /* PCIe Root Complex registers (memory-mapped) */
> +#define PCIE_RC_IMX6_MSI_CAP			0x50
>  #define PCIE_RC_LCR				0x7c
>  #define PCIE_RC_LCR_MAX_LINK_SPEEDS_GEN1	0x1
>  #define PCIE_RC_LCR_MAX_LINK_SPEEDS_GEN2	0x2
> @@ -926,6 +927,7 @@ static int imx6_pcie_probe(struct platform_device *pdev)
>  	struct resource *dbi_base;
>  	struct device_node *node = dev->of_node;
>  	int ret;
> +	u16 val;
>  
>  	imx6_pcie = devm_kzalloc(dev, sizeof(*imx6_pcie), GFP_KERNEL);
>  	if (!imx6_pcie)
> @@ -1071,6 +1073,14 @@ static int imx6_pcie_probe(struct platform_device *pdev)
>  	if (ret < 0)
>  		return ret;
>  
> +	if (pci_msi_enabled()) {
> +		val = dw_pcie_readw_dbi(pci, PCIE_RC_IMX6_MSI_CAP +
> +				PCI_MSI_FLAGS);
> +		val |= PCI_MSI_FLAGS_ENABLE;
> +		dw_pcie_writew_dbi(pci, PCIE_RC_MSI_IMX6_CAP +
> +				PCI_MSI_FLAGS, val);
> +	}
> +
>  	return 0;
>  }
>  
> -- 
> 2.7.4
> 
> 
> _______________________________________________
> linux-arm-kernel mailing list
> linux-arm-kernel@lists.infradead.org
> http://lists.infradead.org/mailman/listinfo/linux-arm-kernel
