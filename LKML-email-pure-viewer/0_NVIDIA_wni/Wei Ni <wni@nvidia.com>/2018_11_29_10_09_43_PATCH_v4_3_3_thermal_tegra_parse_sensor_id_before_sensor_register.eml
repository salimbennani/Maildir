Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:19:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8EF4B5802E4;
	Thu, 29 Nov 2018 02:10:50 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 02:10:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AkE1njRNakc3W24SuRssl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj4o8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xUohyhqBNjzI7PeIGYNuFzfr/Bcd4AWWZMRNpdWzBHD4ih?=
 =?us-ascii?q?b4UPFe0BPeNAoob9uVQOrAa1CxGtBOjyzTJJiHn23awh3uQnDwHG3REvH9MUv3?=
 =?us-ascii?q?jOsNr1M6ISXPmzwaLVzjvDd+tb1Snh5IXMaBwtvP+BUaxqfcbMykQjCxnJg1SS?=
 =?us-ascii?q?pID9IT+Zy+UAv3KF4+Z+Vu+jkXMrpx9srjS128shhYfEi4QIwV7e7yp52pw6Jd?=
 =?us-ascii?q?igRU57f9GkFJxQujmEN4t5XMwiWXtkuCUkxb0cv560YiwKxI4gxx7FZPyLa4mI?=
 =?us-ascii?q?4hT9W+aNOTp0mm5pdbalixqv/0Ws1PfwWtS33VpWtCZIk9vBumgI1xPJ68iHTv?=
 =?us-ascii?q?V9/l2m2TaKzw3T7uBEIUYplavUMpIhwaA/loAVsUvdGi/6gUL2jaGQdko64Oil?=
 =?us-ascii?q?8PrnYrr4qZ+GLYN0iR/xMr4omsOhBeQ0KA8OX3KU+eikzr3s4VX5QKlWjv0xiq?=
 =?us-ascii?q?TZtJHaJccFqaKjDA5Vz50u6xK+DzegzdQZkmMLLFNDeBKbkYfpP0vCL+z/Dfe6?=
 =?us-ascii?q?m16siitkx+jaPr39BZXANnjDn63gfbZh8UFczxA/zdBC551ODLEBL+n+WkvwtN?=
 =?us-ascii?q?zeEx84PBa4w+fhCNVhyIweXXiDDbOeMKPXqVWI/P4gI/GQZI8JvzbwM/ol5/nw?=
 =?us-ascii?q?gnMjml8deq+p3Z0QaH2jGvRmIkOZYWfjg9sbEGcKuBY+Q/LuiFGYTTFTYHOyVb?=
 =?us-ascii?q?om5j4nEIKmEZvDRoe1jbObxye7HppWZmNcBlCWC3jodZ6JW/MNaCKUP89gnSYI?=
 =?us-ascii?q?VbmnS489yx6usBX2xKZgLurR4icYr47s1MBp5+3PkhE/7T90AN6b022XS2F0n3?=
 =?us-ascii?q?kHRzk53K1kpUx9y1GD0bV3gvBCFNxT4e9JXRk+NZLG0+N6DNXyUBrbftiVUFam?=
 =?us-ascii?q?XsmmATYpQ90s2dAOfVhyF8+ijh/Z2SqqGKEal7qMCJww8aLc2nzxKt15y3bH0q?=
 =?us-ascii?q?khklYnTtFONW2gmq5w6QzTC5TVnEWekqagbb4c0zLV9Gef0WqOu1lVXxNqXqXb?=
 =?us-ascii?q?Q38TfEvWos7/5kPZUbCuD68qMg9Ayc6EN6tLZcfljVRARPf/JtveZ3i9lHu3BR?=
 =?us-ascii?q?aN3rmMdpble30B3CXBD0gJixwT/XeDNQg5Gieho2LfACZyFV71ZEPs6+1+qHK9?=
 =?us-ascii?q?Tk871AyKa0xh17yo+h8an/CcSvUT3q4atyclsTl7AFG939fOAdqauwVhZLlcYc?=
 =?us-ascii?q?864Fpfz23ZsxJyP5O+IKFinFIRaBl3sF702BVxCYVAltYqoWguzApzL6KYzVxA?=
 =?us-ascii?q?eymZ3ZD2Jr3YNG3y8AqzZK7R31HUyMyW9bsX6PQkt1XjuxmkF0o/83l9z9ZZyX?=
 =?us-ascii?q?qd5pXQAwoUXpL8SUI39xl8p7HHbSgx/YLU1XtwMaaqtj/Owc4mBOwgyhy4ZddQ?=
 =?us-ascii?q?LLuEFBPuE80dH8WuMu0qlESzYRIeIe9S87Q4P8W4ePuc2a6nJfpvkyiijWta/o?=
 =?us-ascii?q?99yEWM9yxnR+7M3pYFxeyY3wSdWzf9ilehrt74mYReaT4OGWq/zDDuBJRNaa1q?=
 =?us-ascii?q?YYYLFWCuLtW3x9V/nZLsW2RU9EW+B1MAw8KpfRuSb1rg3Qxfz0gXoHqnmTemwD?=
 =?us-ascii?q?xwiT0msq2f3CnWyeT4aBUHInJLRHVljVr0I4i7lcoaXEurbwgujhel/lz1x6tY?=
 =?us-ascii?q?pKR+KWncX0FIcjPyL2FjVKuwq7WDb9RO6JMurSVYTuC8bUqGRb76phsQyznjEH?=
 =?us-ascii?q?dGxDAnazGqvY30nhxgh2KaNnpzrnvZecdryBfb5dzcQ+NR3zUcSCl5jznXGkaz?=
 =?us-ascii?q?P92z8dqIkJfDt/i0V3i9WZ1LbSnr0YSAuTO45WJwAB2zhfCzmsD9Hgg83i/2zN?=
 =?us-ascii?q?1qVSTOrBbhbYjnzaW6MeR7fkZ2AF/w8dZ1GoZ7koEonpEfxWAahomJ/XoAiWrz?=
 =?us-ascii?q?NNRb2aHkY3YXSz8E3cXV4BT71015NX2G2Zj5VnqGz8tlZtm6ZH4W2y0n48BLDq?=
 =?us-ascii?q?eU8KJLnS9vrlWkqgLRZOB3ni0Bxvs29H4an+YJtRIxziWaB7AeB0hZMjbqlxSV?=
 =?us-ascii?q?9NC+t6RXaX2rcbix0kp+gN+gAKuDogFaRHb2ZJMiETVs4cV4NVLGyGfz5Z38eN?=
 =?us-ascii?q?nMcdITsQWZnAzagOhSLJIxi+AGhS56OW/muX0lyug7jQFh3J2gvYiHLXlt87y9?=
 =?us-ascii?q?AhJCKjL1YMYT8Cn3jalChsaWw5yvHpJ5FzUJRpToSOynECkIufT7LQqOEyA8qn?=
 =?us-ascii?q?SGGbrZBwCf81xrr3bOE5CtKnGWK2MVzdRkRBmBOkNfhBoYUyk9np48Dgqq3tDu?=
 =?us-ascii?q?cF9l5jAN4V71shtNyuV1NxnmT2fQvgGoZi0vSJiYKhpW4RpP50PUMcyY8+JyED?=
 =?us-ascii?q?tU/pynrAyRNGObYx5EAn0OWkyBH1rjJKWh5cHc8+iEAeqzN/vObquPqexdVPeI?=
 =?us-ascii?q?xIij0oh8/zaLOcWAIGNiD+Ag2kdYWXB5GsLZmygASiANliLNadKbqwm4+iFtss?=
 =?us-ascii?q?+/9/HrUhr15YSTE7tSLclv+xeujKiZKu6fnzx5JihY158WwX/IyaMS3FoTiyFo?=
 =?us-ascii?q?ajmsHq4MtS/LTKLMhKBXCwQXZD90NMtN96g8xBVCOdbHitPp0b51luI1C1ZAVV?=
 =?us-ascii?q?D7hs6lf9AFI2GjO1PBH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGuICyaBBtCW3iTNLgchK6Md93gicwwb07nX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyPKp9Xff8IKsfpmGD5l0fhX7HU8xJNa?=
 =?us-ascii?q?6ShFQLp+ny6E6pY6r1igk+SLjD5qQhFHrDFjgIONtF9lf6LD+c8EESLA/RQQ/S?=
 =?us-ascii?q?CMBhsQrvN7BdD1/aNd0N7CkOT0MjgUoPzO+s5JOMXVYOSGeC4+NxvBHiDVAAoM?=
 =?us-ascii?q?CzWsMDeM1ARmjPiO+yjN/dABoZ/2lc9WRw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAAiuv9bh0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBGMCIIhly6BcRYYEwGHciI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUBgENBQWDHIICBaVJgWwzgnYBA?=
 =?us-ascii?q?QWHKAiHa4MPgRwXgUA/gRGNbokjgXiEDXdRjzUJDZElAhaRHIh4j1SBRoINcBW?=
 =?us-ascii?q?DJ4IbDBeDSopgMwExgQUBAY04AQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAAAiuv9bh0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBGMCIIhly6BcRYYEwGHciI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZ?=
 =?us-ascii?q?QMDAQIkGQEBNwEFCQEBUANUBgENBQWDHIICBaVJgWwzgnYBAQWHKAiHa4MPgRw?=
 =?us-ascii?q?XgUA/gRGNbokjgXiEDXdRjzUJDZElAhaRHIh4j1SBRoINcBWDJ4IbDBeDSopgM?=
 =?us-ascii?q?wExgQUBAY04AQE?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="54820751"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 02:10:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728013AbeK2VOx (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 16:14:53 -0500
Received: from hqemgate14.nvidia.com ([216.228.121.143]:17960 "EHLO
        hqemgate14.nvidia.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726621AbeK2VOw (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 16:14:52 -0500
Received: from hqpgpgate102.nvidia.com (Not Verified[216.228.121.13]) by hqemgate14.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
        id <B5bffbafd0000>; Thu, 29 Nov 2018 02:10:05 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
  by hqpgpgate102.nvidia.com (PGP Universal service);
  Thu, 29 Nov 2018 02:10:03 -0800
X-PGP-Universal: processed;
        by hqpgpgate102.nvidia.com on Thu, 29 Nov 2018 02:10:03 -0800
Received: from HQMAIL109.nvidia.com (172.20.187.15) by HQMAIL104.nvidia.com
 (172.18.146.11) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Thu, 29 Nov
 2018 10:10:03 +0000
Received: from HQMAIL101.nvidia.com (172.20.187.10) by HQMAIL109.nvidia.com
 (172.20.187.15) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Thu, 29 Nov
 2018 10:10:02 +0000
Received: from hqnvemgw02.nvidia.com (172.16.227.111) by HQMAIL101.nvidia.com
 (172.20.187.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4 via Frontend
 Transport; Thu, 29 Nov 2018 10:10:02 +0000
Received: from niwei-ubuntu.nvidia.com (Not Verified[10.19.225.182]) by hqnvemgw02.nvidia.com with Trustwave SEG (v7,5,8,10121)
        id <B5bffbaf70002>; Thu, 29 Nov 2018 02:10:01 -0800
From: Wei Ni <wni@nvidia.com>
To: <thierry.reding@gmail.com>, <daniel.lezcano@linaro.org>,
        <linux-tegra@vger.kernel.org>
CC: <rui.zhang@intel.com>, <edubezval@gmail.com>, <srikars@nvidia.com>,
        <linux-kernel@vger.kernel.org>, Wei Ni <wni@nvidia.com>
Subject: [PATCH v4 3/3] thermal: tegra: parse sensor id before sensor register
Date: Thu, 29 Nov 2018 18:09:43 +0800
Message-ID: <1543486183-2868-4-git-send-email-wni@nvidia.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1543486183-2868-1-git-send-email-wni@nvidia.com>
References: <1543486183-2868-1-git-send-email-wni@nvidia.com>
X-NVConfidentiality: public
MIME-Version: 1.0
Content-Type: text/plain
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
        t=1543486205; bh=1vLS67MRV1cSQ3NTjEgx5+FLaSxsY9XT5a4ufZClFco=;
        h=X-PGP-Universal:From:To:CC:Subject:Date:Message-ID:X-Mailer:
         In-Reply-To:References:X-NVConfidentiality:MIME-Version:
         Content-Type;
        b=o2Bf06yRjGx8jDzso5+SKHvBIi3U1y7Gbtp4L9xizFIvKksu3WNdXylNnAgQkBohF
         FTNqwkav1NHMqZTWf4tD5wCh6wl+Ma7kn+2J1vRcDcIgzMZFwHDkLTOhT3+/TiRwnl
         2xA3b/5dXGXAqJ/eNBCrDykvNSnaVee49wvHMqcx3CwBDR7dmA8NUsaaMmCTbX13G1
         nolpuo5Frn2BCez1ucl3HCcCeQkiXE6nyizE0FWclnvApT3+Y9uhNm+CtuFaRnQrEV
         pzhKKKN7PHWxIYW9bhKH209/m9HgkZ5hNVYxYl9CVwDGdCeC+ejMRGQQ20+NM4Je3r
         JY7wHmo106eLg==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Since different platforms may not support all 4
sensors, so the sensor registration may be failed.
Add codes to parse dt to find sensor id which
need to be registered. So that the registration
can be successful on all platform.

Signed-off-by: Wei Ni <wni@nvidia.com>
---
 drivers/thermal/tegra/soctherm.c | 46 ++++++++++++++++++++++++++++++++++++++--
 1 file changed, 44 insertions(+), 2 deletions(-)

diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soctherm.c
index 375cadbc24cd..bdc660f2794a 100644
--- a/drivers/thermal/tegra/soctherm.c
+++ b/drivers/thermal/tegra/soctherm.c
@@ -1224,6 +1224,42 @@ static void soctherm_init(struct platform_device *pdev)
 	tegra_soctherm_throttle(&pdev->dev);
 }
 
+static bool tegra_soctherm_find_sensor_id(unsigned int sensor_id)
+{
+	bool ret = false;
+	struct of_phandle_args sensor_specs;
+	struct device_node *np, *sensor_np;
+
+	np = of_find_node_by_name(NULL, "thermal-zones");
+	if (!np)
+		return ret;
+
+	sensor_np = of_get_next_child(np, NULL);
+	for_each_available_child_of_node(np, sensor_np) {
+		if (of_parse_phandle_with_args(sensor_np, "thermal-sensors",
+						 "#thermal-sensor-cells",
+						 0, &sensor_specs))
+			continue;
+
+		if (sensor_specs.args_count != 1) {
+			WARN(sensor_specs.args_count != 1,
+			     "%s: wrong cells in sensor specifier %d\n",
+			     sensor_specs.np->name, sensor_specs.args_count);
+			continue;
+		}
+
+		if (sensor_specs.args[0] == sensor_id) {
+			ret = true;
+			break;
+		}
+	}
+
+	of_node_put(np);
+	of_node_put(sensor_np);
+
+	return ret;
+}
+
 static const struct of_device_id tegra_soctherm_of_match[] = {
 #ifdef CONFIG_ARCH_TEGRA_124_SOC
 	{
@@ -1365,13 +1401,16 @@ static int tegra_soctherm_probe(struct platform_device *pdev)
 		zone->sg = soc->ttgs[i];
 		zone->ts = tegra;
 
+		if (!tegra_soctherm_find_sensor_id(soc->ttgs[i]->id))
+			continue;
+
 		z = devm_thermal_zone_of_sensor_register(&pdev->dev,
 							 soc->ttgs[i]->id, zone,
 							 &tegra_of_thermal_ops);
 		if (IS_ERR(z)) {
 			err = PTR_ERR(z);
-			dev_err(&pdev->dev, "failed to register sensor: %d\n",
-				err);
+			dev_err(&pdev->dev, "failed to register sensor %s: %d\n",
+				soc->ttgs[i]->name, err);
 			goto disable_clocks;
 		}
 
@@ -1434,6 +1473,9 @@ static int __maybe_unused soctherm_resume(struct device *dev)
 		struct thermal_zone_device *tz;
 
 		tz = tegra->thermctl_tzs[soc->ttgs[i]->id];
+		if (!tz)
+			continue;
+
 		err = tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);
 		if (err) {
 			dev_err(&pdev->dev,
-- 
2.7.4

