Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:43:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E65A35802E4
	for <like.xu@linux.intel.com>; Wed, 28 Nov 2018 04:40:44 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 04:40:44 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A94Os5hQA6x5HsTujlKLc7K8ojdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYxaN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPAoyy?=
 =?us-ascii?q?b4UBEegOM+hboYbyu1QAsAO+CAuuCu7g1zNFiGP60rMh0+k6DQHKwBYtE84SvH?=
 =?us-ascii?q?nOrtj4MroZX+CvzKnPyDXOd+9b2TPj54nHbxssvO+DXbR2cc3L10YkCgTIgU+U?=
 =?us-ascii?q?qYP7MDKZzP8CvHad7+pmS+2glXUqqwVwojip3MgskI7JipgSylDe+iV02YA4Ls?=
 =?us-ascii?q?C7Rk5jedOoDodcuiKAO4drX88vQHtktDg0x7AGo5K3YSoHxIwkyhLCcfCLbpaE?=
 =?us-ascii?q?7xH5WOqMIjp1hGhpdbywihu07EOu0PfzVtOu31ZPtidFksfDtnQK1xHL7siHS+?=
 =?us-ascii?q?B9/lu62TqV2ADT7PxELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gayMekk55+Sl?=
 =?us-ascii?q?6P7rbqvoq5KcLYN4lwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj5FP2QLBXjvEvj6?=
 =?us-ascii?q?bWro7aKtofpqKgGABV1Zsj6xCjADi4y9QUmn0HLFNGeB2ZlYToNEzOLej8Dfe+?=
 =?us-ascii?q?hVSsjThqy+rHPr3nHpXCMHzDnK39crZ67k5R0wwzzddZ55JbDLEBPej/WkjrtN?=
 =?us-ascii?q?zXFhM5KRC7w/77CNVh0YMTQWaPAq6aMKzMq1OJ6f8vLvKIZI8Uvjb9Nvck6+Tv?=
 =?us-ascii?q?jX8/hV8SY62p0YELZ3C/G/Q1a3ifemfm19cdDX8R7E15SO3xlEbEVzlVaHCvGa?=
 =?us-ascii?q?Um6XY+AYOiCI7FAYe1nL2G2jz8B5BTeyVKB06BFSTVcZ6ZUaIJYSOWPsgzizEB?=
 =?us-ascii?q?SP2tRpEs0VS0uRbnxqF7BuzT/CIeqNTkztci/PDZlxw56WlpCd+A2XqGVWB+kz?=
 =?us-ascii?q?A0QGp88aV+pU16gnjFmYN/n/USXYhY4O9Aeg0gPJfEietgBIahdBjGe4KgTFu2?=
 =?us-ascii?q?Cv+rBzewQ5plytsDcwB3FtOkgx3r2yusCqUS0buRC8pnoernw3HtKpMlmD7936?=
 =?us-ascii?q?47ggxjG5MXOA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAABnjP5bhxHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwKoI4jBFfiyqCDZdCgXMSAQEYFIdqIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOIwyCNgUCAxoBBoJbAQEBAQIBAQIkGQEBBAopAQICAQECB?=
 =?us-ascii?q?gEBChgJHQgDAQsBJAEFAQEbBhMFFoMGgXoIAQMBml08ih2BbDOCdgEBBYJDg3a?=
 =?us-ascii?q?BBQgSEIpXgRyCFoMBJEk1ilyJBySBbpUEBwKKKocHGIFah342hwcsl3UGAgkHD?=
 =?us-ascii?q?yGBJYINM0qDL4IbDBcSbQEMh1KFP3KBB4sCgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AGAABnjP5bhxHrdtBkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwKoI4jBFfiyqCDZdCgXMSAQEYFIdqIjQJDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOIwyCNgUCAxoBBoJbAQEBAQIBAQIkGQEBBAopAQICAQECBgEBChgJHQgDAQs?=
 =?us-ascii?q?BJAEFAQEbBhMFFoMGgXoIAQMBml08ih2BbDOCdgEBBYJDg3aBBQgSEIpXgRyCF?=
 =?us-ascii?q?oMBJEk1ilyJBySBbpUEBwKKKocHGIFah342hwcsl3UGAgkHDyGBJYINM0qDL4I?=
 =?us-ascii?q?bDBcSbQEMh1KFP3KBB4sCgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="42619581"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 28 Nov 2018 04:40:43 -0800
Received: from localhost ([::1]:47419 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRz91-0008JV-9U
	for like.xu@linux.intel.com; Wed, 28 Nov 2018 07:40:43 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:38201)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gRz8p-0008JG-R1
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 07:40:33 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gRz8m-0004IN-LD
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 07:40:31 -0500
Received: from mail-wm1-x32e.google.com ([2a00:1450:4864:20::32e]:50623)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alex.bennee@linaro.org>)
	id 1gRz8m-0004G8-Cc
	for qemu-devel@nongnu.org; Wed, 28 Nov 2018 07:40:28 -0500
Received: by mail-wm1-x32e.google.com with SMTP id 125so2478446wmh.0
	for <qemu-devel@nongnu.org>; Wed, 28 Nov 2018 04:40:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=references:user-agent:from:to:cc:subject:in-reply-to:date
	:message-id:mime-version;
	bh=TN30O/zaCW6Bg3aust55Gthmwk4KdWZtPhcaWZYlXrY=;
	b=FVw9S0R6isUkeYw/T/pB6tWJhFhLP929hf5tbBiXhrc6/k/BPhFGRBk1oYUXDCNyH0
	K8axvh3/n5W6EqacGEGULQWNaFdu7qDq7qDjLuh9u5KEHI5q7Hvsimrsq+k4mbaB7O9c
	hTv6rotKTKYP0nx9jCXhlS6zJfXCwZ0USYttQ=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:references:user-agent:from:to:cc:subject
	:in-reply-to:date:message-id:mime-version;
	bh=TN30O/zaCW6Bg3aust55Gthmwk4KdWZtPhcaWZYlXrY=;
	b=U/kDZuBIa4QandjKcGaT+Ojcg5ZaIHb4rQ/biolly4rYPwOlut4tU5HQL7iE+kRoL7
	au33TaroP2EQ0yWozo1BFn2r8wKwP0zSUaqgyJPL5oglfJR8dMPYIVqphbv2h+1VSDRA
	P8tMf63/qtOUWNwWLlQA5aLe2iR8Pnc7R/myTAXHJj/6PnUXoN1EMR5W7q8i1mw3DPUT
	PSllrqh/e3f6XOjaK66FLVWQzPg+ifbiGx7jytrqKi9/hFMksC1ev9CEvprvXgLslAJZ
	yYqHM6qNjXwZpT7MWFKSR0RqvD81jQySKOVdkA1ZVx+ADqKry0Lv7BPZ0IWeZUlgYvQM
	9yLw==
X-Gm-Message-State: AA+aEWbCbToSh5zyVnjkoyG/YyShNNIhDuC48sxIQLmUzV3CHAasHomh
	Jr9X/U/JAX7QQihJijWk43thfA==
X-Google-Smtp-Source: AFSGD/XDj18VXZkwVmFWfTo/gyKZL5EDeYaskGYdsA+Sy/W9nvM+691KRZa8u3nVCBVFduaVwwthiA==
X-Received: by 2002:a1c:9d97:: with SMTP id g145mr2516923wme.121.1543408825372;
	Wed, 28 Nov 2018 04:40:25 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
	by smtp.gmail.com with ESMTPSA id n9sm7801906wrx.80.2018.11.28.04.40.24
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Wed, 28 Nov 2018 04:40:24 -0800 (PST)
Received: from zen (localhost [127.0.0.1])
	by zen.linaro.local (Postfix) with ESMTPS id F207D3E00A3;
	Wed, 28 Nov 2018 12:40:23 +0000 (GMT)
References: <20181025172057.20414-1-cota@braap.org>
	<20181025172057.20414-24-cota@braap.org>
	<87lg5f51sz.fsf@linaro.org>
	<e1160c9a-454d-5c55-1295-fb1ab977b2a5@linaro.org>
	<20181126190733.GC6688@flamenco>
	<7ff01881-3130-ef72-217d-511b4de0cd3c@linaro.org>
	<20181127013825.GE22108@flamenco> <20181128005402.GA1523@flamenco>
User-agent: mu4e 1.1.0; emacs 26.1.90
From: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
To: "Emilio G. Cota" <cota@braap.org>
In-reply-to: <20181128005402.GA1523@flamenco>
Date: Wed, 28 Nov 2018 12:40:23 +0000
Message-ID: <87a7lt4bpk.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::32e
Subject: Re: [Qemu-devel] [RFC 23/48] translator: add plugin_insn argument
 to translate_insn
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	Stefan Hajnoczi <stefanha@gmail.com>,
	Richard Henderson <richard.henderson@linaro.org>, qemu-devel@nongnu.org,
	Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>,
	=?utf-8?Q?Llu=C3=ADs?= Vilanova <vilanova@ac.upc.edu>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


Emilio G. Cota <cota@braap.org> writes:

> On Mon, Nov 26, 2018 at 20:38:25 -0500, Emilio G. Cota wrote:
>> On Mon, Nov 26, 2018 at 11:30:25 -0800, Richard Henderson wrote:
>> > On 11/26/18 11:07 AM, Emilio G. Cota wrote:
>> > > The main reason why I added the qemu_plugin_insn_append calls
>> > > was to avoid reading the instructions twice from guest memory,
>> > > because I was worried that doing so might somehow alter the
>> > > guest's execution, e.g. what if we read a cross-page instruction,
>> > > and both pages mapped to the same TLB entry? We'd end up having
>> > > more TLB misses because instrumentation was enabled.
>> >
>> > A better solution for this, I think is to change direct calls from
>> >
>> >   cpu_ldl_code(env, pc);
>> > to
>> >   translator_ldl_code(dc_base, env, pc);
>> >
>> > instead of passing around a new argument separate from DisasContextBase?
>>
>> I think this + diff'ing pc_next should work to figure out the
>> contents and size of each instruction.
>
> I just tried doing things this way.
>
> For some targets like i386, the translator_ld* helpers work
> great; the instruction contents are copied, and through
> the helpers we get the sizes of the instructions as well.
>
> For ARM though (and maybe others, I haven't gone
> through all of them yet), arm_ldl_code does the following:
>
> /* Load an instruction and return it in the standard little-endian order */
> static inline uint32_t arm_ldl_code(CPUARMState *env, target_ulong addr,
>                                     bool sctlr_b)
> {
>     uint32_t insn = cpu_ldl_code(env, addr);
>     if (bswap_code(sctlr_b)) {
>         return bswap32(insn);
>     }
>     return insn;
> }
>
> To avoid altering the signature of .translate_insn, I've modified
> arm_ldl_code directly, as follows:
>
>      uint32_t insn = cpu_ldl_code(env, addr);
> +
>      if (bswap_code(sctlr_b)) {
> -        return bswap32(insn);
> +        insn = bswap32(insn);
> +    }
> +    if (tcg_ctx->plugin_insn) {
> +        qemu_plugin_insn_append(tcg_ctx->plugin_insn, &insn, sizeof(insn));
>      }
>      return insn;
>  }
>
> (NB. tcg_ctx->plugin_insn is updated by translator_loop
> on every iteration.)
>
> Let me know if you think I should do this differently.

I was envisioning something more like the following so all the plugin
gubins could be kept in the core code:

accel/tcg/translator.c    | 25 +++++++++++++++++++++++++
include/exec/translator.h | 10 ++++++++++
target/arm/arm_ldst.h     | 16 +++-------------

modified   accel/tcg/translator.c
@@ -10,6 +10,7 @@
 #include "qemu/osdep.h"
 #include "qemu-common.h"
 #include "qemu/error-report.h"
+#include "qemu/bswap.h"
 #include "cpu.h"
 #include "tcg/tcg.h"
 #include "tcg/tcg-op.h"
@@ -18,6 +19,30 @@
 #include "exec/log.h"
 #include "exec/translator.h"
 #include "exec/plugin-gen.h"
+#include "exec/cpu_ldst.h"
+
+/*
+ * Translator Code Load Helpers
+ */
+
+uint16_t translator_ld16(CPUArchState *env, target_ulong ptr, bool bswap)
+{
+    uint16_t insn = cpu_lduw_code(env, ptr);
+    if (bswap) {
+        insn = bswap16(insn);
+    }
+    return insn;
+}
+
+uint32_t translator_ld32(CPUArchState *env, target_ulong ptr, bool bswap)
+{
+    uint32_t insn = cpu_ldl_code(env, ptr);
+    if (bswap) {
+        insn = bswap32(insn);
+    }
+    return insn;
+}
+

 /* Pairs with tcg_clear_temp_count.
    To be called by #TranslatorOps.{translate_insn,tb_stop} if
modified   include/exec/translator.h
@@ -147,4 +147,14 @@ void translator_loop(const TranslatorOps *ops, DisasContextBase *db,

 void translator_loop_temp_check(DisasContextBase *db);

+/*
+ * Translator Code Load Helpers
+ *
+ * These allow the core translator code to track where code is being
+ * loaded from.
+ */
+
+uint16_t translator_ld16(CPUArchState *env, target_ulong ptr, bool bswap);
+uint32_t translator_ld32(CPUArchState *env, target_ulong ptr, bool bswap);
+
 #endif  /* EXEC__TRANSLATOR_H */
modified   target/arm/arm_ldst.h
@@ -20,25 +20,19 @@
 #ifndef ARM_LDST_H
 #define ARM_LDST_H

-#include "exec/cpu_ldst.h"
-#include "qemu/bswap.h"
+#include "exec/translator.h"

 /* Load an instruction and return it in the standard little-endian order */
 static inline uint32_t arm_ldl_code(CPUARMState *env, target_ulong addr,
                                     bool sctlr_b)
 {
-    uint32_t insn = cpu_ldl_code(env, addr);
-    if (bswap_code(sctlr_b)) {
-        return bswap32(insn);
-    }
-    return insn;
+    return translator_ld32(env, addr, bswap_code(sctlr_b));
 }

 /* Ditto, for a halfword (Thumb) instruction */
 static inline uint16_t arm_lduw_code(CPUARMState *env, target_ulong addr,
                                      bool sctlr_b)
 {
-    uint16_t insn;
 #ifndef CONFIG_USER_ONLY
     /* In big-endian (BE32) mode, adjacent Thumb instructions have been swapped
        within each word.  Undo that now.  */
@@ -46,11 +40,7 @@ static inline uint16_t arm_lduw_code(CPUARMState *env, target_ulong addr,
         addr ^= 2;
     }
 #endif
-    insn = cpu_lduw_code(env, addr);
-    if (bswap_code(sctlr_b)) {
-        return bswap16(insn);
-    }
-    return insn;
+    return translator_ld16(env, addr, bswap_code(sctlr_b));
 }

 #endif

