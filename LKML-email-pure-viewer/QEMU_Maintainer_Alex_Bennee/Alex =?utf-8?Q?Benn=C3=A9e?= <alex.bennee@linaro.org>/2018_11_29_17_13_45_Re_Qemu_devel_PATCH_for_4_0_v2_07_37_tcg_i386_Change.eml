Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:48:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C06B4580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 09:14:05 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 29 Nov 2018 09:14:05 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AHTEVbRGR3ikK3BweYJrzO51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ7ypc2wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KNzA3/2/XlMJ/jqxVrhGuqBNjzIDafZmVOfh8cK7SYN8XS3ZNUdhKVyFaHoO8?=
 =?us-ascii?q?dpECA/YdMetCrYTwoUYFoxukBQmrAePi0iNFhnvo0qw1zu8sDB/J3AomH9UUrn?=
 =?us-ascii?q?vfsdL4O70WUe+rw6jE1y7MYO1Q2Tf79ofHbAssofWNXbJ2a8XR004vGxnCjlWK?=
 =?us-ascii?q?pozoJjWY3fkOvWiD9+dsS/6jhm09pw1svzSixd0ghpfHi48V0FzI6Cd0zJ42KN?=
 =?us-ascii?q?GlUkJ3fMCoHZhKuy2HNIZ7QtkuTm9ntSs817YIo4S0fDIQx5Qi3xPfa+KIc4yP?=
 =?us-ascii?q?4h/7UOaRICx4hG5+eL6liBay91Wgxvf7Vsmu31ZGtitFkt/SuXARzxHf9NSLR/?=
 =?us-ascii?q?hn8ku8xDqC1Brf5v9KLE00j6bXNpwszqY1lpUJsETDGiH2mF/xjK+Tbkgk4/an?=
 =?us-ascii?q?6+H6Yrn/u5CTKZF0hR/6Mqg3gcO/Bvk4Mg4SUGeF4uSw07nj/Uz6QLpUlPE3nb?=
 =?us-ascii?q?TZvYjeJcQaoK65HgBU3pwi6xa5EzepztAYkWMbI1JCfRKKlI7pO1bIIPD3C/e/?=
 =?us-ascii?q?nk6gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaOB+WKO/f8ldumQeJcO6nG6L/k+++Wo?=
 =?us-ascii?q?i3g/llkAO66z0twSYXG8G/1gZEKBfXvrhMxGCGoPo08yQfLnjA6/VyVObSO3Vq?=
 =?us-ascii?q?M4+jZpEY+jEMLPS56ghPmb0T6mE4ZKTmZBDF+KDDHvbYrTQOoGai+ZPpp8lCcZ?=
 =?us-ascii?q?X6OqUY4r2EKSs1rjxr96a+bZ5CAcnZTk0tdz+qvUjx5h2yZzCpG012ydB0t5mG?=
 =?us-ascii?q?WJSndi1aRysQp3x1GF3KVQh/1eHMZUofRTXVFpZtbn0+VmBoWqCUr6ddCTRQP+?=
 =?us-ascii?q?Tw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAQCPHQBchxHrdtBkHgEGBwaBVAYLA?=
 =?us-ascii?q?QGBL4Jig3mId4spgg18mDsSAQEYFIRAgzQiNwYNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4jDEIBEAGBYgUCAxgJglwBAgIBAQIgHQEBBAopAQICAQECBgEBChoCBRoDB?=
 =?us-ascii?q?AICAwELASQBBQEBGxkFgxyBeggBAwGaezyKHXCBL4J2AQEFgkODYIEFCBIQaYl?=
 =?us-ascii?q?vgRyCFoERgXBtNYUBgwSCV6AlBwKRMhiJWIdELJd7BgIJBw8hgTuBdzNKgy+CG?=
 =?us-ascii?q?zWITIU/coEHhweEPIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AkAQCPHQBchxHrdtBkHgEGBwaBVAYLAQGBL4Jig3mId4s?=
 =?us-ascii?q?pgg18mDsSAQEYFIRAgzQiNwYNAQMBAQEBAQECARMBAQEKCwkIGw4jDEIBEAGBY?=
 =?us-ascii?q?gUCAxgJglwBAgIBAQIgHQEBBAopAQICAQECBgEBChoCBRoDBAICAwELASQBBQE?=
 =?us-ascii?q?BGxkFgxyBeggBAwGaezyKHXCBL4J2AQEFgkODYIEFCBIQaYlvgRyCFoERgXBtN?=
 =?us-ascii?q?YUBgwSCV6AlBwKRMhiJWIdELJd7BgIJBw8hgTuBdzNKgy+CGzWITIU/coEHhwe?=
 =?us-ascii?q?EPIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="42106488"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 09:14:04 -0800
Received: from localhost ([::1]:55447 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSPt5-0007sR-5O
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 12:14:03 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49186)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gSPst-0007s6-Pg
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:13:52 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gSPsq-0005WB-K7
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:13:51 -0500
Received: from mail-wr1-x444.google.com ([2a00:1450:4864:20::444]:39268)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alex.bennee@linaro.org>)
	id 1gSPsq-0005Vv-4C
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:13:48 -0500
Received: by mail-wr1-x444.google.com with SMTP id t27so2684822wra.6
	for <qemu-devel@nongnu.org>; Thu, 29 Nov 2018 09:13:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=references:user-agent:from:to:cc:subject:in-reply-to:date
	:message-id:mime-version:content-transfer-encoding;
	bh=sx1PPuVTTI5N+ea+p8Qi12GI3zPw3NdMHoYd1MSMkhI=;
	b=IZ6JzYtmn9FokIHn31bLoAlbzqY3sxTO8Q6ltVpR8u1BzBFOqh6XvQCTfTgXycBTmD
	ooXR8yW/RVXFYdpjW99fhuSTqFVQte+v4fc0eNU6+D8r4PvWeUqxibWnFU6pQc855Zdy
	TGbrFy4dXwhkbb9ICfUSEyrSFnwOZgQLs96xc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:references:user-agent:from:to:cc:subject
	:in-reply-to:date:message-id:mime-version:content-transfer-encoding;
	bh=sx1PPuVTTI5N+ea+p8Qi12GI3zPw3NdMHoYd1MSMkhI=;
	b=ET8JLF4n7YMWejLVKoM6SfE+jCLCgjfpNXixz3Z1e+ftTc8O+MEUaWFk6W/rrcez0P
	7fNH+zp7zDMblXNsp2txagyudfLR1KGwVwmzU0r6J97/eA97rtdbCmsYDXQ37PsAz3MU
	UMfhlyxq4cVA6OkzWXap2tvbquMdr5y8iTldhkh9JJGpLsO2B+jQvrCysF6IM1ZvYVrM
	x7tv+tfnrHs+bWrS0Uz/1nhW5wzLDOmUA7qGx3wFMLL/Axdndf/pDV2piX3irEonEDoz
	Mb64UTDYP9gfCkHjs1wju79m+uY1dqYssg3mZm8p0nWtuo3U6J0hO2bZQaSr8hhlmMV5
	qt+Q==
X-Gm-Message-State: AA+aEWYr7FvPkI+S8wIYC4oNF381xQmkr5ZcM/GVGy1LthnurHuRWlOq
	GRO5Y0wQAPR+8AeQhPnJfM4gnySAbB4=
X-Google-Smtp-Source: AFSGD/UHVt20lW68DZubHkPTXRFDgsRzbtKzEWlWI18YwN7VzDZ2ivIjsInnY+YtVU0gRXghOlNX2A==
X-Received: by 2002:adf:f101:: with SMTP id r1mr2210292wro.32.1543511626570;
	Thu, 29 Nov 2018 09:13:46 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
	by smtp.gmail.com with ESMTPSA id f2sm2407625wru.14.2018.11.29.09.13.45
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Thu, 29 Nov 2018 09:13:45 -0800 (PST)
Received: from zen (localhost [127.0.0.1])
	by zen.linaro.local (Postfix) with ESMTPS id 53A1D3E0116;
	Thu, 29 Nov 2018 17:13:45 +0000 (GMT)
References: <20181123144558.5048-1-richard.henderson@linaro.org>
	<20181123144558.5048-8-richard.henderson@linaro.org>
User-agent: mu4e 1.1.0; emacs 26.1.90
From: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
To: qemu-devel@nongnu.org
In-reply-to: <20181123144558.5048-8-richard.henderson@linaro.org>
Date: Thu, 29 Nov 2018 17:13:45 +0000
Message-ID: <87va4f3iye.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::444
Subject: Re: [Qemu-devel] [PATCH for-4.0 v2 07/37] tcg/i386: Change
 TCG_REG_L[01] to not overlap function arguments
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Alistair.Francis@wdc.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


Richard Henderson <richard.henderson@linaro.org> writes:

> We will shortly be forcing qemu_ld/st arguments into registers
> that match the function call abi of the host, which means that
> the temps must be elsewhere.
>
> Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
> ---
>  tcg/i386/tcg-target.inc.c | 28 +++++++++++++++++++---------
>  1 file changed, 19 insertions(+), 9 deletions(-)
>
> diff --git a/tcg/i386/tcg-target.inc.c b/tcg/i386/tcg-target.inc.c
> index 3234a8d8bf..07df4b2b12 100644
> --- a/tcg/i386/tcg-target.inc.c
> +++ b/tcg/i386/tcg-target.inc.c
> @@ -121,12 +121,16 @@ static const int tcg_target_call_oarg_regs[] =3D {
>  #define TCG_CT_CONST_I32 0x400
>  #define TCG_CT_CONST_WSZ 0x800
>
> -/* Registers used with L constraint, which are the first argument
> -   registers on x86_64, and two random call clobbered registers on
> -   i386. */
> +/* Registers used with L constraint, which are two random
> + * call clobbered registers.  These should be free.
> + */

"These should be free by the time we have committed to making a procedure
call and won't be needed afterwards."?

>  #if TCG_TARGET_REG_BITS =3D=3D 64
> -# define TCG_REG_L0 tcg_target_call_iarg_regs[0]
> -# define TCG_REG_L1 tcg_target_call_iarg_regs[1]

I guess we don't need this type of assignment enough to have a
tcg_target_call_clobber_regs array we can fill from?

/me digs deeper

ahh I see we have tcg_target_call_clobber_regs but that's a bitmap for
use by the register allocator... never mind.

> +# define TCG_REG_L0   TCG_REG_RAX
> +# ifdef _WIN64
> +#  define TCG_REG_L1  TCG_REG_R10
> +# else
> +#  define TCG_REG_L1  TCG_REG_RDI
> +# endif
>  #else
>  # define TCG_REG_L0 TCG_REG_EAX
>  # define TCG_REG_L1 TCG_REG_EDX
> @@ -1628,6 +1632,7 @@ static TCGReg tcg_out_tlb_load(TCGContext *s, TCGRe=
g addrlo, TCGReg addrhi,
>      unsigned a_mask =3D (1 << a_bits) - 1;
>      unsigned s_mask =3D (1 << s_bits) - 1;
>      target_ulong tlb_mask;
> +    TCGReg base;
>
>      if (TCG_TARGET_REG_BITS =3D=3D 64) {
>          if (TARGET_LONG_BITS =3D=3D 64) {
> @@ -1674,7 +1679,12 @@ static TCGReg tcg_out_tlb_load(TCGContext *s, TCGR=
eg addrlo, TCGReg addrhi,
>         before the fastpath ADDQ below.  For 64-bit guest and x32 host, M=
OVQ
>         copies the entire guest address for the slow path, while truncati=
on
>         for the 32-bit host happens with the fastpath ADDL below.  */
> -    tcg_out_mov(s, ttype, r1, addrlo);
> +    if (TCG_TARGET_REG_BITS =3D=3D 64) {
> +        base =3D tcg_target_call_iarg_regs[1];
> +    } else {
> +        base =3D r1;
> +    }
> +    tcg_out_mov(s, ttype, base, addrlo);
>
>      /* jne slow_path */
>      tcg_out_opc(s, OPC_JCC_long + JCC_JNE, 0, 0, 0);
> @@ -1693,11 +1703,11 @@ static TCGReg tcg_out_tlb_load(TCGContext *s, TCG=
Reg addrlo, TCGReg addrhi,
>
>      /* TLB Hit.  */
>
> -    /* add addend(r0), r1 */
> -    tcg_out_modrm_offset(s, OPC_ADD_GvEv + hrexw, r1, r0,
> +    /* add addend(r0), base */
> +    tcg_out_modrm_offset(s, OPC_ADD_GvEv + hrexw, base, r0,
>                           offsetof(CPUTLBEntry, addend) - which);
>
> -    return r1;
> +    return base;
>  }
>
>  /*

Anyway:

Reviewed-by: Alex Benn=C3=A9e <alex.bennee@linaro.org>

--
Alex Benn=C3=A9e

