Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:42:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F1BFD5805FC
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 03:02:16 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 03:02:16 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2h22KRwFxS2G95zXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoWK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfWSJCBY2z?=
 =?us-ascii?q?bYUPAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0m0OksCx3K0RY8E98Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTF0THDYO1Z2Dzg9YXHbBYhofeWWr1ubMHczlMgFwfbgVSf?=
 =?us-ascii?q?s4DqJC2a1uILs2eF8eVtTuavi28hqw5ruDivwd0gio7ThoIa013J8zhyzogyJd?=
 =?us-ascii?q?29UkF7YNikHYNRtyGfOIt2X9kiT3t0tyY9z70Lv4OwcisSyJk/2RLTd/+Kf5KV?=
 =?us-ascii?q?7h7+V+udOyl0iXxldb6lmhq/81Csx+7hWsWuzVpGsClInsPRun0O1xHf8MaKR/?=
 =?us-ascii?q?R780y8wziAzRrT5ftBIU0slarUNZohwrkom5oXsETDBTP2mF7sgK+ZcEUk5/Kk?=
 =?us-ascii?q?6+P9YrXpvpOcNol0hR/iMqk2hMCzHec1PhITU2SG+umwzqPv8EP5TblQk/E7kL?=
 =?us-ascii?q?HVsJXAKsQaoq65DRVV0oEm6xunFjepztEYnWQeIF1YZh2HkZbmO1XXLP/jCve/?=
 =?us-ascii?q?nlKsnyt1yPDdObHhBpTNLnvdn7v7crd99lZRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biE9h90IQeWWSAAq+fLaPeq1iI5vggI+WUfo8apC79K+Q55/7p?=
 =?us-ascii?q?lXI5nV4dfaq30pcNZ3G4A+9rI0GYYXrqn9cAHn0Gvgs4TOz2llKCVSRfaGq1X6?=
 =?us-ascii?q?I5tXkGDpm7B9LDWpy1m+7GmyO6BYFNIGZBDF+KDDHvbYrDXv4NbCebJIhmiiAF?=
 =?us-ascii?q?Ur66DJYs0AzruALkxr40E+zP5ydNsJvi0MRytfTekAx3+TFqAsDYyWyUUmxvgk?=
 =?us-ascii?q?sOQDk52r05plZynUye26p1iOANCNpI+vlSWR07P5OP8+svE93uVxiHe96YRFui?=
 =?us-ascii?q?Rv2iADc4VNV3xMUBMGhnHND3pxTOz2KADrkTFrHDUJUw/7Ka1XX3Ictw43LH0q?=
 =?us-ascii?q?A7iB8hWMQZZj7uvbJ26wWGX92BqE6ejav/MP1EhCM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BCAgBOgRdchxHrdtBkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBFhODfIh4ixeCDZlLEgEBGAcNh1QiOBIBAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?bDiMMgjYFAgMaAQaCXAMDAQIgDwENAQEECikBAgMBAgYBAR8FAiIEAgIDATABB?=
 =?us-ascii?q?QEcGQWDHQGCAAEDAZwhPIogcIEvFIJiAQEFgTABgRKDUYEFAwUSeYZygyWBHII?=
 =?us-ascii?q?WgRGBcIYHgySCV4lEhguRTAcCkU8LGIlzh1+OBiwuil0GAgkHDyGBPIF3M0qDL?=
 =?us-ascii?q?4Ibg22FFIU/coEHi3iBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BCAgBOgRdchxHrdtBkHQEBBQEHBQGBZYExgTmBFhODfIh?=
 =?us-ascii?q?4ixeCDZlLEgEBGAcNh1QiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaA?=
 =?us-ascii?q?QaCXAMDAQIgDwENAQEECikBAgMBAgYBAR8FAiIEAgIDATABBQEcGQWDHQGCAAE?=
 =?us-ascii?q?DAZwhPIogcIEvFIJiAQEFgTABgRKDUYEFAwUSeYZygyWBHIIWgRGBcIYHgySCV?=
 =?us-ascii?q?4lEhguRTAcCkU8LGIlzh1+OBiwuil0GAgkHDyGBPIF3M0qDL4Ibg22FFIU/coE?=
 =?us-ascii?q?Hi3iBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="55457411"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 03:02:16 -0800
Received: from localhost ([::1]:45913 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYqf9-0004we-E6
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 06:02:15 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:37274)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gYqbL-0002Y7-92
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:58:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gYqaB-0000DI-1b
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:57:09 -0500
Received: from mail-wm1-x341.google.com ([2a00:1450:4864:20::341]:34148)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alex.bennee@linaro.org>)
	id 1gYqaA-0000CE-3Q
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 05:57:06 -0500
Received: by mail-wm1-x341.google.com with SMTP id y185so4430730wmd.1
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 02:57:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=gOXFTj5uqzApKHFUrx/GP3fxC64evZtaKBwy5sxWSzs=;
	b=Bb9KVEqSTcHyk7bl7obciPKjCq7p1ar0Da6t8fY/wyP3B3I9vWuFY6PLxJDxTcr4mp
	c1l+V99UNqCTmRGO2btd+QqMBaNhHKhAF1klHbOwOKl7eZcgjAuER0jIM+fSpRQt4IMo
	juG4k5/r82AqXlt0zRI2gT638qTYLpHmpgZlw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=gOXFTj5uqzApKHFUrx/GP3fxC64evZtaKBwy5sxWSzs=;
	b=BJ8MtYk60HMVSxls9mCkTQrDgGOELDyg0qzSFcRcbHTgr/xYqnwR7rQK4rJaBNJLY/
	TbKy7fZby1oB88AElkpT5wUUNQGNso4q2ZE4kn/jGuePYkTgCpSn6XDirZsGFqRGjQZl
	SDlQ62iaDMj7B20+aXnlbt0xY64svfN/K6Ywy4YgkuqsSmDVAwfwpSUTZyY3Nxk7vNlI
	8Bka60XbIGuhwxfByL5ncczjyKXs8Iw0h2Z3tA5r6T8ndUXNA9lLzNiwIQ0ErkwTGREp
	t8Cuw7UgHMJ2MgzZ9F3SxD023FNsE9gpij7C+oxLoiKP3L2NS7TQnQm2tqjE5w2CXeVc
	lL3g==
X-Gm-Message-State: AA+aEWYADojibmdiPlN2DnrdSuIUOQ61EJSh/k3tJEuBG9DabyVwLCj5
	Ca5OAZeVYwMn1vPS2gjehpWGQQ==
X-Google-Smtp-Source: AFSGD/W3inZlmIYzPuCt5wI2ddaGCxAOb4lc9BRJvQhPBl7L43HRwP0KPsA8QspKm/IOHyu3jwHzSQ==
X-Received: by 2002:a1c:ef11:: with SMTP id n17mr10773271wmh.112.1545044224023;
	Mon, 17 Dec 2018 02:57:04 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
	by smtp.gmail.com with ESMTPSA id n6sm9250255wmk.9.2018.12.17.02.56.55
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Mon, 17 Dec 2018 02:57:03 -0800 (PST)
Received: from zen.linaroharston (localhost [127.0.0.1])
	by zen.linaro.local (Postfix) with ESMTP id CE7EE3E063A;
	Mon, 17 Dec 2018 10:56:51 +0000 (GMT)
From: =?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>
To: peter.maydell@linaro.org
Date: Mon, 17 Dec 2018 10:56:50 +0000
Message-Id: <20181217105650.27361-16-alex.bennee@linaro.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181217105650.27361-1-alex.bennee@linaro.org>
References: <20181217105650.27361-1-alex.bennee@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::341
Subject: [Qemu-devel] [PULL v3 15/15] hardfloat: implement float32/64
 comparison
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Emilio G. Cota" <cota@braap.org>,
	=?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>,
	qemu-devel@nongnu.org, Aurelien Jarno <aurelien@aurel32.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: "Emilio G. Cota" <cota@braap.org>

Performance results for fp-bench:

Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz
- before:
cmp-single: 110.98 MFlops
cmp-double: 107.12 MFlops
- after:
cmp-single: 506.28 MFlops
cmp-double: 524.77 MFlops

Note that flattening both eq and eq_signaling versions
would give us extra performance (695v506, 615v524 Mflops
for single/double, respectively) but this would emit two
essentially identical functions for each eq/signaling pair,
which is a waste.

Aggregate performance improvement for the last few patches:
[ all charts in png: https://imgur.com/a/4yV8p ]

1. Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz

                   qemu-aarch64 NBench score; higher is better
                 Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz

  16 +-+-----------+-------------+----===-------+---===-------+-----------+-+
  14 +-+..........................@@@&&.=.......@@@&&.=...................+-+
  12 +-+..........................@.@.&.=.......@.@.&.=.....+befor===     +-+
  10 +-+..........................@.@.&.=.......@.@.&.=.....+ad@@&& =     +-+
   8 +-+.......................$$$%.@.&.=.......@.@.&.=.....+  @@u& =     +-+
   6 +-+............@@@&&=+***##.$%.@.&.=***##$$%+@.&.=..###$$%%@i& =     +-+
   4 +-+.......###$%%.@.&=.*.*.#.$%.@.&.=*.*.#.$%.@.&.=+**.#+$ +@m& =     +-+
   2 +-+.....***.#$.%.@.&=.*.*.#.$%.@.&.=*.*.#.$%.@.&.=.**.#+$+sqr& =     +-+
   0 +-+-----***##$%%@@&&=-***##$$%@@&&==***##$$%@@&&==-**##$$%+cmp==-----+-+
            FOURIER    NEURAL NELU DECOMPOSITION         gmean

                              qemu-aarch64 SPEC06fp (test set) speedup over QEMU 4c2c1015905
                                      Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz
                                            error bars: 95% confidence interval

  4.5 +-+---+-----+----+-----+-----+-&---+-----+----+-----+-----+-----+----+-----+-----+-----+-----+----+-----+---+-+
    4 +-+..........................+@@+...........................................................................+-+
  3.5 +-+..............%%@&.........@@..............%%@&............................................+++dsub       +-+
  2.5 +-+....&&+.......%%@&.......+%%@..+%%&+..@@&+.%%@&....................................+%%&+.+%@&++%%@&      +-+
    2 +-+..+%%&..+%@&+.%%@&...+++..%%@...%%&.+$$@&..%%@&..%%@&.......+%%&+.%%@&+......+%%@&.+%%&++$$@&++d%@&  %%@&+-+
  1.5 +-+**#$%&**#$@&**#%@&**$%@**#$%@**#$%&**#$@&**$%@&*#$%@**#$%@**#$%&**#%@&**$%@&*#$%@**#$%&**#$@&*+f%@&**$%@&+-+
  0.5 +-+**#$%&**#$@&**#%@&**$%@**#$%@**#$%&**#$@&**$%@&*#$%@**#$%@**#$%&**#%@&**$%@&*#$%@**#$%&**#$@&+sqr@&**$%@&+-+
    0 +-+**#$%&**#$@&**#%@&**$%@**#$%@**#$%&**#$@&**$%@&*#$%@**#$%@**#$%&**#%@&**$%@&*#$%@**#$%&**#$@&*+cmp&**$%@&+-+
  410.bw416.gam433.434.z435.436.cac437.lesli444.447.de450.so453454.ca459.GemsF465.tont470.lb4482.sphinxgeomean

2. Host: ARM Aarch64 A57 @ 2.4GHz

                    qemu-aarch64 NBench score; higher is better
                 Host: Applied Micro X-Gene, Aarch64 A57 @ 2.4 GHz

    5 +-+-----------+-------------+-------------+-------------+-----------+-+
  4.5 +-+........................................@@@&==...................+-+
  3 4 +-+..........................@@@&==........@.@&.=.....+before       +-+
    3 +-+..........................@.@&.=........@.@&.=.....+ad@@@&==     +-+
  2.5 +-+.....................##$$%%.@&.=........@.@&.=.....+  @m@& =     +-+
    2 +-+............@@@&==.***#.$.%.@&.=.***#$$%%.@&.=.***#$$%%d@& =     +-+
  1.5 +-+.....***#$$%%.@&.=.*.*#.$.%.@&.=.*.*#.$.%.@&.=.*.*#+$ +f@& =     +-+
  0.5 +-+.....*.*#.$.%.@&.=.*.*#.$.%.@&.=.*.*#.$.%.@&.=.*.*#+$+sqr& =     +-+
    0 +-+-----***#$$%%@@&==-***#$$%%@@&==-***#$$%%@@&==-***#$$%+cmp==-----+-+
             FOURIER    NEURAL NLU DECOMPOSITION         gmean

Reviewed-by: Alex Bennée <alex.bennee@linaro.org>
Signed-off-by: Emilio G. Cota <cota@braap.org>
Signed-off-by: Alex Bennée <alex.bennee@linaro.org>

diff --git a/fpu/softfloat.c b/fpu/softfloat.c
index fbd66fd8dc..59eac97d10 100644
--- a/fpu/softfloat.c
+++ b/fpu/softfloat.c
@@ -2903,28 +2903,109 @@ static int compare_floats(FloatParts a, FloatParts b, bool is_quiet,
     }
 }
 
-#define COMPARE(sz)                                                     \
-int float ## sz ## _compare(float ## sz a, float ## sz b,               \
-                            float_status *s)                            \
+#define COMPARE(name, attr, sz)                                         \
+static int attr                                                         \
+name(float ## sz a, float ## sz b, bool is_quiet, float_status *s)      \
 {                                                                       \
     FloatParts pa = float ## sz ## _unpack_canonical(a, s);             \
     FloatParts pb = float ## sz ## _unpack_canonical(b, s);             \
-    return compare_floats(pa, pb, false, s);                            \
-}                                                                       \
-int float ## sz ## _compare_quiet(float ## sz a, float ## sz b,         \
-                                  float_status *s)                      \
-{                                                                       \
-    FloatParts pa = float ## sz ## _unpack_canonical(a, s);             \
-    FloatParts pb = float ## sz ## _unpack_canonical(b, s);             \
-    return compare_floats(pa, pb, true, s);                             \
+    return compare_floats(pa, pb, is_quiet, s);                         \
 }
 
-COMPARE(16)
-COMPARE(32)
-COMPARE(64)
+COMPARE(soft_f16_compare, QEMU_FLATTEN, 16)
+COMPARE(soft_f32_compare, QEMU_SOFTFLOAT_ATTR, 32)
+COMPARE(soft_f64_compare, QEMU_SOFTFLOAT_ATTR, 64)
 
 #undef COMPARE
 
+int float16_compare(float16 a, float16 b, float_status *s)
+{
+    return soft_f16_compare(a, b, false, s);
+}
+
+int float16_compare_quiet(float16 a, float16 b, float_status *s)
+{
+    return soft_f16_compare(a, b, true, s);
+}
+
+static int QEMU_FLATTEN
+f32_compare(float32 xa, float32 xb, bool is_quiet, float_status *s)
+{
+    union_float32 ua, ub;
+
+    ua.s = xa;
+    ub.s = xb;
+
+    if (QEMU_NO_HARDFLOAT) {
+        goto soft;
+    }
+
+    float32_input_flush2(&ua.s, &ub.s, s);
+    if (isgreaterequal(ua.h, ub.h)) {
+        if (isgreater(ua.h, ub.h)) {
+            return float_relation_greater;
+        }
+        return float_relation_equal;
+    }
+    if (likely(isless(ua.h, ub.h))) {
+        return float_relation_less;
+    }
+    /* The only condition remaining is unordered.
+     * Fall through to set flags.
+     */
+ soft:
+    return soft_f32_compare(ua.s, ub.s, is_quiet, s);
+}
+
+int float32_compare(float32 a, float32 b, float_status *s)
+{
+    return f32_compare(a, b, false, s);
+}
+
+int float32_compare_quiet(float32 a, float32 b, float_status *s)
+{
+    return f32_compare(a, b, true, s);
+}
+
+static int QEMU_FLATTEN
+f64_compare(float64 xa, float64 xb, bool is_quiet, float_status *s)
+{
+    union_float64 ua, ub;
+
+    ua.s = xa;
+    ub.s = xb;
+
+    if (QEMU_NO_HARDFLOAT) {
+        goto soft;
+    }
+
+    float64_input_flush2(&ua.s, &ub.s, s);
+    if (isgreaterequal(ua.h, ub.h)) {
+        if (isgreater(ua.h, ub.h)) {
+            return float_relation_greater;
+        }
+        return float_relation_equal;
+    }
+    if (likely(isless(ua.h, ub.h))) {
+        return float_relation_less;
+    }
+    /* The only condition remaining is unordered.
+     * Fall through to set flags.
+     */
+ soft:
+    return soft_f64_compare(ua.s, ub.s, is_quiet, s);
+}
+
+int float64_compare(float64 a, float64 b, float_status *s)
+{
+    return f64_compare(a, b, false, s);
+}
+
+int float64_compare_quiet(float64 a, float64 b, float_status *s)
+{
+    return f64_compare(a, b, true, s);
+}
+
 /* Multiply A by 2 raised to the power N.  */
 static FloatParts scalbn_decomposed(FloatParts a, int n, float_status *s)
 {
-- 
2.17.1


