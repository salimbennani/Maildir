Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:38:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 251675807A2
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 07:34:42 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 07:34:42 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Ae2MhgRUxtl6EAKup/jhRaZAKm2TV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRKFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cYUBAekGM+laoYnyqEcBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BAjEt8UrH?=
 =?us-ascii?q?jZtsn5OaUUXOuozKfI1zLDb/ZO1Drh7IjHbB8gquyRUL1ud8rRz1MoGB3YhViX?=
 =?us-ascii?q?s4PlOy2a1+sXv2eA8eVgU+SvhHA5pAxqpjivx8EshZPThoIS0FzE8j95wIksKN?=
 =?us-ascii?q?C+VUV1YsakHYNOuy2GNIZ6WN4uT3xrtSog1LELt562cDIXxJkl3xLSaOGLf5KV?=
 =?us-ascii?q?7h79V+udOyp0iXFldb6liRu//k6twfDmWMauylZFtC9Fn8HMtn8T0xzT7dCKSv?=
 =?us-ascii?q?98/ke6xTaPzBrf6u5CIUApj6bbLIQhwrEompoSt0TMADP2lV3ogKOKdUgo4PWk?=
 =?us-ascii?q?5/nkb7n8uJOROY95hhvjPqksgsC/BP43MgkKX2iV4+S807jj8FXgQLpUi/02j7?=
 =?us-ascii?q?DVv43EKsQFuKG5BxZZ3Z0k6xaiCTepzMoXnWIAIFJBeRKHjJbmN0vBIfDlFfq/?=
 =?us-ascii?q?h1WskDF2x/HJJLHhA5PNLmTdn7flZ7py90lcyA8owNBZ4JJUDL4BIPTuWkPrs9?=
 =?us-ascii?q?zYFBA5PxSuw+n7ENV9yp8eWWWXD6+dMaPSskGH6vggIumRf4IVvDf9K/445//h?=
 =?us-ascii?q?l3M5mFkdfbW30psTcny3AvNmI0DKKUfqmcoLRGcWohIlHqutjFyZTSUVYXG0UK?=
 =?us-ascii?q?QhoDYhB8WjBIbHQ4mrx7uZwCa8GIYRf21DFxWAHGnlc9a5XewRYneXK85ljjtW?=
 =?us-ascii?q?TLWkVsot2A+jsErgxqN6I/HI0isfs53lyZ5y/eKEjgw49zF/E5GA1XqQRXp/hG?=
 =?us-ascii?q?ICSmwK2/VmrElgj1uOz6V8q/pfE9NV+rVOSAhpG4TbyrlTD93iEijMeNEIRR7y?=
 =?us-ascii?q?S9GrEXc7Q9Q3ztImZ0d7Es+lyBfZ0Hz5UPcui7WXCclsoern1H/rKpM4ki6e2Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAAD0hg5cmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBOYEpg3qIGV+LMIMJllWBbBkBARgHDYdtIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBAQEICwsGGw4jDII2BQIDGgEGglwDAwECIA8BDQEBBAopAQIDAQIGA?=
 =?us-ascii?q?QEkAiIEAgIDATABBQEcGQWDHAGCAQEDAZoNPIodcIEvgnYBAQWCQ4NTgQUIEnm?=
 =?us-ascii?q?GZ4MTgRyCFoERgXBtiDqCV4k7lzwHAocIijwLGIlmh1eZCQYCCQcPIYElgg4zS?=
 =?us-ascii?q?kOCbAmCEoMPhXKFP3KBB4pSgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0APAAD0hg5cmBHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BOYEpg3qIGV+LMIMJllWBbBkBARgHDYdtIjQJDQEDAQEBAQEBAgETAQEBAQEIC?=
 =?us-ascii?q?wsGGw4jDII2BQIDGgEGglwDAwECIA8BDQEBBAopAQIDAQIGAQEkAiIEAgIDATA?=
 =?us-ascii?q?BBQEcGQWDHAGCAQEDAZoNPIodcIEvgnYBAQWCQ4NTgQUIEnmGZ4MTgRyCFoERg?=
 =?us-ascii?q?XBtiDqCV4k7lzwHAocIijwLGIlmh1eZCQYCCQcPIYElgg4zSkOCbAmCEoMPhXK?=
 =?us-ascii?q?FP3KBB4pSgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="55703416"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 07:34:40 -0800
Received: from localhost ([::1]:33361 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWNZv-0004qw-FY
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 10:34:39 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43296)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gWNU6-00086F-Fa
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 10:28:40 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gWNU4-0000VQ-DT
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 10:28:38 -0500
Received: from mail-wr1-x443.google.com ([2a00:1450:4864:20::443]:45987)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alex.bennee@linaro.org>)
	id 1gWNU4-0000Uq-3f
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 10:28:36 -0500
Received: by mail-wr1-x443.google.com with SMTP id b14so10888130wru.12
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 07:28:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=STDK5Wg3WVtNMlneX8YnmoHX7VBhJdtTVlYI7mEXVSo=;
	b=fQYAqBd2QdWy4O0lyh0z9TPeFV0tfP5A2sZLpQn3R8KVa2BncaODg1SLDeHrXJCRBb
	RbrJZQdUX/RjEiNgHqlqFhD1G9Q/cqKUtPfX2zKvjzFhDMRwqIVtXLOO1aeBAbSkyR+H
	rCBJNSUHZrWjT95R+8NnwQq22LlaD6w6BFJ2M=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=STDK5Wg3WVtNMlneX8YnmoHX7VBhJdtTVlYI7mEXVSo=;
	b=qR/foE4ePStuBYyuXnHlHwHp9KP3evOFabKOiLy86V/DOreOyB7A2t+LSU7PXFKKaq
	9SETxGSn0tmwRp5oEtIlxnXfNkYGJfQ4X5pHuLJ2/eOcTfx7vpAkNGfWwB8jj2AdEUH2
	4GsugfAAESbtT+AqYMRqVLiOQqUqoKs/o9CGWsaOPPkkM7ww3gdd+3FOTqtwWi1dUbq0
	UnbxjJaDyuCR68YNotHMcf07UzA69jB8hn/EnXtltvLnVjQvAj6zJsC4iUJX1SxowKS0
	AeHcyxDz3htEh8Y1/OU4KkOUUtpx4lKsaN3VO0raeimhCWUYwt1RB6cu7a23asehkqKe
	CY/g==
X-Gm-Message-State: AA+aEWbNkyVYn5rl2xY4mzMSQ4WLhpF/DDhmFyXgx/9bZ5R1m8qWHpug
	NJIoYqyAeCGcMA7SDnxP307j8A==
X-Google-Smtp-Source: AFSGD/Wp0WFx9LdNQTKGl2t3BJvEgumVAYXKWLHlrqoRNMfeZmUm+buaZfFA+5zIE99V0/TbKG2YvA==
X-Received: by 2002:adf:8001:: with SMTP id 1mr9771257wrk.23.1544455714967;
	Mon, 10 Dec 2018 07:28:34 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
	by smtp.gmail.com with ESMTPSA id
	l197sm37598535wma.44.2018.12.10.07.28.31
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Mon, 10 Dec 2018 07:28:33 -0800 (PST)
Received: from zen.linaroharston (localhost [127.0.0.1])
	by zen.linaro.local (Postfix) with ESMTP id 409D53E059D;
	Mon, 10 Dec 2018 15:28:30 +0000 (GMT)
From: =?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>
To: qemu-devel@nongnu.org
Date: Mon, 10 Dec 2018 15:28:21 +0000
Message-Id: <20181210152829.29271-6-alex.bennee@linaro.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181210152829.29271-1-alex.bennee@linaro.org>
References: <20181210152829.29271-1-alex.bennee@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::443
Subject: [Qemu-devel] [RFC PATCH 05/13] tests/tcg/mips: enable mips64 system
 tests (WIP)
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Stefan Markovic <smarkovic@wavecomp.com>, jcmvbkbc@gmail.com,
	michael@walle.cc, amarkovic@wavecomp.com,
	edgar.iglesias@gmail.com, shorne@gmail.com,
	=?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>,
	aurelien@aurel32.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The mips64-dsp and mips64-dspr2 tests are softmmu tests. Tweaks the
makefiles to use the tcg tests build system.

[WIP: currently won't link but the flags for HEAD vs CFLAGS seem odd]

Signed-off-by: Alex Benn√©e <alex.bennee@linaro.org>
---
 tests/tcg/mips/Makefile.softmmu-target |  20 ++
 tests/tcg/mips/mips64-dsp/Makefile     | 336 ++++---------------------
 2 files changed, 64 insertions(+), 292 deletions(-)
 create mode 100644 tests/tcg/mips/Makefile.softmmu-target

diff --git a/tests/tcg/mips/Makefile.softmmu-target b/tests/tcg/mips/Makefile.softmmu-target
new file mode 100644
index 0000000000..79781ae03c
--- /dev/null
+++ b/tests/tcg/mips/Makefile.softmmu-target
@@ -0,0 +1,20 @@
+# -*- Mode: makefile -*-
+#
+# MIPS Softmmu Targets - included from tests/tcg/Makefile.target
+#
+# The system tests for mips cover a number of different devices and
+# softmmu builds so we include only the one appropriate for the
+# current target.
+#
+
+# Set search path for all sources. As there are clashing files in both
+# the mips64-dsp and mips64-dspr2 directories we build the rules
+# explicitly including the directory so VPATH only needs to be the top
+# of the MIPS tests.
+MIPS_SRC = $(SRC_PATH)/tests/tcg/mips
+VPATH 	+= $(MIPS_SRC)
+
+ifeq ($(TARGET_NAME),mips64el)
+-include $(MIPS_SRC)/mips64-dsp/Makefile
+#-include $(MIPS_SRC)/mips64-dspr2/Makefile
+endif
diff --git a/tests/tcg/mips/mips64-dsp/Makefile b/tests/tcg/mips/mips64-dsp/Makefile
index b2ac6b3ffd..55198f3cc9 100644
--- a/tests/tcg/mips/mips64-dsp/Makefile
+++ b/tests/tcg/mips/mips64-dsp/Makefile
@@ -1,306 +1,58 @@
-
-CROSS_COMPILE	?= mips64el-unknown-linux-gnu-
-
-SIM = qemu-system-mips64el
-SIMFLAGS = -nographic -cpu mips64dspr2 -kernel
-
-AS      = $(CROSS_COMPILE)as
-LD      = $(CROSS_COMPILE)ld
-CC      = $(CROSS_COMPILE)gcc
-AR      = $(CROSS_COMPILE)ar
-NM      = $(CROSS_COMPILE)nm
-STRIP       = $(CROSS_COMPILE)strip
-RANLIB      = $(CROSS_COMPILE)ranlib
-OBJCOPY     = $(CROSS_COMPILE)objcopy
-OBJDUMP     = $(CROSS_COMPILE)objdump
-
-VECTORS_OBJ ?= ./head.o ./printf.o
-
-HEAD_FLAGS ?= -nostdinc -mabi=64 -G 0 -mno-abicalls -fno-pic -pipe \
-              -msoft-float -march=mips64 -Wa,-mips64 -Wa,--trap \
-              -msym32 -DKBUILD_64BIT_SYM32 -I./
-
-CFLAGS ?= -nostdinc -mabi=64 -G 0 -mno-abicalls -fno-pic -fno-builtin  \
+#
+# MIPS64-DSP softmmu tests
+#
+
+MIPS64_DSP_SRC = $(SRC_PATH)/tests/tcg/mips/mips64-dsp
+MIPS64_DSP_ALL = $(wildcard $(MIPS64_DSP_SRC)/*.c)
+MIPS64_DSP_TESTS = $(patsubst $(MIPS64_DSP_SRC)/%.c, %, $(MIPS64_DSP_ALL))
+# for now filter out these
+MIPS64_DSP_BROKEN_TESTS  = dappend preceq_l_pwl preceq_l_pwr precequ_qh_obla precequ_qh_obl
+MIPS64_DSP_BROKEN_TESTS += precequ_qh_obra precequ_qh_obr precr_ob_qh precr_sra_qh_pw
+MIPS64_DSP_BROKEN_TESTS += precr_sra_r_qh_pw prependd prependw raddu_l_ob
+MIPS64_DSP_BROKEN_TESTS += shra_ob shra_r_ob shrl_qh shrlv_qh
+MIPS64_DSP_USABLE_TESTS = $(patsubst %,mips64-dsp/%, $(filter-out $(MIPS64_DSP_BROKEN_TESTS), $(MIPS64_DSP_TESTS)))
+MIPS64_DSP_RUNS = $(patsubst %, run-%, $(MIPS64_DSP_USABLE_TESTS))
+
+# add to the list of tests
+TESTS += $(MIPS64_DSP_USABLE_TESTS)
+
+.PHONY: mips64-dsp.build
+mips64-dsp.build:
+	mkdir -p mips64-dsp
+
+# head objects (linked into other binaries)
+VECTORS_OBJ = mips64-dsp/head.o mips64-dsp/printf.o
+.PRECIOUS: $(VECTOR_OBJS)
+
+HEAD_FLAGS = -nostdinc -mabi=64 -G 0 -mno-abicalls -fno-pic -pipe \
+           -msoft-float -march=mips64 -Wa,-mips64 -Wa,--trap \
+           -msym32 -DKBUILD_64BIT_SYM32 -I./
+
+CFLAGS = -nostdinc -mabi=64 -G 0 -mno-abicalls -fno-pic -fno-builtin  \
           -pipe -march=mips64r2 -mgp64 -mdsp -static -Wa,--trap -msym32 \
           -DKBUILD_64BIT_SYM32 -I./
 
-LDFLAGS = -T./mips_boot.lds -L./
+LDFLAGS = -T$(MIPS64_DSP_SRC)/mips_boot.lds -L./mips64-dsp
 FLAGS = -nostdlib -mabi=64 -march=mips64r2 -mgp64 -mdsp
 
+mips64-dsp/head.o: mips64-dsp/head.S | mips64-dsp.build
+	$(CC) $(HEAD_FLAGS) -D"STACK_TOP=0xffffffff80200000" -c $< -o $@
 
-#TESTCASES = absq_s_ob.tst
-TESTCASES = absq_s_ph.tst
-TESTCASES += absq_s_pw.tst
-TESTCASES += absq_s_qh.tst
-TESTCASES += absq_s_w.tst
-TESTCASES += addq_ph.tst
-TESTCASES += addq_pw.tst
-TESTCASES += addq_qh.tst
-TESTCASES += addq_s_ph.tst
-TESTCASES += addq_s_pw.tst
-TESTCASES += addq_s_qh.tst
-TESTCASES += addq_s_w.tst
-TESTCASES += addsc.tst
-TESTCASES += addu_ob.tst
-TESTCASES += addu_qb.tst
-TESTCASES += addu_s_ob.tst
-TESTCASES += addu_s_qb.tst
-TESTCASES += addwc.tst
-TESTCASES += bitrev.tst
-TESTCASES += bposge32.tst
-TESTCASES += bposge64.tst
-TESTCASES += cmp_eq_ph.tst
-TESTCASES += cmp_eq_pw.tst
-TESTCASES += cmp_eq_qh.tst
-TESTCASES += cmpgu_eq_ob.tst
-TESTCASES += cmpgu_eq_qb.tst
-TESTCASES += cmpgu_le_ob.tst
-TESTCASES += cmpgu_le_qb.tst
-TESTCASES += cmpgu_lt_ob.tst
-TESTCASES += cmpgu_lt_qb.tst
-TESTCASES += cmp_le_ph.tst
-TESTCASES += cmp_le_pw.tst
-TESTCASES += cmp_le_qh.tst
-TESTCASES += cmp_lt_ph.tst
-TESTCASES += cmp_lt_pw.tst
-TESTCASES += cmp_lt_qh.tst
-TESTCASES += cmpu_eq_ob.tst
-TESTCASES += cmpu_eq_qb.tst
-TESTCASES += cmpu_le_ob.tst
-TESTCASES += cmpu_le_qb.tst
-TESTCASES += cmpu_lt_ob.tst
-TESTCASES += cmpu_lt_qb.tst
-#TESTCASES += dappend.tst
-TESTCASES += dextp.tst
-TESTCASES += dextpdp.tst
-TESTCASES += dextpdpv.tst
-TESTCASES += dextpv.tst
-TESTCASES += dextr_l.tst
-TESTCASES += dextr_r_l.tst
-TESTCASES += dextr_rs_l.tst
-TESTCASES += dextr_rs_w.tst
-TESTCASES += dextr_r_w.tst
-TESTCASES += dextr_s_h.tst
-TESTCASES += dextrv_l.tst
-TESTCASES += dextrv_r_l.tst
-TESTCASES += dextrv_rs_l.tst
-TESTCASES += dextrv_rs_w.tst
-TESTCASES += dextrv_r_w.tst
-TESTCASES += dextrv_s_h.tst
-TESTCASES += dextrv_w.tst
-TESTCASES += dextr_w.tst
-TESTCASES += dinsv.tst
-TESTCASES += dmadd.tst
-TESTCASES += dmaddu.tst
-TESTCASES += dmsub.tst
-TESTCASES += dmsubu.tst
-TESTCASES += dmthlip.tst
-TESTCASES += dpaq_sa_l_pw.tst
-TESTCASES += dpaq_sa_l_w.tst
-TESTCASES += dpaq_s_w_ph.tst
-TESTCASES += dpaq_s_w_qh.tst
-TESTCASES += dpau_h_obl.tst
-TESTCASES += dpau_h_obr.tst
-TESTCASES += dpau_h_qbl.tst
-TESTCASES += dpau_h_qbr.tst
-TESTCASES += dpsq_sa_l_pw.tst
-TESTCASES += dpsq_sa_l_w.tst
-TESTCASES += dpsq_s_w_ph.tst
-TESTCASES += dpsq_s_w_qh.tst
-TESTCASES += dpsu_h_obl.tst
-TESTCASES += dpsu_h_obr.tst
-TESTCASES += dpsu_h_qbl.tst
-TESTCASES += dpsu_h_qbr.tst
-TESTCASES += dshilo.tst
-TESTCASES += dshilov.tst
-TESTCASES += extp.tst
-TESTCASES += extpdp.tst
-TESTCASES += extpdpv.tst
-TESTCASES += extpv.tst
-TESTCASES += extr_rs_w.tst
-TESTCASES += extr_r_w.tst
-TESTCASES += extr_s_h.tst
-TESTCASES += extrv_rs_w.tst
-TESTCASES += extrv_r_w.tst
-TESTCASES += extrv_s_h.tst
-TESTCASES += extrv_w.tst
-TESTCASES += extr_w.tst
-TESTCASES += insv.tst
-TESTCASES += lbux.tst
-TESTCASES += lhx.tst
-TESTCASES += lwx.tst
-TESTCASES += ldx.tst
-TESTCASES += madd.tst
-TESTCASES += maddu.tst
-TESTCASES += maq_sa_w_phl.tst
-TESTCASES += maq_sa_w_phr.tst
-TESTCASES += maq_sa_w_qhll.tst
-TESTCASES += maq_sa_w_qhlr.tst
-TESTCASES += maq_sa_w_qhrl.tst
-TESTCASES += maq_sa_w_qhrr.tst
-TESTCASES += maq_s_l_pwl.tst
-TESTCASES += maq_s_l_pwr.tst
-TESTCASES += maq_s_w_phl.tst
-TESTCASES += maq_s_w_phr.tst
-TESTCASES += maq_s_w_qhll.tst
-TESTCASES += maq_s_w_qhlr.tst
-TESTCASES += maq_s_w_qhrl.tst
-TESTCASES += maq_s_w_qhrr.tst
-TESTCASES += mfhi.tst
-TESTCASES += mflo.tst
-TESTCASES += modsub.tst
-TESTCASES += msub.tst
-TESTCASES += msubu.tst
-TESTCASES += mthi.tst
-TESTCASES += mthlip.tst
-TESTCASES += mtlo.tst
-TESTCASES += muleq_s_pw_qhl.tst
-TESTCASES += muleq_s_pw_qhr.tst
-TESTCASES += muleq_s_w_phl.tst
-TESTCASES += muleq_s_w_phr.tst
-TESTCASES += muleu_s_ph_qbl.tst
-TESTCASES += muleu_s_ph_qbr.tst
-TESTCASES += muleu_s_qh_obl.tst
-TESTCASES += muleu_s_qh_obr.tst
-TESTCASES += mulq_rs_ph.tst
-TESTCASES += mulq_rs_qh.tst
-TESTCASES += mulsaq_s_l_pw.tst
-TESTCASES += mulsaq_s_w_qh.tst
-TESTCASES += mult.tst
-TESTCASES += multu.tst
-TESTCASES += packrl_ph.tst
-TESTCASES += packrl_pw.tst
-TESTCASES += pick_ob.tst
-TESTCASES += pick_ph.tst
-TESTCASES += pick_pw.tst
-TESTCASES += pick_qb.tst
-TESTCASES += pick_qh.tst
-#TESTCASES += preceq_l_pwl.tst
-#TESTCASES += preceq_l_pwr.tst
-TESTCASES += preceq_pw_qhla.tst
-TESTCASES += preceq_pw_qhl.tst
-TESTCASES += preceq_pw_qhra.tst
-TESTCASES += preceq_pw_qhr.tst
-TESTCASES += precequ_ph_qbla.tst
-TESTCASES += precequ_ph_qbl.tst
-TESTCASES += precequ_ph_qbra.tst
-TESTCASES += precequ_ph_qbr.tst
-#TESTCASES += precequ_qh_obla.tst
-#TESTCASES += precequ_qh_obl.tst
-#TESTCASES += precequ_qh_obra.tst
-#TESTCASES += precequ_qh_obr.tst
-TESTCASES += preceq_w_phl.tst
-TESTCASES += preceq_w_phr.tst
-TESTCASES += preceu_ph_qbla.tst
-TESTCASES += preceu_ph_qbl.tst
-TESTCASES += preceu_ph_qbra.tst
-TESTCASES += preceu_ph_qbr.tst
-TESTCASES += preceu_qh_obla.tst
-TESTCASES += preceu_qh_obl.tst
-TESTCASES += preceu_qh_obra.tst
-TESTCASES += preceu_qh_obr.tst
-#TESTCASES += precr_ob_qh.tst
-TESTCASES += precrq_ob_qh.tst
-TESTCASES += precrq_ph_w.tst
-TESTCASES += precrq_pw_l.tst
-TESTCASES += precrq_qb_ph.tst
-TESTCASES += precrq_qh_pw.tst
-TESTCASES += precrq_rs_ph_w.tst
-TESTCASES += precrq_rs_qh_pw.tst
-TESTCASES += precrqu_s_ob_qh.tst
-TESTCASES += precrqu_s_qb_ph.tst
-#TESTCASES += precr_sra_qh_pw.tst
-#TESTCASES += precr_sra_r_qh_pw.tst
-#TESTCASES += prependd.tst
-#TESTCASES += prependw.tst
-#TESTCASES += raddu_l_ob.tst
-TESTCASES += raddu_w_qb.tst
-TESTCASES += rddsp.tst
-TESTCASES += repl_ob.tst
-TESTCASES += repl_ph.tst
-TESTCASES += repl_pw.tst
-TESTCASES += repl_qb.tst
-TESTCASES += repl_qh.tst
-TESTCASES += replv_ob.tst
-TESTCASES += replv_ph.tst
-TESTCASES += replv_pw.tst
-TESTCASES += replv_qb.tst
-TESTCASES += shilo.tst
-TESTCASES += shilov.tst
-TESTCASES += shll_ob.tst
-TESTCASES += shll_ph.tst
-TESTCASES += shll_pw.tst
-TESTCASES += shll_qb.tst
-TESTCASES += shll_qh.tst
-TESTCASES += shll_s_ph.tst
-TESTCASES += shll_s_pw.tst
-TESTCASES += shll_s_qh.tst
-TESTCASES += shll_s_w.tst
-TESTCASES += shllv_ob.tst
-TESTCASES += shllv_ph.tst
-TESTCASES += shllv_pw.tst
-TESTCASES += shllv_qb.tst
-TESTCASES += shllv_qh.tst
-TESTCASES += shllv_s_ph.tst
-TESTCASES += shllv_s_pw.tst
-TESTCASES += shllv_s_qh.tst
-TESTCASES += shllv_s_w.tst
-#TESTCASES += shra_ob.tst
-TESTCASES += shra_ph.tst
-TESTCASES += shra_pw.tst
-TESTCASES += shra_qh.tst
-#TESTCASES += shra_r_ob.tst
-TESTCASES += shra_r_ph.tst
-TESTCASES += shra_r_pw.tst
-TESTCASES += shra_r_qh.tst
-TESTCASES += shra_r_w.tst
-TESTCASES += shrav_ph.tst
-TESTCASES += shrav_pw.tst
-TESTCASES += shrav_qh.tst
-TESTCASES += shrav_r_ph.tst
-TESTCASES += shrav_r_pw.tst
-TESTCASES += shrav_r_qh.tst
-TESTCASES += shrav_r_w.tst
-TESTCASES += shrl_ob.tst
-TESTCASES += shrl_qb.tst
-#TESTCASES += shrl_qh.tst
-TESTCASES += shrlv_ob.tst
-TESTCASES += shrlv_qb.tst
-#TESTCASES += shrlv_qh.tst
-TESTCASES += subq_ph.tst
-TESTCASES += subq_pw.tst
-TESTCASES += subq_qh.tst
-TESTCASES += subq_s_ph.tst
-TESTCASES += subq_s_pw.tst
-TESTCASES += subq_s_qh.tst
-TESTCASES += subq_s_w.tst
-TESTCASES += subu_ob.tst
-TESTCASES += subu_qb.tst
-TESTCASES += subu_s_ob.tst
-TESTCASES += subu_s_qb.tst
-TESTCASES += wrdsp.tst
-
-all: build
-
-head.o : head.S
-	$(Q)$(CC) $(HEAD_FLAGS) -D"STACK_TOP=0xffffffff80200000" -c $< -o $@
-
-%.o  : %.S
+mips64-dsp/%.o: mips64-dsp/%.S | mips64-dsp.build
 	$(CC) $(CFLAGS) -c $< -o $@
 
-%.o  : %.c
+mips64-dsp/%.o: mips64-dsp/%.c | mips64-dsp.build
 	$(CC) $(CFLAGS) -c $< -o $@
 
-%.tst: %.o $(VECTORS_OBJ)
+mips64-dsp/%: mips64-dsp/%.o $(VECTORS_OBJ)
 	$(CC) $(VECTORS_OBJ) $(FLAGS) $(LDFLAGS) $< -o $@
 
-build: $(VECTORS_OBJ) $(MIPSSOC_LIB) $(TESTCASES)
+#
+# Runners
+#
 
-check:  $(VECTORS_OBJ) $(MIPSSOC_LIB) $(TESTCASES)
-	@for case in $(TESTCASES); do \
-		echo $(SIM) $(SIMFLAGS) ./$$case; \
-		$(SIM) $(SIMFLAGS) ./$$case & (sleep 1; killall $(SIM)); \
-	done
+$(MIPS64_DSP_RUNS): QEMU_OPTS=-nographic -cpu mips64dspr2 -kernel
 
-clean:
-	$(Q)rm -f *.o *.tst *.a
+# FIXME: I don't know why the general rule in tests/tcg/Makefile isn't enough
+run-mips64-dsp/%: mips64-dsp/%
+	$(call run-test, $<, $(QEMU) $(QEMU_OPTS) $<, "$< on $(TARGET_NAME) $(QEMU_OPTS)")
-- 
2.17.1


