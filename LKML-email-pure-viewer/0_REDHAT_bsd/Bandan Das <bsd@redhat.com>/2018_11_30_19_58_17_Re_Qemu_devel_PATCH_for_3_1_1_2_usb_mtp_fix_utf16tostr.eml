Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:22:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CA23A580224
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 11:58:55 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 11:58:55 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ACy9sqBSwghYOGVPQaP8ZPUoY69psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYRWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?YYsBAegOM+VWoIbyu1QAsAO+CAuuCu7g1zNFiGP60rMh0+k6DQHKwBYtE84SvH?=
 =?us-ascii?q?nOsNn4MroZX+CvzKnPyDXOd+5b1i376IfVaB8hp+yHU7xqfsrK1EIiEBjKjk6N?=
 =?us-ascii?q?poH+JTOayPkCs2iB4Op8T+6gl2knqwRorzWp28wiiZHJi5oLxlzY9ih12ps5Kc?=
 =?us-ascii?q?C7RUJhf9KpHptduzuHO4Z0Ws8uXX1ktSIgxrEbt5O3YjIGxIkkyhPRcfCLbYuF?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oBl9FceAyCmkVWR+hH?=
 =?us-ascii?q?4TWzIslPR2u0l30Eqry6V0g/VEU9dU4qUafB09MMv2xup2Ata6dgvaNoODU1qO?=
 =?us-ascii?q?WNiqATgtCNk2xoldMA5GB9y+g0WbjGKRCLgPmunOXcRs/w=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAAChlQFchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCTxOMEV+NOHyII44pgXMUGBSHdiI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDi+CNgUCAxoBBoJcAQICAQECJB8KKQMCAQECBgEBCg4THQgDAQsBB?=
 =?us-ascii?q?EkTBYMcgXUFCAEEp38zii2MGheBf4ERgl01hG2FbwKPKnyQDwmRNxiJWYdGLJg?=
 =?us-ascii?q?xgUaCDTMaCBsVgyeCJAMXjjsjMYEHHIpYVYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AWAAChlQFchxHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CTxOMEV+NOHyII44pgXMUGBSHdiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CN?=
 =?us-ascii?q?gUCAxoBBoJcAQICAQECJB8KKQMCAQECBgEBCg4THQgDAQsBBEkTBYMcgXUFCAE?=
 =?us-ascii?q?Ep38zii2MGheBf4ERgl01hG2FbwKPKnyQDwmRNxiJWYdGLJgxgUaCDTMaCBsVg?=
 =?us-ascii?q?yeCJAMXjjsjMYEHHIpYVYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,299,1539673200"; 
   d="scan'208";a="43050328"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 11:58:55 -0800
Received: from localhost ([::1]:34421 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSowA-0008FT-Cb
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 14:58:54 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50943)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <bsd@redhat.com>) id 1gSovj-0008E2-Fi
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 14:58:28 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <bsd@redhat.com>) id 1gSove-0002k6-Lr
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 14:58:26 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51900)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <bsd@redhat.com>) id 1gSove-0002hU-7j
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 14:58:22 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id E3CD48E3EA
	for <qemu-devel@nongnu.org>; Fri, 30 Nov 2018 19:58:20 +0000 (UTC)
Received: from gigantic.usersys.redhat.com (dhcp-17-169.bos.redhat.com
	[10.18.17.169])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 6E70219745;
	Fri, 30 Nov 2018 19:58:18 +0000 (UTC)
From: Bandan Das <bsd@redhat.com>
To: Markus Armbruster <armbru@redhat.com>
References: <20181130111222.25386-1-kraxel@redhat.com>
	<20181130111222.25386-2-kraxel@redhat.com>
	<87woouk8rv.fsf@dusky.pond.sub.org>
Date: Fri, 30 Nov 2018 14:58:17 -0500
In-Reply-To: <87woouk8rv.fsf@dusky.pond.sub.org> (Markus Armbruster's message
	of "Fri, 30 Nov 2018 14:13:56 +0100")
Message-ID: <jpga7lq72xy.fsf@linux.bootlegged.copy>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/25.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.25]);
	Fri, 30 Nov 2018 19:58:20 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.1 1/2] usb-mtp: fix utf16_to_str
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Gerd Hoffmann <kraxel@redhat.com>, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Markus Armbruster <armbru@redhat.com> writes:

> Gerd Hoffmann <kraxel@redhat.com> writes:
>
>> Make utf16_to_str return an allocated string.  Remove the assumtion that
>> the number of string bytes equals the number of utf16 chars (which is
>> only true for ascii chars).  Instead call wcstombs twice, once to figure
>> the storage size and once for the actual conversion (as suggested by the
>> wcstombs manpage).
>>
>> Reported-by: Michael Hanselmann (hansmi.ch)
>> Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
>> ---
>>  hw/usb/dev-mtp.c | 17 +++++++++++------
>>  1 file changed, 11 insertions(+), 6 deletions(-)
>>
>> diff --git a/hw/usb/dev-mtp.c b/hw/usb/dev-mtp.c
>> index 00a3691bae..fbe1ace035 100644
>> --- a/hw/usb/dev-mtp.c
>> +++ b/hw/usb/dev-mtp.c
>> @@ -1593,17 +1593,22 @@ static void usb_mtp_cancel_packet(USBDevice *dev, USBPacket *p)
>>      fprintf(stderr, "%s\n", __func__);
>>  }
>>  
>> -static void utf16_to_str(uint8_t len, uint16_t *arr, char *name)
>> +static char *utf16_to_str(uint8_t len, uint16_t *arr)
>>  {
>> -    int count;
>> -    wchar_t *wstr = g_new0(wchar_t, len);
>> +    wchar_t *wstr = g_new0(wchar_t, len + 1);
>> +    int count, dlen;
>> +    char *dest;
>>  
>>      for (count = 0; count < len; count++) {
>>          wstr[count] = (wchar_t)arr[count];
>>      }
>> +    wstr[count] = 0;
>>  
>> -    wcstombs(name, wstr, len);
>> +    dlen = wcstombs(NULL, wstr, 0) + 1;
>> +    dest = g_malloc(dlen);
>> +    wcstombs(dest, wstr, dlen);
>>      g_free(wstr);
>> +    return dest;
>>  }
>
> Preexisting: casting uint16_t to wchar_t is iffy for at least two
> reasons:
>
> * When wchar_t is UCS-4, things fall apart for surrogate pairs.  For
>   instance, the surrogate pair
>
>       uint16_t arr = { 0xD834, 0xDD1E };
>
>   should map to the single wchar_t 0x1D11E.
>
> * wchar_t needn't even be Unicode.  It might well be on any host we care
>   for, but are you *sure*?
>
> I guess g_utf16_to_utf8() would be differently wrong: it converts to
> UTF-8, but we need to convert to the current locale's multibyte string.
>

I couldn't find an existing function that I could safely reuse which was my first
preference. I will take a look at how to make this function better, maybe,
even see what other MTP implementations are doing in this regard.

Bandan

>>  
>>  /* Wrapper around write, returns 0 on failure */
>> @@ -1703,7 +1708,7 @@ static void usb_mtp_write_metadata(MTPState *s)
>>  {
>>      MTPData *d = s->data_out;
>>      ObjectInfo *dataset = (ObjectInfo *)d->data;
>> -    char *filename = g_new0(char, dataset->length);
>> +    char *filename;
>>      MTPObject *o;
>>      MTPObject *p = usb_mtp_object_lookup(s, s->dataset.parent_handle);
>>      uint32_t next_handle = s->next_handle;
>> @@ -1711,7 +1716,7 @@ static void usb_mtp_write_metadata(MTPState *s)
>>      assert(!s->write_pending);
>>      assert(p != NULL);
>>  
>> -    utf16_to_str(dataset->length, dataset->filename, filename);
>> +    filename = utf16_to_str(dataset->length, dataset->filename);
>>  
>>      o = usb_mtp_object_lookup_name(p, filename, dataset->length);
>>      if (o != NULL) {

