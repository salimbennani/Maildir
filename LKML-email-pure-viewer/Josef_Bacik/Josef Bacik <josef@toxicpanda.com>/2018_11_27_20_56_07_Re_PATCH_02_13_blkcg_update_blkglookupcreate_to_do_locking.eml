Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 160E7580322;
	Tue, 27 Nov 2018 12:56:16 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 12:56:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ac2iUdB9C4BVxrv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+0TIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOMuRWoInmv1sDrwCzBRWwCO711jNEmmX70bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rQq9X1L7kdUe6ox6TV1zrMc/JW2TTg44XPcBAhpuqMUqx+ccfK1UkvEAzEjlSM?=
 =?us-ascii?q?poz9JTyV0PkCvHKB4+V8UuKvjncqpgdsqTas3schkpfFip4Rx1ze6Cl0zpg5Kc?=
 =?us-ascii?q?elREN4fdKoCppduiOCO4doQ84uXX1ktSMnxrEapJG2eTQFxIgjyhLCbvGLbouF?=
 =?us-ascii?q?7g7mWeuUPDt1gX1od66wihqu90Wr1/fyWdOu0FlQqypIitnMuW4J1xzU8sWHVP?=
 =?us-ascii?q?R98Vm72TqV1ADc9PtEIUYqmqrfMZIhxaQwlpULvUTCGC/5hln2gbeIekk4/uWk?=
 =?us-ascii?q?8fnrb7v4qpOGKoN5iR3yPr4vl8G9Geg4NxIBX2mf+eSyzr3j+kj5Ta1Ojv03lK?=
 =?us-ascii?q?nZrZ/bKd0YpqGnGQ9V1Jgs6xKmAzeh3tUYm2cILEhedRKZgIjmJUvOLOr7Dfih?=
 =?us-ascii?q?mVSslilkx/TcMr3mGJXNIWDPkK39crZl905c1A0zwMhb55JVCbEOPuj/W0DstN?=
 =?us-ascii?q?HDCh85Mgq0w/voCdln14MeX36PDbGdMK/IrVCI4ecvKfGWZIAJoDb9N+Ql5/n2?=
 =?us-ascii?q?gH85g1AdfLWp0oEQaHyiHvRmPl+WYXzjgtoaFWcKvww+TPHliVGYUD5TYWqyUL?=
 =?us-ascii?q?w45j0hFI2mCoLDTJi3gLOdxCe7AoFWZmdeB1COFnfnaZ+IW/QLaCKUJM9hlScJ?=
 =?us-ascii?q?VbygS48nyBGvuxX2y7thLurI5CIYsYjv28Ry5+3WjRsy7yB7D9yB02GRSGF5hn?=
 =?us-ascii?q?kHRyQ23KB4okxx0E2D3rJ6g/FDEdxT5vVJUho1NJLGzux6DczyVRzFftuTVFmm?=
 =?us-ascii?q?RdCmCykrTt0t298Of1p9G9K6gxDAxSWqBaUZl7iKBJMu9KLc0GP8J8J8y3bAya?=
 =?us-ascii?q?kggEMqQspJNW26mKF/8xLfCJLOk0Wcj6yqb7gT3DbR9GefymqDpFxXXxRuUarb?=
 =?us-ascii?q?R3wfZlHZrdLi5kzcSb+iDrAnMghEyc6GMaZKbtzpjVNbRPbsItjeYmSxm3uuCh?=
 =?us-ascii?q?aM3L+DcI3qe2AF1iXHFEcEixwT/WqBNQUmGyiuuXzeAyJ0GVLveUzs9/J+p229?=
 =?us-ascii?q?TkIvywGKbkth16e6+xIPhPycTe8T0awAuCs7tzp0G1O91crMC9WcvwphYLlcYd?=
 =?us-ascii?q?Ql7Vdb1GLZsgt9PoCgL6FinFIebx57v0T01xVzC4VAl8cqoWguzApzL6KYzVxA?=
 =?us-ascii?q?eymZ3ZD2Jr3YNG3y8AqzZK7R31HUyMyW9bsX6PQkt1XjuxmkGVAm83p53NhazX?=
 =?us-ascii?q?ud6o/RAwoPTJ3+SEA39xt9p7HEeSQ944LU1XtxMai7qDPC2tQpBPc7xRakZdtQ?=
 =?us-ascii?q?LKSEFArqGc0AG8euMPAqm0Subh8cPOFS6bQ4MN+8e/qH2K6kJuBgnD29gGRD4Y?=
 =?us-ascii?q?B91F+M9iVmRu7J2ZYF3++X3g+dWzjgi1eht9j9mZpYajEKAmq/1S/kCZZLZq1z?=
 =?us-ascii?q?YYkEE32uLNCwxtlkgZ7iRWRY9F+6C1wawsCpfQedYELn3Q1X00QauninmSq+zz?=
 =?us-ascii?q?xpnDAltKuf3CrSw+v8cBoLIHJERG5njV30O4i7k8gaXFS0bwgujBak5Uf6y7Jb?=
 =?us-ascii?q?pahlNGnTXEFIcjPyL2FjVKuwq7WDb9RO6JMurSVYTuC8bUqGRb76phsQyznjEH?=
 =?us-ascii?q?dGxDAnazGqvY30nx5gh2KHL3Zzr33ZddtrxRjF59zcRv9R3jwYSyl+kjTXAlm8?=
 =?us-ascii?q?P9+0/dSbjZvDs+a+V36/WZ1XayXk0YSAtC6j721wHRK/h+yzmsHgEQUi0S70zd?=
 =?us-ascii?q?5qWT/KrBb9ZInmzKC6MeNhfkl1C17w8ct6GodikoQugJEcw2QVhpKQ/XAfi2f8?=
 =?us-ascii?q?Lc1b2b7ibHoKXTMLwMTa4An/1E1jM3KG3YT5VnqGz8tlZtm6ZH4W2y0n48BLDq?=
 =?us-ascii?q?eU8KJLnS9vrlWkqgLRZOB3ni0Bxvs29H4an+YJtRIoziWcAbAdB1NUPCLymBST?=
 =?us-ascii?q?89Cxsr9Xa32xfriq20pzhtShDLCEogFBV3f1YJYiHSls7sphNFLAymH86obheN?=
 =?us-ascii?q?PId9IcqgWUkwvcj+hSMJ8xiv0KhS99NWP8p3IlzfM7jQd13ZG7p4WHL2Rt/KSk?=
 =?us-ascii?q?Ah9XLDH1ZsUT+i3zgqZahMqZw4evHpB5EDURQJToVe6oEC4Vtfn/LAmBCjo8qn?=
 =?us-ascii?q?OGGbbFGQ+f9Vxrr3bOE5CtKnGWK2MVzdRkRBmBOkNfhBoYUyk9np48Dgqq3tDu?=
 =?us-ascii?q?cF9l5jAN4V71shlMxfhtNxbhSWfTvhuoZi03SJiCLxpW8wdC6F3OMcGF6uJzHi?=
 =?us-ascii?q?dY/oCurQCXK2ybYRhIAn8NWkCeG1/jObyu78Ha8+eEHuq+M+fOYbKWpO1eUPeI?=
 =?us-ascii?q?2Iuv0pZ88DaKLMmPJX5iD/s02kdYWXB5GsLZmygASiANliLNadKbqwm4+iFtss?=
 =?us-ascii?q?+/9/HrUhr15YSTE7tSLclv+xeujKeDKeGQhSV5KTVZ1p8Wxn/I0r8f3FEMhCF0?=
 =?us-ascii?q?ajmtCq8NtSrMTKLWh69WAAQXayJ1NMtU8a082hNBNtLcitPwzrR4lOI6C09ZVV?=
 =?us-ascii?q?z9ncGkfdYFI3ymO1PdGkmKNK6KJTnKw8zsZaO8SLtQjPhbthGquDabFVPjMSqH?=
 =?us-ascii?q?lzXzSx+vNuRMhjmBPBNCoIG9bgptCW/7QdL6ax27NcV7giEszbIohnPFK2gcPC?=
 =?us-ascii?q?N4c0NMqL2Q8CxZju9+G2xH8npqM+2ElzyF4OnfL5YcqeFrDThsl+JG/HQ6zKNY?=
 =?us-ascii?q?7SFeS/xznSvSr9hurEmnk+mP0DVnVhVOpy1PhIKKu0ViJKrY+oNBWXbC4BIC82?=
 =?us-ascii?q?GQBw4WqNtiD92885xXn/TCkqTyM39w89XJtZ8QCs7SKdmvM3c7NxftXjnOA11W?=
 =?us-ascii?q?YySsMDT9gFdQnrm4/3aUrdBuqJ/3lZQmVrhLVVctH/UWAwJuG9lUc8Q/ZS8tjb?=
 =?us-ascii?q?PO1J1A3nG5thSEAZwC5p0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAACkrv1bh0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMEYwIgg0UkjWEd4EkA0oUAQEYEwGHWiI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiQTBgEBNwEFCQEBChgJJQMMJQEFA?=
 =?us-ascii?q?RwGEwWDHIICAQSaUzyKHYFsM4J2AQEFhzEIEopfgRwXgX+DbjWKXJAZj3UJgiC?=
 =?us-ascii?q?PBSNfeoULgm6HOSyJQo4iAgQCBAUCBQ8hgSWCDTMaCBsVgyeCG4NtinEiMgGBA?=
 =?us-ascii?q?QMBASETjFIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0APAACkrv1bh0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMEYwIgg0UkjWEd4EkA0oUAQEYEwGHWiI0CQ0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmIBAgMBAiQTBgEBNwEFCQEBChgJJQMMJQEFARwGEwWDHIICAQS?=
 =?us-ascii?q?aUzyKHYFsM4J2AQEFhzEIEopfgRwXgX+DbjWKXJAZj3UJgiCPBSNfeoULgm6HO?=
 =?us-ascii?q?SyJQo4iAgQCBAUCBQ8hgSWCDTMaCBsVgyeCG4NtinEiMgGBAQMBASETjFIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="139819231"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 27 Nov 2018 12:56:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726554AbeK1HzT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 02:55:19 -0500
Received: from mail-yw1-f66.google.com ([209.85.161.66]:37345 "EHLO
        mail-yw1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726038AbeK1HzS (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 02:55:18 -0500
Received: by mail-yw1-f66.google.com with SMTP id h193so8523073ywc.4
        for <linux-kernel@vger.kernel.org>; Tue, 27 Nov 2018 12:56:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=toxicpanda-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=f8EayIIQWTFx0c37zWInHhP6HleJro5a8LupDFmxjB0=;
        b=pKeDYJBv2gbVoklzE6z8yMA0To5dT4sn5karSi/DmNZkxtnq/VlAL+HJM1Y4QcIgPM
         YzQtrxD9JPj2PPdNeKvZUdIUq3goWlacexWDbhzpbf0gSxUGGx5ciW2h4jdUe4ecGAhR
         Eb9FBYjvV8hBiS4Q8UiiWq36Q9qXbOm0S5b5isV3OUIxvsWeW2ov52gM0+w3jQ9iIz8Q
         RAiXt4Nurnhn0fwHs3M8Mc9ZOCe+7xzWV1fVjYDs3fdg/OqUph3Wdys8NFy1rdm0J0uo
         syo+wmDtlJzukrs7iAGUjyHpUwunL/F0+BueBXMgz0SC1VmIxBbVE8wdu5ao+07hPj0e
         Vh0w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=f8EayIIQWTFx0c37zWInHhP6HleJro5a8LupDFmxjB0=;
        b=BKSXNkiFDuX1BphhwCpdAgfBUCzJkPYAP9kU0pNYWO0yAGWOOEAJBBtQTA0PZmi/Vn
         4ZZSMfDRJFtQz6dDLzexIGCLh4JHW6ysRn9YEDZauSUfk3oESQCj2leuLpeEszfOAEQ0
         9I5Sf6LlSlhHimsTLC77IkcdNRj6YDndl37lESfZcddvF3P9hjJLKQb/Sz8TKV18SMXW
         rxZYwSUDzwsEo8+YOdttaUazfxXZ8Dx3E5VglNmLKjvPXOHDaTmkpucR89bn+CTB477Z
         KxTegV5Msj4P6ej3jOOXYPmCEd3j/3o99HqFoIXpN3IrwTpZnFubv2VqVBZyhfamR1uF
         2INg==
X-Gm-Message-State: AA+aEWaVMUVRkpy6S9YtV+EW/y5sU93/6R6GWk9Vqxp+OrA6vTZGTxPs
        9C0lSQISL91gaNHF3Eip+UDe/A==
X-Google-Smtp-Source: AFSGD/W0bKyed0AjabxO0fdpq/hC6lkj+e6gb/m/2k0fG0hUHuHSKpeEQWPnDZ9MK4kMDpLVqRzqWQ==
X-Received: by 2002:a81:3d12:: with SMTP id k18mr22364334ywa.38.1543352169518;
        Tue, 27 Nov 2018 12:56:09 -0800 (PST)
Received: from localhost ([2620:10d:c091:180::1:4c40])
        by smtp.gmail.com with ESMTPSA id k80sm1370680ywe.61.2018.11.27.12.56.08
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 27 Nov 2018 12:56:08 -0800 (PST)
Date: Tue, 27 Nov 2018 15:56:07 -0500
From: Josef Bacik <josef@toxicpanda.com>
To: Dennis Zhou <dennis@kernel.org>
Cc: Jens Axboe <axboe@kernel.dk>, Tejun Heo <tj@kernel.org>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Josef Bacik <josef@toxicpanda.com>, kernel-team@fb.com,
        linux-block@vger.kernel.org, cgroups@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH 02/13] blkcg: update blkg_lookup_create() to do locking
Message-ID: <20181127205606.762oz6kaoe2kfexv@macbook-pro-91.dhcp.thefacebook.com>
References: <20181126211946.77067-1-dennis@kernel.org>
 <20181126211946.77067-3-dennis@kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181126211946.77067-3-dennis@kernel.org>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Nov 26, 2018 at 04:19:35PM -0500, Dennis Zhou wrote:
> To know when to create a blkg, the general pattern is to do a
> blkg_lookup() and if that fails, lock and do the lookup again, and if
> that fails finally create. It doesn't make much sense for everyone who
> wants to do creation to write this themselves.
> 
> This changes blkg_lookup_create() to do locking and implement this
> pattern. The old blkg_lookup_create() is renamed to
> __blkg_lookup_create().  If a call site wants to do its own error
> handling or already owns the queue lock, they can use
> __blkg_lookup_create(). This will be used in upcoming patches.
> 
> Signed-off-by: Dennis Zhou <dennis@kernel.org>
> Reviewed-by: Josef Bacik <josef@toxicpanda.com>
> Acked-by: Tejun Heo <tj@kernel.org>
> Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
> ---
>  block/blk-cgroup.c         | 30 +++++++++++++++++++++++++++---
>  block/blk-iolatency.c      |  2 +-
>  include/linux/blk-cgroup.h |  4 +++-
>  3 files changed, 31 insertions(+), 5 deletions(-)
> 
> diff --git a/block/blk-cgroup.c b/block/blk-cgroup.c
> index 63d226a084cd..b1ec98eeeae0 100644
> --- a/block/blk-cgroup.c
> +++ b/block/blk-cgroup.c
> @@ -249,7 +249,7 @@ static struct blkcg_gq *blkg_create(struct blkcg *blkcg,
>  }
>  
>  /**
> - * blkg_lookup_create - lookup blkg, try to create one if not there
> + * __blkg_lookup_create - lookup blkg, try to create one if not there
>   * @blkcg: blkcg of interest
>   * @q: request_queue of interest
>   *
> @@ -262,8 +262,8 @@ static struct blkcg_gq *blkg_create(struct blkcg *blkcg,
>   * value on error.  If @q is dead, returns ERR_PTR(-EINVAL).  If @q is not
>   * dead and bypassing, returns ERR_PTR(-EBUSY).
>   */
> -struct blkcg_gq *blkg_lookup_create(struct blkcg *blkcg,
> -				    struct request_queue *q)
> +struct blkcg_gq *__blkg_lookup_create(struct blkcg *blkcg,
> +				      struct request_queue *q)
>  {
>  	struct blkcg_gq *blkg;
>  
> @@ -293,6 +293,30 @@ struct blkcg_gq *blkg_lookup_create(struct blkcg *blkcg,
>  	}
>  }
>  
> +/**
> + * blkg_lookup_create - find or create a blkg
> + * @blkcg: target block cgroup
> + * @q: target request_queue
> + *
> + * This looks up or creates the blkg representing the unique pair
> + * of the blkcg and the request_queue.
> + */
> +struct blkcg_gq *blkg_lookup_create(struct blkcg *blkcg,
> +				    struct request_queue *q)
> +{
> +	struct blkcg_gq *blkg = blkg_lookup(blkcg, q);
> +
> +	if (unlikely(!blkg)) {
> +		spin_lock_irq(&q->queue_lock);
> +
> +		blkg = __blkg_lookup_create(blkcg, q);
> +
> +		spin_unlock_irq(&q->queue_lock);

No extra spaces here please, otherwise you can add

Reviewed-by: Josef Bacik <josef@toxicpanda.com>

Thanks,

Josef
