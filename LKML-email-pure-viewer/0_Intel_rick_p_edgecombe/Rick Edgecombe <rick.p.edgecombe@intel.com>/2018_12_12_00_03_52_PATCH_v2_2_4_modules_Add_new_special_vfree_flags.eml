Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:58:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3BA7658079D;
	Tue, 11 Dec 2018 16:12:15 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 16:12:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A95IEYh3EHa10Y41YsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segeKfTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zict+g6BVoBK6vxxywZXZbJ2JOPdkYq/QZ88WSXZHU81MVyJBGIS8?=
 =?us-ascii?q?b44XAuQdPOZXs4r9rEYBoxSjCgmjGv/gyjhNhnDtw6IxzuMsERvH3AM8HNICqm?=
 =?us-ascii?q?zUoM/rO6gPXuC60rXHzTLGb/xNxzjw84nIchY9of6SWbJ8a9beyU4qFw7ciFib?=
 =?us-ascii?q?tI/rPyuN2+gTr2SW6/BsWf+hhmI5sQ19vzuiyts2hoTIhI8Z0k3I+CFnzIovJd?=
 =?us-ascii?q?C1SFR3bN66HJdKqi2WKZd6T8U/SG9yoik60KcJuZujcSgK1psnwxnfZuSZc4iH?=
 =?us-ascii?q?/B3jTvydITRmi3J/frKwmRKy/VKnyu3mWcm4yFdKrixbndnQrn0ByQDf58ydRv?=
 =?us-ascii?q?dg8EqtxyyD2x3Q5+1YO0w5lKjWJ4YkwrEql5oTtUrDHjXxmEXzlKKWckQk+u61?=
 =?us-ascii?q?6+Xoe7nmpYGTN5Vyig7gNqQig8u/AOo+MgcQRWiW4vq81LL98k3jWrlKjeM5kr?=
 =?us-ascii?q?PfsJ/EIcQXvKm5AxVa0oo78RawEy+m0MgEnXkANF9FfBOHj4v3NF3UL/H4EOyy?=
 =?us-ascii?q?g1CtkDdt2vDHMaftApTLLnjfjrjheaxx5FJbyAo21dpf/Y5bCqkdIPLvXU/8rN?=
 =?us-ascii?q?zYAQU4Mwyo2ennD89x1oMDWW2VBK+ZP7jfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxZEXcmy3Hux6I0WFZnrhmtUBEWAUsQYkT+zqj1uCUThUZ3upW6?=
 =?us-ascii?q?I85zc7CJ+pDIvZR4CthqCB0zm/HpFMem9GDVWMG2/yd4qYQ/cMdD6SIsh5nzMe?=
 =?us-ascii?q?TrihS4gh1RK0uA/g0bVnLPHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/9YGsZV5/9TVgc6NITTz+p1C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfsPcl91WjJ2L?=
 =?us-ascii?q?Mhj1Y8RMtPLnOphqh4+wjXBI7JlkGZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAw?=
 =?us-ascii?q?2FxreNbIrsZmUc0z/RCEkCkwAP43mGMRIyCTumo2LbFDZuD07gY1vw8elir3O2?=
 =?us-ascii?q?VlM0zwCPb01my7q1+h4UieaAS/8J2bIEoiMhqzRyHFayxN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUytnwqyBR9KK2G31JB?=
 =?us-ascii?q?bT+Xxo3wNaDNJWn0/xCvbLDW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXYykg54/OyXJgK6i1sj/Y1NIvC+so0RKgf9ZZ?=
 =?us-ascii?q?MKOZGw7+CcwaB86yKOM0n1ildA4LPOdX9KQsJcOpa+OG2LK3POZnhD+ml2VH75?=
 =?us-ascii?q?xn3UKW6iV8TfTE35AbzPGC3wuLTivzg02lss/qh49EfzYSHmykxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwXoHymgye5zy?=
 =?us-ascii?q?Z4kyo0rqqZxyHOx+XidBwaOm9EXmVijFHsIZSqgNAeRkSncw8plB6970bg26db?=
 =?us-ascii?q?vLh/L3XUQUpQfSj5NXtiUqiztrqFecJP84knsSZUUOS9Z1CVVLj9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iDnNCVi7?=
 =?us-ascii?q?JdWp/9SUl5HYv+C6VmKhUIBTcCbxwYOBsiu7+XNlARmlk/+vnd3nFBAw0TXn2N?=
 =?us-ascii?q?lySSXIsBH8b5Ho16ugMOJrZEloBELm5Mp8FYFziY8whJAW2XgHiZSZ53sHkWHv?=
 =?us-ascii?q?MdpF3aLydmYCRTkOw9TN+gjqxFVjLm6Vx4L+Tnidx8phZ9qgbW8M1CMy8dtKCL?=
 =?us-ascii?q?uK47xehiR6vEC4rQ3KbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJindCmCbGOuABdV2z/epc/Bi9w9cR/PUnI0H3y7IHkZd?=
 =?us-ascii?q?bRYcgSth2SjxfPkexVJIgtmfoNgCptIXj9smE9y+4nkRxu2om3s5OdJGVq+KK5?=
 =?us-ascii?q?HwRUNjnoZ84I/jHtjKBentuZ3oy1H5VhHCkLU4XsTf6yDD0SsvHnPR6UEDIgsn?=
 =?us-ascii?q?ebBabfHQiH5UdktX3PFo6kN2qNKHkF19liRwSdJE9CgAASRjo6hYU0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKcyf7uVuHy?=
 =?us-ascii?q?FB452utgqNJnaAZwRPC2EJVVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpDUm54G8TamDUPSjYblyHXb86cqxez5Dd3rt?=
 =?us-ascii?q?2k8PnwXALv5I2PC6ZdMNl1+hC2h7uDOPCUhCpjNTlY0ZYMz2fSyLcDxF4Slz1u?=
 =?us-ascii?q?dz61HLsaqC7CV7jQlbFXDhIBbyNzNdBF76Y93glLJM7ahcn51r9+jv4pFVhFUU?=
 =?us-ascii?q?btld2uZcwPO2u9Lk/IBF6XNLSaIj3G2933YaK5SbFKkOpYrQG/uTaFHE/lJTmD?=
 =?us-ascii?q?kzjpVxayMeBDli2bPRpeuJ2jfRZpE2TsUNXmahijOt9tkTI22aE0hm/NNWMEMT?=
 =?us-ascii?q?lzaUVNrriR7SNemvp+GmxB4WBjLemLgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC6B5uJp9liliuynzjthTQoLpDFWgo6CoURlP+Pe7JYEEXLZ4BUl7m?=
 =?us-ascii?q?iKDRkO4dx/BZmnpKFUzp7Dmav4LzFq+sjRu8AbAoycLMOBLWpkNB/BGyDdBwhD?=
 =?us-ascii?q?SiSkcSnbhkpAgLSR+2eTo5wStJfhgtwNR6VdWVhzEekVTgxmEcYELZMyXjo+nb?=
 =?us-ascii?q?OdjcgHzX6/twXKAsJCs5bYX/aWR/7oLXLRi7BaahYOh7W+N40UHon63VFyLEd8?=
 =?us-ascii?q?kZiMGkDVG9tKp2kpZwk1pANWtntzVW06xUvgdxmx4G47FPiokxpwgQx7Jawh/S?=
 =?us-ascii?q?nh5n87L0THoS83nlV3n9j5xXiUcD/rJaK5QalVBjDyukx3NYn0B05vahaukEB4?=
 =?us-ascii?q?HDjDQL5UjqAmcnpkzEfZuJ1AHtZGQKFEaQNWzvaSI70hykh0qSi9w0JDo+zfBt?=
 =?us-ascii?q?8qmAIscJOoh3NH1A9qdtQyNerWKbYNhlpdl7+mvSKy0O01hggEKAJF9mqXeTIg?=
 =?us-ascii?q?pkkXP6MrYSGv+6gk7wGelzZdUHYDWuBsof9w8E45feOawGao2qRPbEqwOvefIr?=
 =?us-ascii?q?6Htmzokc+OS0k3kEQSmA0N/7Fw18cLfE2TWEQiirCWEkcnL83HfDtUZMka2XTc?=
 =?us-ascii?q?cC2JtO/AicZvPo6+UPiuQOOBua0Th0ipNAcvA4kIqM8GG8//gwnjMc77Ietdml?=
 =?us-ascii?q?0W7wPxKQDdAQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AhAADyURBch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBSMEimBPzmXPoFzFBgTAYcuIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkvgjYigmUDAwECJFIGCQEBUANUBxIFgxyCAgWnBjOEAQGGLId8hD96g?=
 =?us-ascii?q?RyBETONOwKJO4cBkD8HAoImjyALGJFAiSONHoJygUaCDk0jgzyCJxeNZlgeAQE?=
 =?us-ascii?q?xAYEEAQGKZAEB?=
X-IPAS-Result: =?us-ascii?q?A0AhAADyURBch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBSMEimBPzmXPoFzFBgTAYcuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYig?=
 =?us-ascii?q?mUDAwECJFIGCQEBUANUBxIFgxyCAgWnBjOEAQGGLId8hD96gRyBETONOwKJO4c?=
 =?us-ascii?q?BkD8HAoImjyALGJFAiSONHoJygUaCDk0jgzyCJxeNZlgeAQExAYEEAQGKZAEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="66395448"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 11 Dec 2018 16:12:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726303AbeLLAML (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 19:12:11 -0500
Received: from mga04.intel.com ([192.55.52.120]:56048 "EHLO mga04.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726211AbeLLAMJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 19:12:09 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
  by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 16:12:08 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="282839403"
Received: from rpedgeco-desk5.jf.intel.com ([10.54.75.141])
  by orsmga005.jf.intel.com with ESMTP; 11 Dec 2018 16:12:07 -0800
From: Rick Edgecombe <rick.p.edgecombe@intel.com>
To: akpm@linux-foundation.org, luto@kernel.org, will.deacon@arm.com,
        linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        kernel-hardening@lists.openwall.com,
        naveen.n.rao@linux.vnet.ibm.com, anil.s.keshavamurthy@intel.com,
        davem@davemloft.net, mhiramat@kernel.org, rostedt@goodmis.org,
        mingo@redhat.com, ast@kernel.org, daniel@iogearbox.net,
        jeyu@kernel.org, namit@vmware.com, netdev@vger.kernel.org,
        ard.biesheuvel@linaro.org, jannh@google.com
Cc: kristen@linux.intel.com, dave.hansen@intel.com,
        deneen.t.dock@intel.com,
        Rick Edgecombe <rick.p.edgecombe@intel.com>
Subject: [PATCH v2 2/4] modules: Add new special vfree flags
Date: Tue, 11 Dec 2018 16:03:52 -0800
Message-Id: <20181212000354.31955-3-rick.p.edgecombe@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181212000354.31955-1-rick.p.edgecombe@intel.com>
References: <20181212000354.31955-1-rick.p.edgecombe@intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add new flags for handling freeing of special permissioned memory in vmalloc,
and remove places where the handling was done in module.c.

This will enable this flag for all architectures.

Signed-off-by: Rick Edgecombe <rick.p.edgecombe@intel.com>
---
 kernel/module.c | 43 ++++++++++++-------------------------------
 1 file changed, 12 insertions(+), 31 deletions(-)

diff --git a/kernel/module.c b/kernel/module.c
index 49a405891587..910f92b402f8 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1941,11 +1941,23 @@ void module_disable_ro(const struct module *mod)
 	frob_rodata(&mod->init_layout, set_memory_rw);
 }
 
+static void module_set_vm_flags(const struct module_layout *layout)
+{
+	struct vm_struct *vm = find_vm_area(layout->base);
+
+	if (vm) {
+		vm->flags |= VM_HAS_SPECIAL_PERMS;
+		vm->flags |= VM_IMMEDIATE_UNMAP;
+	}
+}
+
 void module_enable_ro(const struct module *mod, bool after_init)
 {
 	if (!rodata_enabled)
 		return;
 
+	module_set_vm_flags(&mod->core_layout);
+	module_set_vm_flags(&mod->init_layout);
 	frob_text(&mod->core_layout, set_memory_ro);
 	frob_rodata(&mod->core_layout, set_memory_ro);
 	frob_text(&mod->init_layout, set_memory_ro);
@@ -1964,15 +1976,6 @@ static void module_enable_nx(const struct module *mod)
 	frob_writable_data(&mod->init_layout, set_memory_nx);
 }
 
-static void module_disable_nx(const struct module *mod)
-{
-	frob_rodata(&mod->core_layout, set_memory_x);
-	frob_ro_after_init(&mod->core_layout, set_memory_x);
-	frob_writable_data(&mod->core_layout, set_memory_x);
-	frob_rodata(&mod->init_layout, set_memory_x);
-	frob_writable_data(&mod->init_layout, set_memory_x);
-}
-
 /* Iterate through all modules and set each module's text as RW */
 void set_all_modules_text_rw(void)
 {
@@ -2016,23 +2019,8 @@ void set_all_modules_text_ro(void)
 	}
 	mutex_unlock(&module_mutex);
 }
-
-static void disable_ro_nx(const struct module_layout *layout)
-{
-	if (rodata_enabled) {
-		frob_text(layout, set_memory_rw);
-		frob_rodata(layout, set_memory_rw);
-		frob_ro_after_init(layout, set_memory_rw);
-	}
-	frob_rodata(layout, set_memory_x);
-	frob_ro_after_init(layout, set_memory_x);
-	frob_writable_data(layout, set_memory_x);
-}
-
 #else
-static void disable_ro_nx(const struct module_layout *layout) { }
 static void module_enable_nx(const struct module *mod) { }
-static void module_disable_nx(const struct module *mod) { }
 #endif
 
 #ifdef CONFIG_LIVEPATCH
@@ -2163,7 +2151,6 @@ static void free_module(struct module *mod)
 	mutex_unlock(&module_mutex);
 
 	/* This may be empty, but that's OK */
-	disable_ro_nx(&mod->init_layout);
 	module_arch_freeing_init(mod);
 	module_memfree(mod->init_layout.base);
 	kfree(mod->args);
@@ -2173,7 +2160,6 @@ static void free_module(struct module *mod)
 	lockdep_free_key_range(mod->core_layout.base, mod->core_layout.size);
 
 	/* Finally, free the core (containing the module structure) */
-	disable_ro_nx(&mod->core_layout);
 	module_memfree(mod->core_layout.base);
 }
 
@@ -3497,7 +3483,6 @@ static noinline int do_init_module(struct module *mod)
 #endif
 	module_enable_ro(mod, true);
 	mod_tree_remove_init(mod);
-	disable_ro_nx(&mod->init_layout);
 	module_arch_freeing_init(mod);
 	mod->init_layout.base = NULL;
 	mod->init_layout.size = 0;
@@ -3812,10 +3797,6 @@ static int load_module(struct load_info *info, const char __user *uargs,
 	module_bug_cleanup(mod);
 	mutex_unlock(&module_mutex);
 
-	/* we can't deallocate the module until we clear memory protection */
-	module_disable_ro(mod);
-	module_disable_nx(mod);
-
  ddebug_cleanup:
 	ftrace_release_mod(mod);
 	dynamic_debug_remove(mod, info->debug);
-- 
2.17.1

