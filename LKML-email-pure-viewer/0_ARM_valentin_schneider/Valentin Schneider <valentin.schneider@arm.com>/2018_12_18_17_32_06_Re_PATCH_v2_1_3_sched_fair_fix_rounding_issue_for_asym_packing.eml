Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:41:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F33D55805CF;
	Tue, 18 Dec 2018 09:32:35 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 18 Dec 2018 09:32:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A3mHzWBJwVD6scU1eudmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULP34rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVsVtRuzBxKhBP/txzJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModr6LqgSVf66zK/UzTXCafNdxCrz55TIchAnv/6MXK9/ftTLyUIyEA7FkE+f?=
 =?us-ascii?q?qYj7MDOTyuQNsm6b4/B7Ve2zi24nrR9+ojmyycgykInEnZgaykrB9Slj3Ik1It?=
 =?us-ascii?q?i4RVd9bNW5HpVQsCSaOJF3QsMkW2xotyc6yqEGuZ6mZycG0ogoxxnaa/GBboOG?=
 =?us-ascii?q?4QrjWf6PLTtkgH9pYq+zihis/US61+HxVdW43ExLoydHitXAqG0B2h7J5sSaRf?=
 =?us-ascii?q?Zx4l2t1SuT2wzO8O1JI1w4mKzGIJA72LEwjIAcsUHbEy/2hkr2iKiWe106+uin?=
 =?us-ascii?q?9evneK/qppyCOI9ujAHxLKAulta4AeQiPQgCR2mb+eKi273/5UD1XqlGg/ksnq?=
 =?us-ascii?q?XEvp3WO94XqrO6DgNJyIou6hSyAy+j0NsCnHkHKFxFeAiAj4jsI1zOJPH4DfGi?=
 =?us-ascii?q?g1WjiTtrxO7JPqfnAprTKnjPibDhfLh760FC0go+1s5f551KBbEbOv7zWVH+tM?=
 =?us-ascii?q?beDhAnNwy42eHnCM9y1o8GQ2KAHreZML/OsV+P/u8vJ+iMZIwLtzrnJPkl+uXj?=
 =?us-ascii?q?jXs4mV8bYKmo0oEbaHG+HvR6PUqZZWDgjcsGEWcPpgA+VvDliEWeUT5PYHa/R6?=
 =?us-ascii?q?I86Ss6CIK6F4jDQZqhgLyc3CihGJ1WaXtLClSNEXfuaoWFVO0AaCOUIs99jDME?=
 =?us-ascii?q?UaKtRJMm1RGrrAX60aZoLvLI+i0EspLuzNp15+rNmh0o9jx0CMKd02eKT2xvmm?=
 =?us-ascii?q?MIRjk23L1woEBny1eD17R4jOJcFdBJ+/xJVQI6P4bGz+NmE9DyRh7BftCRRVm8?=
 =?us-ascii?q?WdWmATYxTtErz98UeUl9Gc6vjhTC3yqsHr8UmKaHBJ0y8qLAwXfxI9xxxGrB1K?=
 =?us-ascii?q?kkl1MmWNdANXW6hq5j8AjeH43JnF+fl6qwcaQc3TTC9GGMzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPaBEgAkAAT+HKGOBM6BiegpWLeETNvGUjuY0Pq7elxtne7?=
 =?us-ascii?q?QlUowAGNak1rz6C19QINhfyAV/MT2aoJtzo7pDVqAlmxxdLWBMCGpwp6YqpcZ8?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?by+Y3ZH1Or3QNmny/BCuZ7TK2l3E19aW4KMP6PU+q1XspwypEksi83N609hayX?=
 =?us-ascii?q?ec55PKDBYMXpL1SEo46x96p7TCaCkn+4zUzWFsMbWzsjLawd0pAPUqyxm+cNZf?=
 =?us-ascii?q?Kq+LDxLyHNAACMioK+wqnEapYwkAPOBT8q40Isyne+GH2K6tIOZvgjamgX5b74?=
 =?us-ascii?q?B610KG7zB8RfLQ35YZ3/GY2ROKVjfhjFu7rs/7g4FFZTEIEWq5xijpH4pRZqx0?=
 =?us-ascii?q?fYYWBmaiOcy3xtNih5HzX35U7kKsB1QD2MWxYxqdc0T93RFM1UQQuXGngyq4wC?=
 =?us-ascii?q?BunDEzs6Wf2zbCw+L8exodO25HXXVtgk3oIYepkd8aRk+obw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b9ohsbyS/iH3?=
 =?us-ascii?q?FSxCsmdzGsoZj5mx16iGSALHd8tnbZeMdwxQvB69zYX/Jewj0GRCxggznNGle8?=
 =?us-ascii?q?J8Wp/cmTl5rbsOCxTXihVp5QcSns14+ArzG05W5pAR2+mfC8hNvnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Hodnmf0?=
 =?us-ascii?q?K9lb26P+bHwWSD4Pwt7V5hXl2UJ5InKIwYL5SmuSws97a9amZWMW3zo379pWB6?=
 =?us-ascii?q?eM8LxEgSx1r0K7rQ3LYPhxhDcdyeY0534cjOEEow4tziSbArAPEkhUJy3slxKU?=
 =?us-ascii?q?79+gqKVbfnqgcb+11EBmh9CuEKmCoh1AWHb+YpoiGC5w7sZlP17W3nz89JrkeM?=
 =?us-ascii?q?XOYtIJrRKbjQ3Aj+dOJZI1l/oKgzdnOG3nsX0kze47kQJh3ZWgsIebLGVt+bqz?=
 =?us-ascii?q?AgREOT3te8MT5jbtgL5CnsaR2oCjBJRgFS8NXJv1VvKoCzMSuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03kYUjGQCtwMzh?=
 =?us-ascii?q?bV115jQM5lPjrhtMy+RoNwTwU2vFpQeobCs0R4abLBZM8g5C4ELVO9SE7u1vBy?=
 =?us-ascii?q?FY4oGhrAuVJ2yZfQtICH8GWleeC1D/JLWu5sTA8+uFBuq4NfTOeq6DqehfV/eO?=
 =?us-ascii?q?2JKu3ZFq/zeKNsWTIHZiC+c31VZEXXB8A87ZgSkASzQLlyLRaM6WvBe9+ipqrs?=
 =?us-ascii?q?Cm7fTkQgTv6ZGUC7tVN9Vv9Au7gaOCN+6WmSZ4JixU1pIKxX/U1rcf2EQehD1p?=
 =?us-ascii?q?dzmoCb4ArzLCTLrMmq9LCB4WcyNzO9VJ76I/3QlNONTXitDv1r5/gf46FU1FVU?=
 =?us-ascii?q?H6msyyYcwKIme9NE7IBUqRNbSGIyHLzN/zYa+mVbJQi+BUvQWquTmHC0/jIiiD?=
 =?us-ascii?q?lz7xWh+1LOFDlzubMwJeuY2ndhZtCHPuTNbnah29Ld92gic6wbwyhnPWK2EcNS?=
 =?us-ascii?q?JwfF9Krr2V9SlYmOlwG3Rd7np5KumJgzqZ7+jdKpoMrfRnGDh7l+JE73Q80LZV?=
 =?us-ascii?q?6CBERPpomCrdtNJuolemkvWRxTpjShZBtjFLhIeTt0V4JarZ7oVAWWrD/B8V7W?=
 =?us-ascii?q?SfERIKp95kCt3po69Ry9jPm7j1KDdN6N/U+cocB87JKMOIKnYhMBzpGCLKAwsB?=
 =?us-ascii?q?VzKkKWbfh0kO2M2Vo0OUqJM3rISkt4cPVqNcSBRhCPIcAUljAJoNPZZrQjQ4ub?=
 =?us-ascii?q?qaiscS4jy5thaHAI1Cs4zKTOC6APPhMj+VgLBIIRwSzvewKIUVOYrT2EF4bFR+?=
 =?us-ascii?q?2oPQFA6YWdFLvz0kbQIupkhJ2GZxQ3d12E//bA6ppngJGq2ahBkz3zV3Zekr6D?=
 =?us-ascii?q?bqq2w8JlzHpSc9igFlh9zhjDaNcTi3N6ywW4xXByfun0ErN9XwRAMjPl76plBt?=
 =?us-ascii?q?KDqRH+EZtLBnb20+zVaE4ZY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CaAQDtLhlch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYJqgQIng3yUFIFgCCUUmTktCwgBhx0iOBIBAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pIwyCNiQBgmEBAQEBAgEBAgsVBD4UBgkBAQoYAgImAgIDVAYBDAYCAQEBgx0Bg?=
 =?us-ascii?q?XgIBAEKp1p8M4QtAYEShGkFgQuLNIFXP4E4DIIqNYMeAoRpglcCkBmRCwcCgiU?=
 =?us-ascii?q?EhGaKSx6KB4dQiUSEd40VgXdNI4M8gicXg0qKUz8BATEKewEBjWABAQ?=
X-IPAS-Result: =?us-ascii?q?A0CaAQDtLhlch0O0hNFkHAEBAQQBAQcEAQGBZYJqgQIng3y?=
 =?us-ascii?q?UFIFgCCUUmTktCwgBhx0iOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBA?=
 =?us-ascii?q?QEBAgEBAgsVBD4UBgkBAQoYAgImAgIDVAYBDAYCAQEBgx0BgXgIBAEKp1p8M4Q?=
 =?us-ascii?q?tAYEShGkFgQuLNIFXP4E4DIIqNYMeAoRpglcCkBmRCwcCgiUEhGaKSx6KB4dQi?=
 =?us-ascii?q?USEd40VgXdNI4M8gicXg0qKUz8BATEKewEBjWABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,368,1539673200"; 
   d="scan'208";a="44538238"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 09:32:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727283AbeLRRcJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 12:32:09 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:50464 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726812AbeLRRcJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 12:32:09 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id ED4A3A78;
        Tue, 18 Dec 2018 09:32:08 -0800 (PST)
Received: from [10.1.194.37] (e113632-lin.cambridge.arm.com [10.1.194.37])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 084723F5C0;
        Tue, 18 Dec 2018 09:32:07 -0800 (PST)
Subject: Re: [PATCH v2 1/3] sched/fair: fix rounding issue for asym packing
To: Vincent Guittot <vincent.guittot@linaro.org>, peterz@infradead.org,
        mingo@kernel.org, linux-kernel@vger.kernel.org
Cc: Morten.Rasmussen@arm.com
References: <1544803317-7610-1-git-send-email-vincent.guittot@linaro.org>
 <1544803317-7610-2-git-send-email-vincent.guittot@linaro.org>
From: Valentin Schneider <valentin.schneider@arm.com>
Message-ID: <f2619d92-7367-abd4-97e8-e0f4e7cc96eb@arm.com>
Date: Tue, 18 Dec 2018 17:32:06 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <1544803317-7610-2-git-send-email-vincent.guittot@linaro.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 14/12/2018 16:01, Vincent Guittot wrote:
> When check_asym_packing() is triggered, the imbalance is set to :
> busiest_stat.avg_load * busiest_stat.group_capacity / SCHED_CAPACITY_SCALE
> busiest_stat.avg_load also comes from a division and the final rounding
> can make imbalance slightly lower than the weighted load of the cfs_rq.
> But this is enough to skip the rq in find_busiest_queue and prevents asym
> migration to happen.
> 
> Add 1 to the avg_load to make sure that the targeted cpu will not be
> skipped unexpectidly.
> 
> Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
> ---
>  kernel/sched/fair.c | 6 ++++++
>  1 file changed, 6 insertions(+)
> 
> diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
> index ca46964..c215f7a 100644
> --- a/kernel/sched/fair.c
> +++ b/kernel/sched/fair.c
> @@ -8215,6 +8215,12 @@ static inline void update_sg_lb_stats(struct lb_env *env,
>  	/* Adjust by relative CPU capacity of the group */
>  	sgs->group_capacity = group->sgc->capacity;
>  	sgs->avg_load = (sgs->group_load*SCHED_CAPACITY_SCALE) / sgs->group_capacity;
> +	/*
> +	 * Prevent division rounding to make the computation of imbalance
> +	 * slightly less than original value and to prevent the rq to be then
> +	 * selected as busiest queue
> +	 */
> +	sgs->avg_load += 1;

I've tried investigating this off-by-one issue by running lmbench, but it
seems to be a gnarly one.



The adventure starts in update_sg_lb_stats() where we compute
sgs->avg_load:

	sgs->avg_load = (sgs->group_load*SCHED_CAPACITY_SCALE) / sgs->group_capacity

Then we drop by find_busiest_group() and call check_asym_packing() which,
if we do need to pack, does:

	env->imbalance = DIV_ROUND_CLOSEST(
		sds->busiest_stat.avg_load * sds->busiest_stat.group_capacity,
		SCHED_CAPACITY_SCALE);

And finally the one check that seems to be failing, and that you're
addressing with a +1 is in find_busiest_queue():

	if (rq->nr_running == 1 && wl > env->imbalance &&
	    !check_cpu_capacity(rq, env->sd))
		continue;



Now, running lmbench on my HiKey960 hacked up to use asym packing, I
get an example where there's a task that should be migrated via asym
packing but isn't:

# This a DIE level balance
update_sg_lb_stats(): 
	cpu=0 load=1
	cpu=1 load=1023
	cpu=2 load=0
	cpu=3 load=0

	avg_load=568

# Busiest group is [0-3]
find_busiest_group(): check_asym_packing():
	env->imbalance = 1022

find_busiest_queue():
	cpu=0 wl=1
	cpu=1 wl=1023
	cpu=2 wl=0
	cpu=3 wl=0

Only CPU1 has rq->nr_running > 0 (==1 actually), but wl > env->imbalance
so we skip it in find_busiest_queue().

Now, I thought it was due to IRQ/rt pressure - 1840 isn't the maximum
group capacity for the LITTLE cluster, it should be (463 * 4) == 1852.
I got curious and threw random group capacity values in that equation while
keeping the same avg_load [1], and it gets wild: you have a signal that
oscillates between 1024 and 1014!

[1]: https://gist.github.com/valschneider/f42252e83be943d276b901f57734b8ba

Adding +1 to avg_load doesn't solve those pesky rounding errors that get
worse as group_capacity grows, but it reverses the trend: the signal
oscillates above 1024.



So in the end a +1 *could* "fix" this, but
a) It'd make more sense to have it in the check_asym_packing() code
b) It's ugly and it makes me feel like this piece of code is flimsy AF.

>  
>  	if (sgs->sum_nr_running)
>  		sgs->load_per_task = sgs->sum_weighted_load / sgs->sum_nr_running;
> 
