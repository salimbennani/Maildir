Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:29:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D178E58037D;
	Thu, 22 Nov 2018 08:47:50 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 08:47:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8S0O7xFLHWbgJI8y9095F51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osm5bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YYgNAOoPIOhXoJXyqVQPrRW5GQmsH/vvxz1Ti3/q36A1z/gtHBva0AEiGd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27y7PHzSnDb/NXxzj99ZXDfB4/rvGXW7JwdsrQxlc1FwPek16d?=
 =?us-ascii?q?ronlMCmJ1uQNsmiU8fdgWfiyhGE5sAFxpD+vx8cyhYnTnYIY0U7L9St3wIY0Od?=
 =?us-ascii?q?K4SUl7YcW+HJRMsCGaMpJ7T8U/SG9mvyY6z6cJuZ+9fCUS1psnyRDfa/2bfIiJ?=
 =?us-ascii?q?5RLjT/ydLit/hHJgfr+0mhW88VC4x+HiSsW51ExGojdLn9XSrHwByh/e5tSdRv?=
 =?us-ascii?q?Z8/EqtwSuD2gHR5+1ePEw4iKXWJ4Q8zrM/iJYfq1nPEyH1lUjwkaSYbF8r+vKy?=
 =?us-ascii?q?5OTierjmpoGTN4tzigzmLKQuldKwAf4iPggNQWeb4+K826Pn/UHjR7VKlPI2nr?=
 =?us-ascii?q?HYsJDcO8sbura0DxFJ3osn8RqzEjmr3MoCkXUaL19JZAiLgonrNl3WJfD3F/a/?=
 =?us-ascii?q?g1CikDdxwPDGO6XsApHMLnjFjbfgcq9x601Cxwopy9BQ+ZZUBqgGIPP9XE/+qs?=
 =?us-ascii?q?bYAwQnMwy73ennEs9x1oAAVmKVBK+WLqfSvUWP5uI1LOmAfJUVtyrlK/g5+/7u?=
 =?us-ascii?q?imc0mVscfamqw5Qbcn+5Hul9LkWdYHrshMoBEGgQsgo/SuzqlEONUTpJa3muWK?=
 =?us-ascii?q?I84ykxCJi6AofbWoCtnLuB0T+7HpJMZ2BGFkqDEXDye4WERvcDciSSIsB6nzwA?=
 =?us-ascii?q?VLihTZIh1B60uA/7zbpnMvTb+ikCuZ3/09h14vXZlQsu+jxsE8Sdz2aNQnl2nm?=
 =?us-ascii?q?MPWTA6xqN/oUt7yleF1qh1mPhYFd1V5/NUXQY2L5/cz+pmC9/sXgLNZMuGSFGj?=
 =?us-ascii?q?Qt++GzE+Usoxw8MSY0Z6A9itlAvD3yqtA78WjbCLHoY78qDH0nj1JsZ9zWvG1a?=
 =?us-ascii?q?Y7g1knRMtPKXOphqpl+wfPAI7Jll2Tl7y2eqQEwC7N6GCDwHKNvE5CVg58S6HF?=
 =?us-ascii?q?XXEFaUvQotT0/UfCT76oCbQ6PQpN08+CKq1WatL3iVVKXuvsONPbY2ipgWe/GQ?=
 =?us-ascii?q?6Ixq+QbIrtY2gSwT/SCFYanAwJ/XaJLw4+Bjy/rGLYCzBuEVHvY0bo8eRlrHO7?=
 =?us-ascii?q?T0k0zxyFbkF71rq1/AIViuKYS/8Jwr0EvyIhoS1uHFmhx9LWF8aApw15capBe9?=
 =?us-ascii?q?w9/klI2XjZtwNnOJygNL5thlgFfgRzvkPu0Qh3C4pancgrqnMq0BR9KaaC3Fxd?=
 =?us-ascii?q?cDOY2Ij6OqfLJWnq4BCvd6nW10nC0NaX/6cP7+g4q1XjvQ2zCkou6XJn08NR03?=
 =?us-ascii?q?ud4JXKAxEfUZbwUkYx6hh7qKvWYig754PIy3JsNbO4vSPF29IsHOEl0Aqvf89D?=
 =?us-ascii?q?MKOYEw//C9cVB8ywJ+0lhVeobggIM/tP9KEpJcymcfiG2Km1POt7mDKmjGJH4J?=
 =?us-ascii?q?1y006W9ip8TPLI0IgBw/2CwgSHUDL8hk+7ss/rgYBEeS0SHm2nxCnkGY5dfLF9?=
 =?us-ascii?q?cZwKCGeuOcK3wNp+ioXpW35Z8l6jGlwH1NWoeRqUc1zywwlQ2V4LrnygnCuy1y?=
 =?us-ascii?q?Z0nC0xrqqDwCzOxPzvdAAGOmFXXmZil0rjIY+ug9AcQkeodQkpmAK56kngw6hU?=
 =?us-ascii?q?ubpwL3PUQUdOZCX2K2BiUq2ttruNecJP6ZUosTlJX+S4e1yVVrn9ox4C2SP5A2?=
 =?us-ascii?q?Re3Cw7dy2tupjhnx16iXiRLXZpoHrCZMFwwwzS5NjdRf5XwzoHSzN0iTjRBlig?=
 =?us-ascii?q?Idap+c+YmIvEsuC7T2ihTIFccTH3zYOcsyu2/W9qDgeln/Cwmd3nFhI20TTh2N?=
 =?us-ascii?q?lpViXIrRD8bZft16mhNeJnf09oBELz6sZgG4F+lJcwi48U2XQAmpqV+n8Hm3/p?=
 =?us-ascii?q?MdpHwaL+cGYNRTkTzt/V+gfl31dvLnCIx4L/TXidxsphZ9+nYmIZwC497sZKCL?=
 =?us-ascii?q?uK47xAhyd6vl24rQfJa/hngjgd0ecu6GIdg+wRuwoi1CSdDqoSHUlFJyPskRuI?=
 =?us-ascii?q?4su6rKVWYmavbLex2FB/ndCnELGNvAVcVGzldZclGC969t9/P07U0H3v9oHkf8?=
 =?us-ascii?q?HdbdcSth2XiRjMleZUJ4wqlvoWmyVnI3nysmM/y+40lhFu2ZC6vI6aK2Ri5q65?=
 =?us-ascii?q?AxhYNiHraMMX4D3ikaFensOO1YC1ApphAikLXIfvTf+wDDISsvHnOxyPETImrH?=
 =?us-ascii?q?ebBKHfHRSe6Ep9q3LPEparN2yYJXUDzNViQgWdK1JbgAwOQDo6mZs5HBiwxMP9?=
 =?us-ascii?q?aEd5+iwR5lngpxRX0O1oMB3/UnrFqAesdzc5U5yfLBtQ7gFf6EbZK82e7uRvHy?=
 =?us-ascii?q?5G+p2tthCCKmueZw5QF2EGRlSEB0z/Prmp/dTA8fKXBu+gIPvVe7mOtfZSV/SV?=
 =?us-ascii?q?xZKsz4tm+SyDNt6UM3lmDv073FdDXH9jF8TYnTUPVzIYlybXY8GHoxe8/zV9rt?=
 =?us-ascii?q?qj//TzRALv+YyPBqNSMNVo5hC2mLqDOPSWhCpjMjZY0ZUMxXDTxbgb3V4SjTxu?=
 =?us-ascii?q?dja3HbQBsy7NULzfmqtNAxEHbCNzMdNC77gg0QlVJc7bltT126Z4jvErCldFVl?=
 =?us-ascii?q?/hmsCzacwJOWG9M1zHC1iRNLSbPj3G2MX3YaK6Sb1Ng+RYrRywuTCHE0D9OjSP?=
 =?us-ascii?q?jSXmVxeqMetUliGUIAReuJ2hchZqEWXsVs/mZQahMNBpjTw627k0hnLROG4YMD?=
 =?us-ascii?q?h8dV5Nr7KK4SNZhPV/B3JO7n5/IeaYnCaZ6vHSKowKvvtzHiR0i+Va7Wwmy7tU?=
 =?us-ascii?q?6SFIXuB6lDHOod5uvV6mlPKCyj5mUBpItzZKi5iHvURkOaXF6JZAXWzI8w4K7W?=
 =?us-ascii?q?WVEx4KvcdqCsXzu6BMzdjCjKLyJy1E89LR/MscAdDbKcOHMHU7NxrpFyXZDA8E?=
 =?us-ascii?q?TT6tKGHeiFZRkPCU9n2JsJc6roLgl4YJSr9eBxQJEaY0DkN/HdUEaKh6XzYpi/?=
 =?us-ascii?q?bPgtEF5H+ztjHLSclat4yBXfWXV6bBMjGc2JxNexsJzK6wAYkIMIrq1lZ5Ig1/?=
 =?us-ascii?q?lZjKGkfNG9xAuStmfwIuu21A/nZ/RWw0wATubQb7syxbLuK9ghNj0lg2Wu8q7j?=
 =?us-ascii?q?q5pg5vflc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DfAQAF3fZbh0O0hNFiHgEGBwaBZYExK?=
 =?us-ascii?q?oEPgQInCoNuiHeLIoFoJRSZGSwHDAGIUiI4EgEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDII2JAGCYgECAgEBAiAdAQETJAEEAQkBAQEBCA4MAg0ZAgIDVAIEEwWDHAGBe?=
 =?us-ascii?q?QgBBKgycIEvgnYBAQWHGgiBC4p+gVc/gUSCKjWEOoNIgleJASCBcoRLNI9yBwK?=
 =?us-ascii?q?CHASPJ5EImVY3gXZNI4M8CYISNW0BDII+inBUgQIDAQEhE4sBAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0DfAQAF3fZbh0O0hNFiHgEGBwaBZYExKoEPgQInCoNuiHe?=
 =?us-ascii?q?LIoFoJRSZGSwHDAGIUiI4EgEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECA?=
 =?us-ascii?q?gEBAiAdAQETJAEEAQkBAQEBCA4MAg0ZAgIDVAIEEwWDHAGBeQgBBKgycIEvgnY?=
 =?us-ascii?q?BAQWHGgiBC4p+gVc/gUSCKjWEOoNIgleJASCBcoRLNI9yBwKCHASPJ5EImVY3g?=
 =?us-ascii?q?XZNI4M8CYISNW0BDII+inBUgQIDAQEhE4sBAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="139232835"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 08:47:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391826AbeKWD1y (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 22:27:54 -0500
Received: from mail.efficios.com ([167.114.142.138]:35804 "EHLO
        mail.efficios.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732442AbeKWD1x (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 22:27:53 -0500
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id D95CE7B342;
        Thu, 22 Nov 2018 11:47:42 -0500 (EST)
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10032)
        with ESMTP id WWjduBERekzg; Thu, 22 Nov 2018 11:47:42 -0500 (EST)
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id 6CEEE7B33D;
        Thu, 22 Nov 2018 11:47:42 -0500 (EST)
DKIM-Filter: OpenDKIM Filter v2.10.3 mail.efficios.com 6CEEE7B33D
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=efficios.com;
        s=default; t=1542905262;
        bh=zEUD2cv3m9QoBxqFrRcnLu6dRfjO+JYa50ASikZlxrY=;
        h=Date:From:To:Message-ID:MIME-Version;
        b=jHTiVEEbmNQBBlZPisA4639XmLuEEFGzX2ziBILLaPdDpqLwIUR6fhtMABv6CiNeV
         MHy2Of2dJqc2KvJ9JdABYjhyVhrXmAJLtRt1mGa1cRGrRdR07s7qf7jmk55GLPuZis
         EUjPVdLUJJzP1hsQSN1UjU3UDkU96WNWa5sZJT8/89rpjoZDnG2X7m5TDFwRPX17Vh
         QD7X9WcSrKEtZZqlLvcdxZA7BrbDEpNM0Be1X1ViJlGcpVAPsq/vKpMElNHaOajB5l
         yYtSuqajiJYjRTpwfPM8RUeWl0UnV0aKTqEBUKgLxdtx0w3nwM/18Cnh3Nd30R8gq8
         8KjPAVqQzrDrA==
X-Virus-Scanned: amavisd-new at efficios.com
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10026)
        with ESMTP id 2zCcVB0wB0Oc; Thu, 22 Nov 2018 11:47:42 -0500 (EST)
Received: from mail02.efficios.com (mail02.efficios.com [167.114.142.138])
        by mail.efficios.com (Postfix) with ESMTP id 4EB217B331;
        Thu, 22 Nov 2018 11:47:42 -0500 (EST)
Date: Thu, 22 Nov 2018 11:47:42 -0500 (EST)
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
To: Florian Weimer <fweimer@redhat.com>
Cc: Rich Felker <dalias@libc.org>, carlos <carlos@redhat.com>,
        Joseph Myers <joseph@codesourcery.com>,
        Szabolcs Nagy <szabolcs.nagy@arm.com>,
        libc-alpha <libc-alpha@sourceware.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ben Maurer <bmaurer@fb.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Boqun Feng <boqun.feng@gmail.com>,
        Will Deacon <will.deacon@arm.com>,
        Dave Watson <davejwatson@fb.com>, Paul Turner <pjt@google.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        linux-api <linux-api@vger.kernel.org>
Message-ID: <1045257294.10291.1542905262086.JavaMail.zimbra@efficios.com>
In-Reply-To: <87wop5xeit.fsf@oldenburg.str.redhat.com>
References: <20181121183936.8176-1-mathieu.desnoyers@efficios.com> <20181122143603.GD23599@brightrain.aerifal.cx> <782067422.9852.1542899056778.JavaMail.zimbra@efficios.com> <20181122151444.GE23599@brightrain.aerifal.cx> <686626451.10113.1542901620250.JavaMail.zimbra@efficios.com> <87wop5xeit.fsf@oldenburg.str.redhat.com>
Subject: Re: [RFC PATCH v4 1/5] glibc: Perform rseq(2) registration at nptl
 init and thread creation
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [167.114.142.138]
X-Mailer: Zimbra 8.8.10_GA_3047 (ZimbraWebClient - FF52 (Linux)/8.8.10_GA_3041)
Thread-Topic: glibc: Perform rseq(2) registration at nptl init and thread creation
Thread-Index: daNrSODWQpbUGqf0EEqpOD2sZf2NSQ==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

----- On Nov 22, 2018, at 11:28 AM, Florian Weimer fweimer@redhat.com wrote:

> * Mathieu Desnoyers:
> 
>> Here is one scenario: we have 2 early adopter libraries using rseq which
>> are deployed in an environment with an older glibc (which does not
>> support rseq).
>>
>> Of course, none of those libraries can be dlclose'd unless they somehow
>> track all registered threads.
> 
> Well, you can always make them NODELETE so that dlclose is not an issue.
> If the library is small enough, that shouldn't be a problem.

That's indeed what I do with lttng-ust, mainly due to use of pthread_key.

> 
>> But let's focus on how exactly those libraries can handle lazily
>> registering rseq. They can use pthread_key, and pthread_setspecific on
>> first use by the thread to setup a destructor function to be invoked
>> at thread exit. But each early adopter library is unaware of the
>> other, so if we just use a "is_initialized" flag, the first destructor
>> to run will unregister rseq while the second library may still be
>> using it.
> 
> I don't think you need unregistering if the memory is initial-exec TLS
> memory.  Initial-exec TLS memory is tied directly to the TCB and cannot
> be freed while the thread is running, so it should be safe to put the
> rseq area there even if glibc knows nothing about it.

Is it true for user-supplied stacks as well ?

> Then you'll only
> need a mechanism to find the address of the actually active rseq area
> (which you probably have to store in a TLS variable for performance
> reasons).  And that part you need whether you have reference counter or
> not.

I'm not sure I follow your thoughts here. Currently, the __rseq_abi
TLS symbol identifies a structure registered to the kernel. The
"currently active" rseq critical section is identified by the field
"rseq_cs" within the __rseq_abi structure.

So here when you say "actually active rseq area", do you mean the
currently registered struct rseq (__rseq_abi) or the currently running
rseq critical section ? (pointed to by __rseq_abi.rseq_cs)

One issue here is that early adopter libraries cannot always use
the IE model. I tried using it for other TLS variables in lttng-ust, and
it ended up hanging our CI tests when tracing a sample application with
lttng-ust under a Java virtual machine: being dlopen'd in a process that
possibly already exhausts the number of available backup TLS IE entries
seems to have odd effects. This is why I'm worried about using the IE model
within lttng-ust.

So using the IE model for glibc makes sense, because nobody dlopen
glibc AFAIK. But it's not so simple for early adopter libraries which
can be dlopen'd.

> 
>> The same problem arises if we have an application early adopter which
>> explicitly deal with rseq, with a library early adopter. The issue is
>> similar, except that the application will explicitly want to unregister
>> rseq before exiting the thread, which leaves a race window where rseq
>> is unregistered, but the library may still need to use it.
>>
>> The reference counter solves this: only the last rseq user for a thread
>> performs unregistration.
> 
> If you do explicit unregistration, you will run into issues related to
> destructor ordering.  You should really find a way to avoid that.

The per-thread reference counter is a way to avoid issues that arise from
lack of destructor ordering. Is it an acceptable approach for you, or
you have something else in mind ?

Thanks,

Mathieu

-- 
Mathieu Desnoyers
EfficiOS Inc.
http://www.efficios.com
