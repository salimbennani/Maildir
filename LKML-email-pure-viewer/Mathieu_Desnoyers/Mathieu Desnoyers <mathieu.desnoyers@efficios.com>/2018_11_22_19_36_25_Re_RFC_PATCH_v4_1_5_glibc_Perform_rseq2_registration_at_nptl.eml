Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:31:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E4151580460;
	Thu, 22 Nov 2018 11:36:32 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 11:36:32 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnyfGbhykIGbnHRDXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8SLfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJCAIy8?=
 =?us-ascii?q?YZYBAOUdMuhXronzoEcOrQCmBQSuH+7v1j1FiWPq0aAgz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqAIXuCpzKnIzCvMb+5L0jnz9ofIaRYhofaMXL1ua8rR0lQkGgTAjlqK?=
 =?us-ascii?q?tYzlPzKV2foQs2SB8uVvS/mvi2ggqwBxvDev3Nwsh5LXiYIbxFDE9Dl2wIcyJd?=
 =?us-ascii?q?2jUkJ0fdmkEJ5JuiycKoB4TMQiQ2RytyY7zL0LoYC0fCYEyJQm2xHfavuHc5OS?=
 =?us-ascii?q?7h3/U+aRJDF1j29mdrKnnxu+71Ssx+nmWsWp3ltGsDBJnsTPu3wRzRDe68qKRu?=
 =?us-ascii?q?Ng8kqg2zuDzR3f5vxLLEwuiKbWJIAtzqQtmpcdsknOGDL9ll/sg6+MbEok//Cl?=
 =?us-ascii?q?6+T5bbXioZ+RL5F0ig7gPaQ0gMC/Avo3MhIIX2eF/eSwzrrj/Vf2QLlSj/02lL?=
 =?us-ascii?q?fWsIzCKMgFuqK0BxVZ3pst5hqhFTuqzdcVkWUdIF9Eeh+Ll43pNEvPIPD8A/e/?=
 =?us-ascii?q?mVOskDJzyvDCP73hBIjNL3fanLfiY7l98UhcxxQ3zdxG4JJVBLcBL+zpWkLqqt?=
 =?us-ascii?q?zYAQE2Mxauz+bkFtp9zIUeVnyLAqODN6PSq1CI6vo1I+aQfI8VpCr9K/896v7q?=
 =?us-ascii?q?jH85mkEScbOm3JsKc324GvVmI0OEYXvjmNsBEGEKvhYgQ+zuklGNTTlTZ3OqVa?=
 =?us-ascii?q?Im+j47EJ6mDZvERo21gLyOxia7HoFMaWBBEFyMEWroeJ+CW/cDcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mF0WGNSH97kn?=
 =?us-ascii?q?kLRz8x2qB/p0t9x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDbFxmG9WiiRDD3DCmA6UPmLyJH5E09qPc337sJ8dy0XrG1a?=
 =?us-ascii?q?8hj0U4TctLL2Gpmql/9w3LDY7Tj0qZj7qqdbgb3CPV92eM12yOsFtcUA5xS6rF?=
 =?us-ascii?q?W38fa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ACCto2bdDDxrEVLieEfs8eh4qHOm?=
 =?us-ascii?q?QU441QCKb0t917Wr/h4Zn+CTS/QW3rgcoicuty10HEqh39LRE9ePuhBufLtCbt?=
 =?us-ascii?q?8n4FdIz2TZtxdjMZymNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23d67W21Te0NGK+qcP6PU0sUnjsBuuFko493Vn0t9V03?=
 =?us-ascii?q?SH65XODQoSV4/xU0kt+xh7obHafjcy54fO2XJwNqm0tyfI28g1C+s91hagY9Bf?=
 =?us-ascii?q?PbueGw/2DcIbCNahKewwl1eycxILIfpd9Kg3P8OhafuLw6qrPOdmnDK7gmVL+o?=
 =?us-ascii?q?F90kSQ9yViTu7ExYoKw/ad3gGfTTfzkE+hstzrmYBDfTwTHne/xTL4C4JLZ6xy?=
 =?us-ascii?q?fZwECWGhI8CswtV+hpjtW2NX9VK5BlMG3tOpdgSWb1DnwQJQ0kEXq2S9mSSk1z?=
 =?us-ascii?q?x0jy0prq2H0SzUwuTtaAAIOnRWS2lll1vsJ5a7j8obXESxcwcmjh+l6lvkyKhB?=
 =?us-ascii?q?o6R/KXLeQUNJfyjwMmFjXbG8truEY85T9pwotT9bX/i7YVCfUrT9uQcV0zv/H2?=
 =?us-ascii?q?tCwzA2bzGrupTjkx16km6dN2tzrHzCdMF0xBff4sHcRPFL0joHQil4lSfYBlym?=
 =?us-ascii?q?M9a1+tWUko/JsvqiWGK5Sp1TbS7rwJuCtCSh/21qAh6/n/eplt38Cwc60iz719?=
 =?us-ascii?q?hsVSrWqhbxeY3r16W8MeJ6cUhkHl7868xmGo5glos8no0f2X8fhp+N53oIjX/z?=
 =?us-ascii?q?MclH2aL5dHcMRSQEw9nP7Ajn2U1jKGmEx4b4VnWb38tgaMO2YmIQ2iIh8c9KDL?=
 =?us-ascii?q?2Y46BDnStwulC4tx7eYeBhnjcBzvsj8H0ajPsIuAY3ziWdH6odHU9XPSH3kxSI?=
 =?us-ascii?q?7ta+rLhYZWq1cLiw0lZ+ks6lDL2Yvg5cX3P5cI84HSBs9sV/LE7M0Hrr54Hhed?=
 =?us-ascii?q?nQbsgcugeakhjelOhVNIw+luARiiV5I2L9smYoy+o6jRxowJG7s5KLK2Rr/KKl?=
 =?us-ascii?q?HBFYMif5aN8U+jHolaxehNqZ35izHpV9HTUGRIfoTfWtED4ItPXoLQCOECAnqn?=
 =?us-ascii?q?eAGLrSBguf6EZgr3LSHJGnLXCXJH8Fzdp8QBmRPlBQgAcRXD8ihJ42ChiqxND9?=
 =?us-ascii?q?cEd+/j0e/UT3qhxIyuJ1LRX/VnrfqRysajc1TpifMRVX4htD50fTLcyR8OZzEz?=
 =?us-ascii?q?tE8Z2mqQyHMnabaBhQDWEVRkyEAEjuPru06tnF7eeYHfCyL+fUbbWNtOxeVOqI?=
 =?us-ascii?q?xZS13Yt95DuMMsSPPn9/D/w0wEZDXHZ5G9jHlDULUSAYiyXNb8uDrhem5iJ3tt?=
 =?us-ascii?q?y/8OjsWA/35YqPDKZSMcxy+x+sh6ePLfWQhCF/KTZXzZ4MwX7IyL4C3F8dkS1u?=
 =?us-ascii?q?dj+tEageui7JVq7fhqhXDxsDYSNpKMRI97483hVKOcPDitP6yL94jv02C1dET1?=
 =?us-ascii?q?DhmdupZcsFI26jLlPHGV2LOa+CJT3KxcH3fKy9RadRjOVSqx2/pzKbH1X/MTSE?=
 =?us-ascii?q?kjnjTwqvPv1UjCGHIBxev5mwfQxwCWf4VtLpdB26PMVzjT032rA0gnLKNWgBMT?=
 =?us-ascii?q?lzaU9Nr7uQ7T9GjfV7AWBO8n1lLeyckSaD8+bYMooWsedsAilsi+Ja4XE6x6FJ?=
 =?us-ascii?q?4y1eWPN1mDXdrth1rlGik+mPzCdnURVUpjZKgoKLoVttOaHD+pZcXnbE+QoH7X?=
 =?us-ascii?q?+MBBQSu9tlFtrvtrhQy9fVkqLzLTZC89TM8sodB8jbMsSHMHU6PBrtGT7UChYF?=
 =?us-ascii?q?TDGxOWHegUxdjO+d9nmPopcmrZjsnclGdrgObl0+Frs0B0BmEcZKdJt+WjItip?=
 =?us-ascii?q?afjcQDo32ko0+Cat9du8XiX+6SAPjyYBqUlr9DdhYS2vusKI0PNoz2xgpuZ0J8?=
 =?us-ascii?q?m5XHAVH4UN5DoyZgaRRyq0JIpistBlYv0l7oP1v+qEQYEuS5y1tv0lNz?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BsAADKBPdbh0O0hNFiHgEGBwaBVAYLA?=
 =?us-ascii?q?YEwgTmBAicKg2+Id4shgWglFJkZLAcMAYhSIjcGDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYQEBAQECAQECIB0BARMkAQQBCQEBAQEIDgoCAg0ZAgIDVAIEE?=
 =?us-ascii?q?wWDHAGBeQgBBKgZcIEvgnYBAQWHGAiBC4p+gVc/gUSCX4RqgxiCV4sThEs0j3I?=
 =?us-ascii?q?HAoIcBIdNh1qRCJlWNoF3TSODPAmCEjWDOIpwVIECAwEBIROJVYEtAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0BsAADKBPdbh0O0hNFiHgEGBwaBVAYLAYEwgTmBAicKg2+?=
 =?us-ascii?q?Id4shgWglFJkZLAcMAYhSIjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?QEBAQECAQECIB0BARMkAQQBCQEBAQEIDgoCAg0ZAgIDVAIEEwWDHAGBeQgBBKg?=
 =?us-ascii?q?ZcIEvgnYBAQWHGAiBC4p+gVc/gUSCX4RqgxiCV4sThEs0j3IHAoIcBIdNh1qRC?=
 =?us-ascii?q?JlWNoF3TSODPAmCEjWDOIpwVIECAwEBIROJVYEtAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="63610698"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 22 Nov 2018 11:36:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2438316AbeKWGRP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 01:17:15 -0500
Received: from mail.efficios.com ([167.114.142.138]:34940 "EHLO
        mail.efficios.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731412AbeKWGRP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 01:17:15 -0500
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id 426A17B11E;
        Thu, 22 Nov 2018 14:36:26 -0500 (EST)
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10032)
        with ESMTP id PrYYPdd2Jijd; Thu, 22 Nov 2018 14:36:25 -0500 (EST)
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id 92DE37B119;
        Thu, 22 Nov 2018 14:36:25 -0500 (EST)
DKIM-Filter: OpenDKIM Filter v2.10.3 mail.efficios.com 92DE37B119
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=efficios.com;
        s=default; t=1542915385;
        bh=PIumVTXYQXvbWQfPyOMf00cNIJ33l9bzdm07kjzbotg=;
        h=Date:From:To:Message-ID:MIME-Version;
        b=G81ulrNfbZBBg0cjnuzlGV1kQcgig7fZG+5heOii0BD2CMhhjnGOeu49YFJ2aV/+Y
         zcWmY7cJP8SkRhhi+WWZy4t+nXJnvcfmLbCI76T6W1wR6zrhYfvJWb67yfXM90gNrl
         4sGZ7a8HyFwDKn9WNZC7DN/4ORv02ZIz6BfJHoKTqBimGPsQaIskix+lOkZsezfFsJ
         SQejHvoUIm5pbgiXspPyrxS/SIQ1uM60cV4Mm061ipW8W3Xbb19eIyBaeTq/63yLCY
         7jQ+fSDGohTVo38gN3KR4FeMkyHDPfjP1HwgCmwG6lDNEXOpzsaHBCwkuhuttjPFbb
         O8dgBubqQ0hNw==
X-Virus-Scanned: amavisd-new at efficios.com
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10026)
        with ESMTP id NsKJOeenbhex; Thu, 22 Nov 2018 14:36:25 -0500 (EST)
Received: from mail02.efficios.com (mail02.efficios.com [167.114.142.138])
        by mail.efficios.com (Postfix) with ESMTP id 700F47B10D;
        Thu, 22 Nov 2018 14:36:25 -0500 (EST)
Date: Thu, 22 Nov 2018 14:36:25 -0500 (EST)
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
To: Rich Felker <dalias@libc.org>
Cc: Szabolcs Nagy <Szabolcs.Nagy@arm.com>,
        Florian Weimer <fweimer@redhat.com>, nd <nd@arm.com>,
        carlos <carlos@redhat.com>,
        Joseph Myers <joseph@codesourcery.com>,
        libc-alpha <libc-alpha@sourceware.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ben Maurer <bmaurer@fb.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Boqun Feng <boqun.feng@gmail.com>,
        Will Deacon <Will.Deacon@arm.com>,
        Dave Watson <davejwatson@fb.com>, Paul Turner <pjt@google.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        linux-api <linux-api@vger.kernel.org>
Message-ID: <1705791029.10494.1542915385130.JavaMail.zimbra@efficios.com>
In-Reply-To: <20181122190143.GI23599@brightrain.aerifal.cx>
References: <20181121183936.8176-1-mathieu.desnoyers@efficios.com> <87a7m1ywni.fsf@oldenburg.str.redhat.com> <20181122151710.GF23599@brightrain.aerifal.cx> <875zwpyw81.fsf@oldenburg.str.redhat.com> <1306224240.10055.1542900799576.JavaMail.zimbra@efficios.com> <7032ab45-8314-b85d-5b4d-f83b41dab5b6@arm.com> <1602745030.10426.1542911744479.JavaMail.zimbra@efficios.com> <20181122190143.GI23599@brightrain.aerifal.cx>
Subject: Re: [RFC PATCH v4 1/5] glibc: Perform rseq(2) registration at nptl
 init and thread creation
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [167.114.142.138]
X-Mailer: Zimbra 8.8.10_GA_3047 (ZimbraWebClient - FF52 (Linux)/8.8.10_GA_3041)
Thread-Topic: glibc: Perform rseq(2) registration at nptl init and thread creation
Thread-Index: QmI0bEoeb/5TqaWLKcni1VnrANiv0A==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

----- On Nov 22, 2018, at 2:01 PM, Rich Felker dalias@libc.org wrote:

> On Thu, Nov 22, 2018 at 01:35:44PM -0500, Mathieu Desnoyers wrote:
>> ----- On Nov 22, 2018, at 11:24 AM, Szabolcs Nagy Szabolcs.Nagy@arm.com wrote:
>> 
>> > On 22/11/18 15:33, Mathieu Desnoyers wrote:
>> >> ----- On Nov 22, 2018, at 10:21 AM, Florian Weimer fweimer@redhat.com wrote:
>> >>> Right, but in case of user-supplied stacks, we actually free TLS memory
>> >>> at this point, so signals need to be blocked because the TCB is
>> >>> (partially) gone after that.
>> >> 
>> >> Unfortuntately, disabling signals is not enough.
>> >> 
>> >> With rseq registered, the kernel accesses the rseq TLS area when returning to
>> >> user-space after _preemption_ of user-space, which can be triggered at any
>> >> point by an interrupt or a fault, even if signals are blocked.
>> >> 
>> >> So if there are cases where the TLS memory is freed while the thread is still
>> >> running, we _need_ to explicitly unregister rseq beforehand.
>> > 
>> > i think the man page should point this out.
>> 
>> Yes, I should add this to the proposed rseq(2) man page.
>> 
>> > 
>> > the memory of a registered rseq object must not be freed
>> > before thread exit. (either unregister it or free later)
>> > 
>> > and ideally also point out that c language thread storage
>> > duration does not provide this guarantee: it may be freed
>> > by the implementation before thread exit (which is currently
>> > not observable, but with the rseq syscall it is).
>> 
>> How about the following wording ?
>> 
>>   Memory of a registered rseq object must not be freed before the
>>   thread exits. Reclaim of rseq object's memory must only be
>>   done after either an explicit rseq unregistration is performed
>>   or after the thread exit. Keep in mind that the implementation
>>   of the Thread-Local Storage (C language __thread) lifetime does
>>   not guarantee existence of the TLS area up until the thread exits.
> 
> This is all really ugly for application/library code to have to deal
> with. Maybe if the man page is considered as documenting the syscall
> only, and not something you can use, it's okay,

This is indeed for the rseq(2) manpage targeting the man-pages project,
which documents system calls.

> but "until the thread
> exits" is not well-defined in the sense you want it here. It's more
> like "until the kernel task for the thread exits", and the whole point
> is that there is some interval in time between the abstract thread
> exit and the kernel task exit that is not observable without rseq but
> is observable if the rseq is wrongly left installed.

It's important to clear a possible misunderstanding here: from the
point where the thread issues the "exit" system call, the kernel won't
touch the registered rseq TLS area anymore.

So the point where the thread exits is actually well defined, even from
a user-space perspective.

The problematic scenario arises when glibc frees the TLS memory
before invoking exit() when the thread terminates. In this kind of
scenario, we need to explicitly invoke rseq unregister before TLS
memory reclaim.

Thanks,

Mathieu


-- 
Mathieu Desnoyers
EfficiOS Inc.
http://www.efficios.com
