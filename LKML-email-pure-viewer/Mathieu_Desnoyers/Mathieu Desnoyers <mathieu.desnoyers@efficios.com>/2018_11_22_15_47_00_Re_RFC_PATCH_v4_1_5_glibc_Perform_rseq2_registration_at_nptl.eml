Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:29:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E25E658037D;
	Thu, 22 Nov 2018 07:47:08 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 22 Nov 2018 07:47:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUaGlBR1EhIZ9QX/IsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTLvvxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPAYGz?=
 =?us-ascii?q?b4USAeUOIelWoIj9qVwSrRulHQmhBvjiyiNKi3DqwaE3yfgtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakVS++10KnIzTTdYPNLxDzz5pbHcgsnofGLXbN/b9DRyVIyHA7Ci1Wf?=
 =?us-ascii?q?s5DlPzOU1usTrmiX9fdvWvy0i24hrAFwoiagxt03ioTSmI0VxF7E9SRlz4Y0It?=
 =?us-ascii?q?24U1R3bsKjEJtVriyXMZZ9TM0lQ2Ftoik6y7sGtIalcygExpQnxgLQa/2Ac4iT?=
 =?us-ascii?q?+B7sSOGRITJ+iXl4e7y/nw6//Va8xuD4TMW4zVhHojRfntXRtX0Bywbf58mFR/?=
 =?us-ascii?q?dl40us2DSC2xrO5u1ZLk04j7fXJpE/zrIqi5Yev0fOEynrk0vslqCWbF8r+u2w?=
 =?us-ascii?q?5uTnfLrmopicOpdqigHxLKsugNazAecmPQgUWWiU5+C82Kfk/U3jT7VGlvw2kq?=
 =?us-ascii?q?/Hv5DGPckXuLK1DgtP3oo+5RuzES2q3MkbkHUbNl5IeRCKg5DsO17UIfD4Cfm/?=
 =?us-ascii?q?g06rkDdu3/3GOrzhApPQLnnMibvhfqhy61RayAUtydBT/pVUC78HIP3tQE/8r8?=
 =?us-ascii?q?LYDhAnPAyu2ernC8ty1pkYWW2RBq+VKqTSsUWH5u43OemDeJcVuCrhK/gi//Pu?=
 =?us-ascii?q?iX45mVwDcqWz0poXdWu1HvBnI0WffHrtjc0NEWYMvgoiUuPqjEeOXiJUZ3a3R6?=
 =?us-ascii?q?g8/C00CJq6DYffQYCgmLyB0z26Hp1KfG9GDUqAEXf1d4qeXfcMZzmfIstgkjwC?=
 =?us-ascii?q?SLigRJUt1RCotA/m1bVnKvDY9TEftZLmzNJ1/fHclQku9TxoCMSQy2ONT2ZqkW?=
 =?us-ascii?q?8SRD8226Z/oUp6ylqY1ah4gvpYFcFc5v9TUwc6M4LcwPJ+C9zoRg3BedKJQk68?=
 =?us-ascii?q?Qtq6GTExUs4xw9gWbklnANWijhfD3ymwD78PjbOLBoc58qbd33j3OsZ8xGzK1K?=
 =?us-ascii?q?gnj1k6XMRPMXeqibJ49wjWH4TJiVmWl762daQA2y7A7GSDwnCIvE1CVA5wUL/K?=
 =?us-ascii?q?XXYQZkbNqdT550XCT6KhCLg9MwtBz9KCJbVOatHzkVpGQ/LjMszEY22tg2ewGQ?=
 =?us-ascii?q?qIxrSUYYX3YWodwjvSBFIEkw8J+3aGLhYxBiGmr2LaDzxuEFbvbljo8el/rnO7?=
 =?us-ascii?q?U0A1wxuLb01ny7q65BoVieaARPMU27IOoD0hpClsHFahw9LWDMKNqBd7c6VCf9?=
 =?us-ascii?q?wx+ldH2njftwxmIJOgKbtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic7LW2lDb0NaR5qcP6PQ5p0//vA2zEUoi6XFn09hT03?=
 =?us-ascii?q?uT/ZjKCAsSUZTsUkc47RR6prfaYjUj6IPQz3FjLa60sjra0dIzGOQl0gqgf8tY?=
 =?us-ascii?q?MK6cDgDyF9MVBsewJ+0qgVSmdQ8EM/1I+64yPMOmcOWG1bWvPOZhmjKmkGtG7J?=
 =?us-ascii?q?p80kKK6ypzVOrI04wZzPGf2wuNTy38g0u5ssDrhYBEYikfH2qiyST+GIFdfKxz?=
 =?us-ascii?q?fYYRBmeoLM263dF+h5/rW35F+1+vHVIG2Mm1eRWMa1zxxxFf1UMSoXa/gyu30y?=
 =?us-ascii?q?R0ky01rqqYxCHO2eXiewYdNW5RWWZiik3gIY6qgNAAXUikdhQmmwGh5Unn2adb?=
 =?us-ascii?q?vqN/L2/ITEdMfij2KXxiU6SqurqDZc5P9I0nsSFNXOugZlCaT6b3owEG3CP7A2?=
 =?us-ascii?q?te2Dc7eimqu5X4hRB7iHiRLG1urHrfYsxwwRbf5NrBRf9exDYGRS94iSXJCVi4?=
 =?us-ascii?q?JdWm4dKUl5LbuOCkS22hToFTcTXszY6Ytiu0/3dqAR68n/C0gNHnChI10Sz419?=
 =?us-ascii?q?lrUyXHshD8b5Lv16S7N+JnY0ZpCEX968p8BoFxjI8wiIsM1ngdg5Wf5WAHnnvr?=
 =?us-ascii?q?MdVHxaL+a2IARD4RzN7S+gTl2kxjLnSSyoL9V3WdxNZhZtagbmMX3CI9895FCK?=
 =?us-ascii?q?OO4LNYmit1p0KyrRjNbvhlgjcd1fwu5WYZg+4TuQoh1CWdAq0IEkleMizhjBCI?=
 =?us-ascii?q?79G4rKVKa2eja7mw1Exind+/CLGOuB1TWHH8ep06By9/8t1/ME7Q0H308ozkfd?=
 =?us-ascii?q?jQbdEJuRGOnRbPkfNVKI4vmfoQniVoJ3j9vXI+xu4/jBxu24y6vYedJ2Vs+qK5?=
 =?us-ascii?q?HgBXNjnva8wP/THtiL5UntyK0IC3ApVhBjILUYP0TfKvFTIer/XmOByIED0hsX?=
 =?us-ascii?q?ebArvfEBSb6EdnqXLPDp+qO2uWJHkf0dVtWh2dKFZDjwATWTUwhoQ5GRyyxMz9?=
 =?us-ascii?q?bEd54Sgc6UXipRtLzuJoKgPzUmPCpAqzbjc0SZ6fLAdZ7w1Y5kfVN9Ce4fx3Hy?=
 =?us-ascii?q?1C4pKhqwmNIHSBZwtUFWEJRlCEB1f7M7ms/9bA9vaXBvGkI/vSe7mOqvFeV/SV?=
 =?us-ascii?q?xZKpyIRm5C2BNsGOPnlkEv061VBPXXF/G8TFhToPTzYbmD7Kb86evB284DF4rt?=
 =?us-ascii?q?ij8PT3XwLi/YuOC7xPMdV25hC5m6GDO/SLhCZ+LzZY2YgBxXvJyLgZwV4ThDti?=
 =?us-ascii?q?dzirEbQcqyHNSLjclbNQDx4ecylzLtdH77og3glRPs7WktP12aB5jv42CFdFVE?=
 =?us-ascii?q?btmsKzZcwNLGGyKknHBFuQNLmdIT3Lwsf3Yb6zSLFKjeVUsQGwtiifE0P5IjuD?=
 =?us-ascii?q?kDzpXQi1Me5QlCGbIABeuIalfxl3FGjsV8jmZQO7MdNtiT02wKY5hnfLNW4aLD?=
 =?us-ascii?q?h9fFlBrryW7SNEnPp/H3ZN4WZiLemBgyyZ9fXXKo4Ksft3BSR5j/5a4HU/y7dP?=
 =?us-ascii?q?8C5IXuB6mCvMod5ouFymluiPyjx6UBtBsDpLhYSLvVl8NqXd7JVPRXHE/BcV52?=
 =?us-ascii?q?WKFxsKv8dlCsHou61IytnAjqTzKDJD89LS5cQdBsjUJ9iBMHouKhfpHD/UDA0Y?=
 =?us-ascii?q?TT+kL23fhkpdkO2M+X2RtJQ1tp/smJ9dAoNcAWY0HfNSJElhH9EYaMN7VzclmK?=
 =?us-ascii?q?WziM8C7jy5thaHF+tAuZWSc/uOAfTiNX61gKJCYAoF26iweYEaKo361lEkZlRh?=
 =?us-ascii?q?moPbFlDLdd1DrCxqbwgv5k5K9S4tHSUIx0v5Z1b1szcoHvmuk0tz01MmbA=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BeAABtzvZbh0O0hNFiHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMIE5gQInCoNuiHeLIoFoJRSXOoFfLAcMAYhSIjcGDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIB0BARMkAQQBCQEBAQEIDgoCAg0ZA?=
 =?us-ascii?q?gIDVAIEEwWDHAGBeQgBBKhacIEvgnYBAQWHHQiBC4p+gVc/gUSCX4RLARIBgyO?=
 =?us-ascii?q?CV4khgXKESzSPcgcCghwEjyeRCJlWNoEGcU0jgzwJghI1gziKcFSBAgMBASETi?=
 =?us-ascii?q?WKBHwGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0BeAABtzvZbh0O0hNFiHQEBBQEHBQGBVAUBCwGBMIE5gQI?=
 =?us-ascii?q?nCoNuiHeLIoFoJRSXOoFfLAcMAYhSIjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYQEBAQECAQECIB0BARMkAQQBCQEBAQEIDgoCAg0ZAgIDVAIEEwWDHAG?=
 =?us-ascii?q?BeQgBBKhacIEvgnYBAQWHHQiBC4p+gVc/gUSCX4RLARIBgyOCV4khgXKESzSPc?=
 =?us-ascii?q?gcCghwEjyeRCJlWNoEGcU0jgzwJghI1gziKcFSBAgMBASETiWKBHwGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="41204048"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 07:47:06 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405851AbeKWC04 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 21:26:56 -0500
Received: from mail.efficios.com ([167.114.142.138]:52270 "EHLO
        mail.efficios.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728825AbeKWC04 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 21:26:56 -0500
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id 4939F133084;
        Thu, 22 Nov 2018 10:47:01 -0500 (EST)
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10032)
        with ESMTP id ZJBK8hBcCeWE; Thu, 22 Nov 2018 10:47:00 -0500 (EST)
Received: from localhost (ip6-localhost [IPv6:::1])
        by mail.efficios.com (Postfix) with ESMTP id 6A08913307A;
        Thu, 22 Nov 2018 10:47:00 -0500 (EST)
DKIM-Filter: OpenDKIM Filter v2.10.3 mail.efficios.com 6A08913307A
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=efficios.com;
        s=default; t=1542901620;
        bh=f9l8GxdJ82Q0LdlBiPs0Kd1qm98AmnPQGq5wUPcULN0=;
        h=Date:From:To:Message-ID:MIME-Version;
        b=mDBWDTUTpnLKCltzA3JWZ/2x3+BG7NOZqHra3+IZT46bdW5M0TuaC1EQdBKYwIX3f
         g1PII7f5jTj18rBKMvRdcxYTLWBWi5/XnV8PWB5LCP+EpSXym9y4a8oB09zux9em1D
         61o9SCjcXem6yFo7trgFjM/coJkzRvvUIRhqsz16zLpHvufSRJ36CjeHVx3mVxllJw
         Gc9ysTRje1RH3AAABO+cifsMi5pLst1We00unOJVRoFsOGco9jlsoXN1EuPqFEfq65
         tHoq7krgMcAAJ4KasmtWiOgZ9INet0SjeGa6kbUgblRMblWxA7T2AF3H1RpE83/46T
         Sign5FlrLl7Rw==
X-Virus-Scanned: amavisd-new at efficios.com
Received: from mail.efficios.com ([IPv6:::1])
        by localhost (mail02.efficios.com [IPv6:::1]) (amavisd-new, port 10026)
        with ESMTP id dszltgBJ_YBh; Thu, 22 Nov 2018 10:47:00 -0500 (EST)
Received: from mail02.efficios.com (mail02.efficios.com [167.114.142.138])
        by mail.efficios.com (Postfix) with ESMTP id 4D2BE13306D;
        Thu, 22 Nov 2018 10:47:00 -0500 (EST)
Date: Thu, 22 Nov 2018 10:47:00 -0500 (EST)
From: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
To: Rich Felker <dalias@libc.org>
Cc: carlos <carlos@redhat.com>, Florian Weimer <fweimer@redhat.com>,
        Joseph Myers <joseph@codesourcery.com>,
        Szabolcs Nagy <szabolcs.nagy@arm.com>,
        libc-alpha <libc-alpha@sourceware.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ben Maurer <bmaurer@fb.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>,
        Boqun Feng <boqun.feng@gmail.com>,
        Will Deacon <will.deacon@arm.com>,
        Dave Watson <davejwatson@fb.com>, Paul Turner <pjt@google.com>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        linux-api <linux-api@vger.kernel.org>
Message-ID: <686626451.10113.1542901620250.JavaMail.zimbra@efficios.com>
In-Reply-To: <20181122151444.GE23599@brightrain.aerifal.cx>
References: <20181121183936.8176-1-mathieu.desnoyers@efficios.com> <20181122143603.GD23599@brightrain.aerifal.cx> <782067422.9852.1542899056778.JavaMail.zimbra@efficios.com> <20181122151444.GE23599@brightrain.aerifal.cx>
Subject: Re: [RFC PATCH v4 1/5] glibc: Perform rseq(2) registration at nptl
 init and thread creation
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [167.114.142.138]
X-Mailer: Zimbra 8.8.10_GA_3047 (ZimbraWebClient - FF52 (Linux)/8.8.10_GA_3041)
Thread-Topic: glibc: Perform rseq(2) registration at nptl init and thread creation
Thread-Index: FFMd+FaOuvuQM2PXyMkZh8poo3vAZQ==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

----- On Nov 22, 2018, at 10:14 AM, Rich Felker dalias@libc.org wrote:

> On Thu, Nov 22, 2018 at 10:04:16AM -0500, Mathieu Desnoyers wrote:
>> ----- On Nov 22, 2018, at 9:36 AM, Rich Felker dalias@libc.org wrote:
>> 
>> > On Wed, Nov 21, 2018 at 01:39:32PM -0500, Mathieu Desnoyers wrote:
>> >> Register rseq(2) TLS for each thread (including main), and unregister
>> >> for each thread (excluding main). "rseq" stands for Restartable
>> >> Sequences.
>> > 
>> > Maybe I'm missing something obvious, but "unregister" does not seem to
>> > be a meaningful operation. Can you clarify what it's for?
>> 
>> There are really two ways rseq TLS can end up being unregistered: either
>> through an explicit call to the rseq "unregister", or when the OS frees the
>> thread's task struct.
>> 
>> You bring an interesting point here: do we need to explicitly unregister
>> rseq at thread exit, or can we leave that to the OS ?
>> 
>> The key thing to look for here is whether it's valid to access the
>> TLS area of the thread from preemption or signal delivery happening
>> at the very end of START_THREAD_DEFN. If it's OK to access it until
>> the very end of the thread lifetime, then we could do without an
>> explicit unregistration. However, if at any given point of the late
>> thread lifetime we end up in a situation where reading or writing to
>> that TLS area can cause corruption, then we need to carefully
>> unregister it before that memory is reclaimed/reused.
> 
> The thread memory cannot be reused until after kernel task exit,
> reported via the set_tid_address futex. Also, assuming signals are
> blocked (which is absolutely necessary for other reasons) nothing in
> userspace can touch the rseq state after this point anyway.

As discussed in the other leg of the email thread, disabling signals is
not enough to prevent the kernel to access the rseq TLS area on preemption.

> I was more confused about the need for reference counting, though.
> Where would anything be able to observe a state other than "refcnt>0"?
> -- in which case tracking it makes no sense. If the goal is to make an
> ABI thatsupports environments where libc doesn't have rseq support,
> and a third-party library is providing a compatible ABI, it seems all
> that would be needed it a boolean thread-local "is_initialized" flag.
> There does not seem to be any safe way such a library could be
> dynamically unloaded (which would require unregistration in all
> threads) and thus no need for a count.

Here is one scenario: we have 2 early adopter libraries using rseq which
are deployed in an environment with an older glibc (which does not
support rseq).

Of course, none of those libraries can be dlclose'd unless they somehow
track all registered threads. But let's focus on how exactly those
libraries can handle lazily registering rseq. They can use pthread_key,
and pthread_setspecific on first use by the thread to setup a destructor
function to be invoked at thread exit. But each early adopter library
is unaware of the other, so if we just use a "is_initialized" flag, the
first destructor to run will unregister rseq while the second library
may still be using it.

The same problem arises if we have an application early adopter which
explicitly deal with rseq, with a library early adopter. The issue is
similar, except that the application will explicitly want to unregister
rseq before exiting the thread, which leaves a race window where rseq
is unregistered, but the library may still need to use it.

The reference counter solves this: only the last rseq user for a thread
performs unregistration.

Thanks,

Mathieu



-- 
Mathieu Desnoyers
EfficiOS Inc.
http://www.efficios.com
