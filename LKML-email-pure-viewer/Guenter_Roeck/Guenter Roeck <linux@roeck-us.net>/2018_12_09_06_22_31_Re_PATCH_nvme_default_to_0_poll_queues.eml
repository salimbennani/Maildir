Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:57:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D5AE35800CD;
	Sat,  8 Dec 2018 22:22:39 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 22:22:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AosclChwfgSJLLp3XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8WKvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwBu7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?narcj1O7kUUeCp0qbI1yjIYe9R2Tjj9IfIcQ0qrPaIXbJxd8rR1EYuGhjfjlWX?=
 =?us-ascii?q?t4PqIzCV2v0Qs2iA9eZgU/ygi3I+pgx3vzOhxd8sh5HXio4Jzl3I7zh1zYgrKd?=
 =?us-ascii?q?GiVUJ2YsKoHIFRuiyYL4d6XMIvT310tCs/17ELu4K3cDQPxZs5yRPTdeGLfo2J?=
 =?us-ascii?q?7x79WuadPTJ1iXx7dL+7mxm/9Fasx+PyVsm61VtKoDRKncfCu30I0xHc98qKRe?=
 =?us-ascii?q?d780y8wziAzRrT5ftBIU0slarUNZohwrkom5oNvkTMADX2lF/1jKCIbEUk/Pan?=
 =?us-ascii?q?6+D9brXhvJ+cOJd4igD4MqswhsyyGfo0PhQKUmSB5Oix2qPv8VfkTLhJkvE6iK?=
 =?us-ascii?q?jUvZLCKcQevKG5AgtV0og56xa4CjeryNAYnXgBLFJYdxOLlovpNE/UIPD+E/i/?=
 =?us-ascii?q?h02gkDBlxvDAILLhGI7ALmbMkLj/Z7Zx8U1cxxQpzdBZ+Z1UDqsNIPXpWk/+rN?=
 =?us-ascii?q?DYFAM2MxSow+b7D9VwzoceWWOMAqCHKq/TvkKI6/krI+mNYo8VpTn8J+Ik5/7o?=
 =?us-ascii?q?kX82h1sdcbO10psQbXCyBu5mLFmBYXrwntcBFn8HvgokQ+zrlF2NSzlTa2yyX6?=
 =?us-ascii?q?Ih/D47Do2mAJzHRoCshryBwSi6EodXZmBAFlCDD3Poe5+YVPcLbSKYOtVhnSAc?=
 =?us-ascii?q?Vbi9V48h0gmjtA39y7V5NObU+SoYtZTl1Nhy/ODTkRAy9TppD8WSyW2NTmd0nn?=
 =?us-ascii?q?8WSD8yxqxwvUt9ylKb26hin/NYDcBT5+9OUgoiL5Hc1Ox6C9fxWg7bZNeGUlSm?=
 =?us-ascii?q?T86iATEwSNIx3tAPb1x8G9WkkhDMwS6qD6UJmLyMAZw+6rjc0GTpJ8Zh13bG07?=
 =?us-ascii?q?Esj1o8TctJL2Gmgq9/+BLVB47GiEiZk6eqdaIB3C/C7muDzGyOvF1GXw50S6nK?=
 =?us-ascii?q?QXcfZk7Op9Tj+kzCV6OuCaggMgZZ1MGNMLVKZcPzgVVGXvjjPs/ebHy3m2u3AR?=
 =?us-ascii?q?aIxbaMbI7xdmUZ3SXdDlUEkg8J8XaHMwg+Gjmuo2bEADNyElLvZlvm8fNip3Oj?=
 =?us-ascii?q?Uk800waKYlV82LWv5B4am+aQS/MJ0bICoycutTN0EU2539LXDdqAugVgcL9dYd?=
 =?us-ascii?q?M7/FdIy2bZuxZhMZynKqBonkQefBhvv0PyyxV3DZ1NkdQrrHMvywpyNaKY0VNb?=
 =?us-ascii?q?ezOEx5zwPafXKm3z/BCpZK7bwVXe0NeQ+qcS5/U0sVTjvAe1FkU893VrycVa03?=
 =?us-ascii?q?yZ5p/SFgodTYrxUlor9xh9v7zVeC096J3b1HJyMai4qCTN2880C+Q/zBagfNBf?=
 =?us-ascii?q?ML2fGQ/2Es0aAdWuKeMwl1ioaBIEIP5d9KouM8y6cPuG3bahPPx8kzK+kWRH/I?=
 =?us-ascii?q?d931qM9iphUOLHw4wJwvCY3gSdUTf8g0ysssT2mYBCeDETEXCzySniBI5NeKJy?=
 =?us-ascii?q?eZwHBnupI82y3t9+nYLiW2ZE9F6/AFMLwNWpeRuOYFPnxw1fyEMXrWahmSSm1T?=
 =?us-ascii?q?x0kiglobaF0yzK3uvtagAHOmlNRGR5iVfsII60j80VXUSybggpkgel6lj+x6RB?=
 =?us-ascii?q?uKt/KGzTS19SfyfqN2FiTrewtr2abs9P6ZMkqyVWXP6nYVCHTL7wuB8a0yLlH2?=
 =?us-ascii?q?tDyzE3bTCqupPlnxNkjGKRNmp8rH3cecto3xfQ+MTcReJN3joBXCR4iyPYBkK/?=
 =?us-ascii?q?P9mq+tWYjYzDvfq9V2KiV51TdzfkzYWbuSu/5G1qBwC/nv+plt3mFwg6zTH019?=
 =?us-ascii?q?1wWSrUqxb8Z5Hh176mPuJ/YkloGFj85tJ6G45klYs8npMQ2XkchpiO+XoHkGHz?=
 =?us-ascii?q?MchU2K7kbXoNQyILzMDR4AT/xEJjKXeJzZrjVnqB2sthe8W6YmQO1yI+9c9KCb?=
 =?us-ascii?q?2Y7LxZnSRvpFq4ohncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zE9+ndGiDL6YuA1dVmj2eow+HSBu9MVwK0zD0Gf86oz/fN?=
 =?us-ascii?q?nQbNQTtgCbkhvajuhVLo4xmeQOhSZ9JW39unglwfYhjRNyxZG6oJSHK2J18aKl?=
 =?us-ascii?q?BR5YMyf5ZsIJ9THrkKZehd2W34G0E5VlGzULWoboTP2yHDITs/TnKxiBEDkmpn?=
 =?us-ascii?q?iHHrrfGBeV6F16oHLXD5CrK3aXKWECwtp4QxmdIFFfjBoQXDUnhZM5EgGqxMr8?=
 =?us-ascii?q?cEZ2/DwR51j4qgdSxeJsLRXwTmDfpAKwYDcuVJefNAZW7h1F50rNM8yR9OdzED?=
 =?us-ascii?q?9D/pG7sAyBMG+bZxlLDWEUXEyLHUvjM6Kq5dnB9eiYG+W/I+HPYbWItexRSfOI?=
 =?us-ascii?q?yYiz3Yth+jaGLt+PMWV6D/0nxkpDWmh0GsTemzUSUiwXijjCb8iBqBen/S13qM?=
 =?us-ascii?q?+//e/vWALu44uPFrRTPc9u+xCwnaeMKeqQiDxlJjZf05MG3WXIx6QH3F4OlyFu?=
 =?us-ascii?q?cCGgEbQeui7MT6LQma5XAwQYayNpM8tI4Lwz3hNQOc7Akd710r94jvgoC1ZKT1?=
 =?us-ascii?q?Dhm8epZdAULGG5Ll/IGEGLNLGeLz3R3873eb+8SaFXjOhMrRKwpC2UE1X9MTWD?=
 =?us-ascii?q?jTXpUxGvPPpIjCGaOhxepY68fgxsCWjlUNLpdBm7PMVrgj0xxL0+nmnKOnIEMT?=
 =?us-ascii?q?hgb0NNqaWd7T9ZgvV6AWBO8mBpIvWEmymH6enVMZIWsfptAiRpmONW+nU6y71J?=
 =?us-ascii?q?7C5aQPx5gjfdrtlro1u+iOmA1iJnUAZSqjZMnI+KvV9tOaPc9plBX3bL5BMM7W?=
 =?us-ascii?q?WKBBQMqNtoEdnvu6FWytjSm6P/MjZC89TI/cQCA8jYMt6IMH0kMUmhJDmBLgYD?=
 =?us-ascii?q?VnaCJWvYigQJmeGY8XC9rZUgrJXo3pYNHOx1TlswQ9wHB0J5EcZKGpB6VTBsxb?=
 =?us-ascii?q?qaitMYzWC5oRLSAdhB+JbKSqTBUr3UND+FgOwcNFMzyrTiINFWb9Wj1g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAACzswxch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUgUBAQELAYEwgjsng3qUJ4FgCCUUlz0UgV8SAQEYEwGHXSI1CA0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBAQEBAgEBAiAEEQgBOAEDAgkBAQUFG?=
 =?us-ascii?q?AICJgICAzEBBQEcBg0GAgEBAYMcgWoDDQgBBJgoPIsNfDOCdwWCRII3DYIUAgY?=
 =?us-ascii?q?SeYl6gRwXgX+BOAyCX4RqgxuCVwKQAzeQOwmGSop/HoFchReCczaHIZkJAgQCB?=
 =?us-ascii?q?AUCBQ8hgSYBggwzGggmCoMnghsMF4NKinQfMoEFAQGODAEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAACzswxch0O0hNFjGwEBAQEDAQEBBwMBAQGBUgUBAQE?=
 =?us-ascii?q?LAYEwgjsng3qUJ4FgCCUUlz0UgV8SAQEYEwGHXSI1CA0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwyCNiQBgmEBAQEBAgEBAiAEEQgBOAEDAgkBAQUFGAICJgICAzEBBQE?=
 =?us-ascii?q?cBg0GAgEBAYMcgWoDDQgBBJgoPIsNfDOCdwWCRII3DYIUAgYSeYl6gRwXgX+BO?=
 =?us-ascii?q?AyCX4RqgxuCVwKQAzeQOwmGSop/HoFchReCczaHIZkJAgQCBAUCBQ8hgSYBggw?=
 =?us-ascii?q?zGggmCoMnghsMF4NKinQfMoEFAQGODAEB?=
X-IronPort-AV: E=Sophos;i="5.56,333,1539673200"; 
   d="scan'208";a="55565075"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 22:22:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726130AbeLIGWf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 9 Dec 2018 01:22:35 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:36426 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726066AbeLIGWe (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 9 Dec 2018 01:22:34 -0500
Received: by mail-pf1-f195.google.com with SMTP id b85so3854075pfc.3
        for <linux-kernel@vger.kernel.org>; Sat, 08 Dec 2018 22:22:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=vrDZhVhESJrgo9I37HsCYlD0UhJd1Z3L7pfxlocMpRY=;
        b=f93ppxyP+g/HMh0XPcIluZMRvd3Kx7I4fKxPVBGqTntU1ePzIyYb7D4Ghe9PmN7GGP
         f75ncJBga2sRv89wuyrzpPTl6mLbvBnuM3R46IFORfeYCacCH3Pm8RouZI2YPrxBIR2Z
         4NVv1f4Re3fVs+3u8+swXH3DByJtcvHXMTDCRABmJvduLRedZrgUxya2cIg/37robvwh
         jlCsWwr8Ilk/qEOr447gVrIYMrBMQoJlw9Ysc5VW725J4lXZ5JB6NGvfY7Uggg4JfxDM
         Wh+4xOu/MbxUCGMb9Oa2o57mOnJqLFXBf+s0dtXt3cA5L/GfPBUQ9qSLzT44sYTchEzC
         TCng==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:subject:to:cc:references:from:message-id
         :date:user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=vrDZhVhESJrgo9I37HsCYlD0UhJd1Z3L7pfxlocMpRY=;
        b=r6CtC092PKt1sD6lGd4ajGVF8L6kAc6lUakO3lZ2JyL12a+m13hKuaFU21Gi/S0WML
         +J9rNZ6Ez4jxutJIv5sFucVh3KkgN36BalrSde4MctKAB7nE4uAejviDyL3dK6mbO/FR
         QZor/7ya/WLe7oLS7spb5BEvVgAnPWaZvjh7jBt8rFsEnKcoCRdfMNPw1dCNXPtznfEu
         UpyWDzQ/3Eu8GypYxz/Z4HVe9qRB6uCyuUwXvt3FUA5cOycyQHvjPG33/aZCGNw+0SCu
         MEdjkveC3OGhXrJpf4hi5eIuEZgOzSzKFIPjUL4opZdtFsVpKwJ7V83GP9yt4MP0DbCX
         PWOg==
X-Gm-Message-State: AA+aEWZrVTJiDBgJHBNd4zMiIxHLX+UXLHjLlb/P4DDVgstbn+aPnj0Q
        F8gdl6eGfAOzvsg3/8UZdIbqk93y
X-Google-Smtp-Source: AFSGD/XO4gVh13T3syywjO/eYJLuwdyIvsSghIlsbQgltVdbi1R3k1ggpuC0qg80BEczY35oF/H9qg==
X-Received: by 2002:a62:9913:: with SMTP id d19mr7992353pfe.107.1544336553506;
        Sat, 08 Dec 2018 22:22:33 -0800 (PST)
Received: from server.roeck-us.net ([2600:1700:e321:62f0:329c:23ff:fee3:9d7c])
        by smtp.gmail.com with ESMTPSA id x27sm19057521pfe.178.2018.12.08.22.22.31
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 08 Dec 2018 22:22:32 -0800 (PST)
Subject: Re: [PATCH] nvme: default to 0 poll queues
To: Jens Axboe <axboe@kernel.dk>
Cc: Christoph Hellwig <hch@lst.de>,
        Keith Busch <keith.busch@intel.com>,
        Sagi Grimberg <sagi@grimberg.me>,
        linux-nvme@lists.infradead.org, linux-kernel@vger.kernel.org
References: <20181209004953.GA11638@roeck-us.net>
 <fa7aabad-774b-4e5b-686f-3696762291c1@kernel.dk>
From: Guenter Roeck <linux@roeck-us.net>
Message-ID: <4ad5653b-1cd4-a770-2290-ca032eeb7072@roeck-us.net>
Date: Sat, 8 Dec 2018 22:22:31 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <fa7aabad-774b-4e5b-686f-3696762291c1@kernel.dk>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/8/18 9:38 PM, Jens Axboe wrote:
> On 12/8/18 5:49 PM, Guenter Roeck wrote:
>> Hi,
>>
>> On Mon, Nov 19, 2018 at 08:18:24AM -0700, Jens Axboe wrote:
>>> We need a better way of configuring this, and given that polling is
>>> (still) a bit niche, let's default to using 0 poll queues. That way
>>> we'll have the same read/write/poll behavior as 4.20, and users that
>>> want to test/use polling are required to do manual configuration of the
>>> number of poll queues.
>>>
>>> Reviewed-by: Christoph Hellwig <hch@lst.de>
>>> Signed-off-by: Jens Axboe <axboe@kernel.dk>
>>> ---
>>
>> This patch results in a boot stall when booting parisc (hppa) images
>> from nvme in qemu.
>>
>> ...
>> Fusion MPT SAS Host driver 3.04.20
>> rcu: INFO: rcu_sched detected stalls on CPUs/tasks:
>> rcu: 	(detected by 0, t=5252 jiffies, g=141, q=22)
>> rcu: All QSes seen, last rcu_sched kthread activity 5252 (-66742--71994), jiffies_till_next_fqs=1, root ->qsmask 0x0
>> kworker/u8:3    R  running task        0    85      2 0x00000004
>> Workqueue: nvme-reset-wq nvme_reset_work
>> Backtrace:
>>   [<10190d20>] show_stack+0x28/0x38
>>   [<101dd1e0>] sched_show_task.part.3+0xc4/0x144
>>   [<101dd290>] sched_show_task+0x30/0x38
>>   [<10221e18>] rcu_check_callbacks+0x760/0x7a4
>>
>> rcu: rcu_sched kthread starved for 5252 jiffies! g141 f0x2 RCU_GP_WAIT_FQS(5) ->state=0x0 ->cpu=0
>> rcu: RCU grace-period kthread stack dump:
>> rcu_sched       R  running task        0    10      2 0x00000000
>> Backtrace:
>>   [<10995b1c>] __schedule+0x214/0x648
>>   [<10995f94>] schedule+0x44/0xa8
>>   [<1099a7c4>] schedule_timeout+0x114/0x1a0
>>   [<10220e70>] rcu_gp_kthread+0x744/0x968
>>   [<101d5438>] kthread+0x154/0x15c
>>   [<1019501c>] ret_from_kernel_thread+0x1c/0x24
>>
>> [ continued ]
>>
>> This is only seen in SMP configurations; non-SMP configurations are ok.
>> Reverting the patch fixes the problem. v4.20-rcX and earlier kernels
>> also boot without problems.
>>
>> For reference, here is the qemu command line. This is with qemu 3.0.
>>
>> qemu-system-hppa -kernel vmlinux -no-reboot \
>> 	-snapshot \
>> 	-device nvme,serial=foo,drive=d0 \
>> 	-drive file=rootfs.ext2,if=none,format=raw,id=d0 \
>> 	-append 'root=/dev/nvme0n1 rw rootwait panic=-1 console=ttyS0,115200 ' \
>> 	-nographic -monitor null
>>
>> Please let me know if you need additional information.
> 
> Hmm, I think the queue reduction case has a logic error. Actually there
> are two bugs:
> 
> 1) Ensure we don't keep overwriting the queue count we ask for
> 2) Don't include poll_queues in the vectors we need
> 
> Untested... And not super pretty. But does this work for you?
> 

It solves the boot problem on parisc/hppa. I didn't test with any other architectures.
Should I run a complete test sequence ?

Guenter

> 
> diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
> index 7732c4979a4e..fe00e19493ae 100644
> --- a/drivers/nvme/host/pci.c
> +++ b/drivers/nvme/host/pci.c
> @@ -2083,7 +2083,7 @@ static void nvme_calc_io_queues(struct nvme_dev *dev, unsigned int nr_io_queues)
>   	}
>   }
>   
> -static int nvme_setup_irqs(struct nvme_dev *dev, int nr_io_queues)
> +static int nvme_setup_irqs(struct nvme_dev *dev, int irq_queues, int pqueues)
>   {
>   	struct pci_dev *pdev = to_pci_dev(dev->dev);
>   	int irq_sets[2];
> @@ -2100,7 +2100,8 @@ static int nvme_setup_irqs(struct nvme_dev *dev, int nr_io_queues)
>   	 * IRQ vector needs.
>   	 */
>   	do {
> -		nvme_calc_io_queues(dev, nr_io_queues);
> +		nvme_calc_io_queues(dev, irq_queues + pqueues);
> +		pqueues = dev->io_queues[HCTX_TYPE_POLL];
>   		irq_sets[0] = dev->io_queues[HCTX_TYPE_DEFAULT];
>   		irq_sets[1] = dev->io_queues[HCTX_TYPE_READ];
>   		if (!irq_sets[1])
> @@ -2111,11 +2112,11 @@ static int nvme_setup_irqs(struct nvme_dev *dev, int nr_io_queues)
>   		 * 1 + 1 queues, just ask for a single vector. We'll share
>   		 * that between the single IO queue and the admin queue.
>   		 */
> -		if (!(result < 0 && nr_io_queues == 1))
> -			nr_io_queues = irq_sets[0] + irq_sets[1] + 1;
> +		if (!(result < 0 || irq_queues == 1))
> +			irq_queues = irq_sets[0] + irq_sets[1] + 1;
>   
> -		result = pci_alloc_irq_vectors_affinity(pdev, nr_io_queues,
> -				nr_io_queues,
> +		result = pci_alloc_irq_vectors_affinity(pdev, irq_queues,
> +				irq_queues,
>   				PCI_IRQ_ALL_TYPES | PCI_IRQ_AFFINITY, &affd);
>   
>   		/*
> @@ -2125,12 +2126,12 @@ static int nvme_setup_irqs(struct nvme_dev *dev, int nr_io_queues)
>   		 * likely does not. Back down to ask for just one vector.
>   		 */
>   		if (result == -ENOSPC) {
> -			nr_io_queues--;
> -			if (!nr_io_queues)
> +			irq_queues--;
> +			if (!irq_queues)
>   				return result;
>   			continue;
>   		} else if (result == -EINVAL) {
> -			nr_io_queues = 1;
> +			irq_queues = 1;
>   			continue;
>   		} else if (result <= 0)
>   			return -EIO;
> @@ -2144,7 +2145,7 @@ static int nvme_setup_io_queues(struct nvme_dev *dev)
>   {
>   	struct nvme_queue *adminq = &dev->queues[0];
>   	struct pci_dev *pdev = to_pci_dev(dev->dev);
> -	int result, nr_io_queues;
> +	int result, want_irqs, nr_io_queues, pqueues;
>   	unsigned long size;
>   
>   	nr_io_queues = max_io_queues();
> @@ -2185,7 +2186,20 @@ static int nvme_setup_io_queues(struct nvme_dev *dev)
>   	 */
>   	pci_free_irq_vectors(pdev);
>   
> -	result = nvme_setup_irqs(dev, nr_io_queues);
> +	/*
> +	 * If we don't get the number of IO queues we asked for, see if we
> +	 * need to adjust the number of poll queues down
> +	 */
> +	pqueues = poll_queues;
> +	if (!pqueues)
> +		want_irqs = nr_io_queues;
> +	else if (pqueues >= nr_io_queues) {
> +		want_irqs = 1;
> +		pqueues = nr_io_queues - 1;
> +	} else
> +		want_irqs = nr_io_queues - pqueues;
> +
> +	result = nvme_setup_irqs(dev, want_irqs, pqueues);
>   	if (result <= 0)
>   		return -EIO;
>   
> 

