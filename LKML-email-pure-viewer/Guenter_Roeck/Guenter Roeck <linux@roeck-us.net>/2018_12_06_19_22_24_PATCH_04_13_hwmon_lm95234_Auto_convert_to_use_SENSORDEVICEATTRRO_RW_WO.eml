Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:52:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 92B3D5804F9;
	Thu,  6 Dec 2018 11:24:05 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 11:24:04 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A1LFxpBZuuMTLVJUTbJXyChL/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm5ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOuRXr4fmp1sWrxazHhWgCP/1xzNUnHL6wbE23uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zVotXoKqgSV/y1w7fSzT7ec/1W3iny55TLchs8pvyMWbNwcczMyUggDA7FlFKQ?=
 =?us-ascii?q?ppL5MDOWz+gNrnOb4/BmVe2xl24qsgd8qSWhyMcrj4nGnIMVylbc+CV2wYY1Od?=
 =?us-ascii?q?24SFNgbtK+DJRQsCSaOo1rSc0hW2FloDg2xqECtJKhYSQHxoorywTCZ/GEb4SE?=
 =?us-ascii?q?+BPuWeSJLTtmhX9pZK6zihOv/UWi1uHwSsy530hEoyZbj9XBs3EA2wLd6sSbT/?=
 =?us-ascii?q?Zw8Fmt1DKT2A3W9O1JL040laTeJp4v3LE/iJQevEHHEyDrmkj5kKmbfVg+9Oey?=
 =?us-ascii?q?8eToeLDmq4ecN4BqjgH+NbwjmtKwAesmKAgCRWub9vqm1L3l40L5RK9Gjvoskq?=
 =?us-ascii?q?nWqJzaJMIbqbClAwJNzIov9xKyAy273NkWg3ULNk9JdRGbg4TzOlzDIuj0DfKl?=
 =?us-ascii?q?jFStlDdryerGPrrkApjVKnjDkbHhfaty6kJFywo808pf55RKBbEFOf7zXUHwtN?=
 =?us-ascii?q?rGAR8jKAG03ennB8tn1o8EWmKAHLWZMKXMvl+M/O4vJPOMZIANtDbnN/cl/+Lu?=
 =?us-ascii?q?jWM+mVIFeamp3JgXZ26iEvVpPkWUen7sgtYHEWcXsQsyVu3qiFueUTFNY3a+Rb?=
 =?us-ascii?q?4z5jY+CIi+F4fMWpitgKCd3Ce8BpBWZnpJClGQEXjycIWIQfcMaD+ILc9nnTwJ?=
 =?us-ascii?q?TryhS44n1RGzuw720btnLuzI+iIGsZLvzsR65+rWlRsq7zx7E9yd032RT2Fzhm?=
 =?us-ascii?q?4IRTg2075lrUx+zVeD1654g/tDGNxX5vNJVBo6NJHGw+x7DdDyRhzOftOTRFm6?=
 =?us-ascii?q?RdWmBCk7TsgtzN8Wf0Z9B9KigwjZ0CqxA78VkL+LCIYu8q3G3Xj8PMJ9y3fA1K?=
 =?us-ascii?q?k8gFgqWMpPNWu6hqFh8wjfHZLGk0Kcl6yyb6QTwDbN9HufzWqJpExYUxR/UaPf?=
 =?us-ascii?q?UXAbZ0vZt9L55kzZQr+qCLQnNBZByMGYJqtLbN3pkUtJRPP5NNvCZGKxnn+6BQ?=
 =?us-ascii?q?yUybOUcIrqZ2Id0T3AB0cejQAc42yKNQgkCSenuGLREjpuGVXrY0Pv9Ol+rGi2?=
 =?us-ascii?q?Tks1zwGMck1g2KC5+h8ThfyAVfwT2qgItzsmqzVxBFy9xc7ZC8Kcpwp9e6VRec?=
 =?us-ascii?q?4y701Z1W3HrQB9PoavL6Z5hlEAdQR6pEfu1xRxCoVdnskmtnIqzAxuKa2G1FNN?=
 =?us-ascii?q?bS+X3Zf1OrfPMGn94Aiva7LK2lHZyNuW5qYP6PE/q1X/vAGoFlAu82l939lSyX?=
 =?us-ascii?q?uc4pTKDAwdUZ/qVkY39h56p6zVYyUn5oPU02FsPrewsjPYx90pA+4lwA66f9hD?=
 =?us-ascii?q?KKOECBPyE8oCCse0LOwlhVeoYQwEPexI76E0It6peOGA2K6oO+ZggimrjWBG4I?=
 =?us-ascii?q?B7z0KN+DBwSu/O35YZ3f6Y2hGLWCv7jFekqsr3g5xLZSkOHmqjzijpHI5QZrBo?=
 =?us-ascii?q?cYkXE2uvIs23yc94h57iQHNY8F+jB1Ub2M6mYxaSblr93RFO2kQTu3CohSy4zz?=
 =?us-ascii?q?lsmTEzsqWfxDDOw/jldBcfIG5LRXVtgk32IYepiNAWRk6oYBYzlBuk/Er127JU?=
 =?us-ascii?q?pKBiIGbNW0dIeC72InpmUquxsLqCfsFO5IkpsSVRTOSzf1SaRqThrBsd1iPpB3?=
 =?us-ascii?q?FeyywjdzG2ppX5mAR3iWKcLHpprHvVY9pwxQrZ5NHHQf5R3zwGRDR3iDXNB1i8?=
 =?us-ascii?q?OcWp8suQl5vZru++UGehXIVJcSb31YOAqDe75WpyDB29hf+zgN7nEQs90SPhzN?=
 =?us-ascii?q?llTybIrBX9Yontyau6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Ajk11dkLn6TxYL5V3Odz9BlZ9m7ZGMWxy0849pLCK?=
 =?us-ascii?q?eS8LxLgy91rkCkogLWZPh3hi0dxuc26H4Gn+EJvxIgziaHDbATB0VYPTHsmA6O?=
 =?us-ascii?q?79Cxt6hXYGevcb6t1Etxh9yhDbeCoh1CV3b9YJstAShw7sBnOlLWzHLz8p3keM?=
 =?us-ascii?q?XXbd8Lsx2UkhTAgPJPJJM/iPUKnjZnNnznvXI+1eE7lxNu0Iq+vIiGLWVt4a24?=
 =?us-ascii?q?DgRZNj3ze8Mc5DXtgbxCkcaR2oClBo9hFSkTXJv0UfKoFyoftejgNwaLCjE9q2?=
 =?us-ascii?q?2UGbzCHQ+E80dmrmnCE5SqN3GROXkYws9uRBibJExDng8UWC82kYI+FgCv3Mbh?=
 =?us-ascii?q?alt25igN5l7krRtB0vlnOAP4UmfbuQekcDM0SIWEIRpS7wFC4VrVMMOE4uJyGS?=
 =?us-ascii?q?FY4oOurAiXJmOHYARICHkDWlaYCFD7Irmu+d7A/vCaBuWkKvvBf66OpfZCV/uS?=
 =?us-ascii?q?xpKvz4hm/yuKNsqVJXlvFPk72ktFXXBkFMXVgTQPSyoLly3Ta86Xvguz+ipyrs?=
 =?us-ascii?q?qn6vTkRBrv5ZeTC7tVKdhu+xe2gbqaN+6Nnil5LyxU1ogLxX/Ox7gSx1oSiyBo?=
 =?us-ascii?q?dzmwHrUMry/NTKTMmqBJCx4XcT98NMxN76gkxAlCJdbbis/p1r5/lvM1C0lKVV?=
 =?us-ascii?q?3imsGqZMwGOWK9NEnABEaEKruGPyDLw9rsbKO4SL1QivhUthKqtTaaFU/jIiqM?=
 =?us-ascii?q?lz3zWx+zNuFMiTmRPAZCt4GlbhZtFW/jQcr8ZR2mK9B3lyM5wL0uinPONG4RKj?=
 =?us-ascii?q?x8c0JLrr2N4iJUmPR/G2pd7nV7KemIgTqW7+7dKpwOq/tkHjx0l/5G4HQ907ZV?=
 =?us-ascii?q?8CBERPlvlCTOtNJhv1GmnfeJyjd8VBpOqzBLhJ+EvEl4OKXZ8IVAVmjA/B4X8W?=
 =?us-ascii?q?qQDBEKrcN/CtLzo6BQ1sTPlKXrJTZC6d3U+84cB8nSKM2fMXshMQDmGDjbDAYe?=
 =?us-ascii?q?ST6rNGffh1FSkf2I932VqIQ6pYbomJYUVrBbU1k1RbsmDRFhHdofMNJ3QTYjl5?=
 =?us-ascii?q?aFg8MSo3mzth/cQINdpJ+UeOiVBKDANTufkbReLyEPzLj7ZdAXN4vmy2R4bVRx?=
 =?us-ascii?q?n8HXAAzWUMwb8X4pVRM9vEgYqCs2dWY0wU+wL1r1uHI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAADEdglch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIE5gQInjBOMDoIhkkGEeYF2DwEBGA0GAYdXIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIkGQE4AQMCCQEBBUsDMQEFARwZBYMcAYFpA?=
 =?us-ascii?q?xUBBAqaLjyMCTOCdwWFAQ2CFAIBBRKHXoMTgRwXgX+BEYYwAoc8Aok1hn6QLAm?=
 =?us-ascii?q?HBIpEFolih1QsjU6KawIEAgQFAgUPIYElgg0zGggmCoMnghs1gziKdB8ygQIDA?=
 =?us-ascii?q?QEhE4oGAQE?=
X-IPAS-Result: =?us-ascii?q?A0AYAADEdglch0O0hNFkHQEBBQEHBQGBUQgBCwGBMIE5gQI?=
 =?us-ascii?q?njBOMDoIhkkGEeYF2DwEBGA0GAYdXIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIkGQE4AQMCCQEBBUsDMQEFARwZBYMcAYFpAxUBBAqaLjyMCTO?=
 =?us-ascii?q?CdwWFAQ2CFAIBBRKHXoMTgRwXgX+BEYYwAoc8Aok1hn6QLAmHBIpEFolih1Qsj?=
 =?us-ascii?q?U6KawIEAgQFAgUPIYElgg0zGggmCoMnghs1gziKdB8ygQIDAQEhE4oGAQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="65673548"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 06 Dec 2018 11:24:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726140AbeLFTWr (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 14:22:47 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:36288 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726093AbeLFTWq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 14:22:46 -0500
Received: by mail-pf1-f195.google.com with SMTP id b85so654815pfc.3;
        Thu, 06 Dec 2018 11:22:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=RHPPEPnYKHow4XGRcU1oCogeUqJe4B58l6SUQxY7qlQ=;
        b=vJ8tSMTp1olSxSnlpoO1WP8LWiT//felO/zNtrJNIgKr8WEthMkt69bkVOI5H0SnmY
         rQUhVDURrDyyVSXS6tsM66/Lu2IYIrINq00AtIxelZMJOCMOHNBmmIbKK8B7HMrPE4Zj
         tFFL0qQQB+lL1AN37qi+L9kbqu2OSni+6CRSJEMojs96EErDP2dHgWnmVu29PFIx0+Ks
         ejl/AdOMH8ceXXy9yj60twyxFr7jSv14Axz87X2cqplFrvmczD+1rLRqDD0gU67gWwih
         1s7x+EkTkNcQlfDswT1P+A5XcEOlWexRVUm+4/krkt1unxYFdghGi+n1UhWayUd3nod2
         taUQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
         :in-reply-to:references;
        bh=RHPPEPnYKHow4XGRcU1oCogeUqJe4B58l6SUQxY7qlQ=;
        b=S8sKEZvJl9eeg4pOktRqO4t/0hRGfQadJnc6C2O8HzOEhwv17gebsisHWMjb5/tdml
         DXTdno0HK3vNpi0x16gXYuDpzIp55mosa8lACqiN4joZ3fiaL3w9Z2QvRHl3lUbBWgWj
         J46jd/n8UzXY/UFq05VGFnVZps6/DqA9FB9gl5qG7TsjBbUQn47jURZzC72vPxEpHFN3
         Ek3HnpXkLfdVJPNx3Hzzg5HHcdWGSalihARpd7U1z5wW19jO/IsDNPowcZEtX8fi65wD
         /U2LWlaXFvpuIuLyTF4UXuO3uZW3D55DFAnVwrXTX4lOoDDu2GpbvwtsxyTfDCwXbw+b
         RNHw==
X-Gm-Message-State: AA+aEWZ1CnkcXR4o2slrBaT23LrbX1DJwBrMdq613Mc2CiMXW8uvX53a
        tVGmKDPGoTL3+w9jQWqa2tdxu2jQ
X-Google-Smtp-Source: AFSGD/XgmQFZRun18xzeX1ohJ6zDI+WLoC/wyEo+tMYj6IkQ9o1cwnVDxuiet/f9Zhyd1EIPjtMAVA==
X-Received: by 2002:a62:26c7:: with SMTP id m190mr30321885pfm.79.1544124164378;
        Thu, 06 Dec 2018 11:22:44 -0800 (PST)
Received: from localhost ([2600:1700:e321:62f0:329c:23ff:fee3:9d7c])
        by smtp.gmail.com with ESMTPSA id y6sm1685694pfd.104.2018.12.06.11.22.43
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 06 Dec 2018 11:22:43 -0800 (PST)
From: Guenter Roeck <linux@roeck-us.net>
To: linux-hwmon@vger.kernel.org
Cc: Jean Delvare <jdelvare@suse.com>, linux-kernel@vger.kernel.org,
        Guenter Roeck <linux@roeck-us.net>
Subject: [PATCH 04/13] hwmon: (lm95234) Auto-convert to use SENSOR_DEVICE_ATTR_{RO, RW, WO}
Date: Thu,  6 Dec 2018 11:22:24 -0800
Message-Id: <1544124153-23961-5-git-send-email-linux@roeck-us.net>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544124153-23961-1-git-send-email-linux@roeck-us.net>
References: <1544124153-23961-1-git-send-email-linux@roeck-us.net>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Auto-conversion was done done using the coccinelle script at
https://github.com/groeck/coccinelle-patches/blob/master/hwmon/sensor-devattr-w6.cocci

Signed-off-by: Guenter Roeck <linux@roeck-us.net>
---
 drivers/hwmon/lm95234.c | 161 ++++++++++++++++++++----------------------------
 1 file changed, 67 insertions(+), 94 deletions(-)

diff --git a/drivers/hwmon/lm95234.c b/drivers/hwmon/lm95234.c
index c7fcc9e7f57a..02cd48bdde8d 100644
--- a/drivers/hwmon/lm95234.c
+++ b/drivers/hwmon/lm95234.c
@@ -211,7 +211,7 @@ static int lm95234_update_device(struct lm95234_data *data)
 	return ret;
 }
 
-static ssize_t show_temp(struct device *dev, struct device_attribute *attr,
+static ssize_t temp_show(struct device *dev, struct device_attribute *attr,
 			 char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -225,8 +225,8 @@ static ssize_t show_temp(struct device *dev, struct device_attribute *attr,
 		       DIV_ROUND_CLOSEST(data->temp[index] * 125, 32));
 }
 
-static ssize_t show_alarm(struct device *dev,
-			  struct device_attribute *attr, char *buf)
+static ssize_t alarm_show(struct device *dev, struct device_attribute *attr,
+			  char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
 	u32 mask = to_sensor_dev_attr(attr)->index;
@@ -238,7 +238,7 @@ static ssize_t show_alarm(struct device *dev,
 	return sprintf(buf, "%u", !!(data->status & mask));
 }
 
-static ssize_t show_type(struct device *dev, struct device_attribute *attr,
+static ssize_t type_show(struct device *dev, struct device_attribute *attr,
 			 char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -251,8 +251,8 @@ static ssize_t show_type(struct device *dev, struct device_attribute *attr,
 	return sprintf(buf, data->sensor_type & mask ? "1\n" : "2\n");
 }
 
-static ssize_t set_type(struct device *dev, struct device_attribute *attr,
-			const char *buf, size_t count)
+static ssize_t type_store(struct device *dev, struct device_attribute *attr,
+			  const char *buf, size_t count)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
 	unsigned long val;
@@ -282,7 +282,7 @@ static ssize_t set_type(struct device *dev, struct device_attribute *attr,
 	return count;
 }
 
-static ssize_t show_tcrit2(struct device *dev, struct device_attribute *attr,
+static ssize_t tcrit2_show(struct device *dev, struct device_attribute *attr,
 			   char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -295,8 +295,8 @@ static ssize_t show_tcrit2(struct device *dev, struct device_attribute *attr,
 	return sprintf(buf, "%u", data->tcrit2[index] * 1000);
 }
 
-static ssize_t set_tcrit2(struct device *dev, struct device_attribute *attr,
-			  const char *buf, size_t count)
+static ssize_t tcrit2_store(struct device *dev, struct device_attribute *attr,
+			    const char *buf, size_t count)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
 	int index = to_sensor_dev_attr(attr)->index;
@@ -320,7 +320,7 @@ static ssize_t set_tcrit2(struct device *dev, struct device_attribute *attr,
 	return count;
 }
 
-static ssize_t show_tcrit2_hyst(struct device *dev,
+static ssize_t tcrit2_hyst_show(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -335,7 +335,7 @@ static ssize_t show_tcrit2_hyst(struct device *dev,
 		       ((int)data->tcrit2[index] - (int)data->thyst) * 1000);
 }
 
-static ssize_t show_tcrit1(struct device *dev, struct device_attribute *attr,
+static ssize_t tcrit1_show(struct device *dev, struct device_attribute *attr,
 			   char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -344,8 +344,8 @@ static ssize_t show_tcrit1(struct device *dev, struct device_attribute *attr,
 	return sprintf(buf, "%u", data->tcrit1[index] * 1000);
 }
 
-static ssize_t set_tcrit1(struct device *dev, struct device_attribute *attr,
-			  const char *buf, size_t count)
+static ssize_t tcrit1_store(struct device *dev, struct device_attribute *attr,
+			    const char *buf, size_t count)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
 	int index = to_sensor_dev_attr(attr)->index;
@@ -369,7 +369,7 @@ static ssize_t set_tcrit1(struct device *dev, struct device_attribute *attr,
 	return count;
 }
 
-static ssize_t show_tcrit1_hyst(struct device *dev,
+static ssize_t tcrit1_hyst_show(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -384,9 +384,9 @@ static ssize_t show_tcrit1_hyst(struct device *dev,
 		       ((int)data->tcrit1[index] - (int)data->thyst) * 1000);
 }
 
-static ssize_t set_tcrit1_hyst(struct device *dev,
-			       struct device_attribute *attr,
-			       const char *buf, size_t count)
+static ssize_t tcrit1_hyst_store(struct device *dev,
+				 struct device_attribute *attr,
+				 const char *buf, size_t count)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
 	int index = to_sensor_dev_attr(attr)->index;
@@ -411,7 +411,7 @@ static ssize_t set_tcrit1_hyst(struct device *dev,
 	return count;
 }
 
-static ssize_t show_offset(struct device *dev, struct device_attribute *attr,
+static ssize_t offset_show(struct device *dev, struct device_attribute *attr,
 			   char *buf)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
@@ -424,8 +424,8 @@ static ssize_t show_offset(struct device *dev, struct device_attribute *attr,
 	return sprintf(buf, "%d", data->toffset[index] * 500);
 }
 
-static ssize_t set_offset(struct device *dev, struct device_attribute *attr,
-			  const char *buf, size_t count)
+static ssize_t offset_store(struct device *dev, struct device_attribute *attr,
+			    const char *buf, size_t count)
 {
 	struct lm95234_data *data = dev_get_drvdata(dev);
 	int index = to_sensor_dev_attr(attr)->index;
@@ -492,80 +492,53 @@ static ssize_t update_interval_store(struct device *dev,
 	return count;
 }
 
-static SENSOR_DEVICE_ATTR(temp1_input, S_IRUGO, show_temp, NULL, 0);
-static SENSOR_DEVICE_ATTR(temp2_input, S_IRUGO, show_temp, NULL, 1);
-static SENSOR_DEVICE_ATTR(temp3_input, S_IRUGO, show_temp, NULL, 2);
-static SENSOR_DEVICE_ATTR(temp4_input, S_IRUGO, show_temp, NULL, 3);
-static SENSOR_DEVICE_ATTR(temp5_input, S_IRUGO, show_temp, NULL, 4);
-
-static SENSOR_DEVICE_ATTR(temp2_fault, S_IRUGO, show_alarm, NULL,
-			  BIT(0) | BIT(1));
-static SENSOR_DEVICE_ATTR(temp3_fault, S_IRUGO, show_alarm, NULL,
-			  BIT(2) | BIT(3));
-static SENSOR_DEVICE_ATTR(temp4_fault, S_IRUGO, show_alarm, NULL,
-			  BIT(4) | BIT(5));
-static SENSOR_DEVICE_ATTR(temp5_fault, S_IRUGO, show_alarm, NULL,
-			  BIT(6) | BIT(7));
-
-static SENSOR_DEVICE_ATTR(temp2_type, S_IWUSR | S_IRUGO, show_type, set_type,
-			  BIT(1));
-static SENSOR_DEVICE_ATTR(temp3_type, S_IWUSR | S_IRUGO, show_type, set_type,
-			  BIT(2));
-static SENSOR_DEVICE_ATTR(temp4_type, S_IWUSR | S_IRUGO, show_type, set_type,
-			  BIT(3));
-static SENSOR_DEVICE_ATTR(temp5_type, S_IWUSR | S_IRUGO, show_type, set_type,
-			  BIT(4));
-
-static SENSOR_DEVICE_ATTR(temp1_max, S_IWUSR | S_IRUGO, show_tcrit1,
-			  set_tcrit1, 0);
-static SENSOR_DEVICE_ATTR(temp2_max, S_IWUSR | S_IRUGO, show_tcrit2,
-			  set_tcrit2, 0);
-static SENSOR_DEVICE_ATTR(temp3_max, S_IWUSR | S_IRUGO, show_tcrit2,
-			  set_tcrit2, 1);
-static SENSOR_DEVICE_ATTR(temp4_max, S_IWUSR | S_IRUGO, show_tcrit1,
-			  set_tcrit1, 3);
-static SENSOR_DEVICE_ATTR(temp5_max, S_IWUSR | S_IRUGO, show_tcrit1,
-			  set_tcrit1, 4);
-
-static SENSOR_DEVICE_ATTR(temp1_max_hyst, S_IWUSR | S_IRUGO, show_tcrit1_hyst,
-			  set_tcrit1_hyst, 0);
-static SENSOR_DEVICE_ATTR(temp2_max_hyst, S_IRUGO, show_tcrit2_hyst, NULL, 0);
-static SENSOR_DEVICE_ATTR(temp3_max_hyst, S_IRUGO, show_tcrit2_hyst, NULL, 1);
-static SENSOR_DEVICE_ATTR(temp4_max_hyst, S_IRUGO, show_tcrit1_hyst, NULL, 3);
-static SENSOR_DEVICE_ATTR(temp5_max_hyst, S_IRUGO, show_tcrit1_hyst, NULL, 4);
-
-static SENSOR_DEVICE_ATTR(temp1_max_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(0 + 8));
-static SENSOR_DEVICE_ATTR(temp2_max_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(1 + 16));
-static SENSOR_DEVICE_ATTR(temp3_max_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(2 + 16));
-static SENSOR_DEVICE_ATTR(temp4_max_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(3 + 8));
-static SENSOR_DEVICE_ATTR(temp5_max_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(4 + 8));
-
-static SENSOR_DEVICE_ATTR(temp2_crit, S_IWUSR | S_IRUGO, show_tcrit1,
-			  set_tcrit1, 1);
-static SENSOR_DEVICE_ATTR(temp3_crit, S_IWUSR | S_IRUGO, show_tcrit1,
-			  set_tcrit1, 2);
-
-static SENSOR_DEVICE_ATTR(temp2_crit_hyst, S_IRUGO, show_tcrit1_hyst, NULL, 1);
-static SENSOR_DEVICE_ATTR(temp3_crit_hyst, S_IRUGO, show_tcrit1_hyst, NULL, 2);
-
-static SENSOR_DEVICE_ATTR(temp2_crit_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(1 + 8));
-static SENSOR_DEVICE_ATTR(temp3_crit_alarm, S_IRUGO, show_alarm, NULL,
-			  BIT(2 + 8));
-
-static SENSOR_DEVICE_ATTR(temp2_offset, S_IWUSR | S_IRUGO, show_offset,
-			  set_offset, 0);
-static SENSOR_DEVICE_ATTR(temp3_offset, S_IWUSR | S_IRUGO, show_offset,
-			  set_offset, 1);
-static SENSOR_DEVICE_ATTR(temp4_offset, S_IWUSR | S_IRUGO, show_offset,
-			  set_offset, 2);
-static SENSOR_DEVICE_ATTR(temp5_offset, S_IWUSR | S_IRUGO, show_offset,
-			  set_offset, 3);
+static SENSOR_DEVICE_ATTR_RO(temp1_input, temp, 0);
+static SENSOR_DEVICE_ATTR_RO(temp2_input, temp, 1);
+static SENSOR_DEVICE_ATTR_RO(temp3_input, temp, 2);
+static SENSOR_DEVICE_ATTR_RO(temp4_input, temp, 3);
+static SENSOR_DEVICE_ATTR_RO(temp5_input, temp, 4);
+
+static SENSOR_DEVICE_ATTR_RO(temp2_fault, alarm, BIT(0) | BIT(1));
+static SENSOR_DEVICE_ATTR_RO(temp3_fault, alarm, BIT(2) | BIT(3));
+static SENSOR_DEVICE_ATTR_RO(temp4_fault, alarm, BIT(4) | BIT(5));
+static SENSOR_DEVICE_ATTR_RO(temp5_fault, alarm, BIT(6) | BIT(7));
+
+static SENSOR_DEVICE_ATTR_RW(temp2_type, type, BIT(1));
+static SENSOR_DEVICE_ATTR_RW(temp3_type, type, BIT(2));
+static SENSOR_DEVICE_ATTR_RW(temp4_type, type, BIT(3));
+static SENSOR_DEVICE_ATTR_RW(temp5_type, type, BIT(4));
+
+static SENSOR_DEVICE_ATTR_RW(temp1_max, tcrit1, 0);
+static SENSOR_DEVICE_ATTR_RW(temp2_max, tcrit2, 0);
+static SENSOR_DEVICE_ATTR_RW(temp3_max, tcrit2, 1);
+static SENSOR_DEVICE_ATTR_RW(temp4_max, tcrit1, 3);
+static SENSOR_DEVICE_ATTR_RW(temp5_max, tcrit1, 4);
+
+static SENSOR_DEVICE_ATTR_RW(temp1_max_hyst, tcrit1_hyst, 0);
+static SENSOR_DEVICE_ATTR_RO(temp2_max_hyst, tcrit2_hyst, 0);
+static SENSOR_DEVICE_ATTR_RO(temp3_max_hyst, tcrit2_hyst, 1);
+static SENSOR_DEVICE_ATTR_RO(temp4_max_hyst, tcrit1_hyst, 3);
+static SENSOR_DEVICE_ATTR_RO(temp5_max_hyst, tcrit1_hyst, 4);
+
+static SENSOR_DEVICE_ATTR_RO(temp1_max_alarm, alarm, BIT(0 + 8));
+static SENSOR_DEVICE_ATTR_RO(temp2_max_alarm, alarm, BIT(1 + 16));
+static SENSOR_DEVICE_ATTR_RO(temp3_max_alarm, alarm, BIT(2 + 16));
+static SENSOR_DEVICE_ATTR_RO(temp4_max_alarm, alarm, BIT(3 + 8));
+static SENSOR_DEVICE_ATTR_RO(temp5_max_alarm, alarm, BIT(4 + 8));
+
+static SENSOR_DEVICE_ATTR_RW(temp2_crit, tcrit1, 1);
+static SENSOR_DEVICE_ATTR_RW(temp3_crit, tcrit1, 2);
+
+static SENSOR_DEVICE_ATTR_RO(temp2_crit_hyst, tcrit1_hyst, 1);
+static SENSOR_DEVICE_ATTR_RO(temp3_crit_hyst, tcrit1_hyst, 2);
+
+static SENSOR_DEVICE_ATTR_RO(temp2_crit_alarm, alarm, BIT(1 + 8));
+static SENSOR_DEVICE_ATTR_RO(temp3_crit_alarm, alarm, BIT(2 + 8));
+
+static SENSOR_DEVICE_ATTR_RW(temp2_offset, offset, 0);
+static SENSOR_DEVICE_ATTR_RW(temp3_offset, offset, 1);
+static SENSOR_DEVICE_ATTR_RW(temp4_offset, offset, 2);
+static SENSOR_DEVICE_ATTR_RW(temp5_offset, offset, 3);
 
 static DEVICE_ATTR_RW(update_interval);
 
-- 
2.7.4

