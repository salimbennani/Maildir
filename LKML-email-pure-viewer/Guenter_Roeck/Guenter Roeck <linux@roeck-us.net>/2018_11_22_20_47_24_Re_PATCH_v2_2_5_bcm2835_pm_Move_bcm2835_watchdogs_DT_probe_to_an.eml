Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:32:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EA47E58037D;
	Thu, 22 Nov 2018 12:47:56 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 22 Nov 2018 12:47:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AMHb33BSA/0Ma/wF8ZpHP/jAnFdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YhyPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZH42y?=
 =?us-ascii?q?cYUPAeoCM+hWoYbyqFkBogexCwm3HOPiyCRFhmP00KAgz+gtDQ/L0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO600anH0zPDb+9I1jfn9YPGbhchru+QUrJzbMHczk0vFwLDjlWN?=
 =?us-ascii?q?po3oJCmV1uMTvGeH7OpsTP+vi3U9pwF3vDev2t4hh4/UjYwW0lDJ7Tt1zJoxKN?=
 =?us-ascii?q?GiVUJ2b8CoHIFNuyyZK4d6WMIvTmNwtCoky7AKpYK3cS0XxJkl2xLTd/mKfJaG?=
 =?us-ascii?q?7x79SeqcJDZ1iGxreL6jghu//1asx+ngWcSxzlpHoCRFktfJu3ADyRPc9MaKR/?=
 =?us-ascii?q?5580i82zuAywbe4fxeL08uj6rUMZshz6YwlpUNtUTDGTf7mFv5jKCIbEUo4Ouo?=
 =?us-ascii?q?5Pr9YrXguJCcM5V4igbkMqQhgsC/AOI4PRYSX2WD5+iwyLnu8VfkTLhEkPE6iL?=
 =?us-ascii?q?TVvZPGKcgBp6O0ARdZ0oM55Ba+Czem3s4YnX4CLF9dfBKHjo7pO0zBIfzhDvew?=
 =?us-ascii?q?nU6skDF1yPDCJ7HhBZvMLn7dn7f7Zrt99UFcxxQpzdxF5JJbFKsBIPTtVU/1rt?=
 =?us-ascii?q?DYCQU5MwOsz+b9FNp9zp8eWX6IAqKBNKPSsFyI6fw1L+iDeY8YozL9K/kj5/7z?=
 =?us-ascii?q?gn41g14dfa+13ZQJbHC0BOhpI0KcYXD0mNcODX8KvhYiTOztkFCCUSRcZ3euX6?=
 =?us-ascii?q?0m4TE3EoKmDZrZSYCrj7yMxyO7HpxQZmBbBVGAC3bod4OYW/gSbCKeONNukjsB?=
 =?us-ascii?q?VbK5UY8uyQmutBPmy7pgNufU+CoYuoz52Nh24O3Tkxcy9TtvAsSZ0mGNSXx0n2?=
 =?us-ascii?q?wSSz832qB/vVJyylOZ3adkhPxYEMRZ5+lVXQciKZ7c0+t6BsjoVQLafteJT1Wm?=
 =?us-ascii?q?Ts+8AT4rTNI82NsOY0d7G9W/gRHPxSuqA7kJl7OVAJw46L7T33/0J8xl0XbJyL?=
 =?us-ascii?q?Ehj0U6QstILWCmhbRw9w7JC47NkkWWjaCqdasH0S7J9WeDy3eOvU5CXA5xV6XF?=
 =?us-ascii?q?QW4QZk/Modvl4UPCSqekCa47PQtZ1c6CNqxKZ8X0glpcWvfsJs7SY2KrlGe2Hh?=
 =?us-ascii?q?aH2LWMYI3ue2Ue2SXdDFMJkwQS/XaAKAg/CT2to2PYDDxyC13vZ1ng/vV5qHO+?=
 =?us-ascii?q?VkU01R2Fb1V917qp/R4YneGTROkN3r0aoishqy97HFCm393IDdqNvA5hfKRaYd?=
 =?us-ascii?q?Mg71ZLz2PZtwphPpO+K6BunEIRcwNyv0n2zRV4Fp1AkdQ2rHMt1AdyNaOY0FZG?=
 =?us-ascii?q?dzOE3ZDxOqfbKnXo8BCoca7W3lDe0NCZ+qoU7PQ4qlPjvBymF0Y48nVn1cVV3G?=
 =?us-ascii?q?WY5pnQEAUSVpfxWF4t9xdmv7HafjU954TM2HJ2Nam7rDDD1MwpBec/0RmgYspQ?=
 =?us-ascii?q?P7mCFA/xFM0aGdOjKOgrm1ivcxIFM/pe9K8yP8O6afSG3LSnM/pnnDKjlW5H+p?=
 =?us-ascii?q?xy0lqQ9ypgTe7Fx5YEw+yC0gSbTTv9jVehvdrxmYBLfjwSGmu/yS75BI9efKFy?=
 =?us-ascii?q?fIALCXuwLM2z3Nlxm5ntW3tA/l65G1wGwNOpeQaVb1Hlxw1Q1FgYrma9mSSlyD?=
 =?us-ascii?q?x4iTcpobSF3CzP2ujtaAAIOmpWS2Z8l1fsJo60gsseXEipaQgpiRSk6Vz7x6hd?=
 =?us-ascii?q?uKRwMW3TTV1UcCjxKmFoSrGwuaaaY85T9JMotj1aUeS9YVyASr/xuQAa0z7lH2?=
 =?us-ascii?q?ZFwDA7djequoj2nhBgiWKdKmpzo2Tdec1q2Rjf49ncT+ZL3jUaXCl4lSXXBl+k?=
 =?us-ascii?q?Mtmr59qUjZTDsuO5V267TZ1cayrrzYCBtCu9+2JqBwayn/Symt3hDAg73jX319?=
 =?us-ascii?q?hsVSXUshn8ZpPn2Li9MeJiZkNoHkPz69JmGoFilYs9nJER1mIdhpmP/3oHkGHz?=
 =?us-ascii?q?PM5f2aL/anoNWDEKz8TU4AjjxE1sMHaJy5jlWXWax8trf8O6bX8O2iIh88BKD7?=
 =?us-ascii?q?+Z7L9ekit0uFa4rR/RbuJ7njcS0vYu7H8ag+cUuAsi1CmdA7YSHVVGMizojRiH?=
 =?us-ascii?q?89e+rKBPbma1bbewzFZ+ncymDLyapwFcWXX5dY04ES5+8Mp/K07M32Pp6o7/Zt?=
 =?us-ascii?q?bQd90TuwaQkxfBiehVNZ0wmuALhSphJWLyo3klx/Qnghxp2JGwpJKHJHl1/KKl?=
 =?us-ascii?q?Hh5YMSX4Z98U+jHol6pfn9yZ34ayHpV6ATULXYDlTfapEDIUqPTmOByCEDw6qn?=
 =?us-ascii?q?eHB7XfGRWT51thr3LKC5qrLW2YJGEFzdV+QxmQPFdQjxoTXDU+g541DASqxNH6?=
 =?us-ascii?q?fUd95zAR4EP4qxRWxuJpMRn/TnnQpAOyZjgoT5ifKQJc7hte6EfNLcye8uVzEj?=
 =?us-ascii?q?la/pK7qQyCNHebax5UDW0TWUyEGlPjPqSo5dba6OiVHe6+L/rIYbWTpu1STfaI?=
 =?us-ascii?q?xZSz0oR4+zaALNmAPn5nD/cjwEpMQWh5G9jFmzUIUyEWlyXNb9OCpBeh4CJ3qN?=
 =?us-ascii?q?qz8O/sWALp6ouCEL9SMdRp+xCrjqaPLe+QhCBlKTlG0pMA32PHyL8a3FQKkSFh?=
 =?us-ascii?q?ayGtEagctS7KVK/QmrFYDx8YayNwNctE9aE83hNKOc7UlNz1zKN4juUuBldBVF?=
 =?us-ascii?q?zhnNypZMMQL2G8MlPHGFiENLCcKTLXxMH3ZLu2SadMg+VMqx2wpTGbHlf5MTSe?=
 =?us-ascii?q?jDbpTQ6gMOFWgCGfPRxTo4W9chdrCWj+Q9PqcBy7MNlrjTIoxb04nG/FNWkZMT?=
 =?us-ascii?q?JkaUNCsqWQ7T9EgvV4A2FB8ntlLeyelymF9eXXNpYWvuVtAilvk+Ja4XI6y6Za?=
 =?us-ascii?q?7S1eRfx1njfSocBqo128juaPzT9nWgJUqjlXnIKLoVliOaLB+5hAQ3nE+hcN7W?=
 =?us-ascii?q?SWCxsSptplCsfgu6ZfytXUkKLzKTFC88/b/McGBsjULt6HP2QlMRbzBDHUCw4F?=
 =?us-ascii?q?HnaXMjTynU1W2NiU9nqRstBup4Ltk7IHTL9cUEBzEP4GXAAtMtgFOpZ+WHsKmL?=
 =?us-ascii?q?+dgcoM5DLqol/fTcRcs5TDV9qdBPzuLHCSirwSI1MyxrmwDYkJLIz91AQ2cF5w?=
 =?us-ascii?q?nMfGB2LTUMpLryknaRU79gEF1XFkTSUJxl7hYwWhqCsWHOS32AQrlg93Z+gF/S?=
 =?us-ascii?q?3ppVwwIwyO7BQxlQEPkNOtuj2bajn8J6T4CZ5XDgLwtk4sItbkShp+bQG1kgpj?=
 =?us-ascii?q?LjiSA/pVjr19ZSV0gRPXuZdIFtZCQqBeJhwd3/eaY7Mvy1sPhD+gwBpo+ObDFZ?=
 =?us-ascii?q?Z43DEtfJWv5yZE2gR+fPYvIqHbJ+9U1R5Wi77Y7Xzg7fw43AJLfxVFy2iVYiNd?=
 =?us-ascii?q?/RVQbrQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADpFPdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeDeYgYjACCDRSXJhSBXxIBARgTAYRAhBIiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIgBBEIATgBAwIJAQEFBRgCAiYCA?=
 =?us-ascii?q?gMxAQUBHAYBDAYCAQEBgxyBagMVAQSdDDyLDXwzgncFgkSCNw2CEQIGEnmJYoE?=
 =?us-ascii?q?cF4F/gREngmuEYgUXgwSCVwKPGUM0j3IJhj+DaocAHolRhzeYCQIEAgQFAgUPI?=
 =?us-ascii?q?YElgg0zGggmCoMnghsMF4NKinMfMoEFAQGMVQEB?=
X-IPAS-Result: =?us-ascii?q?A0ANAADpFPdbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeDeYgYjACCDRSXJhSBXxIBARgTAYRAhBIiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjYkAYJiAQIDAQIgBBEIATgBAwIJAQEFBRgCAiYCAgMxAQUBHAYBDAY?=
 =?us-ascii?q?CAQEBgxyBagMVAQSdDDyLDXwzgncFgkSCNw2CEQIGEnmJYoEcF4F/gREngmuEY?=
 =?us-ascii?q?gUXgwSCVwKPGUM0j3IJhj+DaocAHolRhzeYCQIEAgQFAgUPIYElgg0zGggmCoM?=
 =?us-ascii?q?nghsMF4NKinMfMoEFAQGMVQEB?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="54461381"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 12:47:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2438819AbeKWH2c (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 02:28:32 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:45581 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2438808AbeKWH2c (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 02:28:32 -0500
Received: by mail-pg1-f193.google.com with SMTP id y4so2128728pgc.12;
        Thu, 22 Nov 2018 12:47:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=fzfVPfWvBHnoaq5CXHPYh/SJKCQhOxlTKr5fmvE1jG8=;
        b=dzBMLciNCinLI3OvHAsWFl17pP/KexuPe6pD/Uueb97YawL3OMFBfiXm63h2bAvBQP
         1bcSBda2gdXMmbHk8h3HN4OskTDxv+32zHMHeiRAhFgyxj5vKmE72NFXLGc+/r1/Zsuo
         sz4bcxJbrDoLABDFwYGxrWfuSfPEHkJdeBnvlnkdIH9MJNX82avS9dXr2v9utVZ8Ivmv
         m0J1vd3YaDKcl6MENH8PvqLcg3ibNq7FVkBagJ/FrFkUOtp4DfpwuklP8cjH8YhxxJFv
         f1pbmcytbdR4XvCU7nlLmNh4kHKbxIIDU5AzaJB+U9uWHEX81naQCdSmQqilCexrGUmN
         U8sA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:subject:to:cc:references:from:message-id
         :date:user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=fzfVPfWvBHnoaq5CXHPYh/SJKCQhOxlTKr5fmvE1jG8=;
        b=r2xoQ+c32s8WB0+8zbhI4iPCMWGfe1kZCRfOXUEC7vXOx0hocOWn4qGsDXTdZriP4l
         fVAl6DiPXHCajq82FCozeVRTsfmWT/+c/rOLy4nsMDu2Rfkt/4mxTqHKhWaE61ZFsEaF
         8jYeXCm11R0R8CHFZpDJ3Rmuq6boPo8uwXiv2roWfqcS8FP3m2+5mzSwGQ/tF/Gt4e/l
         Wh89btXGvo62s3PvxVO2kwJksYZ177Vlo3yQ0+J2kAz4exHlVeNIF9GLPRK3jvofeTLv
         yOi866X1Xw74qYlrV9Nx6oGZTM44U6YC5SeGCwMWAqP5FEABuVxvxoP8f3mBbMf1KFOB
         8Ewg==
X-Gm-Message-State: AGRZ1gJxC8JO33cwXmz6Ce6Qh87FvA3MtXnxKy7A+2MO5eKa3yQ2NU5T
        iAxmp23+KBlZsSimj2KrLJABT3/+
X-Google-Smtp-Source: AJdET5eVMIhbPdf5mSfofdPLFARdS4DHH3nSBbjXtxxQJx7C9Fh7XDTXT3PYcR8IIhe3Htqw5gmXvQ==
X-Received: by 2002:a62:ce0e:: with SMTP id y14mr13479044pfg.100.1542919647190;
        Thu, 22 Nov 2018 12:47:27 -0800 (PST)
Received: from server.roeck-us.net ([2600:1700:e321:62f0:329c:23ff:fee3:9d7c])
        by smtp.gmail.com with ESMTPSA id k137sm54457896pfd.56.2018.11.22.12.47.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 12:47:26 -0800 (PST)
Subject: Re: [PATCH v2 2/5] bcm2835-pm: Move bcm2835-watchdog's DT probe to an
 MFD.
To: Eric Anholt <eric@anholt.net>,
        Florian Fainelli <f.fainelli@gmail.com>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Wim Van Sebroeck <wim@linux-watchdog.org>,
        linux-watchdog@vger.kernel.org
Cc: linux-rpi-kernel@lists.infradead.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Stefan Wahren <stefan.wahren@i2se.com>,
        bcm-kernel-feedback-list@broadcom.com
References: <20181120213702.27958-1-eric@anholt.net>
 <20181120213702.27958-3-eric@anholt.net>
From: Guenter Roeck <linux@roeck-us.net>
Message-ID: <83d14e62-982d-64a6-99df-e16b3a254745@roeck-us.net>
Date: Thu, 22 Nov 2018 12:47:24 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181120213702.27958-3-eric@anholt.net>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/20/18 1:36 PM, Eric Anholt wrote:
> The PM block that the wdt driver was binding to actually has multiple
> features we want to expose (power domains, reset, watchdog).  Move the
> DT attachment to a MFD driver and make WDT probe against MFD.
> 
> Signed-off-by: Eric Anholt <eric@anholt.net>
> ---
>   arch/arm/mach-bcm/Kconfig      |  1 +
>   drivers/mfd/Makefile           |  1 +
>   drivers/mfd/bcm2835-pm.c       | 70 ++++++++++++++++++++++++++++++++++
>   drivers/watchdog/bcm2835_wdt.c | 30 ++++++---------
>   include/linux/mfd/bcm2835-pm.h | 13 +++++++
>   5 files changed, 97 insertions(+), 18 deletions(-)
>   create mode 100644 drivers/mfd/bcm2835-pm.c
>   create mode 100644 include/linux/mfd/bcm2835-pm.h
> 
> diff --git a/arch/arm/mach-bcm/Kconfig b/arch/arm/mach-bcm/Kconfig
> index 25aac6ee2ab1..95242c2162a2 100644
> --- a/arch/arm/mach-bcm/Kconfig
> +++ b/arch/arm/mach-bcm/Kconfig
> @@ -167,6 +167,7 @@ config ARCH_BCM2835
>   	select BCM2835_TIMER
>   	select PINCTRL
>   	select PINCTRL_BCM2835
> +	select MFD_CORE
>   	help
>   	  This enables support for the Broadcom BCM2835 and BCM2836 SoCs.
>   	  This SoC is used in the Raspberry Pi and Roku 2 devices.
> diff --git a/drivers/mfd/Makefile b/drivers/mfd/Makefile
> index 12980a4ad460..ee6fb6af655e 100644
> --- a/drivers/mfd/Makefile
> +++ b/drivers/mfd/Makefile
> @@ -10,6 +10,7 @@ obj-$(CONFIG_MFD_88PM805)	+= 88pm805.o 88pm80x.o
>   obj-$(CONFIG_MFD_ACT8945A)	+= act8945a.o
>   obj-$(CONFIG_MFD_SM501)		+= sm501.o
>   obj-$(CONFIG_MFD_ASIC3)		+= asic3.o tmio_core.o
> +obj-$(CONFIG_ARCH_BCM2835)	+= bcm2835-pm.o
>   obj-$(CONFIG_MFD_BCM590XX)	+= bcm590xx.o
>   obj-$(CONFIG_MFD_BD9571MWV)	+= bd9571mwv.o
>   cros_ec_core-objs		:= cros_ec.o
> diff --git a/drivers/mfd/bcm2835-pm.c b/drivers/mfd/bcm2835-pm.c
> new file mode 100644
> index 000000000000..197ff8bcca90
> --- /dev/null
> +++ b/drivers/mfd/bcm2835-pm.c
> @@ -0,0 +1,70 @@
> +// SPDX-License-Identifier: GPL-2.0+
> +/*
> + * PM MFD driver for Broadcom BCM2835
> + *
> + * This driver binds to the PM block and creates the MFD device for
> + * the WDT driver.
> + */
> +
> +#include <linux/delay.h>
> +#include <linux/types.h>
> +#include <linux/mfd/core.h>
> +#include <linux/mfd/bcm2835-pm.h>
> +#include <linux/module.h>
> +#include <linux/io.h>
> +#include <linux/watchdog.h>
> +#include <linux/platform_device.h>
> +#include <linux/of_address.h>
> +#include <linux/of_platform.h>

Alphabetic order would be a bit nicer.

> +
> +static const struct mfd_cell bcm2835_pm_devs[] = {
> +	{ .name = "bcm2835-wdt" },
> +};
> +
> +static int bcm2835_pm_probe(struct platform_device *pdev)
> +{
> +	struct resource *res;
> +	struct device *dev = &pdev->dev;
> +	struct bcm2835_pm *pm;
> +
> +	pm = devm_kzalloc(dev, sizeof(*pm), GFP_KERNEL);
> +	if (!pm)
> +		return -ENOMEM;
> +	platform_set_drvdata(pdev, pm);
> +
> +	pm->dev = dev;
> +
> +	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
> +	pm->base = devm_ioremap_resource(dev, res);
> +	if (IS_ERR(pm->base))
> +		return PTR_ERR(pm->base);
> +
> +	return devm_mfd_add_devices(dev, -1,
> +				    bcm2835_pm_devs, ARRAY_SIZE(bcm2835_pm_devs),
> +				    NULL, 0, NULL);
> +}
> +
> +static int bcm2835_pm_remove(struct platform_device *pdev)
> +{
> +	return 0;
> +}

I don't think that is needed.

> +
> +static const struct of_device_id bcm2835_pm_of_match[] = {
> +	{ .compatible = "brcm,bcm2835-pm-wdt", },
> +	{},
> +};
> +MODULE_DEVICE_TABLE(of, bcm2835_pm_of_match);
> +
> +static struct platform_driver bcm2835_pm_driver = {
> +	.probe		= bcm2835_pm_probe,
> +	.remove		= bcm2835_pm_remove,
> +	.driver = {
> +		.name =	"bcm2835-pm",
> +		.of_match_table = bcm2835_pm_of_match,
> +	},
> +};
> +module_platform_driver(bcm2835_pm_driver);
> +
> +MODULE_AUTHOR("Eric Anholt <eric@anholt.net>");
> +MODULE_DESCRIPTION("Driver for Broadcom BCM2835 PM MFD");
> +MODULE_LICENSE("GPL");
> diff --git a/drivers/watchdog/bcm2835_wdt.c b/drivers/watchdog/bcm2835_wdt.c
> index ed05514cc2dc..9061436fbf90 100644
> --- a/drivers/watchdog/bcm2835_wdt.c
> +++ b/drivers/watchdog/bcm2835_wdt.c
> @@ -12,6 +12,7 @@
>   
>   #include <linux/delay.h>
>   #include <linux/types.h>
> +#include <linux/mfd/bcm2835-pm.h>
>   #include <linux/module.h>
>   #include <linux/io.h>
>   #include <linux/watchdog.h>
> @@ -47,6 +48,8 @@ struct bcm2835_wdt {
>   	spinlock_t		lock;
>   };
>   
> +struct bcm2835_wdt *bcm2835_power_off_wdt;

static

> +
>   static unsigned int heartbeat;
>   static bool nowayout = WATCHDOG_NOWAYOUT;
>   
> @@ -148,10 +151,7 @@ static struct watchdog_device bcm2835_wdt_wdd = {
>    */
>   static void bcm2835_power_off(void)
>   {
> -	struct device_node *np =
> -		of_find_compatible_node(NULL, NULL, "brcm,bcm2835-pm-wdt");
> -	struct platform_device *pdev = of_find_device_by_node(np);
> -	struct bcm2835_wdt *wdt = platform_get_drvdata(pdev);
> +	struct bcm2835_wdt *wdt = bcm2835_power_off_wdt;
>   	u32 val;
>   
>   	/*
> @@ -169,7 +169,7 @@ static void bcm2835_power_off(void)
>   
>   static int bcm2835_wdt_probe(struct platform_device *pdev)
>   {
> -	struct resource *res;
> +	struct bcm2835_pm *pm = dev_get_drvdata(pdev->dev.parent);
>   	struct device *dev = &pdev->dev;
>   	struct bcm2835_wdt *wdt;
>   	int err;
> @@ -181,10 +181,7 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
>   
>   	spin_lock_init(&wdt->lock);
>   
> -	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
> -	wdt->base = devm_ioremap_resource(dev, res);
> -	if (IS_ERR(wdt->base))
> -		return PTR_ERR(wdt->base);
> +	wdt->base = pm->base;
>   
>   	watchdog_set_drvdata(&bcm2835_wdt_wdd, wdt);
>   	watchdog_init_timeout(&bcm2835_wdt_wdd, heartbeat, dev);
> @@ -211,8 +208,10 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
>   		return err;
>   	}
>   
> -	if (pm_power_off == NULL)
> +	if (pm_power_off == NULL) {
>   		pm_power_off = bcm2835_power_off;
> +		bcm2835_power_off_wdt = wdt;
> +	}
>   
>   	dev_info(dev, "Broadcom BCM2835 watchdog timer");
>   	return 0;
> @@ -220,24 +219,19 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
>   
>   static int bcm2835_wdt_remove(struct platform_device *pdev)
>   {
> -	if (pm_power_off == bcm2835_power_off)
> +	if (pm_power_off == bcm2835_power_off) {
>   		pm_power_off = NULL;
> +		bcm2835_power_off_wdt = NULL;

I don't think this is needed.

> +	}
>   
>   	return 0;
>   }
>   
> -static const struct of_device_id bcm2835_wdt_of_match[] = {
> -	{ .compatible = "brcm,bcm2835-pm-wdt", },
> -	{},
> -};
> -MODULE_DEVICE_TABLE(of, bcm2835_wdt_of_match);
> -
>   static struct platform_driver bcm2835_wdt_driver = {
>   	.probe		= bcm2835_wdt_probe,
>   	.remove		= bcm2835_wdt_remove,
>   	.driver = {
>   		.name =		"bcm2835-wdt",
> -		.of_match_table = bcm2835_wdt_of_match,
>   	},
>   };
>   module_platform_driver(bcm2835_wdt_driver);
> diff --git a/include/linux/mfd/bcm2835-pm.h b/include/linux/mfd/bcm2835-pm.h
> new file mode 100644
> index 000000000000..b7d0ee1feffa
> --- /dev/null
> +++ b/include/linux/mfd/bcm2835-pm.h
> @@ -0,0 +1,13 @@
> +/* SPDX-License-Identifier: GPL-2.0+ */
> +
> +#ifndef BCM2835_MFD_PM_H
> +#define BCM2835_MFD_PM_H
> +
> +#include <linux/regmap.h>
> +
> +struct bcm2835_pm {
> +	struct device *dev;
> +	void __iomem *base;
> +};
> +
> +#endif /* BCM2835_MFD_PM_H */
> 

