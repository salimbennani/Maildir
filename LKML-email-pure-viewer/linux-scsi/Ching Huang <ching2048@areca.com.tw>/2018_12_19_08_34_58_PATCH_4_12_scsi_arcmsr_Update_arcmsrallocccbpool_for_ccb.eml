Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:31:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EAEB1580039;
	Wed, 19 Dec 2018 00:35:08 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 00:35:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0xxOoB3kOTPNlRWRsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTKvjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhj?=
 =?us-ascii?q?oHOTAn7G7ZhM9+g61crhyuvBx/24zZbZqJNPd8ZK7RYckXSXZDU8tXSidPApm8?=
 =?us-ascii?q?b4wKD+cZI+tYr4j9p10BrRCjBwesGfngyjlHhnTr2qA1z+QhEQDA3AwvAd4CrH?=
 =?us-ascii?q?vZodbuOagIS+C60rXHwi/ZY/xK3jf97ZLEcgwvoPyVW797bMnfyVE3Gg/bklmd?=
 =?us-ascii?q?rZbpMy6b2+gTqWSX8ultWf61h2MmqQx9ujmiyts2hoXXiY8YyUrI+CZ6zYovO9?=
 =?us-ascii?q?G0VEp2bNi5G5VKrS6aLZF5QsY6TmFopik6zroGtIalfCgF1psn3QTTa/+ZfIiS?=
 =?us-ascii?q?5BLsSuKRLS1/hHJ/d7Kznxey8U6+xe3gTsS4zkpGoy5fntXRuH0ByQbf5tWER/?=
 =?us-ascii?q?dh5Eus2DSC2xjW6u5eIEA0kaTbK4Qmwr41jpcTtUXDHinrmET5laOWdVsr+vKu?=
 =?us-ascii?q?6+v5ZrXqv5icNoFyig7gKKQjgdK/AesmPQgURWSb+vqz1Kfl/ULnRLVGlPo2kr?=
 =?us-ascii?q?PWsJzCP8QUura5AxNJ0oYk8xu/Czam0NcGknUdI1NFZQmKj4zoO1HIPfD5Au2z?=
 =?us-ascii?q?g1WqkDd32f/GOqftDYnKLnjGiL3hZ6py61ZAyAovytBS/5JUBasAIPLvQEDxs8?=
 =?us-ascii?q?bUDh8kMwOuxebnB85w1ocfWWKJH6+YP7nesV6O5uIzPeaMYJUZtyr6K/gg//Tu?=
 =?us-ascii?q?l2M2mUcBfam12psacHK4HvN4LEmDYnrshdEBEWENvgclSOzqiVuCUSNcZnqoXq?=
 =?us-ascii?q?I84C07B5yiDYvZWo+th7mB1j+hHpJKfmBGFkyMEXDweoqeQPcMaCWSIsx7njwe?=
 =?us-ascii?q?T7ehSZQs1RWvtA/81rpmIfDY+iwetZL/ytd14/ffmg019TxxF86dyX2CT3lonm?=
 =?us-ascii?q?MUQD87xKN/rlZ7yluZ1ah4guZXFdpc5/5SVgc6NJjcz/F1CtzoWwLBeMuJR0ii?=
 =?us-ascii?q?Qtm8HT4xSdcxyccUY0lhA9WikgzD3y2yDrAIjbOLGoI7/rjc33frIcZ90GjJ1K?=
 =?us-ascii?q?8mg1kiQctPMGmmi7V79wjSAY7JjkqYm7yrdaQawC7C6mODwXCSs0FfVQ56Sb/F?=
 =?us-ascii?q?UmwHZkvKsdT54VvPQKK0BrQ5LARN086CJbFMat3yk1pGQuzuONDfY2K3hmexCg?=
 =?us-ascii?q?yExrKKbIr2ZWod2D/RB1QDkwAW5XyGLxQxBj+9o2LCCzxjDU7vY0Lp8el5tHO7?=
 =?us-ascii?q?Tk81wxuWb0F70Lq14BoVhf2aS/Mcxb8EvCYhqzNpHFeyxd7WCtyApxZ/c6VYe9?=
 =?us-ascii?q?8y/FBH1WfBvQxnIpOgN7xihkIZcwlvpUzu0wt4C4penskqtn8l1xdyJr+C31NH?=
 =?us-ascii?q?dDOY2o7wN6bTKmnz+hCvdqHX1kvf0NaQ5qcA9vA4p0//swGuE0oo629n3MVN03?=
 =?us-ascii?q?uA+pXKCxIfUJLsUkot6xd2vbDbYikn6IPS2n1hKq20sj7E29I0C+op0Begf9FD?=
 =?us-ascii?q?MKyaEA/+CdEVB8+rKOYygVimcgoEPPxO9K4zJ86mbfqG17KxM+Z6gT2min5L4I?=
 =?us-ascii?q?Zj3UKW9ipwU/LH0IwBw/6FwASHTTD8jFG6v8DzmIBEYywSH2WlxSjlAo5RerN9?=
 =?us-ascii?q?fYIRBWiyJM23w810h4TxVH5A6F6jG1QG1depeBqTdVD83Rdc1V8KoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5UvixahU?=
 =?us-ascii?q?vr5/L2rQQUdPZST2NHttUqiztrqDZc5A9pUovD5TUOS9Z1CaV7H8rwEb0yPlA2?=
 =?us-ascii?q?tR2jQ7eyu2tZX+mhxwkHidI2prrHrFZcFwwg/S5dzGSv5WxDYGRih4iT/MC1i4?=
 =?us-ascii?q?Ptmp+8iUlpjZvuC/UWKhSoNccS3xwYycsyu74HVgAQejkPCrht3nDQ863Df419?=
 =?us-ascii?q?ZwVCXEthb8YpTx2KS8PuJqZU1oBF7668pnFYByiIowhJcM2XcEgpWZ52YIkWD2?=
 =?us-ascii?q?Md9Dw6LxcGINRSIXw97S+AXl3UxjLnGTyI7jWHSS3NBhZ8WkbWMMwS0y8dpKCK?=
 =?us-ascii?q?iP4bxAnCt1pEe4rA3Lbfh8mDcd1eUh6HoAj+4Vvwotyz2XAqoOEklAISzsixOI?=
 =?us-ascii?q?4siirKVQYWaja7mx21B4ndC8F7GCuQBcVW39epcjGy9w88p+PEjN0H319oHrZt?=
 =?us-ascii?q?3QYcgPuR2TlhfKl/JVJ44plvoWmSpnPnrwsmY/xO48iRxuwIu2vIyaK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHT0+sH?=
 =?us-ascii?q?ibHKTQHRSF5Ed6tX7PEI2rN3KKJHkf19piXwKQJEhegAASQTU7kYQ1FgGsxMz9?=
 =?us-ascii?q?bkh54iod6UL/qhtJ0uhoLQXwUn/DpAe0bTc5UJieLB1L7gFb+kfaK8qe4vhoHy?=
 =?us-ascii?q?Ff+J2hoxeAKmiaZwROEGEIVVaIB1HlPrmy+9bA9/KUCfa5L/vLeb+Os/BRV++U?=
 =?us-ascii?q?xZKz1Ytr5zaMOduOPnlhDP0721BPXXNjG8TelDUAVTYXlz/Wb8OAoBe8+yt3rt?=
 =?us-ascii?q?2w8fjxWQLv45ePBKVWMdl15x+2hqKDPfaKhCllMTZYyo8MxXjQxbcFwV4dkDtu?=
 =?us-ascii?q?eCetELgasS7NTbndmqtWDx4ddiNyO9FE76M63glRJ8Hbjsn52aJ/jv4wE11FT0?=
 =?us-ascii?q?Dumtm1ZcwWJGGwLE/HBEeONLicOTLH2d34YaOiRr1Wl+hUsxywuTCGE07sJDiD?=
 =?us-ascii?q?lj/pVwyxPuFIli2UIBteuISleBZ3FWfjVM7magG8MNJvjTw527s0hnbLNW4aKT?=
 =?us-ascii?q?d9ckNNoaeW7SNXmfh/H21B7nx4LeiLgSqZ7u/YKooIvvtvGCh7i+Va4HFpg4dS?=
 =?us-ascii?q?uSRNXuB0nm3Ko8JjuUqrlMGI0DNsVBcIoTFOwMqptEBvIuPz8YVcXnPA8QMlzW?=
 =?us-ascii?q?yWEBkMn9J/FtviobtQy8CJn6X2bH9G8tTJ7Y4HDNPVANyIPWBnMhfzHjPQSgwf?=
 =?us-ascii?q?QnrjMWDZmlwYk/yI8HCRhoY1p4Kqm5cUTLJfElsvGaA0EENgSfcCIZF4FhM5mL?=
 =?us-ascii?q?iUxJoD5Xu4o0OJGJVyt4rKXfvUCvLqbiqG2+oXLyAUyK/1eNxAfrbw3FZvPwF3?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A5BACUARpch0O0hNFjHQEBBQEHBQGBZ?=
 =?us-ascii?q?YJtfyeDfZQVgiGDMY8ahiEDTBMBARgTAYcpIjgSAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMgjYigmwCIAQZAQE3AQUJAiQCJgICAzEBBQEjEgWDHYIBAQWadjyKKXB8M?=
 =?us-ascii?q?4J2AQEFhysIEnmKGIEcghaMLIJXgSwBAQGOcDaQWwEGAgGBW06PUIFdiBkRh08?=
 =?us-ascii?q?siRuBBY8JAgQCBAUCBQ8hgTyBdzMac4EegU6CGwkDFxKDOIpgMzIBgQQBAY1gA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0A5BACUARpch0O0hNFjHQEBBQEHBQGBZYJtfyeDfZQVgiG?=
 =?us-ascii?q?DMY8ahiEDTBMBARgTAYcpIjgSAQMBAQEBAQECARMBAQEKCwkIKSMMgjYigmwCI?=
 =?us-ascii?q?AQZAQE3AQUJAiQCJgICAzEBBQEjEgWDHYIBAQWadjyKKXB8M4J2AQEFhysIEnm?=
 =?us-ascii?q?KGIEcghaMLIJXgSwBAQGOcDaQWwEGAgGBW06PUIFdiBkRh08siRuBBY8JAgQCB?=
 =?us-ascii?q?AUCBQ8hgTyBdzMac4EegU6CGwkDFxKDOIpgMzIBgQQBAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208,223";a="56500885"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 00:35:06 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728379AbeLSIfD (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 03:35:03 -0500
Received: from mail-it1-f195.google.com ([209.85.166.195]:40806 "EHLO
        mail-it1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725294AbeLSIfD (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 03:35:03 -0500
Received: by mail-it1-f195.google.com with SMTP id h193so8197840ita.5
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 00:35:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=areca-com-tw.20150623.gappssmtp.com; s=20150623;
        h=subject:from:to:cc:date:message-id:mime-version
         :content-transfer-encoding;
        bh=MID6K3zlNafnqhw+JPETatblWskSFL3OkZpMGXmaXn0=;
        b=PI7SG7d3pWyEFGBedN5c0im/LYhUCv0gL/gwLbVznx55kKshPM9tXfaMA03CyVmLL9
         5+fgpMqtn3U7ZRD1NJleXswkj5Zcv03RPsaf6qYPzuChZOhOCmjW1F58QygNYLEQPHHn
         DN4DP7TtCWUeoFizeHof1dsRv62epeLd9T2/6slIrMtbfBpq2fOC1YJpm1VmLdJ7hfdy
         jfF3dviLlKG4G9gcvCAzHVfdOT30KpDYhFrJQHKNtLiuvk4kvJV9qznLn2MGMvim7AN7
         9LFP2+DaQ7t6oFct6mGCMMwE8DMtoO+sh1jRn8pYhkvWot/iXdpc+/9c/+lZGHVzcIrs
         AwYA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:from:to:cc:date:message-id:mime-version
         :content-transfer-encoding;
        bh=MID6K3zlNafnqhw+JPETatblWskSFL3OkZpMGXmaXn0=;
        b=kq1jiPW06dA5UxVcIcQwaVTyQedBBYpOGLcv9HQAHqaIO/TFBXwde5ciZA7TzQ6aV3
         J6abZu90j7gtJVcgDaUXJeWjG7v3v9Q9eol8H4B4ifbso+J4HooRyvD3n6n3F6LoFTjw
         a45b6JILmpxjXldxO1VuqhNL1f2eIoK99tqcINbzrEP1wUXLGIYaCLMBMm519esqaCXq
         B5LaXjgs14knVrBTqxhfoh4I+tAau9FPYZP5rEHuQbtV5UHLaWfv5dTBVeiwk7EaeB75
         sJC68pXmunBunmRAZ5mx2HrDkM+EHp8KiHbDLt1EFp9Bw8jav0IdFgARklF8ebM7ZA+j
         /ZVA==
X-Gm-Message-State: AA+aEWbpomXf1M7lTHeisSUbKO6pxbsBJCzaukCtAKRSVq5YTmessy8R
        rEOYwjP1gNbypG3R8/27RNN2/Q==
X-Google-Smtp-Source: AFSGD/WuXxOQTd3MV+V8jyoSBK/7haeNgLdfE4ds6aNj9UowJwhr9yGszuyWjW4CkQXSBXP1C9bnVA==
X-Received: by 2002:a02:a397:: with SMTP id y23mr19168193jak.9.1545208502020;
        Wed, 19 Dec 2018 00:35:02 -0800 (PST)
Received: from [192.168.0.130] (60-248-88-209.HINET-IP.hinet.net. [60.248.88.209])
        by smtp.gmail.com with ESMTPSA id l18sm2794133itb.32.2018.12.19.00.34.59
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 19 Dec 2018 00:35:01 -0800 (PST)
Subject: [PATCH 4/12] scsi: arcmsr: Update arcmsr_alloc_ccb_pool for ccb
 buffer address can above 4GB
From: Ching Huang <ching2048@areca.com.tw>
To: martin.petersen@oracle.com, James.Bottomley@HansenPartnership.com,
        linux-scsi@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: dan.carpenter@oracle.com, hch@infradead.org,
        colin.king@canonical.com
Content-Type: text/plain; charset="UTF-8"
Date: Wed, 19 Dec 2018 16:34:58 +0800
Message-ID: <1545208498.4457.26.camel@Centos6.3-64>
Mime-Version: 1.0
X-Mailer: Evolution 2.32.3 (2.32.3-37.el6) 
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From Ching Huang <ching2048@areca.com.tw>

Update arcmsr_alloc_ccb_pool for ccb buffer address can above 4GB

Signed-off-by: Ching Huang <ching2048@areca.com.tw>
---

diff --git a/drivers/scsi/arcmsr/arcmsr.h b/drivers/scsi/arcmsr/arcmsr.h
index 256fe9a..9041edc 100755
--- a/drivers/scsi/arcmsr/arcmsr.h
+++ b/drivers/scsi/arcmsr/arcmsr.h
@@ -747,6 +747,7 @@ struct AdapterControlBlock
 	uint32_t		outbound_int_enable;
 	uint32_t		cdb_phyaddr_hi32;
 	uint32_t		reg_mu_acc_handle0;
+	uint64_t		cdb_phyadd_hipart;
 	spinlock_t		eh_lock;
 	spinlock_t		ccblist_lock;
 	spinlock_t		postq_lock;
@@ -855,11 +856,11 @@ struct AdapterControlBlock
 *******************************************************************************
 */
 struct CommandControlBlock{
-	/*x32:sizeof struct_CCB=(32+60)byte, x64:sizeof struct_CCB=(64+60)byte*/
+	/*x32:sizeof struct_CCB=(64+60)byte, x64:sizeof struct_CCB=(64+60)byte*/
 	struct list_head		list;		/*x32: 8byte, x64: 16byte*/
 	struct scsi_cmnd		*pcmd;		/*8 bytes pointer of linux scsi command */
 	struct AdapterControlBlock	*acb;		/*x32: 4byte, x64: 8byte*/
-	uint32_t			cdb_phyaddr;	/*x32: 4byte, x64: 4byte*/
+	unsigned long			cdb_phyaddr;	/*x32: 4byte, x64: 8byte*/
 	uint32_t			arc_cdb_size;	/*x32:4byte,x64:4byte*/
 	uint16_t			ccb_flags;	/*x32: 2byte, x64: 2byte*/
 #define	CCB_FLAG_READ		0x0000
@@ -875,10 +876,10 @@ struct CommandControlBlock{
 	uint32_t			smid;
 #if BITS_PER_LONG == 64
 	/*  ======================512+64 bytes========================  */
-		uint32_t		reserved[4];	/*16 byte*/
+		uint32_t		reserved[3];	/*12 byte*/
 #else
 	/*  ======================512+32 bytes========================  */
-	//	uint32_t		reserved;	/*4  byte*/
+		uint32_t		reserved[8];	/*32  byte*/
 #endif
 	/*  =======================================================   */
 	struct ARCMSR_CDB		arcmsr_cdb;
diff --git a/drivers/scsi/arcmsr/arcmsr_hba.c b/drivers/scsi/arcmsr/arcmsr_hba.c
index e1c75ca..5353dbb 100755
--- a/drivers/scsi/arcmsr/arcmsr_hba.c
+++ b/drivers/scsi/arcmsr/arcmsr_hba.c
@@ -694,11 +694,11 @@ static int arcmsr_alloc_ccb_pool(struct AdapterControlBlock *acb)
 	dma_addr_t dma_coherent_handle;
 	struct CommandControlBlock *ccb_tmp;
 	int i = 0, j = 0;
-	dma_addr_t cdb_phyaddr;
+	unsigned long cdb_phyaddr, next_ccb_phy;
 	unsigned long roundup_ccbsize;
 	unsigned long max_xfer_len;
 	unsigned long max_sg_entrys;
-	uint32_t  firm_config_version;
+	uint32_t  firm_config_version, curr_phy_upper32;
 
 	for (i = 0; i < ARCMSR_MAX_TARGETID; i++)
 		for (j = 0; j < ARCMSR_MAX_TARGETLUN; j++)
@@ -726,9 +726,10 @@ static int arcmsr_alloc_ccb_pool(struct AdapterControlBlock *acb)
 	memset(dma_coherent, 0, acb->uncache_size);
 	acb->ccbsize = roundup_ccbsize;
 	ccb_tmp = dma_coherent;
+	curr_phy_upper32 = upper_32_bits(dma_coherent_handle);
 	acb->vir2phy_offset = (unsigned long)dma_coherent - (unsigned long)dma_coherent_handle;
 	for(i = 0; i < acb->maxFreeCCB; i++){
-		cdb_phyaddr = dma_coherent_handle + offsetof(struct CommandControlBlock, arcmsr_cdb);
+		cdb_phyaddr = (unsigned long)dma_coherent_handle + offsetof(struct CommandControlBlock, arcmsr_cdb);
 		switch (acb->adapter_type) {
 		case ACB_ADAPTER_TYPE_A:
 		case ACB_ADAPTER_TYPE_B:
@@ -744,9 +745,16 @@ static int arcmsr_alloc_ccb_pool(struct AdapterControlBlock *acb)
 		ccb_tmp->acb = acb;
 		ccb_tmp->smid = (u32)i << 16;
 		INIT_LIST_HEAD(&ccb_tmp->list);
-		list_add_tail(&ccb_tmp->list, &acb->ccb_free_list);
+		next_ccb_phy = dma_coherent_handle + roundup_ccbsize;
+		if (upper_32_bits(next_ccb_phy) != curr_phy_upper32) {
+			acb->maxFreeCCB = i;
+			acb->host->can_queue = i;
+			break;
+		}
+		else
+			list_add_tail(&ccb_tmp->list, &acb->ccb_free_list);
 		ccb_tmp = (struct CommandControlBlock *)((unsigned long)ccb_tmp + roundup_ccbsize);
-		dma_coherent_handle = dma_coherent_handle + roundup_ccbsize;
+		dma_coherent_handle = next_ccb_phy;
 	}
 	acb->dma_coherent_handle2 = dma_coherent_handle;
 	acb->dma_coherent2 = ccb_tmp;
@@ -3701,6 +3709,7 @@ static int arcmsr_iop_confirm(struct AdapterControlBlock *acb)
 	cdb_phyaddr = lower_32_bits(dma_coherent_handle);
 	cdb_phyaddr_hi32 = upper_32_bits(dma_coherent_handle);
 	acb->cdb_phyaddr_hi32 = cdb_phyaddr_hi32;
+	acb->cdb_phyadd_hipart = ((uint64_t)cdb_phyaddr_hi32) << 32;
 	/*
 	***********************************************************************
 	**    if adapter type B, set window of "post command Q"


