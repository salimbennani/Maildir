Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:43:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A6519580522;
	Wed, 19 Dec 2018 14:50:20 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 19 Dec 2018 14:50:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9stctR8kMqVKS/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+gWIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CWGRPQMhRWSxCDI2y?=
 =?us-ascii?q?YYQAAOgOMvpXoYnmv1sDrwCzBRWuCe711jNEmnH70K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?jardv1KbwSUfyvw6nWyjXIcu9b1S3g44bUaBwqvOyCXbN0ccrP00YjGR7Og1Kf?=
 =?us-ascii?q?qYz4JDOVyv4Cs3ac7+d7S+2vjnUopB9srTey2Mgjl47JhpgPxl/Y8iV5xZ84KN?=
 =?us-ascii?q?ulQ0B4ed6pCIVcuz2eOodsX88vTX9ktDwnxrAFpZK3ZikHxZY/yxLCaPGKd5KE?=
 =?us-ascii?q?7gzjWeqNOzt0mW5pdbOlixu9/kWtzPD3WNOu31ZQtCVFl8HBtnAT2BzX7ciKUu?=
 =?us-ascii?q?V9/ki/1jaVzQzT6f9LIVoylaXFL54t2LkwloAcsUjbHy/2nlv5jLOOe0k65uSl?=
 =?us-ascii?q?7/7rbqjoq5OCLYN4lwLzPrg0lsG+A+k0Kg0OUHKa+eS42r3j50r5QLBSg/0yk6?=
 =?us-ascii?q?nZto3aJMsCqq66HQBVyIAj5Ai7Dzu/19QZk38HI0xfeB+ckYjpNE/BIOriAfe8?=
 =?us-ascii?q?nVusijFryO7CPrH7BZXNNHfDnK/7fblh805c1BYzzddH6pJQC7EBI+z8VlX+td?=
 =?us-ascii?q?zFFRI5Nw20w+D6CNRyzI8eWGSPArOHP6PWq1OH+uUvI+yUbo8PpDn9M+Ql5+Lp?=
 =?us-ascii?q?jXIhmV8SZ6ip3YcNZ3C/BPhmI1iZbmDqgtcOCmoKugs+TOr3iFyNSzJTZnCyX7?=
 =?us-ascii?q?4i6TE/Eo6pEYDDRoW1irybwCi7BoFWZnxBCl2UC3jobIWEW/APaC6IOM9uiD4E?=
 =?us-ascii?q?WKOlS48g0xGuqQD7x6BmLurS5i0Xq5bj2MJp6O3UkBE47SZ0ANiF02GRU2F0mX?=
 =?us-ascii?q?sFRzws06B5u0B9zlaD3rJ+g/xXDtFT4/JJUgEnNZ/T1eB6CtbyWh7fcdeNUlqp?=
 =?us-ascii?q?XtKmATQpRNIr39AOe1p9G8mljh3bwiWlGaEVmKKRCJw06K3c2WPxKNh7y3rB0K?=
 =?us-ascii?q?khjFwmQs9UOG2ih65/8RXTBoHTn0WYkaaqaboT3CrX+GifymqOuVlSUBRsXqXd?=
 =?us-ascii?q?QXAfekzWoMzk6UzYUb+hF64rMgtbxs6EMatFdNvpgE5CRPfiPtTefm2wl32xBR?=
 =?us-ascii?q?aO2rODco7qd38B0yXaDUgOixoT8mqeNQgiGiehpHrTDCBvFVLqZEPs7el+qXOh?=
 =?us-ascii?q?Qk8o1Q2KaFdh1760+h4TivyRUPcT3rMCuCc8pDR4Ble939TKC9WeowptZrlTYd?=
 =?us-ascii?q?Q44F1fz2LWqxR9PoC8L6BlnlMRaQB3sF3h1hppCoRMi9MlrG43wwVoL6KY01RB?=
 =?us-ascii?q?dy2D0JD0O73XLHTy/R+1Z67X3FHezMiZ+qMV5PskrFXjuRmjFlA+/HV/z9lVz3?=
 =?us-ascii?q?yc643KDQoPS57+Tlw79hl6p77AZCk96JjZ1XltMamyrz/D1MglBOojyha8Ydhf?=
 =?us-ascii?q?NLmIGxP1E80fH8KuMvAlm0C1bhIYO+Bf7LQ0P8K6ePScwq6kIeFgkCigjWtZ+o?=
 =?us-ascii?q?B901uA+DZmRe7MwpkK3euY3gyBVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClIG2c+lYxqTY0bm3Q1N00QauninmSq+zz?=
 =?us-ascii?q?xpnDAltKuf3CrSw+v8cBoLIHJERG5njV30O4i7k8gaXFS0bwgujBal51z1x7JY?=
 =?us-ascii?q?pKR8KGnfW1xIcDL1L2FhU6uwsKSNY8hU5ZMssCVXVvm8YF+ARr78pRsazz3sH2?=
 =?us-ascii?q?9EyD8ncDGqv43znwZmh2KFMHZzsH3ZdNlwxBjF49zQX/xR3jsARCRjjTnXB168?=
 =?us-ascii?q?P8Sm/NmOlpfDtPy+WHylVpFJbSbryoaAvjOh5WJ2GR2/g+yzmtr/HAg5yyD71s?=
 =?us-ascii?q?NmVSXVrBnmZInr2L+3MeZmfkluGV/95NB2GoB4kossmp4Q3WIWiYmS/XoCiW3z?=
 =?us-ascii?q?K8lU2bribHoRQj4G29vV4Anm2EJ5NH6IyZz2Vm6BwsR/fdm1eX0Z2jgy781RDK?=
 =?us-ascii?q?eU7bpEnTZ6o1airALRZ+R9kSkZyfc09HEahOQJshI3ziqBGrASAVVYPSv0mhSU?=
 =?us-ascii?q?6NC+qb9bZWe1fri2yUp+hsuhDLCZrwFYWXb5fIoiHCBq4sV+NlLMzGP86oX+dN?=
 =?us-ascii?q?bMatITswWekw3cgOhNNJIxiv0KiDJ8Nm3nun0lz/M7gQZq3ZGnp4WHL2Rt/KSk?=
 =?us-ascii?q?Ah9XLDH1ZsUT+i3zgqZahMqZw4evHpB5EDURQJToVe6oEC4Vtfn/NQaBCjg8pW?=
 =?us-ascii?q?mAGbbFAQ+T8kRmr2/ME5C2MXGYPmIZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lazczSJiCNRpW8xtN50HPPcyF6eJzGS?=
 =?us-ascii?q?5Y84alrAyMLGybegtJAXsIWkyCG1DsIL2u6cPc/OifA+q0N+HObqmWqexCS/eI?=
 =?us-ascii?q?woqi0ot48DaNNcWPPXhiA+c42kpZWnB5FNrWmy8SSywMjC/Na8+bpBGh+ix4tM?=
 =?us-ascii?q?y/8fLrWB7x6ouLEbddLdJv+xWui6eZK+GQnDp5KSpf1p4U33DI1aMQ3EQMhCBu?=
 =?us-ascii?q?bTWtFbUAuDXJTKLRnK9XEhEaZzlyNMtO86IzwA1NNdTHhdPy075yluQ1BEtdVV?=
 =?us-ascii?q?z9hsGpYtQHI328NFPCHkqEKK6KKiHLw87pZ6OxUrlQjORStx2ttjeXCU7jPjKf?=
 =?us-ascii?q?lzb3UxCjK/1DjCaePBZGooGybg5tCXT/TNLhchC6MMV4jTszwb01gHPFLW8dMT?=
 =?us-ascii?q?hmfENLob2d9idYgvR5G2xc4XtpN+iEmyCF7+bGLpYaq+dkAiNxl7ES3HNvz7pT?=
 =?us-ascii?q?8TEBR/FvnibWhsBhrkvgkeSVzDdjFh1UpWVlnoWO6A9NJL7F/4dHEV+CtChLpV?=
 =?us-ascii?q?6RDwoD7ZMxBcD0p6lOzfDCkaj+JDtP/9XOu8AbAp6He4q8LHM9PE+xS3bvBwwf?=
 =?us-ascii?q?QGvubDmHig=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAADoyRpch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCbH8ng32IGY1cLRSXSYFzFRgTAYctIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYkAYJiAQIDAQIgBBE8BQYJAQEKGAICJgICA1QQAwYCAQEBgx2CAgIDq?=
 =?us-ascii?q?CJ8M4VAhG6BC4s0EQaBeQaBESeCa4gJglcCiUmGVjeQXgcCAo1yg2gegV4jhHy?=
 =?us-ascii?q?DCyaHK5oCgUZggS5wFYMnkHpTgQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0AfAADoyRpch0O0hNFkHQEBBQEHBQGBUQgBCwGCbH8ng32?=
 =?us-ascii?q?IGY1cLRSXSYFzFRgTAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiA?=
 =?us-ascii?q?QIDAQIgBBE8BQYJAQEKGAICJgICA1QQAwYCAQEBgx2CAgIDqCJ8M4VAhG6BC4s?=
 =?us-ascii?q?0EQaBeQaBESeCa4gJglcCiUmGVjeQXgcCAo1yg2gegV4jhHyDCyaHK5oCgUZgg?=
 =?us-ascii?q?S5wFYMnkHpTgQUBAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="58213134"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 14:50:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729265AbeLSWuN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 17:50:13 -0500
Received: from gateway20.websitewelcome.com ([192.185.48.38]:21530 "EHLO
        gateway20.websitewelcome.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1728425AbeLSWuK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 17:50:10 -0500
Received: from cm13.websitewelcome.com (cm13.websitewelcome.com [100.42.49.6])
        by gateway20.websitewelcome.com (Postfix) with ESMTP id 8E456400C4A50
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 16:26:15 -0600 (CST)
Received: from gator4166.hostgator.com ([108.167.133.22])
        by cmsmtp with SMTP
        id ZkIBgcUUaYTGMZkIBgRmQF; Wed, 19 Dec 2018 16:26:15 -0600
X-Authority-Reason: nr=8
Received: from [189.250.106.44] (port=47190 helo=[192.168.1.76])
        by gator4166.hostgator.com with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.91)
        (envelope-from <gustavo@embeddedor.com>)
        id 1gZkIA-000Cv0-O5; Wed, 19 Dec 2018 16:26:14 -0600
Subject: Re: [PATCH 16/41] scsi: imm: mark expected switch fall-throughs
To: linux-kernel@vger.kernel.org
Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>,
        "Martin K. Petersen" <martin.petersen@oracle.com>,
        linux-scsi@vger.kernel.org
References: <cover.1543374820.git.gustavo@embeddedor.com>
 <42e3f9f751b662b7f0e4e763aa880bd752511c60.1543374820.git.gustavo@embeddedor.com>
From: "Gustavo A. R. Silva" <gustavo@embeddedor.com>
Message-ID: <9f283763-f5e5-3da2-84e4-7e2a3543cb23@embeddedor.com>
Date: Wed, 19 Dec 2018 16:26:09 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <42e3f9f751b662b7f0e4e763aa880bd752511c60.1543374820.git.gustavo@embeddedor.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - gator4166.hostgator.com
X-AntiAbuse: Original Domain - vger.kernel.org
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - embeddedor.com
X-BWhitelist: no
X-Source-IP: 189.250.106.44
X-Source-L: No
X-Exim-ID: 1gZkIA-000Cv0-O5
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Source-Sender: ([192.168.1.76]) [189.250.106.44]:47190
X-Source-Auth: gustavo@embeddedor.com
X-Email-Count: 1
X-Source-Cap: Z3V6aWRpbmU7Z3V6aWRpbmU7Z2F0b3I0MTY2Lmhvc3RnYXRvci5jb20=
X-Local-Domain: yes
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

Friendly ping:

Who can ack or review this patch, please?

Thanks
-- 
Gustavo

On 11/27/18 10:29 PM, Gustavo A. R. Silva wrote:
> In preparation to enabling -Wimplicit-fallthrough, mark switch cases
> where we are expecting to fall through.
> 
> Notice that, in this particular case, I placed all the "Phase N - ..."
> comments on the same line as its corresponding switch case. The same
> way in which similar comments appear in drivers/scsi/ppa.c. This makes
> it possible to place the "fall through" annotations at the bottom of
> each switch case, which is what GCC is expecting to find.
> 
> Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
> ---
>   drivers/scsi/imm.c | 33 +++++++++++++++++----------------
>   1 file changed, 17 insertions(+), 16 deletions(-)
> 
> diff --git a/drivers/scsi/imm.c b/drivers/scsi/imm.c
> index 8c6627bc8a39..629e0bc70d3e 100644
> --- a/drivers/scsi/imm.c
> +++ b/drivers/scsi/imm.c
> @@ -796,21 +796,21 @@ static int imm_engine(imm_struct *dev, struct scsi_cmnd *cmd)
>   			return 0;
>   		}
>   		return 1;	/* wait until imm_wakeup claims parport */
> -		/* Phase 1 - Connected */
> -	case 1:
> +
> +	case 1:		/* Phase 1 - Connected */
>   		imm_connect(dev, CONNECT_EPP_MAYBE);
>   		cmd->SCp.phase++;
> +		/* fall through */
>   
> -		/* Phase 2 - We are now talking to the scsi bus */
> -	case 2:
> +	case 2:		/* Phase 2 - We are now talking to the scsi bus */
>   		if (!imm_select(dev, scmd_id(cmd))) {
>   			imm_fail(dev, DID_NO_CONNECT);
>   			return 0;
>   		}
>   		cmd->SCp.phase++;
> +		/* fall through */
>   
> -		/* Phase 3 - Ready to accept a command */
> -	case 3:
> +	case 3:		/* Phase 3 - Ready to accept a command */
>   		w_ctr(ppb, 0x0c);
>   		if (!(r_str(ppb) & 0x80))
>   			return 1;
> @@ -818,9 +818,9 @@ static int imm_engine(imm_struct *dev, struct scsi_cmnd *cmd)
>   		if (!imm_send_command(cmd))
>   			return 0;
>   		cmd->SCp.phase++;
> +		/* fall through */
>   
> -		/* Phase 4 - Setup scatter/gather buffers */
> -	case 4:
> +	case 4:		/* Phase 4 - Setup scatter/gather buffers */
>   		if (scsi_bufflen(cmd)) {
>   			cmd->SCp.buffer = scsi_sglist(cmd);
>   			cmd->SCp.this_residual = cmd->SCp.buffer->length;
> @@ -834,8 +834,9 @@ static int imm_engine(imm_struct *dev, struct scsi_cmnd *cmd)
>   		cmd->SCp.phase++;
>   		if (cmd->SCp.this_residual & 0x01)
>   			cmd->SCp.this_residual++;
> -		/* Phase 5 - Pre-Data transfer stage */
> -	case 5:
> +		/* fall through */
> +
> +	case 5:		/* Phase 5 - Pre-Data transfer stage */
>   		/* Spin lock for BUSY */
>   		w_ctr(ppb, 0x0c);
>   		if (!(r_str(ppb) & 0x80))
> @@ -850,9 +851,9 @@ static int imm_engine(imm_struct *dev, struct scsi_cmnd *cmd)
>   			if (imm_negotiate(dev))
>   				return 0;
>   		cmd->SCp.phase++;
> +		/* fall through */
>   
> -		/* Phase 6 - Data transfer stage */
> -	case 6:
> +	case 6:		/* Phase 6 - Data transfer stage */
>   		/* Spin lock for BUSY */
>   		w_ctr(ppb, 0x0c);
>   		if (!(r_str(ppb) & 0x80))
> @@ -866,9 +867,9 @@ static int imm_engine(imm_struct *dev, struct scsi_cmnd *cmd)
>   				return 1;
>   		}
>   		cmd->SCp.phase++;
> +		/* fall through */
>   
> -		/* Phase 7 - Post data transfer stage */
> -	case 7:
> +	case 7:		/* Phase 7 - Post data transfer stage */
>   		if ((dev->dp) && (dev->rd)) {
>   			if ((dev->mode == IMM_NIBBLE) || (dev->mode == IMM_PS2)) {
>   				w_ctr(ppb, 0x4);
> @@ -878,9 +879,9 @@ static int imm_engine(imm_struct *dev, struct scsi_cmnd *cmd)
>   			}
>   		}
>   		cmd->SCp.phase++;
> +		/* fall through */
>   
> -		/* Phase 8 - Read status/message */
> -	case 8:
> +	case 8:		/* Phase 8 - Read status/message */
>   		/* Check for data overrun */
>   		if (imm_wait(dev) != (unsigned char) 0xb8) {
>   			imm_fail(dev, DID_ERROR);
> 
