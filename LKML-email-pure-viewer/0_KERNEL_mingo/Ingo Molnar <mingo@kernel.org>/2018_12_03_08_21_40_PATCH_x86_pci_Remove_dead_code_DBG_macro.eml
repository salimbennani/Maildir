Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:53:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 35968580224;
	Mon,  3 Dec 2018 00:24:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga002-1.jf.intel.com with ESMTP; 03 Dec 2018 00:24:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ANOTZZxIk4cpjn4oKC9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv/yrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYQAE+UOIOhXr5Llp1YMtha+GRWgCfnzxjNUnHL6w6s32PkhHwHc2wwgGsoDvn?=
 =?us-ascii?q?fSrNX6M6cZTOe7zK7MzTXFdfxWwyr25Y/NchAgp/GMUrVwfNHSyUYxDQPFiEuf?=
 =?us-ascii?q?qYj/MzOSzOQNvHGW4ux9Xuysk24qsx99riSry8s2l4XEiJwZxkrZ+Sh63Io5P9?=
 =?us-ascii?q?y1RUxjbdOrEZZcrTyWOoVyT884Xm1kpjw2xqMbtZO1eiUB1Y4pyATFa/OddoiF?=
 =?us-ascii?q?+hLjW/iVITd/nH9lZr2/iAio8US6ye3zSNO00FBUoSpBiNXMsWoN1xPL5siGTP?=
 =?us-ascii?q?ty4Fuh1C6R2wzP7uxIO104mKTFJ5I737I9lYYfvV7CEyL0gEn2ibWZdkQg+uim?=
 =?us-ascii?q?8eTnZbDmq4eYN491jAH+L6svltW8AesmKAgOWXaU+eCl2L3k80z5RqtFjuctn6?=
 =?us-ascii?q?nHv5DVO94bqrS6AwBLyIYj7QiwDzO83NQfh3kHI0pJeAibgIjxJ1HOPPf4AO+7?=
 =?us-ascii?q?g1Stkzdk2erKP7L8ApjWKnjDkbHhfaty6kJGyQozy8xf6IxQCr0bPP3zXUrxvs?=
 =?us-ascii?q?TCDhAlKwy03/rnCNJl24MeQ22PA7OZP7nVsVOS5uIvPvODZIkauDvmL/gl5vju?=
 =?us-ascii?q?jWI2mFMHfKmp24cXZ268Hvh8P0qZZn/siM8bEWgWpgo+UPDqiFqaXD5RYHa9Qb?=
 =?us-ascii?q?gw5jI8CIKgC4fDQZuggLiA3Ce9A51XaXpKClGKEXf0aYqEX+0AZz6VIs9kijYE?=
 =?us-ascii?q?T6SuS5c91RGysw/306BoLvHU+i0ftpLvzsJ16PfRlRwp8Tx0DsKd03yCTm1un2?=
 =?us-ascii?q?MIQSM20757oUBn1liD1q14ieRCFdNP//NJThs6NZnEwux5Ed/yXBjNftOISFm8?=
 =?us-ascii?q?RNWmDio8TtYww98IfkZ8FM+ujhHF3yq2HbAVk6aHC4Az8qLZx3LxPdpyy27a1K?=
 =?us-ascii?q?k9iFkrWtZAOne4hqFh7QTTB5TGk0OCl6m0c6QQ2yrN9GSGzWqKp0xYVA9wUaPY?=
 =?us-ascii?q?XXEQfEfWrNL55l/cQL+qE7goLgxBycuaIKtQdtLplUlGROvkONnGfm2+gXmwCg?=
 =?us-ascii?q?iSyrOMdoXqfX4d0zvbCEUflwAT/HCGNRUxByu7omLeCiBuGkzrY0/27eZ+r3a7?=
 =?us-ascii?q?RFcuzw6Wd01hy6a1+hkNiPyASvMT27UEuDshqzR0Blq9w8jaC92apwplfaVcZ9?=
 =?us-ascii?q?w97UxD1WLYsQx9I5OhI7pjhl4YbwR4oUfu2w9rBYVHlMggtGkqwxZqKaKEzFNB?=
 =?us-ascii?q?cCuV0or0OrLJJWj94hCuZ7TN1VHDzdmZ4KEP6Pc/q1X9pwypEksi83N609hayX?=
 =?us-ascii?q?ec55PKDBYMXpL1SEo46x96p7TCaCkn+4zUzWFsMbWzsjLa29MpGfEpxQq6c9Ze?=
 =?us-ascii?q?MKOLDgnyE8IBCsiqKewqnUWpbx0eMOBT8q40I92pd/+c1KG3O+ZgmSqsjX5b74?=
 =?us-ascii?q?BlzkKM6y18R/bS35YE3/6XxBGHWCr7jFu7tMD4h5pEZTALEmWj0yfkAJNeabNo?=
 =?us-ascii?q?fYYMD2ejOMm3xtR4h57wVH9U7l+jB1Ua2MC3fRqedUDy3QpV1U4Pu3yohTO4zy?=
 =?us-ascii?q?BokzEutqee3C3Oz/7idRYdIW5LWW9igEzoIYi1idAaQUepYxIolBuj+Ub12axb?=
 =?us-ascii?q?qL5jIGnUREdCZzL2IH16UqusqrqCZNZC6JEyviVNU+S8YleaRqTmoxQA0CPjHG?=
 =?us-ascii?q?pexDYleDGsoZj5mx16iGSALHd8tnbZeMdwxQvB69zYX/Jewj0GRCxggznNGle8?=
 =?us-ascii?q?J8Wp/cmTl5rbsuGxTWWhWodRcSnqy4ONry+75WxsAR2ikPG/gNznEQ4m0SDl09?=
 =?us-ascii?q?lmTznHrBH5YoPzzaS1LfpnflV0BF/788d6GZtxkooqiJEQxHgVnJOV/XUcnGf3?=
 =?us-ascii?q?MNVb37/+bXUXST4Kxd7V/Bbq2El5In2VwIL5U22XwtF9aNmifmMWxiU94thPCK?=
 =?us-ascii?q?eV77xLhzF5o1SmogLKffhygC0dxuAw534AjOEEow4tziSbArAPEkhUJy3slxKU?=
 =?us-ascii?q?79+gqKVbfnqgcb+11EBmh9CuEKmCoh1AWHb+YpoiAShw7sBlPFPNynLz7JzkeM?=
 =?us-ascii?q?LLbdISrRCUlxbAj+5IKJM+jPYKhCxnOX7jsn0h0eI0kRtu3ZSitoidN2pt5L65?=
 =?us-ascii?q?AgJfNjDtfMwc4DbtjaJDnsqM24CvA45sGjEKXJvuUPKpHygetfXhNwaSDjI8rm?=
 =?us-ascii?q?2XFqbYHQ+a8E1mtW7AE4i3N3GLI3kU1ddiSwOYJENBmwAYRik6koQ6FgC3x8zh?=
 =?us-ascii?q?bUF56SoK5lPjrhtMy+RoNwTwU2vFpQeobCs0R4abLBZM8g5C4ELVO9SE7u1vBy?=
 =?us-ascii?q?FY4oGhrAuVJ22bYARIEHgJWlGeCFDlJLWu/t7A8+6XBuelK/vOYLOOqfFRVvuS?=
 =?us-ascii?q?xJKv1Jdm8CiINsmVInZiCPg70FJZXX9lA8TZhykPSysPmiLNccGbpRS8+i52rs?=
 =?us-ascii?q?yl8/TrQgXv5YSRBLtILNVv4Au7gaOCN+6WmSZ4JixU1pIKxX/U1rcf2EQehD1p?=
 =?us-ascii?q?dzmoCb4ArzLCTLrMmq9LCB4Wczl8NNZT4KImwAZMOdTXitf01rNjiv41ClFFVU?=
 =?us-ascii?q?Hum82zZMwKJX29O03DBEqRKLuGIjjLydntYaygUb1QkPlUtxqotDaHEk/jOy6P?=
 =?us-ascii?q?mCXzWx+zMeFDkiebMQdauIG8dBZtFGfiQMjnah29LN94kzk2zacoiXPNMG4WKS?=
 =?us-ascii?q?J8fF9Vrr2M8SNYhe1yGmxb4XpjKOmEmiCZ4PHZK5YWq/RrBCt0mvle4HQ7zbtV?=
 =?us-ascii?q?8S5FSOZ0mCvUst5hvVWmnvOTxTpgVRod4gpM0aiJul9kcYXU8pZJUG2MqBgN4G?=
 =?us-ascii?q?GfAh0Rj9RiDdLrtuZbzd2Zx4zpLzIX0tTb+oM5AMzSIdjPZH8gNxXuMD3ZFg0I?=
 =?us-ascii?q?SXisL26J1B8Vq+2b6nDA9stykZPrgpdbD+YDDFE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A4AACC5wRch0O0hNFiGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBFfiyqCIZc0gXMSAQEYEwGHewUiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQMEAiQTBgE4AQMCCQIFEAMDA?=
 =?us-ascii?q?wECChMSAwwFIAEFAQISDhMFgxyBagMVBAGZGzyMCTOCdwWEeQ2CFAIGEopugRw?=
 =?us-ascii?q?XgX+BEYtIgiYCiSYKMYcZj0YJkTELGIlbh0oBmEYGAgkHDyGBJYINMxoIKAhsB?=
 =?us-ascii?q?oI1ghsMF4NKilQ/MoEEAQEBDgOMWwEB?=
X-IPAS-Result: =?us-ascii?q?A0A4AACC5wRch0O0hNFiGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBFfiyqCIZc0gXMSAQEYEwGHewUiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIKSMMgjYkAYJhAQMEAiQTBgE4AQMCCQIFEAMDAwECChMSAwwFIAE?=
 =?us-ascii?q?FAQISDhMFgxyBagMVBAGZGzyMCTOCdwWEeQ2CFAIGEopugRwXgX+BEYtIgiYCi?=
 =?us-ascii?q?SYKMYcZj0YJkTELGIlbh0oBmEYGAgkHDyGBJYINMxoIKAhsBoI1ghsMF4NKilQ?=
 =?us-ascii?q?/MoEEAQEBDgOMWwEB?=
X-IronPort-AV: E=Sophos;i="5.56,309,1539673200"; 
   d="scan'208,223";a="55803291"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 00:24:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725874AbeLCIVs (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 03:21:48 -0500
Received: from mail-wm1-f66.google.com ([209.85.128.66]:34522 "EHLO
        mail-wm1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725837AbeLCIVr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 03:21:47 -0500
Received: by mail-wm1-f66.google.com with SMTP id y185so6348436wmd.1;
        Mon, 03 Dec 2018 00:21:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:mime-version
         :content-disposition:user-agent;
        bh=FNun3UGNN/f1ATchkSmY6dXPmR4XVkmmp1eN8wjnK28=;
        b=nVDkAa47+jZFTV/Eu4aOo9Usfzbpqm1zU/51YCrs+A3WkpB3drh9X6GO6jIF8oMUUL
         WAaD4vHO7dF+088B98V8c/65pj1F+Lmz8f6vSua6e2hrwVA97JZkoGE5B6AZmuugc2zx
         D9zk+oDkQ16D563C3TtocgjQgUsw438zoT9bi3prBD1/yPD0k2MPbugPoUe+JCEEKVHU
         4IqDsK433S0Kb4Zf2TLRpWg1tGbTPSu9RET0aKZlkpi9/cbE7rcAVQ7tWU0uk7ZLL7V7
         EvOjTrB229DkJ1PX1CFJf/xxIFQyLGUFNknTyl1fm8IkoaL8jJYLEbKEZeY9r8KClorC
         LVGw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mime-version:content-disposition:user-agent;
        bh=FNun3UGNN/f1ATchkSmY6dXPmR4XVkmmp1eN8wjnK28=;
        b=mDzVkTTP3kJkZwJVeNfT7e3nlLq/0G/ZLB6kdFhTUApx2gHXpVeLxzHzvhUjghyxlG
         TDBh+Ln1EqCPQKO4ke3lNqZ/Gi1OVsmOHECE0pcztQyMFoPH/PZ15v2RHYmQuYd3DKXV
         +MggRSE0hPNrVEJnIM5c6ofl209LLb8cQK7x7pfiUEGfmBKQmxW8yG2ET/MShPUJYKLd
         vYB8Iz4V54kpDj4r0siJX5qV5LwOIWBPQt3MbhxO6lNzGN9AgpJjUUZHIl4x39szOVNc
         T7SSp5fTklP+TD9L7BdfrCEbNrL9GbPcJFYbv7lRvlBlk7EppAjnDU8Mh/n6zXpWvNgj
         ogcA==
X-Gm-Message-State: AA+aEWbb6PAJOi5TIWp2m0BVLt8PgrWPEVZl/MOoEBy6DDrbz9bWyIKS
        Fp0LpcoRFrMkr4c+l15mjZzGpfx4
X-Google-Smtp-Source: AFSGD/Xd13urvLDd86/fh7CHzCIhbAUnImFvxQopfNp6c/2gwyVD3EeAv6HnI5AeL6JIukseXTyO+g==
X-Received: by 2002:a1c:7011:: with SMTP id l17mr7068696wmc.34.1543825303050;
        Mon, 03 Dec 2018 00:21:43 -0800 (PST)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
        by smtp.gmail.com with ESMTPSA id p6sm10535264wrx.50.2018.12.03.00.21.42
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 03 Dec 2018 00:21:42 -0800 (PST)
Date: Mon, 3 Dec 2018 09:21:40 +0100
From: Ingo Molnar <mingo@kernel.org>
To: Bjorn Helgaas <bhelgaas@google.com>
Cc: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>
Subject: [PATCH] x86/pci: Remove dead code DBG() macro
Message-ID: <20181203082140.GA15318@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From 22b71f970f18f5f38161be028ab7ce7cd1f769f7 Mon Sep 17 00:00:00 2001
From: Ingo Molnar <mingo@kernel.org>
Date: Mon, 3 Dec 2018 09:15:40 +0100
Subject: [PATCH] x86/pci: Remove the dead-code DBG() macro

While reading arch/x86/include/asm/pci_x86.h I noticed that we have ancient
residuals of debugging code, which is never actually enabled via any regular
Kconfig mechanism:

 #undef DEBUG

 #ifdef DEBUG
 #define DBG(fmt, ...) printk(fmt, ##__VA_ARGS__)
 #else
 #define DBG(fmt, ...)                          \
 do {                                           \
       if (0)                                  \
               printk(fmt, ##__VA_ARGS__);     \
 } while (0)
 #endif

Remove this and the call sites. These messages might have been
super interesting decades ago when the PCI code was first
bootstrapped, but we have better mechanisms meanwhile, and code
readability is king ... ;-)

Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 arch/x86/include/asm/pci_x86.h | 12 ------------
 arch/x86/pci/direct.c          |  1 -
 arch/x86/pci/i386.c            |  2 --
 arch/x86/pci/irq.c             | 29 +++--------------------------
 arch/x86/pci/legacy.c          |  3 +--
 arch/x86/pci/pcbios.c          |  9 ++-------
 6 files changed, 6 insertions(+), 50 deletions(-)

diff --git a/arch/x86/include/asm/pci_x86.h b/arch/x86/include/asm/pci_x86.h
index 959d618dbb17..3f8d9c75b9ee 100644
--- a/arch/x86/include/asm/pci_x86.h
+++ b/arch/x86/include/asm/pci_x86.h
@@ -7,18 +7,6 @@
 
 #include <linux/ioport.h>
 
-#undef DEBUG
-
-#ifdef DEBUG
-#define DBG(fmt, ...) printk(fmt, ##__VA_ARGS__)
-#else
-#define DBG(fmt, ...)				\
-do {						\
-	if (0)					\
-		printk(fmt, ##__VA_ARGS__);	\
-} while (0)
-#endif
-
 #define PCI_PROBE_BIOS		0x0001
 #define PCI_PROBE_CONF1		0x0002
 #define PCI_PROBE_CONF2		0x0004
diff --git a/arch/x86/pci/direct.c b/arch/x86/pci/direct.c
index a51074c55982..68a115629568 100644
--- a/arch/x86/pci/direct.c
+++ b/arch/x86/pci/direct.c
@@ -216,7 +216,6 @@ static int __init pci_sanity_check(const struct pci_raw_ops *o)
 			return 1;
 	}
 
-	DBG(KERN_WARNING "PCI: Sanity check failed\n");
 	return 0;
 }
 
diff --git a/arch/x86/pci/i386.c b/arch/x86/pci/i386.c
index 8cd66152cdb0..5c2b31315750 100644
--- a/arch/x86/pci/i386.c
+++ b/arch/x86/pci/i386.c
@@ -389,8 +389,6 @@ void __init pcibios_resource_survey(void)
 {
 	struct pci_bus *bus;
 
-	DBG("PCI: Allocating resources\n");
-
 	list_for_each_entry(bus, &pci_root_buses, node)
 		pcibios_allocate_bus_resources(bus);
 
diff --git a/arch/x86/pci/irq.c b/arch/x86/pci/irq.c
index 52e55108404e..1286f138e281 100644
--- a/arch/x86/pci/irq.c
+++ b/arch/x86/pci/irq.c
@@ -77,11 +77,8 @@ static inline struct irq_routing_table *pirq_check_routing_table(u8 *addr)
 	sum = 0;
 	for (i = 0; i < rt->size; i++)
 		sum += addr[i];
-	if (!sum) {
-		DBG(KERN_DEBUG "PCI: Interrupt Routing Table found at 0x%p\n",
-			rt);
+	if (!sum)
 		return rt;
-	}
 	return NULL;
 }
 
@@ -126,15 +123,6 @@ static void __init pirq_peer_trick(void)
 	memset(busmap, 0, sizeof(busmap));
 	for (i = 0; i < (rt->size - sizeof(struct irq_routing_table)) / sizeof(struct irq_info); i++) {
 		e = &rt->slots[i];
-#ifdef DEBUG
-		{
-			int j;
-			DBG(KERN_DEBUG "%02x:%02x slot=%02x", e->bus, e->devfn/8, e->slot);
-			for (j = 0; j < 4; j++)
-				DBG(" %d:%02x/%04x", j, e->irq[j].link, e->irq[j].bitmap);
-			DBG("\n");
-		}
-#endif
 		busmap[e->bus] = 1;
 	}
 	for (i = 1; i < 256; i++) {
@@ -163,10 +151,8 @@ void elcr_set_level_irq(unsigned int irq)
 	elcr_irq_mask |= (1 << irq);
 	printk(KERN_DEBUG "PCI: setting IRQ %u as level-triggered\n", irq);
 	val = inb(port);
-	if (!(val & mask)) {
-		DBG(KERN_DEBUG " -> edge");
+	if (!(val & mask))
 		outb(val | mask, port);
-	}
 }
 
 /*
@@ -836,16 +822,10 @@ static void __init pirq_find_router(struct irq_router *r)
 	r->get = NULL;
 	r->set = NULL;
 
-	DBG(KERN_DEBUG "PCI: Attempting to find IRQ router for [%04x:%04x]\n",
-	    rt->rtr_vendor, rt->rtr_device);
-
 	pirq_router_dev = pci_get_domain_bus_and_slot(0, rt->rtr_bus,
 						      rt->rtr_devfn);
-	if (!pirq_router_dev) {
-		DBG(KERN_DEBUG "PCI: Interrupt router not found at "
-			"%02x:%02x\n", rt->rtr_bus, rt->rtr_devfn);
+	if (!pirq_router_dev)
 		return;
-	}
 
 	for (h = pirq_routers; h->vendor; h++) {
 		/* First look for a router match */
@@ -1028,7 +1008,6 @@ void __init pcibios_fixup_irqs(void)
 	struct pci_dev *dev = NULL;
 	u8 pin;
 
-	DBG(KERN_DEBUG "PCI: IRQ fixup\n");
 	for_each_pci_dev(dev) {
 		/*
 		 * If the BIOS has set an out of range IRQ number, just
@@ -1119,8 +1098,6 @@ static const struct dmi_system_id pciirq_dmi_table[] __initconst = {
 
 void __init pcibios_irq_init(void)
 {
-	DBG(KERN_DEBUG "PCI: IRQ init\n");
-
 	if (raw_pci_ops == NULL)
 		return;
 
diff --git a/arch/x86/pci/legacy.c b/arch/x86/pci/legacy.c
index dfbe6ac38830..045089b34400 100644
--- a/arch/x86/pci/legacy.c
+++ b/arch/x86/pci/legacy.c
@@ -17,7 +17,6 @@ static void pcibios_fixup_peer_bridges(void)
 
 	if (pcibios_last_bus <= 0 || pcibios_last_bus > 0xff)
 		return;
-	DBG("PCI: Peer bridge fixup\n");
 
 	for (n=0; n <= pcibios_last_bus; n++)
 		pcibios_scan_specific_bus(n);
@@ -45,7 +44,7 @@ void pcibios_scan_specific_bus(int busn)
 	for (devfn = 0; devfn < 256; devfn += stride) {
 		if (!raw_pci_read(0, busn, devfn, PCI_VENDOR_ID, 2, &l) &&
 		    l != 0x0000 && l != 0xffff) {
-			DBG("Found device at %02x:%02x [%04x]\n", busn, devfn, l);
+
 			pr_info("PCI: Discovered peer bus %02x\n", busn);
 			pcibios_scan_root(busn);
 			return;
diff --git a/arch/x86/pci/pcbios.c b/arch/x86/pci/pcbios.c
index 9c97d814125e..a6fc43aa668c 100644
--- a/arch/x86/pci/pcbios.c
+++ b/arch/x86/pci/pcbios.c
@@ -160,8 +160,6 @@ static int __init check_pcibios(void)
 		minor_ver = ebx & 0xff;
 		if (pcibios_last_bus < 0)
 			pcibios_last_bus = ecx & 0xff;
-		DBG("PCI: BIOS probe returned s=%02x hw=%02x ver=%02x.%02x l=%02x\n",
-			status, hw_mech, major_ver, minor_ver, pcibios_last_bus);
 		if (status || signature != PCI_SIGNATURE) {
 			printk (KERN_ERR "PCI: BIOS BUG #%x[%08x] found\n",
 				status, signature);
@@ -320,15 +318,13 @@ static const struct pci_raw_ops *__init pci_find_bios(void)
 				check->fields.revision, check);
 			continue;
 		}
-		DBG("PCI: BIOS32 Service Directory structure at 0x%p\n", check);
 		if (check->fields.entry >= 0x100000) {
 			printk("PCI: BIOS32 entry (0x%p) in high memory, "
 					"cannot use.\n", check);
 			return NULL;
 		} else {
 			unsigned long bios32_entry = check->fields.entry;
-			DBG("PCI: BIOS32 Service Directory entry at 0x%lx\n",
-					bios32_entry);
+
 			bios32_indirect.address = bios32_entry + PAGE_OFFSET;
 			set_bios_x();
 			if (check_pcibios())
@@ -366,7 +362,6 @@ struct irq_routing_table * pcibios_get_irq_routing_table(void)
 	opt.size = PAGE_SIZE;
 	opt.segment = __KERNEL_DS;
 
-	DBG("PCI: Fetching IRQ routing table... ");
 	__asm__("push %%es\n\t"
 		"push %%ds\n\t"
 		"pop  %%es\n\t"
@@ -384,7 +379,7 @@ struct irq_routing_table * pcibios_get_irq_routing_table(void)
 		  "S" (&pci_indirect),
 		  "m" (opt)
 		: "memory");
-	DBG("OK  ret=%d, size=%d, map=%x\n", ret, opt.size, map);
+
 	if (ret & 0xff00)
 		printk(KERN_ERR "PCI: Error %02x when fetching IRQ routing table.\n", (ret >> 8) & 0xff);
 	else if (opt.size) {
