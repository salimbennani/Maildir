Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:39:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 591C45805F0;
	Thu, 20 Dec 2018 09:53:28 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 09:53:28 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcuEkrBDfUbYjJ+P5KWjkUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/pc6wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypVUBrQCmBQSuH+7v1iNEi2Xq0aEmyektDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqQUUeC6y6nD0DLNb/RS2Tf78ofIaA0qrPaJXbJxd8rRxk4vGhjGjlqO?=
 =?us-ascii?q?s4zlOS2a1uAXv2ic9epgWvuihmg6oA9/pTivw90jiojPho8NyVDL6z95wIArKt?=
 =?us-ascii?q?28UkJ7ZsSkEJRWuiqHNIV2WtsvT390tCs+0LEKpJC2cDYQxJg6xBPTd+aLfomK?=
 =?us-ascii?q?7x77W+ucIC10iG9rdb+7nRq+7FasxvfiWsWp3ltHqDdOnMPWuXAXzRPT79CKSv?=
 =?us-ascii?q?tj8Uel3jaCzx7T6u5aLkAuj6bbKIAuwqQ2lpUNtUTPBCj2mF/5jKOOd0Uk/Pan?=
 =?us-ascii?q?6/j/b7n4upORM5V4hhzwP6gwgMCzHOc1PhQUU2Wa++mwzLjj8lf4QLVOgP02iK?=
 =?us-ascii?q?7ZsJXCKMQfp665BRJV04k65xa8ETimytIYkmcDLF5cfxKGgY7pNE/UIP3jE/e/?=
 =?us-ascii?q?jEqjkC1xy/DFILLhGJPNIWbHkLv7erZ98UFcxBIpzd9D/5JUFq0BIPXrV0/1td?=
 =?us-ascii?q?zYDQE2Pxa7wub6E9h90oIeWWSSAq6WKq/SsFmI5v4xLOmIfoMapDH9K/097f70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPaHC3BPVmI1mDbnrrmNsBEXoKsRA4TOzlk1CCVT9TZ3CvX6?=
 =?us-ascii?q?Mz/D07CYSmDZvdSYCpmrCOwCC7HphObGBcFl+MCWvod5mDW/oUci2SOc9hkjsH?=
 =?us-ascii?q?VbS7UY8uzxOuuRT+y7pmKOrU5yIZuYji1Nhz++3cixUy+SZoAMSa1mGHV3t0kX?=
 =?us-ascii?q?8QRz8qwKB/plRwylSZ3qh+mfBYEd1T6OlPUgc1LpPcy+16C9bvWgPOZNuJSVCm?=
 =?us-ascii?q?Qsm4DjE1VN4+39gOY0NlEdW4kh/DxzaqA6MSl7GTGZM76Lzc0GbrK8Z90XnG0r?=
 =?us-ascii?q?IhgEcgQsdIMW2mhat/9wzICo7NkkWZkbuqdKsG0C7M8meD0XSBvEVCXAFsVqXF?=
 =?us-ascii?q?WGgVZlHKotTh+kPCU7iuBKw6PQRb186NNLFGat3zglVAX/fsJtLebnm1m2exAx?=
 =?us-ascii?q?aI27yNYJDre2UbwCXSFkwEnxoP8naBMAg0Hj2hrH7GDDxyCVLvZFvh8fV/qHO+?=
 =?us-ascii?q?SU800wGKbk1727qp4BIVguacS/cS3rICtycssDF0HFe739LLBNuMvQthfKNAYd?=
 =?us-ascii?q?wj5FdLz37Wtwt4Ppa4NaBtmkYecxhrv0Ppzxh4EIFAntYlrXw0zAt+M7mX0E5c?=
 =?us-ascii?q?eDyC25DwObrXKnfp8RCraq7W3Eze0dmM9qcO7vQ4t0vsvAWzGkU+9HVn1sFf02?=
 =?us-ascii?q?GA6ZXSEAoSTZXxX1439hhnvb3VfjMx5oLU1XJ2N6m0vSTP29YoBOsj1xahcM1T?=
 =?us-ascii?q?MKKCFA/uDcIaA9KiJ/Atm1isdhgEJvxd9LYoP8O6cPuLwLSrPOd8kz28l2RI/Y?=
 =?us-ascii?q?d93liK9yViUO7I3o8JzO2C0QuDSjjzkk2hssfxmY1fYTESH2y/yTXrBYJLZ61y?=
 =?us-ascii?q?e5oLBnmqI8Gt2tp+gJvtUWZC9FG/H1MGxNOpeR2KYl393A1cz0QWrWa8mSulyT?=
 =?us-ascii?q?x5iDUprquZ3CzTzOXubhsHOmhXRGZ8iVfgO5S7j9cfXEKwdQgmiAOl5Vrmx6hc?=
 =?us-ascii?q?vKl/LXPcQV1Lfyj1KGFuSLCwuaCBY85M6ZMotztYUOKnbFCeS779pQYa0iz5E2?=
 =?us-ascii?q?tfwjA7ay+lupHjkxNmj2KdKW55rGDFdsFo2Rff+NvcSOZR3zUcQyl0kzvXBlm6?=
 =?us-ascii?q?P9Sy+dWUlpHDsv2xVm67V51TdzXrwp2EtCeh+WJqBhi/leipmtL7CQg6zTP719?=
 =?us-ascii?q?5yWCXLthn8Y5Pn16SnMe19eEloC0Tx6857GoF4j4sxi4sc2XkchpWJ43UHlX3/?=
 =?us-ascii?q?Pslc2aL7dHANXyIEw8bJ4Aj5301uNneJx4P6VnqH2Mdgace1YngK2i0j9cBFE7?=
 =?us-ascii?q?mb7KZLnSZuplq4rATRYeVynzsHyPsu7mIajP8NuAY30iqdBbUSF1FCPSPwjxSI?=
 =?us-ascii?q?88y+rKJPaWazdriw0VBynNG7A7GEvwFcQ235epY5EC9078V/Nk/M0XLp5oHlft?=
 =?us-ascii?q?nQccwcthmOnxjciOhVLYo7luAWiip/JWL9oXolxvYgghN02pG6uJWHJ39p/KKk?=
 =?us-ascii?q?GRNYMjz1Z8UO+jDil6pen8CW35yxEZVlADkEQJzoTfewGjIIqfvnLxqOECE7qn?=
 =?us-ascii?q?qDG7rQBwqf51l9r37VD5CnLXKXJGQazdV/QhmSPldfjRsQXDU7mJ45Cw+ryNbg?=
 =?us-ascii?q?cEd/+jAe+Fr4pgFQxeJvMhn1Sn3fqxuwajcoVJifKwJb7wFF50fIKMye8/h8Hy?=
 =?us-ascii?q?dC8p26qwyNLGObah9MDWEIXEyEGl/iMqOv5dnG7+iXGO6+I+HSbrWJrOxUT+2I?=
 =?us-ascii?q?yo630ot64zaMMd2CPnl8AP062UpDXnF5F97amzUVTCwXmDzCb9SGpBen4SB3qs?=
 =?us-ascii?q?G/8PL2WAPg/4ePCr1SMclx9BCym6uMK+mQhCNhIzZCypwM3WPIyKQY3FMKkS5u?=
 =?us-ascii?q?aiKiEa4eui/NVq7Qnq5XAgUfayNyMstI8q090hNMOc7dltP6yLp4guQpBFdCUF?=
 =?us-ascii?q?zrgtupatASI2GhKFPHA16GNKiHJT3O2c34fbmwRqFQjOpKsR29ojKbE07lPjSe?=
 =?us-ascii?q?mDjlTRGvMedQjC6FOBxSop2ychFoCWL7VtLpdgW7MMNrjT0x2bA1hmnFNWgZMT?=
 =?us-ascii?q?h9dUNCtryR7SNCjfV5FGxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7HIMePsgsTHUp9pipBmNm/ORwz5nV1JCp35uiYaM9RFrMqDU3ppNQ3DJ+FQK92?=
 =?us-ascii?q?rGWDoQoN4wK9vgvOh1zdzJnbi7fDJD9d3T1cgRHc7ZLISAKnV3YkmhIyLdEAZQ?=
 =?us-ascii?q?FW3jDmrYnUEI1ajKrnA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAADc1Rtch0O0hNFlGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUgMBAQEBAQsBgVqBD4ECFBOMdYscgg0UaI1JiRiBdhABARg?=
 =?us-ascii?q?HDAGHKQUiNQgNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQICAQECNwYBO?=
 =?us-ascii?q?AEDAQEJAQEFBQsWExIDDAUgAQUBAiATBYJSSwGBaQMNCAQBCpt/PIxIgncFgTE?=
 =?us-ascii?q?Bg04NghUCBhKLEYEcF4F/gRGCXTWIOoImAoknJAchgU+VewmHEYpIDBiBX02EU?=
 =?us-ascii?q?oJ6h2WKU48TBgIJBw8hgScBggszGggoCGwGgjUJghIMF4NKhRSBPSCDYz8ygQQ?=
 =?us-ascii?q?BAQEOA41PAQE?=
X-IPAS-Result: =?us-ascii?q?A0AxAADc1Rtch0O0hNFlGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUgMBAQEBAQsBgVqBD4ECFBOMdYscgg0UaI1JiRiBdhABARgHDAGHKQUiNQgNA?=
 =?us-ascii?q?QMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQICAQECNwYBOAEDAQEJAQEFBQs?=
 =?us-ascii?q?WExIDDAUgAQUBAiATBYJSSwGBaQMNCAQBCpt/PIxIgncFgTEBg04NghUCBhKLE?=
 =?us-ascii?q?YEcF4F/gRGCXTWIOoImAoknJAchgU+VewmHEYpIDBiBX02EUoJ6h2WKU48TBgI?=
 =?us-ascii?q?JBw8hgScBggszGggoCGwGgjUJghIMF4NKhRSBPSCDYz8ygQQBAQEOA41PAQE?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="56741084"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 09:53:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388219AbeLTRxW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 12:53:22 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:42739 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2388169AbeLTRxW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 12:53:22 -0500
Received: by mail-wr1-f67.google.com with SMTP id q18so2669471wrx.9;
        Thu, 20 Dec 2018 09:53:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=TRWV2eeCxxNhRGRqKFzfGcOqOvxYEs/gw7vvVXroLoc=;
        b=S8bjlTVnuQH/+d/3Aap/04sdTnsAu8vwo9OE3QXZrxQvNVUslIIJdX4UiSjBykPMA9
         5mFeVC6NJH883fXH8MWH1H+5bQVflBC7utAxhIjXY1jCg7acgtFvGof1uBXd02AmEUey
         urt1KBqwf+YefuPQf69EHao9U6gWekfp6BOrtrjk2E+c+z9RzYFBviW/yFF3bfp7V4Iq
         7LsDPiYotwQxO2eCcoFMuQAurh5WWwBM+RPkbJVldMC1dgVL4l9MlDrk+HePUNjDaDEI
         zcdyy4N/mfWEo+FT8Zf7g3mL+ioD/wsCaKvCLQgzSccrKYWmR+jeOpr4h4+E1Ofq+1W7
         4ZCg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=TRWV2eeCxxNhRGRqKFzfGcOqOvxYEs/gw7vvVXroLoc=;
        b=Hbr2vgZ6/7f4uJ6DfbR/p5/UHga4VjYbEVmGhQYn4tMiDBzM7by12BpXEp5WCwVO94
         3UnvhYm5yp+Ivlsq4sNpQqtN34AJl/bFwiOTOs069yd2ghrF7ZlmTDz99NkTkOuMRndX
         I1A/Fet4nsiFlmuypGt1XRqgNNvSi0LonFHJXZYN3f3CUxeI31dsfivFw6A/AL+0krp1
         dma5mqyu4/v1pKAi8aNKqybXZBm0oLeH7q+JuovZr+yjluitMol+k8q1r4UwMXo3D/j5
         8Y36LGy6oK3bca1mk40/OpJQOlFT9SfwuauCb/GfOfVSCxGbuXd7EUaQqbOUdsfKG7p1
         R8jg==
X-Gm-Message-State: AA+aEWarjYJAr1LYPUr5h3IhuzmH9CKjWt8/NSOsqLLT5Yom1tzgch9U
        GUWGoEP2CbaEKtIKlQu9JWU=
X-Google-Smtp-Source: AFSGD/UMj9G4ODvwUHGpptVrdMBbpJPatLtSWJB4uekAqO7HUJHOvxKDnYyYYt40DzCC0lr3rTUn4Q==
X-Received: by 2002:a5d:60cc:: with SMTP id x12mr22629596wrt.193.1545328399480;
        Thu, 20 Dec 2018 09:53:19 -0800 (PST)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
        by smtp.gmail.com with ESMTPSA id y13sm7254240wrw.85.2018.12.20.09.53.18
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 20 Dec 2018 09:53:18 -0800 (PST)
Date: Thu, 20 Dec 2018 18:53:16 +0100
From: Ingo Molnar <mingo@kernel.org>
To: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Clark Williams <williams@redhat.com>, linux-kernel@vger.kernel.org,
        linux-perf-users@vger.kernel.org,
        Adrian Hunter <adrian.hunter@intel.com>,
        Leo Yan <leo.yan@linaro.org>,
        Mathieu Poirier <mathieu.poirier@linaro.org>,
        Michael Petlan <mpetlan@redhat.com>,
        Steven Rostedt <rostedt@goodmis.org>,
        Arnaldo Carvalho de Melo <acme@redhat.com>
Subject: Re: [GIT PULL 00/63] perf/core improvements and fixes
Message-ID: <20181220175316.GA128618@gmail.com>
References: <20181218220733.15839-1-acme@kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181218220733.15839-1-acme@kernel.org>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


* Arnaldo Carvalho de Melo <acme@kernel.org> wrote:

> Hi Ingo,
> 
> 	Please consider pulling,
> 
> Best regards,
> 
> - Arnaldo
> 
> Test results at the end of this message, as usual.
> 
> The following changes since commit ca46afdb2754dbb4a5d5772332fa16957d9bc618:
> 
>   Merge tag 'perf-core-for-mingo-4.21-20181217' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux into perf/core (2018-12-18 14:39:00 +0100)
> 
> are available in the Git repository at:
> 
>   git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux.git tags/perf-core-for-mingo-4.21-20181218
> 
> for you to fetch changes up to 89a0948984896352cac1ebe079cb3d64d6c3adc6:
> 
>   tools uapi asm: Update asm-generic/unistd.h copy (2018-12-18 16:17:41 -0300)
> 
> ----------------------------------------------------------------
> perf/core improvements and fixes:
> 
> - Implement BPF based syscall filtering in 'perf trace', using BPF maps and
>   the augmented_raw_syscalls.c BPF proggie (Arnaldo Carvalho de Melo)
> 
> - Allow specifying in .perfconfig a set of events use in 'perf trace' in
>   addition to any other specified from the command line. This initially
>   will be used to always use the augmented_raw_syscalls.o precompiled
>   BPF program for getting pointer contents. (Arnaldo Carvalho de Melo)
> 
> - Allow fine grained control about how the syscall output should be
>   formatted. This will be used to allow producing the same output produced
>   by the 'strace' tool, to then use in regression tests comparing the
>   output of 'perf trace' with the one produced from 'strace' (Arnaldo Carvalho de Melo)
> 
> - Beautify the renameat2 olddirfd, newdirfd and flags arguments (Arnaldo Carvalho de Melo)
> 
> - Beautify arch_prctl 'code' syscall arg (Arnaldo Carvalho de Melo)
> 
> - Beautify fadvise64 'advice' syscall arg (Arnaldo Carvalho de Melo)
> 
> - Relax checks on perf-PID.map ownership, resulting in symbols in
>   executable anonymous maps setup by JITs in things like node.js to
>   be resolved in a 'perf top' session run by root without the need
>   for --force to be used (Arnaldo Carvalho de Melo)
> 
> - Update asm-generic/unistd.h copy (Arnaldo Carvalho de Melo)
> 
> - Do not use the first and last symbols when setting up address filters in
>   auxtrace, this fails when we don't have a symbol table, filter the entire
>   area based on the dso size. (Adrian Hunter)
> 
> - Do not use kernel headers to build libsubcmd, we shouldn't use
>   anything from outside tools/, fixes the build with the Android NDK (Arnaldo Carvalho de Melo)
> 
> - Add several prototypes for systems lacking those, such as open_memstream(),
>   sigqueue(), fixing warnings building with Android's bionic libc that were
>   preventing the use of -Werror there (Arnaldo Carvalho de Melo)
> 
> - Use LDFLAGS in the libtraceevent build commands, allowing developers
>   to override its values (Jiri Olsa)
> 
> - Link libperf-jvmti.so with LDFLAGS variable, allowing distro
>   packages to propagate its settings when building this library (Jiri Olsa)
> 
> - cs-etm (ARM CoreSight) fixes: (Leo Yan)
> 
>   - Correct packets swapping in cs_etm__flush()
>   - Avoid stale branch samples when flush packet
>   - Remove unused 'trace_on' in cs_etm_decoder
>   - Refactor enumeration cs_etm_sample_type
>   - Rename CS_ETM_TRACE_ON to CS_ETM_DISCONTINUITY
>   - Treat NO_SYNC element as trace discontinuity
>   - Treat EO_TRACE element as trace discontinuity
>   - Generate branch sample for exception packet
> 
> - Use shebangs in the 'perf test' shell scripts, making them identifiable as
>   shell scripts (Michael Petlan)
> 
> - Avoid segfaults caused by negated options in 'perf stat' (Michael Petlan)
> 
> - Fix processing of dereferenced args in bprintk events in libtracevent (Steven Rostedt)
> 
> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
> 
> ----------------------------------------------------------------
> Adrian Hunter (2):
>       perf dso: Export data_file_size() method there are no symbols
>       perf auxtrace: Alter addr_filter__entire_dso() to work if there are no symbols
> 
> Arnaldo Carvalho de Melo (48):
>       perf trace: Rename delivery functions to ease making ordered_events selectable
>       perf trace: Allow selecting use the use of the ordered_events code
>       perf trace beauty: Beautify renameat2's fd arg wrt AT_FDCWD
>       perf beauty: Add a string table generator for renameat2's flags constants
>       perf beauty: Wire up the renameat flags table generator to the Makefile
>       perf trace: Beautify renameat2's flags argument
>       perf trace beauty: renameat's newdirfd may also be AT_FDCWD
>       tools lib subcmd: Don't add the kernel sources to the include path
>       perf tools: Add missing sigqueue() prototype for systems lacking it
>       perf header: Fix up argument to ctime()
>       perf tools: Add missing open_memstream() prototype for systems lacking it
>       perf tools: Cast off_t to s64 to avoid warning on bionic libc
>       perf trace: Rename set_ev_qualifier_filter to clarify its a tracepoint filter
>       perf trace: Avoid using raw_syscalls in duplicity with eBPF augmentation
>       perf trace: Implement syscall filtering in augmented_syscalls
>       perf bpf: Move perf_event_output() from stdio.h to bpf.h
>       perf augmented_syscalls: Switch to using a struct for the syscalls map values
>       perf trace: Switch to using a struct for the aumented_raw_syscalls syscalls map values
>       perf augmented_raw_syscalls: Do not include stdio.h
>       perf trace: Allow specifying a set of events to add in perfconfig
>       perf trace: Allow configuring if zeroed syscall args should be printed
>       perf trace: Allow configuring if the syscall duration should be printed
>       perf config: Show the configuration when no arguments are provided
>       perf trace: Allow configuring default for perf_event_attr.inherit
>       perf trace: Allow configuring if the syscall start timestamp should be printed
>       perf trace: Allow suppressing the syscall argument names
>       perf trace: Make the alignment of the syscall args be configurable
>       perf trace: Enclose strings with double quotes
>       perf trace: Add a prefix member to the strarray class
>       perf trace: Allow asking for not suppressing common string prefixes
>       perf trace beauty: Print O_RDONLY when (flags & O_ACCMODE) == 0
>       perf trace: Add alignment spaces after the closing parens
>       perf augmented_raw_syscalls: Copy 'access' arg as well
>       perf trace: Enclose the errno strings with ()
>       perf trace: Show NULL when syscall pointer args are 0
>       tools include arch: Grab a copy of x86's prctl.h
>       perf beauty: Add a string table generator for x86's 'arch_prctl' codes
>       perf beauty: Wire up the x86_arch prctl code table generator
>       perf trace: Move strarrays to beauty.h for further reuse
>       perf trace: When showing string prefixes show prefix + ??? for unknown entries
>       perf trace beauty: Beautify arch_prctl()'s arguments
>       perf beauty mmap: Print PROT_READ before PROT_EXEC to match strace output
>       perf beauty mmap: Print mmap's 'offset' arg in hexadecimal
>       tools headers uapi: Grab a copy of fadvise.h
>       perf beauty: Add generator for fadvise64's 'advice' arg constants
>       perf trace: Wire up the fadvise 'advice' table generator
>       perf symbols: Relax checks on perf-PID.map ownership
>       tools uapi asm: Update asm-generic/unistd.h copy
> 
> Jiri Olsa (2):
>       tools lib traceevent: Use LDFLAGS in the build commands
>       perf tools: Link libperf-jvmti.so with LDFLAGS variable
> 
> Leo Yan (8):
>       perf cs-etm: Correct packets swapping in cs_etm__flush()
>       perf cs-etm: Avoid stale branch samples when flush packet
>       perf cs-etm: Remove unused 'trace_on' in cs_etm_decoder
>       perf cs-etm: Refactor enumeration cs_etm_sample_type
>       perf cs-etm: Rename CS_ETM_TRACE_ON to CS_ETM_DISCONTINUITY
>       perf cs-etm: Treat NO_SYNC element as trace discontinuity
>       perf cs-etm: Treat EO_TRACE element as trace discontinuity
>       perf cs-etm: Generate branch sample for exception packet
> 
> Michael Petlan (2):
>       perf tests: Use shebangs in the shell scripts
>       perf stat: Avoid segfaults caused by negated options
> 
> Steven Rostedt (VMware) (1):
>       tools lib traceevent: Fix processing of dereferenced args in bprintk events
> 
>  tools/arch/x86/include/uapi/asm/prctl.h            |  17 +
>  tools/include/uapi/asm-generic/unistd.h            |   4 +
>  tools/include/uapi/linux/fadvise.h                 |  22 ++
>  tools/lib/subcmd/Makefile                          |   2 -
>  tools/lib/traceevent/Makefile                      |   4 +-
>  tools/lib/traceevent/event-parse.c                 |   1 +
>  tools/perf/Documentation/perf-config.txt           |  32 ++
>  tools/perf/Documentation/perf-trace.txt            |   6 +
>  tools/perf/Makefile.config                         |   2 +
>  tools/perf/Makefile.perf                           |  27 +-
>  tools/perf/builtin-config.c                        |   7 +-
>  tools/perf/builtin-stat.c                          |   8 +-
>  tools/perf/builtin-timechart.c                     |   4 +
>  tools/perf/builtin-trace.c                         | 370 ++++++++++++++++-----
>  tools/perf/check-headers.sh                        |   2 +
>  tools/perf/examples/bpf/augmented_raw_syscalls.c   |  33 +-
>  tools/perf/include/bpf/bpf.h                       |   2 +
>  tools/perf/include/bpf/stdio.h                     |   3 -
>  tools/perf/tests/builtin-test.c                    |   3 +
>  tools/perf/tests/shell/probe_vfs_getname.sh        |   1 +
>  .../tests/shell/record+probe_libc_inet_pton.sh     |   1 +
>  .../tests/shell/record+script_probe_vfs_getname.sh |   1 +
>  tools/perf/tests/shell/trace+probe_vfs_getname.sh  |   1 +
>  tools/perf/trace/beauty/Build                      |   2 +
>  tools/perf/trace/beauty/arch_prctl.c               |  33 ++
>  tools/perf/trace/beauty/beauty.h                   |  36 +-
>  tools/perf/trace/beauty/clone.c                    |   7 +-
>  tools/perf/trace/beauty/eventfd.c                  |   4 +-
>  tools/perf/trace/beauty/fadvise.sh                 |  22 ++
>  tools/perf/trace/beauty/fcntl.c                    |  22 +-
>  tools/perf/trace/beauty/flock.c                    |   4 +-
>  tools/perf/trace/beauty/futex_op.c                 |   8 +-
>  tools/perf/trace/beauty/futex_val3.c               |   3 +-
>  tools/perf/trace/beauty/ioctl.c                    |  31 +-
>  tools/perf/trace/beauty/kcmp.c                     |   8 +-
>  tools/perf/trace/beauty/mmap.c                     |  22 +-
>  tools/perf/trace/beauty/mode_t.c                   |   4 +-
>  tools/perf/trace/beauty/mount_flags.c              |   8 +-
>  tools/perf/trace/beauty/msg_flags.c                |   4 +-
>  tools/perf/trace/beauty/open_flags.c               |  13 +-
>  tools/perf/trace/beauty/perf_event_open.c          |   4 +-
>  tools/perf/trace/beauty/pkey_alloc.c               |  14 +-
>  tools/perf/trace/beauty/prctl.c                    |  16 +-
>  tools/perf/trace/beauty/rename_flags.sh            |  15 +
>  tools/perf/trace/beauty/renameat.c                 |  19 ++
>  tools/perf/trace/beauty/sched_policy.c             |   6 +-
>  tools/perf/trace/beauty/seccomp.c                  |   8 +-
>  tools/perf/trace/beauty/signum.c                   |   4 +-
>  tools/perf/trace/beauty/sockaddr.c                 |   4 +-
>  tools/perf/trace/beauty/socket.c                   |   8 +-
>  tools/perf/trace/beauty/socket_type.c              |   4 +-
>  tools/perf/trace/beauty/statx.c                    |  10 +-
>  tools/perf/trace/beauty/waitid_options.c           |   4 +-
>  tools/perf/trace/beauty/x86_arch_prctl.sh          |  26 ++
>  tools/perf/util/auxtrace.c                         |  11 +-
>  tools/perf/util/cs-etm-decoder/cs-etm-decoder.c    |  42 ++-
>  tools/perf/util/cs-etm-decoder/cs-etm-decoder.h    |  10 +-
>  tools/perf/util/cs-etm.c                           |  77 ++++-
>  tools/perf/util/dso.c                              |   6 +-
>  tools/perf/util/dso.h                              |   1 +
>  tools/perf/util/evlist.c                           |   4 +
>  tools/perf/util/header.c                           |   4 +-
>  tools/perf/util/s390-cpumsf.c                      |   2 +-
>  tools/perf/util/symbol.c                           |  11 -
>  64 files changed, 842 insertions(+), 252 deletions(-)
>  create mode 100644 tools/arch/x86/include/uapi/asm/prctl.h
>  create mode 100644 tools/include/uapi/linux/fadvise.h
>  create mode 100644 tools/perf/trace/beauty/arch_prctl.c
>  create mode 100755 tools/perf/trace/beauty/fadvise.sh
>  create mode 100755 tools/perf/trace/beauty/rename_flags.sh
>  create mode 100644 tools/perf/trace/beauty/renameat.c
>  create mode 100755 tools/perf/trace/beauty/x86_arch_prctl.sh

Pulled, thanks a lot Arnaldo!

	Ingo
