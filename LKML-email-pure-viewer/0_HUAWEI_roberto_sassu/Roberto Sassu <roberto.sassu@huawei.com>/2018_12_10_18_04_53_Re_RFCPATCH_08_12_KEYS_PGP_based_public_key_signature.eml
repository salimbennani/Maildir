Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 000EF580380;
	Mon, 10 Dec 2018 10:05:06 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 10:05:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnOHyCBWh6xEatdyrA3TrHMo0mT3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHuKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp6y?=
 =?us-ascii?q?YZUBD+QBPuhWoYfyqFQMohSiCgesBfjvyidKi3Ltwa030f4sHR3a0AEuHd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41LXGzTLYYPxIwzf99I/IeQ08r/6WRrJwatfRwlQoGgPfiVWf?=
 =?us-ascii?q?spLqPymJ1uQKqWSb9PBvVfm0i246sAxxoiWvyd0ii4bXh4IZ0EzL9SJ8wIssI9?=
 =?us-ascii?q?CzVU11Yca8HZdOqy2XM5F6Tt4sTm12oio2174LtYKhcCULypkr3wPTZ+Cdf4SW?=
 =?us-ascii?q?/h7uW/ydLDZ4iX5/Zb6yiBm//VC9xuD/VsS4yktGoyhEn9XWtH0A1gbf5taaRv?=
 =?us-ascii?q?dh+EqqxCyB2BrJ6u5eJEA5jarbJIAlwr43jpcTr0vDETHsmEnsj6+ZaF8k+u62?=
 =?us-ascii?q?5OTjeLnmoYWcN4BshgH/NKQhhNC/DPwmPgQSW2WX4/mw2bP98UHjXblHjeE6nr?=
 =?us-ascii?q?PYvZ3YPcgbo7S2Aw5R0oYt8Ra/CDKm3cwcnXkGKlJFZR2Gg5HqO17QOvD4C+mw?=
 =?us-ascii?q?g1C1nDdsyfHGOKPuAo/WI3jdn7fuY6x951RfyAUt19Bf4YxbCrUbLPL0QE/xu8?=
 =?us-ascii?q?TUDgUlPAys3+bnFNJ925saWWKOAa+WLrnesFCV5u80J+mMZYkVuCvyKvQ/5v7u?=
 =?us-ascii?q?i2M5lkEZfaWzwZQXb3W4FOx8I0qFeXrsnssBEWASswo+VuPqiUGCXiRUZ3qoX6?=
 =?us-ascii?q?I8+ys0CISpDYrYQoCtgbqB3Dq0H5FMZ2BGDEyMHmnsd4meR/gMbyeSKNd7kjMY?=
 =?us-ascii?q?TbihV5Mh1Ra2uQ/4zLpoMPDY+i4ftZLl0th14PbelRUz9TxyEsSc3HuBT2Bynm?=
 =?us-ascii?q?MUWTA22LpzrlB6yleGyaJ4meBXFcRP5/NVVQc3LYTTz/d6C9D1WQLNZM2JR0yk?=
 =?us-ascii?q?Qti9BTExT9Qxw8IBYkpnGtWiiAzD0DSuA7MPi7OLA5k0+LrG33ftP8Z912rG1K?=
 =?us-ascii?q?45glklWMRPM3eqhqp+9wfJAY7JnF6Ul6KrdaQawS7M+32PzWuIvEFETgFwVb/J?=
 =?us-ascii?q?UmwYZkvTtd75/F/NT6eyCbQ7NQtM0dONJbFUatL3l1lGRO3sONLFY22vnWe8Ah?=
 =?us-ascii?q?KIxrCJbIruYGgd2CTdCE4ZkwEc53qGNA4+Bju/rGLaFjBhCVXvY0b0++lktHy7?=
 =?us-ascii?q?VlM0zx2Nb0B5yrW64AAViuKGR/MTxL0EvjwhpCtyHFum29LWCtyApxdufalGYN?=
 =?us-ascii?q?M95ktH2nzdtwBnIpOgKKVijEYEcwtrp0Puywl3CoJYnMg2rXMqyQ1yKb6Y0FJB?=
 =?us-ascii?q?bT+YwYr8OrrNKmn2/RCvbaHW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXbTM554zK2nxjL6m1viXZ1NI0GeQq0BCgf9RY?=
 =?us-ascii?q?MKOaDwLyF8waB86zKO0lgVSpbxQEPPxM+64wJc+pa/yG2KuzNuZ6gD2mlXhH4J?=
 =?us-ascii?q?x60k+U9yt8V/TE0Iofz/CZ3guITTH8jFi6v8DzmIBEYywSH2WlxSjlAo5RerN9?=
 =?us-ascii?q?fYIRBWiyJM23w810h4TxVH5A6F6jG1QG1dezeRqTc1PyxxdQ2lkQoXC9nyu30S?=
 =?us-ascii?q?Z0kzAwoqWDxiPOx/ntewQdOm5MQmlvllPsIYmyj9AHU0mkdQkplB255Unkw6hX?=
 =?us-ascii?q?vrhwL27WQU1QZSj5M3liUrestrqFe8NO6JIovT9XUeimelCaV7j9rgAe0yPiGW?=
 =?us-ascii?q?te2T86eyurupX/gxx1lmadIGxvo3refMF63Q3f68DERf5NwjoGQzF1iTvNCVim?=
 =?us-ascii?q?PNmp/tKUm43Ysu+kVGKhVZxTcS/1woOGrya74WxqARuin/G8gNHnEA460TPl2N?=
 =?us-ascii?q?luTynHsBH8Yozz3aSgLe1nZlVoBEP768diGoBxiIwwiIsS2XgbgJWY5n4HkWb1?=
 =?us-ascii?q?MdVG1qPydnsNRTgXw9HL5AjpwlFsLnWMx4jhTHWS3tNhZ8WmYmMRwi897NpFCK?=
 =?us-ascii?q?aO4LxEgCt6uFy4rQ3KbPh5nzcdz+Yu6XEAj+EIvgot0juSArQIEUZEOizskgyC?=
 =?us-ascii?q?78qio6VPeGavbb+w2VJ7ndCgD7GNuBtQWXjndZc5AS9/8N9/P0nS333p5YHpY9?=
 =?us-ascii?q?3QbdMVth2JnBbMlelVKJQtlvUUgSprI37yvXogy+QjlxxhwYm6vJSbK2Vq5K+5?=
 =?us-ascii?q?HhlYNjjva8IS4D7ti7tent2N34CuBZhhHjQLXJ31TfOnCj4StPLnNxqQHz04sH?=
 =?us-ascii?q?uUBb3fHQqH4kd8s33PC4yrN22QJHQB1tptXh6dJEhCgAwOWDU6g4U0FgSrxMzn?=
 =?us-ascii?q?bUd46Sod5l/+qhtQ1O1oMwPzXXvYpAetcj00UoSQLAJK7gFe4EfYKc6e4fh2Hy?=
 =?us-ascii?q?5G5Z2tthCNJnaYZwRVDmEJR0qECEr4PrS14dnA8u6YBvexLvfUYLWOr/BeWOmM?=
 =?us-ascii?q?xZ61zoRm+DOMPN2VPnZ+F/07xlZDXXdhFsXZnDUPVjUXlz/XYM6dvhu84Sp3rs?=
 =?us-ascii?q?aw8PnwXALv5I2PC6ZdMNl1+hC2h7uDOPCUhCpjNTlY0ZYMz2fSyLcDxF4Slz1u?=
 =?us-ascii?q?dz61HLQAqyHNTaHQmqxWDxIBaCNzLsxI760i0QlXJM7bkcj41rp5jv4zFldEWk?=
 =?us-ascii?q?btmsCvZcwWPW69MEnLC1qMNLSDPTfL2d34YbugSb1Mi+VZrwe/uSuAHE/5IDuC?=
 =?us-ascii?q?lyPlVxSuMexXiCGbPRpeuJyycxp3CGjjSs7mZQO/MNNtkTI2xrg0jGvQNWEAKT?=
 =?us-ascii?q?h8b19NrrqI4CNEg/V/HnZN4WZ/IeaYmyaW8e/YJ40SsftqBCR0iu1b7G47y7tT?=
 =?us-ascii?q?8CFLWvh1lDHOod5pplGsivOPxSZ/UBpStjZLg5qGvEV4NqXf85lAWHDE8woM7G?=
 =?us-ascii?q?WQERsKodRlB8bru6BRzNjPia3yJC1D89LS4csTGczUJNibP3omNBq6UALTWScM?=
 =?us-ascii?q?Uz+nfUHYmEFZlOraonGVqYc3rpz3sIADRr9SSBo+EfZMWWp/G9lXGpB9Uyk4lv?=
 =?us-ascii?q?aghdUT+DLqth7bSd9GudbcX+mJHN3vNT+GgLgCbBwNl+CrZb8PP5H2jhQxImJx?=
 =?us-ascii?q?m57HTg+JBYhA?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AqAABOqg5ch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YNrJwqDcJQogWglFJc9FIFdFhgTAYdtIjUIDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?vgjYkAYJhAQEBAQIBAQIgFUEFAQkBAQoOCgICJgICA0QQBg0BBQIBAQGDHIF6C?=
 =?us-ascii?q?AQBpjKBL4VAhGGBC4sWgVc/gREnDIJfhGmDHIJXAosphFqQcgcCgiEEjyQGGIl?=
 =?us-ascii?q?2h0eHAItHhmmBSAOCCTMaI4M8gicXjh4+AQExgQQBAQEOimuBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0AqAABOqg5ch0O0hNFkHgEGBwaBUggLAYNrJwqDcJQogWg?=
 =?us-ascii?q?lFJc9FIFdFhgTAYdtIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJhAQEBA?=
 =?us-ascii?q?QIBAQIgFUEFAQkBAQoOCgICJgICA0QQBg0BBQIBAQGDHIF6CAQBpjKBL4VAhGG?=
 =?us-ascii?q?BC4sWgVc/gREnDIJfhGmDHIJXAosphFqQcgcCgiEEjyQGGIl2h0eHAItHhmmBS?=
 =?us-ascii?q?AOCCTMaI4M8gicXjh4+AQExgQQBAQEOimuBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55732762"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 10:05:04 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729103AbeLJSFD (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 13:05:03 -0500
Received: from lhrrgout.huawei.com ([185.176.76.210]:32807 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726841AbeLJSFC (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 13:05:02 -0500
Received: from LHREML711-CAH.china.huawei.com (unknown [172.18.7.108])
        by Forcepoint Email with ESMTP id 600C0824594D;
        Mon, 10 Dec 2018 18:04:58 +0000 (GMT)
Received: from [10.204.65.144] (10.204.65.144) by smtpsuk.huawei.com
 (10.201.108.34) with Microsoft SMTP Server (TLS) id 14.3.408.0; Mon, 10 Dec
 2018 18:04:53 +0000
Subject: Re: [RFC][PATCH 08/12] KEYS: PGP-based public key signature
 verification
To: David Howells <dhowells@redhat.com>
CC: <dwmw2@infradead.org>, <herbert@gondor.apana.org.au>,
        <davem@davemloft.net>, <keyrings@vger.kernel.org>,
        <linux-crypto@vger.kernel.org>, <linux-integrity@vger.kernel.org>,
        <linux-kernel@vger.kernel.org>, <silviu.vlasceanu@huawei.com>
References: <e55a9f80-d2ea-f28f-06ab-3d99786096c4@huawei.com>
 <20181112102423.30415-9-roberto.sassu@huawei.com>
 <20181112102423.30415-1-roberto.sassu@huawei.com>
 <19985.1542026635@warthog.procyon.org.uk>
 <17488.1544461088@warthog.procyon.org.uk>
From: Roberto Sassu <roberto.sassu@huawei.com>
Message-ID: <12cec606-c31e-9321-b63f-7122ce068179@huawei.com>
Date: Mon, 10 Dec 2018 19:04:53 +0100
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <17488.1544461088@warthog.procyon.org.uk>
Content-Type: text/plain; charset="utf-8"; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.204.65.144]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/10/2018 5:58 PM, David Howells wrote:
> Roberto Sassu <roberto.sassu@huawei.com> wrote:
> 
>>> You need to consider what it is that the patch trying to achieve.
>>
>> I understood that the purpose is to check PGP signatures with built-in
>> keys or keys provided by the user. Since using the session keyring
>> caused the issue I reported, I thought it was ok to use the user
>> keyring.
>>
>> Just a note: the original patches were relying on KEY_FLAG_TRUSTED to
>> determine if a key is trusted; now the trustworthiness depends on the
>> type of keyring passed to pgp_verify_sig(). I removed the additional key
>> search in the user (session) keyring to prevent that signature
>> verification is done with a key provided by the user even when the
>> caller of pgp_verify_sig() expects that a trusted key is used. The
>> search in the session keyring is done if the caller of pgp_verify_sig()
>> sets the keyring pointer to NULL.
> 
> Thinking about these patches further, as you point out, the way that trust is
> computed has changed.  There is no no KEY_FLAG_TRUSTED; rather, a key is
> assumed to be trusted if it's on a trusted keyring.
> 
> *Getting* it onto that trusted keyring is then the trick.  There are two ways:
> 
>   (1) A key can be loaded from a trusted source during boot (say a compiled in
>       set of keys).
> 
>   (2) A key can be added to that keyring later, provided that the key is
>       verified by a key already in the ring and the ring hasn't been closed.
> 
> What do we need to check PGP signatures?  Blobs or keys as well?

For my use case, verifying blobs (RPM headers or 'Release' for Debian-
based distributions) would be sufficient. The keys can be added at
compile time.


> Why does the user keyring need to be a fallback?  (I know the session keyring
> used to be a fallback when I first did these, but things have changed since
> then).

Users can verify signatures with the pgp_test key type (patch 10/12).
During the first attempt, pgp_test tries to use built-in keys. If
verification fails, pgp_test tries again with keys in the user keyring.
But if verification succeeds during the second attempt, the kernel
prints a warning saying that an untrusted key was used.


> Should we have a separate built-in keyring for PGP keys?  Actually, I suspect
> we should probably mark keys in some way with what they're permitted to be
> used for.

I kept PGP keys in the main keyring, so that verify_pgp_signature() uses
the same convention of verify_pkcs7_signature() (keyring == NULL: use
primary keys, keyring == 1: use secondary keys).

In your patches there was a capability checking mechanism, but it was
removed with commit db6c43bd2132.

Roberto


> David
> 

-- 
HUAWEI TECHNOLOGIES Duesseldorf GmbH, HRB 56063
Managing Director: Bo PENG, Jian LI, Yanli SHI
