Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B36FD580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 12:13:56 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 12:13:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A3JJehBcgorBSGgbjGJHBWO0mlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc26YxGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNwdWGRBQ91RVzRfDYyg?=
 =?us-ascii?q?c4sBAe0BPeNCoIn8oVsFsB+yCAaoCe/qzDJDm3340rAg0+k5Dw/G0gwuH9UNvn?=
 =?us-ascii?q?raotr6O6UdXvy6wqfV1TXObfFY1Djg5IXGbhwuv+qMUKlsccfT00QjCx/Jg1uS?=
 =?us-ascii?q?pIHjIjib1v4Ns2+e7+d4S++vj3AopBpvrTi128wilo7JhpkPxVvZ8ih23Jw1Jd?=
 =?us-ascii?q?qjSEFhetOkCoVfuDyaN4RsXsMuWX1nuCE/yrAfv5OwYSYEyJMixxHFavyHdZCF?=
 =?us-ascii?q?4h3iVOaNITd4mWlqdKi+hxa190Wr1+7yVtGs3VpUsiZIkcPAum0Q2xHQ8MSLVP?=
 =?us-ascii?q?Vw80e71TqS1Q3f8v9ILVwwmKbBNpIszKA8moAOvUnAECL6glv6gayQe0454Oan?=
 =?us-ascii?q?8f7nba/jppKEN497lAX+MqM2l8y7AOQ4KRQOX3OB9eSz0r3j4Ff1QLJQjv05iq?=
 =?us-ascii?q?XZsZbaKtoHpqOhHQNZzoUu5wyiAzu709kUh2cLIVxFdR6dkoTkOUnCIPXiAve+?=
 =?us-ascii?q?h1Ssni1rx/fDPrD5G5XCMH3DkKr4cblg9UFc1hQ8zdRG651PDbEBPfTzVVPvu9?=
 =?us-ascii?q?zDCRM5Nw20w+X5B9ln2YIeRHqCAquYMKPUrF+J6fgjI+iKZI8Jpjn9L+Ip6OLp?=
 =?us-ascii?q?jX88glIde66p3Z0YaHC+A/RqOUKZYWDjgtsZC2cFohI+TPD2iF2FSTNTY3eyX6?=
 =?us-ascii?q?Ei6T0hB4OmEJzORoSsgLyHwSe6EYdaZmFAClCQD3joc5+IVOsLaCKXcYdclCcZ?=
 =?us-ascii?q?X+2hV5M5zkPp8wv70KZ8aOzT/CIeqNTkztcy4uTSkRQ783tzF9ic1GeWCHh5m3?=
 =?us-ascii?q?5NSzIo0aQsnEpm113W1KF5h+BfR8Ve4u4MXgokOJqZ1eFjFt3pRirHedGGTkvg?=
 =?us-ascii?q?Rc+pViosRNA8yMNbfkBmBt+5hQrC1Sf5P7hAurCWDYY49er81nLyIN1hgyLL1K?=
 =?us-ascii?q?ArjF49XuNVOGGmj7I5/A/WUcqBuEyYkO6BfL4G1TTEvDOIxmOUpkhCWSZqXKnF?=
 =?us-ascii?q?VGxZbUzT+4fX/ETHGpSqBL4qKEN7ztWLYv9BcNryhH1cSfvjMciYaGW0zTTjTS?=
 =?us-ascii?q?2Uz6+BOdK5M14W2z/QXQ1Zyg0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAAAJpP1bhxHrdtBjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGBMIE5gRYTg3mId4sogg2XQIF2ERgHDYFLhg8iNQg?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGgeCWwEBAQECAQECICMKKQMDA?=
 =?us-ascii?q?QIGAQEKDgoCAiIEAgIDAVMGAQwGAgEBAYMcAYF5CAEECqYSgS+FQIRwgQuIfII?=
 =?us-ascii?q?GF4FAP4ERJ4I9LoMFGQKEZYJXAokDUIFChAtDNI91CYY9P4ouBhiBWU2HLDaHA?=
 =?us-ascii?q?4hqj02BSAKCCTMaCBsVgycJgh4Xhi6DARuEcSMxgQccinOBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AEAAAJpP1bhxHrdtBjGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGBMIE5gRYTg3mId4sogg2XQIF2ERgHDYFLhg8iNQgNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIGw4jDII2BQIDGgeCWwEBAQECAQECICMKKQMDAQIGAQEKDgoCAiI?=
 =?us-ascii?q?EAgIDAVMGAQwGAgEBAYMcAYF5CAEECqYSgS+FQIRwgQuIfIIGF4FAP4ERJ4I9L?=
 =?us-ascii?q?oMFGQKEZYJXAokDUIFChAtDNI91CYY9P4ouBhiBWU2HLDaHA4hqj02BSAKCCTM?=
 =?us-ascii?q?aCBsVgycJgh4Xhi6DARuEcSMxgQccinOBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="53563381"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 12:13:55 -0800
Received: from localhost ([::1]:44290 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRjk2-0004Yi-Q6
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 15:13:54 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49754)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <crosa@redhat.com>) id 1gRjjr-0004WU-W0
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:13:45 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <crosa@redhat.com>) id 1gRjjq-00017z-HL
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:13:44 -0500
Received: from mx1.redhat.com ([209.132.183.28]:40574)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <crosa@redhat.com>)
	id 1gRjjk-00015M-Jv; Tue, 27 Nov 2018 15:13:36 -0500
Received: from smtp.corp.redhat.com (int-mx08.intmail.prod.int.phx2.redhat.com
	[10.5.11.23])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 957CC30D10EE;
	Tue, 27 Nov 2018 20:13:35 +0000 (UTC)
Received: from localhost.localdomain (ovpn-126-117.rdu2.redhat.com
	[10.10.126.117])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 0A08619747;
	Tue, 27 Nov 2018 20:13:20 +0000 (UTC)
To: Eduardo Habkost <ehabkost@redhat.com>, Caio Carrara <ccarrara@redhat.com>
References: <20181127105034.21045-1-crosa@redhat.com>
	<20181127190006.GC22880@localhost.localdomain>
	<20181127194908.GR18284@habkost.net>
From: Cleber Rosa <crosa@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <812647a7-2b57-cb5a-287e-daa57ad97247@redhat.com>
Date: Tue, 27 Nov 2018 15:13:20 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181127194908.GR18284@habkost.net>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.47]);
	Tue, 27 Nov 2018 20:13:35 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC PATCH] Introduce Python module structure
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Fam Zheng <famz@redhat.com>,
	qemu-block@nongnu.org,
	=?UTF-8?Q?Alex_Benn=c3=a9e?= <alex.bennee@linaro.org>,
	qemu-devel@nongnu.org, Wainer dos Santos Moschetta <wainersm@redhat.com>,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <f4bug@amsat.org>,
	Max Reitz <mreitz@redhat.com>,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 11/27/18 2:49 PM, Eduardo Habkost wrote:
> On Tue, Nov 27, 2018 at 05:00:07PM -0200, Caio Carrara wrote:
>> Hi, Cleber.
>>
>> On Tue, Nov 27, 2018 at 05:50:34AM -0500, Cleber Rosa wrote:
>>> This is a simple move of Python code that wraps common QEMU
>>> functionality, and are used by a number of different tests
>>> and scripts.
>>>
>>> By treating that code as a real Python module, we can more easily,
>>> among other things:
>>>  * reuse more code
>>>  * apply a more consistent style
>>>  * add tests to that code
>>>  * generate documentation
>>>
>>> Signed-off-by: Cleber Rosa <crosa@redhat.com>
>>> ---
>>>  configure                                  |  1 +
>>>  scripts/qemu.py => python/qemu/__init__.py | 11 ++++++-----
>>
>> Well, we all know how difficult is to pick up names, but I would avoid
>> use `python` here. This is the name of python bin itself. Is there any
>> chance of a clash? I do not have a specific case right now, I'm just
>> wondering if it can happen we should avoid.
> 
> I'm don't see how it would be a problem: this won't be the name
> of a Python module, but just a directory to appear on sys.path.
> 
> 

Right, that's my understanding.

>>
>>>  {scripts/qmp => python/qemu}/qmp.py        |  0
>>>  {scripts => python/qemu}/qtest.py          |  5 +++--
>>>  scripts/device-crash-test                  |  5 +++++
>>>  scripts/qmp/__init__.py                    |  0
>>>  tests/acceptance/avocado_qemu/__init__.py  |  9 +++++----
>>>  tests/migration/guestperf/engine.py        | 10 +++++++---
>>>  tests/qemu-iotests/iotests.py              |  8 ++++++--
>>>  tests/vm/basevm.py                         |  9 +++++++--
>>>  10 files changed, 40 insertions(+), 18 deletions(-)
>>>  rename scripts/qemu.py => python/qemu/__init__.py (98%)
>>>  rename {scripts/qmp => python/qemu}/qmp.py (100%)
>>>  rename {scripts => python/qemu}/qtest.py (97%)
>>
>> What if we keep `qmp.py` and `qtest.py` directly under `/python`
>> directory?  It seems it can be more semantic regarding the subject of
>> each module. I'm not completely sure about `qmp.py`, but definetly I
>> think qtest should be under python directly.
> 
> I'd prefer to have everything inside a "qemu" top-level package
> to avoid module namespace conflicts with other software.
> 
> 

Agreed.  See my other reply on this thread.

>>
>>>  delete mode 100644 scripts/qmp/__init__.py
>>>
>>> diff --git a/configure b/configure
>>> index 0a3c6a72c3..2b64c51009 100755
>> [...]
>>> rename from scripts/qemu.py
>>> rename to python/qemu/__init__.py
>> [...]
>>> diff --git a/scripts/qmp/qmp.py b/python/qemu/qmp.py
>>> similarity index 100%
>>> rename from scripts/qmp/qmp.py
>>> rename to python/qemu/qmp.py
>>> diff --git a/scripts/qtest.py b/python/qemu/qtest.py
>>> similarity index 97%
>>> rename from scripts/qtest.py
>>> rename to python/qemu/qtest.py
>>> index adf1fe3f26..bff79cdd13 100644
>>> --- a/scripts/qtest.py
>>> +++ b/python/qemu/qtest.py
>> [...]
>>> diff --git a/scripts/device-crash-test b/scripts/device-crash-test
>>> index e93a7c0c84..c75ae0ecbc 100755
>>> --- a/scripts/device-crash-test
>>> +++ b/scripts/device-crash-test
>>> @@ -35,6 +35,11 @@ import random
>>>  import argparse
>>>  from itertools import chain
>>>  
>>> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
>>> +TOP_DIR = os.path.dirname(THIS_DIR)
>>> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
>>> +sys.path.append(PYTHON_MODULE_PATH)
> 
> I would prefer to use pathlib:
> 
>   from pathlib import Path
>   sys.path.append(str(Path(__file__).parent / '..' / 'python'))
> 
> but pathlib is not available on Python 2, so we could at least
> avoid using dirname(dirname(abspath(...))) and use '..' instead:

Right, I mostly have to live with Python compatible code, so pathlib is
something that is constantly under my radar.

> 
>   MY_DIR = os.path.dirname(__file__)
>   sys.path.append(os.path.join(MY_DIR, '..', 'python'))
> 
> 

Yep, I have no problem with alternative ways of getting to the Python
module directory.

What I've found though on many situations, though, is that having easy
access to the top most directory is helpful in a lot of Python modules.
 For instance, both "tests/acceptance/avocado_qemu/__init__.py" and
"tests/vm/basevm.py" are relevant examples.  Another experience I have
that confirms that is the Avocado selfests:

 $ cd avocado/selftests
 $ git grep BASEDIR | wc -l
 96

But this is a really minor thing at this point.

>>
>> This sys.path handling to use the new QEMU Python module is not good. I
>> understand it can be a first step, but to expect everyone knows/do it to
>> use the module is a bad assumption because it's not intuitive and can
>> cause some confusion.
>>
>> If we need something available from a Python script/module that is not
>> directly acessible from PYTHONPATH we should install it so Python can
>> turn it available. So, probably we need to think make `python/qemu` a
>> proper installable module.
> 
> Avoiding the sys.path trick would be nice, but how can we do that
> while keeping scripts still working out of the box?  In other
> words, how can we keep this working:
> 
>   $ git clone https://.../qemu.git
>   $ cd qemu
>   $ ./scripts/qmp-shell /path/to/qmp-socket
> 
> 

That's the point, it'd require an extra step.  For Avocado itself, we
have "make develop" that does a Python module "installation" (a fake
one, for development purposes) in the user's environment.

I'd avoid adding this extra step at this time to the QEMU workflow.

>>
>>> +
>>>  from qemu import QEMUMachine
>>>  
>>>  logger = logging.getLogger('device-crash-test')
>>> diff --git a/scripts/qmp/__init__.py b/scripts/qmp/__init__.py
>>> deleted file mode 100644
>> [...]
>>> diff --git a/tests/migration/guestperf/engine.py b/tests/migration/guestperf/engine.py
>>> index 398e3f2706..73c9b66821 100644
>>> --- a/tests/migration/guestperf/engine.py
>>> +++ b/tests/migration/guestperf/engine.py
>>> @@ -24,13 +24,17 @@ import re
>>>  import sys
>>>  import time
>>>  
>>> -sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', '..', 'scripts'))
>>> -import qemu
>>> -import qmp.qmp
>>>  from guestperf.progress import Progress, ProgressStats
>>>  from guestperf.report import Report
>>>  from guestperf.timings import TimingRecord, Timings
>>>  
>>> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
>>> +TOP_DIR = os.path.dirname(os.path.dirname(os.path.dirname(THIS_DIR)))
>>> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
>>> +sys.path.append(PYTHON_MODULE_PATH)
>>> +
>>> +import qemu
>>
>> Since `qemu` is a common word here, I would rather import the members
>> directly than only the module. Just like you did in
>> `/tests/vm/basevm,py`
> 
> I don't disagree, but I would prefer to do this in a separate
> patch, to make review easier.
> 

Me too.  See the code snippet examples on my other reply.

>>
>>> +
>>>  
>>>  class Engine(object):
>>>  
>>> diff --git a/tests/qemu-iotests/iotests.py b/tests/qemu-iotests/iotests.py
>>> index d537538ba0..92fddd2a58 100644
>>> --- a/tests/qemu-iotests/iotests.py
>>> +++ b/tests/qemu-iotests/iotests.py
>>> @@ -31,8 +31,12 @@ import logging
>> [...]
>>> --- a/tests/vm/basevm.py
>>> +++ b/tests/vm/basevm.py
>>> @@ -17,8 +17,6 @@ import sys
>>>  import logging
>>>  import time
>>>  import datetime
>>> -sys.path.append(os.path.join(os.path.dirname(__file__), "..", "..", "scripts"))
>>> -from qemu import QEMUMachine, kvm_available
>>>  import subprocess
>>>  import hashlib
>>>  import optparse
>>> @@ -28,6 +26,13 @@ import shutil
>>>  import multiprocessing
>>>  import traceback
>>>  
>>> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
>>> +TOP_DIR = os.path.dirname(os.path.dirname(THIS_DIR))
>>> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
>>> +sys.path.append(PYTHON_MODULE_PATH)
> 
> Same as above, I would prefer:
> 
>   MY_DIR = os.path.dirname(__file__)
>   sys.path.append(os.path.join(MY_DIR, '..', '..', 'python'))
> 

Sure, no hard preferences on my side here.

- Cleber.

>>> +
>>> +from qemu import QEMUMachine, kvm_available
>>> +
>>>  SSH_KEY = open(os.path.join(os.path.dirname(__file__),
>>>                 "..", "keys", "id_rsa")).read()
>>>  SSH_PUB_KEY = open(os.path.join(os.path.dirname(__file__),
>>> -- 
>>> 2.19.1
>>>
>>
>> Thanks,
>> -- 
>> Caio Carrara
>> Software Engineer, Virt Team - Red Hat
>> ccarrara@redhat.com
> 

-- 
Cleber Rosa
[ Sr Software Engineer - Virtualization Team - Red Hat ]
[ Avocado Test Framework - avocado-framework.github.io ]
[  7ABB 96EB 8B46 B94D 5E0F  E9BB 657E 8D33 A5F2 09F3  ]

