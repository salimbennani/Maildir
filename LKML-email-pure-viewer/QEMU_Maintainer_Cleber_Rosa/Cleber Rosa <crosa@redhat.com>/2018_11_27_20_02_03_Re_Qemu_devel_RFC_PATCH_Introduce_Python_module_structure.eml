Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 08:49:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EA977580322
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 12:02:43 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 12:02:43 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2LhXvRVZQ71Q4OEF5b7W4Nxt1NvV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSEu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXSm1cUMZMTCxBGp2z?=
 =?us-ascii?q?YJcTD+QPOuZYqpPyp1oIrRCjAQWhC+fixjpOi3Tr36M1zv4hHBnY0gwuH9wOt3?=
 =?us-ascii?q?faotv7O6gdU++60KbGwyjbb/5U2znw55XEfx49rf6SRrJ9atbRxEs1Gg/Zklmd?=
 =?us-ascii?q?p47oMjWI3eoNqWib6O9gWPqxhm4jtQ5+uSagxt0xgYfVgYIV0UrL/jh+zYkpP9?=
 =?us-ascii?q?24T1V7bsS/HZtKqS6VKot2Tdk+Q21ypCk6zbgGtIe9cSMXxponwBvfZOaGc4iO?=
 =?us-ascii?q?+h/jW+eRISt4hHJ4Y72znRey8U+mx+bhVce0yE5HojRZntTPrHwBygHf58udRv?=
 =?us-ascii?q?dj8Eqs2SyD2x3R5+1cP0w4ia7WJ4Q8zrM+iJYfq1nPEyz4lUnskqObdUMp8fWy?=
 =?us-ascii?q?5ev9eLXpvJqcOpd0ig7gNqQundSyAeA5MggVQ2ib4v6w1LLl/U3kWrlKiec2kq?=
 =?us-ascii?q?bBvJDbI8QUuLK5DhdL3oo/6BuzFSqq3MkbkHUdMl5IdhKKg5L0N1zMOPz4CO2w?=
 =?us-ascii?q?g1WokDdl3fDGObjhD43ULnfdlbfhYK9x5FNCxwot099f44tYBaoGIPLuXE/+qM?=
 =?us-ascii?q?LXDgQ+PwywwubnC8ty2pkRWGKSGqKZNKLSsVmV5uMgOeWMZYkVuCrjJPgh/fLh?=
 =?us-ascii?q?kXg5mVoGcKmv2psXbn+4HvJ7I0mDZnrsmNgBHX8QvgUiVOzqlEGCUTlLana2Xq?=
 =?us-ascii?q?I85S80BJipDIfeXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsoy2gEC?=
 =?us-ascii?q?TqWrHo89yQm15ki9z7t8MvGS/CoeupT+kt9v6KrWnBA28DVySMOFz2CKSXozh2?=
 =?us-ascii?q?4NWno60b5ypR9AzEye2/19iv1cCdsB/v5MT0I2OIDRy6lgBsnvVxndVtGOTlmg?=
 =?us-ascii?q?X5OhGz5mVc87wdIFfxNgHc6/hAvIxSugDuwpkOmgDZ0zuonVxWL4Pc81n33N3b?=
 =?us-ascii?q?M7hkMvatFCOW2vmuh08A2FVKDTlEDMvKKnf6kGlBTK727LmWGUu1pReBR9XaXM?=
 =?us-ascii?q?QTYUYU6A/oex3V/LU7L7UedvCQBG08PXb/YTZw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ByAABhov1bhxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCBOYEWE4N5iHeLKIFoJZk2ERgHDYFLhg8iNwYNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4jDII2BQIDGgeCWwEBAQECAQECICMKKQMDAQIGAQEKDgoCA?=
 =?us-ascii?q?iIEAgIDAVMGDQYCAQEBgxwBgXkIAQQKphSBL4VAhHGBC4h8ggYXgUA/gREnDII?=
 =?us-ascii?q?xLoMFGQKEZYJXAokDUIFChAtDNI91CYY9P4ouBhiBWU2HLDaHA5g3gVyBdzMaC?=
 =?us-ascii?q?BsVgycJgh4Xhi6DARuEcSMxgQccinOBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ByAABhov1bhxHrdtBjHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?BOYEWE4N5iHeLKIFoJZk2ERgHDYFLhg8iNwYNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4jDII2BQIDGgeCWwEBAQECAQECICMKKQMDAQIGAQEKDgoCAiIEAgIDAVMGDQY?=
 =?us-ascii?q?CAQEBgxwBgXkIAQQKphSBL4VAhHGBC4h8ggYXgUA/gREnDIIxLoMFGQKEZYJXA?=
 =?us-ascii?q?okDUIFChAtDNI91CYY9P4ouBhiBWU2HLDaHA5g3gVyBdzMaCBsVgycJgh4Xhi6?=
 =?us-ascii?q?DARuEcSMxgQccinOBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,287,1539673200"; 
   d="scan'208";a="53955576"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 12:02:43 -0800
Received: from localhost ([::1]:44261 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRjZC-0006Y4-D1
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 15:02:42 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46845)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <crosa@redhat.com>) id 1gRjYw-0006V0-4Q
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:02:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <crosa@redhat.com>) id 1gRjYu-0000UK-SO
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 15:02:26 -0500
Received: from mx1.redhat.com ([209.132.183.28]:61932)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <crosa@redhat.com>)
	id 1gRjYp-0000SW-8E; Tue, 27 Nov 2018 15:02:19 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 68A923981;
	Tue, 27 Nov 2018 20:02:18 +0000 (UTC)
Received: from localhost.localdomain (ovpn-126-117.rdu2.redhat.com
	[10.10.126.117])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id C249C60BE0;
	Tue, 27 Nov 2018 20:02:04 +0000 (UTC)
To: Caio Carrara <ccarrara@redhat.com>
References: <20181127105034.21045-1-crosa@redhat.com>
	<20181127190006.GC22880@localhost.localdomain>
From: Cleber Rosa <crosa@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <7359977f-3797-d78f-cd1a-a410e30c5357@redhat.com>
Date: Tue, 27 Nov 2018 15:02:03 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181127190006.GC22880@localhost.localdomain>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Tue, 27 Nov 2018 20:02:18 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC PATCH] Introduce Python module structure
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Fam Zheng <famz@redhat.com>,
	Eduardo Habkost <ehabkost@redhat.com>, qemu-block@nongnu.org,
	=?UTF-8?Q?Alex_Benn=c3=a9e?= <alex.bennee@linaro.org>,
	qemu-devel@nongnu.org, Wainer dos Santos Moschetta <wainersm@redhat.com>,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <f4bug@amsat.org>,
	Max Reitz <mreitz@redhat.com>,
	=?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 11/27/18 2:00 PM, Caio Carrara wrote:
> Hi, Cleber.
> 
> On Tue, Nov 27, 2018 at 05:50:34AM -0500, Cleber Rosa wrote:
>> This is a simple move of Python code that wraps common QEMU
>> functionality, and are used by a number of different tests
>> and scripts.
>>
>> By treating that code as a real Python module, we can more easily,
>> among other things:
>>  * reuse more code
>>  * apply a more consistent style
>>  * add tests to that code
>>  * generate documentation
>>
>> Signed-off-by: Cleber Rosa <crosa@redhat.com>
>> ---
>>  configure                                  |  1 +
>>  scripts/qemu.py => python/qemu/__init__.py | 11 ++++++-----
> 
> Well, we all know how difficult is to pick up names, but I would avoid
> use `python` here. This is the name of python bin itself. Is there any
> chance of a clash? I do not have a specific case right now, I'm just
> wondering if it can happen we should avoid.
> 

The point of the "python" directory, is that it's not supposed to be the
*module* name, but a holder for the Python module, which is "qemu".
Given that "python is not a module", has no __init__.py, I don't think
it'll ever clash.

The reason for picking the name is that it makes it obvious, within the
QEMU tree, that this is Python stuff.  I already have some tests, to
test the "Python stuff", to put it under "python", probably in
"python/tests".

Anyway, it'd be nice to think of alternatives here.

>>  {scripts/qmp => python/qemu}/qmp.py        |  0
>>  {scripts => python/qemu}/qtest.py          |  5 +++--
>>  scripts/device-crash-test                  |  5 +++++
>>  scripts/qmp/__init__.py                    |  0
>>  tests/acceptance/avocado_qemu/__init__.py  |  9 +++++----
>>  tests/migration/guestperf/engine.py        | 10 +++++++---
>>  tests/qemu-iotests/iotests.py              |  8 ++++++--
>>  tests/vm/basevm.py                         |  9 +++++++--
>>  10 files changed, 40 insertions(+), 18 deletions(-)
>>  rename scripts/qemu.py => python/qemu/__init__.py (98%)
>>  rename {scripts/qmp => python/qemu}/qmp.py (100%)
>>  rename {scripts => python/qemu}/qtest.py (97%)
> 
> What if we keep `qmp.py` and `qtest.py` directly under `/python`
> directory?  It seems it can be more semantic regarding the subject of
> each module. I'm not completely sure about `qmp.py`, but definetly I
> think qtest should be under python directly.
> 

I still think having a uniform starting point for the module, such as
"qemu" is a good practice for all QEMU Python code.  Having independent
first level modules will make it harder to understand where the code is
coming from.  For instance, we have the option of coming up with a
structure that would allow:


 import os
 import struct
 import qmp
 import urllib


And the origin of "qmp" would go unnoticed.  Alternatively:


 import os
 import struct
 import urllib
 from qemu import qmp


Is much clearer.  Now, with regards to "qmp", it's pretty much
standalone, uses only Python libraries, while "qemu" consumes "qmp"
functionality.  I believe having "qemu.qmp" is appropriate here.

Now, for "qtest", you have a point, it uses QEMUMachine, and its content
is very similar to what's available under "qemu" itself (that is,
QEMUMachine itself).  IMO, it would make sense to just have the
QEMUQtestProtocol and QEMUQtestMachine at the "qemu" level at this
point, that is, fold their content into "qemu/__init__.py".

The API usage would then become:


 from qemu import QEMUQTestMachine


Similar to:


 from qemu import QEMUMachine


I refrained from changing too much at the initial RFC time, though,
exactly to make less biased discussions.


>>  delete mode 100644 scripts/qmp/__init__.py
>>
>> diff --git a/configure b/configure
>> index 0a3c6a72c3..2b64c51009 100755
> [...]
>> rename from scripts/qemu.py
>> rename to python/qemu/__init__.py
> [...]
>> diff --git a/scripts/qmp/qmp.py b/python/qemu/qmp.py
>> similarity index 100%
>> rename from scripts/qmp/qmp.py
>> rename to python/qemu/qmp.py
>> diff --git a/scripts/qtest.py b/python/qemu/qtest.py
>> similarity index 97%
>> rename from scripts/qtest.py
>> rename to python/qemu/qtest.py
>> index adf1fe3f26..bff79cdd13 100644
>> --- a/scripts/qtest.py
>> +++ b/python/qemu/qtest.py
> [...]
>> diff --git a/scripts/device-crash-test b/scripts/device-crash-test
>> index e93a7c0c84..c75ae0ecbc 100755
>> --- a/scripts/device-crash-test
>> +++ b/scripts/device-crash-test
>> @@ -35,6 +35,11 @@ import random
>>  import argparse
>>  from itertools import chain
>>  
>> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
>> +TOP_DIR = os.path.dirname(THIS_DIR)
>> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
>> +sys.path.append(PYTHON_MODULE_PATH)
> 
> This sys.path handling to use the new QEMU Python module is not good. I
> understand it can be a first step, but to expect everyone knows/do it to
> use the module is a bad assumption because it's not intuitive and can
> cause some confusion.
> 
> If we need something available from a Python script/module that is not
> directly acessible from PYTHONPATH we should install it so Python can
> turn it available. So, probably we need to think make `python/qemu` a
> proper installable module.
>

It's something that is confusing for mode experienced Python developers,
but I have some experience with way too many people not understanding at
all why an extra step (the module installation), was necessary for using
Python code from within a source tree.  We faced a LOT of questions, for
a long time, when we did the switch in Avocado itself.

To summarize, you're right about the end goal, and I hope we'll get
there and remove this boiler plate code.  But, I think we need an
intermediary step.

>> +
>>  from qemu import QEMUMachine
>>  
>>  logger = logging.getLogger('device-crash-test')
>> diff --git a/scripts/qmp/__init__.py b/scripts/qmp/__init__.py
>> deleted file mode 100644
> [...]
>> diff --git a/tests/migration/guestperf/engine.py b/tests/migration/guestperf/engine.py
>> index 398e3f2706..73c9b66821 100644
>> --- a/tests/migration/guestperf/engine.py
>> +++ b/tests/migration/guestperf/engine.py
>> @@ -24,13 +24,17 @@ import re
>>  import sys
>>  import time
>>  
>> -sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', '..', 'scripts'))
>> -import qemu
>> -import qmp.qmp
>>  from guestperf.progress import Progress, ProgressStats
>>  from guestperf.report import Report
>>  from guestperf.timings import TimingRecord, Timings
>>  
>> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
>> +TOP_DIR = os.path.dirname(os.path.dirname(os.path.dirname(THIS_DIR)))
>> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
>> +sys.path.append(PYTHON_MODULE_PATH)
>> +
>> +import qemu
> 
> Since `qemu` is a common word here, I would rather import the members
> directly than only the module. Just like you did in
> `/tests/vm/basevm,py`
> 

Right, I avoided changing too much of the code using the modules, but I
do agree with you here.

Thanks for the feedback!
- Cleber.

>> +
>>  
>>  class Engine(object):
>>  
>> diff --git a/tests/qemu-iotests/iotests.py b/tests/qemu-iotests/iotests.py
>> index d537538ba0..92fddd2a58 100644
>> --- a/tests/qemu-iotests/iotests.py
>> +++ b/tests/qemu-iotests/iotests.py
>> @@ -31,8 +31,12 @@ import logging
> [...]
>> --- a/tests/vm/basevm.py
>> +++ b/tests/vm/basevm.py
>> @@ -17,8 +17,6 @@ import sys
>>  import logging
>>  import time
>>  import datetime
>> -sys.path.append(os.path.join(os.path.dirname(__file__), "..", "..", "scripts"))
>> -from qemu import QEMUMachine, kvm_available
>>  import subprocess
>>  import hashlib
>>  import optparse
>> @@ -28,6 +26,13 @@ import shutil
>>  import multiprocessing
>>  import traceback
>>  
>> +THIS_DIR = os.path.dirname(os.path.abspath(__file__))
>> +TOP_DIR = os.path.dirname(os.path.dirname(THIS_DIR))
>> +PYTHON_MODULE_PATH = os.path.join(TOP_DIR, 'python')
>> +sys.path.append(PYTHON_MODULE_PATH)
>> +
>> +from qemu import QEMUMachine, kvm_available
>> +
>>  SSH_KEY = open(os.path.join(os.path.dirname(__file__),
>>                 "..", "keys", "id_rsa")).read()
>>  SSH_PUB_KEY = open(os.path.join(os.path.dirname(__file__),
>> -- 
>> 2.19.1
>>
> 
> Thanks,
> 

-- 
Cleber Rosa
[ Sr Software Engineer - Virtualization Team - Red Hat ]
[ Avocado Test Framework - avocado-framework.github.io ]
[  7ABB 96EB 8B46 B94D 5E0F  E9BB 657E 8D33 A5F2 09F3  ]

