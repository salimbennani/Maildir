Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 16:17:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CED2A580375;
	Thu,  6 Dec 2018 19:46:12 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 19:46:12 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AhuW9rBHKePoqBg/8oU2GD51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8S6bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSiJPHI28?=
 =?us-ascii?q?YYsMAeQPM+lXoIvyqEcBoxulHQmhBvjiyiNKi3LswaE2z+osHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOascU+C1zbPHzTPfYPNWwzj975LEcx47rvGKUrJ8f9faxE4tFwPElFqQ?=
 =?us-ascii?q?r5DqPzOP2eQKqWSa4fBsVOy1hG4hpAF8uT+vxt02hYbVgoIa1ErI+jl+wIYwPN?=
 =?us-ascii?q?C1TlNwb928EJZIqS2WK497Ttk/T2xmpio20KAKtJ2ncCQQyZkqxQbTZ+GIfoSV?=
 =?us-ascii?q?+B7vSemcLDZiiH54Zb6yhgy+/VWux+D6S8K6ykxFrjBfndnJrn0N1wLc6syASv?=
 =?us-ascii?q?Zl4Eeh1iiA1xrJ5uFHP080j6zbJIAlwrIqkZoTq0vDEjf3mEXwkqCWal0p9va0?=
 =?us-ascii?q?5+njeLnqu5GRO5Fuhg3jMakihtazDOU6PwQWWmiU4+W81Lnt/U3jR7VKi+U7kq?=
 =?us-ascii?q?3YsJDcOMQaqbe1AwxL3YY57RawETOm3M0fnXgJKlJKZgiHgpP3O1HBPv/4F+2z?=
 =?us-ascii?q?g1eynzdxwfDJILnhDo/KLnjZn7ftZax95FJEyAov0dBf4IpZCrUAIPLwRED9rt?=
 =?us-ascii?q?PZDgIiPgywwubnDsh914wEVWKOBK+ZLL3dsVuS6u0zJOmMYZcfuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcdfaaz3JsXdGq3HvN8L0WZfHrjmNEBEWgRswo6TezqjkCCUDFJa3azWa?=
 =?us-ascii?q?I8+i80CIa8AYjfQYCthaSL3D2nEZ1OemBGFleMHG/qd4WDRfgAciGSIshnkjwC?=
 =?us-ascii?q?UrisUIsh1RCotA/nxLtrNOvU+isEtZ390Nh5/fHclRY39TZsFcSSz3mNT31onm?=
 =?us-ascii?q?MPXzI5xrt/oUx6yleAy6R4meZXFd5I6vNNUwc6M4PczuNgB9DzXALBYsmGSFK8?=
 =?us-ascii?q?Ttq6BjExS8o7w8USbEZlB9WikhfD0jKpA7APkbyHHpg08qPG0Hj3KMZw0HLG1K?=
 =?us-ascii?q?gnj1k7TcpDL2ymhqhj9wfNA47FiVmWl6Gvda4Exi7C6H+DzXaSvEFfSAN/TL/K?=
 =?us-ascii?q?XW4BaUfMrdT2/EXCT6SwBrQhNQdBzc2CKq5OatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweRYk1l1rq1/AMVhPOGR/MS2LIEpDkuqzFuEFmh2NLWDsKKpxB9c6VEfd?=
 =?us-ascii?q?M9/FBH2HrFtwx8O5ygKLxihl4ecghto0PizRJ3Cp9EkcgrqnMqwxF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov629o091L3H?=
 =?us-ascii?q?qT+JrLDBAeXonsUkkq7Rd6obLaYi4j547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a80IsOqbeeJ1LSqPeZghj2mi2tH7Z?=
 =?us-ascii?q?t50kKN8Sp8V+HJ04wEw/GewguISTP8gE29vcDwnIBOfSsSEXanySj4GI5RYbV/?=
 =?us-ascii?q?fZwKCWiyOcK33Mhxh5n3V35e6lGjHVIG1Na1dhWIa1zywBNf1V4QoXyhgia4yz?=
 =?us-ascii?q?10kzc0rquQxiDOwuLidAYZNW5PXmVtkVDsIY2shdAAQEeodxQplAei5Uvix6lb?=
 =?us-ascii?q?pb5zLmnJTUdTYij2KXpvUq+xtrqEfs5O54kksSRRUOSgf1+aTqTxrAcd0yPmB2?=
 =?us-ascii?q?Fe3iw0dym2upXlmBx3kGCdI2xprHraesFwwg3T5MfGSv5S3ToGRS94hifRBlWn?=
 =?us-ascii?q?O9mp/NOUl4rMs+ykVmKhUIFTfjfvzY+aqCS74mhqCwWln/+vgt3nDRQ60Sjj2t?=
 =?us-ascii?q?hqTyrIqwzwYovq16S8Ku9nekhoBFnh68t1AI1+k40whI0O1ngenJma4X0HkWLr?=
 =?us-ascii?q?O9VBxa3+dGYNRSIMw9PN4wjqwkxjImiJx4LkTHqdxMRhasK+YmMX3CI98s9LBL?=
 =?us-ascii?q?2V7LxCgSt6vF64oRjNbvh6mzcX0eEu52ICg+EVpAotyT2QArUTHUlbJyPgjRqJ?=
 =?us-ascii?q?4M6lrKVLemmva6O/21RkndCuF7yCpgBcWHDkepYtByNw78N/ME7S33338I3rZN?=
 =?us-ascii?q?7QbdcLvB2OjxjAl/RVKI42lvcSmSpnPmf9sWckyuEhixxuwIq6vJOGK2h2+KK5?=
 =?us-ascii?q?AxhYNiD6Zs8J+zHti7pekdiS34y1ApphHTALVoPyTf20CDISqejnNwGWHTInsH?=
 =?us-ascii?q?ibHr7fHRKF5EdisnLCCJSrN3CRJHkEwtRuXhidJEpDgA8KWDU2hII2FgevxMb5?=
 =?us-ascii?q?akd2+igR5kLkqhtL0u9oNQPwUmLBqwezcDs0VIKTLBlL7gFB+kfVN9aR7vloEi?=
 =?us-ascii?q?Fc/52hqhGNK2OBawRJC2EJRlKLB1T5Mray4tnA9vCSBvCiIPvWfbWOteteWu+I?=
 =?us-ascii?q?xJKoz4tm5iuMOd+JPnV4FP073UxDXX9iFsTdmjUPTTEXli3XY86aohe85jN4rs?=
 =?us-ascii?q?Sl/Pv3XwLv4JOFC6FOPtV35xC2naCDOvaQhClnKDZY1ZAMxX7SxLgcxl4SjC5u?=
 =?us-ascii?q?eCe3EbQdri7AV6bQmq5RDx4GZCJ/LspI76Qg3gZTPc7XkM/61rl9jvQtEVdKSU?=
 =?us-ascii?q?Thmt21ZcwNO2yyLk7HC12RNLuYJTzH2cX3YaKnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwWnMN92iD0626E7imnWOm4cLz?=
 =?us-ascii?q?d8dVhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuGi50jf5V4Gwmy7tJ?=
 =?us-ascii?q?6yFJXPx0lzHUrt5rolGmlPGAyztnUBVUrDZLi5mGvUFjOaXf65lBVmzI/BML7W?=
 =?us-ascii?q?WMFRsKo8FpBcHou6BVmZDzk/fRJTFZu/vE98wRT5zdOMiAPVIiPADvFTqSAAhT?=
 =?us-ascii?q?HhCxMmSKzU5cmfeZ9nSS6IczrJem0M4MS7ZdX1w8EbUFTFtsGtMqJ41+VTcp17?=
 =?us-ascii?q?WciZhbtjKFsBDNSZAC7dj8XfWIDKCqcW7BgA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAABU7Alch0O0hNFZChkBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgVMCAQEBAQELAYJpgQIng3qIeIp8NSmBNy0UlzqBcxIBARg?=
 =?us-ascii?q?DEAGHVyI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAEGQEBN?=
 =?us-ascii?q?wEFCQEBChgCAiYCAgNUBg0IAQEBgxwBggEEAaUfcHwzgnYBAQWCQ4RnCIELixR?=
 =?us-ascii?q?6gRyBOIJrhFaDL4JXiRMgKoYiNVGPXAcCAocCijwGGIFcTYRIgwEmhx6YZQIEA?=
 =?us-ascii?q?gQFAhMBgU0IgX5RH1CCbAmCEoNtiC2CM2WBBQEBijwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AGAABU7Alch0O0hNFZChkBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgVMCAQEBAQELAYJpgQIng3qIeIp8NSmBNy0UlzqBcxIBARgDEAGHVyI2Bw0BA?=
 =?us-ascii?q?wEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAEGQEBNwEFCQEBChgCAiY?=
 =?us-ascii?q?CAgNUBg0IAQEBgxwBggEEAaUfcHwzgnYBAQWCQ4RnCIELixR6gRyBOIJrhFaDL?=
 =?us-ascii?q?4JXiRMgKoYiNVGPXAcCAocCijwGGIFcTYRIgwEmhx6YZQIEAgQFAhMBgU0IgX5?=
 =?us-ascii?q?RH1CCbAmCEoNtiC2CM2WBBQEBijwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,324,1539673200"; 
   d="scan'208";a="65738324"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 06 Dec 2018 19:46:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726070AbeLGDqI (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 22:46:08 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:35310 "EHLO
        userp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725985AbeLGDqH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 22:46:07 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
        by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wB73iB1c011426;
        Fri, 7 Dec 2018 03:46:04 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=subject : to : cc :
 references : from : message-id : date : mime-version : in-reply-to :
 content-type : content-transfer-encoding; s=corp-2018-07-02;
 bh=uoNKBL0sDI8g3iXoG6H5+iI4UHsf5aH/TjM8wiLHXeI=;
 b=wb00NC2SbCm+41MrjeZNfKDdn08wiYgz2aT8VaSj3N6Z3gGKWbdJkoVM6WH7oTbTQhQ/
 0aaVMYzR+Y0ogl/6lzrMzS1sJ5GhyxpR0NHwj8WdqYVEYr7awV2AAB39HdAzLKsVWH/b
 zlF4kD9l7PwCGgzAODGuMp7LVECp7sTozX9DGsqLhd8hfbaBgPl1FLnS3WydIwbO6S9X
 Opw6cf6OIKtJEBdSn7Rj6njlFiY+AHxJsAOJE4uQfyQ8CNtii4qu6GjBi/2Qa+xidoCD
 1OH7yAmuWM1LrbfC+wqfmElhQ88Z1gkRLVeWSn3Nig4KJ02ms37Iw1GYExW0i8eopyTK zA== 
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
        by userp2120.oracle.com with ESMTP id 2p3jxrujm9-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Fri, 07 Dec 2018 03:46:03 +0000
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
        by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wB73k1cj018806
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Fri, 7 Dec 2018 03:46:02 GMT
Received: from abhmp0007.oracle.com (abhmp0007.oracle.com [141.146.116.13])
        by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wB73k1hC014239;
        Fri, 7 Dec 2018 03:46:01 GMT
Received: from [10.182.69.118] (/10.182.69.118)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Thu, 06 Dec 2018 19:46:01 -0800
Subject: Re: [PATCH V11 0/4] blk-mq: refactor code of issue directly
To: Jens Axboe <axboe@kernel.dk>
Cc: ming.lei@redhat.com, linux-block@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <1544152185-32667-1-git-send-email-jianchao.w.wang@oracle.com>
 <b2bcbb76-af6f-7660-2bc3-9796338cccff@kernel.dk>
 <0adf3419-bcce-93d8-51fb-aee7cbb5ae17@oracle.com>
 <16205e68-aa5e-c59d-364e-4164a0e51dc7@kernel.dk>
 <f052c016-e521-9f12-f4e5-d65f3814643a@kernel.dk>
 <a59a3a1d-94fb-938d-7ddf-969185cd5b48@oracle.com>
 <1e183b77-2c4d-71ff-b019-2b1070d2ed6b@kernel.dk>
From: "jianchao.wang" <jianchao.w.wang@oracle.com>
Message-ID: <38eb7c50-dfad-d9cb-f8ab-a8f5250b0ed7@oracle.com>
Date: Fri, 7 Dec 2018 11:46:43 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <1e183b77-2c4d-71ff-b019-2b1070d2ed6b@kernel.dk>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9099 signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=952
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1812070030
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/7/18 11:42 AM, Jens Axboe wrote:
> On 12/6/18 8:41 PM, jianchao.wang wrote:
>>
>>
>> On 12/7/18 11:34 AM, Jens Axboe wrote:
>>> On 12/6/18 8:32 PM, Jens Axboe wrote:
>>>> On 12/6/18 8:26 PM, jianchao.wang wrote:
>>>>>
>>>>>
>>>>> On 12/7/18 11:16 AM, Jens Axboe wrote:
>>>>>> On 12/6/18 8:09 PM, Jianchao Wang wrote:
>>>>>>> Hi Jens
>>>>>>>
>>>>>>> Please consider this patchset for 4.21.
>>>>>>>
>>>>>>> It refactors the code of issue request directly to unify the interface
>>>>>>> and make the code clearer and more readable.
>>>>>>>
>>>>>>> This patch set is rebased on the recent for-4.21/block and add the 1st
>>>>>>> patch which inserts the non-read-write request to hctx dispatch
>>>>>>> list to avoid to involve merge and io scheduler when bypass_insert
>>>>>>> is true, otherwise, inserting is ignored, BLK_STS_RESOURCE is returned
>>>>>>> and the caller will fail forever.
>>>>>>>
>>>>>>> The 2nd patch refactors the code of issue request directly to unify the
>>>>>>> helper interface which could handle all the cases.
>>>>>>>
>>>>>>> The 3rd patch make blk_mq_sched_insert_requests issue requests directly
>>>>>>> with 'bypass' false, then it needn't to handle the non-issued requests
>>>>>>> any more.
>>>>>>>
>>>>>>> The 4th patch replace and kill the blk_mq_request_issue_directly.
>>>>>>
>>>>>> Sorry to keep iterating on this, but let's default to inserting to
>>>>>> the dispatch list if we ever see busy from a direct dispatch. I'm fine
>>>>>> with doing that for 4.21, as suggested by Ming, I just didn't want to
>>>>>> fiddle with it for 4.20. This will prevent any merging on the request
>>>>>> going forward, which I think is a much safer default.
>>>>>>
>>>>>> You do this already for some cases. Let's do it unconditionally for
>>>>>> a request that was ever subjected to ->queue_rq() and we didn't either
>>>>>> error or finish after the fact.
>>>>>>
>>>>> I have done it in this version if I get your point correctly.
>>>>> Please refer to the following fragment in the 2nd patch.
>>>>>
>>>>> +	/*
>>>>> +	 * If the request is issued unsuccessfully with
>>>>> +	 * BLK_STS_DEV_RESOURCE or BLK_STS_RESOURCE, insert
>>>>> +	 * the request to hctx dispatch list due to attached
>>>>> +	 * lldd resource.
>>>>> +	 */
>>>>> +	force = true;
>>>>> +	ret = __blk_mq_issue_directly(hctx, rq, cookie, last);
>>>>> +out_unlock:
>>>>> +	hctx_unlock(hctx, srcu_idx);
>>>>> +out:
>>>>> +	switch (ret) {
>>>>> +	case BLK_STS_OK:
>>>>> +		break;
>>>>> +	case BLK_STS_DEV_RESOURCE:
>>>>> +	case BLK_STS_RESOURCE:
>>>>> +		if (force) {
>>>>> +			blk_mq_request_bypass_insert(rq, run_queue);
>>>>> +			ret = bypass ? BLK_STS_OK : ret;
>>>>> +		} else if (!bypass) {
>>>>> +			blk_mq_sched_insert_request(rq, false,
>>>>> +						    run_queue, false);
>>>>> +		}
>>>>> +		break;
>>>>> +	default:
>>>>
>>>> You are right, I missed that you set force = true before doing the
>>>> issue. So this looks good to me!
>>>
>>> I applied your series. With this, we should be good to remove the
>>> REQ_NOMERGE logic that was added for the corruption case, and the
>>> blk_rq_can_direct_dispatch() as well?
>>>
>>
>> Yes, it should be that.
>> Every thing rejected by .queue_rq is ended or inserted into hctx dispatch
>> list. And also direct-issue path is unified with normal path.
> 
> Why are we doing that return value dance, depending on whether this
> is a bypass insert or not? That seems confusing.
> 

For the 'bypass == false' case, it need to know whether the request is issued
successfully. This is for the 3rd patch.
I used to use the returned cookie to identify the result, but you don't like it.
So I have to use this return value.

Thanks
Jianchao
