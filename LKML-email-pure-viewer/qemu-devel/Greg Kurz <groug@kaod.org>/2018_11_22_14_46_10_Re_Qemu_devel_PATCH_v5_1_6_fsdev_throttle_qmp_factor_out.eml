Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:28:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5187758040F
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 06:50:33 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 06:50:33 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AmG4smxOdkVZBwNbw320l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/z5rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kJNzA37mLZhc5+jKxcrx2uuxNxzZPMYIyXNvRzcb7RcN0GSWVfRcZcTDBBD4Gm?=
 =?us-ascii?q?YocTFecNIfhUoo/grFUOtxu+AgysCfvuxD9SmHD20rAx3eE8EQHc3Q0rAtUDsH?=
 =?us-ascii?q?vOrNXyKacSXvu4zKrSwjXEcvxawzD96JLHch04p/yHQLF+cdLJxEUxCw/IjU+c?=
 =?us-ascii?q?pZH4Mz6WzOgBrWaW4up6We6yiWMrswJ8ria1yssyioTEiJgZxk7Y+Sh62oo5O9?=
 =?us-ascii?q?K1RU19bNW5CpVfrTuaOJFzQs46Q2FnpiI6yroetJ6/fSgK04gnxwXFZ/yIdYiI?=
 =?us-ascii?q?/wjvVOGLITd3nH5lebS/iAiu8UW41OHwSsq53ExXoiZYkdTArG4B2hLT58SdV/?=
 =?us-ascii?q?dw/F+t2TOV2ADS7uFEL1o0la3eK5M5274/iJ8TsVnaEiDrhkr2krGZdkE99uez?=
 =?us-ascii?q?7OTnf7PmqYOCOI9vjQ3+NqUums+hDugiPQkOQnCW+eC91L3l4E34T69Gjvwwkq?=
 =?us-ascii?q?nFrp/aId4XqbK+Aw9QyYsj7RG/DzGp0NQegHkLNlVFeAiIj4TxIVHBPOj4Deuj?=
 =?us-ascii?q?g1SriDprw/HGPr7/DZnXIXnDjazsfbJ8605a1QoywspT55NSCrEdPv3zXlX9u8?=
 =?us-ascii?q?DfDh88YESJxf36AoB9yp8GQjDIRauYK7/J91mP4O0pPq+LfoBSvT/8L/0s4bnp?=
 =?us-ascii?q?lWM4nlkGOrCk2IZSZH2mE/A1HkOCfHC5h94AFXsN7BMzSfGvhFCcXDoWfXurQq?=
 =?us-ascii?q?8n+hk9D4SpC5qFQZqi16ec1iW2FYEDe2ZdF1qXGm3pfYjXZ/BZeCOfMM9gnjFM?=
 =?us-ascii?q?AaigRp0h1B2jnA/nwqVqL6zf/ShO5rz5090gyPfemlkR6CZmR5CSyWaQQEl3l2?=
 =?us-ascii?q?QEATgs0/Ys8gRG1l6f3P0g0LRjHttJ6qYRXw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BLAACtwfZbhxHrdtBiHgEGBwaBUggLA?=
 =?us-ascii?q?YEwgmKMb4siUAEBBoE1iRiOIhSBWBsYFIRAhBIiNQgNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+CNgUCAxgJglwBAgIBAQIkEwwKKQMCAQECBgEBCiETCggDAQsuGgYTB?=
 =?us-ascii?q?YMcgXUFCAEDAapMM4oliCODZhd4gQeBEYMShGcXhVsCiSOFdkOQJgmRJAsYgVm?=
 =?us-ascii?q?ILocBmDCBRwGCCzMaCCgIgyeCJAMXEo4LcYEEA4pdgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BLAACtwfZbhxHrdtBiHgEGBwaBUggLAYEwgmKMb4siUAE?=
 =?us-ascii?q?BBoE1iRiOIhSBWBsYFIRAhBIiNQgNAQMBAQEBAQECARMBAQEKCwkIKS+CNgUCA?=
 =?us-ascii?q?xgJglwBAgIBAQIkEwwKKQMCAQECBgEBCiETCggDAQsuGgYTBYMcgXUFCAEDAap?=
 =?us-ascii?q?MM4oliCODZhd4gQeBEYMShGcXhVsCiSOFdkOQJgmRJAsYgVmILocBmDCBRwGCC?=
 =?us-ascii?q?zMaCCgIgyeCJAMXEo4LcYEEA4pdgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="63584511"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 06:50:32 -0800
Received: from localhost ([::1]:47220 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPqJL-0002hU-6Y
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 09:50:31 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53801)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1gPqJ1-0002hO-Ab
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 09:50:13 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <groug@kaod.org>) id 1gPqIy-0006sM-5m
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 09:50:11 -0500
Received: from 17.mo5.mail-out.ovh.net ([46.105.56.132]:41751)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <groug@kaod.org>) id 1gPqIx-0006pu-PX
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 09:50:08 -0500
Received: from player746.ha.ovh.net (unknown [10.109.160.230])
	by mo5.mail-out.ovh.net (Postfix) with ESMTP id B13CF206B86
	for <qemu-devel@nongnu.org>; Thu, 22 Nov 2018 15:50:05 +0100 (CET)
Received: from kaod.org (lns-bzn-46-82-253-208-248.adsl.proxad.net
	[82.253.208.248]) (Authenticated sender: groug@kaod.org)
	by player746.ha.ovh.net (Postfix) with ESMTPSA id EE112355E74;
	Thu, 22 Nov 2018 14:49:54 +0000 (UTC)
Date: Thu, 22 Nov 2018 15:46:10 +0100
From: Greg Kurz <groug@kaod.org>
To: xiezhide <xiezhide@huawei.com>
Message-ID: <20181122154610.50150df4@bahia.lan>
In-Reply-To: <ac7f8ef5d292ef798452eb4f63c25cf17b457fc2.1542384802.git.xiezhide@huawei.com>
References: <cover.1542384802.git.xiezhide@huawei.com>
	<ac7f8ef5d292ef798452eb4f63c25cf17b457fc2.1542384802.git.xiezhide@huawei.com>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-redhat-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Ovh-Tracer-Id: 13987336021923895690
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: 0
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedruddtledgieelucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenuc
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.56.132
Subject: Re: [Qemu-devel] [PATCH v5 1/6] fsdev-throttle-qmp: factor out
 throttle code to reuse code
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: berto@igalia.com, qemu-devel@nongnu.org, armbru@redhat.com,
	zengcanfu@huawei.com, aneesh.kumar@linux.vnet.ibm.com,
	jinxuefeng@huawei.com, chenhui.rtos@huawei.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, 16 Nov 2018 15:59:16 +0800
xiezhide <xiezhide@huawei.com> wrote:

> Factor out throttle parameter parsing code to a new common
> function which will be used by block and fsdev.
> Rename function throttle_parse_options to throttle_parse_group
> to resolve function name conflict
> 
> Reviewed-by: Eric Blake <eblake@redhat.com>
> Signed-off-by: xiezhide <xiezhide@huawei.com>
> ---

Reviewed-by: Greg Kurz <groug@kaod.org>

And, since I guess this will likely go through someone else's tree,
for the fsdev changes:

Acked-by: Greg Kurz <groug@kaod.org>

>  block/throttle.c                |  6 ++--
>  blockdev.c                      | 43 +-------------------------
>  fsdev/qemu-fsdev-throttle.c     | 44 ++------------------------
>  include/qemu/throttle-options.h |  2 ++
>  include/qemu/throttle.h         |  4 +--
>  include/qemu/typedefs.h         |  1 +
>  util/throttle.c                 | 68 +++++++++++++++++++++++++++++++++++++++++
>  7 files changed, 79 insertions(+), 89 deletions(-)
> 
> diff --git a/block/throttle.c b/block/throttle.c
> index 636c976..bd23c58 100644
> --- a/block/throttle.c
> +++ b/block/throttle.c
> @@ -41,7 +41,7 @@ static QemuOptsList throttle_opts = {
>   * @group and must be freed by the caller.
>   * If there's an error then @group remains unmodified.
>   */
> -static int throttle_parse_options(QDict *options, char **group, Error **errp)
> +static int throttle_parse_group(QDict *options, char **group, Error **errp)
>  {
>      int ret;
>      const char *group_name;
> @@ -90,7 +90,7 @@ static int throttle_open(BlockDriverState *bs, QDict *options,
>      bs->supported_zero_flags = bs->file->bs->supported_zero_flags |
>                                 BDRV_REQ_WRITE_UNCHANGED;
>  
> -    ret = throttle_parse_options(options, &group, errp);
> +    ret = throttle_parse_group(options, &group, errp);
>      if (ret == 0) {
>          /* Register membership to group with name group_name */
>          throttle_group_register_tgm(tgm, group, bdrv_get_aio_context(bs));
> @@ -179,7 +179,7 @@ static int throttle_reopen_prepare(BDRVReopenState *reopen_state,
>      assert(reopen_state != NULL);
>      assert(reopen_state->bs != NULL);
>  
> -    ret = throttle_parse_options(reopen_state->options, &group, errp);
> +    ret = throttle_parse_group(reopen_state->options, &group, errp);
>      reopen_state->opaque = group;
>      return ret;
>  }
> diff --git a/blockdev.c b/blockdev.c
> index 81f95d9..fce5d8f 100644
> --- a/blockdev.c
> +++ b/blockdev.c
> @@ -400,48 +400,7 @@ static void extract_common_blockdev_options(QemuOpts *opts, int *bdrv_flags,
>      }
>  
>      if (throttle_cfg) {
> -        throttle_config_init(throttle_cfg);
> -        throttle_cfg->buckets[THROTTLE_BPS_TOTAL].avg =
> -            qemu_opt_get_number(opts, "throttling.bps-total", 0);
> -        throttle_cfg->buckets[THROTTLE_BPS_READ].avg  =
> -            qemu_opt_get_number(opts, "throttling.bps-read", 0);
> -        throttle_cfg->buckets[THROTTLE_BPS_WRITE].avg =
> -            qemu_opt_get_number(opts, "throttling.bps-write", 0);
> -        throttle_cfg->buckets[THROTTLE_OPS_TOTAL].avg =
> -            qemu_opt_get_number(opts, "throttling.iops-total", 0);
> -        throttle_cfg->buckets[THROTTLE_OPS_READ].avg =
> -            qemu_opt_get_number(opts, "throttling.iops-read", 0);
> -        throttle_cfg->buckets[THROTTLE_OPS_WRITE].avg =
> -            qemu_opt_get_number(opts, "throttling.iops-write", 0);
> -
> -        throttle_cfg->buckets[THROTTLE_BPS_TOTAL].max =
> -            qemu_opt_get_number(opts, "throttling.bps-total-max", 0);
> -        throttle_cfg->buckets[THROTTLE_BPS_READ].max  =
> -            qemu_opt_get_number(opts, "throttling.bps-read-max", 0);
> -        throttle_cfg->buckets[THROTTLE_BPS_WRITE].max =
> -            qemu_opt_get_number(opts, "throttling.bps-write-max", 0);
> -        throttle_cfg->buckets[THROTTLE_OPS_TOTAL].max =
> -            qemu_opt_get_number(opts, "throttling.iops-total-max", 0);
> -        throttle_cfg->buckets[THROTTLE_OPS_READ].max =
> -            qemu_opt_get_number(opts, "throttling.iops-read-max", 0);
> -        throttle_cfg->buckets[THROTTLE_OPS_WRITE].max =
> -            qemu_opt_get_number(opts, "throttling.iops-write-max", 0);
> -
> -        throttle_cfg->buckets[THROTTLE_BPS_TOTAL].burst_length =
> -            qemu_opt_get_number(opts, "throttling.bps-total-max-length", 1);
> -        throttle_cfg->buckets[THROTTLE_BPS_READ].burst_length  =
> -            qemu_opt_get_number(opts, "throttling.bps-read-max-length", 1);
> -        throttle_cfg->buckets[THROTTLE_BPS_WRITE].burst_length =
> -            qemu_opt_get_number(opts, "throttling.bps-write-max-length", 1);
> -        throttle_cfg->buckets[THROTTLE_OPS_TOTAL].burst_length =
> -            qemu_opt_get_number(opts, "throttling.iops-total-max-length", 1);
> -        throttle_cfg->buckets[THROTTLE_OPS_READ].burst_length =
> -            qemu_opt_get_number(opts, "throttling.iops-read-max-length", 1);
> -        throttle_cfg->buckets[THROTTLE_OPS_WRITE].burst_length =
> -            qemu_opt_get_number(opts, "throttling.iops-write-max-length", 1);
> -
> -        throttle_cfg->op_size =
> -            qemu_opt_get_number(opts, "throttling.iops-size", 0);
> +        throttle_parse_options(throttle_cfg, opts);
>  
>          if (!throttle_is_valid(throttle_cfg, errp)) {
>              return;
> diff --git a/fsdev/qemu-fsdev-throttle.c b/fsdev/qemu-fsdev-throttle.c
> index cfd8641..6a4108a 100644
> --- a/fsdev/qemu-fsdev-throttle.c
> +++ b/fsdev/qemu-fsdev-throttle.c
> @@ -17,6 +17,7 @@
>  #include "qemu-fsdev-throttle.h"
>  #include "qemu/iov.h"
>  #include "qemu/option.h"
> +#include "qemu/throttle-options.h"
>  
>  static void fsdev_throttle_read_timer_cb(void *opaque)
>  {
> @@ -32,48 +33,7 @@ static void fsdev_throttle_write_timer_cb(void *opaque)
>  
>  void fsdev_throttle_parse_opts(QemuOpts *opts, FsThrottle *fst, Error **errp)
>  {
> -    throttle_config_init(&fst->cfg);
> -    fst->cfg.buckets[THROTTLE_BPS_TOTAL].avg =
> -        qemu_opt_get_number(opts, "throttling.bps-total", 0);
> -    fst->cfg.buckets[THROTTLE_BPS_READ].avg  =
> -        qemu_opt_get_number(opts, "throttling.bps-read", 0);
> -    fst->cfg.buckets[THROTTLE_BPS_WRITE].avg =
> -        qemu_opt_get_number(opts, "throttling.bps-write", 0);
> -    fst->cfg.buckets[THROTTLE_OPS_TOTAL].avg =
> -        qemu_opt_get_number(opts, "throttling.iops-total", 0);
> -    fst->cfg.buckets[THROTTLE_OPS_READ].avg =
> -        qemu_opt_get_number(opts, "throttling.iops-read", 0);
> -    fst->cfg.buckets[THROTTLE_OPS_WRITE].avg =
> -        qemu_opt_get_number(opts, "throttling.iops-write", 0);
> -
> -    fst->cfg.buckets[THROTTLE_BPS_TOTAL].max =
> -        qemu_opt_get_number(opts, "throttling.bps-total-max", 0);
> -    fst->cfg.buckets[THROTTLE_BPS_READ].max  =
> -        qemu_opt_get_number(opts, "throttling.bps-read-max", 0);
> -    fst->cfg.buckets[THROTTLE_BPS_WRITE].max =
> -        qemu_opt_get_number(opts, "throttling.bps-write-max", 0);
> -    fst->cfg.buckets[THROTTLE_OPS_TOTAL].max =
> -        qemu_opt_get_number(opts, "throttling.iops-total-max", 0);
> -    fst->cfg.buckets[THROTTLE_OPS_READ].max =
> -        qemu_opt_get_number(opts, "throttling.iops-read-max", 0);
> -    fst->cfg.buckets[THROTTLE_OPS_WRITE].max =
> -        qemu_opt_get_number(opts, "throttling.iops-write-max", 0);
> -
> -    fst->cfg.buckets[THROTTLE_BPS_TOTAL].burst_length =
> -        qemu_opt_get_number(opts, "throttling.bps-total-max-length", 1);
> -    fst->cfg.buckets[THROTTLE_BPS_READ].burst_length  =
> -        qemu_opt_get_number(opts, "throttling.bps-read-max-length", 1);
> -    fst->cfg.buckets[THROTTLE_BPS_WRITE].burst_length =
> -        qemu_opt_get_number(opts, "throttling.bps-write-max-length", 1);
> -    fst->cfg.buckets[THROTTLE_OPS_TOTAL].burst_length =
> -        qemu_opt_get_number(opts, "throttling.iops-total-max-length", 1);
> -    fst->cfg.buckets[THROTTLE_OPS_READ].burst_length =
> -        qemu_opt_get_number(opts, "throttling.iops-read-max-length", 1);
> -    fst->cfg.buckets[THROTTLE_OPS_WRITE].burst_length =
> -        qemu_opt_get_number(opts, "throttling.iops-write-max-length", 1);
> -    fst->cfg.op_size =
> -        qemu_opt_get_number(opts, "throttling.iops-size", 0);
> -
> +    throttle_parse_options(&fst->cfg, opts);
>      throttle_is_valid(&fst->cfg, errp);
>  }
>  
> diff --git a/include/qemu/throttle-options.h b/include/qemu/throttle-options.h
> index 3528a8f..944a08c 100644
> --- a/include/qemu/throttle-options.h
> +++ b/include/qemu/throttle-options.h
> @@ -111,4 +111,6 @@
>              .help = "when limiting by iops max size of an I/O in bytes",\
>          }
>  
> +void throttle_parse_options(ThrottleConfig *, QemuOpts *);
> +
>  #endif
> diff --git a/include/qemu/throttle.h b/include/qemu/throttle.h
> index abeb886..f379d91 100644
> --- a/include/qemu/throttle.h
> +++ b/include/qemu/throttle.h
> @@ -90,10 +90,10 @@ typedef struct LeakyBucket {
>   * However it allows to keep the code clean and the bucket field is reset to
>   * zero at the right time.
>   */
> -typedef struct ThrottleConfig {
> +struct ThrottleConfig {
>      LeakyBucket buckets[BUCKETS_COUNT]; /* leaky buckets */
>      uint64_t op_size;         /* size of an operation in bytes */
> -} ThrottleConfig;
> +};
>  
>  typedef struct ThrottleState {
>      ThrottleConfig cfg;       /* configuration */
> diff --git a/include/qemu/typedefs.h b/include/qemu/typedefs.h
> index 3ec0e13..0d75edc 100644
> --- a/include/qemu/typedefs.h
> +++ b/include/qemu/typedefs.h
> @@ -109,6 +109,7 @@ typedef struct SerialState SerialState;
>  typedef struct SHPCDevice SHPCDevice;
>  typedef struct SMBusDevice SMBusDevice;
>  typedef struct SSIBus SSIBus;
> +typedef struct ThrottleConfig ThrottleConfig;
>  typedef struct uWireSlave uWireSlave;
>  typedef struct VirtIODevice VirtIODevice;
>  typedef struct Visitor Visitor;
> diff --git a/util/throttle.c b/util/throttle.c
> index b38e742..e7db2ad 100644
> --- a/util/throttle.c
> +++ b/util/throttle.c
> @@ -27,6 +27,8 @@
>  #include "qemu/throttle.h"
>  #include "qemu/timer.h"
>  #include "block/aio.h"
> +#include "qemu/option.h"
> +#include "qemu/throttle-options.h"
>  
>  /* This function make a bucket leak
>   *
> @@ -636,3 +638,69 @@ void throttle_config_to_limits(ThrottleConfig *cfg, ThrottleLimits *var)
>      var->has_iops_write_max_length = true;
>      var->has_iops_size = true;
>  }
> +
> +/* parse the throttle options
> + *
> + * @opts: qemu options
> + * @throttle_cfg: throttle configuration
> + */
> +void throttle_parse_options(ThrottleConfig *throttle_cfg, QemuOpts *opts)
> +{
> +    throttle_config_init(throttle_cfg);
> +    throttle_cfg->buckets[THROTTLE_BPS_TOTAL].avg =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_TOTAL, 0);
> +    throttle_cfg->buckets[THROTTLE_BPS_READ].avg  =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_READ, 0);
> +    throttle_cfg->buckets[THROTTLE_BPS_WRITE].avg =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_WRITE, 0);
> +    throttle_cfg->buckets[THROTTLE_OPS_TOTAL].avg =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_TOTAL, 0);
> +    throttle_cfg->buckets[THROTTLE_OPS_READ].avg =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_READ, 0);
> +    throttle_cfg->buckets[THROTTLE_OPS_WRITE].avg =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_WRITE, 0);
> +    throttle_cfg->buckets[THROTTLE_BPS_TOTAL].max =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_TOTAL_MAX, 0);
> +    throttle_cfg->buckets[THROTTLE_BPS_READ].max  =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_READ_MAX, 0);
> +    throttle_cfg->buckets[THROTTLE_BPS_WRITE].max =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_WRITE_MAX, 0);
> +    throttle_cfg->buckets[THROTTLE_OPS_TOTAL].max =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_TOTAL_MAX, 0);
> +    throttle_cfg->buckets[THROTTLE_OPS_READ].max =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_READ_MAX, 0);
> +    throttle_cfg->buckets[THROTTLE_OPS_WRITE].max =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_WRITE_MAX, 0);
> +    throttle_cfg->buckets[THROTTLE_BPS_TOTAL].burst_length =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_TOTAL_MAX_LENGTH, 1);
> +    throttle_cfg->buckets[THROTTLE_BPS_READ].burst_length  =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_READ_MAX_LENGTH, 1);
> +    throttle_cfg->buckets[THROTTLE_BPS_WRITE].burst_length =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_BPS_WRITE_MAX_LENGTH, 1);
> +    throttle_cfg->buckets[THROTTLE_OPS_TOTAL].burst_length =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_TOTAL_MAX_LENGTH, 1);
> +    throttle_cfg->buckets[THROTTLE_OPS_READ].burst_length =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_READ_MAX_LENGTH, 1);
> +    throttle_cfg->buckets[THROTTLE_OPS_WRITE].burst_length =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX
> +                            QEMU_OPT_IOPS_WRITE_MAX_LENGTH, 1);
> +    throttle_cfg->op_size =
> +        qemu_opt_get_number(opts, THROTTLE_OPT_PREFIX QEMU_OPT_IOPS_SIZE, 0);
> +}


