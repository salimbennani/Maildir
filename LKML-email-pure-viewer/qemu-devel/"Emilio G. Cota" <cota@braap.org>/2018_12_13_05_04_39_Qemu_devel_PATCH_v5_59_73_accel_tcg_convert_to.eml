Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:19:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1C219580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 21:42:28 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 21:42:27 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A60EOUBcXziDS6Sr1IxsWBVIalGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc26ZRGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzqFQBsRSwCBKwBO7s0DJEmmX70bE43uknDArI3BYgH9ULsH?=
 =?us-ascii?q?nMotn7O6ISUeGxzKnJyjXIcvJY1S3g44XWdRAhveuDUbxtesfW1UYvEB/FgU+L?=
 =?us-ascii?q?pIP+JTOazP4Cs3CB4+pnT+KvhHcqpgdsqTas3schkpfFip4Wx1ze6Cl13YU4Kc?=
 =?us-ascii?q?emREN1YdOoCoZcuiOCO4drXM8vQHtktSY+x7Ecp5K3YDIGxIo6yxPebfGMbpKG?=
 =?us-ascii?q?7Qj5VOmLJDd1nHJld6y7hxa16UWgzuz8VtKo0FZRtCZFnd/Mtm0X2xzU8MiHRe?=
 =?us-ascii?q?Nx/kan2TmRywDe8v9ILVw3mKbBNpIt3709moANvUnNHiL6glj6ga2OekUh4Oeo?=
 =?us-ascii?q?6uDnYrv8pp+bMo95khj+PbormsyiGOg3LxYBX3aF9uS4zbHs5kr5QKhMjvIqjK?=
 =?us-ascii?q?bZq5fWJcAapq66HQBZyIki6wunAjei0dQYm2QHLV1fdBKGiYjpJ0/BIPTiAfij?=
 =?us-ascii?q?hFSslSxmx/bBPr3nDZXNKGXDnK3mfbZn5E5Q0BAzwsxH55JIFrEBJ+r+WkvwtN?=
 =?us-ascii?q?zbEBA1KQO1w/v8BdV514MeX3+PA6CDPKPTt1+I+vwgI+2WaIAJvzb9LuAp5/v0?=
 =?us-ascii?q?gn84nV8dc7Op3ZwSaH2gAvtmJFmZbmD3j9gaC2cFpBAxTPTwhF2FSz5TaHC/VL?=
 =?us-ascii?q?8i6zE/FYKmFpvDSZ63gLKc3Se6H4NZa3hYBl2PQj/VcZ6ZUaIMdD6KOZ0m1TgF?=
 =?us-ascii?q?TqS6DYkm0x6oqUn90bUgK+PV/igRs9XkzMR04OvI0gg/8CExA8mD3mXecmdvg2?=
 =?us-ascii?q?ldQjY32Lx481Vwz0rG3aVmjvgdD9FK+v5STi88MpjTyfE8DMr9DRncdNWEQ0rz?=
 =?us-ascii?q?X9O9HDsqRcgwydJdX0EoAtink1XP0jSnB5cTkLqEAoFy9bjTjFbrIMMogVvD1a?=
 =?us-ascii?q?0giBEJBINkMnGvzOYr/A/PDqbDiUyQj+Ctb6tKj32Fz3uK0Wfb5BIQawV3S6iQ?=
 =?us-ascii?q?GClHPkY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B2AABQ8BFcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCCYoN8iHiLM4MJkVuGbxQYFIc+IjcGDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BAQEICwsGGw4jDII2BQIDGgEGglwDAwECIAQLAQ0BAQQKKQECAwECBgEBJAIiB?=
 =?us-ascii?q?AICAwFTGQWDHIIBAQSmFnB8M4J2AQEFgkOEbgiBC4ZygyOBHBEGgX+BEYJdiDq?=
 =?us-ascii?q?CV5BFkEkHAgKRSgsYiWeHXyyZE4FcgXh9CIMnghsMF4NKhRSFXVSBAgUhE4ovg?=
 =?us-ascii?q?XcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0B2AABQ8BFcmBHrdtBjHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?CYoN8iHiLM4MJkVuGbxQYFIc+IjcGDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jD?=
 =?us-ascii?q?II2BQIDGgEGglwDAwECIAQLAQ0BAQQKKQECAwECBgEBJAIiBAICAwFTGQWDHII?=
 =?us-ascii?q?BAQSmFnB8M4J2AQEFgkOEbgiBC4ZygyOBHBEGgX+BEYJdiDqCV5BFkEkHAgKRS?=
 =?us-ascii?q?gsYiWeHXyyZE4FcgXh9CIMnghsMF4NKhRSFXVSBAgUhE4ovgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="141934487"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 21:42:26 -0800
Received: from localhost ([::1]:50624 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXJlS-0005lI-2k
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 00:42:26 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:56217)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gXJCz-0007yp-07
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 00:06:51 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gXJCw-00027b-Bg
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 00:06:48 -0500
Received: from out1-smtp.messagingengine.com ([66.111.4.25]:42177)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cota@braap.org>) id 1gXJCw-0001oV-1D
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 00:06:46 -0500
Received: from compute4.internal (compute4.nyi.internal [10.202.2.44])
	by mailout.nyi.internal (Postfix) with ESMTP id A375022120;
	Thu, 13 Dec 2018 00:05:50 -0500 (EST)
Received: from mailfrontend2 ([10.202.2.163])
	by compute4.internal (MEProxy); Thu, 13 Dec 2018 00:05:50 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=braap.org; h=
	from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-type:content-transfer-encoding; s=mesmtp;
	bh=tFy/wCEjnM8LnTfucZarM03x3VbxinHZheNUJwNOtb0=; b=hD16ZOXmisrR
	dBGlOkX2CB+UlHMwlm7oK/Vv0MPeyU5V8Mn5cStoCjzsdpxGxw+AO8AbsXpdpdN8
	kdHRTQpIcqEsc7forjhetKfewudV9OeptWlHjqDUiXwqCjpO+GFK0355cN3ur+CV
	Skl1rstCxAbvWhW6ivS3OyUGC66AMlo=
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
	messagingengine.com; h=cc:content-transfer-encoding:content-type
	:date:from:in-reply-to:message-id:mime-version:references
	:subject:to:x-me-proxy:x-me-proxy:x-me-sender:x-me-sender
	:x-sasl-enc; s=fm1; bh=tFy/wCEjnM8LnTfucZarM03x3VbxinHZheNUJwNOt
	b0=; b=J2YRExu7pJ84GCT2MfUGime0w3H1jFM7dbTup/dN9MKkq5Xa5tNNBCyox
	vtff4jsTZAiox/HG7beMz2KWf8CvOUtkOXeeZnk+CXiSJSQRR60yc0icn/su9FaP
	BJqNvaMNMPW77BR2sCF3xjna7vdOPcxnzGoWaZs4rDSmHxAXwDLKbzoXyVlHFEZq
	nvGd0LqfB/9LS6udVRyY+cJNhHar1W6CQIYVVCKTO2RuvdBddae7MLmT/vU1wlYb
	qkWq/jWRoNEjVMHHAE5rsTgCkEAT+NxzYuNNfsUsGptVwC+zfMjW4MlkzNvapVm2
	0AK3deXN3pzL1J+Jifh8KftOAh91g==
X-ME-Sender: <xms:rugRXErggCpvRrNMsOFA2Qs3yJpH4TiNrDEJjYQpgz7AyWse7lZViA>
X-ME-Proxy-Cause: gggruggvucftvghtrhhoucdtuddrgedtkedrudehuddgkedtucetufdoteggodetrfdotf
	fvucfrrhhofhhilhgvmecuhfgrshhtofgrihhlpdfquhhtnecuuegrihhlohhuthemucef
	tddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmdenucfjughrpefhvffufffkof
	gjfhggtgfgsehtkeertdertdejnecuhfhrohhmpedfgfhmihhlihhoucfirdcuvehothgr
	fdcuoegtohhtrgessghrrggrphdrohhrgheqnecukfhppeduvdekrdehledrvddtrddvud
	einecurfgrrhgrmhepmhgrihhlfhhrohhmpegtohhtrgessghrrggrphdrohhrghenucev
	lhhushhtvghrufhiiigvpedvke
X-ME-Proxy: <xmx:rugRXApznKsvSDUv-E05jxYE4Vhxmtjb8N2mx7uK5KWv0R3SGegQow>
	<xmx:rugRXEBg8O0L5JXVrxfpM3u7z_DJa0QopAqqm11LbMy1W1Hg53_Bow>
	<xmx:rugRXOuLREODUXZys4B1fBi_me1CwX3FJeUOZ_Dq16LdIjvZMRqOPg>
	<xmx:rugRXHExMBaOTkHK36acrVcdlJC2oaValVdp3mrI9PFy4HHwrSpzGA>
Received: from localhost (flamenco.cs.columbia.edu [128.59.20.216])
	by mail.messagingengine.com (Postfix) with ESMTPA id 3A0271045B;
	Thu, 13 Dec 2018 00:05:50 -0500 (EST)
From: "Emilio G. Cota" <cota@braap.org>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 00:04:39 -0500
Message-Id: <20181213050453.9677-60-cota@braap.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181213050453.9677-1-cota@braap.org>
References: <20181213050453.9677-1-cota@braap.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 66.111.4.25
Subject: [Qemu-devel] [PATCH v5 59/73] accel/tcg: convert to
 cpu_interrupt_request
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>,
	Paolo Bonzini <pbonzini@redhat.com>,
	Richard Henderson <richard.henderson@linaro.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Reviewed-by: Richard Henderson <richard.henderson@linaro.org>
Reviewed-by: Alex Benn√©e <alex.bennee@linaro.org>
Signed-off-by: Emilio G. Cota <cota@braap.org>
---
 accel/tcg/cpu-exec.c      | 15 ++++++++-------
 accel/tcg/tcg-all.c       | 12 +++++++++---
 accel/tcg/translate-all.c |  2 +-
 3 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/accel/tcg/cpu-exec.c b/accel/tcg/cpu-exec.c
index b4f46134d3..d7331d3370 100644
--- a/accel/tcg/cpu-exec.c
+++ b/accel/tcg/cpu-exec.c
@@ -428,7 +428,7 @@ static inline bool cpu_handle_halt_locked(CPUState *cpu)
 
     if (cpu_halted(cpu)) {
 #if defined(TARGET_I386) && !defined(CONFIG_USER_ONLY)
-        if ((cpu->interrupt_request & CPU_INTERRUPT_POLL)
+        if ((cpu_interrupt_request(cpu) & CPU_INTERRUPT_POLL)
             && replay_interrupt()) {
             X86CPU *x86_cpu = X86_CPU(cpu);
 
@@ -541,16 +541,17 @@ static inline bool cpu_handle_interrupt(CPUState *cpu,
      */
     atomic_mb_set(&cpu->icount_decr.u16.high, 0);
 
-    if (unlikely(atomic_read(&cpu->interrupt_request))) {
+    if (unlikely(cpu_interrupt_request(cpu))) {
         int interrupt_request;
+
         qemu_mutex_lock_iothread();
-        interrupt_request = cpu->interrupt_request;
+        interrupt_request = cpu_interrupt_request(cpu);
         if (unlikely(cpu->singlestep_enabled & SSTEP_NOIRQ)) {
             /* Mask out external interrupts for this step. */
             interrupt_request &= ~CPU_INTERRUPT_SSTEP_MASK;
         }
         if (interrupt_request & CPU_INTERRUPT_DEBUG) {
-            cpu->interrupt_request &= ~CPU_INTERRUPT_DEBUG;
+            cpu_reset_interrupt(cpu, CPU_INTERRUPT_DEBUG);
             cpu->exception_index = EXCP_DEBUG;
             qemu_mutex_unlock_iothread();
             return true;
@@ -559,7 +560,7 @@ static inline bool cpu_handle_interrupt(CPUState *cpu,
             /* Do nothing */
         } else if (interrupt_request & CPU_INTERRUPT_HALT) {
             replay_interrupt();
-            cpu->interrupt_request &= ~CPU_INTERRUPT_HALT;
+            cpu_reset_interrupt(cpu, CPU_INTERRUPT_HALT);
             cpu_halted_set(cpu, 1);
             cpu->exception_index = EXCP_HLT;
             qemu_mutex_unlock_iothread();
@@ -596,10 +597,10 @@ static inline bool cpu_handle_interrupt(CPUState *cpu,
             }
             /* The target hook may have updated the 'cpu->interrupt_request';
              * reload the 'interrupt_request' value */
-            interrupt_request = cpu->interrupt_request;
+            interrupt_request = cpu_interrupt_request(cpu);
         }
         if (interrupt_request & CPU_INTERRUPT_EXITTB) {
-            cpu->interrupt_request &= ~CPU_INTERRUPT_EXITTB;
+            cpu_reset_interrupt(cpu, CPU_INTERRUPT_EXITTB);
             /* ensure that no TB jump will be modified as
                the program flow was changed */
             *last_tb = NULL;
diff --git a/accel/tcg/tcg-all.c b/accel/tcg/tcg-all.c
index 3d25bdcc17..4e2fe70350 100644
--- a/accel/tcg/tcg-all.c
+++ b/accel/tcg/tcg-all.c
@@ -39,10 +39,16 @@ unsigned long tcg_tb_size;
 static void tcg_handle_interrupt(CPUState *cpu, int mask)
 {
     int old_mask;
-    g_assert(qemu_mutex_iothread_locked());
 
-    old_mask = cpu->interrupt_request;
-    cpu->interrupt_request |= mask;
+    if (!cpu_mutex_locked(cpu)) {
+        cpu_mutex_lock(cpu);
+        old_mask = cpu_interrupt_request(cpu);
+        cpu_interrupt_request_or(cpu, mask);
+        cpu_mutex_unlock(cpu);
+    } else {
+        old_mask = cpu_interrupt_request(cpu);
+        cpu_interrupt_request_or(cpu, mask);
+    }
 
     /*
      * If called from iothread context, wake the target cpu in
diff --git a/accel/tcg/translate-all.c b/accel/tcg/translate-all.c
index 639f0b2728..e67654370b 100644
--- a/accel/tcg/translate-all.c
+++ b/accel/tcg/translate-all.c
@@ -2344,7 +2344,7 @@ void dump_opcount_info(FILE *f, fprintf_function cpu_fprintf)
 void cpu_interrupt(CPUState *cpu, int mask)
 {
     g_assert(qemu_mutex_iothread_locked());
-    cpu->interrupt_request |= mask;
+    cpu_interrupt_request_or(cpu, mask);
     atomic_set(&cpu->icount_decr.u16.high, -1);
 }
 
-- 
2.17.1


