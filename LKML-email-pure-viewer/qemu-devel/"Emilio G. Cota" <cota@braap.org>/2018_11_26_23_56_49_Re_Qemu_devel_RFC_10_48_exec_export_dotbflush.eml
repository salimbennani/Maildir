Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:43:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0F66B580322
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 15:57:14 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 15:57:13 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Av2OtzBWZCoxR2uF23yiBfwi/PIzV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbROHt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAekPPelXs4byulQAohmwCgexHOPiyD1Gi3Dr0aA0z+guDxrG0Rc8H98Nqn?=
 =?us-ascii?q?nYsMn5Ob0PXe2z0aLGzS/Db/RT2Trl5oTGfRUhofCIXbJxdsra1EghGxnYhViO?=
 =?us-ascii?q?rozlIyma2uoQuGWc8+VgUv6vhHQ8pg5quDig3N0jipHTioIS0FDE+jx0zYAoLt?=
 =?us-ascii?q?O7UE52ecCoHIdTui2AKod6X8AvT3t2tCs0yrAKo4O3cSoSxJg62RLSaOaLfoiM?=
 =?us-ascii?q?7x75SuqdPS10iGx4dL++gRu57FKuxffmVsau1VZHtipFncfItnAKzxHT7smHSu?=
 =?us-ascii?q?Bh/ke6wzqP2AbT6vxeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFn1gaOMa0ko5+ul?=
 =?us-ascii?q?5/75brjoppKQLZJ4hwPmPqQrgMO/AOA4MgYUX2ic/OSxzKTj8lP8QLVXl/E5j7?=
 =?us-ascii?q?fWsI7EKsQfv6K2GAhV0psl6xmjETimy9MUnX0GLFJGZh2LlYfoO0zWLfD8DPe/?=
 =?us-ascii?q?hUmskThxy/DHOL3hHovCLnzZnLj9erZ97lVRyAw0zdBZ6JJUDKwBLOj0Wk/ru9?=
 =?us-ascii?q?zUFgU5PBCsw+b7FNV90ZsTWWaOAq+aLqzeq1CJ5v80LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G6cuHkOCfHC5gssdCXxY+U06Tff2kxuEVjhcYWv0WL?=
 =?us-ascii?q?gzoTQyCYajBIGEQZixgbuHx2CiE5hLI2xLFF2IQkrubJiODvIFaSaOJZ14nzkZ?=
 =?us-ascii?q?ELSsVYIlkAujrRL30KZPKO3S9SsF85X5249u+ufRmBouoCFyFNmXyGqXTmt5zV?=
 =?us-ascii?q?8PEhYy0bA3i0F7zNaOmfxxh/FIU9Ze4fVEXy8+NJjV1es8DMr9DFHvZNCMHRyL?=
 =?us-ascii?q?R9SiADZ5YZR56NgSagw1T96lkhnr1TCjCqdTkKaEUs9nupnA1mT8cp4ug03N07?=
 =?us-ascii?q?Ms2hx/GpNC?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAACFh/xbhxHrdtBjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBAYEvgmKMEV+LJYINjgSJOIFxFhgUiGMiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIGw4jDEIBDAGBZgUCAxoBBoJcAQIDAQIkCwENA?=
 =?us-ascii?q?QEECikBAgMBAgYBAQoYCR0IAwELBUkTBRaDBoICAQSlOIFsM4J2AQEFhycIim2?=
 =?us-ascii?q?BHBEGgX+EI4gzgiaPG3ePcgcCApEiIwqJRYc5LJgEgUaCDX0IgyeCGwwXg0qFF?=
 =?us-ascii?q?IVcVIECBSETgw6HAYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AEAACFh/xbhxHrdtBjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBAYEvgmKMEV+LJYINjgSJOIFxFhgUiGMiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIGw4jDEIBDAGBZgUCAxoBBoJcAQIDAQIkCwENAQEECikBAgMBAgY?=
 =?us-ascii?q?BAQoYCR0IAwELBUkTBRaDBoICAQSlOIFsM4J2AQEFhycIim2BHBEGgX+EI4gzg?=
 =?us-ascii?q?iaPG3ePcgcCApEiIwqJRYc5LJgEgUaCDX0IgyeCGwwXg0qFFIVcVIECBSETgw6?=
 =?us-ascii?q?HAYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,284,1539673200"; 
   d="scan'208";a="64078594"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 15:57:13 -0800
Received: from localhost ([::1]:39403 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRQka-0004ST-CH
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 18:57:12 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53874)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gRQkJ-0004SC-Jx
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 18:56:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gRQkG-0003kA-FC
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 18:56:55 -0500
Received: from out4-smtp.messagingengine.com ([66.111.4.28]:48107)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cota@braap.org>) id 1gRQkG-0003k4-8d
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 18:56:52 -0500
Received: from compute4.internal (compute4.nyi.internal [10.202.2.44])
	by mailout.nyi.internal (Postfix) with ESMTP id BF44F228F1;
	Mon, 26 Nov 2018 18:56:51 -0500 (EST)
Received: from mailfrontend1 ([10.202.2.162])
	by compute4.internal (MEProxy); Mon, 26 Nov 2018 18:56:51 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=braap.org; h=
	date:from:to:cc:subject:message-id:references:mime-version
	:content-type:content-transfer-encoding:in-reply-to; s=mesmtp;
	bh=iYJmKuUb+6ztjfO74ZRNntPHLgYe8PuZIABLriS5Ygk=; b=JxgA1F3NS9Ph
	KdT1rLj5tJkG+/mlS6J0G8AhRL3UXksKMt3P21eADH50TKKDuvgPUKsiFaNKsGO5
	z0r0ZDzdU76c1v2Bba19G8kTNbxD8pnu2bTvIFgNSkrOR5i2Nq1poLbLhiB0qvGh
	j7reMwh9vMH3JhNlkhQuVAAQzzS7JJ8=
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
	messagingengine.com; h=cc:content-transfer-encoding:content-type
	:date:from:in-reply-to:message-id:mime-version:references
	:subject:to:x-me-proxy:x-me-proxy:x-me-sender:x-me-sender
	:x-sasl-enc; s=fm1; bh=iYJmKuUb+6ztjfO74ZRNntPHLgYe8PuZIABLriS5Y
	gk=; b=F+suDeH7xfloE5NlsM2LpoNj37mU5acrh5j3OOBEIo1LGQVO/Q3mPZvsr
	wcxgpytXUBhWF1mg1yUV6GLlCM+I/pomIRaw4XaXkZR3I7F1YaQMLbljVD2Vbcct
	/v4bzRSo0O6M/Pu8ayA6mZ3ox+YMa3ZivhtUHeuYyb7nqeK9eBDeSVWTP0h1Ha9T
	+r1Q8VBDcF/x4nLVbk1pn0Cxn4q0Lripqk12wQuXvq5wa7B5+kFqOurvAMefQf5V
	56mpTKx006LfuHy4YP3cEMJLVMnu6VEQx+87Fv+uI9LhU5OmiizKk77IBsMKo87c
	xmN2K2DakGaS5svsT4LZ5BqrXbIrg==
X-ME-Sender: <xms:Qoj8W4SbcNut3BjjTk3TTNdVQTP9GVqhYrVPQFcOu7XEHfGzH3gmyQ>
X-ME-Proxy: <xmx:Qoj8W9DEZRhvXo8v1-rk-UD13M5KO1C82neOUDVgJPA7n8zmkw4Tew>
	<xmx:Qoj8WzhMW4Nbl-4GGdq9phtSzHafU5XztoQ2nTz4CoDlIPjbkl4x0g>
	<xmx:Qoj8W5OZtvnRsmAH4HFbivHhhZc2IIC5k4vv3WIGrZQOkZzTFB63ow>
	<xmx:Qoj8W3WoKgum7PRvLWx0Is9RICBL7RfuE99p93axHwTnFI6R_Kv0Nw>
	<xmx:Qoj8W2DaxuVzttRwDZnYzP5uBCEVp1XzmHnI3bIA_9Qb0hg0rI7juA>
	<xmx:Q4j8W29PLQwMuO-UGysacBSMAt5sALw5gAgVfjP8VQr0J6mIUu6SUQ>
Received: from localhost (flamenco.cs.columbia.edu [128.59.20.216])
	by mail.messagingengine.com (Postfix) with ESMTPA id 3ABE6E4892;
	Mon, 26 Nov 2018 18:56:50 -0500 (EST)
Date: Mon, 26 Nov 2018 18:56:49 -0500
From: "Emilio G. Cota" <cota@braap.org>
To: Alex =?iso-8859-1?Q?Benn=E9e?= <alex.bennee@linaro.org>
Message-ID: <20181126235649.GB22108@flamenco>
References: <20181025172057.20414-1-cota@braap.org>
	<20181025172057.20414-11-cota@braap.org>
	<874lc9hwe5.fsf@linaro.org> <20181123231948.GB13782@flamenco>
	<87tvk43xfq.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <87tvk43xfq.fsf@linaro.org>
User-Agent: Mutt/1.9.4 (2018-02-28)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 66.111.4.28
Subject: Re: [Qemu-devel] [RFC 10/48] exec: export do_tb_flush
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Stefan Hajnoczi <stefanha@gmail.com>,
	Peter Maydell <peter.maydell@linaro.org>, qemu-devel@nongnu.org,
	Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>,
	=?iso-8859-1?Q?Llu=EDs?= Vilanova <vilanova@ac.upc.edu>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, Nov 26, 2018 at 11:11:53 +0000, Alex Bennée wrote:
> 
> Emilio G. Cota <cota@braap.org> writes:
> 
> > On Thu, Nov 22, 2018 at 17:09:22 +0000, Alex Bennée wrote:
> >>
> >> Emilio G. Cota <cota@braap.org> writes:
> >>
> >> > This will be used by plugin code to flush the code cache as well
> >> > as doing other bookkeeping in a safe work environment.
> >>
> >> This seems a little excessive given the plugin code could just call
> >> tb_flush() directly. Wouldn't calling tb_flush after scheduling the
> >> plugin_destroy be enough?
> >>
> >> If there is a race condition here maybe we could build some sort of
> >> awareness into tb_flush as to the current run state. But having two
> >> entry points to this rather fundamental action seems likely to either be
> >> misused or misunderstood.
> >
> > We have to make sure that no callback left in the generated code is
> > called once a plugin has been uninstalled. To me, using the same safe
> > work window to both flush the TB and uninstall the plugin seems the
> > simplest way to do this.
> 
> I still think making tb_flush() aware that it can run in an exclusive
> period would be a better solution than exposing two functions for the
> operation. So tb_flush could be something like:
> 
>   void tb_flush(CPUState *cpu)
>   {
>       if (tcg_enabled()) {
>           unsigned tb_flush_count = atomic_mb_read(&tb_ctx.tb_flush_count);
>           if (cpu_current_and_exclusive(cpu)) {
>               do_tb_flush(RUN_ON_CPU_HOST_INT(tb_flush_count))
>           } else {
>               async_safe_run_on_cpu(cpu, do_tb_flush,
>                                     RUN_ON_CPU_HOST_INT(tb_flush_count));
>           }
>       }
>   }
> 
> Or possibly push that logic down into async_safe_run_on_cpu()?

The latter option would be much harder, because in async_safe_run_on_cpu
we always queue the work and kick the CPU (which could be ourselves).
IOW the job is always asynchronous, as the name implies.

I've thus implemented the former in v2, as follows (I'm using a hole
in struct CPUState to add the bool):

@@ -1277,8 +1277,13 @@ void tb_flush(CPUState *cpu)
 {
     if (tcg_enabled()) {
         unsigned tb_flush_count = atomic_mb_read(&tb_ctx.tb_flush_count);
-        async_safe_run_on_cpu(cpu, do_tb_flush,
-                              RUN_ON_CPU_HOST_INT(tb_flush_count));
+
+        if (cpu_in_exclusive_work_context(cpu)) {
+            do_tb_flush(cpu, RUN_ON_CPU_HOST_INT(tb_flush_count));
+        } else {
+            async_safe_run_on_cpu(cpu, do_tb_flush,
+                                  RUN_ON_CPU_HOST_INT(tb_flush_count));
+        }
     }
 }

+++ b/cpus-common.c
@@ -386,7 +386,9 @@ static void process_queued_cpu_work_locked(CPUState *cpu)
                 qemu_mutex_unlock_iothread();
             }
             start_exclusive();
+            cpu->in_exclusive_work_context = true;
             wi->func(cpu, wi->data);
+            cpu->in_exclusive_work_context = false;
             end_exclusive();

I've also fixed a couple of unrelated bugs when uninstalling a plugin
with memory callbacks enabled.

Thanks,

		Emilio

