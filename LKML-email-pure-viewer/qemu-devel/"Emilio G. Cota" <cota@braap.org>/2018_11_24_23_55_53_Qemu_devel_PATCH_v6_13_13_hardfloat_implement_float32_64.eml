Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 25 Nov 2018 14:43:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A20C95803C2
	for <like.xu@linux.intel.com>; Sat, 24 Nov 2018 16:08:34 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 24 Nov 2018 16:08:34 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3As8hX+hzazMXV9hHXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uIVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhfWS9GDIy+?=
 =?us-ascii?q?YYsBEvIBMORaoYTyulcDoweyChe3BO701jNEmmX70bEg3ug9DQ3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LKkeX++wzKnJyTXDbvRW0ir85oTSbxssv/aMXa5qfsbf1EIiEB/KjlKM?=
 =?us-ascii?q?qYP/JD6azf4NvHKB4Op4T+6vjHQnqw5orzWp28wihI7JhocPxVDF8yV02Ic1Jd?=
 =?us-ascii?q?i3SE5me96oCodftyafN4ZwX8gsQHlotT4kxrEaupO3ZjUGxIkkyhLFdfCKfYiF?=
 =?us-ascii?q?7gj+WOuTOTt0mWxpdbGlixuy9UWs0PPwWtWu3FpUsyZIk9/BvW0X2RPJ8MiIUP?=
 =?us-ascii?q?5981+h2TmR0wDT7flJIUQ1larAN54h2aQ8lpUVsUTeBCP2n1/2jKCOekUl/Oin?=
 =?us-ascii?q?9fjnb634qpOANIJ4kBzyPrktl8ClH+g1PAgDU3KG9em+zLHj+Ff2QLROjv04iK?=
 =?us-ascii?q?nZt5XaKNwCpqGnBg9Vz58v5AuhADe4ztsYmWALI0lCeBKaiYjmJ0/BIOv/Afe7?=
 =?us-ascii?q?glSskylky+rJP738GpjNKnnDkLH8fbdy8UJcyQwzzcxB6JJQEL0OPPXzWkrqud?=
 =?us-ascii?q?zeCR85NQO0w+D6CNln0YMeQ22PDreDMKzOqV+I+v4vI+6UaY8RuTb9KOYq6+Th?=
 =?us-ascii?q?jH8kglIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOm5wGCESiNZMnauQ7?=
 =?us-ascii?q?ontHZ8DIO9EZyFQIerj7qcmiChEdpTb2FCD1mKVnDwa4SDXexLcS+XP4ptnyIJ?=
 =?us-ascii?q?UeucTZQ830SrvQ7+1701N+fR52gUuIzu0J1v6vTOmAou3TpzCcubzieKVW4jhX?=
 =?us-ascii?q?4CRTI9wPVip1dgwEyIy6lyjq9kEolK6vZUFws3K5PY5+p9Dd/0R0TGZNjaZkyh?=
 =?us-ascii?q?R4DsLDQwStM2i/BIK216B9zoxkTI2DajK7UPnrWTQpsu/fSPjDDKO89hxiOeh+?=
 =?us-ascii?q?EahF48T54KbDX+iw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B6AgB35/lbhxHrdtBiHgEGBwaBZYExg?=
 =?us-ascii?q?TmBKYxwpl0UGAcNiFoiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQa?=
 =?us-ascii?q?CXAMDAQI9AQEECikBAgMBAgYBAUgIAwFTGQWDHAGCAQEEoy+CHxSCYgEBBYEwA?=
 =?us-ascii?q?YEShFIDBYdegw+BHBEGgX+BEYd0hXeJJYV2d49yBwICkSILGIlPhzmNFywrikK?=
 =?us-ascii?q?BXYF2fQiDJ4Ibg22FFIVcVIECBSETiVyBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0B6AgB35/lbhxHrdtBiHgEGBwaBZYExgTmBKYxwpl0UGAc?=
 =?us-ascii?q?NiFoiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCXAMDAQI9AQEEC?=
 =?us-ascii?q?ikBAgMBAgYBAUgIAwFTGQWDHAGCAQEEoy+CHxSCYgEBBYEwAYEShFIDBYdegw+?=
 =?us-ascii?q?BHBEGgX+BEYd0hXeJJYV2d49yBwICkSILGIlPhzmNFywrikKBXYF2fQiDJ4Ibg?=
 =?us-ascii?q?22FFIVcVIECBSETiVyBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,276,1539673200"; 
   d="scan'208";a="52492489"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 24 Nov 2018 16:08:33 -0800
Received: from localhost ([::1]:58202 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gQhyT-0005gT-4Q
	for like.xu@linux.intel.com; Sat, 24 Nov 2018 19:08:33 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57607)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gQhmj-0003Qz-4t
	for qemu-devel@nongnu.org; Sat, 24 Nov 2018 18:56:27 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gQhme-0006e2-A1
	for qemu-devel@nongnu.org; Sat, 24 Nov 2018 18:56:25 -0500
Received: from wout2-smtp.messagingengine.com ([64.147.123.25]:47617)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cota@braap.org>) id 1gQhme-0005OH-1n
	for qemu-devel@nongnu.org; Sat, 24 Nov 2018 18:56:20 -0500
Received: from compute4.internal (compute4.nyi.internal [10.202.2.44])
	by mailout.west.internal (Postfix) with ESMTP id C7C51D0F;
	Sat, 24 Nov 2018 18:56:03 -0500 (EST)
Received: from mailfrontend2 ([10.202.2.163])
	by compute4.internal (MEProxy); Sat, 24 Nov 2018 18:56:04 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=braap.org; h=
	from:to:cc:subject:date:message-id:in-reply-to:references; s=
	mesmtp; bh=e7ciGg3YiL1x7XCnTx7UfOknXcepmzGvg99XkPSqOPU=; b=R3CeB
	GuU3hrrCkWmmDS1Xmhe6R60ZaehM6l6acOQOLCaBzfOCsCDeTfx+YQ3lAH+XyhWD
	ssXndvrlJNUuLgeMhmU1viRDgheHfb0VGy0Zr+IYHkSugjg34UBhyAMDqvpc29U2
	4I8dU5yu242XBEbouDy90o5IXz2Oz1ja8P645M=
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
	messagingengine.com; h=cc:date:from:in-reply-to:message-id
	:references:subject:to:x-me-proxy:x-me-proxy:x-me-sender
	:x-me-sender:x-sasl-enc; s=fm1; bh=e7ciGg3YiL1x7XCnTx7UfOknXcepm
	zGvg99XkPSqOPU=; b=ZEnPOCXg2jQngh5ZXX14njeFTfLBA2xHKCoQ1X/lCiT7T
	31Z4aspNfCUuKTJyxqO2yNueJjg/EmXLmk/NZZGzpss1U1vMxRwgC6intpnUP8d1
	DoASRhpU4HG/AbsmuiaWF01WnuUNGjO34TE1NYuSs8XPnM/WXOklNB/lmU5DQZ/z
	dwLJJVkHdoAXRMZmSDIk+Yd+YOTK1nWeh89jzxixM8Tljhd8C+O0wfvDvZzuWckq
	zMsLeUzvHo0WazhF+mLnOrOzTWOY43o+6/QYljulE+DIVokxK/yPzpdcopUNf2CN
	fWkykfLwfBOWFELJu2ZrWdggcHxiuIhlRu1o1BXaw==
X-ME-Sender: <xms:E-X5W4Pt-zynIWn4ArWfI5YewGavFq1xXKRApxSGYFwn7dMSP378bw>
X-ME-Proxy: <xmx:E-X5W36wNG6MiBKS5rpRDLDGM_kh-ekD4XzKe_o5hdwl9VrbXmuzkw>
	<xmx:E-X5W9OHBXakf1jZBR73DPQOr-NakPbq3KnMZ47tvo42-vCVc2lf8A>
	<xmx:E-X5W2FKcWYvRczfM0D_LGKz-kEiYuT1p0hHWpzCrAcvRrbecj2qOg>
	<xmx:E-X5WyyDreB6QEejLbUXEhnckJvDe2ZX8PUcOUjOm5VBOOtUOKF9Mg>
	<xmx:E-X5Wzv34nImTl0jzWMG5Dr1i74S7aPojoof1eOIvMySByPN_CoAIw>
	<xmx:E-X5W4bf9vL0CLHbvaaxTdSWliYGJtC2oXArmw4AheZqlHTw6N7y4A>
Received: from localhost (flamenco.cs.columbia.edu [128.59.20.216])
	by mail.messagingengine.com (Postfix) with ESMTPA id 1D07C102F1;
	Sat, 24 Nov 2018 18:56:03 -0500 (EST)
From: "Emilio G. Cota" <cota@braap.org>
To: qemu-devel@nongnu.org
Date: Sat, 24 Nov 2018 18:55:53 -0500
Message-Id: <20181124235553.17371-14-cota@braap.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181124235553.17371-1-cota@braap.org>
References: <20181124235553.17371-1-cota@braap.org>
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 64.147.123.25
Subject: [Qemu-devel] [PATCH v6 13/13] hardfloat: implement float32/64
 comparison
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Richard Henderson <richard.henderson@linaro.org>,
	=?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Performance results for fp-bench:

Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz
- before:
cmp-single: 110.98 MFlops
cmp-double: 107.12 MFlops
- after:
cmp-single: 506.28 MFlops
cmp-double: 524.77 MFlops

Note that flattening both eq and eq_signaling versions
would give us extra performance (695v506, 615v524 Mflops
for single/double, respectively) but this would emit two
essentially identical functions for each eq/signaling pair,
which is a waste.

Aggregate performance improvement for the last few patches:
[ all charts in png: https://imgur.com/a/4yV8p ]

1. Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz

                   qemu-aarch64 NBench score; higher is better
                 Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz

  16 +-+-----------+-------------+----===-------+---===-------+-----------+-+
  14 +-+..........................@@@&&.=.......@@@&&.=...................+-+
  12 +-+..........................@.@.&.=.......@.@.&.=.....+befor===     +-+
  10 +-+..........................@.@.&.=.......@.@.&.=.....+ad@@&& =     +-+
   8 +-+.......................$$$%.@.&.=.......@.@.&.=.....+  @@u& =     +-+
   6 +-+............@@@&&=+***##.$%.@.&.=***##$$%+@.&.=..###$$%%@i& =     +-+
   4 +-+.......###$%%.@.&=.*.*.#.$%.@.&.=*.*.#.$%.@.&.=+**.#+$ +@m& =     +-+
   2 +-+.....***.#$.%.@.&=.*.*.#.$%.@.&.=*.*.#.$%.@.&.=.**.#+$+sqr& =     +-+
   0 +-+-----***##$%%@@&&=-***##$$%@@&&==***##$$%@@&&==-**##$$%+cmp==-----+-+
            FOURIER    NEURAL NELU DECOMPOSITION         gmean

                              qemu-aarch64 SPEC06fp (test set) speedup over QEMU 4c2c1015905
                                      Host: Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz
                                            error bars: 95% confidence interval

  4.5 +-+---+-----+----+-----+-----+-&---+-----+----+-----+-----+-----+----+-----+-----+-----+-----+----+-----+---+-+
    4 +-+..........................+@@+...........................................................................+-+
  3.5 +-+..............%%@&.........@@..............%%@&............................................+++dsub       +-+
  2.5 +-+....&&+.......%%@&.......+%%@..+%%&+..@@&+.%%@&....................................+%%&+.+%@&++%%@&      +-+
    2 +-+..+%%&..+%@&+.%%@&...+++..%%@...%%&.+$$@&..%%@&..%%@&.......+%%&+.%%@&+......+%%@&.+%%&++$$@&++d%@&  %%@&+-+
  1.5 +-+**#$%&**#$@&**#%@&**$%@**#$%@**#$%&**#$@&**$%@&*#$%@**#$%@**#$%&**#%@&**$%@&*#$%@**#$%&**#$@&*+f%@&**$%@&+-+
  0.5 +-+**#$%&**#$@&**#%@&**$%@**#$%@**#$%&**#$@&**$%@&*#$%@**#$%@**#$%&**#%@&**$%@&*#$%@**#$%&**#$@&+sqr@&**$%@&+-+
    0 +-+**#$%&**#$@&**#%@&**$%@**#$%@**#$%&**#$@&**$%@&*#$%@**#$%@**#$%&**#%@&**$%@&*#$%@**#$%&**#$@&*+cmp&**$%@&+-+
  410.bw416.gam433.434.z435.436.cac437.lesli444.447.de450.so453454.ca459.GemsF465.tont470.lb4482.sphinxgeomean

2. Host: ARM Aarch64 A57 @ 2.4GHz

                    qemu-aarch64 NBench score; higher is better
                 Host: Applied Micro X-Gene, Aarch64 A57 @ 2.4 GHz

    5 +-+-----------+-------------+-------------+-------------+-----------+-+
  4.5 +-+........................................@@@&==...................+-+
  3 4 +-+..........................@@@&==........@.@&.=.....+before       +-+
    3 +-+..........................@.@&.=........@.@&.=.....+ad@@@&==     +-+
  2.5 +-+.....................##$$%%.@&.=........@.@&.=.....+  @m@& =     +-+
    2 +-+............@@@&==.***#.$.%.@&.=.***#$$%%.@&.=.***#$$%%d@& =     +-+
  1.5 +-+.....***#$$%%.@&.=.*.*#.$.%.@&.=.*.*#.$.%.@&.=.*.*#+$ +f@& =     +-+
  0.5 +-+.....*.*#.$.%.@&.=.*.*#.$.%.@&.=.*.*#.$.%.@&.=.*.*#+$+sqr& =     +-+
    0 +-+-----***#$$%%@@&==-***#$$%%@@&==-***#$$%%@@&==-***#$$%+cmp==-----+-+
             FOURIER    NEURAL NLU DECOMPOSITION         gmean

Signed-off-by: Emilio G. Cota <cota@braap.org>
---
 fpu/softfloat.c | 109 +++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 95 insertions(+), 14 deletions(-)

diff --git a/fpu/softfloat.c b/fpu/softfloat.c
index 4c6ecd1883..b29a2b6714 100644
--- a/fpu/softfloat.c
+++ b/fpu/softfloat.c
@@ -2899,28 +2899,109 @@ static int compare_floats(FloatParts a, FloatParts b, bool is_quiet,
     }
 }
 
-#define COMPARE(sz)                                                     \
-int float ## sz ## _compare(float ## sz a, float ## sz b,               \
-                            float_status *s)                            \
+#define COMPARE(name, attr, sz)                                         \
+static int attr                                                         \
+name(float ## sz a, float ## sz b, bool is_quiet, float_status *s)      \
 {                                                                       \
     FloatParts pa = float ## sz ## _unpack_canonical(a, s);             \
     FloatParts pb = float ## sz ## _unpack_canonical(b, s);             \
-    return compare_floats(pa, pb, false, s);                            \
-}                                                                       \
-int float ## sz ## _compare_quiet(float ## sz a, float ## sz b,         \
-                                  float_status *s)                      \
-{                                                                       \
-    FloatParts pa = float ## sz ## _unpack_canonical(a, s);             \
-    FloatParts pb = float ## sz ## _unpack_canonical(b, s);             \
-    return compare_floats(pa, pb, true, s);                             \
+    return compare_floats(pa, pb, is_quiet, s);                         \
 }
 
-COMPARE(16)
-COMPARE(32)
-COMPARE(64)
+COMPARE(soft_f16_compare, QEMU_FLATTEN, 16)
+COMPARE(soft_f32_compare, QEMU_SOFTFLOAT_ATTR, 32)
+COMPARE(soft_f64_compare, QEMU_SOFTFLOAT_ATTR, 64)
 
 #undef COMPARE
 
+int float16_compare(float16 a, float16 b, float_status *s)
+{
+    return soft_f16_compare(a, b, false, s);
+}
+
+int float16_compare_quiet(float16 a, float16 b, float_status *s)
+{
+    return soft_f16_compare(a, b, true, s);
+}
+
+static int QEMU_FLATTEN
+f32_compare(float32 xa, float32 xb, bool is_quiet, float_status *s)
+{
+    union_float32 ua, ub;
+
+    ua.s = xa;
+    ub.s = xb;
+
+    if (QEMU_NO_HARDFLOAT) {
+        goto soft;
+    }
+
+    float32_input_flush2(&ua.s, &ub.s, s);
+    if (isgreaterequal(ua.h, ub.h)) {
+        if (isgreater(ua.h, ub.h)) {
+            return float_relation_greater;
+        }
+        return float_relation_equal;
+    }
+    if (likely(isless(ua.h, ub.h))) {
+        return float_relation_less;
+    }
+    /* The only condition remaining is unordered.
+     * Fall through to set flags.
+     */
+ soft:
+    return soft_f32_compare(ua.s, ub.s, is_quiet, s);
+}
+
+int float32_compare(float32 a, float32 b, float_status *s)
+{
+    return f32_compare(a, b, false, s);
+}
+
+int float32_compare_quiet(float32 a, float32 b, float_status *s)
+{
+    return f32_compare(a, b, true, s);
+}
+
+static int QEMU_FLATTEN
+f64_compare(float64 xa, float64 xb, bool is_quiet, float_status *s)
+{
+    union_float64 ua, ub;
+
+    ua.s = xa;
+    ub.s = xb;
+
+    if (QEMU_NO_HARDFLOAT) {
+        goto soft;
+    }
+
+    float64_input_flush2(&ua.s, &ub.s, s);
+    if (isgreaterequal(ua.h, ub.h)) {
+        if (isgreater(ua.h, ub.h)) {
+            return float_relation_greater;
+        }
+        return float_relation_equal;
+    }
+    if (likely(isless(ua.h, ub.h))) {
+        return float_relation_less;
+    }
+    /* The only condition remaining is unordered.
+     * Fall through to set flags.
+     */
+ soft:
+    return soft_f64_compare(ua.s, ub.s, is_quiet, s);
+}
+
+int float64_compare(float64 a, float64 b, float_status *s)
+{
+    return f64_compare(a, b, false, s);
+}
+
+int float64_compare_quiet(float64 a, float64 b, float_status *s)
+{
+    return f64_compare(a, b, true, s);
+}
+
 /* Multiply A by 2 raised to the power N.  */
 static FloatParts scalbn_decomposed(FloatParts a, int n, float_status *s)
 {
-- 
2.17.1


