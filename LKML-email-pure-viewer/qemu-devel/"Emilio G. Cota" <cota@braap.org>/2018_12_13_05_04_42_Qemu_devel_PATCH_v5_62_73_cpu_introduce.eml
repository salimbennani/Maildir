Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:20:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E20AC580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 21:53:07 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 21:53:07 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AFAyTgh8HgvStwv9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+ofIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQNtfWSJCDI27?=
 =?us-ascii?q?bYQPAfEMMfpEo4Tnu1cDtweyCRWqCejyyjFInHj23agi3ugvHg/G2Q0gH9YPsH?=
 =?us-ascii?q?TTsd77Nb0eWv2rwanP0TXMdf1a0ir65YfUdRAhveuDUKlrfsrL00YgDRvFgk+X?=
 =?us-ascii?q?qYz/MDOYz+IAuHWY4ep4Te+jlXIrpgJrrjSy28shiZPFipwbx13E7yl13YQ4Kc?=
 =?us-ascii?q?WlREJlYtOoCptduiWAO4doXs8uWX9ktDs7x7AApJW1ZjIFyI49yB7ac/GHc5aH?=
 =?us-ascii?q?4hbkVOuJJTd4hWlleK6khxqo/kigzPD8WtOz0FZQoSpJitjMtnYT2BzP8sWLVO?=
 =?us-ascii?q?dx80S71TqSygze6ftILV46mKfbMZIt37w9moIWsUvZHy/2nEv2jLWRdkUh4uWo?=
 =?us-ascii?q?8vroYrD7ppOFKoB7lB/+PboqmsCmGus4NRUOX26H9uuiz73v+kn5QLRJjvIoiK?=
 =?us-ascii?q?XYv43aKNwfpq64BQ9Vz4ki5wy+DzegzNQXg30HIEhZdxKAiojkIFfOIPf+Dfew?=
 =?us-ascii?q?hVSsjS1nx/fcPr3uGpnNNGTMkK/9fbZh7E5R0A4zzdFc551KEL0AL+/zV1T1tN?=
 =?us-ascii?q?zZCB85LgO1z/zmCNV7yoMRR2aPDrWFP6PVtF+E/ucvLPONZI8Rtjb9Mf8l5/v2?=
 =?us-ascii?q?gHAlnl8dYbOm0IAMZ3CiBPtpOV2ZbWDrgtcbHmcHuBc1QfLuiF2fSj5Te2i9X7?=
 =?us-ascii?q?gh6DE6CYOpE5/OSp2pje/J4SGgA5cDZnxaEkveVjDsdp6YQLEKbySdJNInlSYL?=
 =?us-ascii?q?Er2oSosk3Bfpsxfmyr1hNa3N9ygF8J7uytVxtNDVjgw4oDl9DsCB1DOUQmRp22?=
 =?us-ascii?q?8FWTIymbpyuFFw0Uur169+jPpFU9tJ6KRSTw04OJXAmvF8EM34QQnbf92EG2qh?=
 =?us-ascii?q?F8yrBCx0Qt8vztsmZUF7FNO/yBfZ0HmEGbgQwvamAZ0w86WU8D65DMFhwjyOgK?=
 =?us-ascii?q?Imk1AOSNFGPHXggbRwoVuAT7XVmlmUwv75PZ8X2zTAoSLalTKD?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAAAm8xFcmBHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowVX4szlGSEfBSBXRYYFIMshBMiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEBAQgLCwYbDiMMgjYFAgMaAQaCXAMDAQIkGQEBBAocCgMBAgMBAgYBAUgIA?=
 =?us-ascii?q?wFTGQWDHIIBAQSmGoFsM4J2AQEFgkOEbgiHfYMjgRwRBoF/iQ1khQ6JG4cqhTu?=
 =?us-ascii?q?LDgcCAopIhwILGIlnh18smROBRoIOfQiDJ4IbDBeDSoUUhV1UgQIFIROKL4F3A?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0AnAAAm8xFcmBHrdtBjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowVX4szlGSEfBSBXRYYFIMshBMiNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbD?=
 =?us-ascii?q?iMMgjYFAgMaAQaCXAMDAQIkGQEBBAocCgMBAgMBAgYBAUgIAwFTGQWDHIIBAQS?=
 =?us-ascii?q?mGoFsM4J2AQEFgkOEbgiHfYMjgRwRBoF/iQ1khQ6JG4cqhTuLDgcCAopIhwILG?=
 =?us-ascii?q?Ilnh18smROBRoIOfQiDJ4IbDBeDSoUUhV1UgQIFIROKL4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,347,1539673200"; 
   d="scan'208";a="56153128"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 21:53:06 -0800
Received: from localhost ([::1]:50687 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXJvl-0007SK-UI
	for like.xu@linux.intel.com; Thu, 13 Dec 2018 00:53:05 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:56192)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gXJCy-0007yn-DI
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 00:06:50 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cota@braap.org>) id 1gXJCw-00028u-NL
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 00:06:48 -0500
Received: from out1-smtp.messagingengine.com ([66.111.4.25]:33471)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cota@braap.org>) id 1gXJCw-0001ow-AG
	for qemu-devel@nongnu.org; Thu, 13 Dec 2018 00:06:46 -0500
Received: from compute4.internal (compute4.nyi.internal [10.202.2.44])
	by mailout.nyi.internal (Postfix) with ESMTP id 3C44A22270;
	Thu, 13 Dec 2018 00:05:51 -0500 (EST)
Received: from mailfrontend2 ([10.202.2.163])
	by compute4.internal (MEProxy); Thu, 13 Dec 2018 00:05:51 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=braap.org; h=
	from:to:cc:subject:date:message-id:in-reply-to:references; s=
	mesmtp; bh=HMyDV9NueiUy2tN8X2FjSwJ/zPBSmBLT8W4hubLPVbI=; b=TBrBE
	L2bFK0dkZQHkggCMlsWshafGuva9btQd4tLpwWNeM9oEWrvD+Ugkq2bBeMQQEoe6
	O2NfbZgX7HdI3rfwIsa8vOtyJzvFVMbyaN33eKmwepFPlzWd1fORcVz2ivuPFBAW
	LNps9cR+como22W063/vWglvnYpG3jkNE38xnk=
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
	messagingengine.com; h=cc:date:from:in-reply-to:message-id
	:references:subject:to:x-me-proxy:x-me-proxy:x-me-sender
	:x-me-sender:x-sasl-enc; s=fm1; bh=HMyDV9NueiUy2tN8X2FjSwJ/zPBSm
	BLT8W4hubLPVbI=; b=ARxVAGo3o7L3f3SASycnqdz54+GeY/xUIknAFQjConeqH
	RHCLCaB/SEG/L93nKZJKugkSvdzQRDB9y3HsepFRDBpde/7DZ+3OdQZWuk9wSsje
	9L3tp0GFfjmgBHD641TwwDGA1Vejva4G7IY3YbKD4og8IR6mYS2kH4CT++6NaKdW
	IVXVgPdxzCCL2njvXuiPgwUoA6qaLyXVkQSwnyYksyQ/lv+7ivMLsilcZF61gBgw
	rK1f5+B08aBqhJt3OqkJcGUKLz3P7pzk0P3LtTlP/Wvm/mLaWsD33tP5IO3yYJA2
	6spyh1MnlWBohrYef5wtzp/jEA2u3KubBSWux0T1A==
X-ME-Sender: <xms:r-gRXM0kuhsSDnfI4zh5u03AwF-IU65a8vk_bosdx_bOuI1gNNvB6g>
X-ME-Proxy-Cause: gggruggvucftvghtrhhoucdtuddrgedtkedrudehuddgkedtucetufdoteggodetrfdotf
	fvucfrrhhofhhilhgvmecuhfgrshhtofgrihhlpdfquhhtnecuuegrihhlohhuthemucef
	tddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmdenucfjughrpefhvffufffkof
	gjfhestddtredtredttdenucfhrhhomhepfdfgmhhilhhiohcuifdrucevohhtrgdfuceo
	tghothgrsegsrhgrrghprdhorhhgqeenucfkphepuddvkedrheelrddvtddrvdduieenuc
	frrghrrghmpehmrghilhhfrhhomheptghothgrsegsrhgrrghprdhorhhgnecuvehluhhs
	thgvrhfuihiivgepudel
X-ME-Proxy: <xmx:r-gRXBmBCWmgQ9-QLPLBpO3t7ezf9Vh5pLwYtrxlgvQyOO6DLQ_JTA>
	<xmx:r-gRXB0LOjoRWJYo_1RT_iGte6wNh5RiCnW9iPkws1qsd_qUDdzuVQ>
	<xmx:r-gRXIiQ23BQr_3BK4rGJw5VB9MRQaWdOFoFOBkgrNWZmBD1x2J6mw>
	<xmx:r-gRXAP4pfgG6C2SoWCOYEzx-LWFiVsmDWYO8l789hd-sHizZajb2g>
Received: from localhost (flamenco.cs.columbia.edu [128.59.20.216])
	by mail.messagingengine.com (Postfix) with ESMTPA id CA3971045B;
	Thu, 13 Dec 2018 00:05:50 -0500 (EST)
From: "Emilio G. Cota" <cota@braap.org>
To: qemu-devel@nongnu.org
Date: Thu, 13 Dec 2018 00:04:42 -0500
Message-Id: <20181213050453.9677-63-cota@braap.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181213050453.9677-1-cota@braap.org>
References: <20181213050453.9677-1-cota@braap.org>
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 66.111.4.25
Subject: [Qemu-devel] [PATCH v5 62/73] cpu: introduce
 cpu_has_work_with_iothread_lock
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>,
	Paolo Bonzini <pbonzini@redhat.com>,
	Richard Henderson <richard.henderson@linaro.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

It will gain some users soon.

Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
Reviewed-by: Richard Henderson <richard.henderson@linaro.org>
Signed-off-by: Emilio G. Cota <cota@braap.org>
---
 include/qom/cpu.h | 36 +++++++++++++++++++++++++++++++++---
 1 file changed, 33 insertions(+), 3 deletions(-)

diff --git a/include/qom/cpu.h b/include/qom/cpu.h
index 8d4160689f..8c239c54d8 100644
--- a/include/qom/cpu.h
+++ b/include/qom/cpu.h
@@ -26,6 +26,7 @@
 #include "exec/memattrs.h"
 #include "qapi/qapi-types-run-state.h"
 #include "qemu/bitmap.h"
+#include "qemu/main-loop.h"
 #include "qemu/rcu_queue.h"
 #include "qemu/queue.h"
 #include "qemu/thread.h"
@@ -86,6 +87,8 @@ struct TranslationBlock;
  * @reset_dump_flags: #CPUDumpFlags to use for reset logging.
  * @has_work: Callback for checking if there is work to do. Called with the
  * CPU lock held.
+ * @has_work_with_iothread_lock: Callback for checking if there is work to do.
+ * Called with both the BQL and the CPU lock held.
  * @do_interrupt: Callback for interrupt handling.
  * @do_unassigned_access: Callback for unassigned access handling.
  * (this is deprecated: new targets should use do_transaction_failed instead)
@@ -157,6 +160,7 @@ typedef struct CPUClass {
     void (*reset)(CPUState *cpu);
     int reset_dump_flags;
     bool (*has_work)(CPUState *cpu);
+    bool (*has_work_with_iothread_lock)(CPUState *cpu);
     void (*do_interrupt)(CPUState *cpu);
     CPUUnassignedAccess do_unassigned_access;
     void (*do_unaligned_access)(CPUState *cpu, vaddr addr,
@@ -788,14 +792,40 @@ const char *parse_cpu_model(const char *cpu_model);
 static inline bool cpu_has_work(CPUState *cpu)
 {
     CPUClass *cc = CPU_GET_CLASS(cpu);
+    bool has_cpu_lock = cpu_mutex_locked(cpu);
+    bool (*func)(CPUState *cpu);
     bool ret;
 
+    if (cc->has_work_with_iothread_lock) {
+        if (qemu_mutex_iothread_locked()) {
+            func = cc->has_work_with_iothread_lock;
+            goto call_func;
+        }
+
+        if (has_cpu_lock) {
+            /* avoid deadlock by acquiring the locks in order */
+            cpu_mutex_unlock(cpu);
+        }
+        qemu_mutex_lock_iothread();
+        cpu_mutex_lock(cpu);
+
+        ret = cc->has_work_with_iothread_lock(cpu);
+
+        qemu_mutex_unlock_iothread();
+        if (!has_cpu_lock) {
+            cpu_mutex_unlock(cpu);
+        }
+        return ret;
+    }
+
     g_assert(cc->has_work);
-    if (cpu_mutex_locked(cpu)) {
-        return cc->has_work(cpu);
+    func = cc->has_work;
+ call_func:
+    if (has_cpu_lock) {
+        return func(cpu);
     }
     cpu_mutex_lock(cpu);
-    ret = cc->has_work(cpu);
+    ret = func(cpu);
     cpu_mutex_unlock(cpu);
     return ret;
 }
-- 
2.17.1


