Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:07:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BDF1858061F
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 08:57:52 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 08:57:52 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AKychuhEpQPhSv1urIaGWgZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p8+8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ+8?=
 =?us-ascii?q?YYUMAeoPP+lYrpXyqVQBohWjHQmhBuHhxzBVinL4waE1zf8hHBra3Aw5Bd8CrG?=
 =?us-ascii?q?jYoMnoOKoUTOu7zLPIzTLGb/5OxTn9743IfQonofqRWLx/a8XRxlMpFwjYiViQ?=
 =?us-ascii?q?s4/lMCma1usXtWiW9PRgVeO1i247tgFxpTmux8YrioXTmo0VzVXE+Dx/zY0oJt?=
 =?us-ascii?q?O4UFZ2bcC4HJZTrS2WKpZ6T8A4T212tis3yqcKtYO5cSQS1ZgqxB7SZ+aZf4WG?=
 =?us-ascii?q?/x7vTvidLDhkiH5/eL+znxiy/lajx+HgU8S51UtFojZbndXQs30N2RLT58iIR/?=
 =?us-ascii?q?Z44kis2DiP2B7W5+1ZLk04iajWJpg8ybAqjJUTq17MHirulUX2kqCWckIk9/Cs?=
 =?us-ascii?q?6+TmebXmuoScO5V7igH4L6QigMu/Af43MgQWXmib//qz1KH78EHnXLlHjec6nr?=
 =?us-ascii?q?TEvJ3ZP8gXuKC0Dg9P3oo+6RuzFzKm384ZnXkDIlJFYhWHj43xNlHXPv/4COq/?=
 =?us-ascii?q?j02xnzh12fDJILnhDozWIXjEjbfhe6py5FBHyAY0ydBf5pFUBa8bLPP8R0/8rN?=
 =?us-ascii?q?jYDh4/MwypzOfrEtR91oUCWW2RBq+VKr/dsViN5u80JemMY4kVuDn7K/g4/fLu?=
 =?us-ascii?q?imU5mVAFcamzwZQXcGy4HuhhI0iBZXrsg9QBHnkQsgsxUeznk1mCUT9VZ3avUK?=
 =?us-ascii?q?Mw/DA7CIS6DYjdQoChmqCO3CC+Hs4eW2ZdF1rZEWv0b57WHLAIaTmOOYlnlToL?=
 =?us-ascii?q?U6XnTJUukhSntQv/wrwgKfLI+yoertX62d1oouHeixw2pgFyFNmXhmSETmVomT?=
 =?us-ascii?q?ERSjormaxyv0F5j02OyLV1mOBwE9tV6PVUFAAgOsnH0uZ4BtvuDx/HZcqDU128?=
 =?us-ascii?q?Q9+rUg02G5goztoTJkpwBdimphbE2SWsHvkSjbPBTMgt/6fBmnT8Oct543DB0q?=
 =?us-ascii?q?Ynkh8hWMQZZkO8gasqzQ/WDoiBsEyWnqDiIb4f1SHE8k+dzHCSoUZKQgk2WqLA?=
 =?us-ascii?q?CyNMLnDKpMj0sxuRB4SlDq4qZ04YkZaP?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BdAgD93xNchxHrdtBkH4F4gTElK4FcB?=
 =?us-ascii?q?DIKhzkDhS6KT5ougXYQARgUh0ciNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jAQu?=
 =?us-ascii?q?CNgUCAxoBBoJcAwMBAj0BAQQKKQECAwECBgEBAQFGCAMBLiUCBBMFgxyCAQECA?=
 =?us-ascii?q?QGbDwKKCYIfgnYBAQWCQ4RjCIw+F4FAP4ERjXCJRIF0hBZGkQYJkU8jgV2ITYc?=
 =?us-ascii?q?oiTuPfwIEAgQFAg0BAQWBTQGCBjMaCBsVgyeCJxcSgziKU3KBByGLH1gBgR4BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0BdAgD93xNchxHrdtBkH4F4gTElK4FcBDIKhzkDhS6KT5o?=
 =?us-ascii?q?ugXYQARgUh0ciNgcNAQMBAQEBAQECARMBAQEKCwkIGw4jAQuCNgUCAxoBBoJcA?=
 =?us-ascii?q?wMBAj0BAQQKKQECAwECBgEBAQFGCAMBLiUCBBMFgxyCAQECAQGbDwKKCYIfgnY?=
 =?us-ascii?q?BAQWCQ4RjCIw+F4FAP4ERjXCJRIF0hBZGkQYJkU8jgV2ITYcoiTuPfwIEAgQFA?=
 =?us-ascii?q?g0BAQWBTQGCBjMaCBsVgyeCJxcSgziKU3KBByGLH1gBgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,353,1539673200"; 
   d="scan'208";a="55940116"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 08:57:51 -0800
Received: from localhost ([::1]:34497 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXqmc-0005q5-TH
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 11:57:50 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59410)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <rkagan@virtuozzo.com>) id 1gXqmB-0005lT-La
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 11:57:30 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <rkagan@virtuozzo.com>) id 1gXqm5-0002TJ-TT
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 11:57:21 -0500
Received: from mail-eopbgr80118.outbound.protection.outlook.com
	([40.107.8.118]:22409
	helo=EUR04-VI1-obe.outbound.protection.outlook.com)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <rkagan@virtuozzo.com>)
	id 1gXqm5-0001B5-EZ
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 11:57:17 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=virtuozzo.com;
	s=selector1;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
	bh=l8PPnUIrlwxX4IvLCSYQVG8e44kP/XQ74gVJd+u7fYw=;
	b=irEN/n1gaTBOacPvNNQB55Vceh7hfjcFuTZFyeEWt+oDHBigL+h2Q16yqRuiDSYbX3h8W731oBmXIL+v6oJFbFEK80VRBLSVjEOoE7egcGdfkeOym9TEQstQf0z/FAOvr1aDsFr5F17ZUwreBaqpHsRvpQxuE2rarbkj2BdNPug=
Received: from DB8PR08MB4092.eurprd08.prod.outlook.com (20.179.10.210) by
	DB8PR08MB4010.eurprd08.prod.outlook.com (20.179.9.203) with Microsoft
	SMTP
	Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
	15.20.1404.22; Fri, 14 Dec 2018 16:57:09 +0000
Received: from DB8PR08MB4092.eurprd08.prod.outlook.com
	([fe80::d0e0:ff54:c6fe:1407]) by
	DB8PR08MB4092.eurprd08.prod.outlook.com
	([fe80::d0e0:ff54:c6fe:1407%3]) with mapi id 15.20.1425.021;
	Fri, 14 Dec 2018 16:57:09 +0000
From: Roman Kagan <rkagan@virtuozzo.com>
To: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>
Thread-Topic: [RFC PATCH 5/5] virtio: expose negotiated features in r/o
	properties
Thread-Index: AQHUk84N0sxPzHgOuEKzMlTSypVCdw==
Date: Fri, 14 Dec 2018 16:57:09 +0000
Message-ID: <20181214165657.749-6-rkagan@virtuozzo.com>
References: <20181214165657.749-1-rkagan@virtuozzo.com>
In-Reply-To: <20181214165657.749-1-rkagan@virtuozzo.com>
Accept-Language: en-US, ru-RU
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [185.231.240.5]
x-clientproxiedby: HE1PR0401CA0073.eurprd04.prod.outlook.com
	(2603:10a6:3:19::41) To DB8PR08MB4092.eurprd08.prod.outlook.com
	(2603:10a6:10:ab::18)
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=rkagan@virtuozzo.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; DB8PR08MB4010;
	20:Q4kdZ5fieb63ThuLV+9tqalEqCjGWqakkPrPLP5AHd0iTyr0N1/JMWcSBkIz3feQDypMdiorHGuXtc0uH7NfJrakU113T8El5MPWzIfnrMVG3Hg9mTmt9G/RSv/6WGohIJZpRKaJyz6TLZ1kxITTOR7DB7TC35pw6GsFLd3VWsU=
x-ms-office365-filtering-correlation-id: dd1719df-052a-40a7-fbae-08d661e52fbe
x-microsoft-antispam: BCL:0; PCL:0;
	RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);
	SRVR:DB8PR08MB4010; 
x-ms-traffictypediagnostic: DB8PR08MB4010:
x-microsoft-antispam-prvs: <DB8PR08MB40109326C6DFDECE38B0A26CC9A10@DB8PR08MB4010.eurprd08.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(3230021)(999002)(6040522)(2401047)(8121501046)(5005006)(3002001)(93006095)(93001095)(10201501046)(3231475)(944501520)(52105112)(148016)(149066)(150057)(6041310)(20161123560045)(20161123562045)(20161123564045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(201708071742011)(7699051)(76991095);
	SRVR:DB8PR08MB4010; BCL:0; PCL:0; RULEID:; SRVR:DB8PR08MB4010; 
x-forefront-prvs: 08864C38AC
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(376002)(346002)(136003)(39850400004)(366004)(396003)(199004)(189003)(7736002)(486006)(2351001)(71190400001)(305945005)(81166006)(5660300001)(81156014)(36756003)(217873002)(6916009)(102836004)(2501003)(105586002)(6486002)(256004)(26005)(106356001)(446003)(8936002)(6512007)(76176011)(1076002)(316002)(6506007)(14454004)(3846002)(6116002)(54906003)(186003)(99286004)(11346002)(97736004)(8676002)(4744004)(25786009)(52116002)(53936002)(2906002)(68736007)(4326008)(86362001)(575784001)(476003)(2616005)(478600001)(5640700003)(71200400001)(386003)(66066001)(6436002);
	DIR:OUT; SFP:1102; SCL:1; SRVR:DB8PR08MB4010;
	H:DB8PR08MB4092.eurprd08.prod.outlook.com; FPR:; SPF:None;
	LANG:en; PTR:InfoNoRecords; A:1; MX:1; 
x-microsoft-antispam-message-info: eY2iBpvZn3Ir/wSoBM6kZm22eJ96LYY2C4d3SvRM8JJusQ8xfUkxdW+OUtrxafkmSUkZvNU9LCPN4N9NC1DkCD5/DH9BqyahDVKi/A6D7nVDH4ugHf/3FTBTZIPtkmh5duv4Z45x4dDWTi++yzAwfPWM1TI74PtR3CSKiCwY7oPCSO4C7h4y68stnMYOBnZSUgbWkWFtGj4znisaoPokIGIsoDZib01NSe8XbZkRYLzP2x5ofCrUqQiQtQ39XIgjW7GgBePKYS6V1wuI8zVveD131j2KuicAtSk5N5QN7hdxOmEjYIM7aqm3HPmrmsq4
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: virtuozzo.com
X-MS-Exchange-CrossTenant-Network-Message-Id: dd1719df-052a-40a7-fbae-08d661e52fbe
X-MS-Exchange-CrossTenant-originalarrivaltime: 14 Dec 2018 16:57:09.8298 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 0bc7f26d-0264-416e-a6fc-8352af79c58f
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DB8PR08MB4010
X-detected-operating-system: by eggs.gnu.org: Windows 7 or 8 [fuzzy]
X-Received-From: 40.107.8.118
Subject: [Qemu-devel] [RFC PATCH 5/5] virtio: expose negotiated features in
 r/o properties
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Fam Zheng <fam@euphon.net>, "Michael S. Tsirkin" <mst@redhat.com>,
	Amit Shah <amit@kernel.org>, Markus Armbruster <armbru@redhat.com>,
	Paolo Bonzini <pbonzini@redhat.com>,
	=?iso-8859-1?Q?Andreas_F=E4rber?= <afaerber@suse.de>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Make virtio features acknowledged by the guest visible through QOM as
read-only properties.  One potential usecase of this is debugging;
another is when the upper layer needs to do something only when/if the
guest has acknowledged the support for a feature (e.g. hot-plug a VFIO
device once the guest claims VIRTIO_NET_F_STANDBY support).

Since most of the feature bits already have associated properties for
host_features, reuse those definitions by creating a new macro that
combines the original definition for the host_features bit property and
a definition of a read-only guest_features bit property with the same
name prefixed with "negotiated-".  For the features which have no
associated host_features bit property, only the latter is defined.

Note #1: the macro is somewhat fragile as it produces two values
separated by a comma, to be used for initializing consecutive elements
in an array
Note #2: due to note #1, it fails checkpatch.
Note #3: it is also somewhat fragile as it assumes its first argument to
be a string literal
Note #4: for RFC purposes I only converted some virtio devices.

Signed-off-by: Roman Kagan <rkagan@virtuozzo.com>
---
 include/hw/virtio/virtio-scsi.h |  2 +-
 include/hw/virtio/virtio.h      |  8 +++
 hw/char/virtio-serial-bus.c     |  6 ++-
 hw/net/virtio-net.c             | 88 ++++++++++++++++++---------------
 hw/scsi/virtio-scsi.c           |  4 +-
 hw/virtio/virtio.c              | 20 ++++----
 6 files changed, 73 insertions(+), 55 deletions(-)

diff --git a/include/hw/virtio/virtio-scsi.h b/include/hw/virtio/virtio-scs=
i.h
index 4c0bcdb788..9b412bd2c3 100644
--- a/include/hw/virtio/virtio-scsi.h
+++ b/include/hw/virtio/virtio-scsi.h
@@ -86,7 +86,7 @@ typedef struct VirtIOSCSI {
     bool dataplane_starting;
     bool dataplane_stopping;
     bool dataplane_fenced;
-    uint32_t host_features;
+    uint64_t host_features;
 } VirtIOSCSI;
=20
 typedef struct VirtIOSCSIReq {
diff --git a/include/hw/virtio/virtio.h b/include/hw/virtio/virtio.h
index cea356efed..a4690e6176 100644
--- a/include/hw/virtio/virtio.h
+++ b/include/hw/virtio/virtio.h
@@ -254,6 +254,14 @@ typedef struct virtio_input_conf virtio_input_conf;
 typedef struct VirtIOSCSIConf VirtIOSCSIConf;
 typedef struct VirtIORNGConf VirtIORNGConf;
=20
+#define DEFINE_VIRTIO_FEATURE_BIT_NEGOTIATED(_name, _bit)     \
+    DEFINE_PROP_BIT64_RO("negotiated-" _name, VirtIODevice,   \
+                         guest_features, _bit)
+
+#define DEFINE_VIRTIO_FEATURE_BIT(_name, _state, _field, _bit, _defval) \
+    DEFINE_PROP_BIT64(_name, _state, _field, _bit, _defval),            \
+    DEFINE_VIRTIO_FEATURE_BIT_NEGOTIATED(_name, _bit)
+
 hwaddr virtio_queue_get_desc_addr(VirtIODevice *vdev, int n);
 hwaddr virtio_queue_get_avail_addr(VirtIODevice *vdev, int n);
 hwaddr virtio_queue_get_used_addr(VirtIODevice *vdev, int n);
diff --git a/hw/char/virtio-serial-bus.c b/hw/char/virtio-serial-bus.c
index 04e3ebe352..07bf729891 100644
--- a/hw/char/virtio-serial-bus.c
+++ b/hw/char/virtio-serial-bus.c
@@ -1154,8 +1154,10 @@ static const VMStateDescription vmstate_virtio_conso=
le =3D {
 static Property virtio_serial_properties[] =3D {
     DEFINE_PROP_UINT32("max_ports", VirtIOSerial, serial.max_virtserial_po=
rts,
                                                   31),
-    DEFINE_PROP_BIT64("emergency-write", VirtIOSerial, host_features,
-                      VIRTIO_CONSOLE_F_EMERG_WRITE, true),
+    DEFINE_VIRTIO_FEATURE_BIT_NEGOTIATED("multiport",
+                                         VIRTIO_CONSOLE_F_MULTIPORT),
+    DEFINE_VIRTIO_FEATURE_BIT("emergency-write", VirtIOSerial, host_featur=
es,
+                              VIRTIO_CONSOLE_F_EMERG_WRITE, true),
     DEFINE_PROP_END_OF_LIST(),
 };
=20
diff --git a/hw/net/virtio-net.c b/hw/net/virtio-net.c
index 385b1a03e9..d4df3394ee 100644
--- a/hw/net/virtio-net.c
+++ b/hw/net/virtio-net.c
@@ -2144,46 +2144,54 @@ static const VMStateDescription vmstate_virtio_net =
=3D {
 };
=20
 static Property virtio_net_properties[] =3D {
-    DEFINE_PROP_BIT64("csum", VirtIONet, host_features,
-                    VIRTIO_NET_F_CSUM, true),
-    DEFINE_PROP_BIT64("guest_csum", VirtIONet, host_features,
-                    VIRTIO_NET_F_GUEST_CSUM, true),
-    DEFINE_PROP_BIT64("gso", VirtIONet, host_features, VIRTIO_NET_F_GSO, t=
rue),
-    DEFINE_PROP_BIT64("guest_tso4", VirtIONet, host_features,
-                    VIRTIO_NET_F_GUEST_TSO4, true),
-    DEFINE_PROP_BIT64("guest_tso6", VirtIONet, host_features,
-                    VIRTIO_NET_F_GUEST_TSO6, true),
-    DEFINE_PROP_BIT64("guest_ecn", VirtIONet, host_features,
-                    VIRTIO_NET_F_GUEST_ECN, true),
-    DEFINE_PROP_BIT64("guest_ufo", VirtIONet, host_features,
-                    VIRTIO_NET_F_GUEST_UFO, true),
-    DEFINE_PROP_BIT64("guest_announce", VirtIONet, host_features,
-                    VIRTIO_NET_F_GUEST_ANNOUNCE, true),
-    DEFINE_PROP_BIT64("host_tso4", VirtIONet, host_features,
-                    VIRTIO_NET_F_HOST_TSO4, true),
-    DEFINE_PROP_BIT64("host_tso6", VirtIONet, host_features,
-                    VIRTIO_NET_F_HOST_TSO6, true),
-    DEFINE_PROP_BIT64("host_ecn", VirtIONet, host_features,
-                    VIRTIO_NET_F_HOST_ECN, true),
-    DEFINE_PROP_BIT64("host_ufo", VirtIONet, host_features,
-                    VIRTIO_NET_F_HOST_UFO, true),
-    DEFINE_PROP_BIT64("mrg_rxbuf", VirtIONet, host_features,
-                    VIRTIO_NET_F_MRG_RXBUF, true),
-    DEFINE_PROP_BIT64("status", VirtIONet, host_features,
-                    VIRTIO_NET_F_STATUS, true),
-    DEFINE_PROP_BIT64("ctrl_vq", VirtIONet, host_features,
-                    VIRTIO_NET_F_CTRL_VQ, true),
-    DEFINE_PROP_BIT64("ctrl_rx", VirtIONet, host_features,
-                    VIRTIO_NET_F_CTRL_RX, true),
-    DEFINE_PROP_BIT64("ctrl_vlan", VirtIONet, host_features,
-                    VIRTIO_NET_F_CTRL_VLAN, true),
-    DEFINE_PROP_BIT64("ctrl_rx_extra", VirtIONet, host_features,
-                    VIRTIO_NET_F_CTRL_RX_EXTRA, true),
-    DEFINE_PROP_BIT64("ctrl_mac_addr", VirtIONet, host_features,
-                    VIRTIO_NET_F_CTRL_MAC_ADDR, true),
-    DEFINE_PROP_BIT64("ctrl_guest_offloads", VirtIONet, host_features,
-                    VIRTIO_NET_F_CTRL_GUEST_OFFLOADS, true),
-    DEFINE_PROP_BIT64("mq", VirtIONet, host_features, VIRTIO_NET_F_MQ, fal=
se),
+    DEFINE_VIRTIO_FEATURE_BIT("csum", VirtIONet, host_features,
+                              VIRTIO_NET_F_CSUM, true),
+    DEFINE_VIRTIO_FEATURE_BIT("guest_csum", VirtIONet, host_features,
+                              VIRTIO_NET_F_GUEST_CSUM, true),
+    DEFINE_VIRTIO_FEATURE_BIT_NEGOTIATED("mtu",
+                                         VIRTIO_NET_F_MTU),
+    DEFINE_VIRTIO_FEATURE_BIT_NEGOTIATED("mac",
+                                         VIRTIO_NET_F_MAC),
+    DEFINE_VIRTIO_FEATURE_BIT("gso", VirtIONet, host_features,
+                              VIRTIO_NET_F_GSO, true),
+    DEFINE_VIRTIO_FEATURE_BIT("guest_tso4", VirtIONet, host_features,
+                              VIRTIO_NET_F_GUEST_TSO4, true),
+    DEFINE_VIRTIO_FEATURE_BIT("guest_tso6", VirtIONet, host_features,
+                              VIRTIO_NET_F_GUEST_TSO6, true),
+    DEFINE_VIRTIO_FEATURE_BIT("guest_ecn", VirtIONet, host_features,
+                              VIRTIO_NET_F_GUEST_ECN, true),
+    DEFINE_VIRTIO_FEATURE_BIT("guest_ufo", VirtIONet, host_features,
+                              VIRTIO_NET_F_GUEST_UFO, true),
+    DEFINE_VIRTIO_FEATURE_BIT("guest_announce", VirtIONet, host_features,
+                              VIRTIO_NET_F_GUEST_ANNOUNCE, true),
+    DEFINE_VIRTIO_FEATURE_BIT("host_tso4", VirtIONet, host_features,
+                              VIRTIO_NET_F_HOST_TSO4, true),
+    DEFINE_VIRTIO_FEATURE_BIT("host_tso6", VirtIONet, host_features,
+                              VIRTIO_NET_F_HOST_TSO6, true),
+    DEFINE_VIRTIO_FEATURE_BIT("host_ecn", VirtIONet, host_features,
+                              VIRTIO_NET_F_HOST_ECN, true),
+    DEFINE_VIRTIO_FEATURE_BIT("host_ufo", VirtIONet, host_features,
+                              VIRTIO_NET_F_HOST_UFO, true),
+    DEFINE_VIRTIO_FEATURE_BIT("mrg_rxbuf", VirtIONet, host_features,
+                              VIRTIO_NET_F_MRG_RXBUF, true),
+    DEFINE_VIRTIO_FEATURE_BIT("status", VirtIONet, host_features,
+                              VIRTIO_NET_F_STATUS, true),
+    DEFINE_VIRTIO_FEATURE_BIT("ctrl_vq", VirtIONet, host_features,
+                              VIRTIO_NET_F_CTRL_VQ, true),
+    DEFINE_VIRTIO_FEATURE_BIT("ctrl_rx", VirtIONet, host_features,
+                              VIRTIO_NET_F_CTRL_RX, true),
+    DEFINE_VIRTIO_FEATURE_BIT("ctrl_vlan", VirtIONet, host_features,
+                              VIRTIO_NET_F_CTRL_VLAN, true),
+    DEFINE_VIRTIO_FEATURE_BIT("ctrl_rx_extra", VirtIONet, host_features,
+                              VIRTIO_NET_F_CTRL_RX_EXTRA, true),
+    DEFINE_VIRTIO_FEATURE_BIT("ctrl_mac_addr", VirtIONet, host_features,
+                              VIRTIO_NET_F_CTRL_MAC_ADDR, true),
+    DEFINE_VIRTIO_FEATURE_BIT("ctrl_guest_offloads", VirtIONet, host_featu=
res,
+                              VIRTIO_NET_F_CTRL_GUEST_OFFLOADS, true),
+    DEFINE_VIRTIO_FEATURE_BIT("mq", VirtIONet, host_features,
+                              VIRTIO_NET_F_MQ, false),
+    DEFINE_VIRTIO_FEATURE_BIT_NEGOTIATED("speed_duplex",
+                                         VIRTIO_NET_F_SPEED_DUPLEX),
     DEFINE_NIC_PROPERTIES(VirtIONet, nic_conf),
     DEFINE_PROP_UINT32("x-txtimer", VirtIONet, net_conf.txtimer,
                        TX_TIMER_INTERVAL),
diff --git a/hw/scsi/virtio-scsi.c b/hw/scsi/virtio-scsi.c
index 3aa99717e2..6272faa180 100644
--- a/hw/scsi/virtio-scsi.c
+++ b/hw/scsi/virtio-scsi.c
@@ -923,9 +923,9 @@ static Property virtio_scsi_properties[] =3D {
                                                   0xFFFF),
     DEFINE_PROP_UINT32("cmd_per_lun", VirtIOSCSI, parent_obj.conf.cmd_per_=
lun,
                                                   128),
-    DEFINE_PROP_BIT("hotplug", VirtIOSCSI, host_features,
+    DEFINE_VIRTIO_FEATURE_BIT("hotplug", VirtIOSCSI, host_features,
                                            VIRTIO_SCSI_F_HOTPLUG, true),
-    DEFINE_PROP_BIT("param_change", VirtIOSCSI, host_features,
+    DEFINE_VIRTIO_FEATURE_BIT("param_change", VirtIOSCSI, host_features,
                                                 VIRTIO_SCSI_F_CHANGE, true=
),
     DEFINE_PROP_LINK("iothread", VirtIOSCSI, parent_obj.conf.iothread,
                      TYPE_IOTHREAD, IOThread *),
diff --git a/hw/virtio/virtio.c b/hw/virtio/virtio.c
index 99d396c516..2020327eb8 100644
--- a/hw/virtio/virtio.c
+++ b/hw/virtio/virtio.c
@@ -2601,16 +2601,16 @@ static void virtio_device_instance_finalize(Object =
*obj)
 }
=20
 static Property virtio_properties[] =3D {
-    DEFINE_PROP_BIT64("indirect_desc", VirtIODevice, host_features,
-                      VIRTIO_RING_F_INDIRECT_DESC, true),
-    DEFINE_PROP_BIT64("event_idx", VirtIODevice, host_features,
-                      VIRTIO_RING_F_EVENT_IDX, true),
-    DEFINE_PROP_BIT64("notify_on_empty", VirtIODevice, host_features,
-                      VIRTIO_F_NOTIFY_ON_EMPTY, true),
-    DEFINE_PROP_BIT64("any_layout", VirtIODevice, host_features,
-                      VIRTIO_F_ANY_LAYOUT, true),
-    DEFINE_PROP_BIT64("iommu_platform", VirtIODevice, host_features,
-                      VIRTIO_F_IOMMU_PLATFORM, false),
+    DEFINE_VIRTIO_FEATURE_BIT("indirect_desc", VirtIODevice, host_features=
,
+                              VIRTIO_RING_F_INDIRECT_DESC, true),
+    DEFINE_VIRTIO_FEATURE_BIT("event_idx", VirtIODevice, host_features,
+                              VIRTIO_RING_F_EVENT_IDX, true),
+    DEFINE_VIRTIO_FEATURE_BIT("notify_on_empty", VirtIODevice, host_featur=
es,
+                              VIRTIO_F_NOTIFY_ON_EMPTY, true),
+    DEFINE_VIRTIO_FEATURE_BIT("any_layout", VirtIODevice, host_features,
+                              VIRTIO_F_ANY_LAYOUT, true),
+    DEFINE_VIRTIO_FEATURE_BIT("iommu_platform", VirtIODevice, host_feature=
s,
+                              VIRTIO_F_IOMMU_PLATFORM, false),
     DEFINE_PROP_END_OF_LIST(),
 };
=20
--=20
2.19.2


