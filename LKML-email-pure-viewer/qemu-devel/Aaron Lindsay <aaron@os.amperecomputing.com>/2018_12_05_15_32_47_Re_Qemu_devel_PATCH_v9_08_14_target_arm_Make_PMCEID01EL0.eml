Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:54:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AF56A5804C1
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 07:33:24 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 07:33:24 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AheraVhanNk+N3ItBQl4x9UP/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZps6yZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2g?=
 =?us-ascii?q?b4UBDOQBM+RXr4jhqFUBohSwGBGsCeHtxDJHm3P707E23Po6EQzdwAwgBsgDvG?=
 =?us-ascii?q?jIoNnpKqsfV/2+wqnSzTXEavNbwSvw55LSchAmp/GHQLR+ccvXyUYyDAPKlFWR?=
 =?us-ascii?q?opHiMjyPzOsNqW+b7+x7WOKokG4rsRt+oj23xsgykInGmJ4aylfB9SVh3YY1Od?=
 =?us-ascii?q?y4SEh0YdK+DJRQsCSaOpJwT8g/QG9ooD43xqMatZO4ZiQG1Ykryh3FZ/CZfYWF?=
 =?us-ascii?q?4gjvWPuTLDtgmn5pZbOyiwyx/EWg0OHwS8u53EpQoiZYktTBtmgB1xLN5cWEVv?=
 =?us-ascii?q?dw+0Ks1DKT2A3R9u5JJF44mKjHJJMjx7M9mYYcvl/BEyLzlkX7j7Gaelki9+O1?=
 =?us-ascii?q?8eroeK/mqYWZN4JsigHxLKAumsunDOQ8MwgORHSb+f+m2L3s+035Xa9Gjvoskq?=
 =?us-ascii?q?nWqJzaJMIbqbClAwJNzIov9xWyAy273NgFnnQLNkxJdRyHgoTzJl3DIuj0DfKl?=
 =?us-ascii?q?jFStlDdryerGPrrkApjVN3jMjrLhfatk50FB1gUz085Q55ZNBr4aJ/LzR0nxu8?=
 =?us-ascii?q?DGAR8iNAC0x+fnCNZj2Y8EVmOPH7eUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YZqSp25wXaHa3HvRgPkWVe33sgs0OEWsSpAoxUPTqiEGeUT5Uf3uyW6?=
 =?us-ascii?q?M85jIlB468AobDW5uggLiA3Ce9A51XaXpKClGKEXf0aYqEX+0AZz6VIs9kwXQ5?=
 =?us-ascii?q?U6O8QdohyQ22r129jL5mNfbPvCsfs53lyZ5y/eKUkBgz8Tl9CYOay32MSGdv2X?=
 =?us-ascii?q?oFQiJz0K1hrEgu91GYzKIthvVZEcBUtepEVxp/OZPCwug/Ed3rRw/aYv+PT1Cp?=
 =?us-ascii?q?RMjgBis+Gcksyd0DaFooBtO5kxrY1DCrCbJGq7veToU597+Z1mL0D8B6zXnAye?=
 =?us-ascii?q?8mlVZsCp9WOGi7w6dl8iDVAIjGlVjfkLylI+BU5CPR+X3L6GOfsExcVEYkSajZ?=
 =?us-ascii?q?UGpZY0LHodn94mvGTrmnE7NhNRFOn4rKA69LccHgjE8Oau3qPt/feCrlkmOxHg?=
 =?us-ascii?q?qBx6nKYpDjfW4cxw3NCUwFlRBV9nGDY0x2OSqg60LDBTphXQbwbkLE6+RyqHqn?=
 =?us-ascii?q?CEQzylfOJ3Vsy7evsjUPgueAS+wa364J8HMqsTJvAFai1tPKBpyYqhZsZo1TZN?=
 =?us-ascii?q?o85BFM0meP80RHP5egJrpuzn4TdQh6pVjp0V0jEIRLkcEwoDUqwQx+JLiD11Vp?=
 =?us-ascii?q?czKe1Ir3fLrNJT+h0gqobvv/00vZ1p6y+6ED8/0p4wHqtRuuEGIl6DNu1sFYyX?=
 =?us-ascii?q?aX4ZDSERYTV523WUEyoUsp74rGazUwstuHnUZnNrO553qbg4ok?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A5AACQ7gdchxHrdtBkHgEGBwaBUggLA?=
 =?us-ascii?q?YEwUIFcBDIKjGeKZUqCDZdMFIEQA0wTARgUhECDEyI1CA0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDiMMgjYFAgMaAQaCXAEBAQMBAg8VEwYBAQQKKQECAwECBgEBAQEIG?=
 =?us-ascii?q?AkVCAgDAQsjJQIEARIFHYJ/gWoDFQECApoWKgKKB4FsM4J2AQEFgQUBg3sYggk?=
 =?us-ascii?q?IjB4XgX+DbjWEaheDNYImjzeRIQmCJI8TCxhfkFAsiF2PTgIEAgQFAg8FgUcBg?=
 =?us-ascii?q?gszGggbFYMnghsMFxKDOIocATZygQchiERYAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0A5AACQ7gdchxHrdtBkHgEGBwaBUggLAYEwUIFcBDIKjGe?=
 =?us-ascii?q?KZUqCDZdMFIEQA0wTARgUhECDEyI1CA0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMg?=
 =?us-ascii?q?jYFAgMaAQaCXAEBAQMBAg8VEwYBAQQKKQECAwECBgEBAQEIGAkVCAgDAQsjJQI?=
 =?us-ascii?q?EARIFHYJ/gWoDFQECApoWKgKKB4FsM4J2AQEFgQUBg3sYggkIjB4XgX+DbjWEa?=
 =?us-ascii?q?heDNYImjzeRIQmCJI8TCxhfkFAsiF2PTgIEAgQFAg8FgUcBggszGggbFYMnghs?=
 =?us-ascii?q?MFxKDOIocATZygQchiERYAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="43671041"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 07:33:23 -0800
Received: from localhost ([::1]:35160 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUZAw-00027P-L2
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 10:33:22 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60519)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <aaron@os.amperecomputing.com>) id 1gUZAY-00024E-7k
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 10:32:59 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <aaron@os.amperecomputing.com>) id 1gUZAX-0007hK-9Z
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 10:32:58 -0500
Received: from mail-eopbgr730090.outbound.protection.outlook.com
	([40.107.73.90]:21268
	helo=NAM05-DM3-obe.outbound.protection.outlook.com)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <aaron@os.amperecomputing.com>)
	id 1gUZAQ-0007JH-IK; Wed, 05 Dec 2018 10:32:50 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=amperemail.onmicrosoft.com; s=selector1-os-amperecomputing-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
	bh=5NrxJRM4iKJ6l3FE9K55lttBYhi/pKJ991SnW3tsFug=;
	b=JmEmr/PoLs0YlNw8trXnJNUjIrDPv21ba3tXGbNVBEkWWKlmTMf3a4IpRwZTz10ekXZJZDF7dWpgMOkGTbmXG5zz5vCH1njOFqA8032c3v4C5xxUZUoEWAxvlO7FqGgja8hwniC4RFrB4ffOEZZskWnIHEVwfiD2A6DJINxAfGc=
Received: from DM6PR01MB4825.prod.exchangelabs.com (20.177.218.222) by
	DM6PR01MB4908.prod.exchangelabs.com (20.176.119.97) with Microsoft SMTP
	Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
	15.20.1404.18; Wed, 5 Dec 2018 15:32:47 +0000
Received: from DM6PR01MB4825.prod.exchangelabs.com
	([fe80::9c7c:27c7:4cb7:f820]) by DM6PR01MB4825.prod.exchangelabs.com
	([fe80::9c7c:27c7:4cb7:f820%2]) with mapi id 15.20.1404.016;
	Wed, 5 Dec 2018 15:32:47 +0000
From: Aaron Lindsay <aaron@os.amperecomputing.com>
To: "qemu-arm@nongnu.org" <qemu-arm@nongnu.org>, Peter Maydell
	<peter.maydell@linaro.org>,
	Alistair Francis <alistair.francis@xilinx.com>, 
	Wei Huang <wei@redhat.com>,
	Peter Crosthwaite <crosthwaite.peter@gmail.com>, 
	Richard Henderson <richard.henderson@linaro.org>
Thread-Topic: [PATCH v9 08/14] target/arm: Make PMCEID[01]_EL0 64 bit
	registers, add PMCEID[23]
Thread-Index: AQHUjKB9mlVV58tpVkyEdwuwq+dkTKVwRkUA
Date: Wed, 5 Dec 2018 15:32:47 +0000
Message-ID: <20181205153242.GE5549@quinoa.localdomain>
References: <20181205134243.4791-1-aaron@os.amperecomputing.com>
	<20181205134243.4791-9-aaron@os.amperecomputing.com>
In-Reply-To: <20181205134243.4791-9-aaron@os.amperecomputing.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: BN6PR18CA0003.namprd18.prod.outlook.com
	(2603:10b6:404:121::13) To DM6PR01MB4825.prod.exchangelabs.com
	(2603:10b6:5:6b::30)
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=aaron@os.amperecomputing.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [216.85.170.155]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; DM6PR01MB4908;
	6:0ua+TOK0QIbux15AWSOkEJu68pAJVui8uPmny+HDs7iHaLUcH1lNUBy2nXEGTizO7h/BI/M4SCkeWgYYMO0IUay0Wgxl+ZLvgF9GWZpM6sDBBo2i9SQXBlPLGSikKiFomDZ5weQsgB5vbLEMsAEaQ7F8MPU85IT0svCdwUecYNT7PA2//6xeeuI+g4wanMkvnx34VDCHHRPHfPYh2wQ3aGmRO3/Ix7p7Mtf+Y2Kpcp7Y5zpXDORkdckv2MDydjCtSWEdvRZI9wW4QRnBrPGQ6Joa5rgwuAxHqmYRGa5vyicba9OO+8KcUyzxaMCYHFsuZHOBnANSMZtoee2F48gKYgoh0+j6Ky+AzTZoZ+u10F19bo06MX5Q2QO4NpIpgrxepOYPp90dcw/KJsVRhcCee3Oi3Msnbt6BCMDV3ZUrxEmz1j0vd9Qll5ktkN4Yi7fJzpuWspvGQBb97BSo6rfTbg==;
	5:CpXH+vr2CT2rGxKWQysybgKr/rKrGsp5pQDeTXmKg3bFrFxEKYdbf6YIfFBDq3cFqTO6jiZ6RVIs1xPL6ad/xRWXhSi0SgXr9C4BYJpV4FVor7Zze/wzO4efgIJjssCVnpHOj+2ZCfkzb14LkRPTn4LOlYO4KUVyZno30hbY+rY=;
	7:XmRQAunk1e0KggwKrsraSJ9s9P0FJ7VEyKDsImSg6nXFvdFpfc7Sag1W+2mV180uolSfsbYbgx5ClmXABcqTcgfxJprAUrfZw6Pr9c2mWnId8kYlmmL1odo+ZIwZ2FtXPeMfzmd+iYoWJwwPK3hryQ==
x-ms-office365-filtering-correlation-id: 82334da3-7092-4766-d291-08d65ac6e89b
x-microsoft-antispam: BCL:0; PCL:0;
	RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);
	SRVR:DM6PR01MB4908; 
x-ms-traffictypediagnostic: DM6PR01MB4908:
x-microsoft-antispam-prvs: <DM6PR01MB4908EF4FDAC7DC5AE05B312A8AA80@DM6PR01MB4908.prod.exchangelabs.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(10201501046)(3002001)(3231455)(999002)(944501520)(52105112)(93006095)(93001095)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(20161123564045)(201708071742011)(7699051)(76991095);
	SRVR:DM6PR01MB4908; BCL:0; PCL:0; RULEID:; SRVR:DM6PR01MB4908; 
x-forefront-prvs: 08770259B4
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(39840400004)(396003)(346002)(136003)(376002)(366004)(199004)(189003)(229853002)(186003)(14444005)(6506007)(110136005)(386003)(54906003)(4326008)(99286004)(8936002)(6436002)(9686003)(6512007)(33896004)(6486002)(66066001)(478600001)(8676002)(14454004)(81156014)(81166006)(39060400002)(25786009)(52116002)(102836004)(76176011)(256004)(26005)(316002)(68736007)(1076002)(71200400001)(2906002)(71190400001)(105586002)(3846002)(6116002)(106356001)(97736004)(53936002)(446003)(33656002)(7736002)(6246003)(11346002)(305945005)(86362001)(486006)(476003)(5660300001)(2501003);
	DIR:OUT; SFP:1102; SCL:1; SRVR:DM6PR01MB4908;
	H:DM6PR01MB4825.prod.exchangelabs.com; FPR:; SPF:None; LANG:en;
	PTR:InfoNoRecords; A:0; MX:1; 
x-microsoft-antispam-message-info: EjB5fE9U75eynb4T+qdlDxaDE1wl/rklNBAi5ev6FA/Bpuj+nSZI9ir7Wd4qrC43SQDpP9veQ1PCaShmarwbWPtsjuTsdollULNRih5TX6K/Qa6VoToAjzlLyute0GyQyc70fTLdP78wItl1I1JMZ7rYVYxK/eQJ2sz5OnSUMh87+AJeK5DbReJrmSVyR0r+JPSfcS4i2HkXXAYw1mzDTYxRo7c/cM4WCOrcpK4l43xSc6C6W/F0qB7n5fNzHs80+W/Dw2FyLvp9noe6bZh5Tvyfd6eQnW6OUacxX0HtfNfLj/sMIxRVDDxbBKKfAEc3wkag1FWo+m1TnB5Fv7+3Flv1DZNKgsk8f93hTNQc6zs=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-ID: <12FB09A4256A9741A986DDE93F67ED51@prod.exchangelabs.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: os.amperecomputing.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 82334da3-7092-4766-d291-08d65ac6e89b
X-MS-Exchange-CrossTenant-originalarrivaltime: 05 Dec 2018 15:32:47.5023 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3bc2b170-fd94-476d-b0ce-4229bdc904a7
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR01MB4908
X-detected-operating-system: by eggs.gnu.org: Windows 7 or 8 [fuzzy]
X-Received-From: 40.107.73.90
Subject: Re: [Qemu-devel] [PATCH v9 08/14] target/arm: Make PMCEID[01]_EL0
 64 bit registers, add PMCEID[23]
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Michael Spradling <mspradli@codeaurora.org>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
	Digant Desai <digantd@codeaurora.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Dec 05 08:43, Aaron Lindsay wrote:
> Signed-off-by: Aaron Lindsay <aaron@os.amperecomputing.com>
> ---
>  target/arm/cpu.h    |  4 ++--
>  target/arm/helper.c | 18 ++++++++++++++++--
>  2 files changed, 18 insertions(+), 4 deletions(-)
>=20
> diff --git a/target/arm/cpu.h b/target/arm/cpu.h
> index 304e6e47b3..4216fe22db 100644
> --- a/target/arm/cpu.h
> +++ b/target/arm/cpu.h
> @@ -837,8 +837,8 @@ struct ARMCPU {
>      uint32_t id_pfr0;
>      uint32_t id_pfr1;
>      uint32_t id_dfr0;
> -    uint32_t pmceid0;
> -    uint32_t pmceid1;
> +    uint64_t pmceid0;
> +    uint64_t pmceid1;
>      uint32_t id_afr0;
>      uint32_t id_mmfr0;
>      uint32_t id_mmfr1;
> diff --git a/target/arm/helper.c b/target/arm/helper.c
> index 71be6fb578..fb6939e99c 100644
> --- a/target/arm/helper.c
> +++ b/target/arm/helper.c
> @@ -5256,6 +5256,20 @@ void register_cp_regs_for_features(ARMCPU *cpu)
>      } else {
>          define_arm_cp_regs(cpu, not_v7_cp_reginfo);
>      }
> +    if (FIELD_EX32(cpu->id_dfr0, ID_DFR0, PERFMON) >=3D 4) {

After further discussion on my last version, this should be

if (FIELD_EX32(cpu->id_dfr0, ID_DFR0, PERFMON) >=3D 4 &&
	FIELD_EX32(cpu->id_dfr0, ID_DFR0, PERFMON) !=3D 0xf) {

to guard against defining these registers for implementation-defined
PMUs.

> +        ARMCPRegInfo v81_pmu_regs[] =3D {
> +            { .name =3D "PMCEID2", .state =3D ARM_CP_STATE_AA32,
> +              .cp =3D 15, .opc1 =3D 0, .crn =3D 9, .crm =3D 14, .opc2 =
=3D 4,
> +              .access =3D PL0_R, .accessfn =3D pmreg_access, .type =3D A=
RM_CP_CONST,
> +              .resetvalue =3D extract64(cpu->pmceid0, 32, 32) },
> +            { .name =3D "PMCEID3", .state =3D ARM_CP_STATE_AA32,
> +              .cp =3D 15, .opc1 =3D 0, .crn =3D 9, .crm =3D 14, .opc2 =
=3D 5,
> +              .access =3D PL0_R, .accessfn =3D pmreg_access, .type =3D A=
RM_CP_CONST,
> +              .resetvalue =3D extract64(cpu->pmceid1, 32, 32) },
> +            REGINFO_SENTINEL
> +        };
> +        define_arm_cp_regs(cpu, v81_pmu_regs);
> +    }
>      if (arm_feature(env, ARM_FEATURE_V8)) {
>          /* AArch64 ID registers, which all have impdef reset values.
>           * Note that within the ID register ranges the unused slots
> @@ -5432,7 +5446,7 @@ void register_cp_regs_for_features(ARMCPU *cpu)
>              { .name =3D "PMCEID0", .state =3D ARM_CP_STATE_AA32,
>                .cp =3D 15, .opc1 =3D 0, .crn =3D 9, .crm =3D 12, .opc2 =
=3D 6,
>                .access =3D PL0_R, .accessfn =3D pmreg_access, .type =3D A=
RM_CP_CONST,
> -              .resetvalue =3D cpu->pmceid0 },
> +              .resetvalue =3D extract64(cpu->pmceid0, 0, 32) },
>              { .name =3D "PMCEID0_EL0", .state =3D ARM_CP_STATE_AA64,
>                .opc0 =3D 3, .opc1 =3D 3, .crn =3D 9, .crm =3D 12, .opc2 =
=3D 6,
>                .access =3D PL0_R, .accessfn =3D pmreg_access, .type =3D A=
RM_CP_CONST,
> @@ -5440,7 +5454,7 @@ void register_cp_regs_for_features(ARMCPU *cpu)
>              { .name =3D "PMCEID1", .state =3D ARM_CP_STATE_AA32,
>                .cp =3D 15, .opc1 =3D 0, .crn =3D 9, .crm =3D 12, .opc2 =
=3D 7,
>                .access =3D PL0_R, .accessfn =3D pmreg_access, .type =3D A=
RM_CP_CONST,
> -              .resetvalue =3D cpu->pmceid1 },
> +              .resetvalue =3D extract64(cpu->pmceid1, 0, 32) },
>              { .name =3D "PMCEID1_EL0", .state =3D ARM_CP_STATE_AA64,
>                .opc0 =3D 3, .opc1 =3D 3, .crn =3D 9, .crm =3D 12, .opc2 =
=3D 7,
>                .access =3D PL0_R, .accessfn =3D pmreg_access, .type =3D A=
RM_CP_CONST,
> --=20
> 2.19.1
>=20

