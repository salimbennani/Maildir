Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:50:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2E9CD580380
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 08:10:52 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 08:10:51 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ADeyl7BwQmwJPExXXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2u8SIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhfWS9GDIyz?=
 =?us-ascii?q?YIUBEvIBMORaoYTyulcDoweyChe3BO701jNFhWX70bEg3ug9DQ3L2hErEdIUsH?=
 =?us-ascii?q?TTqdX4LL4cUeSvw6nG0D7Nbe1Z2S386IjOfRAqvPaBXbV0ccXLx0kiDBnKgUuI?=
 =?us-ascii?q?qYzrOzOayP4BvHWF4Od5U++klm0pqxlprzSx2sshiZPFip8Ixl3H7yl13og4KN?=
 =?us-ascii?q?2iREJmY9OoCIVcuDuGO4drR84uXW9ltSU/x7EYpZK0Zi0HxIo7yxLBbvGKc4aF?=
 =?us-ascii?q?7g79WOuUJDp0mnRoc6+liRmo60iv0Oj8W9G00FlUqipFlcHBtnQM1xzI9siHUe?=
 =?us-ascii?q?Fx/kin2TaSzQzT7ftEIU8smaraLZ4u3KIwm4INvUjfHSL6glj6gLKVe0k+5OSl?=
 =?us-ascii?q?5eTqbq/7qpKeL4N0jxvxMqUqmsyxG+Q4NQ0OUnCC+eui0b3j4FT1T6hUgf0ojK?=
 =?us-ascii?q?bZtInWKt8cpq6kBQ9azpgs6w24Azei0dQYnmcIIEhKeRKal4XpP1DOIPblDfaw?=
 =?us-ascii?q?mViskTFrx+zYMb3lGJnCMn/DkLL6cLZ77E5czgUzzdZC555ODbEBOv3zVlfrtN?=
 =?us-ascii?q?PEFh85LxC0w+H/BdV514MeWnyADrWWMaPPqlKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z5EIE2+BelsdkWFfWL30JBGFWYRohF4Suvsh1ufFzlJaDG3Vq?=
 =?us-ascii?q?M44zg9T4W+EYbEQJvqmbGEwWK3E4NbYjN7DEuRGyLtfoSAR/BecS+XP4ptnyIJ?=
 =?us-ascii?q?Uf27RpY82AqynAn9zbVhM6zT4CJPro/p1tV++7jOkwov/yd/FcWX3jKxSDRtk2?=
 =?us-ascii?q?YVAjM7wq17iUp6zFiFzO5/mfMLO8ZU4qZuVg40fb7R1e18BJimXQbIcP+ARU6o?=
 =?us-ascii?q?RtjgDTxnHYF5+MMHf0soQ4bqtRvExSf/RuZNz7E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAACh4A9cmBHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKMc4sxmV+BcRYYFIcuIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII?=
 =?us-ascii?q?2BQIDGgEGgl8EAiQLAQ0BAQQKKQECAwECBgJICAMBODQFgxyCAgEEpHOBbDOCd?=
 =?us-ascii?q?gEBBYJDhGQIh3yEPxeBf4ERiGCFDok9gXCVUAmBFYERjyALGGCJBguHTyyZB4F?=
 =?us-ascii?q?Ggg4zGggcFIMnghsMF4N9iiFAMYEHiGqBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AkAACh4A9cmBHrdtBkHgEGBwaBUQkLAYEwgmKMc4sxmV+?=
 =?us-ascii?q?BcRYYFIcuIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGgEGgl8EA?=
 =?us-ascii?q?iQLAQ0BAQQKKQECAwECBgJICAMBODQFgxyCAgEEpHOBbDOCdgEBBYJDhGQIh3y?=
 =?us-ascii?q?EPxeBf4ERiGCFDok9gXCVUAmBFYERjyALGGCJBguHTyyZB4FGgg4zGggcFIMng?=
 =?us-ascii?q?hsMF4N9iiFAMYEHiGqBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="55442119"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 08:10:51 -0800
Received: from localhost ([::1]:39656 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWkcU-00066z-CJ
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 11:10:50 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:55470)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <olaf@aepfle.de>) id 1gWkUh-0008Vk-TZ
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:02:49 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <olaf@aepfle.de>) id 1gWkUc-0007eG-W7
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 11:02:47 -0500
Received: from mo6-p02-ob.smtp.rzone.de ([2a01:238:20a:202:5302::2]:19233)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <olaf@aepfle.de>)
	id 1gWkUc-0007cp-Dv; Tue, 11 Dec 2018 11:02:42 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; t=1544544159;
	s=strato-dkim-0002; d=aepfle.de;
	h=Message-Id:Date:Subject:Cc:To:From:X-RZG-CLASS-ID:X-RZG-AUTH:From:
	Subject:Sender;
	bh=H8oX2FNrorO/m1CvGFfvnTNC6zgKbZqko+mzLtXYL2M=;
	b=k6yFGB/NWgM9zqjVqV6KQBWv7+spxBIYnq0rl/1cE71B8rtTABwVXxig++MCGlEC4k
	Y4eia7SMR93BB/CH2Y6ef0WDDHDKOek2Da/S+PaYUDb5ZvOak+JZaw4H9KN4Gf5btZkG
	agY4ILNEUeUNg6xngzqKi2BgXzU82kkMtECpmtdZIbBuBvT/PFLckxCZEBZJcr7lzN2U
	oBWmxu3HFNHYg6tlng5egGidEk0YhRriwdZvwg/5H+mkyHqyB5HchAT3pSfM8VyJOcQG
	sXkUCkBTGnGaGLU3wz9d2ug53HfRTOv70m+tFZD6XZR8q6muFGJaYx9B8du0Nhy2Z00+
	sXoA==
X-RZG-AUTH: ":P2EQZWCpfu+qG7CngxMFH1J+3q8wa/QXkBR9MXjAuzpOGUivpc0WAr0t3Sj8140FKdfYth0="
X-RZG-CLASS-ID: mo00
Received: from sender by smtp.strato.de (RZmta 44.7 AUTH)
	with ESMTPSA id i02767uBBG2Q2eY
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (curve secp521r1
	with 521 ECDH bits, eq. 15360 bits RSA))
	(Client did not present a certificate);
	Tue, 11 Dec 2018 17:02:26 +0100 (CET)
From: Olaf Hering <olaf@aepfle.de>
To: qemu-devel@nongnu.org
Date: Tue, 11 Dec 2018 17:02:24 +0100
Message-Id: <20181211160224.22181-1-olaf@aepfle.de>
X-Mailer: git-send-email 2.16.4
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic]
X-Received-From: 2a01:238:20a:202:5302::2
Subject: [Qemu-devel] [PATCH v1] xen_disk: fix memory leak
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Olaf Hering <olaf@aepfle.de>,
	Stefano Stabellini <sstabellini@kernel.org>,
	"open list:Block layer core" <qemu-block@nongnu.org>,
	Max Reitz <mreitz@redhat.com>, Anthony Perard <anthony.perard@citrix.com>,
	"open list:X86" <xen-devel@lists.xenproject.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

There are some code paths that clobber ioreq->buf, which leads to a huge
memory leak after a few hours of runtime. One code path is
qemu_aio_complete, which might be called recursive. Another one is
ioreq_reset, which might clobber ioreq->buf as well.

Add wrappers to free ioreq->buf before reassignment.

Signed-off-by: Olaf Hering <olaf@aepfle.de>
---
 hw/block/xen_disk.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/hw/block/xen_disk.c b/hw/block/xen_disk.c
index 36eff94f84..e15eefe625 100644
--- a/hw/block/xen_disk.c
+++ b/hw/block/xen_disk.c
@@ -103,12 +103,24 @@ struct XenBlkDev {
 
 /* ------------------------------------------------------------- */
 
+static void ioreq_buf_alloc(struct ioreq *ioreq, size_t alignment)
+{
+    if (ioreq->buf)
+        qemu_vfree(ioreq->buf);
+    ioreq->buf = qemu_memalign(XC_PAGE_SIZE, ioreq->size);
+}
+static void ioreq_buf_free(struct ioreq *ioreq)
+{
+    if (ioreq->buf)
+        qemu_vfree(ioreq->buf);
+    ioreq->buf = NULL;
+}
 static void ioreq_reset(struct ioreq *ioreq)
 {
+    ioreq_buf_free(ioreq);
     memset(&ioreq->req, 0, sizeof(ioreq->req));
     ioreq->status = 0;
     ioreq->start = 0;
-    ioreq->buf = NULL;
     ioreq->size = 0;
     ioreq->presync = 0;
 
@@ -315,14 +327,14 @@ static void qemu_aio_complete(void *opaque, int ret)
         if (ret == 0) {
             ioreq_grant_copy(ioreq);
         }
-        qemu_vfree(ioreq->buf);
+        ioreq_buf_free(ioreq);
         break;
     case BLKIF_OP_WRITE:
     case BLKIF_OP_FLUSH_DISKCACHE:
         if (!ioreq->req.nr_segments) {
             break;
         }
-        qemu_vfree(ioreq->buf);
+        ioreq_buf_free(ioreq);
         break;
     default:
         break;
@@ -390,12 +402,12 @@ static int ioreq_runio_qemu_aio(struct ioreq *ioreq)
 {
     struct XenBlkDev *blkdev = ioreq->blkdev;
 
-    ioreq->buf = qemu_memalign(XC_PAGE_SIZE, ioreq->size);
+    ioreq_buf_alloc(ioreq, XC_PAGE_SIZE);
     if (ioreq->req.nr_segments &&
         (ioreq->req.operation == BLKIF_OP_WRITE ||
          ioreq->req.operation == BLKIF_OP_FLUSH_DISKCACHE) &&
         ioreq_grant_copy(ioreq)) {
-        qemu_vfree(ioreq->buf);
+        ioreq_buf_free(ioreq);
         goto err;
     }
 

