Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:30:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 857AB58037D
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 10:48:59 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 10:48:59 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AJSuEGx1t6GL3q9y2smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMeL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOTA6/m/QiMNwgr9VoAqjqhJ9zIPYfY+YOOZgcaPGZt4WWXZNU9xNWyFbHo+w?=
 =?us-ascii?q?c40CBPcBM+ZCqIn9okMDoAe4BQaxHuPg1D9JjWLr06060uQhFwLG0xI+H9IPrH?=
 =?us-ascii?q?vUrMj+OaAIXuCz0abI1yvMbvNM1Tfm6IjIcxYhofKSUrJucMre1UkvGhjbjlWR?=
 =?us-ascii?q?s4zlIy6V1uMMsmma6OpsT/6gi2kiqwxopDWk28QiipHRi44L1lzJ9j91zJsoKd?=
 =?us-ascii?q?C7UkJ3f9CpHZtKuy2HNYZ6Wt4uTmJotSog1LELt4O3cDIUxJko2xLTcf6KfoiO?=
 =?us-ascii?q?7xn+TuieOy14i2hgeL+nhxa970ygyurkW8mw0VZKtTZFksLWunAC0RzT99KLSv?=
 =?us-ascii?q?xn/keuwTqP1gbT5f9YIU0si6bXN50szqQtmpYOsknPBDH6lUv2gaOMa0kp+PCk?=
 =?us-ascii?q?6+H9bbXnop+cOZV0igb7Mqk2g8ywH+E4MhUXU2eG5+u8yqPs/UngTLpRif02j6?=
 =?us-ascii?q?/Zv4zEKsQAoaK5Bw5V0oU95BqlADamzcwVnX0GLFJDZRKGgJLlO1DIIPDkE/i/?=
 =?us-ascii?q?h06gnytsx/DDJbDhBJLNLn7MkLfnYLZx8UlcyBA8zdxH/ZJbFqkBIO7vWk/2rN?=
 =?us-ascii?q?HYCh45Mw+qzOr9B9R9y5gTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?3jcEn0QAd/ypwYcPcyL/WfBnOFmCJ3zrhNgHDCENpAV5SeXrjFiLV3lUf2qzWK?=
 =?us-ascii?q?QnoSg2DZ/jAYrdS4T+vbqawS3uG5RXYnxBWEmBFGqte4iaVvNJci+LP8J6jhQC?=
 =?us-ascii?q?Ur6uTZJn0guh4xTnwbhqJfaB5ysDqJj438J07eCAqRZn7DFxEoGR3n+AS0lymW?=
 =?us-ascii?q?UHQSJw27pw5QRkx1KelKJ8hPdbPdpU4fxPT0E9L5GP4fZ9DoXbXA7bc8bBc1an?=
 =?us-ascii?q?RNarHzA6TpplytkCeUtsXc6ijxbA0jSrCL89ib2RGIEz4LDbmXP2IpAumD79yK?=
 =?us-ascii?q?A9ggx+EYN0Pmq8i/sn+g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABL+fZbhxHrdtBiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJijBBfiyKZR4FzFBgUiFIiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+?=
 =?us-ascii?q?CNgUCAxgJglwDAwECQwopAwMBAgYBAUgIAwFTBxIFgxyCAgEDAapNhUCEX4deh?=
 =?us-ascii?q?CuBVz+BEYJkiwcCjxl0j3UHAoIcBI8RFolhWIZPmDCBRoINcIM8giQDF44fPjG?=
 =?us-ascii?q?BB4pdgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AYAABL+fZbhxHrdtBiHQEBBQEHBQGBUQgBCwGBMIJijBB?=
 =?us-ascii?q?fiyKZR4FzFBgUiFIiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNgUCAxgJglwDA?=
 =?us-ascii?q?wECQwopAwMBAgYBAUgIAwFTBxIFgxyCAgEDAapNhUCEX4dehCuBVz+BEYJkiwc?=
 =?us-ascii?q?Cjxl0j3UHAoIcBI8RFolhWIZPmDCBRoINcIM8giQDF44fPjGBB4pdgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="139242175"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 10:48:58 -0800
Received: from localhost ([::1]:48923 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPu25-0003Un-Vj
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 13:48:58 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59657)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <andrey.shinkevich@virtuozzo.com>) id 1gPu1S-0003O7-Jx
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 13:48:20 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <andrey.shinkevich@virtuozzo.com>) id 1gPu1P-00073n-Jl
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 13:48:18 -0500
Received: from relay.sw.ru ([185.231.240.75]:48750)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <andrey.shinkevich@virtuozzo.com>)
	id 1gPu1P-0006zu-8i; Thu, 22 Nov 2018 13:48:15 -0500
Received: from [172.16.25.136] (helo=localhost.sw.ru)
	by relay.sw.ru with esmtp (Exim 4.91)
	(envelope-from <andrey.shinkevich@virtuozzo.com>)
	id 1gPu1I-0006jl-Rc; Thu, 22 Nov 2018 21:48:08 +0300
From: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
To: qemu-devel@nongnu.org,
	qemu-block@nongnu.org
Date: Thu, 22 Nov 2018 21:48:04 +0300
Message-Id: <1542912487-279165-3-git-send-email-andrey.shinkevich@virtuozzo.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1542912487-279165-1-git-send-email-andrey.shinkevich@virtuozzo.com>
References: <1542912487-279165-1-git-send-email-andrey.shinkevich@virtuozzo.com>
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 185.231.240.75
Subject: [Qemu-devel] [PATCH 2/5] The discard flag for block stream operation
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, vsementsov@virtuozzo.com, jcody@redhat.com,
	armbru@redhat.com, dgilbert@redhat.com,
	andrey.shinkevich@virtuozzo.com, den@openvz.org, mreitz@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Adding a parameter to QMP block-stream command to allow discarding
blocks in the backing chain while blocks are being copied to the
active layer.

Signed-off-by: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
---
 block/stream.c            | 3 +--
 blockdev.c                | 8 +++++++-
 hmp-commands.hx           | 4 ++--
 hmp.c                     | 4 +++-
 include/block/block_int.h | 2 +-
 qapi/block-core.json      | 5 ++++-
 6 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/block/stream.c b/block/stream.c
index 9e85954..e844e94 100644
--- a/block/stream.c
+++ b/block/stream.c
@@ -584,10 +584,9 @@ static const BlockJobDriver stream_job_driver = {
 
 void stream_start(const char *job_id, BlockDriverState *bs,
                   BlockDriverState *base, const char *backing_file_str,
-                  int creation_flags, int64_t speed,
+                  int creation_flags, int64_t speed, bool discard,
                   BlockdevOnError on_error, Error **errp)
 {
-    const bool discard = false;
     StreamBlockJob *s = NULL;
     BlockDriverState *iter;
     int orig_bs_flags;
diff --git a/blockdev.c b/blockdev.c
index 81f95d9..333592e 100644
--- a/blockdev.c
+++ b/blockdev.c
@@ -3141,6 +3141,7 @@ void qmp_block_stream(bool has_job_id, const char *job_id, const char *device,
                       bool has_base_node, const char *base_node,
                       bool has_backing_file, const char *backing_file,
                       bool has_speed, int64_t speed,
+                      bool has_discard, bool discard,
                       bool has_on_error, BlockdevOnError on_error,
                       bool has_auto_finalize, bool auto_finalize,
                       bool has_auto_dismiss, bool auto_dismiss,
@@ -3157,6 +3158,10 @@ void qmp_block_stream(bool has_job_id, const char *job_id, const char *device,
         on_error = BLOCKDEV_ON_ERROR_REPORT;
     }
 
+    if (!has_discard) {
+        discard = false;
+    }
+
     bs = bdrv_lookup_bs(device, device, errp);
     if (!bs) {
         return;
@@ -3221,7 +3226,8 @@ void qmp_block_stream(bool has_job_id, const char *job_id, const char *device,
     }
 
     stream_start(has_job_id ? job_id : NULL, bs, base_bs, base_name,
-                 job_flags, has_speed ? speed : 0, on_error, &local_err);
+                 job_flags, has_speed ? speed : 0,
+                 discard, on_error, &local_err);
     if (local_err) {
         error_propagate(errp, local_err);
         goto out;
diff --git a/hmp-commands.hx b/hmp-commands.hx
index db0c681..a7e2a10 100644
--- a/hmp-commands.hx
+++ b/hmp-commands.hx
@@ -95,8 +95,8 @@ ETEXI
 
     {
         .name       = "block_stream",
-        .args_type  = "device:B,speed:o?,base:s?",
-        .params     = "device [speed [base]]",
+        .args_type  = "device:B,speed:o?,base:s?,discard:-d",
+        .params     = "device [speed [base]] [-d]",
         .help       = "copy data from a backing file into a block device",
         .cmd        = hmp_block_stream,
     },
diff --git a/hmp.c b/hmp.c
index 7828f93..0d263e4 100644
--- a/hmp.c
+++ b/hmp.c
@@ -1920,9 +1920,11 @@ void hmp_block_stream(Monitor *mon, const QDict *qdict)
     const char *device = qdict_get_str(qdict, "device");
     const char *base = qdict_get_try_str(qdict, "base");
     int64_t speed = qdict_get_try_int(qdict, "speed", 0);
+    bool discard = qdict_get_try_bool(qdict, "discard", false);
 
     qmp_block_stream(true, device, device, base != NULL, base, false, NULL,
-                     false, NULL, qdict_haskey(qdict, "speed"), speed, true,
+                     false, NULL, qdict_haskey(qdict, "speed"), speed,
+                     true, discard, true,
                      BLOCKDEV_ON_ERROR_REPORT, false, false, false, false,
                      &error);
 
diff --git a/include/block/block_int.h b/include/block/block_int.h
index f605622..2660336 100644
--- a/include/block/block_int.h
+++ b/include/block/block_int.h
@@ -970,7 +970,7 @@ int is_windows_drive(const char *filename);
  */
 void stream_start(const char *job_id, BlockDriverState *bs,
                   BlockDriverState *base, const char *backing_file_str,
-                  int creation_flags, int64_t speed,
+                  int creation_flags, int64_t speed, bool discard,
                   BlockdevOnError on_error, Error **errp);
 
 /**
diff --git a/qapi/block-core.json b/qapi/block-core.json
index d4fe710..f4538fa 100644
--- a/qapi/block-core.json
+++ b/qapi/block-core.json
@@ -2334,6 +2334,9 @@
 #
 # @speed:  the maximum speed, in bytes per second
 #
+# @discard: true to delete blocks duplicated in old backing files.
+#           (default: false). Since 3.1.
+#
 # @on-error: the action to take on an error (default report).
 #            'stop' and 'enospc' can only be used if the block device
 #            supports io-status (see BlockInfo).  Since 1.3.
@@ -2366,7 +2369,7 @@
 { 'command': 'block-stream',
   'data': { '*job-id': 'str', 'device': 'str', '*base': 'str',
             '*base-node': 'str', '*backing-file': 'str', '*speed': 'int',
-            '*on-error': 'BlockdevOnError',
+            '*discard': 'bool', '*on-error': 'BlockdevOnError',
             '*auto-finalize': 'bool', '*auto-dismiss': 'bool' } }
 
 ##
-- 
1.8.3.1


