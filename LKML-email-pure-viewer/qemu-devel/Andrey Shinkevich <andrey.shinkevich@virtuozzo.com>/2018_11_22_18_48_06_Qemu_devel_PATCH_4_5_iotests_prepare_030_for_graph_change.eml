Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:30:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 12660580460
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 10:49:05 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 22 Nov 2018 10:49:05 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AijRv9xcy4QkoOB9N26RU7xMKlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcWyYR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgqxcoh2hqQFxw5bWbY+XO/dyY63Qcc8ESmpaRctdSzBND5mg?=
 =?us-ascii?q?Y4YVE+YNIeBVpJT9qVsUqhu+ABGhCf/pyjBVnH/5w6072Pk8HwHG3QwgGdEOv2?=
 =?us-ascii?q?rKrNX0KKgSUf2+wa7SwjXFcvxWwyny6YjSfhA6ofGMXLRwccnPxkkxFgPKklWQ?=
 =?us-ascii?q?pJf7PzOUzOQNr3Wb7+1hVOOujG4rsR1+oj+qxso1jITCm4Ebykjc+Cln3Io4Js?=
 =?us-ascii?q?e0RFNmbdOnCpdcqS+XOotsTs8/QWxkoDs2x74GtJKhYiQHxokrywTBZ/GIb4SE?=
 =?us-ascii?q?+BDuWeaXLDxlnnxqYqi/iAy38UW4yu3zSM200FFSoypBk9nMrWwN1wfJ5siITP?=
 =?us-ascii?q?t9412t2TGV1wDc8u1EIEY0mrTHK5M53LI8ipkevV7eEiPrm0j6lrGae0sk9+Sy?=
 =?us-ascii?q?9ujqYK3qppqGOI91jgH+PL4umsu6AekgKwgBQW2b+fml2LL+40L5XqtFjvkvnq?=
 =?us-ascii?q?bCt5DaOMIbqbKnDA9O1Yoj7xe/DzS439gCkngHMUpIeBaGj4jvJlHPL+r0Dfa5?=
 =?us-ascii?q?g1Swjjhrw+rKMaHmApXINXXDlrDhfbBy605a1Qo/19df54hbCr0ZOvL8RlfxtM?=
 =?us-ascii?q?DEDh8+KwG0x+fnCNZj2Y8EVmOPH7SUMKfTsV+O++IuLPOAZI4TuDbhNfcl4+Ti?=
 =?us-ascii?q?gmM+mV8YLuGU24AKYiW4Auh+OBfeJn7tmcsaV2ENuAU4UartklLFVDdSY3O7We?=
 =?us-ascii?q?U7/i06D4S9Sp7OQ53ojLGf0SPoI5tNe2oTD1mNFWvvJZyJXupJZC+ML8skiDEd?=
 =?us-ascii?q?SLW6V6cn0hehshK8zKBoefHJ8C8Vvo62yd5u+ufIngsz/zEnM8PIymyIUiR4k3?=
 =?us-ascii?q?0FQxcw26Zwp1E7zU2MleBhjvlFUNZX4PhKegE9M5Ha0qp9Ed+hdBjGe4KgTlq8?=
 =?us-ascii?q?T8TuOjEwSNE83d4FYw4pEtOulB3SmTGqArkWmqKKD5wc7KPGw2X2NdR6jX3B0f?=
 =?us-ascii?q?9y3BEdXsJTODj+1eZE/A/JCtuRng=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAADI+fZbhxHrdtBiHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMCqCOIwQX4shmUeBcxQYFIhSIjQJDQEDAQEBAQEBAgETAQEBCgsJCCk?=
 =?us-ascii?q?vgjYFAgMYCYJcAwMBAkMKKQMDAQIGAQFICAMBUwcSBYJRS4ICAQMBqk6FQIReh?=
 =?us-ascii?q?16EK4FXP458Ao8ZdI91BwKCHASPERaJYViGT5gwgUaCDXCDPIInF44fPjGBB4o?=
 =?us-ascii?q?HBFKBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAADI+fZbhxHrdtBiHQEBBQEHBQGBUQgBCwGBMCqCOIw?=
 =?us-ascii?q?QX4shmUeBcxQYFIhSIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkvgjYFAgMYCYJcA?=
 =?us-ascii?q?wMBAkMKKQMDAQIGAQFICAMBUwcSBYJRS4ICAQMBqk6FQIReh16EK4FXP458Ao8?=
 =?us-ascii?q?ZdI91BwKCHASPERaJYViGT5gwgUaCDXCDPIInF44fPjGBB4oHBFKBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="41221994"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 10:48:55 -0800
Received: from localhost ([::1]:48921 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPu23-0003Rs-0l
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 13:48:55 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59655)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <andrey.shinkevich@virtuozzo.com>) id 1gPu1S-0003O5-Jw
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 13:48:20 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <andrey.shinkevich@virtuozzo.com>) id 1gPu1P-00073c-ET
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 13:48:18 -0500
Received: from relay.sw.ru ([185.231.240.75]:48756)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <andrey.shinkevich@virtuozzo.com>)
	id 1gPu1P-0006zx-4Z; Thu, 22 Nov 2018 13:48:15 -0500
Received: from [172.16.25.136] (helo=localhost.sw.ru)
	by relay.sw.ru with esmtp (Exim 4.91)
	(envelope-from <andrey.shinkevich@virtuozzo.com>)
	id 1gPu1J-0006jl-5L; Thu, 22 Nov 2018 21:48:09 +0300
From: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
To: qemu-devel@nongnu.org,
	qemu-block@nongnu.org
Date: Thu, 22 Nov 2018 21:48:06 +0300
Message-Id: <1542912487-279165-5-git-send-email-andrey.shinkevich@virtuozzo.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1542912487-279165-1-git-send-email-andrey.shinkevich@virtuozzo.com>
References: <1542912487-279165-1-git-send-email-andrey.shinkevich@virtuozzo.com>
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 185.231.240.75
Subject: [Qemu-devel] [PATCH 4/5] iotests: prepare 030 for graph change
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, vsementsov@virtuozzo.com, jcody@redhat.com,
	armbru@redhat.com, dgilbert@redhat.com,
	andrey.shinkevich@virtuozzo.com, den@openvz.org, mreitz@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The discard option for block-stream command requires insertion of the
filter to write into the backing chain. In that case, the job will not
resume by device name. So, the node name is specified.

Signed-off-by: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
---
 tests/qemu-iotests/030 | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/tests/qemu-iotests/030 b/tests/qemu-iotests/030
index 276e06b..5d148b0 100755
--- a/tests/qemu-iotests/030
+++ b/tests/qemu-iotests/030
@@ -36,7 +36,8 @@ class TestSingleDrive(iotests.QMPTestCase):
         qemu_img('create', '-f', iotests.imgfmt, '-o', 'backing_file=%s' % mid_img, test_img)
         qemu_io('-f', 'raw', '-c', 'write -P 0x1 0 512', backing_img)
         qemu_io('-f', iotests.imgfmt, '-c', 'write -P 0x1 524288 512', mid_img)
-        self.vm = iotests.VM().add_drive("blkdebug::" + test_img, "backing.node-name=mid")
+        self.vm = iotests.VM().add_drive("blkdebug::" + test_img,
+                               "node-name=source,backing.node-name=mid")
         self.vm.launch()
 
     def tearDown(self):
@@ -87,7 +88,7 @@ class TestSingleDrive(iotests.QMPTestCase):
         self.assert_qmp(result, 'return', {})
 
         self.pause_job('drive0', wait=False)
-        self.vm.resume_drive('drive0')
+        self.vm.resume_drive('source')
         self.pause_wait('drive0')
 
         result = self.vm.qmp('query-block-jobs')
@@ -743,7 +744,8 @@ class TestStreamStop(iotests.QMPTestCase):
         qemu_io('-f', 'raw', '-c', 'write -P 0x1 0 32M', backing_img)
         qemu_img('create', '-f', iotests.imgfmt, '-o', 'backing_file=%s' % backing_img, test_img)
         qemu_io('-f', iotests.imgfmt, '-c', 'write -P 0x1 32M 32M', test_img)
-        self.vm = iotests.VM().add_drive("blkdebug::" + test_img)
+        self.vm = iotests.VM().add_drive("blkdebug::" + test_img,
+                                         "node-name=source")
         self.vm.launch()
 
     def tearDown(self):
@@ -764,7 +766,7 @@ class TestStreamStop(iotests.QMPTestCase):
             self.assert_qmp(e, 'event', 'JOB_STATUS_CHANGE')
             self.assert_qmp(e, 'data/id', 'drive0')
 
-        self.cancel_and_wait(resume=True)
+        self.cancel_and_wait(resume=True, resume_node='source')
 
 class TestSetSpeed(iotests.QMPTestCase):
     image_len = 80 * 1024 * 1024 # MB
@@ -774,7 +776,8 @@ class TestSetSpeed(iotests.QMPTestCase):
         qemu_io('-f', 'raw', '-c', 'write -P 0x1 0 32M', backing_img)
         qemu_img('create', '-f', iotests.imgfmt, '-o', 'backing_file=%s' % backing_img, test_img)
         qemu_io('-f', iotests.imgfmt, '-c', 'write -P 0x1 32M 32M', test_img)
-        self.vm = iotests.VM().add_drive('blkdebug::' + test_img)
+        self.vm = iotests.VM().add_drive('blkdebug::' + test_img,
+                                         "node-name=source")
         self.vm.launch()
 
     def tearDown(self):
@@ -817,7 +820,7 @@ class TestSetSpeed(iotests.QMPTestCase):
         self.assert_qmp(result, 'return[0]/device', 'drive0')
         self.assert_qmp(result, 'return[0]/speed', 8 * 1024 * 1024)
 
-        self.cancel_and_wait(resume=True)
+        self.cancel_and_wait(resume=True, resume_node='source')
         self.vm.pause_drive('drive0')
 
         # Check setting speed in block-stream works
@@ -828,7 +831,7 @@ class TestSetSpeed(iotests.QMPTestCase):
         self.assert_qmp(result, 'return[0]/device', 'drive0')
         self.assert_qmp(result, 'return[0]/speed', 4 * 1024 * 1024)
 
-        self.cancel_and_wait(resume=True)
+        self.cancel_and_wait(resume=True, resume_node='source')
 
     def test_set_speed_invalid(self):
         self.assert_no_active_block_jobs()
@@ -845,7 +848,8 @@ class TestSetSpeed(iotests.QMPTestCase):
         result = self.vm.qmp('block-job-set-speed', device='drive0', speed=-1)
         self.assert_qmp(result, 'error/class', 'GenericError')
 
-        self.cancel_and_wait(resume=True)
+        self.cancel_and_wait(resume=True, resume_node='source')
+
 
 if __name__ == '__main__':
     iotests.main(supported_fmts=['qcow2', 'qed'])
-- 
1.8.3.1


