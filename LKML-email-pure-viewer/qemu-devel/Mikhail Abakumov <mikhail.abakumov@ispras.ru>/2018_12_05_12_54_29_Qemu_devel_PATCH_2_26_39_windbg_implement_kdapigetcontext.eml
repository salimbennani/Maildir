Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:52:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7D8825804C1
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 05:11:22 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 05:11:20 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AFsWWIBDRE5VU3izXjddeUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX+p8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/m/UhMNygqJUrh2uqABwzYDJeIGYNvhwc6zAcd4UWWZOQN1RWjddAo6+?=
 =?us-ascii?q?dYYDE/YNMPxaooT7ulAArQG+BQ6pBO73zTFIh3z23a0g3OQgFQHNwRAtEMkUv3?=
 =?us-ascii?q?TXsdX1MaASUf6ox6TPyDXDbvBW2Tfn54jJdhAtu+uDUqlqfsrS1EkvEgTFjkuL?=
 =?us-ascii?q?pIzkJDOVzv4NvHKA7+Z6T+KvlncqpgdsqTas3schkpfFip4Wx1ze6Cl13YU4Kc?=
 =?us-ascii?q?emREN1YdOoCoZcuiOCO4Z1Qs4uWXxktSkkxrEcpJK3YSoHxI45yxLBavGKdZWD?=
 =?us-ascii?q?7Aj5W+aLOzh4gWpoeLKhiBa29kit0un8Vsiv0FZWtSpJiNbMtnYQ1xDJ7ciHUP?=
 =?us-ascii?q?R98l+g2TaJyQ/T9vlJLV4omafYMZIt36M8m5kJvUjdECL7mF/6gLKUe0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMr0wlcy6HOQ0KxUBUHaF+eui0L3v5Fb2QLJXjv0wjq?=
 =?us-ascii?q?bWrovaKcMfpq64AA9azJwv6hmiDzq+1NQYnH8HLE9KeR6djojpPU3OL+78Dful?=
 =?us-ascii?q?n1uslzJryuvAPr3mBJXNIX7DkKr7cbZ68U5cxxI/zcpD6JJMFrEBPPXzV1f1tN?=
 =?us-ascii?q?zZDR82LRa4wun6CNhm0oMeWGSPArKWMa/IsF+I4P4vLPeIZIMPpDn9LP0ltLbT?=
 =?us-ascii?q?i2QkkwodYbWxxslQL3S5Beh9ZUOeZ3Xqn5EGC2hNuwM/SOnjjhqFSSJSYHCpGL?=
 =?us-ascii?q?sx4yx+BI+4AIOQe4a2nbbU2S66GoFRNHlLD03JHXr2eoHBQfoVdS+JPudnlToL?=
 =?us-ascii?q?U6XnTJUuggqzvg33wKYyM+zP5ycDvoji3tUm2+qGjBw36Hl4AtqQ10mLSGd7mH?=
 =?us-ascii?q?5OQCU5j45lpkko71aA0aF5h7RxH9VQ+vZOTE9uMJ/fz+V7D5b7UAvCY9KOVn6n?=
 =?us-ascii?q?Wc28CCp3VM9nkIxGWFp0B9j31kOL5CGtGbJAz7E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CjAADrzQdchxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDeYh4iy+BaJJENIR5gXEWGBSDLIEPA4MUIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCBsOL4I2BQIDGAmCXAMDAQIgBB8KKQMDAQIGAQEkAiIEAgIDAUMQGQWDH?=
 =?us-ascii?q?IICAQMBpHF8M4orgQuLE4FXP4FEgiqGA4I3glcCj3szkCgHAoIgBIQiixSKSoZ?=
 =?us-ascii?q?lLJhSgUaCDU0ygQEIVoFOgicXEo4Ob4EHiSaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CjAADrzQdchxHrdtBkHgEGBwaBUQkLAYEwgmKDeYh4iy+?=
 =?us-ascii?q?BaJJENIR5gXEWGBSDLIEPA4MUIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2B?=
 =?us-ascii?q?QIDGAmCXAMDAQIgBB8KKQMDAQIGAQEkAiIEAgIDAUMQGQWDHIICAQMBpHF8M4o?=
 =?us-ascii?q?rgQuLE4FXP4FEgiqGA4I3glcCj3szkCgHAoIgBIQiixSKSoZlLJhSgUaCDU0yg?=
 =?us-ascii?q?QEIVoFOgicXEo4Ob4EHiSaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="43649460"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 05:11:13 -0800
Received: from localhost ([::1]:34146 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUWxL-0005mY-Ex
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 08:11:11 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34423)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gUWhG-0002u6-3Q
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:54:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gUWhD-0006nF-Nv
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:54:34 -0500
Received: from mail.ispras.ru ([83.149.199.45]:50608)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gUWhD-0006n1-E9
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:54:31 -0500
Received: from Misha-PC.lan02.inno (unknown [85.142.117.226])
	by mail.ispras.ru (Postfix) with ESMTPSA id 7BBE3540082;
	Wed,  5 Dec 2018 15:54:30 +0300 (MSK)
From: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
To: qemu-devel@nongnu.org
Date: Wed, 05 Dec 2018 15:54:29 +0300
Message-ID: <154401446884.8440.14559945425266957490.stgit@Misha-PC.lan02.inno>
In-Reply-To: <154401431697.8440.845616703562380651.stgit@Misha-PC.lan02.inno>
References: <154401431697.8440.845616703562380651.stgit@Misha-PC.lan02.inno>
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 83.149.199.45
Subject: [Qemu-devel] [PATCH 2 26/39] windbg: implement kd_api_get_context
 and kd_api_set_context
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: sw@weilnetz.de, lprosek@redhat.com, dovgaluk@ispras.ru,
	rkagan@virtuozzo.com, pbonzini@redhat.com, den@openvz.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
Signed-off-by: Pavel Dovgalyuk <dovgaluk@ispras.ru>
---
 include/exec/windbgstub-utils.h |    2 ++
 target/i386/windbgstub.c        |   27 +++++++++++++++++++++++++++
 windbgstub.c                    |    8 ++++++++
 3 files changed, 37 insertions(+)

diff --git a/include/exec/windbgstub-utils.h b/include/exec/windbgstub-utils.h
index 638b2b9a6f..a88e013de9 100644
--- a/include/exec/windbgstub-utils.h
+++ b/include/exec/windbgstub-utils.h
@@ -69,6 +69,8 @@ const char *kd_pkt_type_name(int id);
 
 void kd_api_read_virtual_memory(CPUState *cs, PacketData *pd);
 void kd_api_write_virtual_memory(CPUState *cs, PacketData *pd);
+void kd_api_get_context(CPUState *cs, PacketData *pd);
+void kd_api_set_context(CPUState *cs, PacketData *pd);
 void kd_api_unsupported(CPUState *cs, PacketData *pd);
 
 DBGKD_ANY_WAIT_STATE_CHANGE *kd_state_change_exc(CPUState *cs);
diff --git a/target/i386/windbgstub.c b/target/i386/windbgstub.c
index a1d27b8aca..900950495f 100644
--- a/target/i386/windbgstub.c
+++ b/target/i386/windbgstub.c
@@ -896,6 +896,33 @@ GEN_WINDBG_KSPEC_REGS_RW(windbg_read_ks_regs, false)
 __attribute__ ((unused)) /* unused yet */
 GEN_WINDBG_KSPEC_REGS_RW(windbg_write_ks_regs, true)
 
+void kd_api_get_context(CPUState *cs, PacketData *pd)
+{
+    int err;
+
+    pd->extra_size = sizeof(CPU_CONTEXT);
+    err = windbg_read_context(cs, pd->extra, pd->extra_size,
+                              0, sizeof(CPU_CONTEXT));
+
+    if (err) {
+        pd->extra_size = 0;
+        pd->m64.ReturnStatus = STATUS_UNSUCCESSFUL;
+    }
+}
+
+void kd_api_set_context(CPUState *cs, PacketData *pd)
+{
+    int err;
+
+    err = windbg_write_context(cs, pd->extra, pd->extra_size,
+                               0, sizeof(CPU_CONTEXT));
+    pd->extra_size = 0;
+
+    if (err) {
+        pd->m64.ReturnStatus = STATUS_UNSUCCESSFUL;
+    }
+}
+
 static bool find_KPCR(CPUState *cs)
 {
     X86CPU *cpu = X86_CPU(cs);
diff --git a/windbgstub.c b/windbgstub.c
index 46400d9bad..70ebf3c0ad 100644
--- a/windbgstub.c
+++ b/windbgstub.c
@@ -157,6 +157,14 @@ static void windbg_process_manipulate_packet(WindbgState *state)
         kd_api_write_virtual_memory(cs, data);
         break;
 
+    case DbgKdGetContextApi:
+        kd_api_get_context(cs, data);
+        break;
+
+    case DbgKdSetContextApi:
+        kd_api_set_context(cs, data);
+        break;
+
     default:
         kd_api_unsupported(cs, data);
         break;


