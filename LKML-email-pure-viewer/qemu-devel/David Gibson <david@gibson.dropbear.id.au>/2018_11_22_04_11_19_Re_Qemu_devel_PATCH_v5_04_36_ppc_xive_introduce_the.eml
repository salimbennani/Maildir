Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 13:13:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8DF5F580332
	for <like.xu@linux.intel.com>; Wed, 21 Nov 2018 21:14:37 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Nov 2018 21:14:37 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3APnry5xAJbUQ5zBV8ubVwUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37psuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOTA5/m/JicJwgq1Urw68qBN9zYHafZmVOfh8cK7SYN8XS3ZNUdhKVyFaDYOw?=
 =?us-ascii?q?c5ECAvAdMetCsoXwoUYFoxukBQmrAePi0jFGiWXo3a07zusqDADI3A07ENIVt3?=
 =?us-ascii?q?TUqsj+OaAPXu+v0qnIzCjMYuhZ2Tf884fIaRchofeWUb1ta8rRzlEvGBjbgVqK?=
 =?us-ascii?q?s4zpJTKV2fkXv2eB8uptTOSigHMppQF2pzig3MYsio/Ri4ISy1HE8T92z50uJd?=
 =?us-ascii?q?GiT057e9GkHINNuCGAMIt2WtgtTH9ytyYg0LEGuIO0cS4Xw5ok3x7Sc+KLf5SL?=
 =?us-ascii?q?7x75SeqdPDR1iGh7dL+xhxu+61Wsx+/kWsWq31tGsjdJn9zCu30JyxDf9s2KRu?=
 =?us-ascii?q?V480u83DuC0h7f5+dZKk4uj6XbMYQuwrsom5oTr0vDGij2lV3yjK+XbUUk5vOo?=
 =?us-ascii?q?5/7oYrXgu5+QLYh0ihvxMqg2m8y/B/o3MhQWUmSF5eix16fv8VDkTLhJlPE6jK?=
 =?us-ascii?q?fUvZDAKcgGpKO1GwpV3Zwi6xa7ATemytMYnXwfIVJcZh2HipXpN0jTL//mE/ew?=
 =?us-ascii?q?nVCsnC5wyPDBI73hBInCIWbYkLvmebZ96k1cxxQpwdFQ+pJZErUBIPP1Wk/su9?=
 =?us-ascii?q?3UFB45Mwqow+n5DNVxzJ8RWWWKAqKCNqPStlmI5u0pI+mRfoMVvyz9K/c96/70?=
 =?us-ascii?q?kXA5gUMdfbWu3ZYPbHC4H/dmLFuDbXvjn9cMCmMKvgs4TOz3h1yOSz9TZ3CuX6?=
 =?us-ascii?q?0i4jE3Ep6pDYDGRtPlvbqawS3uHoFKfnsUTReIEGz0bMOCXPEDbj/UJdVu1TkN?=
 =?us-ascii?q?VLykQolm0gmytQj80P1+I+/JvyEVq5/nh+Vz/PDZwBQ79DhoCJaE3mSQCm15gG?=
 =?us-ascii?q?4MAiU7xb1yulBVzFCF3q5lxftCGotI+vlLXwwmYIPa1PFwENvoWwjMLeuOHX0n?=
 =?us-ascii?q?Ts+nCnkVQ5oexNYSblw1T96mgTjA1i2mRbgPmOrYKoYz9/fw1mbwK45Synzd06?=
 =?us-ascii?q?9p21UvXMpDHWKnjLV48U7fHYnRmUiQjeCreeIVwXiepy+40WOSsRQAA0ZLWqLf?=
 =?us-ascii?q?UCVHaw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAACOvZbhxHrdtBYChYFAQEBAQMBA?=
 =?us-ascii?q?QEHAwEBAYFRBgEBAQsBgTAqgQ+BKYwQX4sigg16lkAUgV8CDQUYBw2ITCI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNgUCAxgJglwBAgMBAiQZAQEECikBAgMBA?=
 =?us-ascii?q?gYBAQoSBgkdCAMBCwUYHRQTBQSCTUsBggEBBKktgWwzgnYBAQWHGwcIgm2IAIE?=
 =?us-ascii?q?cF4F/gRGCXTWEQxAXg0mCJo8bEJBZCYIghFyKKAsYX3pNh2GHAZAPhTGCcIFGg?=
 =?us-ascii?q?g0zGggXGYMnCYISDBeCBIZahVItMYEEA4pQVYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAAACOvZbhxHrdtBYChYFAQEBAQMBAQEHAwEBAYFRBgE?=
 =?us-ascii?q?BAQsBgTAqgQ+BKYwQX4sigg16lkAUgV8CDQUYBw2ITCI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQoLCQgpIwyCNgUCAxgJglwBAgMBAiQZAQEECikBAgMBAgYBAQoSBgkdCAM?=
 =?us-ascii?q?BCwUYHRQTBQSCTUsBggEBBKktgWwzgnYBAQWHGwcIgm2IAIEcF4F/gRGCXTWEQ?=
 =?us-ascii?q?xAXg0mCJo8bEJBZCYIghFyKKAsYX3pNh2GHAZAPhTGCcIFGgg0zGggXGYMnCYI?=
 =?us-ascii?q?SDBeCBIZahVItMYEEA4pQVYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,264,1539673200"; 
   d="asc'?scan'208";a="53914645"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Nov 2018 21:14:36 -0800
Received: from localhost ([::1]:44050 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPhJz-0007Mv-LH
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 00:14:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47228)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gPhGN-0004n8-Bx
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 00:10:52 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gPhGL-0005aw-Ot
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 00:10:51 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:50539)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gPhGK-0005UR-Km; Thu, 22 Nov 2018 00:10:49 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 430nZq6gXGz9rxp; Thu, 22 Nov 2018 16:10:43 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1542863443;
	bh=BQVO4+aSbPXOlvjGmgPCQrvdotKp/ezIC1Vo6+V649Y=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=IwAZnlh141Ff2EeEKH/sgxLbAhmEHioc3scNzsmiHixsdMmje5QomCzCz/gmdp2xT
	xEpIIzU/VTz2fBhqdJFEPiG24rugPJmEa5HOS1mXToeI6BlBQmJPfjw/oBCi7BniaZ
	XvOuUDgvUwNQ2hSzgXVrYirtC6fOe02e6qHy9HRw=
Date: Thu, 22 Nov 2018 15:11:19 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181122041119.GD10448@umbus.fritz.box>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-5-clg@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="LTeJQqWS0MN7I/qa"
Content-Disposition: inline
In-Reply-To: <20181116105729.23240-5-clg@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v5 04/36] ppc/xive: introduce the
 XiveRouter model
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--LTeJQqWS0MN7I/qa
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Nov 16, 2018 at 11:56:57AM +0100, C=E9dric Le Goater wrote:
> The XiveRouter models the second sub-engine of the overall XIVE
> architecture : the Interrupt Virtualization Routing Engine (IVRE).
>=20
> The IVRE handles event notifications of the IVSE through MMIO stores
> and performs the interrupt routing process. For this purpose, it uses
> a set of table stored in system memory, the first of which being the
> Event Assignment Structure (EAS) table.
>=20
> The EAT associates an interrupt source number with an Event Notification
> Descriptor (END) which will be used in a second phase of the routing
> process to identify a Notification Virtual Target.
>=20
> The XiveRouter is an abstract class which needs to be inherited from
> to define a storage for the EAT, and other upcoming tables. The
> 'chip-id' atttribute is not strictly necessary for the sPAPR and
> PowerNV machines but it's a good way to test the routing algorithm.
> Without this atttribute, the XiveRouter could be a simple QOM
> interface.
>=20
> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> ---
>  include/hw/ppc/xive.h      | 32 ++++++++++++++
>  include/hw/ppc/xive_regs.h | 31 ++++++++++++++
>  hw/intc/xive.c             | 86 ++++++++++++++++++++++++++++++++++++++
>  3 files changed, 149 insertions(+)
>  create mode 100644 include/hw/ppc/xive_regs.h
>=20
> diff --git a/include/hw/ppc/xive.h b/include/hw/ppc/xive.h
> index be93fae6317b..5a0696366577 100644
> --- a/include/hw/ppc/xive.h
> +++ b/include/hw/ppc/xive.h
> @@ -11,6 +11,7 @@
>  #define PPC_XIVE_H
> =20
>  #include "hw/sysbus.h"

Again, I don't think making this a SysBusDevice is quite right.
Even more so for the router than the source, because at least for PAPR
it might not have any MMIO presence at all.

> +#include "hw/ppc/xive_regs.h"
> =20
>  /*
>   * XIVE Fabric (Interface between Source and Router)
> @@ -168,4 +169,35 @@ static inline void xive_source_irq_set(XiveSource *x=
src, uint32_t srcno,
>      }
>  }
> =20
> +/*
> + * XIVE Router
> + */
> +
> +typedef struct XiveRouter {
> +    SysBusDevice    parent;
> +
> +    uint32_t        chip_id;

I don't think this belongs in the base class.  The PowerNV specific
variants will need it, but it doesn't make sense for the PAPR version.

> +} XiveRouter;
> +
> +#define TYPE_XIVE_ROUTER "xive-router"
> +#define XIVE_ROUTER(obj)                                \
> +    OBJECT_CHECK(XiveRouter, (obj), TYPE_XIVE_ROUTER)
> +#define XIVE_ROUTER_CLASS(klass)                                        \
> +    OBJECT_CLASS_CHECK(XiveRouterClass, (klass), TYPE_XIVE_ROUTER)
> +#define XIVE_ROUTER_GET_CLASS(obj)                              \
> +    OBJECT_GET_CLASS(XiveRouterClass, (obj), TYPE_XIVE_ROUTER)
> +
> +typedef struct XiveRouterClass {
> +    SysBusDeviceClass parent;
> +
> +    /* XIVE table accessors */
> +    int (*get_eas)(XiveRouter *xrtr, uint32_t lisn, XiveEAS *eas);
> +    int (*set_eas)(XiveRouter *xrtr, uint32_t lisn, XiveEAS *eas);
> +} XiveRouterClass;
> +
> +void xive_eas_pic_print_info(XiveEAS *eas, uint32_t lisn, Monitor *mon);
> +
> +int xive_router_get_eas(XiveRouter *xrtr, uint32_t lisn, XiveEAS *eas);
> +int xive_router_set_eas(XiveRouter *xrtr, uint32_t lisn, XiveEAS *eas);
> +
>  #endif /* PPC_XIVE_H */
> diff --git a/include/hw/ppc/xive_regs.h b/include/hw/ppc/xive_regs.h
> new file mode 100644
> index 000000000000..12499b33614c
> --- /dev/null
> +++ b/include/hw/ppc/xive_regs.h
> @@ -0,0 +1,31 @@
> +/*
> + * QEMU PowerPC XIVE interrupt controller model
> + *
> + * Copyright (c) 2016-2018, IBM Corporation.
> + *
> + * This code is licensed under the GPL version 2 or later. See the
> + * COPYING file in the top-level directory.
> + */
> +
> +#ifndef PPC_XIVE_REGS_H
> +#define PPC_XIVE_REGS_H
> +
> +/* EAS (Event Assignment Structure)
> + *
> + * One per interrupt source. Targets an interrupt to a given Event
> + * Notification Descriptor (END) and provides the corresponding
> + * logical interrupt number (END data)
> + */
> +typedef struct XiveEAS {
> +        /* Use a single 64-bit definition to make it easier to
> +         * perform atomic updates
> +         */
> +        uint64_t        w;
> +#define EAS_VALID       PPC_BIT(0)
> +#define EAS_END_BLOCK   PPC_BITMASK(4, 7)        /* Destination END bloc=
k# */
> +#define EAS_END_INDEX   PPC_BITMASK(8, 31)       /* Destination END inde=
x */
> +#define EAS_MASKED      PPC_BIT(32)              /* Masked */
> +#define EAS_END_DATA    PPC_BITMASK(33, 63)      /* Data written to the =
END */
> +} XiveEAS;
> +
> +#endif /* PPC_XIVE_REGS_H */
> diff --git a/hw/intc/xive.c b/hw/intc/xive.c
> index 014a2e41f71f..c4c90a25758e 100644
> --- a/hw/intc/xive.c
> +++ b/hw/intc/xive.c
> @@ -442,6 +442,91 @@ static const TypeInfo xive_source_info =3D {
>      .class_init    =3D xive_source_class_init,
>  };
> =20
> +/*
> + * XIVE Router (aka. Virtualization Controller or IVRE)
> + */
> +
> +int xive_router_get_eas(XiveRouter *xrtr, uint32_t lisn, XiveEAS *eas)
> +{
> +    XiveRouterClass *xrc =3D XIVE_ROUTER_GET_CLASS(xrtr);
> +
> +    return xrc->get_eas(xrtr, lisn, eas);
> +}
> +
> +int xive_router_set_eas(XiveRouter *xrtr, uint32_t lisn, XiveEAS *eas)
> +{
> +    XiveRouterClass *xrc =3D XIVE_ROUTER_GET_CLASS(xrtr);
> +
> +    return xrc->set_eas(xrtr, lisn, eas);
> +}
> +
> +static void xive_router_notify(XiveFabric *xf, uint32_t lisn)
> +{
> +    XiveRouter *xrtr =3D XIVE_ROUTER(xf);
> +    XiveEAS eas;
> +
> +    /* EAS cache lookup */
> +    if (xive_router_get_eas(xrtr, lisn, &eas)) {
> +        qemu_log_mask(LOG_GUEST_ERROR, "XIVE: Unknown LISN %x\n", lisn);
> +        return;
> +    }

AFAICT a bad LISN here means a qemu error (in the source, probably),
not a user or guest error, so an assert() would be more appropriate.

> +
> +    /* The IVRE has a State Bit Cache for its internal sources which
> +     * is also involed at this point. We skip the SBC lookup because
> +     * the state bits of the sources are modeled internally in QEMU.
> +     */
> +
> +    if (!(eas.w & EAS_VALID)) {
> +        qemu_log_mask(LOG_GUEST_ERROR, "XIVE: invalid LISN %x\n", lisn);
> +        return;
> +    }
> +
> +    if (eas.w & EAS_MASKED) {
> +        /* Notification completed */
> +        return;
> +    }
> +}
> +
> +static Property xive_router_properties[] =3D {
> +    DEFINE_PROP_UINT32("chip-id", XiveRouter, chip_id, 0),
> +    DEFINE_PROP_END_OF_LIST(),
> +};
> +
> +static void xive_router_class_init(ObjectClass *klass, void *data)
> +{
> +    DeviceClass *dc =3D DEVICE_CLASS(klass);
> +    XiveFabricClass *xfc =3D XIVE_FABRIC_CLASS(klass);
> +
> +    dc->desc    =3D "XIVE Router Engine";
> +    dc->props   =3D xive_router_properties;
> +    xfc->notify =3D xive_router_notify;
> +}
> +
> +static const TypeInfo xive_router_info =3D {
> +    .name          =3D TYPE_XIVE_ROUTER,
> +    .parent        =3D TYPE_SYS_BUS_DEVICE,
> +    .abstract      =3D true,
> +    .class_size    =3D sizeof(XiveRouterClass),
> +    .class_init    =3D xive_router_class_init,
> +    .interfaces    =3D (InterfaceInfo[]) {
> +        { TYPE_XIVE_FABRIC },

So as far as I can see so far, the XiveFabric interface will
essentially have to be implemented on the router object, so I'm not
seeing much point to having the interface rather than just a direct
call on the router object.  But I haven't read the whole series yet,
so maybe I'm missing something.


> +        { }
> +    }
> +};
> +
> +void xive_eas_pic_print_info(XiveEAS *eas, uint32_t lisn, Monitor *mon)
> +{
> +    if (!(eas->w & EAS_VALID)) {
> +        return;
> +    }
> +
> +    monitor_printf(mon, "  %08x %s end:%02x/%04x data:%08x\n",
> +                   lisn, eas->w & EAS_MASKED ? "M" : " ",
> +                   (uint8_t)  GETFIELD(EAS_END_BLOCK, eas->w),
> +                   (uint32_t) GETFIELD(EAS_END_INDEX, eas->w),
> +                   (uint32_t) GETFIELD(EAS_END_DATA, eas->w));
> +}
> +
>  /*
>   * XIVE Fabric
>   */
> @@ -455,6 +540,7 @@ static void xive_register_types(void)
>  {
>      type_register_static(&xive_source_info);
>      type_register_static(&xive_fabric_info);
> +    type_register_static(&xive_router_info);
>  }
> =20
>  type_init(xive_register_types)

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--LTeJQqWS0MN7I/qa
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlv2LGQACgkQbDjKyiDZ
s5Kg1w//Xy7xLxAfTWvGBwPY6sMP5wLf2hImgYOeTJmq+oytbZCK4SCYmI7iDGwm
UwDHOs/lKFt01AJzoZ6RS2CYCY3+9xEsZ5R8RGvqiRqB6SSeyR2oDNzoCzc3ZML2
gW7QCdebH6DPT2lAMC4tyw4RB3jpvSQzAO/gOGcwvIwBK6GpeHSvLRJJu+BwxoAz
ATq4Ds2kFdZL6hYoKZEm57CgcKzwk3MTtPjUZC0kw8BkkyN/Ra20N1T4K4zFNtt2
MB2HewRwxhn4qVmVE1RCcixurVZEIfBvtsdgeiV2T6R/VJ5ANFc9P/IrAL5JV1Bi
2+c1o9EzqxQzHBz5h6Ru5nYIZ2nYG8shu3e0+wz03UVg8/GM8m7wAK21Rai7hyqP
qMmyfW/odk0Jtz+0VoPAYAW445O2wqeikvIwGOVj6ELTPoQhozHaGxL0IhKGobzD
e7E4GZZdouL9pSGofzplTb642W7hSBlCT7jkpKv7+i+CfHcesuCfOEqNDv9sjLPx
ijLj8Doh7ZNAkCUxGT1EbYOFEYrCBLxt8E9A04J+L1MqyOub/ihqaRe5eTMNrG9q
enJgVZELd/Kfres5j93r8h3sPc4+wh8ZilpKbGTX+a+7UKTQN598GjX2UdTgAToJ
F30w4Y2/cpNEk8ET7zXKO/Fu41C449AlOYgTTVwyR1U8dOaluuM=
=gWaw
-----END PGP SIGNATURE-----

--LTeJQqWS0MN7I/qa--

