Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 13:13:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4D670580474
	for <like.xu@linux.intel.com>; Wed, 21 Nov 2018 21:13:22 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Nov 2018 21:13:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AtKVEiBbaMtL0FGsakb8tG5z/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpsy7Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM3/mHZhNJzgqJVrx2uuwFwzIzab4+ILPpzfKHTcNwHSWdPQspeSTdBD5iz?=
 =?us-ascii?q?b4cTFecMJ/pUopPgq1YIsBCwBROsBOTqyjJQiHH5x7M60+U8Hgrb3QIgHskBsG?=
 =?us-ascii?q?/TrNXzKawfVv26w7PWzTXCcvxbwjj96InTfRA6pvGMW6h8ftfLyUkoDwPKlUuf?=
 =?us-ascii?q?ppb/Pz+P1+QCrnKX4PB9Ve+2jWMstg9/oj+qxsg2i4nJgJoYylfF9CV92ok6Ps?=
 =?us-ascii?q?a4RFR8Yd6+H5tcrzyVN5FxQsM6WG5npjw1yqcctZ66YScHzoksyR3Ha/GfbYSE?=
 =?us-ascii?q?/hHuWPyMLTtlh39pYqyzihiy/ES61+HxVNG43EhFoyZZj9XBs34A2hjP5sSbT/?=
 =?us-ascii?q?Zx4EKs1SuK2g3W9O1JJ10/m7DBJJ472LEwk4IesUTdES/yn0X7lKuWdkQ/+ui0?=
 =?us-ascii?q?8OTreLrmppmBN4NujQH+KKsultS+AeQ+LAcOQ3CW9fqg2LDg50H1XahGg/4snq?=
 =?us-ascii?q?XHvp3XJd4XqrO7DgNN14Ys8Re/DzOo0NQCmnkHKUpIeAuZgIjsJlHCOe33Aumh?=
 =?us-ascii?q?g1uylDdn3uvJPrr8ApXLMnfMjqzhcbF5605dywo808pT5p1JCrwZJPLzW0nxtM?=
 =?us-ascii?q?HXDxMjMgy0xfrnB8t51o8ERW2PBaqZPbjUsV+P4OIvLO+MZJIPtDb6Mfgl6Obi?=
 =?us-ascii?q?jWUlll8FYampwZwXZWi8HvRnIEWWf2Dgg9gcEWoRugo+TerqiECNUDJJZnayWb?=
 =?us-ascii?q?486S8/CI68EYjDQYWt0/S82jymFMhWenxeEQLLVnPpbJmfHfELbi2UP4lmiDND?=
 =?us-ascii?q?ULGgT4oo01aprBP7zLx8afPZ/zBduZ/92dwm2uvIiBtn8DV1C9iagXiASnwxkm?=
 =?us-ascii?q?4WSjtzxq1mvEFm1n+F1q53heEeEsZcsOhUWAU3PoKJ0uphFtrpURjAdNradFHz?=
 =?us-ascii?q?aVSqGzA6BvY8i/AJalpwAZ32hRTM9ymjBLNTkKaEUs8a6KXZilT4Ocdxg1nH3r?=
 =?us-ascii?q?ImiRFyTsJRNGGOia917A/VQYLTlF2Tmq+wM6UQmifQojTQhVGStV1VBVYjGZ7O?=
 =?us-ascii?q?WmoSMxPb?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAB1OvZbhxHrdtBiFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgTAqgQ+BKYwQX4sigg16lkCBcwINBRgHDYhMIjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2BQIDGAmCWwEBAQECAQECJBkBAQQKK?=
 =?us-ascii?q?QECAgEBAgYBAQoYCR0IAwELBRgxEwUEgk1LAYF5CAEEqS2BbDOCdgEBBYcbBwi?=
 =?us-ascii?q?CbYgAgRwXgX+BEYJdNYgzgiaJE4YIkGkJgiCEXIooCxhfgUeOYpAPiCGBRoINM?=
 =?us-ascii?q?xoIFxmDJwmCEgwXEoFyhlqFUi0xgQQDiyWBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAB1OvZbhxHrdtBiFgQBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgTAqgQ+BKYwQX4sigg16lkCBcwINBRgHDYhMIjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCgsJCCkjDII2BQIDGAmCWwEBAQECAQECJBkBAQQKKQECAgEBAgYBAQo?=
 =?us-ascii?q?YCR0IAwELBRgxEwUEgk1LAYF5CAEEqS2BbDOCdgEBBYcbBwiCbYgAgRwXgX+BE?=
 =?us-ascii?q?YJdNYgzgiaJE4YIkGkJgiCEXIooCxhfgUeOYpAPiCGBRoINMxoIFxmDJwmCEgw?=
 =?us-ascii?q?XEoFyhlqFUi0xgQQDiyWBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,264,1539673200"; 
   d="asc'?scan'208";a="53313047"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 21 Nov 2018 21:13:20 -0800
Received: from localhost ([::1]:44044 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPhIm-0006PX-6n
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 00:13:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47218)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gPhGN-0004n7-0q
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 00:10:52 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gPhGL-0005ap-Oj
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 00:10:51 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:56695)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gPhGK-0005UQ-N9; Thu, 22 Nov 2018 00:10:49 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 430nZq5k1Cz9s0t; Thu, 22 Nov 2018 16:10:43 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1542863443;
	bh=eSCDAmuE4rUzyQBvwofhZzqSt4o4KZXSo315XbAkWWg=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=Zsr19MSlXS5XdC0e7cxkey/XyQiU2e6EEmcDXKO42kR5NhAmXU2VUJZRWmHymdjjc
	N7Qs6MzlOzccKJGgDtRqjmLUlq9sXqIyCDC+4f1SHW5b+eD+h4pRtyFsogsU/XM1WC
	ZlEe2e2Wj6qmNK3yHCDhRlP7P+l0Q7ivJVLllnPc=
Date: Thu, 22 Nov 2018 14:19:34 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181122031934.GC10448@umbus.fritz.box>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-3-clg@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="rQ2U398070+RC21q"
Content-Disposition: inline
In-Reply-To: <20181116105729.23240-3-clg@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v5 02/36] ppc/xive: add support for the LSI
 interrupt sources
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--rQ2U398070+RC21q
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Nov 16, 2018 at 11:56:55AM +0100, C=E9dric Le Goater wrote:
> The 'sent' status of the LSI interrupt source is modeled with the 'P'
> bit of the ESB and the assertion status of the source is maintained in
> an array under the main sPAPRXive object. The type of the source is
> stored in the same array for practical reasons.
>=20
> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>

Looks good except for some minor details.

> ---
>  include/hw/ppc/xive.h | 20 ++++++++++++-
>  hw/intc/xive.c        | 68 +++++++++++++++++++++++++++++++++++++++----
>  2 files changed, 81 insertions(+), 7 deletions(-)
>=20
> diff --git a/include/hw/ppc/xive.h b/include/hw/ppc/xive.h
> index 5fec4b08705d..e118acd59f1e 100644
> --- a/include/hw/ppc/xive.h
> +++ b/include/hw/ppc/xive.h
> @@ -32,8 +32,10 @@ typedef struct XiveSource {
>      /* IRQs */
>      uint32_t        nr_irqs;
>      qemu_irq        *qirqs;
> +    unsigned long   *lsi_map;
> +    int32_t         lsi_map_size; /* for VMSTATE_BITMAP */

At some point it's possible we'll want XiveSource subclasses that just
know which irqs are LSI and which aren't without an explicit map.  But
this detail isn't exposed in the migration stream or the user
interface, so we can tweak it later as ncessary.

> -    /* PQ bits */
> +    /* PQ bits and LSI assertion bit */
>      uint8_t         *status;
> =20
>      /* ESB memory region */
> @@ -89,6 +91,7 @@ static inline hwaddr xive_source_esb_mgmt(XiveSource *x=
src, int srcno)
>   * When doing an EOI, the Q bit will indicate if the interrupt
>   * needs to be re-triggered.
>   */
> +#define XIVE_STATUS_ASSERTED  0x4  /* Extra bit for LSI */
>  #define XIVE_ESB_VAL_P        0x2
>  #define XIVE_ESB_VAL_Q        0x1
> =20
> @@ -127,4 +130,19 @@ static inline qemu_irq xive_source_qirq(XiveSource *=
xsrc, uint32_t srcno)
>      return xsrc->qirqs[srcno];
>  }
> =20
> +static inline bool xive_source_irq_is_lsi(XiveSource *xsrc, uint32_t src=
no)
> +{
> +    assert(srcno < xsrc->nr_irqs);
> +    return test_bit(srcno, xsrc->lsi_map);
> +}
> +
> +static inline void xive_source_irq_set(XiveSource *xsrc, uint32_t srcno,
> +                                       bool lsi)

The function name isn't obvious about this being controlling LSI
configuration. '..._irq_set_lsi' maybe?

> +{
> +    assert(srcno < xsrc->nr_irqs);
> +    if (lsi) {
> +        bitmap_set(xsrc->lsi_map, srcno, 1);
> +    }
> +}
> +
>  #endif /* PPC_XIVE_H */
> diff --git a/hw/intc/xive.c b/hw/intc/xive.c
> index f7621f84828c..ac4605fee8b7 100644
> --- a/hw/intc/xive.c
> +++ b/hw/intc/xive.c
> @@ -88,14 +88,40 @@ uint8_t xive_source_esb_set(XiveSource *xsrc, uint32_=
t srcno, uint8_t pq)
>      return xive_esb_set(&xsrc->status[srcno], pq);
>  }
> =20
> +/*
> + * Returns whether the event notification should be forwarded.
> + */
> +static bool xive_source_lsi_trigger(XiveSource *xsrc, uint32_t
> srcno)

What exactly "trigger" means isn't entirely obvious for an LSI.  Might
be clearer to have "lsi_assert" and "lsi_deassert" helpers instead.

> +{
> +    uint8_t old_pq =3D xive_source_esb_get(xsrc, srcno);
> +
> +    switch (old_pq) {
> +    case XIVE_ESB_RESET:
> +        xive_source_esb_set(xsrc, srcno, XIVE_ESB_PENDING);
> +        return true;
> +    default:
> +        return false;
> +    }
> +}
> +
>  /*
>   * Returns whether the event notification should be forwarded.
>   */
>  static bool xive_source_esb_trigger(XiveSource *xsrc, uint32_t srcno)
>  {
> +    bool ret;
> +
>      assert(srcno < xsrc->nr_irqs);
> =20
> -    return xive_esb_trigger(&xsrc->status[srcno]);
> +    ret =3D xive_esb_trigger(&xsrc->status[srcno]);
> +
> +    if (xive_source_irq_is_lsi(xsrc, srcno) &&
> +        xive_source_esb_get(xsrc, srcno) =3D=3D XIVE_ESB_QUEUED) {
> +        qemu_log_mask(LOG_GUEST_ERROR,
> +                      "XIVE: queued an event on LSI IRQ %d\n", srcno);
> +    }
> +
> +    return ret;
>  }
> =20
>  /*
> @@ -103,9 +129,22 @@ static bool xive_source_esb_trigger(XiveSource *xsrc=
, uint32_t srcno)
>   */
>  static bool xive_source_esb_eoi(XiveSource *xsrc, uint32_t srcno)
>  {
> +    bool ret;
> +
>      assert(srcno < xsrc->nr_irqs);
> =20
> -    return xive_esb_eoi(&xsrc->status[srcno]);
> +    ret =3D xive_esb_eoi(&xsrc->status[srcno]);
> +
> +    /* LSI sources do not set the Q bit but they can still be
> +     * asserted, in which case we should forward a new event
> +     * notification
> +     */
> +    if (xive_source_irq_is_lsi(xsrc, srcno) &&
> +        xsrc->status[srcno] & XIVE_STATUS_ASSERTED) {
> +        ret =3D xive_source_lsi_trigger(xsrc, srcno);
> +    }
> +
> +    return ret;
>  }
> =20
>  /*
> @@ -268,8 +307,17 @@ static void xive_source_set_irq(void *opaque, int sr=
cno, int val)
>      XiveSource *xsrc =3D XIVE_SOURCE(opaque);
>      bool notify =3D false;
> =20
> -    if (val) {
> -        notify =3D xive_source_esb_trigger(xsrc, srcno);
> +    if (xive_source_irq_is_lsi(xsrc, srcno)) {
> +        if (val) {
> +            xsrc->status[srcno] |=3D XIVE_STATUS_ASSERTED;
> +            notify =3D xive_source_lsi_trigger(xsrc, srcno);
> +        } else {
> +            xsrc->status[srcno] &=3D ~XIVE_STATUS_ASSERTED;
> +        }
> +    } else {
> +        if (val) {
> +            notify =3D xive_source_esb_trigger(xsrc, srcno);
> +        }
>      }
> =20
>      /* Forward the source event notification for routing */
> @@ -289,9 +337,11 @@ void xive_source_pic_print_info(XiveSource *xsrc, ui=
nt32_t offset, Monitor *mon)
>              continue;
>          }
> =20
> -        monitor_printf(mon, "  %08x %c%c\n", i + offset,
> +        monitor_printf(mon, "  %08x %s %c%c%c\n", i + offset,
> +                       xive_source_irq_is_lsi(xsrc, i) ? "LSI" : "MSI",
>                         pq & XIVE_ESB_VAL_P ? 'P' : '-',
> -                       pq & XIVE_ESB_VAL_Q ? 'Q' : '-');
> +                       pq & XIVE_ESB_VAL_Q ? 'Q' : '-',
> +                       xsrc->status[i] & XIVE_STATUS_ASSERTED ? 'A' : ' =
');
>      }
>  }
> =20
> @@ -299,6 +349,8 @@ static void xive_source_reset(DeviceState *dev)
>  {
>      XiveSource *xsrc =3D XIVE_SOURCE(dev);
> =20
> +    /* Do not clear the LSI bitmap */
> +
>      /* PQs are initialized to 0b01 which corresponds to "ints off" */
>      memset(xsrc->status, 0x1, xsrc->nr_irqs);
>  }
> @@ -325,6 +377,9 @@ static void xive_source_realize(DeviceState *dev, Err=
or **errp)
> =20
>      xsrc->status =3D g_malloc0(xsrc->nr_irqs);
> =20
> +    xsrc->lsi_map =3D bitmap_new(xsrc->nr_irqs);
> +    xsrc->lsi_map_size =3D xsrc->nr_irqs;
> +
>      memory_region_init_io(&xsrc->esb_mmio, OBJECT(xsrc),
>                            &xive_source_esb_ops, xsrc, "xive.esb",
>                            (1ull << xsrc->esb_shift) * xsrc->nr_irqs);
> @@ -338,6 +393,7 @@ static const VMStateDescription vmstate_xive_source =
=3D {
>      .fields =3D (VMStateField[]) {
>          VMSTATE_UINT32_EQUAL(nr_irqs, XiveSource, NULL),
>          VMSTATE_VBUFFER_UINT32(status, XiveSource, 1, NULL, nr_irqs),
> +        VMSTATE_BITMAP(lsi_map, XiveSource, 1, lsi_map_size),

This shouldn't be here.  The lsi_map is all set up at machine
configuration time and then static, so it doesn't need to be migrated.

>          VMSTATE_END_OF_LIST()
>      },
>  };

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--rQ2U398070+RC21q
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlv2IEQACgkQbDjKyiDZ
s5IM1A/9FhRYgyx2ViSubneiJmlMhJN9xAtS8wi21zwK+nBAR/ernVfoLwyAflHu
6wF5g1kNOrKRA3E+LTNog3Vq14xsRYHhtUyso1Pgf/EpMepPE+/SCrxBBGwc8Ftf
aX5fwVPv3/ih5PaSVwU66+WD1HYlP7ZWh4Cl/JMt1hdzbKUcIE2t6Zj1aACQ+pz2
1XQuWsrvttPzxQEIbxoOAl/qqs/eBy10BE6is/zv4L+DpT2Re1R3ODZxl3wAoOAn
Zdc2HaV/GXWBVM0zxjai5K0BpJdJgl4xNUdg8y/7S6iZLMfqDRWUDf25RukjwZHB
WIrz2Ahu6SqNOaS/YLzFulYyeURVb+aILyBvnE/tg5pnkDsN+ioQ7wnnkOedXmcf
XvBMUAc5k1rgizxFk0NDFb89vfMDsb0twN30ebXF74jPGKZEoyJWd1pRh5BBUAzz
tJTSg8LALvKLk05AJFU7Q/POtO20RlnLHMXIve4xs6tOopR+zgqbjU5TWEt1Lehk
Vr9AK83ySyys5wzreBlSkBNZE30mmG2hunu6tcO9lbaAgOnO0iPhmLq1S83YbFIL
sxB5DQYZf0aQ0n+1xDuM95m7knLTplPiF/DkyBbdANLaGYvoIqTZ5+Ge+KuoXxFN
Geyh2IRfrDspgFfzwlQWz5dec5oWnPzA3EcbTAGmsJ3roKQRePI=
=yc4n
-----END PGP SIGNATURE-----

--rQ2U398070+RC21q--

