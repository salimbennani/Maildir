Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 15:31:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 21E2758040F
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 22:27:54 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 22:27:53 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AuDcZIBROx0ttDLJ+XK18plr4A9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBWAt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/ZisJ+kqFVoByuqBNj3oHbYo+aOudmfq7ff90XSndNU8hNWyNfGYOx?=
 =?us-ascii?q?dIQPA/YbMOtCs4XwvUYCoB2jDgesHuPvzTpIi2f406IgzeQhEBzJ1xEhEdIPq3?=
 =?us-ascii?q?vUt9L1NKEPWu2y0abH1yvDb/JL1jrm54jIcwsuoeqLXbJ2a8be1FMvFwTdjlqL?=
 =?us-ascii?q?t4PqJSmV2v4Ms2eG9eZvT/+vhnchpgpsrDavwcIshZPIhoIT0l3E8iR4wIIvKt?=
 =?us-ascii?q?KjU053e9mkEIFfty2CKoR2WMQiQ3lztykk0LIGo4S3fCkXx5kh2hXRaOSHfpCW?=
 =?us-ascii?q?7h7/V+udOyp0iG9mdb6lmRq//0itxvfhWsS2yFpGsCVInsXRun0I2RHe7tSLRu?=
 =?us-ascii?q?d480u/3DuDygXe5+RaLU0yiKHVMYQuwqQqmZoWqUnDHjH5mEHxjKKOckUk+/Oo?=
 =?us-ascii?q?6/j8Yrn8qZ+cMZJ0hhv5MqQ0lcyzGeU4Mg4QUGiH4emwyqHv8E7jTLlXk/E7kb?=
 =?us-ascii?q?PVvI7UKMkbvKK1Hg1Y3p4m6xmlDjem1NoYnWMALFJAYB+HlpbmO1TTIPzhEPiw?=
 =?us-ascii?q?nUqsnylvx/zfJbLhBYjNLn7fn7j/ZrZx7EpcyAswzd9B/Z5VBawBLer3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPfqlmI5uUpI+mDYo8VpSzxK/8/5/7h?=
 =?us-ascii?q?lXM5g0MSfbG13ZsLb3C1BvBmI0SaYXXymNsAHnoKsxE6TOzrjl2CTDFSa2yzX6?=
 =?us-ascii?q?I6+jE0FoamAZ3fSYCqhbzSlBq9BYBcM2BaFkiXQzCvc4SfR+xKbiWULcl81Dse?=
 =?us-ascii?q?Wv+kQo4l0Bio8wji17tgKPGT4yAdqNfv2cZ4477ukwov/2lxBsWZz2bfVmxxgy?=
 =?us-ascii?q?YESiE72OVlrFVgx0yf+a5/hfNeCJpU/fweSRowN5PX07lnDcvvUBnKZNaDRQWa?=
 =?us-ascii?q?RYCNgD0rT9l559JGTEF0B9i4xkTI2yWCALYSm/qMHpNioYzG2H2kC89jynqO+6?=
 =?us-ascii?q?grlF4gCp9DPHOnioZw9gLIAIiPn1+ej6ynfL5a3SKL/XrVnjnGh11RTAMlCfaN?=
 =?us-ascii?q?ZnsYfEaD9dk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAB2nfdbhxHrdtBiFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBLoEjBQEBAQELAYEwKoEPgSmMEV+LH4INepZBgXMCDQUYBw2IUiI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNgUCAxgJglwBAgMBAiQZAQEECikBA?=
 =?us-ascii?q?gMBAgYBAQoYCR0IAwELBRgxEwUEgk1LAYIBAQSmPIFsM4J2AQEFhwwHCIJtiAC?=
 =?us-ascii?q?BHBeBf4ERgl01ilmJEw6FepBpCYIghFyKKAsYX4FHjmKQD4ghgUaCDTMaCBcZg?=
 =?us-ascii?q?ycJghIMFxKBcoZahVItMYEEA4orgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAB2nfdbhxHrdtBiFgQBAQEBAQIBAQEBBwIBAQEBLoE?=
 =?us-ascii?q?jBQEBAQELAYEwKoEPgSmMEV+LH4INepZBgXMCDQUYBw2IUiI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgpIwyCNgUCAxgJglwBAgMBAiQZAQEECikBAgMBAgYBAQoYCR0?=
 =?us-ascii?q?IAwELBRgxEwUEgk1LAYIBAQSmPIFsM4J2AQEFhwwHCIJtiACBHBeBf4ERgl01i?=
 =?us-ascii?q?lmJEw6FepBpCYIghFyKKAsYX4FHjmKQD4ghgUaCDTMaCBcZgycJghIMFxKBcoZ?=
 =?us-ascii?q?ahVItMYEEA4orgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="asc'?scan'208";a="54025444"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 22:27:53 -0800
Received: from localhost ([::1]:50600 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gQ4wS-000781-9F
	for like.xu@linux.intel.com; Fri, 23 Nov 2018 01:27:52 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52418)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gQ4rX-0003BZ-U7
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 01:22:49 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gQ4rW-0002ky-GU
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 01:22:47 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:36169)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gQ4rS-0002RO-J7; Fri, 23 Nov 2018 01:22:44 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 431R7D2Twqz9s8J; Fri, 23 Nov 2018 17:22:32 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1542954152;
	bh=MsF+iEBGmsr3uyB3eWAJm/IU2qqEp2oW4bFAlqi3IYM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=U66/IVuyqeLVHXZrkjMrPXUmJf4lPwxOx1kWSJ76+UzwhxZ46/L1eJkN0r/oCQnU1
	ZvHfKeXdjgrdXOIxX1EVVLMfr1TFFLXxdf0ijRuvPdKtVDY0leTy/1qIbV0dmmKGL6
	7AV1p5CGnZlyEewBm/lKg/qgY31r99hWjzJlrLx4=
Date: Fri, 23 Nov 2018 12:08:52 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181123010852.GT10448@umbus.fritz.box>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-3-clg@kaod.org>
	<20181122031934.GC10448@umbus.fritz.box>
	<75cdc1f3-f337-3c37-b234-d96222a370d2@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="o6aug3O60clXg2rj"
Content-Disposition: inline
In-Reply-To: <75cdc1f3-f337-3c37-b234-d96222a370d2@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [PATCH v5 02/36] ppc/xive: add support for the LSI
 interrupt sources
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--o6aug3O60clXg2rj
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Thu, Nov 22, 2018 at 08:39:41AM +0100, C=E9dric Le Goater wrote:
> On 11/22/18 4:19 AM, David Gibson wrote:
> > On Fri, Nov 16, 2018 at 11:56:55AM +0100, C=E9dric Le Goater wrote:
> >> The 'sent' status of the LSI interrupt source is modeled with the 'P'
> >> bit of the ESB and the assertion status of the source is maintained in
> >> an array under the main sPAPRXive object. The type of the source is
> >> stored in the same array for practical reasons.
> >>
> >> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> >=20
> > Looks good except for some minor details.
> >=20
> >> ---
> >>  include/hw/ppc/xive.h | 20 ++++++++++++-
> >>  hw/intc/xive.c        | 68 +++++++++++++++++++++++++++++++++++++++----
> >>  2 files changed, 81 insertions(+), 7 deletions(-)
> >>
> >> diff --git a/include/hw/ppc/xive.h b/include/hw/ppc/xive.h
> >> index 5fec4b08705d..e118acd59f1e 100644
> >> --- a/include/hw/ppc/xive.h
> >> +++ b/include/hw/ppc/xive.h
> >> @@ -32,8 +32,10 @@ typedef struct XiveSource {
> >>      /* IRQs */
> >>      uint32_t        nr_irqs;
> >>      qemu_irq        *qirqs;
> >> +    unsigned long   *lsi_map;
> >> +    int32_t         lsi_map_size; /* for VMSTATE_BITMAP */
> >=20
> > At some point it's possible we'll want XiveSource subclasses that just
> > know which irqs are LSI and which aren't without an explicit map.  But
> > this detail isn't exposed in the migration stream or the user
> > interface, so we can tweak it later as ncessary.
> >=20
> >> -    /* PQ bits */
> >> +    /* PQ bits and LSI assertion bit */
> >>      uint8_t         *status;
> >> =20
> >>      /* ESB memory region */
> >> @@ -89,6 +91,7 @@ static inline hwaddr xive_source_esb_mgmt(XiveSource=
 *xsrc, int srcno)
> >>   * When doing an EOI, the Q bit will indicate if the interrupt
> >>   * needs to be re-triggered.
> >>   */
> >> +#define XIVE_STATUS_ASSERTED  0x4  /* Extra bit for LSI */
> >>  #define XIVE_ESB_VAL_P        0x2
> >>  #define XIVE_ESB_VAL_Q        0x1
> >> =20
> >> @@ -127,4 +130,19 @@ static inline qemu_irq xive_source_qirq(XiveSourc=
e *xsrc, uint32_t srcno)
> >>      return xsrc->qirqs[srcno];
> >>  }
> >> =20
> >> +static inline bool xive_source_irq_is_lsi(XiveSource *xsrc, uint32_t =
srcno)
> >> +{
> >> +    assert(srcno < xsrc->nr_irqs);
> >> +    return test_bit(srcno, xsrc->lsi_map);
> >> +}
> >> +
> >> +static inline void xive_source_irq_set(XiveSource *xsrc, uint32_t src=
no,
> >> +                                       bool lsi)
> >=20
> > The function name isn't obvious about this being controlling LSI
> > configuration. '..._irq_set_lsi' maybe?
>=20
> yes.
>=20
>=20
> >> +{
> >> +    assert(srcno < xsrc->nr_irqs);
> >> +    if (lsi) {
> >> +        bitmap_set(xsrc->lsi_map, srcno, 1);
> >> +    }
> >> +}
> >> +
> >>  #endif /* PPC_XIVE_H */
> >> diff --git a/hw/intc/xive.c b/hw/intc/xive.c
> >> index f7621f84828c..ac4605fee8b7 100644
> >> --- a/hw/intc/xive.c
> >> +++ b/hw/intc/xive.c
> >> @@ -88,14 +88,40 @@ uint8_t xive_source_esb_set(XiveSource *xsrc, uint=
32_t srcno, uint8_t pq)
> >>      return xive_esb_set(&xsrc->status[srcno], pq);
> >>  }
> >> =20
> >> +/*
> >> + * Returns whether the event notification should be forwarded.
> >> + */
> >> +static bool xive_source_lsi_trigger(XiveSource *xsrc, uint32_t
> >> srcno)
> >=20
> > What exactly "trigger" means isn't entirely obvious for an LSI.  Might
> > be clearer to have "lsi_assert" and "lsi_deassert" helpers instead.
>=20
> This is called only when the interrupt is asserted. So it is a=20
> simplified LSI trigger depending only on the 'P' bit.

Yes, I see that.  But the result is that while the MSI logic is
encapsulated in the MSI trigger function, this leaves the LSI logic
split across the trigger function and set_irq() itself.  I think it
would be better to have assert and deassert helpers instead, which
handle both the trigger/notification and also the updating of the
ASSERTED bit.

> >=20
> >> +{
> >> +    uint8_t old_pq =3D xive_source_esb_get(xsrc, srcno);
> >> +
> >> +    switch (old_pq) {
> >> +    case XIVE_ESB_RESET:
> >> +        xive_source_esb_set(xsrc, srcno, XIVE_ESB_PENDING);
> >> +        return true;
> >> +    default:
> >> +        return false;
> >> +    }
> >> +}
> >> +
> >>  /*
> >>   * Returns whether the event notification should be forwarded.
> >>   */
> >>  static bool xive_source_esb_trigger(XiveSource *xsrc, uint32_t srcno)
> >>  {
> >> +    bool ret;
> >> +
> >>      assert(srcno < xsrc->nr_irqs);
> >> =20
> >> -    return xive_esb_trigger(&xsrc->status[srcno]);
> >> +    ret =3D xive_esb_trigger(&xsrc->status[srcno]);
> >> +
> >> +    if (xive_source_irq_is_lsi(xsrc, srcno) &&
> >> +        xive_source_esb_get(xsrc, srcno) =3D=3D XIVE_ESB_QUEUED) {
> >> +        qemu_log_mask(LOG_GUEST_ERROR,
> >> +                      "XIVE: queued an event on LSI IRQ %d\n", srcno);
> >> +    }
> >> +
> >> +    return ret;
> >>  }
> >> =20
> >>  /*
> >> @@ -103,9 +129,22 @@ static bool xive_source_esb_trigger(XiveSource *x=
src, uint32_t srcno)
> >>   */
> >>  static bool xive_source_esb_eoi(XiveSource *xsrc, uint32_t srcno)
> >>  {
> >> +    bool ret;
> >> +
> >>      assert(srcno < xsrc->nr_irqs);
> >> =20
> >> -    return xive_esb_eoi(&xsrc->status[srcno]);
> >> +    ret =3D xive_esb_eoi(&xsrc->status[srcno]);
> >> +
> >> +    /* LSI sources do not set the Q bit but they can still be
> >> +     * asserted, in which case we should forward a new event
> >> +     * notification
> >> +     */
> >> +    if (xive_source_irq_is_lsi(xsrc, srcno) &&
> >> +        xsrc->status[srcno] & XIVE_STATUS_ASSERTED) {
> >> +        ret =3D xive_source_lsi_trigger(xsrc, srcno);
> >> +    }
> >> +
> >> +    return ret;
> >>  }
> >> =20
> >>  /*
> >> @@ -268,8 +307,17 @@ static void xive_source_set_irq(void *opaque, int=
 srcno, int val)
> >>      XiveSource *xsrc =3D XIVE_SOURCE(opaque);
> >>      bool notify =3D false;
> >> =20
> >> -    if (val) {
> >> -        notify =3D xive_source_esb_trigger(xsrc, srcno);
> >> +    if (xive_source_irq_is_lsi(xsrc, srcno)) {
> >> +        if (val) {
> >> +            xsrc->status[srcno] |=3D XIVE_STATUS_ASSERTED;
> >> +            notify =3D xive_source_lsi_trigger(xsrc, srcno);
> >> +        } else {
> >> +            xsrc->status[srcno] &=3D ~XIVE_STATUS_ASSERTED;
> >> +        }
> >> +    } else {
> >> +        if (val) {
> >> +            notify =3D xive_source_esb_trigger(xsrc, srcno);
> >> +        }
> >>      }
> >> =20
> >>      /* Forward the source event notification for routing */
> >> @@ -289,9 +337,11 @@ void xive_source_pic_print_info(XiveSource *xsrc,=
 uint32_t offset, Monitor *mon)
> >>              continue;
> >>          }
> >> =20
> >> -        monitor_printf(mon, "  %08x %c%c\n", i + offset,
> >> +        monitor_printf(mon, "  %08x %s %c%c%c\n", i + offset,
> >> +                       xive_source_irq_is_lsi(xsrc, i) ? "LSI" : "MSI=
",
> >>                         pq & XIVE_ESB_VAL_P ? 'P' : '-',
> >> -                       pq & XIVE_ESB_VAL_Q ? 'Q' : '-');
> >> +                       pq & XIVE_ESB_VAL_Q ? 'Q' : '-',
> >> +                       xsrc->status[i] & XIVE_STATUS_ASSERTED ? 'A' :=
 ' ');
> >>      }
> >>  }
> >> =20
> >> @@ -299,6 +349,8 @@ static void xive_source_reset(DeviceState *dev)
> >>  {
> >>      XiveSource *xsrc =3D XIVE_SOURCE(dev);
> >> =20
> >> +    /* Do not clear the LSI bitmap */
> >> +
> >>      /* PQs are initialized to 0b01 which corresponds to "ints off" */
> >>      memset(xsrc->status, 0x1, xsrc->nr_irqs);
> >>  }
> >> @@ -325,6 +377,9 @@ static void xive_source_realize(DeviceState *dev, =
Error **errp)
> >> =20
> >>      xsrc->status =3D g_malloc0(xsrc->nr_irqs);
> >> =20
> >> +    xsrc->lsi_map =3D bitmap_new(xsrc->nr_irqs);
> >> +    xsrc->lsi_map_size =3D xsrc->nr_irqs;
> >> +
> >>      memory_region_init_io(&xsrc->esb_mmio, OBJECT(xsrc),
> >>                            &xive_source_esb_ops, xsrc, "xive.esb",
> >>                            (1ull << xsrc->esb_shift) * xsrc->nr_irqs);
> >> @@ -338,6 +393,7 @@ static const VMStateDescription vmstate_xive_sourc=
e =3D {
> >>      .fields =3D (VMStateField[]) {
> >>          VMSTATE_UINT32_EQUAL(nr_irqs, XiveSource, NULL),
> >>          VMSTATE_VBUFFER_UINT32(status, XiveSource, 1, NULL, nr_irqs),
> >> +        VMSTATE_BITMAP(lsi_map, XiveSource, 1, lsi_map_size),
> >=20
> > This shouldn't be here.  The lsi_map is all set up at machine
> > configuration time and then static, so it doesn't need to be migrated.
>=20
> yes. of course ... I will get rid of it.
>=20
> Thanks,
>=20
> C.=20
> >=20
> >>          VMSTATE_END_OF_LIST()
> >>      },
> >>  };
> >=20
>=20

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--o6aug3O60clXg2rj
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlv3UyMACgkQbDjKyiDZ
s5LczRAAutXh4OhaOl0ErIugBSZEQeS/ZiE0L8EH1x0nwSiP9wmjdwhiwDIS3b7C
I6hh1rGAtor34LIbCagl5lZGX1ii3AyKOpiYv2xw7GtnsqBlyNzuN0PO5VeNzoVr
XwNyRkwG4Yogt7/gj71d0mzEtXL3TR0mmcQ7pO9f6WoFbYeDnv8KpKgCipY/1mrR
WMbufp0LglMLJc8ry2pPA6DacMsg7fEHZBVyIxOfmuMQHoBkWNB+L8aF1JaPfESW
m0KZLQ517c8J3JLAUkhlGv4ydZZkMTw99xPy9MrdMHD0vMzOz4/8zB5BqBc9RH4H
ALuHCOKpj62rUMJuFiXuUOr580vGMQRa85Rx5Macn/j60ER+Tm6avv81/l+kpn1n
m0vOEz1Nf1YgOvS9K2KYqALOnWe1EDMA8f7VKAcuo0piGGDje6N69Khwmd8cH7Rm
HJjSBtUfURXEiZazC3Yiesk4Y07bl5w3I7ynCGWUTc+uoIhmY4d7oWXWt4Wmgm5X
3mgGblrvO2+fWS9kuXSxXWb8n9Qpukw/w+hDZCkJilHsnrWwkMrge7dNjQqs1PhG
xqexP6Z9gbkjS/rlGHOLgg3k0VOv8amPyqdLfxzhcJO+T1Shj42Aw0SbF03of1Ke
EyK/IrB/SULCu5CIYxXmkqVuurQohtujAqaH/lTYQn3Bi42q1hA=
=tKer
-----END PGP SIGNATURE-----

--o6aug3O60clXg2rj--

