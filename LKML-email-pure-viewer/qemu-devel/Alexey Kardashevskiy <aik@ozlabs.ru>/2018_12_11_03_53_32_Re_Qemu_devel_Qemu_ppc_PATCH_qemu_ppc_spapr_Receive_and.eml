Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 12:56:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8DFF858028E
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 19:54:23 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 19:54:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AzAtLCBVJ6j5ZWIBXperOmxBfNybV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSDuqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp2y?=
 =?us-ascii?q?b4UPAeQCM+hXoYbyqFkSohWxGAesHOHixD1Hi3Pr06A2z/ouERrd0Qw8Hd8Dqm?=
 =?us-ascii?q?jYoMn7OaoQV+2+0anGzS/Eb/NTwTrw9IzIfQ4uoP6SXbN7bM/fxlM1FwzYlFqQ?=
 =?us-ascii?q?sozlMC2L1uQWsGib7uphXv+ohmE9qgFxoSOixsAti4nNnI0a0UvE+T9jwIYoPN?=
 =?us-ascii?q?C1TlNwb9CjEJtVrS6aNo12T9stQ2FppCY6yqAGtoWhcCcWz5QnwhjSYOGEfYiQ?=
 =?us-ascii?q?+h/vSvqdLDRiiH54Zb6yhAy+/Vaux+D8TMW4zVRHojJYntXSqHwBzRje58ydRv?=
 =?us-ascii?q?Z+4EutwyuD2xzV5+pZO047j7DbJIQkwrMolpocr0DDHijulUXyja+WbVkk+vOy?=
 =?us-ascii?q?5+ToZLXmu4WQN4huigHxKqgum8q/DvokMgUWQWSX5eex2Kf+8UHkQ7hGlOM6n6?=
 =?us-ascii?q?fZvZzAOMgWpLa1AwpP3YYi7xa/AS2m0NMdnXQfNVJKZheHj5XwN17TPv/4E+mw?=
 =?us-ascii?q?g1C1nDhwwPDGI7vhDYnTIXjYl7vhebd9601CxwYpwtFf+opZCrUAIPL1R0/wu8?=
 =?us-ascii?q?bUDh4/Mwyo3ennDM9x2Z8ZWWKKGaKZNqTSsVmH5uIpPumAfogVuCzyK/Q9/f7h?=
 =?us-ascii?q?kWc5mUMBfamuxZYXbHG4Hvd4LEmDbnvsn8wMEWMLvgo4Uezrh0eOUT9VZ3auQa?=
 =?us-ascii?q?084is3B56hDYfGFciQhqec1nK7AoFOfTIBTVSNCmvzMYODXfgKdWSVOMAmlzUF?=
 =?us-ascii?q?Ub2oTcgmzQ2vswnhjKNqK/eR9iAGuJaw6d5u+ueGkBgz8SBzXd2Q1nzIQ2xqk2?=
 =?us-ascii?q?dNXTIvwa1kvWR7zVGM17U+hOZXQsdO7fFEWRtvKJjH0uZhAMrzUA+SQtDcZ0yr?=
 =?us-ascii?q?TZ2FHCsjBoY+2dgTbG5+EtKuyBfZ0HzuS5Mcib2HTLM1+Lnb2TClK89jynru26?=
 =?us-ascii?q?grlF4gBMdVMnWsi6dlsQnfQYfUxRa3jaGvII0Y0T7A5S+gxHCCtVpYXRBrUqTU?=
 =?us-ascii?q?FSQWZ0j+qsb970nZCaWzX+d0ejBdwNKPf/MZIubiik9LEbK6YIzT?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AKAAAuNA9cmBHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwJYEUgSmDe4gZX4sxUgaBCC2JII4xFIEQA0wSAQEYCwm?=
 =?us-ascii?q?HbSI0CQ0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxoBBoJbAQEBAQIBA?=
 =?us-ascii?q?QIgBBkBAQQKKQECAgEBAgYBAQoOBAYCAiIEAgIDATABBQEODgYBDAYCAQEBgxw?=
 =?us-ascii?q?BgXQFBwEBBAqaLDyKHXB8M4J2AQEFgTABhXcDBRJ5iXqBHBcdW4EHgREngW1+g?=
 =?us-ascii?q?x4CgUqDG4JXkAWQcgmHCIpBBhiJZhBbg3SCeIMChiCEc4p0AgQCBAUCBQ8hgSW?=
 =?us-ascii?q?CDn8GgyeCGwwXEoM4imdeAYEGiGiBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AKAAAuNA9cmBHrdtBkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwJYEUgSmDe4gZX4sxUgaBCC2JII4xFIEQA0wSAQEYCwmHbSI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxoBBoJbAQEBAQIBAQIgBBkBAQQKKQE?=
 =?us-ascii?q?CAgEBAgYBAQoOBAYCAiIEAgIDATABBQEODgYBDAYCAQEBgxwBgXQFBwEBBAqaL?=
 =?us-ascii?q?DyKHXB8M4J2AQEFgTABhXcDBRJ5iXqBHBcdW4EHgREngW1+gx4CgUqDG4JXkAW?=
 =?us-ascii?q?QcgmHCIpBBhiJZhBbg3SCeIMChiCEc4p0AgQCBAUCBQ8hgSWCDn8GgyeCGwwXE?=
 =?us-ascii?q?oM4imdeAYEGiGiBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="55361646"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 19:54:22 -0800
Received: from localhost ([::1]:35858 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWZ7l-0003Ha-Mo
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 22:54:21 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47864)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <aik@ozlabs.ru>) id 1gWZ79-0002z9-Lb
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 22:53:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <aik@ozlabs.ru>) id 1gWZ76-0000ev-Ek
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 22:53:43 -0500
Received: from mail-pl1-x643.google.com ([2607:f8b0:4864:20::643]:34741)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <aik@ozlabs.ru>) id 1gWZ76-0000cu-3n
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 22:53:40 -0500
Received: by mail-pl1-x643.google.com with SMTP id w4so6286447plz.1
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 19:53:37 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=ozlabs-ru.20150623.gappssmtp.com; s=20150623;
	h=subject:to:cc:references:from:openpgp:autocrypt:message-id:date
	:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=7pv+4Y+MQzQndtlY8wvgvPsQy1uynlkuwGBBixYStlU=;
	b=b09Ud/ooGIqEZvJG1A5iwz9aMMMgj3wPP4dObAFhHzmlDdl6We2QE/X8hKQ/3t/rWv
	C3PHKX2UaEZ3MV3gdU3b9yPXAl7lcCOP9ToeLcN+6WARBeXiE/JbRM5iz0oQwxBMFjzP
	ABC8gFNprFoN7ckTTEga3PctgCgslbLIFzRJ8vpcoT5YrhlBHpxuihESfA8YmP+UcTnG
	n17bzVlz6XhrWWFSjHiAtCnch2uEhOXeUwkAXh0AXw6uYy3JygjZ+O2NYuv8AkQkgQP8
	7PwViCSuWJgQDYA6K2qkxEVx1On7ova77Md9kv+r1dYnMcFEek2y2sP4xSB5eLXaPThg
	k5fA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:openpgp:autocrypt
	:message-id:date:user-agent:mime-version:in-reply-to
	:content-language:content-transfer-encoding;
	bh=7pv+4Y+MQzQndtlY8wvgvPsQy1uynlkuwGBBixYStlU=;
	b=Hj1bJJJeaN/UGRisMIxLz8xUaAw94fjbeqLGU1gftBztzaFzWb5rNzmc0g2DFjubnU
	5IXfCkB5IpLscQQtfSKU207nhrWuVcXdb5SK3Y92Vsr2wpJdDlZ2YRPOJ9RsVuWBqbLc
	x8TkxL2turO6JdVgBonv01Z3XI+h/NpFYuOdTK4I5L26ww062WYg0nA3w/046s+F7iZA
	GhncUmP/fQuYdl+9NjrgHcfj8ibjXSkMFildrxDYGsF3czL5ErDSVzl5/E4dgCKSErbA
	pjBk5Gzm6nzrXPbo9CaaSLDVOI+TEyUsV0ZmdC+61+yZHZOGY/lLMRA5qtvp3WtcB756
	rmPw==
X-Gm-Message-State: AA+aEWa6td31ExOlACdpqWjjyVdWLDIjZUjMk3rcT5BUM3rL/v4Hn4DM
	Sxp9T2UkpDSOn24jJT+dNL6i2fPc0iI=
X-Google-Smtp-Source: AFSGD/WCUWTPMGuxBmuwkIzrXa5lrhW0njw6AHyv/NK5cE58WSgggwHgS/l3zCQ3ivcGUWJR/y/AsQ==
X-Received: by 2002:a17:902:1101:: with SMTP id
	d1mr14396700pla.136.1544500416517; 
	Mon, 10 Dec 2018 19:53:36 -0800 (PST)
Received: from [10.61.2.175] ([122.99.82.10]) by smtp.gmail.com with ESMTPSA id
	e188sm16144047pfg.130.2018.12.10.19.53.34
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 10 Dec 2018 19:53:35 -0800 (PST)
To: Greg Kurz <groug@kaod.org>, David Gibson <david@gibson.dropbear.id.au>
References: <20181108014406.29818-1-aik@ozlabs.ru>
	<20181111191047.7af39551@bahia.lan>
	<efc67974-4118-7877-6f8d-ce0a09cb9999@ozlabs.ru>
	<20181210062043.GS4261@umbus.fritz.box>
	<20181210103032.088de905@bahia.lab.toulouse-stg.fr.ibm.com>
From: Alexey Kardashevskiy <aik@ozlabs.ru>
Openpgp: preference=signencrypt
Autocrypt: addr=aik@ozlabs.ru; keydata=
	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
Message-ID: <d363fae5-d968-0bfb-0c27-adbbe427f642@ozlabs.ru>
Date: Tue, 11 Dec 2018 14:53:32 +1100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.3
MIME-Version: 1.0
In-Reply-To: <20181210103032.088de905@bahia.lab.toulouse-stg.fr.ibm.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::643
Subject: Re: [Qemu-devel] [Qemu-ppc] [PATCH qemu] ppc/spapr: Receive and
 store device tree blob from SLOF
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 10/12/2018 20:30, Greg Kurz wrote:
> On Mon, 10 Dec 2018 17:20:43 +1100
> David Gibson <david@gibson.dropbear.id.au> wrote:
> 
>> On Mon, Nov 12, 2018 at 03:12:26PM +1100, Alexey Kardashevskiy wrote:
>>>
>>>
>>> On 12/11/2018 05:10, Greg Kurz wrote:  
>>>> Hi Alexey,
>>>>
>>>> Just a few remarks. See below.
>>>>
>>>> On Thu,  8 Nov 2018 12:44:06 +1100
>>>> Alexey Kardashevskiy <aik@ozlabs.ru> wrote:
>>>>   
>>>>> SLOF receives a device tree and updates it with various properties
>>>>> before switching to the guest kernel and QEMU is not aware of any changes
>>>>> made by SLOF. Since there is no real RTAS (QEMU implements it), it makes
>>>>> sense to pass the SLOF final device tree to QEMU to let it implement
>>>>> RTAS related tasks better, such as PCI host bus adapter hotplug.
>>>>>
>>>>> Specifially, now QEMU can find out the actual XICS phandle (for PHB
>>>>> hotplug) and the RTAS linux,rtas-entry/base properties (for firmware
>>>>> assisted NMI - FWNMI).
>>>>>
>>>>> This stores the initial DT blob in the sPAPR machine and replaces it
>>>>> in the KVMPPC_H_UPDATE_DT (new private hypercall) handler.
>>>>>
>>>>> This adds an @update_dt_enabled machine property to allow backward
>>>>> migration.
>>>>>
>>>>> SLOF already has a hypercall since
>>>>> https://github.com/aik/SLOF/commit/e6fc84652c9c0073f9183
>>>>>
>>>>> Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
>>>>> ---
>>>>>  include/hw/ppc/spapr.h |  7 ++++++-
>>>>>  hw/ppc/spapr.c         | 29 ++++++++++++++++++++++++++++-
>>>>>  hw/ppc/spapr_hcall.c   | 32 ++++++++++++++++++++++++++++++++
>>>>>  hw/ppc/trace-events    |  2 ++
>>>>>  4 files changed, 68 insertions(+), 2 deletions(-)
>>>>>
>>>>> diff --git a/include/hw/ppc/spapr.h b/include/hw/ppc/spapr.h
>>>>> index ad4d7cfd97..f5dcaf44cb 100644
>>>>> --- a/include/hw/ppc/spapr.h
>>>>> +++ b/include/hw/ppc/spapr.h
>>>>> @@ -100,6 +100,7 @@ struct sPAPRMachineClass {
>>>>>  
>>>>>      /*< public >*/
>>>>>      bool dr_lmb_enabled;       /* enable dynamic-reconfig/hotplug of LMBs */
>>>>> +    bool update_dt_enabled;    /* enable KVMPPC_H_UPDATE_DT */
>>>>>      bool use_ohci_by_default;  /* use USB-OHCI instead of XHCI */
>>>>>      bool pre_2_10_has_unused_icps;
>>>>>      bool legacy_irq_allocation;
>>>>> @@ -136,6 +137,9 @@ struct sPAPRMachineState {
>>>>>      int vrma_adjust;
>>>>>      ssize_t rtas_size;
>>>>>      void *rtas_blob;
>>>>> +    uint32_t fdt_size;
>>>>> +    uint32_t fdt_initial_size;  
>>>>
>>>> I don't quite see the purpose of fdt_initial_size... it seems to be only
>>>> used to print a trace.  
>>>
>>>
>>> Ah, lost in rebase. The purpose was to test if the new device tree has
>>> not grown too much.
>>>
>>>
>>>   
>>>>   
>>>>> +    void *fdt_blob;
>>>>>      long kernel_size;
>>>>>      bool kernel_le;
>>>>>      uint32_t initrd_base;
>>>>> @@ -462,7 +466,8 @@ struct sPAPRMachineState {
>>>>>  #define KVMPPC_H_LOGICAL_MEMOP  (KVMPPC_HCALL_BASE + 0x1)
>>>>>  /* Client Architecture support */
>>>>>  #define KVMPPC_H_CAS            (KVMPPC_HCALL_BASE + 0x2)
>>>>> -#define KVMPPC_HCALL_MAX        KVMPPC_H_CAS
>>>>> +#define KVMPPC_H_UPDATE_DT      (KVMPPC_HCALL_BASE + 0x3)
>>>>> +#define KVMPPC_HCALL_MAX        KVMPPC_H_UPDATE_DT
>>>>>  
>>>>>  typedef struct sPAPRDeviceTreeUpdateHeader {
>>>>>      uint32_t version_id;
>>>>> diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
>>>>> index c08130facb..5e2d4d211c 100644
>>>>> --- a/hw/ppc/spapr.c
>>>>> +++ b/hw/ppc/spapr.c
>>>>> @@ -1633,7 +1633,10 @@ static void spapr_machine_reset(void)
>>>>>      /* Load the fdt */
>>>>>      qemu_fdt_dumpdtb(fdt, fdt_totalsize(fdt));
>>>>>      cpu_physical_memory_write(fdt_addr, fdt, fdt_totalsize(fdt));
>>>>> -    g_free(fdt);
>>>>> +    g_free(spapr->fdt_blob);
>>>>> +    spapr->fdt_size = fdt_totalsize(fdt);
>>>>> +    spapr->fdt_initial_size = spapr->fdt_size;
>>>>> +    spapr->fdt_blob = fdt;  
>>>>
>>>> Hmm... It looks weird to store state in a reset handler. I'd rather zeroe
>>>> both fdt_blob and fdt_size here.  
>>>
>>> The device tree is built from the reset handler and the idea is that we
>>> want to always have some tree in the machine.  
>>
>> Yes, I think the approach here is fine.  Otherwise when we want to
>> look up the current fdt state in RTAS calls or whatever we'd always
>> have to do
>> 	if (fdt_blob)
>> 		look up that
>> 	else
>> 		look up qemu created fdt.
>>
> 
> No. We only have one fdt blob: the initial one, I'd rather
> call reset time one, or the updated one.

There is one fdt in the machine, always. Either initial or from cas.



>> Incidentally 'fdt' and 'fdt_blob' names do a terrible job of
>> distinguishing what the difference is.  Renaming fdt to fdt_initial
>> (to match fdt_initial_size) and fdt_blob to fdt should make that
>> clearer.
>>
> 
> As mentioned earlier in this thread, spapr->fdt_initial_size is only used
> for tracing if the received fdt blob fails fdt_check_full()...
> 
> $ git grep -H fdt_initial_size
> hw/ppc/spapr.c:    spapr->fdt_initial_size = spapr->fdt_size;
> hw/ppc/spapr.c:        VMSTATE_UINT32(fdt_initial_size, sPAPRMachineState),
> hw/ppc/spapr_hcall.c:        trace_spapr_update_dt_failed(spapr->fdt_initial_size, cb,
> include/hw/ppc/spapr.h:    uint32_t fdt_initial_size;
> 
> Not sure it is helpful, and anyway, it is expected to be the same in source
> and destination, so why put it in the migration stream ?


Well, we do build the fdt anyway even when receive migration but we do
not have to and yes we can expect the fdt on the destination to be of
the same size since it is the same command line, it is just guessing and
expecting vs. knowing and I prefer the latter as the reset time fdt and
migration source fdt might have different size because of
host-model/host-serial/slot-label/similar properties.


> The only case where we want to migrate something is when h_update_dt() has
> succeeded, ie, the guest passed a valid DT blob. This implies that its
> size isn't 0, otherwise fdt_check_full() would return -FDT_ERR_TRUNCATED.
> 
> I would suggest rather to:
> 
> - completely drop spapr->fdt_initial_size
> - clear spapr->fdt_size at machine reset
> - migrate if spapr->fdt_size is not zero
> 
> Also, I've just realized another problem... nothing prevents a malicious
> guest to pass an insanely great size to h_update_dt, which would cause
> g_malloc0() to abort... The passed size should be checked against
> FDT_MAX_SIZE.

Good point. Just noticed - as posted, the checker actually checks the
reset time tree, not the updated one, my bad :)



-- 
Alexey

