Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:59:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5E938580522
	for <like.xu@linux.intel.com>; Sat, 22 Dec 2018 19:02:03 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Dec 2018 19:02:02 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AvOGuQBwzBxCFSmXXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uoUIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJOT03/mbVhcx+kaxbuBCsqR5wzoLJboyZKORxfrjGcN8GWWZMRNpdWjZdDo+g?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YPrQa+ChWsBOzxzD9Ign723asn2OkmFwHGxBIvH8kNvX?=
 =?us-ascii?q?nWsdn4N6gfXPu6zKnN1zrDbvdW1S3h54jPdxAsuPeBVq9zf8rJ0UQjCR/Jg1aK?=
 =?us-ascii?q?pYD4Ij+Y1f4Bv3aV4udgT+6jlmwqpxlsrjSyycogkJTFi4wUx1ze6yl0wpw5Kc?=
 =?us-ascii?q?CkREN6Z9OvDYFeuDuAN4RsR8MvW2Fotzg+yr0BoZO7eCkKyI87xx7EcfCHfI6I?=
 =?us-ascii?q?4g/5WOaWOzd4i2ppeLO5hxms7Uit0vPwWtW33VpQsyZJj9rBumoT2xHd6sWLUO?=
 =?us-ascii?q?Zx80W51TaKzQ/T6+VEIU4ularcLp4s2qcwmYQWsUTeByP5hVv5jLGIeUUg4+Sn?=
 =?us-ascii?q?8OPnYqjgppCAKYB0kQbyMqAvmsy8H+s0KAcPX3WD9OS41b3j+1D5QbpQgv03lK?=
 =?us-ascii?q?nZrI7VJcABqqGlBA9V150u6xC4Dzeg39QYm2QHIEhCeBKdgIjlI0vOL+zgDfej?=
 =?us-ascii?q?n1Ssly9mx/THPr3iHJrBNHfCkKr6cLZ56k5czhczzN9F65JVDLEBPOz8WkvruN?=
 =?us-ascii?q?PECR85Nl/8/uD8Fd8o1p8CQXndReidMbjOqhmO4eQgJfTKY5Ua/zP0Kvwg7vip?=
 =?us-ascii?q?imclmFgbZu6w0J4KLXy1APlicHifemfm19IIEGMWuVgnQen3zVGPTzNXImy/Rr?=
 =?us-ascii?q?8x/S0TDoWgAoHeAIe3j+uawS25E5ZKM31AEU2GCnzydo+JCMsLPTufJ9IknjEa?=
 =?us-ascii?q?WLyJTYgn2hez8gjgxOlJNO3RrzwFvpLu0tx04aWHkwk/7mwrVpTB+26IRmBw2G?=
 =?us-ascii?q?gPQmllj+hEvUVhxwLbguBDiPtCGIkL6g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DwLwA8+h5chxHrdtBiHAECHwQBBgGBT?=
 =?us-ascii?q?QKBL4EtgTWMdotrAQEGijskEI4pgXMTAQEYFIcwIjYHDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCBsOIwyCOgUCAxgOgmEDAwECJBkBBQoMHQECAQIBAgYBAQUQMwgDAR0CE?=
 =?us-ascii?q?QEFARwZBYMdgWkBAwgMAQEEmkw8jBUWBQEXgncFgQGBQ4FsChknDV6BNwIGEod?=
 =?us-ascii?q?sgyWBHIEPgQeBEYVpiAkCgSoBAQGHfCSHFYRcizMnMgEGAgGBVgWBOYM+h2SDJ?=
 =?us-ascii?q?wwYgWCIGzeHNI9sihYCBAIEBQIFDyGBLAaCAXCBAW2BToIkAxeDSopgZYEEAzu?=
 =?us-ascii?q?LOYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0DwLwA8+h5chxHrdtBiHAECHwQBBgGBTQKBL4EtgTWMdot?=
 =?us-ascii?q?rAQEGijskEI4pgXMTAQEYFIcwIjYHDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCO?=
 =?us-ascii?q?gUCAxgOgmEDAwECJBkBBQoMHQECAQIBAgYBAQUQMwgDAR0CEQEFARwZBYMdgWk?=
 =?us-ascii?q?BAwgMAQEEmkw8jBUWBQEXgncFgQGBQ4FsChknDV6BNwIGEodsgyWBHIEPgQeBE?=
 =?us-ascii?q?YVpiAkCgSoBAQGHfCSHFYRcizMnMgEGAgGBVgWBOYM+h2SDJwwYgWCIGzeHNI9?=
 =?us-ascii?q?sihYCBAIEBQIFDyGBLAaCAXCBAW2BToIkAxeDSopgZYEEAzuLOYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,386,1539673200"; 
   d="scan'208";a="46122358"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Dec 2018 19:02:02 -0800
Received: from localhost ([::1]:54034 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gau1h-000523-BQ
	for like.xu@linux.intel.com; Sat, 22 Dec 2018 22:02:01 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44359)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <npes87184@gmail.com>) id 1gau0x-00050g-MV
	for qemu-devel@nongnu.org; Sat, 22 Dec 2018 22:01:17 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <npes87184@gmail.com>) id 1gau0w-0005kj-Km
	for qemu-devel@nongnu.org; Sat, 22 Dec 2018 22:01:15 -0500
Received: from mail-pl1-x644.google.com ([2607:f8b0:4864:20::644]:46261)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <npes87184@gmail.com>)
	id 1gau0u-0005gU-K6; Sat, 22 Dec 2018 22:01:14 -0500
Received: by mail-pl1-x644.google.com with SMTP id t13so4235295ply.13;
	Sat, 22 Dec 2018 19:01:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=MShGp47QRiQwWuK+yf1CJXsrfpB6HDhws8Iyenae/sE=;
	b=XPYYsGkqDyOj6a/onq5TSGLpYMDOOa9oVXI29V1d2e8ADZkLY/NFae2DNXikIR/fSc
	oTn33PfG7wOPaOfHKB8MaKVXiQxxRBVWIpxbL7Ehc3Q8amkZHIMZUljLAVKurWiSO9IB
	KvR8MMO/zwl4IefQ6dGZ/oOMoislqsEXuiBZjneGnAEap5+kFSJJgUShDxP4Mx1Z+g0T
	IAQkPSBDbC/t69pohNhGIbTbyNJ7yN2NKjXX8pnV5CBV2e/pO29xdul+jo4PgyrgmPXZ
	UzXM+4k6YZl99/RJKSeqENYlHT/h7BibpLCIwXUoqhfIOO8DZH4kn1/UTdgrW3Q7r9HP
	cWiw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=MShGp47QRiQwWuK+yf1CJXsrfpB6HDhws8Iyenae/sE=;
	b=IVmNrSauNaaZbCnMQxtwgiA9BYJu5AzoCprLBYns0yfJv+Wi4PQAQe1kpGqUJ76bRe
	WeJqh1R5dYlgkQ+QXhypJm/GHL8J4KiTRPHo/YyJ90+drRI90PleTh/d3/B+6BcEBX6U
	0SbAYBvGy1i7chfBEu7zYkQgT+FdlCYWlxCXN3ZOyuZ6E+nnRQUExeOuLddVO3BQXT0a
	b+lYT2opdXcOfO+fPO8tNpe33LYpbN4S2gJPWr+ZkRB+NqjLh4KCmEeJ/isHMO3Sb0Wp
	k4BPimtehGDtd4U984/CDxUqIOslVNE6l4Grcp9QHAdtmmD4mDl9jgXTkLVlPfdBZ8hi
	pE8g==
X-Gm-Message-State: AJcUukfN7rtwEQgfemY4t3F9vhX+iRIazqIEL68lWMapnJxjwI/XYnCU
	40BWrJQnTHHhbGofQZ1S7DF6E4zVm0E=
X-Google-Smtp-Source: ALg8bN7sOCMr/rXvmIt061/HLRGgMnKD0ZqKW/GjPZTBCz3L3Zo7udXpU8s0MSb20iaWOH+wjH9jFg==
X-Received: by 2002:a17:902:aa8c:: with SMTP id
	d12mr8587783plr.25.1545534069828; 
	Sat, 22 Dec 2018 19:01:09 -0800 (PST)
Received: from localhost.localdomain (114-136-27-106.emome-ip.hinet.net.
	[114.136.27.106]) by smtp.gmail.com with ESMTPSA id
	g190sm32610180pgc.28.2018.12.22.19.01.08
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Sat, 22 Dec 2018 19:01:09 -0800 (PST)
From: yuchenlin <npes87184@gmail.com>
To: qemu-devel@nongnu.org
Date: Sun, 23 Dec 2018 10:59:39 +0800
Message-Id: <20181223025939.15775-4-npes87184@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181223025939.15775-1-npes87184@gmail.com>
References: <20181223025939.15775-1-npes87184@gmail.com>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::644
Subject: [Qemu-devel] [PATCH v2 3/3] dmg: don't skip zero chunk
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: yuchenlin <npes87184@gmail.com>, qemu-block@nongnu.org, stefanha@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The dmg file has many tables which describe: "start from sector XXX to
sector XXX, the compression method is XXX and where the compressed data
resides on".

Each sector in the expanded file should be covered by a table. The table
will describe the offset of compressed data (or raw depends on the type)
in the dmg.

For example:

[-----------The expanded file------------]
[---bzip table ---]/* zeros */[---zlib---]
    ^
    | if we want to read this sector.

we will find bzip table which contains this sector, and get the
compressed data offset, read it from dmg, uncompress it, finally write to
expanded file.

If we skip zero chunk (table), some sector cannot find the table which
will cause search_chunk() return s->n_chunks, dmg_read_chunk() return -1
and finally causing dmg_co_preadv() return EIO.

See:

[-----------The expanded file------------]
[---bzip table ---]/* zeros */[---zlib---]
                    ^
                    | if we want to read this sector.

Oops, we cannot find the table contains it...

In the original implementation, we don't have zero table. When we try to
read sector inside the zero chunk. We will get EIO, and skip reading.

After this patch, we treat zero chunk the same as ignore chunk, it will
directly write zero and avoid some sector may not find the table.

After this patch:

[-----------The expanded file------------]
[---bzip table ---][--zeros--][---zlib---]

Signed-off-by: yuchenlin <npes87184@gmail.com>
---
 block/dmg.c | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/block/dmg.c b/block/dmg.c
index 6b0a057bf8..137fe9c1ff 100644
--- a/block/dmg.c
+++ b/block/dmg.c
@@ -130,7 +130,8 @@ static void update_max_chunk_size(BDRVDMGState *s, uint32_t chunk,
     case UDRW: /* copy */
         uncompressed_sectors = DIV_ROUND_UP(s->lengths[chunk], 512);
         break;
-    case UDIG: /* zero */
+    case UDZE: /* zero */
+    case UDIG: /* ignore */
         /* as the all-zeroes block may be large, it is treated specially: the
          * sector is not copied from a large buffer, a simple memset is used
          * instead. Therefore uncompressed_sectors does not need to be set. */
@@ -199,8 +200,9 @@ typedef struct DmgHeaderState {
 static bool dmg_is_known_block_type(uint32_t entry_type)
 {
     switch (entry_type) {
+    case UDZE:    /* zeros */
     case UDRW:    /* uncompressed */
-    case UDIG:    /* zeroes */
+    case UDIG:    /* ignore */
     case UDZO:    /* zlib */
         return true;
     case UDBZ:    /* bzip2 */
@@ -265,9 +267,10 @@ static int dmg_read_mish_block(BDRVDMGState *s, DmgHeaderState *ds,
         /* sector count */
         s->sectorcounts[i] = buff_read_uint64(buffer, offset + 0x10);
 
-        /* all-zeroes sector (type 2) does not need to be "uncompressed" and can
-         * therefore be unbounded. */
-        if (s->types[i] != UDIG && s->sectorcounts[i] > DMG_SECTORCOUNTS_MAX) {
+        /* all-zeroes sector (type UDZE and UDIG) does not need to be
+         * "uncompressed" and can therefore be unbounded. */
+        if (s->types[i] != UDZE && s->types[i] != UDIG
+            && s->sectorcounts[i] > DMG_SECTORCOUNTS_MAX) {
             error_report("sector count %" PRIu64 " for chunk %" PRIu32
                          " is larger than max (%u)",
                          s->sectorcounts[i], i, DMG_SECTORCOUNTS_MAX);
@@ -671,7 +674,8 @@ static inline int dmg_read_chunk(BlockDriverState *bs, uint64_t sector_num)
                 return -1;
             }
             break;
-        case UDIG: /* zero */
+        case UDZE: /* zeros */
+        case UDIG: /* ignore */
             /* see dmg_read, it is treated specially. No buffer needs to be
              * pre-filled, the zeroes can be set directly. */
             break;
@@ -706,7 +710,8 @@ dmg_co_preadv(BlockDriverState *bs, uint64_t offset, uint64_t bytes,
         /* Special case: current chunk is all zeroes. Do not perform a memcpy as
          * s->uncompressed_chunk may be too small to cover the large all-zeroes
          * section. dmg_read_chunk is called to find s->current_chunk */
-        if (s->types[s->current_chunk] == UDIG) { /* all zeroes block entry */
+        if (s->types[s->current_chunk] == UDZE
+            || s->types[s->current_chunk] == UDIG) { /* all zeroes block entry */
             qemu_iovec_memset(qiov, i * 512, 0, 512);
             continue;
         }
-- 
2.17.1


