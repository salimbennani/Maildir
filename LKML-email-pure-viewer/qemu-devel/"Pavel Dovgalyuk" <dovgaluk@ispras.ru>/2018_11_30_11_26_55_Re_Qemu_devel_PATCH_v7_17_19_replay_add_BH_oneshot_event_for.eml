Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:16:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A97D0580213
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 03:27:08 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 03:27:08 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A5YL3gBcnig67GqxMqHKTnnRrlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcWyYB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2y?=
 =?us-ascii?q?b4QNAeQPPulXoJXyqVUJsRuwGBGsCeHtxDJHm3P707E23Po6EQzdwAwtHd0OvG?=
 =?us-ascii?q?jKoNnpKqsfV/2+wqnSzTXEavNbwTnx5pLSfRA/v/6MWa97f8TWyUkxGAPKlFGQ?=
 =?us-ascii?q?qIz4PzOW2OgGrm+W4PdnVeKxhG4osQVxoiWsxso3i4nJnZoVykre+iVi2oo1P8?=
 =?us-ascii?q?C4RVd9bNW5E5VQrzmXO5VqTs4hWW1kpTs2x74ctZKlciUHyI4rywPdZvCfcIWF?=
 =?us-ascii?q?4gjvWPueLDtmnn5pZa+zihSo/US+1OHxV8+520tQoCVfiNnDrHUN2gTT6seZTv?=
 =?us-ascii?q?t9+V+s2TKO1wDI9uFEOlo4laXdK5482LIwkYATsUvbEi/3nkX5krOWe1069uS0?=
 =?us-ascii?q?6OnreKjqqoKfOoNulA3zPKQjltaiDek6KgQOWnKU+eW41L3t5035R7BKg+Uvkq?=
 =?us-ascii?q?bHtZDaON0XqbOnDA9LzIkj7w+zACyh0NQFm3kIMExKeAmAg4jtOlHOI+73Ae2w?=
 =?us-ascii?q?glSxiDprw/HGPrv8ApTCNHTDkbHhfapj5E5Y0gY80ddf55dPB7EHJ/LzXEDxtN?=
 =?us-ascii?q?rFDhMjNAy02ennBM1n1owCQWKPHrOZMKTKvF+M5+IvIPeDaJUauTbgMPUl4//u?=
 =?us-ascii?q?jXkkmV4SZ6Wp3J0XaGymEfRiOUmWfX3sgtJSWVoMpRc0Gez2lEWZA3kUY3epQ7?=
 =?us-ascii?q?l64DY9B4S7S4DZSceoib2F2S69WZpOemFBDEvLCHrtasCIVukBbHGvJNR8mGkB?=
 =?us-ascii?q?XLmlV4hzzByrqUr2xqRqKq/O9zQFuIn//N5y4eLViFc17zMjFNmX0WyGUzRpmH?=
 =?us-ascii?q?gVTSQ9xqF1rB9BzQLJnot1nf1eXeNU4/0GGE9uNoHby+JSEd3+WgvdONyOTQD1?=
 =?us-ascii?q?bM+hBGR7dtsvzttGT0FjFNymnw3AlWL+D7gLmLWPGZ8c87nExXHqYdxgnSWVnJ?=
 =?us-ascii?q?I9hkUrF5McfVatgbRyok2KX9bE?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAAApHQFchxHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwKoI4jHCLKlABAQaBNYM3gTuELYRqiT+BcxQYFIFLSIVhIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAgEBAgUgEgwKKQMCAQECBAIBA?=
 =?us-ascii?q?QEJDgEGKQEHAwEVLREBAQQTBQaCS0uBdQUIAQMBp2Qxii6MGxd4gQeDDoEVilw?=
 =?us-ascii?q?Cj28zjzpVCQKCIZluhl2YWoFGgg1/BoMnP5Afb4ECBSETC4sRKymBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AkAAApHQFchxHrdtBjHgEGBwaBUQkLAYEwKoI4jHCLKlA?=
 =?us-ascii?q?BAQaBNYM3gTuELYRqiT+BcxQYFIFLSIVhIjQJDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOL4I2BQIDGgEGglsBAQEBAgEBAgUgEgwKKQMCAQECBAIBAQEJDgEGKQEHAwE?=
 =?us-ascii?q?VLREBAQQTBQaCS0uBdQUIAQMBp2Qxii6MGxd4gQeDDoEVilwCj28zjzpVCQKCI?=
 =?us-ascii?q?Zluhl2YWoFGgg1/BoMnP5Afb4ECBSETC4sRKymBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="140243417"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 03:27:07 -0800
Received: from localhost ([::1]:59414 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSgwt-0005bG-AB
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 06:27:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:41104)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dovgaluk@ispras.ru>) id 1gSgwj-0005ay-JM
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:26:58 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dovgaluk@ispras.ru>) id 1gSgwg-0005no-DP
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:26:57 -0500
Received: from mail.ispras.ru ([83.149.199.45]:33116)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dovgaluk@ispras.ru>) id 1gSgwg-0005nW-0k
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 06:26:54 -0500
Received: from PASHAISP (unknown [85.142.117.226])
	by mail.ispras.ru (Postfix) with ESMTPSA id 50F59540089;
	Fri, 30 Nov 2018 14:26:51 +0300 (MSK)
From: "Pavel Dovgalyuk" <dovgaluk@ispras.ru>
To: "'Kevin Wolf'" <kwolf@redhat.com>
References: <20181010133333.24538.53169.stgit@pasha-VirtualBox>
	<20181010133511.24538.70006.stgit@pasha-VirtualBox>
	<20181128160141.GD4222@dhcp-200-186.str.redhat.com>
	<002201d48885$b2f251c0$18d6f540$@ru>
	<20181130111808.GC5106@localhost.localdomain>
In-Reply-To: <20181130111808.GC5106@localhost.localdomain>
Date: Fri, 30 Nov 2018 14:26:55 +0300
Message-ID: <002401d4889f$99ba7ba0$cd2f72e0$@ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Office Outlook 12.0
Thread-Index: AdSInmfnUjQ0jVySSGCARV3QcfHYLAAAFsaw
Content-Language: ru
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 83.149.199.45
Subject: Re: [Qemu-devel] [PATCH v7 17/19] replay: add BH oneshot event for
 block layer
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org, war2jordan@live.com, crosthwaite.peter@gmail.com,
	boost.lists@gmail.com, mst@redhat.com, ciro.santilli@gmail.com,
	jasowang@redhat.com, quintela@redhat.com, qemu-devel@nongnu.org,
	dgilbert@redhat.com, zuban32s@gmail.com, alex.bennee@linaro.org,
	maria.klimushenkova@ispras.ru, kraxel@redhat.com,
	'Pavel Dovgalyuk' <Pavel.Dovgaluk@ispras.ru>,
	thomas.dullien@googlemail.com, pbonzini@redhat.com,
	mreitz@redhat.com, artem.k.pisarenko@gmail.com,
	armbru@redhat.com, rth@twiddle.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

> From: Kevin Wolf [mailto:kwolf@redhat.com]
> Am 30.11.2018 um 09:21 hat Pavel Dovgalyuk geschrieben:
> > > From: Kevin Wolf [mailto:kwolf@redhat.com]
> > > Am 10.10.2018 um 15:35 hat Pavel Dovgalyuk geschrieben:
> > > > Replay is capable of recording normal BH events, but sometimes
> > > > there are single use callbacks scheduled with aio_bh_schedule_oneshot
> > > > function. This patch enables recording and replaying such callbacks.
> > > > Block layer uses these events for calling the completion function.
> > > > Replaying these calls makes the execution deterministic.
> > > >
> > > > Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>
> > >
> > > What are the rules for using aio_bh_schedule_oneshot() vs.
> > > replay_bh_schedule_oneshot_event()? You are modifying one place, but if
> > > I grep for aio_bh_schedule_oneshot(), I find many other places that
> > > use it. Why is this one place special?
> >
> > This one is special, because it caused a record/replay bug.  I can't
> > validate all other places, because I don't understand block layer good
> > enough.
> >
> > That's why our current strategy is fixing replay, when it is breaks.
> > It's too hard to create the test for verifying the modification. And
> > for the current patch there was the bug which was fixed.
> 
> So nobody really understands the code, but we're just fixing symptoms
> whenever something crashes, without ever thinking about the design? And
> then the code will organically grow to maybe approximate what we wanted
> it to do?
> 
> Honestly, that's not the way to build reliable and maintainable
> software.
> 
> > The rule is the following: when the event is asynchronous and its
> > finalization affects the guest state, then this event should be
> > processed by the record/replay queue.
> 
> Are there any BHs that can never affect the guest state?

For example, qemu_bh_schedule(qmp_dispatcher_bh) in handle_qmp_command.
thread-pool.c also uses BH callbacks, but they are for creating threads,
and not for modifying the replayed guest state.

> Maybe you should really intercept this inside qemu_bh_schedule() and
> aio_bh_schedule_oneshot() to catch all instances. This would look more
> likely to address the root cause rather than twenty different special
> cases and forgetting the other hundred instances.
> 
> But why do you even need to record and replay BHs? Aren't they already
> fully deterministic if the code that schedules them is deterministic? Is
> this hinting at problems in a different part of the code, so that the
> caller isn't deterministic even though we expect it to be?

BHs may be invoked at random moments, that are not related to the executed
instructions. As we replay CPU, memory, and peripheral device state, we
must replay all invocations all BHs that affect them.

Replay must be done precisely, with instruction-level granularity.
That is why we record the moment of BH invocation for matching it in
the replay phase.

Pavel Dovgalyuk


