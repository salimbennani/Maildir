Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:36:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7ED9058037D
	for <like.xu@linux.intel.com>; Fri, 23 Nov 2018 08:53:01 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 08:53:01 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AisRVxRDfYy+29iBxleY0UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX8o8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshRWCJBDI2i?=
 =?us-ascii?q?bYQBAekPMulEoIfyulUOtRmzCwujCe/yxDJEmmH53bYh3uQ9CAHLxhAsE84UvX?=
 =?us-ascii?q?nWqtj+KaccUfqyzKnN1TjOc/dW1iny6YPVbx0uv/eMXbRqdsXP1EIiEBnKjlGO?=
 =?us-ascii?q?po3qJT+azfoCs26d7+V+S+2ikGonqwB3oje13McsjZPFhoUPylDL7Ch0xps+K9?=
 =?us-ascii?q?6gSENjf9KoDJhduzuHO4drQc4uWX9ktSg6x7EcpJK2fjAGxZc6yxLFdvCLbYuF?=
 =?us-ascii?q?7gj+WOuSITp0nnxodb25ih2v60av0Pf8WdOx0FtSripKjN3MtncV2hzX68iHUe?=
 =?us-ascii?q?d9/ly71TaA0QDT9/tIIUcularUM5Ihw7gwmYQPsUnbACP6hEb7gLWLekk5+eWk?=
 =?us-ascii?q?8frrb7vmq5OGKoN5iBnyMqE0lcy+BeQ4PBIOX2+e+emkzb3s40j5QKhTgvIrjK?=
 =?us-ascii?q?bZro7VJcACqqGiBA9Vz4Aj5AqhADe919gYmXgHLFFbdx6dgInpJknDIPT5Dfe5?=
 =?us-ascii?q?nlStny1nx/HAPr39HJrNKmLPn6vmfbZ48ENczg0zzdZQ55JSF7ENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9TbxbJV6Eay/snssZCjVN+Q4/V/DxzluFVzFVejC1Ra?=
 =?us-ascii?q?174zg6DIevC8DEXpysh7qamz62G4ATam1YB1TfLHHzao/RXv4NbD6VcNZslyFB?=
 =?us-ascii?q?WbW/Rotkzxy3qQLh15JhKezb/DBesojsg8No7e/eng1n6DpvEs6G2HuMRWwnom?=
 =?us-ascii?q?RdDRIz3aR+pgRSjB+o1rRxybQMHttP7ttDSA4zLdjb1eMsWP7oXQeUV9OEWB6M?=
 =?us-ascii?q?T9OggDx5Gts1zs9IaUt7HdivphTC2SOwBPkSjbPdV898yb7Vw3Wkf5U18H3Bzq?=
 =?us-ascii?q?R0ygB+GsY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAAD+LvhbhxHrdtBZCh4BBgcGgVEJC?=
 =?us-ascii?q?wGBMIJig3mId4shgg2XO4FzEgEBGBSEQIQaIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOIwyCNgUCAxoBBoJcAQICAQECIAQZAQEECikBAgIBAQIGAQEKGgIFHQQCA?=
 =?us-ascii?q?gMBCwEkAQUBARsGEwWDHIF6CAEDAZtKPIodcHwzgnYBAQWCQ4NNgQUIEhBpiWK?=
 =?us-ascii?q?BHIIWgRGBcIEihFMrgwSCV4h8h2SPJAcCkS8YiVGHNyyXXQYCCQcPIYElgg0zS?=
 =?us-ascii?q?kOCbIIbCwEXiF6FPnKBB4oqgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AiAAD+LvhbhxHrdtBZCh4BBgcGgVEJCwGBMIJig3mId4s?=
 =?us-ascii?q?hgg2XO4FzEgEBGBSEQIQaIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCA?=
 =?us-ascii?q?xoBBoJcAQICAQECIAQZAQEECikBAgIBAQIGAQEKGgIFHQQCAgMBCwEkAQUBARs?=
 =?us-ascii?q?GEwWDHIF6CAEDAZtKPIodcHwzgnYBAQWCQ4NNgQUIEhBpiWKBHIIWgRGBcIEih?=
 =?us-ascii?q?FMrgwSCV4h8h2SPJAcCkS8YiVGHNyyXXQYCCQcPIYElgg0zSkOCbIIbCwEXiF6?=
 =?us-ascii?q?FPnKBB4oqgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,270,1539673200"; 
   d="scan'208";a="52403650"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Nov 2018 08:52:59 -0800
Received: from localhost ([::1]:53428 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gQEhP-000745-8N
	for like.xu@linux.intel.com; Fri, 23 Nov 2018 11:52:59 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34039)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gQEh7-00073R-8z
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 11:52:42 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <alex.bennee@linaro.org>) id 1gQEh2-0003pm-MJ
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 11:52:41 -0500
Received: from mail-wm1-x32c.google.com ([2a00:1450:4864:20::32c]:50351)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <alex.bennee@linaro.org>)
	id 1gQEh0-0003lz-UU
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 11:52:35 -0500
Received: by mail-wm1-x32c.google.com with SMTP id 125so12536626wmh.0
	for <qemu-devel@nongnu.org>; Fri, 23 Nov 2018 08:52:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=references:user-agent:from:to:cc:subject:in-reply-to:date
	:message-id:mime-version:content-transfer-encoding;
	bh=1tdYA7bankQBsCcKxwmXOJNQ1lo3fOkwNiBhtP2zoTM=;
	b=QZMPQ09vFQ9gjQrQHHqI07PCpv2QK1xIXgQRODAqaN2iH5iZvVQJ7Zszsqs4k9slY3
	NvdCuS7oMF6I61vkNV/wSySHXw63/K7lrZzgmB/u3D812S2xA/xMpFC31vbdvjd6ZF+N
	70e5AU/8yHT4sDSYg0BhLChjblwYYDwLMcMZU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:references:user-agent:from:to:cc:subject
	:in-reply-to:date:message-id:mime-version:content-transfer-encoding;
	bh=1tdYA7bankQBsCcKxwmXOJNQ1lo3fOkwNiBhtP2zoTM=;
	b=VOdKNDRnRDV70NjXPSBM5lbuBCyzpUZo/SbJLTzqL5EKmeW4NlN2z1pCnHQNQwjZXc
	ITMHJchTmCm9HP9q3cZxC712w0JHzNUU1GfuQRySUtPEGyqQPpx4NtLkhyUXGxeSPMYA
	95MtgN+i1nOW3fXTGi7+L9noK3tgHBIyfEcIJF8ZJouU0q9HcOBdHOoBEodCyV0LYKQY
	V1s04/8f6rPU48Y4eA2KYYypHD83o39u6AZmrHbGVDzd60vQkKnfZALrgzSMqiTBc5Gc
	qkPat2cdT9/74EcmBh2OUCys6OlzdraztsArSVg+BJrEoR9uT1lE/LJJgv3V/9oJnqfa
	tyzA==
X-Gm-Message-State: AA+aEWYZfmraLnaa+dq0wyNqnMsXIdx4DOvJa6mEV5RaX6eF0bKJ4OPy
	jhLmfHeHxDhrvu4n8cvoXPRETQ==
X-Google-Smtp-Source: AJdET5es8OFzzU921a2o2UrfQ1M50dm/G8X2/ixxzPbXMAaCW7o9HBVg70oam99FXC6WLj5ORX76AA==
X-Received: by 2002:a1c:950f:: with SMTP id
	x15-v6mr14929022wmd.3.1542991953048; 
	Fri, 23 Nov 2018 08:52:33 -0800 (PST)
Received: from zen.linaro.local ([81.128.185.34])
	by smtp.gmail.com with ESMTPSA id
	l15sm28601032wrw.4.2018.11.23.08.52.32
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Fri, 23 Nov 2018 08:52:32 -0800 (PST)
Received: from zen (localhost [127.0.0.1])
	by zen.linaro.local (Postfix) with ESMTPS id BBA6F3E00A7;
	Fri, 23 Nov 2018 16:52:31 +0000 (GMT)
References: <20181025172057.20414-1-cota@braap.org>
	<20181025172057.20414-17-cota@braap.org>
User-agent: mu4e 1.1.0; emacs 26.1.90
From: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
To: "Emilio G. Cota" <cota@braap.org>
In-reply-to: <20181025172057.20414-17-cota@braap.org>
Date: Fri, 23 Nov 2018 16:52:31 +0000
Message-ID: <87tvk7hh2o.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::32c
Subject: Re: [Qemu-devel] [RFC 16/48] tcg: add plugin_mask to TB hash
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Stefan Hajnoczi <stefanha@gmail.com>,
	Peter Maydell <peter.maydell@linaro.org>, qemu-devel@nongnu.org,
	Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>,
	=?utf-8?Q?Llu=C3=ADs?= Vilanova <vilanova@ac.upc.edu>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


Emilio G. Cota <cota@braap.org> writes:

> Signed-off-by: Emilio G. Cota <cota@braap.org>

This commit message needs more description. What is this plugin mask
for? Are we extending the TB flags with a mask of loaded plugins so we
can correctly identify what code was generated under what plugins?

> ---
>  include/exec/exec-all.h   | 2 ++
>  include/exec/tb-hash.h    | 6 ++++--
>  include/exec/tb-lookup.h  | 1 +
>  accel/tcg/cpu-exec.c      | 6 +++++-
>  accel/tcg/translate-all.c | 6 ++++--
>  5 files changed, 16 insertions(+), 5 deletions(-)
>
> diff --git a/include/exec/exec-all.h b/include/exec/exec-all.h
> index 232e2f8966..a1f60404b6 100644
> --- a/include/exec/exec-all.h
> +++ b/include/exec/exec-all.h
> @@ -358,6 +358,8 @@ struct TranslationBlock {
>      /* Per-vCPU dynamic tracing state used to generate this TB */
>      uint32_t trace_vcpu_dstate;
>
> +    uint32_t plugin_mask;
> +
>      struct tb_tc tc;
>
>      /* original tb when cflags has CF_NOCACHE */
> diff --git a/include/exec/tb-hash.h b/include/exec/tb-hash.h
> index 4f3a37d927..37292474b7 100644
> --- a/include/exec/tb-hash.h
> +++ b/include/exec/tb-hash.h
> @@ -59,9 +59,11 @@ static inline unsigned int tb_jmp_cache_hash_func(targ=
et_ulong pc)
>
>  static inline
>  uint32_t tb_hash_func(tb_page_addr_t phys_pc, target_ulong pc, uint32_t =
flags,
> -                      uint32_t cf_mask, uint32_t trace_vcpu_dstate)
> +                      uint32_t cf_mask, uint32_t trace_vcpu_dstate,
> +                      uint32_t plugin_mask)
>  {
> -    return qemu_xxhash7(phys_pc, pc, flags, cf_mask, trace_vcpu_dstate);
> +    return qemu_xxhash8(phys_pc, pc, flags, cf_mask, trace_vcpu_dstate,
> +                        plugin_mask);
>  }
>
>  #endif
> diff --git a/include/exec/tb-lookup.h b/include/exec/tb-lookup.h
> index 492cb68289..dd1572f481 100644
> --- a/include/exec/tb-lookup.h
> +++ b/include/exec/tb-lookup.h
> @@ -33,6 +33,7 @@ tb_lookup__cpu_state(CPUState *cpu, target_ulong *pc, t=
arget_ulong *cs_base,
>                 tb->cs_base =3D=3D *cs_base &&
>                 tb->flags =3D=3D *flags &&
>                 tb->trace_vcpu_dstate =3D=3D *cpu->trace_dstate &&
> +               tb->plugin_mask =3D=3D *cpu->plugin_mask &&
>                 (tb_cflags(tb) & (CF_HASH_MASK | CF_INVALID)) =3D=3D cf_m=
ask)) {
>          return tb;
>      }
> diff --git a/accel/tcg/cpu-exec.c b/accel/tcg/cpu-exec.c
> index d590f1f6c0..27aa3451da 100644
> --- a/accel/tcg/cpu-exec.c
> +++ b/accel/tcg/cpu-exec.c
> @@ -287,6 +287,7 @@ struct tb_desc {
>      uint32_t flags;
>      uint32_t cf_mask;
>      uint32_t trace_vcpu_dstate;
> +    uint32_t plugin_mask;
>  };
>
>  static bool tb_lookup_cmp(const void *p, const void *d)
> @@ -299,6 +300,7 @@ static bool tb_lookup_cmp(const void *p, const void *=
d)
>          tb->cs_base =3D=3D desc->cs_base &&
>          tb->flags =3D=3D desc->flags &&
>          tb->trace_vcpu_dstate =3D=3D desc->trace_vcpu_dstate &&
> +        tb->plugin_mask =3D=3D desc->plugin_mask &&
>          (tb_cflags(tb) & (CF_HASH_MASK | CF_INVALID)) =3D=3D desc->cf_ma=
sk) {
>          /* check next page if needed */
>          if (tb->page_addr[1] =3D=3D -1) {
> @@ -330,13 +332,15 @@ TranslationBlock *tb_htable_lookup(CPUState *cpu, t=
arget_ulong pc,
>      desc.flags =3D flags;
>      desc.cf_mask =3D cf_mask;
>      desc.trace_vcpu_dstate =3D *cpu->trace_dstate;
> +    desc.plugin_mask =3D *cpu->plugin_mask;
>      desc.pc =3D pc;
>      phys_pc =3D get_page_addr_code(desc.env, pc);
>      if (phys_pc =3D=3D -1) {
>          return NULL;
>      }
>      desc.phys_page1 =3D phys_pc & TARGET_PAGE_MASK;
> -    h =3D tb_hash_func(phys_pc, pc, flags, cf_mask, *cpu->trace_dstate);
> +    h =3D tb_hash_func(phys_pc, pc, flags, cf_mask, *cpu->trace_dstate,
> +                     *cpu->plugin_mask);
>      return qht_lookup_custom(&tb_ctx.htable, &desc, h, tb_lookup_cmp);
>  }
>
> diff --git a/accel/tcg/translate-all.c b/accel/tcg/translate-all.c
> index db2d28f8d3..3423cf74db 100644
> --- a/accel/tcg/translate-all.c
> +++ b/accel/tcg/translate-all.c
> @@ -1129,6 +1129,7 @@ static bool tb_cmp(const void *ap, const void *bp)
>          a->flags =3D=3D b->flags &&
>          (tb_cflags(a) & CF_HASH_MASK) =3D=3D (tb_cflags(b) & CF_HASH_MAS=
K) &&
>          a->trace_vcpu_dstate =3D=3D b->trace_vcpu_dstate &&
> +        a->plugin_mask =3D=3D b->plugin_mask &&
>          a->page_addr[0] =3D=3D b->page_addr[0] &&
>          a->page_addr[1] =3D=3D b->page_addr[1];
>  }
> @@ -1444,7 +1445,7 @@ static void do_tb_phys_invalidate(TranslationBlock =
*tb, bool rm_from_page_list)
>      /* remove the TB from the hash list */
>      phys_pc =3D tb->page_addr[0] + (tb->pc & ~TARGET_PAGE_MASK);
>      h =3D tb_hash_func(phys_pc, tb->pc, tb->flags, tb_cflags(tb) & CF_HA=
SH_MASK,
> -                     tb->trace_vcpu_dstate);
> +                     tb->trace_vcpu_dstate, tb->plugin_mask);
>      if (!(tb->cflags & CF_NOCACHE) &&
>          !qht_remove(&tb_ctx.htable, tb, h)) {
>          return;
> @@ -1640,7 +1641,7 @@ tb_link_page(TranslationBlock *tb, tb_page_addr_t p=
hys_pc,
>
>          /* add in the hash table */
>          h =3D tb_hash_func(phys_pc, tb->pc, tb->flags, tb->cflags & CF_H=
ASH_MASK,
> -                         tb->trace_vcpu_dstate);
> +                         tb->trace_vcpu_dstate, tb->plugin_mask);
>          qht_insert(&tb_ctx.htable, tb, h, &existing_tb);
>
>          /* remove TB from the page(s) if we couldn't insert it */
> @@ -1712,6 +1713,7 @@ TranslationBlock *tb_gen_code(CPUState *cpu,
>      tb->cflags =3D cflags;
>      tb->trace_vcpu_dstate =3D *cpu->trace_dstate;
>      tcg_ctx->tb_cflags =3D cflags;
> +    tb->plugin_mask =3D *cpu->plugin_mask;
>
>  #ifdef CONFIG_PROFILER
>      /* includes aborted translations because of exceptions */


--
Alex Benn=C3=A9e

