Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 20:24:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 802A3580117
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 02:16:23 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 02:16:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AHjGB9BwQ63Vqm1bXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoQKfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhNVyJPAY28?=
 =?us-ascii?q?YYkAD+sdMuhXoIbzukMOoBm8CwSjGe/ixCNEiWHt3aAhz+QhCBvL0BA8E94SrX?=
 =?us-ascii?q?jZqsj+OqcIUeCyyanF1SnOb/VK2Tf67ojDbwgvru+CXb1ubMXRzlcvHB7Cg1qK?=
 =?us-ascii?q?r4zlIzSV1uIXv2id8eVgW/yghHMgqwFvuTWv2MYsipPVhoIIzVDF9CR4wIEvKd?=
 =?us-ascii?q?KkT057ZMepHZ1NvC+ZL4t7Wt0uT31rtSog17EKpJ22cDIUxJkpxxPTceGLfoqQ?=
 =?us-ascii?q?7h7+V+ucIS10iGxrdb6inRq+70etxvHmWsS0yFpKoDRKn9rQun0I0hHc8NSLRe?=
 =?us-ascii?q?Bg8UqkxDmAyhrc5+5BLE8pkafUNZEsz7stmpUOrUjPAyn7k1jsgqCMbEUr4O2o?=
 =?us-ascii?q?5vznYrr4op+cMJd5igX/MqQ1hsy/Gv40MgcIX2iG4+i806fj/ULhTLVLiP05jL?=
 =?us-ascii?q?XZvYjEKcgHpaO1GRJZ3psg5hqlETur3tQVkWMaIF9HYB6HipLmO1DKIPD2F/e/?=
 =?us-ascii?q?hFGsnS9yx//YO73hH4zBIWXdn7f/Y7l971dQxxE0zdBC4ZJbFq8OIOn0Vk/1td?=
 =?us-ascii?q?zYDQE2Pxa7wub6ENh90oIeWWSSAq6WKq/SsFmI5v4xLOmIfoMapDH9K/0+6v7o?=
 =?us-ascii?q?in85n1Adfa+03ZcNb3C4BPtmL12DYXXwmtcBDXsKvg0mQezuiV2CUiBca2y9Xq?=
 =?us-ascii?q?Ih/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4DXE8oKcz+Yd899jiQf?=
 =?us-ascii?q?B//mT446yQrosgj8xLx6aO3O9WodvJPn0dFzoOrLiRA18yczFsmYziSBQn95mj?=
 =?us-ascii?q?A1QSQr1vV6qE151lDRyKV9nrlUGMJe47ZTXx4nOIXA5+p9Dd/0R0TGZNjeU0us?=
 =?us-ascii?q?QNitHWQsSMksycQFeUd3FoaeiUWJxievHvoZmqKGALQy9aTT2WW3INxygT6Sza?=
 =?us-ascii?q?QkkhwqT9VCMUWggahw8RWVAJTGxRa3jaGvII0awCnLvEGOw2eCu18QBAd2TaLD?=
 =?us-ascii?q?G3YSaEbaqsrR+ELYU6KpG6YgdABGzJjReeNxdtT1gAAeF7/YM9PEbjf0wj/oCA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAAAmAQVchxHrdtBiHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwUIFcBDIKhzYDhS2KYJUmhHmBcxMBGBSIAyI0CQ0BAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgbDiMBC4I2BQIDGgEGglwDAwECJBkBAQQKKQECAwECBgEBAQFGCAMBLiUCB?=
 =?us-ascii?q?BMFgxyCAgECAQGZbwKKB4FsM4J2AQEFgkOEVgiMHIFXP45/iyGED0WQTQcCgh8?=
 =?us-ascii?q?Ejw4jkSYsiFiPQgIEAgQFAg0BAQWBRoINMxojgzyCGwkag0qKU3KBByGIVFgBg?=
 =?us-ascii?q?R4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AxAAAmAQVchxHrdtBiHgEGBwaBUQkLAYEwUIFcBDIKhzY?=
 =?us-ascii?q?DhS2KYJUmhHmBcxMBGBSIAyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMBC4I2B?=
 =?us-ascii?q?QIDGgEGglwDAwECJBkBAQQKKQECAwECBgEBAQFGCAMBLiUCBBMFgxyCAgECAQG?=
 =?us-ascii?q?ZbwKKB4FsM4J2AQEFgkOEVgiMHIFXP45/iyGED0WQTQcCgh8Ejw4jkSYsiFiPQ?=
 =?us-ascii?q?gIEAgQFAg0BAQWBRoINMxojgzyCGwkag0qKU3KBByGIVFgBgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="140500073"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 02:16:22 -0800
Received: from localhost ([::1]:47754 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTlH3-00034c-7S
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 05:16:21 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39177)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <anton.nefedov@virtuozzo.com>) id 1gTlFq-0002H5-10
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 05:15:07 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <anton.nefedov@virtuozzo.com>) id 1gTlFl-0004tr-Nr
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 05:15:05 -0500
Received: from mail-eopbgr00107.outbound.protection.outlook.com
	([40.107.0.107]:40233
	helo=EUR02-AM5-obe.outbound.protection.outlook.com)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <anton.nefedov@virtuozzo.com>)
	id 1gTlFk-0004r0-Av; Mon, 03 Dec 2018 05:15:01 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=virtuozzo.com;
	s=selector1;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
	bh=Nhmp+t6AVx4VjepLhDyhjluxK73ileGhh3juYWk3feI=;
	b=Kree2mXY2Ov+Z6YDe3P66Rs5cfK2jOvsuY1GsbU3aL6rR1nEQKnOlbACmRRlDT70MOn4aEkxW/8aXEuacks/2U0zyLOyFNkjj4cfS6plRo3cL4NwRjfuukeXSqeib8AIDrNbyd+u1cuOpLw8oyyOcyk2IfjkDy3Y2W2/zEvQaIY=
Received: from AM0PR08MB3347.eurprd08.prod.outlook.com (52.134.94.148) by
	AM0PR08MB3875.eurprd08.prod.outlook.com (20.178.82.87) with Microsoft
	SMTP
	Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
	15.20.1382.22; Mon, 3 Dec 2018 10:14:56 +0000
Received: from AM0PR08MB3347.eurprd08.prod.outlook.com
	([fe80::a0bd:dda4:d9e4:1d01]) by
	AM0PR08MB3347.eurprd08.prod.outlook.com
	([fe80::a0bd:dda4:d9e4:1d01%2]) with mapi id 15.20.1382.020;
	Mon, 3 Dec 2018 10:14:56 +0000
From: Anton Nefedov <anton.nefedov@virtuozzo.com>
To: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>
Thread-Topic: [PATCH v10 4/9] block: introduce BDRV_REQ_ALLOCATE flag
Thread-Index: AQHUivEKBvOuojkc60qskc5y3A0w/Q==
Date: Mon, 3 Dec 2018 10:14:56 +0000
Message-ID: <20181203101429.88735-5-anton.nefedov@virtuozzo.com>
References: <20181203101429.88735-1-anton.nefedov@virtuozzo.com>
In-Reply-To: <20181203101429.88735-1-anton.nefedov@virtuozzo.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: HE1PR0301CA0004.eurprd03.prod.outlook.com
	(2603:10a6:3:76::14) To AM0PR08MB3347.eurprd08.prod.outlook.com
	(2603:10a6:208:5f::20)
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=anton.nefedov@virtuozzo.com; 
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [185.231.240.5]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; AM0PR08MB3875;
	20:fvwT9rosUxyCN4ReEbBrEkQ/Wzog4ubiXvG74a8dJZBtYnpI3ljWymYmmKrSjYRZH2lQELANHBx59+yGuAaJ/zYfLV/z/ISgPE397DPqcDDNXV93XTsc2ECpo3paTcB5FZxjqn+r9EVetLAsS+NehHj6CIIPud1SS0XrIak+ASY=
x-ms-office365-filtering-correlation-id: bd193eb9-fca5-4687-b90e-08d659082c66
x-microsoft-antispam: BCL:0; PCL:0;
	RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);
	SRVR:AM0PR08MB3875; 
x-ms-traffictypediagnostic: AM0PR08MB3875:
x-microsoft-antispam-prvs: <AM0PR08MB3875C0C0F290AB708A951AAFF8AE0@AM0PR08MB3875.eurprd08.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(6040522)(2401047)(8121501046)(5005006)(93006095)(93001095)(3231455)(999002)(944501493)(52105112)(3002001)(10201501046)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(201708071742011)(7699051)(76991095);
	SRVR:AM0PR08MB3875; BCL:0; PCL:0; RULEID:; SRVR:AM0PR08MB3875; 
x-forefront-prvs: 08756AC3C8
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(39840400004)(376002)(136003)(396003)(346002)(366004)(199004)(189003)(305945005)(5660300001)(7736002)(106356001)(68736007)(2906002)(105586002)(256004)(14444005)(6436002)(2351001)(6486002)(71190400001)(71200400001)(6116002)(3846002)(4326008)(36756003)(6506007)(186003)(476003)(25786009)(102836004)(2616005)(478600001)(76176011)(14454004)(486006)(53936002)(86362001)(44832011)(99286004)(5640700003)(26005)(107886003)(6512007)(386003)(66066001)(316002)(8676002)(54906003)(11346002)(446003)(81166006)(81156014)(8936002)(2501003)(6916009)(52116002)(97736004)(1076002);
	DIR:OUT; SFP:1102; SCL:1; SRVR:AM0PR08MB3875;
	H:AM0PR08MB3347.eurprd08.prod.outlook.com; FPR:; SPF:None;
	LANG:en; PTR:InfoNoRecords; A:1; MX:1; 
x-microsoft-antispam-message-info: bfNAHnyfTmOurVF8VyYas+CSxIxs5hqbNdzTaAowKIH3LJgqwE9YMor3/kyMU/AamzwSisFeJ+TzjJLEqrUvxPq2oM191BuCRi7ZCxx6FqUH8ME8/XxpNkPYw8q2P/Juf7npw4gLtKUdeIqA04SiVrR3Kud6612rOpANwyIXX1jtNzXeRxSCrOZX46xsqWu40tL9t8WXhmyCd+ruSrjVpCuxyYM8RbippVSeHgqoZgPAPhtAnt5X/kViTFvNfNxa3P5K2oNATzTyQZ2JL20Rm9r403wIVSZegtsV1zPgET+igYt4TMKyoeUuNNyo/W+Uri5gQYhhTwnH2alWpGrPrdRSaW4heeG/Ik/od0i2j1M=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: virtuozzo.com
X-MS-Exchange-CrossTenant-Network-Message-Id: bd193eb9-fca5-4687-b90e-08d659082c66
X-MS-Exchange-CrossTenant-originalarrivaltime: 03 Dec 2018 10:14:56.0945 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 0bc7f26d-0264-416e-a6fc-8352af79c58f
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR08MB3875
X-detected-operating-system: by eggs.gnu.org: Windows 7 or 8 [fuzzy]
X-Received-From: 40.107.0.107
Subject: [Qemu-devel] [PATCH v10 4/9] block: introduce BDRV_REQ_ALLOCATE flag
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "kwolf@redhat.com" <kwolf@redhat.com>,
	Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	"berto@igalia.com" <berto@igalia.com>, Denis Lunev <den@virtuozzo.com>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>,
	"mreitz@redhat.com" <mreitz@redhat.com>,
	Anton Nefedov <anton.nefedov@virtuozzo.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The flag is supposed to indicate that the region of the disk image has
to be sufficiently allocated so it reads as zeroes.

The call with the flag set must return -ENOTSUP if allocation cannot
be done efficiently.
This has to be made sure of by both
  - the drivers that support the flag
  - and the common block layer (so it will not fall back to any slowpath
    (like writing zero buffers) in case the driver does not support
    the flag).

Signed-off-by: Anton Nefedov <anton.nefedov@virtuozzo.com>
Reviewed-by: Alberto Garcia <berto@igalia.com>
---
 include/block/block.h     |  9 ++++++++-
 include/block/block_int.h |  2 +-
 block/io.c                | 18 ++++++++++++++++--
 3 files changed, 25 insertions(+), 4 deletions(-)

diff --git a/include/block/block.h b/include/block/block.h
index 7f5453b45b..f571082415 100644
--- a/include/block/block.h
+++ b/include/block/block.h
@@ -83,8 +83,15 @@ typedef enum {
      */
     BDRV_REQ_SERIALISING        =3D 0x80,
=20
+    /* The BDRV_REQ_ALLOCATE flag is used to indicate that the driver has =
to
+     * efficiently allocate the space so it reads as zeroes, or return an =
error.
+     * If this flag is set then BDRV_REQ_ZERO_WRITE must also be set.
+     * This flag cannot be set together with BDRV_REQ_MAY_UNMAP.
+     */
+    BDRV_REQ_ALLOCATE           =3D 0x100,
+
     /* Mask of valid flags */
-    BDRV_REQ_MASK               =3D 0xff,
+    BDRV_REQ_MASK               =3D 0x1ff,
 } BdrvRequestFlags;
=20
 typedef struct BlockSizes {
diff --git a/include/block/block_int.h b/include/block/block_int.h
index f605622216..ff84c5d8aa 100644
--- a/include/block/block_int.h
+++ b/include/block/block_int.h
@@ -724,7 +724,7 @@ struct BlockDriverState {
      * their children. */
     unsigned int supported_write_flags;
     /* Flags honored during pwrite_zeroes (so far: BDRV_REQ_FUA,
-     * BDRV_REQ_MAY_UNMAP, BDRV_REQ_WRITE_UNCHANGED) */
+     * BDRV_REQ_MAY_UNMAP, BDRV_REQ_WRITE_UNCHANGED, BDRV_REQ_ALLOCATE) */
     unsigned int supported_zero_flags;
=20
     /* the following member gives a name to every node on the bs graph. */
diff --git a/block/io.c b/block/io.c
index bd9d688f8b..d9d7644858 100644
--- a/block/io.c
+++ b/block/io.c
@@ -1534,7 +1534,7 @@ static int coroutine_fn bdrv_co_do_pwrite_zeroes(Bloc=
kDriverState *bs,
             assert(!bs->supported_zero_flags);
         }
=20
-        if (ret =3D=3D -ENOTSUP) {
+        if (ret =3D=3D -ENOTSUP && !(flags & BDRV_REQ_ALLOCATE)) {
             /* Fall back to bounce buffer if write zeroes is unsupported *=
/
             BdrvRequestFlags write_flags =3D flags & ~BDRV_REQ_ZERO_WRITE;
=20
@@ -1702,7 +1702,9 @@ static int coroutine_fn bdrv_aligned_pwritev(BdrvChil=
d *child,
         !(flags & BDRV_REQ_ZERO_WRITE) && drv->bdrv_co_pwrite_zeroes &&
         qemu_iovec_is_zero(qiov)) {
         flags |=3D BDRV_REQ_ZERO_WRITE;
-        if (bs->detect_zeroes =3D=3D BLOCKDEV_DETECT_ZEROES_OPTIONS_UNMAP)=
 {
+        if (bs->detect_zeroes =3D=3D BLOCKDEV_DETECT_ZEROES_OPTIONS_UNMAP =
&&
+            !(flags & BDRV_REQ_ALLOCATE))
+        {
             flags |=3D BDRV_REQ_MAY_UNMAP;
         }
     }
@@ -1773,6 +1775,9 @@ static int coroutine_fn bdrv_co_do_zero_pwritev(BdrvC=
hild *child,
=20
     assert(flags & BDRV_REQ_ZERO_WRITE);
     if (head_padding_bytes || tail_padding_bytes) {
+        if (flags & BDRV_REQ_ALLOCATE) {
+            return -ENOTSUP;
+        }
         buf =3D qemu_blockalign(bs, align);
         iov =3D (struct iovec) {
             .iov_base   =3D buf,
@@ -1858,6 +1863,9 @@ int coroutine_fn bdrv_co_pwritev(BdrvChild *child,
     bool use_local_qiov =3D false;
     int ret;
=20
+    assert(!((flags & BDRV_REQ_ALLOCATE) && (flags & BDRV_REQ_MAY_UNMAP)))=
;
+    assert(!((flags & BDRV_REQ_ALLOCATE) && !(flags & BDRV_REQ_ZERO_WRITE)=
));
+
     trace_bdrv_co_pwritev(child->bs, offset, bytes, flags);
=20
     if (!bs->drv) {
@@ -1980,6 +1988,12 @@ int coroutine_fn bdrv_co_pwrite_zeroes(BdrvChild *ch=
ild, int64_t offset,
 {
     trace_bdrv_co_pwrite_zeroes(child->bs, offset, bytes, flags);
=20
+    if ((flags & BDRV_REQ_ALLOCATE) &&
+        !(child->bs->supported_zero_flags & BDRV_REQ_ALLOCATE))
+    {
+        return -ENOTSUP;
+    }
+
     if (!(child->bs->open_flags & BDRV_O_UNMAP)) {
         flags &=3D ~BDRV_REQ_MAY_UNMAP;
     }
--=20
2.17.1


