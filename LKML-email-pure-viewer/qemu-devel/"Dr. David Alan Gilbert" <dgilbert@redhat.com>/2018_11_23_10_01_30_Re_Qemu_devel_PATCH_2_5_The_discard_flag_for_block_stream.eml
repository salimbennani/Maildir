Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:33:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 410D358037D
	for <like.xu@linux.intel.com>; Fri, 23 Nov 2018 02:02:15 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 02:02:14 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AiHHc8R0eG6l2hJw+smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesWKPjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPAY28?=
 =?us-ascii?q?YIQTAOUcP+lXoZTzp0MMoBW8CgSgGe3ixiNWiX/txqA6z/gtHBva0AA8Bd8Crn?=
 =?us-ascii?q?LZp8j1OqcIVuC1ybHFwTvNYfNMwzv29YbGfQo/ofGNQL17bNbcyU01GAPDk16e?=
 =?us-ascii?q?qI3lPzeO2esTqWib8+RsXv+ohmE6pAFxozyvydwyhYnTmoIY0UrE+jtkz4Y1P9?=
 =?us-ascii?q?K4VFR3bsKjEJtVriyXMZZ9TMA6Q2xwpio21r4LtYSmcCQXy5kr3QDTZvKHfoSS?=
 =?us-ascii?q?/x7uVv6dLSlkiH9hYr6zmhi//Va6xuHhVcS53kxGojRGn9TKq3sDzQbc6tKdRf?=
 =?us-ascii?q?t45kqh2SiA1wTU6uxcJUA0lLHbK4I6wrIqmZoTt1nDEjXxmEXsg6+abkQk+u62?=
 =?us-ascii?q?5OT7erjquIOQOoxuhg3jL6gjmdazDfo2PwUORWSX5Oax2KXm/ULjQbVKivM2kr?=
 =?us-ascii?q?PesJDfPckbv7C2AwpI0oo69hmwESmm38ocnXUeN11Ffw+Hj471NF7QO/D0CvO/?=
 =?us-ascii?q?g1WvkDh13fzHMaDhD43JLnjClrfhYLl851RdyAo10dBQ+ZZUBqsdL/L0X0/8r9?=
 =?us-ascii?q?rYDhg/Mwy7xebnFc9x1oQEWWKAGqOZKr/dsUeU5uIzJOmBfIsVuDf+K/c7/fLv?=
 =?us-ascii?q?gmI5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5Sey5wGCESiNZMnauQ7?=
 =?us-ascii?q?ontHZ8DIO9EZyFQIerj7qcmiChEdpTb2FCD1mKVnDwa4SDXexLcS+XP4ptnyIJ?=
 =?us-ascii?q?UeucTZQ830SrvQ7+1701N+fR52gUuIzu0J1v6vTOmAou3TpzCcubzieKVW4jhX?=
 =?us-ascii?q?4CRTI9wPVip1dgwEyIy6lyjq9kEol64f9TXxZyDp7dye93FdH5WkqVd9GFUlu3?=
 =?us-ascii?q?BM6mADcyQ8wwyN8mfUdnB8ilnALEmSGtBulGuaaMAcl+3rial1T4Ocdxg1/C3a?=
 =?us-ascii?q?9poFgiSMZVKSfu0qJw9gzZCpTVu1+Um6ajaeIX2yubpzTL9naHoEwNCF04aq7C?=
 =?us-ascii?q?R31KIxKO9dk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAADkzvdbhxHrdtBiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowRX4segg2XO4FzFBgUhDaEHyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpL4I2BQIDGgEGglsBAQEBAgEBAjcMCikDAgEBAgYBAQoYCR0IAwELB?=
 =?us-ascii?q?UkTBYMcgXoIAQSoVYoXjAkRBoFAP4ERgmQuiDOCJgKPGZBpBwICkSIjColHhze?=
 =?us-ascii?q?YMIFGgg1wFYMngiQDF44cQTGBBxyKD4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AIAADkzvdbhxHrdtBiHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowRX4segg2XO4FzFBgUhDaEHyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2B?=
 =?us-ascii?q?QIDGgEGglsBAQEBAgEBAjcMCikDAgEBAgYBAQoYCR0IAwELBUkTBYMcgXoIAQS?=
 =?us-ascii?q?oVYoXjAkRBoFAP4ERgmQuiDOCJgKPGZBpBwICkSIjColHhzeYMIFGgg1wFYMng?=
 =?us-ascii?q?iQDF44cQTGBBxyKD4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="54041312"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Nov 2018 02:02:14 -0800
Received: from localhost ([::1]:51326 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gQ8Ht-0000Ua-GS
	for like.xu@linux.intel.com; Fri, 23 Nov 2018 05:02:13 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:41761)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgilbert@redhat.com>) id 1gQ8HW-0000Th-JR
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:01:51 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgilbert@redhat.com>) id 1gQ8HU-0005FF-HT
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:01:50 -0500
Received: from mx1.redhat.com ([209.132.183.28]:37868)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgilbert@redhat.com>)
	id 1gQ8HN-00056o-74; Fri, 23 Nov 2018 05:01:41 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id BCA4BC062EC6;
	Fri, 23 Nov 2018 10:01:39 +0000 (UTC)
Received: from work-vm (unknown [10.36.118.34])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id D8DAD1054FD3;
	Fri, 23 Nov 2018 10:01:32 +0000 (UTC)
Date: Fri, 23 Nov 2018 10:01:30 +0000
From: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
To: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
Message-ID: <20181123100129.GA2373@work-vm>
References: <1542912487-279165-1-git-send-email-andrey.shinkevich@virtuozzo.com>
	<1542912487-279165-3-git-send-email-andrey.shinkevich@virtuozzo.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1542912487-279165-3-git-send-email-andrey.shinkevich@virtuozzo.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Fri, 23 Nov 2018 10:01:39 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 2/5] The discard flag for block stream
 operation
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, vsementsov@virtuozzo.com, qemu-block@nongnu.org,
	jcody@redhat.com, armbru@redhat.com, qemu-devel@nongnu.org,
	den@openvz.org, mreitz@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

* Andrey Shinkevich (andrey.shinkevich@virtuozzo.com) wrote:
> Adding a parameter to QMP block-stream command to allow discarding
> blocks in the backing chain while blocks are being copied to the
> active layer.
> 
> Signed-off-by: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
> ---
>  block/stream.c            | 3 +--
>  blockdev.c                | 8 +++++++-
>  hmp-commands.hx           | 4 ++--
>  hmp.c                     | 4 +++-
>  include/block/block_int.h | 2 +-
>  qapi/block-core.json      | 5 ++++-
>  6 files changed, 18 insertions(+), 8 deletions(-)
> 
> diff --git a/block/stream.c b/block/stream.c
> index 9e85954..e844e94 100644
> --- a/block/stream.c
> +++ b/block/stream.c
> @@ -584,10 +584,9 @@ static const BlockJobDriver stream_job_driver = {
>  
>  void stream_start(const char *job_id, BlockDriverState *bs,
>                    BlockDriverState *base, const char *backing_file_str,
> -                  int creation_flags, int64_t speed,
> +                  int creation_flags, int64_t speed, bool discard,
>                    BlockdevOnError on_error, Error **errp)
>  {
> -    const bool discard = false;
>      StreamBlockJob *s = NULL;
>      BlockDriverState *iter;
>      int orig_bs_flags;
> diff --git a/blockdev.c b/blockdev.c
> index 81f95d9..333592e 100644
> --- a/blockdev.c
> +++ b/blockdev.c
> @@ -3141,6 +3141,7 @@ void qmp_block_stream(bool has_job_id, const char *job_id, const char *device,
>                        bool has_base_node, const char *base_node,
>                        bool has_backing_file, const char *backing_file,
>                        bool has_speed, int64_t speed,
> +                      bool has_discard, bool discard,
>                        bool has_on_error, BlockdevOnError on_error,
>                        bool has_auto_finalize, bool auto_finalize,
>                        bool has_auto_dismiss, bool auto_dismiss,
> @@ -3157,6 +3158,10 @@ void qmp_block_stream(bool has_job_id, const char *job_id, const char *device,
>          on_error = BLOCKDEV_ON_ERROR_REPORT;
>      }
>  
> +    if (!has_discard) {
> +        discard = false;
> +    }
> +
>      bs = bdrv_lookup_bs(device, device, errp);
>      if (!bs) {
>          return;
> @@ -3221,7 +3226,8 @@ void qmp_block_stream(bool has_job_id, const char *job_id, const char *device,
>      }
>  
>      stream_start(has_job_id ? job_id : NULL, bs, base_bs, base_name,
> -                 job_flags, has_speed ? speed : 0, on_error, &local_err);
> +                 job_flags, has_speed ? speed : 0,
> +                 discard, on_error, &local_err);
>      if (local_err) {
>          error_propagate(errp, local_err);
>          goto out;
> diff --git a/hmp-commands.hx b/hmp-commands.hx
> index db0c681..a7e2a10 100644
> --- a/hmp-commands.hx
> +++ b/hmp-commands.hx
> @@ -95,8 +95,8 @@ ETEXI
>  
>      {
>          .name       = "block_stream",
> -        .args_type  = "device:B,speed:o?,base:s?",
> -        .params     = "device [speed [base]]",
> +        .args_type  = "device:B,speed:o?,base:s?,discard:-d",
> +        .params     = "device [speed [base]] [-d]",
>          .help       = "copy data from a backing file into a block device",
>          .cmd        = hmp_block_stream,
>      },
> diff --git a/hmp.c b/hmp.c
> index 7828f93..0d263e4 100644
> --- a/hmp.c
> +++ b/hmp.c
> @@ -1920,9 +1920,11 @@ void hmp_block_stream(Monitor *mon, const QDict *qdict)
>      const char *device = qdict_get_str(qdict, "device");
>      const char *base = qdict_get_try_str(qdict, "base");
>      int64_t speed = qdict_get_try_int(qdict, "speed", 0);
> +    bool discard = qdict_get_try_bool(qdict, "discard", false);
>  
>      qmp_block_stream(true, device, device, base != NULL, base, false, NULL,
> -                     false, NULL, qdict_haskey(qdict, "speed"), speed, true,
> +                     false, NULL, qdict_haskey(qdict, "speed"), speed,
> +                     true, discard, true,
>                       BLOCKDEV_ON_ERROR_REPORT, false, false, false, false,
>                       &error);

Yep, so I think those are better from the HMP side; so purely from the
HMP side;


Acked-by: Dr. David Alan Gilbert <dgilbert@redhat.com>

> diff --git a/include/block/block_int.h b/include/block/block_int.h
> index f605622..2660336 100644
> --- a/include/block/block_int.h
> +++ b/include/block/block_int.h
> @@ -970,7 +970,7 @@ int is_windows_drive(const char *filename);
>   */
>  void stream_start(const char *job_id, BlockDriverState *bs,
>                    BlockDriverState *base, const char *backing_file_str,
> -                  int creation_flags, int64_t speed,
> +                  int creation_flags, int64_t speed, bool discard,
>                    BlockdevOnError on_error, Error **errp);
>  
>  /**
> diff --git a/qapi/block-core.json b/qapi/block-core.json
> index d4fe710..f4538fa 100644
> --- a/qapi/block-core.json
> +++ b/qapi/block-core.json
> @@ -2334,6 +2334,9 @@
>  #
>  # @speed:  the maximum speed, in bytes per second
>  #
> +# @discard: true to delete blocks duplicated in old backing files.
> +#           (default: false). Since 3.1.
> +#
>  # @on-error: the action to take on an error (default report).
>  #            'stop' and 'enospc' can only be used if the block device
>  #            supports io-status (see BlockInfo).  Since 1.3.
> @@ -2366,7 +2369,7 @@
>  { 'command': 'block-stream',
>    'data': { '*job-id': 'str', 'device': 'str', '*base': 'str',
>              '*base-node': 'str', '*backing-file': 'str', '*speed': 'int',
> -            '*on-error': 'BlockdevOnError',
> +            '*discard': 'bool', '*on-error': 'BlockdevOnError',
>              '*auto-finalize': 'bool', '*auto-dismiss': 'bool' } }
>  
>  ##
> -- 
> 1.8.3.1
> 
--
Dr. David Alan Gilbert / dgilbert@redhat.com / Manchester, UK

