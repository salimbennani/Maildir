Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:01:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 42C2C580522
	for <like.xu@linux.intel.com>; Sun, 23 Dec 2018 13:13:17 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 23 Dec 2018 13:13:17 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AB31GHhPRGrTaerH1Yf4l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/X/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhMtyg6JVrx2uuxNxzZPMYIyXNvRzcb7RcN0GSWVfRcZcTDBBD4Cm?=
 =?us-ascii?q?YocTFecNIeRVoo/grFUOtxu+AgysCfvhxjFNgXn2w6890+siCQ3ewQcvHNUOsH?=
 =?us-ascii?q?DIrNL3MqceX/2+wa7VwjXCdfNWxTf85JLJch89v/6AR7JwcdfKxEkgEgPKlFSQ?=
 =?us-ascii?q?qYj/MzyJ0eQNtnGW4ux9XuyhjG4nrht+ojmpxso0jYnJnpwaylbf9SV+3YY1I8?=
 =?us-ascii?q?C3RFRnbt6jFZtdsTyROYhuQs46XW1kpCU3xqcbtZKmfyUG0ooryhDfZvCdboSF?=
 =?us-ascii?q?4ArvWPiLLjtkmX5ofbyyiheu/kWl1+HwS8e53VNUoidKiNbBuHUA2hnT58WBV/?=
 =?us-ascii?q?Bz5F2u2SyV2ADW8uxEIV47la7cK5M5xr4wl4ETsVjYHiPsl0X2irKWel8j+uiy?=
 =?us-ascii?q?5OTrerTmppmCOI9okgzyLLgil8+lDeglLwQDXHKX9fqy2bDj50H1XbdHguUzkq?=
 =?us-ascii?q?bDsZDaIcobprS+Aw9Qyosj8giwDzK70NgBgHYIMkxFdwyDj4TwIF7OJ+34DfGj?=
 =?us-ascii?q?jFuyizdnwPTGPrziAprTNHTCn6rhcK55605dzgoz0N9e64hVCrEHPPL8REvxuM?=
 =?us-ascii?q?bEAR8+Ngy52ODnCNJ71oMRX2KPH7WVMKTIsV+H/u4vOfWDZJcJuDbhLPgo//ru?=
 =?us-ascii?q?jX46mVADZ6Wo0oYXZWu8HvRnJUWZfHXtjs0AEWcMogoxUujqhEeeXj5UYnbhF5?=
 =?us-ascii?q?86/SwxXYK6EZ/YFMfqhL2awDz9GJpQaWZbTFeWHjDtfoSAXv4KLyWKPs5mlCdD?=
 =?us-ascii?q?TLWkVsot2A+jsFzHzaF6JL/R8ywcqZWxzdVw+qjfmA8/8XluAt2A3nqRZ2dzmG?=
 =?us-ascii?q?wOWnkxxq8oulF3yFqIzf1lhedFH8dY/fJDX1QGMsvFwulnTtz/RA/FVtGOTlmg?=
 =?us-ascii?q?X5OhGz5iYMg2xopEQPtjkto5yljx2C62irlf3+iHBYYo4+Td1HW3J9tVxHPP1a?=
 =?us-ascii?q?1nhF4jFJgcfVa6j7JyolCAT7XClF+Uwv6n?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BdAADT+R9chxHrdtBjHAECBAEIBAGBU?=
 =?us-ascii?q?wYBDAGBMIE5gSmDPz+IeIsaKYE/ixiMcIF2EAEBGAcNhzAiNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIGw4jDII6BQIDGA6CYQMDAQIJFwQLAQ0BBQoMHQECAQIBAgYBA?=
 =?us-ascii?q?QUDDQ8CIgQCAgMBHQIRAQUBHBkFgx0BgWgBAxUBBIohkAg8ixl8FgUBF4J3BYJ?=
 =?us-ascii?q?EgWkKGScNXjKBBQIGEnmGc4MlgRx6gRyBETOFNoUyglcCiUMKKIVugVKECYtaM?=
 =?us-ascii?q?wcCAoMaixqDMxiJe4drj2yKFgIEAgQFAgUPIYEnAoIKcFAxgjsJghsDF4NKgkK?=
 =?us-ascii?q?IEkAxAYEGiy+BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BdAADT+R9chxHrdtBjHAECBAEIBAGBUwYBDAGBMIE5gSm?=
 =?us-ascii?q?DPz+IeIsaKYE/ixiMcIF2EAEBGAcNhzAiNQgNAQMBAQEBAQECARMBAQEKCwkIG?=
 =?us-ascii?q?w4jDII6BQIDGA6CYQMDAQIJFwQLAQ0BBQoMHQECAQIBAgYBAQUDDQ8CIgQCAgM?=
 =?us-ascii?q?BHQIRAQUBHBkFgx0BgWgBAxUBBIohkAg8ixl8FgUBF4J3BYJEgWkKGScNXjKBB?=
 =?us-ascii?q?QIGEnmGc4MlgRx6gRyBETOFNoUyglcCiUMKKIVugVKECYtaMwcCAoMaixqDMxi?=
 =?us-ascii?q?Je4drj2yKFgIEAgQFAgUPIYEnAoIKcFAxgjsJghsDF4NKgkKIEkAxAYEGiy+Bd?=
 =?us-ascii?q?wEB?=
X-IronPort-AV: E=Sophos;i="5.56,389,1539673200"; 
   d="scan'208";a="58656933"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Dec 2018 13:13:16 -0800
Received: from localhost ([127.0.0.1]:59814 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gbB3i-00081C-Ex
	for like.xu@linux.intel.com; Sun, 23 Dec 2018 16:13:14 -0500
Received: from eggs.gnu.org ([208.118.235.92]:52180)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dirty.ice.hu@gmail.com>) id 1gbAjr-0007WT-Vx
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:52:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dirty.ice.hu@gmail.com>) id 1gbAjp-0001yy-Tf
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:52:43 -0500
Received: from mail-wm1-x343.google.com ([2a00:1450:4864:20::343]:39956)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <dirty.ice.hu@gmail.com>)
	id 1gbAjp-0001va-Hf
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:52:41 -0500
Received: by mail-wm1-x343.google.com with SMTP id f188so10406929wmf.5
	for <qemu-devel@nongnu.org>; Sun, 23 Dec 2018 12:52:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=nrXQsUZtGs3cN6Zxy1oriXZA+DwG5rkLKgE6Qe8K8P4=;
	b=cxlNw753oSk6BWLlYDqwApcGAM9+Fu5nHQnaNdu/hO518aFDpG/g2GdBcii7gzfje9
	LUeyKUXYDE6q6KsAwvoC80Oyde3CZ3IxTdsqGIU3SxkbMTDEBuFsgJwxOQ8Xo0RND6mI
	SA5Sywl11a7ewONz5brl3c3y/kFoKNyhvHoMq9z6Q3fY7Y8gi6UI2UIXeDNEG+L4qrO0
	QNXtu1BzMLGm2uLg5Tdazq9vjakpizW6isYygiHLY791Xb8/2X10RW5jhsDqmLnAj5qG
	6TY8lKSRGp7XW1usIhOejo25fCtv5sYTLffwSC4xr2iIskSy/1hUuXUs7Y/XWxd/7lm6
	YMkg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=nrXQsUZtGs3cN6Zxy1oriXZA+DwG5rkLKgE6Qe8K8P4=;
	b=e7FCfkUeL3kX54Xwe9pY9u+BiH0MDP/qigYjt1MGwEInf1e5p6En94hN+AyOVtlMo4
	8SjqPw9oxZBBlKH2VhNmbAGcsVa6/jS8ELsAv278QHHyp5AfuZebNDo40DNUuxdgWmHq
	XUislbejNhMe4TPcHZBN0uO//RU6r3j16zG9XIz6wx8jkY67qrSXQM3sookzsyqcEWmd
	fEyKyhYP2gDpXq+6U9K6u3yGIgg08gIzQk5skqkuzCFAIZO3VA/ezKTNy8S4sCE7LLXq
	/aTMyB2qrhAhUuCq2ce1EVLWC03BiyhNbUwrIJ+NPMtDe9vVaCwXnlMYJtfGIcpsfJNM
	VNpw==
X-Gm-Message-State: AJcUukcQeQT/IN0rTF0weBPkwIDLoVilPOH2lV/eh/vUsAgsVo3s7m6h
	g9TcUv8NfmnYtGLgZ7SrBTJrwsAhaJc=
X-Google-Smtp-Source: ALg8bN4t2viuBYFzWS6PCcxLG7ZtbOr0sPdPPGn1+SFl2JPWrjRwvB4dO7pxKGJTlxyrXK9vFaIy7g==
X-Received: by 2002:a1c:888d:: with SMTP id
	k135mr10472164wmd.137.1545598360090; 
	Sun, 23 Dec 2018 12:52:40 -0800 (PST)
Received: from nullptr.home.dirty-ice.org
	(2a01-036c-0113-24a3-0000-0000-0000-0005.pool6.digikabel.hu.
	[2a01:36c:113:24a3::5]) by smtp.gmail.com with ESMTPSA id
	g198sm25456920wmd.23.2018.12.23.12.52.39
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Sun, 23 Dec 2018 12:52:39 -0800 (PST)
From: "=?UTF-8?q?K=C5=91v=C3=A1g=C3=B3=2C=20Zolt=C3=A1n?="
	<dirty.ice.hu@gmail.com>
X-Google-Original-From: =?UTF-8?q?K=C5=91v=C3=A1g=C3=B3=2C=20Zolt=C3=A1n?=
	<DirtY.iCE.hu@gmail.com>
To: qemu-devel@nongnu.org
Date: Sun, 23 Dec 2018 21:51:47 +0100
Message-Id: <26249b5186151dd3be871730b41b87959037540f.1545598229.git.DirtY.iCE.hu@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1545598229.git.DirtY.iCE.hu@gmail.com>
References: <cover.1545598229.git.DirtY.iCE.hu@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::343
Subject: [Qemu-devel] [PATCH v2 11/52] ossaudio: port to -audiodev config
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Gerd Hoffmann <kraxel@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Kővágó, Zoltán <DirtY.iCE.hu@gmail.com>
---
 audio/audio_legacy.c |  17 +++++
 audio/ossaudio.c     | 153 ++++++++++++-------------------------------
 2 files changed, 59 insertions(+), 111 deletions(-)

diff --git a/audio/audio_legacy.c b/audio/audio_legacy.c
index 48a22c390a..f37407586b 100644
--- a/audio/audio_legacy.c
+++ b/audio/audio_legacy.c
@@ -81,6 +81,21 @@ SimpleEnvMap dsound_map[] = {
     { /* End of list */ }
 };
 
+SimpleEnvMap oss_map[] = {
+    { "QEMU_AUDIO_DAC_TRY_POLL", "oss-out.try-poll", ENV_TRANSFORM_BOOL },
+    { "QEMU_AUDIO_ADC_TRY_POLL", "oss-in.try-poll", ENV_TRANSFORM_BOOL },
+
+    { "QEMU_OSS_FRAGSIZE", "buffer-len", ENV_TRANSFORM_BYTES_TO_USECS_OUT },
+    { "QEMU_OSS_NFRAGS", "buffer-count" },
+    { "QEMU_OSS_MMAP", "try-mmap", ENV_TRANSFORM_BOOL },
+    { "QEMU_OSS_DAC_DEV", "oss-out.dev" },
+    { "QEMU_OSS_ADC_DEV", "oss-in.dev" },
+    { "QEMU_OSS_EXCLUSIVE", "exclusive", ENV_TRANSFORM_BOOL },
+    { "QEMU_OSS_POLICY", "dsp-policy" },
+
+    { /* End of list */ }
+};
+
 static unsigned long long toull(const char *str)
 {
     unsigned long long ret;
@@ -255,6 +270,8 @@ static void legacy_opt(const char *drv)
         handle_env_opts(opts, coreaudio_map);
     } else if (strcmp(drv, "dsound") == 0) {
         handle_env_opts(opts, dsound_map);
+    } else if (strcmp(drv, "oss") == 0) {
+        handle_env_opts(opts, oss_map);
     }
 }
 
diff --git a/audio/ossaudio.c b/audio/ossaudio.c
index e0cadbef29..83ff1d2ebd 100644
--- a/audio/ossaudio.c
+++ b/audio/ossaudio.c
@@ -27,6 +27,7 @@
 #include "qemu-common.h"
 #include "qemu/main-loop.h"
 #include "qemu/host-utils.h"
+#include "qapi/opts-visitor.h"
 #include "audio.h"
 #include "trace.h"
 
@@ -37,16 +38,6 @@
 #define USE_DSP_POLICY
 #endif
 
-typedef struct OSSConf {
-    int try_mmap;
-    int nfrags;
-    int fragsize;
-    const char *devpath_out;
-    const char *devpath_in;
-    int exclusive;
-    int policy;
-} OSSConf;
-
 typedef struct OSSVoiceOut {
     HWVoiceOut hw;
     void *pcm_buf;
@@ -56,7 +47,7 @@ typedef struct OSSVoiceOut {
     int fragsize;
     int mmapped;
     int pending;
-    OSSConf *conf;
+    Audiodev *dev;
 } OSSVoiceOut;
 
 typedef struct OSSVoiceIn {
@@ -65,12 +56,12 @@ typedef struct OSSVoiceIn {
     int fd;
     int nfrags;
     int fragsize;
-    OSSConf *conf;
+    Audiodev *dev;
 } OSSVoiceIn;
 
 struct oss_params {
     int freq;
-    AudioFormat fmt;
+    int fmt;
     int nchannels;
     int nfrags;
     int fragsize;
@@ -262,19 +253,26 @@ static int oss_get_version (int fd, int *version, const char *typ)
 }
 #endif
 
-static int oss_open (int in, struct oss_params *req,
-                     struct oss_params *obt, int *pfd, OSSConf* conf)
+static int oss_open(int in, struct oss_params *req, audsettings *as,
+                    struct oss_params *obt, int *pfd, Audiodev *dev)
 {
+    AudiodevOssOptions *oopts = &dev->u.oss;
+    AudiodevOssPerDirectionOptions *opdo = in ? oopts->oss_in : oopts->oss_out;
+    AudiodevPerDirectionOptions *pdo = in ? dev->in : dev->out;
     int fd;
-    int oflags = conf->exclusive ? O_EXCL : 0;
+    int oflags = (oopts->has_exclusive && oopts->exclusive) ? O_EXCL : 0;
     audio_buf_info abinfo;
     int fmt, freq, nchannels;
     int setfragment = 1;
-    const char *dspname = in ? conf->devpath_in : conf->devpath_out;
+    const char *dspname = opdo->has_dev ? opdo->dev : "/dev/dsp";
     const char *typ = in ? "ADC" : "DAC";
+#ifdef USE_DSP_POLICY
+    int policy = oopts->has_dsp_policy ? oopts->dsp_policy : 5;
+#endif
 
     /* Kludge needed to have working mmap on Linux */
-    oflags |= conf->try_mmap ? O_RDWR : (in ? O_RDONLY : O_WRONLY);
+    oflags |= (oopts->has_try_mmap && oopts->try_mmap) ?
+        O_RDWR : (in ? O_RDONLY : O_WRONLY);
 
     fd = open (dspname, oflags | O_NONBLOCK);
     if (-1 == fd) {
@@ -285,6 +283,8 @@ static int oss_open (int in, struct oss_params *req,
     freq = req->freq;
     nchannels = req->nchannels;
     fmt = req->fmt;
+    req->nfrags = pdo->has_buffer_count ? pdo->buffer_count : 4;
+    req->fragsize = audio_buffer_bytes(pdo, as, 23220);
 
     if (ioctl (fd, SNDCTL_DSP_SAMPLESIZE, &fmt)) {
         oss_logerr2 (errno, typ, "Failed to set sample size %d\n", req->fmt);
@@ -308,18 +308,18 @@ static int oss_open (int in, struct oss_params *req,
     }
 
 #ifdef USE_DSP_POLICY
-    if (conf->policy >= 0) {
+    if (policy >= 0) {
         int version;
 
         if (!oss_get_version (fd, &version, typ)) {
             trace_oss_version(version);
 
             if (version >= 0x040000) {
-                int policy = conf->policy;
-                if (ioctl (fd, SNDCTL_DSP_POLICY, &policy)) {
+                int policy2 = policy;
+                if (ioctl (fd, SNDCTL_DSP_POLICY, &policy2)) {
                     oss_logerr2 (errno, typ,
                                  "Failed to set timing policy to %d\n",
-                                 conf->policy);
+                                 policy);
                     goto err;
                 }
                 setfragment = 0;
@@ -502,17 +502,16 @@ static int oss_init_out(HWVoiceOut *hw, struct audsettings *as,
     int fd;
     AudioFormat effective_fmt;
     struct audsettings obt_as;
-    OSSConf *conf = drv_opaque;
+    Audiodev *dev = drv_opaque;
+    AudiodevOssOptions *oopts = &dev->u.oss;
 
     oss->fd = -1;
 
     req.fmt = aud_to_ossfmt (as->fmt, as->endianness);
     req.freq = as->freq;
     req.nchannels = as->nchannels;
-    req.fragsize = conf->fragsize;
-    req.nfrags = conf->nfrags;
 
-    if (oss_open (0, &req, &obt, &fd, conf)) {
+    if (oss_open(0, &req, as, &obt, &fd, dev)) {
         return -1;
     }
 
@@ -539,7 +538,7 @@ static int oss_init_out(HWVoiceOut *hw, struct audsettings *as,
     hw->samples = (obt.nfrags * obt.fragsize) >> hw->info.shift;
 
     oss->mmapped = 0;
-    if (conf->try_mmap) {
+    if (oopts->has_try_mmap && oopts->try_mmap) {
         oss->pcm_buf = mmap (
             NULL,
             hw->samples << hw->info.shift,
@@ -597,7 +596,7 @@ static int oss_init_out(HWVoiceOut *hw, struct audsettings *as,
     }
 
     oss->fd = fd;
-    oss->conf = conf;
+    oss->dev = dev;
     return 0;
 }
 
@@ -605,16 +604,12 @@ static int oss_ctl_out (HWVoiceOut *hw, int cmd, ...)
 {
     int trig;
     OSSVoiceOut *oss = (OSSVoiceOut *) hw;
+    AudiodevOssPerDirectionOptions *opdo = oss->dev->u.oss.oss_out;
 
     switch (cmd) {
     case VOICE_ENABLE:
         {
-            va_list ap;
-            int poll_mode;
-
-            va_start (ap, cmd);
-            poll_mode = va_arg (ap, int);
-            va_end (ap);
+            bool poll_mode = !opdo->has_try_poll || opdo->try_poll;
 
             ldebug ("enabling voice\n");
             if (poll_mode) {
@@ -669,16 +664,14 @@ static int oss_init_in(HWVoiceIn *hw, struct audsettings *as, void *drv_opaque)
     int fd;
     AudioFormat effective_fmt;
     struct audsettings obt_as;
-    OSSConf *conf = drv_opaque;
+    Audiodev *dev = drv_opaque;
 
     oss->fd = -1;
 
     req.fmt = aud_to_ossfmt (as->fmt, as->endianness);
     req.freq = as->freq;
     req.nchannels = as->nchannels;
-    req.fragsize = conf->fragsize;
-    req.nfrags = conf->nfrags;
-    if (oss_open (1, &req, &obt, &fd, conf)) {
+    if (oss_open(1, &req, as, &obt, &fd, dev)) {
         return -1;
     }
 
@@ -712,7 +705,7 @@ static int oss_init_in(HWVoiceIn *hw, struct audsettings *as, void *drv_opaque)
     }
 
     oss->fd = fd;
-    oss->conf = conf;
+    oss->dev = dev;
     return 0;
 }
 
@@ -803,16 +796,12 @@ static int oss_read (SWVoiceIn *sw, void *buf, int size)
 static int oss_ctl_in (HWVoiceIn *hw, int cmd, ...)
 {
     OSSVoiceIn *oss = (OSSVoiceIn *) hw;
+    AudiodevOssPerDirectionOptions *opdo = oss->dev->u.oss.oss_out;
 
     switch (cmd) {
     case VOICE_ENABLE:
         {
-            va_list ap;
-            int poll_mode;
-
-            va_start (ap, cmd);
-            poll_mode = va_arg (ap, int);
-            va_end (ap);
+            bool poll_mode = !opdo->has_try_poll || opdo->try_poll;
 
             if (poll_mode) {
                 oss_poll_in (hw);
@@ -832,82 +821,25 @@ static int oss_ctl_in (HWVoiceIn *hw, int cmd, ...)
     return 0;
 }
 
-static OSSConf glob_conf = {
-    .try_mmap = 0,
-    .nfrags = 4,
-    .fragsize = 4096,
-    .devpath_out = "/dev/dsp",
-    .devpath_in = "/dev/dsp",
-    .exclusive = 0,
-    .policy = 5
-};
-
 static void *oss_audio_init(Audiodev *dev)
 {
-    OSSConf *conf = g_malloc(sizeof(OSSConf));
-    *conf = glob_conf;
+    AudiodevOssOptions *oopts;
+    assert(dev->driver == AUDIODEV_DRIVER_OSS);
 
-    if (access(conf->devpath_in, R_OK | W_OK) < 0 ||
-        access(conf->devpath_out, R_OK | W_OK) < 0) {
-        g_free(conf);
+    oopts = &dev->u.oss;
+    if (access(oopts->oss_in->has_dev ? oopts->oss_in->dev : "/dev/dsp",
+               R_OK | W_OK) < 0 ||
+        access(oopts->oss_out->has_dev ? oopts->oss_out->dev : "/dev/dsp",
+               R_OK | W_OK) < 0) {
         return NULL;
     }
-    return conf;
+    return dev;
 }
 
 static void oss_audio_fini (void *opaque)
 {
-    g_free(opaque);
 }
 
-static struct audio_option oss_options[] = {
-    {
-        .name  = "FRAGSIZE",
-        .tag   = AUD_OPT_INT,
-        .valp  = &glob_conf.fragsize,
-        .descr = "Fragment size in bytes"
-    },
-    {
-        .name  = "NFRAGS",
-        .tag   = AUD_OPT_INT,
-        .valp  = &glob_conf.nfrags,
-        .descr = "Number of fragments"
-    },
-    {
-        .name  = "MMAP",
-        .tag   = AUD_OPT_BOOL,
-        .valp  = &glob_conf.try_mmap,
-        .descr = "Try using memory mapped access"
-    },
-    {
-        .name  = "DAC_DEV",
-        .tag   = AUD_OPT_STR,
-        .valp  = &glob_conf.devpath_out,
-        .descr = "Path to DAC device"
-    },
-    {
-        .name  = "ADC_DEV",
-        .tag   = AUD_OPT_STR,
-        .valp  = &glob_conf.devpath_in,
-        .descr = "Path to ADC device"
-    },
-    {
-        .name  = "EXCLUSIVE",
-        .tag   = AUD_OPT_BOOL,
-        .valp  = &glob_conf.exclusive,
-        .descr = "Open device in exclusive mode (vmix won't work)"
-    },
-#ifdef USE_DSP_POLICY
-    {
-        .name  = "POLICY",
-        .tag   = AUD_OPT_INT,
-        .valp  = &glob_conf.policy,
-        .descr = "Set the timing policy of the device, -1 to use fragment mode",
-    },
-#endif
-    { /* End of list */ }
-};
-
 static struct audio_pcm_ops oss_pcm_ops = {
     .init_out = oss_init_out,
     .fini_out = oss_fini_out,
@@ -925,7 +857,6 @@ static struct audio_pcm_ops oss_pcm_ops = {
 static struct audio_driver oss_audio_driver = {
     .name           = "oss",
     .descr          = "OSS http://www.opensound.com",
-    .options        = oss_options,
     .init           = oss_audio_init,
     .fini           = oss_audio_fini,
     .pcm_ops        = &oss_pcm_ops,
-- 
2.20.1


