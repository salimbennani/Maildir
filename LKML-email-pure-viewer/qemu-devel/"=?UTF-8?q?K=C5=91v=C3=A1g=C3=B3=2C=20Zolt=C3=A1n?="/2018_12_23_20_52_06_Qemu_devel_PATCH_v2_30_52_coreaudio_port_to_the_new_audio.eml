Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:01:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 60598580522
	for <like.xu@linux.intel.com>; Sun, 23 Dec 2018 13:21:43 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Dec 2018 13:21:43 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A/8DRCBcW75Zv4lQwV3jx6ZDJlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW/ZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgqxcoh2hqRNwzJLbbo+ILPpzfKHTcNwHSWdPQspeSTdBD5ig?=
 =?us-ascii?q?b4YMFecNIfxVo5X/qlYIsBCwBROsBOTqyjJQiHP42Ko80/ojFgHJ3xQsB88Fv3?=
 =?us-ascii?q?fTrNXxKKcVU+a1wKfVxjjEcvxW2C396JTIcxw7oPGDQax/fdDRyUkyDA7FgVCQ?=
 =?us-ascii?q?ppbkPzORzOgCr2+b7+95WO+plmUpqBlxryCxysswiYTFnJ8Zxk3H+Clj3oo4K9?=
 =?us-ascii?q?21RFRmbdOmCJdcqTuVO5drTs4nTWxluTo1x7gbtZKmciUHzYoryhHFZPGJdoWF?=
 =?us-ascii?q?5xLuWeCMKjlinn1lYqiwhxOq/Eig1OL8Us603U5OripEidnMqmsN2wbc6siBV/?=
 =?us-ascii?q?tx5ECh2SyA1wzL6+FEJ147lbbDJpI/3rI9lYAfvVneEiL1gkn6kqGbe0U+9uS1?=
 =?us-ascii?q?6enrerDmqYWdN49whAH+KKMumsmnDOQhLAcOWnWb9f2h27L94032XrFKguQtna?=
 =?us-ascii?q?nerZDaI9gUqbCiAwNS1oYj6hW/ACm83NUXgHkKNFZFeBOBj4j0NFDCOvH4DfGj?=
 =?us-ascii?q?g1uylDdn3ezJPrrkApjWKHjDl7Hhfbl7605B0gYzyspf551MBrEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhNwy0wuXnB8tn2oIRRGKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mQxVQK+ywJFCaGykBu80ZAKdYGHwmZEHFmEFuBd4S/blz1iLUDpWbnD1WL?=
 =?us-ascii?q?og5zY9E8W/AILeA4ygnrGFjxq9BYBcM2VPC1SQFiXxeoCZHvsBdi+WZ9VsiyEJ?=
 =?us-ascii?q?TqSJTYgn2hez8gjgxO18M+DW9yYE4I/lz8V//ObJlBs/pgBzWt2Q1nzIQ2xqk2?=
 =?us-ascii?q?cgQTgw06Zi50tnxQSty6991rZ7qMLa6GgNGjU9MYJVyaYyX9zzQB7QONaCRRCm?=
 =?us-ascii?q?X/2pBDgwSpQ6xNpYMBU1IMmrkh2Wh3niOLQSjbHeXJE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D8BAC0+x9chxHrdtBjH4F4gTGCYoM/P?=
 =?us-ascii?q?4h4ixopgT+JT4FJjHCBcxMBARgUhzAiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4?=
 =?us-ascii?q?jDII6BQIDGA6CYQMDAQIJFwQLAQ0BBQoMHQECAQIBAgYBAQUDDQ8CIgQCAgMBH?=
 =?us-ascii?q?QIRAQUBHBkFgx2BaQEDFQEEiiSQCDyLGXwWBQEXgncFgkSBaQoZJw1eMoEFAgY?=
 =?us-ascii?q?SeYZzgyWBHHqBHIFEhTaFMoJXAolNKIVuhVuLWjMHAgKDGosagzMYiXuHa49si?=
 =?us-ascii?q?hYCBAIEBQIFDyGBJYIOcIEBgjuCJxeDSoJCiBJAMQGBBosvgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0D8BAC0+x9chxHrdtBjH4F4gTGCYoM/P4h4ixopgT+JT4F?=
 =?us-ascii?q?JjHCBcxMBARgUhzAiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jDII6BQIDGA6CY?=
 =?us-ascii?q?QMDAQIJFwQLAQ0BBQoMHQECAQIBAgYBAQUDDQ8CIgQCAgMBHQIRAQUBHBkFgx2?=
 =?us-ascii?q?BaQEDFQEEiiSQCDyLGXwWBQEXgncFgkSBaQoZJw1eMoEFAgYSeYZzgyWBHHqBH?=
 =?us-ascii?q?IFEhTaFMoJXAolNKIVuhVuLWjMHAgKDGosagzMYiXuHa49sihYCBAIEBQIFDyG?=
 =?us-ascii?q?BJYIOcIEBgjuCJxeDSoJCiBJAMQGBBosvgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,389,1539673200"; 
   d="scan'208";a="58049844"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Dec 2018 13:21:42 -0800
Received: from localhost ([127.0.0.1]:59903 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gbBBs-0001o3-Fy
	for like.xu@linux.intel.com; Sun, 23 Dec 2018 16:21:40 -0500
Received: from eggs.gnu.org ([208.118.235.92]:52463)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dirty.ice.hu@gmail.com>) id 1gbAk7-00087C-1E
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:53:01 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dirty.ice.hu@gmail.com>) id 1gbAk4-0002vC-Fw
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:52:58 -0500
Received: from mail-wm1-x342.google.com ([2a00:1450:4864:20::342]:53888)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <dirty.ice.hu@gmail.com>)
	id 1gbAk4-0002sC-8r
	for qemu-devel@nongnu.org; Sun, 23 Dec 2018 15:52:56 -0500
Received: by mail-wm1-x342.google.com with SMTP id d15so9848907wmb.3
	for <qemu-devel@nongnu.org>; Sun, 23 Dec 2018 12:52:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=W2dAba28TjIae0d/Hlsf5eMIrMDV7595+AUWgCdiIDI=;
	b=HLW1bSlXECowxThxFKI1uzMPIt4oTLuqdpvpb0PR67TJyYTZdf9MlbcInWkK1EFjMD
	kGRDd3Y7hnmD3FqoDBDAinNmNoTIpQPkgf1aY9eofknSDnisjyQy4ezIqj/8rMydQHTT
	EJf/70fcZlOhFqJ84wJSQjYIlpWhjHNWxMmS6oXixTlHqLemJCBi1FXFeslH3YgV1lqF
	9i9rpAZO4JgtY4bvXBNpCrc/EoPSAxGLYVzs0RT+ZYWl1VU8WXrljqF9k2EufsbDc6MJ
	hGiSv1xdqSF6dbqDTealE9RkqLkprYp55TKDnG9KsyPSuRSn55RzG49Gx21nmBsOdWF1
	m77A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=W2dAba28TjIae0d/Hlsf5eMIrMDV7595+AUWgCdiIDI=;
	b=LzX3Jf8zbmCYv9AIUl5DiNypyQUHTuTFhqwg5qpF8oZhP3bay30N7TUh10Q55f1Nqt
	M2TEtykrgr4//6TjmgX7g3US7vKXnFcPF4d6BbYCQjSDY3VQdRHEoXtVhQRk47mpUgNM
	LzxlR93iegAGaPp/f2yHKuEhxPUGm2jzvFWfzWmLiCi9DZT+eH91jiBCg9QQuhVLc4XN
	aHT4tZcq03yaOlEnTLHREh+lG7qjlwfvjgFvkdUDScKBrqtdErlsykfCDifiZWN7duI7
	2CBysV/bAZYhB64VNImH75CKF7cZfIk67c43N/jpscaZaOdQFSlrsJeZ9+PgfTdT5+T0
	vK5w==
X-Gm-Message-State: AJcUukdk12pdQmUt8GaKKkSmiD0L3mWy2R7sU4g3C98xN+gg8i8NWekq
	nldtWd/nkvfEfDevEHDi70J7Vv5EX7k=
X-Google-Smtp-Source: AFSGD/Viu0SKpj7bb4IRcTBJH+qzBUXP98xGISDS2nHM6cLI539JNMbLD8Cm2zq308az1HpenD56qw==
X-Received: by 2002:a1c:7306:: with SMTP id d6mr9761206wmb.98.1545598375049;
	Sun, 23 Dec 2018 12:52:55 -0800 (PST)
Received: from nullptr.home.dirty-ice.org
	(2a01-036c-0113-24a3-0000-0000-0000-0005.pool6.digikabel.hu.
	[2a01:36c:113:24a3::5]) by smtp.gmail.com with ESMTPSA id
	g198sm25456920wmd.23.2018.12.23.12.52.54
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Sun, 23 Dec 2018 12:52:54 -0800 (PST)
From: "=?UTF-8?q?K=C5=91v=C3=A1g=C3=B3=2C=20Zolt=C3=A1n?="
	<dirty.ice.hu@gmail.com>
X-Google-Original-From: =?UTF-8?q?K=C5=91v=C3=A1g=C3=B3=2C=20Zolt=C3=A1n?=
	<DirtY.iCE.hu@gmail.com>
To: qemu-devel@nongnu.org
Date: Sun, 23 Dec 2018 21:52:06 +0100
Message-Id: <913694ede1eaa88edbe2be55ed0969f3f14f105d.1545598229.git.DirtY.iCE.hu@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1545598229.git.DirtY.iCE.hu@gmail.com>
References: <cover.1545598229.git.DirtY.iCE.hu@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::342
Subject: [Qemu-devel] [PATCH v2 30/52] coreaudio: port to the new audio
 backend api
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Gerd Hoffmann <kraxel@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Kővágó, Zoltán <DirtY.iCE.hu@gmail.com>
---
 audio/coreaudio.c | 130 ++++++++++++++++++++++++----------------------
 1 file changed, 69 insertions(+), 61 deletions(-)

diff --git a/audio/coreaudio.c b/audio/coreaudio.c
index abbbb45d69..a532e862dd 100644
--- a/audio/coreaudio.c
+++ b/audio/coreaudio.c
@@ -43,9 +43,6 @@ typedef struct coreaudioVoiceOut {
     UInt32 audioDevicePropertyBufferFrameSize;
     AudioStreamBasicDescription outputStreamBasicDescription;
     AudioDeviceIOProcID ioprocid;
-    int live;
-    int decr;
-    int rpos;
 } coreaudioVoiceOut;
 
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_6
@@ -397,31 +394,29 @@ static int coreaudio_unlock (coreaudioVoiceOut *core, const char *fn_name)
     return 0;
 }
 
-static int coreaudio_run_out (HWVoiceOut *hw, int live)
-{
-    int decr;
-    coreaudioVoiceOut *core = (coreaudioVoiceOut *) hw;
-
-    if (coreaudio_lock (core, "coreaudio_run_out")) {
-        return 0;
+#define COREAUDIO_WRAPPER_FUNC(name, ret_type, args_decl, args) \
+    static ret_type glue(coreaudio_, name)args_decl             \
+    {                                                           \
+        coreaudioVoiceOut *core = (coreaudioVoiceOut *) hw;     \
+        ret_type ret;                                           \
+                                                                \
+        if (coreaudio_lock(core, "coreaudio_" #name)) {         \
+            return 0;                                           \
+        }                                                       \
+                                                                \
+        ret = glue(audio_generic_, name)args;                   \
+                                                                \
+        coreaudio_unlock(core, "coreaudio_" #name);             \
+        return ret;                                             \
     }
-
-    if (core->decr > live) {
-        ldebug ("core->decr %d live %d core->live %d\n",
-                core->decr,
-                live,
-                core->live);
-    }
-
-    decr = MIN (core->decr, live);
-    core->decr -= decr;
-
-    core->live = live - decr;
-    hw->rpos = core->rpos;
-
-    coreaudio_unlock (core, "coreaudio_run_out");
-    return decr;
-}
+COREAUDIO_WRAPPER_FUNC(get_buffer_out, void *, (HWVocieOut *hw, size_t *size),
+                       (hw, size))
+COREAUDIO_WRAPPER_FUNC(put_buffer_out_nowrite, size_t,
+                       (HWVoiceOut *hw, void *buf, size_t size),
+                       (hw, buf, size))
+COREAUDIO_WRAPPER_FUNC(write, size_t, (HWVoiceOut *hw, void *buf, size_t size),
+                       (hw, buf, size))
+#undef COREAUDIO_WRAPPER_FUNC
 
 /* callback to feed audiooutput buffer */
 static OSStatus audioDeviceIOProc(
@@ -433,19 +428,11 @@ static OSStatus audioDeviceIOProc(
     const AudioTimeStamp* inOutputTime,
     void* hwptr)
 {
-    UInt32 frame, frameCount;
-    float *out = outOutputData->mBuffers[0].mData;
+    UInt32 frameCount, pending_frames;
+    void *out = outOutputData->mBuffers[0].mData;
     HWVoiceOut *hw = hwptr;
     coreaudioVoiceOut *core = (coreaudioVoiceOut *) hwptr;
-    int rpos, live;
-    struct st_sample *src;
-#ifndef FLOAT_MIXENG
-#ifdef RECIPROCAL
-    const float scale = 1.f / UINT_MAX;
-#else
-    const float scale = UINT_MAX;
-#endif
-#endif
+    size_t len;
 
     if (coreaudio_lock (core, "audioDeviceIOProc")) {
         inInputTime = 0;
@@ -453,42 +440,51 @@ static OSStatus audioDeviceIOProc(
     }
 
     frameCount = core->audioDevicePropertyBufferFrameSize;
-    live = core->live;
+    pending_frames = hw->pending_emul >> hw->info.shift;
 
     /* if there are not enough samples, set signal and return */
-    if (live < frameCount) {
+    if (pending_frames < frameCount) {
         inInputTime = 0;
         coreaudio_unlock (core, "audioDeviceIOProc(empty)");
         return 0;
     }
 
-    rpos = core->rpos;
-    src = hw->mix_buf + rpos;
+    len = frameCount << hw->info.shift;
+    while (len) {
+        size_t write_len;
+        ssize_t start = ((ssize_t) hw->pos_emul) - hw->pending_emul;
+        if (start < 0) {
+            start += hw->size_emul;
+        }
+        assert(start >= 0 && start < hw->size_emul);
 
-    /* fill buffer */
-    for (frame = 0; frame < frameCount; frame++) {
-#ifdef FLOAT_MIXENG
-        *out++ = src[frame].l; /* left channel */
-        *out++ = src[frame].r; /* right channel */
-#else
-#ifdef RECIPROCAL
-        *out++ = src[frame].l * scale; /* left channel */
-        *out++ = src[frame].r * scale; /* right channel */
-#else
-        *out++ = src[frame].l / scale; /* left channel */
-        *out++ = src[frame].r / scale; /* right channel */
-#endif
-#endif
+        write_len = MIN(MIN(hw->pending_emul, len),
+                        hw->size_emul - start);
+
+        memcpy(out, hw->buf_emul + start, write_len);
+        hw->pending_emul -= write_len;
+        len -= write_len;
+        out += write_len;
     }
 
-    rpos = (rpos + frameCount) % hw->samples;
-    core->decr += frameCount;
-    core->rpos = rpos;
-
     coreaudio_unlock (core, "audioDeviceIOProc");
     return 0;
 }
 
+static UInt32 coreaudio_get_flags(struct audio_pcm_info *info,
+                                  struct audsettings *as)
+{
+    UInt32 flags = info->sign ? kAudioFormatFlagIsSignedInteger : 0;
+    if (as->endianness) { /* 0 = little, 1 = big */
+        flags |= kAudioFormatFlagIsBigEndian;
+    }
+
+    if (flags == 0) { /* must not be 0 */
+        flags = kAudioFormatFlagsAreAllClear;
+    }
+    return flags;
+}
+
 static int coreaudio_init_out(HWVoiceOut *hw, struct audsettings *as,
                               void *drv_opaque)
 {
@@ -576,6 +572,16 @@ static int coreaudio_init_out(HWVoiceOut *hw, struct audsettings *as,
 
     /* set Samplerate */
     core->outputStreamBasicDescription.mSampleRate = (Float64) as->freq;
+    core->outputStreamBasicDescription.mFormatID = kAudioFormatLinearPCM;
+    core->outputStreamBasicDescription.mFormatFlags =
+        coreaudio_get_flags(hw->info, as);
+    core->outputStreamBasicDescription.mBytesPerPacket =
+        core->outputStreamBasicDescription.mBytesPerFrame =
+        hw->info.nchannels * hw->info.bits / 8;
+    core->outputStreamBasicDescription.mFramesPerPacket = 1;
+    core->outputStreamBasicDescription.mChannelsPerFrame = hw->info.nchannels;
+    core->outputStreamBasicDescription.mBitsPerChannel = hw->info.bits;
+
     status = coreaudio_set_streamformat(core->outputDeviceID,
                                         &core->outputStreamBasicDescription);
     if (status != kAudioHardwareNoError) {
@@ -686,7 +692,9 @@ static void coreaudio_audio_fini (void *opaque)
 static struct audio_pcm_ops coreaudio_pcm_ops = {
     .init_out = coreaudio_init_out,
     .fini_out = coreaudio_fini_out,
-    .run_out  = coreaudio_run_out,
+    .write    = coreaudio_write,
+    .get_buffer_out = coreaudio_get_buffer_out,
+    .put_buffer_out = coreaudio_put_buffer_out_nowrite,
     .ctl_out  = coreaudio_ctl_out
 };
 
-- 
2.20.1


