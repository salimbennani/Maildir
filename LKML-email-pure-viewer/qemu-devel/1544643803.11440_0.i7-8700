Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:43:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9D7625803DC
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 01:28:50 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 12 Dec 2018 01:28:49 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A6V9i9hMNIzWgKVBsvIMl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/r6rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUclRWS5ODIOy?=
 =?us-ascii?q?YYUMEeQOIelWoZTlp1YMrxWzChSgCe3zxjBWnX/7xrE60/07HA3awAAsA9ADvX?=
 =?us-ascii?q?LJp9v1LqcSVuW1wbHKwjXEafNW1jX96InVeR8goPGDQ697fM3PxkkrEAPFjlSQ?=
 =?us-ascii?q?qYn7MDOOzekNvG2b4PBhVeKrkWIotwZxoj22y8oql4LHhZoVx0ja+Sllw4s5P8?=
 =?us-ascii?q?C0RFN4bNK+DpdduSGXO5FrTs4gW21kpic3xqEEtJO+cigHy48oywLaZvGIcIWF?=
 =?us-ascii?q?4x3uWeOPLTtkgX9ofamwihm8/EWm1+byTNO70ExQoSpAitTMtm4C1xjU6sWfTv?=
 =?us-ascii?q?t9/1yh2SqU1wzJ5eFEJ100mbDcK547zb48jpsTsULdES/qgEj6krOae0Y+9uS1?=
 =?us-ascii?q?9ujqYa/qqoGSOoJ0kA3yL6YjltS6AesiMwgOW2ab+f671L3m5UD5WatFjvgrkq?=
 =?us-ascii?q?XArZ/VO9obqbC9AwNMyYkj7Au/DzG639sGhnkLK1ZFeBOEj4f3IV3PL+34AO+7?=
 =?us-ascii?q?g1Stljdr2v/HMqfgApXLMnjMjrPhcaxh5E5bzQo+1tZf55VSCrEOJvLzR1X9tN?=
 =?us-ascii?q?vCDh82KwC02froCM1h1oMCXmKCGquZMKLRsVCW/O4uLPSMaZQRuDb8Lfgl+vHv?=
 =?us-ascii?q?gWU4mV8bYammw58XZGqkEfRhJkXKKUfqmcoLRGcWohIlHqutjFyZTSUVYXG0UK?=
 =?us-ascii?q?QhoDYhB8WjBIbHQ4mrx7uZwCa8GIYRf21DFxWAHGnlc9a5XewRYneXK85ljjtW?=
 =?us-ascii?q?TLWkVsot2A+jsErgxqN6I/HI0isfs53lyZ5y/eKEjgw49zF/E5GA1XqQRXp/hG?=
 =?us-ascii?q?ICSmwK2/V9qFd61V6F3oBijvBYHMAV7PRMASkgMpuJ/ut8BNLzEjLAc5/dRVKh?=
 =?us-ascii?q?QtSjDCoZQdc4wttIaEF4TYbxxivf1janVudG34eAA4Y5p+eFhyD8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BNAAB71BBcmBHrdtBjHgEGBwaBUggLA?=
 =?us-ascii?q?YEwgS2BNYN7iHiLM1IGgTWJIQOOL4FzFBgUhECCeiI1CA0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQEBCAsLBhsOIwyCNgUCAxoBBoJbAQEBAQMBAiAdAQUKDB0BAgECAQIGAQEFA?=
 =?us-ascii?q?wILCgMCAiIEAgIDAR0BAREBBQEcGQWDHIFpAQMIDQEEiXqQBzyLDYESBQEXgnc?=
 =?us-ascii?q?FhEEKGScNXYE3AgYSeYsxF3iBB4ERgxKCV4IqgwSCVwKJOYcHhFWLRC4JikiDX?=
 =?us-ascii?q?YMwGIFcj2iKK4R9igIPIYEmAYIMMxoIGxVsgjuCGwwXEoM4imA0MYEHizCBdwE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0BNAAB71BBcmBHrdtBjHgEGBwaBUggLAYEwgS2BNYN7iHi?=
 =?us-ascii?q?LM1IGgTWJIQOOL4FzFBgUhECCeiI1CA0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOI?=
 =?us-ascii?q?wyCNgUCAxoBBoJbAQEBAQMBAiAdAQUKDB0BAgECAQIGAQEFAwILCgMCAiIEAgI?=
 =?us-ascii?q?DAR0BAREBBQEcGQWDHIFpAQMIDQEEiXqQBzyLDYESBQEXgncFhEEKGScNXYE3A?=
 =?us-ascii?q?gYSeYsxF3iBB4ERgxKCV4IqgwSCVwKJOYcHhFWLRC4JikiDXYMwGIFcj2iKK4R?=
 =?us-ascii?q?9igIPIYEmAYIMMxoIGxVsgjuCGwwXEoM4imA0MYEHizCBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="43724594"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 01:28:48 -0800
Received: from localhost ([::1]:43410 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX0oy-0004AY-07
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 04:28:48 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60043)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <elohimes@gmail.com>) id 1gX0eq-0003kj-UG
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:18:22 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <elohimes@gmail.com>) id 1gX0ep-00064N-Dn
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:18:20 -0500
Received: from mail-yb1-xb43.google.com ([2607:f8b0:4864:20::b43]:42232)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <elohimes@gmail.com>) id 1gX0ep-00063o-5m
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 04:18:19 -0500
Received: by mail-yb1-xb43.google.com with SMTP id m129so1222149ybf.9
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 01:18:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc:content-transfer-encoding;
	bh=6xohCg5GqF2cwoyZQwIBWfcxtw3WN5rmFC0kgZmAB6U=;
	b=WpX3aorW/b3ax8ujohnFOLyjyEK+jXYMbdEgeQG3kYY41udFX/Wz8SVHeTRIlFyoMK
	XrONSZDlrk9LAxrOBe7punCrYvxDounlaD2c4BL/lgx8mP8kg17WOIENzA6KSaYdbhun
	5F9u9UFvGLKHJ0NZGlG2Z55R6J+Z6kvvJUTfQ0UGZRk7udeQ9alMF7dy3zFGoi7nDRyY
	tvlXVkWaOpvguXuEA1J0TAxcpN58qizhvvt2Y+Oz04ZR7dswAoOxMLiI/Tbja+CMEn6Y
	1lRBTOZk9VuzeJEmBxk9KXhrzwV8Qz27238MUqwoQdzD3XsSQUEoUa0/dmNdLuHgrAGS
	8E0g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=6xohCg5GqF2cwoyZQwIBWfcxtw3WN5rmFC0kgZmAB6U=;
	b=URsWDuo4u5WmilwGzmq1ANXYG28YPUjAaJ1MzGxGCBylAsG0y0rjPvPU/oKQLzHSas
	ltAozOcvlTRsP+7gEO7H6GKciBqFArHhxJ2i7aDgwK2BqrJuMiyLLGUs98bQ9L8waErv
	+B+w5E1Mw8UMb4WF0aT1f8xSitO6rxGiGNX11YuTJvdbTTaOH9ojjb02v/4EIKQ1saEt
	fMXhlQWqgglka+iGVk5ugS5Xw4KsS4oSyn5aTNJbveSMKHphcV5MvSFYLhcUS/FxPeUr
	5RU5imLa3sWe3dB1jhMgovURbq3z+NYBXWRBLGFZUe5LR4csalL+BjhHIj+wP0FACQWe
	OWnQ==
X-Gm-Message-State: AA+aEWawwhV9YHekN1MKS3kGH8+8ox2U9brL+TlBbZvznm+9SucJnrBr
	BGEJvGnkoDHelHai5mhwKoftXkM/LLOlLkdfl1s=
X-Google-Smtp-Source: AFSGD/Vrmw7H2CaVRz2ACBWyk+N3ajVVARUzy++Amw5yPbcYTTC8AGDDfvPIg+KHys9bG2pZeLaRPT3t/UfQx5zxRpI=
X-Received: by 2002:a25:e6c4:: with SMTP id
	d187mr19575007ybh.150.1544606298050; 
	Wed, 12 Dec 2018 01:18:18 -0800 (PST)
MIME-Version: 1.0
References: <20181206063552.6701-1-xieyongji@baidu.com>
	<561e0d7a-af2f-caad-aec3-c15952665687@redhat.com>
	<20181206085849-mutt-send-email-mst@kernel.org>
	<cf555a3d-0312-0b61-d18a-12ca295520a0@redhat.com>
	<CAONzpcaXTBgPTH0WSfq-=RwHLkuqi1mhKcv4C=0_O67_hV8A2Q@mail.gmail.com>
	<5794e090-9a9b-ca30-1066-ef697c9b67be@redhat.com>
	<CAONzpcZKAXrgbJc6H3d82zUt6VUVSo36HLg__OvuDWoBk9zTvg@mail.gmail.com>
	<7520e2cd-59cc-c133-f913-e7397df684dd@redhat.com>
	<CAONzpcbekTuN80r3Vb3CA7MqYBuVOOmV=6wfCNOb5z6QyrLZvg@mail.gmail.com>
	<cc6a464a-3193-f95b-08e5-c67e95d72dd5@redhat.com>
In-Reply-To: <cc6a464a-3193-f95b-08e5-c67e95d72dd5@redhat.com>
From: Yongji Xie <elohimes@gmail.com>
Date: Wed, 12 Dec 2018 17:18:05 +0800
Message-ID: <CAONzpcZ_RqUujdSoVCPUHH0A2g4hHY=oM9x-04e-6WugYFQOiw@mail.gmail.com>
To: jasowang@redhat.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::b43
Subject: Re: [Qemu-devel] [PATCH for-4.0 0/6] vhost-user-blk: Add support
 for backend reconnecting
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: zhangyu31@baidu.com, "Michael S. Tsirkin" <mst@redhat.com>, nixun@baidu.com,
	qemu-devel@nongnu.org, lilin24@baidu.com, chaiwen@baidu.com,
	marcandre.lureau@redhat.com, Xie Yongji <xieyongji@baidu.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, 12 Dec 2018 at 15:47, Jason Wang <jasowang@redhat.com> wrote:
>
>
> On 2018/12/12 =E4=B8=8B=E5=8D=882:41, Yongji Xie wrote:
> > On Wed, 12 Dec 2018 at 12:07, Jason Wang <jasowang@redhat.com> wrote:
> >>
> >> On 2018/12/12 =E4=B8=8A=E5=8D=8811:21, Yongji Xie wrote:
> >>> On Wed, 12 Dec 2018 at 11:00, Jason Wang <jasowang@redhat.com> wrote:
> >>>> On 2018/12/12 =E4=B8=8A=E5=8D=8810:48, Yongji Xie wrote:
> >>>>> On Mon, 10 Dec 2018 at 17:32, Jason Wang <jasowang@redhat.com> wrot=
e:
> >>>>>> On 2018/12/6 =E4=B8=8B=E5=8D=889:59, Michael S. Tsirkin wrote:
> >>>>>>> On Thu, Dec 06, 2018 at 09:57:22PM +0800, Jason Wang wrote:
> >>>>>>>> On 2018/12/6 =E4=B8=8B=E5=8D=882:35,elohimes@gmail.com  wrote:
> >>>>>>>>> From: Xie Yongji<xieyongji@baidu.com>
> >>>>>>>>>
> >>>>>>>>> This patchset is aimed at supporting qemu to reconnect
> >>>>>>>>> vhost-user-blk backend after vhost-user-blk backend crash or
> >>>>>>>>> restart.
> >>>>>>>>>
> >>>>>>>>> The patch 1 tries to implenment the sync connection for
> >>>>>>>>> "reconnect socket".
> >>>>>>>>>
> >>>>>>>>> The patch 2 introduces a new message VHOST_USER_SET_VRING_INFLI=
GHT
> >>>>>>>>> to support offering shared memory to backend to record
> >>>>>>>>> its inflight I/O.
> >>>>>>>>>
> >>>>>>>>> The patch 3,4 are the corresponding libvhost-user patches of
> >>>>>>>>> patch 2. Make libvhost-user support VHOST_USER_SET_VRING_INFLIG=
HT.
> >>>>>>>>>
> >>>>>>>>> The patch 5 supports vhost-user-blk to reconnect backend when
> >>>>>>>>> connection closed.
> >>>>>>>>>
> >>>>>>>>> The patch 6 tells qemu that we support reconnecting now.
> >>>>>>>>>
> >>>>>>>>> To use it, we could start qemu with:
> >>>>>>>>>
> >>>>>>>>> qemu-system-x86_64 \
> >>>>>>>>>              -chardev socket,id=3Dchar0,path=3D/path/vhost.sock=
et,reconnect=3D1,wait \
> >>>>>>>>>              -device vhost-user-blk-pci,chardev=3Dchar0 \
> >>>>>>>>>
> >>>>>>>>> and start vhost-user-blk backend with:
> >>>>>>>>>
> >>>>>>>>> vhost-user-blk -b /path/file -s /path/vhost.socket
> >>>>>>>>>
> >>>>>>>>> Then we can restart vhost-user-blk at any time during VM runnin=
g.
> >>>>>>>> I wonder whether or not it's better to handle this at the level =
of virtio
> >>>>>>>> protocol itself instead of vhost-user level. E.g expose last_ava=
il_idx to
> >>>>>>>> driver might be sufficient?
> >>>>>>>>
> >>>>>>>> Another possible issue is, looks like you need to deal with diff=
erent kinds
> >>>>>>>> of ring layouts e.g packed virtqueues.
> >>>>>>>>
> >>>>>>>> Thanks
> >>>>>>> I'm not sure I understand your comments here.
> >>>>>>> All these would be guest-visible extensions.
> >>>>>> Looks not, it only introduces a shared memory between qemu and
> >>>>>> vhost-user backend?
> >>>>>>
> >>>>>>
> >>>>>>> Possible for sure but how is this related to
> >>>>>>> a patch supporting transparent reconnects?
> >>>>>> I might miss something. My understanding is that we support transp=
arent
> >>>>>> reconnects, but we can't deduce an accurate last_avail_idx and thi=
s is
> >>>>>> what capability this series try to add. To me, this series is func=
tional
> >>>>>> equivalent to expose last_avail_idx (or avail_idx_cons) in availab=
le
> >>>>>> ring. So the information is inside guest memory, vhost-user backen=
d can
> >>>>>> access it and update it directly. I believe this is some modern NI=
C did
> >>>>>> as well (but index is in MMIO area of course).
> >>>>>>
> >>>>> Hi Jason,
> >>>>>
> >>>>> If my understand is correct, it might be not enough to only expose
> >>>>> last_avail_idx.
> >>>>> Because we would not process descriptors in the same order in which=
 they have
> >>>>> been made available sometimes. If so, we can't get correct inflight
> >>>>> I/O information
> >>>>> from available ring.
> >>>> You can get this with the help of the both used ring and last_avail_=
idx
> >>>> I believe. Or maybe you can give us an example?
> >>>>
> >>> A simple example, we assume ring size is 8:
> >>>
> >>> 1. guest fill avail ring
> >>>
> >>> avail ring: 0 1 2 3 4 5 6 7
> >>> used ring:
> >>>
> >>> 2. vhost-user backend complete 4,5,6,7 and fill used ring
> >>>
> >>> avail ring: 0 1 2 3 4 5 6 7
> >>> used ring: 4 5 6 7
> >>>
> >>> 3. guest fill avail ring again
> >>>
> >>> avail ring: 4 5 6 7 4 5 6 7
> >>> used ring: 4 5 6 7
> >>>
> >>> 4. vhost-user backend crash
> >>>
> >>> The inflight descriptors 0, 1, 2, 3 lost.
> >>>
> >>> Thanks,
> >>> Yongji
> >>
> >> Ok, then we can simply forbid increasing the avail_idx in this case?
> >>
> >> Basically, it's a question of whether or not it's better to done it in
> >> the level of virtio instead of vhost. I'm pretty sure if we expose
> >> sufficient information, it could be done without touching vhost-user.
> >> And we won't deal with e.g migration and other cases.
> >>
> > OK, I get your point. That's indeed an alternative way. But this featur=
e seems
> > to be only useful to vhost-user backend.
>
>
> I admit I could not think of a use case other than vhost-user.
>
>
> >   I'm not sure whether it make sense to
> > touch virtio protocol for this feature.
>
>
> Some possible advantages:
>
> - Feature could be determined and noticed by user or management layer.
>
> - There's no need to invent ring layout specific protocol to record in
> flight descriptors. E.g if my understanding is correct, for this series
> and for the example above, it still can not work for packed virtqueue
> since descriptor id is not sufficient (descriptor could be overwritten
> by used one). You probably need to have a (partial) copy of descriptor
> ring for this.
>
> - No need to deal with migration, all information was in guest memory.
>

Yes, we have those advantages. But seems like handle this in vhost-user
level could be easier to be maintained in production environment. We can
support old guest. And the bug fix will not depend on guest kernel updating=
.

Thanks,
Yongji

