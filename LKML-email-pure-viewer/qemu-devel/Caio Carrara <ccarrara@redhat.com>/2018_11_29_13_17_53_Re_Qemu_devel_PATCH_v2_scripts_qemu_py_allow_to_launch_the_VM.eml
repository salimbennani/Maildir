Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:41:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 17714580213
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 05:18:34 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 05:18:33 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AGBmfnx+qX0FSZP9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+keIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWS9PAoyz?=
 =?us-ascii?q?c4QAEugOMuhXoYfgv1sDrxmwCAaxCO7h1jNHmGT20LYm0+Q4CwzKwBAsEsgTvH?=
 =?us-ascii?q?nSsd77NL0SUeewzKTQ0zjMdfJW2TDg44XWaB8hu+uMUqhqccXL1EIiEB/KgUmK?=
 =?us-ascii?q?poz/JTOazP4NvHKA4up6S+2glm4npBttojS12sgsjYzJi5sTx1vZ+yt5x4M1Ks?=
 =?us-ascii?q?e5SE59edOkFYFftyCeN4dvWMwiWX1nuCY7yr0Yp5G3ZjQFyJMixxPZdveJcJCI?=
 =?us-ascii?q?7wr9WOqNIjp0nm9pdK+8ihqo70StxO3xWtOp3FtItiZJjMXAu3QX2xDO5MWLVO?=
 =?us-ascii?q?Fx8lqi1DuBzQzf9OJJLEYpnqTBMZEh2KQ/lp8LvETDACD2nEL2gbeSdkUl4eio?=
 =?us-ascii?q?9//nbq/ppp+aKo94kAb+Mr4hmsCnAOQ4NBYBX3SD9OiiyLHu/lf1TKhXgvA1iK?=
 =?us-ascii?q?XVrp7XKMQBqqKkAQJZyoMj5Ay+Dzei3tQYh34HLFdddRKekYfpPkzOLOnlAvih?=
 =?us-ascii?q?nVSjjjNry+ndMb3mH5XNKGTMn6n6fbp6705cyQkzws5F65NbF7EMOPbzWk73tN?=
 =?us-ascii?q?zFAR41KQ20w+D7CNpj0oMSQ36AAqicMK7Jt1+I4eQvI+aKZI8Iojr9LOIl5/H2?=
 =?us-ascii?q?gX8jhVAdZbWp3YcQaH2gGvRmIkaZbmT2jtYODGcHpQ4+TO3siF2fXj9ffXeyX6?=
 =?us-ascii?q?Qg5j4lDIKqF5vMRoeogO/J4SGgA5cDZnxaEkveVjDsdp6YQLEKbySdJNInlSYL?=
 =?us-ascii?q?Er2oSosk3Bfpsxfmyr1hNa3N9ygF8J7uytVxtNDVjgw4oDl9DsCB1DOUQmRp22?=
 =?us-ascii?q?8FWTIymbpyuFFw0Uur169+jPpFU9tJ6KRSTw04OJXAmvF8EM34QQnbf92EG2qh?=
 =?us-ascii?q?F+qvADc8VJo9xMRGWE97B9K5xjXExCGqDqMJnvTfG5U19K/GxH3ZPctxy3/akq?=
 =?us-ascii?q?Imig91bNFIMDiNj694vyPaHZTAiUzRw62hfL4G1TTE3H2OwWqHoAdTVwsmAvaN?=
 =?us-ascii?q?ZmwWekaD9Yex3UjFVbL7TO1/agY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACe5v9bhxHrdtBkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTAqgQ+BFhOMEV+LKYINfI1AiQYUgV8UGAs?=
 =?us-ascii?q?JgUuCdYMzIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxoBBoJcAQIDA?=
 =?us-ascii?q?QJDCikDAwECBgEBChgJHQgDAQsFSRMFgxwBggEBBAqnLYotiDCDZheBQD+BEYI?=
 =?us-ascii?q?USTWDHgOBQAEBAgQYgzWCJgKJKw8di2GKawmGPz+CcYc4I4InhzGBWIVsmEyBR?=
 =?us-ascii?q?oINMxoIGxWDJwmCR20BAYJJhWWFBikxAQGBBRyKXkeBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAACe5v9bhxHrdtBkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTAqgQ+BFhOMEV+LKYINfI1AiQYUgV8UGAsJgUuCdYMzIjQJD?=
 =?us-ascii?q?QEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxoBBoJcAQIDAQJDCikDAwECBgE?=
 =?us-ascii?q?BChgJHQgDAQsFSRMFgxwBggEBBAqnLYotiDCDZheBQD+BEYIUSTWDHgOBQAEBA?=
 =?us-ascii?q?gQYgzWCJgKJKw8di2GKawmGPz+CcYc4I4InhzGBWIVsmEyBRoINMxoIGxWDJwm?=
 =?us-ascii?q?CR20BAYJJhWWFBikxAQGBBRyKXkeBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="140080115"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 05:18:32 -0800
Received: from localhost ([::1]:54104 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSMDA-0004Ic-5h
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 08:18:32 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:56395)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ccarrara@redhat.com>) id 1gSMCz-0004FA-T1
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 08:18:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ccarrara@redhat.com>) id 1gSMCu-0000bR-Qz
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 08:18:21 -0500
Received: from mx1.redhat.com ([209.132.183.28]:48120)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ccarrara@redhat.com>) id 1gSMCr-0000ZE-O1
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 08:18:14 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id ACB08C05B028
	for <qemu-devel@nongnu.org>; Thu, 29 Nov 2018 13:18:06 +0000 (UTC)
Received: from localhost.localdomain (ovpn-116-28.gru2.redhat.com
	[10.97.116.28])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id D5D6818037;
	Thu, 29 Nov 2018 13:17:56 +0000 (UTC)
Date: Thu, 29 Nov 2018 11:17:53 -0200
From: Caio Carrara <ccarrara@redhat.com>
To: Wainer dos Santos Moschetta <wainersm@redhat.com>
Message-ID: <20181129131752.GA19233@localhost.localdomain>
References: <20181121183900.10364-1-wainersm@redhat.com>
	<20181126125807.GA14485@localhost.localdomain>
	<cd57c38b-13c2-68b3-b924-b87ce65628d2@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <cd57c38b-13c2-68b3-b924-b87ce65628d2@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Thu, 29 Nov 2018 13:18:06 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v2] scripts/qemu.py: allow to launch the VM
 without a monitor
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: crosa@redhat.com, philmd@redhat.com, qemu-devel@nongnu.org,
	ehabkost@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi Wainer,

Thanks for your reply. I pretty much agreed with most of it. I just
added a comment about that new method that is not used anywere.

On Thu, Nov 29, 2018 at 10:45:33AM -0200, Wainer dos Santos Moschetta wro=
te:
>=20
> On 11/26/2018 10:58 AM, Caio Carrara wrote:
> > On Wed, Nov 21, 2018 at 01:39:00PM -0500, Wainer dos Santos Moschetta=
 wrote:
> > > QEMUMachine launches the VM with a monitor enabled, afterwards
> > > a qmp connection is attempted on _post_launch(). In case
> > > the QEMU process exits with an error, qmp.accept() reaches
> > > timeout and raises an exception.
> > >=20
> > > But sometimes you don't need that monitor. As an example,
> > > when a test launches the VM expects its immediate crash,
> > > and only intend to check the process's return code. In this
> > > case the fact that launch() tries to establish the qmp
> > > connection (ending up in an exception) is troublesome.
> > >=20
> > > So this patch adds the set_qmp_monitor() that allow to
> > > launch the VM without creating the monitor machinery. The
> > > method can be used to re-enable the monitor eventually.
> > >=20
> > > Tested this change with the following Avocado test:
> > >=20
> > > from avocado_qemu import Test
> > >=20
> > > class DisableQmp(Test):
> > I think it would be fine to have this test added as a real test inste=
ad
> > of just let this here on commit message. Or at least we should have a
> > real use case that uses this new feature.
>=20
> Currently we don't have a proper place to put tests for scripts/qemu.py=
, but
> [1] opens the opportunity to create a self-test structure for the
> avocado_qemu API. For now I suggest to keep that (self)test just on the
> commit message.
>=20
> The feature I am introducing on this patch could have used on [2], so t=
hat
> it wouldn't need to call the qemu binary directly. I'm not changing tha=
t
> test on this patch because it was not merged into master yet, so I don'=
t
> know exactly how it could be done.
>=20
> [1] https://www.mail-archive.com/qemu-devel@nongnu.org/msg576435.html
> [2] https://www.mail-archive.com/qemu-devel@nongnu.org/msg572744.html
>=20
> >=20
> > >      """
> > >      :avocado: enable
> > >      """
> > >      def test(self):
> > >          self.vm.add_args('--foobar')
> > >          self.vm.set_qmp_monitor(disabled=3DTrue)
> > >          self.vm.launch()
> > >          self.vm.wait()
> > >          self.assertEqual(self.vm.exitcode(), 1)
> > >          self.vm.shutdown()
> > >=20
> > >          self.vm.set_qmp_monitor(disabled=3DFalse)
> > >          self.vm._args.remove('--foobar') # Hack
> > >          self.vm.launch()
> > >          res =3D self.vm.command('human-monitor-command',
> > >                                command_line=3D'info version')
> > >          self.assertRegexpMatches(res, r'^(\d+\.\d+\.\d)')
> > >=20
> > > Signed-off-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
> > > Reviewed-by: Caio Carrara <ccarrara@redhat.com>
> > > Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>
> > > ---
> > > Changes in v2:
> > >    * Major refactor: replaced disable_qmp() with set_qmp_monitor()
> > >      that allow to disable the qmp monitor likewise, but also one c=
an
> > >      re-enable it (set_qmp_monitor(disabled=3DFalse)).
> > >    * The logic to enabled/disable the monitor is back to
> > >      _base_args(). [ccarrara, ehabkost]
> > > ---
> > >   scripts/qemu.py | 72 ++++++++++++++++++++++++++++++++------------=
-----
> > >   1 file changed, 48 insertions(+), 24 deletions(-)
> > >=20
> > > diff --git a/scripts/qemu.py b/scripts/qemu.py
> > > index 6e3b0e6771..54fe0e65d2 100644
> > > --- a/scripts/qemu.py
> > > +++ b/scripts/qemu.py
> > > @@ -115,6 +115,7 @@ class QEMUMachine(object):
> > >           self._events =3D []
> > >           self._iolog =3D None
> > >           self._socket_scm_helper =3D socket_scm_helper
[...]
> > >       def _post_launch(self):
> > > -        self._qmp.accept()
> > > +        if self._qmp:
> > > +            self._qmp.accept()
> > >       def _post_shutdown(self):
> > >           if self._qemu_log_file is not None:
> > > @@ -325,7 +328,8 @@ class QEMUMachine(object):
> > >           Wait for the VM to power off
> > >           """
> > >           self._popen.wait()
> > > -        self._qmp.close()
> > > +        if self._qmp:
> > Isn't the self._with_qmp attribute that should be used here? I think
> > it's important to standardize the checks for qmp availability in
> > `with_qmp` attribute and use the `qmp` only for qmp access itself. Th=
ere
> > are other places that uses qmp to this kind of check too.
>=20
> Checking self._qmp has same result as self._with_qmp given that self._q=
mp
> object is only created with qmp enabled. But I agree with you that for =
the
> sake of readability it would be better to check with self._with_qmp.=A0=
 I will
> send a v2.
>=20
> >=20
> > > +            self._qmp.close()
> > >           self._load_io_log()
> > >           self._post_shutdown()
> > > @@ -334,11 +338,14 @@ class QEMUMachine(object):
> > >           Terminate the VM and clean up
> > >           """
> > >           if self.is_running():
> > > -            try:
> > > -                self._qmp.cmd('quit')
> > > -                self._qmp.close()
> > > -            except:
> > > -                self._popen.kill()
> > > +            if self._qmp:
> > > +                try:
> > > +                    self._qmp.cmd('quit')
> > > +                    self._qmp.close()
> > > +                except:
> > > +                    self._popen.kill()
> > > +            else:
> > > +                self._popen.terminate()
> > >               self._popen.wait()
> > >           self._load_io_log()
> > > @@ -355,6 +362,23 @@ class QEMUMachine(object):
> > >           self._launched =3D False
> > > +    def set_qmp_monitor(self, disabled=3DFalse, monitor_address=3D=
None):
> > Where is this new method being used?
>=20
> It's not used yet, but we will need this on some type of tests (e.g. la=
unch
> the VM and expect an immediate crash) very often. I mentioned above one=
 test
> that I could have used it already.

As you mentioned, for the sake of keeping this patch as simple as
possible and also reduce the amount of unused code in the repository, I
would suggest you to only send this new method with a patch that
actually use it.

>=20
> > .
> >=20
> > > +        """
> > > +        Set the QMP monitor.
> > > +
> > > +        @param disabled: if True, qmp monitor options will be remo=
ved from the
> > > +                         base arguments of the resulting QEMU comm=
and line.
> > > +        @param monitor_address: address for the QMP monitor.
> > > +        @note: call this function before launch().
> > > +        """
> > > +        if disabled:
> > > +            self._with_qmp =3D False
> > > +            self._qmp =3D None
> > > +        else:
> > > +            self._with_qmp =3D True
> > > +            if monitor_address:
> > > +                self._monitor_address =3D monitor_address
> > > +
> > >       def qmp(self, cmd, conv_keys=3DTrue, **args):
> > >           """
> > >           Invoke a QMP command and return the response dict
> > > --=20
> > > 2.19.1
> > >=20
> > It would be nice see less scattered checks for qmp availability along
> > the code.
>=20
> I agree. It will need a major refactor on scripts/qemu.py though. I wan=
t to
> keep this patch=A0 as simple as possible so that it can be used on the =
ongoing
> tests implementation.
>=20
> Thanks for the review!
>=20
> - Wainer
>=20
>=20
> >=20
> > Thanks.
>=20

Thanks,
--=20
Caio Carrara
Software Engineer, Virt Team - Red Hat
ccarrara@redhat.com

