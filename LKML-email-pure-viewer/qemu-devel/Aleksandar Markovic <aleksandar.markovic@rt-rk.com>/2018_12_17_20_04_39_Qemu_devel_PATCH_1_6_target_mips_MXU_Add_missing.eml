Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:49:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 387725805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 12:12:05 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 12:12:04 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AruNRMB+7T4Exrv9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+kTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJOT03/mbVhcx+g61UvB2vqQFnw4PWYo+YO+dyc63BcdwEXmpMRdpRVzVbD4+g?=
 =?us-ascii?q?dYYDE+gMMOBFpIf9vVsOqh6+CBGwCePr1DBIhWT20rc80+s8Cw7GxhErEdUUv3?=
 =?us-ascii?q?TOr9X1M7kSUeGpw6LVyjjMdfdW1in+6IjTaB8hp+yDUqhqccbLzEkgDRnFjlaX?=
 =?us-ascii?q?qYz7PjOayv8As3KH7+Z5T+KviHQrpB12ojiq38ohjJTCiIENyl3c6yl13IU4Kc?=
 =?us-ascii?q?elREJmYtOoCoVcui+aOodsX88vQXlktDsmxrACo5K3YjQGxZY9yxPQavGLaYmF?=
 =?us-ascii?q?7xPlWe2MOzl3nmhld6i6hxuq8Uiv1On8Vs6s3VZOrypFicXMtmsX2xzc7MiHV+?=
 =?us-ascii?q?Fx/kC72TaAzwzT6+dELl4olafDNZIt3r09moAOvUjeHSL6glv6gaGWe0k+5+Sl?=
 =?us-ascii?q?6fzrYrD8qZ+dM490hBv+MqMrmsGnGOQ3LA0OX3WC9euhyrLj41P2QLFTgvItla?=
 =?us-ascii?q?nZrZbaKtgFqa6iBANV1ocj6xWhADu839UYgGEKLFZEeBKBkojoNEvCIPH+Dfej?=
 =?us-ascii?q?nVuslC1nyOzBPr3kGZjNKH/DkLHufbZ79k5Q0g0zzcpQ555MELEOPOrzWlPttN?=
 =?us-ascii?q?zfFhI5Nw20w+X5B9ln2YIeRHmCAquYMKPUrF+J6fgjI+iKZI8Jpjn9L+Ip6OLp?=
 =?us-ascii?q?jX88yhcge7K0184XdGygBaYhZEGYemb3xNEGF2gMo0w5VuOtjVSDVTtaYTG1R7?=
 =?us-ascii?q?494TcgT5urCJqGSo2zjbjS4SGgA5cDY2lHDkyLQ27lcpjBV/oSZSbXOMJ4jzEf?=
 =?us-ascii?q?SZCnTIku0wzosxX1nKF6JOjZ8TFNqJT4ydJu7PfSnxxhyTshFsmYziSBQn95mk?=
 =?us-ascii?q?sOQDk52r05plZyjh+B2K5zmfVZGvRa4vpbVQF8PpnZi6RhDtnoWQXff9yhV1+4?=
 =?us-ascii?q?T96hBCl3RdU0h5cHZk9nGNK8jxvrwCO0DrQSkqTND5sxoYzG2H2kDsJwyG3P0q?=
 =?us-ascii?q?UolREDS9FMMnOnjeYr/gzeBJXAlUmQjeCvfL4f2zDM/0+Z0S+UvwdTVwsmAvaN?=
 =?us-ascii?q?ZmwWekaD9Yex3UjFVbL7Ubk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAAC4ARhchxHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMCWCPYN8iBlfjSZ8llyBdhIYFIdWIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOL4I2BQIDGAmCXAMDAQIgBB8KLAMBAgYBAQgXBQIiBAICAwFTBxIFgx2CA?=
 =?us-ascii?q?QEDAYxfm1x8M4N9gUOEaoELhnKEQYFXP4ERgl2IPoJXAolCl1cHAoIkBIQliwI?=
 =?us-ascii?q?jkVKJPJAogUaCDk0jUIJsgicXEo4McYEEAzuLPYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AkAAC4ARhchxHrdtBjHQEBBQEHBQGBUQgBCwGBMCWCPYN?=
 =?us-ascii?q?8iBlfjSZ8llyBdhIYFIdWIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDG?=
 =?us-ascii?q?AmCXAMDAQIgBB8KLAMBAgYBAQgXBQIiBAICAwFTBxIFgx2CAQEDAYxfm1x8M4N?=
 =?us-ascii?q?9gUOEaoELhnKEQYFXP4ERgl2IPoJXAolCl1cHAoIkBIQliwIjkVKJPJAogUaCD?=
 =?us-ascii?q?k0jUIJsgicXEo4McYEEAzuLPYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="56257320"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 12:12:04 -0800
Received: from localhost ([::1]:49376 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYzFD-0001Wk-Aa
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 15:12:03 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40869)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <aleksandar.markovic@rt-rk.com>) id 1gYz8h-0005P1-N1
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 15:05:22 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <aleksandar.markovic@rt-rk.com>) id 1gYz8Q-0001Ul-3N
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 15:05:09 -0500
Received: from mx2.rt-rk.com ([89.216.37.149]:42708 helo=mail.rt-rk.com)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <aleksandar.markovic@rt-rk.com>)
	id 1gYz8N-0001RM-Gg
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 15:05:01 -0500
Received: from localhost (localhost [127.0.0.1])
	by mail.rt-rk.com (Postfix) with ESMTP id BB1B01A471E;
	Mon, 17 Dec 2018 21:04:55 +0100 (CET)
X-Virus-Scanned: amavisd-new at rt-rk.com
Received: from localhost.localdomain (unknown [109.207.46.66])
	by mail.rt-rk.com (Postfix) with ESMTPSA id 309FF1A1D0C;
	Mon, 17 Dec 2018 21:04:55 +0100 (CET)
From: Aleksandar Markovic <aleksandar.markovic@rt-rk.com>
To: qemu-devel@nongnu.org, jancraig@amazon.com, smarkovic@wavecomp.com,
	amarkovic@wavecomp.com
Date: Mon, 17 Dec 2018 21:04:39 +0100
Message-Id: <20181217200444.14812-2-aleksandar.markovic@rt-rk.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181217200444.14812-1-aleksandar.markovic@rt-rk.com>
References: <20181217200444.14812-1-aleksandar.markovic@rt-rk.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 89.216.37.149
Subject: [Qemu-devel] [PATCH 1/6] target/mips: MXU: Add missing
 opcodes/decoding for LX* instructions
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Aleksandar Markovic <amarkovic@wavecomp.com>

Add missing opcodes and decoding engine for LXB, LXH, LXW, LXBU,
and LXHU instructions. They were for some reason forgotten in
previous commits. The MXU opcode list and decoding engine should
be now complete.

Signed-off-by: Aleksandar Markovic <amarkovic@wavecomp.com>
---
 target/mips/translate.c | 140 +++++++++++++++++++++++++++++-----------
 1 file changed, 102 insertions(+), 38 deletions(-)

diff --git a/target/mips/translate.c b/target/mips/translate.c
index e9c23a594b..e0c8d8c2f7 100644
--- a/target/mips/translate.c
+++ b/target/mips/translate.c
@@ -1663,12 +1663,21 @@ enum {
  *          =E2=94=82                               20..18
  *          =E2=94=9C=E2=94=80 100111 =E2=94=80 OPC_MXU__POOL16 =E2=94=80=
=E2=94=AC=E2=94=80 000 =E2=94=80 OPC_MXU_D32SARW
  *          =E2=94=82                            =E2=94=9C=E2=94=80 001 =
=E2=94=80 OPC_MXU_S32ALN
- *          =E2=94=9C=E2=94=80 101000 =E2=94=80 OPC_MXU_LXB      =E2=94=9C=
=E2=94=80 010 =E2=94=80 OPC_MXU_S32ALNI
- *          =E2=94=9C=E2=94=80 101001 =E2=94=80 <not assigned>   =E2=94=9C=
=E2=94=80 011 =E2=94=80 OPC_MXU_S32NOR
- *          =E2=94=9C=E2=94=80 101010 =E2=94=80 OPC_MXU_S16LDD   =E2=94=9C=
=E2=94=80 100 =E2=94=80 OPC_MXU_S32AND
- *          =E2=94=9C=E2=94=80 101011 =E2=94=80 OPC_MXU_S16STD   =E2=94=9C=
=E2=94=80 101 =E2=94=80 OPC_MXU_S32OR
- *          =E2=94=9C=E2=94=80 101100 =E2=94=80 OPC_MXU_S16LDI   =E2=94=9C=
=E2=94=80 110 =E2=94=80 OPC_MXU_S32XOR
- *          =E2=94=9C=E2=94=80 101101 =E2=94=80 OPC_MXU_S16SDI   =E2=94=94=
=E2=94=80 111 =E2=94=80 OPC_MXU_S32LUI
+ *          =E2=94=82                            =E2=94=9C=E2=94=80 010 =
=E2=94=80 OPC_MXU_S32ALNI
+ *          =E2=94=82                            =E2=94=9C=E2=94=80 011 =
=E2=94=80 OPC_MXU_S32NOR
+ *          =E2=94=82                            =E2=94=9C=E2=94=80 100 =
=E2=94=80 OPC_MXU_S32AND
+ *          =E2=94=82                            =E2=94=9C=E2=94=80 101 =
=E2=94=80 OPC_MXU_S32OR
+ *          =E2=94=82                            =E2=94=9C=E2=94=80 110 =
=E2=94=80 OPC_MXU_S32XOR
+ *          =E2=94=82                            =E2=94=94=E2=94=80 111 =
=E2=94=80 OPC_MXU_S32LUI
+ *          =E2=94=82
+ *          =E2=94=82                               7..5
+ *          =E2=94=9C=E2=94=80 101000 =E2=94=80 OPC_MXU__POOL17 =E2=94=80=
=E2=94=AC=E2=94=80 000 =E2=94=80 OPC_MXU_LXB
+ *          =E2=94=82                            =E2=94=9C=E2=94=80 001 =
=E2=94=80 OPC_MXU_LXH
+ *          =E2=94=9C=E2=94=80 101001 =E2=94=80 <not assigned>   =E2=94=9C=
=E2=94=80 011 =E2=94=80 OPC_MXU_LXW
+ *          =E2=94=9C=E2=94=80 101010 =E2=94=80 OPC_MXU_S16LDD   =E2=94=9C=
=E2=94=80 100 =E2=94=80 OPC_MXU_LXBU
+ *          =E2=94=9C=E2=94=80 101011 =E2=94=80 OPC_MXU_S16STD   =E2=94=94=
=E2=94=80 101 =E2=94=80 OPC_MXU_LXHU
+ *          =E2=94=9C=E2=94=80 101100 =E2=94=80 OPC_MXU_S16LDI
+ *          =E2=94=9C=E2=94=80 101101 =E2=94=80 OPC_MXU_S16SDI
  *          =E2=94=9C=E2=94=80 101110 =E2=94=80 OPC_MXU_S32M2I
  *          =E2=94=9C=E2=94=80 101111 =E2=94=80 OPC_MXU_S32I2M
  *          =E2=94=9C=E2=94=80 110000 =E2=94=80 OPC_MXU_D32SLL
@@ -1678,15 +1687,15 @@ enum {
  *          =E2=94=9C=E2=94=80 110100 =E2=94=80 OPC_MXU_Q16SLL   =E2=94=9C=
=E2=94=80 010 =E2=94=80 OPC_MXU_D32SARV
  *          =E2=94=9C=E2=94=80 110101 =E2=94=80 OPC_MXU_Q16SLR   =E2=94=9C=
=E2=94=80 011 =E2=94=80 OPC_MXU_Q16SLLV
  *          =E2=94=82                            =E2=94=9C=E2=94=80 100 =
=E2=94=80 OPC_MXU_Q16SLRV
- *          =E2=94=9C=E2=94=80 110110 =E2=94=80 OPC_MXU__POOL17 =E2=94=80=
=E2=94=B4=E2=94=80 101 =E2=94=80 OPC_MXU_Q16SARV
+ *          =E2=94=9C=E2=94=80 110110 =E2=94=80 OPC_MXU__POOL18 =E2=94=80=
=E2=94=B4=E2=94=80 101 =E2=94=80 OPC_MXU_Q16SARV
  *          =E2=94=82
  *          =E2=94=9C=E2=94=80 110111 =E2=94=80 OPC_MXU_Q16SAR
  *          =E2=94=82                               23..22
- *          =E2=94=9C=E2=94=80 111000 =E2=94=80 OPC_MXU__POOL18 =E2=94=80=
=E2=94=AC=E2=94=80 00 =E2=94=80 OPC_MXU_Q8MUL
+ *          =E2=94=9C=E2=94=80 111000 =E2=94=80 OPC_MXU__POOL19 =E2=94=80=
=E2=94=AC=E2=94=80 00 =E2=94=80 OPC_MXU_Q8MUL
  *          =E2=94=82                            =E2=94=94=E2=94=80 01 =E2=
=94=80 OPC_MXU_Q8MULSU
  *          =E2=94=82
  *          =E2=94=82                               20..18
- *          =E2=94=9C=E2=94=80 111001 =E2=94=80 OPC_MXU__POOL19 =E2=94=80=
=E2=94=AC=E2=94=80 000 =E2=94=80 OPC_MXU_Q8MOVZ
+ *          =E2=94=9C=E2=94=80 111001 =E2=94=80 OPC_MXU__POOL20 =E2=94=80=
=E2=94=AC=E2=94=80 000 =E2=94=80 OPC_MXU_Q8MOVZ
  *          =E2=94=82                            =E2=94=9C=E2=94=80 001 =
=E2=94=80 OPC_MXU_Q8MOVN
  *          =E2=94=82                            =E2=94=9C=E2=94=80 010 =
=E2=94=80 OPC_MXU_D16MOVZ
  *          =E2=94=82                            =E2=94=9C=E2=94=80 011 =
=E2=94=80 OPC_MXU_D16MOVN
@@ -1694,7 +1703,7 @@ enum {
  *          =E2=94=82                            =E2=94=94=E2=94=80 101 =
=E2=94=80 OPC_MXU_S32MOV
  *          =E2=94=82
  *          =E2=94=82                               23..22
- *          =E2=94=9C=E2=94=80 111010 =E2=94=80 OPC_MXU__POOL20 =E2=94=80=
=E2=94=AC=E2=94=80 00 =E2=94=80 OPC_MXU_Q8MAC
+ *          =E2=94=9C=E2=94=80 111010 =E2=94=80 OPC_MXU__POOL21 =E2=94=80=
=E2=94=AC=E2=94=80 00 =E2=94=80 OPC_MXU_Q8MAC
  *          =E2=94=82                            =E2=94=94=E2=94=80 10 =E2=
=94=80 OPC_MXU_Q8MACSU
  *          =E2=94=9C=E2=94=80 111011 =E2=94=80 OPC_MXU_Q16SCOP
  *          =E2=94=9C=E2=94=80 111100 =E2=94=80 OPC_MXU_Q8MADL
@@ -1750,7 +1759,7 @@ enum {
     OPC_MXU_S8SDI    =3D 0x25,
     OPC_MXU__POOL15  =3D 0x26,
     OPC_MXU__POOL16  =3D 0x27,
-    OPC_MXU_LXB      =3D 0x28,
+    OPC_MXU__POOL17  =3D 0x28,
     /* not assigned 0x29 */
     OPC_MXU_S16LDD   =3D 0x2A,
     OPC_MXU_S16STD   =3D 0x2B,
@@ -1764,11 +1773,11 @@ enum {
     OPC_MXU_D32SAR   =3D 0x33,
     OPC_MXU_Q16SLL   =3D 0x34,
     OPC_MXU_Q16SLR   =3D 0x35,
-    OPC_MXU__POOL17  =3D 0x36,
+    OPC_MXU__POOL18  =3D 0x36,
     OPC_MXU_Q16SAR   =3D 0x37,
-    OPC_MXU__POOL18  =3D 0x38,
-    OPC_MXU__POOL19  =3D 0x39,
-    OPC_MXU__POOL20  =3D 0x3A,
+    OPC_MXU__POOL19  =3D 0x38,
+    OPC_MXU__POOL20  =3D 0x39,
+    OPC_MXU__POOL21  =3D 0x3A,
     OPC_MXU_Q16SCOP  =3D 0x3B,
     OPC_MXU_Q8MADL   =3D 0x3C,
     OPC_MXU_S32SFL   =3D 0x3D,
@@ -1940,6 +1949,17 @@ enum {
 /*
  * MXU pool 17
  */
+enum {
+    OPC_MXU_LXB      =3D 0x00,
+    OPC_MXU_LXH      =3D 0x01,
+    OPC_MXU_LXW      =3D 0x03,
+    OPC_MXU_LXBU     =3D 0x04,
+    OPC_MXU_LXHU     =3D 0x05,
+};
+
+/*
+ * MXU pool 18
+ */
 enum {
     OPC_MXU_D32SLLV  =3D 0x00,
     OPC_MXU_D32SLRV  =3D 0x01,
@@ -1950,7 +1970,7 @@ enum {
 };
=20
 /*
- * MXU pool 18
+ * MXU pool 19
  */
 enum {
     OPC_MXU_Q8MUL    =3D 0x00,
@@ -1958,7 +1978,7 @@ enum {
 };
=20
 /*
- * MXU pool 19
+ * MXU pool 20
  */
 enum {
     OPC_MXU_Q8MOVZ   =3D 0x00,
@@ -1970,7 +1990,7 @@ enum {
 };
=20
 /*
- * MXU pool 20
+ * MXU pool 21
  */
 enum {
     OPC_MXU_Q8MAC    =3D 0x00,
@@ -25331,12 +25351,58 @@ static void decode_opc_mxu__pool16(CPUMIPSState=
 *env, DisasContext *ctx)
  * Decode MXU pool17
  *
  *   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
+ *  +-----------+---------+---------+---+---------+-----+-----------+
+ *  |  SPECIAL2 |    rs   |    rt   |0 0|    rd   |x x x|MXU__POOL15|
+ *  +-----------+---------+---------+---+---------+-----+-----------+
+ *
+ */
+static void decode_opc_mxu__pool17(CPUMIPSState *env, DisasContext *ctx)
+{
+    uint32_t opcode =3D extract32(ctx->opcode, 6, 2);
+
+    switch (opcode) {
+    case OPC_MXU_LXW:
+        /* TODO: Implement emulation of LXW instruction. */
+        MIPS_INVAL("OPC_MXU_LXW");
+        generate_exception_end(ctx, EXCP_RI);
+        break;
+    case OPC_MXU_LXH:
+        /* TODO: Implement emulation of LXH instruction. */
+        MIPS_INVAL("OPC_MXU_LXH");
+        generate_exception_end(ctx, EXCP_RI);
+        break;
+    case OPC_MXU_LXHU:
+        /* TODO: Implement emulation of LXHU instruction. */
+        MIPS_INVAL("OPC_MXU_LXHU");
+        generate_exception_end(ctx, EXCP_RI);
+        break;
+    case OPC_MXU_LXB:
+        /* TODO: Implement emulation of LXB instruction. */
+        MIPS_INVAL("OPC_MXU_LXB");
+        generate_exception_end(ctx, EXCP_RI);
+        break;
+    case OPC_MXU_LXBU:
+        /* TODO: Implement emulation of LXBU instruction. */
+        MIPS_INVAL("OPC_MXU_LXBU");
+        generate_exception_end(ctx, EXCP_RI);
+        break;
+    default:
+        MIPS_INVAL("decode_opc_mxu");
+        generate_exception_end(ctx, EXCP_RI);
+        break;
+    }
+}
+/*
+ *
+ * Decode MXU pool18
+ *
+ *   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
  *  +-----------+---------+-----+-------+-------+-------+-----------+
- *  |  SPECIAL2 |    rb   |x x x|  XRd  |  XRa  |0 0 0 0|MXU__POOL17|
+ *  |  SPECIAL2 |    rb   |x x x|  XRd  |  XRa  |0 0 0 0|MXU__POOL18|
  *  +-----------+---------+-----+-------+-------+-------+-----------+
  *
  */
-static void decode_opc_mxu__pool17(CPUMIPSState *env, DisasContext *ctx)
+static void decode_opc_mxu__pool18(CPUMIPSState *env, DisasContext *ctx)
 {
     uint32_t opcode =3D extract32(ctx->opcode, 18, 3);
=20
@@ -25380,15 +25446,15 @@ static void decode_opc_mxu__pool17(CPUMIPSState=
 *env, DisasContext *ctx)
=20
 /*
  *
- * Decode MXU pool18
+ * Decode MXU pool19
  *
  *   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
  *  +-----------+---+---+-------+-------+-------+-------+-----------+
- *  |  SPECIAL2 |0 0|x x|  XRd  |  XRc  |  XRb  |  XRa  |MXU__POOL18|
+ *  |  SPECIAL2 |0 0|x x|  XRd  |  XRc  |  XRb  |  XRa  |MXU__POOL19|
  *  +-----------+---+---+-------+-------+-------+-------+-----------+
  *
  */
-static void decode_opc_mxu__pool18(CPUMIPSState *env, DisasContext *ctx)
+static void decode_opc_mxu__pool19(CPUMIPSState *env, DisasContext *ctx)
 {
     uint32_t opcode =3D extract32(ctx->opcode, 22, 2);
=20
@@ -25406,15 +25472,15 @@ static void decode_opc_mxu__pool18(CPUMIPSState=
 *env, DisasContext *ctx)
=20
 /*
  *
- * Decode MXU pool19
+ * Decode MXU pool20
  *
  *   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
  *  +-----------+---------+-----+-------+-------+-------+-----------+
- *  |  SPECIAL2 |0 0 0 0 0|x x x|  XRc  |  XRb  |  XRa  |MXU__POOL19|
+ *  |  SPECIAL2 |0 0 0 0 0|x x x|  XRc  |  XRb  |  XRa  |MXU__POOL20|
  *  +-----------+---------+-----+-------+-------+-------+-----------+
  *
  */
-static void decode_opc_mxu__pool19(CPUMIPSState *env, DisasContext *ctx)
+static void decode_opc_mxu__pool20(CPUMIPSState *env, DisasContext *ctx)
 {
     uint32_t opcode =3D extract32(ctx->opcode, 18, 3);
=20
@@ -25458,15 +25524,15 @@ static void decode_opc_mxu__pool19(CPUMIPSState=
 *env, DisasContext *ctx)
=20
 /*
  *
- * Decode MXU pool20
+ * Decode MXU pool21
  *
  *   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
  *  +-----------+---+---+-------+-------+-------+-------+-----------+
- *  |  SPECIAL2 |an2|x x|  XRd  |  XRc  |  XRb  |  XRa  |MXU__POOL20|
+ *  |  SPECIAL2 |an2|x x|  XRd  |  XRc  |  XRb  |  XRa  |MXU__POOL21|
  *  +-----------+---+---+-------+-------+-------+-------+-----------+
  *
  */
-static void decode_opc_mxu__pool20(CPUMIPSState *env, DisasContext *ctx)
+static void decode_opc_mxu__pool21(CPUMIPSState *env, DisasContext *ctx)
 {
     uint32_t opcode =3D extract32(ctx->opcode, 22, 2);
=20
@@ -25669,10 +25735,8 @@ static void decode_opc_mxu(CPUMIPSState *env, Di=
sasContext *ctx)
         case OPC_MXU__POOL16:
             decode_opc_mxu__pool16(env, ctx);
             break;
-        case OPC_MXU_LXB:
-            /* TODO: Implement emulation of LXB instruction. */
-            MIPS_INVAL("OPC_MXU_LXB");
-            generate_exception_end(ctx, EXCP_RI);
+        case OPC_MXU__POOL17:
+            decode_opc_mxu__pool17(env, ctx);
             break;
         case OPC_MXU_S16LDD:
             /* TODO: Implement emulation of S16LDD instruction. */
@@ -25724,23 +25788,23 @@ static void decode_opc_mxu(CPUMIPSState *env, D=
isasContext *ctx)
             MIPS_INVAL("OPC_MXU_Q16SLR");
             generate_exception_end(ctx, EXCP_RI);
             break;
-        case OPC_MXU__POOL17:
-            decode_opc_mxu__pool17(env, ctx);
+        case OPC_MXU__POOL18:
+            decode_opc_mxu__pool18(env, ctx);
             break;
         case OPC_MXU_Q16SAR:
             /* TODO: Implement emulation of Q16SAR instruction. */
             MIPS_INVAL("OPC_MXU_Q16SAR");
             generate_exception_end(ctx, EXCP_RI);
             break;
-        case OPC_MXU__POOL18:
-            decode_opc_mxu__pool18(env, ctx);
-            break;
         case OPC_MXU__POOL19:
             decode_opc_mxu__pool19(env, ctx);
             break;
         case OPC_MXU__POOL20:
             decode_opc_mxu__pool20(env, ctx);
             break;
+        case OPC_MXU__POOL21:
+            decode_opc_mxu__pool21(env, ctx);
+            break;
         case OPC_MXU_Q16SCOP:
             /* TODO: Implement emulation of Q16SCOP instruction. */
             MIPS_INVAL("OPC_MXU_Q16SCOP");
--=20
2.17.1


