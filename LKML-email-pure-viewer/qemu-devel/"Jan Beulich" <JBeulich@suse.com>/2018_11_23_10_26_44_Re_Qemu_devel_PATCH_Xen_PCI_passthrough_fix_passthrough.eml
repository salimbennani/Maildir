Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:33:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 56DEF58037D
	for <like.xu@linux.intel.com>; Fri, 23 Nov 2018 02:27:42 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 02:27:42 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AehP3gRSOrAgA6ZWwxUyut48KNtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBaPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94VQnJPXsFSWSJPH4iw?=
 =?us-ascii?q?a5YDA/YEMetesoLzpUYBrQGmCAerCu3hyiFGhnH00qI1z+svHhzJ0hE4H98Msn?=
 =?us-ascii?q?rZo8j5OakOXe+r16nF1inDb+pK1Tvh8oXEbhIsrPeRVrxwa8rRzkwvGhvLgluU?=
 =?us-ascii?q?s4PlOS6e2/kTvGiG6+pgVP6gi24ppwpspTWhwtohhZfUhoIRy1DL6SV5zZ0uJd?=
 =?us-ascii?q?2lU050f8SoH4dXtyGfLoZ7RN4pTWJwuCsi1LEKpZ22cDIXxJg6xBPTceKLfoaI?=
 =?us-ascii?q?7x75SeqcIy90iG9rdb+9nRq/8EitxvfiWsS701tGtCRIn9fKu3sQzRLc8NKHRe?=
 =?us-ascii?q?F4/kq52TaAyQTT6uZcLEAwlKrbMIIhwqUqmpoct0TDAzX6mELsjK+Zbkkk++6o?=
 =?us-ascii?q?5Pr7Yrj+uJOQK4x5hhvjPqgzmcGzG/o0PwYOUmSB5Oix1qXv/UjjT7VLiv02nL?=
 =?us-ascii?q?PZsJffJckDv662HQpV0ps65xmiETimzsoXnX0eIF1efxKHko7pNE3QL/DjCvu/?=
 =?us-ascii?q?h1WskDR1yPzcMbzhH43ALnzCkLfnYLZ85FRQyAs1zdBD+Z1UDqsNL+70Wk/0r9?=
 =?us-ascii?q?HYCBg5Mwq7w+bhFdVxzIQeWXiAAqOBKqPdrUeI5v4zI+mLfIIVvDf9K/s76PL0?=
 =?us-ascii?q?gn45hEQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzv2xW/VyVObSOyQ7?=
 =?us-ascii?q?4k/WN8T4anFpvYAIaqhrOHwWG8BJIRY2lHDlWFFzDvb5mFXPEXLzufJ9IknjEa?=
 =?us-ascii?q?WLzydok6yBv7sQb7z6ZgfPPZ/zBduZ/92dww/eDKiBwp6RRyCMKS1XzLSHt7yX?=
 =?us-ascii?q?gVTT0717wqvEpm112Y2rJ5ifELKdsGrclOXQogfabV0qRfDNb0V0iJKs2OR1u8?=
 =?us-ascii?q?BM2vHBk6T84rws9IaEF4TZHqxCLD1i3iMrYT3fTfFZUytLOazXj4IO58zWrL0O?=
 =?us-ascii?q?8qiFxwEeVVMmjzzIx28UD5CpPNkk6Z3e7+V44RwSrM/2er1neVsQdTVwsmAvaN?=
 =?us-ascii?q?ZmwWekaD9Yex3UjFVbL7TOV/Pw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAAAw1fdbhxHrdtBiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYoN5iBhfix6CDZc7gXMUGBSEOAiEFSI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpL4I2BQIDGgeCWwEBAQECAQECIAQfCikDAgEBAgYBAQoYAgIiB?=
 =?us-ascii?q?AICAwFTBgESBYMcgXoIAQSnF3wziheBC4p+gVc/gVeCFzWEXgEBCBaDBDGCJgK?=
 =?us-ascii?q?IfxqGd06PJAkCgh+PJoFZiC6HAZgwgUaCDXCDPIInFxKOKiExgQeJY0eBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0APAAAw1fdbhxHrdtBiHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYoN5iBhfix6CDZc7gXMUGBSEOAiEFSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL?=
 =?us-ascii?q?4I2BQIDGgeCWwEBAQECAQECIAQfCikDAgEBAgYBAQoYAgIiBAICAwFTBgESBYM?=
 =?us-ascii?q?cgXoIAQSnF3wziheBC4p+gVc/gVeCFzWEXgEBCBaDBDGCJgKIfxqGd06PJAkCg?=
 =?us-ascii?q?h+PJoFZiC6HAZgwgUaCDXCDPIInFxKOKiExgQeJY0eBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="53442134"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 23 Nov 2018 02:27:10 -0800
Received: from localhost ([::1]:51489 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gQ8g2-0001kh-8d
	for like.xu@linux.intel.com; Fri, 23 Nov 2018 05:27:10 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51469)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <JBeulich@suse.com>) id 1gQ8fl-0001kb-0z
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:26:54 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <JBeulich@suse.com>) id 1gQ8fh-000383-Lf
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:26:52 -0500
Received: from prv1-mh.provo.novell.com ([137.65.248.33]:43858)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <JBeulich@suse.com>) id 1gQ8fh-00034m-DP
	for qemu-devel@nongnu.org; Fri, 23 Nov 2018 05:26:49 -0500
Received: from INET-PRV1-MTA by prv1-mh.provo.novell.com
	with Novell_GroupWise; Fri, 23 Nov 2018 03:26:46 -0700
Message-Id: <5BF7D5E402000078001FF501@prv1-mh.provo.novell.com>
X-Mailer: Novell GroupWise Internet Agent 18.1.0 
Date: Fri, 23 Nov 2018 03:26:44 -0700
From: "Jan Beulich" <JBeulich@suse.com>
To: "Roger Pau Monne" <roger.pau@citrix.com>, "Zhao Yan" <yan.y.zhao@intel.com>
References: <20181016021439.6212-1-yan.y.zhao@intel.com>
	<F22B14EC3CFBB843AD3E03B6B78F2C6A4ACFD80C@SHSMSX104.ccr.corp.intel.com>
	<20181018145636.k6ptvn4iszabjhxw@mac.bytemobile.com>
	<20181122131110.GA31906@joy-OptiPlex-7040>
	<20181122141805.vyqywi4ep65loye3@mac>
	<20181123050451.GC31906@joy-OptiPlex-7040>
	<20181123101919.twxrmehljvyhuii6@mac>
In-Reply-To: <20181123101919.twxrmehljvyhuii6@mac>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 137.65.248.33
Subject: Re: [Qemu-devel] [PATCH] Xen PCI passthrough: fix passthrough
 failure when irq map failure
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Anthony Perard <anthony.perard@citrix.com>,
	xen-devel <xen-devel@lists.xenproject.org>,
	Stefano Stabellini <sstabellini@kernel.org>, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

>>> On 23.11.18 at 11:19, <roger.pau@citrix.com> wrote:
> Adding Jan in case he has an opinion on my reply below.

I agree, fwiw.

Jan

> On Fri, Nov 23, 2018 at 12:04:51AM -0500, Zhao Yan wrote:
>> On Thu, Nov 22, 2018 at 03:18:05PM +0100, Roger Pau Monn=C3=A9 wrote:
>> > On Thu, Nov 22, 2018 at 08:11:20AM -0500, Zhao Yan wrote:
>> > > On Thu, Oct 18, 2018 at 03:56:36PM +0100, Roger Pau Monn=C3=A9 =
wrote:
>> > > > On Thu, Oct 18, 2018 at 08:22:41AM +0000, Zhao, Yan Y wrote:
>> > > > > Hi
>> > > > > The background for this patch is that: for some pci device, =
even it's PCI_INTERRUPT_PIN is not 0, it
actually does not support INTx mode, so we should just report error, =
disable INTx mode and continue the passthrough.
>> > > > > However, the commit 5a11d0f7 regards this as error condition =
and let qemu quit passthrough, which is too
rigorous.
>> > > > >=20
>> > > > > Error message is below:
>> > > > > libxl: error: libxl_qmp.c:287:qmp_handle_error_response: Domain =
2:received an error message from QMP server:
Mapping machine irq 0 to pirq -1 failed: Operation not permitted
>> > > >=20
>> > > > I'm having issues figuring out what's happening here.
>> > > > s->real_device.irq is 0, yet the PCI config space read of
>> > > > PCI_INTERRUPT_PIN returns something different than 0.
>> > > >=20
>> > > > AFAICT this is due to some kind of error in Linux, so that even =
when
>> > > > the device is supposed to have a valid IRQ the sysfs node it is =
set to
>> > > > 0, do you know the actual underlying cause of this?
>> > > >=20
>> > > > Thanks, Roger.
>> > > Hi Roger
>> > > Sorry for the later reply, I just missed this mail...
>> > > On my side, it's because the hardware actually does not support =
INTx mode,
>> > > but its configuration space does not report PCI_INTERRUPT_PIN to 0. =
It's a
>> > > hardware bug, but previous version of qemu can tolerate it, switch =
to MSI
>> > > and make passthrough work.
>> >=20
>> > Then I think it would be better to check both PCI_INTERRUPT_PIN and
>> > s->real_device.irq before attempting to map the IRQ.
>> >=20
>> > Making the error non-fatal would mean that a device with a valid IRQ
>> > could fail to be setup correctly but the guest will still be created,
>> > and things won't go as expected when the guest attempts to use it.
>> >=20
>> > Thanks, Roger.
>> hi roger
>> thanks for your sugguestion. it's right that "s->real_device.irq" is =
needed to be checked before mapping, like if
it's 0.
>> but on the other hand, maybe xc_physdev_map_pirq() itself can serve as =
a checking of "s->real_device.irq" ?
>> like in our case, it will fail and return -EPERM.
>> then error hanling is still conducted =3D=3D>set INTX_DISABLE flag, =
eventhrough the error is not fatal.
>>=20
>>     machine_irq =3D s->real_device.irq;
>>     rc =3D xc_physdev_map_pirq(xen_xc, xen_domid, machine_irq, &pirq);
>>     if (rc < 0) {
>>         error_setg_errno(errp, errno, "Mapping machine irq %u to"
>>                          " pirq %i failed", machine_irq, pirq);
>>=20
>>         /* Disable PCI intx assertion (turn on bit10 of devctl) */
>>         cmd |=3D PCI_COMMAND_INTX_DISABLE;
>>         machine_irq =3D 0;
>>         s->machine_irq =3D 0;
>> So, do you think it's all right just converting fatal error to =
non-fatal?
>=20
> As I said above, I think it would be better to leave the error as
> fatal and avoid attempting a xc_physdev_map_pirq with a machine_irq =
=3D=3D
> 0, which will fail.
>=20
> If we really want to go down the route of making the error non-fatal,
> I think you will also have to report PCI_INTERRUPT_PIN as 0 to the
> guest, so that it's clear to the guest that the device doesn't have
> legacy interrupt support.
>=20
> Exposing a device with PCI_INTERRUPT_PIN !=3D 0 but then not allowing
> the guest to clear PCI_COMMAND_INTX_DISABLE is likely bogus.
>=20
> Thanks, Roger.




