Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:00:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AD87F58042F
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 01:15:41 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 01:15:41 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AHM+7cB+qFF3K+/9uRHKM819IXTAuvvDOBiVQ1KB2?=
 =?us-ascii?q?1escTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMNboRr4oRzut86ZrSAfpiC?=
 =?us-ascii?q?gZMT457HrXgdF0gK5CvR6tuwBzz4vSbYqINvRxY7ndcMsaS2RfUMhfVCtPDYGy?=
 =?us-ascii?q?b4QAAOQPIP5Yoov/qVYBsBezCxWgC/30yjJTmnP2xLc33/g7HA3awAAtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSea7zLTUwj7eaP1W2Cvy6IjWfRAlvPqBWrZwcdfNxkU1EgPFj0mf?=
 =?us-ascii?q?qYz7MDORzekNvHKb4PR+WuKpkG4nrB1+oiO1ysgwjYnJg5sYx1bZ/it62IY4Pc?=
 =?us-ascii?q?O0RFJ4bNK+DZdcqiKXO5FoTs4sQ2xkojs2x78etZO/YCQG0okrywPBZ/CdcYWF?=
 =?us-ascii?q?7QjvWeWPLTp+mXlrYqiwhwyo/kil0uD8Vte70FJNriddltnMt2sN1wDI6sSdRf?=
 =?us-ascii?q?t9+Fqh1SyI1wDJ5eFIOUE0lazFJJ492rM8iIYfvEfZEiPrhUn7j7Waelsq9+Wo?=
 =?us-ascii?q?8ejrf7frqoeZN4BuiwH+Nqoumta4AeQ9KgUORnaU+eGh1LH64EL2XqtKgeMykq?=
 =?us-ascii?q?XAq5/aItkbpqilDABLyYYv7BK/Dzal0NsGh3UGI09FdQqDj4joPVHOPf/5Ae2+?=
 =?us-ascii?q?g1SqjDdk2fTGMqf9DZXKK3jOi7HhfbF7605Tzgoz0MpT55VOCrEOOP7zQFP+tM?=
 =?us-ascii?q?TEDh8lNAy52+LnCNR+1owAQ26ODbKZPbjWsV+J4OIvPuaNaJUUuDb7N/gq+fru?=
 =?us-ascii?q?gWUlll8aeKn6laYRc22yS/R6P12CMz2rhtYaDXxMuA04Q+r3zlqYXnlWbne2Wq?=
 =?us-ascii?q?s6oTYjFIOhC5yEX42onfmN0Tm2Gs5rYHtbAAWJGHbsa4LWQvoJdWeeL9Fslnke?=
 =?us-ascii?q?WKG8RpQ9/RepsgD81vxgNOWD4TASt5/oyI1o4fbOnwo57z1+Apeh1DSUQmRp22?=
 =?us-ascii?q?8FWTIy9KZ4p0N71xGEy6crreZfEIl3+vgBdwYxNZPYh7h+Ftu0XwPKftqNYFm8?=
 =?us-ascii?q?T9igGjY6VZQ6xNpYMBU1IMmrkh2Wh3niOLQSjbHeQcVsqq8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AvAACtOQpcmBHrdtBYCh4BBgcGgVIIC?=
 =?us-ascii?q?wGBMFCCEoxypQ2BcxQYFIdZIjUIDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII?=
 =?us-ascii?q?2BQIDGgEGglwDAwECJBkBAQQKKQECAwECBgEBSAgDASgrGQWDHIICAQMBpCyBb?=
 =?us-ascii?q?DOCdgEBBYJDhGgIh3CDE4EcgVc/gRGHaIYGjzuRKQcCgiEEjxojkTaZGoEmIgK?=
 =?us-ascii?q?CCU0jgzyCGwwXg0qKVHGBBAOISIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AvAACtOQpcmBHrdtBYCh4BBgcGgVIICwGBMFCCEoxypQ2?=
 =?us-ascii?q?BcxQYFIdZIjUIDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGgEGglwDA?=
 =?us-ascii?q?wECJBkBAQQKKQECAwECBgEBSAgDASgrGQWDHIICAQMBpCyBbDOCdgEBBYJDhGg?=
 =?us-ascii?q?Ih3CDE4EcgVc/gRGHaIYGjzuRKQcCgiEEjxojkTaZGoEmIgKCCU0jgzyCGwwXg?=
 =?us-ascii?q?0qKVHGBBAOISIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,324,1539673200"; 
   d="scan'208";a="65765563"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 01:15:28 -0800
Received: from localhost ([::1]:44924 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVCEJ-00038z-9l
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 04:15:27 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57378)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <luc.michel@greensocs.com>) id 1gVC1H-0007vE-Qa
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 04:02:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <luc.michel@greensocs.com>) id 1gVC1G-0005WO-O4
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 04:01:59 -0500
Received: from greensocs.com ([193.104.36.180]:52241)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <luc.michel@greensocs.com>)
	id 1gVC1B-0005Rk-86; Fri, 07 Dec 2018 04:01:53 -0500
Received: from localhost (localhost [127.0.0.1])
	by greensocs.com (Postfix) with ESMTP id 99C7E48002B;
	Fri,  7 Dec 2018 10:01:48 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=greensocs.com;
	s=mail; t=1544173308;
	bh=9VpM4fQSLmCFWhF4lXiU5yzJeMmL84qECiIHELh1Dvs=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References;
	b=ZfIkn23CoITZ7z4C7ozY6oRH7agnksuA+mBdxScy76aJJV19EgKJQ2xDg9zKaIupU
	alRiqyJPr1lo2e2sex5cTcY/cp2wrpLzWzCkMtsZ7a0GfBOYkXpuQawxWpg7YpIkyX
	4p6T/YVp6+FZH4ZsUqTqrTVJT4HToo4WIyOlGWCc=
X-Virus-Scanned: amavisd-new at greensocs.com
Authentication-Results: gs-01.greensocs.com (amavisd-new);
	dkim=pass (1024-bit key) header.d=greensocs.com header.b=hYiWYwh8;
	dkim=pass (1024-bit key) header.d=greensocs.com header.b=hYiWYwh8
Received: from greensocs.com ([127.0.0.1])
	by localhost (gs-01.greensocs.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id SJt4PgcpJFfG; Fri,  7 Dec 2018 10:01:43 +0100 (CET)
Received: by greensocs.com (Postfix, from userid 998)
	id 70953480024; Fri,  7 Dec 2018 10:01:42 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=greensocs.com;
	s=mail; t=1544173302;
	bh=9VpM4fQSLmCFWhF4lXiU5yzJeMmL84qECiIHELh1Dvs=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References;
	b=hYiWYwh8HzrjOVZjrOWBgvaezKo9jEVbGzuDz7a6iWzfSRxwQBzTvosu08Rc7vwPm
	tDWsh2Bb2JwW+zbGHwXTMUPcotiD99DIOPd8hhC7ptZDm9zfl5xILgUoSxvprzoRCI
	syu+zCBKmlz5tofO5R7GDSHs3qS9Jycm8caTtpEw=
Received: from michell-laptop.home.lmichel.fr
	(lfbn-1-8165-82.w90-112.abo.wanadoo.fr [90.112.74.82])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: luc.michel@greensocs.com)
	by greensocs.com (Postfix) with ESMTPSA id F312A441B53;
	Fri,  7 Dec 2018 10:01:41 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=greensocs.com;
	s=mail; t=1544173302;
	bh=9VpM4fQSLmCFWhF4lXiU5yzJeMmL84qECiIHELh1Dvs=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References;
	b=hYiWYwh8HzrjOVZjrOWBgvaezKo9jEVbGzuDz7a6iWzfSRxwQBzTvosu08Rc7vwPm
	tDWsh2Bb2JwW+zbGHwXTMUPcotiD99DIOPd8hhC7ptZDm9zfl5xILgUoSxvprzoRCI
	syu+zCBKmlz5tofO5R7GDSHs3qS9Jycm8caTtpEw=
From: Luc Michel <luc.michel@greensocs.com>
To: qemu-devel@nongnu.org
Date: Fri,  7 Dec 2018 10:01:21 +0100
Message-Id: <20181207090135.7651-4-luc.michel@greensocs.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181207090135.7651-1-luc.michel@greensocs.com>
References: <20181207090135.7651-1-luc.michel@greensocs.com>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 193.104.36.180
Subject: [Qemu-devel] [PATCH v8 03/16] gdbstub: add multiprocess support to
 '?' packets
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>,
	Eduardo Habkost <ehabkost@redhat.com>, alistair@alistair23.me,
	mark.burton@greensocs.com,
	=?UTF-8?q?Philippe=20Mathieu-Daud=C3=A9?= <f4bug@amsat.org>,
	saipava@xilinx.com, edgari@xilinx.com, qemu-arm@nongnu.org,
	Luc Michel <luc.michel@greensocs.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The gdb_get_cpu_pid() function does the PID lookup for the given CPU. It
checks if the CPU is a direct child of a CPU cluster. If it is, the
returned PID is the cluster ID plus one (cluster IDs start at 0, GDB
PIDs at 1). When the CPU is not a child of such a container, the PID of
the default process is returned.

The gdb_fmt_thread_id() function generates the string to be used to ident=
ify
a given thread, in a response packet for the peer. This function
supports generating thread IDs when multiprocess mode is enabled (in the
form `p<pid>.<tid>').

Use them in the reply to a '?' request.

Signed-off-by: Luc Michel <luc.michel@greensocs.com>
Acked-by: Alistair Francis <alistair.francis@wdc.com>
Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>
---
 gdbstub.c | 65 +++++++++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 63 insertions(+), 2 deletions(-)

diff --git a/gdbstub.c b/gdbstub.c
index 2a3aa0f07e..07508c2e6b 100644
--- a/gdbstub.c
+++ b/gdbstub.c
@@ -638,10 +638,57 @@ static int memtox(char *buf, const char *mem, int l=
en)
         }
     }
     return p - buf;
 }
=20
+static uint32_t gdb_get_cpu_pid(const GDBState *s, CPUState *cpu)
+{
+#ifndef CONFIG_USER_ONLY
+    gchar *path, *name =3D NULL;
+    Object *obj;
+    CPUClusterState *cluster;
+    uint32_t ret;
+
+    path =3D object_get_canonical_path(OBJECT(cpu));
+
+    if (path =3D=3D NULL) {
+        /* Return the default process' PID */
+        ret =3D s->processes[s->process_num - 1].pid;
+        goto out;
+    }
+
+    name =3D object_get_canonical_path_component(OBJECT(cpu));
+    assert(name !=3D NULL);
+
+    /*
+     * Retrieve the CPU parent path by removing the last '/' and the CPU=
 name
+     * from the CPU canonical path. */
+    path[strlen(path) - strlen(name) - 1] =3D '\0';
+
+    obj =3D object_resolve_path_type(path, TYPE_CPU_CLUSTER, NULL);
+
+    if (obj =3D=3D NULL) {
+        /* Return the default process' PID */
+        ret =3D s->processes[s->process_num - 1].pid;
+        goto out;
+    }
+
+    cluster =3D CPU_CLUSTER(obj);
+    ret =3D cluster->cluster_id + 1;
+
+out:
+    g_free(name);
+    g_free(path);
+
+    return ret;
+
+#else
+    /* TODO: In user mode, we should use the task state PID */
+    return s->processes[s->process_num - 1].pid;
+#endif
+}
+
 static const char *get_feature_xml(const char *p, const char **newp,
                                    CPUClass *cc)
 {
     size_t len;
     int i;
@@ -907,10 +954,23 @@ static CPUState *find_cpu(uint32_t thread_id)
     }
=20
     return NULL;
 }
=20
+static char *gdb_fmt_thread_id(const GDBState *s, CPUState *cpu,
+                           char *buf, size_t buf_size)
+{
+    if (s->multiprocess) {
+        snprintf(buf, buf_size, "p%02x.%02x",
+                 gdb_get_cpu_pid(s, cpu), cpu_gdb_index(cpu));
+    } else {
+        snprintf(buf, buf_size, "%02x", cpu_gdb_index(cpu));
+    }
+
+    return buf;
+}
+
 static int is_query_packet(const char *p, const char *query, char separa=
tor)
 {
     unsigned int query_len =3D strlen(query);
=20
     return strncmp(p, query, query_len) =3D=3D 0 &&
@@ -1018,22 +1078,23 @@ static int gdb_handle_packet(GDBState *s, const c=
har *line_buf)
     const char *p;
     uint32_t thread;
     int ch, reg_size, type, res;
     uint8_t mem_buf[MAX_PACKET_LENGTH];
     char buf[sizeof(mem_buf) + 1 /* trailing NUL */];
+    char thread_id[16];
     uint8_t *registers;
     target_ulong addr, len;
=20
     trace_gdbstub_io_command(line_buf);
=20
     p =3D line_buf;
     ch =3D *p++;
     switch(ch) {
     case '?':
         /* TODO: Make this return the correct value for user-mode.  */
-        snprintf(buf, sizeof(buf), "T%02xthread:%02x;", GDB_SIGNAL_TRAP,
-                 cpu_gdb_index(s->c_cpu));
+        snprintf(buf, sizeof(buf), "T%02xthread:%s;", GDB_SIGNAL_TRAP,
+                 gdb_fmt_thread_id(s, s->c_cpu, thread_id, sizeof(thread=
_id)));
         put_packet(s, buf);
         /* Remove all the breakpoints when this query is issued,
          * because gdb is doing and initial connect and the state
          * should be cleaned up.
          */
--=20
2.19.2


