Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:58:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C10545803DC;
	Tue, 11 Dec 2018 16:08:30 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 16:08:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AEfBZORP2LZn8n4rXQgcl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn4r8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bIUPAeUOMvpFoIb/qVQOtgO+CAu3CePz1jNFnGP60bEg3ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KaASUfq0zKnTyTXMde1W0irn5ofWbhAhovaMXaxtesfW0kYvDxjIgU+U?=
 =?us-ascii?q?qYzkITyV0OcAv3KG4OV+TO+ijXMspQ92ojiq3Mgsi4/Ji5oWyl/a7yV5xpg6Jd?=
 =?us-ascii?q?miRE58e96kH51dvDyZOYtuWs4uXX1ktSIgxrEbt5O3YjIGxIkkyhLDcfCKcoqF?=
 =?us-ascii?q?7gr9WOqNPTt1indod6yjiBu370Sv0fHzWdSx3VpUtSVJjsXAu3UT2xPO9seLVv?=
 =?us-ascii?q?5w80S71juO2Q3e7+9EIU46lafYLpMu3r89mYQTvEnFAyT4gl/5jLWMeUUh4uWo?=
 =?us-ascii?q?6/roYrHhppKEKY90hR/xMr40lsy8H+s4KA4OUHaf+eim073j50L5TK1Ljv0wjK?=
 =?us-ascii?q?bZrIjXKdoHqqO9GQNZz4gu5wilAzu709kUgWMLIVNHdR6fiojmIVDOIPT2Dfel?=
 =?us-ascii?q?hFSslS9mx/THPr3nH5XMIWHPkLT/crZn7U5T1g4zwclY55NaDLEOPujzV1TvtN?=
 =?us-ascii?q?zXEBA5KRa4w+X5B9Vn0IMRR2aPDrWeMKPIvl+E/vgvLPWUZI8JpDb9LOAo5/rv?=
 =?us-ascii?q?jX86h1ARZ6ao3YYMZXC8H/RmJViZYHX2jtcAF2cKohQxTOjwhFKeVj5TYm64X7?=
 =?us-ascii?q?gg6TEjFIKmEYDDS5itgLOb3Se7AodZZmdcBlCMDHfnbYOEW/gXZSKWI89hlCEE?=
 =?us-ascii?q?VLe7R48g0xGuqBH1y759IuXI/S0YsIrp1MJp6O3LiREy6Tt0Atyf02GKUW54hG?=
 =?us-ascii?q?AIRzgw3KB5pkxw0VOD0al+g/xFGt1f/fJJUgEmNZHCy+x2Ecz9WgXEft2RUlap?=
 =?us-ascii?q?Xs2mAS0tTtI229IBeV19G9WljhDAxSaqGaUal76QCZww86Lc2WXxJslnx3bH0q?=
 =?us-ascii?q?khk0cpQs9VOWK6ga5/8hDZB5TVnEWBi6aqaaMc0TbO9GiZy2qCpkVYUA9qXqXD?=
 =?us-ascii?q?UnASfU/WrdX/5kPfQL6iE7UnMg1dycGcLqtGcMHmjVJDRP37ItTRf3qxm3usBR?=
 =?us-ascii?q?aP3r6DcZDle3sD0ynHCEgLiQYT/W2YOgg4ASuhp2HeDDlqFV/0Z0Ps8O9+qG60?=
 =?us-ascii?q?T0MuzgGKaVFh2KSx+hIPmfOcTPYT1KoeuCg9szV0AEq939XOBtWdvQVhYrtTbc?=
 =?us-ascii?q?k94Fhd02LZrBJyPpq7IqBmh14edRl3vkz02xV2DIVAjdYlrHcwwAVuLqKY1UtL?=
 =?us-ascii?q?dymE0pDoJr3XNm7y8Qiza67X31He18qW+qcP6fgit1XvpgapFlAm83Vm1dlV3G?=
 =?us-ascii?q?CR5pHLDAoUTJLwXVw79xl8p7HGfCY945nY2mFrMamxqjXCwc4mBPM5yha8eNdS?=
 =?us-ascii?q?KLmLFAvsHMwVGcevKPYmlEO0bh0ZJu9S8q00P8S4d/ad3K6rPeBgnC+pjGhd4Y?=
 =?us-ascii?q?B91F6M+DR4SuLSw5kFxPSY1BOdVzjglFehrtz3mYdcaDASA2qz0zTrCJRQZ61y?=
 =?us-ascii?q?Z4kLD2iuLtazxtV/gZ7tRnFZ+ESiB1MAxM+mZx6SY0bh0g1X0EQduWanljegzz?=
 =?us-ascii?q?xojzEpqbKS3DbPw+v+bhUHIHNERG54gVfqP4e0ldEaUFG0YAczkBuq+Fj1x7Jc?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdzCqu4/1nhxghGKGMXZzqmHUecVxxRfZ+dzdSuRd3jsARClklzbXAkKw?=
 =?us-ascii?q?MMWu/dWRj53DqPyxV3q9Vp1Pdinm1YGAuzGh5W1pAh2/mOq/msb9Hgg50i/71t?=
 =?us-ascii?q?9qWjvOrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXsNXzELxMTZ4Ark2E1lNX+Jw4P5VnOAwspufdW6Y2UW2j4j4MBOEq?=
 =?us-ascii?q?ub8LtEnS5tqFqisQ3ReeR9nisayfY2634VmeAJtBAtziWAGL8SG0ZYMDfolxSJ?=
 =?us-ascii?q?6dC+sapWaHyucbi2yEpxg9ShAKuerQFbXXbzYo0iEjNo7sVjLFLM12X+6oTleN?=
 =?us-ascii?q?nTd90frBOVnAnbj+hJNp0xjOEFijR9OWLypnAlz+87jRpz3ZC1poSHKmNt/L6n?=
 =?us-ascii?q?DR5cLDH6e8QT+jT1h6ZEgsmWx5yvHolmGjgTQJvoSveoHCgTtPv9MQaODSY8qm?=
 =?us-ascii?q?yaGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6z8K/FH4rR9Myv9yOxn7T2fSvwOoajYySJiCIxta9ABC50HJMcOA6uJ/BT?=
 =?us-ascii?q?1X/pqkrAaVMGyUexxIDX0VWkyDH13jPKOh5dze/OiDHOa+M+HCYbaTqexdSveI?=
 =?us-ascii?q?w4ig0pB98jaIN8WPOGRiDvIh1kpCW3B5B9rWmzEVRyMLkCLNataRpA2g9S1vss?=
 =?us-ascii?q?C/7PPrVRrv5IuIFrtSKMhv9AqwgauZLO6QgyB5KTlD25MIxH/IzqUf3VEIhyFv?=
 =?us-ascii?q?cTmtDaoPtSrXQK3Mna9XCgYRazlvO8tQ86I8wg5NNNbbitzr1754jf01C1ZfWV?=
 =?us-ascii?q?zigMGpYsMKLH+nNFPaH0aGL7CGJTzNw8HqbqKwU7xQjONItxKuvTaXCVPsPjOG?=
 =?us-ascii?q?lzPxTRCgLflMjD2HPBxZoIyyaAttBnP5TN34ahy3Ktt3jTwtzL0wh3PKM3McMD?=
 =?us-ascii?q?dmf0NMqL2Q8T1XgvFlF2Nd6XplKPGOmzyF4OnANpYWrfxrDzxol+Jb5XQ20ada?=
 =?us-ascii?q?4DtYS/x1hiTSqMVjo1WnkumJ1zpmXwBCqjdNhIKXo0piPb/V+YVHWXbB5BgN93?=
 =?us-ascii?q?mfCwwWp9t5Dd3io6BRxcLJlKL2KTdC9crb/MocB8fOLsKHP2EsMR7oGD7SEQsE?=
 =?us-ascii?q?QiSnNWDZh0xBjv6S8meZoYQ9qpjpy9IyTeoRcFEzGvoRCVUhVOACJ5J+RXlsxY?=
 =?us-ascii?q?Kbi8sB/jyaoR/dTc5Zr7jOU/7UCvLqfmW3l75BMjEP27LjKY0NfrX2x09ldBEu?=
 =?us-ascii?q?lpziEk7RUNYd5CFsOFxn6H5R+WRzGzVgk3nubRmgtTpKTaa5?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADVUBBch0O0hNFlGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMIE5gQIng3uIGV+LM4INFJc+FIFfFBgDEAGHLiI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAdAQEsCwEFCQEBC?=
 =?us-ascii?q?hgCAgUhAgIDDAVJEwWDHAGCAQEDAaUYcIEvgnYBAQWHKQiBC4oUgRwXgUA/gRG?=
 =?us-ascii?q?DEoRKH4McgleJGYIUlVAJgRWFdIo9I4lxh0+ZM4FGgg4zGggcFIMnCYISDBeDf?=
 =?us-ascii?q?YRhhUA/MoEEAQEBiBeCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAADVUBBch0O0hNFlGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMIE5gQIng3uIGV+LM4INFJc+FIFfFBgDEAGHLiI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAdAQEsCwEFCQEBChgCAgUhAgIDDAV?=
 =?us-ascii?q?JEwWDHAGCAQEDAaUYcIEvgnYBAQWHKQiBC4oUgRwXgUA/gRGDEoRKH4McgleJG?=
 =?us-ascii?q?YIUlVAJgRWFdIo9I4lxh0+ZM4FGgg4zGggcFIMnCYISDBeDfYRhhUA/MoEEAQE?=
 =?us-ascii?q?BiBeCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="56513313"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 16:08:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726250AbeLLAF1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 19:05:27 -0500
Received: from mail.skyhub.de ([5.9.137.197]:60798 "EHLO mail.skyhub.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726201AbeLLAF0 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 19:05:26 -0500
Received: from zn.tnic (p200300EC2BCD2B002DC08A63FFF8C6E5.dip0.t-ipconnect.de [IPv6:2003:ec:2bcd:2b00:2dc0:8a63:fff8:c6e5])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.skyhub.de (SuperMail on ZX Spectrum 128k) with ESMTPSA id 563981EC09F7;
        Wed, 12 Dec 2018 01:05:25 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=alien8.de; s=dkim;
        t=1544573125;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         content-transfer-encoding:in-reply-to:in-reply-to:  references:references;
        bh=gqPOJX+Rt6zLjB70ObQSCS9/UCYrIp6DPpfaM5Hq2ho=;
        b=Ho//sV6kasPUtxT5gFHArPRu5XNZqI6taon4/422gPpwepETa6Ajk3H68sOzYsb4d1lvvk
        zO+E88u7ua5ceqBqJeTNPhLK1kEQdcYgEtvLFm3aj719/b0lq161+Xiz9vcVrNgU8BsCQZ
        ljn07HBruFpu0SeJEe5enJVQeCZUShQ=
Date: Wed, 12 Dec 2018 01:05:18 +0100
From: Borislav Petkov <bp@alien8.de>
To: "Lendacky, Thomas" <Thomas.Lendacky@amd.com>
Cc: "x86@kernel.org" <x86@kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Andrea Arcangeli <aarcange@redhat.com>,
        Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>,
        Jiri Kosina <jkosina@suse.cz>, Ingo Molnar <mingo@redhat.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Tim Chen <tim.c.chen@linux.intel.com>,
        David Woodhouse <dwmw@amazon.co.uk>
Subject: Re: [PATCH v2] x86/speculation: Add support for STIBP always-on
 preferred mode
Message-ID: <20181212000518.GX27375@zn.tnic>
References: <20181211224615.5373.65736.stgit@tlendack-t1.amdoffice.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181211224615.5373.65736.stgit@tlendack-t1.amdoffice.net>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 11, 2018 at 10:46:16PM +0000, Lendacky, Thomas wrote:
> Different AMD processors may have different implementations of STIBP.
> When STIBP is conditionally enabled, some implementations would benefit
> from having STIBP always on instead of toggling the STIBP bit through MSR
> writes. This preference is advertised through a CPUID feature bit.
> 
> When conditional STIBP support is requested at boot and the CPU advertises
> STIBP always-on mode as preferred, switch to STIBP "on" support. Print a
> message to let the user know this occurred. Also, provide a boolean that
> be used in stibp_state() to return a message tailored to the always-on
> support.
> 
> Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
> ---
> 
> This patch is against the x86/pti branch of the tip tree:
>   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86/pti
> 
> Changes from v1:
> - Removed explicit SPECTRE_V2_USER_STRICT_PREFERRED mode
> - Added a message when switching to always-on mode
> - Set and used a static boolean for the string in stibp_state()
> 
>  arch/x86/include/asm/cpufeatures.h |    1 +
>  arch/x86/kernel/cpu/bugs.c         |   17 ++++++++++++++++-
>  2 files changed, 17 insertions(+), 1 deletion(-)
> 
> diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
> index 28c4a50..df8e94e2 100644
> --- a/arch/x86/include/asm/cpufeatures.h
> +++ b/arch/x86/include/asm/cpufeatures.h
> @@ -284,6 +284,7 @@
>  #define X86_FEATURE_AMD_IBPB		(13*32+12) /* "" Indirect Branch Prediction Barrier */
>  #define X86_FEATURE_AMD_IBRS		(13*32+14) /* "" Indirect Branch Restricted Speculation */
>  #define X86_FEATURE_AMD_STIBP		(13*32+15) /* "" Single Thread Indirect Branch Predictors */
> +#define X86_FEATURE_AMD_STIBP_ALWAYS_ON	(13*32+17) /* "" Single Thread Indirect Branch Predictors always-on preferred */
>  #define X86_FEATURE_AMD_SSBD		(13*32+24) /* "" Speculative Store Bypass Disable */
>  #define X86_FEATURE_VIRT_SSBD		(13*32+25) /* Virtualized Speculative Store Bypass Disable */
>  #define X86_FEATURE_AMD_SSB_NO		(13*32+26) /* "" Speculative Store Bypass is fixed in hardware. */
> diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c
> index 58689ac..db156e1 100644
> --- a/arch/x86/kernel/cpu/bugs.c
> +++ b/arch/x86/kernel/cpu/bugs.c
> @@ -61,6 +61,8 @@
>  /* Control unconditional IBPB in switch_mm() */
>  DEFINE_STATIC_KEY_FALSE(switch_mm_always_ibpb);
>  
> +static bool stibp_always_on;
> +
>  void __init check_bugs(void)
>  {
>  	identify_boot_cpu();
> @@ -355,6 +357,18 @@ static void __init spec_v2_user_print_cond(const char *reason, bool secure)
>  		break;
>  	}
>  
> +	/*
> +	 * At this point, an STIBP mode other than "off" has been set.
> +	 * If STIBP support is not being forced, check if STIBP always-on
> +	 * is preferred.
> +	 */
> +	if (mode != SPECTRE_V2_USER_STRICT &&
> +	    boot_cpu_has(X86_FEATURE_AMD_STIBP_ALWAYS_ON)) {
> +		stibp_always_on = true;
> +		mode = SPECTRE_V2_USER_STRICT;
> +		pr_info("mitigation: STIBP always-on is preferred\n");
> +	}
> +
>  	/* Initialize Indirect Branch Prediction Barrier */
>  	if (boot_cpu_has(X86_FEATURE_IBPB)) {
>  		setup_force_cpu_cap(X86_FEATURE_USE_IBPB);
> @@ -1088,7 +1102,8 @@ static char *stibp_state(void)
>  	case SPECTRE_V2_USER_NONE:
>  		return ", STIBP: disabled";
>  	case SPECTRE_V2_USER_STRICT:
> -		return ", STIBP: forced";
> +		return stibp_always_on ? ", STIBP: always-on"
> +				       : ", STIBP: forced";

I still don't like that separate stibp_always_on variable when we can do
all the querying just by using mode and X86_FEATURE_AMD_STIBP_ALWAYS_ON.

-- 
Regards/Gruss,
    Boris.

Good mailing practices for 400: avoid top-posting and trim the reply.
