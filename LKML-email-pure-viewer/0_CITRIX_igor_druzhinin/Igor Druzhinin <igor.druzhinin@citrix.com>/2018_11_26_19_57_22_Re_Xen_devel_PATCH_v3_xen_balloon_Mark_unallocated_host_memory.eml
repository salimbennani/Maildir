Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:40:28 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7FF815802E4;
	Mon, 26 Nov 2018 11:57:42 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 11:57:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A77DrHRP3f6EE/KYGLg8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPnzr8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzcaTBc90aW2dNR99dWjFbDYyh?=
 =?us-ascii?q?c4UAE/QBMvtXooLgo1cDrQeyCQyqCejyyDFHm2X20LUn3eo/HwHI3A8uEdwAv3?=
 =?us-ascii?q?vbrtr6KKgcUfutzKTK1jjDc/Fb1C3h5ITUfB0so/eBVq9wf8rLzkkvEhvIgFaf?=
 =?us-ascii?q?qYziJTOey+oDs3KG7+thVeKvimgnqwB3ojOywcosi4bJhoUPylze6Cp52ps1JN?=
 =?us-ascii?q?y4SE56Z96kEZ1QujqGOIt3XsMiWWBouSkgxrIavp67eTEHxZI6zBDcc/yKa5aE?=
 =?us-ascii?q?7g7nWeqLPDt1imxpdKiiixux7USs0OzxW8us3FpXrydJjMPAum4T2xDO8MSLV/?=
 =?us-ascii?q?tw80a71TuP1w3e7PxPL1oumqrBMZEhx6Y9lpoNvkTHGS/7gFv2jKCIeUU+4OSo?=
 =?us-ascii?q?6ProYq/gppCCM494kAb+Mr4hmsCnAOQ4NBYBX3SD9OiiyLHu+Vf1TKhEg/EoiK?=
 =?us-ascii?q?XVrZPXKdgBqqO4AQJZyoMj5Ay+Dzei3tQYh34HLFdddRKDjojpPUzOIf/hAfe8?=
 =?us-ascii?q?nVusijFryO7CPrH4BZXMIH7Dn6n7fbtm9U5cxxQ8zcpF65JXFL4BOvTzVVH1tN?=
 =?us-ascii?q?DCCR85KQO0z/79CNphzoMeRX6PAqiBPaPWsF+I5fwgL/ODZY8Iozv9L/kl5/jz?=
 =?us-ascii?q?jX42g1MdfK+p3YcJZ3C8BPhpP0KZYX/0iNcbDWgKphY+TPDtiFCaUT5cfXeyX7?=
 =?us-ascii?q?4m6TE8Eo6mDZrDSZqrgLyOxyq7GpxWZmZbClGDC3vodoOEW+sSZyKWOMNujjsE?=
 =?us-ascii?q?Vb25QY87yR6urBP6y6ZgLufM+C0Ysozs2MJ25+3UkxEy8zt0At+Z02GMSWF0g2?=
 =?us-ascii?q?wJSyU33KB5vUxy1FOD3bJkjPxfENxZ/+lJXRsiNZ7A0+x6DMj/VRjafteJT1am?=
 =?us-ascii?q?Qc+qASsrQdIz2NIOZ0d9G9O/jhHMxSaqArkVl6CVC5ww6K7Tw3/xJ8NlwXbcyK?=
 =?us-ascii?q?Yhl0UmQtdINWC+ha5w7Q7TC5TNk0WYjamqc6sc0TXJ9GeCy2qOoU5ZXBRxUaXD?=
 =?us-ascii?q?QXAQeE/Woc7l6UPFSr+kEa4nPRdZyc6eNqtKbcXkgkhcS/f9JtvSeWKxlH22BR?=
 =?us-ascii?q?aT2LyMao3me2Ee3CXYDEgJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGTVukc3qwatys7qzV7BlC938nIBNqGvAdheKRcYd?=
 =?us-ascii?q?Ug4FZIz27Ztgp9PoC+IKBmnFIRbwN3v0b23RVtFopAidQqrG8tzAdqNaKY0VZB?=
 =?us-ascii?q?dzSE3ZDwOrzbMHXy8Aqoa67M3lHe0dCW+qgU5fQ8qlXjuhypF0U4/3Vm1dlVz2?=
 =?us-ascii?q?WT5pHQAAUOVpLxV1499wJmqLHCfik9+4TU2GV2PqmwrDDD1MwmBes/xhm7YtdQ?=
 =?us-ascii?q?LbmLFAnxE80dGcijM+gqm1mvbhIZM+Fe7q80P8W6d/SY3K6nJvpvnDWjjW5f+o?=
 =?us-ascii?q?ByzlqM9zZgSu7Px5sEw+yY0hGbWDvmjVahstr4mYZLZTwJGmq/yC7kBJNeZ6Fo?=
 =?us-ascii?q?fIYLD3uuLNOzxtlkm5HtXHtY/ka5B1wawM+pZQaSb1vl0A1K1EQYvWaomTGlwD?=
 =?us-ascii?q?xziT0pqLSQ3DbPw+j7aBUIIGpLS3R8glf2Joi0icsXXEypbwgviRuk6lz2x6ld?=
 =?us-ascii?q?pKRjMWbTRV1EcDTxL2FnSqGwrKaNY9ZT6JM0tiVaSOS9YVGARr/9uRcayD7jH2?=
 =?us-ascii?q?1FyTA/djGqvIj5nhNghGKcKnZzsGTWecVqyRjD49zcQOZb3iAaSylglTnXGl+8?=
 =?us-ascii?q?MsGr/dqOjZfDseO+V2W7Wp1IaybrzoCAtCq95WJ0Bx2yhPSzmtzhEQgn3i73zd?=
 =?us-ascii?q?hqVSPUrBniZonnzbi1MeVifkNwHl/z99J6Gp1ikos3nJwR2WIVhpKP8XoFkGfz?=
 =?us-ascii?q?N85W2ab/bHoLWD4KzMTZ4Anj2E1/MH2Jw5j1WWmawstkf9O6eH8Z2joh78BWD6?=
 =?us-ascii?q?eZ9L9EkjF0olairQLRfOJynjESyfY17H4agucJuBcizymHA7ASG1VYMjLolxiS?=
 =?us-ascii?q?89++q6BXbn61cbeszEp+gcyhDLaarwFZWXb5eY0tETV+78phK1LMzGP86pv/d9?=
 =?us-ascii?q?bOd9ITuQaZkxPBj+hTNZIwmeAGhSthOWLho3Ilz/Q3ggBp3ZG/pIKHMXli/Lql?=
 =?us-ascii?q?Ah5EMT34f98T+jbojapEn8eZxYavHoh6GjUQXZvlVvaoEDMUtfT6OAeCCjw8qn?=
 =?us-ascii?q?GHGbXBGQ+T8ltpr3XKE5qzLXGYOGEZzcl+RBmaPEFQmxobXDI+np4kDAyqwNHh?=
 =?us-ascii?q?fVx95jAQ4F74txRNxvhpNxn5TmfQugOoZi0oR5iYKRpc9htC6FvNMcyC8uJzGD?=
 =?us-ascii?q?lV/p+7owyINGObfB5EDX0TVkyHGlDjPaSu5d/a/OiDHee+K/rOYbOTqe1RTfuI?=
 =?us-ascii?q?xJSv0pd48DaILMmAIn5iD/gj0EpZQX95A9jZmykISyEPlyPNaNObpA6h+iJtqM?=
 =?us-ascii?q?Cz6u/rWAXp5YuAELZSNdRv+xargaaMLeKQhSB5KSpG2ZMI33PH1L8f3FsKgSF0?=
 =?us-ascii?q?azatCagAtTLKTK/Imq9YER8bayBwNMtJ9a483RNNOcnUitzrzL54k+U1BkxBVV?=
 =?us-ascii?q?zgnMGpeMMLL3u8NFPBGEaEKrCGKSfXzMHwZKO2UadQg/lMtx2spTabFFfuMS6e?=
 =?us-ascii?q?lzbyTRCgL+FNgDufPBxfo4y9dhdtCW7+TNPpcBG7Mdl3jSEozr0wnH/FKWkcMT?=
 =?us-ascii?q?1keUNXsrKQ9T9Ygul4G2FZ8nplLOyElzyF4OXCNpkWseVkAiJvmuJe4XQ6zaZV?=
 =?us-ascii?q?7S5eSPx0nivSssBho1W8nuaTzTpnVQJEqixXi4KToUViJaLZ+4FAWHne+hIN6G?=
 =?us-ascii?q?SQCxISqNpkCt3goaZQytfUmaL3KTdC9c/U/MQGC8jVLsKHLGQuMR7zFDHICwsF?=
 =?us-ascii?q?SG3jCWaKrUtHkera0WaJtJ8ksZv90M4ETaVaTxoyDe8ADVp+H80qJ41+VTcp17?=
 =?us-ascii?q?WciZhMrS6uoR+USMhEs5TvUvOJHe6pODufy75eaE1Mief8LIIOJsj41lZkZ11S?=
 =?us-ascii?q?govHAQzTUMpLryknaRU79hZj6n97G0w83FitRhmw8n8SE/+y1ko3hQxkJ+g36S?=
 =?us-ascii?q?Xs4lE2IHLBpTcqkVl3ktLg12PCOAXtJbu9CNkFQxH/sFI8Z9amGws=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAADbT/xbh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgVWCFieDeYgYjAOBYC0Ugy6TeoFzLBMBiGMiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKS+CNiSCYwECAwECIARSBgkBAQoYAgIYDgICA0QQBgEMAQUCA?=
 =?us-ascii?q?QEBgxyCAgWmOnwzhUCEaIELin6BVz+BESeCa4gCglcCiH+GXZAmBwKCHASPCQY?=
 =?us-ascii?q?YkQiVAYR1gg1NI4M8gicXEo4KPzOBBQEBjDoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0APAADbT/xbh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgVW?=
 =?us-ascii?q?CFieDeYgYjAOBYC0Ugy6TeoFzLBMBiGMiNAkNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?S+CNiSCYwECAwECIARSBgkBAQoYAgIYDgICA0QQBgEMAQUCAQEBgxyCAgWmOnw?=
 =?us-ascii?q?zhUCEaIELin6BVz+BESeCa4gCglcCiH+GXZAmBwKCHASPCQYYkQiVAYR1gg1NI?=
 =?us-ascii?q?4M8gicXEo4KPzOBBQEBjDoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="53390622"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 11:57:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727020AbeK0Gws (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 01:52:48 -0500
Received: from smtp03.citrix.com ([162.221.156.55]:21573 "EHLO
        SMTP03.CITRIX.COM" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726294AbeK0Gws (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 01:52:48 -0500
X-IronPort-AV: E=Sophos;i="5.56,283,1539648000"; 
   d="scan'208";a="71525982"
Subject: Re: [Xen-devel] [PATCH v3] xen/balloon: Mark unallocated host memory
 as UNUSABLE
To: Boris Ostrovsky <boris.ostrovsky@oracle.com>,
        <xen-devel@lists.xen.org>, <linux-kernel@vger.kernel.org>
CC: <jgross@suse.com>, <helgaas@kernel.org>,
        <christian.koenig@amd.com>, <JBeulich@suse.com>
References: <1513778746-6155-1-git-send-email-boris.ostrovsky@oracle.com>
 <7c833e3a-4a0b-e80c-91e2-4348d6959651@citrix.com>
 <d42938a7-2081-65f4-a0d9-6fb7a8dd2fa0@oracle.com>
 <f955576f-532d-d4de-e7eb-718dae4b14c1@citrix.com>
 <3dd5153d-0f17-0e3b-7ebb-5579a7200765@oracle.com>
From: Igor Druzhinin <igor.druzhinin@citrix.com>
Message-ID: <a49d8dc8-ff2f-16d5-aa94-bfb153352d9a@citrix.com>
Date: Mon, 26 Nov 2018 19:57:22 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <3dd5153d-0f17-0e3b-7ebb-5579a7200765@oracle.com>
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 26/11/2018 19:42, Boris Ostrovsky wrote:
> On 11/26/18 12:10 PM, Igor Druzhinin wrote:
>> On 26/11/2018 16:25, Boris Ostrovsky wrote:
>>> On 11/25/18 8:00 PM, Igor Druzhinin wrote:
>>>> On 20/12/2017 14:05, Boris Ostrovsky wrote:
>>>>> Commit f5775e0b6116 ("x86/xen: discard RAM regions above the maximum
>>>>> reservation") left host memory not assigned to dom0 as available for
>>>>> memory hotplug.
>>>>>
>>>>> Unfortunately this also meant that those regions could be used by
>>>>> others. Specifically, commit fa564ad96366 ("x86/PCI: Enable a 64bit BAR
>>>>> on AMD Family 15h (Models 00-1f, 30-3f, 60-7f)") may try to map those
>>>>> addresses as MMIO.
>>>>>
>>>>> To prevent this mark unallocated host memory as E820_TYPE_UNUSABLE (thus
>>>>> effectively reverting f5775e0b6116) and keep track of that region as
>>>>> a hostmem resource that can be used for the hotplug.
>>>>>
>>>>> Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
>>>> This commit breaks Xen balloon memory hotplug for us in Dom0 with
>>>> "hoplug_unpopulated" set to 1. The issue is that the common kernel
>>>> memory onlining procedures require "System RAM" resource to be 1-st
>>>> level. That means by inserting it under "Unusable memory" as the commit
>>>> above does (intentionally or not) we make it 2-nd level and break memory
>>>> onlining.
>>> What do you mean by 1st and 2nd level?
>>>
>> I mean the level of a resource in IOMEM tree (the one that's printed
>> from /proc/iomem). 1-st level means its parent is root and so on.
> 
> Ah, OK. Doesn't
> additional_memory_resource()->insert_resource(iomem_resource) place the
> RAM at 1st level? And if not, can we make it so?
> 

That'd mean splitting "Unusable memory" resource. Since it's allocated
from bootmem it has proven to be quite difficult but there are seem to
be special functions available particularly for memory resource
management operations that I've not yet experimented with. So the answer
is probably - maybe yes but not straightforward.

>>
>>>> There are multiple ways to fix it depending on what was the intention of
>>>> original commit and what exactly it tried to workaround. It seems it
>>>> does several things at once:
>>>> 1) Marks non-Dom0 host memory "Unusable memory" in resource tree.
>>>> 2) Keeps track of all the areas safe for hotplug in Dom0
>>>> 3) Changes allocation algorithms itself in balloon driver to use those areas
>>> Pretty much. (3) is true in the sense that memory is first allocated
>>> from hostmem_resource (which is non-dom0 RAM).
>>>
>>>> Are all the things above necessary to cover the issue in fa564ad96366
>>>> ("x86/PCI: Enable a 64bit BAR on AMD Family 15h (Models 00-1f, 30-3f,
>>>> 60-7f)")?
>>> Not anymore, as far as that particular commit is concerned, but that's
>>> because of 03a551734 ("x86/PCI: Move and shrink AMD 64-bit window to
>>> avoid conflict") which was introduced after balloon patch. IIRC there
>>> were some issues with fa564ad96366 unrelated to balloon.
>>>
>> If it's not a problem anymore IIUC, can we revert the change as it still
>> breaks "hotplug_unpopulated=1" for the reasons I described above?
> 
> Since this seems to have broken existing feature this would be an
> option. But before going that route I'd like to see if we can fix the patch.
> 
> I have been unable to reproduce your problem. Can you describe what you did?
> 

It doesn't happen on all configurations as sometimes the memory is
successfully hotplugged to a hole depending on the size of Dom0 memory.
But we reproduced it quite reliably with small Dom0 sizes like 752MB.

XenServer is using this feature to hotplug additional memory for grant
table operations so we started a VM and observed a stable hang.

> 
>>
>>>> Can we remove "Unusable memory" resources as soon as we finished
>>>> booting? Is removing on-demand is preferable over "shoot them all" in
>>>> that case?
>>> The concern is that in principle nothing prevents someone else to do
>>> exact same thing fa564ad96366 did, which is grab something from right
>>> above end of RAM as the kernel sees it. And that can be done at any point.
>>>
>> Nothing prevents - true, but that's plainly wrong from OS point of view
>> to grab physical ranges for something without knowing what's actually
>> behind on that platform. 
> 
> I am not sure I agree that this is plainly wrong. If not for BIOS issues
> that 03a551734cf mentions I think what the original implementation of
> fa564ad963 did was perfectly reasonable. Which is why I would prefer to
> keep keep the hostmem resource *if possible*.
> 

Exactly, those *are* BIOS issues and are not supposed to be workarounded
by the OS. And as the next commit showed even the workaround didn't
quite helped with it.

I agree that having hotmem as a precaution is fine but only if there is
a non-cringy way to keep things working with it which I'm not sure does
exist.

Igor

> 
> -boris
> 
> 
>> I think we shouldn't consider this as a valid
>> thing to do and don't try to workaround initially incorrect code.
>>
>>> -boris
>>>
>>>> Does it even make sense to remove the 1-st level only restriction in
>>>> kernel/resource.c ?
>>>
>>>
> 
