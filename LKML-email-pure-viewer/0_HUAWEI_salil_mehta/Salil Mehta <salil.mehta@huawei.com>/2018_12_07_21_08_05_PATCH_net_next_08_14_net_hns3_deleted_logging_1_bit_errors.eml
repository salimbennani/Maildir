Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:53:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1BB325804F9;
	Fri,  7 Dec 2018 13:10:47 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 07 Dec 2018 13:10:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Al19pnhKbmXKrR/aqKNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvv8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIDeUBM+lXoJX8p1sVtRuzBxKhBP/zxjJSmnP7x7E23/gnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvoLqgSVeG1zK3VxjvEcfxW2Sv955LVeR0muvGDR7ZwccvVyUU1EgPKkFWQ?=
 =?us-ascii?q?qZD/MD6O1uQNrnKU7uR+WuKukWIotwZxoj22y8oql4LHhZoVx0ja+SllxIs5P8?=
 =?us-ascii?q?C0RUBlbdK+DZddtD2WO5F3T84gW21kpTo2xqcYtZKnYiQG0oorywDeZvCdc4WF?=
 =?us-ascii?q?7QrvWemRLDtimn5od7ayiwys/US91OHwTNS43VJXoidDj9LCrGoC1wbJ5ciCUv?=
 =?us-ascii?q?Z9/lmu2TKI1w3L9OFELl47lbDBJ54i3LEwjJwTvlrHHiPsn0X2lqCWel0l+uiu?=
 =?us-ascii?q?9evnfq3rqoGAO4JwkA3yL6ojltKlDeglMQUCQ3KX9OW+2bH7+E32WrRKjvk4kq?=
 =?us-ascii?q?nDt5DaINwWpqq4Aw9Tz4Yi5A+zDzS439QCm3kIMlZFdAuAj4nnPVHBPur4AOyh?=
 =?us-ascii?q?g1Sjjjhr3erKPr7/DZXXKHjMjrPhcax6605Gxwo/1cpf6I5MCrEdPPLzXVf8tN?=
 =?us-ascii?q?jZDh86LQO42enmCMhm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4ubk?=
 =?us-ascii?q?jWUlll8FYampwZwXZWi4Hvt8IkWZfWDjgtAbHWcKowoxVurqiFKZXD5XZnayWb?=
 =?us-ascii?q?885z4hBIKnC4fDWp6igLib0CinGZ1WY3hMCkqQHnfwa4WER/AMZTqQIs9mjDMI?=
 =?us-ascii?q?T7uhS4gn1RGosw/30L5nLuvS+i0FupPvztl15+vPlR4s8Tx4FdiS02aIT2tshG?=
 =?us-ascii?q?MHWyc23LxjoUx60lqMy7N4g/xfFdxQ/f9JSB01NZzHwux+CtDyXB/Bf9iTRFan?=
 =?us-ascii?q?RNWmHS8+TtYrz9ASZEZ9Hs2ojgrf0CqyH78Vi7uLCYQ38q3G2Xj9PcJ9y3fc26?=
 =?us-ascii?q?kngFkrWc9PNWyghq5i+AnfHY/Jk0OFl6m0caQQxjLC9GCGzWCWpkFXTBZwUbnZ?=
 =?us-ascii?q?XXAYfkbZsM725l3cQLO0CbQoKA1BydWcJatMbdHpiVZGRPLnONnFZ2KxmmGwBQ?=
 =?us-ascii?q?uHx7+WbYrqfXkd0zvZCEQejw8T+nOGPxAkBii9u2LeECBuFVX3bkzx6+Z+tm20?=
 =?us-ascii?q?QlU0zw6QaU1hzKS6+hgOiPyYSvMT2K8EuSg7pzV1Gla9w8zZC96aqwV9e6VcZM?=
 =?us-ascii?q?s34E1b2mLBqwx9IpugIrh+hl4fdgR3uF/u1xV3C4lajcgmtnQqzBB2KaKZ1lNB?=
 =?us-ascii?q?eCiV3ZTxOr3RN2nz8wqja6/Q2lHCztmW/r0D5+g/q1XmpAupDFYt821709lJ1H?=
 =?us-ascii?q?uR/o/FDA4MXpP+TEk29wJ2qKrHYiYg/YzU035sMa6qsjLZ39IpBe0lyguvfttF?=
 =?us-ascii?q?MaOEEhPyHNMeB8S0NOMqnF2pZAoePO9O7K40I9+md/ye1a+rIeZshi6pgX5G4Y?=
 =?us-ascii?q?B9yE2M8SV8R/XM35YExfGYwwSGWy39jFenrsD4h4REaSsOEWq4zCjuHJRRabFq?=
 =?us-ascii?q?fYYXFWeuJNW6xs9/h5HxQXFY7kOsB1Qc1M+vZxWSdV390RRM2ksNpXyohDW3zy?=
 =?us-ascii?q?ZzkzEvtaef2C3Ow+L/dBsIIGJLRW9ijUvyLoiwldwVQE+obw0xnhu/+Un637Rb?=
 =?us-ascii?q?pLh4L2TLQUZIfjL6LmF4Xqurq7qCZdVC6JcpsSVRTeS9bkqWSr/7oxsGzSzjG3?=
 =?us-ascii?q?FSyyw8dzGvop/5hQB1iHqBLHZvq3rUYcNwyg3F5NzfRv5R2SAKRDJihjnUBVi8?=
 =?us-ascii?q?Pt+p8suSl5rYtuC+VmShVoBccCXxzIOAsje76nNuARGlg/+zndjnGxAg0SDnz9?=
 =?us-ascii?q?lqSTnIrBHkb4jrzau6NvhrfktpBF/68Md6HoB+ko0thJAfw3Qah5OV/WYZnmf3?=
 =?us-ascii?q?K9lUxaX+bH8VTz4R39HV+BTl2FFkLn+RxIL2THSdztFhZ9mneGwW3C094ttOCK?=
 =?us-ascii?q?eV6rxEgCR0rkC5rQLXffhygDMdxeEy534dhuEDoBAtwTmFArAOAUlYOjThlxGJ?=
 =?us-ascii?q?79C9tqpbfmiufqar1Epig9+hFqqNrR9GWHb2YZoiGS5w7sNiMFPDynHz64fkeM?=
 =?us-ascii?q?XOYtIXrBGbjxDAj+1NIpIrivUKnTZnOX76vXA91+47ihlu0Yu7vYedLWVt4bm5?=
 =?us-ascii?q?AgVZNjDuY8MT+zftjbtRn8qM3oCvGIlhFSsPXJfyUf2oFzcSv+z9NwmSCD08tm?=
 =?us-ascii?q?ubGb3HEACE8khmqHbPE42xO3GTOXkU1tFiRBibJExCjwEYRjQ6npglFg+0wMzt?=
 =?us-ascii?q?alt25jcU5lTgsBtD1vpoNwXjUmfYvAqoaC07SJ2BIxpN9A1C+13ZMc+D7uJwAi?=
 =?us-ascii?q?FY+IeurBeWJ2yfZgRIC3wJW0OeC1DiOLmu+cfP8+yCCuWiKPvOZK2EqfZCWPeQ?=
 =?us-ascii?q?2ZKvzoxm8i6MN8WII3liFuA71VBFXXxjAMTZnDMPSyMMmiLJbs6bogq8+yJtos?=
 =?us-ascii?q?C+9vTrRBzg5Y+VB7RONtVv/gi8gb2fOO6ImCZ5NTFY24sMxXDWybgf310SiyB0?=
 =?us-ascii?q?ezmuC7QAsiHNQ7zKmq9KFB4WcCdzNMpO76Ih0QhBI8/bitXp1rFmiv45EUtKVV?=
 =?us-ascii?q?vkmsuxf8wFP3m9NE/bBEaMLLmJPyDLzNrtYayiSbxcluFUtxyrtDafEk/jOCmD?=
 =?us-ascii?q?ljbzWxCuN+FMkD+UPBhEtI6hdRZtDHDpTMj6ZR2jLN93kTo2zKUohnPLMG4QKy?=
 =?us-ascii?q?Rzf1lRob2Q8yxYhO5yG2hA7npjMOmFlDyV7+jeKpYKr/RrBj54mP5d4HQ/07FV?=
 =?us-ascii?q?9j1LRORpmCvOqd5ju1GnnfOJyjpiURpOrC5EhYOLvUp4P6XZ+YJNWXLF/BIL8G?=
 =?us-ascii?q?WRBA4Gp9pjCt3zpa9QzsLDm770KDdHoJro+p5IC8HKJcevPHM/PB/tHzDISg0I?=
 =?us-ascii?q?UWj4G3vYghlmmfWT8jWwo5gmo9C4g5MKS7sdUVE1CvoyCllsA9EDZpxwW2V3wv?=
 =?us-ascii?q?agkMcU6C/m/1HqT8JAs8WCD6rKDA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACW4Qpch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCowJjBGCDRSXO4FzLBMBh10iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?KCwkIKS+CNiQBgmIDAwECdgYJAQEfMQNUBg4FBYMcggIFpwKKLodzhC+BVz+Of?=
 =?us-ascii?q?wKJN4FwlUAHAoIhBI8bCxiROJphgg0zGiODPJBbPwEBMYEEAQEBDokwgR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAACW4Qpch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCowJjBGCDRSXO4FzLBMBh10iNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNiQBg?=
 =?us-ascii?q?mIDAwECdgYJAQEfMQNUBg4FBYMcggIFpwKKLodzhC+BVz+OfwKJN4FwlUAHAoI?=
 =?us-ascii?q?hBI8bCxiROJphgg0zGiODPJBbPwEBMYEEAQEBDokwgR8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="43215175"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 13:10:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726340AbeLGVJs (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 16:09:48 -0500
Received: from szxga05-in.huawei.com ([45.249.212.191]:15663 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726309AbeLGVJn (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 16:09:43 -0500
Received: from DGGEMS414-HUB.china.huawei.com (unknown [172.30.72.58])
        by Forcepoint Email with ESMTP id 1C562DA24A21F;
        Sat,  8 Dec 2018 05:09:40 +0800 (CST)
Received: from S00293818-DELL1.china.huawei.com (10.202.226.54) by
 DGGEMS414-HUB.china.huawei.com (10.3.19.214) with Microsoft SMTP Server id
 14.3.408.0; Sat, 8 Dec 2018 05:09:33 +0800
From: Salil Mehta <salil.mehta@huawei.com>
To: <davem@davemloft.net>
CC: <salil.mehta@huawei.com>, <yisen.zhuang@huawei.com>,
        <lipeng321@huawei.com>, <mehta.salil@opnsrc.net>,
        <netdev@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <linuxarm@huawei.com>, Shiju Jose <shiju.jose@huawei.com>
Subject: [PATCH net-next 08/14] net: hns3: deleted logging 1 bit errors
Date: Fri, 7 Dec 2018 21:08:05 +0000
Message-ID: <20181207210811.23844-9-salil.mehta@huawei.com>
X-Mailer: git-send-email 2.8.3
In-Reply-To: <20181207210811.23844-1-salil.mehta@huawei.com>
References: <20181207210811.23844-1-salil.mehta@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.202.226.54]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Shiju Jose <shiju.jose@huawei.com>

This patch deletes logging 1 bit errors for the following reasons.
1. AER does not notify 1 bit errors to the device drivers.
   However AER reports 1 bit errors to the userspace through the
   trace_aer_event for logging in the rasdaemon.
2. Firmware clears the status of 1 bit errors in the hw registers.

Signed-off-by: Shiju Jose <shiju.jose@huawei.com>
Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
---
 .../net/ethernet/hisilicon/hns3/hns3pf/hclge_err.c | 37 ----------------------
 1 file changed, 37 deletions(-)

diff --git a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_err.c b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_err.c
index 22e7c5b..7371ae4 100644
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_err.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_err.c
@@ -4,42 +4,26 @@
 #include "hclge_err.h"
 
 static const struct hclge_hw_error hclge_imp_tcm_ecc_int[] = {
-	{ .int_msk = BIT(0), .msg = "imp_itcm0_ecc_1bit_err" },
 	{ .int_msk = BIT(1), .msg = "imp_itcm0_ecc_mbit_err" },
-	{ .int_msk = BIT(2), .msg = "imp_itcm1_ecc_1bit_err" },
 	{ .int_msk = BIT(3), .msg = "imp_itcm1_ecc_mbit_err" },
-	{ .int_msk = BIT(4), .msg = "imp_itcm2_ecc_1bit_err" },
 	{ .int_msk = BIT(5), .msg = "imp_itcm2_ecc_mbit_err" },
-	{ .int_msk = BIT(6), .msg = "imp_itcm3_ecc_1bit_err" },
 	{ .int_msk = BIT(7), .msg = "imp_itcm3_ecc_mbit_err" },
-	{ .int_msk = BIT(8), .msg = "imp_dtcm0_mem0_ecc_1bit_err" },
 	{ .int_msk = BIT(9), .msg = "imp_dtcm0_mem0_ecc_mbit_err" },
-	{ .int_msk = BIT(10), .msg = "imp_dtcm0_mem1_ecc_1bit_err" },
 	{ .int_msk = BIT(11), .msg = "imp_dtcm0_mem1_ecc_mbit_err" },
-	{ .int_msk = BIT(12), .msg = "imp_dtcm1_mem0_ecc_1bit_err" },
 	{ .int_msk = BIT(13), .msg = "imp_dtcm1_mem0_ecc_mbit_err" },
-	{ .int_msk = BIT(14), .msg = "imp_dtcm1_mem1_ecc_1bit_err" },
 	{ .int_msk = BIT(15), .msg = "imp_dtcm1_mem1_ecc_mbit_err" },
 	{ .int_msk = BIT(17), .msg = "imp_itcm4_ecc_mbit_err" },
 	{ /* sentinel */ }
 };
 
 static const struct hclge_hw_error hclge_cmdq_nic_mem_ecc_int[] = {
-	{ .int_msk = BIT(0), .msg = "cmdq_nic_rx_depth_ecc_1bit_err" },
 	{ .int_msk = BIT(1), .msg = "cmdq_nic_rx_depth_ecc_mbit_err" },
-	{ .int_msk = BIT(2), .msg = "cmdq_nic_tx_depth_ecc_1bit_err" },
 	{ .int_msk = BIT(3), .msg = "cmdq_nic_tx_depth_ecc_mbit_err" },
-	{ .int_msk = BIT(4), .msg = "cmdq_nic_rx_tail_ecc_1bit_err" },
 	{ .int_msk = BIT(5), .msg = "cmdq_nic_rx_tail_ecc_mbit_err" },
-	{ .int_msk = BIT(6), .msg = "cmdq_nic_tx_tail_ecc_1bit_err" },
 	{ .int_msk = BIT(7), .msg = "cmdq_nic_tx_tail_ecc_mbit_err" },
-	{ .int_msk = BIT(8), .msg = "cmdq_nic_rx_head_ecc_1bit_err" },
 	{ .int_msk = BIT(9), .msg = "cmdq_nic_rx_head_ecc_mbit_err" },
-	{ .int_msk = BIT(10), .msg = "cmdq_nic_tx_head_ecc_1bit_err" },
 	{ .int_msk = BIT(11), .msg = "cmdq_nic_tx_head_ecc_mbit_err" },
-	{ .int_msk = BIT(12), .msg = "cmdq_nic_rx_addr_ecc_1bit_err" },
 	{ .int_msk = BIT(13), .msg = "cmdq_nic_rx_addr_ecc_mbit_err" },
-	{ .int_msk = BIT(14), .msg = "cmdq_nic_tx_addr_ecc_1bit_err" },
 	{ .int_msk = BIT(15), .msg = "cmdq_nic_tx_addr_ecc_mbit_err" },
 	{ .int_msk = BIT(17), .msg = "cmdq_rocee_rx_depth_ecc_mbit_err" },
 	{ .int_msk = BIT(19), .msg = "cmdq_rocee_tx_depth_ecc_mbit_err" },
@@ -53,12 +37,6 @@ static const struct hclge_hw_error hclge_cmdq_nic_mem_ecc_int[] = {
 };
 
 static const struct hclge_hw_error hclge_tqp_int_ecc_int[] = {
-	{ .int_msk = BIT(0), .msg = "tqp_int_cfg_even_ecc_1bit_err" },
-	{ .int_msk = BIT(1), .msg = "tqp_int_cfg_odd_ecc_1bit_err" },
-	{ .int_msk = BIT(2), .msg = "tqp_int_ctrl_even_ecc_1bit_err" },
-	{ .int_msk = BIT(3), .msg = "tqp_int_ctrl_odd_ecc_1bit_err" },
-	{ .int_msk = BIT(4), .msg = "tx_que_scan_int_ecc_1bit_err" },
-	{ .int_msk = BIT(5), .msg = "rx_que_scan_int_ecc_1bit_err" },
 	{ .int_msk = BIT(6), .msg = "tqp_int_cfg_even_ecc_mbit_err" },
 	{ .int_msk = BIT(7), .msg = "tqp_int_cfg_odd_ecc_mbit_err" },
 	{ .int_msk = BIT(8), .msg = "tqp_int_ctrl_even_ecc_mbit_err" },
@@ -76,9 +54,7 @@ static const struct hclge_hw_error hclge_msix_sram_ecc_int[] = {
 
 static const struct hclge_hw_error hclge_igu_int[] = {
 	{ .int_msk = BIT(0), .msg = "igu_rx_buf0_ecc_mbit_err" },
-	{ .int_msk = BIT(1), .msg = "igu_rx_buf0_ecc_1bit_err" },
 	{ .int_msk = BIT(2), .msg = "igu_rx_buf1_ecc_mbit_err" },
-	{ .int_msk = BIT(3), .msg = "igu_rx_buf1_ecc_1bit_err" },
 	{ /* sentinel */ }
 };
 
@@ -93,7 +69,6 @@ static const struct hclge_hw_error hclge_igu_egu_tnl_int[] = {
 };
 
 static const struct hclge_hw_error hclge_ncsi_err_int[] = {
-	{ .int_msk = BIT(0), .msg = "ncsi_tx_ecc_1bit_err" },
 	{ .int_msk = BIT(1), .msg = "ncsi_tx_ecc_mbit_err" },
 	{ /* sentinel */ }
 };
@@ -154,7 +129,6 @@ static const struct hclge_hw_error hclge_ppp_mpf_abnormal_int_st3[] = {
 };
 
 static const struct hclge_hw_error hclge_tm_sch_rint[] = {
-	{ .int_msk = BIT(0), .msg = "tm_sch_ecc_1bit_err" },
 	{ .int_msk = BIT(1), .msg = "tm_sch_ecc_mbit_err" },
 	{ .int_msk = BIT(2), .msg = "tm_sch_port_shap_sub_fifo_wr_err" },
 	{ .int_msk = BIT(3), .msg = "tm_sch_port_shap_sub_fifo_rd_err" },
@@ -222,27 +196,16 @@ static const struct hclge_hw_error hclge_qcn_fifo_rint[] = {
 };
 
 static const struct hclge_hw_error hclge_qcn_ecc_rint[] = {
-	{ .int_msk = BIT(0), .msg = "qcn_byte_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(1), .msg = "qcn_byte_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(2), .msg = "qcn_time_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(3), .msg = "qcn_time_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(4), .msg = "qcn_fb_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(5), .msg = "qcn_fb_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(6), .msg = "qcn_link_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(7), .msg = "qcn_link_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(8), .msg = "qcn_rate_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(9), .msg = "qcn_rate_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(10), .msg = "qcn_tmplt_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(11), .msg = "qcn_tmplt_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(12), .msg = "qcn_shap_cfg_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(13), .msg = "qcn_shap_cfg_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(14), .msg = "qcn_gp0_barrel_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(15), .msg = "qcn_gp0_barrel_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(16), .msg = "qcn_gp1_barrel_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(17), .msg = "qcn_gp1_barrel_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(18), .msg = "qcn_gp2_barrel_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(19), .msg = "qcn_gp2_barrel_mem_ecc_mbit_err" },
-	{ .int_msk = BIT(20), .msg = "qcn_gp3_barral_mem_ecc_1bit_err" },
 	{ .int_msk = BIT(21), .msg = "qcn_gp3_barral_mem_ecc_mbit_err" },
 	{ /* sentinel */ }
 };
-- 
2.7.4


