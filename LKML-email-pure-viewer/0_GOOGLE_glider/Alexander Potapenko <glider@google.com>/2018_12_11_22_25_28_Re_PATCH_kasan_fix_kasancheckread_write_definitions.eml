Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:57:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DFC50580380;
	Tue, 11 Dec 2018 14:32:13 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 11 Dec 2018 14:32:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJAh3kRX5VTDS99LPmHuQ7oKqMIDV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGHu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUSohWxHgmsHOHixyRUhn/vx6A2z/gtHR3E0QEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKTe21yLfHzDrZYPNQxDjy9pLIeQ07r/GLQbJ/a9LRxlcpFwPGiVWb?=
 =?us-ascii?q?tIvoPzyR1uQMrmeU8fBgWPmgi24grAFxrTyvydk2hobVgYIVz0nJ+CNky4g7It?=
 =?us-ascii?q?24TVR0Yd+iEJZIuCGaNpd2QsM/Q25zoio11roGuZu9cSMXy5on3wbSZ+Kbf4WM?=
 =?us-ascii?q?+B7vSeicLSliiH54e7+zmwy+/Emix+HkSMW4zFJHojBGn9TMrHwByQHf58qdRv?=
 =?us-ascii?q?Z8/0qs3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqVrDHiDol0XslqOWdVsr+vKu?=
 =?us-ascii?q?6+v5ZrXqvJicN5V7ig3mM6QunNKwAfggPwQQQ2SW/f6w2KDt8EHnWrlGk/47nr?=
 =?us-ascii?q?XDvJ3bJ8kXvqu5DBVU0oYn5Ra/FTCm0NEAkHkDLVJFfg+HjofwN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtywPDHMLvhDYvXLnXYjrfhcqhy61RGxAow099f/ZRUBa8FIP7pXU/xrt?=
 =?us-ascii?q?PYAgcjMwOo2+bnFMl91oQGVGKLA6+ZM73dvUWH5+IyOOSMYI4VuDDgK/kq/fLu?=
 =?us-ascii?q?jHk5mUMDcqmtx5cYdHe4HvF+KUWDfXXsmssBEXsNvgcmTOzlklyCUSJJaHa1Ra?=
 =?us-ascii?q?485iw7B5igDYfMXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsp5mDwe?=
 =?us-ascii?q?SbehU5Mh1Q2ptALiybpnKfTb9jcbtZLk0th14erTmAo29Tx1CcSdzm6MQ3t1nm?=
 =?us-ascii?q?MOWz85wqR/rVZhxVeE1Khym+ZYGsBL5/NVTgc6MobRwPZhC9DyXQLBfc2FSEy8?=
 =?us-ascii?q?TdWkGjwxStMxw9kTY0dyAdmijxbD3za0DL8RjbCEGJs08qfE1XjrO8l902rG1L?=
 =?us-ascii?q?Umj1Q+QctAL2umirR79wjSHYHJlUqZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAx?=
 =?us-ascii?q?GExrePbIrvf2UQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e65wQaheKCRP8J3rILoiEhqy5qE1a7xN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUysHMqzQ9yKaWE0FNB?=
 =?us-ascii?q?dzKUx4zwNqfQKmno+BCvaqjW2l7F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzEn6IPQy3JtPre7sz/Y190yGesq1wyvf9Fc?=
 =?us-ascii?q?MKODCg//CMkaB8moKOw3lFmldBMEPOZO9KEqO8OqbeeJ2KmuPOx4hjKpkXxH4J?=
 =?us-ascii?q?xh0kKL7yd9SvPI04wZzP2C3wqHVy3zjFGuss3snYBEZDcSHnewyCT+BY5RYLFy?=
 =?us-ascii?q?cpgPCWu0P8K3wdB+jYb3W3FE7F6jG08G2MixdBqIblzywRdf1V4Krnyggye4yS?=
 =?us-ascii?q?J7kysorqaGwCPB2eDiewcZNW5RQ2lii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JMpsSRNXOW8e1yaUaP9ox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHVBlem?=
 =?us-ascii?q?Jdmp/taUl5DZvuClTW2hVZ5TcSjtzYyesiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox/kpE/hJYK1XgYh5WV+2EKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98NKB7?=
 =?us-ascii?q?2V7LBenSt1v0C3rQTeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNCkDbGCoRtTVGz3e5g8Bi9w8ttwMEjX33Lt8IHkd8?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GgJYNjrwZ88J+zDil6BentuN34C0H5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhtXwOSJEtbgAAJRjk6moM5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7uBpEC?=
 =?us-ascii?q?Fd4JKhtxaBKnCBawRLEGEJWVGEB1b5Mbm1/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBmzQPTDEXlzvQb8GBohew4DZ3rs?=
 =?us-ascii?q?e58PTkQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYtS7CUqPQmqxUDx4acS9zN9FI76Uz3gZTI87bl8j126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9tiyGE0D4JDSM?=
 =?us-ascii?q?iTnoWwqrMeFNlyybOB1euIegchdiE2TjTdTmagGlP99zlzE53bo0hnbSP24GLT?=
 =?us-ascii?q?d8a19NrqGX7S5AnvV/GmlB4mB5IuWehymZ7/fXKpANvPtvAyR0kf9a4Xsgx7tU?=
 =?us-ascii?q?6iFEWOJ6mC/IotFypFGml/GFyiB7XxpWtjZLmIWLsF1iOKrD8JlAXHfE/BQV4m?=
 =?us-ascii?q?SRCxQFvd1lCtL0tqBUy9jPkr/zKThY/9LV+8scG9bbKMadPHU9NhrpHW2cMAxQ?=
 =?us-ascii?q?YTuqKXvelgRjgeyR8WPd+pQku4Xvn4QmRbhcW1g4UPgdDxI2MsYFJcJeWj40mL?=
 =?us-ascii?q?iXgdRA3X2ipQHcQsZd9sTIUvOeDO/HJzGegr1JIRAPxOWrfswoKoTn1hk6ORFB?=
 =?us-ascii?q?l4PQFh+VBIgVrw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BPAAC0ORBch0O0hNFlHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpgQIUE4N7lCuCDRSJDYk1hHyBJANMLA0GAYFLgnWCbiI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsDCgICJgICA?=
 =?us-ascii?q?x8SAQUBHAYTBYMcAYF0BQgFCpooPIodcIEvgnYBAQWBMAGFeQMFEnmLMBeBf4Q?=
 =?us-ascii?q?jgx4CgSo3gwSCV4stlVAJhTuBTopIGJFALI1qiw4wgSVtgSFNIxVsBoI1ghsMF?=
 =?us-ascii?q?4NKilQ+Mwp7AQGIF4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0BPAAC0ORBch0O0hNFlHgEGBwaBUQkLAYJpgQIUE4N7lCu?=
 =?us-ascii?q?CDRSJDYk1hHyBJANMLA0GAYFLgnWCbiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpI?=
 =?us-ascii?q?wyCNiQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsDCgICJgICAx8SAQUBHAYTBYM?=
 =?us-ascii?q?cAYF0BQgFCpooPIodcIEvgnYBAQWBMAGFeQMFEnmLMBeBf4Qjgx4CgSo3gwSCV?=
 =?us-ascii?q?4stlVAJhTuBTopIGJFALI1qiw4wgSVtgSFNIxVsBoI1ghsMF4NKilQ+Mwp7AQG?=
 =?us-ascii?q?IF4JNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="57073408"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 14:31:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726377AbeLKWZn (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 17:25:43 -0500
Received: from mail-vs1-f66.google.com ([209.85.217.66]:44022 "EHLO
        mail-vs1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726158AbeLKWZm (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 17:25:42 -0500
Received: by mail-vs1-f66.google.com with SMTP id x1so9864547vsc.10
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 14:25:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=qsq9eRINQk74oPk5zkoV/bpLO783jMuG/Fg5ykE4qJM=;
        b=rdRn2WMyuN5KUWSZQd3M9bw3Ev3OMLsSZzRzVNeyPdCJcDax7ZxgnHiEmeEWCpSyOq
         31FvCiEPWLBEDRNP9qUOp2DHUrBdGIu8KvMZfnlcyFZ6SmiPfFsAmoJq2Uz5u8eCClsk
         pa+6YNr3vm86fQ/8cm65vVp/oG4ZQMXH4dXgx0IxSMBjhqMdkHzbmaWwxR/GfKFlGqrl
         7VUczlrYkW4L6hQ/I3HgyfKntNJhDglN5foFnZvIO/nnD1D0tMpkzu0mPVcf6ZFXidrQ
         J/Qx3JPbGh6YbMlDwYS0nGMQFCkLaycvs2Vfxq78fHgfRDHDpwvR8FMMnAeInyGR4BqI
         7r8A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=qsq9eRINQk74oPk5zkoV/bpLO783jMuG/Fg5ykE4qJM=;
        b=tXTyuffj8InfKkf/eOMsYL1khOwMRnY15M54rRkN5mXl9XydovlvXwPkbqPh6nJH67
         OeRMiz/jnquHVo98E7+kd7MBa/1/M0Skf98W6QRPQyVCVdUYv2aAvBG7VvI+XA5PVgtS
         2hfx1wUpv7kKQZdjl9/KgKnOCNZqXyNoYocmYbv9eALrfQTw1pUN9MfxlFRDT7t2Pm67
         hRxfAzDow4O6EHAHvT+NaLCKsIopuq3zDRQQgV+PVnuRr5y5hjhWwV6uIG1F2LRekKrd
         IUbO7EofezANovn7CZ2vwJGGF9LZMKbWyKi1AlOVwUzq9lZOFkUhmeXUsLuWR4hpCpHn
         G3fw==
X-Gm-Message-State: AA+aEWYrN7128CUbw/E7avBlSJFG7yABXd9CEZiZY23Y3Qv4CJ7F8VVD
        Fuakw3SmvSmx04c7R5svW0G5FtkH2In7XAIrqoQ3bQ==
X-Google-Smtp-Source: AFSGD/Wlo94daBAchMU6xPBE5+ZhwvY7zQyAKGJw7Fr+ZXGuP8CQH0k1V9l0FwvgAOil4lnMz92YpQsgZdbpR031MS0=
X-Received: by 2002:a67:88c9:: with SMTP id k192mr8119744vsd.103.1544567141144;
 Tue, 11 Dec 2018 14:25:41 -0800 (PST)
MIME-Version: 1.0
References: <20181211133453.2835077-1-arnd@arndb.de> <CACT4Y+bRzY9hO5b=TjHeXTsVVO1z3eBOHz6oLgBhVR4OSm1d1w@mail.gmail.com>
In-Reply-To: <CACT4Y+bRzY9hO5b=TjHeXTsVVO1z3eBOHz6oLgBhVR4OSm1d1w@mail.gmail.com>
From: Alexander Potapenko <glider@google.com>
Date: Tue, 11 Dec 2018 23:25:28 +0100
Message-ID: <CAG_fn=U2d799W6GiujK4pedkLZr=LJrFrZhfCQ=Kin35quA76g@mail.gmail.com>
Subject: Re: [PATCH] kasan: fix kasan_check_read/write definitions
To: Dmitriy Vyukov <dvyukov@google.com>
Cc: Arnd Bergmann <arnd@arndb.de>,
        Andrew Morton <akpm@linux-foundation.org>,
        Andrey Ryabinin <aryabinin@virtuozzo.com>,
        anders.roxell@linaro.org,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Andrey Konovalov <andreyknvl@google.com>,
        Stephen Rothwell <sfr@canb.auug.org.au>,
        kasan-dev <kasan-dev@googlegroups.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Linux Memory Management List <linux-mm@kvack.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 11, 2018 at 2:45 PM Dmitry Vyukov <dvyukov@google.com> wrote:
>
> On Tue, Dec 11, 2018 at 2:35 PM Arnd Bergmann <arnd@arndb.de> wrote:
> >
> > Building little-endian allmodconfig kernels on arm64 started failing
> > with the generated atomic.h implementation, since we now try to call
> > kasan helpers from the EFI stub:
> >
> > aarch64-linux-gnu-ld: drivers/firmware/efi/libstub/arm-stub.stub.o: in =
function `atomic_set':
> > include/generated/atomic-instrumented.h:44: undefined reference to `__e=
fistub_kasan_check_write'
> >
> > I suspect that we get similar problems in other files that explicitly
> > disable KASAN for some reason but call atomic_t based helper functions.
> >
> > We can fix this by checking the predefined __SANITIZE_ADDRESS__ macro
> > that the compiler sets instead of checking CONFIG_KASAN, but this in tu=
rn
> > requires a small hack in mm/kasan/common.c so we do see the extern
> > declaration there instead of the inline function.
>
>
> Alexander, I think you are doing a similar thing for similar reasons
> in KMSAN patch (see KMSAN_CHECK_ATOMIC_PARAMS):
> https://github.com/google/kmsan/commit/17ebbfe19624c84adf79b0e5a74fd258c4=
9ff12b
> Namely, non-KMSAN-instrumented files must not get KMSAN callbacks from
> atomics too.
I'll need to double-check, but it occurs to me that we won't need
additional hooks for atomics in KMSAN - the compiler instrumentation
should suffice.

> Arnd patch does it the other way around: non-instrumented files need
> to opt-in instead of opt-out.
Shouldn't we put __SANITIZE_ADDRESS__ somewhere into mm/kasan/kasan.h then?
> Let's settle on a common way to do this, so that we can use it
> consistently across all tools.
>
>
>
> > Fixes: b1864b828644 ("locking/atomics: build atomic headers as required=
")
> > Reported-by: Anders Roxell <anders.roxell@linaro.org>
> > Signed-off-by: Arnd Bergmann <arnd@arndb.de>
> > ---
> >  include/linux/kasan-checks.h | 2 +-
> >  mm/kasan/common.c            | 2 ++
> >  2 files changed, 3 insertions(+), 1 deletion(-)
> >
> > diff --git a/include/linux/kasan-checks.h b/include/linux/kasan-checks.=
h
> > index d314150658a4..a61dc075e2ce 100644
> > --- a/include/linux/kasan-checks.h
> > +++ b/include/linux/kasan-checks.h
> > @@ -2,7 +2,7 @@
> >  #ifndef _LINUX_KASAN_CHECKS_H
> >  #define _LINUX_KASAN_CHECKS_H
> >
> > -#ifdef CONFIG_KASAN
> > +#if defined(__SANITIZE_ADDRESS__) || defined(__KASAN_INTERNAL)
> >  void kasan_check_read(const volatile void *p, unsigned int size);
> >  void kasan_check_write(const volatile void *p, unsigned int size);
> >  #else
> > diff --git a/mm/kasan/common.c b/mm/kasan/common.c
> > index 03d5d1374ca7..51a7932c33a3 100644
> > --- a/mm/kasan/common.c
> > +++ b/mm/kasan/common.c
> > @@ -14,6 +14,8 @@
> >   *
> >   */
> >
> > +#define __KASAN_INTERNAL
> > +
> >  #include <linux/export.h>
> >  #include <linux/interrupt.h>
> >  #include <linux/init.h>
> > --
> > 2.20.0
> >



--=20
Alexander Potapenko
Software Engineer

Google Germany GmbH
Erika-Mann-Stra=C3=9Fe, 33
80636 M=C3=BCnchen

Gesch=C3=A4ftsf=C3=BChrer: Paul Manicle, Halimah DeLaine Prado
Registergericht und -nummer: Hamburg, HRB 86891
Sitz der Gesellschaft: Hamburg
