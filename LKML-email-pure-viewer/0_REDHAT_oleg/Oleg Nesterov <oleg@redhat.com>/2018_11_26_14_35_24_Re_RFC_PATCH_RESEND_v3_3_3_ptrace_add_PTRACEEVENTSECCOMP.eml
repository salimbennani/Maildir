Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 22:39:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EA42C5803C2;
	Mon, 26 Nov 2018 06:35:58 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 06:35:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AqzCeax0B8UHoEcHjsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSK/nxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?kHOTAn7W/ZicJwg61Hrx28pRNwzZXUYJmXOfdlYqPRYckXSXZdUstLSSBMBJ63?=
 =?us-ascii?q?YYsVD+oGOOZVt5Dzp18QohuxGAKiHP3gyiRUhnDox6061PohGhzB0QwnG9IBrn?=
 =?us-ascii?q?vUoc7vNKgMTO+1zLPHzSnZY/xK3jf97ZHFfxY8qv+PRbJ9adTdxVUrGg/fk1md?=
 =?us-ascii?q?p5LpMymI2ukOr2SX9ettWOC3h2I5tw18piKjytoih4XXnI4Z11PJ+CtjzIorJt?=
 =?us-ascii?q?C1TlNwb8S+H5tKrS6aMpN7QsM8TGFsvyY30qMGuZGlcygQ0pgnxADQa+aBc4eW?=
 =?us-ascii?q?5hLvTuGRIS13hH59ebK/gQi98VS4x+HiSsW51ExGojdLn9XSrHwByh/e5tSdRv?=
 =?us-ascii?q?Z8/EqtwTOP2BrS6uFAL0A0j63bK5s5z740l5oTt1nDHyDvlEX1kqCWbEMk9fas?=
 =?us-ascii?q?6+j+ZbXnqJmcOJFuigzlLKQuldKwAf4iPggNQWeb4+K826Pn/UHjR7VKlPI2nr?=
 =?us-ascii?q?HDsJ/GPcQburK5AwhN34Yn6ha/DCmp3M4XnHkaN19FfBOHj470O1DBOvz4DPG/?=
 =?us-ascii?q?g0iynzdv3fzJIrrhApDVJHjZjLjhZap961JbyAcrzdBQ/ZNUCq0bL/L0QEPxtM?=
 =?us-ascii?q?HYAQU/Mwy72OvnDNR91oUDWWOAGKOZMaXSsUOW6eIrOeWDeIgVuDPlIfg/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx35sXb263Eu5lI0WeZ3rshNABHHwOvgo/SuzqlVKDXSRSZ3a0Q6?=
 =?us-ascii?q?Iz+DU7BJi6AofEQ4CnmKaB0zujHp1KemBGDUiBHm3zd4WEXPcMazieItV7nTwG?=
 =?us-ascii?q?TrWhT44h1ReztA710bZnL+zU+jEGupLnztR6++rTlRQq/zxuE8udy32NT31znm?=
 =?us-ascii?q?4QRD85xqZ/rVZ5yleCy6d4hfNYGMdX5/NIVAc6KJHdw/Z7C9D0RgLOYNOJREy6?=
 =?us-ascii?q?TdWhBDE7VsgxzMMWY0ZhB9WiiQjO0DewDL8LibOHHpw0/bja33jqOcl9zXHK1K?=
 =?us-ascii?q?0ij1kjRstCLmmmhq959wjOCI/FiUSZl6C2dasC2C7B7nuMzW2LvEtASg5/Tb3F?=
 =?us-ascii?q?XWwDZkvRtdn2+1nNT6GwBrg9MgtO08iCKrBUZd3vllhGQPbjONLDY2O+gWuwBB?=
 =?us-ascii?q?CIxq+SY4ruYWkSwCLdCE0cmQAJ4XmGLRQ+Bjumo2/GEDxuFFfvY0Tw8el+qHK3?=
 =?us-ascii?q?VFM0wxuNb01707q1+xgVhfOHRvMX37IEvjohqjpuEFa82dLWF8SPpw57cKpAZt?=
 =?us-ascii?q?M95U9N1XjFuAxlIpygM6dii0YEfARzoUzv2At4C4VanccxsXMl0RB9KaSb0FNG?=
 =?us-ascii?q?aTOVxpTwOrzRKmnv8xGjca/W2lfC0NmI/qcD8ug3q1LmvAuxDEot721n08VJ03?=
 =?us-ascii?q?ub/pjLDBcSXYjtXUot9hl6p6vVYi8y547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a4uPsOpa+GJ2LS2M+Znhj6mi3pI4J?=
 =?us-ascii?q?p80k6V6yVzUOrI0IsbzPGC2QuHUSzxjFOgssDxhIBFaiseHmu5ySj4GoFRYrd+?=
 =?us-ascii?q?cpoMCWerO8e33Mlxh4bxW35E816uH1MH2M6zdRuSdVD9xhBQ1UIMrHyjmCu4yS?=
 =?us-ascii?q?F0kj4zoqqe2izO3/rtdB4dNmFXQ2liiE/mIZKogNACQEiocw8pmQOn5Ung3ahb?=
 =?us-ascii?q?p6d/L27JTUdTZSf2LGJiUqq2trWcZc5C85cosSRRUOShblGWUL/9ox0G0yz9G2?=
 =?us-ascii?q?tS3iw0dzavup/hhRx1lHqdLGpvrHreYcxxxQ3Q5NvGSf5T3zoGQjJ1iT3WBli6?=
 =?us-ascii?q?Itmo8s+Yl5bFsuCiSW2hUodffjXszYOFrCG7/3FlAQWjn/Cvnd3qCQs63jX619?=
 =?us-ascii?q?VwVSXIsQzzYo/k16mhNeJnf09oBELz6sZgG4F+lJcwi48U2XQAmpqV+n8Hm3/p?=
 =?us-ascii?q?MdpHwaL+cGYNRTkTzt7Q4Qjl21dsImiHxo3nTXWd3tVuZ8OhbWwIwCI94NtHCK?=
 =?us-ascii?q?OV7LxCgCt0rUC0rQPXYfhhgDgdzeEi52Idg+EMoAAt1DmSAqgOHUlEOizhjwiI?=
 =?us-ascii?q?79e7rKlNZWega76w1FdlndC6DbGPuQVcWHf/epc/Ei589MR/MFTQ0HLt7oHoYs?=
 =?us-ascii?q?XfbdUWtheMiRfPk/BVKI4tlvoNnSdoInjyvXohy+4mlxBu2Yy6sZODK2Vs+qK5?=
 =?us-ascii?q?HxFZOif0Z8MV5jHik6JektyK0ICoG5VrAi8LU4fwTfK0DDISsuzqNwSUHz05tH?=
 =?us-ascii?q?ibAqDTHROF5EdlsnLPEI2rN3eNK3kC1thiQBidJEpCgAEbRjk6n5g5Fhy0y8zl?=
 =?us-ascii?q?akt2+jcR5lvgoBtW1u1oLwX/UnvYpAqwajY0T4WfLANL7g5Y4UfZK9ee7uV1Hy?=
 =?us-ascii?q?FX5ZChqA2NKmqGZwVHF20JW0qEB0z9Mbmq/9XP7++YBu+mJfvUfbqOsfBeV+uP?=
 =?us-ascii?q?xZ+30otp4TeMNsaMPnljFfE72VBDXXd2G8vHgTUPVjcXmjnJb86aohe85yJ2ot?=
 =?us-ascii?q?q+8PTtRALg+4+PB6FOPtVo/hC8mb2DOPKIhCZlNTZY0YsBymXVyLcExl4dlSFv?=
 =?us-ascii?q?eyOpEbQBriPNSKPQmqlKDx8UcS9zNc1I774i0QlJI8LUltT11rtghP4vF1hFTU?=
 =?us-ascii?q?Dhmt2uZcESP2G9NVbHCFyXO7icOTLLw9/4YaWnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwW7MdBtiz02xLw0hnXSOm8dMT?=
 =?us-ascii?q?hzaUVNrrKL4CNcg/V/HXFB73V/IemFnSaZ8/fXKpIMvfR3BSR0krES3HNv5r9L?=
 =?us-ascii?q?7TtNDN91kSHTtNlwqhnyluiJxyJ9URxSpyxjjYaXuURkJLWf8YNPDyXq5hUIuE?=
 =?us-ascii?q?KUBhtCgdZ+FtD1vL4Ynt/Lma3bMjpO89vIu8AbAp6He4q8LHM9PE+xS3bvBwwf?=
 =?us-ascii?q?QGvzOA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAABBBPxbh0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVqCESeMEV+LIoINFJIxhHeBcxQYEwGIYyI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJkAQEBAQIBAQIkEz8FAQkBAQoOC?=
 =?us-ascii?q?gklAwwFSRMFglFLgXoIBaY6M4oZjAkXgX+EI4gzgiYClTaKTAmCII8ECxhfiHK?=
 =?us-ascii?q?HNyyYBIFGgg1NIxWDJ4InFxKOCz4BATGBBQEBHItfAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAABBBPxbh0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVqCESeMEV+LIoINFJIxhHeBcxQYEwGIYyI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpL4I2IoJkAQEBAQIBAQIkEz8FAQkBAQoOCgklAwwFSRMFglF?=
 =?us-ascii?q?LgXoIBaY6M4oZjAkXgX+EI4gzgiYClTaKTAmCII8ECxhfiHKHNyyYBIFGgg1NI?=
 =?us-ascii?q?xWDJ4InFxKOCz4BATGBBQEBHItfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,282,1539673200"; 
   d="scan'208";a="63967069"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 26 Nov 2018 06:35:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726889AbeK0BaH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 26 Nov 2018 20:30:07 -0500
Received: from mx1.redhat.com ([209.132.183.28]:47951 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726279AbeK0BaH (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Nov 2018 20:30:07 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 7FBA2155AC;
        Mon, 26 Nov 2018 14:35:48 +0000 (UTC)
Received: from dhcp-27-174.brq.redhat.com (unknown [10.43.17.12])
        by smtp.corp.redhat.com (Postfix) with SMTP id 488A383EB8;
        Mon, 26 Nov 2018 14:35:25 +0000 (UTC)
Received: by dhcp-27-174.brq.redhat.com (nbSMTP-1.00) for uid 1000
        oleg@redhat.com; Mon, 26 Nov 2018 15:35:48 +0100 (CET)
Date: Mon, 26 Nov 2018 15:35:24 +0100
From: Oleg Nesterov <oleg@redhat.com>
To: Elvira Khabirova <lineprinter@altlinux.org>
Cc: rostedt@goodmis.org, mingo@redhat.com,
        linux-kernel@vger.kernel.org, ldv@altlinux.org, esyr@redhat.com,
        luto@kernel.org, strace-devel@lists.strace.io,
        linux-api@vger.kernel.org
Subject: Re: [RFC PATCH RESEND v3 3/3] ptrace: add PTRACE_EVENT_SECCOMP
 support to PTRACE_GET_SYSCALL_INFO
Message-ID: <20181126143524.GB1660@redhat.com>
References: <20181125022150.46258a20@akathisia>
 <20181125022340.5703400f@akathisia>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181125022340.5703400f@akathisia>
User-Agent: Mutt/1.5.24 (2015-08-30)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.29]); Mon, 26 Nov 2018 14:35:48 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/25, Elvira Khabirova wrote:
>
> Extend PTRACE_GET_SYSCALL_INFO to support PTRACE_EVENT_SECCOMP stops.
> The information returned is the same as for syscall-enter-stops.

Oh, this is not nice ;) there must be a better option, I hope... Plus


Can't ptrace_get_syscall() check

	child->exit_code == (PTRACE_EVENT_SECCOMP << 8) | SIGTRAP;

to detect the PTRACE_EVENT_SECCOMP case?

Oleg.

> Signed-off-by: Elvira Khabirova <lineprinter@altlinux.org>
> Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
> ---
>  include/linux/ptrace.h    | 1 +
>  include/linux/sched.h     | 1 +
>  include/linux/tracehook.h | 1 +
>  kernel/ptrace.c           | 7 +++++--
>  4 files changed, 8 insertions(+), 2 deletions(-)
> 
> diff --git a/include/linux/ptrace.h b/include/linux/ptrace.h
> index 6c2ffed907f5..a993d0fde865 100644
> --- a/include/linux/ptrace.h
> +++ b/include/linux/ptrace.h
> @@ -166,6 +166,7 @@ static inline void ptrace_event(int event, unsigned long message)
>  {
>  	if (unlikely(ptrace_event_enabled(current, event))) {
>  		current->ptrace_message = message;
> +		current->ptrace_event = event;
>  		ptrace_notify((event << 8) | SIGTRAP);
>  	} else if (event == PTRACE_EVENT_EXEC) {
>  		/* legacy EXEC report via SIGTRAP */
> diff --git a/include/linux/sched.h b/include/linux/sched.h
> index a51c13c2b1a0..86215fb654d6 100644
> --- a/include/linux/sched.h
> +++ b/include/linux/sched.h
> @@ -964,6 +964,7 @@ struct task_struct {
>  
>  	/* Ptrace state: */
>  	unsigned long			ptrace_message;
> +	int				ptrace_event;
>  	kernel_siginfo_t		*last_siginfo;
>  
>  	struct task_io_accounting	ioac;
> diff --git a/include/linux/tracehook.h b/include/linux/tracehook.h
> index 633a83fe7051..5d2e5aa07a5c 100644
> --- a/include/linux/tracehook.h
> +++ b/include/linux/tracehook.h
> @@ -66,6 +66,7 @@ static inline int ptrace_report_syscall(struct pt_regs *regs,
>  		return 0;
>  
>  	current->ptrace_message = message;
> +	current->ptrace_event = 0;
>  	ptrace_notify(SIGTRAP | ((ptrace & PT_TRACESYSGOOD) ? 0x80 : 0));
>  
>  	/*
> diff --git a/kernel/ptrace.c b/kernel/ptrace.c
> index 92c47cd5ad84..74a37e74c7f1 100644
> --- a/kernel/ptrace.c
> +++ b/kernel/ptrace.c
> @@ -904,7 +904,9 @@ static int ptrace_get_syscall(struct task_struct *child,
>  	unsigned long actual_size;
>  	unsigned long write_size;
>  
> -	if (child->ptrace_message == PTRACE_EVENTMSG_SYSCALL_ENTRY) {
> +	if ((child->ptrace_event == 0 &&
> +	     child->ptrace_message == PTRACE_EVENTMSG_SYSCALL_ENTRY) ||
> +	    child->ptrace_event == PTRACE_EVENT_SECCOMP) {
>  		int i;
>  
>  		info.op = PTRACE_SYSCALL_INFO_ENTRY;
> @@ -917,7 +919,8 @@ static int ptrace_get_syscall(struct task_struct *child,
>  		for (i = 0; i < ARRAY_SIZE(args); i++)
>  			info.entry.args[i] = args[i];
>  		actual_size = offsetofend(struct ptrace_syscall_info, entry);
> -	} else if (child->ptrace_message == PTRACE_EVENTMSG_SYSCALL_EXIT) {
> +	} else if (child->ptrace_event == 0 &&
> +		   child->ptrace_message == PTRACE_EVENTMSG_SYSCALL_EXIT) {
>  		info.op = PTRACE_SYSCALL_INFO_EXIT;
>  		info.arch = syscall_get_arch(child);
>  		info.exit.rval = syscall_get_error(child, regs);
> -- 
> 2.19.1
> 

