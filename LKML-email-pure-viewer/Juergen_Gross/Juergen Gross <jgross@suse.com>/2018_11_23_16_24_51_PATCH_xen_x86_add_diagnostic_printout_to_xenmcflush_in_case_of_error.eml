Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:35:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 41BBD58037D;
	Fri, 23 Nov 2018 08:25:03 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 23 Nov 2018 08:25:02 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ACRjMaBM5hvmOBSMEPwsl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj/p8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xbuwqhqh5kzoLIfI2YLuZyc7nBcd8GQ2dKQ8ZfVzZGAoO5?=
 =?us-ascii?q?d4YBC/cBMvhCr4nyuVQOqwa1Cwi2BOPo0T9InWL90Ko40+QuCwHG2xcgH8kVvX?=
 =?us-ascii?q?TPsdX1L7kdXfqpw6nPyDXOdvVb0ir+5ojQah0tv+2AULZqfcbMx0QjCRnJgkiT?=
 =?us-ascii?q?pID5JT+Y1+YAv3CG4+dkVe+jkXMrpg9xrzS12MsglJXFipgLxl3E+ih0xps+K8?=
 =?us-ascii?q?eiR05he9GkFYNdtyGEOItyRcMvW39ouCkkxb0co5K7fzYFyI4hxxHBb/yLaY+I?=
 =?us-ascii?q?4gjsVOqJIDd4gmxqeK6nihqs7UStzvfwWtS63VpUtCZJj9rBumwX2xHS6MWLUv?=
 =?us-ascii?q?598V2g2TaL2QDT8OZEIUUsmKrfKp4hxKMwl5UKvUTAACD2gkP2g7GSdkk9/eip?=
 =?us-ascii?q?5eLnbav8ppKHKY90hR/xMr40lsy8H+s4KA4OUHaf+eim073j50L5TK1QjvIqiq?=
 =?us-ascii?q?nZrIzaJcMDq669Ag9V0Zgs5wywDje7y9kYmXgHLFRYeBOIlYTpOlfOIOzmAve7?=
 =?us-ascii?q?mVijjDBrx/XeNL37HprNNmTDkKvmfbtl605T0gszzcxF6JJTEL0BIO/zVVX3tN?=
 =?us-ascii?q?zXFRI5Nw20w+D6CNRyzI8eWGSPArOHP6PWq1OH+uUvI+yUbo8PpDn9M+Ql5+Lp?=
 =?us-ascii?q?jXIhm18derem0YEUaHC/GPRmJUKZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYKsFZ3DSZy1gLydwCe7GYVbaXpdClCMFnfodJ+IW+0WZyKQOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVTGF7hG?=
 =?us-ascii?q?UISyUy3KB+u0N9zFiD3LN8g/xZE9xT+vxIXh07NZ7a0+x1FdTyVhjdcdeOTVas?=
 =?us-ascii?q?Ws+mDi0pTtIt398OZF5wFMi4gRDdwSWmGb8VmKaNBJwv7K3c2X/9J8J+y3bD0K?=
 =?us-ascii?q?kslF0mQspJNW27ia9z7QnTB4jVk0qHk6amb7gT3CnI9G2b12qBoFlYUBJsUaXC?=
 =?us-ascii?q?RX0Qe1HZrcrn6U/YT7+hE7InMhBfxs6EMaZKbtzpjVNbRPbsItjeYmSxm3uuCh?=
 =?us-ascii?q?aM3L+DcI3qe2AF1iXHFEcEixwT/WqBNQUmGiehomfeDDtyFVLvY0Lg6/V+pGm8?=
 =?us-ascii?q?Tk8uywGKbkth17Wu9x4RhPycTe4T370etCcgrTV0AEiy39bMB9WcoApheb1WYc?=
 =?us-ascii?q?kh71dfyWLZqwt9M4S6IKBmmFEffBp4vkP02xpsF4VPjNIlrHUpzAp1N6KVy1dB?=
 =?us-ascii?q?dzKe3ZDtNbzbMGjy/Baza6HI3lHSysqZ+qAK6P4gsVXsoBmpFlY+83Vgy9RU02?=
 =?us-ascii?q?ac6o/WAwYIUJPxUlw49x51p7zBZik95oXU1WBjMKWusz/C3c4pC/Uhyhq6Y9hf?=
 =?us-ascii?q?N6aEHhfoE8IGH8iuNPAqm1+xYxIePeBd6LQ7P9m7ePuBwqKrOvhvnCinjWhe/I?=
 =?us-ascii?q?9yyEaM+DdiRe7S2JYFxeqV3g+GVzf6kVegvdr7mYFCZTEOAGW/zTLoC5JWZq13?=
 =?us-ascii?q?ZYwLE3uhI9WrxtVigJ7gQ35Z9F+5C1IGwsOpYgeSb1rm0A1U1EQXp2GnmCSiwz?=
 =?us-ascii?q?x1lTEpsrSQ3CjUz+v+cxoHP3ZBRHN+glf0PYi0k9caUVCqbwczjhul5kX6x69B?=
 =?us-ascii?q?qKRkNWbTQkRIfynwL258VKu9rb6CY89J6JM1viRbSuW8YVaGSrHjpxsWyT/sH2?=
 =?us-ascii?q?xbxDojbTGlpo35nwBmiGKaNHtyrGDWecZqyRfd5dzcQ+Vc3j4HRCl+lDnWCUKw?=
 =?us-ascii?q?P9iv/dWIiZjDtvqyWH6mVp1WaSPr15+PtDOn5W12Bh2yh/OzlcfmEQQg0S/7ys?=
 =?us-ascii?q?NlVSPHrBvnZonr1qK6Mf9of0VyBV/87dZ6FZ96kocqmJ4Q3n0ajI2P/XUbiWfz?=
 =?us-ascii?q?Lclb2aXmYXoIRD4LwMTa7BLr2UJ9NXKJ25z2Vm+GzcR/fdm6bXgb2iY878BMFa?=
 =?us-ascii?q?eV46ZInSpzolqksw3RZeJxkSsayfsr8HQamf0GuBIxziWBBbAfBVVYPSvplxiS?=
 =?us-ascii?q?7tGxtqNXZHu0cbir1UpzhtShDLCEogFBV3f1YJYiHSls7sphNFLAymH86obheN?=
 =?us-ascii?q?PId9IcqgWUkwvcj+hSMJ8+jeAFhS1jOWLgp3Elz/M7gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlEDAIuvTiKQmOCycwqm?=
 =?us-ascii?q?uBFbrcAA+f61pmr3TVHJCwLHyXIHgZzdN/RBiSPkBfgQYUXCkkkZ49DAyl2Mvh?=
 =?us-ascii?q?cEJh7DAL+lH4sgdMyv5vNxTnUmbfoxqoai4pSJeFKhpa9BpC50DTMcyR9e9zGy?=
 =?us-ascii?q?BY/pu8rA2CMGCbZgJIDX0XVUyAHVzsIr6u5dzY+eiCGuW+N+fOYamJqeFGV/eH?=
 =?us-ascii?q?25Ov0ohl/zaNLMmPPWNiD/o02kVdR3B5Bt/Zli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50JixF1pwX33/H1rge0EQWiyFv?=
 =?us-ascii?q?bDStFbUAtSjQTKPfgKNXDhgbaz9tO8tM9a4zwg5NOcvDgNPvyrF4luI1C0tCVV?=
 =?us-ascii?q?H5hsGpZMkKL3uhO1/dGEmLNKqJJTvQzsHzYKO8T6BQjepOux2xvzabD1HsPjCZ?=
 =?us-ascii?q?mzb1UBCvNPlGjDuHMxxGpIG9bhFtBHDjTd38bB27Nd53jTsuzrw1hnPFL2gcMT?=
 =?us-ascii?q?dnfkNJr72Q6z5Yg/plF2xA6HplMfeLmyKD4+bELZYWtKgjPiMhk+Nc/WR/yLZP?=
 =?us-ascii?q?6ixAbOJ6lTGUrdN0pVyi1O6VxX4vQBdI7zpGmo+PlUFjIrnCsIlNX27e+xAA5n?=
 =?us-ascii?q?nWDA4F45N1WoPHuK1KzNXL0qXpJ2Rs6dXRqOkBCtLbJcTPH2AmKgGhTDzbFgwe?=
 =?us-ascii?q?VhawKHrSwUdalafBpTWuspEmp820y9I1QbhBWQltGw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAADPKPhbh0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeMEYwAgiGXJ4FxLhMBiFoiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+?=
 =?us-ascii?q?CNiKCbAIkUgYJAj4SA1sSBYMcggIEAagEM4oah16EKxeBQD+BEYdphgICiRkKh?=
 =?us-ascii?q?zuPJAmKKYZ7CxiJXIcrASyZSoINMxoIGxWDJ4InF44dPzKBBQEBiVSCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAADPKPhbh0O0hNFjHQEBBQEHBQGBUQgBCwGDayeMEYw?=
 =?us-ascii?q?AgiGXJ4FxLhMBiFoiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiKCbAIkUgYJA?=
 =?us-ascii?q?j4SA1sSBYMcggIEAagEM4oah16EKxeBQD+BEYdphgICiRkKhzuPJAmKKYZ7Cxi?=
 =?us-ascii?q?JXIcrASyZSoINMxoIGxWDJ4InF44dPzKBBQEBiVSCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,270,1539673200"; 
   d="scan'208";a="54552458"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 08:25:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2632975AbeKXDJt (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 22:09:49 -0500
Received: from mx2.suse.de ([195.135.220.15]:37684 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S2387726AbeKXDJt (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 22:09:49 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id 559CDAE06;
        Fri, 23 Nov 2018 16:24:55 +0000 (UTC)
From: Juergen Gross <jgross@suse.com>
To: linux-kernel@vger.kernel.org, xen-devel@lists.xenproject.org,
        x86@kernel.org
Cc: boris.ostrovsky@oracle.com, sstabellini@kernel.org, hpa@zytor.com,
        tglx@linutronix.de, mingo@redhat.com, bp@alien8.de,
        Juergen Gross <jgross@suse.com>
Subject: [PATCH] xen/x86: add diagnostic printout to xen_mc_flush() in case of error
Date: Fri, 23 Nov 2018 17:24:51 +0100
Message-Id: <20181123162451.3351-1-jgross@suse.com>
X-Mailer: git-send-email 2.16.4
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Failure of an element of a Xen multicall is signalled via a WARN()
only unless the kernel is compiled with MC_DEBUG. It is impossible to
know which element failed and why it did so.

Change that by printing the related information even without MC_DEBUG,
even if maybe in some limited form (e.g. without information which
caller produced the failing element).

Move the printing out of the switch statement in order to have the
same information for a single call.

Signed-off-by: Juergen Gross <jgross@suse.com>
---
 arch/x86/xen/multicalls.c | 35 ++++++++++++++++++++---------------
 1 file changed, 20 insertions(+), 15 deletions(-)

diff --git a/arch/x86/xen/multicalls.c b/arch/x86/xen/multicalls.c
index 2bce7958ce8b..0766a08bdf45 100644
--- a/arch/x86/xen/multicalls.c
+++ b/arch/x86/xen/multicalls.c
@@ -69,6 +69,11 @@ void xen_mc_flush(void)
 
 	trace_xen_mc_flush(b->mcidx, b->argidx, b->cbidx);
 
+#if MC_DEBUG
+	memcpy(b->debug, b->entries,
+	       b->mcidx * sizeof(struct multicall_entry));
+#endif
+
 	switch (b->mcidx) {
 	case 0:
 		/* no-op */
@@ -87,32 +92,34 @@ void xen_mc_flush(void)
 		break;
 
 	default:
-#if MC_DEBUG
-		memcpy(b->debug, b->entries,
-		       b->mcidx * sizeof(struct multicall_entry));
-#endif
-
 		if (HYPERVISOR_multicall(b->entries, b->mcidx) != 0)
 			BUG();
 		for (i = 0; i < b->mcidx; i++)
 			if (b->entries[i].result < 0)
 				ret++;
+	}
 
+	if (WARN_ON(ret)) {
+		pr_err("%d of %d multicall(s) failed: cpu %d\n",
+		       ret, b->mcidx, smp_processor_id());
+		for (i = 0; i < b->mcidx; i++) {
+			if (b->entries[i].result < 0) {
 #if MC_DEBUG
-		if (ret) {
-			printk(KERN_ERR "%d multicall(s) failed: cpu %d\n",
-			       ret, smp_processor_id());
-			dump_stack();
-			for (i = 0; i < b->mcidx; i++) {
-				printk(KERN_DEBUG "  call %2d/%d: op=%lu arg=[%lx] result=%ld\t%pF\n",
-				       i+1, b->mcidx,
+				pr_err("  call %2d: op=%lu arg=[%lx] result=%ld\t%pF\n",
+				       i + 1,
 				       b->debug[i].op,
 				       b->debug[i].args[0],
 				       b->entries[i].result,
 				       b->caller[i]);
+#else
+				pr_err("  call %2d: op=%lu arg=[%lx] result=%ld\n",
+				       i + 1,
+				       b->entries[i].op,
+				       b->entries[i].args[0],
+				       b->entries[i].result);
+#endif
 			}
 		}
-#endif
 	}
 
 	b->mcidx = 0;
@@ -126,8 +133,6 @@ void xen_mc_flush(void)
 	b->cbidx = 0;
 
 	local_irq_restore(flags);
-
-	WARN_ON(ret);
 }
 
 struct multicall_space __xen_mc_entry(size_t args)
-- 
2.16.4

