Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:52:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 840B35804F7;
	Fri,  7 Dec 2018 10:05:29 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 10:05:28 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AkwWikR29rzaZ3ji0smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSL//xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelYtJH9qlkVoBuiGQWhHv/jxiNUinL026AxzuQvERvB3AwlB98DrH?=
 =?us-ascii?q?LUo8j1NawPV+610bXIzTLGb/NXwzf984vIchE8qvyLWbJwbNbRyU40GgPGkFqQ?=
 =?us-ascii?q?s4rlMC2R1ugXtGib9eVgWPuphmU6qA9xuiCiytkwhoTNnI4Z117J+TtjzIooJt?=
 =?us-ascii?q?C0VFR3bN+mHZdIqS2WK497TtkhTmxooio216MKtJ2hcCUFyZkqwQPUZeadfIiS?=
 =?us-ascii?q?+B3jUf6cITdmi3Jhf7Kynwiy8Ue+xe3mTMW000hFrjBDktbSsnABzRvT6tKISv?=
 =?us-ascii?q?dl/0eh3yiA1xzL5+1aPUw5kbDXJ4Mvz7IujJYfrEfOEjPslEj3jqKabkAk9fKp?=
 =?us-ascii?q?6+TjbLXmvJicN4pshwH6M6QunNG/AOshPggNQWeb4+K826Pn/UHgR7VLgPs2nb?=
 =?us-ascii?q?fDsJ3BO8QbqbC2AxVP3oYg9Rm/FTGm38ocnXUdK1JFYh2Hg5DzO17SOPD4Eeu/?=
 =?us-ascii?q?g1O0nTdvxvDGPaPuDo/CL3jei7rhebd960hByAs819xf5pRUCq0fL/L3QEP+qN?=
 =?us-ascii?q?vYDhohOQyu3+nnEMl91p8ZWW+XAq+WKqLSsUOS6eIoOeWMZJIVtyz7K/gq/PPu?=
 =?us-ascii?q?iX45mVkAfaimx5cXaXa4Huh4LEWde3bjntABEWIStAokUOPqkEGCUSJUZ3uqXa?=
 =?us-ascii?q?I84S80BJilDYfEQICthruB0Ty/Hp1XYGBGF1+NHW3pd4WCR/cDdiaSLtV9nTwD?=
 =?us-ascii?q?ULirU5Uh2g22tA/m17pnKfLZ9TcDtZLj09h15PfflQso+jx2FMmd12CNT2dpnm?=
 =?us-ascii?q?IHXTM23aZ/oVBjxVeHy6R3n/tYFdlL7fNTTgg6LYLcz/B9C93qWQLOZNGJREyi?=
 =?us-ascii?q?QtWnGz4xSN0xzsQKY0Z8HdWikx/C0zCrA78Ti7yEGpg0/rjA0Hj2IsZ302zG27?=
 =?us-ascii?q?U5j1k6XstPMnWribNl+AjNGYHFiUWZmLysdaQHwiHN8mCPzW6NvEFdVA59SqHF?=
 =?us-ascii?q?XXEZZkvLotX1/ELCT7myCbs5NgtN09KNKqxPatfxl1VJWO/jOMjCY2K2g2q/GA?=
 =?us-ascii?q?yHxq2SY4bwe2USxiPdCFManAAV5nuGMQk+BiG8o2PRFjBuFFTvY1/y/ul6sn+0?=
 =?us-ascii?q?Ukg0zwSSZU17y7W14gIVheCbS/4LwrIEuSIhqzJoHFa939PaEcaAqxBmfKVGZd?=
 =?us-ascii?q?M94VFH1W3Cugx5P5ygKb1ih1EEfwR2uUPuywt4CoFancc2q3MqyRJ4KbiE31NZ?=
 =?us-ascii?q?azOYwZfwN6XNJWn24h+uZLDZ21HE3NmN56cA9e43q1PgvAGuCEov6HFn09hT03?=
 =?us-ascii?q?uB6ZTGFgsSUZTtUkkp8xh2va3VYi4454nMz31jLbG0siPe29IuHOYkygugc81D?=
 =?us-ascii?q?P6+eFQ7yE9cVB86hKOExn1ipbxQEPP1d9aIuPsOmceeG17CvPOp6gD2mimFH6p?=
 =?us-ascii?q?hn0k2Q7yp8VvLI35EdzvGC3wuISy3zjE28vcDwg4xEYy8dHnC+yST9GIFefKly?=
 =?us-ascii?q?cpsVBme0JM23wM5zh5rsW35e6V6iCEkK2M6veRqOcVP92Rdc2lgQoXyigSG41S?=
 =?us-ascii?q?B7kyk1rqqD2yzD2+TjdBsdNm9LXmVilkrsIY6vgtAeXUioaRUplRS/6Ub7wahb?=
 =?us-ascii?q?uLpwL23JTUhUeCj2KnloUrGsubqaf85P9JQovD1VUOume1CaSb39oxwA3yP4BW?=
 =?us-ascii?q?RexzM7dzCsuprnmRx3k2adLHd1rHrEdsB83xbf5NrARfFP2joKXjV3iT7SBlKk?=
 =?us-ascii?q?Jdmm4c2Ul4vfsuC5T2+gVodccS7xwYOCtSu743ZnARm+n/C1h93mHhI20S7919?=
 =?us-ascii?q?l2SyrIqAzwbZXs16S/KehnZFVnBEfg68pmHYFziogwi4sR2XQAhpWV4GAIkWH8?=
 =?us-ascii?q?MdhA3aL+bXwNRSMEwtLP4Qjl3lFjIWyNx47jSnqdxc5hbcGgYmwKwiI989xKCK?=
 =?us-ascii?q?CM4bxBnCt1oUC3oRjfYPdjhTcd1eUh6GQBjO4XogotwT6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999tl/MFXJ0HHp64DrYt?=
 =?us-ascii?q?/Qbc8Ith2PkhfNlOxVKJM3lvoXiitrI2P9vXs5y+EliRxix421vI+CK2915qK2?=
 =?us-ascii?q?HgZYNiHpZ8MU4jzilrxRnsGS34CyBJlhHigLUYDsTfKpFjISqPvmOxyPED06tn?=
 =?us-ascii?q?eUB77fERWD50dhqnLFC4qrOG2PJHkF0dViQwGQJE5FjwARQjo6hYQ1FhywyMzi?=
 =?us-ascii?q?bUd55S0R5ljipRtX0e9oMxj/UmHCpAancDs0SZ6fLAZI4QFG/UvaLcue7udrFS?=
 =?us-ascii?q?FC4pKhtBCNKnCcZwlQDWAJXVGEB0n+Pra049nM6fOYBu24L/vBeriOre1eV/GV?=
 =?us-ascii?q?xZOgyIdm/jCMNtmRMXlmFfE0xk1DXXVhEcTDhzoPUzAXlz7Kb8ODpBez5Cx3rs?=
 =?us-ascii?q?O88PTqQg7v5pGPC7xdMdpx4RC2nLyDOvWUhCZ4LzZYy5wNyWXJyLgZwF4dlSVu?=
 =?us-ascii?q?eyOxHrQHsC7HVLjQlbNPDx4HdyNzM9NF4Lgh3gZWI87UlNP02qR8jv40EFpFUV?=
 =?us-ascii?q?3hmse0Zc0FOW29NVXHBFqVO7SCPzHE38b3YaakQ71KkOpUrwGwuSqcE0L7IjSD?=
 =?us-ascii?q?ljzpWwqzPu1WkC6bPAJRuIemfxZpCGjjSs/maxKhPN92iz023aM7hnfQOWEANj?=
 =?us-ascii?q?h8dltHrqeM4iNAnvV/B2tB42JlLOaenSaZ6ujYKpAOvvpqAiR7jeRa4HshxrtR?=
 =?us-ascii?q?7SFEQuF1mSTIot5vpVGmjveAyj59XBVSrTZLgdHDgUI3c4nDsNFvQ3vLtC0A8X?=
 =?us-ascii?q?mLFxkLoZEtXtL1tq94x97Nmab3KTwE+NXRq5gyHc/RfeuBPGtpFQf1HzvVFhAG?=
 =?us-ascii?q?THb/MXzDgGReneuU+3nTqYI1/Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BqAgBFtQpch0O0hNFjHQEBBQEHBQGBZ?=
 =?us-ascii?q?YFbghEng3qUKlABAQaBNRRoiCSJNYZtFBgTAYFLhhIiOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsNAgImAgIDHxIBB?=
 =?us-ascii?q?QEcBhMFA4JOS4F1BQgFmiE8ih1wgS+CdgEBBYcpCIELiE+BLIEcF3iBB4ERAYI?=
 =?us-ascii?q?TSTWEYQEBgyKCV4k1AS+BRIUQhTmKdwmRSxiROCyYYA8hgTyBdn0IbAaCNYIbN?=
 =?us-ascii?q?YhMhWAfMoEFAQGIJ4I+AQE?=
X-IPAS-Result: =?us-ascii?q?A0BqAgBFtQpch0O0hNFjHQEBBQEHBQGBZYFbghEng3qUKlA?=
 =?us-ascii?q?BAQaBNRRoiCSJNYZtFBgTAYFLhhIiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBCgsNAgImAgIDHxIBBQEcBhMFA4JOS4F?=
 =?us-ascii?q?1BQgFmiE8ih1wgS+CdgEBBYcpCIELiE+BLIEcF3iBB4ERAYITSTWEYQEBgyKCV?=
 =?us-ascii?q?4k1AS+BRIUQhTmKdwmRSxiROCyYYA8hgTyBdn0IbAaCNYIbNYhMhWAfMoEFAQG?=
 =?us-ascii?q?IJ4I+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="56000944"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 10:05:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726208AbeLGSFY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 13:05:24 -0500
Received: from mail.kernel.org ([198.145.29.99]:40898 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726132AbeLGSFX (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 13:05:23 -0500
Received: from mail-wm1-f46.google.com (mail-wm1-f46.google.com [209.85.128.46])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id B51792146F
        for <linux-kernel@vger.kernel.org>; Fri,  7 Dec 2018 18:05:21 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544205922;
        bh=UYttdw/W7iXXQjKp1GQMbomjiCOUngiuqONn1JZYzhI=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=B+HQzuszs+Z+iZQFmH5A1lF4uQG/Fixd0Z9f1h0UJR0Zgab8Dw4zQEmUmMzqGZeyx
         a+prOdUAhLEdM6H61A/Byp/RM4Q+EWDDCPUAtocLIEcpDgh18W9Wwamg36bbUeCb/2
         snpcIum+NMZqar/sJHnHztWv0MuEcb8tSxdiule8=
Received: by mail-wm1-f46.google.com with SMTP id z18so5225653wmc.4
        for <linux-kernel@vger.kernel.org>; Fri, 07 Dec 2018 10:05:21 -0800 (PST)
X-Gm-Message-State: AA+aEWarthMnqIrKso9HtMj8EWLOj0ESp6Vc1dryIGT8UQ7m9JTwaZJd
        CUUER220jZ10IZWqyY/acqW4UbN9QNVUH1A9ty+aSw==
X-Google-Smtp-Source: AFSGD/Ukk/Qok2Il6HrESeciMTQL6P1H4YE6cyfRvoBSjWDYo9ngMAbIHwg8qGNWGhjNn3b1SngXFWebiAVRHk5Kpfs=
X-Received: by 2002:a1c:b1d5:: with SMTP id a204mr3276001wmf.32.1544205920093;
 Fri, 07 Dec 2018 10:05:20 -0800 (PST)
MIME-Version: 1.0
References: <20181206221922.31012-1-sean.j.christopherson@intel.com>
 <20181206221922.31012-5-sean.j.christopherson@intel.com> <20181207163127.GA23494@wind.enjellic.com>
In-Reply-To: <20181207163127.GA23494@wind.enjellic.com>
From: Andy Lutomirski <luto@kernel.org>
Date: Fri, 7 Dec 2018 10:05:07 -0800
X-Gmail-Original-Message-ID: <CALCETrWBB=AvqxhiXAt_kYTjBOaWkuACLF_TN7rzqSKOHfSdaw@mail.gmail.com>
Message-ID: <CALCETrWBB=AvqxhiXAt_kYTjBOaWkuACLF_TN7rzqSKOHfSdaw@mail.gmail.com>
Subject: Re: [RFC PATCH v2 4/4] x86/vdso: Add __vdso_sgx_enter_enclave() to
 wrap SGX enclave transitions
To: "Dr. Greg Wettstein" <greg@enjellic.com>
Cc: "Christopherson, Sean J" <sean.j.christopherson@intel.com>,
        Andrew Lutomirski <luto@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        X86 ML <x86@kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Josh Triplett <josh@joshtriplett.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 7, 2018 at 8:31 AM Dr. Greg <greg@enjellic.com> wrote:
>
> On Thu, Dec 06, 2018 at 02:19:22PM -0800, Sean Christopherson wrote:
>
> Good morning, I hope the week is ending well for everyone.
>
> The audience for the issues that Sean is addressing are the groups
> that have developed and are delivering an Untrusted RunTime System
> (URTS) as a component of SGX Platform SoftWare (PSW).  At the current
> time I believe that is Intel and us, although there may be stealth
> initiatives as well.
>
> Sean is obviously coordinating with and supporting the Intel SDK/PSW
> team.  SGX has now been in the wild for 2-3 years so there is work
> other then the reference implementation in the field.  The purpose of
> this mail is to make sure that everyone understands the issues and
> ramifications of changes that may end up in 'Flag Day' events, if
> nothing else so we can get the best possible implementation put
> forward.
>
> Baidu and Fortanix are working on Trusted RunTime Systems (TRTS) based
> on RUST, I believe, so this will affect them to the extent that they
> are implementing their own low level enclave runtime support or they
> may be simply building on top of the low level Intel TRTS.  Perhaps
> Jethro would comment on these issues if he could.
>
> > Intel Software Guard Extensions (SGX) SGX introduces a new CPL3-only
> > enclave mode that runs as a sort of black box shared object that is
> > hosted by an untrusted normal CPL3 process.
> >
> > Enclave transitions have semantics that are a lovely blend of SYCALL,
> > SYSRET and VM-Exit.  In a non-faulting scenario, entering and exiting
> > an enclave can only be done through SGX-specific instructions, EENTER
> > and EEXIT respectively.  EENTER+EEXIT is analogous to SYSCALL+SYSRET,
> > e.g. EENTER/SYSCALL load RCX with the next RIP and EEXIT/SYSRET load
> > RIP from R{B,C}X.
> >
> > But in a faulting/interrupting scenario, enclave transitions act more
> > like VM-Exit and VMRESUME.  Maintaining the black box nature of the
> > enclave means that hardware must automatically switch CPU context when
> > an Asynchronous Exiting Event (AEE) occurs, an AEE being any interrupt
> > or exception (exceptions are AEEs because asynchronous in this context
> > is relative to the enclave and not CPU execution, e.g. the enclave
> > doesn't get an opportunity to save/fuzz CPU state).
> >
> > Like VM-Exits, all AEEs jump to a common location, referred to as the
> > Asynchronous Exiting Point (AEP).  The AEP is specified at enclave entry
> > via register passed to EENTER/ERESUME, similar to how the hypervisor
> > specifies the VM-Exit point (via VMCS.HOST_RIP at VMLAUNCH/VMRESUME).
> > Resuming the enclave/VM after the exiting event is handled is done via
> > ERESUME/VMRESUME respectively.  In SGX, AEEs that are handled by the
> > kernel, e.g. INTR, NMI and most page faults, IRET will journey back to
> > the AEP which then ERESUMEs th enclave.
> >
> > Enclaves also behave a bit like VMs in the sense that they can generate
> > exceptions as part of their normal operation that for all intents and
> > purposes need to handled in the enclave/VM.  However, unlike VMX, SGX
> > doesn't allow the host to modify its guest's, a.k.a. enclave's, state,
> > as doing so would circumvent the enclave's security.  So to handle an
> > exception, the enclave must first be re-entered through the normal
> > EENTER flow (SYSCALL/SYSRET behavior), and then resumed via ERESUME
> > (VMRESUME behavior) after the source of the exception is resolved.
> >
> > All of the above is just the tip of the iceberg when it comes to running
> > an enclave.  But, SGX was designed in such a way that the host process
> > can utilize a library to build, launch and run an enclave.  This is
> > roughly analogous to how e.g. libc implementations are used by most
> > applications so that the application can focus on its business
> > logic.
>
> Just to make sure we are on the same page.
>
> When you refer to 'build' an enclave I assume you mean to construct
> the enclave image from a compiled shared object file.  Or are you
> suggesting an environment where the library loads dynamically
> generated object code into an enclave using Enclave Dynamic Memory
> Management (EDMM)?  Building, i.e. compiling and linking an enclave,
> doesn't seem to be the province of library support.
>
> Perhaps a more accurate phrase would be; 'to load, initialize and
> execute an enclave image'.
>
> To step back further and frame the issue most precisely.  What the
> VDSO work is proposing to support is shifting from a model where
> applications 'own' enclaves to a model where dynamically linked shared
> libraries 'own' enclaves, correct?

Or just a model where an application can own an enclave but not need
to register a process-wide SIGSEGV handler.  The current model where
try_init_enclave registers a signal handler is extremely impolite.

>
> With the VDSO model you are proposing an environment where library
> developers can implement SGX/enclave based protections of code and
> data which the actual application linking against the library would be
> totally unaware of, correct?

That too.

> To summarize succinctly, would it be correct to assert that there are
> three possible advantages to the VDSO approach:
>
> 1.) Shared libraries can own enclaves without the knowledge of
> applications.

Yes.

>
> 2.) EDMM responses can be implemented more efficiently.

I don't know what that means.  If an enclave is managing its own
memory by asking the untrusted runtime to forward exceptions to it,
this seems like a lovely attack surface.

>
> 3.) Reduction in enclave attack surface.
>
> With respect to point three, perhaps the most important attack on SGX
> security guarantees to date has been documented in Lee et.al.'s
> dark-ROP attack.  A significant aspect of that attack was AEE based
> probing of enclave execution.  Do you have reflections with respect to
> how the proposed archictecture would lessen or facilitate such
> attacks?

No effect whatsoever.  This is an ISA design issue and the untrusted
code has nothing to do with it.

Personally, my opinion is that, if the hardware permits an attack
channel against an enclave, it's in the best interest of everyone for
Linux to make that attack channel available to the greatest extent
possible.  This way no one says "well, my enclave is secure under
Linux, so no big deal.)

>
> The economics of software development seem to be motivating the use of
> libOS approaches to porting applications to enclaves which has
> significant implications with respect to AEE based probing attacks.

That sounds like a generally poor idea.  Maybe it's economically
reasonable, but enclaves really ought not to be that big or
complicated.


>
> >     Note that this effectively requires userspace to implement an exit
> >     handler if they want to support correctable enclave faults, as there
> >     is no other way to request ERESUME.
>
> Once again to be clear for those of us that have investments in the
> existing ABI.
>
> I'm assuming that in the proposed model the URTS would interrogate the
> VDSO to determine the availability of entry and exception handling
> support and then setup the appropriate infrastructure and exit
> handler?

...

> As a result, do you anticipate the need for a 'flag day' with respect
> to URTS/PSW/SDK support for all of this?
>

There will be a flag day when the upstream driver lands.  It would be
great if the vDSO code lands in the same kernel so it's always
available.

> In addition, would you anticipate anything in the design that would be
> problematic for environments where the application would choose to
> implement an enclave in addition to linking against a library that
> implements enclaves?


Nope, should be fine.
