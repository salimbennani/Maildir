Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:54:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A269B58079D;
	Wed, 12 Dec 2018 10:54:35 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 12 Dec 2018 10:54:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AlDqLSRb6awUKNxUPSVQOJD3/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcmyZx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQctQUS2dPWstcVzVNDp+h?=
 =?us-ascii?q?Y4cWEucBPP1YpJT5q1cQsReyGQygCeXtxDBSg3/437M13P48Hg7YxgwuH9MOv2?=
 =?us-ascii?q?rQrNroKawcU/66w7PVwjrddfNdxCrz55TPchA7oPGMW71wetfVxUU2Cg/JklCc?=
 =?us-ascii?q?pIr4ND2Xy+sNqXCW4OVuVe2ti2AppQJ/rCWxyMgwkYnJnoAYx0vY9Sll2os5Oc?=
 =?us-ascii?q?G0RFJ5bNOiDZBetzuaN4xzQs46X2xovjs1y70bspC9YSgK1JMnxxvea/ydaIiI?=
 =?us-ascii?q?4RPjX/uWLDd8mXJlZLW/ig2x8Ue+0O38UNe70FJQoipCiNnMuWkA2hrO4caJTf?=
 =?us-ascii?q?t9+12u2TeJ1w3L8O5EJF07mbDHJJ4mx749kIcYv0fbHiLuhkn6kKubel859uWm?=
 =?us-ascii?q?9ejreKjqq5yAO4NuiwzzMLwiltKjDek8KAQDXGiW9f6i2LH94EH1WrpHg/wwn6?=
 =?us-ascii?q?LEqp7VP94bqbS8AwJN0oYs9RK/DzC+3dQGknkIMkhFdAiEj4f3IVHOJu73DfOl?=
 =?us-ascii?q?j1SrijdryOjKPrznAprTMnjOiKntcap55kJG1QY+w85T64hJBrwCPP7/QE78ud?=
 =?us-ascii?q?7AAh88KQO0wuLnCNtn1oMZXGKCGquZMKLUsV+V6eMjOuqMa5EPuDb7Nfcl4+fi?=
 =?us-ascii?q?jXg3mF8bY6apx4AaaG63Hvt4OUWVe3nsjckbEWcMoAU+SPbmiFqYUT5cf3qyRb?=
 =?us-ascii?q?4z5iknCIK6CofOXoStgL2C3CilBJFXaX1GB0uIEXfpcYWERvgNZDiTIs9njjwL?=
 =?us-ascii?q?S7yhR5U92hGpsQ/w06BnIfbM+i0EqZLj08B45+3JmhEz6Tx7FcOd33uNT2FphG?=
 =?us-ascii?q?wIQTA20bt7oUx8zFeDzKd5j+ZZFdxV+/NGTAM6OYTAwOx9DtD4QhjBccuRSFa6?=
 =?us-ascii?q?XtWmBik8TtA2w9AQeUp9GNKijhbF3yqtGLIVk72LBJop8qPTxXTxJsB9y2rY26?=
 =?us-ascii?q?kllVUpXsxPNWi+jK5l6wfTH5LJk1mel6uyb6scxy7N9GCAzWaUpkFXSgxwXL7B?=
 =?us-ascii?q?XXAeYEvWsNv46lnDT7+oFbQoLA9BxdSeJatNb93jlU9GS+v7ONTCf2KxnH+9BR?=
 =?us-ascii?q?WSybOKdobqf2Qd0z/bCEgLiA0T+XeGNQ4jBiauuW7eDTpuFU7xbEPo6+VxtHS7?=
 =?us-ascii?q?TkosxQGQc0Jhz6a1+gIShfGEVvwcxKwEtzk7pzV0Blm92cnWBMSGpwZmeKVcYt?=
 =?us-ascii?q?Y94FNc2GLdtgx9OIGgLq94il4fdQR3o13h1xFtBopclsgqqWsgzBBuJqKAzFNB?=
 =?us-ascii?q?azSY0IjtNbLNNGn94gqja67M1VHYy9aZ5KEP5e88q1XiugGpC0Uj/29m09lTz3?=
 =?us-ascii?q?uT+JHKABAOXpL2V0Y97wJ6qK3CYikh+4PU0mVhMbW1sj/H3NIpGOslyxa6c9dD?=
 =?us-ascii?q?Kq+EExXyE8kbB8ioJ+wngFypbhMCPOBP+684JcKmd/2a2KG1OOZshi6pjWNC4I?=
 =?us-ascii?q?plyEKD6zJ8SvLU35YC2/yXxA+HWCnzjVi/ssH7g5tLZSwPEWWlzyjkB4lRZrNp?=
 =?us-ascii?q?cIYPCGeuJdC3x9pki57sXX5Y6ECsB1cc1MC1fhqSakT33RdM2kQPvXynhSy4wi?=
 =?us-ascii?q?R0kjE0tKaQwDbCwuXidBUdPG5LS3JvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe9RP6JI0vipNSuSzfFeaRqT7oxQEySPjHn?=
 =?us-ascii?q?JSyywheDGup5r2gQZ6iGWbLHtoqHrZeMdwxQrQ5dDGRP5R2CYGSzd8iTXNGle8?=
 =?us-ascii?q?ONyp982Ol5jfquC+S36hVppLfCjrzIOMriu66XdxAR2imfC+gdnnEQk80S/m2N?=
 =?us-ascii?q?hmTyTIrBDgYob106S2K/5ofk5tBFXk8cp1Bpl+kpcshJEXwXUahI+a/WAEkWfw?=
 =?us-ascii?q?NtVXw7n+Y2AORT4Iwt7V5hbq2Et4I3KNxoL5UGidw8R7a9m7ZGMWxjwy78RQBK?=
 =?us-ascii?q?iI67xEmDN/okCkogLJffh9gjAdxOMu6XEAhOEFoggtziSbAr0JGUlYPCrslwmH?=
 =?us-ascii?q?7tykraVXYnqvfqa01EZkgd+hC7SCqBlGWHnlYpciATNw7sJnPVLPynLz65voeN?=
 =?us-ascii?q?nNbd0JsB2UnAzNj+xUKJI3i/oLijBrOWP7vX051eE7iQZi0o29vIiCM29t5r62?=
 =?us-ascii?q?AgZENj3pYMMe4jTtjaddnsmMxYyuEItuGi4XXJT2V/KnCywdte7oNwuVFD08q3?=
 =?us-ascii?q?GbGafQHAOF6UdmqW7PHI6vN32NOHYZytBiTgGHJENDmAAUQCk6npkhGwC2w8zh?=
 =?us-ascii?q?dV115zEL6V7+txtM0floNxjkX2fbpQeobCo0SZeFIBpX6AFC+1naMciE4u1vGC?=
 =?us-ascii?q?FY+4WrrBaRJWyDewRIEWYJV1SfCF/5Obmu4cTA//KcBuqjNPbOZbSOqepDV/aH?=
 =?us-ascii?q?356v041m/yqSOcWLJHVtE/o72k9bV3BjB8vZgykPSzAQly/Vbc6UvhK89TNsrs?=
 =?us-ascii?q?yl7PTnQgHv5ZaMC7tPN9Vg4Qu2jLyHN+6RgiZ5NDlZ2okNxX/O1LgQwloShzty?=
 =?us-ascii?q?eDmqFLQKrTTNQ77Imq9LEx4bbDt+NctP76IhxwlNJNTUitXv2r5jif41DVhFWE?=
 =?us-ascii?q?flmsGoY8wKPm68OEnGBEaNKLSJOznLz9vrbqO7TL1alP9UuAGouTaHD0/jOSyO?=
 =?us-ascii?q?lzn3WBCuMuFMjyCbMAZduIGndRZtBnbsTMj7ah2gK9J3iTw2wbsphnLFL2IcMD?=
 =?us-ascii?q?58c19Tob2U9y9XnvJ/G2lZ5Hp/MeaEgzqZ7/XfKpsOq/RrHz97l/hE73U60bdV?=
 =?us-ascii?q?6CBESedxmCvTqN5uvl6nnvOOyjphTBpBtDJLiJiXskVlPKXT7oNAVmrc/BIR8W?=
 =?us-ascii?q?WQDAwHp8dkCt3qoaxf1sLDm77zKDhc9dLZ5s8cB8nSKMKaP3stKxvpGDjIDAQb?=
 =?us-ascii?q?ST6nL33Qh0tYkPuK7H2asoA6qoTwmJoJUrJaVEY6FvUfCkRkGtwNOJZ2XjM+nr?=
 =?us-ascii?q?6dg84F/n6+rBjXRMVHsZHLTPOSAfPzKDmHiblIfQcHwbT9LddbCoqu8Ut4a0J+?=
 =?us-ascii?q?lZqCI0fMXtdT6nlrdic9pERA9ig4QmBliGz/bQb4yXkfBLaQgwIxjwpkeucsvG?=
 =?us-ascii?q?Po/kswDlnHvi09lA82g9qz0mPZSyL4MKrlBdIeMCHzrUVkY8v2?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAAAdWBFch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgVqBD4ECJ4N8iBmLYTBSBoE1FIkNij2DdYFzFBgPBAGHPiI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNgwMAwMBAYJnAQIBAgECIB0BATcBBQkBA?=
 =?us-ascii?q?QoLAwoCAiYCAgMfEgEFARwGEwWDHAFBgTMNBQqbCzyKHXCBL4J2AQEFgTABUAO?=
 =?us-ascii?q?FIAMFgQuKFYEcF3iBB4ERgxKCNmgDhGSCV4ktQIFFhROQSQmHC4pMGIFchRqKU?=
 =?us-ascii?q?I4dixMPIYElgg59CGwGgjWCG4EiAQKCSIUUhWAfMgEQAnIBAY0AAQE?=
X-IPAS-Result: =?us-ascii?q?A0AgAAAdWBFch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgVq?=
 =?us-ascii?q?BD4ECJ4N8iBmLYTBSBoE1FIkNij2DdYFzFBgPBAGHPiI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQgNCQgpIwyCNgwMAwMBAYJnAQIBAgECIB0BATcBBQkBAQoLAwoCAiYCAgM?=
 =?us-ascii?q?fEgEFARwGEwWDHAFBgTMNBQqbCzyKHXCBL4J2AQEFgTABUAOFIAMFgQuKFYEcF?=
 =?us-ascii?q?3iBB4ERgxKCNmgDhGSCV4ktQIFFhROQSQmHC4pMGIFchRqKUI4dixMPIYElgg5?=
 =?us-ascii?q?9CGwGgjWCG4EiAQKCSIUUhWAfMgEQAnIBAY0AAQE?=
X-IronPort-AV: E=Sophos;i="5.56,345,1539673200"; 
   d="scan'208";a="43803374"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 10:53:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728333AbeLLSuq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 13:50:46 -0500
Received: from mail.kernel.org ([198.145.29.99]:45388 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727897AbeLLSup (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 13:50:45 -0500
Received: from mail-wr1-f46.google.com (mail-wr1-f46.google.com [209.85.221.46])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2591F20870
        for <linux-kernel@vger.kernel.org>; Wed, 12 Dec 2018 18:50:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544640644;
        bh=tLTZL75cjM73TG58rvf9vbqeJpQNMAZEGvUCBpbzC2A=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=qxUDi6HjcC5qz5OeKqU36Q/2jW7T7aLOf7WvVBLCtH7YufXrVCmMK5roOTOlCER8s
         2XXt5nbYJKtjnvHMzU0uOckdKWqmxNFDoK08ucyCdE6bdYP/F4ptlYdiBQT1Pl8CAJ
         /QQm66N77C9P1JPOo/VOvlYR1fnIMBcBsy7PMh7s=
Received: by mail-wr1-f46.google.com with SMTP id p4so18743520wrt.7
        for <linux-kernel@vger.kernel.org>; Wed, 12 Dec 2018 10:50:44 -0800 (PST)
X-Gm-Message-State: AA+aEWZxJpJYLAyOQQ1avumIRibQnqNEiabY/Olks8sLRlQ64m4Ab2Vk
        hG3SHRorzViawOq89MMMQtILp73iCSM2+1ZG9qBajg==
X-Google-Smtp-Source: AFSGD/WACc2ZXTcHFjOVKQE0LocvTuOH2wnKQ42vQNGItMlE8k9w2ObFYU8H0z2tb3uSMwfdwGr9IeI+jNNRcJziv48=
X-Received: by 2002:adf:f0c5:: with SMTP id x5mr17518695wro.77.1544640642617;
 Wed, 12 Dec 2018 10:50:42 -0800 (PST)
MIME-Version: 1.0
References: <20181211222326.14581-1-bp@alien8.de> <20181211222326.14581-5-bp@alien8.de>
 <CALCETrVArfAAbQKJ-g_5pOy6dMVgx-FC_mjdC9xzL1jU9T07jw@mail.gmail.com>
 <59aad362-4a5b-dd8b-642f-0dc3f83cf7ee@amd.com> <20181211233901.GV27375@zn.tnic>
 <CALCETrXvZ4avdUh2bTLVTTz3Jxogo3zK5akWTsJ=rkJpf1XiDg@mail.gmail.com>
 <20181212100814.GB6653@zn.tnic> <CALCETrWSG5825HrxwEJGqbSoRz=A_2O-GSBD+K_q9YPHu2TB6A@mail.gmail.com>
 <20181212184459.GE6653@zn.tnic>
In-Reply-To: <20181212184459.GE6653@zn.tnic>
From: Andy Lutomirski <luto@kernel.org>
Date: Wed, 12 Dec 2018 10:50:30 -0800
X-Gmail-Original-Message-ID: <CALCETrXcBa3eUN2okedig+sECnQ8zuSWojahqWLR4vWqD8mEhg@mail.gmail.com>
Message-ID: <CALCETrXcBa3eUN2okedig+sECnQ8zuSWojahqWLR4vWqD8mEhg@mail.gmail.com>
Subject: Re: [RFC PATCH 4/4] x86/TSC: Use RDTSCP
To: Borislav Petkov <bp@alien8.de>
Cc: Andrew Lutomirski <luto@kernel.org>,
        Tom Lendacky <Thomas.Lendacky@amd.com>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        John Stultz <john.stultz@linaro.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 12, 2018 at 10:45 AM Borislav Petkov <bp@alien8.de> wrote:
>
> On Wed, Dec 12, 2018 at 10:07:03AM -0800, Andy Lutomirski wrote:
> > You're proving my point, I think.  CPUID, IRET, MOV to CR, etc are
> > "serializing".  LFENCE, on many CPUd and depending on MSRs, is a
> > different kind of serializing.  MFENCE is something else.  All LOCK
> > instructions are some kind of barrier, but I don't think anyone calls
> > them "serializing".
>
> Yeah, peterz and I hashed it out a bit today on IRC about the different
> meanings of serializing. I see your point now.
>
> > The uaccess users of barrier_nospec() are presumably looking for a
> > speculation barrier in the sense of "CPU, please don't execute the
> > code after this until you're sure that this code should be executed
> > for real and until all inputs are known, not guessed."
>
> Yeah, I believe AMD's paper has this nicely written:
>
> "MITIGATION G-2
>
> Description: Set an MSR in the processor so that LFENCE is a dispatch
> serializing instruction and then use LFENCE in code streams to
> serialize dispatch (LFENCE is faster than RDTSCP which is also dispatch
> serializing). This mode of LFENCE may be enabled by setting MSR
> C001_1029[1]=1.
>
> Effect: Upon encountering an LFENCE when the MSR bit is set, dispatch
> will stop until the LFENCE instruction becomes the oldest instruction in
> the machine."
>
> https://developer.amd.com/wp-content/resources/90343-B_SoftwareTechniquesforManagingSpeculation_WP_7-18Update_FNL.pdf
>
> which is basically what you want for the whole mitigation crap if you
> want to kill speculation - you simply hold dispatch until the LFENCE
> retires.
>
> > The property I want for RDTSC ordering is much weaker: I want it to be
> > ordered like a load.  Imagine that, instead of an on-chip TSC, the TSC
> > is literally a location in main memory that gets incremented by an
> > extra dedicated CPU every nanosecond or so.  I want users of RDTSC to
> > work as if they were reading such a location in memory using an
> > ordinary load.  I believe this gives the real desired property that it
> > should be impossible to observe the TSC going backwards.  This is a
> > much weaker form of serialization.
>
> Well, in that case you need something new.
>
> Because, the moment you have a RDTSC in flight and a second RDTSC comes
> in and that second RDTSC must *not* bypass the first one and execute
> earlier due to OoO, you need to impose some ordering. And that's pretty
> much uarch-dependent, I'd say.
>
> And I guess on AMD the way to do that is to stop dispatch until the
> first RDTSC retires.
>
> Can it be done faster? Sure. And I'm pretty sure there's a lot of pesky
> little hw details we're not even hearing of, which get in the way.
>

As far as I know, RDTSCP gets the job done, as does LFENCE, RDTSC on
Intel.  There was a big discussion a few years ago where we changed it
from LFENCE;RDTSC;LFENCE to just LFENCE;RDTSC after everyone was
reasonably convinced that the uarch would not dispatch two RDTSCs
backwards if the first one was immediately preceeded by LFENCE.
