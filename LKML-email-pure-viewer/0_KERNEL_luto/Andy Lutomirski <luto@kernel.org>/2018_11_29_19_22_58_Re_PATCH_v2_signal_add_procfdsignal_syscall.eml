Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:50:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E363B5802E4;
	Thu, 29 Nov 2018 11:23:19 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 11:23:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9Zs/Px/UVe6Ivf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+8TIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOM+lDr4nlpVYDtge+BRC2Ce/z1jNEmn370Ksn2OohCwHG2wkgEsoSvX?=
 =?us-ascii?q?TSsdr0NLoZX+aozKnUyjXDavJW2S3m6IjLcxAqvPaBXbZtccrNzkkiDADFgUuK?=
 =?us-ascii?q?qYzjITyV0v4Bs2+B7+pvTO+ijXMspQJpojW32Msglo3EipgIxl3K6yl12ps5KN?=
 =?us-ascii?q?6kREJhYNOpEoNcuz+GO4ZyWM8vQGFltDwkxrEYpJK3ZicHxZUhyhXCcfKIaZKI?=
 =?us-ascii?q?7QjmVOuJITd3mnZleLWnihas/kiv1Pf8WtO30FlUtCpFlMfDtnQX2xzU8MiHRe?=
 =?us-ascii?q?Nx/kan2TmRywDe8v9ILVwwmKbBNpIszKA8moAOvUnAAiP6gkT7ga2OekUh4Oeo?=
 =?us-ascii?q?6uDnYrv8pp+bMo95kgX+MqUomsyiDuU0KwsOUHaB+eS6yrLj+VT1QLJEj/0wjK?=
 =?us-ascii?q?bZqovXJdoUpqGnGQ9ZyIUj5AilDzegztsYmWMLLFVfeBKIl4TpIU3BIOjkDfej?=
 =?us-ascii?q?hFShiDNrx/HFPrL/GJnMIWXDnazlfbZ87U5c1QUywcpe55JSFrEOPvbzVlXtu9?=
 =?us-ascii?q?zfCx8zKxa0zPr/CNVhyoMeXnqCAq+DP6PTrV+H/OUvL/OMZI8Iojn9Lfcl6uXq?=
 =?us-ascii?q?jX84n18dYKao0YEWaHC+AvRpPUGZbWDwjdcGFGcAphA+Q/DyiF2eTT5TYG6/X6?=
 =?us-ascii?q?A75j4lEo6mDoDDRoargLyGxyq7GpxWZmZbClGDC3vodoOEW+sSZyKWOMNujjsE?=
 =?us-ascii?q?Vb25QY87yR6urBP6y6ZgLufM4CIYrpLj1N925+HJjxE97z50At+Z02GMSWF0g2?=
 =?us-ascii?q?wJSyU33KB5vUxy1FOD3bJkjPxfENxZ/+lJXRsiNZ7A0+x6DMj/WgHbcdePUlqm?=
 =?us-ascii?q?RtSmDis3TtI+2NIOZ0d9G9O/jhHMxSaqArkVl6CVC5ww6K7Tw3/xJ8NlwXbcyK?=
 =?us-ascii?q?Yhl0UmQtdINWC+m6Fw7RbTCJDTn0WZjamqc78c0zDL9GuEyWqOv0RYUAprXKXB?=
 =?us-ascii?q?XHAfYFbWrNvj6kPDSb+uFaooMg9bxcGeLatKb8XjjU9aS/f7JNTef2Wxln+tCh?=
 =?us-ascii?q?mS2LODcpDme2UH0yXbE0gLjQYT8G2CNQg/ACehvm3fACZvFVLpf0Pj7+1+pGmn?=
 =?us-ascii?q?QU8zygGAd1dh2Kat+h4JmfycTOse3q4FuCckrDV0AFa93tLMB9qcvQZhe79cYd?=
 =?us-ascii?q?c84FdB2mLUrAh9Pp2mL6B/iV8SaQV3v0Xy1xppDoVMi9QlrHQvzABqM6KXzEtB?=
 =?us-ascii?q?dy+E3ZD3IrDYMG3y8w6gaqHI2lDSys2Z+roS5/sirVXjvwapFlQ5/nVj0tlV1W?=
 =?us-ascii?q?ac55rQAAoTV5LxTlg49xxgq77GZSk94pve1WdwPqmsrj/Cx9UpCfMlyxa9ZdtQ?=
 =?us-ascii?q?LLmIFQ7yE8IAAciuJ/cnm1yobhICIeBT+7Q4P8Kgd/uaxqGrOPxsky6hjWRC+I?=
 =?us-ascii?q?p9yF6D9zJgSu7U2JYI2+uY3gqbWDjmlleur8f3lZpCZT4MBGq/yDHoC5JLaa12?=
 =?us-ascii?q?YIkEF32uI8qxxthlg57tWnhY9EOsBl8c2c+pfwaSYEL53QFKyUsXpnmnkzOizz?=
 =?us-ascii?q?NoizEpsraf3CvWzuXidRoLIG5KSHN5jVfxJ4i5lNQaXEmubwg0mxqp/0f6x65H?=
 =?us-ascii?q?pKthK2nfW1tHfy/zL2t6SKu/qqKCY9JT6JMvqShXUv6zYUqZSr7+pBsWyTjjEH?=
 =?us-ascii?q?FdxDA4djGqvIv2nxphhWKZLXZzqmfZeM5qyRfe4tzcWeBe3j4cSCZkjjnXA0C2?=
 =?us-ascii?q?P8O18tWMi5fDrue+WnqhV5JJdinn14GAtCq95WBxBR2/nvazmsDoEAQg0C/70c?=
 =?us-ascii?q?VqWjvMrBrmfobr0KG6O/p9fkZ0HF/899Z6GoZmn4sznp4Q2GIWhpWI/XUdl2fz?=
 =?us-ascii?q?Ps5W2ab/bHoLWD4KzMTZ4Anj2E1/MH2Jw5j1WWmawstkf9O6eH8Z2joh78BWD6?=
 =?us-ascii?q?eZ9LlEnSp2olWitw7Qb+ZyniwByfQw8n4VmP8GuBAiziiGBrASHE9YPTHjlhiS?=
 =?us-ascii?q?7tC+qrlXa3ircbSqyEV+mtWhBqmYog5AQHb5ZosiHSho48VjN1LM1Wf/64D+d9?=
 =?us-ascii?q?nWcNITrQaUkxbbguhRKZIxkOcKhCV9NWL8u30l1/A0jRh00Z6mu4iHLn1n/Lil?=
 =?us-ascii?q?DR5AKj31e8QT9yn2gqlEmcaW252vEo9lGjUWR5boSfOoEDQPtfXoLQqOETs8qm?=
 =?us-ascii?q?uFFrrbBwOQ9EBmr3fXGZCxK36XPGUZzcllRBSFJkxQmgUUUyshnpIjCgCm3s/h?=
 =?us-ascii?q?cFp65jAM4F73sABMx/lsNxn+VGffuQipZi01SJiZMBpZ8AVC613JPsyZ6+J5Bz?=
 =?us-ascii?q?tY8YG5rAyRNmybYBxFDGEOWkyZHlDjI6Oh5d/a/+iDAeq+KfTObK6KqexfUfeI?=
 =?us-ascii?q?2J2u3pFn/zaKKsWAIH1iA+cn1UpEWHBzA97ZlCkXSywLiyLNaNaWpBei9S12rc?=
 =?us-ascii?q?C/8/XrVBjs5YuVDLtSPstg+wqrgaeYLOOQgCd5KTBF1pID33PIyb4f3EIMhCFq?=
 =?us-ascii?q?bTWiDbMAtSvVRqLKhqBXFwIbaz90NMZQ9a08wxJCOdTFhdL1zLJ4iv81BkxBVV?=
 =?us-ascii?q?zgnMGpeMMLL3u8NFPBGEaEKrCGKSfXzMHwZKO2UadQg/lMtx2spTabFFfuPiiC?=
 =?us-ascii?q?lznsTRygLftAgz2bPBNAvoGwaRJtCWnlTNL7ZRy3Kt53jTsqwbIqgnPGL3ITMT?=
 =?us-ascii?q?95c0lVtL2f8TtYguljG2xG9ndkLfOLmyCc7+nZLJYZqfpqAiRumOJc73Q30L9V?=
 =?us-ascii?q?7CBCRPxolyretN9uo1e6kuaRzjprSgZBqjFOhNHDgUI3EqXD94JcWH/CtDgX5H?=
 =?us-ascii?q?iWBg5C89BlENz0p6FZzPDFjqvuLjpYtdPTq5gyHc/RfeuBPGtpFQf1HzvVFhAG?=
 =?us-ascii?q?THb/MXzDgGReneuU+3nTqYI1/Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AtAAB2OwBch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGDayeDeZQgUAEBBoE1FIkKjiaBcxQYEwGEQIM0IjUIDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgECAwECIB0BATcBBQkBAQoLDQICJgICAx8SAQUBH?=
 =?us-ascii?q?AYTBQODGYF1DQWcazyKHXCBL4J2AQEFhywIgQuJbgGBHBd4gQeEI4UBgwSCV4k?=
 =?us-ascii?q?JghKFBYUsilkJkTIYgVqINIcOLJgTDyGBJwGCCn0IbAaCNYIbDBeIXoVgHzKBB?=
 =?us-ascii?q?QEBjT8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AtAAB2OwBch0O0hNFkHQEBBQEHBQGBUgcBCwGDayeDeZQ?=
 =?us-ascii?q?gUAEBBoE1FIkKjiaBcxQYEwGEQIM0IjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgECAwECIB0BATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBQODGYF1DQW?=
 =?us-ascii?q?cazyKHXCBL4J2AQEFhywIgQuJbgGBHBd4gQeEI4UBgwSCV4kJghKFBYUsilkJk?=
 =?us-ascii?q?TIYgVqINIcOLJgTDyGBJwGCCn0IbAaCNYIbDBeIXoVgHzKBBQEBjT8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="53907911"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 11:23:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726532AbeK3G3l (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 01:29:41 -0500
Received: from mail.kernel.org ([198.145.29.99]:60580 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725776AbeK3G3l (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 01:29:41 -0500
Received: from mail-wr1-f46.google.com (mail-wr1-f46.google.com [209.85.221.46])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 75A612146D
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 19:23:12 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543519392;
        bh=dTYF6bkR+xmUw0ByAhVqNDnpCu73AFpR5S2VqGVdChA=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=skp7UQLX9UbooImUZkkHgkOORtYmiM/KsxPn0gc/9YgAQ7YEjaiNlV6yO1VDA3Nac
         WwEnOA/a4me52Cfhu2o1Q8Mj/Hd6Nq1afz9kDc6U7SL4Q7/lm3JUh9hYiJoDwnFXbW
         bfiH3O5u+n3KNIugPSXw401UyTzh/vVZbBxG2DhM=
Received: by mail-wr1-f46.google.com with SMTP id j10so3048674wru.4
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 11:23:12 -0800 (PST)
X-Gm-Message-State: AA+aEWa2Fu/UijpnXZEZL/Vw9fkUK8s9S329x1tnu2LRB6hZiyDbg9sm
        Gxot8/5VIkngTDpGngWSUEivvOZkmDeHxggqQvb1Jg==
X-Google-Smtp-Source: AFSGD/VLrUd68e8Pg0w3K5iVVmbYIXQceb3v7qySx7ROslg7xU935JZ2WcA50coHIqE+mzBCZ6oVC5mXzgAJzCjQ2bI=
X-Received: by 2002:adf:f0c5:: with SMTP id x5mr2403938wro.77.1543519390903;
 Thu, 29 Nov 2018 11:23:10 -0800 (PST)
MIME-Version: 1.0
References: <20181120105124.14733-1-christian@brauner.io> <87in0g5aqo.fsf@oldenburg.str.redhat.com>
 <36323361-90BD-41AF-AB5B-EE0D7BA02C21@amacapital.net> <993B98AC-51DF-4131-AF7F-7DA2A7F485F1@brauner.io>
In-Reply-To: <993B98AC-51DF-4131-AF7F-7DA2A7F485F1@brauner.io>
From: Andy Lutomirski <luto@kernel.org>
Date: Thu, 29 Nov 2018 11:22:58 -0800
X-Gmail-Original-Message-ID: <CALCETrWnQNMQcCmFZrftVVYgAMW6DT3gyxvVb_v9_enUCUkHiw@mail.gmail.com>
Message-ID: <CALCETrWnQNMQcCmFZrftVVYgAMW6DT3gyxvVb_v9_enUCUkHiw@mail.gmail.com>
Subject: Re: [PATCH v2] signal: add procfd_signal() syscall
To: Christian Brauner <christian@brauner.io>
Cc: Florian Weimer <fweimer@redhat.com>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Lutomirski <luto@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>,
        Aleksa Sarai <cyphar@cyphar.com>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS Devel <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Daniel Colascione <dancol@google.com>,
        Tim Murray <timmurray@google.com>,
        linux-man <linux-man@vger.kernel.org>,
        Kees Cook <keescook@chromium.org>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 11:17 AM Christian Brauner <christian@brauner.io> w=
rote:
>
> On November 30, 2018 5:54:18 AM GMT+13:00, Andy Lutomirski <luto@amacapit=
al.net> wrote:
> >
> >
> >> On Nov 29, 2018, at 4:28 AM, Florian Weimer <fweimer@redhat.com>
> >wrote:
> >>
> >> Disclaimer: I'm looking at this patch because Christian requested it.
> >> I'm not a kernel developer.
> >>
> >> * Christian Brauner:
> >>
> >>> diff --git a/arch/x86/entry/syscalls/syscall_32.tbl
> >b/arch/x86/entry/syscalls/syscall_32.tbl
> >>> index 3cf7b533b3d1..3f27ffd8ae87 100644
> >>> --- a/arch/x86/entry/syscalls/syscall_32.tbl
> >>> +++ b/arch/x86/entry/syscalls/syscall_32.tbl
> >>> @@ -398,3 +398,4 @@
> >>> 384    i386    arch_prctl        sys_arch_prctl
> >__ia32_compat_sys_arch_prctl
> >>> 385    i386    io_pgetevents        sys_io_pgetevents
> >__ia32_compat_sys_io_pgetevents
> >>> 386    i386    rseq            sys_rseq            __ia32_sys_rseq
> >>> +387    i386    procfd_signal        sys_procfd_signal
> >__ia32_compat_sys_procfd_signal
> >>> diff --git a/arch/x86/entry/syscalls/syscall_64.tbl
> >b/arch/x86/entry/syscalls/syscall_64.tbl
> >>> index f0b1709a5ffb..8a30cde82450 100644
> >>> --- a/arch/x86/entry/syscalls/syscall_64.tbl
> >>> +++ b/arch/x86/entry/syscalls/syscall_64.tbl
> >>> @@ -343,6 +343,7 @@
> >>> 332    common    statx            __x64_sys_statx
> >>> 333    common    io_pgetevents        __x64_sys_io_pgetevents
> >>> 334    common    rseq            __x64_sys_rseq
> >>> +335    64    procfd_signal        __x64_sys_procfd_signal
> >>>
> >>> #
> >>> # x32-specific system call numbers start at 512 to avoid cache
> >impact
> >>> @@ -386,3 +387,4 @@
> >>> 545    x32    execveat        __x32_compat_sys_execveat/ptregs
> >>> 546    x32    preadv2            __x32_compat_sys_preadv64v2
> >>> 547    x32    pwritev2        __x32_compat_sys_pwritev64v2
> >>> +548    x32    procfd_signal        __x32_compat_sys_procfd_signal
> >>
> >> Is there a reason why these numbers have to be different?
> >>
> >> (See the recent discussion with Andy Lutomirski.)
> >
> >Hah, I missed this part of the patch.  Let=E2=80=99s not add new x32 sys=
call
> >numbers.
> >
> >Also, can we perhaps rework this a bit to get rid of the compat entry
> >point?  The easier way would be to check in_compat_syscall(). The nicer
> >way IMO would be to use the 64-bit structure for 32-bit as well.
>
> Do you have a syscall which set precedence/did this before I could look a=
t?
> Just if you happen to remember one.
> Fwiw, I followed the other signal syscalls.
> They all introduce compat syscalls.
>

Not really.

Let me try to explain.  I have three issues with the approach in your patch=
set:

1. You're introducing a new syscall, and it behaves differently on
32-bit and 64-bit because the structure you pass in is different.
This is necessary for old syscalls where compatibility matters, but
maybe we can get rid of it for new syscalls.   Could we define a
siginfo64_t that is identical to the 64-bit siginfo_t and just use
that in all cases?

2. Assuming that #1 doesn't work, then we need compat support.  But
you're doing it by having two different entry points.  Instead, you
could have a single entry point that calls in_compat_syscall() to
decide which structure to read.  This would simplify things because
x86 doesn't really support the separate compat entry points, which
leads me to #3.

3. The separate x32 numbers are a huge turd that may have security
holes and certainly have comprehensibility holes.  I will object to
any patch that adds a new one (like yours).  Fixing #1 or #2 makes
this problem go away.

Does that make any sense?  The #2 fix would be something like:

if (in_compat_syscall)
  copy...user32();
else
  copy_from_user();

The #1 fix would add a copy_siginfo_from_user64() or similar.
