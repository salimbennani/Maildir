Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 08:53:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 257275803C2;
	Sun, 25 Nov 2018 16:37:08 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 25 Nov 2018 16:37:07 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2R9A/xPkzm1EK+If7dMl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn7rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRtpeWCNcDI28?=
 =?us-ascii?q?aIUADeQPM+lboYnzuVUOtgO+CAu3CePz0z9Ig2P63a0m3+kjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KKESXv21zaLVyzvDcu9W2TD46IjJaBAhuvKMXbNtesfWzUkvCh/FjlKL?=
 =?us-ascii?q?pIP/OjOazPgCvHKD7+phSeKgkWonpxt3ojex2schk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrAHpZK3YS0HxZUoyhPebvGIb5aE?=
 =?us-ascii?q?7g7/WOuUIzp1i2xpdba6ihuw7USty+nxW8yp31lQqidIltzBuW0J2hPO9MSKT+?=
 =?us-ascii?q?dy80mh1DuP0Q3Y9/tKLloulaXBLp4s2r4wmYQXsUTEBiL2hkr2g7GMdkk++ein?=
 =?us-ascii?q?9f7nYrP4qZ+YLYN0jRv+Mqs2lsy+B+Q3LBQOUnCF9eig0LDv51D1TbtUgvEsj6?=
 =?us-ascii?q?XUs4zWKd4aq6O7GwNV15ws6xe7DzeoytQYmnwHIUpBeBKGiYjpJl7PLOn7Dfih?=
 =?us-ascii?q?mVSslilkx/TfMr3mDJTNKGbMkK36cLZj5E5T1hAzwcpc551KELEBJuz8WkvruN?=
 =?us-ascii?q?zfFB85PBS4w/z7B9VlyoMeRWWPD7edMKPTsl+H+PgjIuaRZIIOvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMjmF8de7Wp0oUTaHyiAvtmJECZa2L2gtgdCWcKohY+TOvyhV2CSzFTZmqyUL?=
 =?us-ascii?q?g75j0hCIKmEJ3MRoaigLGa2Ce7H5tWZn1JC1yWEHfocZmEVOkIaC6IPsBhlTkE?=
 =?us-ascii?q?X6C7S4A9zRGuqBP6y71/I+rW/S0Xq4jv1Nty5+3VkxEy8id5D8Cc02GLUmF1kX?=
 =?us-ascii?q?kERz4w3KBjv0N9zk2P3rR/g/xdDdZT/e9GUh8mNZ7AyOx3E8r9WhnBfteOS1aq?=
 =?us-ascii?q?WM+mDiszTt8qx98OYkB9G8itjxzZ3iqqBaMVmKKPBJAu7q3c2H3xLd5ny3nazK?=
 =?us-ascii?q?khk0UmQsxXOG2lnKF/8RLfB4rIk0qDkaaqer8R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsDmgk9YRPj9ItjeY3i+m2GrBR?=
 =?us-ascii?q?mWwLOAa47qe2YY3CXZE0UElwET/XCbNQkxHCuhomTeDCBwGlLreU/j7e5+qHaj?=
 =?us-ascii?q?RE8u0w6Kd1Fh16ay+hMNmPOTUe0T0awetCchsTp0Gk290MzQC9ebowphfaNcYc?=
 =?us-ascii?q?4y4Vtd1GLZsRB9MYKkL6x4mlEedAF3tVv01xprEoVAjdQqrHQywQpuKKKY1VRB?=
 =?us-ascii?q?dy+Y3ZHwILHXNnP+/Be1a67S21He1tmW97wL6PQ5rVXjoQ6oGlAj83Vhz9lazX?=
 =?us-ascii?q?+c6o/WAwoVVJL7Slw3+ARip7HGfik94JvZ2mdoMaaqvT7NxdIoCPE+xRa9YthQ?=
 =?us-ascii?q?KqWEFAz1E80EHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQ35cF3uuU0RedWzb9jFeuqMb3mY9faDEWH2q/zzXkBYFLaq1z?=
 =?us-ascii?q?e4YLFXmhI8mtytpigJ7tXmZS9ES/CFMexM+pZR2SYkTn3Q1RyUsYu2anlja/zz?=
 =?us-ascii?q?BulTEmsLCf3C3Xz+v+bhUHPnNES3d4jVfrJ4i5lNQaXEmubwg0mxqp/0f6x65H?=
 =?us-ascii?q?pKthK2nfW1tHfy/zL2t6SKu/qqKCY9JT6JMvqShWUOW8bUqaS7LnuBsaziXjEn?=
 =?us-ascii?q?BaxDA6cTGqp5r4kwZ7iGKbMHZ8sn7ZddtsyhfY4dzWXeRR0SYeRClklTnXAUCx?=
 =?us-ascii?q?P9uz8tWOlJfDsee+W3i6VpJJcinrzoKAtC2l6m1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYohJAfw38aio+X/XoGl2f+?=
 =?us-ascii?q?KtFb2aP4bHoQSj8H2d/V4A752EJ9KnKF3Z72VnKYwsF5fdm1fnsW2j4h78BNEK?=
 =?us-ascii?q?qU76ZLnSpvrlq4sALee/59njgGxPsq6X4ahfwJuQU3wiWcBLASAVdXPSj2mxuU?=
 =?us-ascii?q?6NC+qb1dZHyzfrioyEp+gdehAamHogFdW3b2YI0uHCFu4cVkLFLDzmfz5Zr6d9?=
 =?us-ascii?q?nKYtIerRmUkxbGj+hIJ5M9jPsKhSx7OW3juX0p0fI0jRtr3ZuipoiIN31t/L6l?=
 =?us-ascii?q?Ah5fLjD1e8QT+jT3gadfhMmW2Z2vHo56GjUKR5boSfOoEDQPtfXoLQqOETs8qm?=
 =?us-ascii?q?uFFrrbBwOQ9EBmr3fXGZCxK36XPGUZzcllRBSFP0NQmgcUXDEnnpIjEgCq2dfs?=
 =?us-ascii?q?cEN45jAX+175pQFAyuNuNxnjTGjfoB2kZSszSJiaNBBW9B1N51/JMcyC6eJ+By?=
 =?us-ascii?q?NY8YekrAOTMWyXfRhIAXsKWkyZBFDjI7+u6sPb8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRi0XkCLNctebpAqm9S1xtM?=
 =?us-ascii?q?y/6/PrWATg5YaUD7tSMNNv+w25gKuZNu6Qgjp5Jihc1p8W2XDIz70f1kYIiy5y?=
 =?us-ascii?q?bzmtDagAtSnVQaLQhKBXDh0bayByNMdS7KI8xA5NOcHFhdPvy754leU4C1NEVV?=
 =?us-ascii?q?znh8GoatYGI2C7NFPbGkmLMK6KKiHMw8Hyeam8U6FfjP1Itx2svjaWC1XsPimY?=
 =?us-ascii?q?mDnzSR+uMftAjCWaPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFmxd73plKPOIlDqD4+bEKpYZr/1rDz9wl+Jb5nQ61rRU?=
 =?us-ascii?q?4DtFRPxzhCvdsNpur0u6nemIzzptSABOpSpThIKXoUViPr3U95laVnbC+RIN7G?=
 =?us-ascii?q?OQBAwLpttlENLvva9Qx8PLlKLyLjdC7t3V8dEdB8jSNMKILn4hPQD1Fz7TCQtW?=
 =?us-ascii?q?BQKsYCvznQoVv+uf+Tfd+pcgp5fElZwMR7tfVVdzHfQfXBdLBtsHdb5xUiJsta?=
 =?us-ascii?q?OHi8sJ/2G9rVGFQNhGubjOU/uZCO3uND+dy79Je01bkvvDMY0PO9ijiARZYV5g?=
 =?us-ascii?q?kdGPQhKIUA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAABeP/tbh0O0hNFYAQUBAh0BAQUBB?=
 =?us-ascii?q?wUBgVEIAQsBgTAlghYng3mIGIt+UAEBBoEQJRSJBo4iFIEQA0wKCAEBGBMBhEC?=
 =?us-ascii?q?EGiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQE3A?=
 =?us-ascii?q?QQBCQEBChIGAgISFAICAzEBBQEODgYTBQ+DDYF1BQgBBJlOPIlXBUFwgS+CdgE?=
 =?us-ascii?q?BBYcSCBIiV4g2gkgXeIEHgREnDBOBTn6ESwEIAwEBBQEfRwEMgjAxgiaJExKBb?=
 =?us-ascii?q?oR/jx1VCZFHiVGHN5UuglsCBAIEBQIFDyGBJYEccXsKOyoBgkE+gV0LAReDSop?=
 =?us-ascii?q?zHzIBMFQBASGJIwEOF4InAQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAABeP/tbh0O0hNFYAQUBAh0BAQUBBwUBgVEIAQsBgTA?=
 =?us-ascii?q?lghYng3mIGIt+UAEBBoEQJRSJBo4iFIEQA0wKCAEBGBMBhECEGiI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdAQE3AQQBCQEBChIGAgI?=
 =?us-ascii?q?SFAICAzEBBQEODgYTBQ+DDYF1BQgBBJlOPIlXBUFwgS+CdgEBBYcSCBIiV4g2g?=
 =?us-ascii?q?kgXeIEHgREnDBOBTn6ESwEIAwEBBQEfRwEMgjAxgiaJExKBboR/jx1VCZFHiVG?=
 =?us-ascii?q?HN5UuglsCBAIEBQIFDyGBJYEccXsKOyoBgkE+gV0LAReDSopzHzIBMFQBASGJI?=
 =?us-ascii?q?wEOF4InAQE?=
X-IronPort-AV: E=Sophos;i="5.56,280,1539673200"; 
   d="scan'208";a="52556283"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 25 Nov 2018 16:37:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726143AbeKZL32 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 26 Nov 2018 06:29:28 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:44286 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726079AbeKZL32 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Nov 2018 06:29:28 -0500
Received: by mail-pf1-f195.google.com with SMTP id u6so5673783pfh.11
        for <linux-kernel@vger.kernel.org>; Sun, 25 Nov 2018 16:37:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=hW5H5eUlUgTpOIzdNNZ8H532v4I3mH9Vh7sq0pS0Uws=;
        b=Qe8/I/SoyfMbx7r6ZlTob46zZbkiyNsb6cVYNKUnlfalU3CGH5L3uJcb1xcC92WoWV
         B/uuw/+dtZU7VdwQk1loyXD2ACDpYRuwEltagst1sOYlwoAH5BvF50FVDuOpWHzctDcR
         zjJFDA7TQj3ogkNllalze+olRfI2nzoTtBdDFhq8Rn0YvQcb0jIYihsRv2WLxRnzvXAq
         EXlA/owk7TTWtEWGyUqXNbhdr0witzIqua7uf/yw5DIoFw+2qznha5A7sFlmEGW3uVnj
         ocSEFDdHSEQC8VQK7dcHIiqRxc0BhMYBrDEW9RMbpJ6JhSutz6AjOwof7326Z4F1VP3W
         TxGQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=hW5H5eUlUgTpOIzdNNZ8H532v4I3mH9Vh7sq0pS0Uws=;
        b=oJ9jy5kpO29d+5n8GFwTT2RFTtFWa1XIZ+sNPOAPRN2GrkOztgGb+lTiY1dIYLAhfV
         05OgrHF68RsiykhQ3LhqPWq5IN7AfN6/SfQPuHwLn8Kbdg4IQQm1JrxEw1t0E51Ob14s
         Bhuf5WZHf6wD43y/wdXrMX5lC8MBungMXZuu2mxOpetb/iUJZt1A0OUkLdPqtlS2myyY
         sUGwIdhjYIKlyB7ppoqeasZwK/rYcZFur+Cyt8QU7aqpddPnxqHobe2zsfq0wqupLBki
         /BB7UhPrEH2BaOPWSa77X3q6OgVBgt1H8PTBsKNfmLyMIq6dFp3FAR3h2gWYjih7jul+
         2eVQ==
X-Gm-Message-State: AA+aEWaAHcUjnMQk8l5VdamqYyvoRPUMn2KmxKzo8a5vThcqMNTtG+pV
        yJ/FSTxIbTn/IesqMyNIBhvBAQ==
X-Google-Smtp-Source: AFSGD/XY/gdT8hzY2aXicgjskg3kiDJH9A/Xz3bFvsWuLsAfGzRVxF1XuJTzX8BjqUNc0yFTpvhDlw==
X-Received: by 2002:a62:53c5:: with SMTP id h188mr15295103pfb.190.1543192622866;
        Sun, 25 Nov 2018 16:37:02 -0800 (PST)
Received: from ?IPv6:2601:646:c200:7429:7069:da99:d9d2:c355? ([2601:646:c200:7429:7069:da99:d9d2:c355])
        by smtp.gmail.com with ESMTPSA id s2sm52205469pfa.167.2018.11.25.16.37.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 25 Nov 2018 16:37:01 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [PATCH v17 18/23] platform/x86: Intel SGX driver
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16B92)
In-Reply-To: <D45BC005-5064-4C75-B486-4E43C454E2F6@amacapital.net>
Date: Sun, 25 Nov 2018 16:37:00 -0800
Cc: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Andy Lutomirski <luto@kernel.org>, X86 ML <x86@kernel.org>,
        Platform Driver <platform-driver-x86@vger.kernel.org>,
        linux-sgx@vger.kernel.org, Dave Hansen <dave.hansen@intel.com>,
        "Christopherson, Sean J" <sean.j.christopherson@intel.com>,
        nhorman@redhat.com, npmccallum@redhat.com,
        "Ayoun, Serge" <serge.ayoun@intel.com>, shay.katz-zamir@intel.com,
        haitao.huang@linux.intel.com,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        "Svahn, Kai" <kai.svahn@intel.com>, mark.shanahan@intel.com,
        Suresh Siddha <suresh.b.siddha@intel.com>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        "H. Peter Anvin" <hpa@zytor.com>,
        Darren Hart <dvhart@infradead.org>,
        Andy Shevchenko <andy@infradead.org>,
        LKML <linux-kernel@vger.kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <94154ECB-3EF7-4A37-9057-0B84DBCE650E@amacapital.net>
References: <20181116010412.23967-19-jarkko.sakkinen@linux.intel.com> <CALCETrXctxfED1Dr-MuZxFnh5gzTyRL06hRJ_fQnNA8p2S4xEQ@mail.gmail.com> <20181119161917.GF13298@linux.intel.com> <CALCETrX+A4XaEMq3fJqmHUeeDHr_BdWh-Wk3ikXfY=L77BbaGA@mail.gmail.com> <20181120120442.GA22172@linux.intel.com> <20181122111253.GA31150@wind.enjellic.com> <CALCETrWJr-C6yK8NBCp=NbapwHOaBFphiDU9VKEtQ0NMRrdC2g@mail.gmail.com> <20181124172114.GB32210@linux.intel.com> <20181125145329.GA5777@linux.intel.com> <0669C300-02CB-4EA6-BF88-5C4B4DDAD4C7@amacapital.net> <20181125185524.GA23224@wind.enjellic.com> <D45BC005-5064-4C75-B486-4E43C454E2F6@amacapital.net>
To: "Dr. Greg" <greg@enjellic.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Bah, I hit send on a partially written draft. I=E2=80=99ll try again soon.

--Andy

> On Nov 25, 2018, at 1:59 PM, Andy Lutomirski <luto@amacapital.net> wrote:
>=20
>=20
>=20
>> On Nov 25, 2018, at 10:55 AM, Dr. Greg <greg@enjellic.com> wrote:
>>=20
>=20
>>=20
>>=20
>> The notion of a launch enclave is critical to establishing these
>> guarantees.  As soon as the kernel becomes involved in implementing
>> SGX security policy the architecture becomes vulnerable to kernel
>> and/or privilege modification attacks.
>>=20
>> We've talked at length about the provisioning bit, I won't go into
>> details unless people are interested, but the EPID provisioning
>> protocol implements an SGX mediated cryptographic contract that a
>> perpetual platform identifier will not be disclosed to anyone but
>> Intel. =20
>=20
> As a reviewer, and as an occasional academic cryptographer, I need to put m=
y foot down here.  This is inaccurate.
>=20
> There is an SGX-mediated contract that says:
>=20
> 1. For any given public key p, a perpetual platform identifier ID_p exists=
 and will only be disclosed to the holder of the corresponding private key p=
_priv or to someone to whom the private key holder permits (intentionally or=
 otherwise) to use that identifier.
>=20
> 2. The ability described in #1 is available to anyone whom the kernel and l=
aunch enclave (if the MSRs are locked ) permits (intentionally or otherwise)=
 to use it.
>=20
> No, I have no clue why Intel did it this way.  I consider it to be a mista=
ke.
>=20
>> The launch enclave is critical to that guarantee.
>>=20
>> It is completely understandable why a locked down, (non-FLC) hardware
>> platform, is undesirable in this community.  That doesn't mean that a
>> launch enclave as a concept is unneeded or necessarily evil.
>>=20
>> In an FLC environment the kernel assumes responsibility for SGX
>> privacy and security.  This means that we need to do at least as well
>> with a kernel based model as to what is currently available.
>>=20
>>> There are other ways to accomplish it that might be better in some
>>> respects.  For example, there could be /dev/sgx and
>>> /dev/sgx_rights/provision.  The former exposes the whole sgx API,
>>> except that it doesn???t allow provisioning by default. The latter
>>> does nothing by itself. To run a provisioning enclave, you open both
>>> nodes, then do something like:
>>>=20
>>> ioctl(sgx, SGX_IOC_ADD_RIGHT, sgx_provisioning);
>>>=20
>>> This requires extra syscalls, but it doesn't have the combinatorial
>>> explosion problem.
>>=20
>> Here is a proposal for the driver to add the needed policy control
>> that is 'SGXy' in nature.  The 'SGXy' way is to use MRSIGNER values as
>> the currency for security policy management.
>>=20
>> The driver should establish the equivalent of three linked lists,
>> maintainable via /sysfs pseudo-files or equivalent plumbing.  The
>> lists are referenced by the kernel to enforce the following policies.
>>=20
>> 1.) The right to initialize an enclave without special attributes.
>>=20
>> 2.) The right to initialize an enclave with the PROVISION_KEY attribute s=
et.
>>=20
>> 3.) The right to initialize an enclave with the LICENSE_KEY attribute set=
.
>>=20
>> The lists are populated with MRSIGNER values of enclaves that are
>> allowed to initialize under the specified conditions.
>=20
> NAK because this is insufficient.  You=E2=80=99re thinking of a model in w=
hich SGX-like protection is all that=E2=80=99s needed.  This is an inadequat=
e model of the real world.  The attack I=E2=80=99m most concerned about wrt p=
rovisioning is an attack in which an unauthorized user is permitted=20
>=20
> The use case I see for attestation *privacy*
>=20
>>=20
>> The driver should either establish a 'seal' file or value,
>> ie. MRSIGNER value of all zero's, that once written will not allow
>> further modifications of the list(s).  This will allow
>> cryptographically guaranteed policies to be setup at early boot that
>> will limit the ability of subsequent DAC compromises to affect policy
>> management.
>>=20
>> The lists are obviously vulnerable to a kernel compromise but the
>> vulnerability scope is significantly limited vs. 'can I get root or
>> some other userid'.  If we are really concerned about the scope of
>> that vulnerability there could be an option on TPM based systems to
>> verify a hash value over the lists once sealed on each enclave
>> initialization.  We have already conceded that EINIT isn't going to be
>> any type of speed daemon.
>>=20
>> On an FLC system the driver verifies that the submitted enclave has an
>> MRSIGNER value on one of the lists consistent with the attributes of
>> the enclave before loading the value into the identity modulus
>> signature registers.
>>=20
>> In this model, I would argue that the driver does not need to
>> arbitrarily exclude launch enclaves as it does now, since the kernel
>> has the ability to specify acceptable launch enclaves.  The driver API
>> can alaso continue to accept an EINITTOKEN which maintains
>> compatibility with the current ABI.  Punishment can be inflicted on
>> non-FLC hardware owners by issueing EINVAL if an EINITTOKEN is
>> specified on platforms with fixed launch keys.
>>=20
>> This also has the effect of allowing multiple launch enclaves at the
>> platform owner's discretion.  I know there was some sentiment, and
>> Jarkko had code, that used a launch enclave at a fixed location such
>> as /lib/firmware.  That has the disadvantage of requiring that the
>> kernel know about all the different ways that a launch enclave might
>> be used or setup.  It also establishes a cryptographic rather then a
>> filesystem based guarantee on the launch enclave being used.
>>=20
>> If the lists are empty the kernel simply proceeds as it does now and
>> loads any enclave submitted to it.
>>=20
>> I believe this architecture has a number of merits.  It largely
>> preserves compatibility with current PSW's and provides a mechanism
>> for cryptographically enforced policy that is consistent with the SGX
>> architecture.
>>=20
>> I need to get Christmas lights put up on the house for the squirrels
>> to eat so I will leave this proposal open for debate.
>>=20
>> Have a good remainder of the weekend or whats left of it.
>>=20
>> Dr. Greg
>>=20
>> As always,
>> Dr. G.W. Wettstein, Ph.D.   Enjellic Systems Development, LLC.
>> 4206 N. 19th Ave.           Specializing in information infra-structure
>> Fargo, ND  58102            development.
>> PH: 701-281-1686
>> FAX: 701-281-3949           EMAIL: greg@enjellic.com
>> -------------------------------------------------------------------------=
-----
>> "Some of them are.  A surprising number aren't.  A personal favorite of
>> mine was the log from a cracker who couldn't figure out how to untar
>> and install the trojan package he'd ftped onto the machine.  He tried a
>> few times, and then eventually gave up and logged out."
>>                               -- Nat Lanza
