Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:43:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8E3F85803DC;
	Wed, 12 Dec 2018 01:26:27 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga006-1.jf.intel.com with ESMTP; 12 Dec 2018 01:26:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ABvA6CRJT0dYUTaVrbtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL//8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gq1ZrhKuqBNxw5XMYIyXL/dyYqDQcMkGSWdbQspdSypMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5VoZXnqFsMsxS+AxSjBPn1xTRVnnH5x6073P4iEQrb2wEgBdQOv2?=
 =?us-ascii?q?7UrdrvN6cfSvy6zK7VwjrddfxWxC396I/Sch87u/2MWqhwccXIxEQpCgjLjU2Q?=
 =?us-ascii?q?pJT7Mz+J0ukBqXWX4uR+We61lmIqqB19riKuy8oukoXFm54Zx17e+Sln3oo4Ic?=
 =?us-ascii?q?e0RFN4bNK+DZddsyeXPJZsTMw4WWFnoiM6x6UGuZGleCgKz4wqxwDQa/OZaYiE?=
 =?us-ascii?q?+BHjW/iLITd+mn1lfKizhxGo8Uiv0uH8V8+030hWriddjNXAqnQA2wbO5sWJVP?=
 =?us-ascii?q?dx5Fqt1DWT2wzJ6+xJI1g4la/BJJ4gxr4wmIATsUPGHiLunEX2jamWdlgr++Sx?=
 =?us-ascii?q?6OTofK/mppmCOI9wkw3+NaovmsqhDuQiKQUOQWeb9vqm1LH5/k32Xq9Kjvsona?=
 =?us-ascii?q?ndqpzaIt4bpqGhDw9Pzokj8wq/Dyuh0NkAmXkHLVFFdwydg4nmJlHDO/T4Dfa5?=
 =?us-ascii?q?g1SxnzZn3fHGPrv9AprTKnjPiqvufbF460RE0go80chf545ICrEGOP/zWlX+tN?=
 =?us-ascii?q?3EDhAjNAy42ebnCMhn2YMYVmKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mVUFZ6mmwYMXaGykHvRhO0iZY33sjckbHWcJuQo+SurqiFqZXD5XZnayWb?=
 =?us-ascii?q?885z4hBIKnC4fDWp6igLib0CinGZ1WY3hMCkqQHnfwa4WER/AMZTqILc96kjwE?=
 =?us-ascii?q?UruhR5U71R60tg/30L5nLuvS+i0FupPvztl15+vPlR4s8Tx4FdiS02aIT2tshG?=
 =?us-ascii?q?MHWyc23LxjoUx60lqD0rJ3g/pCGdxX5vNGSAE6NZHHwux+CtDyXB/Bf9iTRFan?=
 =?us-ascii?q?RNWmHS8+TtYrz9ASZEZ9Hs2ojgrf0CqyH78Vi7uLCYQp/a3GwXj+Odxxy3bc26?=
 =?us-ascii?q?knlFkpXM1POWqihq588gjTA5XEk0GYl6asaKQd0zTB9GaFzWqSok5YVBR8XrnC?=
 =?us-ascii?q?XXAafkHWt8j25lveT7+yDrQqKhZOxtScKqRUcNHpjU9JRPH4ONvAZWK8gGOwBR?=
 =?us-ascii?q?eOxrORY4vmYWQd3CPBCEcalwAf52qJNQ87Bi25uWLRECRuFU7zY0Pr6eR+tHK7?=
 =?us-ascii?q?TkozzwGWb01g16C5+gIPifybUfMT2rMEuCEuqzhvGFa93tTWC8ePpgZ7faVcZ8?=
 =?us-ascii?q?8970lD1W7DqwN9OZmgJbh4hlECawR3o1/u1xJvB4palcglsnwrwxRyKK6Cy1xB?=
 =?us-ascii?q?ai6X0or2Or3ULWny4guia6rX2lHYzdaX9b0D6PU+q1X/og6pElAu/Glg09lQy3?=
 =?us-ascii?q?Gc/InFDBIOUZLtVUY67xh7p6zAbiYh/Y/V1H1sPrOysj/NwN8pAOolyhC9f9ZQ?=
 =?us-ascii?q?Kq+EFQnyE9EECMiqMuAlh1+pbhccNuBI6KE0J9+md+eB2KOzJuZgnS6pgn5d4I?=
 =?us-ascii?q?9g1UKA7Sx8RfDS35YE2v2XwhGIVzPhg1i/qMD3noZEaCoWHmq+zyjkGYFQardz?=
 =?us-ascii?q?fYYNFWehPcm3ys9iiJ7qXn5S7ESjCE8e2M+1ZRqSaETw3A1R1UgNoX2rgzC4zy?=
 =?us-ascii?q?Fykzwyqqqf3SrOw/ntdRYdO25LQnVigknoIYSuk98aW02oZRAzlBS5/Ub627Rb?=
 =?us-ascii?q?pKNnImnRW0hIZSv2L2JlUqeqrbqNec1P6JApsSVRTuu8Z0uXSrr8oxscziPiEH?=
 =?us-ascii?q?FSxDE9dzG2pJr5mwZ2h36aLHZ2tHDZY91/xQ/D5NzAQv5cxjoHSzN/iTXNBFi8?=
 =?us-ascii?q?Pt+p8M6Ql5fCtOC+Sm2gWodScSnt0YOPqi+76Xd2Dh24mvC5gsfnHhQi0S/ny9?=
 =?us-ascii?q?lqUj3FrBXmbYnqzai6Mf9ncVNuBF/z8Md6HoB+ko0thJAfw3Qah5OV/WYZnmf3?=
 =?us-ascii?q?K9lUxaX+bH8VTz4R39HV+BTl2FFkLn+RwoL5V3adzdF7a9i0fGwWwT494N5QCK?=
 =?us-ascii?q?iP8rNEhyR1r0G8rQLQZ/h9gzgcxeEv6H4cn+EGpg4twj+BDbAVGElSJTbsmAiQ?=
 =?us-ascii?q?79CisKVXY36icaS31Ep7h9ygDauNogdBWHbiYZciHDR97sF+MFLKzX3y5ZvoeN?=
 =?us-ascii?q?jWbdIPqBKUlw3MgPRSKJI0jvAKnzZoOXrhvX05zO42lQdh0ou9vIiDNmVh5qa5?=
 =?us-ascii?q?AgNDOz3xZsMT/CztjKlEksaX2YCvAotuGjERUJT0SvKoFSoYte77OAaWDD08tn?=
 =?us-ascii?q?CbFKLdHQCF7UdpsWnPH4q3N32NJ3kZ0NZiRASbJENFmwAZRzE6np8/FgC3y83t?=
 =?us-ascii?q?akZ55jYN5lHmrhtA0P5nNx76Um3Hvgendi80SISDLBpR9gxD50DVMdGH7uJuBS?=
 =?us-ascii?q?5Y+IetrBeKKmydaARFFmUJWk2CB1D+Mbii/9jA8+6EBuWgK/vCe6mBqetbV/2Q?=
 =?us-ascii?q?35KgzpNm/yqQNsWIJnRiD+M02ktAXXB6GsTVgTYPSzYQlyLCccGbvgq8+jZso8?=
 =?us-ascii?q?C78fTrXh/v5ISVB7tTN9Vv5w65gaOZO+GMgyZ5LC5S1okQyn/Q1LgfwFkShjl0?=
 =?us-ascii?q?eDmwCrsArzDCTaLKlq9TDh4WcCdzNMpO76Ih0QhBI8/bitXp1rFmiv45EUtKVV?=
 =?us-ascii?q?vkmsuxf8wFP3m9NE/bBEaMLLmGOTzLw8TtbaygU7FfkOVUuAO2uTuAF0/jPzKD?=
 =?us-ascii?q?lyTmVhy1MOFMij2bMwJauI2nbhltDm3jRsr8ahKnKN93kSE2wbosi3LKL2EcNz?=
 =?us-ascii?q?18c0JLrrKI7CJYgu9wG2pO7nd+KemEmiCZ7/TXK5oMsPtrBDh0mPxe4Hgg17RV?=
 =?us-ascii?q?6yREF7RJn37bqNJ/5V68lfKU4j5mVhNUrXBMno3P9V9lM6Xx9ZRaX3vAuhUX4i?=
 =?us-ascii?q?HYFRUQqsBlTN7yvqlK4tzOkqvpL3FF6d2QtdAWANnYAMGKKnwsNVzuAjGQRBYB?=
 =?us-ascii?q?Q3irPGfEnEtbuPWT8HSPqd49sJeo0JEJTrtaUkc5PvgdBklsAcYFOp4xWSkr1f?=
 =?us-ascii?q?aej8cg7nqkqxzQWcAcuYrIBdyIBvC6Ej+bgL9IfRJA57rpJIdbYpf90l1raXFx?=
 =?us-ascii?q?m4jHElfKWspE5Cp7YVln8w127HFiQzhriAreYQS37SpLGA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AmAADI0xBch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwEBgX+BayeMFF+LM4IhkkOEfIFxFhgTAYc6IjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDEIBDgGBZCKCZQMDAQIvAQ0BATcBBQkBAVADKSsHCggFgxyCAQEFp?=
 =?us-ascii?q?FeCH4J2AQEFhysIh32DI4EcF4FAP4kIhXePRX2QAUYJikiHAiOBXIgNNoclLIh?=
 =?us-ascii?q?6kBOBRoIOMxoIKAiDJ4IbiQGFRzgygQUBAYEVjBIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AmAADI0xBch0O0hNFjHQEBBQEHBQGBUQgBCwEBgX+Baye?=
 =?us-ascii?q?MFF+LM4IhkkOEfIFxFhgTAYc6IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDEIBD?=
 =?us-ascii?q?gGBZCKCZQMDAQIvAQ0BATcBBQkBAVADKSsHCggFgxyCAQEFpFeCH4J2AQEFhys?=
 =?us-ascii?q?Ih32DI4EcF4FAP4kIhXePRX2QAUYJikiHAiOBXIgNNoclLIh6kBOBRoIOMxoIK?=
 =?us-ascii?q?AiDJ4IbiQGFRzgygQUBAYEVjBIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="57131331"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 01:26:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727020AbeLLJ0O (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 04:26:14 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:57842 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726242AbeLLJ0L (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 04:26:11 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id A71206071B; Wed, 12 Dec 2018 09:26:03 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544606770;
        bh=9YvJ2fsT3jjZ3tYnIgIwk7jIYi0ckWOAZ/uA5o2v6VQ=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=j4PmsN5GOcxCykZf4NYGoOFltbQk4KMWopUsjlhGfRSgW+xiAH8OaJnk3Us28d6+e
         Tjs18ynRMPI6f0cy1gOrgIi7qOWSdXMffRGa9p19AHgWMxfYrlmLFbUDOp2Aqv5Vb1
         5NJci6nJQ7YLXcb9y4Z+vQx5jUaIzSM+FxSEnOQI=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from blr-ubuntu-173.qualcomm.com (blr-bdr-fw-01_globalnat_allzones-outside.qualcomm.com [103.229.18.19])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: rnayak@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 470F0608EA;
        Wed, 12 Dec 2018 09:25:59 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544606762;
        bh=9YvJ2fsT3jjZ3tYnIgIwk7jIYi0ckWOAZ/uA5o2v6VQ=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=EqlQ0qhT6oOAqV+k8cSo6yslOV9NqaedBPmryyJL1SNbyn1462BhEJ+ZRe7y2JjAh
         IUPO7X5TLEOBvEKwdU1ye7TAxQa5L+NqM9U5dNXSfjNMlP9e5nE2L+wn528Ke/7Bg7
         AVQtZaSIF8w+mF5w98725aXmd4Db1bFVpkp3V8Mw=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 470F0608EA
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=rnayak@codeaurora.org
From: Rajendra Nayak <rnayak@codeaurora.org>
To: andy.gross@linaro.org, robh@kernel.org, viresh.kumar@linaro.org,
        sboyd@kernel.org, ulf.hansson@linaro.org, collinsd@codeaurora.org,
        mka@chromium.org
Cc: devicetree@vger.kernel.org, linux-arm-msm@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Rajendra Nayak <rnayak@codeaurora.org>
Subject: [PATCH v7 08/10] PM / Domains: Add a simple_opp_to_performance_state() helper
Date: Wed, 12 Dec 2018 14:51:29 +0530
Message-Id: <20181212092131.13046-9-rnayak@codeaurora.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181212092131.13046-1-rnayak@codeaurora.org>
References: <20181212092131.13046-1-rnayak@codeaurora.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Now that we have atleast 2 genpd providers, both using a simple
routine to read a performance state value from device tree and
return it, in order to implement the .opp_to_performance_state
callback, add a simple_opp_to_performance_state() helper to do
it, so it can be resued across all such genpd providers which
just need to read the value from DT.

Suggested-by: Stephen Boyd <sboyd@kernel.org>
Signed-off-by: Rajendra Nayak <rnayak@codeaurora.org>
Reviewed-by: Stephen Boyd <swboyd@chromium.org>
---
 drivers/base/power/domain.c | 17 +++++++++++++++++
 include/linux/pm_domain.h   |  9 +++++++++
 2 files changed, 26 insertions(+)

diff --git a/drivers/base/power/domain.c b/drivers/base/power/domain.c
index 8e554e6a82a2..193872afbe20 100644
--- a/drivers/base/power/domain.c
+++ b/drivers/base/power/domain.c
@@ -2520,6 +2520,23 @@ int of_genpd_parse_idle_states(struct device_node *dn,
 }
 EXPORT_SYMBOL_GPL(of_genpd_parse_idle_states);
 
+unsigned int simple_opp_to_performance_state(struct generic_pm_domain *genpd,
+					     struct dev_pm_opp *opp,
+					     const char *name)
+{
+	struct device_node *np;
+	unsigned int perf_state = 0;
+
+	np = dev_pm_opp_get_of_node(opp);
+	if (of_property_read_u32(np, name, &perf_state))
+		pr_err("%s: missing %s property\n", __func__, name);
+
+	of_node_put(np);
+
+	return perf_state;
+}
+EXPORT_SYMBOL_GPL(simple_opp_to_performance_state);
+
 /**
  * pm_genpd_opp_to_performance_state - Gets performance state of the genpd from its OPP node.
  *
diff --git a/include/linux/pm_domain.h b/include/linux/pm_domain.h
index 642036952553..7e5777b081ee 100644
--- a/include/linux/pm_domain.h
+++ b/include/linux/pm_domain.h
@@ -260,6 +260,9 @@ int of_genpd_parse_idle_states(struct device_node *dn,
 			       struct genpd_power_state **states, int *n);
 unsigned int pm_genpd_opp_to_performance_state(struct device *genpd_dev,
 					       struct dev_pm_opp *opp);
+unsigned int simple_opp_to_performance_state(struct  generic_pm_domain *genpd,
+					     struct dev_pm_opp *opp,
+					     const char *name);
 
 int genpd_dev_pm_attach(struct device *dev);
 struct device *genpd_dev_pm_attach_by_id(struct device *dev,
@@ -306,6 +309,12 @@ pm_genpd_opp_to_performance_state(struct device *genpd_dev,
 	return 0;
 }
 
+unsigned int simple_opp_to_performance_state(struct generic_pm_domain *genpd,
+					     struct dev_pm_opp *opp,
+					     const char *name)
+{
+	return 0;
+}
 static inline int genpd_dev_pm_attach(struct device *dev)
 {
 	return 0;
-- 
QUALCOMM INDIA, on behalf of Qualcomm Innovation Center, Inc. is a member
of Code Aurora Forum, hosted by The Linux Foundation

