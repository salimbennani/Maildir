Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:52:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4BEF6580213;
	Thu, 29 Nov 2018 15:19:01 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 15:19:01 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ABnEzfBfXOPaYHgMAAq0vFLBvlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YxeN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRCDI2y?=
 =?us-ascii?q?b4UPCOQOM/hFoYb/qVsOtgO+CAu3CePzyDFHnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KqcSXvqzzKjGyjXDaO5d1Cn96IjPcxAqvPaBUq5+cMbN1UUjDR/KjlWX?=
 =?us-ascii?q?qYzkJD6Vzf4Cs22A7+p9U+KvhHQrpB12ojiq38ohjJTCiIENyl3c6yl13II4Kc?=
 =?us-ascii?q?elREN1f9KoCoZcuiKGO4dsQ84vQXlktDgmxrAIo5K3YigHxZs9yxLBdfCKcZKE?=
 =?us-ascii?q?7g/iWeuXPDx2nmhqeKiliBa36UWgyvPzVs2z0FtSsCpFncfDtmoX2xzQ9MeHUP?=
 =?us-ascii?q?198Vml2TqV0ADT8O5ELVg1lardNZEh3qY9moQPvUnHBCP6hUv7gLGMekk5+eWk?=
 =?us-ascii?q?9/7rb7Tkq5OEMo97kAD+MqAgmsylBuQ4NxADX2ya+eS6yb3i8lT1QLZUgf0slK?=
 =?us-ascii?q?nWrpTaKd0cpq+3BQ9azJwj5g2hDzepztsYh2MLLFFbdxKdiYjmJVXOLOr/Dfel?=
 =?us-ascii?q?jFSgiC1ryOzePr39HpXNKWDOkLPgfbZ+9UFQ0gUyzc1E6pJQC7EBJu/zW0DruN?=
 =?us-ascii?q?zZCB85LxK7w+L9BNph0YMeXHqFArWFP6PKrV+I+uUvLvGMZIAPuTb9N+Iq5/n0?=
 =?us-ascii?q?gX85hF8SZ6+p3ZQMZXC8H/RmJViZYHX2jtcAF2cKohQxTOjwhFKeVj5TYm64X7?=
 =?us-ascii?q?gg6TEjFIKmEYDDS5ivgLyGwii3BJ5WZmdAClCKFnflbIGEW/YKaCKPLc5tiD0E?=
 =?us-ascii?q?Vb69S4A/0RGirhP1y71iLuDM4C0XqYrj1MRp5+3UjRw97yd0D8Sa02GOVW10hH?=
 =?us-ascii?q?kHRz0t0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCkyTt0rxd8CeUJ9G9S4gRDF0CqnGLsVl72NBJwp/aPQxXnxJ8Bhy3nY0K?=
 =?us-ascii?q?ktlUUpQsxKNWe+nK5w6xDTB5LVk0Wej6ulaL4T3DDT+2uZzWqBpkdYUBVuXqXD?=
 =?us-ascii?q?WnwfYkjWrdH95k7ZS7+uCLInMhZOyMKYK6tKbMHpgktCRPv5JNveZGexkX+qBR?=
 =?us-ascii?q?mU3rOMcJbqe2IF0SrAEkcEjR4c8WyGNQckACehuHzRDDp1GFLrYkPs9/R+qXyh?=
 =?us-ascii?q?Qk81yQGKc1Nu176v9hEJgvycTusZ3qgYtyc5tzV0AFG90srKC9qBogphe7lcYd?=
 =?us-ascii?q?M94VtdyWLVrQt9PoakL6BjgF4efB96v0fv1xVxF4VBntImrHIszApuN62Y1ElN?=
 =?us-ascii?q?eC+f3ZD1IrfXMHX9/Aiza67K3VHTyMyZ+qMR5/U3tVrivBulGVE/83p6ydZV1X?=
 =?us-ascii?q?ic5pLUDAcJVZLxU0A39wV1pr3AYyk94Z/U2mNoMaWurjDC3NcpDvM/yhm8Z9df?=
 =?us-ascii?q?LL+EFAjqHswaGsiiMvAll0KobxIEJu9S8qE0Mtiid/uH3q6rIelhkCinjWRB/I?=
 =?us-ascii?q?ByzEaM+zBgRe7P2pYP2+uY0RefVzfgkFehtdj6mZpFZT4OBGW/0zXrBIlLaq10?=
 =?us-ascii?q?Y4kLE2auL9Srydpkg57iRmBX9ESkB1MAw8KpfRuSb1rg3Qxfz0gXoHqnmTemwD?=
 =?us-ascii?q?xwiT0msq2f3CnWyeT4aBUHInJLRHVljVr0IYm0jsoWXUiyYwgyiRul4133x6xa?=
 =?us-ascii?q?pKR5MmnSTl1EfynwL2F+TKSwsqCObNJI6JMtqS9XSvizYUiGSr7hpBsXyyHjEH?=
 =?us-ascii?q?FExDA4dDGqvY/1nwdgh2KeL3ZzrXzZdt92xRrE4NzcRPhR3icJRSViiDnXAES8?=
 =?us-ascii?q?MMet/dmOi5jDteW+XXq7VpJPaSnr0Z+AtCyj6GxqGxK/mOq/mt/mEQg8yiL709?=
 =?us-ascii?q?hqVSPVrBfzeIXr1qK6Mf55cUlsHlPz9816GoRmmIsqmJ4QwWQahomS/Xcfkmf8?=
 =?us-ascii?q?K9Rb1bj+bHoQXzELxdHV7RPh2E1iKHKJ2o34Wm+cwstne9m1fGcW1jgh4MBNDa?=
 =?us-ascii?q?ee9KZEkjdtolqksQLRZuBwnjIcyfst8nEWme8ItxQ2ziWBHL8SB1JXMjL2lxSH?=
 =?us-ascii?q?9N2+qKRXZGCycbm/zkZ+nNahDK2crQFYQnr2ZpAiHSpo5MVlLF3MyGHz6p3jeN?=
 =?us-ascii?q?TIcdITsRiUnw3BjudPLpIxi+EKhTFmOW/muX0lyug7jQFh3J2gvYiHLXlt87y9?=
 =?us-ascii?q?AhJCKjL1YMYT8Cn3jalChsaWw5yvHpJ5FzoQRpToSvaoEC8IufTjKgaDCzk8qn?=
 =?us-ascii?q?adGbrCEg6T8kZmr3TTE5+1M3GbPmUWzdJnRBOFPkxQnBgUXCkmnp4+Dg2qxtbu?=
 =?us-ascii?q?cEJn6TAK/FL4tgFAyuF1Nxn8T2ffoh2naiwvRZibLRpW6BxC5kjPPcyf6OJzAz?=
 =?us-ascii?q?9X/pm7oAORLWybYhxCDXsVVUycG1DjIr6u6MHA8uifG+q+NubObq+IqeBETPeI?=
 =?us-ascii?q?wpSv0oR98jaIN8WPOGRiDvIh1kpCW3B5B9rWmzEVRyMLkCLNataRpA2g9S1vss?=
 =?us-ascii?q?C/7PPrVRrv5YSRCrtSMtZv+xGsjaeALe6Qgyl5JihC1pMR3n/F07wf3F8UiyFz?=
 =?us-ascii?q?eDihC7UAtSjRTK3Onq9bFQIUayR2NMFQ9aIzwhFNOdLHitPyzrN3lOM1BExfVV?=
 =?us-ascii?q?P/msClf8gKI2CmOVPDBUaLMqmGJDLRz8H2Z6O8VaNfjOFOuxKsvjabFlfpPi6f?=
 =?us-ascii?q?mDnxSxCvLeZMgTmHPBxfvYGxaApiBXL/Q9LmdBK7NsR6jTk3wb0ym3PLOnQQMT?=
 =?us-ascii?q?l6c0NRsLKQ6TlUjel4G2xE9nBlN/WLmz6F7+nELZYbqftqDT5yl+Jf4XQ6zaNa?=
 =?us-ascii?q?7SBERPNvnivSocVjo1WnkumJ1zpmXwBCqjdNhIKXo0piPb/V+YVHWXbBr1ox6j?=
 =?us-ascii?q?CzAhELo5NGDdvutqtCzMmHwKG1KzBE8t/f780NL9DdMt6BPWBnKhPsAyPSA00O?=
 =?us-ascii?q?Sjv9Zk/FgEkIu/Gb8GKSqdARqp/t0M4FVecDElc1EfIyEU1gB8EEL9F8WTZywu?=
 =?us-ascii?q?3Tt9IB+Xfr9EqZf85dpJ2SE6vKWfg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAAQcwBch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng3mIGIwJgg0UEJcggWwzEwGHdCI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAQCQEDAQEvBwEBBAEJAQEKDgoCAgUWC?=
 =?us-ascii?q?wICAwYDAgECATUQBg0GAgEBAYMcgXoHAQWoNXCBIQ6CdgEBBYJEhGYIgQuJSSa?=
 =?us-ascii?q?BHIIWgRGBdCB+iAWCV4deiEGFLYpZBwEBiiuHH4lohzSaFIINMxojgzyCGwwXg?=
 =?us-ascii?q?0qKYmMBgQQBAY0/AQE?=
X-IPAS-Result: =?us-ascii?q?A0AOAAAQcwBch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng3mIGIwJgg0UEJcggWwzEwGHdCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmEBAQEBAgEBAiAQCQEDAQEvBwEBBAEJAQEKDgoCAgUWCwICAwYDAgECATU?=
 =?us-ascii?q?QBg0GAgEBAYMcgXoHAQWoNXCBIQ6CdgEBBYJEhGYIgQuJSSaBHIIWgRGBdCB+i?=
 =?us-ascii?q?AWCV4deiEGFLYpZBwEBiiuHH4lohzSaFIINMxojgzyCGwwXg0qKYmMBgQQBAY0?=
 =?us-ascii?q?/AQE?=
X-IronPort-AV: E=Sophos;i="5.56,296,1539673200"; 
   d="scan'208";a="64666869"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 29 Nov 2018 15:18:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726654AbeK3K0G (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 05:26:06 -0500
Received: from mailout2.samsung.com ([203.254.224.25]:21730 "EHLO
        mailout2.samsung.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726406AbeK3K0F (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 05:26:05 -0500
Received: from epcas1p4.samsung.com (unknown [182.195.41.48])
        by mailout2.samsung.com (KnoxPortal) with ESMTP id 20181129231852epoutp02920cdb700b696af239fda7ec70a55fd0~ru5Hq2Aj62652526525epoutp02X;
        Thu, 29 Nov 2018 23:18:52 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout2.samsung.com 20181129231852epoutp02920cdb700b696af239fda7ec70a55fd0~ru5Hq2Aj62652526525epoutp02X
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
        s=mail20170921; t=1543533532;
        bh=foKVUaKUXk+3wW1QlW2OEC5JMRcibeAmw6jrOQYuKMs=;
        h=Date:From:To:Cc:Subject:In-reply-to:References:From;
        b=QrC9fQs/BdYgXjF68v0SW/w6+uPYMvv1wkS1s7vIsJnt6vAU/4OC4TmVu6GKnsUO7
         RUbLdqnaPHLGlybrsEqKbB5g7cZKC4wiE5QHVkN1K90H9DhQyUYBmad+Vava1pKjsN
         gct6yTiBGlhRjjC2X/a5dhanuVyQaZAcfqhEqfj8=
Received: from epsmges1p4.samsung.com (unknown [182.195.40.153]) by
        epcas1p3.samsung.com (KnoxPortal) with ESMTP id
        20181129231850epcas1p35106e1d63178cf131fdb039fc9424104~ru5FRkF0v2979529795epcas1p39;
        Thu, 29 Nov 2018 23:18:50 +0000 (GMT)
Received: from epcas1p3.samsung.com ( [182.195.41.47]) by
        epsmges1p4.samsung.com (Symantec Messaging Gateway) with SMTP id
        6A.A5.04146.AD3700C5; Fri, 30 Nov 2018 08:18:50 +0900 (KST)
Received: from epsmgms2p1new.samsung.com (unknown [182.195.42.142]) by
        epcas1p4.samsung.com (KnoxPortal) with ESMTP id
        20181129231849epcas1p4e7382e1d3c4c41d2cc4c93f349f17ee8~ru5FFmXfa0908209082epcas1p4c;
        Thu, 29 Nov 2018 23:18:49 +0000 (GMT)
X-AuditID: b6c32a38-5e7389c000001032-a0-5c0073daa738
Received: from epmmp1.local.host ( [203.254.227.16]) by
        epsmgms2p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
        1A.A7.03601.9D3700C5; Fri, 30 Nov 2018 08:18:49 +0900 (KST)
MIME-version: 1.0
Content-transfer-encoding: 8BIT
Content-type: text/plain; charset="utf-8"
Received: from [10.113.63.77] by mmp1.samsung.com (Oracle Communications
        Messaging Server 7.0.5.31.0 64bit (built May  5 2014)) with ESMTPA id
        <0PIZ00IKXA3DAQ90@mmp1.samsung.com>; Fri, 30 Nov 2018 08:18:49 +0900 (KST)
Message-id: <5C0073D9.8050900@samsung.com>
Date: Fri, 30 Nov 2018 08:18:49 +0900
From: Chanwoo Choi <cw00.choi@samsung.com>
Organization: Samsung Electronics
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101
        Thunderbird/31.6.0
To: Kamil Konieczny <k.konieczny@partner.samsung.com>
Cc: Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Kukjin Kim <kgene@kernel.org>,
        Krzysztof Kozlowski <krzk@kernel.org>,
        devicetree@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        linux-samsung-soc@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2 5/5] clk: samsung: exynos5433: add imem clock
In-reply-to: <20181129155134.19141-6-k.konieczny@partner.samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA02Sa0hTYRzGe3d2timt3ualt2W2TkRoqTvO2TGcCVksjBD6Us3Qw/aisms7
        m12+ZHSxhuUlKTM1raTbCjEzNTWaptIHR0oXLC0yYxhYkdoFobYdI789PPyeP//n/74SQjZH
        yiUFFge2W1gTJQoVtvbEJMSNcIuylf0XSeZK7yDJnOv+A5jS8c8E4/U2iZnm8ZckM9xRI2Kq
        vN0CpvHVcwFzsqtXnB6idde5gbb59hmR9v71o9onU50C7ffm6CxynzE1H7MGbFdgi95qKLDk
        aajM3Tlbc9TJSjqOTmE2UQoLa8YaKmNnVtz2ApN/H0pRyJqcfiuL5TgqIS3VbnU6sCLfyjk0
        FLYZTLYUWzzHmjmnJS9ebzVvppXKRLUfzDXmP2m7RNjcxkMnWm6AIlCrc4EQCYJJyDv1XhTQ
        MtgG0IUpuwuE+vUPgOoH6gX/oOtNrSQPPQKo5MHKgJbCZejn+TGhC0gkBFyNeoeMAZuAMcg3
        XSHk54wC9HuuXhxgpDAW9RXrA4wQrkNz05eDI0V++7HvdXCHpXANevFzHAR0BNyD2q/MigM6
        HKrRhztFZGAmAasEyN03EwyEwQz05s1IUIfAbeiXpysIIfhOhDwzw8HlkB+q6FfwXcLQZH+L
        mLdXoqGnGh4vBmjad3w+WwbQ12f358ur0KcGl4BvtgRNzZSQfFiKTp+S8YgW3ax0k3zhYYB6
        Bh6LysCq6gU3qv5/o+oFN6oHxG0QiW2cOQ9ztC1p4ds1g+DPi2XaQOfgTg+AEkAtlqb//qOT
        kWwhd9jsAUhCUOHSLYpF2TKpgT18BNutOXanCXMeoPbfuJyQR+it/n9sceTQ6kSVSsUk0clq
        mqaWSz/Ka3UymMc6sBFjG7b/ywkkIfIiEKGRLc3ojGz7psw9eDUqbkRXvbE3cywmu/FAe+zT
        9r1NhnSj69bQvb79A2mTu+4Ofv8Rnzxb2DIx7CxVN4iO6XLboTlhw9qH5evHo/bqdzSWRqbj
        zAzDtedfBjWz0ZV3VDN1HadbzvrC53R4RYOr522rzDdRs+NkSc8Lr3jUJ5dSQi6fpWMJO8f+
        BdmvPaePAwAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFnrMLMWRmVeSWpSXmKPExsVy+t9jAd2bxQwxBvu3G1nMP3KO1aJv339G
        i/7Hr5ktzp/fwG6x6fE1VovLu+awWcw4v4/JYun1i0wWrXuPsDtweqyZt4bRY9OqTjaPzUvq
        PQ6+28Pk8XmTXABrFJdNSmpOZllqkb5dAlfGwR0zmQvWZFe0bFnO2MA4N7qLkZNDQsBEYsmG
        bawgtpDATkaJTcs1QGxeAUGJH5PvsXQxcnAwC8hLHLmUDWGqS0yZktvFyAVUfZ9RYtecqcwg
        cV4BLYlj7ckgnSwCqhJ/vswGm8gGFN7/4gYbiM0voChx9cdjRpByUYEIie4TlSBhEQFTiUer
        G1hBRjILzGCSaD2/jBkkISzgInH79i02iMsuM0rcPWgGYnMKuEr8PLSXdQKjwCwkh85COHQW
        wqELGJlXMUqmFhTnpucWGxUY5qWW6xUn5haX5qXrJefnbmIEBv22w1p9OxjvL4k/xCjAwajE
        w/vi+/9oIdbEsuLK3EOMEhzMSiK89goMMUK8KYmVValF+fFFpTmpxYcYpTlYlMR5b+cdixQS
        SE8sSc1OTS1ILYLJMnFwSjUwWhfMO9bEfbtzrle2hJoJY265w/xpqu02a6TNlOUMXz6MCHZe
        3ayZNvfVMxZFlc1n1qw6f+qJnEemVah4JefRky9Yl8tcslI7JXkr919g6Zp916IloyemzPiy
        Yf4TjdOFO878Kbmvv/v+lQBO76mXdkgfCJnUd/7/A5v+utCTdlanV6/9+I5xshJLcUaioRZz
        UXEiAJTD5KR2AgAA
X-CMS-MailID: 20181129231849epcas1p4e7382e1d3c4c41d2cc4c93f349f17ee8
X-Msg-Generator: CA
CMS-TYPE: 101P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20181129155147eucas1p14b902fc9c4e9abda03dcf506486d4152
References: <20181129155134.19141-1-k.konieczny@partner.samsung.com>
        <CGME20181129155147eucas1p14b902fc9c4e9abda03dcf506486d4152@eucas1p1.samsung.com>
        <20181129155134.19141-6-k.konieczny@partner.samsung.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Kamil,

On 2018년 11월 30일 00:51, Kamil Konieczny wrote:
> Add imem clock for exynos5433. This will enable to use crypto Security

s/clock/clocks

> SubSystem (in short SSS) and SlimSSS IP blocks.
> 
> Signed-off-by: Kamil Konieczny <k.konieczny@partner.samsung.com>
> ---
>  drivers/clk/samsung/clk-exynos5433.c   | 189 +++++++++++++++++++++++++
>  include/dt-bindings/clock/exynos5433.h |  55 +++++++
>  2 files changed, 244 insertions(+)
> 
> diff --git a/drivers/clk/samsung/clk-exynos5433.c b/drivers/clk/samsung/clk-exynos5433.c
> index 24c3360db65b..ab03126f350b 100644
> --- a/drivers/clk/samsung/clk-exynos5433.c
> +++ b/drivers/clk/samsung/clk-exynos5433.c
> @@ -2345,6 +2345,192 @@ static const struct samsung_cmu_info fsys_cmu_info __initconst = {
>  	.clk_name		= "aclk_fsys_200",
>  };
>  
> +/*
> + * Register offset definitions for CMU_IMEM
> + *

Remove unneeded blank line.

> + */
> +#define ENABLE_ACLK_IMEM			0x0800
> +#define ENABLE_ACLK_IMEM_INT_MEM		0x0804
> +#define ENABLE_ACLK_IMEM_SSS			0x0808
> +#define ENABLE_ACLK_IMEM_SLIMSSS		0x080c
> +#define ENABLE_ACLK_IMEM_RTIC			0x0810
> +#define ENABLE_ACLK_IMEM_SMMU_SSS		0x0814
> +#define ENABLE_ACLK_IMEM_SMMU_SLIMSSS		0x0818
> +#define ENABLE_ACLK_IMEM_SMMU_RTIC		0x081c
> +#define ENABLE_ACLK_IMEM_ARBG_TX		0x0820
> +#define ENABLE_ACLK_IMEM_SMMU_ARBG_TX		0x0824
> +#define ENABLE_PCLK_IMEM			0x0900
> +#define ENABLE_PCLK_IMEM_SSS			0x0904
> +#define ENABLE_PCLK_IMEM_SLIMSSS		0x0908
> +#define ENABLE_PCLK_IMEM_RTIC			0x090c
> +#define ENABLE_PCLK_IMEM_SMMU_SSS		0x0910
> +#define ENABLE_PCLK_IMEM_SMMU_SLIMSSS		0x0914
> +#define ENABLE_PCLK_IMEM_SMMU_RTIC		0x0918
> +#define ENABLE_PCLK_IMEM_SMMU_ARGB_TX		0x091c
> +
> +static const unsigned long imem_clk_regs[] __initconst = {
> +	ENABLE_ACLK_IMEM,
> +	ENABLE_ACLK_IMEM_INT_MEM,
> +	ENABLE_ACLK_IMEM_SSS,
> +	ENABLE_ACLK_IMEM_SLIMSSS,
> +	ENABLE_ACLK_IMEM_RTIC,
> +	ENABLE_ACLK_IMEM_SMMU_SSS,
> +	ENABLE_ACLK_IMEM_SMMU_SLIMSSS,
> +	ENABLE_ACLK_IMEM_SMMU_RTIC,
> +	ENABLE_ACLK_IMEM_ARBG_TX,
> +	ENABLE_ACLK_IMEM_SMMU_ARBG_TX,
> +	ENABLE_PCLK_IMEM,
> +	ENABLE_PCLK_IMEM_SSS,
> +	ENABLE_PCLK_IMEM_SLIMSSS,
> +	ENABLE_PCLK_IMEM_RTIC,
> +	ENABLE_PCLK_IMEM_SMMU_SSS,
> +	ENABLE_PCLK_IMEM_SMMU_SLIMSSS,
> +	ENABLE_PCLK_IMEM_SMMU_RTIC,
> +	ENABLE_PCLK_IMEM_SMMU_ARGB_TX,
> +};
> +
> +static const struct samsung_gate_clock imem_gate_clks[] __initconst = {
> +	/* ENABLE_ACLK_IMEM */
> +	GATE(CLK_ACLK_AXI2AHB_IMEMH, "aclk_axi2ahb_imemh", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 24, 0, 0),
> +	GATE(CLK_ACLK_AXIDS_SROMC, "aclk_axids_sromc", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 23, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_SROMC, "aclk_sromc", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 22, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_BTS_ARBG_TX, "aclk_bts_arbg_tx", "aclk_imem_266",
> +			ENABLE_ACLK_IMEM, 21, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_ASYNCAXI_IMEMX, "aclk_asyncaxi_imemx", "aclk_imem_266",
> +			ENABLE_ACLK_IMEM, 20, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_AXIUS_IMEMX, "aclk_axius_imemx", "aclk_imem_266",
> +			ENABLE_ACLK_IMEM, 19, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_XIU_IMEMX, "aclk_xiu_imemx", "aclk_imem_266",
> +			ENABLE_ACLK_IMEM, 18, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_ASYNCAXI_SSSX, "aclk_asyncaxi_sssx", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM, 17, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_BTS_SLIMSSS, "aclk_bts_slimsss", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM, 15, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_BTS_SSS_DRAM, "aclk_bts_sss_dram", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM, 14, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_BTS_SSS_CCI, "aclk_bts_sss_cci", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM, 13, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_ALB_IMEM, "aclk_alb_imem", "aclk_imem_266",
> +			ENABLE_ACLK_IMEM, 12, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_AXIDS_PIMEMX_IMEM1P, "aclk_axids_pimemx_imem1p", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 11, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_AXIDS_PIMEMX_IMEM0P, "aclk_axids_pimemx_imem0p", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 10, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_AXIDS_PIMEMX_GIC, "aclk_axids_pimemx_gic", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 9, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_ASYNCAHBM_SSS_ATLAS, "aclk_asyncahbm_sss_atlas", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM, 7, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_ASYNCAXIS_MIF_PIMEMX, "aclk_asyncaxis_mif_pimemx", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 6, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_AXI2APB_IMEM1P, "aclk_axi2apb_imem1p", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 5, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_AXI2APB_IMEM0P, "aclk_axi2apb_imem0p", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 4, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_XIU_SSSX, "aclk_xiu_sssx", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM, 3, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_XIU_PIMEMX, "aclk_xiu_pimemx", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 2, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_IMEMND_266, "aclk_imemnd_266", "aclk_imem_266",
> +			ENABLE_ACLK_IMEM, 1, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_GIC, "aclk_gic", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM, 0, CLK_IGNORE_UNUSED, 0),
> +
> +	/* ENABLE_ACLK_IMEM_INT_MEM */
> +	GATE(CLK_ACLK_INT_MEM, "aclk_int_mem", "aclk_imem_200",
> +			ENABLE_ACLK_IMEM_INT_MEM, 0, CLK_IGNORE_UNUSED, 0),

Nitpick. Need to add blank line between different registers in order to keep
the same format on this driver.

> +	/* ENABLE_ACLK_IMEM_SSS */
> +	GATE(CLK_ACLK_SSS, "aclk_sss", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM_SSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_IMEM_SLIMSSS */
> +	GATE(CLK_ACLK_SLIMSSS, "aclk_slimsss", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM_SLIMSSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_IMEM_RTIC */
> +	GATE(CLK_ACLK_RTIC, "aclk_rtic", "aclk_imem_sssx_266",
> +			ENABLE_ACLK_IMEM_RTIC, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_SMMU_SSS */
> +	GATE(CLK_ACLK_SMMU_SSS_DRAM, "aclk_smmu_sss_dram", "aclk_imem_sssx_266",
> +		ENABLE_ACLK_IMEM_SMMU_SSS, 1, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_ACLK_SMMU_SSS_CCI, "aclk_smmu_sss_cci", "aclk_imem_sssx_266",
> +		ENABLE_ACLK_IMEM_SMMU_SSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_SMMU_SLIMSSS */
> +	GATE(CLK_ACLK_SMMU_SLIMSSS, "aclk_smmu_slimsss", "aclk_imem_sssx_266",
> +		ENABLE_ACLK_IMEM_SMMU_SLIMSSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_SMMU_RTIC */
> +	GATE(CLK_ACLK_SMMU_RTIC, "aclk_smmu_rtic", "aclk_imem_sssx_266",
> +		ENABLE_ACLK_IMEM_SMMU_RTIC, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_IMEM_ARBG_TX */
> +	GATE(CLK_ACLK_ARBG_TX, "aclk_arbg_tx", "aclk_imem_266",
> +		ENABLE_ACLK_IMEM_ARBG_TX, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_ACLK_IMEM_SMMU_ARBG_TX */
> +	GATE(CLK_ACLK_SMMU_ARBG_TX, "aclk_smmu_arbg_tx", "aclk_imem_266",
> +		ENABLE_ACLK_IMEM_SMMU_ARBG_TX, 0, CLK_IGNORE_UNUSED, 0),
> +
> +	/* ENABLE_PCLK_IMEM */
> +	GATE(CLK_PCLK_GPIO_IMEM, "pclk_gpio_imem", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 17, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_ASYNCAXI_IMEMX, "pclk_asyncaxi_imemx", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 16, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_BTS_ARBG_TX, "pclk_bts_arbg_tx", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 15, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_ASYNCAPB_ARBG_TX, "pclk_asyncapb_arbg_tx", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 14, CLK_IGNORE_UNUSED, 0),
> +

Remove blank line.

> +	GATE(CLK_PCLK_BTS_SLIMSSS, "pclk_bts_slimsss", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 8, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_BTS_SSS_DRAM, "pclk_bts_sss_dram", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 7, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_BTS_SSS_CCI, "pclk_bts_sss_cci", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 6, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_ALB_IMEM, "pclk_alb_imem", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 5, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_PMU_IMEM, "pclk_pmu_imem", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 4, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_SYSREG_IMEM, "pclk_sysreg_imem", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM, 3, CLK_IGNORE_UNUSED, 0),

Need to add blank line.

> +	/* ENABLE_PCLK_IMEM_SSS */
> +	GATE(CLK_PCLK_SSS, "pclk_sss", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM_SSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_PCLK_IMEM_SLIMSSS */
> +	GATE(CLK_PCLK_SLIMSSS, "pclk_slimsss", "aclk_imem_200",
> +			ENABLE_PCLK_IMEM_SLIMSSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_PCLK_IMEM_RTIC */
> +	GATE(CLK_PCLK_RTIC, "pclk_rtic", "aclk_imem_200",
> +		ENABLE_PCLK_IMEM_RTIC, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_PCLK_IMEM_SMMU_SSS */
> +	GATE(CLK_PCLK_SMMU_SSS_DRAM, "pclk_smmu_sss_dram", "aclk_imem_200",
> +		ENABLE_PCLK_IMEM_SMMU_SSS, 1, CLK_IGNORE_UNUSED, 0),
> +	GATE(CLK_PCLK_SMMU_SSS_CCI, "pclk_smmu_sss_cci", "aclk_imem_200",
> +		ENABLE_PCLK_IMEM_SMMU_SSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_PCLK_IMEM_SMMU_SLIMSSS */
> +	GATE(CLK_PCLK_SMMU_SLIMSSS, "pclk_smmu_slimsss", "aclk_imem_200",
> +		ENABLE_PCLK_IMEM_SMMU_SLIMSSS, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_PCLK_IMEM_SMMU_RTIC */
> +	GATE(CLK_PCLK_SMMU_RTIC, "pclk_sss", "aclk_imem_200",
> +		ENABLE_PCLK_IMEM_SMMU_RTIC, 0, CLK_IGNORE_UNUSED, 0),

ditto.

> +	/* ENABLE_PCLK_IMEM_SMMU_ARGB_TX */
> +	GATE(CLK_PCLK_SMMU_ARBG_TX, "pclk_smmu_arbg_tx", "aclk_imem_200",
> +		ENABLE_PCLK_IMEM_SMMU_ARGB_TX, 0, CLK_IGNORE_UNUSED, 0),
> +};
> +
> +static const struct samsung_cmu_info imem_cmu_info __initconst = {
> +	.gate_clks		= imem_gate_clks,
> +	.nr_gate_clks		= ARRAY_SIZE(imem_gate_clks),
> +	.nr_clk_ids		= IMEM_NR_CLK,
> +	.clk_regs		= imem_clk_regs,
> +	.nr_clk_regs		= ARRAY_SIZE(imem_clk_regs),
> +};
> +
> +static void __init exynos5433_cmu_imem_init(struct device_node *np)
> +{
> +	samsung_cmu_register_one(np, &imem_cmu_info);
> +}
> +
> +CLK_OF_DECLARE(exynos5433_cmu_imem, "samsung,exynos5433-cmu-imem",
> +		exynos5433_cmu_imem_init);
> +

CLK_OF_DECLARE() declaration and adding new entry to exynos5433_cmu_of_match[]
for imem clocks are redundant.

CLK_OF_DECLARE() is not needed because you added the 'samsung,exynos5433-cmu-imem'
entries to exynos5433_cmu_of_match table. 

>  /*
>   * Register offset definitions for CMU_G2D
>   */
> @@ -5648,6 +5834,9 @@ static const struct of_device_id exynos5433_cmu_of_match[] = {
>  	}, {
>  		.compatible = "samsung,exynos5433-cmu-hevc",
>  		.data = &hevc_cmu_info,
> +	}, {
> +		.compatible = "samsung,exynos5433-cmu-imem",
> +		.data = &imem_cmu_info,

You added the codes before cmu_g2d on following codes
- arch/arm64/boot/dts/exynos/exynos5433.dtsi
- include/dt-bindings/clock/exynos5433.h
- drivers/clk/samsung/clk-exynos5433.c

But, in the exynos5433_cmu_of_match, you added the new entry
between 'cmu-hevc' and 'cmu-isp'. There is no consistent reason.
If there is no any special reason to add it on the middle,
you better to add it at the end.


>  	}, {
>  		.compatible = "samsung,exynos5433-cmu-isp",
>  		.data = &isp_cmu_info,
> diff --git a/include/dt-bindings/clock/exynos5433.h b/include/dt-bindings/clock/exynos5433.h
> index 87bb2b017143..312d8810b56d 100644
> --- a/include/dt-bindings/clock/exynos5433.h
> +++ b/include/dt-bindings/clock/exynos5433.h
> @@ -623,6 +623,61 @@
>  
>  #define FSYS_NR_CLK			116
>  
> +/* CMU_IMEM */
> +#define CLK_ACLK_SSS			1
> +#define CLK_ACLK_SLIMSSS		2
> +#define CLK_ACLK_RTIC			3
> +#define CLK_ACLK_XIU_SSSX		4
> +#define CLK_ACLK_ASYNCAHBM_SSS_ATLAS	5
> +#define CLK_ACLK_ASYNCAXI_SSSX		6
> +#define CLK_ACLK_BTS_SSS_CCI		7
> +#define CLK_ACLK_BTS_SSS_DRAM		8
> +#define CLK_ACLK_BTS_SLIMSSS		9
> +#define CLK_ACLK_SMMU_SSS_CCI		10
> +#define CLK_ACLK_SMMU_SSS_DRAM		11
> +#define CLK_ACLK_SMMU_SLIMSSS		12
> +#define CLK_ACLK_SMMU_RTIC		13
> +#define CLK_ACLK_IMEMND_266		14
> +#define CLK_ACLK_ALB_IMEM		15
> +#define CLK_ACLK_XIU_IMEMX		16
> +#define CLK_ACLK_AXIUS_IMEMX		17
> +#define CLK_ACLK_ASYNCAXI_IMEMX		18
> +#define CLK_ACLK_ARBG_TX		19
> +#define CLK_ACLK_BTS_ARBG_TX		20
> +#define CLK_ACLK_SMMU_ARBG_TX		21
> +#define CLK_ACLK_GIC			22
> +#define CLK_ACLK_INT_MEM		23
> +#define CLK_ACLK_XIU_PIMEMX		24
> +#define CLK_ACLK_AXI2APB_IMEM0P		25
> +#define CLK_ACLK_AXI2APB_IMEM1P		26
> +#define CLK_ACLK_ASYNCAXIS_MIF_PIMEMX	27
> +#define CLK_ACLK_AXIDS_PIMEMX_GIC	28
> +#define CLK_ACLK_AXIDS_PIMEMX_IMEM0P	29
> +#define CLK_ACLK_AXIDS_PIMEMX_IMEM1P	30
> +#define CLK_ACLK_SROMC			31
> +#define CLK_ACLK_AXIDS_SROMC		32
> +#define CLK_ACLK_AXI2AHB_IMEMH		33
> +#define CLK_PCLK_SSS			34
> +#define CLK_PCLK_SLIMSSS		35
> +#define CLK_PCLK_RTIC			36
> +#define CLK_PCLK_SYSREG_IMEM		37
> +#define CLK_PCLK_PMU_IMEM		38
> +#define CLK_PCLK_ALB_IMEM		39
> +#define CLK_PCLK_BTS_SSS_CCI		40
> +#define CLK_PCLK_BTS_SSS_DRAM		41
> +#define CLK_PCLK_BTS_SLIMSSS		42
> +#define CLK_PCLK_SMMU_SSS_CCI		43
> +#define CLK_PCLK_SMMU_SSS_DRAM		44
> +#define CLK_PCLK_SMMU_SLIMSSS		45
> +#define CLK_PCLK_SMMU_RTIC		46
> +#define CLK_PCLK_ASYNCAPB_ARBG_TX	47
> +#define CLK_PCLK_BTS_ARBG_TX		48
> +#define CLK_PCLK_SMMU_ARBG_TX		49
> +#define CLK_PCLK_ASYNCAXI_IMEMX		50
> +#define CLK_PCLK_GPIO_IMEM		51
> +
> +#define IMEM_NR_CLK			52
> +
>  /* CMU_G2D */
>  #define CLK_MUX_ACLK_G2D_266_USER	1
>  #define CLK_MUX_ACLK_G2D_400_USER	2
> 


-- 
Best Regards,
Chanwoo Choi
Samsung Electronics
