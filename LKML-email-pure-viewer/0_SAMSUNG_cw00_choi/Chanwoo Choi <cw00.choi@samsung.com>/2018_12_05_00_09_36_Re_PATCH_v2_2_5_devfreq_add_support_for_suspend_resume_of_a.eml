Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:45:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B496658014B;
	Tue,  4 Dec 2018 16:09:49 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 16:09:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AR89aqhzRU13GjNTXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ewUK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWlPUMhRWSxGDIyy?=
 =?us-ascii?q?cZYBAOgPPeZDt4nwpUADrQe8Cwa2GO/j1jFFi33w0KYn0+ohCwbG3Ak4Et8QsH?=
 =?us-ascii?q?TbttP1NakVUeCy0aLF0zXDb/RX2Tzg74XHbh4gre2QUb5qbcXRyU4vFwLeg1WL?=
 =?us-ascii?q?s4PlOiiV1vkLs2iU9eZvSeWvi2s+pgx3vzOhxd8sh5HXio4Jzl3I7zh1zYgrKd?=
 =?us-ascii?q?GiVUJ2YsKoHIFRuiyYL4d6XN8uTm9ytCokyrALtoS3cDYUxJkl3RLTdv2Kfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/XiVsm7zllKtDBJktrSuXAX0Rzc9MyHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz7oqmpYOv0nPADX6lFj1gaOKbEkp++ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/BeU4Mg4TX2mU4Oi816Ps/Vf/QLpUiv06i6?=
 =?us-ascii?q?7ZsZ7cJcsFvK60GBFV0ok95BalFTum08oXnWMBLF1bfBKLlY/pO0vBIPzgF/ew?=
 =?us-ascii?q?n0yskCt3x/DBJrDhBpTNLnvdn7v7crd99lVRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biEN99zJ8RWXqTAq+FN6PfqV+I6fguI+mQfoAVvyzxK/g45/H0?=
 =?us-ascii?q?i385lkQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EICmDYDdSYy3g7yB2yG7HptRZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddv/O3TlRYy9T9uA8SHyW6NTXp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUFWm?=
 =?us-ascii?q?Tc+gAT0rStIxwsUBY0ByG9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCoHUiUqZibileb4c3CHX8meD1nSBvEdfXA50UqXF?=
 =?us-ascii?q?WHQfa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ADyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyl0HFe439LRF9qApwpgcL9AYd?=
 =?us-ascii?q?8n51dHz2bZtw17PpyvNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23caHW3k/R0dmI9aYP8vg3sEjjsxyzGUok8HVn1MdV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?MaOZFAPoD8IWHcmvKOwwlFivYRIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr8llahvdztloBeeD4SGXCzyS76C45LZ61+?=
 =?us-ascii?q?ZJoEBn2qI8Kq2Np+nZntW3hD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZLRWljl1vtIZK4j8sHXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSL7yuQEa0yDgH2?=
 =?us-ascii?q?tZ3jw7bCulupb6nxx7jmKSMnBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzIOauyu8/2FqAxy/n/aol93jEAg61zL71t?=
 =?us-ascii?q?ZwWSXJqhb8fpfk16CgPe17eUloAUf269BmFYFmjoswmJYQ1GAZhpqP/HoLi2fz?=
 =?us-ascii?q?MchB1qL4Y3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4qAPRYftnkTsHx/oh9mUag/0Xtwo31SqSHKoSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WXv6oHjfd?=
 =?us-ascii?q?ncd9MSuQeSkxfdlOhVM5Mxm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b0Ju1EZVmHjULQYHkTfa1ED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTU4hJE5Ex6lxNf7?=
 =?us-ascii?q?fEdl/DwR5UP4qhhRyuJuLRb/SXzSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1DiPr6z5dnZ7uiXHOy+I+HVYbWJr+xeWOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C//+rqWALs5ouPCqFeMdZ1+xCxjqeMKfSQhDtiKTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNMHBl9P6zaR4geA1CltfUV?=
 =?us-ascii?q?zhm9qkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwyvMeBJjC2BIBNSop2ychZzBmjlV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB7+jXMJAWsf5qAiRyj+1b4XQ6xKFT?=
 =?us-ascii?q?7CFLX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaCKvqVHDFLZ/xsW/y?=
 =?us-ascii?q?20Fh4D749hTNnysal40tHViKT+MnFZ+tfP4M0TQcPTLZTDeH4gNwf5XTfOCU4G?=
 =?us-ascii?q?QCStOGX3g01GjOrU93ubtJE2p5Hg3p0URfsTUF0zC+NfEU1gB8EEL9JsWTgMj7?=
 =?us-ascii?q?GWlogL6GC4oR2XQ99V+tjDV/SPEbDsJSyfgL1seRQF2/X7IJ4VO4m93FZtLhF+?=
 =?us-ascii?q?nYLXCw/IWPhTrSB7KAw5ukNA9D55VGJ3k07odAKm7WMJGPOcgBE7kE19bP4r+T?=
 =?us-ascii?q?Oq5E04dXTQoy5lu0k4n8rihni6cDnwZPO7QtkOTSH0sEkZKZr+WBtzYku5mkky?=
 =?us-ascii?q?Z2SMfK5Yk7Y1LTMjswTbo5YaXKcEFaA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAAANFgdch0O0hNFdBx0BAQUBBwUBg?=
 =?us-ascii?q?VEIAQsBg2sng3mIGYwOgg0UEJclgXMsEwGHTCI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiQBgmIBAgMBAiAEDAkBAwEBLwcBAQUJAQEKDgoCAgUWCwICAwYDA?=
 =?us-ascii?q?gECATUQBgEMBgIBAQGDHIIBAQWkLXB8JQ6CdgEBBYJEhGcIgQuJd4EcghaBEYF?=
 =?us-ascii?q?0IH6EWxODF4JXh2KITYU4imMHAQGKNocjgVuFEYJ/hzuCfQqFf4EDkDOCDTMaI?=
 =?us-ascii?q?4M8ghuDbYpiYwGBBAEBiFUBJQOCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0ATAAANFgdch0O0hNFdBx0BAQUBBwUBgVEIAQsBg2sng3m?=
 =?us-ascii?q?IGYwOgg0UEJclgXMsEwGHTCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBg?=
 =?us-ascii?q?mIBAgMBAiAEDAkBAwEBLwcBAQUJAQEKDgoCAgUWCwICAwYDAgECATUQBgEMBgI?=
 =?us-ascii?q?BAQGDHIIBAQWkLXB8JQ6CdgEBBYJEhGcIgQuJd4EcghaBEYF0IH6EWxODF4JXh?=
 =?us-ascii?q?2KITYU4imMHAQGKNocjgVuFEYJ/hzuCfQqFf4EDkDOCDTMaI4M8ghuDbYpiYwG?=
 =?us-ascii?q?BBAEBiFUBJQOCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,316,1539673200"; 
   d="scan'208";a="53850958"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 16:09:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726638AbeLEAJp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 19:09:45 -0500
Received: from mailout3.samsung.com ([203.254.224.33]:19333 "EHLO
        mailout3.samsung.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725904AbeLEAJo (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 19:09:44 -0500
Received: from epcas1p1.samsung.com (unknown [182.195.41.45])
        by mailout3.samsung.com (KnoxPortal) with ESMTP id 20181205000941epoutp03162469c6aa70d2b67fd03a3c23b48f86~tRz6sWV5d2161921619epoutp039;
        Wed,  5 Dec 2018 00:09:41 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout3.samsung.com 20181205000941epoutp03162469c6aa70d2b67fd03a3c23b48f86~tRz6sWV5d2161921619epoutp039
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
        s=mail20170921; t=1543968581;
        bh=S+QT0DZsFYe1xVEY8vxx3e2XiJylriJ1xvs0T7i23kQ=;
        h=Date:From:To:Cc:Subject:In-reply-to:References:From;
        b=pbLQRMPYjhcf8AQw4oC2fVBTn3I5BGZlusoJ/xsQhp9sTWuYt98Kuz07SIf8pBaHz
         nvqByUlIBa2JuW8t3vOiVOJgycYWOwOftVSjmC+BiiuqBVBASlz8cXlAwMvSb8UhdB
         cI1GOS+C/Q7LpatVy2tcLcQG0qEtt/p0JONqpjH0=
Received: from epsmges1p3.samsung.com (unknown [182.195.40.152]) by
        epcas1p3.samsung.com (KnoxPortal) with ESMTP id
        20181205000938epcas1p3882db0e0d5885f6e74abcf818386dfe0~tRz3777Ei1857018570epcas1p3-;
        Wed,  5 Dec 2018 00:09:38 +0000 (GMT)
Received: from epcas1p3.samsung.com ( [182.195.41.47]) by
        epsmges1p3.samsung.com (Symantec Messaging Gateway) with SMTP id
        7C.3A.04060.247170C5; Wed,  5 Dec 2018 09:09:38 +0900 (KST)
Received: from epsmgms2p1new.samsung.com (unknown [182.195.42.142]) by
        epcas1p1.samsung.com (KnoxPortal) with ESMTP id
        20181205000937epcas1p18e44f236dbc6ab59bd589cddda184591~tRz3LEkwy0638406384epcas1p1y;
        Wed,  5 Dec 2018 00:09:37 +0000 (GMT)
X-AuditID: b6c32a37-411ff70000000fdc-68-5c071742d415
Received: from epmmp1.local.host ( [203.254.227.16]) by
        epsmgms2p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
        F8.24.03601.147170C5; Wed,  5 Dec 2018 09:09:37 +0900 (KST)
MIME-version: 1.0
Content-transfer-encoding: 8BIT
Content-type: text/plain; charset="utf-8"
Received: from [10.113.63.77] by mmp1.samsung.com (Oracle Communications
        Messaging Server 7.0.5.31.0 64bit (built May  5 2014)) with ESMTPA id
        <0PJ800MV4LS0DG10@mmp1.samsung.com>; Wed, 05 Dec 2018 09:09:37 +0900 (KST)
Message-id: <5C071740.7090000@samsung.com>
Date: Wed, 05 Dec 2018 09:09:36 +0900
From: Chanwoo Choi <cw00.choi@samsung.com>
Organization: Samsung Electronics
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101
        Thunderbird/31.6.0
To: Lukasz Luba <l.luba@partner.samsung.com>,
        linux-arm-kernel@lists.infradead.org,
        linux-samsung-soc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-pm@vger.kernel.org, devicetree@vger.kernel.org
Cc: tjakobi@math.uni-bielefeld.de, myungjoo.ham@samsung.com,
        kyungmin.park@samsung.com, rjw@rjwysocki.net, len.brown@intel.com,
        pavel@ucw.cz, gregkh@linuxfoundation.org, keescook@chromium.org,
        anton@enomsg.org, ccross@android.com, tony.luck@intel.com,
        robh+dt@kernel.org, mark.rutland@arm.com, kgene@kernel.org,
        krzk@kernel.org, m.szyprowski@samsung.com, b.zolnierkie@samsung.com
Subject: Re: [PATCH v2 2/5] devfreq: add support for suspend/resume of a
 devfreq device
In-reply-to: <7662d626-5c3e-aec5-05e4-c6cd2e56ef49@partner.samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA01TbUxTVxjOud+QlV2qyJF91bvMCKTApVaOxi5mI/NmI47EZB+MyO7gDkg/
        11vccEuGY+DGGGXikKGsLuBioIBWhhbqiLWoYZsoBreM1f3AEaYMO1DK4iBrezHj3/s+7/O8
        73mfcw6Dq0NUClNucUh2i2jiqHii/0Jqpva5ZLowa/9EBjr/XSo61dJLojOnFkjkClwhUXV7
        L4V+/MyMnJN3cDQ6epJGP300Q6Nfqx5HrYfOYcgzeYNE1weOUmj+8wBALaPfY6g7EKTR8Z+v
        YWhi/wkKBUeGIz1+GCNRzbkAjWq7QiSauXqT2JEs9A/2k4L7azcQjlRdI4RG5xwQ2n1/YoKn
        81NKGGpz08Lpjg+F5Yu0cH7Whwl94wcIoaGvEwgnusK0MO95Mj+hwLi9TBJLJLtGshRbS8ot
        pQbupd1Fzxfpt2TxWn4ryuE0FtEsGbjcvHztC+WmyPqcZq9oqohA+aIsc5nPbrdbKxySpswq
        OwycZCsx2bbaMmTRLFdYSjOKreZtfFZWtj5CfNNY9tvUA8IWznlvuGmWrAKHtXUgjoHsZtgx
        XUPVgXhGzZ4FsP66fyUJA9jcPQcesuavVtNKYRDApoGFWEHFJsLFpptEHWAYnH0KBsaMURhn
        U+H0vYOEwg8C2HJ3jlD4aTAU7MajMcE+A5cX/4rhVAQfmv6FisaPshvg+OJkrH8S+xr0uhZi
        g9eyowC6vT4smuBsDQ6XQ30xxRr2dTjS/kesaxy7E/puNZNREmSXaDjec4ZUdsiFF28rAsiu
        gbcv9dHRY0P2MTg2bFD4BwC8N129Im4EMDRyGlMEOjj1TR2mLJcAZ+/Xk4pYBT+pVSsUATbU
        96x49ACDS/96sUbwROsqm1r/t6l1lU3HAN4J1kk22VwqybxNt/oCPSD22tNyzoKTV/L8gGUA
        94gKHqIK1aS4V640+wFkcG6tKhCOQKoSsXKfZLcW2StMkuwH+ojLX+ApScXWyN+xOIp4fbZO
        p0Ob+S16nueSVbdS2t5Qs6WiQzJKkk2yP9RhTFxKFfhKqhm43OzeNT/8yqUd3sMN/m0f7/n7
        2+a8jmBhopMpuO9JX58+kX6H68DCLufTmbXH3tq0IZHeuZFeEgxf7vMYChzvT71bvTGpIWl9
        743stldntL7dL67bVJAwePloQNPZ9faFu/b4f1wOY63OPtfe8rLX6SI/eOc4sYcZ+r2nciSX
        I+QykU/D7bL4H+035w4DBAAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrCIsWRmVeSWpSXmKPExsVy+t9jAV1HcfYYg96zZhYHt2pabJyxntVi
        +8ZvrBbzj5xjtWhevJ7N4kx3rkX/49fMFufPb2C3ONv0ht3iVoOMxawpe5ksNj2+xmpxedcc
        NovPvUcYLWac38dksfbIXXaLpdcvMlncblzBZnH31FGgGacvsVq07j3CbtG2+gOrxZsL91gc
        xD227d7G6rFm3hpGj9kNF1k8JvR/YvRYvOclk8emVZ1sHvvnrmH32Lyk3uPfMXaPg+/2MHls
        udrO4tG3ZRWjx4rV39k9Pm+SC+CL4rJJSc3JLEst0rdL4Mq48+w3S8F384qjk9+xNjBO1+1i
        5OSQEDCR+HyhmR3EFhLYyShxdrEYiM0rICjxY/I9li5GDg5mAXmJI5eyIUx1iSlTcrsYuYCq
        7zNKNJ7fzAZRriXx4e5aZhCbRUBV4t+PtywgNhtQfP+LG2A1/AKKEld/PGYEmSMqECHRfaIS
        ZI6IwHlGiYN9nawgNcwCrcwSj9qyQGxhgUiJU4ufMkMs+80ksewaRBGngLvEnifTWCcwCsxC
        cuoshFNnIZy6gJF5FaNkakFxbnpusVGBYV5quV5xYm5xaV66XnJ+7iZGYFxvO6zVt4Px/pL4
        Q4wCHIxKPLwKs9lihFgTy4orcw8xSnAwK4nwHvkOFOJNSaysSi3Kjy8qzUktPsQozcGiJM57
        O+9YpJBAemJJanZqakFqEUyWiYNTqoGxmvGA5+NFc1du3LNgEadt4M5MpRDGpXfuXhdQW8+7
        OZAvrqmWtzE+SrvyhW3siv91msm99hf2f+9+2PEiXjV1g/MVa7U8uYm8a0MLoi5f38zB+/SI
        t8/ig+c/r91tt01xcyIj64lglQp2zx0Mu/03SSRnVsdaCF1tOpC8d/uDR8WJvtz7KucosRRn
        JBpqMRcVJwIA60wOCecCAAA=
X-CMS-MailID: 20181205000937epcas1p18e44f236dbc6ab59bd589cddda184591
X-Msg-Generator: CA
CMS-TYPE: 101P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20181203143131eucas1p217f22ac6d19682a54a57658a06980914
References: <1543847475-7600-1-git-send-email-l.luba@partner.samsung.com>
        <CGME20181203143131eucas1p217f22ac6d19682a54a57658a06980914@eucas1p2.samsung.com>
        <1543847475-7600-3-git-send-email-l.luba@partner.samsung.com>
        <5C06124B.5030409@samsung.com> <5C06140E.7010603@samsung.com>
        <5C061A57.7040002@samsung.com>
        <7662d626-5c3e-aec5-05e4-c6cd2e56ef49@partner.samsung.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Lukasz,

On 2018년 12월 04일 18:53, Lukasz Luba wrote:
> Hi Chanwoo,
> 
> On 12/4/18 7:10 AM, Chanwoo Choi wrote:
>> Hi Lukasz,
>>
>> I add the comment about 'suspend_count'.
>>
>> On 2018년 12월 04일 14:43, Chanwoo Choi wrote:
>>> Hi,
>>>
>>> On 2018년 12월 04일 14:36, Chanwoo Choi wrote:
>>>> Hi Lukasz,
>>>>
>>>> Looks good to me. But, I add the some comments.
>>>> If you will fix it, feel free to add my tag:
>>>> Reviewed-by: Chanwoo choi <cw00.choi@samsung.com>
>>>
>>> Sorry. Fix typo 'choi' to 'Choi' as following.
>>> Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
>>>
>>>>
>>>> On 2018년 12월 03일 23:31, Lukasz Luba wrote:
>>>>> The patch prepares devfreq device for handling suspend/resume
>>>>> functionality.  The new fields will store needed information during this
>>>>
>>>> nitpick. Remove unneeded space. There are two spaces between '.' and 'The new'.
>>>>
>>>>> process.  Devfreq framework handles opp-suspend DT entry and there is no
>>>>
>>>> ditto.
>>>>
>>>>> need of modyfications in the drivers code.  It uses atomic variables to
>>>>
>>>> ditto.
>>>>
>>>>> make sure no race condition affects the process.
>>>>>
>>>>> The patch is based on earlier work by Tobias Jakobi.
>>>>
>>>> Please remove it from each patch description.
>>>>
>>>>>
>>>>> Suggested-by: Tobias Jakobi <tjakobi@math.uni-bielefeld.de>
>>>>> Suggested-by: Chanwoo Choi <cw00.choi@samsung.com>
>>>>> Signed-off-by: Lukasz Luba <l.luba@partner.samsung.com>
>>>>> ---
>>>>>   drivers/devfreq/devfreq.c | 51 +++++++++++++++++++++++++++++++++++++++--------
>>>>>   include/linux/devfreq.h   |  7 +++++++
>>>>>   2 files changed, 50 insertions(+), 8 deletions(-)
>>>>>
>>>>> diff --git a/drivers/devfreq/devfreq.c b/drivers/devfreq/devfreq.c
>>>>> index a9fd61b..36bed24 100644
>>>>> --- a/drivers/devfreq/devfreq.c
>>>>> +++ b/drivers/devfreq/devfreq.c
>>>>> @@ -316,6 +316,10 @@ static int devfreq_set_target(struct devfreq *devfreq, unsigned long new_freq,
>>>>>   			"Couldn't update frequency transition information.\n");
>>>>>   
>>>>>   	devfreq->previous_freq = new_freq;
>>>>> +
>>>>> +	if (devfreq->suspend_freq)
>>>>> +		devfreq->resume_freq = cur_freq;
>>>>> +
>>>>>   	return err;
>>>>>   }
>>>>>   
>>>>> @@ -667,6 +671,9 @@ struct devfreq *devfreq_add_device(struct device *dev,
>>>>>   	}
>>>>>   	devfreq->max_freq = devfreq->scaling_max_freq;
>>>>>   
>>>>> +	devfreq->suspend_freq = dev_pm_opp_get_suspend_opp_freq(dev);
>>>>> +	atomic_set(&devfreq->suspend_count, 0);
>>>>> +
>>>>>   	dev_set_name(&devfreq->dev, "devfreq%d",
>>>>>   				atomic_inc_return(&devfreq_no));
>>>>>   	err = device_register(&devfreq->dev);
>>>>> @@ -867,14 +874,28 @@ EXPORT_SYMBOL(devm_devfreq_remove_device);
>>>>>    */
>>>>>   int devfreq_suspend_device(struct devfreq *devfreq)
>>>>>   {
>>>>> +	int ret;
>>>>> +
>>>>>   	if (!devfreq)
>>>>>   		return -EINVAL;
>>>>>   
>>>>> -	if (!devfreq->governor)
>>>>> -		return 0;
>>>>> +	if (devfreq->governor) {
>>>>> +		ret = devfreq->governor->event_handler(devfreq,
>>>>> +					DEVFREQ_GOV_SUSPEND, NULL);
>>>>> +		if (ret)
>>>>> +			return ret;
>>>>> +	}
>>>>> +
>>>>> +	if (devfreq->suspend_freq) {
>>>>> +		if (atomic_inc_return(&devfreq->suspend_count) > 1)
>>>>> +			return 0;
>>>>> +
>>>>> +		ret = devfreq_set_target(devfreq, devfreq->suspend_freq, 0);
>>>>> +		if (ret)
>>>>> +			return ret;
>>>>> +	}
>>
>> In this patch, if some users call 'devfreq_suspend_device' twice,
>> 'devfreq->governor->event_handler(devfreq, DEVFREQ_GOV_SUSPEND, NULL)'
>> is called twice but devfreq_set_target() is called only one.
>> I knew that it is no problem for operation.
>>
>> But,
>> I think that you better to use 'suspend_count' as the reference count
>> of devfreq_suspend/resume_device(). But, if you use 'suspend_count'
>> in order to check whether this devfreq is suspended or not,
>> we can reduce the unneeded redundant call when calling it twice.
>>
>> clock and regulator used the 'reference count' method in order to
>> remove the redundant call.
> 
> I think I've got the point. I will move the atomic check just
> after the !devfreq check. Something like the code bellow is what you
> would like to see?
> ---8<-----
> if (!devfreq)
> 	return -EINVAL;
> if (atomic_inc_return(&devfreq->suspend_count) > 1)
> 	return0;

Looks good to me. I agree.

> 
> ---->8-------
>>
>>
>>>>>   
>>>>> -	return devfreq->governor->event_handler(devfreq,
>>>>> -				DEVFREQ_GOV_SUSPEND, NULL);
>>>>> +	return 0;
>>>>>   }
>>>>>   EXPORT_SYMBOL(devfreq_suspend_device);
>>>>>   
>>>>> @@ -888,14 +909,28 @@ EXPORT_SYMBOL(devfreq_suspend_device);
>>>>>    */
>>>>>   int devfreq_resume_device(struct devfreq *devfreq)
>>>>>   {
>>>>> +	int ret;
>>>>> +
>>>>>   	if (!devfreq)
>>>>>   		return -EINVAL;
>>>>>   
>>>>> -	if (!devfreq->governor)
>>>>> -		return 0;
>>>>> +	if (devfreq->resume_freq) {
>>>>> +		if (atomic_dec_return(&devfreq->suspend_count) >= 1)
>>>>> +			return 0;
>>
>> ditto.
> Same approach here:
> ---8<-----
> if (!devfreq)
> 	return -EINVAL;
> if (atomic_dec_return(&devfreq->suspend_count) >= 1)
> 	return 0;

Looks good to me.

> ---->8-------
> 
> Regards,
> Lukasz
>>
>>>>>   
>>>>> -	return devfreq->governor->event_handler(devfreq,
>>>>> -				DEVFREQ_GOV_RESUME, NULL);
>>>>> +		ret = devfreq_set_target(devfreq, devfreq->resume_freq, 0);
>>>>> +		if (ret)
>>>>> +			return ret;
>>>>> +	}
>>>>> +
>>>>> +	if (devfreq->governor) {
>>>>> +		ret = devfreq->governor->event_handler(devfreq,
>>>>> +					DEVFREQ_GOV_RESUME, NULL);
>>>>> +		if (ret)
>>>>> +			return ret;
>>>>> +	}
>>>>> +
>>>>> +	return 0;
>>>>>   }
>>>>>   EXPORT_SYMBOL(devfreq_resume_device);
>>>>>   
>>>>> diff --git a/include/linux/devfreq.h b/include/linux/devfreq.h
>>>>> index e4963b0..d985199 100644
>>>>> --- a/include/linux/devfreq.h
>>>>> +++ b/include/linux/devfreq.h
>>>>> @@ -131,6 +131,9 @@ struct devfreq_dev_profile {
>>>>>    * @scaling_min_freq:	Limit minimum frequency requested by OPP interface
>>>>>    * @scaling_max_freq:	Limit maximum frequency requested by OPP interface
>>>>>    * @stop_polling:	 devfreq polling status of a device.
>>>>> + * @suspend_freq:	 frequency of a device set during suspend phase.
>>>>> + * @resume_freq:	 frequency of a device set in resume phase.
>>>>> + * @suspend_count:	 suspend requests counter for a device.
>>>>>    * @total_trans:	Number of devfreq transitions
>>>>>    * @trans_table:	Statistics of devfreq transitions
>>>>>    * @time_in_state:	Statistics of devfreq states
>>>>> @@ -167,6 +170,10 @@ struct devfreq {
>>>>>   	unsigned long scaling_max_freq;
>>>>>   	bool stop_polling;
>>>>>   
>>>>> +	unsigned long suspend_freq;
>>>>> +	unsigned long resume_freq;
>>>>> +	atomic_t suspend_count;
>>>>> +
>>>>>   	/* information for device frequency transition */
>>>>>   	unsigned int total_trans;
>>>>>   	unsigned int *trans_table;
>>>>>
>>>>
>>>>
>>>
>>>
>>
>>
> 
> 


-- 
Best Regards,
Chanwoo Choi
Samsung Electronics
