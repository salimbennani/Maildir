Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:43:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2EF155805FC;
	Mon, 17 Dec 2018 05:19:56 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 17 Dec 2018 05:19:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARtXUexJyIawJlif7RNmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvXzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIDeUBM+lXoYbmp1sWrxazHhWgCeD1xzNUnHL6wbE23uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zRotrrMqcSTf2+wrDWzTrddfNWwiv96JLWfR8/vfGHQLV9ccnPxkkpCwPJlFKQ?=
 =?us-ascii?q?qZL7MDOPzeQNr3Kb4PR+WuKzkGMnpARxrSKuxscokIXGmoUVylXd+Ch/3Y07Js?=
 =?us-ascii?q?W4RVZlbdK4FJZcrTyWOoVoTs84Xm1luzo2xqcHtJO5ZCQHzJoqywTBZ/GIb4SE?=
 =?us-ascii?q?+B3uWPyMLTtmmX5ofq+0iQyo/ki60OL8U9G50FZUoSpBldnBrm4N1xPN5cidUP?=
 =?us-ascii?q?d9/Vmu2SyJ1w/N7uFIO0c0lbDUK5I5w74wkIQcsVjbEyPohEn7iLWaelgq9+S2?=
 =?us-ascii?q?8ejrf7brqoOGO4J1iAzyKqEulda+AeQ8PAgORW+b+eGk2b3n/E35RqhKj/Ivnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNM1YYi5RC/ACm80NkDg3kHI0xKeAidg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i2lzdr3f/GMqX7AprRNnjDjKvhfbFl5k5YyQozzs5Q64hbC7EcO//zXk7xtN?=
 =?us-ascii?q?rFDh42KQC0wuDnCMlj2YMaQ26AHqiZMKbKu1+S+u0vO/WMZJMSuDvlK/gq/f/u?=
 =?us-ascii?q?jWMjll8aZ6Wp3YYXZ2q+HvRpOEiZZXvsgtEcEWYFpAY+TerqiEGcXj5XfXq9Q6?=
 =?us-ascii?q?U85jQjAoK8EYjDXpytgKCG3CqjHJ1WYX5JBkqPEXfvcYWEXfAMZTmWIs9glDwE?=
 =?us-ascii?q?SLegR5Ug1RGoqA/11b5nIvDI9S0fsJLpzMJ16PHLlREu6Tx0CNyQ3HuWT2F0mW?=
 =?us-ascii?q?MIRCU63Lplrkx/0VqD1al4g/pFFd1c/f9JUwE6NYLCwOx+Edz9RgXBftKRQla8?=
 =?us-ascii?q?XtqmGS0xTs42w9IWYEZyAdOiggrH3yqrGbAVkbOLCYcw8qLd2XjxOsl8x2zH1K?=
 =?us-ascii?q?knk1kpXM9POXe6ia548gjZH5TJnFmBl6a2aaQc2zbA+3qZwmqQok5USg5wXr/D?=
 =?us-ascii?q?XXAEeETWq9P15kfBT7+rDbQqKQ9Byc+EKqtXZdzll1RGRPH/ONvAZ2K9gXu/BR?=
 =?us-ascii?q?GNxrmUdorlZ30d3DnBCEgDiw0c4GyJNRYgCSu7o2LRFjpuFUnxbEPq6uR+rHK7?=
 =?us-ascii?q?TkkpzwCFdUFh1ry1+gILivyYUf8cwrUEuCI5oTVuAFm9x87WC8aHpwd5YKVcYN?=
 =?us-ascii?q?Y94FBb1WLZtw1xJICgI7plhl4EdwR3vkXu1xpsB4VEkMgqqm4qzQVoJaKZ1lNB?=
 =?us-ascii?q?ay2X3ZTqNrLLLWny+Qila7TK1VHGzNaW5qAP5ewipFXnog6oGVQt8nV939ZOzn?=
 =?us-ascii?q?uT+4/FDAwRUZL2TEY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOErm0WpYggYM+xI9a80P9mpd/2J2KOwOOZgnTSmjXlI4Y?=
 =?us-ascii?q?xn00KM8TZ8RfDM35of3/6Y2Q6HXS/mjFi9qsD3hZxEZTYKE2qlyCjrGJReZrdv?=
 =?us-ascii?q?coYME2uuJdO4xs9/h5L0R3FX7lqjCE4Y18+zfhqSaUfw3QlR1UQRvHymljG0zz?=
 =?us-ascii?q?1ykzE1sKWf2DbCzPjldBoCImRLXnVtjU/wIYioiNAXREipbwkzmBql/0r63LVb?=
 =?us-ascii?q?pKJkImnXQEdIeTX2Lm54XquxsLqCf9BA6JcyvSpLV+S8ZEiQSqThrBsCzyPjA2?=
 =?us-ascii?q?xeySg5dz6woJX5nB96iGWHIHZotnXZesJwxRbZ5NPCQ/5cxT4GRCh+iTnKCVmw?=
 =?us-ascii?q?Jdip/dOIl5jdtuCyTX6uVppWcSPz14OPqDO75XF2AR24h/2ymsfoEQ8g3S/51t?=
 =?us-ascii?q?lqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaH+Y2AMRTIRw97V/RLq2EtsLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X4fguEJuxAiwj+TA78MBklYITLjlw6T?=
 =?us-ascii?q?4N+gtqVXa32icbyx1Ep4gNCgA6uOogBaWHblZJgiGTV84dl4MFLJyHfz8J3reM?=
 =?us-ascii?q?HMbdIPsR2ZiwvAj+9QKJ4rl/sFnyxnOX/mvX0+yu42lhhu3ZC8vIiaJGRh5qO5?=
 =?us-ascii?q?AhhENjLrY8Mf4C3ijaFbnsyOxYCgAo1hGikXXJvvVf+nCygdtfPjNwaTCjE8rm?=
 =?us-ascii?q?qbFKHbHQ+e7kdmsn3OH4qqN3GROHkW09FiSAOBK0xYhQAeRC86kYIhFgC22Mzh?=
 =?us-ascii?q?d1905jIL6V79tBRM0fhkNwXlXmfcuQeoaSo0SJ6FIxpN9QxC40bVMcqD7uN8BS?=
 =?us-ascii?q?1Y/5uhrBCTJWyffQhHEWYJWkmcDVD5Irau/cXA8/SfBuemL/rOZqiOqfVDV/iS?=
 =?us-ascii?q?w5KjyJBm/zGKNsWAJXRiC/w72kxeXXF2AcjZmjMPSzAJmCLJdcKUuBC8+ihvpM?=
 =?us-ascii?q?Cl7PvrQB7v5ZeIC7ZKMdVg5RG2gaSAN+6Rnip5KixY1pQDxXDW0rgfwUUShjpq?=
 =?us-ascii?q?dzmsF7QAqCHMQLjRmq9REx4UdSdzONFU4KI72wlHIdTbhc/t1r5kkv41DE9IWk?=
 =?us-ascii?q?b8ms6yf8wFPWG8OEnDBEaKL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylbhZtCG3jQMj6ZRGhLNB3jSM5wbsvi3PONG4cNy?=
 =?us-ascii?q?V8ckxXor2R6yNYnutwG2hb4nV5KumEnj6T7/PEJZYOrftrHiN0mvpa4XsgzbtV?=
 =?us-ascii?q?6SBERPptlyrTrt5huVemkuaUxzpjURpOrCtLhY2RsUVjP6XZ6odPWXLe8B0R6m?=
 =?us-ascii?q?WQDkdCm9wwA973vohUy97ShOf9LypE/9vI/MwaQc/OJ4bPNHsnLAqsGzPOCgYB?=
 =?us-ascii?q?ZSCkOHuZhEFHlvyWsHqPocsUsJ/pzbkDTKMTc0I4DOgGEEloAJRWI5pxQnUjj7?=
 =?us-ascii?q?OBl9IS6HeihBbUTcRe+JvAU6TBUr3UND+FgOwcNFMzyrTiINFWb9Wj1g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAAmohdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBWLdoIhiRKOMoFxFAEBGBMBh1UiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKSMMgjYkAYJiAwMBAiQLAQ0BGx0BAwIJAQEFEDsDHgIRAQUBHAcSB?=
 =?us-ascii?q?YMdgWgBAxUEAZw5PIwMFgUBF4J3BYJEgWsKGScNXYE3AgYSh2uDJYEcgVc/gRG?=
 =?us-ascii?q?FaYgJAolChwmQHy8HAoIkBIwCgyULGIlzh1+JPIYIhm2DDAIEAgQFAgUPIYElg?=
 =?us-ascii?q?g5wgQGCO4Ibg22KcSIygQUBAY1vAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAAAmohdch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBWLdoIhiRKOMoFxFAEBGBMBh1UiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiQLAQ0BGx0BAwIJAQEFEDsDHgIRAQUBHAcSBYMdgWgBAxUEAZw?=
 =?us-ascii?q?5PIwMFgUBF4J3BYJEgWsKGScNXYE3AgYSh2uDJYEcgVc/gRGFaYgJAolChwmQH?=
 =?us-ascii?q?y8HAoIkBIwCgyULGIlzh1+JPIYIhm2DDAIEAgQFAgUPIYElgg5wgQGCO4Ibg22?=
 =?us-ascii?q?KcSIygQUBAY1vAQE?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="57774518"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 17 Dec 2018 05:19:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732793AbeLQNTw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 17 Dec 2018 08:19:52 -0500
Received: from mail-wr1-f65.google.com ([209.85.221.65]:42869 "EHLO
        mail-wr1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732593AbeLQNTs (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 17 Dec 2018 08:19:48 -0500
Received: by mail-wr1-f65.google.com with SMTP id q18so12230690wrx.9
        for <linux-kernel@vger.kernel.org>; Mon, 17 Dec 2018 05:19:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=XZyN84HRyUDGnrcHTh84AN+nH+G5h6oVFeg944FVkY0=;
        b=GYFMPd9yCy4yOOLgvLghLf9ZGU5RcZU4kI6gq8x/qS+CicIUiVw9G+Toh9wggcWCmr
         ENINxh9nIkHCVF+HKtRimD6ahRyGilaT/bgfiO5KVB36DraNgwF/3IaO0OlfeylNSqBC
         OqUN84plUyumcOAPxYuxRse8GPoYGGO9OSxmO59OsUT/UXnaOfe0K33iYwkYu7Ng88y/
         Z4FamV1CmOS4ZXpqjt1PtKZ0EXYz+J4d/Dn9LnNyNbiPJpbA+pGrV5tYmHFtbd1bb6Hf
         yHoLALJSmVAB6DpVr0vccCQ54EeV8WB6t2UOz/o1YiYc8wEE1kBUN/73ZO6+rTnQ4kez
         WxfQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=XZyN84HRyUDGnrcHTh84AN+nH+G5h6oVFeg944FVkY0=;
        b=Igb4gGg4jgus0YmqvyOM0M/CEhUFS4qFTFVsKLX3oa7nema7MKaKDYillVGRHB2aVl
         /rNYY8CEKETNB5vlhCr9OnUEBfo3OWsHOpgaWRPM0eB4Yp7wQpJcrPJQgY9Lcw3TZC0f
         Vk8ipjI7+xMwd3mUZmma9qRuxidfTgkQ1tWGpLm8Bprficm/o93b7ySOmpWh3WLFtgzX
         e+ueohHHVusdvROOTPxBWFDOaI0Kfvhxbg+eFDZ2yU9/xIV1vHgradeBU8n74g0a+voe
         rq2HiKd7GPrlogpmCvQ8fiBOi+Bd7KbAv8R52/qUo+bClIhibCRmMiNqLJFH9DEIUrNp
         A6gQ==
X-Gm-Message-State: AA+aEWaoJLLkLUIBj9mSp+nYphfSaUs5UxAaIHVGjflTOruMlcrg9eJc
        IjkbO/SEGk8Bf2R2uLq3jg==
X-Google-Smtp-Source: AFSGD/WqDqZ7G1jyx080JZQsnqP/JzirQ9XRkvciKVBCbnO9IOogiY7Kf4Z910RTn02Lt0oxmT2yVg==
X-Received: by 2002:a5d:5351:: with SMTP id t17mr10616695wrv.288.1545052785471;
        Mon, 17 Dec 2018 05:19:45 -0800 (PST)
Received: from kmo-pixel.syslink.intern ([93.240.4.121])
        by smtp.gmail.com with ESMTPSA id x20sm20406120wme.6.2018.12.17.05.19.43
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 17 Dec 2018 05:19:44 -0800 (PST)
From: Kent Overstreet <kent.overstreet@gmail.com>
To: akpm@linux-foundation.org, linux-kernel@vger.kernel.org
Cc: Kent Overstreet <kent.overstreet@gmail.com>,
        Al Viro <viro@zeniv.linux.org.uk>
Subject: [PATCH 5/7] proc: commit to genradix
Date: Mon, 17 Dec 2018 08:19:27 -0500
Message-Id: <20181217131929.11727-6-kent.overstreet@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20181217131929.11727-1-kent.overstreet@gmail.com>
References: <20181217131929.11727-1-kent.overstreet@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

the new generic radix trees have a simpler API and implementation, and
no limitations on number of elements, so all flex_array users are being
converted

Signed-off-by: Kent Overstreet <kent.overstreet@gmail.com>
Cc: Al Viro <viro@zeniv.linux.org.uk>
---
 fs/proc/base.c | 43 +++++++++++++++----------------------------
 1 file changed, 15 insertions(+), 28 deletions(-)

diff --git a/fs/proc/base.c b/fs/proc/base.c
index ce34654794..2edf386ed3 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -59,6 +59,7 @@
 #include <linux/capability.h>
 #include <linux/file.h>
 #include <linux/fdtable.h>
+#include <linux/generic-radix-tree.h>
 #include <linux/string.h>
 #include <linux/seq_file.h>
 #include <linux/namei.h>
@@ -92,7 +93,6 @@
 #include <linux/sched/coredump.h>
 #include <linux/sched/debug.h>
 #include <linux/sched/stat.h>
-#include <linux/flex_array.h>
 #include <linux/posix-timers.h>
 #include <trace/events/oom.h>
 #include "internal.h"
@@ -2140,11 +2140,12 @@ proc_map_files_readdir(struct file *file, struct dir_context *ctx)
 	struct task_struct *task;
 	struct mm_struct *mm;
 	unsigned long nr_files, pos, i;
-	struct flex_array *fa = NULL;
-	struct map_files_info info;
+	GENRADIX(struct map_files_info) fa;
 	struct map_files_info *p;
 	int ret;
 
+	genradix_init(&fa);
+
 	ret = -ENOENT;
 	task = get_proc_task(file_inode(file));
 	if (!task)
@@ -2176,35 +2177,22 @@ proc_map_files_readdir(struct file *file, struct dir_context *ctx)
 	 */
 
 	for (vma = mm->mmap, pos = 2; vma; vma = vma->vm_next) {
-		if (vma->vm_file && ++pos > ctx->pos)
-			nr_files++;
-	}
+		if (!vma->vm_file)
+			continue;
+		if (++pos <= ctx->pos)
+			continue;
 
-	if (nr_files) {
-		fa = flex_array_alloc(sizeof(info), nr_files,
-					GFP_KERNEL);
-		if (!fa || flex_array_prealloc(fa, 0, nr_files,
-						GFP_KERNEL)) {
+		p = genradix_ptr_alloc(&fa, nr_files++, GFP_KERNEL);
+		if (!p) {
 			ret = -ENOMEM;
-			if (fa)
-				flex_array_free(fa);
 			up_read(&mm->mmap_sem);
 			mmput(mm);
 			goto out_put_task;
 		}
-		for (i = 0, vma = mm->mmap, pos = 2; vma;
-				vma = vma->vm_next) {
-			if (!vma->vm_file)
-				continue;
-			if (++pos <= ctx->pos)
-				continue;
 
-			info.start = vma->vm_start;
-			info.end = vma->vm_end;
-			info.mode = vma->vm_file->f_mode;
-			if (flex_array_put(fa, i++, &info, GFP_KERNEL))
-				BUG();
-		}
+		p->start = vma->vm_start;
+		p->end = vma->vm_end;
+		p->mode = vma->vm_file->f_mode;
 	}
 	up_read(&mm->mmap_sem);
 	mmput(mm);
@@ -2213,7 +2201,7 @@ proc_map_files_readdir(struct file *file, struct dir_context *ctx)
 		char buf[4 * sizeof(long) + 2];	/* max: %lx-%lx\0 */
 		unsigned int len;
 
-		p = flex_array_get(fa, i);
+		p = genradix_ptr(&fa, i);
 		len = snprintf(buf, sizeof(buf), "%lx-%lx", p->start, p->end);
 		if (!proc_fill_cache(file, ctx,
 				      buf, len,
@@ -2223,12 +2211,11 @@ proc_map_files_readdir(struct file *file, struct dir_context *ctx)
 			break;
 		ctx->pos++;
 	}
-	if (fa)
-		flex_array_free(fa);
 
 out_put_task:
 	put_task_struct(task);
 out:
+	genradix_free(&fa);
 	return ret;
 }
 
-- 
2.20.1

