Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 16:09:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 98E6F580460;
	Thu, 29 Nov 2018 23:35:18 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 23:35:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVP3kARX2KKGTz23LfHqnvEsKMyjV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGFvqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?b4UNAOQBM+hWrJTzqUUSohWxHgmsHOHixyRUhn/vx6A2z/gtHR3E0QEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKV+K3yrTDwDLeYP9L2zrx9ZTEfx4hrP2RU799asXRyUw1GAPEilWc?=
 =?us-ascii?q?s5DqPzSQ1ukUtWWQ8uRuVeWqi2E9qgFxpCCixsQyhYnTgIIa1FTE+T9+wIYvKt?=
 =?us-ascii?q?20UEF7YdmjEJtfsyGVKZB2QsQ/Q2FypCk11KcKtoK8fCgP0JgnwgDQZOGGc4iV?=
 =?us-ascii?q?5xLvTvqeITB9hH9jZbmxhA6y/FC+xuHgUsS4yktGoyRbntXWq3wA1ADf5tKGR/?=
 =?us-ascii?q?Z/5kutxyqD2gTJ5uxHIU04j7TXJ4Iiz7Iql5cesELOFTLslkrslq+ZbEAk9/Co?=
 =?us-ascii?q?6+v5ZrXmoYeRN5F7ig7gKKQigM+/DvoiMggIQWeb/f6w1Lr5/U32WLlKj/s2nb?=
 =?us-ascii?q?fFsJ3CO8gXuqq0DxVI3ost9RqzFSqq3dcEkXUdLV9IegqLj43zNFHPJPD4A+2/?=
 =?us-ascii?q?g1OpkDpzw/DGP7vhAojCL3Tak7fuY6x960hCxwo31Nxf4JxVCrcfL/LpQULxqt?=
 =?us-ascii?q?PYAQEjMwCuwOboFs991oUAVmKLGKOZN7nSsVCQ6uI1P+aMfJMVuCr6K/U94/7u?=
 =?us-ascii?q?jHw5lkEHcaimwJsac3S4HvVgI0WEbnvgmNYBEWEWvgUgSOzmkkGNUTlWZ3yqRa?=
 =?us-ascii?q?Iz+ik7CJ66DYfEXo2tgKaO3CanHpJMYWBKEFCMEWryeIWCVPcBcyaSIs5nkjwZ?=
 =?us-ascii?q?WrmtUY4h1ReytADkz7prNPbb+iodtZj7zth6+/XTlQ0u9TxzF8md0WaNQH9ukm?=
 =?us-ascii?q?MLQD822qZ/oUtmx1eH0Kh4heFYFNNJ6/NIVAc6KYDTz+hgB9/uXQLBe8+DSEy6?=
 =?us-ascii?q?TdW+HTExUtUxzscUbEZmG9WiiRPD0zCwA7APlbyGH5g08qPa33jsKMdx0XfG1K?=
 =?us-ascii?q?89j1Y4RstDL3Gphql69wLLHY7Gj12Zl7q2daQbxCPN932MzWyUsEFcUQ5/S6PF?=
 =?us-ascii?q?XX8Ea0vSrNT54F7CTrC0BbQmNAtB1dCNKq9QZtL1ilVGQe/pOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uRY4XwZWUSwj/RCEgenAAV5naJKw4+CiClo2LdCTxuEUniY0ft8el4tXO6?=
 =?us-ascii?q?QVU4zwCMb019ybW1/gQZiuCbS/MWxrgEojsuqy1oHFah2NLbE8ePqBB/fKpCe9?=
 =?us-ascii?q?894E1I1WTCtwNjOJytNKRihl8YcwRqsELizRR3CoNckcc0qHMm1hZ9KaWd0FlZ?=
 =?us-ascii?q?bTOXwYjwOqHLKmn15B2vd6/W2lTZ0NaK+qcO6O40q0n5sAGuDEoi93Rn099a03?=
 =?us-ascii?q?aH4pXKDQwSUY/+U0ot9hh6oa3abTc554/OyXJsNqy0uCfY2901HOsl1gqgf9BH?=
 =?us-ascii?q?PayeEA/9DcIbCNauKeAwgFepcw8LM/pU9K43OMOmaeCL2KqqPOZmgTKngn5L4I?=
 =?us-ascii?q?F70kKQ6SV8TvTE0IoCw/GdxgGHTSvzjE+9ssDrnoBJfTETHnelxSf4HoJQZ61y?=
 =?us-ascii?q?cpwNCWehOMC3wtR+h5jwW39X7lKjBlUG2NO3dhqWdVDywQpQ1UEPq3y9hSS41y?=
 =?us-ascii?q?B0ky0urqeHxizOwvjtewAdOmFWQ2lul1HsLpauj9AbRUSncxImlB+46knk3ahb?=
 =?us-ascii?q?o6J/InLXQUdJeSj2Mm5jXrGxtrqEf85A9pcovT9LX+S7ZFCQUqT9rAcC0yP/A2?=
 =?us-ascii?q?tewyg2djGrupnjnx12knmdLGt1rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIOCriS7/25qAR64n/ypgd3oCws60Sz619?=
 =?us-ascii?q?lsSyrIqg3xYo3q16S8LOJmcVNkBF7668pmBI5+lpE8i40X2Xgfnp+V52YIkX/v?=
 =?us-ascii?q?MdVH3qLzdHoMSiQMw9LP4gjl2UtjI2mNx4L4UHWd38Rga8O7YmMQxiIy8cRKBL?=
 =?us-ascii?q?2I47xDmCt/ukC4oh7JYfhhgjcdzuMj6H0AjOEIogYtzjidDaoUHUlXJiHskxWI?=
 =?us-ascii?q?79ajrKRYfmqvcL6w1FZgktClFr2NvgZcWHPhcJc4ASBw9tl/ME7L0HDr74Hked?=
 =?us-ascii?q?rQYsgJuhyajRjAlPRVJ4wrlvURmyVnI239sGYhy+46ixxuwJ67sJKGK2Vr4KK2?=
 =?us-ascii?q?HBpYOifpaMMU/zHnlbxekdqO34CzApVhHS0GXIfvTfKtCj4TtO7oNwCTED0nsX?=
 =?us-ascii?q?ebGKHSHQue6EdgsnLOHIqnN3CRJHkF09piQAORK1BYgAARRD86hII2Fhi2xMz9?=
 =?us-ascii?q?d0d0/ise6UT/qhtI1+JkLR3/UnrEqQesazc0ToWfLRVM4gFD4UfVLdKR7uZpEy?=
 =?us-ascii?q?5E+Z2hqRSHKnaHaARQEWEJRkuECkjhPra04NnP7fOYCvCiL/fUYrWOtO9eV+qO?=
 =?us-ascii?q?xZ21yYtr5DKMNsSJPnl/APw3wEtDXXZlG8vHnzUDUTAYlyXIb8SDvhez5jV3rt?=
 =?us-ascii?q?yj8PTsQA/u5YyPC6ZLMdVy4R+2h72PN/WXhCZ/JjZVzZcMxX7OyLgC018ekSBu?=
 =?us-ascii?q?dz+xEbsesS7BVr7fmqhSDxQDcSN8KNNI774g3glKIcPbis361r97jv42CldJT1?=
 =?us-ascii?q?/hmtuuZcwFPW69Lk7HBF2QObSCJD3Lxdz3YKymRb1RiuVUqwO/uTKBH0D/OTSD?=
 =?us-ascii?q?kiHjVwqzPuFUkCGbIBtetZmnfRZwEmfjVszpax2hPN9zjD072rk0hnLMNW4BPj?=
 =?us-ascii?q?lwaUJNrruM7SxGhvVzAXBO7n1gLeOcgSaW8/HYKooKsftsGil0i+Na4HEgx7RJ?=
 =?us-ascii?q?9i1LWPx1lzXUrtN1p1Gmk++PyidoURZUqzZLgp6LsltmOanD6pZAXnPE9goX7W?=
 =?us-ascii?q?qMExQKu8dlCtr3tqFQ0NfPkqfzKDZE893M/MocB9LbKMSIMHc6NRrpGTjUDBYK?=
 =?us-ascii?q?TDKxNGHfgVBdn++W9nGPspc6rZ3sy9IyTepyUlAvG+xSL0N/ANsEaMN+XSshub?=
 =?us-ascii?q?qaitMYoHS5sR/dTdlbuZaBUeidV6bBMjGc2EG8L08EmOyhdd9Ob9bT1Elra108?=
 =?us-ascii?q?l4PPTRmDFetRqzFsO1dn6H5G92JzGyhqgxro?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACe5wBch0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwFDgReBD4ECJ4N5g3uEHYwIgg0Uh2GBBgKBCY1AFIF?=
 =?us-ascii?q?fLA8EAYRAgzQiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBA?=
 =?us-ascii?q?iAEGQEbDwUJAQMCCQEBBQMCCwMHAwICIwMCAgMeAQERAQUBCxEGEwWDHAGBaAE?=
 =?us-ascii?q?DFQUKiymQBzyLDXwWBQEXgncFgTEBCwGDAgoZJw1dMYEGAgEFEnmJb4EdghYma?=
 =?us-ascii?q?4MSglcuGQQYgQAUAQsHAR8sgliCVwKBKgEBAYdiCg4BgXGFBI9bLQEGAgGBU4U?=
 =?us-ascii?q?shk09gy0YgVojhG2KMo1cgQuJYTCBJYEccXCBAW2BToIbDBd/AQKCSIUUhUwyM?=
 =?us-ascii?q?wEJAnkBAYs0DxeCJwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAACe5wBch0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwFDgReBD4ECJ4N5g3uEHYwIgg0Uh2GBBgKBCY1AFIFfLA8EAYRAgzQiN?=
 =?us-ascii?q?AkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAiAEGQEbDwUJAQM?=
 =?us-ascii?q?CCQEBBQMCCwMHAwICIwMCAgMeAQERAQUBCxEGEwWDHAGBaAEDFQUKiymQBzyLD?=
 =?us-ascii?q?XwWBQEXgncFgTEBCwGDAgoZJw1dMYEGAgEFEnmJb4EdghYma4MSglcuGQQYgQA?=
 =?us-ascii?q?UAQsHAR8sgliCVwKBKgEBAYdiCg4BgXGFBI9bLQEGAgGBU4Ushk09gy0YgVojh?=
 =?us-ascii?q?G2KMo1cgQuJYTCBJYEccXCBAW2BToIbDBd/AQKCSIUUhUwyMwEJAnkBAYs0Dxe?=
 =?us-ascii?q?CJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="53287093"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 23:35:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726773AbeK3Sng (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 13:43:36 -0500
Received: from mail-ed1-f66.google.com ([209.85.208.66]:39091 "EHLO
        mail-ed1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726386AbeK3Snf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 13:43:35 -0500
Received: by mail-ed1-f66.google.com with SMTP id b14so4030853edt.6;
        Thu, 29 Nov 2018 23:35:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=ZeVRf0hnoaZGS0bS6HbdpiG6cOG6En+3uKGM+WudBnY=;
        b=lvvBSCtMRnRYxgw/naWWJ1Ac8lUiS0wcuxFUSAo0dTf2ynFTcn06m0REwBILDFH8NZ
         kkNrB7/CZGQbectTigV3w11mDPwDnxCYxxwAVQvNw8dDtNk51ETf8xICOtl31xnwAsVA
         2WUHaz11BCAf3YsOP8j0xzt1qN3uAEmEcj5FCZ6kOvVqAiaG+DVgik9Mefb9Lk7GahAn
         o6rzCuhPZuVWqSUA0BjecXHSqjVQFUWxfciImQIVOPttJnFb7E+31HPGJgFMrNFuNuQx
         yS9og8D7EPQs1L1MnQCJ9uKgT/O6GGXv5JAvWBZhCm/9t3p1SHJ66jd/XYQT1jzvggXC
         X5pA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=ZeVRf0hnoaZGS0bS6HbdpiG6cOG6En+3uKGM+WudBnY=;
        b=lwvqkSZvGBsgAuO6DAbv6duTfwz9fYZM5Oewc25SlqENyQ6bv4ZlMWicS25OW0aCjH
         2NGqBM+9OVwQAaS/7JdzNLXCiQiPBAJnLfxxPu33p4ZlMyZVlv0EdFnKjvpLPE9ijgnd
         K9bR2lZGgLgX8PkHg/ec8mt2PbsnfgJ8uIjz1TKuSlvgZe1YCEhQE3syI6o6V8lpQg3B
         Bu8lDvf1A8ruds7Qwx56Zrm1nj9VQe7NgWFOCOYjEOwLnwlGVbAEBTgT+E6uCOjrF+JV
         6yjk3pkauJPiKjwVz7xTs/DZr92wGx5TVq/EdSkr3HugxoILMdnPToauI/VbT/0tmzHG
         YvEQ==
X-Gm-Message-State: AA+aEWZYoIADBCW/f321w89/5ATRKx3q14cS4Ja+Ekf+5bLunWbHhzgY
        rp0DwmsOXCiX//D3ho8dqbdO6FUUBGw3D/hgzjc=
X-Google-Smtp-Source: AFSGD/Ud1DdgVrOIQqxXwquvVg7mrBAUYdAxYgG0ZKwQZnc6DdQo1lCvN3AnaCjOi1T1DwHcV+4j+auEQv7T8+exgUo=
X-Received: by 2002:a50:aa31:: with SMTP id o46mr4287566edc.23.1543563311345;
 Thu, 29 Nov 2018 23:35:11 -0800 (PST)
MIME-Version: 1.0
References: <18d54cd3edbf4fd3a7c01962f41ead58@cnbox5.mioffice.cn>
In-Reply-To: <18d54cd3edbf4fd3a7c01962f41ead58@cnbox5.mioffice.cn>
From: =?UTF-8?B?56iL5rSL?= <d17103513@gmail.com>
Date: Fri, 30 Nov 2018 15:34:55 +0800
Message-ID: <CADd0cq2xp2_Nk2dF_3BuS7+226MBSzHsgAtAwKLO5KbXrugi7A@mail.gmail.com>
Subject: Re: > [PATCH] Security: Handle hidepid option correctly
To: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexey Dobriyan <adobriyan@gmail.com>,
        David Howells <dhowells@redhat.com>,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Al Viro <viro@zeniv.linux.org.uk>,
        Johannes Weiner <hannes@cmpxchg.org>,
        Davidlohr Bueso <dbueso@suse.de>, linux-kernel@vger.kernel.org,
        linux-fsdevel@vger.kernel.org, panshuangquan@xiaomi.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Andrew's question makes me think if this fix is superficial. Actually
i have had same question. But when i saw a smilar patch in kernel-4.4
was already merged in 2012, i decided to submit this patch first.

Here is the call stack i got:
[    0.003450] [<ffffff8bef2a0190>] proc_mount+0x2c/0x98
[    0.003459] [<ffffff8bef22e560>] mount_fs+0x164/0x190
[    0.003465] [<ffffff8bef24c138>] vfs_kern_mount+0x74/0x168
[    0.003469] [<ffffff8bef24c244>] kern_mount_data+0x18/0x30
[    0.003474] [<ffffff8bef2a0258>] pid_ns_prepare_proc+0x24/0x40
[    0.003484] [<ffffff8bef0cd5ec>] alloc_pid+0x498/0x4b4
[    0.003492] [<ffffff8bef0a9b94>] copy_process.isra.73.part.74+0xed0/0x17=
08
[    0.003496] [<ffffff8bef0aa560>] _do_fork+0xdc/0x3f8
[    0.003501] [<ffffff8bef0aa8c8>] kernel_thread+0x34/0x3c
[    0.003511] [<ffffff8bf00cd498>] rest_init+0x20/0x80
[    0.003522] [<ffffff8bf0c00c7c>] start_kernel+0x3e4/0x43c
[    0.003527] [<ffffff8bf0c001e8>] __primary_switched+0x64/0x90
I notice only proc filesystem has function "pid_ns_prepare_proc".
there is no other "pid_ns_prepare_xxx" function in other filesystem.
Take the position of proc filesystem of kernel into consideration, the
answer of question "Other filesystems parse the options from
fill_super().  Is proc special in some fashion" could be "Yes, it is.
Because proc filesystem is special indeed. It's a filesystem kernel
will mount when it's booting".

But is it enough? Is anyone responsible for deinitialize sb->sroot?
Well actually i'm not an expert of filesystem, and don't unserstand
what does sb->s_root represent for. But i'm sure no one call
"pid_ns_release_proc" in the runtime(by add some logs). And even it is
called, it doesn't clean sb->s_root. Until now, i didn't see any
deeper issue. Maybe it's true that we should handle proc filesystem
specially.

If anyone who is sure about the functionality of sb->s_root and think
it should be handled in another way, feel free to correct me.


=E7=A8=8B=E6=B4=8B <chengyang@xiaomi.com> =E4=BA=8E2018=E5=B9=B411=E6=9C=88=
30=E6=97=A5=E5=91=A8=E4=BA=94 =E4=B8=8A=E5=8D=8810:34=E5=86=99=E9=81=93=EF=
=BC=9A
>> Here is an article illustrates the details.
> https://medium.com/@topjohnwu/from-anime-game-to-android-system-security-=
vulnerability-9b955a182f20
>
> And There is a similar fix on kernel-4.4:
> https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit=
/?id=3D99663be772c827b8f5f594fe87eb4807be1994e5
>
> Q: Other filesystems parse the options from fill_super().  Is proc specia=
l in some fashion?
> A: According to my research, start_kernel will call proc_mount first, and=
 initialize sb->s_root before any userspace process runs. If others want to=
 mount it, all options will be ignored.
>      AOSP change here: https://android-review.googlesource.com/c/platform=
/system/core/+/181345/4/init/init.cpp
>      At first I though we should mount it with MS_REMOUNT flag. But kerne=
l will crash if we did this.
>
> Q:  Why is this considered to be security sensitive?  I can guess, but I'=
d like to know your reasoning.
> A: See the article above. It's part of Android sanbox.
>
>
> > [PATCH] Security: Handle hidepid option correctly
>
> Why is this considered to be security sensitive?  I can guess, but I'd li=
ke to know your reasoning.
>
> On Thu, 29 Nov 2018 19:08:21 +0800 mailto:d17103513@gmail.com wrote:
>
> > From: Cheng Yang <mailto:chengyang@xiaomi.com>
> >
> > The proc_parse_options() call from proc_mount() runs only once at boot
> > time.  So on any later mount attempt, any mount options are ignored
> > because ->s_root is already initialized.
> > As a consequence, "mount -o <options>" will ignore the options.  The
> > only way to change mount options is "mount -o remount,<options>".
> > To fix this, parse the mount options unconditionally.
> >
> > --- a/fs/proc/inode.c
> > +++ b/fs/proc/inode.c
> > @@ -493,13 +493,9 @@ struct inode *proc_get_inode(struct super_block
> > *sb, struct proc_dir_entry *de)
> >
> >  int proc_fill_super(struct super_block *s, void *data, int silent)  {
> > -struct pid_namespace *ns =3D get_pid_ns(s->s_fs_info);
> >  struct inode *root_inode;
> >  int ret;
> >
> > -if (!proc_parse_options(data, ns))
> > -return -EINVAL;
> > -
> >  /* User space would break if executables or devices appear on proc */
> >  s->s_iflags |=3D SB_I_USERNS_VISIBLE | SB_I_NOEXEC | SB_I_NODEV;
> >  s->s_flags |=3D SB_NODIRATIME | SB_NOSUID | SB_NOEXEC; diff --git
> > a/fs/proc/root.c b/fs/proc/root.c index f4b1a9d..f5f3bf3 100644
> > --- a/fs/proc/root.c
> > +++ b/fs/proc/root.c
> > @@ -98,6 +98,9 @@ static struct dentry *proc_mount(struct file_system_t=
ype *fs_type,
> >  ns =3D task_active_pid_ns(current);
> >  }
> >
> > +if (!proc_parse_options(data, ns))
> > +return ERR_PTR(-EINVAL);
> > +
> >  return mount_ns(fs_type, flags, data, ns, ns->user_ns,
> > proc_fill_super);  }
>
> Other filesystems parse the options from fill_super().  Is proc special i=
n some fashion?
>
> #/******=E6=9C=AC=E9=82=AE=E4=BB=B6=E5=8F=8A=E5=85=B6=E9=99=84=E4=BB=B6=
=E5=90=AB=E6=9C=89=E5=B0=8F=E7=B1=B3=E5=85=AC=E5=8F=B8=E7=9A=84=E4=BF=9D=E5=
=AF=86=E4=BF=A1=E6=81=AF=EF=BC=8C=E4=BB=85=E9=99=90=E4=BA=8E=E5=8F=91=E9=80=
=81=E7=BB=99=E4=B8=8A=E9=9D=A2=E5=9C=B0=E5=9D=80=E4=B8=AD=E5=88=97=E5=87=BA=
=E7=9A=84=E4=B8=AA=E4=BA=BA=E6=88=96=E7=BE=A4=E7=BB=84=E3=80=82=E7=A6=81=E6=
=AD=A2=E4=BB=BB=E4=BD=95=E5=85=B6=E4=BB=96=E4=BA=BA=E4=BB=A5=E4=BB=BB=E4=BD=
=95=E5=BD=A2=E5=BC=8F=E4=BD=BF=E7=94=A8=EF=BC=88=E5=8C=85=E6=8B=AC=E4=BD=86=
=E4=B8=8D=E9=99=90=E4=BA=8E=E5=85=A8=E9=83=A8=E6=88=96=E9=83=A8=E5=88=86=E5=
=9C=B0=E6=B3=84=E9=9C=B2=E3=80=81=E5=A4=8D=E5=88=B6=E3=80=81=E6=88=96=E6=95=
=A3=E5=8F=91=EF=BC=89=E6=9C=AC=E9=82=AE=E4=BB=B6=E4=B8=AD=E7=9A=84=E4=BF=A1=
=E6=81=AF=E3=80=82=E5=A6=82=E6=9E=9C=E6=82=A8=E9=94=99=E6=94=B6=E4=BA=86=E6=
=9C=AC=E9=82=AE=E4=BB=B6=EF=BC=8C=E8=AF=B7=E6=82=A8=E7=AB=8B=E5=8D=B3=E7=94=
=B5=E8=AF=9D=E6=88=96=E9=82=AE=E4=BB=B6=E9=80=9A=E7=9F=A5=E5=8F=91=E4=BB=B6=
=E4=BA=BA=E5=B9=B6=E5=88=A0=E9=99=A4=E6=9C=AC=E9=82=AE=E4=BB=B6=EF=BC=81 Th=
is e-mail and its attachments contain confidential information from XIAOMI,=
 which is intended only for the person or entity whose address is listed ab=
ove. Any use of the information contained herein in any way (including, but=
 not limited to, total or partial disclosure, reproduction, or disseminatio=
n) by persons other than the intended recipient(s) is prohibited. If you re=
ceive this e-mail in error, please notify the sender by phone or email imme=
diately and delete it!******/#
