Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:38:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 60B3F580460;
	Fri, 23 Nov 2018 17:54:41 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 17:54:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AoI5qJR1xw7GnerresmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSIvXxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPH4Cy?=
 =?us-ascii?q?b5EBD+UOIelXsobzqFkAohu/HgmsHOHixyRUhnL1x6A2z/gtHBvb0AEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKS+661q/IwCjCb/xM3zf29Y/FfQsgof6WW7JwadDeyU8xGw/Zk1md?=
 =?us-ascii?q?qJfoMy6U2+kDqWSU8+1gVee2hmMhtgp/oSCvy98yhoXVgo8Z0E3I+CtnzIovON?=
 =?us-ascii?q?G1S1J3bcSlHZZSry2WKpd6T8I4T211pio21qcKtYCmcCUE0pgqwx/SZvqaeIaS?=
 =?us-ascii?q?+B3jTvyeITJgiXJlZr2/gxGy/FC+yu3zSMa0ykxGrilbndnWsHACyRjT5tKASv?=
 =?us-ascii?q?tn8UetwTeP1wbN5eFYOU04i7bXJpo7zrItmJcfr17PEjL1lUnqlqObd0cp9vCt?=
 =?us-ascii?q?6+v9Y7XmopGcN5VzigH7Kqkuns2/AeIlMgkBRmSb+vqz1Kfl/ULnRLVGl/o2k6?=
 =?us-ascii?q?ffsJ/EP8QWvbC5AwBL3YY58Rq/DCmp0M4enXYZKFJJYhWHj5LmO13WOvD3Ee+/?=
 =?us-ascii?q?g0iwkDds3/3GOrzhApbTIXTZn7bhYK1w60pdyAo10NBe6IhYCrAHIPLvREDxsM?=
 =?us-ascii?q?bUAQM+Mwyx2+znEsly1psCWWKTBa+UKKPSvkWJ5uIzOeaMY5UZuDbgK/c/4f7u?=
 =?us-ascii?q?gmQ0mVscfamvwJsWZ2q0HvVgI0WFf3Xshs0NHnsNvgo7VObqkkGNUSZPZ3auWK?=
 =?us-ascii?q?Ix/jM7CIW4AovZRYCth7qB3CG8HpBNYmBGC1aMEWrndomeWvcMbj6SLdFlkjAe?=
 =?us-ascii?q?SbehTIoh3wm0tADm07pnMvbU+ioAuJ35z9h15+rTlRIo+TxuFcud0XqAT2V1nm?=
 =?us-ascii?q?MOWj8307pzoU17ylefz6d4h+ZUGsBU5/NMSg06L4LTz/RmC9DuXQLMZtSJR0yg?=
 =?us-ascii?q?Qtm8BTExT8g+w9kBY0tmH9WijxbD3zelArMPlryLAoA0/bzY33TrO8l9zHPG3r?=
 =?us-ascii?q?E7j1Y6WstPKXGmhqln+gfOHYHJjVuWm7yqdasG2i7N73mMzWyJsEFcUw5wVKHF?=
 =?us-ascii?q?UGsbZkvXq9T5+0zDQ6WvCbQhLgtO18qCJrFWZd3uiFVMXO3jN8jGY2Kth2ewAg?=
 =?us-ascii?q?6Fya6WY4r0ZWoRxiXdB1ICkwAI43mGMxMzBiOgo2LYETxvGkjjY0Lq8elitny7?=
 =?us-ascii?q?SlU4wB2Nb01kz7C14AIaheSAS/MP2bIJoDshqzRxHFa6w9LWC9qBqxB9fKlGZt?=
 =?us-ascii?q?M9+lNH1WPftwxyJZGgK6FihlgDcwV4pU/u1hN3Cplensgutn8l0A1yKaeA2lNb?=
 =?us-ascii?q?azyYxYzwOqHQKmTq5h+vb7DZ217A39eW4KsA8+k4pEj5swGvFUoi9Gtn3sJR03?=
 =?us-ascii?q?ud4JXKEQUTXYjwUkYx6xh1ubXabjMh6IPT0H1mKbO0vSPa29I1GOslzQ6tftdC?=
 =?us-ascii?q?MK+eCAD+CcwbB8i0J+wslFikdRYEPOFU9K4pMMKqbfqG2Ki3POl+mDKql3hI4I?=
 =?us-ascii?q?d40kiU7SpzVvbI34oZw/GfxgaHTTb8g0u7vcDthI9EYiseHmyhxij+BY5df7F9?=
 =?us-ascii?q?cpwPCWizPcK33NJ+h5j2Vn5c9V6jAU4G2cCzdRqTaVz9wRNf1UANrXO7niu4yi?=
 =?us-ascii?q?R+kys1oaqHwCzO3+PieQIHO25KXmVjjU3gIZOpj9AcR0WoawkplB245Uf13aRb?=
 =?us-ascii?q?paJ/L3XNTkdMZST5M2ZiUq6ovLqYf8FP8I8osTlQUOmkY1CVUKT9oxgZ0yPkBW?=
 =?us-ascii?q?de3yo0dzKpupX4mRx1lmSdIW13rHrYf8Fw2Bje6MbdRf5XwjoJWi14hSPLCVi7?=
 =?us-ascii?q?Otmj5c+UmIvbsuCiS2KhUYVecCnxwoOHrie752xqARukkvC3m93nFxU60CDh29?=
 =?us-ascii?q?lrUyXIsAjzYo3x26umNuJne1FiBEXg5MpiBoF+jowwiYkT2XcAh5WZ53oHkXrp?=
 =?us-ascii?q?PtVd1qLzd34NRT8Nw97I7wnpwkxjLnSVx43nUnWR2NduZ96/YmkOwCIy89hKCL?=
 =?us-ascii?q?uI7LxDhSZ1p1u4rQHLbvRnkDYS1+Au6GIEjOETowUi0D+dAr8JEElcPCzskQmI?=
 =?us-ascii?q?7t+koKVWYmavbaa/1E5kkd+9C7GCpxlWWGzldZc6AS9w8sJ/PUrQ0H3074HoYt?=
 =?us-ascii?q?jRYsgVth2JiBfAlOlVJYk1lvoLgypnJG38sWcky+49kRxhw5W6sJKbJGVq+aKz?=
 =?us-ascii?q?GgRYOSHtZ8MP5jHtir5Tkd2M0ICoGpVhBy8HXJ/1Tf+zFDIStPLnNxuBETEmq3?=
 =?us-ascii?q?ebH6bfEhGb6Et8s33PFJWrPWmNJHYF1dViWAWdJEtHjQAWRjo6m4A2FhuwyMz9?=
 =?us-ascii?q?akt55S0R5l3lqhtK0O1oLALyUmPepAeudzc1R4KTLBtQ7gFe+UjVNdaS4f50Hy?=
 =?us-ascii?q?Fd5pehthCCKnSHZwRUCmEEQkyFB1f+Prm3+NnP6e6YCvClL/vJZ7WOpvdTV/OJ?=
 =?us-ascii?q?xZKpz4tn8CyANsSJPnl+EfI73lBPUmx+G8Tcgz8PUTAYlzrRb86Hoxex4i13od?=
 =?us-ascii?q?6+8PToWwLv5JGDC7hIMdVo9BC5n72DN/OLhCtiLTZY15UMxWLHybQF3V4SjT1u?=
 =?us-ascii?q?eCepEbgaqSHNS6fQkLdNDxEHcyNzKNdI76Uk0wZXJM7Ukcn12aB4j/IvD1dFVE?=
 =?us-ascii?q?fsmsWoZcwMPmG8O0nLBEeNNLSaOzLLx9v7br+7Sb1VlO9UrQG/uS6HE0//OTSO?=
 =?us-ascii?q?jyXpVxGqMe1WkC6XJgBRuIGjfRZrEmXjSNPmahumMN54lzE2wLs0hm/UOm4YKz?=
 =?us-ascii?q?Rzb0RNrriI5yNCnvp/A3BB7mZiLeScmyeW9e/YKpMXsfttGit1luJa7248y7ta?=
 =?us-ascii?q?9yxEQP11mC3Prt9huV2mk++PyiZ5XxpKsDpEmIWLvUAxcZneo6dBUH3E8QkJ5H?=
 =?us-ascii?q?vYJwkAqspmDZW7oKRZ1NHnmL/5JSZB9JTf+s5KVPLZMMaWDH10CRPvMj/dCkNR?=
 =?us-ascii?q?Rz+iM3nWgRYFya+6ryPO6JM9r86/toAJT+pjXVofF/ocQhBvHdUEOJ5xBGt9z5?=
 =?us-ascii?q?bC0pVO7n27+kqCDP5Gt4zKA6rBSc7kLyyU2PwdP0MF?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAAervhbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwEBg2onCoh0gxOMAIINFIhlJA+OEIFuMRMBhDYFA4Q?=
 =?us-ascii?q?cIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDEIBAQEDBwKBZSQBgmEBAQEBAgEBA?=
 =?us-ascii?q?iQLAQ0BATcBBQkBAQoOCgklAwwFSRMFFoMGgWkBAQINBwEFpWeBbDOCdgEBBYI?=
 =?us-ascii?q?0gXoBJgEiBIIaCIwJghaEI4RHg2yCJoEsAQEBjmKPZA4BBgIBelyBMo4cI4lSg?=
 =?us-ascii?q?WuFS5l2gg1wgW4vgR+CGwwXg0qKXzQxgQUBASETgV4phxmBLgGBHgEB?=
X-IPAS-Result: =?us-ascii?q?A0AJAAAervhbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwEBg2onCoh0gxOMAIINFIhlJA+OEIFuMRMBhDYFA4QcIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDEIBAQEDBwKBZSQBgmEBAQEBAgEBAiQLAQ0BATcBBQk?=
 =?us-ascii?q?BAQoOCgklAwwFSRMFFoMGgWkBAQINBwEFpWeBbDOCdgEBBYI0gXoBJgEiBIIaC?=
 =?us-ascii?q?IwJghaEI4RHg2yCJoEsAQEBjmKPZA4BBgIBelyBMo4cI4lSgWuFS5l2gg1wgW4?=
 =?us-ascii?q?vgR+CGwwXg0qKXzQxgQUBASETgV4phxmBLgGBHgEB?=
X-IronPort-AV: E=Sophos;i="5.56,272,1539673200"; 
   d="scan'208";a="53130632"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 17:54:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729258AbeKXMlG (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 24 Nov 2018 07:41:06 -0500
Received: from m12-13.163.com ([220.181.12.13]:58618 "EHLO m12-13.163.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729235AbeKXMlG (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 24 Nov 2018 07:41:06 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=163.com;
        s=s110527; h=Date:From:Subject:Message-ID:MIME-Version; bh=Mia71
        0GVrkzIa0+UQuBOddn+CcnraMEfxnPJ31GICwg=; b=L2h/gIm+dr74pezFFWqeR
        JRV1UuUTdpoEx2mBiIbLgKiQ+TmmkEIQY74gzvWBtcpwY7BygWVGrKKireEUT9D2
        Jdxgn1jkbiLcX8Uy7sorYz4kiekHsk8Z3e7CWNN9kHbQmvt6LZzMiQDXttee30Px
        UTgv+kEPgJJMnMSbvsrP0A=
Received: from bp (unknown [106.120.213.96])
        by smtp9 (Coremail) with SMTP id DcCowAAnZcpOr_hbiqcSBg--.18944S2;
        Sat, 24 Nov 2018 09:54:22 +0800 (CST)
Date: Sat, 24 Nov 2018 09:54:23 +0800
From: PanBian <bianpan2016@163.com>
To: Viacheslav Dubeyko <slava@dubeyko.com>
Cc: Joe Perches <joe@perches.com>,
        Ernesto =?iso-8859-1?Q?A=2E_Fern=E1ndez?= 
        <ernesto.mnd.fernandez@gmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH] hfs: do not free node before using
Message-ID: <20181124015423.GB23256@bp>
Reply-To: PanBian <bianpan2016@163.com>
References: <1542963889-128825-1-git-send-email-bianpan2016@163.com>
 <1543020709.12764.3.camel@dubeyko.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <1543020709.12764.3.camel@dubeyko.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
X-CM-TRANSID: DcCowAAnZcpOr_hbiqcSBg--.18944S2
X-Coremail-Antispam: 1Uf129KBjvJXoW7tw1DGF47Xw1DXF4DKw45ZFb_yoW8Wr17pr
        yxCF42kF4DZ34IkrnavF1Fg34vyw4xJrs0kws5Cr1xZ3Z8Xr97Wr18KryY93W5ZrW8Z3yj
        qrs8G3sxWrsxZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU5nxnvy2
        9KBjDUYxBIdaVFxhVjvjDU0xZFpf9x07jNjjgUUUUU=
X-Originating-IP: [106.120.213.96]
X-CM-SenderInfo: held01tdqsiiqw6rljoofrz/xtbBzw4JclaD0ZEAlgAAs5
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 23, 2018 at 04:51:49PM -0800, Viacheslav Dubeyko wrote:
> On Fri, 2018-11-23 at 17:04 +0800, Pan Bian wrote:
> > The function hfs_bmap_free frees node via hfs_bnode_put(node).
> > However,
> > it then reads node->this when dumping error message on an error path,
> > which may result in a use-after-free bug. This patch frees node only
> > when it is never used.
> > 
> > Fixes: d614267329f("hfs/hfsplus: convert printks to pr_<level>")
> > 
> > Signed-off-by: Pan Bian <bianpan2016@163.com>
> > ---
> >  fs/hfs/btree.c | 3 ++-
> >  1 file changed, 2 insertions(+), 1 deletion(-)
> > 
> > diff --git a/fs/hfs/btree.c b/fs/hfs/btree.c
> > index 98b96ff..19017d2 100644
> > --- a/fs/hfs/btree.c
> > +++ b/fs/hfs/btree.c
> > @@ -338,13 +338,14 @@ void hfs_bmap_free(struct hfs_bnode *node)
> >  
> >  		nidx -= len * 8;
> >  		i = node->next;
> > -		hfs_bnode_put(node);
> >  		if (!i) {
> >  			/* panic */;
> >  			pr_crit("unable to free bnode %u. bmap not
> > found!\n",
> >  				node->this);
> 
> 
> What's about simply to store node->this into the local variable in the
> beginning of the cycle? In this case, it is possible to use the node ID
> in the pr_crit() and to use the hfs_bnode_put(node) in the same place
> without to use it twice. What do you think?

Of course, it is a solution. But I think doing like that does not really
simplify the code, as we have to declare an extra local variable, and
assign node->this to it...

Best,
Pan

> 
> Thanks,
> Vyacheslav Dubeyko.
> 
> 
> > +			hfs_bnode_put(node);
> >  			return;
> >  		}
> > +		hfs_bnode_put(node);
> >  		node = hfs_bnode_find(tree, i);
> >  		if (IS_ERR(node))
> >  			return;

