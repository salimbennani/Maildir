Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:58:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BD31D580375;
	Wed,  5 Dec 2018 11:44:17 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 05 Dec 2018 11:44:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aqx+othR4SDEP2mdGHKY1RGOOwtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRSPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBoxS8CgaiH+Pv0j1Fi2Tq3aA5z+gtDR3K0RY9E98IrX?=
 =?us-ascii?q?/arM/1NKAXUe2ty6fH1ynDb+9W2Tjj5onDbxAuofCIXb1sdsrQxlQkGgTLj1WR?=
 =?us-ascii?q?rYzlOzOU2/8Ms2id4epgT/ighHM5pA5rvzej3MAsipPGho8MzF3P6Ct3wIEwJd?=
 =?us-ascii?q?KiSU57Z8apEJ9TtyGfM4t6WMQiQ3tnuCs817YIuoa7cTAUxJg7wxPTceGLfoaW?=
 =?us-ascii?q?7h75SeqcIit0iGhkdb+9nxq+7Eytx+7mWsWp3ltHrDBJnsfQunwTzRDf98aKR/?=
 =?us-ascii?q?V780y8wziAzRrT5ftBIU0slarUNZohwrkom5oNvkTMADX2lF/1jKCIbEUk/Pan?=
 =?us-ascii?q?6+D9brXhvJ+cOJd4igD4MqswhsyyGfo0PhQKUmSB5Oix2qPv8VfkTLhJkvE6iK?=
 =?us-ascii?q?jUvZLCKcQevKG5AgtV0og56xa4CjeryNAYnXgBLFJYdxOLlovpNE/UIPD+E/i/?=
 =?us-ascii?q?h02gkDBlxvDAILLhGI7ALmbMkLj/Z7Zx8U1cxxQpzdBZ+Z1UDqsNIPXpWk/+rN?=
 =?us-ascii?q?DYFAM2MxSow+b7D9VwzoceWWOMAqCHKq/TvkKI6/krI+mNYo8VpTn8J+Ik5/7o?=
 =?us-ascii?q?kX82h1sdcbO10psQbXCyBu5mLFmBYXrwntcBFn8HvgokQ+zrlF2NSzlTa2yyX6?=
 =?us-ascii?q?Ih/D47Do2mAJzHRoCshryBwSi6EodXZmBAFlCDD3Poe5+YVPcLbSKYOtVhnSAc?=
 =?us-ascii?q?Vbi9V48h0gmjtA39y7V5NObU+SoYtZTl1Nhy/ODTkRAy9TppD8WSyW2NTmd0nn?=
 =?us-ascii?q?8WSD8yxqxwvUt9ylKb26hin/NYDcBT5+9OUgoiL5Hc1Ox6C9fxWg7bZNeGUlSm?=
 =?us-ascii?q?T86iATEwSNIx3tAPb1x8G9WkkhDMwS6qD6UJmLyMAZw+6rjc0GTpJ8Zh13bG07?=
 =?us-ascii?q?Esj1o8TctJL2Gmgq9/+BLVB47GiEiZk6eqdaIB3C/C7muDzGyOvF1GXw50S6nK?=
 =?us-ascii?q?QXcfZk7Op9Tj+kzCV6OuCaggMgZZ1MGNMLVKZcPzgVVGXvjjPs/ebHy3m2u3AR?=
 =?us-ascii?q?aIxbaMbI7xdmUZ3SXdDlUEkg8J8XaHMwg+Gjmuo2bEADNyElLvZlvm8fNip3Oj?=
 =?us-ascii?q?Uk800waKYlV82LWv5B4am+aQS/MJ0bICoycutTN0EU2539LXDdqAugVgcL9dYd?=
 =?us-ascii?q?M7/FdIy2bZuxZhMZynKqBonkQefBhvv0PyyxV3DZ1NkdQrrHMvywpyNaKY0VNb?=
 =?us-ascii?q?ezOEx5zwPafXKm3z/BCpZK7bwVXe0NeQ+qcS5/U0sVTjvAe1FkU893VrycVa03?=
 =?us-ascii?q?yZ5p/SFgodTYrxUlor9xh9v7zVeC096J3b1HJyMai4qCTN2880C+Q/zBagfNBf?=
 =?us-ascii?q?ML2fGQ/2Es0aAdWuKeMwl1ioaBIEIP5d9KouM8y6cPuG3bahPPx8kzK+kWRH/I?=
 =?us-ascii?q?d931qM9iphUOLHw4wJwvCY3gSdUTf8g0ysssT2mYBCeDETEXCzySniBI5NeKJy?=
 =?us-ascii?q?eZwHBnupI82y3t9+nYLiW2ZE9F6/AFMLwNWpeRuOYFPnxw1fyEMXrWahmSSm1T?=
 =?us-ascii?q?x0kiglobaF0yzK3uvtagAHOmlNRGR5iVfsII60j80VXUSybggpkgel6lj+x6RB?=
 =?us-ascii?q?uKt/KGzTS19SfyfqN2FiTrewtr2abs9P6ZMkqyVWXP6nYVCHTL7wuB8a0yLlH2?=
 =?us-ascii?q?tDyzE3bTCqupPlnxNkjGKRNmp8rH3cecto3xfQ+MTcReJN3joBXCR4iyPYBkK/?=
 =?us-ascii?q?P9mq+tWYjYzDvfq9V2KiV51TdzfkzYWbuSu/5G1qBwC/nv+plt3mFwg6zTH019?=
 =?us-ascii?q?1wWSrUqxb8Z5Hh176mPuJ/YkloGFj85tJ6G45klYs8npMQ2XkchpiO+XoHkGHz?=
 =?us-ascii?q?MchU2K7kbXoNQyILzMDR4AT/xEJjKXeJzZrjVnqB2sthe8W6YmQO1yI+9c9KCb?=
 =?us-ascii?q?2Y7LxZnSRvpFq4ohncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zE9+ndGiDL6YuA1dVmj2eow+HSBu9MVwK0zD0Gf86oz/fN?=
 =?us-ascii?q?nQbNQTtgCbkhvajuhVLo4xmeQOhSZ9JW39unglwfYhjRNyxZG6oJSHK2J18aKl?=
 =?us-ascii?q?BR5YMyf5ZsIJ9THrkKZehd2W34G0E5VlGzULWoboTP2yHDITs/TnKxiBEDkmpn?=
 =?us-ascii?q?iHHrrfGBeV6F16oHLXD5CrK3aXKWECwtp4QxmdIFFfjBoQXDUnhZM5EgGqxMr8?=
 =?us-ascii?q?cEZ2/DwR51j4qgdSxeJsLRXwTmDfpAKwYDcuVJefNAZW7h1F50rNM8yR9OdzED?=
 =?us-ascii?q?9D/pG7sAyBMG+bZxlLDWEUXEyLHUvjM6Kq5dnB9eiYG+W/I+HPYbWItexRSfOI?=
 =?us-ascii?q?yYiz3Yth+jaGLt+PMWV6D/0nxkpDWmh0GsTemzUSUiwXijjCb8iBqBen/S13qM?=
 =?us-ascii?q?+//e/vWALu44uPFrRTPc9u+xCwnaeMKeqQiDxlJjZf05MG3WXIx6QH3F4OlyFu?=
 =?us-ascii?q?cCGgEbQeui7MT6LQma5XAwQYayNpM8tI4Lwz3hNQOc7Akd710r94jvgoC1ZKT1?=
 =?us-ascii?q?Dhm8epZdAULGG5Ll/IGEGLNLGeLz3R3873eb+8SaFXjOhMrRKwpC2UE1X9MTWD?=
 =?us-ascii?q?jTXpUxGvPPpIjCGaOhxepY68fgxsCWjlUNLpdBm7PMVrgj0xxL0+nmnKOnIEMT?=
 =?us-ascii?q?hgb0NNqaWd7T9ZgvV6AWBO8mBpIvWEmymH6enVMZIWsfptAiRpmONW+nU6y71J?=
 =?us-ascii?q?7C5aQPx5gjfdrtlro1u+iOmA1iJnUAZSqjZMnI+KvV9tOaPc9plBX3bL5BMM7W?=
 =?us-ascii?q?WKBBQMqNtoEdnvu6FWytjSm6P/MjZC89TI/cQCA8jYMt6IMH0kMUmhJDmBJQ0Z?=
 =?us-ascii?q?TTmtJCnulUpUn/jaonSTspg9rImqiYgIQ7BSfFsvH/geBwJuG9lUc7ltWTZxtL?=
 =?us-ascii?q?eHkM4F+jKBrR3aQ9US6o/GUvaDKfTpJiyQgbRNa10P27yuftdbDZHyx0E3Mgoy?=
 =?us-ascii?q?p4/NAUeFGIkV+iA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAABaKQhch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYECJ4wSjA5SBoE1FIkMjiyBcS4HDAGHUyI0CQ0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiQLAQ0BATcBBQkBAQoYC?=
 =?us-ascii?q?RMSAwwFKCETBYMcAYF0DQUKpS+BbDOCdgEBBYEwAYV0AwWMHhd4gQeEI4MFhTG?=
 =?us-ascii?q?CJokRhyKQJQmHA4o0I4Fbj1SKDINmjFKCDTMaCCgIgycfgXyJAYVgHjOBBQEBi?=
 =?us-ascii?q?lIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ADAABaKQhch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYECJ4wSjA5SBoE1FIkMjiyBcS4HDAGHUyI0CQ0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQgNCQgpIwyCNiQBgmIBAgMBAiQLAQ0BATcBBQkBAQoYCRMSAwwFKCETBYM?=
 =?us-ascii?q?cAYF0DQUKpS+BbDOCdgEBBYEwAYV0AwWMHhd4gQeEI4MFhTGCJokRhyKQJQmHA?=
 =?us-ascii?q?4o0I4Fbj1SKDINmjFKCDTMaCCgIgycfgXyJAYVgHjOBBQEBilIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="56254957"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 11:44:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728458AbeLEToP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 14:44:15 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:36744 "EHLO
        bombadil.infradead.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727388AbeLEToM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 14:44:12 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=infradead.org; s=bombadil.20170209; h=In-Reply-To:Content-Transfer-Encoding
        :Content-Type:MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:
        Sender:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
        Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
        List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
        bh=mmbNXnLboc/4gvLXKLRKyRNNeEVA9d2POSwwCYCDKPI=; b=OOSQpjgGLwHg8uxTF2p4rofAqC
        M3LbucbBrPXovWBCQQ5UzMNAHvCz26X0trUfqIzytCn5xklM8al9mS6IC5kvaSQYZYX8J6fu6GeKb
        414qviafBAAPV7S+kjG2JNfWVQbVZ3763/nqC7hHbag+1+eE5TiA0QpqNXJO7Hn/nxMS4ZgXkGZ+N
        BH9l02ouN1I04DY8LdQhzN10HRTmy2RmpsCAFJJ4gBk4uJBnoWKkxi7t1HfrsCN6usCxQt53aIjxT
        HvvANywQUQPVESvfquBAWQPLM40Vrg6VdqOWowAeC5FPbFRmOKxhs/lPW9rD+iVtDDv8VjHQL5la1
        +aVQCdDg==;
Received: from willy by bombadil.infradead.org with local (Exim 4.90_1 #2 (Red Hat Linux))
        id 1gUd5d-0005m0-HJ; Wed, 05 Dec 2018 19:44:09 +0000
Date: Wed, 5 Dec 2018 11:44:09 -0800
From: Matthew Wilcox <willy@infradead.org>
To: Anthony Yznaga <anthony.yznaga@oracle.com>
Cc: linux-kernel@vger.kernel.org, linux-fsdevel@vger.kernel.org,
        adobriyan@gmail.com, akpm@linux-foundation.org, vbabka@suse.cz,
        sfr@canb.auug.org.au, kirill.shutemov@linux.intel.com,
        rppt@linux.vnet.ibm.com, mhocko@suse.com,
        alexander.h.duyck@linux.intel.com, hannes@cmpxchg.org,
        miles.chen@mediatek.com, n-horiguchi@ah.jp.nec.com
Subject: Re: [PATCH] /proc/kpagecount: return 0 for special pages that are
 never mapped
Message-ID: <20181205194409.GB11646@bombadil.infradead.org>
References: <1543963526-27917-1-git-send-email-anthony.yznaga@oracle.com>
 <20181205004836.GU10377@bombadil.infradead.org>
 <fa5b667d-ccfb-b11a-2aeb-b1007651f9ec@oracle.com>
 <20181205012534.GW10377@bombadil.infradead.org>
 <540f7690-5fcd-04d6-edb3-a44ebd09e70c@oracle.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <540f7690-5fcd-04d6-edb3-a44ebd09e70c@oracle.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 05, 2018 at 11:40:51AM -0800, Anthony Yznaga wrote:
> On 12/04/2018 05:25 PM, Matthew Wilcox wrote:
> > On Tue, Dec 04, 2018 at 05:18:32PM -0800, anthony.yznaga@oracle.com wrote:
> >> On 12/04/2018 04:48 PM, Matthew Wilcox wrote:
> >>> On Tue, Dec 04, 2018 at 02:45:26PM -0800, Anthony Yznaga wrote:
> >>>> +static inline int page_has_type(struct page *page)
> >>>> +{
> >>>> +	return (PageType(page, 0) &&
> >>>> +	       ((page->page_type & PAGE_TYPE_ALL) != PAGE_TYPE_ALL));
> >>>> +}
> >>>> +
> >>> I think this is a bit complex, and a bit of a pain to update as we add
> >>> new page types.  How about this?
> >>>
> >>> 	return (int)page_type < -128;
> >>>
> >>> (I'm open to appropriate #defines to make this more obvious that it's ~0x7F)
> >> I thought about having this:
> >>
> >> #define PAGE_TYPE_END    0xffffff80
> >>
> >> static int inline page_has_type(struct page *page)
> >> {
> >>     return page->page_type > PAGE_TYPE_BASE &&
> >>            page->page_type < PAGE_TYPE_END;
> >> }
> >>
> >> But I opted for the additional complexity to avoid more false-positives from
> >> possibly corrupted values.  I'm certainly fine with a simple approach, though.
> > The way I'm thinking about this field is that usually it's _mapcount
> > which is 0xffffffff to represent 0.  We allow a certain small amount
> > of underflow and still treat it as a mapcount.  We also allow for some
> > amount of overflow.  So to be utterly precise, what you had there would
> > have been fine, but for simplicity, I'd rather just do a signed compare
> > against -128.
> The signed compare does not allow for mapcount overflow.  Is that acceptable?
> False-positives would be benign for /proc/kpagecount though from a debug
> perspective it could be helpful to see overflowed mapcounts.  Some future
> caller would need separate consideration.

Nobody seems terribly interested in mapcount overflows.  I got no response
to https://lkml.org/lkml/2018/3/2/991
