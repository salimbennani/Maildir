Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:53:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9F0BA580117;
	Mon,  3 Dec 2018 00:11:04 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga006-1.jf.intel.com with ESMTP; 03 Dec 2018 00:11:04 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4KLdNRxhzlbZFALXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ekfI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOSM3/m/UkcxwlKBWrQm9qxBj2YPYfJ2ZOOZicq7bYNgURXBBXsFUVyFZBY2z?=
 =?us-ascii?q?dZAPAPAdPelCrInyuUYFohmiCAerGO7h1CZGjWLx0Kw6yeshFBvJ3BAnH98Vqn?=
 =?us-ascii?q?Tbssj6NKcIXuCp1qXH0TLDb/ZP1Dr79YPGcQghrOmSUb5sdcfd01QjGg3bglmK?=
 =?us-ascii?q?tIDoPC+Z2v4MvmWZ9+ZtVOOih3Q6pwxyoDWj3Nkgh4fHi44PyF3J+yN0y5svK9?=
 =?us-ascii?q?KiUk50e9ukHYNQty6EM4t2RdsvQ39nuCkk0L0Ko527czYQyJQh2RHfb+aLc4+S?=
 =?us-ascii?q?4hLsTOqRIDF4i2x5eL+nmRq+7UytxvfhWsS6zlpGtDdJn9rQunwX1hHe6NCLSv?=
 =?us-ascii?q?5n8Ueg3TaP2RrT6uZBIU0skarbKpghwqM/l5YKskTMADX2mEPog6+Sb0kk/eap?=
 =?us-ascii?q?6+L5bbX8vZKcKYB0hR/kMqg0mcywH/44Mg4QUGif4+i806fj/ULhTLVQkvI2ir?=
 =?us-ascii?q?XZsIzdJckDoq65AgxV3Zg55xewEjery9AYnXgBLFJYdxOLlYnpO1fSIP/mCfez?=
 =?us-ascii?q?mUijkDBux/reJL3uHo3NLmTfkLfmZbt961RTyAsvzd9F4JJYELEBIO/pVU/3u9?=
 =?us-ascii?q?zVFRs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+OUfo8apC79K+Q55/7p?=
 =?us-ascii?q?lXI5m1gdcrez0ZsUb3C4GPJmI0KCbHrog9cBF3oKvwUkQOzrjl2CTSBcZ3KoU6?=
 =?us-ascii?q?0g4TE7DZqsDZ3fSYC1nLyBwCC7E4VMaWBdClCMFnToe5+eW/gWaiKfOcthkj0C?=
 =?us-ascii?q?Vbi8RI4tzxCutAnmy7V5KurY4DEXtZXm1NJt/e3ciQky9SBoD8Say2yNTHt7nm?=
 =?us-ascii?q?USSz8y3aBwu0p9yliY3Kh8gvxYE8FT5vxTXgc7M57c0/J1C9ToVg3dedeJTU6s?=
 =?us-ascii?q?Qs+6DjEpUtIx39gObl5gFNq4kBDMwTCmA78PmLyNH5w77KTc03/1J8Z+znbG0L?=
 =?us-ascii?q?Isj10nQstJKG2nibRz9wnVB47VjUqZk7ymergb3C7I7G2D13aBvFlEUA5sVqXI?=
 =?us-ascii?q?RW0QaVHIrdvn/E/CT6WhCbI8MgRfz86PMa9KatzvjVVbS/bvItXeY2Stm2iuAR?=
 =?us-ascii?q?aE3K+DbI3ve28FxiXSFFAEkxwP/XaBLQU+Giaho2fZDDxyFVLuY1ng8fVkpHO8?=
 =?us-ascii?q?VE80ywCKb0tu17eu/h4VhPqcS+4c374euSchrSl0E0i5397MF9WAoA9hdr1GYd?=
 =?us-ascii?q?wh+FdHyX7ZtwtlM5O6K6BtmFEffBp3vk/0zBp3F5hPntIsrHMpywpyN7mV0FdA?=
 =?us-ascii?q?dzOewJDxNafbKmj0/BCzdaHW3kvS38qR+qcK8P44sUnsvBm1Fko+9HVqy9lU02?=
 =?us-ascii?q?aG6prWFgYTUJLxXVwx9xh1vLzaZig954XJ1XxjK6W0sznC2843C+sh0BqvY9Bf?=
 =?us-ascii?q?MKacHg/oD8IaH9SuKPAtm1WxdBIEPfxd+7QuP8y7cPuKwqirM/h6nDKnlGhI/J?=
 =?us-ascii?q?py0kaR+CViUO7I2JAFzuqc3guGUTf8kVigvtr2mYBCeTEdAG6/xTL4C45WY614?=
 =?us-ascii?q?ZZwLBnu2I82r2tV+gIbgWn5Z9FK5B1IKwtSpeQeUb1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUiqdQcpjhil5UX9x6RB?=
 =?us-ascii?q?v6RwNWrTQURJfyjwMW5iVLC9tr6DY85J9ZMpvj9bUOW6YVCGVLH9pwEW3D/kH2?=
 =?us-ascii?q?tb3Do7bS2luo3lnxxmj2KQNHZyo2Deec1qxxff5drcSOVV3joHQil4lDbWCkK9?=
 =?us-ascii?q?P9mv4dWbiZPDvvqiWGKmU51ZaTPrwp+YtCun+W1qBgWyn/Opld3mCwQ60TL72M?=
 =?us-ascii?q?NsVSXHtxv8Zojr16KnMeNoZEVoBVn869ZkFYF6iIc/mJYQ2X0CjJWP4XUHiXvz?=
 =?us-ascii?q?Mclc2a/maXoNRD0LzMTP7AnrxkJjNW6JyJzjVnqG3MRhfda6b3gS2iI86cBKFa?=
 =?us-ascii?q?iV4KZFnStzvlq3swbRbeJhkTcazPsk8GQajP0RuAox0iWdBagfHVVfPSzpjRiJ?=
 =?us-ascii?q?7sqxrKNKZGa0ariw1VFzndSgDLGEvwFdV2z1epYkHS9s8Mp/NEjA32H06oHhYN?=
 =?us-ascii?q?PQd84ctgWIkxfciOhYMIk+meANhSpjJGLxp3kly/MggBxq3JG6upWHKmp38KK4?=
 =?us-ascii?q?BB5YKiP6Z8cJ9j7xiqZem96c35qzEZV5BjULQJzoQOqqED0IsPToKR2OHCcgqn?=
 =?us-ascii?q?uBGrrfAAyf6Fpgr33VCJCmLHWXJHgfzdV/SxiRPk1fgAYIXDokmp41DBylxMvk?=
 =?us-ascii?q?cE1h/DAe+kb4qgdQyuJvLxT+UmDfpBqxajcpUpefKgBa7hpF50fTPsyT9eZzHy?=
 =?us-ascii?q?Be/p28ow2BMG2bZwJUDW4XXkyIHUzsPr6r5dPY6eiXGvK+L+fSYbWJseFeV+mH?=
 =?us-ascii?q?xZOs0otl/jaALMaPPmNlD/00xEVDR215G9/CljULSiwXkT/NbsGBqBe9/C13st?=
 =?us-ascii?q?6w8PDxVA3z4ouPDqNYMc9z9BCunaeDK+mQiT5jJjZFzZwM32HHybgF0F4WiiFj?=
 =?us-ascii?q?bD2tEbUGtS7QQ6PcgK5XDxgHayxtMMtE9b4z3g5IOcTDkNP6yqZ4juIpC1dCTV?=
 =?us-ascii?q?HhhsCpZckQL26hLl/IGEaLO6qAJTDQx8H3YKW8SaBfjelOth2wvyqbHFHnPjiZ?=
 =?us-ascii?q?izbpUBWvO/lWjC6HJBxepJ29chF1BGnjVt3mbBi7MN5xjTIuwLw0hmnFNWgTMT?=
 =?us-ascii?q?Vnd0NNr7uQ7T5Xg/llGmxB6GZlIveAmyqD8+bYLZMW4rNXBXFwluRH8DE00LdY?=
 =?us-ascii?q?8ixAbOJ6lTGUrdN0pVyi1O6VxWlJSh1L/xNCn4uXtEZvcZTw07B8fj6Q7RsI5H?=
 =?us-ascii?q?mXIw4Hq9tsFpvkvKUGmYuHr776NDoXq4GcxsAbHcWBcM8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAA45ARch0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMEV+LKoIhlzSBcRYYEwGHfyI0CQ0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgpL4I2IoJsAiRSBgkCUAMcUQWDHIICBaVhM4VAhF6MHBeBf?=
 =?us-ascii?q?4NuhH+BBIRsIgKPLnuQFwkckRULGIlbh0uYbYFGgg1wFYMngicXjiwwAQExgQU?=
 =?us-ascii?q?BARyKA4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAA45ARch0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMEV+LKoIhlzSBcRYYEwGHfyI0CQ0BAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgpL4I2IoJsAiRSBgkCUAMcUQWDHIICBaVhM4VAhF6MHBeBf4NuhH+BBIRsIgK?=
 =?us-ascii?q?PLnuQFwkckRULGIlbh0uYbYFGgg1wFYMngicXjiwwAQExgQUBARyKA4JNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,309,1539673200"; 
   d="scan'208";a="55802079"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 00:11:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725866AbeLCILE (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 03:11:04 -0500
Received: from mx3-rdu2.redhat.com ([66.187.233.73]:43978 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725830AbeLCILD (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 03:11:03 -0500
X-Greylist: delayed 458 seconds by postgrey-1.27 at vger.kernel.org; Mon, 03 Dec 2018 03:11:03 EST
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.rdu2.redhat.com [10.11.54.6])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 49AC787A84;
        Mon,  3 Dec 2018 08:03:22 +0000 (UTC)
Received: from master.localdomain.com (unknown [10.64.242.98])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 0C7D02166BA2;
        Mon,  3 Dec 2018 08:03:20 +0000 (UTC)
From: Masatake YAMATO <yamato@redhat.com>
To: linux-fsdevel@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, yamato@redhat.com
Subject: [PATCH resend] eventfd: make eventfd files distinguishable in /proc/$PID/fd
Date: Mon,  3 Dec 2018 17:03:17 +0900
Message-Id: <20181203080317.1028-1-yamato@redhat.com>
X-Scanned-By: MIMEDefang 2.78 on 10.11.54.6
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.11.55.1]); Mon, 03 Dec 2018 08:03:22 +0000 (UTC)
X-Greylist: inspected by milter-greylist-4.5.16 (mx1.redhat.com [10.11.55.1]); Mon, 03 Dec 2018 08:03:22 +0000 (UTC) for IP:'10.11.54.6' DOMAIN:'int-mx06.intmail.prod.int.rdu2.redhat.com' HELO:'smtp.corp.redhat.com' FROM:'yamato@redhat.com' RCPT:''
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Finding endpoints of an IPC channel is one of essential task to
understand how a user program works. Procfs and netlink socket provide
enough hints to find endpoints for IPC channels like pipes, unix
sockets, and pseudo terminals. However, there is no simple way to find
endpoints for an eventfd file from userland. An inode number doesn't
hint. Unlike pipe, all eventfd files shares one inode object.

To provide the way to find endpoints of an eventfd file, this patch
adds eventfd identifiers to the output of 'ls -l /proc/$pid/fd' like:

  ...
  lrwx------. 1 qemu qemu 64 May 20 04:49 93 -> 'anon_inode:[eventfd:130]'
  lrwx------. 1 qemu qemu 64 May 20 04:49 94 -> 'anon_inode:[eventfd:131]'
  ...

Here "130" and "131" are added as identifiers newly added.
In the case that ida_simple_get returns an error, this change doesn't add
an identifier; just use "[eventfd]" as before.

Signed-off-by: Masatake YAMATO <yamato@redhat.com>
---
 fs/eventfd.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/fs/eventfd.c b/fs/eventfd.c
index 08d3bd602f73..c18952948110 100644
--- a/fs/eventfd.c
+++ b/fs/eventfd.c
@@ -21,6 +21,11 @@
 #include <linux/eventfd.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
+#include <linux/idr.h>
+
+/* Worst case buffer size needed for holding an integer. */
+#define ITOA_MAX_LEN 12
+DEFINE_IDA(eventfd_ida);
 
 struct eventfd_ctx {
 	struct kref kref;
@@ -35,6 +40,7 @@ struct eventfd_ctx {
 	 */
 	__u64 count;
 	unsigned int flags;
+	int id;
 };
 
 /**
@@ -69,6 +75,8 @@ EXPORT_SYMBOL_GPL(eventfd_signal);
 
 static void eventfd_free_ctx(struct eventfd_ctx *ctx)
 {
+	if (ctx->id >= 0)
+		ida_simple_remove(&eventfd_ida, ctx->id);
 	kfree(ctx);
 }
 
@@ -384,6 +392,7 @@ static int do_eventfd(unsigned int count, int flags)
 {
 	struct eventfd_ctx *ctx;
 	int fd;
+	char name[1 + 8 + ITOA_MAX_LEN + 1 + 1] = "[eventfd]";
 
 	/* Check the EFD_* constants for consistency.  */
 	BUILD_BUG_ON(EFD_CLOEXEC != O_CLOEXEC);
@@ -400,8 +409,11 @@ static int do_eventfd(unsigned int count, int flags)
 	init_waitqueue_head(&ctx->wqh);
 	ctx->count = count;
 	ctx->flags = flags;
+	ctx->id = ida_simple_get(&eventfd_ida, 0, 0, GFP_KERNEL);
 
-	fd = anon_inode_getfd("[eventfd]", &eventfd_fops, ctx,
+	if (ctx->id >= 0)
+		snprintf(name, sizeof(name), "[eventfd:%d]", ctx->id);
+	fd = anon_inode_getfd(name, &eventfd_fops, ctx,
 			      O_RDWR | (flags & EFD_SHARED_FCNTL_FLAGS));
 	if (fd < 0)
 		eventfd_free_ctx(ctx);
-- 
2.17.0

