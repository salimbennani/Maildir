Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 08:39:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5C1BB5802E4
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 11:04:14 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 26 Nov 2018 11:04:13 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AUIU28h1qC09EgLvZsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMSI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUcRRWSJfAY2z?=
 =?us-ascii?q?YJcAAeUcM+ZArYTzpVQDoQawCAWwGuzv0SRFhmP10KAgz+gtDR3K0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6v1qbIyTDDYO1M2Tzg5obHaAsuruqSUrJ0bcra1E4iFxvfgVWU?=
 =?us-ascii?q?rIzqISmV2/8Ws2ia4epgVPyvhHA9pw5tpTivw94hh4/UjYwW0lDJ7Tt1zJo2KN?=
 =?us-ascii?q?GiVUJ3fN2pHIFOuyyUN4Z6WN4uTmNwtCon1LEKo4C3cDQLxZg92RLTdeKLf5KI?=
 =?us-ascii?q?7x/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSs1FZKrzFFksXXtnwX2BzT7NWHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz70qmpYOrEjOHTX6lFv4gaKWbEko5+ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/GPo3Mg0TX2SC5OuzyqPj8lP9QLlTlfI2lb?=
 =?us-ascii?q?TZsJbGKssFva61BAtV0ocg6xmhFTun38kYkGEDLFJEfhKHkofoN0vPIPD+Efew?=
 =?us-ascii?q?nVCsnC13yPDBO73sGZPNLn/FkLfue7Z99lRQyA0pzdBQ/55UEK0OIOrvWk/ts9?=
 =?us-ascii?q?zVFhs5Mw23w+n5Etl82Z4eVHmLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH9q0WIbZrSjiJsLdGijTLMhJ0SCfWGqhNAHHmEX+A0kQ6vvgVyGVDdVIHGqQ6?=
 =?us-ascii?q?M74Cp8EY+jEMLPS56ghO+82jymFMhTb2FCFlfeCHrtasCIVukBbGeIL9Z8nycY?=
 =?us-ascii?q?fb6mTYAnyFeprgCt0KdtLOff5ngFs4n+3sN+/ezZmEIO8ml9C8WGz2iMVTsvtm?=
 =?us-ascii?q?wNTj4ymqt4pB9T0FCGhJBxh/lVD5R/7vlDXwMmfcrExuh/BsraQQPPf8mEDl2h?=
 =?us-ascii?q?R4P1UnkKUtstzopWMA5GENK4g0WGhnLyDg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAA+QvxbhxHrdtBkHAMECQSBUwcNA?=
 =?us-ascii?q?YEwgmKDeYh3iySCDXqIEo4wgXEUAQEYFIhjIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOIwyCNgUCAxoBBoJcAQIDAQIgDwEFCAEBBAopAQIDAQIGAgoSBgICIgQCA?=
 =?us-ascii?q?gMBHRMBBQEODhkFgxyBagMVAQICmm88ih1wgS+CdgEBBYUDDYIRCBJ5in4XgX+?=
 =?us-ascii?q?BEYJdNYJWgXGBBII3gleQEo9ELgmCIItkg00CU4hyhzeOTYk8AgQCBAUCBQ8hg?=
 =?us-ascii?q?SWCDTMaCBsVgyeCUIM4inNRgQIFIROIelaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAAA+QvxbhxHrdtBkHAMECQSBUwcNAYEwgmKDeYh3iyS?=
 =?us-ascii?q?CDXqIEo4wgXEUAQEYFIhjIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCA?=
 =?us-ascii?q?xoBBoJcAQIDAQIgDwEFCAEBBAopAQIDAQIGAgoSBgICIgQCAgMBHRMBBQEODhk?=
 =?us-ascii?q?FgxyBagMVAQICmm88ih1wgS+CdgEBBYUDDYIRCBJ5in4XgX+BEYJdNYJWgXGBB?=
 =?us-ascii?q?II3gleQEo9ELgmCIItkg00CU4hyhzeOTYk8AgQCBAUCBQ8hgSWCDTMaCBsVgye?=
 =?us-ascii?q?CUIM4inNRgQIFIROIelaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,283,1539673200"; 
   d="scan'208";a="41604942"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 11:03:18 -0800
Received: from localhost ([::1]:38258 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRMA9-00076J-US
	for like.xu@linux.intel.com; Mon, 26 Nov 2018 14:03:17 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57500)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <palmer@sifive.com>) id 1gRM9r-0006sz-5s
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 14:03:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <palmer@sifive.com>) id 1gRM9n-0007uR-02
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 14:02:59 -0500
Received: from mail-pg1-x544.google.com ([2607:f8b0:4864:20::544]:33851)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <palmer@sifive.com>) id 1gRM9m-0007uB-QR
	for qemu-devel@nongnu.org; Mon, 26 Nov 2018 14:02:54 -0500
Received: by mail-pg1-x544.google.com with SMTP id 17so6596588pgg.1
	for <qemu-devel@nongnu.org>; Mon, 26 Nov 2018 11:02:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=sifive.com; s=google;
	h=date:subject:in-reply-to:cc:from:to:message-id:mime-version
	:content-transfer-encoding;
	bh=hHbtW2VHaK+EnawinuUSPTlpQGH1RdUKYX11fPP2M8g=;
	b=Q7FF9zXsW4ZolOI798p7JA3NVkyfNa55oMXr/iF9VqAQtLuVcMrDwBpkDPOMo807iO
	GfUggQekOuCFHWK8UDNECHn/bPUP9QbX0iOI96DpLBAORjMN5NjRN+Id2laJ+D8A32OT
	37YPNa5rROUzhvez0XsmJEcBJehss8jJP6NnSX1P8Ed8Rwi/NBu8Fw0vFbdPYFkilkzj
	RCgvPAegSDv2FtUe7s/Kh+8xjcztBVfECdFkZPat2gFcsk3cRUAdvZymZxTdvESTdO/H
	jNH5gu89zih8A7cRNW7T7XmzYv/kc69RaJEt0PLw9Jqfw5WUwM8NmlitdRP9Fc8gtmXO
	okmQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:date:subject:in-reply-to:cc:from:to:message-id
	:mime-version:content-transfer-encoding;
	bh=hHbtW2VHaK+EnawinuUSPTlpQGH1RdUKYX11fPP2M8g=;
	b=E8zV/Qr+57TkMe2QCFySXGxrI61o7Wjy9+Ae9hndf1tEmQGPAHEIoQu9N8M55X7Ign
	gZRo49ZEEUY6La0bryXw3E7MXVoF3hMRA1FzGVuR+aLLWFxd/UXsOg/yubOLa8oFFcKw
	mC78oN+tmFfX15M9P/DECOdXx2rEN0ax42UQkZFA5gkwLLAA6UDj2+nrX1IYM7Ly27q0
	+F1otUKvLHxd/4pI9/s3BKiK/nuAlV3hnAFNo1CjfKF254dn3pCcaeJnb1V+HHhDF44/
	uSLXKXwXSof19olWWE19jx3AQcKPcAZEL4ZT9Xx4g28GrnU/Cw6FVtsSFqWvyVynzblb
	e2Pw==
X-Gm-Message-State: AA+aEWb10rhgFh4a7+qMwSYow4i5Unxg0Xa4WtFs4/zzmvLMODFCZ6Z4
	LbrQmynjx9UCq/mhR0k8yqzxkw==
X-Google-Smtp-Source: AFSGD/UZWHak8Mds1Li0QnTRafjTxAsIkpoZEu3OyHwM0EaPQSn5DYfI9L45MRJI13W6kkIMKLAz7Q==
X-Received: by 2002:a63:3546:: with SMTP id c67mr26441974pga.284.1543258973270;
	Mon, 26 Nov 2018 11:02:53 -0800 (PST)
Received: from localhost ([12.206.222.5]) by smtp.gmail.com with ESMTPSA id
	202sm1415666pfy.87.2018.11.26.11.02.52
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 26 Nov 2018 11:02:52 -0800 (PST)
Date: Mon, 26 Nov 2018 11:02:52 -0800 (PST)
X-Google-Original-Date: Mon, 26 Nov 2018 11:02:06 PST (-0800)
In-Reply-To: <CAKmqyKMdNs4etff7rc0vDy_tmZf5deP1Geu0GchkENu+em5=+w@mail.gmail.com>
From: Palmer Dabbelt <palmer@sifive.com>
To: alistair23@gmail.com
Message-ID: <mhng-b345219b-56ea-4aee-b25e-95c762c54b49@palmer-si-x1c4>
Mime-Version: 1.0 (MHng)
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::544
Subject: Re: [Qemu-devel] [PATCH v1 1/1] riscv: virt: Cast the initrd start
 address to target bit length
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-riscv@nongnu.org, Alistair Francis <Alistair.Francis@wdc.com>,
	qemu-devel@nongnu.org, agraf@suse.de
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Wed, 21 Nov 2018 18:09:27 PST (-0800), alistair23@gmail.com wrote:
> On Wed, Nov 21, 2018 at 5:58 PM Palmer Dabbelt <palmer@sifive.com> wrote:
>>
>> On Wed, 21 Nov 2018 14:34:44 PST (-0800), Alistair Francis wrote:
>> > Ensure that the calculate initrd offset points to a valid address for
>> > the architecture.
>> >
>> > Signed-off-by: Alistair Francis <alistair.francis@wdc.com>
>> > Suggested-by: Alexander Graf <agraf@suse.de>
>> > Reported-by: Alexander Graf <agraf@suse.de>
>> > ---
>> >  hw/riscv/virt.c | 7 ++++++-
>> >  1 file changed, 6 insertions(+), 1 deletion(-)
>> >
>> > diff --git a/hw/riscv/virt.c b/hw/riscv/virt.c
>> > index 2b38f89070..4467195fac 100644
>> > --- a/hw/riscv/virt.c
>> > +++ b/hw/riscv/virt.c
>> > @@ -85,7 +85,12 @@ static hwaddr load_initrd(const char *filename, uint64_t mem_size,
>> >       * halfway into RAM, and for boards with 256MB of RAM or more we put
>> >       * the initrd at 128MB.
>> >       */
>> > -    *start = kernel_entry + MIN(mem_size / 2, 128 * MiB);
>> > +    /* As hwaddr is a 64-bit number we need to cast it for 32-bit */
>> > +#if defined(TARGET_RISCV32)
>> > +    *start = (uint32_t) (kernel_entry + MIN(mem_size / 2, 128ULL * MiB));
>> > +#elif defined(TARGET_RISCV64)
>> > +    *start = (uint64_t) (kernel_entry + MIN(mem_size / 2, 128 * MiB));
>> > +#endif
>> >
>> >      size = load_ramdisk(filename, *start, mem_size - *start);
>> >      if (size == -1) {
>> > --
>> > 2.19.1
>>
>> Maybe I'm missing something, but wouldn't something like
>>
>>     uint64_t start_unclobbered = kernel_entry + MIN(mem_size / 2, 128ULL * MiB);
>>     assert(start_unclobbered == (hwaddr)start_unclobbered);
>>     *start = (hwaddr)start_unclobbered;
>>
>> work better?  That should actually check this all lines up, as opposed to just
>> silently truncating a bad address.
>
> The problem is that hwaddr is always 64-bit.
>
> Stupidly I forgot about target_ulong, which should work basically the
> same as above. An assert() seems a little harsh though, Alex reported
> problem was fixed with just a cast.

OK, I must be misunderstanding the problem, then.  With the current code, isn't 
it possible to end up causing start to overflow a 32-bit address?  This would 
happen if kernel_entry is high, with IIUC is coming from the ELF to load and is 
therefor user input.  I think that's worth some sort of assertion, as it'll 
definitely blow up trying to enter the kernel (and possible before that, 
assuming there's no target memory where it overflows into).

This won't happen with the default Linux setup, but could happen if users are 
trying to do something weird.

