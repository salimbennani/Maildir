Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:45:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9A2945805CF
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 15:05:57 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 15:05:57 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AM9PxUhzrsU7sG3HXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoQIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfWSJCBY2z?=
 =?us-ascii?q?bYUPAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0myuQsCx3K0RY8E98Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTG0C/Mb/ZL2Tjj7IjDbw4vofGNXb1ra8XR1E0vFx/YhViX?=
 =?us-ascii?q?sozqJTaV1vkTvGif9eZgSeKvi288pA5rvzivwtssh5LXiYIT0VDI7CF5wYYyJd?=
 =?us-ascii?q?2+UkJ7ZsSkEJRJuiycKoB4QdsiTnl2tComybAKo4O3cDUJxZg92RLSZfyKf5KV?=
 =?us-ascii?q?7h/hTOqdPy13iG54dL+6mxm96lWsx+n5W8Wp01tGsy9IncXSunwRyxDe78yKRe?=
 =?us-ascii?q?Vm8Uqg3DuAyhzf6u9KIU0xm6rUNZ0sz701m5UPv0nMAi37lUPrh6GMbEok4PKn?=
 =?us-ascii?q?6+H/b7XmuJCcM4h0hxn6MqQvgcy/Hf84PhIBX2id5OSwzrrj/Vf2QLlSj/02lL?=
 =?us-ascii?q?fWsIzCKMgFuqK0ABVZ3ps+5xu8FTuqztoVkHkdIF5Yeh+Ll43pNEvPIPD8A/e/?=
 =?us-ascii?q?mVOskDJzyvDfILLhB4jNImHen7j/Y7Zy9UpcxBMowtBY+pJUDK0OL+zoWkP2sN?=
 =?us-ascii?q?zYDxw5PBKuz+foFdVwzoceWWOJAq+EP6Leq16I5uQzI+aSYI8ZoiryK/8g5/P1?=
 =?us-ascii?q?i385nlkdfaav3ZsKcny4Ge5mI0qBbXr2ntgBCXsKvhY5TOHyjF2CUD1TaGioU6?=
 =?us-ascii?q?Mz+zE2E4amDYbFRoCwj72Nxia7HptKZm9YDlCAC2vnd4KBW6REVSSJP8U0kiAY?=
 =?us-ascii?q?TaPzDMgl1Aqyr0n8zLxoKPeS/TcX8pfq1dxw7uuUkgku9DtyFIOE3mSQCm15gG?=
 =?us-ascii?q?4MFAIwx7119El0y1Of1vphjvlFUNBe+f5NFx03LIPR1PBSDdf0VQTcONCTRwG9?=
 =?us-ascii?q?X9+kDDotG8832MIEeE1nGt+v3SzEijOnBqJQm7GVCZgc9KXa0H7sYcFnxDKOzK?=
 =?us-ascii?q?Q9gkNgR8JeOWCigoZ79g7aHYmPlF+WxIiwcqFJ5yfI6WqHhVaOvUtRTQpsGfHe?=
 =?us-ascii?q?VHUCa0+QsdT47ErfS6OGBLI8dw9QzsjELbFFPI66xW5aTevubYyNK1m6nH29UF?=
 =?us-ascii?q?PRnuuB?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CDAAB2fBlchxHrdtBkHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMIJig32IeIscgg2ZTRUYFIcdIjcGDQEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OL4I2BQIDGgEGglwDAwECIAQfCikDAwECBgEBHwUCIgQCAgMBOBsHEgWDHYIBA?=
 =?us-ascii?q?QSnDHwzhUCEboELhnOEQYFXP4ERixuCVwKJRpdeBwKCJQSPKySRVyyJGJAvgSY?=
 =?us-ascii?q?2gXhNMIMvgicXjh5xgQQDIItJgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CDAAB2fBlchxHrdtBkHQEBBQEHBQGBVAUBCwGBMIJig32?=
 =?us-ascii?q?IeIscgg2ZTRUYFIcdIjcGDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGg?=
 =?us-ascii?q?lwDAwECIAQfCikDAwECBgEBHwUCIgQCAgMBOBsHEgWDHYIBAQSnDHwzhUCEboE?=
 =?us-ascii?q?LhnOEQYFXP4ERixuCVwKJRpdeBwKCJQSPKySRVyyJGJAvgSY2gXhNMIMvgicXj?=
 =?us-ascii?q?h5xgQQDIItJgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="scan'208";a="67426309"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 15:05:56 -0800
Received: from localhost ([::1]:56652 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZOR2-0007yB-0a
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 18:05:56 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40001)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <samuel.thibault@ens-lyon.org>) id 1gZOQB-0007wJ-Hd
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:05:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <samuel.thibault@ens-lyon.org>) id 1gZOQ5-00043s-OW
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:05:00 -0500
Received: from hera.aquilenet.fr ([2a0c:e300::1]:57280)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <samuel.thibault@ens-lyon.org>)
	id 1gZOQ1-0003yT-Ow
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:04:55 -0500
Received: from localhost (localhost [127.0.0.1])
	by hera.aquilenet.fr (Postfix) with ESMTP id 9E6F82947;
	Wed, 19 Dec 2018 00:04:48 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at aquilenet.fr
Received: from hera.aquilenet.fr ([127.0.0.1])
	by localhost (hera.aquilenet.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id cL_Nn_e8dQpo; Wed, 19 Dec 2018 00:04:43 +0100 (CET)
Received: from function.home (unknown
	[IPv6:2a01:cb19:181:c200:9eb6:d0ff:fe88:c3c7])
	by hera.aquilenet.fr (Postfix) with ESMTPSA id 8510F260D;
	Wed, 19 Dec 2018 00:04:43 +0100 (CET)
Received: from samy by function.home with local (Exim 4.91)
	(envelope-from <samuel.thibault@ens-lyon.org>)
	id 1gZOPq-0007Ha-A7; Wed, 19 Dec 2018 00:04:42 +0100
From: Samuel Thibault <samuel.thibault@ens-lyon.org>
To: qemu-devel@nongnu.org,
	peter.maydell@linaro.org
Date: Wed, 19 Dec 2018 00:03:40 +0100
Message-Id: <20181218230442.27887-3-samuel.thibault@ens-lyon.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181218230442.27887-1-samuel.thibault@ens-lyon.org>
References: <20181218230442.27887-1-samuel.thibault@ens-lyon.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a0c:e300::1
Subject: [Qemu-devel] [PULL 02/64] slirp: remove do_pty from fork_exec()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
	Samuel Thibault <samuel.thibault@ens-lyon.org>,
	stefanha@redhat.com, jan.kiszka@siemens.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>

QEMU uses fork_exec() with do_pty values 0 or 3.
Let's clean up some unused code.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
---
 slirp/misc.c     | 55 ++++++++++++++----------------------------------
 slirp/misc.h     |  2 +-
 slirp/tcp_subr.c |  4 +---
 3 files changed, 18 insertions(+), 43 deletions(-)

diff --git a/slirp/misc.c b/slirp/misc.c
index 57bdd808e2..e69d5f42c3 100644
--- a/slirp/misc.c
+++ b/slirp/misc.c
@@ -63,7 +63,7 @@ int add_exec(struct ex_list **ex_ptr, int do_pty, char =
*exec,
 #ifdef _WIN32
=20
 int
-fork_exec(struct socket *so, const char *ex, int do_pty)
+fork_exec(struct socket *so, const char *ex)
 {
     /* not implemented */
     return 0;
@@ -77,13 +77,9 @@ fork_exec(struct socket *so, const char *ex, int do_pt=
y)
  * process, which connects to this socket, after which we
  * exec the wanted program.  If something (strange) happens,
  * the accept() call could block us forever.
- *
- * do_pty =3D 0   Fork/exec inetd style
- * do_pty =3D 1   Fork/exec using slirp.telnetd
- * do_ptr =3D 2   Fork/exec using pty
  */
 int
-fork_exec(struct socket *so, const char *ex, int do_pty)
+fork_exec(struct socket *so, const char *ex)
 {
         int s, cs;
         struct sockaddr_in addr, csaddr;
@@ -100,26 +96,20 @@ fork_exec(struct socket *so, const char *ex, int do_=
pty)
 	DEBUG_CALL("fork_exec");
 	DEBUG_ARG("so =3D %p", so);
 	DEBUG_ARG("ex =3D %p", ex);
-	DEBUG_ARG("do_pty =3D %x", do_pty);
-
-	if (do_pty =3D=3D 2) {
-                return 0;
-	} else {
-		addr.sin_family =3D AF_INET;
-		addr.sin_port =3D 0;
-		addr.sin_addr.s_addr =3D INADDR_ANY;
=20
-		if ((s =3D qemu_socket(AF_INET, SOCK_STREAM, 0)) < 0 ||
-		    bind(s, (struct sockaddr *)&addr, addrlen) < 0 ||
-		    listen(s, 1) < 0) {
-			error_report("Error: inet socket: %s", strerror(errno));
-			if (s >=3D 0) {
-			    closesocket(s);
-			}
+    addr.sin_family =3D AF_INET;
+    addr.sin_port =3D 0;
+    addr.sin_addr.s_addr =3D INADDR_ANY;
=20
-			return 0;
-		}
-	}
+    s =3D qemu_socket(AF_INET, SOCK_STREAM, 0);
+    if (s < 0 || bind(s, (struct sockaddr *)&addr, addrlen) < 0 ||
+        listen(s, 1) < 0) {
+        error_report("Error: inet socket: %s", strerror(errno));
+        if (s >=3D 0) {
+            closesocket(s);
+        }
+        return 0;
+    }
=20
         if (getsockname(s, (struct sockaddr *)&csaddr, &csaddrlen) < 0) =
{
             closesocket(s);
@@ -166,13 +156,7 @@ fork_exec(struct socket *so, const char *ex, int do_=
pty)
=20
 		i =3D 0;
 		bptr =3D g_strdup(ex); /* No need to free() this */
-		if (do_pty =3D=3D 1) {
-			/* Setup "slirp.telnetd -x" */
-			argv[i++] =3D "slirp.telnetd";
-			argv[i++] =3D "-x";
-			argv[i++] =3D bptr;
-		} else
-		   do {
+        do {
 			/* Change the string into argv[] */
 			curarg =3D bptr;
 			while (*bptr !=3D ' ' && *bptr !=3D (char)0)
@@ -180,7 +164,7 @@ fork_exec(struct socket *so, const char *ex, int do_p=
ty)
 			c =3D *bptr;
 			*bptr++ =3D (char)0;
 			argv[i++] =3D g_strdup(curarg);
-		   } while (c);
+        } while (c);
=20
                 argv[i] =3D NULL;
 		execvp(argv[0], (char **)argv);
@@ -206,13 +190,6 @@ fork_exec(struct socket *so, const char *ex, int do_=
pty)
                 opt =3D 1;
                 qemu_setsockopt(so->s, SOL_SOCKET, SO_OOBINLINE, &opt, s=
izeof(int));
 		qemu_set_nonblock(so->s);
-
-		/* Append the telnet options now */
-                if (so->so_m !=3D NULL && do_pty =3D=3D 1)  {
-			sbappend(so, so->so_m);
-                        so->so_m =3D NULL;
-		}
-
 		return 1;
 	}
 }
diff --git a/slirp/misc.h b/slirp/misc.h
index 5211bbd30a..897650aea1 100644
--- a/slirp/misc.h
+++ b/slirp/misc.h
@@ -53,6 +53,6 @@ struct slirp_quehead {
 void slirp_insque(void *, void *);
 void slirp_remque(void *);
 int add_exec(struct ex_list **, int, char *, struct in_addr, int);
-int fork_exec(struct socket *so, const char *ex, int do_pty);
+int fork_exec(struct socket *so, const char *ex);
=20
 #endif
diff --git a/slirp/tcp_subr.c b/slirp/tcp_subr.c
index fa61349cbb..0ccd8e1a96 100644
--- a/slirp/tcp_subr.c
+++ b/slirp/tcp_subr.c
@@ -951,7 +951,6 @@ int tcp_ctl(struct socket *so)
     Slirp *slirp =3D so->slirp;
     struct sbuf *sb =3D &so->so_snd;
     struct ex_list *ex_ptr;
-    int do_pty;
=20
     DEBUG_CALL("tcp_ctl");
     DEBUG_ARG("so =3D %p", so);
@@ -966,9 +965,8 @@ int tcp_ctl(struct socket *so)
                     so->extra =3D (void *)ex_ptr->ex_exec;
                     return 1;
                 }
-                do_pty =3D ex_ptr->ex_pty;
                 DEBUG_MISC((dfd, " executing %s\n", ex_ptr->ex_exec));
-                return fork_exec(so, ex_ptr->ex_exec, do_pty);
+                return fork_exec(so, ex_ptr->ex_exec);
             }
         }
     }
--=20
2.19.2


