Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:45:32 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B80A55805CF
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 15:38:49 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 15:38:49 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A8IezeRwP7u2ZAAvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoQIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfWSJCBY2z?=
 =?us-ascii?q?bYUPAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0myuQsCx3K0RY8E98Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTG0C/Mb/ZL2Tjj7IjDbw4vofGNXb1ra8XR1E0vFx/YhViX?=
 =?us-ascii?q?sozqJTaV1vkTvGif9eZgSeKvi288pA5rvzivwtssh5LXiYIT0VDI7CF5wYYyJd?=
 =?us-ascii?q?2+UkJ7ZsSkEJRJuiycKoB4QdsiTnl2tComybAKo4O3cDUJxZg92RLSZfyKf5KV?=
 =?us-ascii?q?7h/hTOqdPy13iG54dL+6mxm96lWsx+n5W8Wp01tGsy9IncXSunwRyxDe78yKRe?=
 =?us-ascii?q?Vm8Uqg3DuAyhzf6u9KIU0xm6rUNZ0sz701m5UPv0nMAi37lUPrh6GMbEok4PKn?=
 =?us-ascii?q?6+H/b7XmuJCcM4h0hxn6MqQvgcy/Hf84PhIBX2id5OSwzrrj/Vf2QLlSj/02lL?=
 =?us-ascii?q?fWsIzCKMgFuqK0ABVZ3ps+5xu8FTuqztoVkHkdIF5Yeh+Ll43pNEvPIPD8A/e/?=
 =?us-ascii?q?mVOskDJzyvDfILLhB4jNImHen7j/Y7Zy9UpcxBMowtBY+pJUDK0OL+zoWkP2sN?=
 =?us-ascii?q?zYDxw5PBKuz+foFdVwzoceWWOJAq+EP6Leq16I5uQzI+aSYI8ZoiryK/8g5/P1?=
 =?us-ascii?q?i385nlkdfaav3ZsKcny4Ge5mI0qBbXr2ntgBCXsKvhY5TOHyjF2CUD1TaGioU6?=
 =?us-ascii?q?Mz+zE2E4amDYbFRoCwj72Nxia7HptKZm9YDlCAC2vnd4KBW6REVSSJP8U0kiAY?=
 =?us-ascii?q?TaPzDMgl1Aqyr0n8zLxoKPeS/TcX8pfq1dxw7uuUkgku9DtyFIOE3mSQCm15gG?=
 =?us-ascii?q?4MFAIwx7119El0y1Of1vphjvlFUNBe+f5NFx03LIPR1PBSDdf0VQTcONCTRwG9?=
 =?us-ascii?q?X9+kDDotG8832MIEeE1nGt+v3SzEijOnBqJQm7GVCZgc9KXa0H7sYcFnxDKOzK?=
 =?us-ascii?q?Q9gkNgR8JeOWCigoZ79g7aHYmPlF+WxIiwcqFJ5yfI6WqHhVaOvUtRTQpsGfHe?=
 =?us-ascii?q?VHUCa0+QsdT47ErfS6OGBLI8dw9QzsjELbFFPI66xW5aTevubYyNK1m6nH29UF?=
 =?us-ascii?q?PRnuuB?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AqAgCxhBlchxHrdtBkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgmKDfYh4ix2CDZlNFRgUhECCXSI4EgEDAQEBAQEBAgETAQEBCgsJCBsOL4I?=
 =?us-ascii?q?2BQIDGgEGglwDAwECIAQfCikDAwECBgEBHwUCIgQCAgMBOBsHEgWDHYIBAQMBp?=
 =?us-ascii?q?w58M4VAhG6BC4ZzhEGBVz+BEAGIOYJiglcCoSQHAoIlBI8rJJFXiUSQL4EmN4F?=
 =?us-ascii?q?3TTCDL4InF44ecYEEAyCLSYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AqAgCxhBlchxHrdtBkHQEBBQEHBQGBZYExgmKDfYh4ix2?=
 =?us-ascii?q?CDZlNFRgUhECCXSI4EgEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGglwDA?=
 =?us-ascii?q?wECIAQfCikDAwECBgEBHwUCIgQCAgMBOBsHEgWDHYIBAQMBpw58M4VAhG6BC4Z?=
 =?us-ascii?q?zhEGBVz+BEAGIOYJiglcCoSQHAoIlBI8rJJFXiUSQL4EmN4F3TTCDL4InF44ec?=
 =?us-ascii?q?YEEAyCLSYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="scan'208";a="45538785"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 15:38:07 -0800
Received: from localhost ([::1]:56819 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZOwB-0000dR-0B
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 18:38:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40496)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <samuel.thibault@ens-lyon.org>) id 1gZOQy-00007T-Nq
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:05:53 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <samuel.thibault@ens-lyon.org>) id 1gZOQq-0004pB-Ax
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:05:50 -0500
Received: from hera.aquilenet.fr ([185.233.100.1]:41690)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <samuel.thibault@ens-lyon.org>)
	id 1gZOQh-0004S2-MB
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:05:39 -0500
Received: from localhost (localhost [127.0.0.1])
	by hera.aquilenet.fr (Postfix) with ESMTP id D2F89287A;
	Wed, 19 Dec 2018 00:05:13 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at aquilenet.fr
Received: from hera.aquilenet.fr ([127.0.0.1])
	by localhost (hera.aquilenet.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id HA9LSipxULQD; Wed, 19 Dec 2018 00:05:11 +0100 (CET)
Received: from function.home (unknown
	[IPv6:2a01:cb19:181:c200:9eb6:d0ff:fe88:c3c7])
	by hera.aquilenet.fr (Postfix) with ESMTPSA id 916F128E0;
	Wed, 19 Dec 2018 00:04:46 +0100 (CET)
Received: from samy by function.home with local (Exim 4.91)
	(envelope-from <samuel.thibault@ens-lyon.org>)
	id 1gZOPs-0007KF-9y; Wed, 19 Dec 2018 00:04:44 +0100
From: Samuel Thibault <samuel.thibault@ens-lyon.org>
To: qemu-devel@nongnu.org,
	peter.maydell@linaro.org
Date: Wed, 19 Dec 2018 00:04:20 +0100
Message-Id: <20181218230442.27887-43-samuel.thibault@ens-lyon.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181218230442.27887-1-samuel.thibault@ens-lyon.org>
References: <20181218230442.27887-1-samuel.thibault@ens-lyon.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 185.233.100.1
Subject: [Qemu-devel] [PULL 42/64] net: do not depend on slirp internals
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
	Samuel Thibault <samuel.thibault@ens-lyon.org>,
	stefanha@redhat.com, jan.kiszka@siemens.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>

Only slirp/libslirp.h should be included.

Instead of using some slirp declarations and utility functions directly,
let's copy them in net/util.h.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Reviewed-by: Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com>
Tested-by: Philippe Mathieu-Daud=C3=A9 <philmd@redhat.com>
Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
---
 net/colo-compare.c    | 11 +++++----
 net/colo.c            |  1 +
 net/colo.h            |  7 +++---
 net/filter-rewriter.c |  9 +++----
 net/slirp.c           |  2 +-
 net/util.h            | 55 +++++++++++++++++++++++++++++++++++++++++++
 stubs/slirp.c         |  2 +-
 7 files changed, 72 insertions(+), 15 deletions(-)

diff --git a/net/colo-compare.c b/net/colo-compare.c
index 9156ab3349..3e515f3023 100644
--- a/net/colo-compare.c
+++ b/net/colo-compare.c
@@ -30,6 +30,7 @@
 #include "net/colo-compare.h"
 #include "migration/colo.h"
 #include "migration/migration.h"
+#include "util.h"
=20
 #define TYPE_COLO_COMPARE "colo-compare"
 #define COLO_COMPARE(obj) \
@@ -129,19 +130,19 @@ static int compare_chr_send(CompareState *s,
=20
 static gint seq_sorter(Packet *a, Packet *b, gpointer data)
 {
-    struct tcphdr *atcp, *btcp;
+    struct tcp_hdr *atcp, *btcp;
=20
-    atcp =3D (struct tcphdr *)(a->transport_header);
-    btcp =3D (struct tcphdr *)(b->transport_header);
+    atcp =3D (struct tcp_hdr *)(a->transport_header);
+    btcp =3D (struct tcp_hdr *)(b->transport_header);
     return ntohl(atcp->th_seq) - ntohl(btcp->th_seq);
 }
=20
 static void fill_pkt_tcp_info(void *data, uint32_t *max_ack)
 {
     Packet *pkt =3D data;
-    struct tcphdr *tcphd;
+    struct tcp_hdr *tcphd;
=20
-    tcphd =3D (struct tcphdr *)pkt->transport_header;
+    tcphd =3D (struct tcp_hdr *)pkt->transport_header;
=20
     pkt->tcp_seq =3D ntohl(tcphd->th_seq);
     pkt->tcp_ack =3D ntohl(tcphd->th_ack);
diff --git a/net/colo.c b/net/colo.c
index 49176bf07b..8196b35837 100644
--- a/net/colo.c
+++ b/net/colo.c
@@ -15,6 +15,7 @@
 #include "qemu/osdep.h"
 #include "trace.h"
 #include "colo.h"
+#include "util.h"
=20
 uint32_t connection_key_hash(const void *opaque)
 {
diff --git a/net/colo.h b/net/colo.h
index 11c5226488..b21c6830b5 100644
--- a/net/colo.h
+++ b/net/colo.h
@@ -15,10 +15,9 @@
 #ifndef QEMU_COLO_PROXY_H
 #define QEMU_COLO_PROXY_H
=20
-#include "slirp/slirp.h"
 #include "qemu/jhash.h"
 #include "qemu/timer.h"
-#include "slirp/tcp.h"
+#include "net/eth.h"
=20
 #define HASHTABLE_MAX_SIZE 16384
=20
@@ -81,10 +80,10 @@ typedef struct Connection {
     /* the maximum of acknowledgement number in secondary_list queue */
     uint32_t sack;
     /* offset =3D secondary_seq - primary_seq */
-    tcp_seq  offset;
+    uint32_t  offset;
=20
     int tcp_state; /* TCP FSM state */
-    tcp_seq fin_ack_seq; /* the seq of 'fin=3D1,ack=3D1' */
+    uint32_t fin_ack_seq; /* the seq of 'fin=3D1,ack=3D1' */
 } Connection;
=20
 uint32_t connection_key_hash(const void *opaque);
diff --git a/net/filter-rewriter.c b/net/filter-rewriter.c
index 2e26839bc2..b464abe5e8 100644
--- a/net/filter-rewriter.c
+++ b/net/filter-rewriter.c
@@ -22,6 +22,7 @@
 #include "net/checksum.h"
 #include "net/colo.h"
 #include "migration/colo.h"
+#include "util.h"
=20
 #define FILTER_COLO_REWRITER(obj) \
     OBJECT_CHECK(RewriterState, (obj), TYPE_FILTER_REWRITER)
@@ -73,9 +74,9 @@ static int handle_primary_tcp_pkt(RewriterState *rf,
                                   Connection *conn,
                                   Packet *pkt, ConnectionKey *key)
 {
-    struct tcphdr *tcp_pkt;
+    struct tcp_hdr *tcp_pkt;
=20
-    tcp_pkt =3D (struct tcphdr *)pkt->transport_header;
+    tcp_pkt =3D (struct tcp_hdr *)pkt->transport_header;
     if (trace_event_get_state_backends(TRACE_COLO_FILTER_REWRITER_DEBUG)=
) {
         trace_colo_filter_rewriter_pkt_info(__func__,
                     inet_ntoa(pkt->ip->ip_src), inet_ntoa(pkt->ip->ip_ds=
t),
@@ -176,9 +177,9 @@ static int handle_secondary_tcp_pkt(RewriterState *rf=
,
                                     Connection *conn,
                                     Packet *pkt, ConnectionKey *key)
 {
-    struct tcphdr *tcp_pkt;
+    struct tcp_hdr *tcp_pkt;
=20
-    tcp_pkt =3D (struct tcphdr *)pkt->transport_header;
+    tcp_pkt =3D (struct tcp_hdr *)pkt->transport_header;
=20
     if (trace_event_get_state_backends(TRACE_COLO_FILTER_REWRITER_DEBUG)=
) {
         trace_colo_filter_rewriter_pkt_info(__func__,
diff --git a/net/slirp.c b/net/slirp.c
index 00f7306b69..30eda2cca1 100644
--- a/net/slirp.c
+++ b/net/slirp.c
@@ -38,12 +38,12 @@
 #include "qemu/error-report.h"
 #include "qemu/sockets.h"
 #include "slirp/libslirp.h"
-#include "slirp/ip6.h"
 #include "chardev/char-fe.h"
 #include "sysemu/sysemu.h"
 #include "qemu/cutils.h"
 #include "qapi/error.h"
 #include "qapi/qmp/qdict.h"
+#include "util.h"
=20
 static int get_str_sep(char *buf, int buf_size, const char **pp, int sep=
)
 {
diff --git a/net/util.h b/net/util.h
index 60b73d372d..358185fd50 100644
--- a/net/util.h
+++ b/net/util.h
@@ -26,6 +26,61 @@
 #define QEMU_NET_UTIL_H
=20
=20
+/*
+ * Structure of an internet header, naked of options.
+ */
+struct ip {
+#ifdef HOST_WORDS_BIGENDIAN
+    uint8_t ip_v:4,         /* version */
+            ip_hl:4;        /* header length */
+#else
+    uint8_t ip_hl:4,        /* header length */
+            ip_v:4;         /* version */
+#endif
+    uint8_t ip_tos;         /* type of service */
+    uint16_t ip_len;        /* total length */
+    uint16_t ip_id;         /* identification */
+    uint16_t ip_off;        /* fragment offset field */
+#define IP_DF 0x4000        /* don't fragment flag */
+#define IP_MF 0x2000        /* more fragments flag */
+#define IP_OFFMASK 0x1fff   /* mask for fragmenting bits */
+    uint8_t ip_ttl;         /* time to live */
+    uint8_t ip_p;           /* protocol */
+    uint16_t ip_sum;        /* checksum */
+    struct in_addr ip_src, ip_dst;  /* source and dest address */
+} QEMU_PACKED;
+
+static inline bool in6_equal_net(const struct in6_addr *a,
+                                 const struct in6_addr *b,
+                                 int prefix_len)
+{
+    if (memcmp(a, b, prefix_len / 8) !=3D 0) {
+        return 0;
+    }
+
+    if (prefix_len % 8 =3D=3D 0) {
+        return 1;
+    }
+
+    return a->s6_addr[prefix_len / 8] >> (8 - (prefix_len % 8))
+        =3D=3D b->s6_addr[prefix_len / 8] >> (8 - (prefix_len % 8));
+}
+
+#define TCPS_CLOSED             0       /* closed */
+#define TCPS_LISTEN             1       /* listening for connection */
+#define TCPS_SYN_SENT           2       /* active, have sent syn */
+#define TCPS_SYN_RECEIVED       3       /* have send and received syn */
+/* states < TCPS_ESTABLISHED are those where connections not established=
 */
+#define TCPS_ESTABLISHED        4       /* established */
+#define TCPS_CLOSE_WAIT         5       /* rcvd fin, waiting for close *=
/
+/* states > TCPS_CLOSE_WAIT are those where user has closed */
+#define TCPS_FIN_WAIT_1         6       /* have closed, sent fin */
+#define TCPS_CLOSING            7       /* closed xchd FIN; await FIN AC=
K */
+#define TCPS_LAST_ACK           8       /* had fin and close; await FIN =
ACK */
+/* states > TCPS_CLOSE_WAIT && < TCPS_FIN_WAIT_2 await ACK of FIN */
+#define TCPS_FIN_WAIT_2         9       /* have closed, fin is acked */
+#define TCPS_TIME_WAIT          10      /* in 2*msl quiet wait after clo=
se */
+
 int net_parse_macaddr(uint8_t *macaddr, const char *p);
=20
 #endif /* QEMU_NET_UTIL_H */
diff --git a/stubs/slirp.c b/stubs/slirp.c
index 42f7e1afd0..70704346fd 100644
--- a/stubs/slirp.c
+++ b/stubs/slirp.c
@@ -1,7 +1,7 @@
 #include "qemu/osdep.h"
 #include "qemu-common.h"
 #include "qemu/host-utils.h"
-#include "slirp/slirp.h"
+#include "slirp/libslirp.h"
=20
 void slirp_pollfds_fill(GArray *pollfds, uint32_t *timeout)
 {
--=20
2.19.2


