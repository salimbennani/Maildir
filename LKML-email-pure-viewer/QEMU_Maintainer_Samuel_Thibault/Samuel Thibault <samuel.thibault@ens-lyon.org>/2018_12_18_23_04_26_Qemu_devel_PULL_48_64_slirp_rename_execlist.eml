Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:45:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9D7C058055F
	for <like.xu@linux.intel.com>; Tue, 18 Dec 2018 15:52:04 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 15:52:04 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ADP8zvR07aWwOFU59smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesWLPTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPWSJPAYSy?=
 =?us-ascii?q?YIkBD+UOIelWoJTzp0MMoBW8CgSgGe3ixiNWiX/txqA6z/0hHBva0AE6A94Dsn?=
 =?us-ascii?q?LZp8j1OqcIVuC1ybHFwyjZYPNTxDfy9ozIeQ0/r/GMXLJ/atDeyVQrFwPZk16d?=
 =?us-ascii?q?rpflMCmQ1uQQrWeb6/BsVf6vi24msA5+uCWvxsMwioTSmI0VzEvE+Tx9wIc1It?=
 =?us-ascii?q?24TlR3Ydm+EJtfriyXMZZ9TMA6Q2xwpio21r4LtYSmcCQXy5kr3QDTZvKHfoSS?=
 =?us-ascii?q?/x7uVv6dLSlii355Zb6yggq9/lO9xuD4U8S4zVVHojdAn9bQqHwBywDf582DR/?=
 =?us-ascii?q?Rj5Uis2DOC2B3P5uFKL0A5kKTbJIAiz7Mzk5ccrUrOETP0lUjwkaSYbF8r+vKy?=
 =?us-ascii?q?5OTierjmpoGTN4tzigzmNqQum9e/AfgjMgQUUGib//m82Kfk/U3jT7VGlvw2kq?=
 =?us-ascii?q?/Hv5DGPckXuLK1DgxP3oo+9hqyDC2q3MoWkHQHNl5JZRCKg5DsO17UIfD4Cfm/?=
 =?us-ascii?q?g06rkDdu3/3GJ6PuApDQLnTajbjuY6h95FBYyAYq1t9f4I9UCrcdL/3tQU/9s9?=
 =?us-ascii?q?jYDh46MwOq2ermB8h925saWWKOBK+ZLazTvUWJ5uIpP+mDeosVtCzhJPgi4v7j?=
 =?us-ascii?q?lnk5mVgbfamm25sXdWq0HvN8I0WWeXbsmMsOEX8WvgoiS+znkFmCUT9QZ3msRa?=
 =?us-ascii?q?496Sw7BZmiDYfCQICtnbOA0D26Hp1QemBJFFSMHW30eIWDXvdfIB+UOdJrxzwY?=
 =?us-ascii?q?SaC6Gchm0RC1qBS8zb1hIezJvCoCutXm3dlx4uTV0hYq6T1zCd/aymyIUiR4k3?=
 =?us-ascii?q?0FQ2wL2rtiqxl4w1aHza8qmvFdCJlf6u1EVkIgOIfBwvdmI9b1XA3HY5GOUlnx?=
 =?us-ascii?q?WcisAzw6UocsxcQTaV12AdSog0P/2H+zDroI0rCGGpEw2qTb2Xf3OoB60XmCnL?=
 =?us-ascii?q?Esk1Q8BM5GJGGrgqpX8wnVDpTO1UKDmPWEb6MZiRXE8XqOySKyvEBSWRN0Te2R?=
 =?us-ascii?q?Rnkae0bS68j550nLUruyIbkhKU5F2MmEbKxQZYu63h19WP7/NYGGMCqKkGCqCE?=
 =?us-ascii?q?PNn+vUYQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BAAAAWhxlchxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMIJig32IeIsdgg2XWoFzFRgUhx0iNgcNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4vgjYFAgMaAQaCXAMDAQIgBB8KKQMDAQIGAQEfBQIiBAICAwE4GwcSBYMdg?=
 =?us-ascii?q?gEBAwGnEHwzhUCEboELhnOEQYFXP4ERh32DHoJXAolCl2IHAoIlBI8rJJFXLIk?=
 =?us-ascii?q?YkC+BJicOgXlNMEOCbIInF44ecYEEAyCLSYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BAAAAWhxlchxHrdtBkHQEBBQEHBQGBUwYBCwGBMIJig32?=
 =?us-ascii?q?IeIsdgg2XWoFzFRgUhx0iNgcNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMaA?=
 =?us-ascii?q?QaCXAMDAQIgBB8KKQMDAQIGAQEfBQIiBAICAwE4GwcSBYMdggEBAwGnEHwzhUC?=
 =?us-ascii?q?EboELhnOEQYFXP4ERh32DHoJXAolCl2IHAoIlBI8rJJFXLIkYkC+BJicOgXlNM?=
 =?us-ascii?q?EOCbIInF44ecYEEAyCLSYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="scan'208";a="45539854"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 18 Dec 2018 15:52:03 -0800
Received: from localhost ([::1]:56899 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZP9f-0003yt-27
	for like.xu@linux.intel.com; Tue, 18 Dec 2018 18:52:03 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40748)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <samuel.thibault@ens-lyon.org>) id 1gZORA-0000O1-KI
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:06:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <samuel.thibault@ens-lyon.org>) id 1gZOR8-000512-DC
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:06:04 -0500
Received: from hera.aquilenet.fr ([185.233.100.1]:41884)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <samuel.thibault@ens-lyon.org>)
	id 1gZOR7-0004pQ-TX
	for qemu-devel@nongnu.org; Tue, 18 Dec 2018 18:06:02 -0500
Received: from localhost (localhost [127.0.0.1])
	by hera.aquilenet.fr (Postfix) with ESMTP id 78F1028A4;
	Wed, 19 Dec 2018 00:05:17 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at aquilenet.fr
Received: from hera.aquilenet.fr ([127.0.0.1])
	by localhost (hera.aquilenet.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id bj0g2T46fgty; Wed, 19 Dec 2018 00:05:16 +0100 (CET)
Received: from function.home (unknown
	[IPv6:2a01:cb19:181:c200:9eb6:d0ff:fe88:c3c7])
	by hera.aquilenet.fr (Postfix) with ESMTPSA id 1E7E32901;
	Wed, 19 Dec 2018 00:04:47 +0100 (CET)
Received: from samy by function.home with local (Exim 4.91)
	(envelope-from <samuel.thibault@ens-lyon.org>)
	id 1gZOPs-0007Kb-Lm; Wed, 19 Dec 2018 00:04:44 +0100
From: Samuel Thibault <samuel.thibault@ens-lyon.org>
To: qemu-devel@nongnu.org,
	peter.maydell@linaro.org
Date: Wed, 19 Dec 2018 00:04:26 +0100
Message-Id: <20181218230442.27887-49-samuel.thibault@ens-lyon.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181218230442.27887-1-samuel.thibault@ens-lyon.org>
References: <20181218230442.27887-1-samuel.thibault@ens-lyon.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 185.233.100.1
Subject: [Qemu-devel] [PULL 48/64] slirp: rename exec_list
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
	Samuel Thibault <samuel.thibault@ens-lyon.org>,
	stefanha@redhat.com, jan.kiszka@siemens.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

From: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>

This list is not only used to handle command to execute on guest
connection, it can also redirect to an arbitrary object, such as a
chardev. Let's rename the struct and the field to "guestfwd".

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
---
 slirp/misc.c      |  6 +++---
 slirp/misc.h      |  6 +++---
 slirp/slirp.c     | 18 +++++++++---------
 slirp/slirp.h     |  2 +-
 slirp/tcp_input.c |  6 +++---
 slirp/tcp_subr.c  |  4 ++--
 6 files changed, 21 insertions(+), 21 deletions(-)

diff --git a/slirp/misc.c b/slirp/misc.c
index 2d092624d3..526cefa0f1 100644
--- a/slirp/misc.c
+++ b/slirp/misc.c
@@ -36,10 +36,10 @@ remque(void *a)
   element->qh_rlink =3D NULL;
 }
=20
-int add_exec(struct ex_list **ex_ptr, void *chardev, const char *cmdline=
,
+int add_exec(struct gfwd_list **ex_ptr, void *chardev, const char *cmdli=
ne,
              struct in_addr addr, int port)
 {
-	struct ex_list *tmp_ptr;
+	struct gfwd_list *tmp_ptr;
=20
 	/* First, check if the port is "bound" */
 	for (tmp_ptr =3D *ex_ptr; tmp_ptr; tmp_ptr =3D tmp_ptr->ex_next) {
@@ -49,7 +49,7 @@ int add_exec(struct ex_list **ex_ptr, void *chardev, co=
nst char *cmdline,
 	}
=20
 	tmp_ptr =3D *ex_ptr;
-	*ex_ptr =3D g_new0(struct ex_list, 1);
+	*ex_ptr =3D g_new0(struct gfwd_list, 1);
 	(*ex_ptr)->ex_fport =3D port;
 	(*ex_ptr)->ex_addr =3D addr;
 	if (chardev) {
diff --git a/slirp/misc.h b/slirp/misc.h
index 0bc5e74bc5..1df707c052 100644
--- a/slirp/misc.h
+++ b/slirp/misc.h
@@ -8,12 +8,12 @@
 #ifndef MISC_H
 #define MISC_H
=20
-struct ex_list {
+struct gfwd_list {
 	void *ex_chardev;
 	struct in_addr ex_addr;		/* Server address */
 	int ex_fport;                   /* Port to telnet to */
 	char *ex_exec;                  /* Command line of what to exec */
-	struct ex_list *ex_next;
+	struct gfwd_list *ex_next;
 };
=20
 #define EMU_NONE 0x0
@@ -51,7 +51,7 @@ struct slirp_quehead {
=20
 void slirp_insque(void *, void *);
 void slirp_remque(void *);
-int add_exec(struct ex_list **, void *, const char *, struct in_addr, in=
t);
+int add_exec(struct gfwd_list **, void *, const char *, struct in_addr, =
int);
 int fork_exec(struct socket *so, const char *ex);
=20
 #endif
diff --git a/slirp/slirp.c b/slirp/slirp.c
index 8da528afaa..4949d17c73 100644
--- a/slirp/slirp.c
+++ b/slirp/slirp.c
@@ -345,9 +345,9 @@ Slirp *slirp_init(int restricted, bool in_enabled, st=
ruct in_addr vnetwork,
=20
 void slirp_cleanup(Slirp *slirp)
 {
-    struct ex_list *e, *next;
+    struct gfwd_list *e, *next;
=20
-    for (e =3D slirp->exec_list; e; e =3D next) {
+    for (e =3D slirp->guestfwd_list; e; e =3D next) {
         next =3D e->ex_next;
         g_free(e->ex_exec);
         g_free(e);
@@ -760,7 +760,7 @@ static void arp_input(Slirp *slirp, const uint8_t *pk=
t, int pkt_len)
     struct ethhdr *reh =3D (struct ethhdr *)arp_reply;
     struct slirp_arphdr *rah =3D (struct slirp_arphdr *)(arp_reply + ETH=
_HLEN);
     int ar_op;
-    struct ex_list *ex_ptr;
+    struct gfwd_list *ex_ptr;
=20
     if (!slirp->in_enabled) {
         return;
@@ -780,7 +780,7 @@ static void arp_input(Slirp *slirp, const uint8_t *pk=
t, int pkt_len)
             if (ah->ar_tip =3D=3D slirp->vnameserver_addr.s_addr ||
                 ah->ar_tip =3D=3D slirp->vhost_addr.s_addr)
                 goto arp_ok;
-            for (ex_ptr =3D slirp->exec_list; ex_ptr; ex_ptr =3D ex_ptr-=
>ex_next) {
+            for (ex_ptr =3D slirp->guestfwd_list; ex_ptr; ex_ptr =3D ex_=
ptr->ex_next) {
                 if (ex_ptr->ex_addr.s_addr =3D=3D ah->ar_tip)
                     goto arp_ok;
             }
@@ -1052,7 +1052,7 @@ int slirp_add_exec(Slirp *slirp, void *chardev, con=
st char *cmdline,
         return -1;
     }
=20
-    return add_exec(&slirp->exec_list, chardev, cmdline, *guest_addr,
+    return add_exec(&slirp->guestfwd_list, chardev, cmdline, *guest_addr=
,
                     htons(guest_port));
 }
=20
@@ -1423,9 +1423,9 @@ static const VMStateDescription vmstate_slirp =3D {
 static void slirp_state_save(QEMUFile *f, void *opaque)
 {
     Slirp *slirp =3D opaque;
-    struct ex_list *ex_ptr;
+    struct gfwd_list *ex_ptr;
=20
-    for (ex_ptr =3D slirp->exec_list; ex_ptr; ex_ptr =3D ex_ptr->ex_next=
)
+    for (ex_ptr =3D slirp->guestfwd_list; ex_ptr; ex_ptr =3D ex_ptr->ex_=
next)
         if (ex_ptr->ex_chardev) {
             struct socket *so;
             so =3D slirp_find_ctl_socket(slirp, ex_ptr->ex_addr,
@@ -1445,7 +1445,7 @@ static void slirp_state_save(QEMUFile *f, void *opa=
que)
 static int slirp_state_load(QEMUFile *f, void *opaque, int version_id)
 {
     Slirp *slirp =3D opaque;
-    struct ex_list *ex_ptr;
+    struct gfwd_list *ex_ptr;
=20
     while (qemu_get_byte(f)) {
         int ret;
@@ -1460,7 +1460,7 @@ static int slirp_state_load(QEMUFile *f, void *opaq=
ue, int version_id)
             slirp->vnetwork_addr.s_addr) {
             return -EINVAL;
         }
-        for (ex_ptr =3D slirp->exec_list; ex_ptr; ex_ptr =3D ex_ptr->ex_=
next) {
+        for (ex_ptr =3D slirp->guestfwd_list; ex_ptr; ex_ptr =3D ex_ptr-=
>ex_next) {
             if (ex_ptr->ex_chardev &&
                 so->so_faddr.s_addr =3D=3D ex_ptr->ex_addr.s_addr &&
                 so->so_fport =3D=3D ex_ptr->ex_fport) {
diff --git a/slirp/slirp.h b/slirp/slirp.h
index fdf397256b..9aa245715d 100644
--- a/slirp/slirp.h
+++ b/slirp/slirp.h
@@ -147,7 +147,7 @@ struct Slirp {
     char client_hostname[33];
=20
     int restricted;
-    struct ex_list *exec_list;
+    struct gfwd_list *guestfwd_list;
=20
     /* mbuf states */
     struct quehead m_freelist;
diff --git a/slirp/tcp_input.c b/slirp/tcp_input.c
index b67ec24075..bc4aa60046 100644
--- a/slirp/tcp_input.c
+++ b/slirp/tcp_input.c
@@ -211,7 +211,7 @@ tcp_input(struct mbuf *m, int iphlen, struct socket *=
inso, unsigned short af)
 	struct sockaddr_storage lhost, fhost;
 	struct sockaddr_in *lhost4, *fhost4;
 	struct sockaddr_in6 *lhost6, *fhost6;
-    struct ex_list *ex_ptr;
+    struct gfwd_list *ex_ptr;
     Slirp *slirp;
=20
 	DEBUG_CALL("tcp_input");
@@ -394,7 +394,7 @@ findso:
              * for non-hostfwd connections. These should be dropped, unl=
ess it
              * happens to be a guestfwd.
              */
-            for (ex_ptr =3D slirp->exec_list; ex_ptr; ex_ptr =3D ex_ptr-=
>ex_next) {
+            for (ex_ptr =3D slirp->guestfwd_list; ex_ptr; ex_ptr =3D ex_=
ptr->ex_next) {
                 if (ex_ptr->ex_fport =3D=3D ti->ti_dport &&
                     ti->ti_dst.s_addr =3D=3D ex_ptr->ex_addr.s_addr) {
                     break;
@@ -616,7 +616,7 @@ findso:
 	    if (so->so_faddr.s_addr !=3D slirp->vhost_addr.s_addr &&
 		so->so_faddr.s_addr !=3D slirp->vnameserver_addr.s_addr) {
 		/* May be an add exec */
-		for (ex_ptr =3D slirp->exec_list; ex_ptr;
+		for (ex_ptr =3D slirp->guestfwd_list; ex_ptr;
 		     ex_ptr =3D ex_ptr->ex_next) {
 		  if(ex_ptr->ex_fport =3D=3D so->so_fport &&
 		     so->so_faddr.s_addr =3D=3D ex_ptr->ex_addr.s_addr) {
diff --git a/slirp/tcp_subr.c b/slirp/tcp_subr.c
index 00cee73163..3b14684107 100644
--- a/slirp/tcp_subr.c
+++ b/slirp/tcp_subr.c
@@ -949,14 +949,14 @@ int tcp_ctl(struct socket *so)
 {
     Slirp *slirp =3D so->slirp;
     struct sbuf *sb =3D &so->so_snd;
-    struct ex_list *ex_ptr;
+    struct gfwd_list *ex_ptr;
=20
     DEBUG_CALL("tcp_ctl");
     DEBUG_ARG("so =3D %p", so);
=20
     if (so->so_faddr.s_addr !=3D slirp->vhost_addr.s_addr) {
         /* Check if it's pty_exec */
-        for (ex_ptr =3D slirp->exec_list; ex_ptr; ex_ptr =3D ex_ptr->ex_=
next) {
+        for (ex_ptr =3D slirp->guestfwd_list; ex_ptr; ex_ptr =3D ex_ptr-=
>ex_next) {
             if (ex_ptr->ex_fport =3D=3D so->so_fport &&
                 so->so_faddr.s_addr =3D=3D ex_ptr->ex_addr.s_addr) {
                 if (ex_ptr->ex_chardev) {
--=20
2.19.2


