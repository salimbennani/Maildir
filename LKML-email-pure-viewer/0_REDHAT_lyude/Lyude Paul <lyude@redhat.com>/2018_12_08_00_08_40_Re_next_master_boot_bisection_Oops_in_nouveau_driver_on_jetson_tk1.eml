Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DE5CD5804F7;
	Fri,  7 Dec 2018 16:09:05 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 16:09:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AWZGjehIHMnn5weu3EdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPr4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXchfSixPDJ2y?=
 =?us-ascii?q?YYQNAeoBOvpXoIfyqFUBthu+HQuhCfjzyjJKnHL6wbE23v4jHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtMqkTUf21w7TWwj7edf1Zwyr96IzVeR0mpfGNXa9wftfPxkQ0DQPKkEif?=
 =?us-ascii?q?qYz/MDOJzOgCr2+b7+95WO+plmUppQZxoj21ycctjInEnowVykra+ipn3Yk6O8?=
 =?us-ascii?q?a4SE1nYd6jCJtcrSaaN5F5Qs86QGFnpjw6yrsYtp6/ZiQKz44nxxHHZ/OcaYeJ?=
 =?us-ascii?q?4hbjVOeKLjdimn1pYq6whxG38US4xe38V9W00FZXriVeiNXDqncN1xnL5siDS/?=
 =?us-ascii?q?t9+Fqh2DmW2w/J8OFEJFo4la3BK54u2rIwlYQcsV7FHiDonEX5kK6Wel8j+uiy?=
 =?us-ascii?q?5OTqZKjtqJyEN4JslA3yLqAjltaiDek2LAQCRXWX9Oeg2LH5/ED0Qq1GguA5n6?=
 =?us-ascii?q?TWqpzWONoXqrOjDwNLzoov8QuzAja43NkegHIJNkhKeAidgIjsI1zOIO73DfO4?=
 =?us-ascii?q?g1m0jjdryO7JPqf7DpXOMHfDirHhcqh560JGzwoz199f64pVCrEHPv3zRlf8uM?=
 =?us-ascii?q?LEAhI9KQC43ujqBMtn2o8DWm+DHrWVPaLQvFOQ4+IgOeiMZIsbuDbnLPgl4ubj?=
 =?us-ascii?q?jXs4mV8bYKmo0oIbaHOmEfR8JUWWf37sjs4GEWYEuAoxUvbqhUacUT5ceXmyRb?=
 =?us-ascii?q?gw5jIlB4K8C4fMWIStjKaG3CehEZ1afnpGBUyUEXf0a4WEXO8BaCaTIs9ijDMI?=
 =?us-ascii?q?T7egS5I62BGqtQ/6zadnL+XO9i0Zs5LjyMZ65+nJmR4u8jx0CtyX03uRQGFsgm?=
 =?us-ascii?q?MIWzg20bh/oUNny1eDzbJ3g/tCGdxT+vNGSAE6NZHHwux+CtDyXB/Bf9iTRFan?=
 =?us-ascii?q?RNWmHS8+TtYrz9ASZEZ9Hs2ojgrf0CqyH78Vi7uLCYQ28qLbwXf9PcV9y3HA1K?=
 =?us-ascii?q?kniFkrWc9PNWyghq5i+AnfHY/Jk0OFl6m0caQQxjLC9GCGzWCWpkFXTBZwUbnZ?=
 =?us-ascii?q?XXAYfkbZt8/55kPFT7+tE7gnKBFOycyZJ6tOa93pi0hGRfj5NNTfZWKxh3m/BR?=
 =?us-ascii?q?KSyryQa4rqfn0X3D/BB0gcjwAT4XGGOBA9Bii7pWLSFjhuFVP1bEPq/ulzs3e7?=
 =?us-ascii?q?Tk4yzwGXYExtzbu1+hgJhfOCT/MfxK4LuCAkqz9sBlayw8rWC8acpwpmZKhTfM?=
 =?us-ascii?q?ky4ElZ2m7DtwxyJJqgL7t8iV4YdAh3u0Du1xBzCohblcgqrXUqzBd9KK6C0VNB?=
 =?us-ascii?q?cS+Y0o70OrHNNmby+xWvYbbM2l7CyNaW5rsP6PMgplr+pg6pCFQt/29n09ZP1X?=
 =?us-ascii?q?uc/YvFDAwJXJL1U0Y38QV6pr7Abik84YPUyWNjMa2uvjDe3NIpAfMvygy8cNdH?=
 =?us-ascii?q?LKOECAjyHtUGB8ivLewqnESpbhIEPexI6K44JcSmd+GC2K6qOuZgkymrjWBG4I?=
 =?us-ascii?q?B7z0KN+DBwSu/O35YZ3f6Y2hGLWCv7jFekqsr3g5xLZSkOHmqjzijpHJReZqls?=
 =?us-ascii?q?cocEF2ivI9e7yc5jh5HwQXFY8l2jB1QY2MKyfRqSblr93RBf1EgNoHynnze4wC?=
 =?us-ascii?q?Jwkz0zsqWf2ynOyfz4dBUbIm5LWHVijVD0LIm0ktAWRlSnYxIolRul/0n6wadb?=
 =?us-ascii?q?qb97L2nSR0dIYif3I3tjUqu2qrqNfcpP5Ik0viVQVeS2eUqaRaLloxsGzyPjGH?=
 =?us-ascii?q?NTxCo6dz62oJr5hQF1iGWHIHZ1snXZY8BwyQ7D69PGQf5ewyQJRDN/iTnRHVW8?=
 =?us-ascii?q?O9ip/dOJl5bMqOy+VmShVoFNfinv14+PqCy75WhyCx2lg/+zgsHnERQ90SLj19?=
 =?us-ascii?q?hqVD/ErRbmbonwyqS6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Arl11d5LnKKxIL5UW+RwtB7aNm5YWMW2yQ94N5MCK?=
 =?us-ascii?q?qP6LxEnC11oke3rA7LYPh9mCsdxuUq6HIAn+4Jvw8txD2HAr8OBUlYITDslxOQ?=
 =?us-ascii?q?4tG+tqpXY3yjcbqx1Ep4ht2hCLCCogdBWHf2YJsiHClw7tlhP1LIynH89obkeN?=
 =?us-ascii?q?zIZ9IJqhKUiwvAj/RSKJ8plfoFnytnNXj9vX040eE7ixNu0Iq+vIiGLWVt4a24?=
 =?us-ascii?q?DgRZNj3ze8Mc5DXtgbxCkcaR2oClBo9hFSkTXJv0UfKoFyoftfHmNwaNCjIwsH?=
 =?us-ascii?q?maFqTEHQ+D9khmtWnAHI6xN3GYP3QZydRiRB+AJE1QmgwUXTM6noInGQCu3sDu?=
 =?us-ascii?q?bEB55jUJ7F7ithRM0v5oNwX4UmrHuAeobTI0RIKeLRVM6AFC+lzVMdef7u9oGy?=
 =?us-ascii?q?FY/5uhrBGCK2CBZgRIC30JVVKAB1z5Irau4tzA+fCCBuWiN/vOfamOqetGWviT?=
 =?us-ascii?q?352v1Y9m/yuWOsWLI3lvFPk72ktFXXBkFMXVgTQPSyoLly3Ta86Xvguz+ipyrs?=
 =?us-ascii?q?qn6vTkRBrv5ZeTC7tVKdhv+Qq5gaKdOO6Lnip5NSxU1pARxX/L1bgf2kQdizp1?=
 =?us-ascii?q?ejmpELQAszPNTa3Klq9WCR4bdz18NM9S460g2QlNPNbRisnp2b5gkv41F1BFWE?=
 =?us-ascii?q?Thm8GueMwKOny9O0nBBEqRL7SGIjvLw87sbKO4SL1QivhUthKqtTaaFU/jIiqM?=
 =?us-ascii?q?lz3zWx+zNuFMiTmRPAZCt4GlbhZtFW/jQcrmahKlMd93jj42wbwuinPJL24cNj?=
 =?us-ascii?q?d8fF1Xrr2N9iNVmfF/G21H7np4IuiIgSeZ7+/EKpkItftnGDh7l+Vf4H4i0bta?=
 =?us-ascii?q?8DlEROBpmCvVttNhuUymnfKVyjV5UBtCsDJLhIOQsEVmOKXZ8IRAWHne8BIM62?=
 =?us-ascii?q?WQFwoFp99/BtLzvKBQz8DFlLjvJzda79LU4cwcCtDIKMKGNXotKwbmFCTIAwsF?=
 =?us-ascii?q?UzGrM3rSh0hckPGU632UoYI2qpnqmJoSVLBbUEY5Ge8dCkRgBNYCOot4Xis4kb?=
 =?us-ascii?q?6Hi84F/Xq/owPXRMVfv5DHUOqdAPTvKDmDi7lEaAAFwbf5LYQVK4361FZualh8?=
 =?us-ascii?q?nITWBUXQWcpBrTFmbg8x8w1x9y1RU2w330v4bw7l3GIYFvOu1ko5lwp6Ze0w8T?=
 =?us-ascii?q?qq/0o8JVfQjCA3lE04k9L/iHaadzunaO+aUIceMCn5uEcqesfxWAV4YgKptVZp?=
 =?us-ascii?q?ODfNW/RaiL42Jk5xjwqJnYpSFfMUdaRZZFdEweCKa/gAy1lQqiy7g0RA4L2WWt?=
 =?us-ascii?q?NZiAI2fMv0/Dp70AV5YYtwfPSIKQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAABICwtch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJpgQIng3qIGYwRgg0UaI1FiQ6BbBkBARgNBgGDJkVRAoM?=
 =?us-ascii?q?fIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAwECIARSBgkBAQoUB?=
 =?us-ascii?q?AICJgICAzEBBQEcBgESBYMcAYIBBQqZZjyLDXwzhC0BgROEahJ5ixcXgX+BEYJ?=
 =?us-ascii?q?dBy6DHgEBAhiES4JXAok3hgRGNpAwCYIlhGGDOYcMGGB8TYRJgnGHVYkQj2QGA?=
 =?us-ascii?q?gkHDyGBJYINMxoIGxWDJwmCHheDSoUUhV0iMmUgAQGKXQEB?=
X-IPAS-Result: =?us-ascii?q?A0AEAABICwtch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJpgQIng3qIGYwRgg0UaI1FiQ6BbBkBARgNBgGDJkVRAoMfIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCgsJCCkjDII2JAGCYgECAwECIARSBgkBAQoUBAICJgICAzEBBQE?=
 =?us-ascii?q?cBgESBYMcAYIBBQqZZjyLDXwzhC0BgROEahJ5ixcXgX+BEYJdBy6DHgEBAhiES?=
 =?us-ascii?q?4JXAok3hgRGNpAwCYIlhGGDOYcMGGB8TYRJgnGHVYkQj2QGAgkHDyGBJYINMxo?=
 =?us-ascii?q?IGxWDJwmCHheDSoUUhV0iMmUgAQGKXQEB?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="55054565"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 16:08:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726091AbeLHAIq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 19:08:46 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:45411 "EHLO
        mail-qk1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726041AbeLHAIq (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 19:08:46 -0500
Received: by mail-qk1-f195.google.com with SMTP id y78so3447664qka.12
        for <linux-kernel@vger.kernel.org>; Fri, 07 Dec 2018 16:08:45 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:message-id:subject:from:to:cc:date:in-reply-to
         :references:organization:user-agent:mime-version
         :content-transfer-encoding;
        bh=13mzs8ocSTdtB+u3hnqnZ280c8w0GvfDnW89U2cV/Tg=;
        b=iMZTAm7GeWreHhofXVV7olT73uyZUkeTdhpiqjMVWz4OVbIrMbTn7EXwQDYaQORpvA
         ofal2P3bjbWDC3z+IUYLWisBWw2YkE2ihPcddFqZTyTBspq7dNaUbZNIzGAFdBlA14/2
         PJR25Rs5KeFQ5JGZaRIFVyGtKcrMVcGxY+7toEx98PYdtKSxUUlYPKD4ZZG8AOoPzhzV
         2poH2xrmiWm45CqMeBaPJ4aUA5rX7tk7PMbfTxUKWXKODZjq06xswHfveD4fKrL/ez69
         JzHBOqhV7oJPwqWNSItqd32QJtVZ/27K/40cwPK4nJaWTo1pBHUnvFR2WWFHYsgEWx3j
         mx7w==
X-Gm-Message-State: AA+aEWayjhy/+wF5NAzC6hBKE0fQqKXN1s8Eoq6WPwOf7PHDOUY1zB4Z
        xhIHhV5OyutS2i6eaM53VgTHYTTAJ5s=
X-Google-Smtp-Source: AFSGD/V3r+IGbvcbe9TJjXz1HzZ37Wy1BCqxF//LaJbFIaep3IAE4qlF6Z22MLGCZ38ayOxsCtFabg==
X-Received: by 2002:a37:4a87:: with SMTP id x129mr3621343qka.142.1544227724519;
        Fri, 07 Dec 2018 16:08:44 -0800 (PST)
Received: from dhcp-10-20-1-11.bss.redhat.com ([144.121.20.162])
        by smtp.gmail.com with ESMTPSA id a90sm3538356qka.30.2018.12.07.16.08.43
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 07 Dec 2018 16:08:43 -0800 (PST)
Message-ID: <95255117123da3702da585491d2fdd74890937c0.camel@redhat.com>
Subject: Re: next/master boot bisection: Oops in nouveau driver on jetson-tk1
From: Lyude Paul <lyude@redhat.com>
To: Guillaume Tucker <guillaume.tucker@collabora.com>,
        Ben Skeggs <bskeggs@redhat.com>
Cc: nouveau@lists.freedesktop.org, David Airlie <airlied@linux.ie>,
        dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        kernel@collabora.com, Mark Brown <broonie@kernel.org>,
        Thierry Reding <thierry.reding@gmail.com>,
        Karol Herbst <kherbst@redhat.com>,
        Kevin Hilman <khilman@baylibre.com>
Date: Fri, 07 Dec 2018 19:08:40 -0500
In-Reply-To: <89fa50d0-945f-d1ed-ae55-ee947187f209@collabora.com>
References: <89fa50d0-945f-d1ed-ae55-ee947187f209@collabora.com>
Organization: Red Hat
Content-Type: text/plain; charset="UTF-8"
User-Agent: Evolution 3.30.2 (3.30.2-2.fc29) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

uhhhhhhhhhhhhh
didn't we fix this weeks ago? with "drm/nouveau: tegra: Call
nouveau_drm_device_init()"


On Fri, 2018-12-07 at 23:31 +0000, Guillaume Tucker wrote:
> Please find below an automated bisection report for a kernel Oops
> seen during the initialisation of the nouveau GPU driver on
> jetson-tk1.
> 
> 
> All the LAVA test jobs for this bisection can be found here:
> 
>   
> http://lava.baylibre.com:10080/scheduler/alljobs?length=25&search=lava-bisect-staging-7366#table
> 
> 
> Here's the beginning of the Oops stack trace:
> 
> [    7.485361] [00000064] *pgd=f9e7b835
> [    7.485372] Internal error: Oops: 17 [#1] SMP ARM
> [    7.485376] Modules linked in: snd_soc_tegra_rt5640(+)
> snd_soc_tegra_utils snd_soc_rt5640(+) snd_soc_rl6231 snd_soc_tegra30_ahub
> snd_hda_tegra snd_soc_core snd_hda_codec snd_hda_core ac97_bus
> snd_pcm_dmaengine snd_pcm xhci_tegra(+) snd_timer snd soundcore nouveau(+)
> ttm tegra_devfreq tegra_wdt
> [    7.542227] CPU: 1 PID: 128 Comm: udevd Not tainted 4.20.0-rc5-next-
> 20181206 #44
> [    7.549603] Hardware name: NVIDIA Tegra SoC (Flattened Device Tree)
> [    7.555859] PC is at drm_plane_register_all+0x18/0x50
> [    7.560899] LR is at drm_modeset_register_all+0xc/0x6c
> 
> 
> Full log:
> 
>   http://lava.baylibre.com:10080/scheduler/job/68628#L816
> 
> 
> The bisection was run from next-20181206 as this is where the
> issue was discovered on kernelci.org but the patch it found has
> already been merged in mainline.
> 
> Hope this helps!
> 
> Guillaume
> 
> 
> -----------8<------------------------8<-----------
> 
> 
> * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
> * This automated bisection report was sent to you on the basis  *
> * that you may be involved with the breaking commit it has      *
> * found.  No manual investigation has been done to verify it,   *
> * and the root cause of the problem may be somewhere else.      *
> * Hope this helps!                                              *
> * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
> 
> Bisection result for next/master (next-20181206) on jetson-tk1
> 
>   Good:       84df9525b0c2 Linux 4.19
>   Bad:        4c92b7b3080d Add linux-next specific files for 20181206
>   Found:      cfea88a4d866 drm/nouveau: Start using new drm_dev
> initialization helpers
> 
> Checks:
>   revert:     PASS
>   verify:     PASS
> 
> Parameters:
>   Tree:       next
>   URL:        None
>   Branch:     master
>   Target:     jetson-tk1
>   Lab:        lab-baylibre
>   Config:     multi_v7_defconfig
>   Plan:       dmesg-nouveau
> 
> Breaking commit found:
> 
> ----------------------------------------------------------------------------
> ---
> commit cfea88a4d86632f28cf80be97079f131645b7869
> Author: Lyude Paul <lyude@redhat.com>
> Date:   Wed Aug 22 21:40:07 2018 -0400
> 
>     drm/nouveau: Start using new drm_dev initialization helpers
>     
>     Per the documentation in drm_get_pci_dev(), this function is deprecated
>     and shouldn't be used anymore. As it turns out, we're going to need to
>     stop using drm_get_pci_dev() anyway in order to allow us to turn off the
>     card before full system shutdowns, otherwise we'll hit race conditions
>     with userspace while trying to tear down the card on shutdown.
>     
>     So, start using drm_dev_get() and drm_dev_put(), and just turn our
>     load/unload callbacks into open coded init/fini() functions.
>     
>     Signed-off-by: Lyude Paul <lyude@redhat.com>
>     Cc: Karol Herbst <kherbst@redhat.com>
>     Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
> 
> diff --git a/drivers/gpu/drm/nouveau/nouveau_drm.c
> b/drivers/gpu/drm/nouveau/nouveau_drm.c
> index 905956809d21..2b2baf6e0e0d 100644
> --- a/drivers/gpu/drm/nouveau/nouveau_drm.c
> +++ b/drivers/gpu/drm/nouveau/nouveau_drm.c
> @@ -458,75 +458,8 @@ nouveau_accel_init(struct nouveau_drm *drm)
>  	nouveau_bo_move_init(drm);
>  }
>  
> -static int nouveau_drm_probe(struct pci_dev *pdev,
> -			     const struct pci_device_id *pent)
> -{
> -	struct nvkm_device *device;
> -	struct apertures_struct *aper;
> -	bool boot = false;
> -	int ret;
> -
> -	if (vga_switcheroo_client_probe_defer(pdev))
> -		return -EPROBE_DEFER;
> -
> -	/* We need to check that the chipset is supported before booting
> -	 * fbdev off the hardware, as there's no way to put it back.
> -	 */
> -	ret = nvkm_device_pci_new(pdev, NULL, "error", true, false, 0,
> &device);
> -	if (ret)
> -		return ret;
> -
> -	nvkm_device_del(&device);
> -
> -	/* Remove conflicting drivers (vesafb, efifb etc). */
> -	aper = alloc_apertures(3);
> -	if (!aper)
> -		return -ENOMEM;
> -
> -	aper->ranges[0].base = pci_resource_start(pdev, 1);
> -	aper->ranges[0].size = pci_resource_len(pdev, 1);
> -	aper->count = 1;
> -
> -	if (pci_resource_len(pdev, 2)) {
> -		aper->ranges[aper->count].base = pci_resource_start(pdev, 2);
> -		aper->ranges[aper->count].size = pci_resource_len(pdev, 2);
> -		aper->count++;
> -	}
> -
> -	if (pci_resource_len(pdev, 3)) {
> -		aper->ranges[aper->count].base = pci_resource_start(pdev, 3);
> -		aper->ranges[aper->count].size = pci_resource_len(pdev, 3);
> -		aper->count++;
> -	}
> -
> -#ifdef CONFIG_X86
> -	boot = pdev->resource[PCI_ROM_RESOURCE].flags & IORESOURCE_ROM_SHADOW;
> -#endif
> -	if (nouveau_modeset != 2)
> -		drm_fb_helper_remove_conflicting_framebuffers(aper,
> "nouveaufb", boot);
> -	kfree(aper);
> -
> -	ret = nvkm_device_pci_new(pdev, nouveau_config, nouveau_debug,
> -				  true, true, ~0ULL, &device);
> -	if (ret)
> -		return ret;
> -
> -	pci_set_master(pdev);
> -
> -	if (nouveau_atomic)
> -		driver_pci.driver_features |= DRIVER_ATOMIC;
> -
> -	ret = drm_get_pci_dev(pdev, pent, &driver_pci);
> -	if (ret) {
> -		nvkm_device_del(&device);
> -		return ret;
> -	}
> -
> -	return 0;
> -}
> -
>  static int
> -nouveau_drm_load(struct drm_device *dev, unsigned long flags)
> +nouveau_drm_device_init(struct drm_device *dev)
>  {
>  	struct nouveau_drm *drm;
>  	int ret;
> @@ -613,7 +546,7 @@ nouveau_drm_load(struct drm_device *dev, unsigned long
> flags)
>  }
>  
>  static void
> -nouveau_drm_unload(struct drm_device *dev)
> +nouveau_drm_device_fini(struct drm_device *dev)
>  {
>  	struct nouveau_drm *drm = nouveau_drm(dev);
>  
> @@ -642,18 +575,116 @@ nouveau_drm_unload(struct drm_device *dev)
>  	kfree(drm);
>  }
>  
> +static int nouveau_drm_probe(struct pci_dev *pdev,
> +			     const struct pci_device_id *pent)
> +{
> +	struct nvkm_device *device;
> +	struct drm_device *drm_dev;
> +	struct apertures_struct *aper;
> +	bool boot = false;
> +	int ret;
> +
> +	if (vga_switcheroo_client_probe_defer(pdev))
> +		return -EPROBE_DEFER;
> +
> +	/* We need to check that the chipset is supported before booting
> +	 * fbdev off the hardware, as there's no way to put it back.
> +	 */
> +	ret = nvkm_device_pci_new(pdev, NULL, "error", true, false, 0,
> &device);
> +	if (ret)
> +		return ret;
> +
> +	nvkm_device_del(&device);
> +
> +	/* Remove conflicting drivers (vesafb, efifb etc). */
> +	aper = alloc_apertures(3);
> +	if (!aper)
> +		return -ENOMEM;
> +
> +	aper->ranges[0].base = pci_resource_start(pdev, 1);
> +	aper->ranges[0].size = pci_resource_len(pdev, 1);
> +	aper->count = 1;
> +
> +	if (pci_resource_len(pdev, 2)) {
> +		aper->ranges[aper->count].base = pci_resource_start(pdev, 2);
> +		aper->ranges[aper->count].size = pci_resource_len(pdev, 2);
> +		aper->count++;
> +	}
> +
> +	if (pci_resource_len(pdev, 3)) {
> +		aper->ranges[aper->count].base = pci_resource_start(pdev, 3);
> +		aper->ranges[aper->count].size = pci_resource_len(pdev, 3);
> +		aper->count++;
> +	}
> +
> +#ifdef CONFIG_X86
> +	boot = pdev->resource[PCI_ROM_RESOURCE].flags & IORESOURCE_ROM_SHADOW;
> +#endif
> +	if (nouveau_modeset != 2)
> +		drm_fb_helper_remove_conflicting_framebuffers(aper,
> "nouveaufb", boot);
> +	kfree(aper);
> +
> +	ret = nvkm_device_pci_new(pdev, nouveau_config, nouveau_debug,
> +				  true, true, ~0ULL, &device);
> +	if (ret)
> +		return ret;
> +
> +	pci_set_master(pdev);
> +
> +	if (nouveau_atomic)
> +		driver_pci.driver_features |= DRIVER_ATOMIC;
> +
> +	drm_dev = drm_dev_alloc(&driver_pci, &pdev->dev);
> +	if (IS_ERR(drm_dev)) {
> +		ret = PTR_ERR(drm_dev);
> +		goto fail_nvkm;
> +	}
> +
> +	ret = pci_enable_device(pdev);
> +	if (ret)
> +		goto fail_drm;
> +
> +	drm_dev->pdev = pdev;
> +	pci_set_drvdata(pdev, drm_dev);
> +
> +	ret = nouveau_drm_device_init(drm_dev);
> +	if (ret)
> +		goto fail_pci;
> +
> +	ret = drm_dev_register(drm_dev, pent->driver_data);
> +	if (ret)
> +		goto fail_drm_dev_init;
> +
> +	return 0;
> +
> +fail_drm_dev_init:
> +	nouveau_drm_device_fini(drm_dev);
> +fail_pci:
> +	pci_disable_device(pdev);
> +fail_drm:
> +	drm_dev_put(drm_dev);
> +fail_nvkm:
> +	nvkm_device_del(&device);
> +	return ret;
> +}
> +
>  void
>  nouveau_drm_device_remove(struct drm_device *dev)
>  {
> +	struct pci_dev *pdev = dev->pdev;
>  	struct nouveau_drm *drm = nouveau_drm(dev);
>  	struct nvkm_client *client;
>  	struct nvkm_device *device;
>  
> +	drm_dev_unregister(dev);
> +
>  	dev->irq_enabled = false;
>  	client = nvxx_client(&drm->client.base);
>  	device = nvkm_device_find(client->device);
> -	drm_put_dev(dev);
>  
> +	nouveau_drm_device_fini(dev);
> +	pci_disable_device(pdev);
> +	drm_dev_put(dev);
>  	nvkm_device_del(&device);
>  }
>  
> @@ -1020,8 +1051,6 @@ driver_stub = {
>  		DRIVER_GEM | DRIVER_MODESET | DRIVER_PRIME | DRIVER_RENDER |
>  		DRIVER_KMS_LEGACY_CONTEXT,
>  
> -	.load = nouveau_drm_load,
> -	.unload = nouveau_drm_unload,
>  	.open = nouveau_drm_open,
>  	.postclose = nouveau_drm_postclose,
>  	.lastclose = nouveau_vga_lastclose,
> ----------------------------------------------------------------------------
> ---
> 
> 
> Git bisection log:
> 
> ----------------------------------------------------------------------------
> ---
> git bisect start
> # good: [84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d] Linux 4.19
> git bisect good 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d
> # bad: [4c92b7b3080d8281941ae81c51cd62bb49bdc3d4] Add linux-next specific
> files for 20181206
> git bisect bad 4c92b7b3080d8281941ae81c51cd62bb49bdc3d4
> # bad: [c38239b4be1ac7e4bcf5bbd971353bae51525b8f] Merge branch 'parisc-4.20-
> 2' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux
> git bisect bad c38239b4be1ac7e4bcf5bbd971353bae51525b8f
> # good: [d49f8a52b15bf35db778035340d8a673149f9f93] Merge tag 'scsi-misc' of
> git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
> git bisect good d49f8a52b15bf35db778035340d8a673149f9f93
> # good: [ac747c0715f29c2be3848b719a1b7e65b07f7b21] Merge tag 'kbuild-v4.20'
> of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild
> git bisect good ac747c0715f29c2be3848b719a1b7e65b07f7b21
> # bad: [46972c03ab667dc298cad0c9db517fb9b1521b5f] Merge tag 'drm-misc-next-
> fixes-2018-10-10' of git://anongit.freedesktop.org/drm/drm-misc into drm-
> next
> git bisect bad 46972c03ab667dc298cad0c9db517fb9b1521b5f
> # good: [6ac99a328ee16d3f8cc253f1df62623cee3e9ea5] drm/exynos: mixer: Make
> plane alpha configurable
> git bisect good 6ac99a328ee16d3f8cc253f1df62623cee3e9ea5
> # good: [0957dc7097a3f462f6cedb45cf9b9785cc29e5bb] drm/amdgpu: revert "stop
> using gart_start as offset for the GTT domain"
> git bisect good 0957dc7097a3f462f6cedb45cf9b9785cc29e5bb
> # good: [2de0b0a158bf423208c3898522c8fa1c1078df48] Merge tag 'drm/tegra/for-
> 4.20-rc1' of git://anongit.freedesktop.org/tegra/linux into drm-next
> git bisect good 2de0b0a158bf423208c3898522c8fa1c1078df48
> # good: [04b96b63c5640a305e30611def7a9c5fcd7a72cf] drm/msm/dpu: Remove
> unneeded checks in dpu_crtc.c
> git bisect good 04b96b63c5640a305e30611def7a9c5fcd7a72cf
> # good: [6952e3a1dffcb931cf8625aa01642b9afac2af61] Merge branch 'for-
> upstream/mali-dp' of git://linux-arm.org/linux-ld into drm-next
> git bisect good 6952e3a1dffcb931cf8625aa01642b9afac2af61
> # good: [62e681f7dcab746412dce22d4b75b32c5ea38cdb] Merge tag 'drm-msm-fixes-
> 2018-10-09' of git://people.freedesktop.org/~robclark/linux into drm-next
> git bisect good 62e681f7dcab746412dce22d4b75b32c5ea38cdb
> # bad: [7e6191d4360a2df6cf2a2613dcb79680cb943df8] Merge branch 'linux-4.20'
> of git://github.com/skeggsb/linux into drm-next
> git bisect bad 7e6191d4360a2df6cf2a2613dcb79680cb943df8
> # good: [c4cee69a4497d9c6ad8868d63568b30e50cac9e9] drm/nouveau: Fix
> potential memory leak in nouveau_drm_load()
> git bisect good c4cee69a4497d9c6ad8868d63568b30e50cac9e9
> # bad: [a971558c298755d2c07bc5508c65d689471763c8] drm/nouveau/disp: keep
> track of high-speed state, program into clock
> git bisect bad a971558c298755d2c07bc5508c65d689471763c8
> # bad: [4126b99e744b7a29746e201e2be6644d2edf3c56] drm/nouveau/disp: add a
> way to configure scrambling/tmds for hdmi 2.0
> git bisect bad 4126b99e744b7a29746e201e2be6644d2edf3c56
> # bad: [cfea88a4d86632f28cf80be97079f131645b7869] drm/nouveau: Start using
> new drm_dev initialization helpers
> git bisect bad cfea88a4d86632f28cf80be97079f131645b7869
> # first bad commit: [cfea88a4d86632f28cf80be97079f131645b7869] drm/nouveau:
> Start using new drm_dev initialization helpers
> ----------------------------------------------------------------------------
> ---
-- 
Cheers,
	Lyude Paul

