Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5478758042F;
	Fri,  7 Dec 2018 02:58:35 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 02:58:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AE3CWCxwVgnMbnOfXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8VK/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOSM3/m/UjcJ/jqxbrx29qBJw2I7UeIOYOeFifq7eZ94WWXBMUtpTWiFHH4iy?=
 =?us-ascii?q?b5EPD+0EPetAtYfyvVUPogW6BQKxGu7vyjpIhn7o0q0+zu8sFhnG0xYuHt0QtH?=
 =?us-ascii?q?TYttD1NKYRUeCyyKnH1zfDY+lK1jf97YjIcw4uofWXULJ/dMre00gvFwffglqM?=
 =?us-ascii?q?rozlOiqY2+IQuGaY9+ptTfyjh3Ijpg1rvzSiyNkghpPUio8W1lzI7yR0zYQtKd?=
 =?us-ascii?q?GmUkF3fcCoHZ5KuCyUKod7QsYvTmFntSs1yrALvJ62cSYWxJg7whPSafOKfJWI?=
 =?us-ascii?q?7x/mVOudPCx3i2hgdb6hhhu/80atx+jyVsS63lZHoSxImcTWuH8XzRzc8M2HR+?=
 =?us-ascii?q?N9/ki/3TaP0Bje6v9LIU8qj6rXMZ0hzaAqlpoVr0vDGjX6mELsjK+Zbkkk++6o?=
 =?us-ascii?q?5Pr7Yrj+uJOQK4t5hhvjPqkghMCzG/k0PwsSU2SB+Omx1qXv/UjjT7VLiv02nL?=
 =?us-ascii?q?PZsJffJckDoq65AglV0pss6hqmDDepzs4YnX8ZI1JBYR6HiIboO1fQL/DiFvq/?=
 =?us-ascii?q?nVusnylxx/zcPb3uHI/NLn7dn7flZ7p97FRcyAUrwdBF+51UEq0BIO70WkLpsN?=
 =?us-ascii?q?zYDxw5PBKuz+foFdVwzYceWWOJAq+EP6Leq16I5uQzI+aSYI8ZoiryK/8g5/T2?=
 =?us-ascii?q?l382hUcdfbW13ZsQcH24Hu5pI0SFYXX2hdcNC2cKvhckQ+zsh12PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZmpeEFCDDW/od5mYW/cLcC+SIMhhnSIe?=
 =?us-ascii?q?WbiiTI8h0xeutAjhxrpjL+rU/DAYtJ352Nh04e3TiQ899ThuA8uB1GGNSnl+nn?=
 =?us-ascii?q?kUSD8uwKB/vUt9x0+Z3qhjg/xYEt9T6+lTUgggN57R1Oh6C9H0WgLccdaFUlem?=
 =?us-ascii?q?QtO6AT4vStI92cMBY0F4G9+6lBDMwzKqA6MJl7yMHJE08bjT337rK8Z5ynbJzq?=
 =?us-ascii?q?8hj1Y9T8tLNG2mgLN/9gfJC47IlUWZi7ildaAG0CHR82eDyHKEvFtEXw5oTaXF?=
 =?us-ascii?q?QXcfa1PLotvj+EPNUaWiCbQ9PQtH0s6NNK1KZtrtjVVFQffjPM/TY2awm2e2GB?=
 =?us-ascii?q?aJyamAbIvse2UBwirdDFIInBwU/XaDLQI+HDuuo3rCDDxyElLie17j/vNgqHyl?=
 =?us-ascii?q?VEM0zxuFb0t617Wr/B4YnvicS/IV3rIZtyYtsTR0HFCh393ID9qMvRZufKJZYd?=
 =?us-ascii?q?kl+ldIyXrZtxBhPpynN61iml8ecwFwv0Py1xV2Cp9MkdQwoHMt1gpyLaOY0FVO?=
 =?us-ascii?q?dz6D2ZDwO7vXKnT9/Ry1aq7W3E3e38iS+qsV9Ps4rFDjthmzFkU+63Vnz8VV03?=
 =?us-ascii?q?yE65rQCAodT53wXVg39hRgvL7afzQy6JnS1X1vNqm0rCTP29YoBOsj1xahcM1T?=
 =?us-ascii?q?MKKCFA/uDcIaA9KiJ/Atm1isdhgEJvxd9LYoP8O6cPuLwK6qPPt6kD26l2hG4Y?=
 =?us-ascii?q?B93ViK9ypzUePI25cFw/eF3gqITTv8jVGhstzploBAfz0dAm2/yS38Do5LeqJy?=
 =?us-ascii?q?ZZoLCXupI8Cv3NV+hoLiVGRC9FG+AFMKwsmpdgSIb1z8xAFfyV4YoXi6liSm1T?=
 =?us-ascii?q?x0lDcpo7Gb3CzPxeTiaRUGNnRKRGlkkVfjP4y0g8oGU0ivaggjjAGl6lrix6hH?=
 =?us-ascii?q?uKR/KHHeQEdJfyTsL2BuSLCwtqeEY8NU7JMosCNXUPmzYFyAS779pQca3D3nH2?=
 =?us-ascii?q?dE2D87cDSqsI3jnxNmkGKdMGpzrH3BdMFy3xjf/t/cRf1W3jYcXyl3kzrXBlu9?=
 =?us-ascii?q?P9mv49qUkYzOsuS/V2KnS51SfjPnzYKGtCun+2JqBQezkOy0mt3iCQI6yzP018?=
 =?us-ascii?q?F2VSXUqxbxeonq2L69Me59fEloBVn85tF+GoF/lIswmZ4R1WIbhpWT4XoIj2Pz?=
 =?us-ascii?q?Pc9H1qL5aXoHXSQLzMLN4Aj5xE1jKWqEx4HjWXWc2MdhZ8S6bXkQ2iIy9M1KDK?=
 =?us-ascii?q?aU7LpZnSp6uFa4rATRYeRjkTcZ0/ch9Hkag+QRsgo30iqdGqwSHVVfPSH0khSI?=
 =?us-ascii?q?7tO+o79NaGehb7ewz1Z+ks67DL6ZvA5cQnn5d4wmHS9x6MV/LV3N3Gfy6oHiZN?=
 =?us-ascii?q?nfc9YTugeInBfHiuhfMIgxmeYShSp7JWL9umUoy/I8jRxrx527vZKIK2Nw/KKi?=
 =?us-ascii?q?GR5YNyb4Z8cS+jHrkKZfkdya34GpHpV9BDoLWIHkQu6vEDIXrf7nLRqBECUgqn?=
 =?us-ascii?q?eHHrrSBRSQ511hr3LLDpCnLXWXJGQCwNVmRRmdIlFfgQ8OUDU7mJ45Ch6lxMj7?=
 =?us-ascii?q?fEhl4TAR40byqgFQxeJwKxn/TmDfqR+qajguTZiQMgFW4hte50vPMsye8+FzHz?=
 =?us-ascii?q?xe/pK7twyAMWibZwVODWEUVU2IHVHjPr+y5dbe9+iUHPaxL/zLYb+Ws+xRS++I?=
 =?us-ascii?q?xY6z0oth5zuNNsKPPmR7D/0mwEVDW2p1G9/emzUJRCwajCbNb8+dpBeh9Sx7tM?=
 =?us-ascii?q?G/8PL3WA3x4YuDEaddMdJq+xqum6eMK/aQhDplKTZfzp4MxWHHyLkc3F4RiiFi?=
 =?us-ascii?q?bTqtEa4HtS7CUq3QgLJXDwUAZiN3NctI6b883wZXNc7ajNP1yqB3jvovB1hZUl?=
 =?us-ascii?q?zhn9mjZdYWLGGlKFPHGEGLOaycKj3W2M73e72zSL1KgOVQth29ojKbE07lPjSe?=
 =?us-ascii?q?mDjlTRGvMedQjC6FOBxSop2ychFoCWL7VtLpdgW7MMNrjT0x2bA0mnLKNWsGPT?=
 =?us-ascii?q?dgaU9Csr2Q4j1egvhkH2xB73xlLfSLmiqD7unYLIoWvuVvAihui+1a53E6waNP?=
 =?us-ascii?q?7C5YXPx1hDfSrtl2rlCmiOaPzD9nUBtIqjlThYOLvV9tOaPW9pRbXXbE/RQN7X?=
 =?us-ascii?q?ifChgQpttlDMHvtL5UytTViK3zLzJCoJro+p4QAsnIMtPBLH07NhnpHyD8Aw4M?=
 =?us-ascii?q?TDrtPmbawwRHl/uStXGJhps3sJ7hnNwJULAfHFk8DPBcEFl5GNUELL9+RDZimr?=
 =?us-ascii?q?me3+AS4n/rlBDOScESlZDCV/+WSaH3ISmUif9BZhgPxbr6a48TM4z232Rtb1B7?=
 =?us-ascii?q?mMLBHE+GDoMFmTFocgJh+BYFy3N5VGBmg08=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BAAABqUQpch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCOyeDepQpKYE/JRSJD4FIjGSBcxIBARgTAYdaIjUIDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkjDII2IoJlAwMBAiAECwENARsdAQMCCQEBBRAKBQImA?=
 =?us-ascii?q?gIDHgIRAQUBHAcSBYMcgWkBAxUBBJk+PIsNfBYFAReCdwWEQAoZJw1dMoEFAgY?=
 =?us-ascii?q?SeYZlgxOBHHqBHIFEhTaCDoMgglcCiS0KhgSBTI8yLgcCgxeDL4N5g12DJAsYi?=
 =?us-ascii?q?WOHVYkQhX+JZQIEAgQFAgUPIYEmAYILTSOBAYI7ghsMF4NKilQ/MgGBAwEBATu?=
 =?us-ascii?q?KBQEB?=
X-IPAS-Result: =?us-ascii?q?A0BAAABqUQpch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?COyeDepQpKYE/JRSJD4FIjGSBcxIBARgTAYdaIjUIDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkjDII2IoJlAwMBAiAECwENARsdAQMCCQEBBRAKBQImAgIDHgIRAQUBHAc?=
 =?us-ascii?q?SBYMcgWkBAxUBBJk+PIsNfBYFAReCdwWEQAoZJw1dMoEFAgYSeYZlgxOBHHqBH?=
 =?us-ascii?q?IFEhTaCDoMgglcCiS0KhgSBTI8yLgcCgxeDL4N5g12DJAsYiWOHVYkQhX+JZQI?=
 =?us-ascii?q?EAgQFAgUPIYEmAYILTSOBAYI7ghsMF4NKilQ/MgGBAwEBATuKBQEB?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="65774388"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 07 Dec 2018 02:58:34 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726129AbeLGK6c (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 05:58:32 -0500
Received: from mail-lj1-f195.google.com ([209.85.208.195]:32845 "EHLO
        mail-lj1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725992AbeLGK6a (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 05:58:30 -0500
Received: by mail-lj1-f195.google.com with SMTP id v1-v6so3215272ljd.0;
        Fri, 07 Dec 2018 02:58:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=knG6SyfDCGJn7gk77p8M/RfgY6AhBS/jOJor+ETKwuw=;
        b=uis4/8d3PSYf/KxJPBFPuq9zQk3n9I1r43bfgu34jnZp3cClc8v7T0hFu/ZmO74kCG
         +z2odhEXVfiUA//0yijq0pqdjlX82wEGazAVERPdykzpT6cjeo2C3ZAu5e1TgC8w90K/
         yl+1zI7nmr04kclTC1N4IHQLhTnucirn6ogWZgWYaH9zfoCom0vFodXEGrSP4mSt/e/8
         wN56qiGqB/Q0k8eTsbZMM5gGl6qYbQoxg9g2YPs2c9ZEwrVP7k6xEldGNrKnc+O3+vOZ
         tF7bgt4vm4XOC9zWhkZqXtuSAeTekWtYSp9D10x6Az0eDFe9dpmWN/2OMGbKnFp6UPIw
         Xbhg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=knG6SyfDCGJn7gk77p8M/RfgY6AhBS/jOJor+ETKwuw=;
        b=JD3uRaMdnuk84MaRZ0R85kJ9lwXPieCmDdiZsBwmA4zI2UdRdQMQQIEqoGHQbJx90j
         uK5SBJAxJGpaaWWBHNOiiEwpixQQiyNwiXhSOjMrL0u0x/IxunhGPFGPTuDJNviLzTa7
         BPfP1s1WqBpsePLLhnyw1H0Wc4vfjTYVoqEnZJ3n85XAt5x0kbo5JVgskeeQcMPmCyWk
         XNwwKGHA7EpK7b3Ycs00+mZX2Gtc9hQK0F5pecd9KQDq/idFyQUp/ADexl8tAUjnxNyC
         fBNO0bCqpkYUzKhv33JbF21JBqfsOl/KUyqgsTZOngnQl1PTvv8j+QhDidjEknZc5OLb
         N2/g==
X-Gm-Message-State: AA+aEWZ1Lb3e/aiXiL0zZCUqVXm8HnBsKqh5vPT2h/x/+oEtf32TNWNU
        NtZTqjckPb6I+aA/S1cXOFk=
X-Google-Smtp-Source: AFSGD/Wk8R/X1JZz5dmYqkGgc5MPuZ4AupG3QqXjIRee+wlCAt+xQqCeYlFddi77aNdVpzyIvwRuYg==
X-Received: by 2002:a2e:9356:: with SMTP id m22-v6mr1048761ljh.135.1544180306549;
        Fri, 07 Dec 2018 02:58:26 -0800 (PST)
Received: from localhost.localdomain ([2a02:a315:5445:5300:74d5:51ba:2673:f3f4])
        by smtp.googlemail.com with ESMTPSA id a20-v6sm523362ljf.28.2018.12.07.02.58.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 07 Dec 2018 02:58:25 -0800 (PST)
From: =?UTF-8?q?Pawe=C5=82=20Chmiel?= <pawel.mikolaj.chmiel@gmail.com>
To: dmitry.torokhov@gmail.com, robh+dt@kernel.org, mark.rutland@arm.com
Cc: devicetree@vger.kernel.org, linux-input@vger.kernel.org,
        linux-kernel@vger.kernel.org, pawel.mikolaj.chmiel@gmail.com,
        xc-racer2@live.ca, simon@lineageos.org
Subject: [PATCH 5/8] Input: tm2-touchkey: Allow specifying custom keycodes
Date: Fri,  7 Dec 2018 11:58:08 +0100
Message-Id: <20181207105811.1831-6-pawel.mikolaj.chmiel@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181207105811.1831-1-pawel.mikolaj.chmiel@gmail.com>
References: <20181207105811.1831-1-pawel.mikolaj.chmiel@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Jonathan Bakker <xc-racer2@live.ca>

Not all devices use the same keycodes in the same order

Signed-off-by: Jonathan Bakker <xc-racer2@live.ca>
Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
---
 drivers/input/keyboard/tm2-touchkey.c | 49 +++++++++++++++------------
 1 file changed, 27 insertions(+), 22 deletions(-)

diff --git a/drivers/input/keyboard/tm2-touchkey.c b/drivers/input/keyboard/tm2-touchkey.c
index a73894b8dede..ebc275ab8ad1 100644
--- a/drivers/input/keyboard/tm2-touchkey.c
+++ b/drivers/input/keyboard/tm2-touchkey.c
@@ -36,11 +36,6 @@
 #define TM2_TOUCHKEY_LED_VOLTAGE_MIN	2500000
 #define TM2_TOUCHKEY_LED_VOLTAGE_MAX	3300000
 
-enum {
-	TM2_TOUCHKEY_KEY_MENU = 0x1,
-	TM2_TOUCHKEY_KEY_BACK,
-};
-
 struct touchkey_variant {
 	const char *name;
 	u8 keycode_reg;
@@ -54,6 +49,8 @@ struct tm2_touchkey_data {
 	struct regulator *vdd;
 	struct regulator_bulk_data regulators[2];
 	struct touchkey_variant *variant;
+	u8 keycodes[4];
+	int num_keycodes;
 };
 
 static struct touchkey_variant tm2_touchkey_variant = {
@@ -116,7 +113,8 @@ static irqreturn_t tm2_touchkey_irq_handler(int irq, void *devid)
 {
 	struct tm2_touchkey_data *touchkey = devid;
 	int data;
-	int key;
+	int index;
+	int i;
 
 	data = i2c_smbus_read_byte_data(touchkey->client,
 					touchkey->variant->keycode_reg);
@@ -126,26 +124,20 @@ static irqreturn_t tm2_touchkey_irq_handler(int irq, void *devid)
 		goto out;
 	}
 
-	switch (data & TM2_TOUCHKEY_BIT_KEYCODE) {
-	case TM2_TOUCHKEY_KEY_MENU:
-		key = KEY_PHONE;
-		break;
-
-	case TM2_TOUCHKEY_KEY_BACK:
-		key = KEY_BACK;
-		break;
-
-	default:
+	index = (data & TM2_TOUCHKEY_BIT_KEYCODE) - 1;
+	if (index < 0 || index >= touchkey->num_keycodes) {
 		dev_warn(&touchkey->client->dev,
-			 "unhandled keycode, data %#02x\n", data);
+			 "invalid keycode index %d\n", index);
 		goto out;
 	}
 
 	if (data & TM2_TOUCHKEY_BIT_PRESS_EV) {
-		input_report_key(touchkey->input_dev, KEY_PHONE, 0);
-		input_report_key(touchkey->input_dev, KEY_BACK, 0);
+		for (i = 0; i < touchkey->num_keycodes; i++)
+			input_report_key(touchkey->input_dev,
+					 touchkey->keycodes[i], 0);
 	} else {
-		input_report_key(touchkey->input_dev, key, 1);
+		input_report_key(touchkey->input_dev,
+				 touchkey->keycodes[index], 1);
 	}
 
 	input_sync(touchkey->input_dev);
@@ -157,8 +149,10 @@ static irqreturn_t tm2_touchkey_irq_handler(int irq, void *devid)
 static int tm2_touchkey_probe(struct i2c_client *client,
 			      const struct i2c_device_id *id)
 {
+	struct device_node *np = client->dev.of_node;
 	struct tm2_touchkey_data *touchkey;
 	int error;
+	int i;
 
 	if (!i2c_check_functionality(client->adapter,
 			I2C_FUNC_SMBUS_BYTE | I2C_FUNC_SMBUS_BYTE_DATA)) {
@@ -189,6 +183,16 @@ static int tm2_touchkey_probe(struct i2c_client *client,
 	/* Save VDD for easy access */
 	touchkey->vdd = touchkey->regulators[1].consumer;
 
+	touchkey->num_keycodes = of_property_read_variable_u8_array(np,
+					"keycodes", touchkey->keycodes, 0,
+					ARRAY_SIZE(touchkey->keycodes));
+	if (touchkey->num_keycodes <= 0) {
+		/* default keycodes */
+		touchkey->keycodes[0] = KEY_PHONE;
+		touchkey->keycodes[1] = KEY_BACK;
+		touchkey->num_keycodes = 2;
+	}
+
 	error = tm2_touchkey_power_enable(touchkey);
 	if (error) {
 		dev_err(&client->dev, "failed to power up device: %d\n", error);
@@ -213,8 +217,9 @@ static int tm2_touchkey_probe(struct i2c_client *client,
 	touchkey->input_dev->name = touchkey->variant->name;
 	touchkey->input_dev->id.bustype = BUS_I2C;
 
-	input_set_capability(touchkey->input_dev, EV_KEY, KEY_PHONE);
-	input_set_capability(touchkey->input_dev, EV_KEY, KEY_BACK);
+	for (i = 0; i < touchkey->num_keycodes; i++)
+		input_set_capability(touchkey->input_dev, EV_KEY,
+				     touchkey->keycodes[i]);
 
 	error = input_register_device(touchkey->input_dev);
 	if (error) {
-- 
2.17.1

