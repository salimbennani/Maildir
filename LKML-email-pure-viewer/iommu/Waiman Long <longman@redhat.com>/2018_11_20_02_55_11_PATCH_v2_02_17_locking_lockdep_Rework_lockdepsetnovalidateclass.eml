Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:34:46 -0000
Received: from icoremail.net (unknown [209.85.210.176])
	by mail-app4 (Coremail) with SMTP id cS_KCgCn32SSB_NbetrZAQ--.31469S3;
	Tue, 20 Nov 2018 02:57:22 +0800 (CST)
Received: from mail-pf1-f176.google.com (unknown [209.85.210.176])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBXPEiQB_Nbv8lZAA--.6556S3;
	Tue, 20 Nov 2018 02:57:20 +0800 (CST)
Received: by mail-pf1-f176.google.com with SMTP id z9so796010pfi.2
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 10:57:20 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references:sender
         :precedence:list-id;
        bh=3f2kXbq7ok7E/qMIuI8uIAU15Mf4RLPeqbdYXouJSBg=;
        b=oLi7xLbz51Ics5Flrm3kMrd48fdmQy8D7RUCMgJ4CWCd6QXbWBMNU9RLKLgfnUtDvS
         dlG7V7Ra26UOnP6Ty7RQIBa7rpgGAZSPAyvvNgosBO0Yga/RLxWwQoc9W550M0S8x92s
         Hhi3h+r42hfHUgwVzWPndqUwEpY6r7hcJXsPHrFwnYy3tMrKOIiQSIbARfwN2uQ6ae97
         OE5zKk2YYYGlp6bRQzxHoP/VPMR87UDmxKiEGCkicHAz/EvpPD2NUdplp3XRu/ojdrFk
         zTnSwqGs66dpq0pFTgmh2kEzYdcOpQV7sxfKRKhrkneRpWcSFc3vex3BxxJpEBg7rsaO
         nShw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gLK1PnNADYTE9C40dytekJ56R3VPH6No83ZADEWp6FDoeHR16YL
	nTNL079ONtlRS+XYS7CQC48hN+u+AFIgYx4SnMK/1loSvtx84RY=
X-Received: by 2002:a63:2315:: with SMTP id j21mr21326920pgj.297.1542653840278;
        Mon, 19 Nov 2018 10:57:20 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3048725pju;
        Mon, 19 Nov 2018 10:57:19 -0800 (PST)
X-Google-Smtp-Source: AJdET5fjVCpUk6UlYXFADt0PDIdoYXwhD3ICviGpoaLjegff5v10fBwabwLquJ3EzJg41shULoSm
X-Received: by 2002:a63:e302:: with SMTP id f2mr21488440pgh.320.1542653839420;
        Mon, 19 Nov 2018 10:57:19 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542653839; cv=none;
        d=google.com; s=arc-20160816;
        b=Lpfs3riRRGQIqPk+ML22AAbzofRZi6hQVWFVeviF2EARb+Cy7SoI8WuVRDASzbbeuy
         0c/W3Raa6ZamJQUcmw2L9OUhw05LlEgXZiGXkNjQrBFOsa7P/bsGz7rulgCUc4DbP194
         x+r3ftsidwnlimBFWWsiUliMGMryMhr1ZMnnfVd6HbLcr2HLhjWpAPoMkDd6+bj4QijW
         9URuUBjAzk5c60RzbgjU+8+JfWW7mKJVePcWFKcCO6ASmm9DrWgXwbOu5OeosyNgfCUH
         GmhvgZiW63WKeWdo6+reE70e9Kncne/SvqB7psPpTAUzE402+zAY7gLbEp3/jTZqCf9V
         uJYQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:references:in-reply-to:message-id:date
         :subject:cc:to:from;
        bh=3f2kXbq7ok7E/qMIuI8uIAU15Mf4RLPeqbdYXouJSBg=;
        b=J8wtYumeRgtp1kOmGl1kbLzDYSGbaZ+kfsjLtdU5U042fzqH2z4u3hz0qK6HEMo9sR
         r9cr8zCh8sxhSdVTCM2d4MDca/jQJYsniLdvWwAX9Y+TqQn0KqdqLHSqgfrS+y4l8Whf
         CLPJ7jSK6uJdSf+lnfzbMJjh93QLWOjClweK3mpVsiB7EBqkM9kT82QY2vsO1JoFEz8w
         1wYN4dXON5EmMfO4WieilSwom7I7P9Bl/nX9fz+EWPCnybyfLD69UXwETvW+Fs8H4N6P
         tr/Ht1P/QTlDAgotSwggmXSyVesccExqug02uzyUMDvNERsZL/9HY7Zciohi+qH5kkH/
         0q0A==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id e129si39282297pgc.333.2018.11.19.10.57.05;
        Mon, 19 Nov 2018 10:57:19 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726925AbeKTFVt (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 00:21:49 -0500
Received: from mx1.redhat.com ([209.132.183.28]:36722 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725770AbeKTFVr (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 00:21:47 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 4D11573A85;
        Mon, 19 Nov 2018 18:56:53 +0000 (UTC)
Received: from llong.com (dhcp-17-55.bos.redhat.com [10.18.17.55])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 73CCE608E7;
        Mon, 19 Nov 2018 18:56:51 +0000 (UTC)
From: Waiman Long <longman@redhat.com>
To: Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Will Deacon <will.deacon@arm.com>,
        Thomas Gleixner <tglx@linutronix.de>
Cc: linux-kernel@vger.kernel.org, kasan-dev@googlegroups.com,
        linux-mm@kvack.org, iommu@lists.linux-foundation.org,
        Petr Mladek <pmladek@suse.com>,
        Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
        Andrey Ryabinin <aryabinin@virtuozzo.com>,
        Tejun Heo <tj@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Waiman Long <longman@redhat.com>
Subject: [PATCH v2 02/17] locking/lockdep: Rework lockdep_set_novalidate_class()
Date: Mon, 19 Nov 2018 13:55:11 -0500
Message-Id: <1542653726-5655-3-git-send-email-longman@redhat.com>
In-Reply-To: <1542653726-5655-1-git-send-email-longman@redhat.com>
References: <1542653726-5655-1-git-send-email-longman@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.26]); Mon, 19 Nov 2018 18:56:53 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBXPEiQB_Nbv8lZAA--.6556S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxGryfAw1UZF4rKF45tFWDJwb_yoWrtF43pF
	srKF97KrW8XF4xWF17Ja1DXF43Kw1xWFy7CF4ag3WfAF9Fqr1fXF1xWF15CFyUXrWfCwsI
	qa1UuF4DK34UC3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6rylc2IjII80xcxEwVAKI48JMxvI42IY6xIIjxv20xvE14v26r1I6r4UMxvI42IY6x
	IIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAIcVC2
	z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07
	x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWU
	GwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI4
	8JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsGvfC2KfnxnUUI43ZEXa7IUOLvKUUU
	UUU==

The current lockdep_set_novalidate_class() implementation is like
a hack. It assigns a special class key for that lock and calls
lockdep_init_map() twice.

This patch changes the implementation to make it as a flag bit instead.
This will allow other special locking class types to be defined and
used in the lockdep code.  A new "type" field is added to both the
lockdep_map and lock_class structures.

The new field can now be used to designate a lock and a class object
as novalidate. The lockdep_set_novalidate_class() call, however, should
be called only after lock initialization which calls lockdep_init_map().

For 64-bit architectures, the new type field won't increase the size
of the lock_class structure. The lockdep_map structure won't change as
well for 64-bit architectures with CONFIG_LOCK_STAT configured.

Please note that lockdep_set_novalidate_class() should not be used at
all unless there is overwhelming reason to do so.  Hopefully we can
retired it in the near future.

Signed-off-by: Waiman Long <longman@redhat.com>
---
 include/linux/lockdep.h  | 17 ++++++++++++++---
 kernel/locking/lockdep.c | 14 +++++++-------
 2 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/include/linux/lockdep.h b/include/linux/lockdep.h
index c5335df..8fe5b4f 100644
--- a/include/linux/lockdep.h
+++ b/include/linux/lockdep.h
@@ -58,8 +58,6 @@ struct lock_class_key {
 	struct lockdep_subclass_key	subkeys[MAX_LOCKDEP_SUBCLASSES];
 };
 
-extern struct lock_class_key __lockdep_no_validate__;
-
 #define LOCKSTAT_POINTS		4
 
 /*
@@ -94,6 +92,11 @@ struct lock_class {
 	struct list_head		locks_after, locks_before;
 
 	/*
+	 * Lock class type flags
+	 */
+	unsigned int			flags;
+
+	/*
 	 * Generation counter, when doing certain classes of graph walking,
 	 * to ensure that we check one node only once:
 	 */
@@ -140,6 +143,12 @@ struct lock_class_stats {
 #endif
 
 /*
+ * Lockdep class type flags
+ * 1) LOCKDEP_FLAG_NOVALIDATE: No full validation, just simple checks.
+ */
+#define LOCKDEP_FLAG_NOVALIDATE 	(1 << 0)
+
+/*
  * Map the lock object (the lock instance) to the lock-class object.
  * This is embedded into specific lock instances:
  */
@@ -147,6 +156,7 @@ struct lockdep_map {
 	struct lock_class_key		*key;
 	struct lock_class		*class_cache[NR_LOCKDEP_CACHING_CLASSES];
 	const char			*name;
+	unsigned int			flags;
 #ifdef CONFIG_LOCK_STAT
 	int				cpu;
 	unsigned long			ip;
@@ -294,7 +304,8 @@ extern void lockdep_init_map(struct lockdep_map *lock, const char *name,
 				 (lock)->dep_map.key, sub)
 
 #define lockdep_set_novalidate_class(lock) \
-	lockdep_set_class_and_name(lock, &__lockdep_no_validate__, #lock)
+	do { (lock)->dep_map.flags |= LOCKDEP_FLAG_NOVALIDATE; } while (0)
+
 /*
  * Compare locking classes
  */
diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c
index 1efada2..493b567 100644
--- a/kernel/locking/lockdep.c
+++ b/kernel/locking/lockdep.c
@@ -692,10 +692,11 @@ static int count_matching_names(struct lock_class *new_class)
 	hlist_for_each_entry_rcu(class, hash_head, hash_entry) {
 		if (class->key == key) {
 			/*
-			 * Huh! same key, different name? Did someone trample
-			 * on some memory? We're most confused.
+			 * Huh! same key, different name or flags? Did someone
+			 * trample on some memory? We're most confused.
 			 */
-			WARN_ON_ONCE(class->name != lock->name);
+			WARN_ON_ONCE((class->name  != lock->name) ||
+				     (class->flags != lock->flags));
 			return class;
 		}
 	}
@@ -788,6 +789,7 @@ static bool assign_lock_key(struct lockdep_map *lock)
 	debug_atomic_inc(nr_unused_locks);
 	class->key = key;
 	class->name = lock->name;
+	class->flags = lock->flags;
 	class->subclass = subclass;
 	INIT_LIST_HEAD(&class->lock_entry);
 	INIT_LIST_HEAD(&class->locks_before);
@@ -3108,6 +3110,7 @@ static void __lockdep_init_map(struct lockdep_map *lock, const char *name,
 		return;
 	}
 
+	lock->flags = 0;
 	lock->name = name;
 
 	/*
@@ -3152,9 +3155,6 @@ void lockdep_init_map(struct lockdep_map *lock, const char *name,
 }
 EXPORT_SYMBOL_GPL(lockdep_init_map);
 
-struct lock_class_key __lockdep_no_validate__;
-EXPORT_SYMBOL_GPL(__lockdep_no_validate__);
-
 static int
 print_lock_nested_lock_not_held(struct task_struct *curr,
 				struct held_lock *hlock,
@@ -3215,7 +3215,7 @@ static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,
 	if (unlikely(!debug_locks))
 		return 0;
 
-	if (!prove_locking || lock->key == &__lockdep_no_validate__)
+	if (!prove_locking || (lock->flags & LOCKDEP_FLAG_NOVALIDATE))
 		check = 0;
 
 	if (subclass < NR_LOCKDEP_CACHING_CLASSES)
-- 
1.8.3.1
