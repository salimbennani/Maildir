Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:41:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 31B735803DC;
	Tue, 11 Dec 2018 21:49:57 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 21:49:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyvpqoBXYtV6gwUfUMOrHyxBqHjPV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhKFu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeQPPuhWqIvyp1UVrRumBwShH//jxiNSi3Pqx6A2z/gtHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3oOqcIUOC1yrPHzSnDb/hL3jny8o7IchY7rvGJQLl9dtHRyVMuFwPDlFqQ?=
 =?us-ascii?q?tYzlMymQ1usXtWib6fBvVee0hmE8sQFxpSKgydowhYnOg4IZ0EzL9SJ8wIssI9?=
 =?us-ascii?q?CzVU11Yca8HZdOqy2XM5F6Tt4sTm12oio2174LtYKhcCULypkr3wPTZviZf4SS?=
 =?us-ascii?q?/x7uUPydLSl2iX9qYr6zmRa//VSmx+bhTMe7ykxKoTBAktTUtnACyRjT6s+fR/?=
 =?us-ascii?q?tj8UeuxyyP2xrQ6u5aO0A0k7TUK5o7zr43jJoTvlzPHi7wmErokK+bblso9vSs?=
 =?us-ascii?q?5uj9f7nrqIGQO5Vphgz9LqgigM2yDOYgPggLRWeb+OC81LP5/U3+RbVHlvk2kq?=
 =?us-ascii?q?jfsJDHKsUXv625DBFP0oYl9Rm/Cy6q0NMWnHkBMl1FYgmKj5bmO17QOvD0F/S/?=
 =?us-ascii?q?jEq2kDdt2f/GOqftApLXLnjMiLvhZ6py61ZAyAovytBS/5ZUCrACIP3tQEPwu8?=
 =?us-ascii?q?HYAwQ9Mwy1xebnFdp82pkfWWKJHq+WLqfSvUWU6eIoJumGfJUVtyrlK/g5+/7u?=
 =?us-ascii?q?imc0mV8HcqmowZsYcne4Eu5mI0WEe3XshNgBHHwOvgo/SuzqlVKDXSRSZ3a0Q6?=
 =?us-ascii?q?Iz+DU7BJi6AofEQ4CnmKaB0zujHp1KemBGDUiBEXXvd4qaQfsMayWSIslnkjwD?=
 =?us-ascii?q?TrWhT44h1ReztA710bZnL+zU+jEGupLnztR6++rTlRQq/zxuE8udy32NT31znm?=
 =?us-ascii?q?4QXTA2x6B/oUt+yluZy6h3mf5YGMdX5/NIVAc6KJHdw/Z7C9D0RgLOYNOJREy6?=
 =?us-ascii?q?TdWhBDE7VsgxzMMWY0ZhB9WiiQjO3ymwDL8TjbCLAJ00/bja33j+PMt9z3fG1K?=
 =?us-ascii?q?88j1gpWMdPNGumhrJh+AjXHYLGj0KZl6Oyf6QGwCHN7HuDzXaJvExATQF/S7vF?=
 =?us-ascii?q?Um4FakvWt9v54FjCQKGoCbggNgtBysuCKq9RZ93tjFVGQurjOdvEb2KwnWewGQ?=
 =?us-ascii?q?iHxreWYIX2fGUd2T3XCFIYnAAL4XaGKQ8+Cz+8rG3EEjxhC0jjY0P2/ul4s3O0?=
 =?us-ascii?q?UEk0whqOb01g0bq15xEUieadS/MVwrILpiMhpy9oE1a62tLcE8CAqBZ5fKVAfd?=
 =?us-ascii?q?M9509K1X7Ytwx4OZygM6Bih14EfwRrpU/u0A93CoFBkcgso3Mn1w5yKaOe0FNc?=
 =?us-ascii?q?eDKUx5HwOrvLKmbs+BCjcbLZ2lbb0NyO4KcA9Ow4q0n/vAGuDkct6XFn3Mda0n?=
 =?us-ascii?q?SC5pTGFhEdUY/sXUkt8Rh6pLbaYjcm6oPQ1H1sN7S0szDY19IoAusl1givf9NF?=
 =?us-ascii?q?PKyYEw/yFtUQB9KyJ+wyh1ipchUEMfhS9a4pJc+pa+GK2a+rPOl6mjKmgn9K4I?=
 =?us-ascii?q?R80kKK6ip9RfTE35cDw/GEwASHUy3wg0umssDygYpEfy0dHnKjySj4A45cfrdy?=
 =?us-ascii?q?fYcXBmi0Oc2429J+i4TrW3FG7l6jBkoK19OzdhqWclPywxdQ1UMRoXG8nSu4zj?=
 =?us-ascii?q?p0kywmr6aF3SzOxfjiewQDOmJRWGZiilLsK5Cuj98GREiocxQplBy96Ef6xqhX?=
 =?us-ascii?q?vqR+I3PIQUdVeSj7NGViUqq2trqfbM9D8pIosSNLUOuiZVCWUKLyoxwf0yn7BW?=
 =?us-ascii?q?tR2Cg7dy22upX+hxF6iniSLGxwrHrafsF83wzf68bfRf5S3zoGQjd3iT/MC1i4?=
 =?us-ascii?q?Ptmp+8iUlpjZvuC/UWKhSoNccS3xwYycsyu74HVgAQejkPCrht3nDQ863Df71t?=
 =?us-ascii?q?ZwUiXEthT8Yojt16mhNeJnf09oBELz6sZgG4F+lJcwi48U2XQAmpqV+n8Hm3/p?=
 =?us-ascii?q?MdpHwaL+cGYNRTkTzt7W+gfl2VdvLnKUx43jUHWdzdBsZ927YmMQxyI84NpGCK?=
 =?us-ascii?q?aS7LxYgyR1pkC0oh7WYfh4hj0d0+ch6GYGg+EVvwog1iCdArERHUZCJyDtmQqH?=
 =?us-ascii?q?78uirKpJfmagaqa/1FBxnd26CLGCowdcWGv2e5s4HC9w6Nl/P0zI0HHp9o7kf9?=
 =?us-ascii?q?zQZ8oJthKIixfAk/RVKJUpm/oWgipnPHjxvHw/xO49kBxuxoq6vImcJmVp/aK5?=
 =?us-ascii?q?BANYNzLva8MS/DHtkbhRnsKM04+zGZVhHy0BXIH0QvKwDDISqfPnOh6VHzImrX?=
 =?us-ascii?q?ebHaffERWb6Ed7tH/PF5GrN3eKJHgW19liRR+dJFBBjwAQRjk1gpk5FgWyzsz7?=
 =?us-ascii?q?bEh5/iwR5kL/qhZUyOJnLRz/XXnEpAuydjc4UpufLAdV7gFf4UfaK9ee4/l3Hy?=
 =?us-ascii?q?FZ+J2hsQOMJnaaZwROEWEGREiEC0r/Mbmp4NnK6/KYCfamL/vSfbWOrvRTVveP?=
 =?us-ascii?q?xZKyy4tm4iyDNsOVMnl5CP073EVDUGt9G8TYnTUPViMWmzjMb86duBez5Cl3ot?=
 =?us-ascii?q?qj//TsXQLl/ZGPBKdKMdVz5xC2hr+ON+6OiyZ4KjZY1ZIMyWXLyLgF214ShD9h?=
 =?us-ascii?q?dyOwEbQbriPNSKPQmqlKDx8UcS9zNc1I774i0QlJI8LUltT11rtghP4vF1hFTU?=
 =?us-ascii?q?Dhmt2uZcESOW69KUjIBFyVO7WGPzHLx8D3bLi4Sb1RiuVUqhKxtSyaE0/lIjSM?=
 =?us-ascii?q?iT3pWwqzPuFLiSGRJAZet52lchZxFWjjS8rragG6MN9ylzE53ac4iW/KNWECNz?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsfFzGCR7i/pa4Ggmy7tS?=
 =?us-ascii?q?9CxFROZ6mC3Xrt5vpVGpiuiOyjp9XxpIpTZGn4aLvURkOaXE+ZhMQ3fE/BQR7W?=
 =?us-ascii?q?qODxQGvcdqCtrqu/MY9t+avqD0MjEK09/Q8sIVHICAIsKKNHUoOAHBFznTAw8I?=
 =?us-ascii?q?CzWsMDebz3ZamvCUvliItIA6u9C4gp0ES7kdUUEvDvMLIk1/GZoJJ5IhGnsGlr?=
 =?us-ascii?q?OBg4Yy4neyoR2ZEMddpJfvBviDHfj0bjGDgu8ALz8P277+P4NbDoz2wUVma0J7?=
 =?us-ascii?q?1NDOHFDdW8JK5DVgYxU9pERW8VB3VGh10EXgPEfl2nYCXdypn1ZikAljYMwn7j?=
 =?us-ascii?q?Dl71wwIxzBoy5mw2crntCwuiqQdjftLO+VVIdQAi+841MrM5XyXwYzaAS0m0Vh?=
 =?us-ascii?q?HD3eQLtdhLxlM2tsjVmP6tN0BfdAQPgcM1crzvaNaqBtiAwEpw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAAtoRBch0O0hNFlHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ5pHlz6BcxIBARgTAYcxIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAG?=
 =?us-ascii?q?CYgMDAQIkGQEBNwEFCQEBGDgDMQEFARwGAQoIBYMcggIFmiU8ih2BbDOCdgEBB?=
 =?us-ascii?q?YEFAYYnCBKHaoMjgRyBVz+BEYJkiwqQPZBABwKCIgSIIIcPFoloh1qJI49qAgQ?=
 =?us-ascii?q?CCQIFDyGBJYIOMxojUIJsghuDbYocAT44MoEFAQGLUAEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAAAtoRBch0O0hNFlHgEGBwaBUQkLAYNrJ5pHlz6BcxI?=
 =?us-ascii?q?BARgTAYcxIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDAQIkGQEBN?=
 =?us-ascii?q?wEFCQEBGDgDMQEFARwGAQoIBYMcggIFmiU8ih2BbDOCdgEBBYEFAYYnCBKHaoM?=
 =?us-ascii?q?jgRyBVz+BEYJkiwqQPZBABwKCIgSIIIcPFoloh1qJI49qAgQCCQIFDyGBJYIOM?=
 =?us-ascii?q?xojUIJsghuDbYocAT44MoEFAQGLUAEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="55990417"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 21:49:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726562AbeLLFqw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 00:46:52 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:42694 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726434AbeLLFqv (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 00:46:51 -0500
Received: by mail-wr1-f68.google.com with SMTP id q18so16339477wrx.9
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 21:46:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=broadcom.com; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=o9zOKa7UZo6O1oSXPaMqPu6Fib6WbxYaMCsnJYZwlo8=;
        b=QlIG4Ltxek1NO4qTDSHC89YHHCe0sh1RmxOpdVMF0Otf8WCvUKyW9zfoBCzj5jJy1Z
         aRmRd7aLNA5vekwKNUtlK0IaM9Yv/gj9MEwrtjTg+JdtdrFOaDTMLbeauVSbxDKj1Syb
         HMgN+e8vXZT0sbLe38HQRH5SZ36vVljbjYyMw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=o9zOKa7UZo6O1oSXPaMqPu6Fib6WbxYaMCsnJYZwlo8=;
        b=oV2X69sZG4DD/Xx3MGTz+WicVjmBTzHobmDFqmN2DdDPMq0QACBihukmJV58aYb66s
         FL3//ZkXUAq6s4EF8P02eykPDtsH6AiIlkRYLhMQRybAHWkHnLmONoJT9dB2zSPTgxm0
         ylsWpMJhcYiLOtVK34KaHQbLTIMQkr1getiLHwBlB92XHjQcwoCASOS1v5DwXMjWzihq
         zgIYc8/0lyeQAjcdTECUAhktU7UgUSR+ZkscVqpmD5D6NB0vzNPFlDjLtuGZjBF3b6JK
         N3R7WBoi3djyUaizwkenmccXug+B13Qy+koiCMzAtJyc6cEuiQXjZi2kKhcwDNzTVCpK
         Uefw==
X-Gm-Message-State: AA+aEWbUtcXKYsRlh3CWMgTB4Q/TLWNM+tUg27FmRnaVPPm4xsZOY4co
        yjkqW1ZOriB0w9LvUpY7RRZ8uw==
X-Google-Smtp-Source: AFSGD/W5fvf+7cGlVD1coGF/72gVx5nYO/sHP4U40r0vjs5KfAPR1WO+tTEdFzJ7o4gqCxb6UJXG6g==
X-Received: by 2002:adf:ae41:: with SMTP id u1mr15101050wrd.20.1544593608138;
        Tue, 11 Dec 2018 21:46:48 -0800 (PST)
Received: from mannams-OptiPlex-7010.dhcp.broadcom.net ([192.19.234.250])
        by smtp.gmail.com with ESMTPSA id z206sm2015947wmc.18.2018.12.11.21.46.43
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 11 Dec 2018 21:46:47 -0800 (PST)
From: Srinath Mannam <srinath.mannam@broadcom.com>
To: Bjorn Helgaas <bhelgaas@google.com>,
        Robin Murphy <robin.murphy@arm.com>,
        Joerg Roedel <joro@8bytes.org>,
        Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
        Ray Jui <rjui@broadcom.com>
Cc: bcm-kernel-feedback-list@broadcom.com, linux-pci@vger.kernel.org,
        iommu@lists.linux-foundation.org, linux-kernel@vger.kernel.org,
        Srinath Mannam <srinath.mannam@broadcom.com>
Subject: [RFC PATCH 3/3] PCI: iproc: Add dma reserve resources to host
Date: Wed, 12 Dec 2018 11:16:09 +0530
Message-Id: <1544593569-8923-4-git-send-email-srinath.mannam@broadcom.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544593569-8923-1-git-send-email-srinath.mannam@broadcom.com>
References: <1544593569-8923-1-git-send-email-srinath.mannam@broadcom.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

IPROC host has the limitation that it can use
only those address ranges given by dma-ranges
property as inbound address.
So that the memory address holes in dma-ranges
should be reserved to allocate as DMA address.

All such reserved addresses are created as resource
entries and add to dma_resv list of pci host bridge.

These dma reserve resources created by parsing
dma-ranges parameter.

Ex:
dma-ranges = < \
  0x43000000 0x00 0x80000000 0x00 0x80000000 0x00 0x80000000 \
  0x43000000 0x08 0x00000000 0x08 0x00000000 0x08 0x00000000 \
  0x43000000 0x80 0x00000000 0x80 0x00000000 0x40 0x00000000>

In the above example of dma-ranges, memory address from
0x0 - 0x80000000,
0x100000000 - 0x800000000,
0x1000000000 - 0x8000000000 and
0x10000000000 - 0xffffffffffffffff.
are not allowed to use as inbound addresses.
So that we need to add these address range to dma_resv
list to reserve their IOVA address ranges.

Signed-off-by: Srinath Mannam <srinath.mannam@broadcom.com>
---
 drivers/pci/controller/pcie-iproc.c | 49 +++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/drivers/pci/controller/pcie-iproc.c b/drivers/pci/controller/pcie-iproc.c
index 3160e93..43e465a 100644
--- a/drivers/pci/controller/pcie-iproc.c
+++ b/drivers/pci/controller/pcie-iproc.c
@@ -1154,25 +1154,74 @@ static int iproc_pcie_setup_ib(struct iproc_pcie *pcie,
 	return ret;
 }
 
+static int
+iproc_pcie_add_dma_resv_range(struct device *dev, struct list_head *resources,
+			      uint64_t start, uint64_t end)
+{
+	struct resource *res;
+
+	res = devm_kzalloc(dev, sizeof(struct resource), GFP_KERNEL);
+	if (!res)
+		return -ENOMEM;
+
+	res->start = (resource_size_t)start;
+	res->end = (resource_size_t)end;
+	pci_add_resource_offset(resources, res, 0);
+
+	return 0;
+}
+
 static int iproc_pcie_map_dma_ranges(struct iproc_pcie *pcie)
 {
+	struct pci_host_bridge *host = pci_host_bridge_from_priv(pcie);
 	struct of_pci_range range;
 	struct of_pci_range_parser parser;
 	int ret;
+	uint64_t start, end;
+	LIST_HEAD(resources);
 
 	/* Get the dma-ranges from DT */
 	ret = of_pci_dma_range_parser_init(&parser, pcie->dev->of_node);
 	if (ret)
 		return ret;
 
+	start = 0;
 	for_each_of_pci_range(&parser, &range) {
+		end = range.pci_addr;
+		/* dma-ranges list expected in sorted order */
+		if (end < start) {
+			ret = -EINVAL;
+			goto out;
+		}
 		/* Each range entry corresponds to an inbound mapping region */
 		ret = iproc_pcie_setup_ib(pcie, &range, IPROC_PCIE_IB_MAP_MEM);
 		if (ret)
 			return ret;
+
+		if (end - start) {
+			ret = iproc_pcie_add_dma_resv_range(pcie->dev,
+							    &resources,
+							    start, end);
+			if (ret)
+				goto out;
+		}
+		start = range.pci_addr + range.size;
 	}
 
+	end = ~0;
+	if (end - start) {
+		ret = iproc_pcie_add_dma_resv_range(pcie->dev, &resources,
+						    start, end);
+		if (ret)
+			goto out;
+	}
+
+	list_splice_init(&resources, &host->dma_resv);
+
 	return 0;
+out:
+	pci_free_resource_list(&resources);
+	return ret;
 }
 
 static int iproce_pcie_get_msi(struct iproc_pcie *pcie,
-- 
2.7.4

