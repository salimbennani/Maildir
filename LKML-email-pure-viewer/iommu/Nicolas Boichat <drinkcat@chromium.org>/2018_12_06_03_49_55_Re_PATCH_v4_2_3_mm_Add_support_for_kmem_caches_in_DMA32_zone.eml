Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:41:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 960725804C1;
	Wed,  5 Dec 2018 19:50:19 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 19:50:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8vzyqhC29uKAMVB58r+8UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/rsWwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95eWCxPAIyy?=
 =?us-ascii?q?b4UBAekcM+hGs4b9vEMOoBmlCAmwGO/i0CNEimPq0aA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?natNT1O7sVUeCx1qbI1ijIYu5R2Tf89IfIcgouoe2RVr93bMXR00gvFwXGjlqM?=
 =?us-ascii?q?s4PlIyiY2fgNs2iB6OpgUOOvi3Miqw1rpTiv3Mgsh5DPi4kIxF7E8iB5z5w0Jd?=
 =?us-ascii?q?2+UEN7Zd2kEJ5Uty2AMIt2WMwiTmd1syg50r0LoYC3cDQOxZg92hLSZeKLf5KV?=
 =?us-ascii?q?7h/gSOqdOzZ1iXB9dL6hmxq/9VKsx+78W8WuzlpGsypInsPRun0J2RHe7NWMRO?=
 =?us-ascii?q?Fn8Ue7wzmP0hje6uFaLkAwkqrWM4AhwrEumZoJq0jDHTH5mF/wjKCIckUo4O+o?=
 =?us-ascii?q?6/7oYrn+p5+cMZF7ih3mP6gwhsCyBf40PhUAUmSF4+iwyb7u8VHjTLhLjPA6iq?=
 =?us-ascii?q?zZv4rbJcQfqK65GQhV0oM75ha7Djem1skYnHYeIFJGZh2HlY7pNE/KIPzhCve+?=
 =?us-ascii?q?jVKsnylxx/3dIL3hDYvCLmLZnLfiY7l98UhcxxQ3zdxF4JJUEL4BLOrpWkDtrN?=
 =?us-ascii?q?zYEgM5MwuszubjCdV91Z0RVXiAA6+EK67StV6I5uQyI+iDfoMVuTD9K+Q76P7q?=
 =?us-ascii?q?l3M2hVgdfayx15sNdH+4BuhmI1meYXf0gtcOC2YKvhYkQ+ztklGCUSNTaGy0X6?=
 =?us-ascii?q?Iz/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4CcUfcWdC2SOtNhkiAD?=
 =?us-ascii?q?VbW5SY8h0g+huBX5y7pgKOrU/CoYuInn1Nh04e3TiB4z+SZ1D8Sbz2GCUWV0kn?=
 =?us-ascii?q?kUSD8x2aB1uVZ9xUub0ahkn/xYEsRe6OlSUgc6Mp7czPZ2C8roVQLDZdqJTFem?=
 =?us-ascii?q?QtO7ATA+VN4xwtkOY1pjFNWmlBzMwy2qA7oNnbyRGJM06r7c32T2J8tlyHbJzq?=
 =?us-ascii?q?8hg0MiQstOL2KmgKF/+hPXB47IlUWZiqmreb4d3C7L6GeM026OsFtEXw53VKXP?=
 =?us-ascii?q?RWofaVfOrdTl+kPCSKejBqk9PQtf18GOMKtKZcfvjVVdWvjjPtPSY2aym2e1AR?=
 =?us-ascii?q?aF3beMbIvse2UA0yTREkkEkwYP/XmYMQgyHDuuo2XbDDZ2D1Lgf1vs8fViqHO8?=
 =?us-ascii?q?VkI70huFb1N/2Lav+h4an/qcS+gN0bICoyohrzR0HFCg39PZEdaApgxhfLlCbt?=
 =?us-ascii?q?M5+ltIyWXZtwllNJy6M69inkIecxhwv072yxV3C4BAkc82rHMqzAt+M76Y3ElG?=
 =?us-ascii?q?dzOC2ZDwO7vXKmbp8RCraq7W3Eze0dmM9qcO7vQ4t0vsvAWzGkU+9HVn1sFf02?=
 =?us-ascii?q?GA6ZXSEAoSTZXxX14t+Bh+ub7bbTcy5oPO2XJ3LKm7ryXN29QqBOsi1BatZNNf?=
 =?us-ascii?q?MKKCFA/vHMwWHcmuKOo2m1e3ahIIJvxd9KkxP8m+bfuJxLarPPp8nDKhlWlG4J?=
 =?us-ascii?q?193liQ+CZmS+/I34wKw/eX3gacUzf8jVGhst34mIxeZDESGHa/xjbgBIJLeqJy?=
 =?us-ascii?q?eoMLA3+0I8Kr3tV+m4LtW3lA+V65BlMJxNWmeQCPYFz6xwFQ01oYoWammSeh0z?=
 =?us-ascii?q?N7iTUpobeB0yzUxOTicgEKOmpKRGlkkFftLpK4j9EcXEi0cQcpkAGp6lr9x6he?=
 =?us-ascii?q?vK5/NXXcQV9UfyjqKGFvSquxtruYb89P8p8oqjhXUOKnbFCeS779pQYa0iz5E2?=
 =?us-ascii?q?tfwjA7ay+lupHjkxNmj2KdKW55rGDFdsFo2Rff+NvcSOZT3jUcXil4ijrXBl+m?=
 =?us-ascii?q?M9my59qUlJTDsuG4V22/UJ1eai3rzYKGtCum6mxmGxy/n/avmtL5FQg2yzP019?=
 =?us-ascii?q?5vVS/QthbzfpHr17imMeJgZkRpBEXz681gFoF8k4swgood2XwbhpWT4HoGnn3/?=
 =?us-ascii?q?MdRd2aLicnUNQSQHzMLS4AjgwEdjNG6Gx5rlVnWBxctsf9q6bXkX2i4n78BKFb?=
 =?us-ascii?q?2b7LpLnSZuplq4rATRYeVynzsHyPsu7mIajP8NuAY30iqdBbUSF1FCPSPwjxSI?=
 =?us-ascii?q?88y+rKJPaWaqcLiw11BxkcqvDb6cuQFcRGj2eo05EiBu9MV/P0nB0Hny6oHiZd?=
 =?us-ascii?q?nRYsgfthySkxfckedVLIg9meYNhSpiIWj9p2Eqy/YnjRxy2pG3pJSHK2Jo/K6j?=
 =?us-ascii?q?Ax9XLDv1Z94I+jH2jKZThcKW34GpHpV8FTQHRproTfS0ED0MsfTrLRqBEDo5qn?=
 =?us-ascii?q?2DA7rQARef6Ft6r3LIC52kLGuYJH4dzdV/XhWdIFFfjRsQXDU7mJ45Cw+ryNbg?=
 =?us-ascii?q?cEd/+jAe+Fr4pgFQxeJvMhn1Sn3fqxuwajcoVJifKwJb7gNY6EfQL8Oe9fh/Hz?=
 =?us-ascii?q?1C8p2isQyNKXGbZwJSAmESQUGEA1HjPr+z5djP6eSYB+y+L+fQbrWKs+BRS/CI?=
 =?us-ascii?q?xZe32It84zmMLtmPPmVlD/Aj2ktDWm15G93EmzoVTSwbjTnNb8mdpBez4SB3qs?=
 =?us-ascii?q?G/8PL2WAPg/4ePCr1SMclx9BCym6uMK+mQhCNhIzZCypwM3WPIyKQY3FMKiyFh?=
 =?us-ascii?q?aTitEbcDtS7MVq7QmbVXDxkUayxtLstI8rk80xJJOc7ajNP1y7F5guQ0C1dDSV?=
 =?us-ascii?q?zuhMWpadYWLGG6MVPNHFyLO6ieJT3X38H3ZruxRqdNjOpPrR2/pzaaH1XnPjSC?=
 =?us-ascii?q?jDTpUxGvMedRjCCUJhBeuYe9cgpzBmjnVt7pdhq7MNpvhz0s3bI0nm/KNXIbMT?=
 =?us-ascii?q?Vkb0NNr7iQ4TlEjfllB2NB7mRqLe+fliad7unYLIsWsPRxDiR1keJa/Go1y79P?=
 =?us-ascii?q?4C5YQ/x1nTPYrsRyrFG+jumP1j1nXQJOqzlRgoKLuERiOaPB+ZhBWXbL5hQN7W?=
 =?us-ascii?q?qLBhQOpttlDMDvuq9KxtjOkqLzNClN89bO8cQAAMjULZHPDH10Dx7gAyLVCQoB?=
 =?us-ascii?q?BRSiP2LWzxhDmviY9XS9tYUhp97nisxdZKVcUQkTF/gdDk1+VPYFIZx3Vy9sxb?=
 =?us-ascii?q?KBjcgL7nOihBLRXsJfv43CEPWIDqO8e36ikbBYak5QkvvDJoMJO9i+ghQ6Zw?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A8AABWmwhch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?gcBCwGCaYECJ4N6lHgGgTUUiQyOLIFzLAcMAYdTIjUIDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYQEBAQECAQECIAQZAQE3AQQBCQEBCgsDBgQCAiYCAgMfE?=
 =?us-ascii?q?gEFARwGEwWDHAGBdAUIBQqaLTyKHXB8M4J2AQEFgTABhXkDBRJ5ixMXeIEHgRG?=
 =?us-ascii?q?CZC6DBRkBhGaCV4skhQ6QJgmHA4o/GIFbiDuHGY1yin0wgSYBggszGggoCGwGg?=
 =?us-ascii?q?jUfgXyJAYVMMjOBBQEBilkBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A8AABWmwhch0O0hNFkHQEBBQEHBQGBUgcBCwGCaYECJ4N?=
 =?us-ascii?q?6lHgGgTUUiQyOLIFzLAcMAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYQEBAQECAQECIAQZAQE3AQQBCQEBCgsDBgQCAiYCAgMfEgEFARwGEwWDHAG?=
 =?us-ascii?q?BdAUIBQqaLTyKHXB8M4J2AQEFgTABhXkDBRJ5ixMXeIEHgRGCZC6DBRkBhGaCV?=
 =?us-ascii?q?4skhQ6QJgmHA4o/GIFbiDuHGY1yin0wgSYBggszGggoCGwGgjUfgXyJAYVMMjO?=
 =?us-ascii?q?BBQEBilkBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="43774651"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 19:50:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728895AbeLFDuI (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 22:50:08 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:32975 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727940AbeLFDuI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 22:50:08 -0500
Received: by mail-pg1-f193.google.com with SMTP id z11so10015828pgu.0
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 19:50:07 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=3TanGnesUsXNVn4844W69r0sdlZW07QzX84i1mc2ruc=;
        b=n4iKpYFuCsH1xA1otB/jI2EqcwcOQmpEOIdGbvJiQNedw8Kc9IEcsfxnxcRMZH2Z8L
         fK1ox8RGreiHOpL4xMiS5n4U84c+hytx8pYjjBlfPwJuCSYpHtvMqw7ntPgmaR8IrknZ
         PQpQtULyiFL3jMILWjQd+VohMxSBVy8rBHtkY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=3TanGnesUsXNVn4844W69r0sdlZW07QzX84i1mc2ruc=;
        b=R5PdhL/VSQvQg9FoAEOvvKH/G8ndEqv7cxXCHdIwQe40qcP7+KRNppUrKS4ybJKZAb
         r7Q1qLaiXZ0RCGk3FnPDjxS25fgDfJira2dVd+ic0ME3GBGzzRn7iLVGGbWO6mSOjUrS
         7Iy0ZqZWVaDr70LiW04RSwstSJto1JurdzEvUa5JP55az3f4AiHxAAob95vs1ZokIoM2
         uHmfUaxrVtWX1DiXBlgia0N1TU/5ME+fAsSpHxLSBFQ/ZYEBhWMsg8Dc49OBGvXJm9nE
         2ikX5JNJCh1rIlJ5YgxxYJNC40Du70oMpJred/elwAaiwEtiPOqQHM4a3R45+HoXzRdQ
         lYQg==
X-Gm-Message-State: AA+aEWZdMY6HCt9YnKaO1prjn0tP0pZVXG/6ltgBiSGJIJnMvH7Kf8fC
        5+teDApnU36FKN1nVCnvP4hvjrg/TzsDJ694kwGckA==
X-Google-Smtp-Source: AFSGD/Xj8k7u3b/6AxdfCY5AJwNH1NSuwNCeYLgW4Q2aH75/tTCsehuPK3DKJ3REX3y2ESYdqxyf5wN20Nv1UgxPquA=
X-Received: by 2002:a63:fb46:: with SMTP id w6mr22933804pgj.321.1544068206996;
 Wed, 05 Dec 2018 19:50:06 -0800 (PST)
MIME-Version: 1.0
References: <20181205054828.183476-1-drinkcat@chromium.org>
 <20181205054828.183476-3-drinkcat@chromium.org> <5eddd264-5527-a98e-fc8b-31ea89f474db@suse.cz>
In-Reply-To: <5eddd264-5527-a98e-fc8b-31ea89f474db@suse.cz>
From: Nicolas Boichat <drinkcat@chromium.org>
Date: Thu, 6 Dec 2018 11:49:55 +0800
Message-ID: <CANMq1KAL7TcVa4xF8=NdK2cs0VakEq5i6MyCvfmYTGCmJ78-ag@mail.gmail.com>
Subject: Re: [PATCH v4 2/3] mm: Add support for kmem caches in DMA32 zone
To: Vlastimil Babka <vbabka@suse.cz>
Cc: Will Deacon <will.deacon@arm.com>,
        Robin Murphy <robin.murphy@arm.com>,
        Joerg Roedel <joro@8bytes.org>,
        Christoph Lameter <cl@linux.com>,
        Pekka Enberg <penberg@kernel.org>,
        David Rientjes <rientjes@google.com>,
        Joonsoo Kim <iamjoonsoo.kim@lge.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Michal Hocko <mhocko@suse.com>,
        Mel Gorman <mgorman@techsingularity.net>,
        Levin Alexander <Alexander.Levin@microsoft.com>,
        Huaisheng Ye <yehs1@lenovo.com>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        linux-arm Mailing List <linux-arm-kernel@lists.infradead.org>,
        iommu@lists.linux-foundation.org,
        lkml <linux-kernel@vger.kernel.org>, linux-mm@kvack.org,
        Yong Wu <yong.wu@mediatek.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Tomasz Figa <tfiga@google.com>, yingjoe.chen@mediatek.com,
        hch@infradead.org, Matthew Wilcox <willy@infradead.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 5, 2018 at 10:02 PM Vlastimil Babka <vbabka@suse.cz> wrote:
>
> On 12/5/18 6:48 AM, Nicolas Boichat wrote:
> > In some cases (e.g. IOMMU ARMv7s page allocator), we need to allocate
> > data structures smaller than a page with GFP_DMA32 flag.
> >
> > This change makes it possible to create a custom cache in DMA32 zone
> > using kmem_cache_create, then allocate memory using kmem_cache_alloc.
> >
> > We do not create a DMA32 kmalloc cache array, as there are currently
> > no users of kmalloc(..., GFP_DMA32). The new test in check_slab_flags
> > ensures that such calls still fail (as they do before this change).
> >
> > Fixes: ad67f5a6545f ("arm64: replace ZONE_DMA with ZONE_DMA32")
>
> Same as my comment for 1/3.

I'll drop.

> > Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
>
> In general,
> Acked-by: Vlastimil Babka <vbabka@suse.cz>
>
> Some comments below:
>
> > ---
> >
> > Changes since v2:
> >  - Clarified commit message
> >  - Add entry in sysfs-kernel-slab to document the new sysfs file
> >
> > (v3 used the page_frag approach)
> >
> > Documentation/ABI/testing/sysfs-kernel-slab |  9 +++++++++
> >  include/linux/slab.h                        |  2 ++
> >  mm/internal.h                               |  8 ++++++--
> >  mm/slab.c                                   |  4 +++-
> >  mm/slab.h                                   |  3 ++-
> >  mm/slab_common.c                            |  2 +-
> >  mm/slub.c                                   | 18 +++++++++++++++++-
> >  7 files changed, 40 insertions(+), 6 deletions(-)
> >
> > diff --git a/Documentation/ABI/testing/sysfs-kernel-slab b/Documentation/ABI/testing/sysfs-kernel-slab
> > index 29601d93a1c2ea..d742c6cfdffbe9 100644
> > --- a/Documentation/ABI/testing/sysfs-kernel-slab
> > +++ b/Documentation/ABI/testing/sysfs-kernel-slab
> > @@ -106,6 +106,15 @@ Description:
> >               are from ZONE_DMA.
> >               Available when CONFIG_ZONE_DMA is enabled.
> >
> > +What:                /sys/kernel/slab/cache/cache_dma32
> > +Date:                December 2018
> > +KernelVersion:       4.21
> > +Contact:     Nicolas Boichat <drinkcat@chromium.org>
> > +Description:
> > +             The cache_dma32 file is read-only and specifies whether objects
> > +             are from ZONE_DMA32.
> > +             Available when CONFIG_ZONE_DMA32 is enabled.
>
> I don't have a strong opinion. It's a new file, yeah, but consistent
> with already existing ones. I'd leave the decision with SL*B maintainers.
>
> >  What:                /sys/kernel/slab/cache/cpu_slabs
> >  Date:                May 2007
> >  KernelVersion:       2.6.22
> > diff --git a/include/linux/slab.h b/include/linux/slab.h
> > index 11b45f7ae4057c..9449b19c5f107a 100644
> > --- a/include/linux/slab.h
> > +++ b/include/linux/slab.h
> > @@ -32,6 +32,8 @@
> >  #define SLAB_HWCACHE_ALIGN   ((slab_flags_t __force)0x00002000U)
> >  /* Use GFP_DMA memory */
> >  #define SLAB_CACHE_DMA               ((slab_flags_t __force)0x00004000U)
> > +/* Use GFP_DMA32 memory */
> > +#define SLAB_CACHE_DMA32     ((slab_flags_t __force)0x00008000U)
> >  /* DEBUG: Store the last owner for bug hunting */
> >  #define SLAB_STORE_USER              ((slab_flags_t __force)0x00010000U)
> >  /* Panic if kmem_cache_create() fails */
> > diff --git a/mm/internal.h b/mm/internal.h
> > index a2ee82a0cd44ae..fd244ad716eaf8 100644
> > --- a/mm/internal.h
> > +++ b/mm/internal.h
> > @@ -14,6 +14,7 @@
> >  #include <linux/fs.h>
> >  #include <linux/mm.h>
> >  #include <linux/pagemap.h>
> > +#include <linux/slab.h>
> >  #include <linux/tracepoint-defs.h>
> >
> >  /*
> > @@ -34,9 +35,12 @@
> >  #define GFP_CONSTRAINT_MASK (__GFP_HARDWALL|__GFP_THISNODE)
> >
> >  /* Check for flags that must not be used with a slab allocator */
> > -static inline gfp_t check_slab_flags(gfp_t flags)
> > +static inline gfp_t check_slab_flags(gfp_t flags, slab_flags_t slab_flags)
> >  {
> > -     gfp_t bug_mask = __GFP_DMA32 | __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> > +     gfp_t bug_mask = __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> > +
> > +     if (!IS_ENABLED(CONFIG_ZONE_DMA32) || !(slab_flags & SLAB_CACHE_DMA32))
> > +             bug_mask |= __GFP_DMA32;
>
> I'll point out that this is not even strictly needed AFAICS, as only
> flags passed to kmem_cache_alloc() are checked - the cache->allocflags
> derived from SLAB_CACHE_DMA32 are appended only after check_slab_flags()
> (in both SLAB and SLUB AFAICS). And for a cache created with
> SLAB_CACHE_DMA32, the caller of kmem_cache_alloc() doesn't need to also
> include __GFP_DMA32, the allocation will be from ZONE_DMA32 regardless.

Yes, you're right. I also looked at existing users of SLAB_CACHE_DMA,
and there is one case in drivers/scsi/scsi_lib.c where GFP_DMA is not
be passed (all the other users pass it).

I can drop GFP_DMA32 from my call in io-pgtable-arm-v7s.c.

> So it would be fine even unchanged. The check would anyway need some
> more love to catch the same with __GFP_DMA to be consistent and cover
> all corner cases.

Yes, the test is not complete. If we really wanted this to be
accurate, we'd need to check that GFP_* exactly matches SLAB_CACHE_*.

The only problem with dropping this is test that we should restore
GFP_DMA32 warning/errors somewhere else (as Christopher pointed out
here: https://lkml.org/lkml/2018/11/22/430), especially for kmalloc
case.

Maybe this can be done in kmalloc_slab.

> >
> >       if (unlikely(flags & bug_mask)) {
> >               gfp_t invalid_mask = flags & bug_mask;
