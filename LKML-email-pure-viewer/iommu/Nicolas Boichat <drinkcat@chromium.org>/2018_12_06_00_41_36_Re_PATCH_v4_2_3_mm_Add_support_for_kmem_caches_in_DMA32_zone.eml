Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:01:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4DE435804C1;
	Wed,  5 Dec 2018 16:41:55 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 16:41:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+nYlkhd4cA1agei/ASBHLwzFlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YRyN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYOy?=
 =?us-ascii?q?bYQBD+QPM+VFoYfju1QOtgO+CAu3CePz1jNFnGP60bEm3+kjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7LKYSXvyyzKnM1zrDdO5d1Cr66IjJbh8hoeuDXa5tesfW1EYvDQLFjlOT?=
 =?us-ascii?q?qYP5JTyVyv8AvHSb7+p6UuKvjm8nqxx0ojS1wccskIbJi5sTx1vZ9it52J44Kc?=
 =?us-ascii?q?OkREN/e9KoDZVduz+AO4drQc4uX3tktSc4x7Eep5K3YCwHxI4kyhPfcfCLbZWE?=
 =?us-ascii?q?7g75WOqMJTp1hHRoc6+liRmo60iv0Oj8W9G00FlUqipFlcHBtm4C1xPN8MiLUP?=
 =?us-ascii?q?h98Vm72TaJyQ/T7vtIIUcularUM5Ihw7gwmYQPsUnbACP6hEH7gLWLekgq5OSk?=
 =?us-ascii?q?8fnrb7b6qpOGNoJ5iBnyMqE0lcy+BeQ4PBIOX2+e+emk0L3j/Ev5QKhFj/Evka?=
 =?us-ascii?q?nWroraJcIFqa69GgNV1Ygi6xChADe8y9kYg3YHI0xfeB6djIjmJUvOIPbmAve7?=
 =?us-ascii?q?mVisly1rx//eMr37HprNNmTDkKvmfbtl705cyQkzws5F65NbF7EMO/bzWk73tN?=
 =?us-ascii?q?zFAR41KQ20w+D7CNpj0oMSQ36AAqicMKnKq1+H+vovI/WQZI8SoDv9K+Iq5//y?=
 =?us-ascii?q?jXAjnl8RZ6mp3YYNZ3C+EfRrOEGZYXvqgtccHmYGpAs+TOr2iFKcVT5ffWq9X6?=
 =?us-ascii?q?U55jsjEoKpEZ/DRpyxgLyGxCq7HJpWaX5cBlCPFnfocYOEW/AXZSKWI89hlCEE?=
 =?us-ascii?q?VLe7R48g0xGuqBH1y759IuXI/S0YsIrp1MJp6O3LiREy6Tt0AtyH3GGWT2F0mW?=
 =?us-ascii?q?AISyUs3K9lo0xw0VOD0al+g/xFGt1f/fJJUgEmNZHCy+x2Ecz9WgXEft2RUlap?=
 =?us-ascii?q?Xs2mAS0tTtI229IOYFxyG9O4ghDH3iqlGbkVl7OQCZww86Lc2WXxJslnx3bH0q?=
 =?us-ascii?q?khk0cpQs9VOWK6ga5/8hDZB5TVnEWBi6aqaaMc0TbQ+2iZ02qBoltUUA5qXqXD?=
 =?us-ascii?q?RnAQeE3WodP95kPBSr+uDa8qMg9Ayc6EN6tLZcfljVRARPf/JtveZ3i9lHu3BR?=
 =?us-ascii?q?aN3rmMdpble30B3CXBD0gJix0c8myYNQcgHCuho3jRDDp1FV3xZUPh6u1+qHK9?=
 =?us-ascii?q?Tk8pwACGdUxh17yp+hELgfyQUe8c3rUBuC05sTV7AE69387KC9qHvwdhYKRcYd?=
 =?us-ascii?q?Y64Fdb1WLYtxZxPoC6I6BlnF4edwV3v0Xh1xhsDoVAkM4qrG4lzQZoKKKY1k9B?=
 =?us-ascii?q?eC2c3ZzqJrLXLWzy9gi1a6HKwlHezMqW+qAX5fsir1Xsog6oGVQi8nl9yNZVzm?=
 =?us-ascii?q?aT6Y/MDAoRVpLxTF069xx7p7Hcfyk86JnY1XxqMamorDDC38glC/ciyhalZ91f?=
 =?us-ascii?q?Kr+LFBfuE80GAMijMOwrm0WzYh0YJuxT9a40MNmgd/uJw6OrOOdgnDS7jWVI+o?=
 =?us-ascii?q?x900SM9zZiRe7MxZoK3/aY3g6fXTfmkFihqtz3mZxDZTwKBGq/yDTrC5RLZqJv?=
 =?us-ascii?q?eoYHE2GuLNOtxtV/npLiR2RX9Fq+CFwYws+pfhySYkf53Q1R00QXvHOmlTG5zz?=
 =?us-ascii?q?xyjzEmsK6f0DbSzOTlcRoNInRLS3V6jVfwPYi0iMgXXUipbwQzlBqp/136x7Vd?=
 =?us-ascii?q?pKlkK2nTQEFIfzX5Lm14U6uwsKaCbNBL6J8yrSpXV+G8a0iASrHhuxsazz/jH2?=
 =?us-ascii?q?xGyTA5bT6qoJb5nx99iG6HN3Z8tnnZecJxxRfZ+tPcQ+Vc3j4HRCl+lDnWCUKw?=
 =?us-ascii?q?P9iv/dWIiZjDtvqyWH6mVp1WaSPr15+PtDOn5W12Bh2yh/CylcfgEQQg0y/71t?=
 =?us-ascii?q?9qWD7MrBb9ZInryqu7PfhmfkluGF/z9c56FptinYs3gZEawWIaiYmN/XobjWfz?=
 =?us-ascii?q?Ns1W2aHkY3oMXzILw8PV7xLj2E1sNX+Jw4P5VnOAwspufdW6Y2UW2j4j4MBOEq?=
 =?us-ascii?q?ub8LtEnS5tqFqisQ3ReeR9nisayfY27X4aguIJtxA3wiSTHL8SBlVYMjL2lxuT?=
 =?us-ascii?q?8d++tqpXaX2rcbix0kp+gN+gAKuDogFaRHb2ZJMiETVs4cV4NVLGyGfz5Z38eN?=
 =?us-ascii?q?nMcdITsQWZkwvHj+hQMp4wl+AFhSx6OWLmpn0lyvU2jRhv3ZG8oYiGJH9h/KO/?=
 =?us-ascii?q?Ah5EKDL1Y9kf9S3qjaZbhsyWxZygHo19GjUXW5vlVemnHygVtfTjKgaCCjk8qm?=
 =?us-ascii?q?qAFLrbHA+f7lpmrn3VH5CqMXGXOGcWzdF4SBaBI0xfhRgeXC8mkZ4hCgCq2Mvh?=
 =?us-ascii?q?fV975j8L4173tABMxvh0NxXlUWffuQSoaioySJeFNxpb9QVC50bTMcyD4eN/BS?=
 =?us-ascii?q?BY/pu9rAOTLmyXfRhHDWYMWkacHVDsIqGu5cXc8+ifHue/L/zOYaiXqexDTfiI?=
 =?us-ascii?q?w4ij0pBh/zaKOcWCJX1iD/w92kpeUnF1AcXZmzMTSyMJkyLBddKUpBC5+idvtM?=
 =?us-ascii?q?Cw7OzrWB7z5YuIE7ZSMctg+xG1gaeANu6cniV5KSxf1pMD23DI0qUf3EUJhiFq?=
 =?us-ascii?q?djmtF6kAtCHXQKLRnK9XEwAUaydpOMRU6KI82xFHOdTHhdPtyr54kvk1Bk9fWl?=
 =?us-ascii?q?z8gc6pf9IFImGnOFPDBUaGL7CGJTzNw8HqbqKwU7xQjONItxKuvTaXCVPsPjOG?=
 =?us-ascii?q?lzPxTRCgLflMjD2HPBxZoIy9bhdtCW35QN36cBG0LN93giMwwbAvgnPKNGgcMS?=
 =?us-ascii?q?Vzck9Xr72Q6z9Yjet7G2Bb8nVlKuyEkT6D7+bEMpYWredrAiNsmuNa+ns6zb5V?=
 =?us-ascii?q?7CBCRPNtmSrSrsRho1epkuSUzjpnURxOqitEhY6RvEViP7nZ+YdEWXre4B0N6m?=
 =?us-ascii?q?CQWFw2oI5/C9bvsrpcjMfClbP6Ljhq/Nfd/M9aDM/Re+ydN390FxviHzrdF0Mv?=
 =?us-ascii?q?Sj+gNWjDzxhRivCU9XacsrAxqoLrnZsTT/lcTlNjRaBSMVhsANFXeMQ/ZTgji7?=
 =?us-ascii?q?POyZdQvXc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ApAAA+bwhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2sng3qUeAaBNRSIfg6OLIFzLBMBh1MiNQgNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAQIDAQIgBBkBATcBBQkBAQoLCQQCAiYCAgMeARIBB?=
 =?us-ascii?q?QEcGQWDHIFqAwgNBZpNPIodcHwzgnYBAQWFCA2CFAgSeYsTF3iBB4N1LoJXhS6?=
 =?us-ascii?q?CV4skhQ6PeC4JjhSDLhiBW4g7hxmOf4lwMIEnAYIKMxoIKAhsBoI1ghsMF4heh?=
 =?us-ascii?q?UwyM4EFAQGKWQEB?=
X-IPAS-Result: =?us-ascii?q?A0ApAAA+bwhch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBg2s?=
 =?us-ascii?q?ng3qUeAaBNRSIfg6OLIFzLBMBh1MiNQgNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAQIDAQIgBBkBATcBBQkBAQoLCQQCAiYCAgMeARIBBQEcGQWDHIFqAwg?=
 =?us-ascii?q?NBZpNPIodcHwzgnYBAQWFCA2CFAgSeYsTF3iBB4N1LoJXhS6CV4skhQ6PeC4Jj?=
 =?us-ascii?q?hSDLhiBW4g7hxmOf4lwMIEnAYIKMxoIKAhsBoI1ghsMF4hehUwyM4EFAQGKWQE?=
 =?us-ascii?q?B?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="140968134"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 16:41:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728612AbeLFAlu (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 19:41:50 -0500
Received: from mail-pf1-f195.google.com ([209.85.210.195]:46968 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727514AbeLFAlt (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 19:41:49 -0500
Received: by mail-pf1-f195.google.com with SMTP id c73so10835591pfe.13
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 16:41:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=QSfpHcA8ZF4/wP3BRYT9MOjYQ1nn6Q/WqFA9ypCBv+E=;
        b=Cy17+v471sKnelwNMmA6iFN2HQv00hfPV5B3liaHBoK/HV06hGL+3KE7Cl4ut6eSfh
         BLEKxweLa/U9/YV3+WMJkiftGpN8s6pAnVaXZUHhScQvlxjosNIudidPrK+IohjezKaa
         ADsyQAYLLWPwRvcZfv52qLjFOYldzzuYw0IrI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=QSfpHcA8ZF4/wP3BRYT9MOjYQ1nn6Q/WqFA9ypCBv+E=;
        b=l/8eOQ83PvPL9jvsq0Q/eAxe0PQfatu6ljdAzqAFD+RGZabiuOcW1evLPYutHfK9+n
         o4c2RZNz/Di6Zy/yvEkp05z6pFKwP9sh7oPnPDbd4fdG1hCRtIb3Wx/CQZpj7IR94F0L
         OQhg0FwFBH6Z0zovWkDqfNK9LGLQlphbV8m0wnCIjfcrwIWyTbszVVyoH+OvjDr9rA+J
         xQdHaPcgFtbV+JEKCYkAm8AZBNC50v6uIm1lYlI4gvFqROkDh1l+EFXtxy+/Qkz/1dmE
         brRqo5S6DXWHBwpDeLoN9oO8AnkYMEgk/L01zJf1NCD3y+SMK2LNAQDc1sIC3SKGgHHw
         qZnA==
X-Gm-Message-State: AA+aEWZQNtmPEAI0SK/wBxoTRCocDxblxSJz66riEU0/yaVF9N6XLWuU
        gq07jSaZqNRYwVOUNickhvn99PAPcuPjPEIgtVF+0g==
X-Google-Smtp-Source: AFSGD/VvS7USswen0Szgp4vlEw+8oPlpjbtemD5n6QqjcaluegGXPfOfMIBe7bQTBxCRT0/Tb8G4Afe/d5rgY5/CGj4=
X-Received: by 2002:a63:4c04:: with SMTP id z4mr22653041pga.312.1544056908269;
 Wed, 05 Dec 2018 16:41:48 -0800 (PST)
MIME-Version: 1.0
References: <20181205054828.183476-1-drinkcat@chromium.org>
 <20181205054828.183476-3-drinkcat@chromium.org> <20181205072528.l7blg6y24ggblh4m@master>
 <CANMq1KCi-k_4-66pMfvByzsjpf1H6_bvC82Ow0b_jEH6B3LHwA@mail.gmail.com> <20181205121807.evmslrimsv4pdtza@master>
In-Reply-To: <20181205121807.evmslrimsv4pdtza@master>
From: Nicolas Boichat <drinkcat@chromium.org>
Date: Thu, 6 Dec 2018 08:41:36 +0800
Message-ID: <CANMq1KD3vPpd1-=JpcOGRUyt97V+9+zJ9Yf-Qw5CZCPJBqNyHA@mail.gmail.com>
Subject: Re: [PATCH v4 2/3] mm: Add support for kmem caches in DMA32 zone
To: richard.weiyang@gmail.com
Cc: Will Deacon <will.deacon@arm.com>, Michal Hocko <mhocko@suse.com>,
        Levin Alexander <Alexander.Levin@microsoft.com>,
        linux-mm@kvack.org, Christoph Lameter <cl@linux.com>,
        Huaisheng Ye <yehs1@lenovo.com>,
        Matthew Wilcox <willy@infradead.org>,
        linux-arm Mailing List <linux-arm-kernel@lists.infradead.org>,
        David Rientjes <rientjes@google.com>,
        yingjoe.chen@mediatek.com, Vlastimil Babka <vbabka@suse.cz>,
        Tomasz Figa <tfiga@google.com>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Joonsoo Kim <iamjoonsoo.kim@lge.com>,
        Robin Murphy <robin.murphy@arm.com>,
        lkml <linux-kernel@vger.kernel.org>,
        Pekka Enberg <penberg@kernel.org>,
        iommu@lists.linux-foundation.org,
        Andrew Morton <akpm@linux-foundation.org>,
        Mel Gorman <mgorman@techsingularity.net>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 5, 2018 at 8:18 PM Wei Yang <richard.weiyang@gmail.com> wrote:
>
> On Wed, Dec 05, 2018 at 03:39:51PM +0800, Nicolas Boichat wrote:
> >On Wed, Dec 5, 2018 at 3:25 PM Wei Yang <richard.weiyang@gmail.com> wrote:
> >>
> >> On Wed, Dec 05, 2018 at 01:48:27PM +0800, Nicolas Boichat wrote:
> >> >In some cases (e.g. IOMMU ARMv7s page allocator), we need to allocate
> >> >data structures smaller than a page with GFP_DMA32 flag.
> >> >
> >> >This change makes it possible to create a custom cache in DMA32 zone
> >> >using kmem_cache_create, then allocate memory using kmem_cache_alloc.
> >> >
> >> >We do not create a DMA32 kmalloc cache array, as there are currently
> >> >no users of kmalloc(..., GFP_DMA32). The new test in check_slab_flags
> >> >ensures that such calls still fail (as they do before this change).
> >> >
> >> >Fixes: ad67f5a6545f ("arm64: replace ZONE_DMA with ZONE_DMA32")
> >> >Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
> >> >---
> >> >
> >> >Changes since v2:
> >> > - Clarified commit message
> >> > - Add entry in sysfs-kernel-slab to document the new sysfs file
> >> >
> >> >(v3 used the page_frag approach)
> >> >
> >> >Documentation/ABI/testing/sysfs-kernel-slab |  9 +++++++++
> >> > include/linux/slab.h                        |  2 ++
> >> > mm/internal.h                               |  8 ++++++--
> >> > mm/slab.c                                   |  4 +++-
> >> > mm/slab.h                                   |  3 ++-
> >> > mm/slab_common.c                            |  2 +-
> >> > mm/slub.c                                   | 18 +++++++++++++++++-
> >> > 7 files changed, 40 insertions(+), 6 deletions(-)
> >> >
> >> >diff --git a/Documentation/ABI/testing/sysfs-kernel-slab b/Documentation/ABI/testing/sysfs-kernel-slab
> >> >index 29601d93a1c2ea..d742c6cfdffbe9 100644
> >> >--- a/Documentation/ABI/testing/sysfs-kernel-slab
> >> >+++ b/Documentation/ABI/testing/sysfs-kernel-slab
> >> >@@ -106,6 +106,15 @@ Description:
> >> >               are from ZONE_DMA.
> >> >               Available when CONFIG_ZONE_DMA is enabled.
> >> >
> >> >+What:         /sys/kernel/slab/cache/cache_dma32
> >> >+Date:         December 2018
> >> >+KernelVersion:        4.21
> >> >+Contact:      Nicolas Boichat <drinkcat@chromium.org>
> >> >+Description:
> >> >+              The cache_dma32 file is read-only and specifies whether objects
> >> >+              are from ZONE_DMA32.
> >> >+              Available when CONFIG_ZONE_DMA32 is enabled.
> >> >+
> >> > What:         /sys/kernel/slab/cache/cpu_slabs
> >> > Date:         May 2007
> >> > KernelVersion:        2.6.22
> >> >diff --git a/include/linux/slab.h b/include/linux/slab.h
> >> >index 11b45f7ae4057c..9449b19c5f107a 100644
> >> >--- a/include/linux/slab.h
> >> >+++ b/include/linux/slab.h
> >> >@@ -32,6 +32,8 @@
> >> > #define SLAB_HWCACHE_ALIGN    ((slab_flags_t __force)0x00002000U)
> >> > /* Use GFP_DMA memory */
> >> > #define SLAB_CACHE_DMA                ((slab_flags_t __force)0x00004000U)
> >> >+/* Use GFP_DMA32 memory */
> >> >+#define SLAB_CACHE_DMA32      ((slab_flags_t __force)0x00008000U)
> >> > /* DEBUG: Store the last owner for bug hunting */
> >> > #define SLAB_STORE_USER               ((slab_flags_t __force)0x00010000U)
> >> > /* Panic if kmem_cache_create() fails */
> >> >diff --git a/mm/internal.h b/mm/internal.h
> >> >index a2ee82a0cd44ae..fd244ad716eaf8 100644
> >> >--- a/mm/internal.h
> >> >+++ b/mm/internal.h
> >> >@@ -14,6 +14,7 @@
> >> > #include <linux/fs.h>
> >> > #include <linux/mm.h>
> >> > #include <linux/pagemap.h>
> >> >+#include <linux/slab.h>
> >> > #include <linux/tracepoint-defs.h>
> >> >
> >> > /*
> >> >@@ -34,9 +35,12 @@
> >> > #define GFP_CONSTRAINT_MASK (__GFP_HARDWALL|__GFP_THISNODE)
> >> >
> >> > /* Check for flags that must not be used with a slab allocator */
> >> >-static inline gfp_t check_slab_flags(gfp_t flags)
> >> >+static inline gfp_t check_slab_flags(gfp_t flags, slab_flags_t slab_flags)
> >> > {
> >> >-      gfp_t bug_mask = __GFP_DMA32 | __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> >> >+      gfp_t bug_mask = __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> >> >+
> >> >+      if (!IS_ENABLED(CONFIG_ZONE_DMA32) || !(slab_flags & SLAB_CACHE_DMA32))
> >> >+              bug_mask |= __GFP_DMA32;
> >>
> >> The original version doesn't check CONFIG_ZONE_DMA32.
> >>
> >> Do we need to add this condition here?
> >> Could we just decide the bug_mask based on slab_flags?
> >
> >We can. The reason I did it this way is that when we don't have
> >CONFIG_ZONE_DMA32, the compiler should be able to simplify to:
> >
> >bug_mask = __GFP_HIGHMEM | ~__GFP_BITS_MASK;
> >if (true || ..) => if (true)
> >   bug_mask |= __GFP_DMA32;
> >
> >Then just
> >bug_mask = __GFP_HIGHMEM | ~__GFP_BITS_MASK | __GFP_DMA32;
> >
> >And since the function is inline, slab_flags would not even need to be
> >accessed at all.
> >
>
> Hmm, I get one confusion.
>
> This means if CONFIG_ZONE_DMA32 is not enabled, bug_mask will always
> contains __GFP_DMA32. This will check with cachep->flags.
>
> If cachep->flags has GFP_DMA32, this always fail?
>
> Is this possible?

Not fully sure to understand the question, but the code is:
if (!IS_ENABLED(CONFIG_ZONE_DMA32) || !(slab_flags & SLAB_CACHE_DMA32))
       bug_mask |= __GFP_DMA32;

IS_ENABLED(CONFIG_ZONE_DMA32) == true:
 - (slab_flags & SLAB_CACHE_DMA32) => bug_mask untouched, __GFP_DMA32
is allowed.
 - !(slab_flags & SLAB_CACHE_DMA32) => bug_mask |= __GFP_DMA32;,
__GFP_DMA32 triggers warning
IS_ENABLED(CONFIG_ZONE_DMA32) == false:
  => bug_mask |= __GFP_DMA32;, __GFP_DMA32 triggers warning (as
expected, GFP_DMA32 does not make sense if there is no DMA32 zone).

Does that clarify?

>
> --
> Wei Yang
> Help you, Help me
