Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:38:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9A958580443;
	Tue,  4 Dec 2018 05:27:44 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 05:27:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AlfoCTxO9gVL9vDhZzTwl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj/osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xUohyhqBNwzY7PeIGYNuFzcr/ecN4AWWZMRNpdWzBHD4ih?=
 =?us-ascii?q?b4UPFe0BPeNAoofgu1sBsxW+ChOqBOjy1jJIiXn20rMg0+88FgzGxxAgEMwAsH?=
 =?us-ascii?q?vOqtX4L70dUe+zzKbW1zXPde9Z2Tfk5YXObxsvr/aMXbdqfsrQz0kiDwDFgUuK?=
 =?us-ascii?q?qYzjITyV0v4Bs2+B7+pvU++klm0pqxlprzSx2sshjpPFip8bx1za7yl13YU4Kc?=
 =?us-ascii?q?GiREN6Y9OoCJRduiCAO4drTc4uX3tktSQkxrEcupO3Yi4Hw4k9yRHFcfyIaY2I?=
 =?us-ascii?q?7wrjVOmPJTd4g2poeKywhxms60is0O78Wdeu0FZMsCVFlsPAtncX1xzc8sSHS/?=
 =?us-ascii?q?198Vm92TuXyQzf9uVJLVopmafVNZIt2KM8m5kPvUjZHyL7ml36jKqMeUUl/uio?=
 =?us-ascii?q?5f7nYrLjppKEM490iwf+Mrkhm8CmAuQ3LBIOX26F9uS4zbHj+kP4QLNUgf0sia?=
 =?us-ascii?q?TZrp/aKtoBpqKjAA9azJwj6xChADeiytgYmmMHLF1ddBKdk4fpI03OIOz/Dfqn?=
 =?us-ascii?q?h1SskTRryO7cMrzuH5XANXzDkLbnfbZg5E9Q0gszzdZD551KDrENOu78Wkj0tN?=
 =?us-ascii?q?bAFB82LxS0w/r7CNV6zo4eWXiAAq6FMKzItl+E/OIvI/SWa48TtzbwMPwl5//o?=
 =?us-ascii?q?jX8kll4RZ6ip3Z0LaH+mGvRqOVmWYX3pgt0ZC2cFohI+TPD2iF2FSTNTZXGyUL?=
 =?us-ascii?q?wm6jE4D4KmC4HDRoe2jbyF3Se7GIBWZ29cBlCNF3foa5uLW/MWZC2OJc9hlyQO?=
 =?us-ascii?q?VaK9RI85yRGuqAj6xqJ9IerP+i0YspHj2MJv5+LJlxE/7jh0D8Wb02GQQGB4hG?=
 =?us-ascii?q?IIRzkq3K9hpUxx0EuM0a99g/ZAD9xc++tJUhsmNZ7b1+F6CMr9WgTbcteNSVap?=
 =?us-ascii?q?WNOmAT4qQ9I1wt8OZVt9Gtq4ghDC2SqqH6Eal7iRCJMo9aLc2mD7J9xhxHbeyK?=
 =?us-ascii?q?khk14mT9NSOmK8mK5w6RLfB47TnEWfjKala6Ic0CnJ9GeAyGqOuFpVUApxUaXD?=
 =?us-ascii?q?QHAeaVHardX/5kPeUbCuDa4rPRdGyc6HMqFKcMHmjU1aRPf/P9TTe3++lH2uBR?=
 =?us-ascii?q?mW3L+MbJDle2MG3CrDDkgJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGcV/IT3rcDuCc9qzV1HEyx387MB9qHvQpheKRcYd?=
 =?us-ascii?q?Uy4Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0J/qPr3YNGbz8w6vaqLMwV7ezcuZ9b0J6PQ7rFXjohqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw9IoBPY/xhm8Zdte?=
 =?us-ascii?q?MaOEGxX0E80VHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQxZYFwu2X0RGdVzjhi1etqMb3lp5eZTETB2aw1TLrBIpMaaJs?=
 =?us-ascii?q?Z4YLDmGuLtazxtV/gZ7tRnFZ+ESiB1MAxM+mZx6SY0bh0g1X0EQduWanljegzz?=
 =?us-ascii?q?xojzEpqbKS3SzPw+j4dBsLIHVLRHRkjVr3JYi0jtYaXFWnbgQzlRul41r6yLZf?=
 =?us-ascii?q?pKhlM2bTRkJIdTDsL25+SquwqqaCY8lX5ZMqqypXSue8YVOdSrLnuBsVySDjH2?=
 =?us-ascii?q?hfxDA9aT6qvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquC/WHimVpFJcynrzIWAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3GoJknYsxnp0Q2WUaiY+T/XoIimrz?=
 =?us-ascii?q?NdRb2aTjbHsCXzILwtjV4BT7101nNH6G24X5VnCFyMt7e9a6en8W2j46781SDa?=
 =?us-ascii?q?eU7b9EkjFvrlu2sw3ReuR9kSkHyfQ19nEame4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHTN37sV6Kl7N0Wf86of5eN?=
 =?us-ascii?q?nLdtITtwaZkxPBj+hTNZIwmeAGhSthOWLho3Ilz/Q3ggBp3ZG/pIKHMXli/Lql?=
 =?us-ascii?q?Ah5EMT34f9gc9SvqjaZag8aaxYSvHoh6FzUPXZvoS++oET0IufTmMQaODCMzqn?=
 =?us-ascii?q?OBFbXDGg+f7V9sr2jTHJCzK3GXOH4ZwM1gRBaHIUxQnhsUUC8mnpIjFQCq2c/h?=
 =?us-ascii?q?cFp/5j8L/V71sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGaZwNIDXwQWkyZHV/jOKOi5cLH8+ieCeqzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/Nb9CUpBa/+i10r8?=
 =?us-ascii?q?Cz6vfrWBjo5YuAFbRSK8hv+wutjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtpO8tV9K08xBdCOM7BhtPx1751lfo1C1ZDVV?=
 =?us-ascii?q?z8lcClf80KI2ehNFzZAEaHLqiJJTrOw8vve6OzVaVQjPlItx23oTubD07jPjGZ?=
 =?us-ascii?q?mzb1TRygLeFMgz+dPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFm1B9HVlK+yEmyef7+bAK5cWseFkAiJ7l+9B5HQ6yr1V?=
 =?us-ascii?q?7DxLRfBvmSvSqMJurE+ikuWV1jVnVx9O+X53g9eLukNtKaTf+d9SWWvs+gIVq2?=
 =?us-ascii?q?6XDlBCo51+FtTku4hIx97Aib7pLzFD45TY8JgyHc/RffmbPXQoN1LAFzjZFkNR?=
 =?us-ascii?q?ViKmO2jZr0VSlvyIsHaV+Mtp4qPwkYYDH+cIHGc+EekXXxxo?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BkAQD5fwZch0O0hNFjH4F4gVuBD4ECJ?=
 =?us-ascii?q?5gggiGXNRSBXywNBgGIESI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiKCZQM?=
 =?us-ascii?q?DAQIkCwENAQE3AQUJAQE+EgNUBxIFgxwBggEEAQqjVoFsM4J2AQEFgTABhX0DB?=
 =?us-ascii?q?YdvgxOBHBeBf4heDyCFcokPM5cHCYEVgQ+EX4ozCxhfkEeJBYRnjE+CDTMaCDC?=
 =?us-ascii?q?DJxOCFBd/AQGCIYU8hUA/MgEBgQMBAYhFDxeCJwEB?=
X-IPAS-Result: =?us-ascii?q?A0BkAQD5fwZch0O0hNFjH4F4gVuBD4ECJ5gggiGXNRSBXyw?=
 =?us-ascii?q?NBgGIESI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiKCZQMDAQIkCwENAQE3A?=
 =?us-ascii?q?QUJAQE+EgNUBxIFgxwBggEEAQqjVoFsM4J2AQEFgTABhX0DBYdvgxOBHBeBf4h?=
 =?us-ascii?q?eDyCFcokPM5cHCYEVgQ+EX4ozCxhfkEeJBYRnjE+CDTMaCDCDJxOCFBd/AQGCI?=
 =?us-ascii?q?YU8hUA/MgEBgQMBAYhFDxeCJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="54443309"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 05:27:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726407AbeLDN1k (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 08:27:40 -0500
Received: from mail.kmu-office.ch ([178.209.48.109]:33648 "EHLO
        mail.kmu-office.ch" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726309AbeLDN1j (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 08:27:39 -0500
Received: from trochilidae.toradex.int (unknown [46.140.72.82])
        by mail.kmu-office.ch (Postfix) with ESMTPSA id D19835C07AA;
        Tue,  4 Dec 2018 14:27:36 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=agner.ch; s=dkim;
        t=1543930057;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=FZDGS75OY2CnEYwbJ8d7y7z0pz7Qa2SwVyeltfytdi8=;
        b=Ci0lrkr4aqCtef7L1CtxiosDjlYrUy0H51byEx/rOkxq1VwGHJ6bzhKWtOzUTXy6yHErtJ
        80oh/dKBlJ6xJJmX34bD3C7z4ygG3saA5susUUjyTF+KEks0lTDPWpjTUiX+NVeMXG7GtL
        tRVfNilHAztXOFC4ljlYOLjroUnzLbg=
From: Stefan Agner <stefan@agner.ch>
To: hongxing.zhu@nxp.com, l.stach@pengutronix.de
Cc: robin.murphy@arm.com, tpiepho@impinj.com, linux@armlinux.org.uk,
        leonard.crestez@nxp.com, andrew.smirnov@gmail.com,
        festevam@gmail.com, lorenzo.pieralisi@arm.com, bhelgaas@google.com,
        stefan@agner.ch, linux-pci@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: [PATCH v2 2/2] pci: imx6: support kernels built in Thumb-2 mode
Date: Tue,  4 Dec 2018 14:27:33 +0100
Message-Id: <20181204132733.14422-2-stefan@agner.ch>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181204132733.14422-1-stefan@agner.ch>
References: <20181204132733.14422-1-stefan@agner.ch>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add a fault handler which handles immediate reads in Thumb-2
mode. Install the appropriate handler depending on which mode
the kernel has been built. This avoids an "Unhandled fault:
external abort on non-linefetch (0x1008) at 0xf0a80000"
during boot on a device with a PCIe switch connected.

Link: https://lore.kernel.org/linux-pci/20181126161645.8177-1-stefan@agner.ch/
Signed-off-by: Stefan Agner <stefan@agner.ch>
---
Changes since v1:
- Added Thumb-2 32-bit instruction support (tested by inserting .w
  instructions in arch/arm/include/asm/io.h)
- Avoid dereferencing if fault happened in user mode

 drivers/pci/controller/dwc/pci-imx6.c | 59 ++++++++++++++++++++++++++-
 1 file changed, 58 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
index 54a29e441303..a9bbbf176c4a 100644
--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -29,6 +29,7 @@
 #include <linux/reset.h>
 #include <linux/pm_domain.h>
 #include <linux/pm_runtime.h>
+#include <asm/opcodes.h>
 
 #include "pcie-designware.h"
 
@@ -305,6 +306,59 @@ static int imx6q_pcie_abort_handler(unsigned long addr,
 	return 1;
 }
 
+static int imx6q_pcie_abort_handler_thumb2(unsigned long addr,
+		unsigned int fsr, struct pt_regs *regs)
+{
+	unsigned long pc = instruction_pointer(regs);
+	unsigned long instr;
+
+	if (user_mode(regs))
+		return 1;
+
+	instr = __mem_to_opcode_thumb32(*(unsigned long *)pc);
+
+	if (__opcode_is_thumb32(instr)) {
+		/* Load word/byte and halfword immediate offset */
+		if ((instr & 0xff100000UL) == 0xf8100000UL) {
+			int reg = (instr >> 12) & 0xf;
+			unsigned long val;
+
+			if ((instr & 0x00700000UL) == 0x00100000UL)
+				val = 0xff;
+			else if ((instr & 0x00700000UL) == 0x00300000UL)
+				val = 0xffff;
+			else
+				val = 0xffffffffUL;
+
+			regs->uregs[reg] = val;
+			regs->ARM_pc += 4;
+			return 0;
+		}
+	} else {
+		instr = __mem_to_opcode_thumb16(*(unsigned long *)pc);
+
+		/* Load word/byte and halfword immediate offset */
+		if (((instr & 0xe800) == 0x6800) ||
+		    ((instr & 0xf800) == 0x8800)) {
+			int reg = instr & 0x7;
+			unsigned long val;
+
+			if (instr & 0x1000)
+				val = 0xff;
+			else if (instr & 0x8000)
+				val = 0xffff;
+			else
+				val = 0xffffffffUL;
+
+			regs->uregs[reg] = val;
+			regs->ARM_pc += 2;
+			return 0;
+		}
+	}
+
+	return 1;
+}
+
 static int imx6_pcie_attach_pd(struct device *dev)
 {
 	struct imx6_pcie *imx6_pcie = dev_get_drvdata(dev);
@@ -1075,6 +1129,8 @@ static struct platform_driver imx6_pcie_driver = {
 
 static int __init imx6_pcie_init(void)
 {
+	bool thumb2 = IS_ENABLED(CONFIG_THUMB2_KERNEL);
+
 	/*
 	 * Since probe() can be deferred we need to make sure that
 	 * hook_fault_code is not called after __init memory is freed
@@ -1082,7 +1138,8 @@ static int __init imx6_pcie_init(void)
 	 * we can install the handler here without risking it
 	 * accessing some uninitialized driver state.
 	 */
-	hook_fault_code(8, imx6q_pcie_abort_handler, SIGBUS, 0,
+	hook_fault_code(8, thumb2 ? imx6q_pcie_abort_handler_thumb2 :
+			imx6q_pcie_abort_handler, SIGBUS, 0,
 			"external abort on non-linefetch");
 
 	return platform_driver_register(&imx6_pcie_driver);
-- 
2.19.1

