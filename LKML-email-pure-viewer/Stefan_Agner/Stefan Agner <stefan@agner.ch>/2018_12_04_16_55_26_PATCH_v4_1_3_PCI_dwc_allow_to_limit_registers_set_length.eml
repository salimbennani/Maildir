Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:41:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B8BD258014B;
	Tue,  4 Dec 2018 08:55:44 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 08:55:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A3UxrqxLBM0+D4WaMQdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvT6rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gq1UrxyhvAR/zozPbY2JN/dzZL/RcMkGSWZdWMtaSixPApm7?=
 =?us-ascii?q?b4sKF+cPIPpYoJfzp1QUqxu1GBWhBOzpyjBWnH/9wKo30/89EQ7Y0gwvBdQOvW?=
 =?us-ascii?q?/Oo9X6MqcdT/q1wLPUwjXDdv5b3yr25ovQch05v/2AQbZ9fdDMxUQhCQ/JlEic?=
 =?us-ascii?q?pI/5Mz+P1+kAsXCX4uVhWO61lmIqpB19riKty8sykIXEhZwZx1bZ/itj2ok1P8?=
 =?us-ascii?q?e3SEtjbN6kDpRQsyaaOpNoQsMtXW5oojw2yr4Ytp6heigF1pAnywTYa/ydfIiE?=
 =?us-ascii?q?+hPjVOCPLjdknH9pZq6zihKo/US9xODwSNO43EtJoyZZiNXBt3IA2wTW6sedS/?=
 =?us-ascii?q?t9+kmh2SyI1wDW8uxEJUE0lazGK58u27IwlYQcsV7FHiDonEX6laiWd0si+ue2?=
 =?us-ascii?q?8eTqeavmppCCOI9ukA3+Mbohmta5AesmNggCRW+b+f6z1LH75032XK1KjuEqkq?=
 =?us-ascii?q?neqJ3aIcUbpq2nDANP3Ycj9g2yDzOn0NQegHkGI0hJeBOBj4j1JV7OJOr0Auu4?=
 =?us-ascii?q?g1SpiD1r3ezJPqX9ApXRKXjOiLfhcqx8605A0gUzyspT55JJCr4bJvLzVVT8tN?=
 =?us-ascii?q?jZDh8/Lgy1zPzrCNR71oMCR22PBrWVP7/VsV+N/ugvOfWDZJcJuDbhLPgo//zu?=
 =?us-ascii?q?jXgnllMHfqmp2p0XaHa/Hvl9J0WZYHzsgsoOEGsQvwo+SvDqh0OGUTJJe3myWK?=
 =?us-ascii?q?c87CkhCI26FYfDWpytgLuZ0SihBZ1WZmdGClOWHXfybYqEWewBaCaTIs9njzwF?=
 =?us-ascii?q?WqKtS44n1RGyqgD6z6BrIfbT+i0drZjjzsR65/XPlREu8jx5F8ed3HuLT21umm?=
 =?us-ascii?q?MIRiU53KZwoUFmzleD0K54g+FXFNBJ5vNJVBs6OoDYz+BgF9/yXQfBdM+TSFm6?=
 =?us-ascii?q?WtWmHS0xTtUpztATeUl9BcutggrD3yWwBb8VjKKEBJoz/qLY3HjxIsJ9xm3C1K?=
 =?us-ascii?q?kgiVkmX8ROOXenhq556wjcGYrJn1+FmKatcKQWxDTN+3ubzWqSoEFYVxZ9Xrjf?=
 =?us-ascii?q?UnABeETat9T56VnET7+1F7snNBBMycqDKqtMd93ogk9KRPblONTCfW2xn328Cg?=
 =?us-ascii?q?qPxrOJdIDqYXkS3D3BCEgYlAAe5WqGNQk7Biemv2LeDDxvGUjzY0/29ul+sne7?=
 =?us-ascii?q?Tk4yzwGFdEBh07u1+hgIhf2TUf8T37QEuDs/pDVwBlqyw9XWC9+YrQp7YKpcec?=
 =?us-ascii?q?894EtA1W/BrQN9OoKvLq98iV8eaQh4pF7u2AhtBYVGksgqq20qwRF2KaKZ1lNB?=
 =?us-ascii?q?ajyZ0YrxOr3RNmn94hSvZ7TK1VHZ1dac4r0P5+ggq1X/oAGpEVIv8nV609VPz3?=
 =?us-ascii?q?SQ/JTLDAoIXpL3XUY67Bx6p7DcYikg6ILYz3xsMa+osjDc39IlHvcqyhGlf91H?=
 =?us-ascii?q?KqOLCBfyE9EGB8ipMOEqgVmpYQ4eM+BI6aE0ONmqd/2Y166xPeZshS6pgn5D4I?=
 =?us-ascii?q?9gzE2M7S18SujT0pYBwvGY2BaHVjjmgFegtMD3hZ5LZTUIEmWjzijkAZZbZrdu?=
 =?us-ascii?q?coYTFWeuP8q3y81+hp7sQXJZ9ESvB0gb2M+vYheSa1393QtN1UUYu3CnmC24zy?=
 =?us-ascii?q?BqnDEttKaQwCvOw+H6fhodJmFLXHVijUvrIYWsjdAVRlKobwsqlBui/0r63LJU?=
 =?us-ascii?q?pKd8L2nSR0dHYS72InpmUquxsLqCfsFO5IkpsSVRTOSzf1SaRqThrBsd1iPpB3?=
 =?us-ascii?q?FeyywjdzG2ppX5mAR3iWKHI3Z0tnbZe8BwxRHE6dzYRP5R2CcGRSZihTnWAFi8?=
 =?us-ascii?q?I8em/dGOm5jfteC+UnqrVodPfinz0YOAqCy76HVpARKlnvC/gN3nERUg3i/92N?=
 =?us-ascii?q?lnTiHIrBf6Yon22KW2K+Nnfk90BFDi78p2AJ1xkow1hJsIw3gVmo2V/WYbkWf0?=
 =?us-ascii?q?Kdhb3KP+bHkXSjIRzd/a/hPl2FF9IXKT3I32SG+dwsR6atm+Y2MW3D897s9QBK?=
 =?us-ascii?q?eV6rxEgTV6ol6ioQ3NZvh9my8XyeEy534Cn+EJpA0twz2BArAVGElUJy3tmA6O?=
 =?us-ascii?q?79Cjt6VXf2evfKO01Ep/m9ChEb6DrhtdWHb/ZpctAytw4t9jP1LL1X358pvkd8?=
 =?us-ascii?q?XIbdIPqh2UlA/NgPNPJ5I2kvoKmDBrOWbgvXA+z+47jBpu3Yy1vYSdKmVt+r65?=
 =?us-ascii?q?DQBcNjHve8wT/TTth75EnsmKx4CvAolhGjITUZvqV/2oFSwdte/9OwaSCjE8qW?=
 =?us-ascii?q?qbGbnCHQ+Z8khmtGnCE5SqN3GROXkYws9uRBibJExDng8UWC82kYI+FgCv3Mbh?=
 =?us-ascii?q?alt25igN5l7krRtB0uJpNx7iUmfGuQencDE0RIKELBpR6AFC6FzYMcif7uJ1Ai?=
 =?us-ascii?q?FZ8YetrA2LKmyHeQtICXsFVVCDB1DmJrOu/8XP8/CEBuqiKPvDebWOpvJfV/eL?=
 =?us-ascii?q?xpKv05Fq/zWWNsWIMXltEec72ldYXX1iH8TZmjMPSzEYli7Xbs6bogu89TNzrs?=
 =?us-ascii?q?yl7PvrXwfv75OVC7ROKdVv5wy2gaCbOuGKmSZ2MixY2Y0MxHPSzLgf3UUfiyVv?=
 =?us-ascii?q?dzmrDLQBujTBTKPWmq9LEREbbzl/O9dP76I5xgNNI9LUisvp1r5kif44E0tFVV?=
 =?us-ascii?q?3kms2zecMGOX2yNFPZC0aNL7mGITzLw8fqYaKzU7FQjeNUtwGutjafCUPsIjOD?=
 =?us-ascii?q?lzzxXRC1Le5MlD2bPABZuIylchdiE27jTNfnah29KNB2jD02zqcyhnPFLmMcNT?=
 =?us-ascii?q?l8c0VQrryf9y9Yg/N/G3Bf4XphN+WLhyGZ7+yLYqoR5P9sGClyheUc+HU30bJR?=
 =?us-ascii?q?7TpFbPVvnW3Zqdsq61OnlOaIzTpuVkNmpTNChYbNtkJnfe3W64JcUGjDugoM6G?=
 =?us-ascii?q?iWFxkOj8B0DNr3oLFLjNPIkea7LHFZ79vf/eMECs7bNd6dN3wgIVzlFXqcEBME?=
 =?us-ascii?q?QCarMkneglRclvPU/XqQ/bYgrZ25o4YDRLZdHHU6EP4AQhB+ANEMKZFfVzwinK?=
 =?us-ascii?q?Tdh85etin2lwXYWMgP5sOPbfmVG/i6cDs=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AtAAD3sAZch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YNrJ5pClzWBcS4TAYdMIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJsAiQ?=
 =?us-ascii?q?LAQ0BATcBBQkCPhIDWxIFgxyCAgQBpByBbDOCdgEBBYcrCIdvgxOBHBeBf4h+h?=
 =?us-ascii?q?gGgSwmBFYEPjxILGF98iDaHFYkGkTkCggkzGggwgyeCGwwXgyKKfD8ygQUBAYg?=
 =?us-ascii?q?WgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AtAAD3sAZch0O0hNFkHgEGBwaBUggLAYNrJ5pClzWBcS4?=
 =?us-ascii?q?TAYdMIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJsAiQLAQ0BATcBBQkCP?=
 =?us-ascii?q?hIDWxIFgxyCAgQBpByBbDOCdgEBBYcrCIdvgxOBHBeBf4h+hgGgSwmBFYEPjxI?=
 =?us-ascii?q?LGF98iDaHFYkGkTkCggkzGggwgyeCGwwXgyKKfD8ygQUBAYgWgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="140722963"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 08:55:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727032AbeLDQzg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 11:55:36 -0500
Received: from mail.kmu-office.ch ([178.209.48.109]:36306 "EHLO
        mail.kmu-office.ch" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726367AbeLDQzf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 11:55:35 -0500
Received: from trochilidae.toradex.int (unknown [46.140.72.82])
        by mail.kmu-office.ch (Postfix) with ESMTPSA id 2703B5C03A3;
        Tue,  4 Dec 2018 17:55:33 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=agner.ch; s=dkim;
        t=1543942534;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:
         content-transfer-encoding:content-transfer-encoding:in-reply-to:
         references; bh=NX10ckMc3R1dgUUnyidEtTbBw4+aPrqKIUVwguJm7Rg=;
        b=pU3TnJANc2kHJTwA+xUVlziR+rumLqmSwYEEQql0ngmEJgt4B+DNEWBd06mxqUaCevWYWx
        iRPIYt6C7nPMUV4o4c3one08i1vIt/Eqo2rIBA2oZvBw2yNNffT0jzuKJMVfEWueUZWha6
        nptpCuqaX2xfX32PpoloDy13n8DWHyc=
From: Stefan Agner <stefan@agner.ch>
To: lorenzo.pieralisi@arm.com, jingoohan1@gmail.com,
        gustavo.pimentel@synopsys.com, l.stach@pengutronix.de,
        tpiepho@impinj.com
Cc: leonard.crestez@nxp.com, bhelgaas@google.com,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        Stefan Agner <stefan@agner.ch>
Subject: [PATCH v4 1/3] PCI: dwc: allow to limit registers set length
Date: Tue,  4 Dec 2018 17:55:26 +0100
Message-Id: <20181204165528.15534-1-stefan@agner.ch>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add length to the struct dw_pcie and check that the accessors
dw_pcie_(rd|wr)_conf() do not read/write beyond that point.

Suggested-by: Trent Piepho <tpiepho@impinj.com>
Signed-off-by: Stefan Agner <stefan@agner.ch>
---
Changes in v4:
- Move length check to dw_pcie_rd_conf

 .../pci/controller/dwc/pcie-designware-host.c    | 16 ++++++++++++++--
 drivers/pci/controller/dwc/pcie-designware.h     |  1 +
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/controller/dwc/pcie-designware-host.c b/drivers/pci/controller/dwc/pcie-designware-host.c
index 692dd1b264fb..9fc0f7bd99f0 100644
--- a/drivers/pci/controller/dwc/pcie-designware-host.c
+++ b/drivers/pci/controller/dwc/pcie-designware-host.c
@@ -606,14 +606,20 @@ static int dw_pcie_rd_conf(struct pci_bus *bus, u32 devfn, int where,
 			   int size, u32 *val)
 {
 	struct pcie_port *pp = bus->sysdata;
+	struct dw_pcie *pci;
 
 	if (!dw_pcie_valid_device(pp, bus, PCI_SLOT(devfn))) {
 		*val = 0xffffffff;
 		return PCIBIOS_DEVICE_NOT_FOUND;
 	}
 
-	if (bus->number == pp->root_bus_nr)
+	if (bus->number == pp->root_bus_nr) {
+		pci = to_dw_pcie_from_pp(pp);
+		if (pci->dbi_length && where + size > pci->dbi_length)
+			return PCIBIOS_BAD_REGISTER_NUMBER;
+
 		return dw_pcie_rd_own_conf(pp, where, size, val);
+	}
 
 	return dw_pcie_rd_other_conf(pp, bus, devfn, where, size, val);
 }
@@ -622,12 +628,18 @@ static int dw_pcie_wr_conf(struct pci_bus *bus, u32 devfn,
 			   int where, int size, u32 val)
 {
 	struct pcie_port *pp = bus->sysdata;
+	struct dw_pcie *pci;
 
 	if (!dw_pcie_valid_device(pp, bus, PCI_SLOT(devfn)))
 		return PCIBIOS_DEVICE_NOT_FOUND;
 
-	if (bus->number == pp->root_bus_nr)
+	if (bus->number == pp->root_bus_nr) {
+		pci = to_dw_pcie_from_pp(pp);
+		if (pci->dbi_length && where + size > pci->dbi_length)
+			return PCIBIOS_BAD_REGISTER_NUMBER;
+
 		return dw_pcie_wr_own_conf(pp, where, size, val);
+	}
 
 	return dw_pcie_wr_other_conf(pp, bus, devfn, where, size, val);
 }
diff --git a/drivers/pci/controller/dwc/pcie-designware.h b/drivers/pci/controller/dwc/pcie-designware.h
index 9943d8c68335..9cd7bdc94200 100644
--- a/drivers/pci/controller/dwc/pcie-designware.h
+++ b/drivers/pci/controller/dwc/pcie-designware.h
@@ -229,6 +229,7 @@ struct dw_pcie {
 	void __iomem		*dbi_base2;
 	/* Used when iatu_unroll_enabled is true */
 	void __iomem		*atu_base;
+	int			dbi_length;
 	u32			num_viewport;
 	u8			iatu_unroll_enabled;
 	struct pcie_port	pp;
-- 
2.19.1

