Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:19:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BC34D5802E4;
	Thu, 29 Nov 2018 01:47:56 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 01:47:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyvcymRU5MrMfIYl6lFa7vly2XRPV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGCvadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoyz?=
 =?us-ascii?q?YJcAAeQPPehWsZTzqFkArRW9CgijCvjvyidKi3Ltwa030eYhHR3a0AE6Ad4Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41LTGzSndYPNYwzj97pXDfwwuofGKQ71wa9faxE40FwPZkFqQ?=
 =?us-ascii?q?p5bqPzWO2+sXvGib6fRvVfi1h2E7qwF8uz6izdoihInOg4Ia0FHE9SNhzYY2O9?=
 =?us-ascii?q?K4Ukh7bsCgEJdKsCGaLYR2TtssQmFpoyY11qcKtoCmcygX0Jgnxhjfa/Kdc4eS?=
 =?us-ascii?q?/x3sSvyeLipiiHJiYrK/iBC/+lWjxO3kTsS4zkpGoy5fntXRuH0ByQbf5tWER/?=
 =?us-ascii?q?dh5Eus2DSC2xjN5u5ePUw4i6/WJpE8zrMzk5cesF7MEjPolEjziaKZbEsp9+61?=
 =?us-ascii?q?4Or9eLrmvIWTN4pshwH+LKsunsu/DPwmMggBQWeb4/6w1L798k3jRrVFkPk2nr?=
 =?us-ascii?q?PesJDAKsQXvq+5AwlL3YY/8xuzESuq3dACkXUaIl9JZgiLg5XqNl3SOvz1DPWy?=
 =?us-ascii?q?j0ypkDhxxvDGOrPhAo/KLnjGiLrhebd960hByAs81Nxf5IxbCqsHIP3tXk/9rd?=
 =?us-ascii?q?vYDxE/MwOq2ebqE8t91owAVmKVGKOZM73dsUWO5u0xJ+mAfogVuCzyK/Q9/f7h?=
 =?us-ascii?q?kWc5mUMBfamuxZYXbHG4Hvd4LEmDbnvsn8wMEWMLvgo4Uezrh0eOUT9VZ3auQa?=
 =?us-ascii?q?084is3B56hDYfGXoqtmqCO3D+nHp1KYWBLElCMHm3pd4WYQfgMbzieIs98kjMe?=
 =?us-ascii?q?U7ihRJQs1RWvtA/81rpmIfDY+iwetZL/ytd14/ffmg019TxxF86dyX2CT3lonm?=
 =?us-ascii?q?MUQD87xKJ/oUtjxVuZ0qh4hPpYFdpU5/5SVgc6NJjcz/F1CtzoWwLBeMuJR0ii?=
 =?us-ascii?q?Qtm8HT4xSdcxyccUY0lhA9WikgzD3y2yDrAPjLyLBJs08qHG03jrPcl9yW3L1K?=
 =?us-ascii?q?0gj1kgX8tOOneqhq959wjPGYHJl1+VmLqtdaQZxCTN7nuMzXKSvEFEVw59SabF?=
 =?us-ascii?q?UmoZZkfMqdT551nNT7mhCbk8NgtByMiCKrZFa9HzjFVGQuvjN8raY26rh2iwAh?=
 =?us-ascii?q?OIzKuWbIX2Y2UdwDndCE8cng8O53mGKxYxCj2ho23ECjxuDkzgY0Xr/el6q3O7?=
 =?us-ascii?q?S0s0whqOb01g0bq15xEUieadS/MVwrILpiMhpy9oE1a62tLcE8CAqBZ5fKVAfd?=
 =?us-ascii?q?M9509K2n/DuAxjIJOsNaBiiUQYcwRsoUzu0Q56CoFBkcgssXMrwxB+KaOe0FNd?=
 =?us-ascii?q?aTyY2Yr8NaHQKmn35BqvcbLZ2knC0NaK/acC8Og4q1TmvAGuCkoi83Vm38NJ03?=
 =?us-ascii?q?eG4ZXKFg4SUZP3UkY47BV6o7DaYi8g54Lbz3FsMK+0siPc1NItHucq1hGgf9JH?=
 =?us-ascii?q?OqOeCADyC9EaB9SpKOEygVepagwLPe9M+680Jc+pbOaG17OxM+ZmnzKminpH7Z?=
 =?us-ascii?q?t50kKN8Sp8V+HJ04wEw/GewguISTP8gE29vcDwnIBOfSsSEXanySj4GI5RYbV/?=
 =?us-ascii?q?fIYWCWu0P8K73NR/h573VH5e+16uHFcG2M6veRqPYF3xxwxQ1UILoXO5nSu01S?=
 =?us-ascii?q?B7kzYsrqCHxizB3/zidAYbOm5MXGRil1bsLpSugNAAQUeoaBIllB276kbgxqhX?=
 =?us-ascii?q?vbhwIHPXQUhVYSf2NWZiUq2ru7qGYs5P7o4osCpNXOS9Z1CaVqDyox8A3yz/GG?=
 =?us-ascii?q?tewSgxdyu2tZXhgxx6lGWdIW5zrXrYY81xxQ3T5MfBRf5XxTcGQCh4iT/KBlmz?=
 =?us-ascii?q?JdWp/NOUl4vdveC6TW6uSppTcSzzx4OaqCS7/XFqAQG4n/2rmN3oCxI60Sz419?=
 =?us-ascii?q?ltTynItwzzYoro16S7N+JoYE9oCUT468p7HIF+j4QxiIsR2XgcmpWa434HnX3v?=
 =?us-ascii?q?PtVc3KL0dGANSiITw97J/Ajl31VuL3KTyIL+THmdwMphZ9+hb2MS2yI96d1KCa?=
 =?us-ascii?q?iO4LxFmyt1vkS3rQbLbfdhmTcdzOMk6GQGjOERpAot0iKdD6gRHUZCPCzgjRSI?=
 =?us-ascii?q?782ko6VRa2aiaryw1Et4ndC8A7COuABcWHDlepg8GS989NlwMFXJ0Hfr8IHrZM?=
 =?us-ascii?q?HQbc4Pth2TixrAiulVKJErmfYQiytoJ3n9vWE7xO4hlhNhw4u6vIecJmVp/aK5?=
 =?us-ascii?q?BANYNzLva8MS/DHtkbhRnsKM04+zGZVhHy0BXIH0QvKwDDISqfPnOh6SED07r3?=
 =?us-ascii?q?eXA7veEhWZ6Ed7tHLPCJGrOmqTJHkYy9ViWRacKFZegAASQDU1gJo5Ghq2y8zm?=
 =?us-ascii?q?dUdz/ioR6ULgqhtQ1uJoMAHyXXzFqwevbjc0VYKTLB5L7gxZ40fVMMqe7v98Hi?=
 =?us-ascii?q?1C/52hqhCNJXKfZwhSEW4JXUmEDUj5Pray/dnA7/SYBu2mIvvMe7qOrPJRV+yS?=
 =?us-ascii?q?yZKzyIdm/CuMNsaSPnlkFfI7wVFOXXR4G8TfhjUORDYblyPLb86Huhi8/jd7od?=
 =?us-ascii?q?y48PTuQAjv/5eAC6NOMdVz/BC7maeCN+mNhCZgNDZXzJUMyWXTyLgY2l4ShDpj?=
 =?us-ascii?q?dz2sEbQGqC7MQ7jcmq5RDx4HdSxzMNFE4L473glIIcTbkM/61qZkjv4pDFdITV?=
 =?us-ascii?q?zhld+oZcwJIGG9NUnLBEWRNLSBKj3E3dv3Yb6nSbBLiOVUthuwuSuUEkP5PzSD?=
 =?us-ascii?q?kSXpWA6rMe1WkC6bOxlespmnchlxEWjjUM7mahqjPdBtkD052qc0iW3KNGIGNT?=
 =?us-ascii?q?h8clhArrmR7SNen/V+FHZN7ntjLemYhSmZ6/PUJYoRsftuGi50jf5V4Gwmy7tJ?=
 =?us-ascii?q?6yFJXOB1mCrXrtJ0v16qiPWAyjp5XxpIsTtLgIOLvUN/OaTW7JVAWHDE/A4T4m?=
 =?us-ascii?q?WUERgFu9xlCtj3saBK1tfPjL7zKCtF89/M/coTHc7UKMeGMHonKRXoGT7UAxED?=
 =?us-ascii?q?TT6kLmzfg01dkPeP9nyatJQ6q57smIYQRb9fTlA6CvQaCkE2VOAFda1qRSgplb?=
 =?us-ascii?q?rTr88O6jL75DDrYY1+v5baRrrGBfTpNSaxhKNBYxoO3KO+Kp4ccJD4jR9McF5/?=
 =?us-ascii?q?yb/WFkTZW5hkrStsdEdgu1lA/nF4ZmQ83U//LAittixAXcWolwI731MtKd8m8y?=
 =?us-ascii?q?3hthJufgLH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAACtf9bh0O0hNFlGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUwQBAQELAQGBLyqBD4ECJ5gZgg0Uly4UgV8sDQYBh3IiNgcNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMQgEQAYFiJAGCYgECAQIBAQEkEwYBASwLAQUJAQEDB?=
 =?us-ascii?q?xAILgMkAS8GEwUDgxkBggEBAwEKpT6BbDOCdgEBBYEwARQ/hSQIiH+Be4EcF4F?=
 =?us-ascii?q?/gRGDEoMeAQMBgRgPIIVyiTyGMJA5CYESgQ+EXYYYhBQIGF97TYdnhw6NV4xCC?=
 =?us-ascii?q?YF9MxoIMDuCbAkKgggMF38BAQeCGoEShCqFQD8yAQEBgQIBAYFAiSsPF4InAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAAACtf9bh0O0hNFlGwEBAQEDAQEBBwMBAQGBUwQBAQE?=
 =?us-ascii?q?LAQGBLyqBD4ECJ5gZgg0Uly4UgV8sDQYBh3IiNgcNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMQgEQAYFiJAGCYgECAQIBAQEkEwYBASwLAQUJAQEDBxAILgMkAS8GEwU?=
 =?us-ascii?q?DgxkBggEBAwEKpT6BbDOCdgEBBYEwARQ/hSQIiH+Be4EcF4F/gRGDEoMeAQMBg?=
 =?us-ascii?q?RgPIIVyiTyGMJA5CYESgQ+EXYYYhBQIGF97TYdnhw6NV4xCCYF9MxoIMDuCbAk?=
 =?us-ascii?q?KgggMF38BAQeCGoEShCqFQD8yAQEBgQIBAYFAiSsPF4InAQE?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="64525924"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 29 Nov 2018 01:47:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727568AbeK2Uw2 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 15:52:28 -0500
Received: from mail.kmu-office.ch ([178.209.48.109]:54948 "EHLO
        mail.kmu-office.ch" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726706AbeK2Uw2 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 15:52:28 -0500
Received: from webmail.kmu-office.ch (unknown [IPv6:2a02:418:6a02::a3])
        by mail.kmu-office.ch (Postfix) with ESMTPSA id 157F65C035F;
        Thu, 29 Nov 2018 10:47:39 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=agner.ch; s=dkim;
        t=1543484859;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=IwpMbwRhubZRHeWjXIawLF87VlUqizlLPj/75MQrYeI=;
        b=Hpr0TAyt3pf+q69vY5mHdBGEKtuxxpaXQBd/Eyx9n0t89FqZGO5iceBEOg/z8D8ho9xeGt
        fjdIxIw+kTeSpB8ZWS/PcnP/C4zIRH2pU3LtpdZ7D8Y9/kunpH3ZGbSfOAFu7uX86N4JFp
        bOXWX8INTYLt94KcD4U4Mt/0BVrAt9A=
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Date: Thu, 29 Nov 2018 10:47:39 +0100
From: Stefan Agner <stefan@agner.ch>
To: Russell King - ARM Linux <linux@armlinux.org.uk>
Cc: hongxing.zhu@nxp.com, l.stach@pengutronix.de,
        lorenzo.pieralisi@arm.com, andrew.smirnov@gmail.com,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        bhelgaas@google.com, leonard.crestez@nxp.com, festevam@gmail.com,
        linux-arm-kernel@lists.infradead.org, tpiepho@impinj.com
Subject: Re: [PATCH] pci: imx6: support kernels built in Thumb-2 mode
In-Reply-To: <20181128180147.GL30658@n2100.armlinux.org.uk>
References: <20181128132554.28139-1-stefan@agner.ch>
 <20181128180147.GL30658@n2100.armlinux.org.uk>
Message-ID: <8beb1ef0f3562eb863b8b302f1a73e8d@agner.ch>
X-Sender: stefan@agner.ch
User-Agent: Roundcube Webmail/1.3.7
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 28.11.2018 19:01, Russell King - ARM Linux wrote:
> On Wed, Nov 28, 2018 at 02:25:54PM +0100, Stefan Agner wrote:
>> Add a fault handler which handles reads in Thumb-2 mode. Install
>> the appropriate handler depending on which mode the kernel has
>> been built. This avoids an "Unhandled fault: external abort on
>> non-linefetch (0x1008) at 0xf0a80000" during boot on a device
>> with a PCIe switch connected.
>>
>> Link: https://lore.kernel.org/linux-pci/20181126161645.8177-1-stefan@agner.ch/
>> Signed-off-by: Stefan Agner <stefan@agner.ch>
>> ---
>> FWIW, I found this manual helpful to write the code below:
>> http://hermes.wings.cs.wisc.edu/files/Thumb-2SupplementReferenceManual.pdf#page=43&zoom=100,0,66
>>
>> --
>> Stefan
>>
>>  drivers/pci/controller/dwc/pci-imx6.c | 37 ++++++++++++++++++++++++++-
>>  1 file changed, 36 insertions(+), 1 deletion(-)
>>
>> diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
>> index 69f86234f7c0..683deb74d69f 100644
>> --- a/drivers/pci/controller/dwc/pci-imx6.c
>> +++ b/drivers/pci/controller/dwc/pci-imx6.c
>> @@ -29,6 +29,7 @@
>>  #include <linux/reset.h>
>>  #include <linux/pm_domain.h>
>>  #include <linux/pm_runtime.h>
>> +#include <asm/opcodes.h>
>>
>>  #include "pcie-designware.h"
>>
>> @@ -299,6 +300,37 @@ static int imx6q_pcie_abort_handler(unsigned long addr,
>>  	return 1;
>>  }
>>
>> +static int imx6q_pcie_abort_handler_thumb2(unsigned long addr,
>> +		unsigned int fsr, struct pt_regs *regs)
>> +{
>> +	unsigned long pc = instruction_pointer(regs);
>> +	unsigned long instr = *(unsigned long *)pc;
> 
> So what happens if userspace mmap()s the PCIe space (eg, via
> /dev/mem), and then accesses it, triggering this fault?  You'll
> be attempting to read from userspace here, which will oops the
> kernel.  The kernel is not allowed to access userspace by
> simply dereferencing a pointer.
> 

Note that imx6q_pcie_abort_handler above does the same for ARM code. I
guess a quick fix for now would be just using user_mode before
dereferencing the pc:

	if (user_mode(regs))
		return 1;

Is userspace mmap'ing PCIe space common?

If we want to support user space, I guess we anyway should merge the ARM
and Thumb2 handler, and detect & act accordingly.

--
Stefan

>> +	unsigned long thumb2_instr = __mem_to_opcode_thumb16(instr);
>> +	int reg = thumb2_instr & 7;
>> +
>> +	if (!__opcode_is_thumb16(instr & 0x0000ffffUL))
>> +		return 1;
>> +
>> +	/* Load word/byte and halfword immediate offset */
>> +	if (((thumb2_instr & 0xe800) == 0x6800) ||
>> +	    ((thumb2_instr & 0xf800) == 0x8800)) {
>> +		unsigned long val;
>> +
>> +		if (thumb2_instr & 0x1000)
>> +			val = 0xff;
>> +		else if (thumb2_instr & 0x8000)
>> +			val = 0xffff;
>> +		else
>> +			val = 0xffffffffUL;
>> +
>> +		regs->uregs[reg] = val;
>> +		regs->ARM_pc += 2;
>> +		return 0;
>> +	}
>> +
>> +	return 1;
>> +}
>> +
>>  static int imx6_pcie_attach_pd(struct device *dev)
>>  {
>>  	struct imx6_pcie *imx6_pcie = dev_get_drvdata(dev);
>> @@ -1069,6 +1101,8 @@ static struct platform_driver imx6_pcie_driver = {
>>
>>  static int __init imx6_pcie_init(void)
>>  {
>> +	bool thumb2 = IS_ENABLED(CONFIG_THUMB2_KERNEL);
>> +
>>  	/*
>>  	 * Since probe() can be deferred we need to make sure that
>>  	 * hook_fault_code is not called after __init memory is freed
>> @@ -1076,7 +1110,8 @@ static int __init imx6_pcie_init(void)
>>  	 * we can install the handler here without risking it
>>  	 * accessing some uninitialized driver state.
>>  	 */
>> -	hook_fault_code(8, imx6q_pcie_abort_handler, SIGBUS, 0,
>> +	hook_fault_code(8, thumb2 ? imx6q_pcie_abort_handler_thumb2 :
>> +			imx6q_pcie_abort_handler, SIGBUS, 0,
>>  			"external abort on non-linefetch");
>>
>>  	return platform_driver_register(&imx6_pcie_driver);
>> --
>> 2.19.1
>>
>>
>> _______________________________________________
>> linux-arm-kernel mailing list
>> linux-arm-kernel@lists.infradead.org
>> http://lists.infradead.org/mailman/listinfo/linux-arm-kernel
