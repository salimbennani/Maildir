Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 08:39:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 642C25802E4;
	Wed, 28 Nov 2018 09:55:59 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 09:55:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyMHGjxzOkveHNc3XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8UL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOUdpeWSJPAo2y?=
 =?us-ascii?q?cZYBAOgPPehboIjyqUAOrQO8CAS3GOPiyD1IimPq0aAgzegsFxzN0gw6H9IJtX?=
 =?us-ascii?q?TZtMj7NLsMXuC71qbIyyjIYu9Z2Tf79ofIaA0qrPaXXbJsb8XRx1MgFwXeg1qK?=
 =?us-ascii?q?pozlOS2a1v4Xv2eH7+ptTOSigHMppQF2pzig3MYsio/Ri40P0FDE8D91z5oyJd?=
 =?us-ascii?q?29UEJ7YsCrEIFWty6EM4t6WMQiQ3tnuCoixLwGuIW7czQQxJs52hHfdvqKeJWL?=
 =?us-ascii?q?7BL7TOudPyt0iXZ/dL6iiRu+71KsxvD/W8WoylpHryhInsHSun8XyxDf9M2KR/?=
 =?us-ascii?q?Rg8kqi3DuC1hrc5v1aLU0xkKfUMZAsz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vz5YrXpuJCcLZV4igLgPaQ0nMywH+A4PhIJX2iB9uSwzLzj/UvnT7VWlvA6jL?=
 =?us-ascii?q?XVvZTAKcgGqKO1HRVZ3psg5hqjFTur0dYVkWECLF1feRKHi4bpO0vJIPD9Ffq/?=
 =?us-ascii?q?h1WskDF2x/HJJ7HhAYvCLmLFkLj/ebZx8klcyQQ1zd9B/ZJZEa8BIP3tVU/rrt?=
 =?us-ascii?q?DYDQE2Mxayw+n5DNVxzIQeWXiAAqOBKqPdrUeI5v4zI+mLfIIVvDf9K/s76PL0?=
 =?us-ascii?q?gn45hEQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EIKmAp3CRoCxmrOB2z23Hp1LZm9cDFCMHmzld4GFW/cKdSKTLdVtkj0C?=
 =?us-ascii?q?Vbi9VYAh0QuiuxP9y7piNuDU4DEXtYr/1Nhp4O3ejRMy9TtqAMiH0GGNSGd0nm?=
 =?us-ascii?q?UPRzIt2KB/oEp9ykqM0KRigvxYE8BT6O1NUgsgKZHcyOl6AcjoWg3dZteJVEqm?=
 =?us-ascii?q?QtK+DD4rVdIxw9gOY0VnF9W4lB/D3TGnA7sUl7yNGZw1/bjQ33n3J8Zh1XnG0L?=
 =?us-ascii?q?MtgEUhQstKLWemnLJw9xDPB47VlEWUj6Wqer4a3CLX8GeDzHCBvEdXUANrVaXF?=
 =?us-ascii?q?XHYfZlbZrNjj50PCSaOuBqojMgdb1cGCLa5KYMXzjVpaXPfjJMjeY2WplmitHx?=
 =?us-ascii?q?mI2K2DYJDqe2oH2iXdE1YLkwYU8XaCNgg+AyOhrnnaDDxvE1Lvfkzt/fN/qHO9?=
 =?us-ascii?q?Uk870QWKY1d92Lqy/x4fneacRO8L3rIYpCchrC15E0un0NLIFdWMvQphc79aYd?=
 =?us-ascii?q?Mm/lhH03nUtwh8PpymMqBjiUQScwVxv0PyyRp3Dp9MntQtrHMv1AByM76X0Etd?=
 =?us-ascii?q?dzOE2pD9IqHXKmj3/BCod67W2lHf3MyK+qsV7/Q4sVHjvACvFkot6Hhn19hV03?=
 =?us-ascii?q?2B5pTFFgYSUJTxUlop+Bh+vb3Vfi4954bM3312Laa0qiPC284uBOY90Bmge8lQ?=
 =?us-ascii?q?MayaGw7yCcEVHNWuJ/EwlFivbRIEO/5S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+ss8DqmYxeeT4eBGu+ySj+C45Xaa1/?=
 =?us-ascii?q?ZoILCWaoI82qydRynZ/tW3hE9FG9A1MKwtOmeR2Xb1blxw1fyVwXoWC7mSu/1z?=
 =?us-ascii?q?F0iTApobaF0yzU3uvicwALOmhVS2l4jFfgOJS7gMoeXEe1cQcpjhyl5UDhyqhf?=
 =?us-ascii?q?paR/KXTTQEhScyj3KWFiTrW/tr6Yb8FT75MotD1dUP6gblCCVr79vxwa3jvjHm?=
 =?us-ascii?q?tf3jw6dyumuo7knxx8k2+dKHdzrHzEecB/3xvf5drcReJP0ToCXiV3lT7XBl2k?=
 =?us-ascii?q?Ndmz4dqUj4vDsvy5V2+5VJ1cazPrzYCDtCu8/2FqGgewn/Owmt3mFwg1zyn72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MNVB1qL5dnYNRz8Lw9jO7Qjh2U1jKG+Jxo3jWnWcxMthe8e1YmcM1i0h6MBKDb?=
 =?us-ascii?q?+e7KZYkittvlq4sQXRbOB+njgHyPsi8n4ag/wTtworwSWQGbQSHUhePSzxmBWE?=
 =?us-ascii?q?9dG+rKNLZGmxdbi8zlZxndekDLuauAFTRG75eos+HS939sh/NVPM0H7p5Y3+dt?=
 =?us-ascii?q?jfc8kTtgGKnBfalOdaNogxlvURiCpjOGL9u2AlyuEhgRxv25G6oJaIK2F38K2l?=
 =?us-ascii?q?BR5YMyX/Z9kP9TH1kaZegsGW0pizHpVmHzUHRprpQuiuEDIPrvTnLAeOHSY4qn?=
 =?us-ascii?q?eaH7rfAACe5F1nr3LJD5CkKXWXKGMFwtVlQRmXPFZfjxwMXDUmgp45ERiny9f7?=
 =?us-ascii?q?f0d+4jAR+0T0qh9Ryu9zMxn/U2HfpBqnazsuSZifKgZW4R9G50vPLcOe6edzFT?=
 =?us-ascii?q?lC/pK9tAyNNnCbZwNQAGELQEOEAk7sPqK06dnc6eSYBfe+L/jTYbWIs+NeTOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C+8PP2WAL2+IuAEb1SPc90+xCxh6eDOPWdhCJ4KTZey5MNymXEyLkZ3F4OlS5u?=
 =?us-ascii?q?cyOhHqgHtS7IVKjQgLNYDwYHayNvM8tF96I80RdMOc7YidP116R0jv0vC1dCWl?=
 =?us-ascii?q?zuhNupZdERI2ymMFPHBUCLNKmJJDHRwsH3Z7+8RqNUjOlOqxKwvjObGVf5Pjuf?=
 =?us-ascii?q?jznpSwyvMeZUgS6BIRxRo5u9fQhtCGT5SNLmawa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMooWsfpuAihui+1W+mg1y7tL?=
 =?us-ascii?q?4yFCX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaDB/JlaRXnE5A4N7X?=
 =?us-ascii?q?mXCxkSp9pqENvvu6VRytjJjK3yKTdC/MjS/csTHMXULMOHMHw8MRvmAjLUDQ0F?=
 =?us-ascii?q?TSK1OmHbnUBSjPaS9njG5qQ9/6LrkpsIAppGTkQ1B7tOEENvHdpEJYptRjM1ub?=
 =?us-ascii?q?eBiYgD4n/o/zfLQ8APhYzKWPuUSdzgLjuDxe1fexYGyLXQJIsVO5e90Ew0OQoy?=
 =?us-ascii?q?p5jDB0eFBYMFmSZmdAJh5RwVqHU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CJAQA91v5bh0O0hNFjgheBMSqBD4ECJ?=
 =?us-ascii?q?5gZgg0UaJZGFIFfLA0GAYduIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAG?=
 =?us-ascii?q?CYQEBAQEBAQEBAiQTBgEBNwEFCQEBAwcQCC4DVAYTBQODGQGBeQgBAwEKpXWBb?=
 =?us-ascii?q?DOCdgEBBYEwARQ/hSkIiH+Be4EcF4F/gRGCXTWDHgMBAYEYDxAQhXKJKBKGL5A?=
 =?us-ascii?q?0CYERgQ+EXYosCBhfgUiObo1UjEECggQzGggwgycJCoIUF38BAYIhKGqEKoVAP?=
 =?us-ascii?q?zIBAQGBAgEBimYPF4InAQE?=
X-IPAS-Result: =?us-ascii?q?A0CJAQA91v5bh0O0hNFjgheBMSqBD4ECJ5gZgg0UaJZGFIF?=
 =?us-ascii?q?fLA0GAYduIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQEBAQEBA?=
 =?us-ascii?q?iQTBgEBNwEFCQEBAwcQCC4DVAYTBQODGQGBeQgBAwEKpXWBbDOCdgEBBYEwARQ?=
 =?us-ascii?q?/hSkIiH+Be4EcF4F/gRGCXTWDHgMBAYEYDxAQhXKJKBKGL5A0CYERgQ+EXYosC?=
 =?us-ascii?q?BhfgUiObo1UjEECggQzGggwgycJCoIUF38BAYIhKGqEKoVAPzIBAQGBAgEBimY?=
 =?us-ascii?q?PF4InAQE?=
X-IronPort-AV: E=Sophos;i="5.56,291,1539673200"; 
   d="scan'208";a="42684797"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 09:55:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729271AbeK2Ez5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 23:55:57 -0500
Received: from mail.kmu-office.ch ([178.209.48.109]:45138 "EHLO
        mail.kmu-office.ch" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729018AbeK2Ez5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 23:55:57 -0500
Received: from webmail.kmu-office.ch (unknown [IPv6:2a02:418:6a02::a3])
        by mail.kmu-office.ch (Postfix) with ESMTPSA id CB9AB5C0D8F;
        Wed, 28 Nov 2018 18:53:27 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=agner.ch; s=dkim;
        t=1543427607;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=tM1NfCTpmphNJigx4fPTAD6FxbrUBI91FzMFuSgPT8k=;
        b=kX9fTbt5vdfwHDN82Rsqfv8inCu4TXnhJ4rZs9PaAn+1cnC0CH36mcbqJ6diCBeX4U7f3U
        16kRY8TRpvGc9vfqST5cd5c6wTvyGElXwXTI1nklYLkccjpgNNGqrCV5szKq4QdD7qRt/p
        vXCX3mpuPZWdpfo8V24vwuQAMC0KJ28=
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Date: Wed, 28 Nov 2018 18:53:27 +0100
From: Stefan Agner <stefan@agner.ch>
To: Robin Murphy <robin.murphy@arm.com>
Cc: hongxing.zhu@nxp.com, l.stach@pengutronix.de,
        lorenzo.pieralisi@arm.com, andrew.smirnov@gmail.com,
        linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
        bhelgaas@google.com, leonard.crestez@nxp.com, festevam@gmail.com,
        linux-arm-kernel@lists.infradead.org, tpiepho@impinj.com
Subject: Re: [PATCH] pci: imx6: support kernels built in Thumb-2 mode
In-Reply-To: <ff476784-b79e-18bf-5870-4365c8377deb@arm.com>
References: <20181128132554.28139-1-stefan@agner.ch>
 <ff476784-b79e-18bf-5870-4365c8377deb@arm.com>
Message-ID: <074f80db0eceb76672bca283c5de37b9@agner.ch>
X-Sender: stefan@agner.ch
User-Agent: Roundcube Webmail/1.3.7
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 28.11.2018 17:16, Robin Murphy wrote:
> Hi Stefan,
> 
> On 28/11/2018 13:25, Stefan Agner wrote:
>> Add a fault handler which handles reads in Thumb-2 mode. Install
>> the appropriate handler depending on which mode the kernel has
>> been built. This avoids an "Unhandled fault: external abort on
>> non-linefetch (0x1008) at 0xf0a80000" during boot on a device
>> with a PCIe switch connected.
>>
>> Link: https://lore.kernel.org/linux-pci/20181126161645.8177-1-stefan@agner.ch/
>> Signed-off-by: Stefan Agner <stefan@agner.ch>
>> ---
>> FWIW, I found this manual helpful to write the code below:
>> http://hermes.wings.cs.wisc.edu/files/Thumb-2SupplementReferenceManual.pdf#page=43&zoom=100,0,66
> 
> This one's rather less ancient and even more authoritative ;)
> 
> https://static.docs.arm.com/ddi0406/cd/DDI0406C_d_armv7ar_arm.pdf
> 
> (ARMv7 had a few new encodings over and above ARMv6T2, although in
> fairness I don't think any should be relevant to this specific case)
> 

Thanks, I tried to find the right document on arm.com, but I timed out
after 5 minutes or so :-)

>> --
>> Stefan
>>
>>   drivers/pci/controller/dwc/pci-imx6.c | 37 ++++++++++++++++++++++++++-
>>   1 file changed, 36 insertions(+), 1 deletion(-)
>>
>> diff --git a/drivers/pci/controller/dwc/pci-imx6.c b/drivers/pci/controller/dwc/pci-imx6.c
>> index 69f86234f7c0..683deb74d69f 100644
>> --- a/drivers/pci/controller/dwc/pci-imx6.c
>> +++ b/drivers/pci/controller/dwc/pci-imx6.c
>> @@ -29,6 +29,7 @@
>>   #include <linux/reset.h>
>>   #include <linux/pm_domain.h>
>>   #include <linux/pm_runtime.h>
>> +#include <asm/opcodes.h>
>>     #include "pcie-designware.h"
>>   @@ -299,6 +300,37 @@ static int imx6q_pcie_abort_handler(unsigned long addr,
>>   	return 1;
>>   }
>>   +static int imx6q_pcie_abort_handler_thumb2(unsigned long addr,
>> +		unsigned int fsr, struct pt_regs *regs)
>> +{
>> +	unsigned long pc = instruction_pointer(regs);
>> +	unsigned long instr = *(unsigned long *)pc;
>> +	unsigned long thumb2_instr = __mem_to_opcode_thumb16(instr);
>> +	int reg = thumb2_instr & 7;
>> +
>> +	if (!__opcode_is_thumb16(instr & 0x0000ffffUL))
>> +		return 1;
> 
> There are plenty of 32-bit Thumb encodings of various LDR/STR
> variants, and I doubt we can guarantee that the offset, target
> register, and/or addressing mode for a config space access will
> *always* suit the (relatively limited) 16-bit ones.

Hm, I guess they should be handled too?

I looked at the code where I had the abort at hand triggered
(dw_pcie_read).
 
>> +
>> +	/* Load word/byte and halfword immediate offset */
>> +	if (((thumb2_instr & 0xe800) == 0x6800) ||
>> +	    ((thumb2_instr & 0xf800) == 0x8800)) {
>> +		unsigned long val;
>> +
>> +		if (thumb2_instr & 0x1000)
>> +			val = 0xff;
>> +		else if (thumb2_instr & 0x8000)
>> +			val = 0xffff;
>> +		else
>> +			val = 0xffffffffUL;
>> +
>> +		regs->uregs[reg] = val;
>> +		regs->ARM_pc += 2;
>> +		return 0;
>> +	}
> 
> What about stores? The existing implementation handles them, so either
> that's dead code which could perhaps be cleaned up, or they need to be
> handled here too.
> 

I think the current handler (imx6q_pcie_abort_handler) checks bit 20,
which means it must be a load not?

>> +
>> +	return 1;
>> +}
>> +
>>   static int imx6_pcie_attach_pd(struct device *dev)
>>   {
>>   	struct imx6_pcie *imx6_pcie = dev_get_drvdata(dev);
>> @@ -1069,6 +1101,8 @@ static struct platform_driver imx6_pcie_driver = {
>>     static int __init imx6_pcie_init(void)
>>   {
>> +	bool thumb2 = IS_ENABLED(CONFIG_THUMB2_KERNEL);
> 
> Can these aborts definitely *only* be triggered by kernel accesses,
> and never, say, via an mmap() of anything exposed to userspace?

Honestly, I am not very familiar with PCIe, I don't know...

--
Stefan

> 
> Robin.
> 
>> +
>>   	/*
>>   	 * Since probe() can be deferred we need to make sure that
>>   	 * hook_fault_code is not called after __init memory is freed
>> @@ -1076,7 +1110,8 @@ static int __init imx6_pcie_init(void)
>>   	 * we can install the handler here without risking it
>>   	 * accessing some uninitialized driver state.
>>   	 */
>> -	hook_fault_code(8, imx6q_pcie_abort_handler, SIGBUS, 0,
>> +	hook_fault_code(8, thumb2 ? imx6q_pcie_abort_handler_thumb2 :
>> +			imx6q_pcie_abort_handler, SIGBUS, 0,
>>   			"external abort on non-linefetch");
>>     	return platform_driver_register(&imx6_pcie_driver);
>>
