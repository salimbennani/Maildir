Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 20:25:35 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D079E58079D;
	Fri, 14 Dec 2018 00:35:29 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 00:35:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARx+SORK7JylQEwoAXdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULPz4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjJSmnP6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv7LqgSV+G1w7fMzT7eYPxZxyv96JTWfRA7vPqBWq9/ftDXyUkuCQzFik6d?=
 =?us-ascii?q?qYLrPzKb0uQNt3KX4PZgVe+2jWMstg9/oj+qxsg2i4nJgJoYyl7K9SR3xIY1Ic?=
 =?us-ascii?q?e0R1J7YdK8HptQrT+VOJVrTcw8WGFouzo6yroeuZKheygK0psnywbca/OZaYiI?=
 =?us-ascii?q?5AzsVOKLLTd/nnJld6qzhhms/kim0OH8UdO00FlMoyFYkdfMrmgA2wLP5sWDUP?=
 =?us-ascii?q?dx40ms1SiV2wzO6exIPVo4mKvZJpI53LI/jIYfvVrGEyPrmUj7j6qbe0Ul9+Ws?=
 =?us-ascii?q?9evqZ6nqq5qSOoNplg3zM6EjldG+DOk2MAUDWnWU9Oai2LDt+ED2XrZHg/02n6?=
 =?us-ascii?q?TfrZvUP94UprSjDA9Qyosj6wiwDzOh0NkAg3kHI0xKeAidg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i2lzdr3f/GMqXgApXLMHfDjK/scahh50NY0gY/0N5S64xOBr0cI///RlX9ud?=
 =?us-ascii?q?3aAxMhNgy72efnCNFz1oMEXmKPB7eUMKfTsV+O++IuLPCAZIwLtzbnLfgq+fru?=
 =?us-ascii?q?gWY+mV4Te6mmw4EXZWumHvRpPUqZe2DggtQfHmcQuAoxUujqhEeFUT5JaHa+R7?=
 =?us-ascii?q?g86S0jCIK6EYfDQZiggLiA3Ce4AJJafG9HCk2XHHfsdoWEXeoMaS2ILs9glDwE?=
 =?us-ascii?q?SaauS4s72R6ysw/6zqJtLvDI9S0AqZLjyN916vXTlR4o9Dx0E96S02aXQ2F0g2?=
 =?us-ascii?q?MHXTk23K9krEx5y1eD17V4gvNCGdxS4fNJThk1NZrGw+NmDNDyXxrLfs2VR1a+?=
 =?us-ascii?q?XtWmHTYxQ8ozw98JfUlxAdaijhfF3yqsBL8YjLiLBJ0y8qLB0Hn9Pcd9y3Da1K?=
 =?us-ascii?q?Y/i1kqWNdANWqjhqRn7QjcG5bJk1mFl6atbakTxjXN9GeEzWqNpk1YShR/Uafe?=
 =?us-ascii?q?UHAbZ0vWq8n550zYQ7+vD7QnLhVOycqYJqRWbd3piE1MRO3/N9TGf2Kxh2CwCA?=
 =?us-ascii?q?6LxryWaormYWEd3CTHB0gCnAAe5nKGNQk4Bie8rGPSFj1uFVTzY0zy9elysm+0?=
 =?us-ascii?q?TkgxzwuSdU1uy6K1+gIJhfybU/4cw6gLuDk/pDluHFayxdTWC8GeqApne6lcZd?=
 =?us-ascii?q?A94FJD1W/Cswx9P5qgL71th1IEcgR3uV/u2AtzColajccqq3YqxhJoKa2EyFNB?=
 =?us-ascii?q?ay+Y3ZfoN7LKMGby4g6gZ7TW2l7E1taW4bkA6PIjplXnvQGpEFci8np939lU1X?=
 =?us-ascii?q?uc+ovFDA4IXZ3tVUY38gBwp6vGbSkl+4PUyXpsPLGosj/D3tIpA/clyhagfttF?=
 =?us-ascii?q?LKOIDgjyE9ceB8ivLuwqlEOkbhYFPOBU6a41MNmqd/qA2K63IulgmCiqgnhA4I?=
 =?us-ascii?q?B4ykiM7TZzSvbU35YZxPGVxhGIVzPig1aurM/2mZpIaioPHmWi0yfkAo1RZqps?=
 =?us-ascii?q?fYsQDWeuIsu3xshxhpL3Wn5Y8kKjCE0C2MOzZRWSaFn91xVK1UsLuXynhTe4zz?=
 =?us-ascii?q?tsnjAps6qTxjDBz/7jdRoHIGFLQmZigEzoIYi1idAaQUepYxIolBuj+Ub12axb?=
 =?us-ascii?q?qL5jIGnUREdCZzL2IH16UqusqrqCZNZC6IkpsSpLSuu8e02VSrnnrxsczSzjBW?=
 =?us-ascii?q?peyCkneD6wvpX2ggJ1iHiaLHZ1t3fZfcBwxRHC5N3TX/JR3zwGRDVmhjnTHFSz?=
 =?us-ascii?q?I96p/dCMnZfZru++T36hVoFUcSTzzYKAtTG35G1wDR2kgvCznMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpeV8mAdkWfw?=
 =?us-ascii?q?MtVb3rjybGEXSj4IwN7V4Q7l11NlLn+Sw4L5V3OdwtZuZtWgY2MW3D494N5OCK?=
 =?us-ascii?q?uO8LNEmi51qEKirQ3Nefh9gisdyfw25X8ame4JvxAhziecArAUBkRYOS3slxKV?=
 =?us-ascii?q?79GxtqlXZWCvcaSu20p6h9yuELaCogREUnbjZpgiBTNw7tl4MF/U03388IDkdM?=
 =?us-ascii?q?PQbdIOrBKUlRjAgvNRKJIwkPoKmCVmNXj8vX0j1+40kxhu0Yums4iALmVn5Li5?=
 =?us-ascii?q?DQJANj3pe8MT/SngjaNfnsaVxY+jBJtgFSsQXJv0U/2oCikduur9NwaBCzA8rn?=
 =?us-ascii?q?abGbzCHQ6Q8ktmrnTPE4y1OHGTPnUW0dJiRByFLkxFnA8URCk6noI+Fg2y2Mzh?=
 =?us-ascii?q?d0J56ioQ51HirBtM1/loNwL+UmrEoAeoazE0SIWQLRZM7wFC4VvVPtKa7u5pAy?=
 =?us-ascii?q?5Y+ZihphSXKmOHfwRIEX0JWkucCl/4JLau4t3A8/WCCuq6MvvDerGOqe1YV/eV?=
 =?us-ascii?q?ypOjyIpm/zCQNsqROnluFeE02k1GXXphAcTWhy0PSzALlyLKd8Obpg2z+ihpoc?=
 =?us-ascii?q?Ck6vjrRBjj5YiSC7tRLNVv/Qq5gbyYOu6UhSZ5LytY15wWyX/JzrgfwEAdiyV0?=
 =?us-ascii?q?ezaxFrQAsDbHTLjMla9PEx4bdyRzOdNI7qI7wwlNINPbhcnz1rJilf41DFFFVV?=
 =?us-ascii?q?P6l8GtZMwKJXy9NVzdCEaKMrSGOSPEw8XtbaygTr1Qif1etwestjaDD0/jIjOD?=
 =?us-ascii?q?miHpVx+xMOFMjyKbPB1EtIG+aBZtDmfjQ8z8ah2mK996ljk2wbwyhnPXOm8QKz?=
 =?us-ascii?q?l8c0VRrrKO6SNUmOlwG2tE7nB9N+mLhz6Z7/XEKpYRqfZkGDl0mPlA4Hsky7pZ?=
 =?us-ascii?q?9iVERP1ulSvWr95upUymk+aVxjpmVhpOtihEhIaRsUp+PqXZ84FKWWzY8xIV8W?=
 =?us-ascii?q?WQFxMKqsN5Ct3uvqBc0MTAmLjvJzdC7d3U+9ARB8zVKMKBLXogPgDlGD/SDAsZ?=
 =?us-ascii?q?UzGrMXvTiFBakPGX7neVtIQ1qoDwmJoSTb9WTFw0GekcCkRgHdwCJo94XzIkkb?=
 =?us-ascii?q?GBis4I6mGzrB3QRMVco5DGWeieAfTpKDaFk7ZEYwEEzq//LYQWZcXH3BlFblR5?=
 =?us-ascii?q?h43MF1CYdNZBuDB6bgQ0rUNO9zAqR2s/wRi9MluF73oaFPrylRkz3FhQe+MooR?=
 =?us-ascii?q?vl5VY6IhL0qTcsnVN5zdnshzGcdBb/Iri0WcddC3yn5AAKLprnTlMtPkWJlkt+?=
 =?us-ascii?q?OWKBHuoJgg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAB1ahNch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECJ4wVjBGCDRSXQYFzEgEBGAsIAYF?=
 =?us-ascii?q?LhXoiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAQEkEwYBA?=
 =?us-ascii?q?SwLAQUJAQEKDgcDCSUDDAUTAQwBBQEiEwWDHAGCAAEECppnPIofgWwzgnYBAQW?=
 =?us-ascii?q?BMAEDAgxChEBnCBKLEIEcF4F/gRGBcHQugx4BAgKBSoVviTqGJYE+j3MKCYEWg?=
 =?us-ascii?q?RKEZYYthBULGGB9TYRPgnaHXo4piwgGAgkHDyGBJYIOMxoIMDuCbAmCEgwXgyK?=
 =?us-ascii?q?FPIVAPzIBgQQBAYoKgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAB1ahNch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECJ4wVjBGCDRSXQYFzEgEBGAsIAYFLhXoiNAkNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQMBAQEkEwYBASwLAQUJAQEKDgc?=
 =?us-ascii?q?DCSUDDAUTAQwBBQEiEwWDHAGCAAEECppnPIofgWwzgnYBAQWBMAEDAgxChEBnC?=
 =?us-ascii?q?BKLEIEcF4F/gRGBcHQugx4BAgKBSoVviTqGJYE+j3MKCYEWgRKEZYYthBULGGB?=
 =?us-ascii?q?9TYRPgnaHXo4piwgGAgkHDyGBJYIOMxoIMDuCbAmCEgwXgyKFPIVAPzIBgQQBA?=
 =?us-ascii?q?YoKgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,352,1539673200"; 
   d="scan'208";a="55168227"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 00:35:27 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727640AbeLNIfZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 03:35:25 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:35913 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726998AbeLNIfZ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 03:35:25 -0500
Received: by mail-ed1-f65.google.com with SMTP id f23so4288565edb.3
        for <linux-kernel@vger.kernel.org>; Fri, 14 Dec 2018 00:35:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ffwll.ch; s=google;
        h=sender:date:from:to:cc:subject:message-id:mail-followup-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=70dVirz4fnBbVianUK2jDuCnZkgXC35g87hwr8o0saU=;
        b=HRJNZk6MutYi1mFHPwQp9kpRAsNeTIo3bQ+qM+OcbEfn/ewtayo4d9y4XDTQ+/11tm
         dEMYMGhkJKigqhR8PsHaf/h4nFjzFAhUpNAkeAAwbx6lmUgxpj08mWmsbH+hyM9u1DsT
         LQiPJg1Vgn89rD3wkAwBlTr7RS2zEJQbEEM/k=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=70dVirz4fnBbVianUK2jDuCnZkgXC35g87hwr8o0saU=;
        b=MBXHxrCIscaALMBs4GB9UjcRTwqgok0jFI9iV948AUc3+48//g+95qjb71mH/DiNNe
         X8mdngwdzVGYT34SjNcQ9A4Rx/x4aHzRTWTVLz1pwBHQd41QyCDrLSiCCWn1wKEOU5Ex
         GEzoZc+tslF03UOaN0T3Y02zWLECM3yCYfCHTbEu3G56q2FVWoj7eIo3fCFV9nLWKmgR
         hXEVkMr3lTxHWa7h9N4dkoLyplJ7BTFuA0tGg5a73w5X60UWaSUqdEysB2bxSVEOO5lL
         m7QKE2MupJEPSEBKsc8Q092iX2XBdb/tPw0BhGI0C1IIdDHA+nYWUESict/RlGxjthkU
         qZUw==
X-Gm-Message-State: AA+aEWbNQzqL0AmFvUMoLiIjT0HkXJwWD61Kg5gdyaGlDd+YQKzua7tC
        eillTVruHPojwIPdS3itBJBRkA==
X-Google-Smtp-Source: AFSGD/VLxxPKxlCj9M8MP5ypWnxHmE6jVHKKBBFhwkLbPcnlADHGhSQcfw2pCFSKlaVOrFJTGiutdw==
X-Received: by 2002:aa7:c0d0:: with SMTP id j16mr2164856edp.173.1544776522781;
        Fri, 14 Dec 2018 00:35:22 -0800 (PST)
Received: from phenom.ffwll.local ([2a02:168:569e:0:3106:d637:d723:e855])
        by smtp.gmail.com with ESMTPSA id t26sm1308279eda.22.2018.12.14.00.35.21
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Fri, 14 Dec 2018 00:35:21 -0800 (PST)
Date: Fri, 14 Dec 2018 09:35:19 +0100
From: Daniel Vetter <daniel@ffwll.ch>
To: Oleksandr Andrushchenko <andr2000@gmail.com>
Cc: Daniel Vetter <daniel.vetter@ffwll.ch>,
        xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org,
        dri-devel@lists.freedesktop.org, jgross@suse.com,
        boris.ostrovsky@oracle.com,
        Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Subject: Re: [PATCH] drm/xen-front: Make shmem backed display buffer coherent
Message-ID: <20181214083519.GI21184@phenom.ffwll.local>
Mail-Followup-To: Oleksandr Andrushchenko <andr2000@gmail.com>,
        xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org,
        dri-devel@lists.freedesktop.org, jgross@suse.com,
        boris.ostrovsky@oracle.com,
        Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
References: <20181127103252.20994-1-andr2000@gmail.com>
 <b8f34c60-5692-c40d-3635-071d214bfeed@gmail.com>
 <20181213154845.GF21184@phenom.ffwll.local>
 <57b468f5-cf7a-0dcd-fef8-fd399025fb45@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <57b468f5-cf7a-0dcd-fef8-fd399025fb45@gmail.com>
X-Operating-System: Linux phenom 4.18.0-2-amd64 
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 14, 2018 at 09:09:45AM +0200, Oleksandr Andrushchenko wrote:
> On 12/13/18 5:48 PM, Daniel Vetter wrote:
> > On Thu, Dec 13, 2018 at 12:17:54PM +0200, Oleksandr Andrushchenko wrote:
> > > Daniel, could you please comment?
> > Cross-revieweing someone else's stuff would scale better,
> fair enough
> >   I don't think
> > I'll get around to anything before next year.
> 
> I put you on CC explicitly because you had comments on other patch [1]
> 
> and this one tries to solve the issue raised (I tried to figure out
> 
> at [2] if this is the way to go, but it seems I have no alternative here).
> 
> While at it [3] (I hope) addresses your comments and the series just
> 
> needs your single ack/nack to get in: all the rest ack/r-b are already
> 
> there. Do you mind looking at it?

As mentioned, much better if you aim for more per review with others, not
just me. And all that dma coherency stuff isn't something a really
understand all that well (I just know we have lots of pain). For options
maybe work together with Gerd Hoffman or Noralf Tronnes, I think either
has some patches pending that also need some review.
-Daniel

> 
> > -Daniel
> 
> Thank you very much for your time,
> 
> Oleksandr
> 
> > > Thank you
> > > 
> > > On 11/27/18 12:32 PM, Oleksandr Andrushchenko wrote:
> > > > From: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
> > > > 
> > > > When GEM backing storage is allocated with drm_gem_get_pages
> > > > the backing pages may be cached, thus making it possible that
> > > > the backend sees only partial content of the buffer which may
> > > > lead to screen artifacts. Make sure that the frontend's
> > > > memory is coherent and the backend always sees correct display
> > > > buffer content.
> > > > 
> > > > Fixes: c575b7eeb89f ("drm/xen-front: Add support for Xen PV display frontend")
> > > > 
> > > > Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
> > > > ---
> > > >    drivers/gpu/drm/xen/xen_drm_front_gem.c | 62 +++++++++++++++++++------
> > > >    1 file changed, 48 insertions(+), 14 deletions(-)
> > > > 
> > > > diff --git a/drivers/gpu/drm/xen/xen_drm_front_gem.c b/drivers/gpu/drm/xen/xen_drm_front_gem.c
> > > > index 47ff019d3aef..c592735e49d2 100644
> > > > --- a/drivers/gpu/drm/xen/xen_drm_front_gem.c
> > > > +++ b/drivers/gpu/drm/xen/xen_drm_front_gem.c
> > > > @@ -33,8 +33,11 @@ struct xen_gem_object {
> > > >    	/* set for buffers allocated by the backend */
> > > >    	bool be_alloc;
> > > > -	/* this is for imported PRIME buffer */
> > > > -	struct sg_table *sgt_imported;
> > > > +	/*
> > > > +	 * this is for imported PRIME buffer or the one allocated via
> > > > +	 * drm_gem_get_pages.
> > > > +	 */
> > > > +	struct sg_table *sgt;
> > > >    };
> > > >    static inline struct xen_gem_object *
> > > > @@ -77,10 +80,21 @@ static struct xen_gem_object *gem_create_obj(struct drm_device *dev,
> > > >    	return xen_obj;
> > > >    }
> > > > +struct sg_table *xen_drm_front_gem_get_sg_table(struct drm_gem_object *gem_obj)
> > > > +{
> > > > +	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
> > > > +
> > > > +	if (!xen_obj->pages)
> > > > +		return ERR_PTR(-ENOMEM);
> > > > +
> > > > +	return drm_prime_pages_to_sg(xen_obj->pages, xen_obj->num_pages);
> > > > +}
> > > > +
> > > >    static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
> > > >    {
> > > >    	struct xen_drm_front_drm_info *drm_info = dev->dev_private;
> > > >    	struct xen_gem_object *xen_obj;
> > > > +	struct address_space *mapping;
> > > >    	int ret;
> > > >    	size = round_up(size, PAGE_SIZE);
> > > > @@ -113,10 +127,14 @@ static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
> > > >    		xen_obj->be_alloc = true;
> > > >    		return xen_obj;
> > > >    	}
> > > > +
> > > >    	/*
> > > >    	 * need to allocate backing pages now, so we can share those
> > > >    	 * with the backend
> > > >    	 */
> > > > +	mapping = xen_obj->base.filp->f_mapping;
> > > > +	mapping_set_gfp_mask(mapping, GFP_USER | __GFP_DMA32);
> > > > +
> > > >    	xen_obj->num_pages = DIV_ROUND_UP(size, PAGE_SIZE);
> > > >    	xen_obj->pages = drm_gem_get_pages(&xen_obj->base);
> > > >    	if (IS_ERR_OR_NULL(xen_obj->pages)) {
> > > > @@ -125,8 +143,27 @@ static struct xen_gem_object *gem_create(struct drm_device *dev, size_t size)
> > > >    		goto fail;
> > > >    	}
> > > > +	xen_obj->sgt = xen_drm_front_gem_get_sg_table(&xen_obj->base);
> > > > +	if (IS_ERR_OR_NULL(xen_obj->sgt)){
> > > > +		ret = PTR_ERR(xen_obj->sgt);
> > > > +		xen_obj->sgt = NULL;
> > > > +		goto fail_put_pages;
> > > > +	}
> > > > +
> > > > +	if (!dma_map_sg(dev->dev, xen_obj->sgt->sgl, xen_obj->sgt->nents,
> > > > +			DMA_BIDIRECTIONAL)) {
> > > > +		ret = -EFAULT;
> > > > +		goto fail_free_sgt;
> > > > +	}
> > > > +
> > > >    	return xen_obj;
> > > > +fail_free_sgt:
> > > > +	sg_free_table(xen_obj->sgt);
> > > > +	xen_obj->sgt = NULL;
> > > > +fail_put_pages:
> > > > +	drm_gem_put_pages(&xen_obj->base, xen_obj->pages, true, false);
> > > > +	xen_obj->pages = NULL;
> > > >    fail:
> > > >    	DRM_ERROR("Failed to allocate buffer with size %zu\n", size);
> > > >    	return ERR_PTR(ret);
> > > > @@ -149,7 +186,7 @@ void xen_drm_front_gem_free_object_unlocked(struct drm_gem_object *gem_obj)
> > > >    	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
> > > >    	if (xen_obj->base.import_attach) {
> > > > -		drm_prime_gem_destroy(&xen_obj->base, xen_obj->sgt_imported);
> > > > +		drm_prime_gem_destroy(&xen_obj->base, xen_obj->sgt);
> > > >    		gem_free_pages_array(xen_obj);
> > > >    	} else {
> > > >    		if (xen_obj->pages) {
> > > > @@ -158,6 +195,13 @@ void xen_drm_front_gem_free_object_unlocked(struct drm_gem_object *gem_obj)
> > > >    							xen_obj->pages);
> > > >    				gem_free_pages_array(xen_obj);
> > > >    			} else {
> > > > +				if (xen_obj->sgt) {
> > > > +					dma_unmap_sg(xen_obj->base.dev->dev,
> > > > +						     xen_obj->sgt->sgl,
> > > > +						     xen_obj->sgt->nents,
> > > > +						     DMA_BIDIRECTIONAL);
> > > > +					sg_free_table(xen_obj->sgt);
> > > > +				}
> > > >    				drm_gem_put_pages(&xen_obj->base,
> > > >    						  xen_obj->pages, true, false);
> > > >    			}
> > > > @@ -174,16 +218,6 @@ struct page **xen_drm_front_gem_get_pages(struct drm_gem_object *gem_obj)
> > > >    	return xen_obj->pages;
> > > >    }
> > > > -struct sg_table *xen_drm_front_gem_get_sg_table(struct drm_gem_object *gem_obj)
> > > > -{
> > > > -	struct xen_gem_object *xen_obj = to_xen_gem_obj(gem_obj);
> > > > -
> > > > -	if (!xen_obj->pages)
> > > > -		return ERR_PTR(-ENOMEM);
> > > > -
> > > > -	return drm_prime_pages_to_sg(xen_obj->pages, xen_obj->num_pages);
> > > > -}
> > > > -
> > > >    struct drm_gem_object *
> > > >    xen_drm_front_gem_import_sg_table(struct drm_device *dev,
> > > >    				  struct dma_buf_attachment *attach,
> > > > @@ -203,7 +237,7 @@ xen_drm_front_gem_import_sg_table(struct drm_device *dev,
> > > >    	if (ret < 0)
> > > >    		return ERR_PTR(ret);
> > > > -	xen_obj->sgt_imported = sgt;
> > > > +	xen_obj->sgt = sgt;
> > > >    	ret = drm_prime_sg_to_page_addr_arrays(sgt, xen_obj->pages,
> > > >    					       NULL, xen_obj->num_pages);
> > > _______________________________________________
> > > dri-devel mailing list
> > > dri-devel@lists.freedesktop.org
> > > https://lists.freedesktop.org/mailman/listinfo/dri-devel
> 
> [1] https://patchwork.kernel.org/patch/10693787/
> 
> [2] https://lists.xen.org/archives/html/xen-devel/2018-11/msg02882.html
> 
> [3] https://patchwork.kernel.org/patch/10705853/
> 
> 

-- 
Daniel Vetter
Software Engineer, Intel Corporation
http://blog.ffwll.ch
