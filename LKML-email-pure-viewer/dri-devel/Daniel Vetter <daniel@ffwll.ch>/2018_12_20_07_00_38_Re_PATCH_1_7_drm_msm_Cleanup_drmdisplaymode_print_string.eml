Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 16:22:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EAA8C580261;
	Wed, 19 Dec 2018 23:03:49 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 23:03:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4vcJeRUxH72MDjmDKRzAIIJhH9zV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCOtadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohS8CwasH/vvxz1Ti3/qwaE3yfgtHR3c0QA+Gd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27wrPHzTPCb/xI3Tf29YfHfQ49ofGQQ71wa9faxE4yGAzfiFWQ?=
 =?us-ascii?q?qJLqPzeO2+QDvWia4e5gVea1h2E7qwF8uz6izdoihInOg4Ia0FHE9SNhzYY7P9?=
 =?us-ascii?q?23VlB0bsO6H5tLtCGaK4x2Qts4T2FvoiY6xaUKuZC1fCkEzJQnwwTTZOCHc4WO?=
 =?us-ascii?q?/xntV/6RLC9miH55fL+znQu+/Ea+xuHmS8W500pGojBEn9TOrnwByQbc5tSZRv?=
 =?us-ascii?q?Z440us2DWC2gXT5+xFJU07i6/WJ4Ikz7M+i5YfrUXOEyrrl0j3gqKbdEAp9fWq?=
 =?us-ascii?q?5uj5bLjro4GTOox0hwz+NKklh9axDv4iMgcUWmiW4eS826Pn/U3+WLhKkPI2nb?=
 =?us-ascii?q?fDsJzAJsQUuLS5AwlL3YYn8Rq/CC2m0NsAkXkGKlJKZg6HgpD3N13SJP30F+qz?=
 =?us-ascii?q?jlqynDtx2vzLPaHtDo/MI3XBiLvheKxy609YyAo919Bf4JdUB6kFIPLyXE/xqd?=
 =?us-ascii?q?PZAgY6MwOq2ebnDsty1ocHVWKIDK6ZNr3dsUWT6+IxLOmDepUVtCz+K/c7/f7u?=
 =?us-ascii?q?i2E2mVsHcamux5sXZ2i0Hu56LEWBfXrsntABHH8Ovgo/T+zllkeOUDFOZ3upW6?=
 =?us-ascii?q?I85zc7CJ+pDIvZR4CthqCB0zm/HpFMem9GDVWMG2/yd4qYQ/cMdD6SIsh5nzwE?=
 =?us-ascii?q?T7ehSpMh2guptAPgy7pnM/Db+isXtZ/40Nh15uvTlQw99DBuDsSd1X2NQH9wnm?=
 =?us-ascii?q?8SWzA226V/q1Rnylifyah4n+BYFdtL6vxTSQc6NZncz+9gB9DoQA3BfMyESFKn?=
 =?us-ascii?q?QtWgHDEwQcg9w94IY0ZhBdqiigrP0DatA78Qj7aLHoA78rrA33jtIMZw03XG27?=
 =?us-ascii?q?Mnj1U8RstPNHephqhw9wXIA47JkkOZl7uldKgG3S7N8nuDwnSKvE1CTAFwVqDF?=
 =?us-ascii?q?V2gFZkTKtdT5+l/CT7i2BLs6KARB19CNJrFKatLzi1VGX+nsONLZb2K1mGewAB?=
 =?us-ascii?q?KIy6iIbIrrfWUdwSrcBFIFkwAV4XaJKww+Cj29rGLZCTxkDUjvbF/08elitHO7?=
 =?us-ascii?q?SVc5wByQYE1/ybW54B4ViuaaS/MIwL0EvjwsqzF1HFa7wtLXBMCMpwtnfKVAf9?=
 =?us-ascii?q?w95E1L2n7etwx4JpagNbxthkYCcwRruEPjzwl3CoRFkcgtsHMqzApzJbiE0F9b?=
 =?us-ascii?q?cDOYx5TwOrzRKmn95x2vb6/W2lfD0NeZ4KsP6fI4q0n9swGtDEYt73Jn09xN2X?=
 =?us-ascii?q?uG+prKFBYSUY72Uksv7Rd6o6/VYyYj6ILUz3FjKrS0vSLY1NIvB+slzQigcsxb?=
 =?us-ascii?q?MKOFEg/yDsIbC9KvKOwsh1imcBYEMPpO+64zOsOsb+GG17KzPOZ8gDKminxK4Y?=
 =?us-ascii?q?Bg0k6W6yVwUO/J35YfzPGe0QuKTDP8jFanssDqloFIfzASHmyjySf6AI5dfLF9?=
 =?us-ascii?q?fYEOCW22Oc242s1+h4LxW35f7FOjHVIG19OzdhqIclP92hdc1UIJrny9mCu01i?=
 =?us-ascii?q?B7nCstrqWCwiPO2ePidBwcN25PRWlii0rsIIeug9AbWkiocxYmlB+/6UnmwKhb?=
 =?us-ascii?q?obx1L3PPTkdQYyj2M2ZiX7Owt7qDecJO6IkksT5KUOS6el2aTr/9ox0H0yLsBW?=
 =?us-ascii?q?dexTY7dy20tZX9hRB1lGWdLHNrpnrDZc5w3Qvf5MDbRfNJ3DoJXjN4iTrUBli7?=
 =?us-ascii?q?JdWp5s+bl5TAsuC/UWKuSJtTfDLvzYOBsiu7+GJrDQe+n/C1ht3oDww63TXn2N?=
 =?us-ascii?q?ltUCXCtAz8bZXz16SmLeJneVFlBV/m5Mp9AI1+kIowhJcL1Hgeh5WV+2cHkGjp?=
 =?us-ascii?q?PdVa36L+cGQCRToRz9HJ5wjl3VVpLmiVyILhSnWd3sxhasG5YmwM2yIx9cBKCL?=
 =?us-ascii?q?qO47xCkit4uV64rQPXYfhgkTYR0/ou6HgGg+4XvAoh1DmSArcXHUNAJyzjiwyI?=
 =?us-ascii?q?78yirKVQfGuvdLmw1Elkkty7ArCNvBpcWGrndZc4BiB/8N9/MF3X3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCbK2Vq+aK1?=
 =?us-ascii?q?GB9ZOSfzZ8MO4THtlqdek92S34CuGJVhBzoKUIHpTfKuDDIdq/DnOxySHz07r3?=
 =?us-ascii?q?eRAaDfEhOH6Ed6s3LPFIimOGqNK3keydViWQORJEhCgA0PWDU6n5g5Fh2lxcD7?=
 =?us-ascii?q?cUd54CwR6UD8qhdW1u1oMBz/WH/FpAi0cjc0VISfLB1O4wFA/UjVNNKR7vlpEy?=
 =?us-ascii?q?FE5JGhrxGNKm+GZwROF24JQVeJB1TiPrmo+NnB/PKUBuu4L/vSf7qOrfZSWOuP?=
 =?us-ascii?q?xZKqyoFm5SqDNt2TPnl+CP02wkpCXXdkG8TAhjUAUSoXmzjWb86cohe89TZ6rs?=
 =?us-ascii?q?S+8PTtRQLu6pGDC7pUMdVz5R+2hb2POPKXhCZ8MTxYzI8DxWfUyLgD214fkyFu?=
 =?us-ascii?q?eCesEbQDti7NTbjcmqxNDx4cZCN8KtFI778n3gRWPc7bi9X11qN3j/IvCldFU0?=
 =?us-ascii?q?Dhld+tZcAQP269M1bHDl6RNLuaPT3L3933YaSkRLJKkeVbrAewtiibEkP5OjSD?=
 =?us-ascii?q?liLkVxSuMeFKkSGaMwZSuIC7chZxF2fjSMjqZQG8MN9ylTc226E7hmvWNW4ANj?=
 =?us-ascii?q?hxa19NrryV7S9CnvpzAXBO7np7IumCgCuZ6+jYKpALsfpkGCh0luRa4GgkxLtR?=
 =?us-ascii?q?9i1LWPt1mC7KpN50v16mivWPyiZgUBdWqjdEnoSLvUBjOaXf7pZBWHbE8wgL7W?=
 =?us-ascii?q?WfEBkKo9plCtvyu6Ff0NTPlaTzKCtc/NLQ58cTG8/UKMfUeEYmZCHpES/ZCg0I?=
 =?us-ascii?q?BRusKHvWzxhGkPiD+3uTo5wnuJ3rhYAHYrBeXV0xUPgdDxI2MsYFJcJbVzUlnL?=
 =?us-ascii?q?rTssMU+Xek5E3dTcNbs5TvWPyNBfGpIzbP3uoMXAcB3b6tdddbDYb8wUE3LwAi?=
 =?us-ascii?q?xIk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAgPhtch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYECJ4wWi3yCDRSJAYlLhH2BdhABARg?=
 =?us-ascii?q?LCAGBS4ViIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwEBASQTB?=
 =?us-ascii?q?gEBLAsBBQkBAQoYCSUDDAUNBgEMAQUBIhMFgx0BgWkDFQEECptaPIopgWwzgnY?=
 =?us-ascii?q?BAQWFBw2BLmcIEosRgRwXgX+BEYFwgSKCV0cBBIUXgiaPXhKRHCkKCYEWgROEa?=
 =?us-ascii?q?IYycIMmDBhifU2EUoJ6h2QsjhuBEooLBgIJBw8hgSWCDjMaCDA7gmwJghIMF4M?=
 =?us-ascii?q?ihTyFQD8ygQUBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAgPhtch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYECJ4wWi3yCDRSJAYlLhH2BdhABARgLCAGBS4ViIjQJD?=
 =?us-ascii?q?QEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwEBASQTBgEBLAsBBQkBAQo?=
 =?us-ascii?q?YCSUDDAUNBgEMAQUBIhMFgx0BgWkDFQEECptaPIopgWwzgnYBAQWFBw2BLmcIE?=
 =?us-ascii?q?osRgRwXgX+BEYFwgSKCV0cBBIUXgiaPXhKRHCkKCYEWgROEaIYycIMmDBhifU2?=
 =?us-ascii?q?EUoJ6h2QsjhuBEooLBgIJBw8hgSWCDjMaCDA7gmwJghIMF4MihTyFQD8ygQUBA?=
 =?us-ascii?q?Y1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,376,1539673200"; 
   d="scan'208";a="57651634"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 23:03:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730184AbeLTHAp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 02:00:45 -0500
Received: from mail-ed1-f65.google.com ([209.85.208.65]:46433 "EHLO
        mail-ed1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727976AbeLTHAp (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 02:00:45 -0500
Received: by mail-ed1-f65.google.com with SMTP id o10so769780edt.13
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 23:00:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ffwll.ch; s=google;
        h=sender:date:from:to:cc:subject:message-id:mail-followup-to
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=mIhST+iVbAL5KTp771n6Q0HNklWlQVNUNPnDhfg/ZYE=;
        b=VYbRk5ky0FHCq5EYpxQlwRkQDK0eRl0OTBD25KSGiYk2clIkxcSYp0Q/kR/mQouI7A
         8sw1Xi/ESQ++hDG5Ht6S4l8BpVDtx5kf/t1GRFO5FlRVwmtZ5/+uGOOhm5eIJJhcaz8s
         Qzkn3V2E+024yXVoBl/zlTnMWaf7MhXC0WFCU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=mIhST+iVbAL5KTp771n6Q0HNklWlQVNUNPnDhfg/ZYE=;
        b=eIBu9A08fpLQ8zilK8P3txAWJ7PkVWJdrocB8gWtmEvyy/K6Uc+Blw+4nq06EV1Of/
         FTnYr9Aa9a5TjrgvZVEqkNiPjAkBOAAC3p7zH5VtivnzPyU6AH3nnX3SeKKMSGyeAEeM
         deCR860V9Q69HH7vMRX47xu64SfNBopMnjGC3hhowKHtk6tuSEKNcWwfBk+lvPm2IYjP
         9uJmA2Fv/Cjo5VyxF75XTgzloQEPZRbeWUYx3P1cflqyinPJmsjguvNGZYhLvlhw4wSJ
         WOStMJqOwyrrHSWGmEMS8fQE/BN9vw79JgtyYHsADXrVqcqHv0qRecNIBlKlhGSxy2+5
         /aPA==
X-Gm-Message-State: AA+aEWa2vBDdjlX0W7+lZC9kscPigj1wNw2U65Xhc3fViV3+2AZ5A8I8
        DQOsQhVtFdIBB6KzUnq1AF+/u0JJri8=
X-Google-Smtp-Source: AFSGD/Wuaq7h1p/U2TjXFfMWrjuzKJ2C+bqUa8mJsRfj+vVkXO0pc1DDSnCpUxbQjfOzJvnuJWjZ6Q==
X-Received: by 2002:a50:b7d6:: with SMTP id i22mr22026051ede.27.1545289242300;
        Wed, 19 Dec 2018 23:00:42 -0800 (PST)
Received: from phenom.ffwll.local ([2a02:168:569e:0:3106:d637:d723:e855])
        by smtp.gmail.com with ESMTPSA id g40sm5875391edg.39.2018.12.19.23.00.40
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 19 Dec 2018 23:00:41 -0800 (PST)
Date: Thu, 20 Dec 2018 08:00:38 +0100
From: Daniel Vetter <daniel@ffwll.ch>
To: Shayenne Moura <shayenneluzmoura@gmail.com>
Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org
Subject: Re: [PATCH 1/7] drm: msm: Cleanup drm_display_mode print string
Message-ID: <20181220070038.GA21184@phenom.ffwll.local>
Mail-Followup-To: Shayenne Moura <shayenneluzmoura@gmail.com>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org
References: <cover.1545254191.git.shayenneluzmoura@gmail.com>
 <24aeab722bc1d37fce75f6f8bf4b6dd4c6fee8b1.1545254191.git.shayenneluzmoura@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <24aeab722bc1d37fce75f6f8bf4b6dd4c6fee8b1.1545254191.git.shayenneluzmoura@gmail.com>
X-Operating-System: Linux phenom 4.18.0-2-amd64 
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 19, 2018 at 07:21:41PM -0200, Shayenne Moura wrote:
> This patch adjust the print string of drm_display_mode object
> to remove drm_mode_object dependency in msm files.
> 
> Signed-off-by: Shayenne Moura <shayenneluzmoura@gmail.com>

Please have a per-patch changelog of what changed compared to earlier
versions, e.g. here:

v2: Use DRM_MODE_FMT/ARG macros (Daniel).

Or something like that. Patch series threading looks correct now.
-Daniel
> ---
>  drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c         | 10 ++--------
>  drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c  |  9 +--------
>  drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c  |  9 +--------
>  drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c |  9 +--------
>  drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c  |  9 +--------
>  drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c         |  9 +--------
>  drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c      |  9 +--------
>  drivers/gpu/drm/msm/dsi/dsi_manager.c             |  9 +--------
>  drivers/gpu/drm/msm/edp/edp_bridge.c              |  9 +--------
>  9 files changed, 10 insertions(+), 72 deletions(-)
> 
> diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c
> index 457c29dba4a1..7b028f778960 100644
> --- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c
> +++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_crtc.c
> @@ -244,14 +244,8 @@ static void mdp4_crtc_mode_set_nofb(struct drm_crtc *crtc)
>  
>  	mode = &crtc->state->adjusted_mode;
>  
> -	DBG("%s: set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mdp4_crtc->name, mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("%s: set mode: " DRM_MODE_FMT,
> +			mdp4_crtc->name, DRM_MODE_ARG(mode));
>  
>  	mdp4_write(mdp4_kms, REG_MDP4_DMA_SRC_SIZE(dma),
>  			MDP4_DMA_SRC_SIZE_WIDTH(mode->hdisplay) |
> diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c
> index 6a1ebdace391..f2009e317820 100644
> --- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c
> +++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dsi_encoder.c
> @@ -58,14 +58,7 @@ static void mdp4_dsi_encoder_mode_set(struct drm_encoder *encoder,
>  
>  	mode = adjusted_mode;
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG()):
>  
>  	ctrl_pol = 0;
>  	if (mode->flags & DRM_MODE_FLAG_NHSYNC)
> diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c
> index ba8e587f734b..f6bc86a35d8d 100644
> --- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c
> +++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_dtv_encoder.c
> @@ -104,14 +104,7 @@ static void mdp4_dtv_encoder_mode_set(struct drm_encoder *encoder,
>  
>  	mode = adjusted_mode;
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
>  
>  	mdp4_dtv_encoder->pixclock = mode->clock * 1000;
>  
> diff --git a/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c b/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c
> index 2bfb39082f54..d47b8f4af991 100644
> --- a/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c
> +++ b/drivers/gpu/drm/msm/disp/mdp4/mdp4_lcdc_encoder.c
> @@ -273,14 +273,7 @@ static void mdp4_lcdc_encoder_mode_set(struct drm_encoder *encoder,
>  
>  	mode = adjusted_mode;
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
>  
>  	mdp4_lcdc_encoder->pixclock = mode->clock * 1000;
>  
> diff --git a/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c b/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c
> index d6f79dc755b4..33972c1816ed 100644
> --- a/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c
> +++ b/drivers/gpu/drm/msm/disp/mdp5/mdp5_cmd_encoder.c
> @@ -134,14 +134,7 @@ void mdp5_cmd_encoder_mode_set(struct drm_encoder *encoder,
>  {
>  	mode = adjusted_mode;
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
>  	pingpong_tearcheck_setup(encoder, mode);
>  	mdp5_crtc_set_pipeline(encoder->crtc);
>  }
> diff --git a/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c b/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c
> index b1da9ce54379..66f5402484d4 100644
> --- a/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c
> +++ b/drivers/gpu/drm/msm/disp/mdp5/mdp5_crtc.c
> @@ -384,14 +384,7 @@ static void mdp5_crtc_mode_set_nofb(struct drm_crtc *crtc)
>  
>  	mode = &crtc->state->adjusted_mode;
>  
> -	DBG("%s: set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			crtc->name, mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("%s: set mode: " DMR_MODE_FMT, crtc->name, DRM_MODE_ARG(mode));
>  
>  	mixer_width = mode->hdisplay;
>  	if (r_mixer)
> diff --git a/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c b/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c
> index fcd44d1d1068..d2a56e55e53d 100644
> --- a/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c
> +++ b/drivers/gpu/drm/msm/disp/mdp5/mdp5_encoder.c
> @@ -118,14 +118,7 @@ static void mdp5_vid_encoder_mode_set(struct drm_encoder *encoder,
>  
>  	mode = adjusted_mode;
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
>  
>  	ctrl_pol = 0;
>  
> diff --git a/drivers/gpu/drm/msm/dsi/dsi_manager.c b/drivers/gpu/drm/msm/dsi/dsi_manager.c
> index 80aa6344185e..7c8352a8ea97 100644
> --- a/drivers/gpu/drm/msm/dsi/dsi_manager.c
> +++ b/drivers/gpu/drm/msm/dsi/dsi_manager.c
> @@ -536,14 +536,7 @@ static void dsi_mgr_bridge_mode_set(struct drm_bridge *bridge,
>  	struct mipi_dsi_host *host = msm_dsi->host;
>  	bool is_dual_dsi = IS_DUAL_DSI();
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
>  
>  	if (is_dual_dsi && !IS_MASTER_DSI_LINK(id))
>  		return;
> diff --git a/drivers/gpu/drm/msm/edp/edp_bridge.c b/drivers/gpu/drm/msm/edp/edp_bridge.c
> index 931a5c97cccf..153f350ce017 100644
> --- a/drivers/gpu/drm/msm/edp/edp_bridge.c
> +++ b/drivers/gpu/drm/msm/edp/edp_bridge.c
> @@ -60,14 +60,7 @@ static void edp_bridge_mode_set(struct drm_bridge *bridge,
>  	struct edp_bridge *edp_bridge = to_edp_bridge(bridge);
>  	struct msm_edp *edp = edp_bridge->edp;
>  
> -	DBG("set mode: %d:\"%s\" %d %d %d %d %d %d %d %d %d %d 0x%x 0x%x",
> -			mode->base.id, mode->name,
> -			mode->vrefresh, mode->clock,
> -			mode->hdisplay, mode->hsync_start,
> -			mode->hsync_end, mode->htotal,
> -			mode->vdisplay, mode->vsync_start,
> -			mode->vsync_end, mode->vtotal,
> -			mode->type, mode->flags);
> +	DBG("set mode: " DRM_MODE_FMT, DRM_MODE_ARG(mode));
>  
>  	list_for_each_entry(connector, &dev->mode_config.connector_list, head) {
>  		if ((connector->encoder != NULL) &&
> -- 
> 2.17.1
> 
> _______________________________________________
> dri-devel mailing list
> dri-devel@lists.freedesktop.org
> https://lists.freedesktop.org/mailman/listinfo/dri-devel

-- 
Daniel Vetter
Software Engineer, Intel Corporation
http://blog.ffwll.ch
