Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:38:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7EE6758050C;
	Thu, 20 Dec 2018 08:40:53 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 08:40:53 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AiiBkgRMsERiHdnZ0hdol6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn6pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPcPM/hEoIfyvFsOtRmzCBKwBOP20DJEmmP60bE43uknDArI3BYgH9ULsH?=
 =?us-ascii?q?nMsNj1MLkdUO+ox6fG0zrDcu9Z2Tfj54jSbxsspuuDXbZufsve1EYgCR7FgUmQ?=
 =?us-ascii?q?qYP7JTOYzesNs22B4OphUeKjkXIoqwZ0ojW2wMonl4fHhoUQyl/e9CV5xp44Jd?=
 =?us-ascii?q?OiSEFlf9GrDYVftzqZN4tqRcMiW3tkuCEgyr0JoZK0YC8KyJAjxxHFcPOHdJKI?=
 =?us-ascii?q?7Qj5WOmNJjd4gWppeLyxhxe89UigzvfwWdW00FtMsyFLkcHMu2gT2xDP7sWLUO?=
 =?us-ascii?q?Zx80m/1TqVygze6f1ILVo1mKfZM5It3KI8m54JvUnAHiL6glj6gLGVe0k+++Wl?=
 =?us-ascii?q?6OLqaaj8qJCGLY97kAT+P7wumsOhBeQ4NRADX3aU+euizr3v5075T6tQjv0wjK?=
 =?us-ascii?q?bZtIrWJcMBpq62GwNV04Aj5AijDzq+ztgUgX0KIEhYdB+JkYTlIUzCLfPkAful?=
 =?us-ascii?q?glmhki9nx/XcMb3gBpXNIGLDkLDkfbtl705cyQwzzc1Q5p5NCbEOPujzWknvu9?=
 =?us-ascii?q?zcFxM5NAK1w+D5B9VnzY4eR22PDbGDMK/Isl+H+PgvI++Sa48Rojr9LOIl5/H2?=
 =?us-ascii?q?gX8jhVAdZbWp3YcQaH2gGvRmIkaZbmT2jtYODGcHpQ4+TO3siF2fXj9ffXeyX6?=
 =?us-ascii?q?Qg5j4lDIKqF5vMRoeogLaZxie0AoVWZnxaClCLCXrod5+LW/YQaC2IJc9tiDwE?=
 =?us-ascii?q?VaW7RI8n2hGjrwv6y7thLurJ9SwUr5Pj1N5p5+LNkRE+7yB7D8OY02uVVWF7gn?=
 =?us-ascii?q?sIRyMq3KB4uUFy0EyD0ah/g/xbD9BT/elGUgUhOJ7Yzux6Dc3yWw3bcteITlam?=
 =?us-ascii?q?XsupATUrQt0txN8OZl53G8++gRDbwyqqH7gVmqSIBJMu9KLQxXzxJ8dnxHbA26?=
 =?us-ascii?q?kslF0mQspJNW27ia9z7QnTB4jVk0qHk6amb7gT3CnI9G2b12qBoFlYUBJsUaXC?=
 =?us-ascii?q?RX0Qe1HZrcrn6U/YT7+hE7InMhBfxs6ELadKbt7pjVBCRPr4PNTeYmSxm3q/BB?=
 =?us-ascii?q?qSx7OMapbqdHsZ3CnHFEcElAUT926cNQciHiehv37eDDt2GF3yeUzs7/dxpGm7?=
 =?us-ascii?q?TkAuyQGKdFNu17yu9x4RhPycTe4T370etCcgrTV0AEiy39bMB9WcoApheb1WYc?=
 =?us-ascii?q?kh71dfyWLZqwt9M4S8L6Bjg14edBh3v0Pu1hltFoVMi88qrGkuzApzL6KY30hM?=
 =?us-ascii?q?dzeZ3ZD2J73WJXP+/BGpa67KxF7e1Mya9bsI6PQ9s1/jph2mFlI+83V71NlYy2?=
 =?us-ascii?q?GT5pHUAwsdT53wUlw7+ANnp77HeCY94YDU1XpyMaSvtj/C2tQpBPYqyxq6ftdf?=
 =?us-ascii?q?Nr+EGxH2E8EAG8euL+kqkUCzbh0YJOBS6LI0P8S+evqGxa6nJvpvkCinjGRH+o?=
 =?us-ascii?q?991E2M+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jI9e2xtpinZHtQWNX9Fm5C1MAxsCpYxuSY0Xh0gJK0UQYvGKomTG/zz?=
 =?us-ascii?q?xyiDwpqquf3CrTw+XtbhYHO2hLRHV8glfoO4S7k9caXE2wZQgziBSl/Vr6x7Rc?=
 =?us-ascii?q?pKlnL2jTQF1EfijsI2F5T6uwsKGPY8pO6JMurCVWX/6wYVGcSr7hvRQa1znvEH?=
 =?us-ascii?q?dZxDA+bzuqoIn2nwRmiGKBK3Z+tHjZdttqxRfc59zcQuRd3iEcSyl7ijnXB168?=
 =?us-ascii?q?MMev/diPk5fDs+a+V3+uV5FJcCnry5+AuzW/5WFwHRK/mPWzkMX9EQcmyS/7y8?=
 =?us-ascii?q?VqVSLQoRf8eIbr0L62MeBmfkluH1L878t6Godjkoo/np0Q2H4ahomL8noDi2v8?=
 =?us-ascii?q?LdJb2afmZnoXWTEL28LV4BTi2EB7LXKG3YP5Wm+dwst8fda6ZGwW1zk578BLDq?=
 =?us-ascii?q?eU8bNFkTF0olq+sQLef/x9ki0Bxvsp7X4Qm/sJtxY1ziWBHrASGlFVPSntlxSL?=
 =?us-ascii?q?9d+ytqtWa3i0cbisykV+h8uuA6+YogFTQ3v5fpYiHSlt7sRwKl7M0Xvz6p36d9?=
 =?us-ascii?q?nUd94cqhqUkxLYhehPNJ0xjuYKhTZgOW/loX0lzOs7gQZv3J6guoiHNn5t/Lm4?=
 =?us-ascii?q?AhNDMj31ZsUT+izijKpEn8aW2ZyvEYtlGjkRQJToSveoGioItfv7LwaODCE8qn?=
 =?us-ascii?q?CDFLXEBwCf70Nmr2/VH5CvKnGaP30ZzdRkRBmAK01TmgEUXDMmnpEnEgCm3tDu?=
 =?us-ascii?q?cEB85joJ/F73tgNMyv50Nxn4Smrfph2najIqR5iENhZW8htO50TIMcyd8+JzGT?=
 =?us-ascii?q?tX/oa6oQyJK2ybYRlIDG4TVkyFAVDjIqeh5d3a/+eEAeq+KuPEYa+SpuxGS/eI?=
 =?us-ascii?q?2ZWv35Nm/jaLK8WPJ2RiAOc92kZZRnB5HMLZmzoURiwTliLNadObpRim9i12qM?=
 =?us-ascii?q?C/7OrkWAb16YSTDLtSNM1l+wqqjqebK+6QmCF5JC5Y1pwSxH/Iy7sf3F8IhyFt?=
 =?us-ascii?q?bTmtFrsAujDXTKLNga9aFBobayJ1NMtV4KMwxAhNOcjHitzr0r50lOI6C1BAVV?=
 =?us-ascii?q?b5gMGmedQKI32hNFPAHEuELqmGKibRw87pYaKwU7lQjORPuh20uDabFVLjPzuZ?=
 =?us-ascii?q?mznoURCvLf9DjCWBMBNCv4G9dw5nCXL/Q9L+dh27LNh3gCUqwb01g3PGL3ITPS?=
 =?us-ascii?q?JgfENNsLKQ6zhVgvF+G2xH83pkIvOImyef7+nENJkWteFnDThzl+Jf+H460ada?=
 =?us-ascii?q?7DlYRPxpnyvftt5vrEugkumKyzpnVgJBqzdLhI2Ru0ViNr7U9p1BWXbC4RIM4n?=
 =?us-ascii?q?+cCxUMp9t5FNLvv7pcxcTIlKL2e39+9If49M0dCsycFs+bLHc7eU7lETjVAQ8t?=
 =?us-ascii?q?QzC0MWWZjEwL1LmU93aVqZwzsd7vkYgKQ6JAV1UuPvofBgJuG9lRDo1wW2YNlb?=
 =?us-ascii?q?OLxOIF+HG+oQOZEMxes4DLW++ZAfj1ADmchLhAIRAPxOWrfswoKoTn1hk6ORFB?=
 =?us-ascii?q?l4PQFh+VBIgVrw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAAYxRtch0O0hNFbChoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgmmBAieDPj+De4Qei3uCDRSKAYhLhH0UgWIqDQY?=
 =?us-ascii?q?BgUuCdYJuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwEBAQkXB?=
 =?us-ascii?q?BkBGxILAQMCCQEBBQMCCw0CAiYCAgMfAQQBDAEFARwGARIFgx0BgWgBAxUFCot?=
 =?us-ascii?q?zkAg8ixl8FgUBF4J3BYExAQsBgncKGScNXoE3AgYSeYs0F4FAP4MlfoMeAQIBA?=
 =?us-ascii?q?ReBHAkKGIMIglcCiScgE4FohBoSbZBiCYIphGiGMoQiGIFfTYRSh2WCeiyJIYE?=
 =?us-ascii?q?Gg3WLNjCBJYFcGw8IMxojUA0CIoI7CYISDBeDIiiFFIVdITMBgQQBAYsigj4BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0ADAAAYxRtch0O0hNFbChoBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgmmBAieDPj+De4Qei3uCDRSKAYhLhH0UgWIqDQYBgUuCdYJuIjQJD?=
 =?us-ascii?q?QEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwEBAQkXBBkBGxILAQMCCQE?=
 =?us-ascii?q?BBQMCCw0CAiYCAgMfAQQBDAEFARwGARIFgx0BgWgBAxUFCotzkAg8ixl8FgUBF?=
 =?us-ascii?q?4J3BYExAQsBgncKGScNXoE3AgYSeYs0F4FAP4MlfoMeAQIBAReBHAkKGIMIglc?=
 =?us-ascii?q?CiScgE4FohBoSbZBiCYIphGiGMoQiGIFfTYRSh2WCeiyJIYEGg3WLNjCBJYFcG?=
 =?us-ascii?q?w8IMxojUA0CIoI7CYISDBeDIiiFFIVdITMBgQQBAYsigj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,377,1539673200"; 
   d="scan'208";a="45831033"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 08:40:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731133AbeLTQks (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 11:40:48 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:54532 "EHLO
        mail-wm1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729937AbeLTQks (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 11:40:48 -0500
Received: by mail-wm1-f68.google.com with SMTP id a62so2716125wmh.4
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 08:40:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=HjEOoPY3Y9phlyptMc8r8w43+coYeRzwkS3rfQNdtWE=;
        b=s4n1Ydpt11iIEFx/C6EzrPLpYfEmiFQNsVd7hIXgxKA8N3g5PYth7xGC/L6CX3p+Gj
         fLU+ITYTlqn0n+rb+mUOGdN3oZyox+l4AbTL6t2ZfPDZbzr8CgMiaC+Vm1uPlnsCrdCj
         rz1Fr+ze+MyO295bsQ9kLBBHA38wtnlBnrddYOV8iPZFEXRagvM00jX9nRJM8riEBu/5
         8meZGsdA/bsQM0DmsK6qJB8MBagZnfXCyMOimjd0VMTY/k8y+XSz25yduqb33LIDyN+4
         s2YhBXe7EeRPczep+bSlvzE9o1FtkI0gRS2FBaNMK+w0maGKQn2fy6Z8Tr0erYnRMcHr
         HatA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=HjEOoPY3Y9phlyptMc8r8w43+coYeRzwkS3rfQNdtWE=;
        b=MxzP4GoDC3Jm9DGMcy58EFK4Pzl2ccyeoD1aFmfcPjrP+OR7+eaUV6fo8xsM/ezk46
         4xc/Yj3BYdvyW6/rHSkdRJ8u4EMgYgwTq9XTgUC5KaYIkXlR6agJReK3CEXKMKUn6gnl
         WBjcjDxufgRvrt6iEsJzZEUPtrIgVzE8OBN3IiOg+Z1G8vIVy7ia8UgWuNq3TsVqgaEE
         3YfRbnOn7nVF8WrCsrEcYGDu1CJOhM9+YtWfTLknZ7QCsGsDwewyn2CxQboBo0USQwwh
         if+aUGWVVgLo/gfqDCBaOFGHefe6VqkOLyVKzpcVr80XHzXLM6CQQFIf+3tZz96dbR8o
         98pA==
X-Gm-Message-State: AA+aEWbFdbJ6GHbih9mQYUGCc28lzTCLBOH+gOuMiBiQX2cQi07Fk07S
        vLAs4bqUT93AWGF+roYB1L6Du7nM1CUrba0QHGA=
X-Google-Smtp-Source: AFSGD/XcMUEVRfixW18y2iBu/FB7l9KDq85pomCAvZFQUuKIwoE/msZU1o3eFficjDXBiTEyt59Nnr9yCGQR0PUj0L8=
X-Received: by 2002:a1c:c87:: with SMTP id 129mr11583718wmm.116.1545324045688;
 Thu, 20 Dec 2018 08:40:45 -0800 (PST)
MIME-Version: 1.0
References: <20181123215326.14274-1-helen.koike@collabora.com>
 <20181127133418.GT9144@intel.com> <6aa39654-6949-88b3-b949-b338d915ffd2@collabora.com>
 <CAAFQd5BczTNdwUNcx42hC=OKkgZTV9JevHetYOjfDCnEz29LpA@mail.gmail.com>
 <0a0a35bf-69e4-8dcd-46fc-7053081480d5@collabora.com> <CAAFQd5C15yF4TwOLu4JsFGMSzLp8isV89WOZyRfv9wCcGfFRtg@mail.gmail.com>
 <CAKMK7uG=vdaTo25b3gSaD4T2naA51VeaVL0+5YAJ9HMrBziTWQ@mail.gmail.com>
In-Reply-To: <CAKMK7uG=vdaTo25b3gSaD4T2naA51VeaVL0+5YAJ9HMrBziTWQ@mail.gmail.com>
From: Alex Deucher <alexdeucher@gmail.com>
Date: Thu, 20 Dec 2018 11:40:33 -0500
Message-ID: <CADnq5_P9nsquCV95CSZC4NCr7YNJ76ZmCruJA=f1N8dLGYm=ow@mail.gmail.com>
Subject: Re: [PATCH] drm: add capability DRM_CAP_ASYNC_UPDATE
To: Daniel Vetter <daniel@ffwll.ch>, nicholas.kazlauskas@amd.com
Cc: Tomasz Figa <tfiga@chromium.org>, dnicoara@chromium.org,
        =?UTF-8?Q?St=C3=A9phane_Marchesin?= <marcheu@google.com>,
        Sean Paul <seanpaul@google.com>,
        Alexandros Frantzis <alexandros.frantzis@collabora.com>,
        David Airlie <airlied@linux.ie>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        Gustavo Padovan <gustavo.padovan@collabora.com>,
        Helen Koike <helen.koike@collabora.com>, kernel@collabora.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

+ Nicholas

On Thu, Dec 20, 2018 at 5:47 AM Daniel Vetter <daniel@ffwll.ch> wrote:
>
> On Thu, Dec 20, 2018 at 10:07 AM Tomasz Figa <tfiga@chromium.org> wrote:
> >
> > Hi Helen,
> >
> > On Fri, Dec 14, 2018 at 10:35 AM Helen Koike <helen.koike@collabora.com=
> wrote:
> > >
> > > Hi Tomasz,
> > >
> > > On 12/13/18 2:02 AM, Tomasz Figa wrote:
> > > > On Thu, Dec 6, 2018 at 1:12 AM Helen Koike <helen.koike@collabora.c=
om> wrote:
> > > >>
> > > >> Hi Ville
> > > >>
> > > >> On 11/27/18 11:34 AM, Ville Syrj=C3=A4l=C3=A4 wrote:
> > > >>> On Fri, Nov 23, 2018 at 07:53:26PM -0200, Helen Koike wrote:
> > > >>>> Allow userspace to identify if the driver supports async update.
> > > >>>
> > > >>> And what exactly is an "async update"?
> > > >>
> > > >> I agree we are lacking docs on this, I'll send in the next version=
 as
> > > >> soon as we agree on a name (please see below).
> > > >>
> > > >> For reference:
> > > >> https://lists.freedesktop.org/archives/dri-devel/2017-April/138586=
.html
> > > >>
> > > >>>
> > > >>> I keep asking people to come up with the a better name for this, =
and to
> > > >>> document what it actually means. Recently I've been think we shou=
ld
> > > >>> maybe just adopt the vulkan terminology (immediate/fifo/mailbox) =
to
> > > >>> avoid introducing yet another set of names for the same thing. We=
'd
> > > >>> still want to document things properly though.
> > > >>
> > > >> Another name it was suggested was "atomic amend", this feature bas=
ically
> > > >> allows userspace to complement an update previously sent (i.e. its=
 in
> > > >> the queue and wasn't commited yet), it allows adding a plane updat=
e to
> > > >> the next commit. So what do you think in renaming it to "atomic am=
end"?
> > > >
> > > > Note that it doesn't seem to be what the code currently is doing. F=
or
> > > > example, for cursor updates, it doesn't seem to be working on the
> > > > currently pending commit, but just directly issues an atomic async
> > > > update call to the planes. The code actually seems to fall back to =
a
> > > > normal sync commit, if there is an already pending commit touching =
the
> > > > same plane or including a modeset.
> > >
> > > It should fail as discussed at:
> > > https://patchwork.freedesktop.org/patch/243088/
> > >
> > > There was the following code inside the drm_atomic_helper_async_check=
()
> > > in the previous patch which would fallback to a normal commit if ther=
e
> > > isn't any pending commit to amend:
> > >
> > > +       if (!old_plane_state->commit)
> > > +               return -EINVAL;
> > >
> > > In the v2 of the patch https://patchwork.freedesktop.org/patch/263712=
/
> > > this got removed, but which means that async update will be enabled
> > > anyway. So the following code is wrong:
> > >
> > > -       if (state->legacy_cursor_update)
> > > +       if (state->async_update || state->legacy_cursor_update)
> > >                 state->async_update =3D !drm_atomic_helper_async_chec=
k(dev, state);
> > >
> > > Does it make sense? If yes I'll fix this in the next version of the
> > > Atomic IOCTL patch (and also those two patches should be in the same
> > > series, I'll send them together next time).
> > >
> > > Thanks for pointing this out.
> > >
> > > Please let me know if you still don't agree on the name "atomic amend=
",
> > > or if I am missing something.
> >
> > I'll defer it to the DRM maintainers. From Chrome OS perspective, we
> > need a way to commit the cursor plane asynchronously from other
> > commits any time the cursor changes its position or framebuffer. As
> > long as the new API allows that and the maintainers are fine with it,
> > I think I should be okay with it too.
>
> If this is just about the cursor, why is the current legacy cursor
> ioctl not good enough? It's 2 ioctls instead of one, but I'm not sure
> if we want to support having a normal atomic commit and a cursor
> update in the same atomic ioctl, coming up with reasonable semantics
> for that will be complicated.
>
> Pointer to code that uses this would be better ofc.

I haven't followed this thread too closely, but we ended up needing to
add a fast patch for cursor updates to amdgpu's atomic support to
avoid stuttering issues.  Other drivers may end up being affected by
this as well.  See:
https://bugs.freedesktop.org/show_bug.cgi?id=3D106175
Unfortunately, the fast path requires some hacks to handle the ref
counting properly on cursor fbs:
https://patchwork.freedesktop.org/patch/266138/
https://patchwork.freedesktop.org/patch/268298/
It looks like gamma may need similar treatment:
https://bugs.freedesktop.org/show_bug.cgi?id=3D108917

Alex


> -Daniel
>
> > Best regards,
> > Tomasz
> >
> > >
> > > Helen
> > >
> > > >
> > > > Best regards,
> > > > Tomasz
> > > >
> > > >> Or do you suggest another name? I am not familiar with vulkan term=
inology.
> > > >>
> > > >>
> > > >> Thanks
> > > >> Helen
> > > >>
> > > >>>
> > > >>>>
> > > >>>> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.=
com>
> > > >>>> [prepared for upstream]
> > > >>>> Signed-off-by: Helen Koike <helen.koike@collabora.com>
> > > >>>>
> > > >>>> ---
> > > >>>> Hi,
> > > >>>>
> > > >>>> This patch introduces the ASYNC_UPDATE cap, which originated fro=
m the
> > > >>>> discussion regarding DRM_MODE_ATOMIC_AMEND on [1], to allow user=
 to
> > > >>>> figure that async_update exists.
> > > >>>>
> > > >>>> This was tested using a small program that exercises the uAPI fo=
r easy
> > > >>>> sanity testing. The program was created by Alexandros and modifi=
ed by
> > > >>>> Enric to test the capability flag [2].
> > > >>>>
> > > >>>> The test worked on a rockchip Ficus v1.1 board on top of mainlin=
e plus
> > > >>>> the patch to update cursors asynchronously through atomic plus t=
he patch
> > > >>>> that introduces the ATOMIC_AMEND flag for the drm/rockchip drive=
r.
> > > >>>>
> > > >>>> To test, just build the program and use the --atomic flag to use=
 the cursor
> > > >>>> plane with the ATOMIC_AMEND flag. E.g.
> > > >>>>
> > > >>>>   drm_cursor --atomic
> > > >>>>
> > > >>>> [1] https://patchwork.freedesktop.org/patch/243088/
> > > >>>> [2] https://gitlab.collabora.com/eballetbo/drm-cursor/commits/as=
ync-capability
> > > >>>>
> > > >>>> Thanks
> > > >>>> Helen
> > > >>>>
> > > >>>>
> > > >>>>  drivers/gpu/drm/drm_ioctl.c | 11 +++++++++++
> > > >>>>  include/uapi/drm/drm.h      |  1 +
> > > >>>>  2 files changed, 12 insertions(+)
> > > >>>>
> > > >>>> diff --git a/drivers/gpu/drm/drm_ioctl.c b/drivers/gpu/drm/drm_i=
octl.c
> > > >>>> index 94bd872d56c4..4a7e0f874171 100644
> > > >>>> --- a/drivers/gpu/drm/drm_ioctl.c
> > > >>>> +++ b/drivers/gpu/drm/drm_ioctl.c
> > > >>>> @@ -31,6 +31,7 @@
> > > >>>>  #include <drm/drm_ioctl.h>
> > > >>>>  #include <drm/drmP.h>
> > > >>>>  #include <drm/drm_auth.h>
> > > >>>> +#include <drm/drm_modeset_helper_vtables.h>
> > > >>>>  #include "drm_legacy.h"
> > > >>>>  #include "drm_internal.h"
> > > >>>>  #include "drm_crtc_internal.h"
> > > >>>> @@ -229,6 +230,7 @@ static int drm_getcap(struct drm_device *dev=
, void *data, struct drm_file *file_
> > > >>>>  {
> > > >>>>      struct drm_get_cap *req =3D data;
> > > >>>>      struct drm_crtc *crtc;
> > > >>>> +    struct drm_plane *plane;
> > > >>>>
> > > >>>>      req->value =3D 0;
> > > >>>>
> > > >>>> @@ -292,6 +294,15 @@ static int drm_getcap(struct drm_device *de=
v, void *data, struct drm_file *file_
> > > >>>>      case DRM_CAP_CRTC_IN_VBLANK_EVENT:
> > > >>>>              req->value =3D 1;
> > > >>>>              break;
> > > >>>> +    case DRM_CAP_ASYNC_UPDATE:
> > > >>>> +            req->value =3D 1;
> > > >>>> +            list_for_each_entry(plane, &dev->mode_config.plane_=
list, head) {
> > > >>>> +                    if (!plane->helper_private->atomic_async_up=
date) {
> > > >>>> +                            req->value =3D 0;
> > > >>>> +                            break;
> > > >>>> +                    }
> > > >>>> +            }
> > > >>>> +            break;
> > > >>>>      default:
> > > >>>>              return -EINVAL;
> > > >>>>      }
> > > >>>> diff --git a/include/uapi/drm/drm.h b/include/uapi/drm/drm.h
> > > >>>> index 300f336633f2..ff01540cbb1d 100644
> > > >>>> --- a/include/uapi/drm/drm.h
> > > >>>> +++ b/include/uapi/drm/drm.h
> > > >>>> @@ -649,6 +649,7 @@ struct drm_gem_open {
> > > >>>>  #define DRM_CAP_PAGE_FLIP_TARGET    0x11
> > > >>>>  #define DRM_CAP_CRTC_IN_VBLANK_EVENT        0x12
> > > >>>>  #define DRM_CAP_SYNCOBJ             0x13
> > > >>>> +#define DRM_CAP_ASYNC_UPDATE                0x14
> > > >>>>
> > > >>>>  /** DRM_IOCTL_GET_CAP ioctl argument type */
> > > >>>>  struct drm_get_cap {
> > > >>>> --
> > > >>>> 2.19.1
> > > >>>>
> > > >>>> _______________________________________________
> > > >>>> dri-devel mailing list
> > > >>>> dri-devel@lists.freedesktop.org
> > > >>>> https://lists.freedesktop.org/mailman/listinfo/dri-devel
> > > >>>
> > _______________________________________________
> > dri-devel mailing list
> > dri-devel@lists.freedesktop.org
> > https://lists.freedesktop.org/mailman/listinfo/dri-devel
>
>
>
> --
> Daniel Vetter
> Software Engineer, Intel Corporation
> +41 (0) 79 365 57 48 - http://blog.ffwll.ch
> _______________________________________________
> dri-devel mailing list
> dri-devel@lists.freedesktop.org
> https://lists.freedesktop.org/mailman/listinfo/dri-devel
