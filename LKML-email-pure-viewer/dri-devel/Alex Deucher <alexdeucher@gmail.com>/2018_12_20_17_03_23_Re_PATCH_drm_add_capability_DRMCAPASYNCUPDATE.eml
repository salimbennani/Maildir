Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:38:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 345175805F0;
	Thu, 20 Dec 2018 09:06:47 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 09:06:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAqlupxE5r5frOjFs9X3jQJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os69bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCIOhWsZXyqVQVrRumBwShH//vyiZSi3PqwaE2z+YsHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3pOacWT++0w7TDwzvdYPNLxTj96JbHcgo8qvyLR71wddTeyEYyGAzbk1Wf?=
 =?us-ascii?q?tYzlMC2P1ukWvGib6vBvVeOri2I9tw5xpT2vy94qh4LUiIwVzVXE+j94wIYzPd?=
 =?us-ascii?q?C4RlR7bsC6H5RNqS6aLIh2Qt8lQ2Fwoio6zacGuZGjcCcWz5QnwxrfZOacfIiP?=
 =?us-ascii?q?+BLsTvydLit/hHJgYL6/iRiy8Eakyu34TMW7zFZKoyxYmdfPrnAAzwLf5tSDR/?=
 =?us-ascii?q?dn40us1yiD2xrO5uxHPUw4j6vWJpw5zrIuipYetV7PEyz2lUnskqOaaFgo9vKp?=
 =?us-ascii?q?5unlZLjtu4WSOJVuig7kN6Qjgsy/Dvo8MggJR2Wb5+u826P5/UHjQ7VFkOc2kq?=
 =?us-ascii?q?/Hv5DeP8gbobS5AwBN3oYi7RawESum3cwGkXUbKF9JYg+Lgob3N13UPfz1Duuz?=
 =?us-ascii?q?j06tnTpp3/zGO6fuApTJLnjNirfherN95lZYyAoyy9Bf+p1VBqgCIP3tQE/xss?=
 =?us-ascii?q?LXDhsgPwyzzefnDsty1pkFVGKRDa+WLrnSvUWL5u0xOemMYpEauDLnJ/gi/f7u?=
 =?us-ascii?q?gmc1mUUBcqmxwZsXdHe4E+xiI0WYYnrjnM0NEGgXvgclSOzqiVuCUSNcZnqoXq?=
 =?us-ascii?q?I84C07B5yiDYvZWo+th7mB1j+hHpJKfmBGFkyMEXDweoWEQfgMaT6SLdVmkjAe?=
 =?us-ascii?q?VbihVpUu1RehtALhz7pnL+zU+jAXtJ751dh14fHTmg829TBuE8ud1GSNRXlunm?=
 =?us-ascii?q?wUXz82wLx/oUtlx1iZyqh4g/tYFd9J6/NTSAg6N4XRz+h7C9D0RwLAcc2FSFeg?=
 =?us-ascii?q?QtW6Hz4xSsg9zMMJY0Z4A9+ilAzM3zK2A78JkLyGHJ80/bja33TrI8Z9ymzJ1K?=
 =?us-ascii?q?8uj1Q9RstPNGumhrNw9gTJBo7JlVmZmLiudagGwCHN82KDx3KUvE5ESA5wTbnF?=
 =?us-ascii?q?XXcHa0TLt9v5+F3NQ6WuCbs9NAtB0tCNKq1NZt3tjlVGQfPjNc/aY2KwnWewGB?=
 =?us-ascii?q?mJyqmNbIrsZ2USwiHdBFIYnAAU+HaMLRI+CTu5o2LCEDxuEkribF72/ulgtny3?=
 =?us-ascii?q?VE80wBuMb016ybW1/AUYhfidS/MVw7IFtz0tqzRyHFahwd3WD8CMqBZmfKVZed?=
 =?us-ascii?q?k9+ktI1XrFtwxhOZytN7xihl8bcwRwo0Pu1xV2Bp9ckcQwq3Mq1g5yKaOe0FNO?=
 =?us-ascii?q?bD6Y2ZHwOrvKKmj95hyvaqjW2k3A39aS4KsA9PM4q1D7tgGzCkUi62ln08VS03?=
 =?us-ascii?q?aE/JrKCBQdUJ3vXUc37RR1vKzabTQn6IPS1n1sNre0vyTG29IoAusl1xmhc81e?=
 =?us-ascii?q?MKOCCA/9DckaC9KyJ+wtnlijdggEM/xK9K4oI8OmcOOL2a62POp6gD2ql2VG4I?=
 =?us-ascii?q?Bn3UKK+CpxUerI35cDw/GF0QqLTTb8jFG9ss/pnYBIfy0dHm26ySL8Ho5eerVy?=
 =?us-ascii?q?fZoXCWepO8C33NR+iIL3VH5C6VGjAEkK2Mm3dhqIblzxxBFf2l4ToXO6hyS41T?=
 =?us-ascii?q?t0kzcyo6qb3SzOxfnidRUdNm5KQmlikUnjIYyug98GW0ioahAjlAG56kbi26hb?=
 =?us-ascii?q?uKN/InHTQEdJZST3L3tuUrCttrqEeMNP7JIosSNKUOWze1yaS7j9owcE3CPnBW?=
 =?us-ascii?q?dR2Dc7dzSysJXjgxN6kH6dLGp0rHfBe8F/3w3f5N/fRf5WxDYGXzN3iTrUBli9?=
 =?us-ascii?q?Odmm49OUmozHsuC/UWKhS5JSfTPqzYOGqCu0+2lqDQejkPC0n93tCRI63jPj19?=
 =?us-ascii?q?l2SSXIqw7xY4nx2KS9K+5nfEhoBFnn5sp+G4F+lJYwhZ4K1XgbgJWV4WQIkWPp?=
 =?us-ascii?q?PdpH3qL+aWIHRSQXzN7N/AjlxEpjI2qKx43jV3WR2MthZ8SgbWMQ1SIw9MRKCK?=
 =?us-ascii?q?aS7LxZkip5uFu4rQTNYfdjmjcR0+ch6Hkfg+sRogoi0j2dAqwOHUlfJSHskhWI?=
 =?us-ascii?q?79Oko6lNamegb6Ow1FZgktC7F76NvBtcWHnid5cmHC9w6Nh/MV3W3H3y7IHkZM?=
 =?us-ascii?q?ffbdYJuhKIlBfAivBfKIgtmfoSmSpnJWX9sGU5y+48iBxix5C7s5KBK2Vw56K5?=
 =?us-ascii?q?GR9YOybxZ8MS/DHtkKlfktyX34CpApVuBDELUIH0QvKvFTIYre7nOBqWED0gtn?=
 =?us-ascii?q?ebHqLSEhSF50dhq3LPDoqnN3WKJHQCydViRR+dJFFQgQwOXTU6mII5GR6uxMD7?=
 =?us-ascii?q?bEh54TUR7EbiqhRQ0uJoKwX/UmDHqQeqcDg0TYaQLAFM4gFe/UvVMtGe7uFuHy?=
 =?us-ascii?q?Fe5JKhtxeAKmiaZwROEGEIVVaIB1HlPrmy+9bA9/KUCfa5L/vLeb+Os/BRV++U?=
 =?us-ascii?q?xZKz1Ytr5zaNNsKSPnl7Ev00wExDUWpiG8TenTUPRDcalybMb86duRe99Td7rs?=
 =?us-ascii?q?G58PT3Rg3v4ZGDBKdVMdVq4xq2m7uMN/aMhCZlLjZVzpMMymHJyLgc314Sijti?=
 =?us-ascii?q?dzq3EbQHui7CUrjQmrJMDxMAbyNzNc1I778z3wVXOM7bjM/12aB8jvIvF1hFUl?=
 =?us-ascii?q?nhkNmzZcMWO2G9KE/HBEGTObucOD3E2Nv3br28SLFKiOVUtga9uTKaE0/lIzSC?=
 =?us-ascii?q?mCPlVxGpMeFQki6bOAZSt526chZoEWLjVs7pagWnMN9rij072aE0hnLPNWIGLT?=
 =?us-ascii?q?dwaV9Crr2O4iNemfh/H21B7nx4LeiLgSqZ7u/YKooIvvtvGCh7i+Va4HEiwbtP?=
 =?us-ascii?q?8C5EXOB1mDfVrtN2o1CpiO+Pyj9mUBpIsjlKhYKLsl9kOaXW7ZRAXXfE/BQQ7W?=
 =?us-ascii?q?SfERgKpt1lCsHxtKBU0NTAiKXzKDIRu+7TqOcVAcnZLIq5PWY9PAChTDLdCgoI?=
 =?us-ascii?q?SRalO37bgwpWkKfWvjeqo54mrpHqlN5GarZBTk1/Xqc6A15/DZo9LZFrWjoinZ?=
 =?us-ascii?q?aSicJO7n27+kr/XsJf67nDW+LaLfjyIzaUl/EQbh8F0b/1MI8TO5fT1Elra108?=
 =?us-ascii?q?l4PPTRmDFetRqzFsO1dn6H5G92JzGyhqgxro?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAADIyhtch0O0hNFbChoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgmmBAieDPj+De4Qei3uCDRSSTIR9FIFjKQ0GAYF?=
 =?us-ascii?q?LgnWCbiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAQEJD?=
 =?us-ascii?q?gkEGQEbEgsBAwIJAQEFAwILDQICJgICAx4BAQQBDAEFARwGEwUWgwcBgWgBAw0?=
 =?us-ascii?q?IBQqLeZAIPIsZfBYFAReCdwWBMQELAYJ4ChknDV6BNwIGEnmLNBeBQD+DJX6CV?=
 =?us-ascii?q?0cBAgEBF4EcCQoYgwiCVwKJJyATgWiEGhJthUOKbDMJgimEaIYyMz2DMhiBXyM?=
 =?us-ascii?q?qhFKHZYJ6LIkhgQaDdYESiiQwgSWBXBsPCDMaI1ANAiKCOwmCEgwXgyIohRSFX?=
 =?us-ascii?q?SEzAYEEAQGLIoI+AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAADIyhtch0O0hNFbChoBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgmmBAieDPj+De4Qei3uCDRSSTIR9FIFjKQ0GAYFLgnWCbiI0CQ0BA?=
 =?us-ascii?q?wEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAQEJDgkEGQEbEgsBAwI?=
 =?us-ascii?q?JAQEFAwILDQICJgICAx4BAQQBDAEFARwGEwUWgwcBgWgBAw0IBQqLeZAIPIsZf?=
 =?us-ascii?q?BYFAReCdwWBMQELAYJ4ChknDV6BNwIGEnmLNBeBQD+DJX6CV0cBAgEBF4EcCQo?=
 =?us-ascii?q?YgwiCVwKJJyATgWiEGhJthUOKbDMJgimEaIYyMz2DMhiBXyMqhFKHZYJ6LIkhg?=
 =?us-ascii?q?QaDdYESiiQwgSWBXBsPCDMaI1ANAiKCOwmCEgwXgyIohRSFXSEzAYEEAQGLIoI?=
 =?us-ascii?q?+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,377,1539673200"; 
   d="scan'208";a="67736311"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 20 Dec 2018 09:06:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2387497AbeLTRDk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 12:03:40 -0500
Received: from mail-wr1-f67.google.com ([209.85.221.67]:37882 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732689AbeLTRDj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 12:03:39 -0500
Received: by mail-wr1-f67.google.com with SMTP id s12so2520968wrt.4
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 09:03:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=hsPIVCeJUAJyPLfSrc1WHT6UMGXzmQZPFYJtGp6g5FQ=;
        b=NjsQYnGpcFE5Hcba5x79ZxGNfwFV36Q8SCEEkOFsUPuXuDCZCJCfrhvyt1HlBYcpIw
         wR4gA96woM3jsMllyaEk2t5bX3bGPxQD9hk7ci6UTOsWJh2e1RUMT+mcQFvY6EQyB69/
         6WqcskyA//t6ebl2X6R/EC16+t4JXh8QDG1EWmlyARA9Wgzu4mkWEHtIviGB0S+Ou3GY
         OiWAVbMqcO+V7iOUik2YPyhgAHuRnZGfetwJCw/JwVZKwfItbyjaZeZWfsM31cEaWL5U
         hIsy6nA+I7JLm39ylAagW3A+4mYtxx1hWHgsMcGBc4Qe/qKTVPT0sncDPwGEgCzourpK
         6QUw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=hsPIVCeJUAJyPLfSrc1WHT6UMGXzmQZPFYJtGp6g5FQ=;
        b=rKnr2GIiJ8CDOoHHR8VA5RzttqfQY2+2irIQvwU/vRmqI4139AFlBX669NScTY7U7X
         Jrop3HDbU/m31ZuG1tnJH3ma6Ek/mKArBi+aURDS0xOGPJE+QLAVPaK8jWrt/fvb8lJn
         YFoDC/l/WQ+TkfjBsczYtQQCOjVcAvseWLsweskaTtuN1J4iMj7UOKtOMWQVik2fekHR
         oJ+xHsi1MrdAdbEsCuWDlEIj8Z67lq6qJWgaYNXSvPawyJEtDk5uMN6OAmBUenICAhTF
         qajBKu2NMRXRY3yJ9m/AV3CB1pDCMyH4dFLi1smvYTfl1SlbwEhbUYe/a8MCkTJRvqsP
         3VNQ==
X-Gm-Message-State: AA+aEWYH2l0ovyNI0ChTzIEEKvXA1v/uiCLfWSDVbGkSC6ar/cHMK90F
        qdkuy820ZTxNmqNQJj/2txq8gNkJ6w2qkV7X54yhT0un
X-Google-Smtp-Source: AFSGD/WhktxMu5h1ja6pX1KBkRNjYcYwFXQUU0xp9HUYjF8g3ntIU7MeRRgWz+170Z/yTK1XTVXjNpD1b8tZvTDR4pg=
X-Received: by 2002:a5d:488f:: with SMTP id g15mr23489493wrq.15.1545325415115;
 Thu, 20 Dec 2018 09:03:35 -0800 (PST)
MIME-Version: 1.0
References: <20181123215326.14274-1-helen.koike@collabora.com>
 <20181127133418.GT9144@intel.com> <6aa39654-6949-88b3-b949-b338d915ffd2@collabora.com>
 <CAAFQd5BczTNdwUNcx42hC=OKkgZTV9JevHetYOjfDCnEz29LpA@mail.gmail.com>
 <0a0a35bf-69e4-8dcd-46fc-7053081480d5@collabora.com> <CAAFQd5C15yF4TwOLu4JsFGMSzLp8isV89WOZyRfv9wCcGfFRtg@mail.gmail.com>
 <CAKMK7uG=vdaTo25b3gSaD4T2naA51VeaVL0+5YAJ9HMrBziTWQ@mail.gmail.com>
 <CADnq5_P9nsquCV95CSZC4NCr7YNJ76ZmCruJA=f1N8dLGYm=ow@mail.gmail.com> <CAKMK7uHu5XMQzr7ocVEcpDS9H6pQ-BHfHNE51_YK7rLkTQC_9g@mail.gmail.com>
In-Reply-To: <CAKMK7uHu5XMQzr7ocVEcpDS9H6pQ-BHfHNE51_YK7rLkTQC_9g@mail.gmail.com>
From: Alex Deucher <alexdeucher@gmail.com>
Date: Thu, 20 Dec 2018 12:03:23 -0500
Message-ID: <CADnq5_P1smiGhYyoZQsEAJG0+jBx6f75HwEFAf2RkaoNp0HEiA@mail.gmail.com>
Subject: Re: [PATCH] drm: add capability DRM_CAP_ASYNC_UPDATE
To: Daniel Vetter <daniel@ffwll.ch>,
        "Wentland, Harry" <Harry.Wentland@amd.com>
Cc: "Kazlauskas, Nicholas" <nicholas.kazlauskas@amd.com>,
        Tomasz Figa <tfiga@chromium.org>, dnicoara@chromium.org,
        =?UTF-8?Q?St=C3=A9phane_Marchesin?= <marcheu@google.com>,
        Sean Paul <seanpaul@google.com>,
        Alexandros Frantzis <alexandros.frantzis@collabora.com>,
        David Airlie <airlied@linux.ie>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        dri-devel <dri-devel@lists.freedesktop.org>,
        Gustavo Padovan <gustavo.padovan@collabora.com>,
        Helen Koike <helen.koike@collabora.com>, kernel@collabora.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

+ Harry

On Thu, Dec 20, 2018 at 11:54 AM Daniel Vetter <daniel@ffwll.ch> wrote:
>
> On Thu, Dec 20, 2018 at 5:40 PM Alex Deucher <alexdeucher@gmail.com> wrot=
e:
> >
> > + Nicholas
> >
> > On Thu, Dec 20, 2018 at 5:47 AM Daniel Vetter <daniel@ffwll.ch> wrote:
> > >
> > > On Thu, Dec 20, 2018 at 10:07 AM Tomasz Figa <tfiga@chromium.org> wro=
te:
> > > >
> > > > Hi Helen,
> > > >
> > > > On Fri, Dec 14, 2018 at 10:35 AM Helen Koike <helen.koike@collabora=
.com> wrote:
> > > > >
> > > > > Hi Tomasz,
> > > > >
> > > > > On 12/13/18 2:02 AM, Tomasz Figa wrote:
> > > > > > On Thu, Dec 6, 2018 at 1:12 AM Helen Koike <helen.koike@collabo=
ra.com> wrote:
> > > > > >>
> > > > > >> Hi Ville
> > > > > >>
> > > > > >> On 11/27/18 11:34 AM, Ville Syrj=C3=A4l=C3=A4 wrote:
> > > > > >>> On Fri, Nov 23, 2018 at 07:53:26PM -0200, Helen Koike wrote:
> > > > > >>>> Allow userspace to identify if the driver supports async upd=
ate.
> > > > > >>>
> > > > > >>> And what exactly is an "async update"?
> > > > > >>
> > > > > >> I agree we are lacking docs on this, I'll send in the next ver=
sion as
> > > > > >> soon as we agree on a name (please see below).
> > > > > >>
> > > > > >> For reference:
> > > > > >> https://lists.freedesktop.org/archives/dri-devel/2017-April/13=
8586.html
> > > > > >>
> > > > > >>>
> > > > > >>> I keep asking people to come up with the a better name for th=
is, and to
> > > > > >>> document what it actually means. Recently I've been think we =
should
> > > > > >>> maybe just adopt the vulkan terminology (immediate/fifo/mailb=
ox) to
> > > > > >>> avoid introducing yet another set of names for the same thing=
. We'd
> > > > > >>> still want to document things properly though.
> > > > > >>
> > > > > >> Another name it was suggested was "atomic amend", this feature=
 basically
> > > > > >> allows userspace to complement an update previously sent (i.e.=
 its in
> > > > > >> the queue and wasn't commited yet), it allows adding a plane u=
pdate to
> > > > > >> the next commit. So what do you think in renaming it to "atomi=
c amend"?
> > > > > >
> > > > > > Note that it doesn't seem to be what the code currently is doin=
g. For
> > > > > > example, for cursor updates, it doesn't seem to be working on t=
he
> > > > > > currently pending commit, but just directly issues an atomic as=
ync
> > > > > > update call to the planes. The code actually seems to fall back=
 to a
> > > > > > normal sync commit, if there is an already pending commit touch=
ing the
> > > > > > same plane or including a modeset.
> > > > >
> > > > > It should fail as discussed at:
> > > > > https://patchwork.freedesktop.org/patch/243088/
> > > > >
> > > > > There was the following code inside the drm_atomic_helper_async_c=
heck()
> > > > > in the previous patch which would fallback to a normal commit if =
there
> > > > > isn't any pending commit to amend:
> > > > >
> > > > > +       if (!old_plane_state->commit)
> > > > > +               return -EINVAL;
> > > > >
> > > > > In the v2 of the patch https://patchwork.freedesktop.org/patch/26=
3712/
> > > > > this got removed, but which means that async update will be enabl=
ed
> > > > > anyway. So the following code is wrong:
> > > > >
> > > > > -       if (state->legacy_cursor_update)
> > > > > +       if (state->async_update || state->legacy_cursor_update)
> > > > >                 state->async_update =3D !drm_atomic_helper_async_=
check(dev, state);
> > > > >
> > > > > Does it make sense? If yes I'll fix this in the next version of t=
he
> > > > > Atomic IOCTL patch (and also those two patches should be in the s=
ame
> > > > > series, I'll send them together next time).
> > > > >
> > > > > Thanks for pointing this out.
> > > > >
> > > > > Please let me know if you still don't agree on the name "atomic a=
mend",
> > > > > or if I am missing something.
> > > >
> > > > I'll defer it to the DRM maintainers. From Chrome OS perspective, w=
e
> > > > need a way to commit the cursor plane asynchronously from other
> > > > commits any time the cursor changes its position or framebuffer. As
> > > > long as the new API allows that and the maintainers are fine with i=
t,
> > > > I think I should be okay with it too.
> > >
> > > If this is just about the cursor, why is the current legacy cursor
> > > ioctl not good enough? It's 2 ioctls instead of one, but I'm not sure
> > > if we want to support having a normal atomic commit and a cursor
> > > update in the same atomic ioctl, coming up with reasonable semantics
> > > for that will be complicated.
> > >
> > > Pointer to code that uses this would be better ofc.
> >
> > I haven't followed this thread too closely, but we ended up needing to
> > add a fast patch for cursor updates to amdgpu's atomic support to
> > avoid stuttering issues.  Other drivers may end up being affected by
> > this as well.  See:
> > https://bugs.freedesktop.org/show_bug.cgi?id=3D106175
> > Unfortunately, the fast path requires some hacks to handle the ref
> > counting properly on cursor fbs:
> > https://patchwork.freedesktop.org/patch/266138/
> > https://patchwork.freedesktop.org/patch/268298/
> > It looks like gamma may need similar treatment:
> > https://bugs.freedesktop.org/show_bug.cgi?id=3D108917
>
> Can we get these patches cc'ed to dri-devel so that there's some
> common solution? Everyone hacking legacy_cursor_update hacks on their
> own doesn't really work well. Or would at least give some visibility
> into what's all going on.

Agreed.

>
> Not sure about the gamma thing since we had opposite bugs on i915
> about gamma not being vsynced and tearing terribly. Cursor is special
> since it tends to be too small to notice tearing.

Our cursor hw (and possibly gamma as well Nicholas?  Harry?) is double
buffered, so we can update it any time for the most part and the
changes won't take affect until the next vupdate period.

Alex

>
> Thanks, Daniel
>
> > Alex
> >
> >
> > > -Daniel
> > >
> > > > Best regards,
> > > > Tomasz
> > > >
> > > > >
> > > > > Helen
> > > > >
> > > > > >
> > > > > > Best regards,
> > > > > > Tomasz
> > > > > >
> > > > > >> Or do you suggest another name? I am not familiar with vulkan =
terminology.
> > > > > >>
> > > > > >>
> > > > > >> Thanks
> > > > > >> Helen
> > > > > >>
> > > > > >>>
> > > > > >>>>
> > > > > >>>> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collab=
ora.com>
> > > > > >>>> [prepared for upstream]
> > > > > >>>> Signed-off-by: Helen Koike <helen.koike@collabora.com>
> > > > > >>>>
> > > > > >>>> ---
> > > > > >>>> Hi,
> > > > > >>>>
> > > > > >>>> This patch introduces the ASYNC_UPDATE cap, which originated=
 from the
> > > > > >>>> discussion regarding DRM_MODE_ATOMIC_AMEND on [1], to allow =
user to
> > > > > >>>> figure that async_update exists.
> > > > > >>>>
> > > > > >>>> This was tested using a small program that exercises the uAP=
I for easy
> > > > > >>>> sanity testing. The program was created by Alexandros and mo=
dified by
> > > > > >>>> Enric to test the capability flag [2].
> > > > > >>>>
> > > > > >>>> The test worked on a rockchip Ficus v1.1 board on top of mai=
nline plus
> > > > > >>>> the patch to update cursors asynchronously through atomic pl=
us the patch
> > > > > >>>> that introduces the ATOMIC_AMEND flag for the drm/rockchip d=
river.
> > > > > >>>>
> > > > > >>>> To test, just build the program and use the --atomic flag to=
 use the cursor
> > > > > >>>> plane with the ATOMIC_AMEND flag. E.g.
> > > > > >>>>
> > > > > >>>>   drm_cursor --atomic
> > > > > >>>>
> > > > > >>>> [1] https://patchwork.freedesktop.org/patch/243088/
> > > > > >>>> [2] https://gitlab.collabora.com/eballetbo/drm-cursor/commit=
s/async-capability
> > > > > >>>>
> > > > > >>>> Thanks
> > > > > >>>> Helen
> > > > > >>>>
> > > > > >>>>
> > > > > >>>>  drivers/gpu/drm/drm_ioctl.c | 11 +++++++++++
> > > > > >>>>  include/uapi/drm/drm.h      |  1 +
> > > > > >>>>  2 files changed, 12 insertions(+)
> > > > > >>>>
> > > > > >>>> diff --git a/drivers/gpu/drm/drm_ioctl.c b/drivers/gpu/drm/d=
rm_ioctl.c
> > > > > >>>> index 94bd872d56c4..4a7e0f874171 100644
> > > > > >>>> --- a/drivers/gpu/drm/drm_ioctl.c
> > > > > >>>> +++ b/drivers/gpu/drm/drm_ioctl.c
> > > > > >>>> @@ -31,6 +31,7 @@
> > > > > >>>>  #include <drm/drm_ioctl.h>
> > > > > >>>>  #include <drm/drmP.h>
> > > > > >>>>  #include <drm/drm_auth.h>
> > > > > >>>> +#include <drm/drm_modeset_helper_vtables.h>
> > > > > >>>>  #include "drm_legacy.h"
> > > > > >>>>  #include "drm_internal.h"
> > > > > >>>>  #include "drm_crtc_internal.h"
> > > > > >>>> @@ -229,6 +230,7 @@ static int drm_getcap(struct drm_device =
*dev, void *data, struct drm_file *file_
> > > > > >>>>  {
> > > > > >>>>      struct drm_get_cap *req =3D data;
> > > > > >>>>      struct drm_crtc *crtc;
> > > > > >>>> +    struct drm_plane *plane;
> > > > > >>>>
> > > > > >>>>      req->value =3D 0;
> > > > > >>>>
> > > > > >>>> @@ -292,6 +294,15 @@ static int drm_getcap(struct drm_device=
 *dev, void *data, struct drm_file *file_
> > > > > >>>>      case DRM_CAP_CRTC_IN_VBLANK_EVENT:
> > > > > >>>>              req->value =3D 1;
> > > > > >>>>              break;
> > > > > >>>> +    case DRM_CAP_ASYNC_UPDATE:
> > > > > >>>> +            req->value =3D 1;
> > > > > >>>> +            list_for_each_entry(plane, &dev->mode_config.pl=
ane_list, head) {
> > > > > >>>> +                    if (!plane->helper_private->atomic_asyn=
c_update) {
> > > > > >>>> +                            req->value =3D 0;
> > > > > >>>> +                            break;
> > > > > >>>> +                    }
> > > > > >>>> +            }
> > > > > >>>> +            break;
> > > > > >>>>      default:
> > > > > >>>>              return -EINVAL;
> > > > > >>>>      }
> > > > > >>>> diff --git a/include/uapi/drm/drm.h b/include/uapi/drm/drm.h
> > > > > >>>> index 300f336633f2..ff01540cbb1d 100644
> > > > > >>>> --- a/include/uapi/drm/drm.h
> > > > > >>>> +++ b/include/uapi/drm/drm.h
> > > > > >>>> @@ -649,6 +649,7 @@ struct drm_gem_open {
> > > > > >>>>  #define DRM_CAP_PAGE_FLIP_TARGET    0x11
> > > > > >>>>  #define DRM_CAP_CRTC_IN_VBLANK_EVENT        0x12
> > > > > >>>>  #define DRM_CAP_SYNCOBJ             0x13
> > > > > >>>> +#define DRM_CAP_ASYNC_UPDATE                0x14
> > > > > >>>>
> > > > > >>>>  /** DRM_IOCTL_GET_CAP ioctl argument type */
> > > > > >>>>  struct drm_get_cap {
> > > > > >>>> --
> > > > > >>>> 2.19.1
> > > > > >>>>
> > > > > >>>> _______________________________________________
> > > > > >>>> dri-devel mailing list
> > > > > >>>> dri-devel@lists.freedesktop.org
> > > > > >>>> https://lists.freedesktop.org/mailman/listinfo/dri-devel
> > > > > >>>
> > > > _______________________________________________
> > > > dri-devel mailing list
> > > > dri-devel@lists.freedesktop.org
> > > > https://lists.freedesktop.org/mailman/listinfo/dri-devel
> > >
> > >
> > >
> > > --
> > > Daniel Vetter
> > > Software Engineer, Intel Corporation
> > > +41 (0) 79 365 57 48 - http://blog.ffwll.ch
> > > _______________________________________________
> > > dri-devel mailing list
> > > dri-devel@lists.freedesktop.org
> > > https://lists.freedesktop.org/mailman/listinfo/dri-devel
>
>
>
> --
> Daniel Vetter
> Software Engineer, Intel Corporation
> +41 (0) 79 365 57 48 - http://blog.ffwll.ch
>
> On Thu, Dec 20, 2018 at 5:40 PM Alex Deucher <alexdeucher@gmail.com> wrot=
e:
> >
> > + Nicholas
> >
> > On Thu, Dec 20, 2018 at 5:47 AM Daniel Vetter <daniel@ffwll.ch> wrote:
> > >
> > > On Thu, Dec 20, 2018 at 10:07 AM Tomasz Figa <tfiga@chromium.org> wro=
te:
> > > >
> > > > Hi Helen,
> > > >
> > > > On Fri, Dec 14, 2018 at 10:35 AM Helen Koike <helen.koike@collabora=
.com> wrote:
> > > > >
> > > > > Hi Tomasz,
> > > > >
> > > > > On 12/13/18 2:02 AM, Tomasz Figa wrote:
> > > > > > On Thu, Dec 6, 2018 at 1:12 AM Helen Koike <helen.koike@collabo=
ra.com> wrote:
> > > > > >>
> > > > > >> Hi Ville
> > > > > >>
> > > > > >> On 11/27/18 11:34 AM, Ville Syrj=C3=A4l=C3=A4 wrote:
> > > > > >>> On Fri, Nov 23, 2018 at 07:53:26PM -0200, Helen Koike wrote:
> > > > > >>>> Allow userspace to identify if the driver supports async upd=
ate.
> > > > > >>>
> > > > > >>> And what exactly is an "async update"?
> > > > > >>
> > > > > >> I agree we are lacking docs on this, I'll send in the next ver=
sion as
> > > > > >> soon as we agree on a name (please see below).
> > > > > >>
> > > > > >> For reference:
> > > > > >> https://lists.freedesktop.org/archives/dri-devel/2017-April/13=
8586.html
> > > > > >>
> > > > > >>>
> > > > > >>> I keep asking people to come up with the a better name for th=
is, and to
> > > > > >>> document what it actually means. Recently I've been think we =
should
> > > > > >>> maybe just adopt the vulkan terminology (immediate/fifo/mailb=
ox) to
> > > > > >>> avoid introducing yet another set of names for the same thing=
. We'd
> > > > > >>> still want to document things properly though.
> > > > > >>
> > > > > >> Another name it was suggested was "atomic amend", this feature=
 basically
> > > > > >> allows userspace to complement an update previously sent (i.e.=
 its in
> > > > > >> the queue and wasn't commited yet), it allows adding a plane u=
pdate to
> > > > > >> the next commit. So what do you think in renaming it to "atomi=
c amend"?
> > > > > >
> > > > > > Note that it doesn't seem to be what the code currently is doin=
g. For
> > > > > > example, for cursor updates, it doesn't seem to be working on t=
he
> > > > > > currently pending commit, but just directly issues an atomic as=
ync
> > > > > > update call to the planes. The code actually seems to fall back=
 to a
> > > > > > normal sync commit, if there is an already pending commit touch=
ing the
> > > > > > same plane or including a modeset.
> > > > >
> > > > > It should fail as discussed at:
> > > > > https://patchwork.freedesktop.org/patch/243088/
> > > > >
> > > > > There was the following code inside the drm_atomic_helper_async_c=
heck()
> > > > > in the previous patch which would fallback to a normal commit if =
there
> > > > > isn't any pending commit to amend:
> > > > >
> > > > > +       if (!old_plane_state->commit)
> > > > > +               return -EINVAL;
> > > > >
> > > > > In the v2 of the patch https://patchwork.freedesktop.org/patch/26=
3712/
> > > > > this got removed, but which means that async update will be enabl=
ed
> > > > > anyway. So the following code is wrong:
> > > > >
> > > > > -       if (state->legacy_cursor_update)
> > > > > +       if (state->async_update || state->legacy_cursor_update)
> > > > >                 state->async_update =3D !drm_atomic_helper_async_=
check(dev, state);
> > > > >
> > > > > Does it make sense? If yes I'll fix this in the next version of t=
he
> > > > > Atomic IOCTL patch (and also those two patches should be in the s=
ame
> > > > > series, I'll send them together next time).
> > > > >
> > > > > Thanks for pointing this out.
> > > > >
> > > > > Please let me know if you still don't agree on the name "atomic a=
mend",
> > > > > or if I am missing something.
> > > >
> > > > I'll defer it to the DRM maintainers. From Chrome OS perspective, w=
e
> > > > need a way to commit the cursor plane asynchronously from other
> > > > commits any time the cursor changes its position or framebuffer. As
> > > > long as the new API allows that and the maintainers are fine with i=
t,
> > > > I think I should be okay with it too.
> > >
> > > If this is just about the cursor, why is the current legacy cursor
> > > ioctl not good enough? It's 2 ioctls instead of one, but I'm not sure
> > > if we want to support having a normal atomic commit and a cursor
> > > update in the same atomic ioctl, coming up with reasonable semantics
> > > for that will be complicated.
> > >
> > > Pointer to code that uses this would be better ofc.
> >
> > I haven't followed this thread too closely, but we ended up needing to
> > add a fast patch for cursor updates to amdgpu's atomic support to
> > avoid stuttering issues.  Other drivers may end up being affected by
> > this as well.  See:
> > https://bugs.freedesktop.org/show_bug.cgi?id=3D106175
> > Unfortunately, the fast path requires some hacks to handle the ref
> > counting properly on cursor fbs:
> > https://patchwork.freedesktop.org/patch/266138/
> > https://patchwork.freedesktop.org/patch/268298/
> > It looks like gamma may need similar treatment:
> > https://bugs.freedesktop.org/show_bug.cgi?id=3D108917
> >
> > Alex
> >
> >
> > > -Daniel
> > >
> > > > Best regards,
> > > > Tomasz
> > > >
> > > > >
> > > > > Helen
> > > > >
> > > > > >
> > > > > > Best regards,
> > > > > > Tomasz
> > > > > >
> > > > > >> Or do you suggest another name? I am not familiar with vulkan =
terminology.
> > > > > >>
> > > > > >>
> > > > > >> Thanks
> > > > > >> Helen
> > > > > >>
> > > > > >>>
> > > > > >>>>
> > > > > >>>> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collab=
ora.com>
> > > > > >>>> [prepared for upstream]
> > > > > >>>> Signed-off-by: Helen Koike <helen.koike@collabora.com>
> > > > > >>>>
> > > > > >>>> ---
> > > > > >>>> Hi,
> > > > > >>>>
> > > > > >>>> This patch introduces the ASYNC_UPDATE cap, which originated=
 from the
> > > > > >>>> discussion regarding DRM_MODE_ATOMIC_AMEND on [1], to allow =
user to
> > > > > >>>> figure that async_update exists.
> > > > > >>>>
> > > > > >>>> This was tested using a small program that exercises the uAP=
I for easy
> > > > > >>>> sanity testing. The program was created by Alexandros and mo=
dified by
> > > > > >>>> Enric to test the capability flag [2].
> > > > > >>>>
> > > > > >>>> The test worked on a rockchip Ficus v1.1 board on top of mai=
nline plus
> > > > > >>>> the patch to update cursors asynchronously through atomic pl=
us the patch
> > > > > >>>> that introduces the ATOMIC_AMEND flag for the drm/rockchip d=
river.
> > > > > >>>>
> > > > > >>>> To test, just build the program and use the --atomic flag to=
 use the cursor
> > > > > >>>> plane with the ATOMIC_AMEND flag. E.g.
> > > > > >>>>
> > > > > >>>>   drm_cursor --atomic
> > > > > >>>>
> > > > > >>>> [1] https://patchwork.freedesktop.org/patch/243088/
> > > > > >>>> [2] https://gitlab.collabora.com/eballetbo/drm-cursor/commit=
s/async-capability
> > > > > >>>>
> > > > > >>>> Thanks
> > > > > >>>> Helen
> > > > > >>>>
> > > > > >>>>
> > > > > >>>>  drivers/gpu/drm/drm_ioctl.c | 11 +++++++++++
> > > > > >>>>  include/uapi/drm/drm.h      |  1 +
> > > > > >>>>  2 files changed, 12 insertions(+)
> > > > > >>>>
> > > > > >>>> diff --git a/drivers/gpu/drm/drm_ioctl.c b/drivers/gpu/drm/d=
rm_ioctl.c
> > > > > >>>> index 94bd872d56c4..4a7e0f874171 100644
> > > > > >>>> --- a/drivers/gpu/drm/drm_ioctl.c
> > > > > >>>> +++ b/drivers/gpu/drm/drm_ioctl.c
> > > > > >>>> @@ -31,6 +31,7 @@
> > > > > >>>>  #include <drm/drm_ioctl.h>
> > > > > >>>>  #include <drm/drmP.h>
> > > > > >>>>  #include <drm/drm_auth.h>
> > > > > >>>> +#include <drm/drm_modeset_helper_vtables.h>
> > > > > >>>>  #include "drm_legacy.h"
> > > > > >>>>  #include "drm_internal.h"
> > > > > >>>>  #include "drm_crtc_internal.h"
> > > > > >>>> @@ -229,6 +230,7 @@ static int drm_getcap(struct drm_device =
*dev, void *data, struct drm_file *file_
> > > > > >>>>  {
> > > > > >>>>      struct drm_get_cap *req =3D data;
> > > > > >>>>      struct drm_crtc *crtc;
> > > > > >>>> +    struct drm_plane *plane;
> > > > > >>>>
> > > > > >>>>      req->value =3D 0;
> > > > > >>>>
> > > > > >>>> @@ -292,6 +294,15 @@ static int drm_getcap(struct drm_device=
 *dev, void *data, struct drm_file *file_
> > > > > >>>>      case DRM_CAP_CRTC_IN_VBLANK_EVENT:
> > > > > >>>>              req->value =3D 1;
> > > > > >>>>              break;
> > > > > >>>> +    case DRM_CAP_ASYNC_UPDATE:
> > > > > >>>> +            req->value =3D 1;
> > > > > >>>> +            list_for_each_entry(plane, &dev->mode_config.pl=
ane_list, head) {
> > > > > >>>> +                    if (!plane->helper_private->atomic_asyn=
c_update) {
> > > > > >>>> +                            req->value =3D 0;
> > > > > >>>> +                            break;
> > > > > >>>> +                    }
> > > > > >>>> +            }
> > > > > >>>> +            break;
> > > > > >>>>      default:
> > > > > >>>>              return -EINVAL;
> > > > > >>>>      }
> > > > > >>>> diff --git a/include/uapi/drm/drm.h b/include/uapi/drm/drm.h
> > > > > >>>> index 300f336633f2..ff01540cbb1d 100644
> > > > > >>>> --- a/include/uapi/drm/drm.h
> > > > > >>>> +++ b/include/uapi/drm/drm.h
> > > > > >>>> @@ -649,6 +649,7 @@ struct drm_gem_open {
> > > > > >>>>  #define DRM_CAP_PAGE_FLIP_TARGET    0x11
> > > > > >>>>  #define DRM_CAP_CRTC_IN_VBLANK_EVENT        0x12
> > > > > >>>>  #define DRM_CAP_SYNCOBJ             0x13
> > > > > >>>> +#define DRM_CAP_ASYNC_UPDATE                0x14
> > > > > >>>>
> > > > > >>>>  /** DRM_IOCTL_GET_CAP ioctl argument type */
> > > > > >>>>  struct drm_get_cap {
> > > > > >>>> --
> > > > > >>>> 2.19.1
> > > > > >>>>
> > > > > >>>> _______________________________________________
> > > > > >>>> dri-devel mailing list
> > > > > >>>> dri-devel@lists.freedesktop.org
> > > > > >>>> https://lists.freedesktop.org/mailman/listinfo/dri-devel
> > > > > >>>
> > > > _______________________________________________
> > > > dri-devel mailing list
> > > > dri-devel@lists.freedesktop.org
> > > > https://lists.freedesktop.org/mailman/listinfo/dri-devel
> > >
> > >
> > >
> > > --
> > > Daniel Vetter
> > > Software Engineer, Intel Corporation
> > > +41 (0) 79 365 57 48 - http://blog.ffwll.ch
> > > _______________________________________________
> > > dri-devel mailing list
> > > dri-devel@lists.freedesktop.org
> > > https://lists.freedesktop.org/mailman/listinfo/dri-devel
>
>
>
> --
> Daniel Vetter
> Software Engineer, Intel Corporation
> +41 (0) 79 365 57 48 - http://blog.ffwll.ch
