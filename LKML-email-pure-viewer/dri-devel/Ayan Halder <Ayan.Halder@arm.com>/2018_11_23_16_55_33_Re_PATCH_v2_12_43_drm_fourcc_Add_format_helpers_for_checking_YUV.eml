Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:36:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 85B8B58037D;
	Fri, 23 Nov 2018 08:56:14 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 23 Nov 2018 08:56:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKlUxwR3bgECaK6igsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTLPTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJBHo2y?=
 =?us-ascii?q?YYgBD+UDPOZXs4bzqFQVrRumBwShH//vyiZSi3PqwaE2z/otHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3pOaYSS++1yrTDwzfZYPNSxDjy9pLIeQ0mrPyQXbN/a8zRxVMtGQzfilWf?=
 =?us-ascii?q?tJLqPymO2+sXqWib6vBsWv6oi24isgx8pCWkyMkrionMnI0Vy1bE+D13wIYvO9?=
 =?us-ascii?q?K3VlN0bsC/EJtTqyGaMJN2TtklQ2FytyY3zKANt52jfCUS1pgr2xrSZ+aaf4WG?=
 =?us-ascii?q?/B7vTvudLDRkiH5/eb+yhQ6+/Va9xuD+TMW4zVlHojZfntXRqnwA1gbf58iIR/?=
 =?us-ascii?q?dl8EeuxzWC2xzW5+xBIk05kavWJIQkz7Myi5YfrUHOEjHsl0j1kKCbc1sr9vam?=
 =?us-ascii?q?6+v9ZLjtu4WSOJVuig7kN6Qjgsy/Dvo8MggJR2Wb5+u826P5/UHjQ7VFkOc2kq?=
 =?us-ascii?q?/Hv5DeP8gbobS5AwBN3oYi7RawESum3cwGkXUbKF9JYg+Lgob3N13UPfz1Duuz?=
 =?us-ascii?q?j06tnTpp3/zGO6fuApTJLnjNirfherN95lZYyAoyy9Bf+p1VBqgCIP3tQE/xss?=
 =?us-ascii?q?LXDhsgPwyzzefnDsty1pkFVGKRDa+WLrnSvUWL5u0xOemMYpEauDLnJ/gi/f7u?=
 =?us-ascii?q?gmc1mUUBcqmxwZsXdHe4E+xiI0WYYnrjnM0NEGgXvgclSOzqiVuCUSNcZnqoXq?=
 =?us-ascii?q?I84C07B5yiDYvZWo+th7mB1j+hHpJKfmBGFkyMEXDweoWEQfgMaT6SLdVmkjAe?=
 =?us-ascii?q?VbihVpUu1RehtALhz7pnL+zU+jAXtJ751dh14fHTmg829TBuE8ud1GSNRXlunm?=
 =?us-ascii?q?wUXz82wLx/oUtlx1eB1qh3neZUFd9U5/NPVAc6MoXRz+h7C9D0RwLAcc2FSFeg?=
 =?us-ascii?q?QtW6Hz4xSsg9zMMJY0Z4A9+ilAzM3zK2A78JkLyGHIY78rnc33j2JMZx0WzG27?=
 =?us-ascii?q?Mjj1Q9RstPNGumhrNw9gTJBo7JlVmZmLiudagGwCHN82KDx3KUvE5ESA5wTbnF?=
 =?us-ascii?q?XXcHa0vVt9v54FnOT7uvCbs9NAtBxtWPKq9Lat3vkFVHS+3vONXYY2KthWiwAQ?=
 =?us-ascii?q?yEya+LbIrvY28dxjnSCFAYkwAP+naLLRUxCT2/o23AFjBuFUjgY0X38eZgrnO3?=
 =?us-ascii?q?SUs0zwKPb01lzLe1/h8VhfqBS/IcxL4EuSEhqylqE1a5xd7ZF92Apw95dqVGfd?=
 =?us-ascii?q?w9+EtH1X7etwFlI5OvNb5iiUAEfwR3pUzu0Q53BZtGkcUxqHMqzQxyKb+X0V9b?=
 =?us-ascii?q?djOY24zwNaPTKmXo4B+vbKvW0EnE0NmK4qcP9Og4q1L7sQG1F0oi9nJn08VV03?=
 =?us-ascii?q?qc/JnKEBAeUZXrUkYz9hh6ob7abzI554PV031sLKa1viXD29IvGOsq1BKgc81D?=
 =?us-ascii?q?P6ODEQ/4C9caCNS2KOw2h1ipaQoJM/pW9KEqMMKpafuH1LSwM+Z9gT2pl2JH4I?=
 =?us-ascii?q?N60kKS7Cd8Tu/I35AYw/CXxAeHVjH8jEu/vcDzg4xLeTYSHm+nwyj+GIFRfrFy?=
 =?us-ascii?q?fZoMCWq2I8y3289yiIL3V39Z9F6sHVUG2MCydBqWblz92xBQ1EsNrXymnyu40y?=
 =?us-ascii?q?J7kzUzoqWD2yzOxvzodAAbNW5TWGlikVDsLJCuj9AbQEendRIpmwai5UrgwahU?=
 =?us-ascii?q?ur5/L2jKTUhUZSf2K3xtXbWqtrqFZc5C85cosSRRUOShblGWUL/9ox0G0yz9G2?=
 =?us-ascii?q?tS3iw0dzavup/hhRx1lHqdLGpvrHreYcxxxRbf6MbcRPJLxToGWS94hCLTBli9?=
 =?us-ascii?q?Odmp4NqVm43CsuC4S2KuSJlTfTP3woOHsSux/XdqDgGnn/Cvht3nFhA30S3h2N?=
 =?us-ascii?q?lwViXIrxH8bpPw16ugMuJnfUhoBFni5Mp8AYx+loowhJcN2XkVnJmV/HwHkXvt?=
 =?us-ascii?q?PtVfw67xcH0NRTsTyd7P/AflwFFjLm6Ox4/hVnSS2Mxha8O4YmMX3CIw9MRKCK?=
 =?us-ascii?q?aS7LxZkip5uFu4rQTNYfdjmjcR0+ch6Hkfg+sRogoi0j2dAqwOHUlfJSHslA6H?=
 =?us-ascii?q?79GkoKVXeWaga76w1EVlkNClDbGCpBxcWXnjdpcjGy9w8ttwMFbW3HLv7YHkfc?=
 =?us-ascii?q?HabcgPuR2MjxfAk+9VJYo0lvoLhipoI3jxvHM7xO4gkRxhw4u6s5OZJGV386K0?=
 =?us-ascii?q?GRpYNjzzZ8MO9TDhl6densCK34+xGpVtACkEXJztTfiwCjIdqeznNxqSED07sn?=
 =?us-ascii?q?qbBb3fHQqF5EZntX3PFY2rN2qMJHkY1thiQBidJEpCgAEbRjk6n5g5Fhy0y8zl?=
 =?us-ascii?q?akt2+jcR5lvgoBtW1u1oLwX/UnvYpAqwcTg7Up+fLB5L7g1Y40fVLNeT7uZyHy?=
 =?us-ascii?q?Fe452goxaBKm2dZwRUE24JXlaICEzkPrmr/dPA6fSXBvKiL/vSZrWDse5eWO2N?=
 =?us-ascii?q?xZ2xyYtq5SqMOt+MPnl/DP07x0xDUmpiG8nCnzUPSioXlz/CbsKBpRe8/DF3od?=
 =?us-ascii?q?678PjxRA3v4o6PAaNIMdpz4xC2nbuDN+mIiSd5LjZYy4oMxWLSx7gZxlISkCZu?=
 =?us-ascii?q?dz+iEbkbsS7NTaTQmrJYDhIBaiNzMtdI4Lw43gVXJcHbjdb13KZijvEpE1dFSU?=
 =?us-ascii?q?DhmsaxaMwKPW69NVDHBEWKNLicJj3L2cb3YayiRr1KkeVUrAa9uTKaE0/lIzSC?=
 =?us-ascii?q?mCPlVxGpMeFQki6bOAZSt526chZoEWLjVs7pagWnMN9rij072ac7hm7ROm4GLz?=
 =?us-ascii?q?d9c1lBrrmR7S5DhvV/GmpB7mdqLOWemiaZ6fXYJYgSsfdxHit0kOda6mwgy7RJ?=
 =?us-ascii?q?9CFEWOB1mCzKo95yolGml/ODxSZ9XBVSqjZEmoSLsF5mOaXY8JlARHnF8AgM7W?=
 =?us-ascii?q?WWFxQFud9lBsfztKBXz9jFjLjzJyta89LI4cscANDZKcKdP3onNBrpGTjUAxME?=
 =?us-ascii?q?TD6rL27fgUNdneqW9n2UqJg6t5ftlIAPSr9dSFw6CPcaBl55E9wFJZckFg8jxI?=
 =?us-ascii?q?aSkcpAxn21rRDVR8JFpZPGHqaKCOjrbjWehrhNYxgP3qj7LKwZMYrn301kLFJ9?=
 =?us-ascii?q?mdKZNVDXWIVksyRnJi89pElA6jAqZ3w63QTFYweh7WU7HOSx2BUxj10tMqwW6D?=
 =?us-ascii?q?7w7gJvdRLxrywqnRx0wI29jA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAD5L/hbh0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgTBQaXMECycKhzYDkARKgg0UlyeBJANMEwEYCwgBhECEGiI2Bw0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgIBAQEBNwYBAREbCwEEAQkBA?=
 =?us-ascii?q?QEBCCEVEAMMGAEKJQIEDgUFgxwBgWkDDQgBAgEBCpwNAooHgh+CdgEBBYR3GII?=
 =?us-ascii?q?GAwWMCYFXP4NuBy6DGwEEgV6DNYImixOUcQcCgiCEXIYYhBAjkQiNQ4pGAgQCB?=
 =?us-ascii?q?AUCDQEBBYFNC4F7MxojUIJsghs1gziFFIU+coEFAQEhimEBgR4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAAD5L/hbh0O0hNFjHAEBAQQBAQcEAQGBUwUBAQsBgTB?=
 =?us-ascii?q?QaXMECycKhzYDkARKgg0UlyeBJANMEwEYCwgBhECEGiI2Bw0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQgNCQgpIwyCNiQBgmIBAgIBAQEBNwYBAREbCwEEAQkBAQEBCCEVEAMMGAE?=
 =?us-ascii?q?KJQIEDgUFgxwBgWkDDQgBAgEBCpwNAooHgh+CdgEBBYR3GIIGAwWMCYFXP4NuB?=
 =?us-ascii?q?y6DGwEEgV6DNYImixOUcQcCgiCEXIYYhBAjkQiNQ4pGAgQCBAUCDQEBBYFNC4F?=
 =?us-ascii?q?7MxojUIJsghs1gziFFIU+coEFAQEhimEBgR4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,270,1539673200"; 
   d="scan'208";a="54555309"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 08:55:41 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2633108AbeKXDkj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 22:40:39 -0500
Received: from mail-eopbgr20087.outbound.protection.outlook.com ([40.107.2.87]:47391
        "EHLO EUR02-VE1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1729195AbeKXDkj (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 22:40:39 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=armh.onmicrosoft.com;
 s=selector1-arm-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fWSZmG+1QfJIZmk5rMCZ/xleZlSQoFgfbd9dKaeUxnc=;
 b=arU9WOBmy2i/Xdh0E8cxLoNe7OPhg17q5WBBF/WgaH/YU7hi2jFRn07a1GPBglvMpq7v1Fegt5n1L8V5FMdMgP2meCljZNCwrau59XwYx82pkld/N0dnGJB/oberWDArNkumXZdQyZei+TpzFq6AKjZbCBCSa6licT5fsUg81ig=
Received: from AM0PR08MB3891.eurprd08.prod.outlook.com (20.178.82.147) by
 AM0PR08MB3009.eurprd08.prod.outlook.com (52.134.92.158) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1361.14; Fri, 23 Nov 2018 16:55:34 +0000
Received: from AM0PR08MB3891.eurprd08.prod.outlook.com
 ([fe80::896a:710:2a8c:e2fa]) by AM0PR08MB3891.eurprd08.prod.outlook.com
 ([fe80::896a:710:2a8c:e2fa%5]) with mapi id 15.20.1361.018; Fri, 23 Nov 2018
 16:55:34 +0000
From: Ayan Halder <Ayan.Halder@arm.com>
To: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
CC: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        "linux-sunxi@googlegroups.com" <linux-sunxi@googlegroups.com>,
        David Airlie <airlied@linux.ie>, Chen-Yu Tsai <wens@csie.org>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Sean Paul <sean@poorly.run>, nd <nd@arm.com>
Subject: Re: [PATCH v2 12/43] drm/fourcc: Add format helpers for checking YUV
 sub-sampling
Thread-Topic: [PATCH v2 12/43] drm/fourcc: Add format helpers for checking YUV
 sub-sampling
Thread-Index: AQHUgw6x+GJcZGDkWU2cbV9Ru55/5qVdlJSA
Date: Fri, 23 Nov 2018 16:55:33 +0000
Message-ID: <20181123165532.GA22326@arm.com>
References: <20181123092515.2511-1-paul.kocialkowski@bootlin.com>
 <20181123092515.2511-13-paul.kocialkowski@bootlin.com>
In-Reply-To: <20181123092515.2511-13-paul.kocialkowski@bootlin.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: CWLP265CA0041.GBRP265.PROD.OUTLOOK.COM
 (2603:10a6:401:11::29) To AM0PR08MB3891.eurprd08.prod.outlook.com
 (2603:10a6:208:109::19)
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [217.140.106.54]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;AM0PR08MB3009;6:qHFK1up8ZcoN8pWhM4ZWzUAh5meQaiyB02NLc2/jkX3L2VbzWLXwUtT50GS06F5+CjryfX4t2CxljzKjd5v0biLf4M72qRRT0VIEgf63P85g/yCvMMFeOGY8Wk62+UFy8YDwfOzjx4gSKktjQDRGRfalLd8RN4ThFH1vhJJE0Jyapbb9jJKegwdva+36IDQNpg811U2YjfqM1dy7HRlSuf395G279pR8fEJIos9FU24ovXB4cx4r9zowrCClyWlJqQZk14rFyv0MpZ3WNMAsQrTPbqN2LdzjrDRt02wnelNVQd7bX5uEiKah1c59MeZ8puPokALGVKw4lvse1qKfp5apsUv91rOnrb0pFporDE2Gb5LVHsiMFXa/1iWSt7pM1xa1GaFEIawcGPF30PQydZb7M4KEZANL+hZLZipixUIwF9blxEk91p0PZyKovAThUmuTHktMSryCfIRQmkeJIg==;5:3OWpaJmsUfcPX61soo15dB8iy/TURdp+ghiVzHpd+m2V8klF0WD50+4tNsksV/y2lqF9vPD2xmOvPyyyokZeHYFvgDs8/sLgnlkqkSbvp5OFZdfFyta82PogSvhEbhTr9grelo7CiSLrRbJyfCq8V7Bi4StJJC2h9vgeSWSwKPs=;7:Qt51cRMKJEeZGrCr7MmPZexD/wMSKJ2lU5E9h9f522D0tRKc4+nP5z2x10fThrEslcLyhYDEeBY/lp89+0ZQSLBOLSr2gJ30xz98pOqHzrSOOYga9xWgEAolCUr6jyrXkKJRO9FxH81j8d6OqpXjvw==
x-ms-office365-filtering-correlation-id: ff3e7c70-4f37-44dd-4b9e-08d651647bdf
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(2017052603328)(7153060)(7193020);SRVR:AM0PR08MB3009;
x-ms-traffictypediagnostic: AM0PR08MB3009:
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Ayan.Halder@arm.com; 
nodisclaimer: True
x-microsoft-antispam-prvs: <AM0PR08MB30093EADB8B5B61CC96CD3ADE4D40@AM0PR08MB3009.eurprd08.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(93006095)(93001095)(3231442)(944501410)(52105112)(10201501046)(3002001)(6055026)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123562045)(20161123560045)(20161123558120)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:AM0PR08MB3009;BCL:0;PCL:0;RULEID:;SRVR:AM0PR08MB3009;
x-forefront-prvs: 086597191B
x-forefront-antispam-report: SFV:NSPM;SFS:(10009020)(376002)(346002)(136003)(366004)(39860400002)(396003)(199004)(189003)(305945005)(8676002)(486006)(6436002)(44832011)(102836004)(186003)(76176011)(26005)(2900100001)(6506007)(386003)(81166006)(52116002)(8936002)(81156014)(2906002)(99286004)(54906003)(7736002)(5660300001)(33656002)(316002)(7416002)(6246003)(72206003)(68736007)(53936002)(966005)(4326008)(256004)(11346002)(446003)(6512007)(478600001)(6306002)(3846002)(6486002)(71200400001)(6116002)(71190400001)(25786009)(36756003)(1076002)(229853002)(14454004)(6916009)(86362001)(105586002)(97736004)(476003)(106356001)(66066001)(2616005);DIR:OUT;SFP:1101;SCL:1;SRVR:AM0PR08MB3009;H:AM0PR08MB3891.eurprd08.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: t/ID87/ldXSFPMGLgcLLMh2iGCtYx4BT19WIBW6RohktuEILqN0Yfg5Uz4UmeyEBinhOhlvhw/PN1oO/EbqqXbz9Be35A3RXylcsBwizJb75ERPH4qiIdWsqRoSHhm3MF0Fo6wac1zQJokcFo5NpD2Wc1EN2bQDmqpEUZLhzHSM0HLsROSwdh05b0ZulFQLtqANWhHpWh+Ubpid94MoIgHXeP0l4jHGUIRlzpO8TsnTVsgm8T+OS+UjBj5wG6hc4H5Cq3BhCmWnyi3nB0TqOdVkEMBtY1ZOyXQ5d5m35mYt6KiwKtZEMvUjnWAVrSIpGs9J6ZMXqzfmIJoo6lNUDKThuJMnOUIl1KeED2tfQc8o=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-ID: <0AB3AA8CECED38488784F7C65BBD27BF@eurprd08.prod.outlook.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: arm.com
X-MS-Exchange-CrossTenant-Network-Message-Id: ff3e7c70-4f37-44dd-4b9e-08d651647bdf
X-MS-Exchange-CrossTenant-originalarrivaltime: 23 Nov 2018 16:55:33.9127
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: f34e5979-57d9-4aaa-ad4d-b122a662184d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: AM0PR08MB3009
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 23, 2018 at 10:24:44AM +0100, Paul Kocialkowski wrote:

Hi Paul,

> This introduces new format helpers that use the previously-introduced
> format info helpers for checking YUV sub-sampling.
>=20
> Only the format fourcc is required by these helpers and the formats are
> iterated from the list.
>=20
> Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
> ---
>  drivers/gpu/drm/drm_fourcc.c | 105 +++++++++++++++++++++++++++++++++++
>  include/drm/drm_fourcc.h     |   5 ++
>  2 files changed, 110 insertions(+)
>=20
> diff --git a/drivers/gpu/drm/drm_fourcc.c b/drivers/gpu/drm/drm_fourcc.c
> index b56e773f9f63..6d395c586ad5 100644
> --- a/drivers/gpu/drm/drm_fourcc.c
> +++ b/drivers/gpu/drm/drm_fourcc.c
> @@ -492,6 +492,111 @@ bool drm_format_is_yuv_planar(uint32_t format)
>  }
>  EXPORT_SYMBOL(drm_format_is_yuv_planar);
> =20
> +/**
> + * drm_format_is_yuv_sampling_410 - check that the format is a YUV forma=
t with
> + * 4:1:0 sub-sampling
> + * @format: pixel format
> + *
> + * Returns:
> + * A boolean indicating whether the format is a YUV format with 4:1:0
> + * sub-sampling.
> + */
> +bool drm_format_is_yuv_sampling_410(uint32_t format)
> +{
> +	const struct drm_format_info *info;
> +
> +	info =3D drm_format_info(format);
> +	if (!info)
> +		return false;
> +
> +	return drm_format_info_is_yuv_sampling_410(info);
> +}
> +EXPORT_SYMBOL(drm_format_is_yuv_sampling_410);
> +
> +/**
> + * drm_format_is_yuv_sampling_411 - check that the format is a YUV forma=
t with
> + * 4:1:1 sub-sampling
> + * @format: pixel format
> + *
> + * Returns:
> + * A boolean indicating whether the format is a YUV format with 4:1:1
> + * sub-sampling.
> + */
> +bool drm_format_is_yuv_sampling_411(uint32_t format)
> +{
> +	const struct drm_format_info *info;
> +
> +	info =3D drm_format_info(format);
> +	if (!info)
> +		return false;
> +
> +	return drm_format_info_is_yuv_sampling_411(info);
> +}
> +EXPORT_SYMBOL(drm_format_is_yuv_sampling_411);
> +
> +/**
> + * drm_format_is_yuv_sampling_420 - check that the format is a YUV forma=
t with
> + * 4:2:0 sub-sampling
> + * @format: pixel format
> + *
> + * Returns:
> + * A boolean indicating whether the format is a YUV format with 4:2:0
> + * sub-sampling.
> + */
> +bool drm_format_is_yuv_sampling_420(uint32_t format)
> +{
> +	const struct drm_format_info *info;
> +
> +	info =3D drm_format_info(format);
> +	if (!info)
> +		return false;
> +
> +	return drm_format_info_is_yuv_sampling_420(info);
> +}
> +EXPORT_SYMBOL(drm_format_is_yuv_sampling_420);
> +
> +/**
> + * drm_format_is_yuv_sampling_422 - check that the format is a YUV forma=
t with
> + * 4:2:2 sub-sampling
> + * @format: pixel format
> + *
> + * Returns:
> + * A boolean indicating whether the format is a YUV format with 4:2:2
> + * sub-sampling.
> + */
> +bool drm_format_is_yuv_sampling_422(uint32_t format)
> +{
> +	const struct drm_format_info *info;
> +
> +	info =3D drm_format_info(format);
> +	if (!info)
> +		return false;
> +
> +	return drm_format_info_is_yuv_sampling_422(info);
> +}
> +EXPORT_SYMBOL(drm_format_is_yuv_sampling_422);
> +
> +/**
> + * drm_format_is_yuv_sampling_444 - check that the format is a YUV forma=
t with
> + * 4:4:4 sub-sampling
> + * @format: pixel format
> + *
> + * Returns:
> + * A boolean indicating whether the format is a YUV format with 4:4:4
> + * sub-sampling.
> + */
> +bool drm_format_is_yuv_sampling_444(uint32_t format)
> +{
> +	const struct drm_format_info *info;
> +
> +	info =3D drm_format_info(format);
> +	if (!info)
> +		return false;
> +
> +	return drm_format_info_is_yuv_sampling_444(info);
> +}
> +EXPORT_SYMBOL(drm_format_is_yuv_sampling_444);
> +
>  /**
>   * drm_format_info_block_width - width in pixels of block.
>   * @info: pixel format info
> diff --git a/include/drm/drm_fourcc.h b/include/drm/drm_fourcc.h
> index d170b7b323f7..cf082d8b6ad4 100644
> --- a/include/drm/drm_fourcc.h
> +++ b/include/drm/drm_fourcc.h
> @@ -278,6 +278,11 @@ bool drm_format_is_yuv(uint32_t format);
>  bool drm_format_is_yuv_packed(uint32_t format);
>  bool drm_format_is_yuv_semiplanar(uint32_t format);
>  bool drm_format_is_yuv_planar(uint32_t format);
> +bool drm_format_is_yuv_sampling_410(uint32_t format);
> +bool drm_format_is_yuv_sampling_411(uint32_t format);
> +bool drm_format_is_yuv_sampling_420(uint32_t format);
> +bool drm_format_is_yuv_sampling_422(uint32_t format);
> +bool drm_format_is_yuv_sampling_444(uint32_t format);
>  unsigned int drm_format_info_block_width(const struct drm_format_info *i=
nfo,
>  					 int plane);
>  unsigned int drm_format_info_block_height(const struct drm_format_info *=
info,
> --=20
> 2.19.1
>=20
From patches [PATCH v2 08/43] till [PATCH v2 12/43], looks good to me.

How about clubbing all the drm_format_helper functions together in a
separate file (call it drm_fourcc_helper.c)? This way, we could
keep the __drm_format_info[] only drm_fourcc.c.

> _______________________________________________
> dri-devel mailing list
> dri-devel@lists.freedesktop.org
> https://lists.freedesktop.org/mailman/listinfo/dri-devel
