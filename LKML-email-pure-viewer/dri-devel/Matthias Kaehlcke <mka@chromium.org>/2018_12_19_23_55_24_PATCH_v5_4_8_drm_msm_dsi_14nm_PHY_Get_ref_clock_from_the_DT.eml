Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:44:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EF4185805F0;
	Wed, 19 Dec 2018 15:56:09 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 15:56:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A/SYv8BUsrkUxrMNUoXVnIEOQlbrV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhKHuKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeQPPuhWqIvyp1UBohWxHgmsHOHixyRUinL1x6A2z/4sHR3a0AEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKVu661rXIzSnDb/NXwzj985XDfBU7rv6SXbJwddbeyUoxGAjYiViQ?=
 =?us-ascii?q?rI/lMCmO2+sRs2ib9e1gVeeui246rgF9uD+vxt0jioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1TFR3bcOqHZdOrS2WKoh7Tt84T2xpuis20qMKtJ+lcCQWzZkr2h7SZOCCfoSW?=
 =?us-ascii?q?/h7vSuOcLSp9iX9neL+wnRO//EauyuD9SMa51UhGojdYndTJsn0A2R7e58eBR/?=
 =?us-ascii?q?Bg5EmuwyyP2BrW6uxcIUA7i67bK5k5z74umZocr17DEjX1mErolq+WcFsr+uyy?=
 =?us-ascii?q?5+TgeLXmqYeQN45yig7gLqQjgtKzDfg8PwQUQmSW9/qw2Kf+8UD6XLlGlPw7n6?=
 =?us-ascii?q?vBvJDfP8sbp6q5AwFP0oYk7hayFzOm0NUenXkaI1NJYRGHgJbzO1HIPv/4Ce6z?=
 =?us-ascii?q?g1OikTdt2f/GJKbsAovCLnfdirftZ7V95FBGyAo1099f44hYCrYbIPL8QkPxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENF91oIdWW2RGKOYP77SvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JsdcGq4Eeh+I0WFfXrshc8MEWcQsQo/UOzlklqCXSRTZ3avRa?=
 =?us-ascii?q?084D47BZmiDYfCQICtnbOA0D26Hp1QemBJFFSMHW30eIWDXvcGcDiSLdN5kjwY?=
 =?us-ascii?q?SbihTJcs2gu1tA/6zLpnLfDY+jcCupLhz9V14+zTlRcv9T17Fcid0meNT31qkW?=
 =?us-ascii?q?MMXTM5wKd/oUllwFeZzad4m+BYFcBU5/5RUQc1L5jcw/Z+C9DzQA3BeNiJRU2i?=
 =?us-ascii?q?QtWnBzExU90wz8UPY0Z7B9WtkBTD0zC2DL8SkryBHIY0/b7E33jtO8Z9zG7L27?=
 =?us-ascii?q?Q7gFk4XMRDL22mibR59wjIGYHJlUKVl6KpdaQZ2C7A72ODzWuIvEFFXw98S6TF?=
 =?us-ascii?q?XXYDZkTIqdT1/F/NT7irCb4/KAtO1daCKrdWat3ulVhJWe3sOMrAbG6rm2e/Hx?=
 =?us-ascii?q?CIxqiSY4rsYGgd2CTdCE4ZkwEc53qGNA4+Bju/rGLaFjBhCVXvY0b0++lktHy7?=
 =?us-ascii?q?VlM0zx2Nb0B5y7q1+xsVhfuAS/MT3rMIojshpy9zHFan29LWCtyApwV6caVYYN?=
 =?us-ascii?q?M95kpH1G3Duwx8OJygM75thloEfwtruEPu0g19Cp9cnsgysHMq0A1yJLqC31NF?=
 =?us-ascii?q?aTyZ0o7/O73NJmbp4RCgdrTZ2lfd0NaR5KcC8/A4q1TlvAG0GUsu6XRn099J03?=
 =?us-ascii?q?SC4pXGFhYdUZX0Ukwv7Rh1u6naYjUh54PTzXBtMbS0viXe1N4zBeolygyvf9FQ?=
 =?us-ascii?q?MK6fEA/yEssaB9WhKeAwmlipaA4EM/5W9KIuI8ymcP6G0raxPOl8hDKmkXhH4I?=
 =?us-ascii?q?dl30KW9ipzVvTH34wYzPGfxAeHUSnzjE2gsszuhY9LfzUSEXehxij+A45RYLZ/?=
 =?us-ascii?q?fYIKCWeoPs22yc9yh5/rW35E6lGjA0kK19OueRqXd1b9xxFf1VwLoXy7niu11z?=
 =?us-ascii?q?x1kzAzoqufxiDO2PnidBwcN25PRWlii0rsIIeug9AbWkiocxYmlB+/6UnmwKhb?=
 =?us-ascii?q?obx1L3PPTkdQYyj2M2ZiX7OytrWYec5P65AosSJNXOSne1+aSb39oxoc0yz9GW?=
 =?us-ascii?q?tT3zQ7dzCsupXkkB12kmOdLHBvrHXHfcF83wvQ5NvZRfRJxDoJWDF4iSXLBli7?=
 =?us-ascii?q?J9So/c+bl5DZvuC8VmKhUIZecS3qzYOGqSu66ndmARy5n/CvhNLnFRI23jP819?=
 =?us-ascii?q?lvTS/ItgrzYpH316SmNuJqZkpoC0X968ZgGoF+j5E/hJcf2XUBgpWV/HwHkXr8?=
 =?us-ascii?q?MNlB2KL+amYNSiAPw9LP/Afl30hjJGqTx43lTnWd3tdhZ96ib2MT2yI97NpFBL?=
 =?us-ascii?q?2a7bNahit1vkS3rRjKbvdjhDcdxuAj6Hobg+EPpQoswT+RArEUHUlEIyPskw6E?=
 =?us-ascii?q?4My5rKVSfGyva6S/1FJindC9C7GPuh1cWHH8eps4HC5/9MN/ME/X0H3o64HpY9?=
 =?us-ascii?q?3QbdMVth2JnBbMlelVKJQtlvUUgSprI37yvXogy+QjlxxhwYm6vJSbK2Vq5K+2?=
 =?us-ascii?q?GQRXNjrxZ8MO4D3tibtek92S34CuGJVhBzoKUIHpTfKuDDIdq/DnOxySHz07r3?=
 =?us-ascii?q?eRAaDfEhOH6Ed6s3LPFIimN3ONK3kc09piXwORJFBFjAAXQTU6nYM5Fgawy8z6?=
 =?us-ascii?q?a0p54jER5ljlqhpD0O5oNh//UnvBqwescDs7VJ+fLB9O5AFY+0jVKdCe7v50Hy?=
 =?us-ascii?q?xA/pyhqxGNKnWGZwtSC2EFQFeEB1flPrmh/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBmzUAVS0XlyHOb86avhu8+Td3rs?=
 =?us-ascii?q?ew8Pv1QgLv+JCPBqBWMdVu/RC2nKiCO/SRhCZ/NTZXyJcMyWXUx7gY2V4Ykztu?=
 =?us-ascii?q?eCW1EbQcqS7NS7rdlbVKDxEAcSN8KstJ47g43glMIsPbjtL11rhljv86EVtFVF?=
 =?us-ascii?q?rhmt23aswOOW2yKFTHBEOTPrScOTLL2933Yb+7SbBIkOVUthiwtSyHHEP5IjuD?=
 =?us-ascii?q?lyfmVxa0POFIjSGbOgFeuY6nfhZsD2jjUMzpahmhPNBrij02xKU+hmnWOm4ELT?=
 =?us-ascii?q?h8b0RNo6WQ7CxChPV/Hm1B7nx9IuiFmyaW9e/YKpkNvPtvAyR0kf9a4Xsgx7tU?=
 =?us-ascii?q?6iFEWOJ6mC/IotFypFGml7rH9j0yah1E4h1PjZiI9RF4Pq/V/Z1JQ3Xs8xcE7G?=
 =?us-ascii?q?HWABMP8Z8tJtTxuqwY49nVkKP+YGNL8sjQ/MYQL8zVLt+XdnssZ16hIjneRCsI?=
 =?us-ascii?q?VySqM26X01ZamvHR+mG9rZUgrJXo3p0URekfHHk8DPBSMFl5GNUELN8jWzo+kv?=
 =?us-ascii?q?iBkdIM7HyyhBDLQYNRuZWRErq7B/n+YBmDiqJfL08Bx7/pa4sJMZbg80hjbFBg?=
 =?us-ascii?q?m8LNAUWGGZhhqzNgYkceukJS9jAqQmQt2k6jYBmq/3k7Ef+ylwQxzAxkbrJ+2i?=
 =?us-ascii?q?3r5gISL0bWpCo5iwESkNjlhTuSfXalKaS5dYpWES3xtlU0dJThTFAmPkWJgUV4?=
 =?us-ascii?q?OWKcFPpqhLx6eDUu0VeEtA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A1AABk2hpch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwEBgS+COyeMFo4diQ+OOoFzEwEBGBMBhy0iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKS9CFgGBXSQBgmIDAwECJAsBRgYJAQFQAzEBBQEcBgESBYMdgXUNAQScL?=
 =?us-ascii?q?DyMFTOKLxKHbIRBF4FAP4N1iw4CiT+CAIQZflGQDQmRViSJd4diiUiQEwIEAgQ?=
 =?us-ascii?q?FAgUPIYElgg5NMAiDJ5B8HzKBBQEBh3eFaQEB?=
X-IPAS-Result: =?us-ascii?q?A0A1AABk2hpch0O0hNFkHQEBBQEHBQGBUQgBCwEBgS+COye?=
 =?us-ascii?q?MFo4diQ+OOoFzEwEBGBMBhy0iNAkNAQMBAQEBAQECARMBAQEIDQkIKS9CFgGBX?=
 =?us-ascii?q?SQBgmIDAwECJAsBRgYJAQFQAzEBBQEcBgESBYMdgXUNAQScLDyMFTOKLxKHbIR?=
 =?us-ascii?q?BF4FAP4N1iw4CiT+CAIQZflGQDQmRViSJd4diiUiQEwIEAgQFAgUPIYElgg5NM?=
 =?us-ascii?q?AiDJ5B8HzKBBQEBh3eFaQEB?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="57618044"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 15:55:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730209AbeLSXzw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 18:55:52 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:46012 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730182AbeLSXzt (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 18:55:49 -0500
Received: by mail-pf1-f194.google.com with SMTP id g62so10558554pfd.12
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 15:55:49 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=EY1N6rx8t3eaW7PQ/P9Ram/E12rfORnATiv+M8wBb0A=;
        b=a6yHgkW7qLs4vV7+afpWcjzIOdLGLlvwV5yq/Dc8+RHGK52V5/To0J/yBa6XpTfm+u
         OTRskGhSIIN84ZB6B7dQaQ1nGlvufy/53qzMXra49vwVdZNHcdJctohhyjK4AVVqKVGB
         V642HWSGuYIyL7Ve7IR2au1CX88xKhwN4iw4Ab+3skaE3MVUBiDEgfUW/P0zDPFJwUar
         iloZFxaD6AcCZPPmp0t9cPuz9Lai0bLHTAlg5vFsumFLfgZqApp60PbqnRkKKVvaGbAj
         jtS2rgWuFb/tl2Wo5V/1MJ/UzPwCrTqb/mupX+brS16hPlrXPytgOxMqEG16Brrl/tKe
         3ugw==
X-Gm-Message-State: AA+aEWYxEYoeu2bLiho/fWgDBQBwwjrU1DnnC/0+V0kJAP/bT5yHvy/1
        Z3tMF6njPvzCccbutHsdzh4CCg==
X-Google-Smtp-Source: AFSGD/Ukcf+yv3BwkcRNMuA9qjmhs9vB1UxHkHHHSJ9hjdTmRAjQ5td7jkKl5Ye9UWWDJhgTWHhbeg==
X-Received: by 2002:a62:6ec8:: with SMTP id j191mr22316872pfc.198.1545263748782;
        Wed, 19 Dec 2018 15:55:48 -0800 (PST)
Received: from mka.mtv.corp.google.com ([2620:15c:202:1:75a:3f6e:21d:9374])
        by smtp.gmail.com with ESMTPSA id t67sm37045048pfd.90.2018.12.19.15.55.46
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 19 Dec 2018 15:55:47 -0800 (PST)
From: Matthias Kaehlcke <mka@chromium.org>
To: Rob Clark <robdclark@gmail.com>, David Airlie <airlied@linux.ie>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Andy Gross <andy.gross@linaro.org>,
        David Brown <david.brown@linaro.org>
Cc: linux-arm-msm@vger.kernel.org, dri-devel@lists.freedesktop.org,
        freedreno@lists.freedesktop.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Archit Taneja <architt@codeaurora.org>,
        Sean Paul <seanpaul@chromium.org>,
        Rajesh Yadav <ryadav@codeaurora.org>,
        Douglas Anderson <dianders@chromium.org>,
        Stephen Boyd <swboyd@chromium.org>,
        Jeykumar Sankaran <jsanka@codeaurora.org>,
        Matthias Kaehlcke <mka@chromium.org>
Subject: [PATCH v5 4/8] drm/msm/dsi: 14nm PHY: Get ref clock from the DT
Date: Wed, 19 Dec 2018 15:55:24 -0800
Message-Id: <20181219235528.114830-5-mka@chromium.org>
X-Mailer: git-send-email 2.20.1.415.g653613c723-goog
In-Reply-To: <20181219235528.114830-1-mka@chromium.org>
References: <20181219235528.114830-1-mka@chromium.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Get the ref clock of the PHY from the device tree instead of
hardcoding its name and rate.

Note: This change could break old out-of-tree DTS files that
use the 14nm PHY.

Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
Reviewed-by: Douglas Anderson <dianders@chromium.org>
---
Changes in v5:
- pass the ref clock name to _register() instead of storing a point
  to the clk object in the PLL data structure

Changes in v4:
- none

Changes in v3:
- fixed check for EPROBE_DEFER
- added note to commit message about breaking old DTS files
- added 'Reviewed-by: Douglas Anderson <dianders@chromium.org>' tag

Changes in v2:
- patch added to the series
---
 drivers/gpu/drm/msm/dsi/pll/dsi_pll_14nm.c | 23 +++++++++++++++++-----
 1 file changed, 18 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/msm/dsi/pll/dsi_pll_14nm.c b/drivers/gpu/drm/msm/dsi/pll/dsi_pll_14nm.c
index 71fe60e5f01f1..9a647d93a7e0b 100644
--- a/drivers/gpu/drm/msm/dsi/pll/dsi_pll_14nm.c
+++ b/drivers/gpu/drm/msm/dsi/pll/dsi_pll_14nm.c
@@ -40,7 +40,6 @@
 
 #define NUM_PROVIDED_CLKS		2
 
-#define VCO_REF_CLK_RATE		19200000
 #define VCO_MIN_RATE			1300000000UL
 #define VCO_MAX_RATE			2600000000UL
 
@@ -591,7 +590,7 @@ static int dsi_pll_14nm_vco_set_rate(struct clk_hw *hw, unsigned long rate,
 	    parent_rate);
 
 	pll_14nm->vco_current_rate = rate;
-	pll_14nm->vco_ref_clk_rate = VCO_REF_CLK_RATE;
+	pll_14nm->vco_ref_clk_rate = parent_rate;
 
 	dsi_pll_14nm_input_init(pll_14nm);
 
@@ -947,11 +946,12 @@ static struct clk_hw *pll_14nm_postdiv_register(struct dsi_pll_14nm *pll_14nm,
 	return &pll_postdiv->hw;
 }
 
-static int pll_14nm_register(struct dsi_pll_14nm *pll_14nm)
+static int pll_14nm_register(struct dsi_pll_14nm *pll_14nm,
+			     const char *ref_clk_name)
 {
 	char clk_name[32], parent[32], vco_name[32];
 	struct clk_init_data vco_init = {
-		.parent_names = (const char *[]){ "xo" },
+		.parent_names = &ref_clk_name,
 		.num_parents = 1,
 		.name = vco_name,
 		.flags = CLK_IGNORE_UNUSED,
@@ -1050,6 +1050,8 @@ struct msm_dsi_pll *msm_dsi_pll_14nm_init(struct platform_device *pdev, int id)
 {
 	struct dsi_pll_14nm *pll_14nm;
 	struct msm_dsi_pll *pll;
+	struct clk *vco_ref_clk;
+	const char *vco_ref_clk_name;
 	int ret;
 
 	if (!pdev)
@@ -1065,6 +1067,17 @@ struct msm_dsi_pll *msm_dsi_pll_14nm_init(struct platform_device *pdev, int id)
 	pll_14nm->id = id;
 	pll_14nm_list[id] = pll_14nm;
 
+	vco_ref_clk = devm_clk_get(&pdev->dev, "ref");
+	if (IS_ERR(vco_ref_clk)) {
+		ret = PTR_ERR(vco_ref_clk);
+		if (ret != -EPROBE_DEFER)
+			dev_err(&pdev->dev, "couldn't get 'ref' clock: %d\n",
+				ret);
+		return ERR_PTR(ret);
+	}
+
+	vco_ref_clk_name = __clk_get_name(vco_ref_clk);
+
 	pll_14nm->phy_cmn_mmio = msm_ioremap(pdev, "dsi_phy", "DSI_PHY");
 	if (IS_ERR_OR_NULL(pll_14nm->phy_cmn_mmio)) {
 		dev_err(&pdev->dev, "failed to map CMN PHY base\n");
@@ -1094,7 +1107,7 @@ struct msm_dsi_pll *msm_dsi_pll_14nm_init(struct platform_device *pdev, int id)
 	pll->en_seq_cnt = 1;
 	pll->enable_seqs[0] = dsi_pll_14nm_enable_seq;
 
-	ret = pll_14nm_register(pll_14nm);
+	ret = pll_14nm_register(pll_14nm, vco_ref_clk_name);
 	if (ret) {
 		dev_err(&pdev->dev, "failed to register PLL: %d\n", ret);
 		return ERR_PTR(ret);
-- 
2.20.1.415.g653613c723-goog

