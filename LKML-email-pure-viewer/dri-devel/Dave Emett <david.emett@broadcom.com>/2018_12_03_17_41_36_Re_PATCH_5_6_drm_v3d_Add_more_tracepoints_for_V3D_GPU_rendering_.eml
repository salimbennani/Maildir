Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:56:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0F94B580375;
	Mon,  3 Dec 2018 09:44:57 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 09:44:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AzvJrAxAywIv5jQJrwwAzUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/osqwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95eWCxPAIyy?=
 =?us-ascii?q?b4UBAekcM+hGs4b9vEMOoBmlCAmwGO/i0CNEimPq0aA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?naos/6NLkMXuuow6fIyCvMb+9K2Tzg74XHbwouoe+NXb1ta8be10wvGB3ZjlWM?=
 =?us-ascii?q?soHqJCmV1uMXvGeG8+VgUuevh3Q7pAF2pzii38EhgZTKiIIN0l3I6zl1zYIvKd?=
 =?us-ascii?q?GlRkN3f8SoHIZTui2GLYd7Q8EvT3l2tComzrAKo522cSgQxJg6xhPSauaLf5WM?=
 =?us-ascii?q?7x/tUuuaPC12i2h/eL2lgha/6UigxfP4VsmzyFtKsCVFncfWtnwX1Bzc9NKHSv?=
 =?us-ascii?q?1j8UelwzqP0BrT6u5cLUA1k6rUNYIhz6YumpYPtUnPBDL6lUvogKOMa0kp+fSk?=
 =?us-ascii?q?5/7mb7jkvpOcMpV7igD6MqQggMy/BuE4PxAKX2ia/+S8ybLi8VT6QLpUlP02lL?=
 =?us-ascii?q?fWsJTDKcQcqK+5BRFa0pw45hahADepzs4YkWMELF1bYhKHiZbmO1XULPD/F/e/?=
 =?us-ascii?q?jEygkC13yPDeIr3hHpLNI2DHkLfgfrZy9VRQyQUuzd1E45JUC7cBIO/8W0Prtd?=
 =?us-ascii?q?zYCAM5PBKww+r9FNp90YYeU3qVAqCFKKPSrUOI5uU3LumMfoAVuSr9JOIi5/L0?=
 =?us-ascii?q?jX85hEUSfa+m3ZYMbHC4H/JmI1iWYHb2g9cBF3sKsRQ6TODwlFKCVjtTbW6oX6?=
 =?us-ascii?q?0g/jE7FJ6mDYDbS4Cvh7yOwj23Hp5RZmBADFCMFmzld4GFW/cKdSKTLdVtkj0C?=
 =?us-ascii?q?Vbi9VYAh0QuiuxP9y7piNuDU4DEXtYr/1Nhp4O3ejQs99Sd0D8Sa0GGBVXt0kX?=
 =?us-ascii?q?kKRzIt2KB/oEp9ykqM0KRigvxYE8BT6O1NUgsgKZHcyOl6AcjoWg3dZteJVEqm?=
 =?us-ascii?q?QtK+DDEyVN0xxcUCY0J8G9q4iBDD0DGnA7sUl7yNGZw1/bjQ33n3J8Zh1XnG0L?=
 =?us-ascii?q?MtgEUhQstKLWemnLJw9xDPB47VlEWUj7uler4C3CHT7muDzXCBvEdDUAFuV6XJ?=
 =?us-ascii?q?WnQfZkjTrdT9/U7CS76uCbI6MgpO08KCK61KasH3glVCXvvsJNPeY2epkWeqGR?=
 =?us-ascii?q?mI3q+MbJbte2gFwSrSElYEnB4J8XaGLwc+ADyhrHzYDDF1EVLvYkXs8fRxqX+h?=
 =?us-ascii?q?T080yR2KYFNl17av5hEVgvmcQesJ3r0YoCchtyl0HFGl0tLKCtqAog1hfLlcYd?=
 =?us-ascii?q?I9+ltHyXjVtwtnPpykLqBigFEefh9zv0Pv0RV3F4pBndIrrHMs0Ap9N6aY3Eld?=
 =?us-ascii?q?eDOf2JD6IqfXJXXq/BCzd67W3UnT38yS+qgR5/U3tVXisBuyGUo/7npoyd9V03?=
 =?us-ascii?q?ib5pXUFwcSVZPxUkAq9xl1vb3aYy8955/K2n1oK6W7rjjC29cxDus/1hmgZ8tf?=
 =?us-ascii?q?ML+DFALqE8waGtKiJ/Awl1mobhILJuZS9KEvMsOidvuG3rOrPel6kDKni2RH/J?=
 =?us-ascii?q?5y0kaW+yVgTe7I2o4Pw+uE0QufSzf8kFChv9jtmYBFeT4dBHC/xjXjBIJLYK19?=
 =?us-ascii?q?Y5wLCWa3L8Kr3Np+g4PiVGBC9F6kAVMLw8upeRuUb1zg0gxcz0UXoXq7mSSmyz?=
 =?us-ascii?q?x4iS0mrq2a3CbW2eTtaAIHOnJXRGlllVrtIYm0g8oaXUSydAgpiR2l6F3+x6ha?=
 =?us-ascii?q?oqR/MmbSTV1JfyjwM2FtTK+wuqCebM5I7ZMiqT9XX/ikYVCGVr79pAMX0yH5EG?=
 =?us-ascii?q?tExzA7dDaqto/inxNgi2KdL3dzrHzHdsF23hrf4N3cRfhM3jsJXiV4iD/XBkSi?=
 =?us-ascii?q?MNmt59mbi5DDsuWmXWK7SpJTaTXrzZ+HtCaj5WxlGxq/k+qxmt3mFwg3yiv719?=
 =?us-ascii?q?hsVSXVoxfweIjr16KmMe15eklkHkPz681/GotmiIs/mIkQ2WQGhpWS5XcHkn38?=
 =?us-ascii?q?MdRB1aL+cXoCXzgLw9HO7Qjh2U1jKG+Jxo3jWnWcxMthe8e1YmcM1i0h6MBKDb?=
 =?us-ascii?q?+e7KZYkittvlq4sQXRbOB4njccyvsh8mQWgu8Xtwo20iWSHKoSElJGMiz2mBSF?=
 =?us-ascii?q?9NS+rKRRZGayfrm8zkt+nda9DL6cpgFQQmr2epAnHSVo9MVwLErM0GHv6oHjYN?=
 =?us-ascii?q?TQcdUTthiOnxbBledVLo8xluERhSpmIm/9uXwly+gmjR1hx526vY6HK3lz86K9?=
 =?us-ascii?q?GBJXKjr1Z8YL8DH3kalehtqW35yoHph5AToERpzoTfa1ED4IsfTnKh2DEDk9qn?=
 =?us-ascii?q?edBLreEhWT6EZgr3LTDZ+rM2ubK2UezdVnXBOdPlBQgBgIXDUmmZ40DgKqy9bk?=
 =?us-ascii?q?cEhn/TAd/EL4pgFPyuJ1NBn/T2Hfqx2zajovTJifLRxW7hxN5kvPMMye6P5zED?=
 =?us-ascii?q?9c/pG7sAONLWmbbRxSDW4VQkyEG0zjPr626NjA9OiYG/O+L+bUbrWIs+BeTPCI?=
 =?us-ascii?q?xZSg0oZ9+zaMN8OPPmRtDvEh20pDW2x5FNrdmzkVVyMXkCfNZdaBpBig4i13st?=
 =?us-ascii?q?y/8PPzVQLv+4SPCrhSMdZu+xysgqeDLemQhClnJjZCy5MM3mTFyLwe3F4UliFv?=
 =?us-ascii?q?eCOhEbUGtS7RUq3QnrVbAAIcayN2LMFI9b4z3hFROc7HjdP4zqR3juMuBFdfS1?=
 =?us-ascii?q?PgmtulZcgLI2ymMFPHBUCLNKmJJDHRwsH3Z7+8RqNUjOlOqxKwvjObGVf5Pjuf?=
 =?us-ascii?q?jznpSwyvMeZUgSGHPRxevZuxfQp3BWf/TNLpdBu7PcRzjT03x700m3zLOXQdMT?=
 =?us-ascii?q?h6b0NCsLmQ4TlEjfV4HmxL9mBlIvWcmyaF8+nYLY4bsPtxDSRykuJa4XI6xKNU?=
 =?us-ascii?q?7SFEXvN1niTSo8Vqo1GnlOmP1zVmXABPqjZNmIKEo0FiNb/F+ZlHXHaXtC4KuE?=
 =?us-ascii?q?iKCh9Cjt1lDdnz8/Rd0NnEvKv1KDBG75TS8NdKVObOL8fSHHM/PFLEHTPIEENR?=
 =?us-ascii?q?QTe1NG2ZiklQjO26/GeSp5QxrZ2qk50LHOwIHGcpH+8XXxw2VOcJJ416C3Z9ye?=
 =?us-ascii?q?aW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAAAwawVch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N5lCSCDRSXNIFzLBMBiAkiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjY?=
 =?us-ascii?q?kAYJiAQIDAQIgBBkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBYMcggIFmk88i?=
 =?us-ascii?q?h1wfDOCdgEBBYceCBJ5ixGCFoN1LogFglegQgcCkTwYkSaYXjCBJYINMxojgQE?=
 =?us-ascii?q?GgjWCGwwXg0qKUz8zgQUBAYpXAQE?=
X-IPAS-Result: =?us-ascii?q?A0AYAAAwawVch0O0hNFjHgEGBwaBUQkLAYNrJ4N5lCSCDRS?=
 =?us-ascii?q?XNIFzLBMBiAkiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJiAQIDAQIgB?=
 =?us-ascii?q?BkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBYMcggIFmk88ih1wfDOCdgEBBYc?=
 =?us-ascii?q?eCBJ5ixGCFoN1LogFglegQgcCkTwYkSaYXjCBJYINMxojgQEGgjWCGwwXg0qKU?=
 =?us-ascii?q?z8zgQUBAYpXAQE?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="43317858"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 09:44:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726828AbeLCRlv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 12:41:51 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:55694 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725897AbeLCRlv (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 12:41:51 -0500
Received: by mail-it1-f193.google.com with SMTP id o19so10611250itg.5
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 09:41:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=broadcom.com; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=A0LMnZZgI+VCKBBiTAV+T5bexC7S5cpHgkaFauPJIKw=;
        b=VnPkUlEH+xHSkepxhigJFAVGt9BB+aNPX8gFgUx5deBTjpwA04z0e/2mhywHaROLrb
         5Ip9i55TxNqnLkWesrPIp2wyz+iZqvXamoO6H9r3H0NLlIK5VQ9g3qXDo5UJsU1EuVDI
         EqBtlAZ9VtV0uSPPO8Lri//l1jOq67aEAkGEo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=A0LMnZZgI+VCKBBiTAV+T5bexC7S5cpHgkaFauPJIKw=;
        b=TvE8tlF2FrGI7OtAGp7NPa8tzmWF3hMdaLINkSMiOZNraSSYlmb9ZMOvhhW4RFfw3s
         JQAus6+5JtEIOgjQSoIgUl/4+Gvy8i5dQhFS8qdIDN7rQQpNnivn1A6EHmJM04o5fST7
         YOgXxEVMOeCwliB9BKEMN2Vd7PiBefG6/P0avDOLXGQEM3a3nzb4Rr06lii7BFLEZ49D
         rarDMcSn6EOJEPvxZKMYdUHUllAf4A7MusiPGuYpUSNorX9JRQGO1M/X4+KeSTSn1jxI
         V5wKspEQbkAaLSdoBQWahA4nhnaWzpzwWjDJ8ABwLnQRYzGWk1ZGQyE70qvDASKCpaa0
         jPnA==
X-Gm-Message-State: AA+aEWaJEM0QKSBKchQ5vD7G84ImwFn22/MfT3GLb95YcraCq26PjDHo
        ULk50ZVjeCuJ2Po4rwogQx9aA4DXU4/YnoKBFyBUdg==
X-Google-Smtp-Source: AFSGD/UZcSlkSWn9IMl9KNq1Kw6fuNwlfsHyR6ET8/iw0Dvxk3yECtbvqMrv6K6GdcGCrnyCCJnD/DG5/ZdJVLiEPso=
X-Received: by 2002:a24:4e0d:: with SMTP id r13mr8228919ita.140.1543858908214;
 Mon, 03 Dec 2018 09:41:48 -0800 (PST)
MIME-Version: 1.0
References: <20181201005759.28093-1-eric@anholt.net> <20181201005759.28093-5-eric@anholt.net>
In-Reply-To: <20181201005759.28093-5-eric@anholt.net>
From: Dave Emett <david.emett@broadcom.com>
Date: Mon, 3 Dec 2018 17:41:36 +0000
Message-ID: <CAApk1dXjKeBN07LeycZgkCEOLEkdVjpvT_8Vu=8UStAY_ON15A@mail.gmail.com>
Subject: Re: [PATCH 5/6] drm/v3d: Add more tracepoints for V3D GPU rendering.
To: Eric Anholt <eric@anholt.net>
Cc: dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        Thomas Spurden <thomas.spurden@broadcom.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, 1 Dec 2018 at 00:58, Eric Anholt <eric@anholt.net> wrote:
>
> The core scheduler tells us when the job is pushed to the scheduler's
> queue, and I had the job_run functions saying when they actually queue
> the job to the hardware.  By adding tracepoints for the very top of
> the ioctls and the IRQs signaling job completion, "perf record -a -e
> v3d:.\* -e gpu_scheduler:.\* <job>; perf script" gets you a pretty
> decent timeline.
>
> Signed-off-by: Eric Anholt <eric@anholt.net>

Reviewed-by: Dave Emett <david.emett@broadcom.com>

> ---
>  drivers/gpu/drm/v3d/v3d_gem.c   |   4 ++
>  drivers/gpu/drm/v3d/v3d_irq.c   |  19 +++++-
>  drivers/gpu/drm/v3d/v3d_trace.h | 101 ++++++++++++++++++++++++++++++++
>  3 files changed, 121 insertions(+), 3 deletions(-)
>
> diff --git a/drivers/gpu/drm/v3d/v3d_gem.c b/drivers/gpu/drm/v3d/v3d_gem.c
> index 0bd6892e3044..2f82e2724b1f 100644
> --- a/drivers/gpu/drm/v3d/v3d_gem.c
> +++ b/drivers/gpu/drm/v3d/v3d_gem.c
> @@ -484,6 +484,8 @@ v3d_submit_cl_ioctl(struct drm_device *dev, void *data,
>         struct drm_syncobj *sync_out;
>         int ret = 0;
>
> +       trace_v3d_submit_cl_ioctl(&v3d->drm, args->rcl_start, args->rcl_end);
> +
>         if (args->pad != 0) {
>                 DRM_INFO("pad must be zero: %d\n", args->pad);
>                 return -EINVAL;
> @@ -611,6 +613,8 @@ v3d_submit_tfu_ioctl(struct drm_device *dev, void *data,
>         int ret = 0;
>         int bo_count;
>
> +       trace_v3d_submit_tfu_ioctl(&v3d->drm, args->iia);
> +
>         job = kcalloc(1, sizeof(*job), GFP_KERNEL);
>         if (!job)
>                 return -ENOMEM;
> diff --git a/drivers/gpu/drm/v3d/v3d_irq.c b/drivers/gpu/drm/v3d/v3d_irq.c
> index dd7a7b0bd5a1..69338da70ddc 100644
> --- a/drivers/gpu/drm/v3d/v3d_irq.c
> +++ b/drivers/gpu/drm/v3d/v3d_irq.c
> @@ -15,6 +15,7 @@
>
>  #include "v3d_drv.h"
>  #include "v3d_regs.h"
> +#include "v3d_trace.h"
>
>  #define V3D_CORE_IRQS ((u32)(V3D_INT_OUTOMEM | \
>                              V3D_INT_FLDONE |   \
> @@ -88,12 +89,20 @@ v3d_irq(int irq, void *arg)
>         }
>
>         if (intsts & V3D_INT_FLDONE) {
> -               dma_fence_signal(v3d->bin_job->bin.done_fence);
> +               struct v3d_fence *fence =
> +                       to_v3d_fence(v3d->bin_job->bin.done_fence);
> +
> +               trace_v3d_bcl_irq(&v3d->drm, fence->seqno);
> +               dma_fence_signal(&fence->base);
>                 status = IRQ_HANDLED;
>         }
>
>         if (intsts & V3D_INT_FRDONE) {
> -               dma_fence_signal(v3d->render_job->render.done_fence);
> +               struct v3d_fence *fence =
> +                       to_v3d_fence(v3d->render_job->render.done_fence);
> +
> +               trace_v3d_rcl_irq(&v3d->drm, fence->seqno);
> +               dma_fence_signal(&fence->base);
>                 status = IRQ_HANDLED;
>         }
>
> @@ -119,7 +128,11 @@ v3d_hub_irq(int irq, void *arg)
>         V3D_WRITE(V3D_HUB_INT_CLR, intsts);
>
>         if (intsts & V3D_HUB_INT_TFUC) {
> -               dma_fence_signal(v3d->tfu_job->done_fence);
> +               struct v3d_fence *fence =
> +                       to_v3d_fence(v3d->tfu_job->done_fence);
> +
> +               trace_v3d_tfu_irq(&v3d->drm, fence->seqno);
> +               dma_fence_signal(&fence->base);
>                 status = IRQ_HANDLED;
>         }
>
> diff --git a/drivers/gpu/drm/v3d/v3d_trace.h b/drivers/gpu/drm/v3d/v3d_trace.h
> index f54ed9cd3444..edd984afa33f 100644
> --- a/drivers/gpu/drm/v3d/v3d_trace.h
> +++ b/drivers/gpu/drm/v3d/v3d_trace.h
> @@ -12,6 +12,28 @@
>  #define TRACE_SYSTEM v3d
>  #define TRACE_INCLUDE_FILE v3d_trace
>
> +TRACE_EVENT(v3d_submit_cl_ioctl,
> +           TP_PROTO(struct drm_device *dev, u32 ct1qba, u32 ct1qea),
> +           TP_ARGS(dev, ct1qba, ct1qea),
> +
> +           TP_STRUCT__entry(
> +                            __field(u32, dev)
> +                            __field(u32, ct1qba)
> +                            __field(u32, ct1qea)
> +                            ),
> +
> +           TP_fast_assign(
> +                          __entry->dev = dev->primary->index;
> +                          __entry->ct1qba = ct1qba;
> +                          __entry->ct1qea = ct1qea;
> +                          ),
> +
> +           TP_printk("dev=%u, RCL 0x%08x..0x%08x",
> +                     __entry->dev,
> +                     __entry->ct1qba,
> +                     __entry->ct1qea)
> +);
> +
>  TRACE_EVENT(v3d_submit_cl,
>             TP_PROTO(struct drm_device *dev, bool is_render,
>                      uint64_t seqno,
> @@ -42,6 +64,85 @@ TRACE_EVENT(v3d_submit_cl,
>                       __entry->ctnqea)
>  );
>
> +TRACE_EVENT(v3d_bcl_irq,
> +           TP_PROTO(struct drm_device *dev,
> +                    uint64_t seqno),
> +           TP_ARGS(dev, seqno),
> +
> +           TP_STRUCT__entry(
> +                            __field(u32, dev)
> +                            __field(u64, seqno)
> +                            ),
> +
> +           TP_fast_assign(
> +                          __entry->dev = dev->primary->index;
> +                          __entry->seqno = seqno;
> +                          ),
> +
> +           TP_printk("dev=%u, seqno=%llu",
> +                     __entry->dev,
> +                     __entry->seqno)
> +);
> +
> +TRACE_EVENT(v3d_rcl_irq,
> +           TP_PROTO(struct drm_device *dev,
> +                    uint64_t seqno),
> +           TP_ARGS(dev, seqno),
> +
> +           TP_STRUCT__entry(
> +                            __field(u32, dev)
> +                            __field(u64, seqno)
> +                            ),
> +
> +           TP_fast_assign(
> +                          __entry->dev = dev->primary->index;
> +                          __entry->seqno = seqno;
> +                          ),
> +
> +           TP_printk("dev=%u, seqno=%llu",
> +                     __entry->dev,
> +                     __entry->seqno)
> +);
> +
> +TRACE_EVENT(v3d_tfu_irq,
> +           TP_PROTO(struct drm_device *dev,
> +                    uint64_t seqno),
> +           TP_ARGS(dev, seqno),
> +
> +           TP_STRUCT__entry(
> +                            __field(u32, dev)
> +                            __field(u64, seqno)
> +                            ),
> +
> +           TP_fast_assign(
> +                          __entry->dev = dev->primary->index;
> +                          __entry->seqno = seqno;
> +                          ),
> +
> +           TP_printk("dev=%u, seqno=%llu",
> +                     __entry->dev,
> +                     __entry->seqno)
> +);
> +
> +TRACE_EVENT(v3d_submit_tfu_ioctl,
> +           TP_PROTO(struct drm_device *dev, u32 iia),
> +           TP_ARGS(dev, iia),
> +
> +           TP_STRUCT__entry(
> +                            __field(u32, dev)
> +                            __field(u32, iia)
> +                            ),
> +
> +           TP_fast_assign(
> +                          __entry->dev = dev->primary->index;
> +                          __entry->iia = iia;
> +                          ),
> +
> +           TP_printk("dev=%u, IIA 0x%08x",
> +                     __entry->dev,
> +                     __entry->iia)
> +);
> +
>  TRACE_EVENT(v3d_submit_tfu,
>             TP_PROTO(struct drm_device *dev,
>                      uint64_t seqno),
> --
> 2.20.0.rc1
>
