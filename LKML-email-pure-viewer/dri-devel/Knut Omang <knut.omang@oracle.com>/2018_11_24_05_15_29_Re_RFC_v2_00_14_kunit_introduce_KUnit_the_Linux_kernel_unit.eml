Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 25 Nov 2018 14:41:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B3E155803EB;
	Fri, 23 Nov 2018 21:20:00 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 21:20:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Atsb8PxX0H177NTvM62++qbG7Oh7V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhKAtKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoCy?=
 =?us-ascii?q?YZYPAeQfM+hXrYf9qEcJoxSxCgesH/vvxz1Ti3/q36A3yfgtHBva0AEiGd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27ya/IzSjfb/hLwDn97ZLHchYuofqRWr9wcszRyVQzFw/fiVWQ?=
 =?us-ascii?q?rJbqPzWa1ukWtGib9fBvWv6ri2E5sQ1+vj+vxsI1h4TPm4kbxFfE9SBjz4Y0I9?=
 =?us-ascii?q?21UEF7Yd+4EJtQqiGVLJF6Td8lQ2FtoCo6zacGtoSncygO1psr3QLQa/uCc4SQ?=
 =?us-ascii?q?5hLjVeCRISp3hXJrf7K/mhCy/lW6xe3gV8m011BKojBCktnWuXABzxjT68aBSv?=
 =?us-ascii?q?dn+EeuxyqP2xjO6uFFJkA4j6zbK5knz7UtlZQTqVzOEjHqlEjylqOaa0sp9vay?=
 =?us-ascii?q?5+j6YbjquoWQOo52hw3mL6gjldGzDf4lPgUBXmWX4/mw2KDi8EHjRLhHiOA9nL?=
 =?us-ascii?q?PDv5DAP8sbo7a0Aw9L3YYn7BayFymm0NsGknkdNl5FewyIj5LvO17QJPD0F/C/?=
 =?us-ascii?q?g06jkDtzxvDGOKPuAonVI3TdjLvseaxx51NSxQYt19xT+pFZBq0bLP/yWEL9rN?=
 =?us-ascii?q?nYAQU4MwywzebnEtJ91oYGVGKLA6+ZNr7SsFCR6uIsPeaMfokVtyj5K/Q84P7v?=
 =?us-ascii?q?g3k5lkEHfaSyw5sXZ263Hu58L0Waf3XsmNEBHnkOvgYkS+zqklKCXSZJZ3muR6?=
 =?us-ascii?q?I8+i07CIW+AIfHR4Ctg6KO0D20H51LfW1GDlGMEXH1d4SLQfsMaSSSItN/nTwA?=
 =?us-ascii?q?T7SuV4gh1RS2vg/g17VnNvbU+jEftZ/71Nh6/ezTlQ0o+jxzFcid03yNQHtynm?=
 =?us-ascii?q?MHXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+AzExScw+z8UNY0Z6HdWiiBfD0jGuA78UkbyLGZM1/rjd33j3O8Zy1XLG2L?=
 =?us-ascii?q?M9gFkhR8tFLXemibJn9wjPG47JlF2UmLyxdaQc2y7N932PzXCUs0FaSwNwVaTF?=
 =?us-ascii?q?XXYCZkrZt9j550XCT6OwBrQjKAdO1cmCKq5SYN3zkVpGXOvjOMjZY2+pmGe/Hx?=
 =?us-ascii?q?CIyqmIbIrrYWod2irdBVMAkwAS+3aGKAc/Cj2go2LYEDxhC1bvb1nw/ul5rXOx?=
 =?us-ascii?q?VlU0wB2Sb019y7q1/QYYiuGGRPMNwL0IoichpC9yHFamwd3WDd2Mpw5ifKVZZd?=
 =?us-ascii?q?Mw+1NH1WPftwxgMZ2sNaFihlgCcwtpu0PizQl4CoJFkcIytnMl0BJyKb6E0FNG?=
 =?us-ascii?q?bz6XwIr/OqPJJWXo/BCgcajW2krA39aQ4aoP7PU4q1P+vACmDEYi8nNn08VL3H?=
 =?us-ascii?q?uY/JnFEA0SUZfpWEYt6xd6v63aYjU6547MyX1sMKy0sjje29IpBOop0Aqgc81Y?=
 =?us-ascii?q?MKOeEA/yEssaB8e1JewumlipaA8EPe9I+K41OcOma+WJ2KqxMOl8mzKmiHxN4J?=
 =?us-ascii?q?ph3UKU6yp8VunI0o4fzPGcwASGWCnzjVe7vs/shIBLeCsdHmy8ySjjGo5cfaly?=
 =?us-ascii?q?fYcNCWezLMy73NR+h5jxW3FG8F6vHU8J2MiseRCKdVzywRVQ1VgLoXyggSa5zy?=
 =?us-ascii?q?F0nys1oaaF3S3Ow/7tdBwIOmNQQGlijFHsIZW7jtwAXUioaRQpmwWh5Urg26db?=
 =?us-ascii?q?o6F/JXHJQUhUZyj2M31iUqyou7qYYs5A9IknsT9KX+S7e1yaTKDyowEb0y/6A2?=
 =?us-ascii?q?RR3jQ7eCy0tZXjmBx6jnmQLHJyrHrfZMFxyg3T5N3aRf5NwDUGQDN0hiXQBli5?=
 =?us-ascii?q?J9Op58mbl4/fsuCiUGKsTp1ScSjxwYKArie7/nBqARukkvC3m93nFxU60CDh29?=
 =?us-ascii?q?lrUyXIsAjzYo3x26umNuJne1FiBEXg5MpiBoF+jowwiYkS2XcAnJWV/nkHkWDp?=
 =?us-ascii?q?PdVAw63+b3kNRT8Nw9HL5gjow0ljLnOPx4LkWXSR2MphZ9+mYmwI3iIx9dxFCK?=
 =?us-ascii?q?CR7LZchyt6vkK4rR7NYfh6hjocyeEh6HkAj+ELuQotyD6QArQTHUleICztmA6E?=
 =?us-ascii?q?79G4rKVLemmvdaK821Z5ndCkFLuCuB1TWG7lepc+Gi999sZ/P0jN0HHp6oHkZc?=
 =?us-ascii?q?PfbdQcthCPlxfAju5VKI8+l/YQhCpnP379smMhy+IhkRNu2pS6tpCdK2px5KK5?=
 =?us-ascii?q?HgJYNjrtasMW+zHtjrxRktyY3o+xBZVhBisEXIHzQv22CjISuu/qNwKPED06t3?=
 =?us-ascii?q?eaFqDTHQ6Z6Ed6sX3PF4qnOG2QJHkc1d9iXgWSJFRDgAAIWzU3hoI5FgevxMD7?=
 =?us-ascii?q?cUZ2/DYR5kPjqhtXy+JlLB3/UmbZpAe1ZTY4UpmfLBxK7g5c40fZK9CR7uV2Hy?=
 =?us-ascii?q?tA5J2usBSNKnCHZwRPFWwGQVaLB1fnPrmz/9XA9/WYC/G6L/vPZ7WOtONfW+2J?=
 =?us-ascii?q?xZKpzotp4TKMOt+TMXllCv0xwlBDUmxhG8TFhzUPTDQalyDXYM6euhi84Td7rt?=
 =?us-ascii?q?yl/PToRQLv5paPC71IPtV04B22haaDN+iNhCd2MzpY15UMxWPWx7gbxlIdlyZu?=
 =?us-ascii?q?dzy1G7QaqSHNVL7QmrNQDxMDayJzM9ZI77sh3gZXP87XkMj11rl+jv46EFpFUV?=
 =?us-ascii?q?3hmse0Zc0FOW29NVXHBFqVO7SCPzHE38b3YaakQ71KkOpUrwGwuSqcE0L7PjSM?=
 =?us-ascii?q?iTjpVxOsMeFNli2bPwZeuIaychlzE2jjUcnmZwa/MN92iz023LI1imnLNW4aLT?=
 =?us-ascii?q?hzbUdNoqeM4iNfh/V1A3ZB4WZ9LemYhyaZ6PHVJYwLsfRwGCR7ieJb7G4+y7tU?=
 =?us-ascii?q?9yxEQP11mC3Prt9huV2mk++PyiZ5XxpKsDpEmIWLvUB6M6XD6pZAQWrE/A4K7W?=
 =?us-ascii?q?iIFxQKpt5lBsfztKxK1tfPlLz8KDFZ/tLQ/MscAdXUKc2dPHogNxrpBCDbDA8f?=
 =?us-ascii?q?QTG3MmHfglRXkOuO+X2Nspg6tp/slYIOS7BBUlw1E/IaCkJ9E90DIJd4RDUkkb?=
 =?us-ascii?q?GAgc4M5Hq+qgTRRcpAspDGUPKSHevgKDKDgbZYYBsIxOCwEYNGHJf23UBrbBFa?=
 =?us-ascii?q?nYvFGkzLFYRHuCBnYgYyoERC/3l4VUU83EXqbg7r63gWQ7r8kQQ7hQh+SeAs8i?=
 =?us-ascii?q?r87VAqIFbDuCo3lg82g9qhyTOcfSX6K6CzdY5RDCXwug46NZa/CwN+Yhe1k2Rn?=
 =?us-ascii?q?OS3CSrYXiKFvMShwiBLVubNMFORaQKkCZwUflt+NYPB98lJBtm2AwEZB6qORCp?=
 =?us-ascii?q?1/iE0tdJeqoFpHwQtoaNNzLqvVcvkahmNMj76D63f7nts6xxUTcgNUqDuf?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAAt3vhbh0O0hNFjFgMBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgWWCaoECJ4N5iHeKcoI9FJM3hWQSAQEYDwQBiFoiOBIBAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAQEBAQIgHQEBNwEEAQkBAQoYA?=
 =?us-ascii?q?gImAgIDVAYBF4McAUGBOAgEAQqlNnCBL4J2AQEFgTABCwEKDysDQIRUCIELin6?=
 =?us-ascii?q?BVz+DbjWCNkwOCwEBAQGEY4JXjxtDkCYHAoIcBIRcgQaJLRiBWU2OYo0XLId9g?=
 =?us-ascii?q?kkCBAIEBQITAYFdgXYzGgQfgzwJFoF8NYM4hFkYI4U/cQEScgEBjB4BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AUAAAt3vhbh0O0hNFjFgMBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgWWCaoECJ4N5iHeKcoI9FJM3hWQSAQEYDwQBiFoiOBIBAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiQBgmEBAQEBAQEBAQIgHQEBNwEEAQkBAQoYAgImAgIDVAYBF4M?=
 =?us-ascii?q?cAUGBOAgEAQqlNnCBL4J2AQEFgTABCwEKDysDQIRUCIELin6BVz+DbjWCNkwOC?=
 =?us-ascii?q?wEBAQGEY4JXjxtDkCYHAoIcBIRcgQaJLRiBWU2OYo0XLId9gkkCBAIEBQITAYF?=
 =?us-ascii?q?dgXYzGgQfgzwJFoF8NYM4hFkYI4U/cQEScgEBjB4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,272,1539673200"; 
   d="scan'208";a="53137311"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 21:19:58 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731732AbeKXQD7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 24 Nov 2018 11:03:59 -0500
Received: from userp2130.oracle.com ([156.151.31.86]:41952 "EHLO
        userp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1731053AbeKXQD7 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 24 Nov 2018 11:03:59 -0500
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
        by userp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wAO5DoT2112308;
        Sat, 24 Nov 2018 05:15:41 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=message-id : subject
 : from : to : cc : date : in-reply-to : references : content-type :
 mime-version : content-transfer-encoding; s=corp-2018-07-02;
 bh=2dzrkc9EJQmBLkdjj96+/0CCtK0Dhu0Ne7UhRd+b+J0=;
 b=xK+vEpHadVvZQj1Rd89IF1h0/Mg5R8BVHrGRqnEM9kYApnRUVKnvK31hPJb4TgQdeOkq
 Qx0jufEA0/Muayqi8chchW5eLSGKq7vxgrCw7x9bJw4vhx0MVummvCAMYTnu96ZkV2Ka
 letyrFSfwnqpCQs9b3kpOWe261Tcvi5o31y7Ki19zZ0j80nKJDOh/WBgurcwqVJinCK7
 E98yKIEX77kXpSBP+mZmiGrVWUFOK0uWNYLh3Sl1go7rv/0TxIAcO1TGXyZ3ikE4TOl8
 DoTRRHbpOOYFPjMnzj8ODavLFvdf56JwT7p0SAMVSFtcdeY3PcC8Vsww3lN8ACp7WkMQ eg== 
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
        by userp2130.oracle.com with ESMTP id 2nxx2tr4ks-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Sat, 24 Nov 2018 05:15:40 +0000
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
        by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wAO5FeYn010586
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Sat, 24 Nov 2018 05:15:40 GMT
Received: from abhmp0003.oracle.com (abhmp0003.oracle.com [141.146.116.9])
        by aserv0121.oracle.com (8.14.4/8.13.8) with ESMTP id wAO5FZ9f027418;
        Sat, 24 Nov 2018 05:15:35 GMT
Received: from asu.omang.mine.nu (/92.220.18.196)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Fri, 23 Nov 2018 21:15:35 -0800
Message-ID: <1543036529.4680.655.camel@oracle.com>
Subject: Re: [RFC v2 00/14] kunit: introduce KUnit, the Linux kernel unit
 testing framework
From: Knut Omang <knut.omang@oracle.com>
To: Brendan Higgins <brendanhiggins@google.com>,
        gregkh@linuxfoundation.org, keescook@google.com, mcgrof@kernel.org,
        shuah@kernel.org
Cc: brakmo@fb.com, richard@nod.at, dri-devel@lists.freedesktop.org,
        linux-nvdimm@lists.01.org, mpe@ellerman.id.au, Tim.Bird@sony.com,
        linux-um@lists.infradead.org, linux-kernel@vger.kernel.org,
        rostedt@goodmis.org, kieran.bingham@ideasonboard.com,
        julia.lawall@lip6.fr, joel@jms.id.au,
        linux-kselftest@vger.kernel.org, khilman@baylibre.com,
        joe@perches.com, dan.j.williams@intel.com, jdike@addtoit.com,
        kunit-dev@googlegroups.com,
        Hidenori Yamaji <hidenori.yamaji@sony.com>,
        Alan Maguire <alan.maguire@oracle.com>
Date: Sat, 24 Nov 2018 06:15:29 +0100
In-Reply-To: <20181023235750.103146-1-brendanhiggins@google.com>
References: <20181023235750.103146-1-brendanhiggins@google.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.26.6 (3.26.6-1.fc27) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9086 signatures=668683
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1811240051
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, 2018-10-23 at 16:57 -0700, Brendan Higgins wrote:
> This patch set proposes KUnit, a lightweight unit testing and mocking
> framework for the Linux kernel.
> 
> Unlike Autotest and kselftest, KUnit is a true unit testing framework;

First thanks to Hidenori Yamaji for making me aware of these threads!

I'd like to kindly remind Brendan, and inform others who might have
missed out on it, about our (somewhat different approach) to this space
at Oracle: KTF (Kernel Test Framework). 

KTF is a product of our experience with driver testing within Oracle since 
2011, developed
as part of a project that was not made public until 2016.
During the project, we
experimented with multiple approaches to enable 
more test driven work with kernel code.
KTF is the "testing within the kernel" 
part of this. While we realize there are quite a
few testing frameworks out there, 
KTF makes it easy to run selected tests in kernel
context directly, 
and as such provides a valuable approach to unit testing.

Brendan, I regret you weren't at this year's testing and fuzzing workshop at 
LPC last week so we could have continued our discussions from last year there!

I hope we can work on this for a while longer before anything gets merged. 
Maybe it can be topic for a longer session in a future test related workshop?

Links to more info about KTF:
------
Git repo: https://github.com/oracle/ktf
Formatted docs: http://heim.ifi.uio.no/~knuto/ktf/

LWN mention from my presentation at LPC'17: https://lwn.net/Articles/735034/
Oracle blog post: https://blogs.oracle.com/linux/oracles-new-kernel-test-framework-for-linux-v2
OSS'18 presentation slides: https://events.linuxfoundation.org/wp-content/uploads/2017/12/Test-Driven-Kernel-Development-Knut-Omang-Oracle.pdf

In the documentation (see http://heim.ifi.uio.no/~knuto/ktf/introduction.html)
we present some more motivation for choices made with KTF. 
As described in that introduction, we believe in a more pragmatic approach 
to unit testing for the kernel than the classical "mock everything" approach, 
except for typical heavily algorithmic components that has interfaces simple to mock, 
such as container implementations, or components like page table traversal 
algorithms or memory allocators, where the benefit of being able to "listen" 
on the mock interfaces needed pays handsomely off.

We also used strategies to compile kernel code in user mode,
for parts of the code which seemed easy enough to mock interfaces for.
I also looked at UML back then, but dismissed it in favor of the
more lightweight approach of just compiling the code under test 
directly in user mode, with a minimal partly hand crafted, flat mock layer.

> KUnit is heavily inspired by JUnit, Python's unittest.mock, and
> Googletest/Googlemock for C++. KUnit provides facilities for defining
> unit test cases, grouping related test cases into test suites, providing
> common infrastructure for running tests, mocking, spying, and much more.

I am curious, with the intention of only running in user mode anyway, 
why not try to build upon Googletest/Googlemock (or a similar C unit 
test framework if C is desired), instead of "reinventing" 
specific kernel macros for the tests?

> A unit test is supposed to test a single unit of code in isolation,
> hence the name. There should be no dependencies outside the control of
> the test; this means no external dependencies, which makes tests orders
> of magnitudes faster. Likewise, since there are no external dependencies,
> there are no hoops to jump through to run the tests. Additionally, this
> makes unit tests deterministic: a failing unit test always indicates a
> problem. Finally, because unit tests necessarily have finer granularity,
> they are able to test all code paths easily solving the classic problem
> of difficulty in exercising error handling code.

I think it is clearly a trade-off here: Tests run in an isolated, mocked 
environment are subject to fewer external components. But the more complex
the mock environment gets, the more likely it also is to be a source of errors, 
nondeterminism and capacity limits itself, also the mock code would typically be 
less well tested than the mocked parts of the kernel, so it is by no means any 
silver bullet, precise testing with a real kernel on real hardware is still 
often necessary and desired. 

If the code under test is fairly standalone and complex enough, building a mock
environment for it and test it independently may be worth it, but pragmatically, 
if the same functionality can be relatively easily exercised within the kernel, 
that would be my first choice.

I like to think about all sorts of testing and assertion making as adding more 
redundancy. When errors surface you can never be sure whether it is a problem 
with the test, the test framework, the environment, or an actual error, and 
all places have to be fixed before the test can pass. 

Thanks,
Knut



