Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:43:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F3023580433;
	Thu,  6 Dec 2018 01:28:45 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 01:28:45 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Any30exH3vg4/YuutYa/O+Z1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75oMm5bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSyNODYyy?=
 =?us-ascii?q?YZUPAeUDM+ZWrIfyqUYAoxulHQmhBvjiyiNKiHLswaE2z/4sHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOaoMUeC11qjIzS7eZPxW2Df97JPIchcnofqRWr9/bcrRyVMuFwPelVif?=
 =?us-ascii?q?tYzlPymU1uQWqmSa4etgVea0i24grQF9uCSgxsA2honUhYIY01bJ/jh6zoYtPd?=
 =?us-ascii?q?C0VlJ3bNq+HJdNuSyWKZF6Tt4hTm10oio3y78LtYa5cSUJ0pgr2h7SZv2df4WJ?=
 =?us-ascii?q?4h/vTvudLDl7iX9jZbmxnQy98VK6xe35TsS00EhFri5CktTUqHAN2ALc6tKdRv?=
 =?us-ascii?q?t+4EihwzCP2B7X6u1eJkA0j6XbJ4Ygwr42iJUTrVzOEjHqlEjylqOaa0sp9vay?=
 =?us-ascii?q?5+j6YbjquoWQOo52hw3mN6QhgM2/AeA2MggUWGib/Pyx1Lni/U3/XbVLgeQ6kq?=
 =?us-ascii?q?rHv5DAI8QUuKq5DxZS0oct7RawES2m3c8GnXkIMl1FYgiLj4v3NFHUJvD3E/O/?=
 =?us-ascii?q?j06rkDdxyPDKJqfhDYnVLnjfjLfheq5w60pdyAow099T/Z1VCqwaLfL3W0/xss?=
 =?us-ascii?q?HYDxAjPwy1xebnFMty1ocEVW2TBa+ZNbvYsUWU6eI3P+mMeIgVtS79K/c/5v7u?=
 =?us-ascii?q?kWU2mVgHcampwJsYcna4Hvt9LkWdYHrshMoBEGgQsgo/SuzqlEONUTpJa3muWK?=
 =?us-ascii?q?I84ykxCJi6AofbWoCtnLuB0T+5Hp1ReG9KEFOMEXDud4WCXPcBcyaSIs5nkjwZ?=
 =?us-ascii?q?WrmtUY4h1ReytADkz7prNPbb+iodtZj7zth6+/XTlQ0u9TxzF8mSyXqNT2Fznm?=
 =?us-ascii?q?MLXTM2xrpwoU5mx1eH0Kh4heFYFNNJ6/NIVAc6KYDTz+hgB9/uXQLBe8+DSEy6?=
 =?us-ascii?q?TdW+HTExUtUxzscNY0lnHdWulBTD3yuwDL8TmLyGH5g08qPa33jsKMdx0XfG1K?=
 =?us-ascii?q?89j1Y4RstDL3Gphql69wLLHY7Gj12Zl7q2daQbxCPC6X2MzXSQs01CUA5/S6PF?=
 =?us-ascii?q?XWsBaUvQqtj54kDCT7qqCbk8NgtByMiCKrZFa9HzjFVGQuvjN8raY26rh2iwAh?=
 =?us-ascii?q?OIzKuWbIX2Y2UdwDndCE8cng8O53mGKxYxCj2ho23ECjxuDkzgY0X3/Ol6qXO7?=
 =?us-ascii?q?SFI0zg6QY01g0bq15gAahfiGR/wP2bIEvT8rqy9oE1alw9LWF92AqhJ9fKVdZN?=
 =?us-ascii?q?M950tH1WLZtgBnIpysNadihkQacwR2uUPu2A56CoFBkcgssXMrwxB+KaOe0FNd?=
 =?us-ascii?q?aTyY2Yr8NaHQKmn35BqvcbLZ2knC0NaK/acC8O43q1H9swCmCEUj829r3MJI03?=
 =?us-ascii?q?SB/JrKCgkSUZXvUkss8xh6prfaYjQy5o/O1H1sN7W0vSHG294zGOQlzROgdc9F?=
 =?us-ascii?q?MKyYDA/yD9EaB8+2Je0qhlildA4LMPpT9a40JcymcfSG1bWvPOZhmjKmkGtG7J?=
 =?us-ascii?q?p80kKK6ypzVOrI04wZzPGf2wuNTy38g0u5ssDrhYBEYikfHnC+ySf4HoFRfLB9?=
 =?us-ascii?q?fYERBWeoPcK33NR+i4fxVHFC8F6sGk0J2NWueRqUdFH92QxQ1UIKoX2ogye4zj?=
 =?us-ascii?q?p0ky03oaqbxiDB3+PidB8fMG5RWGZilUvsIZSzj90CXEmobhIllRu/6Ubh2qhb?=
 =?us-ascii?q?or9yL23SQUdOYij3IHtuUqq2trqefcFP7IkkvjlQUOS5eVqaUKLyowMG0yP/GG?=
 =?us-ascii?q?tT3DI7eCuwupX6nBx6j3iRLG1po3raesFwxBHf68LaRfNK2joGRS94iSTYB1Sm?=
 =?us-ascii?q?Ptmp+8mUmInHsuykS22hUZhTezHxzYycrCu7+XFqARqnkvGzgNLnFhI20S3619?=
 =?us-ascii?q?lsTijIqBf8Yo/216W1K+5nf09oBEPi5Mp+AI1xjowwhJQI03gAmpqV5WYHkXv0?=
 =?us-ascii?q?MdhD2qLxdnsNSSQLw97I+gfl3kJjI2mNx4L4UHWd38Rga8O7YmMQxiIy8cRKBL?=
 =?us-ascii?q?2I47xDmCt/ukC4oh7JYfhhgjcdzuMj6Hsbg+EKogUh1CucDa4JHUlEIyPsjQ+H?=
 =?us-ascii?q?4M6krKVYf2uvdbmw1ExjndGuFr2CowdcWGrndZcmByN/8sJ/MFfU2n3p9o7kYM?=
 =?us-ascii?q?XQbc4UthCMjxfAiO1VJIgwl/UQgypnJHn9vWYky+MgiRxu3Je6vJWIKml3/aK5?=
 =?us-ascii?q?BAJYOSPxZ88J5j7tiqNelN6M34+zBpVhBikLXJzwQP2zCj0SsvDnNxuUHD04t3?=
 =?us-ascii?q?eWAr7fHQ6Z6Ed7oHPDCZGrN3eLJHYHydVuXgWSJEtagAoMRjU1goY5Fhy2xMzm?=
 =?us-ascii?q?aEp55Coe5lvmpRtX0O5oKwPzUmTCpAerdzc0ToKQLAFN4wFG5kfVN9Ge7+1pEy?=
 =?us-ascii?q?FZ+J2hsBKCKmiBawtUCmEJX1SOB0r/Mbm2+dnA7++YC/K+LvvJfLWOsPFeWO2O?=
 =?us-ascii?q?xZ61yYtm+DCMNsqUM3lmDv073FdDXH9jF8TYnTUPVzIYlybXY8GHoxe8/zV9rt?=
 =?us-ascii?q?qj//TzRALv+YyPBqNSMdpx+hC2gqSDN++KiCZ6MzZY0ZwMymHSyLgCx14fkCVu?=
 =?us-ascii?q?dzirEbQdui/BVqPQmqlLDxEFbyN/LtdH76U53gNVI87Ulsv11qJkjv4yE1pKT0?=
 =?us-ascii?q?HhldqzZcMUI2CxLlfHBEeQObSCJD3Lxdz3YKymRb1RiuVUqwO/uTKBH0D/OTSD?=
 =?us-ascii?q?kiHjVwqzPuFUkCGbIBtetZmhchZsDGjvVs7pZgenP993kzI2x6Y5hnfLNW4aLD?=
 =?us-ascii?q?h9fFlBrryW7SNEnPp/H3ZN4WZiLemBgyyZ9fXXKo4Ksft3BSR5j+Jb7248y7tQ?=
 =?us-ascii?q?7SFEQuR6mSrSrtF0pVGmnfKCyj5mUBpItzZKi5iHvURkOaXF6JZAXWzI8w4K7W?=
 =?us-ascii?q?WVWFw2oI4vON3mva8UgvrCjrjiHHdg7tTL8MooRoKcfOCKKmAwdyjpETjbJAIA?=
 =?us-ascii?q?QXigMmSJwwR4kfqS+3mighQ8uJX20M4LS7RbWVgdGvoXDFZoBpoELYshGnsPka?=
 =?us-ascii?q?Sal9IJ7Hz2jx7cQsRV9sTMVuiTGunuITDfjr5JYRoH6br9IcIYMYitnwROY0d7?=
 =?us-ascii?q?kMzjGlDUXN0F9iRgdAs1rUll9Hl4U3112k+zLkuN/XYVGraOgx9+3hF3cKIt6T?=
 =?us-ascii?q?7q7H8+I1aMryw1xg15vNzsmyycdnbVJaGzXYZMEDa84004O4nnTgAzaQS0nkxj?=
 =?us-ascii?q?LizYb7ZQiaZwM2FtlALY/5BIHKgYBYhNcB4VyLmtZu0hy1gU/iCu1U5C6K3fCI?=
 =?us-ascii?q?NrjgcCe5mrs3ZB3URoa9tjYeTrKaNPhmBZm6bG6jSl3+YZ2AgZPUIctnmPfnhb?=
 =?us-ascii?q?llYPM+wNJzCp5aRT6AiZnD0LLGMMTfsxivlq7EImfvuByznn1fhILQasNLrMfO?=
 =?us-ascii?q?uip2HcmJvQERsL3UQSmhwApOAu3A=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAC36ghch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng3qIGV+LLoFoJRSSQIR5gW4ZGBMBhDsBAgGDFiI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpL4I2JAGCYQEBAQEDAQIgEEYGCQEBChUDAgImAgIDR?=
 =?us-ascii?q?BAGARIFgxyCAgQBpVeBL4QCAYYqgQuLExc+gUGBRIJfiAWCVwKgWQmCJI82DFO?=
 =?us-ascii?q?JK4cmLIhfj3eBRoINMxoILAR4C1aBTpAkATZAMoECAgEBASETiigBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAAC36ghch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng3qIGV+LLoFoJRSSQIR5gW4ZGBMBhDsBAgGDFiI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpL4I2JAGCYQEBAQEDAQIgEEYGCQEBChUDAgImAgIDRBAGARIFgxyCAgQ?=
 =?us-ascii?q?BpVeBL4QCAYYqgQuLExc+gUGBRIJfiAWCVwKgWQmCJI82DFOJK4cmLIhfj3eBR?=
 =?us-ascii?q?oINMxoILAR4C1aBTpAkATZAMoECAgEBASETiigBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,321,1539673200"; 
   d="scan'208";a="55158983"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 01:28:44 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729238AbeLFJ2m convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Thu, 6 Dec 2018 04:28:42 -0500
Received: from mail.fireflyinternet.com ([109.228.58.192]:52081 "EHLO
        fireflyinternet.com" rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org
        with ESMTP id S1727763AbeLFJ2l (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 04:28:41 -0500
X-Default-Received-SPF: pass (skip=forwardok (res=PASS)) x-ip-name=78.156.65.138;
Received: from localhost (unverified [78.156.65.138]) 
        by fireflyinternet.com (Firefly Internet (M1)) with ESMTP (TLS) id 14796737-1500050 
        for multiple; Thu, 06 Dec 2018 09:28:37 +0000
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8BIT
To: "Zhang, Jerry\(Junwei\)" <Jerry.Zhang@amd.com>,
        =?utf-8?q?Michel_D=C3=A4nzer?= <michel@daenzer.net>,
        Christian Koenig <christian.koenig@amd.com>,
        David Airlie <airlied@linux.ie>, Huang Rui <ray.huang@amd.com>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>
From: Chris Wilson <chris@chris-wilson.co.uk>
In-Reply-To: <d81f2067-db9f-eeca-7d65-956d5f772093@daenzer.net>
Cc: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org
References: <20181205165621.5805-1-michel@daenzer.net>
 <10fca21a-5d7c-fe9e-07f0-6200e9de538e@amd.com>
 <154408757908.3572.9138595858555797029@skylake-alporthouse-com>
 <d81f2067-db9f-eeca-7d65-956d5f772093@daenzer.net>
Message-ID: <154408851245.18057.9814330902486356341@skylake-alporthouse-com>
User-Agent: alot/0.6
Subject: Re: [PATCH 1/2] drm: Only #define DEBUG if CONFIG_DYNAMIC_DEBUG is disabled
Date: Thu, 06 Dec 2018 09:28:32 +0000
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Quoting Michel Dänzer (2018-12-06 09:21:40)
> On 2018-12-06 10:12 a.m., Chris Wilson wrote:
> > Quoting Zhang, Jerry(Junwei) (2018-12-06 02:40:42)
> >> On 12/6/18 12:56 AM, Michel Dänzer wrote:
> >>> From: Michel Dänzer <michel.daenzer@amd.com>
> >>>
> >>> The following cases are possible for pr_debug():
> >>>
> >>> 1. CONFIG_DYNAMIC_DEBUG disabled
> >>>     a) DEBUG not defined: pr_debug() translates to no_printk(...), i.e.
> >>>        it never generates any output.
> >>>     b) DEBUG defined: pr_debug() translates to printk(KERN_DEBUG ...),
> >>>        i.e. it generates output which doesn't appear in dmesg by default,
> >>>        can be enabled dynamically.
> >>>
> >>> 2. CONFIG_DYNAMIC_DEBUG enabled: pr_debug() translates to
> >>>     dynamic_pr_debug()
> >>>     a) DEBUG not defined: dynamic_pr_debug() generates no output by
> >>>        default, can be enabled dynamically.
> >>>     b) DEBUG defined: dynamic_pr_debug() generates output by default,
> >>>        can be disabled dynamically.
> >>>
> >>> The intention for drm_debug_printer() is to generate output which
> >>> doesn't appear in dmesg by default, but can be enabled dynamically, i.e.
> >>> cases 1b) and 2a). However, defining DEBUG unconditionally gave us 2b)
> >>> instead of 2a) with CONFIG_DYNAMIC_DEBUG enabled.
> >>>
> >>> Fixes: 79a5ad2fdb3c ("drm: Enable pr_debug() for drm_printer")
> >>> Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
> >> Reviewed-by: Junwei Zhang <Jerry.Zhang@amd.com>
> > 
> > At the cost of 1a? Nah.
> 
> We still #define DEBUG if CONFIG_DYNAMIC_DEBUG isn't defined, so it's
> still 1b), not 1a).

I completely fluffed my reading of ifndef.

#if !IS_ENABLED(CONFIG_DYNAMIC_DEBUG)
-Chris
