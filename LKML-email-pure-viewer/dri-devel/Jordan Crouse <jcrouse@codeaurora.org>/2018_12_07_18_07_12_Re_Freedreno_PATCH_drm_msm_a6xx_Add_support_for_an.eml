Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:52:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A1B605804F9;
	Fri,  7 Dec 2018 10:07:21 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 10:07:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIiV1jB9kBBbcXv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+MTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHmiC?=
 =?us-ascii?q?kJKSM3/mLZisN/kK1UvRCuqBJkw47MYoyYL+Z+cr/HcN8GWWZMRNhdWipcCY28?=
 =?us-ascii?q?dYsPCO8BMP5coYn6vVsBsAGxBQ+xD+7x0D9IgWL23bYk3O88FgzG3hAvH8gJsH?=
 =?us-ascii?q?TJt9X6KrwfXvyyzKbV0zrMde5W2S366IjSaB8tu/aMXah/ccfIz0QkCg3LjlKV?=
 =?us-ascii?q?qYP/PjOV0PwAs2aB7+V+S+2glnAoqxpyojizwccskpPFhoUPylDL8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpFIFcuzyUOodoWM8uXmJltDogxrAHu5O3ZDUGxZAjyhLFdvCLb4mF?=
 =?us-ascii?q?7gj+WOqNLzp0nmxpdbKwihu07EOu0PfzVtOu31ZPtidFksfDtnQK1xHL9MiHRe?=
 =?us-ascii?q?Vy/l271TaMyQ/T8OdELl4wlabBLJ4h2LEwmoISsUTFACD2hF37gLGKekgg4OSk?=
 =?us-ascii?q?9urqbqv8qpOBNIJ4lhvyP6Usl8CnBOQ3KAkOX2yV+eSm073j+FX0QLFLjv0wj6?=
 =?us-ascii?q?nYv4nWJccFqa6jBQ9azIIj5w+4Dzao1tQXg2MHIUlbeBKIkYfpIUvCIPPmAvel?=
 =?us-ascii?q?hVSjjjNry+rBPr37DZXBNmLDn6v5fbZh905czxI+zdRe55JXFL4NOv3yWlLqud?=
 =?us-ascii?q?zcDx85NRG0wun9BNV80IMeRXyAAquDPKzOtl+I4/olI/OQa48NpDb9N/8l6ubu?=
 =?us-ascii?q?jXAjmF8dYbOm3ZwNZHC4A/RpOUOZYXX3j9cFEGcKuBc+TePwhF2DVz5Te2i9X6?=
 =?us-ascii?q?Ym6j4nD4KmCJ/JRpqxj7yZwCe7AppWa3hEClCLD3jkbYaEW/AKaCKUJc9siTgE?=
 =?us-ascii?q?VbmnS4882hCirg76y7x7LuXK/i0Ur47s1N9w5+fLjxE96SR0D9iB02GKV2x7hH?=
 =?us-ascii?q?gIRz8x3KB8u0B90E2M0apjjvxcFNxT4e5JUwggOZ7dyex6F879WgbbctiVT1am?=
 =?us-ascii?q?R82sASstQdIp398Of0F9Fs2hjh/Z2SqmGbsVl72RC5wy/aLRxHzxJ8d7y3bb26?=
 =?us-ascii?q?gtlVgmQs1TNWK4gq5z7RTcB4nMk0+Bjaalabwc3DLR9GeE1WeBoVtXUBBuXqnf?=
 =?us-ascii?q?XXAQfE3Wrc/n6UPESLOuDbcnMg5FycOZLqtKa9vpjUhJRfv5OdTeZX6xlHm0BR?=
 =?us-ascii?q?qS2ryMa4/qcX0H3CrBEEgEjxwT/XGeOAcjHCihvXzRACZuFV31ZUPs6vdxqHWg?=
 =?us-ascii?q?Q08wzgGKaVBh1rWv9h4Ug/ycV+0c3rYetCg9rDV0GU6338jKBNqYuwphYKJcbM?=
 =?us-ascii?q?sh4FdG0GLZsBB9PpygLqx4ml4SaQN3v1nq1xV2DIVAntMnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupBumFk48/HRozdZU02?=
 =?us-ascii?q?GQ6Y7XDAUPS53xVEU39x9kp7zBZik95oXU1WBjMKWusz/C3c4pC/Uhyhq6Y9hf?=
 =?us-ascii?q?N6aEHhfoE8IGH8iuNPAqm1+xYxMEIeBe7rI7M9mndvuGwqGrOulgkSmijWRG5o?=
 =?us-ascii?q?B9z02N+zB9Su7Ow5YK3fWY0hGbWDf7iVerqtr3lpxcZTEOAmq/zjDpBJRQZqJu?=
 =?us-ascii?q?Z4kLE3qhI8qtytV4mZHtQX9Y+Ee/CFwc3M+mZASdb0b63Q1WzkkXpX2nmS2lzz?=
 =?us-ascii?q?17iT0pr6yf3DDQzOTmbhYIJmlLRGx6h1f2PYe0l8waXFSvbwUxlBql5Fz2xqhB?=
 =?us-ascii?q?qKRkMmnTR1xFfyz3L2FkT6uxuaCOY89J6JM0rypXVP6wbkydSr74uxEayT/sH3?=
 =?us-ascii?q?NCxDAncDGnopf5kAZgiGKeL3Zzq2DVedpqyhfc59zcRPhR0SQARCRjjTnXB168?=
 =?us-ascii?q?P8Sm/NmOlpfDtPy+WHylVpFJbSbryoaAvjOh5WJ2GR2/g+yzmtr/HAk6yyD70M?=
 =?us-ascii?q?NmVSfJrBb6eYTr06W6MeR6fkhnHlP86sx6Gp1gnYs0np0fxX8ahpCN93odjWjz?=
 =?us-ascii?q?Kclb2b75bHcVRj4E2d/V7BLl2E1+NH2JwY35W26ZwstgYdm6f2wX1jg878BMFK?=
 =?us-ascii?q?eb8rhEkTFprVq/qALbeeJ9kSsFyfsy9H4ahPkEuA8sziWeGL8eB0dZMjL3lxSU?=
 =?us-ascii?q?8d++tr5Ya3i1cbi/z0d+mdGhDLefogBTQnr5e5EiHTNu4cV7Kl7DzHrz6oT8ct?=
 =?us-ascii?q?nKcd0TrgGUkwvHj+VNNJIxkf8KiTBmOG3nu30l1vU7jQdv3ZyhuIiHKmNt/L+2?=
 =?us-ascii?q?AxJCNz31Yd8T9S/pjapEgsmW2IWvFI17GjoXRJvoUe6oEDUKuPv8LQmOFzk8qm?=
 =?us-ascii?q?qBFbrbAA+S80Nmr3PJE5C2OHCbPngZzdN+RBaDIExTmhwbXDI/npQhDACl2NTh?=
 =?us-ascii?q?cFtl5jAW/lP4qAFDyud2OBnkSGvfuB2kajQpSJicMRpW6BtN51zOPMya7+JzGT?=
 =?us-ascii?q?xY/5K7oAyMLGybexpHDWUTVkOYAFDjO6Gk5cPc/OiAGuq+M/zObK2OqOxZSveI?=
 =?us-ascii?q?3I+v3ZFg/zqWLcWPOX9iD/Ig10pHXHB5HdnZmjoVRywWkSLNc9CUpBOm9iJrqc?=
 =?us-ascii?q?C/9ezhWBjz6ouXF7tSLdJv9gi2gaidNu6QhyV5KTdC2pMP33/Iz7cf00AIiyFz?=
 =?us-ascii?q?bDmgCrAAtS/LTKLNla5bFR8bayVvNMRW66IwxBVCOcneitntzL53kuY1C0tZVV?=
 =?us-ascii?q?zmgsymf9EKLHqnNFzZBEeHLrCGJTzQzsHzYKO8T6BQjepOux2xvzabD1HsPjCZ?=
 =?us-ascii?q?mzb1UBCvNPlGjDuHMxxGpIG9bhFtBHD/TNLnbx23KsN4gScqzr00mHzKM3URMT?=
 =?us-ascii?q?x9c0NLs72R4jlUgvR5G2xd8HVlKfOIlDqe7+ndMpwWq+dkAjxol+JG53Q307tU?=
 =?us-ascii?q?4ztCRPxwmSvSqMZholCmkuaVzDpnXwFDqjJKhIKNoEVjNr/V9phGWXbY4h0N6X?=
 =?us-ascii?q?+cBAgNp9tgWZXTvPVe0NXCmLj+LjBq99PP4dBaCdLZJc6KK3k9NgKvHyTbSEMf?=
 =?us-ascii?q?SjSnPmXWnU91n/Sb93nTpZ8/+bb2n59baLhBWFUzXtgADVl+EZRWIpxtWS4/nJ?=
 =?us-ascii?q?aQi8IF7GekqwPYAsJAscaUBbqpHfzzJWPB3vF/bBwSzOagIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAACNtQpch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUgMBAQEBAQsBgVUraYECJ4xyizKCDRSXOxSBXxQYCwgBg3q?=
 =?us-ascii?q?DYyI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZAEBAQECAQEBASQTBgEBL?=
 =?us-ascii?q?AsBBAEJAQEKGAklAwwFEwEEMhIFgxwBgXkIBQqkcoFsM4J2AQEFhykDBYsGgRw?=
 =?us-ascii?q?XgUA/gRGDEoMeAQSBIxINAYNQgiaQOY9qRgmHBoYmhBQjiWOHVYkQhHGLGoFIA?=
 =?us-ascii?q?YIKMxoIKAg7gmyCGwwXiF6FXyAygQUBAYgZgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAACNtQpch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUgMBAQEBAQsBgVUraYECJ4xyizKCDRSXOxSBXxQYCwgBg3qDYyI1CA0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQgNCQgpIwyCNiKCZAEBAQECAQEBASQTBgEBLAsBBAEJAQEKGAk?=
 =?us-ascii?q?lAwwFEwEEMhIFgxwBgXkIBQqkcoFsM4J2AQEFhykDBYsGgRwXgUA/gRGDEoMeA?=
 =?us-ascii?q?QSBIxINAYNQgiaQOY9qRgmHBoYmhBQjiWOHVYkQhHGLGoFIAYIKMxoIKAg7gmy?=
 =?us-ascii?q?CGwwXiF6FXyAygQUBAYgZgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="55010419"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 10:07:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726208AbeLGSHR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 13:07:17 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:52684 "EHLO
        smtp.codeaurora.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726111AbeLGSHR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 13:07:17 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
        id 95726606DD; Fri,  7 Dec 2018 18:07:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544206036;
        bh=d+8Sf8Rv3k6G6p3BPBrY23eY1qV/Qbm2/lu3L58d4zc=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=Ll6PJgsoUxxFn3Rz8FYuuZ7Y6/+Uhsp6wzKlUNHCcJ5+D9wnGQebTuhxqosVRx+ub
         kZshu1quRi44hmVJ1VcmKJN1x0DQLBZghhwM64WcFLM295prXv+YZVMlBLvaZPFP7n
         LCP861gPt0zzu9si4qdDsRrcCHFkkWdm9FDIwRgo=
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
        pdx-caf-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=2.0 tests=ALL_TRUSTED,BAYES_00,
        DKIM_INVALID,DKIM_SIGNED autolearn=no autolearn_force=no version=3.4.0
Received: from jcrouse-lnx.qualcomm.com (i-global254.qualcomm.com [199.106.103.254])
        (using TLSv1.2 with cipher DHE-RSA-AES128-SHA (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: jcrouse@smtp.codeaurora.org)
        by smtp.codeaurora.org (Postfix) with ESMTPSA id 93221606DD;
        Fri,  7 Dec 2018 18:07:14 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
        s=default; t=1544206035;
        bh=d+8Sf8Rv3k6G6p3BPBrY23eY1qV/Qbm2/lu3L58d4zc=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=MH7B058Zca5YZo5vg3L7YwHSWyrcm82xcCmxOHBQbVB3IGkzmP/or88gYUkgC+fWZ
         zU+T1BW16E3LQswpKKBfUu/8y6Q3FJ+HA7+gDJOWp5m4f9vb/W/DOnlv3UcvCDfdQ3
         X+wikkjU766QhDBhZwHkaGIi3CJOdcIFY+FdE05g=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 93221606DD
Authentication-Results: pdx-caf-mail.web.codeaurora.org; dmarc=none (p=none dis=none) header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org; spf=none smtp.mailfrom=jcrouse@codeaurora.org
Date: Fri, 7 Dec 2018 11:07:12 -0700
From: Jordan Crouse <jcrouse@codeaurora.org>
To: freedreno@lists.freedesktop.org, robdclark@gmail.com
Cc: linux-arm-msm@vger.kernel.org, dianders@chromium.org,
        dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        georgi.djakov@linaro.org, linux-arm-kernel@lists.infradead.org
Subject: Re: [Freedreno] [PATCH] drm/msm/a6xx: Add support for an
 interconnect path
Message-ID: <20181207180712.GC20602@jcrouse-lnx.qualcomm.com>
Mail-Followup-To: freedreno@lists.freedesktop.org, robdclark@gmail.com,
        linux-arm-msm@vger.kernel.org, dianders@chromium.org,
        dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        georgi.djakov@linaro.org, linux-arm-kernel@lists.infradead.org
References: <20181207170656.13208-1-jcrouse@codeaurora.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181207170656.13208-1-jcrouse@codeaurora.org>
User-Agent: Mutt/1.5.21 (2010-09-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 07, 2018 at 10:06:56AM -0700, Jordan Crouse wrote:
> Try to get the interconnect path for the GPU and vote for the maximum
> bandwidth to support all frequencies. This is needed for performance.
> Later we will want to scale the bandwidth based on the frequency to
> also optimize for power but that will require some device tree
> infrastructure that does not yet exist.
> 
> v3: Use macros and change port string per Georgi Djakov

Rob had asked earlier if it would be appropriate and/or possible to merge this
with the generic interconnect patches and with his blessing I would like to
renew that request. This should merge cleanly against tip of tree and it would
be nice to get this support in at the same time that the base patches go in.

Jordan

> Signed-off-by: Jordan Crouse <jcrouse@codeaurora.org>
> ---
>  drivers/gpu/drm/msm/Kconfig             |  1 +
>  drivers/gpu/drm/msm/adreno/a6xx_gmu.c   | 20 ++++++++++++++++++++
>  drivers/gpu/drm/msm/adreno/adreno_gpu.c |  9 +++++++++
>  drivers/gpu/drm/msm/msm_gpu.h           |  3 +++
>  4 files changed, 33 insertions(+)
> 
> diff --git a/drivers/gpu/drm/msm/Kconfig b/drivers/gpu/drm/msm/Kconfig
> index 843a9d40c05e..990c4350f0c4 100644
> --- a/drivers/gpu/drm/msm/Kconfig
> +++ b/drivers/gpu/drm/msm/Kconfig
> @@ -5,6 +5,7 @@ config DRM_MSM
>  	depends on ARCH_QCOM || (ARM && COMPILE_TEST)
>  	depends on OF && COMMON_CLK
>  	depends on MMU
> +	depends on INTERCONNECT || !INTERCONNECT
>  	select QCOM_MDT_LOADER if ARCH_QCOM
>  	select REGULATOR
>  	select DRM_KMS_HELPER
> diff --git a/drivers/gpu/drm/msm/adreno/a6xx_gmu.c b/drivers/gpu/drm/msm/adreno/a6xx_gmu.c
> index 546599a7ab05..f37a9bfe5c30 100644
> --- a/drivers/gpu/drm/msm/adreno/a6xx_gmu.c
> +++ b/drivers/gpu/drm/msm/adreno/a6xx_gmu.c
> @@ -2,6 +2,7 @@
>  /* Copyright (c) 2017-2018 The Linux Foundation. All rights reserved. */
>  
>  #include <linux/clk.h>
> +#include <linux/interconnect.h>
>  #include <linux/pm_opp.h>
>  #include <soc/qcom/cmd-db.h>
>  
> @@ -63,6 +64,9 @@ static bool a6xx_gmu_gx_is_on(struct a6xx_gmu *gmu)
>  
>  static void __a6xx_gmu_set_freq(struct a6xx_gmu *gmu, int index)
>  {
> +	struct a6xx_gpu *a6xx_gpu = container_of(gmu, struct a6xx_gpu, gmu);
> +	struct adreno_gpu *adreno_gpu = &a6xx_gpu->base;
> +	struct msm_gpu *gpu = &adreno_gpu->base;
>  	int ret;
>  
>  	gmu_write(gmu, REG_A6XX_GMU_DCVS_ACK_OPTION, 0);
> @@ -85,6 +89,12 @@ static void __a6xx_gmu_set_freq(struct a6xx_gmu *gmu, int index)
>  		dev_err(gmu->dev, "GMU set GPU frequency error: %d\n", ret);
>  
>  	gmu->freq = gmu->gpu_freqs[index];
> +
> +	/*
> +	 * Eventually we will want to scale the path vote with the frequency but
> +	 * for now leave it at max so that the performance is nominal.
> +	 */
> +	icc_set(gpu->icc_path, 0, MBps_to_icc(7216));
>  }
>  
>  void a6xx_gmu_set_freq(struct msm_gpu *gpu, unsigned long freq)
> @@ -680,6 +690,8 @@ int a6xx_gmu_reset(struct a6xx_gpu *a6xx_gpu)
>  
>  int a6xx_gmu_resume(struct a6xx_gpu *a6xx_gpu)
>  {
> +	struct adreno_gpu *adreno_gpu = &a6xx_gpu->base;
> +	struct msm_gpu *gpu = &adreno_gpu->base;
>  	struct a6xx_gmu *gmu = &a6xx_gpu->gmu;
>  	int status, ret;
>  
> @@ -695,6 +707,9 @@ int a6xx_gmu_resume(struct a6xx_gpu *a6xx_gpu)
>  	if (ret)
>  		goto out;
>  
> +	/* Set the bus quota to a reasonable value for boot */
> +	icc_set(gpu->icc_path, 0, MBps_to_icc(3072));
> +
>  	a6xx_gmu_irq_enable(gmu);
>  
>  	/* Check to see if we are doing a cold or warm boot */
> @@ -735,6 +750,8 @@ bool a6xx_gmu_isidle(struct a6xx_gmu *gmu)
>  
>  int a6xx_gmu_stop(struct a6xx_gpu *a6xx_gpu)
>  {
> +	struct adreno_gpu *adreno_gpu = &a6xx_gpu->base;
> +	struct msm_gpu *gpu = &adreno_gpu->base;
>  	struct a6xx_gmu *gmu = &a6xx_gpu->gmu;
>  	u32 val;
>  
> @@ -781,6 +798,9 @@ int a6xx_gmu_stop(struct a6xx_gpu *a6xx_gpu)
>  	/* Tell RPMh to power off the GPU */
>  	a6xx_rpmh_stop(gmu);
>  
> +	/* Remove the bus vote */
> +	icc_set(gpu->icc_path, 0, 0);
> +
>  	clk_bulk_disable_unprepare(gmu->nr_clocks, gmu->clocks);
>  
>  	pm_runtime_put_sync(gmu->dev);
> diff --git a/drivers/gpu/drm/msm/adreno/adreno_gpu.c b/drivers/gpu/drm/msm/adreno/adreno_gpu.c
> index 93d70f4a2154..7403ade9aabc 100644
> --- a/drivers/gpu/drm/msm/adreno/adreno_gpu.c
> +++ b/drivers/gpu/drm/msm/adreno/adreno_gpu.c
> @@ -18,6 +18,7 @@
>   */
>  
>  #include <linux/ascii85.h>
> +#include <linux/interconnect.h>
>  #include <linux/kernel.h>
>  #include <linux/pm_opp.h>
>  #include <linux/slab.h>
> @@ -695,6 +696,11 @@ static int adreno_get_pwrlevels(struct device *dev,
>  
>  	DBG("fast_rate=%u, slow_rate=27000000", gpu->fast_rate);
>  
> +	/* Check for an interconnect path for the bus */
> +	gpu->icc_path = of_icc_get(dev, "gfx-mem");
> +	if (IS_ERR(gpu->icc_path))
> +		gpu->icc_path = NULL;
> +
>  	return 0;
>  }
>  
> @@ -733,10 +739,13 @@ int adreno_gpu_init(struct drm_device *drm, struct platform_device *pdev,
>  
>  void adreno_gpu_cleanup(struct adreno_gpu *adreno_gpu)
>  {
> +	struct msm_gpu *gpu = &adreno_gpu->base;
>  	unsigned int i;
>  
>  	for (i = 0; i < ARRAY_SIZE(adreno_gpu->info->fw); i++)
>  		release_firmware(adreno_gpu->fw[i]);
>  
> +	icc_put(gpu->icc_path);
> +
>  	msm_gpu_cleanup(&adreno_gpu->base);
>  }
> diff --git a/drivers/gpu/drm/msm/msm_gpu.h b/drivers/gpu/drm/msm/msm_gpu.h
> index f82bac086666..12fc5b1cb39d 100644
> --- a/drivers/gpu/drm/msm/msm_gpu.h
> +++ b/drivers/gpu/drm/msm/msm_gpu.h
> @@ -19,6 +19,7 @@
>  #define __MSM_GPU_H__
>  
>  #include <linux/clk.h>
> +#include <linux/interconnect.h>
>  #include <linux/regulator/consumer.h>
>  
>  #include "msm_drv.h"
> @@ -119,6 +120,8 @@ struct msm_gpu {
>  	struct clk *ebi1_clk, *core_clk, *rbbmtimer_clk;
>  	uint32_t fast_rate;
>  
> +	struct icc_path *icc_path;
> +
>  	/* Hang and Inactivity Detection:
>  	 */
>  #define DRM_MSM_INACTIVE_PERIOD   66 /* in ms (roughly four frames) */
> -- 
> 2.18.0
> 
> _______________________________________________
> Freedreno mailing list
> Freedreno@lists.freedesktop.org
> https://lists.freedesktop.org/mailman/listinfo/freedreno

-- 
The Qualcomm Innovation Center, Inc. is a member of Code Aurora Forum,
a Linux Foundation Collaborative Project
