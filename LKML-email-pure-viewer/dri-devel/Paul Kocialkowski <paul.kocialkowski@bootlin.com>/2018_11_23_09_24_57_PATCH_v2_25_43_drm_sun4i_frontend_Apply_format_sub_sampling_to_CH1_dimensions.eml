Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:33:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6868D58037D;
	Fri, 23 Nov 2018 01:31:15 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 01:31:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZjZr1RIQaxceBQUsDtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/r7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIDeUBM+lXoYbmp1sWrxazHhWgCeD1xzNUnHL6wbE23uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zOotrvKacSVf2+wqzPzTrfbvNZwzP96IvPchEvuvGMXrNwetfWxEk3DQzFk1GQ?=
 =?us-ascii?q?pZbmPzOSyusNsnKU7+5jVeKohW8nsAJxojm0y8g3jYnJgZ4VylTF9SV/2oo6Od?=
 =?us-ascii?q?q4SEtibNOiDZBetDmaOpNoTs8+R2xkojs2x7MYtZKhYSQHy4grywTeZvGFa4SF?=
 =?us-ascii?q?5g7vWPySLDp7nn5odrKyiwys/US8yuDxUNS/3kxQoSpfiNbMs2gA1xzN5ciDTf?=
 =?us-ascii?q?tw5lmh2TmR2ADJ8O1EIl47lbDdK5E/xr48jJ0TsV7MHiPumUX2irGZdlk89+S2?=
 =?us-ascii?q?9+jqZq/qqoKSOoNqkA3yL6cjltClDek5MAUCR22b9v691L3n8035WrJKjvgun6?=
 =?us-ascii?q?ndsZDaI9kbp6GgDw9WzIkj8RC/ACmi0NgBmnkGIlRFdwydj4XyJVHOL+73De2l?=
 =?us-ascii?q?j1Svjjhr3fbGMaPlApnXKXjDirjhca5n60FA0Aoz0cxf55VMB7EFIfLzWVH+uM?=
 =?us-ascii?q?bXDx8kKAG0x+fnCNNg1oIRQ26PA6mZML/Mvl+M/O4gP+6MZIoNsjbnN/cl/+Lu?=
 =?us-ascii?q?jWM+mVIFfammx5oXaGyiEfRhOUmZYWfsjc0HEWcFpQc+SO3qiFufUT9cfXqyXq?=
 =?us-ascii?q?Q85i0lB4KiF4vMWoetgLmZ1iehApJWfnxGCkyLEXrwdYWEXOkDZDiRIs9mlDwE?=
 =?us-ascii?q?U7+hRpQl1RGvsg/61rVmIvDV+i0eqZLsytx16/fPmhE18Dx+F96d3H2VT2Fogm?=
 =?us-ascii?q?MIQCc707pkoUx9zVeD0rJ0g+ZCGtxR/P5JVgY6NZjBz+11EdzyWwTBfsuXR1ai?=
 =?us-ascii?q?WNmpHTYxTtcpyd8Uf0l9A8mijgzE3yeyAL8ajbqLCIYw8qLdxXfxIcl9xm3C1K?=
 =?us-ascii?q?kgiVkmX8ROOXenhq556wjcGYrJn1+FmKatcKQWxDTN+3ubzWqSoEFYVxZ9Xrjf?=
 =?us-ascii?q?UnABeETat9T56VnET7+1F7snNAxNycqBKqtPbt3kllFGRPblONTDbGO9gWawBR?=
 =?us-ascii?q?CUxrySaIrmYXkS3CLYCEIciQAc4W6GNRQiBiemu2/RESZhFUzxbE/28elxsnW7?=
 =?us-ascii?q?TlQqwAGMdEBh07u1+hgIhf2TUf8T37QEuDs/pDVwBlqyw9XWC9+YrQp7YKpcec?=
 =?us-ascii?q?894EtA1W/Bqwx9P5mgL6d+hl4ecwV7pV/u2w9wCoValcgqrXUqzAVpJKKc0VNB?=
 =?us-ascii?q?cS6Y3J/qNr3WLGny4A6ga6rM1l7C19aW/78F6O4kpFX7oAGpCk0i/m193NlRzX?=
 =?us-ascii?q?Sd6YvFDQoIXZ3qT0Y46gJ1p7fZYik6+YPZznlsMaiysj/f1NMlHuolyhC8f9hB?=
 =?us-ascii?q?NKOIDhP9E8ofB8K2Muwlh0Cpbg4YPOBV7KM1P96me+Ga16KxPedgnCipjWJI4I?=
 =?us-ascii?q?1m1kKM9ix8SvPH3pofwvGY2BeHWCn4jFu7rs/3noVEbykIHmWj0SjkGJJRZqpq?=
 =?us-ascii?q?cIYRCGehP9e4xs9jiJ7qQXJY8kCsB0kH2MOwZRWddVj90hBO2kQNpnynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336ha?=
 =?us-ascii?q?pKVlI2jTW0tIZDX2L2d5X6u0t7qCZdNP6ZwyvSVWVuS8fU6VSrrnrxQG1CPjGn?=
 =?us-ascii?q?NUxConeDGyppX5gxt6hXqfLHlptnrZesJwxRDF6NzHX/FR3TkGRCh+iTbJAFix?=
 =?us-ascii?q?JN2p/dSSl5feveGyTWOhVptPcSb1yYOMrje05WpvARenhfC8hsXnERQm0S/8z9?=
 =?us-ascii?q?RrVT/HrBHmbonp1qS6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Avl11diLn6Tx4L5S2+Sws1uZ9ShZmMW2yQ9791FCa?=
 =?us-ascii?q?uO7bxEmzd1rUS8rQ7Lffd9mTIdw+M06HEGm+EJpBYtziKFD7AXHElYPjbjmw6G?=
 =?us-ascii?q?7t+gt6VXeHigcaKr20Vgh9ChA6qPogVdWHb/Z5cjEjV87sR5MFLQznLz7pvod8?=
 =?us-ascii?q?XXbdIWrheUiQvPj/BJKJItkfoHnTZnOWX4vXE/yu80lxpu3YyhvIicKmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDAzsW?=
 =?us-ascii?q?2UGb3bHQ+C8ktmq2/PHouvN3GWInkZ0NpjSAOcJExZnAAbQjE6koQlGQCtwczr?=
 =?us-ascii?q?aF156SwJ5l7kthtMzfplNxvlXWfaugiocS04SISFIBpV8wFC5FrVMcqE4eJoBC?=
 =?us-ascii?q?xY+pyhrAqQKm2UfQhIDGcJWlCaCFDnJLWh+d7A8+2ADOqkM/TOeamOqfBZV/qQ?=
 =?us-ascii?q?xZOv1ZZm/y+RNsqVOHluFeY72k1FXXB2AMnZnzQPSyoKlyPCdcKbpRG8+jFpoc?=
 =?us-ascii?q?C76vjkRAXv5Y6XAbtILdpv4wy2gbuEN+OIhCZ2NzdY1pAPxX/J0rQf30QSiyZh?=
 =?us-ascii?q?dzazC7QAqDXNQbnUmq9WCR4bdixyONFJ76I6wglCJ8rbhsnp2b5/i/4/E01FWk?=
 =?us-ascii?q?D5msG1ecwKJHmwO0naBEmQLrSJOz3Kz9vzYaO9UrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjLN93jDg2zacoiX/QKWEcMS?=
 =?us-ascii?q?Zzc0VWo72U7CNYhOh/GmNb4npkK+mEhziW7+3CJpkKtvtrBzx+l/hG73Qi17tV?=
 =?us-ascii?q?8CZESeR1mSTIqN5uplCmku+XxTtmUBpBsDBLhI2QsEVmOKXZ8IRAWHne8BIM62?=
 =?us-ascii?q?WQFwoFp99/BtLzvKBQz4uHqKWmLDZE7sKR/sYGAcXQANyIPWBnMhfzHjPQSgwf?=
 =?us-ascii?q?QnrjOXvewkBQjvyW3nmUtYQh7Jb2lZcCR6RYSFstUPQABQAtGN0EPYcyVykh1L?=
 =?us-ascii?q?2WlsgF4VK6rQLNX4NbuJ7dX/6fCPmpLyyW3pdeYB5d+brlKcwwMYb60khhbUZh?=
 =?us-ascii?q?n4WCT1LZQNQLoSpqbwYwo0JS63t/Zmc03F7hawXr63gWQ63n1iUqgxdzNLx+vA?=
 =?us-ascii?q?zn5E06cx+T/HM9?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CuAACax/dbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4xwix6CIZkYLhMBiFUiOBIBAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAG?=
 =?us-ascii?q?CYgMDAQIkCwEtGQYJAQFQAykrBxIFgxyCAgQBqCIzg32GGodehCuBVz+DdYsHA?=
 =?us-ascii?q?osRlHEHAoIcBIQdimcjkQiaDYF2cIM8gicXEo4LPzKBBAEBATuLZwEB?=
X-IPAS-Result: =?us-ascii?q?A0CuAACax/dbh0O0hNFiHAEBAQQBAQcEAQGBZYNsJ4xwix6?=
 =?us-ascii?q?CIZkYLhMBiFUiOBIBAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYgMDAQIkCwEtG?=
 =?us-ascii?q?QYJAQFQAykrBxIFgxyCAgQBqCIzg32GGodehCuBVz+DdYsHAosRlHEHAoIcBIQ?=
 =?us-ascii?q?dimcjkQiaDYF2cIM8gicXEo4LPzKBBAEBATuLZwEB?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="41968157"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 01:31:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2502802AbeKWUKb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 15:10:31 -0500
Received: from mail.bootlin.com ([62.4.15.54]:49418 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2502727AbeKWUK1 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 15:10:27 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 7126220DF9; Fri, 23 Nov 2018 10:26:58 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from localhost.localdomain (aaubervilliers-681-1-94-205.w90-88.abo.wanadoo.fr [90.88.35.205])
        by mail.bootlin.com (Postfix) with ESMTPSA id 039B220E00;
        Fri, 23 Nov 2018 10:26:33 +0100 (CET)
From: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
To: linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
        linux-arm-kernel@lists.infradead.org
Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        Sean Paul <sean@poorly.run>, David Airlie <airlied@linux.ie>,
        Chen-Yu Tsai <wens@csie.org>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        linux-sunxi@googlegroups.com, Daniel Vetter <daniel@ffwll.ch>,
        Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Subject: [PATCH v2 25/43] drm/sun4i: frontend: Apply format sub-sampling to CH1 dimensions
Date: Fri, 23 Nov 2018 10:24:57 +0100
Message-Id: <20181123092515.2511-26-paul.kocialkowski@bootlin.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181123092515.2511-1-paul.kocialkowski@bootlin.com>
References: <20181123092515.2511-1-paul.kocialkowski@bootlin.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The frontend comes with two "channels", that can be configured
independently. When used in YUV mode, the first channel (CH0) represents
the luminance component while the second channel (CH1) represents the
chrominance. In RGB mode, both have to be configured the same way.

Use variables (with the YUV terminology) for each channel's
dimensions, calculating the chroma dimensions from the luma dimensions
and the sub-sampling factors from the format description.

Since the configured size only has pixel precision, the fractional
fixed-point part of the source size is dropped for both components to
ensure that the scaling factors are accurate.

Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
---
 drivers/gpu/drm/sun4i/sun4i_frontend.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/sun4i/sun4i_frontend.c b/drivers/gpu/drm/sun4i/sun4i_frontend.c
index 5626334c6e87..4700133b96e0 100644
--- a/drivers/gpu/drm/sun4i/sun4i_frontend.c
+++ b/drivers/gpu/drm/sun4i/sun4i_frontend.c
@@ -276,16 +276,24 @@ void sun4i_frontend_update_coord(struct sun4i_frontend *frontend,
 				 struct drm_plane *plane)
 {
 	struct drm_plane_state *state = plane->state;
+	struct drm_framebuffer *fb = state->fb;
+	uint32_t luma_width, luma_height;
+	uint32_t chroma_width, chroma_height;
 
 	/* Set height and width */
 	DRM_DEBUG_DRIVER("Frontend size W: %u H: %u\n",
 			 state->crtc_w, state->crtc_h);
+
+	luma_width = state->src_w >> 16;
+	luma_height = state->src_h >> 16;
+
+	chroma_width = DIV_ROUND_UP(luma_width, fb->format->hsub);
+	chroma_height = DIV_ROUND_UP(luma_height, fb->format->vsub);
+
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH0_INSIZE_REG,
-		     SUN4I_FRONTEND_INSIZE(state->src_h >> 16,
-					   state->src_w >> 16));
+		     SUN4I_FRONTEND_INSIZE(luma_height, luma_width));
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH1_INSIZE_REG,
-		     SUN4I_FRONTEND_INSIZE(state->src_h >> 16,
-					   state->src_w >> 16));
+		     SUN4I_FRONTEND_INSIZE(chroma_height, chroma_width));
 
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH0_OUTSIZE_REG,
 		     SUN4I_FRONTEND_OUTSIZE(state->crtc_h, state->crtc_w));
@@ -293,14 +301,14 @@ void sun4i_frontend_update_coord(struct sun4i_frontend *frontend,
 		     SUN4I_FRONTEND_OUTSIZE(state->crtc_h, state->crtc_w));
 
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH0_HORZFACT_REG,
-		     state->src_w / state->crtc_w);
+		     (luma_width << 16) / state->crtc_w);
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH1_HORZFACT_REG,
-		     state->src_w / state->crtc_w);
+		     (chroma_width << 16) / state->crtc_w);
 
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH0_VERTFACT_REG,
-		     state->src_h / state->crtc_h);
+		     (luma_height << 16) / state->crtc_h);
 	regmap_write(frontend->regs, SUN4I_FRONTEND_CH1_VERTFACT_REG,
-		     state->src_h / state->crtc_h);
+		     (chroma_height << 16) / state->crtc_h);
 
 	regmap_write_bits(frontend->regs, SUN4I_FRONTEND_FRM_CTRL_REG,
 			  SUN4I_FRONTEND_FRM_CTRL_REG_RDY,
-- 
2.19.1

