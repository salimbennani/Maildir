Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:35:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 786E05803EB;
	Fri, 23 Nov 2018 04:52:23 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 23 Nov 2018 04:52:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ax8fszBTU1yf76Y01pSeBlV5lR9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YROFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAY2y?=
 =?us-ascii?q?cosBAfQPM+laoYn9oEcBohWxCgm3HOPiyCRFhnDq0aAgyektDRvL0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6v1qbI0DHDZO5T1zf69IfIcwouofWPXbJ3f8vR0kovFwLYhViX?=
 =?us-ascii?q?sYzqJS6V1uAXv2iY6OpvSeOvhHQjqwFypTiuyNwsiorIho8O0V/E8iJ5wJoxJd?=
 =?us-ascii?q?25Tk53e8KrEJxVtyyDMYZ9X80sQ2ZtuCkgy70Gv4a2czMNyJQg2x7fb/2Hc46S?=
 =?us-ascii?q?7h3/U+aRJC90hHx/eL2hmRm97Favyvb/Vsmo11ZKtjBJkt7WtnAC0RHY98uJSu?=
 =?us-ascii?q?Nl80u/xTqC0xrf5vxKLEwqj6bXNp0szqIqmpcSs0nPBiv7lFnsgKKVdUgo4Oal?=
 =?us-ascii?q?5uT9brn4upORN4l5gRzkPKs0gMywG+E4PxAOX2eF/eS806Xu/VP2QLpUlP06iK?=
 =?us-ascii?q?rZv47AJcQduKG5BxVZ0oE56xawFzum0dIYkmcbLF9dZh6Lk4zkN0vTLP32E/uz?=
 =?us-ascii?q?mUmgnTR3y/zcP7DsAI3BLn3Zn7fgebZ95VRcyA02zd1H45JUC7cBIO/8W0Pot9?=
 =?us-ascii?q?zXEAU5MwqqzObjEdl90Y0fWWSRDa+DK67Sr1CI6fw1I+WWZ48apiz9K/476P7q?=
 =?us-ascii?q?l3M5nkUdfaax0ZsNdH+4BuhmI1meYXf0htcBEGQKsRQkQO3llV2PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZmpeEFCDDW/od5mYW/cLcC+SItVukj0Y?=
 =?us-ascii?q?Vbe7TI8tzxGutBLgxLphIerZ4SkYtZPl1Nho6OzfjxAy9TpoD8uD12GBVX17nm?=
 =?us-ascii?q?QNRzUuxqBwvVR9ykuf0ah/m/FYF9tT6O1TXgc5Mp7cyep6C9fpVwLFf9eJTkum?=
 =?us-ascii?q?Q9q8DTEwSNIx38EBY0JnF9q+iRDD2jKgA6UJmLyTGJw07qXc0mDrKMZmy3bG06?=
 =?us-ascii?q?ohg0M8QsRVN22rnap/9wnVB47UnESVjaeqdaIA3CHT8GeP13aBvEZdUARoS6XK?=
 =?us-ascii?q?QWgfZlfKrdT+/k7CTKWhCbI9PgtFyM6NMK1KatLygFVCRffjPsneYm2rl2exAx?=
 =?us-ascii?q?aI2q2DbI7wd2oB2yXdDVAOkxoP8naeKQg+GiChrnrDAzN0C1LgfVng8elkp3O9?=
 =?us-ascii?q?VU870QeKY0pl17q2/x4VgeeRS/cS3rICpScgpC94HFe739LKFdWAoxBtc7lbYd?=
 =?us-ascii?q?M4+F1Hz37WtxRhPpy8KKBvnkMRfB5pv0zwzRl3Cp9Pkc4xrHw0ygp/MqaY0FJH?=
 =?us-ascii?q?dzOF0pH8ILzXKm/u/B+xb67awE3R0NGT+q0X8vQ3t03jvB21Fkol63hnz9hV03?=
 =?us-ascii?q?6b5pXWDAoTUYj9Ulot+xh9vbHaZig954Xb1XB3Nam0sznC288mBec/yxagectf?=
 =?us-ascii?q?P72AFAPoD8IaAM2uIvQwm1e1dhIEIPxS9KksMsy8c/uJxqGqM/hgnT68lmtH/Z?=
 =?us-ascii?q?1y3ViK9yp/Te7IwY0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn57sW2NC+FG/HV8H2c+pdgCUb1zyxgBQ0UUXoXq6mSq31T?=
 =?us-ascii?q?B0kjcprraB0yzK2ejtaB0HOmtTTml4kVjsOZS0j8wdXEWwdQgplQeq6lzgx6dG?=
 =?us-ascii?q?o6RzNW/TTllSfyj3Nm1tTrG/tr6fbMFR8pMotiNXXf+4YVCbTL79vhQb3zniH2?=
 =?us-ascii?q?tY2DA0aTWqto/lkBx9jWKXNGxzo2bBecFs2Rff48TRRP5Q3jYcRCh0kyLXBkW6?=
 =?us-ascii?q?P9Sy+dWUlpHDsv2xVm67V51TdzXrwp2EtCeh+WJqBhi/leipmtL7CQg6zTP719?=
 =?us-ascii?q?5yWCXKthn8eIrr16e9Me59ZUlnHlz868l7GoF4jIQwgood2XwbhpWT4HoGnn3/?=
 =?us-ascii?q?MdRd2aLicnUNQSQHzMLS4AjgwEdjNG6Gx5rlVnWBxctsf9m7bXkR2i4n7cBKCa?=
 =?us-ascii?q?GU4adAnSt0pFq4sA3QbeJ8njcb1fsh9noaj/sVtwoqyyWXGqoSElVAPSzwixSI?=
 =?us-ascii?q?6MizrKZNa2aua7Sw1Fd+ksqnDLGNuQxcXHf5epE/HS5/9Ml/MVTM0GHt5YHgYt?=
 =?us-ascii?q?XfcdUTthiMmRfak+dVMI4xluYNhSd/PGL9vH4lxPQhgR1gw566p5SHJHt3/K2i?=
 =?us-ascii?q?HBFYLDL1atgX+jHsi6Zeg8mX05quHpVnBjUEQp/oQei0HzIVsPTtLxyOHyEkqn?=
 =?us-ascii?q?eHBbrfGheS6Fthr3LKCZyqNmuYJH8EzdV5XxmdJVdSgAQVXDU8g544GRqmxM3n?=
 =?us-ascii?q?cEdl+D8R4kT0pQdLyuJtLxP/SHvQpB+0ajcoT5iSNAFZ4RtF50fRLMyS9OZzHz?=
 =?us-ascii?q?xD852lrQyNLHGbZgtSAWEIXEyEG07sPr206dbc9OiYA/K0L+HSbrWWtexeS/CI?=
 =?us-ascii?q?yIqt0oR8+jaDKN6PMmN+D/Eh2UpDQHN5G9nfmzoVUCwajCbNb8+dpBeh9Sx7tM?=
 =?us-ascii?q?G/8PL3WA3x4YuDEaddMdJq+xqum6eMK/aQhDplKTZfzp4NxXjIyKUG3F4PkS5u?=
 =?us-ascii?q?cSOhEa8HtS7LQ6LdgatXDx8dayNuO8pE9aM83g9ROcHFjtP5zKJ3jvkwC11dT1?=
 =?us-ascii?q?zuhtmpZdAWI2G6LF7HBFiENLWFJT3IwsH7e6C8SadXjOVbqRKwoyubE1T4MzSH?=
 =?us-ascii?q?ljnpUQ2vMO5WgCGaOhxepJ+ychJ3BWf/S9LmbwWxMMVrgj0u3b00mnTKOHYGPj?=
 =?us-ascii?q?hhaExNtKOf7CNCjvV7GmxM9X5lLeiCmyaE4OjUMJcWsf13Aitqk+JW+mg1y7xQ?=
 =?us-ascii?q?7CtcXvx6hDPSrsJyo1GhiuSP1jtnUB9UpjlXno6EoUViNrvf9pRbXXbE/RQN7X?=
 =?us-ascii?q?ifChgQpttlDMHvtL5UytTViK3zLzJC+crO/cQAH8jUNN6HMH05PBvpAjHUCg4F?=
 =?us-ascii?q?TT+tNW7Hhk1dkOud9nuarpUhrpjsmZwOSqJUVVAvF/MaDFhlE8IGIJttQjwklr?=
 =?us-ascii?q?ub34Y04i+UthjYQo1hopndVf+DSaHFMjeQi/9/exISwr7pBY0JM8vw3Ek0OXdg?=
 =?us-ascii?q?m4GfI0PNWZhupSZgZws3p1pW83k2GnU6xkajaQSm4XYXFvmrhR03ogF5Zvgp9T?=
 =?us-ascii?q?Gq6FAycAmZ7BAsmVU8zI22yQuadyT8eeLpBdlb?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A+AACA9/dbh0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgmmBAieDeYh3iyCCDRSXO4FeAQ8dCwgBgUuHDCI3Bg0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAQEaBgQ5DgsFAQkBAQoYKgICA?=
 =?us-ascii?q?yQBBCsGEwWDHAGBeQgEAQqmcXwzhUGESQoFgm2JHIFXP4ERghRQLoMbAQSBI4M?=
 =?us-ascii?q?/glcCiR+BcoQIQ49gRgcCghwEhFyGGIQzkQiKbYJWjElJgS5wUIJsgiQDFxKDO?=
 =?us-ascii?q?IUUhT8/MoEFAQEhE4ttAQE?=
X-IPAS-Result: =?us-ascii?q?A0A+AACA9/dbh0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBgmm?=
 =?us-ascii?q?BAieDeYh3iyCCDRSXO4FeAQ8dCwgBgUuHDCI3Bg0BAwEBAQEBAQIBEwEBAQgNC?=
 =?us-ascii?q?QgpIwyCNiQBgmEBAQEBAgEBAQEaBgQ5DgsFAQkBAQoYKgICAyQBBCsGEwWDHAG?=
 =?us-ascii?q?BeQgEAQqmcXwzhUGESQoFgm2JHIFXP4ERghRQLoMbAQSBI4M/glcCiR+BcoQIQ?=
 =?us-ascii?q?49gRgcCghwEhFyGGIQzkQiKbYJWjElJgS5wUIJsgiQDFxKDOIUUhT8/MoEFAQE?=
 =?us-ascii?q?hE4ttAQE?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="asc'?scan'208";a="41295654"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 04:52:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2504433AbeKWXgV (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 18:36:21 -0500
Received: from mail.bootlin.com ([62.4.15.54]:59341 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2403778AbeKWXgV (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 18:36:21 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 44788207B0; Fri, 23 Nov 2018 13:52:15 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from aptenodytes (aaubervilliers-681-1-94-205.w90-88.abo.wanadoo.fr [90.88.35.205])
        by mail.bootlin.com (Postfix) with ESMTPSA id DD81920791;
        Fri, 23 Nov 2018 13:52:14 +0100 (CET)
Message-ID: <c838df0a552cfc34de426dc2bc61bcff4a858e10.camel@bootlin.com>
Subject: Re: [PATCH v2 31/43] drm/sun4i: Add a dedicated ioctl call for
 allocating tiled buffers
From: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
To: Brian Starkey <Brian.Starkey@arm.com>
Cc: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        Maxime Ripard <maxime.ripard@bootlin.com>,
        "linux-sunxi@googlegroups.com" <linux-sunxi@googlegroups.com>,
        David Airlie <airlied@linux.ie>, Chen-Yu Tsai <wens@csie.org>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        Sean Paul <sean@poorly.run>, nd <nd@arm.com>
Date: Fri, 23 Nov 2018 13:52:14 +0100
In-Reply-To: <20181123113019.43vrzvj42l35el7z@DESKTOP-E1NTVVP.localdomain>
References: <20181123092515.2511-1-paul.kocialkowski@bootlin.com>
         <20181123092515.2511-32-paul.kocialkowski@bootlin.com>
         <20181123113019.43vrzvj42l35el7z@DESKTOP-E1NTVVP.localdomain>
Organization: Bootlin
Content-Type: multipart/signed; micalg="pgp-sha256";
        protocol="application/pgp-signature"; boundary="=-wyKL1j16CiEHA02MKSd3"
User-Agent: Evolution 3.30.2 
Mime-Version: 1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--=-wyKL1j16CiEHA02MKSd3
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Hi,

On Fri, 2018-11-23 at 11:30 +0000, Brian Starkey wrote:
> Hi Paul,
>=20
> On Fri, Nov 23, 2018 at 10:25:03AM +0100, Paul Kocialkowski wrote:
> > This introduces a dedicated ioctl for allocating buffers for the VPU
> > tiling mode. It allows setting up buffers that comply to the hardware
> > alignment requirements, by aligning the stride and height to 32 bytes.
> >=20
> > Only YUV semiplanar and planar formats are allowed by the ioctl, as the
> > hardware does not support the tiling mode for other formats.
>=20
> What's the general feeling about a more generic version of this ioctl?
> There doesn't seem to be anything Allwinner-specific in the ioctl
> arguments.

That's a great suggestion, I am totally in favour of making a generic
fashion of this!

It would also remove the need for a new header dedicated to the sun4i-
drm driver, which was really only motivated by the need for this ioctl.

> It effectively boils down to:
>=20
> 	size =3D driver->get_fb_size_with_modifier(...);
>  	cma_obj =3D drm_gem_cma_create(drm, size);
>=20
> It would look exactly the same for Mali-DP, and probably others too.
> Is it better to try and define something we can share instead of Arm
> adding another nearly identical ioctl() later?
>=20
> I think the minimal viable thing would be to just add modifiers to
> your structure (I put them first because padding):
>=20
>   struct drm_gem_create_with_modifiers {
>   	__u64 modifiers[4];
>   	__u32 height;
>   	__u32 width;
>   	__u32 format;
>   	/* handle, offsets, pitches, size will be returned */
>   	__u32 handle;
>   	__u32 pitches[4];
>   	__u32 offsets[4];
>   	__u64 size;
>   };

That would totally work for me and our usecase.

Cheers,

Paul

> Thanks,
> -Brian
>=20
> > Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
> > ---
> > drivers/gpu/drm/sun4i/sun4i_drv.c | 89 +++++++++++++++++++++++++++++++
> > include/uapi/drm/sun4i_drm.h      | 42 +++++++++++++++
> > 2 files changed, 131 insertions(+)
> > create mode 100644 include/uapi/drm/sun4i_drm.h
> >=20
> > diff --git a/drivers/gpu/drm/sun4i/sun4i_drv.c b/drivers/gpu/drm/sun4i/=
sun4i_drv.c
> > index ccdeae6299eb..5ae32973cf34 100644
> > --- a/drivers/gpu/drm/sun4i/sun4i_drv.c
> > +++ b/drivers/gpu/drm/sun4i/sun4i_drv.c
> > @@ -21,6 +21,7 @@
> > #include <drm/drm_gem_cma_helper.h>
> > #include <drm/drm_fb_helper.h>
> > #include <drm/drm_of.h>
> > +#include <drm/sun4i_drm.h>
> >=20
> > #include "sun4i_drv.h"
> > #include "sun4i_frontend.h"
> > @@ -28,6 +29,92 @@
> > #include "sun4i_tcon.h"
> > #include "sun8i_tcon_top.h"
> >=20
> > +int drm_sun4i_gem_create_tiled(struct drm_device *drm, void *data,
> > +			       struct drm_file *file_priv)
> > +{
> > +	struct drm_sun4i_gem_create_tiled *args =3D data;
> > +	struct drm_gem_cma_object *cma_obj;
> > +	struct drm_gem_object *gem_obj;
> > +	uint32_t luma_stride, chroma_stride;
> > +	uint32_t luma_height, chroma_height;
> > +	uint32_t chroma_width;
> > +	const struct drm_format_info *info;
> > +	int ret;
> > +
> > +	info =3D drm_format_info(args->format);
> > +	if (!info)
> > +		return -EINVAL;
> > +
> > +	/* The tiled output format only applies to non-packed YUV formats. */
> > +	if (!info->is_yuv || info->num_planes =3D=3D 1)
> > +		return -EINVAL;
> > +
> > +	memset(args->pitches, 0, sizeof(args->pitches));
> > +	memset(args->offsets, 0, sizeof(args->offsets));
> > +
> > +	/* Stride and height are aligned to 32 bytes for our tiled format. */
> > +	luma_stride =3D ALIGN(args->width, 32);
> > +	luma_height =3D ALIGN(args->height, 32);
> > +
> > +	chroma_width =3D args->width;
> > +
> > +	/* Semiplanar formats have both U and V data in their chroma plane. *=
/
> > +	if (drm_format_info_is_yuv_semiplanar(info))
> > +		chroma_width *=3D 2;
> > +
> > +	chroma_stride =3D ALIGN(DIV_ROUND_UP(chroma_width, info->hsub), 32);
> > +	chroma_height =3D ALIGN(DIV_ROUND_UP(args->height, info->vsub), 32);
> > +
> > +	if (drm_format_info_is_yuv_semiplanar(info)) {
> > +		args->pitches[0] =3D luma_stride;
> > +		args->pitches[1] =3D chroma_stride;
> > +
> > +		args->offsets[0] =3D 0;
> > +		args->offsets[1] =3D luma_stride * luma_height;
> > +
> > +		args->size =3D luma_stride * luma_height +
> > +			     chroma_stride * chroma_height;
> > +	} else if (drm_format_info_is_yuv_planar(info)) {
> > +		args->pitches[0] =3D luma_stride;
> > +		args->pitches[1] =3D chroma_stride;
> > +		args->pitches[2] =3D chroma_stride;
> > +
> > +		args->offsets[0] =3D 0;
> > +		args->offsets[1] =3D luma_stride * luma_height;
> > +		args->offsets[2] =3D luma_stride * luma_height +
> > +				   chroma_stride * chroma_height;
> > +
> > +		args->size =3D luma_stride * luma_height +
> > +			     chroma_stride * chroma_height * 2;
> > +	} else {
> > +		/* No support for other formats in tiled mode. */
> > +		return -EINVAL;
> > +	}
> > +
> > +	cma_obj =3D drm_gem_cma_create(drm, args->size);
> > +	if (IS_ERR(cma_obj))
> > +		return PTR_ERR(cma_obj);
> > +
> > +	gem_obj =3D &cma_obj->base;
> > +
> > +	/*
> > +	 * allocate a id of idr table where the obj is registered
> > +	 * and handle has the id what user can see.
> > +	 */
> > +	ret =3D drm_gem_handle_create(file_priv, gem_obj, &args->handle);
> > +	/* drop reference from allocate - handle holds it now. */
> > +	drm_gem_object_put_unlocked(gem_obj);
> > +	if (ret)
> > +		return ret;
> > +
> > +	return PTR_ERR_OR_ZERO(cma_obj);
> > +}
> > +
> > +static const struct drm_ioctl_desc sun4i_drv_ioctls[] =3D {
> > +	DRM_IOCTL_DEF_DRV(SUN4I_GEM_CREATE_TILED, drm_sun4i_gem_create_tiled,
> > +			  DRM_UNLOCKED),
> > +};
> > +
> > static int drm_sun4i_gem_dumb_create(struct drm_file *file_priv,
> > 				     struct drm_device *drm,
> > 				     struct drm_mode_create_dumb *args)
> > @@ -44,6 +131,8 @@ static struct drm_driver sun4i_drv_driver =3D {
> > 	.driver_features	=3D DRIVER_GEM | DRIVER_MODESET | DRIVER_PRIME | DRIV=
ER_ATOMIC,
> >=20
> > 	/* Generic Operations */
> > +	.ioctls			=3D sun4i_drv_ioctls,
> > +	.num_ioctls		=3D ARRAY_SIZE(sun4i_drv_ioctls),
> > 	.fops			=3D &sun4i_drv_fops,
> > 	.name			=3D "sun4i-drm",
> > 	.desc			=3D "Allwinner sun4i Display Engine",
> > diff --git a/include/uapi/drm/sun4i_drm.h b/include/uapi/drm/sun4i_drm.=
h
> > new file mode 100644
> > index 000000000000..2c77584b057b
> > --- /dev/null
> > +++ b/include/uapi/drm/sun4i_drm.h
> > @@ -0,0 +1,42 @@
> > +/* SPDX-License-Identifier: GPL-2.0+ WITH Linux-syscall-note */
> > +/* sun4i_drm.h
> > + *
> > + * Copyright (C) 2018 Paul Kocialkowski <paul.kocialkowski@bootlin.com=
>
> > + *
> > + * This program is free software; you can redistribute  it and/or modi=
fy it
> > + * under  the terms of  the GNU General  Public License as published b=
y the
> > + * Free Software Foundation;  either version 2 of the  License, or (at=
 your
> > + * option) any later version.
> > + */
> > +
> > +#ifndef _UAPI_SUN4I_DRM_H_
> > +#define _UAPI_SUN4I_DRM_H_
> > +
> > +#include "drm.h"
> > +
> > +#if defined(__cplusplus)
> > +extern "C" {
> > +#endif
> > +
> > +struct drm_sun4i_gem_create_tiled {
> > +	__u32 height;
> > +	__u32 width;
> > +	__u32 format;
> > +	/* handle, offsets, pitches, size will be returned */
> > +	__u32 handle;
> > +	__u32 pitches[4];
> > +	__u32 offsets[4];
> > +	__u64 size;
> > +};
> > +
> > +#define DRM_SUN4I_GEM_CREATE_TILED	0x00
> > +
> > +#define DRM_IOCTL_SUN4I_GEM_CREATE_TILED \
> > +	DRM_IOWR(DRM_COMMAND_BASE + DRM_SUN4I_GEM_CREATE_TILED, \
> > +		 struct drm_sun4i_gem_create_tiled)
> > +
> > +#if defined(__cplusplus)
> > +}
> > +#endif
> > +
> > +#endif /* _UAPI_SUN4I_DRM_H_ */
> > --=20
> > 2.19.1
> >=20
> > _______________________________________________
> > dri-devel mailing list
> > dri-devel@lists.freedesktop.org
> > https://lists.freedesktop.org/mailman/listinfo/dri-devel
--=20
Paul Kocialkowski, Bootlin (formerly Free Electrons)
Embedded Linux and kernel engineering
https://bootlin.com

--=-wyKL1j16CiEHA02MKSd3
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: This is a digitally signed message part
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----

iQEzBAABCAAdFiEEJZpWjZeIetVBefti3cLmz3+fv9EFAlv39/4ACgkQ3cLmz3+f
v9EvJggAhckpy2/VD0havwtKp4EM8UMD08Ze5PBhKOQJ4mb9DgfuUbebff+BConj
oM6BHBslXITxmQi2drXOOFcRzKvLKoFOy23MgLyImniRAV2mkHe6cZ1pdppGfZyx
wHUGQm8KRuZkRhUPhDwm4RXGyH0gm5WUdHhGoQzGPCQm3Cq3PXuZUlVPyi4w1QpL
rGGbPZhzr8jZnMCWYmGTYYev0DPp9dkySKOKedxOgukBQ6uOl4uC20Oelul2ERUW
dthQA4uvJkOeIhEqPQDVkZcHb6fhi5kb2Wo+Oxt0AOXn5MevTykv4LSla6k+HMDJ
oYM4Xqp15N4ljhNV1+sSBqiho57xeQ==
=X2ZE
-----END PGP SIGNATURE-----

--=-wyKL1j16CiEHA02MKSd3--

