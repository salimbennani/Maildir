Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7F7495804F9;
	Fri,  7 Dec 2018 15:31:45 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 07 Dec 2018 15:31:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcoDhMhZdOqbwOTahd/YImGz/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcu+Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQctQGS2RBQMtdTjVND56m?=
 =?us-ascii?q?YIQSE+cOIOBYoZXhqFsQsBSyGxSnCOfvxzNVg3P727Ax3eY8HgHcxAEuAdIAvm?=
 =?us-ascii?q?nXotv7OqgdXvy6wqbTzTXbbf5bwiv95YrSfxw9vf2BU7B9fMzMwkcvDQPFiVCQ?=
 =?us-ascii?q?pJTkMTOI1+QNt2yb4PB9VeKqlWEsth9/oiWzyccvlIbJnJ8ex1fL9SVkwYY1Id?=
 =?us-ascii?q?m4R1RmYd6hDpRcrT2aN5ZqTcMhXW5ooj03xaEBuZ6/eCgF0o8oxxnFa/OdaYSH?=
 =?us-ascii?q?/hXjVOOILDp+mXlrdrW/hxOo/kihzO3xTse00ExUoSVbj9bDqGsN1x/P6siAUv?=
 =?us-ascii?q?tx5ECh2SyA1wzL6eFLP1o0lazFJJ4l2LIwkYATsUvbEiDtgkr3jKuWdkQ/9eiy?=
 =?us-ascii?q?9evreKnpppiZN4NshQH+M7gumsyiAesjKAQBQ2+b+eGk2L3n/E35RqhKj/Ivnq?=
 =?us-ascii?q?bDqpDaIN4XpqmjAw9ayooj6AiwDy2g0NsGmXkIMFNFdAiAj4jzNFHDJu3zA/Sn?=
 =?us-ascii?q?g1m0jjtn2/TLMqf8DpjDMHTPiqrtcLVh50JGyQc+z8hT6p1VB70bPv7+VE/8uM?=
 =?us-ascii?q?bGAhMnMQG42fjrBMt/244YRGmBGLWWMLnIvl+N/u8vI/eDZIsSuDvlNfgl6ODh?=
 =?us-ascii?q?jWUjlV8eY6apx50XZ268Hvh8JEWZe3Xsjs8AEWcMoAU+UPTnhEOeXTNXfXq+Qq?=
 =?us-ascii?q?wx6i8hBI67DorPWpqhjb2D0SujG51ZfGFGClSCEXfycIWEXu8BaCaTIs9njzwF?=
 =?us-ascii?q?WqGtS4w/2hG0sg/11b5nIvPT+iwWs5LsysJ16vbNlRE96zN0Fd6R02KTQGFumG?=
 =?us-ascii?q?MHWTs20Lp4oUxnxVePybJ4jOBAFdxP+/NJVR83NZrdz+x5Fd/+QA3AfsqSRVai?=
 =?us-ascii?q?Q9WmBywxT90rz98PZUZ9B8utjhTZ0yW2BL8VkqSBBIYo/aLEw3jxO8F9xm7G1K?=
 =?us-ascii?q?Y7jlkmXtFANWq8iq5/6gjcHYjJk0qCmqaudKQc2jPN9WiZwWqPukFYTBB/UaHf?=
 =?us-ascii?q?UX8DYUvWqMzz5lneQL+2FbQnLgxBxNaAKqtNdNLll1ZGRPDlONTYZGK8gGOwBR?=
 =?us-ascii?q?eOxrORY4vmYWQd3CPBCEcalwAf52qJNQ87Bi25uWLRECRuFU7zY0Pr6eRxsmi7?=
 =?us-ascii?q?Tk8zzwGJdUFhzaC6+hwOiPyYSvMT2K8EuSg7pzV1Gla9w8zZC96aqwV9e6VcZM?=
 =?us-ascii?q?s34E1b2mLBqwx9IpugIrhhhlEEdQR7pUfu1xRtBYVGnsgnt3cqzAt0KaKF31JN?=
 =?us-ascii?q?bTKY3ZbsOrLJLmn+5gyga6nT2lvGytaZ5r8P6Ogkq1XkpAymC1At82t53NVP03?=
 =?us-ascii?q?uT/JPKDBEMXpL3VUo38xt6p7TeYiQm44PU1HtsMbS7szPY2tIpAvclxQikf9tF?=
 =?us-ascii?q?LKyEEwryGdUAB8eyMOwqh0SpbhUcMe9P7qE0Id2pe+GG2KGxOuZghyypjWJc7Y?=
 =?us-ascii?q?B500KM8Td8S+HS05YExfGYwhWIVzPmgFi9tcD3nJhOZSsOEWqn1SjkGIlRa7Vu?=
 =?us-ascii?q?fYYKDGeuJNG3xtV+hpL3R35U7lmjB0kC2M+ofxqSYEfw3QlR1UQRvHymljG0zz?=
 =?us-ascii?q?1ykzE1sKWf2DbCzPjldBoCImRLXnVtjU/wIYioiNAXRFKnbww3mxqq+0n7x7JX?=
 =?us-ascii?q?q79iL2bOW0hIeSv2L2Z8UqarsrqCYshP6I4nsClNUeS8Z0yaRaD5oxcAzyzjGG?=
 =?us-ascii?q?5ezighdz62opX5gwB6iGWFIXdzsXrVY91/yQ3e5dzcX/FR2DUGSTJ8iTnWAFi8?=
 =?us-ascii?q?Itao8c+Vl5fFruCxSWahWodPfinsyIOKrDG76nFyAR2jg/CzncXqERI70SDnzd?=
 =?us-ascii?q?ZqTzjHrBHmbontyau6K+NnclB0C1Dm78p1B59xkpE3hJEWwnUagpSV/XwakWb8?=
 =?us-ascii?q?K9lb2KT+bGYTSj4P2dLa/A/l2Eh7JHKT2435TmmdwtdmZ9SiYmIW2zgx7sBQBK?=
 =?us-ascii?q?eP8bxEmzB4ol65rQLXfPh8kS0Ryfoo6H4Gne4JvBAhwTmaArAXBUNYJzDjlwyU?=
 =?us-ascii?q?79Ciq6VafGSvfqKq1Ep9ntChC6uOohpGV3b6eZciHClw4dt5MF/X1H3z64fkeM?=
 =?us-ascii?q?TfbN4Jtx2UlQvAgPZRKJ4rivUKgi9nM3rnvXI50+47kQBu3ZaisYmHMWpt+7i1?=
 =?us-ascii?q?AhxZNj3zfM4T/jDtjaBDnseZxYyvH5NhGikVU5vsV/6nDDUStfH/PQaUDDI8sm?=
 =?us-ascii?q?ubGabYHQKH60dptXPPH4qrN3GKPnYZy9piSQKZJExehgAUQTo7koQ4FgCs2Mzu?=
 =?us-ascii?q?bkN56ioN6V7/rxtG0vhoOAXnUmfDuAeobS85SJ2eLBpV9A5O/UnUPtKF7uJvAS?=
 =?us-ascii?q?5Y5IauoxKXKmyUfAlICWAJWkqZB1HsJLWu5N/A8/SGCeq6NffBfbKOqelGXfeS?=
 =?us-ascii?q?2Z2vypdm/yqLNsiXInliCPg71lBCXH9jHcTZhi4PSzcWly/Wa86bpRG8+jB4r8?=
 =?us-ascii?q?yl8fTrXh7v6pWLC7dILdpv/BW2i7+ZN+GMnCZ5NSpY1pQUyHDT0rcf21oSizx0?=
 =?us-ascii?q?ezmpDLQNrirNTKPWmq9KAB8XcSJzNM1U760i2glBI9LUitTw1rRglP46F09FVU?=
 =?us-ascii?q?D9msGufcEKIXuyNFbZC0aQLriGOSfHw8LqYaO/VL1Qiv9btwartDafEk/jOCmD?=
 =?us-ascii?q?ljbzWxCuN+FMkD+UPBhEtI6hdRZtDHDpTMj6ZR2jLN93kTo2zKU0h3PNKG4cKC?=
 =?us-ascii?q?V8fFlLrrGK9iNYhfN/G2Na43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6TlOROZplyvKst5uv1amn/GPyjV5URpOqTVLhIORsUVhI6XZ8ZZAVmje/BIQ9m?=
 =?us-ascii?q?WdEBAKp9pjCt3ytKFc0NnPlKTvKDhc99LY59cTB8/RKMifKnouLQLpGCLIDAsC?=
 =?us-ascii?q?VTOkL3zfiFdHkP6M9nyZtJw6qpn3lZoKS79bUkE1F/wABkRkGtwCPIl4Xjc+nb?=
 =?us-ascii?q?GHi84I4GK0rAPNS8VCopDHSvWSDO3zKDaYiLlIfQcHzankIoQTKIL73Vdval17?=
 =?us-ascii?q?nITMBkrRUspBoixnbg8ovkpN9GJyQXE020Lgcgmt+mMcFeaonh4qjQtzeeQs+y?=
 =?us-ascii?q?3q41cyJ1rKojM/kUgxmdr/hzCRfyX8LKOxXYFQFir1uFI9MpL9QwZpcwKymVZo?=
 =?us-ascii?q?OyvDR7JU3PNccjVBhQmUgphCFvFHBflOexwdyv6MT+8l3VRVtmOswkoRoaPhGI?=
 =?us-ascii?q?ZumUMSeIOo5yZEyh9vYfYvKKDQLbYPxV9V0PGgpCitg88swQsaLlsI/SuuZSUL?=
 =?us-ascii?q?tVZAYrY7Ji6s9/Fp5EqehjBAdXIkXP0upvtg8Vk0fe+HynSzgPZ4NkmtOrnHfO?=
 =?us-ascii?q?uisG/amJvNHgI9?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAACWAQtch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDeogZjBGBYEFojUWJDoF2KQ0GAYMmRYNyIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCCkjDII2JIJqAiAEUgYJAhgGBgIYDgICA1oBDAYCAQEBg?=
 =?us-ascii?q?xwBggEEAQqlSHwzhC0BhX6BC4sXgVc/gREngjYHg0wBAQIYhEuCVwKJN4YERoV?=
 =?us-ascii?q?vincHAoIhBIRhgzmHBh6BXE2ESYMBh0WJEJFRgg0zGiODPAmCHheDSoUUhT8/M?=
 =?us-ascii?q?4EFAQGKXQEB?=
X-IPAS-Result: =?us-ascii?q?A0AQAACWAQtch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDeogZjBGBYEFojUWJDoF2KQ0GAYMmRYNyIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCCkjDII2JIJqAiAEUgYJAhgGBgIYDgICA1oBDAYCAQEBgxwBggEEAQqlSHw?=
 =?us-ascii?q?zhC0BhX6BC4sXgVc/gREngjYHg0wBAQIYhEuCVwKJN4YERoVvincHAoIhBIRhg?=
 =?us-ascii?q?zmHBh6BXE2ESYMBh0WJEJFRgg0zGiODPAmCHheDSoUUhT8/M4EFAQGKXQEB?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="56607206"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 15:31:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726160AbeLGXbk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 18:31:40 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:60878 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726107AbeLGXbj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 18:31:39 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: gtucker)
        with ESMTPSA id A5FB4260639
To: Ben Skeggs <bskeggs@redhat.com>, Lyude Paul <lyude@redhat.com>
From: Guillaume Tucker <guillaume.tucker@collabora.com>
Subject: next/master boot bisection: Oops in nouveau driver on jetson-tk1
Cc: nouveau@lists.freedesktop.org, David Airlie <airlied@linux.ie>,
        dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
        kernel@collabora.com, Mark Brown <broonie@kernel.org>,
        Thierry Reding <thierry.reding@gmail.com>,
        Karol Herbst <kherbst@redhat.com>,
        Kevin Hilman <khilman@baylibre.com>
Message-ID: <89fa50d0-945f-d1ed-ae55-ee947187f209@collabora.com>
Date: Fri, 7 Dec 2018 23:31:34 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Please find below an automated bisection report for a kernel Oops
seen during the initialisation of the nouveau GPU driver on
jetson-tk1.


All the LAVA test jobs for this bisection can be found here:

  http://lava.baylibre.com:10080/scheduler/alljobs?length=25&search=lava-bisect-staging-7366#table


Here's the beginning of the Oops stack trace:

[    7.485361] [00000064] *pgd=f9e7b835
[    7.485372] Internal error: Oops: 17 [#1] SMP ARM
[    7.485376] Modules linked in: snd_soc_tegra_rt5640(+) snd_soc_tegra_utils snd_soc_rt5640(+) snd_soc_rl6231 snd_soc_tegra30_ahub snd_hda_tegra snd_soc_core snd_hda_codec snd_hda_core ac97_bus snd_pcm_dmaengine snd_pcm xhci_tegra(+) snd_timer snd soundcore nouveau(+) ttm tegra_devfreq tegra_wdt
[    7.542227] CPU: 1 PID: 128 Comm: udevd Not tainted 4.20.0-rc5-next-20181206 #44
[    7.549603] Hardware name: NVIDIA Tegra SoC (Flattened Device Tree)
[    7.555859] PC is at drm_plane_register_all+0x18/0x50
[    7.560899] LR is at drm_modeset_register_all+0xc/0x6c


Full log:

  http://lava.baylibre.com:10080/scheduler/job/68628#L816


The bisection was run from next-20181206 as this is where the
issue was discovered on kernelci.org but the patch it found has
already been merged in mainline.

Hope this helps!

Guillaume


-----------8<------------------------8<-----------


* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* This automated bisection report was sent to you on the basis  *
* that you may be involved with the breaking commit it has      *
* found.  No manual investigation has been done to verify it,   *
* and the root cause of the problem may be somewhere else.      *
* Hope this helps!                                              *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

Bisection result for next/master (next-20181206) on jetson-tk1

  Good:       84df9525b0c2 Linux 4.19
  Bad:        4c92b7b3080d Add linux-next specific files for 20181206
  Found:      cfea88a4d866 drm/nouveau: Start using new drm_dev initialization helpers

Checks:
  revert:     PASS
  verify:     PASS

Parameters:
  Tree:       next
  URL:        None
  Branch:     master
  Target:     jetson-tk1
  Lab:        lab-baylibre
  Config:     multi_v7_defconfig
  Plan:       dmesg-nouveau

Breaking commit found:

-------------------------------------------------------------------------------
commit cfea88a4d86632f28cf80be97079f131645b7869
Author: Lyude Paul <lyude@redhat.com>
Date:   Wed Aug 22 21:40:07 2018 -0400

    drm/nouveau: Start using new drm_dev initialization helpers
    
    Per the documentation in drm_get_pci_dev(), this function is deprecated
    and shouldn't be used anymore. As it turns out, we're going to need to
    stop using drm_get_pci_dev() anyway in order to allow us to turn off the
    card before full system shutdowns, otherwise we'll hit race conditions
    with userspace while trying to tear down the card on shutdown.
    
    So, start using drm_dev_get() and drm_dev_put(), and just turn our
    load/unload callbacks into open coded init/fini() functions.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Cc: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nouveau_drm.c b/drivers/gpu/drm/nouveau/nouveau_drm.c
index 905956809d21..2b2baf6e0e0d 100644
--- a/drivers/gpu/drm/nouveau/nouveau_drm.c
+++ b/drivers/gpu/drm/nouveau/nouveau_drm.c
@@ -458,75 +458,8 @@ nouveau_accel_init(struct nouveau_drm *drm)
 	nouveau_bo_move_init(drm);
 }
 
-static int nouveau_drm_probe(struct pci_dev *pdev,
-			     const struct pci_device_id *pent)
-{
-	struct nvkm_device *device;
-	struct apertures_struct *aper;
-	bool boot = false;
-	int ret;
-
-	if (vga_switcheroo_client_probe_defer(pdev))
-		return -EPROBE_DEFER;
-
-	/* We need to check that the chipset is supported before booting
-	 * fbdev off the hardware, as there's no way to put it back.
-	 */
-	ret = nvkm_device_pci_new(pdev, NULL, "error", true, false, 0, &device);
-	if (ret)
-		return ret;
-
-	nvkm_device_del(&device);
-
-	/* Remove conflicting drivers (vesafb, efifb etc). */
-	aper = alloc_apertures(3);
-	if (!aper)
-		return -ENOMEM;
-
-	aper->ranges[0].base = pci_resource_start(pdev, 1);
-	aper->ranges[0].size = pci_resource_len(pdev, 1);
-	aper->count = 1;
-
-	if (pci_resource_len(pdev, 2)) {
-		aper->ranges[aper->count].base = pci_resource_start(pdev, 2);
-		aper->ranges[aper->count].size = pci_resource_len(pdev, 2);
-		aper->count++;
-	}
-
-	if (pci_resource_len(pdev, 3)) {
-		aper->ranges[aper->count].base = pci_resource_start(pdev, 3);
-		aper->ranges[aper->count].size = pci_resource_len(pdev, 3);
-		aper->count++;
-	}
-
-#ifdef CONFIG_X86
-	boot = pdev->resource[PCI_ROM_RESOURCE].flags & IORESOURCE_ROM_SHADOW;
-#endif
-	if (nouveau_modeset != 2)
-		drm_fb_helper_remove_conflicting_framebuffers(aper, "nouveaufb", boot);
-	kfree(aper);
-
-	ret = nvkm_device_pci_new(pdev, nouveau_config, nouveau_debug,
-				  true, true, ~0ULL, &device);
-	if (ret)
-		return ret;
-
-	pci_set_master(pdev);
-
-	if (nouveau_atomic)
-		driver_pci.driver_features |= DRIVER_ATOMIC;
-
-	ret = drm_get_pci_dev(pdev, pent, &driver_pci);
-	if (ret) {
-		nvkm_device_del(&device);
-		return ret;
-	}
-
-	return 0;
-}
-
 static int
-nouveau_drm_load(struct drm_device *dev, unsigned long flags)
+nouveau_drm_device_init(struct drm_device *dev)
 {
 	struct nouveau_drm *drm;
 	int ret;
@@ -613,7 +546,7 @@ nouveau_drm_load(struct drm_device *dev, unsigned long flags)
 }
 
 static void
-nouveau_drm_unload(struct drm_device *dev)
+nouveau_drm_device_fini(struct drm_device *dev)
 {
 	struct nouveau_drm *drm = nouveau_drm(dev);
 
@@ -642,18 +575,116 @@ nouveau_drm_unload(struct drm_device *dev)
 	kfree(drm);
 }
 
+static int nouveau_drm_probe(struct pci_dev *pdev,
+			     const struct pci_device_id *pent)
+{
+	struct nvkm_device *device;
+	struct drm_device *drm_dev;
+	struct apertures_struct *aper;
+	bool boot = false;
+	int ret;
+
+	if (vga_switcheroo_client_probe_defer(pdev))
+		return -EPROBE_DEFER;
+
+	/* We need to check that the chipset is supported before booting
+	 * fbdev off the hardware, as there's no way to put it back.
+	 */
+	ret = nvkm_device_pci_new(pdev, NULL, "error", true, false, 0, &device);
+	if (ret)
+		return ret;
+
+	nvkm_device_del(&device);
+
+	/* Remove conflicting drivers (vesafb, efifb etc). */
+	aper = alloc_apertures(3);
+	if (!aper)
+		return -ENOMEM;
+
+	aper->ranges[0].base = pci_resource_start(pdev, 1);
+	aper->ranges[0].size = pci_resource_len(pdev, 1);
+	aper->count = 1;
+
+	if (pci_resource_len(pdev, 2)) {
+		aper->ranges[aper->count].base = pci_resource_start(pdev, 2);
+		aper->ranges[aper->count].size = pci_resource_len(pdev, 2);
+		aper->count++;
+	}
+
+	if (pci_resource_len(pdev, 3)) {
+		aper->ranges[aper->count].base = pci_resource_start(pdev, 3);
+		aper->ranges[aper->count].size = pci_resource_len(pdev, 3);
+		aper->count++;
+	}
+
+#ifdef CONFIG_X86
+	boot = pdev->resource[PCI_ROM_RESOURCE].flags & IORESOURCE_ROM_SHADOW;
+#endif
+	if (nouveau_modeset != 2)
+		drm_fb_helper_remove_conflicting_framebuffers(aper, "nouveaufb", boot);
+	kfree(aper);
+
+	ret = nvkm_device_pci_new(pdev, nouveau_config, nouveau_debug,
+				  true, true, ~0ULL, &device);
+	if (ret)
+		return ret;
+
+	pci_set_master(pdev);
+
+	if (nouveau_atomic)
+		driver_pci.driver_features |= DRIVER_ATOMIC;
+
+	drm_dev = drm_dev_alloc(&driver_pci, &pdev->dev);
+	if (IS_ERR(drm_dev)) {
+		ret = PTR_ERR(drm_dev);
+		goto fail_nvkm;
+	}
+
+	ret = pci_enable_device(pdev);
+	if (ret)
+		goto fail_drm;
+
+	drm_dev->pdev = pdev;
+	pci_set_drvdata(pdev, drm_dev);
+
+	ret = nouveau_drm_device_init(drm_dev);
+	if (ret)
+		goto fail_pci;
+
+	ret = drm_dev_register(drm_dev, pent->driver_data);
+	if (ret)
+		goto fail_drm_dev_init;
+
+	return 0;
+
+fail_drm_dev_init:
+	nouveau_drm_device_fini(drm_dev);
+fail_pci:
+	pci_disable_device(pdev);
+fail_drm:
+	drm_dev_put(drm_dev);
+fail_nvkm:
+	nvkm_device_del(&device);
+	return ret;
+}
+
 void
 nouveau_drm_device_remove(struct drm_device *dev)
 {
+	struct pci_dev *pdev = dev->pdev;
 	struct nouveau_drm *drm = nouveau_drm(dev);
 	struct nvkm_client *client;
 	struct nvkm_device *device;
 
+	drm_dev_unregister(dev);
+
 	dev->irq_enabled = false;
 	client = nvxx_client(&drm->client.base);
 	device = nvkm_device_find(client->device);
-	drm_put_dev(dev);
 
+	nouveau_drm_device_fini(dev);
+	pci_disable_device(pdev);
+	drm_dev_put(dev);
 	nvkm_device_del(&device);
 }
 
@@ -1020,8 +1051,6 @@ driver_stub = {
 		DRIVER_GEM | DRIVER_MODESET | DRIVER_PRIME | DRIVER_RENDER |
 		DRIVER_KMS_LEGACY_CONTEXT,
 
-	.load = nouveau_drm_load,
-	.unload = nouveau_drm_unload,
 	.open = nouveau_drm_open,
 	.postclose = nouveau_drm_postclose,
 	.lastclose = nouveau_vga_lastclose,
-------------------------------------------------------------------------------


Git bisection log:

-------------------------------------------------------------------------------
git bisect start
# good: [84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d] Linux 4.19
git bisect good 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d
# bad: [4c92b7b3080d8281941ae81c51cd62bb49bdc3d4] Add linux-next specific files for 20181206
git bisect bad 4c92b7b3080d8281941ae81c51cd62bb49bdc3d4
# bad: [c38239b4be1ac7e4bcf5bbd971353bae51525b8f] Merge branch 'parisc-4.20-2' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux
git bisect bad c38239b4be1ac7e4bcf5bbd971353bae51525b8f
# good: [d49f8a52b15bf35db778035340d8a673149f9f93] Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi
git bisect good d49f8a52b15bf35db778035340d8a673149f9f93
# good: [ac747c0715f29c2be3848b719a1b7e65b07f7b21] Merge tag 'kbuild-v4.20' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild
git bisect good ac747c0715f29c2be3848b719a1b7e65b07f7b21
# bad: [46972c03ab667dc298cad0c9db517fb9b1521b5f] Merge tag 'drm-misc-next-fixes-2018-10-10' of git://anongit.freedesktop.org/drm/drm-misc into drm-next
git bisect bad 46972c03ab667dc298cad0c9db517fb9b1521b5f
# good: [6ac99a328ee16d3f8cc253f1df62623cee3e9ea5] drm/exynos: mixer: Make plane alpha configurable
git bisect good 6ac99a328ee16d3f8cc253f1df62623cee3e9ea5
# good: [0957dc7097a3f462f6cedb45cf9b9785cc29e5bb] drm/amdgpu: revert "stop using gart_start as offset for the GTT domain"
git bisect good 0957dc7097a3f462f6cedb45cf9b9785cc29e5bb
# good: [2de0b0a158bf423208c3898522c8fa1c1078df48] Merge tag 'drm/tegra/for-4.20-rc1' of git://anongit.freedesktop.org/tegra/linux into drm-next
git bisect good 2de0b0a158bf423208c3898522c8fa1c1078df48
# good: [04b96b63c5640a305e30611def7a9c5fcd7a72cf] drm/msm/dpu: Remove unneeded checks in dpu_crtc.c
git bisect good 04b96b63c5640a305e30611def7a9c5fcd7a72cf
# good: [6952e3a1dffcb931cf8625aa01642b9afac2af61] Merge branch 'for-upstream/mali-dp' of git://linux-arm.org/linux-ld into drm-next
git bisect good 6952e3a1dffcb931cf8625aa01642b9afac2af61
# good: [62e681f7dcab746412dce22d4b75b32c5ea38cdb] Merge tag 'drm-msm-fixes-2018-10-09' of git://people.freedesktop.org/~robclark/linux into drm-next
git bisect good 62e681f7dcab746412dce22d4b75b32c5ea38cdb
# bad: [7e6191d4360a2df6cf2a2613dcb79680cb943df8] Merge branch 'linux-4.20' of git://github.com/skeggsb/linux into drm-next
git bisect bad 7e6191d4360a2df6cf2a2613dcb79680cb943df8
# good: [c4cee69a4497d9c6ad8868d63568b30e50cac9e9] drm/nouveau: Fix potential memory leak in nouveau_drm_load()
git bisect good c4cee69a4497d9c6ad8868d63568b30e50cac9e9
# bad: [a971558c298755d2c07bc5508c65d689471763c8] drm/nouveau/disp: keep track of high-speed state, program into clock
git bisect bad a971558c298755d2c07bc5508c65d689471763c8
# bad: [4126b99e744b7a29746e201e2be6644d2edf3c56] drm/nouveau/disp: add a way to configure scrambling/tmds for hdmi 2.0
git bisect bad 4126b99e744b7a29746e201e2be6644d2edf3c56
# bad: [cfea88a4d86632f28cf80be97079f131645b7869] drm/nouveau: Start using new drm_dev initialization helpers
git bisect bad cfea88a4d86632f28cf80be97079f131645b7869
# first bad commit: [cfea88a4d86632f28cf80be97079f131645b7869] drm/nouveau: Start using new drm_dev initialization helpers
-------------------------------------------------------------------------------
