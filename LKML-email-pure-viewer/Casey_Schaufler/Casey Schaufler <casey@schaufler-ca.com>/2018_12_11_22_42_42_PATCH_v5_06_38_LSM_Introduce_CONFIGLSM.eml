Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:57:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8594158079D;
	Tue, 11 Dec 2018 14:48:05 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 14:48:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aft5sChRoi7QcSUFDjZQ6WgJ/eNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRCEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KhsShDnki?=
 =?us-ascii?q?cHNzk+8G3Ok8B9kKxWrRO8qxBm34LYfZyeOP5gcq/BeN8XQ3dKUMRMWCxbGo6y?=
 =?us-ascii?q?b5UBAfcPM+hbqIfypVUOrQCmBQSuH+7j1iNEi2Xq0aAgz+gtDQfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34ObkIXuCu0qbJzSjIYe5K1jf98ofIbx4hofWSUrJqbMHczlUgGBnejlqO?=
 =?us-ascii?q?qY3oJCiV2fgNs2eB8upgW+avhHA9qw1ovjeg3N0ghZXOhoIQ013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fdqpHIFNuyyUKYd6WN4uTmJ0tCogy7ALu4a3cSkIxZg92hLSaviKf5KJ?=
 =?us-ascii?q?7x/jTuqdPyl0iX1jdbminRi961Kgxff5VsSs0FZFsC5Fkt7Uu3AT2Bzc9NKHRu?=
 =?us-ascii?q?F+/ki/wzaP0R7c6uVeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFnygaOMa0kp9Pak?=
 =?us-ascii?q?5/76brjlupOQLY55hwPmPqQrgMO/AOA4MgYUX2ic/OSxzLnj/Uz/QLVXgfw6i6?=
 =?us-ascii?q?rZv47AJcQduKG5BxZZ0oEt6ha5ETimys8VnWcILF1bYhKLlYvpNE/UIPD+E/i/?=
 =?us-ascii?q?h06gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPYqUWI6f43I+mQeI8Vvy7wK/g/6P7v?=
 =?us-ascii?q?kX82g1gdcbOp3ZsKcn+4GPtmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2Hp9RZm9YEFyMEnDod4OCW/cLcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mFyW6NVGF0nm?=
 =?us-ascii?q?QLRzMsxqBwu059x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDY0VnFNWklBzD2yuqDKUTl7yEH5E09qPc337sJ8dy0XrG1a?=
 =?us-ascii?q?8hj0U4TctLL2Gpmql/9w3LDY7Tj0qZj7qqdbgb3CPV6WiM13SOs19CXA5wS6rF?=
 =?us-ascii?q?W2sfaVXQrdj+4kPCTLquCbA8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgO8nmcKwgxGD2to2LEAzxoDlLgfUXs/PJ6qHO6?=
 =?us-ascii?q?SE800g6LY1dg17qz5h4am/icR+kP0bIDvScrsy90E0ql39LKF9qAoBJsfLldYd?=
 =?us-ascii?q?M451dHyWLZtgxnMpy8NaxigUQecwB2v0Po2BV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk3sVHjsx+mF0U883RrycJa02?=
 =?us-ascii?q?aB6ZrQCgoSUpXxUlgs+hh+prHaZDQ95ozO2X1tN6m0riHN29YzCOQ5zRages9V?=
 =?us-ascii?q?MLmYGw/qD80aG8+uJfQqmli0dB4LIPpe9a80P8y8cfuG17WmPOJhnDKgkGRG75?=
 =?us-ascii?q?px0kOK9ypgVOHI24wJzO2f3guCTz38lkuustjrmYBYYjEfBnC/ySn4C4FLfK19?=
 =?us-ascii?q?YIELBX2oI8Kp3NV+hofhVGJC+16nGlwJxtWpeR2Ub1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUmobggljhuk6Vzhx6hG?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D07dSuluo/6nxx5j2KRNm1zo2DaecFzxBff4sLTRfhK0zoCRSl4jyTXB1em?=
 =?us-ascii?q?M9mo+9WUi4nMsuSkW229UZ1TdDHhzZmcuyuj+W1qHRq/kuizm9L9Fgg2yy3719?=
 =?us-ascii?q?hsVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL9dnUNRCQHw97I4Af/3k1jIWmEx4b4VnWb38tgaMO2YmIQ2iIh8c9KDL?=
 =?us-ascii?q?2Y46BDnStwulC4tx7eYeBhnjcBzvsj8Hsag+AKuAU31CmcDK4dHVJEPSPyjRSH?=
 =?us-ascii?q?9M6xrL9YZGu0dbiw1Ux+nc2uDb2YowFcXmr5dYkmHSNq8sp/N1fM2mXp6o74YN?=
 =?us-ascii?q?nQcc4TthqMnhfciOhVLYg9l/sQiiphJGL9pmYly+8ggBxq3JG6upWHKmp38KK4?=
 =?us-ascii?q?BB5YKiP6Z8cJ9j7xiqZem96c35qzEZV5BjULQJzoQOqzHz0IsvTnMxuOHCc4qn?=
 =?us-ascii?q?eGArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph5DAe/Fv4pQVXyu5yKxnzSGTfpBqrajcpTpiQNgFW4xpG50fUN8ye8+1yEz?=
 =?us-ascii?q?tZ/p2nsAyCNGibax5UAmEOX0yOH0rjMaW25dnc7+iYAfKzLvvJYbWTsOxeSu2H?=
 =?us-ascii?q?xZS13ot9+DaMMMqPM2JmD/063EpDQH94F97YmzUJVywYiSbNY9SHqxe7/y19tt?=
 =?us-ascii?q?q//+jzWALz+YuPDKNfMdVx9BC3gqeDNO+QiDx6KTZC0ZMMymHHyKIC3F4JkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdT1?=
 =?us-ascii?q?Phh9qmZdYULGC9Ll/HAEeLOa+CJT3KxcH3fKy9RadRjOVSqx2/pzKbH1X/MTSE?=
 =?us-ascii?q?kjnjTwqvPv1UjCGHIBxev5mwcgpsCWjmVt7pdge3P8N3jTIox705nXfKNW8aMT?=
 =?us-ascii?q?hhfEJBtLyQ7SVEgvphH2xN9GZqLe6BmyyB9enXNo4Wsed3AiRzj+9b4G41y71Q?=
 =?us-ascii?q?7CFFQvx6gCrTrt50rFGgnemC0T5nUBtIqjZWi4OHp0RiOaPF9pZeXXbI5g4C7W?=
 =?us-ascii?q?KVC0dCm9wwCNjoobpR0fDJnaf+KXFF6d2Qtc8dAdXEbdmKO2c7MAb4XTvTABYB?=
 =?us-ascii?q?QBa1OmzFwU9Qivef8juStJd+4pztnoceD7xWTlo4EtsEBUl/Wt8POpF6WnUji7?=
 =?us-ascii?q?HfxNUF4Xu4sQn5WspXpNbEW+iUDPGpLyyW3pdeYB5d6rrjIJVbDYb70lFsblRg?=
 =?us-ascii?q?1NDBElHdTPhWqS1ocwEwrV8I+3E4RWo2jRG2Ijix6WMeQKbn1iU9jRFzNL51+Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAABFPRBch0O0hNFlHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeEXYc3X4szgg0Ugk2UcYFxLhMBhy4iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYMgnsDAwECJBkBATcBBQkBAR8xA0ISBxIFgxyBagMVBZpyih2Bb?=
 =?us-ascii?q?DOCdgEBBYEAhAgDgh4IF4dlgyOBHBeBf4ERjW6PQX2QPwmCJoQjg3yHASNgiTS?=
 =?us-ascii?q?HLCyId5FWgg5NIxU7gmyCGwwXg0qKdB8ygQQBAQE7iikBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAABFPRBch0O0hNFlHQEBBQEHBQGBUQgBCwGDayeEXYc?=
 =?us-ascii?q?3X4szgg0Ugk2UcYFxLhMBhy4iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYMg?=
 =?us-ascii?q?nsDAwECJBkBATcBBQkBAR8xA0ISBxIFgxyBagMVBZpyih2BbDOCdgEBBYEAhAg?=
 =?us-ascii?q?Dgh4IF4dlgyOBHBeBf4ERjW6PQX2QPwmCJoQjg3yHASNgiTSHLCyId5FWgg5NI?=
 =?us-ascii?q?xU7gmyCGwwXg0qKdB8ygQQBAQE7iikBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="44569986"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 14:48:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726671AbeLKWry (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 17:47:54 -0500
Received: from sonic308-17.consmr.mail.ne1.yahoo.com ([66.163.187.40]:46103
        "EHLO sonic308-17.consmr.mail.ne1.yahoo.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726349AbeLKWnc (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 17:43:32 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoo.com; s=s2048; t=1544568211; bh=ZlWCjSOSrH+yq5U3bHRSbrGC5WLOGr1E5Vzq7vDN9ik=; h=From:To:Cc:Subject:Date:In-Reply-To:References:From:Subject; b=M866abYQIiko6ni5d+dQ/xnG0V97dR9JzJYmRq3FeP4vbfjrTg4ywdz7cnaKEeX15b/qs+sE1+QI/wloKObj1Uhw9VoFIZBS4f8n65UNjSmBGAHhruivU7FVCj8Dj7hbwpqmsNYAflvjYPntQVkPvlFD6g5Y7qjFXGgW76rLPBuMbTq3OWeRgUxUA5kORTst2IQpcQtZr2j1B7knIUJkILJyN/YV9XT+I20WWNtIyh4H+SDVabIE90UE6e93znT17V/YmKCexPZUpXKoByKsPFMtW31d0PFBCfmgRGwOAwGMtrJGjjCUcPXmRXC+BQyTwG1TPoxPsPA9t4Kf0t/qiw==
X-YMail-OSG: 7c.3x0AVM1nte80y3kWjrFYohqGJGvE6xCAcyyJ44Dxr4zLxR6jCeblaWeEF0my
 5pF77c6hZ2YcZFQqOOlP3E3GiXDqwoVEo5x6GEcDMMgOtWvB6ZpeV7NAzlt5jCr7hjzrpxE.nJxJ
 7QIzizwVKnYKZBc1n9tjJnSEo7ikhoX5cNNSvfi5EujmGR5tBYKusJTdNAYMPpx7d5wxkveCY5wv
 BZaE2TovjYLyeSdZJyjsAnL4aM0Xed7w6qLfj.FgZsEN0MxylLKkZXldZ.7n2ai6qb.4RG2BE3vB
 XUmxaI3O2uAiTJnx_umEIalwUJzZqLYEarHS3C1HiRSokhCfvqauIZILYNIiW02.P0LSUuj_qY1T
 Z6IsHchiy.RA_zE.JlSANOpReET7.sUZRqFXJxIfutvsjcohvRgoiPTHKe72U33D22.O.0UBr.vG
 sq.Qa4MxKgg9ILiSAs5qxleXlzD_xUZ2lJvFH4ntrewPKJkhmBhSHFv2yPjm4sXKI3MuA1UssZPh
 zrrh_Fws4xeQCciCYta1FqWIKUs2OfYSMlv.nrAQTBXCWzGGkiRNaPiSovzLQ6uGgEf4uWbQMbhk
 nRor3wn7BWj6GGnjDIAPxhcYmSAg47JIbtgOEFZXhrwqBfKsGs5ivEqxUOXp7Mz9yjKFU1Q_VgZ7
 vll5tnsVTY.rx0NBZZ__xzt17UZjXQniA76dFpDR9NW3QmDMEEkSnSshgWZj5mq4sowH4wRALlki
 .vEOLVZC_.jqpWYxgy6rJ2JEoWoGyAK.VJDgETTfXLo.IPpuJeNYI1TEUyWuCs9tfEp4yQaJ4qF2
 jP9VtT.TM3hlw.eqbW8AwI941yAZXWeP6hSlDqgyRtIPcffPW9NLnVX4zbkhVkIHWSPCB6dj9SM6
 .bVpJARULSSRbHs5kwtV4gTNNh6T29U_tAOFu4AIWCFm8QbsEj37Ol64EwjzWZrXdL23xB1jspeZ
 02amgqgByK7.KkG61GZbO8EVFsw_XEgtkYw._2YYv76Bpmv9clbV8FXjrvxcDxaE.jb6Gp7mmL84
 .VcFMADwZOmwvCxmBuqWeIUpyYf3RUcNZMTUMwqw79rcYLsqBEOwiQywxiP0DBUExvkyR27oLwnD
 TNNi.1.utYm.vBajU6838FahR5Wgbh3RStb_lLg--
Received: from sonic.gate.mail.ne1.yahoo.com by sonic308.consmr.mail.ne1.yahoo.com with HTTP; Tue, 11 Dec 2018 22:43:31 +0000
Received: from c-67-169-65-224.hsd1.ca.comcast.net (EHLO localhost.localdomain) ([67.169.65.224])
          by smtp422.mail.ne1.yahoo.com (Oath Hermes SMTP Server) with ESMTPA ID db48327a3d58729724c38eee90dbab73;
          Tue, 11 Dec 2018 22:43:29 +0000 (UTC)
From: Casey Schaufler <casey@schaufler-ca.com>
To: jmorris@namei.org, linux-security-module@vger.kernel.org,
        linux-kernel@vger.kernel.org, selinux@vger.kernel.org
Cc: john.johansen@canonical.com, keescook@chromium.org,
        penguin-kernel@i-love.sakura.ne.jp, paul@paul-moore.com,
        linux-fsdevel@vger.kernel.org, sds@tycho.nsa.gov,
        adobriyan@gmail.com, mic@digikod.net, s.mesoraca16@gmail.com,
        casey@schaufler-ca.com
Subject: [PATCH v5 06/38] LSM: Introduce CONFIG_LSM
Date: Tue, 11 Dec 2018 14:42:42 -0800
Message-Id: <20181211224314.22412-7-casey@schaufler-ca.com>
X-Mailer: git-send-email 2.17.0
In-Reply-To: <20181211224314.22412-1-casey@schaufler-ca.com>
References: <20181211224314.22412-1-casey@schaufler-ca.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Kees Cook <keescook@chromium.org>

This provides a way to declare LSM initialization order via the new
CONFIG_LSM. Currently only non-major LSMs are recognized. This will
be expanded in future patches.

Signed-off-by: Kees Cook <keescook@chromium.org>
---
 security/Kconfig    |  9 +++++++++
 security/security.c | 27 ++++++++++++++++++++++-----
 2 files changed, 31 insertions(+), 5 deletions(-)

diff --git a/security/Kconfig b/security/Kconfig
index d9aa521b5206..7de42bbacc28 100644
--- a/security/Kconfig
+++ b/security/Kconfig
@@ -276,5 +276,14 @@ config DEFAULT_SECURITY
 	default "apparmor" if DEFAULT_SECURITY_APPARMOR
 	default "" if DEFAULT_SECURITY_DAC
 
+config LSM
+	string "Ordered list of enabled LSMs"
+	default "integrity"
+	help
+	  A comma-separated list of LSMs, in initialization order.
+	  Any LSMs left off this list will be ignored.
+
+	  If unsure, leave this as the default.
+
 endmenu
 
diff --git a/security/security.c b/security/security.c
index 4c193aba4531..96e0b7d057b0 100644
--- a/security/security.c
+++ b/security/security.c
@@ -48,6 +48,8 @@ char *lsm_names;
 static __initdata char chosen_lsm[SECURITY_NAME_MAX + 1] =
 	CONFIG_DEFAULT_SECURITY;
 
+static __initconst const char * const builtin_lsm_order = CONFIG_LSM;
+
 /* Ordered list of LSMs to initialize. */
 static __initdata struct lsm_info **ordered_lsms;
 
@@ -155,15 +157,30 @@ static void __init maybe_initialize_lsm(struct lsm_info *lsm)
 	}
 }
 
-/* Populate ordered LSMs list from single LSM name. */
+/* Populate ordered LSMs list from comma-separated LSM name list. */
 static void __init ordered_lsm_parse(const char *order, const char *origin)
 {
 	struct lsm_info *lsm;
+	char *sep, *name, *next;
+
+	sep = kstrdup(order, GFP_KERNEL);
+	next = sep;
+	/* Walk the list, looking for matching LSMs. */
+	while ((name = strsep(&next, ",")) != NULL) {
+		bool found = false;
+
+		for (lsm = __start_lsm_info; lsm < __end_lsm_info; lsm++) {
+			if ((lsm->flags & LSM_FLAG_LEGACY_MAJOR) == 0 &&
+			    strcmp(lsm->name, name) == 0) {
+				append_ordered_lsm(lsm, origin);
+				found = true;
+			}
+		}
 
-	for (lsm = __start_lsm_info; lsm < __end_lsm_info; lsm++) {
-		if (strcmp(lsm->name, order) == 0)
-			append_ordered_lsm(lsm, origin);
+		if (!found)
+			init_debug("%s ignored: %s\n", origin, name);
 	}
+	kfree(sep);
 }
 
 static void __init ordered_lsm_init(void)
@@ -173,7 +190,7 @@ static void __init ordered_lsm_init(void)
 	ordered_lsms = kcalloc(LSM_COUNT + 1, sizeof(*ordered_lsms),
 				GFP_KERNEL);
 
-	ordered_lsm_parse("integrity", "builtin");
+	ordered_lsm_parse(builtin_lsm_order, "builtin");
 
 	for (lsm = ordered_lsms; *lsm; lsm++)
 		maybe_initialize_lsm(*lsm);
-- 
2.14.5

