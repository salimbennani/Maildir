Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:10:56 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C5BED58061F;
	Fri, 14 Dec 2018 14:50:22 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 14:50:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXMVr+hLsHz0IyRd7k9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvj/rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjJSmnP6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModjpMKcZTO+6zKjSzTXEcvhb3in96InSchAmuvyNXKx/cczQyUkxDQ/FilSQ?=
 =?us-ascii?q?qYr4PzKazOgNtHKb7+V6WeKyiG4qsgd8qSWsyMc0koTFmJ4Zx1Te+Slkzos5O8?=
 =?us-ascii?q?e0RFN4bNK4CpddtiOXO5NrTs4mQ2xkoiI3xqMctZKlfCUHxo4rywDZZveaaYaH?=
 =?us-ascii?q?+AjjW/yUITpghHJqZra/hxGq/Ei+xe3zSNO03ExJriVbiNnMsG4C1xjJ5siAUP?=
 =?us-ascii?q?t98V+t2TeJ1w/N9uFJOV44mbbfJpI737I9mIQfvV7eEiL1hEn6lq6be0c89uit?=
 =?us-ascii?q?8evnY7HmppGGN49zjwHzKqAums25AeQlPQkCRmub9vqm1L3l40L5RKxGjvo4k6?=
 =?us-ascii?q?nfrp/aP98WprC2AwBLyIYv8RW/ACm80NQeg3YHKEhJeBWdj4jmI13OOuz3De+j?=
 =?us-ascii?q?g1Swlzdm3/TGPrziAprTNHTCn6rhcK15605dzgoz0N9e64hVCrEHPPL8REvxuM?=
 =?us-ascii?q?bEAR8+Ngy+2/znB8ll1oMCRWKPBbeUMKPIvl+J+uIgOe6MaJUVuDbgMfcl4fHu?=
 =?us-ascii?q?gGQ9mV8ce6mpwJQWZGq5HvRgP0WWf37sjs0dHmcNuwo0VPbqh0GaUT5Pe3ayWL?=
 =?us-ascii?q?ox5jM8CI24F4vDRYetgLqH3Ce8BZBWYmFGClaREXbnbYmEWvEMaD6MLc9liDAL?=
 =?us-ascii?q?Sb+hS4o53xG0qAD606ZnLvbT+iAAr53jz9h15+rQlR0o7zx7Fcad3nqJT2F1mG?=
 =?us-ascii?q?MIWjA30Lp+oUx71leMz6x4j+ZEGtxU4vNDSh06OoLEz+xmF9DyXRrMftSTR1ag?=
 =?us-ascii?q?WNmmBTAxQcg3w98BeEt9H9Sijhbe3yulGbMVlrqLBIAq/aLYxXT+O8F9y3Pe3q?=
 =?us-ascii?q?k7k1YmWtdPNXGhhqNn6gfcHZDJnFuDm6aqb6sc2jXN+3mFzWaJuEFYUwtwUaHe?=
 =?us-ascii?q?UHAbZ0vWq8n550zYQ7+vD7QnLhVOycqYJqRWbd3piE1MRO3/N9TGf2Kxh2CwCA?=
 =?us-ascii?q?6VybyWcorlZX8R3CXHB0gCiAAc43CGOBM6BiegpWLeETNvGUjuY0Pq7elxtne7?=
 =?us-ascii?q?QlUowAGNak1rz6C19QINhfyAV/MT2aoJuDsgqzVxG1a9w9LWCtqaqwp9ZqlcZs?=
 =?us-ascii?q?k94FNG1WLfuAxwJZigL6Fkhl4DfAV7pULu1xNrCopelcgmtm8lzA13KaiAylNO?=
 =?us-ascii?q?ayuY3YzsOr3QMmT95hSvZLDZ217A0Nea4LwA6OklpFr5ugGpFU0i82t83tlR0n?=
 =?us-ascii?q?uc4IjKDQUIXZLwVEY36wZ1p7XAbiYh4IPU0GVmMbOovT/ax9IpGOwlxw6gftdC?=
 =?us-ascii?q?Kq+LCBX+EswaB8e0LuwqlEOkbhYFPOBU6a41MNmqd/qA2K63IulgmCiqgnhA4I?=
 =?us-ascii?q?B4ykiM7TZzSvbU35YZxPGVxhGHVzbgg1i7qMD4hIdEaSsUHmWh0yjkBZddabFo?=
 =?us-ascii?q?coYPFGihPde3xtJ4h5P2X35Y9VijB04J2cOzeBqSaUD90hNU1UgNvXOnni64xS?=
 =?us-ascii?q?Rukz41tqqfwDDOw+P6eRsHO25HXmljgU33IYipidAXR0yobwkvlBu46kf23alb?=
 =?us-ascii?q?pKJjL2bNRUdEZTT5L2ZnUqGorLqNf9ZP6I80sSVQSOm8Y0qVSqT+oxsZ1CPvBX?=
 =?us-ascii?q?Beyyo4dzGpu5X5mQJ1iGSGIXZ3rXrZf9xwxBjF6NzdQ/5RwiQJRC1ihTbLAVi8?=
 =?us-ascii?q?OsGj/c+ImJfbruC+S2WhW4VTcCbxyoOMrim75WxsARCkm/Czm9vnERU10CPh1t?=
 =?us-ascii?q?lqUznIowj4YoXxy6u6NudndFFyBFDg88p6Bp1+kowoiZETw3cah4+Z/XoakWjp?=
 =?us-ascii?q?N9Vb1rnzbH4MRT4N3t7U7xLp2ExlLnKV2Y35Um+RzddmZ9m/emkWwD4y79hWCK?=
 =?us-ascii?q?eI67xJhS51olu7rQ3Le/R8kCkSyeAy6HEEmeEGoxQizj+SAr0JGUlYPCrslwmH?=
 =?us-ascii?q?7tykraVXYnqvfqa01EZkgd+hC7SCqBlGWHnlYpciATNw7sJnPVLQ133z75voed?=
 =?us-ascii?q?jKYtIVqx2UiAzAj+lOJZI1l/oKgzdnOG3nsX0kze47kQJh3ZWgsIebLGVt+bqz?=
 =?us-ascii?q?AgREOT3te8MT5jbtgL5FkcmM2ICvGohhFi8PXJv1Vv+oFDMStfL6NweBCjE8q3?=
 =?us-ascii?q?GbGabBEg+b8ktps3XPE5WzPXGNOHYZ1cliRAWaJEFHggAbRjA6kYAiFgyw2Mzt?=
 =?us-ascii?q?akR55i0S5l7lrBtD0PloOgL7Umfeogeodzg1RIKeLBpQ8gFN+UPVPdaC4eJ0Gi?=
 =?us-ascii?q?FS5oehoxCVKmyHewRICnkEW0yDB1D+J7mu+MPP8+6CCuqlKPvOZ7qOpPdaV/eJ?=
 =?us-ascii?q?w5Kvz4Rn8yyNNsWJInltEfk71lBfUnB+HsTTgy8PRDAPlyLRc86bow+x+i1poc?=
 =?us-ascii?q?C+8/TrWwPv6ZGMC7tINtVv9A65gb2eN+6Lnyt5LTdY1pURxX7H0rQf3VgSiz1w?=
 =?us-ascii?q?eDmpC7gPqSnNTKfIkK9NExEbcz9zNNdP768kxAZNJNXUisnr2b94lPI1D1ZFWE?=
 =?us-ascii?q?flmsGoY8wKPm68OEnGBEaNKLSJOznLz9vrbqO7TL1alP9UuAGouTaHD0/jOSyO?=
 =?us-ascii?q?lyXoVxCqK+1DkDuXMwBeuI6jdBZgEmzjTNPgah2mP957lzw2wbsohnzUMW4QKy?=
 =?us-ascii?q?Rzc0RIrreI9yNXnu1/G3Bd7npiNeSFmzyW7+/dKpYXt/tkGiV1l+JA73Q8xLtY?=
 =?us-ascii?q?9yVERP1zmCvPod9iuVCmku+TyjV5VBpCsCpEhIWOvRYqBaKMyp5MVT7n/hUWpT?=
 =?us-ascii?q?GMCBYNvPNsDNH1vKFcjNPIkfSgBi1F9of9+YMiBtLTYJaZMWAmGQjkHj/KSg8E?=
 =?us-ascii?q?SyO7c2bFiApAk6fBpTWuspEmp820y9I1QbhBWQlwT6tCBw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAADUMhRch0O0hNFcCBoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgWWDbCeYDYINFJhnBUguEwGHRyI4EgEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYkAYJiAQIDAQIkEz8GCQEBCg4KCRMSAwwFKCETBYMcggEEAacIM4oqj?=
 =?us-ascii?q?D4XgX+BEYMShFyGAgKJHpd6CZFPCxiRUiyIQ5JPVoEhTTQEgyeQWz8zgQUBAY0?=
 =?us-ascii?q?uAQE?=
X-IPAS-Result: =?us-ascii?q?A0ATAADUMhRch0O0hNFcCBoBAQEBAQIBAQEBBwIBAQEBgWW?=
 =?us-ascii?q?DbCeYDYINFJhnBUguEwGHRyI4EgEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiA?=
 =?us-ascii?q?QIDAQIkEz8GCQEBCg4KCRMSAwwFKCETBYMcggEEAacIM4oqjD4XgX+BEYMShFy?=
 =?us-ascii?q?GAgKJHpd6CZFPCxiRUiyIQ5JPVoEhTTQEgyeQWz8zgQUBAY0uAQE?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="45061031"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 14 Dec 2018 14:50:16 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730835AbeLNWuM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 14 Dec 2018 17:50:12 -0500
Received: from zeniv.linux.org.uk ([195.92.253.2]:42064 "EHLO
        ZenIV.linux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730255AbeLNWuM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 14 Dec 2018 17:50:12 -0500
Received: from viro by ZenIV.linux.org.uk with local (Exim 4.91 #2 (Red Hat Linux))
        id 1gXwHU-0005Lk-Sh; Fri, 14 Dec 2018 22:50:04 +0000
Date: Fri, 14 Dec 2018 22:50:04 +0000
From: Al Viro <viro@zeniv.linux.org.uk>
To: Todd Kjos <tkjos@android.com>
Cc: tkjos@google.com, gregkh@linuxfoundation.org, arve@android.com,
        devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org,
        maco@google.com, joel@joelfernandes.org, kernel-team@android.com
Subject: Re: [PATCH v2] binder: fix use-after-free due to ksys_close() during
 fdget()
Message-ID: <20181214225004.GP2217@ZenIV.linux.org.uk>
References: <20181214203815.217014-1-tkjos@google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181214203815.217014-1-tkjos@google.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 14, 2018 at 12:38:15PM -0800, Todd Kjos wrote:
> 44d8047f1d8 ("binder: use standard functions to allocate fds")
> exposed a pre-existing issue in the binder driver.
> 
> fdget() is used in ksys_ioctl() as a performance optimization.
> One of the rules associated with fdget() is that ksys_close() must
> not be called between the fdget() and the fdput(). There is a case
> where this requirement is not met in the binder driver which results
> in the reference count dropping to 0 when the device is still in
> use. This can result in use-after-free or other issues.
> 
> If userpace has passed a file-descriptor for the binder driver using
> a BINDER_TYPE_FDA object, then kys_close() is called on it when
> handling a binder_ioctl(BC_FREE_BUFFER) command. This violates
> the assumptions for using fdget().
> 
> The problem is fixed by deferring the fd close using task_work_add()
> so ksys_close() is called after returning from binder_ioctl().
> 
> Fixes: 44d8047f1d87a ("binder: use standard functions to allocate fds")
> Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
> Signed-off-by: Todd Kjos <tkjos@google.com>

Umm...  IMO you are making it more brittle than needed.  Descriptors
(as in, integers serving as indices in file descriptor tables) are
sensitive to a lot of things and generally you don't want to pass
them around, at least not without a lot more context than you do.

References to struct file are much more robust.  And frankly, ksys_close()
is best not touched - what you want is basically a version of __close_fd()
that would grab a reference to struct file before filp_close() and
passed that reference to you.  Then your delayed ksys_close() would turn
into (equally delayed) fput().

Something like
int rip_fd(int fd, struct file **res)
{
	struct files_struct *files = current->files;
        struct file *file;
        struct fdtable *fdt;

        spin_lock(&files->file_lock);
        fdt = files_fdtable(files);
        if (fd >= fdt->max_fds)
                goto out_unlock;
        file = fdt->fd[fd];
        if (!file)
                goto out_unlock;
        rcu_assign_pointer(fdt->fd[fd], NULL);
        __put_unused_fd(files, fd);
        spin_unlock(&files->file_lock);
	get_file(file);
	*res = file;
        return filp_close(file, files);

out_unlock:
        spin_unlock(&files->file_lock);
	*res = NULL;
	return -ENOENT;
}

used as
	error = rip_fd(fd, &file);
	/* we are committed to arranging fput(file) now, error or not */

Frankly, the main objection to exporting that would be to avoid encouraging
the "we'll just pass the number around" kind of braindamage.  In case of
binder you are locked into that braindamage by an atrocious userland API
design and warnings along the lines of "use that and you *will* have
to explain yourself; yes, we will be watching" might suffice to prevent
additional uses...
