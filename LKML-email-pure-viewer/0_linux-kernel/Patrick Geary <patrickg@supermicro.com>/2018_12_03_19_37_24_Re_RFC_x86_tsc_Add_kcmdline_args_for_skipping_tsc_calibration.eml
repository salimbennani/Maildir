Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:57:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D17F0580375;
	Mon,  3 Dec 2018 11:46:14 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 11:46:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8haGXB3re1olE6VnsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTI/3xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJBHo2y?=
 =?us-ascii?q?YYgBD+UDPOZXs4bzqFQVrRumBwShH//vxD1Si3PqwaE2z/ktHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3vOqgITeC11qjIwinAb/hL2Dny9pLHcgohoPqRWr9wadDeyVU1FwPEklqQ?=
 =?us-ascii?q?qoPlMiiO1uQQq2iU8fBgVeeui2E7sQFxpSKjydsrionMn48YzE3P+yZhwIstO9?=
 =?us-ascii?q?G0VEp2bcS5HJZeqS2WLZZ6T8A+T21yuSs3yKUKtYOncCQQ1pgr3QLTZ+aIfoSV?=
 =?us-ascii?q?+h7vSvqdLDViiH57Zb6zmQy+/Eiix+HmVcS531BHpTdfnNbWrHACzRnT59CHSv?=
 =?us-ascii?q?Rj+keh3i6C1x7c6u5aO0A4j6nbJIA7wr42iJUTtV7PHijsmEX5lKOWd0Mk9fa0?=
 =?us-ascii?q?6+n/fLnqupuRO5VphgzwLKgigNGzDOckPgQUXmWW+/yw1Lj58k34RLVKgOc2kq?=
 =?us-ascii?q?7csJ3CIcQbp6i5AxJa04o66BawES2m0NIGknkDNV5FfxyGj473NFHUO/34E/i/?=
 =?us-ascii?q?jEq2kDtxxPDJIKfhApPTIXjHirvheqx960FExAop0d9f/45UCq0GIP/rXk/xtd?=
 =?us-ascii?q?/YAQEjPw273ubqE9F91oIYWWKSDa6VKqLSsVmU5u0xJ+mAfpMauDH4K/I9/f7h?=
 =?us-ascii?q?kWc5mUMBfamuxZYXaGq3HvV6I0qDZnrgmNcBEXoQsQo4Q+znk1mCUT9VZ3avUK?=
 =?us-ascii?q?Mw/DA7CIS6DYjdQoChmqCO3CC+HpdOfGBJFkiMEWv0d4WDQ/oMaiWSLdF7njwH?=
 =?us-ascii?q?UrihTYkh1Ra1uQ/+yrpnKPfU+yICuZLi0th1+/PclRUo+TNoCMSd1nmHT3tokW?=
 =?us-ascii?q?MQWz82wKd/rFRnxVeY0ah4hP9YGcZJ5/xTUAc3Lprcz+18C9DvVQPNZNaJSFC6?=
 =?us-ascii?q?Qtq4BTE9VM4+w9gLY0xlAdWtkgjD3za2A78Sj7GLB4Y78qTG03j1JsZy0XDG1K?=
 =?us-ascii?q?Y6glkiQ8tPM3Cmh6Fl+wjSAY7Jj1uWl6KweasA2y7N8X+JzXCSs0FATA5wTaLF?=
 =?us-ascii?q?UGgCaUTMs9T2+FnOT7+0BrQhKQtO18iCJqxOat3qiFVGQOzuONDfY2K3hmexCg?=
 =?us-ascii?q?yExrKKbIr2ZWod2D/RB1QDkwAW5XyGLxQxBj+9o2LCCzxjDU/gbFny8eZgsn+7?=
 =?us-ascii?q?TlU7zweRb0J/0bq44RoVhf2aS/MO0bMIoiYhqzNoHFmj29LaEcaPpw1kfK9Ee9?=
 =?us-ascii?q?My/E9H1X7Ftwx6JpGgM6FihlsZcwRrv0Pv1w97CplancgttnMqyAtyKaSX0F5a?=
 =?us-ascii?q?czOY3JbwOqDYK2Xo/RCvbbLW1U/a0NqM5qgP7/E4oU35vA61Dkoi72ln095N3n?=
 =?us-ascii?q?SG4pXFEgUTXozxU0ot7Bd6uqzVbTM754PX0n1sL7K5sjvD29IvGeskxQysf9ZZ?=
 =?us-ascii?q?MKOYCgDyF9cWCNSpKOwvg1KpdA4LPPhO9K4oOMOrb/uH2LOxMOl8hj6njGRH75?=
 =?us-ascii?q?p70kKD7Cd8Tu/I35AYw/CXxAeHVjH8jEu/vcDzg4xLeTYSHm+nwyj+GIFRfrFy?=
 =?us-ascii?q?fZoMCWq2Oc23x8lxiIT3W3FF816vHVUG19GzeRqTdlDywRdf1UAKrnO5gyu4yD?=
 =?us-ascii?q?p0niotrqqe2izO3uvjeAAGOm5NWGltk1PsLZKogNAdWUiidxIpmwe95Ubm26hb?=
 =?us-ascii?q?o7xyLmnSQUtSfyn6NXpiUra2treZZ85P6ZUosThYUeimYFCaTKL9rAUe0y/5A2?=
 =?us-ascii?q?RewzU7fSmwuprlhxx6lH6dLHFroXrbY85w3xTf5N/bRfJLxToJXip4iTrWBli6?=
 =?us-ascii?q?Idap+86Zl5PCsuC4SmKgWYdfcSjtzYOcqiS74XdmDgG4n/C2gtfnCxQ10Tfn19?=
 =?us-ascii?q?l2UiXFtBb9bZPs16igM+Jnf09oCUT468p7HIF+j4QxiIsR2XgcmpWa434HnX3v?=
 =?us-ascii?q?PtVc3KL0dGANSiITw97J/Ajl31VuLnGTyIL4THmdwtZhaMO8YmMZwS8968FKCK?=
 =?us-ascii?q?GJ7L1Lhyd1o1y4rR7Pbvh5hDsS1fwu6HsCieETpAUt1jmdAqwVHURAOCzslheI?=
 =?us-ascii?q?4MqkoKRZemmvaqSw21Rknd+6Er6CuA5cVW39epcjGy9w88p+PEjN0H319oHrZt?=
 =?us-ascii?q?3QYcgPuR2TlhfKl/JVJ44plvoWmSpnPnrwvWEiy+4+lxBv3Iu1vI6aK2V256K5?=
 =?us-ascii?q?AwVVNjn0Z8MV5zHsgrxSnseQ34CzAJphHi8HU4fvTfKtCDgSr+joNx6SED0grX?=
 =?us-ascii?q?eWAaHQEhWY6EdisnLDCZSrN2yMKXkdzNViQgSdJUNFjAAVWjU6goA2FgSwyMP9?=
 =?us-ascii?q?d0d54ygb5kTkpRtU1uJoKx7/X3/dpAiybzc7VoOfIABK7g1Y5EfVLM+e7v91Hy?=
 =?us-ascii?q?5C5Z2stwiNKm2dZwRVAmAFQE2EB1b/Praw4dnM6fSXBu27L/HWe7WBtfReV+uU?=
 =?us-ascii?q?xZKoyoZn/zGMNtiWPnl/FfI73FBPXWt+G8TflDUCUCgXlyPLb86Gqxaw4Cx3rs?=
 =?us-ascii?q?aj8Pv1XALj/5eAC7xXMd934RC5nb+DN/KMhCZ+MTtY1o0DxX7LyLgc3V4ekSJu?=
 =?us-ascii?q?dyOqEbQPqyHNVr/QmrRMAh4faiNzMtZI7q0m0glMP87bls361rpigvEpDFdFUE?=
 =?us-ascii?q?Trmtu1aswSP2G9KFTHCV6RO7SbPjLL2d/4YKOmRb1UjeVZrBmwuTedE0/+MTWP?=
 =?us-ascii?q?jTjpVxazMe5SiCGXJgBRuIa4chx1E2jsUMrmagGnMN9wlTA23bw0hnbQOWEAKz?=
 =?us-ascii?q?Rzb0NNoaOW7S5DhvV/GmpB7mdqLOWemiaZ6fXYJYgSsfdxHit0kOda6mwgy7RJ?=
 =?us-ascii?q?9CFEWOB1mCzKo99uuV6mlOyPyjthUBVWqzdLhJiEvUNtOajC8plAWHDE/A8C7G?=
 =?us-ascii?q?mKChQKocdlBcPru6xK1tfPk6fze39+9Ifs58IGBtScAsKOKnUoLxOhTCbOBREE?=
 =?us-ascii?q?URaxOG3fjlAbm/aXoDnd5LIgrYfq3NIqR7kRHAgxG/VcAF5iA9oqIZFrUzdimr?=
 =?us-ascii?q?me2opAr36/qgTBAcZXpJbKUtqMDvj1bjWUl79JY10P27yyZdAXN4vmywlhZ0N8?=
 =?us-ascii?q?kYDiBUXdR5ZOrzdnYwtyp19CpitQVGo2jnrsdhms63xbOvO9hA9+3hN3ff4s/z?=
 =?us-ascii?q?Tjy0wqPlfQoSo7ik53ktLg12PCOAXtJbu9CNkFQxH/sFI8Z9aiG154?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BTAQAyhwVch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCOycKjGaNOhSERQGSboFzEgEBGBMBiAkiNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIKS+CNiQBgmEBAQEBAwECMEYGCQEBAQEIEQQBAQEJJQMMIx0IA?=
 =?us-ascii?q?gQBDQUFgxyCAgEEp0mKKYwcF4EBNAs/g3UuilwCj3OQTQmCI48xkSaJBI9CAgQ?=
 =?us-ascii?q?CCQIUgUgCggkzGggbFYMngicXjh1AATGBBQEBiTuBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0BTAQAyhwVch0O0hNFiHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?COycKjGaNOhSERQGSboFzEgEBGBMBiAkiNQgNAQMBAQEBAQECARMBAQEKCwkIK?=
 =?us-ascii?q?S+CNiQBgmEBAQEBAwECMEYGCQEBAQEIEQQBAQEJJQMMIx0IAgQBDQUFgxyCAgE?=
 =?us-ascii?q?Ep0mKKYwcF4EBNAs/g3UuilwCj3OQTQmCI48xkSaJBI9CAgQCCQIUgUgCggkzG?=
 =?us-ascii?q?ggbFYMngicXjh1AATGBBQEBiTuBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="54339514"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 11:46:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726074AbeLCTqL convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Mon, 3 Dec 2018 14:46:11 -0500
Received: from mga.supermicro.com ([207.212.57.84]:33650 "EHLO
        MGA.supermicro.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725885AbeLCTqL (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 14:46:11 -0500
X-Greylist: delayed 453 seconds by postgrey-1.27 at vger.kernel.org; Mon, 03 Dec 2018 14:46:11 EST
Received: from pps.filterd (MGA.supermicro.com [127.0.0.1])
        by MGA.supermicro.com (8.16.0.22/8.16.0.22) with SMTP id wB3JYejD028919;
        Mon, 3 Dec 2018 11:37:33 -0800
Received: from ex2013-mbx3.supermicro.com (EX2013-MBX3.supermicro.com [10.2.1.46])
        by MGA.supermicro.com with ESMTP id 2p3tsvsmv7-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-SHA384 bits=256 verify=NOT);
        Mon, 03 Dec 2018 11:37:33 -0800
Received: from EX2013-MBX2.supermicro.com (10.2.1.38) by
 EX2013-MBX3.supermicro.com (10.2.1.46) with Microsoft SMTP Server (TLS) id
 15.0.1236.3; Mon, 3 Dec 2018 11:37:24 -0800
Received: from EX2013-MBX2.supermicro.com ([::1]) by
 Ex2013-MBX2.supermicro.com ([fe80::80ad:66c2:9e01:4b74%18]) with mapi id
 15.00.1236.000; Mon, 3 Dec 2018 11:37:24 -0800
From: Patrick Geary <patrickg@supermicro.com>
To: Prarit Bhargava <prarit@redhat.com>,
        "Brown, Len" <len.brown@intel.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
CC: "mingo@kernel.org" <mingo@kernel.org>,
        "Du, Alek" <alek.du@intel.com>,
        "arjan@linux.intel.com" <arjan@linux.intel.com>,
        "Tang, Feng" <feng.tang@intel.com>
Subject: Re: [RFC] x86, tsc: Add kcmdline args for skipping tsc calibration
 sequences
Thread-Topic: [RFC] x86, tsc: Add kcmdline args for skipping tsc calibration
 sequences
Thread-Index: AQHUGt5AveUKS9tr5UqDaitbRIV+waSOd8AAgApENgCABhwFAIADHfUAgCDhbYCAbf6ZAIAAgwoA//+e3wCAPVDI8w==
Date: Mon, 3 Dec 2018 19:37:24 +0000
Message-ID: <1543865843219.51523@supermicro.com>
References: <fdf96605-a4a0-049b-51c9-1e68cc2a9b93@supermicro.com>
 <1A7043D5F58CCB44A599DFD55ED4C94849A1AACF@FMSMSX126.amr.corp.intel.com>
 <c7582a8c-8cc1-eff3-2452-a8d42d23fea1@supermicro.com>
 <cb798dcd-8cd6-8a92-9f6c-50bec0afe204@supermicro.com>
 <94bebaa1-992b-572b-0d24-e08037611358@supermicro.com>
 <70cdf321-cef7-aa26-1ca8-33378b3afdd9@supermicro.com>
 <18d873f6-a911-200b-7bc7-8f4b4f3c5161@supermicro.com>
 <6e40fea8-9b42-3785-7d4d-36f120980d66@redhat.com>,<f718c935-d5b4-111d-abe1-e7a61d08237b@supermicro.com>
In-Reply-To: <f718c935-d5b4-111d-abe1-e7a61d08237b@supermicro.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-transport-fromentityheader: Hosted
x-originating-ip: [10.2.0.41]
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: 8BIT
MIME-Version: 1.0
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-03_10:,,
 signatures=0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

I'm sorry; I'm OoO and this is all I have for a mailer.


---Copypasta of first RFC patch---

---
diff --git a/arch/x86/kernel/tsc.c b/arch/x86/kernel/tsc.c
index 74392d9..5a07d12 100644
--- a/arch/x86/kernel/tsc.c
+++ b/arch/x86/kernel/tsc.c
@@ -47,6 +47,13 @@ static DEFINE_STATIC_KEY_FALSE(__use_tsc);

 int tsc_clocksource_reliable;

+/*
+ * TSC calibration sequence disablement
+ */
+int calibrate_cpuid_khz_disabled = 0;
+int calibrate_msr_disabled = 0;
+int calibrate_quick_disabled = 0;
+
 static u32 art_to_tsc_numerator;
 static u32 art_to_tsc_denominator;
 static u64 art_to_tsc_offset;
@@ -281,6 +288,32 @@ static int __init tsc_setup(char *str)

 __setup("tsc=", tsc_setup);

+static int __init setup_tsc_calibration_order(char *str)
+{
+        if (!str)
+                return -EINVAL;
+
+        while (*str) {
+                if (!strncmp(str, "nocpuid", 7)) {
+                        calibrate_cpuid_khz_disabled = 1;
+                        pr_info("TSC CPUID khz calibrate disabled\n");
+                } else if (!strncmp(str, "nomsr", 5)) {
+                        calibrate_msr_disabled = 1;
+                        pr_info("TSC msr calibrate disabled\n");
+                } else if (!strncmp(str, "noquick", 7)) {
+                        calibrate_quick_disabled = 1;
+                        pr_info("TSC quick calibrate disabled\n");
+                }
+
+                str += strcspn(str, ",");
+                while (*str == ',')
+                        str++;
+        }
+        return 1;
+}
+
+__setup("tsc_calibrate=", setup_tsc_calibration_order);
+
 #define MAX_RETRIES     5
 #define SMI_TRESHOLD    50000

@@ -675,19 +708,25 @@ unsigned long native_calibrate_cpu(void)
         unsigned long flags, latch, ms, fast_calibrate;
         int hpet = is_hpet_enabled(), i, loopmin;

-        fast_calibrate = cpu_khz_from_cpuid();
-        if (fast_calibrate)
-                return fast_calibrate;
+        if (!calibrate_cpuid_khz_disabled) {
+                fast_calibrate = cpu_khz_from_cpuid();
+                if (fast_calibrate)
+                        return fast_calibrate;
+        }

-        fast_calibrate = cpu_khz_from_msr();
-        if (fast_calibrate)
-                return fast_calibrate;
+        if (!calibrate_msr_disabled) {
+                fast_calibrate = cpu_khz_from_msr();
+                if (fast_calibrate)
+                        return fast_calibrate;
+        }

-        local_irq_save(flags);
-        fast_calibrate = quick_pit_calibrate();
-        local_irq_restore(flags);
-        if (fast_calibrate)
-                return fast_calibrate;
+        if (!calibrate_quick_disabled) {
+                local_irq_save(flags);
+                fast_calibrate = quick_pit_calibrate();
+                local_irq_restore(flags);
+                if (fast_calibrate)
+                        return fast_calibrate;
+        }

         /*
          * Run 5 calibration loops to get the lowest frequency value
---

________________________________________
From: patrickg <patrickg@supermicro.com>
Sent: Thursday, October 25, 2018 12:13 PM
To: Prarit Bhargava; Brown, Len; linux-kernel@vger.kernel.org
Cc: mingo@kernel.org; Du, Alek; arjan@linux.intel.com; Tang, Feng
Subject: Re: [RFC] x86, tsc: Add kcmdline args for skipping tsc calibration sequences

Sorry for the delay; lkml folder sorting gone wrong.

On 10/25/18 11:01 AM, Prarit Bhargava wrote:
> Patrick can you reply back with the entire patch

Yes; watch the editor bork it even more than it originally did, though.


---Copypasta of first RFC patch---

---
diff --git a/arch/x86/kernel/tsc.c b/arch/x86/kernel/tsc.c
index 74392d9..5a07d12 100644
--- a/arch/x86/kernel/tsc.c
+++ b/arch/x86/kernel/tsc.c
@@ -47,6 +47,13 @@ static DEFINE_STATIC_KEY_FALSE(__use_tsc);

 int tsc_clocksource_reliable;

+/*
+ * TSC calibration sequence disablement
+ */
+int calibrate_cpuid_khz_disabled = 0;
+int calibrate_msr_disabled = 0;
+int calibrate_quick_disabled = 0;
+
 static u32 art_to_tsc_numerator;
 static u32 art_to_tsc_denominator;
 static u64 art_to_tsc_offset;
@@ -281,6 +288,32 @@ static int __init tsc_setup(char *str)

 __setup("tsc=", tsc_setup);

+static int __init setup_tsc_calibration_order(char *str)
+{
+        if (!str)
+                return -EINVAL;
+
+        while (*str) {
+                if (!strncmp(str, "nocpuid", 7)) {
+                        calibrate_cpuid_khz_disabled = 1;
+                        pr_info("TSC CPUID khz calibrate disabled\n");
+                } else if (!strncmp(str, "nomsr", 5)) {
+                        calibrate_msr_disabled = 1;
+                        pr_info("TSC msr calibrate disabled\n");
+                } else if (!strncmp(str, "noquick", 7)) {
+                        calibrate_quick_disabled = 1;
+                        pr_info("TSC quick calibrate disabled\n");
+                }
+
+                str += strcspn(str, ",");
+                while (*str == ',')
+                        str++;
+        }
+        return 1;
+}
+
+__setup("tsc_calibrate=", setup_tsc_calibration_order);
+
 #define MAX_RETRIES     5
 #define SMI_TRESHOLD    50000

@@ -675,19 +708,25 @@ unsigned long native_calibrate_cpu(void)
         unsigned long flags, latch, ms, fast_calibrate;
         int hpet = is_hpet_enabled(), i, loopmin;

-        fast_calibrate = cpu_khz_from_cpuid();
-        if (fast_calibrate)
-                return fast_calibrate;
+        if (!calibrate_cpuid_khz_disabled) {
+                fast_calibrate = cpu_khz_from_cpuid();
+                if (fast_calibrate)
+                        return fast_calibrate;
+        }

-        fast_calibrate = cpu_khz_from_msr();
-        if (fast_calibrate)
-                return fast_calibrate;
+        if (!calibrate_msr_disabled) {
+                fast_calibrate = cpu_khz_from_msr();
+                if (fast_calibrate)
+                        return fast_calibrate;
+        }

-        local_irq_save(flags);
-        fast_calibrate = quick_pit_calibrate();
-        local_irq_restore(flags);
-        if (fast_calibrate)
-                return fast_calibrate;
+        if (!calibrate_quick_disabled) {
+                local_irq_save(flags);
+                fast_calibrate = quick_pit_calibrate();
+                local_irq_restore(flags);
+                if (fast_calibrate)
+                        return fast_calibrate;
+        }

         /*
          * Run 5 calibration loops to get the lowest frequency value
---
