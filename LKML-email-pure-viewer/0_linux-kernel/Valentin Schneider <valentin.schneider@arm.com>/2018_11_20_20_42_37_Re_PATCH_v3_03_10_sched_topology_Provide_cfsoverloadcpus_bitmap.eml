Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:39:19 -0000
Received: from icoremail.net (unknown [209.85.214.175])
	by mail-app4 (Coremail) with SMTP id cS_KCgDXv063CfRb0ejfAQ--.37238S3;
	Tue, 20 Nov 2018 21:18:48 +0800 (CST)
Received: from mail-pl1-f175.google.com (unknown [209.85.214.175])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwAH6kW0CfRbh05eAA--.3016S3;
	Tue, 20 Nov 2018 21:18:44 +0800 (CST)
Received: by mail-pl1-f175.google.com with SMTP id b22-v6so995230pls.7
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 05:18:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=I9H7RId3oHSU/zopwsZolbn1KGBeDS88tKjupnkgdfQ=;
        b=ELKZQNPTqJOw2RD7WciEELNvi7ACgm2FalZldyxhqho9JhS/UGRIw0Y2MXm5WE2dQB
         PB3iRGzPDhP9DYQwMhW6STYB5ORJSeV4OEFqmQAkjn2ruXaluefysvF5L/EKTuuHlREy
         Lg3FvlxuwlV3aTDNsxB1M7UORp5OFkd0rV8nLSGJBiqrLVIMDLXlcAQtsp3FEx/cBTUl
         +gRKwYxQ5PrOYJ5BKPZzR9oLZPkCmWQ/fm01X+Wi6tCoSJKcLRGvUUNd0zPHKQY6/Kyb
         C6Ip7z/0mft2Y3qa8ZW6NeeIjRrbqaIs+nUk/GcD6OJiiFsuSHnNVHT7VHC4JBp2FwEu
         AmmQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWb0DpnbqsCMKv0lFz9N7g0cuc2wJiID5LGNKwSUU+LO6woxWS8A
	3hthdATzrivX0jDvRAkeVrzdSFAbSeYZIdtQt3DUC5YJwuLhwDs=
X-Received: by 2002:a17:902:8e8a:: with SMTP id bg10mr2213597plb.192.1542719923830;
        Tue, 20 Nov 2018 05:18:43 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp589590pju;
        Tue, 20 Nov 2018 05:18:42 -0800 (PST)
X-Google-Smtp-Source: AFSGD/UssbhJD5t5V87F2n/FDpXRB2iVx3/IxKqjV23WIhut4RoRyhwZxs3W7a1iEr06Y2CzA5vi
X-Received: by 2002:a63:9e0a:: with SMTP id s10mr1858628pgd.239.1542719922809;
        Tue, 20 Nov 2018 05:18:42 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542719922; cv=none;
        d=google.com; s=arc-20160816;
        b=ntYnVpqBepENDRcPR5M6gzPRuC3Yf6ydxjvJoAb/w62FZ0dPuVmf/aKKVs1O8JTtpp
         yEU/wS9H/OdDYOFBPfEWQ5V/Bmq36bIZlEv6zMwRipCxEGw0Z/nCYudfJ5jAa13kLsm9
         wRCxUYjs2tqYw5KUQbqTPtV6brJbZW4evQHuUyjip8V0LZeEHQyU6v8bdkmOfV0uuVpg
         EuGhCi4P2c/9Hnqjd4k2mjPwGwo9Yypp+FmyY+Pt3A3maUKdvLxu7LfH8Z6tzgSykcbU
         3odKbP1mw58g258IC7DCgkWktxsVSJoqPh03vPgOrHqq8RKIuX+7GRwoTHG5mwG/5U33
         n8+A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=I9H7RId3oHSU/zopwsZolbn1KGBeDS88tKjupnkgdfQ=;
        b=XL9Pbm/AjsZJ9Jpbke/hB5Wmh8jbT6/aEeTgtudm+7b94+UZjPiHM7JBgOy/pfj3nS
         SowrAH9zqnKJRhZoiF/VVEqGiq2ZmEOACw/j1rdwPEVo4d4Uwqbq+TwLWuDV+bfx5orQ
         BBcngcP22MtgZgYDFhbnlUzsioUV3A4kaS2Pg4LVGfzLWaXS13IvxLpG0sBi3aWe1Fsx
         zrMX/7kcMU8XwPLC2GSkqWm+yT8/oA2TuxVQr0TuxujHgjK7OzDelD82DQNOMWafQA4s
         33XUJcSo/gCfljRK9H5ElM4Qy3JrEOwx2VsB5QF+HlCafefaChMbiWbLX14wuzJDyiRS
         uLJg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id a5si41500787pgg.120.2018.11.20.05.18.27;
        Tue, 20 Nov 2018 05:18:42 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727086AbeKTXLj (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 18:11:39 -0500
Received: from foss.arm.com ([217.140.101.70]:48294 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725843AbeKTXLj (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 18:11:39 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 9EB7C80D;
        Tue, 20 Nov 2018 04:42:41 -0800 (PST)
Received: from [10.1.194.37] (e113632-lin.cambridge.arm.com [10.1.194.37])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 3F3D53F5B7;
        Tue, 20 Nov 2018 04:42:39 -0800 (PST)
Subject: Re: [PATCH v3 03/10] sched/topology: Provide cfs_overload_cpus bitmap
To: Steven Sistare <steven.sistare@oracle.com>, mingo@redhat.com,
        peterz@infradead.org
Cc: subhra.mazumdar@oracle.com, dhaval.giani@oracle.com,
        daniel.m.jordan@oracle.com, pavel.tatashin@microsoft.com,
        matt@codeblueprint.co.uk, umgwanakikbuti@gmail.com,
        riel@redhat.com, jbacik@fb.com, juri.lelli@redhat.com,
        vincent.guittot@linaro.org, quentin.perret@arm.com,
        linux-kernel@vger.kernel.org
References: <1541767840-93588-1-git-send-email-steven.sistare@oracle.com>
 <1541767840-93588-4-git-send-email-steven.sistare@oracle.com>
 <de2d2824-d66e-8852-d67a-d58b478b74c1@arm.com>
 <0857925d-a24e-90ea-e28c-90d69b2f66dd@oracle.com>
From: Valentin Schneider <valentin.schneider@arm.com>
Message-ID: <7d9b6789-af17-bcab-e52d-7e05483e10ea@arm.com>
Date: Tue, 20 Nov 2018 12:42:37 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <0857925d-a24e-90ea-e28c-90d69b2f66dd@oracle.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwAH6kW0CfRbh05eAA--.3016S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxJFWfArW5ArWxtw4fZFy3CFg_yoW5Cr1kpF
	y3WF92qrs7Kr4kC39Fkw18WFWrtw4kAFW5A3WfGrnxXFyDWFyxXr1Sgr1ruF9ru3ykJF1Y
	vFyagas7Zr1YvFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	JVWUGwAv7VC2z280aVAFwI0_Cr0_Gr1UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwI
	xGrwCjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkF
	s20EY4vE44CYbxCE4x80FwCY02Avz4vEIxC_Xr4lc2IjII80xcxEwVAKI48JMxvI42IY6x
	IIjxv20xvE14v26ryj6F1UMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1lcIIF0xvE
	x4A2jsIE14v26rxl6s0DMxvI42IY6I8E87Iv6xkF7I0E14v26rxl6s0DMxAIw28IcxkI7V
	AKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j
	6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7
	AF67AKxVW8ZVWrXwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Zr0_Wr1UYxBI
	daVFxhVjvjDU0xZFpf9x07bBkuxUUUUU=

On 19/11/2018 17:33, Steven Sistare wrote:
[...]
>>
>> Thinking about misfit stealing, we can't use the sd_llc_shared's because
>> on big.LITTLE misfit migrations happen across LLC domains.
>>
>> I was thinking of adding a misfit sparsemask to the root_domain, but
>> then I thought we could do the same thing for cfs_overload_cpus.
>>
>> By doing so we'd have a single source of information for overloaded CPUs,
>> and we could filter that down during idle balance - you mentioned earlier
>> wanting to try stealing at each SD level. This would also let you get
>> rid of [PATCH 02].
>>
>> The main part of try_steal() could then be written down as something like
>> this:
>>
>> ----->8-----
>>
>> for_each_domain(this_cpu, sd) {
>> 	span = sched_domain_span(sd)
>> 		
>> 	for_each_sparse_wrap(src_cpu, overload_cpus) {
>> 		if (cpumask_test_cpu(src_cpu, span) &&
>> 		    steal_from(dts_rq, dst_rf, &locked, src_cpu)) {
>> 			stolen = 1;
>> 			goto out;
>> 		}
>> 	}
>> }
>>
>> ------8<-----
>>
>> We could limit the stealing to stop at the highest SD_SHARE_PKG_RESOURCES
>> domain for now so there would be no behavioural change - but we'd
>> factorize the #ifdef SCHED_SMT bit. Furthermore, the door would be open
>> to further stealing.
>>
>> What do you think?
> 
> That is not efficient for a multi-level search because at each domain level we 
> would (re) iterate over overloaded candidates that do not belong in that level.


Mmm I was thinking we could abuse the wrap() and start at
(fls(prev_span) + 1), but we're not guaranteed to have contiguous spans -
the Arm Juno for instance has [0, 3, 4], [1, 2] as MC-level domains, so
that goes down the drain.

Another thing that has been trotting in my head would be some helper to
create a cpumask from a sparsemask (some sort of sparsemask_span()),
which would let us use the standard mask operators:

----->8-----
struct cpumask *overload_span = sparsemask_span(overload_cpus)

for_each_domain(this_cpu, sd)
	for_each_cpu_and(src_cpu, overload_span, sched_domain_span(sd))
		<steal_from here>
-----8>-----

The cpumask could be part of the sparsemask struct to save us the
allocation, and only updated when calling sparsemask_span().

> To extend stealing across LLC, I would like to keep the per-LLC sparsemask, 
> but add to each SD a list of sparsemask pointers.  The list nodes would be
> private, but the sparsemask structs would be shared.  Each list would include
> the masks that overlap the SD's members.  The list would be a singleton at the
> core and LLC levels (same as the socket level for most processors), and would 
> have multiple elements at the NUMA level.
> 

I see. As for misfit, creating asym_cpucapacity siblings of the sd_llc_*()
functions seems a bit much - there'd be a lot of redundancy for basically
just a single shared sparsemask, which is why I was rambling about moving
things to root_domain.

Having different locations where sparsemasks are stored is a bit of a
pain which I'd like to avoid, but if it can't be unified I suppose we'll
have to live with it.

> - Steve
> 
