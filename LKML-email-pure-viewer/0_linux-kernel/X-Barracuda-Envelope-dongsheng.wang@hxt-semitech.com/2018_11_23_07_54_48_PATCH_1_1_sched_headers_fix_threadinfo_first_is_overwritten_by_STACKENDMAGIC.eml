Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:32:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7AAD858037D;
	Thu, 22 Nov 2018 23:57:12 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 23:57:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyawVfRakEBPh4Ps0X53fxIX/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm4YR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOulXoYbhqFsPthu+HQuhCfjzyjFVnHL6wbc33/g/HQzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtNKgdS+a1zKbVxjvNaPNW3zj96JPIch8/p/GMUq97fM3MxkkoEQPFgU6Q?=
 =?us-ascii?q?qYz7MDOT2eQBqWaa4PBmVeKgkGMnqw5woiS2ysc3lIbJg4MVykza+iplwIY5P8?=
 =?us-ascii?q?G3SEl+YdO9FpZbqiKUN5NuT888X21lvDw2xqAItJKlZiQG1ZcqywLFZ/GGcYWE?=
 =?us-ascii?q?+g/vWPqLLTp5i39pYrOyiwyv/UWgzuDwTte43EhEoyZfjNXAqn4A2wbX58WGUP?=
 =?us-ascii?q?dw/EGs0iuV2Q/J8OFLO0U0mLLbK5E/xr4wkYIesVrMHiDogkX6lqyWeVs++uiu?=
 =?us-ascii?q?9evnZq/qppiGN497kg3+M6IuldKjAekgLAQCQ2yW9f6h2LDt40H1WqhGg/4qnq?=
 =?us-ascii?q?XDsZ3XJ9wXpqujDA9U1oYj5Qy/DzCj0NkAmXkHLVRFeA+IjoTwOFHBPur4DfGh?=
 =?us-ascii?q?jFSoiTtrwP7HPrv/DZXXNXXDjrjhcqhn60JGywo808pf55RKBbEFOv7zXVXxtN?=
 =?us-ascii?q?PAAh8jLwO02/rnCMl61o4GXWKPA6yZP73IvV6H++IiOO2MZI4TuDbgJPkp/f/u?=
 =?us-ascii?q?jXklmVADeamlx4cYaHe9Hv5+OUWWfWLsgssdEWcNpgc+TPbliFyeUTFJYHa+Ra?=
 =?us-ascii?q?I85iwhB4KgAofOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIsV5iDwL?=
 =?us-ascii?q?SaChS5M91RGprAL6yb1nIfTO9i0bspLj0t515+rImBE29Dx0Cdmd0m6XQ2F1mG?=
 =?us-ascii?q?MIWyE53KRlrUNhzVeD1LByg+ZEGtxL+/NJTgA6OIbGwOxhC9DyXQHBcs2TSFm8?=
 =?us-ascii?q?QNWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QmQdFANWu8iq579gjcHYjJk0qCmqaudKQc2jPN9WiZwWqPukFYTBB/UaHf?=
 =?us-ascii?q?UX8DYUvWqMzz5lneQL+2FbQnLgxBxNafJaRQdN3mk09KRPf5N9TYeGK+hWGwCR?=
 =?us-ascii?q?GMxrOPaYrqf34Q3CHcCEgCjgAS8myKNQk4Bie9vW3eCCZiGk7oY0Pp6eN+sm+0?=
 =?us-ascii?q?TlcozwGWaE1sz6e69QQLhfOCUf8T3qgLuCE6qzpqGlawxNbWC9uGpwp8c6RQe9?=
 =?us-ascii?q?I94FFb1W3HswxxJICvL6dnhlQGaQR4o1vu1wlrCoVHicUqsHIqzA91KaKE0FNA?=
 =?us-ascii?q?dymU3YzqNr3QMGny+BGva6jZ2lzF1NaW+6EP6Ok3qln5vQGpEFYi/Gtj09VPz3?=
 =?us-ascii?q?Sc4ZDKBhIIUZ3tSkY36wR6p7bCbyYn44Pby3JtPre0szPYwN0pGfYqxQymf9dc?=
 =?us-ascii?q?N6OEChT/E8kbB8ioNewrlEKlbhMCPOBO6qE0O9mqeOeB2K6uJOxghi6pjXxb4I?=
 =?us-ascii?q?Bh1UKB7yp9SvPS05kZ2f2Z3wuHWC36jFeuqc33nYFEZTcPHmuw0yTkBYhRZrFs?=
 =?us-ascii?q?coYPE2uhP8q3xtBmjZ73R3FY7EKjB08B2MKxYxqSbkDy0hdK1UsKpnyrgy24wC?=
 =?us-ascii?q?JukzEot6aQwDbBw+D/exUZIG5LQ29igEzoIYi1idAaQUepYxIolBuj+Ub12axb?=
 =?us-ascii?q?qL5jIGnUREdCZzL2IH16UqusqrqCZNZC6ZMpsSlNUOWwe0uaSqP7oxYB1yPjHm?=
 =?us-ascii?q?1exC00dj2wu5X5mQB6h3yZLHppsHXZfsRwzw/F5NPAXf5RwiYGRC5ghDnVHFe8?=
 =?us-ascii?q?Jdqp/daTl5vZqeCxTWGhVp5ScSnt04yAsjC25WlrAR25gvCylcfrEQk80S/nyd?=
 =?us-ascii?q?ZqUT/Eowr7Yonuz666K/5oflF0BF/g7Mp3AoF/nZE3hJ0K23gah5OV8GEDkWfy?=
 =?us-ascii?q?N9VbxK3/YGAMRT4N397a/gzl1Fd/IXKOwoLzTm+dzdd5Z9mmfmMW3Tow78NQB6?=
 =?us-ascii?q?eV9rBEnTZ1rUC+rQLeevV9mjYdyf0z6H8Vme0JuQwtzjmDDbAWB0VXISvslxGQ?=
 =?us-ascii?q?5dCksKpXfHqvcaS31EdmmNChDbKCrRtGVHf3ZJgiBjNw4dtlMF3XznLz8I7kdc?=
 =?us-ascii?q?LUbdISsB2UjhjBg/JUKJI3ivoFmy5nNXjhsn0izu4xlQZu0o2ivIibN2Vt+7q0?=
 =?us-ascii?q?AgJfNj3wfc8S+yvijaBDnsaNxICvH45sGjEKXJvuUPKpHygetfXhNwaSDjI8rm?=
 =?us-ascii?q?2XFqbYHQ+a8E1mtW7AE4i3N3GLI3kU1c5tSwOaJExbnQAYRjE6noMiGwCuxczh?=
 =?us-ascii?q?dlp55z8L6l75rBtM1vxnNx3lXmjDoweoby8+SIKDIxpO8gFC+0DVPNSc7u1pGi?=
 =?us-ascii?q?FX4IahoBaRKmCBZARIEGIJWlGCB1/5Jbmj/t3A8+meBuqjIPrCe7SOqepCV/iW?=
 =?us-ascii?q?wZKjyJdp/zGJNs+XJHltE+U72lZfXXB+A8nYmzIPSzEOlyLQdcGbog2w+jZwrs?=
 =?us-ascii?q?C5//TmQwbv5YqJC7tPPtRj4RG2gaGfN+GOgCZ1MypX1pQJxXXQ0rgQwEYSiz1y?=
 =?us-ascii?q?dzmqCbkAtTDCTKPTmq9UDh4XcSBzNNFP76IzwAZNI9Pbisju2758j/41DUpFVF?=
 =?us-ascii?q?P7lsGoY8wKP3+yNFfdCEmXM7SGICXBw9vrbqOkVb1QkOJUugWqtjaGCEDjJCqM?=
 =?us-ascii?q?ljnzWxCrMOFBlyWbPB1YuIGgfRdhE2njTNT6ahKlNN97lyE5wboxhnnSL24TLS?=
 =?us-ascii?q?B8c19Rrr2X9S5YnvR/G2lb4nV5N+WLhyaZ4PfeKpsNtftrAyJ0l/9V4XggyrtV?=
 =?us-ascii?q?6j1ES+JxmCfIstFupFSmmPGVyjV7SBpOtipLhIWTsERiI6rZ8JxAWXfC/B0V7G?=
 =?us-ascii?q?SQCw4Fp91qCtD0v6BQy97PlL/8KTtY8tLU+9ccCNbQKM6dLHUhNh/pS3boC15R?=
 =?us-ascii?q?QT6sKmzbg1d1ivye9nSJ6JM9r86o0M4SRbtLfFg0EO4GEENjHcxELJohDR0+lr?=
 =?us-ascii?q?vOs8cO6jKSqx/eX8VXuJ+PAv6VB/r0KDufgv9bbh0H6bPoMcEIO4j6x0Fpah9x?=
 =?us-ascii?q?m4GcSBmYZsxEviA0Nlx8m05K6nUrCzRrg08=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAAA3svdbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCowHi36BaDmXJ4FxFAEBGBMBiFIiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJpAiQTPwYJAlADWgENBQWDHIIBAQWoIDOKGIdehCuCF?=
 =?us-ascii?q?oFEhyaGEgKJIIFxhH6PcwcCkUdekCosl10CBAIJAhSBRoINTSODPIInFxKLZYI?=
 =?us-ascii?q?yMgEBMYEFAQGJVYEugR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AJAAA3svdbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCowHi36BaDmXJ4FxFAEBGBMBiFIiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJpAiQTPwYJAlADWgENBQWDHIIBAQWoIDOKGIdehCuCFoFEhyaGEgKJIIF?=
 =?us-ascii?q?xhH6PcwcCkUdekCosl10CBAIJAhSBRoINTSODPIInFxKLZYIyMgEBMYEFAQGJV?=
 =?us-ascii?q?YEugR8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="53430564"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 23:56:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2393512AbeKWSjM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 13:39:12 -0500
Received: from mx01.hxt-semitech.com ([223.203.96.7]:54727 "EHLO
        barracuda.hxt-semitech.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S2390536AbeKWSjL (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 13:39:11 -0500
X-ASG-Debug-ID: 1542959745-093b7e021a0b010001-xx1T2L
Received: from HXTBJIDCEMVIW02.hxtcorp.net ([10.128.0.15]) by barracuda.hxt-semitech.com with ESMTP id h1wUzLptsjbR4O80 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-SHA384 bits=256 verify=NO); Fri, 23 Nov 2018 15:55:45 +0800 (CST)
X-Barracuda-Envelope-From: dongsheng.wang@hxt-semitech.com
Received: from arch.localdomain (10.64.6.159) by HXTBJIDCEMVIW02.hxtcorp.net
 (10.128.0.15) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Fri, 23 Nov
 2018 15:55:02 +0800
From: Wang Dongsheng <dongsheng.wang@hxt-semitech.com>
To: <dhowells@redhat.com>, <tglx@linutronix.de>
CC: <mingo@kernel.org>, <akpm@linux-foundation.org>,
        <yamada.masahiro@socionext.com>, <keescook@chromium.org>,
        <tony.luck@intel.com>, <will.deacon@arm.com>, <palmer@sifive.com>,
        <yu.zheng@hxt-semitech.com>, <linux-kernel@vger.kernel.org>,
        Wang Dongsheng <dongsheng.wang@hxt-semitech.com>,
        Shunyong Yang <shunyong.yang@hxt-semitech.com>
Subject: [PATCH 1/1] sched/headers: fix thread_info.<first> is overwritten by STACK_END_MAGIC
Date: Fri, 23 Nov 2018 15:54:48 +0800
X-ASG-Orig-Subj: [PATCH 1/1] sched/headers: fix thread_info.<first> is overwritten by STACK_END_MAGIC
Message-ID: <e7952089a66db4e5d59d2af230a324155bb018a0.1542955914.git.dongsheng.wang@hxt-semitech.com>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 7BIT
Content-Type: text/plain; charset=US-ASCII
X-Originating-IP: [10.64.6.159]
X-ClientProxiedBy: HXTBJIDCEMVIW01.hxtcorp.net (10.128.0.14) To
 HXTBJIDCEMVIW02.hxtcorp.net (10.128.0.15)
X-Barracuda-Connect: UNKNOWN[10.128.0.15]
X-Barracuda-Start-Time: 1542959745
X-Barracuda-Encrypted: ECDHE-RSA-AES256-SHA384
X-Barracuda-URL: https://192.168.50.101:443/cgi-mod/mark.cgi
X-Virus-Scanned: by bsmtpd at hxt-semitech.com
X-Barracuda-BRTS-Status: 1
X-Barracuda-Bayes: SPAM GLOBAL 0.9457 1.0000 3.7240
X-Barracuda-Spam-Score: 3.72
X-Barracuda-Spam-Status: No, SCORE=3.72 using global scores of TAG_LEVEL=1000.0 QUARANTINE_LEVEL=1000.0 KILL_LEVEL=9.0 tests=
X-Barracuda-Spam-Report: Code version 3.2, rules version 3.2.3.62283
        Rule breakdown below
         pts rule name              description
        ---- ---------------------- --------------------------------------------------
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

When select ARCH_TASK_STRUCT_ON_STACK the first of thread_info variable
is overwritten by STACK_END_MAGIC. In fact, the ARCH_TASK_STRUCT_ON_STACK
is not a real task on stack, it's only init_task on init_stack.

Commit 0500871f21b2 ("Construct init thread stack in the linker script
rather than by union") added this macro and put task_strcut into
thread_union. This brings us the following possibilities:
    TASK_ON_STACK    THREAD_INFO_IN_TASK    STACK
                                            ----- <-- thread_info & stack
        N                    N             |     |     --- <-- task
                                           |     |    |   |
                                            -----      ---

                                            ----- <-- stack
        N                    Y             |     |     --- <-- task(Including thread_info)
                                           |     |    |   |
                                            -----      ---

                                            ----- <-- stack & task & thread_info
        Y                    N             |     |
                                           |     |
                                            -----

                                            ----- <-- stack & task(Including thread_info)
        Y                    Y             |     |
                                           |     |
                                            -----
The kernel has handled the first two cases correctly.

For the third case:
TASK_ON_STACK: Y. THREAD_INFO_IN_TASK: N. this case
should never happen, because the task and thread_info will overlap. So
when TASK_ON_STACK is selected, THREAD_INFO_IN_TASK must be selected too.

For the fourth case:
When task on stack, the end of stack should add a sizeof(task_struct) offset.

This patch handled with the third and fourth case.

Fixes: 0500871f21b2 ("Construct init thread stack in the linker ...")

Signed-off-by: Wang Dongsheng <dongsheng.wang@hxt-semitech.com>
Signed-off-by: Shunyong Yang <shunyong.yang@hxt-semitech.com>
---
 arch/Kconfig                     | 1 +
 include/linux/sched/task_stack.h | 5 ++++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/arch/Kconfig b/arch/Kconfig
index e1e540ffa979..0a2c73e73195 100644
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@ -251,6 +251,7 @@ config ARCH_HAS_SET_MEMORY
 # Select if arch init_task must go in the __init_task_data section
 config ARCH_TASK_STRUCT_ON_STACK
        bool
+	depends on THREAD_INFO_IN_TASK || IA64
 
 # Select if arch has its private alloc_task_struct() function
 config ARCH_TASK_STRUCT_ALLOCATOR
diff --git a/include/linux/sched/task_stack.h b/include/linux/sched/task_stack.h
index 6a841929073f..624c48defb9e 100644
--- a/include/linux/sched/task_stack.h
+++ b/include/linux/sched/task_stack.h
@@ -7,6 +7,7 @@
  */
 
 #include <linux/sched.h>
+#include <linux/sched/task.h>
 #include <linux/magic.h>
 
 #ifdef CONFIG_THREAD_INFO_IN_TASK
@@ -25,7 +26,9 @@ static inline void *task_stack_page(const struct task_struct *task)
 
 static inline unsigned long *end_of_stack(const struct task_struct *task)
 {
-	return task->stack;
+	if (!IS_ENABLED(CONFIG_ARCH_TASK_STRUCT_ON_STACK) || task != &init_task)
+		return task->stack;
+	return (unsigned long *)(task + 1);
 }
 
 #elif !defined(__HAVE_THREAD_FUNCTIONS)
-- 
2.19.1

