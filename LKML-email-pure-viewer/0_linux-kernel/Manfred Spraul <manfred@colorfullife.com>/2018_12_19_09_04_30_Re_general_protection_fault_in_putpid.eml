Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:32:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C3365580039;
	Wed, 19 Dec 2018 01:04:41 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 19 Dec 2018 01:04:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ah1kyOx94QnD94f9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1e8VIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaM+dwfr7GfdMCW2VOQtpRWSJGAoO5?=
 =?us-ascii?q?dYQPDuwBNvtco4Tyo1YCqB2zDhSuCuzy0D9FnmL407M00+ohEg/I0gIvEN0Mv3?=
 =?us-ascii?q?vIt9X1LKUfXPuwzKXU1zjOde9a1Dn/5YXObxsvoeuMXbV1ccfJzkcgDQXFjluK?=
 =?us-ascii?q?qYP7Ijyey/kDs3CB7+V6SOKvj3MspgZ0oje1wMcshJPJiZwIxV3f6Sp5x4I1Jd?=
 =?us-ascii?q?qiSE51fN6kFJ9QtyCUN4RoWM8tX2ZouCMjx7AApJW1ci8KyJE9yB7ebfyKa5KH?=
 =?us-ascii?q?4gr7VOaKOTd4g25ldKijiBa19EitzPD3WMqs0FtSsCZJjt3BumoQ2xHd9MSLUO?=
 =?us-ascii?q?Zx80S91TqV1g3e6PlILV4omabHJZMsx6M/m54WvEnHECL5hF/5gaqMeUk45uSl?=
 =?us-ascii?q?7uTqban4qZKfMoJ5ig/+P6QwlsG6HOg0LBQBUHae9Oui2rDv4Uz0TbNXhfMsiK?=
 =?us-ascii?q?bZqorVJcEDq665HQBV1oEj5g6hDzepztsYh2MLLFFbdxKdiYjmJVXOLOr/Dfel?=
 =?us-ascii?q?jFSgiDZrx/bYMb39GpjBMGTPnbP7cbpg5UNQ1hA/wc1c6p5IEL0MIfD+Vlf0tN?=
 =?us-ascii?q?PCDx85NwK0w/zgCNV4zo4eXWOPAqmEMKLdqFOI5fwgI/OKZIALvDbxMv8l5vDo?=
 =?us-ascii?q?jXAng18QZrep3ZQJZ3CiBPhmIFuWYWDqgtgfFWcGpA0+TPbliFGaSz5ce26yX7?=
 =?us-ascii?q?4g5jE8EI+mCYbDRoOzj7Cb0ya7A4ZbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48kzRuurhP1y6J7LurI/S0VrZLj28J05+3Pjx4y8iZ4D8SA026XSWF0kX?=
 =?us-ascii?q?gFRzs33KB5vEx8xU2P0al+g/xEC9NT4+lFXRs9NZ7Z1+Z6Ecz9WhrdfteVT1ar?=
 =?us-ascii?q?WtemATYvQd4rwN8OZEB9G9Oljh3Y2yqqArkVl6GEBZAu86Lc2WTxKNh5y3rcyK?=
 =?us-ascii?q?YhiFwmSNNVNWK6nq5/6xTTB4nRnkqDjKaqdaMc3C3X+GeZ12WOvlpVUApxUaXD?=
 =?us-ascii?q?QHAeaVHardX/5kPeUbCuDa4rPRdGyc6HMqFKcMHmjU1aRPf/P9TTe2GxlH22BR?=
 =?us-ascii?q?qSwrOMbZDle2MS3CjGDEgEkgYT/WuJNAQkByehpX7eAyJqFV71f0zs9ux+omuh?=
 =?us-ascii?q?TkAo1wGKc1Fh172t9xEIn/OcVe0c0qgEuCg7rTV0B0iy39TRB9qEpApheaFcbM?=
 =?us-ascii?q?g54FdG02LZqgN8MoahL6Bkml4RbQB3s1ny2BVwD4VKidIqo28yzApuNaKY10tM?=
 =?us-ascii?q?eC6C0pDuJLLbMGny8wqpa67NxF7e1s2b+qMO6PQ+tlXisxulFksk83V7zdZV12?=
 =?us-ascii?q?GQ6YnNDAoXSZjxSFo49wBmp7HGZSkw/5/U1XxpMamzrj/C29IoCPE5yhq6eNdf?=
 =?us-ascii?q?KqeEFA70E80VHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQxZkFx++X3wSZWDb8lluuqd33lp1eajEUHWq/zjbkCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmCulzz?=
 =?us-ascii?q?Bujz4ltKue3CzUzOTkexoKIWpLRGhkjVfxLom4ldEaXE60bwc3kBup/1r1x69e?=
 =?us-ascii?q?pK5nNWncXV9IfzTqL2FlSqawrLuCbNJV55MyrCpXV/6wYVaERb7nohsWyj/sEH?=
 =?us-ascii?q?FaxD8maT6qoJL5nxphhWKZLXZzqmfZeM5qyRfe4tzcWeBe3j4cSCZkjjnXA0C2?=
 =?us-ascii?q?P8O18tWMi5fDrue+WnqhV51SayXqzZmMtDCm5W1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYohpEfw2IahpaW/XoAi2vz?=
 =?us-ascii?q?Ks9U2aH9bHoMQz4E3djV7RPh2E1iKHKJ2o34Wm+cwstne9m1fGcW1jgh4MBNDa?=
 =?us-ascii?q?ee9KZEkjdtolqksQLRZuBwnzcHxvsp8nIageAJuAw2wyWZA7ASG1RYPCP2mxSJ?=
 =?us-ascii?q?6dC+sLtYZGK1fbes00p+mMirDKuerQFERHb5ZpAiEDdz7splMVLAyn3z6pz+d9?=
 =?us-ascii?q?nWYtIerRmUkxbGj+hIJ5M9jPsKhSx7OW3juX0p0fI0jRtr3ZuipoiIN31t/L6l?=
 =?us-ascii?q?Ah5fLjD1YsIT+jL3gqpEkMeZwZuvHol/FTURR5TnU+ioED0JuPTjNgaOFiA8q3?=
 =?us-ascii?q?iBFbreGw+f9Flpr3bVH5+3MHGXIWETzc9+SxmFOExfnAcUUS0mnp4+EwCm3s3g?=
 =?us-ascii?q?f11/5jAM/V74sRpMx/lsNxn+VGffuQipZi01SJiZMBpZ8AVC613JPsyZ6+J5Bz?=
 =?us-ascii?q?tY8YG5rAyRNmybYBxFAnoTVUyDA1DjI6Oi5d3d8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRiwVjS3NatCUpAym9i1rtM?=
 =?us-ascii?q?y/8+nrWAHy5YuJEbRSKs5i+xS3gaeFKu6Rizx1KTde1pMQ23DIzKIT00IViyFr?=
 =?us-ascii?q?bzOtC6gPtTbRTKLMna9aFx4aayRuNMtR8qIzxA9NNdTAitPy0L54geU4C1NEVV?=
 =?us-ascii?q?znh8GoatYGI2C7NFPbGkmLMK6KKiHMw8Hyeam8U6FfjP1Itx2svjaWC0/jMSqC?=
 =?us-ascii?q?lznqVBCvMPtAjCKBPBxZt4GybAxtCXX4TN/9bh27Mdl3jSA5wLEuh3PKM3IcPi?=
 =?us-ascii?q?Z4c09XsrKQ6iZYiO1lG2Nd9nplMfWEmyGB4ubCN5YZquFrDTp0lu5A5HQ6yqBY?=
 =?us-ascii?q?7CVFRPxzhSvTocRio1CgkumT1DVnVABCpSpMhIKOpU9iI7nW9oFcWXbY+xIA9X?=
 =?us-ascii?q?mQCxUPp9d/FtLjobxfytjRm6L1MzpC99PU/c0BB8nbMs6HMXwhMQb3Fz7QFgcK?=
 =?us-ascii?q?UTmrNWTHjUxHjP6S7mGVroQ9qpX0mJsBULlbVFk0FvMcEktkHdwCL41xXjMrir?=
 =?us-ascii?q?ObiM8I5XyjrBjeXslav5bHVu6MDvXrMjqWkb5EZx5biY//eKgWN5HhygRce0R5?=
 =?us-ascii?q?m5qCT0bOTM1OpTNJYQgzr0FAtnN5Szt3k1n0eAmq/DxKTKLpkxVsh1ElOLpwqW?=
 =?us-ascii?q?i06Aw+LXLRtTkzmU01lM+jiCiJayb2MKK5XIUQAC3x5GYrNZauZg9zYxe/kQRf?=
 =?us-ascii?q?LC3NWrYZ275pc25xhQP0spxLHuRSUKlAYREdg/qQYqN7ghxntiy7yBoftqP+Ap?=
 =?us-ascii?q?x4mV5vLMeh?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A4AABWCRpch0O0hNFjEwEBBwEBAQQBA?=
 =?us-ascii?q?QcEAQGBUwUBAQsBgTCBOYECJ4N9iHiLHYFgCCUUl0iBJANMEwEBGAsIAYRAgmk?=
 =?us-ascii?q?iNgcNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkgmIBAQEBAwECIAQZAQE3AQUJA?=
 =?us-ascii?q?QEKDgMDAQIBKgICAzEBBQEUCAYBDAYCAQEBgx0BggEBBAqbQzyKKXB8M4J2AQE?=
 =?us-ascii?q?FgkOEYQcDBRKLEYEcF4F/gREnDIJfgx4EGIFngmiCV4l5gUaEYJBHSwmCKYIEg?=
 =?us-ascii?q?mKDRIcIHmB9iBkMK4Qagw8siRuEeIsWAgQCBAUCBQ8hgSwNWYEhMxoIGxWDJ4I?=
 =?us-ascii?q?bDBeDSopUPzIBegoBAY1gAQE?=
X-IPAS-Result: =?us-ascii?q?A0A4AABWCRpch0O0hNFjEwEBBwEBAQQBAQcEAQGBUwUBAQs?=
 =?us-ascii?q?BgTCBOYECJ4N9iHiLHYFgCCUUl0iBJANMEwEBGAsIAYRAgmkiNgcNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEKCwkIKSMMgjYkgmIBAQEBAwECIAQZAQE3AQUJAQEKDgMDAQIBKgI?=
 =?us-ascii?q?CAzEBBQEUCAYBDAYCAQEBgx0BggEBBAqbQzyKKXB8M4J2AQEFgkOEYQcDBRKLE?=
 =?us-ascii?q?YEcF4F/gREnDIJfgx4EGIFngmiCV4l5gUaEYJBHSwmCKYIEgmKDRIcIHmB9iBk?=
 =?us-ascii?q?MK4Qagw8siRuEeIsWAgQCBAUCBQ8hgSwNWYEhMxoIGxWDJ4IbDBeDSopUPzIBe?=
 =?us-ascii?q?goBAY1gAQE?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208,223";a="44633977"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 01:04:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728513AbeLSJEg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 04:04:36 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:33188 "EHLO
        mail-wm1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727717AbeLSJEg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 04:04:36 -0500
Received: by mail-wm1-f68.google.com with SMTP id r24so9033590wmh.0
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 01:04:33 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=colorfullife-com.20150623.gappssmtp.com; s=20150623;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language;
        bh=tkxkQZ8w8uWQO4DOALofQnS99LWAHWpWskK5EeYPAFM=;
        b=UiEqv0scG0jexALnNcnoT8Kkk3LMpQXYyAI+RZmke3yPrbHkBRa3la7phHMrE6orl8
         onHlQmYQwvbpClfMVsawYXHGxCAeB4BqFNvh5DSBECfcvAX/n5uJupiwQh4e7QuBvuRU
         bgHzWm2ul16nWvWi2Hk8IssaOIglHOxmXZ+EzK5c7wqv+tUybsw9IgLtIHdQ4OsZipQf
         tbu7HGwqdmvtNp5iwoYJKYLgjXQXzQMlm4NA7QBK3n5uEpKBvyCfRpxX0m23rbn1Wrwi
         g9kx35kr/tLuadrsL5RgIrZKBSv78xKKlTikqlXR4edKPNMiSAG3pUny+7r6JyfKSEDi
         jBWA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language;
        bh=tkxkQZ8w8uWQO4DOALofQnS99LWAHWpWskK5EeYPAFM=;
        b=ncI8DT20o0GyxxtngD5vqqcdg7HiD9JZ0SX2YhGJdY1rh+5RYyRpAZtKAyoB7ZRACJ
         sNNA1sc8jmdwoFpp3yKYCImGCyQCNNw6WXctKWWiA00oX8a0lHmI6zTL5GjxguZxoJHy
         Ka1mZqwGIduPiS8oXlWdBRrJ6S/fXkYFfO4mXjCqczBDkg/ks6k2r1XO8Z6BGNQWLJY9
         fiexsG6CgEuC/R8nbu7DQypwirqeAVO6xT8EcUJI+M8NHRgHtiAdqmhSL3DGRslT+YnE
         jCWTVNLevzlMSQtjOL8lfT87iZfkXLuTYgg1krh1kXPsocJWPMkbBptrKdig+fWJQenh
         x9aA==
X-Gm-Message-State: AA+aEWbI4TtDrqWL8f7g7+gHuaFPtw5IBgGi+WGAMyC1HnIERCbbcQPX
        74g6cvV2vaseUsw8dVMi5ssrpw==
X-Google-Smtp-Source: AFSGD/WNUZzl++Zx7804Bl4kkT6yZdOaPvLt1bGGqcFdOSeXqQJEsc6G+XisU7jnzq3nqgskrTlrZw==
X-Received: by 2002:a1c:400b:: with SMTP id n11mr6446342wma.85.1545210272618;
        Wed, 19 Dec 2018 01:04:32 -0800 (PST)
Received: from linux.fritz.box (p200300D993CA0A005CE85F5212CEE306.dip0.t-ipconnect.de. [2003:d9:93ca:a00:5ce8:5f52:12ce:e306])
        by smtp.googlemail.com with ESMTPSA id 129sm4366793wmd.18.2018.12.19.01.04.31
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 19 Dec 2018 01:04:31 -0800 (PST)
Subject: Re: general protection fault in put_pid
To: Dmitry Vyukov <dvyukov@google.com>,
        syzbot+1145ec2e23165570c3ac@syzkaller.appspotmail.com
Cc: Andrew Morton <akpm@linux-foundation.org>,
        David Howells <dhowells@redhat.com>,
        "Eric W. Biederman" <ebiederm@xmission.com>,
        ktsanaktsidis@zendesk.com, LKML <linux-kernel@vger.kernel.org>,
        Michal Hocko <mhocko@suse.com>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        Stephen Rothwell <sfr@canb.auug.org.au>,
        syzkaller-bugs <syzkaller-bugs@googlegroups.com>,
        Matthew Wilcox <willy@infradead.org>,
        Davidlohr Bueso <dave@stgolabs.net>
References: <00000000000051ee78057cc4d98f@google.com>
 <CACT4Y+YX3=OLqfmWwhHVCQz+HwE=53VH9c1E2M+rgbF=UVTV5A@mail.gmail.com>
From: Manfred Spraul <manfred@colorfullife.com>
Message-ID: <ab2fb696-8d3b-9720-a8a0-99c66a080605@colorfullife.com>
Date: Wed, 19 Dec 2018 10:04:30 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <CACT4Y+YX3=OLqfmWwhHVCQz+HwE=53VH9c1E2M+rgbF=UVTV5A@mail.gmail.com>
Content-Type: multipart/mixed;
 boundary="------------348420D97650A12C69C239A1"
Content-Language: en-US
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This is a multi-part message in MIME format.
--------------348420D97650A12C69C239A1
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit

Hello Dmitry,

On 12/12/18 11:55 AM, Dmitry Vyukov wrote:
> On Tue, Dec 11, 2018 at 9:23 PM syzbot
> <syzbot+1145ec2e23165570c3ac@syzkaller.appspotmail.com> wrote:
>> Hello,
>>
>> syzbot found the following crash on:
>>
>> HEAD commit:    f5d582777bcb Merge branch 'for-linus' of git://git.kernel...
>> git tree:       upstream
>> console output: https://syzkaller.appspot.com/x/log.txt?x=135bc547400000
>> kernel config:  https://syzkaller.appspot.com/x/.config?x=c8970c89a0efbb23
>> dashboard link: https://syzkaller.appspot.com/bug?extid=1145ec2e23165570c3ac
>> compiler:       gcc (GCC) 8.0.1 20180413 (experimental)
>> syz repro:      https://syzkaller.appspot.com/x/repro.syz?x=16803afb400000
> +Manfred, this looks similar to the other few crashes related to
> semget$private(0x0, 0x4000, 0x3f) that you looked at.

I found one unexpected (incorrect?) locking, see the attached patch.

But I doubt that this is the root cause of the crashes.

Any remarks on the patch?

I would continue to search, and then send a series with all findings.

--

     Manfred


--------------348420D97650A12C69C239A1
Content-Type: text/x-patch;
 name="0001-ipc-sem.c-ensure-proper-locking-during-namespace-tea.patch"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
 filename*0="0001-ipc-sem.c-ensure-proper-locking-during-namespace-tea.pa";
 filename*1="tch"

From 733e888993b71fb3c139f71de61534bc603a2bcb Mon Sep 17 00:00:00 2001
From: Manfred Spraul <manfred@colorfullife.com>
Date: Wed, 19 Dec 2018 09:26:48 +0100
Subject: [PATCH] ipc/sem.c: ensure proper locking during namespace teardown

free_ipcs() only calls ipc_lock_object() before calling the free callback.

This means:
- There is no exclusion against parallel simple semop() calls.
- sma->use_global_lock may underflow (i.e. jump to UNIT_MAX) when
  freeary() calls sem_unlock(,,-1).

The patch fixes that, by adding complexmode_enter() before calling
freeary().

There are multiple syzbot crashes in this code area, but I don't see yet
how a missing complexmode_enter() may cause a crash:
- 1) simple semop() calls are not used by these syzbox tests,
  and 2) we are in namespace teardown, noone may run in parallel.

- 1) freeary() is the last call (except parallel operations, which
  are impossible due to namespace teardown)
  and 2) the underflow of use_global_lock merely delays switching to
  parallel simple semop handling for the next UINT_MAX semop() calls.

Thus I think the patch is "only" a cleanup, and does not fix
the observed crashes.

Signed-off-by: Manfred Spraul <manfred@colorfullife.com>
Reported-by: syzbot+1145ec2e23165570c3ac@syzkaller.appspotmail.com
Reported-by: syzbot+c92d3646e35bc5d1a909@syzkaller.appspotmail.com
Reported-by: syzbot+9d8b6fa6ee7636f350c1@syzkaller.appspotmail.com
Cc: dvyukov@google.com
Cc: dbueso@suse.de
Cc: Andrew Morton <akpm@linux-foundation.org>
---
 ipc/sem.c | 24 ++++++++++++++++++++++--
 1 file changed, 22 insertions(+), 2 deletions(-)

diff --git a/ipc/sem.c b/ipc/sem.c
index 745dc6187e84..8ccacd11fb15 100644
--- a/ipc/sem.c
+++ b/ipc/sem.c
@@ -184,6 +184,9 @@ static int sysvipc_sem_proc_show(struct seq_file *s, void *it);
  */
 #define USE_GLOBAL_LOCK_HYSTERESIS	10
 
+static void complexmode_enter(struct sem_array *sma);
+static void complexmode_tryleave(struct sem_array *sma);
+
 /*
  * Locking:
  * a) global sem_lock() for read/write
@@ -232,9 +235,24 @@ void sem_init_ns(struct ipc_namespace *ns)
 }
 
 #ifdef CONFIG_IPC_NS
+
+static void freeary_lock(struct ipc_namespace *ns, struct kern_ipc_perm *ipcp)
+{
+	struct sem_array *sma = container_of(ipcp, struct sem_array, sem_perm);
+
+	/*
+	 * free_ipcs() isn't aware of sem_lock(), it calls ipc_lock_object()
+	 * directly. In order to stay compatible with sem_lock(), we must
+	 * upgrade from "simple" ipc_lock_object() to sem_lock(,,-1).
+	 */
+	complexmode_enter(sma);
+
+	freeary(ns, ipcp);
+}
+
 void sem_exit_ns(struct ipc_namespace *ns)
 {
-	free_ipcs(ns, &sem_ids(ns), freeary);
+	free_ipcs(ns, &sem_ids(ns), freeary_lock);
 	idr_destroy(&ns->ids[IPC_SEM_IDS].ipcs_idr);
 	rhashtable_destroy(&ns->ids[IPC_SEM_IDS].key_ht);
 }
@@ -374,7 +392,9 @@ static inline int sem_lock(struct sem_array *sma, struct sembuf *sops,
 		/* Complex operation - acquire a full lock */
 		ipc_lock_object(&sma->sem_perm);
 
-		/* Prevent parallel simple ops */
+		/* Prevent parallel simple ops.
+		 * This must be identical to freeary_lock().
+		 */
 		complexmode_enter(sma);
 		return SEM_GLOBAL_LOCK;
 	}
-- 
2.17.2


--------------348420D97650A12C69C239A1--
