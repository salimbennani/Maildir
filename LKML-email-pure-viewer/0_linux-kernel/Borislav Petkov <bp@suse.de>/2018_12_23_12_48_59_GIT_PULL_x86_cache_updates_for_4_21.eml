Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:00:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1BDD858049E;
	Sun, 23 Dec 2018 04:49:17 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga001-1.fm.intel.com with ESMTP; 23 Dec 2018 04:49:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXQd0YRbFPA7ut4tM59ntIZb/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci4Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQOMvpXoJTyqVQAthu+HQuhCfjzyjJLnHL6wbE23v4jHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtKaoSVvq1zKjTzTXHdfxWxyr25pLWfRA9ovGMWqxwetfWxEY0DwPIlU6Q?=
 =?us-ascii?q?qZH+PzyLzOgCrnaU4vNmWOmyhWAnrARxrSKuxscqkoTJhZwaykrC9SpnxIY5P9?=
 =?us-ascii?q?q4SFR0YdOiDZBetDmaOpNoTs8+R2xkojs2x7MYtZKhYSQHy4grywTeZvGFa4SE?=
 =?us-ascii?q?/xbuWeaLLTtlin9oeKiziwis/US80OHwSMm53VlMoyFYiNfDrGoN2AbW6sWfSv?=
 =?us-ascii?q?ty4EOh2TGX2gDN5eFLP1o0mbDYK5E/2L4wkIQcsUDZEi/xgkX2g7eadkQi+ue2?=
 =?us-ascii?q?9+TqeqvqqoOYOoNulw3zPLoiltaiDek7LgQCRWmW9Oak2L3m50L5QbFKjvMskq?=
 =?us-ascii?q?netZDXPcAbpq+/Aw9I3Ycv8hW/ACm80NQeg3YHKEtJeBWJjojvJV7OOuv1Demw?=
 =?us-ascii?q?g1uyijdn3fPGMaP7ApXLMHfDlK3tfbFn605T0AYz18xQ54pICrEdJ/L+QkvxtN?=
 =?us-ascii?q?3bDhAnKQC1zPvnBc551oMfX2KPH6CYPLnTsV+O+uIgPe2MaJUJtzb6Lvgv/+Tu?=
 =?us-ascii?q?gmMhmV8BYamp2oMaaHCiEfRnP0WWe33sjs0BEWcXpAU+SuPqhUaGUT5SYXayQq?=
 =?us-ascii?q?096is6CIKgEYfMWIStjKad0ye8G51cfnpGBUyUEXf0a4WEXO8BZziJIs9hlTwE?=
 =?us-ascii?q?VqKtS5U72hGsrwL6z7tnLuzJ+iwXr57j1d515/HNmhE27zB7E8Od02SVRWFugm?=
 =?us-ascii?q?wIXyM23Lx4oUFlyVeMy654j+ZcFdxS/fxJVAg6OIXYz+x7DdDyRw3Acs2ISFag?=
 =?us-ascii?q?XtWpHzUxQsgtzN8JZkZ3A8+igQzb3yq2H78VkKSGC4Eu/aLCwXf9PcZ9xGzA1K?=
 =?us-ascii?q?k6kVYmRMxDNWmlhq568wjeHIrJk0Sfl6a3eqUQxi/N9GGfzWWQuEFUShJ/UaLA?=
 =?us-ascii?q?XXoHfEvZscz55l/eT7+pEbkoLxFOydCcJadQat3ml1NGROz9N9TYeG+xn2awBR?=
 =?us-ascii?q?CVxrKDdobqemMd3DnDB0gAiQwc4XGGNQ0mDCe7v23eFCBuFU7oY0707el+qXa7?=
 =?us-ascii?q?TkgozwGKb0xtzaa19gQShfyGT/MT37QEuCg6pjVwHVa92c/WCtWaqwpgeqVcfc?=
 =?us-ascii?q?0y4FNd2W3FsAx9O4SqL7p+iV4GbwR3o0Tu2g1tBYVEj8cro20lzQpoJa2DzVNO?=
 =?us-ascii?q?aimX3ZbzOr3QNGn/5xSva6/Q2lHD39ea4KYP6PIkq1r9uAGlDFYt83Ji09NNyX?=
 =?us-ascii?q?uT+o3KDBYOUZL2Sks29wV6q6vGbSUn5oLU1WdjMa+7sjLZ39IpBe0lyguvfttF?=
 =?us-ascii?q?MaOEEhPyHNMeB8S0NOMqnF2pZAoePO9O7K40I9+md/ye1a6xPeZvgCipjX5a74?=
 =?us-ascii?q?B6yE6M8TRzSvTJ35oc3/6XxA+HWCrig1e7tcD3n5tJZTUTHmq51CjlC5RdZqx0?=
 =?us-ascii?q?fYYXF2iuJ9e7ycl5h57oQ3RY7kKsB0sa2M+1fhqfd1z83QxK2UUXu3Cngja4zz?=
 =?us-ascii?q?pvnjEtr6qf2jHOwuv4eBoGPG5LWHdtjVP2LYeoiNAaWVCibxI1mxu9+Ub6269b?=
 =?us-ascii?q?qbx9L2bJW0dIfCv2L2Z4XqurrLWCYM1P6JIusSpJVuSxelSaSr/7oxsH3CLvBW?=
 =?us-ascii?q?pexDYndz60vpX1hQB1iGWYLHxrtnrWZdlwxQvD5NzbXfNQ3iAJRC5ihTnVB1i8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSbIowz9YoXx16S6LPhofk9nBFLn78p6G4d+kpY/hZ0K2HgagImV8mQDkWvp?=
 =?us-ascii?q?Ldpb3qf+ZmIXRTEX297V/BTl2Ep7I3KMxoL5VW+SztFvZtakeWMWxjwy79pRB6?=
 =?us-ascii?q?iK9rxEkjB4ol65rQLXfPh8kS0Ryfoo6H4Gne4JvBAhwTmaArAXBUNYJzDjlwyU?=
 =?us-ascii?q?79Ciq6VafHqvcb+11EZknNGuFreCohxHWHbie5cvBitw7sR5MFLR33z/8IDkeN?=
 =?us-ascii?q?/Mbd0Nsh2YiQvPj+9QKJgpjPoFmTJnOX7hvX0i0+M0lgZh3Za+vIiaMWlt+L+5?=
 =?us-ascii?q?DwVcNj30YcMT5z7sgbxfnsaQw4CgAJFhFi8XU5vvSPKiCCgSuuj/NwaSDD08rW?=
 =?us-ascii?q?+WGbjFEg+a9khmtGjDE4yxO3GUOXkZzshiRB+HK0xEmw0UWDQ6npgkFgGl3sDh?=
 =?us-ascii?q?cUF55iwP6V78sBdD1uVoNxznWGfFuAiocis0SISYLBdO7gBC4FrVMdWD7u1pGS?=
 =?us-ascii?q?FU5IahrAuLKmyUfAlICWAJWkqZB1HsJLWu5N/A8/SGCeq6NffBfbKOqelGXfeS?=
 =?us-ascii?q?2Z2vypdm/yqLNsiXPnltEfw72klAXXB4AcjZmC8PSysYly3Tdc6buQy89zZzrs?=
 =?us-ascii?q?C+9vTrRQ3u6ZGOC7tULdVg5RS2jb2fOO6XgSZzMSxY2Y8UxX/U1Lgf20YfhDtz?=
 =?us-ascii?q?dza2C7QPqy7MQLjUmq9WFBMbbyJzNM1V76MzxAVNOMjbis/r2b58lPI6F1BFVV?=
 =?us-ascii?q?n5kMGzecMKO329NE/ABEuTKLSGJDjLz9vrbq+mVbJQjPtbtxurtDafEk/jOCmD?=
 =?us-ascii?q?ljbzWxCuN+FMkD+UPBhEtI6hdRZtDHDpTMj6ZR2jLN93kTo2zKU0h3zQM24cND?=
 =?us-ascii?q?l8c0VVobyR7SNXmPN/G2Na43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6XIMePsgvCrUs8Umn1a8jOCLxiEvBAZJsChCgI6QlUFjP7jJs5dHRHDI9Q4M6m?=
 =?us-ascii?q?PWDA4F8YhLENrq7opX0NnUkKvtYA9P79HT44NIDdD8M9+cPTwtPEy6S3bvEAIZ?=
 =?us-ascii?q?QGvzZinkjEtHnaTXryXNow=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAAcgx9ch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgVqBD4ECJ4N+iBmLeYIhl0+BdioDEAGBS4VlIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCCkjDII6KQGCbgIgBAsBRgYJAhwCBgIFEw4CAgMMBTUUEwWCU?=
 =?us-ascii?q?ksBggEEAaV9fDOKHYELizQXgUA/gRGHcwEBgyYxgiYCiU0xhWWGRYsjCYEWhXy?=
 =?us-ascii?q?KSySBYIUhgwaHXgGKX5EQgg4zGggcFIMnCYIeF4hehUA/MoEFAQGLCYI+AQE?=
X-IPAS-Result: =?us-ascii?q?A0AOAAAcgx9ch0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgVq?=
 =?us-ascii?q?BD4ECJ4N+iBmLeYIhl0+BdioDEAGBS4VlIjQJDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?CkjDII6KQGCbgIgBAsBRgYJAhwCBgIFEw4CAgMMBTUUEwWCUksBggEEAaV9fDO?=
 =?us-ascii?q?KHYELizQXgUA/gRGHcwEBgyYxgiYCiU0xhWWGRYsjCYEWhXyKSySBYIUhgwaHX?=
 =?us-ascii?q?gGKX5EQgg4zGggcFIMnCYIeF4hehUA/MoEFAQGLCYI+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,386,1539673200"; 
   d="scan'208";a="58631466"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Dec 2018 04:49:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728335AbeLWMtK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sun, 23 Dec 2018 07:49:10 -0500
Received: from mx2.suse.de ([195.135.220.15]:57114 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725868AbeLWMtJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 23 Dec 2018 07:49:09 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id AFE78ACFA;
        Sun, 23 Dec 2018 12:49:06 +0000 (UTC)
Date: Sun, 23 Dec 2018 13:48:59 +0100
From: Borislav Petkov <bp@suse.de>
To: Linus Torvalds <torvalds@linux-foundation.org>
Cc: x86-ml <x86@kernel.org>, lkml <linux-kernel@vger.kernel.org>
Subject: [GIT PULL] x86/cache updates for 4.21
Message-ID: <20181223124859.GA26860@zn.tnic>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Linus,

please pull the latest x86-cache-for-linus tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-cache-for-linus

This update contains:

 - The generalization of the RDT code to accommodate the addition of AMD's
   very similar implementation of the cache monitoring feature.

   This entails a subsystem move into a separate and generic
   arch/x86/kernel/cpu/resctrl/ directory along with adding
   vendor-specific initialization and feature detection helpers.

   Ontop of that is the unification of user-visible strings, both in the
   resctrl filesystem error handling and Kconfig.

   Provided by Babu Moger and Sherry Hurwitz.

 - Code simplifications and error handling improvements by Reinette
   Chatre.

And just because we're not having enough fun, this pull request
conflicts with the fs context changes in the vfs tree. Find the merge
conflict resolution (git show -M) at the end of this mail. For reference,
the merge resolution is also available at:

  git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp.git vfs-x86-cache

Thanks,
Boris.

------------------>

The following changes since commit 9ff01193a20d391e8dbce4403dd5ef87c7eaaca6:

  Linux 4.20-rc3 (2018-11-18 13:33:44 -0800)

are available in the Git repository at:

  git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-cache-for-linus

for you to fetch changes up to 52eb74339a6233c69f4e3794b69ea7c98eeeae1b:

  x86/resctrl: Fix rdt_find_domain() return value and checks (2018-12-11 22:09:28 +0100)

----------------------------------------------------------------
Babu Moger (13):
      x86/resctrl: Rename and move rdt files to a separate directory
      x86/resctrl: Rename the RDT functions and definitions
      x86/resctrl: Re-arrange the RDT init code
      x86/resctrl: Move all the macros to resctrl/internal.h
      x86/resctrl: Initialize the vendor-specific resource functions
      x86/resctrl: Bring cbm_validate() into the resource structure
      x86/resctrl: Add vendor check for the MBA software controller
      x86/resctrl: Rename the config option INTEL_RDT to RESCTRL
      x86/resctrl: Fixup the user-visible strings
      x86/resctrl: Introduce AMD QOS feature
      Documentation: Rename and update intel_rdt_ui.txt to resctrl_ui.txt
      MAINTAINERS: Update resctrl filename patterns
      x86/resctrl: Remove unnecessary check for cbm_validate()

Reinette Chatre (2):
      x86/resctrl: Use rdt_last_cmd_puts() where possible
      x86/resctrl: Fix rdt_find_domain() return value and checks

Sherry Hurwitz (1):
      x86/resctrl: Add AMD's X86_FEATURE_MBA to the scattered CPUID features

 Documentation/x86/{intel_rdt_ui.txt => resctrl_ui.txt}                             |   9 ++-
 MAINTAINERS                                                                        |   6 +-
 arch/x86/Kconfig                                                                   |  22 ++++---
 arch/x86/include/asm/{intel_rdt_sched.h => resctrl_sched.h}                        |  28 ++++-----
 arch/x86/kernel/cpu/Makefile                                                       |   5 +-
 arch/x86/kernel/cpu/resctrl/Makefile                                               |   4 ++
 arch/x86/kernel/cpu/{intel_rdt.c => resctrl/core.c}                                | 186 +++++++++++++++++++++++++++++++++++++++++++++++-------------
 arch/x86/kernel/cpu/{intel_rdt_ctrlmondata.c => resctrl/ctrlmondata.c}             | 107 ++++++++++++++++++++++++++++------
 arch/x86/kernel/cpu/{intel_rdt.h => resctrl/internal.h}                            |  55 +++++++++++-------
 arch/x86/kernel/cpu/{intel_rdt_monitor.c => resctrl/monitor.c}                     |  16 +++---
 arch/x86/kernel/cpu/{intel_rdt_pseudo_lock.c => resctrl/pseudo_lock.c}             |  40 ++++++-------
 arch/x86/kernel/cpu/{intel_rdt_pseudo_lock_event.h => resctrl/pseudo_lock_event.h} |   2 +-
 arch/x86/kernel/cpu/{intel_rdt_rdtgroup.c => resctrl/rdtgroup.c}                   |  61 ++++++++++----------
 arch/x86/kernel/cpu/scattered.c                                                    |   7 ++-
 arch/x86/kernel/process_32.c                                                       |   4 +-
 arch/x86/kernel/process_64.c                                                       |   4 +-
 include/linux/sched.h                                                              |   2 +-
 17 files changed, 385 insertions(+), 173 deletions(-)
 rename Documentation/x86/{intel_rdt_ui.txt => resctrl_ui.txt} (99%)
 rename arch/x86/include/asm/{intel_rdt_sched.h => resctrl_sched.h} (77%)
 create mode 100644 arch/x86/kernel/cpu/resctrl/Makefile
 rename arch/x86/kernel/cpu/{intel_rdt.c => resctrl/core.c} (83%)
 rename arch/x86/kernel/cpu/{intel_rdt_ctrlmondata.c => resctrl/ctrlmondata.c} (81%)
 rename arch/x86/kernel/cpu/{intel_rdt.h => resctrl/internal.h} (91%)
 rename arch/x86/kernel/cpu/{intel_rdt_monitor.c => resctrl/monitor.c} (98%)
 rename arch/x86/kernel/cpu/{intel_rdt_pseudo_lock.c => resctrl/pseudo_lock.c} (97%)
 rename arch/x86/kernel/cpu/{intel_rdt_pseudo_lock_event.h => resctrl/pseudo_lock_event.h} (95%)
 rename arch/x86/kernel/cpu/{intel_rdt_rdtgroup.c => resctrl/rdtgroup.c} (98%)

---
commit ba13cfacc0883dbe485d123f5087963701572098
Merge: 0a6185274b63 52eb74339a62
Author: Borislav Petkov <bp@suse.de>
Date:   Thu Dec 20 19:59:36 2018 +0100

    Merge branch 'x86-cache-for-linus' into vfs-x86-cache
    
     Conflicts:
            arch/x86/Kconfig
            arch/x86/kernel/cpu/resctrl/rdtgroup.c
    
    Signed-off-by: Borislav Petkov <bp@suse.de>

diff --cc arch/x86/Kconfig
index 642353a65649,2d0577e805d2..62adf94c8dfa
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -443,15 -444,27 +443,23 @@@ config RETPOLIN
  	  branches. Requires a compiler with -mindirect-branch=thunk-extern
  	  support for full protection. The kernel may run slower.
  
- config INTEL_RDT
- 	bool "Intel Resource Director Technology support"
- 	depends on X86 && CPU_SUP_INTEL
 -	  Without compiler support, at least indirect branches in assembler
 -	  code are eliminated. Since this includes the syscall entry path,
 -	  it is not entirely pointless.
 -
+ config RESCTRL
+ 	bool "Resource Control support"
+ 	depends on X86 && (CPU_SUP_INTEL || CPU_SUP_AMD)
  	select KERNFS
  	help
- 	  Select to enable resource allocation and monitoring which are
- 	  sub-features of Intel Resource Director Technology(RDT). More
- 	  information about RDT can be found in the Intel x86
- 	  Architecture Software Developer Manual.
+ 	  Enable Resource Control support.
+ 
+ 	  Provide support for the allocation and monitoring of system resources
+ 	  usage by the CPU.
+ 
+ 	  Intel calls this Intel Resource Director Technology
+ 	  (Intel(R) RDT). More information about RDT can be found in the
+ 	  Intel x86 Architecture Software Developer Manual.
+ 
+ 	  AMD calls this AMD Platform Quality of Service (AMD QoS).
+ 	  More information about AMD QoS can be found in the AMD64 Technology
+ 	  Platform Quality of Service Extensions manual.
  
  	  Say N if unsure.
  
diff --cc arch/x86/kernel/cpu/resctrl/internal.h
index d5ec5643e7ab,822b7db634ee..e49b77283924
--- a/arch/x86/kernel/cpu/resctrl/internal.h
+++ b/arch/x86/kernel/cpu/resctrl/internal.h
@@@ -4,18 -4,21 +4,22 @@@
  
  #include <linux/sched.h>
  #include <linux/kernfs.h>
 +#include <linux/fs_context.h>
  #include <linux/jump_label.h>
  
- #define IA32_L3_QOS_CFG		0xc81
- #define IA32_L2_QOS_CFG		0xc82
- #define IA32_L3_CBM_BASE	0xc90
- #define IA32_L2_CBM_BASE	0xd10
- #define IA32_MBA_THRTL_BASE	0xd50
+ #define MSR_IA32_L3_QOS_CFG		0xc81
+ #define MSR_IA32_L2_QOS_CFG		0xc82
+ #define MSR_IA32_L3_CBM_BASE		0xc90
+ #define MSR_IA32_L2_CBM_BASE		0xd10
+ #define MSR_IA32_MBA_THRTL_BASE		0xd50
+ #define MSR_IA32_MBA_BW_BASE		0xc0000200
  
- #define L3_QOS_CDP_ENABLE	0x01ULL
+ #define MSR_IA32_QM_CTR			0x0c8e
+ #define MSR_IA32_QM_EVTSEL		0x0c8d
  
- #define L2_QOS_CDP_ENABLE	0x01ULL
+ #define L3_QOS_CDP_ENABLE		0x01ULL
+ 
+ #define L2_QOS_CDP_ENABLE		0x01ULL
  
  /*
   * Event IDs are used to program IA32_QM_EVTSEL before reading event
diff --cc arch/x86/kernel/cpu/resctrl/rdtgroup.c
index 37c0ccb50823,8388adf241b2..93cb6f994681
--- a/arch/x86/kernel/cpu/resctrl/rdtgroup.c
+++ b/arch/x86/kernel/cpu/resctrl/rdtgroup.c
@@@ -2032,88 -2065,8 +2032,91 @@@ out
  	rdt_last_cmd_clear();
  	mutex_unlock(&rdtgroup_mutex);
  	cpus_read_unlock();
 +	return ret;
 +}
 +
 +enum rdt_param {
 +	Opt_cdp,
 +	Opt_cdpl2,
 +	Opt_mba_mpbs,
 +	nr__rdt_params
 +};
  
 -	return dentry;
 +static const struct fs_parameter_spec rdt_param_specs[nr__rdt_params] = {
 +	[Opt_cdp]	= { fs_param_is_flag },
 +	[Opt_cdpl2]	= { fs_param_is_flag },
 +	[Opt_mba_mpbs]	= { fs_param_is_flag },
 +};
 +
 +static const char *const rdt_param_keys[nr__rdt_params] = {
 +	[Opt_cdp]	= "cdp",
 +	[Opt_cdpl2]	= "cdpl2",
 +	[Opt_mba_mpbs]	= "mba_mbps",
 +};
 +
 +static const struct fs_parameter_description rdt_fs_parameters = {
 +	.name		= "rdt",
 +	.nr_params	= nr__rdt_params,
 +	.keys		= rdt_param_keys,
 +	.specs		= rdt_param_specs,
 +	.no_source	= true,
 +};
 +
 +static int rdt_parse_param(struct fs_context *fc, struct fs_parameter *param)
 +{
 +	struct rdt_fs_context *ctx = rdt_fc2context(fc);
 +	struct fs_parse_result result;
 +	int opt;
 +
 +	opt = fs_parse(fc, &rdt_fs_parameters, param, &result);
 +	if (opt < 0)
 +		return opt;
 +
 +	switch (opt) {
 +	case Opt_cdp:
 +		ctx->enable_cdpl3 = true;
 +		return 0;
 +	case Opt_cdpl2:
 +		ctx->enable_cdpl2 = true;
 +		return 0;
 +	case Opt_mba_mpbs:
- 		ctx->enable_mba_mbps = true;
- 		return 0;
++		if (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL) {
++			ctx->enable_mba_mbps = true;
++			return 0;
++		}
++		break;
 +	}
 +
 +	return -EINVAL;
 +}
 +
 +static void rdt_fs_context_free(struct fs_context *fc)
 +{
 +	struct rdt_fs_context *ctx = rdt_fc2context(fc);
 +
 +	kernfs_free_fs_context(fc);
 +	kfree(ctx);
 +}
 +
 +static const struct fs_context_operations rdt_fs_context_ops = {
 +	.free		= rdt_fs_context_free,
 +	.parse_param	= rdt_parse_param,
 +	.get_tree	= rdt_get_tree,
 +};
 +
 +static int rdt_init_fs_context(struct fs_context *fc, struct dentry *reference)
 +{
 +	struct rdt_fs_context *ctx;
 +
 +	ctx = kzalloc(sizeof(struct rdt_fs_context), GFP_KERNEL);
 +	if (!ctx)
 +		return -ENOMEM;
 +
 +	ctx->kfc.root = rdt_root;
 +	ctx->kfc.magic = RDTGROUP_SUPER_MAGIC;
 +	fc->fs_private = &ctx->kfc;
 +	fc->ops = &rdt_fs_context_ops;
 +	return 0;
  }
  
  static int reset_all_ctrls(struct rdt_resource *r)
diff --cc arch/x86/kernel/process_32.c
index d3e593eb189f,dc4d92764d1a..9d08f0510620
--- a/arch/x86/kernel/process_32.c
+++ b/arch/x86/kernel/process_32.c
@@@ -56,11 -56,9 +56,11 @@@
  #include <asm/debugreg.h>
  #include <asm/switch_to.h>
  #include <asm/vm86.h>
- #include <asm/intel_rdt_sched.h>
+ #include <asm/resctrl_sched.h>
  #include <asm/proto.h>
  
 +#include "process.h"
 +
  void __show_regs(struct pt_regs *regs, enum show_regs_mode mode)
  {
  	unsigned long cr0 = 0L, cr2 = 0L, cr3 = 0L, cr4 = 0L;
-- 
Regards/Gruss,
    Boris.

SUSE Linux GmbH, GF: Felix Imendörffer, Jane Smithard, Graham Norton, HRB 21284 (AG Nürnberg)
