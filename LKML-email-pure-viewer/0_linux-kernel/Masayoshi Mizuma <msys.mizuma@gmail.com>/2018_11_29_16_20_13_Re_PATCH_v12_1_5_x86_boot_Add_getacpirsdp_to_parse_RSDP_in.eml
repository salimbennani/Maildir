Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:47:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E65C6580213;
	Thu, 29 Nov 2018 08:20:33 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 29 Nov 2018 08:20:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AR/fcLhPkHvYON72776Ml6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj4o8bcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJOT43/n/KhMJzgqJUrw6uqAF9zIHae4GVLPhzc7jBfd8GX2dNQtpdWjZfDo66?=
 =?us-ascii?q?coABD/ABPeFdr4TloFUBtwC+ChOsBePo0T9Ihn721rA93eQgEADGwQkgEMgTu3?=
 =?us-ascii?q?nTqdX1L6cTUfuvwKnNzDXCbu5W2TLn54XTfRAhpOuDXbN0ccbL1UYvEAbFg0yW?=
 =?us-ascii?q?pIf4PD2VzvwAv3aH4+dkT+6jlmAqpx9rrjSyxcoglpPFi4MXx1zc9Ch0wZw5Kc?=
 =?us-ascii?q?C7RUN5e9KoDpVdui+AO4doXs8vQmdlszsgxLIco560Zi0KxYwnxxHBb/yHdJCF?=
 =?us-ascii?q?4gzsVOmPOzd0nnFld6ylhxa070egzvfwVs6u0FZFtiZFk9/MuW4R1xHL9MSLVv?=
 =?us-ascii?q?9w8l281TuByQzf8PxILEMomabBKpMswKY8lp8JvkTCGi/2ll/2jKiTdkg8/uio?=
 =?us-ascii?q?6uLnYqjpp5OFNI97lBv+MqIwlcy7GOg4NQYPX26F9uSmz7Dj40L5T6tQjvEska?=
 =?us-ascii?q?nWroraJcIFqa69GQNV1Zwj6xmnAze8zNsYhWUHLE5CeB+fi4jpOlLOL+7iAfaw?=
 =?us-ascii?q?nlShizNrx/HAPr38DZTBNHnDkLH9fblj705Q0hY8zdda55hMELEOPOrzWlPttN?=
 =?us-ascii?q?zfFhI5Mxa7w+f7CNpn0YMSQ2KPArKDP6PUvl+F/eYvI+iKZI8ItzfxMfkl5/jy?=
 =?us-ascii?q?jXAnnV8RZ7Wm3ZwSaHqgBPRpP12ZYWbwgtcGCWoKvA0+Q/LwhF2BVj5TYXCyX6?=
 =?us-ascii?q?Un6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfocp2OW+0QZyKKPs9hjjsE?=
 =?us-ascii?q?WKC7RI861RGuswz6x6B9LuXO+C0Vrpbj1Nlz5+3OmhA+7z10D8KB026TS2F4hH?=
 =?us-ascii?q?8HRzgz3Kpnu0xy1k+D0bRkg/xfDdFT5OlGUgEgOZ7Yzux1EdbyWg3ac9eNSVam?=
 =?us-ascii?q?RMimAD4rQtIwxd8Of1hyG9G4gh/f2CqqBqcfl6aXC5ws7qLcw3/xKt5gxHncyq?=
 =?us-ascii?q?kukUMqQstVOm2gna5w6Q7TC4nNk0Wakqaqcb8R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsDmgk9YRPj9ItjeY3i+m2GrBR?=
 =?us-ascii?q?mWwLOBd47qe2Qb3CXAB0kIiQET/XCaNQcgAietuX7RDDtrFVj3eUPj7fF+qG+n?=
 =?us-ascii?q?Tk8z1wyKc0xh17+y+h4JhfydS+kf3q4etCcmsTV0GFe939TZC9ebowphfaNcYc?=
 =?us-ascii?q?4y4Vtd1GLZsRB9MYKkL6x4mlEedAF3tVv01xprEoVAjdQqrHQywQVoLaKXzlxA?=
 =?us-ascii?q?eC2Y3JzqIbLXN3T98wqpa67V3VHezs2b+qMO6PQ+tlXisxulFksk83V7zdZV12?=
 =?us-ascii?q?GQ6YnNDAoXSZjxSFo49wBmp7HGZSkw/4PV1WB2PaaoqDPD2tIpC/EjyhavZNpf?=
 =?us-ascii?q?NKKEFAnvE8wVHcSuKeoqm0S3YRIAJuxd6Kk0P8a+ffucxKGrJPpgnC6hjWlf+o?=
 =?us-ascii?q?B9016D+DBmSuHV2JYJ2feY0RWdVzf9lVuurtr4mYRZaj4MBGq/zi7kCZVVZq1z?=
 =?us-ascii?q?e4YLFGivL9e2xtV4m57iRXpY+ES/CFMB3c+jYQCSYEDl3Q1MyUQXpmSqmCu5zz?=
 =?us-ascii?q?BukzAltLGf3DHIw+n5cBoHO2hLRHRtjFv2IIi0icwaU1asbwQziBSl4kP6zbBB?=
 =?us-ascii?q?pKtjN2nTXVtIfy/uImFgSKSwrLmCY81I6J8yqiVYSue8YVObSr77vRQa1TjuH2?=
 =?us-ascii?q?9fxDA9ajGrtY/1nx18iGKBMnlzqGDVdt13xRfa/NbcX+Je3iIaRClkjjnaHli9?=
 =?us-ascii?q?MMOu/dmOlZfDs+a+WnmlVp1Sdynr0IyBuDG65W1sHR2wgfSzlsf7Hgg91C/xz8?=
 =?us-ascii?q?NqWjnQrBbgfonr0Ly3MeF9cUlpHlP869d6FZt4kos/n5wQ3XkahpOI/XsIi2vz?=
 =?us-ascii?q?MNNb2b7gY3oJXzIE39nV4A390k15Mn2J3575VmmawsZ5Ytm6Y2AW1Tgn48FEFq?=
 =?us-ascii?q?iU96BEkjVvolWjsw3Re/d9kywZyfsv7n4anu4ItBAsziWbHrAdA01YMTbwmBSP?=
 =?us-ascii?q?6tC0tL9Xa3q3cbisyEp+msisDK2FogFZQnr4e40tHSlt7sVkK1LM0Wb+6oXleN?=
 =?us-ascii?q?nWcNISuQeYkxbGj+hJNp0xkuAGijZgOWL4pXcl0fI0jQRy3ZGmu4iKM35i87i+?=
 =?us-ascii?q?Ah5cKz35fccT+iz2gKZan8aW2Z2vH5p7FjUKWpvoUeynEDYIufv7MAaOFSU2qm?=
 =?us-ascii?q?2HFrrHAQ+f9EBmomrNE5+xMnGYOmIZwc9+RBWHJ0xfnQMUXCg8npEjDQCn38jh?=
 =?us-ascii?q?cEZ/5jAM6V/0sBpMyuR0NxbhVmfTvhunajAxSJKHNhpZ8hlC51vJMcyZ9u9yHy?=
 =?us-ascii?q?ZY/oC4rAyQMGObYR5EDXoOWkyCCFDuJb2u5djG8+iFCeuyNfrOYbOSqeNAU/eE?=
 =?us-ascii?q?346g0oxj/zyULMWAImFiD+En2kpERX15G9rWmzQMSywUliLBdc2bpA27+i14sM?=
 =?us-ascii?q?+/6unrWBn06IuLCrtSN8hv+h+sjaeCMe6QmDh2KTJC2pwQwn/IzaAV3EQOhCF2?=
 =?us-ascii?q?azmtDbMAuDbXQ6LNgaBXFQAUaiNpOMtM7qIxxQ1NOc/ditPo2b90lP81C1FZVV?=
 =?us-ascii?q?P/nsGlf9AFI2a4NFnfHkaEKKyGJSHXw8Hwea68VbxQjOBOuxKsozqUD0/jMSqF?=
 =?us-ascii?q?lzTyUxCvMOdMjDyUPRBEuYG9dAptBnbnTN78dhK7N9p3hyUswbIonnPKKXIcMT?=
 =?us-ascii?q?9kfkJNtLKQ6yZYgvR5G2NZ73tlLfOLmyCW7+TDLpYWsP1rAjl7lu5A4XQ6zadV?=
 =?us-ascii?q?4z9ARPBvhCTSqdtu8BmalbykyjNgGDRHrH4fiouNtgNsP77F3pJGH3jZ/hMR9n?=
 =?us-ascii?q?jWABMP8YhLENrq7oVZ0dHek7nzKX9n8sDJ+MJUU83POdnBNXszLB/gMDHRBQoB?=
 =?us-ascii?q?CzWsMDeM1ARmjPiO+yjN/dABoZ/2lc9WRw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACkEABch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMEV+LKYINFIkNboN5iTyBcxIBARgTAYd0IjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlAQIDAQI3BgEbHQEDAgkBAQUFG?=
 =?us-ascii?q?AklAwwUEQEFAQEbBhMFgxyBaQEDFQWacTyMHwUBF4J3BYQ8ChknDV2BNwIGEhC?=
 =?us-ascii?q?KWIEcghaBEYMSilwCiRmGDXiQBQcCkScjColOh0Qsl3sGAgkHDyGBJYINMxojg?=
 =?us-ascii?q?zyCGwwXEoM4inEiMgGBAQMBASETCwGMegEB?=
X-IPAS-Result: =?us-ascii?q?A0ADAACkEABch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMEV+LKYINFIkNboN5iTyBcxIBARgTAYd0IjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkjDII2IoJlAQIDAQI3BgEbHQEDAgkBAQUFGAklAwwUEQEFAQE?=
 =?us-ascii?q?bBhMFgxyBaQEDFQWacTyMHwUBF4J3BYQ8ChknDV2BNwIGEhCKWIEcghaBEYMSi?=
 =?us-ascii?q?lwCiRmGDXiQBQcCkScjColOh0Qsl3sGAgkHDyGBJYINMxojgzyCGwwXEoM4inE?=
 =?us-ascii?q?iMgGBAQMBASETCwGMegEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="42096141"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 08:20:32 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729194AbeK3D0O (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 22:26:14 -0500
Received: from mail-qt1-f193.google.com ([209.85.160.193]:44549 "EHLO
        mail-qt1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728136AbeK3D0O (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 22:26:14 -0500
Received: by mail-qt1-f193.google.com with SMTP id n32so2554597qte.11
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 08:20:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=fpMC4sdaHUXKu11lx7Yyzjk7QiRPbuUmO+Ua7FGL9/M=;
        b=rzjLMIpUkO0z/xe1JAixVWzfVSYG+XjbVuqOjI/mHf6h+1xSv0fdsk10jVUjcshHLr
         zFahISB6Zq2JCaSRekUNtAaKvFdAVcV6uBCXMIQq4z4Cb9Od1HDELY821aE543+oxrEC
         U8opd588hiY+vTEcxz8ERxx6mxh7oBDLz4kztWO9yETDgzE0GiFLt2hunCG+dyj+iCXE
         4oj+tIqsa3eduAy6mQmXZ13zwQrxhZycCDT9B6oxc1jxQU7e4OyGK+PwdJeCjwsETDyo
         lbxGenAarBahz0UoOIQxxCps58Ra9CDF47ts3+/8U7P1IU6wjCHsHB0Rp5kCv7JCOnYb
         CMBQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=fpMC4sdaHUXKu11lx7Yyzjk7QiRPbuUmO+Ua7FGL9/M=;
        b=DBn10X/MsztvbH0+eu4VT652zvHdzoWAnsryQAGVDEVmeEzHjR3ABtLnB0yIEPbRYR
         PLj/FR5c90POlDlnbsn5j/JTD3qwXyWpa76vK18hT4ew/HnaTy7J6ChRWIDa3Bnt8Wlq
         TjTzpdOPaYKPG9sIvy5aDKOJcNRXXHzUBSO7CsRYOX5L9KR2VG21eq82fRkYf+l12N7T
         w4rvPoHYTgzT+uch+XtgrsHx1tB2V3wnyajJZ+u9sgNpnUZ5BRgJVcysSGGqR/LSlOpO
         ZomjORgfXkF9c87NqO61HYcO3ORXVYr2sW/5pF2xU77IvFgkftbiofLJZMxQbXXClw1u
         TkuQ==
X-Gm-Message-State: AA+aEWavh39gqqDnxyfjUOIn6gbI48sYYcJHkMpiDcWR37yaZXCX+6Uo
        1HmZQoklacec3zD0ip/w6mLC57E=
X-Google-Smtp-Source: AFSGD/XJZZLeeuaZASwiAd3lKbwBHLjHmx45iFPFXaLE5ZUoKhl4amvG8cWC4rHbKQe5ILo2tZ1L5Q==
X-Received: by 2002:ac8:5344:: with SMTP id d4mr2021508qto.372.1543508419772;
        Thu, 29 Nov 2018 08:20:19 -0800 (PST)
Received: from gabell (nat-pool-bos-t.redhat.com. [66.187.233.206])
        by smtp.gmail.com with ESMTPSA id 83sm1718039qkz.73.2018.11.29.08.20.18
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 29 Nov 2018 08:20:19 -0800 (PST)
Date: Thu, 29 Nov 2018 11:20:13 -0500
From: Masayoshi Mizuma <msys.mizuma@gmail.com>
To: Chao Fan <fanc.fnst@cn.fujitsu.com>
Cc: linux-kernel@vger.kernel.org, x86@kernel.org, bp@alien8.de,
        tglx@linutronix.de, mingo@redhat.com, hpa@zytor.com,
        keescook@chromium.org, bhe@redhat.com, indou.takao@jp.fujitsu.com,
        caoj.fnst@cn.fujitsu.com
Subject: Re: [PATCH v12 1/5] x86/boot: Add get_acpi_rsdp() to parse RSDP in
 cmdline from KEXEC
Message-ID: <20181129162012.hcknuu256trdwnfc@gabell>
References: <20181129081631.11139-1-fanc.fnst@cn.fujitsu.com>
 <20181129081631.11139-2-fanc.fnst@cn.fujitsu.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181129081631.11139-2-fanc.fnst@cn.fujitsu.com>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 04:16:27PM +0800, Chao Fan wrote:
> To fix the conflict between KASLR and memory-hotremove, memory
> information in SRAT table is necessary.
> 
> ACPI SRAT (System/Static Resource Affinity Table) can show the details
> about memory ranges, including ranges of memory provided by hot-added
> memory devices. SRAT table must be introduced by RSDP pointer (Root
> System Description Pointer). So RSDP should be found firstly.
> 
> When booting form KEXEC/EFI/BIOS, the methods to find RSDP pointer
> are different. When booting from KEXEC, 'acpi_rsdp' may have been
> added to cmdline, so parse the cmdline and find the RSDP pointer.
> 
> Signed-off-by: Chao Fan <fanc.fnst@cn.fujitsu.com>
> ---
>  arch/x86/boot/compressed/acpitb.c | 33 +++++++++++++++++++++++++++++++
>  arch/x86/boot/compressed/misc.c   |  5 +++++
>  arch/x86/boot/compressed/misc.h   |  4 ++++
>  lib/kstrtox.c                     |  5 +++++
>  4 files changed, 47 insertions(+)
>  create mode 100644 arch/x86/boot/compressed/acpitb.c
> 
> diff --git a/arch/x86/boot/compressed/acpitb.c b/arch/x86/boot/compressed/acpitb.c
> new file mode 100644
> index 000000000000..614c45655cff
> --- /dev/null
> +++ b/arch/x86/boot/compressed/acpitb.c
> @@ -0,0 +1,33 @@
> +// SPDX-License-Identifier: GPL-2.0
> +#define BOOT_CTYPE_H
> +#include "misc.h"
> +#include "error.h"
> +
> +#include <linux/efi.h>
> +#include <asm/efi.h>
> +#include <linux/numa.h>
> +#include <linux/acpi.h>
> +
> +#define STATIC
> +#include <linux/decompress/mm.h>
> +
> +/* Store the immovable memory regions. */
> +struct mem_vector immovable_mem[MAX_NUMNODES*2];
> +#endif
> +
> +static acpi_physical_address get_acpi_rsdp(void)
> +{
> +#ifdef CONFIG_KEXEC
> +	unsigned long long res;
> +	int len = 0;

> +	char *val;
> +
> +	val = malloc(19);
> +	len = cmdline_find_option("acpi_rsdp", val, 19);
> +	if (len > 0) {
> +		val[len] = 0;

		val[len] = '\0';

> +		return (acpi_physical_address)kstrtoull(val, 16, &res);
> +	}

I think free() is needed. Or why don't you use stack?

	char val[19];

	len = cmdline_find_option("acpi_rsdp", val, sizeof(val));
	if (len > 0) {
		val[len] = '\0';
		return (acpi_physical_address)kstrtoull(val, 16, &res);
	}

Thanks,
Masa

> +	return 0;
> +#endif
> +}
> diff --git a/arch/x86/boot/compressed/misc.c b/arch/x86/boot/compressed/misc.c
> index 8dd1d5ccae58..e51713fe3add 100644
> --- a/arch/x86/boot/compressed/misc.c
> +++ b/arch/x86/boot/compressed/misc.c
> @@ -12,6 +12,7 @@
>   * High loaded stuff by Hans Lermen & Werner Almesberger, Feb. 1996
>   */
>  
> +#define BOOT_CTYPE_H
>  #include "misc.h"
>  #include "error.h"
>  #include "pgtable.h"
> @@ -426,3 +427,7 @@ void fortify_panic(const char *name)
>  {
>  	error("detected buffer overflow");
>  }
> +
> +#ifdef BOOT_STRING
> +#include "../../../../lib/kstrtox.c"
> +#endif
> diff --git a/arch/x86/boot/compressed/misc.h b/arch/x86/boot/compressed/misc.h
> index a1d5918765f3..809c31effa4b 100644
> --- a/arch/x86/boot/compressed/misc.h
> +++ b/arch/x86/boot/compressed/misc.h
> @@ -116,3 +116,7 @@ static inline void console_init(void)
>  void set_sev_encryption_mask(void);
>  
>  #endif
> +
> +/* acpitb.c */
> +#define BOOT_STRING
> +extern int kstrtoull(const char *s, unsigned int base, unsigned long long *res);
> diff --git a/lib/kstrtox.c b/lib/kstrtox.c
> index 1006bf70bf74..a0ac1b2257b8 100644
> --- a/lib/kstrtox.c
> +++ b/lib/kstrtox.c
> @@ -126,6 +126,9 @@ int kstrtoull(const char *s, unsigned int base, unsigned long long *res)
>  }
>  EXPORT_SYMBOL(kstrtoull);
>  
> +/* Make compressed period code be able to use kstrtoull(). */
> +#ifndef BOOT_STRING
> +
>  /**
>   * kstrtoll - convert a string to a long long
>   * @s: The start of the string. The string must be null-terminated, and may also
> @@ -408,3 +411,5 @@ kstrto_from_user(kstrtou16_from_user,	kstrtou16,	u16);
>  kstrto_from_user(kstrtos16_from_user,	kstrtos16,	s16);
>  kstrto_from_user(kstrtou8_from_user,	kstrtou8,	u8);
>  kstrto_from_user(kstrtos8_from_user,	kstrtos8,	s8);
> +
> +#endif /* BOOT_STRING */
> -- 
> 2.19.1
> 
> 
> 
