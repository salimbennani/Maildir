Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:47:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CF763580213;
	Thu, 29 Nov 2018 07:51:53 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:51:54 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A8xIDZhYhkHs+S63sWd9pxUb/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci8ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocX/q6zK/JzTrda/NdxDfy55LMchAiv/6MR697fM3MxkY1EQPFj0uf?=
 =?us-ascii?q?qYjrPjyPzekCr2mb7/F8WuKokWIotwZxoj22y8oql4LHhZoVx0ja+SllxIs5P8?=
 =?us-ascii?q?C0RUBlbdK+DZddtD2WO5F3T84gW21kpSQ3x7MctZO1fiUG0pAqyhDFZ/CafIWF?=
 =?us-ascii?q?4hTuX/uLLzhinnJqYre/ig6y8Ue+zu38UdG50EhFriVbiNnArHMN2ALJ6siBVP?=
 =?us-ascii?q?R9+l2t2TGV1wDc8u1EIEY0mrTHK5M53LI8ip4evV7eEiL4hkn6lrKae0Y49uSy?=
 =?us-ascii?q?6unqYK3qppqGOI91jgH+PL4umsu6AekgNggOXm6b+fmz1bH6/k32Xq9Kjvsona?=
 =?us-ascii?q?ndqZzaIsoapqinDA9PyYsj9Rm/ACm80NgCnnkIMkhFeBSZgIjtIV3OJ+r4Dfin?=
 =?us-ascii?q?j1S2jDhr3+zGPqHmApjVKnjDkbThcqhn509T1Qo+1tRf55NSCrEcL/P/QE7xtN?=
 =?us-ascii?q?rEDhAnNwy42froCNJ41okGQ2KAHreZML/OsV+P/u8vI/ODZI4JuDnnLPgp/f7u?=
 =?us-ascii?q?jWIjll8bcqmkxp8XaHG+HvR7LESVe3vsgtEdEWgUugoyVvDliFqHUTRLfXa9Q7?=
 =?us-ascii?q?o85i0nCIKhFYrDRIetj6Kb0Ce4GZ1WYGZGCleXHHfsdoWEXeoMaS2ILs9glDwE?=
 =?us-ascii?q?SaauS4s72R6ysw/6zqJtLvDI9S0AqZLjyN916vXJmhEp9Tx0CMed33uXT25unG?=
 =?us-ascii?q?MFXDs23KF5oUxgxVaPy6l4g/pEFdNN4/NFSBs1NZnZz+ZiEdD9RhrBfsuVSFah?=
 =?us-ascii?q?WtimAis+TtQrz98KYkZyAdOijh/Y0iquAr8VkaGLBZMu/qLd2XjxO9hyy3Lc2K?=
 =?us-ascii?q?Y9iFkmR9NFNXe6ia5n6wjTG4nJnl2EmKmwa6QTwjTB9GeZwmqIp0FXTghwXaLB?=
 =?us-ascii?q?XXAcY0vWqc/05kfDT7+oFLQmPRFNyc+EKqtWdNLpiU9KS+vkONTbe2ixgXu/BQ?=
 =?us-ascii?q?6UxrOQa4rnY3gS0z/DCEcaiQwT/WyJNQ4lBii/pWLTFzhuFVPpY0Px/uhysnK7?=
 =?us-ascii?q?Tkkozw6Ua01tzaa6+hkQhfaEUfMcwqoEuDs9qzVzBFu9w9PWC9+Hpwp9fKVdYc?=
 =?us-ascii?q?kx4Etd2WLerQx9Op2gL6ZthlMFdwR3vkXu1wh4C4lakMgqqm8qwxR2Ka6CzFxB?=
 =?us-ascii?q?cDaY14jqOrLLMmny4Ayva6nO117E1NaZ5KgO5+o4qln5pw6pC1ct/G9h09lW1H?=
 =?us-ascii?q?uc+I7HDA4TUZL3T0Y2+AJ2p7DcYikh+YzU0WdgPrWzsj/Hw9gpHvcqyg68f9dD?=
 =?us-ascii?q?N6OJDA/zE9AAC8eyMuArmlipYQgCPOBd76M0O8Kmd/2b2K+kJupgnTSmjXhZ74?=
 =?us-ascii?q?B5yE6D6y18SuvQ1ZYf3/6YxheHVyv7jFq5qMD3mJxLaisIHmWizijoHohRabNo?=
 =?us-ascii?q?fYYKEGuhP9e4xtFjiJHzQX5Y81ijCkgC2M+ofxqSclP80RdR1UQRvXyohy+4wy?=
 =?us-ascii?q?ZonDEuq6qVxDbOzPj6dBobJm5LQ3FvjFftIYSuj9EWRlOobxUvlBa+4Ub6xq5b?=
 =?us-ascii?q?pLlwLmXJQEdIeTT2IH9mUqeqqrWCZMtP4osysSpLSOS8fUyaSrnlrhsYySzjBW?=
 =?us-ascii?q?hexDM8dz2woZX2hR96iGGcLHZ1snXZf9p9xRPe5NzaWP5Q0SAKRCh+iTnLGFe8?=
 =?us-ascii?q?O8Ol8smTl5fGquq+TX6uVoVPcSn3yoONrCu66ndtARGlnfCzm9vnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Xkdnmfy?=
 =?us-ascii?q?K9lb2b/+Y2ALRT4E2NPV5Anl2Et+LnOG3Y75V3Odwtd/aNm+eG8ZxiU978VSAq?=
 =?us-ascii?q?eO8LNEhTd1oka/rQ/JZPh9nzQdxuE05H8Une4JoxYtwTuHAr8JA0ZYJyPsmg+M?=
 =?us-ascii?q?79C/qqVXeWmufaKx1Ep4gdCuErWCrhtAV3b+f5coBTVw4dlnMFLQzH3z7ZnpeM?=
 =?us-ascii?q?XXbdIWrBGVkg3Pj+5IKJIqjfoKhDFqOWb8vX0j1u46ggZi3ZC8vIibNWpt+Li1?=
 =?us-ascii?q?DQJfNj3wf8kT4C3ijb5CnsaK2ICiBo5uFS8MXJvsUPKkCjYSten8OgaKET08rG?=
 =?us-ascii?q?qbGLXFEQ+e7kdms2zAE5SxO36LI3kZyM1oRAOBK0xHnAAUQDI6k4Y7Fg+wwczu?=
 =?us-ascii?q?blx56ioN5lLiqRtM1+FoNwT5UmjFvwelcTM0SJmZLBpL4QBO/UbVMcqC7u1tGy?=
 =?us-ascii?q?FU5IGurAuIKmaDfQRHEXkJWlCYB1DkJrSv5d7A8/WBBuqjNfTOZ6+CqfdZV/eO?=
 =?us-ascii?q?ypKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnrWBzg5YqMC7tRMNVj4RO2gb2EN+6fmil5MytY1ogXyH/Mybgf2kMSii50?=
 =?us-ascii?q?ezmsF7QAqTDCTKbKlqBLCB4bbjt5NNFU4KIkwglNJcnbh8vv2b5llfE1EUlKVF?=
 =?us-ascii?q?z7lsGtZMwHOGW9NFLBBEaWO7WKPzzLw8frYayiTb1clvlbtxq1uTyDCU/sIiyD?=
 =?us-ascii?q?lyX1VxCoKexMkCCbPBlEtI6haBpiFWjjQ8zgahCgNN93jDs2waA7h3/QNG4cNy?=
 =?us-ascii?q?R8fF1JrrGK8SxYhfB/EXRb7nV5NemEhzqZ7+7AJ5cWq/RrBCF0l+Nc4HsiyrpV?=
 =?us-ascii?q?7DtLRPp6mCbJqt5uolemkvSAyzZ9URpOrCpLi5yPvUl4JarZ8ZxACj74+0ck62?=
 =?us-ascii?q?mKBgtCgtx/Ftrp8/RZycDKvKbyLipSttzT4M0QDtTVL8TBN2AuZ0nHAjnRWScM?=
 =?us-ascii?q?Sz+mMSngjkhenevaonGcqJk3roflsJEPUbRcElcyE6VJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtNvCLmoQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAD5CQBch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2snjBGMCIINFI10iTwUgV8SAQEYEwGBBYZ?=
 =?us-ascii?q?vIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECNwYBATcBBQkBA?=
 =?us-ascii?q?QoOBAYJJQMMLQ0OBhMFgxyCAgWlPYIfgnYBAQWHJQgUDopYgRwXgUA/gRGDEoM?=
 =?us-ascii?q?eAoEmJ4VvkCCQBQmCIY8GIwqREpgnAgQGBQIUgUaCDTMaCBsVgyeCGwwXg0qKd?=
 =?us-ascii?q?B8BMYEFAQGKbQElBIIjAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAD5CQBch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2snjBGMCIINFI10iTwUgV8SAQEYEwGBBYZvIjQJDQEDAQEBA?=
 =?us-ascii?q?QEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECNwYBATcBBQkBAQoOBAYJJQMMLQ0?=
 =?us-ascii?q?OBhMFgxyCAgWlPYIfgnYBAQWHJQgUDopYgRwXgUA/gRGDEoMeAoEmJ4VvkCCQB?=
 =?us-ascii?q?QmCIY8GIwqREpgnAgQGBQIUgUaCDTMaCBsVgyeCGwwXg0qKdB8BMYEFAQGKbQE?=
 =?us-ascii?q?lBIIjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="140103679"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 07:51:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728888AbeK3C5e (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 21:57:34 -0500
Received: from alln-iport-2.cisco.com ([173.37.142.89]:22104 "EHLO
        alln-iport-2.cisco.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728363AbeK3C5e (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 21:57:34 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=cisco.com; i=@cisco.com; l=4356; q=dns/txt; s=iport;
  t=1543506706; x=1544716306;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=vAMrVSwzcUrmPJs9DuYxs7QfzGe7ZFRZWgDYHy9K1dg=;
  b=WDNh+E884CAR0Q6sgEuk2gts/vA4gBf8wjSsZZq/eE1H6QKRNhLUvcx2
   iEEfDwbrPGQ2yRuryqJ1bd6n+oIEFdUeDSVfSktZnieSCyCSwvLDxxZzE
   2YZeWOgy6UaSs84f9jp0nFSu/vOOeNdsSSmHhOOP404Z6Tq9+tfuT16no
   k=;
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAABcCgBc/5FdJa1kGQEBAQEBAQE?=
 =?us-ascii?q?BAQEBAQcBAQEBAQGBUQQBAQEBAQsBggOBNTMnjBGMCIINjgiJPBSBZgsBAYR?=
 =?us-ascii?q?sAoMyIjQJDQEDAQECAQECbSiFPQEFOj8QCw4EBgklDy0NDgYThSOnYooqFA6?=
 =?us-ascii?q?LdBeBQD+BEYMShEYnhW8CkB6QBQmCIY8GIwqREpgnAgQGBQIUgUY4gVUzGgg?=
 =?us-ascii?q?bFYMngicXjj4eAzCLdAElBIIjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539648000"; 
   d="scan'208";a="206155271"
Received: from rcdn-core-9.cisco.com ([173.37.93.145])
  by alln-iport-2.cisco.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 15:51:45 +0000
Received: from zorba ([10.24.38.189])
        by rcdn-core-9.cisco.com (8.15.2/8.15.2) with ESMTPS id wATFpgRu029154
        (version=TLSv1.2 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO);
        Thu, 29 Nov 2018 15:51:44 GMT
Date: Thu, 29 Nov 2018 07:51:42 -0800
From: Daniel Walker <danielwa@cisco.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: Daniel Walker <dwalker@fifo99.com>, xe-linux-external@cisco.com,
        Maksym Kokhan <maksym.kokhan@globallogic.com>,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH 1/3] add generic builtin command line
Message-ID: <20181129155142.deu7oatpxfxizrw6@zorba>
References: <20181109173433.1271-1-danielwa@cisco.com>
 <20181128211212.060295fb9055e403d0060e7a@linux-foundation.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181128211212.060295fb9055e403d0060e7a@linux-foundation.org>
User-Agent: NeoMutt/20170609 (1.8.3)
X-Auto-Response-Suppress: DR, OOF, AutoReply
X-Outbound-SMTP-Client: 10.24.38.189, [10.24.38.189]
X-Outbound-Node: rcdn-core-9.cisco.com
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Nov 28, 2018 at 09:12:12PM -0800, Andrew Morton wrote:
> On Fri,  9 Nov 2018 09:34:31 -0800 Daniel Walker <danielwa@cisco.com> wrote:
> 
> > This code allows architectures to use a generic builtin command line.
> > The state of the builtin command line options across architecture is
> > diverse. On x86 and mips they have pretty much the same code and the
> > code prepends the builtin command line onto the boot loader provided
> > one. On powerpc there is only a builtin override and nothing else.
> > 
> > The code in this commit unifies the mips and x86 code into a generic
> > header file under the CONFIG_GENERIC_CMDLINE option. When this
> > option is enabled the architecture can call the cmdline_add_builtin()
> > to add the builtin command line.
> 
> I'm not sure what's happened to this and I haven't seen the other two
> patches but...

It's been sitting in -next since the last merge window. 

> 
> > [maksym.kokhan@globallogic.com: fix cmdline_add_builtin() macro]
> > Cc: Daniel Walker <dwalker@fifo99.com>
> > Cc: Daniel Walker <danielwa@cisco.com>
> > Cc: xe-linux-external@cisco.com
> > Signed-off-by: Daniel Walker <danielwa@cisco.com>
> > Signed-off-by: Maksym Kokhan <maksym.kokhan@globallogic.com>
> 
> Two SOB's is nice, but some reviews and acks would be nicer.
 
Would love to add some, but no one is reviewing it.. 

> > --- /dev/null
> > +++ b/include/linux/cmdline.h
> > @@ -0,0 +1,79 @@
> > +/* SPDX-License-Identifier: GPL-2.0 */
> > +#ifndef _LINUX_CMDLINE_H
> > +#define _LINUX_CMDLINE_H
> > +
> > +/*
> > + *
> > + * Copyright (C) 2015. Cisco Systems, Inc.
> > + *
> > + * Generic Append/Prepend cmdline support.
> > + */
> > +
> > +#if defined(CONFIG_GENERIC_CMDLINE) && defined(CONFIG_CMDLINE_BOOL)
> > +
> > +#ifndef CONFIG_CMDLINE_OVERRIDE
> > +/*
> > + * This function will append or prepend a builtin command line to the command
> > + * line provided by the bootloader. Kconfig options can be used to alter
> > + * the behavior of this builtin command line.
> > + * @dest: The destination of the final appended/prepended string
> > + * @src: The starting string or NULL if there isn't one.
> > + * @tmp: temporary space used for prepending
> > + * @length: the maximum length of the strings above.
> > + */
> > +static inline void
> > +_cmdline_add_builtin(char *dest, char *src, char *tmp, unsigned long length)
> > +{
> > +	if (src != dest && src != NULL) {
> > +		strlcpy(dest, " ", length);
> > +		strlcat(dest, src, length);
> > +	}
> > +
> > +	strlcat(dest, " ", length);
> > +
> > +	if (sizeof(CONFIG_CMDLINE_APPEND) > 1)
> > +		strlcat(dest, CONFIG_CMDLINE_APPEND, length);
> > +
> > +	/*
> > +	 * You need to convert you old style CONFIG_CMDLINE to use
> 
> "your"
> 
> > +	 * the prepend, or append defines. Some architectures use one
> 
> "one and"
> 
> > +	 * some use the other. You need to figure out which ones is
> 
> "one"

Can fix these..


> 
> > +	 * right for your situation. I would recommend prepending
> > +	 * because it's the safest (i.e. CONFIG_CMDLINE_PREPEND).
> > +	 */
> > +	BUILD_BUG_ON(sizeof(CONFIG_CMDLINE) != 1);
> > +
> > +	if (sizeof(CONFIG_CMDLINE_PREPEND) > 1) {
> > +		strlcpy(tmp, CONFIG_CMDLINE_PREPEND, length);
> > +		strlcat(tmp, " ", length);
> > +		strlcat(tmp, dest, length);
> > +		strlcpy(dest, tmp, length);
> > +	}
> > +}
> 
> And... holy cow.  Does this monster really need to be inlined?
> 
> > +#define cmdline_add_builtin(dest, src, length)				    \
> > +{									    \
> > +	if (sizeof(CONFIG_CMDLINE_PREPEND) > 1) {			    \
> > +		static char cmdline_tmp_space[length] __initdata;	    \
> > +		_cmdline_add_builtin(dest, src, cmdline_tmp_space, length); \
> > +	} else {							    \
> > +		_cmdline_add_builtin(dest, src, NULL, length);		    \
> > +	}								    \
> > +}
> 
> And this will generate __initdata storage at each invocation site.  Can
> it be redone in real, non-inlined C?


It's intended to be used once, maybe twice, per architecture. Powerpc uses it
twice I think. There's no reason for it to be used more than twice, and it replaces
code which is similar to the code above. I can' imagine a situation where people
go nuts and start calling this everywhere.

So it seemed easier to just inline it.

Daniel
