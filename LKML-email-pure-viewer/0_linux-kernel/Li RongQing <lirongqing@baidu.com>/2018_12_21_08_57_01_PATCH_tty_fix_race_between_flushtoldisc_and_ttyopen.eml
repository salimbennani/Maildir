Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:47:53 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 109CF5805F0;
	Fri, 21 Dec 2018 01:04:28 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 01:04:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Al/EC+h/vx0fx5P9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+gVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRHoli?=
 =?us-ascii?q?kJKjA3/mLQhMxrlKJWogmsqwBjz4POfI2YLuZycr/bcNgHRWRBRMFRVylZD426?=
 =?us-ascii?q?bosEEvYPPeFer4nyvFUOrB2+BQaxD+7ozj9Ih2X23ao80+QuCAHG3QogH90VvX?=
 =?us-ascii?q?vPttr1NbodUf2vwKbUyjXDaupb1DHg44bLahAsue+AUa50fMbL1EUiGR3Jgk+N?=
 =?us-ascii?q?pYHmIz+ZzOUAvmqD4+dhSO6jkXMrpg9xrzS128shi4rEipgIxl3K8Sh0xps+K8?=
 =?us-ascii?q?eiR05he9GkFYNdtyGEOItyRcMvW39ouCkkxb0co5K7fzYFyI4hxxHBb/yLaY+I?=
 =?us-ascii?q?4gjsVOqJIDd4gmxqeK6nihqs7UStzvfwWtS63VpUtCZJj9rBumwX2xHS6MWLUv?=
 =?us-ascii?q?598V2g2TaL2QDT8OZEIUUsmKrfKp4hxKMwl5UKvUTAACD2gkP2g7GSdkk9/eip?=
 =?us-ascii?q?5eLnbav8ppKHKY90hR/xMr40lsy8H+s4KA4OUHaf+eim073j50L5TK1QjvIqiq?=
 =?us-ascii?q?nZrIzaJcMDq669Ag9V0Zgs5wywDje7y9kYmXgHLFRYeBOIlYTpOlfOIOzmAve7?=
 =?us-ascii?q?mVijjDBrx/XeNL37HprNNmTDkKvmfbtl605T0gszzcxF6JJTEL0BIO/zVVX3tN?=
 =?us-ascii?q?zXFRI5Nw20w+D6CNRyzI8eWGSPArOHP6PWq1OH+uUvI+yUbo8PpDn9M+Ql5+Lp?=
 =?us-ascii?q?jXIhg1AdZqmp3ZwUaHyiBPRpOUeZbGHogtcAF2cKowU/QPbriF2ETT5ceXKyU7?=
 =?us-ascii?q?gg6TE8DYKsFZ3DSZy1gLydwCe7GYVbZmNcBVCKC3voc4SEVO0KaCKdOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVUm57hH?=
 =?us-ascii?q?0ISCEs0KB/u0N9zEyD3rZ+g/BfEdxT5PZJUgMhOJ7Yzux6Dc3yWw3bcteITlam?=
 =?us-ascii?q?XsupATUrQt0txN8OZl53G8++gRDbwyqqH7gVmqSWC5Mu7KLTwWL9J8ZnxHbAz6?=
 =?us-ascii?q?kukV8mT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbrcj45kPHSL+uFbQnMwtbxc6eMKdKbcfpjVFHRPflN9TTeGaxm2a2BR?=
 =?us-ascii?q?aVybKAdovqe2MB3CrDDEgIiRwc/XGDNQImHCeuv3reDCByFVLoe07j6+1+p220?=
 =?us-ascii?q?T0AqzwCGdVZu16eo9REPg/ycSPQT3qwftSclqjV0Gku93t3MB9qBoQphYLtTYd?=
 =?us-ascii?q?cn7Fhb0mLZshR3Poa8IKB6ml4ebwN3slvu1hVqEIlPjdImrXIqzAVoL6KY30hM?=
 =?us-ascii?q?dzeZ3ZD2J73WJXP+/BGpa67KxF7e1Mya9bsI6PQ9s1/jph2mFlI+83V71NlYy2?=
 =?us-ascii?q?Gc5pTWAwUIS5L+T0E3+wJ8p77EeCk95prY2mF2PqmwrzDNxcgpBOwjyhu7e9df?=
 =?us-ascii?q?MaWEFBL9EsEABsiuLvAqlEatbh4eIO9S86s0Ndu8d/SawK6rIPpgnDW+gGVH4Y?=
 =?us-ascii?q?BxyEKN+zBnSu7V2ZYI2PWY3gqBVzfhg1atqMH3mYZYZT4MGmqz0zTrBIlUZqdq?=
 =?us-ascii?q?Z4YEFX+uI9GrxtV5n5PtWWRX9ESgB1MF38+lYwGSYEb+3Q1T1EQXp2KomS2jwj?=
 =?us-ascii?q?xwkjEpqLef3SPUz+TjchoHJnBERG14gVjwJoi0isgQXFK0YAgxiBul+UH6yrBb?=
 =?us-ascii?q?patlKGnfW0VIfynwL2x5Vquwt7yCY9NA6Z8ysCVXVvi8bk6eSrLnvxQa1CbjFX?=
 =?us-ascii?q?NExD8nbzGqpon5nxtihWKeNnlzrWDVecFtxRjF4tzcSuVc3j4HRCl+lDnWCUKw?=
 =?us-ascii?q?P9iv/dWIiZjDtvqyWH6mVp1WaSPr15+PtDOn5W12Bh2yh/WzmtzkEQcgyyP62c?=
 =?us-ascii?q?dlVT7UrBnieInkzLq1MfhofkRzAF/86sx6Gpxxk4cqhZEQ32QaiYuR/XYdjWjz?=
 =?us-ascii?q?NtBb07rkbHURXT4L38LV4A/91U1/KXKJwpj1V3SHzctnetm6eXgW2iMm4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDT3mBuS?=
 =?us-ascii?q?6NC+qLhXaHyrcbitz0d+mdGhDLefogBTQnr5e5EiHTNu4cV7Kl7DzHrz6oT8ct?=
 =?us-ascii?q?nKcd0TrgGUkwvHj+VNKpI+jP8KijR8OW7noX0p0e07jQFt3ZGnuoiIMX5t8bm9?=
 =?us-ascii?q?Ah5ZMD31eswS9ivsjaZYgsaZwYSvEo99FTUMWZviVeioHy4KtfT7KwaOFyUxq3?=
 =?us-ascii?q?ecGbrCBA+f9V1pr3TVH5CwMHGXInYZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lajcqR5ieLxpW7QBC613WMcyE6eJzED?=
 =?us-ascii?q?9X/oe8rAyWMWGbYwVIDWcUWk2LHVzjP7+u5cXe/OicHOaxM/zOYbCWo+xES/iI?=
 =?us-ascii?q?3Y6v0pdh/zuULMqPI2JtD+cl1UtDR3x5H8XZli4LSywWkSLNcsGaqA29+i1xss?=
 =?us-ascii?q?Cw7vDrVBjz6ouIDrtYKc9v9AyugaefK+6Qgz50KSpZ1pMJ33PH1KIT00ISiy5w?=
 =?us-ascii?q?cTmgCrAAtS/LTKLNla5bFR8bayVvNMRW66IwxBVCOcneitntzL53kuY1C0tZVV?=
 =?us-ascii?q?zmgsyoZdYFI2e4NFPGAkaELLWHJT3RzMHxbqOxUrlQjORStx2ttjeXCU7jPjKf?=
 =?us-ascii?q?lzb3UxCjK/1DjCaePE8WhIbodhdrFHimT9/8bBC/GMF4gCdwwrAugH7Oc2kGPn?=
 =?us-ascii?q?w0cVhJp7eBxThFmfg5EGtEqjJqN+SLmCax6+jeN4YYtuZtDi1oluVcpnMgxP8d?=
 =?us-ascii?q?4yJDRPh0sCDVotNnvkuhiODJzSBoFFJHrj9NrIaKu1hyf6Tf6pREH33D+UEj92?=
 =?us-ascii?q?KVXjAL7+FiDNLWuqZfgozLlbj0Ljhb8tTb1cEVBsTJbsmANSxyYlLSBDfIAV5d?=
 =?us-ascii?q?HnaQPmbFihkFnQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B6AQBzqxxch0O0hNFcCIIXg2wnjHWLH?=
 =?us-ascii?q?YIhaJZjgXMtEwGHLiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I6IoJ2AiQ5Hwk?=
 =?us-ascii?q?CUANbEgWDHYIBAQWnPjOKNod+hEEXgUA/gRGCXYURhgQCkFuQYwmCKY89AhaRX?=
 =?us-ascii?q?gEsiSSSCYIOcIM8gicXjioyATKBBQEBjhgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0B6AQBzqxxch0O0hNFcCIIXg2wnjHWLHYIhaJZjgXMtEwG?=
 =?us-ascii?q?HLiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I6IoJ2AiQ5HwkCUANbEgWDHYIBA?=
 =?us-ascii?q?QWnPjOKNod+hEEXgUA/gRGCXYURhgQCkFuQYwmCKY89AhaRXgEsiSSSCYIOcIM?=
 =?us-ascii?q?8gicXjioyATKBBQEBjhgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,380,1539673200"; 
   d="scan'208";a="56830368"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 01:04:25 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728285AbeLUJEU (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 04:04:20 -0500
Received: from mx139-tc.baidu.com ([61.135.168.139]:17600 "EHLO
        tc-sys-mailedm06.tc.baidu.com" rhost-flags-OK-OK-OK-FAIL)
        by vger.kernel.org with ESMTP id S1725883AbeLUJES (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 04:04:18 -0500
X-Greylist: delayed 422 seconds by postgrey-1.27 at vger.kernel.org; Fri, 21 Dec 2018 04:04:16 EST
Received: from localhost (cp01-cos-dev01.cp01.baidu.com [10.92.119.46])
        by tc-sys-mailedm06.tc.baidu.com (Postfix) with ESMTP id E3ED3263C007;
        Fri, 21 Dec 2018 16:57:01 +0800 (CST)
From: Li RongQing <lirongqing@baidu.com>
To: linux-kernel@vger.kernel.org, jslaby@suse.com,
        gregkh@linuxfoundation.org, gkohli@codeaurora.org,
        alan@linux.intel.com
Subject: [PATCH] tty: fix race between flush_to_ldisc and tty_open
Date: Fri, 21 Dec 2018 16:57:01 +0800
Message-Id: <1545382621-2093-1-git-send-email-lirongqing@baidu.com>
X-Mailer: git-send-email 1.7.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

There still can be a race after the commit b027e2298bd588
("tty: fix data race between tty_init_dev and flush of buf"),
if receive_buf call comes before tty initialization completes
in n_tty_open and tty->driver_data may be NULL.

CPU0                                    CPU1
----                                    ----
                                      n_tty_open
                                      tty_init_dev
                                      tty_ldisc_unlock
                                      schedule
flush_to_ldisc
n_tty_receive_buf
uart_flush_chars
uart_start

Extending ldisc semaphore lock in tty_init_dev till driver_data
initializes completely after tty->ops->open().

Signed-off-by: Zhang Yu <zhangyu31@baidu.com>
Signed-off-by: Li RongQing <lirongqing@baidu.com>
---
we see this bug in centos 7.4, and think b027e2298bd588 can not
fix it, since driver_data is NULL;

the trace is that:

    [exception RIP: uart_start+24]
    RIP: ffffffff814908b8  RSP: ffff881c23ab7d18  RFLAGS: 00010282
    RAX: 0000000000000000  RBX: ffff88182bafc400  RCX: 0000000000000000
    RDX: 0000000000020001  RSI: 000000000000001d  RDI: ffff88182bafc400
    RBP: ffff881c23ab7d30   R8: ffff881fff956060   R9: ffffffff81b5dc20
    R10: 0000000000005a07  R11: 0000000000000001  R12: ffff88182bafc400
    R13: ffff881ff90c852d  R14: ffff88182baff400  R15: 0000000000000000
    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
#11 [ffff881c23ab7d38] uart_flush_chars at ffffffff81490ade
#12 [ffff881c23ab7d48] n_tty_receive_buf at ffffffff81478b1d
#13 [ffff881c23ab7de0] flush_to_ldisc at ffffffff8147bdc4
#14 [ffff881c23ab7e28] process_one_work at ffffffff8109e210
#15 [ffff881c23ab7e70] worker_thread at ffffffff8109e69e
#16 [ffff881c23ab7ec8] kthread at ffffffff810a62d1
#17 [ffff881c23ab7f50] ret_from_fork at ffffffff8171d677

other one

PID: 922    TASK: ffff881c7fbc1f40  CPU: 29  COMMAND: "agetty"
 #0 [ffff8818e9677a20] __schedule at ffffffff817114f2
 #1 [ffff8818e9677a78] preempt_schedule at ffffffff81711f4f
 #2 [ffff8818e9677a90] _raw_spin_unlock_irqrestore at ffffffff81713f7d
 #3 [ffff8818e9677aa8] __wake_up at ffffffff810b03c4
 #4 [ffff8818e9677ae0] n_tty_set_termios at ffffffff814770d3
 #5 [ffff8818e9677b10] n_tty_open at ffffffff814772ec` 
 
 
 drivers/staging/speakup/spk_ttyio.c |  1 +
 drivers/tty/pty.c                   |  2 ++
 drivers/tty/serdev/serdev-ttyport.c |  2 ++
 drivers/tty/tty_io.c                | 14 +++++++++++---
 4 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/speakup/spk_ttyio.c b/drivers/staging/speakup/spk_ttyio.c
index 979e3ae249c1..c31f08c98383 100644
--- a/drivers/staging/speakup/spk_ttyio.c
+++ b/drivers/staging/speakup/spk_ttyio.c
@@ -155,6 +155,7 @@ static int spk_ttyio_initialise_ldisc(struct spk_synth *synth)
 	else
 		ret = -ENODEV;
 
+	tty_ldisc_unlock(tty);
 	if (ret) {
 		tty_unlock(tty);
 		return ret;
diff --git a/drivers/tty/pty.c b/drivers/tty/pty.c
index 00099a8439d2..1b9684d4f718 100644
--- a/drivers/tty/pty.c
+++ b/drivers/tty/pty.c
@@ -873,9 +873,11 @@ static int ptmx_open(struct inode *inode, struct file *filp)
 
 	tty_debug_hangup(tty, "opening (count=%d)\n", tty->count);
 
+	tty_ldisc_unlock(tty);
 	tty_unlock(tty);
 	return 0;
 err_release:
+	tty_ldisc_unlock(tty);
 	tty_unlock(tty);
 	// This will also put-ref the fsi
 	tty_release(inode, filp);
diff --git a/drivers/tty/serdev/serdev-ttyport.c b/drivers/tty/serdev/serdev-ttyport.c
index fa1672993b4c..ce16cb303e28 100644
--- a/drivers/tty/serdev/serdev-ttyport.c
+++ b/drivers/tty/serdev/serdev-ttyport.c
@@ -123,6 +123,7 @@ static int ttyport_open(struct serdev_controller *ctrl)
 	if (ret)
 		goto err_close;
 
+	tty_ldisc_unlock(tty);
 	tty_unlock(serport->tty);
 
 	/* Bring the UART into a known 8 bits no parity hw fc state */
@@ -145,6 +146,7 @@ static int ttyport_open(struct serdev_controller *ctrl)
 err_close:
 	tty->ops->close(tty, NULL);
 err_unlock:
+	tty_ldisc_unlock(tty);
 	tty_unlock(tty);
 	tty_release_struct(tty, serport->tty_idx);
 
diff --git a/drivers/tty/tty_io.c b/drivers/tty/tty_io.c
index 687250ec8032..199f45e2e1b1 100644
--- a/drivers/tty/tty_io.c
+++ b/drivers/tty/tty_io.c
@@ -1351,7 +1351,6 @@ struct tty_struct *tty_init_dev(struct tty_driver *driver, int idx)
 	retval = tty_ldisc_setup(tty, tty->link);
 	if (retval)
 		goto err_release_tty;
-	tty_ldisc_unlock(tty);
 	/* Return the tty locked so that it cannot vanish under the caller */
 	return tty;
 
@@ -1926,7 +1925,7 @@ EXPORT_SYMBOL_GPL(tty_kopen);
  *	  - concurrent tty removal from driver table
  */
 static struct tty_struct *tty_open_by_driver(dev_t device, struct inode *inode,
-					     struct file *filp)
+					     struct file *filp, bool *unlock)
 {
 	struct tty_struct *tty;
 	struct tty_driver *driver = NULL;
@@ -1970,6 +1969,7 @@ static struct tty_struct *tty_open_by_driver(dev_t device, struct inode *inode,
 		}
 	} else { /* Returns with the tty_lock held for now */
 		tty = tty_init_dev(driver, index);
+		*unlock = true;
 		mutex_unlock(&tty_mutex);
 	}
 out:
@@ -2007,6 +2007,7 @@ static int tty_open(struct inode *inode, struct file *filp)
 	int noctty, retval;
 	dev_t device = inode->i_rdev;
 	unsigned saved_flags = filp->f_flags;
+	bool unlock = false;
 
 	nonseekable_open(inode, filp);
 
@@ -2017,7 +2018,7 @@ static int tty_open(struct inode *inode, struct file *filp)
 
 	tty = tty_open_current_tty(device, filp);
 	if (!tty)
-		tty = tty_open_by_driver(device, inode, filp);
+		tty = tty_open_by_driver(device, inode, filp, &unlock);
 
 	if (IS_ERR(tty)) {
 		tty_free_file(filp);
@@ -2042,6 +2043,10 @@ static int tty_open(struct inode *inode, struct file *filp)
 	if (retval) {
 		tty_debug_hangup(tty, "open error %d, releasing\n", retval);
 
+		if (unlock) {
+			unlock = false;
+			tty_ldisc_unlock(tty);
+		}
 		tty_unlock(tty); /* need to call tty_release without BTM */
 		tty_release(inode, filp);
 		if (retval != -ERESTARTSYS)
@@ -2067,6 +2072,9 @@ static int tty_open(struct inode *inode, struct file *filp)
 		  tty->driver->subtype == PTY_TYPE_MASTER);
 	if (!noctty)
 		tty_open_proc_set_tty(filp, tty);
+
+	if (unlock)
+		tty_ldisc_unlock(tty);
 	tty_unlock(tty);
 	return 0;
 }
-- 
2.16.2

