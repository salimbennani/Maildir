Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:40:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D0D2A580443;
	Tue,  4 Dec 2018 06:45:09 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 06:45:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXqMgKhRwyJoZAkoAqldNGHhEfNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBaAt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34O6cMXuCzwqjH0zPDZO5W1jjn7ojIfQ0qrPaCXL1qd8rRxkgiGgzBg1iQ?=
 =?us-ascii?q?soHlIjaV1uIXv2eF8uVgSPuihmg6oA9yujii3tkghpXNi44P11zJ+zt1zJwoKd?=
 =?us-ascii?q?C7VEJ3e9+pHZlIuy2EK4d7RtkuTmJotSog17ELuJ+2cDIXxJklxRPSbeGMfZKS?=
 =?us-ascii?q?7RL5TumRJC91hHJ7d7K7gBa/6VagyuLiWcmuylpKrTRKksPKtn8T0xzf8M+HSu?=
 =?us-ascii?q?Fy/ku52DaP0R7c6v1cLEwqiabWL4QtzqM+m5YNq0jPAyz7lFnsgKKXdEgo4u2o?=
 =?us-ascii?q?5P7mYrXiqJ+cLYh0igTmP6Qqm8y/B/k4MwcXU2iY5+u8zrvj8lP9QLlTif03nK?=
 =?us-ascii?q?/Zv47AJckAuK65DBFa0pw55xa8ETimytIYkmcDLF5ffxKHlYfpN0nUIP/kFfe/?=
 =?us-ascii?q?n0iskDBzyvDCP73hAYvCImLMkbf8Zrt9709cyAwuzdFQ/Z5UC7cBIO7tVU/1rt?=
 =?us-ascii?q?DXEhg5Mwmsyeb9FNp9zp8eWX6IAqKBMKPdq16I5v41LOmLfoMVuCv9JOIj5/7h?=
 =?us-ascii?q?lnI5nV4dfa+03ZoYcny4H/JmI1mHbnromNsODWAKvg8mRuzwlFKCSSJTZ2q1X6?=
 =?us-ascii?q?8k5DE7D5ypAZ3ARoCqhryB2iC7E4ZSZmBHDFCMDHjpe5+FW/cKdCKdPMthniYY?=
 =?us-ascii?q?WrimTo8rzQuuuxPiy7p7MurU/TUVuoj41Nh14O3Tlgs+9SZuAMSfyGyNS2B0nm?=
 =?us-ascii?q?UVRz45xqx/oEp9ykud3qh8mfBXCdtT5/ZRWAcgKZHc1/B6C8z1Wg/ZfdeGUlCm?=
 =?us-ascii?q?Ts+iATEwVN0xxdAObl15G9WjiBDDwiWrD6UUl7yNGJw77Kbc02LtKMZ6znbMzL?=
 =?us-ascii?q?MhgEU+QstTKW2mgbZy+BXJCI7XjUqVjaaqer4a3C7W6miDy22CvEVbUA51VaXI?=
 =?us-ascii?q?RnQfZkrQrdTk6ULOVb6uCbI7MgRfzc6OMLdFatrsjV9eXvfsJMzeY36tm2e3HR?=
 =?us-ascii?q?uH26mDbJT0dGkH3CXSEk4EkxsN8naALgU+Aiaho2TDDD1hD17vYkXs8fVgp3O/?=
 =?us-ascii?q?VEM70waKb0h53bqv5hEVneCcS+8U3r8cpCchqjB0HFGh39LWC9uMvRZhcL9bYd?=
 =?us-ascii?q?Mn5FdH1GTZtwNmM5ykLqBigEMecgtts0Pv0RV3FptPkcwwoHw2ywpyLLqS0Eld?=
 =?us-ascii?q?eDOAwZDwJrrXJ3Ho8xCrdaHX1U/R0daM9qgU9fQ3tk/svAeqFkol7XVqyN1V03?=
 =?us-ascii?q?qa5pXXAwseS5PxUkAr9xdko7HWeDUy54TR1Xd0K6m7rifC2841BOsi0huhf8pf?=
 =?us-ascii?q?PLmYGwPoEswaB9KhKOolm1WyahIEPeZS9LM7Ps+8dvuG3rKrM/hknD68kWtH54?=
 =?us-ascii?q?V92FqW9yVgUu7Iw4oFw/aA0wudVjfzkE2ustrqloBDfz0SGHSwyTLlBIJIeqJ9?=
 =?us-ascii?q?Z4ILBnqwLM2twdV+gYXgW3pZ9F6lGlMH19WleRuUb1zhwwJQ0V4brmCgmSu91z?=
 =?us-ascii?q?Z0iS0mrrKD3CzSxOTvbBoGOm9RSGhil1vsOpW0j9YBUUisbggpkgal5Engy6ha?=
 =?us-ascii?q?oqR/M3fcQUNScyfqKGFiV7O6tqCebM5X9JMorSJXXfy+YV+AUL79oBga0yT5E2?=
 =?us-ascii?q?tF3j87dDKqupT/nxNkjmKQN3JzrHvfecFtyhbT/t3cRfhN3jUYQCl0kyXYBl+5?=
 =?us-ascii?q?P9Ox59Wbi4/DsvyiV2KmTpBScTPkzYSauCu55G1qBwayn/Symt3hDAg73jX319?=
 =?us-ascii?q?hsVSXUshn8ZpPn2Li9MeJiZkNoHkPz69JmGoFilYs9nJIQ1mIbhpmP/XoHjH38?=
 =?us-ascii?q?MdNU2a/laHoNRDgLw8Pa4QT/2U1jKG6JyJz9VnmH3sRhYNy6aHsM2i0h98BKFL?=
 =?us-ascii?q?uU7LtckCtwo1q4rhjebeJznzgD0vsu9GAVg/sStwUz1CWdDasfHU1ZPSzqihSJ?=
 =?us-ascii?q?4MqyrKRRZGazb7ew0FByksymDLGHugtcQmr2eo8+HS9s6cVyKE7M0Hr26o3+ed?=
 =?us-ascii?q?jfd9QTtgCPkxfbjuhYM5YxlvsMhSp6NmPxp3wly+gnjRNw2ZG2ppSIK2Jo/Kih?=
 =?us-ascii?q?GB5XKiX1Z98P+jHqlatRhdyZ34erHpV8ADkLWIboQOmsEDITs/TnKgmPHCc9qn?=
 =?us-ascii?q?edBbrQAwuf5F16oHLIFpChL2uXK2UBzdV+WBmdI1RSgAIOUzU/gJE5DRqmxND7?=
 =?us-ascii?q?fEd6+zAR5UP4qh1WxeJzLBT/VmbfpAG1ajY7UpSfLRxW7h1c6EfRK8CR8uVzHy?=
 =?us-ascii?q?RA9J27sAONMnCbZxhPDWwRWk2EAE3jPqCz5dba9eiUHPG+L/zIYbWBsuFeU/aI?=
 =?us-ascii?q?xZSy0opp5TqMN8OPPmV8AP0/wEZMQXd5G8HBkTUVVyMXjz7Nb9KcpBqk+i14sM?=
 =?us-ascii?q?G/8PfoWALu/4ePCKFSMdJg+x+om6eDKvWQiT19KTZZ0JMM2HDJxKIe3F4UlyFh?=
 =?us-ascii?q?aT2tHa4cui7KSaLagrVXAAIDayNvKMtI6Lox0RNQOcHAkNP6yL55guQxC1dETl?=
 =?us-ascii?q?HhnsCpZcoXI2CyLl/HBUCLNKiYKj3P2c34faS8SbhIhuVOqxKwoSqbE1PkPjmb?=
 =?us-ascii?q?iznpVhWvPftQgy2BIBNeuJ+ychB2BGjnTdLmbAC7MdBtgT03x700mm3FNWoGPT?=
 =?us-ascii?q?dgdENNq6Wa7TlEjfVnB2xB8n1lIPGEmimD6enYL5cWsf1zDSV1l+JV+nI6y7RO?=
 =?us-ascii?q?4SFARfx1njbSr9F0r1GnlOmP1iRoUB5UpjlXg4KLuBYqBaKM7YRMVHvcuh4Q8X?=
 =?us-ascii?q?m4ChIWqt8jAdrq6I5Kzd2aq6/1NzpEu+3d+8RUU9fdLs3ZbCt8GQfsHnjZABZT?=
 =?us-ascii?q?Hm3jDn3Wm0EIyKLazXaStJVv78G0wJc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACZkgZch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng3mIGY4bFJc1gXMIDBgTAYgRIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkjDII2JAGCYgECAwECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZB?=
 =?us-ascii?q?YMcggIFmRs8ih1wfDOCdgEBBYViAQeBRAiBC4sTghaBEYMSiAWCV4EsAQEBh2C?=
 =?us-ascii?q?CE4UPkBkBBgIBgVqPZxiBW4URijqYaA8hgQUggg0zGiV/BmeBToIbDBeENIoII?=
 =?us-ascii?q?QExgQUBAYpiAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACZkgZch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng3mIGY4bFJc1gXMIDBgTAYgRIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2J?=
 =?us-ascii?q?AGCYgECAwECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcggIFmRs8ih1?=
 =?us-ascii?q?wfDOCdgEBBYViAQeBRAiBC4sTghaBEYMSiAWCV4EsAQEBh2CCE4UPkBkBBgIBg?=
 =?us-ascii?q?VqPZxiBW4URijqYaA8hgQUggg0zGiV/BmeBToIbDBeENIoIIQExgQUBAYpiAQE?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="55456803"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 06:45:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726630AbeLDOpE (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 09:45:04 -0500
Received: from mta-p3.oit.umn.edu ([134.84.196.203]:41134 "EHLO
        mta-p3.oit.umn.edu" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726309AbeLDOpE (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 09:45:04 -0500
X-Greylist: delayed 566 seconds by postgrey-1.27 at vger.kernel.org; Tue, 04 Dec 2018 09:45:03 EST
Received: from localhost (localhost [127.0.0.1])
        by mta-p3.oit.umn.edu (Postfix) with ESMTP id 2E96B773
        for <linux-kernel@vger.kernel.org>; Tue,  4 Dec 2018 14:35:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=umn.edu; h=
        content-type:content-type:subject:subject:message-id:date:date
        :from:from:in-reply-to:references:mime-version:received:received
        :received; s=20160920; t=1543934137; x=1545748538; bh=fxK91B2Yz0
        Ck0tUzvkhSsKruWIrkhKWLdQ/YbD7u6S8=; b=POPCE9YAB1mQiBXhxCBNWXh8LP
        YCIPc9HXytDxXBc+RCfz84/Gr1vZBpb56msHvMxZQBbCTb1m30b3YsQldtz74pEt
        abHpGU0/SJKQFn3+ibaIDiJvYYbEEf+PRH7pf/dUigp7rh7VFE0cUwRdeGRrNAlA
        GbHxFZ3RPDcbhUhZk/TaYI5ztLMkJf4fYlCsvxJ5rwuPePOmeukYjSS1J7UQfD9G
        XgpwLpY06gjtCjZo7Y7GDEpSIOhZ4UC5m980nB+rQv+4k+UGxeT1e8gCSvGh755k
        bLXEA/2q1KXf0FVw3eC/HOUOruBxpi4OzzWS8IuzC0mh90uC0IvQepwoUPRA==
X-Virus-Scanned: amavisd-new at umn.edu
Received: from mta-p3.oit.umn.edu ([127.0.0.1])
        by localhost (mta-p3.oit.umn.edu [127.0.0.1]) (amavisd-new, port 10024)
        with ESMTP id 51TIRMq6Pz9G for <linux-kernel@vger.kernel.org>;
        Tue,  4 Dec 2018 08:35:37 -0600 (CST)
Received: from mail-it1-f177.google.com (mail-it1-f177.google.com [209.85.166.177])
        (using TLSv1 with cipher AES128-SHA (128/128 bits))
        (No client certificate requested)
        (Authenticated sender: wang6495)
        by mta-p3.oit.umn.edu (Postfix) with ESMTPSA id 00FC679F
        for <linux-kernel@vger.kernel.org>; Tue,  4 Dec 2018 08:35:37 -0600 (CST)
Received: by mail-it1-f177.google.com with SMTP id i145so15626488ita.4
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 06:35:36 -0800 (PST)
X-Gm-Message-State: AA+aEWZAz2+hfaO7oklOUT9SySXQoVDz4BYWRha2DDcgEsXuU9G8lEXW
        GxgAEKpdb+a8zmSUPt/mW/Sey7edhUF8WsS1NMc=
X-Google-Smtp-Source: AFSGD/Uf0AhRCIX7vaZpq5y3wONR4kt4eLYppjYgqID1wTkLrASx/XEi7fRAWFRFCQ5yyn+c4TarGL+CTrZIKDntjMc=
X-Received: by 2002:a24:97c3:: with SMTP id k186mr12598454ite.125.1543934136720;
 Tue, 04 Dec 2018 06:35:36 -0800 (PST)
MIME-Version: 1.0
References: <1539891966-8017-1-git-send-email-wang6495@umn.edu> <1541384613.28670.5.camel@intel.com>
In-Reply-To: <1541384613.28670.5.camel@intel.com>
From: Wenwen Wang <wang6495@umn.edu>
Date: Tue, 4 Dec 2018 08:35:00 -0600
X-Gmail-Original-Message-ID: <CAAa=b7cNJhESLL8uYt97MYiXkySo9_7oqYA9pD7KCz0p=khwcg@mail.gmail.com>
Message-ID: <CAAa=b7cNJhESLL8uYt97MYiXkySo9_7oqYA9pD7KCz0p=khwcg@mail.gmail.com>
Subject: Re: [PATCH] misc: mic: fix a DMA pool free failure
To: sudeep.dutt@intel.com
Cc: Kangjie Lu <kjlu@umn.edu>, ashutosh.dixit@intel.com,
        Arnd Bergmann <arnd@arndb.de>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        open list <linux-kernel@vger.kernel.org>,
        Wenwen Wang <wang6495@umn.edu>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sun, Nov 4, 2018 at 8:05 PM Sudeep Dutt <sudeep.dutt@intel.com> wrote:
>
> On Thu, 2018-10-18 at 14:46 -0500, Wenwen Wang wrote:
> > In _scif_prog_signal(), a DMA pool is allocated if the MIC Coprocessor is
> > not X100, i.e., the boolean variable 'x100' is false. This DMA pool will be
> > freed eventually through the callback function scif_prog_signal_cb() with
> > the parameter of 'status', which actually points to the start of DMA pool.
> > Specifically, in scif_prog_signal_cb(), the 'ep' field and the
> > 'src_dma_addr' field of 'status' are used to free the DMA pool by invoking
> > dma_pool_free(). Given that 'status' points to the start address of the DMA
> > pool, both 'status->ep' and 'status->src_dma_addr' are in the DMA pool. And
> > so, the device has the permission to access them. Even worse, a malicious
> > device can modify them. As a result, dma_pool_free() will not succeed.
> >
> > To avoid the above issue, this patch introduces a new data structure, i.e.,
> > scif_cb_arg, to store the arguments required by the call back function. A
> > variable 'cb_arg' is allocated in _scif_prog_signal() to pass the
> > arguments. 'cb_arg' will be freed after dma_pool_free() in
> > scif_prog_signal_cb().
> >
> > Signed-off-by: Wenwen Wang <wang6495@umn.edu>
> > ---
> >  drivers/misc/mic/scif/scif_fence.c | 17 +++++++++++++----
> >  drivers/misc/mic/scif/scif_rma.h   | 14 ++++++++++++++
> >  2 files changed, 27 insertions(+), 4 deletions(-)
> >
> > diff --git a/drivers/misc/mic/scif/scif_fence.c b/drivers/misc/mic/scif/scif_fence.c
> > index cac3bcc..30f7d9b 100644
> > --- a/drivers/misc/mic/scif/scif_fence.c
> > +++ b/drivers/misc/mic/scif/scif_fence.c
> > @@ -195,10 +195,11 @@ static inline void *scif_get_local_va(off_t off, struct scif_window *window)
> >
> >  static void scif_prog_signal_cb(void *arg)
> >  {
> > -     struct scif_status *status = arg;
> > +     struct scif_cb_arg *cb_arg = arg;
> >
> > -     dma_pool_free(status->ep->remote_dev->signal_pool, status,
> > -                   status->src_dma_addr);
> > +     dma_pool_free(cb_arg->ep->remote_dev->signal_pool, cb_arg->status,
> > +                   cb_arg->src_dma_addr);
> > +     kfree(cb_arg);
> >  }
> >
> >  static int _scif_prog_signal(scif_epd_t epd, dma_addr_t dst, u64 val)
> > @@ -209,6 +210,7 @@ static int _scif_prog_signal(scif_epd_t epd, dma_addr_t dst, u64 val)
> >       bool x100 = !is_dma_copy_aligned(chan->device, 1, 1, 1);
> >       struct dma_async_tx_descriptor *tx;
> >       struct scif_status *status = NULL;
> > +     struct scif_cb_arg *cb_arg = NULL;
> >       dma_addr_t src;
> >       dma_cookie_t cookie;
> >       int err;
> > @@ -257,8 +259,15 @@ static int _scif_prog_signal(scif_epd_t epd, dma_addr_t dst, u64 val)
> >               goto dma_fail;
> >       }
> >       if (!x100) {
> > +             err = -ENOMEM;
>
> Should err be set to -ENOMEM only if the cb_arg allocation fails?
>
> > +             cb_arg = kmalloc(sizeof(*cb_arg), GFP_KERNEL);
> > +             if (!cb_arg)
> > +                     goto dma_fail;
> > +             cb_arg->src_dma_addr = src;
> > +             cb_arg->status = status;
> > +             cb_arg->ep = ep;
> >               tx->callback = scif_prog_signal_cb;
> > -             tx->callback_param = status;
> > +             tx->callback_param = cb_arg;
> >       }
>
> cb_arg should be freed if there is a dma_submit_error(..) below in the
> dma_fail path.
>
> Wenwen, can you please fix these up and resend the patch?

Sure, will fix the issues and resubmit the patch. Thanks!

Wenwen
