Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 22:39:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 01D895803C2;
	Mon, 26 Nov 2018 06:13:52 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 26 Nov 2018 06:13:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AlAfZcBw1+e+3+2nXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ekfIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOSM3/m/UjcJwl7pbrRC6qhBj34LZep2ZOeBicq/Be94RWGpPXtxWVyxEGo6y?=
 =?us-ascii?q?aJYPAPYBPeZFqYn2ukYArRy4BQmjGejizSRIhnrr3aIm0+QhDAfG0RcvH9ILqn?=
 =?us-ascii?q?vUrdH1OL0OXuCyyanF1DPOZO5V1zfl8IXEbAwtrPWWUb5tf8fd11MjGx7Gg1mM?=
 =?us-ascii?q?s4DoPjGY2vwQv2SH8uZsT+Gihmw9pw1vrTWiwt0gh43Gi48T11vK7z92wJwvKt?=
 =?us-ascii?q?29UEN7YcCrEJ9XtyyCKYt2Td0tQ3tytCY51LIGo5i7czYOyJg9wB7fcfOHf5CJ?=
 =?us-ascii?q?4hLlSumRPS91iGx5dL+7nRq+7EatxvPmWsWp01tGsjBJn9jOu3wV0hzc8MmHSv?=
 =?us-ascii?q?9z/ke73jaP0hje6uVFIUAyiKraJIctwr0umZoJt0TMACv2lFzxjK6YcEUr5PKo?=
 =?us-ascii?q?5v/5YrXpuJCcLZV4igLgPaQ0nMywH+A4PhIJX2iB9uSwzKfj8lHhQLVWkv02lb?=
 =?us-ascii?q?HUsJTbJcQYuKG1GQBU0ps45ha7Djem1skYnHYdIFJEfhKHk5bmO1XULP/kCve/?=
 =?us-ascii?q?hkymkC13yPDeIr3hHpLNI2DDkLj7fLZ991RTyA0pwdBf+pJbELcBIP3oV0/1td?=
 =?us-ascii?q?zYCAI5MgOuz+bmDtV9yp0RWWaVDqCFN6PStEeC5vgzLOmUeI8VpDH9JuAn5/7p?=
 =?us-ascii?q?k3A1g1wdfa6v3ZsRb3C1BfBmI0SfYXrxjdYNC2YKvgwiTOP0jF2OSyJcZ3G3X6?=
 =?us-ascii?q?gk/DE0FJqmDZvfRoCqmLGOxjy7Hp1RZmBFEFyMC23nd4efVvcIaSKSJNJhkzMe?=
 =?us-ascii?q?WbigTY8hyQ+htAvgx7V7KerU/zUStYj/29ht++3TiRYy+CR3D8uH1WGBVWV0nm?=
 =?us-ascii?q?ISSD8w06Byukh9ylaF0ahljP1UD91T5/VVUggkMZ7Q1fB1C9f3WgjZZNeGVE6m?=
 =?us-ascii?q?Qsm6ATE2Vt8+3sUBY1hjFNm4jhDMxSyqA6QLmLyNA5A09qHc3331J8tmz3bG1a?=
 =?us-ascii?q?8hj0QpQ8dVNG2mgLJ/+BbXB4LTj0qZkKOqf7wG3CHR7GeD0XaOvEZAXQFtS6rF?=
 =?us-ascii?q?Q24QalHWrdvj4EPCVKGhCbI8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgP/XaHMAg+ATuho2LeDTB0CVLjeUTs8fN6qHO6?=
 =?us-ascii?q?SE80wBqHb0lg17qz5x4UiuaQS/IV3rIYpighry94E0q639LTE9CAvRZufL1AYd?=
 =?us-ascii?q?Mh51dKzXjWtwhjMZ2vMa9jhkQSfB9qv0zzzRp3DIZAkc80rH4xyApyKKSY0E5O?=
 =?us-ascii?q?dj+C3JDwPKHXJXf2/By1d6HW3VTe2s6M+qgT8PQ4t0njvAaxG0si7nVrycVa32?=
 =?us-ascii?q?Gd55XKFgUSV53xX10z9xh7obHafyY865nV1X1qLam7rDvC18g1C+sizxaqZ81f?=
 =?us-ascii?q?P7+cFA/uD80aANCjKPYrm1e1dB0EJv1d9KkuM8OgafSGwq+rMP98kz28iWRI/Z?=
 =?us-ascii?q?5y0liL9yp6UePI25cFw/eF3gqITTv8jVGhstzploBAfz0dAm2/yS38Do5LeqJy?=
 =?us-ascii?q?ZZoLCXupI8CvxtR+hoThWn5C+F64GlMG3tSkeR6Tb1z7wA1R2l4boX2hmSuk0T?=
 =?us-ascii?q?N0lyslobaY3CzL2+7ibgYIOnZXRGl+ilfhOYq0gMoAXEirbAgpkwGp5V3gyKhY?=
 =?us-ascii?q?p6R/Lm/TTllOfyXtK2FiU62wtqeNYsJV6ZMotzlXX/q4YVyAVrH9pB4a2Tv5H2?=
 =?us-ascii?q?RC3DA7ay2qupLhkh16km2dK2x/rHjYecF23hrf4N3cRfhM3jsJXiV4iD/XBkSi?=
 =?us-ascii?q?MNmt59mbi5DDsuWmXWK7SpJTaTXrzZ+HtCaj5m1lGxy/k+qzmt36Cwc61yD72s?=
 =?us-ascii?q?JuVSXJqhb8f4bq2767MeJhYklnGlv859BmFYF5l4s6nIsQ1mQChpWJ4XoHln/+?=
 =?us-ascii?q?MdBa2aL9dnUBXzAKzMDO4Aj5xkJjNGmGyJzjVnWS2cZhY9i6YmUL2iMy9cxKCa?=
 =?us-ascii?q?GU7KBakitxuFa3sQXRYf1llDcH1fQu8GIag/0OuAc10iWdBbUSEVNZPCP2kRSI?=
 =?us-ascii?q?8su+rL5WZGu0dbiw1Ux+nc2uDb2YowFcXmr5dYkmHSNq8sp/N1fM2mXp6o74YN?=
 =?us-ascii?q?nQcc4TthqMnhjbledVL5YxlucQiSpjJGLwpnkly+89jRxz0pC2pomHK2Nx/K2n?=
 =?us-ascii?q?Bh5ULCH6Z8QW+jv1l6ZRgt6W35yzHpVmAjgLXoHnTfe2HzIJr/jnKxyCED4hqn?=
 =?us-ascii?q?eYBLrfGxWQ6Fx9onLLEpCrMWyXJXYDwdVjQhmdOFJQgAQOUDommZ45ExigxNb9?=
 =?us-ascii?q?f0dh+jAR+ln4pwNMy+JvKhn/S3rfqx2uajsuU5ifKxxW7g5Z6kfRMMye6P9zHi?=
 =?us-ascii?q?5C8p2gqgyNNnKUZwBSAW4VXUyEAkjpPqOy6tnY7+iYGu2+IuPOYbqQqOxeVPSI?=
 =?us-ascii?q?xZO13otl5TaMMcqPMWd4D/0mwUpORnR5G8XfmzUSRC0bjSPNb8iHpBii/i17tN?=
 =?us-ascii?q?yw8PPuWAj3/4uAF6NSMclz+xCxmaqMLfOQiz1jKTlG1pIA33vIyLkE0V4WiiFu?=
 =?us-ascii?q?cSStELsauS7MSqLQhrFYDxoBZyxvM8tI6ro23hNRNs7DltP1yrl4g+YpC1dEUF?=
 =?us-ascii?q?ztgN2madYWLGG9KlzHAl2GNLCHJT3N3sH2brmwSbxWjOVIqRKwvSyXHFPkPjSG?=
 =?us-ascii?q?jzPpTQygMflQjCGHOxxToIG8fQxrCWjmTdLmbAW0Md53jTIsx700iWjHNWodMT?=
 =?us-ascii?q?h6bkNMoaec7SJegvVjBWNB6mBpIvWDmyacvKHkLcMTsP1kBQx3mvhc7XB8zKFa?=
 =?us-ascii?q?qGlcSeB4gjn6r9hguViqn+CDjD19X0lgsDFO0aeWtkV/P+3i8Z9PESLf+Q8G7X?=
 =?us-ascii?q?iWIxsPrtphTNbovvYDmZD0iKvvJWIaoJrv9swGCp2MJQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAABa//tbh0O0hNFiHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ5gSgiGJCYkohHeBcxIBARgTAYhjIjQJDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDII2IoJsAiQZARsdAQMCCQIFEDsDHgIRAQUBIxIFgxyBaQEDFAEFmWU8jAkWB?=
 =?us-ascii?q?QEXgncFgkSBaQoZJw1agTcCBhKHTIMPgRwXgX+GeYgDAokjhmyPRS4JjgSDIAs?=
 =?us-ascii?q?YgVmHeIc2ASyJQYRgiTwCBAIEBQIFDyGBJYINMxoIGxVsgjuCGwwXg0qKXzMyg?=
 =?us-ascii?q?QQBAQGMCgEB?=
X-IPAS-Result: =?us-ascii?q?A0AgAABa//tbh0O0hNFiHgEGBwaBUQkLAYNrJ5gSgiGJCYk?=
 =?us-ascii?q?ohHeBcxIBARgTAYhjIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJsAiQZA?=
 =?us-ascii?q?RsdAQMCCQIFEDsDHgIRAQUBIxIFgxyBaQEDFAEFmWU8jAkWBQEXgncFgkSBaQo?=
 =?us-ascii?q?ZJw1agTcCBhKHTIMPgRwXgX+GeYgDAokjhmyPRS4JjgSDIAsYgVmHeIc2ASyJQ?=
 =?us-ascii?q?YRgiTwCBAIEBQIFDyGBJYINMxoIGxVsgjuCGwwXg0qKXzMygQQBAQGMCgEB?=
X-IronPort-AV: E=Sophos;i="5.56,282,1539673200"; 
   d="scan'208";a="41544677"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 06:13:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726630AbeK0BIB (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 26 Nov 2018 20:08:01 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:34459 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726200AbeK0BIB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Nov 2018 20:08:01 -0500
Received: by mail-pg1-f193.google.com with SMTP id 17so6240762pgg.1
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 06:13:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=lI6Brk4FLVHP1n6C43ZrBQ76dtP9t2lQe8qWznPRBDE=;
        b=DpOs1XD9IHz0GFs4A91SQfMtnC0P6Od/HL3C0xVmH+QtnPTQMH2xxP4xXr/3sCAEMi
         dBqbnN+Dhgwdf2XEyDUDeB/DzYlu//4WgvCGcN+gUpIPs+uICUphZX93HhW8p28w08QE
         IiQsUHwm2I59d/Kc7wC8CTnXd+L4Jg9Pa2xYqAeuOnluXoPvl4uNu9utKMqiwWo3dNZp
         3dyP3Ljztky8fZBfLMyD6qEJhrdJORoCUFcqnZsxO0oasivo27SBg7dZC1gW53v20JSs
         lwUUykNgdwII1CNYTkBa8AYTIrkYmTqcnf6/xMLwkS4YejkwGNvzGemVNKFsoqNAucgf
         qf9A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=lI6Brk4FLVHP1n6C43ZrBQ76dtP9t2lQe8qWznPRBDE=;
        b=MoVh0F2h7zrjbk6rB8LpkKHLp1igsWyGDZiv/1WI3Y3POWespTqSr16BR+sYhB0+Fe
         Tkh3c+hcPIGa3y9gx04AG3GUAf2+pVwlLq+MgAl8r/38k/7EQ+SWGVEeL/ulA0WEtrni
         Ur6vgRIWQRvoN03TtF+FKC4ujz+eNUCyyoPP2og9cVMzut/xzkwT5F/l9C2OvP42nRtX
         HV+LaFRsZSubZP7QKzSPGDDdqrc0TpaoKWr+rBr7oZ2ctdO3dtPiPwEQGJFG/RYQOFEl
         sHRFFVIom52egDp2dU/VvBUTgRfzIJcK6DCVdqjWueDD8ngh52WJMUHTLsR/vrpgUvG5
         wktA==
X-Gm-Message-State: AA+aEWaxQQMLf2ocbzeHjivmp8nSGpizJC0NSNQFr/ziUn8i+BYhImGY
        Igk3cE7IlAoNAePaj3Iw4FUVq2wmgQXlNg==
X-Google-Smtp-Source: AFSGD/VpPL+dRqpsJLGKJb/IUN0SYFHJmrQsRV73anjA+d1f+pKZDuYTKL9TZBRv5eMfo2b7Tq0iPA==
X-Received: by 2002:a62:9913:: with SMTP id d19mr22957578pfe.107.1543241626154;
        Mon, 26 Nov 2018 06:13:46 -0800 (PST)
Received: from ubuntu.localdomain ([101.87.249.94])
        by smtp.gmail.com with ESMTPSA id q25sm618391pgb.2.2018.11.26.06.13.37
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 26 Nov 2018 06:13:43 -0800 (PST)
From: Muchun Song <smuchun@gmail.com>
To: mingo@kernel.org, peterz@infradead.org
Cc: linux-kernel@vger.kernel.org
Subject: [PATCH RESEND] sched/fair: Clean up update_blocked_averages()
Date: Mon, 26 Nov 2018 22:13:25 +0800
Message-Id: <20181126141325.5436-1-smuchun@gmail.com>
X-Mailer: git-send-email 2.17.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

First of all, with CONFIG_NO_HZ_COMMON is disabled, we don't need to call
cfs_rq_has_blocked() and others_have_blocked(). And the local variable
'done' is unnecessary as well.

So we put the functions in the #ifdef block so that compiler can help us
optimize the code(e.g. the local variable 'done' and the function call).

After do that, we introduce a function named update_rq_blocked_load() to
remove #ifdef from update_blocked_averages(), which can make the code
clean.

Second, there are some the same function call in update_blocked_averages()
regardless of whether CONFIG_FAIR_GROUP_SCHED is enabled or not. That is
rt, dl and irq's load_avg update. So let the update_others_load_avg() do
it.

Signed-off-by: Muchun Song <smuchun@gmail.com>
---
 kernel/sched/fair.c | 59 +++++++++++++++++++++++++++++----------------
 1 file changed, 38 insertions(+), 21 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index e30dea59d215..89b3b4a18eee 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -7367,6 +7367,7 @@ static void attach_tasks(struct lb_env *env)
 	rq_unlock(env->dst_rq, &rf);
 }
 
+#ifdef CONFIG_NO_HZ_COMMON
 static inline bool cfs_rq_has_blocked(struct cfs_rq *cfs_rq)
 {
 	if (cfs_rq->avg.load_avg)
@@ -7394,6 +7395,37 @@ static inline bool others_have_blocked(struct rq *rq)
 	return false;
 }
 
+static inline void update_rq_blocked_load(struct rq *rq, bool clear)
+{
+	rq->last_blocked_load_update_tick = jiffies;
+	if (clear)
+		rq->has_blocked_load = 0;
+}
+#else /* !CONFIG_NO_HZ_COMMON */
+static inline bool cfs_rq_has_blocked(struct cfs_rq *cfs_rq)
+{
+	return false;
+}
+
+static inline bool others_have_blocked(struct rq *rq)
+{
+	return false;
+}
+
+static inline void update_rq_blocked_load(struct rq *rq, bool clear)
+{
+}
+#endif /* CONFIG_NO_HZ_COMMON */
+
+static void update_others_load_avg(struct rq *rq)
+{
+	const struct sched_class *curr = rq->curr->sched_class;
+
+	update_rt_rq_load_avg(rq_clock_task(rq), rq, curr == &rt_sched_class);
+	update_dl_rq_load_avg(rq_clock_task(rq), rq, curr == &dl_sched_class);
+	update_irq_load_avg(rq, 0);
+}
+
 #ifdef CONFIG_FAIR_GROUP_SCHED
 
 static inline bool cfs_rq_is_decayed(struct cfs_rq *cfs_rq)
@@ -7417,7 +7449,6 @@ static void update_blocked_averages(int cpu)
 {
 	struct rq *rq = cpu_rq(cpu);
 	struct cfs_rq *cfs_rq, *pos;
-	const struct sched_class *curr_class;
 	struct rq_flags rf;
 	bool done = true;
 
@@ -7455,19 +7486,12 @@ static void update_blocked_averages(int cpu)
 			done = false;
 	}
 
-	curr_class = rq->curr->sched_class;
-	update_rt_rq_load_avg(rq_clock_task(rq), rq, curr_class == &rt_sched_class);
-	update_dl_rq_load_avg(rq_clock_task(rq), rq, curr_class == &dl_sched_class);
-	update_irq_load_avg(rq, 0);
+	update_others_load_avg(rq);
 	/* Don't need periodic decay once load/util_avg are null */
-	if (others_have_blocked(rq))
+	if (done && others_have_blocked(rq))
 		done = false;
 
-#ifdef CONFIG_NO_HZ_COMMON
-	rq->last_blocked_load_update_tick = jiffies;
-	if (done)
-		rq->has_blocked_load = 0;
-#endif
+	update_rq_blocked_load(rq, done);
 	rq_unlock_irqrestore(rq, &rf);
 }
 
@@ -7522,22 +7546,15 @@ static inline void update_blocked_averages(int cpu)
 {
 	struct rq *rq = cpu_rq(cpu);
 	struct cfs_rq *cfs_rq = &rq->cfs;
-	const struct sched_class *curr_class;
 	struct rq_flags rf;
 
 	rq_lock_irqsave(rq, &rf);
 	update_rq_clock(rq);
 	update_cfs_rq_load_avg(cfs_rq_clock_task(cfs_rq), cfs_rq);
 
-	curr_class = rq->curr->sched_class;
-	update_rt_rq_load_avg(rq_clock_task(rq), rq, curr_class == &rt_sched_class);
-	update_dl_rq_load_avg(rq_clock_task(rq), rq, curr_class == &dl_sched_class);
-	update_irq_load_avg(rq, 0);
-#ifdef CONFIG_NO_HZ_COMMON
-	rq->last_blocked_load_update_tick = jiffies;
-	if (!cfs_rq_has_blocked(cfs_rq) && !others_have_blocked(rq))
-		rq->has_blocked_load = 0;
-#endif
+	update_others_load_avg(rq);
+	update_rq_blocked_load(rq, !cfs_rq_has_blocked(cfs_rq) &&
+				   !others_have_blocked(rq));
 	rq_unlock_irqrestore(rq, &rf);
 }
 
-- 
2.17.1

