Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 25 Nov 2018 14:41:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2F662580460;
	Sat, 24 Nov 2018 01:46:25 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 24 Nov 2018 01:46:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcsGXZhJqxlRWKhYucdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULv/8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPAo2+?=
 =?us-ascii?q?YIQAE+UOIOlWoIfmp1sWrxazHhWsCeHzxjNUmnP7x6833uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zIrNXyMacZTPu6zLTSzTXAdfxWwyv945XPfxA9pvGMWKl9ftDMyUk0DAPKkEmf?=
 =?us-ascii?q?pZb5MDOS0+QAqm6W5PdjW+K3k2MrtR19rzy1yssxhITFmJgZxk3H+Cll2oo4JN?=
 =?us-ascii?q?+1RFZmbdK5DJdcrT+WO5ZsTs4jXm1kojg2x7kAtJWmZiYF0o4nyATaa/Gfc4iH?=
 =?us-ascii?q?/BbjVOGJLDdmi3JqZqi/iwyx8Ue+0O38UNe70FJQoipCiNnMuWgB1x3V6seZVv?=
 =?us-ascii?q?tw5lmt1SqL2gzJ9+1JL144mbDGJ5Mi3rI8jJsevEbbEi/zgkr2jauWdks++uiv?=
 =?us-ascii?q?7uTqerHmpp6aN49phQDyK6culdKlAeQ+LAcOW3GX+eOy1b3l40L5Wq5HjuM5kq?=
 =?us-ascii?q?bHqpDWP8cbqbCjAw9TzIkj7wyzDzC80NQXhXUHNk5KeAqbj4j1PFHDOPT4Dfa8?=
 =?us-ascii?q?g1uyijtqyO3GM6blApXMKHjDjbjgcax8605a1Ao809Rf64hIBbEGJfL5QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qCNVn2YMfRWKAGKiZPLnSsV+V/O0vJeaMaZQRuDb8Lfgl+vHv?=
 =?us-ascii?q?gWU4mV8bYammw58XZGqkEfRhJkWTeWDsjcsZEWcWogo+S/TniF+FUTFNfXqyXK?=
 =?us-ascii?q?U85jc9CIKhForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2rgD60LpnLu3X+iECr5Lsztp16vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83NZ3GwOx8EdzyXgPBcc2PSFap?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5klYpWNVPOnO8iq5/7QfTAZXJnFufl6qtcaQc3yvN9GOYwGqKvUFYVhNwUKrf?=
 =?us-ascii?q?UXAeYEvWscr25kfYQ7CyDrQnNxNLydSeJatSdt3pkVJGSe/+N9vEfWK+hX28BR?=
 =?us-ascii?q?aSybOKd4rlZWMd0T7ZCEgFlQAT4HmHORI/Bienv2LREjhuGUjzbEPr9Ol0sGm7?=
 =?us-ascii?q?QVMszwGWc01h0KK4+gIUhfyZTPMTwrIEuSc7pzVoBlq92MjWC96Bpwpnc6VRet?=
 =?us-ascii?q?c94FZB1WLEuA1xJJ2gL6Z+hlEAdwR7pV/h1xJyCo9Yi8glsGsqzBZuKaKfyF5O?=
 =?us-ascii?q?bTeY0o7/O7LJKmj+5guga7PL1V7E1taW+aAP6OojplXnvQGpEFci8np939lU1X?=
 =?us-ascii?q?uc+ovFDA4IXZ3tVUY38gBwp6vGbSkl+4PUyXpsPLG0sz/fwd4mGPEpyxegf9hF?=
 =?us-ascii?q?NqOEGxT/E8kbB8ioNewrlEKlbhMCPOBO6qE0O9mqeOeB2K6uJOxghi6pjXxb4I?=
 =?us-ascii?q?Bh1UKB7zB8Su/U0Jkf2fGXwwyHWy36jFi/qMD3mJlIai0IEWq71CfrGpRRZqp0?=
 =?us-ascii?q?fYsQDWeuIsu3xshxhpL3Wn5Y8kKjCE0C2MOzZRWSaFn91xVK1UsLuXynhTe4zz?=
 =?us-ascii?q?tsnjApr6qTxizPz/75dBoaPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreCYdRA6IkrsSVUV+Swe0uaRaT+oxsZ0iPjGX?=
 =?us-ascii?q?VRxDYgejGuu5X5mQF6iW2HIHZyqnrZZd9/xRPF6NPAQv5R2yIMRDNkhjnPGli8?=
 =?us-ascii?q?I96p8M2UlpjZteCyTWChVpxVcSTwyYOAtS275XBlABGlnvCznMHnHhY+0SPhy9?=
 =?us-ascii?q?ZqUiDIpg7mYob3z6S6Lf5nfk5wCV//8cV6G5tykosthJ4K33gaiY6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwic978FJCK?=
 =?us-ascii?q?iO9rBFkzV6okGkrQ3Pe/hyhSkSyeEh6HMBh+EJuQwtzjiSA7wIHElYOzDsmAqM?=
 =?us-ascii?q?79yksKpXY2Ove6Cq1EVihdChEK2CogZEVXblfZciGDV878RlP1LKzX3z8ZrkeN?=
 =?us-ascii?q?jLYNIXtx2UlQrAjudPJJIwkPoKmTRoOWbnsXI5zO47iARk3Yums4ifN2Vt4KW5?=
 =?us-ascii?q?DwZDOTLvYMMT/iztgbxansaLxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPJnkW19BiSweGJEBFnAAYRjY6noM6FgC3wszu?=
 =?us-ascii?q?alx56ysV5l75rBtM1+1pOwP+UmfZuAendDM0RIKDIxpR6wFI/13VPtCG7uJvAy?=
 =?us-ascii?q?FY+YWsrQyKKmyGfgRIEHsGWkqeC1D4Obmu49bA/vOcBuq/KfvOfLqPpfZfV/eO?=
 =?us-ascii?q?2ZKgzI9m8yyQOcWIO3loF+c71VZbXXBlB8TZnC0CSywJmCLMbM6bpxa89jd0rs?=
 =?us-ascii?q?Cl9/TrVxzg5ZGSC7tJKthv/xG2gaGeN++fnip5KDBY1o8Syn/M0rQQwFkSiyR2?=
 =?us-ascii?q?fTm3DbsArTLNTL7XmqJPFREbdjh8NNFW4KM8xAVNPc/bh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZtwGxuTaeCUPsIi6P?=
 =?us-ascii?q?mCXpVx+xN+FBlyWbPB1YuIGgfRdhE2njTNT6ahKlNN97lyE5wboxhnnSL24TLS?=
 =?us-ascii?q?B8c19Rrr2X9S5Zgu9wG2pE7npkK+mLgyeY7+nCJZYQvvtmGSB0l+Nc4HQnxLpZ?=
 =?us-ascii?q?9iBERPppmCTMqt5iuU2pku6KymkvbB0bkjZKgIOTpQ1QMK/U8tEUQXbF+BMV9S?=
 =?us-ascii?q?OCAh4Ho/NqD9Tuv+Zbzd2Zx4zpLzIX79XRtcEBHcvdMt7PZGYmNDLgBSXPAQBD?=
 =?us-ascii?q?RjmuYzKMz3dBme2foyXG5qMxrYLhzd9XEudW?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAAAFHflbh0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJwqDb5QZgg0UiHiOMIFzLBMBiFoiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+?=
 =?us-ascii?q?CNiQBgmEBAQEBAgEBAiAEUgUBCQEBChgCAgUhAgIDDBI2BhMFgxyBagMNBwEFp?=
 =?us-ascii?q?nN8M4U3gj8NghmBC4p+F4F/gRGDEoJWhSyCVwKJGQqGOYEChFiKHi4JgiCLZIM?=
 =?us-ascii?q?gI5EIjk2JZgGBQoINcBU7LhpWgU6CJxeOMCwBMYEFAQGMGAEB?=
X-IPAS-Result: =?us-ascii?q?A0AWAAAFHflbh0O0hNFjHgEGBwaBUQkLAYNrJwqDb5QZgg0?=
 =?us-ascii?q?UiHiOMIFzLBMBiFoiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmEBAQEBA?=
 =?us-ascii?q?gEBAiAEUgUBCQEBChgCAgUhAgIDDBI2BhMFgxyBagMNBwEFpnN8M4U3gj8Nghm?=
 =?us-ascii?q?BC4p+F4F/gRGDEoJWhSyCVwKJGQqGOYEChFiKHi4JgiCLZIMgI5EIjk2JZgGBQ?=
 =?us-ascii?q?oINcBU7LhpWgU6CJxeOMCwBMYEFAQGMGAEB?=
X-IronPort-AV: E=Sophos;i="5.56,273,1539673200"; 
   d="scan'208";a="63760584"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 24 Nov 2018 01:46:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726060AbeKXUeW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 24 Nov 2018 15:34:22 -0500
Received: from csm1.csm-office.com.au ([165.228.118.109]:44136 "EHLO
        sleepy.aussec.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725878AbeKXUeW (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 24 Nov 2018 15:34:22 -0500
X-Virus-Scanned: amavisd-new at aussec.com
Received: from sneezy.aussec.com (sneezy.aussec.com [172.16.0.4])
        by sleepy.aussec.com (8.15.2/8.15.2) with ESMTP id wAO9k5is006959;
        Sat, 24 Nov 2018 20:46:11 +1100
Received: from c110-21-61-29.farfl4.nsw.optusnet.com.au
 (c110-21-61-29.farfl4.nsw.optusnet.com.au [110.21.61.29]) by www.aussec.com
 (Horde Framework) with HTTP; Sat, 24 Nov 2018 20:46:00 +1100
Message-ID: <20181124204600.176178e9k4t04sm0@www.aussec.com>
Date: Sat, 24 Nov 2018 20:46:00 +1100
From: tom burkart <tom@aussec.com>
To: Philipp Zabel <philipp.zabel@gmail.com>
Cc: LKML <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v8 2/4] pps: descriptor-based gpio, capture-clear
 addition
References: <20181117130337.5856-1-tom@aussec.com>
 <20181117130337.5856-2-tom@aussec.com>
 <20181117130337.5856-3-tom@aussec.com>
 <CA+gwMcfQ5cUZPmAJ6Uhb0KQsmwjtoSdRJVnAzk9mwy=-M19M2Q@mail.gmail.com>
In-Reply-To: <CA+gwMcfQ5cUZPmAJ6Uhb0KQsmwjtoSdRJVnAzk9mwy=-M19M2Q@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
 charset=UTF-8;
 DelSp="Yes";
 format="flowed"
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Internet Messaging Program (IMP) H3 (4.3.9)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Philipp,

Quoting Philipp Zabel <philipp.zabel@gmail.com>:

> On Sat, Nov 17, 2018 at 2:07 PM Tom Burkart <tom@aussec.com> wrote:
>>
>> This patch changes the GPIO access for the pps-gpio driver from the
>> integer based ABI to the descriptor based ABI.  It also adds the
>> extraction of the device tree capture-clear option.
>
> Is the capture-clear property documented in
> Documentation/devicetree/bindings/pps/pps-gpio.txt?
> If not, you should add a binding documentation patch.

Yes, that is in patch 1/4

>> Signed-off-by: Tom Burkart <tom@aussec.com>
>> ---
>>  drivers/pps/clients/pps-gpio.c | 80  
>> +++++++++++++++++++++---------------------
>>  include/linux/pps-gpio.h       |  3 +-
>>  2 files changed, 41 insertions(+), 42 deletions(-)
>>
>> diff --git a/drivers/pps/clients/pps-gpio.c b/drivers/pps/clients/pps-gpio.c
>> index 333ad7d5b45b..d2fbc91dc8fc 100644
>> --- a/drivers/pps/clients/pps-gpio.c
>> +++ b/drivers/pps/clients/pps-gpio.c
>> @@ -31,7 +31,7 @@
>>  #include <linux/slab.h>
>>  #include <linux/pps_kernel.h>
>>  #include <linux/pps-gpio.h>
>> -#include <linux/gpio.h>
>> +#include <linux/gpio/consumer.h>
>>  #include <linux/list.h>
>>  #include <linux/of_device.h>
>>  #include <linux/of_gpio.h>
>> @@ -41,9 +41,9 @@ struct pps_gpio_device_data {
>>         int irq;                        /* IRQ used as PPS source */
>>         struct pps_device *pps;         /* PPS source device */
>>         struct pps_source_info info;    /* PPS source information */
>> +       struct gpio_desc *gpio_pin;     /* GPIO port descriptors */
>>         bool assert_falling_edge;
>>         bool capture_clear;
>> -       unsigned int gpio_pin;
>>  };
>>
>>  /*
>> @@ -61,18 +61,49 @@ static irqreturn_t pps_gpio_irq_handler(int  
>> irq, void *data)
>>
>>         info = data;
>>
>> -       rising_edge = gpio_get_value(info->gpio_pin);
>> +       rising_edge = gpiod_get_value(info->gpio_pin);
>>         if ((rising_edge && !info->assert_falling_edge) ||
>>                         (!rising_edge && info->assert_falling_edge))
>>                 pps_event(info->pps, &ts, PPS_CAPTUREASSERT, NULL);
>>         else if (info->capture_clear &&
>>                         ((rising_edge && info->assert_falling_edge) ||
>> -                        (!rising_edge && !info->assert_falling_edge)))
>> +                       (!rising_edge && !info->assert_falling_edge)))
>>                 pps_event(info->pps, &ts, PPS_CAPTURECLEAR, NULL);
>>
>>         return IRQ_HANDLED;
>>  }
>>
>> +static int pps_gpio_setup(struct platform_device *pdev)
>> +{
>> +       struct pps_gpio_device_data *data = platform_get_drvdata(pdev);
>> +       const struct pps_gpio_platform_data *pdata =  
>> pdev->dev.platform_data;
>> +       struct device_node *np = pdev->dev.of_node;
>> +       int ret;
>
> Unused variable?

Oops, yes, in this patch (2/4), but not in patch 4/4

>> +
>> +       if (pdata) {
>> +               data->gpio_pin = pdata->gpio_pin;
>> +
>> +               data->assert_falling_edge = pdata->assert_falling_edge;
>> +               data->capture_clear = pdata->capture_clear;
>
> This is just a matter of personal taste, so feel free to ignore:
> I would keep the pdata branch in pps_gpio_probe and call this function
> pps_gpio_dt_setup, to reduce indentation of the OF branch.

Ok, I am happy to agree as it makes sense.

>> +       } else {
>> +               data->gpio_pin = devm_gpiod_get(&pdev->dev,
>> +                       NULL,   /* request "gpios" */
>> +                       GPIOD_IN);
>> +               if (IS_ERR(data->gpio_pin)) {
>> +                       dev_err(&pdev->dev,
>> +                               "failed to request PPS GPIO\n");
>> +                       return PTR_ERR(data->gpio_pin);
>> +               }
>> +
>> +               if (of_get_property(np, "assert-falling-edge", NULL))
>> +                       data->assert_falling_edge = true;
>> +
>> +               if (of_get_property(np, "capture-clear", NULL))
>> +                       data->capture_clear = true;
>
> Those two should use the of_property_read_bool wrapper.

Thanks.

>> +       }
>> +       return 0;
>> +}
>> +
>>  static unsigned long
>>  get_irqf_trigger_flags(const struct pps_gpio_device_data *data)
>>  {
>> @@ -90,53 +121,23 @@ get_irqf_trigger_flags(const struct  
>> pps_gpio_device_data *data)
>>  static int pps_gpio_probe(struct platform_device *pdev)
>>  {
>>         struct pps_gpio_device_data *data;
>> -       const char *gpio_label;
>>         int ret;
>>         int pps_default_params;
>> -       const struct pps_gpio_platform_data *pdata =  
>> pdev->dev.platform_data;
>> -       struct device_node *np = pdev->dev.of_node;
>>
>>         /* allocate space for device info */
>>         data = devm_kzalloc(&pdev->dev, sizeof(struct pps_gpio_device_data),
>
> Could use sizeof(*data) here. Otherwise,

Fine with me.

> Reviewed-by: Philipp Zabel <philipp.zabel@gmail.com>

Is this for patch 2/4 only or the others as well?

Will generate v10 of the patch and post it again.


