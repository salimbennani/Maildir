Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6389F580224;
	Fri, 30 Nov 2018 04:27:59 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 04:27:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Asy86WxW+ZCATe8RSWRj1dEKlSunV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhKDvqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeodM+hWrIf9qFkPrRSxGQaiC/jvyidKi3Ltwa000fgtHR3a0AA8Hd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41KfGwi/db/NXxDj29Y7GfQogofGDXbJwbdfaxE4hGQzfkFWQ?=
 =?us-ascii?q?qJHqMymT2OsXsmib4OpgVf60hmM7tQx+rD6hy9sxh4XTmI8b01fK+Dx/zY0oJt?=
 =?us-ascii?q?O4UFZ2bcC4HJZUrS2WKoV7Tt04T211uys21qcKtJ+5cSQS1Zgr2wTTZ+Kbf4SW?=
 =?us-ascii?q?+B7vSvqdLDdiiH54ZL6yhQ6+8Ua+xeD/SsW51VNHoyVLn9bQs30A1hje58iZRf?=
 =?us-ascii?q?Z4/Uqs2iqD1w7W5+xHI005lbbXJpg8ybAqjJUTq17MHirulUX2kqCWckIk9/C2?=
 =?us-ascii?q?6+TofLrmvIWQN4xqhQHkNKQhhMi/Df4/MggUUGiX4eW81Lv98k3lWLhGkOE6n6?=
 =?us-ascii?q?3DvJzHK8kXuLS1DxJW34o/8RqyDjWr3MwdnXYdLVJFfByHj5LuO1HLOP34Cfa/?=
 =?us-ascii?q?g1KxkDZk3vzGPaPuAo/LLnfdlLftZLF96kBayAUt19BS/IxUCr4fL/LpQEPxt8?=
 =?us-ascii?q?LXDgU/MwOqx+brEtJ91pkRWW6XGK+WLLvSsUOU5uIoO+SMYI4VuDXjJPQ/6P/u?=
 =?us-ascii?q?kGQ0mVscfamvwJsWZ2q0HvVgI0WFf3Xshs0NHnsNvgo7VObqkkGNUSZPZ3auWK?=
 =?us-ascii?q?Ix/jE7B5inDYffXI+th6aN3CemHpJMYGBGBUuBEXPpd4WCRvcNZzieIs5nkjwY?=
 =?us-ascii?q?S7ehT5Ut2g2ptA//07BnNPbb+jUEtZL/09h4/+/TlRYs+jBuDMSd1GeNT2dznm?=
 =?us-ascii?q?4TQz823aZ/oVFyy1uZ0Kh4heBYGsJX5/9TTgg6MpvcxfRgC9/uQgLBYsuJSFG+?=
 =?us-ascii?q?T9q8GjExTtUxw9wUb0ZnAdqijAvO3y6rA78TiryKC4Y48qPa33jtOcl9z2zK27?=
 =?us-ascii?q?Umj1kjWsFPL3GphrZj9wjPAI7Ei0aZmLysdagG2C7N9X2MzWyBvExDVA5wUKPF?=
 =?us-ascii?q?XW0QZ0fMrNT54F/CQKGqCbg9LgRBzsuCILNQatL1lVVGWOvjONPGbm2sgWiwGw?=
 =?us-ascii?q?iHyqmMbIXwfWUdxzvSCE4DnwAX/naGMAw+Czylo2LfCjxuCF3ub1nt8el4tHO0?=
 =?us-ascii?q?UEs0wxuWYE1m0rq/4gQViuCES/MPwrIEvz8spChuE1ajwd3aEdqAqBBnfKVHf9?=
 =?us-ascii?q?w95kxK1WbYtwx7I5yhILpuhl8YcwRroUzu0w97BZlHkcgvtHkq1hZ9KbqE0FNd?=
 =?us-ascii?q?cDOVxYzwOrzSKmn14BCva67X1kvC0NqM/acP8vA4q1TlvAGmDUci93Rn099I03?=
 =?us-ascii?q?qT/JnKDQwSUY7vXUYz7RR1u7baYiwl7YPOyXJsKbW0siPF298xHuQlzgivfthB?=
 =?us-ascii?q?P6KEDgP9CNAaCNW0J+wsmFipaQwEMftW9K41OcOmavSH1LSqPOZmgDKpk2BH7J?=
 =?us-ascii?q?ph3UKL8ip2UvTI0Iodw/GEwguHUC/xjVe8sszthY9IfzATHmqlxijiC45cfaly?=
 =?us-ascii?q?fYcNCWezLMy73NR+h5jxW3FG8F6vHU8J2MiseRCKdVzywRVQ1VgLoXyggSa41T?=
 =?us-ascii?q?10nC0zoaqFwSPOxP7udBwZNW5RRWlulEvjLpKwj98HQkeodQ8plB2+6Eb+xqhb?=
 =?us-ascii?q?orl/LmbJTUdJeSj2M39tUq+qurWeZM5P7YsisT9LX+SkfVCaVrn9rgMa0iPiBW?=
 =?us-ascii?q?dfxCo3dyq3upX/hBF6jGOdLHBurHvWY81wxBHf5MDCSv5VxDYJWC54iTzPDFim?=
 =?us-ascii?q?I9ap5cmUl4vEsu2mVWKuTIdTcSrozYOHrie7/ndlAR68n/CynN3oDw463DT/19?=
 =?us-ascii?q?lrUyXIsRn9bpPq16S8LeJoYE1oCEXg5Mp9H4F0ipEwi40I2XgGmpWV+mIKkGfp?=
 =?us-ascii?q?PtVcw67+bnsNRTgQzt7R4Qjl3lBjL32Ty4L4UHWd3tVuZ92gbmwK3SI96thACL?=
 =?us-ascii?q?2I47xcgSt1vl24oBrSYfdnnzcR0/su6GMAjOEPtwog1SGdArEUHUlFMi3gjRWI?=
 =?us-ascii?q?79airKpJYGaja6S/1E17ndq5FrGNvhlcWGrlepclBSJw68R/MFHW33Hp5IDrZs?=
 =?us-ascii?q?LQbc4NuR2OiBjPkfJVKJ0qm/oOhCpnP3/9vHI/x+46ixxuwY+1vIydJ2px+6K5?=
 =?us-ascii?q?BwZSNifpaMML5jHtkaFek96K34CoG5VtADQKU4HuTfK1CzISrvXnOh2KED09rH?=
 =?us-ascii?q?ebBLXeERWe6Edgs3LADZSrO2uLK3keyNVoXAOdK1BHgAAIQDU6mYY0GRuwy8zm?=
 =?us-ascii?q?dEd5+yod5lrlqhZXzuJoNh//UnrQpQuyazc0ToSfIwRS7g1Y+0jVNsme5PppHy?=
 =?us-ascii?q?5E5p2hsBCNKmuDagRKF24JX1KLB0v5Mrmy/9XA8PWYBumjL/vIe7qOsvdTV/OJ?=
 =?us-ascii?q?xZKpz4tn8CyANsSJPnl+EfI73lBPUmx+G8Tcgz8PUTAYlzrRb86Hoxex4i12rs?=
 =?us-ascii?q?ei8PTyRQLg/42PB6FJMdVo/RC2jryON+qRhCZ/NDZZ2YkAxX7OyLgDwlESjzti?=
 =?us-ascii?q?eCWqEbQFrSTNVr7fmrdLDx4HbCN+LMtI4Lw93glOOs7bi8n51r1ijv4yBFdKS0?=
 =?us-ascii?q?bhmtyyZcERJ2G9NVXHBFuENbicJD3Lxd33br24SbFKkOpUsBiwsy6BE0D/JjSD?=
 =?us-ascii?q?iyXpVxe3PO5WkSGUJwZet5+9cxp3DWjjTcnrahm6MN9xkD03zqc4hnLMNW4ALz?=
 =?us-ascii?q?d8d1lBoaGX7SNdmv9/AXBO7mJ5LemYnCaU9/XYKpcTsfdxHit4jf5V4HQkxLtT?=
 =?us-ascii?q?9yxEQP11mC3Prt9huV2mk++PyiZ5XxpKsDpEmIWLvUB6M6XD6pZAQWrE/A4K7W?=
 =?us-ascii?q?iICxUFvd1lCtjuu6BW0tfOlaLzJy1E89Lb5sYcA8nUKMSaMHsuKxbpGTjUDBcb?=
 =?us-ascii?q?Qj6vL23Qm0tdkPTBvkGS+9cWo4bh0KAJRrBeXVp6XqcWA1poWsYFLJhyVzUMmK?=
 =?us-ascii?q?SeysUP4Cz65FPVRcNHrtXEW+iUDPHHNjmUl/9HagEOzLe+Kp4cfMWv301kd0k/?=
 =?us-ascii?q?n4nQHUfUdc5CrzcnbQIupkhJtn9kQTt3kwjsaRuoyHsSE+Ok2xAxlw1yaPgs8z?=
 =?us-ascii?q?Gq5E04bBKerSgolWE1mNP4kXWfdyP3IK6sXIZQTS3uuB5iHIn8RlNZZBOzkQRA?=
 =?us-ascii?q?PTbLR64Z25dpa2FnzivVuJRPBdZ1ZpBgSTVW7tayMaZ7mW9AozmqkBcUrdDODo?=
 =?us-ascii?q?FvwU5zKcah?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AMAQCBKwFch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgjsnCoNviHeLKYINFJkkFxgTAYd1IjgSAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKS+CNiQBgmEBAQEBAwECIBAgJgYJAQEBAQgVAQQCJgICAxwTJQIEAQ0FBQODG?=
 =?us-ascii?q?YICAQSlYwEBAW6BL4otgQuLEIFXP4QjiAWCVwKLG5UWBwIcggaPDQgYkR+Ie49?=
 =?us-ascii?q?fgSc2gXYzGiODPIIkAxeOHXKBBQEBjHyBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0AMAQCBKwFch0O0hNFjHAEBAQQBAQcEAQGBZYExgjsnCoN?=
 =?us-ascii?q?viHeLKYINFJkkFxgTAYd1IjgSAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmEBA?=
 =?us-ascii?q?QEBAwECIBAgJgYJAQEBAQgVAQQCJgICAxwTJQIEAQ0FBQODGYICAQSlYwEBAW6?=
 =?us-ascii?q?BL4otgQuLEIFXP4QjiAWCVwKLG5UWBwIcggaPDQgYkR+Ie49fgSc2gXYzGiODP?=
 =?us-ascii?q?IIkAxeOHXKBBQEBjHyBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="64738699"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 30 Nov 2018 04:27:57 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726593AbeK3XhB convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Fri, 30 Nov 2018 18:37:01 -0500
Received: from eu-smtp-delivery-151.mimecast.com ([207.82.80.151]:38840 "EHLO
        eu-smtp-delivery-151.mimecast.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726549AbeK3XhB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 18:37:01 -0500
Received: from AcuMS.aculab.com (156.67.243.126 [156.67.243.126]) (Using
 TLS) by relay.mimecast.com with ESMTP id
 uk-mta-144-4qFN5sBKP82d6eOpE1nuuw-1; Fri, 30 Nov 2018 12:27:50 +0000
Received: from AcuMS.Aculab.com (fd9f:af1c:a25b::d117) by AcuMS.aculab.com
 (fd9f:af1c:a25b::d117) with Microsoft SMTP Server (TLS) id 15.0.1347.2; Fri,
 30 Nov 2018 12:27:58 +0000
Received: from AcuMS.Aculab.com ([fe80::43c:695e:880f:8750]) by
 AcuMS.aculab.com ([fe80::43c:695e:880f:8750%12]) with mapi id 15.00.1347.000;
 Fri, 30 Nov 2018 12:27:58 +0000
From: David Laight <David.Laight@ACULAB.COM>
To: 'Dave Rodgman' <dave.rodgman@arm.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "akpm@linux-foundation.org" <akpm@linux-foundation.org>
CC: "herbert@gondor.apana.org.au" <herbert@gondor.apana.org.au>,
        "davem@davemloft.net" <davem@davemloft.net>,
        Matt Sealey <Matt.Sealey@arm.com>,
        "nitingupta910@gmail.com" <nitingupta910@gmail.com>,
        "markus@oberhumer.com" <markus@oberhumer.com>,
        "minchan@kernel.org" <minchan@kernel.org>,
        "sergey.senozhatsky.work@gmail.com" 
        <sergey.senozhatsky.work@gmail.com>,
        "sonnyrao@google.com" <sonnyrao@google.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        nd <nd@arm.com>
Subject: RE: [PATCH 2/8] lib/lzo: clean-up by introducing COPY16
Thread-Topic: [PATCH 2/8] lib/lzo: clean-up by introducing COPY16
Thread-Index: AQHUiKKcsNRVxoInU0ado7SP4WwMWKVoPj+w
Date: Fri, 30 Nov 2018 12:27:58 +0000
Message-ID: <ccb719dd52354cfab8def75689d675af@AcuMS.aculab.com>
References: <20181130114715.27523-1-dave.rodgman@arm.com>
 <20181130114715.27523-3-dave.rodgman@arm.com>
In-Reply-To: <20181130114715.27523-3-dave.rodgman@arm.com>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-transport-fromentityheader: Hosted
x-originating-ip: [10.202.205.107]
MIME-Version: 1.0
X-MC-Unique: 4qFN5sBKP82d6eOpE1nuuw-1
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8BIT
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Dave Rodgman
> Sent: 30 November 2018 11:48
> From: Matt Sealey <matt.sealey@arm.com>
> 
> Most compilers should be able to merge adjacent loads/stores of sizes
> which are less than but effect a multiple of a machine word size (in
> effect a memcpy() of a constant amount). However the semantics of the
> macro are that it just does the copy, the pointer increment is in the
> code, hence we see
> 
>     *a = *b
>     a += 8
>     b += 8
>     *a = *b
>     a += 8
>     b += 8
> 
> This introduces a dependency between the two groups of statements which
> seems to defeat said compiler optimizers and generate some very strange
> sequences of addition and subtraction of address offsets (i.e. it is
> overcomplicated).
> 
> Since COPY8 is only ever used to copy amounts of 16 bytes (in pairs),
> just define COPY16 as COPY8,COPY8. We leave the definition to preserve
> the need to do unaligned accesses to machine-sized words per the
> original code intent, we just don't use it in the code proper.
> 
> COPY16 then gives us code like:
> 
>     *a = *b
>     *(a+8) = *(b+8)
>     a += 16
>     b += 16

You probably actually want:
	t1 = *b;
	t2 = *(b+8);
	*a = t1;
	*(a+8) = t2;
	a += 16;
	b += 16;

	David

-
Registered Address Lakeside, Bramley Road, Mount Farm, Milton Keynes, MK1 1PT, UK
Registration No: 1397386 (Wales)

