Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 20:28:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9388158041B;
	Tue, 27 Nov 2018 04:19:51 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 04:19:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A/8iE5RTarwdCEW/KyDNaSlfzGtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRCFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94VQnZPUMZPWiBYG4+x?=
 =?us-ascii?q?cpEAAPcdMOlFqYnzu0cBrQWjCgWyGejjzj9FimLz0aA8zu8vExzJ3BY4EtwOrn?=
 =?us-ascii?q?rasdv7OqQVX++3wqnHwjrNb+hO2Tr/84XEbhMsrOuQUb9qbcbd1U8iHB7FgFWK?=
 =?us-ascii?q?rozlOiuY2OsLs2iB7upvSf+khnM9pAF1pjig2NsshZLOhokIy1DP6Dh3z5gvJd?=
 =?us-ascii?q?2iUkFwfNmpH4VWtyGANot5XtkuTHpytyY+zr0Jp4K7czMNyJk82xHfbPiHc4yS?=
 =?us-ascii?q?7R34U+aROy13iGh5d7K4gha/6E6twfD/WMmsyFtGsDZJn93WunwQ2RHf9NKLRu?=
 =?us-ascii?q?Z+80u9wzqC1gLe5vlLLE01j6bXNZAsz74qmpYNr0jOHDX6lFvogKKUcEgv5/Km?=
 =?us-ascii?q?5P79Yrr8o5+RL490hR/6MqQpgsG/H+s4PRYUX2SB+uSzyqfj/UvnT7VOlPE2lb?=
 =?us-ascii?q?PZsJ/CKcQaoK62HRNV35495xqjCzqqyskUkHcZIF5fZR6KjJTlN0vPLf36Ffu/?=
 =?us-ascii?q?hk6jkDZvx/DIJL3hBZDNI2DHkLfge7Z99kFdxBMwzd9B/ZJUDK8OIPbqVk/2ut?=
 =?us-ascii?q?3YCAE2Mxavzub5B9VyyJkeVXiMAqCHKqPSt0GH5uY1L+mLfo8Vty7xK+I56P72?=
 =?us-ascii?q?kX85hVgdcLGt3ZsWa3C3AO5qIkqEYXf3htcBEGEKvhcxTeDwiV2CVyJTaGi2X6?=
 =?us-ascii?q?4m+j47D4emB5/ZRo+xmLyBwDu7HppOa2BGEF+MEGvoeJ+DW/sWaCKSP9VukjoL?=
 =?us-ascii?q?VbW6T48h1BeutBL1yrZ9L+rU/DEYuozn1NRv++LTkhQy/yRuD8uBy2GNU310nm?=
 =?us-ascii?q?QQSj8026Bwv1ZxylSE0ah+hfxYEsde5/dIUgc8KJ7dwPZ2C9H0WgLdYNiJTEyq?=
 =?us-ascii?q?TcmhATE0Vtgx2cMBY15hG9W+iRDOxzClA6QVl7yMB5w46Ljc0GLzJ8tmz3bG1a?=
 =?us-ascii?q?8hj0QpQ8dVNG2mgLJ/+BbXB4LTj0qZkKOqf7wG3CHR7GeD0XaOvEZAXQ5zS6rF?=
 =?us-ascii?q?W2oTZk/Xrdvj4EPCQKSjCbAmMgtH1M6DJbFGatzvjVVaWvjjPM7SbH62m2e1HR?=
 =?us-ascii?q?yI3K+DbJL2e2UB2yXQEFULnBoN/XmYLwQ+Bj2uo2TFDDNwE1LjZEfs8ep7qHO/?=
 =?us-ascii?q?VUI0ywCKb0t817u64BIVhPqcS+8N0bIAoisutzJ0HFOl1dLMF9WAvxZhfLlbYd?=
 =?us-ascii?q?4l/VhIz3zZuBJnMpygNa9igEUefBpxv0710xV3C4NAkdUlrX8wzQpyL76Y301F?=
 =?us-ascii?q?dz+CwZ/wPbjXIHHo/B+zc67Wxk3e0NGO96cT6fQ4rlLjvB2pFksi6Xlnz8NZ03?=
 =?us-ascii?q?yG5pXODQoSV53xX10z9xh7obHafyY865nV1X1qLam7rDvC18g1C+sizxaqZ81f?=
 =?us-ascii?q?P7+cFA/uD80aANCjJ/Yum1e3YRMLIuBT+LQvMMO7avSJwqirPOVnnDK4lmlH5I?=
 =?us-ascii?q?F90kSR9ytzUOLI3pAFw+2G0QuDTTvzkFChssXvk4BeeT4SBna/yTTjBINJZqxy?=
 =?us-ascii?q?YJwHBnu0L8y2xtVxnZjtW3FD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZRRGljkVjjO5K0gM0dXESyaQgmigGl5Ufjy6dH?=
 =?us-ascii?q?vqt/K3TcTllSfyjxKWFvSa+wtruEY85S55IkqyRXUOKgYV+ETr7xuQcV0yTmH2?=
 =?us-ascii?q?FG3jA0aymquonlnxx9kG+cLHdzoGDZeM1q3hff+drcSOVV3joHQil4lDbWCkK9?=
 =?us-ascii?q?P9mv4dWbiZPDvvqiWGKmU51ZaTPrwp+YtCun+W1qBgWyn/Kpld39Egg60ij728?=
 =?us-ascii?q?NxVSrSrxb8YYjr16KkPuJhZURoAF7868xnGoBxiIcwhZcQ2WQEiZWR53YIjWDz?=
 =?us-ascii?q?MdBD06LkcHUNXSILw8LS4AX92ExsNHWJy5j7VnWcxMtsfN26YmIQ2iIg4MFGEq?=
 =?us-ascii?q?aU7LpYnSRrplq0tx7eYf94nj0F0/sh9GYag/0VuAoq1iidAaodHUhCMSzsihSH?=
 =?us-ascii?q?9da+rKpMaWarcLiw0ld+nN+7ALGDpAFcRGj2epM4ESBs6cV/NUrG0Gfv5YH8ZN?=
 =?us-ascii?q?nQcdUTuwWRkxfBjOhaMog9l/QUiip8JWLyo2clxPUlghx00pG3p4yHK2Rr/KKk?=
 =?us-ascii?q?DR9ULDz1Z8UP+j7ziaZShNqZ34eqHp95ADUEQIPoTe60EDIVrfnnKwGOEDgmpn?=
 =?us-ascii?q?aaA7XfGxKf6Fx9r3LOCJ2rM3CXJH8EzdRtXhWdJUpfgBwKUzU+hJI2CgeqxMn5?=
 =?us-ascii?q?ekdj+j8R/kL4qgdLyu9wLBbwSGDfpAO1ajsuTJifMQFb7gVD50fTLMyf4fh/Hy?=
 =?us-ascii?q?Be/p29sgONLnaXaBhPDWEMQkaEHUzsPqGy5dnc9OiVHui+IOHLYbqQsuxSTeuI?=
 =?us-ascii?q?yYis0ot7/DaMK8OPMWN5D/Ag3kpDXHZ5G9nWmjkVSiwXkT7NYNCfpBum5iJ3qc?=
 =?us-ascii?q?W/+uzxWA3z/YuPF6dSMdJ39hG2hqeDKveQhDtjJjZezJ8M3njIyL4Q3FMJjyFu?=
 =?us-ascii?q?dj+tEakPtCLXTaLQnLNXAAAfay9pKMRI6Kc81BFXOcHHktP1yqJ4jvktBldFS1?=
 =?us-ascii?q?Phm8KpZc8LI22nN1PHHkGLNLuYKj3R3sH3erixSblRjOVSqh2xtiyXE07lPjSf?=
 =?us-ascii?q?iTbpUwqjPv1LjCGeJBZeop2ycg5xCWj/S9Lrcge0MMJsgj0s37I1hmnGNWodMT?=
 =?us-ascii?q?Vnd0NNr7uQ7T5Xg/llGmxB6GZlIveAmyqD8+bYLZMWu+NxAitoj+Ja/Gg6y7xN?=
 =?us-ascii?q?4SFYRfx1nTHeocJ0r166kumA1DxnXQFKqjZKgoKLoEpjNb/Y9plGRXbL4hYN4X?=
 =?us-ascii?q?+MBBQNottvEsfvtLxIytjTiKLzLy9P8tLO8ssaAsjUKcSHP2IgMBrpAjHUCgQF?=
 =?us-ascii?q?QCWvNWHegUxdjf6T+meUrpg8tpjjhp4ORqVHW1wyE/NJQnhiSdgPLdF1WTUpip?=
 =?us-ascii?q?afjcgB/334qwPeF+tAuZWSe/SIAP6nAj+dibRYbRxAwPvDIJ4JP8Wv1kp4a1I8?=
 =?us-ascii?q?lo3OH0fMV9dlqSplagY+p19EtnN5SztgiAredgqx7SpLRraPlRksh147PbUg?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAABNNf1bh0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGDayeaOJI1hHcUgV8sEwGIdiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?2JIJjAwMBAiQLAUYGCQEBPhIDVBkFgxyCAgQBpgkzii2HYoQrgVc/gRGHe4VzA?=
 =?us-ascii?q?okdBgSHPo8nBwKRJSOJYocpLJlYC4F7TSODPJBcPjOBBQEBjWoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AkAABNNf1bh0O0hNFkHQEBBQEHBQGBUwYBCwGDayeaOJI?=
 =?us-ascii?q?1hHcUgV8sEwGIdiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JIJjAwMBAiQLA?=
 =?us-ascii?q?UYGCQEBPhIDVBkFgxyCAgQBpgkzii2HYoQrgVc/gRGHe4VzAokdBgSHPo8nBwK?=
 =?us-ascii?q?RJSOJYocpLJlYC4F7TSODPJBcPjOBBQEBjWoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="64152088"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 27 Nov 2018 04:19:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731255AbeK0XQm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 18:16:42 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:46862 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730909AbeK0XQm (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 18:16:42 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: eballetbo)
        with ESMTPSA id 4B6D027964E
From: Enric Balletbo i Serra <enric.balletbo@collabora.com>
To: lee.jones@linaro.org
Cc: gwendal@chromium.org, drinkcat@chromium.org,
        linux-kernel@vger.kernel.org, groeck@chromium.org,
        kernel@collabora.com, bleung@chromium.org,
        Olof Johansson <olof@lixom.net>
Subject: [PATCH v3 1/8] mfd / platform: cros_ec: use devm_mfd_add_devices.
Date: Tue, 27 Nov 2018 13:18:42 +0100
Message-Id: <20181127121849.23975-2-enric.balletbo@collabora.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181127121849.23975-1-enric.balletbo@collabora.com>
References: <20181127121849.23975-1-enric.balletbo@collabora.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Use devm_mfd_add_devices() for adding cros-ec core MFD child devices. This
reduces the need of remove callback from platform/chrome for removing the
MFD child devices.

Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
---

Changes in v3:
- Removed cros_ec_remove from include file.

Changes in v2:
- Use devm only for the cros-ec core.

 drivers/mfd/cros_ec.c                 | 14 +++-----------
 drivers/mfd/cros_ec_dev.c             |  1 +
 drivers/platform/chrome/cros_ec_i2c.c | 10 ----------
 drivers/platform/chrome/cros_ec_lpc.c |  4 ----
 drivers/platform/chrome/cros_ec_spi.c | 11 -----------
 include/linux/mfd/cros_ec.h           | 10 ----------
 6 files changed, 4 insertions(+), 46 deletions(-)

diff --git a/drivers/mfd/cros_ec.c b/drivers/mfd/cros_ec.c
index fe6f83766144..6acfe036d522 100644
--- a/drivers/mfd/cros_ec.c
+++ b/drivers/mfd/cros_ec.c
@@ -129,8 +129,8 @@ int cros_ec_register(struct cros_ec_device *ec_dev)
 		}
 	}
 
-	err = mfd_add_devices(ec_dev->dev, PLATFORM_DEVID_AUTO, &ec_cell, 1,
-			      NULL, ec_dev->irq, NULL);
+	err = devm_mfd_add_devices(ec_dev->dev, PLATFORM_DEVID_AUTO, &ec_cell,
+				   1, NULL, ec_dev->irq, NULL);
 	if (err) {
 		dev_err(dev,
 			"Failed to register Embedded Controller subdevice %d\n",
@@ -147,7 +147,7 @@ int cros_ec_register(struct cros_ec_device *ec_dev)
 		 * - the EC is responsive at init time (it is not true for a
 		 *   sensor hub.
 		 */
-		err = mfd_add_devices(ec_dev->dev, PLATFORM_DEVID_AUTO,
+		err = devm_mfd_add_devices(ec_dev->dev, PLATFORM_DEVID_AUTO,
 				      &ec_pd_cell, 1, NULL, ec_dev->irq, NULL);
 		if (err) {
 			dev_err(dev,
@@ -181,14 +181,6 @@ int cros_ec_register(struct cros_ec_device *ec_dev)
 }
 EXPORT_SYMBOL(cros_ec_register);
 
-int cros_ec_remove(struct cros_ec_device *ec_dev)
-{
-	mfd_remove_devices(ec_dev->dev);
-
-	return 0;
-}
-EXPORT_SYMBOL(cros_ec_remove);
-
 #ifdef CONFIG_PM_SLEEP
 int cros_ec_suspend(struct cros_ec_device *ec_dev)
 {
diff --git a/drivers/mfd/cros_ec_dev.c b/drivers/mfd/cros_ec_dev.c
index 8f9d6964173e..ff788d3e6d5f 100644
--- a/drivers/mfd/cros_ec_dev.c
+++ b/drivers/mfd/cros_ec_dev.c
@@ -493,6 +493,7 @@ static int ec_device_remove(struct platform_device *pdev)
 
 	cros_ec_debugfs_remove(ec);
 
+	mfd_remove_devices(ec->dev);
 	cdev_del(&ec->cdev);
 	device_unregister(&ec->class_dev);
 	return 0;
diff --git a/drivers/platform/chrome/cros_ec_i2c.c b/drivers/platform/chrome/cros_ec_i2c.c
index ef9b4763356f..9a009eaa4ada 100644
--- a/drivers/platform/chrome/cros_ec_i2c.c
+++ b/drivers/platform/chrome/cros_ec_i2c.c
@@ -317,15 +317,6 @@ static int cros_ec_i2c_probe(struct i2c_client *client,
 	return 0;
 }
 
-static int cros_ec_i2c_remove(struct i2c_client *client)
-{
-	struct cros_ec_device *ec_dev = i2c_get_clientdata(client);
-
-	cros_ec_remove(ec_dev);
-
-	return 0;
-}
-
 #ifdef CONFIG_PM_SLEEP
 static int cros_ec_i2c_suspend(struct device *dev)
 {
@@ -376,7 +367,6 @@ static struct i2c_driver cros_ec_driver = {
 		.pm	= &cros_ec_i2c_pm_ops,
 	},
 	.probe		= cros_ec_i2c_probe,
-	.remove		= cros_ec_i2c_remove,
 	.id_table	= cros_ec_i2c_id,
 };
 
diff --git a/drivers/platform/chrome/cros_ec_lpc.c b/drivers/platform/chrome/cros_ec_lpc.c
index e1b75775cd4a..14684a56e40f 100644
--- a/drivers/platform/chrome/cros_ec_lpc.c
+++ b/drivers/platform/chrome/cros_ec_lpc.c
@@ -327,7 +327,6 @@ static int cros_ec_lpc_probe(struct platform_device *pdev)
 
 static int cros_ec_lpc_remove(struct platform_device *pdev)
 {
-	struct cros_ec_device *ec_dev;
 	struct acpi_device *adev;
 
 	adev = ACPI_COMPANION(&pdev->dev);
@@ -335,9 +334,6 @@ static int cros_ec_lpc_remove(struct platform_device *pdev)
 		acpi_remove_notify_handler(adev->handle, ACPI_ALL_NOTIFY,
 					   cros_ec_lpc_acpi_notify);
 
-	ec_dev = platform_get_drvdata(pdev);
-	cros_ec_remove(ec_dev);
-
 	return 0;
 }
 
diff --git a/drivers/platform/chrome/cros_ec_spi.c b/drivers/platform/chrome/cros_ec_spi.c
index 2060d1483043..6cfbc2835beb 100644
--- a/drivers/platform/chrome/cros_ec_spi.c
+++ b/drivers/platform/chrome/cros_ec_spi.c
@@ -685,16 +685,6 @@ static int cros_ec_spi_probe(struct spi_device *spi)
 	return 0;
 }
 
-static int cros_ec_spi_remove(struct spi_device *spi)
-{
-	struct cros_ec_device *ec_dev;
-
-	ec_dev = spi_get_drvdata(spi);
-	cros_ec_remove(ec_dev);
-
-	return 0;
-}
-
 #ifdef CONFIG_PM_SLEEP
 static int cros_ec_spi_suspend(struct device *dev)
 {
@@ -733,7 +723,6 @@ static struct spi_driver cros_ec_driver_spi = {
 		.pm	= &cros_ec_spi_pm_ops,
 	},
 	.probe		= cros_ec_spi_probe,
-	.remove		= cros_ec_spi_remove,
 	.id_table	= cros_ec_spi_id,
 };
 
diff --git a/include/linux/mfd/cros_ec.h b/include/linux/mfd/cros_ec.h
index e44e3ec8a9c7..706dd724de52 100644
--- a/include/linux/mfd/cros_ec.h
+++ b/include/linux/mfd/cros_ec.h
@@ -281,16 +281,6 @@ int cros_ec_cmd_xfer(struct cros_ec_device *ec_dev,
 int cros_ec_cmd_xfer_status(struct cros_ec_device *ec_dev,
 			    struct cros_ec_command *msg);
 
-/**
- * cros_ec_remove() - Remove a ChromeOS EC.
- * @ec_dev: Device to register.
- *
- * Call this to deregister a ChromeOS EC, then clean up any private data.
- *
- * Return: 0 on success or negative error code.
- */
-int cros_ec_remove(struct cros_ec_device *ec_dev);
-
 /**
  * cros_ec_register() - Register a new ChromeOS EC, using the provided info.
  * @ec_dev: Device to register.
-- 
2.19.1

