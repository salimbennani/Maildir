Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 21:39:31 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8051258037D;
	Thu, 22 Nov 2018 03:34:39 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 03:34:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9fLsvBa0pbs1UODTGnwf30H/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm+Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQctQGS2RBQMtdTjVND56m?=
 =?us-ascii?q?YIQSE+cOIOBYoZXhqFsQsBSyGxSnCOfvxzNVg3P727Ax3eY8HgHcxAEuH8wAvm?=
 =?us-ascii?q?naotv2M6kdU+61w6bHwzXYd/Nb2yzw5JTLfx07vf2BR658fdbXxEIyFw3FlFKQ?=
 =?us-ascii?q?qYn9Mj2a0OQNqWmb4PZ9Xu+ykWEnrwVxrSazxsg3jYnCm4MVwU3Z+ypn2oY1P8?=
 =?us-ascii?q?e3Q1N8bNG6FptQrSCaOJdsTsw5WW5ovCI6xaMauZGgeygH04goxxnba/yDaYeH?=
 =?us-ascii?q?+RXjVPyLLjtimH1lf7e/ig+0/EO9yeP8TtG53EhWoidBiNXAq34A2wLJ5sSaSf?=
 =?us-ascii?q?Zx4l2t1DeN2gzL5exJIFo4mbTVJpMh2LI8iIQfvEbZEiPohkn7jqmbfVg+9Oey?=
 =?us-ascii?q?8eToeLDmq4ecN4BqjgH+NbwjmtKwAesmKAgCRWub9vqm1L3l40L5RK9Gjvoskq?=
 =?us-ascii?q?nWqJzaJMIbqbClAwJNzIov9xKyAy273NkWg3ULNk9JdRGbg4TzOlzDIuj0DfKl?=
 =?us-ascii?q?jFStlDdryerGPrrkApjVKnjDkbHhfaty6kJFywo808pf55RKBbEFOf7zXUHwtN?=
 =?us-ascii?q?rGAR8jKAG03ennB8tn1o8EWmKAHLWZMKXMvl+M/O4vJPOMZIANtDbnN/cl/+Lu?=
 =?us-ascii?q?jWM+mVIFeamp3JgXZ26iEvVpPkWUen7sgtYHEWcXsQsyVu3qiFueUTFNY3a+Rb?=
 =?us-ascii?q?4z5jY+CIi+F4fMWpitgKCd3Ce8BpBWZnpJClGQEXjycIWIQfcMaD+ILc9nnTwJ?=
 =?us-ascii?q?TryhS44n1RGzuw720btnLuzI+iIGsZLvzsR65+rWlRsq7zx7E9yd032RT2Fzhm?=
 =?us-ascii?q?4IRTg2075lrUx+zVeD1654g/tDGNxX5vNJVBo6NJHGw+x7DdDyRhzOftOTRFm6?=
 =?us-ascii?q?RdWmBCk7TsgtzN8Wf0Z9B9KigwjZ0CqxA78VkL+LCIYu8q3G3Xj8PMJ9y3fA1K?=
 =?us-ascii?q?k8gFgqWMpPNWu6hqFh8wjfHZLGk0Kcl6yyb6QTwDbN9HufzWqJpExYUxR/UaPf?=
 =?us-ascii?q?UXAbZ0vZt9L55kzZQr+qCLQnNBZByMGYJqtLbN3pkUtJRPP5NNvCZGKxnn+6BQ?=
 =?us-ascii?q?yUybOUcIrqZ2Id0T3AB0cejQAc42yKNQgkCSenuGLREjpuGVXrY0Pv9Ol+rGi2?=
 =?us-ascii?q?Tks1zwGMck1g2KC5+h8ThfyAVfwT2qgItzsmqzVxBFy9xc7ZC8Kcpwp9e6VRec?=
 =?us-ascii?q?4y701Z1W3HrQB9PoavL6Z5hlEAdQR6pEfu1xRxCoVdnskmtnIqzAxuKa2G1FNN?=
 =?us-ascii?q?bS+X3Zf1OrfPMGn94Aiva7LK2lHZyNuW5qYP6PE/q1X/vAGoFlAu82l939lSyX?=
 =?us-ascii?q?uc4pTKDAwdUZ/qVkY39h56p6zVYyUn5oPU02FsPrewsjPYx90pA+4lwA66f9hD?=
 =?us-ascii?q?KKOECBPyE8oCCse0LOwlhVeoYQwEPexI76E0It6peOGA2K6oO+ZggimrjWBG4I?=
 =?us-ascii?q?B7z0KN+DBwSu/O35YZ3f6Y2hGLWCv7jFekqsr3g5xLZSkOHmqjzijpHI5QZrBo?=
 =?us-ascii?q?cYkXE2uvIs23yc94h57iQHNY8F+jB1Ub2M6mYxaSblr93RFO2kQTu3CohSy4zz?=
 =?us-ascii?q?lsmTEzsqWfxDDOw/jldBcfIG5LRXVtgk32IYepiNAWRk6oYBYzlBuk/Er127JU?=
 =?us-ascii?q?pKBiIGbNW0dIeC72InpmUquxsLqCfsFO5IkpsSVRTOSzf1SaRqThrBsd1iPpB3?=
 =?us-ascii?q?FeyywjdzG2ppX5mAR3iWKcLHpprHvVY9pwxQrZ5NHHQf5R3zwGRDR3iDXNB1i8?=
 =?us-ascii?q?OcWp8suQl5vZru++UGehXIVJcSb31YOAqDe75WpyDB29hf+zgN7nEQs90SPhzN?=
 =?us-ascii?q?llTybIrBX9Yontyau6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Ajk11dkLn6TxYL5V3Odz9BlZ9m7ZGMWxy0849pLCK?=
 =?us-ascii?q?eS8LxLgy91rkCkogLWZPh3hi0dxuc26H4Gn+EJvxIgziaHDbATB0VYPTHsmA6O?=
 =?us-ascii?q?79Cxt6hXYGevcb6t1Etxh9yhDbeCoh1CV3b9YJstAShw7sBnOlLWzHLz8p3keM?=
 =?us-ascii?q?XXbd8Lsx2UkhTAgPJPJJM/iPUKnjZnNnznvXI+1eE7lxNu0Iq+vIiGLWVt4a24?=
 =?us-ascii?q?DgRZNj3ze8Mc5DXtgbxCkcaR2oClBo9hFSkTXJv0UfKoFyoftejgNwaLCjE9q2?=
 =?us-ascii?q?2UGbzCHQ+E80dmrmnCE5SqN3GROXkYws9uRBibJExDng8UWC82kYI+FgCv3Mbh?=
 =?us-ascii?q?alt25igN5l7krRtB0vlnOAP4UmfbuQekcDM0SIWEIRpS7wFC4VrVMMOE4uJyGS?=
 =?us-ascii?q?FY4oOurAiXJmOHYARICHkDWlaYCFD7Irmu+d7A/vCaBuWkKvvBf66OpfZCV/uS?=
 =?us-ascii?q?xpKvz4hm/yuKNsqVJXlvFPk72ktFXXBkFMXVgTQPSyoLly3Ta86Xvguz+ipyrs?=
 =?us-ascii?q?qn6vTkRBrv5ZeTC7tVKdhu+xe2gbqaN+6Nnil5LyxU1ogLxX/Ox7gSx1oSiyBo?=
 =?us-ascii?q?dzmwHrUMry/NTKTMmqBJCx4XcT98NMxN76gkxAlCJdbbis/p1r5/lvM1C0lKVV?=
 =?us-ascii?q?3imsGqZMwGOWK9NEnABEaEKruGPyDLw9rsbKO4SL1QivhUthKqtTaaFU/jIiqM?=
 =?us-ascii?q?lz3zWx+zNuFMiTmRPAZCt4GlbhZtFW/jQcr8ZR2mK9B3lyM5wL0uinPONG4RKj?=
 =?us-ascii?q?x8c0JLrr2N4iJUmPR/G2pd7nV7KemIgTqW7+7dKpwOq/tkHjx0l/5G4HQ907ZV?=
 =?us-ascii?q?8CBERPlvlCTOtNJhv1GmnfeJyjd8VBpOqzBLhJ+EvEl4OKXZ8IVAVmjA/B4X8W?=
 =?us-ascii?q?qQDBEKrcN/CtLzo6BQ1sTPlKXrJTZC6d3U+84cB8nSKM2fMXshMQDmGDjbDAYe?=
 =?us-ascii?q?ST6rNGffh1FSkf2I932VqIQ6pYbomJYUVrBbU1k1RbsmDRFhEdFEIpBxUygMlb?=
 =?us-ascii?q?+dhdQPo32ko0r/XsJf673BTPOZSd/mLDKUkbNDLxpA+r7iN41bYoD9wU1pLFNz?=
 =?us-ascii?q?mIDHB0DXddtKpiloZAguqQNG930oHT574F7sdg74uCxbLvWzhBNjz1cvbA=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AzAADRk/Zbh0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeKR4FJjAGCIZcmgXMsEwGDP4USIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYkgmMDAwECJAsBRgYJAQE+EgNUGQWDHIICBAGqbzOKJ4dehCuBVz+BE?=
 =?us-ascii?q?Y1rAokZCoV2gUWPJAcCkSQjiWGHJyyZSmyBIU0jgzyQWz4zgQUBAY0pAQE?=
X-IPAS-Result: =?us-ascii?q?A0AzAADRk/Zbh0O0hNFjHQEBBQEHBQGBUQgBCwGDayeKR4F?=
 =?us-ascii?q?JjAGCIZcmgXMsEwGDP4USIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkgmMDA?=
 =?us-ascii?q?wECJAsBRgYJAQE+EgNUGQWDHIICBAGqbzOKJ4dehCuBVz+BEY1rAokZCoV2gUW?=
 =?us-ascii?q?PJAcCkSQjiWGHJyyZSmyBIU0jgzyQWz4zgQUBAY0pAQE?=
X-IronPort-AV: E=Sophos;i="5.56,265,1539673200"; 
   d="scan'208";a="63563273"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 22 Nov 2018 03:34:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2394863AbeKVWNc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 17:13:32 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:54082 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2394786AbeKVWNJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 17:13:09 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: eballetbo)
        with ESMTPSA id 1E11827E21A
From: Enric Balletbo i Serra <enric.balletbo@collabora.com>
To: lee.jones@linaro.org
Cc: gwendal@chromium.org, drinkcat@chromium.org,
        linux-kernel@vger.kernel.org, groeck@chromium.org,
        kernel@collabora.com, bleung@chromium.org,
        Olof Johansson <olof@lixom.net>
Subject: [PATCH 6/7] mfd / platform: cros_ec: instantiate only if th EC has a VBC NVRAM.
Date: Thu, 22 Nov 2018 12:33:55 +0100
Message-Id: <20181122113356.23610-7-enric.balletbo@collabora.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181122113356.23610-1-enric.balletbo@collabora.com>
References: <20181122113356.23610-1-enric.balletbo@collabora.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The cros-ec-vbc driver is DT-only and there is a DT property that
indicates if the EC has the VCB NVRAM, in such case instantiate the
driver but don't instantiate on the other cases.

To do this move the check code to its parent instead of play with the
attribute group visibility. This changes a bit the actual behaviour.
Before the patch if an EC doesn't have a VBC NVRAM an empty vbc folder
is created in /sys/class/chromeos/<ec device>, after the patch the empty
folder is not created, so, the folder is only created if the vbc is set.

Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
---

 drivers/mfd/cros_ec_dev.c             | 24 +++++++++++++++++++++++-
 drivers/platform/chrome/cros_ec_vbc.c | 16 ----------------
 2 files changed, 23 insertions(+), 17 deletions(-)

diff --git a/drivers/mfd/cros_ec_dev.c b/drivers/mfd/cros_ec_dev.c
index fc235af6da65..a63588953760 100644
--- a/drivers/mfd/cros_ec_dev.c
+++ b/drivers/mfd/cros_ec_dev.c
@@ -21,6 +21,7 @@
 #include <linux/mfd/core.h>
 #include <linux/module.h>
 #include <linux/mod_devicetable.h>
+#include <linux/of_platform.h>
 #include <linux/platform_device.h>
 #include <linux/pm.h>
 #include <linux/slab.h>
@@ -400,7 +401,10 @@ static const struct mfd_cell cros_ec_platform_cells[] = {
 	{ .name = "cros-ec-debugfs" },
 	{ .name = "cros-ec-lightbar" },
 	{ .name = "cros-ec-sysfs" },
-	{ .name = "cros-ec-vbc" },
+};
+
+static const struct mfd_cell cros_ec_vbc_cells[] = {
+	{ .name = "cros-ec-vbc" }
 };
 
 static int ec_device_probe(struct platform_device *pdev)
@@ -409,6 +413,7 @@ static int ec_device_probe(struct platform_device *pdev)
 	struct device *dev = &pdev->dev;
 	struct cros_ec_platform *ec_platform = dev_get_platdata(dev);
 	struct cros_ec_dev *ec = devm_kzalloc(dev, sizeof(*ec), GFP_KERNEL);
+	struct device_node *node;
 
 	if (!ec)
 		return retval;
@@ -492,6 +497,23 @@ static int ec_device_probe(struct platform_device *pdev)
 		dev_err(ec->dev,
 			"failed to add cros-ec platform devices: %d\n", retval);
 
+	/* Check whether this EC instance has a VBC NVRAM */
+	node = ec->ec_dev->dev->of_node;
+	if (IS_ENABLED(CONFIG_OF) && node) {
+		if (of_property_read_bool(node, "google,has-vbc-nvram")) {
+			dev_err(dev, "device VBC found.\n");
+			retval = devm_mfd_add_devices(ec->dev,
+					PLATFORM_DEVID_AUTO,
+					cros_ec_vbc_cells,
+					ARRAY_SIZE(cros_ec_vbc_cells),
+					NULL, 0, NULL);
+			if (retval)
+				dev_err(ec->dev,
+					"failed to add VBC devices: %d\n",
+					retval);
+		}
+	}
+
 	return 0;
 
 failed:
diff --git a/drivers/platform/chrome/cros_ec_vbc.c b/drivers/platform/chrome/cros_ec_vbc.c
index 374153e3dc13..b7b81fe0fb25 100644
--- a/drivers/platform/chrome/cros_ec_vbc.c
+++ b/drivers/platform/chrome/cros_ec_vbc.c
@@ -108,21 +108,6 @@ static ssize_t vboot_context_write(struct file *filp, struct kobject *kobj,
 	return data_sz;
 }
 
-static umode_t cros_ec_vbc_is_visible(struct kobject *kobj,
-				      struct bin_attribute *a, int n)
-{
-	struct device *dev = container_of(kobj, struct device, kobj);
-	struct cros_ec_dev *ec = to_cros_ec_dev(dev);
-	struct device_node *np = ec->ec_dev->dev->of_node;
-
-	if (IS_ENABLED(CONFIG_OF) && np) {
-		if (of_property_read_bool(np, "google,has-vbc-nvram"))
-			return a->attr.mode;
-	}
-
-	return 0;
-}
-
 static BIN_ATTR_RW(vboot_context, 16);
 
 static struct bin_attribute *cros_ec_vbc_bin_attrs[] = {
@@ -133,7 +118,6 @@ static struct bin_attribute *cros_ec_vbc_bin_attrs[] = {
 struct attribute_group cros_ec_vbc_attr_group = {
 	.name = "vbc",
 	.bin_attrs = cros_ec_vbc_bin_attrs,
-	.is_bin_visible = cros_ec_vbc_is_visible,
 };
 
 static int cros_ec_vbc_probe(struct platform_device *pd)
-- 
2.19.1

