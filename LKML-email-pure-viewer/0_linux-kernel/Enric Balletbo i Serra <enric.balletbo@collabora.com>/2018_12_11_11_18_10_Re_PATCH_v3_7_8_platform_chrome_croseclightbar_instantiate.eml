Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 19:50:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CB64A5803DC;
	Tue, 11 Dec 2018 03:21:21 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 03:21:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aa33IEB/32qB0Q/9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1u8RIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyaM+ZwcKPDcN8DXGZMQ9xeWDFdD4yh?=
 =?us-ascii?q?aYsBE/YOPfhFoIXjulACqRuzCRSpCO7p1zRGhGL53bci3uo8Dw/G0gwuEdEAvn?=
 =?us-ascii?q?vao9r6NrsdX++uzKnQzzjOdO9W1DXn5YTUbhwsr/OBULRtesTR00kvEAbFg02f?=
 =?us-ascii?q?p4zjJTOV1/gCuHWG4uV6UeKvj3Aoqx1qrTio28wsi5TCiJ8LxVDe7yV22ps+KN?=
 =?us-ascii?q?qmR059e96kEYdfuzuBOIRsRsMiR39nuDohxb0BopO0YC8KyJAjxxHFcPOHdJKI?=
 =?us-ascii?q?7Qj5WOmNJjd4gWtodbSijBix6Uit0vPwWtWw3VpQsyZInMfAumoQ2xHQ9sSLUP?=
 =?us-ascii?q?pw80W51TuA1g3f8P9ILE40mKbBNZIt3Lw9moANvUjdHCL7nlj9grWMeUU+4Oeo?=
 =?us-ascii?q?7vzqYrX4qZ+YMI95kh/+MqswlcylG+g4MRYBX3Kd+eui0L3v50r5QK9FjvEuk6?=
 =?us-ascii?q?nZto7VJdgDq6KnHwNY1pwv5wuxAju4ytgUgHoKIE5fdB+GjYXlI1TOL+r5Dfe7?=
 =?us-ascii?q?jVSsijBrx/XeM73lA5XNKGXDkbj4cbZ+9UFc0gwzws5b555NDbEALvTzVVHrtN?=
 =?us-ascii?q?HDEB85PBK7w/z9BNV+yIweQ2SPDbGdMK/Itl+I/O0vL/GWZIAJoDb9N+Ql5/n2?=
 =?us-ascii?q?gH89mF8dfrem0YEYaXClBflmJ0SZYXzxgtYOC2sKvww+TPD0h12GSzJce3GyX6?=
 =?us-ascii?q?ck7DEhFI2mFZvDRpyqgLGZ3Ce0BJxWZnxcBVCLC3vod5iEVO0KaCKdOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVTWF0mX?=
 =?us-ascii?q?0HSyU13KB4p0x9zFCD3LN8g/xZE9xT+vxIXh07NZ7a0+x1FdTyVhjdcdeOTVas?=
 =?us-ascii?q?Ws+mDi0pTtIt398OZF5wFM+5jhDD2CqqAKUZl6aRC5w26a/c23nxJ8Bgy3fJzq?=
 =?us-ascii?q?Uhjl8mQtdROm2inKJw6w/TB4vRmUWDi6mqbbgc3DLK9GqbzmqBpkdYXBR0UaXE?=
 =?us-ascii?q?R38fYETWoM/95kPDSb+uFLsmPhFAyc6ENqtFdNnpgU9aS/fkPdTUe3ixlHuoBR?=
 =?us-ascii?q?aU2rOMa5LndHgH0yXDFkcIiQAT8myANQglGCihpWXSDDhtFVLqZ0Ph6u1+qHK9?=
 =?us-ascii?q?Tk8pwACGdUxh17yp+hELgfyQUe8c3rUBuC05sTV7AE69387KC9qHvwduYb9TYc?=
 =?us-ascii?q?0j71td1WLWrQp9Poe+IKBknVMedwV3v0Xz1xR4EIlAkM4qrG80wwp2M66XzFRB?=
 =?us-ascii?q?dzaA15DqJrLXMnXy/Ayoa6POxlHe0dOW+qAT6PQ4q1Tvph2pGlAl83V919lV0n?=
 =?us-ascii?q?2c5prRAQoWUJLxVFs39hdgq7HbZCk9+53b1Xl2PaaotT/C3sojBPE5xRa4Y9df?=
 =?us-ascii?q?LKSEGRfoHM0eGcevJ/IlmlizYh0fIeBd6bQ7P8Wld/uBxq6mJ+JgnDOgjWRa74?=
 =?us-ascii?q?FxyEOM9yxgSuHW25YJ2e2X3gyCVz3klleurtj3mZxYZTEVBme+yTXkCJRNaaFo?=
 =?us-ascii?q?fIcLCX2hI8u4xthlg57tWnhY9EOsBl8c2c+pfwaSYEL53QFKyUsXpnmnkzOizz?=
 =?us-ascii?q?NoizEpsraf3CvWzuT4dRoIJnRERHN/glfrO4S0ic4VXFKpbwQwiBSq/0L6yLVF?=
 =?us-ascii?q?q6RlKGnTR1xFfyz3L2FkT6uxuaCOY89J6JM0rypXVP6wbkydSr74uxEayT/sH3?=
 =?us-ascii?q?NCxDAncDGnopX4nx1ghGOdNnpzt2fZecdryBfb5dzcQ+NR3zUcSCl5jznXGkaz?=
 =?us-ascii?q?P92z8dqIkJfDt/i0V3i9WZ1LbSnr0YSAuTO55WJwGx2/nPOzmtr9HQghyyD71N?=
 =?us-ascii?q?pqVSTOrBniZInmzKC6MeNhfkl1C17w8ct6GodikoQugJEcw2QVhpKQ/XAfi2f8?=
 =?us-ascii?q?Lc1b2b7ibHoKXTMKw8Ta4A//1E1hL3KJwZn0VnGcwstnetm7bXka2iM778BWFq?=
 =?us-ascii?q?iU6KZIkjdyolq9tQjRe+Ryni8Byfsy734Xm+IJtxAszimHArASAFNXPSrjlxmT?=
 =?us-ascii?q?69C+raNXZHugcLSq1Up+m8yhA6+Gog1GRHn5fZIiFzdq7spjKFLMzGHz6ob8dd?=
 =?us-ascii?q?nVbNITtQebnw3OjudLM5IxiuQFhTB8Nm3jp30lxPU2jRhv3ZG8oYiGJH9h/KO/?=
 =?us-ascii?q?Ah5EKDL1Y9kf9S3qjaZbhsyWxZygHo19GjUXW5vlVe6oEDUXtfj9NgeBCjs8qm?=
 =?us-ascii?q?qAGbrEHA+S80Nmr3PJE5C2OHCbPngZzdN+RBaDIExTmhwbXDI/npQhDACl2NTh?=
 =?us-ascii?q?cFtl5jAW/lP3sQFDyuVsNxniSGvfoBqoZywwSJieKhpW8w5D613UMcyY8uJ8AS?=
 =?us-ascii?q?VY8oe9owyKL2yRfx5IAn0RWkyYG1DjOaGj5dva/OidGOW+NOHCYamUpexdSveI?=
 =?us-ascii?q?xo+v0o188DaXLciPOnhiD/sm2ktMR3x5GsLZmykRRCwTjS7Cc8mbpBKk8C1tss?=
 =?us-ascii?q?+/6OjrWB7o5YaXC7pSNshv+wmrgaiZMe6cnj15KTFe1pMD3nLIzLkf3FgPiyBh?=
 =?us-ascii?q?bTWtELIAtTLTQ6LUgKNYExkbayZrPstS8608xhVNOdLcit7t1r53kP81C1RGVV?=
 =?us-ascii?q?zggM2pZtYKI2ayNFzZHkaLKa+GKCbPw8H2Z6O8VLJRgP9Vtx22pTaUDUvjMi6f?=
 =?us-ascii?q?mDnuUhClKftMgz2DPBxCpIG9dQ5gBnL+TN39cB20Lt92gScywb01nX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyOB5enCNpkWqedrAjhzl+9C/HQ6yr5V?=
 =?us-ascii?q?4DtYS/BvhCTSrsBho1e9n+mLyzpnVgdOqzlRiIKKu0ViJbvW9p1aVXnY+xIN6H?=
 =?us-ascii?q?2aCw4WqNt9Ft3vp6dQx8DPla3pLjdC9tPU/c0ECMnVKMKIKnwhMRXyFT7QDQsF?=
 =?us-ascii?q?SyOrNG7Fi0xclvGS6mOarpwgppfwn5oOT+wTaFtgOe4XDFhoBpQ4J5p8XXtwnq?=
 =?us-ascii?q?ScgcULzXW5qxbVSYNRuZWRBdyIBvC6BTCDjLIMTRIMxb7kJ4NbN8XA1lZ4YxEu?=
 =?us-ascii?q?kYLQGkGWV9lJpiB9ZAgcq0JJ9HF0SXc6nUnib1X+szcoCfeok0tu2UNFauM3+W?=
 =?us-ascii?q?KpvwY6?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAAA1nQ9ch0O0hNFlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng3uIGYwQgWAtFJJChHwUgV8sEwGDP4Q6IjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkvgjYkgmMBAgMBAiAEUgYJAQEKDgoCAhgOAgIDVAYNBgIBA?=
 =?us-ascii?q?QGDHIICBAGlI3wzhUCEbYELiy+BVz+BESeCa4RpgxyCVwKJOoFwhBRGkHMHApF?=
 =?us-ascii?q?KHol2h0ksmk2CDk0jgzyCJxcSjgw+M4EFAQGIFymCJAEB?=
X-IPAS-Result: =?us-ascii?q?A0AWAAA1nQ9ch0O0hNFlHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng3uIGYwQgWAtFJJChHwUgV8sEwGDP4Q6IjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkvgjYkgmMBAgMBAiAEUgYJAQEKDgoCAhgOAgIDVAYNBgIBAQGDHIICBAGlI3w?=
 =?us-ascii?q?zhUCEbYELiy+BVz+BESeCa4RpgxyCVwKJOoFwhBRGkHMHApFKHol2h0ksmk2CD?=
 =?us-ascii?q?k0jgzyCJxcSjgw+M4EFAQGIFymCJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,342,1539673200"; 
   d="scan'208";a="56391637"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 03:21:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726272AbeLKLSP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 06:18:15 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:46954 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726170AbeLKLSP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 06:18:15 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: eballetbo)
        with ESMTPSA id 02A52263BCE
Subject: Re: [PATCH v3 7/8] platform/chrome: cros_ec_lightbar: instantiate
 only if the EC has a lightbar.
To: Guenter Roeck <groeck@google.com>
Cc: Lee Jones <lee.jones@linaro.org>,
        Gwendal Grignou <gwendal@chromium.org>,
        Nicolas Boichat <drinkcat@chromium.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Guenter Roeck <groeck@chromium.org>, kernel@collabora.com,
        Benson Leung <bleung@chromium.org>,
        Olof Johansson <olof@lixom.net>
References: <20181127121849.23975-1-enric.balletbo@collabora.com>
 <20181127121849.23975-8-enric.balletbo@collabora.com>
 <CABXOdTfagM6sRWYMNs3cEwtjvOe8LVvmZ6=0LfBueT7JJzw-MQ@mail.gmail.com>
From: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Message-ID: <be4b375e-32dd-4b62-f04b-e66c2f6092db@collabora.com>
Date: Tue, 11 Dec 2018 12:18:10 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <CABXOdTfagM6sRWYMNs3cEwtjvOe8LVvmZ6=0LfBueT7JJzw-MQ@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 10/12/18 19:20, Guenter Roeck wrote:
> On Tue, Nov 27, 2018 at 4:19 AM Enric Balletbo i Serra
> <enric.balletbo@collabora.com> wrote:
>>
>> Due to the way attribute groups visibility work, the function
>> cros_ec_lightbar_attrs_are_visible is called multiple times, once per
>> attribute, and each of these calls makes an EC transaction. For what is
>> worth the EC log reports multiple errors on boot when the lightbar is
>> not available. Instead, check if the EC has a lightbar in the probe
>> function and only instantiate the device.
>>
>> Ideally we should have instantiate the driver only if the
>> EC_FEATURE_LIGHTBAR is defined, but that's not possible because that flag
>> is not in the very first Pixel Chromebook (Link), only on Samus. So, the
>> driver is instantiated by his parent always.
>>
>> This patch changes a bit the actual behaviour. Before the patch if an EC
>> doesn't have a lightbar an empty lightbar folder is created in
>> /sys/class/chromeos/<ec device>, after the patch the empty folder is not
>> created, so, the folder is only created if the lightbar exists.
>>
>> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
> 
> Nitpicks, otherwise
> 
> Reviewed-by: Guenter Roeck <groeck@chromium.org>
> 
>> ---
>>
>> Changes in v3: None
>> Changes in v2:
>> - Removed ec_with_lightbar variable.
>>
>>  drivers/platform/chrome/cros_ec_lightbar.c | 37 ++++++++--------------
>>  1 file changed, 13 insertions(+), 24 deletions(-)
>>
>> diff --git a/drivers/platform/chrome/cros_ec_lightbar.c b/drivers/platform/chrome/cros_ec_lightbar.c
>> index 80eed6317570..6f6a4cbfc3fc 100644
>> --- a/drivers/platform/chrome/cros_ec_lightbar.c
>> +++ b/drivers/platform/chrome/cros_ec_lightbar.c
>> @@ -43,7 +43,6 @@ static unsigned long lb_interval_jiffies = 50 * HZ / 1000;
>>   * If this is true, we won't do anything during suspend/resume.
>>   */
>>  static bool userspace_control;
>> -static struct cros_ec_dev *ec_with_lightbar;
>>
>>  static ssize_t interval_msec_show(struct device *dev,
>>                                   struct device_attribute *attr, char *buf)
>> @@ -381,9 +380,6 @@ static int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, uint8_t enable)
>>         struct cros_ec_command *msg;
>>         int ret;
>>
>> -       if (ec != ec_with_lightbar)
>> -               return 0;
>> -
>>         msg = alloc_lightbar_cmd_msg(ec);
>>         if (!msg)
>>                 return -ENOMEM;
>> @@ -567,37 +563,26 @@ static struct attribute *__lb_cmds_attrs[] = {
>>         NULL,
>>  };
>>
>> -static bool ec_has_lightbar(struct cros_ec_dev *ec)
>> +static bool cros_ec_has_lightbar(struct cros_ec_dev *ec_dev)
>>  {
>> -       return !!get_lightbar_version(ec, NULL, NULL);
>> -}
>> -
>> -static umode_t cros_ec_lightbar_attrs_are_visible(struct kobject *kobj,
>> -                                                 struct attribute *a, int n)
>> -{
>> -       struct device *dev = container_of(kobj, struct device, kobj);
>> -       struct cros_ec_dev *ec = to_cros_ec_dev(dev);
>> -       struct platform_device *pdev = to_platform_device(ec->dev);
>> +       struct platform_device *pdev = to_platform_device(ec_dev->dev);
>>         struct cros_ec_platform *pdata = pdev->dev.platform_data;
>>         int is_cros_ec;
>>
>>         is_cros_ec = strcmp(pdata->ec_name, CROS_EC_DEV_NAME);
>>
>>         if (is_cros_ec != 0)
>> -               return 0;
>> +               return false;
>>
> FWIW, is_cros_ec is really unnecessary here, though I guess that might
> be a different patch.
> 
>> -       /* Only instantiate this stuff if the EC has a lightbar */
>> -       if (ec_has_lightbar(ec)) {
>> -               ec_with_lightbar = ec;
>> -               return a->mode;
>> -       }
>> -       return 0;
>> +       if (!!get_lightbar_version(ec_dev, NULL, NULL))
>> +               return true;
>> +
>> +       return false;
> 
> Why not just the following ?
>             return !!get_lightbar_version(ec_dev, NULL, NULL);
> or even
>             return !strcmp(pdata->ec_name, CROS_EC_DEV_NAME) &&
>                       !!get_lightbar_version(ec_dev, NULL, NULL);
> 

Ack, I think that we can get rid of the cros_ec_has_lightbar function then. I'll
do in next version.

Thanks,
 Enric

>>  }
>>
>>  struct attribute_group cros_ec_lightbar_attr_group = {
>>         .name = "lightbar",
>>         .attrs = __lb_cmds_attrs,
>> -       .is_visible = cros_ec_lightbar_attrs_are_visible,
>>  };
>>
>>  static int cros_ec_lightbar_probe(struct platform_device *pd)
>> @@ -606,6 +591,10 @@ static int cros_ec_lightbar_probe(struct platform_device *pd)
>>         struct device *dev = &pd->dev;
>>         int ret;
>>
>> +       /* Only instantiate this stuff if the EC has a lightbar */
>> +       if (!cros_ec_has_lightbar(ec_dev))
>> +               return -ENODEV;
>> +
>>         /* Take control of the lightbar from the EC. */
>>         lb_manual_suspend_ctrl(ec_dev, 1);
>>
>> @@ -635,7 +624,7 @@ static int __maybe_unused cros_ec_lightbar_resume(struct device *dev)
>>  {
>>         struct cros_ec_dev *ec_dev = dev_get_drvdata(dev);
>>
>> -       if (userspace_control || ec_dev != ec_with_lightbar)
>> +       if (userspace_control)
>>                 return 0;
>>
>>         return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_RESUME);
>> @@ -645,7 +634,7 @@ static int __maybe_unused cros_ec_lightbar_suspend(struct device *dev)
>>  {
>>         struct cros_ec_dev *ec_dev = dev_get_drvdata(dev);
>>
>> -       if (userspace_control || ec_dev != ec_with_lightbar)
>> +       if (userspace_control)
>>                 return 0;
>>
>>         return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_SUSPEND);
>> --
>> 2.19.1
>>
