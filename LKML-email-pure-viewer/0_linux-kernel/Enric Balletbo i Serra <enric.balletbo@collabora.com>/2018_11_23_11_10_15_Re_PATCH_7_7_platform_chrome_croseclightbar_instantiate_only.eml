Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:34:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D8F0758037D;
	Fri, 23 Nov 2018 03:10:48 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 23 Nov 2018 03:10:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASmVMSxbWDZCVzmTdSg073d//LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm/bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQctQGS2RBQMtdTjVND56m?=
 =?us-ascii?q?YIQSE+cOIOBYoZXhqFsQsBSyGxSnCOfvxzNVg3P727Ax3eY8HgHcxAEuAswAsH?=
 =?us-ascii?q?rUotv2OqkdX++6w6vUwjvMdPNWwTXw5ZPUch0ju/yAQa58fMTTxEQpCgjLjk+Q?=
 =?us-ascii?q?qYvgPz6N2eoNtXKb7+t8WumylmMosQVxojyxyccwkYbJgZ8eylHZ/itk3ok1P8?=
 =?us-ascii?q?e4R1RmatOjDpRQsTuaN4pqTc84WG5noiI6yrkYtp6nZycKz48qyALYa/yDd4iH?=
 =?us-ascii?q?+AnsVOGLIThinn5qZLW/hxOr/EWm1+byVdG03U5UoiZZltTArG0B2hLN5sSdV/?=
 =?us-ascii?q?dw/Vut1SyO2g3R8u1JLkE5mbDFJ5MvwrM8jIQfvVrBEyPshkn6kq2be0M58eay?=
 =?us-ascii?q?8evneK/pppqEOo90lA7+NqMul9ShAeQ3LAcORXKX+eei2735+032XrFKgucxkq?=
 =?us-ascii?q?nDv5DWPcUbpqinDA9Jyosv9QqzAjO83NgFk3QLMkhJdA+EgoT1IV3DIfL1Ae+6?=
 =?us-ascii?q?g1u2kTdrw/7GPqfmApXINnXDlLbhfbBg609T0QYzzs5Q54hSCr4fJPL/Q0jxtd?=
 =?us-ascii?q?LeDhAnKQy52PjnCNpj2YMEQ26PAbGWMLnUsVCW4uIjOe6MZJUauDrlMfgq++bu?=
 =?us-ascii?q?jWMlmV8aZaSp2ZoXaHOmEfh8LESZfGHhgtMAEWcMowo/Q/bmiFyEUT5PeXmyW7?=
 =?us-ascii?q?gw6S08CIKjFY3DXJyigKSd3CenGZ1bfmBGBUqNEXf0bYqEXO0AaCKPIsB7lDwE?=
 =?us-ascii?q?WqOsS4sg1RGoqQ/7xKBrLuvS+i0Eq53j0MJ56PHUlRE37TZ0FdiS03mRT2FomW?=
 =?us-ascii?q?MFXz023KdhrkBnyVeD1q54g/pfFdFI4/NJUwE6NYPTzuBgCtDyXB7BccmNSFq8?=
 =?us-ascii?q?XtqmBjQxRMorw9ASe0Z9B8mijhfb0iWwGL8Vl7uLBJ8u/qLGxXfxJd1wy3LH1K?=
 =?us-ascii?q?knklknTdFDNWyghq5j6QfTA5TFnFmel6avba4cxjLC9H+fzWqSu0FVSA1wXr/D?=
 =?us-ascii?q?XXwFYkvWrM725kXNT7K1DbQnMw1BydONK6dQa93pi0lGS+nnONjEf22xnGKwDw?=
 =?us-ascii?q?6SxryQdIrqZ3kd3CLFBUcZiQ8T42iJORI+Bii7pWLeFyJhFVTob0Po8ul+rXe7?=
 =?us-ascii?q?Q1QwzwGLaU1hyrW09gQUhfyaV/McwLYEtD09pDVzGVa3x8jWBMaYpwp9YKVcZs?=
 =?us-ascii?q?sw70pd2mLHqQNxJJygILpkhl4FbQt3uVjj1xF2CoVGjMgro2kmzAt0KaKEzlxB?=
 =?us-ascii?q?cymU0oz3Or3SMmPy5gyga7bK2lHC19ab4rsP6PU9q1XkoAGpFkoj/29709VP1H?=
 =?us-ascii?q?uc/JHKDAsUUZL+SUs38xl6p7fHYigy/Y/U1HtsMbWqvT/Gwd4mGOwlyhO4dddF?=
 =?us-ascii?q?LKyEDBPyE9EdB8W2MuMqn0ambx0aM+FS7qI7JN6meOac166tP+ZgmyymgH9D4I?=
 =?us-ascii?q?B81EKM6iV9RvTJ35YD3/GXwA+HWy3gg1emt8D9gZpEai0KHmqj1SjkA5ZcZ61v?=
 =?us-ascii?q?fYoRFWiiOcy2xtVkiJ7rVH5V71qjB1IA2M+0dhuedV393QtM1UsJpXyrgze3zz?=
 =?us-ascii?q?txkzsxtKqQwDTOw/j+dBoAImNLXmhigkv2Loiukt8aW1Kkbw43mxu/5Eb23rRU?=
 =?us-ascii?q?q757L2bOX0hIZS/2L2d5X6u0t7qCZdNP6ZwyvSVWVuS8fU6VSrrnrxQG1CPjGn?=
 =?us-ascii?q?NUxConeDGyppX5gxt6hXqdLXZytnbYedt8xQzC5NzaXvNR2jsGRC9liTjYHFS8?=
 =?us-ascii?q?Pt+p/cmKmJfHqOyxS2WhVphLeynx0YyArDe75XFtARCnnfC8gMfnEQs50S/8zd?=
 =?us-ascii?q?VqTj/HrBX/Yonq0aS1L+Rnc1JsBF/97cp6B45/npExhJEWxXgVmJGV8WAbnmf0?=
 =?us-ascii?q?NNVRwbj+Y2YVRT4X397V5xDo2U15IXKO3Y75VHSdws16atm+Y2MW3D897s9QBK?=
 =?us-ascii?q?eV6rxEgTV6ol6ioQ3NZvh9my8XyeEy534Cn+EJpA0twz2eAr8IHElUJyzslwmS?=
 =?us-ascii?q?4NC4o6Vaf2Kvcbm21EpjktGtFrCCogdAWHnnfpcuBzN/7sJ6MFjUyn389pnkeM?=
 =?us-ascii?q?XMbdIUrhCUlhbAj+tPJ54rmPsFmzFnOX7jsn0/0OE0kwZu3Z6hsYiDKmVt+r+5?=
 =?us-ascii?q?AxFCOj30YcMT5i/ijaJEksmK2ICvG41rGi8XU5vwUfKoDDUSuOz7NwaJFT0wsH?=
 =?us-ascii?q?aaFqDZHQ+C80dmtHPPHouvN3GWInkZ0NpjSAOcJExZnAAbQjE6koQlGQCtwczr?=
 =?us-ascii?q?aF156SwJ5l7kthtMzfplOALlXWfYoAeody04SJyCLBdN6gFC5kHVMdGR7+5pHi?=
 =?us-ascii?q?FY+IGhoxKJKmCBewtICmQJUFSeB1//Jrmu+cXA8++AC+q8NfTOZKuBqfdEW/eU?=
 =?us-ascii?q?356v0ZZm/zWRNsWJJHZiFOY22k5CXXB/BsTYlC8DSy0RlyLRccGboA2w9TFwrs?=
 =?us-ascii?q?C66P7rQh7g5ZOTC7tONtVi4xC3gaCeN+6JmSZ2MzBY2okXxX/Pzrgf00UfiyVv?=
 =?us-ascii?q?dzmrDLQBujTBTKPWmq9LEREbbzl/O9dP76I5xgNNI9LUisvp1r5kif44E1dFWk?=
 =?us-ascii?q?LgmsGqZswKInuxNFDdBEaMO7SJOyfLw9zsYa6nTb1QjeNUtwC/uDqBEk/jOCiD?=
 =?us-ascii?q?mCftVxy1Le5MiySbNgREuI6hahZtFXTjTNX+ZxKhLd94lic2zqM0h3/QMW4cMC?=
 =?us-ascii?q?Nxc0dMrr2W8CNZje9zG21H7np5M+aEnzyV4PXfKpYTqfFrGDh7l/pG4HQmzLtY?=
 =?us-ascii?q?9D1ERP1wmCfIstFiuU2pkumRxTphSxdOrjdLhISWvURtI6nZ959AWWra8xIJ92?=
 =?us-ascii?q?mfFxMKp959AN31p69Q0sTPlL70KDpa89Pb580cB83VKMKBKHUgMBrpFyTSDAsK?=
 =?us-ascii?q?VjOrMWDfh0pAkPCd7HGVr546qoTyl5oKULNUSFs1FvZJQnhiSfMfLZFrUylsq7?=
 =?us-ascii?q?mWh81AsX6/qgTBbN9ds5vEE++JR/PiNGDKo6NDYk4lx6n5Jsw5P4n/1lBobRF7?=
 =?us-ascii?q?1L/HAVDZFYRApDdgZUk+qUFJ/WR0SUU43EbhYwmq+nZVHvmxyE1lwjBiaPggoW?=
 =?us-ascii?q?+/q2w8IUDH8W5swUQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAADc3/dbh0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sng3mIGIt9gWAtFJIwhHeBcywTAYhWIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvgjYkgmIBAQEBAgEBAiAEUgUBCQEBCg4KAgIYDgICA1QGDQYCA?=
 =?us-ascii?q?QEBgxyBeggEAacbfDOFQIRXgQuKfoFXP4ERJ4JriAKCVwKJI4V2Q49RVQcCkSk?=
 =?us-ascii?q?eiWGHJyyZSoINTSODPIInFxKOCz4zgQUBAYwhAQE?=
X-IPAS-Result: =?us-ascii?q?A0AQAADc3/dbh0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?ng3mIGIt9gWAtFJIwhHeBcywTAYhWIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvg?=
 =?us-ascii?q?jYkgmIBAQEBAgEBAiAEUgUBCQEBCg4KAgIYDgICA1QGDQYCAQEBgxyBeggEAac?=
 =?us-ascii?q?bfDOFQIRXgQuKfoFXP4ERJ4JriAKCVwKJI4V2Q49RVQcCkSkeiWGHJyyZSoINT?=
 =?us-ascii?q?SODPIInFxKOCz4zgQUBAYwhAQE?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="41287401"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 03:10:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390672AbeKWVyK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 16:54:10 -0500
Received: from bhuna.collabora.co.uk ([46.235.227.227]:59578 "EHLO
        bhuna.collabora.co.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2387941AbeKWVyK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 16:54:10 -0500
Received: from [127.0.0.1] (localhost [127.0.0.1])
        (Authenticated sender: eballetbo)
        with ESMTPSA id 0D97C26059E
Subject: Re: [PATCH 7/7] platform/chrome: cros_ec_lightbar: instantiate only
 if the EC has a lightbar.
To: Guenter Roeck <linux@roeck-us.net>
Cc: lee.jones@linaro.org, gwendal@chromium.org, drinkcat@chromium.org,
        linux-kernel@vger.kernel.org, groeck@chromium.org,
        kernel@collabora.com, bleung@chromium.org,
        Olof Johansson <olof@lixom.net>
References: <20181122113356.23610-1-enric.balletbo@collabora.com>
 <20181122113356.23610-8-enric.balletbo@collabora.com>
 <20181122192544.GA2410@roeck-us.net>
From: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Message-ID: <5b06a19f-693f-ca9d-cb6f-06d0c3d938d9@collabora.com>
Date: Fri, 23 Nov 2018 12:10:15 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181122192544.GA2410@roeck-us.net>
Content-Type: text/plain; charset=utf-8
Content-Language: en-GB
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Guenter,

On 22/11/18 20:25, Guenter Roeck wrote:
> On Thu, Nov 22, 2018 at 12:33:56PM +0100, Enric Balletbo i Serra wrote:
>> Due to the way attribute groups visibility work, the function
>> cros_ec_lightbar_attrs_are_visible is called multiple times, once per
>> attribute, and each of these calls makes an EC transaction. For what is
>> worth the EC log reports multiple errors on boot when the lightbar is
>> not available. Instead, check if the EC has a lightbar in the probe
>> function and only instantiate the device.
>>
>> Ideally we should have instantiate the driver only if the
>> EC_FEATURE_LIGHTBAR is defined, but that's not possible because that flag
>> is not in the very first Pixel Chromebook (Link), only on Samus. So, the
>> driver is instantiated by his parent always.
>>
>> This patch changes a bit the actual behaviour. Before the patch if an EC
>> doesn't have a lightbar an empty lightbar folder is created in
>> /sys/class/chromeos/<ec device>, after the patch the empty folder is not
>> created, so, the folder is only created if the lightbar exists.
>>
>> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
> 
> Guess this is the answer to the suggestion I had before. Maybe the two patches
> should be merged together ? Or do  others think that they should be kept
> separate ?
> 

I did in a separate patch because it changes a bit the current behaviour (i.e
after that patch the lightbar directory will not appear if is not detected).
Having in a separate patch will allow us to revert cleanly if for some weird
reason we still want the old behaviour. So in general, first I moved the
attributes and then I did a follow up patch with the probe change. This also
happens with vbc driver.

Said that, I don't mind to merge the two patches.


> Additional comment below.
> 
> Thanks,
> Guenter
> 
>> ---
>>
>>  drivers/platform/chrome/cros_ec_lightbar.c | 29 +++++++++-------------
>>  1 file changed, 12 insertions(+), 17 deletions(-)
>>
>> diff --git a/drivers/platform/chrome/cros_ec_lightbar.c b/drivers/platform/chrome/cros_ec_lightbar.c
>> index 31d22f594fac..d255264eb082 100644
>> --- a/drivers/platform/chrome/cros_ec_lightbar.c
>> +++ b/drivers/platform/chrome/cros_ec_lightbar.c
>> @@ -567,37 +567,28 @@ static struct attribute *__lb_cmds_attrs[] = {
>>  	NULL,
>>  };
>>  
>> -static bool ec_has_lightbar(struct cros_ec_dev *ec)
>> +static bool cros_ec_has_lightbar(struct cros_ec_dev *ec_dev)
>>  {
>> -	return !!get_lightbar_version(ec, NULL, NULL);
>> -}
>> -
>> -static umode_t cros_ec_lightbar_attrs_are_visible(struct kobject *kobj,
>> -						  struct attribute *a, int n)
>> -{
>> -	struct device *dev = container_of(kobj, struct device, kobj);
>> -	struct cros_ec_dev *ec = to_cros_ec_dev(dev);
>> -	struct platform_device *pdev = to_platform_device(ec->dev);
>> +	struct platform_device *pdev = to_platform_device(ec_dev->dev);
>>  	struct cros_ec_platform *pdata = pdev->dev.platform_data;
>>  	int is_cros_ec;
>>  
>>  	is_cros_ec = strcmp(pdata->ec_name, CROS_EC_DEV_NAME);
>>  
> Can this now ever be false ?
> 

Yes, this happens for example on Samus, where there are two ECs, the first one
is named "cros_ec" and the second one is "cros_pd", so will fail in the second
case. Gwendal, correct me if I am wrong, but AFAIK this is a bit of hack because
some initial versions of Samus (coded Link I guess) have no support for the
EC_LIGHTBAR_FEATURE so we can't really use the features thing.

>>  	if (is_cros_ec != 0)
>> -		return 0;
>> +		return false;
>>  
>> -	/* Only instantiate this stuff if the EC has a lightbar */
>> -	if (ec_has_lightbar(ec)) {
>> -		ec_with_lightbar = ec;
>> -		return a->mode;
>> +	if (!!get_lightbar_version(ec_dev, NULL, NULL)) {
>> +		ec_with_lightbar = ec_dev;
> 
> Is this variable (and the associated check in lb_manual_suspend_ctrl)
> still necessary ?
> 

Hmm, right, I will double check and remove in next version.

>> +		return true;
>>  	}
>> -	return 0;
>> +
>> +	return false;
>>  }
>>  
>>  struct attribute_group cros_ec_lightbar_attr_group = {
>>  	.name = "lightbar",
>>  	.attrs = __lb_cmds_attrs,
>> -	.is_visible = cros_ec_lightbar_attrs_are_visible,
>>  };
>>  
>>  static int cros_ec_lightbar_probe(struct platform_device *pd)
>> @@ -611,6 +602,10 @@ static int cros_ec_lightbar_probe(struct platform_device *pd)
>>  		return -EINVAL;
>>  	}
>>  
>> +	/* Only instantiate this stuff if the EC has a lightbar */
>> +	if (!cros_ec_has_lightbar(ec_dev))
>> +		return -ENODEV;
>> +
>>  	/* Take control of the lightbar from the EC. */
>>  	lb_manual_suspend_ctrl(ec_dev, 1);
>>  
> 
