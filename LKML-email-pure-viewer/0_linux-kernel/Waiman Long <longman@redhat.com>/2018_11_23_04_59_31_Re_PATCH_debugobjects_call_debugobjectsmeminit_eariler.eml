Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 13:08:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3D30558037D;
	Thu, 22 Nov 2018 20:59:42 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 20:59:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AKfHmtxBatg4srXRZaot5UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/o8mwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOSMn/mHZisJwi6FVrhyvqBNwwYHbfI6bNOFmfq7fZt4aWWhMU9xNWyBdDI6x?=
 =?us-ascii?q?bY0CBPcBM+ZCqIn9okMDohukCgmtAePg0DlIjWLw06091eQhHhzN0QskH9IJtn?=
 =?us-ascii?q?TUo9D1O70UUe2u1qnH0yjMb/NM1jfh8oTHbhchofSVUL92bMHfylEvGhvbglmM?=
 =?us-ascii?q?rYHpJS6Z2+oTv2SB8uZtVv6jh3QmpgxzujSj2Nsgh43Tio4IxF3I6z91zJs2KN?=
 =?us-ascii?q?C2UkJ3f92pHZ1NvC+ALYR2WNktQ2RwtSY61LIGvZm7cTAUyJQo2RHfceaLc4uW?=
 =?us-ascii?q?7RL5UuaePzN4iGhieLKliBa+6UmgyuviWcmoyFtGsDZJn93WunwQ2RHf9NKLRu?=
 =?us-ascii?q?Z+80u9wzqC1gLe5vlBIU8ulKrbL5AhwqQ3lpoWqUnDGi72mEPrjK6Zb0kk+fan?=
 =?us-ascii?q?6/7hYrr4op+QLoh0iw/4MqswgMyyGvo4MgcQUGiB4+i816Ps/Vf/QLpUiv06iK?=
 =?us-ascii?q?7ZsIrVJcgDvK62HxdV0po/6xa4Fzqm1NUYnXoZI15fdxOHkpPkO1XPIPD+EPe+?=
 =?us-ascii?q?jE6gkDZtx/DaILLhBo/BIWTEkLfkZbx98VJTyBIvzdBD4JJZErEBL+jyWk/trt?=
 =?us-ascii?q?PYCQU1Mwypw+n9DtV92ZgTWWaOAq+fLaPTvkWE5uMpI+mQeoAVvCzxJOQi5/7r?=
 =?us-ascii?q?lXU5g0MSfbG13ZsLb3C1BvZmI0KHbnb2gdcBFmEKvgw5TOHxjF2CUDhTZ2u9Xq?=
 =?us-ascii?q?4m5zE7Dp6mApnHRoy3nLOB2yK7FIVMZm9aElCMDWvod4KcVvgWcyKSIshhkj8e?=
 =?us-ascii?q?Wbi7UYAh1wqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuU99xU2F0aRih/xYFMZc5/VGUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmrOWHpM07LzT02LxJ8lnzXbGz7?=
 =?us-ascii?q?cuj18hTstLNm2mg6p/+hPXB47IlUWZiqmreb4d3C7L6GeM026OsFtEXw53VKXP?=
 =?us-ascii?q?RWofaVfOrdTl+kPCSKejBqk9PQtf18GOMKtKZcfvjVVdWvjjPs/TY2awm2e2GB?=
 =?us-ascii?q?aJyamAbIvse2UBwirdDFIInBwU/XaDLQI+HDuuo3rCDDxyElLie1/s8eh7qHO8?=
 =?us-ascii?q?Uk80zwGLY1d917av/R4Vn/icS/IV3rILoyohrzR0HFCg39PZEdaApgxhfLlCbt?=
 =?us-ascii?q?M5+ltIyWXZtwllNJy6M69inkIecxhwv072zRp3DptPkMc0o3Iq1gZ9Mr+Y305b?=
 =?us-ascii?q?eDOe3pDwPaPXJ3L2/BCuba7Wx17f3MyX+qcJ9PQ3tVHjsBu1GUol9nVty8NV3G?=
 =?us-ascii?q?eE5pXWEAoSVor8U0Yq9xRgu77WeCg854PO2n1qPqm5qTvC29MvBOs4xResZdZf?=
 =?us-ascii?q?MKWYFADsF80WHdShKOsvm1KxdBILIPhS9LIoP8Ohb/aGwq+rM/p6kzK8kGtH55?=
 =?us-ascii?q?px0kSS+CpmS+7ExooKzOuc3gSaSTj8llChssbslIBAZDESGHe/yCf+CI5QYK1y?=
 =?us-ascii?q?YZgECWO0L8KrwdV+gobnW2RE+167G1MGxMipdAKSblz8xwFR1V4boWe6mSu+1D?=
 =?us-ascii?q?F0lzAprqyC3C3B2ejidRwHOnJVS2lml1vjPY+0j9UCVkiycwcpjAel5Vr9x6VD?=
 =?us-ascii?q?pqRwNXPTQURLfyjxNW1iSbG/trmBY85O7pMnryNXXf+4YVCbTL79vhQb3zniH2?=
 =?us-ascii?q?tY2DA0aTWqto/lkBx9jWKXNGxzo2bBecFs2Rff48TRRP5L0ToBXiV4izjXBl6n?=
 =?us-ascii?q?Mtmt/NWUkYrDs++kW2KgUJ1TbTfkzYeauCSn4m1qBAW1n+qvld3/DQg6zSj72s?=
 =?us-ascii?q?FpVSrSrRbweInr17mgPuJhcUllH1v868t8GoFjnYo8npAQ2X4GhpqL+XoLi3v8?=
 =?us-ascii?q?MdJe2ajmdnoCWSYLw8LJ4AjiwEBjK3OJx4HjWXmHzMpuecK6Yn8I1SIn9M9FFr?=
 =?us-ascii?q?2U7LNfkCtxo1q4qx/RYPdnkjccz/su9GAVg+UTtAUxySWdB6gYHVNEMiz0ixSI?=
 =?us-ascii?q?89e+ob1LZGaodLi8zkt/ksqnDLGfuQFcQ3f5d4wmHS9x6MV/LV3N3Gfy6oHiZN?=
 =?us-ascii?q?nfc9YTugeInBfHiuhfMIgxmeYShSp7JWL9umUoxPUhghxp2ZG6oZKLK2Fw/K+i?=
 =?us-ascii?q?Bh5YNzv1Z94c+z33jKZemNqW0J6rHpl7BjoLW57oR+qyED0OrfTnKxqOEDokp3?=
 =?us-ascii?q?eZA7XfGBGQ6Fx8o3LTCZyrNGyXJHoEzdVkXhadP1dSgAQVXDU8g544GRqmxM3n?=
 =?us-ascii?q?cEdl+D8R4kT0pQdLyuJtLxP/SHvQpB+0ajcoT5iSNBpX7gZf50fMLMyR9ORzEz?=
 =?us-ascii?q?tD/p2mqgyNJXeWZwBJDWEPR0yFCErvPrio5dnc7eeYAvCyIOfJYbWLseZeTeuH?=
 =?us-ascii?q?xYqz0ot6+DaBLsWPMWdjD/042UpDXGp1G8fDmzUIRCwYiTjNb9OApBqn/i13r8?=
 =?us-ascii?q?a/8OnkWQ715IuPDadSPstr+xysnaiDMOuQjj5jKTlEzpMM2WPIyL8H0VEIliFh?=
 =?us-ascii?q?bCOtHqoAtCLXSKLQm7RaDxoaayN1KctJ4Lgw3ghLOc7HlNz10qR0geIyC1dATV?=
 =?us-ascii?q?bhgN2mZdQWI2GhM1PKHFqLNLWDJTHR3877e7+zSb1Og+VSrBCwvTebE0n+PjWM?=
 =?us-ascii?q?jTXpVhavMf1SgyGfJhBRpIa9chN1A2j5UN3mcgG7MMNwjTAuwbw7nHXKNWsdMT?=
 =?us-ascii?q?h6a0xMr72Q4jlegvVwAGFB6ntlLe+ZmyeW9eXYK5AWsed1DSRwje5V/HM6y74G?=
 =?us-ascii?q?pB1DEcV0kS2ahddv6wWtm+inxT93FgdV/HIDjYGTuG1mOKPE5txOXmvC8BsR7G?=
 =?us-ascii?q?KWTRMQqJ8tFtLrq4hUy97SiLj0LjZStd7ZruUGAM2BF8uGNXMneT7uHjGcWA8C?=
 =?us-ascii?q?SzGuPGf3nUFRkPiOsHaSq85p+dDXhJMSR+oDBxQOHfQABxE9EQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACciPdbh0O0hNFhGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBWoIRJ4N5iBhfjSwUkjCEd4FzFBgTAYhSIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkvgjYigmUBAgMBAiAEUgYJAQEKGAICJgICA1QGA?=
 =?us-ascii?q?QwGAgEBAYMcgWoDFQWnOHwzihiBC4p+F4F/gTiCa4JWhSyCVwKJUYYLNI8dVQm?=
 =?us-ascii?q?RKQYYiVGHNyyYBIFGgg0zGggbFYMngicXfwEOjSwhAQExgQUBARyMOQEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAACciPdbh0O0hNFhGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBWoIRJ4N5iBhfjSwUkjCEd4FzFBgTAYhSIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkvgjYigmUBAgMBAiAEUgYJAQEKGAICJgICA1QGAQwGAgEBAYMcgWo?=
 =?us-ascii?q?DFQWnOHwzihiBC4p+F4F/gTiCa4JWhSyCVwKJUYYLNI8dVQmRKQYYiVGHNyyYB?=
 =?us-ascii?q?IFGgg0zGggbFYMngicXfwEOjSwhAQExgQUBARyMOQEB?=
X-IronPort-AV: E=Sophos;i="5.56,268,1539673200"; 
   d="scan'208";a="53039375"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 20:59:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2408156AbeKWPmJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 10:42:09 -0500
Received: from mx1.redhat.com ([209.132.183.28]:56912 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730451AbeKWPmJ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 10:42:09 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id E74A185541;
        Fri, 23 Nov 2018 04:59:33 +0000 (UTC)
Received: from llong.remote.csb (ovpn-121-14.rdu2.redhat.com [10.10.121.14])
        by smtp.corp.redhat.com (Postfix) with ESMTP id BA94B67E6D;
        Fri, 23 Nov 2018 04:59:32 +0000 (UTC)
Subject: Re: [PATCH] debugobjects: call debug_objects_mem_init eariler
To: Qian Cai <cai@gmx.us>, akpm@linux-foundation.org,
        tglx@linutronix.de
Cc: yang.shi@linux.alibaba.com, arnd@arndb.de,
        linux-kernel@vger.kernel.org
References: <alpine.DEB.2.21.1811222238270.1665@nanos.tec.linutronix.de>
 <20181123043117.992-1-cai@gmx.us>
From: Waiman Long <longman@redhat.com>
Openpgp: preference=signencrypt
Autocrypt: addr=longman@redhat.com; prefer-encrypt=mutual; keydata=
 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
 weim8xU=
Organization: Red Hat
Message-ID: <dfa544fc-18d8-f1bf-fadf-46fdbda8d624@redhat.com>
Date: Thu, 22 Nov 2018 23:59:31 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181123043117.992-1-cai@gmx.us>
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
Content-Language: en-US
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.28]); Fri, 23 Nov 2018 04:59:34 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/22/2018 11:31 PM, Qian Cai wrote:
> The current value of the early boot static pool size, 1024 is not big
> enough for systems with large number of CPUs with timer or/and workqueue
> objects selected. As the results, systems have 60+ CPUs with both timer
> and workqueue objects enabled could trigger "ODEBUG: Out of memory.
> ODEBUG disabled".
>
> Some debug objects are allocated during the early boot. Enabling some
> options like timers or workqueue objects may increase the size required
> significantly with large number of CPUs. For example,
>
> CONFIG_DEBUG_OBJECTS_TIMERS:
> No. CPUs x 2 (worker pool) objects:
> start_kernel
>   workqueue_init_early
>     init_worker_pool
>       init_timer_key
>         debug_object_init
>
> No. CPUs objects (CONFIG_HIGH_RES_TIMERS):
> sched_init
>   hrtick_rq_init
>     hrtimer_init
>
> CONFIG_DEBUG_OBJECTS_WORK:
> No. CPUs x 6 (workqueue) objects:
> workqueue_init_early
>   alloc_workqueue
>     __alloc_workqueue_key
>       alloc_and_link_pwqs
>         init_pwq
>
> Also, plus No. CPUs objects:
> perf_event_init
>   __init_srcu_struct
>     init_srcu_struct_fields
>       init_srcu_struct_nodes
>         __init_work
>
> However, none of the things are actually used or required beofre
> debug_objects_mem_init() is invoked.
>
> According to tglx,
> "the reason why the call is at this place in start_kernel() is
> historical. It's because back in the days when debugobjects were added
> the memory allocator was enabled way later than today. So we can just
> move the debug_objects_mem_init() call right before sched_init()."
>
> Afterwards, when calling debug_objects_mem_init(), interrupts have
> already been disabled and lockdep_init() will only be called later, so
> no need to worry about interrupts in
> debug_objects_replace_static_objects().
>
> Suggested-by: Thomas Gleixner <tglx@linutronix.de>
> Signed-off-by: Qian Cai <cai@gmx.us>
> ---
>  init/main.c        | 3 ++-
>  lib/debugobjects.c | 8 --------
>  2 files changed, 2 insertions(+), 9 deletions(-)
>
> diff --git a/init/main.c b/init/main.c
> index ee147103ba1b..f2c35dc50851 100644
> --- a/init/main.c
> +++ b/init/main.c
> @@ -600,6 +600,8 @@ asmlinkage __visible void __init start_kernel(void)
>  	/* trace_printk can be enabled here */
>  	early_trace_init();
>  
> +	debug_objects_mem_init();
> +
>  	/*
>  	 * Set up the scheduler prior starting any interrupts (such as the
>  	 * timer interrupt). Full topology setup happens at smp_init()
> @@ -697,7 +699,6 @@ asmlinkage __visible void __init start_kernel(void)
>  #endif
>  	page_ext_init();
>  	kmemleak_init();
> -	debug_objects_mem_init();
>  	setup_per_cpu_pageset();
>  	numa_policy_init();
>  	acpi_early_init();
> diff --git a/lib/debugobjects.c b/lib/debugobjects.c
> index 70935ed91125..cc5818ced652 100644
> --- a/lib/debugobjects.c
> +++ b/lib/debugobjects.c
> @@ -1132,13 +1132,6 @@ static int __init debug_objects_replace_static_objects(void)
>  		hlist_add_head(&obj->node, &objects);
>  	}
>  
> -	/*
> -	 * When debug_objects_mem_init() is called we know that only
> -	 * one CPU is up, so disabling interrupts is enough
> -	 * protection. This avoids the lockdep hell of lock ordering.
> -	 */
> -	local_irq_disable();

I think you should have a comment saying that debug_objects_mm_init() is
called early with only one CPU up and interrupt disabled. So it is safe
to replace static objects without any protection.

> -
>  	/* Remove the statically allocated objects from the pool */
>  	hlist_for_each_entry_safe(obj, tmp, &obj_pool, node)
>  		hlist_del(&obj->node);
> @@ -1158,7 +1151,6 @@ static int __init debug_objects_replace_static_objects(void)
>  			cnt++;
>  		}
>  	}
> -	local_irq_enable();
>  
>  	pr_debug("%d of %d active objects replaced\n",
>  		 cnt, obj_pool_used);

-Longman

