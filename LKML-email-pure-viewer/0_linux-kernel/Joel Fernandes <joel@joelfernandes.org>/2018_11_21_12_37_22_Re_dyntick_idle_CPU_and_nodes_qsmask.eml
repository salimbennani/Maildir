Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 10:59:03 -0000
Received: from icoremail.net (unknown [209.85.214.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDnX_s44fRbjsvEAQ--.57216S3;
	Wed, 21 Nov 2018 12:38:16 +0800 (CST)
Received: from mail-pl1-f169.google.com (unknown [209.85.214.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCnhUE14fRbnWhhAA--.9671S3;
	Wed, 21 Nov 2018 12:38:13 +0800 (CST)
Received: by mail-pl1-f169.google.com with SMTP id f12-v6so3592407plo.1
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 20:38:13 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=8sm5U8cKgs+Hk5a0p2QXRBGPqZ7nN5nin9bTAzAn6D0=;
        b=HWrK6wxdOF9A4ODtRNYX3sWSbb4a/xCaApqXjHUHc6Lgo4B1JqAuuBevwB7CG+uIzY
         zUu1nNn/CBpYGjdclq+1eCOLf2RdajFLZEnG5sUDndmNAq4yNDkSTrEp1qR0TAu57fit
         LXwp+EwZMw+fbLUwRYr4Ur1Sj4m7vid3WSusfPXEah6QbXaG2hqKoetKqB7IoSk0VW4h
         JtrzrwNyGv772uO+8Pna8UgwF9SqFm9PpGbA26xCPVbndItQrGjSrXtZPkU79RnY4C37
         26zqREUADqHQ4UHS/W3ZrpGoltcTAFXG/5QcpLjHr66KD8o4B/edaSpm/H2fvdtg+d7p
         uQYg==
X-Gm-Message-State: AA+aEWZHrs0m0lxOgNv7r6LAZIl61DSNDNpG0QEzCCFanu/BnKrqE8Yz
	WQHkbTo5zQQVCiM20q4M33oGpZOq2gS3beMqYFOczsm9BgX04IQ=
X-Received: by 2002:a63:9402:: with SMTP id m2mr4429310pge.93.1542775092549;
        Tue, 20 Nov 2018 20:38:12 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp1478623pju;
        Tue, 20 Nov 2018 20:38:11 -0800 (PST)
X-Google-Smtp-Source: AFSGD/VABxpM5EZ+h9FzdrT79d0tst+snGHu4aILu5Z8jZ188jIazWDs2Dmz7WwSQ0DwZxerP29H
X-Received: by 2002:a65:6645:: with SMTP id z5mr4592347pgv.351.1542775091349;
        Tue, 20 Nov 2018 20:38:11 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542775091; cv=none;
        d=google.com; s=arc-20160816;
        b=chI7rx7Jo1WnFAj6eHgrJvUTqIB9G19NYoZ2kEi66jMZGGFrhacqWhG4xlMsf/qZy+
         ilI62hzSIVWQbo/B7i9s+TMndy761JlJTqrs+eE1oo04VbFFejpOI4zOTtoOAZephtZU
         1jCeKG3GRXwOa6pBfacYGL6heQM3ZXyeo13DpvzN+yFwgZlHOAVJ5YmppNMmqDLqp4xR
         KkbRNePiEKDQlwEVyYoirLSw4w//yU1F+u3rYC5D3eis7kATqI9gHBhpuHbEYYomBKeq
         AEs/QJ+Yhvh8Nl4IQCnD/Ur3EzAx3lT2HwGGhCEEZijRhZgNhyzJWUYc87JFdJAk1+qP
         MxbA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=8sm5U8cKgs+Hk5a0p2QXRBGPqZ7nN5nin9bTAzAn6D0=;
        b=wZLuqjWdRjaY3Srkx6sMPggXb4AEYBvQTkRd2Z3UXQMvRl0yUcT5JNxzb0tAbYVsMl
         I28bwy/xa/SugmShqU+g+S8bs94ZDIipK4Ht0B2W+vhP71kPlEW+T4+DllCx4oKxVuui
         2M1toyWALdwaSOSaXcb9wSXA0LQ7o29QLdsaY1UujX/5dHdpwMylLCnltZI0wBQ2cdRD
         ISob1okGdHaOpaBwZVBry3nheHPnx2aeFagHOyQ86lB6W07IrmfkVTTLlVnDbRQhcdwm
         xlSp6Ls6AWYgtSDfYW72ePcHhnwdY9GthD+EuYxqReVrHaPC1ICzxrBRdcb2DZcmcYUO
         7x9w==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@joelfernandes.org header.s=google header.b=kBFcWVzs;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id h88si27069040pfa.49.2018.11.20.20.37.53;
        Tue, 20 Nov 2018 20:38:11 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726535AbeKUPKM (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Wed, 21 Nov 2018 10:10:12 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:40465 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725939AbeKUPKL (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Nov 2018 10:10:11 -0500
Received: by mail-pl1-f193.google.com with SMTP id b22-v6so3570960pls.7
        for <linux-kernel@vger.kernel.org>; Tue, 20 Nov 2018 20:37:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=joelfernandes.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=8sm5U8cKgs+Hk5a0p2QXRBGPqZ7nN5nin9bTAzAn6D0=;
        b=kBFcWVzsWnCIMDVTR8h7GDL7Kvggn1JU5Lu/AsSFW5Yxp2mFTAyOmcT23FmqNwU6nF
         2xQT/rggQSHUU1FUNUBTI6svDOYH5GRqwKEMIXXJKSqCXROVUg56NQCpOwWBQ0RjL5Yr
         sQD/8lUJRWQHQ1nmMV5jRhkq5m6Vh6y63qn5k=
X-Received: by 2002:a62:6ec8:: with SMTP id j191mr5206605pfc.198.1542775044987;
        Tue, 20 Nov 2018 20:37:24 -0800 (PST)
Received: from localhost ([2620:0:1000:1601:3aef:314f:b9ea:889f])
        by smtp.gmail.com with ESMTPSA id q195sm48747758pgq.7.2018.11.20.20.37.23
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Tue, 20 Nov 2018 20:37:23 -0800 (PST)
Date: Tue, 20 Nov 2018 20:37:22 -0800
From: Joel Fernandes <joel@joelfernandes.org>
To: "Paul E. McKenney" <paulmck@linux.ibm.com>
Cc: linux-kernel@vger.kernel.org, josh@joshtriplett.org,
        rostedt@goodmis.org, mathieu.desnoyers@efficios.com,
        jiangshanlai@gmail.com
Subject: Re: dyntick-idle CPU and node's qsmask
Message-ID: <20181121043722.GA102501@google.com>
References: <20181110214659.GA96924@google.com>
 <20181110230436.GL4170@linux.ibm.com>
 <20181111030925.GA182908@google.com>
 <20181111042210.GN4170@linux.ibm.com>
 <20181111180916.GA25327@google.com>
 <20181111183618.GY4170@linux.ibm.com>
 <20181120204243.GA22801@google.com>
 <20181120222813.GE4170@linux.ibm.com>
 <20181121020612.GB60896@google.com>
 <20181121024107.GI4170@linux.ibm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181121024107.GI4170@linux.ibm.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCnhUE14fRbnWhhAA--.9671S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxXw1rGFW3KF48AFy7Gr17KFg_yoWrZw45pF
	WUGFyvkr4DJrySk3WIqw1Yq347t393X3W5Wr98t3y8Crn8KFyxXr15ta1Y9ry5Wr4vy3y2
	vrWYvF97ua4qyaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUP2b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6r45MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVWUJVWUCwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r1j6r4UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWlcIIF0xvE
	x4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI0EY4vE52
	x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAFwI0_Jr0_
	Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc40Y0x0EwI
	xGrwCI42IY6xAIw20EY4v20xvaj40_Wr1j6rW3JrUvcSsGvfC2KfnxnUUI43ZEXa7IUOEL
	9UUUUUU==

On Tue, Nov 20, 2018 at 06:41:07PM -0800, Paul E. McKenney wrote:
[...] 
> > > > I was thinking if we could simplify rcu_note_context_switch (the parts that
> > > > call rcu_momentary_dyntick_idle), if we did the following in
> > > > rcu_implicit_dynticks_qs.
> > > > 
> > > > Since we already call rcu_qs in rcu_note_context_switch, that would clear the
> > > > rdp->cpu_no_qs flag. Then there should be no need to call
> > > > rcu_momentary_dyntick_idle from rcu_note_context switch.
> > > 
> > > But does this also work for the rcu_all_qs() code path?
> > 
> > Could we not do something like this in rcu_all_qs? as some over-simplified
> > pseudo code:
> > 
> > rcu_all_qs() {
> >   if (!urgent_qs || !heavy_qs)
> >      return;
> > 
> >   rcu_qs();   // This clears the rdp->cpu_no_qs flags which we can monitor in
> >               //  the diff in my last email (from rcu_implicit_dynticks_qs)
> > }
> 
> Except that rcu_qs() doesn't necessarily report the quiescent state to
> the RCU core.  Keeping down context-switch overhead and all that.

Sure yeah, but I think the QS will be indirectly anyway by the force_qs_rnp()
path if we detect that rcu_qs() happened on the CPU?

> > > > I think this would simplify cond_resched as well.  Could this avoid the need
> > > > for having an rcu_all_qs at all? Hopefully I didn't some Tasks-RCU corner cases..
> > > 
> > > There is also the code path from cond_resched() in PREEMPT=n kernels.
> > > This needs rcu_all_qs().  Though it is quite possible that some additional
> > > code collapsing is possible.
> > > 
> > > > Basically for some background, I was thinking can we simplify the code that
> > > > calls "rcu_momentary_dyntick_idle" since we already register a qs in other
> > > > ways (like by resetting cpu_no_qs).
> > > 
> > > One complication is that rcu_all_qs() is invoked with interrupts
> > > and preemption enabled, while rcu_note_context_switch() is
> > > invoked with interrupts disabled.  Also, as you say, Tasks RCU.
> > > Plus rcu_all_qs() wants to exit immediately if there is nothing to
> > > do, while rcu_note_context_switch() must unconditionally do rcu_qs()
> > > -- yes, it could check, but that would be redundant with the checks
> > 
> > This immediate exit is taken care off in the above psuedo code, would that
> > help the cond_resched performance?
> 
> It look like you are cautiously edging towards the two wrapper functions
> calling common code, relying on inlining and simplification.  Why not just
> try doing it?  ;-)

Sure yeah. I was more thinking of the ambitious goal of getting rid of the
complexity and exploring the general design idea, than containing/managing
the complexity with reducing code duplication. :D

> > > > diff --git a/kernel/rcu/tree.c b/kernel/rcu/tree.c
> > > > index c818e0c91a81..5aa0259c014d 100644
> > > > --- a/kernel/rcu/tree.c
> > > > +++ b/kernel/rcu/tree.c
> > > > @@ -1063,7 +1063,7 @@ static int rcu_implicit_dynticks_qs(struct rcu_data *rdp)
> > > >  	 * read-side critical section that started before the beginning
> > > >  	 * of the current RCU grace period.
> > > >  	 */
> > > > -	if (rcu_dynticks_in_eqs_since(rdp, rdp->dynticks_snap)) {
> > > > +	if (rcu_dynticks_in_eqs_since(rdp, rdp->dynticks_snap) || !rdp->cpu_no_qs.b.norm) {
> > > 
> > > If I am not too confused, this change could cause trouble for
> > > nohz_full CPUs looping in the kernel.  Such CPUs don't necessarily take
> > > scheduler-clock interrupts, last I checked, and this could prevent the
> > > CPU from reporting its quiescent state to core RCU.
> > 
> > Would that still be a problem if rcu_all_qs called rcu_qs? Also the above
> > diff is an OR condition so it is more relaxed than before.
> 
> Yes, because rcu_qs() is only guaranteed to capture the quiescent
> state on the current CPU, not necessarily report it to the RCU core.

The reporting to the core is necessary to call rcu_report_qs_rnp so that the
QS information is propogating up the tree, right?

Wouldn't that reporting be done anyway by:

force_qs_rnp
  -> rcu_implicit_dynticks_qs  (which returns 1 because rdp->cpu_no_qs.b.norm
				was cleared by rcu_qs() and we detect that
				with help of above diff)

  -> rcu_report_qs_rnp is called with mask bit set for corresponding CPU that
  				has the !rdp->cpu_no_qs.b.norm


I think that's what I am missing - that why wouldn't the above scheme work.
The only difference is reporting to the RCU core might invoke pending
callbacks but I'm not sure if that matters for this. I'll these changes,
and try tracing it out and study it more.  thanks for the patience,

 - Joel
 
