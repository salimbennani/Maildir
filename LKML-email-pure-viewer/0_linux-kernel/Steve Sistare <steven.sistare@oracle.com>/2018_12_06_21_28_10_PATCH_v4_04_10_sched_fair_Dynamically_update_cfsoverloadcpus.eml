Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C2687580375;
	Thu,  6 Dec 2018 13:39:25 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 13:39:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A41ZgvxRzauJxzmA2zkMsPp40B9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBeDt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRN9zY7Ue5mVOfhlc6/BYd8XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4TzukcOogWgBQayGejh1z5IhmTq3aIgyeQuDxzN0Qs7H9ISrn?=
 =?us-ascii?q?vUssv6NKEIXeCuzanI1inDYOlM2Tjj84XIdQohruuQUrJ0b8Xd01UgFwTAjliJ?=
 =?us-ascii?q?r4HuIjCb1vwVvmSF8+ZtUfijh3Mppg1vuDSj28QhhpXTio8UyF3I7Th1zYkoKd?=
 =?us-ascii?q?GiVUJ2bt+pHIFNuy2HNoZ6WN4uT31utS0n0LMJo4S7czIPyJk/xx7QdfiHc4+Q?=
 =?us-ascii?q?7xL9W+aePy14iGhmeL2hnRay91avyunmWsmzylZKoTJJktjKtn8Tyxze8taLRu?=
 =?us-ascii?q?d580u7xDqC2R7f5vtZLU03iabXMZ8sz7wompoWq0vDHyv2mEvsjK+Rc0Up4uyo?=
 =?us-ascii?q?6+XhYrX7qZ6QLox0hR/kMqQohMO/Bf00Mg8AXmid5+u8zqbu/VP2QLpUlP06iK?=
 =?us-ascii?q?rZv47AJcQduKG5BxVZ0oE56xawFzumysgXnWEbLFJZfxKKl4zpO1DNIP/mF/u+?=
 =?us-ascii?q?jEmsnSxvx/DHOL3hH5rMImLCkLfnYbZy9UpcxBAvwtBY4pJeEqsBL+7rWk/tqN?=
 =?us-ascii?q?zYCQc0MwyuzObmFNVyzIQeVXiPAq+EKqzSt1CI6/krI+mNYo8VpTn8J+Ik5/7o?=
 =?us-ascii?q?kX82h1sdcbO10psQbXCyBu5mLFmBYXrwntcBFn8Hvgg5TOP0klGCUjlTZ3C0X6?=
 =?us-ascii?q?I7/Tw7DIOmDYHeRoGimrCB3SG7HoFIaWBCEFyDDXDod4CcUfcWdC2SOtNhkiAD?=
 =?us-ascii?q?VbW5UYAhzhGutAj5y7Z9NOrb4C8YuInn1Nh04e3TiB4z+SZ1D8Sbz2GCUWV0kn?=
 =?us-ascii?q?kUSD8x2aB1uVZ9xUub0ahkn/xYEsRe5/BTXQc8L5Lcy+16BMr0WgLOZdqJTFem?=
 =?us-ascii?q?QtO7ATA+VN4xwtkOY1pjFNWmlBzMwy2qA7oNnbyRGJM06r7c32T2J8tl1nnJzr?=
 =?us-ascii?q?chgEc8TstPL2KmgLV/+BbVB4LOl0WZlKOqdaAH0S7J9WeDy3eOvU5CXA5xV6XF?=
 =?us-ascii?q?QW4QZk/Modvl4UPCSqekCa47PQtZ1c6CNqxKZ8X0glpcWvfsJs7SY2KrlGe2Hh?=
 =?us-ascii?q?aH2LWMYZHue2Uc2iXdFUcFnxoS/XaAKQgxGCOhr3jCAzxpEFLle1ns/vVmqHOn?=
 =?us-ascii?q?Uk80yBmHb1Fg17qw/R4VmfycSvMJ0rIYoishrC90HFK839LQBNqNvA5hfKRaYd?=
 =?us-ascii?q?Mg71ZLz2PZtwphPpO+K6BunEIRcwNyv0n2zRV4Fp1AkdQ2rHMt1Ad9M6aY301O?=
 =?us-ascii?q?djyG3ZH8IKbYKnTv8x+1ba7W2Vbe0MiN96cL6fQ4rUjjvQ6zGkoj9XVnz8da03?=
 =?us-ascii?q?+G6prWCwoSVIr7Ulwr+Bhiu7Hafi496pvU1H1xK6W7riXO2tMpBOQ/zBagcMxS?=
 =?us-ascii?q?MKeFFA/0Ds0bCNKiKO0sm1i1cB0EOPpe+7IzP8Ojb/GGwrKkPP58nDK6imRK+J?=
 =?us-ascii?q?p90kOQ+CVmUO7HwpEFz+ue3gSZTTf8jU6tvdztloBAeD4dAHC/yS/iBINKYq1y?=
 =?us-ascii?q?fIALCXqhIsGtx9V+gYLtVGBc9FK5G1wG38qpcwKIb1PhxQ1QyVgXoXu/lCq4zj?=
 =?us-ascii?q?x4iTEoorCE3CzTxeTvbx4HOm9NRGl/glbgO4m0j9YGXEe2awgljgeq5UH/x6JD?=
 =?us-ascii?q?vqRwM3HTQVtUfyjxN2xiULG/tqCBY85M75Mkqz5XX/6/YVCZS779pQUV0yX4Em?=
 =?us-ascii?q?taxTA7cSyqu5rjkxx7jmKdMGh8rH7Ddc5swhff4cTWReRN0ToeWCl4lT7XC0C8?=
 =?us-ascii?q?Ptaz+tWYjZXDsuG4V2+6Up1TcC/rzZ6PtSeh5G1qBwG/kO63mtH9DQc61ir73c?=
 =?us-ascii?q?FwVSrUtBb8fpXr16OiPOJkZEZoBUXw68pnGo5klIswi4od2XwbhpWT4HoGnn3/?=
 =?us-ascii?q?MdRd2aLicnUNQSQHzMLS4AjgwEdjNG6Gx5rlVnWBxctsf9y6YmIV2i0n9cxLBr?=
 =?us-ascii?q?mb7KdYnSRruFq3thzeYeJynjoGzfsu6Xgag/wGuQY3zyWdBKwSEldcPSD2ixuI?=
 =?us-ascii?q?6NW+pr1NZGmzabiwyFZ+nde5AbGepQFcXWz1e5Y4Ei9288V/K0nM0Hzo54Hged?=
 =?us-ascii?q?nQa88TtxKOnxfBiehVNIw+lv4QiSV7PmL9uGUvy/Qnghx2wZG6oI+HJn12862j?=
 =?us-ascii?q?BR5YMiD1a9kX+jHwlqtemseW34ayHpRuADkLXZ3oTe62HzIWr/joKwGOEDgkoH?=
 =?us-ascii?q?eBBbXfBROf6Fthr3/XEZCkLXSXK2cCzdl4WBmRPk9fgB0XXDUnmJ42DBuqydfl?=
 =?us-ascii?q?cEd44DAR+1H5pgFNyuJuKxnwTGPfqB20ZTczTZiVNABW4R1a50fJLcye6fp+Hi?=
 =?us-ascii?q?Ff/p28tQyNN3aUZwJSAWESXUyEAV/jM6Kq5dnB9eiYG+W/I+HPYbWItexRSfOI?=
 =?us-ascii?q?yYiz3Yth+jaGLt+PMWV6D/0nxkpDWmh0G8THlDUOSCwXlCPNY9SYpBem/S13od?=
 =?us-ascii?q?6w8O72WAL0/oaPD7pSMdNy+xG5m6uDNuiQhDpnJjZczJ8D2XjIyL0H1l4Ily5u?=
 =?us-ascii?q?byWtEagHtSPVVq3Qh7RYDwQFZCJzLsdI66M80xJJOc7ajNP1y7F5guQ0C1dDSV?=
 =?us-ascii?q?zuhMWpadYWLGG6MVPNHFyLO6ieJT3X38H3ZruxSaFRjOVRrRG/pSyXHFPjPjud?=
 =?us-ascii?q?kTnkTBSvMeBKjCGGMx1SooC9chBxCWf9SNLqcAG0MNhyjTcu2707mmvKNXIAMT?=
 =?us-ascii?q?h7a05Mrqef7SVdgvV+HWxO9ntkLemelCaf4OnVMZIWsfptAiRpmONW+nU6y71J?=
 =?us-ascii?q?7C5aQPx5gjfdrtlrowLuru7azzthXx1msDtHhIuX+05lPOGR7pRcVGzW1BML43?=
 =?us-ascii?q?+ZBxkDq51iENK8lbpXz430iK/tJX958snI9NERT5zPNM+ZPXxnKhvyBDfOASMC?=
 =?us-ascii?q?VzegMWyZjEtYxqLBvkaJp4Q3/8C/0KEFTaVWAQQ4?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAA4lglch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGDayeMcoswgiGSQYR5FIFfEgEBGBMBh1ciNQgNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEIDQkIKSMMgjYigmUDAwECJBkBATcBBQkBAVADVAcSBYMcg?=
 =?us-ascii?q?gIEAaVRgWwzgnYBAQWHJQiHcIQvghaIaYYWkDWQLAcCgiSPIgIWgVyPWiyIYoE?=
 =?us-ascii?q?EjlMCBAIEBQITAYFHAYILMxoEH4M8ghsMF4NKinRRgQUBAYo6AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAAA4lglch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGDayeMcoswgiGSQYR5FIFfEgEBGBMBh1ciNQgNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEIDQkIKSMMgjYigmUDAwECJBkBATcBBQkBAVADVAcSBYMcggIEAaVRgWwzgnY?=
 =?us-ascii?q?BAQWHJQiHcIQvghaIaYYWkDWQLAcCgiSPIgIWgVyPWiyIYoEEjlMCBAIEBQITA?=
 =?us-ascii?q?YFHAYILMxoEH4M8ghsMF4NKinRRgQUBAYo6AQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="54887953"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 13:39:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726226AbeLFVjT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 16:39:19 -0500
Received: from userp2130.oracle.com ([156.151.31.86]:33064 "EHLO
        userp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726080AbeLFVis (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 16:38:48 -0500
Received: from pps.filterd (userp2130.oracle.com [127.0.0.1])
        by userp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wB6LYdoU192452;
        Thu, 6 Dec 2018 21:38:24 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=from : to : cc :
 subject : date : message-id : in-reply-to : references; s=corp-2018-07-02;
 bh=MGiom5B3eNJjt/fnhvD9eGzBIW/YhFZpm1LPB7GQ+hY=;
 b=ymRPezbmSw/HNLGOLgVNkPUHHL3DESuLPgwU1KNymOMmWHgO86ay9G6nxMRkQk+vILCk
 bYD349kh1Jqmfi+jYdqh87tpuy6Sl8x86K97HH5fYkeg1DWTxUmATLRbZjnBrq3pX7AL
 bPzEw1WXwfi6moJpe0On2vhMD8MW7ooUG8GdjTtQ/LhWQkW1KTgtBp4Gz3liGO9RO6rs
 LpFAS2HbrpctvRLDDf/CodF6luQua1BVZuTxDXQLDZHfPMmnaRC0QpVg1/2hsrtMSzCr
 n0NN3reTQRGuYtKtLu2QdaVhNT+ZNRfy2FLop9DjKhdf+vxhWpB5Wh2vOT6Mmwz6PY+2 lA== 
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
        by userp2130.oracle.com with ESMTP id 2p3hquar5q-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 06 Dec 2018 21:38:24 +0000
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
        by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wB6LcI3i007210
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 6 Dec 2018 21:38:18 GMT
Received: from abhmp0004.oracle.com (abhmp0004.oracle.com [141.146.116.10])
        by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wB6LcIqX021703;
        Thu, 6 Dec 2018 21:38:18 GMT
Received: from ca-dev63.us.oracle.com (/10.211.8.221)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Thu, 06 Dec 2018 21:38:17 +0000
From: Steve Sistare <steven.sistare@oracle.com>
To: mingo@redhat.com, peterz@infradead.org
Cc: subhra.mazumdar@oracle.com, dhaval.giani@oracle.com,
        daniel.m.jordan@oracle.com, pavel.tatashin@microsoft.com,
        matt@codeblueprint.co.uk, umgwanakikbuti@gmail.com,
        riel@redhat.com, jbacik@fb.com, juri.lelli@redhat.com,
        valentin.schneider@arm.com, vincent.guittot@linaro.org,
        quentin.perret@arm.com, steven.sistare@oracle.com,
        linux-kernel@vger.kernel.org
Subject: [PATCH v4 04/10] sched/fair: Dynamically update cfs_overload_cpus
Date: Thu,  6 Dec 2018 13:28:10 -0800
Message-Id: <1544131696-2888-5-git-send-email-steven.sistare@oracle.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1544131696-2888-1-git-send-email-steven.sistare@oracle.com>
References: <1544131696-2888-1-git-send-email-steven.sistare@oracle.com>
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9099 signatures=668679
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1812060181
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

An overloaded CPU has more than 1 runnable task.  When a CFS task wakes
on a CPU, if h_nr_running transitions from 1 to more, then set the CPU in
the cfs_overload_cpus bitmap.  When a CFS task sleeps, if h_nr_running
transitions from 2 to less, then clear the CPU in cfs_overload_cpus.

Signed-off-by: Steve Sistare <steven.sistare@oracle.com>
---
 kernel/sched/fair.c | 52 ++++++++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 48 insertions(+), 4 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index ee271bb..4e105db 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -21,6 +21,7 @@
  *  Copyright (C) 2007 Red Hat, Inc., Peter Zijlstra
  */
 #include "sched.h"
+#include "sparsemask.h"
 
 #include <trace/events/sched.h>
 
@@ -3724,6 +3725,28 @@ static inline void update_misfit_status(struct task_struct *p, struct rq *rq)
 	rq->misfit_task_load = task_h_load(p);
 }
 
+static void overload_clear(struct rq *rq)
+{
+	struct sparsemask *overload_cpus;
+
+	rcu_read_lock();
+	overload_cpus = rcu_dereference(rq->cfs_overload_cpus);
+	if (overload_cpus)
+		sparsemask_clear_elem(overload_cpus, rq->cpu);
+	rcu_read_unlock();
+}
+
+static void overload_set(struct rq *rq)
+{
+	struct sparsemask *overload_cpus;
+
+	rcu_read_lock();
+	overload_cpus = rcu_dereference(rq->cfs_overload_cpus);
+	if (overload_cpus)
+		sparsemask_set_elem(overload_cpus, rq->cpu);
+	rcu_read_unlock();
+}
+
 #else /* CONFIG_SMP */
 
 #define UPDATE_TG	0x0
@@ -3747,6 +3770,9 @@ static inline int idle_balance(struct rq *rq, struct rq_flags *rf)
 	return 0;
 }
 
+static inline void overload_clear(struct rq *rq) {}
+static inline void overload_set(struct rq *rq) {}
+
 static inline void
 util_est_enqueue(struct cfs_rq *cfs_rq, struct task_struct *p) {}
 
@@ -4441,6 +4467,7 @@ static int tg_throttle_down(struct task_group *tg, void *data)
 static void throttle_cfs_rq(struct cfs_rq *cfs_rq)
 {
 	struct rq *rq = rq_of(cfs_rq);
+	unsigned int prev_nr = rq->cfs.h_nr_running;
 	struct cfs_bandwidth *cfs_b = tg_cfs_bandwidth(cfs_rq->tg);
 	struct sched_entity *se;
 	long task_delta, dequeue = 1;
@@ -4468,8 +4495,12 @@ static void throttle_cfs_rq(struct cfs_rq *cfs_rq)
 			dequeue = 0;
 	}
 
-	if (!se)
+	if (!se) {
 		sub_nr_running(rq, task_delta);
+		if (prev_nr >= 2 && prev_nr - task_delta < 2)
+			overload_clear(rq);
+
+	}
 
 	cfs_rq->throttled = 1;
 	cfs_rq->throttled_clock = rq_clock(rq);
@@ -4499,6 +4530,7 @@ static void throttle_cfs_rq(struct cfs_rq *cfs_rq)
 void unthrottle_cfs_rq(struct cfs_rq *cfs_rq)
 {
 	struct rq *rq = rq_of(cfs_rq);
+	unsigned int prev_nr = rq->cfs.h_nr_running;
 	struct cfs_bandwidth *cfs_b = tg_cfs_bandwidth(cfs_rq->tg);
 	struct sched_entity *se;
 	int enqueue = 1;
@@ -4535,8 +4567,11 @@ void unthrottle_cfs_rq(struct cfs_rq *cfs_rq)
 			break;
 	}
 
-	if (!se)
+	if (!se) {
 		add_nr_running(rq, task_delta);
+		if (prev_nr < 2 && prev_nr + task_delta >= 2)
+			overload_set(rq);
+	}
 
 	/* Determine whether we need to wake up potentially idle CPU: */
 	if (rq->curr == rq->idle && rq->cfs.nr_running)
@@ -5082,6 +5117,7 @@ static inline void hrtick_update(struct rq *rq)
 {
 	struct cfs_rq *cfs_rq;
 	struct sched_entity *se = &p->se;
+	unsigned int prev_nr = rq->cfs.h_nr_running;
 
 	/*
 	 * The code below (indirectly) updates schedutil which looks at
@@ -5129,8 +5165,12 @@ static inline void hrtick_update(struct rq *rq)
 		update_cfs_group(se);
 	}
 
-	if (!se)
+	if (!se) {
 		add_nr_running(rq, 1);
+		if (prev_nr == 1)
+			overload_set(rq);
+
+	}
 
 	hrtick_update(rq);
 }
@@ -5147,6 +5187,7 @@ static void dequeue_task_fair(struct rq *rq, struct task_struct *p, int flags)
 	struct cfs_rq *cfs_rq;
 	struct sched_entity *se = &p->se;
 	int task_sleep = flags & DEQUEUE_SLEEP;
+	unsigned int prev_nr = rq->cfs.h_nr_running;
 
 	for_each_sched_entity(se) {
 		cfs_rq = cfs_rq_of(se);
@@ -5188,8 +5229,11 @@ static void dequeue_task_fair(struct rq *rq, struct task_struct *p, int flags)
 		update_cfs_group(se);
 	}
 
-	if (!se)
+	if (!se) {
 		sub_nr_running(rq, 1);
+		if (prev_nr == 2)
+			overload_clear(rq);
+	}
 
 	util_est_dequeue(&rq->cfs, p, task_sleep);
 	hrtick_update(rq);
-- 
1.8.3.1

