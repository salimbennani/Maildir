Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:42:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 37E84580433;
	Wed,  5 Dec 2018 23:28:44 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga002-1.jf.intel.com with ESMTP; 05 Dec 2018 23:28:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AuPQSABQMKWjvctXKFkphZM83/9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBGOt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+kaxVrhGmqRNw34HUYZqVNOJ8c67GYdMWWXBMUtpLWiBdHo+x?=
 =?us-ascii?q?aZYEAeobPeZfqonwv0EArQajDgasGuzvzCJDi3ju3a0n3eUuDwfG0RcgH9MOv3?=
 =?us-ascii?q?TUq9P1OL0OXuCz1aTFyyjIYfBO2Trl9oTEbhQsreuRUb9+b8bd01QjGgDZglmK?=
 =?us-ascii?q?qIHoPSuZ2vkPvmSF9eZsS+yih3Q6pwxyuDSiycghhpHUio4I1lzI7zh1zYU2KN?=
 =?us-ascii?q?GiSkN3fcSoHIZNuyycKoB4WNktQ3tytyY/0rAGuYC0fCwNyJk/2R7fZOKIc5KS?=
 =?us-ascii?q?7hLgSumROzF4i2xheL6lgBay60egxvX9VsmyzllKsjJInsfQun0JzRDf98aKRu?=
 =?us-ascii?q?Vn8ku82juDyxrf5+BGLEwskKrUMZ8hwro+lpoJtkTDGzf7mEH3jK+Qa0Ul9fGk?=
 =?us-ascii?q?6+f5bbX8oJ+TKYt0hhj5MqUgnMywH/44PxMQX2iU5+u8zqfv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIrdJcQBqa61GxVV3Zo76xajEzem18wVnX0GLFJGZh2LlYfoO0zVLfD8DPe/?=
 =?us-ascii?q?hUmskThxy/DHOL3hHovCLnzZnLj9erZ97lZWyBAvwtBH+5JUFrYBLerzWkDrtd?=
 =?us-ascii?q?zYEgU2Mwuuz+bnFdVyzIUeWW2UD6+dMaPSt0KI5+01L+mNYo8VpCjyK/w/6/Hy?=
 =?us-ascii?q?in85nEcXfbO10psPdHC4AvNmLl2bYXrrnNgNC2QKvg04TOzsj12PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZmpeEFCDDW/od5mYW/cLcC+dONRhkjwD?=
 =?us-ascii?q?VbiiUYMhzwuhtA3hxrpjL+rU/DAYtJ352Nh04e3TiQ899ThuA8uB1GGNSnl+nn?=
 =?us-ascii?q?kUSD8uwKB/vUt9x0+A0adihfxUD9hT5/JTXQc8Op7R1Oh6C9H0WgLccdaFUlem?=
 =?us-ascii?q?QtO6AT4vStI92cMBY0F4G9+6lBDMwzKqA6MJl7yMHJE777jT32bvKMpny3bJzq?=
 =?us-ascii?q?8hj0I4TctJMmGmgq1/9w3XB4PSl0WZlqCqdbkT3SLX9WeDy3aOs19cUAJqTarF?=
 =?us-ascii?q?WnUfbFPMrdvl/kPCU6OuCbM/PwRc08GCNLVFZsfpjVpcQvfjI8rRY2Sqlme0BB?=
 =?us-ascii?q?aIwK6MbYXwd2Uc2iXdFFYLkwQJ8XmaMgg+Az+ro3jCAzx2CVLvf0Ts/PFiqHO6?=
 =?us-ascii?q?S080yB2Kb01h1rav5h4Zn/ucS+kX3rIFvichpC55HFK839LQFtqBqBBtfKRaYd?=
 =?us-ascii?q?Mh/lhH0XjVuBB6PpylN6pinEIRcxxrv0Py0BV6Ep9Pkcw0o3Il0gVzKbiU30hc?=
 =?us-ascii?q?dzyFx5/wPL7XKm7s/B20b67W21fe0MuZ+6sV6fQ4rUnjsx+tFkY473pn1NxV2W?=
 =?us-ascii?q?OG5prWFAoSTY7xUkEv+hl6urHWeDUy65nV1H1sK6a0tDDC1sktBOskzBagYthe?=
 =?us-ascii?q?PLmFFA/0D80VGcyuJPY2lFiuaxIOJPpS+7IsP8O6a/uG37amPPxhnD26l2tH+p?=
 =?us-ascii?q?1y0kWW+yp6VOHIxZcFz+iE0QSdUzfzkUmustrwmYBCfjwSGmu/yS75BI9efKFy?=
 =?us-ascii?q?fIALCXuwLM2z3Nlxm5ntW3tA/l65G1wGwNOpeQaVb1Hl3QxQ1F4boHy9lSuj0j?=
 =?us-ascii?q?x0lSokrq6e3CzI3uTjewALOm9NRGl+k1jsJZK4gMwdXEitdwIpjgeq5V7mx6hH?=
 =?us-ascii?q?o6RyN2vTTl1Sfyj1LGFiVbG8tqGYbM5M65MosCNXX/q6YV2BTr79oh0a0z7sHm?=
 =?us-ascii?q?dExTA7cS2qtYv9nxBglG2dK3NzpmLDec5s3Rff+MDcRflJ0zsGXiZ4jiPbBlq9?=
 =?us-ascii?q?P9mv5tiUk5bDsuajV2OuTJFTcC/rzZ+euyu//2FlHRq/n/WrkN39DQc6yTP718?=
 =?us-ascii?q?VtVSjQrxbzeIjr2766MeJ6ZEZoAlD85tF+GoF/lIswmZ4R1WIbhpWT4XoIj2Pz?=
 =?us-ascii?q?Pc9H1qL5aXoHXSQLzMLN4Aj5xE1jKWqEx4f4VnWe2MRtfde7bX0N2iIh8c9KEr?=
 =?us-ascii?q?yb46JenSt6uVe4qQPRYf5gnjYS0/cu6Xgag/0Xtwop1CmSHrcSHUxANyz2ixuI?=
 =?us-ascii?q?98y+rLlQZGu3bbiw009+kcqgDb6YpAFcRW35eowjHSJr6sV/MVTM0GD8643+ed?=
 =?us-ascii?q?nQa84TuQOQkxvak+dVL5cxnOIQhSV7IWL9oWEly+kjgBN1x566u4yHK3h38KK9?=
 =?us-ascii?q?Hx5VLTn1Z8IV+jHwgqdShMeW34azHpp/HjUHRofnTfWtEDgKr/ToKx6OECEgqn?=
 =?us-ascii?q?ecAbffHxWQ6EJ4oHLUCZyrK2ubJHoEzdVhWRmdIlZQgBsPUTU+n545EB2qxcP7?=
 =?us-ascii?q?fEd44DAR+kD3qh9Wxu10MBn/V3/VpB20ZTcsVJifMB1W4xlC5kfSLMye9/9zED?=
 =?us-ascii?q?te/pG7twyNLWqbZwtTAGENW0yEAU3jP7a06dnB9eiYGvSxL//UbbqSruxeUu+C?=
 =?us-ascii?q?xYiz3Yt+4zaMKsKPM2FiD/Il20pDXnN5G8XDlzUMUSwXkC3NYNCBpBeh4S16tc?=
 =?us-ascii?q?S/8PXtWALy6oqDEbpSMdNz+x+ohaePLfKfhCF8KTxAzJMD2WfIyKQD3F4Vkyxh?=
 =?us-ascii?q?bSStHq8atSHTTKPcgKtXDx8AZiN3NctI6b883wZXNc7ajNP1yqB3jvovB1hZUl?=
 =?us-ascii?q?zhn9mjZdYWLGGlKFPHGEGLOayaJT3KxsH7e7+zRadMg+VUqRKwvy2WE0viPjSF?=
 =?us-ascii?q?ijnoWAqjMeBKjCGHIhNevJuxfQpqCWjmVNjmcAG0MMdrjT0qxr05nnPLOnQaMT?=
 =?us-ascii?q?h5ckNNqKWf7CJYgvplHWxB4WFoLe2Fmyaf8unZJYwasfptAiRoie1a5G42xKdS?=
 =?us-ascii?q?7CFBF7RJn36GpMZGqlWnn+/fjDZqBl4G/ipEgJKjuURkJLnD8Z9BSTDI8URJpT?=
 =?us-ascii?q?GVChIFoPN/B9HvsrwWwd/Kwua7fDda+vrG7NcbHY7fL8fRdDJ1IUq3MD3ZFg0I?=
 =?us-ascii?q?SXisL26J1GJHl/THzmDdkZU84sz0hYUDTJdbRVMyELURDBI2T5Q5PJ5rU2Z8wv?=
 =?us-ascii?q?agh8kS6C/moQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAA7zghch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snCowJjA2CIZc5gXAWARgTAYdVIjQJDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCA0JCCkvgjYigmwCdgYJAlADWgENBQWDHIIBAQWmYxyEAgGBPYRvh2+ELxeBQ?=
 =?us-ascii?q?D+DdYRpIIYBAokQhyGPU1UJgiSPHgIWiXCHPwGJC49QAgQCBAUCFIFGgg1NOIM?=
 =?us-ascii?q?nkCQBQzIBATGBBQEBiBAOF4EIgR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAAA7zghch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?nCowJjA2CIZc5gXAWARgTAYdVIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYig?=
 =?us-ascii?q?mwCdgYJAlADWgENBQWDHIIBAQWmYxyEAgGBPYRvh2+ELxeBQD+DdYRpIIYBAok?=
 =?us-ascii?q?QhyGPU1UJgiSPHgIWiXCHPwGJC49QAgQCBAUCFIFGgg1NOIMnkCQBQzIBATGBB?=
 =?us-ascii?q?QEBiBAOF4EIgR8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,321,1539673200"; 
   d="scan'208";a="42966953"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 23:28:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729138AbeLFH2k (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 02:28:40 -0500
Received: from [110.188.70.11] ([110.188.70.11]:4831 "EHLO spam1.hygon.cn"
        rhost-flags-FAIL-FAIL-OK-FAIL) by vger.kernel.org with ESMTP
        id S1728294AbeLFH2k (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 02:28:40 -0500
Received: from MK-FE.hygon.cn ([172.23.18.61])
        by spam1.hygon.cn with ESMTP id wB67QXuM043280;
        Thu, 6 Dec 2018 15:26:33 +0800 (GMT-8)
        (envelope-from puwen@hygon.cn)
Received: from cncheex01.Hygon.cn ([172.23.18.10])
        by MK-FE.hygon.cn with ESMTP id wB67QMKj095378;
        Thu, 6 Dec 2018 15:26:23 +0800 (GMT-8)
        (envelope-from puwen@hygon.cn)
Received: from pw-vbox.hygon.cn (172.23.18.44) by cncheex01.Hygon.cn
 (172.23.18.10) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1466.3; Thu, 6 Dec 2018
 15:26:28 +0800
From: Pu Wen <puwen@hygon.cn>
To: <bp@alien8.de>, <tglx@linutronix.de>, <mingo@redhat.com>,
        <hpa@zytor.com>, <x86@kernel.org>
CC: <linux-kernel@vger.kernel.org>, Pu Wen <puwen@hygon.cn>
Subject: [RFC PATCH RESEND] x86/cpu: Avoid endless loop to get the number of cache leaves
Date: Thu, 6 Dec 2018 15:26:13 +0800
Message-ID: <1544081173-25059-1-git-send-email-puwen@hygon.cn>
X-Mailer: git-send-email 2.7.4
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [172.23.18.44]
X-ClientProxiedBy: cncheex02.Hygon.cn (172.23.18.12) To cncheex01.Hygon.cn
 (172.23.18.10)
X-MAIL: spam1.hygon.cn wB67QXuM043280
X-DNSRBL: 
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

To get the number of cache leaves on AMD or Hygon platform, it should
get the value of cpuid leaf 0x8000001d. But on certain broken platform
such as a not fullly implemented virtual platform(for example Xen),
the value of the cpuid leaf will nerver be CTYPE_NULL, so the kernel
will run into an endless loop.

To fix this problem, add a new enum type CTYPE_MAX to limit the maximum
cpuid accessing.

Signed-off-by: Pu Wen <puwen@hygon.cn>
---
 arch/x86/kernel/cpu/cacheinfo.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kernel/cpu/cacheinfo.c b/arch/x86/kernel/cpu/cacheinfo.c
index dc1b934..7bd167f 100644
--- a/arch/x86/kernel/cpu/cacheinfo.c
+++ b/arch/x86/kernel/cpu/cacheinfo.c
@@ -121,7 +121,8 @@ enum _cache_type {
 	CTYPE_NULL = 0,
 	CTYPE_DATA = 1,
 	CTYPE_INST = 2,
-	CTYPE_UNIFIED = 3
+	CTYPE_UNIFIED = 3,
+	CTYPE_MAX = 4
 };
 
 union _cpuid4_leaf_eax {
@@ -640,7 +641,7 @@ static int find_num_cache_leaves(struct cpuinfo_x86 *c)
 		/* Do cpuid(op) loop to find out num_cache_leaves */
 		cpuid_count(op, i, &eax, &ebx, &ecx, &edx);
 		cache_eax.full = eax;
-	} while (cache_eax.split.type != CTYPE_NULL);
+	} while (cache_eax.split.type != CTYPE_NULL && i != CTYPE_MAX);
 	return i;
 }
 
-- 
2.7.4

