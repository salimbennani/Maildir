Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:39:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1F01F5807A2;
	Mon, 10 Dec 2018 08:30:38 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 08:30:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AP/8g6hONxM8JAoPDtf8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPjzpcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsleVyJDDY28?=
 =?us-ascii?q?YYUBDPcPM/hEoInmv1sDrwCzBRWwCO711jNEmmP60K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rbstX6LqESWv20wqnS0zrMcfVW0ir65YfWbBAhruuMUqxufsrX0kQgCwPFjk+X?=
 =?us-ascii?q?qYzgPjOVy+ENv3Kc7+p6WuKikmgqoBx/rDiow8cjkIjJhoQNx1DA9iV5xYI1Kc?=
 =?us-ascii?q?e/SE5hbt6oCJRQtyCGN4t2X8MtWHtktzo9yr0Dv5OwYSsEyIw/yhLBd/CKd5KE?=
 =?us-ascii?q?7g/tWeqPOzt0mXFodK6lixuz80Ws0vPwWtWw3VpQrSdIksPAum0M2hHR8MSKRf?=
 =?us-ascii?q?pw80G80jiVzQ/T8PtLIUUsmKrbNZEhxrkwm4INsUTMACD2gl/6jKyIeUU+/Oin?=
 =?us-ascii?q?9eDnbq/hpp+GOI94kgD+MqIwlcyjGek0LBQCUmyB9eih2rDv41f1TKhJg/EqiK?=
 =?us-ascii?q?XUsZLXKdwepqGjAg9V1ogj6wy4DzejyNkYmXgHLFRYeBOIloTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgiTBrxv7APrL/GJXANWbDkLj/crZn8UJcyxQ8zcpZ551KDrENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9Bv5mOVmWYWLwgtcdFmcHpgo+Q/briF2eSzFTYGy+X6?=
 =?us-ascii?q?Ih5j4hDoKmApzORoSsgLyHwSe6EYdaZmFAClCQD3joc5+IVOsLaCKXOsVhiCAL?=
 =?us-ascii?q?VaC9S4890hGjrA36y715IebO+S0YspTj1N5y5+DIkREy9Dp0D9mS0m2XTmF0mH?=
 =?us-ascii?q?8ISCEy3KxlvUN9zVKD27Big/NEDdxT++9JUgAiOJHG1Ox6C9fyWgHbcteTUlmm?=
 =?us-ascii?q?QM6rATUwTtI33t8PbFxxG9SkjhDfwSWqB6UZmKCMBJwx6qjcxWT+J95hy3ba06?=
 =?us-ascii?q?ksl1omTdFJNWG8gq5/9hLcB4jGk0iCk6aqdKIc3DPC9WuZzGqOul1YXxB0Uanf?=
 =?us-ascii?q?QX8fYU7Wp8zj5kzeV7+uFagnMgxZxMGfMKRKdMPmgU9GRPj5PtTeeHy+m2G3CR?=
 =?us-ascii?q?aMxbOMaY7qdn4Z3CXcDkgEjg8S8WyHNQg4GieuvWbeACZyGlLoZkPm6fN+p2+j?=
 =?us-ascii?q?Tk8o0wGKaFVs2Kev9R4Lm/OQUfMT0agCuCc6tTp0Gk2w39bXC9qGugpgc79QYd?=
 =?us-ascii?q?I74Fdby23ZsxZxMYCnL6BnnlQeaRh4v1vy1xVrDYVNidQqrHIvzAp1NaKY0FNA?=
 =?us-ascii?q?eymE3ZzqPb3XMG3y/BGpa67ZwVze1NeW+qES6PU3sVnjvQepFlY8/HVjydVaz3?=
 =?us-ascii?q?yc5pDSBgoITZ3xSlo39wR9p7zCeCY9453b1HJyPqi0qDPNwM8pC/Y/xRamfNdf?=
 =?us-ascii?q?N72EGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9iphSuLSw5kJ2fCZ3gudWDf6g1esqcT3mYFCZTEPEWuz0ynkBIhNZqJs?=
 =?us-ascii?q?eYYHE3uhI8qyxt9mnZ7iR2ZY9EK/B1MBwMKpYxuSYEDn0g1KyEsXpmarmS2mwD?=
 =?us-ascii?q?xukjElt7aQ0zbKw+v/ahUHIGlLRG95gFfoIIi0ic0aXUeyYwgokhul+Vj1x6xB?=
 =?us-ascii?q?qKtjKGnTRF9CfzLqIGF6Tquwqr2CbtZP6ZMpqylWUP6wYUuHSr77uBYa1yLjH2?=
 =?us-ascii?q?1DxDE0bT2qu5P5nwBkh2KZNnp8sH3ZecRozxfF+NPcXeJR3iYBRCRgiznYHEK8?=
 =?us-ascii?q?P9qq/dWTjZvDqfqxV2GiVp1Sdynk04WAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3G4FknYs3np0Q23kahpOO8HoDkGfz?=
 =?us-ascii?q?N8hb2K3kYHoMQz4L38Da4Az/1EJ/KXKJwprzVm+Bzct5e9m6fmQW1zo+789QCa?=
 =?us-ascii?q?eY9rxEnTZvrVq+ogLcevx9njYbyfsz538WmeAJuAwxziqDBrAeB1VXPSvplx6Q?=
 =?us-ascii?q?9dCxsL1XZHqzcbi3zEd+mNGhDLKYrQ1GVnf2ZIwiHTNu4cVlK13Dzmfz6o7/dd?=
 =?us-ascii?q?nUbNITsACUkhjag+hULpIxiuQFhS59NW3hun0lzvYxjQZy0pGioIiHN2Jt8bql?=
 =?us-ascii?q?Ah5fMz35fcIS9SvrjaZDhcaWxIGvE45lGjUKWpvoUP2pHCgTtfThKwaBDjk8pm?=
 =?us-ascii?q?2HFrrYGA+V8F1moG7XE5C3K3GXI2EUws54SxmaIExfnRoYXDEnnpMiEgCqxcrh?=
 =?us-ascii?q?cFp25zwL5174rAdMxfxsNxXlTmjfowKoYC8uSJeDNBpW8h1C50DNPMyc9O1zGj?=
 =?us-ascii?q?9X/oa7oAyRMGCbZBlIDWIUWkyCHV/jJaKj5d3B8+ieG+q/IOHCYbSIqexCSfiI?=
 =?us-ascii?q?wYij3Zdh/zaJLs+PJGVtD+Un2kpfWnB0A8TYmzISSywOiiLCdcibqA2n+i1wqM?=
 =?us-ascii?q?C//+/mWAbu5YuJFrtTPs9j+xGwgaefKeGQgDx1Jipf1pMJ3XXI0qQQ3EYOiyFy?=
 =?us-ascii?q?cDmgCbQAujDMTKLTma9XDgQXayBpNMtP4KIzwBNNOdPAit7u0r54j/g1C0pKVF?=
 =?us-ascii?q?D7m8GpY9AKLH+5NF/dGEmLM7GGLyXRw87reaO8VaFQjOJMuhKqpDaUCFXjMSqD?=
 =?us-ascii?q?ljXzUxCvMPpBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9T9YgvR6G2Bb8nVpN/WLmyaH4OneMZsWtfprAiJpl+NV+ng6yr1V?=
 =?us-ascii?q?7D1aS/xxgifdstluo1S+mOmV1jVnSAZOqipMhI+TvURtI6PZ9pxBWXbC5B0M7G?=
 =?us-ascii?q?WQBA4Mp9tqEdDvv6FQyt7SlKP8MjtC8tTU/dcCCMjQMs6ILH0hMR+6UALTWQgE?=
 =?us-ascii?q?Vj6sM0nDhgpWl/TB2GeSq80XtJHq0LUUR7JdHAg4CPwAB0ljNNcCOpByXy4h17?=
 =?us-ascii?q?mBg5hbtjKFsBDNSZAC7dj8XfWIDKCqcW7BgA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAgAklA5ch0O0hNFjHQEBHwUBBgGBT?=
 =?us-ascii?q?AKCaIECJ4N6iHiLMIINFJc9gXMTARgLCAGHbSI0CQ0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpIwyCNiQBgmIBAgMBAiAEGQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcGQWDH?=
 =?us-ascii?q?AGCAQUKmh88ih1wfDOCdgEBBYEwAYVqAwUSeYsWF4FAP4QjgwUZAQGEZYJXjz5?=
 =?us-ascii?q?+kDsJhwiDO4cMGIlmh1eOFYp0AgQCBAUCBQ8hgSWCDjMaCCgIbAaCNR+CCBeDS?=
 =?us-ascii?q?oUUhWAfMoEFAQGMGAEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAgAklA5ch0O0hNFjHQEBHwUBBgGBTAKCaIECJ4N6iHi?=
 =?us-ascii?q?LMIINFJc9gXMTARgLCAGHbSI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBg?=
 =?us-ascii?q?mIBAgMBAiAEGQEBNwEFCQEBCgsNAgImAgIDHxIBBQEcGQWDHAGCAQUKmh88ih1?=
 =?us-ascii?q?wfDOCdgEBBYEwAYVqAwUSeYsWF4FAP4QjgwUZAQGEZYJXjz5+kDsJhwiDO4cMG?=
 =?us-ascii?q?Ilmh1eOFYp0AgQCBAUCBQ8hgSWCDjMaCCgIbAaCNR+CCBeDSoUUhWAfMoEFAQG?=
 =?us-ascii?q?MGAEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="44321081"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 08:30:32 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728644AbeLJQa2 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 11:30:28 -0500
Received: from mail-lj1-f194.google.com ([209.85.208.194]:46868 "EHLO
        mail-lj1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728373AbeLJQa0 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 11:30:26 -0500
Received: by mail-lj1-f194.google.com with SMTP id v15-v6so10163561ljh.13
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 08:30:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=FNExA1qjOhaQFybwbEuutPFOM9IdrQkQkV/9mCAHcLE=;
        b=SfIu7t2/1w+R7i/4EfTmPOyvfrhhGhwx4W1+XPv+6jBFL1EYGXuryzkTOr9t4Gh5yo
         bTk9xgNz3of9okfPPF5gtuHSpcCbwZgY+S+WNuNHgY4ZlTBmhOxk5SyBZOSSJ87OlDlh
         uHqmJ4HxxClBVAQxHVJWY6GokwSN+7xCybJQE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=FNExA1qjOhaQFybwbEuutPFOM9IdrQkQkV/9mCAHcLE=;
        b=KNAiYpQuHQfyzA8cM1vH+HeSvVua8TrcV/xhW5l+/Z1N41iwCyPzQhAenP750ADgXQ
         Lp+DZn8XzKl6jABZ3hL9m96PIo5/oZiDOHKiFcvH7IoezkpMzxFRchLtiHcf8gpVvckC
         rYDk3Wlszk7hg+h+lBpOxJl1SPSiTpii+q/XFjuwjt0nal3HNS/A/QN68A3XaG935gPi
         pA7SBXBs7uGWQCjJ+4f/rFvGwfF55/mCSiCv+93IwfCz+Hj9YwejiPH803yatWTFQrBv
         Ti7+96s/rN5roW0dYPGf1zVeRQzqVUttwbvFdf7v1WBcsriI9WzozA4ktxxDfonpLYIF
         Mbpg==
X-Gm-Message-State: AA+aEWbfgXUomLeUgq1fMLpd1uzGTcPrjdcYJeiI2r24kauQfYf/Krct
        M4aLaUEzQsLBHlsBMJQ5YVTUxKREX4M=
X-Google-Smtp-Source: AFSGD/ULxbXgjwwFnfu/LRGaSrvgRC6Ug3E+t+CjLx+Qsnp0OY6Ch3skOnru3zAeQ5k5yiSYcVcfLg==
X-Received: by 2002:a2e:99d7:: with SMTP id l23-v6mr7363008ljj.165.1544459423367;
        Mon, 10 Dec 2018 08:30:23 -0800 (PST)
Received: from mail-lf1-f46.google.com (mail-lf1-f46.google.com. [209.85.167.46])
        by smtp.gmail.com with ESMTPSA id q67sm2200191lfe.19.2018.12.10.08.30.22
        for <linux-kernel@vger.kernel.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 10 Dec 2018 08:30:22 -0800 (PST)
Received: by mail-lf1-f46.google.com with SMTP id v5so8453221lfe.7
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 08:30:22 -0800 (PST)
X-Received: by 2002:a19:1cb:: with SMTP id 194mr7097493lfb.61.1544459422097;
 Mon, 10 Dec 2018 08:30:22 -0800 (PST)
MIME-Version: 1.0
References: <20181206233205.193244-1-evgreen@chromium.org> <20181206233205.193244-3-evgreen@chromium.org>
 <CAFp+6iHj=Z=MQA0WJBLHb9_KyYPz_snxoYNXAgbGndiqEc_=YQ@mail.gmail.com> <55197846-2b93-9b94-d39e-361f67cf9503@ti.com>
In-Reply-To: <55197846-2b93-9b94-d39e-361f67cf9503@ti.com>
From: Evan Green <evgreen@chromium.org>
Date: Mon, 10 Dec 2018 08:29:44 -0800
X-Gmail-Original-Message-ID: <CAE=gft75ej6bn4Z23b1+=9rjy9HfThkJagN20Jw9wZdhRWbfaw@mail.gmail.com>
Message-ID: <CAE=gft75ej6bn4Z23b1+=9rjy9HfThkJagN20Jw9wZdhRWbfaw@mail.gmail.com>
Subject: Re: [PATCH v6 2/5] phy: qcom-qmp: Utilize fully-specified DT registers
To: kishon@ti.com
Cc: vivek.gautam@codeaurora.org, robh@kernel.org,
        Andy Gross <andy.gross@linaro.org>,
        Doug Anderson <dianders@chromium.org>, swboyd@chromium.org,
        cang@codeaurora.org, linux-kernel@vger.kernel.org,
        Manu Gautam <mgautam@codeaurora.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Dec 7, 2018 at 7:52 PM Kishon Vijay Abraham I <kishon@ti.com> wrote:
>
> Hi,
>
> On 07/12/18 2:16 PM, Vivek Gautam wrote:
> > On Fri, Dec 7, 2018 at 5:06 AM Evan Green <evgreen@chromium.org> wrote:
> >>
> >> Utilize the newly fixed up DT bindings to get the tx2 and rx2 register
> >> regions for the second lane of dual-lane PHYs. Before this change,
> >> the driver was simply using lane one's register region and adding
> >> 0x400, which reached well beyond the DT-specified register
> >> allocation. This would have been a crash were it not for the page size
> >> on ARM64. Fix the driver not to rely on the magic of virtual memory by
> >> using the newly specified DT register regions for tx2 and rx2.
> >>
> >> In order to support existing device trees, this change also contains a
> >> fallback mode for when those new register regions don't exist, which
> >> reverts to the original behavior of overreaching and prints a complaint.
> >>
> >> Signed-off-by: Evan Green <evgreen@chromium.org>
> >> Reviewed-by: Douglas Anderson <dianders@chromium.org>
> >> ---
> >> As Doug mentioned, this should land before the dts patches land, otherwise
> >> the old driver code will use the tx2 register region as pcs_misc.
> >>
> >> Changes in v6: None
> >> Changes in v5: None
> >> Changes in v4: None
> >> Changes in v3: None
> >> Changes in v2: None
> >>
> >>  drivers/phy/qualcomm/phy-qcom-qmp.c | 51 +++++++++++++++++++++--------
> >>  1 file changed, 38 insertions(+), 13 deletions(-)
> >>
> >> diff --git a/drivers/phy/qualcomm/phy-qcom-qmp.c b/drivers/phy/qualcomm/phy-qcom-qmp.c
> >> index 514db7248a5d0..8204d55e2d650 100644
> >> --- a/drivers/phy/qualcomm/phy-qcom-qmp.c
> >> +++ b/drivers/phy/qualcomm/phy-qcom-qmp.c
> >> @@ -72,6 +72,9 @@
> >>
> >>  #define MAX_PROP_NAME                          32
> >>
> >> +/* Define the assumed distance between lanes for underspecified device trees. */
> >> +#define QMP_PHY_LEGACY_LANE_STRIDE             0x400
> >> +
> >>  struct qmp_phy_init_tbl {
> >>         unsigned int offset;
> >>         unsigned int val;
> >> @@ -733,9 +736,6 @@ struct qmp_phy_cfg {
> >>         bool has_phy_dp_com_ctrl;
> >>         /* true, if PHY has secondary tx/rx lanes to be configured */
> >>         bool is_dual_lane_phy;
> >> -       /* Register offset of secondary tx/rx lanes for USB DP combo PHY */
> >> -       unsigned int tx_b_lane_offset;
> >> -       unsigned int rx_b_lane_offset;
> >>
> >>         /* true, if PCS block has no separate SW_RESET register */
> >>         bool no_pcs_sw_reset;
> >> @@ -748,6 +748,8 @@ struct qmp_phy_cfg {
> >>   * @tx: iomapped memory space for lane's tx
> >>   * @rx: iomapped memory space for lane's rx
> >>   * @pcs: iomapped memory space for lane's pcs
> >> + * @tx2: iomapped memory space for second lane's tx (in dual lane PHYs)
> >> + * @rx2: iomapped memory space for second lane's rx (in dual lane PHYs)
> >>   * @pcs_misc: iomapped memory space for lane's pcs_misc
> >>   * @pipe_clk: pipe lock
> >>   * @index: lane index
> >> @@ -759,6 +761,8 @@ struct qmp_phy {
> >>         void __iomem *tx;
> >>         void __iomem *rx;
> >>         void __iomem *pcs;
> >> +       void __iomem *tx2;
> >> +       void __iomem *rx2;
> >>         void __iomem *pcs_misc;
> >>         struct clk *pipe_clk;
> >>         unsigned int index;
> >> @@ -975,8 +979,6 @@ static const struct qmp_phy_cfg qmp_v3_usb3phy_cfg = {
> >>
> >>         .has_phy_dp_com_ctrl    = true,
> >>         .is_dual_lane_phy       = true,
> >> -       .tx_b_lane_offset       = 0x400,
> >> -       .rx_b_lane_offset       = 0x400,
> >>  };
> >>
> >>  static const struct qmp_phy_cfg qmp_v3_usb3_uniphy_cfg = {
> >> @@ -1031,9 +1033,6 @@ static const struct qmp_phy_cfg sdm845_ufsphy_cfg = {
> >>         .mask_pcs_ready         = PCS_READY,
> >>
> >>         .is_dual_lane_phy       = true,
> >> -       .tx_b_lane_offset       = 0x400,
> >> -       .rx_b_lane_offset       = 0x400,
> >> -
> >>         .no_pcs_sw_reset        = true,
> >>  };
> >>
> >> @@ -1238,12 +1237,12 @@ static int qcom_qmp_phy_init(struct phy *phy)
> >>         qcom_qmp_phy_configure(tx, cfg->regs, cfg->tx_tbl, cfg->tx_tbl_num);
> >>         /* Configuration for other LANE for USB-DP combo PHY */
> >>         if (cfg->is_dual_lane_phy)
> >> -               qcom_qmp_phy_configure(tx + cfg->tx_b_lane_offset, cfg->regs,
> >> +               qcom_qmp_phy_configure(qphy->tx2, cfg->regs,
> >>                                        cfg->tx_tbl, cfg->tx_tbl_num);
> >>
> >>         qcom_qmp_phy_configure(rx, cfg->regs, cfg->rx_tbl, cfg->rx_tbl_num);
> >>         if (cfg->is_dual_lane_phy)
> >> -               qcom_qmp_phy_configure(rx + cfg->rx_b_lane_offset, cfg->regs,
> >> +               qcom_qmp_phy_configure(qphy->rx2, cfg->regs,
> >>                                        cfg->rx_tbl, cfg->rx_tbl_num);
> >>
> >>         qcom_qmp_phy_configure(pcs, cfg->regs, cfg->pcs_tbl, cfg->pcs_tbl_num);
> >> @@ -1615,8 +1614,9 @@ int qcom_qmp_phy_create(struct device *dev, struct device_node *np, int id)
> >>
> >>         /*
> >>          * Get memory resources for each phy lane:
> >> -        * Resources are indexed as: tx -> 0; rx -> 1; pcs -> 2; and
> >> -        * pcs_misc (optional) -> 3.
> >> +        * Resources are indexed as: tx -> 0; rx -> 1; pcs -> 2.
> >> +        * For dual lane PHYs: tx2 -> 3, rx2 -> 4, pcs_misc (optional) -> 5
> >> +        * For single lane PHYs: pcs_misc (optional) -> 3.
> >>          */
> >>         qphy->tx = of_iomap(np, 0);
> >>         if (!qphy->tx)
> >> @@ -1630,7 +1630,32 @@ int qcom_qmp_phy_create(struct device *dev, struct device_node *np, int id)
> >>         if (!qphy->pcs)
> >>                 return -ENOMEM;
> >>
> >> -       qphy->pcs_misc = of_iomap(np, 3);
> >> +       /*
> >> +        * If this is a dual-lane PHY, then there should be registers for the
> >> +        * second lane. Some old device trees did not specify this, so fall
> >> +        * back to old legacy behavior of assuming they can be reached at an
> >> +        * offset from the first lane.
> >> +        */
> >> +       if (qmp->cfg->is_dual_lane_phy) {
> >> +               qphy->tx2 = of_iomap(np, 3);
> >> +               qphy->rx2 = of_iomap(np, 4);
> >> +               if (!qphy->tx2 || !qphy->rx2) {
> >> +                       dev_warn(dev,
> >> +                                "Underspecified device tree, falling back to legacy register regions\n");
> >> +
> >> +                       /* In the old version, pcs_misc is at index 3. */
> >> +                       qphy->pcs_misc = qphy->tx2;
> >> +                       qphy->tx2 = qphy->tx + QMP_PHY_LEGACY_LANE_STRIDE;
> >> +                       qphy->rx2 = qphy->rx + QMP_PHY_LEGACY_LANE_STRIDE;
> >> +
> >> +               } else {
> >> +                       qphy->pcs_misc = of_iomap(np, 5);
> >> +               }
> >> +
> >> +       } else {
> >> +               qphy->pcs_misc = of_iomap(np, 3);
> >> +       }
> >> +
> >>         if (!qphy->pcs_misc)
> >>                 dev_vdbg(dev, "PHY pcs_misc-reg not used\n");
> >>
> >> --
> >> 2.18.1
> >>
> >
> > Tested on db820c [1]. USB, PCIe come up.
> > Tested-by: Vivek Gautam <vivek.gautam@codeaurora.org>
> >
> > [1] https://github.com/vivekgautam1/linux/tree/origin/v4.20-rc5/db820c
>
> Thank you Vivek.
> Evan, can you resend this series after rebasing to phy -next and also your
> other series?

Sure. The other series you're referring to is the #clock-cells one
here [1] I assume? I will resend both on top of phy-next.

-Evan

[1] https://lkml.org/lkml/2018/11/30/214
