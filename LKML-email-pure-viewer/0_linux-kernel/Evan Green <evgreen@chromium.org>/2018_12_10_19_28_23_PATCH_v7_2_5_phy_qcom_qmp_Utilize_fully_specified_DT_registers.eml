Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:42:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EC55B580380;
	Mon, 10 Dec 2018 11:29:00 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 10 Dec 2018 11:29:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AeDO2kRdGNj4mucz81T0QHHfclGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZxWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzvFsOtRmzCBKwCO/z0DJEmmX70bEm3+knDArI3BYgH9ULsH?=
 =?us-ascii?q?nMo9v1Kr0dUeaox6fJ1zXMce1Z2THg44XPbB8hv/6MXahufsXPz0kiDB/KjlWK?=
 =?us-ascii?q?qYziOjOV1/kNs22B4+pnT+KvhHcqpgdsqTas3schkpfFip4Rx1ze6Cl0zpg5Kc?=
 =?us-ascii?q?elREN4fdKoCppduiOCO4doQ84uXX1ktSMnxrAGpZG2eTYGxIg5yxPadfCLb5WE?=
 =?us-ascii?q?7xftVOafPDh3nndodbC9ihqv8EWtz+nxWdO60FlWqydJj9fBumwQ2xHV98OJUO?=
 =?us-ascii?q?Fy/l271jaKzw3T6v9LIUQzlafDNZ4hzaA/loAJvUTAACD2gkP2g7GSdkk+/eio?=
 =?us-ascii?q?8evnbq3npp+aKYB0lhnzProylsG7G+g0LwYDU3aB9eih17Dv4Vf1TbRIg/Eul6?=
 =?us-ascii?q?nWqpHaJcAVpq6jBA9V154u6xK+DzegzdQZkmALLFFbdxKdiYjmJVXOLOn/Dfax?=
 =?us-ascii?q?hVSjji1ryuvYPr3uHJrNNGLPkLT/crZn7U5T1g4zwcpY55JOBbENOOjzVVPptN?=
 =?us-ascii?q?zEEh85NBS5w+LmCNV+yIwSQ22OArKCPaPWsF+I4P8vIuaWaI8Uvjb9N+Yq5/r0?=
 =?us-ascii?q?gXAlnl8deLGj3YELZ3CgAvRmP0KZbGLsgtgbEGcKohAxTOvwhF2CTD5cfXCyX6?=
 =?us-ascii?q?0n6zE/CYKmC5rDR4+3jLyA2ie7AoNZZmRcBl+QFnfocp2OW+0QZyKKPs9hjjsE?=
 =?us-ascii?q?WKCjS48myx6irgz6y71hLurS/S0Vrpbj1Nlz5+3OmhA+7z10D8KB026TS2F4hH?=
 =?us-ascii?q?8HRzgz3Kpnu0xy1k+D0bRkg/xfDdFc/ehJUgc9NZ7f1eB6Ecr9WgDac9eNSVam?=
 =?us-ascii?q?RMimAD4rQtIwxd8Of1hyG9G4gh/f2CqqBqcfl6aXC5ws7qLcw3/xKt5+y3nc0q?=
 =?us-ascii?q?ktlV0mQspVOm2gia5y7AzTB4/Pk0WEmKemb6Uc3CjR9GidyWqCpl1XUAl1Ua/d?=
 =?us-ascii?q?R3AQelPWrcjl5kPFV7KhFK4oMhVfxsKYKqtFcNvpjU5YS/flP9jeZ2Gxm2K0BR?=
 =?us-ascii?q?uTwrOMbYzqe3gS3SnHCUgElRwT8miCNQQkGiihpGfeBiR0FV3ze0Ps7fV+qHSj?=
 =?us-ascii?q?Q0Ap1Q6KcVNu26C1+hEPg/ycUO0c3rQftSclqjV0Gku93t3MB9qBoQphYLtTYd?=
 =?us-ascii?q?cn7Fhb0mLZshR3Poa8IKB6ml4ebwN3slvy1xV2D4VAltQqrHMqzQZoNaKUylRB?=
 =?us-ascii?q?dymc3ZDxPL3XJXL//BSua67Qx1Hf38ya+qYJ6PQktVrjuBulGVYl83Viy9NVyW?=
 =?us-ascii?q?eT5o3WDAoOVpL8Slw49xxkqLDVfCY855nY2mZxMaapqDDC3dEpBOw7yhu7e9df?=
 =?us-ascii?q?MaWEFBL9EsEABsiuLvAqlEatbh4eIO9S86s0Ndu8d/SawK6rIPpgnDW+gGVH/Y?=
 =?us-ascii?q?BxyF6D+zB9S+7IxZkFxf6Y0xCDVzf9ilehr8/2lZpFZTEUAmqw1yzkCJRNaa11?=
 =?us-ascii?q?eIYBEX2uLNGvxtVim57tXGZV9ESiB1wawsCpYwedb1vn0Q1Wy0sXu32nlTKkwD?=
 =?us-ascii?q?NulzEms7SQ3DbJw+TkbxcHPm9LRG9/jVbjO4S0jtYaXFS2YAgtjheq+UH6x61D?=
 =?us-ascii?q?rqRlM2bTWVtIfzTxL2x6Uqqwt6COYs5V5JMzrCVXVv+xYVSbSr77vhsb3DnvH2?=
 =?us-ascii?q?pYxDAnaT6qvo/1kAB9iGKYNHxztmbWedlsxRfD49zRXfxR0SAcRCl7ijnXAUKw?=
 =?us-ascii?q?P8Kz8tWXlJfDs+a+WHynVpBIdSnrzIWAtDa05GFwAB2/meyzlcPjEQQgzSD70N?=
 =?us-ascii?q?xqXz3SrBngeonry7i6MeV/c0hoHlD87NB2GoN/kos2n5wQ3XkahpOI/XsIi2vz?=
 =?us-ascii?q?MNNb2b7gY3oJXzIE39nV4A390k15Mn2J3575VmmawsZ5ZNm1eGIW1jg978BXEq?=
 =?us-ascii?q?iU6rNEkDBxolq5qwLRfPd8ki0cyfso9H4VneUJtBAxwSWaB7AYBVNYMjD0lxSU?=
 =?us-ascii?q?89C+q71aZGOucbizzkVyh96gA6+ZogFARnn5YIwtEjFq7sVwK1/M1Hzz6of5eN?=
 =?us-ascii?q?jfd94TtxuUkwvegOhRMp4+iv0KhS9/M2LnoXIl0/I7jQBp3ZyioIiHLGBt8Li4?=
 =?us-ascii?q?AxFCMD31etgT+irsjatFmsaW3oavHohuGzkRXZvoS+6oHywWtfj9KwmOFzg8oG?=
 =?us-ascii?q?+BGbXDBQ+f9Ftmr3XXHp+wLX6XI30Zzch4SBmZOUxSmwQUXDQ8np4kGQGm3s3h?=
 =?us-ascii?q?cEFl5j8P4l70sAdDyuVtNxPnSGfQuB+oaisoSJiYNBdW7BtN50LLPsyF9O5zAz?=
 =?us-ascii?q?tU/p68rAyON2ybYR5HDXoSV0yABlDjOKSu5Nba/+iZAOq+M+XBYbGUpeNCUPeI?=
 =?us-ascii?q?wIql0pF68DaUKsWPIn5iAuU720pEQHB5AtnZlC8JSyANjCLNaMibpBin9y1zr8?=
 =?us-ascii?q?C/9unrWQ316YuODbtSLctg+xSsjaifMO6QgT5zKSxE2ZMU2X/I1L8f0UYSiy5w?=
 =?us-ascii?q?djmtErcAtS/XQKLTgK9XCBEbZD1pNMtV9KIxxQ1NOc/ditPo2b90lP81C1FZVV?=
 =?us-ascii?q?P/nsGlf9AFI2a4NFnfHkaEKKyGJSHXw8Hwea6zU6BQg/5OtxKuuTeXCUvjPjWY?=
 =?us-ascii?q?mjntVhCvN/xMjS6BMBxfvoG9bghiCWz5QN36bR27Ncd9jScqzr0smnPKKWkcPC?=
 =?us-ascii?q?Bgc0NMq72c9z9Xju9jFGxB8HVlK/KJmyKY7+neN5YXvuFnAiVyl+JG/ns6z6FZ?=
 =?us-ascii?q?4z1DRPxwgCHStMJho0m6kumTzTpqSBpPpSxNhIKOvEViP73W95hAWXne+hIN4n?=
 =?us-ascii?q?6dCxALp9tjF93utLpcytnJlKLvNjhC98jY8tcbB8jRe4q7Ny8INxb4UBHOCxAe?=
 =?us-ascii?q?BWqiM23OwUNHl+qJ3nmUqJEgrd7rgpVYDvd4VUc1EfVSNEVnFc1KCZ1tVzMtlP?=
 =?us-ascii?q?a6xJoL5GG+qx/5WMQctZfCAKG8G/LqfRuHhL8MSAEFzLWweYkNOZf21kpKYVlg?=
 =?us-ascii?q?m4HLBk+WWspC9H4yJjQoqVlApSAtBlY43FjoP0b0uCce?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAAAWvg5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeME4wQgiGXPYFzEgEBGBMBh20iNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAwMBAiQZAQE3AQUJAQFQAzEBBQEcBgESBYMcggIBB?=
 =?us-ascii?q?Jp4PIodgWwzgnYBAQWHIQgSh2CDE4EcF4FAP45/iyuEE36QOwmKQ4cBI4lmh1e?=
 =?us-ascii?q?JIo9nAgQCCQIFDyGBJYIOMxoIKAiDJ4IbDBeIXoVgHzKBBQEBjBgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAAAWvg5ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeME4wQgiGXPYFzEgEBGBMBh20iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAwMBAiQZAQE3AQUJAQFQAzEBBQEcBgESBYMcggIBBJp4PIodgWwzgnY?=
 =?us-ascii?q?BAQWHIQgSh2CDE4EcF4FAP45/iyuEE36QOwmKQ4cBI4lmh1eJIo9nAgQCCQIFD?=
 =?us-ascii?q?yGBJYIOMxoIKAiDJ4IbDBeIXoVgHzKBBQEBjBgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="43478130"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 11:28:59 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729295AbeLJT2y (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 14:28:54 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:35981 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727959AbeLJT2w (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 14:28:52 -0500
Received: by mail-pl1-f194.google.com with SMTP id g9so5707251plo.3
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 11:28:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=QZ0tyfZnGvjpbWtr89ZKYBzaN6Xe9Xhg1mJsVCa/ksM=;
        b=Lc9EzU24knz08asR/2bms8b39TemF10gfZ4o3wNYCYZnNMpDEOp2+JF5FewmXDtC3+
         th5zfEs3SzkEfpbgbNYhmnA26/3gJID3pLXobilkbywT7pJ/M0svtbs/7QCTJM5GNhuO
         z6fYkGTxVFgzigHsYlSY5AvoceqYx8CWyzfTI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=QZ0tyfZnGvjpbWtr89ZKYBzaN6Xe9Xhg1mJsVCa/ksM=;
        b=JenlFb6D0NgEjLJAZtLlEPmHTf8zMN7XKlcdGT82siOSLymeI1FAGCHBei8kEKnu7c
         huroe93SYI3OWdpYLoTHOKhOK4Q8KtkxN2/BwQMgML9WW1EIG3iIleGQi6uYxlFojxNz
         kpiWDVuj9Rrj/05qDCE8uir99zh4Y+em+Q6Sl/zfrG6ReNDMWFIy6sOG7tDWdhGyMtdu
         tfcLO6n04aqtQFJbpmMiimKwYpCNjWeS0wUfRKaEpEW9uRIotjKX1qEHsDqAh8zN/XuP
         O/vAu2lPRs7JXj5J0aIVv3RuQadp+vwZ3Ffb1ZHV8SiumaAXkgrw9pn8dXFVjTTJH7FN
         kQtQ==
X-Gm-Message-State: AA+aEWYLX2D18HmyMKQ6JlmZcaqCnnc+Z3+qmNe6UvLZ/sGiKD39sDph
        um0jb17YYHoxgdwLsFImbOMs5Q==
X-Google-Smtp-Source: AFSGD/WN+ftgH6xDdXlgm+0jsupDe6kboXmaYdHdqlVVX5QFOknSEe1OzNOP6stjgcM3wdnGVmoRBQ==
X-Received: by 2002:a17:902:b112:: with SMTP id q18mr13260675plr.255.1544470132025;
        Mon, 10 Dec 2018 11:28:52 -0800 (PST)
Received: from evgreen2.mtv.corp.google.com ([2620:15c:202:201:ffda:7716:9afc:1301])
        by smtp.gmail.com with ESMTPSA id v12sm18318674pgg.41.2018.12.10.11.28.50
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 10 Dec 2018 11:28:51 -0800 (PST)
From: Evan Green <evgreen@chromium.org>
To: Andy Gross <andy.gross@linaro.org>,
        Kishon Vijay Abraham I <kishon@ti.com>
Cc: Douglas Anderson <dianders@chromium.org>,
        Stephen Boyd <swboyd@chromium.org>,
        Evan Green <evgreen@chromium.org>,
        Grygorii Strashko <grygorii.strashko@ti.com>,
        Rob Herring <robh@kernel.org>, Can Guo <cang@codeaurora.org>,
        linux-kernel@vger.kernel.org,
        Vivek Gautam <vivek.gautam@codeaurora.org>,
        Manu Gautam <mgautam@codeaurora.org>
Subject: [PATCH v7 2/5] phy: qcom-qmp: Utilize fully-specified DT registers
Date: Mon, 10 Dec 2018 11:28:23 -0800
Message-Id: <20181210192826.241350-3-evgreen@chromium.org>
X-Mailer: git-send-email 2.18.1
In-Reply-To: <20181210192826.241350-1-evgreen@chromium.org>
References: <20181210192826.241350-1-evgreen@chromium.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Utilize the newly fixed up DT bindings to get the tx2 and rx2 register
regions for the second lane of dual-lane PHYs. Before this change,
the driver was simply using lane one's register region and adding
0x400, which reached well beyond the DT-specified register
allocation. This would have been a crash were it not for the page size
on ARM64. Fix the driver not to rely on the magic of virtual memory by
using the newly specified DT register regions for tx2 and rx2.

In order to support existing device trees, this change also contains a
fallback mode for when those new register regions don't exist, which
reverts to the original behavior of overreaching and prints a complaint.

Signed-off-by: Evan Green <evgreen@chromium.org>
Reviewed-by: Douglas Anderson <dianders@chromium.org>
---
As Doug mentioned, this should land before the dts patches land, otherwise
the old driver code will use the tx2 register region as pcs_misc.

Changes in v7: None
Changes in v6: None
Changes in v5: None
Changes in v4: None
Changes in v3: None
Changes in v2: None

 drivers/phy/qualcomm/phy-qcom-qmp.c | 51 +++++++++++++++++++++--------
 1 file changed, 38 insertions(+), 13 deletions(-)

diff --git a/drivers/phy/qualcomm/phy-qcom-qmp.c b/drivers/phy/qualcomm/phy-qcom-qmp.c
index 514db7248a5d0..8204d55e2d650 100644
--- a/drivers/phy/qualcomm/phy-qcom-qmp.c
+++ b/drivers/phy/qualcomm/phy-qcom-qmp.c
@@ -72,6 +72,9 @@
 
 #define MAX_PROP_NAME				32
 
+/* Define the assumed distance between lanes for underspecified device trees. */
+#define QMP_PHY_LEGACY_LANE_STRIDE		0x400
+
 struct qmp_phy_init_tbl {
 	unsigned int offset;
 	unsigned int val;
@@ -733,9 +736,6 @@ struct qmp_phy_cfg {
 	bool has_phy_dp_com_ctrl;
 	/* true, if PHY has secondary tx/rx lanes to be configured */
 	bool is_dual_lane_phy;
-	/* Register offset of secondary tx/rx lanes for USB DP combo PHY */
-	unsigned int tx_b_lane_offset;
-	unsigned int rx_b_lane_offset;
 
 	/* true, if PCS block has no separate SW_RESET register */
 	bool no_pcs_sw_reset;
@@ -748,6 +748,8 @@ struct qmp_phy_cfg {
  * @tx: iomapped memory space for lane's tx
  * @rx: iomapped memory space for lane's rx
  * @pcs: iomapped memory space for lane's pcs
+ * @tx2: iomapped memory space for second lane's tx (in dual lane PHYs)
+ * @rx2: iomapped memory space for second lane's rx (in dual lane PHYs)
  * @pcs_misc: iomapped memory space for lane's pcs_misc
  * @pipe_clk: pipe lock
  * @index: lane index
@@ -759,6 +761,8 @@ struct qmp_phy {
 	void __iomem *tx;
 	void __iomem *rx;
 	void __iomem *pcs;
+	void __iomem *tx2;
+	void __iomem *rx2;
 	void __iomem *pcs_misc;
 	struct clk *pipe_clk;
 	unsigned int index;
@@ -975,8 +979,6 @@ static const struct qmp_phy_cfg qmp_v3_usb3phy_cfg = {
 
 	.has_phy_dp_com_ctrl	= true,
 	.is_dual_lane_phy	= true,
-	.tx_b_lane_offset	= 0x400,
-	.rx_b_lane_offset	= 0x400,
 };
 
 static const struct qmp_phy_cfg qmp_v3_usb3_uniphy_cfg = {
@@ -1031,9 +1033,6 @@ static const struct qmp_phy_cfg sdm845_ufsphy_cfg = {
 	.mask_pcs_ready		= PCS_READY,
 
 	.is_dual_lane_phy	= true,
-	.tx_b_lane_offset	= 0x400,
-	.rx_b_lane_offset	= 0x400,
-
 	.no_pcs_sw_reset	= true,
 };
 
@@ -1238,12 +1237,12 @@ static int qcom_qmp_phy_init(struct phy *phy)
 	qcom_qmp_phy_configure(tx, cfg->regs, cfg->tx_tbl, cfg->tx_tbl_num);
 	/* Configuration for other LANE for USB-DP combo PHY */
 	if (cfg->is_dual_lane_phy)
-		qcom_qmp_phy_configure(tx + cfg->tx_b_lane_offset, cfg->regs,
+		qcom_qmp_phy_configure(qphy->tx2, cfg->regs,
 				       cfg->tx_tbl, cfg->tx_tbl_num);
 
 	qcom_qmp_phy_configure(rx, cfg->regs, cfg->rx_tbl, cfg->rx_tbl_num);
 	if (cfg->is_dual_lane_phy)
-		qcom_qmp_phy_configure(rx + cfg->rx_b_lane_offset, cfg->regs,
+		qcom_qmp_phy_configure(qphy->rx2, cfg->regs,
 				       cfg->rx_tbl, cfg->rx_tbl_num);
 
 	qcom_qmp_phy_configure(pcs, cfg->regs, cfg->pcs_tbl, cfg->pcs_tbl_num);
@@ -1615,8 +1614,9 @@ int qcom_qmp_phy_create(struct device *dev, struct device_node *np, int id)
 
 	/*
 	 * Get memory resources for each phy lane:
-	 * Resources are indexed as: tx -> 0; rx -> 1; pcs -> 2; and
-	 * pcs_misc (optional) -> 3.
+	 * Resources are indexed as: tx -> 0; rx -> 1; pcs -> 2.
+	 * For dual lane PHYs: tx2 -> 3, rx2 -> 4, pcs_misc (optional) -> 5
+	 * For single lane PHYs: pcs_misc (optional) -> 3.
 	 */
 	qphy->tx = of_iomap(np, 0);
 	if (!qphy->tx)
@@ -1630,7 +1630,32 @@ int qcom_qmp_phy_create(struct device *dev, struct device_node *np, int id)
 	if (!qphy->pcs)
 		return -ENOMEM;
 
-	qphy->pcs_misc = of_iomap(np, 3);
+	/*
+	 * If this is a dual-lane PHY, then there should be registers for the
+	 * second lane. Some old device trees did not specify this, so fall
+	 * back to old legacy behavior of assuming they can be reached at an
+	 * offset from the first lane.
+	 */
+	if (qmp->cfg->is_dual_lane_phy) {
+		qphy->tx2 = of_iomap(np, 3);
+		qphy->rx2 = of_iomap(np, 4);
+		if (!qphy->tx2 || !qphy->rx2) {
+			dev_warn(dev,
+				 "Underspecified device tree, falling back to legacy register regions\n");
+
+			/* In the old version, pcs_misc is at index 3. */
+			qphy->pcs_misc = qphy->tx2;
+			qphy->tx2 = qphy->tx + QMP_PHY_LEGACY_LANE_STRIDE;
+			qphy->rx2 = qphy->rx + QMP_PHY_LEGACY_LANE_STRIDE;
+
+		} else {
+			qphy->pcs_misc = of_iomap(np, 5);
+		}
+
+	} else {
+		qphy->pcs_misc = of_iomap(np, 3);
+	}
+
 	if (!qphy->pcs_misc)
 		dev_vdbg(dev, "PHY pcs_misc-reg not used\n");
 
-- 
2.18.1

