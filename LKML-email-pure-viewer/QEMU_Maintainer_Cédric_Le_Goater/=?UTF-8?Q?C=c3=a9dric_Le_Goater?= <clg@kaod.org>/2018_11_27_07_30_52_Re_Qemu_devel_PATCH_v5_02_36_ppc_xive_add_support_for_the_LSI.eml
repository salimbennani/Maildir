Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 16:15:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 335E35802E4
	for <like.xu@linux.intel.com>; Mon, 26 Nov 2018 23:31:40 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 26 Nov 2018 23:31:34 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AC5ncvxyK25e342PXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uweIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfWS9PDIyy?=
 =?us-ascii?q?YIQADfYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bEj0+k7DQ3KwAItEtIIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwaTW1zLMculW2Tbh54fQdB4uv+mDU7N3ccXL1UkgCRnFhUiX?=
 =?us-ascii?q?pIP5OzOV2f8As2uB4OpnSO2jkWknqxt+ojW2wMonl4rHhpoNx1za6Sl0w5w5Kc?=
 =?us-ascii?q?ClREN4e9KoDpVduiGAO4drQM4uW2VltDogxrAFvZO3ZjUGxZAmyhLFdvCLbpSE?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oBB9EcWRm06MRXpzmC?=
 =?us-ascii?q?tcSzYo3axXrk130VCFl6RihORSGNVJofJFFA4nY83y1et/XvtzVhjAdeCtRWGJ?=
 =?us-ascii?q?Rdy6DCt5Gtk1zPcNakFxXdK4gUaQjGKRH7YJmunTV9QP+aXG0i20fp4lxg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAACa8fxbhxHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUgUBAQELAYEwKo8oiyWBYAglepZDgXMUGBSEQIQvIjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCBsOL4I2BQIDGgEGglsBAQEBAgEBAiQfCikDAgEBAgYBAQoYH?=
 =?us-ascii?q?AoIAwE5GgYNCAEBAYJRS4F6CAEDAaY/M4VAg2OBDYwJEQaBf4ERJwyCKjWEfoV?=
 =?us-ascii?q?bAokilmgJkSoGGJEJmDWBSAGCCk0wCIMogiYXEo4LgXUDi2uBdAMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AHAACa8fxbhxHrdtBkGwEBAQEDAQEBBwMBAQGBUgUBAQE?=
 =?us-ascii?q?LAYEwKo8oiyWBYAglepZDgXMUGBSEQIQvIjUIDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?BsOL4I2BQIDGgEGglsBAQEBAgEBAiQfCikDAgEBAgYBAQoYHAoIAwE5GgYNCAE?=
 =?us-ascii?q?BAYJRS4F6CAEDAaY/M4VAg2OBDYwJEQaBf4ERJwyCKjWEfoVbAokilmgJkSoGG?=
 =?us-ascii?q?JEJmDWBSAGCCk0wCIMogiYXEo4LgXUDi2uBdAMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="52771811"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 26 Nov 2018 23:31:33 -0800
Received: from localhost ([::1]:40473 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRXqG-0002zV-Rp
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 02:31:32 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47061)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gRXpo-0002x6-5m
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 02:31:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gRXpk-0002q4-4A
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 02:31:04 -0500
Received: from 15.mo1.mail-out.ovh.net ([188.165.38.232]:50697)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gRXpj-0002pR-Ti
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 02:31:00 -0500
Received: from player794.ha.ovh.net (unknown [10.109.159.222])
	by mo1.mail-out.ovh.net (Postfix) with ESMTP id 07A90146B91
	for <qemu-devel@nongnu.org>; Tue, 27 Nov 2018 08:30:57 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: postmaster@kaod.org)
	by player794.ha.ovh.net (Postfix) with ESMTPSA id 677C83A4AC7;
	Tue, 27 Nov 2018 07:30:53 +0000 (UTC)
To: David Gibson <david@gibson.dropbear.id.au>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-3-clg@kaod.org>
	<20181122031934.GC10448@umbus.fritz.box>
	<75cdc1f3-f337-3c37-b234-d96222a370d2@kaod.org>
	<20181123010852.GT10448@umbus.fritz.box>
	<8270d5fc-ab20-f47d-37d8-1e2ba179fbfd@kaod.org>
	<20181126053947.GG2251@umbus.fritz.box>
	<23a938ba-d2bc-8a9d-07ef-6672a8cc3a93@kaod.org>
	<20181126234818.GK2251@umbus.fritz.box>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <de9a16b7-6086-0084-2f59-35004553083a@kaod.org>
Date: Tue, 27 Nov 2018 08:30:52 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <20181126234818.GK2251@umbus.fritz.box>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
X-Ovh-Tracer-Id: 17487758828061428593
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedruddukedguddtjecutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 188.165.38.232
Subject: Re: [Qemu-devel] [PATCH v5 02/36] ppc/xive: add support for the LSI
 interrupt sources
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 11/27/18 12:48 AM, David Gibson wrote:
> On Mon, Nov 26, 2018 at 12:20:19PM +0100, C=E9dric Le Goater wrote:
>> On 11/26/18 6:39 AM, David Gibson wrote:
>>> On Fri, Nov 23, 2018 at 02:28:35PM +0100, C=E9dric Le Goater wrote:
>>>>
>>>>>>>> +/*
>>>>>>>> + * Returns whether the event notification should be forwarded.
>>>>>>>> + */
>>>>>>>> +static bool xive_source_lsi_trigger(XiveSource *xsrc, uint32_t
>>>>>>>> srcno)
>>>>>>>
>>>>>>> What exactly "trigger" means isn't entirely obvious for an LSI.  =
Might
>>>>>>> be clearer to have "lsi_assert" and "lsi_deassert" helpers instea=
d.
>>>>>>
>>>>>> This is called only when the interrupt is asserted. So it is a=20
>>>>>> simplified LSI trigger depending only on the 'P' bit.
>>>>>
>>>>> Yes, I see that.  But the result is that while the MSI logic is
>>>>> encapsulated in the MSI trigger function, this leaves the LSI logic
>>>>> split across the trigger function and set_irq() itself. I think it=20
>>>>> would be better to have assert and deassert helpers instead, which
>>>>> handle both the trigger/notification and also the updating of the
>>>>> ASSERTED bit.
>>>>
>>>> Something like the xive_source_set_irq_lsi() below ?
>>>
>>> Uh.. not exactly what I had in mind, but close enough.
>>>
>>> [snip]
>>> +/*
>>>> + * Returns whether the event notification should be forwarded.
>>>> + */
>>>>  static bool xive_source_esb_trigger(XiveSource *xsrc, uint32_t srcn=
o)
>>>>  {
>>>> +    bool notify;
>>>> +
>>>>      assert(srcno < xsrc->nr_irqs);
>>>> =20
>>>> -    return xive_esb_trigger(&xsrc->status[srcno]);
>>>> +    notify =3D xive_esb_trigger(&xsrc->status[srcno]);
>>>> +
>>>> +    if (xive_source_irq_is_lsi(xsrc, srcno) &&
>>>
>>> Except that this block can go, since this function is no longer calle=
d
>>> for LSIs.
>>
>> It still can be through the ESB MMIOs, if the guest does a load on the=
=20
>> trigger page.
>=20
> Oh, good point.  That makes me rethink all my comments on this matter.
>=20
> In that case I think your original code was fine, except that I'd
> prefer to see the setting of the ASSERTED bit inside the trigger
> function, instead of in the set_irq() caller.

ok. I will change that.

Thanks,

C.=20


>=20
>=20
>>
>> C.
>>
>> =20
>>>
>>>> +        xive_source_esb_get(xsrc, srcno) =3D=3D XIVE_ESB_QUEUED) {
>>>> +        qemu_log_mask(LOG_GUEST_ERROR,
>>>> +                      "XIVE: queued an event on LSI IRQ %d\n", srcn=
o);
>>>> +    }
>>>> +
>>>> +    return notify;
>>>>  }
>>>> =20
>>>>  /*
>>>> @@ -103,9 +127,22 @@ static bool xive_source_esb_trigger(Xive
>>>>   */
>>>>  static bool xive_source_esb_eoi(XiveSource *xsrc, uint32_t srcno)
>>>>  {
>>>> +    bool notify;
>>>> +
>>>>      assert(srcno < xsrc->nr_irqs);
>>>> =20
>>>> -    return xive_esb_eoi(&xsrc->status[srcno]);
>>>> +    notify =3D xive_esb_eoi(&xsrc->status[srcno]);
>>>> +
>>>> +    /* LSI sources do not set the Q bit but they can still be
>>>> +     * asserted, in which case we should forward a new event
>>>> +     * notification
>>>> +     */
>>>> +    if (xive_source_irq_is_lsi(xsrc, srcno)) {
>>>> +        bool level =3D xsrc->status[srcno] & XIVE_STATUS_ASSERTED;
>>>> +        notify =3D xive_source_set_irq_lsi(xsrc, srcno, level);
>>>> +    }
>>>> +
>>>> +    return notify;
>>>>  }
>>>> =20
>>>>  /*
>>>> @@ -268,8 +305,12 @@ static void xive_source_set_irq(void *op
>>>>      XiveSource *xsrc =3D XIVE_SOURCE(opaque);
>>>>      bool notify =3D false;
>>>> =20
>>>> -    if (val) {
>>>> -        notify =3D xive_source_esb_trigger(xsrc, srcno);
>>>> +    if (xive_source_irq_is_lsi(xsrc, srcno)) {
>>>> +        notify =3D xive_source_set_irq_lsi(xsrc, srcno, val);
>>>> +    } else {
>>>> +        if (val) {
>>>> +            notify =3D xive_source_esb_trigger(xsrc, srcno);
>>>> +        }
>>>>      }
>>>> =20
>>>>      /* Forward the source event notification for routing */
>>>> @@ -289,9 +330,11 @@ void xive_source_pic_print_info(XiveSour
>>>>              continue;
>>>>          }
>>>> =20
>>>> -        monitor_printf(mon, "  %08x %c%c\n", i + offset,
>>>> +        monitor_printf(mon, "  %08x %s %c%c%c\n", i + offset,
>>>> +                       xive_source_irq_is_lsi(xsrc, i) ? "LSI" : "M=
SI",
>>>>                         pq & XIVE_ESB_VAL_P ? 'P' : '-',
>>>> -                       pq & XIVE_ESB_VAL_Q ? 'Q' : '-');
>>>> +                       pq & XIVE_ESB_VAL_Q ? 'Q' : '-',
>>>> +                       xsrc->status[i] & XIVE_STATUS_ASSERTED ? 'A'=
 : ' ');
>>>>      }
>>>>  }
>>>> =20
>>>> @@ -299,6 +342,8 @@ static void xive_source_reset(DeviceStat
>>>>  {
>>>>      XiveSource *xsrc =3D XIVE_SOURCE(dev);
>>>> =20
>>>> +    /* Do not clear the LSI bitmap */
>>>> +
>>>>      /* PQs are initialized to 0b01 which corresponds to "ints off" =
*/
>>>>      memset(xsrc->status, 0x1, xsrc->nr_irqs);
>>>>  }
>>>> @@ -324,6 +369,7 @@ static void xive_source_realize(DeviceSt
>>>>                                       xsrc->nr_irqs);
>>>> =20
>>>>      xsrc->status =3D g_malloc0(xsrc->nr_irqs);
>>>> +    xsrc->lsi_map =3D bitmap_new(xsrc->nr_irqs);
>>>> =20
>>>>      memory_region_init_io(&xsrc->esb_mmio, OBJECT(xsrc),
>>>>                            &xive_source_esb_ops, xsrc, "xive.esb",
>>>>
>>>
>>
>=20


