Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 16:15:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B29765805FC
	for <like.xu@linux.intel.com>; Sun, 16 Dec 2018 23:59:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga006-1.jf.intel.com with ESMTP; 16 Dec 2018 23:59:51 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A9Q6+bRx/WiM7V9LXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uweIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfWS9PDIyy?=
 =?us-ascii?q?YIQADfYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bEj0+k7DQ3KwAItEtIIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwaTW1zLMculW2Tbh54fQdB4uv+mDU7N3ccXL1UkgCRnFhUiX?=
 =?us-ascii?q?pIP5OzOV2f8As2uB4OpnSO2jkWknqxt+ojW2wMonl4rHhpoNx1za6Sl0w5w5Kc?=
 =?us-ascii?q?ClREN4e9KoDpVduiGAO4drQM4uW2VltDogxrAFvZO3ZjUGxZAmyhLFdvCLbpSE?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oBB9EcWRm06MRXpzmC?=
 =?us-ascii?q?tcSzYo3axXrk130VCFl6RihORSGNVJofJFFA4nY83y1et/XvtzVhjAdeCtRWGJ?=
 =?us-ascii?q?Rdy6DCt5Gtk1zPcNakFxXdK4gUaQjGKRH7YJmunTV9QP+aXG0i20fp4lxg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DPAADBVhdchxHrdtBkHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMIJijHSLFoFgLXyYTRYYFIRAgxMiNwYNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4vgjYFAgMaAQaCWwEBAQECAQECQwopAwMBAgYBAQoYHAoIAwE5GgYNBgIBA?=
 =?us-ascii?q?QGDHYF5CAEDAah1hUCDUIENjD4RBoF/gREngjY1hQGFXwKhGQmRVAYYkVKZZIF?=
 =?us-ascii?q?cgXhNMAiDJ5BccYEEA4t4gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DPAADBVhdchxHrdtBkHQEBBQEHBQGBVAUBCwGBMIJijHS?=
 =?us-ascii?q?LFoFgLXyYTRYYFIRAgxMiNwYNAQMBAQEBAQECARMBAQEKCwkIGw4vgjYFAgMaA?=
 =?us-ascii?q?QaCWwEBAQECAQECQwopAwMBAgYBAQoYHAoIAwE5GgYNBgIBAQGDHYF5CAEDAah?=
 =?us-ascii?q?1hUCDUIENjD4RBoF/gREngjY1hQGFXwKhGQmRVAYYkVKZZIFcgXhNMAiDJ5Bcc?=
 =?us-ascii?q?YEEA4t4gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,364,1539673200"; 
   d="scan'208";a="57743402"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 16 Dec 2018 23:59:50 -0800
Received: from localhost ([::1]:45281 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYnoc-0004SJ-7W
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 02:59:50 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50850)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gYnoI-0004S9-0i
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 02:59:30 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gYnoC-0004jZ-In
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 02:59:29 -0500
Received: from 12.mo5.mail-out.ovh.net ([46.105.39.65]:55552)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gYnoC-0004Vt-5D
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 02:59:24 -0500
Received: from player738.ha.ovh.net (unknown [10.109.160.5])
	by mo5.mail-out.ovh.net (Postfix) with ESMTP id 6AE2020B081
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 08:59:16 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player738.ha.ovh.net (Postfix) with ESMTPSA id 5151E1027847;
	Mon, 17 Dec 2018 07:59:06 +0000 (UTC)
To: David Gibson <david@gibson.dropbear.id.au>
References: <20181215184222.15127-1-clg@kaod.org>
	<20181217045022.GB5597@umbus.fritz.box>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <fe0dab0a-42a9-1a54-eb3d-57f6ab5a4ceb@kaod.org>
Date: Mon, 17 Dec 2018 08:58:45 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181217045022.GB5597@umbus.fritz.box>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
X-Ovh-Tracer-Id: 6292654583157787545
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudeiuddgheejucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.39.65
Subject: Re: [Qemu-devel] [PATCH] target/ppc: fix compilation breakage on
 windows
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Peter Maydell <peter.maydell@linaro.org>, qemu-ppc@nongnu.org,
	qemu-devel@nongnu.org, Greg Kurz <groug@kaod.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/17/18 5:50 AM, David Gibson wrote:
> On Sat, Dec 15, 2018 at 07:42:22PM +0100, C=E9dric Le Goater wrote:
>> Fix the PPC_BIT definitions to use ULL instead in UL and replace
>> __builtin_ffssl() by the equivalent ctz routines.
>>
>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
>> ---
>>
>>  Compile tested with --cross-prefix=3Dx86_64-w64-mingw32-. When I have
>>  some more time, I might try runtime on windows also.
>=20
> Which version of the mingw compiler do you have?  As I've noted
> elsewhere, I haven't been able to reproduce the problem with the mingw
> in Fedora 29.

I have :

	mingw64-gcc-7.3.0-1.fc28.x86_64

>>  The PPC compile failures have been there for a while (pre 2.12) and
>>  the MASK_TO_LSH macro was not used until the XIVE definitions were
>>  introduced.
>>
>>  I let you guys decide on how you want to proceed, but I think it is
>>  safe to merge this patch as a prereq of the pull request.
>>
>>  Thanks,
>>
>>  C.
>>
>>  target/ppc/cpu.h | 10 +++++-----
>>  1 file changed, 5 insertions(+), 5 deletions(-)
>>
>> diff --git a/target/ppc/cpu.h b/target/ppc/cpu.h
>> index ab68abe8a23c..a3d3e91eb4ce 100644
>> --- a/target/ppc/cpu.h
>> +++ b/target/ppc/cpu.h
>> @@ -70,18 +70,18 @@
>>  #define PPC_ELF_MACHINE     EM_PPC
>>  #endif
>> =20
>> -#define PPC_BIT(bit)            (0x8000000000000000UL >> (bit))
>> -#define PPC_BIT32(bit)          (0x80000000UL >> (bit))
>> -#define PPC_BIT8(bit)           (0x80UL >> (bit))
>> +#define PPC_BIT(bit)            (0x8000000000000000ULL >> (bit))
>> +#define PPC_BIT32(bit)          (0x80000000ULL >> (bit))
>> +#define PPC_BIT8(bit)           (0x80ULL >> (bit))
>=20
> We shouldn't need the ULL for the 32-bit and (especially) 8-bit
> versions.
>=20
>>  #define PPC_BITMASK(bs, be)     ((PPC_BIT(bs) - PPC_BIT(be)) | PPC_BI=
T(bs))
>>  #define PPC_BITMASK32(bs, be)   ((PPC_BIT32(bs) - PPC_BIT32(be)) | \
>>                                   PPC_BIT32(bs))
>>  #define PPC_BITMASK8(bs, be)    ((PPC_BIT8(bs) - PPC_BIT8(be)) | PPC_=
BIT8(bs))
>> =20
>>  #if HOST_LONG_BITS =3D=3D 32
>> -# define MASK_TO_LSH(m)          (__builtin_ffsll(m) - 1)
>> +# define MASK_TO_LSH(m)          ctz32(m)
>>  #elif HOST_LONG_BITS =3D=3D 64
>> -# define MASK_TO_LSH(m)          (__builtin_ffsl(m) - 1)
>> +# define MASK_TO_LSH(m)          ctz64(m)
>=20
> Having another look at this, this seems bogus: we're defining an
> interface that's only correct on a *host long*.  But when we use it
> we're almost certain to be working on guest values with a fixed size,
> so using this wrapper just adds confusion.
>=20
> I'm not really seeing any reason to use MASK_TO_LSH() rather than
> using ctz32() and ctz64() explicitly.

Does that mean you think we should define GETFIELD32/64 and=20
SETFIELD32/64 macros ?=20

or should we use the extract32/64 and deposit32/64 helpers instead ? =20
That's a bigger change but may be a better one. =20

Also, in the definitions above, only PPC_BIT() needs to use a ULL.


C.


