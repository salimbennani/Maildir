Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 16:18:55 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E7160580375
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 00:06:11 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 00:06:11 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AhW22QhYhcKcJ4mhCYLfPfSD/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrsqybnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSSJBDIOy?=
 =?us-ascii?q?YYgBAeUPMulXrZXyqVQToxumBwSiBuzixiJGi3Pqw6I6yP8sER3f3AE6A94CrH?=
 =?us-ascii?q?rZodXzOawPUe611q7IzTDbYv5IwzDy9ZLIchE9rv6UW7x/b9Lex0goFwzfklWf?=
 =?us-ascii?q?t5blNC6S2+sRt2ib4PFtVeG1hG4gtg59uD+vxt0jioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1S1R3bcO5HJZTrS2WKYV7T8M4T211uis20rkLtYKhcCUJzJkr3QPTZviGfoSS?=
 =?us-ascii?q?/x7vSfqdLDFlj3x/Yr2/nQy98U24x+38SMa01FFKozJBktnNrXANywfT5tKISv?=
 =?us-ascii?q?t740etwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYesl7PEjLrlEj1lqOaaEsp9+iy?=
 =?us-ascii?q?5+j6YLjqvpqcOJV1igH6PKQugMu/AeEgPwgXQWeb/Pm82KT+8kLnXrVFkPk2nr?=
 =?us-ascii?q?DCv5DdOMQboLK2DBFO0ook7xa/DjSm38oCkXgIMVJIYBaHj4nvO1HTL/H0F/a/?=
 =?us-ascii?q?g1KwkDh1w/DKJKHuApLILnXYlrfherB960FayAou19xf4IhUCr4ZLPLpRkDxrM?=
 =?us-ascii?q?DYDgM+MwGsx+bnCdZ92Z0EVWOAH6+UK6fSsV6O5uIyLOiAfo4VuDDhK/c74/7i?=
 =?us-ascii?q?l2M2mVgYffrh4J0MdXrtHuh6O17LJj3og8wdCiEMuQwxSvGsj0eNFjtaZnK3Vq?=
 =?us-ascii?q?R74SknCYWgFsDaS4WwxbCMwiq/TaBQfX1MX1WFEHP0cNedVvIRLS6fPMJl1yYJ?=
 =?us-ascii?q?TKWsUJMJ0xaouwnnjb19Ib3P5ycauJn/gcVz/PDZjhoo9DZ5XPiahk2EUWB41k?=
 =?us-ascii?q?wJTSQx2ugrrUVjy1ur3qlymPteU9BJ4OtDXw4gc5/QieVnXYPcQAXEK/wIREyn?=
 =?us-ascii?q?SeKCDAYeSdstzsVGN015FP2hhxfPmS2wDOlGxPSwGJUo//eEjDDKLMFnxiODjf?=
 =?us-ascii?q?F5gg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAABuKQpcmBHrdtBjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwgmKME1+NES18llMUgV8UGBSEQIMZIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCWwEBAQECAQECJB8KIgcDAgEBAgYBA?=
 =?us-ascii?q?QoYHAoIAwE5GgYNBgIBAQGDHIF6CAEDAaY0M4VAg2OBDYwfEQaBf4ERJ4I2NYR?=
 =?us-ascii?q?KIBeFWwKJLIdZj10JkUQGGJE2mRqBRoINTTAIgyeCJxcSjgxxgQQDh3JWgXcBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0AGAABuKQpcmBHrdtBjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwgmKME1+NES18llMUgV8UGBSEQIMZIjQJDQEDAQEBAQEBAgETAQEBAQEIC?=
 =?us-ascii?q?wsGGw4vgjYFAgMaAQaCWwEBAQECAQECJB8KIgcDAgEBAgYBAQoYHAoIAwE5GgY?=
 =?us-ascii?q?NBgIBAQGDHIF6CAEDAaY0M4VAg2OBDYwfEQaBf4ERJ4I2NYRKIBeFWwKJLIdZj?=
 =?us-ascii?q?10JkUQGGJE2mRqBRoINTTAIgyeCJxcSjgxxgQQDh3JWgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,324,1539673200"; 
   d="scan'208";a="55933150"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 00:06:10 -0800
Received: from localhost ([::1]:44689 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVB9F-0001Go-Ro
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 03:06:09 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43811)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gVB8x-0001FH-Oh
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 03:05:53 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gVB8s-0002qH-1W
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 03:05:50 -0500
Received: from 1.mo4.mail-out.ovh.net ([178.33.248.196]:44520)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gVB8p-0002KC-GM
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 03:05:45 -0500
Received: from player787.ha.ovh.net (unknown [10.109.143.183])
	by mo4.mail-out.ovh.net (Postfix) with ESMTP id 544261C50D9
	for <qemu-devel@nongnu.org>; Fri,  7 Dec 2018 09:05:37 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: postmaster@kaod.org)
	by player787.ha.ovh.net (Postfix) with ESMTPSA id 7C1A0B1C693;
	Fri,  7 Dec 2018 08:05:32 +0000 (UTC)
To: David Gibson <david@gibson.dropbear.id.au>
References: <20181205232251.10446-1-clg@kaod.org>
	<20181205232251.10446-12-clg@kaod.org>
	<20181207034649.GA10945@umbus.fritz.box>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <0416a307-f6dd-552b-3b57-04ce6c7b101a@kaod.org>
Date: Fri, 7 Dec 2018 09:05:31 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181207034649.GA10945@umbus.fritz.box>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
X-Ovh-Tracer-Id: 3013189629513206641
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudefkedguddujecutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 178.33.248.196
Subject: Re: [Qemu-devel] [PATCH v6 11/37] spapr/xive: use the VCPU id as a
 NVT identifier
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/7/18 4:46 AM, David Gibson wrote:
> On Thu, Dec 06, 2018 at 12:22:25AM +0100, C=E9dric Le Goater wrote:
>> The IVPE scans the O/S CAM line of the XIVE thread interrupt contexts
>> to find a matching Notification Virtual Target (NVT) among the NVTs
>> dispatched on the HW processor threads.
>>
>> On a real system, the thread interrupt contexts are updated by the
>> hypervisor when a Virtual Processor is scheduled to run on a HW
>> thread. Under QEMU, the model will emulate the same behavior by
>> hardwiring the NVT identifier in the thread context registers at
>> reset.
>>
>> The NVT identifier used by the sPAPRXive model is the VCPU id. The END
>> identifier is also derived from the VCPU id. A set of helpers doing
>> the conversion between identifiers are provided for the hcalls
>> configuring the sources and the ENDs.
>>
>> The model does not need a NVT table but The XiveRouter NVT operations
>> are provided to perform some extra checks in the routing algorithm.
>>
>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
>> ---
>>  hw/intc/spapr_xive.c | 53 +++++++++++++++++++++++++++++++++++++++++++=
-
>>  1 file changed, 52 insertions(+), 1 deletion(-)
>>
>> diff --git a/hw/intc/spapr_xive.c b/hw/intc/spapr_xive.c
>> index eef5830d45c6..8da7a8bee949 100644
>> --- a/hw/intc/spapr_xive.c
>> +++ b/hw/intc/spapr_xive.c
>> @@ -26,6 +26,27 @@
>>  #define SPAPR_XIVE_VC_BASE   0x0006010000000000ull
>>  #define SPAPR_XIVE_TM_BASE   0x0006030203180000ull
>> =20
>> +/*
>> + * The allocation of VP blocks is a complex operation in OPAL and the
>> + * VP identifiers have a relation with the number of HW chips, the
>> + * size of the VP blocks, VP grouping, etc. The QEMU sPAPR XIVE
>> + * controller model does not have the same constraints and can use a
>> + * simple mapping scheme of the CPU vcpu_id
>> + *
>> + * These identifiers are never returned to the OS.
>> + */
>> +
>> +#define SPAPR_XIVE_NVT_BASE 0x400
>> +
>> +/*
>> + * sPAPR NVT and END indexing helpers
>> + */
>> +static uint32_t spapr_xive_nvt_to_target(sPAPRXive *xive, uint8_t nvt=
_blk,
>> +                                  uint32_t nvt_idx)
>> +{
>> +    return nvt_idx - SPAPR_XIVE_NVT_BASE;
>> +}
>> +
>>  /*
>>   * On sPAPR machines, use a simplified output for the XIVE END
>>   * structure dumping only the information related to the OS EQ.
>> @@ -40,7 +61,8 @@ static void spapr_xive_end_pic_print_info(sPAPRXive =
*xive, XiveEND *end,
>>      uint32_t nvt =3D GETFIELD_BE32(END_W6_NVT_INDEX, end->w6);
>>      uint8_t priority =3D GETFIELD_BE32(END_W7_F0_PRIORITY, end->w7);
>> =20
>> -    monitor_printf(mon, "%3d/%d % 6d/%5d ^%d", nvt,
>> +    monitor_printf(mon, "%3d/%d % 6d/%5d ^%d",
>> +                   spapr_xive_nvt_to_target(xive, 0, nvt),
>>                     priority, qindex, qentries, qgen);
>> =20
>>      xive_end_queue_pic_print_info(end, 6, mon);
>> @@ -246,6 +268,33 @@ static int spapr_xive_write_end(XiveRouter *xrtr,=
 uint8_t end_blk,
>>      return 0;
>>  }
>> =20
>> +static int spapr_xive_get_nvt(XiveRouter *xrtr,
>> +                              uint8_t nvt_blk, uint32_t nvt_idx, Xive=
NVT *nvt)
>> +{
>> +    sPAPRXive *xive =3D SPAPR_XIVE(xrtr);
>> +    uint32_t vcpu_id =3D spapr_xive_nvt_to_target(xive, nvt_blk, nvt_=
idx);
>> +    PowerPCCPU *cpu =3D spapr_find_cpu(vcpu_id);
>> +
>> +    if (!cpu) {
>> +        return -1;
>> +    }
>> +
>> +    /*
>> +     * sPAPR does not maintain a NVT table. Return that the NVT is
>> +     * valid if we have found a matching CPU
>> +     */
>> +    nvt->w0 =3D cpu_to_be32(NVT_W0_VALID);
>> +    return 0;
>> +}
>> +
>> +static int spapr_xive_write_nvt(XiveRouter *xrtr, uint8_t nvt_blk,
>> +                                uint32_t nvt_idx, XiveNVT *nvt,
>> +                                uint8_t word_number)
>> +{
>> +    /* no NVT table */
>> +    return 0;
>=20
> Should this ever get called.  IIUC, we don't need to write back to the
> NVTs because the papr machine should never hit a non-scheduled NVT.

yes.

> But in that case should this actually be a no-op, or should it be an
> g_assert_not_reached()?

We should never reach it because the get_nvt() should have failed
before in xive_presenter_notify() :

    ...
    /* NVT cache lookup */
    if (xive_router_get_nvt(xrtr, nvt_blk, nvt_idx, &nvt)) {
        qemu_log_mask(LOG_GUEST_ERROR, "XIVE: no NVT %x/%x\n",
                      nvt_blk, nvt_idx);
        return;
    }
    ...

Leaving the machine in a curious state.

so for _write_nvt(), I think g_assert_not_reached() is appropriate and=20
I will add the comment you just made.

may be, I should add an 'assert(cpu)' in _get_nvt() also.
C.=20


