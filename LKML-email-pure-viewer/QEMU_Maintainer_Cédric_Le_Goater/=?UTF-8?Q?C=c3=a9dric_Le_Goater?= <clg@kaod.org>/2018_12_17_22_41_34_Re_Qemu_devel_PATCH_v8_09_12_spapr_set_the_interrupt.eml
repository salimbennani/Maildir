Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:50:48 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7CAEA58079D
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 14:44:54 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 14:44:54 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AB7WrqBPynQlAhgw83iQl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/rzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQMhRWSxPDICy?=
 =?us-ascii?q?YYQBAOUOP/pXoYbgqVsWrxawBwahCP7hxzNUmHD2xrY30/g4EQzcwAAsA9wDvX?=
 =?us-ascii?q?TSod7oNKkSS+e1zKzQwDjddfRZxC396InUfR85p/+DQ6p/f8vWyUY1CwPKkE+Q?=
 =?us-ascii?q?opHiMjyJ0uQNvHOW7+l6WuKolmErsQZxoiKgxso1jITCm4Ebykjc+Cln3Io4Js?=
 =?us-ascii?q?e0RFNmbdOnCpdcqS+XOotsTs8/QWxkoCI3xqEctZO4eCUG0okryhreZvCdboSE?=
 =?us-ascii?q?/w7vWeCMKjlinn1lYqiwhxOq/Eig1OL8Us603U5OripEidnMqmsN2wbc6siBV/?=
 =?us-ascii?q?tx5ECh2SyA1wzL6+FEJ147lbbDJpI/3rI9lYAfvVneEiL1gkn6kqGbe0U+9uS1?=
 =?us-ascii?q?6enrerDmqYWdN49whAH+KKMumsmnDOQhLAcOWnWb9f2h27L94032XrFKguQtna?=
 =?us-ascii?q?nerZDaI9gUqbCiAwNS1oYj6hW/ACm83NUXgHkKNFZFeBOBj4j0NFDCOvH4DfGj?=
 =?us-ascii?q?g1uylDdn3ezJPrrkApjWKHjDl7Hhfbl7605B0gYzyspf551MBrEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhNwy0wuXnB8tn2oIRRGKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mQxVQK+ywJFCaGykBu80ZAKdYGHwmZEHFmEFuBd4S/blz1iLUDpWbnD1WL?=
 =?us-ascii?q?og5zY9E8W/AILeA4ygnrGFjxq9BYBcM2VPC1SQFiXxeoCZHvsBdi+WZ9VsiyEJ?=
 =?us-ascii?q?TqSJTYgn2hez8gjgxO18M+DW9yYE4I/lz8V//ObJlBs/pgBzWuiUzWCBB051lH?=
 =?us-ascii?q?gPQXdi0KlhoEBVxVaJyq9+xfBCEsRZ6vpTFAY2c5fBmb9UEdf3DylAcs2IQ2GC?=
 =?us-ascii?q?T+KJBjgtQ8h5l9QKbG5+EtKuyBfZ0Hz5UPcui7WXCclsoern1H/rKpM4ki6e2Q?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BRAgCFJRhchxHrdtBlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgmKMdIx6LXyWcIFfFRgUhECDFiI4EgEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OL4I2BQIDGgEGglsBAQEBAgEBAiQfCikDAgEBAgYBAQoYHAoIAwE5GgYNBgIBA?=
 =?us-ascii?q?QGDHYF5CAEDAakmM4VAg1+BDYw+EQaBf4ERJ4I2NYRqF4VfAqEZCZFUBhiRUpl?=
 =?us-ascii?q?kgV2Bd00wCIMngicXjh5xgQQDi3iBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BRAgCFJRhchxHrdtBlHAEBAQQBAQcEAQGBZYExgmKMdIx?=
 =?us-ascii?q?6LXyWcIFfFRgUhECDFiI4EgEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGg?=
 =?us-ascii?q?lsBAQEBAgEBAiQfCikDAgEBAgYBAQoYHAoIAwE5GgYNBgIBAQGDHYF5CAEDAak?=
 =?us-ascii?q?mM4VAg1+BDYw+EQaBf4ERJ4I2NYRqF4VfAqEZCZFUBhiRUplkgV2Bd00wCIMng?=
 =?us-ascii?q?icXjh5xgQQDi3iBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="67233569"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 14:44:53 -0800
Received: from localhost ([::1]:50224 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZ1d6-000729-GU
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 17:44:52 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60519)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gZ1aA-0004zY-WE
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:41:55 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gZ1a6-0004PJ-5C
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:41:50 -0500
Received: from 6.mo5.mail-out.ovh.net ([178.32.119.138]:33539)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gZ1a5-0004Mt-NQ
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:41:46 -0500
Received: from player157.ha.ovh.net (unknown [10.109.160.40])
	by mo5.mail-out.ovh.net (Postfix) with ESMTP id B97352043A2
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 23:41:40 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player157.ha.ovh.net (Postfix) with ESMTPSA id 8F865DC9CE0;
	Mon, 17 Dec 2018 22:41:34 +0000 (UTC)
To: David Gibson <david@gibson.dropbear.id.au>
References: <20181211223823.13770-1-clg@kaod.org>
	<20181211223823.13770-10-clg@kaod.org>
	<4a9ab4ce-c7d7-9744-e5ea-10df38806e9a@kaod.org>
	<20181217060139.GG5597@umbus.fritz.box>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <6f685f79-56b2-7ea4-57b6-e1f21bd34326@kaod.org>
Date: Mon, 17 Dec 2018 23:41:34 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181217060139.GG5597@umbus.fritz.box>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
X-Ovh-Tracer-Id: 2748321675686742897
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudeigedgtddvucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 178.32.119.138
Subject: Re: [Qemu-devel] [PATCH v8 09/12] spapr: set the interrupt
 presenter at reset
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/17/18 7:01 AM, David Gibson wrote:
> On Thu, Dec 13, 2018 at 01:52:14PM +0100, C=E9dric Le Goater wrote:
>> On 12/11/18 11:38 PM, C=E9dric Le Goater wrote:
>>> Currently, the interrupt presenter of the vCPU is set at realize
>>> time. Setting it at reset will become necessary when the new machine
>>> supporting both interrupt modes is introduced. In this machine, the
>>> interrupt mode is chosen at CAS time and activated after a reset.
>>
>> I think we need a second '->intc' pointer specific to XIVE instead.=20
>> How about ->intc_xive ?
>=20
> Ah, interesting.  If we're going to need that, we might as well go
> to specific ->icp and ->tctx pointers with the right types.

Hmm, PowerPCCPU is defined under target/ppc and adding the type might=20
add some noise. I will check.

> I don't particularly like having those machine specific pointers
> within the cpu structure, but we can look at fixing that later by
> reviving my patches to move various machine specific stuff within the
> cpu into a separate sub-allocation.

ok.

Thanks,

C.=20

>>
>> We could just drop this patch and easly get rid of the XiveTCTX object=
=20
>> leak in spapr_unrealize_vcpu().
>>
>> C.=20
>>
>>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
>>> ---
>>>
>>>  Changes since v7:
>>>
>>>  - introduced spapr_irq_reset_xics().=20
>>>
>>>  include/hw/ppc/spapr_cpu_core.h |  2 ++
>>>  hw/ppc/spapr_cpu_core.c         | 26 ++++++++++++++++++++++++++
>>>  hw/ppc/spapr_irq.c              | 13 +++++++++++++
>>>  3 files changed, 41 insertions(+)
>>>
>>> diff --git a/include/hw/ppc/spapr_cpu_core.h b/include/hw/ppc/spapr_c=
pu_core.h
>>> index 9e2821e4b31f..fc8ea9021656 100644
>>> --- a/include/hw/ppc/spapr_cpu_core.h
>>> +++ b/include/hw/ppc/spapr_cpu_core.h
>>> @@ -53,4 +53,6 @@ static inline sPAPRCPUState *spapr_cpu_state(PowerP=
CCPU *cpu)
>>>      return (sPAPRCPUState *)cpu->machine_data;
>>>  }
>>> =20
>>> +void spapr_cpu_core_set_intc(PowerPCCPU *cpu, const char *intc_type)=
;
>>> +
>>>  #endif
>>> diff --git a/hw/ppc/spapr_cpu_core.c b/hw/ppc/spapr_cpu_core.c
>>> index 82666436e9b4..afc5d4f4e739 100644
>>> --- a/hw/ppc/spapr_cpu_core.c
>>> +++ b/hw/ppc/spapr_cpu_core.c
>>> @@ -397,3 +397,29 @@ static const TypeInfo spapr_cpu_core_type_infos[=
] =3D {
>>>  };
>>> =20
>>>  DEFINE_TYPES(spapr_cpu_core_type_infos)
>>> +
>>> +typedef struct ForeachFindIntCArgs {
>>> +    const char *intc_type;
>>> +    Object *intc;
>>> +} ForeachFindIntCArgs;
>>> +
>>> +static int spapr_cpu_core_find_intc(Object *child, void *opaque)
>>> +{
>>> +    ForeachFindIntCArgs *args =3D opaque;
>>> +
>>> +    if (object_dynamic_cast(child, args->intc_type)) {
>>> +        args->intc =3D child;
>>> +    }
>>> +
>>> +    return args->intc !=3D NULL;
>>> +}
>>> +
>>> +void spapr_cpu_core_set_intc(PowerPCCPU *cpu, const char *intc_type)
>>> +{
>>> +    ForeachFindIntCArgs args =3D { intc_type, NULL };
>>> +
>>> +    object_child_foreach(OBJECT(cpu), spapr_cpu_core_find_intc, &arg=
s);
>>> +    g_assert(args.intc);
>>> +
>>> +    cpu->intc =3D args.intc;
>>> +}
>>> diff --git a/hw/ppc/spapr_irq.c b/hw/ppc/spapr_irq.c
>>> index 0999a2b2d69c..814500f22d34 100644
>>> --- a/hw/ppc/spapr_irq.c
>>> +++ b/hw/ppc/spapr_irq.c
>>> @@ -12,6 +12,7 @@
>>>  #include "qemu/error-report.h"
>>>  #include "qapi/error.h"
>>>  #include "hw/ppc/spapr.h"
>>> +#include "hw/ppc/spapr_cpu_core.h"
>>>  #include "hw/ppc/spapr_xive.h"
>>>  #include "hw/ppc/xics.h"
>>>  #include "sysemu/kvm.h"
>>> @@ -208,6 +209,15 @@ static int spapr_irq_post_load_xics(sPAPRMachine=
State *spapr, int version_id)
>>>      return 0;
>>>  }
>>> =20
>>> +static void spapr_irq_reset_xics(sPAPRMachineState *spapr, Error **e=
rrp)
>>> +{
>>> +   CPUState *cs;
>>> +
>>> +    CPU_FOREACH(cs) {
>>> +        spapr_cpu_core_set_intc(POWERPC_CPU(cs), spapr->icp_type);
>>> +    }
>>> +}
>>> +
>>>  #define SPAPR_IRQ_XICS_NR_IRQS     0x1000
>>>  #define SPAPR_IRQ_XICS_NR_MSIS     \
>>>      (XICS_IRQ_BASE + SPAPR_IRQ_XICS_NR_IRQS - SPAPR_IRQ_MSI)
>>> @@ -225,6 +235,7 @@ sPAPRIrq spapr_irq_xics =3D {
>>>      .dt_populate =3D spapr_dt_xics,
>>>      .cpu_intc_create =3D spapr_irq_cpu_intc_create_xics,
>>>      .post_load   =3D spapr_irq_post_load_xics,
>>> +    .reset       =3D spapr_irq_reset_xics,
>>>  };
>>> =20
>>>  /*
>>> @@ -325,6 +336,8 @@ static void spapr_irq_reset_xive(sPAPRMachineStat=
e *spapr, Error **errp)
>>>      CPU_FOREACH(cs) {
>>>          PowerPCCPU *cpu =3D POWERPC_CPU(cs);
>>> =20
>>> +        spapr_cpu_core_set_intc(cpu, TYPE_XIVE_TCTX);
>>> +
>>>          /* (TCG) Set the OS CAM line of the thread interrupt context=
. */
>>>          spapr_xive_set_tctx_os_cam(XIVE_TCTX(cpu->intc));
>>>      }
>>>
>>
>=20


