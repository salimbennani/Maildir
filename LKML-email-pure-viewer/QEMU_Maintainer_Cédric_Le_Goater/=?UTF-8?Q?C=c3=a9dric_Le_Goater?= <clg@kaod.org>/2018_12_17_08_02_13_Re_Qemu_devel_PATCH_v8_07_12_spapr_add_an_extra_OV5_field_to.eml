Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  17 Dec 2018 16:15:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DEE8558079C
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 00:03:12 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 17 Dec 2018 00:03:12 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AV7W9phwjkyGTcVHXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uweIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CW2RBUMZfWS9PDIyy?=
 =?us-ascii?q?YIQADfYOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT73bEj0+k7DQ3KwAItEtIIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwaTW1zLMculW2Tbh54fQdB4uv+mDU7N3ccXL1UkgCRnFhUiX?=
 =?us-ascii?q?pIP5OzOV2f8As2uB4OpnSO2jkWknqxt+ojW2wMonl4rHhpoNx1za6Sl0w5w5Kc?=
 =?us-ascii?q?ClREN4e9KoDpVduiGAO4drQM4uW2VltDogxrAFvZO3ZjUGxZAmyhLFdvCLbpSE?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gw0FZLtSpFjsLMumoC1xzV98iLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IswaQ8mocOvUnABCP6hkv7ga+Mekk5+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8ymH+s4NxUOU3GG9uuiyr3s40n5TKxRgf0xj6?=
 =?us-ascii?q?nZtozVKtoApqK+Bw9V04Uj5AilAzapzdQVhX0HLFNDeBKagInlIVDOIPbkDfih?=
 =?us-ascii?q?h1Sgiitkx/fDPrD6BJXNKX7DkLjnfbZg8UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jSxxpFkGYKP83YcLcGvqWbNiIl6FejzqhdEOF3pMuRAxC+njiVmHWDgUYG6uXq?=
 =?us-ascii?q?U6/XYiBYe7SIvOWI2p04GHxzqxS5hfZ2RaDQKVHHL1MomJRfoILTifO9JsiSAs?=
 =?us-ascii?q?U7+nRIk8kxa0u1jh1rBlI+HIrzAero/pz9Nv5ufexi01oBB9EcWRm06MRXpzmC?=
 =?us-ascii?q?tcSzYo3axXrk130VCFl6RihORSGNVJofJFFA4nY83y1et/XvtzVhjAdeCtRWGJ?=
 =?us-ascii?q?Rdy6DCt5Gtk1zPcNakFxXdK4gUaQjGKRH7YJmunTV9QP+aXG0i20fp4lxg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BlAgDBVhdchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgmKMdIsWgWAIJZlLFBgUhECDEyI4EgEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OL4I2BQIDGgEGglwBAgMBAiQfCikDAwECBgEBChgcCggDATkaBg0GAgEBAYMdg?=
 =?us-ascii?q?gEBAwGoQjOFQINQgQ2MPhEGgX+BEScMgl+FAYVfAqEZCZFUBhiRUplkgV2Bd00?=
 =?us-ascii?q?wCIMngiQCARcSjgxxgQQDi3iBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0BlAgDBVhdchxHrdtBkHAEBAQQBAQcEAQGBZYExgmKMdIs?=
 =?us-ascii?q?WgWAIJZlLFBgUhECDEyI4EgEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGg?=
 =?us-ascii?q?lwBAgMBAiQfCikDAwECBgEBChgcCggDATkaBg0GAgEBAYMdggEBAwGoQjOFQIN?=
 =?us-ascii?q?QgQ2MPhEGgX+BEScMgl+FAYVfAqEZCZFUBhiRUplkgV2Bd00wCIMngiQCARcSj?=
 =?us-ascii?q?gxxgQQDi3iBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,364,1539673200"; 
   d="scan'208";a="44315408"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 00:03:12 -0800
Received: from localhost ([::1]:45298 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYnrr-0005wK-Fz
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 03:03:11 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52097)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gYnrN-0005ur-4K
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 03:02:42 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gYnrI-00008U-VL
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 03:02:41 -0500
Received: from 8.mo179.mail-out.ovh.net ([46.105.75.26]:42769)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gYnrI-000061-Lf
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 03:02:36 -0500
Received: from player729.ha.ovh.net (unknown [10.109.143.220])
	by mo179.mail-out.ovh.net (Postfix) with ESMTP id 1065A10BF53
	for <qemu-devel@nongnu.org>; Mon, 17 Dec 2018 09:02:34 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player729.ha.ovh.net (Postfix) with ESMTPSA id 0067210D5B19;
	Mon, 17 Dec 2018 08:02:18 +0000 (UTC)
To: David Gibson <david@gibson.dropbear.id.au>
References: <20181211223823.13770-1-clg@kaod.org>
	<20181211223823.13770-8-clg@kaod.org>
	<20181217052758.GC5597@umbus.fritz.box>
From: =?UTF-8?Q?C=c3=a9dric_Le_Goater?= <clg@kaod.org>
Message-ID: <0011604a-35bf-0797-507c-77cf283b418f@kaod.org>
Date: Mon, 17 Dec 2018 09:02:13 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181217052758.GC5597@umbus.fritz.box>
Content-Type: text/plain; charset=windows-1252
Content-Language: en-US
X-Ovh-Tracer-Id: 6348386627585084273
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudeiuddgheekucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.75.26
Subject: Re: [Qemu-devel] [PATCH v8 07/12] spapr: add an extra OV5 field to
 the sPAPR IRQ backend
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/17/18 6:27 AM, David Gibson wrote:
> On Tue, Dec 11, 2018 at 11:38:18PM +0100, C=E9dric Le Goater wrote:
>> The interrupt modes supported by the hypervisor are advertised to the
>> guest with new bits definitions of the option vector 5 of property
>> "ibm,arch-vec-5-platform-support. The byte 23 bits 0-1 of the OV5 are
>> defined as follow :
>>
>>   0b00   PAPR 2.7 and earlier (Legacy systems)
>>   0b01   XIVE Exploitation mode only
>>   0b10   Either available
>>
>> If the client/guest selects the XIVE interrupt mode, it informs the
>> hypervisor by returning the value 0b01 in byte 23 bits 0-1. A 0b00
>> value indicates the use of the XICS interrupt mode (Legacy systems).
>>
>> The sPAPR IRQ backend is extended with these definitions and the
>> values are directly used to populate the "ibm,arch-vec-5-platform-supp=
ort"
>> property. The interrupt mode is advertised under TCG and under KVM.
>> Although a KVM XIVE device is not yet available, the machine can still
>> operate with kernel_irqchip=3Doff. However, we apply a restriction on
>> the CPU which is required to be a POWER9 when a XIVE interrupt
>> controller is in use.
>>
>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
>> ---
>>
>>  Changes since v7:
>>
>>  - improved commit log
>>  - introduced a check on CPU type.
>>
>>  include/hw/ppc/spapr.h     |  6 ++++++
>>  include/hw/ppc/spapr_irq.h |  1 +
>>  hw/ppc/spapr.c             | 36 ++++++++++++++++++++++++++++++------
>>  hw/ppc/spapr_irq.c         |  3 +++
>>  4 files changed, 40 insertions(+), 6 deletions(-)
>>
>> diff --git a/include/hw/ppc/spapr.h b/include/hw/ppc/spapr.h
>> index 6bf028a02fe2..06765b4e9d79 100644
>> --- a/include/hw/ppc/spapr.h
>> +++ b/include/hw/ppc/spapr.h
>> @@ -824,5 +824,11 @@ int spapr_caps_post_migration(sPAPRMachineState *=
spapr);
>> =20
>>  void spapr_check_pagesize(sPAPRMachineState *spapr, hwaddr pagesize,
>>                            Error **errp);
>> +/*
>> + * XIVE definitions
>> + */
>> +#define SPAPR_OV5_XIVE_LEGACY   0x0
>> +#define SPAPR_OV5_XIVE_EXPLOIT  0x40
>> +#define SPAPR_OV5_XIVE_BOTH     0x80 /* Only to advertise on the plat=
form */
>> =20
>>  #endif /* HW_SPAPR_H */
>> diff --git a/include/hw/ppc/spapr_irq.h b/include/hw/ppc/spapr_irq.h
>> index 63061a009b4c..b34d5a00381b 100644
>> --- a/include/hw/ppc/spapr_irq.h
>> +++ b/include/hw/ppc/spapr_irq.h
>> @@ -33,6 +33,7 @@ void spapr_irq_msi_reset(sPAPRMachineState *spapr);
>>  typedef struct sPAPRIrq {
>>      uint32_t    nr_irqs;
>>      uint32_t    nr_msis;
>> +    uint8_t     ov5;
>> =20
>>      void (*init)(sPAPRMachineState *spapr, Error **errp);
>>      int (*claim)(sPAPRMachineState *spapr, int irq, bool lsi, Error *=
*errp);
>> diff --git a/hw/ppc/spapr.c b/hw/ppc/spapr.c
>> index 57c0066edd56..ff138f224a87 100644
>> --- a/hw/ppc/spapr.c
>> +++ b/hw/ppc/spapr.c
>> @@ -1095,12 +1095,14 @@ static void spapr_dt_rtas(sPAPRMachineState *s=
papr, void *fdt)
>>      spapr_dt_rtas_tokens(fdt, rtas);
>>  }
>> =20
>> -/* Prepare ibm,arch-vec-5-platform-support, which indicates the MMU f=
eatures
>> - * that the guest may request and thus the valid values for bytes 24.=
.26 of
>> - * option vector 5: */
>> -static void spapr_dt_ov5_platform_support(void *fdt, int chosen)
>> +/* Prepare ibm,arch-vec-5-platform-support, which indicates the MMU
>> + * and the XIVE features that the guest may request and thus the vali=
d
>> + * values for bytes 23..26 of option vector 5: */
>> +static void spapr_dt_ov5_platform_support(sPAPRMachineState *spapr, v=
oid *fdt,
>> +                                          int chosen)
>>  {
>>      PowerPCCPU *first_ppc_cpu =3D POWERPC_CPU(first_cpu);
>> +    sPAPRMachineClass *smc =3D SPAPR_MACHINE_GET_CLASS(spapr);
>> =20
>>      char val[2 * 4] =3D {
>>          23, 0x00, /* Xive mode, filled in below. */
>> @@ -1111,9 +1113,17 @@ static void spapr_dt_ov5_platform_support(void =
*fdt, int chosen)
>> =20
>>      if (!ppc_check_compat(first_ppc_cpu, CPU_POWERPC_LOGICAL_3_00, 0,
>>                            first_ppc_cpu->compat_pvr)) {
>> -        /* If we're in a pre POWER9 compat mode then the guest should=
 do hash */
>> +        /* If we're in a pre POWER9 compat mode then the guest should=
 do hash
>> +         * and use the legacy interrupt mode
>> +         */
>> +        val[1] =3D 0x00; /* XICS */
>>          val[3] =3D 0x00; /* Hash */
>>      } else if (kvm_enabled()) {
>> +        /* If the KVM XIVE device is not available, the machine can
>> +         * still operate with kernel_irqchip=3Doff
>> +         */
>> +        val[1] =3D smc->irq->ov5;
>=20
>=20
> I know it means another layer of if, but I'd prefer to rearrange this
> so setting the intc value is outside the if (kvm_enabled())..

That's ok. I expected some discussion on the cpu->intc pointer and we=20
have the cross build problem to fix also.

>> +
>>          if (kvmppc_has_cap_mmu_radix() && kvmppc_has_cap_mmu_hash_v3(=
)) {
>>              val[3] =3D 0x80; /* OV5_MMU_BOTH */
>>          } else if (kvmppc_has_cap_mmu_radix()) {
>> @@ -1122,6 +1132,9 @@ static void spapr_dt_ov5_platform_support(void *=
fdt, int chosen)
>>              val[3] =3D 0x00; /* Hash */
>>          }
>>      } else {
>> +        /* In TCG, the interrupt mode is defined by the pseries machi=
ne */
>> +        val[1] =3D smc->irq->ov5;
>=20
> ..rather than duplicated in each branch.

ok.

Thanks,

C.


>> +
>>          /* V3 MMU supports both hash and radix in tcg (with dynamic s=
witching) */
>>          val[3] =3D 0xC0;
>>      }
>> @@ -1189,7 +1202,7 @@ static void spapr_dt_chosen(sPAPRMachineState *s=
papr, void *fdt)
>>          _FDT(fdt_setprop_string(fdt, chosen, "stdout-path", stdout_pa=
th));
>>      }
>> =20
>> -    spapr_dt_ov5_platform_support(fdt, chosen);
>> +    spapr_dt_ov5_platform_support(spapr, fdt, chosen);
>> =20
>>      g_free(stdout_path);
>>      g_free(bootlist);
>> @@ -2622,6 +2635,17 @@ static void spapr_machine_init(MachineState *ma=
chine)
>>      /* advertise support for ibm,dyamic-memory-v2 */
>>      spapr_ovec_set(spapr->ov5, OV5_DRMEM_V2);
>> =20
>> +    /* advertise XIVE on POWER9 machines */
>> +    if (smc->irq->ov5 & SPAPR_OV5_XIVE_EXPLOIT) {
>> +        if (ppc_type_check_compat(machine->cpu_type, CPU_POWERPC_LOGI=
CAL_3_00,
>> +                                  0, spapr->max_compat_pvr)) {
>> +            spapr_ovec_set(spapr->ov5, OV5_XIVE_EXPLOIT);
>> +        } else {
>> +            error_report("XIVE-only machines require a POWER9 CPU");
>> +            exit(1);
>> +        }
>> +    }
>> +
>>      /* init CPUs */
>>      spapr_init_cpus(spapr);
>> =20
>> diff --git a/hw/ppc/spapr_irq.c b/hw/ppc/spapr_irq.c
>> index f835ea939cbf..79f06308995b 100644
>> --- a/hw/ppc/spapr_irq.c
>> +++ b/hw/ppc/spapr_irq.c
>> @@ -216,6 +216,7 @@ static int spapr_irq_post_load_xics(sPAPRMachineSt=
ate *spapr, int version_id)
>>  sPAPRIrq spapr_irq_xics =3D {
>>      .nr_irqs     =3D SPAPR_IRQ_XICS_NR_IRQS,
>>      .nr_msis     =3D SPAPR_IRQ_XICS_NR_MSIS,
>> +    .ov5         =3D SPAPR_OV5_XIVE_LEGACY,
>> =20
>>      .init        =3D spapr_irq_init_xics,
>>      .claim       =3D spapr_irq_claim_xics,
>> @@ -342,6 +343,7 @@ static void spapr_irq_reset_xive(sPAPRMachineState=
 *spapr, Error **errp)
>>  sPAPRIrq spapr_irq_xive =3D {
>>      .nr_irqs     =3D SPAPR_IRQ_XIVE_NR_IRQS,
>>      .nr_msis     =3D SPAPR_IRQ_XIVE_NR_MSIS,
>> +    .ov5         =3D SPAPR_OV5_XIVE_EXPLOIT,
>> =20
>>      .init        =3D spapr_irq_init_xive,
>>      .claim       =3D spapr_irq_claim_xive,
>> @@ -466,6 +468,7 @@ int spapr_irq_find(sPAPRMachineState *spapr, int n=
um, bool align, Error **errp)
>>  sPAPRIrq spapr_irq_xics_legacy =3D {
>>      .nr_irqs     =3D SPAPR_IRQ_XICS_LEGACY_NR_IRQS,
>>      .nr_msis     =3D SPAPR_IRQ_XICS_LEGACY_NR_IRQS,
>> +    .ov5         =3D SPAPR_OV5_XIVE_LEGACY,
>> =20
>>      .init        =3D spapr_irq_init_xics,
>>      .claim       =3D spapr_irq_claim_xics,
>=20


