Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:01:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2FD67580375
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 15:58:12 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 15:58:12 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AoG0mrhUIwOx8jAr8ICB/6/7dv43V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRKPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cYUBAekGM+laoYnyqEcBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BA5H98UrH?=
 =?us-ascii?q?jZtsn5OaUUXOuozKfI1zLDb/ZO1Drj8o/HbwohofCQUrltd8Te11QkGQLCjlqK?=
 =?us-ascii?q?tYzqISmV3fkKvmeH6+pgWvmii209pAF2vzej3MAsipPGho8MzF3P6CZ3wJ4tKN?=
 =?us-ascii?q?GmVEJ2YsSoHIZNuyyZLYd6XM0vTmFytConyLAKoZq2cDQQxJkkwxPTceGLfoyJ?=
 =?us-ascii?q?7x75SeqdPCt0iXR4c7ylnRmy61KvyujkW8m0zllKqi1Fn8HItnAMzBzT9tOHRu?=
 =?us-ascii?q?Fy/kenxDaDzQfT6vtLIUwslKrbLYAuwqIom5YNrUjOHTX6lFjrgKKVbEko5Oal?=
 =?us-ascii?q?5uT9brn7pJKQL4p0hRv/MqQqlMy/G+M4Mg0WUmiC5+u80aDj8VTkT7pUkP05jK?=
 =?us-ascii?q?3ZvInBKsQcu665BRNa3Zg46xq4Czem0dcYkmcdIFNKZRKKl4zpO1DIIPDlAvaz?=
 =?us-ascii?q?mVWskDF3x//YOr3tGInCLn/GkLr6e7Z97EhcyAU1zdBC/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3chfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGk19gG?=
 =?us-ascii?q?IEDxA31rt4pwQpxl6d0KRQjP1SDttVof9TVR8wOJfGie12TdnvDFHvZNCMHX0n?=
 =?us-ascii?q?Ts+nCnkVQ5oexNYSblw1T96mgTjA1i2mRbgPmOrYV9QP7qvA0i2pdI5GwHHc2f?=
 =?us-ascii?q?xk1gF+Tw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AjAADGZQhchxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwJYI9g3mIeIsumVkUgV8UGBSHUyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+?=
 =?us-ascii?q?CNgUCAxoBBoJcAwMBAiAEHwopAwMBAgYBASQCGAoEAgIDATkaBhMFgxyCAgEDA?=
 =?us-ascii?q?aYPfDOFQINhgQ2BC4ZkhC8RBoF/gRGHXCCDG4JXAokLl0sJkTcLGJEvgn6WAIF?=
 =?us-ascii?q?Ggg1NMAiDJ4InF44ecYEEA4gFVoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AjAADGZQhchxHrdtBkHgEGBwaBUQkLAYEwJYI9g3mIeIs?=
 =?us-ascii?q?umVkUgV8UGBSHUyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxoBBoJcA?=
 =?us-ascii?q?wMBAiAEHwopAwMBAgYBASQCGAoEAgIDATkaBhMFgxyCAgEDAaYPfDOFQINhgQ2?=
 =?us-ascii?q?BC4ZkhC8RBoF/gRGHXCCDG4JXAokLl0sJkTcLGJEvgn6WAIFGgg1NMAiDJ4InF?=
 =?us-ascii?q?44ecYEEA4gFVoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="54022560"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 15:58:11 -0800
Received: from localhost ([::1]:38100 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUh3S-0002jd-R4
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 18:58:10 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:45709)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gUgYy-0000AZ-6e
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 18:26:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gUgYt-0004zw-Tg
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 18:26:39 -0500
Received: from 3.mo177.mail-out.ovh.net ([46.105.36.172]:58827)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gUgYr-0004m1-Rk
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 18:26:35 -0500
Received: from player714.ha.ovh.net (unknown [10.109.159.139])
	by mo177.mail-out.ovh.net (Postfix) with ESMTP id ECB36D5D62
	for <qemu-devel@nongnu.org>; Thu,  6 Dec 2018 00:26:16 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player714.ha.ovh.net (Postfix) with ESMTPSA id ADBDF7D9AC0;
	Wed,  5 Dec 2018 23:26:11 +0000 (UTC)
From: =?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
To: David Gibson <david@gibson.dropbear.id.au>
Date: Thu,  6 Dec 2018 00:22:50 +0100
Message-Id: <20181205232251.10446-37-clg@kaod.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181205232251.10446-1-clg@kaod.org>
References: <20181205232251.10446-1-clg@kaod.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Ovh-Tracer-Id: 6816198038071053286
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudefiedguddtucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuqfggjfdpvefjgfevmfevgfenuceurghilhhouhhtmecuhedttdenucesvcftvggtihhpihgvnhhtshculddquddttddm
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 46.105.36.172
Subject: [Qemu-devel] [PATCH v6 36/37] spapr: check for KVM IRQ device
 activation
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org,
	=?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The KVM IRQ device activation will depend on the interrupt mode chosen
at CAS time by the machine and some methods used at reset or by the
migration need to be protected.

Signed-off-by: C=C3=A9dric Le Goater <clg@kaod.org>
---
 hw/intc/spapr_xive_kvm.c | 28 ++++++++++++++++++++++++++++
 hw/intc/xics_kvm.c       | 25 ++++++++++++++++++++++++-
 2 files changed, 52 insertions(+), 1 deletion(-)

diff --git a/hw/intc/spapr_xive_kvm.c b/hw/intc/spapr_xive_kvm.c
index dba3344831c6..6135b8c11e63 100644
--- a/hw/intc/spapr_xive_kvm.c
+++ b/hw/intc/spapr_xive_kvm.c
@@ -94,9 +94,15 @@ static void kvmppc_xive_cpu_set_state(XiveTCTX *tctx, =
Error **errp)
=20
 void kvmppc_xive_cpu_get_state(XiveTCTX *tctx, Error **errp)
 {
+    sPAPRXive *xive =3D SPAPR_MACHINE(qdev_get_machine())->xive;
     uint64_t state[4] =3D { 0 };
     int ret;
=20
+    /* The KVM XIVE device is not in use */
+    if (xive->fd =3D=3D -1) {
+        return;
+    }
+
     ret =3D kvm_get_one_reg(tctx->cs, KVM_REG_PPC_NVT_STATE, state);
     if (ret !=3D 0) {
         error_setg_errno(errp, errno, "Could capture KVM XIVE CPU %ld st=
ate",
@@ -132,6 +138,11 @@ void kvmppc_xive_cpu_connect(XiveTCTX *tctx, Error *=
*errp)
     unsigned long vcpu_id;
     int ret;
=20
+    /* The KVM XIVE device is not in use */
+    if (xive->fd =3D=3D -1) {
+        return;
+    }
+
     /* Check if CPU was hot unplugged and replugged. */
     if (kvm_cpu_is_enabled(tctx->cs)) {
         return;
@@ -215,9 +226,13 @@ static void kvmppc_xive_source_get_state(XiveSource =
*xsrc)
 void kvmppc_xive_source_set_irq(void *opaque, int srcno, int val)
 {
     XiveSource *xsrc =3D opaque;
+    sPAPRXive *xive =3D SPAPR_XIVE(xsrc->xive);
     struct kvm_irq_level args;
     int rc;
=20
+    /* The KVM XIVE device should be in use */
+    assert(xive->fd !=3D -1);
+
     args.irq =3D srcno;
     if (!xive_source_irq_is_lsi(xsrc, srcno)) {
         if (!val) {
@@ -564,6 +579,11 @@ int kvmppc_xive_pre_save(sPAPRXive *xive)
     Error *local_err =3D NULL;
     CPUState *cs;
=20
+    /* The KVM XIVE device is not in use */
+    if (xive->fd =3D=3D -1) {
+        return 0;
+    }
+
     /* Grab the EAT */
     kvmppc_xive_get_eas_state(xive, &local_err);
     if (local_err) {
@@ -596,6 +616,9 @@ int kvmppc_xive_post_load(sPAPRXive *xive, int versio=
n_id)
     Error *local_err =3D NULL;
     CPUState *cs;
=20
+    /* The KVM XIVE device should be in use */
+    assert(xive->fd !=3D -1);
+
     /* Restore the ENDT first. The targetting depends on it. */
     CPU_FOREACH(cs) {
         kvmppc_xive_set_eq_state(xive, cs, &local_err);
@@ -632,6 +655,11 @@ void kvmppc_xive_synchronize_state(sPAPRXive *xive)
     XiveSource *xsrc =3D &xive->source;
     CPUState *cs;
=20
+    /* The KVM XIVE device is not in use */
+    if (xive->fd =3D=3D -1) {
+        return;
+    }
+
     /*
      * When the VM is stopped, the sources are masked and the previous
      * state is saved in anticipation of a migration. We should not
diff --git a/hw/intc/xics_kvm.c b/hw/intc/xics_kvm.c
index 2a60ae71730b..4355c9d12160 100644
--- a/hw/intc/xics_kvm.c
+++ b/hw/intc/xics_kvm.c
@@ -68,6 +68,11 @@ static void icp_get_kvm_state(ICPState *icp)
     uint64_t state;
     int ret;
=20
+    /* The KVM XICS device is not in use */
+    if (kernel_xics_fd =3D=3D -1) {
+        return;
+    }
+
     /* ICP for this CPU thread is not in use, exiting */
     if (!icp->cs) {
         return;
@@ -104,6 +109,11 @@ static int icp_set_kvm_state(ICPState *icp, int vers=
ion_id)
     uint64_t state;
     int ret;
=20
+    /* The KVM XICS device is not in use */
+    if (kernel_xics_fd =3D=3D -1) {
+        return 0;
+    }
+
     /* ICP for this CPU thread is not in use, exiting */
     if (!icp->cs) {
         return 0;
@@ -140,8 +150,8 @@ static void icp_kvm_connect(ICPState *icp, Error **er=
rp)
     unsigned long vcpu_id;
     int ret;
=20
+    /* The KVM XICS device is not in use */
     if (kernel_xics_fd =3D=3D -1) {
-        abort();
         return;
     }
=20
@@ -220,6 +230,11 @@ static void ics_get_kvm_state(ICSState *ics)
     uint64_t state;
     int i;
=20
+    /* The KVM XICS device is not in use */
+    if (kernel_xics_fd =3D=3D -1) {
+        return;
+    }
+
     for (i =3D 0; i < ics->nr_irqs; i++) {
         ICSIRQState *irq =3D &ics->irqs[i];
=20
@@ -279,6 +294,11 @@ static int ics_set_kvm_state(ICSState *ics, int vers=
ion_id)
     int i;
     Error *local_err =3D NULL;
=20
+    /* The KVM XICS device is not in use */
+    if (kernel_xics_fd =3D=3D -1) {
+        return 0;
+    }
+
     for (i =3D 0; i < ics->nr_irqs; i++) {
         ICSIRQState *irq =3D &ics->irqs[i];
         int ret;
@@ -325,6 +345,9 @@ static void ics_kvm_set_irq(void *opaque, int srcno, =
int val)
     struct kvm_irq_level args;
     int rc;
=20
+    /* The KVM XICS device should be in use */
+    assert(kernel_xics_fd !=3D -1);
+
     args.irq =3D srcno + ics->offset;
     if (ics->irqs[srcno].flags & XICS_FLAGS_IRQ_MSI) {
         if (!val) {
--=20
2.17.2


