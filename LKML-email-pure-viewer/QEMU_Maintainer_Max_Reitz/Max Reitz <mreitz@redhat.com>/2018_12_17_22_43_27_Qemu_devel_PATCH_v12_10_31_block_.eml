Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:50:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 03E165805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 14:52:33 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 14:52:32 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AKDo+QBD1UQgVYTMEMNOuUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX4rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJPDI2/?=
 =?us-ascii?q?bYQPAeUOM+lFoYnlpVYArxSzCRSiCe/z1DBInWT70bEj0+k7DQ3KwBAsE84IvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafP1zrCYO5d1yvj54jJbhAgoOyHULV1ccrL10YvFh/Fj1SL?=
 =?us-ascii?q?pIz/ITyay+QNvHKH7+Z6Se2vjGsnphh3rzOyxckskpHEipwJxl3H7yl13Zs5KN?=
 =?us-ascii?q?6iREJlb9OpEIFcuzyYOoduXM8uX2VltDwnxrAIp5K3ZjUGxZcpyhLFdfCKcI6F?=
 =?us-ascii?q?6Q/5WumLOzd3nndldaq/hxms9UigzfXxVs210FZRsipFicPAtn8L1xzO8MSHTe?=
 =?us-ascii?q?F9/ki51TaO0QDc9P1ELFgqmabHKJMt2KM8mocQvEjZACP7lkX7gLWLekgm4uSo?=
 =?us-ascii?q?7v7oYrTipp+SLY90jQT+P7w3msOhBOQ4LxECUHWF9uSiyrLj+VT1T65Njv0rlK?=
 =?us-ascii?q?nWrI7VJd8cqq69Ag9V0Zgs5wywDje7yNkYmXgHLFRYeBOIlYTpOlfOIOzmAve7?=
 =?us-ascii?q?mVijjDBrx/XdM73nBZXNKHfDkLH8fbpn7E5c0gUzwchF551IErEBPO7zWkjpud?=
 =?us-ascii?q?zcDx85MBK7z/zoCdVgzY4eXWOPAqmEMKLdq1OI5+QvI/WSa48RojryN/8l5/u9?=
 =?us-ascii?q?xUI/gkIXKKm1wYMMOjf/GvV9P17fZ33qjdEcV2AQsU07Re3ujVSEFjlLe3e1Wb?=
 =?us-ascii?q?l7/zw+FceqAJnOQtOQhqec1nK+F5xSemcUE12JDDLkepuJX7IWZTuPL9R9ujoD?=
 =?us-ascii?q?U7enVskmzx75rxLwybdsMr/J/DYFv4noztl/6r7vkkQr+DlpSs6Z1GqOZ2dzmG?=
 =?us-ascii?q?wOWnkxxq8sj1Z6zwKm2LgwufFZCc4bs/ZTXwYmJ7bGwuB6Asy0UQXEKITaAG26?=
 =?us-ascii?q?S8mrVGliBuk6xMUDNgMkQ42v?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAABiJxhchxHrdtBlHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCYox0jiORX4R9gXMHDhgUgyyEKiI1CA0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDi+CNgUCAxoBBoJcAwMBAiQfCikDAwECBgEBSAgDAVMZBYMdggEBB?=
 =?us-ascii?q?KZ9giozhUCEbIhSg2wXgUA/gRGCXYpzIgKJQpdXCZFPCxiBXYgWN4coLJk4gUc?=
 =?us-ascii?q?BggxNIxWDJ4InFxKODEAxgQcci1yBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AxAABiJxhchxHrdtBlHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?CYox0jiORX4R9gXMHDhgUgyyEKiI1CA0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CN?=
 =?us-ascii?q?gUCAxoBBoJcAwMBAiQfCikDAwECBgEBSAgDAVMZBYMdggEBBKZ9giozhUCEbIh?=
 =?us-ascii?q?Sg2wXgUA/gRGCXYpzIgKJQpdXCZFPCxiBXYgWN4coLJk4gUcBggxNIxWDJ4InF?=
 =?us-ascii?q?xKODEAxgQcci1yBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,366,1539673200"; 
   d="scan'208";a="56276391"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 14:52:32 -0800
Received: from localhost ([::1]:50273 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gZ1kV-0004a3-FY
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 17:52:31 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:33515)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gZ1ce-00077D-Nj
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:44:25 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mreitz@redhat.com>) id 1gZ1cd-0006Cj-IA
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 17:44:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:57996)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <mreitz@redhat.com>)
	id 1gZ1cW-00068F-L1; Mon, 17 Dec 2018 17:44:16 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id F3B267E9C4;
	Mon, 17 Dec 2018 22:44:15 +0000 (UTC)
Received: from localhost (ovpn-204-73.brq.redhat.com [10.40.204.73])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 5095660BEC;
	Mon, 17 Dec 2018 22:44:15 +0000 (UTC)
From: Max Reitz <mreitz@redhat.com>
To: qemu-block@nongnu.org
Date: Mon, 17 Dec 2018 23:43:27 +0100
Message-Id: <20181217224348.14922-11-mreitz@redhat.com>
In-Reply-To: <20181217224348.14922-1-mreitz@redhat.com>
References: <20181217224348.14922-1-mreitz@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Mon, 17 Dec 2018 22:44:16 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH v12 10/31] block:
 bdrv_get_full_backing_filename_from_...'s ret. val.
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Alberto Garcia <berto@igalia.com>,
	qemu-devel@nongnu.org, Max Reitz <mreitz@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Make bdrv_get_full_backing_filename_from_filename() return an allocated
string instead of placing the result in a caller-provided buffer.

Signed-off-by: Max Reitz <mreitz@redhat.com>
Reviewed-by: Alberto Garcia <berto@igalia.com>
---
 include/block/block.h |  7 +++---
 block.c               | 53 ++++++++++++++++++++++++++++++-------------
 block/vmdk.c          |  9 ++++----
 qemu-img.c            | 12 ++++------
 4 files changed, 48 insertions(+), 33 deletions(-)

diff --git a/include/block/block.h b/include/block/block.h
index c69b08bef9..9dd573351b 100644
--- a/include/block/block.h
+++ b/include/block/block.h
@@ -487,10 +487,9 @@ void bdrv_get_backing_filename(BlockDriverState *bs,
                                char *filename, int filename_size);
 void bdrv_get_full_backing_filename(BlockDriverState *bs,
                                     char *dest, size_t sz, Error **errp)=
;
-void bdrv_get_full_backing_filename_from_filename(const char *backed,
-                                                  const char *backing,
-                                                  char *dest, size_t sz,
-                                                  Error **errp);
+char *bdrv_get_full_backing_filename_from_filename(const char *backed,
+                                                   const char *backing,
+                                                   Error **errp);
=20
 int path_has_protocol(const char *path);
 int path_is_absolute(const char *path);
diff --git a/block.c b/block.c
index 933a43c989..0cd4412725 100644
--- a/block.c
+++ b/block.c
@@ -312,20 +312,29 @@ fail:
     return -EACCES;
 }
=20
-void bdrv_get_full_backing_filename_from_filename(const char *backed,
-                                                  const char *backing,
-                                                  char *dest, size_t sz,
-                                                  Error **errp)
+/*
+ * If @backing is empty, this function returns NULL without setting
+ * @errp.  In all other cases, NULL will only be returned with @errp
+ * set.
+ *
+ * Therefore, a return value of NULL without @errp set means that
+ * there is no backing file; if @errp is set, there is one but its
+ * absolute filename cannot be generated.
+ */
+char *bdrv_get_full_backing_filename_from_filename(const char *backed,
+                                                   const char *backing,
+                                                   Error **errp)
 {
-    if (backing[0] =3D=3D '\0' || path_has_protocol(backing) ||
-        path_is_absolute(backing))
-    {
-        pstrcpy(dest, sz, backing);
+    if (backing[0] =3D=3D '\0') {
+        return NULL;
+    } else if (path_has_protocol(backing) || path_is_absolute(backing)) =
{
+        return g_strdup(backing);
     } else if (backed[0] =3D=3D '\0' || strstart(backed, "json:", NULL))=
 {
         error_setg(errp, "Cannot use relative backing file names for '%s=
'",
                    backed);
+        return NULL;
     } else {
-        path_combine_deprecated(dest, sz, backed, backing);
+        return path_combine(backed, backing);
     }
 }
=20
@@ -333,12 +342,24 @@ void bdrv_get_full_backing_filename(BlockDriverStat=
e *bs, char *dest, size_t sz,
                                     Error **errp)
 {
     char *backed;
+    char *full_name;
+    Error *local_error =3D NULL;
=20
     bdrv_refresh_filename(bs);
=20
     backed =3D bs->exact_filename[0] ? bs->exact_filename : bs->filename=
;
-    bdrv_get_full_backing_filename_from_filename(backed, bs->backing_fil=
e,
-                                                 dest, sz, errp);
+
+    full_name =3D bdrv_get_full_backing_filename_from_filename(backed,
+                                                             bs->backing=
_file,
+                                                             &local_erro=
r);
+    if (full_name) {
+        pstrcpy(dest, sz, full_name);
+        g_free(full_name);
+    } else if (local_error) {
+        error_propagate(errp, local_error);
+    } else if (sz > 0) {
+        *dest =3D '\0';
+    }
 }
=20
 void bdrv_register(BlockDriver *bdrv)
@@ -4965,17 +4986,17 @@ void bdrv_img_create(const char *filename, const =
char *fmt,
     size =3D qemu_opt_get_size(opts, BLOCK_OPT_SIZE, img_size);
     if (backing_file && !(flags & BDRV_O_NO_BACKING)) {
         BlockDriverState *bs;
-        char *full_backing =3D g_new0(char, PATH_MAX);
+        char *full_backing;
         int back_flags;
         QDict *backing_options =3D NULL;
=20
-        bdrv_get_full_backing_filename_from_filename(filename, backing_f=
ile,
-                                                     full_backing, PATH_=
MAX,
-                                                     &local_err);
+        full_backing =3D
+            bdrv_get_full_backing_filename_from_filename(filename, backi=
ng_file,
+                                                         &local_err);
         if (local_err) {
-            g_free(full_backing);
             goto out;
         }
+        assert(full_backing);
=20
         /* backing files always opened read-only */
         back_flags =3D flags;
diff --git a/block/vmdk.c b/block/vmdk.c
index 3d3273e65b..b3fc3b9e12 100644
--- a/block/vmdk.c
+++ b/block/vmdk.c
@@ -2049,16 +2049,15 @@ static int coroutine_fn vmdk_co_create_opts(const=
 char *filename, QemuOpts *opts
     }
     if (backing_file) {
         BlockBackend *blk;
-        char *full_backing =3D g_new0(char, PATH_MAX);
-        bdrv_get_full_backing_filename_from_filename(filename, backing_f=
ile,
-                                                     full_backing, PATH_=
MAX,
-                                                     &local_err);
+        char *full_backing =3D
+            bdrv_get_full_backing_filename_from_filename(filename, backi=
ng_file,
+                                                         &local_err);
         if (local_err) {
-            g_free(full_backing);
             error_propagate(errp, local_err);
             ret =3D -ENOENT;
             goto exit;
         }
+        assert(full_backing);
=20
         blk =3D blk_new_open(full_backing, NULL, NULL,
                            BDRV_O_NO_BACKING, errp);
diff --git a/qemu-img.c b/qemu-img.c
index da14ec0bb5..cd81621554 100644
--- a/qemu-img.c
+++ b/qemu-img.c
@@ -3336,18 +3336,14 @@ static int img_rebase(int argc, char **argv)
             bdrv_refresh_filename(bs);
             overlay_filename =3D bs->exact_filename[0] ? bs->exact_filen=
ame
                                                      : bs->filename;
-            out_real_path =3D g_malloc(PATH_MAX);
-
-            bdrv_get_full_backing_filename_from_filename(overlay_filenam=
e,
-                                                         out_baseimg,
-                                                         out_real_path,
-                                                         PATH_MAX,
-                                                         &local_err);
+            out_real_path =3D
+                bdrv_get_full_backing_filename_from_filename(overlay_fil=
ename,
+                                                             out_baseimg=
,
+                                                             &local_err)=
;
             if (local_err) {
                 error_reportf_err(local_err,
                                   "Could not resolve backing filename: "=
);
                 ret =3D -1;
-                g_free(out_real_path);
                 goto out;
             }
=20
--=20
2.19.2


