Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:35:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0148C5803EB;
	Fri, 23 Nov 2018 05:05:08 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 23 Nov 2018 05:05:07 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AST91ChK6vXY+/dyrhtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULP78rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjNUmnP6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModvpKacSSvu1w7fMzTXHcvhY3Db96I7Hchs8uP2HQK59f9bWx0IyEQ3Fj1OQ?=
 =?us-ascii?q?qZHqPjiI0ekNt2mb7+x9VeOgkGMosRtxoj2rxsctjInJm40UxkrD9SVjz4Y5P8?=
 =?us-ascii?q?C4SE1ibNOiDZBeuSaaN45sTcMjRWFloDw1yqcDuZ6/fSgKzoknxhHFZ/yAaYiI?=
 =?us-ascii?q?7QjvVPuSITtgn3JlYKywiAiv/ki81OL8TdW03ExMriVbjtnBsG0G2R/L6sWfVP?=
 =?us-ascii?q?dx4kOs1SyS2w3d9O1IO104mKnHJ5I7w7M9lIIfvVrfEiPqhUn7iaCbeVgr9+Wr?=
 =?us-ascii?q?7unoeKjpq5+CO4JxhAzyLLgiltG6DOgmLwQDUG2W+eqh273t8030RbtKgeMrnq?=
 =?us-ascii?q?XFtZ3XKsobq624DgJTz40t8QywDy2839QdhXQHLExKeBaAj4XxJVHOL+73De2l?=
 =?us-ascii?q?j1Svjjhr3fbGMaPlApnXKXjDirjhca58605a1gUz0chS64xIBrwFOv7/R0H8uM?=
 =?us-ascii?q?LCAhMkMAG43/zrBdR/248GXGKAGK6ZMKfcsV+S4eIvJvGBZIsUuDb7Nvgk6Ofi?=
 =?us-ascii?q?jXwnll8He6mmw58XZGm/HvVoJUWWf2Dsj8wfEWcFoAU+VvbmiF6cXj5JYXa9Qa?=
 =?us-ascii?q?Y86is8CIK8AofPXpqtj6CZ3CenAp1WYXhLClSNEXfraYqIQfgNaD+JL89lkzwE?=
 =?us-ascii?q?U6WhSoA72RGvsg/616RoLu7O9iIEspLj0cB/5/fPmhEq6Tx0E8Od3nmNT25un2?=
 =?us-ascii?q?MIWyU53KdlrUx911eMy654g/NDGNxX5vNJVBo6NJHGw+x7DdDyRhzOftOTRFm6?=
 =?us-ascii?q?RdWmBCk7TsgtzN8Wf0Z9B9KigwjB3yqtHbAZjb+LBJsy8qLa2Hj8PMJ9y3fA1K?=
 =?us-ascii?q?k8gFgqWMpPNWu6hqFh8wjfHZLGk0Kcl6yyb6QTwDbN9HufzWqJpExXShVwUaXC?=
 =?us-ascii?q?XXAcfEfWt8725kHZQr+qCLQnNBZByMGYJqtLbN3pkUtJRPP5NNvCZGKxnn+6BQ?=
 =?us-ascii?q?yUybOUcIrqZ2Id0T3eCEcelQAf53KGNQkkCSenrGLTFzhuFVPpY0Px/uhysnK7?=
 =?us-ascii?q?Tkkozw6Ua01tzaa6+hkQhfaEUfMcwqoEuDs9qzVzBFuywsjZC8SeqAZ7fKVTe9?=
 =?us-ascii?q?U94ExZ2mLfsAB9Op+gL6VmhlMFdwR3vkXu1wh4C4lakMgqqm8qwxR2Ka6CzFxB?=
 =?us-ascii?q?cDaY14jqOrLLMmny4Ayva6nO117DytmW5LkA5O44q1r5ugGpDVQt83N83tlR0n?=
 =?us-ascii?q?uc4IjKDQUIXZLwVEY36wZ1p7XAbiYh4IPU0GVmMbOovT/ax9IpGOwlxw68f9de?=
 =?us-ascii?q?NaOEExPyE80aBsS0NOwmgV+pbggAPOBT8q40MNird/+H2K6tIeZhkyiqjWVB4I?=
 =?us-ascii?q?BhzE2M8zBwRfLP35YA2/uYxBeIVy/gjFe9tcD6gZpLZTUMEWuw1yflBJRdabZv?=
 =?us-ascii?q?fYkWE2iuJc63xtJgh5P2X35Y9VijB04J2cOzeBqSaUD90hNU1UgNvXOnni64xS?=
 =?us-ascii?q?Rukz41tqqfwDDOw+P6eRsHJ25HXnVtgU3tIIi0ld8aWkeoYhMtlBuk40b62qda?=
 =?us-ascii?q?qL5+L2nVXUdHYSz2I3t+Xau3s7qIe9RP548wsSVLTOS8ZkiXSqT8oxQGySzjBX?=
 =?us-ascii?q?ZRxDchezGspJr5hR16hHuBI3lpqHrWZN9/xQ3Y5NzaXvNR2jsGRC9liTjYHFS8?=
 =?us-ascii?q?Pt+p/cmKmJfHqOyxS2WhVphLeynx0YyArDe75XFtARCnn/Gzm8frEAgg3S/gyt?=
 =?us-ascii?q?lqUz7FrBL9YontyqS7PvhrfkhuBF/g9cV6HptynZc3hJEVwXIanIma/WIbkWfv?=
 =?us-ascii?q?NtVWwaD+Y2AXRT4IwN7V5xLp2FZ5IXKKxIL5V3OdzdVnZ9ShZmMW2yQ9791FCa?=
 =?us-ascii?q?uO7bxEmzd1rUS8rQ7Lffd9mTIdw+M06HEGm+EJpBYtziKFD7ESB0ZYOjbglxaJ?=
 =?us-ascii?q?79C4t6hXYGevcb6t1Etxh9yhDbeCoh1CV3b9YJstAShw7sBnOlLWzHLz8p3keM?=
 =?us-ascii?q?XXbd8LtR2biRbAg/JVKJIsjPUKgyVnNHn5vX0kze47kBNv0Yu7vIiBN2Vi4qa5?=
 =?us-ascii?q?DgREOT3yYsMZ4ivtgrpGnsaKw4CvGY1sGjAKXJvrV/2kCjwTuur8NwaSDjI8sG?=
 =?us-ascii?q?yUFqTFHQ+Q80pmq3PPE5a2N3CYPnUZzNNiRAWDK0xbmgwbQDI6npshHACw2MPh?=
 =?us-ascii?q?aFt55iwW5lPgthtMzedoOwP+U2jFogeodyw0SIOeLBdN6gFC5kHVMdGR7+5pHi?=
 =?us-ascii?q?FY+IGhoxKJKmCBewtICmQJUFSeB1//Jrmu+cXA8++AC+WlNfTOZrGOqfFEW/eM?=
 =?us-ascii?q?2JKiyY9m/zeKNsWSMXhuFfw72kxfXX9nH8TVgSkASysSlyjVdc6UuA+8+jFrrs?=
 =?us-ascii?q?C46PnrWhjg5Y6RBLtJK9lv5wq6gaSeN+6TmSZ5LyxX1ogXyH/Mybgf2kMSii50?=
 =?us-ascii?q?ezmsF7QAqTDCTKbKlqBLCB4bbjt5NNFU4KIkwglNJcnbh8v1175/k/41EkpFWk?=
 =?us-ascii?q?bnms2zfswKJGe9NFzcCUaPNbSGIyDLws7tbaO9T71QkPtbtxmqtTmHFE/jOyyJ?=
 =?us-ascii?q?lyP1WBC3LeFMkCabMQReuI6jcxZtCmvjTNP8Zh24Kt93ijI2zqMuhnPXLm4RKj?=
 =?us-ascii?q?x8c0JLrr2N4iJUmPR/G2pd7nV7KemIgTqW7+7dKpwOq/tkHjx0l/5G4HQ907Za?=
 =?us-ascii?q?9jxES+dvmCTMrt9iuVWmkuiUxzpjURpOrCtLhY2RsUVjP6XZ6odPWXLe8B0R6m?=
 =?us-ascii?q?WQDgwAp8F5Bd33p6BQ1t/PmbrvKDdD9tLY59cTC9LIJ8KHLnUhNwHkGDrVDAsD?=
 =?us-ascii?q?UD6qOnvTh01bkPGO6HKVqoI2pYTrmJoLUrVbTkA6FusGCkR5G9wPOJd2USkikb?=
 =?us-ascii?q?6ejc4I42KxrRjRRMpAuJDHWemfAfHuKDafkLlFaAEEwbL+LYQPKIL731ZuZUV9?=
 =?us-ascii?q?nITPSALsWoVvvylgYwl8nEVM/WJkXyVn2V/haw6rpmMTFPOuhA8egxF7J+8q8W?=
 =?us-ascii?q?G/zU0wIw/wuTArnU010fbkhz/ZNXbYFoL4eYBQFjq840wwNI7raw9vaAmzm1F0?=
 =?us-ascii?q?cjDeSPRMjO0zJihQlAbAtM4XSrZnRqpebUpVnKnPag=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAADA+fdbh0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYExgTmBAieYEIINFJkYFhgLCAGBS4cMIjgSAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYkAYJiAQIDAQI3BgEBNwEFCQEBChIGCSUDDAUoDRQTBYMcA?=
 =?us-ascii?q?YIBAQMBCqYEgh+CdgEBBYcUCIwJFz6BQYERgxKDEIFHhgKJG4F4hU2PJAmGfIo?=
 =?us-ascii?q?oCxiCJo5iLJgEgV2BdjMaCCwEgycJghKBXh6Ja4JYQDKBBQEBiVSCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0AfAADA+fdbh0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBZYE?=
 =?us-ascii?q?xgTmBAieYEIINFJkYFhgLCAGBS4cMIjgSAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYkAYJiAQIDAQI3BgEBNwEFCQEBChIGCSUDDAUoDRQTBYMcAYIBAQMBCqYEgh+?=
 =?us-ascii?q?CdgEBBYcUCIwJFz6BQYERgxKDEIFHhgKJG4F4hU2PJAmGfIooCxiCJo5iLJgEg?=
 =?us-ascii?q?V2BdjMaCCwEgycJghKBXh6Ja4JYQDKBBQEBiVSCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="41296755"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 05:05:06 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2409989AbeKWXtJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 18:49:09 -0500
Received: from pandora.armlinux.org.uk ([78.32.30.218]:51536 "EHLO
        pandora.armlinux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2403770AbeKWXtI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 18:49:08 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=armlinux.org.uk; s=pandora-2014; h=Sender:In-Reply-To:Content-Type:
        MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=VL25vORFTeHZUcCzk/wuEFEnw9fP7ySRQ0GnRrJNbY8=; b=ChE1aOwP2+gPg+3hzhHUNhKuR
        o098paic2ib3I66ohG5pv6wJxDnpqCS3mgtsYWLasr8oJ4Z+qjKOQgbD9aH1PYFMV+cDujLyz1mkg
        FVQiGqzKjH9mkSSLnEghOxpQ7SId2ka5FL9tsvDZrNSCUj+SSXH43BqCHez7haG4Igsus=;
Received: from n2100.armlinux.org.uk ([2001:4d48:ad52:3201:214:fdff:fe10:4f86]:39588)
        by pandora.armlinux.org.uk with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.90_1)
        (envelope-from <linux@armlinux.org.uk>)
        id 1gQB8i-00086C-9Z; Fri, 23 Nov 2018 13:04:56 +0000
Received: from linux by n2100.armlinux.org.uk with local (Exim 4.90_1)
        (envelope-from <linux@n2100.armlinux.org.uk>)
        id 1gQB8e-0007BM-VM; Fri, 23 Nov 2018 13:04:53 +0000
Date: Fri, 23 Nov 2018 13:04:51 +0000
From: Russell King - ARM Linux <linux@armlinux.org.uk>
To: Julien Thierry <julien.thierry@arm.com>
Cc: hpa@zytor.com, Ingo Molnar <mingo@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        James Morse <james.morse@arm.com>
Subject: Re: Sleeping in user_access section
Message-ID: <20181123130451.GS30658@n2100.armlinux.org.uk>
References: <3e881ee6-0ff6-b8b6-0633-3d4a7743411d@arm.com>
 <5B3B6AF9-9D8C-4577-905E-D407A5E7D0E3@zytor.com>
 <20181123105034.GQ30658@n2100.armlinux.org.uk>
 <44297716-74aa-1f14-67be-3594b5244b74@arm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <44297716-74aa-1f14-67be-3594b5244b74@arm.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 23, 2018 at 11:57:31AM +0000, Julien Thierry wrote:
> 
> 
> On 23/11/18 10:50, Russell King - ARM Linux wrote:
> >On Fri, Nov 23, 2018 at 01:57:12AM -0800, hpa@zytor.com wrote:
> >>You should never call a sleeping function from a user_access section.
> >>It is intended for very limited regions.
> >
> >So, what happens if the "unsafe" user access causes a page fault that
> >ends up sleeping?
> >
> 
> Thanks for pointing that out.
> 
> On the arm64 side, PAN state is saved in spsr and (if PAN feature is enabled
> in SCTLR) PAN bit gets set (disabling the user accesses). For software PAN
> we follow the same behaviour on exception entry. So upon exception we
> implicitly exit user_access mode and then re-enter it when returning from
> the exception.
> 
> On x86, the EFLAGS.AC bit is also saved upon exception and I think it is
> cleared upon exception entry so there is implicit exit from the user_access
> mode when taking exception/interrupt.
> 
> This however is just how those two architectures happen to behave and
> doesn't seem to be specified as part of the user_access API...
> 
> Which is why I'd like to clarify the semantics of user_access region wrt
> sleeping functions.

Explicitly calling a sleeping function may not be recommended, but
it's a rather fundamental fact of the Linux kernel that if we want
to access userspace, we must be either prepared to sleep, or fail
the access and return an error.

Looking at kernel/exit.c and kernel/compat.c, I see no sign of any
retry mechanism in the current call sites, so any failed user access
would return an error to userspace - which is not the behaviour that
userspace would expect.

It's possible that, when user_access_begin() et.al. are implemented,
access_ok() also comes with the requirement to make sure that the
userspace pages are accessible, but even _that_ would be racy,
because there's no way to pin the pages, so another thread/CPU could
page those user pages back out... leading to a fault.

So, realistically, with how user_access_begin()..user_access_end()
is currently being used, an architecture fundamentally has to be
prepared for threads to sleep within that section of code through
the action of the page fault handling.  I can't see any other
realistic possibility here.

-- 
RMK's Patch system: http://www.armlinux.org.uk/developer/patches/
FTTC broadband for 0.8mile line in suburbia: sync at 12.1Mbps down 622kbps up
According to speedtest.net: 11.9Mbps down 500kbps up
