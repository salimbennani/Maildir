Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:47:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5E7F3580213;
	Thu, 29 Nov 2018 08:15:37 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 08:15:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcQOCGB9kmWl0qf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1uIWIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOMuRWoInmv1sDrwCzBRWwCO/z1jNEmmX70bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rIsdX1L7wSXv6xzKnM0D7NavJW2THy6IPVaxwqvO2BU653f8HMz0cvFgXFjkif?=
 =?us-ascii?q?qIf4OD6V0uUNs26G7+tvTu+gkXQnqwR1ojiuwMcsl4bIipgSylDe+iV12ps1Jd?=
 =?us-ascii?q?6hRUN9fNWqHpxQtySAOIt3RMMvW3tnuDw/yr0CuJ67ejUKyZs9yx7YcfyHfJKE?=
 =?us-ascii?q?4g/gVOqJOjd4nGxqd6yiiBau70eg0fH8WtOy0FlUsipIlMTHuHMV1xHL9MSLVv?=
 =?us-ascii?q?9w8l281TuByQzf8PxILEMomabBKpMswKY8m5gQvEjZECL6hl/6gaGKekk+5OSk?=
 =?us-ascii?q?9ufqb7P7rZGGLYB0kBvxMqE2l8y/H+s4Ng8OUnCF+eSzyrLj51f1QLZUgf0slK?=
 =?us-ascii?q?nWrpTaKd4cpq6jDA9Zyocj6xChADe6yNkUg2ULIVZfdB6agYXlJUvCLO37APuj?=
 =?us-ascii?q?mVihkTVmy+jDPrL7A5XNKnbDkK3mfbZ480NczAszzdZC55NbE70BI+z8WlX3tN?=
 =?us-ascii?q?PGCh81Kgu0wujhCNpjzIMTQnyPAqCHP6PIq1OI5fwgI/OKZIALvDbxMf8l5+Th?=
 =?us-ascii?q?jXMhg18SYbGp3YcLaHC/BvlmJ0SZYXnyjdsbHmYKoxEzTOjriF2ETD5SaGy+X6?=
 =?us-ascii?q?M65jEnFo2mCZ3PSZyqgLyExC27BIFZZnhaClCQFnflb4WEVO0NaCKOOMBhlSYI?=
 =?us-ascii?q?Vbi8S4A70xGuuxT3y75mLurS5y0Zuojv1Nlz5+3Pix4y8SZ4ANia02GIV2t0hH?=
 =?us-ascii?q?8HRycq3KBjpkxw0lWD0a9mjPBCFtxT4PVJUgE9NZPHy+x6CtbyWh/Of9uTSVam?=
 =?us-ascii?q?RMmmDi81Tt4r39AOZEN9Ec24jh/fxyqqH6MVl7uTCZMu6aLc33/xJ8Vnx3bczq?=
 =?us-ascii?q?YhjUIrQs9ONW2gm65++BLfB4/Pk0WFiamqcb4Q0zLK9GeG1WCOpl1XUBZsUaXZ?=
 =?us-ascii?q?WnASfkjWos7/5k/YS7+uCK4oMg1OycOZLqtKa9vpjUhJRfv5OdTeZX6xlHm0BR?=
 =?us-ascii?q?qS2ryMa4/qcX0H3CrBEEgEjxwT/XGeOAcjHCihvXzRACZuFV31ZUPs6vdxqHW8?=
 =?us-ascii?q?Qk8wzAGKaklh2qGx+h4Ug/ycVvwS0qgFuCcntzV7AlK908jKBNqHogprZL9cbs?=
 =?us-ascii?q?8l4FdbyWLZsBRwMYG6IKB8mFESaQR3sFno1xVsFIpAl9MnrHcrzAp0NKKZ30lN?=
 =?us-ascii?q?dzKe3ZDsJLLXLnP+8wyoa67TwlveysqZ+r8T6PQkrFXupB2pFksn83Vgz9lV03?=
 =?us-ascii?q?ud6o/WDAYIVpLxSEI39xl8p7HVeSQ944LU1XtxMai7qDPC2tQpBPc7xRakZdtQ?=
 =?us-ascii?q?LKSEFArqGc0AG8euMPAqm0Subh8cJu9S8LA7Psy4ePqGwqKkJ/tgky+8gmRB44?=
 =?us-ascii?q?B91VyM+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jIs2qxtlkm5HhQX9Z9F65CFMA18+kYh6Sb1373Q1N2kUbu32nmS2kzz?=
 =?us-ascii?q?NqlzEltLaQ3CvLw+76bhoIJnZLRHV+jVfrOYW0ldEaU1SyYAgziRSl4lz2x65F?=
 =?us-ascii?q?q6RlLmnfWFtHcDLyL25/TKSwrL2CY8hU5ZMssCVXVvm8YF+ARr78pRsazz3sH2?=
 =?us-ascii?q?9EyD8ncDGqv43znwZmh2KFMHZzsH3ZdNlwxBfe/tDdReRd3iEbRCl+kjTXAlm8?=
 =?us-ascii?q?P9+0/dSbjZvDs+a+V36/WZ1XayXk0YSAtC6j721wHRK/h+yzmsHgEQUi0y/0zc?=
 =?us-ascii?q?NqVSbLrBb7eIXrzL61MeFkfklpAl/z9cx6F5p6kosxgpEQxHcbio+U/XoBjWf8?=
 =?us-ascii?q?L9Fb1bjiY3oKQD4B28TV7xT92E1/MnKJwJr0V3WHzctmfdW6YGIW2iQm4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTvlxuS?=
 =?us-ascii?q?7tCytqVXZHu1fri220pzhtShDLCEogFBV3f1YJYiHSls7sphNFLAymH86obheN?=
 =?us-ascii?q?PId9IcqgWUkwvcj+hSMJ8xk/sKhSl9Nm7ns3wq1fU7jQBw0pGgp4eINX9t/K2i?=
 =?us-ascii?q?Dx5cNz31Yd4T+z73gaZfmMaWw56gHpF7FjoXW5voSOqiECgOuvT/KwaODDo8p2?=
 =?us-ascii?q?+HGbrYGA+T8kZnoGjJE5C2LHGXP3gZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lZSwuR5iYKBpW8xtO50PIMcGF6uJzHi?=
 =?us-ascii?q?dY/oCurQCXK2ybYRhIAn8NWkCeG1/jObyu78Ha8+eEHuq+M+fOYbKWpOxcTfiI?=
 =?us-ascii?q?wIyg0pB88zaQLMmPPWRiD/4m2kpFR395AN/UmzEOSywRiiLMYNSXpBa6+i1rsM?=
 =?us-ascii?q?+/9O7nVx7o5YuKE7FSK8lg+wiqgaefMO6dnCZ4KTFF1pMV2H/H0r4f0EQJiyFp?=
 =?us-ascii?q?cTmtHq8NtSrMTKLWh69WAAQXayJ1NMtU8a082hNBNtLcitPwzrR4lOI6C09ZVV?=
 =?us-ascii?q?z9ncGkfcwKLH+8NFPEB0aLNa6KJT7Rw8HwbqOzV6dQjPhPtxCrvTabEknjPimM?=
 =?us-ascii?q?ljXzVhCvN/1Mgz+fPBBEpI69dRNtA3D5TN36ch27LMN3jTouzLIum3PFLnQcPi?=
 =?us-ascii?q?Z8ck9Xqr2Q7DhVgvF+G2xH83pkIvOImyef7+nENJkWteFnDThzl+Jf+H460ada?=
 =?us-ascii?q?7DlYRPxpnyvftsJuo1CjkuWV1jVrSgZBqjZVi4KNpkhiPaTZ9p9dWXfL5h4N7G?=
 =?us-ascii?q?OQCwgUqNthENHgp6dQyt3XnqLpNDhC687U/dcbB8XMKMOIKnwhMR/oGD7SFAQE?=
 =?us-ascii?q?TD6rOnvZh0xSi/yS8nyVrp4nqpnjgpYOS7lbVEArGfMeEEhqANsCIJIkFg8jxJ?=
 =?us-ascii?q?iSkM4B4zKVrBDXT8heupfdHqaUCOniIzaQi7JJYx8P25v3KI0SMsvw3Ek0OXdg?=
 =?us-ascii?q?m4GfIVfLRt1JpmVCbwk76AAF2UJbBkky3V/1Ilep4XkOBda9hBsyiw1jcaIq7j?=
 =?us-ascii?q?iq/lRhdQmCnzc5jERkwYatujuWajOkaf7oBYw=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AmAADkDwBch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYExgTmBAicEmBWCDRSZIxQYCwgBh3QiOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIBAgMBAjcGAQE3AQUJAQEKDgoJJQMMBSghGIMcAYIBA?=
 =?us-ascii?q?QMBCqU/gh+CdgEBBYcmCIwWFz6BQYERgxKDE4dJixuVCgmRJwsYgVqINIcOLJg?=
 =?us-ascii?q?igV2BdjMaCCwEgycJghIMF4tEgllAMoEFAQGNOgEB?=
X-IPAS-Result: =?us-ascii?q?A0AmAADkDwBch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBZYE?=
 =?us-ascii?q?xgTmBAicEmBWCDRSZIxQYCwgBh3QiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIBAgMBAjcGAQE3AQUJAQEKDgoJJQMMBSghGIMcAYIBAQMBCqU/gh+CdgE?=
 =?us-ascii?q?BBYcmCIwWFz6BQYERgxKDE4dJixuVCgmRJwsYgVqINIcOLJgigV2BdjMaCCwEg?=
 =?us-ascii?q?ycJghIMF4tEgllAMoEFAQGNOgEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="42845319"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 08:14:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728580AbeK3DUY (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 22:20:24 -0500
Received: from pandora.armlinux.org.uk ([78.32.30.218]:39908 "EHLO
        pandora.armlinux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728255AbeK3DUX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 22:20:23 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=armlinux.org.uk; s=pandora-2014; h=Sender:In-Reply-To:Content-Type:
        MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=G54T+5sk6bFuEzUiWI+1yMrD5NhH22z54h6GsTDnDwI=; b=f1StIL2vd+aZG0lWDUjey7mIu
        D4B6Q4p8e00zFjBP4riywI2PlJN7AwIcdTxtJBGZ30PKYmkQF961aG0a7b3e9SZn4idaVxCEvgpYN
        yZz0tGD6f4CWDk6sexveDfJPqvA9213cjE0vkcb0j6HWJxo8zSjIZ5k1uLrfamF0m9tD8=;
Received: from n2100.armlinux.org.uk ([fd8f:7570:feb6:1:214:fdff:fe10:4f86]:38357)
        by pandora.armlinux.org.uk with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.90_1)
        (envelope-from <linux@armlinux.org.uk>)
        id 1gSOxL-0003Hc-A6; Thu, 29 Nov 2018 16:14:23 +0000
Received: from linux by n2100.armlinux.org.uk with local (Exim 4.90_1)
        (envelope-from <linux@n2100.armlinux.org.uk>)
        id 1gSOx7-0002HX-1U; Thu, 29 Nov 2018 16:14:09 +0000
Date: Thu, 29 Nov 2018 16:14:01 +0000
From: Russell King - ARM Linux <linux@armlinux.org.uk>
To: Nathan Chancellor <natechancellor@gmail.com>
Cc: Will Deacon <will.deacon@arm.com>, Jens Axboe <axboe@kernel.dk>,
        Julien Thierry <Julien.Thierry@arm.com>,
        Catalin Marinas <Catalin.Marinas@arm.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Nick Desaulniers <nick.desaulniers@gmail.com>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>
Subject: Re: [PATCH] arm64: io: specify asm operand width for __iormb()
Message-ID: <20181129161401.GY30658@n2100.armlinux.org.uk>
References: <20181129041912.5918-1-nick.desaulniers@gmail.com>
 <fe3cba43-935b-448c-46e9-90ea75593e5b@arm.com>
 <20181129104902.GA2377@arm.com>
 <20181129161039.GA17063@flashbox>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181129161039.GA17063@flashbox>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Nov 29, 2018 at 09:10:39AM -0700, Nathan Chancellor wrote:
> On Thu, Nov 29, 2018 at 10:49:03AM +0000, Will Deacon wrote:
> > On Thu, Nov 29, 2018 at 09:03:54AM +0000, Julien Thierry wrote:
> > >
> > >
> > > On 29/11/18 04:19, Nick Desaulniers wrote:
> > > > Fixes the warning produced from Clang:
> > > > ./include/asm-generic/io.h:711:9: warning: value size does not match
> > > > register size specified by the constraint and modifier
> > > > [-Wasm-operand-widths]
> > > >         return readl(addr);
> > > >                ^
> > > > ./arch/arm64/include/asm/io.h:149:58: note: expanded from macro 'readl'
> > > >                                                           ^
> > > > ./include/asm-generic/io.h:711:9: note: use constraint modifier "w"
> > > > ./arch/arm64/include/asm/io.h:149:50: note: expanded from macro 'readl'
> > > >                                                   ^
> > > > ./arch/arm64/include/asm/io.h:118:25: note: expanded from macro '__iormb'
> > > >         asm volatile("eor       %w0, %1, %1\n" \
> > > >                                      ^
> > >
> > > Why does the "eor %0, %1, %1" become "eor %w0, %1, %1" ?
> > > The variable passed to the inline assembly for %0 is unsigned long, so
> > > always 64-bits wide on arm64. Why is clang trying to use a 32-bit
> > > register for it?
> 
> Sorry, this was my fault, I accidentally added a w during testing to see
> what constraints were valid (given that my assembly knowledge is nearly
> non-existence so forgive the non-sensical experimentation) and I used
> that message rather than the original one. This is the unadulterated one.
> 
> In file included from arch/arm64/kernel/asm-offsets.c:24:
> In file included from ./include/linux/dma-mapping.h:11:
> In file included from ./include/linux/scatterlist.h:9:
> In file included from ./arch/arm64/include/asm/io.h:209:
> ./include/asm-generic/io.h:695:9: warning: value size does not match register size specified by the constraint and modifier [-Wasm-operand-widths]
>         return readb(addr);
>                ^
> ./arch/arm64/include/asm/io.h:147:58: note: expanded from macro 'readb'
> #define readb(c)                ({ u8  __v = readb_relaxed(c); __iormb(__v); __v; })
>                                                                        ^
> ./include/asm-generic/io.h:695:9: note: use constraint modifier "w"
> ./arch/arm64/include/asm/io.h:147:50: note: expanded from macro 'readb'
> #define readb(c)                ({ u8  __v = readb_relaxed(c); __iormb(__v); __v; })
>                                                                ^
> ./arch/arm64/include/asm/io.h:118:24: note: expanded from macro '__iormb'
>         asm volatile("eor       %0, %1, %1\n"                           \
>                                     ^
> 
> >
> > Yeah, the message above looks bogus to me. I can see %1 being 32-bit for
> > read[bwl], so maybe clang is just getting the diagnostic wrong. If so,
> > I wonder if the following fixes the problem:
> >
> 
> This doesn't appear to work, I get this error:
> 
> In file included from arch/arm64/kernel/asm-offsets.c:24:
> In file included from ./include/linux/dma-mapping.h:11:
> In file included from ./include/linux/scatterlist.h:9:
> In file included from ./arch/arm64/include/asm/io.h:209:
> ./include/asm-generic/io.h:695:9: error: expected expression
>         return readb(addr);
>                ^
> ./arch/arm64/include/asm/io.h:147:50: note: expanded from macro 'readb'
> #define readb(c)                ({ u8  __v = readb_relaxed(c); __iormb(__v); __v; })
>                                                                ^
> ./arch/arm64/include/asm/io.h:120:28: note: expanded from macro '__iormb'
>                      : "=r" (tmp) : "r" (unsigned long)(v) : "memory"); \
>                                          ^
> 
> >
> > diff --git a/arch/arm64/include/asm/io.h b/arch/arm64/include/asm/io.h
> > index d42d00d8d5b6..13befec8b64e 100644
> > --- a/arch/arm64/include/asm/io.h
> > +++ b/arch/arm64/include/asm/io.h
> > @@ -117,7 +117,7 @@ static inline u64 __raw_readq(const volatile void __iomem *addr)
> >          */                                                             \
> >         asm volatile("eor       %0, %1, %1\n"                           \
> >                      "cbnz      %0, ."                                  \
> > -                    : "=r" (tmp) : "r" (v) : "memory");                \
> > +                    : "=r" (tmp) : "r" (unsigned long)(v) : "memory"); \

The parens around the passed value are part of the asm() syntax, which
is:

	"contraint" (expression)

so should be:

+                    : "=r" (tmp) : "r" ((unsigned long)(v)) : "memory"); \

-- 
RMK's Patch system: http://www.armlinux.org.uk/developer/patches/
FTTC broadband for 0.8mile line in suburbia: sync at 12.1Mbps down 622kbps up
According to speedtest.net: 11.9Mbps down 500kbps up
