Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:16:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BE37A5802E4;
	Fri, 30 Nov 2018 03:08:08 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 03:08:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AseKwBxPVaVUNfxzy1RUl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPr5rsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bIUPAeUOMvpFoIb/qVQOtgO+CAu3CePz1jNEmmP60bEg3ug/FwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7KLoSUfuuzKbWyTXDa+5d1zL86IjOfRAqvOiAVq9sfMTNzkckCgXLjlSW?=
 =?us-ascii?q?qYz4MDKey+MAs2ya7+pmSOKuhHUqpBtrojiqwscsi4/Jhp8ay1ze8iV52ok1Kc?=
 =?us-ascii?q?elSE54eNOpFoZbuS+dN4tzWMwiQmdotT4gxb0cvJ67eCkKyJI6xx/QcfCHdJKI?=
 =?us-ascii?q?4h35WOaMIjd0nGlleKqhiBms7Eeg1vPzVtKo0FpQqCpKjMXMu3YQ3BLQ8siKUu?=
 =?us-ascii?q?Vx8lul1DqVygze5P9ILVopmafYN5It2L89m5gLvUjdAiP6hFj6gaqZe0o59eWl?=
 =?us-ascii?q?6OHqba/7qZKcKYN5jw/zProylsCiBOk0LBUCUmee9OSyybLj80P5TbBEjvIoj6?=
 =?us-ascii?q?XVrJXXKMsVpqO6AgJY1Jso5QylADe8ytsYmGEKLFJbdxKDiIjkI0/OIP/mAvel?=
 =?us-ascii?q?mViskylkx+rAPrL/BpXBNH/DkK3ufbpl6k5czhQ8zcxH6p5KFr0MJOj/VlL/ud?=
 =?us-ascii?q?DGFBM1Lg+5z/r9BNh81I4SQWePDbWYMKPWv1+I/OUvI+yUaY8RuTb9LeUl5vH3?=
 =?us-ascii?q?gX86h1AdZ6+p0oUTaHyhGfRnLUOZbmT2gtoaD2cKsRQxTPbwhF2BTzFTfXCyUL?=
 =?us-ascii?q?w45j0hD4KmF4jDSpi3gLOdxCe7AoFWZmdeB1CIEHfodJuLV+0DaSKPOcJhlj0E?=
 =?us-ascii?q?Vb68S44uzx2utQn6y6Z5IerQ4CEXqZXj1N1t7e3JiR4y7SB0D9ia02yVT2F7hG?=
 =?us-ascii?q?IIRyMs06B4u0B9ykqD3rJ+g/xXDtFT4/JJUgEnNZ/T1eB6CtbyWh7fcdeNUlqp?=
 =?us-ascii?q?XtKmATQpRNIr39AOe1p9G8mljh3b3SqqBKEam6aIBJwz9KLc2X/xKt15y3bH0q?=
 =?us-ascii?q?khklYnTtFONW2gmq5w6QzTC5TVnEWekqagbb4c0zLV9Gef0WqOu1lVXxRrUaXF?=
 =?us-ascii?q?WnAfZVHarc7j6UPAVLKuDbUnMg1cyc+NMKdKa9vpjUlYS/fnItjRf2Wxm2KoDx?=
 =?us-ascii?q?aS2ryMdJbqe3ka3CjFC0gLiQYT8WyCNQg/HCihpW3eASdqFVLuZUPs7OZ/pGm6?=
 =?us-ascii?q?Tk8y0wGFcUlh26Cp9R4SgPyWU+kT0a4cuCc9tzV0G06w0M/MBNqeuQVtZqVcbs?=
 =?us-ascii?q?k74Fdcy23ZsQtxPpijL6Bngl4TaAB3v0Lo1xVqBYRMi8kqrHU2zAVsLaKUyk9O?=
 =?us-ascii?q?dzSd3ZroIL3YNnHy/Ayza67RwlzRzcyZ+rkR5/giq1XspgepFlE8/HVhyNRV13?=
 =?us-ascii?q?qc5pPXDAsdS57xU0A39wRkqLHeeCUy+4TU1Xh0O6murjDCw84pBPciyhu4Y9df?=
 =?us-ascii?q?MaaEFAjuE80aB8miMvAql0KubhIeOOBS9ag0P8y9evuC2a6rOvtgnT28gWRG5o?=
 =?us-ascii?q?B9zlyD9y5mRuHU2JYFxumS3hGbWDfkkFehrsf3lJheajEWAGW+xjbrBY5LaqJp?=
 =?us-ascii?q?YIYEFH2hI8u0xtV5mZ7gQHpY9F+lB1Mb186lYxuSb1rh3QJO0UQbu2ComSy9zz?=
 =?us-ascii?q?ZsiTEmsrKf3DDSw+TlbBcGOnNLSHN+glv2IIm0j8oVXE6nbwUykBul5ED6x7VU?=
 =?us-ascii?q?pahlLmnTR1tIcDbyL214TqSwsb+CadZV6Jw0qSVXTPi8YVeCR77nohsVzznsH3?=
 =?us-ascii?q?FDyzA8bT2qvIv2nwZ7iG6EMHl8tn7ZdtxuyhfF49zcQ+Vc3j4HRCl+lDnWCUKw?=
 =?us-ascii?q?P9iv/dWIiZjDtvqyWH6mVp1WaSPr15+PtDOn5W12Bh2yh/Cymtz9HQk6yyP7zM?=
 =?us-ascii?q?RqVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr8bHUXXz4LwN3V4A//1E14NH2JxIH5VnSbwsR/Ydm3eWcW2iM778BXB6?=
 =?us-ascii?q?aY9r1EnS1polWmqQLde+RynjAYyfE28n4Vn/kJuBYxziWaGr0THVNXPSv2mxSK?=
 =?us-ascii?q?7tC+qr5aZGKucbi2yUp/ksqtDLCEogFARnn5fo0uEjN37sV6KFjMymH86pn4eN?=
 =?us-ascii?q?nMatIerh6UnA3Bj+RPKJIxi+AFhSxoOW/muX0lyug7jQFh3J2gvYiHLXlt87y9?=
 =?us-ascii?q?AhJCKjL1YMYT8Cn3jalChsaWw5yvHpJ5FzUOXZvoTuinHCgctPv5LAaODCMzqm?=
 =?us-ascii?q?2AFrXBBw+f51xrr3bOE5CtKnGWK2MVzdRkRBmBOkNfhBoYUyk9np48Dgqq3tDu?=
 =?us-ascii?q?cF9l5jAN4V71sgdMyuVtNxXlU2bQvgGoaiovSJiELRpb9QVC50bTMcyD4eN/BS?=
 =?us-ascii?q?BY/pu9rAOTLmyXfRhHDWYMWkacHVDsIqGu5cXc8+ifHuexNOHBYbKKqexDTfuI?=
 =?us-ascii?q?wY+v35Bi/zaNMMWPI3ZjA+c62kpFQXB2BcDZly8TRCwQkiLHd9Sbqwuk+i1rss?=
 =?us-ascii?q?C/9+zmWAD16ouKFbRSKs9j+wysjaeAKu6Qhzt5KTBC2ZMX3nLIzLkf3FgPiyBh?=
 =?us-ascii?q?bTWtELIAtTLTQ6LUgKNYExkbayZrPstS8608xhVNOdLcit7t1r94ieM1C05YVV?=
 =?us-ascii?q?P7nMGlf9cKI2a7NFPIH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGuIGybBdtCWvgTNLncBG7M8V3jTo5wbIqnHPKKHUcPC?=
 =?us-ascii?q?N4c0NMqL2Q8CxZju9+G2xH8npqM+2ElzyF4OnfL5YcqeFrDThsl+JG/HQ6zKNY?=
 =?us-ascii?q?4ztZRPNugivdsN5vr0uikumO0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxESrdt/FtLvo7xQysTIlK/rNDdC8tfU8dEACMTONM2HMGQuMRzyFT7QDQsF?=
 =?us-ascii?q?SyOrNG7Fi0xclvGS6mOarpwgppfwn5oOT6dRVEYpGfMCFkRlANsCLY93Xzw+l7?=
 =?us-ascii?q?6bic8I5XymoxjQRMVVpJbHVv2JDPXrKTaZi6REZhQSzbP5K4QTKpP020h4ZlZm?=
 =?us-ascii?q?m4TKHhmYYdcYmi1gakcZrFpK6mR+XyVnw0LkbkWg7GAUD+K0jzYshw1zeu02sj?=
 =?us-ascii?q?zr5gFkCEDNoX4KjVIqlNHhyROQdjG5ae+ZZ6QeLyvyqlh5Zpf6RRtlRQSomEhl?=
 =?us-ascii?q?MirUAbVLgP19djY420fnpZJTFKsEHuV/axgKyKTSPq1w3A=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAADiGAFch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMIE5gQInBJgWgg0UaJFThmoWGAsIAYd0IjcGDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECNwYBATcBBQkBAQoYCSUDD?=
 =?us-ascii?q?AUoIRiDHAGCAQEDAQqlboIfgnYBAQWHKQiMGxc+gUGBEYJdNYMThSOCJosdlRY?=
 =?us-ascii?q?JkSwLGJEfLJgugVyBdzMaCCwEgycJghKLZ4JZQDKBBQEBjhsBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ANAADiGAFch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMIE5gQInBJgWgg0UaJFThmoWGAsIAYd0IjcGDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYgECAwECNwYBATcBBQkBAQoYCSUDDAUoIRiDHAGCAQE?=
 =?us-ascii?q?DAQqlboIfgnYBAQWHKQiMGxc+gUGBEYJdNYMThSOCJosdlRYJkSwLGJEfLJgug?=
 =?us-ascii?q?VyBdzMaCCwEgycJghKLZ4JZQDKBBQEBjhsBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="140241997"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 03:08:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726877AbeK3WN7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 17:13:59 -0500
Received: from pandora.armlinux.org.uk ([78.32.30.218]:53072 "EHLO
        pandora.armlinux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726473AbeK3WN7 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 17:13:59 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=armlinux.org.uk; s=pandora-2014; h=Sender:In-Reply-To:Content-Type:
        MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=uOiN9MPB6iVNWvNXV6KDBzuuE1bjGxDpYd42lwminN8=; b=msZOa6/Q5pOX2EOwznkvvnHnR
        A20/gy//c4Q766EJzTW1GV7+Rh3b0LvQMQf/yogdZwQn84///LNe/PZ3ZZRS0OgEGe9YytZWhXBiI
        bYf9HKDe+6czICbRuiku1p9393Ro2n/8xk0ndUQr416OzkaiYwMWniXQ2kWydVU1EY62s=;
Received: from n2100.armlinux.org.uk ([2001:4d48:ad52:3201:214:fdff:fe10:4f86]:41092)
        by pandora.armlinux.org.uk with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.90_1)
        (envelope-from <linux@armlinux.org.uk>)
        id 1gSgbM-0007y7-Ou; Fri, 30 Nov 2018 11:04:52 +0000
Received: from linux by n2100.armlinux.org.uk with local (Exim 4.90_1)
        (envelope-from <linux@n2100.armlinux.org.uk>)
        id 1gSgbI-0005Q6-BF; Fri, 30 Nov 2018 11:04:48 +0000
Date: Fri, 30 Nov 2018 11:04:46 +0000
From: Russell King - ARM Linux <linux@armlinux.org.uk>
To: Phil Edworthy <phil.edworthy@renesas.com>
Cc: Stephen Boyd <sboyd@kernel.org>,
        Michael Turquette <mturquette@baylibre.com>,
        Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        Uwe =?iso-8859-1?Q?Kleine-K=F6nig?= 
        <u.kleine-koenig@pengutronix.de>,
        "linux-clk@vger.kernel.org" <linux-clk@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>
Subject: Re: [PATCH v8] clk: Add (devm_)clk_get_optional() functions
Message-ID: <20181130110446.GE30658@n2100.armlinux.org.uk>
References: <20181120141445.21378-1-phil.edworthy@renesas.com>
 <154356894146.88331.4169293505438588293@swboyd.mtv.corp.google.com>
 <TY1PR01MB1769161656941346A08F9F8AF5D30@TY1PR01MB1769.jpnprd01.prod.outlook.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <TY1PR01MB1769161656941346A08F9F8AF5D30@TY1PR01MB1769.jpnprd01.prod.outlook.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 30, 2018 at 10:25:37AM +0000, Phil Edworthy wrote:
> Hi Stephen,
> 
> On 30 November 2018 09:09 Stephen Boyd wrote:
> > Quoting Phil Edworthy (2018-11-20 06:14:45)
> > > This adds clk_get_optional() and devm_clk_get_optional() functions to
> > > get optional clocks.
> > > They behave the same as (devm_)clk_get except where there is no clock
> > > producer. In this case, instead of returning -ENOENT, the function
> > > returns NULL. This makes error checking simpler and allows
> > > clk_prepare_enable, etc to be called on the returned reference without
> > > additional checks.
> > 
> > Ok. I guess that works by virtue of how -ENOENT is returned by various
> > functions that are called deeper in the clk_get() path? I'm cautiously
> > optimistic. So cautious, we should probably add a comment to these optional
> > functions that indicate they rely on the functions they call to return -ENOENT
> > under the various conditions that make a clk optional.
> Yes, it does indeed rely on how clk_get() is implemented.
> Specifically, that if __of_clk_get_by_name() returns -EINVAL, the error is
> superseded by clk_get_sys() returning -ENOENT.
> As you say, a comment may help here.

Each time the question of the optional clk_get() stuff comes up, we go
around the same discussions time and time again.  So far, each time
has ended up flopping.

Yes, clk_get() can only ever return -ENOENT if it falls back to the
non-DT methods, because it assumes that the clk tables are complete
(it can do nothing else.)

I don't think it needs a comment because it's obvious from the code
and also from the implementation point of view.

> > > +static inline struct clk *clk_get_optional(struct device *dev, const
> > > +char *id)
> > 
> > Any kernel doc for this function?
> I took my cue from the surrounding functions, let me know if I have to add it.

I don't see you need to - this is an internal function by way of the
"static inline" you have before it.  It's not an API function.

-- 
RMK's Patch system: http://www.armlinux.org.uk/developer/patches/
FTTC broadband for 0.8mile line in suburbia: sync at 12.1Mbps down 622kbps up
According to speedtest.net: 11.9Mbps down 500kbps up
