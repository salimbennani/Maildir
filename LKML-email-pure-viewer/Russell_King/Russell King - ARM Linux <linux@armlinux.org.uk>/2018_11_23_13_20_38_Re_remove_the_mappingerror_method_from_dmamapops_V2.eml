Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 23:35:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D21835803EB;
	Fri, 23 Nov 2018 05:21:05 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 05:21:05 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AxyMtjhYIJ5ebplb6WRtgdwb/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm8Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP6wbE23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocTf21zLLTzTrda/NW3Sr25o3JchAnrvGHQKt8etfNxEczEA3Ok1Oe?=
 =?us-ascii?q?qY3jPzOI2eUGrm+W7+5hVeKplm4mpBp8rSK1xscpjonJh4QVyk3L9Cljx4Y1P9?=
 =?us-ascii?q?K4RFRmYd6nCZZdsTyROYVxQsMnWW5ouSA6x6Uctp6heSgKzJUnxxjCa/2IaYSI?=
 =?us-ascii?q?5QjjVOmLLTdlh3JpYKm/hw6s/ke+1+L8Ste70E1WriZflNnDqGwN2hrO4caEUv?=
 =?us-ascii?q?tw5lmt1SqL2gzJ9+1JL144mbDGJ5Mi3rI8jJsevEbbEiL0m0j6lqGbels+9uWm?=
 =?us-ascii?q?9+jreKvqqoKfOoJylwrwKL4hmtalDuQ9KgUOX3aU+eC71LD74035T6tFjucsnq?=
 =?us-ascii?q?narp/aP8IbqbC9AwNP1YYj8Rm/Ay+n0NQeg3YHMEpIdAybg4XtIV3CPf71Aeml?=
 =?us-ascii?q?j1ixkzpn2+rKM7zjD5nVK3jMirbhfbJz605GzwozyMhS55ZVCrEHPfLyVVb9tN?=
 =?us-ascii?q?/GAR8jNQy73eLnBMx61oIQX2KAHLWZPbjMsV+H+O0vOfOAZIwLtzbnLfgq+fru?=
 =?us-ascii?q?gWU+mV8HcqmlxYEXZ2ygHvR6P0WZZmLhgtMAEWcJoAUyVuPriECZXD5XZnayWb?=
 =?us-ascii?q?885z4hBIKnC4fDWp6igLib0CinGZ1WY3hMCkqQHnfwa4WER/AMZTqSIsB7kzwE?=
 =?us-ascii?q?SaKuS4g72RGuqQ/10bxnLuXP9y0ctJLj0sV15uLJmREz8zx0E9qS02WXQ25omW?=
 =?us-ascii?q?MIQic83Lpjrkxl1leDza94juRaFdxU+fxFSAQ6NZnaz+x8DND/QQbBftaPSFa7?=
 =?us-ascii?q?TdSqGzAxTtQtw9AQZ0ZxAcmtjhfG3yCyGb8ai6SLBIAo8qLbx3X+Pd19y3bB1K?=
 =?us-ascii?q?kilVUmWNFANW+9i6579gjTAZPJkkqDm6arc6QcwDDC9GOZwWWSu0FYVRZ6Ub/Z?=
 =?us-ascii?q?UnAHekvWsdP561vBT7C0D7QrKA9Byc+YJatMZd3kllFGRPblONTDbGO9gWawBR?=
 =?us-ascii?q?CUxrySaIrmYXkS3CLYCEIciQAc4W6GNRQiBiemu2/RESZhFUzxbE/28elxsnW7?=
 =?us-ascii?q?TlQqwAGMaEFh07m1+hsRhfGHT/MT37QEuDouqjluHVa92c7WBMSEpwZ7YKpcZt?=
 =?us-ascii?q?Y96k9d1W3Frwx9IoCgL6d6i1EDaQt3oV3h2w93Copal8gqt20lzAxpJKKc0VNB?=
 =?us-ascii?q?cS6Y3J/qNr3WLGny4A6ga6rM1l7C19aW/78F6O4kpFX7oAGpCk0i/m1709lU1n?=
 =?us-ascii?q?uc4YnKDAoSUJ7rTkY77R96p6veYik84YPU2mZhMa21sj/ExtIoC/Epyhemf9dD?=
 =?us-ascii?q?LqyEEBX+HNEdB8irMOYqgUSmbgoYPOBO8645J9mpd/+Y16+kIulhnCiqgn9a4I?=
 =?us-ascii?q?9gyE2M8Sl8SunW35sex/GY3w2HVyrzjVu7s8D3n5xEai8WHmal1SfkA4tRbLVo?=
 =?us-ascii?q?fYkXEWeuP9G3xtJmip/tRn5U7kKsC0kH2c+pYxWSaVP90BZU1UQWp3ynhCS5wy?=
 =?us-ascii?q?Z1kzEvsqqQwijOz/7+exoAP25BXHNigkv0IYiok9AaW1ClbxIolBS5/0n63bVU?=
 =?us-ascii?q?pKNlI2nVX0hIZSn2I3h+XaSqsrqNftBA6IkvsSVRS+m8ZVGaSrjgoxoVyS/jHm?=
 =?us-ascii?q?1exCwleDGuoJn2gxt6iGeFJnZpsHXZYd1wxQvY5NHERf9R3yAKRSlihTnMG1i8?=
 =?us-ascii?q?OcKk/dGVl5fFr+C/WHitVpxVcSn304yAsDG36nFtAR26h/qzgMHoERAm0S/n0N?=
 =?us-ascii?q?lnTSfIowzmYono1KS6NvhrflJyC1//6Mp6G4d+nZU2hJwL3Xgah5OV/WcIkGvp?=
 =?us-ascii?q?MNVb377+Y2QJRTIR39HV5w3l0lV5Ln2V34L5Smmdwsx5ati6eGwW3Tgx78JLCK?=
 =?us-ascii?q?eS97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792mr6VYfmevfaKw1Epjh9+hCr6CrxpYWHb4fJciACBx4t9+MFLKzH389IXkdM?=
 =?us-ascii?q?PMYtIUsx2eiw3AgPRNKJItivoKgjJqOWf8vX0m0eE3lxJv0o+hvIibNWpt5rm2?=
 =?us-ascii?q?DQBCNj36fM4T/jDtjaBDnseZxYyvH5NhGikVU5vsV/6nDDUStfH/PQaUDDI8sm?=
 =?us-ascii?q?ubGabYHQKH9EdmqHfPH4qqNn6NInkZ0M5iRAKcJEFEhAAUXTM6noM2Fwywxczh?=
 =?us-ascii?q?dlt56S4V5lLithRMzedoPQHlUmjDvAeodis0SJ+HIRVN9A5C4EPVMdGE4uJ3Ai?=
 =?us-ascii?q?FV5ZmhrA2LKmyGaAVEF2AJWkqYB1/9Ormi/8XP8++dBuCmNfvBfa2OqfBCV/eP?=
 =?us-ascii?q?3Z+v0JFp/zOSOcWUJHViE+c32kleXXB6BsTZnS8ASzcMmiLJbs6bogq8+yJtos?=
 =?us-ascii?q?C+9vTrRBzg5Y+VB7RONtVv/gi8gb2fOO6ImCZ5NTFY24sMxH/P1bgfxUMShDto?=
 =?us-ascii?q?dzW3CrQAsijNTK3Ll69TDh4bbT5zNcRS46I92AlNJdDUitfv2rFkif41Dk9PVU?=
 =?us-ascii?q?b9lcGxecwKP2a9OUvHBEmVNbSGJj7Lw8DtbaO/U71Qi+pUuAOquTaGCE/uJTCD?=
 =?us-ascii?q?lzjvVxCyPuBAliCbPBpCuI6jdhZhE3TsTNXjahejKt94kSU2waEohnPNLWMTKy?=
 =?us-ascii?q?V8fFhXrrKO7SJUmPF/G21a43phLOmEnTuZ7ubCJpYXt/trHjp7l+ZA7HsmzLtV?=
 =?us-ascii?q?6TlOROZplyvKst5uv1amn/GTyjpmVRpCsCpEiJiXskViJ6rZ8IJNWXLF/BIL8G?=
 =?us-ascii?q?WRBA4Gp9pjCt3zpa9QzsLDm770KDdH69jU59cTB9DIKMKbN3osKRroFyTSDAsA?=
 =?us-ascii?q?TD6rM3nQhk1dkP6I8H2VoYM3qpztmJoIV79aW0Y5FvIcCkR5AtMCJI17US8jkb?=
 =?us-ascii?q?6e34Y04i+cqxTLS41guZ3LW/baVffoMjGx3bNVexYTh7TiItJAGJf83hlYd0Jh?=
 =?us-ascii?q?kYDOU2nRW98F52VIVCp8hERL7Wg2Gmky3V/1Qgq35XsSE+Ok2BkshU1jYrJ+p3?=
 =?us-ascii?q?/X/14rKw+S92MLm04rlICg2GjJfQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CaAAB1/vdbh0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBZYExgTmBAicEmAyCDRRmmDQUGAsIAYhXIjgSAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYkAYJhAQEBAQIBAQIkEwYBATcBBQkBAQoOCgklAwwFKCEYFIMIA?=
 =?us-ascii?q?YF5CAEDAQqmBIFsM4J2AQEFhxQIjAkXPoFBgRGCXTWDEIdJiVOWMQmRJAsYgVm?=
 =?us-ascii?q?FC4okLJgEgV2BdjMaCCwEgycJghIMF4tEglhAMoEFAQGMIQEB?=
X-IPAS-Result: =?us-ascii?q?A0CaAAB1/vdbh0O0hNFjGwEBAQEDAQEBBwMBAQGBZYExgTm?=
 =?us-ascii?q?BAicEmAyCDRRmmDQUGAsIAYhXIjgSAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkA?=
 =?us-ascii?q?YJhAQEBAQIBAQIkEwYBATcBBQkBAQoOCgklAwwFKCEYFIMIAYF5CAEDAQqmBIF?=
 =?us-ascii?q?sM4J2AQEFhxQIjAkXPoFBgRGCXTWDEIdJiVOWMQmRJAsYgVmFC4okLJgEgV2Bd?=
 =?us-ascii?q?jMaCCwEgycJghIMF4tEglhAMoEFAQGMIQEB?=
X-IronPort-AV: E=Sophos;i="5.56,269,1539673200"; 
   d="scan'208";a="53456842"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 05:21:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2504491AbeKXAFK (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 19:05:10 -0500
Received: from pandora.armlinux.org.uk ([78.32.30.218]:51728 "EHLO
        pandora.armlinux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2394528AbeKXAFJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 19:05:09 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=armlinux.org.uk; s=pandora-2014; h=Sender:In-Reply-To:Content-Type:
        MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=OOjcz63Sr/9KqmtB35xykFtz+hrAlkihgQrZlq/gPBo=; b=DFZnldlvQGplXfx5RL3N17yJo
        7AT1LgZgzXJ51tma+F7PnUeOQ0aZVDMpzyYlx0dxgcDYSSaImx6WILR1uoRS79XXZvLNXJ6OFbJHi
        lWikAdscokOXQ3iD02ZsgDb0tj++zLRjA9H/iJl0KxNMpDClAJwx5XILh/So24GXDlVQI=;
Received: from n2100.armlinux.org.uk ([fd8f:7570:feb6:1:214:fdff:fe10:4f86]:50011)
        by pandora.armlinux.org.uk with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.90_1)
        (envelope-from <linux@armlinux.org.uk>)
        id 1gQBO4-0008A4-MK; Fri, 23 Nov 2018 13:20:48 +0000
Received: from linux by n2100.armlinux.org.uk with local (Exim 4.90_1)
        (envelope-from <linux@n2100.armlinux.org.uk>)
        id 1gQBNy-0007LO-QO; Fri, 23 Nov 2018 13:20:42 +0000
Date: Fri, 23 Nov 2018 13:20:38 +0000
From: Russell King - ARM Linux <linux@armlinux.org.uk>
To: Joerg Roedel <joro@8bytes.org>
Cc: Robin Murphy <robin.murphy@arm.com>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Christoph Hellwig <hch@lst.de>, linux-arch@vger.kernel.org,
        linux-alpha@vger.kernel.org, linux-ia64@vger.kernel.org,
        linux-parisc@vger.kernel.org,
        David Woodhouse <dwmw2@infradead.org>,
        the arch/x86 maintainers <x86@kernel.org>,
        Linux List Kernel Mailing <linux-kernel@vger.kernel.org>,
        iommu@lists.linux-foundation.org, jdmason@kudzu.us,
        xen-devel@lists.xenproject.org,
        linux-arm-kernel@lists.infradead.org, m.szyprowski@samsung.com
Subject: Re: remove the ->mapping_error method from dma_map_ops V2
Message-ID: <20181123132038.GT30658@n2100.armlinux.org.uk>
References: <20181122140320.24080-1-hch@lst.de>
 <CAHk-=wh=_T=A53+o4zLNbKio43LGqVDb0KCbWPDvAg54bRDmWw@mail.gmail.com>
 <20181122170715.GI30658@n2100.armlinux.org.uk>
 <CAHk-=wgfGzXuDAKFQPdzMib3QCRHfSTsy5=gLU-WCoya+Ym+1A@mail.gmail.com>
 <11829e3c-7302-f821-cf5c-863e5267a17b@arm.com>
 <20181123104918.GE1586@8bytes.org>
 <20181123110155.GR30658@n2100.armlinux.org.uk>
 <20181123130313.GI1586@8bytes.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181123130313.GI1586@8bytes.org>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Nov 23, 2018 at 02:03:13PM +0100, Joerg Roedel wrote:
> On Fri, Nov 23, 2018 at 11:01:55AM +0000, Russell King - ARM Linux wrote:
> > Yuck.  So, if we have a 4GB non-PAE 32-bit system, or a PAE system
> > where we have valid memory across the 4GB boundary and no IOMMU,
> > we have to reserve the top 4K page in the first 4GB of RAM?
> 
> But that is only needed when dma_addr_t is 32bit anyway, no?

You said:

  But we can easily work around that by reserving the top 4k of the first
  4GB of IOVA address space in the allocator, no? Then these values are
  never returned as valid DMA handles.

To me, your proposal equates to this in code:

int dma_error(dma_addr_t addr)
{
	return (addr & ~(dma_addr_t)0xfff) == 0xfffff000 ? (s32)addr : 0; 
}

Hence, the size of dma_addr_t would be entirely irrelevant.  This
makes dma_addr_t values in the range of 0xfffff000 to 0xffffffff special,
irrespective of whether dma_addr_t is 32-bit or 64-bit.

If that's not what you meant, then I'm afraid your statement wasn't
worded very well - so please can you re-word to state more precisely
what your proposal is?

> > Rather than inventing magic cookies like this, I'd much rather we
> > sanitised the API so that we have functions that return success or
> > an error code, rather than trying to shoe-horn some kind of magic
> > error codes into dma_addr_t and subtly break systems in the process.
> 
> Sure, but is has the obvious downside that we need to touch every driver
> that uses these functions, and that are probably a lot of drivers.

So we have two options:
- change the interface
- subtly break drivers

In any case, I disagree that we need to touch every driver.  Today,
drivers just do:

	if (dma_mapping_error(dev, addr))

and, because dma_mapping_error() returns a boolean, they only care about
the true/falseness.  If we're going to start returning error codes, then
there's no point just returning error codes unless we have some way for
drivers to use them.  Yes, the simple way would be to make
dma_mapping_error() translate addr to an error code, and that maintains
compatibility with existing drivers.

If, instead, we revamped the DMA API, and had the *new* mapping functions
which returned an error code, then the existing mapping functions can be
implemented as part of compatibility rather trivially:

dma_addr_t dma_map_single(...)
{
	dma_addr_t addr;
	int error;

	error = dma_map_single_error(..., &addr);
	if (error)
		addr = DMA_MAPPING_ERROR;
	return addr;
}

which means that if drivers want access to the error code, they use
dma_map_single_error(), meanwhile existing drivers just get on with life
as it _currently_ is, with the cookie-based all-ones error code - without
introducing any of this potential breakage.

Remember, existing drivers would need modification in _any_ case to make
use of a returned error code, so the argument that we'd need to touch
every driver doesn't really stand up.

-- 
RMK's Patch system: http://www.armlinux.org.uk/developer/patches/
FTTC broadband for 0.8mile line in suburbia: sync at 12.1Mbps down 622kbps up
According to speedtest.net: 11.9Mbps down 500kbps up
