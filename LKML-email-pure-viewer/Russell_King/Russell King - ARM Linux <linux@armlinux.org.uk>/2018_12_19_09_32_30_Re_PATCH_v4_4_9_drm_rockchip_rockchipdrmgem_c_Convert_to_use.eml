Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:32:35 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E739A58043E;
	Wed, 19 Dec 2018 01:33:07 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 01:33:07 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AxqCLFROmydqmCL8WTaQl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPnzrsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2h?=
 =?us-ascii?q?bIUPAeUOMvpFoIb/qVQOtgO+CAu3CePz1jNEmmP60bEg3ug/FwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj7KLoSUfuuzKbWyTXDa+5d1zL86IjOfRAqvOiAVq9sfMTNzkckCgXLjlSW?=
 =?us-ascii?q?qYz4MDKey+MAs2ya7+pmSOKuhHUqpBtrojiqwscsi4/Jhp8ay1ze8iV52ok1Kc?=
 =?us-ascii?q?elSE54eNOpFoZbuS+dN4tzWMwiQmdotT4gxb0cvJ67eCkKyJI6xx/QcfCHdJKI?=
 =?us-ascii?q?4h35WOaMIjd0nGlleKqhiBms7Eeg1vPzVtKo0FpQqCpKjMXMumgT1xzW8MeLUP?=
 =?us-ascii?q?19/kCn1D2S1A7T8vlJLV4omaffMZIt37A9moQJvUjeHSL6hF/6ga6Ue0k8+OWl?=
 =?us-ascii?q?6P7rb7v4qpOGOYJ4lhvyProzlsG8B+kzLxIAUHKB+eum0b3u5U35T6tOjv0xiq?=
 =?us-ascii?q?TZrp/aKtoBpqKjAA9azJwj6xChADeiytgYmmMHLF1ddBKGiYjmJU3OLejmAfuj?=
 =?us-ascii?q?h1mgiipnyv7YMrH7H5nALWTPnK3gcLt/80JczRA8zdFb55JaELEBJ/fzV1f1tN?=
 =?us-ascii?q?zZCB85LgO1z//kCNpjzIMeX3yAAquAPKPVv16I4PwgI/OXaY8LtzbyNeIl6+Tt?=
 =?us-ascii?q?jXAng18de7em3Z8NZHC/BPRmLF2VYWDwjdcZDWcKog0+QfTuiF2DUj5ceWy+Xq?=
 =?us-ascii?q?0h5jwgDIKmDIHDRp2igbCb3Se7GIFWaX5CClyWDXjocICEUe8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8hzx6utRP6xKBgLubO+i0YqIjs1N565+DIkREy9Dp0D9mS0m2XTmF0mH?=
 =?us-ascii?q?8ISCEy3KxlvUN9zVKD27Big/NEDdxT++9JUgAiOJ7eyOx1Fcr+WgHGftePTlam?=
 =?us-ascii?q?Rc6rATUwTtI33t8PbFxxG9SkjhDfwSWqB6UZmKCMBJwx6qjcxWT+J95hy3ba06?=
 =?us-ascii?q?ksl0MpQtBPNW2hha5z7RLTCJTLk0iCk6aqdKIc3DPC9WuZzGqOul1YXxB0Uanf?=
 =?us-ascii?q?QX8fYU7Wp8zj5kzeV7+uFagnMgxZxM6BMKRKbMfljVFHRPj5PtTebHm8m2OxBR?=
 =?us-ascii?q?aO27ONY5Dme2Qb3CXBFkcElxof8mqBNQg7Hi2huX7RDCRyFVLzZEPh6fRxp2ml?=
 =?us-ascii?q?TkAq1Q2Kb1du17yu+hELg/yQTPcT3rEBuCclsDh0GFe939TLC9uPvQZhfaNcYc?=
 =?us-ascii?q?8j71dDz27Wqwt9Ppm4JaB4mlEeaxh3v1/p1xhvF4pPi9Yqo20wwApyM62Y1khB?=
 =?us-ascii?q?eC2e3Z3rPr3XK2/y/A2gaqLM21He1sqW9bkL6Pgit1rjuwSpHFI483p7y9lVz2?=
 =?us-ascii?q?ec5pLSAQoOUJLxV0E39wR6p7DaeCU9+5nY1Xp2Mamwsz/C3d0pCfAhyhaheddf?=
 =?us-ascii?q?LayFGBXzE80cG8ihNugql0K1YRIDOeBY7LQ0MN++d/uaxK6rO/5tkyiijWtZ74?=
 =?us-ascii?q?FyzEKN+zBnRe7VwpkK2feY3giAVzfil1qhtsH3mYZZZTAdBGa/yC7kBJJPaa12?=
 =?us-ascii?q?Z4oEFWCuI8ivzNVkm5HtQ2JY9EKkB14e2M6pZACeYEDn0QxR1UQYu3qnmSSjwj?=
 =?us-ascii?q?xwkjEpqLef3SPUz+TjchoHJnBERG14gVjwJoi0isgQXFK0YAgxiBul+UH6yrBB?=
 =?us-ascii?q?pKR+M2bcW11IcDXxL214VKu/qKCCY89W5Jw0qypXVPmzbk6ASr76pRsXyCfjH2?=
 =?us-ascii?q?pYxDAmeDCmoJT5nxpmiG2DKHZ/tmbWecZ1xR3H/tzTWeZR3iYaRCl/kTTWBlm8?=
 =?us-ascii?q?M8Op/NmOjJfDr+a+WnmlVp1Sdynr0IyBuDG65W1sHR2wgfSzlsf7Hgg91C/xz8?=
 =?us-ascii?q?NqWjnQrBbgfonr0Ly3MeB9cUlyB1/86M16FptlkoQqh5EQ2nkahpOL8noBimrz?=
 =?us-ascii?q?NdRb2aTjbHsCXzILwtjV4BT7101nNH6G24X5VnCFyMt7e9a6en8W2j46781SCK?=
 =?us-ascii?q?ab9rtEkTF3olq5qwLcevx9njYbyfsz538WmeAJuAwxziqDBrAeB1VXPSvplx6Q?=
 =?us-ascii?q?9dCxsL1XZHqzcbi3zEd+nsquDLCYrgFcRXb2YJEiHSBr48V7MVLM1mDz647+dN?=
 =?us-ascii?q?nRa9ITqgObkxPag+dJL5Ixk+IAhTB7NmLloX0l1+k7gARr3ZG7v4iIMX9h/ayn?=
 =?us-ascii?q?DR5DKj36edkT9SrzgqZEkcabxISvHpRnGjUWU5rkV/OoEDQOtfv5MwaCCiEzqn?=
 =?us-ascii?q?CeGbDHBw+Q9F9mr27TE5CsL3yXOH4ZzdB4SBicPkNfhh0UXC4hnp44DQ2qwM3h?=
 =?us-ascii?q?cEFk5jEe/FL4qx1Myv52OBn7SGvQuACoajIsQpiFMBVW9h1C51vSMcGG9e18BS?=
 =?us-ascii?q?ZY/pm8rACXLmybeh9FDWUIWkyCGlDiMaOi5djG8+iEGOW+K+HCbqmJqexbT/2I?=
 =?us-ascii?q?346g0pN6/zaQMcWCJntiAOc+2kVdRnB1AdjZly8MSywKlCLNcsibqw2n+iBsqs?=
 =?us-ascii?q?C/8fLrWB/g5IeVCrtSN8lv9A6ygauZK+GQgyN5Iy5C1pwQ3X/I1KQf3FkKhiBu?=
 =?us-ascii?q?cDmtDK0AtTPXQ6LWgKNXFBkbayV8NMZT66I83w9NOdPUi9/v1754iOI1BElBVV?=
 =?us-ascii?q?D7hs6pYskKKXmnNFzbHEaLKKiGJTrTzsH3f6y8SL5QjOZVtxGqujabCUjjPjud?=
 =?us-ascii?q?mDnzShCvKvpBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9TlXguhkFGxb8HVkLfOImyKY7+TDLpYWsP1rAjl7lu5A4XQ6zadV?=
 =?us-ascii?q?4z9ARPBvhCTSqdtuqUm8kuaT0jpnTAZOqjFTiYKXvEViPL/V+YVaVXnY/BIC82?=
 =?us-ascii?q?OQBg8Op9tkDN3vpq9RxsLOlKL1NDdN7dbU8dEACMjTLcKNKGAhPgbxGD7IEAsF?=
 =?us-ascii?q?SiamNGHFiExblfGS93uVoYA7q5jsgpUOTLBbWUcxFvMbDERlAdMDLI12XjMijb?=
 =?us-ascii?q?6UksoI6WCioxnWQcUJ9qzAA8mVHO3zKT2axZtDbgEEzKmweYYJOpe9301kd0lS?=
 =?us-ascii?q?k4HDGk6WVtdI9H5PdAgx9X9Q62NzSml7+EPjZUvoqFYpMLaQnxgrmkMqZeUr6S?=
 =?us-ascii?q?fE6k0yIlvMuTt2l1M+38jm12PCOAXtJbu9CNkFQxH/sFI8Z9aiG154?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AaAAC7Dxpch0O0hNFNFhsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVQDAQEBCwGBMIE5gQInBJgOgg0UaJFjhnAVGAsIAYcqIjcGDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKDgoJCgUWA?=
 =?us-ascii?q?wwFKCETBYMdAYIBAQMBCqY6gWwzgnYBAQWHKwiMPxc+gUGBEYJdNYMTgSuBEoU?=
 =?us-ascii?q?QiTiXeQmRVQwYgV2FH4paLJlQgVyBeDMaCCwEgycJghIMFxKLMoJZQDKBBQEBi?=
 =?us-ascii?q?zeCJAUBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AaAAC7Dxpch0O0hNFNFhsBAQEBAwEBAQcDAQEBgVQDAQE?=
 =?us-ascii?q?BCwGBMIE5gQInBJgOgg0UaJFjhnAVGAsIAYcqIjcGDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKDgoJCgUWAwwFKCETBYMdAYI?=
 =?us-ascii?q?BAQMBCqY6gWwzgnYBAQWHKwiMPxc+gUGBEYJdNYMTgSuBEoUQiTiXeQmRVQwYg?=
 =?us-ascii?q?V2FH4paLJlQgVyBeDMaCCwEgycJghIMFxKLMoJZQDKBBQEBizeCJAUBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208";a="56506613"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 01:33:05 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728424AbeLSJdC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 04:33:02 -0500
Received: from pandora.armlinux.org.uk ([78.32.30.218]:55642 "EHLO
        pandora.armlinux.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726537AbeLSJdB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 04:33:01 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
        d=armlinux.org.uk; s=pandora-2014; h=Sender:In-Reply-To:Content-Type:
        MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:Reply-To:
        Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
        Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
        List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
         bh=XEdwmYpb9V17qjkZSHR5XXHlUzVbPyMwKaT9zenZRtM=; b=VoB8W+aN2VBR/la4LUJaHP8xp
        trOSt566Jd5quXeoXhhLv1kDQ5seisInv09pFBgRLG66YmZbVjEeZsihCpTW8LaHR9Gp9/h2zb43+
        wMkbOWmn2vBWXk2HT8yRf/qQqY6K6ftTIZuMctLDOQwQdDJNW3APi9Rt3AcewA32ChKqk=;
Received: from n2100.armlinux.org.uk ([fd8f:7570:feb6:1:214:fdff:fe10:4f86]:53501)
        by pandora.armlinux.org.uk with esmtpsa (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
        (Exim 4.90_1)
        (envelope-from <linux@armlinux.org.uk>)
        id 1gZYDR-0002ih-Th; Wed, 19 Dec 2018 09:32:34 +0000
Received: from linux by n2100.armlinux.org.uk with local (Exim 4.90_1)
        (envelope-from <linux@n2100.armlinux.org.uk>)
        id 1gZYDP-0002y2-Dd; Wed, 19 Dec 2018 09:32:31 +0000
Date: Wed, 19 Dec 2018 09:32:30 +0000
From: Russell King - ARM Linux <linux@armlinux.org.uk>
To: Souptick Joarder <jrdr.linux@gmail.com>
Cc: Michal Hocko <mhocko@suse.com>, Heiko Stuebner <heiko@sntech.de>,
        Linux-MM <linux-mm@kvack.org>, airlied@linux.ie,
        hjc@rock-chips.com, Matthew Wilcox <willy@infradead.org>,
        linux-kernel@vger.kernel.org, linux-rockchip@lists.infradead.org,
        dri-devel@lists.freedesktop.org,
        Andrew Morton <akpm@linux-foundation.org>,
        linux-arm-kernel@lists.infradead.org
Subject: Re: [PATCH v4 4/9] drm/rockchip/rockchip_drm_gem.c: Convert to use
 vm_insert_range
Message-ID: <20181219093230.GS26090@n2100.armlinux.org.uk>
References: <20181217202334.GA11758@jordon-HP-15-Notebook-PC>
 <20181218095709.GJ26090@n2100.armlinux.org.uk>
 <CAFqt6zaVU-Fme6fErieBfBKwAm9xHUa7cXTOfqzwUJR__0JysQ@mail.gmail.com>
 <20181218123318.GN26090@n2100.armlinux.org.uk>
 <CAFqt6zbqaS-pFETyjRR2-1V57MiJuX65xoMjgkr-DjUnrJYzSg@mail.gmail.com>
 <20181218130146.GO26090@n2100.armlinux.org.uk>
 <CAFqt6zYnn76OdprSvA2Bj0v=xQqtJ6xJse6+iB+-=u3WsEv3pA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAFqt6zYnn76OdprSvA2Bj0v=xQqtJ6xJse6+iB+-=u3WsEv3pA@mail.gmail.com>
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Dec 19, 2018 at 09:01:09AM +0530, Souptick Joarder wrote:
> On Tue, Dec 18, 2018 at 6:31 PM Russell King - ARM Linux
> <linux@armlinux.org.uk> wrote:
> >
> > On Tue, Dec 18, 2018 at 06:24:29PM +0530, Souptick Joarder wrote:
> > > On Tue, Dec 18, 2018 at 6:03 PM Russell King - ARM Linux
> > > <linux@armlinux.org.uk> wrote:
> > > >
> > > > On Tue, Dec 18, 2018 at 05:36:04PM +0530, Souptick Joarder wrote:
> > > > > On Tue, Dec 18, 2018 at 3:27 PM Russell King - ARM Linux
> > > > > <linux@armlinux.org.uk> wrote:
> > > > > > This looks like a change in behaviour.
> > > > > >
> > > > > > If user_count is zero, and offset is zero, then we pass into
> > > > > > vm_insert_range() a page_count of zero, and vm_insert_range() does
> > > > > > nothing and returns zero.
> > > > > >
> > > > > > However, as we can see from the above code, the original behaviour
> > > > > > was to return -ENXIO in that case.
> > > > >
> > > > > I think these checks are not necessary. I am not sure if we get into mmap
> > > > > handlers of driver with user_count = 0.
> > > >
> > > > I'm not sure either, I'm just pointing out the change of behaviour.
> > >
> > > Ok. I think feedback from Heiko might be helpful here :)
> > >
> > > >
> > > > > > The other thing that I'm wondering is that if (eg) count is 8 (the
> > > > > > object is 8 pages), offset is 2, and the user requests mapping 6
> > > > > > pages (user_count = 6), then we call vm_insert_range() with a
> > > > > > pages of rk_obj->pages + 2, and a pages_count of 6 - 2 = 4. So we
> > > > > > end up inserting four pages.
> > > > >
> > > > > Considering the scenario, user_count will remain 8 (user_count =
> > > > > vma_pages(vma) ). ? No ?
> > > > > Then we call vm_insert_range() with a pages of rk_obj->pages + 2, and
> > > > > a pages_count
> > > > > of 8 - 2 = 6. So we end up inserting 6 pages.
> > > > >
> > > > > Please correct me if I am wrong.
> > > >
> > > > vma_pages(vma) is the number of pages that the user requested, it is
> > > > the difference between vma->vm_end and vma->vm_start in pages.  As I
> > > > said above, "the user requests mapping 6 pages", so vma_pages() will
> > > > be 6, and so user_count will also be 6.  You are passing
> > > > user_count - offset into vm_insert_range(), which will be 6 - 2 = 4
> > > > in my example.  This is two pages short of what the user requested.
> > > >
> > >
> > > So, this should be the correct behavior.
> > >
> > >                  return vm_insert_range(vma, vma->vm_start,
> > > rk_obj->pages + offset,
> > >                                                           user_count);
> >
> > ... and by doing so, you're introducing another instance of the same
> > bug I pointed out in patch 2.
> 
> Sorry but didn't get it ? How it will be similar to the bug pointed
> out in patch 2 ?

Towards the top of this function, you have:

        unsigned long user_count = vma_pages(vma);

So what you are proposing does:

        return vm_insert_range(vma, vma->vm_start, rk_obj->pages + offset,
                               vma_pages(vma));

Now if we look inside vm_insert_range():

+int vm_insert_range(struct vm_area_struct *vma, unsigned long addr,
+                       struct page **pages, unsigned long page_count)
+{
+       unsigned long uaddr = addr;
+       int ret = 0, i;
+
+       if (page_count > vma_pages(vma))
+               return -ENXIO;
+
+       for (i = 0; i < page_count; i++) {
+               ret = vm_insert_page(vma, uaddr, pages[i]);
+               if (ret < 0)
+                       return ret;
+               uaddr += PAGE_SIZE;
+       }

So, page_count _is_ vma_pages(vma).  So this code does these operations:

	if (vma_pages(vma) > vma_pages(vma))
		return -ENXIO;

This will always be false.  I've already stated in my reply to patch 2
in paragraph 3 about the uselessness of this test.

	for (i = 0; i < vma_pages(vma); i++) {
		ret = vm_insert_page(vma, uaddr, pages[i]);

So the loop will iterate over the number of pages that the user requested.

Now, taking another example.  The object is again 8 pages long, so
indexes 0 through 7 in its page array are valid.  The user requests
8 pages at offset 2 into the object.  Also as already stated in
paragraph 3 of my reply to patch 2.

vma_pages(vma) is 8.  offset = 2.

So we end up _inside_ vm_insert_range() with:

	if (8 > 8)
		return -ENXIO;

As stated, always false.

	for (i = 0; i < 8; i++) {
		ret = vm_insert_page(vma, vaddr, rk_obj->pages[2 + i]);

Which means we iterate over rk_obj->pages indicies from 2 through 9
inclusive.

Since only 0 through 7 are valid, we have walked off the end of the
array, and attempted to map an invalid struct page pointer - we could
be lucky, and it could point at some struct page (potentially causing
us to map some sensitive page - maybe containing your bank details or
root password... Or it could oops the kernel.

-- 
RMK's Patch system: http://www.armlinux.org.uk/developer/patches/
FTTC broadband for 0.8mile line in suburbia: sync at 12.1Mbps down 622kbps up
According to speedtest.net: 11.9Mbps down 500kbps up
