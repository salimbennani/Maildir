Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:40:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 70AE35803DC
	for <like.xu@linux.intel.com>; Tue, 11 Dec 2018 17:33:04 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 17:33:03 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AQcJ2ahckNtkv+XKRWQSNboyrlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc26YBGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBDOQBMulEoIbgpVQBowawBRGuCe3txTJEm3H70bEk3OQ6CgzGwBAsEsgSvH?=
 =?us-ascii?q?jIttj5KqEfWv21wqnSyjXDautb1zjg54jVaB8hu+yDXbVtesTT00YgDADFjlKL?=
 =?us-ascii?q?qYz5IjiY0foCs2iB4OV7VuKvjHUnqx1qrzi12Mgjl4nJiZgJylze6Sp5x4M1KM?=
 =?us-ascii?q?S+RUVmb9CkF55QuDubN4twWs4iRntnuCc+yrEfo5G7ZjQFyJQmxx7BdfOLaZSH?=
 =?us-ascii?q?4hXmVOuXPDx2h2pldaqhixqu8kWs0PDwWtS33VpQsCZInNnBumoQ2xHR8sSLVO?=
 =?us-ascii?q?dx80O71TqS2Q3f9PtILV03mKfVMZIt3L09m5wOukrZBCD2gl/5jKqOe0Uk5Oeo?=
 =?us-ascii?q?7+Pnb63ipp+dLI90lhr+Pr4hmsy5HOQ0KA8OX3KU+eik1b3j+1P2QKlSg/Eojq?=
 =?us-ascii?q?XUs4rWKdkGqqO6GQNZzIgu5halAzu70tkUhXwHI0hEeBKDgYjpIVbOIPXgAPem?=
 =?us-ascii?q?nVuslSpry+nbMbL/HJXCMHzDnK76crZ69k5czhY8ws5E555TDrEBIfHzVVHruN?=
 =?us-ascii?q?3XEx80Kwi0w+fhCNVg2YISQ2OPAqmFMKzMtV+E/P4gI+6JZIIOvjb9LP4l5/Ho?=
 =?us-ascii?q?jX8kg1MderOp3ZQPZHCiAvtmO1mZYWbrgtoZFWcKvwk+Q/LwhFyNTD5efHKyX6?=
 =?us-ascii?q?M65jEmB4OqF4bDRoaxgLOf2Ce3BIFZZmdDCgPELHHzao/RW+sQcDnAZYhlkycY?=
 =?us-ascii?q?Tv6nTIku0wzosxX1jL9uL+7R8ytfsor/1d9z/KrKmBQvsDB5EcmZgFyLVHx+y2?=
 =?us-ascii?q?YBRjsq2/JmrElgj1uOz6V8xuZVDMFe/O9hVAA8OpjBietgBIfpRwjDc9yVHUug?=
 =?us-ascii?q?WcisGjorT9g8kOMJNnl0GtOvlFjP2DHiOLYTi7uQTLkz6anc0mTtLo4p1H/H0q?=
 =?us-ascii?q?Q7lFwOWMZDNWS6wKV48l6AKZTOlhC0m7ujb6gblA7E/mSE1nbG6ExYWQRzVr7Z?=
 =?us-ascii?q?dWoSakvfsZLy4UaUHOzmMqguLgYUkZ3KEaBNcNC8yAweHPo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAhZBBcmBHrdtBlGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYEWE4wUX4szgg18llYUgV8UGAsJhy4?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCXAECAwECJBMMC?=
 =?us-ascii?q?ikDAwECBgEBChgJHQgDAQsFSRMFgxwBggEBBAqmeTOKMIw7F4FAP4ERgl01gx4?=
 =?us-ascii?q?DgSUEFwEBBgKFcQKJF4YokGdVCYcJij0jiWaHWpkzgUaCDjMaCBsVO4JsCYIeF?=
 =?us-ascii?q?xKDOIprKTEBAYEFHId7DxcwgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAhZBBcmBHrdtBlGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYEWE4wUX4szgg18llYUgV8UGAsJhy4iNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCXAECAwECJBMMCikDAwECBgEBChg?=
 =?us-ascii?q?JHQgDAQsFSRMFgxwBggEBBAqmeTOKMIw7F4FAP4ERgl01gx4DgSUEFwEBBgKFc?=
 =?us-ascii?q?QKJF4YokGdVCYcJij0jiWaHWpkzgUaCDjMaCBsVO4JsCYIeFxKDOIprKTEBAYE?=
 =?us-ascii?q?FHId7DxcwgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="44586762"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 11 Dec 2018 17:33:02 -0800
Received: from localhost ([::1]:42199 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWtOY-00028O-Be
	for like.xu@linux.intel.com; Tue, 11 Dec 2018 20:33:02 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:50307)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gWtOF-0001xG-U9
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 20:32:47 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gWtOB-0001rn-FB
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 20:32:43 -0500
Received: from mx1.redhat.com ([209.132.183.28]:42844)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>) id 1gWtOB-0001mn-3M
	for qemu-devel@nongnu.org; Tue, 11 Dec 2018 20:32:39 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 3C047C049D4B;
	Wed, 12 Dec 2018 01:32:27 +0000 (UTC)
Received: from localhost (ovpn-116-63.gru2.redhat.com [10.97.116.63])
	by smtp.corp.redhat.com (Postfix) with ESMTP id A2E965E7C8;
	Wed, 12 Dec 2018 01:32:24 +0000 (UTC)
Date: Tue, 11 Dec 2018 23:32:22 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: Wainer dos Santos Moschetta <wainersm@redhat.com>
Message-ID: <20181212013222.GQ7141@habkost.net>
References: <20181211162846.31149-1-wainersm@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181211162846.31149-1-wainersm@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Wed, 12 Dec 2018 01:32:27 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v2] target/i386: Fixes to the check missing
 features routine
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: crosa@redhat.com, qemu-devel@nongnu.org, ccarrara@redhat.com,
	pbonzini@redhat.com, rth@twiddle.net
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Dec 11, 2018 at 11:28:46AM -0500, Wainer dos Santos Moschetta wrote:
> The x86_cpu_class_check_missing_features() returns a list
> of unavailable features compared to the host CPU. Currently it may
> return empty strings for unnamed features as well as duplicated
> names.
> 
> For example, the qmp "query-cpu-definitions" below shows one empty
> string and repeated "mpx" entries:
> 
> (...)
> {"execute": "query-cpu-definitions"}
> (...)
>         {
>             "name": "Cascadelake-Server",
>             "typename": "Cascadelake-Server-x86_64-cpu",
>             "unavailable-features": [
>                 "hle",
>                 "rtm",
>                 "mpx",
>                 "avx512f",
>                 "avx512dq",
>                 "rdseed",
>                 "adx",
>                 "smap",
>                 "clflushopt",
>                 "clwb",
>                 "intel-pt",
>                 "avx512cd",
>                 "avx512bw",
>                 "avx512vl",
>                 "pku",
>                 "",

I just noticed one thing: we probably want to find out the cause
of this empty entry, instead of ignoring it in the code.  Named
CPU models must only refer to named CPU features.

I think this is caused by CPUID_7_0_ECX_OSPKE, I will
investigate.  But this doesn't make your patch incorrect.


>                 "avx512vnni",
>                 "spec-ctrl",
>                 "ssbd",
>                 "3dnowprefetch",
>                 "xsavec",
>                 "xgetbv1",
>                 "mpx",
>                 "mpx",
>                 "avx512f",
>                 "avx512f",
>                 "avx512f",
>                 "pku"
>             ],
> (...)
> 
> Signed-off-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
> Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>
> Reviewed-by: Eric Blake <eblake@redhat.com>
> Reviewed-by: Caio Carrara <ccarrara@redhat.com>
> ---
> v2:
>  * Fixed typos. [eblake]
>  * Removed unwanted manual test case. [ccarrara, ehabkost]
>  * Not passing 'accel=kvm' on test's VM. [ehabkost]
>  * Removed unneeded g_strdup() call. [ehabkost]
>  * Formatted comment according to QEMU's coding style. [ehabkost]
> 
> v1: https://www.mail-archive.com/qemu-devel@nongnu.org/msg579404.html
> ---
>  target/i386/cpu.c                   | 11 ++++++++-
>  tests/acceptance/cpu_definitions.py | 35 +++++++++++++++++++++++++++++
>  2 files changed, 45 insertions(+), 1 deletion(-)
>  create mode 100644 tests/acceptance/cpu_definitions.py
> 
> diff --git a/target/i386/cpu.c b/target/i386/cpu.c
> index f81d35e1f9..014b91e608 100644
> --- a/target/i386/cpu.c
> +++ b/target/i386/cpu.c
> @@ -3615,19 +3615,28 @@ static void x86_cpu_class_check_missing_features(X86CPUClass *xcc,
>  
>      x86_cpu_filter_features(xc);
>  
> +    /* Auxiliary dictionary to avoid duplicate entries in the list. */
> +    QDict *unique_feats_dict = qdict_new();
> +
>      for (w = 0; w < FEATURE_WORDS; w++) {
>          uint32_t filtered = xc->filtered_features[w];
>          int i;
>          for (i = 0; i < 32; i++) {
>              if (filtered & (1UL << i)) {
> +                const char *fname = x86_cpu_feature_name(w, i);
> +                if (!fname || qdict_haskey(unique_feats_dict, fname)) {
> +                    continue;
> +                }
>                  strList *new = g_new0(strList, 1);

I like mixed declarations, but unfortunately they are not allowed
by CODING_STYLE:

	5. Declarations

	Mixed declarations (interleaving statements and declarations within
	blocks) are generally not allowed; declarations should be at the beginning
	of blocks.


The logic now looks good, though.

> -                new->value = g_strdup(x86_cpu_feature_name(w, i));
> +                new->value = g_strdup(fname);
>                  *next = new;
>                  next = &new->next;
> +                qdict_put_null(unique_feats_dict, new->value);
>              }
>          }
>      }
>  
> +    g_free(unique_feats_dict);
>      object_unref(OBJECT(xc));
>  }
>  
> diff --git a/tests/acceptance/cpu_definitions.py b/tests/acceptance/cpu_definitions.py
> new file mode 100644
> index 0000000000..4edad86799
> --- /dev/null
> +++ b/tests/acceptance/cpu_definitions.py
> @@ -0,0 +1,35 @@
> +# CPU definitions tests.
> +#
> +# Copyright (c) 2018 Red Hat, Inc.
> +#
> +# Author:
> +#  Wainer dos Santos Moschetta <wainersm@redhat.com>
> +#
> +# This work is licensed under the terms of the GNU GPL, version 2 or
> +# later.  See the COPYING file in the top-level directory.
> +
> +from avocado import skip
> +from avocado_qemu import Test
> +
> +
> +class CPUDefinitions(Test):
> +    """
> +    Tests for the CPU definitions.
> +
> +    :avocado: enable
> +    :avocado: tags=x86_64
> +    """
> +    def test_unavailable_features(self):
> +        self.vm.add_args("-machine", "q35")

I thought the explicit -machine option was here only because of
the old accel=kvm option, and the whole line would be removed.
Why do you need to explicitly ask for a Q35 machine to test this?


> +        self.vm.launch()
> +        cpu_definitions = self.vm.command('query-cpu-definitions')
> +        self.assertTrue(len(cpu_definitions) > 0)
> +        for cpu_model in cpu_definitions:
> +            name = cpu_model.get('name')
> +            unavailable_features = cpu_model.get('unavailable-features')
> +
> +            self.assertNotIn("", unavailable_features,
> +                             name + " has unamed feature")

"unnamed"

> +            self.assertEqual(len(unavailable_features),
> +                             len(set(unavailable_features)),
> +                             name + " has duplicate feature")
> -- 
> 2.19.1
> 

-- 
Eduardo

