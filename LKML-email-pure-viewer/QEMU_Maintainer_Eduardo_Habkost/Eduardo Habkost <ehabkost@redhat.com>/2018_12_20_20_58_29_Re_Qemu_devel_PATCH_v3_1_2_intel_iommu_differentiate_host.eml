Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:42:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 819B258050C
	for <like.xu@linux.intel.com>; Thu, 20 Dec 2018 12:59:09 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 12:59:09 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Ag7DKchfVgJY/gFaNVKNXMNtJlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcWyZx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUMAeoOMvpXoJT/qFQAsBW+HQuhCuHgxzNViHL6wbM10/86HAHawAAtBc4CvG?=
 =?us-ascii?q?jOodnrMqoZTOC7zLPPzTXGd/5Y1iry6JXSfRA7vP6MWq97f8jLxkY0FAPFiU6Q?=
 =?us-ascii?q?qZD4ND6SyOsNs3KU4PFjVeKokG4ntxp8oiKxycgxionGnJ4VxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N4b968CJZcqT2WOohsTs8/Xm1luzw2xqMItJO7ZiQG1ZYqywbBZ/Cbd4WE?=
 =?us-ascii?q?+A/vWeiPLTtimX5oe7yyiwys/UWjzOD3S9O630xQriVfl9nBrnAN2ALX6siAUv?=
 =?us-ascii?q?Z9+kah2S2T1wDI8O1ELkY0lbfBJ54m2L4wmYIfsUXFHiDohEX7lLGaelkn9+Sy?=
 =?us-ascii?q?9ujrf7brqoWCO4J6igzyKLkil86nDeQ9KAcOXmyb+eqm1L3k+E30WKxKgeMzkq?=
 =?us-ascii?q?nEqZzVONoUprCnDA9Ry4os8BG/Dyqg0NsEg3YHN1VJeBaGj4jqJV7COv/5Deqn?=
 =?us-ascii?q?jlSokTdrwe3GP7L7DpXMKHjDjKnufbJn50FAzwozyMtS55RTCrEHL/LzXFLxuM?=
 =?us-ascii?q?bfDh8jPAy42/znB8ll1oMCRWKPBbeUMKfTsV+L+O0jOeaNZJIOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZCmkv9EaDG1fvhYiVPe4zxqGUCVPfDC0WK?=
 =?us-ascii?q?Qz4Cx9D5ipSoLKR4SoibrG2z+nH5pQfSdfB1WRVHvlaYiACMoKcz+Yd8pokzgY?=
 =?us-ascii?q?Uuq4Roo8kB2jqgL+jqBqN/fZ4TEws5Xl295ooerJmkYp6DZ2As+BhnyLVHx+hW?=
 =?us-ascii?q?gSRjU7j5x49H1ggmWD2K53y6hJCJpYoeFJWwE1HZrdyfFqTdH0Rg/FONyOTQD1?=
 =?us-ascii?q?bM+hBGQcQs842dMJK2Z0EdallQyLiyeqCrUWkKeXLIY5/qLVwz76IMMrmCWO77?=
 =?us-ascii?q?Uok1RzGpgHDmahnKMqslGLX4M=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AKAAAnAhxchxHrdtBkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUgUBAQELAYEwgmKMdYsdgg2XXRSBXxUYFIcuIjUIDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCBsOL4I2BQIDGgEGglwBAgMBAiQTDAopAwMBAgYBAQoYCRoDCAMBC?=
 =?us-ascii?q?wVJEwWDHYICAQSoajOKKYw/F4FAP4ERgxKEOy+FdgKJJ4IblXsJkVkkiXiHZZo?=
 =?us-ascii?q?NgUcBggwzGggbFYMngicXEo4jKTEBAYEFHIsGR4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AKAAAnAhxchxHrdtBkGwEBAQEDAQEBBwMBAQGBUgUBAQE?=
 =?us-ascii?q?LAYEwgmKMdYsdgg2XXRSBXxUYFIcuIjUIDQEDAQEBAQEBAgETAQEBCgsJCBsOL?=
 =?us-ascii?q?4I2BQIDGgEGglwBAgMBAiQTDAopAwMBAgYBAQoYCRoDCAMBCwVJEwWDHYICAQS?=
 =?us-ascii?q?oajOKKYw/F4FAP4ERgxKEOy+FdgKJJ4IblXsJkVkkiXiHZZoNgUcBggwzGggbF?=
 =?us-ascii?q?YMngicXEo4jKTEBAYEFHIsGR4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,378,1539673200"; 
   d="scan'208";a="57759944"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 20 Dec 2018 12:59:08 -0800
Received: from localhost ([::1]:39828 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1ga5PP-0006ys-Ra
	for like.xu@linux.intel.com; Thu, 20 Dec 2018 15:59:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:40752)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1ga5Oy-0006xi-97
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 15:58:40 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1ga5Ov-0006S5-3B
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 15:58:40 -0500
Received: from mx1.redhat.com ([209.132.183.28]:40746)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>) id 1ga5Ou-0006RC-Qw
	for qemu-devel@nongnu.org; Thu, 20 Dec 2018 15:58:37 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 2400CC0495B7;
	Thu, 20 Dec 2018 20:58:36 +0000 (UTC)
Received: from localhost (ovpn-116-63.gru2.redhat.com [10.97.116.63])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 811FF4138;
	Thu, 20 Dec 2018 20:58:31 +0000 (UTC)
Date: Thu, 20 Dec 2018 18:58:29 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: Yu Zhang <yu.c.zhang@linux.intel.com>
Message-ID: <20181220205829.GQ19442@habkost.net>
References: <1544619939-18102-1-git-send-email-yu.c.zhang@linux.intel.com>
	<1544619939-18102-2-git-send-email-yu.c.zhang@linux.intel.com>
	<20181217141740.16ccfaa1@Igors-MacBook-Pro.local>
	<20181218092723.yhaerzm4vlzgef65@linux.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181218092723.yhaerzm4vlzgef65@linux.intel.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Thu, 20 Dec 2018 20:58:36 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v3 1/2] intel-iommu: differentiate host
 address width from IOVA address width.
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Michael S. Tsirkin" <mst@redhat.com>, qemu-devel@nongnu.org,
	Peter Xu <peterx@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>,
	Igor Mammedov <imammedo@redhat.com>, Richard Henderson <rth@twiddle.net>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Dec 18, 2018 at 05:27:23PM +0800, Yu Zhang wrote:
> On Mon, Dec 17, 2018 at 02:17:40PM +0100, Igor Mammedov wrote:
> > On Wed, 12 Dec 2018 21:05:38 +0800
> > Yu Zhang <yu.c.zhang@linux.intel.com> wrote:
> > 
> > > Currently, vIOMMU is using the value of IOVA address width, instead of
> > > the host address width(HAW) to calculate the number of reserved bits in
> > > data structures such as root entries, context entries, and entries of
> > > DMA paging structures etc.
> > > 
> > > However values of IOVA address width and of the HAW may not equal. For
> > > example, a 48-bit IOVA can only be mapped to host addresses no wider than
> > > 46 bits. Using 48, instead of 46 to calculate the reserved bit may result
> > > in an invalid IOVA being accepted.
> > > 
> > > To fix this, a new field - haw_bits is introduced in struct IntelIOMMUState,
> > > whose value is initialized based on the maximum physical address set to
> > > guest CPU.
> > 
> > > Also, definitions such as VTD_HOST_AW_39/48BIT etc. are renamed
> > > to clarify.
> > > 
> > > Signed-off-by: Yu Zhang <yu.c.zhang@linux.intel.com>
> > > Reviewed-by: Peter Xu <peterx@redhat.com>
> > > ---
> > [...]
> > 
> > > @@ -3100,6 +3104,8 @@ static void vtd_iommu_replay(IOMMUMemoryRegion *iommu_mr, IOMMUNotifier *n)
> > >  static void vtd_init(IntelIOMMUState *s)
> > >  {
> > >      X86IOMMUState *x86_iommu = X86_IOMMU_DEVICE(s);
> > > +    CPUState *cs = first_cpu;
> > > +    X86CPU *cpu = X86_CPU(cs);
> > >  
> > >      memset(s->csr, 0, DMAR_REG_SIZE);
> > >      memset(s->wmask, 0, DMAR_REG_SIZE);
> > > @@ -3119,23 +3125,24 @@ static void vtd_init(IntelIOMMUState *s)
> > >      s->cap = VTD_CAP_FRO | VTD_CAP_NFR | VTD_CAP_ND |
> > >               VTD_CAP_MAMV | VTD_CAP_PSI | VTD_CAP_SLLPS |
> > >               VTD_CAP_SAGAW_39bit | VTD_CAP_MGAW(s->aw_bits);
> > > -    if (s->aw_bits == VTD_HOST_AW_48BIT) {
> > > +    if (s->aw_bits == VTD_AW_48BIT) {
> > >          s->cap |= VTD_CAP_SAGAW_48bit;
> > >      }
> > >      s->ecap = VTD_ECAP_QI | VTD_ECAP_IRO;
> > > +    s->haw_bits = cpu->phys_bits;
> > Is it possible to avoid accessing CPU fields directly or cpu altogether
> > and set phys_bits when iommu is created?
> 
> Thanks for your comments, Igor.
> 
> Well, I guess you prefer not to query the CPU capabilities while deciding
> the vIOMMU features. But to me, they are not that irrelevant.:)
> 
> Here the hardware address width in vt-d, and the one in cpuid.MAXPHYSADDR
> are referring to the same concept. In VM, both are the maximum guest physical
> address width. If we do not check the CPU field here, we will still have to
> check the CPU field in other places such as build_dmar_q35(), and reset the
> s->haw_bits again.
> 
> Is this explanation convincing enough? :)
> 
> > 
> > Perhaps Eduardo
> >  can suggest better approach, since he's more familiar with phys_bits topic
> 
> @Eduardo, any comments? Thanks!

Configuring IOMMU phys-bits automatically depending on the
configured CPU is OK, but accessing first_cpu directly in iommu
code is.  I suggest delegating this to the machine object, e.g.:

  uint32_t pc_max_phys_bits(PCMachineState *pcms)
  {
      return object_property_get_uint(OBJECT(first_cpu), "phys-bits", &error_abort);
  }

as the machine itself is responsible for creating the CPU
objects, and I believe there are other places in PC code where we
do physical address calculations that could be affected by the
physical address space size.

-- 
Eduardo

