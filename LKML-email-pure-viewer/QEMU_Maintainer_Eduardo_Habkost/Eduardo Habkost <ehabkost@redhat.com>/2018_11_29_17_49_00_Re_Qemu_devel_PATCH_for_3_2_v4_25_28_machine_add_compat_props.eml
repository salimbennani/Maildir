Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:49:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4113E5802E4
	for <like.xu@linux.intel.com>; Thu, 29 Nov 2018 09:49:56 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga005-1.fm.intel.com with ESMTP; 29 Nov 2018 09:49:55 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A1BeOahKEXnV6+PeTM9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgfI/nxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPAY28?=
 =?us-ascii?q?YIQTAOUcP+lXoYbzqUYWrRa8BwehC/7jxzFUinDoxq03yPghERjc0QA8A94Dqm?=
 =?us-ascii?q?nYodPoP6kSS+C1y6zIwC3MYfxLxDfy8pLIfQ0mofqRX7x/a9HeyUooFwPeklWb?=
 =?us-ascii?q?tIvoMC2V1usXqGeb7O1gVfmzi2M8sQF+vCWgxsc2hYnVnI4a1lfE9SBgzYszON?=
 =?us-ascii?q?a2S1Z7bMa6HJdMtCyWLZZ6Tt4hTm1ypio3xL0LtYSmcCUI0Jgr2QLTZvidf4SV?=
 =?us-ascii?q?7B/vSvydLSp7iX9rYr6zmRW//E69wePmTMa0ykxFri9dn9nMqH8N0xvT59CDSv?=
 =?us-ascii?q?t85UehxS2P2xrc6uFCPEA4j63bK4QuwrIol5oTt1rMHjPulUnokKObdV8o9vW1?=
 =?us-ascii?q?5+nkeLnquJGROo9uhg3jMKkigsm/Dv45MggKUWib4+O81Lj78E3gXrpKi+A2nr?=
 =?us-ascii?q?DEv5/EO8QUuKq5DxZO3YYk9ha/CSup38oDnXUAKFJFeRGHgJbzN1DBPfD1FfO/?=
 =?us-ascii?q?g1WqkDd2yPHKJLzhApPRLnfdlLftZ6py60lZyAcoy9Bf4JRUCr4HIPLuQEPxs8?=
 =?us-ascii?q?bYDhAhPwyu3+nnEMl91p8ZWW+XBq+ZMaDSvkGS6uMgPumBf4sVuDf7K/g46P/i?=
 =?us-ascii?q?l345mVkBfaa32Zsbcmy3HvNjIxbRXHz3n91UEXsWphFsC6vuiUaeSnhVYHC9Wb?=
 =?us-ascii?q?964Ss0T4evDIPGT4bqh6Sd3SC9BdpPa2VbT1yBD3rsJLiCQOoGPSebI8t9lW4d?=
 =?us-ascii?q?WL28DoMsyxyq8RX30qdqNfb8/CoeupT+kt9v6LrIiBsw+DdoWtmbyHyHVGpun2?=
 =?us-ascii?q?kFFAMxiYV2u0c441GPyykwp+FCGNVOr6dMWx0xPJjQ1eE8D83oVwvcVs2ERFav?=
 =?us-ascii?q?XpOtBjRnHfwrxNpbTkpgEs+uiVjj1iCpBKQJ3+iGBJU+8aXHw1DrKsp9wmqA36?=
 =?us-ascii?q?4k2Qp1CvBTPHGr0/YsvzPYAJTExgDAz/6n?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAA4JgBchxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMCqCJROMEV+LKYINl0SBcRYYFId0IjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGglwBAgMBAiQfCikDAwECBgEBChgJH?=
 =?us-ascii?q?QgDAQsFSRMFgxyCAgEEp3Mzii2MFheBQD+EI4pcAqAjCZEnI4lYh0SYToFGgg0?=
 =?us-ascii?q?zGggbFYMngicXfwEMjSkpMYEHHIsngXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAAA4JgBchxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMCqCJROMEV+LKYINl0SBcRYYFId0IjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCBsOL4I2BQIDGgEGglwBAgMBAiQfCikDAwECBgEBChgJHQgDAQsFSRMFgxy?=
 =?us-ascii?q?CAgEEp3Mzii2MFheBQD+EI4pcAqAjCZEnI4lYh0SYToFGgg0zGggbFYMngicXf?=
 =?us-ascii?q?wEMjSkpMYEHHIsngXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="55411676"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 29 Nov 2018 09:49:36 -0800
Received: from localhost ([::1]:55549 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSQRT-0000pg-CL
	for like.xu@linux.intel.com; Thu, 29 Nov 2018 12:49:35 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58487)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gSQR3-0000ni-A0
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:49:10 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gSQR1-00074Z-3d
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:49:08 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38634)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>) id 1gSQR0-000746-TW
	for qemu-devel@nongnu.org; Thu, 29 Nov 2018 12:49:07 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id A12B2308219A
	for <qemu-devel@nongnu.org>; Thu, 29 Nov 2018 17:49:05 +0000 (UTC)
Received: from localhost (ovpn-116-21.gru2.redhat.com [10.97.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 31B28612A8;
	Thu, 29 Nov 2018 17:49:02 +0000 (UTC)
Date: Thu, 29 Nov 2018 15:49:00 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: =?iso-8859-1?Q?Marc-Andr=E9?= Lureau <marcandre.lureau@redhat.com>
Message-ID: <20181129174900.GP18284@habkost.net>
References: <20181127092801.21777-1-marcandre.lureau@redhat.com>
	<20181127092801.21777-26-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20181127092801.21777-26-marcandre.lureau@redhat.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.47]);
	Thu, 29 Nov 2018 17:49:05 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH for-3.2 v4 25/28] machine: add compat-props
 interface
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: imammedo@redhat.com, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Nov 27, 2018 at 01:27:58PM +0400, Marc-Andr=E9 Lureau wrote:
> Let's make compatiblity properties an interface, so that objects other
> than QDev can benefit from having machine compatiblity properties.
>=20
> Signed-off-by: Marc-Andr=E9 Lureau <marcandre.lureau@redhat.com>
[...]
> diff --git a/hw/core/qdev.c b/hw/core/qdev.c
> index 3b31b2c025..b0ee05f837 100644
> --- a/hw/core/qdev.c
> +++ b/hw/core/qdev.c
> @@ -970,28 +970,8 @@ static void device_initfn(Object *obj)
>      QLIST_INIT(&dev->gpios);
>  }
> =20
> -static const GPtrArray *ac_compat_props;
> -static const GPtrArray *mc_compat_props;
> -
> -void accel_register_compat_props(const GPtrArray *props)
> -{
> -    ac_compat_props =3D props;
> -}
> -
> -void machine_register_compat_props(const GPtrArray *props)
> -{
> -    mc_compat_props =3D props;
> -}
> -
>  static void device_post_init(Object *obj)
>  {
> -    if (ac_compat_props) {
> -        object_apply_global_props(obj, ac_compat_props, &error_abort);
> -    }
> -    if (mc_compat_props) {
> -        object_apply_global_props(obj, mc_compat_props, &error_abort);
> -    }
> -
>      qdev_prop_set_globals(DEVICE(obj));
>  }
> =20
> @@ -1124,6 +1104,10 @@ static const TypeInfo device_type_info =3D {
>      .class_init =3D device_class_init,
>      .abstract =3D true,
>      .class_size =3D sizeof(DeviceClass),
> +    .interfaces =3D (InterfaceInfo[]) {
> +        { TYPE_COMPAT_PROPS },
> +        { }
> +    }

At first I thought TYPE_COMPAT_PROPS was a practical way to
implement this feature, but now I'm worried: the ordering between
compat_props_post_init() qdev_prop_set_globals() is very
important (user-provided globals must always be set after compat
props), and here the ordering is implicit and easy to break
accidentally.

What if instead of a QOM interface we just provide a simple
object_apply_compat_props() function?  e.g.:

qdev.c:

  static void device_post_init(Object *obj)
  {
      object_apply_compat_props(obj);
      apply_user_provided_globals(obj);
  }

object_interface.c:

  void user_creatable_complete(Object *obj, Error **errp)
  {
      object_apply_compat_props(obj);
      ...
      ucc->complete(...)
  }

Most people don't understand QOM interfaces and their
initialization ordering rules.  Everybody understands C function
calls.

> [...]

--=20
Eduardo

