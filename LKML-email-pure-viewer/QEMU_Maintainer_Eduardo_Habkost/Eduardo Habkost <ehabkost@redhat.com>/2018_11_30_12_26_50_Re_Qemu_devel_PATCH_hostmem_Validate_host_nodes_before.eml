Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:17:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D461C580224
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 04:27:10 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 04:27:10 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AC47b8hz/4hxWURvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uIVIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWS9PAoyz?=
 =?us-ascii?q?c4QAEugOMuhFoYnlpVYArxSzCRSiCe/z1DBInWT73bEm3+k7DQ3KwBYtE8wIvX?=
 =?us-ascii?q?/JrNv1LqASUeWtwafH0DrDculZ2S3g54jPbxsvo+uDUqlzccrW0kkvCx7Og1KO?=
 =?us-ascii?q?pozlJTyazecNs2+A7+p8Tu+vkXAopBxxoje12scgkJXGhoUQyl3d8yhy3YU7Jc?=
 =?us-ascii?q?WgRUJlfdKpE4FcuzyHO4Z1WM8uXW9ltSYgxrEbu5O3ZDYGxIgjyhLFdvCKfZaE?=
 =?us-ascii?q?7gj+WOuSLzp0nmxpdbG5ih2v60av0Pf8WdOx0FtSripKjN3MtncV2hzX68iHUe?=
 =?us-ascii?q?d9/ly71TaA0QDT9/tIIUcularUM5Ihw7gwmYQPsUnbACP6hEb7gLWLekk5+eWk?=
 =?us-ascii?q?8frrb7vmq5OGKoN5iBnyMqE0lcy+BeQ4PBIOX2+e+emkzb3s40j5QKhTgvIrjK?=
 =?us-ascii?q?bZro7VJcACqqGiBA9Vz4Aj5AqhADe919gYmXgHLFFbdx6dgInpJknDIPT5Dfe5?=
 =?us-ascii?q?nlStny1nx/HAPr39HJrNKmLPn6vmfbZ48ENczg0zzdZQ55JSF7ENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9TbxbJV6Eay/snssZCjVN+Q4/V/DxzluFVzFVejC1Ra?=
 =?us-ascii?q?174zg6DIevC8DEXpysh7qamz62G4ATam1YB1TfLHHzao/RXv4NbD6VcNZslyFB?=
 =?us-ascii?q?WbW/Rotkzxy3qQLh15JhKezb/DBesojsg8No7e/eng1n6DpvEs6G2HuMRWwnom?=
 =?us-ascii?q?RdYjYs371k6WVnz12ZzLNkjuYQQdVJ4vlTTy8gOJLcxvA8ANf3DFHvZNCMHXuq?=
 =?us-ascii?q?X9y8DTZ5bts7wNgVfw4pFtWrhBPExDaCGbIZl7WXQpcz9/SPjDDKO89hxiOeh+?=
 =?us-ascii?q?EahF48T54KbDX+iw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADvKwFchxHrdtBjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgTCBOYEWE4wRX4spgg2XSBSBXxQYBw2HdSI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECJBMMC?=
 =?us-ascii?q?ikDAwECBgEBCg4KCR0IAwELBUkTBYMcAYF5CAEEp1Mzii2MGxeBQD+BEYMShEY?=
 =?us-ascii?q?Vg1uCJgKPKYYuiloJhn+KLSOJWYdGmFqBRoINMxoIGxU7gmwJi2SFBikxgQcci?=
 =?us-ascii?q?zMBJAcpgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAADvKwFchxHrdtBjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgTCBOYEWE4wRX4spgg2XSBSBXxQYBw2HdSI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECJBMMCikDAwECBgEBCg4?=
 =?us-ascii?q?KCR0IAwELBUkTBYMcAYF5CAEEp1Mzii2MGxeBQD+BEYMShEYVg1uCJgKPKYYui?=
 =?us-ascii?q?loJhn+KLSOJWYdGmFqBRoINMxoIGxU7gmwJi2SFBikxgQccizMBJAcpgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="53310479"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 04:27:10 -0800
Received: from localhost ([::1]:59617 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gShsz-0004oD-F8
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 07:27:09 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54379)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gShsp-0004nx-Tb
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 07:27:00 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <ehabkost@redhat.com>) id 1gShsm-00066u-L8
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 07:26:59 -0500
Received: from mx1.redhat.com ([209.132.183.28]:47956)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <ehabkost@redhat.com>) id 1gShsm-00066f-D4
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 07:26:56 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id AADF83D96D
	for <qemu-devel@nongnu.org>; Fri, 30 Nov 2018 12:26:55 +0000 (UTC)
Received: from localhost (ovpn-116-21.gru2.redhat.com [10.97.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id DE5D51054FD4;
	Fri, 30 Nov 2018 12:26:51 +0000 (UTC)
Date: Fri, 30 Nov 2018 10:26:50 -0200
From: Eduardo Habkost <ehabkost@redhat.com>
To: Markus Armbruster <armbru@redhat.com>
Message-ID: <20181130122650.GE18284@habkost.net>
References: <20181129185754.7009-1-ehabkost@redhat.com>
	<874lbzneoy.fsf@dusky.pond.sub.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <874lbzneoy.fsf@dusky.pond.sub.org>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Fri, 30 Nov 2018 12:26:55 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH] hostmem: Validate host-nodes before
 setting bitmap
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Igor Mammedov <imammedo@redhat.com>, qemu-devel@nongnu.org,
	David Hildenbrand <david@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, Nov 30, 2018 at 09:37:49AM +0100, Markus Armbruster wrote:
> Eduardo Habkost <ehabkost@redhat.com> writes:
> 
> > host_memory_backend_set_host_nodes() was not validating
> > host-nodes before writing to backend->host_nodes, making QEMU
> > write beyond the end of the bitmap.
> >
> > Fix the crash and add a simple regression test for the fix.
> >
> > Reported-by: Markus Armbruster <armbru@redhat.com>
> > Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
> > ---
> >  backends/hostmem.c                   | 13 +++++++---
> >  tests/acceptance/host-nodes-limit.py | 36 ++++++++++++++++++++++++++++
> >  2 files changed, 46 insertions(+), 3 deletions(-)
> >  create mode 100644 tests/acceptance/host-nodes-limit.py
> >
> > diff --git a/backends/hostmem.c b/backends/hostmem.c
> > index 1a89342039..ef199d32fd 100644
> > --- a/backends/hostmem.c
> > +++ b/backends/hostmem.c
> > @@ -103,11 +103,18 @@ host_memory_backend_set_host_nodes(Object *obj, Visitor *v, const char *name,
> >  {
> >  #ifdef CONFIG_NUMA
> >      HostMemoryBackend *backend = MEMORY_BACKEND(obj);
> > -    uint16List *l = NULL;
> > +    uint16List *l, *host_nodes = NULL;
> >  
> > -    visit_type_uint16List(v, name, &l, errp);
> > +    visit_type_uint16List(v, name, &host_nodes, errp);
> > +
> > +    for (l = host_nodes; l; l = l->next) {
> > +        if (l->value >= MAX_NODES) {
> > +            error_setg(errp, "Invalid host-nodes value: %d", l->value);
> > +            return;
> > +        }
> > +    }
> >  
> > -    while (l) {
> > +    for (l = host_nodes; l; l = l->next) {
> >          bitmap_set(backend->host_nodes, l->value, 1);
> >          l = l->next;
> >      }
> 
> Pre-existing: leaks the list created by visit_type_uint16List(), or am I
> confused?
> 
> host_memory_backend_set_host_nodes() looks like it leaks, too.  
> 
> The function to free such lists is qapi_free_uint16List().

Thanks, I will fix it in v2.


> 
> > diff --git a/tests/acceptance/host-nodes-limit.py b/tests/acceptance/host-nodes-limit.py
> > new file mode 100644
> > index 0000000000..e803e10104
> > --- /dev/null
> > +++ b/tests/acceptance/host-nodes-limit.py
> > @@ -0,0 +1,36 @@
> > +# Regression test for host-nodes limit validation
> > +#
> > +# Copyright (c) 2018 Red Hat, Inc.
> > +#
> > +# Author:
> > +#  Eduardo Habkost <ehabkost@redhat.com>
> > +#
> > +# This work is licensed under the terms of the GNU GPL, version 2 or
> > +# later.  See the COPYING file in the top-level directory.
> > +
> > +from avocado_qemu import Test
> > +from subprocess import Popen, PIPE
> > +
> > +MAX_NODES = 128
> > +
> > +class HostNodesValidation(Test):
> > +    def test_large_host_nodes(self):
> > +        p = Popen([self.qemu_bin, '-display', 'none', '-nodefaults',
> > +                   '-object', 'memory-backend-ram,id=m0,'
> > +                              'size=4096,host-nodes=%d' % (MAX_NODES)],
> > +                  stderr=PIPE, stdout=PIPE)
> > +        stdout,stderr = p.communicate()
> > +
> > +        self.assertIn(b'Invalid host-nodes', stderr)
> > +        self.assertEquals(stdout, b'')
> > +        self.assertEquals(p.returncode, 1)
> > +
> > +    def test_valid_host_nodes(self):
> > +        p = Popen([self.qemu_bin, '-display', 'none', '-nodefaults',
> > +                   '-object', 'memory-backend-ram,id=m0,'
> > +                              'size=4096,host-nodes=%d' % (MAX_NODES - 1)],
> > +                  stderr=PIPE, stdout=PIPE)
> > +        stdout,stderr = p.communicate()
> > +
> > +        self.assertIn(b'host-nodes must be empty', stderr)
> > +        self.assertEquals(p.returncode, 1)
> 
> Perhaps this test should become part of a more comprehensive
> menory-backend-ram test.

If such a test existed, yes.

> 
> Reviewed-by: Markus Armbruster <armbru@redhat.com>

Thanks!

(Although this version is broken due to the extra "l = l->next"
line and we need v2)

-- 
Eduardo

