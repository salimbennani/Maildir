Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:51:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 67A005805FC;
	Fri, 21 Dec 2018 07:22:27 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 07:22:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Am6sImR0TjDgZ5mPYsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segVLvrxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zict+g6BVoB2uqBJ/2JbUbYOOOfZifa7QZ88WSHBdUspNUSFKH4Oy?=
 =?us-ascii?q?b5EID+oEJetXs479qEYQohu9BAmsHPvvxSFShnLt0q061v4uEQDC3AA6A90Ot3?=
 =?us-ascii?q?HUodPoP6kRSeC41LfEwSnHYv9MxDvw5pbEfgo8rfyPQb58a8vcxEs3Gw7Bklmc?=
 =?us-ascii?q?s5HpMjyL2ugXvGWW4fBsWf+hhmMkrQx6vyKhyd02iobTg4IY0lDE+jt9wIYyPd?=
 =?us-ascii?q?C4VkF7bsC+EJdKtCGVKZF2QsU8TGFsoio6zacGuZGjcCgLzpQo2QLfZuSZf4SU?=
 =?us-ascii?q?5h/vTvudLDlmiH5/Zb6yhAq+/VKhx+D+TsW01UxFritBktnCrHAN0BnT59CDSv?=
 =?us-ascii?q?t8+EehxDmO2xnQ6u5aO0A0k7TUK5o4zr43mJsTt1rMHjXtlUXog6+ZaF8k9vKr?=
 =?us-ascii?q?6+v5eLXmoIGTN4tuhgH5KKQuldSzAf4kPQgWQ2ib5eO82aXn/U34Q7VFkOc6k6?=
 =?us-ascii?q?bEsJ3BIcQbp6i5AxJa04o56ha/CSum38ocnXUdMF1FfxeHhZDzO17SOPD4Eeu/?=
 =?us-ascii?q?g1O0nTdr3f/GP6HhDY/KLnTZkLfhYKxy60hTyAcoydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B93JsEWW2TGq+ZLL/SsViQ6+01OOmMZIgVuDXnJ/g//fHu?=
 =?us-ascii?q?j2Q0mVscfamvwJsWZ2q0HvVgI0WFf3Xshs0NHnsNvgo7VObqkkGNUSZPZ3auWK?=
 =?us-ascii?q?Ix/jI7B5igDYvZQoCtgaaO3CG0HpBNYmBGC1aMEWrndomeWvcMbj6SLdFlkjAe?=
 =?us-ascii?q?SbehTIoh3wm0tADm07pnMvbU+ioAuJ3+ztd1+fPcmQsy9TNuCcSdyH+CT2dzkm?=
 =?us-ascii?q?MMRD822aR/rFd5yleC16h4nvNZGcZS5/NPTgc1K5rcw/ZmBND1XwLLZs2JR0q+?=
 =?us-ascii?q?QtW6HTExSco8zMIUbEZjBdqulBDD0DCsA78OibOLAoc58qbd33j3OsZ8xGzK1K?=
 =?us-ascii?q?gnj1k6XMRPMXeqibJ49wjWH4TJiVmWl762daQA2y7A7HuDzWuLvEFfTA5wUaXE?=
 =?us-ascii?q?UWoDZkfMqtT5/EfCT76oCbQoKQZBzc+CKq1Xatzml1lGRfHjOMjAbGK1gWu/GR?=
 =?us-ascii?q?GIxraUZorwZ2odxDndCFQDkw0L53mGMRYxByi/rGPeFjBhDk/vbF72/ul4q3O7?=
 =?us-ascii?q?SVE0whqOb01g0bq15xEUieadS/MVwrILpiMhpy9oE1a62tLcE8CAqBZ5fKVAfd?=
 =?us-ascii?q?M9509K1GLEtwBnIpOsNaFjhl4EfARxsEPjzBF3CoRGkcg3o3Im1gtyKaSE0Fxf?=
 =?us-ascii?q?czOUx4z/OrrSKmPq5hCgd7bW2k3C0NaR4qoP8vU4pEn5swGzC0Ui9G9r099L3H?=
 =?us-ascii?q?uG55XGFRYdXoj1Ukkq6Rd6vbbaYi8m6oPQ1H1sN7S0szDY19IoAusl1givf9NF?=
 =?us-ascii?q?PKyYEw/yFtUQB9KyJ+wyh1ipchUEMfhS9a41Jc+nd+GK2LW2POZmhz+miWVH4I?=
 =?us-ascii?q?Zg0kOD7SZ8S+jI34obzPGcxAeISzD8jFK5uMDthY9EfS0SHna4ySX8Bo5efLdy?=
 =?us-ascii?q?fYUICWepOcG33c9xh53uW35Z8l6sGVUG1dSteRqTaVz9wAJR2V4WoXyhhSu30T?=
 =?us-ascii?q?h0nys1oaqY2SzE2/7iewYfOm5XWGliik/hIIiugNAdRkSobQkplB2+6Eb+xqhb?=
 =?us-ascii?q?orl/LmbJTUdJeSj2M39tUq+qurWeZM5P7YsisT9LX+SkfVCaVrn9rgMZ0yz5Hm?=
 =?us-ascii?q?tS3jA7dyywtZX/kBx3k2adLHd1rHrEdsB83xbf5NrARfFP2joKXjV3iT7SBlKk?=
 =?us-ascii?q?Jdmm4c2Ul4vfsuC5T2+hU5xTcSrxwo+auiq0+3ZqAQGhkPCpgdLoDxI60SDg2t?=
 =?us-ascii?q?luVCXIqgv8Y4bx26S7N+JnYldnBFvm58VmHYF+l5M6hIsM1ngCmpWV4X0HnH/v?=
 =?us-ascii?q?MdVc3KLydnsMSiQNw97I+wjlw0xjI2mNx4L4UHWd38Rga8O7YmMQxiIy8cRKBL?=
 =?us-ascii?q?2I47xDmCt/ukC4oh7JYfhhgjcdzuMj52UAjOEOvAot0z+RArQPHURDOSzslhKI?=
 =?us-ascii?q?782xralNZWavd6Sw21R6ndy7EL6CpQRcUm7jepg+BS9w8tl/MFXU3X3x8I7kfc?=
 =?us-ascii?q?ffbckJuh2IiRvAjPVVKJEslvoMnyVnInnwvXkky+49kBxv0ou2vImBK2Vx4q25?=
 =?us-ascii?q?BgRUOSHyZ8MW4jvtl7pRnt6K34CzGZVsAjUKXJz1TfKxDTIdr/LnOxyVED07rH?=
 =?us-ascii?q?ebFqHSHQue6EdgsnLOHIqnN3CRJHkF09piQAORK1BYgAARRD86hII2Fhi2xMz9?=
 =?us-ascii?q?d0d0/jAR6UD5qhtPyeJoNgPzUmTFpAevZTc7VoKfLAdN7gxZ40fVMMqe7v98Hi?=
 =?us-ascii?q?1C/52hqhCNJXKfZwhSEW4JXUmEDUj5Pray/dnA7/SYBu2mIvTUfLWBsvZeWOmI?=
 =?us-ascii?q?xJ611otm/i2BNsGOPnlkEv061VBPXXF/G8TFhToPTzYbmD7Kb86evB284DF4rt?=
 =?us-ascii?q?ij8PT3XwLi/ZePC7pXMdl15x+6m7uMN+6OiyZ/MjtY0pIMxXnVyLkQxlISiidu?=
 =?us-ascii?q?dyWzHrQEryLCUKXQmqpPBR4BdyxzLNdI77473gRVOc/UkNX11rt5jv4zE1hEVF?=
 =?us-ascii?q?zhlduvZcwFOGy9MFLHBECWNLWJPzHLwsf3Yb+iRr1UlulbqxqwuTPIW3PkazGK?=
 =?us-ascii?q?hzjsWla1MPlFli2zMgZTtcSwdhtmFXLkSsmgYRq+dJdogDst6bYvh36MMnQTdX?=
 =?us-ascii?q?B4ckVQvviL8CVIg91wHGtO6ndqN+6Zgz3f5O7debgMtv4+CSN4muFb+Gw30ZNa?=
 =?us-ascii?q?6ShFQLp+ny6B/ZZVv1i6n7zXmXJcWx1Up2MTiQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAADSBB1ch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYNrJ4wWX4sdgg0UiROOOIFzEwEBGBMBhzAiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjoigm8DAwECJAsBDQEbHQEDAgkBAQUQCjEDHgIRA?=
 =?us-ascii?q?QUBHAcSBYMdgWkBAxUEAZolPIwVFgUBF4J3BYEBg0AKGScNXhOBJAIGEodsgX2?=
 =?us-ascii?q?BKIEcF4F/gRGFaYgJAolLl0czCYZSh2SDJwwYiXqHZYlThhCKEgIEAgQFAgUPI?=
 =?us-ascii?q?YElgg5wgQGCO4Ibg22KVD8ygQQBAQE7jVQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AFAADSBB1ch0O0hNFjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYNrJ4wWX4sdgg0UiROOOIFzEwEBGBMBhzAiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjoigm8DAwECJAsBDQEbHQEDAgkBAQUQCjEDHgIRAQUBHAcSBYMdgWk?=
 =?us-ascii?q?BAxUEAZolPIwVFgUBF4J3BYEBg0AKGScNXhOBJAIGEodsgX2BKIEcF4F/gRGFa?=
 =?us-ascii?q?YgJAolLl0czCYZSh2SDJwwYiXqHZYlThhCKEgIEAgQFAgUPIYElgg5wgQGCO4I?=
 =?us-ascii?q?bg22KVD8ygQQBAQE7jVQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="45964582"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 07:22:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391000AbeLUPVZ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 10:21:25 -0500
Received: from mail-lf1-f66.google.com ([209.85.167.66]:46364 "EHLO
        mail-lf1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2390963AbeLUPVV (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 10:21:21 -0500
Received: by mail-lf1-f66.google.com with SMTP id f23so4147827lfc.13
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 07:21:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=H9okQAdEYSfawGP6mjgyyFINRwiA/ib6Xkeki24nmJg=;
        b=EeyA6+yDmgZ1SwNBwdBXl+2iF/ci0C1C3wJUvap/ilJFgjRTjOdBVzv74UyR6j+mVG
         YJrjXPTVtkw1VR0lIRYH5YdZKMzdpnGLo+Ke7bCuqAHCeofGo6qsI7jAouBwn4Pw4OYT
         Gpd/Bg0os72GzP7HtYnWLVwfu5AY3atSq+NAagM85NLNBQxo3Rxjp4mSQUvznhA/wAx4
         H3S5LS8q3mntPdOFoK1hHGok0QlATG2VvJpA65Ro2whYeRHJGVDQWVwNOwMM9bctZygc
         k6mj8ImnMUQ8p64pfoGcW57BpomJy2LkKELEKYC3h1dmcuZECgLi+S682jHCzZBq6xl4
         WSpA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=H9okQAdEYSfawGP6mjgyyFINRwiA/ib6Xkeki24nmJg=;
        b=UCOh5FLbgOi3lKFaSmb8OkIJ01i29oyYHsSs7D0yeFDcMpuPBMXP65f5NEA9FaDm4J
         IIgAqN9gRTAK8mAfxXA7nd9JVo/JUY2fFJNOpQTuCoTaKHRNdx7VSGERx55amzbSfmDT
         xFUpxZxmhIxBahyy2udPXO3w1h+bizxhxVRJFMGByGOJnvAf0e0rXKUVw8Vc+ieEdjV8
         X4kU5Ep+pLTD/oA6iyXTXO/dYqzcXAry1A2LsePsG1056z5kLUs9wDj6kS0aHOOdIRqE
         V/giIRWZBJ5qLIniax0GD2ZJanRINXb3naCoNQJhOVwzbT1Cd9/2QWXhJz/q7xxZNGm/
         9hBw==
X-Gm-Message-State: AA+aEWYihDDF+XKd/n4yTZ7W8NfD2O/basjZErNx/wgoX9Lf9y9VcRaB
        hWRBG43n5gCvhSxscCQwbWY=
X-Google-Smtp-Source: AFSGD/UB/wijVcMwWO3MB5YENS32w5qTsss2q8IWRnWuSl4WWq6kQAUBqIrgS7uxe2ET10bhHUrWtQ==
X-Received: by 2002:a19:54d7:: with SMTP id b84mr1598745lfl.131.1545405678851;
        Fri, 21 Dec 2018 07:21:18 -0800 (PST)
Received: from localhost.localdomain (c90-142-43-138.bredband.comhem.se. [90.142.43.138])
        by smtp.gmail.com with ESMTPSA id q30sm5005601lfi.94.2018.12.21.07.21.17
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 07:21:18 -0800 (PST)
From: codekipper@gmail.com
To: maxime.ripard@free-electrons.com, wens@csie.org,
        linux-sunxi@googlegroups.com
Cc: linux-arm-kernel@lists.infradead.org, lgirdwood@gmail.com,
        broonie@kernel.org, linux-kernel@vger.kernel.org,
        alsa-devel@alsa-project.org, be17068@iperbole.bo.it,
        Marcus Cooper <codekipper@gmail.com>
Subject: [PATCH v3 5/9] ASoC: sun4i-i2s: Correct divider calculations
Date: Fri, 21 Dec 2018 16:21:06 +0100
Message-Id: <20181221152110.17982-6-codekipper@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20181221152110.17982-1-codekipper@gmail.com>
References: <20181221152110.17982-1-codekipper@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Marcus Cooper <codekipper@gmail.com>

The clock division circuitry is different on the H3 and later SoCs.
The division of bclk is now based on pll2.

Signed-off-by: Marcus Cooper <codekipper@gmail.com>
---
 sound/soc/sunxi/sun4i-i2s.c | 82 +++++++++++++++++++++++++------------
 1 file changed, 56 insertions(+), 26 deletions(-)

diff --git a/sound/soc/sunxi/sun4i-i2s.c b/sound/soc/sunxi/sun4i-i2s.c
index 93a484d7e228..b31f84787218 100644
--- a/sound/soc/sunxi/sun4i-i2s.c
+++ b/sound/soc/sunxi/sun4i-i2s.c
@@ -129,10 +129,10 @@
  * @has_chsel_offset: SoC uses offset for selecting dai operational mode.
  * @reg_offset_txdata: offset of the tx fifo.
  * @sun4i_i2s_regmap: regmap config to use.
- * @mclk_offset: Value by which mclkdiv needs to be adjusted.
- * @bclk_offset: Value by which bclkdiv needs to be adjusted.
  * @fmt_offset: Value by which wss and sr needs to be adjusted.
  * @field_clkdiv_mclk_en: regmap field to enable mclk output.
+ * @field_clkdiv_mclk: regmap field for mclkdiv.
+ * @field_clkdiv_bclk: regmap field for bclkdiv.
  * @field_fmt_wss: regmap field to set word select size.
  * @field_fmt_sr: regmap field to set sample resolution.
  * @field_fmt_bclk: regmap field to set clk polarity.
@@ -153,8 +153,6 @@ struct sun4i_i2s_quirks {
 	bool				has_chsel_offset;
 	unsigned int			reg_offset_txdata;	/* TX FIFO */
 	const struct regmap_config	*sun4i_i2s_regmap;
-	unsigned int			mclk_offset;
-	unsigned int			bclk_offset;
 	unsigned int			fmt_offset;
 
 	/* Register fields for i2s */
@@ -210,7 +208,25 @@ static const struct sun4i_i2s_clk_div sun4i_i2s_bclk_div[] = {
 	{ .div = 8, .val = 3 },
 	{ .div = 12, .val = 4 },
 	{ .div = 16, .val = 5 },
-	/* TODO - extend divide ratio supported by newer SoCs */
+};
+
+static const struct sun4i_i2s_clk_div sun8i_i2s_clk_div[] = {
+	{ .div = 0, .val = 0 },
+	{ .div = 1, .val = 1 },
+	{ .div = 2, .val = 2 },
+	{ .div = 4, .val = 3 },
+	{ .div = 6, .val = 4 },
+	{ .div = 8, .val = 5 },
+	{ .div = 12, .val = 6 },
+	{ .div = 16, .val = 7 },
+	{ .div = 24, .val = 8 },
+	{ .div = 32, .val = 9 },
+	{ .div = 48, .val = 10 },
+	{ .div = 64, .val = 11 },
+	{ .div = 96, .val = 12 },
+	{ .div = 128, .val = 13 },
+	{ .div = 176, .val = 14 },
+	{ .div = 192, .val = 15 },
 };
 
 static const struct sun4i_i2s_clk_div sun4i_i2s_mclk_div[] = {
@@ -222,21 +238,21 @@ static const struct sun4i_i2s_clk_div sun4i_i2s_mclk_div[] = {
 	{ .div = 12, .val = 5 },
 	{ .div = 16, .val = 6 },
 	{ .div = 24, .val = 7 },
-	/* TODO - extend divide ratio supported by newer SoCs */
 };
 
 static int sun4i_i2s_get_bclk_div(struct sun4i_i2s *i2s,
 				  unsigned int oversample_rate,
-				  unsigned int word_size)
+				  unsigned int word_size,
+				  const struct sun4i_i2s_clk_div *bdiv,
+				  unsigned int size)
 {
 	int div = oversample_rate / word_size / 2;
 	int i;
 
-	for (i = 0; i < ARRAY_SIZE(sun4i_i2s_bclk_div); i++) {
-		const struct sun4i_i2s_clk_div *bdiv = &sun4i_i2s_bclk_div[i];
-
+	for (i = 0; i < size; i++) {
 		if (bdiv->div == div)
 			return bdiv->val;
+		bdiv++;
 	}
 
 	return -EINVAL;
@@ -245,16 +261,17 @@ static int sun4i_i2s_get_bclk_div(struct sun4i_i2s *i2s,
 static int sun4i_i2s_get_mclk_div(struct sun4i_i2s *i2s,
 				  unsigned int oversample_rate,
 				  unsigned int module_rate,
-				  unsigned int sampling_rate)
+				  unsigned int sampling_rate,
+				  const struct sun4i_i2s_clk_div *mdiv,
+				  unsigned int size)
 {
 	int div = module_rate / sampling_rate / oversample_rate;
 	int i;
 
-	for (i = 0; i < ARRAY_SIZE(sun4i_i2s_mclk_div); i++) {
-		const struct sun4i_i2s_clk_div *mdiv = &sun4i_i2s_mclk_div[i];
-
+	for (i = 0; i < size; i++) {
 		if (mdiv->div == div)
 			return mdiv->val;
+		mdiv++;
 	}
 
 	return -EINVAL;
@@ -319,24 +336,39 @@ static int sun4i_i2s_set_clk_rate(struct snd_soc_dai *dai,
 		return -EINVAL;
 	}
 
-	bclk_div = sun4i_i2s_get_bclk_div(i2s, oversample_rate,
-					  word_size);
+	if (i2s->variant->has_fmt_set_lrck_period)
+		bclk_div = sun4i_i2s_get_bclk_div(i2s, clk_rate / rate,
+						  word_size,
+						  sun8i_i2s_clk_div,
+						  ARRAY_SIZE(sun8i_i2s_clk_div));
+	else
+		bclk_div = sun4i_i2s_get_bclk_div(i2s, oversample_rate,
+						  word_size,
+						  sun4i_i2s_bclk_div,
+						  ARRAY_SIZE(sun4i_i2s_bclk_div));
 	if (bclk_div < 0) {
-		dev_err(dai->dev, "Unsupported BCLK divider: %d\n", bclk_div);
+		dev_err(dai->dev, "Unsupported BCLK divider: %d\n",
+			bclk_div);
 		return -EINVAL;
 	}
 
-	mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
-					  clk_rate, rate);
+
+	if (i2s->variant->has_fmt_set_lrck_period)
+		mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
+						  clk_rate, rate,
+						  sun8i_i2s_clk_div,
+						  ARRAY_SIZE(sun8i_i2s_clk_div));
+	else
+		mclk_div = sun4i_i2s_get_mclk_div(i2s, oversample_rate,
+						  clk_rate, rate,
+						  sun4i_i2s_mclk_div,
+						  ARRAY_SIZE(sun4i_i2s_mclk_div));
 	if (mclk_div < 0) {
-		dev_err(dai->dev, "Unsupported MCLK divider: %d\n", mclk_div);
+		dev_err(dai->dev, "Unsupported MCLK divider: %d\n",
+			mclk_div);
 		return -EINVAL;
 	}
 
-	/* Adjust the clock division values if needed */
-	bclk_div += i2s->variant->bclk_offset;
-	mclk_div += i2s->variant->mclk_offset;
-
 	regmap_write(i2s->regmap, SUN4I_I2S_CLK_DIV_REG,
 		     SUN4I_I2S_CLK_DIV_BCLK(bclk_div) |
 		     SUN4I_I2S_CLK_DIV_MCLK(mclk_div));
@@ -955,8 +987,6 @@ static const struct sun4i_i2s_quirks sun8i_h3_i2s_quirks = {
 	.has_reset		= true,
 	.reg_offset_txdata	= SUN8I_I2S_FIFO_TX_REG,
 	.sun4i_i2s_regmap	= &sun8i_i2s_regmap_config,
-	.mclk_offset		= 1,
-	.bclk_offset		= 2,
 	.fmt_offset		= 3,
 	.has_fmt_set_lrck_period = true,
 	.has_chcfg		= true,
-- 
2.20.1

