Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:52:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CABEE5804D6;
	Fri, 21 Dec 2018 07:23:04 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 07:23:04 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ATNpRDRCvfr0Zmk2M14d7UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP74o8qwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VDK/5KlpVRDokj?=
 =?us-ascii?q?8KOT4n/m/KhMJ+j6VVrxCvpxNwzIDUe5mVOfhlc6/Bft4XX3ZNU9xNWyBdBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4Tyu1wOogagCgmvBePv0idIiWHs3aAh3OQhFBvJ3A0kH94UrH?=
 =?us-ascii?q?vUq9D1OaEPWu621KnF1SvPY+9S1Dvn9YTFfA4treuRUb9zbcbd00giGgHdgliU?=
 =?us-ascii?q?tYDpJS6Z2+sTv2SB4OdtW/ijh3MppgxypDWk290ihZPTho0Pz1DJ7SV5z5gxJd?=
 =?us-ascii?q?2/UEN7f9GkH4VKty2ANIt5XNkiQ2d2tyY+0LEGvoS7fCcSxJQmwR7QdeCHfpCW?=
 =?us-ascii?q?7h7/UOudOyp0iXx7dL6lmhq/8lSsxvf9W8S2yFpKqzBKktjItnADzRzT7c2HR+?=
 =?us-ascii?q?N5/keg3zaPyg/S5vhHIU8qj6rbLYAuwropmpoUv0XDGDH5mF/tga+IeUUr5PKo?=
 =?us-ascii?q?5/7kYrr4vJ+cMZF7igXkPqQpgMy/Dvw0MhISUGiD5eS8yLrj8FX9QLVLjf05jL?=
 =?us-ascii?q?PVsZ/HJckAoq65AglV0pss6hqlDjem1sgYkmcDLF5fZB2HiI3pMUnUIP/kFfe/?=
 =?us-ascii?q?n0iskDBzyvDGJLLhA4nNIWLEkLv7fbZ99lRTyAw8zd1E45JUC7cBIO/8W0Prtd?=
 =?us-ascii?q?zYCAM5PBKww+r9FNp90YYeU3qVAqCFKKPSrUOI5uU3LuaWf48VuDH9K/s/6/70?=
 =?us-ascii?q?l3A5m0QQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EIGmAp3FRoy3hLyB3T20HptZZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddo/eLTiw89+SZ0D8uH1WGNVH97nm?=
 =?us-ascii?q?UPSz8y36B/pEh9x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDbFtnFNW8kB/PxSqqDKUTl7yQGpM09LnR33zwJ8Z71nbH27?=
 =?us-ascii?q?Mtj1ggQstTK2KmgrRz+BTUB47Mi0+ZjbqldbwA3C7R82eO1XaOvEBdUA53TaXF?=
 =?us-ascii?q?XXAealHKrdjj4UPCVbuuCbUhMgtO0sOCLqpKatv0jVRJXvvjOdLeY36vlGe0Hx?=
 =?us-ascii?q?qH2rSMbI/ycWUHwCrdEFQEkxwU/XueLwc+Ajmuom3AAz1uD17geF7s/vRkp3O9?=
 =?us-ascii?q?TU80yB+KYlZl17q0/B4VmPOdR+kS3rICpCcutTF0EEyh0NLRDtqKvxBhc7lEYd?=
 =?us-ascii?q?Mh/FdH0nrUtgxgPpC6M69unF8fcwRtsEPo2BV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk4sVTjsx2zGUo47npn1MNZ03?=
 =?us-ascii?q?2C6ZXQDQoeSI7+XVwz9xdnub7aeC4954XP2H1oMKm0tCLC2t0zCOskzBagY8lQ?=
 =?us-ascii?q?MKeeGADuFM0aAtCkKPY2lFixchIEIOdS+bY0PsOnbfeH2LSnPP19nDKglmlH5I?=
 =?us-ascii?q?F90kSR9ytzUOLI3pAFw+2G0QuDTTvzkFChssXvk4BeeT4SBna/yTTjBINJZK19?=
 =?us-ascii?q?Z5wLCWStI82w3Nl+nITiW31b9F6iAVMJxsmpdAGWb1z82w1QyEsWrWammSu+0z?=
 =?us-ascii?q?x7jTUporCD0yzJxuTobAAHNXJTRGl+kVfsJpC5jtAAU0ivdQQplhql5UDhyqhf?=
 =?us-ascii?q?paR/KXTTQEhScyj3KWFiTrW/tr6Yb8FT75MotD1dUP6gblCCVr79vxwa3jvgH2?=
 =?us-ascii?q?RExTA3bTGquojjkBx8h2KQN3JzrHvfecFtyhbT/t3cRfhN3jUYQCl0kyXYBl+5?=
 =?us-ascii?q?P9Ox59Wbi4/DsvyiV2KmTpBTdCjrzYCauyeh62xlHwa/n+ytld39Cgc1zzX719?=
 =?us-ascii?q?ZxWCXMrRb8ZJTr1qugPeJmeEloGEHz685gFo5ilYswgYka2WIGiZWN4XoHjWDz?=
 =?us-ascii?q?PM1H2aL5aXoBXz8KzMTT4Aj4w01jNXOJypn9VnWcxMtheta7bnkX2iI788BFFq?=
 =?us-ascii?q?OU4KZYkityp1qytRjRbuRlnjcB1fsu72YXjPoTtwoqyiWdH6oeHU1FPSH3kxSI?=
 =?us-ascii?q?7ta+rLhYZWq1cLiw0lZ+ks6lDL2Yvg5cX3P5cI84HSBs9sV/LE7M0Hrr54HmYt?=
 =?us-ascii?q?bQaMwctgaOnxfcleRVK48xlvkXhSphI239pmYoy+o6jRxowJG7s5KLK2Rr/KKl?=
 =?us-ascii?q?HBFYMif5aN8U+jHolaxehNqZ35izHpV9HTUGRJvpTfW1EDILqPToLQCOHCcnqn?=
 =?us-ascii?q?ecH7rfEhSS6ENnr3LJDpCqOGubJHgfzdV+WhadIFZTjxwTXDU/hpQ5DBylxNT9?=
 =?us-ascii?q?cEdl4TAc/l74pQVNyuJrNBn/U33TpASyajczR5iQMgBW7hxZ50rONcye7+RzHz?=
 =?us-ascii?q?xX/5G7rQyNLHCbaBpMDW0TRkOEAFXjNKG05dbc6+iYGva+L/zWbLqUtOxRTO2I?=
 =?us-ascii?q?yoyv04d8+zaMN96CPn1jD/09x0pCUmp1G8XfmzUTVSMXkzjBYNKcpBe54id3tN?=
 =?us-ascii?q?yw8Oz3WALz4ouCE6dSMdRq+xysnaiPLfKfhCZnJjZezZ4MwX7IyL4C3F8dkS1u?=
 =?us-ascii?q?dj+tEageui7JVq7fhqhXDxsDYSNpKMRI97483hVKOcPDitL6zLh4jvs0C1dDTV?=
 =?us-ascii?q?Pgm8GpatYMI2GyL17HAEeLNLKbJTzE2c33YKW8SaFOg+VQrRG/pTGbE0qwdgiE?=
 =?us-ascii?q?wjzgRxGqPKdWjTmSJhB2tpuwf1NgDWXoUMjhbAb9O9hyyXUpzLsvrnjRNGNaNi?=
 =?us-ascii?q?JzNwtJr7uN/WZDn/NvGkRO6X1qKeSLgSGE9/KeIZET4tVxBSEhnOVW7Xc706NY?=
 =?us-ascii?q?9glLQfV0nG3Zqds98BmdjuCTx28/A1J1oTFRidfTsA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAAANBB1ch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYFVghYnjBZfix2CDRSJE444gXMTAQEYEwGHMCI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCOiKCbwMDAQIkCwENARsdAQMCCQEBBRAKMQMeA?=
 =?us-ascii?q?hEBBQEcBxIFgx2BaQEDFQQBmiU8jBUWBQEXgncFgQGDPwoZJw1eE4EkAgYSh2y?=
 =?us-ascii?q?BfYEogRwXgX+GeogJAqESMwmGUodkgycMGIl6h2WJU4YQihICBAIEBQIFDyGBJ?=
 =?us-ascii?q?YIOcIEBgjuCGwwXg0qKVD8ygQQBAQE7jVQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AFAAANBB1ch0O0hNFjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYFVghYnjBZfix2CDRSJE444gXMTAQEYEwGHMCI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCOiKCbwMDAQIkCwENARsdAQMCCQEBBRAKMQMeAhEBBQEcBxIFgx2?=
 =?us-ascii?q?BaQEDFQQBmiU8jBUWBQEXgncFgQGDPwoZJw1eE4EkAgYSh2yBfYEogRwXgX+Ge?=
 =?us-ascii?q?ogJAqESMwmGUodkgycMGIl6h2WJU4YQihICBAIEBQIFDyGBJYIOcIEBgjuCGww?=
 =?us-ascii?q?Xg0qKVD8ygQQBAQE7jVQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="67878823"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 21 Dec 2018 07:23:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391022AbeLUPW6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 10:22:58 -0500
Received: from mail-lj1-f195.google.com ([209.85.208.195]:32845 "EHLO
        mail-lj1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2390969AbeLUPVX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 10:21:23 -0500
Received: by mail-lj1-f195.google.com with SMTP id v1-v6so5079482ljd.0
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 07:21:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=YO4CeGln0tXYn1nCL2HnWXHfIVIdma6kfCZR3YsTlCA=;
        b=n8Js1ZhaCTlVzS2/ZLWrpbC5r7or7fEoj8Yp0xbzQZq9XSB3mlZNmBnGKJ+9+QhLIs
         PGqdVl+1UHg1nTRyNtcxR6qvUuhuBgln/agKDjUHfS6cMS/ChRTbTajk1QYYwKEEMcwA
         3eXiwLknJtBAzkfribgp7ZNo7FWPp25HaROqJ7WCCnUZbj/a0GYFwcEArsnnH09absrQ
         D4Sq3VkeZn3hJvBF+hAM7zwUEKiaVQJ6I0RHfl2BV8A8xGNDEvXX7GwxCy7a/J2eoV7D
         NPSbdF+FKZTeE6LVrcndFfKd1faWl/jjfoAwEo2USK35fheoSTWJvy70x5bLhFKN6q6O
         dXYw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=YO4CeGln0tXYn1nCL2HnWXHfIVIdma6kfCZR3YsTlCA=;
        b=jD348gAD4m9NdE76RZ+i5LvTDYV4C9z6c1AmowVOZ5wYzKesYnYmKGc6W0bAo/5agJ
         b5BnrWUqXV/jBuA0cM03t5Bwap3O5Z0ykFA9/BoeXZoqwAKonop5REFHbJiSgIeMz3r4
         +gDCNIn51uEjzmtYpFOcph7cM5X5fR5n3QSvnpEO+nSwBJjGppZ0ll3YGLJSlOhNy+Wi
         Towte+j+lQOTRSDgB6RgPuvtGTYXPX1K0Y4ELu++Q4D/XsaopxMQmslBP03YTDqn+V8p
         46+2K/Ky2vFavwUqvf5R1RXoLKnOGCUJ5mP5YvhhLC1yvYK7UBhfYA4K9qGHEqKayZc6
         cIjA==
X-Gm-Message-State: AJcUukdF3hDn1nn6pGs8LM1+ZHREA3/J3KH2CdFJG6isMRRGNIS89M0g
        cM62OCRyuB5GzEu5RB0SHjg=
X-Google-Smtp-Source: ALg8bN4z/X7VrVOMuBNvI8ciYDEa/SZnf7tfwDqEUSLO8ASNF6ROkO19nRVwQkBUp6NU82630E7WPg==
X-Received: by 2002:a2e:b00a:: with SMTP id y10-v6mr1801460ljk.109.1545405680201;
        Fri, 21 Dec 2018 07:21:20 -0800 (PST)
Received: from localhost.localdomain (c90-142-43-138.bredband.comhem.se. [90.142.43.138])
        by smtp.gmail.com with ESMTPSA id q30sm5005601lfi.94.2018.12.21.07.21.18
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 07:21:19 -0800 (PST)
From: codekipper@gmail.com
To: maxime.ripard@free-electrons.com, wens@csie.org,
        linux-sunxi@googlegroups.com
Cc: linux-arm-kernel@lists.infradead.org, lgirdwood@gmail.com,
        broonie@kernel.org, linux-kernel@vger.kernel.org,
        alsa-devel@alsa-project.org, be17068@iperbole.bo.it,
        Marcus Cooper <codekipper@gmail.com>
Subject: [PATCH v3 6/9] ASoC: sun4i-i2s: Add multi-lane functionality
Date: Fri, 21 Dec 2018 16:21:07 +0100
Message-Id: <20181221152110.17982-7-codekipper@gmail.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20181221152110.17982-1-codekipper@gmail.com>
References: <20181221152110.17982-1-codekipper@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Marcus Cooper <codekipper@gmail.com>

The i2s block supports multi-lane i2s output however this functionality
is only possible in earlier SoCs where the pins are exposed and for
the i2s block used for HDMI audio on the later SoCs.

To enable this functionality, an optional property has been added to
the bindings.

Signed-off-by: Marcus Cooper <codekipper@gmail.com>
---
 sound/soc/sunxi/sun4i-i2s.c | 37 ++++++++++++++++++++++++++++++++-----
 1 file changed, 32 insertions(+), 5 deletions(-)

diff --git a/sound/soc/sunxi/sun4i-i2s.c b/sound/soc/sunxi/sun4i-i2s.c
index b31f84787218..e85789d84c0c 100644
--- a/sound/soc/sunxi/sun4i-i2s.c
+++ b/sound/soc/sunxi/sun4i-i2s.c
@@ -27,7 +27,7 @@
 
 #define SUN4I_I2S_CTRL_REG		0x00
 #define SUN4I_I2S_CTRL_SDO_EN_MASK		GENMASK(11, 8)
-#define SUN4I_I2S_CTRL_SDO_EN(sdo)			BIT(8 + (sdo))
+#define SUN4I_I2S_CTRL_SDO_EN(lines)		(((1 << lines) - 1) << 8)
 #define SUN4I_I2S_CTRL_MODE_MASK		BIT(5)
 #define SUN4I_I2S_CTRL_MODE_SLAVE			(1 << 5)
 #define SUN4I_I2S_CTRL_MODE_MASTER			(0 << 5)
@@ -394,14 +394,23 @@ static int sun4i_i2s_hw_params(struct snd_pcm_substream *substream,
 	struct sun4i_i2s *i2s = snd_soc_dai_get_drvdata(dai);
 	int sr, wss, channels;
 	u32 width;
+	int lines;
 
 	channels = params_channels(params);
-	if (channels != 2) {
+	if ((channels > dai->driver->playback.channels_max) ||
+		(channels < dai->driver->playback.channels_min)) {
 		dev_err(dai->dev, "Unsupported number of channels: %d\n",
 			channels);
 		return -EINVAL;
 	}
 
+	lines = (channels + 1) / 2;
+
+	/* Enable the required output lines */
+	regmap_update_bits(i2s->regmap, SUN4I_I2S_CTRL_REG,
+			   SUN4I_I2S_CTRL_SDO_EN_MASK,
+			   SUN4I_I2S_CTRL_SDO_EN(lines));
+
 	if (i2s->variant->has_chcfg) {
 		regmap_update_bits(i2s->regmap, SUN8I_I2S_CHAN_CFG_REG,
 				   SUN8I_I2S_CHAN_CFG_TX_SLOT_NUM_MASK,
@@ -412,8 +421,19 @@ static int sun4i_i2s_hw_params(struct snd_pcm_substream *substream,
 	}
 
 	/* Map the channels for playback and capture */
-	regmap_field_write(i2s->field_txchanmap, 0x76543210);
 	regmap_field_write(i2s->field_rxchanmap, 0x00003210);
+	regmap_field_write(i2s->field_txchanmap, 0x10);
+	if (i2s->variant->has_chsel_tx_chen) {
+		if (channels > 2)
+			regmap_write(i2s->regmap,
+				     SUN8I_I2S_TX_CHAN_MAP_REG+4, 0x32);
+		if (channels > 4)
+			regmap_write(i2s->regmap,
+				     SUN8I_I2S_TX_CHAN_MAP_REG+8, 0x54);
+		if (channels > 6)
+			regmap_write(i2s->regmap,
+				     SUN8I_I2S_TX_CHAN_MAP_REG+12, 0x76);
+	}
 
 	/* Configure the channels */
 	regmap_field_write(i2s->field_txchansel,
@@ -1094,9 +1114,10 @@ static int sun4i_i2s_init_regmap_fields(struct device *dev,
 static int sun4i_i2s_probe(struct platform_device *pdev)
 {
 	struct sun4i_i2s *i2s;
+	struct snd_soc_dai_driver *soc_dai;
 	struct resource *res;
 	void __iomem *regs;
-	int irq, ret;
+	int irq, ret, val;
 
 	i2s = devm_kzalloc(&pdev->dev, sizeof(*i2s), GFP_KERNEL);
 	if (!i2s)
@@ -1175,6 +1196,12 @@ static int sun4i_i2s_probe(struct platform_device *pdev)
 		soc_dai->capture.formats = SUN8I_FORMATS;
 	}
 
+	if (!of_property_read_u32(pdev->dev.of_node,
+				  "allwinner,playback-channels", &val)) {
+		if (val >= 2 && val <= 8)
+			soc_dai->playback.channels_max = val;
+	}
+
 	pm_runtime_enable(&pdev->dev);
 	if (!pm_runtime_enabled(&pdev->dev)) {
 		ret = sun4i_i2s_runtime_resume(&pdev->dev);
@@ -1184,7 +1211,7 @@ static int sun4i_i2s_probe(struct platform_device *pdev)
 
 	ret = devm_snd_soc_register_component(&pdev->dev,
 					      &sun4i_i2s_component,
-					      &sun4i_i2s_dai, 1);
+					      soc_dai, 1);
 	if (ret) {
 		dev_err(&pdev->dev, "Could not register DAI\n");
 		goto err_suspend;
-- 
2.20.1

