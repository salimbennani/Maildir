Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 18:30:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E3881580375;
	Tue,  4 Dec 2018 00:35:43 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 00:35:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AfmjwXhb0VV0kX4Kz06AlydT/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci4Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM37X/ZisJwgqxYrhyuqRNwzIzIb4+aL/p+ZqHQcMgGRWdCRMtdSzBND42+?=
 =?us-ascii?q?YoYJEuEPPfxYr474p1YWqRW+BBOjC/71xTRVhnD5x6s60+s8GgzB3gwgHsgBv2?=
 =?us-ascii?q?nOo9rtOqYdS+a1zKbTwDXGcfxW3yv96I/Schw7vf6MWrdwfNPXxEIyFA3Flk2d?=
 =?us-ascii?q?pZL5Mz6RzOgBrmaW4/R6We6yiGMrtxt9rzmty8s0l4XEiYAYxkrK+Ch22oo4Ic?=
 =?us-ascii?q?C0RFRmbdOiDZBerTuVN5FsTcMnW2xouDg1yrkBuZOjYigKx4ooxwTFZ/yEbYeI?=
 =?us-ascii?q?+BTjW/iVITtig3JlYr2/iw6z8Uim1OL8StG53EhWoidBiNXAq34A2wLJ5sSaSf?=
 =?us-ascii?q?Zx4l2t1DeN2gzL7+FLO0E0la7VK547xb4wk4IesUDCHi/whUX3g7aadkY69eiy?=
 =?us-ascii?q?7eTofLHmqoabN456jAHxLL4ul9ehAeQ3LAcORXKX+eei2735+032XrFKgucxkq?=
 =?us-ascii?q?nDv5DWPd4bqbKhAw9JzoYj7A6yDzOn0NQbg3YLNl1EeA+cgojtOlHOJu34DPil?=
 =?us-ascii?q?j1Stljdr2+7JPrn7DprRKXjDla/rfaxh5E5E1Aoz0ddf6opUCr4bIfLzRlX+tN?=
 =?us-ascii?q?vCAh85Lgy72eDnCNpm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4ubk?=
 =?us-ascii?q?jWUlll8FYampwZwXZWi6HvRhPUqVe3nsgtAHEWcMuQozV+jqiFyEUT5OaHe+Ra?=
 =?us-ascii?q?M85jcnCI24CYfPXJyigLuE3C2jBJ1ZenhGCkyQEXfvb4iLQewMaCKVIs9iiDAE?=
 =?us-ascii?q?T6KuS4062BGqtQ/6zadnL+XO9i0Zs5LjyMZ65+nJmR4u8jx0CtyX03uRQGFsgm?=
 =?us-ascii?q?MIWzg20bh8oUNnzFePy6x4g/1CGtxV6PNESQM6NZ/az+xnBNH+QAPBftGVSFm4?=
 =?us-ascii?q?RtWqGy0+TtU0w9UWeUZyB82ijgzf3yqtG7IaiqaEBIIq/a7G33j+PcB9y23Y26?=
 =?us-ascii?q?kniFUmRshPNWiihqNk8wjTBojJk1iWlqqwdKQc2jLN+3mHzWaUoE5YVwtwW73f?=
 =?us-ascii?q?XX8DfkvWscj55kTaQrCzE7snLBVOxdSCKqRQbN3plktJRPH4NdTaYmKxnXqwBB?=
 =?us-ascii?q?mSyrONaorqZ3sS3CHHBEcYlAAT+G6MNRIiCSe5v2LeEDtuGErzY0Pt9Ol+r2+7?=
 =?us-ascii?q?Tk80zg2Qc01tzb21+gQRhfydTfMT0akJuCMgqzVyAVa80MjaC9uGpwp9YqpcZc?=
 =?us-ascii?q?kx70tA1WLcrwZ9JICvL7h+hl4CdAR6p1nh1xFpBYRPj8crrGkmwxFvKa2FylxB?=
 =?us-ascii?q?cTCY3ZfuOrDMLmny/Rava7PZ213E0daW/LsP5+o8q1n5oA6pEU8i+W1909ZJy3?=
 =?us-ascii?q?uc+onKDA0KXJPxT0Y77QR1q6vbYyk9/YzU03JsPLKwsj/D3dIpGeQkxgyhf9dZ?=
 =?us-ascii?q?LKOLCgvyH9cGCMipLewgg0KpYQ4cPOBO6K40ONurd+GH2KG3Julghi+pjWNd7I?=
 =?us-ascii?q?B7zE2M7St8RvfU0Jkfx/GXwxWIVy37jFenqc33nYFEZTcPHmuw0yTkBYhRZrFs?=
 =?us-ascii?q?coYPE2uhP8q3xtBmjZ73R3FY7EKjB08B2MKxeRuSbkbx3A1K2UQMvHynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336pb?=
 =?us-ascii?q?q75lL2nQQkdIeDL6L3p4XauztbqCYshP540usShMVOS8YFaaSqPyohcA0iPjGX?=
 =?us-ascii?q?deyy4/dz2wppr5mBl6gnqHLHlvtHrZZd1wxRDH6d3cX/FR2SAKRCt5iTnRHVW8?=
 =?us-ascii?q?O9ip/dOJl5bMqOy+VmShVoFNfinv14+PqCy75WhyCx2lg/+zgsHnERQ90SLj1N?=
 =?us-ascii?q?llTyTIoAz8Yon2zau6N+1nc1JsBF/97cp6B45/npExhJEWxXgVmJGV8WAbnmf0?=
 =?us-ascii?q?NNVRwbj+Y2YVRT4X397V5xDo2EhiLnKK3Y31THuczdV6Z9mmfGwWwDky4N5QCK?=
 =?us-ascii?q?eb97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792msKVXY2OvfaKx1UVkm9ChEaqCohpdWHvifpciHClw7thwMV7W0X3z7J3kd8?=
 =?us-ascii?q?fUbd4JqhKUlBLAhfBPKJ0tjvoKmTZnOWXlsHI+0eE7ihhu3YygsIiDNmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDA8qG?=
 =?us-ascii?q?2UGb/BEg+E8ktms2jDE5O2N3GUOXkZy89tRAKGKUxbgQAUWig6n5EjGgCrwszh?=
 =?us-ascii?q?bFl25jQL6lHkrRtMz/piNwPjXWfHuAeodjA0RYCfLRpR8wFC/lrVPtaY7u5pBC?=
 =?us-ascii?q?FY+ZuhrAOWJ2yfZgRIC3wJW0OeC1DiOLmu+cfP8+yCCuWiKPvOZK2EqfZCWPeQ?=
 =?us-ascii?q?2ZKvzoxm8i6MNsqRP3liDP472ktZUXB6AcTZnDoPRDINlyLQdM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUQxkMShDp0?=
 =?us-ascii?q?dzazEbUMryrNTKPLl69TDh4bbT5zNcRS46I92AlNJdDUitfv2rFkif41Dk9PVU?=
 =?us-ascii?q?b9lcGxecwKP2a9OUvbBEaKMbSKPyHEz9vrbqO8V7JQiv5ZtxmxuTadDk/iMS6P?=
 =?us-ascii?q?lzjvVxCzL+5MiDuXMwBZuIG4ahxtE3TsTMr6ah2nN996lT03zqcyhnPPNG4cNy?=
 =?us-ascii?q?BzckJNrrKK6yNYje5yG2hA7npjMOmFlDyV7+jeKpYKr/RrBj54mP5d4HQ/mPNp?=
 =?us-ascii?q?63RnWfp0nizIr5ZLpEunl+6TzXIzUwdIqzBMnoPNuEJ4OKDe6p4GVmbs5h8L4H?=
 =?us-ascii?q?6ZEFIBoN4zWfP1vKUF6NnGmKu7Fz5E/JqA/8oVC8HjN8uBP1IkPBz1HySSBwwA?=
 =?us-ascii?q?G234fVrDjlBQxanBvkaeqYI3/8Dh?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAACcOwZch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYJoA38ng3mIGYwOgg0UlzWBcxQYAxABiA4iNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIKSMMQgEOAYFkIoJlAQIDAQIgBAsBBUEGCQEBChgCAiYCAgNEE?=
 =?us-ascii?q?AYNAQUCAQEBgxwBggEFpBp8M4VAhHKBC4sRghaBOIJriAWCVwKLIIQQfJAaCQW?=
 =?us-ascii?q?CGQEEA4RcijcGGIFbTYREgn+GDYEukgmGaYFGgg0zGiODPAmCHheIG4YRMjGBB?=
 =?us-ascii?q?QEBgQOKAAEB?=
X-IPAS-Result: =?us-ascii?q?A0AkAACcOwZch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBAYJ?=
 =?us-ascii?q?oA38ng3mIGYwOgg0UlzWBcxQYAxABiA4iNAkNAQMBAQEBAQECARMBAQEKCwkIK?=
 =?us-ascii?q?SMMQgEOAYFkIoJlAQIDAQIgBAsBBUEGCQEBChgCAiYCAgNEEAYNAQUCAQEBgxw?=
 =?us-ascii?q?BggEFpBp8M4VAhHKBC4sRghaBOIJriAWCVwKLIIQQfJAaCQWCGQEEA4RcijcGG?=
 =?us-ascii?q?IFbTYREgn+GDYEukgmGaYFGgg0zGiODPAmCHheIG4YRMjGBBQEBgQOKAAEB?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="55414598"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 00:35:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725866AbeLDIfj (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 03:35:39 -0500
Received: from relay1.mentorg.com ([192.94.38.131]:39777 "EHLO
        relay1.mentorg.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725468AbeLDIfi (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 03:35:38 -0500
Received: from svr-orw-mbx-03.mgc.mentorg.com ([147.34.90.203])
        by relay1.mentorg.com with esmtps (TLSv1.2:ECDHE-RSA-AES256-SHA384:256)
        id 1gU6B6-0007PN-D7 from Jiada_Wang@mentor.com ; Tue, 04 Dec 2018 00:35:36 -0800
Received: from [172.30.112.76] (147.34.91.1) by svr-orw-mbx-03.mgc.mentorg.com
 (147.34.90.203) with Microsoft SMTP Server (TLS) id 15.0.1320.4; Tue, 4 Dec
 2018 00:35:32 -0800
Subject: Re: [PATCH linux-next v2 6/6] ASoC: rsnd: add avb clocks
To: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
CC: "broonie@kernel.org" <broonie@kernel.org>,
        "perex@perex.cz" <perex@perex.cz>,
        "tiwai@suse.com" <tiwai@suse.com>,
        "vladimir_zapolskiy@mentor.com" <vladimir_zapolskiy@mentor.com>,
        "alsa-devel@alsa-project.org" <alsa-devel@alsa-project.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
References: <20181203112427.18324-1-jiada_wang@mentor.com>
 <87o9a22hjt.wl-kuninori.morimoto.gx@renesas.com>
From: Jiada Wang <jiada_wang@mentor.com>
Message-ID: <64d0b9f1-ca23-425e-68d1-31ce9d6ab168@mentor.com>
Date: Tue, 4 Dec 2018 17:35:31 +0900
User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <87o9a22hjt.wl-kuninori.morimoto.gx@renesas.com>
Content-Type: text/plain; charset="utf-8"; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-ClientProxiedBy: svr-orw-mbx-03.mgc.mentorg.com (147.34.90.203) To
 svr-orw-mbx-03.mgc.mentorg.com (147.34.90.203)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Morimoto-san

Thanks for your comments,
I will address your findings in next version

Thanks,
Jiada

On 2018/12/04 10:52, Kuninori Morimoto wrote:
> Hi Jiada
>
>> There are AVB Counter Clocks in ADG, each clock has 12bits integral
>> and 8 bits fractional dividers which operates with S0D1Ï• clock.
>>
>> This patch registers 8 AVB Counter Clocks when clock-cells of
>> rcar_sound node is 2,
>>
>> Signed-off-by: Jiada Wang <jiada_wang@mentor.com>
>> ---
> (snip)
>> +struct clk_avb {
>> +	struct clk_hw hw;
>> +	unsigned int idx;
>> +	struct rsnd_mod *mod;
>> +	/* lock reg access */
>> +	spinlock_t *lock;
>> +};
>> +
>> +#define to_clk_avb(_hw) container_of(_hw, struct clk_avb, hw)
> I like "hw_to_avb()"
>
>> +static struct clk *rsnd_adg_clk_src_twocell_get(struct of_phandle_args *clkspec,
>> +						void *data)
>> +{
>> +	unsigned int clkidx = clkspec->args[1];
>> +	struct rsnd_adg *adg = data;
>> +	const char *type;
>> +	struct clk *clk;
>> +
>> +	switch (clkspec->args[0]) {
>> +	case ADG_FIX:
>> +		type = "fixed";
>> +		if (clkidx >= CLKOUTMAX) {
>> +			pr_err("Invalid %s clock index %u\n", type,
>> +			       clkidx);
>> +			return ERR_PTR(-EINVAL);
>> +		}
>> +		clk = adg->clkout[clkidx];
>> +		break;
>> +	case ADG_AVB:
>> +		type = "avb";
>> +		if (clkidx >= AVB_CLK_NUM) {
>> +			pr_err("Invalid %s clock index %u\n", type,
>> +			       clkidx);
>> +			return ERR_PTR(-EINVAL);
>> +		}
>> +		clk = adg->clkavb[clkidx];
>> +		break;
>> +	default:
>> +		pr_err("Invalid ADG clock type %u\n", clkspec->args[0]);
>> +		return ERR_PTR(-EINVAL);
>> +	}
>> +
>> +	return clk;
>> +}
> In this function
> 1) I don't think you need to use "char *type".
> 2) If you use "clkidx = clkspec->args[1]", having same name for "clkspec->args[0]"
>     is readable.
> 3) please use dev_err() instad of pr_err()
>     I think data can be priv, and you can use rsnd_priv_to_adg(), rsnd_priv_to_dev()
>
>> +static void clk_avb_div_write(struct rsnd_mod *mod, u32 data, int idx)
> (snip)
>> +static u32 clk_avb_div_read(struct rsnd_mod *mod, int idx)
> To reduce confusion, and be more redable code,
> I think these function can be
>
> 	clk_avb_div_write(struct rsnd_adg *adg, u32 data);
> 	clk_avb_div_read(struct rsnd_adg *adg);
>
>> +static int clk_avb_set_rate(struct clk_hw *hw, unsigned long rate,
>> +			    unsigned long parent_rate)
>> +{
>> +	struct clk_avb *avb = to_clk_avb(hw);
>> +	unsigned int div = clk_avb_calc_div(rate, parent_rate);
>> +	u32 val;
>> +
>> +	val = clk_avb_div_read(avb->mod, avb->idx) & ~AVB_DIV_MASK;
>> +	clk_avb_div_write(avb->mod, val | div, avb->idx);
>> +
>> +	return 0;
>> +}
> Why do we need to care about ~AVB_DIV_MASK area ?
> These are 0 Reserved, I think.
>
>> +static const struct clk_ops clk_avb_ops = {
>> +	.enable = clk_avb_enable,
>> +	.disable = clk_avb_disable,
>> +	.is_enabled = clk_avb_is_enabled,
>> +	.recalc_rate = clk_avb_recalc_rate,
>> +	.round_rate = clk_avb_round_rate,
>> +	.set_rate = clk_avb_set_rate,
>> +};
> This is not a big deal, but I like tab aligned ops
>
>> +static struct clk *clk_register_avb(struct device *dev, struct rsnd_mod *mod,
>> +				    unsigned int id, spinlock_t *lock)
>> +{
>> +	struct clk_init_data init;
>> +	struct clk_avb *avb;
>> +	struct clk *clk;
>> +	char name[AVB_CLK_NAME_SIZE];
>> +	const char *parent_name = ADG_CLK_NAME;
>> +
>> +	avb = devm_kzalloc(dev, sizeof(*avb), GFP_KERNEL);
>> +	if (!avb)
>> +		return ERR_PTR(-ENOMEM);
>> +
>> +	snprintf(name, AVB_CLK_NAME_SIZE, "%s%u", AVB_CLK_NAME, id);
>> +
>> +	avb->idx = id;
>> +	avb->lock = lock;
>> +	avb->mod = mod;
>> +
>> +	/* Register the clock. */
>> +	init.name = name;
>> +	init.ops = &clk_avb_ops;
>> +	init.flags = CLK_IS_BASIC;
>> +	init.parent_names = &parent_name;
>> +	init.num_parents = 1;
>> +
>> +	avb->hw.init = &init;
>> +
>> +	/* init DIV to a valid state */
>> +	clk_avb_div_write(avb->mod, avb->idx, AVB_MAX_DIV);
> Please check parameter, I think you want to do is
>
> 	- clk_avb_div_write(avb->mod, avb->idx, AVB_MAX_DIV);
> 	+ clk_avb_div_write(avb->mod, AVB_MAX_DIV, avb->idx);
>
> Best regards
> ---
> Kuninori Morimoto

