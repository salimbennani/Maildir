Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 12:18:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 078115802E4;
	Mon, 26 Nov 2018 18:28:04 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 26 Nov 2018 18:28:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AonK2fh/mrZah3f9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+8fIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOPf1Ar4T/vFYOsQeyCBOwCO/z1jNFhHn71rA63eQ7FgHG2RQtEdMUsH?=
 =?us-ascii?q?vOqtX1KLoZX+GvzKnVyzXMcvdW1inn6IPVdR0hruuMXa92ccXMzUkgCRnFg06M?=
 =?us-ascii?q?pozlJTOV0eENs2mG7+plT+6vjHQnqw5orzWp28wiiZHJi5oLxlzY8Sh12ps5KN?=
 =?us-ascii?q?OmREJhfNKpE4dcuzubOoZ0Ws8uXX1ktSIgxrAFuZO3ZjUGxZUmyhLFdvCKd4aF?=
 =?us-ascii?q?7xT+X+iLOzh4nmhqeLenihay70egzur8W9Gq0FZFsCVFiMPAtnMT2BzJ7MiIVP?=
 =?us-ascii?q?998l2m2TaV2ADf8uBEIUYqmqrHM5Mt3KI8m54JvUjeECL6hl/6gLKVe0k44OSl?=
 =?us-ascii?q?6ubqbq3jppCGNo90jg/+Mr4pmsy6Gek4NgkOX26G+eWzzbHj/lP2QK9MjvIolq?=
 =?us-ascii?q?nVqZfaJModpqGnGQ9YyZgj6xmhADe8ytgYnmcILEhDeB2Zi4jlIVbOIOr3Dfun?=
 =?us-ascii?q?mVSjjC9rx+zaPr3mGpjNKnnDkLT/crpn5E9c1RE+zdRe55JSF7EAL+j/Wk73tN?=
 =?us-ascii?q?zEEBA5Nxa4zPrgCNV4zokeQ36AAreFMKPOtl+F/uIvLPONZI8Jojn9LOIp5/7z?=
 =?us-ascii?q?jXAjn18dcrKk3Z8WaHC+A/RnLF+VYXvqgtcdD2gKuhAyQ/DtiF2HSTRTfWq9X7?=
 =?us-ascii?q?og5jEnD4KrFYXDRoezj7Cb3ye7GZtWZmZBCl2XFXfodoOEW+oDaS6II89hlCAE?=
 =?us-ascii?q?WqalS4M7yR6uswr6waJ9LuXI4i0YqY7j1N9t6uLJjhEy9Tt0D8eH32GXVW50nH?=
 =?us-ascii?q?gFRzs33KB5vEx8xU2P0al+g/xEC9NT4+lFXRs9NZ7Z1+Z6Ecz9WhrdfteVT1ar?=
 =?us-ascii?q?WtamDis3Tt4rx98OYlxyG9Otjh3Y2yqqArkVl6GEBZAu86Lc2WTxKNh5y3rcyK?=
 =?us-ascii?q?YhiFwmSNNVNWK6nq5/6xTTB4nRnkqEjamqa7oT0DTN9GiZy2qOp19XUAh3XaXB?=
 =?us-ascii?q?XnAfY0/WoM/95kPDSb+uFLsmPhFAyc6ENqtFdNnpgU9aS/fkPdTUe3ixlHuoBR?=
 =?us-ascii?q?aU2rOMa5LndHgH0yXDFkcIiQAT8myANQglGCihpXnTDDhvFVLpfkPt/vNyqHK9?=
 =?us-ascii?q?Tk8o0Q6Ka1dt2Kay+h4QnfacUe8c3qoYuCc9rDV5BEq939PTC9qHuwphfKVdbc?=
 =?us-ascii?q?kh4Ftd0mLZrQh9Pp2mL6BtnVMedwV3v0Xz1xR4EIlAkM4qrG80wwp2M66XzFRB?=
 =?us-ascii?q?dzaA15DqJrLXMnXy/Ayoa6POwF7e1MiZ+6gR5/U4sVnspxypGVc4/HVh0NlV1G?=
 =?us-ascii?q?Wc647ODAoTV5LxT0k2+wJ7p7Hcfiky+YfU2WdwPqmztz/Iw8gpC/c9yha8Y9df?=
 =?us-ascii?q?N7uJFQ/vE8EAG8eiMu0rm1izYRICM+Bf76o0P8Kgd/ub16+nJudgnDS6jWtZ5I?=
 =?us-ascii?q?BxyF6D9y15SuTQxZYK3+mY3hebVzf7lFqhqMH3lpxeajEIA2W/zjLoBIhPaa1o?=
 =?us-ascii?q?fIYHEHuhLNezxtpjmZHtQXlY9Fi4ClMC2c+pfweSblPn0Q1R00QXvWKomS+iwz?=
 =?us-ascii?q?NolDEpq7KV3DbSzOT6aBoHJmlLSXFijFftO4S1j8oWXFO1bwgvjxal4Uf6x65G?=
 =?us-ascii?q?pKVwNWXTQEFIfzToIGFmSKe/qr2CY8tX4pMyrSpXSPi8YUydSrPloRsVyTnjH2?=
 =?us-ascii?q?hdxDA8bT2qoY/2nx95iGKcKnZ8snzZdNp0xRfe4tzcWPFQ0iAHRCl+lTnYGFy8?=
 =?us-ascii?q?M8O18tWTkpfJqvq+WH65Vp1PbSnrypuNtSuh6m1tGxG/nfGzmtv8HAg+0C/70c?=
 =?us-ascii?q?RqVCrSoBb9ZInry7q1MeZ9ckZ0A1/87tJwGptinYsomJEQxX8ai42W/XUdkGf/?=
 =?us-ascii?q?K9Vb2b/kY3oLSj4G2NrV4Anj2E1+IXOF3YP5VnOBwsR/Y9m2eH8Z2iU478pSEq?=
 =?us-ascii?q?eb8KREnTdpolq/tQ/RZPl9njQHxvc05n8VnfoJuBYzwSWHGb8dA1NYPSP3mhSM?=
 =?us-ascii?q?7tC+qrhXZWm1fbix0kp+gc6uDLWYrg5AX3b5f48oHTVs4cVnLFLMzHrz55n4eN?=
 =?us-ascii?q?nXaNIfrByVnA3Gj+hIM5IxjfsKiDFjOWL8u30l1uE6gQZv3ZG8oIiINWFt8Lil?=
 =?us-ascii?q?DR5fMz3/f9kT9S31jaZCgsaW2JiiEY57FTUMWJvoUOikEDYPtfn8MwaOETs8qm?=
 =?us-ascii?q?qUGLbFHA+f7ltmoGzLE5yxK36XI3wZx814RBaBPExfnBwUXDIik547DA+qwdLu?=
 =?us-ascii?q?cFxj6jAN/FL4qQZMyuF1Nxn5SGjfvxylajM1SJiZMRpX4RtO50bTMcyC8O1zGz?=
 =?us-ascii?q?tU8YGmrAyIMmabfRhHDXkVWkyYAFDuJrmv5d7d8+iBG+qxNf3Oba+VqexZUfeI?=
 =?us-ascii?q?yomi0o9n/zaKK8WOMWNuD/w92kpfQ395H97VlCkISywSjyjNddKUpA+g+i1rqc?=
 =?us-ascii?q?Cy6PTrVxzu5YuMCLtSMM9j+xOsgaeEOO6fmjx5KStD1p4XwX/Iyb4f3EMdii10?=
 =?us-ascii?q?djmtF6gAujDJTK7KhqBXCBsbYTtpNMRU96I8whVNOcnDh9zvy753leQ1BElFVF?=
 =?us-ascii?q?D7nsGpZNcHI2W8NFPBGUaKO66KJTzNw8Hrf6y8Tadcg/lTtx21oTybCVPsPiyf?=
 =?us-ascii?q?lzn1UBCiKf1MjCCePBBEpI6xaApiCWj9Q9LgcRC7NN53jTsrwbw7nH/KNGgcMS?=
 =?us-ascii?q?RifENJtLGf8SRYgvBnEWxb8nVlNfWEmzqe7+TAKpcZq/1rAiF1l+Jc+Hs7yrtV?=
 =?us-ascii?q?4ztCRPx6gybSqt9uo1e7kuiA0DZnURxOqipVi4KPp0ltJaLZ9pwTEUrDqSgc5G?=
 =?us-ascii?q?OrTTAHqvNgA83uvqFW1tXAjqvvJTsE+NXRruUGAM2BB9iONmZpHgD0HjLQARFN?=
 =?us-ascii?q?GTGxKGfTg0FHuPqS7HqQr4U/7J/2l8xdGfdgSFUpG6ZCWQxeF9sYLcIyB2t8nA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAAAYq/xbh0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N5likUlygUgV8sEwGBS4cYIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII?=
 =?us-ascii?q?2JAGCYQEBAQECAQECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcgXoIB?=
 =?us-ascii?q?ZoWPIodcHwzgnYBAQWHKggSeYp+F4F/hCOEZ4MbgleJARqBeIR/ToRaikwJkS8?=
 =?us-ascii?q?YkQgsl3YwgSWCDU0wCGwGgjWCGwwXiF6FXx4zgQUBAY0WAQE?=
X-IPAS-Result: =?us-ascii?q?A0AXAAAYq/xbh0O0hNFjHgEGBwaBUQkLAYNrJ4N5likUlyg?=
 =?us-ascii?q?UgV8sEwGBS4cYIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECA?=
 =?us-ascii?q?QECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcgXoIBZoWPIodcHwzgnY?=
 =?us-ascii?q?BAQWHKggSeYp+F4F/hCOEZ4MbgleJARqBeIR/ToRaikwJkS8YkQgsl3YwgSWCD?=
 =?us-ascii?q?U0wCGwGgjWCGwwXiF6FXx4zgQUBAY0WAQE?=
X-IronPort-AV: E=Sophos;i="5.56,285,1539673200"; 
   d="scan'208";a="54943555"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 26 Nov 2018 18:28:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728208AbeK0NVP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 27 Nov 2018 08:21:15 -0500
Received: from mail-it1-f193.google.com ([209.85.166.193]:51984 "EHLO
        mail-it1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727625AbeK0NVO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Nov 2018 08:21:14 -0500
Received: by mail-it1-f193.google.com with SMTP id x19so31885086itl.1
        for <linux-kernel@vger.kernel.org>; Mon, 26 Nov 2018 18:24:58 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=chromium.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=G9zim7uzZUNY+cBiI9u29rK0FGLUENKvISsTwapuDQU=;
        b=EWzwJIntPI7J88l5F2f1Vo6GqZClKemxG5tvs7tP71ECV6soHmYvAV6xU+eFvK6Bz8
         acyUwjJHvNStf4bsI5G726qhb3bZZSrN1KTxkhvfTvnvxew8gcnn04lMiKlwTrB4BGih
         vNV0L1PHHDY0gYzl9Y06Hnx2LvtlbXlEc3xsQ=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=G9zim7uzZUNY+cBiI9u29rK0FGLUENKvISsTwapuDQU=;
        b=jZECUkYq6/aGpNmO4gkfiskiXjXmLrX2Hqus0NySrvhddXClTX5BSqeZ52lrIhPYoX
         ROAK1yvhpLRQ8oS7BMzIla1swpJtVlSVbD4zEW0ksbiWM6TE9BrlgTt40uy8+4XDZ16X
         9I+AhBpBgRyXRY7graaDG7xn39k6bdA6nkYb0ikXnTzgBfWN26dzShKRumdlfWZ2A2lb
         HzlLR8iZ1LaWQcjS8+I86uAg7dBeT2TXxNN7RIyqaTRzqUqjYjmgxB4t0DClroUkwW8B
         W0WAGJRCGB0vzq9qgfsucXLCLRvAy4Zc8DzYeF2VqyLL+8GbVRfD8LaUt6L4FO2yY/t5
         cLMQ==
X-Gm-Message-State: AGRZ1gIKD+IWvZMhxHHi9Jucvcgi7MYhICTPz0+L/YB+BQgqdOQAyKdN
        BAM9zP3GBFnExUgEh3vwbifrNsnekD+BmE2qtlffUw==
X-Google-Smtp-Source: AFSGD/Ve2gLhraHfvKWGc5xrdkFwVBYpqSdMVAw0HoVZjhA3Brodohh/nWeIxuSM9eu1BpSDNrYzjl3Te95a8x/wlwE=
X-Received: by 2002:a24:d1c6:: with SMTP id w189-v6mr26399613itg.38.1543285498037;
 Mon, 26 Nov 2018 18:24:58 -0800 (PST)
MIME-Version: 1.0
References: <20181126183942.2631-1-ryans.lee@maximintegrated.com>
In-Reply-To: <20181126183942.2631-1-ryans.lee@maximintegrated.com>
From: Grant Grundler <grundler@chromium.org>
Date: Mon, 26 Nov 2018 18:24:46 -0800
Message-ID: <CANEJEGu30oPGRjeK2Sp1dUj4CuFjZeZ9+-2DRwhvmMLNex3p7A@mail.gmail.com>
Subject: Re: [PATCH] ASoC: max98373: Added max98373_reset for stable amp reset
To: RyanS.Lee@maximintegrated.com
Cc: Liam Girdwood <lgirdwood@gmail.com>, broonie@kernel.org,
        perex@perex.cz, tiwai@suse.com,
        Grant Grundler <grundler@chromium.org>,
        Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>,
        Benson Leung <bleung@chromium.org>,
        alsa-devel@alsa-project.org, LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Ryan!

Just some questions inline - in general I like the reset function.

On Mon, Nov 26, 2018 at 10:46 AM Ryan Lee <RyanS.Lee@maximintegrated.com> wrote:
>
> Signed-off-by: Ryan Lee <ryans.lee@maximintegrated.com>
> ---
>  Changes : Created max98373_reset function to minimize code duplication.
>            Changed regmap_write to regmap_update_bits. Other bits except LSB need to be masked.
>            Added reset verification step to make sure software reset is completed well. Software reset is done in 10ms in normal case.
>            Revision ID is available when the amp is in the idle state which means software reset is completed.
>            Software reset will be performed maximum 3 times to avoid amp reset failure. Generally it is done in the first trial.
>            sleep time after software reset is increased + 30ms for every retrial. Maximum possible msleep time is 100 ms (initial 10 ms + 30 ms * 3 times).

Why is the sleep time increased after each SW reset?
What is the failure case that you've seen which would benefit from this?

>
>  sound/soc/codecs/max98373.c | 41 +++++++++++++++++++++++++++++++++++------
>  1 file changed, 35 insertions(+), 6 deletions(-)
>
> diff --git a/sound/soc/codecs/max98373.c b/sound/soc/codecs/max98373.c
> index a09d013..55af7f02 100644
> --- a/sound/soc/codecs/max98373.c
> +++ b/sound/soc/codecs/max98373.c
> @@ -724,14 +724,45 @@ static struct snd_soc_dai_driver max98373_dai[] = {
>         }
>  };
>
> +static void max98373_reset(struct max98373_priv *max98373, struct device *dev)
> +{
> +       int ret, reg, count, delay;
> +
> +       count = 0;
> +       while (true) {
> +               /* Software Reset */
> +               ret = regmap_update_bits(max98373->regmap,
> +                       MAX98373_R2000_SW_RESET,
> +                       MAX98373_SOFT_RESET,
> +                       MAX98373_SOFT_RESET);
> +               if (ret)
> +                       dev_err(dev, "Reset command failed. (ret:%d)\n", ret);
> +
> +               delay = 10000 + (count * 30000);
> +               usleep_range(delay, delay + 1000);
> +
> +               /* Software Reset Verification */
> +               ret = regmap_read(max98373->regmap,
> +                       MAX98373_R21FF_REV_ID, &reg);
> +               if (!ret) {
> +                       dev_info(dev, "Reset completed (retry:%d)\n", count);
> +                       break;

Instead of break, can the code return here?
"break" implies something else will happen after the while loop exits
- there isn't.

> +               }
> +
> +               if (++count > 3)        {
> +                       dev_err(dev, "Reset failed. (ret:%d)\n", ret);
> +                       break;
> +               }
> +               usleep_range(10000, 11000);

Why is there a second delay after reading MAX98373_R21FF_REV_ID?
Is this really necessary?

If the second usleep_range() isn't needed, it would be better/clearer
to make code loop on "while (count < 4)".   And then outside the while
loop, use dev_err() to share what the failure was.

> +       }
> +}
> +
>  static int max98373_probe(struct snd_soc_component *component)
>  {
>         struct max98373_priv *max98373 = snd_soc_component_get_drvdata(component);
>
>         /* Software Reset */
> -       regmap_write(max98373->regmap,
> -               MAX98373_R2000_SW_RESET, MAX98373_SOFT_RESET);
> -       usleep_range(10000, 11000);
> +       max98373_reset(max98373, component->dev);
>
>         /* IV default slot configuration */
>         regmap_write(max98373->regmap,
> @@ -818,9 +849,7 @@ static int max98373_resume(struct device *dev)
>  {
>         struct max98373_priv *max98373 = dev_get_drvdata(dev);
>
> -       regmap_write(max98373->regmap,
> -               MAX98373_R2000_SW_RESET, MAX98373_SOFT_RESET);
> -       usleep_range(10000, 11000);
> +       max98373_reset(max98373, dev);
>         regcache_cache_only(max98373->regmap, false);
>         regcache_sync(max98373->regmap);
>         return 0;
> --
> 2.7.4
>

cheers,
grant
