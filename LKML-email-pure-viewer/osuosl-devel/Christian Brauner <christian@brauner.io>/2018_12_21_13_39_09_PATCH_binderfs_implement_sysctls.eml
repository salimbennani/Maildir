Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:50:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C88EC580522;
	Fri, 21 Dec 2018 05:42:27 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 21 Dec 2018 05:42:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ApUKi9RZtbkfQcO2NN8fx7h3/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci4bB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhNF+gqxYpxyuqBNxw5XMYIyXL/dyYqDQcMkGSWdbQspdSypMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5Vopf9p1sUrBu+HhWsBOL1xT9Om3T7wLc63P48EQHAwgMgBc8FvX?=
 =?us-ascii?q?PIo9X1LqcSUPu1zLXJzTrZafNbwizy6JLSfRA8p/GDQ6hwfdDQyUkoDg7IiEib?=
 =?us-ascii?q?p4/9Pz6NyOgBr2yW4/B9We+hlWIrsRx9rzuzyss2i4TEhJoZx1LG+Clj3Yo4K8?=
 =?us-ascii?q?e0RFNlbdK5CpdcqiCXOohwT8g/WW9nojw6xacDuZOjfCgF1pAnxxnHZvyZfIiH?=
 =?us-ascii?q?/AjjWPySIThmnnJlfqywhxKo/Uin0O38WdG40FdMriVbjtnBrm4B2wDX58SdV/?=
 =?us-ascii?q?dw8Fmt1SyS2w3Q9u1IO0E5mKjDJ54k2LEwl54TsUrZHi/xnUX7lKuWdkQi+ui1?=
 =?us-ascii?q?5OXre7bmqYGGN49ylA7+Nr0imsuxAOQ+LAcORXOW+fqz1LL95031WrZKgeMskq?=
 =?us-ascii?q?nfrp/aId4XpqmjAw9ayooj8QqwDy+60NQEmnkKNFZFeBOEj4f3IV3PL+34AOy7?=
 =?us-ascii?q?g1Stljdr2v/HMqfgApXLMnjMjrPhcaxh5E5bzQo51cpf6I5MCrEdPPLzXVf8tN?=
 =?us-ascii?q?zCAR84Lwy72eHnBM991oMDQ22PBKCZPbjWsV+J4OIvPuaNaJUUuDb7N/gq+fru?=
 =?us-ascii?q?gWUlll8aeKmjxYEXZ2ygHvR6P0WZZmLhjc0aEWcKuQo+T/bmiEeYXj5RfHuyW6?=
 =?us-ascii?q?M85jcmCIOpF4vDR4atgKCf0ye/BJFZemdGClWUG3fya4qEQ+sMaD6VIsJ5kTwL?=
 =?us-ascii?q?T76hR5Ul1RGvrgD6zbVnI/HQ+i0Zs5Ljydd06/fSlRE06Tx7EcCd33uRQGFzm2?=
 =?us-ascii?q?MCXyU207xnoUxh1leD1rB1jOFCGtxN+fxFSAc6OoTaz+xhFd/yXAXNftOKSFaj?=
 =?us-ascii?q?RtWrGjUxTtM3w98TbEdxAdSijhbf3yW0B78ZjaCEBJsx8qjExXj+O959y2ra1K?=
 =?us-ascii?q?kml1QpX9FANXO4iaJl9wjcHYjJk16HmKasbqkc2C/N9GGezWuBpk1YUQhwUbnb?=
 =?us-ascii?q?UnAbfEfZsdP55kbaRb+0FbsnKhdBydKFKqZSdt3pjFBGRPD/ONTeY2O9gXuwCQ?=
 =?us-ascii?q?yPxrOWaIrqemMd3CrGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYPivyYVfwS0awLuSc7pzpvAVaywsjZC9yDpwpmYqVRet?=
 =?us-ascii?q?c94FZB1WLEuA1xJJ2gL6Z+hlEAdwR7pV/h1xJyCo9Yi8glsGsqzBZuKaKfyF5A?=
 =?us-ascii?q?dy6Y0YrsNbHNK2jy/Aqga6jZ2lzF1NaW+6EP6Ok3qln5vQGpEFYi/Gtj09VPz3?=
 =?us-ascii?q?Sc4ZDKBhIIUZ3tSkY36wR6p7bCbykn5oPbyWdjMbOpvT/Fwd4pAvUqygyhf9tG?=
 =?us-ascii?q?LKyLDgvyHNAECMi0L+wqnUOkbhYFPOBU6a41MNmqd/qA2K63IulgmCiqgnhA4I?=
 =?us-ascii?q?B4ykiM7TZzSvbU35YZxPGVxguGVzbmgFahqMz3gp1EZTcJE2q7yCjkApNRZ6Jo?=
 =?us-ascii?q?cYYKD2euP9O4xtFki5HxXH5Y8UapB0ka18+xZRqSc1v90BVS1UsNu3ynmii4zz?=
 =?us-ascii?q?tunzEytKWf3y/Ow+XkdBUZPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreDY9RA6JQyvSVVUeS8Z0uXSrr8oxscziPiEH?=
 =?us-ascii?q?FSxDE9dzG2pJr5mwZ2h36aLHZ2tHDZY91/xQ/D5NzAQv5cxjkGSzN5iTXNBli8?=
 =?us-ascii?q?IsOm/dObl5rYtuC+VmShVoBccCXxzIOAsje76nNuARGlg/+zndjnGxAg0SDnz9?=
 =?us-ascii?q?lqSTnIrBHkb4nu1qS6MvhoclNmBVDi8Mp6Bp9xkpEri54Ow3gaiY6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwj4978dPCK?=
 =?us-ascii?q?uO7b1Lhy11okejrQLKYPhwhTMdyfoo6H4HjOAFogstziOBAr8MGUlUJzDjlxON?=
 =?us-ascii?q?79qmtqVYeH6vcaSs1Ep5hd2uF6uNogZYWHbkYJsiGTJw4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj3ZOgs4iCNWpt57i1?=
 =?us-ascii?q?AgJCOj32esMT+SztjaBEkcaNxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPJHgZyshiRACAJENFhgAYRi46npk/FgCl38Hh?=
 =?us-ascii?q?dEZ55jYM5l/3sBdMy+RoNwXhXWfbvgundjA0SJ2HJhpM8g5C/1vVMdCZ7u9rHy?=
 =?us-ascii?q?FX4JyhrA+OKmyafQhIDnsJWkuLB1/9JLmu+MLA/vOcBuq/KfvOfLqPpfZfV/eO?=
 =?us-ascii?q?2ZKgzI9m8yyQOcWIO3loF+c71VZbXXBlB8TZnC0CRDYKly3Wdc6Uuhe99jdzrs?=
 =?us-ascii?q?C+6/nrXAPv5Y2SC7pdK9lv+ha2gbudOO6Unip2NTFY1pYUz3/S1LcfxEISiz1p?=
 =?us-ascii?q?dzS1DbQAtCvNQLjMlaNNExEbaz18NM1T4qI43wlNP9Pbi9zv2r55iP41F0lKVV?=
 =?us-ascii?q?j7ls61YswKJnm3NEnbC0aTKLSGOTrLztn3YKymT71QieRUtxuotjeaE0/sJDKD?=
 =?us-ascii?q?lzbyWhCrMOFMijybPRNEtIG8dBZtFXbsTNb8ZhKnN993iG5+/bphiWnHOm0cGT?=
 =?us-ascii?q?x9dV5doLqN6y9RnvR4HSpG9HUhZfWHmSGCx+DeJowRsPctCSNx06pW7Wo3z5NZ?=
 =?us-ascii?q?9iBaSeZ5lTWUqcVzpEqi1O6VxX4vVBtItyYOh4+Ru0hmEbvW+4MGWnve+h8Jq2?=
 =?us-ascii?q?KKBEckvdxgX/bvoaFL1tnGkurZMj5f9d/OtZ8XB9LVM96GOXwJOwDgBTjZFk0E?=
 =?us-ascii?q?Smj4Zinkm0VBnaTKpTWupZ8gp820lQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAAA7Rxch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBZfix2CIZdLgXMTAQEYEwGHMCI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCOiKCdgIkCwENAQE3AQUJAlADMQEFASMSBYMdggIEAZopPIopg?=
 =?us-ascii?q?WwzgnYBAQWBAIYuCBKHbIMlgRwXgX+BEYdthgWPYpFlCYIphCmLCyRiiRgMh1g?=
 =?us-ascii?q?BiVONDIMWAgQCBAUCBQ8hgSWCDjMaLIMzghsMF4Yuh3A/MoEEAQEBO4sIgkwBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0ARAAAA7Rxch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBZfix2CIZdLgXMTAQEYEwGHMCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCO?=
 =?us-ascii?q?iKCdgIkCwENAQE3AQUJAlADMQEFASMSBYMdggIEAZopPIopgWwzgnYBAQWBAIY?=
 =?us-ascii?q?uCBKHbIMlgRwXgX+BEYdthgWPYpFlCYIphCmLCyRiiRgMh1gBiVONDIMWAgQCB?=
 =?us-ascii?q?AUCBQ8hgSWCDjMaLIMzghsMF4Yuh3A/MoEEAQEBO4sIgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,381,1539673200"; 
   d="scan'208";a="58449406"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 05:42:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2390685AbeLUNjX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 08:39:23 -0500
Received: from mail-ed1-f66.google.com ([209.85.208.66]:33474 "EHLO
        mail-ed1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728307AbeLUNjX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 08:39:23 -0500
Received: by mail-ed1-f66.google.com with SMTP id p6so4719131eds.0
        for <linux-kernel@vger.kernel.org>; Fri, 21 Dec 2018 05:39:21 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=brauner.io; s=google;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=W+VY3zf/nmrL1czfGr0TGy1mwmyDR4wWasYxmsNKmlM=;
        b=DZrXM28kUPvEwXiOjY7C4XAnvNaIosMMU0yt23kdqYEjB4W3ObD9pGLmdbEMrXfvjm
         LUmdLIHrtq7uw2GO1j8pP5LBCj8IWizdUh88xFxPfnbUxZM0V8PBzIdqJxHY1iPsipM5
         Xbg+HDBq/kvBJjuymVverrfP8fGKRXR/Gtn90BKqZ3FZZZEvweEbw/dshfrsVsYn5VIH
         8FT2rGEWSI2hwicz3EITO4z/6JgKGcLCQrFDTJ/e7rfc6aK+vcDDgpw2E2MTNsggQ1IS
         EdAst5ibs8r692Uiu3qtFF9EEgnQy4r7wnO69YQWrjD4vky7bSGc0UA03Xo8Y891h2XV
         O+Bg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=W+VY3zf/nmrL1czfGr0TGy1mwmyDR4wWasYxmsNKmlM=;
        b=AdoWW8EUlxOkGSNiAa0U+JnpOvqX+RJLtXYWxh6jTr5J+BwkVQQAWhVSfEXAXJqcL+
         G9Jmv12Hu+LzRvSp+htvJ1iyxrTGz5YK+yXFoomCkESOqbGlYEzq53BfeMfonGC+skyI
         ATK3lwpdCDgbOsdZVepDieqOrzCnZZTW0UkVl9NNQDeQdWl3LPRu3fl4LxPBaE79wmP9
         OpDn5edmIYt1Tk/xZE2AAUbNnY72bNZYsatwl7dRkxjp80hrbZjCbv0SLfzl6h0UIwXl
         VvgGu9fl5xI8B8ahNDqhXizdjMqzIzM/4cWa1AH9tNqPUQ4yGLQf9/DGyPy8aCPEyySq
         eQDw==
X-Gm-Message-State: AA+aEWaonoB6K5Id/VXTvGJ01mbu/0hljHHtNH/CtOP0FRtx1C5qzKJL
        OXeum0Rd7FoLUlt/d1gcq+dRJQ==
X-Google-Smtp-Source: AFSGD/VJ2xhM2ioiJCf3OBOzvbjcb8HjT6Lts839W9GNAxBb1dRfi0/gfwnawUEOAisRJieQedA+iw==
X-Received: by 2002:a17:906:2e4f:: with SMTP id r15-v6mr2121065eji.198.1545399560561;
        Fri, 21 Dec 2018 05:39:20 -0800 (PST)
Received: from localhost.localdomain (x4d0d79a8.dyn.telefonica.de. [77.13.121.168])
        by smtp.gmail.com with ESMTPSA id c53sm7130073ede.26.2018.12.21.05.39.18
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 05:39:19 -0800 (PST)
From: Christian Brauner <christian@brauner.io>
To: gregkh@linuxfoundation.org, tkjos@android.com,
        devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org
Cc: arve@android.com, maco@android.com, joel@joelfernandes.org,
        Christian Brauner <christian@brauner.io>
Subject: [PATCH] binderfs: implement sysctls
Date: Fri, 21 Dec 2018 14:39:09 +0100
Message-Id: <20181221133909.18794-1-christian@brauner.io>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
X-Patchwork-Bot: notify
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This implements three sysctls that have very specific goals:

1. /proc/sys/fs/binder/max:
   Allow global root to globally limit the number of allocatable binder
   devices.
2. /proc/sys/fs/binder/nr:
   Allow global root to easily detect how many binder devices are currently
   in use across all binderfs mounts.
3. /proc/sys/fs/binder/reserved:
   Ensure that global root can reserve binder devices for the initial
   binderfs mount in the initial ipc namespace to prevent DOS attacks.

This is equivalent to sysctls of devpts.

Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
---
 drivers/android/binderfs.c | 81 +++++++++++++++++++++++++++++++++++++-
 1 file changed, 79 insertions(+), 2 deletions(-)

diff --git a/drivers/android/binderfs.c b/drivers/android/binderfs.c
index 7496b10532aa..5ff015f82314 100644
--- a/drivers/android/binderfs.c
+++ b/drivers/android/binderfs.c
@@ -64,6 +64,71 @@ struct binderfs_info {
 
 };
 
+/* Global default limit on the number of binder devices. */
+static int device_limit = 4096;
+
+/*
+ * Number of binder devices reserved for the initial binderfs mount in the
+ * initial ipc namespace.
+ */
+static int device_reserve = 1024;
+
+/* Dummy sysctl minimum. */
+static int device_limit_min;
+
+/* Cap sysctl at BINDERFS_MAX_MINOR. */
+static int device_limit_max = BINDERFS_MAX_MINOR;
+
+/* Current number of allocated binder devices. */
+static atomic_t device_count = ATOMIC_INIT(0);
+
+static struct ctl_table binderfs_table[] = {
+	{
+		.procname	= "max",
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.data		= &device_limit,
+		.proc_handler	= proc_dointvec_minmax,
+		.extra1		= &device_limit_min,
+		.extra2		= &device_limit_max,
+	},
+	{
+		.procname	= "reserve",
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.data		= &device_reserve,
+		.proc_handler	= proc_dointvec_minmax,
+		.extra1		= &device_limit_min,
+		.extra2		= &device_limit_max,
+	},
+	{
+		.procname	= "nr",
+		.maxlen		= sizeof(int),
+		.mode		= 0444,
+		.data		= &device_count,
+		.proc_handler	= proc_dointvec,
+	},
+	{}
+};
+
+static struct ctl_table binderfs_fs_table[] = {
+	{
+		.procname	= "binder",
+		.mode		= 0555,
+		.child		= binderfs_table,
+	},
+	{}
+};
+
+static struct ctl_table binderfs_root_table[] = {
+	{
+		.procname	= "fs",
+		.mode		= 0555,
+		.child		= binderfs_fs_table,
+	},
+	{}
+};
+
 static inline struct binderfs_info *BINDERFS_I(const struct inode *inode)
 {
 	return inode->i_sb->s_fs_info;
@@ -107,13 +172,21 @@ static int binderfs_binder_device_create(struct inode *ref_inode,
 	struct inode *inode = NULL;
 	struct super_block *sb = ref_inode->i_sb;
 	struct binderfs_info *info = sb->s_fs_info;
+	bool use_reserved = (info->ipc_ns == &init_ipc_ns);
 
 	/* Reserve new minor number for the new device. */
 	mutex_lock(&binderfs_minors_mutex);
-	minor = ida_alloc_max(&binderfs_minors, BINDERFS_MAX_MINOR, GFP_KERNEL);
+	if (atomic_inc_return(&device_count) <
+	    (device_limit - (use_reserved ? 0 : device_reserve)))
+		minor = ida_alloc_max(&binderfs_minors, BINDERFS_MAX_MINOR,
+				      GFP_KERNEL);
+	else
+		minor = -ENOSPC;
 	mutex_unlock(&binderfs_minors_mutex);
-	if (minor < 0)
+	if (minor < 0) {
+		atomic_dec(&device_count);
 		return minor;
+	}
 
 	ret = -ENOMEM;
 	device = kzalloc(sizeof(*device), GFP_KERNEL);
@@ -187,6 +260,7 @@ static int binderfs_binder_device_create(struct inode *ref_inode,
 	kfree(name);
 	kfree(device);
 	mutex_lock(&binderfs_minors_mutex);
+	atomic_dec(&device_count);
 	ida_free(&binderfs_minors, minor);
 	mutex_unlock(&binderfs_minors_mutex);
 	iput(inode);
@@ -239,6 +313,7 @@ static void binderfs_evict_inode(struct inode *inode)
 		return;
 
 	mutex_lock(&binderfs_minors_mutex);
+	atomic_dec(&device_count);
 	ida_free(&binderfs_minors, device->miscdev.minor);
 	mutex_unlock(&binderfs_minors_mutex);
 
@@ -536,6 +611,8 @@ static int __init init_binderfs(void)
 		binderfs_mnt = NULL;
 		unregister_filesystem(&binder_fs_type);
 		unregister_chrdev_region(binderfs_dev, BINDERFS_MAX_MINOR);
+	} else {
+		register_sysctl_table(binderfs_root_table);
 	}
 
 	return ret;
-- 
2.19.1

