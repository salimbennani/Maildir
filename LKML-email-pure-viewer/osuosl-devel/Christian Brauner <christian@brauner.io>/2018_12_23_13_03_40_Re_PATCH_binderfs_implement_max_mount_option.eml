Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 16:00:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4D86158049E;
	Sun, 23 Dec 2018 05:03:53 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Dec 2018 05:03:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0IEsuRAaLWS7DBOwRDc3UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/p8SwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypVUBrQCmBQSuH+7v1iNEi2Xq0aEmyeksEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34ObkSUeCvzanI1inDb/JM1jf79YPFbwohruuRXbJ2b8XR01QkGgTZgVWQ?=
 =?us-ascii?q?s4zlPiiV1vgMs2eB6eptTvmgi3Q9pAFspDig2N0shpPIhoIS013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fdqpHIFNuyyUKYd6WN4uTmJ0tCogy7ALu4a3cSwXxJg92hLSaOaLf5aV?=
 =?us-ascii?q?7h/gTuqdPDl1iXNjdbminRi961Kgxff5VsSs0FZFsC5Fkt7Uu3AT2Bzc9NKHRu?=
 =?us-ascii?q?F+/ki/wzaP0R7c6uVeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFnygaOMa0kp9Pak?=
 =?us-ascii?q?5/76brjlupOQLY55hwPmPqQrgMO/AOA4MgYUX2ic/OSxzLnj/Uz/QLVXgfw6i6?=
 =?us-ascii?q?rZv47AJcQduKG5BxZZ0oEt6ha5ETimys8VnWcILF1bYhKLlYvpNE/UIPD+E/i/?=
 =?us-ascii?q?h06gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPYqUWI6f43I+mQeI8Vvy7wK/g/6P7v?=
 =?us-ascii?q?kX82g1gdcbOp3ZsKcn+4GPtmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2EYdNZmBGDVCMEm3kd5+eVPcOcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mF0GGCVWd0kn?=
 =?us-ascii?q?kMRz83xq9/p0N9x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDbFtnFNW8kB/PxSqqDKUTl7yQGpM09KXQ33zyJ8Z4z3bLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajK?=
 =?us-ascii?q?QGoQZlXIotjj5kPNVbmuCa85PQtH0sOCLqpKatv0jVRJXvvjOdLeY36vlGe0Hx?=
 =?us-ascii?q?qH2rSMbI/ycWUHwCrdEFQEkxwU/XueKQg+ByKho2XCDDxuFVPjeV/s/fN5qHOh?=
 =?us-ascii?q?Sk80zgeKb0J62rqx+x4Vg+GcSvwJ0rIFvichtyt7HFKn093KDNqAohJrfL9Abt?=
 =?us-ascii?q?Ml/FdHyWXZuhRnMZykMa9jiUARcgRts0z1yhV4F59Pkc4prHMt0gp/MqaY0FJH?=
 =?us-ascii?q?dzOF0pH8ILzXKm/u/B+xb67awE3R0NGT+q0X8vQ3t03jvB21Fkol63hm08RV32?=
 =?us-ascii?q?GA6ZnQDQsSUYj+UkA49xVho7HaYy89557b1HF2MKm0tCPC1MwtBOc/1hmgeNJf?=
 =?us-ascii?q?OrueFADuC80aG9SuKOsyllizbxILIPpd9LQpMMOhbfeG3rCkPPxhnD6/kWtI+o?=
 =?us-ascii?q?R93V+S+CpmTe7I2Y0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn57sW39C+F+jHV8Gw9KpeRyJYlz53A1Q01kXoHO9lSu5yT?=
 =?us-ascii?q?x0jy8mrq6F0CPSxOTicQINOnRXS2l6kVfsPY+0gsgYXEeydQgplxil5UHgy6hA?=
 =?us-ascii?q?vqt/LGrTQUZOfyfoKWFvSa+wtruEY85S55IkqyRXUOKgYV+ETr7xuQcV0yTmH2?=
 =?us-ascii?q?FG3jA0aymquonlnxx9kG+cLGx8rH3DdcFyxBff4sfRRfpQ3joAWSl5hiPbBlm6?=
 =?us-ascii?q?P9m149qUk43Pvfy5V2KkTpdTazXkzZuctCun4m1nGR6/kOqymtH9EQg6zDX019?=
 =?us-ascii?q?9lVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL7bXoNRiQEz8Tb4Qf7w01jMmyGx5jiWXqD2MthaMK3YmcX2iI78sBLB7?=
 =?us-ascii?q?2Y7L1CnStpvFW4qRjdbuR6njcY0fEu8mIVg/kVuAoxySWQGqwSHU5dPSD2lhWH?=
 =?us-ascii?q?9da+rLhMZGa0cLi9z05+ndGnDLGfrQBQQnf5epE+HSBu6sVzKk7D0Hr26ov8Yt?=
 =?us-ascii?q?nfccoTtgGIkxfHl+VaM4g+lv0OhSp6I279uWAlxvU/jRxv25G6oYeGJ39s/KK/?=
 =?us-ascii?q?Hh5XKDn1a9kP9THqiKZUhtyW0Jy3HpV9BjULW4PlTfCyHzIXq/vnLByCECEmpn?=
 =?us-ascii?q?eYBLrfHhKf6EF8oHLUCJ2rM3CXJH8EzdRtXhWdJUpfgBwKUzU+hJI2CgeqxMn5?=
 =?us-ascii?q?ekdj+j8R/kL4qgdLyu9wNxj/VXrfpB61ajguTpiTNgFW7gZE50faKsGe6uNzHy?=
 =?us-ascii?q?dF/pyutgCNK2qbZxhWAmENQECLG1fjPry279na7+eYHva+L+fJYbiWqexRSfaI?=
 =?us-ascii?q?xZGs0otn5TqMNd+PPn5tD/IlwEpDQGt5Ft/dmzUOTSwXii3MY9SapBe65i14sM?=
 =?us-ascii?q?S//O73VwLo4IuFE6FSPsl3+xCqnaeDMPadizxkKTlDzJMD23/JxKIb3F4TkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdSV?=
 =?us-ascii?q?zhm8SpadYWLG2nKFzHBFiENLKdKD3PwsH3Z768SLJKgOVVsR2wpSiUE0v5Mjuf?=
 =?us-ascii?q?kDnpUgilMftQgyGDIBxepIa9fw5tCGf5StLmbxy7MNlvgjw3wb07nHXKNWEHPD?=
 =?us-ascii?q?h4ckNNqKCQ7CxCjvV+HWxB8mRqLe2elymF6OnYL8Vejfw+LT55mKp5wDxuxKFY?=
 =?us-ascii?q?4yJEbPh0njbCoNlzpV2vjuiIzHxgShUY+RhRg4felkV4OL7F95BGEVze9Q8L4H?=
 =?us-ascii?q?/YXx8Kvdp+FtzmvYha0NHSkq/pbjZFpYGHtfAADtTZfZrUeEEqNgDkTXuNVFMI?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAACnhh9ch0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUwMBAQEBCwGDayeDfoh4ixqCDRSXTxSBcgEBKwGHMCI2Bw0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQoLCQgpIwyCOikBgmYBAQEBAgEBAiAEGQEBNwEFCQEBChgCA?=
 =?us-ascii?q?gUTDgICAwwlAQUBAhoGGIMdgXoIBAGaJDyKKXB8M4J2AQEFhxgIEnmKGIEcF4F?=
 =?us-ascii?q?/gRGDEoRbDoMggleWKosjCYIpiC6HBiRiiRkMhGGCfpoCBgIJBw8hgSwKgX0zG?=
 =?us-ascii?q?iyDM4IbDBeGLodwPzKBBAEBAYp7gkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ADAACnhh9ch0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUwM?=
 =?us-ascii?q?BAQEBCwGDayeDfoh4ixqCDRSXTxSBcgEBKwGHMCI2Bw0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QoLCQgpIwyCOikBgmYBAQEBAgEBAiAEGQEBNwEFCQEBChgCAgUTDgICAwwlAQU?=
 =?us-ascii?q?BAhoGGIMdgXoIBAGaJDyKKXB8M4J2AQEFhxgIEnmKGIEcF4F/gRGDEoRbDoMgg?=
 =?us-ascii?q?leWKosjCYIpiC6HBiRiiRkMhGGCfpoCBgIJBw8hgSwKgX0zGiyDM4IbDBeGLod?=
 =?us-ascii?q?wPzKBBAEBAYp7gkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,386,1539673200"; 
   d="scan'208";a="57525005"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Dec 2018 05:03:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728525AbeLWNDq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sun, 23 Dec 2018 08:03:46 -0500
Received: from mail-wr1-f68.google.com ([209.85.221.68]:45951 "EHLO
        mail-wr1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728293AbeLWNDp (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 23 Dec 2018 08:03:45 -0500
Received: by mail-wr1-f68.google.com with SMTP id t6so9458469wrr.12
        for <linux-kernel@vger.kernel.org>; Sun, 23 Dec 2018 05:03:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=brauner.io; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=P7u1qejgc2zqdoyNiMvAOMoq7pr8atJFhxSQaG9DqRA=;
        b=GNJ6WuiJnWFudy5TyisoNtE6CB9QxamXbh8D8fTDqtlepAWY8a4Sk5o7cu5q6J/eje
         5f+Q4DiITmrj9i6b8jL8+N8uFr7uI6wgxaZbxPblFmxq2rERhawCI+CXnRFy7xm1TPpP
         EuuuhMb3kHWFlJlflGvJTacY7lBgH54YCCHseRuH/skkdr4yIatbd8bBW6s7AiMFvJha
         FtQgH/+VeL0t7EUNCsiQGFxYuZgDuprPpaDPu+G9on/9llavtjmLNvrzJ34RMRl4RFGl
         +QA68xNB0i6sdmEPfIx9AoaZGsgG79BwyIpt9aeyMH4jHXB+zhjC//OWCXhP7N/HB+el
         Kvig==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=P7u1qejgc2zqdoyNiMvAOMoq7pr8atJFhxSQaG9DqRA=;
        b=DE2oL4CE2H4jQMqH3VLRyp8/IaT1vxmvJob++PTH0GADdqeJOI/aEyTDvI0D1lq1pt
         aRQXB9Ykob9UAyhpd6URiwEb5eeJM2noNKpxH2mqmRMU2kY9BhB2F+jaxXbxWg6fUh7p
         9x/LBCBrhdq7isbI26QV2N6HmWQF/47+D3u4pJLh16zYzgJBB3j3yunAWiVeZwUn6WSV
         fhEWVV++yTeDgyfsY2IWKhl9iFMJmiMbJdUQn/gtwXl6yAdhzvikRQjj2FuFDxsxkpRl
         +SRFvYWlL1YM3QF7xkrIYJavCeguw2NOS8vnp7i46GprShnrWVOZ8UIQ4QW3IHETwkbz
         0p8g==
X-Gm-Message-State: AJcUukeUi/g43BH5fUje2SneHQryPJsbCS/PjgC/Qs7y344fqYKId2LM
        z5n6IGocJL6/wH1uUcD8cZgH/SmWLTz6tg==
X-Google-Smtp-Source: ALg8bN4iBEhcjb8+CKB3ifleYCFHwI1FLWwNl+aUFepxkoQoHyGUz8E6VNZti6y3TzeeA9McWgFCRA==
X-Received: by 2002:adf:ce02:: with SMTP id p2mr9526883wrn.185.1545570222635;
        Sun, 23 Dec 2018 05:03:42 -0800 (PST)
Received: from brauner.io (p5B12DA88.dip0.t-ipconnect.de. [91.18.218.136])
        by smtp.gmail.com with ESMTPSA id h13sm17706191wrp.61.2018.12.23.05.03.40
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sun, 23 Dec 2018 05:03:41 -0800 (PST)
Date: Sun, 23 Dec 2018 14:03:40 +0100
From: Christian Brauner <christian@brauner.io>
To: Greg KH <gregkh@linuxfoundation.org>
Cc: tkjos@android.com, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org, joel@joelfernandes.org,
        arve@android.com, maco@android.com, Todd Kjos <tkjos@google.com>
Subject: Re: [PATCH] binderfs: implement "max" mount option
Message-ID: <20181223130339.iyadarp53jhu4byi@brauner.io>
References: <20181222211806.1478-1-christian@brauner.io>
 <20181223112944.GC27818@kroah.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181223112944.GC27818@kroah.com>
User-Agent: NeoMutt/20180716
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sun, Dec 23, 2018 at 12:29:44PM +0100, Greg KH wrote:
> On Sat, Dec 22, 2018 at 10:18:06PM +0100, Christian Brauner wrote:
> > Since binderfs can be mounted by userns root in non-initial user namespaces
> > some precautions are in order. First, a way to set a maximum on the number
> > of binder devices that can be allocated per binderfs instance and second, a
> > way to reserve a reasonable chunk of binderfs devices for the initial ipc
> > namespace.
> > A first approach as seen in [1] used sysctls similiar to devpts but was
> > shown to be flawed (cf. [2] and [3]) since some aspects were unneeded. This
> > is an alternative approach which avoids sysctls completely and instead
> > switches to a single mount option.
> > 
> > Starting with this commit binderfs instances can be mounted with a limit on
> > the number of binder devices that can be allocated. The max=<count> mount
> > option serves as a per-instance limit. If max=<count> is set then only
> > <count> number of binder devices can be allocated in this binderfs
> > instance.
> 
> Ok, this is fine, but why such a big default?  You only need 4 to run a
> modern android system, and anyone using binder outside of android is
> really too crazy to ever be using it in a container :)
> 
> > Additionally, the binderfs instance in the initial ipc namespace will
> > always have a reserve of at least 1024 binder devices unless explicitly
> > capped via max=<count>.
> 
> Again, why so many?  And why wouldn't that initial ipc namespace already
> have their device nodes created _before_ anything else is mounted?

Right, my issue is with re-creating devices, like if binderfs gets
unmounted or if devices get removed via rm. But we can lower the number
to 4 (see below).

> 
> Some comments on the patch below:

Thanks!

> 
> > +/*
> > + * Ensure that the initial ipc namespace always has a good chunk of devices
> > + * available.
> > + */
> > +#define BINDERFS_MAX_MINOR_CAPPED (BINDERFS_MAX_MINOR - 1024)
> 
> Again that seems crazy big, how about splitting this into two different
> patches, one for the max= stuff, and one for this "reserve some minors"
> thing, so we can review them separately.

Yes, let's do that. I will also lower this to 4 reserved devices.

> 
> >  
> >  static struct vfsmount *binderfs_mnt;
> >  
> > @@ -46,6 +52,24 @@ static dev_t binderfs_dev;
> >  static DEFINE_MUTEX(binderfs_minors_mutex);
> >  static DEFINE_IDA(binderfs_minors);
> >  
> > +/**
> > + * binderfs_mount_opts - mount options for binderfs
> > + * @max: maximum number of allocatable binderfs binder devices
> > + */
> > +struct binderfs_mount_opts {
> > +	int max;
> > +};
> > +
> > +enum {
> > +	Opt_max,
> > +	Opt_err
> > +};
> > +
> > +static const match_table_t tokens = {
> > +	{ Opt_max, "max=%d" },
> > +	{ Opt_err, NULL     }
> > +};
> > +
> >  /**
> >   * binderfs_info - information about a binderfs mount
> >   * @ipc_ns:         The ipc namespace the binderfs mount belongs to.
> > @@ -55,13 +79,16 @@ static DEFINE_IDA(binderfs_minors);
> >   *                  created.
> >   * @root_gid:       gid that needs to be used when a new binder device is
> >   *                  created.
> > + * @mount_opts:     The mount options in use.
> > + * @device_count:   The current number of allocated binder devices.
> >   */
> >  struct binderfs_info {
> >  	struct ipc_namespace *ipc_ns;
> >  	struct dentry *control_dentry;
> >  	kuid_t root_uid;
> >  	kgid_t root_gid;
> > -
> > +	struct binderfs_mount_opts mount_opts;
> > +	atomic_t device_count;
> 
> Why atomic?
> 
> You should already have the lock held every time this is accessed,
> so no need to use an atomic value, just use an int.
> 
> >  	/* Reserve new minor number for the new device. */
> >  	mutex_lock(&binderfs_minors_mutex);
> > -	minor = ida_alloc_max(&binderfs_minors, BINDERFS_MAX_MINOR, GFP_KERNEL);
> > +	if (atomic_inc_return(&info->device_count) < info->mount_opts.max)
> 
> No need for atomic, see, your lock is held :)

Habit, to be honest.

Thanks, fixed version to follow in a bit.
Christian
