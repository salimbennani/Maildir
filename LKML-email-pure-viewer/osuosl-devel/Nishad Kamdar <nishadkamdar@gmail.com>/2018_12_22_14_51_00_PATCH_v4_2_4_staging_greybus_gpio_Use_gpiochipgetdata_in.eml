Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:58:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7F65E5805CF;
	Sat, 22 Dec 2018 09:37:11 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 22 Dec 2018 09:37:11 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+qPoARR1M8E+9gPPfKDwji1v29psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64Zx2At8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmwCgm3HOPiyCRFhmPq0aAgz+gtDRvL0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6tzanI1jXDYOlL1jzg7YbHaBUhruyWUrJqbMHczk8vFwLejlWQ?=
 =?us-ascii?q?s4PqIjCV2f4Is2eG9eVgT/mii2Eiqw5rozivwt0ghZXOhoIQ013J8zhyzoUtJd?=
 =?us-ascii?q?CgVkJ3fdqpHIFNuyyUKYd6WN4uTmJ0tCogy7ALu4a3cDUWxJkm3RLSa+GLf5KW?=
 =?us-ascii?q?7h/jTuqdPCt0iXBjdbminRi961Kgxff5VsSs0FZFsC5Fkt7Uu3AT2Bzc9NKHRu?=
 =?us-ascii?q?F+/ki/wzaP0R7c6uVeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFnygaOMa0kp9Pak?=
 =?us-ascii?q?5/76brjlupOQLY55hwPmPqQrgMO/AOA4MgYUX2ic/OSxzLnj/Uz/QLVXgfw6i6?=
 =?us-ascii?q?rZv47AJcQduKG5BxZZ0oEt6ha5ETimys8VnWcILF1bYhKLlYvpNE/UIPD+E/i/?=
 =?us-ascii?q?h06gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPYqUWI6f43I+mQeI8Vvy7wK/g/6P7v?=
 =?us-ascii?q?kX82g1gdcbOp3ZsKcn+4GPtmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2EYdNZmBGDVCMEm3kd5+eVPcOcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mF0GGCVWd0kn?=
 =?us-ascii?q?kMRz83xq9/p0N9x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDbFtnFNW8kB/PxSqqDKUTl7yQGpM09KXQ33zyJ8Z4z3bLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajK?=
 =?us-ascii?q?QGoQZlXIotjj5kPNVbmuCa85PQtH0sOCLqpKatv0jVRJXvvjOdLeY36vlGe0Hx?=
 =?us-ascii?q?qH2rSMbI/ycWUHwCrdEFQEkxwU/XueKQg+ByKho2XCDDxuFVPjeV/s/fN5qHOh?=
 =?us-ascii?q?Sk80zgeKb0J62rqx+x4Vg+GcSvwJ0rIFvichtyt7HFKn093KDNqAohJrfL9Abt?=
 =?us-ascii?q?Ml/FdHyWXZuhRnMZykMa9jiUARcgRts0z1yhV4F59Pkc4prHMt0gp/MqaY0FJH?=
 =?us-ascii?q?dzOF0pH8ILzXKm/u/B+xb67awE3R0NGT+q0X8vQ3t03jvB21Fkol63hm08RV32?=
 =?us-ascii?q?GA6ZnQDQsSUYj+UkA49xVho7HaYy89557b1HF2MKm0tCPC1MwtBOc/1hmgeNJf?=
 =?us-ascii?q?OrueFADuC80aG9SuKOsyllizbxILIPpd9LQpMMOhbfeG3rCkPPxhnD6/kWtI+o?=
 =?us-ascii?q?R93V+S+CpmTe7I2Y0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn57sW39C+F+jHV8Gw9KpeRyJYlz53A1Q01kXoHO9lSu5yT?=
 =?us-ascii?q?x0jy8mrq6F0CPSxOTicQINOnRXS2l6kVfsPY+0gsgYXEeydQgplxil5UHgy6hA?=
 =?us-ascii?q?vqt/LGrTQUZOfyfoKWFvSa+wtruEY85S55IkqyRXUOKgYV+ETr7xuQcV0yTmH2?=
 =?us-ascii?q?FG3jA0aymquonlnxx9kG+cLGx8rH3DdcFyxBff4sfRRfpQ3joAWSl5hiPbBlm6?=
 =?us-ascii?q?P9m149qUk43Pvfy5V2KkTpdTazXkzZuctCun4m1nGR6/kOqymtH9EQg6zDX019?=
 =?us-ascii?q?9lVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL7bXoNRiQEz8Tb4Qf7w01jMmyGx5jiWXqD2MthaMK3YmcX2iI78sBLB7?=
 =?us-ascii?q?2Y7L1CnStpvFW4qRjdbuR6njcY0fEu8mIVg/kVuAoxySWQGqwSHU5dPSD2lhWH?=
 =?us-ascii?q?9da+rLhMZGa0cLi9z05+ndGnDLGfrQBQQnf5epE+HSBu6sVzKk7D0Hr26ov8Yt?=
 =?us-ascii?q?nfccoTtgGIkxfHl+VaM4g+lv0OhSp6I279uWAlxvU/jRxv25G6oYeGJ39s/KK/?=
 =?us-ascii?q?Hh5XKDn1a9kP9THqiKZUhtyW0Jy3HpV9BjULW4PlTfCyHzIXq/vnLByCECEmpn?=
 =?us-ascii?q?eYBLrfHhKf6EF8oHLUCJ2rM3CXJH8EzdRtXhWdJUpfgBwKUzU+hJI2CgeqxMn5?=
 =?us-ascii?q?ekdj+j8R/kL4qgdLyu9wNxj/VXrfpB61ajguTpiTNgFW7gZE50faKsGe6uNzHy?=
 =?us-ascii?q?dF/pyutgCNK2qbZxhWAmENQECLG1fjPry279na7+eYHva+L+fJYbiWqexRSfaI?=
 =?us-ascii?q?xZGs0otn5TqMNd+PPn5tD/IlwEpDQGt5Ft/dmzUOTSwXii3MY9SapBe65i14sM?=
 =?us-ascii?q?S//O73VwLo4IuFE6FSPsl3+xCqnaeDMPadizxkKTlDzJMD23/JxKIb3F4TkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdSV?=
 =?us-ascii?q?zhm8SpadYWLG2nKFzHBFiENLKdKD3PwsH3Z768SLJKgOVVsR2wpSiUE0v5Mjuf?=
 =?us-ascii?q?kDnpUgilMftQgyGDIBxepIa9fw5tCGf5StLmbxy7MNlvgjw3wb07nHXKNWEHPD?=
 =?us-ascii?q?h4ckNNqKCQ7CxCjvV+HWxB8mRqLe2elymF6OnYL8Vejfw+ICN0nuQSwHMkzL9Z?=
 =?us-ascii?q?pHVGQ/x8ngPRo8RorlXglfOAnGlJSh1L/xBKn4KCsQ1BMKDV/4MIDXDF5xIE4W?=
 =?us-ascii?q?aZDhgDvfNqD9Tuv+Zbzd2Zx/G7EytL79+BpZhUPMPTMs/SdSN5aRc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAArdR5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBeNZDmJFok7hH6BcxMBARgTAYMshAQiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEKCwkIKSMMgjopAYJnAwMBAiQTBgEbBBkBAwIJAQEFEDALAxENAhEBB?=
 =?us-ascii?q?QEBIQsIBYMdgWkBAxQBBZoyPIwVFgUBF4J3BYQ2ChknDV6BNwIGEhCLAYEcF4F?=
 =?us-ascii?q?AP4FEhTaICQKJTYcVkDYzCYIpjA2DMxiJe4drLY8/ihYGAgkHDyGBJYIOMxojg?=
 =?us-ascii?q?QGCO4IbDBcSgziKWzgygQIDAQEhEwsBjTABAQ?=
X-IPAS-Result: =?us-ascii?q?A0AUAAArdR5ch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBeNZDmJFok7hH6BcxMBARgTAYMshAQiNAkNAQMBAQEBAQECARMBAQEKCwkIK?=
 =?us-ascii?q?SMMgjopAYJnAwMBAiQTBgEbBBkBAwIJAQEFEDALAxENAhEBBQEBIQsIBYMdgWk?=
 =?us-ascii?q?BAxQBBZoyPIwVFgUBF4J3BYQ2ChknDV6BNwIGEhCLAYEcF4FAP4FEhTaICQKJT?=
 =?us-ascii?q?YcVkDYzCYIpjA2DMxiJe4drLY8/ihYGAgkHDyGBJYIOMxojgQGCO4IbDBcSgzi?=
 =?us-ascii?q?KWzgygQIDAQEhEwsBjTABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="58579635"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 09:37:09 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2392600AbeLVRhH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 12:37:07 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:44750 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1733256AbeLVRhH (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 12:37:07 -0500
Received: by mail-pl1-f194.google.com with SMTP id e11so3912662plt.11
        for <linux-kernel@vger.kernel.org>; Sat, 22 Dec 2018 09:37:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=KW6fsZf9+OCqL4Xg+K2v5CtkOaYpqhd0HfSHrj5fc4g=;
        b=Bj5KeFvw3UoLqAA6f26Tyw23BoNXt9omxm2Oj8vdM2lYQNuNqNf560S3q25w9iuvlR
         KIRJ72rDACfSg9CfSJvBR8/BouQbZxpwdmB3amBVRS20XnBUpgfFznRCrfmNNRrRYOjE
         rLjuoy7+Ceo9lVsoiyxvzZRCRcRL/vyLqbxecYxghUkcNAGv8MbEtQGQ8MV8WrtFySe9
         6iexwMIonKDH+tDSWiIrr2YIfb+QDOaghi2U9y6MY3lyZvpPXtwDEvg+eOGclhThWtyA
         CEXR0/PHl9u46Q+HRhLHtMZ0yXqZNOrFEekRqayP2vjhjDGcPqrwxhIenRQI6muVLDrO
         6WXQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=KW6fsZf9+OCqL4Xg+K2v5CtkOaYpqhd0HfSHrj5fc4g=;
        b=r0LDW18U8//jgnVu0pN9qa+gMPwRD86IT1/rgHFxy3wSkOBQtJVyyiun/kSHoyqZ27
         Z0UgVK8XlrfniTb9g2rnA1J6hAAEGG/3TVb5UFfIXfUg5SjYaqKvm7XngoHZJTZ8FyfE
         cn624M4NqfrW3/LUbCG/92xLDY5nVoqS8aG3TutC9uzl0AbD5rbCXA/6eLRCeQ3uETUL
         Zmg60IdNGYgM5g/nJsTwoE2Cb7/1G270294Eqeqko36toCp14+L2INgDi2fSMRqOhqP4
         aS/yFNO3rPhGhcKtGELF/+LyKXcG4BIdGOmpeGUXXyjClQ/jOF39bJoBxC+wPfqEbkbJ
         ylWw==
X-Gm-Message-State: AJcUukdOYDNRxpBC11VeepS9FcEyTW8RlutpfJR9nlZiY7ZRGIHJhZFf
        KOcjjN2DXHZB5b+sCBx42M8hBlDch6s=
X-Google-Smtp-Source: ALg8bN4QUG3a08fnwMcL5g+NP0iVlM2nCua74Z75YtGNJB0ptV/CLmpf65HgN6GM3bwd9PW9WNrxbQ==
X-Received: by 2002:a17:902:6b0c:: with SMTP id o12mr6793025plk.291.1545490267427;
        Sat, 22 Dec 2018 06:51:07 -0800 (PST)
Received: from nishad ([106.51.25.107])
        by smtp.gmail.com with ESMTPSA id r187sm52819066pfc.63.2018.12.22.06.51.03
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 22 Dec 2018 06:51:06 -0800 (PST)
Date: Sat, 22 Dec 2018 20:21:00 +0530
From: Nishad Kamdar <nishadkamdar@gmail.com>
To: Johan Hovold <johan@kernel.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Alex Elder <elder@kernel.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org,
        Nishad Kamdar <nishadkamdar@gmail.com>
Subject: [PATCH v4 2/4] staging: greybus: gpio: Use gpiochip_get_data() in
 place of gpio_chip_to_gb_gpio_controller()
Message-ID: <03b274a2b5777d67e9d9b6318b5b2f13ce5c2b66.1545488665.git.nishadkamdar@gmail.com>
References: <cover.1545488665.git.nishadkamdar@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <cover.1545488665.git.nishadkamdar@gmail.com>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This patch drops gpio_chip_to_gb_gpio_controller(),
and uses gpiochip_get_data() to retrieve the container
of struct gpio_chip.

Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
---
Changes in v4:
 - Introduce this change as a new patch.
---
 drivers/staging/greybus/gpio.c | 28 +++++++++++++---------------
 1 file changed, 13 insertions(+), 15 deletions(-)

diff --git a/drivers/staging/greybus/gpio.c b/drivers/staging/greybus/gpio.c
index 1af291aa1b6e..2dd04682cbc6 100644
--- a/drivers/staging/greybus/gpio.c
+++ b/drivers/staging/greybus/gpio.c
@@ -40,8 +40,6 @@ struct gb_gpio_controller {
 	struct gpio_chip	chip;
 	struct mutex		irq_lock;
 };
-#define gpio_chip_to_gb_gpio_controller(chip) \
-	container_of(chip, struct gb_gpio_controller, chip)
 #define irq_data_to_gpio_chip(d) (d->domain->host_data)
 
 static int gb_gpio_line_count_operation(struct gb_gpio_controller *ggc)
@@ -270,7 +268,7 @@ static void _gb_gpio_irq_set_type(struct gb_gpio_controller *ggc,
 static void gb_gpio_irq_mask(struct irq_data *d)
 {
 	struct gpio_chip *chip = irq_data_to_gpio_chip(d);
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	struct gb_gpio_line *line = &ggc->lines[d->hwirq];
 
 	line->masked = true;
@@ -280,7 +278,7 @@ static void gb_gpio_irq_mask(struct irq_data *d)
 static void gb_gpio_irq_unmask(struct irq_data *d)
 {
 	struct gpio_chip *chip = irq_data_to_gpio_chip(d);
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	struct gb_gpio_line *line = &ggc->lines[d->hwirq];
 
 	line->masked = false;
@@ -290,7 +288,7 @@ static void gb_gpio_irq_unmask(struct irq_data *d)
 static int gb_gpio_irq_set_type(struct irq_data *d, unsigned int type)
 {
 	struct gpio_chip *chip = irq_data_to_gpio_chip(d);
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	struct gb_gpio_line *line = &ggc->lines[d->hwirq];
 	struct device *dev = &ggc->gbphy_dev->dev;
 	u8 irq_type;
@@ -328,7 +326,7 @@ static int gb_gpio_irq_set_type(struct irq_data *d, unsigned int type)
 static void gb_gpio_irq_bus_lock(struct irq_data *d)
 {
 	struct gpio_chip *chip = irq_data_to_gpio_chip(d);
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 
 	mutex_lock(&ggc->irq_lock);
 }
@@ -336,7 +334,7 @@ static void gb_gpio_irq_bus_lock(struct irq_data *d)
 static void gb_gpio_irq_bus_sync_unlock(struct irq_data *d)
 {
 	struct gpio_chip *chip = irq_data_to_gpio_chip(d);
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	struct gb_gpio_line *line = &ggc->lines[d->hwirq];
 
 	if (line->irq_type_pending) {
@@ -405,21 +403,21 @@ static int gb_gpio_request_handler(struct gb_operation *op)
 
 static int gb_gpio_request(struct gpio_chip *chip, unsigned int offset)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 
 	return gb_gpio_activate_operation(ggc, (u8)offset);
 }
 
 static void gb_gpio_free(struct gpio_chip *chip, unsigned int offset)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 
 	gb_gpio_deactivate_operation(ggc, (u8)offset);
 }
 
 static int gb_gpio_get_direction(struct gpio_chip *chip, unsigned int offset)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	u8 which;
 	int ret;
 
@@ -433,7 +431,7 @@ static int gb_gpio_get_direction(struct gpio_chip *chip, unsigned int offset)
 
 static int gb_gpio_direction_input(struct gpio_chip *chip, unsigned int offset)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 
 	return gb_gpio_direction_in_operation(ggc, (u8)offset);
 }
@@ -441,14 +439,14 @@ static int gb_gpio_direction_input(struct gpio_chip *chip, unsigned int offset)
 static int gb_gpio_direction_output(struct gpio_chip *chip, unsigned int offset,
 				    int value)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 
 	return gb_gpio_direction_out_operation(ggc, (u8)offset, !!value);
 }
 
 static int gb_gpio_get(struct gpio_chip *chip, unsigned int offset)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	u8 which;
 	int ret;
 
@@ -462,7 +460,7 @@ static int gb_gpio_get(struct gpio_chip *chip, unsigned int offset)
 
 static void gb_gpio_set(struct gpio_chip *chip, unsigned int offset, int value)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 
 	gb_gpio_set_value_operation(ggc, (u8)offset, !!value);
 }
@@ -470,7 +468,7 @@ static void gb_gpio_set(struct gpio_chip *chip, unsigned int offset, int value)
 static int gb_gpio_set_config(struct gpio_chip *chip, unsigned int offset,
 			      unsigned long config)
 {
-	struct gb_gpio_controller *ggc = gpio_chip_to_gb_gpio_controller(chip);
+	struct gb_gpio_controller *ggc = gpiochip_get_data(chip);
 	u32 debounce;
 
 	if (pinconf_to_config_param(config) != PIN_CONFIG_INPUT_DEBOUNCE)
-- 
2.17.1

