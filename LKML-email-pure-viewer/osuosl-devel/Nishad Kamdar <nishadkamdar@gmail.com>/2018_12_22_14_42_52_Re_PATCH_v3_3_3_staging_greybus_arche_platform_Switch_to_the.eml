Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:57:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F2D845805CF;
	Sat, 22 Dec 2018 09:30:31 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 22 Dec 2018 09:30:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4Gdv7h9JJrTshv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?0OMRIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CS2RPXthfWTFCDIOy?=
 =?us-ascii?q?YIQAE/cOMuRWoInmv1sDrwCzBRWwCO711jNEmmX70bM83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rMrdX1L6cSXvqow6LVyDvMdfZW1irn54jSbxsspveMXbNrccrR00YgCgDFgU+V?=
 =?us-ascii?q?qYP4JTyVzP8As2ee7+V6VOKvj3QrpB12ojiq38ohjJTCiIENyl3c6yl13II4Kc?=
 =?us-ascii?q?elREN1f9KoCoZcuiKGO4dsQ84vQXlktDsmxrAHo5K2fDUGxI45yxPfcfCLbpSE?=
 =?us-ascii?q?7xDlWe2MOzl3nmhld6i6hxuq8Uiv1On8Vs6s3VZUoSpKjMPMumoO1xPN8MiHTO?=
 =?us-ascii?q?Vy/kO71TaIzQDT5flIIUEylaXFN54s2qA8moYXvEjZAyP7llv6gLWLekgn5uSk?=
 =?us-ascii?q?8eXqb7f+qp+ZLYB0iwX+Mqo0msy4BOQ1KgwOX2md+eSh27zv5E75T6tQjv0wjK?=
 =?us-ascii?q?bZtInWJcMVp66/HQBVyJ0u6wiwDzi4ytQUh3oHI0xfeBKBkYfpP0vCIPfiDfew?=
 =?us-ascii?q?m1isiitkx+jaPr39BZXANnzDkLbifblj8UJdxxczwMtb55JVDLEBPf3yVlXwtN?=
 =?us-ascii?q?zeEh82LQi0z/z7B9V604MUQXiPDbOBMKPOrV+I4foiI+mWa48UpDbyMf8l6+Tu?=
 =?us-ascii?q?jX8kg1Ade6ap0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD5Zf2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/OSZq2gLyB2ye7HYdaZnpcBVCOCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLlhE97zp0A96Z02GMVW50mG?=
 =?us-ascii?q?wISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rDiwrQdIv3dACeUZ9FM+kjhDYwSWqBbgZl7iIBJwx9qLRxHzxJ8d7y3bb26?=
 =?us-ascii?q?gtlVgmQs1TNWK4gq5z7RTcB4nMk0+Bjaalabwc3DLR9GeE1WeBoVtXUBBuXqnf?=
 =?us-ascii?q?XXAQfE3Wrc/n6UPEVLKuDbUnMg1cyc+NMKdKa9vpjUlYS/fnItjRf2Wxm2KoDx?=
 =?us-ascii?q?aS2ryMdJbqe3ka3CjFFEgEkgUT/XGaNQg+BiatuX7eACZpFVL1Z0Ps8O9+qHyg?=
 =?us-ascii?q?Q08wzgGKaVBh1rWv9h4Ug/ycV+0c3rYetCg9rDV0GU6338jKBNqYuwphYKJcbM?=
 =?us-ascii?q?sn71dDy23YuBJyP5y6I695m14Rbh54v0Xt1xVwFIVNiswqrHIszApvJqOUylJB?=
 =?us-ascii?q?dzWE3Z/uPr3bMHX9/Beqa6TOwFHRzM6W+rsT6PQ/s1jivBypGlA+/Hl90thV02?=
 =?us-ascii?q?GT5pPFDAcJVZLxU0A39wV1pr3AYyk94Z/U2mNoMaWurjDC3NcpDvM/yhm8Z9df?=
 =?us-ascii?q?LL+EFAjqHs0ABsihNPYlm0K0YRIDJuxS8rA7P9mnd/efxKGkJuJgky+4gmRd54?=
 =?us-ascii?q?B91FmB9y59Su7OwpYEzOuU3gqBVzfgklihttr7lpxDZTEXBmC/0zTrBJZNZq1u?=
 =?us-ascii?q?eoYGEWevI8ytytR+nZLtQGNY9Fi4ClMC2c+pfweSblPn0Q1R00QXvWKomS+iwz?=
 =?us-ascii?q?NolDEpq7KV3DbSzOT6aBoHJmlLSXFgjVj2O4i0jNMaXE+yYwgyjhSl5kX6x6ld?=
 =?us-ascii?q?pKthKWneWkNIfynwL2F/Xaq8rLuCY8hT6Jw2tSVbSvizYVefSrTluRsVzzvjH3?=
 =?us-ascii?q?dCxDA8bzyruo/2nxtghGKfLXZzqmHUecVxxRfZ+dzdSuRd3jsARClklzbXAkKw?=
 =?us-ascii?q?MMWu/dWRj53DqPyxV3q9Vp1Pdinm1YCAuzG65WFwAR2/guq8mtvoEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HoCkGfz?=
 =?us-ascii?q?Ms9U1bjwbXUTXj4L38Da4BL+10J9NHKJyJn0VnGcwstnetm7bXka2iM778BWFq?=
 =?us-ascii?q?iU6KZIkjdyolq9tQjRe+Ryni8Byfsy734Xm/0JuA0ozimHA7EdB09YPTH3lxST?=
 =?us-ascii?q?7tCzt6FXZGepcbit20tyh9GhDLeeog5CXHb1YIstHSh17s9nKlLDzGXz6p34eN?=
 =?us-ascii?q?nXdd8crQebkxDEj+hIMp4xkucKiDFjOWL8u30l1uE6gQZv3ZG8oIiINWFt8Lil?=
 =?us-ascii?q?DR5fMz3/f9kT9S31jaZCgsaW2JiiHpd7FTUOQpToVuikEC4IufTkKgaOEyA8qn?=
 =?us-ascii?q?GBFrrEBgKf7EZmr3TSE5GkLX2XJX8Zzcl8SxmZPkBQnAcUXDAilJ4jCg+q3NDh?=
 =?us-ascii?q?cFt+5j0J5l/4rQZMyvt1NxblVGfTvhyoajAySJiQNxdW6gBC50HIMc2R9O5zHi?=
 =?us-ascii?q?dY/oG/owyJMGCUewNIDWQRUEyeG1/jJqWu5cXH8+WABuqxMfrOYbaNqexfTfuI?=
 =?us-ascii?q?xoiv0oxp/zmSLMWPI2JiAuY/2kpCW3B5BsvYly8OSywRiyLCccqbqA2g9S1wq8?=
 =?us-ascii?q?C16O7rVx735YuTF7tSNs1i9AqrgaiYLe6fmiZ4JSxc1pMN3nLIzLkf3FgPiyBh?=
 =?us-ascii?q?bTWtELIAtTLTQ6LUgKNYExkbayZrPstS8608xhVNOdLcit7tyr54j/s1B01ZWl?=
 =?us-ascii?q?D7hs6pZdIFI2emOVPDBUaLMqmGJDLRz8H2Z6O8VaNfjOFOuxKsvjabFlfpPi6f?=
 =?us-ascii?q?mDnxSxCvLeZMgTmbPRNEvoG9dxdtCW77Q9Pnah20Ktl3jTItzL0wh3PKM3McMD?=
 =?us-ascii?q?dmf0NMqL2Q8T1XgvFlF2Nd6XplKLrMpyHMze7YI5Bekfx1BSB437ZY53QzzZNW?=
 =?us-ascii?q?4TtCSfgznzHd+I1AuVajx8+O0TpuXFJtozNHjZjD6UNjIqXQ+ppJXHrN5joC6G?=
 =?us-ascii?q?yRD1IBoN4zWY6ngLxZ1tWazPG7EzxF6d+BuJJEX8U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAD9cx5ch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBWoIRJ4wXjgkUiRaEa4lOFIFfEwEBGBMBhzAiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIKSMMgjopAYJmAQEBAQIBAQIkEwYBGwQZAQMCC?=
 =?us-ascii?q?QEBBQUYCSUDDAUNAhEBBQEBIQsIBYJSS4FpAQMNBwEFmjE8jBUWBQEXgncFhDY?=
 =?us-ascii?q?KGScNXoE3AgYSEIsBgRwXgUA/gRGDEoJXghODUIImAolDCocVU4RzinAzCYIpj?=
 =?us-ascii?q?A2DJyQKgVaFIYJ6N4YEgTCPbIoWBgIJBw8hgSWCDjMaI4M8ghsMFxKDOIpbODK?=
 =?us-ascii?q?BAgMBASETCwGNMAEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAD9cx5ch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBWoIRJ4wXjgkUiRaEa4lOFIFfEwEBGBMBhzAiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIKSMMgjopAYJmAQEBAQIBAQIkEwYBGwQZAQMCCQEBBQUYCSUDDAU?=
 =?us-ascii?q?NAhEBBQEBIQsIBYJSS4FpAQMNBwEFmjE8jBUWBQEXgncFhDYKGScNXoE3AgYSE?=
 =?us-ascii?q?IsBgRwXgUA/gRGDEoJXghODUIImAolDCocVU4RzinAzCYIpjA2DJyQKgVaFIYJ?=
 =?us-ascii?q?6N4YEgTCPbIoWBgIJBw8hgSWCDjMaI4M8ghsMFxKDOIpbODKBAgMBASETCwGNM?=
 =?us-ascii?q?AEB?=
X-IronPort-AV: E=Sophos;i="5.56,385,1539673200"; 
   d="scan'208";a="45102601"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Dec 2018 09:30:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391450AbeLVRa1 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Sat, 22 Dec 2018 12:30:27 -0500
Received: from mail-pl1-f193.google.com ([209.85.214.193]:38092 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1733256AbeLVRa1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 22 Dec 2018 12:30:27 -0500
Received: by mail-pl1-f193.google.com with SMTP id e5so3925081plb.5
        for <linux-kernel@vger.kernel.org>; Sat, 22 Dec 2018 09:30:26 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=PUiUVAZX+o1L8tyb6nCCrphk9MHn36Ci/isp5wjlftk=;
        b=HUroZrHNSkRF9fGX9met09H2aZDNyOYtpWvGpGEAGB2/CHmAETJAPvVnDK8jHUnTBF
         uJ9H6NesPUzPsHhEDeSRIizUGxLkHwjeWvAIu+YhyhFQr7cv9N+ZipbQWUufPFufCp2/
         AD0s78S7G0pe5ftKHgQGsgmz0Tfh+jG9N0yVT0Lsz90H0Re0j9M9JIQZNL4w0Vm8j5fo
         3I8/AGE/eEw+CASV81KBeZRW1dyrG1CShJ43kqlOHjmuGn8jF9K+MzzzWlqEsD2iV8AM
         j2JmxKWsGHj0VkQNgU87I5vOLnfOlAz5IK+STdLweWfBGv/kEOVb0yeAK89k69CaQuhe
         VTIQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=PUiUVAZX+o1L8tyb6nCCrphk9MHn36Ci/isp5wjlftk=;
        b=m5M+74ILtsmSZ5UKCLNiZdi764VWrvQlE+IUvd11lnz+aFa81RRDwbIjKpA+cL9QEt
         GIkNeqHPZYsnXqJ+oDp5Jbqy0BSPlkK/H3e5Fv0eGcxMIQ4HOtwv4QlA11OvpQed2QP2
         IW/+nmwXheDeFQVoJKhb3nL1MrIENgpoUaFcas939F74hv/bF7yoyl7L3bV71wNq4Nny
         JRJAbtJbPNlAv6+TT+W8jKkoP4OHfq6T5Bn5n++YFUhwT0DYYOm9yndpuOW93Ajy8jvI
         SPmKABgO2fEfe8cxKJQpdTP2z4GyifDtcI8BPVd8oGsIDADkjwnESfAuNgpQuBqEkhKN
         oAxA==
X-Gm-Message-State: AJcUukeDLnnqePGNnvgS3Ti7puGz1TFj8dQ+OkR0YPGnHGUBj+VnV3++
        X71q/siTIutLKa1wv2b1BS0eGfFrXJg=
X-Google-Smtp-Source: ALg8bN7HE0IZ9EvXFhXp3JaXE4AS6L7DaHmXgGoYCzTGIwcMDTKB1CwfZzLCJ3rmaOFAcF15+3z+xg==
X-Received: by 2002:a17:902:584:: with SMTP id f4mr6885799plf.28.1545489779976;
        Sat, 22 Dec 2018 06:42:59 -0800 (PST)
Received: from nishad ([106.51.25.107])
        by smtp.gmail.com with ESMTPSA id p7sm52800993pfj.72.2018.12.22.06.42.56
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Sat, 22 Dec 2018 06:42:59 -0800 (PST)
Date: Sat, 22 Dec 2018 20:12:52 +0530
From: Nishad Kamdar <nishadkamdar@gmail.com>
To: Johan Hovold <johan@kernel.org>
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Alex Elder <elder@kernel.org>,
        Rui Miguel Silva <rmfrfs@gmail.com>,
        greybus-dev@lists.linaro.org, devel@driverdev.osuosl.org,
        linux-kernel@vger.kernel.org,
        Nishad Kamdar <nishadkamdar@gmail.com>
Subject: Re: [PATCH v3 3/3] staging: greybus: arche-platform: Switch to the
 gpio descriptor interface
Message-ID: <20181222144251.GC15439@nishad>
References: <cover.1542898267.git.nishadkamdar@gmail.com>
 <2200db633d8e723b881ef355527afaef0d5ccf24.1542898267.git.nishadkamdar@gmail.com>
 <20181218115056.GO20658@localhost>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181218115056.GO20658@localhost>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 18, 2018 at 12:50:56PM +0100, Johan Hovold wrote:
> On Thu, Nov 22, 2018 at 10:39:24PM +0530, Nishad Kamdar wrote:
> > Use the gpiod interface instead of the deprecated
> > old non-descriptor interface.
> > 
> > Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
> > ---
> > Changes in v2:
> >  - Move comment to the same line as to what it applies to.
> > ---
> >  drivers/staging/greybus/arche-platform.c | 119 ++++++++---------------
> >  1 file changed, 41 insertions(+), 78 deletions(-)
> > 
> > diff --git a/drivers/staging/greybus/arche-platform.c b/drivers/staging/greybus/arche-platform.c
> > index 4c36e88766e7..a5cea79d8e32 100644
> > --- a/drivers/staging/greybus/arche-platform.c
> > +++ b/drivers/staging/greybus/arche-platform.c
> > @@ -8,10 +8,9 @@
> >  
> >  #include <linux/clk.h>
> >  #include <linux/delay.h>
> > -#include <linux/gpio.h>
> > +#include <linux/gpio/consumer.h>
> >  #include <linux/init.h>
> >  #include <linux/module.h>
> > -#include <linux/of_gpio.h>
> >  #include <linux/of_platform.h>
> >  #include <linux/pinctrl/consumer.h>
> >  #include <linux/platform_device.h>
> > @@ -45,14 +44,14 @@ enum svc_wakedetect_state {
> >  
> >  struct arche_platform_drvdata {
> >  	/* Control GPIO signals to and from AP <=> SVC */
> > -	int svc_reset_gpio;
> > +	struct gpio_desc *svc_reset;
> > +	struct gpio_desc *svc_sysboot;
> 
> Why move sysboot? The flag below is about reset (but should eventually
> go away).
> 
Ok, I'll restore its position.

> >  	bool is_reset_act_hi;
> > -	int svc_sysboot_gpio;
> > -	int wake_detect_gpio; /* bi-dir,maps to WAKE_MOD & WAKE_FRAME signals */
> > +	struct gpio_desc *wake_detect; /* bi-dir,maps to WAKE_MOD & WAKE_FRAME signals */
> >  
> >  	enum arche_platform_state state;
> >  
> > -	int svc_refclk_req;
> > +	struct gpio_desc *svc_refclk_req;
> >  	struct clk *svc_ref_clk;
> >  
> >  	struct pinctrl *pinctrl;
> > @@ -85,9 +84,9 @@ static void arche_platform_set_wake_detect_state(
> >  	arche_pdata->wake_detect_state = state;
> >  }
> >  
> > -static inline void svc_reset_onoff(unsigned int gpio, bool onoff)
> > +static inline void svc_reset_onoff(struct gpio_desc *gpio, bool onoff)
> >  {
> > -	gpio_set_value(gpio, onoff);
> > +	gpiod_set_value(gpio, onoff);
> >  }
> >  
> >  static int apb_cold_boot(struct device *dev, void *data)
> > @@ -116,7 +115,6 @@ static int apb_poweroff(struct device *dev, void *data)
> >  static void arche_platform_wd_irq_en(struct arche_platform_drvdata *arche_pdata)
> >  {
> >  	/* Enable interrupt here, to read event back from SVC */
> > -	gpio_direction_input(arche_pdata->wake_detect_gpio);
> >  	enable_irq(arche_pdata->wake_detect_irq);
> >  }
> >  
> > @@ -160,7 +158,7 @@ static irqreturn_t arche_platform_wd_irq(int irq, void *devid)
> >  
> >  	spin_lock_irqsave(&arche_pdata->wake_lock, flags);
> >  
> > -	if (gpio_get_value(arche_pdata->wake_detect_gpio)) {
> > +	if (gpiod_get_value(arche_pdata->wake_detect)) {
> >  		/* wake/detect rising */
> >  
> >  		/*
> > @@ -224,10 +222,10 @@ arche_platform_coldboot_seq(struct arche_platform_drvdata *arche_pdata)
> >  
> >  	dev_info(arche_pdata->dev, "Booting from cold boot state\n");
> >  
> > -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> > +	svc_reset_onoff(arche_pdata->svc_reset,
> 
> No need to break line here.
> 
Ok.

> >  			arche_pdata->is_reset_act_hi);
> >  
> > -	gpio_set_value(arche_pdata->svc_sysboot_gpio, 0);
> > +	gpiod_set_value(arche_pdata->svc_sysboot, 0);
> >  	usleep_range(100, 200);
> >  
> >  	ret = clk_prepare_enable(arche_pdata->svc_ref_clk);
> > @@ -238,7 +236,7 @@ arche_platform_coldboot_seq(struct arche_platform_drvdata *arche_pdata)
> >  	}
> >  
> >  	/* bring SVC out of reset */
> > -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> > +	svc_reset_onoff(arche_pdata->svc_reset,
> 
> Same here. Please check throughout.
> 
Yes.

> >  			!arche_pdata->is_reset_act_hi);
> >  
> >  	arche_platform_set_state(arche_pdata, ARCHE_PLATFORM_STATE_ACTIVE);
> > @@ -259,10 +257,10 @@ arche_platform_fw_flashing_seq(struct arche_platform_drvdata *arche_pdata)
> >  
> >  	dev_info(arche_pdata->dev, "Switching to FW flashing state\n");
> >  
> > -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> > +	svc_reset_onoff(arche_pdata->svc_reset,
> >  			arche_pdata->is_reset_act_hi);
> >  
> > -	gpio_set_value(arche_pdata->svc_sysboot_gpio, 1);
> > +	gpiod_set_value(arche_pdata->svc_sysboot, 1);
> >  
> >  	usleep_range(100, 200);
> >  
> > @@ -273,7 +271,7 @@ arche_platform_fw_flashing_seq(struct arche_platform_drvdata *arche_pdata)
> >  		return ret;
> >  	}
> >  
> > -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> > +	svc_reset_onoff(arche_pdata->svc_reset,
> >  			!arche_pdata->is_reset_act_hi);
> >  
> >  	arche_platform_set_state(arche_pdata, ARCHE_PLATFORM_STATE_FW_FLASHING);
> > @@ -305,7 +303,7 @@ arche_platform_poweroff_seq(struct arche_platform_drvdata *arche_pdata)
> >  	clk_disable_unprepare(arche_pdata->svc_ref_clk);
> >  
> >  	/* As part of exit, put APB back in reset state */
> > -	svc_reset_onoff(arche_pdata->svc_reset_gpio,
> > +	svc_reset_onoff(arche_pdata->svc_reset,
> >  			arche_pdata->is_reset_act_hi);
> >  
> >  	arche_platform_set_state(arche_pdata, ARCHE_PLATFORM_STATE_OFF);
> > @@ -435,6 +433,7 @@ static int arche_platform_probe(struct platform_device *pdev)
> >  	struct device *dev = &pdev->dev;
> >  	struct device_node *np = dev->of_node;
> >  	int ret;
> > +	unsigned int flags;
> >  
> >  	arche_pdata = devm_kzalloc(&pdev->dev, sizeof(*arche_pdata),
> >  				   GFP_KERNEL);
> > @@ -444,61 +443,33 @@ static int arche_platform_probe(struct platform_device *pdev)
> >  	/* setup svc reset gpio */
> >  	arche_pdata->is_reset_act_hi = of_property_read_bool(np,
> >  							     "svc,reset-active-high");
> 
> This should also go away eventually in favour of gpio flags in
> devicetree. Fine to keep for now, though.
>
Ok.

> > -	arche_pdata->svc_reset_gpio = of_get_named_gpio(np,
> > -							"svc,reset-gpio",
> > -							0);
> > -	if (!gpio_is_valid(arche_pdata->svc_reset_gpio)) {
> > -		dev_err(dev, "failed to get reset-gpio\n");
> > -		return arche_pdata->svc_reset_gpio;
> > -	}
> > -	ret = devm_gpio_request(dev, arche_pdata->svc_reset_gpio, "svc-reset");
> > -	if (ret) {
> > -		dev_err(dev, "failed to request svc-reset gpio:%d\n", ret);
> > -		return ret;
> > -	}
> > -	ret = gpio_direction_output(arche_pdata->svc_reset_gpio,
> > -				    arche_pdata->is_reset_act_hi);
> > -	if (ret) {
> > -		dev_err(dev, "failed to set svc-reset gpio dir:%d\n", ret);
> > +	if (arche_pdata->is_reset_act_hi)
> > +		flags = GPIOD_OUT_HIGH;
> > +	else
> > +		flags = GPIOD_OUT_LOW;
> > +
> > +	arche_pdata->svc_reset = devm_gpiod_get(dev, "svc,reset-gpio", flags);
> > +	if (IS_ERR(arche_pdata->svc_reset)) {
> > +		ret = PTR_ERR(arche_pdata->svc_reset);
> > +		dev_err(dev, "failed to request svc-reset GPIO:%d\n", ret);
> >  		return ret;
> >  	}
> 
> Thanks,
> Johan

Thanks for the review.

Regards,
Nishad
