Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 24 Nov 2018 12:37:27 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D0133580460;
	Fri, 23 Nov 2018 12:42:14 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Nov 2018 12:42:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AK+1TexJBQPWVWvhz2NmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULvv9rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA37W/ZhM93gq1ZrhKuqBNxw5XMYIyXL/dyYqDQcMkGSWdbQspdSypMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5VoY78p1QSrRuxHxejBOfywTFVmn/2x7c10/k6Hg7YwQctGMkOsG?=
 =?us-ascii?q?jOrNrvKacdSv66wLPMzTXCafNWxDj85ZPHchAku/6MXLZwfdDNxkkoEgPIl1Od?=
 =?us-ascii?q?opHmMTONzukBrXSX4u56We6yhWMrtRt9riWsy8swkIXEh4AYxkja+Spj3Io5O9?=
 =?us-ascii?q?i1RU1mbdK4E5ZdsiKXOotqTc8+Rmxltjw1x74JtJO+YSQHzIkryhraZvOZb4eH?=
 =?us-ascii?q?+R3uWeOMLTp4nn1od7eyiAuz/Ee70OLxUNS/3kxQoSpfiNbMs2gA1xzN5ciDTf?=
 =?us-ascii?q?tw5lmh2TmR2ADJ8O1EIl47lbDdK5E/xr48jJ0TsV7MHiPumUX2irGZdlk89+S2?=
 =?us-ascii?q?9+jqZq/qqoKSOoNqkA3yL6cjltClDek5MAUCR22b9v691L3n8035WrJKjvgun6?=
 =?us-ascii?q?ndsZDaI9kbp6GgDw9WzIkj8RC/ACmi0NgBmnkGIlRFdwydj4XyJVHOL+73De2l?=
 =?us-ascii?q?j1Svjjhr3fbGMaPlApnXKXjDirjhca5n60FA0Aoz0cxf55VMB7EFIfLzWVH+uM?=
 =?us-ascii?q?bXDx8kKAG0x+fnCNNg1oIRQ26PA6mZML/Mvl+M/O4gP+6MZIoNsjbnN/cl/+Lu?=
 =?us-ascii?q?jWM+mVIFfammx5oXaGyiEfRhOUmZYWfsjc0HEWcFpQc+SO3qiFufUT9cfXqyXq?=
 =?us-ascii?q?Q85i0lB4KiF4vMWoetgLmZ1iehApJWfnxGCkyLEXrwdYWEXOkDZDiRIs9mlDwE?=
 =?us-ascii?q?U7+hRpQl1RGvsg/61rVmIvDV+i0eqZLsytx16/fPmhE18Dx+F96d3H2VT2Fogm?=
 =?us-ascii?q?MIQCc707pkoUx9zVeD0rJ0g+ZCGtxR/P5JVgY6NZjBz+11EdzyWwTBfsuXR1ai?=
 =?us-ascii?q?WNmpHTYxTtcpyd8Uf0l9A8mijgzE3yeyAL8ajbqLCIYw8qLdxXfxIcl9xm3C1K?=
 =?us-ascii?q?kgiVkmX8ROOXenhq556wjcGYrJn1+FmKatcKQWxDTN+3ubzWqSoEFYVxZ9Xrjf?=
 =?us-ascii?q?UnABeETat9T56VnET7+1F7snNAxNycqBKqtPbt3kllFGRPblONTDbGO9gWawBR?=
 =?us-ascii?q?CUxrySaIrmYXkS3CLYCEIciQAc4W6GNRQiBiemu2/RESZhFUzxbE/28elxsnW7?=
 =?us-ascii?q?TlQqwAGMdEBh07u1+hgIhf2TUf8T37QEuDs/pDVwBlqyw9XWC9+YrQp7YKpcec?=
 =?us-ascii?q?894EtA1W/Bqwx9P5mgL6d+hl4ecwV7pV/u2w9wCoValcgqrXUqzAVpJKKc0VNB?=
 =?us-ascii?q?cS6Y3J/qNr3WLGny4A6ga6rM1l7C19aW/78F6O4kpFX7oAGpCk0i/m193NlRzX?=
 =?us-ascii?q?Sd6YvFDQoIXZ3qT0Y46gJ1p7fZYik6+YPZznlsMaiysj/f1NMlHuolyhC8f9hB?=
 =?us-ascii?q?NKOIDhP9E8ofB8K2Muwlh0Cpbg4YPOBV7KM1P96me+Ga16KxPedgnCipjWJI4I?=
 =?us-ascii?q?1m1kKM9ix8SvPH3pofwvGY2BeHWCn4jFu7rs/3noVEbykIHmWj0SjkGJJRZqpq?=
 =?us-ascii?q?cIYRCGehP9e4xs9jiJ7qQXJY8kCsB0kH2MOwZRWddVj90hBO2kQNpnynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336ha?=
 =?us-ascii?q?pKVlI2jTW0tIZDX2L2d5X6u0t7qCZdNP6ZwyvSVWVuS8fU6VSrrnrxQG1CPjGn?=
 =?us-ascii?q?NUxConeDGyppX5gxt6hXqfLHlptnrZesJwxRDF6NzHX/FR3TkGRCh+iTbJAFix?=
 =?us-ascii?q?JN2p/dSSl5feveGyTWOhVptPcSb1yYOMrje05WpvARenhfC8hsXnERQm0S/8z9?=
 =?us-ascii?q?RrVT/HrBHmbonp1qS6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Avl11diLn6Tx4L5S2+Sws1uZ9ShZmMW2yQ9791FCa?=
 =?us-ascii?q?uO7bxEmzd1rUS8rQ7Lffd9mTIdw+M06HEGm+EJpBYtziKFD7AXHElYPjbjmw6G?=
 =?us-ascii?q?7t+gt6VXeHigcaKr20Vgh9ChA6qPogVdWHb/Z5cjEjV87sR5MFLQznLz7pvod8?=
 =?us-ascii?q?XXbdIWrheUiQvPj/BJKJItkfoHnTZnOWX4vXE/yu80lxpu3YyhvIicKmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDAzsW?=
 =?us-ascii?q?2UGb3bHQ+C8ktmq2/PHouvN3GWInkZ0NpjSAOcJExZnAAbQjE6koQlGQCtwczr?=
 =?us-ascii?q?aF156SwJ5l7kthtMzfplNxvlXWfaugiocS04SISFIBpV8wFC5FrVMcqE4eJoBC?=
 =?us-ascii?q?xY+pyhrAqQKm2UfQhIDGcJWlCaCFDnJLWh+d7A8+2ADOqkM/TOeamOqfBZV/qQ?=
 =?us-ascii?q?xZOv1ZZm/y+RNsqVOHluFeY72k1FXXB2AMnZnzQPSyoKlyPCdcKbpRG8+jFpoc?=
 =?us-ascii?q?C76vjkRAXv5Y6XAbtILdpv4wy2gbuEN+OIhCZ2NzdY1pAPxX/J0rQf30QSiyZh?=
 =?us-ascii?q?dzazC7QAqDXNQbnUmq9WCR4bdixyONFJ76I6wglCJ8rbhsnp2b5/i/4/E01FWk?=
 =?us-ascii?q?D5msG1ecwKJHmwO0naBEmQLrSJOz3Kz9vzYaO9UrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjLN93jDg2zacoiX/QKWEcMS?=
 =?us-ascii?q?Zzc0VWo72U7CNYhOh/GmNb4npkK+mEhziW7+3CJpkKtvtrBzx+l/hG73Qi17tV?=
 =?us-ascii?q?8CZESeR1mSTIqN5uplCmku+XxTtmUBpBsDBLhI2QsEVmOKXZ8IRAWHne8BIM62?=
 =?us-ascii?q?WQFwoFp99/BtLzvKBQz4uHqKWmJy1P/NHU1c8dAdXEJsWaNnYoLRvuHnjTFgRW?=
 =?us-ascii?q?YySsMDT6hkddmfyWvkaJtJEnoJWkzIESULZGXlFzEvIcF1RNE9kLIZMxVTQhx+?=
 =?us-ascii?q?3IxPUU7Gaz+UGCDP5RuYrKA6qf?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BEAAD0ZPhbh0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?YEwKoIRJ5gRgiGJCI4fgXMSAQEYEwGIWiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiKCZQMDAQIkCwENARsdAQMCCQEBBRA7Ax4CEQEFARwZBYJRS4FpAQMVA?=
 =?us-ascii?q?QSbSTyMCRYFAReCdwWELwoZJw1agTcCBhKHTIMPgRyCFoERhWiIAwKJI5YxLgc?=
 =?us-ascii?q?Chj2HR4MgCxheiHOHNyyOIYk8AgQCBAUCBQ8hgSwLgXszGiOBAYI7ghsMF4NKi?=
 =?us-ascii?q?lM/MoEEAQEBO4tmAQE?=
X-IPAS-Result: =?us-ascii?q?A0BEAAD0ZPhbh0O0hNFjHgEGBwaBUwcLAYEwKoIRJ5gRgiG?=
 =?us-ascii?q?JCI4fgXMSAQEYEwGIWiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiKCZQMDA?=
 =?us-ascii?q?QIkCwENARsdAQMCCQEBBRA7Ax4CEQEFARwZBYJRS4FpAQMVAQSbSTyMCRYFARe?=
 =?us-ascii?q?CdwWELwoZJw1agTcCBhKHTIMPgRyCFoERhWiIAwKJI5YxLgcChj2HR4MgCxhei?=
 =?us-ascii?q?HOHNyyOIYk8AgQCBAUCBQ8hgSwLgXszGiOBAYI7ghsMF4NKilM/MoEEAQEBO4t?=
 =?us-ascii?q?mAQE?=
X-IronPort-AV: E=Sophos;i="5.56,271,1539673200"; 
   d="scan'208";a="42027884"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 23 Nov 2018 12:42:12 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726032AbeKXH1M (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 24 Nov 2018 02:27:12 -0500
Received: from mail-wm1-f67.google.com ([209.85.128.67]:33984 "EHLO
        mail-wm1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725944AbeKXH1L (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 24 Nov 2018 02:27:11 -0500
Received: by mail-wm1-f67.google.com with SMTP id y185so8287595wmd.1
        for <linux-kernel@vger.kernel.org>; Fri, 23 Nov 2018 12:41:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=shqGV9z7h0Lw4VQKmR7E42fPCP9C0ijFMJUBe3EVmyQ=;
        b=dAoNbhvVSFsLYxYQl5tnNP1RSXUWX1nAKcSKrF4Ymac7UnXc4XXz0pdOP0rkG1naq5
         RE7oHwwkFJUF0KFCIECsxQ4+VZlws1jHc7p8jJfALy9OhtUEhpn/Zs1ogXWB3EBYJP4h
         BX0L40SVjvgbEvDCA/8xiX3DtJWr6VbebPCMIa6oYECEH+Sr7fm3E+rSxb3F76GoysRx
         iWmCI7aeT6AjY0n49GaP1Eke5ghP/asEFlOWlBsyHsjWJO5GNJ+iEshWntYcIxslpCfo
         WUGqrwm4EW5l5oSjiBPLXQKWCBVH8dsDOU8k8ZgzAgCXj9gfkh2zQ7XEjjhI3TmbkM0b
         W9qg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=shqGV9z7h0Lw4VQKmR7E42fPCP9C0ijFMJUBe3EVmyQ=;
        b=XpKQiVr+9L27Wc2YVMXFRpcVdfOIIljMsfXHD0CHQC/WCwdbH2wp9D70AjdrTTK0N9
         8dImSR/sJF+RI3fMYBTpMdMbh8YskkmrRJj6uf4qqO17wDq92tvV02451UxjMi9pzON1
         p3OABhOiIil11Pr8huaCX1KYxX1IZxWKHe/BgaNqIJH5E8TegpURs1AZv4Px+l2MU+Hy
         j0gK9mb8lmFez/b0i8HiOyfHZAeJj26EviW4RBXm+Cig7pc6mPH48EN28br/3CBUiyEz
         TJGCv4+yh32LCCdRTPsgWv6sLB1yIfzMi5Avl1GE6GkbtzupJgCRUDqs8PUcI12nDxA5
         JfdQ==
X-Gm-Message-State: AA+aEWbTdqickl4xCha4PNGgSROzONlRPnpQW7rpTi9/VfoBJYmFDKXC
        WEHiz2FlQ80bu5+zkGCCOQE=
X-Google-Smtp-Source: AFSGD/WV3EVPK/f5hM2fomRh7pgcRiP+tOnvJ2pmXVIrwWYYGpZbOZy97FM5N9G6WdnzvjThCOPfjw==
X-Received: by 2002:a1c:b98e:: with SMTP id j136mr15894564wmf.9.1543005680153;
        Fri, 23 Nov 2018 12:41:20 -0800 (PST)
Received: from localhost.localdomain ([2a02:8108:85c0:3a84:1919:ecb4:15a4:d6ba])
        by smtp.gmail.com with ESMTPSA id i9sm24598906wrs.34.2018.11.23.12.41.19
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 23 Nov 2018 12:41:19 -0800 (PST)
From: Michael Straube <straube.linux@gmail.com>
To: gregkh@linuxfoundation.org
Cc: devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org,
        Michael Straube <straube.linux@gmail.com>
Subject: [PATCH 3/9] staging: rtl8188eu: use __func__ in rtw_mlme.c
Date: Fri, 23 Nov 2018 21:41:00 +0100
Message-Id: <20181123204106.2284-3-straube.linux@gmail.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181123204106.2284-1-straube.linux@gmail.com>
References: <20181123204106.2284-1-straube.linux@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Use __func__ instead of hardcoded function names.
Reported by checkpatch.

Signed-off-by: Michael Straube <straube.linux@gmail.com>
---
 drivers/staging/rtl8188eu/core/rtw_mlme.c | 48 +++++++++++++----------
 1 file changed, 28 insertions(+), 20 deletions(-)

diff --git a/drivers/staging/rtl8188eu/core/rtw_mlme.c b/drivers/staging/rtl8188eu/core/rtw_mlme.c
index d5c22a028905..54f05e62da49 100644
--- a/drivers/staging/rtl8188eu/core/rtw_mlme.c
+++ b/drivers/staging/rtl8188eu/core/rtw_mlme.c
@@ -230,8 +230,9 @@ int rtw_if_up(struct adapter *padapter)
 	if (padapter->bDriverStopped || padapter->bSurpriseRemoved ||
 	    !check_fwstate(&padapter->mlmepriv, _FW_LINKED)) {
 		RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_,
-			 ("rtw_if_up:bDriverStopped(%d) OR bSurpriseRemoved(%d)",
-			 padapter->bDriverStopped, padapter->bSurpriseRemoved));
+			 ("%s:bDriverStopped(%d) OR bSurpriseRemoved(%d)",
+			  __func__, padapter->bDriverStopped,
+			  padapter->bSurpriseRemoved));
 		res = false;
 	} else {
 		res =  true;
@@ -555,11 +556,13 @@ void rtw_survey_event_callback(struct adapter	*adapter, u8 *pbuf)
 
 	pnetwork = (struct wlan_bssid_ex *)pbuf;
 
-	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_, ("rtw_survey_event_callback, ssid=%s\n",  pnetwork->Ssid.Ssid));
+	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_,
+		 ("%s, ssid=%s\n", __func__, pnetwork->Ssid.Ssid));
 
 	len = get_wlan_bssid_ex_sz(pnetwork);
 	if (len > (sizeof(struct wlan_bssid_ex))) {
-		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("\n****rtw_survey_event_callback: return a wrong bss ***\n"));
+		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
+			 ("\n****%s: return a wrong bss ***\n", __func__));
 		return;
 	}
 	spin_lock_bh(&pmlmepriv->lock);
@@ -606,7 +609,8 @@ void rtw_surveydone_event_callback(struct adapter	*adapter, u8 *pbuf)
 		pmlmepriv->wps_probe_req_ie = NULL;
 	}
 
-	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_, ("rtw_surveydone_event_callback: fw_state:%x\n\n", get_fwstate(pmlmepriv)));
+	RT_TRACE(_module_rtl871x_mlme_c_, _drv_info_,
+		 ("%s: fw_state:%x\n\n", __func__, get_fwstate(pmlmepriv)));
 
 	if (check_fwstate(pmlmepriv, _FW_UNDER_SURVEY)) {
 		del_timer_sync(&pmlmepriv->scan_to_timer);
@@ -695,7 +699,7 @@ static void free_scanqueue(struct	mlme_priv *pmlmepriv)
 	struct __queue *scan_queue = &pmlmepriv->scanned_queue;
 	struct list_head *plist, *phead, *ptemp;
 
-	RT_TRACE(_module_rtl871x_mlme_c_, _drv_notice_, ("+free_scanqueue\n"));
+	RT_TRACE(_module_rtl871x_mlme_c_, _drv_notice_, ("+%s\n", __func__));
 	spin_lock_bh(&scan_queue->lock);
 	spin_lock_bh(&free_queue->lock);
 
@@ -808,7 +812,7 @@ void rtw_indicate_disconnect(struct adapter *padapter)
 {
 	struct	mlme_priv *pmlmepriv = &padapter->mlmepriv;
 
-	RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("+rtw_indicate_disconnect\n"));
+	RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("+%s\n", __func__));
 
 	_clr_fwstate_(pmlmepriv, _FW_UNDER_LINKING | WIFI_UNDER_WPS);
 
@@ -1159,12 +1163,15 @@ void rtw_stassoc_event_callback(struct adapter *adapter, u8 *pbuf)
 	psta = rtw_get_stainfo(&adapter->stapriv, pstassoc->macaddr);
 	if (psta) {
 		/* the sta have been in sta_info_queue => do nothing */
-		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("Error: rtw_stassoc_event_callback: sta has been in sta_hash_queue\n"));
+		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
+			 ("Error: %s: sta has been in sta_hash_queue\n",
+			  __func__));
 		return; /* between drv has received this event before and  fw have not yet to set key to CAM_ENTRY) */
 	}
 	psta = rtw_alloc_stainfo(&adapter->stapriv, pstassoc->macaddr);
 	if (!psta) {
-		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("Can't alloc sta_info when rtw_stassoc_event_callback\n"));
+		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
+			 ("Can't alloc sta_info when %s\n", __func__));
 		return;
 	}
 	/* to do: init sta_info variable */
@@ -1293,7 +1300,7 @@ void rtw_stadel_event_callback(struct adapter *adapter, u8 *pbuf)
 
 void rtw_cpwm_event_callback(struct adapter *padapter, u8 *pbuf)
 {
-	RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("+rtw_cpwm_event_callback !!!\n"));
+	RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_, ("+%s !!!\n", __func__));
 }
 
 /*
@@ -1574,22 +1581,23 @@ int rtw_set_key(struct adapter *adapter, struct security_priv *psecuritypriv, in
 	if (psecuritypriv->dot11AuthAlgrthm == dot11AuthAlgrthm_8021X) {
 		psetkeyparm->algorithm = (unsigned char)psecuritypriv->dot118021XGrpPrivacy;
 		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
-			 ("\n rtw_set_key: psetkeyparm->algorithm=(unsigned char)psecuritypriv->dot118021XGrpPrivacy=%d\n",
-			 psetkeyparm->algorithm));
+			 ("\n %s: psetkeyparm->algorithm=(unsigned char)psecuritypriv->dot118021XGrpPrivacy=%d\n",
+			  __func__, psetkeyparm->algorithm));
 	} else {
 		psetkeyparm->algorithm = (u8)psecuritypriv->dot11PrivacyAlgrthm;
 		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
-			 ("\n rtw_set_key: psetkeyparm->algorithm=(u8)psecuritypriv->dot11PrivacyAlgrthm=%d\n",
-			 psetkeyparm->algorithm));
+			 ("\n %s: psetkeyparm->algorithm=(u8)psecuritypriv->dot11PrivacyAlgrthm=%d\n",
+			  __func__, psetkeyparm->algorithm));
 	}
 	psetkeyparm->keyid = (u8)keyid;/* 0~3 */
 	psetkeyparm->set_tx = set_tx;
 	pmlmepriv->key_mask |= BIT(psetkeyparm->keyid);
-	DBG_88E("==> rtw_set_key algorithm(%x), keyid(%x), key_mask(%x)\n",
-		psetkeyparm->algorithm, psetkeyparm->keyid, pmlmepriv->key_mask);
+	DBG_88E("==> %s algorithm(%x), keyid(%x), key_mask(%x)\n",
+		__func__, psetkeyparm->algorithm, psetkeyparm->keyid,
+		pmlmepriv->key_mask);
 	RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
-		 ("\n rtw_set_key: psetkeyparm->algorithm=%d psetkeyparm->keyid=(u8)keyid=%d\n",
-		 psetkeyparm->algorithm, keyid));
+		 ("\n %s: psetkeyparm->algorithm=%d psetkeyparm->keyid=(u8)keyid=%d\n",
+		  __func__, psetkeyparm->algorithm, keyid));
 
 	switch (psetkeyparm->algorithm) {
 	case _WEP40_:
@@ -1614,8 +1622,8 @@ int rtw_set_key(struct adapter *adapter, struct security_priv *psecuritypriv, in
 		break;
 	default:
 		RT_TRACE(_module_rtl871x_mlme_c_, _drv_err_,
-			 ("\n rtw_set_key:psecuritypriv->dot11PrivacyAlgrthm=%x (must be 1 or 2 or 4 or 5)\n",
-			 psecuritypriv->dot11PrivacyAlgrthm));
+			 ("\n %s:psecuritypriv->dot11PrivacyAlgrthm=%x (must be 1 or 2 or 4 or 5)\n",
+			  __func__, psecuritypriv->dot11PrivacyAlgrthm));
 		res = _FAIL;
 		goto err_free_parm;
 	}
-- 
2.19.2

