Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 20:38:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1E9ED580443;
	Tue,  4 Dec 2018 04:10:00 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 04 Dec 2018 04:10:00 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AyixTNxTHZLvMgSkCPMqJMzKBs9psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRSOt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqQWUeG11qbD0DvNb+lW2Df67YjIdQ4hquyLULJxbMXR00kuFwTAjlWX?=
 =?us-ascii?q?t4zoJDyV1uEXvGia6+psT/6gi2kiqwxopDWk28kiio7Mho0Py1DE8z10wJ0tJd?=
 =?us-ascii?q?25Tk57YMKrEIBKuyGcKYR2XtsuTH12tyYiyr0Ko4K0fC8PyJkh2hXRaOSHfpCW?=
 =?us-ascii?q?7h7/UOudOyp0iXx7dL6lmhq/8lSsxvf9W8S2yFpGsDZJn93Wun0O1xHf8NWLR/?=
 =?us-ascii?q?p880u7xDqC0wHe5+dZKk4uj6XbMYQuwrsom5oTr0vDGij2lV3ojK+ZaEok4PKk?=
 =?us-ascii?q?6+f5bbX8oJ+TKYt0hhv5MqQ0lcyzGeU4Mg4QUGiH4emwyqHv8EnjTLlXgPA6jL?=
 =?us-ascii?q?PVvI3ZKMgHvKK0Ag1Y3p4m6xmlDjem1NoYnWMALFJAYB+Hi4npO1fTIPH3FPu/?=
 =?us-ascii?q?gEqjkC1tx//YOr3tG5LNL3bFkLj/Z7Zw8FBcyAUtwtBF/Z5UCa8OIOj1WkDvsN?=
 =?us-ascii?q?zUFBg5Mxa7w+r/EtVyypseWX6TAq+eKK7StV6I5uExLOWWa44VpS3wK/wk5/7o?=
 =?us-ascii?q?kH84lkURfaiv3ZsLdn+4Gu5qLFmeYXrpmt0BC3sFvhIiTOz2j12PST5TaGyzX6?=
 =?us-ascii?q?Ig/D47D5iqDYfeRo+3hryB0zy2HplXZmBAF1CNHm3kd4SCW/cQdi2SJtVtnSAD?=
 =?us-ascii?q?VbikU4Uhzw2htBfmy7p7KerZ4i8YtZX929Rv5O3Tkhcy9TpzD8mG12GNTmd0nn?=
 =?us-ascii?q?4HRjMs3aB/p1B9xUmH0aRin/NYEtlT7etTUggmLZ7c0/B6C9fqVw3bZdeJSFGm?=
 =?us-ascii?q?Qta8DTErVN0xwcQDY0J8G9WkkxDC0DCmA74Tl7yXGpM09rjQ0GT2J8Z403zGzr?=
 =?us-ascii?q?Uuj0E6QstTMm2rnq1/+BLVB4LTl0WZlryldaIT3CPW8GeDzGyOvFxXUQJqUKXF?=
 =?us-ascii?q?W2wfaVXSrdjj+kzCSLquA6w9MgRd0c6CNrdKatrxgFpbXvjjJsrRb3ixm2iqAx?=
 =?us-ascii?q?aI3a2DbIztd2UZ3yXdDUwEnhsX/XaHMwg+Gyigr3jfDDxoCVLgfUfs/fNip3O8?=
 =?us-ascii?q?S08+1xuKYFF517qp5h4VguSRRO4J0bIapigtsTV0E0y739LNFdWAoRFsfKFdYd?=
 =?us-ascii?q?M7/VdG2njVtw17Ppy8Ma9igkQSfBhwv0Przx93EJlPkdA2rHM2ywp/Mb6Y0FJE?=
 =?us-ascii?q?dzOfwZDwOr3WJnPu/By1bK7WwFXe0NeQ+qcA8/k4r1TjvAe0Fkst6Xln0t9V02?=
 =?us-ascii?q?eC6ZXOFgYdTZXxUkMv/Rhgu77aejU955/T1XB0K6a0tiHN2t03C+ol0BqvZMpf?=
 =?us-ascii?q?P76eGw/0EM0aANauJfcum1ioaBIEIe9T+LQ1P8Oga/uJxqqrMPx8kzKhiGRN+J?=
 =?us-ascii?q?p93V6U9ypgVu7I2I4IwvGF3gedSzjwllagssDtloBCajEfBW6/ySniBI5Maax+?=
 =?us-ascii?q?Z4cLCWGyI8KpwtVynYLiW3ld9FS7HVMJxNepeQaOb1z6xQBQz0UXrmC9liui0j?=
 =?us-ascii?q?N0lCslrqyB0yzUwuTubQYINXRPRGZ/k1jsO4+0j9YBUUisbggpkgal5Engy6ha?=
 =?us-ascii?q?oqR/M3fcQUNScyfqKGFiV7O6tqCebM5X9JMorSJXXfy8YFCbULL8owEW0zj+H2?=
 =?us-ascii?q?tY3z07czCqupPknx11km6dLXBzrGbHdsF03xvQ+NvcRftJ1DocWCZ4kSXXBkS7?=
 =?us-ascii?q?P9Sx/9WbjY3DsuO9V2KmTJFTajPkzYCDtCu6421lHxu/kuu3mt3mFwg6zCD628?=
 =?us-ascii?q?NrVSXOsBbzfI3r276mPuJge0liHEX85NZiGoFijoswg4kd2HgAiZWS53YHk2bz?=
 =?us-ascii?q?MdNA1KL6bXoNQyMLwtHP7Ajk3k1jMmyGx4bjWnqBxcthYsGwYnkK1SIl88BKFK?=
 =?us-ascii?q?CU4aRHnSRvo1q0twLRYeVnkTcbxvsj83oag+APuAowwSSRGLESHU9EPSPykxSE?=
 =?us-ascii?q?9cyxrKJSZGy3a7i/yFJ+ncy9DLGFugxcXXf5epQ4EiNq4MRwLknM0GHt5YH+Y9?=
 =?us-ascii?q?bfc8gTthKPnhfEjuhVLo8xl/UQiSpmP2L9oWMqy+ohgRNy2pG6uZCNK39x86Kh?=
 =?us-ascii?q?Hh5YKjr1atsP+jHqiKZShMeX0JqpHpV8ATULR5roQOmsEDITs/TnKgmPHCc9qn?=
 =?us-ascii?q?edBbrQAwuf5F16oHLIFpChL2uXK2UBzdV+WBmdI1RSjxsOUzU9mp45CxqmxMj8?=
 =?us-ascii?q?cEpi4jAR51j4qgZDy+5yNhn/VHvfqxmsajsuVJefKx9W5BlY50jJKcye8v5zHy?=
 =?us-ascii?q?ZA852jtgONL3KUZx9SAWEVQECEBE3jPrqz5dnG6eeYHfGzL//PYbWItOxfWO2E?=
 =?us-ascii?q?xZOp0ot64TmMMt+DMWVlD/0+wkBDR2x2G9zFmzUTTCwajyLMb8mGpBel5y14tM?=
 =?us-ascii?q?a//O7wWALo44uPBKBfMdFu+xCwnKeCOPSchCd/KTZEyJwMwWXEx6QY3F4Xkytu?=
 =?us-ascii?q?bSWiEawctS7RS6Ldgq9XAAAaayNwN8tI7rgw3gpXOc7chdP6yKR4juMuC1peUV?=
 =?us-ascii?q?zhm8epZdEFIm2nNVPHAlqLO6qCJTHR3873Zqa8Q6VKjOpIrx2wpSqbE0j7MzuZ?=
 =?us-ascii?q?ijnmTAqvPv9MjS2BOBxeuZqwchJsCWjlUdLnZQe3MN5xjT0q37I0gmnGOnIbMT?=
 =?us-ascii?q?h5a0lNtKGf7TtEgvVjHGxM9mZlLeiBmyqD8+bUMIoZsft1DSRyjO9a5HU6y71I?=
 =?us-ascii?q?7CBLXvB1mS3SrsJwrFGiiOWA1j1nUB9WoDZRmI2LpVliObne9pRYWXfL5hQN7W?=
 =?us-ascii?q?CRCxQMv9RkC93vtLpWytjAj6/zLDZC89TJ/coTHcTUKcSHMGY/PhrtAjLbEAwF?=
 =?us-ascii?q?TTv4fV3Y0mNHnf7a1V3d+pcgp5fvmLIKS7lGRFIyC/UWA1hkG9pEJ414CGAKi7?=
 =?us-ascii?q?me2e8M9HP2gAPAQ8BdoNiTV/6IEPLqLyixgrxNZh9OyrT9e9dAfrbn0lBvPwEp?=
 =?us-ascii?q?1L/BHFDdCJUU+nVs?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CaAABAbgZch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGCaYECJ4N5g3uQLIINFI4qiQuBcywLCAGIESI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpIwyCNiQBgmIBAgMBAiAEGQEbHQEDAgkBAQUFCw0CAiYCAgMeAQEFD?=
 =?us-ascii?q?AEFARwGEwUDgxkBgWgBAxUFCphpPIsNfBYFAReCdwWBMQGDEwoZJw1dgTcCBhJ?=
 =?us-ascii?q?5ixMXgUA/hCOCV0cDhGSCVwKJMZZoLgmHA4YgcIMuGIFbTYREijosjUCBDIluM?=
 =?us-ascii?q?IEsA4IDMxoIGxVsgjsJghIMF4NKhFmFez4zAYEEAQGLEgEB?=
X-IPAS-Result: =?us-ascii?q?A0CaAABAbgZch0O0hNFjHQEBBQEHBQGBUwYBCwGCaYECJ4N?=
 =?us-ascii?q?5g3uQLIINFI4qiQuBcywLCAGIESI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCN?=
 =?us-ascii?q?iQBgmIBAgMBAiAEGQEbHQEDAgkBAQUFCw0CAiYCAgMeAQEFDAEFARwGEwUDgxk?=
 =?us-ascii?q?BgWgBAxUFCphpPIsNfBYFAReCdwWBMQGDEwoZJw1dgTcCBhJ5ixMXgUA/hCOCV?=
 =?us-ascii?q?0cDhGSCVwKJMZZoLgmHA4YgcIMuGIFbTYREijosjUCBDIluMIEsA4IDMxoIGxV?=
 =?us-ascii?q?sgjsJghIMF4NKhFmFez4zAYEEAQGLEgEB?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="42653676"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 04:09:58 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726222AbeLDMGy (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 07:06:54 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:37781 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725770AbeLDMGx (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 07:06:53 -0500
Received: by mail-it1-f196.google.com with SMTP id b5so14004579iti.2;
        Tue, 04 Dec 2018 04:06:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=gbGGxqVG/mnq0yhffwYo9a4DBJQEfAh0oF02xMjRwqA=;
        b=t+oB3dRPtQ8uMm7R9Jd7LsmA44JLq8Df3Ja3ai5hTljVx2Kl3HomZeJMkOsi7yr02q
         4JqADnHgze7oSO25oS/bGwt2+WNOcLwZAeNXoH98D0fDjRMNiXn+P/kTyZ8rN/jPyp1X
         4QlVXEDXqmfDJUf5AwHEjxO9MwH+Crlu60KO1HH82zfDnu3bRHUGK7nJegP8wR0vwvRk
         jQsB9HUYY+uHxkJeaAgn/znQtsAnFcPeKUQsqNezcJVqxtUCoRuBV6q66QuLOO7YkKgq
         HdCwNv4S2PRji/grzPZuuMO38dRIKmyck4gPMPnbka6VZNXbCw6jwf7QTT79Y5OUYk9d
         Kk9g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=gbGGxqVG/mnq0yhffwYo9a4DBJQEfAh0oF02xMjRwqA=;
        b=BHRuCTLiSZB6jVmVRh6UeYgonG6iJ/lLEzTZ0aO9m58lcJ5NIyQ/GwgI2ysGoU2XXW
         oIFl6zzk9PGZ88O/jS1E4WjPRZKUZDLZYWNXJ8VMIGbV3IYRN70zguqZQKLBHUpqHeI2
         NxMeO6NncdXAsVpd0T/fP4IP94xsj8YJ2uPrjy/FrB3j2iQxEKEp57yB4VNoBOnmEo+d
         8AhlQdzmkaUrQq6gflalvocGWuZmzncXs91mo0ywU9CBAvaOQqgKE2kkUlJLAEuFlyUZ
         Ec/5ziAYb/42yOIDuoLrpMvI26k3LvyGvy3VelOwymX+lxcVMDNKYCvyg3D7E4yWkWgC
         0N5w==
X-Gm-Message-State: AA+aEWZXgtw3AAEsOXP4STl/1LJKTkveYbcfvT+OP2xu8+iGCRGOpopS
        4VGGzDBJde2/tmQCVBx8lmTRTSP6bmDQEGOmNLCPHMPg
X-Google-Smtp-Source: AFSGD/Wuqc1VKF7cwUIp1UU1mGn7OI76/FlcX0MlZhuCKfkuqmBlkdbVrG6piFYJ4084OveGNoFJYOtp5A66Ozt0Jss=
X-Received: by 2002:a24:cfc1:: with SMTP id y184mr10414603itf.72.1543925211580;
 Tue, 04 Dec 2018 04:06:51 -0800 (PST)
MIME-Version: 1.0
References: <20181204103726.750894136@linuxfoundation.org> <20181204103727.530335739@linuxfoundation.org>
In-Reply-To: <20181204103727.530335739@linuxfoundation.org>
From: Ilya Dryomov <idryomov@gmail.com>
Date: Tue, 4 Dec 2018 13:06:40 +0100
Message-ID: <CAOi1vP_uNBXySo4yNOjcSBUgqDRjo2abm41UZCXazUG7ygRVcA@mail.gmail.com>
Subject: Re: [PATCH 4.14 018/146] libceph: implement CEPHX_V2 calculation mode
To: Greg KH <gregkh@linuxfoundation.org>
Cc: linux-kernel@vger.kernel.org, stable@vger.kernel.org,
        Sage Weil <sage@redhat.com>, ben.hutchings@codethink.co.uk,
        sashal@kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 4, 2018 at 12:01 PM Greg Kroah-Hartman
<gregkh@linuxfoundation.org> wrote:
>
> 4.14-stable review patch.  If anyone has any objections, please let me know.
>
> ------------------
>
> commit cc255c76c70f7a87d97939621eae04b600d9f4a1 upstream.
>
> Derive the signature from the entire buffer (both AES cipher blocks)
> instead of using just the first half of the first block, leaving out
> data_crc entirely.
>
> This addresses CVE-2018-1129.
>
> Link: http://tracker.ceph.com/issues/24837
> Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
> Reviewed-by: Sage Weil <sage@redhat.com>
> Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
> Signed-off-by: Sasha Levin <sashal@kernel.org>
> ---
>  include/linux/ceph/ceph_features.h |  7 +--
>  net/ceph/auth_x.c                  | 73 +++++++++++++++++++++++-------
>  2 files changed, 60 insertions(+), 20 deletions(-)
>
> diff --git a/include/linux/ceph/ceph_features.h b/include/linux/ceph/ceph_features.h
> index 59042d5ac520..70f42eef813b 100644
> --- a/include/linux/ceph/ceph_features.h
> +++ b/include/linux/ceph/ceph_features.h
> @@ -165,9 +165,9 @@ DEFINE_CEPH_FEATURE(58, 1, FS_FILE_LAYOUT_V2) // overlap
>  DEFINE_CEPH_FEATURE(59, 1, FS_BTIME)
>  DEFINE_CEPH_FEATURE(59, 1, FS_CHANGE_ATTR) // overlap
>  DEFINE_CEPH_FEATURE(59, 1, MSG_ADDR2) // overlap
> -DEFINE_CEPH_FEATURE(60, 1, BLKIN_TRACING)  // *do not share this bit*
> +DEFINE_CEPH_FEATURE(60, 1, OSD_RECOVERY_DELETES) // *do not share this bit*
> +DEFINE_CEPH_FEATURE(61, 1, CEPHX_V2)             // *do not share this bit*
>
> -DEFINE_CEPH_FEATURE(61, 1, RESERVED2)          // unused, but slow down!
>  DEFINE_CEPH_FEATURE(62, 1, RESERVED)           // do not use; used as a sentinal
>  DEFINE_CEPH_FEATURE_DEPRECATED(63, 1, RESERVED_BROKEN, LUMINOUS) // client-facing
>
> @@ -209,7 +209,8 @@ DEFINE_CEPH_FEATURE_DEPRECATED(63, 1, RESERVED_BROKEN, LUMINOUS) // client-facin
>          CEPH_FEATURE_SERVER_JEWEL |            \
>          CEPH_FEATURE_MON_STATEFUL_SUB |        \
>          CEPH_FEATURE_CRUSH_TUNABLES5 |         \
> -        CEPH_FEATURE_NEW_OSDOPREPLY_ENCODING)
> +        CEPH_FEATURE_NEW_OSDOPREPLY_ENCODING | \
> +        CEPH_FEATURE_CEPHX_V2)
>
>  #define CEPH_FEATURES_REQUIRED_DEFAULT   \
>         (CEPH_FEATURE_NOSRCADDR |        \
> diff --git a/net/ceph/auth_x.c b/net/ceph/auth_x.c
> index ce28bb07d8fd..10eb759bbcb4 100644
> --- a/net/ceph/auth_x.c
> +++ b/net/ceph/auth_x.c
> @@ -9,6 +9,7 @@
>
>  #include <linux/ceph/decode.h>
>  #include <linux/ceph/auth.h>
> +#include <linux/ceph/ceph_features.h>
>  #include <linux/ceph/libceph.h>
>  #include <linux/ceph/messenger.h>
>
> @@ -803,26 +804,64 @@ static int calc_signature(struct ceph_x_authorizer *au, struct ceph_msg *msg,
>                           __le64 *psig)
>  {
>         void *enc_buf = au->enc_buf;
> -       struct {
> -               __le32 len;
> -               __le32 header_crc;
> -               __le32 front_crc;
> -               __le32 middle_crc;
> -               __le32 data_crc;
> -       } __packed *sigblock = enc_buf + ceph_x_encrypt_offset();
>         int ret;
>
> -       sigblock->len = cpu_to_le32(4*sizeof(u32));
> -       sigblock->header_crc = msg->hdr.crc;
> -       sigblock->front_crc = msg->footer.front_crc;
> -       sigblock->middle_crc = msg->footer.middle_crc;
> -       sigblock->data_crc =  msg->footer.data_crc;
> -       ret = ceph_x_encrypt(&au->session_key, enc_buf, CEPHX_AU_ENC_BUF_LEN,
> -                            sizeof(*sigblock));
> -       if (ret < 0)
> -               return ret;
> +       if (!CEPH_HAVE_FEATURE(msg->con->peer_features, CEPHX_V2)) {
> +               struct {
> +                       __le32 len;
> +                       __le32 header_crc;
> +                       __le32 front_crc;
> +                       __le32 middle_crc;
> +                       __le32 data_crc;
> +               } __packed *sigblock = enc_buf + ceph_x_encrypt_offset();
> +
> +               sigblock->len = cpu_to_le32(4*sizeof(u32));
> +               sigblock->header_crc = msg->hdr.crc;
> +               sigblock->front_crc = msg->footer.front_crc;
> +               sigblock->middle_crc = msg->footer.middle_crc;
> +               sigblock->data_crc =  msg->footer.data_crc;
> +
> +               ret = ceph_x_encrypt(&au->session_key, enc_buf,
> +                                    CEPHX_AU_ENC_BUF_LEN, sizeof(*sigblock));
> +               if (ret < 0)
> +                       return ret;
> +
> +               *psig = *(__le64 *)(enc_buf + sizeof(u32));
> +       } else {
> +               struct {
> +                       __le32 header_crc;
> +                       __le32 front_crc;
> +                       __le32 front_len;
> +                       __le32 middle_crc;
> +                       __le32 middle_len;
> +                       __le32 data_crc;
> +                       __le32 data_len;
> +                       __le32 seq_lower_word;
> +               } __packed *sigblock = enc_buf;
> +               struct {
> +                       __le64 a, b, c, d;
> +               } __packed *penc = enc_buf;
> +               int ciphertext_len;
> +
> +               sigblock->header_crc = msg->hdr.crc;
> +               sigblock->front_crc = msg->footer.front_crc;
> +               sigblock->front_len = msg->hdr.front_len;
> +               sigblock->middle_crc = msg->footer.middle_crc;
> +               sigblock->middle_len = msg->hdr.middle_len;
> +               sigblock->data_crc =  msg->footer.data_crc;
> +               sigblock->data_len = msg->hdr.data_len;
> +               sigblock->seq_lower_word = *(__le32 *)&msg->hdr.seq;
> +
> +               /* no leading len, no ceph_x_encrypt_header */
> +               ret = ceph_crypt(&au->session_key, true, enc_buf,
> +                                CEPHX_AU_ENC_BUF_LEN, sizeof(*sigblock),
> +                                &ciphertext_len);
> +               if (ret)
> +                       return ret;
> +
> +               *psig = penc->a ^ penc->b ^ penc->c ^ penc->d;
> +       }
>
> -       *psig = *(__le64 *)(enc_buf + sizeof(u32));
>         return 0;
>  }

Hi Greg,

I thought this series (patches 13 - 18) was dropped from the 4.14 queue.
If it wasn't, you also need to pick up the following:

f1d10e046379 libceph: weaken sizeof check in ceph_x_verify_authorizer_reply()
130f52f2b203 libceph: check authorizer reply/challenge length before reading

See our discussion with Sasha:

  https://www.spinics.net/lists/stable/msg272462.html

Thanks,

                Ilya
