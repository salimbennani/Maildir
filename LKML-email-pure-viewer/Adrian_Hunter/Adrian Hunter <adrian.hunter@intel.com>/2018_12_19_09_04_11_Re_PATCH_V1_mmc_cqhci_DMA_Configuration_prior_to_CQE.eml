Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:32:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9F5FC5805F0;
	Wed, 19 Dec 2018 01:06:03 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga005-1.jf.intel.com with ESMTP; 19 Dec 2018 01:06:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A75r3LxWMrMR6BberRuJV/1uU58LV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGEuadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp6y?=
 =?us-ascii?q?YZUBD+QBOuZWrIfzqFUBohS8GQaiC/jvyidKi3Ltwa030f4sHR3a0AEuHd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41LXFwijZb/NXwzj97pXDfBI8ofGKQbJ/b9DRwlQoGgzfk1qQ?=
 =?us-ascii?q?s43lMCmT1ugXs2ib8uxgVf6xhG49sAxxoz6vxtsyhYnNnI4a1lfE9SBgzYszON?=
 =?us-ascii?q?a2S1Z7bMa6HJdMsyyWLZZ6T808T21ypSo3yaEKtYS6cSUI0Jgr2hDSZvOdf4SV?=
 =?us-ascii?q?7B/uW/ydLSp2iX9kYr6zmRm//E69wePmTMa0ykxFri9dn9nMqH8N0xvT59CZSv?=
 =?us-ascii?q?ty4EihwyyD1wPN5eFeJ0A7i67bJ4Qmwr4qmZofqUXDHinol0XqlKKaaFko9+yy?=
 =?us-ascii?q?5+j6bLjquIWQO5J3hw3iKKgjm86yDfw9MgcUXmib/eq81Kfk/U38WLhKivw2kq?=
 =?us-ascii?q?/EsJHVPMgbpbC2AxVT0ok97xazFjCm0doenXYZNlJIYwyHj4f3NFHUOvz4Dumw?=
 =?us-ascii?q?g06qkDh1w/DKJLrhAo/CLnTbirfuYa5961JAyAo01d1f45NUCrIfL/7pVU7xqc?=
 =?us-ascii?q?fVDhs4Mwyy3ubmB89x1oIYWWKTHKCZNLnevkOP5uIqO+OMfpMauC7hK/g54P7j?=
 =?us-ascii?q?lX85lkUcfam1x5QXb2q0HvR7I0qDZ3rsjcwMEWMLvgo4Uezrh0eOUT9VZ3auQa?=
 =?us-ascii?q?084is3B56hDYfGXoqtmqCO3D+nHp1KYWBLElKMEXD2eImeWPcMbySSIslmkjEf?=
 =?us-ascii?q?UbihSokh1QyhtQPgyrpnKPbU9TMctZ75yNd14OjTnwko9TNoF8Sdz32NT2Zsk2?=
 =?us-ascii?q?wSXD823Kd/oU9nxleZy6d4gedVFdhS5/NPTwc7OoTQz+18C9DuRA3Bes2FR0qh?=
 =?us-ascii?q?QtWjGTsxVM4+w8cSY0ZhHNWvlhPD0DCsA7MPk7yLBYY78qTT33XqI8Z9ynDG1L?=
 =?us-ascii?q?QujlU8Q8tPM3GmibB79wTJG4HJlECZnb6wdasAxC7N6HuDzW2WsU5FSgFwT7vK?=
 =?us-ascii?q?UWofZkTMq9T5/V3NT7mpBbQjMQtBzMqCJ7BOat3oi1VGWfjiNM7fY2K3h2e/Gx?=
 =?us-ascii?q?KIyqmQY4rtfmUXxD/dB1QckwAP4XaGMhAzCTq7rGLAEjNiD1LvbFnq8elltny7?=
 =?us-ascii?q?SFQ5zwWLb01nyrq09QQZhf2aS/MPwL0EvD0tpClzHFa4x9jWEcaPpxJ9fKVAZt?=
 =?us-ascii?q?Mw+EtH1WPctwx6IpygL6BjikQCcwhtuEPuzRF3CoRGkcglt34qyAtyKaSF0FJO?=
 =?us-ascii?q?bT+Y3JbwOqHJJWn25hygd6nW2lTG2taM5qgP8Og4q0nkvAyxDEUi92to0tZL3H?=
 =?us-ascii?q?qc/JnFFxcSXo/rXUYx9Bh6oK/abzI554PV031sLKa1viXD29IvGOsq1BKgc81D?=
 =?us-ascii?q?P6ODEQ/4C9caCNS2KOw2h1ipaQoJPeBP9KIuI8yqbfqH2K6xM+ZmkzKrlmBH4I?=
 =?us-ascii?q?F70kKR+CtwUO/I35AZw/6G2guLTSvzjFCkssrvg4BLeSkSHnajySjjHINRfKxy?=
 =?us-ascii?q?cpoRBme0PsK3wc9yh5jzVH5C9V6vHk8J19WteRWPcVP9xwpQ1UIMrHyjmCu4yS?=
 =?us-ascii?q?F0kj4zoqqe2izO3/rtdB4dNmFXQ2liiE/mIZKogNACQEiocw8pmQOl5Eb73aRa?=
 =?us-ascii?q?pL5zL3LOQUdOZCX2K2BiUq2ttruNecJP6ZUosTlJX+S4e1yVVrn9ox4C2SP5A2?=
 =?us-ascii?q?Re3Cw7dy2tupjhnRx1knidLHVwrHreY81w3g3Q5N/fRf5Q2DoJWi94hCLTBli9?=
 =?us-ascii?q?Odmp4NqVm43CsuC4S2KuSJlTfTP3woOHsSux/XdqDgGnn/Cvht3nFhA30C/h2N?=
 =?us-ascii?q?ltTynIrhf8Yo/w2qS+MOJneFRoBVDm58p7HIF+jpU/hJUK1XcGgZWV+GINkX3v?=
 =?us-ascii?q?PtVDxaL+cH0NSCYIw9HP4Qjpwk1jLm+TyIL/WXWQ2c9hZ9i8YmML1SMx9cFKCK?=
 =?us-ascii?q?GI7LNamSt5uEa3rQXUYfJlhDcS1eMu6GIGg+EOoActyySdArMIEkVCMy3jiQ+I?=
 =?us-ascii?q?78ygo6VNf2mgb6Kw1EVlkNClDbGCpBxcWXnjdpcjGy9w8ttwMFbW3HLv7YHkfc?=
 =?us-ascii?q?HabcgPuR2MjxfAk+9VJYotlvoNgCprI2P8smcjy+4mlhxuxpC6sZODK2Vs+qK5?=
 =?us-ascii?q?HxFZOif0Z8MV5jHik6JektyK0ICoG5VrAi8LU4fwTfK0DDISsuzqOB2UHz07rn?=
 =?us-ascii?q?ebBKDTHQuC6Ep9q3LPEparN2yYJXUDzNViQgWdK1JbgAwOQDo6mZs5HBiwxMP9?=
 =?us-ascii?q?aEd5+iwR5lngpxtO0O1oMgfwUnzFqAe0cDs0S4WfLBlL7gFE/UjVKteT7uZyHy?=
 =?us-ascii?q?Fe452goxaBKm2dZwRUE24JXlaICEzkPrmr/dPA6fSXBvKiL/vSZrWDsexfV/CV?=
 =?us-ascii?q?xZK2z4tp5TCMOt+UPnllCf071VFOXXR4G8TfhjUORDYblyPLb86Huhi8/jd7od?=
 =?us-ascii?q?y48PTuQAjv/5eAC6NOMdVz/BC7maeDOPCRhCZ6KjZY14kAxXzSyLgY014dlTtu?=
 =?us-ascii?q?dyS2EbkbsS7NTaTQmrJYDhIBaiNzMtdI4Lw43gVXJcHbjdb13KZijvEpE1dFSU?=
 =?us-ascii?q?DhmsaxaMMQPmGyL0nHC1iLNbicIT3Lwtr6Yae9Sb1WkeVVuAe8uTedE0//IDuD?=
 =?us-ascii?q?kyPlWAyoMeFJlCubJgBRuJmhchZxDmjuVM7mahy+MNNtkTI626E7hnPUOm4aKj?=
 =?us-ascii?q?V8d0JNrruN7SJXmPl/GmpB7mZ7IumAgSqW8+7YKpMOu/txHit0j/5a4Gg9y7ZN?=
 =?us-ascii?q?7CBLXvp1mC7Trt5ou16nk+mPxSBhUBpBsTtLgIOLvUN/OaTW7JVAWHDE/A4T4m?=
 =?us-ascii?q?WUERgFu9xlCti885xXn+PIi6D6LiZLu/HT+MIABs7ZLsPPZGEiNh/gBD/SAQ0E?=
 =?us-ascii?q?ZTi1NG3ejgpWl/TEsjWIqpZ8qpHqg4EJTJdfVVo8DPRcDV5qWJQGIZFqTnYhlL?=
 =?us-ascii?q?WzksEF/zy9oQPXScEcuYrIBdyIBvC6ATqDjLBCLzsVx6/1N8xHP4Hh2kVkLFln?=
 =?us-ascii?q?mpjHAWLRW8xApmtqaQpi8xYFy2R3UmBmgxGtUQiq+nJGUKfsxhM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAAB1CRpch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYNaEieDfYh4ix2BYC0UmTkXGBMBhyoiOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpL4I2JAGCYQEBAQECAQECIARSBQEJAQEKDgoCAiYCAgNUBgEMBgIBA?=
 =?us-ascii?q?QGDHYF6CAWnInwzijCBC4s0gVc/gTiCa4gJglcCiT6GX4EIkAoHAoIlBI8yBhi?=
 =?us-ascii?q?RVolHkDWBXYF3MxojgzyCJxeOHz0BATGBBQEBjWABAQ?=
X-IPAS-Result: =?us-ascii?q?A0AxAAB1CRpch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBZYN?=
 =?us-ascii?q?aEieDfYh4ix2BYC0UmTkXGBMBhyoiOBIBAwEBAQEBAQIBEwEBAQoLCQgpL4I2J?=
 =?us-ascii?q?AGCYQEBAQECAQECIARSBQEJAQEKDgoCAiYCAgNUBgEMBgIBAQGDHYF6CAWnInw?=
 =?us-ascii?q?zijCBC4s0gVc/gTiCa4gJglcCiT6GX4EIkAoHAoIlBI8yBhiRVolHkDWBXYF3M?=
 =?us-ascii?q?xojgzyCJxeOHz0BATGBBQEBjWABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208";a="58094210"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 01:06:00 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728570AbeLSJF5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 04:05:57 -0500
Received: from mga09.intel.com ([134.134.136.24]:62140 "EHLO mga09.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727060AbeLSJF5 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 04:05:57 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 01:05:56 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208";a="120035186"
Received: from ahunter-desktop.fi.intel.com (HELO [10.237.72.130]) ([10.237.72.130])
  by orsmga001.jf.intel.com with ESMTP; 19 Dec 2018 01:05:54 -0800
Subject: Re: [PATCH V1] mmc: cqhci: DMA Configuration prior to CQE
To: Sowjanya Komatineni <skomatineni@nvidia.com>,
        ulf.hansson@linaro.org, linux-mmc@vger.kernel.org
Cc: thierry.reding@gmail.com, jonathanh@nvidia.com,
        linux-tegra@vger.kernel.org, linux-kernel@vger.kernel.org
References: <1544811715-23792-1-git-send-email-skomatineni@nvidia.com>
From: Adrian Hunter <adrian.hunter@intel.com>
Organization: Intel Finland Oy, Registered Address: PL 281, 00181 Helsinki,
 Business Identity Code: 0357606 - 4, Domiciled in Helsinki
Message-ID: <15dbfe38-f9fe-fbb1-2c98-a60c0101200a@intel.com>
Date: Wed, 19 Dec 2018 11:04:11 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.4.0
MIME-Version: 1.0
In-Reply-To: <1544811715-23792-1-git-send-email-skomatineni@nvidia.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 14/12/18 8:21 PM, Sowjanya Komatineni wrote:
> eMMC-5.1 JESD85-B51 Spec (Section 6.6.39), mentions DMA selection

There is no JESD85-B51.  I presume you mean JESD84-B51, but I can't find any
reference to DMA in 6.6.39.  All the host controller relevant material seems
to be in Annex B.  Can you clarify this reference?

> and DMA Block size configuration on SDHCI Host need to be done
> prior to enabling Command Queue Engine.
> 
> This patch fixes the sequence to follow the spec.
> 
> Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
> ---
>  drivers/mmc/host/cqhci.c | 18 +++++++++++++++---
>  1 file changed, 15 insertions(+), 3 deletions(-)
> 
> diff --git a/drivers/mmc/host/cqhci.c b/drivers/mmc/host/cqhci.c
> index 159270e947cf..f701342e7212 100644
> --- a/drivers/mmc/host/cqhci.c
> +++ b/drivers/mmc/host/cqhci.c
> @@ -248,6 +248,9 @@ static void __cqhci_enable(struct cqhci_host *cq_host)
>  		cqhci_writel(cq_host, cqcfg, CQHCI_CFG);
>  	}
>  
> +	if (cq_host->ops->enable)
> +		cq_host->ops->enable(mmc);
> +
>  	cqcfg &= ~(CQHCI_DCMD | CQHCI_TASK_DESC_SZ);
>  
>  	if (mmc->caps2 & MMC_CAP2_CQE_DCMD)
> @@ -273,9 +276,6 @@ static void __cqhci_enable(struct cqhci_host *cq_host)
>  
>  	mmc->cqe_on = true;
>  
> -	if (cq_host->ops->enable)
> -		cq_host->ops->enable(mmc);
> -
>  	/* Ensure all writes are done before interrupts are enabled */
>  	wmb();
>  
> @@ -561,6 +561,7 @@ static int cqhci_request(struct mmc_host *mmc, struct mmc_request *mrq)
>  	int tag = cqhci_tag(mrq);
>  	struct cqhci_host *cq_host = mmc->cqe_private;
>  	unsigned long flags;
> +	u32 cqcfg = 0;
>  
>  	if (!cq_host->enabled) {
>  		pr_err("%s: cqhci: not enabled\n", mmc_hostname(mmc));
> @@ -579,8 +580,19 @@ static int cqhci_request(struct mmc_host *mmc, struct mmc_request *mrq)
>  			pr_err("%s: cqhci: CQE failed to exit halt state\n",
>  			       mmc_hostname(mmc));
>  		}
> +		/* Configuration must not be changed while enabled */
> +		cqcfg = cqhci_readl(cq_host, CQHCI_CFG);
> +		if (cqcfg & CQHCI_ENABLE) {
> +			cqcfg &= ~CQHCI_ENABLE;
> +			cqhci_writel(cq_host, cqcfg, CQHCI_CFG);
> +		}
> +
>  		if (cq_host->ops->enable)
>  			cq_host->ops->enable(mmc);
> +
> +		cqcfg |= CQHCI_ENABLE;
> +		cqhci_writel(cq_host, cqcfg, CQHCI_CFG);
> +
>  	}
>  
>  	if (mrq->data) {
> 

