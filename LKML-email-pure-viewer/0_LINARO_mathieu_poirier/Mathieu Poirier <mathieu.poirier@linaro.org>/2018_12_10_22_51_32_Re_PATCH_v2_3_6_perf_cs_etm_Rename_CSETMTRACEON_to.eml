Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:44:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 043335807A2;
	Mon, 10 Dec 2018 14:51:40 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 14:51:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvltfbRY73tx/362uUVSyGCH/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci9Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocVvq6zLXIzTXCcfxWxCr25pLPchAgu/GMXKx/cdDMwkQoEgPKlEmQ?=
 =?us-ascii?q?qYzkPzyLy+QBqXCb7+1hVeK1im4otRtxryOrxsctjInGnJgVylfe+SV+2oY1Ks?=
 =?us-ascii?q?S1RUhmatCnCJtdrz+WO5dyT884Xm1ltjg2xqcbtZO4YCQG0pUqyhzHZ/GGcIWE?=
 =?us-ascii?q?+A/vWemTLDtih39pYqyziha9/EWm1+byTNO70ExQoSpAitTMtm4C1xjU6sWfVP?=
 =?us-ascii?q?t98Vmu2SyV2wDQ9O5EO0Y0mrTfK5I7xb4wjJUTvVzCHi/whkr2kLebels49uWs?=
 =?us-ascii?q?8ejrf7vrqoGGO4NpiQzyLr4il829DOggNwgBRWmb+eCy1L35+k35Ra1Hjvk3kq?=
 =?us-ascii?q?nfrZDbKt0Xpq2nDA9P1IYs9RK/Ay6h0NUWm3kIMkhFdQmZj4jmJV7OOur0DfSh?=
 =?us-ascii?q?jFS2ljdk2fTGMqfmApXXIXjPiK3hcqpl605A1AozyshS55ZVCrECPv3/QEDwtM?=
 =?us-ascii?q?HDAx89Mgy0xfvnCdpn2oMfX2KPHrGWMKfIvVCU4eIvJvGGZJUJtzblN/gl+/nu?=
 =?us-ascii?q?gGc5mVAHfKmpwYEYaHeiEvRmPkWWe3zsgtgaHGcOvwo+SvHqiVKYXT5SYXayQ7?=
 =?us-ascii?q?wz5jUhBI26CofDQ5ingKad0yejAp1WemdGB0iOEXfvaYqIQfQMaCWUIs9nlTwJ?=
 =?us-ascii?q?TryhS44n1RGzuw720btnLuzI+iIGsZLvzsR65+rWlRsq7zx7E9yd032RT2Fzhm?=
 =?us-ascii?q?4HXSQ23KB4oUx+0FuDy7J3g/5DGNxX5vNJVBo6NJHGw+x7DdDyRhzOftOTRFm6?=
 =?us-ascii?q?RdWmBCk7TsgtzN8Wf0Z9B9KigwjA3yWwBb8ZjbiLBJ0u/aLa0Hj8PMJ9y3fA1K?=
 =?us-ascii?q?k8gFgqWMpPNWu6hqFh8wjfHZLGk0Kcl6yyb6QTwDbN9HufzWqJpExXTRR/Ubvb?=
 =?us-ascii?q?UnwFZkvZt9L55ljcQL+oDrgnNghBycuGKqZRbt3pjFNGROrsOdjEYmKxnXuwCg?=
 =?us-ascii?q?iMxr+WcIXqfGAd1j3HCEcYiwAT4WqGNQ8mCyi8uW3eEiJhGUjvY0z29+l+s220?=
 =?us-ascii?q?TkkvwgGObk1h0ae1+xEPifydTfMTwqwLuCM7pzpoG1a92srcC8CcqAp5YKVcfd?=
 =?us-ascii?q?Q97U9b1WLYsgx9OYCgL6Bih1IEbwR7pUTu1w9zCoVBl8gqo2gnzA5zKaKezVNA?=
 =?us-ascii?q?eCmU3ZH2Or3LNGby+AqjZLLR2lHbyNyW4LsA6Owkq1X/uwGkDlAt83F53NhazX?=
 =?us-ascii?q?Sd5o/GAxEPUZ3sSEk38Rt6p7bEYiQm44PU1HtsMbS7szPY2tIpAvclxQikf9tF?=
 =?us-ascii?q?LKyEEwryGdUAB8eyMOwqh0SpbhUcMeFS6a44Jd+pe+GH2a6rJulgmj2mgH9D4I?=
 =?us-ascii?q?B81EKM6iV9RvTJ35YD3/GXwA+HWy3gg1emt8D9gZpEai0KHmqj1SjkA5ZcZrdz?=
 =?us-ascii?q?fYkXE2iuOdC4xtJki57rRXFY7l+jC0oa18CzfRqdckLy3RdX1UQRunGnnSq4zz?=
 =?us-ascii?q?ppkzAmtKaf3SrOw/j8exoDIGJEWG5ijVL0K4iuk98aRFSobxQulBa95Uf6xrJX?=
 =?us-ascii?q?paRlI2nIXEdIeTP7L2VjUqu2q7qDbNRD6JIusSVLTuu8ZUqWRaL6oxsfyynjBX?=
 =?us-ascii?q?dRxCgndzG2vZX0hx56h3iHLHZwr3rZftt8xQzF69zfRv5R3zwGSzd+iTTMAli8?=
 =?us-ascii?q?Pt+p/ciblpvZs+C+UX6hWYNXcSXx0YyAsy6773VwARKjh/CzhsHnEQ8i3C77zd?=
 =?us-ascii?q?ZqUj/ErBT9YontzKm6NeNnfk91BF7z8cZ6G4d+kpcui5EUw3QVmpKV/X8fm2fp?=
 =?us-ascii?q?Ldpbwb7+bGYKRTMTwN7a+gnl1FdjLnKU3Y35UHqdz9BlZ9m7ZGMWxy0849pLCK?=
 =?us-ascii?q?eS8LxLgy91rkCkogLWZPh3hi0dxuc26H4Gn+EJvxIgziCcArARB0ZUJyLtmAqT?=
 =?us-ascii?q?79CisqpXfn2gfqaq1Epxht2hCLCCogdBWHf2YJsiHClw7tlhP1LIynH89obkeN?=
 =?us-ascii?q?zIZ9IJqhKUiwvAj/RSKJ8pivoKgi9nNXj8vHI/ze47kAdu3Yq7vIWcL2Vt/aS5?=
 =?us-ascii?q?AgNXNzHvZsMT/C3tgrhansqMw4+vGZBhEC0RXJT0VfKoDC4StfP/OgmVCjI8rX?=
 =?us-ascii?q?ObGafFEQ+b9UdrtHbPE5GtN3GKK3gV19RiRB+BJENBhAAYRik1npk8Fgqy3szu?=
 =?us-ascii?q?bF955iwN5l7/shZMyPhnNxzhXWfEvguodi04SJuCLBpV8wFC4V3aMdeF4+J3Hi?=
 =?us-ascii?q?FY+IChrQOXJmyaYQRIEX8GWkieC1//Obmu4MHK8/KECeqmM/vOfbKOpPReVveP?=
 =?us-ascii?q?2JKvy5Zm8CyKNsmVJXliCPs72kVYUHB9GsTZnSgPSiMNmyLMac6buAmz+iltos?=
 =?us-ascii?q?+j9/TrXRrl5ZGTBLtKLdVv5xe2jL+DN+GOhSZ5KjVY1pIWyX/L0rgf21EShD90?=
 =?us-ascii?q?dzmwCrQNrirNTKPWmq9KAB8XcSJzNM1U760i2glBI9LUitTw1rRglP46F09FVU?=
 =?us-ascii?q?D9msGufcEFOXy9O0jdBEmVNLWKPznLw8DsbKO4SL1QivhUthKqtTaaFU/jIiqM?=
 =?us-ascii?q?lz3zWx+zNuFMiTmRPAZCt4GlbhZtFW/jQcr6ah26Nd97lyE5zacoiXPKK2EcNy?=
 =?us-ascii?q?Nxc0dMrr2W8CNZje9zG21H7np5M+aEnzyV4PXfKpYTqfFrGDh7l/pG4HQmzLtY?=
 =?us-ascii?q?9CFFS+ZzmCvXr95upUmpk+iPyjV9VhpOpS1GhIaKvUVkJKXY+YNMWXfC/BIR82?=
 =?us-ascii?q?qQDw4GqMdiCt3q6OhszY3rmaW7GT5Eu4bQ8MxaFsHSAMaGNnM7NlzuAjGCXyUf?=
 =?us-ascii?q?Sjv+EGjDh01Qjbmq8XyPr5Ug4szpkYYOS7JGEkQyF+kbB15NGN0EKY1wGDQ+nu?=
 =?us-ascii?q?jI34Yz+XOioUyJF41htZfdW6fXWK23JQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAA37Q5ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2sUE4wTX41AFJJBhHyBcxIBARgTAYMshEE?=
 =?us-ascii?q?iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIkEwYBATcBB?=
 =?us-ascii?q?QkBAQoYCSUDDAUgAQUBIhMFgxyBeggFmnA8ih2BbDOCdgEBBYcnCBKKc4EcgVc?=
 =?us-ascii?q?/g241hFqDXIImiyuEFH2QOwcCgiEEjx8jColch1csmF0CBAIEBQIFDyGBJYIOM?=
 =?us-ascii?q?xowgy+CG4kBhV8gMoEFAQEhiS6CTQEB?=
X-IPAS-Result: =?us-ascii?q?A0ACAAA37Q5ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2sUE4wTX41AFJJBhHyBcxIBARgTAYMshEEiNAkNAQMBAQEBA?=
 =?us-ascii?q?QECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIkEwYBATcBBQkBAQoYCSUDDAU?=
 =?us-ascii?q?gAQUBIhMFgxyBeggFmnA8ih2BbDOCdgEBBYcnCBKKc4EcgVc/g241hFqDXIImi?=
 =?us-ascii?q?yuEFH2QOwcCgiEEjx8jColch1csmF0CBAIEBQIFDyGBJYIOMxowgy+CG4kBhV8?=
 =?us-ascii?q?gMoEFAQEhiS6CTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,340,1539673200"; 
   d="scan'208";a="56325547"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 14:51:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729763AbeLJWvh (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 17:51:37 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:39648 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728778AbeLJWvg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 17:51:36 -0500
Received: by mail-pg1-f195.google.com with SMTP id w6so5658797pgl.6
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 14:51:35 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=K3zZ2MB2wxzKqc6a540cTp6h6khYOD6gkZKgbHXHJz0=;
        b=CbspZhJ62s/YO1i5o3Q5sH/GadMa+RzZMrc3d78FzV7/1i+om+CCQinmCUtMf3dGL0
         W9b/fDQ4IZn+7NMEIS/3bNMKNgltobfKVDf49D4Ia8FnR6XgyBHmhWTGv3ahNyml0rn2
         OBPIsdk4zgCV6/RBF3rOKm8JxXagTDyc4BiPQ=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=K3zZ2MB2wxzKqc6a540cTp6h6khYOD6gkZKgbHXHJz0=;
        b=bWQK0VNsNLs8YOFZM4MX8jfFAMzZhhzNgyc9QEpzzHILIv5Mfs6KfsDl2/5TdOqCJB
         sMD4iRZL+bmLSmaHjLTTIvEJC54TOhHwKNU2fDqkkBlaF8Yhg2jwUI1KZAtaLT4SfHHU
         SJpq3fk2J/gJg7UBpg13kNF/JBBuPbCQxtD43hhWe1nyfy1FYVcOvpklfc4BhlkdcFG+
         72k1iJ1x75FW+ciR5ZmZ/8/uim+koWD/XRenQI9Mc0I1faLHaAttcvw1tCR6oCQTXfEz
         vTW+I7WEWhtWKFUTYod1kpgE9nxMhKqYUzxfxUaK8vdFbLBKFnhhkhSVniiq+VgTYIwL
         IPNg==
X-Gm-Message-State: AA+aEWb7VKLgE5BA3SnSSM17D/uvyj6kER5zRJ+F5v+9Xsq3sViDxRR7
        xa/2+iJVuiEibUiOi4TAJ1Wuuw==
X-Google-Smtp-Source: AFSGD/W+RXXzs8t8P158CQIotdh2tNvy4YP44lJEGs6ilfrZbSAp8Z2a1PaOQQk4V4Pjg2HmiDziNw==
X-Received: by 2002:a63:1904:: with SMTP id z4mr12129827pgl.135.1544482295613;
        Mon, 10 Dec 2018 14:51:35 -0800 (PST)
Received: from xps15 (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id i193sm24105563pgc.22.2018.12.10.14.51.34
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 10 Dec 2018 14:51:34 -0800 (PST)
Date: Mon, 10 Dec 2018 15:51:32 -0700
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: Leo Yan <leo.yan@linaro.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Coresight ML <coresight@lists.linaro.org>,
        Mike Leach <mike.leach@linaro.org>,
        Robert Walker <robert.walker@arm.com>
Subject: Re: [PATCH v2 3/6] perf cs-etm: Rename CS_ETM_TRACE_ON to
 CS_ETM_DISCONTINUITY
Message-ID: <20181210225132.GB12152@xps15>
References: <1544431981-24144-1-git-send-email-leo.yan@linaro.org>
 <1544431981-24144-4-git-send-email-leo.yan@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1544431981-24144-4-git-send-email-leo.yan@linaro.org>
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Leo,

On Mon, Dec 10, 2018 at 04:52:58PM +0800, Leo Yan wrote:
> TRACE_ON element is used at the beginning of trace, it also can be
> appeared in the middle of trace data to indicate discontinuity; for
> example, it's possible to see multiple TRACE_ON elements in the trace
> stream if the trace is being limited by address range filtering.
> 
> Furthermore, except TRACE_ON element is for discontinuity, NO_SYNC and
> EO_TRACE also can be used to indicate discontinuity, though they are
> used for different scenarios for trace is interrupted.
> 
> This patch is to rename sample type CS_ETM_TRACE_ON to
> CS_ETM_DISCONTINUITY, firstly the new name describes more closely the
> purpose of the packet; secondly this is a preparation for other output
> elements which also cause the trace discontinuity thus they can share
> the same one packet type.
> 
> This patch also refactors the enumerations in cs_etm_sample_type by
> converting from bit shifting value to continuous numbers.
> 
> Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
> Cc: Mike Leach <mike.leach@linaro.org>
> Cc: Robert Walker <robert.walker@arm.com>
> Signed-off-by: Leo Yan <leo.yan@linaro.org>
> ---
>  tools/perf/util/cs-etm-decoder/cs-etm-decoder.c | 10 +++++-----
>  tools/perf/util/cs-etm-decoder/cs-etm-decoder.h |  6 +++---
>  tools/perf/util/cs-etm.c                        | 12 ++++++------
>  3 files changed, 14 insertions(+), 14 deletions(-)
> 
> diff --git a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c
> index 0b4c862..a3994f1 100644
> --- a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c
> +++ b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.c
> @@ -391,11 +391,11 @@ cs_etm_decoder__buffer_range(struct cs_etm_decoder *decoder,
>  }
>  
>  static ocsd_datapath_resp_t
> -cs_etm_decoder__buffer_trace_on(struct cs_etm_decoder *decoder,
> -				const uint8_t trace_chan_id)
> +cs_etm_decoder__buffer_discontinuity(struct cs_etm_decoder *decoder,
> +					   const uint8_t trace_chan_id)
>  {
>  	return cs_etm_decoder__buffer_packet(decoder, trace_chan_id,
> -					     CS_ETM_TRACE_ON);
> +					     CS_ETM_DISCONTINUITY);
>  }
>  
>  static ocsd_datapath_resp_t cs_etm_decoder__gen_trace_elem_printer(
> @@ -414,8 +414,8 @@ static ocsd_datapath_resp_t cs_etm_decoder__gen_trace_elem_printer(
>  		decoder->trace_on = false;
>  		break;
>  	case OCSD_GEN_TRC_ELEM_TRACE_ON:
> -		resp = cs_etm_decoder__buffer_trace_on(decoder,
> -						       trace_chan_id);
> +		resp = cs_etm_decoder__buffer_discontinuity(decoder,
> +							    trace_chan_id);
>  		decoder->trace_on = true;
>  		break;
>  	case OCSD_GEN_TRC_ELEM_INSTR_RANGE:
> diff --git a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
> index b295dd2..a272317 100644
> --- a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
> +++ b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
> @@ -23,9 +23,9 @@ struct cs_etm_buffer {
>  };
>  
>  enum cs_etm_sample_type {
> -	CS_ETM_EMPTY = 0,
> -	CS_ETM_RANGE = 1 << 0,
> -	CS_ETM_TRACE_ON = 1 << 1,
> +	CS_ETM_EMPTY,
> +	CS_ETM_RANGE,
> +	CS_ETM_DISCONTINUITY,
>  };

I'm in agreement with what you're doing in this patch but the above is a
different change and you can't pack it in here.  Just split it off in a separate
patch and everything will be fine.

>  
>  enum cs_etm_isa {
> diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
> index ffc4fe5..cea3158 100644
> --- a/tools/perf/util/cs-etm.c
> +++ b/tools/perf/util/cs-etm.c
> @@ -562,8 +562,8 @@ static inline int cs_etm__t32_instr_size(struct cs_etm_queue *etmq,
>  
>  static inline u64 cs_etm__first_executed_instr(struct cs_etm_packet *packet)
>  {
> -	/* Returns 0 for the CS_ETM_TRACE_ON packet */
> -	if (packet->sample_type == CS_ETM_TRACE_ON)
> +	/* Returns 0 for the CS_ETM_DISCONTINUITY packet */
> +	if (packet->sample_type == CS_ETM_DISCONTINUITY)
>  		return 0;
>  
>  	return packet->start_addr;
> @@ -572,8 +572,8 @@ static inline u64 cs_etm__first_executed_instr(struct cs_etm_packet *packet)
>  static inline
>  u64 cs_etm__last_executed_instr(const struct cs_etm_packet *packet)
>  {
> -	/* Returns 0 for the CS_ETM_TRACE_ON packet */
> -	if (packet->sample_type == CS_ETM_TRACE_ON)
> +	/* Returns 0 for the CS_ETM_DISCONTINUITY packet */
> +	if (packet->sample_type == CS_ETM_DISCONTINUITY)
>  		return 0;
>  
>  	return packet->end_addr - packet->last_instr_size;
> @@ -972,7 +972,7 @@ static int cs_etm__sample(struct cs_etm_queue *etmq)
>  		bool generate_sample = false;
>  
>  		/* Generate sample for tracing on packet */
> -		if (etmq->prev_packet->sample_type == CS_ETM_TRACE_ON)
> +		if (etmq->prev_packet->sample_type == CS_ETM_DISCONTINUITY)
>  			generate_sample = true;
>  
>  		/* Generate sample for branch taken packet */
> @@ -1148,7 +1148,7 @@ static int cs_etm__run_decoder(struct cs_etm_queue *etmq)
>  					 */
>  					cs_etm__sample(etmq);
>  					break;
> -				case CS_ETM_TRACE_ON:
> +				case CS_ETM_DISCONTINUITY:
>  					/*
>  					 * Discontinuity in trace, flush
>  					 * previous branch stack
> -- 
> 2.7.4
> 
