Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:37:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2231E580522;
	Thu, 20 Dec 2018 06:50:23 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 20 Dec 2018 06:50:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AeaIhDB1qPsfKdf6DsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSKPXxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelYtJH9qlkVoBuiGQWhHv/jxiNUinL026AxzuQvERvB3AwlB98Bv3?=
 =?us-ascii?q?XUrNPpO6gMV+C10LTDwzTeb/NXxTf99I/Icgw8qvyLQ7JwcMzRxlUxGAPDklWc?=
 =?us-ascii?q?s4PlPy6U1uQRr2ib6PZgWPmri24mrQF+uCKvxsA2honOnIIVxUnJ+CNky4g2Pd?=
 =?us-ascii?q?21UFB3bcKgHZdKqi2XOZV6Ttk/T2xrpCo20LwLtJyjcCQU1JgqwwTTZv+HfoSS?=
 =?us-ascii?q?/x7uVeecLS1liH9heL+ygQu5/1K6xe3mTMa01U5HripbndnIsXAAzwLT6seZRf?=
 =?us-ascii?q?tn5Euh2iiA1xrV6u5aJUA4j63bK4QuwrIol5oTt1rMHjPulUnokKObcl8o9vWm?=
 =?us-ascii?q?5uj5eLnqu5yRO5Nuhgz/MKkigsm/Dv45MggKUWib4+O81Lj78E39QbVKiOA2k6?=
 =?us-ascii?q?bAvJDZO8sbvKi5DBFR0oo67Ba+ATGm38oCnXQcMlJFdwyIj5LzN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtxwPDGJLLhDo3XLnffiLfhYap960lExQo3zNBf5IxbBqsOIfLuQULxsN?=
 =?us-ascii?q?3YDhkkMw272ernCdN91p8AVmKLGKOWLKTSsVqQ7OI1P+aMfJMVuCr6K/U95/7h?=
 =?us-ascii?q?l345mUMHcqmux5cXaG24Ee5gI0WWenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIe+B4fZWo+tmKCB3Du8HpBOfG9GEVCMEXDrd4meQfcDciCSL9RlkjwF?=
 =?us-ascii?q?U7ihVoAg2QuvtA/817poMO7U9jcEupLk0dh///fTmg0q9TxoE8Sd1HmAT2JukW?=
 =?us-ascii?q?MOXTM22KF/rlZ7yleMyqV4h/1YFdpO5/JGSAs6NJjcz/BkBND2QA7OYtCJSFO+?=
 =?us-ascii?q?SNW8HT4xVs4xw8MJY0tlBtqtlA7D0DSwD78VjbOLAoc0/bza33T2I8Z9yHPG1K?=
 =?us-ascii?q?06glkiQ8tPM3Cmh6Fl+wjSAY7Jj1uWl6KweasA2y7N8X+JzXCSs0FATA5wTaLF?=
 =?us-ascii?q?UGgCaUTMs9T2+FnOT7+0BrQhKQtO18iCJ7BOat3oi1VGWfjiNM7fY2K3h2e/Gx?=
 =?us-ascii?q?KIyqmQY4rtfmUXxD/dB1QckwAP4XaGMhAzBjugo2LbCzxuCVLvYkP2/elisn+7?=
 =?us-ascii?q?SVU0zwWLb01n2Lq44RoVhf2aS/MO0bMIoiYhqzNoHFmj29LaEcaPpw1kfK9Ee9?=
 =?us-ascii?q?My/E9H1X7Ftwx6JpGvNaRiiUARcgtpv0LizQ54CphdnscwqnMqzw1yKbyD3VNF?=
 =?us-ascii?q?djOY243wO7LNJmnz+hCvd7DZ2lXE3NmK/acP7ewyq0//swGxCkoi73Jn3sFV0n?=
 =?us-ascii?q?uB/JnFEBAeUJPxUkkt8Rh6qKrXYi0854PSyH1tPrO4sj7E29I1GuQlzgyscMtY?=
 =?us-ascii?q?MKOBDAXyCdEVB9CyKOw2nFikdggEPOFO+6EuJcOpavyG1LStPOl+hjKmjH1L75?=
 =?us-ascii?q?xn3UKI6iVzVPTI35EDw/yD2guHVjH8jEqus8ztmIBEYy0SEXS7yST+GIFRYahy?=
 =?us-ascii?q?d54RCWiyO8232sl+h5n1Vn9Y9V6vHVMH1NWyeRqPaVzwxglQ1UURoXy6liq01T?=
 =?us-ascii?q?10kzc1rqWB2CzC2fjtdB0COmRTXmltkU/sIZSoj9AdREWobRImlAGm5Ub5wKhX?=
 =?us-ascii?q?vr9/IHPQQUdLfij2KX9tUq2ru7qGYs5P7o4osCpNXOS9Z1CaVqDyox8A3yz/GG?=
 =?us-ascii?q?tewSgxdyu2tZXhgxx6lGWdIW5zrXXDfsF83xXf5N3aRfNK2joGRS94iSTYB1Sm?=
 =?us-ascii?q?Ptmp+8mUmInHsuykS22hUZhTezHxzYycrCu7+XFqARqnkvCwgNLnEBI20S/m19?=
 =?us-ascii?q?ZwUyXIow3xYo3q16S8LOJmcVNkBF7668pmBI5+lpE8i40X2Xgfnp+V52YIkX/v?=
 =?us-ascii?q?MdVH3qLzdH8NRT8Iw9HP+gTk1lNsLmmVx43nTHWS2dVuZ8O1Ym4N3iI97sZKCL?=
 =?us-ascii?q?qb7bBenCt1pEa4ohzVYfRngjgdzv4u4mYAg+4VoAot0jmdArcKEElEOizskg6E?=
 =?us-ascii?q?7tGko6VReWavaqOw1EtlkNClDbGCpBxcWXnjdpcjGy9w8ttwMFbW3HLv7YHkfc?=
 =?us-ascii?q?HabcgPuR2MjxfAk+9VJYoqmfUQgipnPX/9sWchy+4mlhFu2ZC6vI6aK2Ri5q65?=
 =?us-ascii?q?AxhYNiHraMMX4D3ikaFensOO1YC1ApphAikLXIfvTf+wEjIdr/HnOBiVEDEmtn?=
 =?us-ascii?q?eXA7nfHRKc6Ed7qXLACYurOmqTJHkYy9ViWRacKFZegAASQDU1gJo5Ghq2y8zm?=
 =?us-ascii?q?dUdz/ioR6ULgqhtQ1uJoMAHyU2fYpAe1czc0VYKQLBxM4gFZ4EfVN8Oe4/l3Hy?=
 =?us-ascii?q?FZ+J2hsQOMJnaaZwROEWEGREiEC0r/Mbmp4NnK6/KYCfamL/vSfbWOrvRTV/eW?=
 =?us-ascii?q?ypKu0Ytm/DeMOt+MPnl4CP071VRMXWpkG8TCgDgPTy0XlyTQb8+Uvhu8+yt3rt?=
 =?us-ascii?q?yh//TvQg7g+YyPC75KO9V15x+2mbuDN/KXhCthMzlYy4gDxWXWx7kfxlISjyBu?=
 =?us-ascii?q?eiKpEbQBsy7NUa3RlrVWDx4ddyN8Ks9I47gg0QlKPM7Rksn12aJgjv4pF1dFUk?=
 =?us-ascii?q?Tsmt2oZcwPOW2yKEnLC1qLNLuYIz3G2MX3YaK6Sb1Ng+RYrRywuTCHE0D9OjSP?=
 =?us-ascii?q?jSXmVxeqMetUliGUIAReuJ2hchZqEWXiTMjpahu+MN92iz052bw1hnPQOm4aPj?=
 =?us-ascii?q?hxaEdNrryW7SNFjfRzAW1B7nx5LeaanyaV9fXXKpETsagjPiMhqete7XImyr0d?=
 =?us-ascii?q?1ypEQvF0lCbI5opwqlWrlPWOzHx8WxpIpzdHiZijtF9nf67e888Td2zD+Ucz7G?=
 =?us-ascii?q?ObBhIW7/R4C8HzvLwYnsbOkqn+LisE/M/V4dcbG+DQKcSOKn1nNgDmTm2HRDAZ?=
 =?us-ascii?q?RCKmYDmMz3dWl+ufozjM9sA3?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAACaqxtch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YFVghYng32UFIINFJdJFIFfLRMBhy4iNAkNAQMBAQEBAQECARMBAQEIDQkIKSM?=
 =?us-ascii?q?MgjYkAYJiAQIDAQILFQQZAQEjFAEFCQEBCgsNAgIRFQICAx8SAQUBHAYTBQODG?=
 =?us-ascii?q?oICBZwtPIopcHwzgnYBAQWHJAgSeYs0gVc/hCOEPC5WgkmCV4k7EpdyBwKCJQS?=
 =?us-ascii?q?ILYcPGJFdmX4wgSWCDjMaMHQGgjWCG4kBhUA+M4EFAQGNYAEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAACaqxtch0O0hNFkHgEGBwaBUQkLAYFVghYng32UFII?=
 =?us-ascii?q?NFJdJFIFfLRMBhy4iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQIDA?=
 =?us-ascii?q?QILFQQZAQEjFAEFCQEBCgsNAgIRFQICAx8SAQUBHAYTBQODGoICBZwtPIopcHw?=
 =?us-ascii?q?zgnYBAQWHJAgSeYs0gVc/hCOEPC5WgkmCV4k7EpdyBwKCJQSILYcPGJFdmX4wg?=
 =?us-ascii?q?SWCDjMaMHQGgjWCG4kBhUA+M4EFAQGNYAEB?=
X-IronPort-AV: E=Sophos;i="5.56,377,1539673200"; 
   d="scan'208";a="56707860"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 20 Dec 2018 06:50:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731510AbeLTOuR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Thu, 20 Dec 2018 09:50:17 -0500
Received: from mail-it1-f195.google.com ([209.85.166.195]:54493 "EHLO
        mail-it1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727972AbeLTOuR (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 20 Dec 2018 09:50:17 -0500
Received: by mail-it1-f195.google.com with SMTP id i145so2332302ita.4
        for <linux-kernel@vger.kernel.org>; Thu, 20 Dec 2018 06:50:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=Dvbs3ymJCuSiR0eu9K4Msnkt2BepBNmGs0Stp89pqec=;
        b=jYGafeEjWkjr5paWnENo6qiTI6phUjfKlR3M833onz0dMioyxqQzvqcYimuUjl1jOn
         fy45pAkpX2yuDQ1si9W7RH1L6X9VIjooj9YweaH/zrdO0hlUjcYNdjOVbnpJhTbgBN6n
         g/dheRV3pSm0w8JUl4GH5dVx0xuDrQpWbrrIM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=Dvbs3ymJCuSiR0eu9K4Msnkt2BepBNmGs0Stp89pqec=;
        b=HKxJcbCZnDj8DHk7nEgGJ7nFLkrJV1PrWKfRiB6F49vDHuyFzbaXbK2zgpAl9GdRDx
         jVwOURvnfqXoyBB+RG4xgEqHfgwPMasxbNiUHuwudTdYAdzlfhFR3vMnISNRovMMlMwu
         kq2YerLVnDJ4uzb71OAj0hOP6SgHMFqLODdBs6GXfwV3vhK0aPN2Q5v4ii6syLg60h6i
         tnfq0ZCdeouwteeEap93MVdHT3+vPDU9e8XJDLJyF/2Yvc9lubgSme1+6Npb3wbpjD/Z
         nSAoA1L5gvwjeDdibAyyUL2dR5WYaGRdMmmwC0dt1jtX5tNIX1s6pEFzKHdPnK+8h/aS
         3rDw==
X-Gm-Message-State: AA+aEWYANY+q6W/E3Zi7vyxV54cuK/ieINKmR8730r16S2+xn/DJn6FQ
        0bs50y6Onpch874ToGzshy5XkfjYVnjenq87u44EMA==
X-Google-Smtp-Source: AFSGD/UZpZB8QqCdSKbc6BZ0JHI86S+BudUPXJbJzxinWUFUyIcMmpRCOWdzGzAyjYLrMmR1JXuCCTyOSD4CbIMl5PU=
X-Received: by 2002:a24:6f42:: with SMTP id x63mr9706517itb.152.1545317411063;
 Thu, 20 Dec 2018 06:50:11 -0800 (PST)
MIME-Version: 1.0
References: <1545292547-18770-1-git-send-email-vincent.guittot@linaro.org>
 <1545292547-18770-4-git-send-email-vincent.guittot@linaro.org> <c482361e-cfb4-d172-32c3-4d82ceb1e7d2@arm.com>
In-Reply-To: <c482361e-cfb4-d172-32c3-4d82ceb1e7d2@arm.com>
From: Vincent Guittot <vincent.guittot@linaro.org>
Date: Thu, 20 Dec 2018 15:50:00 +0100
Message-ID: <CAKfTPtCQTMs=6yGbrfuUGyhwPHWvMODcyyDROVjbURHFxLTxCQ@mail.gmail.com>
Subject: Re: [PATCH 3/3] sched/fair: fix unnecessary increase of balance interval
To: Valentin Schneider <valentin.schneider@arm.com>
Cc: Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Morten Rasmussen <Morten.Rasmussen@arm.com>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 20 Dec 2018 at 12:22, Valentin Schneider
<valentin.schneider@arm.com> wrote:
>
> On 20/12/2018 07:55, Vincent Guittot wrote:
> > In case of active balance, we increase the balance interval to cover
> > pinned tasks cases not covered by all_pinned logic. Neverthless, the
> > active migration triggered by asym packing should be treated as the normal
> > unbalanced case and reset the interval to default value otherwise active
> > migration for asym_packing can be easily delayed for hundreds of ms
> > because of this pinned task detection mecanism.
> > The same happen to other conditions tested in need_active_balance() like
> > mistfit task and when the capacity of src_cpu is reduced compared to
> > dst_cpu (see comments in need_active_balance() for details).
> >
> > Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
> > ---
> >  kernel/sched/fair.c | 40 +++++++++++++++++++++++++++-------------
> >  1 file changed, 27 insertions(+), 13 deletions(-)
> >
> > diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
> > index 487c73e..9b1e701 100644
> > --- a/kernel/sched/fair.c
> > +++ b/kernel/sched/fair.c
> > @@ -8849,21 +8849,25 @@ static struct rq *find_busiest_queue(struct lb_env *env,
> >   */
> >  #define MAX_PINNED_INTERVAL  512
> >
> > -static int need_active_balance(struct lb_env *env)
> > +static inline bool
> > +asym_active_balance(struct lb_env *env)
> >  {
> > -     struct sched_domain *sd = env->sd;
> > +     /*
> > +      * ASYM_PACKING needs to force migrate tasks from busy but
> > +      * lower priority CPUs in order to pack all tasks in the
> > +      * highest priority CPUs.
> > +      */
> > +     return env->idle != CPU_NOT_IDLE && (env->sd->flags & SD_ASYM_PACKING) &&
> > +            sched_asym_prefer(env->dst_cpu, env->src_cpu);
> > +}
> >
> > -     if (env->idle != CPU_NOT_IDLE) {
> > +static inline bool
> > +voluntary_active_balance(struct lb_env *env)
> > +{
> > +     struct sched_domain *sd = env->sd;
> >
> > -             /*
> > -              * ASYM_PACKING needs to force migrate tasks from busy but
> > -              * lower priority CPUs in order to pack all tasks in the
> > -              * highest priority CPUs.
> > -              */
> > -             if ((sd->flags & SD_ASYM_PACKING) &&
> > -                 sched_asym_prefer(env->dst_cpu, env->src_cpu))
> > -                     return 1;
> > -     }
> > +     if (asym_active_balance(env))
> > +             return 1;
> >
> >       /*
> >        * The dst_cpu is idle and the src_cpu CPU has only 1 CFS task.
> > @@ -8881,6 +8885,16 @@ static int need_active_balance(struct lb_env *env)
> >       if (env->src_grp_type == group_misfit_task)
> >               return 1;
> >
> > +     return 0;
> > +}
> > +
>
> Yeah so that's the active balance classification I was afraid of, and I
> don't agree with it.
>
> The way I see things, we happen to have some mechanisms that let us know
> straight away if we need an active balance (asym packing, misfit, lowered
> capacity), and we rely on the sd->nr_balance_failed threshold for the
> scenarios where we don't have any more information.
>
> We do happen to have a threshold because we don't want to go overboard with
> it, but when it is reached it's a clear sign that we *do* want to active
> balance because that's all we can do to try and solve the imbalance.
>
> To me, those are all legitimate reasons to. So they're all "voluntary"
> really, we *do* want all of these.
>
> > +static int need_active_balance(struct lb_env *env)
> > +{
> > +     struct sched_domain *sd = env->sd;
> > +
> > +     if (voluntary_active_balance(env))
> > +             return 1;
> > +
> >       return unlikely(sd->nr_balance_failed > sd->cache_nice_tries+2);
> >  }
> >
> > @@ -9142,7 +9156,7 @@ static int load_balance(int this_cpu, struct rq *this_rq,
> >       } else
> >               sd->nr_balance_failed = 0;
> >
> > -     if (likely(!active_balance)) {
> > +     if (likely(!active_balance) || voluntary_active_balance(&env)) {
>
> So now  we reset the interval for all active balances (expect last active
> balance case), even when it is done as a last resort because all other
> tasks were pinned.
>
> Arguably the current code isn't much better (always increase the interval
> when active balancing), but at least it covers this case. It would be a
> waste not to take this into account when we can detect this scenario

So i'd like to remind the $subject of this patchset: fix some known
issues for asym_packing.
While looking at this, we have added few other voluntary active
balances because it was "obvious" that this active migration were
voluntary one. But in fact, we don't have any UC which show a problem
for those additional UC so far.

The default behavior for active migration is to increase the interval
Now you want to extend the exception to others active migration UC
whereas it's not clear that we don't fall in the default active
migration UC and we should not increase the interval.

What you want is changing the behavior of the scheduler for UC that
haven't raised any problem where asym_packing has known problem/

Changing default behavior for active migration is not subject of this
patchset and should be treated in another one like the one discussed
with peter few days ago

> (I'll reiterate my LBF_ALL_PINNED suggestion).
>
> >               /* We were unbalanced, so reset the balancing interval */
> >               sd->balance_interval = sd->min_interval;
> >       } else {
> >
