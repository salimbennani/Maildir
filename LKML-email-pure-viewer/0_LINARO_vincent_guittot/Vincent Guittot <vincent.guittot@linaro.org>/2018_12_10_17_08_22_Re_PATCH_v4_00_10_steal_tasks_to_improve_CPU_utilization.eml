Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 53D08580380;
	Mon, 10 Dec 2018 09:08:41 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 09:08:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcCxahBQH3/IGIwbc1c5I11I029psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBOEt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34O6gTUeCz0KbH0zPDb+9L0jn89YjIcwwhoe2LXbJsbMHczlcvFwLDjlqM?=
 =?us-ascii?q?t4PlOS+V2v4Cs2iG7upgSf6vi2k7qwxqpjivx8EshZPThoIS0FzE8j95wIksKN?=
 =?us-ascii?q?C+VUV1YsakHYNOuy2GM4Z6WN4uTm92tCog17ELuoK3cDILxZkl3xLTdeCLfoyS?=
 =?us-ascii?q?7h/gVOudOyp0iXNkdb6lmhq/9Uetx+vhXceuyllKtDBKktzUu3ANyRPT7s+HR+?=
 =?us-ascii?q?Nj/keuxzmPzRrf6uJaLkAuk6rUNZohzqQ3lpoJvkTPBi72mEPog6+Kbkgo5PSk?=
 =?us-ascii?q?5uD9brn7qJKQKZV4hhz9P6gygMCyAOY1PhALX2eB+OS80LPj/Vf+QLVPlvA2lq?=
 =?us-ascii?q?jZsJbHJcUUv6K5ABFa0pwl6xmhCzeqydMYnHcBLF1bYhKKlJbpO17QL/DiF/u/?=
 =?us-ascii?q?gEqjkC1tx//YOr3tGJLNLmLMkLv5Z7Zy91ZcyBYvzdBY/59UDrABIPHtVUPru9?=
 =?us-ascii?q?3YEwQ0Mwi1w+bhFdV82ZkSWWOJAq+FLqzStUWE6f4oI+mJfIUVoiryK+A55/7y?=
 =?us-ascii?q?in80gV8dcrOo3ZsLcn+4Ge5qI0WEYXX2hNcBHnwHvg4/TOzslV2DXiRfZ3e0X6?=
 =?us-ascii?q?Ig+D47DJiqApvERoComLaBxju0HoVKZmBaDVCBCXXod4KaVPsWayKSJclhkjoD?=
 =?us-ascii?q?VbW6T48h1BeutBL1yrZ9L+rU/DEYuozn1NRv++LTkhQy/yRuD8uBy2GNU310nm?=
 =?us-ascii?q?QQSjAsx6B/oUt9ylSZ3ahimfNYF8de5/dIUgc8KJ7dwPZ2C9H0WgLdYNiJTEyq?=
 =?us-ascii?q?TcmhATE0Vtgx2cMBY15hG9W+iRDOxymqDKUTl7CRAJw087jT337+J8tmz3bG1a?=
 =?us-ascii?q?8hj0QpQ8dVNG2mgLJ/+BbXB4LTj0qZkKOqf7wG3CHR7GeD0XaOvEZAXQFtS6rF?=
 =?us-ascii?q?Q24QalHWrdvj4EPCVKGhCbIgPgtFys6CL69KZ8btjVVHQvfjJdvfb3iwm2e2GR?=
 =?us-ascii?q?aH2LeMYJD2dGUa2SXXEFIEnBwL/XaaKQg+AT+srH/EAzxwC13jeUPs/vN4qHOg?=
 =?us-ascii?q?UEA0yRqHb0lg17qz5x4UiuaQS/IV3rIYpighry94E0q639LTE9CAvRZufL1AYd?=
 =?us-ascii?q?Mh51dKzX7Ztw14PpynM6Bihl4ffx5rv0/00BV3EIFAkcksrHMl1wdyLaOY0FVc?=
 =?us-ascii?q?dzKXx5zwO7vXKnXs8xCrcaLZxlbe0NOO8KcV9Ps4s0njvB2uFkc66Xpn18da0n?=
 =?us-ascii?q?SC6ZTKFgYdSo/xXVst+Bh8pLHaZTc96pjQ1X1tN6m0rzDD18goBOsj1havYdNf?=
 =?us-ascii?q?PLmYGw/1Fs0QH9KuJ/Aym1i1chIEO/hf9a4pP8+8a/SKwq+qPOZ6kzKggmRK+4?=
 =?us-ascii?q?R90kOK9yphRe/ExZcFw/eE3gSZUzfwlkuussfymYpcfzEdAnK/yTT4BI5WfqBy?=
 =?us-ascii?q?Z4cLBnu0LM2t29p+gIThW3hG+165BlMKwdOmdgCWb1PgwwJQz0MXoXq8lCu8zj?=
 =?us-ascii?q?x0lSwpr6WF0CzPxeTiaAQIOmpRSGZ+ilfsJJC+j8oGU0iwcwgpiByl6F76xqha?=
 =?us-ascii?q?vqh+L3PfQVxVfyjwNGxiVqqwtryfY89A8p8osCNXUPiiblCeULLyvxwa0yb7FW?=
 =?us-ascii?q?tE2D87by2quon+nxFiimKSNmxzrHnaecF33xvf/8bTRf1S3joHQil3lz/XC0O4?=
 =?us-ascii?q?P9mo+9WUipjCvvq/V2KnSp1cby3rwZmcuyu84G1gGQe/kOyrmt37DQg61jf21t?=
 =?us-ascii?q?lwWiXPthr8YIjr16KhPOJjf0loAkL86sVgFoF/lIswmI8f2XwAipqJ+noHlH/5?=
 =?us-ascii?q?Mc9H1qLmcHoNWTkLzsbW4Af/2U1vNHKJx5/jWXWbzctsfN26YmIQ2iIg4MFGEq?=
 =?us-ascii?q?aU7LpYnSRrplq0tx7eYf94nj0F0/sh9GYag/0VuAoq1iidB7ESHUpCMiD2mRWH?=
 =?us-ascii?q?8cu+rLlJa2a1are/ylB+nd+6AbGGowFcXmv5e5g4ES9x6MV/LEzD0Hnp5o74f9?=
 =?us-ascii?q?nQaMoZtgeInBfYk+hVNJUxm+IWhSpgPGLxp3wkxPQ9jRxzxpG6p4mHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DHyYmpX?=
 =?us-ascii?q?ecHbrfABWT6EN7r3/UF5CrNneXJGQWzNl4RRmdIlBfjx4QXDkggpE5EQWqztT7?=
 =?us-ascii?q?cEhl/jAR+kL4qhxUx+JqLRb/V3nQpByyZjcoUpSfLwdW7gJf50fTK8Oe9fl+Hy?=
 =?us-ascii?q?VZ/p2nsQyMJXaXZwVODWEVREOEA0rvMaWp5dnF6+KYHPaxL+PSYbWSruxTT/eJ?=
 =?us-ascii?q?xZWy0ot/4jaDLMOPMmN5D/083EpDUmt0G8DYmzUJViwWmDjBb8+dpBeg5CJ3qt?=
 =?us-ascii?q?qz/+jsWALq/YGPEaddMc1z+xCqhqeOL+6Qizh4KTZb1ZMMxGXEyLsF3F4VhCFh?=
 =?us-ascii?q?aSOtEakbtSPWSKLQm6lXDwMUai9pNctI6b480RdJOcLBltz10bt4hOYvC1hZTV?=
 =?us-ascii?q?zhht2pZcsSLm6nKVPIH1yLO6qGJDHRx8H3YLixSblRjOVSqh2xtiyXE07lPjSf?=
 =?us-ascii?q?iTbpUwqjPv1LjCGeJBZeop2ycg5xCWj/S9LrcgG7MN5yjTEs3bI4nG/FNW4CPj?=
 =?us-ascii?q?h6aE5NqryQ7SVFgvRwAWBB73xlLfWalCad9eXXNpEWsf5zCCRui+1a+Gg6y6dS?=
 =?us-ascii?q?7CxcRP16gi3Srttvo1GgiuaOyzpnXwBIqjZEn4+LuURiOaPE9phPQ3rE/RQN7X?=
 =?us-ascii?q?mOBBQOvddqFtrvu6UDguTIwbnvJSlP9ZTP/NAADtLZAMWdOXElPFziHzuHIhEC?=
 =?us-ascii?q?SGuVNGfUikpB2N6P92GJqYRy/obtnpEDTKMdW0E0Cu8dFmxhHdoLOpAxWSkrx+?=
 =?us-ascii?q?3IxPUU7Gaz+UGCDP5RuYrKA7fLWa3i?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BsAACVnA5ch0O0hNFaCh4BBgcGgVQGC?=
 =?us-ascii?q?wGDayeDepQogg0UmTAsEwGHbSI3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQ?=
 =?us-ascii?q?BgmIBAgMBAiAdAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcggIFmjk8ih1wg?=
 =?us-ascii?q?S+CdgEBBYcbCBJ5ixaBVz+BEYMShFYFgyqCV4kpggKVTAcCgiEEiB6HDBiRPZk?=
 =?us-ascii?q?hMIE7gXgzGjB0BoI1ghuJAYVAPjOBBQEBiUyCTAEB?=
X-IPAS-Result: =?us-ascii?q?A0BsAACVnA5ch0O0hNFaCh4BBgcGgVQGCwGDayeDepQogg0?=
 =?us-ascii?q?UmTAsEwGHbSI3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAdA?=
 =?us-ascii?q?QE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBYMcggIFmjk8ih1wgS+CdgEBBYcbCBJ?=
 =?us-ascii?q?5ixaBVz+BEYMShFYFgyqCV4kpggKVTAcCgiEEiB6HDBiRPZkhMIE7gXgzGjB0B?=
 =?us-ascii?q?oI1ghuJAYVAPjOBBQEBiUyCTAEB?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55282891"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 09:08:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728168AbeLJRIf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 12:08:35 -0500
Received: from mail-it1-f194.google.com ([209.85.166.194]:35314 "EHLO
        mail-it1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727524AbeLJRIf (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 12:08:35 -0500
Received: by mail-it1-f194.google.com with SMTP id p197so19352826itp.0
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 09:08:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=06WxHLOs1CQ6TpxVoIGrdGQ7xObL4lchMLZMsBSijKg=;
        b=DRuFz2nUQBWlWDWu+K8VMiWa8aLSs/rQoeyQdw0x/2A6AOSeOGvHIjH904gGMhWDi0
         80HmonLjgIeJgAmm52qT/L08v5/GwaW3cWbYksZ+H0C/GLSz9jL2pj2fmIgTjxovlN/e
         JLTS1WVksW/mRz6v7Y/CEQFu06HDqzBiI/1c4=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=06WxHLOs1CQ6TpxVoIGrdGQ7xObL4lchMLZMsBSijKg=;
        b=Tjbo/BizMjrygDOAWPYLhfFD+QKWdr8IcqEUeT9XwyzxMKGxHj7ldgm9HeHngjDRsH
         IDVXLeLuv1Xs6MgM220b8Q4QER2pBDaoPpbXGUhCndXoHZrooWHs1Etq/vLi+x19JpGR
         kM5t0Us3nI/4gJGp+SOSCOXvcrqW7cvNUai1SMn2LTsx3D7a8NuEICWwzJ9GGDZoc1O9
         jF/qTQKrNzth8hB3THcEutUir0VRsZiZQFLaqmXUC9IN6ahGIQ1OSJ62m1GCqgRAJOgG
         3b5qaMvY0+UMo8NKfbYL7YVh84Sn7gArKzsyGkK1NB0Qrlh5NIB5dCR7T7Hdhd4CUUxq
         L+zw==
X-Gm-Message-State: AA+aEWYB9gkvrIlzzaf9aEk6AHct55pIR+buw8JfXyYzolNHvjaDt4dD
        qJpxHYpyWgUk+KuhRMHdO2reikPrheeXHzfFmLNRMA==
X-Google-Smtp-Source: AFSGD/XLOyGaJAKG039ZFGCWmhM5Nw9wXDdLzNtKGR+5bKamzj1cxkvpkMo62GJSjZedUVykDo96d69IUPAhxEdwgYQ=
X-Received: by 2002:a24:a20e:: with SMTP id j14mr12102274itf.14.1544461713973;
 Mon, 10 Dec 2018 09:08:33 -0800 (PST)
MIME-Version: 1.0
References: <1544131696-2888-1-git-send-email-steven.sistare@oracle.com>
 <CAKfTPtBuAsbF2r8wSigM=ckpKCqj0hcHbi+y3ZAaC7dqYcFY2g@mail.gmail.com>
 <df0197ac-d4eb-437e-1176-dbc9b23a94bb@oracle.com> <CAKfTPtBh59Wt3+JiZ168WRAZ+AEsS+-GTqXzeUZTKQPcDAJ73g@mail.gmail.com>
In-Reply-To: <CAKfTPtBh59Wt3+JiZ168WRAZ+AEsS+-GTqXzeUZTKQPcDAJ73g@mail.gmail.com>
From: Vincent Guittot <vincent.guittot@linaro.org>
Date: Mon, 10 Dec 2018 18:08:22 +0100
Message-ID: <CAKfTPtCePEwUDyH1on+fJbuUEBYR8v7U4doL-N-ymdT3woD7OA@mail.gmail.com>
Subject: Re: [PATCH v4 00/10] steal tasks to improve CPU utilization
To: steven.sistare@oracle.com
Cc: Ingo Molnar <mingo@redhat.com>,
        Peter Zijlstra <peterz@infradead.org>,
        subhra.mazumdar@oracle.com, Dhaval Giani <dhaval.giani@oracle.com>,
        daniel.m.jordan@oracle.com, pavel.tatashin@microsoft.com,
        Matt Fleming <matt@codeblueprint.co.uk>,
        Mike Galbraith <umgwanakikbuti@gmail.com>,
        Rik van Riel <riel@redhat.com>, Josef Bacik <jbacik@fb.com>,
        Juri Lelli <juri.lelli@redhat.com>,
        Valentin Schneider <valentin.schneider@arm.com>,
        Quentin Perret <quentin.perret@arm.com>,
        linux-kernel <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 10 Dec 2018 at 17:33, Vincent Guittot
<vincent.guittot@linaro.org> wrote:
>
> On Mon, 10 Dec 2018 at 17:29, Steven Sistare <steven.sistare@oracle.com> wrote:
> >
> > On 12/10/2018 11:10 AM, Vincent Guittot wrote:
> > > Hi Steven,
> > >
> > > On Thu, 6 Dec 2018 at 22:38, Steve Sistare <steven.sistare@oracle.com> wrote:
> > >>
> > >> When a CPU has no more CFS tasks to run, and idle_balance() fails to
> > >> find a task, then attempt to steal a task from an overloaded CPU in the
> > >> same LLC. Maintain and use a bitmap of overloaded CPUs to efficiently
> > >> identify candidates.  To minimize search time, steal the first migratable
> > >> task that is found when the bitmap is traversed.  For fairness, search
> > >> for migratable tasks on an overloaded CPU in order of next to run.
> > >>
> > >> This simple stealing yields a higher CPU utilization than idle_balance()
> > >> alone, because the search is cheap, so it may be called every time the CPU
> > >> is about to go idle.  idle_balance() does more work because it searches
> > >> widely for the busiest queue, so to limit its CPU consumption, it declines
> > >> to search if the system is too busy.  Simple stealing does not offload the
> > >> globally busiest queue, but it is much better than running nothing at all.
> > >>
> > >> The bitmap of overloaded CPUs is a new type of sparse bitmap, designed to
> > >> reduce cache contention vs the usual bitmap when many threads concurrently
> > >> set, clear, and visit elements.
> > >>
> > >> Patch 1 defines the sparsemask type and its operations.
> > >>
> > >> Patches 2, 3, and 4 implement the bitmap of overloaded CPUs.
> > >>
> > >> Patches 5 and 6 refactor existing code for a cleaner merge of later
> > >>   patches.
> > >>
> > >> Patches 7 and 8 implement task stealing using the overloaded CPUs bitmap.
> > >>
> > >> Patch 9 disables stealing on systems with more than 2 NUMA nodes for the
> > >> time being because of performance regressions that are not due to stealing
> > >> per-se.  See the patch description for details.
> > >>
> > >> Patch 10 adds schedstats for comparing the new behavior to the old, and
> > >>   provided as a convenience for developers only, not for integration.
> > >>
> > >> The patch series is based on kernel 4.20.0-rc1.  It compiles, boots, and
> > >> runs with/without each of CONFIG_SCHED_SMT, CONFIG_SMP, CONFIG_SCHED_DEBUG,
> > >> and CONFIG_PREEMPT.  It runs without error with CONFIG_DEBUG_PREEMPT +
> > >> CONFIG_SLUB_DEBUG + CONFIG_DEBUG_PAGEALLOC + CONFIG_DEBUG_MUTEXES +
> > >> CONFIG_DEBUG_SPINLOCK + CONFIG_DEBUG_ATOMIC_SLEEP.  CPU hot plug and CPU
> > >> bandwidth control were tested.
> > >>
> > >> Stealing improves utilization with only a modest CPU overhead in scheduler
> > >> code.  In the following experiment, hackbench is run with varying numbers
> > >> of groups (40 tasks per group), and the delta in /proc/schedstat is shown
> > >> for each run, averaged per CPU, augmented with these non-standard stats:
> > >>
> > >>   %find - percent of time spent in old and new functions that search for
> > >>     idle CPUs and tasks to steal and set the overloaded CPUs bitmap.
> > >>
> > >>   steal - number of times a task is stolen from another CPU.
> > >>
> > >> X6-2: 1 socket * 10 cores * 2 hyperthreads = 20 CPUs
> > >> Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz
> > >> hackbench <grps> process 100000
> > >> sched_wakeup_granularity_ns=15000000
> > >>
> > >>   baseline
> > >>   grps  time  %busy  slice   sched   idle     wake %find  steal
> > >>   1    8.084  75.02   0.10  105476  46291    59183  0.31      0
> > >>   2   13.892  85.33   0.10  190225  70958   119264  0.45      0
> > >>   3   19.668  89.04   0.10  263896  87047   176850  0.49      0
> > >>   4   25.279  91.28   0.10  322171  94691   227474  0.51      0
> > >>   8   47.832  94.86   0.09  630636 144141   486322  0.56      0
> > >>
> > >>   new
> > >>   grps  time  %busy  slice   sched   idle     wake %find  steal  %speedup
> > >>   1    5.938  96.80   0.24   31255   7190    24061  0.63   7433  36.1
> > >>   2   11.491  99.23   0.16   74097   4578    69512  0.84  19463  20.9
> > >>   3   16.987  99.66   0.15  115824   1985   113826  0.77  24707  15.8
> > >>   4   22.504  99.80   0.14  167188   2385   164786  0.75  29353  12.3
> > >>   8   44.441  99.86   0.11  389153   1616   387401  0.67  38190   7.6
> > >>
> > >> Elapsed time improves by 8 to 36%, and CPU busy utilization is up
> > >> by 5 to 22% hitting 99% for 2 or more groups (80 or more tasks).
> > >> The cost is at most 0.4% more find time.
> > >
> > > I have run some hackbench tests on my hikey arm64 octo cores with your
> > > patchset. My original intent was to send a tested-by but I have some
> > > performances regressions.
> > > This hikey is the smp one and not the asymetric hikey960 that Valentin
> > > used for his tests
> > > The sched domain topology is
> > > domain-0: span=0-3 level=MC  and domain-0: span=4-7 level=MC
> > > domain-1: span=0-7 level=DIE
> > >
> > > I have run 12 times hackbench -g $j -P -l 2000 with j equals to 1 2 3 4 8
> > >
> > > grps  time
> > > 1      1.396
> > > 2      2.699
> > > 3      3.617
> > > 4      4.498
> > > 8      7.721
> > >
> > > Then after disabling STEAL in sched_feature with echo NO_STEAL >
> > > /sys/kernel/debug/sched_features , the results become:
> > > grps  time
> > > 1      1.217
> > > 2      1.973
> > > 3      2.855
> > > 4      3.932
> > > 8      7.674
> > >
> > > I haven't looked in details about some possible reasons of such
> > > difference yet and haven't collected the stats that you added with
> > > patch 10.
> > > Have you got a script to collect and post process them ?
> > >
> > > Regards,
> > > Vincent
> >
> > Thanks Vincent.  What is the value of /proc/sys/kernel/sched_wakeup_granularity_ns?
>
> it's 4000000
>
> > Try 15000000.  Your 8-core system is heavily overloaded with 40 * groups tasks,
> > and I suspect preemptions are killing performance.
>
> ok. I'm going to run the tests with the proposed value

Results look better after changing /proc/sys/kernel/sched_wakeup_granularity_ns

With STEAL
grps  time
1      0.869
2      1.646
3      2.395
4      3.163
8      6.199

after echo NO_STEAL > /sys/kernel/debug/sched_features
grps  time
1      0.928
2      1.770
3      2.597
4      3.407
8      6.431

There is a 7% improvement with steal and the larger value for
/proc/sys/kernel/sched_wakeup_granularity_ns for all groups
Should we set the STEAL feature disabled by default as this provides
benefit only when changing sched_wakeup_granularity_ns value from
default value?

>
> >
> > I have a python script to post-process schedstat files, but it does many things
> > and is large and I am not ready to share it.  I can write a short bash script if
> > that would help.
>
> It was mainly in case you wanted the figures of these statistics
>
> Vincent
>
> >
> > - Steve
