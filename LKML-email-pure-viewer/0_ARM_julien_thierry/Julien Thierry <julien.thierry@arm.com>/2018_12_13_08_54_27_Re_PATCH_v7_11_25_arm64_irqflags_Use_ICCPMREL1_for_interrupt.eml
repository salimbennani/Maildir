Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 21:21:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E1D1458079C;
	Thu, 13 Dec 2018 00:54:36 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 00:54:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A0/f38RXgz3YySKFDBKMvEAPlAHvV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCAtKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp6y?=
 =?us-ascii?q?YZUBD+QBPuhWoYfyqFQMohSiCgesH/vvxz1Ti3/q36A3yfgtHR3I0QEiGd8FrX?=
 =?us-ascii?q?TarM/yNKcXSe27yLTIzTHCb/xI3zf29ZbGchAgof6SR7Jwa8rQwlQoGgPHk1WQ?=
 =?us-ascii?q?rY3lMC2T1ugXr2ib7+tgWvy1i249qwB8uSKgxt0pioXTmo0VzVXE+Dx/zY0oJt?=
 =?us-ascii?q?O4UFZ2bcC4HJZUrS2WKoV7Tt04T211uys21qcKtJ+5cSQS1pgr2hzSZ+aaf4WH?=
 =?us-ascii?q?/h7vTvudLStliH5/er+zmxC/+lW6xOLmTMm7ylNKozJFktbSsnAN0ATe6taISv?=
 =?us-ascii?q?Rj5EetwzWP2B7J6uFCP080kbDXK5k7wr4/jpYTsELDETHqmEjukqOaakEp9vK1?=
 =?us-ascii?q?5+npfLnqvIKQOoxohg3kM6kjmNSzAeEiPQgPW2ib9/681Lrm/UDhRLVKj/s2kr?=
 =?us-ascii?q?TWsZzDJsQUuLS5AwlL3YYn8hq/CDmn0NIGknkdN19FZh2HgJbzO13UI/D3E+2/?=
 =?us-ascii?q?g1Kynzdv3fzGOafhAprVInjZjLjhZap961JbyAcrydBf5pFUBa8bLPP8R0/8r9?=
 =?us-ascii?q?jYDh4/MwypzOfrEtR91oUCWW2RBq+VKr/dsViN5ug3OemDeJcVuCrhK/gi//Pu?=
 =?us-ascii?q?jWU2mV4Bfaaz2psbcnC4Hul8LEWfbnrhmdMBEWYMvgojQ+3mklyCUThPZ3msW6?=
 =?us-ascii?q?Iw/C00CIWjDY3bXICinKSB3DunHp1Rfm1GCFeMHmnye4WHXPcMbiSSIsh6nzwA?=
 =?us-ascii?q?VLihTZIh1B60uA/7zbpnMvTb+ikCuZ3/09h14vXZlQsu+jxsE8Sdz2aNQnlukW?=
 =?us-ascii?q?MTRz8226N/rVZnyliZ06h1mPhYFd1V5/NUXQY2L5/cz+pmC9/sXgLNZMuGSFGj?=
 =?us-ascii?q?Qt++GzE+Usoxw8MSY0Z6A9iijQrM3yywD78RlryEHpo08q3H0nj1JsZ9zWvG1a?=
 =?us-ascii?q?Y7g1knRMtPKXOphqpl+wfPAI7Jll2Tl7y2eqQEwC7N6GCDwHKTs05CTg5/T7/J?=
 =?us-ascii?q?XXAFaUvQttT2+EXCQ7iqCbQkNwtBzdWPKq9Lat3vkFVHS+3vONXYY2KthWiwAQ?=
 =?us-ascii?q?yEya+LbIrvY28dxjnSCFAYkwAP+naLLRUxCT2/o23AFjBuFUjgY0X38eZgrnO2?=
 =?us-ascii?q?VUs0zwCMb0182Lu54B8VhfqAS/wN2rIIojsuqzJxHFylxdLZF8KApxZ9fKVbed?=
 =?us-ascii?q?49/FZH1WfetwxhPpyhL7puhkIEfwRwpUPu0xR3CoNPkcUxqHMqzQxyKb+X0V9b?=
 =?us-ascii?q?djOY24zwNaPTKmXo4B+vbKvW0EnE0NmK4qcP9Og4q1L7sQ6zEkot7Xpm3MdV0n?=
 =?us-ascii?q?eG/ZrKERcdXoj3UkY08Bh6uarXYi0854PSyH1tPrO4sj7E29I1GuQlzgyscMtY?=
 =?us-ascii?q?MKOBDAXyCdEVB9CyKOw2nFikdhIFPP1I+KEoJc+ndvuG17StPOZvhz+miWVH4I?=
 =?us-ascii?q?Zg0kOD7SZ8S+jI34obzPGcxAeISzD8jFK5uMDthY9EfS0SHna4ySX8Ho5RZ7F9?=
 =?us-ascii?q?cpwRCWizJM273NN+iID3W35Z7VKsG0kJ2Mu0dhWMdVz92gtQ2F8ToXymnyu40j?=
 =?us-ascii?q?N1nysorqqZwCzB3eDieAAbNW5MQWlolU3sLpSsj9AGQEioaBAklRuk5Urgx6lX?=
 =?us-ascii?q?vr9/L3TVQUpTeyj2LmdiUra/t7aYYs5P7o8ovjtTUOimfV+aTbv9qQMA0yz/B2?=
 =?us-ascii?q?te2Cw7dzayt5X7hRN6kmGdLHV0rHbDYsF/3xTf5N/dRf5XwDUGQjJ1iT3WBli6?=
 =?us-ascii?q?Itmo8s+Yl5bFsuCiSW2hUodffjXszYOFrCG7/3FlAQWjn/Cvnd3qCQg73jX819?=
 =?us-ascii?q?VwVyXIrRD8b5Lv16S7N+JnY0ZpCEX968p8BoFxjI8wiIsM1ngdg5Wf5WAHnnvr?=
 =?us-ascii?q?MdVHxaL+a2IART0RzN7U+gTl2FBjIWiPx4L2TXidxsphZ9+nYmIZwC497sZKCL?=
 =?us-ascii?q?uK47xAhyd6vl24rQfJa/hngjgd0ecu6GIdg+wRvQotzyadDaoIEUhWIyPsjAiI?=
 =?us-ascii?q?4M6krKpMemmva7ew2VF6ndCgCrGCvw5dVGz4epckAS9/8MF/PEjQ333074HuYM?=
 =?us-ascii?q?PQYs4Lth2IjxfAiPBYKI42lvoPnyZmOHjyvXs4y+4glhxu3Iq3vIyGK2Vr4aK4?=
 =?us-ascii?q?DQRUNjzzZ8MP5D7tibxSkdqR34CqBp9hACkEXIP0TfK0FzIfre/oOByJED04t3?=
 =?us-ascii?q?eXA77fHRKE5UdirnLPFY2rNn6NKHkYy9ViWAeSJEhFjA8IWzU6m4YzFhq2y8z5?=
 =?us-ascii?q?bEd5+jcR60b6qhRWz+JnKQL/Xn3DpAuyaTc0VZufLAdQ7g5Y/EfYKsie7uN1Hy?=
 =?us-ascii?q?FF8Zyttg2NKmqHZwtWCWEFQFCLB1fmPrO2/9nP7/CYBvaiL/vJebiPqeteV+qR?=
 =?us-ascii?q?xZKyyIRm+SyANt6IPnlkAP02wU5DXXF/G8TElDQDUS0XlyTRb8GFoBew4DF4rs?=
 =?us-ascii?q?e68P7zQgLg+ZOPC6dOMdVo4x22gbmMN++ThCZ6KDZUzJAMxWXPyLgQwlESkTxu?=
 =?us-ascii?q?dyK2HLQEtC7NSr/Qm6BNAx4abSNzKNVH76Ym0gZRPs7bj8v/1qRkgf4tF1dFSV?=
 =?us-ascii?q?vhl9mzaswXOG69Lk3IBUaROLSCJD3G2MX3YaK6Sb1Ng+RYrRywuTCHE0D9OjSP?=
 =?us-ascii?q?jSXmVxeqMetUliGUIAReuJ2hchZqEWXjUNPmahihPNBrlzE53b00iW3MNWMHNT?=
 =?us-ascii?q?h8ckVNrqCf7C9Cg/V/HXBB4WRhLeWehymZ6OzYII4MsfR3GiR0i/5a4HMixrpV?=
 =?us-ascii?q?9i5EQvl1mCrUrtF2olCmkvOAyjxoUBdVrjZLhYSLvVhtOKnD95lAX2rE8wwJ7W?=
 =?us-ascii?q?mKFxsKoN5lWZXTvPV50NSHvqP+MzdP7szZ+YNIDtLYbsiGPWEhPAf3FTr8CAoD?=
 =?us-ascii?q?RCSsc2bFiBoOvuuV8yi3s5w7p56kpJoPR6VBRRRhFO4eC0ljWsACIZptRCIMmK?=
 =?us-ascii?q?SeysUP4Czt/1HqWMxGs8WfBbqpCvL1JWPc1OEcag=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ApAABQHRJch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgVqCESeDfJYLLRSXQIFzLBMBh0MiNgcNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKS+CNiQBgmIBAgMBAiBWBgkBAQoSBgICJgICA0YOBg0GAgEBARaDBoIBB?=
 =?us-ascii?q?AGma4EvhUCEdYELizGBVz+BEQEmgmuEWoMrglcCizKEXJEBBwKCJASPKx6BXIg?=
 =?us-ascii?q?gh04sigeQYw6BeTMaI4M8gicXfwEDBI0WPwEBMYEFAQGKBIJNAQE?=
X-IPAS-Result: =?us-ascii?q?A0ApAABQHRJch0O0hNFjHAEBAQQBAQcEAQGBUwUBAQsBgVq?=
 =?us-ascii?q?CESeDfJYLLRSXQIFzLBMBh0MiNgcNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBg?=
 =?us-ascii?q?mIBAgMBAiBWBgkBAQoSBgICJgICA0YOBg0GAgEBARaDBoIBBAGma4EvhUCEdYE?=
 =?us-ascii?q?LizGBVz+BEQEmgmuEWoMrglcCizKEXJEBBwKCJASPKx6BXIggh04sigeQYw6Be?=
 =?us-ascii?q?TMaI4M8gicXfwEDBI0WPwEBMYEFAQGKBIJNAQE?=
X-IronPort-AV: E=Sophos;i="5.56,348,1539673200"; 
   d="scan'208";a="56170709"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 00:54:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727379AbeLMIyc (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 03:54:32 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:56562 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726578AbeLMIyc (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 03:54:32 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 9671880D;
        Thu, 13 Dec 2018 00:54:31 -0800 (PST)
Received: from [10.1.197.36] (e112298-lin.cambridge.arm.com [10.1.197.36])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id A41E53F6A8;
        Thu, 13 Dec 2018 00:54:29 -0800 (PST)
Subject: Re: [PATCH v7 11/25] arm64: irqflags: Use ICC_PMR_EL1 for interrupt
 masking
To: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Cc: linux-arm-kernel <linux-arm-kernel@lists.infradead.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Daniel Thompson <daniel.thompson@linaro.org>,
        joel@joelfernandes.org, Marc Zyngier <marc.zyngier@arm.com>,
        Christoffer Dall <christoffer.dall@arm.com>,
        James Morse <james.morse@arm.com>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>, oleg@redhat.com
References: <1544633245-6036-1-git-send-email-julien.thierry@arm.com>
 <1544633245-6036-12-git-send-email-julien.thierry@arm.com>
 <CAKv+Gu8E9g=J78a-2HAdcijaHyVFL1KA3civwfoVHQ=mp7yJJA@mail.gmail.com>
 <19500d6b-62a3-21cb-9ac0-a4e5d4714a63@arm.com>
 <CAKv+Gu8+1JNzM4AUujiEfkYujpgakLXcUwTDG4eHwvQ7pKAzFA@mail.gmail.com>
From: Julien Thierry <julien.thierry@arm.com>
Message-ID: <31e41461-763f-aa7d-91ea-b493ede81eed@arm.com>
Date: Thu, 13 Dec 2018 08:54:27 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <CAKv+Gu8+1JNzM4AUujiEfkYujpgakLXcUwTDG4eHwvQ7pKAzFA@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/12/2018 18:10, Ard Biesheuvel wrote:
> On Wed, 12 Dec 2018 at 18:59, Julien Thierry <julien.thierry@arm.com> wrote:
>>
>>
>>
>> On 12/12/2018 17:27, Ard Biesheuvel wrote:
>>> On Wed, 12 Dec 2018 at 17:48, Julien Thierry <julien.thierry@arm.com> wrote:
>>>>
>>>> Instead disabling interrupts by setting the PSR.I bit, use a priority
>>>> higher than the one used for interrupts to mask them via PMR.
>>>>
>>>> When using PMR to disable interrupts, the value of PMR will be used
>>>> instead of PSR.[DAIF] for the irqflags.
>>>>
>>>> Signed-off-by: Julien Thierry <julien.thierry@arm.com>
>>>> Suggested-by: Daniel Thompson <daniel.thompson@linaro.org>
>>>> Cc: Catalin Marinas <catalin.marinas@arm.com>
>>>> Cc: Will Deacon <will.deacon@arm.com>
>>>> Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
>>>> Cc: Oleg Nesterov <oleg@redhat.com>
>>>> ---
>>>>  arch/arm64/include/asm/efi.h      |   5 +-
>>>>  arch/arm64/include/asm/irqflags.h | 123 +++++++++++++++++++++++++++++---------
>>>>  2 files changed, 99 insertions(+), 29 deletions(-)
>>>>
>>>> diff --git a/arch/arm64/include/asm/efi.h b/arch/arm64/include/asm/efi.h
>>>> index 7ed3208..a9d3ebc 100644
>>>> --- a/arch/arm64/include/asm/efi.h
>>>> +++ b/arch/arm64/include/asm/efi.h
>>>> @@ -42,7 +42,10 @@
>>>>
>>>>  efi_status_t __efi_rt_asm_wrapper(void *, const char *, ...);
>>>>
>>>> -#define ARCH_EFI_IRQ_FLAGS_MASK (PSR_D_BIT | PSR_A_BIT | PSR_I_BIT | PSR_F_BIT)
>>>> +#define ARCH_EFI_IRQ_FLAGS_MASK                                                \
>>>> +       (system_uses_irq_prio_masking() ?                               \
>>>> +               GIC_PRIO_IRQON :                                        \
>>>> +               (PSR_D_BIT | PSR_A_BIT | PSR_I_BIT | PSR_F_BIT))
>>>>
>>>
>>> This mask is used to determine whether we return from a firmware call
>>> with a different value for the I flag than we entered it with. So
>>> instead of changing the mask, we should change the way we record DAIF,
>>> given that the firmware is still going to poke the I bit if it
>>> misbehaves, regardless of whether the OS happens to use priorities for
>>> interrupt masking.
>>>
>>
>> Thanks for pointing that out, so this change makes little sense...
>>
>> The annoying part is that the flag checking takes place in the arch
>> agnostic code.
>>
>> Would introducing some overriddable efi_get_flags() or efi_save_flags()
>> that default to local_save_flags() seem like an acceptable solution?
>>
>> This way I could override it for arm64 and still return the DAIF bits.
>>
> 
> I don't follow the reasoning below about irqflags exactly, but is
> there any way we could simply but both PMR and DAIF in flags? We could
> even update the mask here to ensure that the firmware doesn't corrupt
> the PMR.
> 

So, that was the case in my previous versions of the series, and as you
said, that covered checking both DAIF bits and PMR on return from EFI
services. But Catalin suggested that irqflags could just use PMR when we
enable the priority masking feature. Catalin's suggestion does simplify
things, except for this part.

However, it doesn't seem to far-fetched to me that the architecture
could have a more generic way to tell the EFI driver "this is the set of
stuff that I care about and you should return from runtime services with
this stuff in the same state as before" without the "set of stuff" being
limited to irqflags.

But maybe this would be over-engineering just to deal with my use-case...

Thanks,

-- 
Julien Thierry
