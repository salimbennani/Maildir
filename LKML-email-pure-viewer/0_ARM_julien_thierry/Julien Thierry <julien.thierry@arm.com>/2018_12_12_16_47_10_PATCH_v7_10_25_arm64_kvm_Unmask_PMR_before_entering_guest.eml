Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:53:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1C2E658079D;
	Wed, 12 Dec 2018 08:50:11 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 08:50:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ASCp0jxXV0VcqMuKQS62qYmoqWlLV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCFu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZitJ+gr9VrhyioBJwwYDUYJqNNPd8Za7RYc8WSHBdUstLSyBNHoWx?=
 =?us-ascii?q?ZJYPAeobOuZYqpHwqV8TrRu6BAmjGuXvwSJWiH/23K01zf4hERvG3Qc9GN8Osm?=
 =?us-ascii?q?nUrNH0NKgMV+C51rXIzTXCb/xIwzf98ojJfws7rvGWWLJ8a9beyU4qFw7ciFib?=
 =?us-ascii?q?tI/rPyuN2+gTr2SW6/BsWf+hhmI5sQ19vzuiyts2hoTIhI8Z0k7I+Th7zYovON?=
 =?us-ascii?q?G1R1J3bcS5HJdMqi2WLYl7Tt8kTmp1oig10KcGtoS+fCUSyJQo2Rrfa/uffoiW?=
 =?us-ascii?q?7RLsSvyRLS17hH17YrK/gQi98Uy6xu37TMm0305GritDktbSqnAAzwLf5tSDR/?=
 =?us-ascii?q?dn40us1yiD2xrO5uxHPUw4j6vWJpw5zr41jJUTsEDDHiHsmEXxia+bbkEk+umu?=
 =?us-ascii?q?6+T6bbTqv5ycOJFuigH4LKsuntWzAeM2MwgIQWeb4/+x1KPs/ULnWrVGlP42nb?=
 =?us-ascii?q?fDsJDcO8sborS1AwhP0oYs8xq/FSup0MwEnXkbK1JIYBaHj4nqO17QOvz5Auq/?=
 =?us-ascii?q?jk+okDdqwfDGI7LgDo/MLnjFjLfuY7J951RAxwo0yNBV/4hUBa0ZIPLvRk/xs8?=
 =?us-ascii?q?TVDh8jPAy13+boEtJ92pkeWWKSGKCZNqzSvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JsdcGq4Eeh+I0WFfXrshc8MEWUNvgUgVuDqi1qCUThVZ3a1RK?=
 =?us-ascii?q?884jA7CIS7DYbMXIytgbqB3DulEZ1SfGxJFleMEXLwfYWeR/gMcD6SItNmkjEc?=
 =?us-ascii?q?T7ehUI8h1RattAPg0bpoNOjU9zYctZLi0th1+uLSmQsz9TxyE8SSzWWNQ3tokW?=
 =?us-ascii?q?MPQj88xLp/rlBlylefzah4hORVFd9J6PNPSAs6MZ/cwPZ8C9D9QQ/BetaJSFC7?=
 =?us-ascii?q?QtSpGz0xT9Qxw8MQbEZ5AdmtkhfD3y+yCb8Pi7OLHIA08r7b33XpOsly0WjG27?=
 =?us-ascii?q?c7g1kmWMRPM3amibB59wTUA47JkECZl6KxeKQY3S7N8nqDzGWUsEFZVg5wTbvK?=
 =?us-ascii?q?XXQFakTKqtT541vIT6WyBrQ/LgtB1cmCJ7NXZdLzk1VJWu3vONTEbGK3gGe/Gx?=
 =?us-ascii?q?CIy6iIbIrrfWUdwSrcBFIFkwAV4XaJKww+Cj29rGLZCTxkDUjvbF/08elitHO7?=
 =?us-ascii?q?SVc5zx2Lb01k0Lq15h4VhPyGR/MPxL4Evz0hqzF1HFa70NLbEN6ApwtnfKVBbt?=
 =?us-ascii?q?Ix+lZH1WTFtwNjOpysNbxthlkbcw5vpUPhyw13CplckcgttH4l1g5yJryX0Vxf?=
 =?us-ascii?q?dzKUx4v/OqDKJWbo+hCvaKnW2k/F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzE95oPJz3FjLbO4sz7C290zAuslxQ2tf9Ne?=
 =?us-ascii?q?MKOCCQ/zHNcWB8moKOw2hVepaggIM/xV9K4xJ8mmbeeJ2La3POZ8mzKrlX5H4I?=
 =?us-ascii?q?Fh3U2W7SpzV+nI04wDw/6GxAuHVi7wg0u7vcDzhI9LeysSHm25ySX/AI5RZ6ty?=
 =?us-ascii?q?fZsECGu0Is23wMl+iIDpW3JC6FGjAFYG0tezeRWOd1z9wRFQ1UMPrH2nmCu01T?=
 =?us-ascii?q?x1nysyrqqC2izD2ODidBsBOm5WS2hul1bsIY6oj98EWEikdRQmlByg5Uzi3ahU?=
 =?us-ascii?q?uLx/L3XPQUdPZyX2LXttUrGztrqBZM5D8ogovj9UUOS/YFCaTKDyox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHXB1em?=
 =?us-ascii?q?ONml59eUl5bFsu2lU2KhV5tTcTTkzI+atSu743FqDgO7n/yphtLnFg062zfh19?=
 =?us-ascii?q?Z2TSXIsAr8Yo7z2qS5K+1nf1NkBF/h68VgHIF+nZA9hJUR2Xgcm5WU8mALkWb1?=
 =?us-ascii?q?MdVHx63+aGABSiIMw97Q+ALlwlFsLmqVx4LlUXWQ2s5hZ9i5YmwMwC484d5FCL?=
 =?us-ascii?q?yI7LNahyt6uUS3rRjeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNC9C7GCpxtQWXfjdZckAC9w9d5/MFPX3X3364Hkfs?=
 =?us-ascii?q?TQbN0Juh2VlRfAk/ZaKJYrmvUWgipnPHr3vWc5xO4jkRxuwZa6sZCcJGp3+6K5?=
 =?us-ascii?q?BgNYOifxZ8MO4TztiadensCL34GgBJlhGzMLXIf2QvKsCj4dqfPnNwOWGj0mtn?=
 =?us-ascii?q?ibAabfHROY6Ep+rXLACZWrOG+MJHUD0dVuXhqdJFFcgAAJWjU1hIU5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7+J0Hy?=
 =?us-ascii?q?FF552hsRaCKmqBawRTCmEJXEOECkvnPrmv49nA7ueZCvC/L/vIfbWBt+heW+2U?=
 =?us-ascii?q?ypKo14ts5yyMOdmXPnl+E/073VJOXXBnFMTYmDUPSC0XmzjOb86Boxe89TN4rt?=
 =?us-ascii?q?qi8PTwQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYryHNUbnfmrVJAB8bcS9zMMpI4rk43glMP87bl9z02qR5jv4zF1dKS1?=
 =?us-ascii?q?jhltu1aswNJmG3LEnHC1qTNLSaOT3LxNn6Yb+9Sb1Vlulbqwe8tiqbE0D9ODSO?=
 =?us-ascii?q?jD3pVxGpMeFRgyCXJh1euIehchlzDWjvVs7pahq+MNVvlz053aU0hm/WNW4bKT?=
 =?us-ascii?q?V9c1lCrruV7SNZhPVwA21A7np/IumClCaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXro0mn1bzluiJ1yoiWQBL7zVGnoSGuW1mOL7F7d9BX3je9R4A5G?=
 =?us-ascii?q?nWDA4F9PV/Ddi6mb1Uy9XJ3J7zKTpY6cOcqckBA8nZLoSbMHssKwD4MDfOCU0O?=
 =?us-ascii?q?Sjv9ZjKXvFBUjPzHri7dlZM9sJW5wJc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAADLOhFch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBWoIRJ4wUX4szgiGXP4FxLhMBhz4iNAkNAQMBAQEBAQECARMBAQEIDQk?=
 =?us-ascii?q?IKS+CNiKCZQMDAQIkUgYJAQFQAyUvGQWDHIICBAGnJDOKLId9hD+BVz+JcYUOA?=
 =?us-ascii?q?okZl3MHAoIjBIsQhCIWkUabBYIOMxojgzyCJxd/AQeNFj8BATEBgQQBAYx8AQE?=
X-IPAS-Result: =?us-ascii?q?A0AYAADLOhFch0O0hNFkHQEBBQEHBQGBUQgBCwGBWoIRJ4w?=
 =?us-ascii?q?UX4szgiGXP4FxLhMBhz4iNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiKCZQMDA?=
 =?us-ascii?q?QIkUgYJAQFQAyUvGQWDHIICBAGnJDOKLId9hD+BVz+JcYUOAokZl3MHAoIjBIs?=
 =?us-ascii?q?QhCIWkUabBYIOMxojgzyCJxd/AQeNFj8BATEBgQQBAYx8AQE?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="44682310"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 08:50:08 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728239AbeLLQte (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 11:49:34 -0500
Received: from foss.arm.com ([217.140.101.70]:44572 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728037AbeLLQsL (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 11:48:11 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 41FE31684;
        Wed, 12 Dec 2018 08:48:11 -0800 (PST)
Received: from e112298-lin.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 25F2E3F575;
        Wed, 12 Dec 2018 08:48:09 -0800 (PST)
From: Julien Thierry <julien.thierry@arm.com>
To: linux-arm-kernel@lists.infradead.org
Cc: linux-kernel@vger.kernel.org, daniel.thompson@linaro.org,
        joel@joelfernandes.org, marc.zyngier@arm.com,
        christoffer.dall@arm.com, james.morse@arm.com,
        catalin.marinas@arm.com, will.deacon@arm.com, mark.rutland@arm.com,
        Julien Thierry <julien.thierry@arm.com>,
        kvmarm@lists.cs.columbia.edu
Subject: [PATCH v7 10/25] arm64: kvm: Unmask PMR before entering guest
Date: Wed, 12 Dec 2018 16:47:10 +0000
Message-Id: <1544633245-6036-11-git-send-email-julien.thierry@arm.com>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1544633245-6036-1-git-send-email-julien.thierry@arm.com>
References: <1544633245-6036-1-git-send-email-julien.thierry@arm.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Interrupts masked by ICC_PMR_EL1 will not be signaled to the CPU. This
means that hypervisor will not receive masked interrupts while running a
guest.

Avoid this by making sure ICC_PMR_EL1 is unmasked when we enter a guest.

Signed-off-by: Julien Thierry <julien.thierry@arm.com>
Cc: Christoffer Dall <christoffer.dall@arm.com>
Cc: Marc Zyngier <marc.zyngier@arm.com>
Cc: Catalin Marinas <catalin.marinas@arm.com>
Cc: Will Deacon <will.deacon@arm.com>
Cc: kvmarm@lists.cs.columbia.edu
---
 arch/arm64/include/asm/kvm_host.h | 12 ++++++++++++
 arch/arm64/kvm/hyp/switch.c       | 16 ++++++++++++++++
 2 files changed, 28 insertions(+)

diff --git a/arch/arm64/include/asm/kvm_host.h b/arch/arm64/include/asm/kvm_host.h
index 52fbc82..5c2fe50 100644
--- a/arch/arm64/include/asm/kvm_host.h
+++ b/arch/arm64/include/asm/kvm_host.h
@@ -24,6 +24,7 @@
 
 #include <linux/types.h>
 #include <linux/kvm_types.h>
+#include <asm/arch_gicv3.h>
 #include <asm/cpufeature.h>
 #include <asm/daifflags.h>
 #include <asm/fpsimd.h>
@@ -471,6 +472,17 @@ static inline int kvm_arch_vcpu_run_pid_change(struct kvm_vcpu *vcpu)
 static inline void kvm_arm_vhe_guest_enter(void)
 {
 	local_daif_mask();
+
+	/*
+	 * Having IRQs masked via PMR when entering the guest means the GIC
+	 * will not signal the CPU of interrupts of lower priority, and the
+	 * only way to get out will be via guest exceptions.
+	 * Naturally, we want to avoid this.
+	 */
+	if (system_uses_irq_prio_masking()) {
+		gic_write_pmr(GIC_PRIO_IRQON);
+		dsb(sy);
+	}
 }
 
 static inline void kvm_arm_vhe_guest_exit(void)
diff --git a/arch/arm64/kvm/hyp/switch.c b/arch/arm64/kvm/hyp/switch.c
index 7cc175c..88ed590 100644
--- a/arch/arm64/kvm/hyp/switch.c
+++ b/arch/arm64/kvm/hyp/switch.c
@@ -22,6 +22,7 @@
 
 #include <kvm/arm_psci.h>
 
+#include <asm/arch_gicv3.h>
 #include <asm/cpufeature.h>
 #include <asm/kvm_asm.h>
 #include <asm/kvm_emulate.h>
@@ -537,6 +538,17 @@ int __hyp_text __kvm_vcpu_run_nvhe(struct kvm_vcpu *vcpu)
 	struct kvm_cpu_context *guest_ctxt;
 	u64 exit_code;
 
+	/*
+	 * Having IRQs masked via PMR when entering the guest means the GIC
+	 * will not signal the CPU of interrupts of lower priority, and the
+	 * only way to get out will be via guest exceptions.
+	 * Naturally, we want to avoid this.
+	 */
+	if (system_uses_irq_prio_masking()) {
+		gic_write_pmr(GIC_PRIO_IRQON);
+		dsb(sy);
+	}
+
 	vcpu = kern_hyp_va(vcpu);
 
 	host_ctxt = kern_hyp_va(vcpu->arch.host_cpu_context);
@@ -589,6 +601,10 @@ int __hyp_text __kvm_vcpu_run_nvhe(struct kvm_vcpu *vcpu)
 	 */
 	__debug_switch_to_host(vcpu);
 
+	/* Returning to host will clear PSR.I, remask PMR if needed */
+	if (system_uses_irq_prio_masking())
+		gic_write_pmr(GIC_PRIO_IRQOFF);
+
 	return exit_code;
 }
 
-- 
1.9.1

