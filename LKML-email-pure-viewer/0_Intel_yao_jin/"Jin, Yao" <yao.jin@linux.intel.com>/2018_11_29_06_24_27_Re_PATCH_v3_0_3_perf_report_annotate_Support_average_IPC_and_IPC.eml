Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 29 Nov 2018 18:17:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5A2775803ED;
	Wed, 28 Nov 2018 22:24:36 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 22:24:35 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AdhTL/hZ+KPnPFn1bIqsvBZD/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcizYh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPDOQPM+hXoIb/qFQSohW+HhGsCeH0xz9UhXL7x7E23/gvHAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKoeX+S7zKjOzTnbcvhZ2y3y6I/Gfhs8pvyNXah/cc3LxUktFgPFiE6d?=
 =?us-ascii?q?qYjkPzOTy+QMvHKX7+tmVeKzlWEnrxt9rSSoxscpk4TEgJ8exF7D9SV82ok1JN?=
 =?us-ascii?q?u4RVZ4YdG6CptQsT+VN49sTsMlWWFotyA3waAFt56jZCUG1ogryhrFZ/CafYWE?=
 =?us-ascii?q?/AjvWPuSLDtknn5oebCyiw6v/UWuxeDwTNS43VhFoyZfj9XBuHEA2wbO5sSbVv?=
 =?us-ascii?q?dw+Fqq1yyV2ADJ8O5EJFg5larFJJ4lxb49joQTsUvdES/sgkn2j7GZdl8i+ue2?=
 =?us-ascii?q?7+TreLLmpoWTN4NsiwH+NLohmtCnDOgmLgQDW3KX9fmy2bH950H1XbZHguEsnq?=
 =?us-ascii?q?TYsp3WPcEbqbS4Aw9R3IYj8RG/DzK+3dQcnHkHKk9FeR2eg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i1lzdqyfbGMaP7ApjWMHjDn6nufaxn505f1gUz19Zf6IxQCr0bJ/LzQEDxuM?=
 =?us-ascii?q?TCDhAlKwy03/rnCNJl24MaWGKPAbGWPLndsF+V/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSvgoxVu3qiEGYXj5UfXqyX7?=
 =?us-ascii?q?886Ss9CIKpForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2tg/6zKRoIvDX+i0fs5Lj0t916vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83OoTHz+x6DNDyWRjNfs2TR1ak?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5jFkpWM1POXeihq5+7QfTAYHJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnWC8BR?=
 =?us-ascii?q?KLxrOJaIrnYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0BuyqC6+gALivCGS/McxLQEuDw/pDVyB1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYjcgqrXYqzA1uKaKY0FJN?=
 =?us-ascii?q?bS+Y0Yr3Or3NLmny/Rava6HN11Ha0daW/LoP6fsip1XiugGpClQt83F939ZJ1H?=
 =?us-ascii?q?uc443ADBAOXpLpTkY36x96qqnAbSk5+YzV2mNjMKmuvjDZxtImGfEqyhCjf9dY?=
 =?us-ascii?q?LqOJDwvyE8wcB8izJ+0mgVmpbhQYPO9M8K44Jd+pd/yD2KSzJuZvgCqmjXhb4I?=
 =?us-ascii?q?B6yk+N9zd8RvTU0JofwvCY3hGIVzHzjFq6tsD3mIZEZSwdH2alyCjkApJRabN2?=
 =?us-ascii?q?fYoRFWiuJMi3zM1kh5HxQ35Y6EKjB1Qe1c+zeBqdc0by3RdN2kQQu3CnnzW3zy?=
 =?us-ascii?q?Z1kz0wsqWQxijOzPn8exodPW5LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe85O6JIyvSRXSui8ek2aSrjmrhse0iPjGX?=
 =?us-ascii?q?ZexT8hezGrvJX5gwJ1iGaHIHlvq3rZfNl6xQ3D69zEWf5Rwj0GSTF6iTbNHFi8?=
 =?us-ascii?q?PNqp/dKOm5fYqO++VGGhVpxVcSb1y4ONry+75WxsAR2ikPG/gNznEQ4m0SDl09?=
 =?us-ascii?q?lmTznHrBH5YoPzzaS1LfpnflV0BF/788d7GptxkowqiJES2HgagI6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwiE94NpLCK?=
 =?us-ascii?q?uO7LxEgDF6oly3rQ/KZfh9nzEdyeYh6XIAguEJvhYtwTuZArwIAUZYOinsnQyS?=
 =?us-ascii?q?79+itKVXeHqvcb+o2Up7nNChD6uNrhtSWXnnYZciATF/7t9kP13Syn3z5ZrpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5L65?=
 =?us-ascii?q?AhldNjHvZsIc4DftjbtFnsaN3oCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQW1s9tRB6ZJExCmgwUWCg6k4U9FgCrwszh?=
 =?us-ascii?q?bUh46ioQ5l7+thtD1OZoOwPjXWfYoQeici00R4SHLBpK8gFC4F/YMc6E4eJ2AS?=
 =?us-ascii?q?5Y5YetrBCXJmyYegRIDnwJWkqeCFD4JbSu4djA8+6FBuuxNffOYLOOqfBAWPeM?=
 =?us-ascii?q?356gzoxm/zOUPMWVInZiF+E72lZEXX1hG8XZnCgPSzUKly3Xac6Xvgy8+ipxrs?=
 =?us-ascii?q?Cw6/nrXAPv5Y2SC7pdK9lv+ha2gbudOO6Unip2NTFY1pYUz3/S1LcfxEISiz1p?=
 =?us-ascii?q?dzS1EbQPqy/NTKHTmq9WFRIbaDlzNMxH760ixAlNJNXbh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZuAetuTmACU/sIDSC?=
 =?us-ascii?q?myPtVxCuKuxMiCCbPBpDuICyaBptCG7jTM74ZR2/KtN4kTo2wbgsjHPQKWEcKS?=
 =?us-ascii?q?R8c19KrrCI8SNYg/B/F3Zd4XZ/MeaEmziW7+/DJ5YSsPtrBDl0lu1A7HQ7zbtV?=
 =?us-ascii?q?8D9LRPhvlCTOqd5upkmskvOTxTp/TBpOtjFLiZqLvEp4P6XZ85hAWXDc8xMM7W?=
 =?us-ascii?q?WfERIKp9R+B93ruqBQzMXPla3pJDdD9dLU4dUTB8zOJM2bN3ohNEmhJDmBLgof?=
 =?us-ascii?q?THaMMXrWzxhfl/WJ/1WPo5Q6o4Sqk50LHOx1TlswQ7k4C0IhVO0LJ90/CiItlv?=
 =?us-ascii?q?iZjcgg4Xu4sQmXRcNGs5SBXfWXV6a8YA2FhKVJMkNbiYjzKp4eY8iigxRv?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAA7hf9bh0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBWoEPcBIng3mIGF+LKYINFJcugXEWGAMQAYdxIjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECIA8BBUEGCQEBCg4KA?=
 =?us-ascii?q?gImAgIDVAYNCAEBAYJRSwGCAQWmDoEvhUCEbYELiwuBWD6BOII2NYEmhl+CVwK?=
 =?us-ascii?q?QG48vVQcCAoZ8ii4GGIFahRCKMIFeiByHbIZkgUaCDXCDPAmCR4hMhUwyAQExg?=
 =?us-ascii?q?QUBAY0yAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAAA7hf9bh0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBWoEPcBIng3mIGF+LKYINFJcugXEWGAMQAYdxIjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCA0JCCkjDII2JAGCYgECAwECIA8BBUEGCQEBCg4KAgImAgIDVAYNCAE?=
 =?us-ascii?q?BAYJRSwGCAQWmDoEvhUCEbYELiwuBWD6BOII2NYEmhl+CVwKQG48vVQcCAoZ8i?=
 =?us-ascii?q?i4GGIFahRCKMIFeiByHbIZkgUaCDXCDPAmCR4hMhUwyAQExgQUBAY0yAQE?=
X-IronPort-AV: E=Sophos;i="5.56,293,1539673200"; 
   d="scan'208";a="42774191"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 22:24:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727952AbeK2R2p (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 12:28:45 -0500
Received: from mga07.intel.com ([134.134.136.100]:4622 "EHLO mga07.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727406AbeK2R2p (ORCPT <rfc822;Linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 12:28:45 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
  by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 22:24:30 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,293,1539673200"; 
   d="scan'208";a="95626981"
Received: from yjin15-mobl.ccr.corp.intel.com (HELO [10.239.196.43]) ([10.239.196.43])
  by orsmga006.jf.intel.com with ESMTP; 28 Nov 2018 22:24:28 -0800
Subject: Re: [PATCH v3 0/3] perf report/annotate: Support average IPC and IPC
 coverage for function
To: Jiri Olsa <jolsa@redhat.com>
Cc: acme@kernel.org, jolsa@kernel.org, peterz@infradead.org,
        mingo@redhat.com, alexander.shishkin@linux.intel.com,
        Linux-kernel@vger.kernel.org, ak@linux.intel.com,
        kan.liang@intel.com, yao.jin@intel.com
References: <1543418098-10435-1-git-send-email-yao.jin@linux.intel.com>
 <20181128101757.GA11280@krava> <20181128101846.GB11280@krava>
From: "Jin, Yao" <yao.jin@linux.intel.com>
Message-ID: <4f05c9c6-f82f-1a23-ce8b-b061d5758400@linux.intel.com>
Date: Thu, 29 Nov 2018 14:24:27 +0800
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181128101846.GB11280@krava>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 11/28/2018 6:18 PM, Jiri Olsa wrote:
> On Wed, Nov 28, 2018 at 11:17:57AM +0100, Jiri Olsa wrote:
>> On Wed, Nov 28, 2018 at 11:14:55PM +0800, Jin Yao wrote:
>>> Add supporting of displaying the average IPC and IPC coverage
>>> percentage per function.
>>>
>>> For example,
>>>
>>> $ perf record -b ...
>>> $ perf report -s symbol or
>>>    perf report -s symbol --stdio
>>>
>>> Overhead  Symbol                           IPC   [IPC Coverage]
>>>    39.60%  [.] __random                     2.30  [ 54.8%]
>>>    18.02%  [.] main                         0.43  [ 54.3%]
>>>    14.21%  [.] compute_flag                 2.29  [100.0%]
>>>    14.16%  [.] rand                         0.36  [100.0%]
>>>     7.06%  [.] __random_r                   2.57  [ 70.5%]
>>>     6.85%  [.] rand@plt                     0.00  [  0.0%]
>>>    ...
>>>
>>> $ perf annotate --stdio2
>>>
>>> Percent  IPC Cycle (Average IPC: 2.30, IPC Coverage: 54.8%)
>>>
>>>                          Disassembly of section .text:
>>>
>>>                          000000000003aac0 <random@@GLIBC_2.2.5>:
>>>    8.32  3.28              sub    $0x18,%rsp
>>>          3.28              mov    $0x1,%esi
>>>          3.28              xor    %eax,%eax
>>>          3.28              cmpl   $0x0,argp_program_version_hook@@GLIBC_2.2.5+0x1e0
>>>   11.57  3.28     1      ↓ je     20
>>>                            lock   cmpxchg %esi,__abort_msg@@GLIBC_PRIVATE+0x8a0
>>>                          ↓ jne    29
>>>                          ↓ jmp    43
>>>   11.57  1.10        20:   cmpxchg %esi,__abort_msg@@GLIBC_PRIVATE+0x8a0
>>>   ...
>>>
>>> v3:
>>> ---
>>>      Remove the sortkey "ipc" from command-line. The columns "IPC"
>>>      and "[IPC Coverage]" are automatically enabled when "symbol"
>>>      is specified.
>>>
>>>      Patch "perf report: Display average IPC and IPC coverage per symbol"
>>>      is impacted.
>>>
>>> v2:
>>> ---
>>>    1. Merge in Jiri's patch to support stdio mode
>>>
>>>    2. Add a new patch "perf annotate: Create a annotate2 flag
>>>       in struct symbol" which records if the symbol has been
>>>       annotated yet.
>>>
>>>    3. Minor update such as adding { } for multiline code in 'if'
>>>       condition.
>>>
>>> Jin Yao (3):
>>>    perf annotate: Compute average IPC and IPC coverage per symbol
>>>    perf annotate: Create a annotate2 flag in struct symbol
>>>    perf report: Display average IPC and IPC coverage per symbol
>>
>> hi,
>> I took he liberty and moved the annotation retrieval into
>> resort phase under progress bar scope. It's currently on top
>> of my perf/fixes branch, could you please check it?
>>
>>    git://git.kernel.org/pub/scm/linux/kernel/git/jolsa/perf.git
> 
> commits:
> 7f3ffdb9783f perf tools: Move symbol annotation to resort
> e87f7d3c4f10 perf tools: Add perf_evsel__output_resort_cb function
> 40012b422108 perf tools: Add argument to hists__resort_cb_t callback
> 
> jirka
> 

Hi Jiri,

Thanks for your patches. I have tested with your repo. Now I can see 2 
progress bars. One is displayed at the events processing phase, the 
other is displayed at resorting phase.

I have only one concern that is, in my test, much of time is consumed by 
the event processing phase, for example, 90% of time. Only 10% of time 
is consumed at resorting phase.

So do we really need the second progress bar?

Thanks
Jin Yao
