Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:42:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DF026580213;
	Thu, 29 Nov 2018 06:08:36 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 06:08:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ABOksThdFIXZ1ajFDBoVjXdsUlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/YRON2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRCDIy+?=
 =?us-ascii?q?YYsBD/cPM/hWoYnmv1sDrwCzCRWwCO711jNEmmP60bE83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?nKrNX1LqYSUfupzKnP1TXDb+1Z0ir75ofWaBAhpvGNVq93fMXNyUkvDQLFjk6M?=
 =?us-ascii?q?qYziJzOV1voCv3Kf7+V+T+KvjG4mphptrTS23ccgkIfJhpgMx13C6C53w541KM?=
 =?us-ascii?q?WmREJnZdOoCoZcui+EO4dsX88vQH1ktDw7x7AEoZK2eCYHxI46yxPdcfCLbYaF?=
 =?us-ascii?q?7xP5WOufPTt1gm9udqiliBao60egz/XxVsmq31ZOqSpIisfMtn8T2BzJ8MSHSe?=
 =?us-ascii?q?Vy/l2n2TmR0wDf8OZEIVo7labDKp4hxKA/loYLvEjdAiP7nF/6gLKYe0k64OSk?=
 =?us-ascii?q?9ufqbqn8qpKdNYJ4kgT+Pb4vmsy7D+Q4KA8OX22D9OS41b3j+1D5QbpTgv01jK?=
 =?us-ascii?q?bZqpbaKtofpqKgBA9U3IAj5AilDzq9ztQYkmcILEhfdBKEkYfpIVfOL+78Dful?=
 =?us-ascii?q?hFSsijhry+jcPrL9GpXNMmTDkLD5cLZ56k5cyxQ8wcpQ5pJJEbwBJPPzWknstN?=
 =?us-ascii?q?3XFBM5Mgq0w/r5B9V5zI8RRWWPAqqBOqPIrVCI/v4vI/WLZIINuDbyMfkl5+L0?=
 =?us-ascii?q?gn8+g1MdfbSp0oERaHC3BflmJ0SZYXzxgtYOC2sKvww+TPD0h12GSzJce3GyX6?=
 =?us-ascii?q?ck7DEhFI2mFZvDRpyqgLGZ3ie7GYNZanpFClCLF3focYKEVuwIaCKTJM9hjzMF?=
 =?us-ascii?q?WaKgS48nyRGhqgv6x6B7IerT/y0SrYjj28Rt5+3PiREy8iR5AN6G02GNSGF0nX?=
 =?us-ascii?q?kERyUs06B9ukF9zlaD0a5lg/1XD9BT5vVJUhskOp7Y1eB1F9fyWgfZdNeTVFmm?=
 =?us-ascii?q?WsmmAS02Tt8pwN8BeUB9F8+mjhDCxSWqBbAVmqePBJw19KLcwnfwK9x8y3bAyK?=
 =?us-ascii?q?kukV0mTtFTOm2hg6517xLTCJLRk0WFi6aqcrwR0zPX+2ed02WCpkFYXxR2UaXe?=
 =?us-ascii?q?Q38fYEzardD65kPHS7+jErAnMgpHyc6fJapGcNzpjVNaRPj9PNTSeX6+m2C1BR?=
 =?us-ascii?q?yQ3LODcJLqe3kB3CXaEEULjhoc/WiYOgQkBieuuWTeDCdwGlLpeE7s9eh+qHWm?=
 =?us-ascii?q?Tk471Q2Kbkth16ar9R4Rn/CTV/QT3rccsic7tzp0BEq9387RC9eYuwphfaBcYd?=
 =?us-ascii?q?Qh4FdH1WPVrRB9MoanL6B4gl4ecgJ3v0z12hVzC4VAl9UqrXwwwApzL6KYzE1O?=
 =?us-ascii?q?dzeC0Z/sPb3XL3H4/AqzZK7OxlHezNGW978V5/Q8tVrisx+mF0o4/3p8ztlazm?=
 =?us-ascii?q?GT5pPJDAoVT5L8SUI39xl8p7HHbSgx/YLU1XtwMaaqtj/Owc4mBOwgyhy4ZddQ?=
 =?us-ascii?q?LLuEFBPuE80dH8WvKPEql0K1YR4ePeFS9LQ7P8Wpd/ad3K6rPeBgnC+pjGhd4Y?=
 =?us-ascii?q?B91F6M+DR4SuLSw5kFxPSY1BOdVzjglFehrtz3mYdcaDEIH2qw1TLrBJRMaa11?=
 =?us-ascii?q?Z4oLD3mhI9e2xtlnm5HiQXpY+0O9CFMc38+pfwGfb1j83Q1WyEQWrmarmSq+zz?=
 =?us-ascii?q?xojT4pqrCT0zDJw+TnbBAHIHJERHF+jVfwJoi5l9AbXEmyYwkpjhel/lv6x65A?=
 =?us-ascii?q?qaR7LmnTR1pIfifsI2FjVKuwqqSNY8pV5Jw0tiVXVfy2YUqGRb7lvxsazyTjEn?=
 =?us-ascii?q?NcxD8hbTGquZb5nxtghGKGNnlzr3nZecB2xRjB4tzRXvpR3jsARCllhjjbHFm8?=
 =?us-ascii?q?P9+1/dqKk5fPqPyxV2WkVpdLaynk0ZuAtDen5W1tGRC+n+q8mtr9HQg40C/70c?=
 =?us-ascii?q?JnVSHJrBb6f4nq2L62MeNhfkl0GlD879B2FZ15kos1nJsQw2QVho2J/Xoblmf+?=
 =?us-ascii?q?KdZb1rj/bHYXRT4L3sTa4A7q2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPsr6X4agPsGtBAjzyqDGbASAVdXPTb3mBuW?=
 =?us-ascii?q?9dC+o75aZGKucbi2yUp/ksqtDLCEogFARnn5fo0uEjN37sV6KFjMymH86pn4eN?=
 =?us-ascii?q?nMatIergGUkxDFj+RPKZM+jPwKhTd8OWLmvH0o0Oo7jR1o3ZGns4mLMWRt/KSl?=
 =?us-ascii?q?AhFGMj35fd8c+jbojaxGhMaZw5ivHol9GjUMRJbnVuinEDUWtfT6LQqOFCA8p2?=
 =?us-ascii?q?yfGbreGw+f9Uhno2jOE5CtK3GYOn0Zwc9+SxmaIUxVmBoUUykinp4lCgCqw9Ts?=
 =?us-ascii?q?cEVj6TAU+FH4sQFAyv5yOxn8T2ffpxqoajEuR5iENxdW6gBC50HIMc2R9O5zHi?=
 =?us-ascii?q?dY/oG/owyJMGCUewNIDWQRUEyeG1/jJqWu5cXH8+WABuu+KObOYayTqeNEUfeE?=
 =?us-ascii?q?34mv0oxg/zaDLciPOnhiD/sm2ktMR3x5GsLZmykRRCwTjS7Cc8mbpBKk8C1tss?=
 =?us-ascii?q?+/6OjrWB7o5YaXC7tdL9Rv+xO1gaeCLeKQhzx5KTFX1pwS33/I1aMf0UUWiyFv?=
 =?us-ascii?q?cTmtDLsBuTTMTKLWhq9YERobZzlvO8tP6qI2xhNNNtLDitPpyr54ieY4BE1YVV?=
 =?us-ascii?q?P6gMGme8wLL3u5NFPGH0uLMLWGJTvWw8D4e6+8SLtQjPlKuB20ozqUD0jjPjGb?=
 =?us-ascii?q?nTnzSx+vKf1MjD2cPBFGpIG9cxNtBXL/Q978dhK7MMF4jTstzL0wh3PKM3McMD?=
 =?us-ascii?q?dmf0NMqL2Q8T1XgvFlF2Nd6XplKPGOmzyF4OnANpYWrfxrDzx0lu1A5nQ6zrpV?=
 =?us-ascii?q?7CdcS/10mCvdtNhuo169n+mLyzpnVgdOqzlRiIKKu0ViJbvW9p1aVXnY+xIN6D?=
 =?us-ascii?q?bYNxNfjdZjCNTquqYY6tXVjq/1MzxC9tPY4YNIDcXSKOqEPWAnPB6vEyTdFwsE?=
 =?us-ascii?q?SzHtMnvQ0QgVqPiP8jWwp5M5p4L2kYFGHqdSSVgoDdsBA0FvFZoFOpghGnsBkL?=
 =?us-ascii?q?WbhcMMrVe6qBTLQcxc9sTCTv+6DPHrJSychL8CZhdOyK6ufqoJMYiu8Ex4a0Jm?=
 =?us-ascii?q?m5zKFgL0UMpKs2U1ZQ8uoV5R92B+Qys31ljieyumpWRVG+TizU1+sRd3fel4rG?=
 =?us-ascii?q?Sk2FwwPFef4XJoyEQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABp8v9bh0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4xwiymBaDmXMIFzLBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQ?=
 =?us-ascii?q?BgmIDAwECJFIGCQEBGDgDKSsGARIFgxyCAgQBpwYzhUGEbIwWgVc/gUSCQ4p4A?=
 =?us-ascii?q?qAjBwKBDIERBIgKhx+RHIh4kHwggg1NJ4M4giQCAReOHT8BATGBBQEBjToBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AYAABp8v9bh0O0hNFkHgEGBwaBUQkLAYNrJ4xwiymBaDm?=
 =?us-ascii?q?XMIFzLBMBh3QiNAkNAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBgmIDAwECJFIGC?=
 =?us-ascii?q?QEBGDgDKSsGARIFgxyCAgQBpwYzhUGEbIwWgVc/gUSCQ4p4AqAjBwKBDIERBIg?=
 =?us-ascii?q?Khx+RHIh4kHwggg1NJ4M4giQCAReOHT8BATGBBQEBjToBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,294,1539673200"; 
   d="scan'208";a="54843843"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 06:08:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728999AbeK3BMy (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 20:12:54 -0500
Received: from pegase1.c-s.fr ([93.17.236.30]:1785 "EHLO pegase1.c-s.fr"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728857AbeK3BMy (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 20:12:54 -0500
Received: from localhost (mailhub1-int [192.168.12.234])
        by localhost (Postfix) with ESMTP id 435K8n4J6Lz9vGF8;
        Thu, 29 Nov 2018 15:07:21 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
        by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
        with ESMTP id kOLPCewdYA80; Thu, 29 Nov 2018 15:07:21 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
        by pegase1.c-s.fr (Postfix) with ESMTP id 435K8n3nLlz9vGDx;
        Thu, 29 Nov 2018 15:07:21 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id A4F078B8A0;
        Thu, 29 Nov 2018 15:07:22 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
        by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
        with ESMTP id B0LoQBHjsgd4; Thu, 29 Nov 2018 15:07:22 +0100 (CET)
Received: from po14163vm.idsi0.si.c-s.fr (unknown [192.168.232.3])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id 5D3BF8B899;
        Thu, 29 Nov 2018 15:07:22 +0100 (CET)
Received: by po14163vm.idsi0.si.c-s.fr (Postfix, from userid 0)
        id F2CF569AE8; Thu, 29 Nov 2018 14:07:21 +0000 (UTC)
Message-Id: <c4c843b16167e5fc0f7346a721a31232f47a79cd.1543499865.git.christophe.leroy@c-s.fr>
In-Reply-To: <cover.1543499860.git.christophe.leroy@c-s.fr>
References: <cover.1543499860.git.christophe.leroy@c-s.fr>
From: Christophe Leroy <christophe.leroy@c-s.fr>
Subject: [PATCH v9 18/20] powerpc/8xx: reintroduce 16K pages with HW
 assistance
To: Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>
Cc: linux-kernel@vger.kernel.org, linuxppc-dev@lists.ozlabs.org
Date: Thu, 29 Nov 2018 14:07:21 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Using this HW assistance implies some constraints on the
page table structure:
- Regardless of the main page size used (4k or 16k), the
level 1 table (PGD) contains 1024 entries and each PGD entry covers
a 4Mbytes area which is managed by a level 2 table (PTE) containing
also 1024 entries each describing a 4k page.
- 16k pages require 4 identifical entries in the L2 table
- 512k pages PTE have to be spread every 128 bytes in the L2 table
- 8M pages PTE are at the address pointed by the L1 entry and each
8M page require 2 identical entries in the PGD.

In order to use hardware assistance with 16K pages, this patch does
the following modifications:
- Make PGD size independent of the main page size
- In 16k pages mode, redefine pte_t as a struct with 4 elements,
and populate those 4 elements in __set_pte_at() and pte_update()
- Adapt the size of the hugepage tables.
- Define a PTE_FRAGMENT_NB so that a 16k page contains 4 page tables.

Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
---
 arch/powerpc/Kconfig                         | 2 +-
 arch/powerpc/include/asm/nohash/32/mmu-8xx.h | 4 ++++
 arch/powerpc/include/asm/nohash/32/pgtable.h | 8 +++++++-
 arch/powerpc/include/asm/nohash/pgtable.h    | 4 ++++
 arch/powerpc/include/asm/page_32.h           | 3 ++-
 arch/powerpc/include/asm/pgtable-types.h     | 4 ++++
 6 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/arch/powerpc/Kconfig b/arch/powerpc/Kconfig
index ddfccdf004fe..8be31261aec8 100644
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@ -689,7 +689,7 @@ config PPC_4K_PAGES
 
 config PPC_16K_PAGES
 	bool "16k page size"
-	depends on 44x
+	depends on 44x || PPC_8xx
 
 config PPC_64K_PAGES
 	bool "64k page size"
diff --git a/arch/powerpc/include/asm/nohash/32/mmu-8xx.h b/arch/powerpc/include/asm/nohash/32/mmu-8xx.h
index fa05aa566ece..b0f764c827c0 100644
--- a/arch/powerpc/include/asm/nohash/32/mmu-8xx.h
+++ b/arch/powerpc/include/asm/nohash/32/mmu-8xx.h
@@ -190,6 +190,7 @@ typedef struct {
 	struct slice_mask mask_8m;
 # endif
 #endif
+	void *pte_frag;
 } mm_context_t;
 
 #define PHYS_IMMR_BASE (mfspr(SPRN_IMMR) & 0xfff80000)
@@ -244,6 +245,9 @@ extern s32 patch__itlbmiss_perf, patch__dtlbmiss_perf;
 #define mmu_virtual_psize	MMU_PAGE_4K
 #elif defined(CONFIG_PPC_16K_PAGES)
 #define mmu_virtual_psize	MMU_PAGE_16K
+#define PTE_FRAG_NR		4
+#define PTE_FRAG_SIZE_SHIFT	12
+#define PTE_FRAG_SIZE		(1UL << 12)
 #else
 #error "Unsupported PAGE_SIZE"
 #endif
diff --git a/arch/powerpc/include/asm/nohash/32/pgtable.h b/arch/powerpc/include/asm/nohash/32/pgtable.h
index e9c8604cc8c5..bed433358260 100644
--- a/arch/powerpc/include/asm/nohash/32/pgtable.h
+++ b/arch/powerpc/include/asm/nohash/32/pgtable.h
@@ -232,7 +232,13 @@ static inline unsigned long pte_update(pte_t *p,
 	: "cc" );
 #else /* PTE_ATOMIC_UPDATES */
 	unsigned long old = pte_val(*p);
-	*p = __pte((old & ~clr) | set);
+	unsigned long new = (old & ~clr) | set;
+
+#if defined(CONFIG_PPC_8xx) && defined(CONFIG_PPC_16K_PAGES)
+	p->pte = p->pte1 = p->pte2 = p->pte3 = new;
+#else
+	*p = __pte(new);
+#endif
 #endif /* !PTE_ATOMIC_UPDATES */
 
 #ifdef CONFIG_44x
diff --git a/arch/powerpc/include/asm/nohash/pgtable.h b/arch/powerpc/include/asm/nohash/pgtable.h
index 70ff23974b59..1ca1c1864b32 100644
--- a/arch/powerpc/include/asm/nohash/pgtable.h
+++ b/arch/powerpc/include/asm/nohash/pgtable.h
@@ -209,7 +209,11 @@ static inline void __set_pte_at(struct mm_struct *mm, unsigned long addr,
 	/* Anything else just stores the PTE normally. That covers all 64-bit
 	 * cases, and 32-bit non-hash with 32-bit PTEs.
 	 */
+#if defined(CONFIG_PPC_8xx) && defined(CONFIG_PPC_16K_PAGES)
+	ptep->pte = ptep->pte1 = ptep->pte2 = ptep->pte3 = pte_val(pte);
+#else
 	*ptep = pte;
+#endif
 
 	/*
 	 * With hardware tablewalk, a sync is needed to ensure that
diff --git a/arch/powerpc/include/asm/page_32.h b/arch/powerpc/include/asm/page_32.h
index 5c378e9b78c8..683dfbc67ca8 100644
--- a/arch/powerpc/include/asm/page_32.h
+++ b/arch/powerpc/include/asm/page_32.h
@@ -22,7 +22,8 @@
 #define PTE_FLAGS_OFFSET	0
 #endif
 
-#ifdef CONFIG_PPC_256K_PAGES
+#if defined(CONFIG_PPC_256K_PAGES) || \
+    (defined(CONFIG_PPC_8xx) && defined(CONFIG_PPC_16K_PAGES))
 #define PTE_SHIFT	(PAGE_SHIFT - PTE_T_LOG2 - 2)	/* 1/4 of a page */
 #else
 #define PTE_SHIFT	(PAGE_SHIFT - PTE_T_LOG2)	/* full page */
diff --git a/arch/powerpc/include/asm/pgtable-types.h b/arch/powerpc/include/asm/pgtable-types.h
index eccb30b38b47..3b0edf041b2e 100644
--- a/arch/powerpc/include/asm/pgtable-types.h
+++ b/arch/powerpc/include/asm/pgtable-types.h
@@ -3,7 +3,11 @@
 #define _ASM_POWERPC_PGTABLE_TYPES_H
 
 /* PTE level */
+#if defined(CONFIG_PPC_8xx) && defined(CONFIG_PPC_16K_PAGES)
+typedef struct { pte_basic_t pte, pte1, pte2, pte3; } pte_t;
+#else
 typedef struct { pte_basic_t pte; } pte_t;
+#endif
 #define __pte(x)	((pte_t) { (x) })
 static inline pte_basic_t pte_val(pte_t x)
 {
-- 
2.13.3

