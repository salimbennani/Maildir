Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:31:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CC1155805CF;
	Tue, 18 Dec 2018 23:03:40 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 23:03:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3An4HbORPp7p8Wc3qoRUsl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn9osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRttfWSxfDIOy?=
 =?us-ascii?q?bIUBAeQOMulaoIbhqFUOtgO+CAu3CePzyTJFnGP60bE03ukjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj4KqcSUfq0zKnT0TXDaOtW2Tfj54PVdB4uv+uMXbVwcMHMzkQgCwPFjk+R?=
 =?us-ascii?q?qYz+IzOV0fwNs2iF4OZ6UeKglXQnqwZxozW02sggk5LJipgbylDe7Ch0xps+K9?=
 =?us-ascii?q?6gSENjf9KoDJ9duzuHO4Z4XM8uWXxktSUmxrEcuJO2fjAGxZApyhLFdvCKcZKE?=
 =?us-ascii?q?7gztWeuQOzt1im5pdbSijBio60eg0PfzVsys3VZKsCVFlt7Mu2gT1xzc9MeHUO?=
 =?us-ascii?q?Fx/kS/1jaV0QDc9OVELVozlarBJJ4t2r8wlpwNvkTfBiL6hln6gauMekk59OWk?=
 =?us-ascii?q?9f7rbqjlq5OALYN5iwPzPrwrmsOlAOQ4NgYOX3Kc+eS5zLDj+Uz5QLNXjvw5i6?=
 =?us-ascii?q?XZs47VJd4dpqGnBw9Zy4Ej6hi5Dzi4ytQVhmcHLF1bdxKdlYTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgijBrx+rJPrH5GJXCMmDDkKv9fbZ680NczAszzdNB6J5OBbABPen+WkvwtN?=
 =?us-ascii?q?zeEx84PBa4w+fhCNVhyIweXXiDDbOeMKPXqVWI/P4gI/GQZI8JvzbwM/gl6OTv?=
 =?us-ascii?q?jX8lg1AderOl3ZsKaH+iGPRmLF6UYX7tgtcHDGcLsRAyTO3siF2eTzFTY2y+UL?=
 =?us-ascii?q?475jE+EIimF5vMRpixgLyd2ye2Bp9WZmdYBVyWEnfocIOEW/ELaC+JJs9hkzoE?=
 =?us-ascii?q?VaWuSoM71BGushP6xKRjLubO5iIYspfj3sBv5+LPjREy6SB0D8OF3m6XVGF0nm?=
 =?us-ascii?q?QIRzws0KBlu0N9yEyO0ax5g/xeCNxS6OlFUgY8NZ7A0eN6D8r+VR7GfteMUFym?=
 =?us-ascii?q?WMmpASktTtItxN8De0V9FM+kjhzZ2yqqAqUal7qEBJEv9qLc3n7xJ9tyynrc1a?=
 =?us-ascii?q?khiUUmTdVLNWG8mqF/8A3TDZbTk0qFj6aqabgc3CnV+Wie12WOol9XXBRwUarf?=
 =?us-ascii?q?W3AffVXZrdL+6kPGTL+uDLAnPxBFyc6DLKtKd9LogU9HRPflJNTRfWaxl32sCh?=
 =?us-ascii?q?aPw7OGdJDqdHkF3CXBFEgElBge8mucOgggGCituWLeAyZoFVL0fUzs9/JzqHe6?=
 =?us-ascii?q?Tk8y0gGLYFdt17uz+h4Jm/OcT+kf0a4DuCcksz90Bkqy38rKC9qcoApsZLlcYd?=
 =?us-ascii?q?I44FdAyWLZtwx8Moa8L6x4gV4eaQB3v0Lo1xV4EYhAlckqrHU3zAt9M66Y0VVB?=
 =?us-ascii?q?dy+G0pD0ILHYNm7y/BW3Ya7Mxl7eyMqW+rsI6PkgsVrjuB+mF0U8/HRnydVayG?=
 =?us-ascii?q?ac6YjQAwoUUpLxVVg3+gN+p7HbZCk9+ozV2WdtMamyrj/NxdYpCPE5xRanetdV?=
 =?us-ascii?q?KLmEGxPqE80GG8iuL/Qnmli0bh4eIO9e7q81P8O8ePuA166mJ+JgnDOgjWRa74?=
 =?us-ascii?q?FxyEOM9yxgSuHW25YJ2e2X3gyCVz3klleurtj3mZxYZTEVBme/0ynkC5JLaa1o?=
 =?us-ascii?q?YIkLDn2iI8upydVkhp7hQmJX+0SnB1wbxsCpYx2Sb1rm0A1U1EQXp2GnmCSiwz?=
 =?us-ascii?q?x1lTEpsrSQ3CjUz+v+cxoHP3ZBRHN+glf0PYi0k9caUVCobggojhek5Vz2x7NG?=
 =?us-ascii?q?pKR5NGTTRUZIfy7rL2BtSKewt7yCY9JR55MsqylYTOO8YVWCQL7nvxQayz/jH3?=
 =?us-ascii?q?dZxD0jdTGloI/5nx95iGKaNnpzt2DWecJzxRfe4tzTW/hR0yECRCl5jznXG1e9?=
 =?us-ascii?q?M8Oo/dWSi5fMrOS+W3i9WZ1UdCnh1ZmAuzej5W12HR2/mOi+m939Hgg9yyP71d?=
 =?us-ascii?q?hqVSPToRb4Y4nr0bm6MO19cklpAl/899R1GoVknoQsg5EQ3GAQho+J8nofjWfz?=
 =?us-ascii?q?LdJb1Lr9bHUXRD4H2d7V4BX/101lIXKE3Ib5VnSbwst8aNi2eGIW2iQh789UDK?=
 =?us-ascii?q?eY9qBLnSxwolCgtwLefeB9nisByfsp8HMahuAJuAk3wSmHDLEdA1JYPTDymBSS?=
 =?us-ascii?q?9N+xsr9XZGm0fLi01Up+m82hDb6YrgFdXnb5ZoktHStq4spjN1LM1WX56pv4d9?=
 =?us-ascii?q?nIcdITqhqUng/cj+hSLZI9jPsLijBhOWLgpn0l0O87gAdq3ZG7uoiHNmps8Li4?=
 =?us-ascii?q?Ah5eKj36eccT9ivxgqZZm8acx5qvEYl5GjUXQJvoSuqlHykIuvTgMwaODScwqn?=
 =?us-ascii?q?OGGbfEGQ+f6UFmr2/AEpyxNnGXImUZwstmRBWHOENfhwUUVi0gnpElDgCq2NDh?=
 =?us-ascii?q?cEBh6zAT/FH4rwVDyvlyOxnjSGvfpxqoajQpSJiZNhVW9RpP50PUMcyY8+JyED?=
 =?us-ascii?q?tU/pynrAyRNGObYx5EAn0OWkyBH1rjJKWh5cHc8+iEAeqzN/vPYbKTqexHSveH?=
 =?us-ascii?q?35Sv3pF9/zaLMMWPMWJvD/k62kpFQHB4FN7VmzQJSywLiS3Na9SXqwu7+i1yts?=
 =?us-ascii?q?q/6ujkWBrz5YuTDLtfKdVv9A63gaeANO6QhTx1KTVC1pMLyn/H1qIf3EMJiyx1?=
 =?us-ascii?q?czmtELIAtTPCTa7Km69XCQIbZD13NMdS86082QxNM9bBitzpzr54kuI1C1BdWF?=
 =?us-ascii?q?P7h8GmftYKLH+9NV/dAEaLNa+LJTnKw8HxfKO9RqdcjORStx2spzmbF1XvMSiE?=
 =?us-ascii?q?lznsTxqvK/1DjDmHPBxCv4GwagptCWnmTN78dhK3KsN4jT0ozr0ynX7KMW8cMT?=
 =?us-ascii?q?5hc0JCtLGQ7CVYgulhFGxF9HZqMe6EmyOB5enCNpkWqedrAjhzl+9C4HU10b1V?=
 =?us-ascii?q?7CRFRPxzgCTTr95urEugkumA0TdnVBtOqjBWhIOEp0liOKPZ9oVeVnbA5h4C8W?=
 =?us-ascii?q?KQCxFZ7+diX/jusKBZx9yHuab3JS1H+tScqc4ECuDZLMaKKn8oN1zoFHjdEV1B?=
 =?us-ascii?q?BRSmM2PWgk1b2NGf7GeYqIMxqp3tlIZGHrVWUlwdFf4ADElhWtcYKYx3XzUr17?=
 =?us-ascii?q?mBg5hMrUK3sR2ZYcxRvZ3dTPuJSaH3ISudkKJsfBINy7q+Kp4cYN7VwUtnP3J6?=
 =?us-ascii?q?hoXRB03IXd0FhiB7aR589E5N6nllUmor20+jbg635247Hruv2BAs3FgtKd8x/S?=
 =?us-ascii?q?vhtg9kbmHBozE9xQxowY3o?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAAAf7Blch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeDfYgZX4sdgWAIJRSSS4R9FIFfLRMBhyYiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKS+CNiQBgmIBAgMBAiAPAQVBBgkBAQgCDgoCAiYCAgNUBgEMBgIBA?=
 =?us-ascii?q?QEWgweCAgQBilibXYEvijGBC4s0gVc/gREnDIJfhEmDQIJXAolEl2sHAoEQgRU?=
 =?us-ascii?q?EjzIekVYsiRuRWyCCDk0ngziCJxeOHT8BATGBBQEBjWABAQ?=
X-IPAS-Result: =?us-ascii?q?A0AiAAAf7Blch0O0hNFkHQEBBQEHBQGBUQgBCwGDayeDfYg?=
 =?us-ascii?q?ZX4sdgWAIJRSSS4R9FIFfLRMBhyYiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CN?=
 =?us-ascii?q?iQBgmIBAgMBAiAPAQVBBgkBAQgCDgoCAiYCAgNUBgEMBgIBAQEWgweCAgQBili?=
 =?us-ascii?q?bXYEvijGBC4s0gVc/gREnDIJfhEmDQIJXAolEl2sHAoEQgRUEjzIekVYsiRuRW?=
 =?us-ascii?q?yCCDk0ngziCJxeOHT8BATGBBQEBjWABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,371,1539673200"; 
   d="scan'208";a="55756413"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 23:03:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728090AbeLSHDg (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 02:03:36 -0500
Received: from pegase1.c-s.fr ([93.17.236.30]:3629 "EHLO pegase1.c-s.fr"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725294AbeLSHDf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 02:03:35 -0500
Received: from localhost (mailhub1-int [192.168.12.234])
        by localhost (Postfix) with ESMTP id 43KQpX6x2nz9v2Rx;
        Wed, 19 Dec 2018 08:03:32 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
        by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
        with ESMTP id ZLGtgowk6JAG; Wed, 19 Dec 2018 08:03:32 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
        by pegase1.c-s.fr (Postfix) with ESMTP id 43KQpX6M43z9v2Rw;
        Wed, 19 Dec 2018 08:03:32 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id BF4F88B85D;
        Wed, 19 Dec 2018 08:03:33 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
        by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
        with ESMTP id gxj39CXns4St; Wed, 19 Dec 2018 08:03:33 +0100 (CET)
Received: from po14163vm.idsi0.si.c-s.fr (po15451.idsi0.si.c-s.fr [172.25.231.2])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id 8B2D78B754;
        Wed, 19 Dec 2018 08:03:33 +0100 (CET)
Subject: Re: [PATCH v3] powerpc: implement CONFIG_DEBUG_VIRTUAL
From: Christophe Leroy <christophe.leroy@c-s.fr>
To: Michael Ellerman <mpe@ellerman.id.au>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>
Cc: linuxppc-dev@lists.ozlabs.org, linux-kernel@vger.kernel.org
References: <a42260e77d609a10667872c2e7bf14ceabcce050.1544562518.git.christophe.leroy@c-s.fr>
 <87y38nrkto.fsf@concordia.ellerman.id.au>
 <87a7l2s6p3.fsf@concordia.ellerman.id.au>
 <f725ff38-4dd8-0657-6023-4b0b5b0d5f4e@c-s.fr>
Message-ID: <5e18c60e-9572-5844-b17d-aa55e7ff4709@c-s.fr>
Date: Wed, 19 Dec 2018 07:03:32 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.7.0
MIME-Version: 1.0
In-Reply-To: <f725ff38-4dd8-0657-6023-4b0b5b0d5f4e@c-s.fr>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



On 12/19/2018 06:57 AM, Christophe Leroy wrote:
> 
> 
> Le 19/12/2018 à 01:26, Michael Ellerman a écrit :
>> Michael Ellerman <mpe@ellerman.id.au> writes:
>>> Christophe Leroy <christophe.leroy@c-s.fr> writes:
>>>
>>>> This patch implements CONFIG_DEBUG_VIRTUAL to warn about
>>>> incorrect use of virt_to_phys() and page_to_phys()
>>>
>>> This commit is breaking my p5020ds booting a 32-bit kernel with:
>>>
>>>    smp: Bringing up secondary CPUs ...
>>>    __ioremap(): phys addr 0x7fef5000 is RAM lr ioremap_coherent
>>>    Unable to handle kernel paging request for data at address 0x00000000
>>>    Faulting instruction address: 0xc002e950
>>>    Oops: Kernel access of bad area, sig: 11 [#1]
>>>    BE SMP NR_CPUS=24 CoreNet Generic
>>>    Modules linked in:
>>>    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 
>>> 4.20.0-rc2-gcc-7.0.1-00138-g9a0380d299e9 #148
>>>    NIP:  c002e950 LR: c002eb20 CTR: 00000001
>>>    REGS: e804bd20 TRAP: 0300   Not tainted  
>>> (4.20.0-rc2-gcc-7.0.1-00138-g9a0380d299e9)
>>>    MSR:  00021002 <CE,ME>  CR: 28004222  XER: 00000000
>>>    DEAR: 00000000 ESR: 00000000
>>>    GPR00: c002eb20 e804bdd0 e8050000 00000000 00021002 00000000 
>>> 00000050 00021002
>>>    GPR08: 2d3f0000 00000001 00000000 00000004 24000842 00000000 
>>> c00026d0 00000000
>>>    GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 
>>> 00000000 00000001
>>>    GPR24: 00029002 7fef5140 30000000 00000000 00000000 00000040 
>>> 00000001 00000000
>>>    NIP [c002e950] smp_85xx_kick_cpu+0x120/0x410
>>>    LR [c002eb20] smp_85xx_kick_cpu+0x2f0/0x410
>>>    Call Trace:
>>>    [e804bdd0] [c002eb20] smp_85xx_kick_cpu+0x2f0/0x410 (unreliable)
>>>    [e804be20] [c0012e38] __cpu_up+0xc8/0x230
>>>    [e804be50] [c0040b34] bringup_cpu+0x34/0x110
>>>    [e804be70] [c00418a8] cpu_up+0x128/0x250
>>>    [e804beb0] [c0b84b14] smp_init+0xc4/0x10c
>>>    [e804bee0] [c0b75c1c] kernel_init_freeable+0xc8/0x250
>>>    [e804bf20] [c00026e8] kernel_init+0x18/0x120
>>>    [e804bf40] [c0011298] ret_from_kernel_thread+0x14/0x1c
>>>    Instruction dump:
>>>    7fb3e850 57bdd1be 2e1d0000 41d20250 57bd3032 393dffc0 7e6a9b78 
>>> 5529d1be
>>>    39290001 7d2903a6 60000000 60000000 <7c0050ac> 394a0040 4200fff8 
>>> 7c0004ac
>>>    ---[ end trace edcab2a1dfd5b38c ]---
>>>
>>>
>>> Which is obviously this hunk:
>>>
>>>> diff --git a/arch/powerpc/mm/pgtable_32.c 
>>>> b/arch/powerpc/mm/pgtable_32.c
>>>> index 4fc77a99c9bf..68d204a45cd0 100644
>>>> --- a/arch/powerpc/mm/pgtable_32.c
>>>> +++ b/arch/powerpc/mm/pgtable_32.c
>>>> @@ -143,7 +143,7 @@ __ioremap_caller(phys_addr_t addr, unsigned long 
>>>> size, pgprot_t prot, void *call
>>>>        * Don't allow anybody to remap normal RAM that we're using.
>>>>        * mem_init() sets high_memory so only do the check after that.
>>>>        */
>>>> -    if (slab_is_available() && (p < virt_to_phys(high_memory)) &&
>>>> +    if (slab_is_available() && virt_addr_valid(p) &&
>>>>           page_is_ram(__phys_to_pfn(p))) {
>>>>           printk("__ioremap(): phys addr 0x%llx is RAM lr %ps\n",
>>>>                  (unsigned long long)p, __builtin_return_address(0));
>>>
>>>
>>> I'll try and come up with a fix tomorrow.
>>
>> Actually I think that change is just wrong. virt_addr_valid() takes a
>> virtual address, but p is a physical address.
>>
>> So I'll drop this hunk for now, which makes the patch a no-op when
>> DEBUG_VIRTUAL is n which is probably the way it should be.
> 
> The hunk is obviously wrong for sure. Anyway there's a problem, most 
> likely high_memory is not a valid virtual address, so without this hunk 
> I get the following warning at every ioremap():
> 
> [    0.000000] WARNING: CPU: 0 PID: 0 at 
> ./arch/powerpc/include/asm/io.h:809 __ioremap_caller+0x9c/0x180
> [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 
> 4.20.0-rc6-s3k-dev-00677-g9c98dcab6203-dirty #615
> [    0.000000] NIP:  c000fcd0 LR: c000fc64 CTR: 00000000
> [    0.000000] REGS: c073de50 TRAP: 0700   Not tainted 
> (4.20.0-rc6-s3k-dev-00677-g9c98dcab6203-dirty)
> [    0.000000] MSR:  00021032 <ME,IR,DR,RI>  CR: 28944422  XER: 0000f940
> [    0.000000]
> [    0.000000] GPR00: c000fe04 c073df00 c06e1450 00000001 00004023 
> c073df38 c0018f50 00000001
> [    0.000000] GPR08: 00002000 08000000 00002000 00000000 88944224 
> 00600000 00000000 07ff9580
> [    0.000000] GPR16: 00000000 07ffb94c 00000000 00000000 00000000 
> 00000000 00000000 00000000
> [    0.000000] GPR24: 00000000 c0760000 0000019f ff000000 ff000000 
> c000fe04 00004000 c0018f50
> [    0.000000] NIP [c000fcd0] __ioremap_caller+0x9c/0x180
> [    0.000000] LR [c000fc64] __ioremap_caller+0x30/0x180
> [    0.000000] Call Trace:
> [    0.000000] [c073df00] [c02fc23c] of_address_to_resource+0x114/0x154 
> (unreliable)
> [    0.000000] [c073df30] [c000fe04] ioremap_wt+0x20/0x30
> [    0.000000] [c073df40] [c0018f50] mpc8xx_pic_init+0x70/0xf8
> [    0.000000] [c073df80] [c0655b84] mpc8xx_pics_init+0x10/0x6c
> [    0.000000] [c073df90] [c0675080] cmpc885_pics_init+0x14/0x118
> [    0.000000] [c073dfa0] [c0652eb0] init_IRQ+0x24/0x38
> [    0.000000] [c073dfb0] [c0650b10] start_kernel+0x2a8/0x3d4
> [    0.000000] [c073dff0] [c0002258] start_here+0x44/0x98
> [    0.000000] Instruction dump:
> [    0.000000] 419e00b8 7f83e378 480013fd 7c7d1b79 41820030 576304be 
> 7c63ea14 80010034
> [    0.000000] bb410018 7c0803a6 38210030 4e800020 <0fe00000> 7f9c4840 
> 409cffc4 480000a8
> [    0.000000] random: get_random_bytes called from 
> print_oops_end_marker+0x60/0x84 with crng_init=0
> [    0.000000] ---[ end trace 25d7f28ce013ad37 ]---
> 
> I'll try and come with solution during the day.

In fact the solution is the following:

diff --git a/arch/powerpc/mm/pgtable_32.c b/arch/powerpc/mm/pgtable_32.c
index 4fc77a99c9bf..60401af2bc8f 100644
--- a/arch/powerpc/mm/pgtable_32.c
+++ b/arch/powerpc/mm/pgtable_32.c
@@ -143,7 +143,7 @@ __ioremap_caller(phys_addr_t addr, unsigned long 
size, pgprot_t prot, void *call
  	 * Don't allow anybody to remap normal RAM that we're using.
  	 * mem_init() sets high_memory so only do the check after that.
  	 */
-	if (slab_is_available() && (p < virt_to_phys(high_memory)) &&
+	if (slab_is_available() && (p <= virt_to_phys(high_memory - 1)) &&
  	    page_is_ram(__phys_to_pfn(p))) {
  		printk("__ioremap(): phys addr 0x%llx is RAM lr %ps\n",
  		       (unsigned long long)p, __builtin_return_address(0));


I'll send an updated patch in a few minutes.

Christophe
