Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 28 Nov 2018 21:42:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2F47A5803ED;
	Wed, 28 Nov 2018 04:12:43 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2018 04:12:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AesErmBdh5kUUyAXnjtsuWXlVlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc68ZRON2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRCDIy+?=
 =?us-ascii?q?YYsBD/cPM/hWoYnmv1sDrwCzCRWwCO711jNEmmP60bE83u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?nKrNX1LqYSUfupzKnP1TXDb+1Z0ir75ofWaBAhpvGNVq93fMXNyUkvDQLFjk6M?=
 =?us-ascii?q?qYziJzOV1voCv3Kf7+V+T+KvjG4mphptrTS23ccgkIfJhpgMx13C6C53zoE1Jd?=
 =?us-ascii?q?iiR056Z96pCJRdui6VNodsWcMtWHlktSgkxrEcop60ZzAGx48gxx7YaPyIbZKE?=
 =?us-ascii?q?4gn4W+uXPDx2h2pldaqhixqu9UWs0PDwW8eq3FpQsyZIkcXAumoM2hHR8sSKTv?=
 =?us-ascii?q?Vw8l281TuNzQzf9O9JLEEumafVN5IsxKM7mIAJvkTZBCD2nV37jK+IeUUg/eil?=
 =?us-ascii?q?8/rnYrr4qZ+GLYN0iR/xMr4omsOhBeQ0KA8OX3KU+eik1b3j+1P2QKlSg/Eojq?=
 =?us-ascii?q?XUtIrWKdkVq6KnGQNZz4Uu5wqlAzqn0tkUhXwHI0hEeBKDgYjpIVbOIPXgAPe7?=
 =?us-ascii?q?glSsliprxv/fMr3iHJrNNH7Dn6nlfbpk7E5dxgwzws5F559PFLEBL+z8WlXruN?=
 =?us-ascii?q?zbEBA5KQq0zPjjCNln0YMeQ22PDreDMKzOqV+I+v4vI+6UaY8RuTb9KOYq6+Th?=
 =?us-ascii?q?jH8kglIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOnygl2YTTFTf2qyX7?=
 =?us-ascii?q?475jwjCIKpF4bDRpy3j7yGxiu7HoBWaXpAClCDCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLlxEy8iJ7A96e02GKSWF0mG?=
 =?us-ascii?q?QISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rDisqTtIxxN8OYFxxG8+4gRDBxCeqB74Vl7qWBJ076K7c3n7xJ9pjxHbCzq?=
 =?us-ascii?q?Uuk14mQs5XP228mqF/7xTTB5LOk0iBlKalb6Ic0DTJ9GeC12WOuk5YXRV0UaXE?=
 =?us-ascii?q?W3Afe0TXoc745kPEU7+hF7AnPhFdxs6FL6tAcsfpgkleRPf/JNTeZHq8lHqqCh?=
 =?us-ascii?q?aW2LyAdorqdH8b3CXGFkcElQcf/XKFNQg7AiesuGbeDD1oFVLybELg6+h+qHWn?=
 =?us-ascii?q?TkAqywGGdVFu172w+hQNn/yTV+sT3q4YuCcmszh7AUyy38zIBNaapwpuZqNcYc?=
 =?us-ascii?q?gj71dBzm/Zsw19Ppq9L6FtnFIecgJ3v1/w2BVzEIlPjc8qrHYyxgpoNa2YyE9B?=
 =?us-ascii?q?dy+f3Z3oJr3XK2zy/Beza67W2lDSysqW9r0I6PQir1XjvQepFkU5/nVj0tlV1W?=
 =?us-ascii?q?ac55rQAAoTV5LxTlg49xxgq77GZSk94pve1WdwPqmsrj/Cx9UpCfM/xRakYdhe?=
 =?us-ascii?q?P72LFQ/oH8IBGsihNfYlm16qbhIDIuBf76o0P8Kgd/ub16+nJudgnDS6jWtZ5I?=
 =?us-ascii?q?BxyF6D9y15SuTQxZYK3+mY3hebVzf7lFqgst33lZpYaj0IH2u/yTLrBIheZqBp?=
 =?us-ascii?q?eYYLCGGuI9C4x9lkhp7tXWJY+0CnB18cxMCpfh+SZUTn3QJMzUQXvWCnmSygwj?=
 =?us-ascii?q?xukjEmsrCQ3DbTzOTlbhYHPHBERHNjjVv1PYe7ldQaU1W2YAgzkxul4133x6xa?=
 =?us-ascii?q?pKR5MmnSTl1EfynwL2F+TKSwsqCObNJI6JMtqS9XSvizYUiGSr7hpBsXyyPiH2?=
 =?us-ascii?q?pEyDE7bT2qoYj5nxphhWKZLXZzqmfZeM5qyRfe4tzcWeBe3j4cSCZkjjnXA0C2?=
 =?us-ascii?q?P8O18tWMi5fDrue+WnqjVpJJaynrzoCAtCyh6W1xGxK/nPOzmtzhEQck1y/2zN?=
 =?us-ascii?q?1qVSTOrBbhbYjnzaW6MeR7fkZ2AF/w8dZ1GoZ7koEonpEfxWAahomJ/XoAiWry?=
 =?us-ascii?q?Mc9U2aXkYHoPRD4LxcXY4Azk2E1lM3KIyJj1VnSbwst9eda6Znka1T4678BPEK?=
 =?us-ascii?q?2U9qBLnTNpolqkqgLceft9kS0cyfc06H4anvsGuAwiziiGBrASHE9YPTHjlhiS?=
 =?us-ascii?q?7tC+qrlXa3ircbSqyEV+mtWhBqmYog5AQHb5ZosiHSho48V6MVLM02f85pvqed?=
 =?us-ascii?q?bOdtITqgObkw3bgOdLMpIxmeEHhS5mOWL7oH0kxPQ3jR1o3ZGmooeHL39h876+?=
 =?us-ascii?q?Ah5dLjf1fd8c+inxjaZCmcabx5yvHpJkGjkRXZrnV/SoEC8JtfT8NgaDCzk8qn?=
 =?us-ascii?q?adGbrCEg6T8kZmr3TTE5+1M3GbPmUWzdJnRBOFPkxQnBgUXCkmnp4+Dg2l39bu?=
 =?us-ascii?q?cEB95jAM/FL4rgZMx/lsNxn+VGffuQipZi01SJiZMBpZ8AVC613JPsyZ6+J5Bz?=
 =?us-ascii?q?tY8YG5rAyRNmybYBxFDWMTVUyBGV/jJaOi5cXa/+ibG+q+LObOYbOUpuxFTPqI?=
 =?us-ascii?q?wZOv0o17/zeDLMmPP39iD+El1UpHR3x2B8PZmzAXQSwNiy3Nd9KbpAu7+iBvrs?=
 =?us-ascii?q?G/9+nrWBvy5YSVDbteK85v+xewgaeMLOOQgCd5KTBF1pID33PIyb4f3EIMhCFq?=
 =?us-ascii?q?bTWiDbMAtSvVRqLKhqBXFwIbaz90NMZQ76IzwAhNOc3YitP0zLJ4jeQ1C1BKVV?=
 =?us-ascii?q?P/gMGpeNcKLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBgzuGPBNFooGybBZsBXLnTNLncRC7NN53jTsrwbw7nH/KNGgcMS?=
 =?us-ascii?q?RifENJtLGf8SRYgvBnEWxb8nVlNfWEmzqe7+TANpYWsP5rDj5omO5A/Hs6y6Va?=
 =?us-ascii?q?7CdfSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPL3T9oNcVnbc4BIN8W?=
 =?us-ascii?q?KQBgwKptR/DN3vvqFQyt7Xm6PyKDdN6dTU/cQHCsjQKcKHNmchMBXzFD7VCgsF?=
 =?us-ascii?q?USCkNWXFi0NBl/GS8y7dkp9vgJXqmpMLS7kTdFEvDP4cEU9lGd0OPN8jVD4ikZ?=
 =?us-ascii?q?aYgdQO6H74pwPYX8VbuJ+BUeidV7GnED+EifFhbhALzKniJJ9bYpXyxkh/cXFh?=
 =?us-ascii?q?lYHAEgzXR98b5mVEbwQ0qUhJuFV6SmAp3kvjIleo+HI7GPqwkwQzgw04YOhr/S?=
 =?us-ascii?q?q6sHktIV+fjysqkVItns3ljHi1fST2Pe/kVoFMCjHosFAxP9X/ThxyfCW52Fci?=
 =?us-ascii?q?Oi2SFOEZtKdpaW0+0FyUgpBIA/MJCPQcOBI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A1AAAEhf5bh0O0hNFkHgEGBwaBUwcLA?=
 =?us-ascii?q?YNrJ4xwiyuBaDmIfI4ygXMsEwGHaiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?2JAGCYgMDAQIkUgYJAQEYOAMeCysGARIFgxyBagMVBAGnGTOFQYJaDYIcjBWBV?=
 =?us-ascii?q?z+BRIU2iAUCn20uBwKBC4ERBItlg0SRFSyISoVpiw8nCIF+TSeDOIInF44dPwE?=
 =?us-ascii?q?BMYEFAQGMeQEB?=
X-IPAS-Result: =?us-ascii?q?A0A1AAAEhf5bh0O0hNFkHgEGBwaBUwcLAYNrJ4xwiyuBaDm?=
 =?us-ascii?q?IfI4ygXMsEwGHaiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYgMDAQIkU?=
 =?us-ascii?q?gYJAQEYOAMeCysGARIFgxyBagMVBAGnGTOFQYJaDYIcjBWBVz+BRIU2iAUCn20?=
 =?us-ascii?q?uBwKBC4ERBItlg0SRFSyISoVpiw8nCIF+TSeDOIInF44dPwEBMYEFAQGMeQEB?=
X-IronPort-AV: E=Sophos;i="5.56,290,1539673200"; 
   d="scan'208";a="54044868"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 28 Nov 2018 04:12:41 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728405AbeK1XOF (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 28 Nov 2018 18:14:05 -0500
Received: from pegase1.c-s.fr ([93.17.236.30]:36021 "EHLO pegase1.c-s.fr"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727724AbeK1XOE (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 28 Nov 2018 18:14:04 -0500
Received: from localhost (mailhub1-int [192.168.12.234])
        by localhost (Postfix) with ESMTP id 434ffp4cZLz9vGFj;
        Wed, 28 Nov 2018 13:12:34 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
        by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
        with ESMTP id jSE8G2nG4E8F; Wed, 28 Nov 2018 13:12:34 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
        by pegase1.c-s.fr (Postfix) with ESMTP id 434ffp44hlz9vGDx;
        Wed, 28 Nov 2018 13:12:34 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id 90ED58B869;
        Wed, 28 Nov 2018 13:12:35 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
        by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
        with ESMTP id frOho7NmI63L; Wed, 28 Nov 2018 13:12:35 +0100 (CET)
Received: from po14163vm.idsi0.si.c-s.fr (po15451.idsi0.si.c-s.fr [172.25.231.2])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id 4A91F8B853;
        Wed, 28 Nov 2018 13:12:35 +0100 (CET)
Received: by po14163vm.idsi0.si.c-s.fr (Postfix, from userid 0)
        id 31FDB69B13; Wed, 28 Nov 2018 12:12:35 +0000 (UTC)
Message-Id: <c4c85029b360419e087d5daced7aea0fe7cd3d38.1543407004.git.christophe.leroy@c-s.fr>
In-Reply-To: <cover.1543407004.git.christophe.leroy@c-s.fr>
References: <cover.1543407004.git.christophe.leroy@c-s.fr>
From: Christophe Leroy <christophe.leroy@c-s.fr>
Subject: [PATCH v10 6/9] powerpc: 'current_set' is now a table of task_struct
 pointers
To: Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>
Cc: linux-kernel@vger.kernel.org, linuxppc-dev@lists.ozlabs.org
Date: Wed, 28 Nov 2018 12:12:35 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The table of pointers 'current_set' has been used for retrieving
the stack and current. They used to be thread_info pointers as
they were pointing to the stack and current was taken from the
'task' field of the thread_info.

Now, the pointers of 'current_set' table are now both pointers
to task_struct and pointers to thread_info.

As they are used to get current, and the stack pointer is
retrieved from current's stack field, this patch changes
their type to task_struct, and renames secondary_ti to
secondary_current.

Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
---
 arch/powerpc/include/asm/asm-prototypes.h |  4 ++--
 arch/powerpc/kernel/head_32.S             |  6 +++---
 arch/powerpc/kernel/head_44x.S            |  4 ++--
 arch/powerpc/kernel/head_fsl_booke.S      |  4 ++--
 arch/powerpc/kernel/smp.c                 | 10 ++++------
 5 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/arch/powerpc/include/asm/asm-prototypes.h b/arch/powerpc/include/asm/asm-prototypes.h
index ec691d489656..b1b999b22a12 100644
--- a/arch/powerpc/include/asm/asm-prototypes.h
+++ b/arch/powerpc/include/asm/asm-prototypes.h
@@ -23,8 +23,8 @@
 #include <uapi/asm/ucontext.h>
 
 /* SMP */
-extern struct thread_info *current_set[NR_CPUS];
-extern struct thread_info *secondary_ti;
+extern struct task_struct *current_set[NR_CPUS];
+extern struct task_struct *secondary_current;
 void start_secondary(void *unused);
 
 /* kexec */
diff --git a/arch/powerpc/kernel/head_32.S b/arch/powerpc/kernel/head_32.S
index 44dfd73b2a62..ba0341bd5a00 100644
--- a/arch/powerpc/kernel/head_32.S
+++ b/arch/powerpc/kernel/head_32.S
@@ -842,9 +842,9 @@ __secondary_start:
 #endif /* CONFIG_6xx */
 
 	/* get current's stack and current */
-	lis	r1,secondary_ti@ha
-	tophys(r1,r1)
-	lwz	r2,secondary_ti@l(r1)
+	lis	r2,secondary_current@ha
+	tophys(r2,r2)
+	lwz	r2,secondary_current@l(r2)
 	tophys(r1,r2)
 	lwz	r1,TASK_STACK(r1)
 
diff --git a/arch/powerpc/kernel/head_44x.S b/arch/powerpc/kernel/head_44x.S
index 2c7e90f36358..48e4de4dfd0c 100644
--- a/arch/powerpc/kernel/head_44x.S
+++ b/arch/powerpc/kernel/head_44x.S
@@ -1021,8 +1021,8 @@ _GLOBAL(start_secondary_47x)
 	/* Now we can get our task struct and real stack pointer */
 
 	/* Get current's stack and current */
-	lis	r1,secondary_ti@ha
-	lwz	r2,secondary_ti@l(r1)
+	lis	r2,secondary_current@ha
+	lwz	r2,secondary_current@l(r2)
 	lwz	r1,TASK_STACK(r2)
 
 	/* Current stack pointer */
diff --git a/arch/powerpc/kernel/head_fsl_booke.S b/arch/powerpc/kernel/head_fsl_booke.S
index b8a2b789677e..0d27bfff52dd 100644
--- a/arch/powerpc/kernel/head_fsl_booke.S
+++ b/arch/powerpc/kernel/head_fsl_booke.S
@@ -1076,8 +1076,8 @@ __secondary_start:
 	bl	call_setup_cpu
 
 	/* get current's stack and current */
-	lis	r1,secondary_ti@ha
-	lwz	r2,secondary_ti@l(r1)
+	lis	r2,secondary_current@ha
+	lwz	r2,secondary_current@l(r2)
 	lwz	r1,TASK_STACK(r2)
 
 	/* stack */
diff --git a/arch/powerpc/kernel/smp.c b/arch/powerpc/kernel/smp.c
index aa4517686f90..a41fa8924004 100644
--- a/arch/powerpc/kernel/smp.c
+++ b/arch/powerpc/kernel/smp.c
@@ -76,7 +76,7 @@
 static DEFINE_PER_CPU(int, cpu_state) = { 0 };
 #endif
 
-struct thread_info *secondary_ti;
+struct task_struct *secondary_current;
 bool has_big_cores;
 
 DEFINE_PER_CPU(cpumask_var_t, cpu_sibling_map);
@@ -664,7 +664,7 @@ void smp_send_stop(void)
 }
 #endif /* CONFIG_NMI_IPI */
 
-struct thread_info *current_set[NR_CPUS];
+struct task_struct *current_set[NR_CPUS];
 
 static void smp_store_cpu_info(int id)
 {
@@ -929,7 +929,7 @@ void smp_prepare_boot_cpu(void)
 	paca_ptrs[boot_cpuid]->__current = current;
 #endif
 	set_numa_node(numa_cpu_lookup_table[boot_cpuid]);
-	current_set[boot_cpuid] = task_thread_info(current);
+	current_set[boot_cpuid] = current;
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
@@ -1014,15 +1014,13 @@ static bool secondaries_inhibited(void)
 
 static void cpu_idle_thread_init(unsigned int cpu, struct task_struct *idle)
 {
-	struct thread_info *ti = task_thread_info(idle);
-
 #ifdef CONFIG_PPC64
 	paca_ptrs[cpu]->__current = idle;
 	paca_ptrs[cpu]->kstack = (unsigned long)task_stack_page(idle) +
 				 THREAD_SIZE - STACK_FRAME_OVERHEAD;
 #endif
 	idle->cpu = cpu;
-	secondary_ti = current_set[cpu] = ti;
+	secondary_current = current_set[cpu] = idle;
 }
 
 int __cpu_up(unsigned int cpu, struct task_struct *tidle)
-- 
2.13.3

