Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 22 Nov 2018 15:02:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2040E580474;
	Wed, 21 Nov 2018 22:54:19 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga004-1.jf.intel.com with ESMTP; 21 Nov 2018 22:54:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ao5JFBBeuw+/WZ2Jq3yYTbyUzlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+bByN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxBRK0BO7t0TJImmP60Lcm3+g9CwzKwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+OzzKnHyjXIcvRY2TD56IjOaB8hu+yHULV1ccrQz0kvGATFg06T?=
 =?us-ascii?q?qYP7JTOV0PoCs2yB4+pnT+KvhHcqpgdsqTahwccsj5PGhoMTyl3c9iV23pw1Jd?=
 =?us-ascii?q?umR05/e9KkF4FQty6cOoBrQc0iW3lltDgmxrACo5K3YSYHxIo9yxLCaPGLb5KE?=
 =?us-ascii?q?7xPhWeqJLjp1hWhpdK+xihu260Ss1/PwWtOq3FpXoCdIlMTHuGoX2BzJ8MeHT+?=
 =?us-ascii?q?Nw/ke/1jaL0ADe8v9EIU8qmqrBMZIhwaA/loAVsUvdGi/6gkL2jLWZdkk8++io?=
 =?us-ascii?q?7froYqn+q5OCK4N5jhvyPrkgl8ChG+g0LwsDU3SB9em91rDv5Uj5T69Ljv0ynK?=
 =?us-ascii?q?nZqpfaJcEDq669Ag9V1Jsj6hmmAzelztsYh38HI0xBeB6eiIjoNVfOL+7iDfqk?=
 =?us-ascii?q?nVSsnylkx+rcMr3iHJrNNH7Dn6nlfbpn7E5c0gUzwchF551IErEBPO7zWkjpud?=
 =?us-ascii?q?zcDx85MBK7z/zoCdVgzY4eXWOPAqmEMKLdq1OI5+QvI/WSa48RojryN/8l5/v2?=
 =?us-ascii?q?h38jhVAdZbWp3YcQaH2gHvRpOUSZYWb2jdcGC2sKvhc+Q/bsiF2NSjNTY3eyX6?=
 =?us-ascii?q?Qh5jA0Eo6mDIHDRpyzj7yFxiu0AppWZmVeAFCWDXjob5mEW+sLaC+KIM9hlSIL?=
 =?us-ascii?q?WaKiS48m0xGusgj6xqFjLurV/C0YqJ3i2MJ05+3ViRE96zh0A96B3GGKSmF+hn?=
 =?us-ascii?q?kISCMu3KBjvUx9zU+O3rJjg/xYEtxT5OlFUh0gOp7e1OF6D9HyWgTcftaGUlqm?=
 =?us-ascii?q?Q9OmAS0vQdI12dMBf0F9G9C6hBDZwyWqG6MVl6CMBJEs8aLTxX7xK9x5y3bHzq?=
 =?us-ascii?q?YhiVYmT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbosnj6UPcUbCiE7QnPRFHyc6ZNKRKbNrljVFFRPfmPNTTeGaxm2a2BR?=
 =?us-ascii?q?aVybKAdovqe2MB3CrDDEgIiRwc/XGDNQImHCeuv3reDCByFVLoe07j7PNxqG2l?=
 =?us-ascii?q?QUMuzwGFdUth16Gr9R4TnvGcT/IT3rQZuCYusTl0HVC9387IBNqEvQZuYKJcYd?=
 =?us-ascii?q?Yl6lddyW3ZrxB9PoCnL616ml4ecgF3v0Ty1xV3CoRMi9QqoGktzApoLaKY0VVB?=
 =?us-ascii?q?dzyD0JD0O73XLHTy/R+1Z67X3FHezMiZ+qMV5PskrFXjuRmjFlA+/HV/z9lVz3?=
 =?us-ascii?q?yc643QAwoWT53wXVg49hhgq77Bfyky+pnb1XtvMamzrD/PwNYpBOojyha9cNZT?=
 =?us-ascii?q?KqKEFAnuE8IEA8iiMvAlm1+sbhgcJuBd6LY0P9+6d/uBwKOqPPtgkCi6gmhd4Y?=
 =?us-ascii?q?F90liD9yxzSuPT25YFwveY3haIVjvmjVehtNz3lp5AZT0IAmW/zi3kDpZLZqJu?=
 =?us-ascii?q?ZYYLFXuuI8qvy9Vkhp7iR2RX9ES+CFMBwsOpfwSdb0b83QFJyUsYu3inljamwD?=
 =?us-ascii?q?xulDEpqLGS3CjPw+TkaRoGNXRHRGhkjVfwP4e0i8oWU1SvbwgsjBGl/1r1x7BH?=
 =?us-ascii?q?pKRjKGneWUdJfynsI2BiSKewraeCY8hU5ZMssCVXVvm8YF+ARr78pRsazz3sH2?=
 =?us-ascii?q?9EyD8ncDGqv43znwZmh2KFMHZzsH3ZdNlyxRjF/tzcRv1R3j0cSCljkzbXBVu8?=
 =?us-ascii?q?P9iv/dqKkZfOqeS+V2OnVp1Ofijn14KAtC2n5WJ0BR2zhey8mtriEQIiyy/0y8?=
 =?us-ascii?q?FqVTnUrBb7eoTq1761MeV9cklqBV/87dF3GoV/kos2mZER1mIWhpST/Xobj2jz?=
 =?us-ascii?q?Nc9X1r75bHoIXTQL2cLa4BD52E1/KXKE34H5WW+cwsd7Z9m6f3kZ2iQy781RDK?=
 =?us-ascii?q?eU7bpEnTZ6o1airALRZ+R9kSkZyfc09HEahOQJshI3ziqBGrASAVVYPSv0mhSN?=
 =?us-ascii?q?7tC+r79YaHyhcLeuz0p+gc6uDKuZrQ5CQnb5dYwvHStx7sV5LVLN32f/6oDieN?=
 =?us-ascii?q?nMc90TsgeYnAvHj+hQMJgxjOYFhTJ7OWLhun0o0/I7jRtr3Z2gvYmIMWNt/L+i?=
 =?us-ascii?q?Ah5DNz34fMcT+jDrjaZDkceaxYGvHpN9GjoVWJvkV+6nEDUXtf7/LQaBDCU8qm?=
 =?us-ascii?q?uHGbrYBQKQ811pr3XLE5C2LX2XIGQZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lajUuR5iaMhVW9RtO51vPPcyd8+JzHD?=
 =?us-ascii?q?xY/pu7owyWMWGbYwVIDWcUWk2LHVzjP7+u5cXe/OicHOaxM/zOYbCWo+xES/iI?=
 =?us-ascii?q?3Y6v0pdh/zuUNsSPOWRiD+Qm2kVZW3B1Ad/ZmzIJSywYjC/Na8+bpBGh+ix4tM?=
 =?us-ascii?q?y/8fLrWB7x6ouLEbddLdJv+xWui6eZK+GQnDp5KSpf1p4UxX/H1rkf3F0RiyFv?=
 =?us-ascii?q?bTWtEq4AtSnCTK3OgK9XEgUbZjh3NMtJ6aI8wwZMNdTaitPzyr53kPo1B01ZWl?=
 =?us-ascii?q?zmn8GjfdYKLH2lNFPbGEaLM6yLKifWw87se6OzV71RgP9Qtx2xojubF07jPjKe?=
 =?us-ascii?q?lzjmTRyvMOdMjD2FMxxaoo2ybhFtCW37RtL8dhK7KMN3jSExwbAsmnPKNGscPS?=
 =?us-ascii?q?JgfE9XsrKQ7T1XgvNkFmxF73plK/SEmimD4+nZLJYWreVkAiBum+1G53Q6zqNf?=
 =?us-ascii?q?7DtYS/xthCvSstlurkmmk+aVzDpnVRtOqjBTi4OKvUVtI6PZ9pZbVHbA/RIN63?=
 =?us-ascii?q?iQChsQq9tkDN3vp75fytzVmK3vLzdC9oGcwcxJLtLSIcaLNzIKOAD3ETrUC0MJ?=
 =?us-ascii?q?QHaOOGXYzxhUm/Sf3n6YtJ43rt7rgpVYGZFBU1lgN/UVDQxAG9gEKY0/CjYll7?=
 =?us-ascii?q?GcpM0F/3yzqF/WXsoM7cOPbe6bHfi6cGXRtrJDfRZdhOqgdYk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADbUfZbh0O0hNFiGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVqBD4ECFBOEWoc2X4sigg0UlyaBcxIBARg?=
 =?us-ascii?q?DEAGIRwUiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQICAQECNwYBO?=
 =?us-ascii?q?AEDAQEJAQEFBQsWExIDDAUgAQUBAiATBYMcAYFpAw0IBAGeNDyMPIJ3BYUFDYI?=
 =?us-ascii?q?RAgYSiluBHBeBf4NuNYRog0uCJgKJIzGBPYQIkGkJhnyKKAsYgVmFC4JthzeYC?=
 =?us-ascii?q?QYCCQcPIYElgg0zGggoCGwGgjUJghIMF38BC4I/hRSFPz8ygQQBAQEOA40LAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAADbUfZbh0O0hNFiGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVqBD4ECFBOEWoc2X4sigg0UlyaBcxIBARgDEAGIRwUiNAkNA?=
 =?us-ascii?q?QMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJiAQICAQECNwYBOAEDAQEJAQEFBQs?=
 =?us-ascii?q?WExIDDAUgAQUBAiATBYMcAYFpAw0IBAGeNDyMPIJ3BYUFDYIRAgYSiluBHBeBf?=
 =?us-ascii?q?4NuNYRog0uCJgKJIzGBPYQIkGkJhnyKKAsYgVmFC4JthzeYCQYCCQcPIYElgg0?=
 =?us-ascii?q?zGggoCGwGgjUJghIMF38BC4I/hRSFPz8ygQQBAQEOA40LAQE?=
X-IronPort-AV: E=Sophos;i="5.56,264,1539673200"; 
   d="scan'208";a="41156874"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Nov 2018 22:54:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2392305AbeKVRcQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 12:32:16 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:54241 "EHLO
        mail-wm1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726958AbeKVRcP (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 12:32:15 -0500
Received: by mail-wm1-f68.google.com with SMTP id y1so4517254wmi.3;
        Wed, 21 Nov 2018 22:54:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to:user-agent;
        bh=AUfAsSH41xZOuW/crlRNyG3/Suowa+OzG+GhGlGVAiI=;
        b=JrVtzdOGaoATUX7E4yss+wxUOHNTnypcCRmWTsdb3os4fv9pUDWtmLYndvNADUdrhd
         2r9yVMHPQVjTMnPMjuu3s+11FGvkGAfkqm7bhXPE2gAVp2jqZXFPoI5mknlyR3Bshn3C
         mEHzZk5M5Iego9nzqnSlGBRPac+Tsed3khz4wLWkZIGvAx0N/g3DVARBRLgWx2TgxEyr
         V15ynA70AnB9DoP9gg844w3vZL8YrxCJcObfluozTL6IQez4VmNPkUbrIpeINcc+D9ij
         o2vgF31+NlvzJ/BammRs6iUaHpi0VualfaJ8DMibx1VQMKlXckeHgrmWp19F+71gkJO+
         XB4g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
         :references:mime-version:content-disposition:in-reply-to:user-agent;
        bh=AUfAsSH41xZOuW/crlRNyG3/Suowa+OzG+GhGlGVAiI=;
        b=OHU3akw1gkQKK0JJbl1EIuDW6P5cuqJSkHwVblv5kvzYaAEealkYPLefdgeegUkDJV
         eSwtpaFNr7/RyfJuoJJ2vXrbdRN1RAZu59mSz6v5DKTd2VBF8ZUVx1ypN4X1haXAXZiP
         qV9LKmQbybYO6V3Ad0eEPB7maLH9emmtoZqefRPRozCZ7uXloUKT0ONhg7bXoNzNguRb
         zH2XnaTmwRMpbz51IBdWHwLbKoofguc8Uu60lDA7jcPrpXzkUfDqe9Zk/spmJ/VdE5vJ
         X4KE8U7OflfsaMXQ6/RrMBvoCZu9X5UFAW8245+Rv7bXHEWmWQBvavuKrgiIpEYz8Sjb
         nbZg==
X-Gm-Message-State: AGRZ1gLrITAB2AGXV7Xl3YZBcxDlnlQbxbTTbwBWjBeDUHq6kAEtZRLh
        9bwnBi0oWweqJ8/WChN7dac=
X-Google-Smtp-Source: AJdET5fqAAQvodTMOZfsu0h/p48agmKJgwipcodg23hl4UVlUIoPAO5O97nbGP1Cnfb0cv6GbEqGEw==
X-Received: by 2002:a1c:28c6:: with SMTP id o189-v6mr8086136wmo.89.1542869650388;
        Wed, 21 Nov 2018 22:54:10 -0800 (PST)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
        by smtp.gmail.com with ESMTPSA id s66sm3390813wmf.34.2018.11.21.22.54.08
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Wed, 21 Nov 2018 22:54:09 -0800 (PST)
Date: Thu, 22 Nov 2018 07:54:06 +0100
From: Ingo Molnar <mingo@kernel.org>
To: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Clark Williams <williams@redhat.com>, linux-kernel@vger.kernel.org,
        linux-perf-users@vger.kernel.org,
        Adrian Hunter <adrian.hunter@intel.com>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Alexei Starovoitov <ast@kernel.org>,
        Andi Kleen <ak@linux.intel.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Anton Blanchard <anton@samba.org>,
        Ben Gainey <ben.gainey@arm.com>,
        Ben Hutchings <ben@decadent.org.uk>,
        Borislav Petkov <bp@suse.de>,
        Daniel Borkmann <daniel@iogearbox.net>,
        Dave Kleikamp <dave.kleikamp@oracle.com>,
        David Ahern <dsahern@gmail.com>,
        David Aldridge <david.aldridge@oracle.com>,
        Davidlohr Bueso <dbueso@suse.de>,
        Edward Cree <ecree@solarflare.com>,
        Eric Saint-Etienne <eric.saint.etienne@oracle.com>,
        Gustavo Luiz Duarte <gduarte@redhat.com>,
        Jason Baron <jbaron@akamai.com>,
        Jin Yao <yao.jin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Kan Liang <kan.liang@linux.intel.com>,
        Martin KaFai Lau <kafai@fb.com>,
        Milian Wolff <milian.wolff@kdab.com>,
        Namhyung Kim <namhyung@kernel.org>,
        Peter Zijlstra <peterz@infradead.org>, Pu Wen <puwen@hygon.cn>,
        Ravi Bangoria <ravi.bangoria@linux.ibm.com>,
        Rob Gardner <rob.gardner@oracle.com>,
        Stephane Eranian <eranian@google.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Thomas Richter <tmricht@linux.vnet.ibm.com>,
        Wang Nan <wangnan0@huawei.com>, Yonghong Song <yhs@fb.com>,
        yuzhoujian@didichuxing.com,
        Arnaldo Carvalho de Melo <acme@redhat.com>
Subject: Re: [GIT PULL 00/28] perf/core improvements and fixes
Message-ID: <20181122065406.GA122927@gmail.com>
References: <20181122033611.15890-1-acme@kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181122033611.15890-1-acme@kernel.org>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


* Arnaldo Carvalho de Melo <acme@kernel.org> wrote:

> Hi Ingo,
> 
> 	Please consider pulling, some from before the trip to Vancouver,
> some that were more easy to process before I continue with the backlog.
> Took a bit more time than I antecipated due to fixing build breakage in
> various places due to multiple patches.  This has tip/perf/urgent
> merged.
> 
> - Arnaldo
> 
> Test results at the end of this message, as usual.
> 
> The following changes since commit b1a9d7b0190119dad5b9b7841751b5a7586bbc8b:
> 
>   Merge tag 'perf-urgent-for-mingo-4.20-20181121' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux into perf/urgent (2018-11-21 15:57:21 +0100)
> 
> are available in the Git repository at:
> 
>   git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux.git tags/perf-core-for-mingo-4.21-20181122
> 
> for you to fetch changes up to f4a0742b3cc1d03b2ff448017b8c714a77e5a261:
> 
>   perf pmu: Move *_cpuid_str() weak functions to header.c (2018-11-21 22:39:59 -0300)
> 
> ----------------------------------------------------------------
> perf/core improvements and fixes:
> 
> - Start using BPF maps in 'perf trace' for filters in the augmented syscalls
>   code, keeping the existing code for tracepoint filters so that we can switch
>   back and forth while getting everything BPFied (Arnaldo Carvalho de Melo)
> 
> - Suppress potential format-truncation warning in the PMU code (Ben Hutchings)
> 
> - Introduce 'perf bench epoll', with "wait" and "ctl" benchmarks (Davidlohr Bueso)
> 
> - Fix slowness due to -ffunction-section, do it by sorting the maps by name, so
>   avoiding the using rb_first/next to traverse all entries looking for a map name,
>   that with --ffunction-section gets to thousands of maps (Eric Saint-Etienne)
> 
> - Separate jvmti cmlr check (Jiri Olsa)
> 
> - Allow using the stepping when figuring out which JSON files to use for a x86
>   processor, so that Cascadelake server can be support, which has the same
>   cpuid as some other processor, being different only in the stepping (Kan Liang)
> 
> - Share code and output format for uregs and iregs 'perf script' output (Milian Wolff)
> 
> - Use perf_evsel__is_clocki() for clock events in 'perf stat' (Ravi Bangoria)
> 
> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
> 
> ----------------------------------------------------------------
> Arnaldo Carvalho de Melo (15):
>       perf bpf: Add unistd.h to the headers accessible to bpf proggies
>       perf augmented_syscalls: Filter on a hard coded pid
>       perf augmented_syscalls: Remove needless linux/socket.h include
>       perf bpf: Add defines for map insertion/lookup
>       perf bpf: Add simple pid_filter class accessible to BPF proggies
>       perf augmented_syscalls: Drop 'write', 'poll' for testing without self pid filter
>       perf augmented_syscalls: Use pid_filter
>       perf evlist: Rename perf_evlist__set_filter* to perf_evlist__set_tp_filter*
>       perf trace: Add "_from_option" suffix to trace__set_filter()
>       perf trace: See if there is a map named "filtered_pids"
>       perf trace: Fill in BPF "filtered_pids" map when present
>       perf augmented_syscalls: Remove example hardcoded set of filtered pids
>       Revert "perf augmented_syscalls: Drop 'write', 'poll' for testing without self pid filter"
>       perf bpf: Reduce the hardcoded .max_entries for pid_maps
>       tools build feature: Check if eventfd() is available
> 
> Ben Hutchings (1):
>       perf pmu: Suppress potential format-truncation warning
> 
> Davidlohr Bueso (3):
>       perf bench: Move HAVE_PTHREAD_ATTR_SETAFFINITY_NP into bench.h
>       perf bench: Add epoll parallel epoll_wait benchmark
>       perf bench: Add epoll_ctl(2) benchmark
> 
> Eric Saint-Etienne (1):
>       perf symbols: Fix slowness due to -ffunction-section
> 
> Jiri Olsa (1):
>       perf jvmti: Separate jvmti cmlr check
> 
> Kan Liang (3):
>       perf vendor events: Add stepping in CPUID string for x86
>       perf vendor events: Add JSON metrics for Cascadelake server
>       perf pmu: Move *_cpuid_str() weak functions to header.c
> 
> Milian Wolff (2):
>       perf script: Add newline after uregs output
>       perf script: Share code and output format for uregs and iregs output
> 
> Pu Wen (1):
>       perf tools: Add Hygon Dhyana support
> 
> Ravi Bangoria (1):
>       perf stat: Use perf_evsel__is_clocki() for clock events
> 
>  tools/build/Makefile.feature                       |     1 +
>  tools/build/feature/Makefile                       |     8 +
>  tools/build/feature/test-all.c                     |     5 +
>  tools/build/feature/test-eventfd.c                 |     9 +
>  tools/build/feature/test-jvmti-cmlr.c              |    11 +
>  tools/build/feature/test-jvmti.c                   |     1 -
>  tools/perf/Documentation/perf-bench.txt            |    10 +
>  tools/perf/Makefile.config                         |    12 +-
>  tools/perf/Makefile.perf                           |     3 +
>  tools/perf/arch/x86/util/header.c                  |    66 +-
>  tools/perf/arch/x86/util/kvm-stat.c                |     2 +-
>  tools/perf/bench/Build                             |     3 +
>  tools/perf/bench/bench.h                           |    14 +
>  tools/perf/bench/epoll-ctl.c                       |   413 +
>  tools/perf/bench/epoll-wait.c                      |   540 +
>  tools/perf/bench/futex.h                           |    12 -
>  tools/perf/builtin-bench.c                         |    13 +
>  tools/perf/builtin-script.c                        |    38 +-
>  tools/perf/builtin-trace.c                         |    92 +-
>  tools/perf/examples/bpf/augmented_raw_syscalls.c   |    10 +-
>  tools/perf/include/bpf/bpf.h                       |    19 +
>  tools/perf/include/bpf/pid_filter.h                |    21 +
>  tools/perf/include/bpf/unistd.h                    |    10 +
>  tools/perf/jvmti/libjvmti.c                        |    12 +
>  .../pmu-events/arch/x86/cascadelakex/cache.json    | 10172 +++++++++++++++++++
>  .../arch/x86/cascadelakex/clx-metrics.json         |   164 +
>  .../arch/x86/cascadelakex/floating-point.json      |    85 +
>  .../pmu-events/arch/x86/cascadelakex/frontend.json |   482 +
>  .../pmu-events/arch/x86/cascadelakex/memory.json   |  9909 ++++++++++++++++++
>  .../pmu-events/arch/x86/cascadelakex/other.json    |  8908 ++++++++++++++++
>  .../pmu-events/arch/x86/cascadelakex/pipeline.json |   969 ++
>  .../arch/x86/cascadelakex/uncore-memory.json       |   117 +
>  .../arch/x86/cascadelakex/uncore-other.json        |   255 +
>  .../arch/x86/cascadelakex/virtual-memory.json      |   285 +
>  tools/perf/pmu-events/arch/x86/mapfile.csv         |     3 +-
>  tools/perf/util/evlist.c                           |    10 +-
>  tools/perf/util/evlist.h                           |     6 +-
>  tools/perf/util/header.c                           |    39 +
>  tools/perf/util/map.c                              |    27 +
>  tools/perf/util/map.h                              |     2 +
>  tools/perf/util/pmu.c                              |    47 +-
>  tools/perf/util/stat-shadow.c                      |     3 +-
>  tools/perf/util/symbol.c                           |    15 +-
>  43 files changed, 32711 insertions(+), 112 deletions(-)
>  create mode 100644 tools/build/feature/test-eventfd.c
>  create mode 100644 tools/build/feature/test-jvmti-cmlr.c
>  create mode 100644 tools/perf/bench/epoll-ctl.c
>  create mode 100644 tools/perf/bench/epoll-wait.c
>  create mode 100644 tools/perf/include/bpf/pid_filter.h
>  create mode 100644 tools/perf/include/bpf/unistd.h
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/cache.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/clx-metrics.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/floating-point.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/frontend.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/memory.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/other.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/pipeline.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/uncore-memory.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/uncore-other.json
>  create mode 100644 tools/perf/pmu-events/arch/x86/cascadelakex/virtual-memory.json

Pulled, thanks a lot Arnaldo!

	Ingo
