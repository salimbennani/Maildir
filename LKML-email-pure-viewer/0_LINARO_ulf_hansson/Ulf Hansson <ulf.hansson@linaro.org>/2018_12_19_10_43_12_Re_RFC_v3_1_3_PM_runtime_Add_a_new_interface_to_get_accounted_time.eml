Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 21:33:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0095558043E;
	Wed, 19 Dec 2018 02:43:56 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 02:43:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AmqGTTh9jipT9Mf9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+weIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?coUBEfYOPf1Ar4T/vFYOsQeyCBOwCO/z1jNFhHn71rA63eQ7FgHG2RQtENwKsH?=
 =?us-ascii?q?Tasd77Nr0dUeauzKnTyjXDae5d1DDg6IjMfBAtu/GMUqh2ccrK0kkvEAXFg06U?=
 =?us-ascii?q?qYzkOTOazP4Ns2+B4+pnT+KvhHcqpgdsqTas3schkpfFip4Rx1ze6Cl0zpg5Kc?=
 =?us-ascii?q?elREN4fdKoCppduiOCO4doXs8vR3tktSU6x7Ecp5K3YjUGxI46yxPbZPGKdZWD?=
 =?us-ascii?q?7Aj5W+aLOzh4gWpoeLKhiBa29kit0vP8Vsaq31ZQtCZFkcfDtmoL1xPN7siLUP?=
 =?us-ascii?q?x9/l2u2TqX1gDT7P9LIVwsmKbFN5IsxqQ8mocdvEjdBCP6hUb7gLOMekgl+OWk?=
 =?us-ascii?q?8+Hnba/npp+YOY90kAb+MqE2l8y7AOQ4NBUOXmeC9eS/yrLj50v5T6tOjvEvla?=
 =?us-ascii?q?nYvpbaKtoBpqOiHQ9V3Zgs6wylAzelztsYh38HI0xBeB6diIjpIV7OLOjiDfij?=
 =?us-ascii?q?m1SsjCtrx/feM73lA5XNLWbMnK3ufLZg8ENczAszzdZC55NbEL0BIfTzWlPvu9?=
 =?us-ascii?q?zcFBM2Lwu0w+P/AtVnyoweQX6PArOeMK7KsV+H/OMvI/WWa48Sojr9K+Ul6OTo?=
 =?us-ascii?q?jX82glIdeaip3Z0KaHG3BPhmIkOZYWbyjdcFC2sFog0+TOnygl2YTTFTf2qyX7?=
 =?us-ascii?q?475jwjCoKmCpnMSpqugLyG2ie7GJpWa3tCClCNF3foaoqFV+0NaCKUPs9ujDgE?=
 =?us-ascii?q?WaK9RI8m0BGkrBX6xKZ/LurI5i0Ysoru28Ju5+3TkhEy9iZ4D96H3GGPVGx0mm?=
 =?us-ascii?q?IIRzkr3KFwu0B9y1GD0bRmjPxcD9Bc+/RJUgIiP57G0+N6E8zyWh7GftqRS1ap?=
 =?us-ascii?q?WNOmDSs1TtIw2dAOZUl9Fs6mjhDC2SqqHrAUm6aKBJwy7qLTwXzxK9xhxHbB0a?=
 =?us-ascii?q?krl0MmTddXNW26mq5/8BDeCJPTnEWHiammb6Qc0zTL9GeY02WOukZUUApzUaXA?=
 =?us-ascii?q?WXASfU/WrdX/5kPfQL6iE7UnMg1dycGcLqtGcMHmjVJDRP37ItTRf3qxm3usBR?=
 =?us-ascii?q?aP3r6DcZDle3sD0ynHCEgLiQYT/W2YOgg4HSqhp2PeDDpzFVPgeU/s8O9+qG+l?=
 =?us-ascii?q?QU8w1Q2Fc0ph17+t8B4PmfOcU+8T3q4DuCo5tzV0HVO939XKC9qApwttZrlcbc?=
 =?us-ascii?q?k64Fdd0WLZtgp9PpO7IqBmh14edRl3vkz02xV2DIVAjdYlrHcwwAVuLqKY1UtL?=
 =?us-ascii?q?dymE0pDoJr3XNm7y8Qi1ZK7SxF7f38iZ+6cV5PsjtlXsoRumFkwh83VgzdlYyH?=
 =?us-ascii?q?+c5pTMDAoPXpP9SEc39x5mp77EZikx/Z/b1XppMaOsqD/Nx8opBPc5yhanZ9pe?=
 =?us-ascii?q?ML6EGBXuHMEABsmuKPYlm16mbh8fOOBS9ag0P96pdvec2a6rOvpgkyyijWhd/I?=
 =?us-ascii?q?991UeM/TJmSuHUx5YF3+2Y3gyfWjfmjVeurtr4mZpZajEVBGa/zzbrBJRQZqFr?=
 =?us-ascii?q?YYkEE2OuLNCpydVkgJ7tXWVV9FqiB1MAxc+odgCeb1373Q1My0sXpWarlje/zz?=
 =?us-ascii?q?xxizsptLaQ3DTSw+T+cxoKIm5KRGh4gVbsO4S0lM0aXE6zYggtlRul41v6xqdB?=
 =?us-ascii?q?qKR+KWnTXVlHfyzsI25+Vauws6KIY9RT55MwrSVXTOO8bEiYSrHnuRsa0CDjH2?=
 =?us-ascii?q?xEyDAgbT6quZb5nx18iG2DKnZ+t37ZecB2xRfC693QX/9R3jwaRCZmjTnbHESz?=
 =?us-ascii?q?P96s/d+MjZfMrvi+V369Vp1UaSTqzZmPtCyh6W1oAB2/meu+mtnmEQg8zC/62M?=
 =?us-ascii?q?NmVSTOrBbgfIbr0762Pv5gfkltHFX88dZ1Gplikossg5EdwXsaiY+U/XYdkWfz?=
 =?us-ascii?q?LM9U2aTxbHcWQT4LwtjV4BXq2UF5L3KJwZ75WWuZwsd7e9a6ZWYW0Don789WEK?=
 =?us-ascii?q?eU8KBEnSxtr1q9rALRYuJyki0TyPQw834an/8GuBA2wSqDGLASElJVPSjtlxSO?=
 =?us-ascii?q?8tC/o79bZGepcbisykV+mcqtA62FogFZQHz5YIstHTds7sVjN1LByGHz6obheN?=
 =?us-ascii?q?XKbNMcrBuUkwrbj+hOKZI8jf4KhSthOWLgsnwp0e87jRpy3Z6kuIiLMXli/KW8?=
 =?us-ascii?q?AhRALD36e9sT+i3xjaZZhsuZxJqgHpJlGjUWRpfoSe+oHSkWtfTmMQaODTI9pm?=
 =?us-ascii?q?2aGbrZAQ+Q9kNmo2jTHJCsMnGdPGMZwsl6RBmBOExfhxgZXDcgkZ48CA+q39bt?=
 =?us-ascii?q?cFtj6jAS+174qQZMyuRyOBnkSWrfoAaoajEpSJmQNhZW7wdC51vLPsya9O58Ay?=
 =?us-ascii?q?ZY/pi5pgyXNmObfxhIDX0OWkGcB1HjOaSu5cDd8+eCAOqyNeDOYbKIqexRTPqI?=
 =?us-ascii?q?wZOv0o17/zeDLMmPP39iD+El1UpHR3x2B8PZmzAXQSwNiy3Nd9KbpAu7+iBvrs?=
 =?us-ascii?q?Cw7vXrWAHs5YuOEbdSMs9v+xe5gaidLe6QmT15JC1c1pMNw3/I1bce0EQTiyFo?=
 =?us-ascii?q?azmiD7AAuTTRQ6LXn69dFwQbZD9rNMtU86I82RFANtTGitzuzL53kP40B01BVV?=
 =?us-ascii?q?zggcypYc0KI2egNFLIHkqLNbKGJSHVzMHze6+zVbpQjOBMvR2qpTmbC1PjPiiE?=
 =?us-ascii?q?lzTxSxCvMORMgDuHMxBEpI69cghiCW74QdLiax27NsJ3jDIszb01gHPKKXATMT?=
 =?us-ascii?q?xmf0xRqb2Q6DtSgu9jFGxZ8nplMe6Elj6Z7ubCLJYWtPprAiJsmONb4HQ10b1V?=
 =?us-ascii?q?7C5fSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPPaRyp4VZ3fC9x8L8S?=
 =?us-ascii?q?2/FhUWu9x5QonxuqZbx97T0q3uKSte9M78+coaDtLTbsWdPyxyHwDuHWvpCAVN?=
 =?us-ascii?q?bTetLnrYgQQJjfWcsH2cqIMhrZ7EnJsIQ6VcElsvGaVJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtNvCLmoQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAACwHxpch0O0hNFcBx0BAQUBBwUBg?=
 =?us-ascii?q?VIHAQsBg2sUE4N9lBWCDRSXSIFzLRMBhyoiNQgNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMgjYkAYJiAQIDAQIgBBkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBQODG?=
 =?us-ascii?q?oICBZtRPIopcHwzgnYBAQWCLoR9CBJ5izSBVz+DdS6EZQmDG4JXiSYMFDKBR5V?=
 =?us-ascii?q?yBwKCJQSPOBiBXY95ikyPITCBJgGCDE0wdAaCNYIbDBeIXoVAPjOBBQEBixMpg?=
 =?us-ascii?q?iQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAACwHxpch0O0hNFcBx0BAQUBBwUBgVIHAQsBg2sUE4N?=
 =?us-ascii?q?9lBWCDRSXSIFzLRMBhyoiNQgNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJiA?=
 =?us-ascii?q?QIDAQIgBBkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBQODGoICBZtRPIopcHw?=
 =?us-ascii?q?zgnYBAQWCLoR9CBJ5izSBVz+DdS6EZQmDG4JXiSYMFDKBR5VyBwKCJQSPOBiBX?=
 =?us-ascii?q?Y95ikyPITCBJgGCDE0wdAaCNYIbDBeIXoVAPjOBBQEBixMpgiQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,372,1539673200"; 
   d="scan'208";a="142732295"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 19 Dec 2018 02:43:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729102AbeLSKnu (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 19 Dec 2018 05:43:50 -0500
Received: from mail-vk1-f194.google.com ([209.85.221.194]:45814 "EHLO
        mail-vk1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727586AbeLSKnu (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 05:43:50 -0500
Received: by mail-vk1-f194.google.com with SMTP id n126so4381529vke.12
        for <linux-kernel@vger.kernel.org>; Wed, 19 Dec 2018 02:43:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=CimPaBQWrYaphB+RCutfv/lbWAOv9/X3SRyIEUklOME=;
        b=A9OxvUKQIYDaxgcXUv8lg2Hh2DxZZrUV7iiiWh/W//7+OqEpIb9765KzB+wljhBXpk
         b9loo2bb6gbu82LcsbeOojC5A9Acf2sFeHAND3XyKv4yjKX+AF7E4Di/e0y+EgiK9e3T
         N4FyRVwZiRZIZSWkZx61co801UNE3jvCbLoAI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=CimPaBQWrYaphB+RCutfv/lbWAOv9/X3SRyIEUklOME=;
        b=O9iy94cXAWaAMnrTKuDqVIc5FcfoXlEf3iHbpIBdNYJh7WOTT3hcIHNMgv4DJEBwfA
         UDbdNb6FpdJZGJ1+ftL66dvjL9QpJwhjKR7mqOvE24PvPWxAkbYURjTknX7jMNGjwJxj
         LfLXSatOO0BloEiJf9jy12dAPd4M+LzD6NV+Im7BvIz6Vou9pSCFeGpHGUHDYpXajxPc
         ERhlgvq4EVuDQoqtAYmLMfpAY9h39dLqni1h+1e17PaWPJyEJUFt/ZU4jZJIeN6QR4zG
         3mYv1OOcATYSYuZKB27odDycmk01BcT5TRuIrIeL0uq2SpSYKCLMGNfH2D++L0UIbpVy
         pJjQ==
X-Gm-Message-State: AA+aEWZB0hgatpPc2jLTQtPk8xrlpU1QnbztRXY+9aahLYcXh+W8yPEA
        BTwwJ24/DtSzK1xVX5pGSsAJZNI0rObyd+M5pNQAcw==
X-Google-Smtp-Source: AFSGD/Ub8aZ/Zxki7Ifmmy6hqLL+la7mxof2+fP0lwyOPuJV66Je18lh+ZKsqkbAf0kAMsfuXhNbT/TYn6brhp6qV8k=
X-Received: by 2002:a1f:4982:: with SMTP id w124mr9154691vka.4.1545216228687;
 Wed, 19 Dec 2018 02:43:48 -0800 (PST)
MIME-Version: 1.0
References: <1545144923-31546-1-git-send-email-vincent.guittot@linaro.org>
 <1545144923-31546-2-git-send-email-vincent.guittot@linaro.org>
 <CAPDyKFq6X8vJU=pK1fgirGkD2-GS=LryRP1No8bSgPNLbyvAEg@mail.gmail.com>
 <CAKfTPtCpv0MqF64JGTyR63bqKdAhXzL1fEsNbS6DHsD-jXYpKw@mail.gmail.com>
 <CAPDyKFrSxX-eBsTiEvbrbjVpqkSuBnhxruCgtihH6hSvWSFD1g@mail.gmail.com> <CAKfTPtB=TUAz=KpZzJsRUvK8ymiXnTgQ3BxcY0yu9YbJ1BW7QA@mail.gmail.com>
In-Reply-To: <CAKfTPtB=TUAz=KpZzJsRUvK8ymiXnTgQ3BxcY0yu9YbJ1BW7QA@mail.gmail.com>
From: Ulf Hansson <ulf.hansson@linaro.org>
Date: Wed, 19 Dec 2018 11:43:12 +0100
Message-ID: <CAPDyKFoR7t=K65n0_+4yRqdpRMZ0BbA16cDhmxEvNhm0qEOXNQ@mail.gmail.com>
Subject: Re: [RFC v3 1/3] PM/runtime: Add a new interface to get accounted time
To: Vincent Guittot <vincent.guittot@linaro.org>
Cc: "open list:THERMAL" <linux-pm@vger.kernel.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        Thara Gopinath <thara.gopinath@linaro.org>,
        jani.nikula@linux.intel.com,
        Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
        rodrigo.vivi@intel.com, David Airlie <airlied@linux.ie>,
        "Intel graphics driver community testing & development" 
        <intel-gfx@lists.freedesktop.org>,
        dri-devel <dri-devel@lists.freedesktop.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 19 Dec 2018 at 11:34, Vincent Guittot
<vincent.guittot@linaro.org> wrote:
>
> On Wed, 19 Dec 2018 at 11:21, Ulf Hansson <ulf.hansson@linaro.org> wrote:
> >
> > On Wed, 19 Dec 2018 at 11:11, Vincent Guittot
> > <vincent.guittot@linaro.org> wrote:
> > >
> > > On Wed, 19 Dec 2018 at 10:58, Ulf Hansson <ulf.hansson@linaro.org> wrote:
> > > >
> > > > On Tue, 18 Dec 2018 at 15:55, Vincent Guittot
> > > > <vincent.guittot@linaro.org> wrote:
> > > > >
> > > > > Some drivers (like i915/drm) need to get the accounted suspended time.
> > > > > pm_runtime_accounted_time_get() will return the suspended or active
> > > > > accounted time until now.
> > > >
> > > > I suggest to leave the active accounted time out for now. At least
> > > > until we have some users.
> > >
> > > This is needed to keep same feature level for i915/drm
> >
> > I don't follow. According to the changes in the drm driver in patch2,
> > we are only calling the new pm_runtime interface with RPM_SUSPENDED?
>
> sorry I mix your question above and the one about  accounting_timestamp.
>
> So I agree that only RPM_SUSPENDED is used for now
>
> >
> > >
> > > >
> > > > That said, perhaps rename the function to something along the lines
> > > > of, pm_runtime_last_suspended_time(), to make it more clear.
> > > >
> > > > >
> > > > > Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
> > > > > ---
> > > > >  drivers/base/power/runtime.c | 26 ++++++++++++++++++++++++++
> > > > >  include/linux/pm_runtime.h   |  2 ++
> > > > >  2 files changed, 28 insertions(+)
> > > > >
> > > > > diff --git a/drivers/base/power/runtime.c b/drivers/base/power/runtime.c
> > > > > index 7062469..6461469 100644
> > > > > --- a/drivers/base/power/runtime.c
> > > > > +++ b/drivers/base/power/runtime.c
> > > > > @@ -88,6 +88,32 @@ static void __update_runtime_status(struct device *dev, enum rpm_status status)
> > > > >         dev->power.runtime_status = status;
> > > > >  }
> > > > >
> > > > > +u64 pm_runtime_accounted_time_get(struct device *dev, enum rpm_status status, bool update)
> > > > > +{
> > > > > +       u64 now = ktime_to_ns(ktime_get());
> > > >
> > > > I think you should stay on jiffies here - and then switch to ktime in patch 3.
> > > >
> > > > > +       u64 delta = 0, time = 0;
> > > > > +       unsigned long flags;
> > > > > +
> > > > > +       spin_lock_irqsave(&dev->power.lock, flags);
> > > > > +
> > > > > +       if (dev->power.disable_depth > 0)
> > > > > +               goto unlock;
> > > > > +
> > > > > +       /* Add ongoing state  if requested */
> > > > > +       if (update && dev->power.runtime_status == status)
> > > > > +               delta = now - dev->power.accounting_timestamp;
> > > > > +
> > > >
> > > > Hmm. Do we really need to update the accounting timestamp? I would
> > > > rather avoid it if possible.
> > >
> > > i915/drm uses this to track ongoing suspended state. In fact they are
> > > mainly interested by this part
> >
> > Again, sorry I don't follow.
>
> In fact we don't update dev->power.accounting_timestamp but only use
> it to get how much time has elapsed in the current state.
>
> >
> > My suggested changes below, would do exactly that; track the ongoing
> > suspended state.
> >
> > The user can call the function several times while the device remains
> > RPM_SUSPENDED, and if needed the user could then compute the delta
> > in-between the calls, for whatever reason that may be needed.
>
> So I'm not sure to catch your question:
> Is your problem linked to status != RPM_SUSPENDED or the update
> parameter that compute delta ?

My intent was to keep things simple.

1. Only expose last suspended time, which means tracking the ongoing
suspended state. In other words, you can also remove "enum rpm_status
status" as the in-parameter to pm_runtime_accounted_time_get().
2. Don't allow the user of pm_runtime_accounted_time_get() to update
the current timestamp, in "dev->power.accounting_timestamp".

Is that okay for the drm driver, to do what it does today?

>
> >
> > >
> > > >
> > > > It seems like it should be sufficient to return the delta between
> > > > "now" and the "dev->power.accounting_timestamp", when
> > > > "dev->power.runtime_status == RPM_SUSPENDED".
> > > >
> > > > In other case, just return 0, because we are not in RPM_SUSPENDED state.
> > >
> > > only the RPM_SUSPENDED is used by i915/drm but wanted to provide a
> > > generic interface to get
> > > suspended or not suspend state
> >
> > I see.
> >
> > Although, unless Rafael thinks different, I would rather try to keep
> > this as simple as possible and expose only what is needed and nothing
> > more.
>
> I'm fine with both. Rafael ?
>
> >
> > >
> > > >
> > > > > +       if (status == RPM_SUSPENDED)
> > > > > +               time = dev->power.suspended_time + delta;
> > > > > +       else
> > > > > +               time = dev->power.active_time + delta;
> > > > > +
> > > > > +unlock:
> > > > > +       spin_unlock_irqrestore(&dev->power.lock, flags);
> > > > > +
> > > > > +       return time;
> > > > > +}
> > > > > +
> > > > >  /**
> > > > >   * pm_runtime_deactivate_timer - Deactivate given device's suspend timer.
> > > > >   * @dev: Device to handle.
> > > > > diff --git a/include/linux/pm_runtime.h b/include/linux/pm_runtime.h
> > > > > index 54af4ee..86f21f9 100644
> > > > > --- a/include/linux/pm_runtime.h
> > > > > +++ b/include/linux/pm_runtime.h
> > > > > @@ -113,6 +113,8 @@ static inline bool pm_runtime_is_irq_safe(struct device *dev)
> > > > >         return dev->power.irq_safe;
> > > > >  }
> > > > >
> > > > > +extern u64 pm_runtime_accounted_time_get(struct device *dev, enum rpm_status status, bool update);
> > > > > +
> > > > >  #else /* !CONFIG_PM */
> > > > >
> > > > >  static inline bool queue_pm_work(struct work_struct *work) { return false; }
> > > > > --
> > > > > 2.7.4
> > > > >
> > > >
> > > > Kind regards
> > > > Uffe
> >
> > Kind regards
> > Uffe
