Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:14:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7BE785802E4;
	Fri, 30 Nov 2018 00:46:38 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga001-1.fm.intel.com with ESMTP; 30 Nov 2018 00:46:38 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Av3VB3hflEQMcTh9POrO0mn3+lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YhSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYOy?=
 =?us-ascii?q?bYQBD+QPM+VFoYfju1QOtgO+CAu3CePz1jNFnGP60bEm3+kjFwzNwQwuH8gJsH?=
 =?us-ascii?q?TRtNj6OqMSUe6ox6fK1zrDaehW2Sz66IjObxsspuyMXbZ+ccbLyUkgDQXFjk6L?=
 =?us-ascii?q?qYziOTOYzeANs2md7+V6T+KvjHQrqwZrojig38ohjJTCiIENyl3c6yl13II4Kc?=
 =?us-ascii?q?elREN1f9KoCoZcuiKGO4dsQ84vQXlktDgmxrACo5K2fygHxI45yxLBdfCLaYmF?=
 =?us-ascii?q?7xHlWe2MOzl3nmhld6i6hxuq8Uiv1On8Vs6s3VZUoSpKjMPMumoO1xPN8MiHTO?=
 =?us-ascii?q?Vy/kO71TaIzQDT5flIIUEylaXFN54s2qA8moYXvEjZAyP7llv6gLWLekgn5uSk?=
 =?us-ascii?q?8eXqb7f+qp+ZLYB0iwX+Mqo0msy4BOQ1KgwOX2md+eSh27zv5E75T6tQjv0wjK?=
 =?us-ascii?q?bZtInWJcMVp66/HQBVyJ0u6wiwDzi4ytQUh3oHI0xfeBKBkYfpP0vCIPfiDfew?=
 =?us-ascii?q?m1isiitkx+jaPr39BZXANnzDkLbifblj8UJdxxczwMtb55JVDLEBPf3yVlXwtN?=
 =?us-ascii?q?zeEh82LQi0z/z7B9V604MUQXiPDbOBMKPOrV+I4foiI+mWa48UpDbyMf8l6+Tu?=
 =?us-ascii?q?jX8kg1Ade6ap0IATaHC5GPRmPkqYbWDtgtcHDWcFoA4+QPb2h12FVD5Zf2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoKqgLOfxiu7HZpWZmZAClCLCnroc4SEW/ERaCOdOMNhkzoE?=
 =?us-ascii?q?VaS/RI8lzx2hqAj6y79/JOrO5iIYrY7j1MRy5+DLjx4y7jx0D8Oe022XVWF7hG?=
 =?us-ascii?q?EISiQy3KB+p0x911iC3bJ5g/xeCdxc+fdJXh0mOp7byuxwE8ryVR7ZfteVVFam?=
 =?us-ascii?q?Rc2rATIrQdI32dMOZ0d9FM+kjhDMxCeqB74Vl7qWBJ076K7c3n7xJ9pjxHbCzq?=
 =?us-ascii?q?Uuk14mQs5XP228mqF/7xTTB5LOk0iBiqmlb7oc0zDX+GeD12WOulpYXxB2UanC?=
 =?us-ascii?q?WXAfZU7WrdDi60PGTr+uD6knMwRbxc6DLKtKdsPmjVFcSPj/P9TeZnq7m32sCh?=
 =?us-ascii?q?aQ2rOMcI3qdn0A0yrHFkgLjRof/XacOgg4HSeuvWTeASdqFVLuZUPs7OZ/pGm6?=
 =?us-ascii?q?Tk8y0wGFcUlh26Cp9R4SgPyWU+kT0a4cuCc9tzV0G06w387XC9qFoAphYKVcYN?=
 =?us-ascii?q?Mn7Fdbz27ZsBZ9PpihL6BkiV4TaAB3v0Lo1xVqBYRMi8kqrHU2zAVsLaKUyk9O?=
 =?us-ascii?q?dzSd3ZroIL3YNnHy/Ayza67RwlzRytKW9bkA6fsmq1TvphqmFlc//Hp91dlV0H?=
 =?us-ascii?q?yc5ovRAQoWUJLxVFs39hdgq7HbZCk9+53b1Xl2PaaotT/C3sojBPE5xRa4Y9df?=
 =?us-ascii?q?LKSEGRfyEs0HHcShNPYmmlmpbh0eOuBS+7U5P8end/uAxa6qM/xsnDOgjWRb/o?=
 =?us-ascii?q?991liA+DZ7Su7Nx5wF2e2X3hObVzfgi1esqtr3mYFYaj4IBGqw1C/kCJRXZqJs?=
 =?us-ascii?q?Z4YLCH6iLNGtydV6mpHiRWRY9FmlB14d3M+peBySb0Hy3AFK1EQXp2CnljW8zz?=
 =?us-ascii?q?Bujz4pqa+f1jTUw+v+bBoHJnJLRG56gFbsIIi4ldAbUFKzbwg0khuo/kL6x6ld?=
 =?us-ascii?q?pKRiIGjfW0ZIfy7qL258Vqu8rKaNY8lK6JkwqyVYTPy8YUyGSr76uxYa0TnsH3?=
 =?us-ascii?q?FdxDA4cDGmoI75kAZ5iGKeLXZzqmTWecdryBfb5dzcQ+NR3zUcSCl5jznXGkaz?=
 =?us-ascii?q?P92z8dqIkJfDt/i0V3i9WZ1LbSnr0YSAuTO75GJwBh2zhfKzmtzhEQUh1S/71t?=
 =?us-ascii?q?9qVTjHrRrmY4nr0bi6PvxjfkVyGFD87M96EJlkkoQsnJEQxWQahpKN8HoEi2jz?=
 =?us-ascii?q?MM9X2aLjbHUXQz4LzMXY4Azk2E1lM3KIyJj1VnSbwst9eda6Znka1T4678BPEK?=
 =?us-ascii?q?2U9qBLnTNpolqkqgLcef19njYeyfQ08nIbjf8GuBExziqDGLAdBldXPTbjlxmT?=
 =?us-ascii?q?69C+raNXZHugcLSq1Up+m8yhA6+Gog1GRHn5fZIiFzdq7spjKFLMzGHz6ob8dd?=
 =?us-ascii?q?nMatITsweYkhbagOhTNZIxjeEKhSt8NGL5vH0lzfM7jBN00ZG7uoiHN3ti/Kaj?=
 =?us-ascii?q?DhFEMT31YtsZ+ivxgqZGgsaWw4evE416FToRW5voSe+oHCgWtfT6LAuOFDw8qn?=
 =?us-ascii?q?GGGbvQBwOf6UFmr27RHJCvLX2YOH4ZzdB6ThmHOENfmBwUXCk9npMhFACl3snh?=
 =?us-ascii?q?f1li5jwL+l70sBhMyv9rNxniVGfQvhyoZywwSJieKhpW8w5D613UMcyY8uJ8AS?=
 =?us-ascii?q?VY8oe9owyKL2yRfx5IAn0RWkyYG1DjOaGj5NnH8+iFH+q+MuHBYbOUpexFUPeI?=
 =?us-ascii?q?w52v35Bi/zaNMMWPI3ZjA+c62kpFQXB2BcDZly8TRCwQkiLHd9Sbqwuk+i1rss?=
 =?us-ascii?q?C/9+zmWALx6ouOCLtSMtRv9wq1gaeZMO6Qizh2KSxF1pMX3nLIzLkf3FgPiyBh?=
 =?us-ascii?q?bTWtELIAtTLTQ6LUgKNYExkbayZrPstS8608xhVNOdLcit7tzLF4k+U6C01bWl?=
 =?us-ascii?q?3hgM2pYc0KLnq5NFPGAkaLKbuHKSfKw8HxfaOzV7lQgP9IuB23vDaRC1XjMSib?=
 =?us-ascii?q?lzn1SxCvNvlBjD2aPBxboo2ybgxhBnTjTN34bB22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6G2ZZ9HpqMfGEmzqF7+nfMpsXseFkAiJxl+Jb5nQ107pU?=
 =?us-ascii?q?7CFeS/xzlyvftdpuo1CgkumSxTtrShtOqjBXhI2VuUVuI7nW9p5FWSWMwBVY02?=
 =?us-ascii?q?SKBg8K7/h4D9T18/ROy8LCj6K1KypH+sj8+coaDtLTbsWdPyxyHwDuHWvpCAVN?=
 =?us-ascii?q?bTetLnrYgQQJjfWcsH2cqIMhrZ7EnJsIQ6VcElsvGaVJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtNvCLmoQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAADR9wBch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sUE4N5iBiMCIINFJI6hHiBcywTAYMshEgiNAkNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBATcBBQkBAQoLDQICJgICA?=
 =?us-ascii?q?x8SAQUBHAYTBYMcgXoIBZsnPIodcHwzgnYBAQWHKggSeYsMgVc/g241iAWCV4k?=
 =?us-ascii?q?JGoF4hVWPOAcCgh4EjxQYgVqFEIoyLJgcMIElgg1NMHQGgjWCGwwXiF6FQD4zg?=
 =?us-ascii?q?QUBAY4BAQE?=
X-IPAS-Result: =?us-ascii?q?A0AQAADR9wBch0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?UE4N5iBiMCIINFJI6hHiBcywTAYMshEgiNAkNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJhAQEBAQIBAQIgBBkBATcBBQkBAQoLDQICJgICAx8SAQUBHAYTBYM?=
 =?us-ascii?q?cgXoIBZsnPIodcHwzgnYBAQWHKggSeYsMgVc/g241iAWCV4kJGoF4hVWPOAcCg?=
 =?us-ascii?q?h4EjxQYgVqFEIoyLJgcMIElgg1NMHQGgjWCGwwXiF6FQD4zgQUBAY4BAQE?=
X-IronPort-AV: E=Sophos;i="5.56,298,1539673200"; 
   d="scan'208";a="42215619"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 00:46:36 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726935AbeK3TzH (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 14:55:07 -0500
Received: from mail-ua1-f68.google.com ([209.85.222.68]:39180 "EHLO
        mail-ua1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726616AbeK3TzG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 14:55:06 -0500
Received: by mail-ua1-f68.google.com with SMTP id k10so1610789ual.6
        for <linux-kernel@vger.kernel.org>; Fri, 30 Nov 2018 00:46:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=P16kqi0BbwC/Id9q3/kCZs+e6tgkK53zUmnuWDCPzCs=;
        b=f+qb7grULHlMjOQdpSnwJKX1BstBmNnAISS70Wy4sgwH6T6fulfl9I+00WWj+JiK0C
         ZlFI73BLMg/hwT/0ztE47qpKDWwOpvldDvTqAgOjml40HW8RyVMXyyV6LBhytgpUnvJU
         HdvgdIj1a4WLb45tNOr04Figujw0huWRFc7AU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=P16kqi0BbwC/Id9q3/kCZs+e6tgkK53zUmnuWDCPzCs=;
        b=GjA4nG7veZYmZ+LDRZfTI/DcOdLdBDZ4MXgkXm2/q1Q2u2sbeKXJyJvq30wVFFbHZK
         9R2nWDEjNgIJW31EoolRM1DKT6oSSTNVqLHDKjHoVgQZNBT0k5W6kIKlF/CGFZDic+EP
         vjzJAXZUAc+H7ibPZiIRUxmIAhzzDg7ar9An8OfGB1gpU85TvDkTJBRbzskf7KeLOVMi
         ETh+9SzSPPDVMNgcSvEdatTHo93qrkvPHPwxwqhxwbMZAZxkdCQfVVWiWFIJxXimsZQk
         5equ/Bco2gpFyey2LbaY8L1ZS/ieovqoF77OqqpwuHkdH2llnFRnac7Tkm5Qxg394QI7
         1NGA==
X-Gm-Message-State: AA+aEWYYQuOkTGWEovZ1ccrMOuCetJaPkohgz0Tkf8xzQxkGaUfhzFRC
        u1VpcRNPASphwCiE0pzS0Zo3a7uLyvBgEOtffcyvyw==
X-Google-Smtp-Source: AFSGD/Wm8m9s3bb07j+QyJH8nf+dIRfQWkvGmcMwLLTOAmUeMoFctCsM/r1oHwbnUAW1oYJEoDnEc/RYpJc5+LuNe7Y=
X-Received: by 2002:ab0:526:: with SMTP id 35mr2124916uax.25.1543567591183;
 Fri, 30 Nov 2018 00:46:31 -0800 (PST)
MIME-Version: 1.0
References: <cover.1543219386.git.viresh.kumar@linaro.org> <8bb37fb6120221ded6abb53e69c86620aade20f6.1543219386.git.viresh.kumar@linaro.org>
In-Reply-To: <8bb37fb6120221ded6abb53e69c86620aade20f6.1543219386.git.viresh.kumar@linaro.org>
From: Ulf Hansson <ulf.hansson@linaro.org>
Date: Fri, 30 Nov 2018 09:45:55 +0100
Message-ID: <CAPDyKFo+P0oUoPuNCJV4eumn-cqrM5_LBOvY3qQ9qy_HY5Lt2g@mail.gmail.com>
Subject: Re: [PATCH V2 2/5] OPP: Add dev_pm_opp_xlate_performance_state() helper
To: Viresh Kumar <viresh.kumar@linaro.org>
Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        Viresh Kumar <vireshk@kernel.org>, Nishanth Menon <nm@ti.com>,
        Stephen Boyd <sboyd@kernel.org>,
        Vincent Guittot <vincent.guittot@linaro.org>,
        Rajendra Nayak <rnayak@codeaurora.org>,
        Niklas Cassel <niklas.cassel@linaro.org>,
        Linux PM <linux-pm@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 26 Nov 2018 at 09:10, Viresh Kumar <viresh.kumar@linaro.org> wrote:
>
> Introduce a new helper dev_pm_opp_xlate_performance_state() which will
> be used to translate from pstate of a device to another one.

I don't get this, could you please elaborate?

>
> Initially this will be used by genpd to find pstate of a master domain
> using its sub-domain's pstate.

I assume pstate is the performance state of a genpd that you refer to,
no? Please try to be a bit more descriptive in your changelogs, to
avoid confusions.

>
> Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
> ---
>  drivers/opp/core.c     | 59 ++++++++++++++++++++++++++++++++++++++++++
>  include/linux/pm_opp.h |  7 +++++
>  2 files changed, 66 insertions(+)
>
> diff --git a/drivers/opp/core.c b/drivers/opp/core.c
> index 0eaa954b3f6c..99b71f60b6d8 100644
> --- a/drivers/opp/core.c
> +++ b/drivers/opp/core.c
> @@ -1707,6 +1707,65 @@ void dev_pm_opp_put_genpd_virt_dev(struct opp_table *opp_table,
>                 dev_err(virt_dev, "Failed to find required device entry\n");
>  }
>
> +/**
> + * dev_pm_opp_xlate_performance_state() - Find required OPP's pstate for src_table.
> + * @src_table: OPP table which has dst_table as one of its required OPP table.
> + * @dst_table: Required OPP table of the src_table.
> + * @pstate: Current performance state of the src_table.
> + *
> + * This Returns pstate of the OPP (present in @dst_table) pointed out by the
> + * "required-opps" property of the OPP (present in @src_table) which has
> + * performance state set to @pstate.
> + *
> + * Return: Positive performance state on success, otherwise 0 on errors.
> + */
> +unsigned int dev_pm_opp_xlate_performance_state(struct opp_table *src_table,
> +                                               struct opp_table *dst_table,
> +                                               unsigned int pstate)
> +{
> +       struct dev_pm_opp *opp;
> +       unsigned int dest_pstate = 0;
> +       int i;
> +
> +       /*
> +        * Normally the src_table will have the "required_opps" property set to
> +        * point to one of the OPPs in the dst_table, but in some cases the
> +        * genpd and its master have one to one mapping of performance states
> +        * and so none of them have the "required-opps" property set. Return the
> +        * pstate of the src_table as it is in such cases.

This comment is good, but I also think some of this important
information is missing in the changelog.

> +        */
> +       if (!src_table->required_opp_count)
> +               return pstate;
> +
> +       for (i = 0; i < src_table->required_opp_count; i++) {
> +               if (src_table->required_opp_tables[i]->np == dst_table->np)
> +                       break;
> +       }
> +
> +       if (unlikely(i == src_table->required_opp_count)) {
> +               pr_err("%s: Couldn't find matching OPP table (%p: %p)\n",
> +                      __func__, src_table, dst_table);
> +               return 0;
> +       }
> +
> +       mutex_lock(&src_table->lock);
> +
> +       list_for_each_entry(opp, &src_table->opp_list, node) {
> +               if (opp->pstate == pstate) {
> +                       dest_pstate = opp->required_opps[i]->pstate;
> +                       goto unlock;
> +               }
> +       }
> +
> +       pr_err("%s: Couldn't find matching OPP (%p: %p)\n", __func__, src_table,
> +              dst_table);
> +
> +unlock:
> +       mutex_unlock(&src_table->lock);
> +
> +       return dest_pstate;
> +}
> +
>  /**
>   * dev_pm_opp_add()  - Add an OPP table from a table definitions
>   * @dev:       device for which we do this operation
> diff --git a/include/linux/pm_opp.h b/include/linux/pm_opp.h
> index 2b2c3fd985ab..5a64a81a1789 100644
> --- a/include/linux/pm_opp.h
> +++ b/include/linux/pm_opp.h
> @@ -128,6 +128,7 @@ struct opp_table *dev_pm_opp_register_set_opp_helper(struct device *dev, int (*s
>  void dev_pm_opp_unregister_set_opp_helper(struct opp_table *opp_table);
>  struct opp_table *dev_pm_opp_set_genpd_virt_dev(struct device *dev, struct device *virt_dev, int index);
>  void dev_pm_opp_put_genpd_virt_dev(struct opp_table *opp_table, struct device *virt_dev);
> +unsigned int dev_pm_opp_xlate_performance_state(struct opp_table *src_table, struct opp_table *dst_table, unsigned int pstate);
>  int dev_pm_opp_set_rate(struct device *dev, unsigned long target_freq);
>  int dev_pm_opp_set_sharing_cpus(struct device *cpu_dev, const struct cpumask *cpumask);
>  int dev_pm_opp_get_sharing_cpus(struct device *cpu_dev, struct cpumask *cpumask);
> @@ -280,6 +281,12 @@ static inline struct opp_table *dev_pm_opp_set_genpd_virt_dev(struct device *dev
>  }
>
>  static inline void dev_pm_opp_put_genpd_virt_dev(struct opp_table *opp_table, struct device *virt_dev) {}
> +
> +static inline unsigned int dev_pm_opp_xlate_performance_state(struct opp_table *src_table, struct opp_table *dst_table, unsigned int pstate)
> +{
> +       return 0;
> +}
> +
>  static inline int dev_pm_opp_set_rate(struct device *dev, unsigned long target_freq)
>  {
>         return -ENOTSUPP;
> --
> 2.19.1.568.g152ad8e3369a
>

Besides the comments, I think this makes sense to me. Although, let me
review the rest in the series before making a final call.

Kind regards
Uffe
