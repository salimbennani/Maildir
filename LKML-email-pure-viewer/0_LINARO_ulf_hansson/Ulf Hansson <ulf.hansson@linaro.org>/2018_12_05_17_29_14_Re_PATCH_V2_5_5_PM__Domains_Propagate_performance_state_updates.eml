Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:56:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 78C3F580375;
	Wed,  5 Dec 2018 09:30:09 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 09:30:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ALP2ihB1bzmL2iIwusmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSL//xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelYtJH9qlkVoBuiGQWhHv/jxiNUinL026AxzuQvERvB3AwlB98Bvn?=
 =?us-ascii?q?DUrNvoP6kQS++1yrLIzS7Eb/NQxDzw75XIchQvof2WXbJ/a8zRyVI0FwPCiFWd?=
 =?us-ascii?q?sojlPzKT1usXqWib6PBsVeW1i24osgx8pCWkyMQ0ioTRmI4Z1lTJ+T9kzIs7O9?=
 =?us-ascii?q?G0UlN3bN24HJdKtiyXNZN6Tt0+T2xsoio3yb0LtYSlcCQU1pgr3R/SZv2BfoOV?=
 =?us-ascii?q?+BzsTvyRLi19hH99eLKwmRKy8U+4x+3iWcm7zkxKojBGktbSrHAN0QLc6sydRv?=
 =?us-ascii?q?t65Eeh1i6D1wHV6u5aPUA5jbTXJ4Ilz7Iqi5Yev1rPEjXrlEj1kKOabEQp9+qw?=
 =?us-ascii?q?5+TieLrmp5ucN4FuigH5N6Qjgsi/AeU+MggTUGmX4Oe826P5/U3/XrpKiuQ6kq?=
 =?us-ascii?q?7XsZDcO8sbvLW0AxFa0ok98RazFTSm38oCnXkBMl1FfAiLj4/zO1HBOPz4F+uw?=
 =?us-ascii?q?g0ywkDd3wPDLJrnhApTOLnfdirvgcqt95lVYyAoyy9Bf+p1VBqsAIPL1Rk/+qt?=
 =?us-ascii?q?jYAgUlPAyzxubtEM992Z8GWWKTHq+ZN7vfsV+S6eIuP+mDfogVtCz9K/g4/fHu?=
 =?us-ascii?q?i3A5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5SezgkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIChDYjdXIytg7uB3CG9Hp1RfW1GDlGMEXH1d4SLQfsMaSSSItN/nTwA?=
 =?us-ascii?q?T7SuV4gh1RS2vg/g17VnNvbU+jEftZ/7ztd1/O3TlRYx9TBuFcSSyWONQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwcwLYTcwPBiC9DuRgLBec+ESFW8?=
 =?us-ascii?q?TdWgGz0xStMxzMUIY0ZyANiiihHD3yy3A74ajbCLBZo08r7C0Hj1Pcpy13HG1K?=
 =?us-ascii?q?w5hVk8XsRPLXGmhrJ49wXLGoHGiVuZmLiweaQcxiHN8nyDwnSIvE1fVA5wUqDF?=
 =?us-ascii?q?XXQEa0vSrNT54F7CTrC0BbQmNAtB1dCNKq9QZtL1ilVGQe/pOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uRY4XwZWUSwj/RCEgenAAV5naJKw4+Czylo2LfCjxuCF3ub1nt8el4tHO0?=
 =?us-ascii?q?UEs0wxuWYE1m0rq/4gQViuCES/MPwrIEvz8sqyl1HFa42NLWF9qApgp7cKVAe9?=
 =?us-ascii?q?89501H1WbYtwx7MZytNKRihl8YcwRqsELizRR3CoNckcc0qHMm1hZ9KaWd0FlZ?=
 =?us-ascii?q?bTOXwYjwOqHLKmn15B2gcarW1U/R0dmI+qYD8u83q0j+sw6zEEoi8HJn08dO3n?=
 =?us-ascii?q?uY55XKChcSUJ3rXkY28Rh6u6/VYi0n64zI0n1sNLG+siXe1NIxGOsl1hGgcs9f?=
 =?us-ascii?q?MaOZDgP9D9cWBsmuKOMwnVipYQkJPORT9K4yIsOneOGK2K+tPOZ8gj2miX5L75?=
 =?us-ascii?q?x60kKJ7yB8UPLH344Zw/GE2QuKTy38jFa9vc/tg4BLeDYSEnC5ySf6Ho5RZ7R+?=
 =?us-ascii?q?cpoRBmeqPsK42M9+h5nrW3ND8F6jBlUG2NKmeBaIblz92xFQ2loToXC9hSS4yD?=
 =?us-ascii?q?l0mSkzrqWDxCzO3/jidB0fN29LRWlul1ftLZKvj9AHWkildAwplBqj5UbnyKlX?=
 =?us-ascii?q?vqV/L2/PQUhWeyj6NX1tUqy1trCaec5A9IsosTlLUOS7eV2aSKTyowEZ0yPgGG?=
 =?us-ascii?q?tS3is7eCupupX6nhx6jnySLHBooXrdeMFwwwrf5dPGSf5Q2DoGWDd3iT3NCleg?=
 =?us-ascii?q?ONmp+M2el43fveCmS2KhSppTfDHrzIyasyu3/29qARy5n/2ont3nEA460TL01t?=
 =?us-ascii?q?VwVCXIqgr8bZfv16igLe1neUxoDkfm68VmAoF+jpcwhJYI1HgZnJqV/GALkWfu?=
 =?us-ascii?q?MdpB36L+Y2EARToKw97T/Qjk11dvLnOPx4LlSHqdxtFtaMW9YmMTwig99dxFCL?=
 =?us-ascii?q?+I7LxYmit4ul+4rQPSYfdnhDscx+Uh6GUGg+4Xogoi1TuSAqodHURDOSzslhKI?=
 =?us-ascii?q?782xralNZWavd6Sw21R6ndy7EL6CpQRcUm7jepg+BS9w8tl/MFXU3X3v7YHkfc?=
 =?us-ascii?q?PcbNMJuR2SjhfAlPNVKJMqm/oOhCpnP3/9vHI/x+46ixxuwY+1vIydJ2px+6K5?=
 =?us-ascii?q?BwZSNifpaMML5jHtkaFek96N0I+1GZVhHigLUIHsTfK1Cz8SsfXnNwCTEDwzsH?=
 =?us-ascii?q?ubGLzfHROB50ditX7AD5erN3SPLnkD0dpiXAWdJFBYgA0MXjU1hJs5GR6xxMD7?=
 =?us-ascii?q?bEd1/DMR5kP7qhtRzOJnLQL/X3zbpAepbDc0VZeeIABX7gFE+0faL8ie4vhvEC?=
 =?us-ascii?q?Ff+52rtBaNJXCDZwRUEWEJXVSJBlDkPrmz/NnA7vKXBuykI/vVZrWOr+NeWuyM?=
 =?us-ascii?q?xZKu1Itm4jmNOt+OPnlkE/00xE5DUWplFMTenjUFUzYXmD7Vb86HuBe8/TV6rs?=
 =?us-ascii?q?Ch//TqWwLv5oqPB6FRMdV1/BC2jrmMN/SNhCZiMjtY0pIMxXnVyLkQxlISiidu?=
 =?us-ascii?q?dyWzHrQEryLCUKXQmqpPBR4BdyxzLNdI77473gRVI8Hbl8j61qRmgf81EVtFUV?=
 =?us-ascii?q?3hl9qtZcwLJWG9KVzGCFyKNLSAOT3E3cX3bbmgRr1XieVerwewtiqDE0//IjSD?=
 =?us-ascii?q?kCHkVwyuMeFJli2UIAZSt529chlzD2juV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuY7/PXKpATsftqBCR7j+Nb4HQgxLtT?=
 =?us-ascii?q?4yFJX/h1mCrUrt5zrFCqiOiPyjx7UBVQrjZHnp6EvUJnOfaRyp4VYmrJ5BIA6y?=
 =?us-ascii?q?26DAUG749+ANr+t4hTx8LJmaa1Ly1NpYH658wZUvXQJoqnOXw6Kh3vUGrJCAVD?=
 =?us-ascii?q?TTetLnrYgWRZkfeb7HrTqYI1/Mu/0KESQ6NWAQRmXsgRDV5oSZlbeM96?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BvAQB0Cghch0O0hNFdB4IXg2wng3mUJ?=
 =?us-ascii?q?4INFGiWUBSBXywTAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQE?=
 =?us-ascii?q?BAQECAQECIAQZAQEqCgMBBAEJAQEKCwMKAgImAgIDHxIBBQEcBhMFA4MZgXoIB?=
 =?us-ascii?q?Zo/PIodcHwzgnYBAQWHJAgSeYsTgVc/gRGCXTWEZQQBBAiDD4JXiSNAgUGUX1U?=
 =?us-ascii?q?HAoIgBI8eGJEvmG8wgSYBggtNMHQGgjWLHIVAPjOBBQEBiA8pAYIjAQE?=
X-IPAS-Result: =?us-ascii?q?A0BvAQB0Cghch0O0hNFdB4IXg2wng3mUJ4INFGiWUBSBXyw?=
 =?us-ascii?q?TAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIAQZA?=
 =?us-ascii?q?QEqCgMBBAEJAQEKCwMKAgImAgIDHxIBBQEcBhMFA4MZgXoIBZo/PIodcHwzgnY?=
 =?us-ascii?q?BAQWHJAgSeYsTgVc/gRGCXTWEZQQBBAiDD4JXiSNAgUGUX1UHAoIgBI8eGJEvm?=
 =?us-ascii?q?G8wgSYBggtNMHQGgjWLHIVAPjOBBQEBiA8pAYIjAQE?=
X-IronPort-AV: E=Sophos;i="5.56,318,1539673200"; 
   d="scan'208";a="55052701"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 09:29:57 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727889AbeLER3x (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 12:29:53 -0500
Received: from mail-ua1-f66.google.com ([209.85.222.66]:43895 "EHLO
        mail-ua1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727592AbeLER3w (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 12:29:52 -0500
Received: by mail-ua1-f66.google.com with SMTP id z11so7390971uaa.10
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 09:29:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=frWTijycC4SqR9CW1jFxYQtKEVfkRndIMLwTHTMxy50=;
        b=FRz0Tu1wAvD66RLXZE/b3pJp2TRJuZ8jh4xUOwtgigpXf3AjO6cuuRQqymxyt4ehmX
         Bku72nbbY0cjImdPcHeBwKVkzpTiDssbH9Pl36Xqfs9wldPWCkMeVNLliFQMlR+Kh2KK
         ZXuDLr5L0p7Nai3OUyyrgf5VxPkjDD9SZa6Gg=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=frWTijycC4SqR9CW1jFxYQtKEVfkRndIMLwTHTMxy50=;
        b=Y94l45e3r2xq3EwHu3wvPIOKTzZ7QYWrtNiCP1Tfc1EK41GtcWycU1l90wSaf8z6o1
         RuB7PgNWfmL7sX5IcEiq+WUJrVnQWiTQpCEBCGTAeDU2hZak28YISLz9iqNReIebw8Kb
         QmqjbBXmEuWlG7elyiDjhannRG1jas77ZW5JHPKir/+JGwQjQRan4DchrzeNcyK2KZi3
         7JMm4CB5i6FL31PfItR6edrjQXkrZkFNd6l764tS5q+QcmV9THAtm0MdQNR1Ob/ujFVx
         budhlYS8CaBY2Xl8a1Ugk9M1SYalXK46lerrYjjkZVrjuJkGgxIo0aH4alVCgMo5kWli
         8UaA==
X-Gm-Message-State: AA+aEWZuPXa8RiAysipa6AVZzEPzQzsgEo0I8IuebG4IzfgcWXxqGyZs
        tEsOlB2GOXLdNZoRddZQsVV+wVuYeB+KIhG3ZlHsqQ==
X-Google-Smtp-Source: AFSGD/WKFg9wJJMltcr3Ev/9z7GH8o7hmBcZfL+Ru2NciLAzIcHK9DR1if/CeoGikC6Ma3wTTyk0I3R4vi4hh28wgDs=
X-Received: by 2002:ab0:526:: with SMTP id 35mr11599644uax.25.1544030990995;
 Wed, 05 Dec 2018 09:29:50 -0800 (PST)
MIME-Version: 1.0
References: <cover.1543219386.git.viresh.kumar@linaro.org> <5a29ceb2704239a8efb4db2e47ca155a422a6e57.1543219386.git.viresh.kumar@linaro.org>
 <CAPDyKFpp1iPQ08QQjoi9b4RGUo2Zw_L_vjy8xtnSpg34gn--eA@mail.gmail.com>
 <20181130095912.7hutbsrihpg4gez4@vireshk-i7> <CAPDyKFocp63hUOYOJ3HUXBj2CcHZGXMQ6n873SmMSfpDhRjB7g@mail.gmail.com>
 <20181130110650.6ni2ft3wud7gn6jz@vireshk-i7> <CAPDyKFr_cG1if1Aozo+4hpQ6jY8sHD1wx91QCTwsnKcF5TwUhw@mail.gmail.com>
 <154399214662.88331.9095652690165763995@swboyd.mtv.corp.google.com>
In-Reply-To: <154399214662.88331.9095652690165763995@swboyd.mtv.corp.google.com>
From: Ulf Hansson <ulf.hansson@linaro.org>
Date: Wed, 5 Dec 2018 18:29:14 +0100
Message-ID: <CAPDyKFoW=WnOu-0twwcaMprWiV8UzAOP8vQN5Pase_km58VXMA@mail.gmail.com>
Subject: Re: [PATCH V2 5/5] PM / Domains: Propagate performance state updates
To: Stephen Boyd <sboyd@kernel.org>
Cc: Viresh Kumar <viresh.kumar@linaro.org>,
        "Rafael J. Wysocki" <rjw@rjwysocki.net>,
        Kevin Hilman <khilman@kernel.org>, Pavel Machek <pavel@ucw.cz>,
        Len Brown <len.brown@intel.com>,
        Vincent Guittot <vincent.guittot@linaro.org>,
        Rajendra Nayak <rnayak@codeaurora.org>,
        Niklas Cassel <niklas.cassel@linaro.org>,
        Linux PM <linux-pm@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Mike Turquette <mturquette@baylibre.com>,
        grahamr@codeaurora.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, 5 Dec 2018 at 07:42, Stephen Boyd <sboyd@kernel.org> wrote:
>
> Quoting Ulf Hansson (2018-12-03 05:38:35)
> > + Stephen, Mike, Graham
> >
> > On Fri, 30 Nov 2018 at 12:06, Viresh Kumar <viresh.kumar@linaro.org> wrote:
> > >
> > > On 30-11-18, 11:18, Ulf Hansson wrote:
> > There is one a big difference while comparing with clocks, which make
> > this more difficult.
> >
> > That is, in dev_pm_genpd_set_performance_state(), we are *not* calling
> > ->the set_performance_state() callback of the genpd, unless the genpd
> > is already powered on. Instead, for that case, we are only aggregating
> > the performance states votes, to defer to invoke
> > ->set_performance_state() until the genpd becomes powered on. In some
> > way this makes sense, but for clock_set_rate(), the clock's rate can
> > be changed, no matter if the clock has been prepared/enabled or not.
> >
> > I recall we discussed this behavior of genpd, while introducing the
> > performance states support to it. Reaching this point, introducing the
> > master-domain propagation of performance states votes, we may need to
> > re-consider the behavior, as there is evidently an overhead that grows
> > along with the hierarchy.
> >
> > As a matter of fact, what I think this boils to, is to consider if we
> > want to temporary drop the performance state vote for a device from
> > genpd's ->runtime_suspend() callback. Thus, also restore the vote from
> > genpd's ->runtime_resume() callback. That's because, this is directly
> > related to whether genpd should care about whether it's powered on or
> > off, when calling the ->set_performance_state(). We have had
> > discussions at LKML already around this topic. It seems like we need
> > to pick them up to reach a consensus, before we can move forward with
> > this.
>
> What are we trying to gain consensus on exactly?

Apologize for not being more clear. Let me re-phrase the question.

Should genpd (via genpd's internal runtime suspend callback) reset the
performance state for a device to zero, when that device becomes
runtime suspended?

Of course, if such reset is done, then genpd should also re-compute
the aggregation of the performance states for the corresponding PM
domain (and its master domains). Consequentially, these operations
then needs to be reversed, when the device in question becomes runtime
resumed.

>
> I've been thinking that we would want there to be a performance state
> 'target' for the 'devices are runtime suspended' state that we apply
> when the genpd is powered down from runtime PM suspend of all devices in
> the domain. This would then be overwritten with whatever the aggregated
> performance state is when the genpd is powered back on due to some
> device runtime resuming.

From the above, I assume "target" to not always be zero. That confirms
my understanding from earlier discussions.

That is sort of what we already have today. The consumer driver are
free to change the performance state, via
dev_pm_genpd_set_performance_state() (or indirectly via
dev_pm_opp_set_rate()), for its device at any time. For example, it
may want to set a new performance state at runtime suspend.

> Don't we already sort of have support for this
> right now in genpd with commit fc5cbf0c94b6 ("PM / Domains: Support for
> multiple states")? So I would think that we either let that state_idx
> member be 0 or some implementation defined 'off' state index of the
> genpd that can be achieved.

Well, implementation details, but thanks for sharing your ideas.

> I was also thinking that the genpd_power_state was more than just a
> bunch of idle states of a device so that we could combine
> on/off/idle/active(performance states?) into one genpd_power_state
> space that is affected by idle and on/off runtime PM status.
>
> In the Qualcomm use-case, the state of the clk, either on or off, is
> factored into the decision to consider the voltage constraint that the
> clk has on the CX domain. So when the clk is disabled, the voltage
> constraint on CX can be removed/ignored in the aggregation equation
> because the hardware isn't clocking. This needs to work properly so that
> devices can disable their clks and save power.
>
> I hope that we can move clk on/off/rate control to be implemented with
> clk domains based upon genpds so that we can generically reason about
> genpds being on/off and at some performance state (i.e. a frequency)
> instead of making something clk specific in the genpd code. If we can do
> that, then this can be stated as a slave genpd (the clk domain) that's
> linked to a master genpd (the voltage/corner domain) can only affect the
> performance state requirement of the master genpd when the slave genpd
> is on. When the slave genpd is off, the performance state requirement is
> dropped and the master domain settles to a lower requirement based on
> the other domains linked to it that are on. The clk domain would turn on
> and off when the set of devices it is attached to are all suspended and
> that would "do the right thing" by bubbling up the requirements to the
> master domain this way.

This sounds to me, like there are reasons to keep the existing
behavior of genpd, thus leaving the performance state as is during
runtime suspend/resume.

But, on the other hand it also seems like a common case to reset the
performance state of a device to zero at runtime suspend. This leads
to that lots of boilerplate code needs to be added to driver's
->runtime_suspend|resume() callbacks, calling
dev_pm_genpd_set_performance_state() or dev_pm_opp_set_rate().

Maybe we should just wait and see what happens to consumer drivers, as
they starts deploying support for this.

Kind regards
Uffe
