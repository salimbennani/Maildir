Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:53:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E94085804C1;
	Wed,  5 Dec 2018 06:24:53 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 06:24:53 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArtSXbRzpx99KZB/XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4SKfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJYBAfQdMuZDt4nwpUADrQeiCQS2GO/j1iNEi33w0KYn0+ohCwbG3Ak4Et0AtH?=
 =?us-ascii?q?TUosj+OqUIXuCz16nI1jLDb/VL0jr69YjIdh4hreuMXb1qd8rR0lIvFwTDjliL?=
 =?us-ascii?q?rYzlPjWV2f4Xs2ic9eZgUvivi2E+pgx3vzOhxd8sh5HXio4Jzl3I7zh1zYgrKd?=
 =?us-ascii?q?GiVUJ2YsKoHIFRuiyYL4d6XN8uTmVytCs5yrAKo4C3cDUIxZg9xhPSa/qKeJWS?=
 =?us-ascii?q?7B35TuaeOzJ4iWpleL2hgxay9lCtyvPzVsaqylZGtClFncfWtnALyRPT7tKLSv?=
 =?us-ascii?q?xn/keuwTqP1gbT5f9YIU0si6bXN5oszqQtmpcdr0jPBDL6lUbqgKOMd0gp+PCk?=
 =?us-ascii?q?6+H9bbXnop+cOZV0igb7Mqk2nsy/AOI4MhUBXmSC+uSzyqfj/UvnT7VOl/E2la?=
 =?us-ascii?q?fYsJbEKsQBvaO5HQBV3Zg56xqlDDepzs4YnX8ZI1JBYh6HiJLpO17WLPDiEfi/?=
 =?us-ascii?q?m0iskCtsx/3eOr3hA5bNIWbZnLbuYLZw8EpcyAs1zdBC6JNYELABIPTvWkDvsN?=
 =?us-ascii?q?zUFAM2Mwuxw+z/EtVyypseWX6TAq+eKK7SsUWH5uMzI+aWY48Zojb9K+U/6P7o?=
 =?us-ascii?q?gn80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TObykl2NTSZTZ2quX6?=
 =?us-ascii?q?I7/jw7CoWmApnZSoCuh7yB2iG7HppNa2BCC1CMF2rodoqeV/cNbiKSPtFukjge?=
 =?us-ascii?q?Wbe9TI8h0AmktBXmxLp/MurU5ioYuIr529hu5+3TkhIy+SZuD8uH0WGAVGV0nm?=
 =?us-ascii?q?IORz8r06Fzu019ylGf0admh/xUD8Bc5/RMUg0iL57T0/R6C8zuWgLGZtqJS0yp?=
 =?us-ascii?q?QtO8DTE1T9I+2dkOY0lmFtWmjxDD2TeqArAPm7yKApw07rzT33zrK8lhzHbG0b?=
 =?us-ascii?q?Erj0M6TctXKW2mmql/+hDOCIHTjUWWibymdaQG0y7L72eM02yOsEZcUA5zVKXF?=
 =?us-ascii?q?WWsSZk/XrdT/+0PDQKWiCbUhMgtd18GCLrFGZcHujVVDXP3jIsjRY3qtm2esAh?=
 =?us-ascii?q?aF3q6DY5D0e2oDxindCFILkwYI/XmYMwgzHSOho2PYDDxzGlPjeULs8e9iqHyl?=
 =?us-ascii?q?Sk841R2Fb0pk17Ct4B4ameScS+8P3rIDoCohtzR0HFO639LKC9qBpxBtfLlGbd?=
 =?us-ascii?q?M6+ldH0WPZtwpyPpG7K6Bih1gecxl4vk/01hV3DJlAntYurH8w0AVyLqeY2ktb?=
 =?us-ascii?q?dzyExZDwJqHXKm7q8R+1b67ZxF7f38iW+6sV8/s4tkjssxuvFkoh9HVnzcJY03?=
 =?us-ascii?q?+d5pXMEQoTXoj9Ukcx9xhmub7aZjMx6J/T1X1pKaO0qCPN28o1BOs5zRatZ9de?=
 =?us-ascii?q?ML6eGADuCcEbBsiuJ/Ysm1imdR8EOOFS9KgpP8KpbfeG2airPPp+kzKil2hI/I?=
 =?us-ascii?q?d90keU/SpmVuHIx4oFw+2f3gafTTf8jUuuvdrtmY9ZYjEeBGy/xjb+BI5Qf6F9?=
 =?us-ascii?q?YZwECWOzLMKp3NV+gJjtVmVc9F6iAVMGxcCodQCTb1z7wQ1fy0AXrWa7liu/yj?=
 =?us-ascii?q?x+iyspobaH3CzS3+TicwIKO25KRGV4jVbgO5O0j80cXEWzawgplR2l5Vv1xqRB?=
 =?us-ascii?q?paR/KXXTTllMfyTsM25iVa6wvKKYY8FT8JMorTlXUOOkbFCYULH9uRga0yDkH2?=
 =?us-ascii?q?dE3zA0bTKqupb4nxx8lm2dKm1+rH7YecF22Bfe68bQRf9X3joaWiZ4jSPbCUS7?=
 =?us-ascii?q?P9ms5d+UjYvMsviiV2K9UZ1eaSnqwpmHtCeh521qABu/kuu3mt3mFwg6zCD628?=
 =?us-ascii?q?NrVSXOsBbzfI3r276mPuJge0liHEX85NZiGoFijoswg4kd2XsAiZWU53YHkXrz?=
 =?us-ascii?q?Ps9d2aLxd3cNQT8Lw9jI4AnqwkFjL3SJx57nWXWZ2Mdue966YmYO0CIn889KEL?=
 =?us-ascii?q?uU7KBDnSZtp1q4rAHRbuJnkjYT1/Qu82IajP8TuAU20CqdGL8SEFJcPSztkRSI?=
 =?us-ascii?q?8t+/oL9WZGapbbi/yk5+kcq9A7GFpwFWQGz5dYs6HS9s8sV/N0rB0GH06oHhYt?=
 =?us-ascii?q?XRbMgcthuJkxfblOhVKYk8lv4LhSphJGL8smcpy+89jRxyw566uJKLJHlq/KK8?=
 =?us-ascii?q?GhRYLCH6Z9sP+jHxiqZTht2Z0JqoHpVlBzUHRp/oTe+zHTIWtPTnMRuOETImpn?=
 =?us-ascii?q?eaH7rfARGQ6EN8o33TFJCrMmmdJGMFwtV6WBmdOEtfjRgWXDogm542CBuqyNb9?=
 =?us-ascii?q?cEtj5TAR+134qgZKyu1yLBnySWPfpAauajcpR5mTNhtW7gde50jLNcyS9P58Hy?=
 =?us-ascii?q?Zd/pe5tgyCNnSbZxhUDWEOQkGFB1fjPqS35dnd6eeYAPCyL+DJYbWIpuxTTPOI?=
 =?us-ascii?q?xZOp0ot78DeALMSPPn9+D/Il3kpPR2x2G8Pcmz8XUSwYizrNb9KHpBe74iB3rt?=
 =?us-ascii?q?6w8PXoWALs5IuDEbhSMc9o+xC5n6iDLfOQhD1iJDZc15MMw2LIybcF0F4TjSFu?=
 =?us-ascii?q?ayeiEbAauSHRS6LQn7ddDwQHZCNrKMtI86U80xFXNs7Gkdz1zKB3j/4vB1dBVF?=
 =?us-ascii?q?zsgcWpZc0MI2GgO1LLHkeLNLKaJTLVx8H7e7+zSbpVjO9MrR2/pS6bE1P/PjSE?=
 =?us-ascii?q?jzTpSxGvMeRWgC6HJhBRpIG9fQhrCWX4SNLmaxu7MMJ4jDEswL00gG/KOnAYMT?=
 =?us-ascii?q?Rmb0xNqbiQ5ztCgvpjA2xB8mZlLe6clieZ9ebYLJMWsfptAitsluNa4G41y71a?=
 =?us-ascii?q?7CxfQPx1mS3SrsNhol28k+mPzCZnXwRKqjpRmI2LukBiau3l8cxcWHDVug0M62?=
 =?us-ascii?q?mCGTwFotJkDpvkvKUD5MLIkffOLDkK09vS5tAbAYCANcaJdnooNwHyHzj8CAoD?=
 =?us-ascii?q?RCSsc2bFiBoOw7mp6nSJo81i+dDXk50UR+oeDQRtGw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DmAQBz3gdch0O0hNFkgheDbCeDeZQng?=
 =?us-ascii?q?g0UiH6JQYR5gXMsEwGHUiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmI?=
 =?us-ascii?q?BAgMBAiAEGQEBNwEFCQEBCgsNAgImAgIDHgESAQUBHBkFgxyBagMVBZlHPIodc?=
 =?us-ascii?q?HwzgnYBAQWFAw2CFAgSeYsTgVc/hCOCV4UugleJKwqBb4QTgUyPJy4HAoIgBIt?=
 =?us-ascii?q?wgy4YgVuIO4cZLI5TiXAwgSwBggVNMHQGgjWCJxeIXoVAPjOBBQEBilwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DmAQBz3gdch0O0hNFkgheDbCeDeZQngg0UiH6JQYR5gXM?=
 =?us-ascii?q?sEwGHUiI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIBAgMBAiAEGQEBN?=
 =?us-ascii?q?wEFCQEBCgsNAgImAgIDHgESAQUBHBkFgxyBagMVBZlHPIodcHwzgnYBAQWFAw2?=
 =?us-ascii?q?CFAgSeYsTgVc/hCOCV4UugleJKwqBb4QTgUyPJy4HAoIgBItwgy4YgVuIO4cZL?=
 =?us-ascii?q?I5TiXAwgSwBggVNMHQGgjWCJxeIXoVAPjOBBQEBilwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="65431017"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 05 Dec 2018 06:24:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727278AbeLEOYr (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 09:24:47 -0500
Received: from mail-vs1-f65.google.com ([209.85.217.65]:36844 "EHLO
        mail-vs1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727575AbeLEOYr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 09:24:47 -0500
Received: by mail-vs1-f65.google.com with SMTP id v205so12178495vsc.3
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 06:24:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=Hn1arwVE4ACKQ+qm2z7nQF28/vDd3cWKfLDYp2IP3ZU=;
        b=g9YfHtygVAfxdUM9kVinuEnD/bTRoIgcGm8U1cav4pjVErUT+6xbxugKblX3VNfDHv
         tzld2mgi/E2lzj13RbpCVXhNNdHsghiD4m05imY6rKMWQS4+cltgBeyyFiXE99w/aSOu
         3AgNry2KltjViQdOTqwvTviaW4+FJY/5ggyTU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=Hn1arwVE4ACKQ+qm2z7nQF28/vDd3cWKfLDYp2IP3ZU=;
        b=CuWkSoOWWy++noHYQZIplvbST5JYR6gBYhjQ5y8D6dZo5x4JAans/YtX633+oFAUK9
         sN+H2Q7Xp5HMojGmn66ZGxalsJykC7FsUobg34qpv4YdBbJtO+GivR4/trZ4lXqRXu4o
         O/sz4HcBtlsh+z0X2ExjRep9xPnMNgZ6DRiF8hHIxAvIp1dJPGA73LD+igs0X450/Yd3
         J2VhJ2mmhAlTpE13+rZbLLVdfe78PY9QaIHM4bIVg9QXpUHp4CfUOEVWhLyKfK5o0/Mr
         0vMM76GEpOIpyt9CPLTvzoIJcZvMmpeqRhds12vaCmcnu0i27KuTAT9MX9cTt8Poy+Tn
         rTFw==
X-Gm-Message-State: AA+aEWZm0FTZo1wqjGL1j7M7Tk32Xu7bLYrxvJskXI1MilW5uGvcwO4/
        aYUL6xUVm2FmsOXFphtGz2zMI4Hcveokpsjl44yIEA==
X-Google-Smtp-Source: AFSGD/UCTdghTei9ZRVB/jXrf1Ed+/rOyVV14g1PlVKx5WCAiTW2SyoFNfnIczfJ81x4gRN175EOcJkNvF3TZmW0/AI=
X-Received: by 2002:a67:7685:: with SMTP id r127mr10763045vsc.35.1544019885509;
 Wed, 05 Dec 2018 06:24:45 -0800 (PST)
MIME-Version: 1.0
References: <20181201152457.8252-1-tiny.windzz@gmail.com>
In-Reply-To: <20181201152457.8252-1-tiny.windzz@gmail.com>
From: Ulf Hansson <ulf.hansson@linaro.org>
Date: Wed, 5 Dec 2018 15:24:09 +0100
Message-ID: <CAPDyKFqLXR1Ez4952cXw2GShQ36+p_9NmraJCqufEKmYaTpVgA@mail.gmail.com>
Subject: Re: [PATCH] mmc: convert to DEFINE_SHOW_ATTRIBUTE
To: tiny.windzz@gmail.com
Cc: Ludovic Desroches <ludovic.desroches@microchip.com>,
        nicolas.ferre@microchip.com, alexandre.belloni@bootlin.com,
        Ben Dooks <ben-linux@fluff.org>,
        Adrian Hunter <adrian.hunter@intel.com>,
        Linus Walleij <linus.walleij@linaro.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Tony Lindgren <tony@atomide.com>,
        Andreas Kemnade <andreas@kemnade.info>, Kishon <kishon@ti.com>,
        "linux-mmc@vger.kernel.org" <linux-mmc@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Linux ARM <linux-arm-kernel@lists.infradead.org>,
        linux-omap <linux-omap@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, 1 Dec 2018 at 16:25, Yangtao Li <tiny.windzz@gmail.com> wrote:
>
> Use DEFINE_SHOW_ATTRIBUTE macro to simplify the code.
>
> Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>

Nice cleanup, applied for next, thanks!

Kind regards
Uffe

> ---
>  drivers/mmc/core/mmc_test.c   | 14 ++------------
>  drivers/mmc/host/atmel-mci.c  | 31 +++++--------------------------
>  drivers/mmc/host/omap_hsmmc.c | 14 ++------------
>  drivers/mmc/host/s3cmci.c     | 30 ++++--------------------------
>  4 files changed, 13 insertions(+), 76 deletions(-)
>
> diff --git a/drivers/mmc/core/mmc_test.c b/drivers/mmc/core/mmc_test.c
> index ef18daeaa4cc..eabb1cab1765 100644
> --- a/drivers/mmc/core/mmc_test.c
> +++ b/drivers/mmc/core/mmc_test.c
> @@ -3145,17 +3145,7 @@ static int mtf_testlist_show(struct seq_file *sf, void *data)
>         return 0;
>  }
>
> -static int mtf_testlist_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, mtf_testlist_show, inode->i_private);
> -}
> -
> -static const struct file_operations mmc_test_fops_testlist = {
> -       .open           = mtf_testlist_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(mtf_testlist);
>
>  static void mmc_test_free_dbgfs_file(struct mmc_card *card)
>  {
> @@ -3216,7 +3206,7 @@ static int mmc_test_register_dbgfs_file(struct mmc_card *card)
>                 goto err;
>
>         ret = __mmc_test_register_dbgfs_file(card, "testlist", S_IRUGO,
> -               &mmc_test_fops_testlist);
> +               &mtf_testlist_fops);
>         if (ret)
>                 goto err;
>
> diff --git a/drivers/mmc/host/atmel-mci.c b/drivers/mmc/host/atmel-mci.c
> index be53044086c7..7469a7e369c0 100644
> --- a/drivers/mmc/host/atmel-mci.c
> +++ b/drivers/mmc/host/atmel-mci.c
> @@ -446,18 +446,7 @@ static int atmci_req_show(struct seq_file *s, void *v)
>         return 0;
>  }
>
> -static int atmci_req_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, atmci_req_show, inode->i_private);
> -}
> -
> -static const struct file_operations atmci_req_fops = {
> -       .owner          = THIS_MODULE,
> -       .open           = atmci_req_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(atmci_req);
>
>  static void atmci_show_status_reg(struct seq_file *s,
>                 const char *regname, u32 value)
> @@ -583,18 +572,7 @@ static int atmci_regs_show(struct seq_file *s, void *v)
>         return ret;
>  }
>
> -static int atmci_regs_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, atmci_regs_show, inode->i_private);
> -}
> -
> -static const struct file_operations atmci_regs_fops = {
> -       .owner          = THIS_MODULE,
> -       .open           = atmci_regs_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(atmci_regs);
>
>  static void atmci_init_debugfs(struct atmel_mci_slot *slot)
>  {
> @@ -608,13 +586,14 @@ static void atmci_init_debugfs(struct atmel_mci_slot *slot)
>                 return;
>
>         node = debugfs_create_file("regs", S_IRUSR, root, host,
> -                       &atmci_regs_fops);
> +                                  &atmci_regs_fops);
>         if (IS_ERR(node))
>                 return;
>         if (!node)
>                 goto err;
>
> -       node = debugfs_create_file("req", S_IRUSR, root, slot, &atmci_req_fops);
> +       node = debugfs_create_file("req", S_IRUSR, root, slot,
> +                                  &atmci_req_fops);
>         if (!node)
>                 goto err;
>
> diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
> index 467d889a1638..6094e9e687b1 100644
> --- a/drivers/mmc/host/omap_hsmmc.c
> +++ b/drivers/mmc/host/omap_hsmmc.c
> @@ -1652,7 +1652,7 @@ static struct mmc_host_ops omap_hsmmc_ops = {
>
>  #ifdef CONFIG_DEBUG_FS
>
> -static int omap_hsmmc_regs_show(struct seq_file *s, void *data)
> +static int mmc_regs_show(struct seq_file *s, void *data)
>  {
>         struct mmc_host *mmc = s->private;
>         struct omap_hsmmc_host *host = mmc_priv(mmc);
> @@ -1691,17 +1691,7 @@ static int omap_hsmmc_regs_show(struct seq_file *s, void *data)
>         return 0;
>  }
>
> -static int omap_hsmmc_regs_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, omap_hsmmc_regs_show, inode->i_private);
> -}
> -
> -static const struct file_operations mmc_regs_fops = {
> -       .open           = omap_hsmmc_regs_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(mmc_regs);
>
>  static void omap_hsmmc_debugfs(struct mmc_host *mmc)
>  {
> diff --git a/drivers/mmc/host/s3cmci.c b/drivers/mmc/host/s3cmci.c
> index f77493604312..51069a43d609 100644
> --- a/drivers/mmc/host/s3cmci.c
> +++ b/drivers/mmc/host/s3cmci.c
> @@ -1406,18 +1406,7 @@ static int s3cmci_state_show(struct seq_file *seq, void *v)
>         return 0;
>  }
>
> -static int s3cmci_state_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, s3cmci_state_show, inode->i_private);
> -}
> -
> -static const struct file_operations s3cmci_fops_state = {
> -       .owner          = THIS_MODULE,
> -       .open           = s3cmci_state_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(s3cmci_state);
>
>  #define DBG_REG(_r) { .addr = S3C2410_SDI##_r, .name = #_r }
>
> @@ -1459,18 +1448,7 @@ static int s3cmci_regs_show(struct seq_file *seq, void *v)
>         return 0;
>  }
>
> -static int s3cmci_regs_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, s3cmci_regs_show, inode->i_private);
> -}
> -
> -static const struct file_operations s3cmci_fops_regs = {
> -       .owner          = THIS_MODULE,
> -       .open           = s3cmci_regs_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(s3cmci_regs);
>
>  static void s3cmci_debugfs_attach(struct s3cmci_host *host)
>  {
> @@ -1484,14 +1462,14 @@ static void s3cmci_debugfs_attach(struct s3cmci_host *host)
>
>         host->debug_state = debugfs_create_file("state", 0444,
>                                                 host->debug_root, host,
> -                                               &s3cmci_fops_state);
> +                                               &s3cmci_state_fops);
>
>         if (IS_ERR(host->debug_state))
>                 dev_err(dev, "failed to create debug state file\n");
>
>         host->debug_regs = debugfs_create_file("regs", 0444,
>                                                host->debug_root, host,
> -                                              &s3cmci_fops_regs);
> +                                              &s3cmci_regs_fops);
>
>         if (IS_ERR(host->debug_regs))
>                 dev_err(dev, "failed to create debug regs file\n");
> --
> 2.17.0
>
