Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 10:41:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D7F315805F0;
	Sat, 15 Dec 2018 05:28:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga003-1.jf.intel.com with ESMTP; 15 Dec 2018 05:28:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AoAGYeh+eRKgyFv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+keIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDwULs6Wymt771zRRDnhi?=
 =?us-ascii?q?cINT43/m/UhMJtkqxUvAmhpwR9zoPPfIGZKOBzcr/Bcd8GR2dMWNtaWSxbAoO7?=
 =?us-ascii?q?aosCF/YPPedEoIn9vVQOtwaxDhSsC+zxyz9IgGT50rMg0+QuDw7GxhErEtUUsH?=
 =?us-ascii?q?TVsNr1NL0dUfqow6XSwzTMcfJW2THm54fWaBAhru+DXahrfMrezEkgDQLFjlGK?=
 =?us-ascii?q?pYP5ODOV0/0Avm6G5ORjTeKik3Arpx11rzS128shhJfFipgIxl3H6Sl12oc4KN?=
 =?us-ascii?q?+gREJlfdKpFIFcuiKaOodsXM8uXXxktDw7x7AHv5OwYTIEx449xxHFbvyKa4iI?=
 =?us-ascii?q?7QznVOaWOTp4mn1ld6ylhxqo8kiv1Pf8Vs+q31ZOtCZFlcPMtn8V2xzS7MiIVO?=
 =?us-ascii?q?d981+/1TqT0w3f8PxILE4qmabBNpIswaI8moASvEnBBiP2nV/5jK6SdkUq4Oio?=
 =?us-ascii?q?7OHnb63ipp+dMY90lw7/Pr0tmsOhG+Q4NBYBX2yC9eS72rzj+1P2QK9Rg/0ona?=
 =?us-ascii?q?nWroraKd4YpqGnGQ9V1Jgs6xKlAzehytQYkmELLEhZdxKfk4jpJ1bOLej8Dfe+?=
 =?us-ascii?q?gFSjji1nxv/bPrD6BpXNL37DkKrufLpn6k5czhYzws5b555OFr4BJ/fzUFfrtN?=
 =?us-ascii?q?PEFh85LxC0w+H/BdV9zIweWH6PDbWeMK/IsV+I+/ggI++DZIIOvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMjmF8de7Wp0oUTaHyiAvtmJECZa2L2gtgdCWcKohY+TOvyhV2AVj5ceWy+X6?=
 =?us-ascii?q?E75jE9DoKmCpzORoSsgLyHwSe6EYdaZmFAClCQD3joc5+IVOsLaCKXOsVhiCAL?=
 =?us-ascii?q?VaC9S4890hGjrBX1y6FnLurT+S0Ur4jj28J35+DIkREy9Dp0D9mS0m2XTmF0mH?=
 =?us-ascii?q?8ISCEy3KxlvUN9zVKD27Big/NEDdxT++9JUgAiOJ7f1eN6Dcr+WgbAftiTTlam?=
 =?us-ascii?q?Tc6rATUwTtI33t8PbFxxG9SkjhDfwSWqB6UZmKCMBJwx6qjcxWT+J95hy3ba06?=
 =?us-ascii?q?ksl0QpTdFRNWK4nKJ/9xLcB4jSk0qHkaamcqAc3C3I9GeH1meOuEBYUAhtUaTK?=
 =?us-ascii?q?R3wfZ03Wrcjn6UPGVbOhFbMnMg5Zw86YNqRKcsHpjUlBRPr7JdvReXyxlHmqCR?=
 =?us-ascii?q?aI3LyMapHqdHsb3CjGDEgEkgYT/WuJNAQkByehpX7eAyJqFV71f0zs9ux+omuh?=
 =?us-ascii?q?TkAo1wGKc1Fh172t9x4JhPycTvQT3q4EuCYhsTl0AEyx39XMC9qEpgpheqpcbM?=
 =?us-ascii?q?g54FdG02LZqgN8MoahL6Bkml4RbQB3s1ny2BVwD4VKidIqo28yzApuNaKY10tM?=
 =?us-ascii?q?eCmc3Z/uNbzYNGnz8Aq0ZK7Lx17RytCW+qQI6PQmsFjjuACpFkw/83RoydVV0n?=
 =?us-ascii?q?2c5onUAwoWS57+TkE39x1irbHAfiY9/5/U1WFrMaSssj7CxsglC/c/xhehf9dQ?=
 =?us-ascii?q?KqWEFADpHs0eBsiuLvEqmlezYhIFOuBS6LA7P8e8e/Sa366rOf5qnCi6gmRf/I?=
 =?us-ascii?q?B9zkWM+jJmSu7Jw5kK2euY0RaAVzvmileurNr3mYFdaT4OBGW/zTXrC5BLZq11?=
 =?us-ascii?q?e4YGEmOuI8yxxtVjiJ/hQX9Y9Fi/B1wY3M+lYwadb1v43QdIz0QYvWSnmTekzz?=
 =?us-ascii?q?xzizworquf0DbOwuj4bxoHJ2hLSXJmjVftJ4i0kt8bUFKpbwgviBuq+0L6y7JH?=
 =?us-ascii?q?q6R4KmnZWV1IcDTuL2F+TquwsaKPY8xV55MysiVXU+O8bUqBSrHnoBsa0CLjH2?=
 =?us-ascii?q?1AyzA9bDyqvpT5nxpniGOSNnpzrXzZed1uyhfb/tDTWflR3j8eTililTbXHkS8?=
 =?us-ascii?q?P8Wu/diMl5bMqOe+W3ijVp1Sdynm1oeAtCq95W13DhyzhfGzmtv7EQck1S/3zc?=
 =?us-ascii?q?VlVSLNrBzkeInky7y6Mf57fklvHFL86NB1GoBknoswmZEfw34ahpqO8HoDkGfz?=
 =?us-ascii?q?N8hb2K3kYHoMQz4L38Da4Az/1EJ/KXKJwprzVm+Bzct5e9m6fmQW1zo478BLC6?=
 =?us-ascii?q?eb9qZInCVrrVqjsQLef+J9kSwDxvs0534XmOUJuAsrziWADbEeB0hYPSrwlxuW?=
 =?us-ascii?q?69CytrlYZGGqcbKozkpxgcihDK2eogFbQHv5ZpAiHSpq4sR+Kl3M1mDz6pr/eN?=
 =?us-ascii?q?nRdt8TshyUkxHdj+laMp4xl/wKhTZ5NmL5p3Eq1+k7jRl215GgoIeHM3lt/L6+?=
 =?us-ascii?q?AhNALTL6fcQT+jXwjapEmsaWwpuiHpFgGjUNQZvpQuikEDMUtfT7KQmOFCcwpW?=
 =?us-ascii?q?ucGbraBQWf8ltpr2rTE5C3MHGaPHsZws9nRBaDP0xTmhwUUC85np4kFQCq2crh?=
 =?us-ascii?q?f11i5j0K4l74qx1Myv9nNhXlU2ffohuoZSkwSJSFMBVW6QRC7V/PMcOC9uJzAz?=
 =?us-ascii?q?1Y/pq5oQ2NLWybeh1IDXwTVUyCHVzjJb6u5d/P8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRiwXiS3Nbs2bpBS9+iFtrc?=
 =?us-ascii?q?C/6vPrWA3x6ouVFrtSKs5i+xS3gaeFKu6Rizx1KTde1pMQ23DIzKIT00IViyFr?=
 =?us-ascii?q?bzOtC6gPtTbRTKLMna9aFwQUaz5oO8tS8a093hNBOcrait7u0r54j/g1C0pKVF?=
 =?us-ascii?q?D7m8GpY9AKLH+5NF/dGEmLM7GGLyXRw87reaO8VaFQjOJMuh2suDabFlXvMSiZ?=
 =?us-ascii?q?mzb1VxCgL+dMgTqfPBxfvoG9bxlsBXLiTNLgdh20Ltt3gScqzr0zg3PALXQcPi?=
 =?us-ascii?q?Rkc0NRsr2Q6jtVg/VlFGxH63plLO+ElD6Y7unYMJkWt/RrDz9wl+Jb5nQ61rRU?=
 =?us-ascii?q?4DtFRPxzhCvdsNpur0u6nemIzzo0GCZJ/zZMmZ6CuhxKObjQ6ZRBH33D+UEj92?=
 =?us-ascii?q?KVXi4LrNtsENGnhK1RzNLCjq3+Mn8W6dPf/cIGC47LJcOBOnc7PhfzMDHRBQoB?=
 =?us-ascii?q?CzWsMDeM1ARmjPiO+yjN/dABoZ/2lc9WRw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A0AAAwABVch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N8g3uQFoINFIkSbo1EFIFfLBMBh0ciNAkNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMgjYigmQBAQEBAgEBAiAEGQEbHQEDAQEJAQEFBQsNAgImAgIDHwERAQUBH?=
 =?us-ascii?q?BkFgx2BaAEDDQgFmVQ8ixB8FgUBF4J3BYRAChknDV2BNwIGEnmLM4FXP4ERgxK?=
 =?us-ascii?q?ESh+DIIJXAqEZBwKCJASPMhiRUplVMIElgg5wgQGCO4IbDBeDSopUPjOBBQEBi?=
 =?us-ascii?q?iWCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0A0AAAwABVch0O0hNFkHgEGBwaBUQkLAYNrJ4N8g3uQFoI?=
 =?us-ascii?q?NFIkSbo1EFIFfLBMBh0ciNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYigmQBA?=
 =?us-ascii?q?QEBAgEBAiAEGQEbHQEDAQEJAQEFBQsNAgImAgIDHwERAQUBHBkFgx2BaAEDDQg?=
 =?us-ascii?q?FmVQ8ixB8FgUBF4J3BYRAChknDV2BNwIGEnmLM4FXP4ERgxKESh+DIIJXAqEZB?=
 =?us-ascii?q?wKCJASPMhiRUplVMIElgg5wgQGCO4IbDBeDSopUPjOBBQEBiiWCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,357,1539673200"; 
   d="scan'208";a="57607387"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 15 Dec 2018 05:27:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730200AbeLON1r (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 15 Dec 2018 08:27:47 -0500
Received: from mail-wr1-f66.google.com ([209.85.221.66]:35884 "EHLO
        mail-wr1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729192AbeLON1r (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 15 Dec 2018 08:27:47 -0500
Received: by mail-wr1-f66.google.com with SMTP id u4so7006637wrp.3
        for <linux-kernel@vger.kernel.org>; Sat, 15 Dec 2018 05:27:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=0is6RZdTE95QKK/hhbwz5QJMg73ytv622kW2Ph/I3rE=;
        b=rnEXop1OFlhyEqoFRiO8y9xCQXpCx3ty4iJzbrEe7MjF9ywZsf+fpbYmlH0r5Q+6Xi
         QMbErt2tPk+puBH1vqpzqlnG4EKG9E+uzrJwsmeqV5SunP6aXyM77Pe9fanZLwQybQA2
         bEznsWCdeK2R3nkz9aW5xpn4SsCIomms+RxMzjfebzLQySYDIXROMjqNexlDbqIu9eXd
         JMdONZeaPqIiU7phRu0L4Eto/NeiVSn9soQXmHJ0ojiRistm2tjy0MfWDxCX4nzkBT+V
         S538OxSFnVVlEtOJ079j1tN1zqWDT/bkxTY+Uvy60beqwj/jUR0/bh0WbzcrJdzd2RMv
         Zhvg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=0is6RZdTE95QKK/hhbwz5QJMg73ytv622kW2Ph/I3rE=;
        b=PTr3qVyoF6gBfSFJsW+1L6ybovWo5EfRvwFS/OfTIAx3CrjVStxzwNABA53DDV5lzC
         Mdubd6s1HIf5M/wyQFI9gcbNKrKu/rGVPI2vkJOzTOD5HGwwk+l1KiOcgogOsI4iOnng
         7S6ktfWpFZCRVh9C45y3lf5WTIJTye2ayS47t6PXsz/EuRqjWLL8zcKkwVxCvQWJRcpT
         ikfbuZ36K8GDDpj1svjYWEqCaCGwQE4p6tJRVfOPmSNVwkjCTKdNKJrtvTCNshFADToS
         367pzuNu1+PzjXDdyQubSlUQI4A9F2geleKhibo8ypJv9Y0EJLpV3XfRAxZPtBZSMekB
         4q9Q==
X-Gm-Message-State: AA+aEWYXpuxRSiZKZdXmg57X7QzsO75f6ZwAvHfXZfnEOPplLI8Akq+1
        A2GYubMz6J43jpZmieNr17TOhAK1kxIViRqtoamx7g==
X-Google-Smtp-Source: AFSGD/VSLfWR9yqjxswcSZUluJ7dy5OU7owZbFjIdLiTD3VELmrikzZ4DoeamKmvWb/GxycXketTl0OU9X9uhuupew4=
X-Received: by 2002:a5d:6b81:: with SMTP id n1mr5963304wrx.149.1544880464806;
 Sat, 15 Dec 2018 05:27:44 -0800 (PST)
MIME-Version: 1.0
References: <20181209062133.106781-1-houtao1@huawei.com> <ae0156e3-82f7-1ae1-c8dc-2ccf4648fc57@huawei.com>
In-Reply-To: <ae0156e3-82f7-1ae1-c8dc-2ccf4648fc57@huawei.com>
From: Richard Weinberger <richard.weinberger@gmail.com>
Date: Sat, 15 Dec 2018 14:27:33 +0100
Message-ID: <CAFLxGvyR+WNfYPn8Yj_i-1mtvwde4zwiS9he1M8iczEFhZZhjA@mail.gmail.com>
Subject: Re: [PATCH] jffs2: make the overwritten xattr invisible after remount
To: houtao1@huawei.com
Cc: David Woodhouse <dwmw2@infradead.org>,
        linux-mtd@lists.infradead.org, boris.brezillon@bootlin.com,
        LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, Dec 15, 2018 at 2:23 PM Hou Tao <houtao1@huawei.com> wrote:
>
> ping ?

Sorry for the delay.
I'll try now to review all the pending jffs2 patches.

> On 2018/12/9 14:21, Hou Tao wrote:
> > For xattr modification, we do not write a new jffs2_raw_xref with
> > delete marker into flash, so if a xattr is modified then removed,
> > and the old xref & xdatum are not erased by GC, after reboot or
> > remount, the new xattr xref will be dead but the old xattr xref
> > will be alive, and we will get the overwritten xattr instead of
> > non-existent error when reading the removed xattr.
> >
> > Fix it by writing the deletion mark for xattr overwrite.
> >
> > Fixes: 8a13695cbe4e ("[JFFS2][XATTR] rid unnecessary writing of delete marker.")
> > Signed-off-by: Hou Tao <houtao1@huawei.com>
> > ---
> >  fs/jffs2/xattr.c | 55 +++++++++++++++++++++++++++++++++++++++++++++++++------
> >  1 file changed, 49 insertions(+), 6 deletions(-)
> >
> > diff --git a/fs/jffs2/xattr.c b/fs/jffs2/xattr.c
> > index da3e18503c65..b2d6072f34af 100644
> > --- a/fs/jffs2/xattr.c
> > +++ b/fs/jffs2/xattr.c
> > @@ -573,6 +573,15 @@ static struct jffs2_xattr_ref *create_xattr_ref(struct jffs2_sb_info *c, struct
> >       return ref; /* success */
> >  }
> >
> > +static void move_xattr_ref_to_dead_list(struct jffs2_sb_info *c,
> > +             struct jffs2_xattr_ref *ref)
> > +{
> > +     spin_lock(&c->erase_completion_lock);
> > +     ref->next = c->xref_dead_list;
> > +     c->xref_dead_list = ref;
> > +     spin_unlock(&c->erase_completion_lock);
> > +}
> > +
> >  static void delete_xattr_ref(struct jffs2_sb_info *c, struct jffs2_xattr_ref *ref)
> >  {
> >       /* must be called under down_write(xattr_sem) */
> > @@ -582,10 +591,7 @@ static void delete_xattr_ref(struct jffs2_sb_info *c, struct jffs2_xattr_ref *re
> >       ref->xseqno |= XREF_DELETE_MARKER;
> >       ref->ino = ref->ic->ino;
> >       ref->xid = ref->xd->xid;
> > -     spin_lock(&c->erase_completion_lock);
> > -     ref->next = c->xref_dead_list;
> > -     c->xref_dead_list = ref;
> > -     spin_unlock(&c->erase_completion_lock);
> > +     move_xattr_ref_to_dead_list(c, ref);
> >
> >       dbg_xattr("xref(ino=%u, xid=%u, xseqno=%u) was removed.\n",
> >                 ref->ino, ref->xid, ref->xseqno);
> > @@ -1090,6 +1096,40 @@ int do_jffs2_getxattr(struct inode *inode, int xprefix, const char *xname,
> >       return rc;
> >  }
> >
> > +static void do_jffs2_delete_xattr_ref(struct jffs2_sb_info *c,
> > +             struct jffs2_xattr_ref *ref)
> > +{
> > +     uint32_t request, length;
> > +     int err;
> > +     struct jffs2_xattr_datum *xd;
> > +
> > +     request = PAD(sizeof(struct jffs2_raw_xref));
> > +     err = jffs2_reserve_space(c, request, &length,
> > +                     ALLOC_NORMAL, JFFS2_SUMMARY_XREF_SIZE);
> > +     down_write(&c->xattr_sem);
> > +     if (err) {
> > +             JFFS2_WARNING("jffs2_reserve_space()=%d, request=%u\n",
> > +                             err, request);
> > +             delete_xattr_ref(c, ref);
> > +             up_write(&c->xattr_sem);
> > +             return;
> > +     }
> > +
> > +     xd = ref->xd;
> > +     ref->ino = ref->ic->ino;
> > +     ref->xid = xd->xid;
> > +     ref->xseqno |= XREF_DELETE_MARKER;
> > +     save_xattr_ref(c, ref);
> > +
> > +     move_xattr_ref_to_dead_list(c, ref);
> > +     dbg_xattr("xref(ino=%u, xid=%u, xseqno=%u) was removed.\n",
> > +               ref->ino, ref->xid, ref->xseqno);
> > +     unrefer_xattr_datum(c, xd);
> > +
> > +     up_write(&c->xattr_sem);
> > +     jffs2_complete_reservation(c);
> > +}
> > +
> >  int do_jffs2_setxattr(struct inode *inode, int xprefix, const char *xname,
> >                     const char *buffer, size_t size, int flags)
> >  {
> > @@ -1097,7 +1137,7 @@ int do_jffs2_setxattr(struct inode *inode, int xprefix, const char *xname,
> >       struct jffs2_sb_info *c = JFFS2_SB_INFO(inode->i_sb);
> >       struct jffs2_inode_cache *ic = f->inocache;
> >       struct jffs2_xattr_datum *xd;
> > -     struct jffs2_xattr_ref *ref, *newref, **pref;
> > +     struct jffs2_xattr_ref *ref, *newref, *oldref, **pref;
> >       uint32_t length, request;
> >       int rc;
> >
> > @@ -1113,6 +1153,7 @@ int do_jffs2_setxattr(struct inode *inode, int xprefix, const char *xname,
> >               return rc;
> >       }
> >
> > +     oldref = NULL;
> >       /* Find existing xattr */
> >       down_write(&c->xattr_sem);
> >   retry:
> > @@ -1196,11 +1237,13 @@ int do_jffs2_setxattr(struct inode *inode, int xprefix, const char *xname,
> >               rc = PTR_ERR(newref);
> >               unrefer_xattr_datum(c, xd);
> >       } else if (ref) {
> > -             delete_xattr_ref(c, ref);
> > +             oldref = ref;
> >       }
> >   out:
> >       up_write(&c->xattr_sem);
> >       jffs2_complete_reservation(c);
> > +     if (oldref)
> > +             do_jffs2_delete_xattr_ref(c, oldref);
> >       return rc;
> >  }
> >
> >
>


-- 
Thanks,
//richard
