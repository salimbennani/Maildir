Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:52:39 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CB3B1580213;
	Thu, 29 Nov 2018 15:34:29 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 15:34:28 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Apra88hQQpQ9QxkfQy8qO/ZuI3dpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YBKPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBoxSlBQm0Bu7i0SNIhmbs0KEmz+gtDQPL0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8TX+Co0qbIyynDYO1M2Tzg9IbIdQ4uru2PXbltdsfRxlMvFwTbgVqM?=
 =?us-ascii?q?qozoJDyV1uMKs2iU6+pvS/ijhHIgqwF0uzWiwNonhIrRho8N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZhMuy2ANoZ7QNsuT390tCs+0LELup62cDIXxJkm2hLTcf2KfomO?=
 =?us-ascii?q?7xn+TuieOy14i2hgeL+nhxa970ygyurkW8mq31ZFsDBFnsPPtn8TzRzT7NaISv?=
 =?us-ascii?q?9n8kemwzaP2Bjf6uBCIU8qiarWM4AtzqI0m5YJrEjOEDH6lF/rgKKVakko4Oml?=
 =?us-ascii?q?5ub/brXjvJCcNot0ig/kMqQpn8yyGeA4MgkIX2iG9uWwzb7j8lPjQLVMkPI2lr?=
 =?us-ascii?q?DVsJfUJMQduKG5GRRY0pgs6xmhFTeqytcYkmcdLFJDZh2Hi5LlO1bUIPD3Ffu/?=
 =?us-ascii?q?mUijkC93x/DaOb3sGpHNLnnAkLj/Z7p85FNcxRE3zdBe4ZJUF74ALOjyWk/3qN?=
 =?us-ascii?q?zXEBs5PxaozObgDdV3zpkeVn6XAq+FLKPStkeF5uI1LOmNeI8aojH9J+Il5/7z?=
 =?us-ascii?q?l3A5n1AdcLKt3ZsWbnC4A/tnL1+YYXrqntcOD2MKshAiQ+ztjV2ISSRTaGqqX6?=
 =?us-ascii?q?Ig+jE7D5qrDYXERo+zmrCB3yC7HptQZmBBEV2MFXbod4OZW/YDci6SI8lhkiAa?=
 =?us-ascii?q?WrilUYMuyRautAriwbp9MuXU4jEYtY7k1NVt/eLTjhEy9Tt3D8iHyWGCVWN0k3?=
 =?us-ascii?q?gMRz832qB/vEN8xk2C0ah+n/xXC9hT6+lVXQc9MJ7W1/Z6BMzqWgLdYteJT06r?=
 =?us-ascii?q?Qta8DjE3VN4xx94ObFx7G9WtlR3D2yuqA7kIl72EHpA086Tc32TvKMZ50XrJyK?=
 =?us-ascii?q?4hj1w+SMtVKWKmnrJ/9xTUB4PRjkqWjbiqeroG0C7N7miDy3GOs19eUAJ3VaXF?=
 =?us-ascii?q?XnUfZk/NoNT950PCSaKuCLs9PgtAz86CNrVFatnzgVpaQ/fjPczUY3itlGeoGR?=
 =?us-ascii?q?aI2rSMYZL3dGoHwiXSFlIIkwAJ8naALggxGCGhrnnaDDxvE1Lvfkzt/fN/qHO9?=
 =?us-ascii?q?Uk870QWKY1d92Lqy/x4fneacRO8L3rIYpCchrC15HEq839LTDNqAuwphfaVGbd?=
 =?us-ascii?q?Mh+ltH0njZtwh8PpymIKBvnVoecwVxv0Pz2BR7EIRAkc42rHw0yAp+M76X0FRE?=
 =?us-ascii?q?dzmAx5D/JqXXKnXu/BCoc6PZwFXe38iZ+6gR6PU0sU7svBy0GUU49XVn0N5V02?=
 =?us-ascii?q?WH65XODQoSV4/xU0kt+xh7obHafjcy54fO2XJwNqm0tyfI28g1C+s91hagY9Bf?=
 =?us-ascii?q?PbuEFQ/vCcEVG9KiKe0qm1ezaBIEM/tf9Ko1P8OgavuH17SnPOdmnDK6k2tH5J?=
 =?us-ascii?q?px3V6L9yp5UuTIxYoKw+mE3gubUDfxlE2hssHrlo9efzEdA22/xTLiBIFPfK1y?=
 =?us-ascii?q?fJ8HBnu0LM2z29pxmYTtW3le9FO4A1MG2cmpeQedblDn3A1Q01gXrmKjmSei0z?=
 =?us-ascii?q?N0lDQppLKF3CPS2+TiaAYHOmlTSWhijFfgO4i1g8oBXEi1aQgkjx+l5Uf8x6hG?=
 =?us-ascii?q?q6VzNWjTQUFUfyfoK2FuSLe/tr2HY8RX8pMnrT1XUPigYVCdUrP9oQEV0zngH2?=
 =?us-ascii?q?tdwzA3bSqqtY/6nxx5iWKdKmh8rHzCdMF0xBff4sHcRPFL0joHQil4lSfYBlym?=
 =?us-ascii?q?M9a1+tWUko/JsvqiWGK5Sp1TbS7rwJuAtSSh4m1mGx+/n/G1mtD8FQg60Cn718?=
 =?us-ascii?q?RlVCnSrRb8ZJXr2Lq+Me59YkZoA1r84dJgGo5iioswmI0Q2X8Ci5WW53UHkH3/?=
 =?us-ascii?q?MdVG2a3kanoNSiUGw9rU4AjjxU1iIWiFx4P/VnWB3MRhY8O2bX8R2iI498pKEr?=
 =?us-ascii?q?ub7KRYnStppVq1tQfRYfl+njgH0/cv5mAVg/oVuAUz1CWSGa4dHVNXPSH3kxSI?=
 =?us-ascii?q?7ta+rLhYZWq1cLiw0lZ+ks6lDL2Yvg5cX3P5cI84HSBs9sV/LE7M0Hrr54H4f9?=
 =?us-ascii?q?nQaMgftxyOnBfGkuhVM4kxlvsRiCpjOGL9u2AlyuEhgRxv25G6oJaIK2F38K2l?=
 =?us-ascii?q?BR5YMyX/Z9kP9TH1kaZegsGW0pi0EZp7HTULWIboQeisEDIPrvnnMweOEDshqn?=
 =?us-ascii?q?aUA7bfHAmf6Ft4oHLLCZykK3aXJHwBx9V4WBadPFBfgBwTXDginJ42DAWqy9L6?=
 =?us-ascii?q?cEtj+jAd/F34qgZPyuJ1MRnwSHzfqRysajc1TpifMRVX4htD50fTLcyR8OZzEz?=
 =?us-ascii?q?tE8Z2mqQyHMnabaBhQDWEVRkyEAEjuP7mp5dnd6uiYG/CxL/3UbbWVruxeUfiI?=
 =?us-ascii?q?yImr0otn+TaMK8qOMmNjD/09xkpMQ3R5F97FlDUITiwdjzjNYNKDpBeg5i13qd?=
 =?us-ascii?q?iy8PT1VwLu5ouPCLpSPc9s+xCshqeDOPCfhDxkKTZDzZ4MwX7IyL4C3F8dkS1u?=
 =?us-ascii?q?dj+tEageui7JVq7fhqhXDxsDYSNpKMRI97483hVKOcPDkNz1y6V3juQrBFZFT1?=
 =?us-ascii?q?DhnsCpaNcOI2G8MlPHGUmKOK6HJT3N38H4f6e8RadMg+VTsh26oSybHFP7PjSf?=
 =?us-ascii?q?iznpUAiiMf1NjCGeJhBRpJuxfQptCWf9StLrcRm7MN5xjT0rzrw4nHLKNWgAMT?=
 =?us-ascii?q?did0NBtKGf7SRdgv9nAWxO8mJlLfWYmyae9+TZKowZsf1uAiR1keJV+HU7y7tP?=
 =?us-ascii?q?4yFCS/x4gy/Srt9oo1G7neiD0DtnUBxSqjlVgIKHp1ltOaLc9soIZXGR0RQX7G?=
 =?us-ascii?q?7YIR0Oo9Z5ANqnuuhrx8LVneqnJTFY8tmS98IYA8XIIsWvO30lNRPjHyTdSgAC?=
 =?us-ascii?q?SGj4G3vYghlyjfyU6nCP5qI9p5Pv0M4BULhWX18dGfQdBUBoWtcFJcEkDXsfjb?=
 =?us-ascii?q?eHgZtQtjKFpx7LSZAf58ifWw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAAAZdwBch0O0hNFlHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBWoIRJ4N5iBiMCYINFJcwFIEQA0UzEwGEQIM0IjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgECAwECIAQZAQE3AQUJAQEKCwkEAgImAgIDHxIBB?=
 =?us-ascii?q?QEcBhMFAxeDAoICBZ1PPIodcHwzgnYBAQWHKQgSeYsLF4FAP4ERgxKDHgKBGwU?=
 =?us-ascii?q?aAQoEGCyCWIJXiSOBeIQNeFCPNQmFM4R4hwcYgVqINIcOLIlPjkQwgSWCDTMaC?=
 =?us-ascii?q?BsVbAaCNYIbNW0BAoJIinQeM4EFAQGKcgEOF4InAQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAAAZdwBch0O0hNFlHQEBBQEHBQGBUQgBCwGBWoIRJ4N?=
 =?us-ascii?q?5iBiMCYINFJcwFIEQA0UzEwGEQIM0IjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgECAwECIAQZAQE3AQUJAQEKCwkEAgImAgIDHxIBBQEcBhMFAxeDAoI?=
 =?us-ascii?q?CBZ1PPIodcHwzgnYBAQWHKQgSeYsLF4FAP4ERgxKDHgKBGwUaAQoEGCyCWIJXi?=
 =?us-ascii?q?SOBeIQNeFCPNQmFM4R4hwcYgVqINIcOLIlPjkQwgSWCDTMaCBsVbAaCNYIbNW0?=
 =?us-ascii?q?BAoJIinQeM4EFAQGKcgEOF4InAQE?=
X-IronPort-AV: E=Sophos;i="5.56,296,1539673200"; 
   d="scan'208";a="42928258"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 15:34:26 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727089AbeK3Kle (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 30 Nov 2018 05:41:34 -0500
Received: from mail-yw1-f66.google.com ([209.85.161.66]:34094 "EHLO
        mail-yw1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726393AbeK3Kld (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 05:41:33 -0500
Received: by mail-yw1-f66.google.com with SMTP id g75so1542081ywb.1
        for <linux-kernel@vger.kernel.org>; Thu, 29 Nov 2018 15:34:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=Kos50WSSfV7GzWpJfAmvnSFnqN2xZJZ6cBfTUrhHM+s=;
        b=OHjEXpIqgO7P1b/Elvn597Njxg6oNo3WUEgHpn1nJ5hdB4XKjUUTI3BQNfYxhzZV7o
         J5lMRWjO61fftqSOiIrqZgU4EiWTH4+mqER+QAOgV5U2t5ygSgIXHGgxqKWkxraEkv7i
         b7pFnQPxEUD2Grse7+NWAsr3s1FUMCw2lSfweUMdMGsGK/2hV1JQehwtmq7ow2NXPTUz
         VwOQQRHv3CJyfQX5ZRzqzxDecmpnAwd0Wcp+FOM3147AQAs2GbDcP69YnwrGGp6qKsvv
         ZOzmN14wl+ImbFBK+5BnmPWU9ws1uWxHVBk3PnYx6GZGHuwitQ7mLJzKA4KHObuFUTbQ
         SV7A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=Kos50WSSfV7GzWpJfAmvnSFnqN2xZJZ6cBfTUrhHM+s=;
        b=hI5F6xbftMGzzbDgWacDn40tzaBk4T+pcbanzYKkkBThDiZbWfCrM6RzqGCSHUtvGU
         XvuzsUL+Mpyb2cQ4XKEAtHla06hS3PTwAf4/A/KPzBT5LjUXYqfr1DBVGkMG7LrnPbGV
         Uo7JTDm3BKCapHtsbnTgTD2Zius/iyBWwRn6qP78Igh0/ENTDUae6UcBA1AH6w46jPxu
         NzGR1rdItYBQRUfbcPDFNbWFRziZbIF1SoZ4pORBdn1XAk1Xx8AZddJ9WmGSCx22avS8
         IC1inHolwRkpbQtPnv6uhaCEqLWzLRRUG4p2PA7S1A7Hw/nIbiU4GV7k8ZwCmDFbNKE3
         v4ng==
X-Gm-Message-State: AA+aEWaLVtoOyKPM/7mdpb1nQ4hgdgYEZUe+Dr4uBhMe8FYbeoX6Abx3
        QwDGC6j43CToQxJ9l+2kT7kyb/jf+oCMAEA/eip7uw==
X-Google-Smtp-Source: AFSGD/Wl56MtKqchsQvQq4axt1q8N7w8e5CJo4F03UjsOciClKayMjwMJGi7/AauXa43zbxqmoVjqN8E7AVeBfgOUNo=
X-Received: by 2002:a81:ac1f:: with SMTP id k31mr3524313ywh.320.1543534458758;
 Thu, 29 Nov 2018 15:34:18 -0800 (PST)
MIME-Version: 1.0
References: <20181127121849.23975-1-enric.balletbo@collabora.com> <20181127121849.23975-3-enric.balletbo@collabora.com>
In-Reply-To: <20181127121849.23975-3-enric.balletbo@collabora.com>
From: Guenter Roeck <groeck@google.com>
Date: Thu, 29 Nov 2018 15:34:07 -0800
Message-ID: <CABXOdTfXZS7-=JML6QNjrWR_vGpWWUUjwedrxBaqPtc_pLyHUQ@mail.gmail.com>
Subject: Re: [PATCH v3 2/8] mfd / platform: cros_ec: move lightbar attributes
 to its own driver.
To: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Cc: Lee Jones <lee.jones@linaro.org>,
        Gwendal Grignou <gwendal@chromium.org>,
        Nicolas Boichat <drinkcat@chromium.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Guenter Roeck <groeck@chromium.org>, kernel@collabora.com,
        Benson Leung <bleung@chromium.org>,
        Olof Johansson <olof@lixom.net>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 27, 2018 at 4:19 AM Enric Balletbo i Serra
<enric.balletbo@collabora.com> wrote:
>
> The entire way how cros sysfs attibutes are created is broken.
> cros_ec_lightbar should be its own driver and its attributes should be
> associated with a lightbar driver not the mfd driver. In order to retain
> the path, the lightbar attributes are attached to the cros_class.
>
> The patch also adds the sysfs documentation.
>
> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>

Reviewed-by: Guenter Roeck <groeck@chromium.org>

> ---
>
> Changes in v3:
> - Removed unneded check for ec_dev.
>
> Changes in v2:
> - Removed the two exported functions to attach/detach to the cros_class.
> - Use dev_warn instead of dev_err when adding the lightbar.
>
>  ...sfs-class-chromeos-driver-cros-ec-lightbar | 74 +++++++++++++++
>  drivers/mfd/cros_ec_dev.c                     | 24 ++---
>  drivers/mfd/cros_ec_dev.h                     |  6 --
>  drivers/platform/chrome/Kconfig               | 10 ++
>  drivers/platform/chrome/Makefile              |  3 +-
>  drivers/platform/chrome/cros_ec_lightbar.c    | 95 ++++++++++++++-----
>  include/linux/mfd/cros_ec.h                   |  1 -
>  7 files changed, 172 insertions(+), 41 deletions(-)
>  create mode 100644 Documentation/ABI/testing/sysfs-class-chromeos-driver=
-cros-ec-lightbar
>
> diff --git a/Documentation/ABI/testing/sysfs-class-chromeos-driver-cros-e=
c-lightbar b/Documentation/ABI/testing/sysfs-class-chromeos-driver-cros-ec-=
lightbar
> new file mode 100644
> index 000000000000..4893fd2e956f
> --- /dev/null
> +++ b/Documentation/ABI/testing/sysfs-class-chromeos-driver-cros-ec-light=
bar
> @@ -0,0 +1,74 @@
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/brightness
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               Writing to this file adjusts the overall brightness of
> +               the lightbar, separate from any color intensity. The
> +               valid range is 0 (off) to 255 (maximum brightness).
> +
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/interval_msec
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               The lightbar is controlled by an embedded controller (EC)=
,
> +               which also manages the keyboard, battery charging, fans,
> +               and other system hardware. To prevent unprivileged users
> +               from interfering with the other EC functions, the rate at
> +               which the lightbar control files can be read or written i=
s
> +               limited.
> +
> +               Reading this file will return the number of milliseconds
> +               that must elapse between accessing any of the lightbar
> +               functions through this interface. Going faster will simpl=
y
> +               block until the necessary interval has lapsed. The interv=
al
> +               applies uniformly to all accesses of any kind by any user=
.
> +
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/led_rgb
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               This allows you to control each LED segment. If the
> +               lightbar is already running one of the automatic
> +               sequences, you probably won=E2=80=99t see anything change=
 because
> +               your color setting will be almost immediately replaced.
> +               To get useful results, you should stop the lightbar
> +               sequence first.
> +
> +               The values written to this file are sets of four integers=
,
> +               indicating LED, RED, GREEN, BLUE. The LED number is 0 to =
3
> +               to select a single segment, or 4 to set all four segments
> +               to the same value at once. The RED, GREEN, and BLUE
> +               numbers should be in the range 0 (off) to 255 (maximum).
> +               You can update more than one segment at a time by writing
> +               more than one set of four integers.
> +
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/program
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               This allows you to upload and run custom lightbar sequenc=
es.
> +
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/sequence
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               The Pixel lightbar has a number of built-in sequences
> +               that it displays under various conditions, such as at
> +               power on, shut down, or while running. Reading from this
> +               file displays the current sequence that the lightbar is
> +               displaying. Writing to this file allows you to change the
> +               sequence.
> +
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/userspace_control
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               This allows you to take the control of the lightbar. This
> +               prevents the kernel from going through its normal
> +               sequences.
> +
> +What:          /sys/class/chromeos/<cros-ec>/lightbar/version
> +Date:          August 2015
> +KernelVersion: 4.2
> +Description:
> +               Show the information about the lightbar version.
> diff --git a/drivers/mfd/cros_ec_dev.c b/drivers/mfd/cros_ec_dev.c
> index ff788d3e6d5f..614f888c9d6d 100644
> --- a/drivers/mfd/cros_ec_dev.c
> +++ b/drivers/mfd/cros_ec_dev.c
> @@ -36,7 +36,6 @@ static int ec_major;
>
>  static const struct attribute_group *cros_ec_groups[] =3D {
>         &cros_ec_attr_group,
> -       &cros_ec_lightbar_attr_group,
>         &cros_ec_vbc_attr_group,
>         NULL,
>  };
> @@ -390,6 +389,10 @@ static const struct mfd_cell cros_usbpd_charger_cell=
s[] =3D {
>         { .name =3D "cros-usbpd-charger" }
>  };
>
> +static const struct mfd_cell cros_ec_platform_cells[] =3D {
> +       { .name =3D "cros-ec-lightbar" },
> +};
> +
>  static int ec_device_probe(struct platform_device *pdev)
>  {
>         int retval =3D -ENOMEM;
> @@ -464,9 +467,6 @@ static int ec_device_probe(struct platform_device *pd=
ev)
>                                 retval);
>         }
>
> -       /* Take control of the lightbar from the EC. */
> -       lb_manual_suspend_ctrl(ec, 1);
> -
>         /* We can now add the sysfs class, we know which parameter to sho=
w */
>         retval =3D cdev_device_add(&ec->cdev, &ec->class_dev);
>         if (retval) {
> @@ -474,6 +474,15 @@ static int ec_device_probe(struct platform_device *p=
dev)
>                 goto failed;
>         }
>
> +       retval =3D mfd_add_devices(ec->dev, PLATFORM_DEVID_AUTO,
> +                                cros_ec_platform_cells,
> +                                ARRAY_SIZE(cros_ec_platform_cells),
> +                                NULL, 0, NULL);
> +       if (retval)
> +               dev_warn(ec->dev,
> +                        "failed to add cros-ec platform devices: %d\n",
> +                        retval);
> +
>         if (cros_ec_debugfs_init(ec))
>                 dev_warn(dev, "failed to create debugfs directory\n");
>
> @@ -488,9 +497,6 @@ static int ec_device_remove(struct platform_device *p=
dev)
>  {
>         struct cros_ec_dev *ec =3D dev_get_drvdata(&pdev->dev);
>
> -       /* Let the EC take over the lightbar again. */
> -       lb_manual_suspend_ctrl(ec, 0);
> -
>         cros_ec_debugfs_remove(ec);
>
>         mfd_remove_devices(ec->dev);
> @@ -519,8 +525,6 @@ static __maybe_unused int ec_device_suspend(struct de=
vice *dev)
>
>         cros_ec_debugfs_suspend(ec);
>
> -       lb_suspend(ec);
> -
>         return 0;
>  }
>
> @@ -530,8 +534,6 @@ static __maybe_unused int ec_device_resume(struct dev=
ice *dev)
>
>         cros_ec_debugfs_resume(ec);
>
> -       lb_resume(ec);
> -
>         return 0;
>  }
>
> diff --git a/drivers/mfd/cros_ec_dev.h b/drivers/mfd/cros_ec_dev.h
> index 978d836a0248..ec750433455a 100644
> --- a/drivers/mfd/cros_ec_dev.h
> +++ b/drivers/mfd/cros_ec_dev.h
> @@ -44,10 +44,4 @@ struct cros_ec_readmem {
>  #define CROS_EC_DEV_IOCXCMD   _IOWR(CROS_EC_DEV_IOC, 0, struct cros_ec_c=
ommand)
>  #define CROS_EC_DEV_IOCRDMEM  _IOWR(CROS_EC_DEV_IOC, 1, struct cros_ec_r=
eadmem)
>
> -/* Lightbar utilities */
> -extern bool ec_has_lightbar(struct cros_ec_dev *ec);
> -extern int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, uint8_t enable=
);
> -extern int lb_suspend(struct cros_ec_dev *ec);
> -extern int lb_resume(struct cros_ec_dev *ec);
> -
>  #endif /* _CROS_EC_DEV_H_ */
> diff --git a/drivers/platform/chrome/Kconfig b/drivers/platform/chrome/Kc=
onfig
> index 16b1615958aa..05bcefbe1926 100644
> --- a/drivers/platform/chrome/Kconfig
> +++ b/drivers/platform/chrome/Kconfig
> @@ -111,4 +111,14 @@ config CROS_KBD_LED_BACKLIGHT
>           To compile this driver as a module, choose M here: the
>           module will be called cros_kbd_led_backlight.
>
> +config CROS_EC_LIGHTBAR
> +       tristate "Chromebook Pixel's lightbar support"
> +       depends on MFD_CROS_EC_CHARDEV
> +       help
> +         This option exposes the Chromebook Pixel's lightbar to
> +         userspace.
> +
> +         To compile this driver as a module, choose M here: the
> +         module will be called cros_ec_lightbar.
> +
>  endif # CHROMEOS_PLATFORMS
> diff --git a/drivers/platform/chrome/Makefile b/drivers/platform/chrome/M=
akefile
> index cd591bf872bb..3c29a4b405d5 100644
> --- a/drivers/platform/chrome/Makefile
> +++ b/drivers/platform/chrome/Makefile
> @@ -3,7 +3,7 @@
>  obj-$(CONFIG_CHROMEOS_LAPTOP)          +=3D chromeos_laptop.o
>  obj-$(CONFIG_CHROMEOS_PSTORE)          +=3D chromeos_pstore.o
>  obj-$(CONFIG_CHROMEOS_TBMC)            +=3D chromeos_tbmc.o
> -cros_ec_ctl-objs                       :=3D cros_ec_sysfs.o cros_ec_ligh=
tbar.o \
> +cros_ec_ctl-objs                       :=3D cros_ec_sysfs.o \
>                                            cros_ec_vbc.o cros_ec_debugfs.=
o
>  obj-$(CONFIG_CROS_EC_CTL)              +=3D cros_ec_ctl.o
>  obj-$(CONFIG_CROS_EC_I2C)              +=3D cros_ec_i2c.o
> @@ -13,3 +13,4 @@ cros_ec_lpcs-$(CONFIG_CROS_EC_LPC_MEC)        +=3D cros=
_ec_lpc_mec.o
>  obj-$(CONFIG_CROS_EC_LPC)              +=3D cros_ec_lpcs.o
>  obj-$(CONFIG_CROS_EC_PROTO)            +=3D cros_ec_proto.o
>  obj-$(CONFIG_CROS_KBD_LED_BACKLIGHT)   +=3D cros_kbd_led_backlight.o
> +obj-$(CONFIG_CROS_EC_LIGHTBAR)         +=3D cros_ec_lightbar.o
> diff --git a/drivers/platform/chrome/cros_ec_lightbar.c b/drivers/platfor=
m/chrome/cros_ec_lightbar.c
> index 68193bb53383..80eed6317570 100644
> --- a/drivers/platform/chrome/cros_ec_lightbar.c
> +++ b/drivers/platform/chrome/cros_ec_lightbar.c
> @@ -33,6 +33,8 @@
>  #include <linux/uaccess.h>
>  #include <linux/slab.h>
>
> +#define DRV_NAME "cros-ec-lightbar"
> +
>  /* Rate-limit the lightbar interface to prevent DoS. */
>  static unsigned long lb_interval_jiffies =3D 50 * HZ / 1000;
>
> @@ -373,7 +375,7 @@ static int lb_send_empty_cmd(struct cros_ec_dev *ec, =
uint8_t cmd)
>         return ret;
>  }
>
> -int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, uint8_t enable)
> +static int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, uint8_t enable=
)
>  {
>         struct ec_params_lightbar *param;
>         struct cros_ec_command *msg;
> @@ -408,25 +410,6 @@ int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, u=
int8_t enable)
>
>         return ret;
>  }
> -EXPORT_SYMBOL(lb_manual_suspend_ctrl);
> -
> -int lb_suspend(struct cros_ec_dev *ec)
> -{
> -       if (userspace_control || ec !=3D ec_with_lightbar)
> -               return 0;
> -
> -       return lb_send_empty_cmd(ec, LIGHTBAR_CMD_SUSPEND);
> -}
> -EXPORT_SYMBOL(lb_suspend);
> -
> -int lb_resume(struct cros_ec_dev *ec)
> -{
> -       if (userspace_control || ec !=3D ec_with_lightbar)
> -               return 0;
> -
> -       return lb_send_empty_cmd(ec, LIGHTBAR_CMD_RESUME);
> -}
> -EXPORT_SYMBOL(lb_resume);
>
>  static ssize_t sequence_store(struct device *dev, struct device_attribut=
e *attr,
>                               const char *buf, size_t count)
> @@ -584,7 +567,7 @@ static struct attribute *__lb_cmds_attrs[] =3D {
>         NULL,
>  };
>
> -bool ec_has_lightbar(struct cros_ec_dev *ec)
> +static bool ec_has_lightbar(struct cros_ec_dev *ec)
>  {
>         return !!get_lightbar_version(ec, NULL, NULL);
>  }
> @@ -616,4 +599,72 @@ struct attribute_group cros_ec_lightbar_attr_group =
=3D {
>         .attrs =3D __lb_cmds_attrs,
>         .is_visible =3D cros_ec_lightbar_attrs_are_visible,
>  };
> -EXPORT_SYMBOL(cros_ec_lightbar_attr_group);
> +
> +static int cros_ec_lightbar_probe(struct platform_device *pd)
> +{
> +       struct cros_ec_dev *ec_dev =3D dev_get_drvdata(pd->dev.parent);
> +       struct device *dev =3D &pd->dev;
> +       int ret;
> +
> +       /* Take control of the lightbar from the EC. */
> +       lb_manual_suspend_ctrl(ec_dev, 1);
> +
> +       ret =3D sysfs_create_group(&ec_dev->class_dev.kobj,
> +                                &cros_ec_lightbar_attr_group);
> +       if (ret < 0)
> +               dev_err(dev, "failed to create %s attributes. err=3D%d\n"=
,
> +                       cros_ec_lightbar_attr_group.name, ret);
> +
> +       return ret;
> +}
> +
> +static int cros_ec_lightbar_remove(struct platform_device *pd)
> +{
> +       struct cros_ec_dev *ec_dev =3D dev_get_drvdata(pd->dev.parent);
> +
> +       sysfs_remove_group(&ec_dev->class_dev.kobj,
> +                          &cros_ec_lightbar_attr_group);
> +
> +       /* Let the EC take over the lightbar again. */
> +       lb_manual_suspend_ctrl(ec_dev, 0);
> +
> +       return 0;
> +}
> +
> +static int __maybe_unused cros_ec_lightbar_resume(struct device *dev)
> +{
> +       struct cros_ec_dev *ec_dev =3D dev_get_drvdata(dev);
> +
> +       if (userspace_control || ec_dev !=3D ec_with_lightbar)
> +               return 0;
> +
> +       return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_RESUME);
> +}
> +
> +static int __maybe_unused cros_ec_lightbar_suspend(struct device *dev)
> +{
> +       struct cros_ec_dev *ec_dev =3D dev_get_drvdata(dev);
> +
> +       if (userspace_control || ec_dev !=3D ec_with_lightbar)
> +               return 0;
> +
> +       return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_SUSPEND);
> +}
> +
> +static SIMPLE_DEV_PM_OPS(cros_ec_lightbar_pm_ops,
> +                        cros_ec_lightbar_suspend, cros_ec_lightbar_resum=
e);
> +
> +static struct platform_driver cros_ec_lightbar_driver =3D {
> +       .driver =3D {
> +               .name =3D DRV_NAME,
> +               .pm =3D &cros_ec_lightbar_pm_ops,
> +       },
> +       .probe =3D cros_ec_lightbar_probe,
> +       .remove =3D cros_ec_lightbar_remove,
> +};
> +
> +module_platform_driver(cros_ec_lightbar_driver);
> +
> +MODULE_LICENSE("GPL");
> +MODULE_DESCRIPTION("Expose the Chromebook Pixel's lightbar to userspace"=
);
> +MODULE_ALIAS("platform:" DRV_NAME);
> diff --git a/include/linux/mfd/cros_ec.h b/include/linux/mfd/cros_ec.h
> index 706dd724de52..b6beba3031ba 100644
> --- a/include/linux/mfd/cros_ec.h
> +++ b/include/linux/mfd/cros_ec.h
> @@ -325,7 +325,6 @@ u32 cros_ec_get_host_event(struct cros_ec_device *ec_=
dev);
>
>  /* sysfs stuff */
>  extern struct attribute_group cros_ec_attr_group;
> -extern struct attribute_group cros_ec_lightbar_attr_group;
>  extern struct attribute_group cros_ec_vbc_attr_group;
>
>  /* debugfs stuff */
> --
> 2.19.1
>
