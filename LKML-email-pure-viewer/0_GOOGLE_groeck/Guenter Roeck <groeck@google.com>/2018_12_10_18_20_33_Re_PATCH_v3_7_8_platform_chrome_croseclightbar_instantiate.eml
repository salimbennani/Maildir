Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 96663580380;
	Mon, 10 Dec 2018 10:20:51 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga002-1.fm.intel.com with ESMTP; 10 Dec 2018 10:20:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AMLnXXRye6eDobDvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4QIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJYBAfQdMuZDt4nwpUADrQeiCQS2GO/j1iNEi33w0KYn0+ohCwbG3Ak4EtwPrX?=
 =?us-ascii?q?TbstP1NLsMXuCv0aLG0TLDYO1K1jf+9YPFdR8hoeuLXb1ubcXRylIiFwzCjlWX?=
 =?us-ascii?q?pozlOy2a2v4RvGic6uptTOSigHMkpQFpujWj2Nsgh43Tio4IxF3I6z91zJs2KN?=
 =?us-ascii?q?GkUkJ2YNypHINOuy2GM4Z6WMAvTmFytCok17ELvYS3cDUOxZkowRPUduaJfJKS?=
 =?us-ascii?q?4h35UeacOTd4i2xheLK4nxuy70egxfPmVsWu01ZFsDBFkt/SuXAJzRDT7dKHSv?=
 =?us-ascii?q?Rl8keg3zaAyRzT5/laLUwokafXMYMtz7AumpYJrEjOHTP6lF/3gaKUbkkk//Kn?=
 =?us-ascii?q?6+XjYrXovJ+cMIp0hxn6MqQvnMy/HOs5PhENX2eF4+S80qPs/UngTLVNgPw2lL?=
 =?us-ascii?q?fWsIrBKMQFqa62HRVV3pwg6xmhFTem1soXnX0dIFJCYhKHgJDlO0vSL/DgEfe/?=
 =?us-ascii?q?n1OsnS9vx/DHPb3uHI/BL3fekLr6ebZ96khcyBc8zNxF5pJUDK0BL+z3WkPrqN?=
 =?us-ascii?q?PYCRo5ORSuw+n7ENV9yp8eWWWXD6+ZKqzSsEOI6fgoI+WWZI8VpSzyK/4q5/P1?=
 =?us-ascii?q?iX85mFkdfbSm3JcNaXC4GOhmLFudYXb2ntgBFmIKtBIkTOP2kF2CTSJTZ3GqUq?=
 =?us-ascii?q?I+4TE0FpiqDYTERoCrhryB2zy2HplXZmBAF1CNHm3kd4SCW/cQdi2SJtVtnSAD?=
 =?us-ascii?q?VbikU4Uhzw2htBfmy7p7KerZ4jcXtYnj1Nhy5O3fjwsy+iZ2D8mG12GNTmd0nn?=
 =?us-ascii?q?4HRjMs3aB/p1B9xUmH0aRin/NYEtlT7etTUggmLZ7c0/B6C9fqVwLCZNiJTkyq?=
 =?us-ascii?q?QtGnAT4rSNIxzMQDY0J8G9WkkxDC0DCmA74Tl7yXGpM09rjQ0GT2J8Z403zGzr?=
 =?us-ascii?q?Uuj0E6QstTMm2rnrNw+BLNB4HXiUmZl7yldaIH3CHT8mePym6OvEJdUA50SqjF?=
 =?us-ascii?q?WXEfZk3LrdX2/E/CTrmuCag5PQtF08KNNqxKatjxh1VcWPjjIMjeY362m2qoGB?=
 =?us-ascii?q?mH3K2MY5Twd2UdxirdDlMEnB4V/XudMQg+ByGho3/RDTB0FFLvZV/s/vd6qH+h?=
 =?us-ascii?q?UkA0yASKZVV717Wp4h4VmeCcS/QL07IYuSchrjJ0HEq939PWEdaAuxBtfKJGYd?=
 =?us-ascii?q?M54VdH023Zuhd5PpyhKaBim1Effx52v0PoyxV4FIFAndI2o3MtyQp4MbiY309Z?=
 =?us-ascii?q?dzOEwZDwPaXaJXP2/B+xZK/ZxFHf3MyN9acS9fs3sVPjvAKuFko86Hhn19hV03?=
 =?us-ascii?q?2B5pTFFgYSUJTxUlop+Bh+vb3Vfi4954bM3312Laa0qiPC284uBOY9yhegYs1T?=
 =?us-ascii?q?P7+eGA7zE80VHc6uKOMxllitbxIEOv1S9aEuM8OncfuGxLCkPOJ6kD26imRH5Z?=
 =?us-ascii?q?h30liQ+CpkVu7Iw5EFzumC3guGSzjzlk2hvd3wmYxeYzEdAHC/ySn9CIFNfKJy?=
 =?us-ascii?q?eZsEBnm0I82wwNVznJrtW39e9F6+CFIKws6peRyOb1Pj2Q1cz1gYoXuimSGg1T?=
 =?us-ascii?q?x7jykprraD3CzJ2+njdBsHNnRLRWV4llfsPI60gsseXEipaQgpiRSk6Vz7x6hd?=
 =?us-ascii?q?uKRwMW3TTV1UcCjxKmFoSrGwuaaaY85T9JMotj1aUOamblCASb79oBwa3zn4H2?=
 =?us-ascii?q?RExzA7dDCqupPnkBx8k2+dKHdzrHzEecB/3xvf5drcReJP0ToCXiV3lT7XBl2k?=
 =?us-ascii?q?Ndmz4dqUj4vDsvy5V2+5Vpxcay7rwZmCtCu6421nGhm/n/G1mt36Hgk2yy7719?=
 =?us-ascii?q?92VSrWqBbweJXk16O/Meh/ZElnGEf869ZmGoF5ioYwh4sf2XkAipWV4HoIi2Hz?=
 =?us-ascii?q?MdpA1KL6bXoNQyMLwtHP7Ajk3k1jMmyGx4bjWnqBxcthYsGwYnkK1SIl88BKFK?=
 =?us-ascii?q?CU4aRBnSt0oVq3txjdYPZjkTcG1fsh9mQajPoXtwo3wSWQGbQSHUhePSzxmBWE?=
 =?us-ascii?q?9dG+rKNLZGmxdbi8zlZxndekDLuauAFTRG75eos+HS939sh/LFXM0Hjp5oDlYt?=
 =?us-ascii?q?bQa88TtgaPkxfBlOVVLJMxlvwXhStoI279vHsly/Ilghxqx521oI+HK2B19qKj?=
 =?us-ascii?q?HhFYLiH1Z98U+jz1lqlRhMGW34SyHpl7HjULQYDlTfapEDIUqPTmOByCEDw6qn?=
 =?us-ascii?q?eHB7XfGRWT51thr3LKC5qrLW2YJGEFzdV+QxmQPE5fjxoRXDokhZ41DByqyNbi?=
 =?us-ascii?q?cEdk5TAR+1j4pQFXyu9zMxn/U2HfpBqnazsuSZifKgZW4R9G50vPLcOe6edzFT?=
 =?us-ascii?q?lC/pK9tAyNNnCbZwNQAGAJXUyEGknjPqS06tnG6eSYHe2+L/3BYbiVrexeVvGI?=
 =?us-ascii?q?xY+g04d8/jaMMNmPMWdmD/EhxkVDWnV5EdzDmzoTUywXiz7Nb8mDqRe85CJ3r8?=
 =?us-ascii?q?O/8PfqWA715ouPEbxSMdpx9BCsnKeDLPWdhCJ4KTZey5MNymXEyLkZ3F4OlS5u?=
 =?us-ascii?q?cyOhHqgHtS7IVKjQgLNYDwYHayNvM8tF97gz3hRWNs7BlNz01qR0jvo0C1peUV?=
 =?us-ascii?q?zhm8epZdEFIm2nNVPHAlqLO6qCJTHR3873Zqa8Q6VKjOpIrx2wpSqbE0j7MzSf?=
 =?us-ascii?q?ljnpUgqjPv1WgC6HPBxRpoe9fw1pCWjiStLmdxK6PMV2jT0w3b07mHfKOXQAPj?=
 =?us-ascii?q?h7dkNHtqeQ4j9AgvVjB2xB6WJoLOmelCaf6unYK5AWvuNqAyR0je1a5ns6xqBR?=
 =?us-ascii?q?7CFFQvx1hSTTosRvo1GgjumA1D5nXABSpTZMgYLY9XllbIjf7JhLEVzN+BYA8W?=
 =?us-ascii?q?+XQxVCnNZ/ENSn761W0NnE0qj6LDNP79jT1cAbA8zdIsWdOTwqNh+/SxDOCw5Q?=
 =?us-ascii?q?YiOmM33SnQRnl/yZ9TXBoYI9p5PvsJUJTbBfWRo+EfZMWRctJ8ALPJoiBmBsqr?=
 =?us-ascii?q?WclsNdoCPm9BQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AxAACbrQ5ch0O0hNFkHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrJ4N6lCiCDRSSQYR8FIEQA0wsEwGDP4QuIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkjDII2JAGCYgECAwECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwGEwWDH?=
 =?us-ascii?q?IICBZptPIodcHwzgnYBAQWHHQgSeYsWF4FAP4ERgxKDHgKBSYMcgleJO4FwhBR?=
 =?us-ascii?q?9kDsJhTqMFRiRPSyYdTCBJYIOMxoIGxVsBoI1ghs1gziKdB4zgQUBAYlLKYIkA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0AxAACbrQ5ch0O0hNFkHgEGBwaBUQkLAYNrJ4N6lCiCDRS?=
 =?us-ascii?q?SQYR8FIEQA0wsEwGDP4QuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCY?=
 =?us-ascii?q?gECAwECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwGEwWDHIICBZptPIodcHw?=
 =?us-ascii?q?zgnYBAQWHHQgSeYsWF4FAP4ERgxKDHgKBSYMcgleJO4FwhBR9kDsJhTqMFRiRP?=
 =?us-ascii?q?SyYdTCBJYIOMxoIGxVsBoI1ghs1gziKdB4zgQUBAYlLKYIkAQE?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="43468152"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 10:20:48 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728466AbeLJSUq (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 13:20:46 -0500
Received: from mail-yb1-f194.google.com ([209.85.219.194]:44105 "EHLO
        mail-yb1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726699AbeLJSUp (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 13:20:45 -0500
Received: by mail-yb1-f194.google.com with SMTP id d2so899783ybs.11
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 10:20:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=r0DvAuQTApIH7Jv4TQve4VOPJS3FE9bOM7ZBY9z4+zE=;
        b=OFcWAZTUBZc6bKsaOraDPcvoJyE1CcPiyM+2aviSYZVEduxgOyBSgrRWTa+Xgr1UTc
         rnAhdt1+TArrSs5ngcZvfm5wNTF4CIMX7uKHVze1uz4vKGlJqnp62ndOaZVKI2EJzSGJ
         fxPzYMQLa4aKGWp+ZSRbPfSXtn32GezmSNhvLPfZDD5EtoEQGuFjuyA+6UBTeoyYd5Hd
         A5DICQS8x5emllmhNDkYIiGV3sDTnS0SBUHR7JPSTDER2ps2aVawif4tOSXKfFmRCj03
         5vl5beh1cW5sSBGiOXDT8E9ejNIKjW0XHsIvdQX4ZPsiy6bfXlXEDFLHqLcT/dRFBiq2
         l9yQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=r0DvAuQTApIH7Jv4TQve4VOPJS3FE9bOM7ZBY9z4+zE=;
        b=i0UC4hZVLPBXDNYvrYWTRKDOK14rZlL/LUVMAaN1y3WJENVBxHenbOgulp+W/NOefx
         lBqUB4UBdphoNEG2HBasgMPbZt6AAvGHg3YWUJEz6V4m8p/ripOKrZ2qRHzV1kXH61PP
         g4U3waRRQQTkgUItD8/fAKZx3bCzwBfxwXAcEs/WBC1kuXpooPkRpJUbDNDqR+qPuQxZ
         PhKY/vO9Uaxwc1jwrhEkkZyDxWXtl/cI0EN79uAnNRgHTG1sTTfjg5xJpqlvES4I5h0b
         6a+TPFXPn22rd/WrOjLl4vLqp8v69tBG+zV6KTs3ljfcls7VHuUgEijk+Sn932NcUffc
         xYBQ==
X-Gm-Message-State: AA+aEWa3Hc+rf0BSvWUgQVIYo3G6fg+Ho9xgpCDL53VfYXLtVEK22rch
        sHZdMtZZq8SWSoNNMd+dG1G8gKY9jgbPF0Bl/VRcXA==
X-Google-Smtp-Source: AFSGD/XISLgGj30sk3EPgPoUuqqhZF8TXaxndF9snXFNx2+l7gigEv12f1eh1tZGGaIbku1BtwNwubwe9fCheS/heP8=
X-Received: by 2002:a25:9c09:: with SMTP id c9mr13068296ybo.247.1544466044717;
 Mon, 10 Dec 2018 10:20:44 -0800 (PST)
MIME-Version: 1.0
References: <20181127121849.23975-1-enric.balletbo@collabora.com> <20181127121849.23975-8-enric.balletbo@collabora.com>
In-Reply-To: <20181127121849.23975-8-enric.balletbo@collabora.com>
From: Guenter Roeck <groeck@google.com>
Date: Mon, 10 Dec 2018 10:20:33 -0800
Message-ID: <CABXOdTfagM6sRWYMNs3cEwtjvOe8LVvmZ6=0LfBueT7JJzw-MQ@mail.gmail.com>
Subject: Re: [PATCH v3 7/8] platform/chrome: cros_ec_lightbar: instantiate
 only if the EC has a lightbar.
To: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Cc: Lee Jones <lee.jones@linaro.org>,
        Gwendal Grignou <gwendal@chromium.org>,
        Nicolas Boichat <drinkcat@chromium.org>,
        linux-kernel <linux-kernel@vger.kernel.org>,
        Guenter Roeck <groeck@chromium.org>, kernel@collabora.com,
        Benson Leung <bleung@chromium.org>,
        Olof Johansson <olof@lixom.net>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Nov 27, 2018 at 4:19 AM Enric Balletbo i Serra
<enric.balletbo@collabora.com> wrote:
>
> Due to the way attribute groups visibility work, the function
> cros_ec_lightbar_attrs_are_visible is called multiple times, once per
> attribute, and each of these calls makes an EC transaction. For what is
> worth the EC log reports multiple errors on boot when the lightbar is
> not available. Instead, check if the EC has a lightbar in the probe
> function and only instantiate the device.
>
> Ideally we should have instantiate the driver only if the
> EC_FEATURE_LIGHTBAR is defined, but that's not possible because that flag
> is not in the very first Pixel Chromebook (Link), only on Samus. So, the
> driver is instantiated by his parent always.
>
> This patch changes a bit the actual behaviour. Before the patch if an EC
> doesn't have a lightbar an empty lightbar folder is created in
> /sys/class/chromeos/<ec device>, after the patch the empty folder is not
> created, so, the folder is only created if the lightbar exists.
>
> Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>

Nitpicks, otherwise

Reviewed-by: Guenter Roeck <groeck@chromium.org>

> ---
>
> Changes in v3: None
> Changes in v2:
> - Removed ec_with_lightbar variable.
>
>  drivers/platform/chrome/cros_ec_lightbar.c | 37 ++++++++--------------
>  1 file changed, 13 insertions(+), 24 deletions(-)
>
> diff --git a/drivers/platform/chrome/cros_ec_lightbar.c b/drivers/platform/chrome/cros_ec_lightbar.c
> index 80eed6317570..6f6a4cbfc3fc 100644
> --- a/drivers/platform/chrome/cros_ec_lightbar.c
> +++ b/drivers/platform/chrome/cros_ec_lightbar.c
> @@ -43,7 +43,6 @@ static unsigned long lb_interval_jiffies = 50 * HZ / 1000;
>   * If this is true, we won't do anything during suspend/resume.
>   */
>  static bool userspace_control;
> -static struct cros_ec_dev *ec_with_lightbar;
>
>  static ssize_t interval_msec_show(struct device *dev,
>                                   struct device_attribute *attr, char *buf)
> @@ -381,9 +380,6 @@ static int lb_manual_suspend_ctrl(struct cros_ec_dev *ec, uint8_t enable)
>         struct cros_ec_command *msg;
>         int ret;
>
> -       if (ec != ec_with_lightbar)
> -               return 0;
> -
>         msg = alloc_lightbar_cmd_msg(ec);
>         if (!msg)
>                 return -ENOMEM;
> @@ -567,37 +563,26 @@ static struct attribute *__lb_cmds_attrs[] = {
>         NULL,
>  };
>
> -static bool ec_has_lightbar(struct cros_ec_dev *ec)
> +static bool cros_ec_has_lightbar(struct cros_ec_dev *ec_dev)
>  {
> -       return !!get_lightbar_version(ec, NULL, NULL);
> -}
> -
> -static umode_t cros_ec_lightbar_attrs_are_visible(struct kobject *kobj,
> -                                                 struct attribute *a, int n)
> -{
> -       struct device *dev = container_of(kobj, struct device, kobj);
> -       struct cros_ec_dev *ec = to_cros_ec_dev(dev);
> -       struct platform_device *pdev = to_platform_device(ec->dev);
> +       struct platform_device *pdev = to_platform_device(ec_dev->dev);
>         struct cros_ec_platform *pdata = pdev->dev.platform_data;
>         int is_cros_ec;
>
>         is_cros_ec = strcmp(pdata->ec_name, CROS_EC_DEV_NAME);
>
>         if (is_cros_ec != 0)
> -               return 0;
> +               return false;
>
FWIW, is_cros_ec is really unnecessary here, though I guess that might
be a different patch.

> -       /* Only instantiate this stuff if the EC has a lightbar */
> -       if (ec_has_lightbar(ec)) {
> -               ec_with_lightbar = ec;
> -               return a->mode;
> -       }
> -       return 0;
> +       if (!!get_lightbar_version(ec_dev, NULL, NULL))
> +               return true;
> +
> +       return false;

Why not just the following ?
            return !!get_lightbar_version(ec_dev, NULL, NULL);
or even
            return !strcmp(pdata->ec_name, CROS_EC_DEV_NAME) &&
                      !!get_lightbar_version(ec_dev, NULL, NULL);

>  }
>
>  struct attribute_group cros_ec_lightbar_attr_group = {
>         .name = "lightbar",
>         .attrs = __lb_cmds_attrs,
> -       .is_visible = cros_ec_lightbar_attrs_are_visible,
>  };
>
>  static int cros_ec_lightbar_probe(struct platform_device *pd)
> @@ -606,6 +591,10 @@ static int cros_ec_lightbar_probe(struct platform_device *pd)
>         struct device *dev = &pd->dev;
>         int ret;
>
> +       /* Only instantiate this stuff if the EC has a lightbar */
> +       if (!cros_ec_has_lightbar(ec_dev))
> +               return -ENODEV;
> +
>         /* Take control of the lightbar from the EC. */
>         lb_manual_suspend_ctrl(ec_dev, 1);
>
> @@ -635,7 +624,7 @@ static int __maybe_unused cros_ec_lightbar_resume(struct device *dev)
>  {
>         struct cros_ec_dev *ec_dev = dev_get_drvdata(dev);
>
> -       if (userspace_control || ec_dev != ec_with_lightbar)
> +       if (userspace_control)
>                 return 0;
>
>         return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_RESUME);
> @@ -645,7 +634,7 @@ static int __maybe_unused cros_ec_lightbar_suspend(struct device *dev)
>  {
>         struct cros_ec_dev *ec_dev = dev_get_drvdata(dev);
>
> -       if (userspace_control || ec_dev != ec_with_lightbar)
> +       if (userspace_control)
>                 return 0;
>
>         return lb_send_empty_cmd(ec_dev, LIGHTBAR_CMD_SUSPEND);
> --
> 2.19.1
>
