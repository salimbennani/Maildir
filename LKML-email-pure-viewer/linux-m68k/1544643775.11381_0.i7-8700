Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  12 Dec 2018 19:42:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4353358079D;
	Wed, 12 Dec 2018 00:55:23 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 00:55:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AwJXW+BwYdVokcKPXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4QL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJcAY28?=
 =?us-ascii?q?YYQAAPYcMulatIn9v1kDoACxBQWwHu7i0CNEimPo0aA8zu8vERvG3AslH98Wvn?=
 =?us-ascii?q?jaotD1NKYOUeCvzKjD0DrMY+lL0jn79ofIbBEhofeCUbltdsfRzVQgFx3eg1qK?=
 =?us-ascii?q?rYzlIzeV1uULs2iG4OtsT+Wvi3QoqwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt4uTmVntSog17EKpZy2cDIXxJkl3RLSa/6Kfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/XiVsm7zllKtDBJktrSuXAX0Rzc9MyHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz7oqmpYOv0nPADX6lFj1gaOKbEkp++ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/BeU4Mg4TX2mU4Oi816Ps/Vf/QLpUiv06i6?=
 =?us-ascii?q?7ZsZ7cJcsFvK60GBFV0ok95BalFTum08oXnWMBLF1bfBKLlY/pO0vBIPzgF/ew?=
 =?us-ascii?q?n0yskCt3x/DBJrDhBpTNLnvdn7v7crd99lVRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biEN99zJ8RWXqTAq+FN6PfqV+I6fguI+mQfoAVvyzxK/g45/H0?=
 =?us-ascii?q?i385lkQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EICmDYDdSYy3g7yB2yG7HptRZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddv/O3TlRYy9T9uA8SHyW6NTXp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUFWm?=
 =?us-ascii?q?Tc+gAT0rStIxwsUBY0ByG9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCoHUiUqZibileb4c3CHX8meD1nSBvEdfXA50UqXF?=
 =?us-ascii?q?WHQfa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ADyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyl0HFe439LRF9qApwpgcL9AYd?=
 =?us-ascii?q?8n51dHz2bZtw17PpyvNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23caHW3k/R0dmI9aYP8vg3sEjjsxyzGUok8HVn1MdV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?MaOZFAPoD8IWHcmvKOwwlFivYRIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr8llahvdztloBeeD4SGXCzyS76C45LZ61+?=
 =?us-ascii?q?ZJoEBn2qI8Kq2Np+nZntW3hD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZLRWljl1vtIZK4j8sHXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSL7yuQEa0yDgH2?=
 =?us-ascii?q?tZ3jw7bCulupb6nxx7jmKSMnBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzIOauyu8/2FqAxy/n/aol93jEAg61zL71t?=
 =?us-ascii?q?ZwWSXJqhb8fpfk16CgPe17eUloAUf269BmFYFmjoswmJYQ1GAZhpqP/HoLi2fz?=
 =?us-ascii?q?MchB1qL4Y3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4qAPRYftnkTsHx/oh9mUag/0Xtwo31SqSHKoSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WXv6oHjfd?=
 =?us-ascii?q?ncd9MSuQeSkxfdlOhVM5Mxm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b0Ju1EZVmHjULQYHkTfa1ED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTU4hJE5Ex6lxNf7?=
 =?us-ascii?q?fEdl/DwR5UP4qhhRyuJuLRb/SXzSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1DiPr6z5dnZ7uiXHOy+I+HVYbWJr+xeWOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C//+rqWALs5ouPCqFeMdZ1+xCxjqeMKfSQhDtiKTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNMHBl9P6zaR4geA1CltfUV?=
 =?us-ascii?q?zhm9qkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwyvMeBJjC2BIBNSop2ychZzBmjlV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB7+jXMJAWsf5qAiRyj+1b4XQ6xKFT?=
 =?us-ascii?q?7CFLX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaCKvqVHDFnJ8QgRpV?=
 =?us-ascii?q?iBFwgHvdtiB8PivegExdXCjr7bLDZE7sKR+JVMBI7TMs3RY1Q7Nh+8UhLRDRcf?=
 =?us-ascii?q?XHaVcyn7ilJclrvaonmZsLAzroTomZwTWvlcTlNjRaBSMVhsANFXeMQ/ZTgji7?=
 =?us-ascii?q?POyZdQvXc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAABzBBch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMFIwSgg0Ulz+BcwINHRMBhzgiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKS+CNiQBgmIBAgMBAiRSBgkBAQoSBgklAwwZBB0OBhMFg?=
 =?us-ascii?q?xwBggEEAaZOM4ohD4JtiU8RBoF/hCOINoImAok5gXWFEJBJBwICikaCbYQVI5F?=
 =?us-ascii?q?Emn+CDn0IgyeCJxeOIDwBMoEFAQGNJwEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAABzBBch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMFIwSgg0Ulz+BcwINHRMBhzgiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKS+CNiQBgmIBAgMBAiRSBgkBAQoSBgklAwwZBB0OBhMFgxwBggEEAaZOM4o?=
 =?us-ascii?q?hD4JtiU8RBoF/hCOINoImAok5gXWFEJBJBwICikaCbYQVI5FEmn+CDn0IgyeCJ?=
 =?us-ascii?q?xeOIDwBMoEFAQGNJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="asc'?scan'208";a="56557353"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 00:55:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726763AbeLLIzS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 03:55:18 -0500
Received: from vmicros1.altlinux.org ([194.107.17.57]:33528 "EHLO
        vmicros1.altlinux.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726242AbeLLIzS (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 03:55:18 -0500
Received: from mua.local.altlinux.org (mua.local.altlinux.org [192.168.1.14])
        by vmicros1.altlinux.org (Postfix) with ESMTP id 3C1E672CA56;
        Wed, 12 Dec 2018 11:55:16 +0300 (MSK)
Received: by mua.local.altlinux.org (Postfix, from userid 508)
        id 327137CFE41; Wed, 12 Dec 2018 11:55:16 +0300 (MSK)
Date: Wed, 12 Dec 2018 11:55:16 +0300
From: "Dmitry V. Levin" <ldv@altlinux.org>
To: Geert Uytterhoeven <geert@linux-m68k.org>
Cc: Oleg Nesterov <oleg@redhat.com>, Andy Lutomirski <luto@kernel.org>,
        lineprinter@altlinux.org, Eugene Syromiatnikov <esyr@redhat.com>,
        linux-m68k <linux-m68k@lists.linux-m68k.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v5 13/25] m68k: add asm/syscall.h
Message-ID: <20181212085516.GA13288@altlinux.org>
References: <20181210042352.GA6092@altlinux.org>
 <20181210043010.GM6131@altlinux.org>
 <CAMuHMdVYq_2P=gb_zbSGFkPWASTds6uSPTyyhyNAgp2Qm5+feQ@mail.gmail.com>
 <20181210124059.GA11942@altlinux.org>
 <CAMuHMdW8ejp4gm2Xh-8inSQngQ5zRQ9bfsg1SG+BAD8RFV8xcA@mail.gmail.com>
 <20181210133025.GG11942@altlinux.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
        protocol="application/pgp-signature"; boundary="2fHTh5uZTiUOsy+g"
Content-Disposition: inline
In-Reply-To: <20181210133025.GG11942@altlinux.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


--2fHTh5uZTiUOsy+g
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Mon, Dec 10, 2018 at 04:30:25PM +0300, Dmitry V. Levin wrote:
> On Mon, Dec 10, 2018 at 02:06:28PM +0100, Geert Uytterhoeven wrote:
> > On Mon, Dec 10, 2018 at 1:41 PM Dmitry V. Levin <ldv@altlinux.org> wrot=
e:
> > > On Mon, Dec 10, 2018 at 09:45:42AM +0100, Geert Uytterhoeven wrote:
> > > > On Mon, Dec 10, 2018 at 5:30 AM Dmitry V. Levin <ldv@altlinux.org> =
wrote:
> > > > > syscall_get_* functions are required to be implemented on all
> > > > > architectures in order to extend the generic ptrace API with
> > > > > PTRACE_GET_SYSCALL_INFO request.
> > > > >
> > > > > This introduces asm/syscall.h on m68k implementing all 5 syscall_=
get_*
> > > > > functions as documented in asm-generic/syscall.h: syscall_get_nr,
> > > > > syscall_get_arguments, syscall_get_error, syscall_get_return_valu=
e,
> > > > > and syscall_get_arch.
> > > > >
> > > > > Cc: Geert Uytterhoeven <geert@linux-m68k.org>
> > > > > Cc: Oleg Nesterov <oleg@redhat.com>
> > > > > Cc: Andy Lutomirski <luto@kernel.org>
> > > > > Cc: Elvira Khabirova <lineprinter@altlinux.org>
> > > > > Cc: Eugene Syromyatnikov <esyr@redhat.com>
> > > > > Cc: linux-m68k@lists.linux-m68k.org
> > > > > Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
> > > > > ---
> > > > >
> > > > > Notes:
> > > > >     v5: added syscall_get_nr, syscall_get_arguments, syscall_get_=
error,
> > > > >         and syscall_get_return_value
> > > > >     v1: added syscall_get_arch
> > > >
> > > > > --- /dev/null
> > > > > +++ b/arch/m68k/include/asm/syscall.h
> > > > > @@ -0,0 +1,39 @@
> > > >
> > > > > +static inline void
> > > > > +syscall_get_arguments(struct task_struct *task, struct pt_regs *=
regs,
> > > > > +                     unsigned int i, unsigned int n, unsigned lo=
ng *args)
> > > > > +{
> > > > > +       BUG_ON(i + n > 6);
> > > >
> > > > Does this have to crash the kernel?
> > >
> > > This is what most of other architectures do, but we could choose
> > > a softer approach, e.g. use WARN_ON_ONCE instead.
> > >
> > > > Perhaps you can return an error code instead?
> > >
> > > That would be problematic given the signature of this function
> > > and the nature of the potential bug which would most likely be a usag=
e error.
> >=20
> > Of course to handle that, the function's signature need to be changed.
> > Changing it has the advantage that the error handling can be done at the
> > caller, in common code, instead of duplicating it for all
> > architectures, possibly
> > leading to different semantics.
>=20
> Given that *all* current users of syscall_get_arguments specify i =3D=3D 0
> (and there is an architecture that has BUG_ON(i)),=20
> it should be really a usage error to get into situation where i + n > 6,
> I wish a BUILD_BUG_ON could be used here instead.
>=20
> I don't think it worths pushing the change of API just to convert
> a "cannot happen" assertion into an error that would have to be dealt with
> on the caller side.

I suggest the following BUG_ON replacement for syscall_get_arguments:

#define SYSCALL_MAX_ARGS 6

static inline void
syscall_get_arguments(struct task_struct *task, struct pt_regs *regs,
		      unsigned int i, unsigned int n, unsigned long *args)
{
	/*
	 * Ideally there should have been
	 * BUILD_BUG_ON(i + n > SYSCALL_MAX_ARGS);
	 * instead of these checks.
	 */
	if (unlikely(i > SYSCALL_MAX_ARGS)) {
		WARN_ONCE(1, "i > SYSCALL_MAX_ARGS");
		return;
	}
	if (unlikely(n > SYSCALL_MAX_ARGS - i)) {
		WARN_ONCE(1, "i + n > SYSCALL_MAX_ARGS");
		n =3D SYSCALL_MAX_ARGS - i;
	}
	BUILD_BUG_ON(sizeof(regs->d1) !=3D sizeof(args[0]));
	memcpy(args, &regs->d1 + i, n * sizeof(args[0]));
}


--=20
ldv

--2fHTh5uZTiUOsy+g
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIcBAEBCAAGBQJcEMzzAAoJEAVFT+BVnCUIJTsQAOmj7OloZvGD8dgggADIyI0s
z5azwyQpfO3yX7sYLZxpg7SrZEmwSiv9wer6S5nQDQ6QXHisZYp7L/aI+h4tuCoe
HlOUxX8etVSCqZgWZMgooylO8D9roSbHjfsSC7hTReunMeY+xv9nLYTvXnyP4TdL
URVu4vLNatpFsXzWiK5qCH9QodBIklZrt0M1OjCeVrn+kV5Ui9gK0lbfcfGK0H0C
445bHjFgmtZVxPgpy6foekRYiLvijoVNMTxOHakEhSOFO3RnStcGHRj8sXlzoiBo
pu9NSx62F6iSLPR/AL8adJKpcNOTp52GT4QNYnXLQezMgWSbi495+54RKjFfui6/
eC2MVBZpPMktYA8XsgMNYdDOW+IbbNvxvfMZ2ZhF3G+9jiI8BaigD4zhI6qU6Ddf
Urx/hRcR/1tCaTDBnALfokI2yioPen6pR4bztzdns7jK+LIGbTzPwO/RZXGd+Z2x
k/TABg0u619M+TQcjkYLeuJ/8Xirpoo3YnIECs9ojuMUkCpZbBRlrqDsDerkRvjm
3TlmRWM7PZou2EvMBnB0+CTID8s/dxBXMRAZuQu5yWoqwWrRTKzx8AMWJv9ymQV9
ocDp7nFiIWy4HpvK1s+dkT3+4FKPy4nq1p9XAVd/a1BB55V3TQILwj2BGLr/FWfp
5Gl+JhJCCcikFhQMuOKt
=mDWX
-----END PGP SIGNATURE-----

--2fHTh5uZTiUOsy+g--
