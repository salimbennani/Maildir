Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 12 Dec 2018 08:56:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 42D1758079D;
	Tue, 11 Dec 2018 13:25:17 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 11 Dec 2018 13:25:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AGwioMRRlkH7b2nODl08o5q550Npsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YByBt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDYy8?=
 =?us-ascii?q?YYkAAeoPM+hbsofzuUcBrQCmBQSuH+7v1iNEi2Xq0aEmz+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34Or8TUe+pz6nD0DvNYO1N2Tjn9YjIdhYhofCSUrJqasra1E4iFwXYgVqO?=
 =?us-ascii?q?sozqJS6V1uALs2ia8eVgT/mvhnUoqwF2pTivycMshZfTio0JzVDE8Dx0zYAoLt?=
 =?us-ascii?q?O7UE52ecCoHIdUui2AKod7TN0uT3t1tCs51rEKo5+2cSoSxJg52xLSb+aLfouI?=
 =?us-ascii?q?7x75SuqdPDd1iGh4dL+7iRu/91WrxPfmWcmuyllKqzJIktnSuXAJ0Bze8taHSv?=
 =?us-ascii?q?Rj8Ue7wzqP1B7c6vtCIU8qkarXMZkhwqQ/lpYLsETDGDH5mFnugaOIakkp/vKk?=
 =?us-ascii?q?5/npb7n4vJOQKox5hh3kPqkvmMGzGeE4PRIPX2if9+S8zrrj/UjhTbVOj/02lL?=
 =?us-ascii?q?TZsZ/DKcQYuKG5GQlV3Zgn6xqmCDen3tIYkmcdLF9eZhKHgJbmO0vULPD7E/i/?=
 =?us-ascii?q?mVKsnylvx/zcOb3hGJrNImDZkLj9ZbZ991JcyA0rwNBb5pJUCa8OLOj8W0/sr9?=
 =?us-ascii?q?HYCh45Mwqpw+foEtl914UeWX6RDa+dKq/drViI5uc3KemWeIAVoCr9K+Qi5/P2?=
 =?us-ascii?q?jX82g14dfbWz0psQcny4HulmLF+fYXrjmdoBFWYKvgwjTO3lklGCUDhTZ2qsUK?=
 =?us-ascii?q?I4/D00FIWmDYLbTIC3nLOBxDu7HoFRZm1eCFCMFmnne5+HW/cLbiKSJMhhnycA?=
 =?us-ascii?q?VbigTY8hyB6vuBX7y7phMurb5CkYuYj/29hy4u3ZjQsy+iBsD8SBz2GNSHl5kX?=
 =?us-ascii?q?kTRz8226B/olZxyk2Z3qh6mPFYEd1T5/VUUgY1L5Lczup6C8zsVQLFZNuGVFGm?=
 =?us-ascii?q?QtC+CzErUt0x28MOY1p6G9i6jRDMxSyqD6URl7yKHpM09K3c0mP1J8Z8zXbGya?=
 =?us-ascii?q?Ygg0MnQstJKW2pmKp/+xLPCI7OlkWTj7yqergE3C7R6GeDynKDs1xCXw5uT6rJ?=
 =?us-ascii?q?R3AfaVHQrdTi+EzCSbiiCbAkMgtEzc6PMa9KatzvjVVbS/bvItXeY2Stm2iuAR?=
 =?us-ascii?q?aE3K+DbI3ve28FxiXSFFAEkxwP/XaBLQUxGz2uo3zAAzB0FVLgeUXs8fJgp3O9?=
 =?us-ascii?q?VUI0ywCKb0t817u64BIVhPqcS+8N0bIAoisutzJ0HFOl1dLMF9WAvxZhfLlbYd?=
 =?us-ascii?q?4l/FdH1GfZtwthPpygL6FunEIefx5wv0P00xV3C4NAkccxoXMuzQpyL7+Y0Vxb?=
 =?us-ascii?q?ezOZ25DwJqPYKm3o8B+zbK7W30nU0MyK9acX9PQ4t1LjsRmzGUom7Xpm3Mda0n?=
 =?us-ascii?q?uG6prREQodTIj+UkA09xh9ubHXeS0954LS1X1xPqi4qD7C29Q1BOQ7zhasZctQ?=
 =?us-ascii?q?MKSBFAXqCc0VG9CuKPA2m1iudh8FPP1S+LQoMM+8dvqG2LSkPOBvnD+9iWRH4Y?=
 =?us-ascii?q?Z90l+D9iZmS+7I2YoFzO+c3gedSzj8i1KhuNjtmY9YfTESAna/yS/8CY5LZ619?=
 =?us-ascii?q?YZwECX2zLM2w3Nl+gYDiW2RZ9FK6G1wJwsupdgeMYFzn2g1Q018aoXimmSu+0j?=
 =?us-ascii?q?x1nCslrquZ3CzS3evicAALNXJMRGlnlV3sO5S7j8gGXEi0aAgkjBuk5Ufgy6lb?=
 =?us-ascii?q?vqh/NHTTQUFTcijyLmFiVLawt7WYb85O7pMorTtYUOCmbV+GTb79pgMQ0zn/EG?=
 =?us-ascii?q?tG2DA7azaqt437nxNgkmKdL3VzrH3DdcFr3xjf59/cRf9X3jUYQil1kj3XBlm6?=
 =?us-ascii?q?P9m08tSYjZbDsuaiV22/Up1fazXkzYSFtCGj/21lHQW/n+yvmt3gCQU70TX019?=
 =?us-ascii?q?5wWSXKrRb8ZJLm16C7MeJhY0lpC0Xw68t8GoFijIQwgIsc1mQdhpWQ5XAHi3v8?=
 =?us-ascii?q?Mc1H2aLia3oAXT0LzMTU4AT/2E1jM2iGx4T2VniGxsthZt+6Yn4Z2y4n7sBKDr?=
 =?us-ascii?q?uU46JAnSdvvlW4qgfRa+BnnjgB0fsu9GIag+YRtQoozyWdAaodEVNWPCPyjBSI?=
 =?us-ascii?q?886xrL9Ma2mxa7iw21FzndSgDLGEvwFdV2z1epYkHS9s8Mp/NEjA32H06oHhYN?=
 =?us-ascii?q?PQd84ctgWIkxfciOhYMI4xlv0PhSZ9OGPyp3sly/MgjRx13JG3p4yHK2Rr/KKk?=
 =?us-ascii?q?DR9ULDz1Z8UP+j7ziaZShNqZ34eqHp95ADUEQIPoTe60EDIVrfnoLByBEDo4qn?=
 =?us-ascii?q?eGA7bfGRKf5Vxir3LOFZCrKn6WKGMYzdVkWBmSOkhfjBoIUzU9m54zDhqqy9D5?=
 =?us-ascii?q?cEdl+jAR4Ub1qhlWxeJtKRb/SX3TpBuyZjc3VZifLwdW7gdY6EfOKsGe6uNzHy?=
 =?us-ascii?q?dF/pyutgCNK2qbZxhWAmENQECLG1fjPry279na7+eYHva+L+fJYbiWqe1eUOqI?=
 =?us-ascii?q?xYuy0oR8+TaALN6PPn5kD/00wUdDWXF5G8LEmzQAUSAXliTNb9KFqxe44CF4ss?=
 =?us-ascii?q?e/8PHzUgL1+YSPE6dSMclo+x2ugaeMKe+QhCV6KTZZzJ8MxmXIyL8Q3FEMkSFu?=
 =?us-ascii?q?aiKtHK8EtS7MSqLQh6BWAwQaayN1KMtH8aY80hNRNs7cj9P/zqR4geItC1dZSV?=
 =?us-ascii?q?zhndmkatYXI26mLlPIGkaKOK6CJT3K2Mz3ZaK8SbtNjORbrRGwuDCbE1P9MTSH?=
 =?us-ascii?q?jTXmSxevMeRUhiGBIBNeoJ29cgpqCWX7UNLmaxi7PMVrgjEs3bI0hm3FNWgHPD?=
 =?us-ascii?q?h4ckNNqKCQ7CxCjvV+HWxB8mRqLe2elymF6OnYL44cseF3DSRsi+Ja/HM6xqNV?=
 =?us-ascii?q?7S5eQvx1nSrSrth2rFCnkumA0DxnUBVVpzZPhYKLu1hiOKrD+plBX3bE4AwC7W?=
 =?us-ascii?q?GKBxsWoNtlD46nh6cF7NHTlKv1YBxC+tTf8M8YANKcfMSOLHcqMRPvEzPQCAwf?=
 =?us-ascii?q?ZTGuPGDbwUdalafB2GeSq80cq5Pv0LYDUbZGUFo0G+kBQhBjENEZKYpzWDIpi6?=
 =?us-ascii?q?Wzg8kP6n6z6hLWQZMJ7dj8SvuODKC3e36ihr5eak5NmOugIA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AsAQBUKhBch0O0hNFlgheDbCeDe5Qrg?=
 =?us-ascii?q?WsFHRSIf44/gSQDTCwTAYcuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAG?=
 =?us-ascii?q?CYQEBAQECAQECIAQZAQE3AQUJAQEKCwMKAgImAgIDHgESAQUBHAYKCQUDgxmBa?=
 =?us-ascii?q?gMNCAWaSjyKHXB8M4J2AQEFhQoNghQIEnmLMBeBQD+BEYMSgldHAoRlgleJGVK?=
 =?us-ascii?q?GU5ARLgmFO4hngy8YgVyPZCyJfIR8igAwgSWCDnCBAQaCNYInF4NKinQeM4EFA?=
 =?us-ascii?q?QGKYwEB?=
X-IPAS-Result: =?us-ascii?q?A0AsAQBUKhBch0O0hNFlgheDbCeDe5QrgWsFHRSIf44/gSQ?=
 =?us-ascii?q?DTCwTAYcuIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECI?=
 =?us-ascii?q?AQZAQE3AQUJAQEKCwMKAgImAgIDHgESAQUBHAYKCQUDgxmBagMNCAWaSjyKHXB?=
 =?us-ascii?q?8M4J2AQEFhQoNghQIEnmLMBeBQD+BEYMSgldHAoRlgleJGVKGU5ARLgmFO4hng?=
 =?us-ascii?q?y8YgVyPZCyJfIR8igAwgSWCDnCBAQaCNYInF4NKinQeM4EFAQGKYwEB?=
X-IronPort-AV: E=Sophos;i="5.56,343,1539673200"; 
   d="scan'208";a="54779530"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 11 Dec 2018 13:25:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726236AbeLKVZM (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 11 Dec 2018 16:25:12 -0500
Received: from mail-pg1-f193.google.com ([209.85.215.193]:32855 "EHLO
        mail-pg1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726134AbeLKVZM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 11 Dec 2018 16:25:12 -0500
Received: by mail-pg1-f193.google.com with SMTP id z11so7248139pgu.0
        for <linux-kernel@vger.kernel.org>; Tue, 11 Dec 2018 13:25:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=SUG8wLqK3LkDCBK9Mi1GQnFqyXw85mqX04pXHST8jRE=;
        b=s+Ek+dMfmkYIRCxBn99R4Pmxr4+G0eJel6lofpVXMoUQsnyB04jJ5zWupwOlOV3Mlo
         58iihqdfa/Mg9ud/1gwMmNdceG97Xu82IU1bR0qdBw9nXKU5G7w9T+0kF11hVkgXg1nb
         MYl6rV1JWG5RsrJD1etzYabLl9eGhKwhHsV3bXk/ij1kX87Skh2+w1E+InLol6OSUCjg
         mfCmn+0nKkoGYc0QguxblBS/qdqh1ppQGa6VqNpPWRnLK7j6yfpw34OSUqrdFV0VfB3j
         RdwSJePLZNP6mUhxrR8fvNXkOJO/YdAO6wfNjQ2HWq0KUGy/HL4exl0Ftb7EXCz02Fhe
         uI+Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=SUG8wLqK3LkDCBK9Mi1GQnFqyXw85mqX04pXHST8jRE=;
        b=CCV3T5lJzN8xZuPNkgkRq/e9QBtZoBKw285pvIseiAnrP9Bpm7GGZjPbLmRxoKeTTK
         PNwrww9EsZWezzCxV33j5CF1OtQBj8E/4VbaRUoqpjO/38SaRMq/McJhd7ZScPinevh3
         63q6th329RJZfBjk/YfYcSSawaVNiIT/IVLbsfl7KZrlkwDd9Ga3t70fwIYNbRsx7iUJ
         Oyc3uoQffXQPFV7pS55kyWBKMxOE/7ogfO+303bxf2jlRFA2+DUWf9qEHkC99u1s699Q
         mQe8xM0FiiPBXZ6iNl8juq0ikL/5uUyX6c1jS8PD7DjIAaUw0omdOAz3dBd9aZJvpyBi
         mLnA==
X-Gm-Message-State: AA+aEWbaFxbcwR4RF/XxGjXfF31ZtN5S4aa4tuXiIKt50HcBUJ4pO6D5
        vDAUQOF8JNMxKlm8IxbQgbrHH66Bgdm53A7cCHps7g==
X-Google-Smtp-Source: AFSGD/WevDDcn/E44p/xzMoUY4wPhSV1VhQwGlfvFmXW17PYSScWt1GQFLIcyQZaq/xQHibHfnMJgapYT8oBC/qwK7c=
X-Received: by 2002:a65:4683:: with SMTP id h3mr15374396pgr.225.1544563511163;
 Tue, 11 Dec 2018 13:25:11 -0800 (PST)
MIME-Version: 1.0
References: <20181210234201.4850-1-natechancellor@gmail.com>
In-Reply-To: <20181210234201.4850-1-natechancellor@gmail.com>
From: Nick Desaulniers <ndesaulniers@google.com>
Date: Tue, 11 Dec 2018 13:25:00 -0800
Message-ID: <CAKwvOdkOwdrsOAADGp9To2F5o2AAW7123yADFzYLMawwsinmug@mail.gmail.com>
Subject: Re: [PATCH] drm/amd/display: Pass app_tf by value rather than by reference
To: Nathan Chancellor <natechancellor@gmail.com>
Cc: Harry Wentland <harry.wentland@amd.com>, sunpeng.li@amd.com,
        alexander.deucher@amd.com, christian.koenig@amd.com,
        David1.Zhou@amd.com, amd-gfx@lists.freedesktop.org,
        dri-devel@lists.freedesktop.org,
        LKML <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 10, 2018 at 3:42 PM Nathan Chancellor
<natechancellor@gmail.com> wrote:
>
> Clang warns when an expression that equals zero is used as a null
> pointer constant (in lieu of NULL):
>
> drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm.c:4435:3:
> warning: expression which evaluates to zero treated as a null pointer
> constant of type 'const enum color_transfer_func *'
> [-Wnon-literal-null-conversion]
>                 TRANSFER_FUNC_UNKNOWN,
>                 ^~~~~~~~~~~~~~~~~~~~~
> 1 warning generated.
>
> This warning is caused by commit bb47de736661 ("drm/amdgpu: Set FreeSync
> state using drm VRR properties") and it could be solved by using NULL
> instead of TRANSFER_FUNC_UNKNOWN or casting TRANSFER_FUNC_UNKNOWN as a
> pointer. However, after looking into it, there doesn't appear to be a
> good reason to pass app_tf by reference as it is never mutated along the
> way. This is the only code path in which app_tf is used:
>
> mod_freesync_build_vrr_infopacket ->
>     build_vrr_infopacket_v2 ->
>         build_vrr_infopacket_fs2_data
>
> Neither mod_freesync_build_vrr_infopacket or build_vrr_infopacket_v2
> modify app_tf's value and build_vrr_infopacket_fs2_data expects just
> the value so we can avoid dereferencing anything by just passing in
> app_tf's value to mod_freesync_build_vrr_infopacket and
> build_vrr_infopacket_v2.
>
> There is no functional change because build_vrr_infopacket_fs2_data
> doesn't do anything if TRANSFER_FUNC_UNKNOWN is passed to it, the same
> as not calling build_vrr_infopacket_fs2_data at all like before this
> change when NULL was used for app_tf.

Nathan,
Thanks for sending this patch.  I was hoping to provide review sooner,
but have been quite busy lately.

Yeah, especially for LP64 targets, the pointer to enum is larger than
just the enum, and if it's not being updated ("in/out paramter")
there's no need to pass by pointer.

>
> Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
> ---
>  drivers/gpu/drm/amd/display/modules/freesync/freesync.c | 7 +++----
>  drivers/gpu/drm/amd/display/modules/inc/mod_freesync.h  | 2 +-
>  2 files changed, 4 insertions(+), 5 deletions(-)
>
> diff --git a/drivers/gpu/drm/amd/display/modules/freesync/freesync.c b/drivers/gpu/drm/amd/display/modules/freesync/freesync.c
> index 620a171620ee..520665a9d81a 100644
> --- a/drivers/gpu/drm/amd/display/modules/freesync/freesync.c
> +++ b/drivers/gpu/drm/amd/display/modules/freesync/freesync.c
> @@ -656,7 +656,7 @@ static void build_vrr_infopacket_v1(enum signal_type signal,
>
>  static void build_vrr_infopacket_v2(enum signal_type signal,
>                 const struct mod_vrr_params *vrr,
> -               const enum color_transfer_func *app_tf,
> +               enum color_transfer_func app_tf,
>                 struct dc_info_packet *infopacket)
>  {
>         unsigned int payload_size = 0;
> @@ -664,8 +664,7 @@ static void build_vrr_infopacket_v2(enum signal_type signal,
>         build_vrr_infopacket_header_v2(signal, infopacket, &payload_size);
>         build_vrr_infopacket_data(vrr, infopacket);
>
> -       if (app_tf != NULL)
> -               build_vrr_infopacket_fs2_data(*app_tf, infopacket);
> +       build_vrr_infopacket_fs2_data(app_tf, infopacket);
>
>         build_vrr_infopacket_checksum(&payload_size, infopacket);
>
> @@ -676,7 +675,7 @@ void mod_freesync_build_vrr_infopacket(struct mod_freesync *mod_freesync,
>                 const struct dc_stream_state *stream,
>                 const struct mod_vrr_params *vrr,
>                 enum vrr_packet_type packet_type,
> -               const enum color_transfer_func *app_tf,
> +               enum color_transfer_func app_tf,
>                 struct dc_info_packet *infopacket)
>  {
>         /* SPD info packet for FreeSync */
> diff --git a/drivers/gpu/drm/amd/display/modules/inc/mod_freesync.h b/drivers/gpu/drm/amd/display/modules/inc/mod_freesync.h
> index 949a8b62aa98..063af6258fd9 100644
> --- a/drivers/gpu/drm/amd/display/modules/inc/mod_freesync.h
> +++ b/drivers/gpu/drm/amd/display/modules/inc/mod_freesync.h
> @@ -145,7 +145,7 @@ void mod_freesync_build_vrr_infopacket(struct mod_freesync *mod_freesync,
>                 const struct dc_stream_state *stream,
>                 const struct mod_vrr_params *vrr,
>                 enum vrr_packet_type packet_type,
> -               const enum color_transfer_func *app_tf,
> +               enum color_transfer_func app_tf,

Don't you need to update the callsite of `mod_freesync_build_vrr_infopacket` in

drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c#4949:

-                                           NULL,
+                                          transfer_func_unknown,

Maybe at that point the `if (app_tf != NULL)` could be replaced with
`if (app_tf != transfer_func_unknown)` hoisted from
`build_vrr_infopacket_fs2_data`? (There's only one caller of
`build_vrr_infopacket_fs2_data` today, maybe fine to leave the
unconditional call and check).

Either way, I suspect without the change to
drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c, that this fails to
compile?
-- 
Thanks,
~Nick Desaulniers
