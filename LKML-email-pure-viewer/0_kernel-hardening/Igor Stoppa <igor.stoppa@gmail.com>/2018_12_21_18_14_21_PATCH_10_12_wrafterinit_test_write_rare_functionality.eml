Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:54:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0EB7E58050C;
	Fri, 21 Dec 2018 10:15:52 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 10:15:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AgWuUIBH+UjuZD0ErWNJclZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75ocW5bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoZP9qFQBoxulHQmhBvjixiNLi3LswaE3yfgtHR3A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakRXuC1y7PIxijeYfNK3jf98JDIfQo8qvyLXLJwfs3RyVM1GwPeklWQ?=
 =?us-ascii?q?rpTlPyuP2ekWvGib6vBvVeOri2I9tw5xpT2vy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wpio21qEKtYO+cSQXx5ko3AXQZvmHfoSV?=
 =?us-ascii?q?5x/sTumcLit7iX9geL+wmwi+/Eelx+HiWcS7zVRHoy9ZndbWtn0N2Rne5daFR/?=
 =?us-ascii?q?Rg4Eus3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqVrDHiDol0XslqOWdVsr+vKu?=
 =?us-ascii?q?6+v5ZrXqvJicN5V7ig3mM6QunNKwAfggPwQQQ2SW/f6w2KDt8EHnWrlGk/47nr?=
 =?us-ascii?q?XDvJ3bJ8kXvqu5DBVU0oYn5Ra/FTCm0NEAkHkDLVJFfg+HjofwN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtywPDHMLvhDYvXLnXYjrfhcqhy61RGxAow099f/ZRUBa8FIP7pXU/xrt?=
 =?us-ascii?q?PYAgcjMwOo2+bnFMl91oQGVGKLA6+ZM73dvUWH5+IyOOSMYI4VuDDgK/kq/fLu?=
 =?us-ascii?q?jHk5mUMDcqmtx5cYdHe4HvF+KUWDfXXsmssBEXsNvgcmTOzlklyCUSJJaHa1Ra?=
 =?us-ascii?q?485iw7B5igDYfMXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsp5mDwe?=
 =?us-ascii?q?SbehU5Mh1Q2ptALi0bVnNerU+iobtZ75zth6/e/TmAo29Tx1CcSdzm6MQ3t1nm?=
 =?us-ascii?q?MOWz85wqR/rVZhxVeE1Khym+ZYGsBL5/NVTgc6MobRz+9gBND0QA7BetaJR0yg?=
 =?us-ascii?q?QtWpGjwxStMxw9kTY0dyAdmijxbD3za0DL8RjbCEGJs08qfE1XjrO8l902rG1L?=
 =?us-ascii?q?Umj1Q+X8RAL3OmibBl+wjTHYHJlV6ZmLisdagb2C7N92KDzW6VsUFcUQ5wV7jF?=
 =?us-ascii?q?XH8FakvXq9T5+l3NT7u0Bbs7NQtBzNaIKrFWZd3xkVVGWPDjNczDbG2rhWe/Gw?=
 =?us-ascii?q?yExrOWY4rsYGUSwiPdBVMAkwAS+3aGKAc/Cj2go2LYEDxhC1bvb1nw/ul5rXOx?=
 =?us-ascii?q?VlU0wB2Sb019y7q1/QYYheCdS/MW2bIEpCchqjVuEFahxd7WDMCApw5gfKVabt?=
 =?us-ascii?q?Mw+1NH1WPftwxgMZ2sNaFihlgCcwtpu0PizQl4CoJFkcIytnMl0BJyKb6E0FNG?=
 =?us-ascii?q?bz6Xx5TwNaPYK2bs/BGjcbXZ2kzD39mM/KcP6/M4q0v4sQGtF0oi9Whn0tZP33?=
 =?us-ascii?q?ud4JXKEBQdUZbrXkkr8Bh6oqnQYjMh6IPMyX1sLa60vyfC2tI0Hucq1gysftZf?=
 =?us-ascii?q?MKyeEg/yHNYXB8yvKOwshlioYQgIPOFU9K4oIcymc+GK17KsPOZlhDiml3hI4J?=
 =?us-ascii?q?hh0kKQ8CpxUvTI35cZzP6CxAuISjD8gE2nss/pg4BEZCgeEXalxijgGYFeeLdy?=
 =?us-ascii?q?fYENCWq1J823x9N+h4PiWnJC9V6jAU8G19GteRaIc1P92ghQ31wNoXO7gSu40y?=
 =?us-ascii?q?B0kzYxo6uf3SzC2eTjeAAcOm5WQmlvllPsIYmyj9AHU0mkdQkplB255Unkw6hX?=
 =?us-ascii?q?vrhwL27WQU1QZSj5M3liUrestrqFe8NP6oknsT9UUOS/ZlCWUKX9rAEZ0yPgHm?=
 =?us-ascii?q?tewi40dzext5X9nhx6jn+dLXlpoHrYf8Fw2QnQ5NjGSfFN2ToGQTFyiSPLCVik?=
 =?us-ascii?q?I9mp4dKUmo/Ds++kUGKtTJ9TcSjtzY6bsCu75GtqAQCwnvypm93nFxQ63jH/19?=
 =?us-ascii?q?VwSSrIqxP8aJHx16umKeJnYlVoBFjk5sp5AI5+k5E8hJEN2XcAgJWV8mEKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98VKCK?=
 =?us-ascii?q?aX7LNehyd0rES3rRnNYfdjhDcS0uUh6GQVg+wSvAotzyOdAq0dHEVCPCzskQiI?=
 =?us-ascii?q?4M66rKlNeGmvdr2w3lJknd+9FLGCvh1cWHHhd5c+Gi9w699zMVPW333194HkY8?=
 =?us-ascii?q?LQbdMIux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyXuaMwJ/THtibtektyS34CyBZhhHjQLXJ31TfOnCj4StPLnNxqQHz04sH?=
 =?us-ascii?q?uUBb3fHQqH4kd8s33PC4yrN22QJHQBz9VtXhydK1JEgAwOQDU2hJ05Fh2pxMz8?=
 =?us-ascii?q?dkd2/CsR60X8qhtNzOJoKhb+Xn3epAeudjc7VpyfIABK4QFF4kffKdae4f5rHy?=
 =?us-ascii?q?FE4p2hqxSAK2ycZwRVFGEJR1aLB1b5Mrm14tnA9eeYC/G6L/vPZ7WOtONfW+2J?=
 =?us-ascii?q?xZKpzotp4TKMOt+TMXllCv0xwlBDUmxhG8TFhzUPTDQalyLTYM6apxe8+Sx3ot?=
 =?us-ascii?q?q88PTxXwLv6pWAC6FPMdV04B22haaDN+iNhCd2MzpY15UMxWPWx7gbxlIdlyZu?=
 =?us-ascii?q?dzy1G7QaqSHNVL7QmrNQDxMDcSxzKdBH77gi0QhNI8LbjtL126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9uSqaE0/mJDiM?=
 =?us-ascii?q?iyPlWAyvMe5SiiGWJxheuIC7chZwBmnvVtPmahunMNBpiT0626E7hnTPNWQEKz?=
 =?us-ascii?q?hzb1tNrqGM7SNfmvh+G3ZO7nxgLemFnSaW9+jZKpYMvvttDSR5jOZa4HU8y7tI?=
 =?us-ascii?q?4yBIXv11mC3OrtFwp1GqiPWAyj1iUEkGljEerYSHrA1GJLne85haQnXFtEYJ8H?=
 =?us-ascii?q?mXIx0PrtBsEtzzsqQWzNXTwua7DT5e79LZ4oMjBszfL9LPZGUgNR74MD/SAhEM?=
 =?us-ascii?q?QTOiOSfYnUML1Lmq+2GYtNAIq5rog4YUQ/cPTFEpG+kIIkVjEsYLLJp+UnUji7?=
 =?us-ascii?q?HNyIYk7GSz5DnYQt5XuNiTWvuMDLPvITCCgL9sYxoO3KO+LIIPO4m90EtnPB0y?=
 =?us-ascii?q?uYXPGgLiWtBEuGU1fAg0qV9l9Hl4U311xUTodkWs6npVHvmxyFp+tgt/aOsqvB?=
 =?us-ascii?q?Xx5Vh/DFPXqTE1mU830YHviC2cajv4Ko+0XIdLG2z1vU13OZT+FVVPYBW2jHBj?=
 =?us-ascii?q?YRbLQKgZtKdnbXhiwFvdtpxVX+VASrVcaTcfwPiWY7Mj1lEK+Qu9wkoSxOTCE9?=
 =?us-ascii?q?NZiAwyaZfk+3NP3Bgld8IyPbTZDKVMx1lUwKmJu3n7hagK3AYCKhNVoyupcykS?=
 =?us-ascii?q?tRlNb+F+Kg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AEAACBLR1ch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYEwgjsnjBZfjT+JE444FIFfEwEBGBMBhzAiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKSMMgjopAYJnAwMBAgggBwENARsdAQMCCQEBBRM4Ax4CB?=
 =?us-ascii?q?QcBBAEFAQMBGAYBEgWDHYFpAQECFQEEmk88jCsFARcNgmoFgQYBgS6CCgoZBAo?=
 =?us-ascii?q?ZDV6BNwIGEodsgyWBHIFXP4ERhF2BDIFvhhoCiUGHcY9gMwcCgiUEhCmGdHCDJ?=
 =?us-ascii?q?wwYiXqBcgxRhRYsiSeGEIoSAgQCBAUCBQ8hOWyCDjMaI4IdgR+CGwwXg0qKHAE?=
 =?us-ascii?q?4PjIBgQMBAQE7jXMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AEAACBLR1ch0O0hNFjGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYEwgjsnjBZfjT+JE444FIFfEwEBGBMBhzAiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKSMMgjopAYJnAwMBAgggBwENARsdAQMCCQEBBRM4Ax4CBQcBBAEFAQMBGAY?=
 =?us-ascii?q?BEgWDHYFpAQECFQEEmk88jCsFARcNgmoFgQYBgS6CCgoZBAoZDV6BNwIGEodsg?=
 =?us-ascii?q?yWBHIFXP4ERhF2BDIFvhhoCiUGHcY9gMwcCgiUEhCmGdHCDJwwYiXqBcgxRhRY?=
 =?us-ascii?q?siSeGEIoSAgQCBAUCBQ8hOWyCDjMaI4IdgR+CGwwXg0qKHAE4PjIBgQMBAQE7j?=
 =?us-ascii?q?XMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="57367620"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 10:15:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729309AbeLUSPe (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 13:15:34 -0500
Received: from mail-lj1-f194.google.com ([209.85.208.194]:33606 "EHLO
        mail-lj1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725814AbeLUSPI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 13:15:08 -0500
Received: by mail-lj1-f194.google.com with SMTP id v1-v6so5549484ljd.0;
        Fri, 21 Dec 2018 10:15:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references:reply-to
         :mime-version:content-transfer-encoding;
        bh=Aq308heKsk4esUtukI9Gf9fzo9QCFgtk6ZobMHavXuA=;
        b=IRZ+PyBuxLaMslt65054k/kYU+s6Lx4w0X2OysMfSTyO41jhjmWgxTFGHtjyQ+KZr4
         w/HUG2V9Vk8dOcm1pqIsGS53R0nxnYgaSv6NZ3MoEoX/E1QDatB0JLr4N5vj3Fvppvor
         hCCePLAOY147qrKlxJ3LwlvB6bl167jmFzii0cT5+me9jty91p++RXSs9DjhigrN674h
         nm2kyyk7NRrUo5nAjy3R6lnishwEuKRoaRRdd45ioq3et6t/YlIx/N1NvAnzY24H7BB8
         ZzUlKdl4g0sHWU4V1pL7qAnuA8szUKCICBLuXyeNK3U94W4ZJynrNRrhd5I2AXNHp4X3
         l8tg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:reply-to:mime-version:content-transfer-encoding;
        bh=Aq308heKsk4esUtukI9Gf9fzo9QCFgtk6ZobMHavXuA=;
        b=OXCFAoR7SET7Pf/DUlus6XOCnhn4CgYj9HcQayojW91Ssl7/J3Mq/ba6W9USNO4m8W
         LZUQ5nNjK7kvz8LW8mAZgKvNqhJZgcs1NWb8N0edVdOxKQmAMt7LzJLZ8vD2tL3+OPaf
         tpZGPFLJPnIr4v/NCk9EwqSjZ72bTr68CBTNHSA8QiUydWmPYn2vIN986n1EMBVL+g0s
         gH8r01P9NcyH2BrCcuu2E/QgdAraW6I1Li2yH1sH9PyzPAIzQt+zI4j5UIyu6XHjqQ8w
         XwxEbOSUQYpGCtNBqF3HLmMKpreh7NmJ/y8hIdmy+fNhehTHWN39ImPFWcCrh6shpGRU
         gHhw==
X-Gm-Message-State: AA+aEWafOqchn9OVjT4GuWneawblQf5WnJN9R5b/tVNqIUvb/Seskz1y
        Uutj/XdFU/YrKI174tmw8PM=
X-Google-Smtp-Source: AFSGD/UTO2+5Y57wxsVOt0L54LzOA6GkKnWKM/unPMbnjSXwDXmTroHSZC9Qk0m9UrkBOXswSYZzSA==
X-Received: by 2002:a2e:914b:: with SMTP id q11-v6mr2230934ljg.164.1545416105497;
        Fri, 21 Dec 2018 10:15:05 -0800 (PST)
Received: from localhost.localdomain (dmhwpt3bffxn8z3-j6k-4.rev.dnainternet.fi. [2001:14bb:51:a4c8:5c24:24d7:ca5f:e7d2])
        by smtp.gmail.com with ESMTPSA id m63-v6sm5444564lje.81.2018.12.21.10.15.03
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 10:15:04 -0800 (PST)
From: Igor Stoppa <igor.stoppa@gmail.com>
X-Google-Original-From: Igor Stoppa <igor.stoppa@huawei.com>
To: Andy Lutomirski <luto@amacapital.net>,
        Matthew Wilcox <willy@infradead.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Thiago Jung Bauermann <bauerman@linux.ibm.com>
Cc: igor.stoppa@huawei.com, Nadav Amit <nadav.amit@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        Ahmed Soliman <ahmedsoliman@mena.vt.edu>,
        linux-integrity@vger.kernel.org,
        kernel-hardening@lists.openwall.com, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH 10/12] __wr_after_init: test write rare functionality
Date: Fri, 21 Dec 2018 20:14:21 +0200
Message-Id: <20181221181423.20455-11-igor.stoppa@huawei.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181221181423.20455-1-igor.stoppa@huawei.com>
References: <20181221181423.20455-1-igor.stoppa@huawei.com>
Reply-To: Igor Stoppa <igor.stoppa@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Set of test cases meant to confirm that the write rare functionality
works as expected.
It can be optionally compiled as module.

Signed-off-by: Igor Stoppa <igor.stoppa@huawei.com>

CC: Andy Lutomirski <luto@amacapital.net>
CC: Nadav Amit <nadav.amit@gmail.com>
CC: Matthew Wilcox <willy@infradead.org>
CC: Peter Zijlstra <peterz@infradead.org>
CC: Kees Cook <keescook@chromium.org>
CC: Dave Hansen <dave.hansen@linux.intel.com>
CC: Mimi Zohar <zohar@linux.vnet.ibm.com>
CC: Thiago Jung Bauermann <bauerman@linux.ibm.com>
CC: Ahmed Soliman <ahmedsoliman@mena.vt.edu>
CC: linux-integrity@vger.kernel.org
CC: kernel-hardening@lists.openwall.com
CC: linux-mm@kvack.org
CC: linux-kernel@vger.kernel.org
---
 mm/Kconfig.debug     |   8 +++
 mm/Makefile          |   1 +
 mm/test_write_rare.c | 135 +++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 144 insertions(+)
 create mode 100644 mm/test_write_rare.c

diff --git a/mm/Kconfig.debug b/mm/Kconfig.debug
index b10305cfac3c..ae018e56c4e4 100644
--- a/mm/Kconfig.debug
+++ b/mm/Kconfig.debug
@@ -102,3 +102,11 @@ config DEBUG_PRMEM
     help
       After any write rare operation, compares the data written with the
       value provided by the caller.
+
+config DEBUG_PRMEM_TEST
+    tristate "Run self test for statically allocated protected memory"
+    depends on PRMEM
+    default n
+    help
+      Tries to verify that the protection for statically allocated memory
+      works correctly and that the memory is effectively protected.
diff --git a/mm/Makefile b/mm/Makefile
index ef3867c16ce0..8de1d468f4e7 100644
--- a/mm/Makefile
+++ b/mm/Makefile
@@ -59,6 +59,7 @@ obj-$(CONFIG_SPARSEMEM_VMEMMAP) += sparse-vmemmap.o
 obj-$(CONFIG_SLOB) += slob.o
 obj-$(CONFIG_MMU_NOTIFIER) += mmu_notifier.o
 obj-$(CONFIG_PRMEM) += prmem.o
+obj-$(CONFIG_DEBUG_PRMEM_TEST) += test_write_rare.o
 obj-$(CONFIG_KSM) += ksm.o
 obj-$(CONFIG_PAGE_POISONING) += page_poison.o
 obj-$(CONFIG_SLAB) += slab.o
diff --git a/mm/test_write_rare.c b/mm/test_write_rare.c
new file mode 100644
index 000000000000..30574bc34a20
--- /dev/null
+++ b/mm/test_write_rare.c
@@ -0,0 +1,135 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/*
+ * test_write_rare.c
+ *
+ * (C) Copyright 2018 Huawei Technologies Co. Ltd.
+ * Author: Igor Stoppa <igor.stoppa@huawei.com>
+ */
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/mm.h>
+#include <linux/bug.h>
+#include <linux/prmem.h>
+
+#ifdef pr_fmt
+#undef pr_fmt
+#endif
+
+#define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
+
+extern long __start_wr_after_init;
+extern long __end_wr_after_init;
+
+static __wr_after_init int scalar = '0';
+static __wr_after_init u8 array[PAGE_SIZE * 3] __aligned(PAGE_SIZE);
+
+/* The section must occupy a non-zero number of whole pages */
+static bool test_alignment(void)
+{
+	unsigned long pstart = (unsigned long)&__start_wr_after_init;
+	unsigned long pend = (unsigned long)&__end_wr_after_init;
+
+	if (WARN((pstart & ~PAGE_MASK) || (pend & ~PAGE_MASK) ||
+		 (pstart >= pend), "Boundaries test failed."))
+		return false;
+	pr_info("Boundaries test passed.");
+	return true;
+}
+
+static bool test_pattern(void)
+{
+	return (memtst(array, '0', PAGE_SIZE / 2) ||
+		memtst(array + PAGE_SIZE / 2, '1', PAGE_SIZE * 3 / 4) ||
+		memtst(array + PAGE_SIZE * 5 / 4, '0', PAGE_SIZE / 2) ||
+		memtst(array + PAGE_SIZE * 7 / 4, '1', PAGE_SIZE * 3 / 4) ||
+		memtst(array + PAGE_SIZE * 5 / 2, '0', PAGE_SIZE / 2));
+}
+
+static bool test_wr_memset(void)
+{
+	int new_val = '1';
+
+	wr_memset(&scalar, new_val, sizeof(scalar));
+	if (WARN(memtst(&scalar, new_val, sizeof(scalar)),
+		 "Scalar write rare memset test failed."))
+		return false;
+
+	pr_info("Scalar write rare memset test passed.");
+
+	wr_memset(array, '0', PAGE_SIZE * 3);
+	if (WARN(memtst(array, '0', PAGE_SIZE * 3),
+		 "Array write rare memset test failed."))
+		return false;
+
+	wr_memset(array + PAGE_SIZE / 2, '1', PAGE_SIZE * 2);
+	if (WARN(memtst(array + PAGE_SIZE / 2, '1', PAGE_SIZE * 2),
+		 "Array write rare memset test failed."))
+		return false;
+
+	wr_memset(array + PAGE_SIZE * 5 / 4, '0', PAGE_SIZE / 2);
+	if (WARN(memtst(array + PAGE_SIZE * 5 / 4, '0', PAGE_SIZE / 2),
+		 "Array write rare memset test failed."))
+		return false;
+
+	if (WARN(test_pattern(), "Array write rare memset test failed."))
+		return false;
+
+	pr_info("Array write rare memset test passed.");
+	return true;
+}
+
+static u8 array_1[PAGE_SIZE * 2];
+static u8 array_2[PAGE_SIZE * 2];
+
+static bool test_wr_memcpy(void)
+{
+	int new_val = 0x12345678;
+
+	wr_assign(scalar, new_val);
+	if (WARN(memcmp(&scalar, &new_val, sizeof(scalar)),
+		 "Scalar write rare memcpy test failed."))
+		return false;
+	pr_info("Scalar write rare memcpy test passed.");
+
+	wr_memset(array, '0', PAGE_SIZE * 3);
+	memset(array_1, '1', PAGE_SIZE * 2);
+	memset(array_2, '0', PAGE_SIZE * 2);
+	wr_memcpy(array + PAGE_SIZE / 2, array_1, PAGE_SIZE * 2);
+	wr_memcpy(array + PAGE_SIZE * 5 / 4, array_2, PAGE_SIZE / 2);
+
+	if (WARN(test_pattern(), "Array write rare memcpy test failed."))
+		return false;
+
+	pr_info("Array write rare memcpy test passed.");
+	return true;
+}
+
+static __wr_after_init int *dst;
+static int reference = 0x54;
+
+static bool test_wr_rcu_assign_pointer(void)
+{
+	wr_rcu_assign_pointer(dst, &reference);
+	return dst == &reference;
+}
+
+static int __init test_static_wr_init_module(void)
+{
+	pr_info("static write_rare test");
+	if (WARN(!(test_alignment() &&
+		   test_wr_memset() &&
+		   test_wr_memcpy() &&
+		   test_wr_rcu_assign_pointer()),
+		 "static rare-write test failed"))
+		return -EFAULT;
+	pr_info("static write_rare test passed");
+	return 0;
+}
+
+module_init(test_static_wr_init_module);
+
+MODULE_LICENSE("GPL v2");
+MODULE_AUTHOR("Igor Stoppa <igor.stoppa@huawei.com>");
+MODULE_DESCRIPTION("Test module for static write rare.");
-- 
2.19.1

