Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  20 Dec 2018 08:43:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 091A558055F;
	Wed, 19 Dec 2018 13:35:23 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Dec 2018 13:35:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9M41ExxuNvyOYtrXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ewSL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhMWSJPAY2y?=
 =?us-ascii?q?aIkAD+QbPelXoIf9vEMOoBmlCAWwB+7i0CNEi2Xq0aEm1ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nar9r1NKAIUeuo0afI0TLDb+tO2Tjn9YPFdREhof6LXbJqa8bR0lUvFwTdjlWI?=
 =?us-ascii?q?s4PoJDyV1uEXvGia6+psT/6gi2kiqwxopDWk28QiipHRi44L1lzJ8T91zJs7KN?=
 =?us-ascii?q?GmUkJ3fN2pHIdKuyybNYZ6Wt0uT310tConz7AKpJG2czMRx5kixxPTdvmKfJKH?=
 =?us-ascii?q?7x3/V+ucJDd1i257dL+wghu+70etxfD+W8SxzFlFtCpIktfJu38T1RHc99aLR/?=
 =?us-ascii?q?1g9Um7wzmPzRrc6uRcLEA0i6XbL5khz6Yulpocr0vDBDX6mEbog6+McEUr5Oyo?=
 =?us-ascii?q?5/7gYrX8qZ+QL450igfgPaQygsGzH/g0PwwUU2SG9+mwyqfv8VD6TblWlPE7k6?=
 =?us-ascii?q?vUvIjfJcsBp665BwFV0pwk6xa6Fzqm1NUYnX8aLFNKYR6HjJbmO0vIIP/mCfez?=
 =?us-ascii?q?mlOskTltx//YJL3sGYvNLnfdn7f7Z7p96FBTyBA1zd9B45JYELYBIOj8WkPprt?=
 =?us-ascii?q?zXEgc5MxCow+bgENh90oIeWWGRDaODP6LSrESF5uYuI+mKeY8UtyzxK/kj5/7y?=
 =?us-ascii?q?k3A5nUURcrWu3ZsScHq4BOhpI12FYXrwhdcMCWcKsRA/TOz2klKCViRfZ3avX6?=
 =?us-ascii?q?0m4DE7B5mrDYPCRoCrnbyA0z23HpxQZmBaFF+MFW3keJmDW/cJcCiSONNukiQY?=
 =?us-ascii?q?Vbi9TI8szQuhtBT6y7pgLerY4DcYuojh1NVu4+3TlBcy9SF7DsiH0mGNSX10kX?=
 =?us-ascii?q?0MRzMswK9/pkl9wE+Z0adkm/xYCcBT5/RRXwc5L5HcyfZ2C9TzWg3beNeJR02r?=
 =?us-ascii?q?QtGnATE3U9IwzMUCY0d7G9W+kB/D2zCmDKMSl7yOHJY06L7T32DtJ8ZhzHbLzL?=
 =?us-ascii?q?QugEM4QsRRL2GmhrRw9w7IB4HXlUWVkKKqdacZ3C7J72qDyWuOvEdFUA9/S6nF?=
 =?us-ascii?q?XHYfZlfIotT9/E/NU7iuCbE/OAtb1cGCMrdKasHujVheWfjsIsrebHyrl2ewHx?=
 =?us-ascii?q?mIwKiMY5Tse2gG2CXdCU4Ekx0c/HqcNAg+ADuhrHzaDDB0CV3vZEbs+/FkqHyn?=
 =?us-ascii?q?Vk800x2Kb0p52rqp+x4VgPucS+8T3rMEoishty94HFGn39LSCtqAoQVhcb5YYd?=
 =?us-ascii?q?M85ldHyG3YuxZ8PpymM6BtmFoefx5rsEPp0hV9Ep9AntQyrHM20ApyLrqV30lF?=
 =?us-ascii?q?dzyG0pH/JL3WJnPp8xCydqHZwFfe0NWR+qcR8/k4r1TjvAe0Fkst6Xln0t9V02?=
 =?us-ascii?q?eC6ZXOFgYdTZXxUkMv/Rhgu77aejU955/T1XB0Mai0ryXO1M4zCOokyhavZdFf?=
 =?us-ascii?q?MKyfGQ/2Es0aAdWuKeMwl1ioaBIEIP5d9KouM8y6cPuG3bahPPx8kzK+kWRH/I?=
 =?us-ascii?q?d931qW9yp9VuHHxYwFzOyf3gedUTfzkk2hssHulY9Yfz4SGnewxjb+BI5WYK1/?=
 =?us-ascii?q?ZoILCWaoI82qydRynZ/tW3hE9FG9A1MKwtOmeR2Xb1blxw1fyVwXoWC7mSu/1z?=
 =?us-ascii?q?F1kzAporCf3SDU2OTiaRwHN3VPRGlji1fsPIe1g8obXEiucwgmih+l6VzmyKhc?=
 =?us-ascii?q?oaR1N3PTTltQfyjqM2FiVbO9triYbM5V65MosiJXXP6nYV+ASb79oBoa0yX9EG?=
 =?us-ascii?q?tY3z07czCqupPknx11km6dLXBzrGbHdsF03xvQ+NvcRftJ1DocWCZ4kSXXBkS7?=
 =?us-ascii?q?P9Sx/dSbjZDDvvq8V2KgUJ1eai3rzYKGtCum6mxmGxy/n/avmtL5FQg2yzP019?=
 =?us-ascii?q?5vVS/QthbzfpHr17imMeJgZkRoB0Xz68tgFoF+j4s/npcQ2XcBi5WR/HoHl3rz?=
 =?us-ascii?q?MNpB1aL/anoNWSAEw9rP7Af5301jK2qDx5jlWXWF3sthe966b3sT2iI87MBFEr?=
 =?us-ascii?q?2Y7bJakituvlq3sxjRbuNjkTcHxvsj83oag+APuAowwSSRGLESHU9EPSPykxSE?=
 =?us-ascii?q?9cyxrKJSZGy3a7i/yFJ+ncy9DLGFugxcRHH5epI4ES5x9Mp/Nk/M0Gbo6oHlY9?=
 =?us-ascii?q?TQadMTthuJkxbPleRVKZQxluYUiipjI27yoXoly+sjhxx0wZ66pJSHK3lq/K+h?=
 =?us-ascii?q?GRFXLDr1Z8cO+j33iaZeg92b34SuHpVnBzUKU4HkTfOuEDIOq/vnMxyCHyE7qn?=
 =?us-ascii?q?eeAbDfBxOQ6F96r3LTFJCmL3OXK2Mczdp8XxmRPlBfjBoXXDUnnZ45Cwaqy9b6?=
 =?us-ascii?q?cEpi4jAR51j4qgZDy+5yNhn/VHvfqxmsajsuVJefKx9W5BlY50jJKcye8v5zHy?=
 =?us-ascii?q?ZA85yhqwyNN3WbZxlSAmEPQECEHFfjPr+h5dTb9+iYB+y+L+bBYLmUqOxeUeuI?=
 =?us-ascii?q?yoyr0od84zmMMcCPNGF4D/InwkpDQWx5G8PBljUPVSMXliHNb82apBum+S13tM?=
 =?us-ascii?q?e/8Pv1VwL1+IuPEKBfMdFu+xCwnKeCOPSchCd/KTZEyJwMwWXEx6QY3F4Xkytu?=
 =?us-ascii?q?bSWiEawctS7RS6LdgrVYDwMAZCNpKsRJ77gw3g1MOcPAjtP117h4juM6CltfVF?=
 =?us-ascii?q?zhnN2patIOI22nKFzHA0OLPqycJTLX28H3fb+8SbpIgeVIth2wvCyXHFP5Mjuf?=
 =?us-ascii?q?lznmSRavPPpIjCGaOhxepY68fgxsCWjlUNLpdBm7PMVrgj0xxL0+nmnKOnIEMT?=
 =?us-ascii?q?hgb0NNqaWd7CNCjfV5HmxB73xlIvGFmiaZ9ebYLJkWvOBvAiR1keJa/Xs7x6FU?=
 =?us-ascii?q?7CFCWPx6hi/SosRyrFGhl+ncggZgBTNIpicDoJ+XukBjI77a99EUXWvY+zoE6G?=
 =?us-ascii?q?ybAgwLu9JhTNvip/YUgv3GiL7zJSgKzNPQ9swMT5zLKcaDIVIgNxTzETLZBQdD?=
 =?us-ascii?q?SiSkYyWXv0FBnevaxHyXqoMmsJGkzIIDVrJBRnQ0EP0AA0hoFdBEJ414CHdsvb?=
 =?us-ascii?q?eFgYYo7HyloR+ZEMlToJ2BVvuUGvjpADKYi6RUIRoO3b78a48UM9u/k2ljb1gy?=
 =?us-ascii?q?roPKElCYCcJKoiR7Rgs1plhdtmZ4Q3F12kjgLAiq5SlAL/Osmg8KjV5fbuM3vA?=
 =?us-ascii?q?zw5E8vLxKepSQ3ig8qhdL9mTm5fzv4LaP2VoZTXXnarU80Z7L0RBw9VhG1hVRt?=
 =?us-ascii?q?fGPFSLVLyaB8cnhzgSfTvJJOHbhXSqgSM0xY/u2ee/h9iQcUkS6g30ISoLKdUZ?=
 =?us-ascii?q?Y=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAABjuRpch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMFl+NPokSjjeBcxMBARgTAYctIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBB?=
 =?us-ascii?q?QEDARgGARIFgx2BaQEBAhUBBJxEPIwrBQEXDYJqBYEGAYEuggsKGQQKGQ1egTc?=
 =?us-ascii?q?CBhKHbIMlgRyBVz+DboIAgQyICQKhATMHAoIlBIQnhnFwgyUMGIl3gXELUYUVL?=
 =?us-ascii?q?IkchgyKBwIEAgQFAgUPITlsgg4zGiOCHYEfghsMF4NKihwBOD4yAYEDAQEBO40?=
 =?us-ascii?q?lAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAABjuRpch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMFl+NPokSjjeBcxMBARgTAYctIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBBQEDARgGARIFgx2?=
 =?us-ascii?q?BaQEBAhUBBJxEPIwrBQEXDYJqBYEGAYEuggsKGQQKGQ1egTcCBhKHbIMlgRyBV?=
 =?us-ascii?q?z+DboIAgQyICQKhATMHAoIlBIQnhnFwgyUMGIl3gXELUYUVLIkchgyKBwIEAgQ?=
 =?us-ascii?q?FAgUPITlsgg4zGiOCHYEfghsMF4NKihwBOD4yAYEDAQEBO40lAQE?=
X-IronPort-AV: E=Sophos;i="5.56,374,1539673200"; 
   d="scan'208";a="67606813"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 19 Dec 2018 13:35:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730755AbeLSVeX (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Wed, 19 Dec 2018 16:34:23 -0500
Received: from mail-lj1-f195.google.com ([209.85.208.195]:39144 "EHLO
        mail-lj1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730425AbeLSVeT (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 19 Dec 2018 16:34:19 -0500
Received: by mail-lj1-f195.google.com with SMTP id t9-v6so18702909ljh.6;
        Wed, 19 Dec 2018 13:34:18 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references:reply-to
         :mime-version:content-transfer-encoding;
        bh=phFz7vOrcS81MlJJt5v1oXi0mDKxGWtwTN4iyYFZ+74=;
        b=WDs6ySk3E+alRObAy6wDkCWuaVNVmuHxgGD/1dsv9YzDDBu9vjjGYTllVerwNIiKQV
         pztj6X4r6TPKKDINigAFHDA+MoPMiLGLpN1vkr6o44sTpRmMIM88qMVO05EklU2hqIHl
         XyrneWxYZWRhJJzHDAvQrleFk6S0QbDdUKm0y6gsEG4SKWX3MtvhKOPdX6gR0x0H9+yq
         ZtNyRl7v8NUh7DTF2iebL4466gaSC2V48VmytKEVnV7Lafw3Z0t87QsWMQt/SU2T+lRj
         SHNL1KbcumOc828PDB6DUsY9wnxFMUvyZSF57BED24yikWb6gqsHNmPgjkcetg3IyTbj
         u+Wg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:reply-to:mime-version:content-transfer-encoding;
        bh=phFz7vOrcS81MlJJt5v1oXi0mDKxGWtwTN4iyYFZ+74=;
        b=nfP6drvFrGj+wumRz/HuYh+CxcUVgNKgc7g8EdRnI7nnQP76G0FBRHCVPOid7meMw7
         QfTj3r8mkn3cbm7ETpUbkMM76+wNSt38/QRsbBHClqqPVeXxz8QrCh9vUbEoSXsE53Ti
         lEmGdX79YJRFEzHj9u4YMj8kcbM18ak8WcW773kmph5Td66U4LOxpd20DJNx1PmGIInM
         38gW5wWqv9g/m/8A0biJq3CcwRq3oXFMEYRYEI2r2EcuXfPV6cBXjr6VEgozj6VHMLZN
         nWZV3qXUXLbxLFb6FsJPZPeX2LbWdUveoRTVL8hO7XQIBEdUKPtttCIAKuCRcLm9dMS+
         bQfw==
X-Gm-Message-State: AA+aEWYAJa7kbjja2aOLYDaSwymu9+EJQ3Q0Bi53wd1POupXEKB0Oo5M
        qgbVjZ5lkvhNio5aIaOgivn3OOVNV7g=
X-Google-Smtp-Source: AFSGD/Vxltp9cariWUfXVZcfYzagR0U5SpeU/owGfesG8rdFREe2XSYUZ/kYeEPSHTXXU3K1J5TI2g==
X-Received: by 2002:a2e:8719:: with SMTP id m25-v6mr14932638lji.121.1545255257431;
        Wed, 19 Dec 2018 13:34:17 -0800 (PST)
Received: from localhost.localdomain (dmhwpt3bffxn8z3-j6k-4.rev.dnainternet.fi. [2001:14bb:51:a4c8:5c24:24d7:ca5f:e7d2])
        by smtp.gmail.com with ESMTPSA id v64sm3996867lfa.48.2018.12.19.13.34.15
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 19 Dec 2018 13:34:16 -0800 (PST)
From: Igor Stoppa <igor.stoppa@gmail.com>
X-Google-Original-From: Igor Stoppa <igor.stoppa@huawei.com>
To: Andy Lutomirski <luto@amacapital.net>,
        Matthew Wilcox <willy@infradead.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>
Cc: igor.stoppa@huawei.com, Nadav Amit <nadav.amit@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        linux-integrity@vger.kernel.org,
        kernel-hardening@lists.openwall.com, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH 07/12] __wr_after_init: lkdtm test
Date: Wed, 19 Dec 2018 23:33:33 +0200
Message-Id: <20181219213338.26619-8-igor.stoppa@huawei.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181219213338.26619-1-igor.stoppa@huawei.com>
References: <20181219213338.26619-1-igor.stoppa@huawei.com>
Reply-To: Igor Stoppa <igor.stoppa@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Verify that trying to modify a variable with the __wr_after_init
attribute will cause a crash.

Signed-off-by: Igor Stoppa <igor.stoppa@huawei.com>

CC: Andy Lutomirski <luto@amacapital.net>
CC: Nadav Amit <nadav.amit@gmail.com>
CC: Matthew Wilcox <willy@infradead.org>
CC: Peter Zijlstra <peterz@infradead.org>
CC: Kees Cook <keescook@chromium.org>
CC: Dave Hansen <dave.hansen@linux.intel.com>
CC: Mimi Zohar <zohar@linux.vnet.ibm.com>
CC: linux-integrity@vger.kernel.org
CC: kernel-hardening@lists.openwall.com
CC: linux-mm@kvack.org
CC: linux-kernel@vger.kernel.org
---
 drivers/misc/lkdtm/core.c  |  3 +++
 drivers/misc/lkdtm/lkdtm.h |  3 +++
 drivers/misc/lkdtm/perms.c | 29 +++++++++++++++++++++++++++++
 3 files changed, 35 insertions(+)

diff --git a/drivers/misc/lkdtm/core.c b/drivers/misc/lkdtm/core.c
index 2837dc77478e..73c34b17c433 100644
--- a/drivers/misc/lkdtm/core.c
+++ b/drivers/misc/lkdtm/core.c
@@ -155,6 +155,9 @@ static const struct crashtype crashtypes[] = {
 	CRASHTYPE(ACCESS_USERSPACE),
 	CRASHTYPE(WRITE_RO),
 	CRASHTYPE(WRITE_RO_AFTER_INIT),
+#ifdef CONFIG_PRMEM
+	CRASHTYPE(WRITE_WR_AFTER_INIT),
+#endif
 	CRASHTYPE(WRITE_KERN),
 	CRASHTYPE(REFCOUNT_INC_OVERFLOW),
 	CRASHTYPE(REFCOUNT_ADD_OVERFLOW),
diff --git a/drivers/misc/lkdtm/lkdtm.h b/drivers/misc/lkdtm/lkdtm.h
index 3c6fd327e166..abba2f52ffa6 100644
--- a/drivers/misc/lkdtm/lkdtm.h
+++ b/drivers/misc/lkdtm/lkdtm.h
@@ -38,6 +38,9 @@ void lkdtm_READ_BUDDY_AFTER_FREE(void);
 void __init lkdtm_perms_init(void);
 void lkdtm_WRITE_RO(void);
 void lkdtm_WRITE_RO_AFTER_INIT(void);
+#ifdef CONFIG_PRMEM
+void lkdtm_WRITE_WR_AFTER_INIT(void);
+#endif
 void lkdtm_WRITE_KERN(void);
 void lkdtm_EXEC_DATA(void);
 void lkdtm_EXEC_STACK(void);
diff --git a/drivers/misc/lkdtm/perms.c b/drivers/misc/lkdtm/perms.c
index 53b85c9d16b8..f681730aa652 100644
--- a/drivers/misc/lkdtm/perms.c
+++ b/drivers/misc/lkdtm/perms.c
@@ -9,6 +9,7 @@
 #include <linux/vmalloc.h>
 #include <linux/mman.h>
 #include <linux/uaccess.h>
+#include <linux/prmem.h>
 #include <asm/cacheflush.h>
 
 /* Whether or not to fill the target memory area with do_nothing(). */
@@ -27,6 +28,10 @@ static const unsigned long rodata = 0xAA55AA55;
 /* This is marked __ro_after_init, so it should ultimately be .rodata. */
 static unsigned long ro_after_init __ro_after_init = 0x55AA5500;
 
+/* This is marked __wr_after_init, so it should be in .rodata. */
+static
+unsigned long wr_after_init __wr_after_init = 0x55AA5500;
+
 /*
  * This just returns to the caller. It is designed to be copied into
  * non-executable memory regions.
@@ -104,6 +109,28 @@ void lkdtm_WRITE_RO_AFTER_INIT(void)
 	*ptr ^= 0xabcd1234;
 }
 
+#ifdef CONFIG_PRMEM
+
+void lkdtm_WRITE_WR_AFTER_INIT(void)
+{
+	unsigned long *ptr = &wr_after_init;
+
+	/*
+	 * Verify we were written to during init. Since an Oops
+	 * is considered a "success", a failure is to just skip the
+	 * real test.
+	 */
+	if ((*ptr & 0xAA) != 0xAA) {
+		pr_info("%p was NOT written during init!?\n", ptr);
+		return;
+	}
+
+	pr_info("attempting bad wr_after_init write at %p\n", ptr);
+	*ptr ^= 0xabcd1234;
+}
+
+#endif
+
 void lkdtm_WRITE_KERN(void)
 {
 	size_t size;
@@ -200,4 +227,6 @@ void __init lkdtm_perms_init(void)
 	/* Make sure we can write to __ro_after_init values during __init */
 	ro_after_init |= 0xAA;
 
+	/* Make sure we can write to __wr_after_init during __init */
+	wr_after_init |= 0xAA;
 }
-- 
2.19.1

