Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  24 Dec 2018 15:54:09 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C597D58050C;
	Fri, 21 Dec 2018 10:16:14 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Dec 2018 10:16:14 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A9xEBYxcL65wsWzC/t/mQyjqilGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc68bReN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRBDI2i?=
 =?us-ascii?q?coUBAekPM+FaoInzvVsBohSwBRK0BO7t0TJEmnz70Lcm3+k7DQ3KwAotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+O6zKnP1zXIcu5Y2Sv66IjQahAuu+yHULVxccrezkkvDRnJjk6M?=
 =?us-ascii?q?qYziJzOVzv4CvnOU7+plT+2vimonpxttrTiow8chk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrEapZK3YS0HxIkoyhHEcPOKdoiF?=
 =?us-ascii?q?7g/mWemLLjp3mHFodbe/ihmu70StxejxWte73VlXrCdIl8XDuWoN2hzd78WIVP?=
 =?us-ascii?q?lw8Vq/1TuJygvd8PtLIVoumqreM5MhwqA/lp4UsUnbAC/2l1v5jLWMekUn5Oeo?=
 =?us-ascii?q?8eLnbavippOGMI90kA7+Prwvmsy5H+s4LhADU3aH9em4zrHv4EP0TKtQgvErka?=
 =?us-ascii?q?TVrIrWKMUZq6KhBg9ayIcj6xKxDze819QYmGEKLFZEeBKBkojoNEjCIPPmAvel?=
 =?us-ascii?q?hVSjjjNry+nBPrzvBJXCMGLDnaz/fbZy9UFc0hA/zdNB6JJODLEOPvbzVlX2tN?=
 =?us-ascii?q?zCAR81Kxa0zPr/CNVhyoMeXnqCAquYMKPRr1CE/O0uI/SXaY8RuTb9LeUl5vH0?=
 =?us-ascii?q?gX84n18dYbem3Z8NZH+kGfRmJl2TYWDwjdcZDWcKog0+QfTqiFKYUD5Te2y9X6?=
 =?us-ascii?q?Um6jE7FYKpF4HDRo+2jbyF3Se7GIBWZ29cBlCNF3foa5uLW/MWZC2OJc9hlyQO?=
 =?us-ascii?q?VaK9RI85yRGuqAj6xqJ9IerP+i0YspHj2MJv5+LJlxE/7jh0D8Wb02GQQGB4hG?=
 =?us-ascii?q?IIRzkq3K9hpUxx0EuM0a99g/ZAD9xc++tJUhsmNZ7b1+F6CMr9WgTbcteNSVap?=
 =?us-ascii?q?WNOmAT4qQ9I1wt8OZVt9Gtq4ghDC2SqqH6Eal7iRCJMo9aLc2mD7J9xhxHbeyK?=
 =?us-ascii?q?khk14mT9NSOmK8mK5w6RLfB47TnEWfjKala6Ic0CnJ9GeAyGqOuFpVUApxUaXD?=
 =?us-ascii?q?QHAeaVHardX/5kPeUbCuDa4rPRdGyc6HMqFKcMHmjU1aRPf/P9TTe3++lH2uBR?=
 =?us-ascii?q?mW3L+MbJDle2MG3CrDDkgJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGcV/IT3rcDuCc9qzV1HEyx387MB9qHvQpheKRcYd?=
 =?us-ascii?q?Uy4Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0J/qPr3YNGbz8w6vaqLMwV7ezcuZ9b0J6PQ7rFXjohqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw9IoBPY/xhm8Zdte?=
 =?us-ascii?q?MaOEGxX0E80VHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQxZYFwu2X0RGdVzjhi1etqMb3lp5eZTETB2aw1TLrBIpMaaJs?=
 =?us-ascii?q?Z4YLDmGuLtazxtV/gZ7tRnFZ+ESiB1MAxM+mZx6SY0bh0g1X0EQduWanljegzz?=
 =?us-ascii?q?xojzEpqbKS3SzPw+j4dBsLIHVLRHRkjVr3JYi0jtYaXFWnbgQzlRul41r6yLZf?=
 =?us-ascii?q?pKhlM2bTRkJIdTDsL25+SquwqqaCY8lX5ZMqqypXSue8YVOdSrLnuBsVySDjH2?=
 =?us-ascii?q?hfxDA9aT6qvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquC/WHimVpFJcynrzIWAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3GoJknYsxnp0Q2WUaiY+T/XoIimrz?=
 =?us-ascii?q?NdRb2aTjbHsCXzILwtjV4BT7101nNH6G24X5VnCFyMt7e9a6en8W2j46781SDa?=
 =?us-ascii?q?eU7b9EkjFvrlu2sw3ReuR9kSkHyfQ19nEame4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHTN37sV6Kl7N0Wf86of5eN?=
 =?us-ascii?q?nLdtITtwaZkxPBj+hTNZIwmeAGhSthOWLho3Ilz/Q3ggBp3ZG/pIKHMXli/Lql?=
 =?us-ascii?q?Ah5EMT34f9gc9SvqjaZag8aaxYSvHoh6FzUPXZvoS++oET0IufTmMQaODCMzqn?=
 =?us-ascii?q?OBFbXDGg+f7V9sr2jTHJCzK3GXOH4ZwM1gRBaHIUxQnhsUUC8mnpIjFQCq2c/h?=
 =?us-ascii?q?cFp/5j8L/V71sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGaZwNIDXwQWkyZHV/jOKOi5cLH8+ieCeqzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/Nb9CUpBa/+i10r8?=
 =?us-ascii?q?Cz6vfrWBjo5YuAFbRSK8hv+wutjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtpO8tV9K08xBdCOM7BhtPx1751lfo1C1ZDVV?=
 =?us-ascii?q?z8lcClf80KI2ehNFzZAEaHLqiJJTrOw8vve6OzVaVQjPlItx23oTubD07jPjGZ?=
 =?us-ascii?q?mzb1TRygLeFMgz+dPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFm1B9HVlK+yEmyef7+bAK5cWseFkAiJ7l+9B5HQ6yr1V?=
 =?us-ascii?q?7DxLRfBvmSvSqMJurE+ikuWV1jVnVx9O+X53g9eiu0lzcYHE6p5FWGzf/xNFuW?=
 =?us-ascii?q?GNFxMirt5sAdT3urxZzp7Jmb6lbH9n+s7I/cYDT/fVLMmAIDJ1LhvtHC/8DQ0L?=
 =?us-ascii?q?VzenOGjTwUtHn6fWvkWYspUg4qrtmp4VVqVSHAgtG+8XEFZNHdoMOp57Uzoo17?=
 =?us-ascii?q?mBg5hMrVa3shSZZMxcpZ3BHqaeCOvibjaQi6JJYTMMwLXlPcISMJH23wppbVws?=
 =?us-ascii?q?2MzvGk/RFeJKoiR7Jlsmp0VE6lB6T2suywT7bA6xpn4ZELi/mRtgzkNCYeUk+z?=
 =?us-ascii?q?CkwUoxKRLgrTY9ikw4n9Ot1TqYbTPrKa62dYVXDTfk8Uk7N9XwRAMjPje/hUh1?=
 =?us-ascii?q?CDCRZr1WlfNbaWdzkAaU7ZpAHuQaVrFDeAcZ7f6SbvQsl19br3P061VA4L7kBp?=
 =?us-ascii?q?x43DA2doa0pjoU2g1kdpguOavIPKNhwV1Zh6bItSitgLNiiDQCLloApTvBMBUD?=
 =?us-ascii?q?v1YFY/x/f3Kl?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACBLR1ch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeMFl+NP4kTjjiBbhgBARgTAYcwIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII6KQGCZwMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBB?=
 =?us-ascii?q?QEDARgGARIFgx2BaQEBAhUBBJpPPIwrBQEXDYJqBYEGAYEuggoKGQQKGQ1egTc?=
 =?us-ascii?q?CBhKHbIMlgRyBVz+GeogJAolBh3GPYDMHAoIlBIQphnRwgycMGIFgiBo3gTsMU?=
 =?us-ascii?q?YUWLIknhhCKEgIEAgQFAgUPITlsgg4zGiOCHYEfghsMF4NKihwBOD4yAYEDAQE?=
 =?us-ascii?q?BO41zAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACBLR1ch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeMFl+NP4kTjjiBbhgBARgTAYcwIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II6KQGCZwMDAQIIIAcBDQEbHQEDAgkBAQUTOAMeAgUHAQQBBQEDARgGARIFgx2?=
 =?us-ascii?q?BaQEBAhUBBJpPPIwrBQEXDYJqBYEGAYEuggoKGQQKGQ1egTcCBhKHbIMlgRyBV?=
 =?us-ascii?q?z+GeogJAolBh3GPYDMHAoIlBIQphnRwgycMGIFgiBo3gTsMUYUWLIknhhCKEgI?=
 =?us-ascii?q?EAgQFAgUPITlsgg4zGiOCHYEfghsMF4NKihwBOD4yAYEDAQEBO41zAQE?=
X-IronPort-AV: E=Sophos;i="5.56,382,1539673200"; 
   d="scan'208";a="56150978"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 21 Dec 2018 10:16:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2391176AbeLUSQJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 22 others); Fri, 21 Dec 2018 13:16:09 -0500
Received: from mail-lf1-f66.google.com ([209.85.167.66]:36342 "EHLO
        mail-lf1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2404299AbeLUSOy (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 21 Dec 2018 13:14:54 -0500
Received: by mail-lf1-f66.google.com with SMTP id a16so4541703lfg.3;
        Fri, 21 Dec 2018 10:14:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references:reply-to
         :mime-version:content-transfer-encoding;
        bh=Us5fQxnqAuf6nDTBJO2Qb2w31hoygG1FpkEKlSmx1Kw=;
        b=HGWfQjb5vbSEU703D7GDZF8gnrJ6CfP1TS1iPmRhSDLGjMliWP2OTU4t9dcTDDLFqv
         eDAU+7nNdwfcfoz6oYXjJL+HmL0C7ymB9ShJsMj23VqimbB2jkRvrjm8zuQ48p+Nfr75
         ZoN6joq84uIn/psO+3Xg9u/0iXRyuQynvLmv/HtqwPCYoNAWC5Faa76BZyDT9FID2Vfu
         dqlkXt4qfXEYfLfc8I/aX6w3fTxt+HeG3t0yKQFDxfLBtruTGAPQ/XtAuVw0DefC7wLn
         CshGs3iZ+b8H51siPqXn+F0ztDMm4FEfvmDc8DP/V0wU19fqjPIHsEMvhcM4ZSk9hHIX
         btxg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:reply-to:mime-version:content-transfer-encoding;
        bh=Us5fQxnqAuf6nDTBJO2Qb2w31hoygG1FpkEKlSmx1Kw=;
        b=aji4ZXgOV/BzW43mkpRzDhztoN35R7QwrO9rLl+b10b7NbUKnN3xqR81t5WfECype5
         ukBfo/IF+sx6rW+uPE5QNaHIjsBYEZtSy06Rzr32lgwyhziilu9kBYb9clqcWDXDelJ8
         lfHK3glX95WaJgSz/lek7cm6NNkP+WKBycbs8gzuwqEqeAqVXpgRYE9DEe75FI/yrfJk
         UgNIbmuXHgOwvOlEJ2BSeXiuNy1fRuCqjgqx6MJQ8CA4h1AWE0YZrjdihwHzplTEJkW8
         eFlynkeSVZSXR0VbcI2DuGrP7KfQdYczsi7Bwpap017zoGSRZzIz1BH9hAWuPT5HXd0I
         SsIw==
X-Gm-Message-State: AA+aEWZJIbRtFoCRr4kjI8fLjBi4yOHnENejHXvZbD1qsRzL1U4USAxw
        l1U3E6ziVXg4/df4WSIGDHA=
X-Google-Smtp-Source: AFSGD/XRk3ffVjosi0KOa8ubOE0z0coXuuRA/SrFAZt3Qg8nlBRGeL4XEqjStoml5nY+Fgm+PFWoDQ==
X-Received: by 2002:a19:1994:: with SMTP id 142mr2105273lfz.134.1545416091776;
        Fri, 21 Dec 2018 10:14:51 -0800 (PST)
Received: from localhost.localdomain (dmhwpt3bffxn8z3-j6k-4.rev.dnainternet.fi. [2001:14bb:51:a4c8:5c24:24d7:ca5f:e7d2])
        by smtp.gmail.com with ESMTPSA id m63-v6sm5444564lje.81.2018.12.21.10.14.50
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 21 Dec 2018 10:14:51 -0800 (PST)
From: Igor Stoppa <igor.stoppa@gmail.com>
X-Google-Original-From: Igor Stoppa <igor.stoppa@huawei.com>
To: Andy Lutomirski <luto@amacapital.net>,
        Matthew Wilcox <willy@infradead.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Thiago Jung Bauermann <bauerman@linux.ibm.com>
Cc: igor.stoppa@huawei.com, Nadav Amit <nadav.amit@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        Ahmed Soliman <ahmedsoliman@mena.vt.edu>,
        linux-integrity@vger.kernel.org,
        kernel-hardening@lists.openwall.com, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org
Subject: [PATCH 04/12] __wr_after_init: debug writes
Date: Fri, 21 Dec 2018 20:14:15 +0200
Message-Id: <20181221181423.20455-5-igor.stoppa@huawei.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181221181423.20455-1-igor.stoppa@huawei.com>
References: <20181221181423.20455-1-igor.stoppa@huawei.com>
Reply-To: Igor Stoppa <igor.stoppa@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

After each write operation, confirm that it was successful, otherwise
generate a warning.

Signed-off-by: Igor Stoppa <igor.stoppa@huawei.com>

CC: Andy Lutomirski <luto@amacapital.net>
CC: Nadav Amit <nadav.amit@gmail.com>
CC: Matthew Wilcox <willy@infradead.org>
CC: Peter Zijlstra <peterz@infradead.org>
CC: Kees Cook <keescook@chromium.org>
CC: Dave Hansen <dave.hansen@linux.intel.com>
CC: Mimi Zohar <zohar@linux.vnet.ibm.com>
CC: Thiago Jung Bauermann <bauerman@linux.ibm.com>
CC: Ahmed Soliman <ahmedsoliman@mena.vt.edu>
CC: linux-integrity@vger.kernel.org
CC: kernel-hardening@lists.openwall.com
CC: linux-mm@kvack.org
CC: linux-kernel@vger.kernel.org
---
 mm/Kconfig.debug | 8 ++++++++
 mm/prmem.c       | 6 ++++++
 2 files changed, 14 insertions(+)

diff --git a/mm/Kconfig.debug b/mm/Kconfig.debug
index 9a7b8b049d04..b10305cfac3c 100644
--- a/mm/Kconfig.debug
+++ b/mm/Kconfig.debug
@@ -94,3 +94,11 @@ config DEBUG_RODATA_TEST
     depends on STRICT_KERNEL_RWX
     ---help---
       This option enables a testcase for the setting rodata read-only.
+
+config DEBUG_PRMEM
+    bool "Verify each write rare operation."
+    depends on PRMEM
+    default n
+    help
+      After any write rare operation, compares the data written with the
+      value provided by the caller.
diff --git a/mm/prmem.c b/mm/prmem.c
index e1c1be3a1171..51f6776e2515 100644
--- a/mm/prmem.c
+++ b/mm/prmem.c
@@ -61,6 +61,9 @@ void *wr_memcpy(void *p, const void *q, __kernel_size_t size)
 	__wr_enable(&wr_state);
 	__wr_memcpy(wr_poking_addr, q, size);
 	__wr_disable(&wr_state);
+#ifdef CONFIG_DEBUG_PRMEM
+	VM_WARN_ONCE(memcmp(p, q, size), "Failed %s()", __func__);
+#endif
 	local_irq_enable();
 	return p;
 }
@@ -92,6 +95,9 @@ void *wr_memset(void *p, int c, __kernel_size_t len)
 	__wr_enable(&wr_state);
 	__wr_memset(wr_poking_addr, c, len);
 	__wr_disable(&wr_state);
+#ifdef CONFIG_DEBUG_PRMEM
+	VM_WARN_ONCE(memtst(p, c, len), "Failed %s()", __func__);
+#endif
 	local_irq_enable();
 	return p;
 }
-- 
2.19.1

