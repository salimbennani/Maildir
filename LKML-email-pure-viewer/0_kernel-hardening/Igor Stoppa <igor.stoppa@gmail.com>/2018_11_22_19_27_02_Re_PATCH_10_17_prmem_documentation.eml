Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:31:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4DE6258037D;
	Thu, 22 Nov 2018 11:30:17 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 11:30:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AnlJprhLAgT8vkzwUMdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/zzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVsVtRuzBxKhBP/sxzJSmnP6waM33uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv2O6cSVvq1x7TVwzXfaPNWwS/955LVeR0moPGMUrVwcdDLxUk0CwPFiU2Q?=
 =?us-ascii?q?qZT/MD6O2eQNtnKU7+tkVe61l2EnrARxryGpy8wxiYfJnpoYxk7Y+Sh92oo5ON?=
 =?us-ascii?q?O1RFBhbdK5E5ZcqzuWOop0T886XW1kpDo2xqADtJKmcyUF048oyhvQZvCbdoWE?=
 =?us-ascii?q?/w7sWemNLTp9gH9qZbOyihi3/EWgxODxVte43VNEriVbndTBuHUA1xLN5sWDVv?=
 =?us-ascii?q?Rw+Fqq1yyV2ADJ8O5EJFg5larFJJ4lxb49joQTsUvdES/sgkn2j7GZdl8i+ue2?=
 =?us-ascii?q?7+TreLLmpoWTN4NsiwH+NLohmtCnDOgmLgQDW3KX9fmy2bH950H1XbZHguEsnq?=
 =?us-ascii?q?TYsp3WPcEbqbS4Aw9R3IYj8RG/DzK+3dQcnHkHKk9FeR2eg4jqJV7OOvb4Aum7?=
 =?us-ascii?q?g1i1lzdqyfbGMaP7ApjWMHjDn6nufaxn505f1gUz19Zf6IxQCr0bJ/LzQEDxuM?=
 =?us-ascii?q?TCDhAlKwy03/rnCNJl24MaWGKPAbGWPLndsF+V/e8vJ+iMZIkIuDfyMfQl5vju?=
 =?us-ascii?q?jWMnll8ZZ6WmwZwXaHWgFPR8P0qZeWbsgssGEWoSvgoxVu3qiEGYXj5UfXqyX7?=
 =?us-ascii?q?886Ss9CIKpForDQoGtgLqc3Ca0BJFWZ2ZGCkySHnfsbYmLR/AMaCeKKM97jjME?=
 =?us-ascii?q?TaShS5Mm1Ry2tg/6zKRoIvDX+i0fs5Lj0t916vbXlREz8zx0Esuc33uMT2Fygm?=
 =?us-ascii?q?MHWTs20Lpjrkx6z1eJybJ4jOBAFdxP+/NJVR83OoTHz+x6DNDyWRjNfs2TR1ak?=
 =?us-ascii?q?WdimBTAxTtQsw94BeUp9GtOijgzd0CquGbMai7uLBJks+KLGw3fxP9p9y2rB1K?=
 =?us-ascii?q?Q5jFkpWM1POXeihq5+7QfTAYHJnl6dl6arc6QcwSHM+H2CzWqIoEFXTgpwXb/Z?=
 =?us-ascii?q?UnAYY0vctc756V/aT7+yFbQnNRNMxtOYJatUdNLll1VGS+3lONTFfW2xnWC8BR?=
 =?us-ascii?q?KLxrOJaIrnYGEd3CTbCEgZnAEf53eGNQ4iBii/p2LSFiBhFVXqY0n06+lxtGu7?=
 =?us-ascii?q?TlMozwGNd0BuyqC6+gALivCGS/McxLQEuDw/pDVyB1u929PWC9ydpwtuZqlcYN?=
 =?us-ascii?q?U94EtZ2mLdrQByIpugL6V6jF4Ebwt3p1/u1wlwCohYjcgqrXYqzA1uKaKY0FJN?=
 =?us-ascii?q?bS+Y0Yr3Or3NLmny/Rava6HN11Ha0daW/LoP6fsip1XiugGpClQt83F939ZJ1H?=
 =?us-ascii?q?uc443ADBAOXpLpTkY36x96qqnAbSk5+YzV2mNjMKmuvjDZxtImGfEqyhCjf9dY?=
 =?us-ascii?q?LqOJDwvyE8wcB8izJ+0mgVmpbhQYPO9M8K44Jd+pd/yD2KSzJuZvgCqmjXhb4I?=
 =?us-ascii?q?B6yk+N9zd8RvTU0JofwvCY3hGIVzHzjFq6tsD3mIZEZSwdH2alyCjkApJRabN2?=
 =?us-ascii?q?fYoRFWiuJMi3zM1kh5HxQ35Y6EKjB1Qe1c+zeBqdc0by3RdN2kQQu3CnnzW3zy?=
 =?us-ascii?q?Z1kz0wsqWQxijOzPn8exodPW5LQnJvjVPtIYiyktAbU1KkbwkvlBu5+0n6w7JX?=
 =?us-ascii?q?q7h4L2nWWU1IZTT5L3l+UqussbqPe85O6JIyvSRXSui8ek2aSrjmrhse0iPjGX?=
 =?us-ascii?q?ZexT8hezGrvJX5gwJ1iGaHIHlvq3rZfNl6xQ3D69zEWf5Rwj0GSTF6iTbNHFi8?=
 =?us-ascii?q?PNqp/dKOm5fYqO++VGGhVpxVcSb1y4ONry+75WxsAR2ikPG/gNznEQ4m0SDl09?=
 =?us-ascii?q?lmTznHrBH5YoPzzaS1LfpnflV0BF/788d7GptxkowqiJES2HgagI6Y/X4GkWf1?=
 =?us-ascii?q?LNVa1rjybHsLRT4X3dHV5BLp11FkLnKM34j5TGmSwtN9Z9mmZWMbwiE94NpLCK?=
 =?us-ascii?q?uO7LxEgDF6oly3rQ/KZfh9nzEdyeYh6XIAguEJvhYtwTuZArwIAUZYOinsnQyS?=
 =?us-ascii?q?79+itKVXeHqvcb+o2Up7nNChD6uNrhtSWXnnYZciATF/7t9kP13Syn3z5ZrpeN?=
 =?us-ascii?q?3RbdIVqx2VnA3Mj+lTKJItiPUKgTBrNn76vX0g0+Q7lwBh3YmmvIibLGVg5L65?=
 =?us-ascii?q?AhldNjHvZsIc4DftjbtFnsaN3oCiBZFhGjQNXJv1QvOkCjMStfL7NwmQFD0wsG?=
 =?us-ascii?q?uUGb3aHQWH8kdps2rPE4y3N3GQPHQW1s9tRB6ZJExCmgwUWCg6k4U9FgCrwszh?=
 =?us-ascii?q?bUh46ioQ5l7+thtD1OZoOwPjXWfYoQeici00R4SHLBpK8gFC4F/YMc6E4eJ2AS?=
 =?us-ascii?q?5Y5YetrBCXJmyYegRIDnwJWkqeCFD4JbSu4djA8+6FBuuxNffOYLOOqfBAWPeM?=
 =?us-ascii?q?356gzoxm/zOUPMWVInZiF+E72lZEXX1hG8XZnCgPSzUKly3Xac6Xvgy8+ipxrs?=
 =?us-ascii?q?Cw6/nrXAPv5Y2SC7pdK9lv+ha2gbudOO6Unip2NTFY1pYUz3/S1LcfxEISiz1p?=
 =?us-ascii?q?dzS1EbQPqy/NTKHTmq9WFRIbaDlzNMxH760ixAlNJNXbh8jx1r55iP41FlhEWU?=
 =?us-ascii?q?bgmsGvecwFPWW9OEnbC0aMMbSMPSfLzN3vYaOgVb1Qi/1ZuAetuTmACU/sIDSC?=
 =?us-ascii?q?myPtVxCuKuxMiCCbPBpDuICyaBptCG7jTM74ZR2/KtN4kTo2wbgsjHPQKWEcKS?=
 =?us-ascii?q?R8c19KrrCI8SNYg/B/F3Zd4XZ/MeaEmziW7+/DJ5YSsPtrBDl0lu1A7HQ7zbtV?=
 =?us-ascii?q?8D9LRPhvlCTOqd5upkmskvOTxTp/TBpOtjFLiZqLvEp4P6XZ85hAWXDc8xMM7W?=
 =?us-ascii?q?WfERIKp9R+B93ruqBQzMXPla3pJDdD9dLU4dUTB8zOJM2bN3ohNEmhJDmBJQ0J?=
 =?us-ascii?q?XHaPKH3Ygk1Hi/KTvimRs4Q9gpHpkZEHUr5HXVhzEP4GXBdLBtsHdbZ4WSlsqq?=
 =?us-ascii?q?KclNYBrS6/ox7LAt5GuYjfX9qdBPzuLHCSirwSNEhA+q/xMYlGbt6z4EdlcFQv?=
 =?us-ascii?q?2d2SQ0c=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAAAoA/dbh0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeDeYN7hB2MAIINFIkHjh+BcxIBARgTAYhSIjQJDQEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIA8BBQgBGx0BAwEBCQEBB?=
 =?us-ascii?q?QULAwoCAiYCAgMeAhEBBQEcBg0GAgEBAYMcgWkBAw0IAQSdSzyLDYESBQEXgnc?=
 =?us-ascii?q?FgkSBbQoZJw1agTcCBhJ5iWKBHIFXP4E4gmuCVoUsgjUiAoh/IASBbpRDLgcCg?=
 =?us-ascii?q?hwEi2SDJQYYgVmHeDaHAY5NiTwCBAIEBQIFDyGBJYINMxojgQGCO4Ibg22KVD4?=
 =?us-ascii?q?ygQUBASGJZyqCIwEB?=
X-IPAS-Result: =?us-ascii?q?A0APAAAoA/dbh0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeDeYN7hB2MAIINFIkHjh+BcxIBARgTAYhSIjQJDQEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?A0JCCkjDII2JAGCYQEBAQECAQECIA8BBQgBGx0BAwEBCQEBBQULAwoCAiYCAgM?=
 =?us-ascii?q?eAhEBBQEcBg0GAgEBAYMcgWkBAw0IAQSdSzyLDYESBQEXgncFgkSBbQoZJw1ag?=
 =?us-ascii?q?TcCBhJ5iWKBHIFXP4E4gmuCVoUsgjUiAoh/IASBbpRDLgcCghwEi2SDJQYYgVm?=
 =?us-ascii?q?HeDaHAY5NiTwCBAIEBQIFDyGBJYINMxojgQGCO4Ibg22KVD4ygQUBASGJZyqCI?=
 =?us-ascii?q?wEB?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="53387136"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 11:30:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2438185AbeKWGH5 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 23 Nov 2018 01:07:57 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:38585 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S2406680AbeKWGH5 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 23 Nov 2018 01:07:57 -0500
Received: by mail-lj1-f196.google.com with SMTP id c19-v6so8818692lja.5;
        Thu, 22 Nov 2018 11:27:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=w3KmMNyu43QLUClDY1SB6ceykcPDYoNQxkmEBB18eVI=;
        b=BpMd8H2ic0SozsWQSTCjZTxXA1LmS47iBq1Jak8vnsc9o7gXnkNWcrKbJ8VvU5ggvp
         iRN+Y067w3uvonefjoL7/616KfHv5Rmi8OPXjhLHhMhX72NU96wpksujK1g2LPLa796a
         LoDvruOerTqu+LiSH3uPn8+2FLGTyc+YgsmjnR3JJSRFonc2YKod/jiHRK0zpW7UnN6b
         ekEH3XMidoPNY6bmx1SxgYy2R2cwtVfS2VKzGrTMBdJHdXK3KJPFir7F8mZzPkKckXWN
         XEseXf106whQAz87r894UTDnL7wVj782w9SwWIWc1zio20m0jqbhVc0j8o/HairNA29I
         TPng==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=w3KmMNyu43QLUClDY1SB6ceykcPDYoNQxkmEBB18eVI=;
        b=hpu8dw8p7x9BC4K2rByUH21q3UnZKX5obbhkIQCPHDEuzgq01s7/luIwXMCxWNbCcr
         AkGanR9AjHs1OOqOwZpD6JxV7Bz1VeDMaLtUdi/1urdLyVO0XcBovVY3wUF8kPdfJ0yk
         o2+vE/X8ALjKRXhzFJsn3PGx+ODjU5L3iHR5X1XkD9fzW9cLW2ZeZ/hkkP7K2HUwHD9R
         NCpt6POWDhSgKSyixO66xZtUWBtvo+EGBm3/LpzzuRP+RiciaWkGTG++cspew45NuCVI
         zX9tZMILMCh6GIuMfzmdG9UA+CXVz4vGFn0WNEn1fqHu1QnFQGtbBRl2xeEZskqpPtwp
         5ULA==
X-Gm-Message-State: AA+aEWZSPdI5LtGj8ATXZvbVK2w6PQZYc21ZyLUOQS6TVxzxm+wr2e1W
        itXgemkvZ6zuG+svdN/+lRY=
X-Google-Smtp-Source: AFSGD/XLqJISXAYei0IakP7KhrheggGDtUK7FTXg9UPfsrVgb0VjDdU02awqFKthfUNMoffgQ2JJGg==
X-Received: by 2002:a2e:5854:: with SMTP id x20-v6mr5465613ljd.31.1542914828981;
        Thu, 22 Nov 2018 11:27:08 -0800 (PST)
Received: from ?IPv6:2001:14bb:40:1c40:9d63:5352:fe43:f29c? (dkyrfbjndmqls8t-wxt-4.rev.dnainternet.fi. [2001:14bb:40:1c40:9d63:5352:fe43:f29c])
        by smtp.gmail.com with ESMTPSA id x16sm7268465lff.26.2018.11.22.11.27.06
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 22 Nov 2018 11:27:08 -0800 (PST)
Subject: Re: [PATCH 10/17] prmem: documentation
To: Andy Lutomirski <luto@amacapital.net>
Cc: Andy Lutomirski <luto@kernel.org>,
        Igor Stoppa <igor.stoppa@huawei.com>,
        Nadav Amit <nadav.amit@gmail.com>,
        Kees Cook <keescook@chromium.org>,
        Peter Zijlstra <peterz@infradead.org>,
        Mimi Zohar <zohar@linux.vnet.ibm.com>,
        Matthew Wilcox <willy@infradead.org>,
        Dave Chinner <david@fromorbit.com>,
        James Morris <jmorris@namei.org>,
        Michal Hocko <mhocko@kernel.org>,
        Kernel Hardening <kernel-hardening@lists.openwall.com>,
        linux-integrity <linux-integrity@vger.kernel.org>,
        LSM List <linux-security-module@vger.kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Jonathan Corbet <corbet@lwn.net>,
        Laura Abbott <labbott@redhat.com>,
        Randy Dunlap <rdunlap@infradead.org>,
        Mike Rapoport <rppt@linux.vnet.ibm.com>,
        "open list:DOCUMENTATION" <linux-doc@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>
References: <20181023213504.28905-1-igor.stoppa@huawei.com>
 <20181026092609.GB3159@worktop.c.hoisthospitality.com>
 <CAGXu5jKCs01jvtvpEFS7R8qCR-5iRqK11kJxLJY99NicGWc4aQ@mail.gmail.com>
 <20181028183126.GB744@hirez.programming.kicks-ass.net>
 <40cd77ce-f234-3213-f3cb-0c3137c5e201@gmail.com>
 <20181030152641.GE8177@hirez.programming.kicks-ass.net>
 <CAGXu5jJftJ+Hq+jrZGHX5CTDLWOog7kGsd_Ne=yMvrRs__skSg@mail.gmail.com>
 <0A7AFB50-9ADE-4E12-B541-EC7839223B65@amacapital.net>
 <6f60afc9-0fed-7f95-a11a-9a2eef33094c@gmail.com>
 <CALCETrXNckT9W288VXx-6inO5qYn-6dUPocKGcBT0GCO3xi3ZQ@mail.gmail.com>
 <386C0CB1-C4B1-43E2-A754-DA8DBE4FB3CB@gmail.com>
 <CALCETrWWcfLK4W3mn0bavzejmMBVKMX29aAUA3+VPQ8m9vmfhw@mail.gmail.com>
 <9373ccf0-f51b-4bfa-2b16-e03ebf3c670d@huawei.com>
 <2e52e103-15d0-0c26-275f-894dfd07e8ec@huawei.com>
 <CALCETrV0sPgf4ZgG1joF_5hM-ycPsWM9DWGO=diQ_LQKin4VuA@mail.gmail.com>
 <1166e55c-0c06-195c-a501-383b4055ea46@gmail.com>
 <3BB9DE07-E0AE-43E2-99F1-E4AA774CD462@amacapital.net>
From: Igor Stoppa <igor.stoppa@gmail.com>
Message-ID: <5e10c8e4-aa71-1eea-b1ce-50d7d0a60e8c@gmail.com>
Date: Thu, 22 Nov 2018 21:27:02 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <3BB9DE07-E0AE-43E2-99F1-E4AA774CD462@amacapital.net>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 21/11/2018 20:15, Andy Lutomirski wrote:

>> On Nov 21, 2018, at 9:34 AM, Igor Stoppa <igor.stoppa@gmail.com> wrote:

[...]

>> There might be other reasons for replicating the mm_struct.
>>
>> If I understand correctly how the text patching works, it happens sequentially, because of the text_mutex used by arch_jump_label_transform
>>
>> Which might be fine for this specific case, but I think I shouldn't introduce a global mutex, when it comes to data.
>> Most likely, if two or more cores want to perform a write rare operation, there is no correlation between them, they could proceed in parallel. And if there really is, then the user of the API should introduce own locking, for that specific case.
> 
> Text patching uses the same VA for different physical addresses, so it need a mutex to avoid conflicts. I think that, for rare writes, you should just map each rare-writable address at a *different* VA.  You’ll still need a mutex (mmap_sem) to synchronize allocation and freeing of rare-writable ranges, but that shouldn’t have much contention.

I have studied the code involved with Nadav's patchset.
I am perplexed about these sentences you wrote.

More to the point (to the best of my understanding):

poking_init()
-------------
   1. it gets one random poking address and ensures to have at least 2
      consecutive PTEs from the same PMD
   2. it then proceeds to map/unmap an address from the first of the 2
      consecutive PTEs, so that, later on, there will be no need to
      allocate pages, which might fail, if poking from atomic context.
   3. at this point, the page tables are populated, for the address that
      was obtained at point 1, and this is ok, because the address is fixed

write_rare
----------
   4. it can happen on any available core / thread at any time, therefore
      each of them needs a different address
   5. CPUs support hotplug, but from what I have read, I might get away
      with having up to nr_cpus different addresses (determined at init)
      and I would follow the same technique used by Nadav, of forcing the
      mapping of 1 or 2 (1 could be enough, I have to loop anyway, at
      some point) pages at each address, to ensure the population of the
      page tables

so far, so good, but ...

   6. the addresses used by each CPU are fixed
   7. I do not understand the reference you make to
      "allocation and freeing of rare-writable ranges", because if I
      treat the range as such, then there is a risk that I need to
      populate more entries in the page table, which would have problems
      with the atomic context, unless write_rare from atomic is ruled
      out. If write_rare from atomic can be avoided, then I can also have
      one-use randomized addresses at each write-rare operation, instead
      of fixed ones, like in point 6.

and, apologies for being dense: the following is still not clear to me:

   8. you wrote:
      > You’ll still need a mutex (mmap_sem) to synchronize allocation
      > and freeing of rare-writable ranges, but that shouldn’t have much
      > contention.
      What causes the contention? It's the fact that the various cores
      are using the same mm, if I understood correctly.
      However, if there was one mm for each core, wouldn't that make it
      unnecessary to have any mutex?
      I feel there must be some obvious reason why multiple mms are not a
      good idea, yet I cannot grasp it :-(

      switch_mm_irqs_off() seems to have lots of references to
      "this_cpu_something"; if there is any optimization from having the
      same next across multiple cores, I'm missing it

[...]

> I would either refactor it or create a new function to handle the write. The main thing that Nadav is adding that I think you’ll want to use is the infrastructure for temporarily switching mms from a non-kernel-thread context.

yes

[...]


> You’ll still want Nadav’s code for setting up the mm in the first place, though.

yes

--
thanks, igor
