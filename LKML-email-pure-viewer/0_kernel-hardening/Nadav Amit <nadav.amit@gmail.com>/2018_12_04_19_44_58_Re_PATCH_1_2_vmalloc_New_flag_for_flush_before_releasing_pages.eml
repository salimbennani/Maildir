Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:43:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 30EFE580375;
	Tue,  4 Dec 2018 11:45:08 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 11:45:08 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AT2Seox0EeKNV5syzsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTKvzxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJdUcleSiJPAoGz?=
 =?us-ascii?q?YYUAAeQCM+ZWsY7zp0AWrRa8HgSsGPrvyjpUin/2waE30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZos3vO6gPS++10rTDwCnGb/NXxTf29Y/FchY7rv6RR71wb9DdxlMqFwPEklWd?=
 =?us-ascii?q?soPlPzaP2eQMt2iX9fZvVeWqi2M+rQx6vzuhxt80h4XXmo4YzkrI+Th3zYorP9?=
 =?us-ascii?q?G0VU12bcK+HJZRtSyWL5V6T8I+T211vSs3y7ILtJy+cSUFyJkqxALTZvmcfIWK?=
 =?us-ascii?q?/x7uUOOcLDN3iX9qe7+yghe//lKgx+HhU8S03ktFojZLktTJtH0A0wDf6saBR/?=
 =?us-ascii?q?Bg5EmuwyyP2BrW6uxcIUA7i67bK5k5z74umZocr17DEjX1mErolq+WcFsr+uyy?=
 =?us-ascii?q?5+TgeLXmqYeQN45yig7gLqQjgtKzDfg8PwQUQmSW9/qw2Kf+8UD6XLlGlPw7n6?=
 =?us-ascii?q?vBvJDfP8sbp6q5AwFP0oYk7hayFzOm0NUenXkaI1NJYRGHgJbzO1HIPv/4Ce6z?=
 =?us-ascii?q?g1OikTdt2f/GJKbsAovCLnfdirftZ7V95FBGyAo1099f44hYCrYbIPL8QkPxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENF91oIdWW2RGKOYP77SvESM5uIuJemMeYAUtCz8K/gj+/7h?=
 =?us-ascii?q?k3s5lUUBcqmu2JsdcGq4Eeh+I0WFfXrshc8MEWcQsQo/UOzlklqCXSRTZ3avRa?=
 =?us-ascii?q?084D47BZmiDYfCQICtnbOA0D26Hp1QemBJFFSMHW30eIWDXvcGcDiSLdN5kjwY?=
 =?us-ascii?q?SbihTJcs1ROptADk0bZnLe3U+isetZLkz9V14+zTlRcv9T17Fcid0meNT31qkW?=
 =?us-ascii?q?MMXTM5wKd/oUllwFeZzad4m+BYFcBU5/5RSAg6Lp7cz+t5C9zoQALOZNWJRU2i?=
 =?us-ascii?q?QtWnBzExU90wz8UPY0Z7B9WtkBTD0zC2DL8SkryBHIY0/b7E33jtO8Z9zG7L1K?=
 =?us-ascii?q?o7gFkgWMdPMWymibR59wjcHIPJl0SZl6C3daUTxiLN9WGDzXaQs0FcSgJ/TaLF?=
 =?us-ascii?q?XXUHbEvMsdv5/l/CT6OpCbk/LwRO09CCJbVQZt3pl1pGQuzjN8rYY262n2ewBh?=
 =?us-ascii?q?OIxreXYYruemUd2jjdCUcenwAS+3aGKRYxBiO7r23CCzxuEErlY1nw/ulmtHO7?=
 =?us-ascii?q?Ukg0whmXYEJ7ybq65AQZhfyGRPMVxbILpiEhpi5wHFa82dLWFtWBqxBgfKVafd?=
 =?us-ascii?q?My/lNH2XjFuAx6O5yqN7piiUIGcwRro0Pu0A16CplBkcgvq3Mq0ApyKKKC3FNd?=
 =?us-ascii?q?bT+Y2orwOrnWKmn08xCicKrW2lDY0NaL9aYD8vU4q1P/vA63Ekou6Wlo095Q03?=
 =?us-ascii?q?GE/JXFEBISUY7tUkYw7xV1vbXabTcy5ozK1XxgK7K7siLf1N0zAuslyRGgf8lE?=
 =?us-ascii?q?PaOAFQ/yFdAaBse0JOwrnVipcgwLPORI+KEoOMOmcuOM2LS3M+Z4gDKmkWNH7Z?=
 =?us-ascii?q?h900KR7SZzVvTE3pcFw/6C2AuHWCzxjFOgssDxhIBFaiseHmu5ySj4GoFRYrd+?=
 =?us-ascii?q?cpoMCWerO8e33Mlxh4bxW35E816uH0kG2M61dhWIdVzywApQ2V4RoXO5gyu4zi?=
 =?us-ascii?q?V4nC0zoaqbwSPB3f7idB0BOmNQQGlijFHsIZW7jtwAXUioaRQpmwWh5Urg26db?=
 =?us-ascii?q?o6F/JXHJQUhUZyj2M31iUqyou7uCYs5D8pMpvT9MUOShZ1CXUbr9oxoc0yP+EG?=
 =?us-ascii?q?pS3jE7dze2uprnmxx2kn6SLHF2rHDBY8F/2Q/f5MDARf5WxjcGRjN3iSPUBli/?=
 =?us-ascii?q?ONml586UmI3AsuC9VmKhUINccS/wwIOEtSu743BqABKlk/CynN3nDRY10Svh29?=
 =?us-ascii?q?Z2UiXIqQ72YpP32KSiLeJnYk5oCUf86sVgHYFyiIkwhJAW2XUBgpWV/HwHkXr8?=
 =?us-ascii?q?MNlB2KL+amYNSiAPw9LP/Afl30hjJGqTx43lTnWd3tdhZ96ib2MVwC097tpGCK?=
 =?us-ascii?q?eJ7LNemyt1rUG1rQbQYfh7gzccxuEi6H8cg+EVpgUtyj+RDawVHUldJSbsjQiH?=
 =?us-ascii?q?78iirKVLY2aiab2w1Et9nd+7Fr2DrB9TWG3lepg8By9/9dtwMEjD0HDo7oHked?=
 =?us-ascii?q?/Qbc8ctxGOkhfAifRVJ4w1lvYQmSVnPmf9t2U/y+EnlRxuwY26vI+fJmVx+6K5?=
 =?us-ascii?q?BwRUNzzvaMMV5zHtlr1enseN0oCrH5VhHCgLXZTyQfKpFjISqeroNwKUHDIgrX?=
 =?us-ascii?q?ebHKLVHRWD50d+s3LPD5erOmmMK3YDytViQASdKFZbgAAJRzg6mp85Fga3xM3u?=
 =?us-ascii?q?akt55zYR5kLmpRtI0O5nKx7/UmLHrgeydjg0UISfLAZR7gxa5UfaK8me4fxoHy?=
 =?us-ascii?q?1C4p2ttg+NKnGYZwRVC2EGQFeECkvnPrmv49nA7ueZCvC/L/vIfbWBt+heW+2U?=
 =?us-ascii?q?ypKo14ts5yyMOdmXPnl+E/073VJOXHB+G8TEgjUPVjYYlyTXY86Aoxe8/CJ3o9?=
 =?us-ascii?q?u78PTqXgLv+ISOB6FTMdVp5xC5n6ODO/SMiyZ+LDZSzokMymPQyLgDwF4SjDlj?=
 =?us-ascii?q?dzmzHrQBti7NT6PQlrVUDx4BbCNzO9VH77gh3glWIsPbjtL11rhljv86EVtFVF?=
 =?us-ascii?q?rhmt23aswOOW2yKFTHBEOTPrScOTLL2933Yb+7SbBIlupUqga/uSyFHE7jJDiD?=
 =?us-ascii?q?kzjpWgurMeFNiiGbIRNftJu8chZrFWjsUtbmZgenP99wiD082ac0iW/SNW4ALT?=
 =?us-ascii?q?h8dFtArqGR7SNdmPlwB3ZN4WZlLeaanSaU9O3YKpcQsft2DSV4jeNa4HImy7RL?=
 =?us-ascii?q?6CFIXuB6mCzXrtR2uVGpjvGPyiZ7UBpJsjtKhJiEvUNnOaXY8JlPQXfF/BIX4m?=
 =?us-ascii?q?WWBBQHvN9lCtzpu6BNxdnDjqPzKDFe893K+csQHdTbKMWCMClpDR28MTjYHUMh?=
 =?us-ascii?q?UCKsMGDFnE9c2KWW62GShps3sJ7hnNwJULANB3IvEfZPLE1pFcJKCZJ2Qntwl7?=
 =?us-ascii?q?eXhdBO7H+/sDHeQcxbutbMUffEUqanEyqQkbQRP0hA+rj/N4lGc9Sjg0E=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BdAABF2AZch0O0hNFkHQEBBQEHBQGBV?=
 =?us-ascii?q?AUBCwGBMII7J4N5lCeCDRSJDo47gV0UAQEYEwGEQIMMIjcGDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIB0BGx0BAwEBCQEBBQULAwoCAiYCA?=
 =?us-ascii?q?gMeAhEBBQEcBhMFFoMGgWkBAw0IAQSZMjyLDYESBQEXgncFhD4KGScNXYE3AgY?=
 =?us-ascii?q?SeYsTgVc/gREnH4IeLoJXghMXgwQxgiYCiyCFD49sLgcCgiAEi2+DLhiBW4gAN?=
 =?us-ascii?q?ocVigmEcYZ5gl0CBAIEBQIFDyGBO4F3MxojUCoBBoI7PoFdg22KdB8yAYEEAQE?=
 =?us-ascii?q?hikABAQ?=
X-IPAS-Result: =?us-ascii?q?A0BdAABF2AZch0O0hNFkHQEBBQEHBQGBVAUBCwGBMII7J4N?=
 =?us-ascii?q?5lCeCDRSJDo47gV0UAQEYEwGEQIMMIjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYQEBAQECAQECIB0BGx0BAwEBCQEBBQULAwoCAiYCAgMeAhEBBQEcBhM?=
 =?us-ascii?q?FFoMGgWkBAw0IAQSZMjyLDYESBQEXgncFhD4KGScNXYE3AgYSeYsTgVc/gREnH?=
 =?us-ascii?q?4IeLoJXghMXgwQxgiYCiyCFD49sLgcCgiAEi2+DLhiBW4gANocVigmEcYZ5gl0?=
 =?us-ascii?q?CBAIEBQIFDyGBO4F3MxojUCoBBoI7PoFdg22KdB8yAYEEAQEhikABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="54903169"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 11:45:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726077AbeLDTpC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 14:45:02 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:34534 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725859AbeLDTpC (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 14:45:02 -0500
Received: by mail-pg1-f195.google.com with SMTP id 17so7854469pgg.1;
        Tue, 04 Dec 2018 11:45:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=h/WGcDBlkFhA27cXAvj5y+7rgOt6LBLLcXWwGSkEtVY=;
        b=TlC9Lq44k0PQKrLUh6lAjsQ2dm3ZowPCTMMH9A3Jcj05BTn9VWpfAPi9Odlg5bJ8cE
         fUAgyE/PvW+B3seCnDe9bmWxZzsWfteDJLqYwEvOdUyrOz/FdhI/o6zKcOpJ7RNEPIQw
         cJw91L3leJ2IIWRAmTvDI1wovcDKy4S6pO5xWlb5Dta0/nEVqVkr7Wwh9iMZmpJAMF1W
         CAhGXgQhIoiXn48++Wn6oVAkbTiy4Ew0/mHxYKCmFqF/7lPY25tQjdU/e33Bicu6gFj+
         c8JJ201TVUGquI4iLZl+LCh/er/5yxR3cQsm/yHM/Fuyqb0XTfABvk9kKEbdj5UkDi9V
         gzeg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=h/WGcDBlkFhA27cXAvj5y+7rgOt6LBLLcXWwGSkEtVY=;
        b=Y4j/Eyv40RIw0tfC9vNCfEGNLweh/qN/BUkphaAqNRvnfI6CJ9PAuM9j9sHUjVt1Vm
         /jZLAOU4gcqR+fZ+nwMg7m8keBwJdh/Vn+nyxIPVqyS8pzZV5th787bnJT5Tcyx8N3lS
         tn0u+CbQyHWN0U6piTci8FtzzDrK5n+FWCUPzH1nt4kbcg0gvaZ9YkdGduY8yAO6bIHr
         nJUgqOhFMJxOYRRZqVqUMBqLaAcdDUrnBQ0b336chXzqY1Q8UMXizlOIu5Vr1UpjW66u
         U8vGxsW9PRF7RbeFx03rKl59tht18WU6g5kQtJpF//R4vHFMze/I+ruyQ3TiHpGYnoiu
         Fvsg==
X-Gm-Message-State: AA+aEWbIocrCeLZv9JVS5hdVj9Ew+jB3pyN4by4KEzsvbUP+T8AFjr9A
        PdUertuY9BpgJiED/cDJuyo=
X-Google-Smtp-Source: AFSGD/VjJWirFUj/ejvfo345ERZDgq8ccQbsvgeMWfWcHkeuM5feZNEZuaohcA+mkwF/Rs069i/9Xw==
X-Received: by 2002:a63:2643:: with SMTP id m64mr17555130pgm.35.1543952700849;
        Tue, 04 Dec 2018 11:45:00 -0800 (PST)
Received: from ?IPv6:2601:647:4580:b719:9448:6a51:fd0f:790f? ([2601:647:4580:b719:9448:6a51:fd0f:790f])
        by smtp.gmail.com with ESMTPSA id g11sm22596415pfo.139.2018.12.04.11.44.58
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 11:45:00 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.1 \(3445.101.1\))
Subject: Re: [PATCH 1/2] vmalloc: New flag for flush before releasing pages
From: Nadav Amit <nadav.amit@gmail.com>
In-Reply-To: <CALCETrXvddt148fncMJqpjK98uatiK-44knYFWU0-ytf8X+iog@mail.gmail.com>
Date: Tue, 4 Dec 2018 11:44:58 -0800
Cc: Rick Edgecombe <rick.p.edgecombe@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Will Deacon <will.deacon@arm.com>,
        Linux-MM <linux-mm@kvack.org>,
        LKML <linux-kernel@vger.kernel.org>,
        Kernel Hardening <kernel-hardening@lists.openwall.com>,
        "Naveen N . Rao" <naveen.n.rao@linux.vnet.ibm.com>,
        Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>,
        "David S. Miller" <davem@davemloft.net>,
        Masami Hiramatsu <mhiramat@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>,
        Ingo Molnar <mingo@redhat.com>,
        Alexei Starovoitov <ast@kernel.org>,
        Daniel Borkmann <daniel@iogearbox.net>, jeyu@kernel.org,
        Network Development <netdev@vger.kernel.org>,
        Ard Biesheuvel <ard.biesheuvel@linaro.org>,
        Jann Horn <jannh@google.com>,
        Kristen Carlson Accardi <kristen@linux.intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        "Dock, Deneen T" <deneen.t.dock@intel.com>,
        Peter Zijlstra <peterz@infradead.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <08141F66-F3E6-4CC5-AF91-1ED5F101A54C@gmail.com>
References: <20181128000754.18056-1-rick.p.edgecombe@intel.com>
 <20181128000754.18056-2-rick.p.edgecombe@intel.com>
 <4883FED1-D0EC-41B0-A90F-1A697756D41D@gmail.com>
 <CALCETrXvddt148fncMJqpjK98uatiK-44knYFWU0-ytf8X+iog@mail.gmail.com>
To: Andy Lutomirski <luto@kernel.org>
X-Mailer: Apple Mail (2.3445.101.1)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

> On Dec 4, 2018, at 10:56 AM, Andy Lutomirski <luto@kernel.org> wrote:
>=20
> On Mon, Dec 3, 2018 at 5:43 PM Nadav Amit <nadav.amit@gmail.com> =
wrote:
>>> On Nov 27, 2018, at 4:07 PM, Rick Edgecombe =
<rick.p.edgecombe@intel.com> wrote:
>>>=20
>>> Since vfree will lazily flush the TLB, but not lazily free the =
underlying pages,
>>> it often leaves stale TLB entries to freed pages that could get =
re-used. This is
>>> undesirable for cases where the memory being freed has special =
permissions such
>>> as executable.
>>=20
>> So I am trying to finish my patch-set for preventing transient W+X =
mappings
>> from taking space, by handling kprobes & ftrace that I missed (thanks =
again for
>> pointing it out).
>>=20
>> But all of the sudden, I don=E2=80=99t understand why we have the =
problem that this
>> (your) patch-set deals with at all. We already change the mappings to =
make
>> the memory writable before freeing the memory, so why can=E2=80=99t =
we make it
>> non-executable at the same time? Actually, why do we make the module =
memory,
>> including its data executable before freeing it???
>=20
> All the code you're looking at is IMO a very awkward and possibly
> incorrect of doing what's actually necessary: putting the direct map
> the way it wants to be.
>=20
> Can't we shove this entirely mess into vunmap?  Have a flag (as part
> of vmalloc like in Rick's patch or as a flag passed to a vfree variant
> directly) that makes the vunmap code that frees the underlying pages
> also reset their permissions?
>=20
> Right now, we muck with set_memory_rw() and set_memory_nx(), which
> both have very awkward (and inconsistent with each other!) semantics
> when called on vmalloc memory.  And they have their own flushes, which
> is inefficient.  Maybe the right solution is for vunmap to remove the
> vmap area PTEs, call into a function like set_memory_rw() that resets
> the direct maps to their default permissions *without* flushing, and
> then to do a single flush for everything.  Or, even better, to cause
> the change_page_attr code to do the flush and also to flush the vmap
> area all at once so that very small free operations can flush single
> pages instead of flushing globally.

Thanks for the explanation. I read it just after I realized that indeed =
the
whole purpose of this code is to get cpa_process_alias()=20
update the corresponding direct mapping.

This thing (pageattr.c) indeed seems over-engineered and very =
unintuitive.
Right now I have a list of patch-sets that I owe, so I don=E2=80=99t =
have the time
to deal with it.

But, I still think that disable_ro_nx() should not call set_memory_x().
IIUC, this breaks W+X of the direct-mapping which correspond with the =
module
memory. Does it ever stop being W+X?? I=E2=80=99ll have another look.

