Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:45:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A1D91580375;
	Tue,  4 Dec 2018 16:01:53 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 16:01:53 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZz/7ih8SWvnvAv9uRHKM819IXTAuvvDOBiVQ1KB9?=
 =?us-ascii?q?1+8fIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CWWVOUdtfWSxDDY2y?=
 =?us-ascii?q?YIUBDOQBM/hfoYnmv1sDrwCzBRW1BOPq1jNIhmP60K883u88EQ/GxgsgH9cWvX?=
 =?us-ascii?q?rMttr6Kb0dUf6ox6TUyDXDbu9W0ir65YjOaB8uvOuDXaxqfcXLzEkvFh/Fg06f?=
 =?us-ascii?q?qYzgJTyV1+ANv3KH4OpnUOKikmgqoBxyrDi33soglJXFi4YPxlzZ+yh13pw5Kc?=
 =?us-ascii?q?C7RUJne9KpEZlduzmEO4dqQc4uWWVltDsgxrEYo5K3YS4Hw4k9yRHFcfyIaY2I?=
 =?us-ascii?q?7wrjVOmPJTd4g2poeKywhxms60is0O78Wdeu0FZMsCVFlsPAtncX1xzc8sSHS/?=
 =?us-ascii?q?198Vm92TuXyQzf9uVJLVopmafVNZIt2KM8m5kPvUjZHyL7ml36jKqMeUUl/uio?=
 =?us-ascii?q?5f7nYrLjppKEM490iwf+Mrkhm8CmAuQ3LBIOX26F9uS4zbHj+kP4QLNUgf0sia?=
 =?us-ascii?q?TZrp/aKtoBpqKjAA9azJwj6xChADeiytgYmmMHLF1ddBKdk4fpI03OIOz/Dfqn?=
 =?us-ascii?q?h1SskTRryO7cMrzuH5XANXzDkLbnfbZg5E9Q0gszzdZD551KDrENOu78Wkj0tN?=
 =?us-ascii?q?bAFB82LxS0w/r7CNV6zo4eWXiAAq6FMKzItl+E/OIvI/SWa48TtzbwMPwl5//o?=
 =?us-ascii?q?jX8kll4RZ6ip3Z0LaH+mGvRqOVmWYX3pgt0ZC2cFohI+TPD2iF2FSTNTZXGyUL?=
 =?us-ascii?q?wm6jE4D4KmC4HDRoe2jbyF3Se7GIBWZ29cBlCNF3foa5uLW/MWZC2OJc9hlyQO?=
 =?us-ascii?q?VaK9RI85yRGuqAj6xqJ9IerP+i0YspHj2MJv5+LJlxE/7jh0D8Wb02GQQGB4hG?=
 =?us-ascii?q?IIRzkq3K9hpUxx0EuM0a99g/ZAD9xc++tJUhsmNZ7b1+F6CMr9WgTbcteNSVap?=
 =?us-ascii?q?WNOmAT4qQ9I1wt8OZVt9Gtq4ghDC2SqqH6Eal7iRCJMo9aLc2mD7J9xhxHbeyK?=
 =?us-ascii?q?khk14mT9NSOmK8mK5w6RLfB47TnEWfjKala6Ic0CnJ9GeAyGqOuFpVUApxUaXD?=
 =?us-ascii?q?QHAeaVHardX/5kPeUbCuDa4rPRdGyc6HMqFKcMHmjU1aRPf/P9TTe3++lH2uBR?=
 =?us-ascii?q?mW3L+MbJDle2MG3CrDDkgJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGcV/IT3rcDuCc9qzV1HEyx387MB9qHvQpheKRcYd?=
 =?us-ascii?q?Uy4Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0J/qPr3YNGbz8w6vaqLMwV7ezcuZ9b0J6PQ7rFXjohqkFk4j83VhztlU3G?=
 =?us-ascii?q?GQ5pTMDAoOT53xVlw7+AR9p7HfeiM9/Z/b1WVwMamotT/Pw9IoBPY/xhm8Zdte?=
 =?us-ascii?q?MaOEGxX0E80VHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQxZYFwu2X0RGdVzjhi1etqMb3lp5eZTETB2aw1TLrBIpMaaJs?=
 =?us-ascii?q?Z4YLDmGuLtazxtV/gZ7tRnFZ+ESiB1MAxM+mZx6SY0bh0g1X0EQduWanljegzz?=
 =?us-ascii?q?xojzEpqbKS3SzPw+j4dBsLIHVLRHRkjVr3JYi0jtYaXFWnbgQzlRul41r6yLZf?=
 =?us-ascii?q?pKhlM2bTRkJIdTDsL25+SquwqqaCY8lX5ZMqqypXSue8YVOdSrLnuBsVySDjH2?=
 =?us-ascii?q?hfxDA9aT6qvI70nxh7iGKbMXZyo2DVecB2xRfD+tPcQeRd0SYBRCl9kTPXHESz?=
 =?us-ascii?q?P8G1/dWIkJfOquC/WHimVpFJcynrzIWAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3GoJknYsxnp0Q2WUaiY+T/XoIimrz?=
 =?us-ascii?q?NdRb2aTjbHsCXzILwtjV4BT7101nNH6G24X5VnCFyMt7e9a6en8W2j46781SDa?=
 =?us-ascii?q?eU7b9EkjFvrlu2sw3ReuR9kSkHyfQ19nEame4JtREpziWcBLASAEZZMTbtlxSO?=
 =?us-ascii?q?89CxsqFXaHyzfri30Up0hcqhA62aogFARHb5fY8vHTN37sV6Kl7N0Wf86of5eN?=
 =?us-ascii?q?nLdtITtwaZkxPBj+hTNZIwmeAGhSthOWLho3Ilz/Q3ggBp3ZG/pIKHMXli/Lql?=
 =?us-ascii?q?Ah5EMT34f9gc9SvqjaZag8aaxYSvHoh6FzUPXZvoS++oET0IufTmMQaODCMzqn?=
 =?us-ascii?q?OBFbXDGg+f7V9sr2jTHJCzK3GXOH4ZwM1gRBaHIUxQnhsUUC8mnpIjFQCq2c/h?=
 =?us-ascii?q?cFp/5j8L/V71sR9MyuNuNxniXWbTvgaoajEoSJeBKBpa9B1N50DQMcaG9OJ8Az?=
 =?us-ascii?q?lY/oG9rAyKMmGaZwNIDXwQWkyZHV/jOKOi5cLH8+ieCeqzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/Nb9CUpBa/+i10r8?=
 =?us-ascii?q?Cz6vfrWBjo5YuAFbRSK8hv+wutjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtpO8tV9K08xBdCOM7BhtPx1751lfo1C1ZDVV?=
 =?us-ascii?q?z8lcClf80KI2ehNFzZAEaHLqiJJTrOw8vve6OzVaVQjPlItx23oTubD07jPjGZ?=
 =?us-ascii?q?mzb1TRygLeFMgz+dPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFm1B9HVlK+yEmyef7+bAK5cWseFkAiJ7l+9B5HQ6yr1V?=
 =?us-ascii?q?7DxLRfBvmSvSqMJurE+ikuWV1jVnVx9O+X53g9fBkEltNK7e85NNHT7+/RkOpV?=
 =?us-ascii?q?3aQ0AQptBmTMWptqxfx9PIkaj+ADZE79/Qu8AbAp6HBtiANS8HOBbgBnb9CQoZ?=
 =?us-ascii?q?BWqtPG3WmQpUlfCO3nKQp5k+7JPrncxdGfdgSFUpG6ZCWQxeF9sYLcIyB2t8nA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAQAIFQdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYNsJ4N5lCeBaCUUiQ9ujUyBXxIBARgTAYRAgwwiOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAdARsdAQMBAQkBAQUFCw0CAiYCAgMgE?=
 =?us-ascii?q?QEFARwGEwUWgwaBaQEDDQgFmWA8iw2BEgUBF4J3BYRBChknDV2BNwIGEnmLE4F?=
 =?us-ascii?q?XP4E4DBOCHi6EaRiDBDGCJgKLIIUOkBoHAoIgBI8dGIFbhRGCbxCHO5Vygl0CB?=
 =?us-ascii?q?AIEBQIFDyGBPIF2MxojegEGgjs+gV0MF4NKinQfMgGBBAEBiyIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAQAIFQdch0O0hNFkHAEBAQQBAQcEAQGBZYNsJ4N5lCe?=
 =?us-ascii?q?BaCUUiQ9ujUyBXxIBARgTAYRAgwwiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmEBAQEBAgEBAiAdARsdAQMBAQkBAQUFCw0CAiYCAgMgEQEFARwGEwUWgwa?=
 =?us-ascii?q?BaQEDDQgFmWA8iw2BEgUBF4J3BYRBChknDV2BNwIGEnmLE4FXP4E4DBOCHi6Ea?=
 =?us-ascii?q?RiDBDGCJgKLIIUOkBoHAoIgBI8dGIFbhRGCbxCHO5Vygl0CBAIEBQIFDyGBPIF?=
 =?us-ascii?q?2MxojegEGgjs+gV0MF4NKinQfMgGBBAEBiyIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,316,1539673200"; 
   d="scan'208";a="53849877"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 16:01:52 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726663AbeLEABt (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 19:01:49 -0500
Received: from mail-wr1-f44.google.com ([209.85.221.44]:37694 "EHLO
        mail-wr1-f44.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725875AbeLEABt (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 19:01:49 -0500
Received: by mail-wr1-f44.google.com with SMTP id j10so17779198wru.4;
        Tue, 04 Dec 2018 16:01:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=BdKhANV4u4dEOeBOj+7RjLxEQxQR3v34rvUj0vf3onI=;
        b=F9ixb6J3B1rm4Smj7F6hP7n+3DHjB8vxeFEENOg2Y94vDfqkWeGtJfKvgabD4QMAkc
         g/TS+0fO0sB6QWDJ6Z9ljV86lTIvb8BvAgDfgQDFO8NW75TANqAsyHkMLXpojPAEKdDm
         qC8MXlrBJ/VM4nWjfBabEFcMar2qj2BgGjOdrK2Ryy4AwcPFibvxM7NgIYsq0A+BuKRt
         4vseSM/VhdJXfptRuJUPoqcHI7N4gI02qwxfpeVE7PU8v656tjNlc5592QNO83i4B4q5
         Pl/uRUso+Fro68tIERLsg/xOlfvpNbDop8lPS9yAdocoPUMWoZz55HqNEFQoif/3iWn4
         WXMw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=BdKhANV4u4dEOeBOj+7RjLxEQxQR3v34rvUj0vf3onI=;
        b=PpvHOs+1yr62aDp0QpHvWy23MDcUMWKVjSvhS7g7Z2zPV2+tLVrRMJOiFnlLdGzEaR
         zHuoqQ/ImI+rTEzkaHTW5PUg9o29gtxDmoFEaybF9W0szJYbal2YVSX1TGInrjnoDMi9
         NmuFpbpJcMqoOJzbnfyZGTq6WJT5eX1LoN+81VnCdZHn/F7x5iVZqTantSxT6M/uw3ye
         sUeBgUIfazEa3sjs9/T+gB6fMEtgT5an3ZHomoNzQunWHqbtdvE+2Zqofe1Z4d8JRaax
         o9vHL1QZQlxpK07vv4oLsHJeuGyXgdWKJ73vgqVVV10coTBSm8UaaQxSBTNyZj+1WcuZ
         5uLA==
X-Gm-Message-State: AA+aEWbbQyk8pqsFScyGNI7+l0nfvDNBO45AqC575ZaMKXWerjA9Hbm4
        vWukadZ7oG7lSmK4A40OrRM=
X-Google-Smtp-Source: AFSGD/WEfdkdQrpd6AUIJ1K1MaggQMtohB3+nOWPL+DwDlZaMJTndn3b0mPBkJEMQccxVPA2GfH5MA==
X-Received: by 2002:adf:e9d1:: with SMTP id l17mr18510352wrn.73.1543968105924;
        Tue, 04 Dec 2018 16:01:45 -0800 (PST)
Received: from [10.2.19.70] ([208.91.2.1])
        by smtp.gmail.com with ESMTPSA id o17sm8360708wmg.35.2018.12.04.16.01.40
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 16:01:45 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.1 \(3445.101.1\))
Subject: Re: [PATCH 1/2] vmalloc: New flag for flush before releasing pages
From: Nadav Amit <nadav.amit@gmail.com>
In-Reply-To: <e70c618d10ddbb834b7a3bbdd6e2bebed0f8719d.camel@intel.com>
Date: Tue, 4 Dec 2018 16:01:38 -0800
Cc: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "daniel@iogearbox.net" <daniel@iogearbox.net>,
        "ard.biesheuvel@linaro.org" <ard.biesheuvel@linaro.org>,
        "jeyu@kernel.org" <jeyu@kernel.org>,
        "rostedt@goodmis.org" <rostedt@goodmis.org>,
        "ast@kernel.org" <ast@kernel.org>,
        "linux-mm@kvack.org" <linux-mm@kvack.org>,
        "Dock, Deneen T" <deneen.t.dock@intel.com>,
        "jannh@google.com" <jannh@google.com>,
        "kristen@linux.intel.com" <kristen@linux.intel.com>,
        "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
        "peterz@infradead.org" <peterz@infradead.org>,
        "will.deacon@arm.com" <will.deacon@arm.com>,
        "mingo@redhat.com" <mingo@redhat.com>,
        "luto@kernel.org" <luto@kernel.org>,
        "Keshavamurthy, Anil S" <anil.s.keshavamurthy@intel.com>,
        "kernel-hardening@lists.openwall.com" 
        <kernel-hardening@lists.openwall.com>,
        "mhiramat@kernel.org" <mhiramat@kernel.org>,
        "naveen.n.rao@linux.vnet.ibm.com" <naveen.n.rao@linux.vnet.ibm.com>,
        "davem@davemloft.net" <davem@davemloft.net>,
        "netdev@vger.kernel.org" <netdev@vger.kernel.org>,
        "Hansen, Dave" <dave.hansen@intel.com>
Content-Transfer-Encoding: quoted-printable
Message-Id: <843E4326-3426-4AEC-B0F7-2DC398A6E59A@gmail.com>
References: <20181128000754.18056-1-rick.p.edgecombe@intel.com>
 <20181128000754.18056-2-rick.p.edgecombe@intel.com>
 <4883FED1-D0EC-41B0-A90F-1A697756D41D@gmail.com>
 <20181204160304.GB7195@arm.com>
 <51281e69a3722014f718a6840f43b2e6773eed90.camel@intel.com>
 <A5ABCA50-12F0-4A19-B499-3927D59BF589@gmail.com>
 <e70c618d10ddbb834b7a3bbdd6e2bebed0f8719d.camel@intel.com>
To: "Edgecombe, Rick P" <rick.p.edgecombe@intel.com>
X-Mailer: Apple Mail (2.3445.101.1)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

> On Dec 4, 2018, at 3:51 PM, Edgecombe, Rick P =
<rick.p.edgecombe@intel.com> wrote:
>=20
> On Tue, 2018-12-04 at 12:36 -0800, Nadav Amit wrote:
>>> On Dec 4, 2018, at 12:02 PM, Edgecombe, Rick P =
<rick.p.edgecombe@intel.com>
>>> wrote:
>>>=20
>>> On Tue, 2018-12-04 at 16:03 +0000, Will Deacon wrote:
>>>> On Mon, Dec 03, 2018 at 05:43:11PM -0800, Nadav Amit wrote:
>>>>>> On Nov 27, 2018, at 4:07 PM, Rick Edgecombe <
>>>>>> rick.p.edgecombe@intel.com>
>>>>>> wrote:
>>>>>>=20
>>>>>> Since vfree will lazily flush the TLB, but not lazily free the
>>>>>> underlying
>>>>>> pages,
>>>>>> it often leaves stale TLB entries to freed pages that could get =
re-
>>>>>> used.
>>>>>> This is
>>>>>> undesirable for cases where the memory being freed has special
>>>>>> permissions
>>>>>> such
>>>>>> as executable.
>>>>>=20
>>>>> So I am trying to finish my patch-set for preventing transient W+X
>>>>> mappings
>>>>> from taking space, by handling kprobes & ftrace that I missed =
(thanks
>>>>> again
>>>>> for
>>>>> pointing it out).
>>>>>=20
>>>>> But all of the sudden, I don=E2=80=99t understand why we have the =
problem that
>>>>> this
>>>>> (your) patch-set deals with at all. We already change the mappings =
to
>>>>> make
>>>>> the memory writable before freeing the memory, so why can=E2=80=99t =
we make it
>>>>> non-executable at the same time? Actually, why do we make the =
module
>>>>> memory,
>>>>> including its data executable before freeing it???
>>>>=20
>>>> Yeah, this is really confusing, but I have a suspicion it's a =
combination
>>>> of the various different configurations and hysterical raisins. We =
can't
>>>> rely on module_alloc() allocating from the vmalloc area (see nios2) =
nor
>>>> can we rely on disable_ro_nx() being available at build time.
>>>>=20
>>>> If we *could* rely on module allocations always using vmalloc(), =
then
>>>> we could pass in Rick's new flag and drop disable_ro_nx() =
altogether
>>>> afaict -- who cares about the memory attributes of a mapping that's =
about
>>>> to disappear anyway?
>>>>=20
>>>> Is it just nios2 that does something different?
>>>>=20
>>>> Will
>>>=20
>>> Yea it is really intertwined. I think for x86, set_memory_nx =
everywhere
>>> would
>>> solve it as well, in fact that was what I first thought the solution =
should
>>> be
>>> until this was suggested. It's interesting that from the other =
thread Masami
>>> Hiramatsu referenced, set_memory_nx was suggested last year and =
would have
>>> inadvertently blocked this on x86. But, on the other architectures I =
have
>>> since
>>> learned it is a bit different.
>>>=20
>>> It looks like actually most arch's don't re-define set_memory_*, and =
so all
>>> of
>>> the frob_* functions are actually just noops. In which case =
allocating RWX
>>> is
>>> needed to make it work at all, because that is what the allocation =
is going
>>> to
>>> stay at. So in these archs, set_memory_nx won't solve it because it =
will do
>>> nothing.
>>>=20
>>> On x86 I think you cannot get rid of disable_ro_nx fully because =
there is
>>> the
>>> changing of the permissions on the directmap as well. You don't want =
some
>>> other
>>> caller getting a page that was left RO when freed and then trying to =
write
>>> to
>>> it, if I understand this.
>>>=20
>>> The other reasoning was that calling set_memory_nx isn't doing what =
we are
>>> actually trying to do which is prevent the pages from getting =
released too
>>> early.
>>>=20
>>> A more clear solution for all of this might involve refactoring some =
of the
>>> set_memory_ de-allocation logic out into __weak functions in either =
modules
>>> or
>>> vmalloc. As Jessica points out in the other thread though, modules =
does a
>>> lot
>>> more stuff there than the other module_alloc callers. I think it may =
take
>>> some
>>> thought to centralize AND make it optimal for every
>>> module_alloc/vmalloc_exec
>>> user and arch.
>>>=20
>>> But for now with the change in vmalloc, we can block the executable =
mapping
>>> freed page re-use issue in a cross platform way.
>>=20
>> Please understand me correctly - I didn=E2=80=99t mean that your =
patches are not
>> needed.
> Ok, I think I understand. I have been pondering these same things =
after Masami
> Hiramatsu's comments on this thread the other day.
>=20
>> All I did is asking - how come the PTEs are executable when they are =
cleared
>> they are executable, when in fact we manipulate them when the module =
is
>> removed.
> I think the directmap used to be RWX so maybe historically its trying =
to return
> it to its default state? Not sure.
>=20
>> I think I try to deal with a similar problem to the one you encounter =
-
>> broken W^X. The only thing that bothered me in regard to your patches =
(and
>> only after I played with the code) is that there is still a =
time-window in
>> which W^X is broken due to disable_ro_nx().
> Totally agree there is overlap in the fixes and we should sync.
>=20
> What do you think about Andy's suggestion for doing the vfree cleanup =
in vmalloc
> with arch hooks? So the allocation goes into vfree fully setup and =
vmalloc frees
> it and on x86 resets the direct map.

As long as you do it, I have no problem ;-)

You would need to consider all the callers of module_memfree(), and =
probably
to untangle at least part of the mess in pageattr.c . If you are up to =
it,
just say so, and I=E2=80=99ll drop this patch. All I can say is =E2=80=9Cg=
ood luck with all
that=E2=80=9D.

