Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:29:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2EAE458037D;
	Thu, 22 Nov 2018 08:50:34 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 08:50:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AG/LhSRy8p9S8ZsrXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8QLfad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYO/1icK3dY94WXHNNUMRMWCxbG4+y?=
 =?us-ascii?q?cpYPD/EZPelGs4b9u0ICrR+5BQiiGejjzj9Finrw0KI9z+ovER/L0BU5E9wMrX?=
 =?us-ascii?q?vUtsz5OroPUeCu1KnH0ynMb+9L0jv59oTEbhUtrPeRVrxybMXR01EiGQPbgFuN?=
 =?us-ascii?q?p4LrPDSb2eYDs2eZ4epvWv6ghWE8qwFpoDWi3dssh4rTi44J0F3I6Sd0zYAoLt?=
 =?us-ascii?q?O4Uk57ZtukHYNUuSGHM4t2Q9ktQ2d1sygn1r0Jp4K0fCsOyJQmwR7QceGMfo+K?=
 =?us-ascii?q?4hL4SOaePyt3hHFheLK+nBu9602gxff9V8mz1lZGtDdKncfVu30Lyhfd6dCHR+?=
 =?us-ascii?q?Nj8ku93TuDzR3f5+9aLUwuiKbWKIItzqQxm5cRqUjPADP6lUfsgKOLdEgo5/Kk?=
 =?us-ascii?q?5/nkb7jpvJOQKY95hwfjOao0gMO/G/43Mg0WUmib5+u80Lrj8FXnQLVFkPI2iL?=
 =?us-ascii?q?PVsJPEKsQBoK62HQtV3pwk6xalADeqyNUYnX8ZI1JZYB+LkZTlNlXULPzlA/qz?=
 =?us-ascii?q?nU6gnCpoyvzaJLHsA5fAImDGkLj7fLZ970BcyBA0zdBa/59UDrABIPTuWk7+rd?=
 =?us-ascii?q?DYDQE2Mxayw+n5DNVxz4QeWGyJAqCHKqPfqkGI5u0xLOmWfoMVuyjyK+Ij5/Hw?=
 =?us-ascii?q?iX81g1gdfbOm3ZcPcnC3AuxmI1mFYXrrmtoBFWYKvgkgQ+Dwh1yCTCVeZ3KzX6?=
 =?us-ascii?q?I6+zE6B5iqDYbFRoCxnrOB2D23EYFRZmBDElqMC2vnd52YW/cQbyKfOs9hnSYF?=
 =?us-ascii?q?Vbi9UYAh0guitA/ny7V9KOrU9TYVtZbi1Nhz+u3Smgs+9T1yD8SBzW6NS3t4kX?=
 =?us-ascii?q?8PRz8zxKp/u1Byyk+f0ahkhPxVDd5T5/RXXQsgNp7cyOp6C9b1Wg/aeteJSVCm?=
 =?us-ascii?q?QsipAD0rT9IxxcMObFh5G9m4kh/D2C+qCacPl7OXHJw07r7c33/pKsln0HbG1K?=
 =?us-ascii?q?4hj1o8TstVL2KmhLVy9wzSB47PjkWYmLymdaUa3C7R6miDyXCCs11fUA51Sa/F?=
 =?us-ascii?q?R2wQZlPKrdTl4UPPV7yuBq4hMgdbzc6CK7FFatvmjVhdQPfjOdLeY3++mmuqBB?=
 =?us-ascii?q?aIwK+MY5Tue2kHwCrdD00EmRgJ/XmaLQg+Gjuho2XGATNzD13vfV3j/fN+qHyh?=
 =?us-ascii?q?SE801B+Fb0tm27qx+R4VgPicRugX3rIFvichtjp1EEy839LQF9qPuQ5hcL9Abt?=
 =?us-ascii?q?M65VdNzXjZuBBlPpy8M6BigUYTfBltsEPwyRp7EIVAntIsrHMx0gVyL7mV0FdA?=
 =?us-ascii?q?dzOewJDxNafbKmj0/BCzdaHW3kvS38qR+qcK8P44sUnsvBm1Fko+9HVqy8VV03?=
 =?us-ascii?q?qZ5pXNEAoSUZLwXlwr9xRgoLHaeC0954LS1X1jKqS0tj7C29Q0BOoq0BqgftFf?=
 =?us-ascii?q?ML+aGw/2CcEVG8+uKOkykVizch0EJPxS9LIzP86+bfSG3LCkPel+kzOml2hI+5?=
 =?us-ascii?q?193V+W+Cp6Se7I2IgFzuqc3guGUTf8kVigvtr2mYBCeTEdAG6/xTL4C45WY614?=
 =?us-ascii?q?ZZwLBnu2I82r2tV+gIbgWn5F9FK5G1wKws6oeRqIYFz70g1dzkAXoX2hmSulwD?=
 =?us-ascii?q?14iTAprqyD3CPQx+TubgYIOmlORGN6l1fjPZC0j8wGXEivdwUpjhql6lrgyKhB?=
 =?us-ascii?q?uat/KHPfQUFWcCjsLmFuS7e/uaCGY8FS9pwoqyJXUOKnbFCeS779pQYa0iz5E2?=
 =?us-ascii?q?tfwjA7ay+lupHjkxNmj2KdKW55rGDFdsFo2Rff+NvcSOZR3zoHXiV5iSPbBkOh?=
 =?us-ascii?q?P9mv5tiUk5bDsuajV2OuTJFTcC/rzZ+euyu//2FlHRq/n/WrkN39DQc6yTP718?=
 =?us-ascii?q?VtVSjQrhbzeJPr16e5MeJgZEVoH0Xz68l5GoF/lIs/mpcQ1GMehpWU+3oHjGjy?=
 =?us-ascii?q?Pc9a2aL4cHoCWzoLz8TJ7wji3U1pNmiJyJ7hVnWB3sthYMG3Y2MM1SI69cxKCq?=
 =?us-ascii?q?aU7LpfkCtxo1q4qx/RYPdnkjccz/su9GAVg+UTtAUxySWdB6gYHVNEMiz0ixSI?=
 =?us-ascii?q?89e+ob1UZGm1cLi8zkp+nc27A7GErQFRQ3L5epYkHS9t4cRzKlPM0Hvv6o76fN?=
 =?us-ascii?q?ncd84cthqRkx3YlehaNIoxluYWhSpgIW/9uHwly+0hghB005C1opOHK3lz86Kj?=
 =?us-ascii?q?GRFXKCf1Z8wI9zHpjKZemNuW3o+1EpVgHDULQIXnTfayHD0OsvTnMh6EECcgpX?=
 =?us-ascii?q?eDBbrfAQif5V96r3LIFpCnLXCWK2MfzdV/XxmdP01fjRsQXDU7mJ45Cw+ryNbg?=
 =?us-ascii?q?cEd/+jAe+Fr4pgFQxeJvMhn1Sn3fqxuwajcoVJifKwJb4RpY6EfSNcye8/h/Hy?=
 =?us-ascii?q?VF/pC6qAyNK2qbZxlHDG0TW0yEAUzjMaeq5dXa7+eYAe++JePUYbqSsexeS+uI?=
 =?us-ascii?q?xZW334tk5TmMM9uAPmJ4A/0nwEZDXm15G8fEmzUJUSMXjDnAb8qapBe65y12od?=
 =?us-ascii?q?qz8PXtWALz+4SPD6FePslo+xCzma2DLfKfhD5lKTZE0ZMB3X/JyL8C3F4LliFh?=
 =?us-ascii?q?bT+tHa4btS7KSqLQlbRaDxoaayN1KctJ4Lgw3ghLOc7HlNz10qR0geIyC1dATV?=
 =?us-ascii?q?bhgN2mZdQWI2GhM1PKHEaLO6qHJT3IwMH3YLmwSb5KjOVTuB2/pyybE1L4PjmY?=
 =?us-ascii?q?kznpVhavMfxDjS2BPRxevp29fQhpCWT5UN3mbRi7OsdtjTIq2b00mm/KNWkEPD?=
 =?us-ascii?q?dmbkNCtaeQ4j1Yg/llH2xB72FoLe2Fmyaf8unZJYwasfptAiRoie1a5G42xKdS?=
 =?us-ascii?q?7CFBXPZ1gjfdrsZyo1G6lemC0iZnUBtLqjpRmI2Hp1ltOaXH+ZlGQnvE+BMN7W?=
 =?us-ascii?q?ONCxUFvddlC9vvu7xOxdjLjq78NDBC89fM98sGG8fUMN6HMGYmMRfxGD/bFg0F?=
 =?us-ascii?q?TTuqNWHZn0NckfGS+WeTrpg1sZXsnJsOSrlGVF06DP8aC0JlHMAcL5dzRD8rjb?=
 =?us-ascii?q?mbjMtbrUa5+RrcXsNXutXHX+ieDPPuLjmxibhfewBOxqv1K5saMom90EtnOXdg?=
 =?us-ascii?q?m4GfOVfUXNlL6hZ9YwQ3pERL+TAqTHYv1knmbgKF6XoaB/my2BI73FgtKd8x/S?=
 =?us-ascii?q?vhtg9kbmHBozE9xQxuxNg=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BvAwAF3fZbh0O0hNFihXESJ4N4iHeLI?=
 =?us-ascii?q?QGBaDlmiB6PRgNKFAEBGBMBiFIiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiS?=
 =?us-ascii?q?CYwMDAQIOEgQLAQ0BATcBBQkBASQCJgICA1QZBYMcgXUNBZJSAQGJDgGMT3B8M?=
 =?us-ascii?q?4J2AQEFhxoIgQuGU4MPgRwXgUA/gREzgiqDUAKCLoI3gleJJYFulHEJHXSQHhi?=
 =?us-ascii?q?BWYd4NocBmAkCBAsCEwGBXVWBIU0kFIMngicXg32KID4BATEBgQQBAYxUAQE?=
X-IPAS-Result: =?us-ascii?q?A0BvAwAF3fZbh0O0hNFihXESJ4N4iHeLIQGBaDlmiB6PRgN?=
 =?us-ascii?q?KFAEBGBMBiFIiOBIBAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiSCYwMDAQIOEgQLA?=
 =?us-ascii?q?Q0BATcBBQkBASQCJgICA1QZBYMcgXUNBZJSAQGJDgGMT3B8M4J2AQEFhxoIgQu?=
 =?us-ascii?q?GU4MPgRwXgUA/gREzgiqDUAKCLoI3gleJJYFulHEJHXSQHhiBWYd4NocBmAkCB?=
 =?us-ascii?q?AsCEwGBXVWBIU0kFIMngicXg32KID4BATEBgQQBAYxUAQE?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="52302535"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 08:50:31 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2404293AbeKWDaQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 22:30:16 -0500
Received: from smtp-fw-9101.amazon.com ([207.171.184.25]:39541 "EHLO
        smtp-fw-9101.amazon.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732770AbeKWDaQ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 22:30:16 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=amazon.de; i=@amazon.de; q=dns/txt; s=amazon201209;
  t=1542905405; x=1574441405;
  h=from:to:cc:subject:date:message-id:mime-version:
   content-transfer-encoding;
  bh=Y0vjKPL8ZuhXE0bqa/fSxAgmugYhdHShYA3isBMlp0k=;
  b=O3gyUy70hPEtg7P7Y1oxbyAB+jd7iSQ3GFHCp75ZwvX+FKfLD3jVT7Q9
   Z7U6zRbkRDZkbImmEMVi9am4N4KNHJ8lYHgjoxEIRaK6J7wK5Kofuko3B
   9/lKtPMeYVgR8eM54kdLwuBmEmgUq+8F4XceTYCJcCK4HIze8VBtyJR5g
   c=;
X-IronPort-AV: E=Sophos;i="5.56,253,1539648000"; 
   d="scan'208";a="771919547"
Received: from sea3-co-svc-lb6-vlan3.sea.amazon.com (HELO email-inbound-relay-2b-4ff6265a.us-west-2.amazon.com) ([10.47.22.38])
  by smtp-border-fw-out-9101.sea19.amazon.com with ESMTP/TLS/DHE-RSA-AES256-SHA; 22 Nov 2018 16:50:01 +0000
Received: from u54ee758033e858cfa736.ant.amazon.com (pdx2-ws-svc-lb17-vlan2.amazon.com [10.247.140.66])
        by email-inbound-relay-2b-4ff6265a.us-west-2.amazon.com (8.14.7/8.14.7) with ESMTP id wAMGnujS037306
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
        Thu, 22 Nov 2018 16:49:58 GMT
Received: from u54ee758033e858cfa736.ant.amazon.com (localhost [127.0.0.1])
        by u54ee758033e858cfa736.ant.amazon.com (8.15.2/8.15.2/Debian-3) with ESMTP id wAMGnt4t008106;
        Thu, 22 Nov 2018 17:49:55 +0100
Received: (from jsteckli@localhost)
        by u54ee758033e858cfa736.ant.amazon.com (8.15.2/8.15.2/Submit) id wAMGnsT4008105;
        Thu, 22 Nov 2018 17:49:54 +0100
From: Julian Stecklina <jsteckli@amazon.de>
To: kernel-hardening@lists.openwall.com
Cc: Julian Stecklina <jsteckli@amazon.de>,
        Liran Alon <liran.alon@oracle.com>,
        Tycho Andersen <tycho@tycho.ws>,
        Jonathan Adams <jwadams@google.com>,
        David Woodhouse <dwmw2@infradead.org>,
        LKML <linux-kernel@vger.kernel.org>
Subject: [RFC RESEND PATCH 1/6] kvm, vmx: move CR2 context switch out of assembly path
Date: Thu, 22 Nov 2018 17:49:34 +0100
Message-Id: <3c182809f9f1cffbaada408b2b291c0f5eb2a465.1542905228.git.jsteckli@amazon.de>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <cover.1542905228.git.jsteckli@amazon.de>
References: <cover.1542905228.git.jsteckli@amazon.de>
In-Reply-To: <cover.1542905228.git.jsteckli@amazon.de>
References: <cover.1542905228.git.jsteckli@amazon.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The VM entry/exit path is a giant inline assembly statement. Simplify it
by doing CR2 context switching in plain C. Move CR2 restore behind IBRS
clearing, so we reduce the amount of code we execute with IBRS on.

Using {read,write}_cr2() means KVM will use pv_mmu_ops instead of open
coding native_{read,write}_cr2(). The CR2 code has been done in
assembly since KVM's genesis[1], which predates the addition of the
paravirt ops[2], i.e. KVM isn't deliberately avoiding the paravirt
ops.

[1] Commit 6aa8b732ca01 ("[PATCH] kvm: userspace interface")
[2] Commit d3561b7fa0fb ("[PATCH] paravirt: header and stubs for paravirtualisation")

Signed-off-by: Julian Stecklina <jsteckli@amazon.de>
Reviewed-by: Jan H. Sch√∂nherr <jschoenh@amazon.de>
Reviewed-by: Konrad Jan Miller <kjm@amazon.de>
Reviewed-by: Jim Mattson <jmattson@google.com>
Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
---
 arch/x86/kvm/vmx.c | 15 +++++----------
 1 file changed, 5 insertions(+), 10 deletions(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index ccc6a01eb4f4..a6e5a5cd8f14 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -11212,6 +11212,9 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 	evmcs_rsp = static_branch_unlikely(&enable_evmcs) ?
 		(unsigned long)&current_evmcs->host_rsp : 0;
 
+	if (read_cr2() != vcpu->arch.cr2)
+		write_cr2(vcpu->arch.cr2);
+
 	if (static_branch_unlikely(&vmx_l1d_should_flush))
 		vmx_l1d_flush(vcpu);
 
@@ -11231,13 +11234,6 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		"2: \n\t"
 		__ex("vmwrite %%" _ASM_SP ", %%" _ASM_DX) "\n\t"
 		"1: \n\t"
-		/* Reload cr2 if changed */
-		"mov %c[cr2](%0), %%" _ASM_AX " \n\t"
-		"mov %%cr2, %%" _ASM_DX " \n\t"
-		"cmp %%" _ASM_AX ", %%" _ASM_DX " \n\t"
-		"je 3f \n\t"
-		"mov %%" _ASM_AX", %%cr2 \n\t"
-		"3: \n\t"
 		/* Check if vmlaunch of vmresume is needed */
 		"cmpl $0, %c[launched](%0) \n\t"
 		/* Load guest registers.  Don't clobber flags. */
@@ -11298,8 +11294,6 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		"xor %%r14d, %%r14d \n\t"
 		"xor %%r15d, %%r15d \n\t"
 #endif
-		"mov %%cr2, %%" _ASM_AX "   \n\t"
-		"mov %%" _ASM_AX ", %c[cr2](%0) \n\t"
 
 		"xor %%eax, %%eax \n\t"
 		"xor %%ebx, %%ebx \n\t"
@@ -11331,7 +11325,6 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		[r14]"i"(offsetof(struct vcpu_vmx, vcpu.arch.regs[VCPU_REGS_R14])),
 		[r15]"i"(offsetof(struct vcpu_vmx, vcpu.arch.regs[VCPU_REGS_R15])),
 #endif
-		[cr2]"i"(offsetof(struct vcpu_vmx, vcpu.arch.cr2)),
 		[wordsize]"i"(sizeof(ulong))
 	      : "cc", "memory"
 #ifdef CONFIG_X86_64
@@ -11365,6 +11358,8 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 	/* Eliminate branch target predictions from guest mode */
 	vmexit_fill_RSB();
 
+	vcpu->arch.cr2 = read_cr2();
+
 	/* All fields are clean at this point */
 	if (static_branch_unlikely(&enable_evmcs))
 		current_evmcs->hv_clean_fields |=
-- 
2.17.1

