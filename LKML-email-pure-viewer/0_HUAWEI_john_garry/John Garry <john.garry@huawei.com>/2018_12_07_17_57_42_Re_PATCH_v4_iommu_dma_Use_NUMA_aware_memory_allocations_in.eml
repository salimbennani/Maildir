Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:51:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1073858052C;
	Fri,  7 Dec 2018 09:58:04 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 09:58:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+qilShw4XhcYO+HXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8XLPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmlT?=
 =?us-ascii?q?kJNzA5/m/UhMJ/gq1UrxC9qBJwwo7Ue5mVOfhlc6PBf94XX3ZNUtpfWiFBBI63?=
 =?us-ascii?q?cosBD/AGPeZdt4Tzo1wOrRu4BQKxBe3g0CVIhmX23KYn1OkhEwbG3AwmH94Uv3?=
 =?us-ascii?q?Tbts/1NL0SUO2uzKnI0C/Mbv1I1jf88oTHbhchofSVUL92bMHfx04vFwbfgVWR?=
 =?us-ascii?q?r4zoJzeV1ucIs2if9eZgUvivi2E/pwF0uDevx8MshpDTiYIP1l/E9SR5wJgrKt?=
 =?us-ascii?q?GiVEF7ZtukHINTty6ELYt2RN0tQ2VytCY90L0Gtpi2dzUJxpQ/3xPTdeCLfoyS?=
 =?us-ascii?q?7h7+WuudPy10iG9mdb6jnRq/8EqtxvXhWsWoylpGsDZJnsfWunwTyRDe69KLR/?=
 =?us-ascii?q?Rg8ku51juC1xrf5v9LLE0wj6bXNYMtzqAqmpcdr0jOGDL9ll/sg6+MbEok//Cl?=
 =?us-ascii?q?6+T5bbXioZ+RL5F0ig7gPaQ0gMC/Avo3MhIIX2eF/eSwzrrj/Vf2QLlSj/02lL?=
 =?us-ascii?q?fWsIzCKMgFuqK0BxVZ3pst5hqhFTuqzdcVkWUdIF9Eeh+Ll43pNEvPIPD8A/e/?=
 =?us-ascii?q?mVOskDJzyvDCP73hBIjNL3fanLfiY7l98UhcxxQ3zdxG4JJVBLcBL+zpWkLqqt?=
 =?us-ascii?q?zYAQE2Mxauz+bkFtp9zIUeVnyLAqODN6PSq1CI6vo1I+aQfI8VpCr9K/896v7q?=
 =?us-ascii?q?jH85mkEScbOm3JsKc324GvVmI0OEYXvjmNsBEGEKvhYgQ+zuklGNTTlTZ3OqVa?=
 =?us-ascii?q?Im+j47EJ6mDZvERo21gLyOxia7HoFMaWBBEFyMEWroeJ+CW/cDcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mF0WGNSH97kn?=
 =?us-ascii?q?kLRz8x2qB/p0t9x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDbFxmG9WiiRDD3DCmA6UPmLyJH5E09qPc337sJ8dy0XrG1a?=
 =?us-ascii?q?8hj0U4TctLL2Gpmql/9w3LDY7Tj0qZj7qqdbgb3CPV92eM12yOsFtcUA5xS6rF?=
 =?us-ascii?q?W38fa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ACCto2bdDDxrEVLieEfs8eh4qHOm?=
 =?us-ascii?q?QU441QCKb0t917Wr/h4Zn+CTS/QW3rgcoicuty10HEqh39LRE9ePuhBufLtCbt?=
 =?us-ascii?q?8n4FdIz2TZtxdjMZymNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23d67W21Te0NGK+qcP6PU0sUnjsBuuFko493Vn0t9V03?=
 =?us-ascii?q?SH65XODQoSV4/xU0kt+xh7obHafjcy54fO2XJwNqm0tyfI28g1C+s91hagY9Bf?=
 =?us-ascii?q?PbueGw/2DcIbCNahKewwl1eycxILIfpd9Kg3P8OhafuLw6qrPOdmnDK7gmVL+o?=
 =?us-ascii?q?F90kSQ9yViTu7ExYoKw/ad3gGfTTfzkE+hstzrmYBDfTwTHne/xTL4C4JLZ6xy?=
 =?us-ascii?q?fZwECWGhI8CswtV+hpjtW2NX9VK5BlMG3tOpdgSWb1DnwQJQ0kEXq2S9mSSk1z?=
 =?us-ascii?q?x0jy0prq2H0SzUwuTtaAAIOnRWS2lll1vsJ5a7j8obXESxcwcmjh+l6lvkyKhB?=
 =?us-ascii?q?o6R/KXLeQUNJfyjwMmFjXbG8truEY85T9pwotT9bX/i7YVCfUrT9uQcV0zv/H2?=
 =?us-ascii?q?tCwzA2bzGrupTjkx16km6dN2tzrHzCdMF0xBff4sHcRPFL0joHQil4lSfYBlym?=
 =?us-ascii?q?M9a1+tWUko/JsvqiWGK5Sp1TbS7rwJuCtCSh/21qAh6/n/eplt38Cwc60iz719?=
 =?us-ascii?q?hsVSrWqhbxeY3r16W8MeJ6cUhkHl7868xmGo5glos8no0f2X8fhp+N53oIjX/z?=
 =?us-ascii?q?MclH2aL5dHcMRSQEw9nP7Ajn2U1jKGmEx4b4VnWb38tgaMO2YmIQ2iIh8c9KDL?=
 =?us-ascii?q?2Y46BDnStwulC4tx7eYeBhnjcBzvsj8H0ajPsIuAY3ziWdH6odHU9XPSH3kxSI?=
 =?us-ascii?q?7ta+rLhYZWq1cLiw0lZ+ks6lDL2Yvg5cX3P5cI84HSBs9sV/LE7M0Hrr54Hhed?=
 =?us-ascii?q?nQbsgcugeakhjelOhVNIw+luARiiV5I2L9smYoy+o6jRxowJG7s5KLK2Rr/KKl?=
 =?us-ascii?q?HBFYMif5aN8U+jHolaxehNqZ35izHpV9HTUGRIfoTfWtED4ItPXoLQCOECAnqn?=
 =?us-ascii?q?eAGLrSBguf6EZgr3LSHJGnLXCXJH8Fzdp8QBmRPlBQgAcRXD8ihJ42ChiqxND9?=
 =?us-ascii?q?cEd+/j0e/UT3qhxIyuJ1LRX/VnrfqRysajc1TpifMRVX4htD50fTLcyR8OZzEz?=
 =?us-ascii?q?tE8Z2mqQyHMnabaBhQDWEVRkyEAEjuPru06tnF7eeYHfCyL+fUbbWNtOxeVOqI?=
 =?us-ascii?q?xZS13Yt95DuMMsSPPn9/D/w0wEZDXHZ5G9jHlDULUSAYiyXNb8uDrhem5iJ3tt?=
 =?us-ascii?q?y/8OjsWA/35YqPDKZSMcxy+x+sh6ePLfWQhCF/KTZXzZ4MwX7IyL4C3F8dkS1u?=
 =?us-ascii?q?dj+tEageui7JVq7fhqhXDxsDYSNpKMRI97483hVKOcPDitP6yL94jv02C1dET1?=
 =?us-ascii?q?DhmdupZcsFI26jLlPHGV2LOa+CJT3KxcH3fKy9RadRjOVSqx2/pzKbH1X/MTSE?=
 =?us-ascii?q?kjnjTwqvPv1UjCGHIBxev5mwfQxwCWf4VtLpdB26PMVzjT032rA0gnLKNWgBMT?=
 =?us-ascii?q?lzaU9Nr7uQ7T9GjfV7AWBO8n1lLeyckSaD8+bYMooWsedsAilsi+Ja4XE6x6FJ?=
 =?us-ascii?q?4y1eWPN1mDXdrth1rlGik+mPzCdnURVUpjZKgoKLoVttOaHD+pZcXnbE+QoH7X?=
 =?us-ascii?q?+MBBQSu9tlFtrvtrhQy9fVkqLzLTZC89TM8sodB8jbMsSHMHU6PBrtGT7UChYF?=
 =?us-ascii?q?TDGxOWHegUxdjO+d9nmPopcmrZjsnclGdrgOAF4yDPQyWk50ANEZZpBtUWV3v6?=
 =?us-ascii?q?SciZsq4nq45DbYXt9L9sTFUfKUR/rmMiyIpblZbgQFwPXzKoFFZd6z4FBrdlQv?=
 =?us-ascii?q?xNeCIEHXR90Y+iA=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AqAAAQtApch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmkDfycKjAmMEYFgLRSSQYR6FIFfLA0GAYddIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2IoJkAQEBAQIBAQIkEUEFAQkBAQoVAy4DVAYNAQUCA?=
 =?us-ascii?q?QEBE4MJAYF5CAUKpmIzhC0BCwGBBoRpBYpggUKBVz+BESeCPS6DBRkDgUABAQa?=
 =?us-ascii?q?FcwKLJ4RakGYHAoIhBIRhgzmHBgYYgVyFFoMBh0UsiWmDbIQxiC+CDTMaI4MIA?=
 =?us-ascii?q?TMfgggXEoM4hRSFPz8BATEBAQGBAQEBAQ6IGYEfgR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AqAAAQtApch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBgmk?=
 =?us-ascii?q?DfycKjAmMEYFgLRSSQYR6FIFfLA0GAYddIjQJDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2IoJkAQEBAQIBAQIkEUEFAQkBAQoVAy4DVAYNAQUCAQEBE4MJAYF5CAU?=
 =?us-ascii?q?KpmIzhC0BCwGBBoRpBYpggUKBVz+BESeCPS6DBRkDgUABAQaFcwKLJ4RakGYHA?=
 =?us-ascii?q?oIhBIRhgzmHBgYYgVyFFoMBh0UsiWmDbIQxiC+CDTMaI4MIATMfgggXEoM4hRS?=
 =?us-ascii?q?FPz8BATEBAQGBAQEBAQ6IGYEfgR8BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="141233717"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 09:58:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726219AbeLGR57 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 12:57:59 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:37952 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726083AbeLGR57 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 12:57:59 -0500
Received: from DGGEMS407-HUB.china.huawei.com (unknown [172.30.72.59])
        by Forcepoint Email with ESMTP id A5720B7DA52CF;
        Sat,  8 Dec 2018 01:57:56 +0800 (CST)
Received: from [127.0.0.1] (10.202.226.41) by DGGEMS407-HUB.china.huawei.com
 (10.3.19.207) with Microsoft SMTP Server id 14.3.408.0; Sat, 8 Dec 2018
 01:57:48 +0800
Subject: Re: [PATCH v4] iommu/dma: Use NUMA aware memory allocations in
 __iommu_dma_alloc_pages()
To: <joro@8bytes.org>
References: <1543576440-222098-1-git-send-email-john.garry@huawei.com>
CC: <robin.murphy@arm.com>, <will.deacon@arm.com>,
        <linux-kernel@vger.kernel.org>, <iommu@lists.linux-foundation.org>,
        <ganapatrao.kulkarni@cavium.com>, <hch@lst.de>,
        <m.szyprowski@samsung.com>, <linuxarm@huawei.com>
From: John Garry <john.garry@huawei.com>
Message-ID: <df449701-5ecb-26c7-cb17-b3fe03cc29e7@huawei.com>
Date: Fri, 7 Dec 2018 17:57:42 +0000
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:45.0) Gecko/20100101
 Thunderbird/45.3.0
MIME-Version: 1.0
In-Reply-To: <1543576440-222098-1-git-send-email-john.garry@huawei.com>
Content-Type: text/plain; charset="windows-1252"; format=flowed
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.226.41]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 30/11/2018 11:14, John Garry wrote:
> From: Ganapatrao Kulkarni <ganapatrao.kulkarni@cavium.com>
>

Hi Joerg,

A friendly reminder. Can you please let me know your position on this patch?

Cheers,
John

> Change function __iommu_dma_alloc_pages() to allocate pages for DMA from
> respective device NUMA node. The ternary operator which would be for
> alloc_pages_node() is tidied along with this.
>
> The motivation for this change is to have a policy for page allocation
> consistent with direct DMA mapping, which attempts to allocate pages local
> to the device, as mentioned in [1].
>
> In addition, for certain workloads it has been observed a marginal
> performance improvement. The patch caused an observation of 0.9% average
> throughput improvement for running tcrypt with HiSilicon crypto engine.
>
> We also include a modification to use kvzalloc() for kzalloc()/vzalloc()
> combination.
>
> [1] https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg1692998.html
>
> Signed-off-by: Ganapatrao Kulkarni <ganapatrao.kulkarni@cavium.com>
> [JPG: Added kvzalloc(), drop pages ** being device local, remove ternary operator, update message]
> Signed-off-by: John Garry <john.garry@huawei.com>
> ---
> Difference:
> v1->v2:
> - Add Ganapatrao's tag and change author
>
> v2->v3:
> - removed ternary operator
> - stopped making pages ** allocation local to device
>
> v3->v4:
> - Update commit message to include motivation for patch, including
>   headline performance improvement for test.
>
> Some notes:
> This patch was originally posted by Ganapatrao in [2].
>
> However, after initial review, it was never reposted (due to lack of
> cycles, I think). In addition, the functionality in its sibling patches
> were merged through patches, as mentioned in [2]; this also refers to a
> discussion on device local allocations vs CPU local allocations for DMA
> pool, and which is better [1].
>
> However, as mentioned in [1], dma_alloc_coherent() uses the locality
> information from the device - as in direct DMA - so this patch is just
> applying this same policy.
>
> And from some testing, mentioned in commit message, shows marginal
> improvement.
>
> [2] https://lore.kernel.org/patchwork/patch/833004/
> [3] https://lkml.org/lkml/2018/8/22/391
>
> diff --git a/drivers/iommu/dma-iommu.c b/drivers/iommu/dma-iommu.c
> index d1b0475..4afb1a8 100644
> --- a/drivers/iommu/dma-iommu.c
> +++ b/drivers/iommu/dma-iommu.c
> @@ -449,20 +449,17 @@ static void __iommu_dma_free_pages(struct page **pages, int count)
>  	kvfree(pages);
>  }
>
> -static struct page **__iommu_dma_alloc_pages(unsigned int count,
> -		unsigned long order_mask, gfp_t gfp)
> +static struct page **__iommu_dma_alloc_pages(struct device *dev,
> +		unsigned int count, unsigned long order_mask, gfp_t gfp)
>  {
>  	struct page **pages;
> -	unsigned int i = 0, array_size = count * sizeof(*pages);
> +	unsigned int i = 0, nid = dev_to_node(dev);
>
>  	order_mask &= (2U << MAX_ORDER) - 1;
>  	if (!order_mask)
>  		return NULL;
>
> -	if (array_size <= PAGE_SIZE)
> -		pages = kzalloc(array_size, GFP_KERNEL);
> -	else
> -		pages = vzalloc(array_size);
> +	pages = kvzalloc(count * sizeof(*pages), GFP_KERNEL);
>  	if (!pages)
>  		return NULL;
>
> @@ -481,10 +478,12 @@ static struct page **__iommu_dma_alloc_pages(unsigned int count,
>  		for (order_mask &= (2U << __fls(count)) - 1;
>  		     order_mask; order_mask &= ~order_size) {
>  			unsigned int order = __fls(order_mask);
> +			gfp_t alloc_flags = gfp;
>
>  			order_size = 1U << order;
> -			page = alloc_pages((order_mask - order_size) ?
> -					   gfp | __GFP_NORETRY : gfp, order);
> +			if (order_mask > order_size)
> +				alloc_flags |= __GFP_NORETRY;
> +			page = alloc_pages_node(nid, alloc_flags, order);
>  			if (!page)
>  				continue;
>  			if (!order)
> @@ -569,7 +568,8 @@ struct page **iommu_dma_alloc(struct device *dev, size_t size, gfp_t gfp,
>  		alloc_sizes = min_size;
>
>  	count = PAGE_ALIGN(size) >> PAGE_SHIFT;
> -	pages = __iommu_dma_alloc_pages(count, alloc_sizes >> PAGE_SHIFT, gfp);
> +	pages = __iommu_dma_alloc_pages(dev, count, alloc_sizes >> PAGE_SHIFT,
> +					gfp);
>  	if (!pages)
>  		return NULL;
>
>


