Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 14:13:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EAE49580460;
	Thu, 29 Nov 2018 21:14:16 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga002-1.jf.intel.com with ESMTP; 29 Nov 2018 21:14:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AY0zIMxye1SLysqPXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4RKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfVyJPAIyy?=
 =?us-ascii?q?bIUAAOUdMuhXsof9vEMOoBmlCAmwBu3i0CNEimPs0KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?nbss76NKYMXu+o0qbI1zDDYuhZ2Df46YjIaQshofCLXbJ2a8be1U4vFwbYhVmU?=
 =?us-ascii?q?poLlJTKV2fgQuGeb9eZrSP+ii285pA5svDev3MIshZPPho4QzF3P6CZ3wJ4tKN?=
 =?us-ascii?q?GmVEJ2ZcSoHIZeui2ELYd6X8AvT31ytCs7yLAKoZ+2cSsQxJg52RLSaeaLf5WK?=
 =?us-ascii?q?7x/sTuqdPzh1iG5jdbminRi961Kgxff5VsSs0FZFsC5Fkt7Uu3AT2Bzc9NKHRu?=
 =?us-ascii?q?F+/ki/wzaP0R7c6uVeLUAzj6rbJIYtwr82lpUNrUTOBjH6lFnygaOMa0kp9Pak?=
 =?us-ascii?q?5/76brjlupOQLY55hwPmPqQrgMO/AOA4MgYUX2ic/OSxzLnj/Uz/QLVXgfw6i6?=
 =?us-ascii?q?rZv47AJcQduKG5BxZZ0oEt6ha5ETimys8VnWcILF1bYhKLlYvpNE/UIPD+E/i/?=
 =?us-ascii?q?h06gkDBxx/DJJrHhGInCLmDfkLf9erZw80pcyAswzd9B/Z5VBawBLen3Wk/wst?=
 =?us-ascii?q?zYExA4Pxa1w+bhFNVyyIceVXiTDa+eNaPYqUWI6f43I+mQeI8Vvy7wK/g/6P7v?=
 =?us-ascii?q?kX82g1gdcbOp3ZsKcn+4GPtmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2Hp9RZm9YEFyMEnDod4OCW/cLcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mFyW6NVGF0nm?=
 =?us-ascii?q?QLRzMsxqBwu059x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDY0VnFNWklBzD2yuqDKUTl7yEH5E09qPc337sJ8dy0XrG1a?=
 =?us-ascii?q?8hj0U4TctLL2Gpmql/9w3LDY7Tj0qZj7qqdbgb3CPV6WiM13SOs19CXA5wS6rF?=
 =?us-ascii?q?W2sfaVXQrdj+4kPCTLquCbA8PwtFyM6CLLZKa9LzgVVHQvfjJMrRY2arl2isAh?=
 =?us-ascii?q?aIw6uGbJD2dGUFwCXdFE8EnhgO8nmcKwgxGD2to2LEAzxoDlLgfUXs/PJ6qHO6?=
 =?us-ascii?q?SE800g6LY1dg17qz5h4am/icR+kP0bIDvScrsy90E0ql39LKF9qAoBJsfLldYd?=
 =?us-ascii?q?M451dHyWLZtgxnMpy8NaxigUQecwB2v0Po2BV6EYFAkcksrHM3wwt+M6OY0FVd?=
 =?us-ascii?q?dzyG2ZD8IKHYKm73/Bq3ca7Zxkne0MqK+qcI8Pk3sVHjsx+mF0U883RrycJa02?=
 =?us-ascii?q?aB6ZrQCgoSUpXxUlgs+hh+prHaZDQ95ozO2X1tN6m0riHN29YzCOQ5zRages9V?=
 =?us-ascii?q?MLmYGw/qD80aG8+uJfQqmli0dB4LIPpe9a80P8y8cfuG17WmPOJhnDKgkGRG75?=
 =?us-ascii?q?px0kOK9ypgVOHI24wJzO2f3guCTz38lkuustjrmYBYYjEfBnC/ySn4C4FLfK19?=
 =?us-ascii?q?YIELBX2oI8Kp3NV+hofhVGJC+16nGlwJxtWpeR2Ub1Hm2Q1Q1EIXoWGomCeizj?=
 =?us-ascii?q?x0lS0pobSb3CDU3+vicx8HMHZRRGZ+lVfsPZS0j9cCUUmobggljhuk6Vzhx6hG?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D07dSuluo/6nxx5j2KRNm1zo2DaecFzxBff4sLTRfhK0zoCRSl4jyTXB1em?=
 =?us-ascii?q?M9mo+9WUi4nMsuSkW229UZ1TdDHhzZmcuyuj+W1qHRq/kuizm9L9Fgg2yy3719?=
 =?us-ascii?q?hsVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL9dnUNRCQHw97I4Af/3k1jIWmEx4b4VnWb38tgaMO2YmIQ2iIh8c9KDL?=
 =?us-ascii?q?2Y46BDnStwulC4tx7eYeBhnjcBzvsj8Hsag+AKuAU31CmcDK4dHVJEPSPyjRSH?=
 =?us-ascii?q?9M6xrL9YZGu0dbiw1Ux+nc2uDb2YowFcXmr5dYkmHSNq8sp/N1fM2mXp6o74YN?=
 =?us-ascii?q?nQcc4TthqMnhfciOhVLYg9l/sQiiphJGL9pmYly+8ggBxq3JG6upWHKmp38KK4?=
 =?us-ascii?q?BB5YKiP6Z8cJ9j7xiqZem96c35qzEZV5BjULQJzoQOqzHz0IsvTnMxuOHCc4qn?=
 =?us-ascii?q?eGArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph5DAe/Fv4pQVXyu5yKxnzSGTfpBqrajcpTpiQNgFW4xpG50fUN8ye8+1yEz?=
 =?us-ascii?q?tZ/p2nsAyCNGibax5UAmEOX0yOH0rjMaW25dnc7+iYAfKzLvvJYbWTsOxeSu2H?=
 =?us-ascii?q?xZS13ot9+DaMMMqPM2JmD/063EpDQH94F97YmzUJVywYiSbNY9SHqxe7/y19tt?=
 =?us-ascii?q?q//+jzWALz+YuPDKNfMdVx9BC3gqeDNO+QiDx6KTZC0ZMMymHHyKIC3F4JkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdT1?=
 =?us-ascii?q?Phh9qmZdYULGC9Ll/HAEeLOa+CJT3KxcH3fKy9RadRjOVSqx2/pzKbH1X/MTSE?=
 =?us-ascii?q?kjnjTwqvPv1UjCGHIBxev5mwcgpsCWjmVt7pdge3P8N3jTIox705nXfKNW8aMT?=
 =?us-ascii?q?hhfEJBtLyQ7SVEgvphH2xN9GZqLe6BmyyB9enXNo4Wsed3AiRzj+9b4G41y71Q?=
 =?us-ascii?q?7CFFQvx6gCrTrt50rFGgnemC0T5nUBtIqjZWi4OHp0RiOaPF9pZeXXbI5g4C7W?=
 =?us-ascii?q?KVC0dCm9wwI8fpt+h6x8LAkav1Ln8W+sjS8eMVHc7YIoSLPSxyHwDuHWvZBgoI?=
 =?us-ascii?q?QTOxMEnPgk1Gi/CV8DueqZ1y6rX2mZFGdfkTfl04Gv4AD01jXY9RaKxrVy8pxO?=
 =?us-ascii?q?bIxPUD4mCz+VyIHJ1X?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABlxgBch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBZYFWghYng3mId4spgSpjFIENmBgUGBMBh3QiOBIBAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpL4I2JAGCYQEBAQECAQECIBBGBQEJAQEKEgYCAgUTDgICAwwBB?=
 =?us-ascii?q?DUUEwWDHIF6CAWnZoEvijGBC4sMF4F/gRGDEogFglcCiSgxgUCFBZAICZFOkRw?=
 =?us-ascii?q?smCuBXYF2cIM8giQDF448IjGBBQEBjgEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AYAABlxgBch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBZYF?=
 =?us-ascii?q?WghYng3mId4spgSpjFIENmBgUGBMBh3QiOBIBAwEBAQEBAQIBEwEBAQgNCQgpL?=
 =?us-ascii?q?4I2JAGCYQEBAQECAQECIBBGBQEJAQEKEgYCAgUTDgICAwwBBDUUEwWDHIF6CAW?=
 =?us-ascii?q?nZoEvijGBC4sMF4F/gRGDEogFglcCiSgxgUCFBZAICZFOkRwsmCuBXYF2cIM8g?=
 =?us-ascii?q?iQDF448IjGBBQEBjgEBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,297,1539673200"; 
   d="scan'208";a="42200128"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 21:14:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726676AbeK3QWJ convert rfc822-to-8bit (ORCPT
        <rfc822;like.xu@linux.intel.com> + 23 others);
        Fri, 30 Nov 2018 11:22:09 -0500
Received: from out03.mta.xmission.com ([166.70.13.233]:44153 "EHLO
        out03.mta.xmission.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726387AbeK3QWJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 30 Nov 2018 11:22:09 -0500
Received: from in02.mta.xmission.com ([166.70.13.52])
        by out03.mta.xmission.com with esmtps (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
        (Exim 4.87)
        (envelope-from <ebiederm@xmission.com>)
        id 1gSb7q-0008Hq-OC; Thu, 29 Nov 2018 22:14:02 -0700
Received: from ip68-227-174-240.om.om.cox.net ([68.227.174.240] helo=x220.xmission.com)
        by in02.mta.xmission.com with esmtpsa (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128)
        (Exim 4.87)
        (envelope-from <ebiederm@xmission.com>)
        id 1gSb7p-0005dP-Ss; Thu, 29 Nov 2018 22:14:02 -0700
From: ebiederm@xmission.com (Eric W. Biederman)
To: Arnd Bergmann <arnd@arndb.de>
Cc: Andy Lutomirski <luto@amacapital.net>, christian@brauner.io,
        Andy Lutomirski <luto@kernel.org>,
        Florian Weimer <fweimer@redhat.com>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        "Serge E. Hallyn" <serge@hallyn.com>, Jann Horn <jannh@google.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Oleg Nesterov <oleg@redhat.com>, cyphar@cyphar.com,
        Al Viro <viro@zeniv.linux.org.uk>,
        Linux FS-devel Mailing List <linux-fsdevel@vger.kernel.org>,
        Linux API <linux-api@vger.kernel.org>,
        Daniel Colascione <dancol@google.com>,
        Tim Murray <timmurray@google.com>, linux-man@vger.kernel.org,
        Kees Cook <keescook@chromium.org>
References: <20181120105124.14733-1-christian@brauner.io>
        <87in0g5aqo.fsf@oldenburg.str.redhat.com>
        <36323361-90BD-41AF-AB5B-EE0D7BA02C21@amacapital.net>
        <993B98AC-51DF-4131-AF7F-7DA2A7F485F1@brauner.io>
        <CALCETrWnQNMQcCmFZrftVVYgAMW6DT3gyxvVb_v9_enUCUkHiw@mail.gmail.com>
        <20181129195551.woe2bl3z3yaysqb6@brauner.io>
        <6E21165F-2C76-4877-ABD9-0C86D55FD6AA@amacapital.net>
        <CAK8P3a2i9DFaS9-3A9V_pKwFfwVR0bDqgLosmivge3Cx2VyiuQ@mail.gmail.com>
Date: Thu, 29 Nov 2018 23:13:57 -0600
In-Reply-To: <CAK8P3a2i9DFaS9-3A9V_pKwFfwVR0bDqgLosmivge3Cx2VyiuQ@mail.gmail.com>
        (Arnd Bergmann's message of "Thu, 29 Nov 2018 22:02:13 +0100")
Message-ID: <87y39b2lm2.fsf@xmission.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/25.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8BIT
X-XM-SPF: eid=1gSb7p-0005dP-Ss;;;mid=<87y39b2lm2.fsf@xmission.com>;;;hst=in02.mta.xmission.com;;;ip=68.227.174.240;;;frm=ebiederm@xmission.com;;;spf=neutral
X-XM-AID: U2FsdGVkX1+mMyLYLK4Aao5mgpRBDubB9Qyld7uZuk0=
X-SA-Exim-Connect-IP: 68.227.174.240
X-SA-Exim-Mail-From: ebiederm@xmission.com
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on sa06.xmission.com
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=8.0 tests=ALL_TRUSTED,BAYES_50,
        DCC_CHECK_NEGATIVE,T_TM2_M_HEADER_IN_MSG,T_TooManySym_01,
        T_TooManySym_02,T_XMDrugObfuBody_08 autolearn=disabled version=3.4.2
X-Spam-Report: * -1.0 ALL_TRUSTED Passed through trusted hosts only via SMTP
        *  0.8 BAYES_50 BODY: Bayes spam probability is 40 to 60%
        *      [score: 0.5000]
        *  0.0 T_TM2_M_HEADER_IN_MSG BODY: No description available.
        * -0.0 DCC_CHECK_NEGATIVE Not listed in DCC
        *      [sa06 1397; Body=1 Fuz1=1 Fuz2=1]
        *  0.0 T_TooManySym_01 4+ unique symbols in subject
        *  1.0 T_XMDrugObfuBody_08 obfuscated drug references
        *  0.0 T_TooManySym_02 5+ unique symbols in subject
X-Spam-DCC: XMission; sa06 1397; Body=1 Fuz1=1 Fuz2=1 
X-Spam-Combo: ;Arnd Bergmann <arnd@arndb.de>
X-Spam-Relay-Country: 
X-Spam-Timing: total 537 ms - load_scoreonly_sql: 0.05 (0.0%),
        signal_user_changed: 3.0 (0.6%), b_tie_ro: 2.0 (0.4%), parse: 1.05
        (0.2%), extract_message_metadata: 19 (3.5%), get_uri_detail_list: 2.8
        (0.5%), tests_pri_-1000: 30 (5.6%), tests_pri_-950: 1.32 (0.2%),
        tests_pri_-900: 1.16 (0.2%), tests_pri_-90: 32 (6.0%), check_bayes: 31
        (5.7%), b_tokenize: 11 (2.0%), b_tok_get_all: 10 (1.9%), b_comp_prob:
        3.6 (0.7%), b_tok_touch_all: 3.7 (0.7%), b_finish: 0.58 (0.1%),
        tests_pri_0: 437 (81.4%), check_dkim_signature: 0.74 (0.1%),
        check_dkim_adsp: 2.5 (0.5%), poll_dns_idle: 0.51 (0.1%), tests_pri_10:
        2.3 (0.4%), tests_pri_500: 7 (1.2%), rewrite_mail: 0.00 (0.0%)
Subject: Re: [PATCH v2] signal: add procfd_signal() syscall
X-Spam-Flag: No
X-SA-Exim-Version: 4.2.1 (built Thu, 05 May 2016 13:38:54 -0600)
X-SA-Exim-Scanned: Yes (on in02.mta.xmission.com)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Arnd Bergmann <arnd@arndb.de> writes:

> On Thu, Nov 29, 2018 at 9:14 PM Andy Lutomirski <luto@amacapital.net> wrote:
>> > On Nov 29, 2018, at 11:55 AM, Christian Brauner <christian@brauner.io> wrote:
>> >> On Thu, Nov 29, 2018 at 11:22:58AM -0800, Andy Lutomirski wrote:
>> >>> On Thu, Nov 29, 2018 at 11:17 AM Christian Brauner <christian@brauner.io> wrote:
>> >>>> On November 30, 2018 5:54:18 AM GMT+13:00, Andy Lutomirski <luto@amacapital.net> wrote:
>> >>
>> >> The #1 fix would add a copy_siginfo_from_user64() or similar.
>> >
>> > Thanks very much! That all helped a bunch already! I'll try to go the
>> > copy_siginfo_from_user64() way first and see if I can make this work. If
>> > we do this I would however only want to use it for the new syscall first
>> > and not change all other signal syscalls over to it too. I'd rather keep
>> > this patchset focussed and small and do such conversions caused by the
>> > new approach later. Does that sound reasonable?
>>
>> Absolutely. I don’t think we can change old syscalls — the ABI is set in stone.
>> But for new syscalls, I think the always-64-bit behavior makes sense.
>
> It looks like we already have a 'struct signalfd_siginfo' that is defined in a
> sane architecture-independent way, so I'd suggest we use that.

Unfortunately it isn't maintained very well.  What you can
express with signalfd_siginfo is a subset what you can express with
siginfo.  Many of the linux extensions to siginfo for exception
information add pointers and have integers right after those pointers.
Not all of those linux specific extentions for exceptions are handled
by signalfd_siginfo (it needs new fields).

As originally defined siginfo had the sigval_t union at the end so it
was perfectly fine on both 32bit and 64bit as it only had a single
pointer in the structure and the other fields were 32bits in size.

Although I do feel the pain as x86_64 has to deal with 3 versions
of siginfo.  A 64bit one.  A 32bit one for ia32.  A 32bit one for x32
with a 64bit si_clock_t.

> We may then also want to make sure that any system call that takes a
> siginfo has a replacement that takes a signalfd_siginfo, and that this
> replacement can be used to implement the old version purely in
> user space.

If you are not implementing CRIU and reinserting exceptions to yourself.
At most user space wants the ability to implement sigqueue:

AKA:
sigqueue(pid_t pid, int sig, const union sigval value);

Well sigqueue with it's own si_codes so the following would cover all
the use cases I know of:
int sendnewsig(pid_t pid, int sig, int si_code, const union sigval value);

The si_code could even be set to SI_USER to request that the normal
trusted SI_USER values be filled in.  si_code values of < 0 if not
recognized could reasonably safely be treated as the _rt member of
the siginfo union.  Or perhaps better we error out in such a case.

If we want to be flexible and not have N kinds of system calls that
is the direction I would go.  That is simple, and you don't need any of
the rest.


Alternatively we abandon the mistake of sigqueueinfo and not allow
a signal number in the arguments that differs from the si_signo in the
siginfo and allow passing the entire thing unchanged from sender to
receiver.  That is maximum flexibility.

signalfd_siginfo just sucks in practice.  It is larger that siginfo 104
bytes versus 48.  We must deliver it to userspace as a siginfo so it
must be translated.  Because of the translation signalfd_siginfo adds
no flexiblity in practice, because it can not just be passed through.
Finallay signalfd_siginfo does not have encodings for all of the
siginfo union members, so it fails to be fully general.

Personally if I was to define signalfd_siginfo today I would make it:
struct siginfo_subset {
	__u32 sis_signo;
	__s32 sis_errno;
	__s32 sis_code;
        __u32 sis_pad;
	__u32 sis_pid;
	__u32 sis_uid;
	__u64 sis_data (A pointer or integer data field);
};

That is just 32bytes, and is all that is needed for everything
except for synchronous exceptions.  Oh and that happens to be a proper
subset of a any sane siginfo layout, on both 32bit and 64bit.

This is one of those rare times where POSIX is sane and what linux
has implemented is not.

Eric
