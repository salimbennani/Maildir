Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  16 Dec 2018 10:42:19 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 930BB5807A3
	for <like.xu@linux.intel.com>; Sat, 15 Dec 2018 07:23:24 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 15 Dec 2018 07:23:24 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AG3cZYxLwj3Y01gi3tdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXK/77rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvdxeb7Tfc4BRWpZQMleSzBBDI27?=
 =?us-ascii?q?b4sKFeUBPOBYpJT5q1YBqRayAA+hD/7txDBVnH/7xaM03eQ/Hw/F0gwvEM4Bv2?=
 =?us-ascii?q?nWo9r7KakSSeK4wqvHwDneYf5axSny6JPTfxA9vf2BR658fdbLxEUxEQ7Ok1We?=
 =?us-ascii?q?qZbiPzOQzukBvXSV7+t8WuKvkWEnsRx+qSWvycs2jYfFnJ8exFTD9SV/3ok1Pt?=
 =?us-ascii?q?O0Q1N8bN6+EptQsCeaOJVtQs45WWFnpjs1yr0ctp6nZiQF1JMnxxvGZvGBboOG?=
 =?us-ascii?q?7BXjVOOLLjd5gnJoYKi/iAiv/kig0OL8StO430pNripAitXMsnEN2Afc6siaVP?=
 =?us-ascii?q?R95Vuh2TiU1wzJ7eFEO080mbLVKp4m2L4/i4ITsV7dES/tg0X6lrOZdkIh+uWu?=
 =?us-ascii?q?9u/pYa3mq4eCO4NoiQzyKLkiltG8DOgiLAQDUWiW9f6h2LDh5UH1XqlGg/ksnq?=
 =?us-ascii?q?XEvp3WO94XqrO6DgJbyIov9RWyAjG729oCh3YHNkhKeBefgojpJV7OJPf4AO+7?=
 =?us-ascii?q?g1Stizdr2+vGMqfuApXLM3jPirDhfaxy60JEyQozy85Q545MB70fPP7+WVX9uM?=
 =?us-ascii?q?HFAhI6KQC43ejqBdVn2o8DW2+DGqqZP7nTsV+M6OIvOe6MZIoNtTbkNfcl4uPu?=
 =?us-ascii?q?gWYkllADY6mmw58XZGmjEfRhPkWZZ2bjjckaEWsNugo+Te/qh0OYXT9cena/R6?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEXrzcYWEXPEMaC2UIs98iDAE?=
 =?us-ascii?q?UqKhS4A52RG0qAD606ZnLvbT+iAAsZLj1dt16PPJmRA96Dx5FMCd02CLT2FpkW?=
 =?us-ascii?q?IEXT423KZjoUNjzlePy7R3g/tdFY8b2vVSTw1vNYLA1/coTJf2WxndZZGPT1Cp?=
 =?us-ascii?q?RMjgBis+Cdc4wtsLakA6HM2+jxfFxG2zDroI0rCGGpEwoZ/axGX7csN0ynLa0/?=
 =?us-ascii?q?s4glw7B8dCK2Ciw7Ry7hXeHJLhlUKfmKC3M6MG03nW6W2BwGGS6VxeSxN6Sq7f?=
 =?us-ascii?q?XHoSNXfR+Pnj50iKZbunCrlvZgZLzceBJ4NQZ9HphEkAT/DmbofweWW0zi2KBB?=
 =?us-ascii?q?2Iz6mAJLWsXiNV/iLbBVNO21QJ/3GAOBMWHCqto2vCSjdpEAS8MAvX7eBipSbj?=
 =?us-ascii?q?HQcPxAaQYhgkiuO4?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAAB4GxVchxHrdtBkFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVQCAQEBAQsBAYEvKoEPgRYTjHSLGYINkluGcBQYCwmHRyI3Bg0?=
 =?us-ascii?q?BAwEBAQEBAQIBEwEBAQoLCQgbDiMMQgEOAYFkBQIDGgeCXAECAwECJBMMCikDA?=
 =?us-ascii?q?wECBgEBCg4KCR0IAwELBUkTBYMdAYIAAQQKpXIzhUCEbYw+EQaBQD+EI4IQgQ4?=
 =?us-ascii?q?DgUqFdQKJQoYLhjuLEQcCAocLikILGIFdTYdJN4coLIESgkiKLIJ3iDuBXIF4c?=
 =?us-ascii?q?BU7gmwJgh4XEm0BCYJBhRSFP0ExAYEGHIE1iUmBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AWAAB4GxVchxHrdtBkFgQBAQEBAQIBAQEBBwIBAQEBgVQ?=
 =?us-ascii?q?CAQEBAQsBAYEvKoEPgRYTjHSLGYINkluGcBQYCwmHRyI3Bg0BAwEBAQEBAQIBE?=
 =?us-ascii?q?wEBAQoLCQgbDiMMQgEOAYFkBQIDGgeCXAECAwECJBMMCikDAwECBgEBCg4KCR0?=
 =?us-ascii?q?IAwELBUkTBYMdAYIAAQQKpXIzhUCEbYw+EQaBQD+EI4IQgQ4DgUqFdQKJQoYLh?=
 =?us-ascii?q?juLEQcCAocLikILGIFdTYdJN4coLIESgkiKLIJ3iDuBXIF4cBU7gmwJgh4XEm0?=
 =?us-ascii?q?BCYJBhRSFP0ExAYEGHIE1iUmBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,357,1539673200"; 
   d="scan'208";a="142262125"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 15 Dec 2018 07:23:23 -0800
Received: from localhost ([::1]:39431 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYBmk-0000zA-Dp
	for like.xu@linux.intel.com; Sat, 15 Dec 2018 10:23:22 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:54099)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <rjones@redhat.com>) id 1gYBmP-0000xI-6Z
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 10:23:02 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <rjones@redhat.com>) id 1gYBmO-0005oy-1s
	for qemu-devel@nongnu.org; Sat, 15 Dec 2018 10:23:01 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34220)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <rjones@redhat.com>)
	id 1gYBmH-0005jR-OS; Sat, 15 Dec 2018 10:22:53 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0C7712D7E3;
	Sat, 15 Dec 2018 15:22:53 +0000 (UTC)
Received: from localhost (ovpn-116-21.ams2.redhat.com [10.36.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 9A6D75D70A;
	Sat, 15 Dec 2018 15:22:50 +0000 (UTC)
Date: Sat, 15 Dec 2018 15:22:49 +0000
From: "Richard W.M. Jones" <rjones@redhat.com>
To: Eric Blake <eblake@redhat.com>
Message-ID: <20181215152249.GZ27120@redhat.com>
References: <20181215135324.152629-1-eblake@redhat.com>
	<20181215135324.152629-14-eblake@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181215135324.152629-14-eblake@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Sat, 15 Dec 2018 15:22:53 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v2 13/22] nbd/client: Split out
 nbd_send_one_meta_context()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: nsoffer@redhat.com, vsementsov@virtuozzo.com, jsnow@redhat.com,
	qemu-devel@nongnu.org, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Sat, Dec 15, 2018 at 07:53:15AM -0600, Eric Blake wrote:
> Refactor nbd_negotiate_simple_meta_context() to pull out the
> code that can be reused to send a LIST request for 0 or 1 query.
> No semantic change.
> 
> Signed-off-by: Eric Blake <eblake@redhat.com>
> 
> ---
> v2: split patch into easier-to-review pieces [Rich, Vladimir]
> ---
>  nbd/client.c     | 64 ++++++++++++++++++++++++++++++++++--------------
>  nbd/trace-events |  2 +-
>  2 files changed, 46 insertions(+), 20 deletions(-)
> 
> diff --git a/nbd/client.c b/nbd/client.c
> index b6a85fc3ef8..5b6b9964097 100644
> --- a/nbd/client.c
> +++ b/nbd/client.c
> @@ -627,6 +627,48 @@ static QIOChannel *nbd_receive_starttls(QIOChannel *ioc,
>      return QIO_CHANNEL(tioc);
>  }
> 
> +/* nbd_send_one_meta_context:
> + * Send 0 or 1 set/list meta context queries.
> + * return 0 on success, -1 with errp set for any error
> + */
> +static int nbd_send_one_meta_context(QIOChannel *ioc,
> +                                     uint32_t opt,
> +                                     const char *export,
> +                                     const char *query,
> +                                     Error **errp)
> +{
> +    int ret;
> +    uint32_t export_len = strlen(export);
> +    uint32_t queries = !!query;
> +    uint32_t context_len = 0;
> +    uint32_t data_len;
> +    char *data;
> +    char *p;
> +
> +    data_len = sizeof(export_len) + export_len + sizeof(queries);
> +    if (query) {
> +        context_len = strlen(query);
> +        data_len += sizeof(context_len) + context_len;
> +    } else {
> +        assert(opt == NBD_OPT_LIST_META_CONTEXT);
> +    }
> +    data = g_malloc(data_len);
> +    p = data;
> +
> +    trace_nbd_opt_meta_request(nbd_opt_lookup(opt), query ?: "(all)", export);
> +    stl_be_p(p, export_len);
> +    memcpy(p += sizeof(export_len), export, export_len);
> +    stl_be_p(p += export_len, queries);
> +    if (query) {
> +        stl_be_p(p += sizeof(uint32_t), context_len);
> +        memcpy(p += sizeof(context_len), query, context_len);
> +    }
> +
> +    ret = nbd_send_option_request(ioc, opt, data_len, data, errp);
> +    g_free(data);
> +    return ret;
> +}
> +
>  /* nbd_negotiate_simple_meta_context:
>   * Request the server to set the meta context for export @info->name
>   * using @info->x_dirty_bitmap with a fallback to "base:allocation",
> @@ -651,26 +693,10 @@ static int nbd_negotiate_simple_meta_context(QIOChannel *ioc,
>      NBDOptionReply reply;
>      const char *context = info->x_dirty_bitmap ?: "base:allocation";
>      bool received = false;
> -    uint32_t export_len = strlen(info->name);
> -    uint32_t context_len = strlen(context);
> -    uint32_t data_len = sizeof(export_len) + export_len +
> -                        sizeof(uint32_t) + /* number of queries */
> -                        sizeof(context_len) + context_len;
> -    char *data = g_malloc(data_len);
> -    char *p = data;
> 
> -    trace_nbd_opt_meta_request(context, info->name);
> -    stl_be_p(p, export_len);
> -    memcpy(p += sizeof(export_len), info->name, export_len);
> -    stl_be_p(p += export_len, 1);
> -    stl_be_p(p += sizeof(uint32_t), context_len);
> -    memcpy(p += sizeof(context_len), context, context_len);
> -
> -    ret = nbd_send_option_request(ioc, NBD_OPT_SET_META_CONTEXT, data_len, data,
> -                                  errp);
> -    g_free(data);
> -    if (ret < 0) {
> -        return ret;
> +    if (nbd_send_one_meta_context(ioc, NBD_OPT_SET_META_CONTEXT,
> +                                  info->name, context, errp) < 0) {
> +        return -1;
>      }
> 
>      if (nbd_receive_option_reply(ioc, NBD_OPT_SET_META_CONTEXT, &reply,
> diff --git a/nbd/trace-events b/nbd/trace-events
> index 446d10b8603..00872a6f9d4 100644
> --- a/nbd/trace-events
> +++ b/nbd/trace-events
> @@ -11,7 +11,7 @@ nbd_receive_query_exports_start(const char *wantname) "Querying export list for
>  nbd_receive_query_exports_success(const char *wantname) "Found desired export name '%s'"
>  nbd_receive_starttls_new_client(void) "Setting up TLS"
>  nbd_receive_starttls_tls_handshake(void) "Starting TLS handshake"
> -nbd_opt_meta_request(const char *context, const char *export) "Requesting to set meta context %s for export %s"
> +nbd_opt_meta_request(const char *optname, const char *context, const char *export) "Requesting %s %s for export %s"
>  nbd_opt_meta_reply(const char *context, uint32_t id) "Received mapping of context %s to id %" PRIu32
>  nbd_receive_negotiate(void *tlscreds, const char *hostname) "Receiving negotiation tlscreds=%p hostname=%s"
>  nbd_receive_negotiate_magic(uint64_t magic) "Magic is 0x%" PRIx64

Although a straightforward refactoring, we still lost the comment
/* number of queries */.  I'd still perhaps like to see a bit more
explanation of the layout and reasoning behind the data buffer.
But anyway ..

Reviewed-by: Richard W.M. Jones <rjones@redhat.com>

Rich.

-- 
Richard Jones, Virtualization Group, Red Hat http://people.redhat.com/~rjones
Read my programming and virtualization blog: http://rwmj.wordpress.com
virt-builder quickly builds VMs from scratch
http://libguestfs.org/virt-builder.1.html

