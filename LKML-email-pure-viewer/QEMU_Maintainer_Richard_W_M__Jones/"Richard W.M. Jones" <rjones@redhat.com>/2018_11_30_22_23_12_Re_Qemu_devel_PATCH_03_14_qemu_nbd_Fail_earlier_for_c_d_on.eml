Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:23:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 66B2A580442
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 14:23:38 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 14:23:37 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AGcJ0LBLKZxkjH4a/1NmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXK/77rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvdxeb7Tfc4BRWpZQMleSzBBDI27?=
 =?us-ascii?q?b4sKFeUBPOBYpJT5q1YBqRayAA+hD/7txDBVnH/7xaM03eQ/Hw/F0gwvEM4Bv2?=
 =?us-ascii?q?nWo9r7KakSSeK4wqvHwDneYf5axSny6JPTfxA9vf2BR658fdbLxEUxEQ7Ok1We?=
 =?us-ascii?q?qZbiPzOQzukBvXSV7+t8WuKvkWEnsRx+qSWvycs2jYfFnJ8exFTD9SV/3ok1Pt?=
 =?us-ascii?q?O0Q1N8bN6+EptQsCeaOJVtQs45WWFnpjs1yr0ctp6nZiQF1JMnxxvGZvGBboOG?=
 =?us-ascii?q?7BXjVOOLLjd5gnJoYKi/iAiv/kig0OL8StO430pNripAitXMsnEN2Afc6siaVP?=
 =?us-ascii?q?R95Vuh2TiU1wzJ7eFEO080mbLVKp4m2L4/i4ITsV7dES/tg0X6lrOZdkIh+uWu?=
 =?us-ascii?q?9u/pYa3mq4eCO4NoiQzyKLkiltG8DOgiLAQDUWiW9f6h2LDh5UH1XqlGg/ksnq?=
 =?us-ascii?q?XEvp3WO94XqrO6DgJbyIov9RWyAjG729oCh3YHNkhKeBefgojpJV7OJPf4AO+7?=
 =?us-ascii?q?g1Stizdr2+vGMqfuApXLM3jPirDhfaxy60JEyQozy85Q545MB70fPP7+WVX9uM?=
 =?us-ascii?q?HFAhI6KQC43ejqBdVn2o8DW2+DGqqZP7nTsV+M6OIvOe6MZIoNtTbkNfcl4uPu?=
 =?us-ascii?q?gWYkllADY6mmw58XZGmjEfRhPkWZZ2bjjckaEWsNugo+Te/qh0OYXT9cena/R6?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEXrzcYWEXPEMaC2UIs98iDAE?=
 =?us-ascii?q?UqKhS4A52RG0qAD606ZnLvbT+iAAsZLj1dt16PPJmRA96Dx5FMCd02CLT2FpkW?=
 =?us-ascii?q?IEXT423KZjoUNjzlePy7R3g/tdFY8b2vVSTw1vNYLA1/coTJf2WxndZZGPT1Cp?=
 =?us-ascii?q?RMjgBis+Cdc4wtsLakA6HM2+jxfFxG2zDroI0rCGGpEwoZ/axGX7csN0ynLa0/?=
 =?us-ascii?q?s4glw7B8dCK2Ciw7Ry7hXeHJLhlUKfmKC3M6MG03nW6W2BwGGS6VxeSxN6Sq7f?=
 =?us-ascii?q?XHoSNXfR+Pnj50iKZbunCrlvZgZLzceBJ4NQZ9HphEkAT/DmbofweWW0zi2KBB?=
 =?us-ascii?q?2Iz6mAJLWsXiNV/iLbBVNO21QJ/3GAOBMWHCqto2vCSjdpEAS8MAvX7eBipSbj?=
 =?us-ascii?q?HQcPxAaQYhgkiuO4?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CUAACAtwFchxHrdtBjFgUBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgWWBMYE5gRYTjHCNOZk7FBgHDYd2IjgSAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4jDII2BQIDGgeCXAECAwECNwwKKQMDAQIGAQEKDgoJHQgDAQsFSRMFgxwBg?=
 =?us-ascii?q?gEBBKg2hUCEbYwaEQaBQD+BEYMSghCCW4NLgiYCiSMKhX2BTIRiil0HAgKGfYo?=
 =?us-ascii?q?tCxiBW02HMTaHEI1fglWIKYFdgXZwFYMnCYIeF4NKhRSFP0ExgQcciy2BdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CUAACAtwFchxHrdtBjFgUBAQEBAwEBAQcDAQEBgWWBMYE?=
 =?us-ascii?q?5gRYTjHCNOZk7FBgHDYd2IjgSAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDG?=
 =?us-ascii?q?geCXAECAwECNwwKKQMDAQIGAQEKDgoJHQgDAQsFSRMFgxwBggEBBKg2hUCEbYw?=
 =?us-ascii?q?aEQaBQD+BEYMSghCCW4NLgiYCiSMKhX2BTIRiil0HAgKGfYotCxiBW02HMTaHE?=
 =?us-ascii?q?I1fglWIKYFdgXZwFYMnCYIeF4NKhRSFP0ExgQcciy2BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,300,1539673200"; 
   d="scan'208";a="54468380"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 14:23:37 -0800
Received: from localhost ([::1]:34930 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSrCC-0006J0-HB
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 17:23:36 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34412)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <rjones@redhat.com>) id 1gSrC0-0006Dt-EE
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 17:23:25 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <rjones@redhat.com>) id 1gSrBz-0001uy-8L
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 17:23:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:56948)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <rjones@redhat.com>)
	id 1gSrBs-0001UU-Nu; Fri, 30 Nov 2018 17:23:17 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id ED83C307EAA6;
	Fri, 30 Nov 2018 22:23:15 +0000 (UTC)
Received: from localhost (ovpn-116-21.ams2.redhat.com [10.36.116.21])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 8E9FC67644;
	Fri, 30 Nov 2018 22:23:13 +0000 (UTC)
Date: Fri, 30 Nov 2018 22:23:12 +0000
From: "Richard W.M. Jones" <rjones@redhat.com>
To: Eric Blake <eblake@redhat.com>
Message-ID: <20181130222312.GA27120@redhat.com>
References: <20181130220344.3350618-1-eblake@redhat.com>
	<20181130220344.3350618-4-eblake@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181130220344.3350618-4-eblake@redhat.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.44]);
	Fri, 30 Nov 2018 22:23:16 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 03/14] qemu-nbd: Fail earlier for -c/-d on
 non-linux
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: nsoffer@redhat.com, vsementsov@virtuozzo.com, jsnow@redhat.com,
	qemu-devel@nongnu.org, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, Nov 30, 2018 at 04:03:32PM -0600, Eric Blake wrote:
> Connecting to a /dev/nbdN device is a Linux-specific action.
> We were already masking -c and -d from 'qemu-nbd --help' on
> non-linux.  However, while -d fails with a sensible error
> message, it took hunting through a couple of files to prove
> that.  What's more, the code for -c doesn't fail until after
> it has created a pthread and tried to open a device - possibly
> even printing an error message with %m on a non-Linux platform
> in spite of the comment that %m is glibc-specific.  Make the
> failure happen sooner, then get rid of stubs that are no
> longer needed because of the early exits.
> 
> While at it: tweak the blank newlines in --help output to be
> consistent, whether or not built on Linux.
> 
> Signed-off-by: Eric Blake <eblake@redhat.com>
> ---
>  nbd/client.c | 18 +-----------------
>  qemu-nbd.c   | 22 ++++++++++++++++++++--
>  2 files changed, 21 insertions(+), 19 deletions(-)
> 
> diff --git a/nbd/client.c b/nbd/client.c
> index b667a1b56fd..0be89f9e641 100644
> --- a/nbd/client.c
> +++ b/nbd/client.c
> @@ -1029,23 +1029,7 @@ int nbd_disconnect(int fd)
>      return 0;
>  }
> 
> -#else
> -int nbd_init(int fd, QIOChannelSocket *ioc, NBDExportInfo *info,
> -	     Error **errp)
> -{
> -    error_setg(errp, "nbd_init is only supported on Linux");
> -    return -ENOTSUP;
> -}
> -
> -int nbd_client(int fd)
> -{
> -    return -ENOTSUP;
> -}
> -int nbd_disconnect(int fd)
> -{
> -    return -ENOTSUP;
> -}
> -#endif
> +#endif /* __linux__ */
> 
>  int nbd_send_request(QIOChannel *ioc, NBDRequest *request)
>  {
> diff --git a/qemu-nbd.c b/qemu-nbd.c
> index e169b839ece..55e29bd9a7e 100644
> --- a/qemu-nbd.c
> +++ b/qemu-nbd.c
> @@ -43,6 +43,12 @@
>  #include "trace/control.h"
>  #include "qemu-version.h"
> 
> +#ifdef __linux__
> +#define HAVE_NBD_DEVICE 1
> +#else
> +#define HAVE_NBD_DEVICE 0
> +#endif
> +
>  #define SOCKET_PATH                "/var/lock/qemu-nbd-%s"
>  #define QEMU_NBD_OPT_CACHE         256
>  #define QEMU_NBD_OPT_AIO           257
> @@ -98,11 +104,11 @@ static void usage(const char *name)
>  "                            specify tracing options\n"
>  "  --fork                    fork off the server process and exit the parent\n"
>  "                            once the server is running\n"
> -#ifdef __linux__
> +#if HAVE_NBD_DEVICE
> +"\n"
>  "Kernel NBD client support:\n"
>  "  -c, --connect=DEV         connect FILE to the local NBD device DEV\n"
>  "  -d, --disconnect          disconnect the specified device\n"
> -"\n"
>  #endif
>  "\n"
>  "Block device options:\n"
> @@ -236,6 +242,7 @@ static void termsig_handler(int signum)
>  }
> 
> 
> +#if HAVE_NBD_DEVICE
>  static void *show_parts(void *arg)
>  {
>      char *device = arg;
> @@ -321,6 +328,7 @@ out:
>      kill(getpid(), SIGTERM);
>      return (void *) EXIT_FAILURE;
>  }
> +#endif /* HAVE_NBD_DEVICE */
> 
>  static int nbd_can_accept(void)
>  {
> @@ -815,6 +823,7 @@ int main(int argc, char **argv)
>      }
> 
>      if (disconnect) {
> +#if HAVE_NBD_DEVICE
>          int nbdfd = open(argv[optind], O_RDWR);
>          if (nbdfd < 0) {
>              error_report("Cannot open %s: %s", argv[optind],
> @@ -828,6 +837,10 @@ int main(int argc, char **argv)
>          printf("%s disconnected\n", argv[optind]);
> 
>          return 0;
> +#else
> +        error_report("Kernel /dev/nbdN support not available");
> +        exit(EXIT_FAILURE);
> +#endif
>      }
> 
>      if ((device && !verbose) || fork_process) {
> @@ -1006,6 +1019,7 @@ int main(int argc, char **argv)
>      nbd_export_set_description(exp, export_description);
> 
>      if (device) {
> +#if HAVE_NBD_DEVICE
>          int ret;
> 
>          ret = pthread_create(&client_thread, NULL, nbd_client_thread, device);
> @@ -1013,6 +1027,10 @@ int main(int argc, char **argv)
>              error_report("Failed to create client thread: %s", strerror(ret));
>              exit(EXIT_FAILURE);
>          }
> +#else
> +        error_report("Kernel /dev/nbdN support not available");
> +        exit(EXIT_FAILURE);
> +#endif
>      } else {
>          /* Shut up GCC warnings.  */
>          memset(&client_thread, 0, sizeof(client_thread));

Looks like a sensible code refactoring/simplification to me, so:

Reviewed-by: Richard W.M. Jones <rjones@redhat.com>

Rich.

-- 
Richard Jones, Virtualization Group, Red Hat http://people.redhat.com/~rjones
Read my programming and virtualization blog: http://rwmj.wordpress.com
virt-p2v converts physical machines to virtual machines.  Boot with a
live CD or over the network (PXE) and turn machines into KVM guests.
http://libguestfs.org/virt-v2v

