Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:54:23 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B32A55805C0
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 07:54:17 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 07:54:17 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AogeHyB2atGgMgCvrsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMTI/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfWSJCAIy8?=
 =?us-ascii?q?YYQAAPYOM+hFt4nwpVkAoBSjCQSiGO/g1CRIi2Tq3a0jyektDR3K0BAiEt8IrX?=
 =?us-ascii?q?/arM/1NKAXUe2t1qfH1zLDb/dR2Tzg9YXIdRYhoPCNXbJ2cMra1E4iFxvegVWX?=
 =?us-ascii?q?r4zkPjKV1uIMs2WA9epvS/+gi249pAFtuDSg2sAsiozQi48T11vK9j15zZ4rKd?=
 =?us-ascii?q?GkS0N3e8OoHIZTui2AKYd7TMMvT3t1tCs40rEKp4K3cSwQxJg6yRPTdeaLf5WL?=
 =?us-ascii?q?7x/tTuqdPzR1iXR4c7ylnRmy61KvyujkW8m0zllKqi1Fn8HItnAMzBzT9tOHRu?=
 =?us-ascii?q?Fy/kenxDaDzQfT6vtLIUwslKrbLYAuwqIom5YNrUjOHTX6lFjrgKKVbEko5Oal?=
 =?us-ascii?q?5uT9brn7pJKQL4p0hRv/MqQqlMy/G+M4Mg0WUmiC5+u80aDj8VTkT7pUkP05jK?=
 =?us-ascii?q?3ZvInBKsQcu665BRNa3Zg46xq4Czem0dcYkmcdIFNKZRKKl4zpO1DIIPDlAvaz?=
 =?us-ascii?q?mVWskDF3x//YOr3tGInCLn/GkLr6e7Z97EhcyAU1zdBC/Z5UDasBIP3rVk/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/DNV914AeVnyVDq6WLaPfqluI5uMpI+mRa44Zojf9K/455/Hw?=
 =?us-ascii?q?iX81g0MSfa6s3chfVXajA/4zI1mFeWG+xZAFEHwWpUw4S+rljkDEViRcIHO7Xq?=
 =?us-ascii?q?Y57zd8D5q6DIDFXce0jbmcmSu2AJBSNV1AEU2GRHLhdoGYXKUVZSePZ8NsjDEA?=
 =?us-ascii?q?EKKsUpIszg2Gsgj8xLx6aO3O9XoDqJjh2dNpsvDVjgw47jduDs6QgF2KGnh5m3?=
 =?us-ascii?q?5NSzIo0aRXp0t7xVGel69ijK92D9tWsstAVQM9fbTbyf57DdG6DhrLedGbSVCn?=
 =?us-ascii?q?as+rDTE4UpQ6xNpYMBU1IMmrkh2Wh3niOLQSjbHeQcVsqq8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BEAAB2UQVchxHrdtBiHQEBBQEHBQGBU?=
 =?us-ascii?q?wYBCwGBMIJig3mId4srmVWBcxQYFIgJIjYHDQEDAQEBAQEBAgETAQEBCgsJCBs?=
 =?us-ascii?q?OL4I2BQIDGgEGglwDAwECIAQfCikDAwECBgEBJAIiBAICAwFTGQWDHIICAQSlU?=
 =?us-ascii?q?XwzhUCEX4ELixEXgUA/gRGEXYMggxqCVwKJMJcQCZE8AhaJW4dLLJhBgU0MgXo?=
 =?us-ascii?q?zGggbFYMngicXjh5AMYEHHIhEgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BEAAB2UQVchxHrdtBiHQEBBQEHBQGBUwYBCwGBMIJig3m?=
 =?us-ascii?q?Id4srmVWBcxQYFIgJIjYHDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGgEGg?=
 =?us-ascii?q?lwDAwECIAQfCikDAwECBgEBJAIiBAICAwFTGQWDHIICAQSlUXwzhUCEX4ELixE?=
 =?us-ascii?q?XgUA/gRGEXYMggxqCVwKJMJcQCZE8AhaJW4dLLJhBgU0MgXozGggbFYMngicXj?=
 =?us-ascii?q?h5AMYEHHIhEgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="43290688"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 07:54:07 -0800
Received: from localhost ([::1]:50275 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTqXu-0005dz-PL
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 10:54:06 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51601)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <pbonzini@redhat.com>) id 1gTqEH-00080c-7o
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 10:33:52 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <pbonzini@redhat.com>) id 1gTqEG-0004Ay-Ci
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 10:33:49 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60148)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <pbonzini@redhat.com>) id 1gTqEG-0004AE-54
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 10:33:48 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 7CB403091793;
	Mon,  3 Dec 2018 15:33:47 +0000 (UTC)
Received: from 640k.localdomain.com (ovpn-112-19.ams2.redhat.com
	[10.36.112.19])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 4A53618A47;
	Mon,  3 Dec 2018 15:33:46 +0000 (UTC)
From: Paolo Bonzini <pbonzini@redhat.com>
To: qemu-devel@nongnu.org
Date: Mon,  3 Dec 2018 16:32:24 +0100
Message-Id: <1543851204-41186-12-git-send-email-pbonzini@redhat.com>
In-Reply-To: <1543851204-41186-1-git-send-email-pbonzini@redhat.com>
References: <1543851204-41186-1-git-send-email-pbonzini@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.41]);
	Mon, 03 Dec 2018 15:33:47 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH 11/71] vhost-user-test: reduce usage of
 global_qtest
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Thomas Huth <thuth@redhat.com>,
	Emanuele Giuseppe Esposito <e.emanuelegiuseppe@gmail.com>,
	Laurent Vivier <laurent@vivier.eu>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Whenever the code can run on multiple QTestStates, use them explicitly in=
stead of
global_qtest.

Reviewed-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
 tests/vhost-user-test.c | 38 +++++++++++++++++---------------------
 1 file changed, 17 insertions(+), 21 deletions(-)

diff --git a/tests/vhost-user-test.c b/tests/vhost-user-test.c
index 59e1aec..c3a8af3 100644
--- a/tests/vhost-user-test.c
+++ b/tests/vhost-user-test.c
@@ -187,12 +187,12 @@ static char *get_qemu_cmd(TestServer *s,
     }
 }
=20
-static void init_virtio_dev(TestServer *s, uint32_t features_mask)
+static void init_virtio_dev(QTestState *qts, TestServer *s, uint32_t fea=
tures_mask)
 {
     uint32_t features;
     int i;
=20
-    s->bus =3D qpci_init_pc(global_qtest, NULL);
+    s->bus =3D qpci_init_pc(qts, NULL);
     g_assert_nonnull(s->bus);
=20
     s->dev =3D qvirtio_pci_device_find(s->bus, VIRTIO_ID_NET);
@@ -203,7 +203,7 @@ static void init_virtio_dev(TestServer *s, uint32_t f=
eatures_mask)
     qvirtio_set_acknowledge(&s->dev->vdev);
     qvirtio_set_driver(&s->dev->vdev);
=20
-    s->alloc =3D pc_alloc_init(global_qtest);
+    s->alloc =3D pc_alloc_init(qts);
=20
     for (i =3D 0; i < s->queues * 2; i++) {
         s->vq[i] =3D qvirtqueue_setup(&s->dev->vdev, s->alloc, i);
@@ -265,7 +265,7 @@ static bool wait_for_fds(TestServer *s)
     return got_region;
 }
=20
-static void read_guest_mem_server(TestServer *s)
+static void read_guest_mem_server(QTestState *qts, TestServer *s)
 {
     uint8_t *guest_mem;
     int i, j;
@@ -293,7 +293,7 @@ static void read_guest_mem_server(TestServer *s)
         guest_mem +=3D (s->memory.regions[i].mmap_offset / sizeof(*guest=
_mem));
=20
         for (j =3D 0; j < 1024; j++) {
-            uint32_t a =3D readb(s->memory.regions[i].guest_phys_addr + =
j);
+            uint32_t a =3D qtest_readb(qts, s->memory.regions[i].guest_p=
hys_addr + j);
             uint32_t b =3D guest_mem[j];
=20
             g_assert_cmpint(a, =3D=3D, b);
@@ -670,13 +670,13 @@ static void test_read_guest_mem(const void *arg)
     s =3D qtest_start(qemu_cmd);
     g_free(qemu_cmd);
=20
-    init_virtio_dev(server, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, server, 1u << VIRTIO_NET_F_MAC);
=20
     if (!wait_for_fds(server)) {
         goto exit;
     }
=20
-    read_guest_mem_server(server);
+    read_guest_mem_server(global_qtest, server);
=20
 exit:
     uninit_virtio_dev(server);
@@ -690,7 +690,7 @@ static void test_migrate(void)
     TestServer *s =3D test_server_new("src");
     TestServer *dest =3D test_server_new("dest");
     char *uri =3D g_strdup_printf("%s%s", "unix:", dest->mig_path);
-    QTestState *global =3D global_qtest, *from, *to;
+    QTestState *from, *to;
     GSource *source;
     gchar *cmd, *tmp;
     QDict *rsp;
@@ -704,7 +704,7 @@ static void test_migrate(void)
     from =3D qtest_start(cmd);
     g_free(cmd);
=20
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(from, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -717,7 +717,7 @@ static void test_migrate(void)
     g_free(tmp);
     to =3D qtest_init(cmd);
     g_free(cmd);
-    init_virtio_dev(dest, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(to, dest, 1u << VIRTIO_NET_F_MAC);
=20
     source =3D g_source_new(&test_migrate_source_funcs,
                           sizeof(TestMigrateSource));
@@ -753,12 +753,10 @@ static void test_migrate(void)
     qobject_unref(rsp);
=20
     qmp_eventwait("STOP");
+    qtest_qmp_eventwait(to, "RESUME");
=20
-    global_qtest =3D to;
-    qmp_eventwait("RESUME");
-
-    g_assert(wait_for_fds(s));
-    read_guest_mem_server(dest);
+    g_assert(wait_for_fds(dest));
+    read_guest_mem_server(to, dest);
=20
     uninit_virtio_dev(dest);
     qtest_quit(to);
@@ -773,8 +771,6 @@ exit:
     qtest_quit(from);
     test_server_free(s);
     g_free(uri);
-
-    global_qtest =3D global;
 }
=20
 static void wait_for_rings_started(TestServer *s, size_t count)
@@ -831,7 +827,7 @@ static void test_reconnect_subprocess(void)
     qtest_start(cmd);
     g_free(cmd);
=20
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -873,7 +869,7 @@ static void test_connect_fail_subprocess(void)
     qtest_start(cmd);
     g_free(cmd);
=20
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -906,7 +902,7 @@ static void test_flags_mismatch_subprocess(void)
     qtest_start(cmd);
     g_free(cmd);
=20
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -957,7 +953,7 @@ static void test_multiqueue(void)
     qtest_start(cmd);
     g_free(cmd);
=20
-    init_virtio_dev(s, features_mask);
+    init_virtio_dev(global_qtest, s, features_mask);
=20
     wait_for_rings_started(s, s->queues * 2);
=20
--=20
1.8.3.1



