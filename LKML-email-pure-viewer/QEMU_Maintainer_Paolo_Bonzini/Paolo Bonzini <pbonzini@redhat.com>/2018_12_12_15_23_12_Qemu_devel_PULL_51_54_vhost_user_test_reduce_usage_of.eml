Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:52:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 16DEC580380
	for <like.xu@linux.intel.com>; Wed, 12 Dec 2018 08:10:24 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 08:10:23 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ApbDfsxfVSbU1c1vTSi4w50TLlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW7YB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgqxcoh2hqRNwzJLbbo+ILPpzfKHTcNwHSWdPQspeSTdBD5ig?=
 =?us-ascii?q?b4YMFecNIfxVo5X/qlYIsBCwBROsBOTqyjJQnHH5x6o60+AmEQrbwQEgGNQOsX?=
 =?us-ascii?q?XVrNXzNacZTOe4zLHTwjXEafNX2Db96I7Jch06u/GDQ69/ccrLxkkzDQ/KklKQ?=
 =?us-ascii?q?qYn8Mj6Ty+8DsHCb4vJ+We6ziGMrsRx9riWsy8s2lIXEiIIYxkrZ+Sh72Io4Id?=
 =?us-ascii?q?O1RFR7bNOlCpdcqiCXOopsTs4iRWxjpTw0xaccuZGheSgH0JQnyADba/yAa4WI?=
 =?us-ascii?q?5hPjVP2NITdjnn5ld7S/hwuo/Uin0O38WdG40FdMriVbjtnBrm4B2wDQ58SdV/?=
 =?us-ascii?q?dx40Ss1SyR2w3d6uxIO104mKjDJ54k2LEwl54TsUrZHi/xnUX7lLaWeVsh+ui1?=
 =?us-ascii?q?8ujof6vppoGCOI9wkw3xKaMumtG5AeskLAcORG+X+eC91L3g40L1WrpLjuAun6?=
 =?us-ascii?q?ndsZDaI9kbp6GjDw9U1IYj9wiwDzO83NsEmnkHKUlIeBSAj4jvNFHOJu34Ae24?=
 =?us-ascii?q?g1S2nzdn3+rGMaH5ApXRMnjDl6/sfbJ8605f1gU/199e549PB7EFIfLzXFLxtd?=
 =?us-ascii?q?PCAh84NQy03/joCNFn2owCXmKPB/zRDaXJrFXd5v4zO/LeI8gRuS3hML4j4Pjh?=
 =?us-ascii?q?i2J/nkUSOqyg3J8SYXb/Gex6IkKfej31j9IcVGsHoAc6H9Hsk0CIBDtaZnKuWP?=
 =?us-ascii?q?Al6zQmTY6rE4rHA5qgmaGMxzuTGJpQaWZbTFeWHiDzao+GVvwQPT+UOdJriTce?=
 =?us-ascii?q?VLKsGLMmgAijsRK/x7d5I+78/CoeupT+kt9v6L79jxY3oAR9CMCam0uKSXN1mG?=
 =?us-ascii?q?JAEyc826ZtoEp84k2O3ahxn7pTEtkFtKABaRszKZOJl78yMNv1QA+UJto=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DdAgAKMhFcmBHrdtBkgheBMYJig3uIe?=
 =?us-ascii?q?IszmWAUgV8SAQEYFIc+IjYHDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQI?=
 =?us-ascii?q?DGAmCXAMDAQIgBAsBDQEFCioCAQIBAgYBAQUfAhgKBAICAwEwAQUBCxEZBYMcg?=
 =?us-ascii?q?WoDFQEDAZo6PIsNfDOCdwWBNQOBDIJEDYIUAgYSeYZyhD8XgUA/gRGEXYMDARI?=
 =?us-ascii?q?BCYMaglcCiT2LWot1CZFXAhaJaYddLJhsAgQCBAUCBQ8hgSwFgRFxMxoIGxWDJ?=
 =?us-ascii?q?xOCFBeDSopUcYEEA4o+R4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0DdAgAKMhFcmBHrdtBkgheBMYJig3uIeIszmWAUgV8SAQE?=
 =?us-ascii?q?YFIc+IjYHDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDGAmCXAMDAQIgB?=
 =?us-ascii?q?AsBDQEFCioCAQIBAgYBAQUfAhgKBAICAwEwAQUBCxEZBYMcgWoDFQEDAZo6PIs?=
 =?us-ascii?q?NfDOCdwWBNQOBDIJEDYIUAgYSeYZyhD8XgUA/gRGEXYMDARIBCYMaglcCiT2LW?=
 =?us-ascii?q?ot1CZFXAhaJaYddLJhsAgQCBAUCBQ8hgSwFgRFxMxoIGxWDJxOCFBeDSopUcYE?=
 =?us-ascii?q?EA4o+R4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,344,1539673200"; 
   d="scan'208";a="66499782"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 12 Dec 2018 08:10:23 -0800
Received: from localhost ([::1]:45804 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gX75a-0005qV-BA
	for like.xu@linux.intel.com; Wed, 12 Dec 2018 11:10:22 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52844)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <paolo.bonzini@gmail.com>) id 1gX6NA-0001Op-O3
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:24:29 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <paolo.bonzini@gmail.com>) id 1gX6N6-0000hT-Ix
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:24:28 -0500
Received: from mail-wm1-x329.google.com ([2a00:1450:4864:20::329]:55389)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <paolo.bonzini@gmail.com>)
	id 1gX6N6-0000a7-9w
	for qemu-devel@nongnu.org; Wed, 12 Dec 2018 10:24:24 -0500
Received: by mail-wm1-x329.google.com with SMTP id y139so6134870wmc.5
	for <qemu-devel@nongnu.org>; Wed, 12 Dec 2018 07:24:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=sender:from:to:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=yvkc5NIGJX1pctmpH7dLVW+FoWM6jiDssoit3CaEET0=;
	b=cK/l+HINSAABe9+dS9MhEKXfCaZPkSZ/FZs4aZkU1GWhqsBujd1Hp/ggw3XxJmjeSa
	HH2txHPgIgOwzsT2Z3iaiJJxADFn1bKKjlnAMPQF/wYCiF5SMZHrdzR41lZiTuDHZ+S6
	LDyzcTiOrHHewE1KqYW0JEvA1EbOdhwMJamv6Sn8LIGMK2kvf1S4Sz3dK6WrduTxG5BY
	DSYeSXRgMyASAgFQ62ew40vEQrPHuYzEfLSp7L9YcCVBKWXYm3PgmF9YCFEe2OICGU25
	2MunqKDeks6+NpjXy72lTi/WHwStTha7ZpTPhRz8OJS8XlSYMCwGQqToen3xEtTxJg+7
	G0Sw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:subject:date:message-id
	:in-reply-to:references:mime-version:content-transfer-encoding;
	bh=yvkc5NIGJX1pctmpH7dLVW+FoWM6jiDssoit3CaEET0=;
	b=lhaRwxdHYuXo4kYFGdBkcZhtoXSCTLIJZhghEPDfFnaqq1iz5RC87XtRF8wmxq9fc0
	6zfP4ABaRFPYJ2Wwm/dyUSLVU9ryex6SCMGqX7uGn/t30Wh6psx4vWvs4saqWvtHdJC7
	wrY6aW4TFkhAHTjKZG27KhT81XLMSlGG3g1NN10IjNceVVb5z8jBNQ4IqIrHE4EF809C
	ZlHbfj4Gmb0jJyJS/v459fpqQ8cTzZazJwncZBeveuSzYsjD6+Uvue0vxzmcBnEz0Fn6
	q41ehvNrgIpEE8avIcl3DMIauhGkVgotJ6ps+QwzH5kwM2oE5E4IQuPjTWQGkmFmOSze
	cj9Q==
X-Gm-Message-State: AA+aEWY90bAdvvn48mNi8StJ115sC+TfqVkyueVNyGFa6X77QhtPqKz1
	OyhJC1JD3cnYMuJWeOS0UgBhS9L0
X-Google-Smtp-Source: AFSGD/XPYo7kRS5pucvUO7/na9p5YW6Vb+Rgp4vQ71B/w1VfW41ZTNB/Q7if0PWl0q/C0KPRfqTjLg==
X-Received: by 2002:a7b:c397:: with SMTP id s23mr4620091wmj.127.1544628252500; 
	Wed, 12 Dec 2018 07:24:12 -0800 (PST)
Received: from 640k.lan ([93.56.166.5]) by smtp.gmail.com with ESMTPSA id
	u10sm15878859wrr.33.2018.12.12.07.24.11 for <qemu-devel@nongnu.org>
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 12 Dec 2018 07:24:12 -0800 (PST)
From: Paolo Bonzini <pbonzini@redhat.com>
To: qemu-devel@nongnu.org
Date: Wed, 12 Dec 2018 16:23:12 +0100
Message-Id: <1544628195-37728-52-git-send-email-pbonzini@redhat.com>
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: <1544628195-37728-1-git-send-email-pbonzini@redhat.com>
References: <1544628195-37728-1-git-send-email-pbonzini@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::329
Subject: [Qemu-devel] [PULL 51/54] vhost-user-test: reduce usage of
 global_qtest
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Whenever the code can run on multiple QTestStates, use them explicitly instead of
global_qtest.

Reviewed-by: Marc-Andr√© Lureau <marcandre.lureau@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
Reviewed-by: Thomas Huth <thuth@redhat.com>
Message-Id: <1543851204-41186-12-git-send-email-pbonzini@redhat.com>
---
 tests/vhost-user-test.c | 38 +++++++++++++++++---------------------
 1 file changed, 17 insertions(+), 21 deletions(-)

diff --git a/tests/vhost-user-test.c b/tests/vhost-user-test.c
index 59e1aec..c3a8af3 100644
--- a/tests/vhost-user-test.c
+++ b/tests/vhost-user-test.c
@@ -187,12 +187,12 @@ static char *get_qemu_cmd(TestServer *s,
     }
 }
 
-static void init_virtio_dev(TestServer *s, uint32_t features_mask)
+static void init_virtio_dev(QTestState *qts, TestServer *s, uint32_t features_mask)
 {
     uint32_t features;
     int i;
 
-    s->bus = qpci_init_pc(global_qtest, NULL);
+    s->bus = qpci_init_pc(qts, NULL);
     g_assert_nonnull(s->bus);
 
     s->dev = qvirtio_pci_device_find(s->bus, VIRTIO_ID_NET);
@@ -203,7 +203,7 @@ static void init_virtio_dev(TestServer *s, uint32_t features_mask)
     qvirtio_set_acknowledge(&s->dev->vdev);
     qvirtio_set_driver(&s->dev->vdev);
 
-    s->alloc = pc_alloc_init(global_qtest);
+    s->alloc = pc_alloc_init(qts);
 
     for (i = 0; i < s->queues * 2; i++) {
         s->vq[i] = qvirtqueue_setup(&s->dev->vdev, s->alloc, i);
@@ -265,7 +265,7 @@ static bool wait_for_fds(TestServer *s)
     return got_region;
 }
 
-static void read_guest_mem_server(TestServer *s)
+static void read_guest_mem_server(QTestState *qts, TestServer *s)
 {
     uint8_t *guest_mem;
     int i, j;
@@ -293,7 +293,7 @@ static void read_guest_mem_server(TestServer *s)
         guest_mem += (s->memory.regions[i].mmap_offset / sizeof(*guest_mem));
 
         for (j = 0; j < 1024; j++) {
-            uint32_t a = readb(s->memory.regions[i].guest_phys_addr + j);
+            uint32_t a = qtest_readb(qts, s->memory.regions[i].guest_phys_addr + j);
             uint32_t b = guest_mem[j];
 
             g_assert_cmpint(a, ==, b);
@@ -670,13 +670,13 @@ static void test_read_guest_mem(const void *arg)
     s = qtest_start(qemu_cmd);
     g_free(qemu_cmd);
 
-    init_virtio_dev(server, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, server, 1u << VIRTIO_NET_F_MAC);
 
     if (!wait_for_fds(server)) {
         goto exit;
     }
 
-    read_guest_mem_server(server);
+    read_guest_mem_server(global_qtest, server);
 
 exit:
     uninit_virtio_dev(server);
@@ -690,7 +690,7 @@ static void test_migrate(void)
     TestServer *s = test_server_new("src");
     TestServer *dest = test_server_new("dest");
     char *uri = g_strdup_printf("%s%s", "unix:", dest->mig_path);
-    QTestState *global = global_qtest, *from, *to;
+    QTestState *from, *to;
     GSource *source;
     gchar *cmd, *tmp;
     QDict *rsp;
@@ -704,7 +704,7 @@ static void test_migrate(void)
     from = qtest_start(cmd);
     g_free(cmd);
 
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(from, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -717,7 +717,7 @@ static void test_migrate(void)
     g_free(tmp);
     to = qtest_init(cmd);
     g_free(cmd);
-    init_virtio_dev(dest, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(to, dest, 1u << VIRTIO_NET_F_MAC);
 
     source = g_source_new(&test_migrate_source_funcs,
                           sizeof(TestMigrateSource));
@@ -753,12 +753,10 @@ static void test_migrate(void)
     qobject_unref(rsp);
 
     qmp_eventwait("STOP");
+    qtest_qmp_eventwait(to, "RESUME");
 
-    global_qtest = to;
-    qmp_eventwait("RESUME");
-
-    g_assert(wait_for_fds(s));
-    read_guest_mem_server(dest);
+    g_assert(wait_for_fds(dest));
+    read_guest_mem_server(to, dest);
 
     uninit_virtio_dev(dest);
     qtest_quit(to);
@@ -773,8 +771,6 @@ exit:
     qtest_quit(from);
     test_server_free(s);
     g_free(uri);
-
-    global_qtest = global;
 }
 
 static void wait_for_rings_started(TestServer *s, size_t count)
@@ -831,7 +827,7 @@ static void test_reconnect_subprocess(void)
     qtest_start(cmd);
     g_free(cmd);
 
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -873,7 +869,7 @@ static void test_connect_fail_subprocess(void)
     qtest_start(cmd);
     g_free(cmd);
 
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -906,7 +902,7 @@ static void test_flags_mismatch_subprocess(void)
     qtest_start(cmd);
     g_free(cmd);
 
-    init_virtio_dev(s, 1u << VIRTIO_NET_F_MAC);
+    init_virtio_dev(global_qtest, s, 1u << VIRTIO_NET_F_MAC);
     if (!wait_for_fds(s)) {
         goto exit;
     }
@@ -957,7 +953,7 @@ static void test_multiqueue(void)
     qtest_start(cmd);
     g_free(cmd);
 
-    init_virtio_dev(s, features_mask);
+    init_virtio_dev(global_qtest, s, features_mask);
 
     wait_for_rings_started(s, s->queues * 2);
 
-- 
1.8.3.1



