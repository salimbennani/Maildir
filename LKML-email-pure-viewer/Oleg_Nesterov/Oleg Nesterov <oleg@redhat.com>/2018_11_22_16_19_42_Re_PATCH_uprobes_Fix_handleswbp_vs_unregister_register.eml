Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:29:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F2A2B58037D;
	Thu, 22 Nov 2018 08:19:50 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 08:19:50 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AHowjFRZEXgv6Kz47d95h65P/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpci8ZR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyJPDIOi?=
 =?us-ascii?q?YYUSDOQBM+lXoJXgqFQMoxS+HhGsCeH0xz9UmnP7x7E23/g7HA3Y2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocSOS1w7fHzT7ed/1Zxyz96JTWfRA7pvGMQ697fM3WyUkrCQzFgU6d?=
 =?us-ascii?q?qZb7MDyI1uQCqXSb4/B8WuKojm4qsgd8qSWsyMc0koTFmJ4Zx1Te+Slkzos5O8?=
 =?us-ascii?q?e0RFN4bNK4CpddtiOXO5NoTs8+R2xkojs2x7MYtZKhYSQHy5oqywTBZ/GEdYWD?=
 =?us-ascii?q?/wjtW/yLIThigXJoYLK/iAi28Uin0uD8SMa030hQriZfkdnDqGoN1xrN5ciDUP?=
 =?us-ascii?q?d9+V2h2TmX2wDS7OFLP1w0mLLFJ5I9xrM8jIcfvErdEiPshUn7j7Oael8l9+Wq?=
 =?us-ascii?q?8+jnZ6/ppp6YN496kAH+NaEul9S7AeQ5NAgOQmea9f2/1LL95035RqtFjvkvnq?=
 =?us-ascii?q?nevpHaI9oUprSiDg9L3YYs9Qy/Ay2l0NsGh3kHKkxKeBadg4juIVHOL+j0De2j?=
 =?us-ascii?q?jFS0jDdr2/fGM6XlApXMLXjMjq3tfLlg60NHzAozzNZf549bC70bIfLzXFPxu8?=
 =?us-ascii?q?LcDhMjLwO0xOPnAs1n1owCQWKPHrOZMKTKvF+I/O0vIvWMa5USuDrnK/gl+uTh?=
 =?us-ascii?q?jXk2mVIGeamp3J0XaG23H/h8IkWZZ2bsjckFEWsQogU+S+nqgkWYUTFPf3ayQ7?=
 =?us-ascii?q?485jYjBYKkCofMWJqhgL+G3Ce9GJ1WYXtLClSNEXfuaoWFVO0AaCOUIs99jDME?=
 =?us-ascii?q?UaKtRJMm1RGrrAX60aZoLvLI+i0EspLuzMJ65/bTlRE19jx4Fd6d3HuPT2xvmm?=
 =?us-ascii?q?MIRjk23L1woEBny1eD17R4jOJcFdBJ+/xJVQI6P4bGz+NmE9DyRh7BftCRRVal?=
 =?us-ascii?q?WNqmBys9TtYww9AUZUZ9FM6vjhTC3yqsHr8UmKaHBJ0y8qLAwXfxI9xxxGrB1K?=
 =?us-ascii?q?kkl1MmWNdANXW6hq5j8AjeH5PGnF+Hl6m0b6gc3DTC9GGYzWWQukFUVwpwUabA?=
 =?us-ascii?q?XXAbfUbWqdX55kXfT76hE7gnMw1BydKcJatOcNHmkVJGRPL7MtTEf22xg3uwBQ?=
 =?us-ascii?q?qPxr6UcYXlYXsd0zvHBEgEiQ8T+22GOhY4Biq6p2LeDTpuFU/gYk/28Ol+rm+7?=
 =?us-ascii?q?QVEwzw2Qc0Jh0L+18AYPhfOAU/MTwq4EuCA5pjVoHVa92tXWC8aApwthZqlcfc?=
 =?us-ascii?q?kx4FBd1WLdtgx9OJOgIrtmhl4fdQR3okzv2w92CoVGjcglsncqwBBuJqKf1VNL?=
 =?us-ascii?q?bymY0ozoOr3LNmny+wiiZLTS2l7A39eZ5KcO5O4jpFX+oQ6mDEwi83Zg09lLyH?=
 =?us-ascii?q?ac4pTKDAwPUZP+SEo39h56p63EbSk5/Y/byXpsMaysuD/Yx90pHPclygqnf9pH?=
 =?us-ascii?q?MKKECRX+HNEAC8mvKOwlgV6pbh0fMeBW9a40Od6mdvSc1K6qOuZggCypjWBd7I?=
 =?us-ascii?q?9h1UKM8jJ2SvTU0JYd3/GYwgyHWi/mjFegrs/4g5pEaiwVHmalzyjrGpRRZqxr?=
 =?us-ascii?q?cYkXE2iuJ9C4yctkh57qXX5V71qjB1IA2M+0dhuedV393QtM1UsJpXyrgze3zz?=
 =?us-ascii?q?txkzsxtKqQwDTOw/j+dBoAImNKRGhigU3sIISulNAaQU6oYhMtlBuk40b62qda?=
 =?us-ascii?q?qL5+L2nVXUdHYSz2I3t+Xau3s7qIe9RP548wsSVLTOS8ZkiXSrznrBsA0CPjHG?=
 =?us-ascii?q?xeyCogdz6wuZX5nB16iGSDI3Z1t3fZfcBwxRHC5N3TX/JR3zwGRDVmhjnTHFSz?=
 =?us-ascii?q?I96p/dCMnZfZru++T36hVoFUcSTzzYKPriy76XdoAR2+mfC+gdnnEQk80S/m2N?=
 =?us-ascii?q?hmTyTIrBDgYob106S2K/5ofk5tBFXk8cp1Bpl+kpcshJEXwXUahY+a/XsdnWfz?=
 =?us-ascii?q?LNVUw6T+bHUWSD4Pwt7V5hXl2UJ5InKIwYL5SmuSws97a9amZWMW3zo379pWB6?=
 =?us-ascii?q?eM8LxEgSx1r0K9rQLQYvhyhC0RyPUw534Bn+EGphAtwT6DDbAIEklVJijslxWO?=
 =?us-ascii?q?79Cjo6Rbfmevcb6s1EVgmdCtFq2NogZZWHzhYJctATdw7tljMFLLyHDz9obkeN?=
 =?us-ascii?q?zKYdMSrBKUlQrAj/NOKJIwjfcKgStnOWTgvXwq0eI7jBpu3Y2ks4iDMWli4KW5?=
 =?us-ascii?q?AhtAPD3ve8wT4i3tjbpZnsuOxI+gBJJhGjEWXJfySfKoDSkftfDmNwaIDT09pW?=
 =?us-ascii?q?2XGbvZHQ+D9khmq2jDHIysN3GSPHMZ18ltRAGBJExDhwAZRDc6kYQ8Fg+038zt?=
 =?us-ascii?q?alt56ioS5l7lqRtM1+RoOAPkUmrEoAeoazE0SIWQLRZM7wFC4VvVPtKa7u5pAy?=
 =?us-ascii?q?5Y+ZihphSXKmOHfwRIEX0JWkucClHjObmu+MDA8/WCCeq4NffOerKOqepRV/qT?=
 =?us-ascii?q?wZKv041m/yuDN8mVP3liCeE71VRHXXxjB8vZnDAPQTQNly3Rd86buAu8+ipvo8?=
 =?us-ascii?q?C/7vvrWQHv5YiOC7dIMtVv4Re2gaidOO6KmSZ5Mi1V1pcNxX/O1bge00QeiyBo?=
 =?us-ascii?q?dzmxD7sAsTTBQ77Xmq9SFxQbcT98NNNU76Ig2QlAIdTUis7u2b5ikPE0C01JVV?=
 =?us-ascii?q?jgmsyyYcwKIme9NE7IBUqRNbSGIyHLzN/zYa+mVbJQi+BUvQWquTmHC0/jIiiD?=
 =?us-ascii?q?lz7xWhCzMOFMiTuXMwBEtI6hchZiF27jQcniah26Nt93kDI3zac1hnPMKW4TLz?=
 =?us-ascii?q?x8f1lRob2X6CNSmu9/FHBZ7np5MemEnD6U7unCJZYQtPtrAyJ0mPpb4XQ60bRV?=
 =?us-ascii?q?6i5ESedxmCvTqN5uvl6nnvOOyjphTBpBtDJLiJiXskVlPKWKvqVHDF/C8AgA5C?=
 =?us-ascii?q?2oAg4QppMxA9vjoa1ZjMDGjrjyAD5H+sjJ+cIHAMzJNMOANmFnOh3sTm36FgwA?=
 =?us-ascii?q?GBmvOG6XoUFGjPyI8WPd+p8+p5fEgpcCSrZHElcyE6VJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtNvCLmoQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAADL1fZbh0O0hNFiGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGDayeMEF+LIoINFJcmgXEWGBMBiFIiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEIDQkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKGAklAwwFSRMFgxyCA?=
 =?us-ascii?q?gWqLzOKH4wJF4F/hCOKWQKLEZRxCYIgiAmGewsYX4hyhzcsmASBRoINTSMVgye?=
 =?us-ascii?q?CJxcSjgs+AQExAYEEAQEcjDgBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAADL1fZbh0O0hNFiGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGDayeMEF+LIoINFJcmgXEWGBMBiFIiNAkNAQMBAQEBAQECARMBAQEID?=
 =?us-ascii?q?QkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKGAklAwwFSRMFgxyCAgWqLzOKH4wJF4F?=
 =?us-ascii?q?/hCOKWQKLEZRxCYIgiAmGewsYX4hyhzcsmASBRoINTSMVgyeCJxcSjgs+AQExA?=
 =?us-ascii?q?YEEAQEcjDgBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="41902096"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 22 Nov 2018 08:19:49 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2405928AbeKWC7t (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 22 Nov 2018 21:59:49 -0500
Received: from mx1.redhat.com ([209.132.183.28]:38748 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730352AbeKWC7s (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 22 Nov 2018 21:59:48 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id DEE6931256C9;
        Thu, 22 Nov 2018 16:19:45 +0000 (UTC)
Received: from dhcp-27-174.brq.redhat.com (unknown [10.43.17.142])
        by smtp.corp.redhat.com (Postfix) with SMTP id 3DF485C21E;
        Thu, 22 Nov 2018 16:19:43 +0000 (UTC)
Received: by dhcp-27-174.brq.redhat.com (nbSMTP-1.00) for uid 1000
        oleg@redhat.com; Thu, 22 Nov 2018 17:19:45 +0100 (CET)
Date: Thu, 22 Nov 2018 17:19:42 +0100
From: Oleg Nesterov <oleg@redhat.com>
To: Andrea Parri <andrea.parri@amarulasolutions.com>
Cc: linux-kernel@vger.kernel.org,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>, stable@kernel.org
Subject: Re: [PATCH] uprobes: Fix handle_swbp() vs. unregister() + register()
 race once more
Message-ID: <20181122161942.GG28270@redhat.com>
References: <20181122161031.15179-1-andrea.parri@amarulasolutions.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181122161031.15179-1-andrea.parri@amarulasolutions.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.46]); Thu, 22 Nov 2018 16:19:46 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 11/22, Andrea Parri wrote:
>
> Commit 142b18ddc8143 ("uprobes: Fix handle_swbp() vs unregister() +
> register() race") added the UPROBE_COPY_INSN flag, and corresponding
> smp_wmb() and smp_rmb() memory barriers, to ensure that handle_swbp()
> uses fully-initialized uprobes only.
> 
> However, the smp_rmb() is mis-placed: this barrier should be placed
> after handle_swbp() has tested for the flag, thus guaranteeing that
> (program-order) subsequent loads from the uprobe can see the initial
> stores performed by prepare_uprobe().
> 
> Move the smp_rmb() accordingly.  Also amend the comments associated
> to the two memory barriers to indicate their actual locations.
> 
> Signed-off-by: Andrea Parri <andrea.parri@amarulasolutions.com>
> Cc: Peter Zijlstra <peterz@infradead.org>
> Cc: Ingo Molnar <mingo@redhat.com>
> Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
> Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
> Cc: Jiri Olsa <jolsa@redhat.com>
> Cc: Namhyung Kim <namhyung@kernel.org>
> Cc: Oleg Nesterov <oleg@redhat.com>
> Cc: stable@kernel.org
> Fixes: 142b18ddc8143 ("uprobes: Fix handle_swbp() vs unregister() + register() race")

Thanks,

Acked-by: Oleg Nesterov <oleg@redhat.com>



> ---
>  kernel/events/uprobes.c | 12 ++++++++++--
>  1 file changed, 10 insertions(+), 2 deletions(-)
> 
> diff --git a/kernel/events/uprobes.c b/kernel/events/uprobes.c
> index 96d4bee83489b..322e97bbb4370 100644
> --- a/kernel/events/uprobes.c
> +++ b/kernel/events/uprobes.c
> @@ -829,7 +829,7 @@ static int prepare_uprobe(struct uprobe *uprobe, struct file *file,
>  	BUG_ON((uprobe->offset & ~PAGE_MASK) +
>  			UPROBE_SWBP_INSN_SIZE > PAGE_SIZE);
>  
> -	smp_wmb(); /* pairs with rmb() in find_active_uprobe() */
> +	smp_wmb(); /* pairs with the smp_rmb() in handle_swbp() */
>  	set_bit(UPROBE_COPY_INSN, &uprobe->flags);
>  
>   out:
> @@ -2178,10 +2178,18 @@ static void handle_swbp(struct pt_regs *regs)
>  	 * After we hit the bp, _unregister + _register can install the
>  	 * new and not-yet-analyzed uprobe at the same address, restart.
>  	 */
> -	smp_rmb(); /* pairs with wmb() in install_breakpoint() */
>  	if (unlikely(!test_bit(UPROBE_COPY_INSN, &uprobe->flags)))
>  		goto out;
>  
> +	/*
> +	 * Pairs with the smp_wmb() in prepare_uprobe().
> +	 *
> +	 * Guarantees that if we see the UPROBE_COPY_INSN bit set, then
> +	 * we must also see the stores to &uprobe->arch performed by the
> +	 * prepare_uprobe() call.
> +	 */
> +	smp_rmb();
> +
>  	/* Tracing handlers use ->utask to communicate with fetch methods */
>  	if (!get_utask())
>  		goto out;
> -- 
> 2.17.1
> 

