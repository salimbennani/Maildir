Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:26:16 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from mta-temp.ostc.intel.com (mta-temp.ostc.intel.com [10.54.63.100])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AD8C7580989;
	Sat,  1 Dec 2018 18:20:46 -0800 (PST)
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mta-temp.ostc.intel.com (Postfix) with ESMTPS id D04A660F39;
	Fri, 30 Nov 2018 16:59:21 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga006-1.fm.intel.com with ESMTP; 30 Nov 2018 16:58:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AIhBXiRCsNx9TKKJQjcLWUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/pMqwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH42y?=
 =?us-ascii?q?YYgBAe0DMuZWoIbzqEAOrQO8CAS3GO/iySVFimPs0KEmz+gsFxzN0gw6H9IJtX?=
 =?us-ascii?q?TZtNr7NL0TUe+p0aLF0TPDb/NR2Tf59IjDbxcsru+WXbJxbcXc0lMgFwXFjlWX?=
 =?us-ascii?q?rYzlIymZ1uITvGiH9udtU/+khW0/qwxpvDSj2sMhhpPUio8b1FzI7zh1zYUpKd?=
 =?us-ascii?q?GiSUN2Y8aoHZtMuy2AKYd7TcIvT3t2tCs0xbAKo4O3cDQOxZkh2hXRceaIc5KS?=
 =?us-ascii?q?7RLmTOuRISl3hHZieL+nmRay/lavyvfmWsm3zllKtCxFncfItnwX0BzT8MeHRu?=
 =?us-ascii?q?N8/kenxzmPyxje5v9YLU0wj6bXNpAszqAqmpYOsknPAjX6lUT0gaOOc0Ur4Omo?=
 =?us-ascii?q?6+DpYrX8oZ+cMpd5igX/MqQoh8y+Dv00MgsQUGiB/+Szyrnj8VT+QLREiP05jL?=
 =?us-ascii?q?PZvYvEJcQUuKG5GRVZ0oU95BalCTepztAYkWMALFJfdxKLl5LpNE3WIPDkEfe/?=
 =?us-ascii?q?hEyhkDNqx/DFILLtGJrMLmXYnbflfLZ97VNcyQUpwdBe4ZJUFq8OIPbpVkDts9?=
 =?us-ascii?q?zYCwczMxaozOb/FNV9yoQeVHqPAqCDMaPSrUWH5uU1L+mMeY8aojD9K/c+6v7q?=
 =?us-ascii?q?jH85n0IdfKaz0ZsWbnC4AuppI0GDbXXwhdcBFH8AvhAiQ+zylF2CTTlTam6wX6?=
 =?us-ascii?q?I7+D43EoGmDYDFRoCrh7yMxyO7HpxQZmBbBVGAC3bod4OYW/gSbCKeONNukjsB?=
 =?us-ascii?q?VbK5UY8uyQmutBPmy7pgNufb4DYYtZLk1Nh2/eHTjws99T5vAsSZ0mGNSXx0n2?=
 =?us-ascii?q?wSSz832qB/vVJyylOZ3adkhPxYEMRZ5+lVXQciKZ7c0+t6BsjxWg3beNeFUlKm?=
 =?us-ascii?q?QtS8DjE3QdI82NsOY0d7G9W/gRHPxSuqA7kJl7OVAJw46L7T33/0J8xl0XbJyL?=
 =?us-ascii?q?Ehj0U6QstILWCpm7Rw9xbNCILTk0WWjaCqdb8C0y7L82uDyWmOvERcUANrVaXF?=
 =?us-ascii?q?XHYfZlbZrNjj50PCSaOuBqojMgdb1cGCLa5KYMXzjVpaXPfjJMjeY2WplmitHx?=
 =?us-ascii?q?mI2K2DYJDqe2oH2iXdE1YLkwYI8HaCNAg+ADqhom3EADxvE1Lvf13j8e1kpHyn?=
 =?us-ascii?q?SU80yhmAb1d92Lqt5h4VmfucRusP3rIFvSchrCl0HFa93t7MF9qMvQ1hfL9YYd?=
 =?us-ascii?q?M85ldH2nnUtwh8PpymMqBjiUQScwVxv0PyyRp3Dp9MntQtrHMv1AByM76X0Etd?=
 =?us-ascii?q?dzOE2pD9IqfYKm3s8xGgdaHX2kvS382L+qgS8vs4rVbjvAa3Fkc593Vn0t9V02?=
 =?us-ascii?q?aT55nQDQoSV47xXVgz9xRgu77aZSw97ZvO1XJwKam0riPC29UxCeol1xasZctQ?=
 =?us-ascii?q?PLmFFQ/yCcIaAceuJfcum1ioaBIEIe9T+LQ1P8Oga/uJxqqrMPx8kzKhiGRN+J?=
 =?us-ascii?q?p93V6U9ypgVu7I2I4Iw+uZ3gSbTTj8lkqussftlYBCez4SBGu/xTH4C4FLYq19?=
 =?us-ascii?q?YJgECX2pI82x3dh+g5/tW3hF9F+sHV8G2cmpeQaMYFz5xwFfyUMXoXm/kyui0z?=
 =?us-ascii?q?N0iy0prraY3CHWw+XidQALO25RSGl5kFfsJ5O5j9QbXEiucggomwGp5Uf8x6hH?=
 =?us-ascii?q?uqt/K3PfTltPfyjzN2tiSLe/tqKeY85T75MlqSdXX/6mYVCZSb79pAEW0zj5EG?=
 =?us-ascii?q?tdxzA7djeqtYv/nxFhjGKdLXBzrGfWeM1qxBff4sDcSuBV3jYcWCZ4jjzXDECm?=
 =?us-ascii?q?P9a15dWUi4vDsuemWmOhTJJTdjPnzYGBtCu9/mBqBRy/n/aumtzoCwQ60Cn718?=
 =?us-ascii?q?V0WiXMthrzfo7r16GiO+J9YkZoHEP869Z9GoxmkYs/npAQ1WIahpWI53UHl2jz?=
 =?us-ascii?q?PM5f2aL/anoNWDEKz8TU4AjjxE1sMHaJy5jlWXWax8trf8O6bX8O2iIh88BKD7?=
 =?us-ascii?q?+Z7LlFnSt2uFW0twzQbuZmnjcB1/Qu8mUVjP8TuAoi1SidBrESHU9FPS3jjRiI?=
 =?us-ascii?q?7ta+rLlJa2ara7S/yE1+ndW5BrGYvg5cQGr5eoslHSJo8sV/N1fM3Gfy647+ft?=
 =?us-ascii?q?nQcMkTtgaVkxrbi+hVKZQxlucFhCZ9OGL9u2ElxPA/jRB0wZ66u42HIX13/K2l?=
 =?us-ascii?q?Gh5YKiH1Z8QL9z72l6lemcKW3521EpVlBzUGR5/oTfOuEDIPuvXrLQeOEDsgqn?=
 =?us-ascii?q?iFHbrTBxOQ6EBjr3jXCZCkK2mXJGUFzdVlXBSdJlZQgAUKUzUhhJI5ChqmxM/8?=
 =?us-ascii?q?cEd6+zAR4ET3qgBXx+JsNhn/VHrfpQiyZjc1TpifMARZ7gVY60jJNsye6/p5Hz?=
 =?us-ascii?q?tE8Z25sAyNNmubahxIDGEOR0yEHk3jMaOo5dXa6OiYAey+L/TVbLWKqOxeUeqI?=
 =?us-ascii?q?xJ213otn+TaMKtuAPn14A/In3UpDWGhzG97FlDUXVywXiyXNYtabpBii+y13rc?=
 =?us-ascii?q?O/8PXxVALs/4uPDLRSPst1+xCrmqeOLOqQhCd/KTZF2ZIA337IyL4D3FEMjyFi?=
 =?us-ascii?q?bSWiEbMFtSTVVqLfhrdXDwIHayN0LMZH9b880RJXOcHFitL5zLp4jv8uBldBVF?=
 =?us-ascii?q?zhnNypZMMQL2G8MlPHGFiENLCcKTLXxMH3ZLu2SadMg+VMqx2wpTGbHlf/PjSC?=
 =?us-ascii?q?kjnlTQygPftQgyGbIhNevpqwchJsCWjlUdLnZQe3MN5xjT0q37I0gmnGOnIbMT?=
 =?us-ascii?q?h5a0lNtKGf7TtEgvVjHGxM9npkIvOCmyac7unYLI4ZsPprAitukeJa7283y79U?=
 =?us-ascii?q?7CFCWfx0lzHert9oo1G6jOaPziBrXwZJqjZO18q3uhBuI6Sc+pReVHLs+BMW8X?=
 =?us-ascii?q?7WBQ4HqtdoEd7zvLgWzcLAx4zpLzIX3sjV9oM1AcjTLN7PZHc7MBHBETjUCw8Z?=
 =?us-ascii?q?CzimKTeM1ARmjPiO+yjN/dABoZ/2lc9LE+cDWQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0APAAAa3AFch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeMEV+NTZc0gXMsEwGHdiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I?=
 =?us-ascii?q?2JAGCYgMDAQIkCwFGBgkBAVADKSsZBYMcggIFpy4zii+HbIQuF4F/g3WLCgKQJ?=
 =?us-ascii?q?pAPCYIijwoLGF+QQJoDIIINMxoIJgqDJ4InF44+HgEBMYEEAQEBjVwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0APAAAa3AFch0O0hNFjHQEBBQEHBQGBUQgBCwGDayeMEV+?=
 =?us-ascii?q?NTZc0gXMsEwGHdiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYgMDAQIkC?=
 =?us-ascii?q?wFGBgkBAVADKSsZBYMcggIFpy4zii+HbIQuF4F/g3WLCgKQJpAPCYIijwoLGF+?=
 =?us-ascii?q?QQJoDIIINMxoIJgqDJ4InF44+HgEBMYEEAQEBjVwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,300,1539673200"; 
   d="scan'208";a="55634657"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 30 Nov 2018 16:58:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726728AbeLAMJR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 1 Dec 2018 07:09:17 -0500
Received: from anholt.net ([50.246.234.109]:42748 "EHLO anholt.net"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726014AbeLAMJQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 1 Dec 2018 07:09:16 -0500
Received: from localhost (localhost [127.0.0.1])
        by anholt.net (Postfix) with ESMTP id 2958710A156D;
        Fri, 30 Nov 2018 16:58:04 -0800 (PST)
X-Virus-Scanned: Debian amavisd-new at anholt.net
Received: from anholt.net ([127.0.0.1])
        by localhost (kingsolver.anholt.net [127.0.0.1]) (amavisd-new, port 10024)
        with LMTP id w7ud59fdKjYI; Fri, 30 Nov 2018 16:58:02 -0800 (PST)
Received: from eliezer.anholt.net (localhost [127.0.0.1])
        by anholt.net (Postfix) with ESMTP id 7DE2410A1521;
        Fri, 30 Nov 2018 16:58:00 -0800 (PST)
Received: by eliezer.anholt.net (Postfix, from userid 1000)
        id 73E4C2FE36F0; Fri, 30 Nov 2018 16:57:59 -0800 (PST)
From: Eric Anholt <eric@anholt.net>
To: dri-devel@lists.freedesktop.org
Cc: linux-kernel@vger.kernel.org,
        Dave Emett <david.emett@broadcom.com>,
        Thomas Spurden <thomas.spurden@broadcom.com>,
        Eric Anholt <eric@anholt.net>
Subject: [PATCH 5/6] drm/v3d: Add more tracepoints for V3D GPU rendering.
Date: Fri, 30 Nov 2018 16:57:58 -0800
Message-Id: <20181201005759.28093-5-eric@anholt.net>
X-Mailer: git-send-email 2.20.0.rc1
In-Reply-To: <20181201005759.28093-1-eric@anholt.net>
References: <20181201005759.28093-1-eric@anholt.net>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The core scheduler tells us when the job is pushed to the scheduler's
queue, and I had the job_run functions saying when they actually queue
the job to the hardware.  By adding tracepoints for the very top of
the ioctls and the IRQs signaling job completion, "perf record -a -e
v3d:.\* -e gpu_scheduler:.\* <job>; perf script" gets you a pretty
decent timeline.

Signed-off-by: Eric Anholt <eric@anholt.net>
---
 drivers/gpu/drm/v3d/v3d_gem.c   |   4 ++
 drivers/gpu/drm/v3d/v3d_irq.c   |  19 +++++-
 drivers/gpu/drm/v3d/v3d_trace.h | 101 ++++++++++++++++++++++++++++++++
 3 files changed, 121 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/v3d/v3d_gem.c b/drivers/gpu/drm/v3d/v3d_gem.c
index 0bd6892e3044..2f82e2724b1f 100644
--- a/drivers/gpu/drm/v3d/v3d_gem.c
+++ b/drivers/gpu/drm/v3d/v3d_gem.c
@@ -484,6 +484,8 @@ v3d_submit_cl_ioctl(struct drm_device *dev, void *data,
 	struct drm_syncobj *sync_out;
 	int ret = 0;
 
+	trace_v3d_submit_cl_ioctl(&v3d->drm, args->rcl_start, args->rcl_end);
+
 	if (args->pad != 0) {
 		DRM_INFO("pad must be zero: %d\n", args->pad);
 		return -EINVAL;
@@ -611,6 +613,8 @@ v3d_submit_tfu_ioctl(struct drm_device *dev, void *data,
 	int ret = 0;
 	int bo_count;
 
+	trace_v3d_submit_tfu_ioctl(&v3d->drm, args->iia);
+
 	job = kcalloc(1, sizeof(*job), GFP_KERNEL);
 	if (!job)
 		return -ENOMEM;
diff --git a/drivers/gpu/drm/v3d/v3d_irq.c b/drivers/gpu/drm/v3d/v3d_irq.c
index dd7a7b0bd5a1..69338da70ddc 100644
--- a/drivers/gpu/drm/v3d/v3d_irq.c
+++ b/drivers/gpu/drm/v3d/v3d_irq.c
@@ -15,6 +15,7 @@
 
 #include "v3d_drv.h"
 #include "v3d_regs.h"
+#include "v3d_trace.h"
 
 #define V3D_CORE_IRQS ((u32)(V3D_INT_OUTOMEM |	\
 			     V3D_INT_FLDONE |	\
@@ -88,12 +89,20 @@ v3d_irq(int irq, void *arg)
 	}
 
 	if (intsts & V3D_INT_FLDONE) {
-		dma_fence_signal(v3d->bin_job->bin.done_fence);
+		struct v3d_fence *fence =
+			to_v3d_fence(v3d->bin_job->bin.done_fence);
+
+		trace_v3d_bcl_irq(&v3d->drm, fence->seqno);
+		dma_fence_signal(&fence->base);
 		status = IRQ_HANDLED;
 	}
 
 	if (intsts & V3D_INT_FRDONE) {
-		dma_fence_signal(v3d->render_job->render.done_fence);
+		struct v3d_fence *fence =
+			to_v3d_fence(v3d->render_job->render.done_fence);
+
+		trace_v3d_rcl_irq(&v3d->drm, fence->seqno);
+		dma_fence_signal(&fence->base);
 		status = IRQ_HANDLED;
 	}
 
@@ -119,7 +128,11 @@ v3d_hub_irq(int irq, void *arg)
 	V3D_WRITE(V3D_HUB_INT_CLR, intsts);
 
 	if (intsts & V3D_HUB_INT_TFUC) {
-		dma_fence_signal(v3d->tfu_job->done_fence);
+		struct v3d_fence *fence =
+			to_v3d_fence(v3d->tfu_job->done_fence);
+
+		trace_v3d_tfu_irq(&v3d->drm, fence->seqno);
+		dma_fence_signal(&fence->base);
 		status = IRQ_HANDLED;
 	}
 
diff --git a/drivers/gpu/drm/v3d/v3d_trace.h b/drivers/gpu/drm/v3d/v3d_trace.h
index f54ed9cd3444..edd984afa33f 100644
--- a/drivers/gpu/drm/v3d/v3d_trace.h
+++ b/drivers/gpu/drm/v3d/v3d_trace.h
@@ -12,6 +12,28 @@
 #define TRACE_SYSTEM v3d
 #define TRACE_INCLUDE_FILE v3d_trace
 
+TRACE_EVENT(v3d_submit_cl_ioctl,
+	    TP_PROTO(struct drm_device *dev, u32 ct1qba, u32 ct1qea),
+	    TP_ARGS(dev, ct1qba, ct1qea),
+
+	    TP_STRUCT__entry(
+			     __field(u32, dev)
+			     __field(u32, ct1qba)
+			     __field(u32, ct1qea)
+			     ),
+
+	    TP_fast_assign(
+			   __entry->dev = dev->primary->index;
+			   __entry->ct1qba = ct1qba;
+			   __entry->ct1qea = ct1qea;
+			   ),
+
+	    TP_printk("dev=%u, RCL 0x%08x..0x%08x",
+		      __entry->dev,
+		      __entry->ct1qba,
+		      __entry->ct1qea)
+);
+
 TRACE_EVENT(v3d_submit_cl,
 	    TP_PROTO(struct drm_device *dev, bool is_render,
 		     uint64_t seqno,
@@ -42,6 +64,85 @@ TRACE_EVENT(v3d_submit_cl,
 		      __entry->ctnqea)
 );
 
+TRACE_EVENT(v3d_bcl_irq,
+	    TP_PROTO(struct drm_device *dev,
+		     uint64_t seqno),
+	    TP_ARGS(dev, seqno),
+
+	    TP_STRUCT__entry(
+			     __field(u32, dev)
+			     __field(u64, seqno)
+			     ),
+
+	    TP_fast_assign(
+			   __entry->dev = dev->primary->index;
+			   __entry->seqno = seqno;
+			   ),
+
+	    TP_printk("dev=%u, seqno=%llu",
+		      __entry->dev,
+		      __entry->seqno)
+);
+
+TRACE_EVENT(v3d_rcl_irq,
+	    TP_PROTO(struct drm_device *dev,
+		     uint64_t seqno),
+	    TP_ARGS(dev, seqno),
+
+	    TP_STRUCT__entry(
+			     __field(u32, dev)
+			     __field(u64, seqno)
+			     ),
+
+	    TP_fast_assign(
+			   __entry->dev = dev->primary->index;
+			   __entry->seqno = seqno;
+			   ),
+
+	    TP_printk("dev=%u, seqno=%llu",
+		      __entry->dev,
+		      __entry->seqno)
+);
+
+TRACE_EVENT(v3d_tfu_irq,
+	    TP_PROTO(struct drm_device *dev,
+		     uint64_t seqno),
+	    TP_ARGS(dev, seqno),
+
+	    TP_STRUCT__entry(
+			     __field(u32, dev)
+			     __field(u64, seqno)
+			     ),
+
+	    TP_fast_assign(
+			   __entry->dev = dev->primary->index;
+			   __entry->seqno = seqno;
+			   ),
+
+	    TP_printk("dev=%u, seqno=%llu",
+		      __entry->dev,
+		      __entry->seqno)
+);
+
+TRACE_EVENT(v3d_submit_tfu_ioctl,
+	    TP_PROTO(struct drm_device *dev, u32 iia),
+	    TP_ARGS(dev, iia),
+
+	    TP_STRUCT__entry(
+			     __field(u32, dev)
+			     __field(u32, iia)
+			     ),
+
+	    TP_fast_assign(
+			   __entry->dev = dev->primary->index;
+			   __entry->iia = iia;
+			   ),
+
+	    TP_printk("dev=%u, IIA 0x%08x",
+		      __entry->dev,
+		      __entry->iia)
+);
+
 TRACE_EVENT(v3d_submit_tfu,
 	    TP_PROTO(struct drm_device *dev,
 		     uint64_t seqno),
-- 
2.20.0.rc1

