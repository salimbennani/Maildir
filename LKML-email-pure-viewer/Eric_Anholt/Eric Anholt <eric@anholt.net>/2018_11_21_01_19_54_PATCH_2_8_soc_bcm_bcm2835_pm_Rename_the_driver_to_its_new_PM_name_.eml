Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 21 Nov 2018 00:41:21 -0000
Received: from icoremail.net (unknown [209.85.214.180])
	by mail-app4 (Coremail) with SMTP id cS_KCgD3__PXQvRbThDhAQ--.38401S3;
	Wed, 21 Nov 2018 01:22:32 +0800 (CST)
Received: from mail-pl1-f180.google.com (unknown [209.85.214.180])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXf0vTQvRbOjJfAA--.2265S3;
	Wed, 21 Nov 2018 01:22:28 +0800 (CST)
Received: by mail-pl1-f180.google.com with SMTP id f12-v6so1317694plo.1
        for <xuliker@zju.edu.cn>; Tue, 20 Nov 2018 09:22:28 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding:sender:precedence:list-id;
        bh=ZV4oUYqv8rZfs7OB0mNK9ZvFCXKFmxdl85qA9mqBUs8=;
        b=H29pgd+VySaOIaSWcpBCf3JDgZ2mLP3rd1s6oCG944XjnmC5bAxDlSgCVVi6/x40YI
         jPcOVcY1blNkgtBHgBcvUOK7NPsdFl6Xz6fZVUf3wtISJlbRGTAM93yqJTDLOLrQhV4r
         6HRR1nFqY5t81kgdqMTgBCs1Qqf3zhOMoo50ei/qLoOa+mNxjbBnaB0BH/BRwl+1JTkd
         lu94c9t5SQgPi3hMe2AlOxrfRmHOYDF5VGhSozv+ByYEaUJqUX78Yq0iLswpIgnskoW2
         aeWR/sa9yUTXqKQ+cds3cQgcmq/dTr+BhLJJFU8dupNbN2T7t4C2/jIelA5onXjzejPy
         LVtA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AA+aEWYvZEWUpnKS4jaEc7lyRbs2nE2JFoDjqXyUGSD/0kEeObPyrGO6
	8luqPcsYZzG6k/BdfJrrcwRNEEl6zdlEjYtYYMc9VchJYD/Un6g=
X-Received: by 2002:a17:902:8e8a:: with SMTP id bg10mr3132602plb.192.1542734547576;
        Tue, 20 Nov 2018 09:22:27 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp885222pju;
        Tue, 20 Nov 2018 09:22:26 -0800 (PST)
X-Google-Smtp-Source: AFSGD/ULgt5/uBhejAPUWk4RqI2E0ILTrlmQt4U7SLmMKvaJe2G+j+oy1Zrp6JATEkHtQ8eSKBLu
X-Received: by 2002:a63:ca0a:: with SMTP id n10mr2719682pgi.258.1542734546548;
        Tue, 20 Nov 2018 09:22:26 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542734546; cv=none;
        d=google.com; s=arc-20160816;
        b=rxYuo1+zhQRywE6Eodn2PcOFc6MIE9hU7kCdbbiWSNF1PGFOA1grqs5BwJhJ7Dm317
         CdmSA7kH/WVTal3H1nUD8ZuYFL1Hf67RBKnIu4zreGFLVSH/j7OiG+R3s2tp6O3pp2dq
         kpreQbh2cYal3VC+SNnxJw13JAtyLNCwAu08bvthELTDJfS4ryZB5qfJEHf+V94Qqn45
         hiz8eeB4lLgJlhVJQbUiPbNa3qhjQMfA43y0xhjuXtjASPeXAD/7z8Rmg4ShuKQ5A7e7
         md7An8OfWpOIfb+4MO4J/1rE8UjVEYbuP9dR7MJBBlhRGuqH/Mf/6RNCzzBIvG78Quwx
         C4fw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:date:subject:cc:to:from;
        bh=ZV4oUYqv8rZfs7OB0mNK9ZvFCXKFmxdl85qA9mqBUs8=;
        b=RwPeU+9ERkSit5KTgRrTgnFhFQtqyXXo9ze8Q8YmU9huJqTHRS7NPp8X+BtHlBL4zz
         SrEeHJbBAhnM8IilQUZQJZJjz+AAAQlnAsk0gyHvZOP8AEJJWCKq2LxBpU9y2tVU8hI0
         JBR2dFoOefDXx7Gm+HBsK/zAaoe3pIKP3foahMeroMurwt+W1VP9SBUWGumTa63WuRTw
         cjt+0w1arxrt9+0+z6i0Ahu3/6wFE2p2c4/gkAELWVfhB6GabW9cA0FfI5YYQMu5HAr5
         q0iHLHS4GHRQIqi4oGnw6Nlixf8xWtxdnnMOXt4uytR2ydyxJAxjOgFZdU/EIK8cWU0+
         p9qA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id p26si22612948pfj.244.2018.11.20.09.22.12;
        Tue, 20 Nov 2018 09:22:26 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730526AbeKUDuY (ORCPT <rfc822;yv9200@gmail.com> + 99 others);
        Tue, 20 Nov 2018 22:50:24 -0500
Received: from anholt.net ([50.246.234.109]:50718 "EHLO anholt.net"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1730478AbeKUDuX (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 22:50:23 -0500
Received: from localhost (localhost [127.0.0.1])
        by anholt.net (Postfix) with ESMTP id EEFC210A165F;
        Tue, 20 Nov 2018 09:20:09 -0800 (PST)
X-Virus-Scanned: Debian amavisd-new at anholt.net
Received: from anholt.net ([127.0.0.1])
        by localhost (kingsolver.anholt.net [127.0.0.1]) (amavisd-new, port 10024)
        with LMTP id CIIWyPnsIOTZ; Tue, 20 Nov 2018 09:20:06 -0800 (PST)
Received: from eliezer.anholt.net (localhost [127.0.0.1])
        by anholt.net (Postfix) with ESMTP id 5A31B10A15EC;
        Tue, 20 Nov 2018 09:20:01 -0800 (PST)
Received: by eliezer.anholt.net (Postfix, from userid 1000)
        id 100DB2FE1FE8; Tue, 20 Nov 2018 09:20:00 -0800 (PST)
From: Eric Anholt <eric@anholt.net>
To: Florian Fainelli <f.fainelli@gmail.com>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Wim Van Sebroeck <wim@linux-watchdog.org>,
        Guenter Roeck <linux@roeck-us.net>,
        linux-watchdog@vger.kernel.org
Cc: linux-rpi-kernel@lists.infradead.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        Stefan Wahren <stefan.wahren@i2se.com>,
        bcm-kernel-feedback-list@broadcom.com,
        Eric Anholt <eric@anholt.net>
Subject: [PATCH 2/8] soc: bcm: bcm2835-pm: Rename the driver to its new "PM" name.
Date: Tue, 20 Nov 2018 09:19:54 -0800
Message-Id: <20181120172000.15102-3-eric@anholt.net>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181120172000.15102-1-eric@anholt.net>
References: <20181120172000.15102-1-eric@anholt.net>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXf0vTQvRbOjJfAA--.2265S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxKFy8Xr45CFWrGF1UXr13Jwb_yoW3CrWxpa
	y8Ga4rJrWUJr1UXrn2qws5uF4rK3s2qw4jgrWfG3yfuF95Krs5JayIvr1vyrn8AFZ2kr13
	AF4jyrWxCanxKr7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPmb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_Gr1j6F4UJwA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_Gr1j6F4UJwAS0I0E0x
	vYzxvE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AK
	xVWUJVWUGwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48Icx
	kI7VAKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80
	FwCY02Avz4vEIxC_GwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar
	1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4U
	JwCYIxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcV
	AKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8C
	rVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8Zw
	CIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsGvfC2KfnxnUUI43ZE
	Xa7IUOkMa5UUUUU==

This is the name of the block we're controlling.

Signed-off-by: Eric Anholt <eric@anholt.net>
---
 drivers/soc/bcm/bcm2835-pm.c | 92 ++++++++++++++++++------------------
 1 file changed, 47 insertions(+), 45 deletions(-)

diff --git a/drivers/soc/bcm/bcm2835-pm.c b/drivers/soc/bcm/bcm2835-pm.c
index ed05514cc2dc..ca37145e4e40 100644
--- a/drivers/soc/bcm/bcm2835-pm.c
+++ b/drivers/soc/bcm/bcm2835-pm.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
- * Watchdog driver for Broadcom BCM2835
+ * PM driver for Broadcom BCM2835
  *
  * "bcm2708_wdog" driver written by Luke Diamand that was obtained from
  * branch "rpi-3.6.y" of git://github.com/raspberrypi/linux.git was used
@@ -42,7 +42,7 @@
 #define SECS_TO_WDOG_TICKS(x) ((x) << 16)
 #define WDOG_TICKS_TO_SECS(x) ((x) >> 16)
 
-struct bcm2835_wdt {
+struct bcm2835_pm {
 	void __iomem		*base;
 	spinlock_t		lock;
 };
@@ -50,60 +50,60 @@ struct bcm2835_wdt {
 static unsigned int heartbeat;
 static bool nowayout = WATCHDOG_NOWAYOUT;
 
-static bool bcm2835_wdt_is_running(struct bcm2835_wdt *wdt)
+static bool bcm2835_wdt_is_running(struct bcm2835_pm *pm)
 {
 	uint32_t cur;
 
-	cur = readl(wdt->base + PM_RSTC);
+	cur = readl(pm->base + PM_RSTC);
 
 	return !!(cur & PM_RSTC_WRCFG_FULL_RESET);
 }
 
 static int bcm2835_wdt_start(struct watchdog_device *wdog)
 {
-	struct bcm2835_wdt *wdt = watchdog_get_drvdata(wdog);
+	struct bcm2835_pm *pm = watchdog_get_drvdata(wdog);
 	uint32_t cur;
 	unsigned long flags;
 
-	spin_lock_irqsave(&wdt->lock, flags);
+	spin_lock_irqsave(&pm->lock, flags);
 
 	writel_relaxed(PM_PASSWORD | (SECS_TO_WDOG_TICKS(wdog->timeout) &
-				PM_WDOG_TIME_SET), wdt->base + PM_WDOG);
-	cur = readl_relaxed(wdt->base + PM_RSTC);
+				PM_WDOG_TIME_SET), pm->base + PM_WDOG);
+	cur = readl_relaxed(pm->base + PM_RSTC);
 	writel_relaxed(PM_PASSWORD | (cur & PM_RSTC_WRCFG_CLR) |
-		  PM_RSTC_WRCFG_FULL_RESET, wdt->base + PM_RSTC);
+		  PM_RSTC_WRCFG_FULL_RESET, pm->base + PM_RSTC);
 
-	spin_unlock_irqrestore(&wdt->lock, flags);
+	spin_unlock_irqrestore(&pm->lock, flags);
 
 	return 0;
 }
 
 static int bcm2835_wdt_stop(struct watchdog_device *wdog)
 {
-	struct bcm2835_wdt *wdt = watchdog_get_drvdata(wdog);
+	struct bcm2835_pm *pm = watchdog_get_drvdata(wdog);
 
-	writel_relaxed(PM_PASSWORD | PM_RSTC_RESET, wdt->base + PM_RSTC);
+	writel_relaxed(PM_PASSWORD | PM_RSTC_RESET, pm->base + PM_RSTC);
 	return 0;
 }
 
 static unsigned int bcm2835_wdt_get_timeleft(struct watchdog_device *wdog)
 {
-	struct bcm2835_wdt *wdt = watchdog_get_drvdata(wdog);
+	struct bcm2835_pm *pm = watchdog_get_drvdata(wdog);
 
-	uint32_t ret = readl_relaxed(wdt->base + PM_WDOG);
+	uint32_t ret = readl_relaxed(pm->base + PM_WDOG);
 	return WDOG_TICKS_TO_SECS(ret & PM_WDOG_TIME_SET);
 }
 
-static void __bcm2835_restart(struct bcm2835_wdt *wdt)
+static void __bcm2835_restart(struct bcm2835_pm *pm)
 {
 	u32 val;
 
 	/* use a timeout of 10 ticks (~150us) */
-	writel_relaxed(10 | PM_PASSWORD, wdt->base + PM_WDOG);
-	val = readl_relaxed(wdt->base + PM_RSTC);
+	writel_relaxed(10 | PM_PASSWORD, pm->base + PM_WDOG);
+	val = readl_relaxed(pm->base + PM_RSTC);
 	val &= PM_RSTC_WRCFG_CLR;
 	val |= PM_PASSWORD | PM_RSTC_WRCFG_FULL_RESET;
-	writel_relaxed(val, wdt->base + PM_RSTC);
+	writel_relaxed(val, pm->base + PM_RSTC);
 
 	/* No sleeping, possibly atomic. */
 	mdelay(1);
@@ -112,9 +112,9 @@ static void __bcm2835_restart(struct bcm2835_wdt *wdt)
 static int bcm2835_restart(struct watchdog_device *wdog,
 			   unsigned long action, void *data)
 {
-	struct bcm2835_wdt *wdt = watchdog_get_drvdata(wdog);
+	struct bcm2835_pm *pm = watchdog_get_drvdata(wdog);
 
-	__bcm2835_restart(wdt);
+	__bcm2835_restart(pm);
 
 	return 0;
 }
@@ -151,7 +151,7 @@ static void bcm2835_power_off(void)
 	struct device_node *np =
 		of_find_compatible_node(NULL, NULL, "brcm,bcm2835-pm-wdt");
 	struct platform_device *pdev = of_find_device_by_node(np);
-	struct bcm2835_wdt *wdt = platform_get_drvdata(pdev);
+	struct bcm2835_pm *pm = platform_get_drvdata(pdev);
 	u32 val;
 
 	/*
@@ -159,38 +159,39 @@ static void bcm2835_power_off(void)
 	 * from the normal (full) reset. bootcode.bin will not reboot after a
 	 * hard reset.
 	 */
-	val = readl_relaxed(wdt->base + PM_RSTS);
+	val = readl_relaxed(pm->base + PM_RSTS);
 	val |= PM_PASSWORD | PM_RSTS_RASPBERRYPI_HALT;
-	writel_relaxed(val, wdt->base + PM_RSTS);
+	writel_relaxed(val, pm->base + PM_RSTS);
 
 	/* Continue with normal reset mechanism */
-	__bcm2835_restart(wdt);
+	__bcm2835_restart(pm);
 }
 
-static int bcm2835_wdt_probe(struct platform_device *pdev)
+static int bcm2835_pm_probe(struct platform_device *pdev)
 {
 	struct resource *res;
 	struct device *dev = &pdev->dev;
-	struct bcm2835_wdt *wdt;
+	struct bcm2835_pm *pm;
 	int err;
 
-	wdt = devm_kzalloc(dev, sizeof(struct bcm2835_wdt), GFP_KERNEL);
-	if (!wdt)
+	pm = devm_kzalloc(dev, sizeof(struct bcm2835_pm), GFP_KERNEL);
+	if (!pm)
 		return -ENOMEM;
-	platform_set_drvdata(pdev, wdt);
+	platform_set_drvdata(pdev, pm);
 
-	spin_lock_init(&wdt->lock);
+	spin_lock_init(&pm->lock);
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	wdt->base = devm_ioremap_resource(dev, res);
-	if (IS_ERR(wdt->base))
-		return PTR_ERR(wdt->base);
+	pm->base = devm_ioremap_resource(dev, res);
+	if (IS_ERR(pm->base))
+		return PTR_ERR(pm->base);
 
-	watchdog_set_drvdata(&bcm2835_wdt_wdd, wdt);
+#if defined(CONFIG_WATCHDOG_CORE)
+	watchdog_set_drvdata(&bcm2835_wdt_wdd, pm);
 	watchdog_init_timeout(&bcm2835_wdt_wdd, heartbeat, dev);
 	watchdog_set_nowayout(&bcm2835_wdt_wdd, nowayout);
 	bcm2835_wdt_wdd.parent = dev;
-	if (bcm2835_wdt_is_running(wdt)) {
+	if (bcm2835_wdt_is_running(pm)) {
 		/*
 		 * The currently active timeout value (set by the
 		 * bootloader) may be different from the module
@@ -210,6 +211,7 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
 		dev_err(dev, "Failed to register watchdog device");
 		return err;
 	}
+#endif
 
 	if (pm_power_off == NULL)
 		pm_power_off = bcm2835_power_off;
@@ -218,7 +220,7 @@ static int bcm2835_wdt_probe(struct platform_device *pdev)
 	return 0;
 }
 
-static int bcm2835_wdt_remove(struct platform_device *pdev)
+static int bcm2835_pm_remove(struct platform_device *pdev)
 {
 	if (pm_power_off == bcm2835_power_off)
 		pm_power_off = NULL;
@@ -226,21 +228,21 @@ static int bcm2835_wdt_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static const struct of_device_id bcm2835_wdt_of_match[] = {
+static const struct of_device_id bcm2835_pm_of_match[] = {
 	{ .compatible = "brcm,bcm2835-pm-wdt", },
 	{},
 };
-MODULE_DEVICE_TABLE(of, bcm2835_wdt_of_match);
+MODULE_DEVICE_TABLE(of, bcm2835_pm_of_match);
 
-static struct platform_driver bcm2835_wdt_driver = {
-	.probe		= bcm2835_wdt_probe,
-	.remove		= bcm2835_wdt_remove,
+static struct platform_driver bcm2835_pm_driver = {
+	.probe		= bcm2835_pm_probe,
+	.remove		= bcm2835_pm_remove,
 	.driver = {
-		.name =		"bcm2835-wdt",
-		.of_match_table = bcm2835_wdt_of_match,
+		.name =		"bcm2835-pm",
+		.of_match_table = bcm2835_pm_of_match,
 	},
 };
-module_platform_driver(bcm2835_wdt_driver);
+module_platform_driver(bcm2835_pm_driver);
 
 module_param(heartbeat, uint, 0);
 MODULE_PARM_DESC(heartbeat, "Initial watchdog heartbeat in seconds");
@@ -250,5 +252,5 @@ MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started (default="
 				__MODULE_STRING(WATCHDOG_NOWAYOUT) ")");
 
 MODULE_AUTHOR("Lubomir Rintel <lkundrak@v3.sk>");
-MODULE_DESCRIPTION("Driver for Broadcom BCM2835 watchdog timer");
+MODULE_DESCRIPTION("Driver for Broadcom BCM2835 PM/WDT");
 MODULE_LICENSE("GPL");
-- 
2.19.1
