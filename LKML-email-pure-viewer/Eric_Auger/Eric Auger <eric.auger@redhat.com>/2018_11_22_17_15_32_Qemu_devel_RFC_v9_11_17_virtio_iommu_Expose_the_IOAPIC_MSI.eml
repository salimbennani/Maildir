Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:30:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9C191580460
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 09:30:56 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 09:30:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A41p4PhK7VGng9B861tmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXKvn5rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhc5+jKxGuBKspR5xzoHJbIybKPZxYLjdcMgGSWZdRMtdSzBNDp+g?=
 =?us-ascii?q?Y4YJEuEPPfxYr474p1YWohW+HwisC//ywTJUm3/20rM10/48GgzBwgMgBdMOv2?=
 =?us-ascii?q?jOoNrvKacSXv66zLPTwDXZcfxZxDf955LUchw7vf6MWrdwfNPXxEIyFA3Flk2d?=
 =?us-ascii?q?pZL5Mz6WzOgBrnWX4ul6We6xhWMqqxt9riWty8s0lIXFmoYYxkrZ+Sh33oo5P8?=
 =?us-ascii?q?C0RU11bNK+DpddtCeXPJZsTMw4WWFnoiM6x6UGuZGleCgKz4wqxxrea/ycb4iI?=
 =?us-ascii?q?+QjvVOmXITdlnn5lf6i/hxmq/UihzO3zSNW03U5UoiZZkdTArG0B2wHQ58SdVP?=
 =?us-ascii?q?dw8Ees1SyS2w3R8u1EJFo7lavfK54v2L4wkZ8TvFzaHiDonUX2kbaaeVg69ei2?=
 =?us-ascii?q?9evnZqzqqYSbN49pjAHxLrohmte4DeQ8MwgOXHaU9f6z1b3+5UD5RLRKjvsrkq?=
 =?us-ascii?q?jWqpzaJMIbprKnDA9RyIos9xG/DzK93dQemnkHKl1FeBSaj4TzPFHOOv/4Ae+l?=
 =?us-ascii?q?g1uwiDdr2+zGPrr5D5XJL3jDk6nucaxy6k5B0wczydFf55RJCrAOOv7zW0nxtM?=
 =?us-ascii?q?DGAR89KQC73+HnCNAunr4YQn+FV6+FLLvJ4xjP4uM0P/LKYogTtzDgbf8/6Lnr?=
 =?us-ascii?q?hH49nFYbOq6xwZoQbmv/B/ljPgCVbGThhoQ8F3wXtF87Re3ulFrQSDNWejO+Ur?=
 =?us-ascii?q?wx4nQhBZu7AJzfboaqhrOHwWG8BJIBfX1MCF2HDSL1cZ6ZUewHciOYL5xdlWkJ?=
 =?us-ascii?q?T7mqDYY82hy08hfgzJJoK+PV/msTspennNVv5uaVnAw9+CZcFcmR02iRCWpzmy?=
 =?us-ascii?q?dAXjIzweVzrFJwzn+F1q53heEeEsZco7tQXwIncJfGysR8DNb9XB+Hec2GDB6+?=
 =?us-ascii?q?T8mrG3c0R8M9ztsKS0J8Hdy4iVbExSXuS7oOi5SRCZA0+76a1H/0Y45/xn/Akb?=
 =?us-ascii?q?Ehjl0nWtNCc2e8m6V8+hL7DpTM1U6ekvWEb6MZiQPX9WzL5HeBsVsQBANqUK6D?=
 =?us-ascii?q?VG0Qa1H+t9n15kreCbSpDOJ0YUN61ceeJ/4SOZXShlJcSaK7NQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAABg5/ZbhxHrdtBiHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwglASjG+LIplHFIFfFBgUiFIiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNgU?=
 =?us-ascii?q?CAxgJglwDAwECJB8KKQMDAQIGAQE3EQgDAVMHEgWDHIICAQSqRTOKH4wJgVc/g?=
 =?us-ascii?q?RGHS4EEhRwCoAIHAoIcBI8ECxiJUYc3mDCBRoINMxojgzyCJxcSjgtAMYEHHIp?=
 =?us-ascii?q?BgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAABg5/ZbhxHrdtBiHgEGBwaBUQkLAYEwglASjG+LIpl?=
 =?us-ascii?q?HFIFfFBgUiFIiNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNgUCAxgJglwDAwECJ?=
 =?us-ascii?q?B8KKQMDAQIGAQE3EQgDAVMHEgWDHIICAQSqRTOKH4wJgVc/gRGHS4EEhRwCoAI?=
 =?us-ascii?q?HAoIcBI8ECxiJUYc3mDCBRoINMxojgzyCJxcSjgtAMYEHHIpBgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="41908730"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 09:30:56 -0800
Received: from localhost ([::1]:48312 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPsoY-0001t6-Rn
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 12:30:54 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49792)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eric.auger@redhat.com>) id 1gPsbE-0005XO-7c
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 12:17:10 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eric.auger@redhat.com>) id 1gPsbB-0006l2-4h
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 12:17:08 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52862)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eric.auger@redhat.com>)
	id 1gPsb1-0006GN-EE; Thu, 22 Nov 2018 12:16:55 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id AC96D31256BE;
	Thu, 22 Nov 2018 17:16:42 +0000 (UTC)
Received: from laptop.redhat.com (ovpn-116-235.ams2.redhat.com [10.36.116.235])
	by smtp.corp.redhat.com (Postfix) with ESMTP id A606360610;
	Thu, 22 Nov 2018 17:16:36 +0000 (UTC)
From: Eric Auger <eric.auger@redhat.com>
To: eric.auger.pro@gmail.com, eric.auger@redhat.com, qemu-devel@nongnu.org,
	qemu-arm@nongnu.org, peter.maydell@linaro.org, mst@redhat.com,
	jean-philippe.brucker@arm.com
Date: Thu, 22 Nov 2018 18:15:32 +0100
Message-Id: <20181122171538.12359-12-eric.auger@redhat.com>
In-Reply-To: <20181122171538.12359-1-eric.auger@redhat.com>
References: <20181122171538.12359-1-eric.auger@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.46]);
	Thu, 22 Nov 2018 17:16:42 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [RFC v9 11/17] virtio-iommu: Expose the IOAPIC MSI
 reserved region when relevant
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: tn@semihalf.com, kevin.tian@intel.com, bharat.bhushan@nxp.com,
	peterx@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

We introduce a new msi_bypass field which indicates whether
the IOAPIC MSI window [0xFEE00000 - 0xFEEFFFFF] must be exposed
as a reserved region. By default the field is set to true at
instantiation time. Later on we will introduce a property at
virtio pci proxy level to turn it off.

Signed-off-by: Eric Auger <eric.auger@redhat.com>

---

v8 -> v9:
- pass IOAPIC_RANGE_END to virtio_iommu_register_resv_region
- take into account the change in the struct virtio_iommu_probe_resv_mem
  definition
- We just introduce the field here. A property will be introduced later on
  at pci proxy level.
---
 hw/virtio/virtio-iommu.c         | 36 ++++++++++++++++++++++++++++++++
 include/hw/virtio/virtio-iommu.h |  1 +
 2 files changed, 37 insertions(+)

diff --git a/hw/virtio/virtio-iommu.c b/hw/virtio/virtio-iommu.c
index 4fc43494d9..324518c300 100644
--- a/hw/virtio/virtio-iommu.c
+++ b/hw/virtio/virtio-iommu.c
@@ -41,6 +41,9 @@
 #define VIOMMU_DEFAULT_QUEUE_SIZE 256
 #define VIOMMU_PROBE_SIZE 512
 
+#define IOAPIC_RANGE_START      (0xfee00000)
+#define IOAPIC_RANGE_END        (0xfeefffff)
+
 #define SUPPORTED_PROBE_PROPERTIES (\
     1 << VIRTIO_IOMMU_PROBE_T_RESV_MEM)
 
@@ -102,6 +105,30 @@ static void virtio_iommu_detach_endpoint_from_domain(viommu_endpoint *ep)
     ep->domain = NULL;
 }
 
+static void virtio_iommu_register_resv_region(viommu_endpoint *ep,
+                                              uint8_t subtype,
+                                              uint64_t start, uint64_t end)
+{
+    viommu_interval *interval;
+    struct virtio_iommu_probe_resv_mem *resv_reg_prop;
+    size_t prop_size = sizeof(struct virtio_iommu_probe_resv_mem);
+    size_t value_size = prop_size -
+                sizeof(struct virtio_iommu_probe_property);
+
+    interval = g_malloc0(sizeof(*interval));
+    interval->low = start;
+    interval->high = end;
+
+    resv_reg_prop = g_malloc0(prop_size);
+    resv_reg_prop->head.type = VIRTIO_IOMMU_PROBE_T_RESV_MEM;
+    resv_reg_prop->head.length = cpu_to_le64(value_size);
+    resv_reg_prop->subtype = cpu_to_le64(subtype);
+    resv_reg_prop->start = cpu_to_le64(start);
+    resv_reg_prop->end = cpu_to_le64(end);
+
+    g_tree_insert(ep->reserved_regions, interval, resv_reg_prop);
+}
+
 static viommu_endpoint *virtio_iommu_get_endpoint(VirtIOIOMMU *s,
                                                   uint32_t ep_id)
 {
@@ -119,6 +146,12 @@ static viommu_endpoint *virtio_iommu_get_endpoint(VirtIOIOMMU *s,
     ep->reserved_regions = g_tree_new_full((GCompareDataFunc)interval_cmp,
                                             NULL, (GDestroyNotify)g_free,
                                             (GDestroyNotify)g_free);
+    if (s->msi_bypass) {
+        virtio_iommu_register_resv_region(ep, VIRTIO_IOMMU_RESV_MEM_T_MSI,
+                                          IOAPIC_RANGE_START,
+                                          IOAPIC_RANGE_END);
+    }
+
     return ep;
 }
 
@@ -858,6 +891,9 @@ static void virtio_iommu_set_status(VirtIODevice *vdev, uint8_t status)
 
 static void virtio_iommu_instance_init(Object *obj)
 {
+    VirtIOIOMMU *s = VIRTIO_IOMMU(obj);
+
+    s->msi_bypass = true;
 }
 
 static const VMStateDescription vmstate_virtio_iommu = {
diff --git a/include/hw/virtio/virtio-iommu.h b/include/hw/virtio/virtio-iommu.h
index f55f48d304..56c8b4e57f 100644
--- a/include/hw/virtio/virtio-iommu.h
+++ b/include/hw/virtio/virtio-iommu.h
@@ -59,6 +59,7 @@ typedef struct VirtIOIOMMU {
     GTree *domains;
     QemuMutex mutex;
     GTree *endpoints;
+    bool msi_bypass;
 } VirtIOIOMMU;
 
 #endif
-- 
2.17.2


