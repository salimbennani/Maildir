Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 23 Nov 2018 08:30:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8FA62580460
	for <like.xu@linux.intel.com>; Thu, 22 Nov 2018 09:26:38 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 22 Nov 2018 09:26:38 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A+Uin2hRiaM7LwQ9rAzgViS0RhNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZBGFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+gqFVrxCvpxJi247ZYoObOfVjcq7TYd8VW3FBU91NWyBdGI6w?=
 =?us-ascii?q?c5cDA/YdMetesoLzp0EOrRy7BQS0C+3v0D5IiWPr1qAmzuQhHh/J3BY9FN8Jrn?=
 =?us-ascii?q?vUttT1O7sIXe+v0anIwivMb+lN1Dfn9ofHbxAhruuQXb5qbcXRzkwvGhrDg16N?=
 =?us-ascii?q?qoLlJyuY2voRv2WY9eZsSP+jhm09pw1vrDWixt0ghpTLi44N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZheui2AKYd7QcUvSHxytikg0L0Jo5u7cTAKyJs5wx7fbOSKc4yJ?=
 =?us-ascii?q?4hL4SOaROi10hH1jeLKinRqy9lKgyuLkWsm11lZFsDZFn8HSunwR1BHf8NWLRu?=
 =?us-ascii?q?Z+80u7xzqC2QDe5vtZLU02jabbLoQuwr80lpodq0TDGSr2lV3vjKCIc0Uk5/Gk?=
 =?us-ascii?q?5Pn5bbX4uJCcM5Z4hRr5MqQznMywHfo3MhMJU2if+OS816Ps8Vf2QbVXlvA2lq?=
 =?us-ascii?q?jZsJbHJcUUvKK5AglV0po95Ba7FTupzNMYnXwcIVJDfxKHiYfpO1fTIPziCve/?=
 =?us-ascii?q?mVusnC9xx//aJr3hHonNLn/bnbflfLZ96FBTxBA8zNBC/J9UDrABIPTuWk7+rt?=
 =?us-ascii?q?DYDxk5MxCqzObjEtlyyoQeWWfcSpKfK77Y5F+U+vo0ca7LYI4OpC27Lf8j6Pjz?=
 =?us-ascii?q?y3gjlhgYdKit2JIRL3egAvVhJV7eeHfpn5INHHkHulkDSvf3ggiHWD9Xe3HgRq?=
 =?us-ascii?q?85+3Q3BZyrCcLZS5mwjaed9CG8GJJQeyZBEF/bCmridYiPR6IRbjmPKNRqiD0O?=
 =?us-ascii?q?WOudTNoszxCl8gbnxLd9aPLO/QUXsJvi0J5+4OiX3Rwo9DcyBtmS3nulVWx4nm?=
 =?us-ascii?q?oUATQx2eQ3uEF41xKP3LZ1h9ReEtpc4e4PVR01cdbFwulnTtnoXyrHedGGTkvg?=
 =?us-ascii?q?Rc+pRXkpQ8482ZkLaldxFtGmphTC2SOwBPkSjbPPTJkv7orG0nTxLto7wHHDkO?=
 =?us-ascii?q?EjglAgB9NPNGmnnrZysQLJGoXKnl+xnryvM68b2X3j7mCGmEeUvUoQeRN/XL+N?=
 =?us-ascii?q?CX0FZ0CQpMn261nqVbKiCb07dABGzJjReeNxdtT1gAAeF7/YM9PEbjfplg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAB/5vZbhxHrdtBiHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwglASjG+LIplHgXMUGBSIUiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2BQI?=
 =?us-ascii?q?DGAmCXAMDAQIkHwopAwMBAgYBAUgIAwFTBxIFgxyCAgEEqkQzih+MCYFXP4ERh?=
 =?us-ascii?q?1mGEgKPGZBpBwKCHASPBAsYiVGHN5gwgUaCDTMaI4M8gicXjh1AMYEHHIlrVoF?=
 =?us-ascii?q?3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AeAAB/5vZbhxHrdtBiHgEGBwaBUQkLAYEwglASjG+LIpl?=
 =?us-ascii?q?HgXMUGBSIUiI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2BQIDGAmCXAMDAQIkH?=
 =?us-ascii?q?wopAwMBAgYBAUgIAwFTBxIFgxyCAgEEqkQzih+MCYFXP4ERh1mGEgKPGZBpBwK?=
 =?us-ascii?q?CHASPBAsYiVGHN5gwgUaCDTMaI4M8gicXjh1AMYEHHIlrVoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,266,1539673200"; 
   d="scan'208";a="139236573"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 22 Nov 2018 09:26:34 -0800
Received: from localhost ([::1]:48271 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gPskL-0005sk-B2
	for like.xu@linux.intel.com; Thu, 22 Nov 2018 12:26:33 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49371)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eric.auger@redhat.com>) id 1gPsb0-0005Lx-Nx
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 12:16:58 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eric.auger@redhat.com>) id 1gPsav-0006IC-5z
	for qemu-devel@nongnu.org; Thu, 22 Nov 2018 12:16:54 -0500
Received: from mx1.redhat.com ([209.132.183.28]:34919)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eric.auger@redhat.com>)
	id 1gPsae-0005xR-Pj; Thu, 22 Nov 2018 12:16:34 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 490AA88E6A;
	Thu, 22 Nov 2018 17:16:26 +0000 (UTC)
Received: from laptop.redhat.com (ovpn-116-235.ams2.redhat.com [10.36.116.235])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 06EA160610;
	Thu, 22 Nov 2018 17:16:23 +0000 (UTC)
From: Eric Auger <eric.auger@redhat.com>
To: eric.auger.pro@gmail.com, eric.auger@redhat.com, qemu-devel@nongnu.org,
	qemu-arm@nongnu.org, peter.maydell@linaro.org, mst@redhat.com,
	jean-philippe.brucker@arm.com
Date: Thu, 22 Nov 2018 18:15:30 +0100
Message-Id: <20181122171538.12359-10-eric.auger@redhat.com>
In-Reply-To: <20181122171538.12359-1-eric.auger@redhat.com>
References: <20181122171538.12359-1-eric.auger@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.25]);
	Thu, 22 Nov 2018 17:16:26 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [RFC v9 09/17] virtio-iommu: Implement translate
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: tn@semihalf.com, kevin.tian@intel.com, bharat.bhushan@nxp.com,
	peterx@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This patch implements the translate callback

Signed-off-by: Eric Auger <eric.auger@redhat.com>

---
v6 -> v7:
- implemented bypass-mode

v5 -> v6:
- replace error_report by qemu_log_mask

v4 -> v5:
- check the device domain is not NULL
- s/printf/error_report
- set flags to IOMMU_NONE in case of all translation faults
---
 hw/virtio/trace-events   |  1 +
 hw/virtio/virtio-iommu.c | 57 +++++++++++++++++++++++++++++++++++++++-
 2 files changed, 57 insertions(+), 1 deletion(-)

diff --git a/hw/virtio/trace-events b/hw/virtio/trace-events
index b3c5c2604e..1f0e143b55 100644
--- a/hw/virtio/trace-events
+++ b/hw/virtio/trace-events
@@ -68,3 +68,4 @@ virtio_iommu_put_domain(uint32_t domain_id) "Free domain=%d"
 virtio_iommu_unmap_left_interval(uint64_t low, uint64_t high, uint64_t next_low, uint64_t next_high) "Unmap left [0x%"PRIx64",0x%"PRIx64"], new interval=[0x%"PRIx64",0x%"PRIx64"]"
 virtio_iommu_unmap_right_interval(uint64_t low, uint64_t high, uint64_t next_low, uint64_t next_high) "Unmap right [0x%"PRIx64",0x%"PRIx64"], new interval=[0x%"PRIx64",0x%"PRIx64"]"
 virtio_iommu_unmap_inc_interval(uint64_t low, uint64_t high) "Unmap inc [0x%"PRIx64",0x%"PRIx64"]"
+virtio_iommu_translate_out(uint64_t virt_addr, uint64_t phys_addr, uint32_t sid) "0x%"PRIx64" -> 0x%"PRIx64 " for sid=%d"
diff --git a/hw/virtio/virtio-iommu.c b/hw/virtio/virtio-iommu.c
index 23f7dc6f7f..af90413b37 100644
--- a/hw/virtio/virtio-iommu.c
+++ b/hw/virtio/virtio-iommu.c
@@ -480,19 +480,74 @@ static IOMMUTLBEntry virtio_iommu_translate(IOMMUMemoryRegion *mr, hwaddr addr,
                                             int iommu_idx)
 {
     IOMMUDevice *sdev = container_of(mr, IOMMUDevice, iommu_mr);
+    VirtIOIOMMU *s = sdev->viommu;
     uint32_t sid;
+    viommu_endpoint *ep;
+    viommu_mapping *mapping;
+    viommu_interval interval;
+    bool bypass_allowed;
+
+    interval.low = addr;
+    interval.high = addr + 1;
 
     IOMMUTLBEntry entry = {
         .target_as = &address_space_memory,
         .iova = addr,
         .translated_addr = addr,
-        .addr_mask = ~(hwaddr)0,
+        .addr_mask = (1 << ctz32(s->config.page_size_mask)) - 1,
         .perm = IOMMU_NONE,
     };
 
+    bypass_allowed = virtio_has_feature(s->acked_features,
+                                        VIRTIO_IOMMU_F_BYPASS);
+
     sid = virtio_iommu_get_sid(sdev);
 
     trace_virtio_iommu_translate(mr->parent_obj.name, sid, addr, flag);
+    qemu_mutex_lock(&s->mutex);
+
+    ep = g_tree_lookup(s->endpoints, GUINT_TO_POINTER(sid));
+    if (!ep) {
+        if (!bypass_allowed) {
+            error_report("%s sid=%d is not known!!", __func__, sid);
+        } else {
+            entry.perm = flag;
+        }
+        goto unlock;
+    }
+
+    if (!ep->domain) {
+        if (!bypass_allowed) {
+            qemu_log_mask(LOG_GUEST_ERROR,
+                          "%s %02x:%02x.%01x not attached to any domain\n",
+                          __func__, PCI_BUS_NUM(sid), PCI_SLOT(sid), PCI_FUNC(sid));
+        } else {
+            entry.perm = flag;
+        }
+        goto unlock;
+    }
+
+    mapping = g_tree_lookup(ep->domain->mappings, (gpointer)(&interval));
+    if (!mapping) {
+        qemu_log_mask(LOG_GUEST_ERROR,
+                      "%s no mapping for 0x%"PRIx64" for sid=%d\n",
+                      __func__, addr, sid);
+        goto unlock;
+    }
+
+    if (((flag & IOMMU_RO) && !(mapping->flags & VIRTIO_IOMMU_MAP_F_READ)) ||
+        ((flag & IOMMU_WO) && !(mapping->flags & VIRTIO_IOMMU_MAP_F_WRITE))) {
+        qemu_log_mask(LOG_GUEST_ERROR,
+                      "Permission error on 0x%"PRIx64"(%d): allowed=%d\n",
+                      addr, flag, mapping->flags);
+        goto unlock;
+    }
+    entry.translated_addr = addr - mapping->virt_addr + mapping->phys_addr;
+    entry.perm = flag;
+    trace_virtio_iommu_translate_out(addr, entry.translated_addr, sid);
+
+unlock:
+    qemu_mutex_unlock(&s->mutex);
     return entry;
 }
 
-- 
2.17.2


