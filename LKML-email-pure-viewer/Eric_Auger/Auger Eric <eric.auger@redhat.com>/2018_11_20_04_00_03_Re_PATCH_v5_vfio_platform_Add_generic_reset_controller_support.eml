Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 20 Nov 2018 00:35:14 -0000
Received: from icoremail.net (unknown [209.85.214.172])
	by mail-app4 (Coremail) with SMTP id cS_KCgD3_9tsFvNb8ivaAQ--.31538S3;
	Tue, 20 Nov 2018 04:00:45 +0800 (CST)
Received: from mail-pl1-f172.google.com (unknown [209.85.214.172])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD320dnFvNbdf9ZAA--.15129S3;
	Tue, 20 Nov 2018 04:00:39 +0800 (CST)
Received: by mail-pl1-f172.google.com with SMTP id y6-v6so7510651plt.3
        for <xuliker@zju.edu.cn>; Mon, 19 Nov 2018 12:00:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=ZfIogOm6GVE9I1AwvLQ9LCWeJQk/FVcadn4xV7Iyrsw=;
        b=W6wTx9yqA8o7RYbjlPvIZPfXGpdicSQCF/5DkWkLWcqKzfYZa7lvL/rKkOqu8x2aM+
         +wruC3HS2M5SwWHGK8cArvwjyu8RCV8xpKPYeFUSuLR8++S0wPBLOXnKcArYr9UxaTU8
         eZENTGxzXtJjYF7xv2mnJwisvgfa9zwCDZbMliAPiH2A5vODcEgJkZQMbOW/t68mqq00
         zX1JSYZUQJU4sB+vESNKbOjGJUVPVFFyKqxwTLru9CtqUGqqbBLKBL0yEJZJLxFmXA5p
         k1jJizBmTVJ/sJTSKebdco/WNfBzWQRFUPAlCGAJz9hOtUpIrnIqxJFkMNBxJ/MHX+mK
         UZiA==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
X-Gm-Message-State: AGRZ1gKsXcNezGlfS/CjM3W5HEqVAT5KOKNvpKTjK85E5tYtDeqv11pR
	WNNd5Y6NJdLoDlW+bW2OB3DZGMvL4bLxlPbWTLAYyOaBSO6AY40=
X-Received: by 2002:a17:902:7e44:: with SMTP id a4mr23770211pln.338.1542657639450;
        Mon, 19 Nov 2018 12:00:39 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:d106:0:0:0:0 with SMTP id l6-v6csp3110233pju;
        Mon, 19 Nov 2018 12:00:38 -0800 (PST)
X-Google-Smtp-Source: AJdET5cuYqOSjfAoaFKi1+sMgocByNFTjMraINErZNbkdJggO76P11Ouz1jG+oUQ9SfvlXmapNhv
X-Received: by 2002:a63:e001:: with SMTP id e1mr21470182pgh.39.1542657638200;
        Mon, 19 Nov 2018 12:00:38 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1542657638; cv=none;
        d=google.com; s=arc-20160816;
        b=evOC+VZL8g2Jtzu0EgN63c84PjYlik/5aWGVoyRcgGmHwVA6S2z8rre/9g1lakzS+t
         uVD+AqXCd1ggOO6UM3j8ue4yxRpvSBqbwuSOKNl+eWFlihXZeFrTPcrnYtsA2R/n/JaN
         t8fOW7eA1D2T4LBDQoysGHZ8CYeC1GGlM4vxWhPez5oJOxQ4yRKLKAsZdOnP7oRaWOQT
         LVA+TdzWcJG0hpKih+/odXsRc8IMBYBE5+R/hxs2NJdiyfa4OPNL7Q9mA+n4U1aqgG/o
         1G3c4tVsza8prfXo3hCG7ZKv4JiOGG529VUob8g1XoZSs+rHi/lWVVyOW2CZqacIU8uP
         R+SQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=ZfIogOm6GVE9I1AwvLQ9LCWeJQk/FVcadn4xV7Iyrsw=;
        b=WljjGIdK0QxUGbsMpuI5Y2xQ+Qb89JC2x6BJo5wFapn+YcYnkOMF6Tp0rQ6kFi4bTJ
         l9aOZRiTEu2yA6PcD42fST+UNteR5SUC4R0wyO6TVKbY7H5vHuPYEvx8UqbhqQVXp9gg
         U6wfHTIXRt1Piem7OxP67E5tGtQtQVVG+Z32NR5U2pIp6E5ouPuSM4F+AQ3x0H4KzJa2
         HAmu0RZFIQQ32w5b9j2PkuHZKfXzqPM+Tb8d1ewrt85GXLbLUu+AI5v885i2lnYYZNx5
         TnpscJ/dS8l7Ybsu1HbWewLnR25giI2CV1tUBznIfLscTTEpo9bFztbIKPZjRL/3zx4h
         QmaQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org;
       dmarc=fail (p=NONE sp=NONE dis=NONE) header.from=redhat.com
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d10si3644345pgf.136.2018.11.19.12.00.20;
        Mon, 19 Nov 2018 12:00:38 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730531AbeKTGZ2 (ORCPT <rfc822;nullbytes00@gmail.com>
        + 99 others); Tue, 20 Nov 2018 01:25:28 -0500
Received: from mx1.redhat.com ([209.132.183.28]:64763 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725963AbeKTGZ2 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 20 Nov 2018 01:25:28 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com [10.5.11.22])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 148DC309706C;
        Mon, 19 Nov 2018 20:00:16 +0000 (UTC)
Received: from [10.36.116.185] (ovpn-116-185.ams2.redhat.com [10.36.116.185])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id EA89B105706A;
        Mon, 19 Nov 2018 20:00:04 +0000 (UTC)
Subject: Re: [PATCH v5] vfio: platform: Add generic reset controller support
To: Geert Uytterhoeven <geert@linux-m68k.org>
Cc: Geert Uytterhoeven <geert+renesas@glider.be>,
        Alex Williamson <alex.williamson@redhat.com>,
        Philipp Zabel <p.zabel@pengutronix.de>,
        KVM list <kvm@vger.kernel.org>,
        Linux-Renesas <linux-renesas-soc@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
References: <20181113131508.18246-1-geert+renesas@glider.be>
 <12064722-6e85-c40c-12c9-7c7d4e1e2677@redhat.com>
 <CAMuHMdV8UXPVMcQx17rwVrnQ8XnE6jhproTwO4SY=WnPT+2Hyg@mail.gmail.com>
From: Auger Eric <eric.auger@redhat.com>
Message-ID: <85923f50-df2b-3946-7d76-692d6e143276@redhat.com>
Date: Mon, 19 Nov 2018 21:00:03 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <CAMuHMdV8UXPVMcQx17rwVrnQ8XnE6jhproTwO4SY=WnPT+2Hyg@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.43]); Mon, 19 Nov 2018 20:00:16 +0000 (UTC)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD320dnFvNbdf9ZAA--.15129S3
Authentication-Results: mail-app4; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3WFykXF1furW3XF1kCr15urg_yoW3GryrpF
	WUGFW3tF48Wr1Utr42vw1UZFWYvF43tw1UWr9xG3W2k3s0vr9xJryFkF1FkF9rAr18Ca4Y
	yF47GF4fuFyY9FJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmYb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_AwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI
	8IcVAFwI0_Xr0_Ar1lcIIF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280
	aVAFwI0_GcCE3s1lcIIF0xvEx4A2jsIEc7CjxVAFwI0_GcCE3s1l42xK82IYc2Ij64vIr4
	1l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_Gr1l
	x2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17CE14
	v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW8JVW3JbIYCTnIWIev
	Ja73UjIFyTuYvjxUHCztDUUUU

Hi Geert,
On 11/19/18 8:24 PM, Geert Uytterhoeven wrote:
> Hi Eric,
> 
> On Mon, Nov 19, 2018 at 11:52 AM Auger Eric <eric.auger@redhat.com> wrote:
>> On 11/13/18 2:15 PM, Geert Uytterhoeven wrote:
>>> Vfio-platform requires dedicated reset support, provided either by ACPI,
>>> or, on DT platforms, by a device-specific reset driver matching against
>>> the device's compatible value.
>>>
>>> On many SoCs, devices are connected to an SoC-internal reset controller.
>>> If the reset hierarchy is described in DT using "resets" properties, or
>>> in lookup tables in platform code, and devices have exactly one
>>> dedicated reset each, such devices can be reset in a generic way through
>>> the reset controller subsystem.  Hence add support for this, avoiding
>>> the need to write device-specific reset drivers for each single device
>>> on affected SoCs.
>>>
>>> Devices that do require a more complex reset procedure can still provide
>>> a device-specific reset driver, as that takes precedence.
>>>
>>> Note that this functionality depends on CONFIG_RESET_CONTROLLER=y, and
>>> becomes a no-op (as in: "No reset function found for device") if reset
>>> controller support is disabled.
>>>
>>> Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
>>> Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
>>> Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
>>> ---
>>> This depends on "[PATCH] reset: Add reset_control_get_count()"
>>> (https://lore.kernel.org/lkml/20181113124744.7769-1-geert+renesas@glider.be/).
>>>
>>> v5:
>>>   - Use reset_control_get_exclusive() instead of rejected
>>>     reset_control_get_dedicated(), as exclusive already implies a
>>>     dedicated reset line,
>>>   - Ensure the device has exactly one reset,
>>>
>>> v4:
>>>   - Add Reviewed-by,
>>>   - Use new RFC reset_control_get_dedicated() instead of
>>>     of_reset_control_get_exclusive(), to (a) make it more generic, and
>>>     (b) make sure the reset returned is really a dedicated reset, and
>>>     does not affect other devices,
>>>
>>> v3:
>>>   - Add Reviewed-by,
>>>   - Merge similar checks in vfio_platform_has_reset(),
>>>
>>> v2:
>>>   - Don't store error values in vdev->reset_control,
>>>   - Use of_reset_control_get_exclusive() instead of
>>>     __of_reset_control_get(),
>>>   - Improve description.
>>> ---
>>>  drivers/vfio/platform/vfio_platform_common.c  | 29 +++++++++++++++++--
>>>  drivers/vfio/platform/vfio_platform_private.h |  1 +
>>>  2 files changed, 28 insertions(+), 2 deletions(-)
>>>
>>> diff --git a/drivers/vfio/platform/vfio_platform_common.c b/drivers/vfio/platform/vfio_platform_common.c
>>> index c0cd824be2b767be..ce2aad8e0a8159f9 100644
>>> --- a/drivers/vfio/platform/vfio_platform_common.c
>>> +++ b/drivers/vfio/platform/vfio_platform_common.c
>>> @@ -18,6 +18,7 @@
>>>  #include <linux/module.h>
>>>  #include <linux/mutex.h>
>>>  #include <linux/pm_runtime.h>
>>> +#include <linux/reset.h>
>>>  #include <linux/slab.h>
>>>  #include <linux/types.h>
>>>  #include <linux/uaccess.h>
>>> @@ -113,11 +114,14 @@ static bool vfio_platform_has_reset(struct vfio_platform_device *vdev)
>>>       if (VFIO_PLATFORM_IS_ACPI(vdev))
>>>               return vfio_platform_acpi_has_reset(vdev);
>>>
>>> -     return vdev->of_reset ? true : false;
>>> +     return vdev->of_reset || vdev->reset_control;
>>>  }
>>>
>>>  static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
>>>  {
>>> +     struct reset_control *rstc;
>>> +     int count;
>>> +
>>>       if (VFIO_PLATFORM_IS_ACPI(vdev))
>>>               return vfio_platform_acpi_has_reset(vdev) ? 0 : -ENOENT;
>>>
>>> @@ -128,8 +132,24 @@ static int vfio_platform_get_reset(struct vfio_platform_device *vdev)
>>>               vdev->of_reset = vfio_platform_lookup_reset(vdev->compat,
>>>                                                       &vdev->reset_module);
>>>       }
>>> +     if (vdev->of_reset)
>>> +             return 0;
>>> +
>>> +     /* Generic reset handling needs a single, dedicated reset line */
>>> +     count = reset_control_get_count(vdev->device);
>>> +     if (count < 0)
>>> +             return count;
>>> +
>>> +     if (count != 1)
>>> +             return -EINVAL;
>>>
>>> -     return vdev->of_reset ? 0 : -ENOENT;
>>> +     rstc = reset_control_get_exclusive(vdev->device, NULL);
>>
>> So I understand the semantics of reset_control_get_exclusive() is now
>> agreed and this means the reset line is not shared with other devices,
>> correct?
> 
> Yes, it has been clarified that the intended semantics of an exclusive
> reset are that the reset line is not shared with other devices.
> However, currently the reset controller subsystem does not enforce this.
> 
> Given the clarification, this is something to fix in the reset
> controller subsystem, and thus orthogonal to this vfio patch.
> My patch "[PATCH v3] reset: Exclusive resets must be dedicated to a
> single hardware block"
> (https://lore.kernel.org/lkml/20181113133520.20889-1-geert+renesas@glider.be/)
> is meant to fix this.

OK thank you for the clarification. So from a functional point of view I
would consider the above patch is a dependency that needs to be resolved
before getting this upstreamed.
> 
>> A question about the usage of reset_control_get_count(). Why is it an
>> issue if the count is > 1? Does it check there are several reset lines,
>> each of then being used for resetting something different or does it
>> check there are several reset controllers are able to do the reset job?
>> My point behind is what's the issue as long as one non shared line can
>> be grabbed with reset_control_get_exclusive().
> 
> A device may have multiple resets[*].  If this is the case, a specific
> procedure (e.g. reset order) may be needed to reset the device fully.
> Assuming that just asserting the first reset will do the job may lead
> to failure.
> Hence the generic method, which is the target of my patch, should only
> be applied for devices with a single reset.
> Devices that do require a more complex reset procedure can still provide
> a device-specific reset driver, as that takes precedence.
> 
> [*] git grep "\<resets\>.*=.*," -- "*dts*" gives +200 hits.

OK understood, this fully clarifies.
> 
>>> +     if (!IS_ERR(rstc)) {
>>> +             vdev->reset_control = rstc;
>>> +             return 0;
>>> +     }
>>> +
>>> +     return PTR_ERR(rstc);
>>>  }
>>>
>>>  static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
>>> @@ -139,6 +159,8 @@ static void vfio_platform_put_reset(struct vfio_platform_device *vdev)
>>>
>>>       if (vdev->of_reset)
>>>               module_put(vdev->reset_module);
>>> +
>>> +     reset_control_put(vdev->reset_control);
>>
>> Most of the drivers use devm_reset_control_get_exclusive(), can't we use
>> that instead and benefit from the fact the reset_control_put() is called
>> automatically on driver detach?
> 
> Yes, we could use devm_reset_control_get_exclusive() instead.
> Given we still need manual release of a device-specific reset_module,
> and a manual call to vfio_iommu_group_put(), it wouldn't simplify the error
> and removal path much, though, and even lead to confusion.
Yep I don't have a strong opinion here, as long as the put is done ;-)

With respect to that patch and as long as "[PATCH v3] reset: Exclusive
resets must be dedicated to a single hardware block" functionality is
enforced,

Acked-by: Eric Auger <eric.auger@redhat.com>

Thanks

Eric
> 
> Gr{oetje,eeting}s,
> 
>                         Geert
> 
