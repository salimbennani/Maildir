Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:44:14 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BE3545805CF;
	Tue, 18 Dec 2018 14:08:21 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Dec 2018 14:08:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AaIhlgRKDBirkVR/Hx9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/z9rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIAOUOIelWr5Llp1YMtha+GQqhCfnzxjJSmnP736s32PkhHwHc2wwgGsoDvW?=
 =?us-ascii?q?jOrNXzLqgSVf26zK7VxjjddfxWwyn955LMchAhpvGHQK9/ftTMwkcoCQzFilKQ?=
 =?us-ascii?q?opHiMjyPyusNtnaU4vFjVe2xkW4nrR9+ojy1yscrkInJiZsYx1bZ/it3x4Y1IM?=
 =?us-ascii?q?e3SE99YdO8E5tfqTuaN41oTcMmWW1ovzw6yrIAtJWmfyYK0IwqywDDZ/GDaYSE?=
 =?us-ascii?q?/xzuWPiLLTtlh39pZKizihew/ES41+HxVc253ExFoyZZiNXAq2wB2wHJ5sSaTP?=
 =?us-ascii?q?Z2412v1iyV1w/J7+FJOUA0mrTfK54m2rMwiJUTvlrZHiPsm0X5krWWdkM69eis?=
 =?us-ascii?q?8ejnZa/mppCEO491jAHxLLgul9ShDegkNgUCRXWX9Oqi2LH54EH0Q6lGguc3n6?=
 =?us-ascii?q?TbqJzaIN4Upq+9Aw9byIYj7BO/Ai+i0NQZm3kHMV1EdAuEj4f3IVHOJu73DfOm?=
 =?us-ascii?q?j1SrnjZrwe7JPqf6D5XTIXjMjq3hcax+60FC0gozy85Q55ZOBrEGOvLzVVf9tM?=
 =?us-ascii?q?bEAR8hLwy03+HnBc151oMfWmKAHLWVMazPsVKT4uIvIu+MZJIauTrnKvgl4eLu?=
 =?us-ascii?q?gmE9mVMHYaap2p4XYmiiHvt6O0WZfWbsgtAZHGcKpAU+TfDqh0eFUTJJZ3ayQr?=
 =?us-ascii?q?gz5jc0CI+9CYfDR4atgKGO3SuhH51WYHxGBU6IEXvya4qEXPIMYjqIIsB9ijwE?=
 =?us-ascii?q?SaShS4g52BGssw/11aBrLunT+i0es5Lj08N45+nSlRE06Dx1AN6R02CLT2FogG?=
 =?us-ascii?q?wIQyU607x4oUx40l2Dy7R3g+REFdxP4PNESh01NYXcz+x9CND+QBjBcc2LSFu9?=
 =?us-ascii?q?RtWmADcxTs8+wtMUYkZ9HcmigQ7H3yawH7AVkLmLDoQu8q3Ax3jxO9p9y3He2a?=
 =?us-ascii?q?kilVYmRNFDNWmnhqFl8QjTCJXEk0GYl6asaKQd0zTB9GaFzWqSok5YVBR8XrnC?=
 =?us-ascii?q?XXAafkHWt8j25lveT7+yDrQqKhZOxtScKqRUcNHpjU9JRPH4ONvAZWK9nGOwBR?=
 =?us-ascii?q?WNxrOId4fqf2Qd3CPACEkLiQwT/HCGNRQgCSeluW7REDtuFVf3aUP27eZ+sG+7?=
 =?us-ascii?q?TlMzzwySckJuzaS19QAPifycUfwT2KkEtzknqzhvGFa93tTWC8ePpgZ7faVcZ8?=
 =?us-ascii?q?8970lD1W7DqwN9OZmgJbh4hlECawR3o1/u1xJvB4VckMgqqXQqzBZyKaOYyl9B?=
 =?us-ascii?q?aymU3ZfqOr3TK2ny+h+vZrXS2lHf1taW56gO5O45q1XloAGmCE4i/2973NlS1n?=
 =?us-ascii?q?uW/o/KAxYKUZLtTkY38AB3qKveYiYj6ILby31tPbOvvT/fxt0mHu0lyhWnf9dB?=
 =?us-ascii?q?K66EEA7yE8sHB8mhMuAqml6pbg4aM+BW7qI7I8Smd/6e0q6xIOlghC6mjXhA4I?=
 =?us-ascii?q?1l0kOM6jBwRfLS05cEw/GXxA2HVzjngVels8D3n51EZD4IEmq+zyjkGJBeZqlo?=
 =?us-ascii?q?cYkXDmeuJtW9xs9iiJ71R35Y6FmjCksc2M+oZRWddUb90hBX1UgNp3yohzG4zz?=
 =?us-ascii?q?1tnz41tKWf2DHBzPr4dBoAPG5GX21ijVbqIYipgNEWRkmobw41lBS74Ub23bRU?=
 =?us-ascii?q?pKN6L2PLW0dHYzD2L31+Uqu3rreDY89P5IkosClNS+S8fFaaR6X5oxsb1SPjAm?=
 =?us-ascii?q?RfyCo6dzGsppX2gRh6hHiBI3Z0qXrTYdtwygvH5NzAWf5R2SILRCtihjnNBVi8?=
 =?us-ascii?q?PN6p8c+Pl5jZseC+VGOhVptNfint1o6AsCq75Wt3ARywhfyzm9vnERQk3i//zd?=
 =?us-ascii?q?VlSSLIrBPkaInxy6u6Kf5nflVvBFLk68t1AIZ+npEyhJER33gXnZGV/XsBkWfu?=
 =?us-ascii?q?PtRXw6P+bHwRRTEVx97Z+hTq2EpmLniR3YL2Sm2dwtd9Z9m9em4W2Tgy78FQBK?=
 =?us-ascii?q?eU8bxLhy11olWjoALVYPh9mCodyPQ05H4bheEJpBQiziGHDr8OGklYODTmlw6U?=
 =?us-ascii?q?4NCmsKVXeGGvfKC11Ep/ntCuFquOow9CV3biZpctAzVw4d5hP1LW333+8YXkeN?=
 =?us-ascii?q?jWbdIOuRyYiRbAj+5JKJ0vkvoGnzZoOWX4vXc90e40kQRu3Y2mvIiAM2ht4KW5?=
 =?us-ascii?q?AhtCOjz0fcwT/Cztjb1FnsaXxI2vGpRhGjMWXJrnV/6oETQStej5OAaKCjEztn?=
 =?us-ascii?q?CbGb/HFw+F9Ehmt27PE4ysN3yPP3YW19JiRB2AJEBFhAAUQS43npo4FgCs2czg?=
 =?us-ascii?q?f1115jEX5l7ktBRMzvhkOAX4UmfavA2ocCs7SICDLBpK6QFP/0XVPtab7u1tBC?=
 =?us-ascii?q?FU5IGhoBaOKmyGZARIEGcJVVafB134Ormu5N/A8/WXB+akLvvOZ6mOpvJaV/uS?=
 =?us-ascii?q?2Z2v1Y5m9S6WNsqTJnliE+E72k1bUHF5HMTZhiwPSzENmCLLdcKbvxC8+it4rs?=
 =?us-ascii?q?2k9PTrWQTv5ZaACrdIMNVv/Qy2jrmHN+KKmCl5LjNY3IsWxXDU0LgfwEISiyZ2?=
 =?us-ascii?q?ejmtD7sAtC3NTKHRmqNNDB4bcSRzNMRW4KImwwlNItXWitf01r5+k/40BE1JVV?=
 =?us-ascii?q?3nmsG1e8MKJ3uxO0/ABEaOLL6GPyHEw9nrYaOgTr1dlP9btwCrtjaBDUDiPi6P?=
 =?us-ascii?q?lz3oVx20NeFMjSebPAFRuY2ncxZtD3TjQ8ziahGhLNB3ijg2y6UuhnzWLW4cLS?=
 =?us-ascii?q?R8c0RVo72M7CNYh+9zFHBb4nV5LemLhSCZ4vLcKpYXt/trHyt1m/hb4HQ817ta?=
 =?us-ascii?q?8iVESOZplyvVq95ku0umnfWXyjp7TBpOrS5GhYKRskVkPKXZ959AVm7F/RIN92?=
 =?us-ascii?q?qQDRsKqsBhCt3uvaBQ19fOmLjyKDdE79Lb488cC9LIJ8KANXpyeSbuTR/SAwxN?=
 =?us-ascii?q?aDmvM2jFzxhYkfed8VWWo4I8p5yqn4ABHOx1TlswQ9oADE1hENtKC55tQDogkb?=
 =?us-ascii?q?nTgMNAwHe6q1GFTc5fs7jEW+iUDPGpLyyW2+oXLyAUyK/1eNxAfrbw3FZvPxwj?=
 =?us-ascii?q?xNzH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ATAACDbxlch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBVQWBD4ECFBODfYgZi3uCIWiNSYkVgXcRGAcMAYFLhVIiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKSMMgjYkAYJpAhcJBAsBDQEBMgUBBQkCGAQIAhgOAgIDR?=
 =?us-ascii?q?hQMBwWCUksBgXMNAgMKpiBwfDOCdgEBBYEwAYV4CIELhnODJYEcF4F/gRGCFEm?=
 =?us-ascii?q?FIIMegleJJCQHIYFNhBeRUgmHD4pFDBiBXU2EUoMxhyqKSYtxgzmBRoIOTTAIg?=
 =?us-ascii?q?ycJghIMF4hegT0gg3wmMoEFAQGNYAEB?=
X-IPAS-Result: =?us-ascii?q?A0ATAACDbxlch0O0hNFjHQEBBQEHBQGBUQgBCwGBVQWBD4E?=
 =?us-ascii?q?CFBODfYgZi3uCIWiNSYkVgXcRGAcMAYFLhVIiNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKSMMgjYkAYJpAhcJBAsBDQEBMgUBBQkCGAQIAhgOAgIDRhQMBwWCUksBgXM?=
 =?us-ascii?q?NAgMKpiBwfDOCdgEBBYEwAYV4CIELhnODJYEcF4F/gRGCFEmFIIMegleJJCQHI?=
 =?us-ascii?q?YFNhBeRUgmHD4pFDBiBXU2EUoMxhyqKSYtxgzmBRoIOTTAIgycJghIMF4hegT0?=
 =?us-ascii?q?gg3wmMoEFAQGNYAEB?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="scan'208";a="45528517"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 14:08:19 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727565AbeLRWIP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 17:08:15 -0500
Received: from mail.kernel.org ([198.145.29.99]:35974 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727174AbeLRWIO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 17:08:14 -0500
Received: from quaco.ghostprotocols.net (unknown [189.40.101.1])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id DB49A217D9;
        Tue, 18 Dec 2018 22:08:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1545170892;
        bh=AXtE5eTkeRaGUciwhwyo5cHecuBw+utrJZPQet+plXE=;
        h=From:To:Cc:Subject:Date:From;
        b=EJUbzFyA3Vr6FQHKl2Xm31aXjaoRoW7wpOwmOkRtaH8OJer+ennvjW6m5CVIiTl/u
         dfZzrsfHLDPjPGW3YJaDBt9v1PZDx1XJAvq0zk0XHxMMauv3df/ioCjQbQFFASMO7F
         CAAO2sWk7VO5bArnQuI1I8mCmz25PFTVJW1xIW5s=
From: Arnaldo Carvalho de Melo <acme@kernel.org>
To: Ingo Molnar <mingo@kernel.org>
Cc: Clark Williams <williams@redhat.com>, linux-kernel@vger.kernel.org,
        linux-perf-users@vger.kernel.org,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        Adrian Hunter <adrian.hunter@intel.com>,
        Leo Yan <leo.yan@linaro.org>,
        Mathieu Poirier <mathieu.poirier@linaro.org>,
        Michael Petlan <mpetlan@redhat.com>,
        Steven Rostedt <rostedt@goodmis.org>,
        Arnaldo Carvalho de Melo <acme@redhat.com>
Subject: [GIT PULL 00/63] perf/core improvements and fixes
Date: Tue, 18 Dec 2018 19:06:30 -0300
Message-Id: <20181218220733.15839-1-acme@kernel.org>
X-Mailer: git-send-email 2.19.2
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Ingo,

	Please consider pulling,

Best regards,

- Arnaldo

Test results at the end of this message, as usual.

The following changes since commit ca46afdb2754dbb4a5d5772332fa16957d9bc618:

  Merge tag 'perf-core-for-mingo-4.21-20181217' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux into perf/core (2018-12-18 14:39:00 +0100)

are available in the Git repository at:

  git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux.git tags/perf-core-for-mingo-4.21-20181218

for you to fetch changes up to 89a0948984896352cac1ebe079cb3d64d6c3adc6:

  tools uapi asm: Update asm-generic/unistd.h copy (2018-12-18 16:17:41 -0300)

----------------------------------------------------------------
perf/core improvements and fixes:

- Implement BPF based syscall filtering in 'perf trace', using BPF maps and
  the augmented_raw_syscalls.c BPF proggie (Arnaldo Carvalho de Melo)

- Allow specifying in .perfconfig a set of events use in 'perf trace' in
  addition to any other specified from the command line. This initially
  will be used to always use the augmented_raw_syscalls.o precompiled
  BPF program for getting pointer contents. (Arnaldo Carvalho de Melo)

- Allow fine grained control about how the syscall output should be
  formatted. This will be used to allow producing the same output produced
  by the 'strace' tool, to then use in regression tests comparing the
  output of 'perf trace' with the one produced from 'strace' (Arnaldo Carvalho de Melo)

- Beautify the renameat2 olddirfd, newdirfd and flags arguments (Arnaldo Carvalho de Melo)

- Beautify arch_prctl 'code' syscall arg (Arnaldo Carvalho de Melo)

- Beautify fadvise64 'advice' syscall arg (Arnaldo Carvalho de Melo)

- Relax checks on perf-PID.map ownership, resulting in symbols in
  executable anonymous maps setup by JITs in things like node.js to
  be resolved in a 'perf top' session run by root without the need
  for --force to be used (Arnaldo Carvalho de Melo)

- Update asm-generic/unistd.h copy (Arnaldo Carvalho de Melo)

- Do not use the first and last symbols when setting up address filters in
  auxtrace, this fails when we don't have a symbol table, filter the entire
  area based on the dso size. (Adrian Hunter)

- Do not use kernel headers to build libsubcmd, we shouldn't use
  anything from outside tools/, fixes the build with the Android NDK (Arnaldo Carvalho de Melo)

- Add several prototypes for systems lacking those, such as open_memstream(),
  sigqueue(), fixing warnings building with Android's bionic libc that were
  preventing the use of -Werror there (Arnaldo Carvalho de Melo)

- Use LDFLAGS in the libtraceevent build commands, allowing developers
  to override its values (Jiri Olsa)

- Link libperf-jvmti.so with LDFLAGS variable, allowing distro
  packages to propagate its settings when building this library (Jiri Olsa)

- cs-etm (ARM CoreSight) fixes: (Leo Yan)

  - Correct packets swapping in cs_etm__flush()
  - Avoid stale branch samples when flush packet
  - Remove unused 'trace_on' in cs_etm_decoder
  - Refactor enumeration cs_etm_sample_type
  - Rename CS_ETM_TRACE_ON to CS_ETM_DISCONTINUITY
  - Treat NO_SYNC element as trace discontinuity
  - Treat EO_TRACE element as trace discontinuity
  - Generate branch sample for exception packet

- Use shebangs in the 'perf test' shell scripts, making them identifiable as
  shell scripts (Michael Petlan)

- Avoid segfaults caused by negated options in 'perf stat' (Michael Petlan)

- Fix processing of dereferenced args in bprintk events in libtracevent (Steven Rostedt)

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

----------------------------------------------------------------
Adrian Hunter (2):
      perf dso: Export data_file_size() method there are no symbols
      perf auxtrace: Alter addr_filter__entire_dso() to work if there are no symbols

Arnaldo Carvalho de Melo (48):
      perf trace: Rename delivery functions to ease making ordered_events selectable
      perf trace: Allow selecting use the use of the ordered_events code
      perf trace beauty: Beautify renameat2's fd arg wrt AT_FDCWD
      perf beauty: Add a string table generator for renameat2's flags constants
      perf beauty: Wire up the renameat flags table generator to the Makefile
      perf trace: Beautify renameat2's flags argument
      perf trace beauty: renameat's newdirfd may also be AT_FDCWD
      tools lib subcmd: Don't add the kernel sources to the include path
      perf tools: Add missing sigqueue() prototype for systems lacking it
      perf header: Fix up argument to ctime()
      perf tools: Add missing open_memstream() prototype for systems lacking it
      perf tools: Cast off_t to s64 to avoid warning on bionic libc
      perf trace: Rename set_ev_qualifier_filter to clarify its a tracepoint filter
      perf trace: Avoid using raw_syscalls in duplicity with eBPF augmentation
      perf trace: Implement syscall filtering in augmented_syscalls
      perf bpf: Move perf_event_output() from stdio.h to bpf.h
      perf augmented_syscalls: Switch to using a struct for the syscalls map values
      perf trace: Switch to using a struct for the aumented_raw_syscalls syscalls map values
      perf augmented_raw_syscalls: Do not include stdio.h
      perf trace: Allow specifying a set of events to add in perfconfig
      perf trace: Allow configuring if zeroed syscall args should be printed
      perf trace: Allow configuring if the syscall duration should be printed
      perf config: Show the configuration when no arguments are provided
      perf trace: Allow configuring default for perf_event_attr.inherit
      perf trace: Allow configuring if the syscall start timestamp should be printed
      perf trace: Allow suppressing the syscall argument names
      perf trace: Make the alignment of the syscall args be configurable
      perf trace: Enclose strings with double quotes
      perf trace: Add a prefix member to the strarray class
      perf trace: Allow asking for not suppressing common string prefixes
      perf trace beauty: Print O_RDONLY when (flags & O_ACCMODE) == 0
      perf trace: Add alignment spaces after the closing parens
      perf augmented_raw_syscalls: Copy 'access' arg as well
      perf trace: Enclose the errno strings with ()
      perf trace: Show NULL when syscall pointer args are 0
      tools include arch: Grab a copy of x86's prctl.h
      perf beauty: Add a string table generator for x86's 'arch_prctl' codes
      perf beauty: Wire up the x86_arch prctl code table generator
      perf trace: Move strarrays to beauty.h for further reuse
      perf trace: When showing string prefixes show prefix + ??? for unknown entries
      perf trace beauty: Beautify arch_prctl()'s arguments
      perf beauty mmap: Print PROT_READ before PROT_EXEC to match strace output
      perf beauty mmap: Print mmap's 'offset' arg in hexadecimal
      tools headers uapi: Grab a copy of fadvise.h
      perf beauty: Add generator for fadvise64's 'advice' arg constants
      perf trace: Wire up the fadvise 'advice' table generator
      perf symbols: Relax checks on perf-PID.map ownership
      tools uapi asm: Update asm-generic/unistd.h copy

Jiri Olsa (2):
      tools lib traceevent: Use LDFLAGS in the build commands
      perf tools: Link libperf-jvmti.so with LDFLAGS variable

Leo Yan (8):
      perf cs-etm: Correct packets swapping in cs_etm__flush()
      perf cs-etm: Avoid stale branch samples when flush packet
      perf cs-etm: Remove unused 'trace_on' in cs_etm_decoder
      perf cs-etm: Refactor enumeration cs_etm_sample_type
      perf cs-etm: Rename CS_ETM_TRACE_ON to CS_ETM_DISCONTINUITY
      perf cs-etm: Treat NO_SYNC element as trace discontinuity
      perf cs-etm: Treat EO_TRACE element as trace discontinuity
      perf cs-etm: Generate branch sample for exception packet

Michael Petlan (2):
      perf tests: Use shebangs in the shell scripts
      perf stat: Avoid segfaults caused by negated options

Steven Rostedt (VMware) (1):
      tools lib traceevent: Fix processing of dereferenced args in bprintk events

 tools/arch/x86/include/uapi/asm/prctl.h            |  17 +
 tools/include/uapi/asm-generic/unistd.h            |   4 +
 tools/include/uapi/linux/fadvise.h                 |  22 ++
 tools/lib/subcmd/Makefile                          |   2 -
 tools/lib/traceevent/Makefile                      |   4 +-
 tools/lib/traceevent/event-parse.c                 |   1 +
 tools/perf/Documentation/perf-config.txt           |  32 ++
 tools/perf/Documentation/perf-trace.txt            |   6 +
 tools/perf/Makefile.config                         |   2 +
 tools/perf/Makefile.perf                           |  27 +-
 tools/perf/builtin-config.c                        |   7 +-
 tools/perf/builtin-stat.c                          |   8 +-
 tools/perf/builtin-timechart.c                     |   4 +
 tools/perf/builtin-trace.c                         | 370 ++++++++++++++++-----
 tools/perf/check-headers.sh                        |   2 +
 tools/perf/examples/bpf/augmented_raw_syscalls.c   |  33 +-
 tools/perf/include/bpf/bpf.h                       |   2 +
 tools/perf/include/bpf/stdio.h                     |   3 -
 tools/perf/tests/builtin-test.c                    |   3 +
 tools/perf/tests/shell/probe_vfs_getname.sh        |   1 +
 .../tests/shell/record+probe_libc_inet_pton.sh     |   1 +
 .../tests/shell/record+script_probe_vfs_getname.sh |   1 +
 tools/perf/tests/shell/trace+probe_vfs_getname.sh  |   1 +
 tools/perf/trace/beauty/Build                      |   2 +
 tools/perf/trace/beauty/arch_prctl.c               |  33 ++
 tools/perf/trace/beauty/beauty.h                   |  36 +-
 tools/perf/trace/beauty/clone.c                    |   7 +-
 tools/perf/trace/beauty/eventfd.c                  |   4 +-
 tools/perf/trace/beauty/fadvise.sh                 |  22 ++
 tools/perf/trace/beauty/fcntl.c                    |  22 +-
 tools/perf/trace/beauty/flock.c                    |   4 +-
 tools/perf/trace/beauty/futex_op.c                 |   8 +-
 tools/perf/trace/beauty/futex_val3.c               |   3 +-
 tools/perf/trace/beauty/ioctl.c                    |  31 +-
 tools/perf/trace/beauty/kcmp.c                     |   8 +-
 tools/perf/trace/beauty/mmap.c                     |  22 +-
 tools/perf/trace/beauty/mode_t.c                   |   4 +-
 tools/perf/trace/beauty/mount_flags.c              |   8 +-
 tools/perf/trace/beauty/msg_flags.c                |   4 +-
 tools/perf/trace/beauty/open_flags.c               |  13 +-
 tools/perf/trace/beauty/perf_event_open.c          |   4 +-
 tools/perf/trace/beauty/pkey_alloc.c               |  14 +-
 tools/perf/trace/beauty/prctl.c                    |  16 +-
 tools/perf/trace/beauty/rename_flags.sh            |  15 +
 tools/perf/trace/beauty/renameat.c                 |  19 ++
 tools/perf/trace/beauty/sched_policy.c             |   6 +-
 tools/perf/trace/beauty/seccomp.c                  |   8 +-
 tools/perf/trace/beauty/signum.c                   |   4 +-
 tools/perf/trace/beauty/sockaddr.c                 |   4 +-
 tools/perf/trace/beauty/socket.c                   |   8 +-
 tools/perf/trace/beauty/socket_type.c              |   4 +-
 tools/perf/trace/beauty/statx.c                    |  10 +-
 tools/perf/trace/beauty/waitid_options.c           |   4 +-
 tools/perf/trace/beauty/x86_arch_prctl.sh          |  26 ++
 tools/perf/util/auxtrace.c                         |  11 +-
 tools/perf/util/cs-etm-decoder/cs-etm-decoder.c    |  42 ++-
 tools/perf/util/cs-etm-decoder/cs-etm-decoder.h    |  10 +-
 tools/perf/util/cs-etm.c                           |  77 ++++-
 tools/perf/util/dso.c                              |   6 +-
 tools/perf/util/dso.h                              |   1 +
 tools/perf/util/evlist.c                           |   4 +
 tools/perf/util/header.c                           |   4 +-
 tools/perf/util/s390-cpumsf.c                      |   2 +-
 tools/perf/util/symbol.c                           |  11 -
 64 files changed, 842 insertions(+), 252 deletions(-)
 create mode 100644 tools/arch/x86/include/uapi/asm/prctl.h
 create mode 100644 tools/include/uapi/linux/fadvise.h
 create mode 100644 tools/perf/trace/beauty/arch_prctl.c
 create mode 100755 tools/perf/trace/beauty/fadvise.sh
 create mode 100755 tools/perf/trace/beauty/rename_flags.sh
 create mode 100644 tools/perf/trace/beauty/renameat.c
 create mode 100755 tools/perf/trace/beauty/x86_arch_prctl.sh

Test results:

The first ones are container based builds of tools/perf with and without libelf
support.  Where clang is available, it is also used to build perf with/without
libelf, and building with LIBCLANGLLVM=1 (built-in clang) with gcc and clang
when clang and its devel libraries are installed.

The objtool and samples/bpf/ builds are disabled now that I'm switching from
using the sources in a local volume to fetching them from a http server to
build it inside the container, to make it easier to build in a container cluster.
Those will come back later.

Several are cross builds, the ones with -x-ARCH and the android one, and those
may not have all the features built, due to lack of multi-arch devel packages,
available and being used so far on just a few, like
debian:experimental-x-{arm64,mipsel}.

The 'perf test' one will perform a variety of tests exercising
tools/perf/util/, tools/lib/{bpf,traceevent,etc}, as well as run perf commands
with a variety of command line event specifications to then intercept the
sys_perf_event syscall to check that the perf_event_attr fields are set up as
expected, among a variety of other unit tests.

Then there is the 'make -C tools/perf build-test' ones, that build tools/perf/
with a variety of feature sets, exercising the build with an incomplete set of
features as well as with a complete one. It is planned to have it run on each
of the containers mentioned above, using some container orchestration
infrastructure. Get in contact if interested in helping having this in place.

  $ dm
   1 alpine:3.4                    : Ok   gcc (Alpine 5.3.0) 5.3.0
   2 alpine:3.5                    : Ok   gcc (Alpine 6.2.1) 6.2.1 20160822
   3 alpine:3.6                    : Ok   gcc (Alpine 6.3.0) 6.3.0
   4 alpine:3.7                    : Ok   gcc (Alpine 6.4.0) 6.4.0
   5 alpine:3.8                    : Ok   gcc (Alpine 6.4.0) 6.4.0
   6 alpine:edge                   : Ok   gcc (Alpine 8.2.0) 8.2.0
   7 amazonlinux:1                 : Ok   gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)
   8 amazonlinux:2                 : Ok   gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5)
   9 android-ndk:r12b-arm          : Ok   arm-linux-androideabi-gcc (GCC) 4.9.x 20150123 (prerelease)
  10 android-ndk:r15c-arm          : Ok   arm-linux-androideabi-gcc (GCC) 4.9.x 20150123 (prerelease)
  11 centos:5                      : Ok   gcc (GCC) 4.1.2 20080704 (Red Hat 4.1.2-55)
  12 centos:6                      : Ok   gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23)
  13 centos:7                      : Ok   gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36)
  14 clearlinux:latest             : Ok   gcc (Clear Linux OS for Intel Architecture) 8.2.1 20180502
  15 debian:7                      : Ok   gcc (Debian 4.7.2-5) 4.7.2
  16 debian:8                      : Ok   gcc (Debian 4.9.2-10+deb8u1) 4.9.2
  17 debian:9                      : Ok   gcc (Debian 6.3.0-18+deb9u1) 6.3.0 20170516
  18 debian:experimental           : Ok   gcc (Debian 8.2.0-10) 8.2.0
  19 debian:experimental-x-arm64   : Ok   aarch64-linux-gnu-gcc (Debian 8.2.0-10) 8.2.0
  20 debian:experimental-x-mips64  : Ok   mips64-linux-gnuabi64-gcc (Debian 8.2.0-10) 8.2.0
  21 fedora:20                     : Ok   gcc (GCC) 4.8.3 20140911 (Red Hat 4.8.3-7)
  22 fedora:22                     : Ok   gcc (GCC) 5.3.1 20160406 (Red Hat 5.3.1-6)
  23 fedora:23                     : Ok   gcc (GCC) 5.3.1 20160406 (Red Hat 5.3.1-6)
  24 fedora:24                     : Ok   gcc (GCC) 6.3.1 20161221 (Red Hat 6.3.1-1)
  25 fedora:24-x-ARC-uClibc        : Ok   arc-linux-gcc (ARCompact ISA Linux uClibc toolchain 2017.09-rc2) 7.1.1 20170710
  26 fedora:25                     : Ok   gcc (GCC) 6.4.1 20170727 (Red Hat 6.4.1-1)
  27 fedora:26                     : Ok   gcc (GCC) 7.3.1 20180130 (Red Hat 7.3.1-2)
  28 fedora:27                     : Ok   gcc (GCC) 7.3.1 20180712 (Red Hat 7.3.1-6)
  29 fedora:28                     : Ok   gcc (GCC) 8.2.1 20181105 (Red Hat 8.2.1-5)
  30 fedora:29                     : Ok   gcc (GCC) 8.2.1 20181105 (Red Hat 8.2.1-5)
  31 fedora:rawhide                : Ok   gcc (GCC) 8.2.1 20181105 (Red Hat 8.2.1-5)
  32 gentoo-stage3-amd64:latest    : Ok   gcc (Gentoo 7.3.0-r3 p1.4) 7.3.0
  33 mageia:5                      : Ok   gcc (GCC) 4.9.2
  34 mageia:6                      : Ok   gcc (Mageia 5.5.0-1.mga6) 5.5.0
  35 opensuse:13.2                 : Ok   gcc (SUSE Linux) 4.8.3 20140627 [gcc-4_8-branch revision 212064]
  36 opensuse:42.1                 : Ok   gcc (SUSE Linux) 4.8.5
  37 opensuse:42.2                 : Ok   gcc (SUSE Linux) 4.8.5
  38 opensuse:42.3                 : Ok   gcc (SUSE Linux) 4.8.5
  39 oraclelinux:6                 : Ok   gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23.0.1)
  40 oraclelinux:7                 : Ok   gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36.0.1)
  41 ubuntu:12.04.5                : Ok   gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3
  42 ubuntu:14.04.4                : Ok   gcc (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4
  43 ubuntu:14.04.4-x-linaro-arm64 : Ok   aarch64-linux-gnu-gcc (Linaro GCC 5.5-2017.10) 5.5.0
  44 ubuntu:16.04                  : Ok   gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609
  45 ubuntu:16.04-x-arm            : Ok   arm-linux-gnueabihf-gcc (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
  46 ubuntu:16.04-x-arm64          : Ok   aarch64-linux-gnu-gcc (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
  47 ubuntu:16.04-x-powerpc        : Ok   powerpc-linux-gnu-gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
  48 ubuntu:16.04-x-powerpc64      : Ok   powerpc64-linux-gnu-gcc (Ubuntu/IBM 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
  49 ubuntu:16.04-x-powerpc64el    : Ok   powerpc64le-linux-gnu-gcc (Ubuntu/IBM 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
  50 ubuntu:16.04-x-s390           : Ok   s390x-linux-gnu-gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
  51 ubuntu:17.10                  : Ok   gcc (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0
  52 ubuntu:18.04                  : Ok   gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  53 ubuntu:18.04-x-arm            : Ok   arm-linux-gnueabihf-gcc (Ubuntu/Linaro 7.3.0-27ubuntu1~18.04) 7.3.0
  54 ubuntu:18.04-x-arm64          : Ok   aarch64-linux-gnu-gcc (Ubuntu/Linaro 7.3.0-27ubuntu1~18.04) 7.3.0
  55 ubuntu:18.04-x-m68k           : Ok   m68k-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  56 ubuntu:18.04-x-powerpc        : Ok   powerpc-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  57 ubuntu:18.04-x-powerpc64      : Ok   powerpc64-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  58 ubuntu:18.04-x-powerpc64el    : Ok   powerpc64le-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  59 ubuntu:18.04-x-riscv64        : Ok   riscv64-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  60 ubuntu:18.04-x-s390           : Ok   s390x-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  61 ubuntu:18.04-x-sh4            : Ok   sh4-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  62 ubuntu:18.04-x-sparc64        : Ok   sparc64-linux-gnu-gcc (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
  63 ubuntu:18.10                  : Ok   gcc (Ubuntu 8.2.0-7ubuntu1) 8.2.0
  $

  # uname -a
  Linux quaco 4.20.0-rc5 #1 SMP Mon Dec 3 12:20:42 -03 2018 x86_64 x86_64 x86_64 GNU/Linux
  # git log --oneline -1
  89a094898489 tools uapi asm: Update asm-generic/unistd.h copy
  # perf version --build-options
  perf version 4.20.rc7.g89a094
                   dwarf: [ on  ]  # HAVE_DWARF_SUPPORT
      dwarf_getlocations: [ on  ]  # HAVE_DWARF_GETLOCATIONS_SUPPORT
                   glibc: [ on  ]  # HAVE_GLIBC_SUPPORT
                    gtk2: [ on  ]  # HAVE_GTK2_SUPPORT
           syscall_table: [ on  ]  # HAVE_SYSCALL_TABLE_SUPPORT
                  libbfd: [ on  ]  # HAVE_LIBBFD_SUPPORT
                  libelf: [ on  ]  # HAVE_LIBELF_SUPPORT
                 libnuma: [ on  ]  # HAVE_LIBNUMA_SUPPORT
  numa_num_possible_cpus: [ on  ]  # HAVE_LIBNUMA_SUPPORT
                 libperl: [ on  ]  # HAVE_LIBPERL_SUPPORT
               libpython: [ on  ]  # HAVE_LIBPYTHON_SUPPORT
                libslang: [ on  ]  # HAVE_SLANG_SUPPORT
               libcrypto: [ on  ]  # HAVE_LIBCRYPTO_SUPPORT
               libunwind: [ on  ]  # HAVE_LIBUNWIND_SUPPORT
      libdw-dwarf-unwind: [ on  ]  # HAVE_DWARF_SUPPORT
                    zlib: [ on  ]  # HAVE_ZLIB_SUPPORT
                    lzma: [ on  ]  # HAVE_LZMA_SUPPORT
               get_cpuid: [ on  ]  # HAVE_AUXTRACE_SUPPORT
                     bpf: [ on  ]  # HAVE_LIBBPF_SUPPORT
  # perf test
   1: vmlinux symtab matches kallsyms                       : Ok
   2: Detect openat syscall event                           : Ok
   3: Detect openat syscall event on all cpus               : Ok
   4: Read samples using the mmap interface                 : Ok
   5: Test data source output                               : Ok
   6: Parse event definition strings                        : Ok
   7: Simple expression parser                              : Ok
   8: PERF_RECORD_* events & perf_sample fields             : Ok
   9: Parse perf pmu format                                 : Ok
  10: DSO data read                                         : Ok
  11: DSO data cache                                        : Ok
  12: DSO data reopen                                       : Ok
  13: Roundtrip evsel->name                                 : Ok
  14: Parse sched tracepoints fields                        : Ok
  15: syscalls:sys_enter_openat event fields                : Ok
  16: Setup struct perf_event_attr                          : Ok
  17: Match and link multiple hists                         : Ok
  18: 'import perf' in python                               : Ok
  19: Breakpoint overflow signal handler                    : Ok
  20: Breakpoint overflow sampling                          : Ok
  21: Breakpoint accounting                                 : Ok
  22: Watchpoint                                            :
  22.1: Read Only Watchpoint                                : Skip
  22.2: Write Only Watchpoint                               : Ok
  22.3: Read / Write Watchpoint                             : Ok
  22.4: Modify Watchpoint                                   : Ok
  23: Number of exit events of a simple workload            : Ok
  24: Software clock events period values                   : Ok
  25: Object code reading                                   : Ok
  26: Sample parsing                                        : Ok
  27: Use a dummy software event to keep tracking           : Ok
  28: Parse with no sample_id_all bit set                   : Ok
  29: Filter hist entries                                   : Ok
  30: Lookup mmap thread                                    : Ok
  31: Share thread mg                                       : Ok
  32: Sort output of hist entries                           : Ok
  33: Cumulate child hist entries                           : Ok
  34: Track with sched_switch                               : Ok
  35: Filter fds with revents mask in a fdarray             : Ok
  36: Add fd to a fdarray, making it autogrow               : Ok
  37: kmod_path__parse                                      : Ok
  38: Thread map                                            : Ok
  39: LLVM search and compile                               :
  39.1: Basic BPF llvm compile                              : Ok
  39.2: kbuild searching                                    : Ok
  39.3: Compile source for BPF prologue generation          : Ok
  39.4: Compile source for BPF relocation                   : Ok
  40: Session topology                                      : Ok
  41: BPF filter                                            :
  41.1: Basic BPF filtering                                 : Ok
  41.2: BPF pinning                                         : Ok
  41.3: BPF prologue generation                             : Ok
  41.4: BPF relocation checker                              : Ok
  42: Synthesize thread map                                 : Ok
  43: Remove thread map                                     : Ok
  44: Synthesize cpu map                                    : Ok
  45: Synthesize stat config                                : Ok
  46: Synthesize stat                                       : Ok
  47: Synthesize stat round                                 : Ok
  48: Synthesize attr update                                : Ok
  49: Event times                                           : Ok
  50: Read backward ring buffer                             : Ok
  51: Print cpu map                                         : Ok
  52: Probe SDT events                                      : Ok
  53: is_printable_array                                    : Ok
  54: Print bitmap                                          : Ok
  55: perf hooks                                            : Ok
  56: builtin clang support                                 : Skip (not compiled in)
  57: unit_number__scnprintf                                : Ok
  58: mem2node                                              : Ok
  59: x86 rdpmc                                             : Ok
  60: Convert perf time to TSC                              : Ok
  61: DWARF unwind                                          : Ok
  62: x86 instruction decoder - new instructions            : Ok
  63: x86 bp modify                                         : Ok
  64: probe libc's inet_pton & backtrace it with ping       : Ok
  65: Use vfs_getname probe to get syscall args filenames   : Ok
  66: Add vfs_getname probe to get syscall args filenames   : Ok
  67: Check open filename arg using perf trace + vfs_getname: Ok

  $ make -C tools/perf build-test
  make: Entering directory '/home/acme/git/perf/tools/perf'
  - tarpkg: ./tests/perf-targz-src-pkg .
         make_with_clangllvm_O: make LIBCLANGLLVM=1
               make_no_slang_O: make NO_SLANG=1
             make_no_libperl_O: make NO_LIBPERL=1
         make_install_prefix_O: make install prefix=/tmp/krava
   make_install_prefix_slash_O: make install prefix=/tmp/krava/
                  make_debug_O: make DEBUG=1
            make_no_demangle_O: make NO_DEMANGLE=1
              make_no_libbpf_O: make NO_LIBBPF=1
           make_no_libunwind_O: make NO_LIBUNWIND=1
                make_no_gtk2_O: make NO_GTK2=1
                make_install_O: make install
        make_with_babeltrace_O: make LIBBABELTRACE=1
           make_no_libbionic_O: make NO_LIBBIONIC=1
           make_no_libpython_O: make NO_LIBPYTHON=1
              make_no_libelf_O: make NO_LIBELF=1
                  make_no_ui_O: make NO_NEWT=1 NO_SLANG=1 NO_GTK2=1
  make_no_libdw_dwarf_unwind_O: make NO_LIBDW_DWARF_UNWIND=1
       make_util_pmu_bison_o_O: make util/pmu-bison.o
                   make_pure_O: make
                    make_doc_O: make doc
                make_no_newt_O: make NO_NEWT=1
                 make_perf_o_O: make perf.o
            make_no_libaudit_O: make NO_LIBAUDIT=1
            make_no_auxtrace_O: make NO_AUXTRACE=1
              make_clean_all_O: make clean all
             make_no_scripts_O: make NO_LIBPYTHON=1 NO_LIBPERL=1
                make_minimal_O: make NO_LIBPERL=1 NO_LIBPYTHON=1 NO_NEWT=1 NO_GTK2=1 NO_DEMANGLE=1 NO_LIBELF=1 NO_LIBUNWIND=1 NO_BACKTRACE=1 NO_LIBNUMA=1 NO_LIBAUDIT=1 NO_LIBBIONIC=1 NO_LIBDW_DWARF_UNWIND=1 NO_AUXTRACE=1 NO_LIBBPF=1 NO_LIBCRYPTO=1 NO_SDT=1 NO_JVMTI=1
                   make_tags_O: make tags
                 make_static_O: make LDFLAGS=-static
           make_no_backtrace_O: make NO_BACKTRACE=1
             make_no_libnuma_O: make NO_LIBNUMA=1
             make_util_map_o_O: make util/map.o
                   make_help_O: make help
            make_install_bin_O: make install-bin
  OK
  make: Leaving directory '/home/acme/git/perf/tools/perf'
  $
