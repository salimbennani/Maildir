Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C5A4A5804F9;
	Thu,  6 Dec 2018 13:31:57 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 13:31:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AQfvj9BzBg9/QL43XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e8XKPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhMWSJPAY2y?=
 =?us-ascii?q?aIkAD+QOMuhXtIn9v1kDoACiCQSvHu7j1iVFimPq0aA8zu8vERvG3AslH98WrH?=
 =?us-ascii?q?nUttP1O70WUe+oy6nD0CvOYOlM2Tfj8ofIdhAhofaRVr1tb8Xa1E4hGB3BjlWX?=
 =?us-ascii?q?tIfoOCma2fgIs2eF9OdgVvygi3Qhqw5vpjij3MAsipPGho8MzF3P6Ct3wIEwJd?=
 =?us-ascii?q?KiSU57Z8apEJhOuCGAMYt5XMciT3tvuCYgxb0Lv4OwcisSyJk/2RLTd/iKf5KV?=
 =?us-ascii?q?7h/tSuqdOyp0iXF5dL6lhhu/81CsxvD+W8SwylpGsylIn9vWunwQ2RHf8NaLRu?=
 =?us-ascii?q?Vz80qnxD2BzRrc6vteLkAxjafbK4Auwro3lpcLr0TDETH5mF/sgK+VaEok4O6o?=
 =?us-ascii?q?5PrjYrn8oZ+cLYB0hhn/MqQohMO/Hfw1PhYSU2Wf4+iwybPu8VPjTLlXjfA6jr?=
 =?us-ascii?q?PVvZHYKMgDo662GQ5V0oIt6xalCDem1cwVnX0GLFJDZRKGgJHlO1LQL/DiC/ew?=
 =?us-ascii?q?nVCsnC5sx/HIOL3uHI/NI2PdkLfuY7l98VRQyAktwtBF4ZJbFLUBLOj0Wk/ru9?=
 =?us-ascii?q?zUFgU5PBCsw+b7FNV90ZsTWWaOAq+aLqzeq1CJ5v80LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G+xsI1+Fbnr0ntcBDWAKsxI+TOPwiV2CTSRcZ3GoU6?=
 =?us-ascii?q?I8+zE0EoSmDYjYS4CpgbyB2jq7H5JMamBHDFCMDWnnd4GeV/gQbyKSJ9drkiYY?=
 =?us-ascii?q?Wri5V48hyRauuRf4y7pgMOXY4C4YtZXl1Nhz4O3ejhUy9T1yD8SA3GCBVWB0nm?=
 =?us-ascii?q?UURzAo2KBzu1ByylCG0aJgmfxXCcRT5+9VUgc9LZPT1fd6C9D1WgLCZNuJUkyp?=
 =?us-ascii?q?Qte9DDE1T9IxxcIOYklnF9WjiBDDwzSlA7sPm7OXA5w097rW32LtKMZl13bGyK?=
 =?us-ascii?q?4hgkElQsRVM22qnKp/9wnJCI7PnEWUjKKqdaUa3C7Q+2aP12uOvEdEUAFuVaXJ?=
 =?us-ascii?q?R2wQZkzTrd7h/EPNU6euCag7MgtG0cONN7FFasP3gllcRPfsItLeY3mvlGe2Ah?=
 =?us-ascii?q?qIwrCMbI/ue2gG2CXdCU4Ekx0c/HqcNAg+ADuhrHzaDDB0CV3vZEbs+/FkqHyn?=
 =?us-ascii?q?Vk800x2Kb0p52rWo4BEVm+KTR+kT3r0evichsCt7HFCm0tLSCtqAoRdhfapGbd?=
 =?us-ascii?q?M85ldHyXzWtwhnMpO8KKBig0YUcx5rsEP2yxV3FoJAnNA2rHMryQpyLr6Y0FNB?=
 =?us-ascii?q?dj+CwZD8ILrXKnP2/BCuba7W1UrT0NKX+qcJ9fQ5pE/vvACvFko+7Xpn18NZ3G?=
 =?us-ascii?q?eb5pXPFAASS47+Ul4r9xhmoLHXejMy54fK2nxjL6a1siXO1Mk0BOQ40BmgedRf?=
 =?us-ascii?q?MKSaFALpF80aBs6uKPElmlSzbxIEOvxS+7AwP8+8a/SG36urNv56nD26lWRH/J?=
 =?us-ascii?q?x90kWU+it8V+7ExYoKz+uZ3wuHTTj8ilihv9vzmYBFYzESA2W+xTLlBI5Xeq19?=
 =?us-ascii?q?Y4ILBX2yLM2ww9V0n4TtVGJA9F6/G1MG39ekeQCTb1PhxwJQz1kYoXu9lSu+0T?=
 =?us-ascii?q?N0iTAporOD0yPUx+TtaQQIOnRMRGlkllrsJYm0j9YHXEmndQQplR2l5VrkyKhf?=
 =?us-ascii?q?vqhwM27TQUJQdSjsM25iSrewtqaFY8NX6JIosD9bUeSmbVCBV779pQAX0yfiH2?=
 =?us-ascii?q?tY2TA6eCumupT/nxxmlm2dKGx/o2beecF13R3f/sDTReZN3joaQyl1kTvXCUKm?=
 =?us-ascii?q?P9mq/tWUkI3PsvukWGKiVZ1TcC/rwp2GtCag4W1qABu/n+28m9H9EAg61zP72M?=
 =?us-ascii?q?duVSnSsBn8ZYzr3bygMe17ZkloGEP8681iF4B+iIQwg4sc2XobhpWT5ncHlWbz?=
 =?us-ascii?q?MdNG2aPxdnYNRDgLw8LL7wjhwkFsMnWJx4fhXHWH3sRhf8W6Yn8R2i8l7MBFEq?=
 =?us-ascii?q?aU4KZEnStouFW4qw3RbON5njccz/su9XEbj/sIuAor0iWSHLQSEVNEMizrkhSC?=
 =?us-ascii?q?98q+o7lPZGazbbiw01JzndWgDLGBuA5QQnj4dYk5HS9s8Mp/KknD32Pp6oHrY9?=
 =?us-ascii?q?TQadMTthuJkxbPleRVKZQxluYUiipjI27yoXoly+sjhxx0wZ66pJSHK3lq/K+h?=
 =?us-ascii?q?Hh5YMTj1a9kS+z73i6Zeg92W35uuHph6HjULXZ3oTe+nET4ItPTnMRqOHyM4qn?=
 =?us-ascii?q?uBBbXfGgqf4l98r33TC5CrK22XJH4BwNp5XhadI0hfgB0OUDU+g540DQSqxM3n?=
 =?us-ascii?q?cEdk6TEd/F/4qh1Qyu12MxnzSHvQpACtaj0sUpiQMAJW7h1e50fSKcGe7Ph8Hy?=
 =?us-ascii?q?RG8Z26tgCNNnaXZwdVDWEKR0yEAUrsPqK16NnE8uiYAPe+LvTUbbWPr+xeS+mH?=
 =?us-ascii?q?xZa13oR6+DaMM92FPmN+AP0jxkpDQXd5FtzZmjUIViwXjj/NYNSdpBum4S13qc?=
 =?us-ascii?q?a/8PvwVQLr5IuPDaZSMNp19xC3h6eDK/CfhCJjJTlE0ZMMwGfCyKID014KlyFu?=
 =?us-ascii?q?az6tHKwAtSHTTaLQmaxXDx8BZyNwLstI6K080RdXOc7GkdP4zbp4jv8zC1dYWl?=
 =?us-ascii?q?3tgMCpZcoWI26jMFPLHlqENLODJTfT2cH4fbu8SaFMjOVTrxC/oyubHFT5Pjud?=
 =?us-ascii?q?lzjlTRSvMeBXgSGfPRxevpy9cxl3BWjiStLmdgO0MNttgTIqxr00g2vANXQAPj?=
 =?us-ascii?q?hkb0NNsrqQ4DtEgvV+HmxN9GZqIfOYlCaZ8ebYLI0bsf9qAiRyiuJb7242y7pT?=
 =?us-ascii?q?7CFYWvN1nDHeocJpo1GjiuOP0CZoUAJSqjZXg4KGpUVjNr/f9plFWHbE+goC7G?=
 =?us-ascii?q?SQCxsQodtlBcbiu6RRytjJiaLyJy1O89PS/csAGcfULNiLP2YmMRrsS3boC14k?=
 =?us-ascii?q?SzGsfUTYg0pUirnG83yToZ8SqZX2npcKDLhBWwpmOOkdDxFMBtoLJJtwFhgti6?=
 =?us-ascii?q?CSiM4PrXaz5DzcQMIS6pnMU/+6Avj1Ljudy75eaE1bkvvDMY0PO9ijiARZYV5g?=
 =?us-ascii?q?kdGPQhKIUA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAADFlAlch0O0hNFjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGCaYECFBOME1+LMIINFJc6FIFfFBgNBgGHVyI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIDAwECJAsBDQEBNwEFCQEBGAcfEgMlHhEGDAcFgxwBg?=
 =?us-ascii?q?XQNAgMKpU+BbDOCdgEBBYEwAYV0CIdwgxOBHBeBf4N1hHwBEgGFeokzgXOVOwm?=
 =?us-ascii?q?HBIM3gm2EEwsYgimPDYp/gnuLEoFGgRxxTTAIgycJCoIIDBeIXoVZJjIBAYEDA?=
 =?us-ascii?q?QGHfII+AQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAADFlAlch0O0hNFjHQEBBQEHBQGBUQgBCwGCaYECFBO?=
 =?us-ascii?q?ME1+LMIINFJc6FIFfFBgNBgGHVyI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIDAwECJAsBDQEBNwEFCQEBGAcfEgMlHhEGDAcFgxwBgXQNAgMKpU+BbDO?=
 =?us-ascii?q?CdgEBBYEwAYV0CIdwgxOBHBeBf4N1hHwBEgGFeokzgXOVOwmHBIM3gm2EEwsYg?=
 =?us-ascii?q?imPDYp/gnuLEoFGgRxxTTAIgycJCoIIDBeIXoVZJjIBAYEDAQGHfII+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="54886985"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 13:31:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726712AbeLFVaT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 16:30:19 -0500
Received: from mail.kernel.org ([198.145.29.99]:48654 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726710AbeLFVaP (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 16:30:15 -0500
Received: from quaco.ghostprotocols.net (179.187.13.223.dynamic.adsl.gvt.net.br [179.187.13.223])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id DC12D2146F;
        Thu,  6 Dec 2018 21:30:10 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544131814;
        bh=kalhg6BjUEjBPqLkTfeR+KzRWOd6nI7iVDMjU7Q3CVY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=m70DW2pC6bPZ592di+g/wcojEcCo/kprhHr6LR5Y4Q2N17h18V9kfAxSsesxFE9G8
         IQcVoaCBq7hSJ0txUeYjMa4UZlmQ1fwRM5rFThuc0t5+kcA3RmckMOqV4hq5RkNUc/
         /v/cBJqznzYXJnC/pnp/a7g1BmguezcpBDL215Qk=
From: Arnaldo Carvalho de Melo <acme@kernel.org>
To: Ingo Molnar <mingo@kernel.org>
Cc: Clark Williams <williams@redhat.com>, linux-kernel@vger.kernel.org,
        linux-perf-users@vger.kernel.org,
        Mathieu Poirier <mathieu.poirier@linaro.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@redhat.com>,
        Namhyung Kim <namhyung@kernel.org>,
        Peter Zijlstra <peterz@infradead.org>,
        coresight@lists.linaro.org, linux-arm-kernel@lists.infradead.org,
        Arnaldo Carvalho de Melo <acme@redhat.com>
Subject: [PATCH 57/75] perf cs-etm: Add configuration for ETMv3 trace protocol
Date: Thu,  6 Dec 2018 18:25:44 -0300
Message-Id: <20181206212602.20474-58-acme@kernel.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181206212602.20474-1-acme@kernel.org>
References: <20181206212602.20474-1-acme@kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Mathieu Poirier <mathieu.poirier@linaro.org>

This patch deals with the proper initialisation of configuration
parameters for the ETMv3 trace protocol in order to properly handle
packets generated by tracers following this specification.

Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Cc: Jiri Olsa <jolsa@redhat.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: coresight@lists.linaro.org
Cc: linux-arm-kernel@lists.infradead.org
Link: http://lkml.kernel.org/r/1543955944-10042-2-git-send-email-mathieu.poirier@linaro.org
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 .../perf/util/cs-etm-decoder/cs-etm-decoder.h |  8 +++
 tools/perf/util/cs-etm.c                      | 54 ++++++++++++++-----
 2 files changed, 48 insertions(+), 14 deletions(-)

diff --git a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
index 9351bd10d864..6b5525410a43 100644
--- a/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
+++ b/tools/perf/util/cs-etm-decoder/cs-etm-decoder.h
@@ -53,6 +53,13 @@ struct cs_etm_queue;
 typedef u32 (*cs_etm_mem_cb_type)(struct cs_etm_queue *, u64,
 				  size_t, u8 *);
 
+struct cs_etmv3_trace_params {
+	u32 reg_ctrl;
+	u32 reg_trc_id;
+	u32 reg_ccer;
+	u32 reg_idr;
+};
+
 struct cs_etmv4_trace_params {
 	u32 reg_idr0;
 	u32 reg_idr1;
@@ -65,6 +72,7 @@ struct cs_etmv4_trace_params {
 struct cs_etm_trace_params {
 	int protocol;
 	union {
+		struct cs_etmv3_trace_params etmv3;
 		struct cs_etmv4_trace_params etmv4;
 	};
 };
diff --git a/tools/perf/util/cs-etm.c b/tools/perf/util/cs-etm.c
index 48ad217bf0df..76e509c32a28 100644
--- a/tools/perf/util/cs-etm.c
+++ b/tools/perf/util/cs-etm.c
@@ -114,15 +114,28 @@ static void cs_etm__dump_event(struct cs_etm_auxtrace *etm,
 	/* Use metadata to fill in trace parameters for trace decoder */
 	t_params = zalloc(sizeof(*t_params) * etm->num_cpu);
 	for (i = 0; i < etm->num_cpu; i++) {
-		t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
-		t_params[i].etmv4.reg_idr0 = etm->metadata[i][CS_ETMV4_TRCIDR0];
-		t_params[i].etmv4.reg_idr1 = etm->metadata[i][CS_ETMV4_TRCIDR1];
-		t_params[i].etmv4.reg_idr2 = etm->metadata[i][CS_ETMV4_TRCIDR2];
-		t_params[i].etmv4.reg_idr8 = etm->metadata[i][CS_ETMV4_TRCIDR8];
-		t_params[i].etmv4.reg_configr =
+		if (etm->metadata[i][CS_ETM_MAGIC] == __perf_cs_etmv3_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV3;
+			t_params[i].etmv3.reg_ctrl =
+					etm->metadata[i][CS_ETM_ETMCR];
+			t_params[i].etmv3.reg_trc_id =
+					etm->metadata[i][CS_ETM_ETMTRACEIDR];
+		} else if (etm->metadata[i][CS_ETM_MAGIC] ==
+						      __perf_cs_etmv4_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
+			t_params[i].etmv4.reg_idr0 =
+					etm->metadata[i][CS_ETMV4_TRCIDR0];
+			t_params[i].etmv4.reg_idr1 =
+					etm->metadata[i][CS_ETMV4_TRCIDR1];
+			t_params[i].etmv4.reg_idr2 =
+					etm->metadata[i][CS_ETMV4_TRCIDR2];
+			t_params[i].etmv4.reg_idr8 =
+					etm->metadata[i][CS_ETMV4_TRCIDR8];
+			t_params[i].etmv4.reg_configr =
 					etm->metadata[i][CS_ETMV4_TRCCONFIGR];
-		t_params[i].etmv4.reg_traceidr =
+			t_params[i].etmv4.reg_traceidr =
 					etm->metadata[i][CS_ETMV4_TRCTRACEIDR];
+		}
 	}
 
 	/* Set decoder parameters to simply print the trace packets */
@@ -352,15 +365,28 @@ static struct cs_etm_queue *cs_etm__alloc_queue(struct cs_etm_auxtrace *etm,
 		goto out_free;
 
 	for (i = 0; i < etm->num_cpu; i++) {
-		t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
-		t_params[i].etmv4.reg_idr0 = etm->metadata[i][CS_ETMV4_TRCIDR0];
-		t_params[i].etmv4.reg_idr1 = etm->metadata[i][CS_ETMV4_TRCIDR1];
-		t_params[i].etmv4.reg_idr2 = etm->metadata[i][CS_ETMV4_TRCIDR2];
-		t_params[i].etmv4.reg_idr8 = etm->metadata[i][CS_ETMV4_TRCIDR8];
-		t_params[i].etmv4.reg_configr =
+		if (etm->metadata[i][CS_ETM_MAGIC] == __perf_cs_etmv3_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV3;
+			t_params[i].etmv3.reg_ctrl =
+					etm->metadata[i][CS_ETM_ETMCR];
+			t_params[i].etmv3.reg_trc_id =
+					etm->metadata[i][CS_ETM_ETMTRACEIDR];
+		} else if (etm->metadata[i][CS_ETM_MAGIC] ==
+							__perf_cs_etmv4_magic) {
+			t_params[i].protocol = CS_ETM_PROTO_ETMV4i;
+			t_params[i].etmv4.reg_idr0 =
+					etm->metadata[i][CS_ETMV4_TRCIDR0];
+			t_params[i].etmv4.reg_idr1 =
+					etm->metadata[i][CS_ETMV4_TRCIDR1];
+			t_params[i].etmv4.reg_idr2 =
+					etm->metadata[i][CS_ETMV4_TRCIDR2];
+			t_params[i].etmv4.reg_idr8 =
+					etm->metadata[i][CS_ETMV4_TRCIDR8];
+			t_params[i].etmv4.reg_configr =
 					etm->metadata[i][CS_ETMV4_TRCCONFIGR];
-		t_params[i].etmv4.reg_traceidr =
+			t_params[i].etmv4.reg_traceidr =
 					etm->metadata[i][CS_ETMV4_TRCTRACEIDR];
+		}
 	}
 
 	/* Set decoder parameters to simply print the trace packets */
-- 
2.19.2

