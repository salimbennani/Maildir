Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  14 Dec 2018 08:42:44 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3B9C258061F;
	Thu, 13 Dec 2018 13:53:17 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Dec 2018 13:53:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AJfj9HRBe1gSh4rOnOeoAUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pM2wAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfH428?=
 =?us-ascii?q?c4UBAekPPelaqIf9pkcBoxSxCgm3HOPiyCRFhmPv3a0/z+ghER3K0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6oy6nIyzrDZO5Q1zf89YjDbxcsoeqLXbJ2fsrRzUgvFx7egVWK?=
 =?us-ascii?q?s4PlITKV1uICs2WA4epvTvijhHIgqwF0uzWiwNonhIrRho8N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZhMuy2ANoZ7QNsuT39ptSok1rELvIO3cDQXx5ki2xHTd/iKf5SN?=
 =?us-ascii?q?7x79SOqdPTJ1iXdqdb+6iBu97FOvyuPkWsm6zllHrTZJn9zJu3wTyhPf9MqKR/?=
 =?us-ascii?q?5/80qh1juC0wXe5+5KIUwqm6fWLoIuzqA+m5YPt0nIAzX4l1/sjKCMc0Up4uio?=
 =?us-ascii?q?5PrjYrXhvpKcKYB0hR/kMqg0mcywH/44Mg4QUGif4+i806fj/ULhTLVLiP05jL?=
 =?us-ascii?q?XZvYjEKcgHoqO1GRJZ34g95xqlEjur08gUkWMGIV9HYB6HipLmO1DKIPD2F/e/?=
 =?us-ascii?q?hFGsnS9vx/DHOL3hH5rMImHAkLj/Z7Z97VBTyA4qwdBY6ZNUDK8OIOjoV0/vu9?=
 =?us-ascii?q?zXEAU5Pxa3w+n5EtV90J0RWWaVDq+eKqPSvkeE5vgzLOmUeI8VpDH9JuAh5/7v?=
 =?us-ascii?q?jn82h0URfKa03ZYMbHC4H/JmI1iWYHb2g9cBF3sKsRQ6TODwlFKCVjtTbW6oX6?=
 =?us-ascii?q?0g/jE7FJ6mDYDbS4CtmrOB3Tu7EYdRZmxcClCMDG3nd4OLW/oXbCKSI8lhkiEL?=
 =?us-ascii?q?VLS7So8h0w2uuxH+y7Z9MuXU/SgYv4r51Ndp/+3TiQ0y9TtsAsSf1GGCUXt4nm?=
 =?us-ascii?q?APRz8w2qB/pldwylOC0ah+nvxZGsZf5/JPUgcmK5Hcy/Z2BMz1WgLEZt2JUkqp?=
 =?us-ascii?q?Qs26ATEtSdI828UBY119G9WljRDPxTCqDKUXl7GQAJw086Tc32X+JspnynbG0r?=
 =?us-ascii?q?UhgEciQsdVKWKmgat//RDJB4HVi0WZi7qqdaME0S7O7miDy3CCvEVZUAFqV6XF?=
 =?us-ascii?q?UmsSZk/XrdT/+0PDQKWiCbUhMgtd18GCLrFGZcHujVVDXP3jIsjRY3qtm2esAh?=
 =?us-ascii?q?aF3q6DY5D0e2oDxindCFILkwYI/XmYMwgyASOho2HbDDxqDl/vZ0Ls8e9jqHK0?=
 =?us-ascii?q?VEM0zgeKb1F/2Lqx4BIamfucS/YL1LIepCghsyl0HEq639/OFtWPvRRhc7tGbd?=
 =?us-ascii?q?M9+lhH03nZuBJ7PpG7K6Bih1gecxl4vk/01hV3DJlAntYurH8w0AVyLqeY2ktb?=
 =?us-ascii?q?dzyExZDwJqHXKm7q8RCzaq7W31be0MqW+qYP8vg4t0/vvAazFkom8nVn1dZV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?P7mAFADsHMwVGcivJPYxlFi0cx0LJuZS9K0zP8O4bPaG3K+rPOB9nDOpl2hH4Y?=
 =?us-ascii?q?Z90l6S+Cp4UOLHw5EFw/SA1AudSzj8lEuhstzwmY1cZTASA3CzxjT+CI9QZq19?=
 =?us-ascii?q?Z4ALCWi1Ls2zx9V+gYPtWnFC+F6iAVMGxNGmeR6IY1Ph2g1Q0FwdoWa7liug0z?=
 =?us-ascii?q?x0jzYpo7KF3CzP3+vtbgAHNXNMRGV4i1fjP5K0j9EDUEe0dQcpkAaq6ljgx6hc?=
 =?us-ascii?q?oqRyNG3TQUZOfyjrIGBuSKqwtryeY8FR7JMkqzlYUOO5YVqCUL7yvwMa0z//H2?=
 =?us-ascii?q?tZ3D06dzCqto/5nhBgk2KdMXBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzYGauyuh5m1qAhq/k+qomtL9Egg60i7719?=
 =?us-ascii?q?90WiXOtxv8Zojr16KnMeNoZEVoBVn869ZkFYF6iIc/mJYQ2X0CjJWP4XUHiXvz?=
 =?us-ascii?q?Mclc2a/mbHsCXzkLz8TX4Ajk3k1uNXaJx4P/VnWAzcptfdi6YmUK2i0j68BGEr?=
 =?us-ascii?q?ub7LtBnSFtuFq3sRrRYeRhnjca0fYu62QVg+ATtAot0yWSGLYSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WX26oHle9?=
 =?us-ascii?q?nfd8gftxOKnBfbk+haNogxmeEUiip9NmLwpnkly+89jRxz0pC2pomHK2Nx/K2n?=
 =?us-ascii?q?Bh5ULCH6Z8QW+jv1l6ZRgt6W35yzHpVmAjgLQJzoTfeyHDMTr/vnMRuOECYnqn?=
 =?us-ascii?q?eaArffGQ6f6EF7r3PACZyrNneXJGUHwtVmXhWSOEtfgAUMVjUggpE5DhyqxNDm?=
 =?us-ascii?q?cEph/T8e/Fn4qh9Ryu5yMxn/T3zSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1LjMaOr5dbe6OiUHPa+I+HNYbWTquxeSvGI?=
 =?us-ascii?q?yoi00oZ9+zaMN8OPPmRtDvEh20pDW2x5FNrdmzkVVyMXkCfNZdaBpBig4i13st?=
 =?us-ascii?q?y/8PPzVQPv4ouPFqJSMch19BCwm6uDLOmQhCB2KTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNM7blNz11714jv00C1tfVl?=
 =?us-ascii?q?zhgMapZcMULGGnKVPHH12GNLCHJT3N3sH2brmwSbxWjOVIqRKwvSyXHFPkPjSG?=
 =?us-ascii?q?jzPpTQygMflQjCGHOxxToJuycgt2Bmj5Ut3nage3MNt2jTAtxb00h3XKNXMTMD?=
 =?us-ascii?q?RmckNNqKGQ4j1cgvllB2NB6X9lJ/GemymF9+nYNooWsfxzDyRoluJa5W42xKdP?=
 =?us-ascii?q?4C5YRPx6hi3So8Vqo1GnlOmP1zVmXABPqjZNmIKEo0FiNb/F+ZlHXHbO5AgN4n?=
 =?us-ascii?q?mICxQWu9tlDcXiuqBKxdjJkaLzKTFC/MrV/MscHcfULs2HPWElMRroHj7UEQQE?=
 =?us-ascii?q?QSSqNWHZm0xSjvWS+meJoZg9r5i/0KYJH4dWSFEvXsEbCEB+AMYLaMNvUy8pi6?=
 =?us-ascii?q?yzjcgG/3OyoRDdAsJAscaUeOiVBKDULzCWxZ1FelNc2rT+IoASK4fh0lJjbFZS?=
 =?us-ascii?q?ko6MEE3VC4Me6hZ9ZxM59R0euEN1SXc+jge8Mlug?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAABM1BJch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMIIsBAsnh0MDhS6LM4INFJJDhiEFSBQBARgTAYR?=
 =?us-ascii?q?AgwUiNwYNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIPKAYBA?=
 =?us-ascii?q?TcBBAEJAQEBAQgYHhADLyUCBA4FBR2Cf4FpAw0IAQSdSQIuiVgBAQGCHYJ2AQE?=
 =?us-ascii?q?FhQQYggkIjDwXgX+BOAwTgkyFAYM1giaLNIQVkHNVCYIoj0mRSiyWGYJdAgICA?=
 =?us-ascii?q?gQFAg0BAQWBXIF4MxojegGCQT6BXQkag0qKU3KBBQEBIYweAQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAABM1BJch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMIIsBAsnh0MDhS6LM4INFJJDhiEFSBQBARgTAYRAgwUiNwYNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBAQIBAQIPKAYBATcBBAEJAQEBAQg?=
 =?us-ascii?q?YHhADLyUCBA4FBR2Cf4FpAw0IAQSdSQIuiVgBAQGCHYJ2AQEFhQQYggkIjDwXg?=
 =?us-ascii?q?X+BOAwTgkyFAYM1giaLNIQVkHNVCYIoj0mRSiyWGYJdAgICAgQFAg0BAQWBXIF?=
 =?us-ascii?q?4MxojegGCQT6BXQkag0qKU3KBBQEBIYweAQE?=
X-IronPort-AV: E=Sophos;i="5.56,349,1539673200"; 
   d="scan'208";a="142057099"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 13 Dec 2018 13:53:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727709AbeLMVuN (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 13 Dec 2018 16:50:13 -0500
Received: from mx0a-00082601.pphosted.com ([67.231.145.42]:52238 "EHLO
        mx0a-00082601.pphosted.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1726457AbeLMVuN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 13 Dec 2018 16:50:13 -0500
Received: from pps.filterd (m0044008.ppops.net [127.0.0.1])
        by mx0a-00082601.pphosted.com (8.16.0.27/8.16.0.27) with SMTP id wBDLdqJe019248;
        Thu, 13 Dec 2018 13:49:29 -0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=fb.com; h=from : to : cc : subject
 : date : message-id : references : in-reply-to : content-type : content-id
 : content-transfer-encoding : mime-version; s=facebook;
 bh=c2TYvsPXBAa8QN+10GjEq3MU0+13dMbW9vxJf2Fp8mw=;
 b=UfJuTBiipPPus+dRJbJ7hzxVnmnrME5dRBfJGCGbYKb2bZIW4h2qDruO1XetjYTLeH6h
 UXI37IRpr1JH7b2kGSQ5mIxbOS8+qZkROu7O/Rq0pXIoQoJjwzkt6NzkylVulEXcVxqC
 zFqYyjOeMhH0bV7ayIx9aYXGmWKmsx/Ljtc= 
Received: from mail.thefacebook.com ([199.201.64.23])
        by mx0a-00082601.pphosted.com with ESMTP id 2pbxab897u-5
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-SHA384 bits=256 verify=NOT);
        Thu, 13 Dec 2018 13:49:29 -0800
Received: from prn-mbx05.TheFacebook.com (2620:10d:c081:6::19) by
 prn-hub05.TheFacebook.com (2620:10d:c081:35::129) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.1.1531.3; Thu, 13 Dec 2018 13:49:00 -0800
Received: from prn-hub02.TheFacebook.com (2620:10d:c081:35::126) by
 prn-mbx05.TheFacebook.com (2620:10d:c081:6::19) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
 15.1.1531.3; Thu, 13 Dec 2018 13:48:59 -0800
Received: from NAM01-BN3-obe.outbound.protection.outlook.com (192.168.54.28)
 by o365-in.thefacebook.com (192.168.16.26) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id 15.1.1531.3
 via Frontend Transport; Thu, 13 Dec 2018 13:48:59 -0800
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=fb.onmicrosoft.com;
 s=selector1-fb-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=c2TYvsPXBAa8QN+10GjEq3MU0+13dMbW9vxJf2Fp8mw=;
 b=FwBLizMbUIr9CFS3oYhNGzpXjE4e9t4Z9y8QH3H1XERl/TU3IjtR0ywYm6UOGbhXIUeZy39ybiZW6Kh2pIg3AH3f03HzqPwblDHJ46mjSeI/U+bFWozEjHM9YwA6fmbGWnrL6Y3TYiIkrpDgukSU9YjrLz9QtO5sAwdPj5PZG5E=
Received: from DM5PR15MB1163.namprd15.prod.outlook.com (10.173.208.149) by
 DM5PR15MB1739.namprd15.prod.outlook.com (10.174.109.150) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1425.19; Thu, 13 Dec 2018 21:48:58 +0000
Received: from DM5PR15MB1163.namprd15.prod.outlook.com
 ([fe80::2d27:7549:4f23:c230]) by DM5PR15MB1163.namprd15.prod.outlook.com
 ([fe80::2d27:7549:4f23:c230%6]) with mapi id 15.20.1404.026; Thu, 13 Dec 2018
 21:48:57 +0000
From: Song Liu <songliubraving@fb.com>
To: Peter Zijlstra <peterz@infradead.org>
CC: Steven Rostedt <rostedt@goodmis.org>,
        lkml <linux-kernel@vger.kernel.org>,
        "netdev@vger.kernel.org" <netdev@vger.kernel.org>,
        "ast@kernel.org" <ast@kernel.org>,
        "daniel@iogearbox.net" <daniel@iogearbox.net>,
        Kernel Team <Kernel-team@fb.com>,
        "acme@kernel.org" <acme@kernel.org>
Subject: Re: [PATCH v3 perf, bpf-next 1/4] perf, bpf: Introduce
 PERF_RECORD_BPF_EVENT
Thread-Topic: [PATCH v3 perf, bpf-next 1/4] perf, bpf: Introduce
 PERF_RECORD_BPF_EVENT
Thread-Index: AQHUkan/BrxKv3p0HEGwaC6e4kWgY6V7FkWAgABBOQCAAA/SgIAAB6sAgAGVzgCAADMvgA==
Date: Thu, 13 Dec 2018 21:48:57 +0000
Message-ID: <3FC2A5A4-9502-4B33-A944-BEB14B520E23@fb.com>
References: <20181211233351.4036381-1-songliubraving@fb.com>
 <20181211233351.4036381-2-songliubraving@fb.com>
 <20181212131549.GZ5289@hirez.programming.kicks-ass.net>
 <C6E2C200-4C86-4EE0-97FA-228C0E0629B1@fb.com>
 <20181212180553.GC5289@hirez.programming.kicks-ass.net>
 <20181212133320.75d5cad8@gandalf.local.home>
 <20181213184546.GM5289@hirez.programming.kicks-ass.net>
In-Reply-To: <20181213184546.GM5289@hirez.programming.kicks-ass.net>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-mailer: Apple Mail (2.3445.102.3)
x-originating-ip: [2620:10d:c090:200::4:4dbf]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DM5PR15MB1739;20:9D2C5j05bTVMVarQgNOYCNxpuBKi51Ie03TlFt6zoNU4sJNEnz7ibLMm8tFbSy7H3YxsTq9dVTji6Qo5DHqJGs4LErGSpjxJ4ro4sl2EUqIH15xzN6595bLvVZW1xefE3KmneVA2Ea6xJIQPRaMbI4DcNX/9VmFGrtID9+vIqFM=
x-ms-exchange-antispam-srfa-diagnostics: SOS;
x-ms-office365-filtering-correlation-id: 8659e0b0-982d-49aa-8c57-08d66144c91f
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);SRVR:DM5PR15MB1739;
x-ms-traffictypediagnostic: DM5PR15MB1739:
x-microsoft-antispam-prvs: <DM5PR15MB17390D1C04D5F1BE20CF5166B3A00@DM5PR15MB1739.namprd15.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(8211001083)(3230021)(999002)(11241501185)(6040522)(2401047)(5005006)(8121501046)(823302103)(3002001)(10201501046)(93006095)(93001095)(3231475)(944501520)(52105112)(148016)(149066)(150057)(6041310)(20161123564045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123558120)(20161123562045)(20161123560045)(201708071742011)(7699051)(76991095);SRVR:DM5PR15MB1739;BCL:0;PCL:0;RULEID:;SRVR:DM5PR15MB1739;
x-forefront-prvs: 088552DE73
x-forefront-antispam-report: SFV:NSPM;SFS:(10019020)(376002)(366004)(39860400002)(346002)(136003)(396003)(199004)(189003)(102836004)(6506007)(76176011)(486006)(83716004)(54906003)(97736004)(6436002)(229853002)(53546011)(71200400001)(86362001)(316002)(68736007)(105586002)(305945005)(8936002)(71190400001)(81166006)(53936002)(11346002)(256004)(476003)(14444005)(7736002)(6486002)(2616005)(82746002)(446003)(81156014)(478600001)(99286004)(25786009)(5660300001)(8676002)(50226002)(57306001)(6512007)(186003)(2906002)(33656002)(106356001)(6246003)(36756003)(4326008)(46003)(6916009)(14454004)(6116002)(93886005);DIR:OUT;SFP:1102;SCL:1;SRVR:DM5PR15MB1739;H:DM5PR15MB1163.namprd15.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
x-microsoft-antispam-message-info: fA2lIzlojCQMgIND0dzCUemd3vF1EVAFzr0Ft3y2DYDfv5IHTFO22RAICp60wYYmWbd+1ph5sw/9ywIguxPCCGLVDbSXH0/2JVb2fNonkFM2To/Nxu2Z1YfGgGZ+lJgUPKPNKQempQUvwJWVj6vmiRqIcWsdMun4Y5MWRdjA+BmJErFvr8cIaYmQShIeo6zpyxV1ScW4aPR+LlcRUyxAdi1mtC2B7VXz33PPX6DGLa5ByjWx0Qjph8V4XY37pDmw2EQ5VN7tWslUkMCmTqjN5FUFduE0pQucSaUrDRgWK3VRKH9KyvqHmqTjpKZ9PM6W
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="us-ascii"
Content-ID: <C7AF2C57AB0B8D4E942F6A3D6EC95031@namprd15.prod.outlook.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-MS-Exchange-CrossTenant-Network-Message-Id: 8659e0b0-982d-49aa-8c57-08d66144c91f
X-MS-Exchange-CrossTenant-originalarrivaltime: 13 Dec 2018 21:48:57.8311
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 8ae927fe-1255-47a7-a2af-5f3a069daaa2
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR15MB1739
X-OriginatorOrg: fb.com
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:,, definitions=2018-12-13_03:,,
 signatures=0
X-Proofpoint-Spam-Reason: safe
X-FB-Internal: Safe
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



> On Dec 13, 2018, at 10:45 AM, Peter Zijlstra <peterz@infradead.org> wrote=
:
>=20
> On Wed, Dec 12, 2018 at 01:33:20PM -0500, Steven Rostedt wrote:
>> On Wed, 12 Dec 2018 19:05:53 +0100
>> Peter Zijlstra <peterz@infradead.org> wrote:
>>=20
>>> On Wed, Dec 12, 2018 at 05:09:17PM +0000, Song Liu wrote:
>>>>> And while this tracks the bpf kallsyms, it does not do all kallsyms.
>>>>>=20
>>>>> .... Oooh, I see the problem, everybody is doing their own custom
>>>>> kallsym_{add,del}() thing, instead of having that in generic code :-(
>>>>>=20
>>>>> This, for example, doesn't track module load/unload nor ftrace
>>>>> trampolines, even though both affect kallsyms. =20
>>>>=20
>>>> I think we can use PERF_RECORD_MMAP(or MMAP2) for module load/unload.=
=20
>>>> That could be separate sets of patches.  =20
>>>=20
>>> So I would actually like to move bpf_lock/bpf_kallsyms/bpf_tree +
>>> bpf_prog_kallsyms_*() + __bpf_address_lookup() into kernel/kallsyms.c
>>> and also have ftrace use that.
>>>=20
>>> Because currently the ftrace stuff is otherwise invisible.
>>>=20
>>> A generic kallsym register/unregister for any JIT.
>>=20
>> That's if it needs to look up the symbols that were recorded when init
>> was unloaded.
>>=20
>> The ftrace kallsyms is used to save the function names of init code
>> that was freed, but may have been recorded. With out the ftrace
>> kallsyms the functions traced at init time would just show up as hex
>> addresses (not very useful).
>>=20
>> I'm not sure how BPF would need those symbols unless they were executed
>> during init (module or core) and needed to see what the symbols use to
>> be).
>=20
> Aah, that sounds entirely dodgy and possibly quite broken. We freed that
> init code, so BPF or your trampolines (or a tiny module) could actually
> fit in there and insert their own kallsyms, and then we have overlapping
> symbols, which would be pretty bad.
>=20
> I thought the ftrace kallsym stuff was for the trampolines, which would
> be fairly similar to what BPF is doing. And why I'm trying to get a
> generic dynamic kallsym thing sorted. There's bound the be other
> code-gen things at some point.

Hi Peter,=20

I guess you are looking for something for all ksym add/delete events, like;

      /*
       * PERF_RECORD_KSYMBOL
       *
       * struct {
       *      struct perf_event_header header;
       *      u64                             addr;
       *      u32                             len;
       *      u16                             ksym_type;
       *      u16                             flags;
       *      char                            name[];
       *      struct sample_id                sample_id;
       * };
       */

We can use ksym_type to encode BPF_EVENT, trampolines, or other type of ksy=
m.
We can use flags or header.misc to encode ksym add/delete. Is this right?

If we go this direction, shall we reserve a few more bytes in it for differ=
ent
types to use, like:

      /*
       * PERF_RECORD_KSYMBOL
       *
       * struct {
       *      struct perf_event_header header;
       *      u64                             addr;
       *      u32                             len;
       *      u16                             ksym_type;
       *      u16                             flags;
       *      u64                             data[2];
       *      char                            name[];
       *      struct sample_id                sample_id;
       * };
       */

Thanks,
Song


