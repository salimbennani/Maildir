Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 26 Nov 2018 08:52:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 18D445803C2;
	Sun, 25 Nov 2018 13:39:12 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga003-1.jf.intel.com with ESMTP; 25 Nov 2018 13:39:10 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AWbTi9RBdO0j5O8TkymXIUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/osuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95NWCNOH42y?=
 =?us-ascii?q?b4kAAeQOM+hboYnzuVwArQCmBQSuH+7v1iZIhnrq0a06z+gsEwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqETUeCv1qbIyyjIYu9S2Tf67ojDbxcsofWNXbJqa8XRz1MjGBnBjlWX?=
 =?us-ascii?q?r4zoJDSV1v4XvGeH6+pvS/ijhHIgqwF0uzWiwNonhIrRho8N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZhMuy2ANoZ7QNsuT3xntSon0LEKpJG2cSkQxJg62hLSauaLf5WH?=
 =?us-ascii?q?7x/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSszlZKoTRKksPWunAOyRPT8M6HRe?=
 =?us-ascii?q?V5/ku73jaPzQ/T5vlFIUAyi6XbN4YszqAsmpcXq0jPAyH7lFvsgKOLdUgo5vKk?=
 =?us-ascii?q?5uXlb7n+o5+TLY50igXwMqQ0ncy/BPw1MgwPX2id5OS926Tv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIndJcUVoK62HRVV35096xawETimys4UnXoZI1JffhKIkYzpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V905sUWXiTDa+BLKPSrViI6/ovI+aWZY8VpCzyK/8/6/7u?=
 =?us-ascii?q?kH82g1kdfaay0JsTaXC4GOlmIkqDbXrthNcBDXkFvg4kQOP2j12CVCZZZ2yuUK?=
 =?us-ascii?q?Ik+jE7FIWmAJ/BRoCqnrONxiS7HppQZmBADVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+Dcjwoy9TxzD8SeyW2NVXt7nm?=
 =?us-ascii?q?ETSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T82lAT4rSNI92dsOY0dnFNWkgRDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iWiryldboC0yLX9GeM12yOvFpGXw52VqnF?=
 =?us-ascii?q?WXMfZk7Srdni4kPCTrmuCakoMwdbyM6CLLdKZcPtjVlcWPjjP9HeaXqrm2isHR?=
 =?us-ascii?q?aI2q+MbI3ydmoAxirdFlYLnxoT/XmcMwg+HTmuo2TFATxqFFLvZV7s8OZkpHO6?=
 =?us-ascii?q?SE800x+Fb0l727Wp/R4VgOSWS+kP0bIcpCchtzJ0EU6h39LXDtqAoBZhfKVcYN?=
 =?us-ascii?q?8n/FdLz2XZtxZ5PpyhKaBiiUUTcwB2v0PoyhV2BZ9MkcksrHM20gVyLbiU309G?=
 =?us-ascii?q?dzOdxZrwIKHYKnHu/BCzbK7bwkvR0NKI9aYA9vs5q0/vsxq0FkU/6Xpn1dpV03?=
 =?us-ascii?q?yC5pjRCAoSUJTxUls49hRgprHaZDU96J3Q1XF2Laa0tTrC0cozBOQ50hagY8tf?=
 =?us-ascii?q?MKScGQ7yDs0WHdShJPYrmlipdB0EOu9S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+sstr2mY9Yfz4SBHewyS/+CI5XeKJy?=
 =?us-ascii?q?Z4cLBX6yLMKtwtVxmoDiW2Rf9F6lHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6jVbsIJK4jtAAUEizcggpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxka3Dn5H2?=
 =?us-ascii?q?tdxzA7cCumuo7jkBx5i2KdLXBzo2TfecxrwRff5drcReNe3zYcRSl4jyXXCUa4?=
 =?us-ascii?q?P9Wz4dqUkJLDuPikV229Tp1TbTXrzYSYuSq7/2JqBgezn/Kymt3hCgU61S7719?=
 =?us-ascii?q?93VSTHthr8Y4/r17ikPuJjZEVnGFj8689iEIFkjoQwnI0Q2WQdhpiN/noIi2bz?=
 =?us-ascii?q?Pc9b2aLjdnUNQzELzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYf18njce0/Qi8nAbjP8SuAox0CqdGKsdEldCPSzjjBmI?=
 =?us-ascii?q?69G+rKNKZGega7Sw1Ux+ncy/A7GGuA1TRHH5epI6Fy9q8sp/KE7M0GH06oz8ZN?=
 =?us-ascii?q?nQatcTugeVkhjaiehVNYkxluELhSd8PWL9vHsly/M0jBB03JG6upSHJHtp/K6j?=
 =?us-ascii?q?HhFYMTj1bdsJ+j7xlaZegtqW34e3E5p6ADoLW5/oTe+yHDIWqPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM5FBqlxMn/?=
 =?us-ascii?q?f0di/DwR+kT0qhhRyuJrKhn/VH3QpByzZzcwSZifKgdW7w5Y60fUN8ye8vx8Hy?=
 =?us-ascii?q?VC8pK9qwyNL3SRZx5UAmERRkyEG1fjM6Gu5NnH7uiYH/e+IOHIYbmUsuxeUPGI?=
 =?us-ascii?q?xZ2034ti/jaMMNiPP3Z4A/063EpDQW52G8DDlzoTTCwXkjrHb9SHqxek5i13ss?=
 =?us-ascii?q?e//ezrWA3x5IuPCLhSMdR19xC1m6eDMOGQizhjKTZFzZMB3nvIyLkZ3F4PhCBi?=
 =?us-ascii?q?bTitEbIctSHTSKLcgLNYDxkeaylrLstH87o83hVROc7ckt76zKN4geUvC1hbVV?=
 =?us-ascii?q?3tgMWpZc0RLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlQjCGaORxSop2yfgxxBmjjUt3mbAa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMpYXvuFtAiRxluJa5mw1yrpV?=
 =?us-ascii?q?7C5eQvx1lzDfrtpvo1Ggj+mOxSBrUBtIqjZXmo2LuV9uNrne9plFCj74+0c15G?=
 =?us-ascii?q?KUDFwgoN13C9vu8/RIwN/JhqP1KR9Y/t7U9NdaDM/RfpGpKn0kZD7oAjfSRCIB?=
 =?us-ascii?q?SjjjYWXenUVb1viW8Xu9qYIzoZzh3pEJT+kIBxQOCvoGBxE9T5Q5K5BtU2ZhyO?=
 =?us-ascii?q?bDgQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACPFftbh0O0hNFhGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2sng3mIGF+LH4FoJRSXKIFzEgEBGBMBhEC?=
 =?us-ascii?q?EGiI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEBN?=
 =?us-ascii?q?wEEAQkBAQoOCgICJgICA1QGEwWDHIF6CAQBpHBwfDOCdgEBBYJDhE8IgQuKfoF?=
 =?us-ascii?q?XP4E4DBOCHi6EfoMEgleJJZZfBwKCHASPDxiBWYgIJocBlS6CWwIEAgQFAhMBg?=
 =?us-ascii?q?UaCDTMaBB96AYJBPoFdDBcSgziKVHCBBQEBjEoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAACPFftbh0O0hNFhGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2sng3mIGF+LH4FoJRSXKIFzEgEBGBMBhECEGiI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEBNwEEAQkBAQoOCgI?=
 =?us-ascii?q?CJgICA1QGEwWDHIF6CAQBpHBwfDOCdgEBBYJDhE8IgQuKfoFXP4E4DBOCHi6Ef?=
 =?us-ascii?q?oMEgleJJZZfBwKCHASPDxiBWYgIJocBlS6CWwIEAgQFAhMBgUaCDTMaBB96AYJ?=
 =?us-ascii?q?BPoFdDBcSgziKVHCBBQEBjEoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,279,1539673200"; 
   d="scan'208";a="41462233"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 25 Nov 2018 13:39:10 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726139AbeKZIbJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 26 Nov 2018 03:31:09 -0500
Received: from aserp2120.oracle.com ([141.146.126.78]:60924 "EHLO
        aserp2120.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725992AbeKZIbJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Nov 2018 03:31:09 -0500
Received: from pps.filterd (aserp2120.oracle.com [127.0.0.1])
        by aserp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id wAPLd01k069781;
        Sun, 25 Nov 2018 21:39:00 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com; h=content-type :
 mime-version : subject : from : in-reply-to : date : cc :
 content-transfer-encoding : message-id : references : to;
 s=corp-2018-07-02; bh=eKvPbzzzGFEKgdgh+YjIsRNapNnjTW6D3bs22BkHqRE=;
 b=ahNONecUgeiw1hzehBBTThK9MXSDIiS9xjkrSCZuFjRxD6WsqtAiPhUd+rS0LBNJIgDJ
 huBj9Txb979/G79pIhsTHq4kawUUqAXN/F8IGiHJDmOcm2wm2xEGO4oXk9lFw8dBMPK7
 H+yJ0xzF06YcfUZODZDf4gj9YycNNF20/uX3Fi1uH250HeOrN3+6Ue+urBwg//muZRJ9
 ZkWZGlkrHcQ7tQ9l28sqrpWjrDHMCnFOgRmQNo/rKnXTAiTCz+ZWQOMoPDhOJsMEGk/k
 0hqg2xlWK4dnO24qy/FtZxykGOO1HueJZSu6lbiRV/sNw91kKzXlpPHbFjcsT2L2x6Po PQ== 
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
        by aserp2120.oracle.com with ESMTP id 2nxxkq2se6-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Sun, 25 Nov 2018 21:39:00 +0000
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
        by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id wAPLcxWi032485
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Sun, 25 Nov 2018 21:38:59 GMT
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
        by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id wAPLcwxD001649;
        Sun, 25 Nov 2018 21:38:58 GMT
Received: from [192.168.14.112] (/109.65.235.154)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Sun, 25 Nov 2018 13:38:58 -0800
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 11.1 \(3445.4.7\))
Subject: Re: [PATCH] KVM: x86: Trace changes to active TSC offset regardless
 if vCPU in guest-mode
From: Liran Alon <liran.alon@oracle.com>
In-Reply-To: <1543168405-16768-1-git-send-email-pbonzini@redhat.com>
Date: Sun, 25 Nov 2018 23:38:53 +0200
Cc: linux-kernel@vger.kernel.org, kvm@vger.kernel.org,
        Jim Mattson <jmattson@google.com>
Content-Transfer-Encoding: quoted-printable
Message-Id: <941567E8-FA38-4947-B9F9-529039ADDCEA@oracle.com>
References: <1543168405-16768-1-git-send-email-pbonzini@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
X-Mailer: Apple Mail (2.3445.4.7)
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=9088 signatures=668685
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=0 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=999
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1810050000 definitions=main-1811250132
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



> On 25 Nov 2018, at 19:53, Paolo Bonzini <pbonzini@redhat.com> wrote:
>=20
> For some reason, kvm_x86_ops->write_l1_tsc_offset() skipped trace
> of change to active TSC offset in case vCPU is in guest-mode.
> This patch changes write_l1_tsc_offset() behavior to trace any change
> to active TSC offset to aid debugging.  The VMX code is changed to
> look more similar to SVM, which is in my opinion nicer.
>=20
> Based on a patch by Liran Alon.
>=20
> Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

I would have applied this refactoring change on top of my original =
version of this patch. Easier to read and review.
But I guess it=E2=80=99s a matter of taste=E2=80=A6
Anyway, code looks correct to me. Therefore:
Reviewed-by: Liran Alon <liran.alon@oracle.com>

> ---
> 	Untested still, but throwing it out because it seems pretty
> 	obvious...
>=20
> arch/x86/kvm/svm.c |  9 +++++----
> arch/x86/kvm/vmx.c | 34 +++++++++++++++++-----------------
> 2 files changed, 22 insertions(+), 21 deletions(-)
>=20
> diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
> index a24733aade4c..0d1a74069a9e 100644
> --- a/arch/x86/kvm/svm.c
> +++ b/arch/x86/kvm/svm.c
> @@ -1456,10 +1456,11 @@ static u64 svm_write_l1_tsc_offset(struct =
kvm_vcpu *vcpu, u64 offset)
> 		g_tsc_offset =3D svm->vmcb->control.tsc_offset -
> 			       svm->nested.hsave->control.tsc_offset;
> 		svm->nested.hsave->control.tsc_offset =3D offset;
> -	} else
> -		trace_kvm_write_tsc_offset(vcpu->vcpu_id,
> -					   =
svm->vmcb->control.tsc_offset,
> -					   offset);
> +	}
> +
> +	trace_kvm_write_tsc_offset(vcpu->vcpu_id,
> +				   svm->vmcb->control.tsc_offset - =
g_tsc_offset,
> +				   offset);
>=20
> 	svm->vmcb->control.tsc_offset =3D offset + g_tsc_offset;
>=20
> diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
> index 764c23dc444f..e7d3f7d35355 100644
> --- a/arch/x86/kvm/vmx.c
> +++ b/arch/x86/kvm/vmx.c
> @@ -3466,24 +3466,24 @@ static u64 vmx_read_l1_tsc_offset(struct =
kvm_vcpu *vcpu)
>=20
> static u64 vmx_write_l1_tsc_offset(struct kvm_vcpu *vcpu, u64 offset)
> {
> -	u64 active_offset =3D offset;
> -	if (is_guest_mode(vcpu)) {
> -		/*
> -		 * We're here if L1 chose not to trap WRMSR to TSC. =
According
> -		 * to the spec, this should set L1's TSC; The offset =
that L1
> -		 * set for L2 remains unchanged, and still needs to be =
added
> -		 * to the newly set TSC to get L2's TSC.
> -		 */
> -		struct vmcs12 *vmcs12 =3D get_vmcs12(vcpu);
> -		if (nested_cpu_has(vmcs12, CPU_BASED_USE_TSC_OFFSETING))
> -			active_offset +=3D vmcs12->tsc_offset;
> -	} else {
> -		trace_kvm_write_tsc_offset(vcpu->vcpu_id,
> -					   vmcs_read64(TSC_OFFSET), =
offset);
> -	}
> +	struct vmcs12 *vmcs12 =3D get_vmcs12(vcpu);
> +	u64 g_tsc_offset =3D 0;
> +
> +	/*
> +	 * We're here if L1 chose not to trap WRMSR to TSC. According
> +	 * to the spec, this should set L1's TSC; The offset that L1
> +	 * set for L2 remains unchanged, and still needs to be added
> +	 * to the newly set TSC to get L2's TSC.
> +	 */
> +	if (is_guest_mode(vcpu) &&
> +	    (vmcs12->cpu_based_vm_exec_control & =
CPU_BASED_USE_TSC_OFFSETING))
> +		g_tsc_offset =3D vmcs12->tsc_offset;
>=20
> -	vmcs_write64(TSC_OFFSET, active_offset);
> -	return active_offset;
> +	trace_kvm_write_tsc_offset(vcpu->vcpu_id,
> +				   vcpu->arch.tsc_offset - g_tsc_offset,
> +				   offset);
> +	vmcs_write64(TSC_OFFSET, offset + g_tsc_offset);
> +	return offset + g_tsc_offset;
> }
>=20
> /*
> --=20
> 1.8.3.1
>=20



