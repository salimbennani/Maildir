Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:40:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6678F580443
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 07:50:04 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 07:50:04 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Aw3wNLBJM8uyoE9REedmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXKvnzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQsleWCxPDYGy?=
 =?us-ascii?q?YYUADOQBM/hWoY7gqVsWrxawBwahCP7hxzNUmHD2xrY30/g4EQHDwAAgH84CvX?=
 =?us-ascii?q?bSod7oNKkSS+e1zKzQwDjdb/NWwzb96JPUchAmufGMXax/etfMxkYxCgjLgFSQ?=
 =?us-ascii?q?qYr7MDyJ1uQNsm6b5PdnWO2yim4nrR9+rSSvxsctjInEnZgVxU7Z+iV52ok1Oc?=
 =?us-ascii?q?e0R1J8Yd6hCZZdsTyROYVxQsMnWW5ouSA6x6UHuZ6+cygK1Y4nywTDZPyAdoiE?=
 =?us-ascii?q?+h3jVOeNITd4mXJqY6iziAq18UilzOD3S8q60E5SoyZbjtXBtWoB2wHO5sWEUP?=
 =?us-ascii?q?dx4Ems1DaV2wzO6OxIOUM5mKnBJ5I8wbM8iIAfvVnCEyPrgkn7gqCbe0M58eay?=
 =?us-ascii?q?8evneK/pppqEOo90lA7+NqMul9S7AeQ5KQgOQ3Ob9f6z1L3l4E31WrJKjuc5kq?=
 =?us-ascii?q?XBsZDaI9oUprKhDgNLzoou6AyzAyq73Nkbh3ULMlxIdRKdg4T0OVzCOPX4Au2+?=
 =?us-ascii?q?g1Sonjdr3ffGPrj5D5XUMHfDlarhca9g5EFC1go809Rf64tPBbEGPfLzXFP+u8?=
 =?us-ascii?q?LDDhM+Nwy0wuXnB8tn2oIRRGKCGquZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mVIGe6mp2p0XaH++HvR7OUmZZmDsgtgZHWcQogU+VPDqiEGFUTNLY3ayXq?=
 =?us-ascii?q?E86S8hBIOpEIfOXYStgL2H3CemEZxafGFGClaQEXj2c4WIQesDaCWXIpwprzof?=
 =?us-ascii?q?SLL0S5M9zQr880j+yqF7NazS/SsXs4+l08J6oOjalBU3/DozCNyB0maLVCZtk2?=
 =?us-ascii?q?YVAjM7wq178nF70UqJhK1xgvhEEo5K6vZUFws3K5PYivZ3Es3/QR7peNCPR1C7?=
 =?us-ascii?q?BNK8DmYqU9gzztQSNlt7AMiolRvZ3iCnUIMSwoSCA5gzuojb2WrwIcc1n27M06?=
 =?us-ascii?q?8zjl8natFCOW2vmuh08A2FVKDTlEDMvKawdL8A2zbN+S+PwCKivUdVWw5xV+2R?=
 =?us-ascii?q?UXEZa0DWrNLR/E7OT7ayT78gN10Smoa5NqJWZ4ix3h19T/D5NYGbOjrplg=3D?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAgDLoQZchxHrdtBjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBZYExgTkDgRMTg3mIeI08fJhAEgEBGA0Hg3pGg1EiOBIBAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECICMKKQMCAQECBgEBCg4KAgIiB?=
 =?us-ascii?q?AICAwEwAQUBHAYTBYMcAYF5CAEDAQqZKDyLDYEvhC0BgRKEbAUSeYsTF4F/gRE?=
 =?us-ascii?q?nH4IXNYJ5JQKBLTSDBDGCJgKLIJRUVQmHA4MzhwsYiVsQhzuNQiwrh1qCXQIEA?=
 =?us-ascii?q?gQFAgUPIYE8gXZNIxU7KgGCQT6BaReDSopUcYEHiGuBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAgDLoQZchxHrdtBjHAEBAQQBAQcEAQGBZYExgTkDgRM?=
 =?us-ascii?q?Tg3mIeI08fJhAEgEBGA0Hg3pGg1EiOBIBAwEBAQEBAQIBEwEBAQoLCQgbDiMMg?=
 =?us-ascii?q?jYFAgMaAQaCWwEBAQECAQECICMKKQMCAQECBgEBCg4KAgIiBAICAwEwAQUBHAY?=
 =?us-ascii?q?TBYMcAYF5CAEDAQqZKDyLDYEvhC0BgRKEbAUSeYsTF4F/gREnH4IXNYJ5JQKBL?=
 =?us-ascii?q?TSDBDGCJgKLIJRUVQmHA4MzhwsYiVsQhzuNQiwrh1qCXQIEAgQFAgUPIYE8gXZ?=
 =?us-ascii?q?NIxU7KgGCQT6BaReDSopUcYEHiGuBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="55469237"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 07:50:03 -0800
Received: from localhost ([::1]:57680 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUCxW-0004kv-CS
	for like.xu@linux.intel.com; Tue, 04 Dec 2018 10:50:02 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53191)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dinechin@redhat.com>) id 1gUCxA-0004gy-GE
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 10:49:43 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dinechin@redhat.com>) id 1gUCx6-0007DR-Cm
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 10:49:40 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:37141)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <dinechin@redhat.com>) id 1gUCx6-0007CV-5K
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 10:49:36 -0500
Received: by mail-wm1-f68.google.com with SMTP id g67so9799407wmd.2
	for <qemu-devel@nongnu.org>; Tue, 04 Dec 2018 07:49:35 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
	:content-transfer-encoding:message-id:references:to;
	bh=c3in6Cq7xWPY6t4sGSFN8hU0R6Ka8ZXlwY6vvuO68OA=;
	b=l3D7S0vjxmzLlkw64yHdCBJo95YMAhh4UBOFzWmLaSxBNiAtHHn/pQ7RCGd43Q2AAu
	73R3z1keRcXE5CGEmYnoz1aGxUr+PUUXnEq04vtiQDgCjChl18QUSpwUEoklI7tiFZQ1
	f2jAuof8gH/yNXRuTiFW5x/f18HJXtXn2SEHqwvD/hOcrwthF38JdI/HeZVuO37n/Alu
	FaXCSR1r94rYYOfQleI22GpekVL7mEHjrZcx1LsC7tr5JBQ9g5VkbbiihBnKOI/k+oC1
	P4k9mY/o7KySnCFNftSpwiWNUYEgl1fqq0N59wFIyFK+UjGYw5Df9LWF4XxZQus5U9Tk
	5lbg==
X-Gm-Message-State: AA+aEWa3BYz3hsXHuGssBJUisKjEu2zyuuMKJW9+YhqcGTL2QDaSxzg5
	ki9R6bgRQJttfsEvt/DM+DxS2A==
X-Google-Smtp-Source: AFSGD/WfgQlOTD/BvqTR74CyykM0eHJZoTTeWfpQSBKH+EVww5F9uAYerRd8R7tPtHHTUi3dX6KKZw==
X-Received: by 2002:a1c:e18a:: with SMTP id y132mr4304427wmg.48.1543938574137; 
	Tue, 04 Dec 2018 07:49:34 -0800 (PST)
Received: from [192.168.77.22] (val06-1-88-182-161-34.fbx.proxad.net.
	[88.182.161.34])
	by smtp.gmail.com with ESMTPSA id j8sm13967928wmd.0.2018.12.04.07.49.31
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 04 Dec 2018 07:49:33 -0800 (PST)
Content-Type: text/plain;
	charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 11.5 \(3445.9.1\))
From: Christophe de Dinechin <dinechin@redhat.com>
In-Reply-To: <3a17b878-9a1c-7cdc-0250-187e82e2faf3@redhat.com>
Date: Tue, 4 Dec 2018 16:49:29 +0100
Content-Transfer-Encoding: quoted-printable
Message-Id: <3A78700E-A32B-42DC-90FA-F1501D434608@redhat.com>
References: <20181122072028.22819-1-xiaoguangrong@tencent.com>
	<20181122072028.22819-3-xiaoguangrong@tencent.com>
	<BB9071C9-5BED-4763-99B3-7083B8EB49CF@redhat.com>
	<3a17b878-9a1c-7cdc-0250-187e82e2faf3@redhat.com>
To: Paolo Bonzini <pbonzini@redhat.com>
X-Mailer: Apple Mail (2.3445.9.1)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.128.68
Subject: Re: [Qemu-devel] [PATCH v3 2/5] util: introduce threaded workqueue
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: KVM list <kvm@vger.kernel.org>, "Michael S. Tsirkin" <mst@redhat.com>,
	Marcelo Tosatti <mtosatti@redhat.com>,
	Xiao Guangrong <xiaoguangrong@tencent.com>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>,
	Peter Xu <peterx@redhat.com>, qemu-devel@nongnu.org,
	Juan Quintela <quintela@redhat.com>, Wei Wang <wei.w.wang@intel.com>,
	"Emilio G. Cota" <cota@braap.org>,
	Xiao Guangrong <guangrong.xiao@gmail.com>, jiang.biao2@zte.com.cn
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



> On 27 Nov 2018, at 14:51, Paolo Bonzini <pbonzini@redhat.com> wrote:
>=20
> On 27/11/18 13:49, Christophe de Dinechin wrote:
>> So this is not really
>> helping. Also, the ThreadLocal structure itself is not necessarily =
aligned
>> within struct Threads. Therefore, it=E2=80=99s possible that =
=E2=80=9Crequests=E2=80=9D for example
>> could be on the same cache line as request_fill_bitmap if planets =
align
>> the wrong way.
>=20
> I think this is a bit exaggerated.

Hence my =E2=80=9Cif planets align the wrong way=E2=80=9D :-)

But I understand that my wording came out too strong. My apologies.

I think the fix is to align ThreadLocal as well.


>  Linux and QEMU's own qht work just fine with compile-time directives.

Wouldn=E2=80=99t it work fine without any compile-time directive at all?
Alignment is just a performance optimization.

>=20
>> In order to mitigate these effects, I would group the data that the =
user
>> writes and the data that the thread writes, i.e. reorder =
declarations,
>> put request_fill_bitmap and request_valid_ev together, and try
>> to put them in the same cache line so that only one cache line is =
invalidated
>> from within mark_request_valid instead of two.
>>=20
>> Then you end up with a single alignment directive instead of 4, to
>> separate requests from completions.
>=20
> Yeah, I agree with this.
>=20
>> That being said, I=E2=80=99m not sure why you use a bitmap here. What =
is the
>> expected benefit relative to atomic lists (which would also make it =
really
>> lock-free)?
>>=20
>=20
> I don't think lock-free lists are easier.  Bitmaps smaller than 64
> elements are both faster and easier to manage.

I believe that this is only true if you use a linked list for both =
freelist
management and for thread notification (i.e. to replace the bitmaps).
However, if you use an atomic list only for the free list, and keep
bitmaps for signaling, then performance is at least equal, often better.
Plus you get the added benefit of having a thread-safe API, i.e.
something that is truly lock-free.

I did a small experiment to test / prove this. Last commit on branch:
=
https://github.com/c3d/recorder/commits/181122-xiao_guangdong_introduce-th=
readed-workqueue
Take with a grain of salt, microbenchmarks are always suspect ;-)

The code in =E2=80=9Cthread_test.c=E2=80=9D includes Xiao=E2=80=99s code =
with two variations,
plus some testing code lifted from the flight recorder library.
1. The FREE_LIST variation (sl_test) is what I would like to propose.
2. The BITMAP variation (bm_test) is the baseline
3. The DOUBLE_LIST variation (ll_test) is the slow double-list approach

To run it, you need to do =E2=80=9Cmake opt-test=E2=80=9D, then run =
=E2=80=9Ctest_script=E2=80=9D
which outputs a CSV file. The summary of my findings testing on
a ThinkPad, a Xeon machine and a MacBook is here:
https://imgur.com/a/4HmbB9K

Overall, the proposed approach:

- makes the API thread safe and lock free, addressing the one
drawback that Xiao was mentioning.

- delivers up to 30% more requests on the Macbook, while being
=E2=80=9Cwithin noise=E2=80=9D (sometimes marginally better) for the =
other two.
I suspect an optimization opportunity found by clang, because
the Macbook delivers really high numbers.

- spends less time blocking when all threads are busy, which
accounts for the higher number of client loops.

If you think that makes sense, then either Xiao can adapt the code
from the branch above, or I can send a follow-up patch.


Thanks
Christophe


