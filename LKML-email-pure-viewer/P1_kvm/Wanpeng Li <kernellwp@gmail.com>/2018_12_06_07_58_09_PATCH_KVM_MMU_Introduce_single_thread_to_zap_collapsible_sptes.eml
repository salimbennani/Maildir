Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:42:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 912E8580433;
	Wed,  5 Dec 2018 23:58:20 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 05 Dec 2018 23:58:20 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A4YNk5havt2G2wb6heFOP5yT/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm4bR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTyxPDJ2h?=
 =?us-ascii?q?YYUBDOQPOulXoJXyqVsVtRuzBxKhBP/sxzJSmnP7x7E23uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModr1LqgSV/i1w7fOzTXMcvhY3zb945XPfxAiv/6MR7RwftTVyUkrGQLFlk6d?=
 =?us-ascii?q?qYPgPzyP1+QNt3KX4PZnVeKqkmMqrRx6rDaoxscpkIbJh4QVx0jB9SpjwYY1Ic?=
 =?us-ascii?q?S0R1RhYdG4EJtQtj+aOJVsTsw+RGFovT42yrIAuZ6mZiQKz44nxxHZZveacIaI?=
 =?us-ascii?q?+gruWPiNLTp8nn5pZbyyiwio/US9yeDwStO43VdIoyZdjNXAqn4A2wbN5sSbSv?=
 =?us-ascii?q?Zx5Fqt1DmS2wzJ9+1IP045mKzGIJA72LEwjIAcsUHbEy/2hkr2iKiWe106+uin?=
 =?us-ascii?q?9evneK/qppyCOI9ujAHxLKAulta4AeQiPQgCR2mb+eKi273/5UD1XqlGg/ksnq?=
 =?us-ascii?q?XEvp3WO94XqrO6DgNJyIou6hSyAy+j0NsCnHkHKFxFeAiAj4jsI1zOJPH4DfGi?=
 =?us-ascii?q?g1WjiTtrxO7JPqfnAprTKnjPibDhfLh760FC0go+1s5f551KBbEbOv7zWVH+tM?=
 =?us-ascii?q?beDhAnNwy42eHnCM9y1o8GQ2KAHreZML/OsV+P/u8vJ+iMZIwLtzrnJPkl+uXj?=
 =?us-ascii?q?jXs4mV8bYKmo0oEbaHG+HvR6PUqZZWDgjcsGEWcPpgA+VvDliEWeUT5PYHa/R6?=
 =?us-ascii?q?I86Ss6CIK6F4jDQZqhgLyc3CihGJ1WaXtLClSNEXfuaoWFVO0AaCOUIs99jDME?=
 =?us-ascii?q?UaKtRJMm1RGrrAX60aZoLvLI+i0EspLuzNp15+rNmh0o9jx0CMKd02eKT2xvmm?=
 =?us-ascii?q?MIRjk23L1woEBny1eD17R4jOJcFdBJ+/xJVQI6P4bGz+NmE9DyRh7BftCRRVm8?=
 =?us-ascii?q?WdWmATYxTtErz98UeUl9Gc6vjhTC3yqsHr8UmKaHBJ0y8qLAwXfxI9xxxGrB1K?=
 =?us-ascii?q?kkl1MmWNdANXW6hq5j8AjeH43JnF+fl6qwcaQc3TTC9GGMzWeVuEFYUQhwUbjK?=
 =?us-ascii?q?XHwFZ0vWq8j56V3GT7O0FbsnNQ5Bw9aYKqRWct3pkUlGRPD7NdvDeW2xhXm/CQ?=
 =?us-ascii?q?yIxryWaorqYHsS3CPaBEgAkAAT+HKGOBM6BiegpWLeETNvGUjuY0Pq7elxtne7?=
 =?us-ascii?q?QlUowAGNak1rz6C19QINhfyAV/MT2aoJtzo7pDVqAlmxxdLWBMCGpwp6YqpcZ8?=
 =?us-ascii?q?gw4FNG1WLfqgx8MYasL6Fkhl4CbQt3u1ni2AlwCoVFicIqtm8lzBJuKaKE11NM?=
 =?us-ascii?q?by+Y3ZH1Or3QNmny/BCuZ7TK2l3E19aW4KMP6PU+q1XspwypEksi83N609hayX?=
 =?us-ascii?q?ec55PKDBYMXpL1SEo46x96p7TCaCkn+4zUzWFsMbWzsjLawd0pAPUqyxm+cNZf?=
 =?us-ascii?q?Kq+LDxLyHNAACMioK+wqnEapYwkAPOBT8q40Isyne+GH2K6tIOZvgjamgX5b74?=
 =?us-ascii?q?B610KG7zB8RfLQ35YZ3/GY2ROKVjfhjFu7rs/7g4FFZTEIEWq5xijpH4pRZqx0?=
 =?us-ascii?q?fYYWBmaiOcy3xtNih5HzX35U7kKsB1QD2MWxYxqdc0T93RFM1UQQuXGngyq4wC?=
 =?us-ascii?q?BunDEzs6Wf2zbCw+L8exodO25HXXVtgk3oIYepkd8aRk+obw4ymRuh5Eb6wbVb?=
 =?us-ascii?q?patlI2nSR0dIYzb5L2V4XqSssbqCZtZF6Ik0viVPTOS8fVeaR6b9ohsbyS/iH3?=
 =?us-ascii?q?FSxCsmdzGsoZj5mx16iGSALHd8tnbZeMdwxQvB69zYX/Jewj0GRCxggznNGle8?=
 =?us-ascii?q?J8Wp/cmTl5rbsOCxTXihVp5QcSns14+ArzG05W5pAR2+mfC8hNvnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Hodnmf0?=
 =?us-ascii?q?K9lb26P+bHwWSD4Pwt7V5hXl2UJ5InKIwYL5SmuSws97a9amZWMW3zo379pWB6?=
 =?us-ascii?q?eM8LxEgSx1r0K7rQ3LYPhxhDcdyeY0534cjOEEow4tziSbArAPEkhUJy3slxKU?=
 =?us-ascii?q?79+gqKVbfnqgcb+11EBmh9CuEKmCoh1AWHb+YpoiGC5w7sZlP17W3nz89JrkeM?=
 =?us-ascii?q?XOYtIJrRKbjQ3Aj+dOJZI1l/oKgzdnOG3nsX0kze47kQJh3ZWgsIebLGVt+bqz?=
 =?us-ascii?q?AgREOT3te8MT5jbtgL5CnsaR2oCjBJRgFS8NXJv1VvKoCzMSuO/jNwaPFj08t3?=
 =?us-ascii?q?iaFaDeHQ+Z9EdpsXbPH4q3OHGQIXkT1c9iSwWFJExDnAAUWy03kYUjGQCtwMzh?=
 =?us-ascii?q?bV115jQM5lPjrhtMy+RoNwTwU2vFpQeobCs0R4abLBZM8g5C4ELVO9SE7u1vBy?=
 =?us-ascii?q?FY4oGhrAuVJ2yZfQtICH8GWleeC1D/JLWu5sTA8+uFBuq4NfTOeq6DqehfV/eO?=
 =?us-ascii?q?2JKu3ZFq/zeKNsWTIHZiC+c31VZEXXB8A87ZgSkASzQLlyLRaM6WvBe9+ipqrs?=
 =?us-ascii?q?Cm7fTkQgTv6ZGUC7tVN9Vv9Au7gaOCN+6WmSZ4JixU1pIKxX/U1rcf2EQehD1p?=
 =?us-ascii?q?dzmoCb4ArzLCTLrMmq9LCB4WcyNzO9VJ76I/3QlNONTXitDv1r5/gf46FU1FVU?=
 =?us-ascii?q?H6msyyYcwKIme9NE7IBUqRNbSGIyHLzN/zYa+mVbJQi+BUvQWquTmHC0/jIiiD?=
 =?us-ascii?q?lz7xWh+1LOFDlzubMwJeuY2ndhZtCHPuTNbnah29Ld92gic6wbwyhnPWK2EcNS?=
 =?us-ascii?q?JwfF9Krr2V9SlYmOlwG3Rd7np5KumJgzqZ7+jdKpoMrfRnGDh7l+JE73Q80LZV?=
 =?us-ascii?q?6CBERPpomCrdtNJuolemkvWRxTpjShZBtjFLhIeTt0V4JarZ7oVAWWrD/B8V7W?=
 =?us-ascii?q?SfERIKp95kCt3po69Ry9jPm7j1KDdN6N/U+cocB87JKMOIKnYhMBzpGCLKAwsB?=
 =?us-ascii?q?VzKkKWbfh0kO2M2Vo3mUqIUq75vhgpwDTpdFW1EvUPAXEEJoGJoFOpgzFjA6lJ?=
 =?us-ascii?q?aFg8MSo3mzth/cQINdpJ+UeOiVBKDQITCBgL9LLz8Jief7IJ4VO4n/xFRKZVxz?=
 =?us-ascii?q?nYCMEE3VC4Me6hZ9ZxM59R0euEN1SXc+jge8Mlug?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACE1Qhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgl0MgQIngzs/iBmMDVABAQaBSYkMcY08gXMSAQEYCwgBh1UiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJlBAIJFwQLAQ0BGx0BAwIJAgUDF?=
 =?us-ascii?q?wUCJgICAyAFDAEFASMSBYMcAYFoAQMIDAEFCooAkAc8iw18FgUBF4J3BYEBMAE?=
 =?us-ascii?q?DAgxCgjsKGScNXYE3AgEFEnmGZIMTgRwXeIEHg3WDTAECAoE+AQGDIoJXApAxk?=
 =?us-ascii?q?CgJDYY2QIM0gm2EIBaBW4gFNocZAYkLhGqKZgIEAgkCBQ8hgSWCDXCDPIIbDBe?=
 =?us-ascii?q?DSoUUhUwzMgEBgQIBAQE7h1QECxeCJwEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAACE1Qhch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgl0?=
 =?us-ascii?q?MgQIngzs/iBmMDVABAQaBSYkMcY08gXMSAQEYCwgBh1UiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEIDQkIKSMMgjYkAYJlBAIJFwQLAQ0BGx0BAwIJAgUDFwUCJgICAyAFDAE?=
 =?us-ascii?q?FASMSBYMcAYFoAQMIDAEFCooAkAc8iw18FgUBF4J3BYEBMAEDAgxCgjsKGScNX?=
 =?us-ascii?q?YE3AgEFEnmGZIMTgRwXeIEHg3WDTAECAoE+AQGDIoJXApAxkCgJDYY2QIM0gm2?=
 =?us-ascii?q?EIBaBW4gFNocZAYkLhGqKZgIEAgkCBQ8hgSWCDXCDPIIbDBeDSoUUhUwzMgEBg?=
 =?us-ascii?q?QIBAQE7h1QECxeCJwEB?=
X-IronPort-AV: E=Sophos;i="5.56,321,1539673200"; 
   d="scan'208";a="42969609"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 23:58:18 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729212AbeLFH6Q (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 02:58:16 -0500
Received: from mail-pg1-f196.google.com ([209.85.215.196]:42517 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1729062AbeLFH6P (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 02:58:15 -0500
Received: by mail-pg1-f196.google.com with SMTP id d72so10275394pga.9;
        Wed, 05 Dec 2018 23:58:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=RGv8FHMp1VwIj8CLwNbx7fGxgdyYRFIVWoB9fwDfvdA=;
        b=EI6ju/LYOY4VaJYPtxLCR+55z2LfvuXPu+GsktgaVuBBDRrU5G+bbpm77zUQmssq9W
         GJbwEg0scTRHpC3HB7Sfg04t9zQgRwGPFvynUvErz8zbYeQrvvnLVh7BQOOI8u/biftm
         H6rN51fFOgcAwFjldz4J2WfXh1cgwgDnqWH6DCbSbaVX58IWUO9r1BEI80zl3c+AHtqC
         zhJB+KysLyr/FFlB5wP2blFdIG6TqRhJKzyG7xhsaCyuD6B4lTnVo7x9DaKQ6C9f/pG3
         Kw0PnDULuRtMdZBLjDJg1RjDmokVIvtFToUqD6C3uh7B+agWs8StqNU9ZCPLHZymlfFa
         pILw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=RGv8FHMp1VwIj8CLwNbx7fGxgdyYRFIVWoB9fwDfvdA=;
        b=aL+yDJfhT20xOXPoKanifVNPQR6SlcDt6cOjxWpIhD4EFgyJGMipgAdudh5vRdibzf
         3T/xRklNOmRvUh1ssZveoIHUH58RcCQMF5bNo9yVrzvaTZxsE2P5hRY12Gx8k5OSZ6vu
         zKDEU2qgk/FEKnvpl9/vMGFUCkIiozAe8No4b3GlQvRUhi9zuvHrN2J/MVWWQV0WcLkd
         2oapKRGR7gks2mFiqQv/7ro+6KwA5TTAtAuLsfg3sDfsLlfzStM8PufQ6a1AC2MsikoA
         UvucLDPtihUtpBgsurtmkZJsrbWaC+YdzaRm4ULDMk5PO+DN+4Z/3FMxCzvg3Back15K
         0miA==
X-Gm-Message-State: AA+aEWZXAj+hIm0ojn4hFyyZ33rrs2QV8n3+aWqgJMqQxgyRmJ2PeZ6G
        rsj8gwvQ0ixEyao2EbnhMwE1NIyP
X-Google-Smtp-Source: AFSGD/XxmHinmPF9f8vF9W3bacToStb78sJgswNDWAYRZUnX2SncK9Fqyc3qAlxWivpz6utxNJKKtw==
X-Received: by 2002:a62:47d9:: with SMTP id p86mr26969354pfi.95.1544083094266;
        Wed, 05 Dec 2018 23:58:14 -0800 (PST)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id g190sm26372993pgc.28.2018.12.05.23.58.12
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Wed, 05 Dec 2018 23:58:13 -0800 (PST)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        =?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= <rkrcmar@redhat.com>
Subject: [PATCH] KVM: MMU: Introduce single thread to zap collapsible sptes
Date: Thu,  6 Dec 2018 15:58:09 +0800
Message-Id: <1544083089-13000-1-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Wanpeng Li <wanpengli@tencent.com>

Last year guys from huawei reported that the call of memory_global_dirty_log_start/stop() 
takes 13s for 4T memory and cause guest freeze too long which increases the unacceptable 
migration downtime. [1] [2]

Guangrong pointed out:

| collapsible_sptes zaps 4k mappings to make memory-read happy, it is not
| required by the semanteme of KVM_SET_USER_MEMORY_REGION and it is not
| urgent for vCPU's running, it could be done in a separate thread and use
| lock-break technology.

[1] https://lists.gnu.org/archive/html/qemu-devel/2017-04/msg05249.html
[2] https://www.mail-archive.com/qemu-devel@nongnu.org/msg449994.html

Several TB memory guest is common now after NVDIMM is deployed in cloud environment.
This patch utilizes worker thread to zap collapsible sptes in order to lazy collapse 
small sptes into large sptes during roll-back after live migration fails.

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/include/asm/kvm_host.h |  3 +++
 arch/x86/kvm/mmu.c              | 37 ++++++++++++++++++++++++++++++++-----
 arch/x86/kvm/x86.c              |  4 ++++
 3 files changed, 39 insertions(+), 5 deletions(-)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index fbda5a9..dde32f9 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -892,6 +892,8 @@ struct kvm_arch {
 	u64 master_cycle_now;
 	struct delayed_work kvmclock_update_work;
 	struct delayed_work kvmclock_sync_work;
+	struct delayed_work kvm_mmu_zap_collapsible_sptes_work;
+	bool zap_in_progress;
 
 	struct kvm_xen_hvm_config xen_hvm_config;
 
@@ -1247,6 +1249,7 @@ void kvm_mmu_zap_all(struct kvm *kvm);
 void kvm_mmu_invalidate_mmio_sptes(struct kvm *kvm, struct kvm_memslots *slots);
 unsigned int kvm_mmu_calculate_mmu_pages(struct kvm *kvm);
 void kvm_mmu_change_mmu_pages(struct kvm *kvm, unsigned int kvm_nr_mmu_pages);
+void zap_collapsible_sptes_fn(struct work_struct *work);
 
 int load_pdptrs(struct kvm_vcpu *vcpu, struct kvm_mmu *mmu, unsigned long cr3);
 bool pdptrs_changed(struct kvm_vcpu *vcpu);
diff --git a/arch/x86/kvm/mmu.c b/arch/x86/kvm/mmu.c
index 7c03c0f..fe87dd3 100644
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@ -5679,14 +5679,41 @@ static bool kvm_mmu_zap_collapsible_spte(struct kvm *kvm,
 	return need_tlb_flush;
 }
 
+void zap_collapsible_sptes_fn(struct work_struct *work)
+{
+	struct kvm_memory_slot *memslot;
+	struct kvm_memslots *slots;
+	struct delayed_work *dwork = to_delayed_work(work);
+	struct kvm_arch *ka = container_of(dwork, struct kvm_arch,
+					   kvm_mmu_zap_collapsible_sptes_work);
+	struct kvm *kvm = container_of(ka, struct kvm, arch);
+	int i;
+
+	mutex_lock(&kvm->slots_lock);
+	for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++) {
+		spin_lock(&kvm->mmu_lock);
+		slots = __kvm_memslots(kvm, i);
+		kvm_for_each_memslot(memslot, slots) {
+			slot_handle_leaf(kvm, (struct kvm_memory_slot *)memslot,
+				kvm_mmu_zap_collapsible_spte, true);
+			if (need_resched() || spin_needbreak(&kvm->mmu_lock))
+				cond_resched_lock(&kvm->mmu_lock);
+		}
+		spin_unlock(&kvm->mmu_lock);
+	}
+	kvm->arch.zap_in_progress = false;
+	mutex_unlock(&kvm->slots_lock);
+}
+
+#define KVM_MMU_ZAP_DELAYED (60 * HZ)
 void kvm_mmu_zap_collapsible_sptes(struct kvm *kvm,
 				   const struct kvm_memory_slot *memslot)
 {
-	/* FIXME: const-ify all uses of struct kvm_memory_slot.  */
-	spin_lock(&kvm->mmu_lock);
-	slot_handle_leaf(kvm, (struct kvm_memory_slot *)memslot,
-			 kvm_mmu_zap_collapsible_spte, true);
-	spin_unlock(&kvm->mmu_lock);
+	if (!kvm->arch.zap_in_progress) {
+		kvm->arch.zap_in_progress = true;
+		schedule_delayed_work(&kvm->arch.kvm_mmu_zap_collapsible_sptes_work,
+			KVM_MMU_ZAP_DELAYED);
+	}
 }
 
 void kvm_mmu_slot_leaf_clear_dirty(struct kvm *kvm,
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index d029377..c2af289 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -9019,6 +9019,9 @@ int kvm_arch_init_vm(struct kvm *kvm, unsigned long type)
 
 	INIT_DELAYED_WORK(&kvm->arch.kvmclock_update_work, kvmclock_update_fn);
 	INIT_DELAYED_WORK(&kvm->arch.kvmclock_sync_work, kvmclock_sync_fn);
+	INIT_DELAYED_WORK(&kvm->arch.kvm_mmu_zap_collapsible_sptes_work,
+			zap_collapsible_sptes_fn);
+	kvm->arch.zap_in_progress = false;
 
 	kvm_hv_init_vm(kvm);
 	kvm_page_track_init(kvm);
@@ -9064,6 +9067,7 @@ void kvm_arch_sync_events(struct kvm *kvm)
 {
 	cancel_delayed_work_sync(&kvm->arch.kvmclock_sync_work);
 	cancel_delayed_work_sync(&kvm->arch.kvmclock_update_work);
+	cancel_delayed_work_sync(&kvm->arch.kvm_mmu_zap_collapsible_sptes_work);
 	kvm_free_pit(kvm);
 }
 
-- 
2.7.4

