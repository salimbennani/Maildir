Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 27 Nov 2018 16:44:59 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BDCC85803C2
	for <like.xu@linux.intel.com>; Tue, 27 Nov 2018 00:29:39 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 27 Nov 2018 00:29:39 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AwL4dVhQrbfTpuZYSlzdE2vEo49psv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zbRWN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRfDIOy?=
 =?us-ascii?q?b4UBDOQPMuhXoIb/u1QAogawBRGuCe3txTJEm3H70bEk3OQ6CgzGwA4tEsgSvH?=
 =?us-ascii?q?jIotj4NqEfWv21wqnSyjXDautb1jb86IfSdRAqvPCCXa9qfsrXxkkvDQTFjlOf?=
 =?us-ascii?q?qYf4OD6V2fkNvHKd7+pvT+KvjGgnqw5rrjmgx8cjkI7Ji5kaylDB7yp5wYI1Kc?=
 =?us-ascii?q?ekR058ZN6pCZ1dvDyZOYtuWs4uXX1ktSUgxrEbpJK2fzIGxIopyhPfcfCLboqF?=
 =?us-ascii?q?7gr9WOqNLzp0nmxpdK6/ihqo7EStxfDwWtO63VtLqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3T7uBEIVsolarAMZIhzbgwlocJvUTEBC/2l136jK6Qdko65uil?=
 =?us-ascii?q?8/rrbqnlq5OGKoN4lwLzPr4wlsGxAek0KBUCUmqD9eS5zrLj/En5QLtQjv0xl6?=
 =?us-ascii?q?nUqInaKtoepq6kGgNaz5gs6wihADeiydgXhn4HLE9DeB2bkYfpIFbCIPT5Dfe8?=
 =?us-ascii?q?nVugijhqx+3eM73lA5XNKGXDkbj7cbZ87U5c1BQ8zdRF651IDbEBJen+Wkn2tN?=
 =?us-ascii?q?zeAR85NRG0z/zgCNVn2YMSQXiPDbOBMKPOrV+I4foiI+2NZI8WpjnxMfck5+P1?=
 =?us-ascii?q?gH89mF8de7Sp3JQNZHC5GPRmP1uWYX72jtgdFmcKu1l2cerxlVfXUSJPf23gGO?=
 =?us-ascii?q?U45yonE8SgCoHMQJ3rh6aOmyKyH5lTb2YBDUiQEHDubMKdVvIRLS6fPMJlwQEC?=
 =?us-ascii?q?TqWrHooo1BWys13jxr96a+bZ5CAc8IjuzcV4/PH7kxY0+jppScOH3DaWUmt2k2?=
 =?us-ascii?q?gUEiIwx711ukdny12OgpR/1rZ1EN1X5vQBfUFyHpnAxqYyX9v1RgvpdM2AQU7g?=
 =?us-ascii?q?Rc+pV2IfVNU0lu8PakE1NMiriB/Z2CylS+sairWNC4Yz9K2az3n4IO5yzn/H0O?=
 =?us-ascii?q?8qiFxwEZgHDnGvmqMqr1ubPIXOiUjM0v/yLak=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAACc//xbhxHrdtBkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJig3mIGF+LJYFgLYkdjiCBcRQBARgUiHEiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIGw4jDII2BQIDGgEGglwBAgMBAiAEEQgBBQoMHQECAQIBAgYBAQUFC?=
 =?us-ascii?q?w0CAiIEAgIDAR0CEQEFARwGDQYCAQEBgxyBaQEDFAEBBJlfPIsNfBYFAReCdwW?=
 =?us-ascii?q?BAYFDgX8KGScNW4E3AgYSeYligRyCFoE4gmuCVoUsglcCiSKGQDOEQosFLgcCh?=
 =?us-ascii?q?j2HR4MmBhheiHSERYJyjk+JPwIEAgQFAgUPIYElgg1NI4EBgjuCGwwXg0qKX2W?=
 =?us-ascii?q?BBAM7izCBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AUAACc//xbhxHrdtBkHQEBBQEHBQGBUQgBCwGBMIJig3m?=
 =?us-ascii?q?IGF+LJYFgLYkdjiCBcRQBARgUiHEiNAkNAQMBAQEBAQECARMBAQEKCwkIGw4jD?=
 =?us-ascii?q?II2BQIDGgEGglwBAgMBAiAEEQgBBQoMHQECAQIBAgYBAQUFCw0CAiIEAgIDAR0?=
 =?us-ascii?q?CEQEFARwGDQYCAQEBgxyBaQEDFAEBBJlfPIsNfBYFAReCdwWBAYFDgX8KGScNW?=
 =?us-ascii?q?4E3AgYSeYligRyCFoE4gmuCVoUsglcCiSKGQDOEQosFLgcChj2HR4MmBhheiHS?=
 =?us-ascii?q?ERYJyjk+JPwIEAgQFAgUPIYElgg1NI4EBgjuCGwwXg0qKX2WBBAM7izCBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,286,1539673200"; 
   d="scan'208";a="139707573"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 27 Nov 2018 00:29:39 -0800
Received: from localhost ([::1]:40640 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gRYkU-00007P-8g
	for like.xu@linux.intel.com; Tue, 27 Nov 2018 03:29:38 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59124)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <guangrong.xiao@gmail.com>) id 1gRYk9-00007K-Dn
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 03:29:18 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <guangrong.xiao@gmail.com>) id 1gRYk6-0005Me-8u
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 03:29:17 -0500
Received: from mail-pl1-x642.google.com ([2607:f8b0:4864:20::642]:45677)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <guangrong.xiao@gmail.com>)
	id 1gRYk6-0005Kx-0c
	for qemu-devel@nongnu.org; Tue, 27 Nov 2018 03:29:14 -0500
Received: by mail-pl1-x642.google.com with SMTP id a14so15230322plm.12
	for <qemu-devel@nongnu.org>; Tue, 27 Nov 2018 00:29:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=subject:to:cc:references:from:message-id:date:user-agent
	:mime-version:in-reply-to:content-language:content-transfer-encoding;
	bh=hIQVJDn8jCHdsEos6/3AafrxFDEkuX11YYDY8iUyKc8=;
	b=jts52WhB35+3aInwy3IbSgtAKvzg4n3rmN0Itd6wvkjVoxhpwm4J5FhaTTJ3sNvaYO
	LqFb0lwx+ygp7R5DU9Spg5qNZJN8iyIGigHRgz21QrIVK6K3IBK6mqrMet8B8XQ4sq3e
	dqcughBtxHd+lL/mvlNrbh+uSsCW2t06LgKkA7rhXNtxghoRxJXg3BMPughuYxg17bUP
	aG5VN6IosjAgoKyzmjMo6R/ViBt6fen0oPyT+56+4k9JcuUZZRjoHsGEVXvG7MqiYXfY
	xuTlKxlDLJbSUlPKDyK9L12W6q+2LQ5M8taXLI9SgmX5ZOENm1BGpHNN+Y3TUt4RVxql
	oFRA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:subject:to:cc:references:from:message-id:date
	:user-agent:mime-version:in-reply-to:content-language
	:content-transfer-encoding;
	bh=hIQVJDn8jCHdsEos6/3AafrxFDEkuX11YYDY8iUyKc8=;
	b=jjmU5zEE64yn0We0YXFXSaqFZmGKVsIX9o8Hxdu77QVJ5LTXlHHpf260xBvRN20n0C
	z60lO71yjVenkERJ8+cKfH2geaQ/1oft1MhPW7C4lLIVStdH0S8HC/muWQyyyb1oa2XQ
	32U+BruqbVX3AWGQvZvEGBaO1XfquYFLmi/wLRVnISXMX5OQbG5EMyxKcoIVw3hivc6n
	r8Q/RGgK6oI7nj7024mPYZ+/xapQDOZkd3OJlk38AofpcUjaPT0/ijt5X18651BL11oA
	q+wICs48EKBS6qERaQ6auF8CnksB/OAyGpCR8DivAm+3zp+a7yNQigpL+WYU29OXf5gF
	lOsw==
X-Gm-Message-State: AA+aEWb4w4aUaoG/WRgUYB8nt9+joKFCkChrNveMCJtE3vkJuuwsSkTx
	BiCVlSTK0lGf56BaCgP0DH4=
X-Google-Smtp-Source: AFSGD/Xzrn9/WGhgf2N+VCtCHsj+H3R7MRTF2bkjtAZt1YqFruXaMUgAjAchWWqo+RHh5DWHwAKHYA==
X-Received: by 2002:a17:902:280b:: with SMTP id
	e11mr31509885plb.269.1543307352545; 
	Tue, 27 Nov 2018 00:29:12 -0800 (PST)
Received: from localhost.localdomain ([203.205.141.36])
	by smtp.gmail.com with ESMTPSA id r8sm3004472pgr.48.2018.11.27.00.29.07
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 27 Nov 2018 00:29:11 -0800 (PST)
To: "Emilio G. Cota" <cota@braap.org>
References: <20181126184919.GA6688@flamenco>
From: Xiao Guangrong <guangrong.xiao@gmail.com>
Message-ID: <fb9e053d-629d-d468-613d-2c695bf686ea@gmail.com>
Date: Tue, 27 Nov 2018 16:29:05 +0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181126184919.GA6688@flamenco>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::642
Subject: Re: [Qemu-devel] [PATCH v3 2/5] util: introduce threaded workqueue
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kvm@vger.kernel.org, mst@redhat.com, mtosatti@redhat.com,
	Xiao Guangrong <xiaoguangrong@tencent.com>, dgilbert@redhat.com,
	peterx@redhat.com, qemu-devel@nongnu.org, quintela@redhat.com,
	wei.w.wang@intel.com, jiang.biao2@zte.com.cn, pbonzini@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>



On 11/27/18 2:49 AM, Emilio G. Cota wrote:
> On Mon, Nov 26, 2018 at 16:06:37 +0800, Xiao Guangrong wrote:
>>>> +    /* after the user fills the request, the bit is flipped. */
>>>> +    uint64_t request_fill_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
>>>> +    /* after handles the request, the thread flips the bit. */
>>>> +    uint64_t request_done_bitmap QEMU_ALIGNED(SMP_CACHE_BYTES);
>>>
>>> Use DECLARE_BITMAP, otherwise you'll get type errors as David
>>> pointed out.
>>
>> If we do it, the field becomes a pointer... that complicates the
>> thing.
> 
> Not necessarily, see below.
> 
> On Mon, Nov 26, 2018 at 16:18:24 +0800, Xiao Guangrong wrote:
>> On 11/24/18 8:17 AM, Emilio G. Cota wrote:
>>> On Thu, Nov 22, 2018 at 15:20:25 +0800, guangrong.xiao@gmail.com wrote:
>>>> +static uint64_t get_free_request_bitmap(Threads *threads, ThreadLocal *thread)
>>>> +{
>>>> +    uint64_t request_fill_bitmap, request_done_bitmap, result_bitmap;
>>>> +
>>>> +    request_fill_bitmap = atomic_rcu_read(&thread->request_fill_bitmap);
>>>> +    request_done_bitmap = atomic_rcu_read(&thread->request_done_bitmap);
>>>> +    bitmap_xor(&result_bitmap, &request_fill_bitmap, &request_done_bitmap,
>>>> +               threads->thread_requests_nr);
>>>
>>> This is not wrong, but it's a big ugly. Instead, I would:
>>>
>>> - Introduce bitmap_xor_atomic in a previous patch
>>> - Use bitmap_xor_atomic here, getting rid of the rcu reads
>>
>> Hmm, however, we do not need atomic xor operation here... that should be slower than
>> just two READ_ONCE calls.
> 
> If you use DECLARE_BITMAP, you get an in-place array. On a 64-bit
> host, that'd be
> 	unsigned long foo[1]; /* [2] on 32-bit */
> 
> Then again on 64-bit hosts, bitmap_xor_atomic would reduce
> to 2 atomic reads:
> 
> static inline void bitmap_xor_atomic(unsigned long *dst,
> const unsigned long *src1, const unsigned long *src2, long nbits)
> {
>      if (small_nbits(nbits)) {
>          *dst = atomic_read(src1) ^ atomic_read(&src2);
>      } else {
>          slow_bitmap_xor_atomic(dst, src1, src2, nbits);

We needn't do inplace xor operation. i.e, we just fetch the bitmaps to
the local variables do xor locally.

So we need additional complicity to handle the case that is !small_nbits(nbits)
... but it is really not a big deal as you said, it just couple of codes.

However, use u64 for the purpose that only  64 indexes are allowed is more
straightforward and can be naturally understood. :)


