Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 18:29:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C028A580117;
	Mon,  3 Dec 2018 22:50:55 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga008-1.jf.intel.com with ESMTP; 03 Dec 2018 22:50:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AD6N3mhZXBzaWlW821ddQTz//LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcu+Yx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQct0ARWpFQ81fSSpPDI2h?=
 =?us-ascii?q?ZIcLEuYNIeNUoo/grFUMsBS+HxGhCv7xxD9GhnH43qM03OouHg7EwAMuENMOsG?=
 =?us-ascii?q?/MrNj3L6oSTeK4w7PUwTnfYf5b2THw45XIfBA7pvGMWKp9fsvMyUIyFAzKlFSQ?=
 =?us-ascii?q?ppfiPziI0ekMvHWb7ut6WuKukGEnrBp8ojiyxsg2hIjGmIMVxkrY+iV+xYY4PN?=
 =?us-ascii?q?u1Q1N1b96jFZtfrSCaN41uT8M5X25ouDs1xqcIuJ6gZCQKzJcnxxvba/CddIiI?=
 =?us-ascii?q?+B3jWP6QITd+mHJqZra/iwyu/kinz+3wTtK00E5LripDk9nDqmsN2wbV6seZVv?=
 =?us-ascii?q?tw+Fqq1zWX1w3L9O1IPUQ5mbDGJ5Mv3LI8jIcfvEffEiPsmUj7jreaelg49uSy?=
 =?us-ascii?q?6+nqYK/qq52eOoNulw3yLqAjltSwDOk4KAQCQWeW9OCm2LH94EH1Xq9GguAyn6?=
 =?us-ascii?q?XEtp3RON4VqbSjAwBP14Yu8xa/ACmi0NQfhXQHMl1Fdwydj4TzOFHBPur4DfGh?=
 =?us-ascii?q?jFSoijtrwOrGPrL5DpXMKHjMjqvhcK5j50JAzAc/181T6pxKBr0bPf7+WVP9uM?=
 =?us-ascii?q?bZAxI7KwC0xvzoCNR51oMQQ2KPBaqZPbvWsV+J4OIvPuaNaJYWuDnjMfgl4eDh?=
 =?us-ascii?q?jXsglV8ac6ip24UYaGqjE/R4LEWWf2Dsjs0CEWgUpAo+SvLliFmYXT5UfXayUL?=
 =?us-ascii?q?ow5isnB4K+EYfDWoetjaSF3Ce6HZ1ZeHpKC1+REXrzc4WEWvEMaD+dI8N7kzwE?=
 =?us-ascii?q?U6ShRJEl1R20qAD6zL9nJPLO+iIErZLjyMR15+rLmBEy7zN0Dtid3HuKT21unm?=
 =?us-ascii?q?MIWiU53KZwoUFmzleD0K54g+FXFNBJ5vNJVBs6OoDYz+BgF9/yXQfBdM+TSFm6?=
 =?us-ascii?q?WtWmHS0xTtUpzt8MZEZyBc+ujhPE3yqsBb8VkKeGBJg18qLawnjwKNxxy3fA1K?=
 =?us-ascii?q?k9kVYmRtFDOnGhhq567wLTHZLGk12Fl6a2cqQRxDTC9HyDzWqJv0FUShRwXr/H?=
 =?us-ascii?q?XX0EYkvWrNL55l7NTrO0CLQnNBdBxtCGKqdQdtLpilBGTu/5ONvCe2Kxh3uwBR?=
 =?us-ascii?q?GQy7OPdoXqfX8R3CHcCEcelQAT8m2LNQw/BienvmLfAyZiFVPpY0Pw7+Z+rGm3?=
 =?us-ascii?q?QVMzzwGPd0dhzaa6+gYJhfyATPMexq8Ltz0/qzpqBlq938jZC9ybpwV/eqVQZt?=
 =?us-ascii?q?c94FRC1WLdrAF9Op2gL6Z/hl8RaQh3vkXu1wlpBYVEi8QlsHQqzA9qI6KCzFxB?=
 =?us-ascii?q?by+Y3Yz3OrDPN2b95g6vZLDM1lHeytmW/LwP5+o+q1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svz/e2tIpAewlygqgf9Zf?=
 =?us-ascii?q?Kq+ECBX+E8oAB8iqKewqnVepYwkAPOBT8q40Isyne+GH2K6tIOZvgjamgX5b74?=
 =?us-ascii?q?B610KG7zB8RfLQ35YZ3/GY2ROKWC34jFi/vcH4h4BFaSsJEWqi1CfrHohRZq51?=
 =?us-ascii?q?fYYVEmquJ8y3xtNjh5/iQXJY9VijB08Y18+tYxadc1v93QhI30QNvXOngTe4zy?=
 =?us-ascii?q?BzkzwxrqufwTbCzPj4eBsGOm5EXm9ijVj3LIiwjtAaWlWobgczmBuk40b627ZU?=
 =?us-ascii?q?pKBlI2bPRkdIejD8L3t+XauoqrqCf8lP5YsysSVWTOuze0qaRaP6oxcA1SPsAX?=
 =?us-ascii?q?FexDEiez62oJr5mwF1h3yHLHZ0qnrUYsVwxRbZ5NzBSv9dxDsGRC9kiTbJAliw?=
 =?us-ascii?q?JcWm/dKRl53bqOCxS3qhVoFPcSns1Y6BtCq76XdqABGlhPCzh9vnHBM+0S/60d?=
 =?us-ascii?q?lqSCrJoAz9Yonty6S1L+ZnclN0C1/77spwApt+nZcohJEMxXgagY2Y/Xgdnmfp?=
 =?us-ascii?q?MtVb2qX+YGAWRTERwN7V4wnl2Et9IXKP3I/5UnSdws18Z9i1eG8W2yQ979xUB6?=
 =?us-ascii?q?eQ9rBLgSx1ol+gpwLLffd9hisdyecp6HMCg+AGog0twj+fArATG0lVJijslxWO?=
 =?us-ascii?q?79Cjo6Rbfmevcb6s1EVgmdCtFq2NogZZWHzhYJctATdw7tljMFLLyHDz6ZvreN?=
 =?us-ascii?q?jKYdITqx2biRHAj+dOJZI1l/oKgzdnOG3nsX0kze47kQJh3ZWgsIebLGVt+bqz?=
 =?us-ascii?q?AgREOT3te8MT5jbtgL5bnsaX3ICgBI9tGzsVU5vzUfKnDigSuu/5OAaUHz0xsX?=
 =?us-ascii?q?ObGbvZHQ+C50ZqtXPPE5a3N36JIHkV18ltRB6YJEZHmgAbQC06noIlFgCt3MHh?=
 =?us-ascii?q?bEB55jUL6l/5sBRMzP9oNwLkUmfevwqobjY0SJ6CLBtZ9A1C5kHVMdCA4eJ3BS?=
 =?us-ascii?q?1X4pqhrAmVIGyBewtIFX0JWlCDB137Jbah/97A8+yFBuakK/vOfK6DqehfV/eO?=
 =?us-ascii?q?2JKu3ZFq/zeKNsWTIHZiC+c31VZEXXB8A87ZgSkASzQLlyLRaM6WvBW89Tdyrs?=
 =?us-ascii?q?+h6/TnQh7v6ZGMC7tPMtVv5ha2jr2YN+OLgCZ5KDBY1o4DxHPSybgf2kIShD9q?=
 =?us-ascii?q?dzW3DbsAsivNRrrKmqBLFx4bdz9zNMxQ4qM82QlNJNfbis7v2b5+lPI1EFBFVV?=
 =?us-ascii?q?rumsyyYcwKIme9NE7IBUqRNbSGIyHLzN/zYa+mVbJQi+BUvQWquTmHC0/jIiiD?=
 =?us-ascii?q?lz7xWhCvL+5MjSKbPB9fuI2ncRZtE2/jTN34ZR2hLd93liY7wbk1hnPMKG4dPi?=
 =?us-ascii?q?Jwc0JLrr2M8yxYhu9zFHBG7npgNeOEgTqW7/HEKpYKtvtmGj57l/9B73Qg1bRU?=
 =?us-ascii?q?7DtIRPh0mCbJqt5uolemkvSAyzZ9URpOrCpLi5yPvUl4JarZ8ZxAU27e/B0R9W?=
 =?us-ascii?q?WQFwgKp9x9B93zuqBQz8LDm77pJDhe89Lb480cCtPQKMKGNnohLBXoFCTVDAsD?=
 =?us-ascii?q?UT6kK2Xfi1ZBn/GV832ftoI6pYT0mJoSVr9bU0Q4F/MABURjGdwCIZF3USslkL?=
 =?us-ascii?q?6blsEI43W+oQLVRMVbuJDHS/2TDe/uKDafkblLeR8IzankIoQUM42ok3BlP31n?=
 =?us-ascii?q?1K7DHE7NFYRHqyplc0kwvW1J8X5jXisy3V7obkWm53pFUbaWmRMshUNEZukh+T?=
 =?us-ascii?q?Okt1UwPF3i9CEhjEQq39L/jmbVOHTdJbmxUclpDC34t08sKZ6xC1J5cgitx2Rl?=
 =?us-ascii?q?MjneTr5chrcmcnpk3kuUkJ9CCbZjTKlAYRYV3vaRL6Eh1VlM7DqmwUtG7O7eDp?=
 =?us-ascii?q?1KjgYmcZew6XlH3lQnJP00P7DRbJVAyFtQi66D9nuryek3ww8TK0sl9n2TdC8B?=
 =?us-ascii?q?/kcPM+91CTCv+7lc9ESwkjpJfyBYR+c4q/Ng8Ws9Ju2fwiOm2LlGfBPif9eDJr?=
 =?us-ascii?q?+U7jCT3fWDRUk9gwZZz0Q=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CFAABhIwZch0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?QGCaAN/JwqYF4INFJc1FIFiKQ8EAYFLhkMiNgcNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMQgEOAYFkJIJjAQIBAgECJBFAAQYJAQEKEgYJFg8DBgMCAQIBFiEOBgEMA?=
 =?us-ascii?q?QcBAQEWgwYBggEFCqMLEYIfJQ6EAgEqARYPbYRtBYpagUIXgUA/gRGDEoMFGQE?=
 =?us-ascii?q?CgUiFcwKJLTWBPoRWNo9FVQmCI4RfgzKCbYQeGIlrhzuCfIYIg0uBG4QfgzSFA?=
 =?us-ascii?q?gKCBE0jFYMnH4VphFk7gzeBUQFDMgEBMQGBAwEBAQ51iGGBHwEB?=
X-IPAS-Result: =?us-ascii?q?A0CFAABhIwZch0O0hNFjHgEGBwaBUwcLAQGCaAN/JwqYF4I?=
 =?us-ascii?q?NFJc1FIFiKQ8EAYFLhkMiNgcNAQMBAQEBAQECARMBAQEKCwkIKSMMQgEOAYFkJ?=
 =?us-ascii?q?IJjAQIBAgECJBFAAQYJAQEKEgYJFg8DBgMCAQIBFiEOBgEMAQcBAQEWgwYBggE?=
 =?us-ascii?q?FCqMLEYIfJQ6EAgEqARYPbYRtBYpagUIXgUA/gRGDEoMFGQECgUiFcwKJLTWBP?=
 =?us-ascii?q?oRWNo9FVQmCI4RfgzKCbYQeGIlrhzuCfIYIg0uBG4QfgzSFAgKCBE0jFYMnH4V?=
 =?us-ascii?q?phFk7gzeBUQFDMgEBMQGBAwEBAQ51iGGBHwEB?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="55958032"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 22:50:53 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726030AbeLDGuv (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 01:50:51 -0500
Received: from szxga05-in.huawei.com ([45.249.212.191]:15635 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725976AbeLDGuu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 01:50:50 -0500
Received: from DGGEMS412-HUB.china.huawei.com (unknown [172.30.72.60])
        by Forcepoint Email with ESMTP id 1661C831211DD;
        Tue,  4 Dec 2018 14:50:47 +0800 (CST)
Received: from [127.0.0.1] (10.57.77.109) by DGGEMS412-HUB.china.huawei.com
 (10.3.19.212) with Microsoft SMTP Server id 14.3.408.0; Tue, 4 Dec 2018
 14:50:47 +0800
Subject: Re: [PATCH v4 0/8] vfio/mdev: IOMMU aware mediated device
To: Lu Baolu <baolu.lu@linux.intel.com>,
        Joerg Roedel <joro@8bytes.org>,
        "David Woodhouse" <dwmw2@infradead.org>,
        Alex Williamson <alex.williamson@redhat.com>,
        Kirti Wankhede <kwankhede@nvidia.com>
References: <20181105073408.21815-1-baolu.lu@linux.intel.com>
 <5C05F87D.4050206@huawei.com>
 <9a1d0b6f-7363-495d-2f4b-5a1693fb3fd9@linux.intel.com>
CC: <kevin.tian@intel.com>, <ashok.raj@intel.com>,
        <tiwei.bie@intel.com>,
        Jean-Philippe Brucker <jean-philippe.brucker@arm.com>,
        <sanjay.k.kumar@intel.com>, <iommu@lists.linux-foundation.org>,
        <linux-kernel@vger.kernel.org>, <yi.y.sun@intel.com>,
        <jacob.jun.pan@intel.com>, <kvm@vger.kernel.org>,
        Herbert Xu <herbert@gondor.apana.org.au>
From: Xu Zaibo <xuzaibo@huawei.com>
Message-ID: <5C0623C7.3000808@huawei.com>
Date: Tue, 4 Dec 2018 14:50:47 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101
 Thunderbird/38.5.0
MIME-Version: 1.0
In-Reply-To: <9a1d0b6f-7363-495d-2f4b-5a1693fb3fd9@linux.intel.com>
Content-Type: text/plain; charset="windows-1252"; format=flowed
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.57.77.109]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,
>>
>> Is this solution trying to support general user space processes who 
>> are directly working on devices?
>
> Yes, it is.
>

Okay. But I got another question. As I write a Crypto driver, could I 
call 'mdev_register_device'?
Or in other words, is 'mdev_register_device' acceptable for drivers of 
Crypto?

+cc: Herbert Xu

Thanks,
Zaibo

>>
>>
>> On 2018/11/5 15:34, Lu Baolu wrote:
>>> Hi,
>>>
>>> The Mediate Device is a framework for fine-grained physical device
>>> sharing across the isolated domains. Currently the mdev framework
>>> is designed to be independent of the platform IOMMU support. As the
>>> result, the DMA isolation relies on the mdev parent device in a
>>> vendor specific way.
>>>
>>> There are several cases where a mediated device could be protected
>>> and isolated by the platform IOMMU. For example, Intel vt-d rev3.0
>>> [1] introduces a new translation mode called 'scalable mode', which
>>> enables PASID-granular translations. The vt-d scalable mode is the
>>> key ingredient for Scalable I/O Virtualization [2] [3] which allows
>>> sharing a device in minimal possible granularity (ADI - Assignable
>>> Device Interface).
>>>
>>> A mediated device backed by an ADI could be protected and isolated
>>> by the IOMMU since 1) the parent device supports tagging an unique
>>> PASID to all DMA traffic out of the mediated device; and 2) the DMA
>>> translation unit (IOMMU) supports the PASID granular translation.
>>> We can apply IOMMU protection and isolation to this kind of devices
>>> just as what we are doing with an assignable PCI device.
>>>
>>> In order to distinguish the IOMMU-capable mediated devices from those
>>> which still need to rely on parent devices, this patch set adds two
>>> new members in struct mdev_device.
>>>
>>> * iommu_device
>>>    - This, if set, indicates that the mediated device could
>>>      be fully isolated and protected by IOMMU via attaching
>>>      an iommu domain to this device. If empty, it indicates
>>>      using vendor defined isolation.
>>>
>>> * iommu_domain
>>>    - This is a place holder for an iommu domain. A domain
>>>      could be store here for later use once it has been
>>>      attached to the iommu_device of this mdev.
>>>
>>> Below helpers are added to set and get above iommu device
>>> and iommu domain pointers in mdev core implementation.
>>>
>>> * mdev_set/get_iommu_device(dev, iommu_device)
>>>    - Set or get the iommu device which represents this mdev
>>>      in IOMMU's device scope. Drivers don't need to set the
>>>      iommu device if it uses vendor defined isolation.
>>>
>>> * mdev_set/get_iommu_domain(domain)
>>>    - A iommu domain which has been attached to the iommu
>>>      device in order to protect and isolate the mediated
>>>      device will be kept in the mdev data structure and
>>>      could be retrieved later.
>>>
>>> The mdev parent device driver could opt-in that the mdev could be
>>> fully isolated and protected by the IOMMU when the mdev is being
>>> created by invoking mdev_set_iommu_device() in its @create().
>>>
>>> In the vfio_iommu_type1_attach_group(), a domain allocated through
>>> iommu_domain_alloc() will be attached to the mdev iommu device if
>>> an iommu device has been set. Otherwise, the dummy external domain
>>> will be used and all the DMA isolation and protection are routed to
>>> parent driver as the result.
>>>
>>> On IOMMU side, a basic requirement is allowing to attach multiple
>>> domains to a PCI device if the device advertises the capability
>>> and the IOMMU hardware supports finer granularity translations than
>>> the normal PCI Source ID based translation.
>>>
>>> As the result, a PCI device could work in two modes: normal mode
>>> and auxiliary mode. In the normal mode, a pci device could be
>>> isolated in the Source ID granularity; the pci device itself could
>>> be assigned to a user application by attaching a single domain
>>> to it. In the auxiliary mode, a pci device could be isolated in
>>> finer granularity, hence subsets of the device could be assigned
>>> to different user level application by attaching a different domain
>>> to each subset.
>>>
>>> The device driver is able to switch between above two modes with
>>> below interfaces:
>>>
>>> * iommu_get_dev_attr(dev, IOMMU_DEV_ATTR_AUXD_CAPABILITY)
>>>    - Represents the ability of supporting multiple domains
>>>      per device.
>>>
>>> * iommu_set_dev_attr(dev, IOMMU_DEV_ATTR_AUXD_ENABLE)
>>>    - Enable the multiple domains capability for the device
>>>      referenced by @dev.
>>>
>>> * iommu_set_dev_attr(dev, IOMMU_DEV_ATTR_AUXD_DISABLE)
>>>    - Disable the multiple domains capability for the device
>>>      referenced by @dev.
>>>
>>> * iommu_domain_get_attr(domain, DOMAIN_ATTR_AUXD_ID)
>>>    - Return ID used for finer-granularity DMA translation.
>>>
>>> * iommu_attach_device_aux(domain, dev)
>>>    - Attach a domain to the device in the auxiliary mode.
>>>
>>> * iommu_detach_device_aux(domain, dev)
>>>    - Detach the aux domain from device.
>>>
>>> In order for the ease of discussion, sometimes we call "a domain in
>>> auxiliary mode' or simply 'an auxiliary domain' when a domain is
>>> attached to a device for finer granularity translations. But we need
>>> to keep in mind that this doesn't mean there is a differnt domain
>>> type. A same domain could be bound to a device for Source ID based
>>> translation, and bound to another device for finer granularity
>>> translation at the same time.
>>>
>>> This patch series extends both IOMMU and vfio components to support
>>> mdev device passing through when it could be isolated and protected
>>> by the IOMMU units. The first part of this series (PATCH 1/08~5/08)
>>> adds the interfaces and implementation of the multiple domains per
>>> device. The second part (PATCH 6/08~8/08) adds the iommu device
>>> attribute to each mdev, determines isolation type according to the
>>> existence of an iommu device when attaching group in vfio type1 iommu
>>> module, and attaches the domain to iommu aware mediated devices.
>>>
>>> This patch series depends on a patch set posted here [4] for discussion
>>> which added scalable mode support in Intel IOMMU driver.
>>>
>>> References:
>>> [1] 
>>> https://software.intel.com/en-us/download/intel-virtualization-technology-for-directed-io-architecture-specification 
>>>
>>> [2] 
>>> https://software.intel.com/en-us/download/intel-scalable-io-virtualization-technical-specification 
>>>
>>> [3] https://schd.ws/hosted_files/lc32018/00/LC3-SIOV-final.pdf
>>> [4] https://lkml.org/lkml/2018/11/5/136
>>>
>>> Best regards,
>>> Lu Baolu
>>>
>>> Change log:
>>>    v3->v4:
>>>    - Use aux domain specific interfaces for domain attach and detach.
>>>    - Rebase all patches to 4.20-rc1.
>>>
>>>    v2->v3:
>>>    - Remove domain type enum and use a pointer on mdev_device instead.
>>>    - Add a generic interface for getting/setting per device iommu
>>>      attributions. And use it for query aux domain capability, enable
>>>      aux domain and disable aux domain purpose.
>>>    - Reuse iommu_domain_get_attr() to retrieve the id in a aux domain.
>>>    - We discussed the impact of the default domain implementation
>>>      on reusing iommu_at(de)tach_device() interfaces. We agreed
>>>      that reusing iommu_at(de)tach_device() interfaces is the right
>>>      direction and we could tweak the code to remove the impact.
>>>      https://www.spinics.net/lists/kvm/msg175285.html
>>>    - Removed the RFC tag since no objections received.
>>>    - This patch has been submitted separately.
>>>      https://www.spinics.net/lists/kvm/msg173936.html
>>>
>>>    v1->v2:
>>>    - Rewrite the patches with the concept of auxiliary domains.
>>>
>>> Lu Baolu (8):
>>>    iommu: Add APIs for multiple domains per device
>>>    iommu/vt-d: Add multiple domains per device query
>>>    iommu/vt-d: Enable/disable multiple domains per device
>>>    iommu/vt-d: Attach/detach domains in auxiliary mode
>>>    iommu/vt-d: Return ID associated with an auxiliary domain
>>>    vfio/mdev: Add iommu place holders in mdev_device
>>>    vfio/type1: Add domain at(de)taching group helpers
>>>    vfio/type1: Handle different mdev isolation type
>>>
>>>   drivers/iommu/intel-iommu.c      | 315 
>>> ++++++++++++++++++++++++++++---
>>>   drivers/iommu/iommu.c            |  52 +++++
>>>   drivers/vfio/mdev/mdev_core.c    |  36 ++++
>>>   drivers/vfio/mdev/mdev_private.h |   2 +
>>>   drivers/vfio/vfio_iommu_type1.c  | 162 ++++++++++++++--
>>>   include/linux/intel-iommu.h      |  11 ++
>>>   include/linux/iommu.h            |  52 +++++
>>>   include/linux/mdev.h             |  23 +++
>>>   8 files changed, 618 insertions(+), 35 deletions(-)
>>>
>>
>>
>>
>
> .
>


