Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 18:29:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E4BE8580375;
	Mon,  3 Dec 2018 19:46:31 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 19:46:31 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AHX0rvBNX01fdhwjBbsUl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPv/osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzca3HfdMeWGFPQMBfWSJcCY+4?=
 =?us-ascii?q?cocDE+8NMOBFpIf/ulQOtwOzCxSyCuPhyjFGhXH40qM13OsjDQ7I0w0gH8kWsH?=
 =?us-ascii?q?nWt9j1KKUfXvqpwKXUwzjOb/Vb0ir95ojSdRAhpOmBUrNtccHMykYgDQLFgU6X?=
 =?us-ascii?q?qYf4OD6U2fkNsmmB4OphTu2vjHUqqwFsoje1yMYjlIjJipgJxVDD8CV02YA4Ls?=
 =?us-ascii?q?C2Rk58ZN6rCppQtyeCOottXswiQ3xntDw0y70doZK7eCsKyJEjxxLFbPyHaYeI?=
 =?us-ascii?q?7griVOaXPTd3mnZldKijiBa19Eis0vb8VtG10FZMrypKjsLMumoL1xPN9siKTO?=
 =?us-ascii?q?Z28ES52TuXyQzf9uVJLVopmafVNZIt2KM8m5kPvUjZHyL7ml36gLKKekk++uWl?=
 =?us-ascii?q?6f7rb7fkq5OGKoN4lgXzPrwhl8G/G+g0LAcDUmyB9eiiybHv41f1TbtUgvAwj6?=
 =?us-ascii?q?LXqorVJd4Bqa68GwJV0pgs6xK4Dzq+ztQYkmcILEhfdBKEkYfpIVfOL+78Dful?=
 =?us-ascii?q?hFSsijhry+jHPr3nHJrNMmDOnKn9cbt58UJQ1QQ+wc5F655JCbwNPOj/V07zud?=
 =?us-ascii?q?DACx82KQ20w+LpCNVn0YMeXHqCAquYMKPUrF+J6fsjI+qSa48PvjbyNfwl6+fp?=
 =?us-ascii?q?jX43n18SY7Op0IAJaHC3APtmOV+VYXnyjdcbF2cFoA4+QPbtiF2YXj5ff2yyUL?=
 =?us-ascii?q?4k5jEnFIKmCp/ORoSsgLyCwii3BJJXZn1dB1CIEHfocZiEWvgWZCKTJM9hjiIL?=
 =?us-ascii?q?Vby7R4A90hGusRfwy6B7IerM5i0YqZXj2cB15+LJlBEy6SZ7D8OH32GNUmF7hG?=
 =?us-ascii?q?UIRzAt0aB7oEx9zEqD0Kdij/xZE9xT++1GUgMgOZHAyOx6Dsj4WhjdcdeRVFam?=
 =?us-ascii?q?XtKmDCkzTtI23dACeUV9G9KkjhDF2CqnGLsVl72NBJwp/aPQxXnxJ8Bhy3nY0K?=
 =?us-ascii?q?ktlUUpQsxKNWe+nK5w6xDTB5LVk0Wej6ulb78c3C7K9GeA12aOpltXUAxrXKXB?=
 =?us-ascii?q?XHAfYFbWrNvj6kPDSb+uFaooMg9bxcGeLatKb8XjjU9aS/f7JNTef2Wxln+zBR?=
 =?us-ascii?q?mSwLOAdo7qe2QH0yXbB0gJiAQT/XeANQgjCSatuWPeDDpyFV3xZ0Pg6/VxqHS+?=
 =?us-ascii?q?TkUs1QGFc1Vh16ap+h4SnfGTVukc3qwatys7qzV7BlC938nIBNqGoAZheKZcYd?=
 =?us-ascii?q?Y54Fpc0WLZtgp9PoGvLqx4h14edRh3sF3q1xltFopAls0qpmswzAVuMaKYzE9B?=
 =?us-ascii?q?dzSA0J/tILLXNHf98Aqva6HM3FHey8iZ+qEU5fQ8qlXjuhypF0U4/3Vm1dlVz2?=
 =?us-ascii?q?WT5pHQAAUOVpLxV1499wJmqLHCfik9+4TU2GVwMam1tz/C3M4pBOslyxq6Y9dT?=
 =?us-ascii?q?KqSEFBX2E80bAciuJ/cnm1yobhICIeBT+7Q4P8Kgd/uaxqGrOPxsky6hjWRC+I?=
 =?us-ascii?q?p9yF6D9zJgSu7U2JYI2+uX3g+ZWDbzkligstr7lptZZT4PBGW/zyvkBIlPZqBp?=
 =?us-ascii?q?eYYLCGGuI9C4x9lkhp7tXWJY+0CnB18cxMCpfh+SZUTn3QJMzUQXvWCnmSygwj?=
 =?us-ascii?q?10jjEltLaQ0DbPwuTibhUHPGFLSXJmjVftJ4i0kt8bUFKpbwgviBuq+0L6y7JH?=
 =?us-ascii?q?q6R4KmnZWV1IcDTuL2F+TquwsaKPY9RO6Jw0qypXSvmzYVeARr77vRQaySLjE3?=
 =?us-ascii?q?JCyz8hczGlp4v2nwZ9iGKbN3tzqHvZecdtxRbQ/tDcRPhR3iYYSyl8kzXYGl+8?=
 =?us-ascii?q?P9yx99WOi5jDqvy+V36mVpBLcSjrzJmMtSuh6W1xHB2/meu+mtnmEQg8zC/62M?=
 =?us-ascii?q?NmVSTOrBbgfIbr0762Pv5gfkltHFX88dZ1Gplikossg5EdwXoaiY+P/XoEkmfz?=
 =?us-ascii?q?Ns9X2bnkY3oORj4LwtjV7xbj2EB4KnKJxoT5VmiSw8d7Ztm6ZH8W1Tw578xQFK?=
 =?us-ascii?q?iU67lElzNvolWktQLRfeR9njAFxPou8nEahPsFuAgsziWbGb0SGUhYPSrxlxWH?=
 =?us-ascii?q?9dy+raNXZHqxfri0zkZxgdehDLSaqAFGRHn5YosiHTN37shnM1LDynzz5pvkeN?=
 =?us-ascii?q?nNd90TsBKUngzEj+hULpIxi/ULiTBmOWL7oX0q1eo7gQZy0pG9uYiNM39t876h?=
 =?us-ascii?q?Ah5EKj31YNse+jTsjaZdhMmaxY6uEYt6GjUXQpToV+mnHywItfToLAuOFDw8qn?=
 =?us-ascii?q?GGGbvQBwOf6UFmr27RHJCvLX2YOH4ZzdB6ThmHOENfmBwUXCk9npMhCgCqw8nh?=
 =?us-ascii?q?fF145z8L4F74twBMyvlpNxTkVmffpQGoaio7SZSFLRpW6B1C6FnRMcCE8u1zGC?=
 =?us-ascii?q?RY9IW7rAORMmybexhIDWYRV0OfHV/jOb2u5cTa/+icG+qzNP/OYbSIqexDWPaE?=
 =?us-ascii?q?35Ov0o16/zmSMsWDJGVtD/o+2kBbR3B2B9zZmykTSywQjy/NbdSUpBKi9S1stM?=
 =?us-ascii?q?y/7O7nWAHy5YuMFrtSN89g+wutjKeHNu6Qgjt5KDlC2pMNw3/I1KYQ3FoIhy5y?=
 =?us-ascii?q?cDmtFKwKtTTRQ6LIhq9XExkbZjtzNctP8qI8xxRNNtTdit/vzb54ifg1C1heWF?=
 =?us-ascii?q?zlm8GpY9EKIm6nOFPGAkaLKKqJJTnRz87rZqO8TKVajP9IuB2opTabD0jjMyyD?=
 =?us-ascii?q?lzb3VhCvMuJMjCCBMBxdooG9dRltBnb5TNL7cR22K9t3jTwwwb0piXLGL28cMT?=
 =?us-ascii?q?5gc0xTqr2c9z9XgvJ6G2ZZ9HpqMfGEmzqF7+nfMpsZq+ZrDT9ul+1E4HU20b9V?=
 =?us-ascii?q?7CBfSfxxmSvSqMNuol68numOzDpnTARBqjJRiI2XukViPL3T9oNcVnbc4BIN8W?=
 =?us-ascii?q?KQBgwWp9tkD93jobxfxsLTm6LzNjhC9cnZ/c8dB8jSNcKGP2AtMRvvGD7IEgQF?=
 =?us-ascii?q?SSSnOn3Yh0xYiPuS7GGaroAmqpjwn5oDUr9aW0YzFvMfC0RlGsQNIZZ3Xjw+l7?=
 =?us-ascii?q?6bg9UF5X6/rBnXWcVbsYrLVvOUAfXzNjmZiaNIaAcPwbP9fswvMdjfxgRIY15+?=
 =?us-ascii?q?gcyeEUPXWc0LpjBJag4yvVUL8X5iQ2l10EXgPEflwngeD/H8pBk7hgZ6KbAv8y?=
 =?us-ascii?q?3rywc9N0bHv203ikZn3Z2vrTmPcTK5E6C3UYFRFjH5/QBlPoz+XFxdbAu8h0Vo?=
 =?us-ascii?q?OT7IAbVLgO0kPUlvhR+UhppLHf9VSLZDZldEzPWad7M30FBYqyyi3khBzfHIBZ?=
 =?us-ascii?q?triE0hdpv66zpj2hh/bZYKLKrTJKdFwxAEhb2HuCyo2+w86AkAJkoM+SWZfyte?=
 =?us-ascii?q?62ISMbxzFzfgzOVt4wvKzyteamENXf0Cou9j6U48fe+HynSzgPZ4NkmtOrnHfO?=
 =?us-ascii?q?uisG/amJvNEws9?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CfAACh9wVch0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?QGCaAN/JwqYFoINFJc0FIFfLA8EAYFLhj4iNgcNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKSMMQgEOAYFkJIJjAQIBAgECJBFAAQYJAQEKEgYJFg8DBgMCAQIBFiEOBgEMA?=
 =?us-ascii?q?QcBAQEWgwYBggEFCqNOEYIfJQ6EAgEqARYPbYRtBYwcF4FAP4ERgxKDBRkBAoF?=
 =?us-ascii?q?IhXMCiSw1gT6EVTWPQlUJgiOEXYMygmyEHhiJa4c7gnyGCINKgRuEHIM0hQABW?=
 =?us-ascii?q?IEuTSMVgycfhWmEWTuDN4FRAUMyAQExAYEDAQEBDnWIX4EfAQE?=
X-IPAS-Result: =?us-ascii?q?A0CfAACh9wVch0O0hNFjHgEGBwaBUwcLAQGCaAN/JwqYFoI?=
 =?us-ascii?q?NFJc0FIFfLA8EAYFLhj4iNgcNAQMBAQEBAQECARMBAQEKCwkIKSMMQgEOAYFkJ?=
 =?us-ascii?q?IJjAQIBAgECJBFAAQYJAQEKEgYJFg8DBgMCAQIBFiEOBgEMAQcBAQEWgwYBggE?=
 =?us-ascii?q?FCqNOEYIfJQ6EAgEqARYPbYRtBYwcF4FAP4ERgxKDBRkBAoFIhXMCiSw1gT6EV?=
 =?us-ascii?q?TWPQlUJgiOEXYMygmyEHhiJa4c7gnyGCINKgRuEHIM0hQABWIEuTSMVgycfhWm?=
 =?us-ascii?q?EWTuDN4FRAUMyAQExAYEDAQEBDnWIX4EfAQE?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="140627119"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 19:46:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726011AbeLDDqQ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 22:46:16 -0500
Received: from szxga06-in.huawei.com ([45.249.212.32]:50316 "EHLO huawei.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1725962AbeLDDqQ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 22:46:16 -0500
Received: from DGGEMS407-HUB.china.huawei.com (unknown [172.30.72.58])
        by Forcepoint Email with ESMTP id D04EC3FB3595B;
        Tue,  4 Dec 2018 11:46:08 +0800 (CST)
Received: from [127.0.0.1] (10.57.77.109) by DGGEMS407-HUB.china.huawei.com
 (10.3.19.207) with Microsoft SMTP Server id 14.3.408.0; Tue, 4 Dec 2018
 11:46:06 +0800
Subject: Re: [PATCH v4 0/8] vfio/mdev: IOMMU aware mediated device
To: Lu Baolu <baolu.lu@linux.intel.com>,
        Joerg Roedel <joro@8bytes.org>,
        "David Woodhouse" <dwmw2@infradead.org>,
        Alex Williamson <alex.williamson@redhat.com>,
        Kirti Wankhede <kwankhede@nvidia.com>
References: <20181105073408.21815-1-baolu.lu@linux.intel.com>
CC: <kevin.tian@intel.com>, <ashok.raj@intel.com>,
        <tiwei.bie@intel.com>,
        Jean-Philippe Brucker <jean-philippe.brucker@arm.com>,
        <sanjay.k.kumar@intel.com>, <iommu@lists.linux-foundation.org>,
        <linux-kernel@vger.kernel.org>, <yi.y.sun@intel.com>,
        <jacob.jun.pan@intel.com>, <kvm@vger.kernel.org>
From: Xu Zaibo <xuzaibo@huawei.com>
Message-ID: <5C05F87D.4050206@huawei.com>
Date: Tue, 4 Dec 2018 11:46:05 +0800
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101
 Thunderbird/38.5.0
MIME-Version: 1.0
In-Reply-To: <20181105073408.21815-1-baolu.lu@linux.intel.com>
Content-Type: text/plain; charset="windows-1252"; format=flowed
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.57.77.109]
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

Is this solution trying to support general user space processes who are 
directly working on devices?

Thanks,
Zaibo

.

On 2018/11/5 15:34, Lu Baolu wrote:
> Hi,
>
> The Mediate Device is a framework for fine-grained physical device
> sharing across the isolated domains. Currently the mdev framework
> is designed to be independent of the platform IOMMU support. As the
> result, the DMA isolation relies on the mdev parent device in a
> vendor specific way.
>
> There are several cases where a mediated device could be protected
> and isolated by the platform IOMMU. For example, Intel vt-d rev3.0
> [1] introduces a new translation mode called 'scalable mode', which
> enables PASID-granular translations. The vt-d scalable mode is the
> key ingredient for Scalable I/O Virtualization [2] [3] which allows
> sharing a device in minimal possible granularity (ADI - Assignable
> Device Interface).
>
> A mediated device backed by an ADI could be protected and isolated
> by the IOMMU since 1) the parent device supports tagging an unique
> PASID to all DMA traffic out of the mediated device; and 2) the DMA
> translation unit (IOMMU) supports the PASID granular translation.
> We can apply IOMMU protection and isolation to this kind of devices
> just as what we are doing with an assignable PCI device.
>
> In order to distinguish the IOMMU-capable mediated devices from those
> which still need to rely on parent devices, this patch set adds two
> new members in struct mdev_device.
>
> * iommu_device
>    - This, if set, indicates that the mediated device could
>      be fully isolated and protected by IOMMU via attaching
>      an iommu domain to this device. If empty, it indicates
>      using vendor defined isolation.
>
> * iommu_domain
>    - This is a place holder for an iommu domain. A domain
>      could be store here for later use once it has been
>      attached to the iommu_device of this mdev.
>
> Below helpers are added to set and get above iommu device
> and iommu domain pointers in mdev core implementation.
>
> * mdev_set/get_iommu_device(dev, iommu_device)
>    - Set or get the iommu device which represents this mdev
>      in IOMMU's device scope. Drivers don't need to set the
>      iommu device if it uses vendor defined isolation.
>
> * mdev_set/get_iommu_domain(domain)
>    - A iommu domain which has been attached to the iommu
>      device in order to protect and isolate the mediated
>      device will be kept in the mdev data structure and
>      could be retrieved later.
>
> The mdev parent device driver could opt-in that the mdev could be
> fully isolated and protected by the IOMMU when the mdev is being
> created by invoking mdev_set_iommu_device() in its @create().
>
> In the vfio_iommu_type1_attach_group(), a domain allocated through
> iommu_domain_alloc() will be attached to the mdev iommu device if
> an iommu device has been set. Otherwise, the dummy external domain
> will be used and all the DMA isolation and protection are routed to
> parent driver as the result.
>
> On IOMMU side, a basic requirement is allowing to attach multiple
> domains to a PCI device if the device advertises the capability
> and the IOMMU hardware supports finer granularity translations than
> the normal PCI Source ID based translation.
>
> As the result, a PCI device could work in two modes: normal mode
> and auxiliary mode. In the normal mode, a pci device could be
> isolated in the Source ID granularity; the pci device itself could
> be assigned to a user application by attaching a single domain
> to it. In the auxiliary mode, a pci device could be isolated in
> finer granularity, hence subsets of the device could be assigned
> to different user level application by attaching a different domain
> to each subset.
>
> The device driver is able to switch between above two modes with
> below interfaces:
>
> * iommu_get_dev_attr(dev, IOMMU_DEV_ATTR_AUXD_CAPABILITY)
>    - Represents the ability of supporting multiple domains
>      per device.
>
> * iommu_set_dev_attr(dev, IOMMU_DEV_ATTR_AUXD_ENABLE)
>    - Enable the multiple domains capability for the device
>      referenced by @dev.
>
> * iommu_set_dev_attr(dev, IOMMU_DEV_ATTR_AUXD_DISABLE)
>    - Disable the multiple domains capability for the device
>      referenced by @dev.
>
> * iommu_domain_get_attr(domain, DOMAIN_ATTR_AUXD_ID)
>    - Return ID used for finer-granularity DMA translation.
>
> * iommu_attach_device_aux(domain, dev)
>    - Attach a domain to the device in the auxiliary mode.
>
> * iommu_detach_device_aux(domain, dev)
>    - Detach the aux domain from device.
>
> In order for the ease of discussion, sometimes we call "a domain in
> auxiliary mode' or simply 'an auxiliary domain' when a domain is
> attached to a device for finer granularity translations. But we need
> to keep in mind that this doesn't mean there is a differnt domain
> type. A same domain could be bound to a device for Source ID based
> translation, and bound to another device for finer granularity
> translation at the same time.
>
> This patch series extends both IOMMU and vfio components to support
> mdev device passing through when it could be isolated and protected
> by the IOMMU units. The first part of this series (PATCH 1/08~5/08)
> adds the interfaces and implementation of the multiple domains per
> device. The second part (PATCH 6/08~8/08) adds the iommu device
> attribute to each mdev, determines isolation type according to the
> existence of an iommu device when attaching group in vfio type1 iommu
> module, and attaches the domain to iommu aware mediated devices.
>
> This patch series depends on a patch set posted here [4] for discussion
> which added scalable mode support in Intel IOMMU driver.
>
> References:
> [1] https://software.intel.com/en-us/download/intel-virtualization-technology-for-directed-io-architecture-specification
> [2] https://software.intel.com/en-us/download/intel-scalable-io-virtualization-technical-specification
> [3] https://schd.ws/hosted_files/lc32018/00/LC3-SIOV-final.pdf
> [4] https://lkml.org/lkml/2018/11/5/136
>
> Best regards,
> Lu Baolu
>
> Change log:
>    v3->v4:
>    - Use aux domain specific interfaces for domain attach and detach.
>    - Rebase all patches to 4.20-rc1.
>
>    v2->v3:
>    - Remove domain type enum and use a pointer on mdev_device instead.
>    - Add a generic interface for getting/setting per device iommu
>      attributions. And use it for query aux domain capability, enable
>      aux domain and disable aux domain purpose.
>    - Reuse iommu_domain_get_attr() to retrieve the id in a aux domain.
>    - We discussed the impact of the default domain implementation
>      on reusing iommu_at(de)tach_device() interfaces. We agreed
>      that reusing iommu_at(de)tach_device() interfaces is the right
>      direction and we could tweak the code to remove the impact.
>      https://www.spinics.net/lists/kvm/msg175285.html
>    - Removed the RFC tag since no objections received.
>    - This patch has been submitted separately.
>      https://www.spinics.net/lists/kvm/msg173936.html
>
>    v1->v2:
>    - Rewrite the patches with the concept of auxiliary domains.
>
> Lu Baolu (8):
>    iommu: Add APIs for multiple domains per device
>    iommu/vt-d: Add multiple domains per device query
>    iommu/vt-d: Enable/disable multiple domains per device
>    iommu/vt-d: Attach/detach domains in auxiliary mode
>    iommu/vt-d: Return ID associated with an auxiliary domain
>    vfio/mdev: Add iommu place holders in mdev_device
>    vfio/type1: Add domain at(de)taching group helpers
>    vfio/type1: Handle different mdev isolation type
>
>   drivers/iommu/intel-iommu.c      | 315 ++++++++++++++++++++++++++++---
>   drivers/iommu/iommu.c            |  52 +++++
>   drivers/vfio/mdev/mdev_core.c    |  36 ++++
>   drivers/vfio/mdev/mdev_private.h |   2 +
>   drivers/vfio/vfio_iommu_type1.c  | 162 ++++++++++++++--
>   include/linux/intel-iommu.h      |  11 ++
>   include/linux/iommu.h            |  52 +++++
>   include/linux/mdev.h             |  23 +++
>   8 files changed, 618 insertions(+), 35 deletions(-)
>


