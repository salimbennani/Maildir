Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:41:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A3B685807A2;
	Mon, 10 Dec 2018 10:39:39 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 10:39:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARmhx3h2FYSJlXuvFsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTK/7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJBHo2y?=
 =?us-ascii?q?YYgBD+UDM+lYrpXyqVQBohulHQmhBvjiyiNRhnLswaE2z/4sERrA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakOVuC1ybPHzTPeZP1Twzj955LHchY8qvyLR7JwctDeyUY1GAPDlViQ?=
 =?us-ascii?q?t43lPymJ1uQQtGia7uthVeW1h2E7rAFxpyGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T211uys3yqcKtYC1cSQX0pgr2RHSZ+Cdf4WI?=
 =?us-ascii?q?+h7jWvieLDRkiH9gfb+wmhm//VWlx+LhSsW4zUhGoy9YntTIuX0A2Bne58iER/?=
 =?us-ascii?q?dg4kus3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqVrDHiDol0XslqOWdVsr+vKu?=
 =?us-ascii?q?6+v5ZrXqvJicN5V7ig3mM6QunNKwAfggPwQQQ2SW/f6w2KDt8EHnWrlGk/47nr?=
 =?us-ascii?q?XDvJ3bJ8kXvqu5DBVU0oYn5Ra/FTCm0NEAkHkDLVJFfg+HjofwN1HNPv/4F/G/?=
 =?us-ascii?q?jEqokDtywPDHMLvhDYvXLnXYjrfhcqhy61RGxAow099f/ZRUBa8FIP7pXU/xrt?=
 =?us-ascii?q?PYAgcjMwOo2+bnFMl91oQGVGKLA6+ZM73dvUWH5+IyOOSMYI4VuDDgK/kq/fLu?=
 =?us-ascii?q?jHk5mUMDcqmtx5cYdHe4HvF+KUWDfXXsmssBEXsNvgcmTOzlklyCUSJJaHa1Ra?=
 =?us-ascii?q?485iw7B5igDYfMXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsp5mDwe?=
 =?us-ascii?q?SbehU5Mh1Q2ptALiybpnKfTb9jcbtZLk0th14erTmAo29Tx1CcSdzm6MQ3t1nm?=
 =?us-ascii?q?MOWz85wqR/rVZhxVeE1Khym+ZYGsBL5/NVTgc6MobRwPZhC9DyXQLBfc2FSEy8?=
 =?us-ascii?q?TdWkGjwxStMxw9kTY0dyAdmijxbD3za0DL8RjbCEGJs08qfE1XjrO8l902rG1L?=
 =?us-ascii?q?Umj1Q+QctAL2umirR79wjSHYHJlUqZmr2udaQd2i7N6WiCwXCPvEFeTA5/T6HF?=
 =?us-ascii?q?UWoDaUvRqNTz/lnCQKO2CbQ7LgtBztaPJbZQZd33k1pKXvfjN87YY2KqhWiwAx?=
 =?us-ascii?q?GExrePbIrvf2UQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e65wQaheKCRP8J3rILoiEhqy5qE1a7xN/WD9uApwx8fKRTe9?=
 =?us-ascii?q?894VFH1X7HuAx5JJCvM6dihlsGeQRto0zuzwl3CplHkcUysHMqzQ9yKaWE0FNB?=
 =?us-ascii?q?dzKUx4zwNqfQKmno+BCvaqjW2l7F3daS+6cP7uk4qlr5sAGoEEoi72to091P33?=
 =?us-ascii?q?SA4ZXKCRIYUYjtXUYv6xh6u7babzEn6IPQy3JtPre7sz/Y190yGesq1wyvf9Fc?=
 =?us-ascii?q?MKODCg//CMkaB8moKOw3lFmldBMEPOZO9KEqO8OqbeeJ2KmuPOx4hjKpkXxH4J?=
 =?us-ascii?q?xh0kKL7yd9SvPI04wZzP2C3wqHVy3zjFGuss3snYBEZDcSHnewyCT+BY5RYLFy?=
 =?us-ascii?q?cpgPCWu0P8K3wdB+jYb3W3FE7F6jG08G2MixdBqIblzywRdf1V4Krnyggye4yS?=
 =?us-ascii?q?J7kysorqaGwCPB2eDiewcZNW5RQ2lii0zhIYy1j9AcQUipYBIllBqj5Ubm2adb?=
 =?us-ascii?q?oL5zIHXUQUdNZyL2NX1tUrOstrqeZM5C8JMpsSRNXOW8e1yaUaP9ox0B3iPnHm?=
 =?us-ascii?q?tewi07dj6wtpX4mRx6lHySLHJpoHXFfsFwwA/V5MbASv5JwjoGWC54hCHVBlem?=
 =?us-ascii?q?Jdmp/taUl5DZvuClTW2hVZ5TcSjtzYyesiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox/kpE/hJYK1XgYh5WV+2EKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98NKB7?=
 =?us-ascii?q?2V7LBenSt1v0C3rQTeYfVmmjcdyP0u6GMVgu0TuQotyDmdDa4WHUVCISPskBGI?=
 =?us-ascii?q?5cikrKpLfGavbaSw1E1mkNCkDbGCoRtTVGz3e5g8Bi9w8ttwMEjX33Lt8IHkd8?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GgJYNjrwZ88J+zDil6BentuN34C0H5VsATELXJruTfK1HzMer/XnNwCSEDIirn?=
 =?us-ascii?q?eXA6bQHQia6E1+tXLAD4irN22LJHke1dhtXwOSJEtbgAAJRjk6moM5GxuuxMzg?=
 =?us-ascii?q?dkd5+z8Q6kT5qhtK1uJnKR3/Xn3Dqwevbzc+UIKfIwZO7gFe+0fVNtST7uBpEC?=
 =?us-ascii?q?Fd4JKhtxaBKnCBawRLEGEJWVGEB1b5Mbm1/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBmzQPTDEXlzvQb8GBohew4DZ3rs?=
 =?us-ascii?q?e58PTkQw/v4YqPC71PMdRg4Ry2gKGDN/KOiyZ9MzpXypQMxXrQwrgFwFESkz1u?=
 =?us-ascii?q?dyWqEbkYtS7CUqPQmqxUDx4acS9zN9FI76Uz3gZTI87bl8j126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9tiyGE0D4JDSM?=
 =?us-ascii?q?iTnoWwqrMeFNlyybOB1euIegchdiE2TjTdTmagGlP99zlzE53bo0hnbSP24GLT?=
 =?us-ascii?q?d8a19NrqGX7S5AnvV/GmlB4mB5IuWehymZ7/fXKpANvPtvAyR0kf9a4Xsgx7tU?=
 =?us-ascii?q?6iFEWOJ6mC/IotFypFGml/GFyiB7XxpWtjZLmIWLsF1iOKrD8JlAXHfE/BQV4m?=
 =?us-ascii?q?SRCxQFvd1lCtL0tqBUy9jPkr/zKThY/9LV+8scG9bbKMadPHU9NhrpHW2cMAxQ?=
 =?us-ascii?q?cz+3PGXOz29Agvef6maSsNButJvxipwDVqRzTlE5FvoGTE9iGYpRDo1wW2Yelr?=
 =?us-ascii?q?uSioYr7HW3qlGFXsZTsZnBfuyTG+nyLySLiv9PYB5ekuCwFpgaKoCugx8qUVJ9?=
 =?us-ascii?q?homfXhOIBd0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACFsg5ch0O0hNFkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGBMFCBXAQLJwqHNwOET4tFSoINFJc9gXMTARgTAYR?=
 =?us-ascii?q?Agy0iDScJDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECJBkBATcBB?=
 =?us-ascii?q?QkBAQEBCA4KCSUDDAUeJwQOBQWDHIICAQIBAZs8AooHgWwzgnYBAQWHHQiMIRe?=
 =?us-ascii?q?BQD+DdS6FAYM1giaJO5c8CZFEI5E9mQkCBAIEBQINAQEFgUaCDjMaCBsVgyeCG?=
 =?us-ascii?q?wwXg0qKU3KBBQEBIYpYAYEeAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAACFsg5ch0O0hNFkGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGBMFCBXAQLJwqHNwOET4tFSoINFJc9gXMTARgTAYRAgy0iDScJDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgECAwECJBkBATcBBQkBAQEBCA4KCSU?=
 =?us-ascii?q?DDAUeJwQOBQWDHIICAQIBAZs8AooHgWwzgnYBAQWHHQiMIReBQD+DdS6FAYM1g?=
 =?us-ascii?q?iaJO5c8CZFEI5E9mQkCBAIEBQINAQEFgUaCDjMaCBsVgyeCGwwXg0qKU3KBBQE?=
 =?us-ascii?q?BIYpYAYEeAQE?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="44347041"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 10:39:37 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728500AbeLJSjf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 13:39:35 -0500
Received: from mail-bgr052101133108.outbound.protection.outlook.com ([52.101.133.108]:21680
        "EHLO EUR02-VE1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727071AbeLJSje (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 13:39:34 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=virtuozzo.com;
 s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=piyGYwVxN1xYClmbrOGW9pGw0MchlvFmk/xXS+qfs2E=;
 b=G30v5v5b5QnQTW/9zssQbFc1HlT4Pz4SIuZZDzmLZEX9+C4qkZPmE/FYsV+zl/4kYDPAnFFQArBY8NObFAGSidBpVMWoDBbuiAfTm5UJs0bbJedvvfwE6xHJWFsU0nQoAQQN80ayODXccKPU7RJ0/MGLTAvAI/hFYj8G0D7O31o=
Received: from DB8PR08MB4092.eurprd08.prod.outlook.com (20.179.10.210) by
 DB8PR08MB3947.eurprd08.prod.outlook.com (20.179.8.220) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1404.22; Mon, 10 Dec 2018 18:39:22 +0000
Received: from DB8PR08MB4092.eurprd08.prod.outlook.com
 ([fe80::d41:d012:1944:5810]) by DB8PR08MB4092.eurprd08.prod.outlook.com
 ([fe80::d41:d012:1944:5810%6]) with mapi id 15.20.1404.026; Mon, 10 Dec 2018
 18:39:22 +0000
From: Roman Kagan <rkagan@virtuozzo.com>
To: Vitaly Kuznetsov <vkuznets@redhat.com>
CC: "kvm@vger.kernel.org" <kvm@vger.kernel.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        =?iso-8859-2?Q?Radim_Kr=E8m=E1=F8?= <rkrcmar@redhat.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH] x86/hyper-v: Stop caring about EOI for direct stimers
Thread-Topic: [PATCH] x86/hyper-v: Stop caring about EOI for direct stimers
Thread-Index: AQHUjLBT6Al8mtnq+kqCWVZjGeBbQaV4VfGA
Date: Mon, 10 Dec 2018 18:39:22 +0000
Message-ID: <20181210183918.GB13294@rkaganb.sw.ru>
References: <20181205153621.14343-1-vkuznets@redhat.com>
In-Reply-To: <20181205153621.14343-1-vkuznets@redhat.com>
Accept-Language: en-US, ru-RU
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
user-agent: Mutt/1.10.1 (2018-07-13)
mail-followup-to: =?iso-8859-2?Q?Roman_Kagan_<rkagan@virtuozzo.com>,=09Vitaly_Kuznetsov_<vk?=
 =?iso-8859-2?Q?uznets@redhat.com>,_kvm@vger.kernel.org,=09Paolo_Bonzini_<?=
 =?iso-8859-2?Q?pbonzini@redhat.com>,=09Radim_Kr=E8m=E1=F8_<rkrcmar@redhat?=
 =?iso-8859-2?Q?.com>,=09linux-kernel@vger.kernel.org?=
x-originating-ip: [185.231.240.5]
x-clientproxiedby: HE1PR0102CA0056.eurprd01.prod.exchangelabs.com
 (2603:10a6:7:7d::33) To DB8PR08MB4092.eurprd08.prod.outlook.com
 (2603:10a6:10:ab::18)
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1;DB8PR08MB3947;7:MwidnD9qhvwbLyFgUOyNUoqlXwEKYa8T9UN2NNswkGD6mbNX38fJLELoM1b6MPSQIaVaEArFHElt3sKndp8twp5sQx19iHCb1vgrKLb2oA7P0zFG4hqVhXy3txyfYQYf6byceIUuHjwarXYQYqEBSA==;20:Se2+C7PeGofhfSeOjnOqvrtKALoGXsJYPVvT+05D3aOXN+LA1JCPaYZGhL6m1Gv3HEK/aRn34shW5FPeEKLFKQMkW1esTjMXqufU79YAiwCSu284JNpik7uAVrIKKdRl4ix4DskUjtWUlgtk/Qxdw09gMahkMFp7J7Y9naKZWyA=
x-ms-office365-filtering-correlation-id: 96deeef1-0372-453e-d9ee-08d65ececd87
x-microsoft-antispam: BCL:0;PCL:0;RULEID:(2390098)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(2017052603328)(7153060)(7193020);SRVR:DB8PR08MB3947;
x-ms-traffictypediagnostic: DB8PR08MB3947:|DB8PR08MB3947:
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=rkagan@virtuozzo.com; 
x-microsoft-antispam-prvs: <DB8PR08MB3947E0C44D43B7778D9F2023C9A50@DB8PR08MB3947.eurprd08.prod.outlook.com>
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: BCL:0;PCL:0;RULEID:(3230017)(999002)(6040522)(2401047)(8121501046)(5005006)(93006095)(93001095)(10201501046)(3002001)(3231472)(944501520)(52105112)(148016)(149066)(150057)(6041310)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123560045)(20161123564045)(20161123562045)(20161123558120)(201708071742011)(7699051)(76991095);SRVR:DB8PR08MB3947;BCL:0;PCL:0;RULEID:;SRVR:DB8PR08MB3947;
x-forefront-prvs: 08828D20BC
x-forefront-antispam-report: SFV:SPM;SFS:(10019020)(346002)(376002)(366004)(39850400004)(396003)(136003)(189003)(199004)(54906003)(6246003)(478600001)(6916009)(58126008)(99286004)(2906002)(486006)(102836004)(106356001)(71200400001)(71190400001)(305945005)(33656002)(14454004)(6436002)(7736002)(52116002)(6116002)(3846002)(25786009)(6506007)(229853002)(8936002)(316002)(33896004)(76176011)(186003)(36756003)(6512007)(9686003)(26005)(97736004)(68736007)(386003)(66066001)(53936002)(8676002)(476003)(4326008)(5660300001)(1076002)(105586002)(81166006)(256004)(11346002)(14444005)(86362001)(81156014)(6486002)(446003)(30126002);DIR:OUT;SFP:1501;SCL:5;SRVR:DB8PR08MB3947;H:DB8PR08MB4092.eurprd08.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
x-microsoft-antispam-message-info: q4sgC/7lSmoffEx5dvBEcnoTu+2jK6RQihq5tMhAaoF/GDd8F8nJ4XwwQxcIzIH4tvV47HCTpr3mWb2YOyGjT6C1l3QtVlqX/9RMHF/nSpF9aPL3cCX+0WoZ/Jgu+Lr5XpZRpesDSPq2q03sxB36ntUBOPXz/dTVV4Xa03OuyoLZ9jNBfsiYUiSYLkIx7JF/vqh+d9oWuymhrf5+e/72Sp7cppp6H+sfiJLUCxr9TAfRPbeeOSdMtwuL4nhkJvolzZ1nqVKk9gJhHV/KgOqhuXtd0lt/JpM66sOXvAdQ0pJyNoyyuo+reB+ozv307KW5uAp/WfGH5eQLJPUxUoA7epCF+463rL2CZumf1O+zSakAZoOBZHif8hxHOAwLF2DKqmkuUeqQcJ4Anx4kvb/HB1ruIHq0OI9VtfFmHGevI7q6xwBlZa3xgK44F3eIe3bs4r/LLU8+Ar8c3zhjiw7lqajvSvieVV7b2iEyJTANL7Vm2DnOHli55iU/v5Z2yJhF
spamdiagnosticoutput: 1:22
Content-Type: text/plain; charset="iso-8859-2"
Content-ID: <0BC30FB1B722E941BF7157E78627575C@eurprd08.prod.outlook.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: virtuozzo.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 96deeef1-0372-453e-d9ee-08d65ececd87
X-MS-Exchange-CrossTenant-originalarrivaltime: 10 Dec 2018 18:39:22.7902
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 0bc7f26d-0264-416e-a6fc-8352af79c58f
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DB8PR08MB3947
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

[ Sorry, missed this one ]

On Wed, Dec 05, 2018 at 04:36:21PM +0100, Vitaly Kuznetsov wrote:
> Turns out we over-engineered Direct Mode for stimers a bit: unlike
> traditional stimers where we may want to try to re-inject the message upo=
n
> EOI, Direct Mode stimers just set the irq in APIC and kvm_apic_set_irq()
> fails only when APIC is disabled (see APIC_DM_FIXED case in
> __apic_accept_irq()). Remove the redundant part.
>=20
> Suggested-by: Roman Kagan <rkagan@virtuozzo.com>
> Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
> ---
>  arch/x86/kvm/hyperv.c | 36 +++---------------------------------
>  1 file changed, 3 insertions(+), 33 deletions(-)
>=20
> diff --git a/arch/x86/kvm/hyperv.c b/arch/x86/kvm/hyperv.c
> index e6a2a085644a..0a16a77e6ac3 100644
> --- a/arch/x86/kvm/hyperv.c
> +++ b/arch/x86/kvm/hyperv.c
> @@ -56,21 +56,8 @@ static inline int synic_get_sint_vector(u64 sint_value=
)
>  static bool synic_has_vector_connected(struct kvm_vcpu_hv_synic *synic,
>  				      int vector)
>  {
> -	struct kvm_vcpu *vcpu =3D synic_to_vcpu(synic);
> -	struct kvm_vcpu_hv *hv_vcpu =3D vcpu_to_hv_vcpu(vcpu);
> -	struct kvm_vcpu_hv_stimer *stimer;
>  	int i;
> =20
> -	for (i =3D 0; i < ARRAY_SIZE(hv_vcpu->stimer); i++) {
> -		stimer =3D &hv_vcpu->stimer[i];
> -		if (stimer->config.enable && stimer->config.direct_mode &&
> -		    stimer->config.apic_vector =3D=3D vector)
> -			return true;
> -	}
> -
> -	if (vector < HV_SYNIC_FIRST_VALID_VECTOR)
> -		return false;
> -
>  	for (i =3D 0; i < ARRAY_SIZE(synic->sint); i++) {
>  		if (synic_get_sint_vector(synic_read_sint(synic, i)) =3D=3D vector)
>  			return true;
> @@ -96,14 +83,14 @@ static bool synic_has_vector_auto_eoi(struct kvm_vcpu=
_hv_synic *synic,
>  static void synic_update_vector(struct kvm_vcpu_hv_synic *synic,
>  				int vector)
>  {
> +	if (vector < HV_SYNIC_FIRST_VALID_VECTOR)
> +		return;
> +
>  	if (synic_has_vector_connected(synic, vector))
>  		__set_bit(vector, synic->vec_bitmap);
>  	else
>  		__clear_bit(vector, synic->vec_bitmap);
> =20
> -	if (vector < HV_SYNIC_FIRST_VALID_VECTOR)
> -		return;
> -
>  	if (synic_has_vector_auto_eoi(synic, vector))
>  		__set_bit(vector, synic->auto_eoi_bitmap);
>  	else
> @@ -382,9 +369,7 @@ int kvm_hv_synic_set_irq(struct kvm *kvm, u32 vpidx, =
u32 sint)
> =20
>  void kvm_hv_synic_send_eoi(struct kvm_vcpu *vcpu, int vector)
>  {
> -	struct kvm_vcpu_hv *hv_vcpu =3D vcpu_to_hv_vcpu(vcpu);
>  	struct kvm_vcpu_hv_synic *synic =3D vcpu_to_synic(vcpu);
> -	struct kvm_vcpu_hv_stimer *stimer;
>  	int i;
> =20
>  	trace_kvm_hv_synic_send_eoi(vcpu->vcpu_id, vector);
> @@ -392,14 +377,6 @@ void kvm_hv_synic_send_eoi(struct kvm_vcpu *vcpu, in=
t vector)
>  	for (i =3D 0; i < ARRAY_SIZE(synic->sint); i++)
>  		if (synic_get_sint_vector(synic_read_sint(synic, i)) =3D=3D vector)
>  			kvm_hv_notify_acked_sint(vcpu, i);
> -
> -	for (i =3D 0; i < ARRAY_SIZE(hv_vcpu->stimer); i++) {
> -		stimer =3D &hv_vcpu->stimer[i];
> -		if (stimer->msg_pending && stimer->config.enable &&
> -		    stimer->config.direct_mode &&
> -		    stimer->config.apic_vector =3D=3D vector)
> -			stimer_mark_pending(stimer, false);
> -	}
>  }
> =20
>  static int kvm_hv_set_sint_gsi(struct kvm *kvm, u32 vpidx, u32 sint, int=
 gsi)
> @@ -566,8 +543,6 @@ static int stimer_start(struct kvm_vcpu_hv_stimer *st=
imer)
>  static int stimer_set_config(struct kvm_vcpu_hv_stimer *stimer, u64 conf=
ig,
>  			     bool host)
>  {
> -	struct kvm_vcpu *vcpu =3D stimer_to_vcpu(stimer);
> -	struct kvm_vcpu_hv *hv_vcpu =3D vcpu_to_hv_vcpu(vcpu);
>  	union hv_stimer_config new_config =3D {.as_uint64 =3D config},
>  		old_config =3D {.as_uint64 =3D stimer->config.as_uint64};
> =20
> @@ -580,11 +555,6 @@ static int stimer_set_config(struct kvm_vcpu_hv_stim=
er *stimer, u64 config,
>  		new_config.enable =3D 0;
>  	stimer->config.as_uint64 =3D new_config.as_uint64;
> =20
> -	if (old_config.direct_mode)
> -		synic_update_vector(&hv_vcpu->synic, old_config.apic_vector);
> -	if (new_config.direct_mode)
> -		synic_update_vector(&hv_vcpu->synic, new_config.apic_vector);
> -
>  	stimer_mark_pending(stimer, false);
>  	return 0;
>  }

As discussed in another thread, it seems worth while to make
stimer_set_config reject vectors 0..15.

Besides I'd rather sqwash this patch into the one that introduced direct
timers, before it reached Linus' tree.

Roman.
