Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:37:12 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9DDE2580380;
	Mon, 10 Dec 2018 04:51:22 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 04:51:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvPwQ2B9VIaFNQf9uRHKM819IXTAuvvDOBiVQ1KB8?=
 =?us-ascii?q?0+MeIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQNtfWSJCDI27?=
 =?us-ascii?q?bYQPAeUOM+lDr4nlpVYDtgeyCAq2Ce/z0DJEmmP60Ksn2OohCwHG2wkgEsoSvX?=
 =?us-ascii?q?TSsdr1LrkdUOCox6fNyjXDafRW2Snn54jMdRAhv+yHULVqfsrX1EYvDR3Kj1WT?=
 =?us-ascii?q?qYzjITOV0v8As2ec7+pnWuKvj3AopxttrTiow8chk4/EjZ8WxFDc7Sh13po5KN?=
 =?us-ascii?q?miREJmb9OoDoFcuzyZOodqWM8vQmNltD4kxrIcpZK3YC0HxZYjyhHBd/CKdpWE?=
 =?us-ascii?q?7xLmWeqMPTt1gXxodK+8ihqu9EWtxfDwVse33VtPoCdJjsTAumwI2hzd5MiKS+?=
 =?us-ascii?q?Zx80G80jiVzQ/T8PtLIUUsmKrbNZEhxrkwm4INsUTMACD2gl/6jKyIeUU+/Oin?=
 =?us-ascii?q?9eDnbq/hpp+GOI94kgD+MqIwlcyjGek0LBQCUmyB9eih2rDv41f1TKhJg/EqiK?=
 =?us-ascii?q?XUsZLXKdwepqGjAg9V1ogj6wy4DzejyNkYmXgHLFRYeBOIloTpOE/BIOr+Dfih?=
 =?us-ascii?q?h1SgiTBrxv7APrL/GJXANWbDkLj/crZn8UJcyxQ8zcpZ551KDrENOvXzWlX+tN?=
 =?us-ascii?q?DAFB82LxS0w/r7CNV6zo4eXWOPAqyHP6/Ivl6I+/kiI+2NZI8TpTb8JOIp5//o?=
 =?us-ascii?q?jX8lh1AdebOl0ocQaHC9Bv5mOVmWYWLwgtcdFmcHpgo+Q/briF2eSzFTYGy+X6?=
 =?us-ascii?q?Ih5j4hDoKmApzORoSsgLyHwSe6EYdaZmFAClCQD3joc5+IVOsLaCKXOsVhiCAL?=
 =?us-ascii?q?VaC9S4890hGjrA36y715IebO+S0YspTj1N5y5+DIkREy9Dp0D9mS0m2XTmF0mH?=
 =?us-ascii?q?8ISCEy3KxlvUN9zVKD27Big/NEDdxT++9JUgAiOJHG1Ox6C9fyWgHbcteTUlmm?=
 =?us-ascii?q?QM6rATUwTtI33t8PbFxxG9SkjhDfwSWqB6UZmKCMBJwx6qjcxWT+J95hy3ba06?=
 =?us-ascii?q?ksl1omTdFJNWG8gq5/9hLcB4jGk0iCk6aqdKIc3DPC9WuZzGqOul1YXxB0Uanf?=
 =?us-ascii?q?QX8fYU7Wp8zj5kzeV7+uFagnMgxZxMGfMKRKdMPmgU9GRPj5PtTeeHy+m2G3CR?=
 =?us-ascii?q?aMxbOMaY7qdn4Z3CXcDkgEjg8S8WyHNQg4GieuvWbeACZyGlLoZkPm6fN+p2+j?=
 =?us-ascii?q?Tk8o0wGKaFVs2Kev9R4Lm/OQUfMT0agCuCc6tTp0Gk2w39bXC9qGugpgc79QYd?=
 =?us-ascii?q?I74Fdby23ZsxZxMYCnL6BnnlQeaRh4v1vy1xVrDYVNidQqrHIvzAp1NaKY0FNA?=
 =?us-ascii?q?eymE3ZzqPb3XMG3y/BGpa67ZwVze1NeW+qES6PU3sVnjvQepFlY8/HVjydVaz3?=
 =?us-ascii?q?yc5pDSBgoITZ3xSlo39wR9p7zCeCY9453b1HJyPqi0qDPNwM8pC/Y/xRamfNdf?=
 =?us-ascii?q?N72EGRT2E80bAciuNeMrl0KobhICIOBd6qo0M9m6ePuB3a6hJPxgky6+jWRb/I?=
 =?us-ascii?q?B91VqB9iphSuLSw5kJ2fCZ3gudWDf6g1esqcT3mYFCZTEPEWuz0ynkBIhNZqJs?=
 =?us-ascii?q?eYYHE3uhI8qyxt9mnZ7iR2ZY9EK/B1MBwMKpYxuSYEDn0g1KyEsXpmarmS2mwD?=
 =?us-ascii?q?xukjElt7aQ0zbKw+v/ahUHIGlLRG95gFfoIIi0ic0aXUeyYwgokhul+Vj1x6xB?=
 =?us-ascii?q?qKtjKGnTRF9CfzLqIGF6Tquwqr2CbtZP6ZMpqylWUP6wYUuHSr77uBYa1yLjH2?=
 =?us-ascii?q?1DxDE0bT2qu5P5nwBkh2KZNnp8sH3ZecRozxfF+NPcXeJR3iYBRCRgiznYHEK8?=
 =?us-ascii?q?P9qq/dWTjZvDqfqxV2GiVp1Sdynk04WAuTC/5W1rBx2/gv+ylsfmEQg8zS/0yd?=
 =?us-ascii?q?1qWT/Uoxb7Z4nhz766Pv5/fkl0GF/87NJ3G4FknYs3np0Q23kahpOO8HoDkGfz?=
 =?us-ascii?q?N8hb2K3kYHoMQz4L38Da4Az/1EJ/KXKJwprzVm+Bzct5e9m6fmQW1zo+789QCa?=
 =?us-ascii?q?eY9rxEnTZvrVq+ogLcevx9njYbyfsz538WmeAJuAwxziqDBrAeB1VXPSvplx6Q?=
 =?us-ascii?q?9dCxsL1XZHqzcbi3zEd+mNGhDLKYrQ1GVnf2ZIwiHTNu4cVlK13Dzmfz6o7/dd?=
 =?us-ascii?q?nUbNITsACUkhjag+hULpIxiuQFhS59NW3hun0lzvYxjQZy0pGioIiHN2Jt8bql?=
 =?us-ascii?q?Ah5fMz35fcIS9SvrjaZDhcaWxIGvE45lGjUKWpvoUP2pHCgTtfThKwaBDjk8pm?=
 =?us-ascii?q?2HFrrYGA+V8F1moG7XE5C3K3GXI2EUws54SxmaIExfnRoYXDEnnpMiEgCqxcrh?=
 =?us-ascii?q?cFp25zwL5174rAdMxfxsNxXlTmjfowKoYC8uSJeDNBpW8h1C50DNPMyc9O1zGj?=
 =?us-ascii?q?9X/oa7oAyRMGCbZBlIDWIUWkyCHV/jJaKj5d3B8+ieG+q/IOHCYbSIqexCSfiI?=
 =?us-ascii?q?wYij3Zdh/zaJLs+PJGVtD+Un2kpfWnB0A8TYmzISSywOiiLCdcibqA2n+i1wqM?=
 =?us-ascii?q?C//+/mWAbu5YuJFrtTPs9j+xGwgaefKeGQgDx1Jipf1pMJ3XXI0qQQ3EYOiyFy?=
 =?us-ascii?q?cDmgCbQAujDMTKLTma9XDgQXayBpNMtP4KIzwBNNOdPAit7u0r54j/g1C0pKVF?=
 =?us-ascii?q?D7m8GpY9AKLH+5NF/dGEmLM7GGLyXRw87reaO8VaFQjOJMuhKqpDaUCFXjMSqD?=
 =?us-ascii?q?ljXzUxCvMPpBjCWaPBxYpYG8fQxhCWnlTNL6dBK7NMV7giExwb0xnnnKL3ITMS?=
 =?us-ascii?q?Bgc0NRqb2d9T9YgvR6G2Bb8nVpN/WLmyaH4OneMZsWtfprAiJpl+NV+ng6yr1V?=
 =?us-ascii?q?7D1aS/xxgifdstluo1S+mOmV1jVnSAZOqipMhI+TvURtI6PZ9pxBWXbC5B0M7G?=
 =?us-ascii?q?WQBA4Mp9tqEdDvv6FQyt7SlKP8MjtC8tTU/dcCCMjQMs6ILH0hMR+6UALTWSAM?=
 =?us-ascii?q?UTevNGeXokVHkfeb7TXBpZEmo5ztntwLQ6VaUlUuPvoADwJuG9lUZN9IXzcg2Z?=
 =?us-ascii?q?KWhcUP4zLqsxjVQINWs5nMUfS6CO/qbj2eiO8ALz4B27CwF5kPMoT91wQ2b1Bg?=
 =?us-ascii?q?n8LQBlbUVNZBiiR7a0k/p0AbtDBESWcy3QrAdxm14G5bQeSzlB8wzA5je/wt5R?=
 =?us-ascii?q?/l+VJxLV3P8m94s0Q8gp3OhjeSOGryIaqrVoZRCAL/t1I2N5LmRkBydwLk2QRH?=
 =?us-ascii?q?PSvJD4lNgqRpb3wj3AzHpZZQEORAZalFZgIAy/aKYfkhzVVbrGOg30ARoaPqE5?=
 =?us-ascii?q?Zt3Cgwdpes6lJJwR5mZdh9caPKKaVKznBUh6STriGvy+Y9yRMfIEBL93mdLmpA?=
 =?us-ascii?q?kUoELLQ5bw+v5PBr70TWkjhbfUAIVvw3srdk8V47N+2cziXmlblZJRb1f82ZIK?=
 =?us-ascii?q?TRnm/Ek8eSCgc110UHkGFG8KJw3MNldFCbAQRnhpiQDRUNMYLrYUcdVMpP6HXW?=
 =?us-ascii?q?ejjE+bHOwIh0O4H7DeD1UeKLs7g8hkOiARZvHoIQ48BHFZ6phgWQFsf6Jb5N6h?=
 =?us-ascii?q?Uk4ky/P1WYBfRhex+RljoD5calw8kzlY1cICwNRGxnNGC066zRqwsChPuYQMxw?=
 =?us-ascii?q?Y3EURIIIO3s6HsqglGoRu3VGESny3uUS4BaN4iW6pSnKCjT4Kd15a7PcYRJqFc?=
 =?us-ascii?q?Hz/DAX8La/gl2R9Y/RYyn+NNJ/qprG8+gaj4iIBukSTrRntUrY3Y5CSDjiV2/J?=
 =?us-ascii?q?DM7wJIP9b4cwYMfoImi1X0b5iD8vScr1etG3IezAhQDuWJYRs4SB2j0nHdGyGy?=
 =?us-ascii?q?tYGBpqoewHoqVmal4teZ0+NDfuux4zJuScJwGfzNyqRHjlfTJQQ+NS3Oa8ebh/?=
 =?us-ascii?q?wC0rYeu3jnAnS8dpnKGM7UcRScRS3VnlzvG5atwbCHCrFw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAABpYA5ch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgjsnmCKBaDmXPYEkA0kVAQEYEwGHbCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQg?=
 =?us-ascii?q?pIwyCNiQBgmIDAwECLwENAQEeGQEFCQEBUAMxAQUBHAYBEgWDHIICAQSZNjyKH?=
 =?us-ascii?q?YIfgnYBAQWBBQGGFAgSh2CDE4EcF4F/gUSFfQKBKoYSiyuVTAmCJYMVjBUYiWa?=
 =?us-ascii?q?HVyyIdo9nAgQCBAUCBQ8hgSVtgSFNI4M8ghsMF4NKihwBNz8ygQUBAYl8gk0BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0AWAABpYA5ch0O0hNFjHgEGBwaBUQkLAYEwgjsnmCKBaDm?=
 =?us-ascii?q?XPYEkA0kVAQEYEwGHbCI0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmIDA?=
 =?us-ascii?q?wECLwENAQEeGQEFCQEBUAMxAQUBHAYBEgWDHIICAQSZNjyKHYIfgnYBAQWBBQG?=
 =?us-ascii?q?GFAgSh2CDE4EcF4F/gUSFfQKBKoYSiyuVTAmCJYMVjBUYiWaHVyyIdo9nAgQCB?=
 =?us-ascii?q?AUCBQ8hgSVtgSFNI4M8ghsMF4NKihwBNz8ygQUBAYl8gk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="54534561"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 04:51:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727807AbeLJMvT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 07:51:19 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:40619 "EHLO
        mail-wm1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727400AbeLJMvN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 07:51:13 -0500
Received: by mail-wm1-f68.google.com with SMTP id q26so11057235wmf.5
        for <linux-kernel@vger.kernel.org>; Mon, 10 Dec 2018 04:51:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=DGAUj6PSqqPDQJ5J6R6pKlBVa6bTvYS48OkmKh4Sulk=;
        b=gls6f17iFdY+aaMHKZj2c6iqSD/1QrF4roruo3c5l5rPA1aVvvzHjI2CFqg/lmlOS5
         QV5WzVIcjFGeG5EZOAQBUSLUhKGejG5O9B8bsP3m0ZDDbDXlypr860QwpgdjRFT3VtOy
         XxeDJnbsSvMDNeVg7Zd3WWKgfoYfCaUgEKOfQw5HnKoHFqbh4YmdPnz+wYY39XjVd+O7
         nOiFe7/AFJYVdSf7VYpOu//HoHkRLNS028ysC6yapgWia3lzb7Jo2WuChJRuNCDkW4mV
         cPqpApKuM6RsIoZYmQ0wgoKMKNyLL+EL+mT4Ax0maE+25TL9RSBHw3MXHz8+SN4ZTCt0
         F53A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=DGAUj6PSqqPDQJ5J6R6pKlBVa6bTvYS48OkmKh4Sulk=;
        b=NV9oTCBTXIE+E7W+SKeHbnEww2KEz4GoxMRL3q252ZtnuqZxRz5azxpHyCIsygR43j
         80n3ryitjIgWFZA2eMUqVw1ZywSXJzepqFrETX8DucI2myThNVFwFkjvTDnRrk3rlfnN
         jFHCj1FfGbHhgaxDaj2062Qcu+gwQpSgDS99+aOD7xoqYFNpR1GPmRGCkfASJYid2cRo
         s4jYrkGJdc4XHOaZ9BXrpvKJtbFXI894LfNlggAz5OENx2r/uxdnqrOXnz5Qr8ZlxkcX
         l0l6sVmzuN05aAm2+xyNcBXFA/TmOd5FKmFtN8QmUCEJUWx+2aiW88CTFBm3fvy/cNY2
         Ruyw==
X-Gm-Message-State: AA+aEWZKBbvMuXyAEHDSdtPVLWlaPtxTmTffoh9zCy5y8ERc1hx+BCSB
        OL5jp6NT6uHpu3pbyzpCACKM9g==
X-Google-Smtp-Source: AFSGD/Wfd26kZrXesEpia2lo9KfLrUJNSZ6LeKcsVzx9h0ZIx3ectSG+FrTDJ+dLbEuGhtbGIsbJVQ==
X-Received: by 2002:a7b:cb18:: with SMTP id u24mr10123577wmj.138.1544446271115;
        Mon, 10 Dec 2018 04:51:11 -0800 (PST)
Received: from andreyknvl0.muc.corp.google.com ([2a00:79e0:15:10:3180:41f8:3010:ff61])
        by smtp.gmail.com with ESMTPSA id l197sm36893363wma.44.2018.12.10.04.51.09
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 10 Dec 2018 04:51:09 -0800 (PST)
From: Andrey Konovalov <andreyknvl@google.com>
To: Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Robin Murphy <robin.murphy@arm.com>,
        Kees Cook <keescook@chromium.org>,
        Kate Stewart <kstewart@linuxfoundation.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Ingo Molnar <mingo@kernel.org>,
        "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>,
        Shuah Khan <shuah@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-doc@vger.kernel.org,
        linux-mm@kvack.org, linux-arch@vger.kernel.org,
        linux-kselftest@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: Dmitry Vyukov <dvyukov@google.com>,
        Kostya Serebryany <kcc@google.com>,
        Evgeniy Stepanov <eugenis@google.com>,
        Lee Smith <Lee.Smith@arm.com>,
        Ramana Radhakrishnan <Ramana.Radhakrishnan@arm.com>,
        Jacob Bramley <Jacob.Bramley@arm.com>,
        Ruben Ayrapetyan <Ruben.Ayrapetyan@arm.com>,
        Chintan Pandya <cpandya@codeaurora.org>,
        Luc Van Oostenryck <luc.vanoostenryck@gmail.com>,
        Andrey Konovalov <andreyknvl@google.com>
Subject: [PATCH v9 1/8] arm64: add type casts to untagged_addr macro
Date: Mon, 10 Dec 2018 13:50:58 +0100
Message-Id: <07836d7852b5c2d9588e28e4081a6f783689377c.1544445454.git.andreyknvl@google.com>
X-Mailer: git-send-email 2.20.0.rc2.403.gdbc3b29805-goog
In-Reply-To: <cover.1544445454.git.andreyknvl@google.com>
References: <cover.1544445454.git.andreyknvl@google.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This patch makes the untagged_addr macro accept all kinds of address types
(void *, unsigned long, etc.) and allows not to specify type casts in each
place where it is used. This is done by using __typeof__.

Acked-by: Catalin Marinas <catalin.marinas@arm.com>
Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
---
 arch/arm64/include/asm/uaccess.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/include/asm/uaccess.h b/arch/arm64/include/asm/uaccess.h
index 07c34087bd5e..3c3864ba3cc1 100644
--- a/arch/arm64/include/asm/uaccess.h
+++ b/arch/arm64/include/asm/uaccess.h
@@ -101,7 +101,8 @@ static inline unsigned long __range_ok(const void __user *addr, unsigned long si
  * up with a tagged userland pointer. Clear the tag to get a sane pointer to
  * pass on to access_ok(), for instance.
  */
-#define untagged_addr(addr)		sign_extend64(addr, 55)
+#define untagged_addr(addr)		\
+	((__typeof__(addr))sign_extend64((u64)(addr), 55))
 
 #define access_ok(type, addr, size)	__range_ok(addr, size)
 #define user_addr_max			get_fs
-- 
2.20.0.rc2.403.gdbc3b29805-goog

