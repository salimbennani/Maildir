Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  13 Dec 2018 08:56:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3C38D580380;
	Wed, 12 Dec 2018 14:00:35 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 Dec 2018 14:00:34 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5sQWJxzfs/2q3E/XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4fLPad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXXdPUNhfVyJBAY2y?=
 =?us-ascii?q?YYUAAOUDMulEoIf9vEMOoBmlCAmwBu7i0CNEimP40KA41ekqDAHI3BYnH9ILqH?=
 =?us-ascii?q?narM/1O70UUeC20aLG0TLDbv1M1jf79YfDbxcsof+WXbJ3f8ve008vGB7fglWU?=
 =?us-ascii?q?qIzlJC+V2/8Cs2ie9eVgVOavh3Q7pAF2pzii38EhgZTKiIIN0l3I6zl1zYIvKd?=
 =?us-ascii?q?GlRkN3f8SoHIZTui2GLYd7Q8EvT3l2tCs10LELuIS3cDUOxZg53RLSa+CLfo6V?=
 =?us-ascii?q?6Rz5TumROy13hHd9dbK/mRmy9U+gx/XiVsm7zllKtDBJktrSuXAX0Rzc9MyHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz7oqmpYOv0nPADX6lFj1gaOKbEkp++ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/BeU4Mg4TX2mU4Oi816Ps/Vf/QLpUiv06i6?=
 =?us-ascii?q?7ZsZ7cJcsFvK60GBFV0ok95BalFTum08oXnWMBLF1bfBKLlY/pO0vBIPzgF/ew?=
 =?us-ascii?q?n0yskCt3x/DBJrDhBpTNLnvdn7v7crd99lVRyA4yzdBZ+pJVBasNIPP1Wk/tqt?=
 =?us-ascii?q?PYCgU1PBCzw+biEN99zJ8RWXqTAq+FN6PfqV+I6fguI+mQfoAVvyzxK/g45/H0?=
 =?us-ascii?q?i385lkQQfa2o3ZsRdXC5Ee5qI0SfYXrwnNgBFX0GsRY5TOzvkFeCSyJcZ26uX6?=
 =?us-ascii?q?Ig4TE2EICmDYDdSYy3g7yB2yG7HptRZm1dDlCMEHHod5iLWvsWaSKSJNNhnSIA?=
 =?us-ascii?q?VbS7V4Ah0hSuvhfgy7V7NurU5jEYtZX72ddv/O3TlRYy9T9uA8SHyW6NTXp5nm?=
 =?us-ascii?q?cJRz8wwaB+rlZxylaF0ahknfNYEcZf6O9OUgc/LZTc1fB1C8juWgLdedeEUFWm?=
 =?us-ascii?q?Tc+gAT0rStIxwsUBY0ByG9i5ihDD3iyqA6IalrCRBZw09L7c0Gb1J8pn13nG06?=
 =?us-ascii?q?whhUE8QsRTLW2mmrJ/9w/LCoHUiUqZibileb4c3CHX8meD1nSBvEdfXA50UqXF?=
 =?us-ascii?q?WHQfa1DSrdT44EPCUrCvBa4mMgtH1c6NNK9KZsf1glVBQffpIM7ebH6pm2esGR?=
 =?us-ascii?q?aIwauBY5fwdGUDwirREkgEnBoV/XadKwc+ADyso2bfDDxoCFLubFng8eh4qHOn?=
 =?us-ascii?q?UEA0yxuGYFFm17qw4hQVn+CTS+sP3rIYvycssyl0HFe439LRF9qApwpgcL9AYd?=
 =?us-ascii?q?8n51dHz2bZtw17PpyvNK1igl8ecwJqv0LhzRl3C4NAkdQ0o3Mu1gZ9NaWY0FZZ?=
 =?us-ascii?q?fTOCwZ/wIqHXKnX1/B23caHW3k/R0dmI9aYP8vg3sEjjsxyzGUok8HVn1MdV3m?=
 =?us-ascii?q?CY5pXLCgoSTJ3wXlw29xh8u7HVfC0965nI2n1rNKm+qiXC1M4xBOs51hageM9S?=
 =?us-ascii?q?MaOZFAPoD8IWHcmvKOwwlFivYRIJJ+RS9K8yP8O7ePqKwq+rPOB8nD24iWRL+p?=
 =?us-ascii?q?xy0kWJ9yBkUO7Hw44Fw+2E3guATzr8llahvdztloBeeD4SGXCzyS76C45LZ61+?=
 =?us-ascii?q?ZJoEBn2qI8Kq2Np+nZntW3hD+V6nBlMG3tKpeBWIY1z82w1QyVoYoXi9lSSkyD?=
 =?us-ascii?q?x0likjrrCD0yzW3+TiaB0HN3ZLRWljl1vtIZK4j8sHXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSL7yuQEa0yDgH2?=
 =?us-ascii?q?tZ3jw7bCulupb6nxx7jmKSMnBzoWHdecFxwxff+dPdSeRQ3joAWCl3lz3XCkKg?=
 =?us-ascii?q?MNmu+NWej43DvfymV2K9Sp1TdjHmzIOauyu8/2FqAxy/n/aol93jEAg61zL71t?=
 =?us-ascii?q?ZwWSXJqhb8fpfk16CgPe17eUloAUf269BmFYFmjoswmJYQ1GAZhpqP/HoLi2fz?=
 =?us-ascii?q?MchB1qL4Y3oAXjoLw9/T4Aj410xvNHOJx4TlVnqDxsttfcW1YmQT2igl9cBFFL?=
 =?us-ascii?q?+U7KBYnStyule4qAPRYftnkTsHx/oh9mUag/0Xtwo31SqSHKoSHUZDMCzolhSI?=
 =?us-ascii?q?6c2+rapNaGaud7iwyFRxndS7AL6epQFcXW7zeo0+Ei9o8sV/LFXM3WXv6oHjfd?=
 =?us-ascii?q?ncd9MSuQeSkxfdlOhVM5Mxm+EOhSpmP2L9oHIkx/Q6jRxowZG1ooyHJ39x86K+?=
 =?us-ascii?q?Bx5SLif1aN8L+jHxkaZemd6b0Ju1EZVmHjULQYHkTfa1ED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTU4hJE5Ex6lxNf7?=
 =?us-ascii?q?fEdl/DwR5UP4qhhRyuJuLRb/SXzSpAOpajcyVZieIwBa7gBE50fJL8Oe6vh/ED?=
 =?us-ascii?q?1f/p2ktAaNMHCUZxxUDWEVXUyJH1DiPr6z5dnZ7uiXHOy+I+HVYbWJr+xeWOyF?=
 =?us-ascii?q?xZau0otg4jaNOd+DPnhkD/0nxEVDWWp1FNjemzUKUyYXjT7Cb9aHpBeg/S16ts?=
 =?us-ascii?q?C//+rqWALs5ouPCqFeMdZ1+xCxjqeMKfSQhDtiKTtD0pMMxHnIyKUQ3VIIiiFu?=
 =?us-ascii?q?cSWtHqoEtSLXUK3QnapXBQYBayxvLMtI87483g5VNMHBl9P6zaR4geA1CltfUV?=
 =?us-ascii?q?zhm9qkZcgLI2G7KVPGC1yHNLWAJT3X3c73ZbmwRqFXjOVRrxewoyqUE1f/PjSf?=
 =?us-ascii?q?kDnkTwyvMeBJjC2BIBNSop2ychZzBmjlV9/mbhy7MNlqjTw527E0h3XKNXICPj?=
 =?us-ascii?q?h4aU9CsrqQ7SZAiPVlB2NB9mZlLfWDmyuB7+jXMJAWsf5qAiRyj+1b4XQ6xKFT?=
 =?us-ascii?q?7CFLX/F1nCrSrthzo1CpiOWPyzxnUAZQpTZPno6EoUJiOaCKvqVHDEzD9lot4H?=
 =?us-ascii?q?+KChIF749/Ddfv+KxM4tvCjqT+LHFF6d2CuYM5BsPUIc+DeFclNRfzHTfSRF8A?=
 =?us-ascii?q?VTODOGXbilZYmffU93HTp4Vs+bb2n59bZKVSUl99LPQFA0JpVIgMOpBoVzUo17?=
 =?us-ascii?q?qal9Ig6n+3rR2XT8Jf6MOUHsmOCOnifW7KxYJPYAEFlPahddwe?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AyAACEhBFch0O0hNFkGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJsfyeDfIN7hB6ME4FgCCUUaIgoji8UgV8SAQEYEwGHPiI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEbHQEDA?=
 =?us-ascii?q?QEJAQEFBQsNAgImAgIDHgIRAQUBHAYBDAYCAQEBgxyBaQEDDQgFmzw8iw18FgU?=
 =?us-ascii?q?BF4J3BYJEgXkKGScNXYE3AgYSeYoVgRyCFoERJwyCKjWCV4ISgxyCVwKJOYYMR?=
 =?us-ascii?q?zeQGy4HAo4ngyoGGIFchRqCcxCHTYkphgSJawIEAgQFAgUPIYElgg4fFBojUDG?=
 =?us-ascii?q?CO4IbDBeDSop0HzIBgQQBAYxrAQE?=
X-IPAS-Result: =?us-ascii?q?A0AyAACEhBFch0O0hNFkGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJsfyeDfIN7hB6ME4FgCCUUaIgoji8UgV8SAQEYEwGHPiI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpIwyCNiQBgmEBAQEBAgEBAiAEGQEbHQEDAQEJAQEFBQsNAgI?=
 =?us-ascii?q?mAgIDHgIRAQUBHAYBDAYCAQEBgxyBaQEDDQgFmzw8iw18FgUBF4J3BYJEgXkKG?=
 =?us-ascii?q?ScNXYE3AgYSeYoVgRyCFoERJwyCKjWCV4ISgxyCVwKJOYYMRzeQGy4HAo4ngyo?=
 =?us-ascii?q?GGIFchRqCcxCHTYkphgSJawIEAgQFAgUPIYElgg4fFBojUDGCO4IbDBeDSop0H?=
 =?us-ascii?q?zIBgQQBAYxrAQE?=
X-IronPort-AV: E=Sophos;i="5.56,346,1539673200"; 
   d="scan'208";a="54952910"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 12 Dec 2018 14:00:33 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728367AbeLLWAb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 12 Dec 2018 17:00:31 -0500
Received: from mail-pg1-f196.google.com ([209.85.215.196]:37565 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726263AbeLLWAa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 12 Dec 2018 17:00:30 -0500
Received: by mail-pg1-f196.google.com with SMTP id 80so8968717pge.4;
        Wed, 12 Dec 2018 14:00:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=kH2NrjB5vcSca6qFFYtJujxGB4LhmIsrnFoTdHgon5M=;
        b=VH4eolPt04dVsVDV6BpqC0rdpE2bfn3G7MMdUYUIp0T7ZsyySM9SPJnkmF0sq86gvm
         MqqoErFrsrg8BH4+4EuCA8vOR8woekBaVzMPtDVQkcsLY2V0Wkg8396uD8qE9vLY688N
         Ty/9W5cbFHwyyio5O/HuxPwWYgNOeHpYJUNHS0l2f0pQydZqtIKx3b2Cj/Vnke8x/9Ry
         08Oc4Tn38xrsM2z9EFQq7+rIpg3E2VoEJwl2Ti6500JpZ28gKAzc2obSvnVGVI02xpPn
         S0WRJYPVeaOSx1hTH382AYO806ScowFifCoiicZy3eujQHH7GOoSW4Tgv4J7kfLF7Ugl
         j3Ug==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=kH2NrjB5vcSca6qFFYtJujxGB4LhmIsrnFoTdHgon5M=;
        b=URm+RN6uSIkjXlVCkfSAJHCfmTHjW3JzIParSo1IqttyKqR1lL5XblZQBuiHYSUoz6
         +xJvOGoxXmQcl1QMvkZM7f1/IXrgXS4WWZ+TTPYuc5DAkyWWZTppHm/OkfW2dSQ3mgfm
         p8MXA5LIaEZvx2uuvD2oTvKwBrWbC2uI47KZQSuqdfV/OBArHSkesK+XOB3N3wrj1g1o
         f4mEkRXsDSa3BSDOVNnGThsq9XjhY/mqHi4iLyTVMBPNysWOFPHiprVGW3r0AM3mGyUX
         fBvS7zXDl+xcw6qNDHN0dBCD1zS/QRbun4w/rr3MtidGZllExhOiRk/wPjJ1M+qHqBkm
         3Mig==
X-Gm-Message-State: AA+aEWZ4XJZ47WfVdBsqKdln10fHfFhO2f45ESiwSjKJkehNhEYvKoHZ
        X+QlY2+CDzEd9JUfbzW6ACM=
X-Google-Smtp-Source: AFSGD/WlPIwm9wZ9L+sKgMNLwRVXtb9+cXuTsJgVWqvzrQf83De+U9OMf67GDCSGbjaI1vviCLkaRA==
X-Received: by 2002:a65:4ccb:: with SMTP id n11mr20179898pgt.257.1544652029523;
        Wed, 12 Dec 2018 14:00:29 -0800 (PST)
Received: from [192.168.1.70] (c-24-6-192-50.hsd1.ca.comcast.net. [24.6.192.50])
        by smtp.gmail.com with ESMTPSA id i184sm26778885pfc.41.2018.12.12.14.00.27
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 12 Dec 2018 14:00:28 -0800 (PST)
Subject: Re: [PATCH v03] powerpc/mobility: Fix node detach/rename problem
To: Rob Herring <robh+dt@kernel.org>,
        Michael Ellerman <mpe@ellerman.id.au>
Cc: mwb@linux.vnet.ibm.com,
        linuxppc-dev <linuxppc-dev@lists.ozlabs.org>,
        Tyrel Datwyler <tyreld@linux.vnet.ibm.com>,
        tlfalcon@linux.vnet.ibm.com, minkim@us.ibm.com,
        devicetree@vger.kernel.org,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
References: <a2d46622-a957-dffe-04d1-8087bbf0f8b5@linux.vnet.ibm.com>
 <871s6oxkdf.fsf@concordia.ellerman.id.au>
 <CAL_Jsq+t--486MiSsHnKcVy=q2wVvJgUmtAV6Vy2WwSNKymELA@mail.gmail.com>
From: Frank Rowand <frowand.list@gmail.com>
Message-ID: <48aa028d-b786-7704-70ff-75a6d2321474@gmail.com>
Date: Wed, 12 Dec 2018 14:00:27 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <CAL_Jsq+t--486MiSsHnKcVy=q2wVvJgUmtAV6Vy2WwSNKymELA@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Michael Bringmann,

On 12/11/18 8:07 AM, Rob Herring wrote:
> On Tue, Dec 11, 2018 at 7:29 AM Michael Ellerman <mpe@ellerman.id.au> wrote:
>>
>> Hi Michael,
>>
>> Please Cc the device tree folks on device tree patches, and also the
>> original author of the patch that added the code you're modifying.
>>
>> So I've added:
>>   robh+dt@kernel.org
>>   frowand.list@gmail.com
>>   devicetree@vger.kernel.org
>>   linux-kernel@vger.kernel.org
>>
>> Michael Bringmann <mwb@linux.vnet.ibm.com> writes:
>>> The PPC mobility code receives RTAS requests to delete nodes with
>>> platform-/hardware-specific attributes when restarting the kernel
>>> after a migration.  My example is for migration between a P8 Alpine
>>> and a P8 Brazos.   Nodes to be deleted include 'ibm,random-v1',
>>> 'ibm,platform-facilities', 'ibm,sym-encryption-v1', and,
>>> 'ibm,compression-v1'.
>>>
>>> The mobility.c code calls 'of_detach_node' for the nodes and their
>>> children.  This makes calls to detach the properties and to remove
>>> the associated sysfs/kernfs files.
>>>
>>> Then new copies of the same nodes are next provided by the PHYP,
>>> local copies are built, and a pointer to the 'struct device_node'
>>> is passed to of_attach_node.  Before the call to of_attach_node,
>>> the phandle is initialized to 0 when the data structure is alloced.
>>> During the call to of_attach_node, it calls __of_attach_node which
>>> pulls the actual name and phandle from just created sub-properties
>>> named something like 'name' and 'ibm,phandle'.
>>>
>>> This is all fine for the first migration.  The problem occurs with
>>> the second and subsequent migrations when the PHYP on the new system
>>> wants to replace the same set of nodes again, referenced with the
>>> same names and phandle values.
>>>
>>> On the second and subsequent migrations, the PHYP tells the system
>>> to again delete the nodes 'ibm,platform-facilities', 'ibm,random-v1',
>>> 'ibm,compression-v1', 'ibm,sym-encryption-v1'.  It specifies these
>>> nodes by its known set of phandle values -- the same handles used
>>> by the PHYP on the source system are known on the target system.
>>> The mobility.c code calls of_find_node_by_phandle() with these values
>>> and ends up locating the first instance of each node that was added
>>> during the original boot, instead of the second instance of each node
>>> created after the first migration.  The detach during the second
>>> migration fails with errors like,
>>>
>>> [ 4565.030704] WARNING: CPU: 3 PID: 4787 at drivers/of/dynamic.c:252 __of_detach_node+0x8/0xa0
>>> [ 4565.030708] Modules linked in: nfsv3 nfs_acl nfs tcp_diag udp_diag inet_diag unix_diag af_packet_diag netlink_diag lockd grace fscache sunrpc xts vmx_crypto sg pseries_rng binfmt_misc ip_tables xfs libcrc32c sd_mod ibmveth ibmvscsi scsi_transport_srp dm_mirror dm_region_hash dm_log dm_mod
>>> [ 4565.030733] CPU: 3 PID: 4787 Comm: drmgr Tainted: G        W         4.18.0-rc1-wi107836-v05-120+ #201
>>> [ 4565.030737] NIP:  c0000000007c1ea8 LR: c0000000007c1fb4 CTR: 0000000000655170
>>> [ 4565.030741] REGS: c0000003f302b690 TRAP: 0700   Tainted: G        W          (4.18.0-rc1-wi107836-v05-120+)
>>> [ 4565.030745] MSR:  800000010282b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]>  CR: 22288822  XER: 0000000a
>>> [ 4565.030757] CFAR: c0000000007c1fb0 IRQMASK: 1
>>> [ 4565.030757] GPR00: c0000000007c1fa4 c0000003f302b910 c00000000114bf00 c0000003ffff8e68
>>> [ 4565.030757] GPR04: 0000000000000001 ffffffffffffffff 800000c008e0b4b8 ffffffffffffffff
>>> [ 4565.030757] GPR08: 0000000000000000 0000000000000001 0000000080000003 0000000000002843
>>> [ 4565.030757] GPR12: 0000000000008800 c00000001ec9ae00 0000000040000000 0000000000000000
>>> [ 4565.030757] GPR16: 0000000000000000 0000000000000008 0000000000000000 00000000f6ffffff
>>> [ 4565.030757] GPR20: 0000000000000007 0000000000000000 c0000003e9f1f034 0000000000000001
>>> [ 4565.030757] GPR24: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
>>> [ 4565.030757] GPR28: c000000001549d28 c000000001134828 c0000003ffff8e68 c0000003f302b930
>>> [ 4565.030804] NIP [c0000000007c1ea8] __of_detach_node+0x8/0xa0
>>> [ 4565.030808] LR [c0000000007c1fb4] of_detach_node+0x74/0xd0
>>> [ 4565.030811] Call Trace:
>>> [ 4565.030815] [c0000003f302b910] [c0000000007c1fa4] of_detach_node+0x64/0xd0 (unreliable)
>>> [ 4565.030821] [c0000003f302b980] [c0000000000c33c4] dlpar_detach_node+0xb4/0x150
>>> [ 4565.030826] [c0000003f302ba10] [c0000000000c3ffc] delete_dt_node+0x3c/0x80
>>> [ 4565.030831] [c0000003f302ba40] [c0000000000c4380] pseries_devicetree_update+0x150/0x4f0
>>> [ 4565.030836] [c0000003f302bb70] [c0000000000c479c] post_mobility_fixup+0x7c/0xf0
>>> [ 4565.030841] [c0000003f302bbe0] [c0000000000c4908] migration_store+0xf8/0x130
>>> [ 4565.030847] [c0000003f302bc70] [c000000000998160] kobj_attr_store+0x30/0x60
>>> [ 4565.030852] [c0000003f302bc90] [c000000000412f14] sysfs_kf_write+0x64/0xa0
>>> [ 4565.030857] [c0000003f302bcb0] [c000000000411cac] kernfs_fop_write+0x16c/0x240
>>> [ 4565.030862] [c0000003f302bd00] [c000000000355f20] __vfs_write+0x40/0x220
>>> [ 4565.030867] [c0000003f302bd90] [c000000000356358] vfs_write+0xc8/0x240
>>> [ 4565.030872] [c0000003f302bde0] [c0000000003566cc] ksys_write+0x5c/0x100
>>> [ 4565.030880] [c0000003f302be30] [c00000000000b288] system_call+0x5c/0x70
>>> [ 4565.030884] Instruction dump:
>>> [ 4565.030887] 38210070 38600000 e8010010 eb61ffd8 eb81ffe0 eba1ffe8 ebc1fff0 ebe1fff8
>>> [ 4565.030895] 7c0803a6 4e800020 e9230098 7929f7e2 <0b090000> 2f890000 4cde0020 e9030040
>>> [ 4565.030903] ---[ end trace 5bd54cb1df9d2976 ]---
>>>
>>> The mobility.c code continues on during the second migration, accepts
>>> the definitions of the new nodes from the PHYP and ends up renaming
>>> the new properties e.g.
>>>
>>> [ 4565.827296] Duplicate name in base, renamed to "ibm,platform-facilities#1"
>>>
>>> There is no check like 'of_node_check_flag(np, OF_DETACHED)' within
>>> of_find_node_by_phandle to skip nodes that are detached, but still
>>> present due to caching or use count considerations.  Also, note that
>>> of_find_node_by_phandle also uses a 'phandle_cache' which does not
>>> appear to be updated when of_detach_node() is invoked.
>>
>> This seems like the real bug. Since the phandle cache was added we can
>> now find detached nodes when we shouldn't be able to.
>>
>> Does the patch below work?
>>
>> cheers
>>
>> diff --git a/drivers/of/base.c b/drivers/of/base.c
>> index 09692c9b32a7..d8e4534c0686 100644
>> --- a/drivers/of/base.c
>> +++ b/drivers/of/base.c
>> @@ -1190,6 +1190,10 @@ struct device_node *of_find_node_by_phandle(phandle handle)
>>                 if (phandle_cache[masked_handle] &&
>>                     handle == phandle_cache[masked_handle]->phandle)
>>                         np = phandle_cache[masked_handle];
>> +
>> +               /* If we find a detached node, remove it */
>> +               if (of_node_check_flag(np, OF_DETACHED))
>> +                       np = phandle_cache[masked_handle] = NULL;

The bug you found exposes a couple of different issues, a little bit
deeper than the proposed fix.  I'll work on a fuller fix tonight or
tomorrow.


> I'm wondering if we should explicitly remove the node from the cache
> when we set OF_DETACHED. Otherwise, it could be possible that the node
> pointer has been freed already. Or maybe we need both?

Yes, it should be explicitly removed.  I may also add in a paranoia check in
of_find_node_by_phandle().

-Frank

> 
> Rob
> 

