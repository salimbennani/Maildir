Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  19 Dec 2018 08:42:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id BDC505805CF;
	Tue, 18 Dec 2018 11:44:15 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 18 Dec 2018 11:44:15 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AK1wJxB1XlODof4/6smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTK/TxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJcUMhRSSJBDICy?=
 =?us-ascii?q?YYUBAOUOP+lXs4bzp0AWrRa8HgSsGOHixyVUinPq06A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotXvNKgIV+C1z7TDwynEb/JYwzj97pXHeQ0mrPGCR7JwdsTQxlMpFwzYlFmQ?=
 =?us-ascii?q?rY3lPyiJ1ukWvGib6vBvVeOri2I9tw5xpT2vy94qh4LUhYwV0kjJ+TtlzIsxP9?=
 =?us-ascii?q?G0VUB2bcC+HJdNtCyWK5F6T8IgTm1wpio3xacKtJ+hcCQXzJkr2QTTZvybf4WO?=
 =?us-ascii?q?/xntTvyeIS1ii3JgYL+/hwi98UynyuDkSMm030hFrjBfntnPqH8NzRrT5daDSv?=
 =?us-ascii?q?dn+UehwzmP2xjS6uFCP080ibLWJ4A9zrM0jJYfrErOEjHslEnrj6Kaal8o9+mq?=
 =?us-ascii?q?5uj/Z7XpvJ6cN4t6igHkNaQun9SyAeA5MggIQmia9v2w1L798k3jRrVFkPk2nr?=
 =?us-ascii?q?DesJHUI8QUuLS5DhRL0oYs9Rm/FS2q0NcGknkdKlJKZhaHg5LuO1HUL/D0Fe2/?=
 =?us-ascii?q?jEi0kDd32/DGOaXsApHMLnjAjrjtZ7l861NHxQo3zNBf4Y9UC74bLPLyXE/xqM?=
 =?us-ascii?q?LXDhsjPwOoxObnDc131pkCVmKXHq+ZLKTSvEeI5u01IumMeJUauDHnJ/gl+v7h?=
 =?us-ascii?q?l3k5mVAGcKmt3JsXbm24H/t8L0WYZ3rsnskOEWMQsgUiS+zqjUWIUSRPaHaqQ6?=
 =?us-ascii?q?I8+jY7BZqkDYfEWI+hmr+B3CC9Hp1QYWBLEVSMEXbud4WZVPYAciOSIsl9kjMa?=
 =?us-ascii?q?UbitUZMu1RartAXi0bpoMvLU+jEEtZLkzNV6/fbTlRE19Tx3FcidyXuCT2Nvk2?=
 =?us-ascii?q?MMRj822r1/oENnxleC16h4n+JXFdhJ6/xVVQc6MIbWz/ZmBNDqRgLBYtCJRU6l?=
 =?us-ascii?q?Qtq8BzE9VNYxw94UbEZ7FNWvlRTD3yusA78ImL2HHp008qTA33fvI8Zx0WrJ1K?=
 =?us-ascii?q?4kj1M+WMtAKXWmhrJj9wjUH4PGjl+Wl7i0eqgG3C7C7mGDzXGQs0FeVwJwVabF?=
 =?us-ascii?q?XXUbZkbNqdT550XCT6KhCLg9MwtBz9KCJbVOatHzkVpGQ/LjMszEY22tg2ewGQ?=
 =?us-ascii?q?qIxrSUYYX3YWodwjvSBFIEkw8J+3aGLhYxBiG6rmLaDTxuE0/vYkz2/el/rnO7?=
 =?us-ascii?q?UlE7zwWQY0J90Lq1/wYfheaARPMLwrIEpCAhpi1oHFa82tLWDMaApwphfalGfd?=
 =?us-ascii?q?Mx+lBH1Xjdtwx8OJygILtvhlofcwRxokPv2A97CoRGkcg2snwqyBB+Jr6f0FNE?=
 =?us-ascii?q?bzmYx4z/OqXLKmnu+xCic7TZ2lXA39eZ5KgO6O40pE7+vA60DEUi9XZn095L03?=
 =?us-ascii?q?aH4pXKDQwSUY/+U0ot9hh6oa3abTc554/OyXJsNqy0uCfY2901HOsl1gqgf9BH?=
 =?us-ascii?q?PaKECQ/+CdEVC9KvKewqgVepaB0EMftW9K41OcOmavSH1LSqPOZmgDKpk2BH7J?=
 =?us-ascii?q?ph3UKL8ip2UvTI0Iodw/GEwguHUC/xjE2gss/rg49EfywdHm2lxSjiGoFRfKxy?=
 =?us-ascii?q?cZ8XBmi0J82428txh4TqW35e71OjA1IG2Mm0eRuddVD93AtQ1VgJrnyjgye30z?=
 =?us-ascii?q?t0kzQxpKqFwCPO2/jidAYAOmNTRGhijE3gIIiug9ABQUioaRMklB+k5Ub82qha?=
 =?us-ascii?q?q75zL2jVQUdUYSf2K3tuXbe3trqHe8RP8o8nsT1LUOSgZlCXUrz9rAEA0yPgHG?=
 =?us-ascii?q?tewyo3dyqwtZX6nBx6iWSdI2h1rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIKAriS74ndmAR++n/C1gdDnFQk60Snm19?=
 =?us-ascii?q?hlTynIrRD8YpX12KS+K+5oYk5oBFrk4cpgBo5+ipcwhI0X2XUChZWa53sHnX3z?=
 =?us-ascii?q?MdVGw63+anUNSCUPw97U5gjlxUJiImiIx4L/SnWS3M9ha8OmbWMR3yI399pKB7?=
 =?us-ascii?q?uM7LxYgSt1pUK1rQfQYfh+hDgR0/Uv52ABg+EVpgUt1D6SDa4IHUlXJiHskxWI?=
 =?us-ascii?q?79ajrKRYfmqvcL6w1FZgktClFr2NvgZcWHPhcJc4ASBw9tl/ME7L0HDr9oHkf9?=
 =?us-ascii?q?zQYcgStxKOlRfAkvNVKIkwlvcRgSpnOGT9vWAqyuIhjBxu2426s5aDK2l34K25?=
 =?us-ascii?q?BRtYPCXvZ8wP4jHtkbpensGO0o+0BJphHTELXIbyQfKsDTIfrvDnNweIED0hpX?=
 =?us-ascii?q?aXA7vfHQmD6Eh4q3LDCYykN3aSJHMB19VtWAGdJFBDgAATRDg6nIQ2FgW0y8z6?=
 =?us-ascii?q?akt5+iod5l3lqhtP1+JoMQPwUnzEqQesazc0ToWfLRVM4gFD4UfVLdKR7uZpEy?=
 =?us-ascii?q?5E+Z2hqRSHKnaHaARQEWEJRkuECkjjP7mp+NnA6vWYCfC4L/fUerWOrupeV/iT?=
 =?us-ascii?q?yJKr04tm+SuMN8qVMnljCf07xlRMXXRjF8vFnDUPTjQdlzjRYM6DuBe85ip3o9?=
 =?us-ascii?q?i/8Pv1WQLv5oiPC7pIPdVs4RC2hqiDOPCKhCZkMjZVzZcMxX7OyLgC018ekSBu?=
 =?us-ascii?q?dz+xEbsesS7BVr7fmqhSDxQDcSN8KNNI774g3glKIcPUkM712aVijvErC1ZJT1?=
 =?us-ascii?q?jhmsCyaMwOImG9Mk7HBUmROLSHIz3L39/4YaemRbJMi+VUsgW6uSyHHE/7IjSD?=
 =?us-ascii?q?iz7pWgizMeFNiSGXJgBRtJuhfRZtF2fjSsnrahm6MN9xkD03zqc4hnLMNW4ALz?=
 =?us-ascii?q?d8d1lBoaGX7SNdmv9/AXBO7mJ5LemYnCaU9+nZJYwQsftuAyR0kfpV4XU6y7RP?=
 =?us-ascii?q?6iFES+d4mC/Trt5ovlGnnfODyjthUBpStDlLgJiHslllOaXcpdF8XiPe+xgNrm?=
 =?us-ascii?q?mMIxcHvd1oDpvooa8Ugv3On6L6JTMK2cjV+8QZDs7SYJaCL3AJNRvvBS6SEg0I?=
 =?us-ascii?q?UXiqP2SZjEtYxrXa8nyTs4gispOplJcQYrtaT0AuUPQIDk1vB5oFOpgkcCkjlO?=
 =?us-ascii?q?u1lscO5jKEqwbYQskS6p7dUe2bB/mpLDeCkZFLYhIJxfXzKoFFZd6z4FBrdlQv?=
 =?us-ascii?q?xNeCIEHXR90Y53Q5NgI=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AJAABtTRlch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCbH8ng3yDe4Qei3uBYC0UiRKJN4R9FIFfEwEBGBM?=
 =?us-ascii?q?Bhx0iNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBG?=
 =?us-ascii?q?wsSAQMCCQEBBQULCgMCAiYCAgMeAhEBBQEcBgEMBgIBAQGDHYFoAQMNCAWbZzy?=
 =?us-ascii?q?LGXwWBQEXgncFhD4KGScNXoE3AgYSeYoYgRyCFoERJ4JrgleBcx+DIIJXAolCh?=
 =?us-ascii?q?lc3hSyKeDAHAo4vgysGGIFdiBkRgU6GAiyCXYY7gQWFBIl/AgQCBAUCBQ8hgSW?=
 =?us-ascii?q?CDh8UGiNQMYI7ghsMF4NKinQfMgGBBAEBixMqgiMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AJAABtTRlch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCbH8ng3yDe4Qei3uBYC0UiRKJN4R9FIFfEwEBGBMBhx0iNAkNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQIBAQIgBBkBGwsSAQMCCQEBBQU?=
 =?us-ascii?q?LCgMCAiYCAgMeAhEBBQEcBgEMBgIBAQGDHYFoAQMNCAWbZzyLGXwWBQEXgncFh?=
 =?us-ascii?q?D4KGScNXoE3AgYSeYoYgRyCFoERJ4JrgleBcx+DIIJXAolChlc3hSyKeDAHAo4?=
 =?us-ascii?q?vgysGGIFdiBkRgU6GAiyCXYY7gQWFBIl/AgQCBAUCBQ8hgSWCDh8UGiNQMYI7g?=
 =?us-ascii?q?hsMF4NKinQfMgGBBAEBixMqgiMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,370,1539673200"; 
   d="scan'208";a="58012115"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 18 Dec 2018 11:44:13 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727409AbeLRToL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 18 Dec 2018 14:44:11 -0500
Received: from mail-pg1-f195.google.com ([209.85.215.195]:35325 "EHLO
        mail-pg1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727034AbeLRToJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 18 Dec 2018 14:44:09 -0500
Received: by mail-pg1-f195.google.com with SMTP id s198so8283722pgs.2;
        Tue, 18 Dec 2018 11:44:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:from:to:cc:references:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding;
        bh=XU/SeUvQ2jX8Gn96XZciqfS70zf1BrIRvyoEZrQ3AdU=;
        b=U0E9/vejXMo+VknBnFnQW8UMwWE7yIKdgJkdSxDs9xIV8twplq3XAjXlAscowOHDxC
         6EPBWh3231/bbFNJvnabFbTj/PxlzcWdbKCwALxdpBONtU7YXYMVEOuglkdTKHcLAjqg
         SjcaiwGeAkXrFjDAk0DJcapMt24jutLCdxPmS1NZFuPJuJ1ldyq4Eoo1cn5Sg0gV4yAe
         r67ZtrlOterhKnAQXXVB/zEZcReFj8C1ec5E8q/Au0i3ouJ6I0jSPu5J3IKHY6YCB1we
         qmyBvqWPh0lJKBnATkprI0ilalaF6oi3nwia7ekkwyCgJIVD6PwhNJDYLH76ULmYv0ej
         iXHw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:from:to:cc:references:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=XU/SeUvQ2jX8Gn96XZciqfS70zf1BrIRvyoEZrQ3AdU=;
        b=g85IavRsbY1Ouio7VUcvVBI++BkQaclly8eACQtLsPb0eb00uipWFtFYRZZtUGwzWN
         qTZOuOC7PFFNN53jC6RQTjmOUaS6ht0TyzL+uUyR2RMDhg2XhmznCvpBNTaf+WMqYL2l
         QnXxvMZ1P8RWSAdiBW6x6g2DHaqO8YXz5LiRaib8fV12zN75liTHJyeUqEIbRE8ozr+s
         /Yui/BkFq3K2v4acs3OpdQMgPwtV9TrfHFHh0g3q9wqBRZt0c2jRqzrnbViCtD7RZKkK
         tNBqVFRakA3ykvfvjA+DH1EAUFB8VrVMMJfbot2c2Z6E8JiYP9saUFNFPnBZcvm0P4ip
         Dj3w==
X-Gm-Message-State: AA+aEWYu7GfBtvOi50oBRK3K9bSD4MlFep2b5Hzhu83OrNs2Ak1oAydW
        CytLrLH70R7emxsfFYRqyOw=
X-Google-Smtp-Source: AFSGD/XUPQXCJgfL1F5lO45htEgoJA4EIdAwR+ySkwfbhIfzbbo9EMncZBhCfw2iUxLTu2nnS2+1yA==
X-Received: by 2002:a63:1c61:: with SMTP id c33mr16543205pgm.354.1545162248940;
        Tue, 18 Dec 2018 11:44:08 -0800 (PST)
Received: from [192.168.1.70] (c-24-6-192-50.hsd1.ca.comcast.net. [24.6.192.50])
        by smtp.gmail.com with ESMTPSA id v191sm39479518pgb.77.2018.12.18.11.44.07
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 18 Dec 2018 11:44:08 -0800 (PST)
Subject: Re: [PATCH v3 2/2] of: __of_detach_node() - remove node from phandle
 cache
From: Frank Rowand <frowand.list@gmail.com>
To: robh+dt@kernel.org, Michael Bringmann <mwb@linux.vnet.ibm.com>,
        linuxppc-dev@lists.ozlabs.org
Cc: Michael Ellerman <mpe@ellerman.id.au>,
        Tyrel Datwyler <tyreld@linux.vnet.ibm.com>,
        Thomas Falcon <tlfalcon@linux.vnet.ibm.com>,
        Juliet Kim <minkim@us.ibm.com>, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <1545162003-11577-1-git-send-email-frowand.list@gmail.com>
 <1545162003-11577-3-git-send-email-frowand.list@gmail.com>
Message-ID: <8236132c-ccfd-4d2a-c490-7a52ec9df0e8@gmail.com>
Date: Tue, 18 Dec 2018 11:44:07 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <1545162003-11577-3-git-send-email-frowand.list@gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/18/18 11:40 AM, frowand.list@gmail.com wrote:
> From: Frank Rowand <frank.rowand@sony.com>
> 
> Non-overlay dynamic devicetree node removal may leave the node in
> the phandle cache.  Subsequent calls to of_find_node_by_phandle()
> will incorrectly find the stale entry.  Remove the node from the
> cache.
> 
> Add paranoia checks in of_find_node_by_phandle() as a second level
> of defense (do not return cached node if detached, do not add node
> to cache if detached).
> 
> Fixes: 0b3ce78e90fc ("of: cache phandle nodes to reduce cost of of_find_node_by_phandle()")
> Reported-by: Michael Bringmann <mwb@linux.vnet.ibm.com>
> Signed-off-by: Frank Rowand <frank.rowand@sony.com>
> ---
> 
> do not "cc: stable", unless the following commits are also in stable:
> 
>   commit e54192b48da7 ("of: fix phandle cache creation for DTs with no phandles")
>   commit b9952b5218ad ("of: overlay: update phandle cache on overlay apply and remove")
>   commit 0b3ce78e90fc ("of: cache phandle nodes to reduce cost of of_find_node_by_phandle()")
> 
> 
> Changes since v2:
>   - add temporary variable np in __of_free_phandle_cache_entry() to improve
>     readability
>   - explain reason for WARN_ON() in comment
>   - add Fixes tag in patch comment

I should have carried this forward:

changes since v1:
  - add WARN_ON(1) for unexpected condition in of_find_node_by_phandle()

-Frank

> 
>  drivers/of/base.c       | 31 ++++++++++++++++++++++++++++++-
>  drivers/of/dynamic.c    |  3 +++
>  drivers/of/of_private.h |  4 ++++
>  3 files changed, 37 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/of/base.c b/drivers/of/base.c
> index 6c33d63361b8..6d20b6dcf034 100644
> --- a/drivers/of/base.c
> +++ b/drivers/of/base.c
> @@ -162,6 +162,28 @@ int of_free_phandle_cache(void)
>  late_initcall_sync(of_free_phandle_cache);
>  #endif
>  
> +/*
> + * Caller must hold devtree_lock.
> + */
> +void __of_free_phandle_cache_entry(phandle handle)
> +{
> +	phandle masked_handle;
> +	struct device_node *np;
> +
> +	if (!handle)
> +		return;
> +
> +	masked_handle = handle & phandle_cache_mask;
> +
> +	if (phandle_cache) {
> +		np = phandle_cache[masked_handle];
> +		if (np && handle == np->phandle) {
> +			of_node_put(np);
> +			phandle_cache[masked_handle] = NULL;
> +		}
> +	}
> +}
> +
>  void of_populate_phandle_cache(void)
>  {
>  	unsigned long flags;
> @@ -1209,11 +1231,18 @@ struct device_node *of_find_node_by_phandle(phandle handle)
>  		if (phandle_cache[masked_handle] &&
>  		    handle == phandle_cache[masked_handle]->phandle)
>  			np = phandle_cache[masked_handle];
> +		if (np && of_node_check_flag(np, OF_DETACHED)) {
> +			WARN_ON(1); /* did not uncache np on node removal */
> +			of_node_put(np);
> +			phandle_cache[masked_handle] = NULL;
> +			np = NULL;
> +		}
>  	}
>  
>  	if (!np) {
>  		for_each_of_allnodes(np)
> -			if (np->phandle == handle) {
> +			if (np->phandle == handle &&
> +			    !of_node_check_flag(np, OF_DETACHED)) {
>  				if (phandle_cache) {
>  					/* will put when removed from cache */
>  					of_node_get(np);
> diff --git a/drivers/of/dynamic.c b/drivers/of/dynamic.c
> index f4f8ed9b5454..ecea92f68c87 100644
> --- a/drivers/of/dynamic.c
> +++ b/drivers/of/dynamic.c
> @@ -268,6 +268,9 @@ void __of_detach_node(struct device_node *np)
>  	}
>  
>  	of_node_set_flag(np, OF_DETACHED);
> +
> +	/* race with of_find_node_by_phandle() prevented by devtree_lock */
> +	__of_free_phandle_cache_entry(np->phandle);
>  }
>  
>  /**
> diff --git a/drivers/of/of_private.h b/drivers/of/of_private.h
> index 5d1567025358..24786818e32e 100644
> --- a/drivers/of/of_private.h
> +++ b/drivers/of/of_private.h
> @@ -84,6 +84,10 @@ static inline void __of_detach_node_sysfs(struct device_node *np) {}
>  int of_resolve_phandles(struct device_node *tree);
>  #endif
>  
> +#if defined(CONFIG_OF_DYNAMIC)
> +void __of_free_phandle_cache_entry(phandle handle);
> +#endif
> +
>  #if defined(CONFIG_OF_OVERLAY)
>  void of_overlay_mutex_lock(void);
>  void of_overlay_mutex_unlock(void);
> 

