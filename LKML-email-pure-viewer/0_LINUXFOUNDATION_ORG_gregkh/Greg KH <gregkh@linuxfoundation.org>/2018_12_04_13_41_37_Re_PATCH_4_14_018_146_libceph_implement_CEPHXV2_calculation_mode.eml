Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:39:07 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D310A580443;
	Tue,  4 Dec 2018 05:41:48 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 05:41:48 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AI//HKBLvSYAnelJeadmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/3+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZUMhfVzJPDJ6/?=
 =?us-ascii?q?YYsBAOUOIftXoIvzqFsVtRuzBxKhBP/zxjJSmnP6wbc33/onHArb3AIgBdUOsH?=
 =?us-ascii?q?HModv0LqcdT++1x7TNwzvBcvhb3jj96JLWfRAuovGMXal9cc7QyUkpCgPEgVuQ?=
 =?us-ascii?q?qYv4PzOTy+sCqXSb7+tnVeKpkWInrBtxoje2y8oql4LHiIUVylXe+iV4xoY4Pc?=
 =?us-ascii?q?a4SFZ6Yd6iEZtfqzqaO5FwQsw8X2FkoDo1xaMeuZ67ZiQF1JMnxxvZZveacIaI?=
 =?us-ascii?q?+gruWPiNLTp8nn5pZbyyiwio/US9yeDwStO43VdIoyZdkdTBuGoB2h/S58SdSf?=
 =?us-ascii?q?Zw+l2t1SuT2w3R7OxPPFo6mrDBK5E7x749jpoTvlrHHi/xgEj2kqCWeVs++uSy?=
 =?us-ascii?q?6OTofK/mppmCOI9wkA3+Nb4umsOnDeQ5NAgBQXSb9Pyi2LH/+UD1WqhGg/Monq?=
 =?us-ascii?q?XDrZzXJtgXqrS4DgJXyooj7gywDzai0NQWh3kHK1dFdQqDj4joPVHOPf/5Ae68?=
 =?us-ascii?q?g1uyijdrwe7JPrn4DpXKIHnDlqnufaxm5k5Cxwo808pf64hXCr4fOvLzXFH+tN?=
 =?us-ascii?q?jCAh8+KQy0zP7rCM9h2YMGRWKPHqiZPbvWsV+J5eIgPfOAZYAIuDvmL/gl5vju?=
 =?us-ascii?q?jWI2mFMHfKmp24cXZ268Hvh8P0qZZn/siM8bEWgWpgo+UPDqiFqaXD5TfXmyXr?=
 =?us-ascii?q?486Ss8CI68DYfDW5qigLqO3CqgGp1WZ2ZGCk2DEHvydoWEXesMZzyWIsN7jjME?=
 =?us-ascii?q?Ur2hQZc71R6yrA/616ZnLu3M9y0aspLsysJ55+7UlRE08zx0CN+Q02WMT2Fyg2?=
 =?us-ascii?q?MJSCU63KF5oUxh1FiD1bJ0jOBfFdxW//lJSBs1NYbAz+xmDND/QhjOfsyJSFah?=
 =?us-ascii?q?QdWqGysxQcgzw9IVZ0Z9GtOijg3M3iawAr8VkaCLC4Iw8q7Gw3fxIMN9wW7c1K?=
 =?us-ascii?q?Y9l1kmXtdPNWq+i6587QfTAZTFk0GYl6mwc6Qc0zXA9GOCzWqIoUFZXxR8UaTD?=
 =?us-ascii?q?XXADeETWqc716V/FT7+rEb4nKBdOydaeKqtWbd3klUhJS+39ONvAeW6xm32/BR?=
 =?us-ascii?q?CTxrySaormfGEd3CbYCEgAiA0T+XeGNQ4jBiauuW7eDTpuFU7xbEPo6+VxtHS7?=
 =?us-ascii?q?TkosxQGQc0Jhz6a1+gIShfGEVvwcxKwEtzk7pzV0Blm92cnWBMSGpwd6eKVcYN?=
 =?us-ascii?q?U94EpI1G7Dtgx9OICgIL5mhlIEbwt3uEbu3Q1tCopcicgqsG8qzA1qJKKE0VNB?=
 =?us-ascii?q?cjSY3YzwOrzXMGXy4Aqja6nM2lHa0daW/KgP5e88q1XiugGpC0Uj/29m09lTz3?=
 =?us-ascii?q?uT+JHKABAOXpL2V0Y97wJ6qK3CYikh+4PU0mVhPrOwsjDc1NMmGuskxgy7cNdC?=
 =?us-ascii?q?LayLDgnyE84dB8iwM+Eqn1mpbhQZPOFd7qI0PsWmd+eY166vJupvgDWmjWFf6o?=
 =?us-ascii?q?Bnzk2M7zZ8SvLP35sdw/CYwxGLWCvmgFagssD4g4ZEZT4JE2q7yCjkApNRZ6Jo?=
 =?us-ascii?q?cYYKD2euP9O4xtFki5HxXH5Y8UapB0ka18+xZRqSc1v90BVK1UQWvXOogzG4wC?=
 =?us-ascii?q?Fzkz0zqKqQwjbOw+X7eBUbIGFLQHRtgkn2IYizidAXR0yobwkvlBu46kf23alb?=
 =?us-ascii?q?pKJjL2bNRUdEZTT5L2ZnUqGorLqNf9ZP6I80sSVQSOm9YVGaRqT9ohcAyCPjAm?=
 =?us-ascii?q?1eySs/dzGrvJX5ghN7hHicLHZ1sHrWZ8VwyQ3D69zbQP5bxiAGSzVgiTnLGli8?=
 =?us-ascii?q?OMGk/deOmJfZseC+VGWhWodIcSbxzoOAtyq75Wt0Dh25hP2zntznEQ4n0S70zd?=
 =?us-ascii?q?VqVCPIrAribYnvzai1LeVnfkxwDl/m98V6Ap1+kpc3hJwI2XkVnJKV8WAFkWfy?=
 =?us-ascii?q?N9VWwqb+bHsLRT4WzN/Z+gnl2Et/Ln2Xw4L1TGmSwsxkZ9OieGMZxjo979xWCK?=
 =?us-ascii?q?eT9LFEnjF6oluioQLRfPhyhDEdyfQ15X4eguEJvhctzyqHDrATG0lYITLjlxCS?=
 =?us-ascii?q?49+iq6VXYX6lcaKs20pmgdChELaCrxlZWHb4eZctBzV878thP1LXzH389Jvkd8?=
 =?us-ascii?q?LOYtIJuR2ZiBPAj+lTKJIsmfsGnytnOWThvXI7z+43lwBh3Za/vIKfMWVi4Lq5?=
 =?us-ascii?q?AgJENj3yf84T5jbtjaNEkseXxY+vGIhhGi4QXJvpVv+oFDMStfL6NweBCjE8q3?=
 =?us-ascii?q?GbGabBEg+b8ktps3XPE5WzPXGNOHYZ1cliRAWaJEFHmw8bRjI6npokFgywwMzh?=
 =?us-ascii?q?bVx05jQQ5l7+txtNxfhkNxj5UmfDugiobi04R4SYLBpT9gtC/VvaMdSC7uJvGC?=
 =?us-ascii?q?FV5p+hoxaIKmOFfAREF30JVlaHB1D+Pbmu+N/A/PKDBuelK/vOYLOOqfFRVvuS?=
 =?us-ascii?q?xJKv1Jdm8CiINsmVInZiCPg70FJZXX9lA8TZhykPSysPmiPNaM6buQ68+jBtoc?=
 =?us-ascii?q?C56vjrQwXv5Y2AC7ZJNdVv+ha2gbqMNuKKhSZ5LypY2Y0IxXPS1Lcf21sSgTl0?=
 =?us-ascii?q?dzaxCbQAqTLNTKXIl69XEREbaiBzNMhJ764m3QlNI8nbitzr2b5ik/41EExIVV?=
 =?us-ascii?q?jgmsGveMwLLHuxNFLBBEaXKruGISfHzN3wYaO5UbdQlvlbtwWsuTaHFE/uJi6M?=
 =?us-ascii?q?lyTyWBC1L+5NjDuXPBhfuIymdhZtCG7jTM/paxGhMd93iyE2zqMwhn/QKWEcNj?=
 =?us-ascii?q?18eVtXrrKM9SNYnul/G2tZ43p5LOmEnjyV4PXCJpkKsftkHCJ0mvle4HQ7zbtV?=
 =?us-ascii?q?8S5FSOZ0mCvUst5hvVWmnvOTxTpgVRpEsixLi56TvUV+JaXZ8YFNWHbe8xIL6G?=
 =?us-ascii?q?WQChIKqMNkC93voa9QzNfPmbn3KDdD9dLU4MQdC9LVKMKBLHouLx7pFCTIAwsC?=
 =?us-ascii?q?SD74fV3Y0m1Zgfja2meEqZ09tNC4mZYUW7heU0IdGfYTC0AjF9sHdsRZRDQhxJ?=
 =?us-ascii?q?GBgcFAxlr2+BbLScpZvrjDV/SPEfvoNTCVhKVFYB1Oxqn3e9dAfrbn0lBvPwEp?=
 =?us-ascii?q?1L/BHFDdCJUU+nVs?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAABGgwZch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUQUBAQEBCwGCaYECJ4wSX4svgg0UiH2FLYkLgXMUGAsIAYgRIjQ?=
 =?us-ascii?q?JDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKD?=
 =?us-ascii?q?goJJQMMBQ0HNRMFgxwBgWkDFQQBCqNOgWwzgnYBAQWBMAGDXA2CFAiLAoEcF4F?=
 =?us-ascii?q?AP4QjgldHA4UVgiaJM5ZoLgkNgheEX4YgcIMjCxiBW02ERIo6LI1AgQyJfYFGg?=
 =?us-ascii?q?g19CIMnCYISDBeDSoRZO4VAPzIBgQEDAQEhE4peAQE?=
X-IPAS-Result: =?us-ascii?q?A0ABAABGgwZch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUQU?=
 =?us-ascii?q?BAQEBCwGCaYECJ4wSX4svgg0UiH2FLYkLgXMUGAsIAYgRIjQJDQEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCgsJCCkjDII2JAGCYgECAwECJBMGAQE3AQUJAQEKDgoJJQMMBQ0HNRM?=
 =?us-ascii?q?FgxwBgWkDFQQBCqNOgWwzgnYBAQWBMAGDXA2CFAiLAoEcF4FAP4QjgldHA4UVg?=
 =?us-ascii?q?iaJM5ZoLgkNgheEX4YgcIMjCxiBW02ERIo6LI1AgQyJfYFGgg19CIMnCYISDBe?=
 =?us-ascii?q?DSoRZO4VAPzIBgQEDAQEhE4peAQE?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="140684719"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 05:41:46 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726496AbeLDNll (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 08:41:41 -0500
Received: from mail.kernel.org ([198.145.29.99]:45944 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726226AbeLDNll (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 08:41:41 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 38F93206B6;
        Tue,  4 Dec 2018 13:41:39 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543930899;
        bh=0eQ9hru12+7U1UMnJDjSLAOpsPOlb8YZuMEVFOb2few=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=QQXe9cNwayV+UVY2sm2WVkUlkipjET9pYHQWDIXS2ml2O+gWt/6W9xtaYOAOyDYXP
         W9KnC5GIXCerPN1gdmPPeBck2P4muedGmnHPmwOVl3ISAvF0zvDAsb/hm//1nWwT8p
         lnjSxqTXoxwj5Pk3UxYwCWi2Gu1lF01rxulwDXJ8=
Date: Tue, 4 Dec 2018 14:41:37 +0100
From: Greg KH <gregkh@linuxfoundation.org>
To: Ilya Dryomov <idryomov@gmail.com>
Cc: linux-kernel@vger.kernel.org, stable@vger.kernel.org,
        Sage Weil <sage@redhat.com>, ben.hutchings@codethink.co.uk,
        sashal@kernel.org
Subject: Re: [PATCH 4.14 018/146] libceph: implement CEPHX_V2 calculation mode
Message-ID: <20181204134137.GB4749@kroah.com>
References: <20181204103726.750894136@linuxfoundation.org>
 <20181204103727.530335739@linuxfoundation.org>
 <CAOi1vP_uNBXySo4yNOjcSBUgqDRjo2abm41UZCXazUG7ygRVcA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAOi1vP_uNBXySo4yNOjcSBUgqDRjo2abm41UZCXazUG7ygRVcA@mail.gmail.com>
User-Agent: Mutt/1.11.0 (2018-11-25)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 04, 2018 at 01:06:40PM +0100, Ilya Dryomov wrote:
> On Tue, Dec 4, 2018 at 12:01 PM Greg Kroah-Hartman
> <gregkh@linuxfoundation.org> wrote:
> >
> > 4.14-stable review patch.  If anyone has any objections, please let me know.
> >
> > ------------------
> >
> > commit cc255c76c70f7a87d97939621eae04b600d9f4a1 upstream.
> >
> > Derive the signature from the entire buffer (both AES cipher blocks)
> > instead of using just the first half of the first block, leaving out
> > data_crc entirely.
> >
> > This addresses CVE-2018-1129.
> >
> > Link: http://tracker.ceph.com/issues/24837
> > Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
> > Reviewed-by: Sage Weil <sage@redhat.com>
> > Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
> > Signed-off-by: Sasha Levin <sashal@kernel.org>
> > ---
> >  include/linux/ceph/ceph_features.h |  7 +--
> >  net/ceph/auth_x.c                  | 73 +++++++++++++++++++++++-------
> >  2 files changed, 60 insertions(+), 20 deletions(-)
> >
> > diff --git a/include/linux/ceph/ceph_features.h b/include/linux/ceph/ceph_features.h
> > index 59042d5ac520..70f42eef813b 100644
> > --- a/include/linux/ceph/ceph_features.h
> > +++ b/include/linux/ceph/ceph_features.h
> > @@ -165,9 +165,9 @@ DEFINE_CEPH_FEATURE(58, 1, FS_FILE_LAYOUT_V2) // overlap
> >  DEFINE_CEPH_FEATURE(59, 1, FS_BTIME)
> >  DEFINE_CEPH_FEATURE(59, 1, FS_CHANGE_ATTR) // overlap
> >  DEFINE_CEPH_FEATURE(59, 1, MSG_ADDR2) // overlap
> > -DEFINE_CEPH_FEATURE(60, 1, BLKIN_TRACING)  // *do not share this bit*
> > +DEFINE_CEPH_FEATURE(60, 1, OSD_RECOVERY_DELETES) // *do not share this bit*
> > +DEFINE_CEPH_FEATURE(61, 1, CEPHX_V2)             // *do not share this bit*
> >
> > -DEFINE_CEPH_FEATURE(61, 1, RESERVED2)          // unused, but slow down!
> >  DEFINE_CEPH_FEATURE(62, 1, RESERVED)           // do not use; used as a sentinal
> >  DEFINE_CEPH_FEATURE_DEPRECATED(63, 1, RESERVED_BROKEN, LUMINOUS) // client-facing
> >
> > @@ -209,7 +209,8 @@ DEFINE_CEPH_FEATURE_DEPRECATED(63, 1, RESERVED_BROKEN, LUMINOUS) // client-facin
> >          CEPH_FEATURE_SERVER_JEWEL |            \
> >          CEPH_FEATURE_MON_STATEFUL_SUB |        \
> >          CEPH_FEATURE_CRUSH_TUNABLES5 |         \
> > -        CEPH_FEATURE_NEW_OSDOPREPLY_ENCODING)
> > +        CEPH_FEATURE_NEW_OSDOPREPLY_ENCODING | \
> > +        CEPH_FEATURE_CEPHX_V2)
> >
> >  #define CEPH_FEATURES_REQUIRED_DEFAULT   \
> >         (CEPH_FEATURE_NOSRCADDR |        \
> > diff --git a/net/ceph/auth_x.c b/net/ceph/auth_x.c
> > index ce28bb07d8fd..10eb759bbcb4 100644
> > --- a/net/ceph/auth_x.c
> > +++ b/net/ceph/auth_x.c
> > @@ -9,6 +9,7 @@
> >
> >  #include <linux/ceph/decode.h>
> >  #include <linux/ceph/auth.h>
> > +#include <linux/ceph/ceph_features.h>
> >  #include <linux/ceph/libceph.h>
> >  #include <linux/ceph/messenger.h>
> >
> > @@ -803,26 +804,64 @@ static int calc_signature(struct ceph_x_authorizer *au, struct ceph_msg *msg,
> >                           __le64 *psig)
> >  {
> >         void *enc_buf = au->enc_buf;
> > -       struct {
> > -               __le32 len;
> > -               __le32 header_crc;
> > -               __le32 front_crc;
> > -               __le32 middle_crc;
> > -               __le32 data_crc;
> > -       } __packed *sigblock = enc_buf + ceph_x_encrypt_offset();
> >         int ret;
> >
> > -       sigblock->len = cpu_to_le32(4*sizeof(u32));
> > -       sigblock->header_crc = msg->hdr.crc;
> > -       sigblock->front_crc = msg->footer.front_crc;
> > -       sigblock->middle_crc = msg->footer.middle_crc;
> > -       sigblock->data_crc =  msg->footer.data_crc;
> > -       ret = ceph_x_encrypt(&au->session_key, enc_buf, CEPHX_AU_ENC_BUF_LEN,
> > -                            sizeof(*sigblock));
> > -       if (ret < 0)
> > -               return ret;
> > +       if (!CEPH_HAVE_FEATURE(msg->con->peer_features, CEPHX_V2)) {
> > +               struct {
> > +                       __le32 len;
> > +                       __le32 header_crc;
> > +                       __le32 front_crc;
> > +                       __le32 middle_crc;
> > +                       __le32 data_crc;
> > +               } __packed *sigblock = enc_buf + ceph_x_encrypt_offset();
> > +
> > +               sigblock->len = cpu_to_le32(4*sizeof(u32));
> > +               sigblock->header_crc = msg->hdr.crc;
> > +               sigblock->front_crc = msg->footer.front_crc;
> > +               sigblock->middle_crc = msg->footer.middle_crc;
> > +               sigblock->data_crc =  msg->footer.data_crc;
> > +
> > +               ret = ceph_x_encrypt(&au->session_key, enc_buf,
> > +                                    CEPHX_AU_ENC_BUF_LEN, sizeof(*sigblock));
> > +               if (ret < 0)
> > +                       return ret;
> > +
> > +               *psig = *(__le64 *)(enc_buf + sizeof(u32));
> > +       } else {
> > +               struct {
> > +                       __le32 header_crc;
> > +                       __le32 front_crc;
> > +                       __le32 front_len;
> > +                       __le32 middle_crc;
> > +                       __le32 middle_len;
> > +                       __le32 data_crc;
> > +                       __le32 data_len;
> > +                       __le32 seq_lower_word;
> > +               } __packed *sigblock = enc_buf;
> > +               struct {
> > +                       __le64 a, b, c, d;
> > +               } __packed *penc = enc_buf;
> > +               int ciphertext_len;
> > +
> > +               sigblock->header_crc = msg->hdr.crc;
> > +               sigblock->front_crc = msg->footer.front_crc;
> > +               sigblock->front_len = msg->hdr.front_len;
> > +               sigblock->middle_crc = msg->footer.middle_crc;
> > +               sigblock->middle_len = msg->hdr.middle_len;
> > +               sigblock->data_crc =  msg->footer.data_crc;
> > +               sigblock->data_len = msg->hdr.data_len;
> > +               sigblock->seq_lower_word = *(__le32 *)&msg->hdr.seq;
> > +
> > +               /* no leading len, no ceph_x_encrypt_header */
> > +               ret = ceph_crypt(&au->session_key, true, enc_buf,
> > +                                CEPHX_AU_ENC_BUF_LEN, sizeof(*sigblock),
> > +                                &ciphertext_len);
> > +               if (ret)
> > +                       return ret;
> > +
> > +               *psig = penc->a ^ penc->b ^ penc->c ^ penc->d;
> > +       }
> >
> > -       *psig = *(__le64 *)(enc_buf + sizeof(u32));
> >         return 0;
> >  }
> 
> Hi Greg,
> 
> I thought this series (patches 13 - 18) was dropped from the 4.14 queue.
> If it wasn't, you also need to pick up the following:
> 
> f1d10e046379 libceph: weaken sizeof check in ceph_x_verify_authorizer_reply()
> 130f52f2b203 libceph: check authorizer reply/challenge length before reading
> 
> See our discussion with Sasha:
> 
>   https://www.spinics.net/lists/stable/msg272462.html

Ah, missed that, sorry.  I've queued these patches up now, thanks!

greg k-h
