Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 20:37:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 55EA7580375;
	Tue,  4 Dec 2018 03:23:41 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 03:23:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Aw380nxFrUPjO+f4/I0BXTp1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8S9bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHJ6y?=
 =?us-ascii?q?YYUMAeQGP+lYoYfyqFQSohWxHgmsHOHixyRUhnL106A2z/4sHBvE0QEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKUO611rfHzTreZP1Twzf975LHchA4rf+OR71wa9bRyUw1GAPDk16d?=
 =?us-ascii?q?roPlPymL2eQCsGib7/FtVeaui24htgFwrTavxsAxionPm40a0EzE9SR+wIYzP9?=
 =?us-ascii?q?G4T1R7YdG9HZZWqiqUNJN2T9s8T210vCs20KAKtJClcCQQ1ZgqxALTZ+aGfoWK?=
 =?us-ascii?q?+h7uV+icLS17iX9kYr6yhBK//VK9xuHgVMS51ktBoDBfndnWrH8N0gTe6siZRf?=
 =?us-ascii?q?t5+UeswSiP1w/N5eFeO0w0lrTUK4QnwrEukpofq0PDHjX5mEnuja+WcFsr+vSw?=
 =?us-ascii?q?5uj5frnrooWQO5J6hw3gKKgih8+yDfgiPgUPXWWX4eG826fi/U39TrVKlPo2kq?=
 =?us-ascii?q?zBvZDeJMQboLO5AgBM3oYg9Rm/FTGm38ocnXUeK1JEdhSHgJbzO1zVPvD4Aumw?=
 =?us-ascii?q?g062nDdo2f/GJLvhDYvJLnTZl7fhZ7l951ZGyAUv1dBf+45UCrYZLfL3W0/xt8?=
 =?us-ascii?q?LXAgU2Mgyp2OvnDNR91oUDWWOAGKOZMaXSsUOW6eIrOeWDeIgVuDPlIfg/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx3ZsYcnG4Huh8LEWee3bsgsoBHn0MvgoxV+HqjFyCUThOZ3e9Ra?=
 =?us-ascii?q?485zc7CJ64AofHXIyinLuB3CKjFJ1Mem9GEkyMEWvvd4icWfcMbzydLtVikjwD?=
 =?us-ascii?q?U7ihTYgh2AqqtA/7zbpnM+XV9jcZtZLlyNh6+enTmQsu+jxzCsSXy3uNQH1snm?=
 =?us-ascii?q?MUWz8227hyrlZmyleD1qh4gOZUFcZJ6PNLSQo6MZ/cz+pnC9H9QA7Bf9GJSEq4?=
 =?us-ascii?q?TdWiGz0+UtUxw9oWaUZnB9qilgzD3zatA7INlLyEHpo0/rjY33jwPcl9zXnG2b?=
 =?us-ascii?q?Ilj1knRMtPKGKnirR+9wjVG47GjUGZm7y2eqQb2S7H7H2DwnaWvEFETA5wVr3I?=
 =?us-ascii?q?Um0FaUvIs9v1/EPCQKWoCbQ8LARBz8mOKq9Jat3siVVLX/PjONXYY2KslGa8Hx?=
 =?us-ascii?q?eIxrWQbIX0f2URxjnSCE8BkwoL53aJKRA+Bju9o2LZFDFhCEjgY13y/uVkqHO0?=
 =?us-ascii?q?VEk0zxqUYE1nzLe1/h8VhfqBS/IcxL4EuSEhqylqE1a5xd7ZF92Apw95dqVGfd?=
 =?us-ascii?q?w9+EtH1X7etwFlIpygLqVihlkCcwR3v0LizQl3Bp9HkcgwqHMqzQxyKa2D3VNF?=
 =?us-ascii?q?djOY243wO7LNJmnz+hCvd7DZ2lXE3NmK/acP7ewyq0//swGxCkoi73Jn3sFP3H?=
 =?us-ascii?q?uY+JrLAxQdUJLrXkks6hh1uqvVYi8+54PTy31hKq20sj7E29I0C+op0Begf9FD?=
 =?us-ascii?q?MKyaEA/+CdEVB8+rKOYygVimcgoEPPxO9K4zJ86nd+aG1LS3M+p6nTOmjX5I4I?=
 =?us-ascii?q?Zy0k+X8yp8S+jI34sKwv2C3wuHUSv8g0mlsszthY9EYjQSFHKlySf4HI5RerFy?=
 =?us-ascii?q?fYETBGe0Is242s9xh4TwVH5f7lKjAU0J2NWoeRaLc1PyxwlQ2lkJrny9niu4yS?=
 =?us-ascii?q?d5kzUorqqZwSzPzP7udBsBOm5XWmZiiU3gLpSzj9AfREKodRQmlAO55UbmwKhW?=
 =?us-ascii?q?vKR+L2jJTUZIZST2NHxiUq2ru7qGYs5P7o4osCpNXOS9Z1CaVqDyox8A3yz/GG?=
 =?us-ascii?q?tewSgxdyu2tZXhgxx6lGWdIW5xrHXDY8FwxhTf5NvGSf5KxDUGRyp4iTjRBlei?=
 =?us-ascii?q?Odmk5tGUl5bFsuCjWGOtTJxTcS/3zYyesCu3/3FlARq6n/qrgN3oDRA60TPn19?=
 =?us-ascii?q?ltTSjJrAzzYo7x26S4MOJneFJlBFv968p8B4F/nZE8hJAW2XgGmJqV+WALnnv0?=
 =?us-ascii?q?MdVewaj+dmYCRSYXw97J5wjowE5jIWiIx47jVnWd39FuZ9+1Ym4N3iI97sZKCL?=
 =?us-ascii?q?qb7bBenCt1pEa4ohzVYfRngjgdzv4u4mYAg+4VoAot0jmdArcKEEldPCzslA6H?=
 =?us-ascii?q?48qwrapJf2avbaa/1FBlkt+/FrGCrRpRWHL4epckAC9x4d9zMFPK0H3v9I7kfM?=
 =?us-ascii?q?PcYs4Uth2Rix3AlfRaKIotlvoWgipqIX79vXogy+IhjB1hx5e6vJWcK2V2/aK0?=
 =?us-ascii?q?GRpYNjzzZ8MO9TDhl6densCK34+xGpVtACkEXJztTfiwCjIdqeznNxqSED07sn?=
 =?us-ascii?q?qUAqDQHQib6Ed7tX7PF42rOmqTJHkYy9ViWRacKFZegAASQDU1gJo5Ghq2y8zm?=
 =?us-ascii?q?dUdz/ioR6ULgqhtQ1uJoMAHyUmXFqwetdDg0U4KTLAZM4gFB+kfVMtGe7uRpEC?=
 =?us-ascii?q?FD5ZChqA2NKmqGZwVHF20JW0qEB0z9Mbmq/9XP7++YBu+mJfvUfbqOsfBeV+uP?=
 =?us-ascii?q?xZ+30opm+CuMNtySPnZ4Cf03wFFDXXd/G8TWgDgPTy0XlyTQb8+Uvhu8+yt3rt?=
 =?us-ascii?q?yh//TvQg7g+YyPC75KO9V15x+2mbuDN/KXhCthKTZXyJIMxXzLyLgexlISiDtu?=
 =?us-ascii?q?dz6iEbsery7NUbnQl7RTDx4abSNzKcRJ47g93glLJc7UlNf12qRkgf4yDldPTU?=
 =?us-ascii?q?bhld2xZcwWP2G9M0vKC1yWNLudPz3E3cH2bbm4Sb1Rl+hUsxywuTCGE07sJDiD?=
 =?us-ascii?q?lj/pVwyxPuFIli2UIBteuISleBZ3FWfjVM7magG8MNJvkT02wLg0imnWOmIGLT?=
 =?us-ascii?q?d8c11CrruL4CNcg/V/HXFB73V/IemFnSaZ8/fXKpIMvfR3BSR0kvpQ4G4mxLtN?=
 =?us-ascii?q?8CFEWPt1lTPSr9F0pVGml+iPyjx/XxtPqjZEnoSLvUp5NKXd95lAX2vE/R0X4W?=
 =?us-ascii?q?WRDRQKu8VqCtn1t69MzdjPkfG7FDAX99PS4NtZBMXOLs+DGGQuPACvGzPOCgYB?=
 =?us-ascii?q?CzmxOjLxnUtYxd6I+3LdjYI9o5ipuJMUVrpSUhRhGekXBUdlNNgDJopnUDQ5l7?=
 =?us-ascii?q?KSkM8P4zy5thaHF5YShYzOSv/HWaanEz2el7QRIkJQmb4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAB5YgZch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYNqJ4N5iBlfiy+CIZc1gXMUGBMBiBEiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEKCwkIKSMMQgEQAYFiJAGCYgMDAQIgBAsBDQEBNwEFCQEBJAIFIQICAwxIG?=
 =?us-ascii?q?QWDHIICBAGjH3B8DCeCdgEBBYcvCIELhmSDE4EcF4F/gRGCZIgzgleJM4FvlSc?=
 =?us-ascii?q?JkTYjgVuFEYo6igiObYFGgg0zGggoCIMnghsMF4hehUA/MoECAwEBIROFPIUiA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0ARAAB5YgZch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYN?=
 =?us-ascii?q?qJ4N5iBlfiy+CIZc1gXMUGBMBiBEiNAkNAQMBAQEBAQECARMBAQEKCwkIKSMMQ?=
 =?us-ascii?q?gEQAYFiJAGCYgMDAQIgBAsBDQEBNwEFCQEBJAIFIQICAwxIGQWDHIICBAGjH3B?=
 =?us-ascii?q?8DCeCdgEBBYcvCIELhmSDE4EcF4F/gRGCZIgzgleJM4FvlScJkTYjgVuFEYo6i?=
 =?us-ascii?q?giObYFGgg0zGggoCIMnghsMF4hehUA/MoECAwEBIROFPIUiAQE?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="55432893"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 03:23:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727668AbeLDLXW (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 06:23:22 -0500
Received: from mail.kernel.org ([198.145.29.99]:47448 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726450AbeLDLBr (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 06:01:47 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 3FD422146D;
        Tue,  4 Dec 2018 11:01:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543921306;
        bh=yYQjijM7Ej61OxHyeUbINRz8g2bmcLkIzyUSSjNd+RA=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=Enf95dN32nxLrhalFqGYWJu44ONYfO2pWyxDJj9hoowL5fgRkitLUdTU+ZRdfJRfy
         ENh7hF9lazTL8IiTFwzJFHviFRUBEbDEgSBEayeHX/RkmhrvtdO+Fg4T25Yp4SZen2
         owPqFbobyvuJgcsmFfa0GdpVTmUTPVP6lMjVyFRM=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Ilya Lesokhin <ilyal@mellanox.com>,
        "David S. Miller" <davem@davemloft.net>,
        Ben Hutchings <ben.hutchings@codethink.co.uk>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 4.14 020/146] tls: Add function to update the TLS socket configuration
Date: Tue,  4 Dec 2018 11:48:26 +0100
Message-Id: <20181204103727.605356968@linuxfoundation.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181204103726.750894136@linuxfoundation.org>
References: <20181204103726.750894136@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
X-Patchwork-Hint: ignore
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

commit 6d88207fcfddc002afe3e2e4a455e5201089d5d9 upstream.

The tx configuration is now stored in ctx->tx_conf.
And sk->sk_prot is updated trough a function
This will simplify things when we add rx
and support for different possible
tx and rx cross configurations.

Signed-off-by: Ilya Lesokhin <ilyal@mellanox.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 include/net/tls.h  |  2 ++
 net/tls/tls_main.c | 46 ++++++++++++++++++++++++++++++++--------------
 2 files changed, 34 insertions(+), 14 deletions(-)

diff --git a/include/net/tls.h b/include/net/tls.h
index 86ed3dd80fe7..0c3ab2af74d3 100644
--- a/include/net/tls.h
+++ b/include/net/tls.h
@@ -89,6 +89,8 @@ struct tls_context {
 
 	void *priv_ctx;
 
+	u8 tx_conf:2;
+
 	u16 prepend_size;
 	u16 tag_size;
 	u16 overhead_size;
diff --git a/net/tls/tls_main.c b/net/tls/tls_main.c
index 4f2971f528db..191a8adee3ea 100644
--- a/net/tls/tls_main.c
+++ b/net/tls/tls_main.c
@@ -46,8 +46,18 @@ MODULE_DESCRIPTION("Transport Layer Security Support");
 MODULE_LICENSE("Dual BSD/GPL");
 MODULE_ALIAS_TCP_ULP("tls");
 
-static struct proto tls_base_prot;
-static struct proto tls_sw_prot;
+enum {
+	TLS_BASE_TX,
+	TLS_SW_TX,
+	TLS_NUM_CONFIG,
+};
+
+static struct proto tls_prots[TLS_NUM_CONFIG];
+
+static inline void update_sk_prot(struct sock *sk, struct tls_context *ctx)
+{
+	sk->sk_prot = &tls_prots[ctx->tx_conf];
+}
 
 int wait_on_pending_writer(struct sock *sk, long *timeo)
 {
@@ -364,8 +374,8 @@ static int do_tls_setsockopt_tx(struct sock *sk, char __user *optval,
 {
 	struct tls_crypto_info *crypto_info, tmp_crypto_info;
 	struct tls_context *ctx = tls_get_ctx(sk);
-	struct proto *prot = NULL;
 	int rc = 0;
+	int tx_conf;
 
 	if (!optval || (optlen < sizeof(*crypto_info))) {
 		rc = -EINVAL;
@@ -422,11 +432,12 @@ static int do_tls_setsockopt_tx(struct sock *sk, char __user *optval,
 
 	/* currently SW is default, we will have ethtool in future */
 	rc = tls_set_sw_offload(sk, ctx);
-	prot = &tls_sw_prot;
+	tx_conf = TLS_SW_TX;
 	if (rc)
 		goto err_crypto_info;
 
-	sk->sk_prot = prot;
+	ctx->tx_conf = tx_conf;
+	update_sk_prot(sk, ctx);
 	goto out;
 
 err_crypto_info:
@@ -488,7 +499,9 @@ static int tls_init(struct sock *sk)
 	icsk->icsk_ulp_data = ctx;
 	ctx->setsockopt = sk->sk_prot->setsockopt;
 	ctx->getsockopt = sk->sk_prot->getsockopt;
-	sk->sk_prot = &tls_base_prot;
+
+	ctx->tx_conf = TLS_BASE_TX;
+	update_sk_prot(sk, ctx);
 out:
 	return rc;
 }
@@ -499,16 +512,21 @@ static struct tcp_ulp_ops tcp_tls_ulp_ops __read_mostly = {
 	.init			= tls_init,
 };
 
+static void build_protos(struct proto *prot, struct proto *base)
+{
+	prot[TLS_BASE_TX] = *base;
+	prot[TLS_BASE_TX].setsockopt = tls_setsockopt;
+	prot[TLS_BASE_TX].getsockopt = tls_getsockopt;
+
+	prot[TLS_SW_TX] = prot[TLS_BASE_TX];
+	prot[TLS_SW_TX].close		= tls_sk_proto_close;
+	prot[TLS_SW_TX].sendmsg		= tls_sw_sendmsg;
+	prot[TLS_SW_TX].sendpage	= tls_sw_sendpage;
+}
+
 static int __init tls_register(void)
 {
-	tls_base_prot			= tcp_prot;
-	tls_base_prot.setsockopt	= tls_setsockopt;
-	tls_base_prot.getsockopt	= tls_getsockopt;
-
-	tls_sw_prot			= tls_base_prot;
-	tls_sw_prot.sendmsg		= tls_sw_sendmsg;
-	tls_sw_prot.sendpage            = tls_sw_sendpage;
-	tls_sw_prot.close               = tls_sk_proto_close;
+	build_protos(tls_prots, &tcp_prot);
 
 	tcp_register_ulp(&tcp_tls_ulp_ops);
 
-- 
2.17.1



