Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 30 Nov 2018 08:46:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2CFFA580213;
	Thu, 29 Nov 2018 07:08:07 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Nov 2018 07:08:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5+vbsBF5OtZfJjTQTy07l51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osSybnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7Ses4URXdaXsZJSSNOHp+8?=
 =?us-ascii?q?YYUID+oEJ+lYro/9rEYKoRaxAQSgAeXiwSJKiHDrx603y+QvHx/b0gIuHNwAt3?=
 =?us-ascii?q?bbrNv7O6gdTe+7w7LIzS3BYv5NxTfw64bFfgw7rPyWX799d9fax0k1FwPCi1Wd?=
 =?us-ascii?q?sY3rPymL2eQCrmOV6vBgVeW1hG4nsg1/oCKgxt0wionMnI0VzE3P+CJ2wIYvO9?=
 =?us-ascii?q?K4R017Yd6/HZtUtiGaMZZ2Q8wsQ2FvpSY6zKAJtoSnfCgLz5QnwQTTa/udc4iH?=
 =?us-ascii?q?+x/uUvuaLzl/hHJgYr2/hhCy/FCjyuLiTMm01khFri5fntnLrHAN2ATf5dKfSv?=
 =?us-ascii?q?tl5UehwTGP1xzJ5u5YJkA0kKzWIIMizL4ojpcfr1jPEyvslEnrgqKaaF8o9vWr?=
 =?us-ascii?q?5uj7eLnrp52RO5d3hwzwKKgjmc2yDf47PwUKRWSX5Piw2b/l8EbkWrtFlOc2nb?=
 =?us-ascii?q?PcsJ3CJcQUuKq5AwhN34Y95BawES2m3M4bnXYZNlJFfgyIj4zzN1HJOvD4Au+z?=
 =?us-ascii?q?g1WqkDh12/DLJqPtDonJI3TZjbvsc6hx51RBxAcw0dxT/ZNZB7MZLPL2QEDxtd?=
 =?us-ascii?q?jYDhEjMwyzxubqENF91oIYWWKSDa6VKaDSvkGS5uIpPeaMYJYZuDHzKvgj+fHu?=
 =?us-ascii?q?l2Q0mUESfaa3x5sbcnO4Eep8I0Wff3Xshs0NEWAQvgoxVODqkkGNUSZPZ3auWK?=
 =?us-ascii?q?Ix/jU7CIOlDYjdXIysj6GB0Ty/Hp1XYGBGF1+NHW3pd4WCR/cDdiaSLtV9nTwD?=
 =?us-ascii?q?ULirU5Uh2g22tA/m17pnKfLZ+i0CupLiyNh6/erTmQsy9TxpFcud1W6NQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwcwLYTcwPBiC9DuRgLBec+ESFSh?=
 =?us-ascii?q?Qtq4Gz0xTdUxw9kIY0Z6ANiiihHD3yy3A74ajbCLBZo08r7C0Hj1Pcpy13HG1K?=
 =?us-ascii?q?w5hVk8XsRPLXGmhrJ49wXLHYHJiEWZl6GpdagGxi7C7mWDwHGKvEFZVg5wTKrE?=
 =?us-ascii?q?UWoeZkvQsdT2+EfCQ6WyBrQgNwtL0dSCJbdSat31kVVGQ+/uONfEbGK3gWuwAR?=
 =?us-ascii?q?eIyamKbIrlYGgd2CTdCE4ZkwEc53qGNA4+Bju/rGLaFjBhCVXvY0b0++lktHy7?=
 =?us-ascii?q?VlM0zx2Nb0B5yrW64AAViuKGR/MTxL0EvjwhpCtyHFq629LWCN+Apw56caVYYN?=
 =?us-ascii?q?M95kpH1G3Duwx8OJygM75thloEfwtruEPu0g19Cp9cnsgysHMq0A1yJLqF31xb?=
 =?us-ascii?q?aTOXw4r8Or3NJWn05xCgdajW10ra0NaX/KcP9fs5p0/ivAGvCkot7XFn38NJ3H?=
 =?us-ascii?q?ub45XAFBASXo7pUkYr6xh6oKnXYjU854PR0n1sLam0sz/Y19I1HuclzQygf9Ne?=
 =?us-ascii?q?MKOCGw//CMkaB8moKOw3lFmldBMEPOZO9KEqO8OqbeeJ2KmuPOx4hjKpkXxH4J?=
 =?us-ascii?q?xh0kKL7ydzUOrI0IgKwv6G3gqLTSzzjEq8vc/tn4BEZjYSHnSkxCjgBY5RYLBy?=
 =?us-ascii?q?fIkRBWevJc232stxh5r3V3FE816jAksM2NW1dhqKc1z9wQpQ2FwXoHy6gye30y?=
 =?us-ascii?q?Z4kjAprqWF2izOzP/vdB4GOm5NWWljgk3gIYmyj9AGQkeoaxIlmwei5Ub/36Jb?=
 =?us-ascii?q?vrhwL3HPQUdUeCj7N3tiUqqsubWYec5A9ZQovT9RUOuie1CaS6fxrAcA3CPnAm?=
 =?us-ascii?q?RR2io7dzasupjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+G+VmKtTJ1SfTPwzYOdsiu2/mlqARy5n/CuldzrCwk60Snn19?=
 =?us-ascii?q?Z0USXEtgrzYo7u166iK+JoYlFoBEPg68p9Aox+kJE/hIsT2XgZgZWZ52EHnn3w?=
 =?us-ascii?q?MdVY2KL+amQCRTgQzt7R4Qjl3lBjL32Ty4L4UHWd3tVuZ92gbmwK3SI96thACL?=
 =?us-ascii?q?2I47xcgSt1vl24oBrRYPdnmTcR0/ku6H8cg+wSvAotzyOdAq0dHEVCPCzskQiI?=
 =?us-ascii?q?4M66rKlNeGmvdr2w3lJknd+9FLGCvh1cWHHhd5chByBw799zMFLR0HLp7IHkd8?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GhtYNjz2Z8wJ4D3sg7hRnt2K34+xBJVuASsEXIHnTf+zFDIStPLnNxuBETEmq3?=
 =?us-ascii?q?ebH6bfEhGb6Et8s33PFJWrPWmNJHYF1dViWAWdJEtHjQAIWzU6m4Q1FwGwy8zn?=
 =?us-ascii?q?bUd5/SsR5l/jpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SAaAtSCmEJXlGEC0rnPrmz/tTA9+mYBuyjL/rBe7mOqOpeV+uW?=
 =?us-ascii?q?ypKryIdp4zGMNsCXNHl4E/I7wlZDXWx+G8nBmTUAUSkXmDzWb8KBuBew4C53rt?=
 =?us-ascii?q?288PT2XgLg/5CPBqBWMdVu/RC2nKiCO/SRhCZ/NTZXyJcMyWXUx7gY2V4Ykztu?=
 =?us-ascii?q?eCW1EbQcqS7NS7rdm69QDx4GciNzKdFH76Qm0glWPs7bjNz126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9uTaFHE/iPTSD?=
 =?us-ascii?q?lDjpWwqsMeFWiyGbMwJRuJugchZ2EmXjSNPmahumMN54lzE2wLs0hm/UOm4YKz?=
 =?us-ascii?q?Rzb0RNrriI5yNCnvp/A3BB7mZiLeScgSmZ8vLXKowIvvprGCh0k+Na7W8+y7tU?=
 =?us-ascii?q?6iFEWfN0lDHTrt5ov1GpjO2PxiB7XxpJrzZBnJiLsll6OaXF6plAXm7J/A4M7W?=
 =?us-ascii?q?WVERgFu8FpBcHvu69OzNjCj6bzKDZE89LJ8soQHcnUKMSbMHU/NRrlAiLbDAwA?=
 =?us-ascii?q?TTSzL2HQm1RdkO2O9n2StpU7qoLjmJwLSr9aUlw6DvIbCkR/E9wEL5d6RTckkb?=
 =?us-ascii?q?+djM4V6nuythjRRMNGvp/ZUvKeG+ngKDGcjeoMWxxdxbL+MJRWNYDh3UFmQkd1?=
 =?us-ascii?q?kZ6MGEfKW91J5Cp7YVwaukJIpVdkQ2J7+FjiYwPowHYJCfu9mFZihRFzbuct3D?=
 =?us-ascii?q?Pt5UonKF3Xoic5jEg2n5Pimz/HI225F7u5QYwDU3m8jEM2KJ6uBlssYA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAAAO/f9bh0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieDeYgYX4spgg0UiHyFLIkIFIFdFhgNBgGHdCI0CQ0BAwE?=
 =?us-ascii?q?BAQEBAQIBEwEBAQgNCQgpIwyCNiSCYwMDAQIgBAsBDQEBNwEFCQEBHwUCBSECA?=
 =?us-ascii?q?gMMEiURGQWDHAGBaQMVBAEKpQxwfAwngnYBAQWBMAGDVg2CFAiBC4Zggw+BHBe?=
 =?us-ascii?q?Bf4Z6RwQYgRQBEgFsgjeCV4ktljIYLgmGfocIgyEjgVpNhEOKMiyKPIJwgQuJa?=
 =?us-ascii?q?4FGgRxxMxoIKAiDJwkKgggJGoNKhRSFQD8yAQEIeAMBASETikiCPgEB?=
X-IPAS-Result: =?us-ascii?q?A0AQAAAO/f9bh0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieDeYgYX4spgg0UiHyFLIkIFIFdFhgNBgGHdCI0CQ0BAwEBAQEBAQIBEwEBA?=
 =?us-ascii?q?QgNCQgpIwyCNiSCYwMDAQIgBAsBDQEBNwEFCQEBHwUCBSECAgMMEiURGQWDHAG?=
 =?us-ascii?q?BaQMVBAEKpQxwfAwngnYBAQWBMAGDVg2CFAiBC4Zggw+BHBeBf4Z6RwQYgRQBE?=
 =?us-ascii?q?gFsgjeCV4ktljIYLgmGfocIgyEjgVpNhEOKMiyKPIJwgQuJa4FGgRxxMxoIKAi?=
 =?us-ascii?q?DJwkKgggJGoNKhRSFQD8yAQEIeAMBASETikiCPgEB?=
X-IronPort-AV: E=Sophos;i="5.56,295,1539673200"; 
   d="scan'208";a="42828911"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 29 Nov 2018 07:08:02 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729175AbeK3BT6 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 29 Nov 2018 20:19:58 -0500
Received: from mail.kernel.org ([198.145.29.99]:40680 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728198AbeK3BT4 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 29 Nov 2018 20:19:56 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2915521019;
        Thu, 29 Nov 2018 14:14:26 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543500866;
        bh=JJslii7tyNDQU4GMj5TtH7jMVIHsLFvplym59Dc5fPU=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=E8b7p9lFIP8rmeCtPBTpQgLohsSvuZAY58U+dCqu9KP4pa/Eh6hMju9UPWDJfGQVe
         DIxCEAcTc63ltXgFHRSUwilWdXmYhvYDBO5REqGaJ4s1qIy40gSRZnvxv4tztlEGgy
         2oMAOcr5QzqLA7ZsC3CyhnlUpyQnGjYjGZz3MzLI=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org,
        Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>,
        syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Tigran Aivazian <aivazian.tigran@gmail.com>,
        Matthew Wilcox <willy@infradead.org>,
        Linus Torvalds <torvalds@linux-foundation.org>
Subject: [PATCH 3.18 03/83] bfs: add sanity check at bfs_fill_super()
Date: Thu, 29 Nov 2018 15:11:21 +0100
Message-Id: <20181129140138.222548542@linuxfoundation.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181129140138.002176596@linuxfoundation.org>
References: <20181129140138.002176596@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

3.18-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>

commit 9f2df09a33aa2c76ce6385d382693f98d7f2f07e upstream.

syzbot is reporting too large memory allocation at bfs_fill_super() [1].
Since file system image is corrupted such that bfs_sb->s_start == 0,
bfs_fill_super() is trying to allocate 8MB of continuous memory. Fix
this by adding a sanity check on bfs_sb->s_start, __GFP_NOWARN and
printf().

[1] https://syzkaller.appspot.com/bug?id=16a87c236b951351374a84c8a32f40edbc034e96

Link: http://lkml.kernel.org/r/1525862104-3407-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Reported-by: syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>
Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
Cc: Tigran Aivazian <aivazian.tigran@gmail.com>
Cc: Matthew Wilcox <willy@infradead.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

---
 fs/bfs/inode.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- a/fs/bfs/inode.c
+++ b/fs/bfs/inode.c
@@ -349,7 +349,8 @@ static int bfs_fill_super(struct super_b
 
 	s->s_magic = BFS_MAGIC;
 
-	if (le32_to_cpu(bfs_sb->s_start) > le32_to_cpu(bfs_sb->s_end)) {
+	if (le32_to_cpu(bfs_sb->s_start) > le32_to_cpu(bfs_sb->s_end) ||
+	    le32_to_cpu(bfs_sb->s_start) < BFS_BSIZE) {
 		printf("Superblock is corrupted\n");
 		goto out1;
 	}
@@ -358,9 +359,11 @@ static int bfs_fill_super(struct super_b
 					sizeof(struct bfs_inode)
 					+ BFS_ROOT_INO - 1;
 	imap_len = (info->si_lasti / 8) + 1;
-	info->si_imap = kzalloc(imap_len, GFP_KERNEL);
-	if (!info->si_imap)
+	info->si_imap = kzalloc(imap_len, GFP_KERNEL | __GFP_NOWARN);
+	if (!info->si_imap) {
+		printf("Cannot allocate %u bytes\n", imap_len);
 		goto out1;
+	}
 	for (i = 0; i < BFS_ROOT_INO; i++)
 		set_bit(i, info->si_imap);
 


