Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 32D12580380;
	Mon, 10 Dec 2018 09:19:40 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 09:19:39 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAUNwGxx6PYRBVTvXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4SLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOSM3/m/UiMNwgrlboAqjqhFk34LYfJuYOOZicq/BYd8XQ3dKUMZLVyxGB4Ox?=
 =?us-ascii?q?d4QAD+sfPelGrIn2uloArRy+BAa2AOPk1zhFhmH53a090+UuCwXG0Rc6H90QrX?=
 =?us-ascii?q?vUrM/6NLsIXe+py6nIyCzOYvVL0jn+8IjFag4tre2IUL5qbMbcx1cjGxnYgliT?=
 =?us-ascii?q?tYDpJTKY2+YVv2SF8+ZtUfijh3Mppg1vuDSj28Qhh4fTio4LyV3J8zhyzpwvKt?=
 =?us-ascii?q?2iUkF7ZMapEJtOuCGeMIt7Wt0iQ252tyYg0LEGuoC0fDIMyJs5wx7TcfuHc5KH?=
 =?us-ascii?q?4h77VeaRJyl3hG59db6hmxq/9VKsxvDyW8WqylpGsylInsXWun0M1RHf8s2HRe?=
 =?us-ascii?q?F8/kel1zaPzQfT6uRcLEAwlKrbLYMhw7EpmpoQr0vDBCn2l1vyjKOPcUUl9O6o?=
 =?us-ascii?q?5Pr9Yrj9uJ+cOJF7ihvkPqQthMO/G+I4PRYKX2SB/uS8zrLj8VXjQLpWlv02jr?=
 =?us-ascii?q?XZsJfCKMQfp665ABFa3pws6haiFDqm1NUYnX8aLFNKYh6Hjo7pO03QL/D8F/uw?=
 =?us-ascii?q?n1OskDJzzfDcIrLhGonNLmTEkLr5fbZy8U9cyBYpwtBY/Z5UCqwBL+j1Wk/+r9?=
 =?us-ascii?q?HYCh45Mwqpw+foEtl914UeWX6RDa+dKq/drViI5uc3KemWeIAVoCr9K+Qi5/P2?=
 =?us-ascii?q?j385nkEScbOq3ZsQbnC4GPNmLl6dYXrthNcBDGgLshA/TOzslF2NTzpTa2yuUK?=
 =?us-ascii?q?I74zExEJimApvbRoCxnLyB2z+2EYdNZmBGDVCMEm3kd5+eVPcOcy+SJs5hkjoZ?=
 =?us-ascii?q?VbmuUYMh1BeutBPkxLpjNObb5ioYtZf73thv++LTjQ0y9SBzD8mF0GGCVWd0kn?=
 =?us-ascii?q?kMRz83xq9/p0N9x0yH0ah5hfxYCNNS6+lIUgc8KZ7T0eh6B8ruVQLGe9eDUEym?=
 =?us-ascii?q?Tcm+ATEtUtIxxMcDbFtnFNW8kB/PxSqqDKUTl7yQGpM09KXQ33zyJ8Z4z3bLz6?=
 =?us-ascii?q?0hj1ggQstSOmyqnK9/9w7PB4HXl0WVjbqldaMZ3CTV7meM0XKOvF1EUA53SajK?=
 =?us-ascii?q?QGoQZlXIotjj5kPNVbmuCa85PQtH0sOCLqpKatv0jVRJXvvjOdLeY36vlGe0Hx?=
 =?us-ascii?q?qH2rSMbI/ycWUHwCrdEFQEkxwU/XueKQg+ByKho2XCDDxuFVPjeV/s/fN5qHOh?=
 =?us-ascii?q?Sk80zgeKb0J62rqx+x4Vg+GcSvwJ0rIFvichtyt7HFKn093KDNqAohJrfL9Abt?=
 =?us-ascii?q?Ml/FdHyWXZuhRnMZykMa9jiUARcgRts0z1yhV4F59Pkc4prHMt0gp/MqaY0FJH?=
 =?us-ascii?q?dzOF0pH8ILzXKm/u/B+xb67awE3R0NGT+q0X8vQ3t03jvB21Fkol63hm08RV32?=
 =?us-ascii?q?GA6ZnQDQsSUYj+UkA49xVho7HaYy89557b1HF2MKm0tCPC1MwtBOc/1hmgeNJf?=
 =?us-ascii?q?OrueFADuC80aG9SuKOsyllizbxILIPpd9LQpMMOhbfeG3rCkPPxhnD6/kWtI+o?=
 =?us-ascii?q?R93V+S+CpmTe7I2Y0Iw/WZ3guBSjf9g02tssHxmYBYez4SGnCzxjTjBI5Ufqdy?=
 =?us-ascii?q?Z5oECX+yI82rwdVzn57sW39C+F+jHV8Gw9KpeRyJYlz53A1Q01kXoHO9lSu5yT?=
 =?us-ascii?q?x0jy8mrq6F0CPSxOTicQINOnRXS2l6kVfsPY+0gsgYXEeydQgplxil5UHgy6hA?=
 =?us-ascii?q?vqt/LGrTQUZOfyfoKWFvSa+wtruEY85S55IkqyRXUOKgYV+ETr7xuQcV0yTmH2?=
 =?us-ascii?q?FG3jA0aymquonlnxx9kG+cLGx8rH3DdcFyxBff4sfRRfpQ3joAWSl5hiPbBlm6?=
 =?us-ascii?q?P9m149qUk43Pvfy5V2KkTpdTazXkzZuctCun4m1nGR6/kOqymtH9EQg6zDX019?=
 =?us-ascii?q?9lVSjTqBb8Y4/r17m1MO59f0loAkP85NR+Go1kjoQwg5QQ02AAhpqJ5XoHjXvz?=
 =?us-ascii?q?MdJD1KL7bXoNRiQEz8Tb4Qf7w01jMmyGx5jiWXqD2MthaMK3YmcX2iI78sBLB7?=
 =?us-ascii?q?2Y7L1CnStpvFW4qRjdbuR6njcY0fEu8mIVg/kVuAoxySWQGqwSHU5dPSD2lhWH?=
 =?us-ascii?q?9da+rLhMZGa0cLi9z05+ndGnDLGfrQBQQnf5epE+HSBu6sVzKk7D0Hr26ov8Yt?=
 =?us-ascii?q?nfccoTtgGIkxfHl+VaM4g+lv0OhSp6I279uWAlxvU/jRxv25G6oYeGJ39s/KK/?=
 =?us-ascii?q?Hh5XKDn1a9kP9THqiKZUhtyW0Jy3HpV9BjULW4PlTfCyHzIXq/vnLByCECEmpn?=
 =?us-ascii?q?eYBLrfHhKf6EF8oHLUCJ2rM3CXJH8EzdRtXhWdJUpfgBwKUzU+hJI2CgeqxMn5?=
 =?us-ascii?q?ekdj+j8R/kL4qgdLyu9wNxj/VXrfpB61ajguTpiTNgFW7gZE50faKsGe6uNzHy?=
 =?us-ascii?q?dF/pyutgCNK2qbZxhWAmENQECLG1fjPry279na7+eYHva+L+fJYbiWqexRSfaI?=
 =?us-ascii?q?xZGs0otn5TqMNd+PPn5tD/IlwEpDQGt5Ft/dmzUOTSwXii3MY9SapBe65i14sM?=
 =?us-ascii?q?S//O73VwLo4IuFE6FSPsl3+xCqnaeDMPadizxkKTlDzJMD23/JxKIb3F4TkCxu?=
 =?us-ascii?q?czitEbIdtS/CVq7Qm6lXDwIFZCN3LsdH86U83gxVM87Bltz1zqJ4juIyC1pdSV?=
 =?us-ascii?q?zhm8SpadYWLG2nKFzHBFiENLKdKD3PwsH3Z768SLJKgOVVsR2wpSiUE0v5Mjuf?=
 =?us-ascii?q?kDnpUgilMftQgyGDIBxepIa9fw5tCGf5StLmbxy7MNlvgjw3wb07nHXKNWEHPD?=
 =?us-ascii?q?h4ckNNqKCQ7CxCjvV+HWxB8mRqLe2elymF6OnYL8Vejfw+BiVyivIf7m82xqVY?=
 =?us-ascii?q?6AlaS/Fv3ijftNhjpxehiObLgj5mVgde7zVGnoSGuW18NqjDsJpNQ3DJ+FQK92?=
 =?us-ascii?q?rUQxcUovN7BdD1/aNd0N7CkOT0MjgR3cjT+J4iBtbZK4qoN2soNVK9BjHTHQIB?=
 =?us-ascii?q?ZSSmOWHWmwpWl/TEpS7dlYQztpW5wMlGcbRcTlFgTv4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CjAAADnw5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2snjHKLMIIhkkGGbxQYEwGHbSI3Bg0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpL4I2IoJlAwMBAiRSBgkBAVADKSsHEgWDHIICBacHM4ogjCEXgUA/gRABh?=
 =?us-ascii?q?3+FbwKPPX2QOwmRRAsYiWaHVyyIdpAOgVyBeDMaCBsVgyeCJxeOOyEBATGBBQE?=
 =?us-ascii?q?BHIkwgkwBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CjAAADnw5ch0O0hNFkHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?njHKLMIIhkkGGbxQYEwGHbSI3Bg0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJlA?=
 =?us-ascii?q?wMBAiRSBgkBAVADKSsHEgWDHIICBacHM4ogjCEXgUA/gRABh3+FbwKPPX2QOwm?=
 =?us-ascii?q?RRAsYiWaHVyyIdpAOgVyBeDMaCBsVgyeCJxeOOyEBATGBBQEBHIkwgkwBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="55284959"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 09:19:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729122AbeLJRTT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 12:19:19 -0500
Received: from mx1.redhat.com ([209.132.183.28]:59292 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728384AbeLJRNf (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 12:13:35 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 5217C2BEAE;
        Mon, 10 Dec 2018 17:13:35 +0000 (UTC)
Received: from horse.redhat.com (unknown [10.18.25.234])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 04CFE600D6;
        Mon, 10 Dec 2018 17:13:34 +0000 (UTC)
Received: by horse.redhat.com (Postfix, from userid 10451)
        id 814A722426A; Mon, 10 Dec 2018 12:13:30 -0500 (EST)
From: Vivek Goyal <vgoyal@redhat.com>
To: linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org
Cc: vgoyal@redhat.com, miklos@szeredi.hu, stefanha@redhat.com,
        dgilbert@redhat.com, sweil@redhat.com, swhiteho@redhat.com
Subject: [PATCH 31/52] dax: Pass dax_dev to dax_writeback_mapping_range()
Date: Mon, 10 Dec 2018 12:12:57 -0500
Message-Id: <20181210171318.16998-32-vgoyal@redhat.com>
In-Reply-To: <20181210171318.16998-1-vgoyal@redhat.com>
References: <20181210171318.16998-1-vgoyal@redhat.com>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.39]); Mon, 10 Dec 2018 17:13:35 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Right now dax_writeback_mapping_range() is passed a bdev and dax_dev
is searched from that bdev name.

virtio-fs does not have a bdev. So pass in dax_dev also to
dax_writeback_mapping_range(). If dax_dev is passed in, bdev is not
used otherwise dax_dev is searched using bdev.

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
---
 fs/dax.c            | 16 ++++++++++------
 fs/ext4/inode.c     |  2 +-
 fs/xfs/xfs_aops.c   |  2 +-
 include/linux/dax.h |  6 ++++--
 4 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/fs/dax.c b/fs/dax.c
index 6431c3aba182..1ae3a60c17d4 100644
--- a/fs/dax.c
+++ b/fs/dax.c
@@ -911,12 +911,12 @@ static int dax_writeback_one(struct xa_state *xas, struct dax_device *dax_dev,
  * on persistent storage prior to completion of the operation.
  */
 int dax_writeback_mapping_range(struct address_space *mapping,
-		struct block_device *bdev, struct writeback_control *wbc)
+		struct block_device *bdev, struct dax_device *dax_dev,
+		struct writeback_control *wbc)
 {
 	XA_STATE(xas, &mapping->i_pages, wbc->range_start >> PAGE_SHIFT);
 	struct inode *inode = mapping->host;
 	pgoff_t end_index = wbc->range_end >> PAGE_SHIFT;
-	struct dax_device *dax_dev;
 	void *entry;
 	int ret = 0;
 	unsigned int scanned = 0;
@@ -927,9 +927,12 @@ int dax_writeback_mapping_range(struct address_space *mapping,
 	if (!mapping->nrexceptional || wbc->sync_mode != WB_SYNC_ALL)
 		return 0;
 
-	dax_dev = dax_get_by_host(bdev->bd_disk->disk_name);
-	if (!dax_dev)
-		return -EIO;
+	if (bdev) {
+		WARN_ON(dax_dev);
+		dax_dev = dax_get_by_host(bdev->bd_disk->disk_name);
+		if (!dax_dev)
+			return -EIO;
+	}
 
 	trace_dax_writeback_range(inode, xas.xa_index, end_index);
 
@@ -951,7 +954,8 @@ int dax_writeback_mapping_range(struct address_space *mapping,
 		xas_lock_irq(&xas);
 	}
 	xas_unlock_irq(&xas);
-	put_dax(dax_dev);
+	if (bdev)
+		put_dax(dax_dev);
 	trace_dax_writeback_range_done(inode, xas.xa_index, end_index);
 	return ret;
 }
diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c
index 22a9d8159720..3569c260a3bd 100644
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -2978,7 +2978,7 @@ static int ext4_dax_writepages(struct address_space *mapping,
 	percpu_down_read(&sbi->s_journal_flag_rwsem);
 	trace_ext4_writepages(inode, wbc);
 
-	ret = dax_writeback_mapping_range(mapping, inode->i_sb->s_bdev, wbc);
+	ret = dax_writeback_mapping_range(mapping, inode->i_sb->s_bdev, NULL, wbc);
 	trace_ext4_writepages_result(inode, wbc, ret,
 				     nr_to_write - wbc->nr_to_write);
 	percpu_up_read(&sbi->s_journal_flag_rwsem);
diff --git a/fs/xfs/xfs_aops.c b/fs/xfs/xfs_aops.c
index 338b9d9984e0..b1947beec50a 100644
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@ -951,7 +951,7 @@ xfs_dax_writepages(
 {
 	xfs_iflags_clear(XFS_I(mapping->host), XFS_ITRUNCATED);
 	return dax_writeback_mapping_range(mapping,
-			xfs_find_bdev_for_inode(mapping->host), wbc);
+			xfs_find_bdev_for_inode(mapping->host), NULL, wbc);
 }
 
 STATIC int
diff --git a/include/linux/dax.h b/include/linux/dax.h
index 450b28db9533..a8461841f148 100644
--- a/include/linux/dax.h
+++ b/include/linux/dax.h
@@ -85,7 +85,8 @@ static inline void fs_put_dax(struct dax_device *dax_dev)
 
 struct dax_device *fs_dax_get_by_bdev(struct block_device *bdev);
 int dax_writeback_mapping_range(struct address_space *mapping,
-		struct block_device *bdev, struct writeback_control *wbc);
+		struct block_device *bdev, struct dax_device *dax_dev,
+		struct writeback_control *wbc);
 
 struct page *dax_layout_busy_page(struct address_space *mapping);
 bool dax_lock_mapping_entry(struct page *page);
@@ -117,7 +118,8 @@ static inline struct page *dax_layout_busy_page(struct address_space *mapping)
 }
 
 static inline int dax_writeback_mapping_range(struct address_space *mapping,
-		struct block_device *bdev, struct writeback_control *wbc)
+		struct block_device *bdev, struct dax_device *dax_dev,
+		struct writeback_control *wbc)
 {
 	return -EOPNOTSUPP;
 }
-- 
2.13.6

