Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 11 Dec 2018 08:40:24 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 339FE5807C6;
	Mon, 10 Dec 2018 09:17:25 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga005-1.jf.intel.com with ESMTP; 10 Dec 2018 09:17:24 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A+ZhmNxeEBxt0VlZHziFs0cYzlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YBCN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJtgqxVoxCupxJkw47MYoyYL+Zycr/HcN8GWWZNQtpdWipcCY28?=
 =?us-ascii?q?dYsPCO8BMP5XoIn8uVsBsxi+DhStCuPoyj5HnHv21rA93uQ/HgHG2wwhEMgKsH?=
 =?us-ascii?q?nPttX6KrodUeCvw6nU1znMc/RW2TLk5YXObxsvoumMUKpufcbNzUQjDR7Jg1uO?=
 =?us-ascii?q?pYD/Ij+Y1fgBv3Ka4udiTe6jlXIrpgVrrjSyyMoglJPFip8Wx13K7yl13oU4KN?=
 =?us-ascii?q?ulQ0Bhe9GkCoFftySCOot2XMwiR2ZotT4kyr0Jp5G7ZjIGyJc5yB7FbfyIbYyI?=
 =?us-ascii?q?7gjkVOaLLjd0nHNleLShiBau6UWs1PHwW82u3FpXoCdJjMPAum0O2hDP8MSKS/?=
 =?us-ascii?q?lw8l+k2TmV1gDT7u9EIVozlareM5Mhxr8wlpwOsUXMByP2m1v5jLWQdko6/uik?=
 =?us-ascii?q?8uPnY7vgppCCLY95kR/+MqswlcylG+g4MRYBX3Kd+eui0L3v50r5QK9FjvEuiK?=
 =?us-ascii?q?nWrIjaJdgHpq6+GwJV1ocj6xWhADu839UYgGIKLFZEeBKBkojoNEvCIPH+Dfej?=
 =?us-ascii?q?nVuslC1nyOzBPr3kGp/NNGTMkK/9fbZh7E5R0Aozwspe55JIEL4BJ+j/Wk/stN?=
 =?us-ascii?q?PCCB85PBe5w+LmCNV7y4MfVniDAq6fMKPOr1CI4vgjLPWLZI8QoDz9MeQq5+by?=
 =?us-ascii?q?jX8lnl8QZaup3ZwJZ3yiHfRmJEOZYXzrgtoaFWcKvww+TPHliVGYUD5TYWqyUL?=
 =?us-ascii?q?w45j0hFI2mCoLDTJi3gLOdxCe7AoFWZmdeB1+WCnfod4KEW/QWZCKIOMBhkCcJ?=
 =?us-ascii?q?VbygS48nyBGvuxX2y7thLurI5CIYsYjv28Ry5+3WjRsy7yB7D9yB02GRSGF5hm?=
 =?us-ascii?q?AISCUw3KxlpUx9y02M0a53g/FDEdxT5vVJUho1NJLGzux6DczyVRzFftuTVFmm?=
 =?us-ascii?q?RdCmCykrTt0t298Of1p9G9K6gx/exSWqHaEam6aLBJMu9KLcxGb+J8B6x3bC16?=
 =?us-ascii?q?khil0mT9BLNW2ngK5/6gfSC5TIk0Wfi6ala6Ac0DTR+2eEyGqEpFtYXxJoUaXZ?=
 =?us-ascii?q?QXAfYVPbosnj6UPcUbCiE7QnPRFHyc6ZNKRKbMbkjVFHRPflJdTfbHi9m2a2BR?=
 =?us-ascii?q?aU2LyMaJDmdHka3CXYEEIEiRwc/W6aNQgiASesu37eDD1rFVLof0Ps8el/pGmn?=
 =?us-ascii?q?TkMuyAGKdUlh17uz+h4anvGcT/IT3rQZuCYusTl0HVC9387IBNqEvQZuYKJcYd?=
 =?us-ascii?q?Yl6lddyW3ZrxB9PoCnL616nFEedxp4vkzw2BR3EIlPitUqo24wwwp0KqKY101B?=
 =?us-ascii?q?eiic3ZDxPL3XN2bz8Aqua67QxlHRztKW9r0T5/Q/rlXppBupGVY683V7z9lV1G?=
 =?us-ascii?q?OR55XXDAYITZ39SEc29xhgqLHcbSkw/IfU1XxqMampvT7OwdMpBO05yhm+e9dT?=
 =?us-ascii?q?Kr+LFAj3E8cCHcihNPQqm0S1bhIDJO1S7q80MN+8ePucxaGrO/xsnDS4gmRd4Y?=
 =?us-ascii?q?Bxy16D+DB4SuHVwZkF2faY3g2cWjf4jVehtN33mI9eaTETGGq/1TbrBIpLaqJu?=
 =?us-ascii?q?eoYLDH+kI9erydVmm57tR3lY+UajBlMHwsOoeQCeb0fg3Q1WzkkXpX2nmS2lzz?=
 =?us-ascii?q?17iT0pr6yf3DDQzOTmbhYIJmlLRGx6h1f2PYe0l8waXFSvbwUxlhuq/1z6x6tY?=
 =?us-ascii?q?pKR4NWXTWl1Hfyv1L2FjVKu/qLyCbtVL6JMptyVXTeu9bUqbSr77vxsVzSfjE3?=
 =?us-ascii?q?FCyzA8cjGgoo/5kABiiGKBMHZzq2LUeMFqyhfY/tDcR/9R3jwdSSl8iDnXAEW8?=
 =?us-ascii?q?Ptaz8dWVkZfDrv6xV2a7WpJPdinryJuKtDGn6m1yHR2/g/ezl8XkEQcg0C/3zd?=
 =?us-ascii?q?lqVTjSoxb6bYnmzKC6MeNhfkl1C17w8ct6GodikoQugJEcw2QVhpKQ/XAfi2f8?=
 =?us-ascii?q?Lc1b2b7ibHoKXTMLxt/V4Av/10F5IHOG2Zn5VmmDzct7fNa1fHkW2i0m4sBOCa?=
 =?us-ascii?q?eU6qFEnCRvrlq5qwLRfeZynjMHxfQy734ahvkDuBAxwSWFHrASAU5YMDTwlxSP?=
 =?us-ascii?q?6tCytqRWa3ypcbitz0p+htGhAaqGogFdXnb5Z5gjETVx7sV5LFLDznnz5pv4d9?=
 =?us-ascii?q?nXaNIZrgeUnAvYj+hJNJIxkeIHijF9NmL6uX0l1vQ3jRhz3ZyhuIiHKmNt/L+2?=
 =?us-ascii?q?AxJCNz31Yd8T9S/pjapEgsmW2IWvFI17GjoXRJvoUe6oEDUKuPTlLQmOFSMzqm?=
 =?us-ascii?q?yBFbrDBwOf61pmr3HSE5CtLX6XP2IUzdFjRBmbOUxejxoYXDQ8np4lCA+qwNbt?=
 =?us-ascii?q?f1t+5jAU/lT4sAdDyvp0NxnjVWfSvAepajApSJiGMRpZ9AdC613OMcyZ6OJzED?=
 =?us-ascii?q?pV/pmgrAyLN2yaaB5EDWAPWkyYGV/jOqOi6sXH8+idHuC+NefBYa2SqexCUPeF?=
 =?us-ascii?q?3ZKv3ZVn/zaPNcWPP2NuD/4h2kpEUnB2Bd7ZmygUSyEMkyLNbsibpAqz+yFtr8?=
 =?us-ascii?q?C/9ujrVxzr5YeVF7RSNtBv8QisgaifL+6QmDp5KTFA25wW2H/H06If00ASii10?=
 =?us-ascii?q?czmtEK8NtSrMTKLWh69WAAQXayJ1NMtU8a082hNBNtLcitPwzrR4lOI6C09ZVV?=
 =?us-ascii?q?z9ncGkfdAKI2C4NF/dGEmHLqiJJT3VzMHxeq68TbxQjONJtxy/ozqbEknjPiid?=
 =?us-ascii?q?mDntTRygLeZMjCSDNhxEpI69agptCXTkTN/+ahy0Ktl3jTg3wb0ynnzLNG4cPi?=
 =?us-ascii?q?J6c0NCtbCQ6SJYgvNiG21O9HZlLO+EmzqH4OncMJoZrfxrAiEn395dtXA7zaZF?=
 =?us-ascii?q?qS9fSPFrlS/6sNFjuReln/OJxz4hVwBB7n5PhYSWrQBhNL/f+51oR3nJ5lQO4H?=
 =?us-ascii?q?+WBhBMoMFqTpXspaV41NfCjuTwJS1E/taS+tETVObOL8fSDns/PBmhNznFBQ9N?=
 =?us-ascii?q?GSCkMnDWg2RHnf2S/2HTpZ8//Mu/0KESQ6NWAQRmXsgRDV5oSYQP?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AmAABIng5ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBg2snjHKLMIIhlz2BbhkYEwGHbSI2Bw0BAwEBAQEBAQIBEwEBAQg?=
 =?us-ascii?q?NCQgpL4I2IoJlAwMBAiRSBgkBAVADKSsHEgWDHIICBacFM4ogjCEXgUA/gRGCZ?=
 =?us-ascii?q?IsKApA6j2ZVCZFECxiJZodXiFdLjF2DMYFNCoF9MxoIGxWDJ5B5IQEBMYEFAQE?=
 =?us-ascii?q?ci3wBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AmAABIng5ch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBg2s?=
 =?us-ascii?q?njHKLMIIhlz2BbhkYEwGHbSI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2IoJlA?=
 =?us-ascii?q?wMBAiRSBgkBAVADKSsHEgWDHIICBacFM4ogjCEXgUA/gRGCZIsKApA6j2ZVCZF?=
 =?us-ascii?q?ECxiJZodXiFdLjF2DMYFNCoF9MxoIGxWDJ5B5IQEBMYEFAQEci3wBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,339,1539673200"; 
   d="scan'208";a="43455388"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 09:17:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728819AbeLJRPi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 12:15:38 -0500
Received: from mx1.redhat.com ([209.132.183.28]:55354 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728471AbeLJRNi (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 12:13:38 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com [10.5.11.22])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 64BE6804E3;
        Mon, 10 Dec 2018 17:13:38 +0000 (UTC)
Received: from horse.redhat.com (unknown [10.18.25.234])
        by smtp.corp.redhat.com (Postfix) with ESMTP id 18420101962A;
        Mon, 10 Dec 2018 17:13:35 +0000 (UTC)
Received: by horse.redhat.com (Postfix, from userid 10451)
        id A6FB7224275; Mon, 10 Dec 2018 12:13:30 -0500 (EST)
From: Vivek Goyal <vgoyal@redhat.com>
To: linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org
Cc: vgoyal@redhat.com, miklos@szeredi.hu, stefanha@redhat.com,
        dgilbert@redhat.com, sweil@redhat.com, swhiteho@redhat.com
Subject: [PATCH 41/52] fuse: Reschedule dax free work if too many EAGAIN attempts
Date: Mon, 10 Dec 2018 12:13:07 -0500
Message-Id: <20181210171318.16998-42-vgoyal@redhat.com>
In-Reply-To: <20181210171318.16998-1-vgoyal@redhat.com>
References: <20181210171318.16998-1-vgoyal@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.27]); Mon, 10 Dec 2018 17:13:38 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

fuse_dax_free_memory() can be very cpu intensive in corner cases. For example,
if one inode has consumed all the memory and a setupmapping request is
pending, that means inode lock is held by request and worker thread will
not get lock for a while. And given there is only one inode consuming all
the dax ranges, all the attempts to acquire lock will fail.

So if there are too many inode lock failures (-EAGAIN), reschedule the
worker with a 10ms delay.

Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
---
 fs/fuse/file.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/fs/fuse/file.c b/fs/fuse/file.c
index dbe3410a94d7..709747458335 100644
--- a/fs/fuse/file.c
+++ b/fs/fuse/file.c
@@ -3909,7 +3909,7 @@ int fuse_dax_free_one_mapping(struct fuse_conn *fc, struct inode *inode,
 int fuse_dax_free_memory(struct fuse_conn *fc, unsigned long nr_to_free)
 {
 	struct fuse_dax_mapping *dmap, *pos, *temp;
-	int ret, nr_freed = 0;
+	int ret, nr_freed = 0, nr_eagain = 0;
 	u64 dmap_start = 0, window_offset = 0;
 	struct inode *inode = NULL;
 
@@ -3918,6 +3918,12 @@ int fuse_dax_free_memory(struct fuse_conn *fc, unsigned long nr_to_free)
 		if (nr_freed >= nr_to_free)
 			break;
 
+		if (nr_eagain > 20) {
+			queue_delayed_work(system_long_wq, &fc->dax_free_work,
+						msecs_to_jiffies(10));
+			return 0;
+		}
+
 		dmap = NULL;
 		spin_lock(&fc->lock);
 
@@ -3955,8 +3961,10 @@ int fuse_dax_free_memory(struct fuse_conn *fc, unsigned long nr_to_free)
 		}
 
 		/* Could not get inode lock. Try next element */
-		if (ret == -EAGAIN)
+		if (ret == -EAGAIN) {
+			nr_eagain++;
 			continue;
+		}
 		nr_freed++;
 	}
 	return 0;
-- 
2.13.6

