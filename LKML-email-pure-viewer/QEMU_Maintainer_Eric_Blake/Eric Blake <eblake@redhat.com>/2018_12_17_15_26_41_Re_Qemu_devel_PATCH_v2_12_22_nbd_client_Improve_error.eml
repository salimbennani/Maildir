Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  18 Dec 2018 08:45:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7BD705805CF
	for <like.xu@linux.intel.com>; Mon, 17 Dec 2018 07:28:01 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 17 Dec 2018 07:28:01 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A527uuhUN+q5s2IyYlarylts/Gr3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSFuKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGp2y?=
 =?us-ascii?q?b4UPAeoGPuhWoYfyqFQMohSiCgeiGfvvxz1KiHL5wKE33fgtHh/d3AE7A9IDsm?=
 =?us-ascii?q?7ZoMnpOKocU+24yrTDwzXZb/NR3Dfw8IfGcgogof6QQLl9bM7RxlMsFwzbk16d?=
 =?us-ascii?q?rpLqMCiR1usXsGiU8fFtVfixhGE6qwF+uCSvyt0whYnOg4IY01bJ/jh3zoYyIN?=
 =?us-ascii?q?23Uk97Ydi8HZtUtiGVLJV2QsI4Q2F0oio6zacGuZGjcCgT1psnwgPfZ+aAc4iS?=
 =?us-ascii?q?7RLuUvuaLzRghH99Zr6zmxW//VK9xuHhVcS4ykhGoyRFn9XWq3wA1QTf5tabRv?=
 =?us-ascii?q?Z55EutxDiC2x7J5u1ZIk05m7DXJ4Aiz7M2i5Edq17MHjXsl0XzlKKWdlsr+uyv?=
 =?us-ascii?q?6+n/ZrXmp4ScN5Nvig3kPaQunNG/Df4/MggUUGiX4eW81Lv98k3lWLhGkOE6n6?=
 =?us-ascii?q?rDvJzHOMgWpbS1DxFb34sj8RqzEjWr3MwdnXYdLVJFfByHj5LuO1HLOP34FOmw?=
 =?us-ascii?q?g1GxkDty2v/JIKPhDYvJLnTai7jheqt960hAxwUt1tBT4JZUCrACIP3tQEPwu8?=
 =?us-ascii?q?HYAwc9Mwy1xebnFdp82pkfWWKJHq+WLqfSvUWU6eIoJumBf4kVuDH7K/gq4f7u?=
 =?us-ascii?q?kGU1mVgHfammxZcXcmy3Hux6I0WFZnrhmtMBEWYJvgUgVuDrh0CCXCVXZ3azWa?=
 =?us-ascii?q?I8+z46BJinDYfFWoCinriB0D2nEZ1RY2AVQm2KCmriIoWYR+8XOmXVJs56jidC?=
 =?us-ascii?q?U7+nRIk8kxa0u0j/wrtjK+PSvSoAqZPk0sMy/uDWiFQ++CJ5C5eg1XqQRTRxl2?=
 =?us-ascii?q?IMWzhkxa16vAlxx0mO1e1ijuVFGMdPz/VOVAg8KNjb1eMtEM34WA/KYoKUTk27?=
 =?us-ascii?q?SM6tGzA7Q4ENxIpEWUd2G9y4glj8mQ/sS50SkbGQTtRg6KDb2XXqD9xwx3bPyO?=
 =?us-ascii?q?8qiFxwEeVVMmjzq7R+/ED5A4fKng3NmqyufKcR9DTA+GeK0SyFu0QOA104arnM?=
 =?us-ascii?q?QX1KPhielt/+/E6XCub2Ubk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BRAABcvxdchxHrdtBgAxkBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEHAQEBAQEBgWWBMSUFgQ+BFhODfIh4ixeBYC2SW4URgV8UGAMRgUuGCyI?=
 =?us-ascii?q?4EgEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxoBBoJbAQEBAQIBAQIgBBEOC?=
 =?us-ascii?q?ikDAwECBgEBChgCAhEOAwQCAgMBQhEGDQYCAQEBgx0BgXgIAQSoDnwzhUCEX4E?=
 =?us-ascii?q?LizMXgUA/gTiCa4Q8L1UIgkGCVwKJOIYVRzdRj30Jhw2KRwYYgiqHSRGHTiyBE?=
 =?us-ascii?q?oJIlV6BXYF3MxoIGxU7gmwJgkdtAQ6HUIVeIjGBBxyLXIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BRAABcvxdchxHrdtBgAxkBAQEBAQEBAQEBAQEHAQEBAQE?=
 =?us-ascii?q?BgWWBMSUFgQ+BFhODfIh4ixeBYC2SW4URgV8UGAMRgUuGCyI4EgEDAQEBAQEBA?=
 =?us-ascii?q?gETAQEBCgsJCBsOIwyCNgUCAxoBBoJbAQEBAQIBAQIgBBEOCikDAwECBgEBChg?=
 =?us-ascii?q?CAhEOAwQCAgMBQhEGDQYCAQEBgx0BgXgIAQSoDnwzhUCEX4ELizMXgUA/gTiCa?=
 =?us-ascii?q?4Q8L1UIgkGCVwKJOIYVRzdRj30Jhw2KRwYYgiqHSRGHTiyBEoJIlV6BXYF3Mxo?=
 =?us-ascii?q?IGxU7gmwJgkdtAQ6HUIVeIjGBBxyLXIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,365,1539673200"; 
   d="scan'208";a="45288116"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 17 Dec 2018 07:27:21 -0800
Received: from localhost ([::1]:47399 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gYung-0007PD-M9
	for like.xu@linux.intel.com; Mon, 17 Dec 2018 10:27:20 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:33362)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gYunF-0007LO-Kv
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 10:26:54 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gYunE-0006XG-Lk
	for qemu-devel@nongnu.org; Mon, 17 Dec 2018 10:26:53 -0500
Received: from mx1.redhat.com ([209.132.183.28]:33316)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gYun9-0006Ra-AX; Mon, 17 Dec 2018 10:26:47 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 926E7C062ECA;
	Mon, 17 Dec 2018 15:26:46 +0000 (UTC)
Received: from [10.10.122.76] (ovpn-122-76.rdu2.redhat.com [10.10.122.76])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 985985D6A6;
	Mon, 17 Dec 2018 15:26:42 +0000 (UTC)
To: "Richard W.M. Jones" <rjones@redhat.com>
References: <20181215135324.152629-1-eblake@redhat.com>
	<20181215135324.152629-13-eblake@redhat.com>
	<20181215151929.GY27120@redhat.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <9b3c7c13-93cf-55e1-d512-7ed73b008720@redhat.com>
Date: Mon, 17 Dec 2018 09:26:41 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181215151929.GY27120@redhat.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.31]);
	Mon, 17 Dec 2018 15:26:46 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v2 12/22] nbd/client: Improve error
 handling in nbd_negotiate_simple_meta_context()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: nsoffer@redhat.com, vsementsov@virtuozzo.com, jsnow@redhat.com,
	qemu-devel@nongnu.org, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/15/18 9:19 AM, Richard W.M. Jones wrote:
> On Sat, Dec 15, 2018 at 07:53:14AM -0600, Eric Blake wrote:
>> Always allocate space for the reply returned by the server and
>> hoist the trace earlier, as it is more interesting to trace the
>> server's reply (even if it is unexpected) than parroting our
>> request only on success.  After all, skipping the allocation
>> for a wrong size was merely a micro-optimization that only
>> benefitted a broken server, rather than the common case of a
>> compliant server that meets our expectations.
>>
>> Then turn the reply handling into a loop (even though we still
>> never iterate more than once), to make this code easier to use
>> when later patches do support multiple server replies.  This
>> changes the error message for a server with two replies (a
>> corner case we are unlikely to hit in practice) from:
>>
>> Unexpected reply type 4 (meta context), expected 0 (ack)
>>
>> to:
>>
>> Server replied with more than one context
>>
>> Signed-off-by: Eric Blake <eblake@redhat.com>
>>
>> ---
>> v2: split patch into easier-to-review pieces [Rich, Vladimir]
>> ---
>>   nbd/client.c | 16 ++++++++++++----
>>   1 file changed, 12 insertions(+), 4 deletions(-)
>>
>> diff --git a/nbd/client.c b/nbd/client.c
>> index bcccd5f555e..b6a85fc3ef8 100644
>> --- a/nbd/client.c
>> +++ b/nbd/client.c
>> @@ -684,10 +684,11 @@ static int nbd_negotiate_simple_meta_context(QIOChannel *ioc,
>>           return ret;
>>       }
>>
>> -    if (reply.type == NBD_REP_META_CONTEXT) {
>> +    while (reply.type == NBD_REP_META_CONTEXT) {
> 
> I'm not sure I understand why this change is safe.
> 
> As far as I can see reply.type is only updated in the loop by
> nbd_receive_option_reply, and that reads from the server, and so the
> server might keep sending NBD_REP_META_CONTEXT packets (instead of the
> expected NBD_REP_ACK), so it could now loop forever against a
> malicious server?  (This is not taking into account any later patches)

The loop can execute at most twice:

> 
> Rich.
> 
>>           char *name;
>>
>> -        if (reply.length != sizeof(info->context_id) + context_len) {
>> +        if (reply.length <= sizeof(info->context_id) ||
>> +            reply.length > NBD_MAX_BUFFER_SIZE) {
>>               error_setg(errp, "Failed to negotiate meta context '%s', server "
>>                          "answered with unexpected length %" PRIu32, context,
>>                          reply.length);
>> @@ -708,6 +709,15 @@ static int nbd_negotiate_simple_meta_context(QIOChannel *ioc,
>>               return -1;
>>           }
>>           name[reply.length] = '\0';
>> +        trace_nbd_opt_meta_reply(name, info->context_id);
>> +
>> +        if (received) {
>> +            error_setg(errp, "Server replied with more than one context");
>> +            g_free(name);
>> +            nbd_send_opt_abort(ioc);
>> +            return -1;
>> +        }

If the server replies with a second context, we break the loop by 
complaining.

The old code accepted at most one context, by complaining if the 
server's second reply was not ACK; the new code accepts at most one 
context, by complaining if the server sent more than one context, so the 
net effect of killing the connection for a misbehaving server response 
to SET is unchanged.

However, your point about a misbehaving server providing an infinite 
stream of responses to NBD_OPT_LIST or NBD_OPT_LIST_META_CONTEXT is an 
interesting question, and may be worth asking upstream to see if the NBD 
protocol should be tweaked to document any boundaries at how many 
listings a server might send before a client should worry about the 
server being malicious.  (Does not affect this patch, but pre-existing 
when we call nbd_receive_list() for servers that lack NBD_OPT_GO, and 
does impact the later patches in this series that call 
NBD_OPT_LIST_META_CONTEXT for 'qemu-nbd --list').

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

