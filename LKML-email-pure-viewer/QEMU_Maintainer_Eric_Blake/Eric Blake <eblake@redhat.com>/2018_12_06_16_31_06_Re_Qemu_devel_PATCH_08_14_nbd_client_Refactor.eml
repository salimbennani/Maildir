Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:50:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B66055804F9
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 08:31:48 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 08:31:48 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AX8M4yxRtM2EeGXkQWAyDvq2sMNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZByOt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBD+0CM+hWoYbyqFkBogexCwexHOPiyD1Gi3Dr0aA0z+guDxrG0Rc8H98Mqn?=
 =?us-ascii?q?nYsMn5OakQXO2z0aLGzS/Db/RT2Trl54bIaBEhru2RVr9tdcre00ovGB3YhViX?=
 =?us-ascii?q?t4PqJDeV2f4Os2eF9OdgT/yghHMnqw5rvjij3Nsjio7Mho8MzF3P6Ct3wIEwJd?=
 =?us-ascii?q?KiSU57Z8apEJ9Rty6BKYt2Q9kiQ31ytCY90L0Gtoa3fDEUx5Qi2h7TcfuHc5KH?=
 =?us-ascii?q?4h/lSe2fIi94iWp7dL6jhBu+61WsxvD/W8WuzlpHoCpInsPRun0PzxDf9NSLR/?=
 =?us-ascii?q?9n8ku81zuDyRrf5vxHLE06j6bXNZ0sz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vzjYrXnvZ+cK5R0hhvxMqQoh8yzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7kb?=
 =?us-ascii?q?PVvI3HKckYvKK1HQFY34Y55xqiDTqqyNEYkmMGLFJBdhKHlY/pO1TWLfDhE/i/?=
 =?us-ascii?q?hkmsnC52yP/YIL3uHJHNImHYn7fmYLZ97VJTxxQozdxY45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFhs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+SXYo8VvzD9K/cj5/7z?=
 =?us-ascii?q?l3M5nkUdfaax0ZsNdH+4BuhmI1meYXf0htcBEGQKsRQkQO3llV2PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZjMON1aXDH29d5mYQ+xeL2WWI9R9iXoC?=
 =?us-ascii?q?Ur6uTZJn0guh8wrzyr5iJ+yT/TUEtJXlz59s6ujO0B0/6zFwXPmbyHyHGmR9n2?=
 =?us-ascii?q?cUQG0v0aVi5EBw1FqHlLJ1muFVDsB74fRPXQEnc5nGwLthFtrwVwndK8qPU0us?=
 =?us-ascii?q?Wd68ADs8He42luEKakp8HtS4xivO2iesH6QSifmsC5057Lnf3mm5c9hmxnPL0r?=
 =?us-ascii?q?U6iEcOXMpVKXChlLx4sQPUAtiN2w+AmqO3MKgRwiPJ3GGEy2WIoQdfSgE6GfHc?=
 =?us-ascii?q?UHUCI0fbs9n9zkXFSbCoFPIgKAQXmuCYLa4fR8fohh1sQP7gNZyKbmi1kmS9LQ?=
 =?us-ascii?q?yFyrOFcMzhfGBLj3aVM1QNjw1GpSXODgM5HCr05juGVDE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAADtSAlcmBHrdtBgAxoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVMDAQEBAQsBgTCBOYEpg3qIeIsvgWAIJY5BhBSEeYFzFBgDEYF?=
 =?us-ascii?q?LhgwiNgcNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCXAECAwECI?=
 =?us-ascii?q?BUOCikDAwECBgEBChgCAiIEAgIDAVMGAQwGAgEBAYMcAYIBAQSmBYEvg0GBf4R?=
 =?us-ascii?q?ogQuLFBeBQD+BEScMgl+EWxBdgj2CVwKJERoKhgJGNlCPXAmHBIo8BhiBXE2HO?=
 =?us-ascii?q?RAmhx4sgQ6CPoUWj36BTQSCAjMaCBsVO4JsCYsThV4iMYEHHIdSASQHKYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAADtSAlcmBHrdtBgAxoBAQEBAQIBAQEBBwIBAQEBgVM?=
 =?us-ascii?q?DAQEBAQsBgTCBOYEpg3qIeIsvgWAIJY5BhBSEeYFzFBgDEYFLhgwiNgcNAQMBA?=
 =?us-ascii?q?QEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCXAECAwECIBUOCikDAwECBgE?=
 =?us-ascii?q?BChgCAiIEAgIDAVMGAQwGAgEBAYMcAYIBAQSmBYEvg0GBf4RogQuLFBeBQD+BE?=
 =?us-ascii?q?ScMgl+EWxBdgj2CVwKJERoKhgJGNlCPXAmHBIo8BhiBXE2HORAmhx4sgQ6CPoU?=
 =?us-ascii?q?Wj36BTQSCAjMaCBsVO4JsCYsThV4iMYEHHIdSASQHKYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="55211739"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 08:31:48 -0800
Received: from localhost ([::1]:41831 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUwZ1-0007p1-7M
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 11:31:47 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:42415)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gUwYn-0007or-Jm
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 11:31:38 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gUwYg-0002e3-0N
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 11:31:33 -0500
Received: from mx1.redhat.com ([209.132.183.28]:53588)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gUwYU-0002aS-UC; Thu, 06 Dec 2018 11:31:15 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id CF1D681F0E;
	Thu,  6 Dec 2018 16:31:13 +0000 (UTC)
Received: from [10.10.125.104] (ovpn-125-104.rdu2.redhat.com [10.10.125.104])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 339255C634;
	Thu,  6 Dec 2018 16:31:10 +0000 (UTC)
To: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>
References: <20181130220344.3350618-1-eblake@redhat.com>
	<20181130220344.3350618-9-eblake@redhat.com>
	<a523fabb-f532-1230-9d61-92d487bb551c@virtuozzo.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <44ca18c7-02b1-7176-7ef6-0ae477b1bf96@redhat.com>
Date: Thu, 6 Dec 2018 10:31:06 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <a523fabb-f532-1230-9d61-92d487bb551c@virtuozzo.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Thu, 06 Dec 2018 16:31:13 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 08/14] nbd/client: Refactor
 nbd_receive_list()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "nsoffer@redhat.com" <nsoffer@redhat.com>,
	"jsnow@redhat.com" <jsnow@redhat.com>,
	"rjones@redhat.com" <rjones@redhat.com>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/6/18 8:18 AM, Vladimir Sementsov-Ogievskiy wrote:
> 01.12.2018 1:03, Eric Blake wrote:
>> Add some parameters to make this function reusable in upcoming
>> export listing, where we will want to capture the name and
>> description rather than compare against a user-supplied name.
>> No change in semantics to the existing caller.
>>
>> Signed-off-by: Eric Blake <eblake@redhat.com>
>> ---
>>    nbd/client.c | 66 +++++++++++++++++++++++++++++++++++++---------------
>>    1 file changed, 47 insertions(+), 19 deletions(-)

>> @@ -290,30 +298,49 @@ static int nbd_receive_list(QIOChannel *ioc, const char *want, bool *match,
>>            nbd_send_opt_abort(ioc);
>>            return -1;
>>        }
>> -    if (namelen != strlen(want)) {
>> -        if (nbd_drop(ioc, len, errp) < 0) {
>> -            error_prepend(errp,
>> -                          "failed to skip export name with wrong length: ");
>> -            nbd_send_opt_abort(ioc);
>> -            return -1;
>> +    if (want) {
>> +        if (namelen != strlen(want)) {
>> +            if (nbd_drop(ioc, len, errp) < 0) {
>> +                error_prepend(errp,
>> +                              "failed to skip export name with wrong length: ");
>> +                nbd_send_opt_abort(ioc);
>> +                return -1;
>> +            }
>> +            return 1;
>>            }
>> -        return 1;
>> +        assert(namelen < sizeof(array));
>> +    } else {
>> +        assert(nameout);
> 
> this assert looks a bit redundant, if nameout is 0, next line will abort not less clearly
> 
>> +        *nameout = name = g_new(char, namelen + 1);
> 
> We should check namelen <= NBD_MAX_NAME_SIZE before it, I think.

Why? We already validated that the overall option is not too large, and 
even if the resulting name from the server is larger than 
NBD_MAX_NAME_SIZE, it's still nice to report that name to the client for 
'qemu-nbd --list'.  And these days, we only call nbd_receive_list if a 
server lacked NBD_OPT_GO, which is getting rarer and rarer, so 
micro-optimizing a rare case to avoid a large malloc isn't going to make 
a noticeable difference.

> 
>>        }
>>
>> -    assert(namelen < sizeof(name));
>>        if (nbd_read(ioc, name, namelen, errp) < 0) {
>>            error_prepend(errp, "failed to read export name: ");
>>            nbd_send_opt_abort(ioc);
>> +        if (!want) {
>> +            free(name);
> 
> g_free
> 
>> +        }
>>            return -1;
>>        }
>>        name[namelen] = '\0';
>>        len -= namelen;
>> -    if (nbd_drop(ioc, len, errp) < 0) {
>> +    if (!want) {
>> +        assert(description);
> 
> NBD_MAX_NAME_SIZE

The description is not bound by NBD_MAX_NAME_SIZE.  The NBD protocol 
DOES document a maximum string size (4k), but we are (so far) not 
actually honoring that limit (our choice for NBD_MAX_NAME_SIZE is 256, 
which is smaller than the NBD protocol limit).

> 
>> +        *description = g_new(char, len + 1);
>> +        if (nbd_read(ioc, *description, len, errp) < 0) {
>> +            error_prepend(errp, "failed to read export description: ");
>> +            nbd_send_opt_abort(ioc);
>> +            free(name);
>> +            free(*description);
> 
> g_free
> 
>> +            return -1;
>> +        }
>> +        (*description)[len] = '\0';
>> +    } else if (nbd_drop(ioc, len, errp) < 0) {
>>            error_prepend(errp, "failed to read export description: ");
>>            nbd_send_opt_abort(ioc);
>>            return -1;
>>        }
>> -    if (!strcmp(name, want)) {
>> +    if (want && !strcmp(name, want)) {
>>            *match = true;
>>        }
>>        return 1;
> 
> one more thing: on fail path, you finally fill output name and description
> with freed pointers. I'd prefer to keep them unchanged in this case, however,
> it's a matter of taste.

Okay, I'll try and be more careful in v2 about not altering the callers 
pointers on failure.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

