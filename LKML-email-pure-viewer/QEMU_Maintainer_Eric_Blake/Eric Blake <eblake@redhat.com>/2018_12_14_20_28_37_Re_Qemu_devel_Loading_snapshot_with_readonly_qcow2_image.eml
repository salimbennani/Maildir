Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by i7-8700 with POP3-SSL;
  15 Dec 2018 13:09:15 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A89CC5805FC
	for <like.xu@linux.intel.com>; Fri, 14 Dec 2018 12:28:56 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Dec 2018 12:28:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A7GtaSxJtWtbs19pP59mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgXKv/+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQMhRWSxPAoS/?=
 =?us-ascii?q?YYUBAeUOMuRXoJXyqVUTtRuzBwuiCezyxjJGmnP5w7Y63v89EQzExgEsA84CvX?=
 =?us-ascii?q?rWodjzKawcUfq1zK7NzTjbYP1Wwzb955TVeR08pfGDR7FwftTMwkQoCQzKlVGQ?=
 =?us-ascii?q?ppbmPzyLzekNqXaU4PdgVe21l24rsR1+oj+qxso1jITCm4wbylfB9SpjwYY1I8?=
 =?us-ascii?q?W1SEp6YdG/DptQtjuaN5dsTsMlWWFotz42yqQYtp6+YSgG0pMnxwTQa/GBboOG?=
 =?us-ascii?q?4QrjWf6PLTtkh39pYq+ziwux/ES61OHxWMm53ExXoidHitXAqGwB2hjJ5sSaRP?=
 =?us-ascii?q?Zx4F2t1SuM2g3d8O1IP0M5mKzGIJA72LEwjIAcsUHbEy/2hkr2iKiWe10g+uip?=
 =?us-ascii?q?8OTnfq7mqoWTN49ylwHyKKMumtawAeggMwgOWXaU+fik2bH94UH0Q69GguArnq?=
 =?us-ascii?q?TaqpzWO8oWq66jDwNI0Isv8xO/AC2n0NQck3kHNlVFeBefgojwJV7OJe34Ae6i?=
 =?us-ascii?q?jFuyjjdk2fTGMqT6DZXKM3jDlqvucqhm60JbzAozzNNf6IxOBrAOPfL+QkvxtN?=
 =?us-ascii?q?3eDh8kPA242efnCNNh1owAXWKDGLOWMKTXsVKT4OIvJO+MZIATuDbgMfQl4OTu?=
 =?us-ascii?q?jXAhlV8HYaapxYcXaGy/Hvl+J0WZYHnsjckbHWYFowozV+jqiFyEUT5OaHe+Ra?=
 =?us-ascii?q?M85jcnCI24CYfPXJyigLuE3HTzI5tNe2oTCkyQCWy6MMKAWuwQc2SUJclulCFC?=
 =?us-ascii?q?UqKuDIoo1BWrvQm9zKJ7L+3S4WoBuJf+kdR4+eDXxiw07iF+WsGU0mWRSDNtk2?=
 =?us-ascii?q?YVAjM7wq175FZw00qOyrRQhfteGtpOofRTXVAhKJTewudmXs30QR/LZdyTSVyr?=
 =?us-ascii?q?EemhVBQwRdI4zttGWF5nEtmmjxbMl36vArQVnrGPLJsvtKvZx3XrKs16zm7byK?=
 =?us-ascii?q?gngB8tRc4ZZkO8gasq2hLSDMbjl0yamu7+eK4Y1S3A3H2OwWqHoAdTVwsmAvaN?=
 =?us-ascii?q?ZmwWekaD9Yex3UjFVbL7TO1/agY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CnAwADEhRchxHrdtBhAx0BAQUBBwUBg?=
 =?us-ascii?q?WWBMYE5gSmDfIh4ixmBYC2ZShQYAxGBS4V8IjgSAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IGw4jDII2BQIDGgEGglwBAgIBAQIgFQ4KKQMDAQIGAQEKGgIiBAICAwFTBg0IA?=
 =?us-ascii?q?QEBgxwBgXgIAQSmI4EvhUCEbIELizMXgUA/gTiCPS6FSII/gjUiApATN5BOCYc?=
 =?us-ascii?q?NikcGGIFdTYdJESaHKJlhgV2BdzMaCBsVgycJixOFXiIxgQccikUqLIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CnAwADEhRchxHrdtBhAx0BAQUBBwUBgWWBMYE5gSmDfIh?=
 =?us-ascii?q?4ixmBYC2ZShQYAxGBS4V8IjgSAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDG?=
 =?us-ascii?q?gEGglwBAgIBAQIgFQ4KKQMDAQIGAQEKGgIiBAICAwFTBg0IAQEBgxwBgXgIAQS?=
 =?us-ascii?q?mI4EvhUCEbIELizMXgUA/gTiCPS6FSII/gjUiApATN5BOCYcNikcGGIFdTYdJE?=
 =?us-ascii?q?SaHKJlhgV2BdzMaCBsVgycJixOFXiIxgQccikUqLIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,354,1539673200"; 
   d="scan'208";a="66903135"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 14 Dec 2018 12:28:55 -0800
Received: from localhost ([::1]:35299 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gXu4t-0001z4-BV
	for like.xu@linux.intel.com; Fri, 14 Dec 2018 15:28:55 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57572)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gXu4i-0001yn-Tt
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 15:28:45 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gXu4f-0005Wi-Kr
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 15:28:44 -0500
Received: from mx1.redhat.com ([209.132.183.28]:42784)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>) id 1gXu4f-0005UL-C6
	for qemu-devel@nongnu.org; Fri, 14 Dec 2018 15:28:41 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 3D98CC067831;
	Fri, 14 Dec 2018 20:28:39 +0000 (UTC)
Received: from [10.10.122.76] (ovpn-122-76.rdu2.redhat.com [10.10.122.76])
	by smtp.corp.redhat.com (Postfix) with ESMTP id A89D75D6AA;
	Fri, 14 Dec 2018 20:28:38 +0000 (UTC)
To: Michael Spradling <michael@os.amperecomputing.com>
References: <20181130144404.GA32091@mswork1>
	<faae3e4a-bce7-849a-b510-1c94ffb03413@redhat.com>
	<20181213183253.GE10456@mswork1>
	<93edfff5-9cc2-8b19-b5a5-48ee4c7c0007@redhat.com>
	<20181214160328.GB20905@mswork1>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <264e8cab-431e-68c6-96ca-711131481a14@redhat.com>
Date: Fri, 14 Dec 2018 14:28:37 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181214160328.GB20905@mswork1>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Fri, 14 Dec 2018 20:28:39 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] Loading snapshot with readonly qcow2 image
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/14/18 10:03 AM, Michael Spradling wrote:

>> Can you combine -s (create a writable temp file) with -l to get what you
>> want?
>>
>> /me tries:

>>
>> I can confirm that 'qemu-nbd -s a' lets me write data that is discarded on
>> disconnect (lsof says a temp file in /var/tmp/vl.XXXXXX was created); and
>> that 'qemu-nbd -l snap a' lets me read the snapshot data. But mixing the two
>> fails, and it would be a nice bug to fix.
> 
> I briefly looked at the code and is seams to be using the same base
> functions as qemu does.  So, if I get this working for the model it
> might also start working for qemu-nbd.

>>
> Ideally, I want to not modify old images or create new images with
> qemu-img, so I have been not modifing qemu-img, but qemu directly
> itself.  My use case will have several snapshots in an image.(say
> 100).  I will then later resume each of these snapshots in a qemu
> session in parallel.  This is why I have gone done the route of modifying
> the temp snapshots file /var/tmp/vl.XXXXX L1 and l2 tables.  My
> understanding is if these are updated and the cluster doesn't exists in
> the temp file the code will then look for it in the backing file.  Still
> researching this area.

Right now, the only thing that qemu reads from a backing file is a guest 
cluster. L1/L2 clusters have to be local to the file that they are 
describing (there is no way to make an L2 table fall back to the 
contents of a different cluster in the backing file).  It boils down to:

Reads:
Does the active layer have an L2 mapping for the current cluster being 
read?  Yes - read that cluster. No - ask the backing layer to provide 
the contents of that cluster (and if copy-on-read is enabled, also write 
those contents in a fresh allocation so that the current layer no longer 
has to defer to the backing).

Writes:
Does the active layer have an L2 mapping for the current cluster 
containing the data being written? Yes - modify that cluster in place. 
No - allocate an new cluster, and if the write was for less than a full 
cluster, also ask the backing layer to provide the contents of the rest 
of the cluster for a copy-on-write action. After the write, the current 
layer no longer has to defer to the backing.

Creating an arbitrary qcow2 file on top of any arbitrary read-only 
backing layer (including 'qemu-nbd -l snap image) should be doable, even 
if verbose (since the "backing file" of a qcow2 BDS node can be any 
other BDS).  Providing some shorter command lines, like making 'qemu-nbd 
-s -l snap image' work so that you don't have to provide your own manual 
overlay, is thus not a high priority.

> 
>>>
>>> I still don't have this working yet and I believe my area of problems is
>>> qcow2_update_snapshot_refcount.  Can anyone explain what this does
>>> exactly.  It seems the function does three different things based on the
>>> value of addend, either -1, 0, 1, but its somewhat unclear.
>>
>> Every cluster of qcow2 is reference-counted, to track which portions of the
>> file are (supposed to be) in use according to following the metadata trails.
>> When internal snapshots are used, this is implemented by incrementing the
>> refcount for each cluster that is reachable both from the snapshot and from
>> the current L1 table (update_snapshot_refcount +1), then when writing to the
>> cluster we break the reference count by writing the new data to a new
>> allocation and decrementing the reference count of the old cluster. When
>> trimming clusters, we decrement the refcount, and if it goes to 0 the
>> cluster can be reused for something else.
> 
> I think I understand this.  That would satifys addend being a -1 or 1.
> I am still unclear why you would call the fuction with addend being 0.

An addend of 0 allows a couple of callers to temporarily have an 
inconsistent image for the sake of optimizing a bulk allocation/freeing, 
followed by informing the refcount table to match, with fewer changes to 
the cluster containing the refcounts than if the algorithm had to 
accurately use -1/+1 on a per-cluster basis.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

