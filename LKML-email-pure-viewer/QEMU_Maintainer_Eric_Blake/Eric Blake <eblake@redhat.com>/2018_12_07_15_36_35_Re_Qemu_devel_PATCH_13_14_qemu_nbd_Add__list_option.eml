Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:50:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A40485804F7
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 07:38:07 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 07:38:07 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Aah6inBQqSaYiVNSKUNTNTEZXTtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZByOt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBD+0CM+hWoYbyqFkBogexCwexHOPiyD1Gi3Dr0aA0z+guDxrG0Rc8H98Mqn?=
 =?us-ascii?q?nYsMn5OakQXO2z0aLGzS/Db/RT2Trl54bIaBEhru2RVr9tdcre00ovGB3YhViX?=
 =?us-ascii?q?t4PqJDeV2f4Os2eF9OdgT/yghHMnqw5rvjij3Nsjio7Mho8MzF3P6Ct3wIEwJd?=
 =?us-ascii?q?KiSU57Z8apEJ9Rty6BKYt2Q9kiQ31ytCY90L0Gtoa3fDEUx5Qi2h7TcfuHc5KH?=
 =?us-ascii?q?4h/lSe2fIi94iWp7dL6jhBu+61WsxvD/W8WuzlpHoCpInsPRun0PzxDf9NSLR/?=
 =?us-ascii?q?9n8ku81zuDyRrf5vxHLE06j6bXNZ0sz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vzjYrXnvZ+cK5R0hhvxMqQoh8yzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7kb?=
 =?us-ascii?q?PVvI3HKckYvKK1HQFY34Y55xqiDTqqyNEYkmMGLFJBdhKHlY/pO1TWLfDhE/i/?=
 =?us-ascii?q?hkmsnC52yP/YIL3uHJHNImHYn7fmYLZ97VJTxxQozdxY45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFhs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+SXYo8VvzD9K/cj5/7z?=
 =?us-ascii?q?l3M5nkUdfaax0ZsNdH+4BuhmI1meYXf0htcBEGQKsRQkQO3llV2PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZjMON1aXDH29d5mYQ+xeL2WWI9R9iXoC?=
 =?us-ascii?q?Ur6uTZJn0guh8wrzyr5iJ+yT/TUEtJXlz59s6ujO0B0/6zFwXPmbyHyHGmR9n2?=
 =?us-ascii?q?cUQG0v0aVi5EBw1FqHlLJ1muFVDsB74fRPXQEnc5nGwLthFtrwVwndK8qPU0us?=
 =?us-ascii?q?Wd68ADs8He42luEKakp8HtS4xivO2iesH6QSifmsC5057Lnf3mm5c9hmxnPL0r?=
 =?us-ascii?q?U6iEcOXMpVKXChlLx4sQPUAtiN2w+AmqO3MKgRwiPJ3GGEy2WIoQdfSgE6GfHc?=
 =?us-ascii?q?UHUCI0fbs9n9zkXFSbCoFPIgKAQXmuCYLa4fR8fohh1sQP7gNZyKbmi1kmS9LQ?=
 =?us-ascii?q?yFyrOFcMzhfGBLj3aVM1QNjw1GpSXODgM5HCr05juGVDE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CQAAAfkwpcmBHrdtBgAxsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgWWBMSqBD4Epg3qIeIsygWAtmUIUGAMRgUuGEiI4EgEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBAiAVDgopAwMBAgYBAQoYA?=
 =?us-ascii?q?gIiBAICAwFTBgEMCAEBAYMcAYF5CAEEpUOBL4VAhG6BC4sXF4FAP4ERJ4JrhDs?=
 =?us-ascii?q?wXYI9glcCiRMShhZGNpAwCYcGij8GGIIphzoQh0WJEJALgV2BdjMaCBsVO4JsC?=
 =?us-ascii?q?YIeF38BDodQhV4iMYEHHIgLR4F3AQE?=
X-IPAS-Result: =?us-ascii?q?A0CQAAAfkwpcmBHrdtBgAxsBAQEBAwEBAQcDAQEBgWWBMSq?=
 =?us-ascii?q?BD4Epg3qIeIsygWAtmUIUGAMRgUuGEiI4EgEDAQEBAQEBAgETAQEBAQEICwsGG?=
 =?us-ascii?q?w4jDII2BQIDGgEGglsBAQEBAgEBAiAVDgopAwMBAgYBAQoYAgIiBAICAwFTBgE?=
 =?us-ascii?q?MCAEBAYMcAYF5CAEEpUOBL4VAhG6BC4sXF4FAP4ERJ4JrhDswXYI9glcCiRMSh?=
 =?us-ascii?q?hZGNpAwCYcGij8GGIIphzoQh0WJEJALgV2BdjMaCBsVO4JsCYIeF38BDodQhV4?=
 =?us-ascii?q?iMYEHHIgLR4F3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55974302"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 07:38:06 -0800
Received: from localhost ([::1]:46773 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVICc-0004hs-1t
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 10:38:06 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:58167)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gVIBR-0003is-Ha
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 10:36:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gVIBP-00041R-8R
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 10:36:53 -0500
Received: from mx1.redhat.com ([209.132.183.28]:52656)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gVIBI-0003NE-CP; Fri, 07 Dec 2018 10:36:44 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 0F0A9C01F61B;
	Fri,  7 Dec 2018 15:36:42 +0000 (UTC)
Received: from [10.10.125.104] (ovpn-125-104.rdu2.redhat.com [10.10.125.104])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 49F928279C;
	Fri,  7 Dec 2018 15:36:36 +0000 (UTC)
To: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>
References: <20181130220344.3350618-1-eblake@redhat.com>
	<20181130220344.3350618-14-eblake@redhat.com>
	<1827042e-ddf6-47cd-52b3-403e37c7fa1f@virtuozzo.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <ce5520fd-11bf-e927-49c9-1e8422d053f3@redhat.com>
Date: Fri, 7 Dec 2018 09:36:35 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <1827042e-ddf6-47cd-52b3-403e37c7fa1f@virtuozzo.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Fri, 07 Dec 2018 15:36:42 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 13/14] qemu-nbd: Add --list option
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "nsoffer@redhat.com" <nsoffer@redhat.com>,
	"jsnow@redhat.com" <jsnow@redhat.com>,
	"rjones@redhat.com" <rjones@redhat.com>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/7/18 6:48 AM, Vladimir Sementsov-Ogievskiy wrote:
> 01.12.2018 1:03, Eric Blake wrote:
>> We want to be able to detect whether a given qemu NBD server is
>> exposing the right export(s) and dirty bitmaps, at least for
>> regression testing.  We could use 'nbd-client -l' from the upstream
>> NBD project to list exports, but it's annoying to rely on
>> out-of-tree binaries; furthermore, nbd-client doesn't necessarily
>> know about all of the qemu NBD extensions.  Thus, we plan on adding
> 
> ha, in this patch, not plan but add:)

Yep, copy-and-paste of a common prefix across multiple patches. I'll 
probably let the text diverge in v2 to be a bit more accurate per-patch, 
at the loss of the nice copy-and-paste.

>> I debated about adding this functionality to something akin to
>> 'qemu-img info' - but that tool does not readily lend itself
>> to connecting to an arbitrary NBD server without also tying to
>> a specific export (I may, however, still add ImageInfoSpecificNBD
>> for reporting the bitmaps available when connecting to a single
>> export).  And, while it may feel a bit odd that normally
>> qemu-nbd is a server but 'qemu-nbd -L' is a client, we are not
>> really making the qemu-nbd binary that much larger, because
>> 'qemu-nbd -c' has to operate as both server and client
>> simultaneously across two threads when feeding the kernel module
>> for /dev/nbdN access.
>>
>> Sample output:
>> $ qemu-nbd -L
>> exports available: 1
>>    export: ''
>>     size:  65536
>>     flags: 0x4ed ( flush fua trim zeroes df cache )
>>     min block: 512
>>     opt block: 4096
>>     max block: 33554432
>>     available meta contexts: 1
>>      base:allocation
> 
> don't you plan to bind this all to QAPI and expose in json?

No. As explained above, QAPI is very much centered on per-BDS actions, 
while this action is a per-server action (where many servers have only 
one export, but it is also possible to have a server with 0 exports or a 
plurality of exports).  I _can't_ fit this into query-block's ImageInfo 
details about a block device, because we don't have a way of stating 
'connect to this arbitrary server, create an unspecified number of block 
devices, tell me about each of them, and then throw them all away 
because we only wanted the info about what the server made available'. 
The same is true for gluster or other remote access block devices - the 
QMP commands pre-suppose you already know WHICH specific resource you 
are accessing, rather than providing a way for you to query the remote 
server about ALL resources available but without actually selecting 
those resources.

I'm open to ideas about a new QMP command to do such a query, but who 
would be the client?  A management app that wants to hotplug a new NBD 
device to a running guest can run 'qemu-nbd --list' just as easily as 
they could run a new QMP command to learn what the server is offering. 
Without a strong reason of a client that would need this in QMP, I don't 
see the point in adding it to the qemu binary.


>> +++ b/qemu-nbd.c
>> @@ -76,6 +76,7 @@ static void usage(const char *name)
>>    {
>>        (printf) (
>>    "Usage: %s [OPTIONS] FILE\n"
>> +"  or:  %s -L [OPTIONS]\n"
>>    "QEMU Disk Network Block Device Server\n"
> 
> Do anyone know, why thunderbird add additional space to the lines started from space when quoting,
> which breaks indentation in quoted patches? How to fix it? I use plain text.

It's a known thunderbird display bug (or more specifically, something 
that thunderbird does to avoid even worse whitespace corruption later in 
its pipeline). It shows up in your reply window, but NOT in the 
recipients' view.  I've been dealing with bad formatting in thunderbird 
for years now, and this latest bug of displaying too many spaces on 
quoted reply lines that begin with whitespace (which in turn makes lines 
starting with - or + appear indented wrong) is certainly less annoying 
than their previous bug of converting all leading whitespace in the 
quoted reply to a single space.

> 
>>    "\n"
>>    "  -h, --help                display this help and exit\n"
>> @@ -97,6 +98,7 @@ static void usage(const char *name)
>>    "  -P, --partition=NUM       only expose partition NUM\n"
>>    "\n"
>>    "General purpose options:\n"
>> +"  -L, --list                list NBD exports visible to client\n"
> 
> hm. I think, user who things that qemu-nbd is only a server, can understand this as
> "dry run, don't actually start the server, but only list exports, which will be
> available to clients, keeping in mind all other specified options".
> 
> so, may be, "list remote NBD server exports and options" or something like this?

There's line lengths to worry about, but yes, I agree that adding 
something to make it a bit more obvious that this option is special is 
worth the word-smithing attempts.

>> +    printf("exports available: %d\n", rc);
>> +    for (i = 0; i < rc; i++) {
>> +        printf(" export: '%s'\n", list[i].name);
>> +        if (list[i].description && *list[i].description) {
>> +            printf("  description: %s\n", list[i].description);
>> +        }
>> +        if (list[i].flags & NBD_FLAG_HAS_FLAGS) {
>> +            printf("  size:  %" PRIu64 "\n", list[i].size);
> 
> size is available only if NBD_FLAG_HAS_FLAGS? at least, accordingly to code,
> in case 0: size is unrelated to flags.

case 0: code is for oldstyle servers. There are fewer and fewer of those 
even worth worrying about (I used nbdkit -o to test that part of my 
code, and we recently ripped oldstyle out of the qemu server); the ones 
that remain happen to set NBD_FLAG_HAS_FLAGS even for oldstyle.  I'm not 
too worried if our --list output fails to list size for an oldstyle 
server that did not set NBD_FLAG_HAS_FLAGS.

For all other servers, NBD_FLAG_HAS_FLAGS is a good witness of whether 
NBD_OPT_INFO was recognized, and there, size is indeed not present 
unless NBD_OPT_INFO worked.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

