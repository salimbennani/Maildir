Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:50:50 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8F26E5803E4
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 08:22:42 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga001-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 08:22:42 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsLtqDxQ+9wPH145cqixMaNxAWtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZByFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZHI28?=
 =?us-ascii?q?YYsBD+0CM+hWoYbyqFkBogexCwexHOPiyD1Gi3Dr0aA0z+guDxrG0Rc8H98Mqn?=
 =?us-ascii?q?nYsMn5OakQXO2z0aLGzS/Db/RT2Trl54bIaBEhru2RVr9tdcre00ovGB3YhViX?=
 =?us-ascii?q?t4PqJDeV2f4Os2eF9OdgT/yghHMnqw5rvjij3Nsjio7Mho8MzF3P6Ct3wIEwJd?=
 =?us-ascii?q?KiSU57Z8apEJ9Rty6BKYt2Q9kiQ31ytCY90L0Gtoa3fDEUx5Qi2h7TcfuHc5KH?=
 =?us-ascii?q?4h/lSe2fIi94iWp7dL6jhBu+61WsxvD/W8WuzlpHoCpInsPRun0PzxDf9NSLR/?=
 =?us-ascii?q?9n8ku81zuDyRrf5vxHLE06j6bXNZ0sz7gtnZQJq0vDBDX5mEDuga+WaEok/u+o?=
 =?us-ascii?q?5vzjYrXnvZ+cK5R0hhvxMqQoh8yzG+M4MhIBX2SD+OS80qPs/VHhTblUkvE7kb?=
 =?us-ascii?q?PVvI3HKckYvKK1HQFY34Y55xqiDTqqyNEYkmMGLFJBdhKHlY/pO1TWLfDhE/i/?=
 =?us-ascii?q?hkmsnC52yP/YIL3uHJHNImHYn7fmYLZ97VJTxxQozdxY45JUC7IBL+zpVk7+qd?=
 =?us-ascii?q?zVFhs5Mw2yw+b6B9RxzIIeWWSTAqCHNKPeq0OH5uUqI+SXYo8VvzD9K/cj5/7z?=
 =?us-ascii?q?l3M5nkUdfaax0ZsNdH+4BuhmI1meYXf0htcBEGQKsRQkQO3llV2PSjpTZ3e0X6?=
 =?us-ascii?q?Ih6TA3EoOmDYHfRo+zhLyNxju0HppTZjMON1aXDH29d5mYQ+xeL2WWI9R9iXoC?=
 =?us-ascii?q?Ur6uTZJn0guh8wrzyr5iJ+yT/TUEtJXlz59s6ujO0B0/6zFwXPmbyHyHGmR9n2?=
 =?us-ascii?q?cUQG0v0aVi5EBw1FqHlLJ1muFVDsB74fRPXQEnc5nGwLthFtrwVwndK8qPU0us?=
 =?us-ascii?q?Wd68ADs8He42lvYIb1xwCp2ZjhHF3Ce0ArQV3+iCApAu/7OaxHjwIcVw1XfN1I?=
 =?us-ascii?q?E/jkM6X8xdJ2rgjal6oUybHoPMjgCVmrincYwa2yjC8nrFynCB+AlBXQttFK/B?=
 =?us-ascii?q?WnscTk3Rq9v/+wXFVbD9J64gN15s08+JYoFOY97kxQFLTvPqO9n2eW+9m26sQx?=
 =?us-ascii?q?2Pw+XfP8LRZ2wB0XCFWwA/mAcJ8CPDbFBmCw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CQAACHnQpcmBHrdtBgAxsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgWWBMYE5gSmDeoh4izKBYC18mEYUGAMRgUuGEiI4EgEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBAQEICwsGGw4jDII2BQIDGgEGglsBAQEBAgEBAiAEEQ4BCSkDAgEBAgYBA?=
 =?us-ascii?q?QoYAgIiBAICAwFTBgEMBgIBAQGDHAGBeQgBBKVWfDODKoIWhG6BC4p5AR0XgUA?=
 =?us-ascii?q?/gREngW1JBy6ESn6CPYJXAoklhhZGNpAwCYcGij8GGIIphzoQh0WJEJALgV2Bd?=
 =?us-ascii?q?jMaCBsVO4JsCYIbAxeIXoVeIjGBBxyHfFaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0CQAACHnQpcmBHrdtBgAxsBAQEBAwEBAQcDAQEBgWWBMYE?=
 =?us-ascii?q?5gSmDeoh4izKBYC18mEYUGAMRgUuGEiI4EgEDAQEBAQEBAgETAQEBAQEICwsGG?=
 =?us-ascii?q?w4jDII2BQIDGgEGglsBAQEBAgEBAiAEEQ4BCSkDAgEBAgYBAQoYAgIiBAICAwF?=
 =?us-ascii?q?TBgEMBgIBAQGDHAGBeQgBBKVWfDODKoIWhG6BC4p5AR0XgUA/gREngW1JBy6ES?=
 =?us-ascii?q?n6CPYJXAoklhhZGNpAwCYcGij8GGIIphzoQh0WJEJALgV2BdjMaCBsVO4JsCYI?=
 =?us-ascii?q?bAxeIXoVeIjGBBxyHfFaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55365578"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 08:22:41 -0800
Received: from localhost ([::1]:46968 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVItl-0004aC-4p
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 11:22:41 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:43843)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gVIri-0003Ii-AM
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 11:20:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gVIrh-0000hl-6K
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 11:20:34 -0500
Received: from mx1.redhat.com ([209.132.183.28]:47930)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gVIra-00008h-LP; Fri, 07 Dec 2018 11:20:26 -0500
Received: from smtp.corp.redhat.com (int-mx05.intmail.prod.int.phx2.redhat.com
	[10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id F2C71309174F;
	Fri,  7 Dec 2018 16:20:25 +0000 (UTC)
Received: from [10.10.125.104] (ovpn-125-104.rdu2.redhat.com [10.10.125.104])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 6F5F86293B;
	Fri,  7 Dec 2018 16:20:21 +0000 (UTC)
To: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>,
	qemu-devel@nongnu.org, qemu-block@nongnu.org
References: <1544176849-899477-1-git-send-email-andrey.shinkevich@virtuozzo.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <5c525644-cc38-9d0b-c591-6d75315e25cc@redhat.com>
Date: Fri, 7 Dec 2018 10:20:20 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <1544176849-899477-1-git-send-email-andrey.shinkevich@virtuozzo.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.41]);
	Fri, 07 Dec 2018 16:20:26 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v4] qemu-img info lists bitmap directory
 entries
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: kwolf@redhat.com, vsementsov@virtuozzo.com, armbru@redhat.com,
	mreitz@redhat.com, den@openvz.org, John Snow <jsnow@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/7/18 4:00 AM, Andrey Shinkevich wrote:
> In the 'Format specific information' section of the 'qemu-img info'
> command output, the supplemental information about existing QCOW2
> bitmaps will be shown, such as a bitmap name, flags and granularity:
> 
> image: /vz/vmprivate/VM1/harddisk.hdd
> file format: qcow2
> virtual size: 64G (68719476736 bytes)
> disk size: 3.0M
> cluster_size: 1048576
> Format specific information:
>      compat: 1.1
>      lazy refcounts: true
>      bitmaps:
>          [0]:
>              flags:
>                  [0]: in-use
>                  [1]: auto
>              name: back-up1
>              unknown flags: 4

I'm guessing you doctored an image in a hex-editor to get this 
particular output?

>              granularity: 65536
>          [1]:
>              flags:
>                  [0]: in-use
>                  [1]: auto
>              name: back-up2
>              unknown flags: 8
>              granularity: 65536
>      refcount bits: 16
>      corrupt: false
> 
> Signed-off-by: Andrey Shinkevich <andrey.shinkevich@virtuozzo.com>
> Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
> ---
> v4:
> Unknown flags are checked with the mask BME_RESERVED_FLAGS.
> The code minor refactoring was made.
> 

>   
> block/qcow2-bitmap.c | 56 ++++++++++++++++++++++++++++++++++++++++++++++++++++
>   block/qcow2.c        |  8 ++++++++
>   block/qcow2.h        |  2 ++
>   qapi/block-core.json | 40 ++++++++++++++++++++++++++++++++++++-
>   4 files changed, 105 insertions(+), 1 deletion(-)

I'm assuming John will merge this as a bitmap-related patch; make sure 
he is in cc if you send a v5 (adding now).

> +++ b/block/qcow2.c
> @@ -4270,6 +4270,12 @@ static ImageInfoSpecific *qcow2_get_specific_info(BlockDriverState *bs)
>               .refcount_bits      = s->refcount_bits,
>           };
>       } else if (s->qcow_version == 3) {
> +        Qcow2BitmapInfoList *bitmaps;
> +        Error *local_err = NULL;
> +        bitmaps = qcow2_get_bitmap_info_list(bs, &local_err);
> +        if (local_err != NULL) {
> +            error_report_err(local_err);
> +        }

Ouch. Calling error_report_err() doesn't always work in QMP context; 
better would be to plumb Error **errp back up to the caller, if getting 
this specific information can fail and we want the overall query-block 
to fail.  Or, we could decide that failure to get bitmap info is 
non-fatal, and that it was just a best-effort attempt to get more info, 
where we then ignore the failure, rather than trying to report it 
incorrectly.


> +++ b/qapi/block-core.json
> @@ -69,6 +69,8 @@
>   # @encrypt: details about encryption parameters; only set if image
>   #           is encrypted (since 2.10)
>   #
> +# @bitmaps: list of qcow2 bitmaps details (since 4.0)
> +#
>   # Since: 1.7
>   ##
>   { 'struct': 'ImageInfoSpecificQCow2',
> @@ -77,7 +79,8 @@
>         '*lazy-refcounts': 'bool',
>         '*corrupt': 'bool',
>         'refcount-bits': 'int',
> -      '*encrypt': 'ImageInfoSpecificQCow2Encryption'
> +      '*encrypt': 'ImageInfoSpecificQCow2Encryption',
> +      '*bitmaps': ['Qcow2BitmapInfo']

Hmm. You're omitting this field both if there are 0 bitmaps, and when it 
was a version 2 image. Is it worth including this field as a 0-length 
array when there are no bitmaps but when the image format is new enough 
to support them, or are we happy with the idea of only including the 
field when it has at least one bitmap?  The difference is whether the 
calling app can explicitly learn that there are no bitmaps (0-length 
reply) vs. the ambiguity of omitting it from the reply (missing might 
mean no bitmaps, or an error in trying to report the bitmaps, or an 
older qemu that didn't know how to report bitmaps).


> +##
> +# @Qcow2BitmapInfo:
> +#
> +# Qcow2 bitmap information.
> +#
> +# @name: the name of the bitmap
> +#
> +# @granularity: granularity of the bitmap in bytes
> +#
> +# @flags: flags of the bitmap
> +#
> +# @unknown-flags: unspecified flags if detected
> +#
> +# Since: 4.0
> +##
> +{ 'struct': 'Qcow2BitmapInfo',
> +  'data': {'name': 'str', 'granularity': 'uint32',
> +           'flags': ['Qcow2BitmapInfoFlags'],
> +           '*unknown-flags': 'uint32' } }

Here, you said flags will always be present, even if it is a 0-length 
array. Did you test the case where an on-disk bitmap has neither 
'in-use' nor 'auto' set (where get_bitmap_info_flags() returns NULL) to 
ensure that it indeed results in a 0-length reply and not a crash?

Otherwise, it's looking fairly good.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

