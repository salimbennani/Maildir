Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 02 Dec 2018 19:23:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5E314580479
	for <like.xu@linux.intel.com>; Fri, 30 Nov 2018 14:10:15 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Nov 2018 14:10:15 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2GSCghO96K77P0uP70ol6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0IvX8rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhc5+jKxGuBKspR5xzoHJbIybKPZxYLjdcMgGSWZdRMtdSzBNDp+g?=
 =?us-ascii?q?Y4YJEuEPPfxYr474p1YWohW+HwisC//ywTJVgn/5x6463Po8GgzBwgMvBNYOv2?=
 =?us-ascii?q?7XrNrrL6oSS/66w7TIzTrZc/Nawyvy6I/Nch04p/yHQLF+cdLJxEUxCw/IjU+c?=
 =?us-ascii?q?pZH4Mz6WzOgBrWaW4up6We6yiWMrsx99riSry8s2l4XEiJwZxkrZ+Sh6zos5P8?=
 =?us-ascii?q?O0RU19bNW5CpVfrTuaOJFzQs46Q2FnpiI6yroetJ6/fSgK04gnxwXFZ/yIdYiI?=
 =?us-ascii?q?/wjvVOGLITd3nH5lebS/iAiu8UW41OHwSsq53ExXoiZYkdTArG4B2hLT58SdV/?=
 =?us-ascii?q?dw/F+t2TOV2ADS7uFEL1o0la3eK5M5274/iJ8TsVnaEiDrhkr2krGZdkE99uez?=
 =?us-ascii?q?7OTnf7PmqYOCOI9vjQ3+NqUums+hDugiPQkOQnCW+eC91L3l4E34T69Gjvwwkq?=
 =?us-ascii?q?nFrp/aId4XqbK+Aw9QyYsj7RG/DzGp0NQegHkLNlVFeAiIj4TxIVHBPOj4Deuj?=
 =?us-ascii?q?g1SriDprw/HGPr7/DZnXIXnDjazsfbJ8605a1QoywspT55NSCrEdPv3zXlX9u8?=
 =?us-ascii?q?DfDh88YESJxf36AoB9yp8GQjDIRauYK7/J91mP4O0pPq+LfoBSvT/8L/0s4bnp?=
 =?us-ascii?q?lWM4nlkGOrCk2IZSZH2mE/A1HkOCfHC5h94AFXsN7BMzSfGvhFCcXDoWfXurQq?=
 =?us-ascii?q?8n+hk9D4SpC5qFQZqi16ec1iW2FYEDe2ZdF1qXGm3pfYjXZ/BZcS+XP4ptnyIJ?=
 =?us-ascii?q?UZCnTIku0wzosxX1mJR9Ke+B1zcZvtrJ0NF26qWHmBs2/D95J96Q32GEUyd/mW?=
 =?us-ascii?q?ZeFGx+57x2vUEokgTL6qN/mfENTdE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AkAAAttAFchxHrdtBjHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGBMIJijBFfpQGBcxQYFId2IjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I?=
 =?us-ascii?q?2BQIDGAmCXAMDAQJDCikDAwECBgEBSAgDAVMZBYMcggIBBKg5hUCEbIwaF4FAP?=
 =?us-ascii?q?4ERh32FcQKJIwqFfXxQjz8JkSwLGIlZh0aYXYFGgg0zGggbFYMngicXjjwiMYE?=
 =?us-ascii?q?HHIstgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AkAAAttAFchxHrdtBjHQEBBQEHBQGBUQgBCwGBMIJijBF?=
 =?us-ascii?q?fpQGBcxQYFId2IjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOL4I2BQIDGAmCXAMDA?=
 =?us-ascii?q?QJDCikDAwECBgEBSAgDAVMZBYMcggIBBKg5hUCEbIwaF4FAP4ERh32FcQKJIwq?=
 =?us-ascii?q?FfXxQjz8JkSwLGIlZh0aYXYFGgg0zGggbFYMngicXjjwiMYEHHIstgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,300,1539673200"; 
   d="scan'208";a="54082989"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 30 Nov 2018 14:10:14 -0800
Received: from localhost ([::1]:34850 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gSqzF-00024I-Lf
	for like.xu@linux.intel.com; Fri, 30 Nov 2018 17:10:13 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:55955)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gSqtI-0004Nw-15
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 17:04:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gSqtG-0004BH-8d
	for qemu-devel@nongnu.org; Fri, 30 Nov 2018 17:04:03 -0500
Received: from mx1.redhat.com ([209.132.183.28]:50468)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gSqtA-0003T2-Fl; Fri, 30 Nov 2018 17:03:56 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D1CD3307D84D;
	Fri, 30 Nov 2018 22:03:55 +0000 (UTC)
Received: from red.redhat.com (ovpn-117-105.phx2.redhat.com [10.3.117.105])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 4607B1057072;
	Fri, 30 Nov 2018 22:03:55 +0000 (UTC)
From: Eric Blake <eblake@redhat.com>
To: qemu-devel@nongnu.org
Date: Fri, 30 Nov 2018 16:03:32 -0600
Message-Id: <20181130220344.3350618-4-eblake@redhat.com>
In-Reply-To: <20181130220344.3350618-1-eblake@redhat.com>
References: <20181130220344.3350618-1-eblake@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Fri, 30 Nov 2018 22:03:55 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH 03/14] qemu-nbd: Fail earlier for -c/-d on
 non-linux
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: nsoffer@redhat.com, vsementsov@virtuozzo.com, jsnow@redhat.com,
	rjones@redhat.com, qemu-block@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Connecting to a /dev/nbdN device is a Linux-specific action.
We were already masking -c and -d from 'qemu-nbd --help' on
non-linux.  However, while -d fails with a sensible error
message, it took hunting through a couple of files to prove
that.  What's more, the code for -c doesn't fail until after
it has created a pthread and tried to open a device - possibly
even printing an error message with %m on a non-Linux platform
in spite of the comment that %m is glibc-specific.  Make the
failure happen sooner, then get rid of stubs that are no
longer needed because of the early exits.

While at it: tweak the blank newlines in --help output to be
consistent, whether or not built on Linux.

Signed-off-by: Eric Blake <eblake@redhat.com>
---
 nbd/client.c | 18 +-----------------
 qemu-nbd.c   | 22 ++++++++++++++++++++--
 2 files changed, 21 insertions(+), 19 deletions(-)

diff --git a/nbd/client.c b/nbd/client.c
index b667a1b56fd..0be89f9e641 100644
--- a/nbd/client.c
+++ b/nbd/client.c
@@ -1029,23 +1029,7 @@ int nbd_disconnect(int fd)
     return 0;
 }

-#else
-int nbd_init(int fd, QIOChannelSocket *ioc, NBDExportInfo *info,
-	     Error **errp)
-{
-    error_setg(errp, "nbd_init is only supported on Linux");
-    return -ENOTSUP;
-}
-
-int nbd_client(int fd)
-{
-    return -ENOTSUP;
-}
-int nbd_disconnect(int fd)
-{
-    return -ENOTSUP;
-}
-#endif
+#endif /* __linux__ */

 int nbd_send_request(QIOChannel *ioc, NBDRequest *request)
 {
diff --git a/qemu-nbd.c b/qemu-nbd.c
index e169b839ece..55e29bd9a7e 100644
--- a/qemu-nbd.c
+++ b/qemu-nbd.c
@@ -43,6 +43,12 @@
 #include "trace/control.h"
 #include "qemu-version.h"

+#ifdef __linux__
+#define HAVE_NBD_DEVICE 1
+#else
+#define HAVE_NBD_DEVICE 0
+#endif
+
 #define SOCKET_PATH                "/var/lock/qemu-nbd-%s"
 #define QEMU_NBD_OPT_CACHE         256
 #define QEMU_NBD_OPT_AIO           257
@@ -98,11 +104,11 @@ static void usage(const char *name)
 "                            specify tracing options\n"
 "  --fork                    fork off the server process and exit the parent\n"
 "                            once the server is running\n"
-#ifdef __linux__
+#if HAVE_NBD_DEVICE
+"\n"
 "Kernel NBD client support:\n"
 "  -c, --connect=DEV         connect FILE to the local NBD device DEV\n"
 "  -d, --disconnect          disconnect the specified device\n"
-"\n"
 #endif
 "\n"
 "Block device options:\n"
@@ -236,6 +242,7 @@ static void termsig_handler(int signum)
 }


+#if HAVE_NBD_DEVICE
 static void *show_parts(void *arg)
 {
     char *device = arg;
@@ -321,6 +328,7 @@ out:
     kill(getpid(), SIGTERM);
     return (void *) EXIT_FAILURE;
 }
+#endif /* HAVE_NBD_DEVICE */

 static int nbd_can_accept(void)
 {
@@ -815,6 +823,7 @@ int main(int argc, char **argv)
     }

     if (disconnect) {
+#if HAVE_NBD_DEVICE
         int nbdfd = open(argv[optind], O_RDWR);
         if (nbdfd < 0) {
             error_report("Cannot open %s: %s", argv[optind],
@@ -828,6 +837,10 @@ int main(int argc, char **argv)
         printf("%s disconnected\n", argv[optind]);

         return 0;
+#else
+        error_report("Kernel /dev/nbdN support not available");
+        exit(EXIT_FAILURE);
+#endif
     }

     if ((device && !verbose) || fork_process) {
@@ -1006,6 +1019,7 @@ int main(int argc, char **argv)
     nbd_export_set_description(exp, export_description);

     if (device) {
+#if HAVE_NBD_DEVICE
         int ret;

         ret = pthread_create(&client_thread, NULL, nbd_client_thread, device);
@@ -1013,6 +1027,10 @@ int main(int argc, char **argv)
             error_report("Failed to create client thread: %s", strerror(ret));
             exit(EXIT_FAILURE);
         }
+#else
+        error_report("Kernel /dev/nbdN support not available");
+        exit(EXIT_FAILURE);
+#endif
     } else {
         /* Shut up GCC warnings.  */
         memset(&client_thread, 0, sizeof(client_thread));
-- 
2.17.2


