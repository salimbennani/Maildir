Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:57:38 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C06F7580375;
	Mon,  3 Dec 2018 12:24:47 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 03 Dec 2018 12:24:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ApGqk5RZ7PdmIm3CmpM6QB5L/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm7Zh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTy9PDJ68?=
 =?us-ascii?q?YYURAeQOP+hYoJX6qVQBohW+HhGsCeH0xz9UhHL7x7E23v49HQzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKofTeS1w7fHzDrZafNZxCny6JLVeR4vvPGNXa5/ccnMwkQoDQzFikuf?=
 =?us-ascii?q?qIP/MDOTy+sCrXKb4/BgVe61lmEntgFwrSSsxso3jonJh4QVyk3L9CljwYY1I8?=
 =?us-ascii?q?G4R1B/YdK+DJRQsCSaOpJwT8g/QG9ooD43xqMatZO/ZiQG1ZoqywDFZ/CacIWE?=
 =?us-ascii?q?/gjvWeeTLDtgmX5odr2yiwyv/UWuxeDwTNS43VhLoyZfjNXBuXYA3AHJ5MedUP?=
 =?us-ascii?q?ty5EKh1C6P1w/N7uFEJlg5lbTUK5E/2L48jJkTvlrZHi/whkr2iLWadkI++uin?=
 =?us-ascii?q?8+jnY7PmqYGAN4JslA3yLqAjltaiDek2LAQCRXWX9Oeg2LH5/ED0Qq1Gjvgsna?=
 =?us-ascii?q?nYtJDaK94bpqm8AwJN1oYj6hC/Dyqp0dgBnnkIMkhFeBSZgIjtIl3OJ/75DfGh?=
 =?us-ascii?q?jFS2izpr2f/GMaP7ApnXLXjMjq3hfbBj5E5Y0gYzyspf551MBrEbPP3zQlPxtM?=
 =?us-ascii?q?DfDhIhNwy0wuXnB8tn2oIRRGKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mVUFZ6mmwYMXaGykHvRhO0iZYWDjgtYdEWgQuQoyVuzqiECYXj5VaHa/RK?=
 =?us-ascii?q?Y85jA9CIK7AobPXIGtgLqd3CilGp1afHxJCleJEX3wbYWLR+8MaD6OIs9mijEE?=
 =?us-ascii?q?V7+hRJE72RGtsw/6zbxnLu3P9y0ctJLj0sV15uLJmREz8zx0E9qS02WXQ25omW?=
 =?us-ascii?q?MIQic83Lpjrkxl1leDza94juRCGtxI5/NJVQQ6OYTGz+NgCdD/QQbBftaPSFa7?=
 =?us-ascii?q?TdSqGzAxTtQtw9AQZ0ZxAcmtjhfG3yCyGb8ai6SLBIAo8qLbx3XxJNxyy3Dc2K?=
 =?us-ascii?q?kljlkpWM1PNWK9i6579gjTAZPJkkqDm6arc6QcwDDC9GOZwWWSu0FYVRZ6Ub/Z?=
 =?us-ascii?q?UnAHekvWsdP561vfQLC0F7QoLBFNyc6YJatMcd3mk1NGSPDnONTdZmKxn3y9BR?=
 =?us-ascii?q?KJxrOKcYrrdH8R3CTbCEgYjQ8T+WyKOhQ5Bieku2jeFiBhFUrzY0Pw9ulzsG60?=
 =?us-ascii?q?QVUqzw6UdUFh16C6+hgOhfOCTfMexbYEuCYnqzVpE1exxdPWC9ycpwV/eKVQe8?=
 =?us-ascii?q?8y4FBC1WjBrQxyIoSgL7x+hl4Zawl3o0Lu1xBwCoVckcgrrGkmzBZoJaKfylNB?=
 =?us-ascii?q?czKY3Zb/OrDMLmny/Rava7PZ213E0daW/LsP5+o8q1n5oA6pEU8i+W1909ZJy3?=
 =?us-ascii?q?uc+onKDA0KXJ3rVkY46Rd7qK/aYyUn/IzUyGBjPrOysj/B3NIpGvAoyhKhf9dZ?=
 =?us-ascii?q?LaOFGxX+E8wcB8iyNuMqn0KlYQ4DPOBX7KQ0Jd+pd+Oa2K63O+ZthDKnjXld7I?=
 =?us-ascii?q?9hyE6N9ip8RfTO35YK2PyY2gqHVzHhjFauqMz3mIZEZS0MEWq70yTrGIlRZqhq?=
 =?us-ascii?q?d4YRFWiuO9G3xsl5h5P1QX5Y9UKsCEkc2MC0fhqedVr90hNK1UQWuHCohTG3zz?=
 =?us-ascii?q?hpnD43tKqf2yrOzv/mdBoGPG5LWWZjgU3tIYiyk9AVQkyoYxI1mxui4Ebw37Jb?=
 =?us-ascii?q?q7hnL2nPXUdIeDD7LmFjUqeqtruOedVP6I4usShMVOS8YFaaSqPyohcA0iPjGX?=
 =?us-ascii?q?deyy4/dz2wppr5mBl6gnqHLHlvtHrZZd1wxRDH6dzeX/FRxDkGRCp/iTXNHViz?=
 =?us-ascii?q?Jdqp/daVl5fFrO++UXmsVplScSnt0IOBuzG35WxsAR2jgf+znsfrHhQ90S/+z9?=
 =?us-ascii?q?NqTznHrA7gYon30KS3KeJmcVNvBFPm6cp6G4d+n5A0hJER33gam5qU8WAGkWf1?=
 =?us-ascii?q?LdVUx6b+YGARSj4Mxt7f+BLl11F7LnKV24L5UW2Qwsh7aNm7eG8W2j894NpMCK?=
 =?us-ascii?q?eb97FEmSp1olylrQPee/R9nzEdyecw534eme0GpA0tziCFCLAIAUZYJTDslwiP?=
 =?us-ascii?q?792mqaVXZWWvfqKq2Etwg9+hF62CrR9GWHniZJgiByBw4957MFLN1n3z947ldM?=
 =?us-ascii?q?PRbdIVqh2bjRPAg/JJJ5I2k/oAnTBnNn7lvX051+47igRj3Y29vIiCMWls/bi2?=
 =?us-ascii?q?AhhFNj3ufMMT+yrgjaJfnsaQwoCuEY9tGjQNXJv0U/2oFCgeuujgNwaLCDc8sG?=
 =?us-ascii?q?uUGaLDHQ+D70drt2nAHIqsN3GTOXkV19FiRASGKUxbgQAUWig6n5EjGgCrwszh?=
 =?us-ascii?q?bFl25jQL6lHkrRtMz/piNwPjXWfHuAeodjA0RYCdLBVM6wFN+VzVPdaC7u5pHC?=
 =?us-ascii?q?FY456hrBGLKmOBfARFFmUJWk2CB1D+Mbii/9jA8+6EBuWgK/vCe6mBqetbV/2Q?=
 =?us-ascii?q?35KgzpNm/yqQNsWIJnRjD/o72ldaXXBkAcvZnS8DSzcQlyLLYM6WvxO8+ixxrs?=
 =?us-ascii?q?Ci//XnQgPv5Y2TC7RMNdVj4Qy5gaCGN+SIniZ2NS5Y1o8QxX/P0LUf3EAdiyBt?=
 =?us-ascii?q?dzmuELQMry3NTLjXmq9YEREbcT5zNNBT4qI43wlNP9Pbi9zv2r55iP41F0lKVV?=
 =?us-ascii?q?j7ls61YswKJnm3NEnbC0aTKLSGOTrLztntbqOhUrJQlvtbth2qtTafEk/uJTCD?=
 =?us-ascii?q?lzjvVxCyPuBAliCbPBpCuI6jdhZhE3TsTNXjahejKt94kSU2waEohnPNLWMcLT?=
 =?us-ascii?q?l8c0ZXorKM9y9XnvV/FHJH7nd+KemEmiCZ7/TXK5oMsPtrBDh0mPxe4Hgg17RV?=
 =?us-ascii?q?6yRETuRvmCTOtt5uv02mku6XxztnShVOrDNLhIONvUp6OKTZ9oNPWXDL/B8W6W?=
 =?us-ascii?q?WQChIKp8ZqC9H1uqBQzMTPm7z3KDtY793U+s4cVIDoL5erOXxpDhvtHD/dCRBN?=
 =?us-ascii?q?GTKiMyfdwVNclPWT/3iOhpk8tpXo3pEJT+kIekYyE6YzDkl1FdoOLY0/ci41mr?=
 =?us-ascii?q?3T2McM6Gq3qhXcXoNa+JzaR/mRKfHuLiuJy7hCexYMh7j/KNJAZcXAx0V+Zwwi?=
 =?us-ascii?q?z8zxEE3KUIUI+3U5Yw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACDkAVch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBgVUFghEng3mIGIw2gWQUlzSBcRYYEwGEPAK?=
 =?us-ascii?q?DSyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2JAGCYgECAwECIARSBgkBAQoYA?=
 =?us-ascii?q?gImAgIDVAYTBYJRS4ICBaY3fDOFQYRrgQuLEXqBHIERgxKESoM7glcCix+EVTa?=
 =?us-ascii?q?FNIpiBwKCI4gPhwoYkSYsmEGBRoINMxojgzyCUI4sHgEBMQEBgQMBAYgNgk0BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0ABAACDkAVch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBgVUFghEng3mIGIw2gWQUlzSBcRYYEwGEPAKDSyI0CQ0BAwEBA?=
 =?us-ascii?q?QEBAQIBEwEBAQoLCQgpL4I2JAGCYgECAwECIARSBgkBAQoYAgImAgIDVAYTBYJ?=
 =?us-ascii?q?RS4ICBaY3fDOFQYRrgQuLEXqBHIERgxKESoM7glcCix+EVTaFNIpiBwKCI4gPh?=
 =?us-ascii?q?woYkSYsmEGBRoINMxojgzyCUI4sHgEBMQEBgQMBAYgNgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="55901806"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 12:24:46 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726008AbeLCUVn (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 15:21:43 -0500
Received: from mga09.intel.com ([134.134.136.24]:19340 "EHLO mga09.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725890AbeLCUVn (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 15:21:43 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 12:21:42 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="115613450"
Received: from ahduyck-desk1.amr.corp.intel.com ([10.7.198.76])
  by orsmga001.jf.intel.com with ESMTP; 03 Dec 2018 12:21:42 -0800
Message-ID: <97943d2ed62e6887f4ba51b985ef4fb5478bc586.camel@linux.intel.com>
Subject: Re: [PATCH RFC 2/3] mm: Add support for exposing if dev_pagemap
 supports refcount pinning
From: Alexander Duyck <alexander.h.duyck@linux.intel.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: Paolo Bonzini <pbonzini@redhat.com>,
        Zhang Yi <yi.z.zhang@linux.intel.com>,
        Barret Rhoden <brho@google.com>,
        KVM list <kvm@vger.kernel.org>,
        linux-nvdimm <linux-nvdimm@lists.01.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Linux MM <linux-mm@kvack.org>,
        Dave Jiang <dave.jiang@intel.com>,
        "Zhang, Yu C" <yu.c.zhang@intel.com>,
        Pankaj Gupta <pagupta@redhat.com>,
        David Hildenbrand <david@redhat.com>, Jan Kara <jack@suse.cz>,
        Christoph Hellwig <hch@lst.de>, rkrcmar@redhat.com,
        =?ISO-8859-1?Q?J=E9r=F4me?= Glisse <jglisse@redhat.com>
Date: Mon, 03 Dec 2018 12:21:42 -0800
In-Reply-To: <CAPcyv4gZkx9zRsKkVhrmPG7SyjPEycp0neFnECmSADZNLuDOpQ@mail.gmail.com>
References: <154386493754.27193.1300965403157243427.stgit@ahduyck-desk1.amr.corp.intel.com>
         <154386513120.27193.7977541941078967487.stgit@ahduyck-desk1.amr.corp.intel.com>
         <CAPcyv4gZkx9zRsKkVhrmPG7SyjPEycp0neFnECmSADZNLuDOpQ@mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.28.5 (3.28.5-2.fc28) 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 2018-12-03 at 11:47 -0800, Dan Williams wrote:
> On Mon, Dec 3, 2018 at 11:25 AM Alexander Duyck
> <alexander.h.duyck@linux.intel.com> wrote:
> > 
> > Add a means of exposing if a pagemap supports refcount pinning. I am doing
> > this to expose if a given pagemap has backing struct pages that will allow
> > for the reference count of the page to be incremented to lock the page
> > into place.
> > 
> > The KVM code already has several spots where it was trying to use a
> > pfn_valid check combined with a PageReserved check to determien if it could
> > take a reference on the page. I am adding this check so in the case of the
> > page having the reserved flag checked we can check the pagemap for the page
> > to determine if we might fall into the special DAX case.
> > 
> > Signed-off-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
> > ---
> >  drivers/nvdimm/pfn_devs.c |    2 ++
> >  include/linux/memremap.h  |    5 ++++-
> >  include/linux/mm.h        |   11 +++++++++++
> >  3 files changed, 17 insertions(+), 1 deletion(-)
> > 
> > diff --git a/drivers/nvdimm/pfn_devs.c b/drivers/nvdimm/pfn_devs.c
> > index 6f22272e8d80..7a4a85bcf7f4 100644
> > --- a/drivers/nvdimm/pfn_devs.c
> > +++ b/drivers/nvdimm/pfn_devs.c
> > @@ -640,6 +640,8 @@ static int __nvdimm_setup_pfn(struct nd_pfn *nd_pfn, struct dev_pagemap *pgmap)
> >         } else
> >                 return -ENXIO;
> > 
> > +       pgmap->support_refcount_pinning = true;
> > +
> 
> There should be no dev_pagemap instance instance where this isn't
> true, so I'm missing why this is needed?

I thought in the case of HMM there were instances where you couldn't
pin the page, isn't there? Specifically I am thinking of the definition
of MEMORY_DEVICE_PUBLIC:
  Device memory that is cache coherent from device and CPU point of 
  view. This is use on platform that have an advance system bus (like 
  CAPI or CCIX). A driver can hotplug the device memory using 
  ZONE_DEVICE and with that memory type. Any page of a process can be 
  migrated to such memory. However no one should be allow to pin such 
  memory so that it can always be evicted.

It sounds like MEMORY_DEVICE_PUBLIC and MMIO would want to fall into
the same category here in order to allow a hot-plug event to remove the
device and take the memory with it, or is my understanding on this not
correct?

Thanks.

- Alex



