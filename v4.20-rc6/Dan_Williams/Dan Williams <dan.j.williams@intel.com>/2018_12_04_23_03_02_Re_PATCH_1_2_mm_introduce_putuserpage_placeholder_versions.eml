Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:45:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B405158014B;
	Tue,  4 Dec 2018 15:03:21 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 15:03:21 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AcgITOxH77+lWokxDFy6uEZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75os67bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWCNBDIGz?=
 =?us-ascii?q?YYsBAeQCIOhWsZXyp0AWrRa8HgSsGP/jxyVUinPqwaE30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotvvO6cUTOu6zKjIzTHHb/NXwzj97ZPIeQ0mrP6RR71wd9DdyUs1GwLLj1WQ?=
 =?us-ascii?q?rYjlPzKP2eQIqGiW9OtgVeSzi2E5rwF9uCSgxsApioTQgI8e117K9SJ8wIkvJN?=
 =?us-ascii?q?24TlZ2Yd26H5tKsSGVKY92TtklQ2FytyY20rkGuJC9fCQQzpQo2QLfZvqaeIaL?=
 =?us-ascii?q?+hLuTPidLSt8iX5/Zb6yiQi+/VK9xuD/SsW4yldHoyhdntXSqnwA0wbf58uHR/?=
 =?us-ascii?q?dn40us2DSC2xrO5uxAIU05k7fQJYQ7zb4qjJUTtFzOHi/ol0Xyi6+bblsk+ue2?=
 =?us-ascii?q?5OT9eLnmpYGTN5Vyig7gNqQigMu/Af43MgQWXmib//qz1KH78EHnXLlHiuc6nr?=
 =?us-ascii?q?TXvZzEP8gXu620DxNP3osi6RuzFzKm384ZnXkDIlJFYhWHj43xNlHKIfD4C+q/?=
 =?us-ascii?q?glu1nDdo2f/GJLvhDYvJLnTal7fgc7B95FBGyAco09Bf6IxbCqsbLPLwREDxrt?=
 =?us-ascii?q?rYAQE9MwCuxObnEtp92psEWW2TGq+ZLL/SsViQ6+IrIumMZ5EatCzyKvg4/PPu?=
 =?us-ascii?q?iX45mVkAfaimx5cXaXa4Huh4LEWde3bjntABEWIStAokUOPqkEGCUSJUZ3uqX6?=
 =?us-ascii?q?Iz/DA7CJ68AofEXIytgKGB0z29Hp1ZfW1GDlGMEXH1d4SLQfsMaSSSItN/nTwA?=
 =?us-ascii?q?T7SuV4gh1RS2vg/g17VnNvbU+jEftZ/71th14PPcmQsx9TxzCcSd1WaNQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwcwLYTcwPBiC9DuRgLBec+ER0y9?=
 =?us-ascii?q?QtWmBjExTcg9w8UUbEZ/ANiiihHD3yy3A74ajbCLBZo08r7C0Hj1Pcpy13HG1K?=
 =?us-ascii?q?w5hVk8XsRPLXGmhrJ49wXLBI7GiUOZm7yudaQdxiHN8miDwHGKvEFZVg5wTKrE?=
 =?us-ascii?q?UWoeZkvQsdT2+EfCQ6WyBrQgNwtL0dSCJbdSat31kVVGQ+/uN8nEbGKvhWi8Hx?=
 =?us-ascii?q?aIyamKbIrxZWod2iLRCEwHkwAW+XaLLgw+Biano2LDAz1iD1PvY0Xw8eZgrHO3?=
 =?us-ascii?q?VFM7zwaPb0d5zbq65gYVheCAS/MUxr8LpT0uqytqE1qn39LZEdyApxF/c6Vaet?=
 =?us-ascii?q?495FZH1WTEtw1yJJCgLqZihkIAfARzpU/hyxJ3CoBYm8gwsHwq1BZyKb6f0F5Z?=
 =?us-ascii?q?azOY3JXwOrrLKmny/BGjcbLW1kvZ0NaM/qcP6fI4q1r4sQGtF0oi9Whn0tZP33?=
 =?us-ascii?q?ud4JXKEBQdUZbrXkkr8Bh6oqnQYjMh6IPMyX1sLa60vyfY1NItGuQkxQivftdF?=
 =?us-ascii?q?PKyfCQ/9DtcVB86tKOwthVikdRYEPOFU9K4pMMKqbfqG2Ki3POl+mDKql3hI4I?=
 =?us-ascii?q?d40kiU7SpzVvbI34oZw/GfxgaGVyr8gE29vcztmIFEZSsdHmywySX/AI5RZ6ty?=
 =?us-ascii?q?fZsECGu0Is23wMl+iIDpW3JC6FGjAFYG0tezeRWOd1z9wRFQ1UMPrHy9mCu30y?=
 =?us-ascii?q?Z7kys0oaqYxiDOxfrtdAAGOmJSWGZtl1PsLpWqgNAAW0ioaRMklB+k5Ub82qha?=
 =?us-ascii?q?q75zL2jVQUdUYSf2K3tuXbe3trqHe8RP8o8nsT1LUOSgZlCXUr78oxoA3yLjBW?=
 =?us-ascii?q?de3y07dzext5X9nhx6jn+dLXlpoHrYf8Fw2QnQ5NjGSfFN2ToGQTFyiSPLCVik?=
 =?us-ascii?q?I9mp4dKUmo/Bsu+kTWKhVZ5TcS7xwYObriS75m5qARy5n/+tnN3qCgw60S7919?=
 =?us-ascii?q?l3WiTEthf8Yo/316ukNeJrZFVnBFj568BiAIFxjpMwhI0M2XgdnpiU/WAIkWDp?=
 =?us-ascii?q?PdVZ2KL+amEARToKw97T/Qjk11dvLnOPx4LlSHqdxtFtaMW9YmMTwig99dxFCL?=
 =?us-ascii?q?+I7LxYmit4ulm4ohjQYfRnnjcd1OEh6HgVg+wSvAotzyOdAq0dHEVCPCzskQiI?=
 =?us-ascii?q?4M66rKlNeGmvdr2w3lJknd+9FLGCvh1cWHHhd5cnHC9w7d9wPEjC0XLt8YHkZM?=
 =?us-ascii?q?ffbcgIuRKKiRfAgPNYKJYwlvoMmCpmNnjxvXwjy+4nkxNu2Yu2s5SAK2Vo5Ki5?=
 =?us-ascii?q?GAJXNiXpZ8MP/THglbpensGT34y1H5RuADMLXIbzTfKzETIfrvDnNweIED0hpX?=
 =?us-ascii?q?aXA7vfHQmD6Eh4q3LDCYykN3aSJHMB19VtWAGdJFBDgAATRDg1hYQ2FgeuxMz8?=
 =?us-ascii?q?akt54i0R60X8qhtNzOJoKhb+Xn3epAeudjc7VpyfIABK4QFF4kffKdae4f5rHy?=
 =?us-ascii?q?FE4p2hqxSAKm6BaARNE24JQVaIB0z5Mrmt+NnA8PWYBuykIPvVeriOre1eV/GV?=
 =?us-ascii?q?xZOgyIdm/jCMNtmRMXlmFfE0xk1DXXVhEcTDhzoPUzAXlz7Kb8ODpBa8/TB3rt?=
 =?us-ascii?q?mi8PvxXgLj/5CPC7xUMdVg4B22haaDN+iNhCd2MzpY15UMxWPWx7gbxlIdlyZu?=
 =?us-ascii?q?dzy1G7QaqSHNVL7QmrNQDxMDayN8KspI76E/3glMI8Lbicn11rl3jvErEVdFSE?=
 =?us-ascii?q?fhl9qtZcwLJWG9KVzGCFyKNLSAOT3E3cX3bbmgRr1XieVerwewtiqDE0//IjSD?=
 =?us-ascii?q?kCHkWAqyMe5XliGUIhxftJu5chZsEmXjSNPmahumMN54lzE2wLs0hm/UOm4YKz?=
 =?us-ascii?q?Rzb0RNrriI5yNCnvp/A3BB7mZiLeSchyaZ7uzYJowKvvdxHit0l/xV4HIhxrtR?=
 =?us-ascii?q?7SFEQuF1mSTIot5vpVGmjveAyj59XBVSrTZLgZqBvV9+NqXB6plARXHE8QoN7G?=
 =?us-ascii?q?qKDRQKotplCtv3tKFRytjAjqTzKDhZ/tLQ/MscAdXUKc2dPHogNxrpBCDbDA8f?=
 =?us-ascii?q?QTG3MmHfgh8VrPbH1HqVqNAat5LmkYACAutZVEE/HPoABmxjAt0OIZ4xVTQhx+?=
 =?us-ascii?q?21lskNsFa3qlHuRcFev5nCTbrGDfzpbjTfkrhAYxoBxKjQLIIPO4m90EtnPAop?=
 =?us-ascii?q?1L/WElbdCIge6hZqaRU59QAUqCBz?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BoAADbBgdch0O0hNFcCB4BBgcGgVMHC?=
 =?us-ascii?q?wGBWoEPgQIng3mUJymBZBSIfY44gSQDTCwLCAGBG4MhAoMOIjYHDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCA0JCCkjDII2JAGCYQEBAQECAQECIB0BASYRAQQBCQEBCgsDBwMCA?=
 =?us-ascii?q?iYCAgMeARIBBQEcBhMFglFLAYFpAw0IBQqZXzyKHXCBL4J2AQEFgTABCwGDTw2?=
 =?us-ascii?q?CFAMFEnmLE3qBHIQjgldHAQOBOoMpgleJIYIBhQ+PbC4HAoIkhF+HEIMuGIFbj?=
 =?us-ascii?q?0ssiV2DZYEMiW4wgSwFggFNI4EBBoI1EwyBfINthFk7hWAeMwEBgQMBAYgWK4I?=
 =?us-ascii?q?gAQE?=
X-IPAS-Result: =?us-ascii?q?A0BoAADbBgdch0O0hNFcCB4BBgcGgVMHCwGBWoEPgQIng3m?=
 =?us-ascii?q?UJymBZBSIfY44gSQDTCwLCAGBG4MhAoMOIjYHDQEDAQEBAQEBAgETAQEBCA0JC?=
 =?us-ascii?q?CkjDII2JAGCYQEBAQECAQECIB0BASYRAQQBCQEBCgsDBwMCAiYCAgMeARIBBQE?=
 =?us-ascii?q?cBhMFglFLAYFpAw0IBQqZXzyKHXCBL4J2AQEFgTABCwGDTw2CFAMFEnmLE3qBH?=
 =?us-ascii?q?IQjgldHAQOBOoMpgleJIYIBhQ+PbC4HAoIkhF+HEIMuGIFbj0ssiV2DZYEMiW4?=
 =?us-ascii?q?wgSwFggFNI4EBBoI1EwyBfINthFk7hWAeMwEBgQMBAYgWK4IgAQE?=
X-IronPort-AV: E=Sophos;i="5.56,316,1539673200"; 
   d="scan'208";a="53845023"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 15:03:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726477AbeLDXDR (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 18:03:17 -0500
Received: from mail-oi1-f195.google.com ([209.85.167.195]:42372 "EHLO
        mail-oi1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725875AbeLDXDO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 18:03:14 -0500
Received: by mail-oi1-f195.google.com with SMTP id w13so15850597oiw.9
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 15:03:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=intel-com.20150623.gappssmtp.com; s=20150623;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=sMIV9UdFAh6kXMjUoumKsFzTXeORRHitzQorgQpcy74=;
        b=QhbDuElkCug1RZqEbnUZoPKqOMA4+o5ilUTeq42k0M2gFqxQFvFnlSiIUXpTkHHCzl
         ZD/WBZyCl7Lh9rH6QIIfkGo0PWBanGIIXwAoWwdDc2SYRwC61/H0pgfouJTs1iQwzX3E
         u4u5x5lDoSjAxObOTq/0xNc6nw6pthSVYjh3Hehol90rFuEqcpkRkxRdPOOheN5T6p77
         5DGEjCSAuIdUP2+foXOzxx4pit4iKmciUiz4Uash0QxyEwaehjA+fTqImbKvQm03aMxz
         bj2p3MfiuJo/LBafMQrsGtCdzzCppaddDIkoQjPXSg0wXEWSvKVoLf4FJsQXECJWWeZ8
         wWFg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=sMIV9UdFAh6kXMjUoumKsFzTXeORRHitzQorgQpcy74=;
        b=fFiiieGFjK4WnuFivur94hZBTy8Vh1xBZ8pNkKEh151Og1nKcCQO4QxIBrjc8qmE9l
         rbldnY7GZBBsA8hZRS9p55PcO71PH31P+Aj049iVLTe2+E1IFtB8FiHhPQx8zGpzNTVH
         2cWC9MFKGBaYpkCHkoDkEi/tMZPy8YwF5ivLniL1vTSDaPUurEAZXbpzj6qvEr7fo6TO
         oFr4d4snTLw2a6UQ3sZj+ZCJw1YD8PS5ksSJIZIGO6wxau+pkMajiydjBhy0Oh8QWJpB
         sIMrmjmcy3o6oGXV6dSmGgQpuWceBALwm2PAFLvpxPVPGtw6gZ7amNmI0JCom3Bu1Hvv
         r1gw==
X-Gm-Message-State: AA+aEWZGO18wjp+23hQZTCWfNVRPtugTBT+kqutPYmS16CNgbln1LpZo
        3zThOD07TtyiluwazFDqC42aRofcyY8adClxdmn3yw==
X-Google-Smtp-Source: AFSGD/UfnrOokKI7psGVX/CLKLzf8ZUUuDNxheEkrveUfZqp6alQXt2UUowV6oTr4J/rJdUwjMBakqKlub9W08Oo74k=
X-Received: by 2002:aca:4307:: with SMTP id q7mr7849795oia.105.1543964593007;
 Tue, 04 Dec 2018 15:03:13 -0800 (PST)
MIME-Version: 1.0
References: <20181204001720.26138-1-jhubbard@nvidia.com> <20181204001720.26138-2-jhubbard@nvidia.com>
 <CAPcyv4h99JVHAS7Q7k3iPPUq+oc1NxHdyBHMjpgyesF1EjVfWA@mail.gmail.com> <a0adcf7c-5592-f003-abc5-a2645eb1d5df@nvidia.com>
In-Reply-To: <a0adcf7c-5592-f003-abc5-a2645eb1d5df@nvidia.com>
From: Dan Williams <dan.j.williams@intel.com>
Date: Tue, 4 Dec 2018 15:03:02 -0800
Message-ID: <CAPcyv4iNtamDAY9raab=iXhSZByecedBpnGybjLM+PuDMwq7SQ@mail.gmail.com>
Subject: Re: [PATCH 1/2] mm: introduce put_user_page*(), placeholder versions
To: John Hubbard <jhubbard@nvidia.com>
Cc: John Hubbard <john.hubbard@gmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux MM <linux-mm@kvack.org>, Jan Kara <jack@suse.cz>,
        tom@talpey.com, Al Viro <viro@zeniv.linux.org.uk>, benve@cisco.com,
        Christoph Hellwig <hch@infradead.org>,
        Christopher Lameter <cl@linux.com>,
        "Dalessandro, Dennis" <dennis.dalessandro@intel.com>,
        Doug Ledford <dledford@redhat.com>,
        Jason Gunthorpe <jgg@ziepe.ca>,
        =?UTF-8?B?SsOpcsO0bWUgR2xpc3Nl?= <jglisse@redhat.com>,
        Matthew Wilcox <willy@infradead.org>,
        Michal Hocko <mhocko@kernel.org>, mike.marciniszyn@intel.com,
        rcampbell@nvidia.com,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-fsdevel <linux-fsdevel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Dec 4, 2018 at 1:56 PM John Hubbard <jhubbard@nvidia.com> wrote:
>
> On 12/4/18 12:28 PM, Dan Williams wrote:
> > On Mon, Dec 3, 2018 at 4:17 PM <john.hubbard@gmail.com> wrote:
> >>
> >> From: John Hubbard <jhubbard@nvidia.com>
> >>
> >> Introduces put_user_page(), which simply calls put_page().
> >> This provides a way to update all get_user_pages*() callers,
> >> so that they call put_user_page(), instead of put_page().
> >>
> >> Also introduces put_user_pages(), and a few dirty/locked variations,
> >> as a replacement for release_pages(), and also as a replacement
> >> for open-coded loops that release multiple pages.
> >> These may be used for subsequent performance improvements,
> >> via batching of pages to be released.
> >>
> >> This is the first step of fixing the problem described in [1]. The steps
> >> are:
> >>
> >> 1) (This patch): provide put_user_page*() routines, intended to be used
> >>    for releasing pages that were pinned via get_user_pages*().
> >>
> >> 2) Convert all of the call sites for get_user_pages*(), to
> >>    invoke put_user_page*(), instead of put_page(). This involves dozens of
> >>    call sites, and will take some time.
> >>
> >> 3) After (2) is complete, use get_user_pages*() and put_user_page*() to
> >>    implement tracking of these pages. This tracking will be separate from
> >>    the existing struct page refcounting.
> >>
> >> 4) Use the tracking and identification of these pages, to implement
> >>    special handling (especially in writeback paths) when the pages are
> >>    backed by a filesystem. Again, [1] provides details as to why that is
> >>    desirable.
> >
> > I thought at Plumbers we talked about using a page bit to tag pages
> > that have had their reference count elevated by get_user_pages()? That
> > way there is no need to distinguish put_page() from put_user_page() it
> > just happens internally to put_page(). At the conference Matthew was
> > offering to free up a page bit for this purpose.
> >
>
> ...but then, upon further discussion in that same session, we realized that
> that doesn't help. You need a reference count. Otherwise a random put_page
> could affect your dma-pinned pages, etc, etc.

Ok, sorry, I mis-remembered. So, you're effectively trying to capture
the end of the page pin event separate from the final 'put' of the
page? Makes sense.

> I was not able to actually find any place where a single additional page
> bit would help our situation, which is why this still uses LRU fields for
> both the two bits required (the RFC [1] still applies), and the dma_pinned_count.

Except the LRU fields are already in use for ZONE_DEVICE pages... how
does this proposal interact with those?

> [1] https://lore.kernel.org/r/20181110085041.10071-7-jhubbard@nvidia.com
>
> >> [1] https://lwn.net/Articles/753027/ : "The Trouble with get_user_pages()"
> >>
> >> Reviewed-by: Jan Kara <jack@suse.cz>
> >
> > Wish, you could have been there Jan. I'm missing why it's safe to
> > assume that a single put_user_page() is paired with a get_user_page()?
> >
>
> A put_user_page() per page, or a put_user_pages() for an array of pages. See
> patch 0002 for several examples.

Yes, however I was more concerned about validation and trying to
locate missed places where put_page() is used instead of
put_user_page().

It would be interesting to see if we could have a debug mode where
get_user_pages() returned dynamically allocated pages from a known
address range and catch drivers that operate on a user-pinned page
without using the proper helper to 'put' it. I think we might also
need a ref_user_page() for drivers that may do their own get_page()
and expect the dma_pinned_count to also increase.
