Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:40:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7EFA5580443
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 07:49:52 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 07:49:52 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Ad4zKjxTT4aNqIA76oDBEyz8Akdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zbR2N2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBDOQBMulEoIbgpVQBowawBRGuCe3txTJEm3H70bEk3OQ6CgzGwBAsEsgSvH?=
 =?us-ascii?q?jIttj5KqEfWv21wqnSyjXDautb1Cv76IjUchAhpveMXLJtesTLxkchCx/IgEme?=
 =?us-ascii?q?p4f4OD6azOINs3Sb7+pnU+Kui3QrqxlvrTi13MgskJTGi5kJxVDF6SV52oc1JN?=
 =?us-ascii?q?KiREFnZt6kFYJduieHPIV1WsMvW39ktDo5x7EcpJK3YSsHxI45yxPRa/GLaZWE?=
 =?us-ascii?q?7xD7WOqMIDp0mmhpdKyhixqv60Ss1+3xW8iu3FtKridIlMTHuGoX2BzJ8MeHT+?=
 =?us-ascii?q?Nw/ke/1jaL0ADe8uVEIUEvlarHMJ4t2LEwlpwOsUjZGS/2gkr2gLeXdkUi5Oeo?=
 =?us-ascii?q?9/zqbqv6qpKfLYN4lxzyP6c0lsChD+k1MhICU3WZ9Oik0b3s50z5QLFEjv0sla?=
 =?us-ascii?q?nZtYjXJd0Fqa68Hg9Zy5ss5AihDzi41NQUhGIILFVYeBKBk4fmJUrOLPf8Dfe+?=
 =?us-ascii?q?gFSjji1nxv/bPrD5BpXNL37DkKrufLpn6k5czhYzws5b555OFr4BJ/fzV1T3tN?=
 =?us-ascii?q?zfCB85PAq0w/v9BNV6zIMeVnqDArWFP6PKrV+I+uUvLvGIZI8UuzbyNeIp5vHz?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+H6TXjkafW2tTe2qqRP?=
 =?us-ascii?q?B7oTU6E569S4HEQI+rnfqGxij8G5RXYmVPDBeLCWvpcIOfHO4BbT/XLsJ/nzhX?=
 =?us-ascii?q?aL66VoV00BivsBP9maNqK/eR9iAGuJamztVs+uDIiTk08jp7Cdnb1HuCGHpplG?=
 =?us-ascii?q?EFTCNjwaZkvEZmwU2C26Urv/sNLdVO47tlTx0gPJjAh7hCAs32HC7cZM2ATkqO?=
 =?us-ascii?q?SdS6GzAhCNk2xoldTVx6HoCLiAzD2Cy7S4c4rZWxKNRg+6TA33/3NoBlxmzPzq?=
 =?us-ascii?q?UJhFg6WMpfc2ahg/gspEDoG4fVnhDBxO6RfqMG0XuIrT/bwA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAACAoQZchxHrdtBjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBVAEBAQEBAQsBgTCCT40EjTyXXYFaGRgUiBEiNwYNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIGw4vgjYFAgMaAQaCWwEBAQECAQECJBMMCikDAwECBgEBC?=
 =?us-ascii?q?hgJFQgIAwELBQs+GIMcgXoIAQSlejOKMowegVc/hCOERoYWAokngXmEEoFNj0o?=
 =?us-ascii?q?HAhyCCI8SCxiRJph3gVyBd3CDPZBaQYE4iGuBdAMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AHAACAoQZchxHrdtBjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BVAEBAQEBAQsBgTCCT40EjTyXXYFaGRgUiBEiNwYNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIGw4vgjYFAgMaAQaCWwEBAQECAQECJBMMCikDAwECBgEBChgJFQgIAwELBQs?=
 =?us-ascii?q?+GIMcgXoIAQSlejOKMowegVc/hCOERoYWAokngXmEEoFNj0oHAhyCCI8SCxiRJ?=
 =?us-ascii?q?ph3gVyBd3CDPZBaQYE4iGuBdAMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="65246511"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 07:49:50 -0800
Received: from localhost ([::1]:57677 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUCxK-0004bw-S4
	for like.xu@linux.intel.com; Tue, 04 Dec 2018 10:49:50 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:53134)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <prvs=869086d29=anthony.perard@citrix.com>)
	id 1gUCx1-0004as-R8
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 10:49:32 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <prvs=869086d29=anthony.perard@citrix.com>)
	id 1gUCx1-0007B3-1M
	for qemu-devel@nongnu.org; Tue, 04 Dec 2018 10:49:31 -0500
Received: from smtp03.citrix.com ([162.221.156.55]:41398)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71)
	(envelope-from <prvs=869086d29=anthony.perard@citrix.com>)
	id 1gUCwv-00075h-6j; Tue, 04 Dec 2018 10:49:25 -0500
X-IronPort-AV: E=Sophos;i="5.56,314,1539648000"; d="scan'208";a="72298805"
Date: Tue, 4 Dec 2018 15:49:08 +0000
From: Anthony PERARD <anthony.perard@citrix.com>
To: Paul Durrant <Paul.Durrant@citrix.com>
Message-ID: <20181204154908.GX14786@perard.uk.xensource.com>
References: <20181121151211.15997-1-paul.durrant@citrix.com>
	<20181121151211.15997-4-paul.durrant@citrix.com>
	<20181129160541.GG14786@perard.uk.xensource.com>
	<311937f3c787461686f2ebf68a70a326@AMSPEX02CL03.citrite.net>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <311937f3c787461686f2ebf68a70a326@AMSPEX02CL03.citrite.net>
User-Agent: Mutt/1.11.0 (2018-11-25)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 162.221.156.55
Subject: Re: [Qemu-devel] [PATCH 03/18] xen: introduce 'xen-qdisk'
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: Kevin Wolf <kwolf@redhat.com>, Stefano Stabellini <sstabellini@kernel.org>,
	"qemu-block@nongnu.org" <qemu-block@nongnu.org>,
	"qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
	Max Reitz <mreitz@redhat.com>,
	"xen-devel@lists.xenproject.org" <xen-devel@lists.xenproject.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, Dec 04, 2018 at 03:20:04PM +0000, Paul Durrant wrote:
> > > +static char *disk_to_vbd_name(unsigned int disk)
> > > +{
> > > +    unsigned int len = DIV_ROUND_UP(disk, 26);
> > > +    char *name = g_malloc0(len + 1);
> > > +
> > > +    do {
> > > +        name[len--] = 'a' + (disk % 26);
> > > +        disk /= 26;
> > > +    } while (disk != 0);
> > > +    assert(len == 0);
> > > +
> > > +    return name;
> > > +}
> > 
> > That function doesn't work.
> > 
> > For a simple xvdp, (so disk==15), it return "", I mean "\0p".
> > 
> > For a more complicated 'xvdbhwza', we have len == 22901. And the assert
> > failed.
> > 
> > Maybe the recursing algo in libxl would be fine, with a buffer that is
> > big enough, and could probably be on the stack (in _get_vdev).
> 
> I used libxl__device_disk_dev_number() as my model (as well as cross-checking with the spec), but I guess a recursing algorithm would be neater.

There is libxl__devid_to_vdev() actually just after ;-) which calls
encode_disk_name which is recursing.

> > > diff --git a/include/hw/xen/xen-qdisk.h b/include/hw/xen/xen-qdisk.h
> > > new file mode 100644
> > > index 0000000000..ade0866037
> > > --- /dev/null
> > > +++ b/include/hw/xen/xen-qdisk.h
> > > @@ -0,0 +1,38 @@
> > > +/*
> > > + * Copyright (c) Citrix Systems Inc.
> > > + * All rights reserved.
> > > + */
> > > +
> > > +#ifndef HW_XEN_QDISK_H
> > > +#define HW_XEN_QDISK_H
> > > +
> > > +#include "hw/xen/xen-bus.h"
> > > +
> > > +typedef enum XenQdiskVdevType {
> > > +    XEN_QDISK_VDEV_TYPE_DP,
> > 
> > Maybe we could set type_dp value to 1, so that, when vdev->type isn't
> > set, we can detect it later.
> 
> Rather than having the 'valid' bool? Yes, that would work.

Well, the 'valid' bool doesn't seems to always be check so it would be
better. e.g. xen_qdisk_get_vdev() doesn't check `valid` before
genereting a string. Then xen_qdisk_set_vdev could set `type` to invalid
when it is invalid.

-- 
Anthony PERARD

