Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:50:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6D2D4580443;
	Wed,  5 Dec 2018 02:15:17 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 02:15:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AvC7hZx37XEENXTIlsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSL/vxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJPDICy?=
 =?us-ascii?q?YYwNAOoPJuZYt4vwqkASoReiHwSgGPnixiNUinLwwKY00/4hEQbD3AE4AtwBqm?=
 =?us-ascii?q?/UrNXvO6wPV+660rfIzTTFb/hL3jr985LHcgshof6WWbJ9asnRxlc1FwPDkFqQ?=
 =?us-ascii?q?rZbpPzSP1uQCqmWW6fdrW+G3i2M/tQ19vjyiyt0xhoTHmI4Z0E3I+CZlzIovJN?=
 =?us-ascii?q?C1SlZ3bcC5HJZerS2XN4l7Ttk/T2xntis20KAKtYO9cSMX0poo3QTfZOaCc4WQ?=
 =?us-ascii?q?4hLsSuKRITBgiXJ7d7KwmQyy/VKjyuLiTMm01khFri5fntnLrHAN2ATf6smBSv?=
 =?us-ascii?q?Rj4keswSiD2xzX5+1ePEw5m7TXJ4Q8zrMzipYfq0XOEy3ulEXzlqCWd0Ek+uay?=
 =?us-ascii?q?6+TgZ7XrvpucN45yigHjPaUig8+/DvoiMggIQWeb/f2w1Lrt/E3/XrpKlOY7kr?=
 =?us-ascii?q?fWsJ/EP8QXvK25DBFP0oYl9Rm/Cy2q0NMCnXkINF5FYg6Ij5D1O1HSJ/D1FfO/?=
 =?us-ascii?q?g1WvkDh13fzHMaDhD47JLnjClrfhYLl851RdyAo10dBQ+ZZUBqsdL/L0X0/7rM?=
 =?us-ascii?q?bYAQMhMwyo3+bnD81w1oMEVmKOHq+WKqTSvUWI5uIyOeaMYoAVtS35K/gk4f7u?=
 =?us-ascii?q?kHA4lUUcfamvwZsYdnS4Eu56LEWeZHrmms0BHnsSvgoiUOzqj0WPUTxUZ3msRa?=
 =?us-ascii?q?485TY7CISgDYfEXY2thL2B3CGmHpxZfGxGC1aMEWv2eIWAQfsDdCWSIsp5mDwe?=
 =?us-ascii?q?SbehU5Mh1Q2ptALi0bVnNerU+iobtZ75zth6/e/TmAo29Tx1CcSdzm6MQ3t1nm?=
 =?us-ascii?q?MOWz85wqR/rVZhxVeE1Khym+ZYGsBL5/NVTgc6MobRz+9gBND0QA7BetaJR0yg?=
 =?us-ascii?q?QtWpGjwxStMxw9kTY0dyAdmijxbD3za0DL8RjbCEGJs08qfE1XjrO8l902rG1L?=
 =?us-ascii?q?Umj1Q+X8RAL3OmibBl+wjTHYHJlV6ZmLisdagb2C7N92KDzW6VsUFcUQ5wV7jF?=
 =?us-ascii?q?XH8FakvXq9T5+l3NT7u0Bbs7NQtBzNaIKrFWZd3xkVVGWPDjNczDbG2rhWe/Gw?=
 =?us-ascii?q?yExrOWY4rsYGUSwiPdBVMAkwAS+3aGKAc/Cj2go2LYEDxhC1bvb1nw/ul5rXOx?=
 =?us-ascii?q?VlU0wB2Sb019y7q1/QYYheCdS/MW2bIEpCchqjVuEFahxd7WDMCApw5gfKVabt?=
 =?us-ascii?q?Mw+1NH1WPftwxgMZ2sNaFihlgCcwtpu0PizQl4CoJFkcIytnMl0BJyKb6E0FNG?=
 =?us-ascii?q?bz6Xx5TwNaPYK2bs/BGjcbXZ2kzD39mM/KcP6/M4q0v4sQGtF0oi9Whn0tZP33?=
 =?us-ascii?q?ud4JXKEBQdUZbrXkkr8Bh6oqnQYjMh6IPMyX1sLa60vyfC2tI0Hucq1gysftZf?=
 =?us-ascii?q?MKyeEg/yHNYXB8yvKOwshlioYQgIPOFU9K4oIcymc+GK17KsPOZlhDiml3hI4J?=
 =?us-ascii?q?hh0kKQ8CpxUvTI35cZzP6CxAuISjD8gE2nss/pg4BEZCgeEXalxijgGYFeeLdy?=
 =?us-ascii?q?fYENCWq1J823x9N+h4PiWnJC9V6jAU8G19GteRaIc1P92ghQ31wNoXO7gSu40y?=
 =?us-ascii?q?B0kzYxo6uf3SzC2eTjeAAcOm5WQmlvllPsIYmyj9AHU0mkdQkplB255Unkw6hX?=
 =?us-ascii?q?vrhwL27WQU1QZSj5M3liUrestrqFe8NP6oknsT9UUOS/ZlCWUKX9rAEZ0yPgHm?=
 =?us-ascii?q?tewi40dzext5X9nhx6jn+dLXlpoHrYf8Fw2QnQ5NjGSfFN2ToGQTFyiSPLCVik?=
 =?us-ascii?q?I9mp4dKUmo/Ds++kUGKtTJ9TcSjtzY6bsCu75GtqAQCwnvypm93nFxQ63jH/19?=
 =?us-ascii?q?VwSSrIqxP8aJHx16umKeJnYlVoBFjk5sp5AI5+k5E8hJEN2XcAgJWV8mEKkWPy?=
 =?us-ascii?q?MdVdxKL/Y2ABRT8Nw97J/gfl3FdvIW6Ox4L8Tn+d2NduZ8GmYmMK3SIw98VKCK?=
 =?us-ascii?q?aX7LNehyd0rES3rRnNYfdjhDcS0uUh6GQVg+wSvAotzyOdAq0dHEVCPCzskQiI?=
 =?us-ascii?q?4M66rKlNeGmvdr2w3lJknd+9FLGCvh1cWHHhd5c+Gi9w699zMVPW333194HkY8?=
 =?us-ascii?q?LQbdMIux2QkhfAifVVKZ0rmvoLgypnJXzyvXk/x+Enihxu2ImwvJKbJGV14KK5?=
 =?us-ascii?q?HhlYOyXuaMwJ/THtibtektyS34CyBZhhHjQLXJ31TfOnCj4StPLnNxqQHz04sH?=
 =?us-ascii?q?uUBb3fHQqH4kd8s33PC4yrN22QJHQBz9VtXhydK1JEgAwOQDU2hJ05Fh2pxMz8?=
 =?us-ascii?q?dkd2/CsR60X8qhtNzOJoKhb+Xn3epAeudjc7VpyfIABK4QFF4kffKdae4f5rHy?=
 =?us-ascii?q?FE4p2hqxSAK2ycZwRVFGEJR1aLB1b5Mrm14tnA9eeYC/G6L/vPZ7WOtONfW+2J?=
 =?us-ascii?q?xZKpzotp4TKMOt+TMXllCv0xwlBDUmxhG8TFhzUPTDQalyLTYM6apxe8+Sx3ot?=
 =?us-ascii?q?q88PTxXwLv6pWAC6FPMdV04B22haaDN+iNhCd2MzpY15UMxWPWx7gbxlIdlyZu?=
 =?us-ascii?q?dzy1G7QaqSHNVL7QmrNQDxMDcSxzKdBH77gi0QhNI8LbjtL126V8jv40DVdFSF?=
 =?us-ascii?q?PgltuoZcwMP2GyKlfHCFyXO7SBID3B29v3br+kSb1MkOVUsAW9uSqaE0/mJDiM?=
 =?us-ascii?q?iyPlWAyvMe5SiiGWJxheuIC7chZwBmnvVtPmahunMNBpiT0626E7hnTPNWQEKz?=
 =?us-ascii?q?hzb1tNrqGM7SNfmvh+G3ZO7nxgLemFnSaW9+jZKpYMvvttDSR5jOZa4HU8y7tI?=
 =?us-ascii?q?4yBIXv11mC3OrtFwp1GqiPWAyj1iUEkGljEen56Ct0FvEbvW+4MGWnve+h8Jq2?=
 =?us-ascii?q?KKBFBCo9pjF82quK1KzNXLvLz8JS0E8N/O+8YYQc/OJ5GpKn0kZCHgAz7dRC8I?=
 =?us-ascii?q?Uz+tfTXEjlddmfW69XCPqJU+7J/2l8xdGfdgSFUpG6ZCWQxeF9sYLcIyB2t8nA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A3AAA4pAdch0O0hNFkHgEGBwaBUwcLA?=
 =?us-ascii?q?YFVBYIRJ5gggg0UiH6OOoFzFBgTAYdRIjYHDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDII2JAGCYgMDAQIkGQEBNwEFCQEBHzEDHjYHEgWDHIFqAxUEAaQigWwzgnYBA?=
 =?us-ascii?q?QWFBg2CFAiHb4MTgRwXgUA/hnqIBYk1hn6Pdy4JgiSIE4NdgyMLGJEvLIhdhXa?=
 =?us-ascii?q?Jf4FNC4F7MxoIKAg7gmyCGwwXEm0BB4dXhV0iMoEFAQGLHQEB?=
X-IPAS-Result: =?us-ascii?q?A0A3AAA4pAdch0O0hNFkHgEGBwaBUwcLAYFVBYIRJ5gggg0?=
 =?us-ascii?q?UiH6OOoFzFBgTAYdRIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYgMDA?=
 =?us-ascii?q?QIkGQEBNwEFCQEBHzEDHjYHEgWDHIFqAxUEAaQigWwzgnYBAQWFBg2CFAiHb4M?=
 =?us-ascii?q?TgRwXgUA/hnqIBYk1hn6Pdy4JgiSIE4NdgyMLGJEvLIhdhXaJf4FNC4F7MxoIK?=
 =?us-ascii?q?Ag7gmyCGwwXEm0BB4dXhV0iMoEFAQGLHQEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="54603686"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 02:15:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727842AbeLEJg7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 04:36:59 -0500
Received: from mail.kernel.org ([198.145.29.99]:39242 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727811AbeLEJgz (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 04:36:55 -0500
Received: from sasha-vm.mshome.net (unknown [213.57.143.11])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 444E020879;
        Wed,  5 Dec 2018 09:36:52 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544002614;
        bh=a/eca9gOXqXlaUX+Kud+VCpRwqX2+UMUVLEsi8A1/G8=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=hqRzwed2oeEgYBnqOVYNWv+viv26kA4Waqj96ijJPptWvtzBfczSWsqbKFKxI7BQi
         O/neYs2+k8KKp6SU9kj864xfEA0VxGE5HHyVoHUeX0tTAh+m7RZ83PEjKKCbfwKVLs
         4Pj5YBs6ES0ZMX7fAGZdFW89LiZNS+eSZ2ZlzaII=
From: Sasha Levin <sashal@kernel.org>
To: stable@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: Taehee Yoo <ap420073@gmail.com>,
        Pablo Neira Ayuso <pablo@netfilter.org>,
        Sasha Levin <sashal@kernel.org>,
        netfilter-devel@vger.kernel.org, coreteam@netfilter.org,
        netdev@vger.kernel.org
Subject: [PATCH AUTOSEL 4.19 018/123] netfilter: nf_conncount: fix list_del corruption in conn_free
Date: Wed,  5 Dec 2018 04:34:10 -0500
Message-Id: <20181205093555.5386-18-sashal@kernel.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181205093555.5386-1-sashal@kernel.org>
References: <20181205093555.5386-1-sashal@kernel.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Taehee Yoo <ap420073@gmail.com>

[ Upstream commit 31568ec09ea02a050249921698c9729419539cce ]

nf_conncount_tuple is an element of nft_connlimit and that is deleted by
conn_free(). Elements can be deleted by both GC routine and data path
functions (nf_conncount_lookup, nf_conncount_add) and they call
conn_free() to free elements. But conn_free() only protects lists, not
each element. So that list_del corruption could occurred.

The conn_free() doesn't check whether element is already deleted. In
order to protect elements, dead flag is added. If an element is deleted,
dead flag is set. The only conn_free() can delete elements so that both
list lock and dead flag are enough to protect it.

test commands:
   %nft add table ip filter
   %nft add chain ip filter input { type filter hook input priority 0\; }
   %nft add rule filter input meter test { ip id ct count over 2 } counter

splat looks like:
[ 1779.495778] list_del corruption, ffff8800b6e12008->prev is LIST_POISON2 (dead000000000200)
[ 1779.505453] ------------[ cut here ]------------
[ 1779.506260] kernel BUG at lib/list_debug.c:50!
[ 1779.515831] invalid opcode: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI
[ 1779.516772] CPU: 0 PID: 33 Comm: kworker/0:2 Not tainted 4.19.0-rc6+ #22
[ 1779.516772] Workqueue: events_power_efficient nft_rhash_gc [nf_tables_set]
[ 1779.516772] RIP: 0010:__list_del_entry_valid+0xd8/0x150
[ 1779.516772] Code: 39 48 83 c4 08 b8 01 00 00 00 5b 5d c3 48 89 ea 48 c7 c7 00 c3 5b 98 e8 0f dc 40 ff 0f 0b 48 c7 c7 60 c3 5b 98 e8 01 dc 40 ff <0f> 0b 48 c7 c7 c0 c3 5b 98 e8 f3 db 40 ff 0f 0b 48 c7 c7 20 c4 5b
[ 1779.516772] RSP: 0018:ffff880119127420 EFLAGS: 00010286
[ 1779.516772] RAX: 000000000000004e RBX: dead000000000200 RCX: 0000000000000000
[ 1779.516772] RDX: 000000000000004e RSI: 0000000000000008 RDI: ffffed0023224e7a
[ 1779.516772] RBP: ffff88011934bc10 R08: ffffed002367cea9 R09: ffffed002367cea9
[ 1779.516772] R10: 0000000000000001 R11: ffffed002367cea8 R12: ffff8800b6e12008
[ 1779.516772] R13: ffff8800b6e12010 R14: ffff88011934bc20 R15: ffff8800b6e12008
[ 1779.516772] FS:  0000000000000000(0000) GS:ffff88011b200000(0000) knlGS:0000000000000000
[ 1779.516772] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 1779.516772] CR2: 00007fc876534010 CR3: 000000010da16000 CR4: 00000000001006f0
[ 1779.516772] Call Trace:
[ 1779.516772]  conn_free+0x9f/0x2b0 [nf_conncount]
[ 1779.516772]  ? nf_ct_tmpl_alloc+0x2a0/0x2a0 [nf_conntrack]
[ 1779.516772]  ? nf_conncount_add+0x520/0x520 [nf_conncount]
[ 1779.516772]  ? do_raw_spin_trylock+0x1a0/0x1a0
[ 1779.516772]  ? do_raw_spin_trylock+0x10/0x1a0
[ 1779.516772]  find_or_evict+0xe5/0x150 [nf_conncount]
[ 1779.516772]  nf_conncount_gc_list+0x162/0x360 [nf_conncount]
[ 1779.516772]  ? nf_conncount_lookup+0xee0/0xee0 [nf_conncount]
[ 1779.516772]  ? _raw_spin_unlock_irqrestore+0x45/0x50
[ 1779.516772]  ? trace_hardirqs_off+0x6b/0x220
[ 1779.516772]  ? trace_hardirqs_on_caller+0x220/0x220
[ 1779.516772]  nft_rhash_gc+0x16b/0x540 [nf_tables_set]
[ ... ]

Fixes: 5c789e131cbb ("netfilter: nf_conncount: Add list lock and gc worker, and RCU for init tree search")
Signed-off-by: Taehee Yoo <ap420073@gmail.com>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 net/netfilter/nf_conncount.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/net/netfilter/nf_conncount.c b/net/netfilter/nf_conncount.c
index 71b1f4f99580..cb33709138df 100644
--- a/net/netfilter/nf_conncount.c
+++ b/net/netfilter/nf_conncount.c
@@ -49,6 +49,7 @@ struct nf_conncount_tuple {
 	struct nf_conntrack_zone	zone;
 	int				cpu;
 	u32				jiffies32;
+	bool				dead;
 	struct rcu_head			rcu_head;
 };
 
@@ -106,6 +107,7 @@ nf_conncount_add(struct nf_conncount_list *list,
 	conn->zone = *zone;
 	conn->cpu = raw_smp_processor_id();
 	conn->jiffies32 = (u32)jiffies;
+	conn->dead = false;
 	spin_lock_bh(&list->list_lock);
 	if (list->dead == true) {
 		kmem_cache_free(conncount_conn_cachep, conn);
@@ -134,12 +136,13 @@ static bool conn_free(struct nf_conncount_list *list,
 
 	spin_lock_bh(&list->list_lock);
 
-	if (list->count == 0) {
+	if (conn->dead) {
 		spin_unlock_bh(&list->list_lock);
-                return free_entry;
+		return free_entry;
 	}
 
 	list->count--;
+	conn->dead = true;
 	list_del_rcu(&conn->node);
 	if (list->count == 0)
 		free_entry = true;
-- 
2.17.1

