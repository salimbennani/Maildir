Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:49:22 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E40C75804F9;
	Wed,  5 Dec 2018 01:52:30 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 01:52:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A3xrOiBOdIwS+JVrDBCYl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPn7osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRsZfWTJcDI2y?=
 =?us-ascii?q?bIUBCOgOPehDr4nlpVYDtgeyCRW2Ce/z0DJEmmP60Ksn2OohCwHG2wkgEsoTvn?=
 =?us-ascii?q?vOt9X1NL0dWv2zwqbW0zXDbvVW0ir65YjTaB8huvGMUqh0ccfKykkgCRnFjlOO?=
 =?us-ascii?q?pozhJT+V0f4Ns2eC4udmSOmhhWknqwRrrTiuwMchkofJhpgLxV/a6Cp23p01Jd?=
 =?us-ascii?q?6kSE58ed6oCpxQtzuVN4ZwX8gsQHlotT4kxrEavZO3ZjUGxZo5yxLFdvCKcJSE?=
 =?us-ascii?q?7gjiWeuTOTt0mm9pdbylixuy80Ws0PDwW8a63VpQsyZJj9/BvW0X2RPJ8MiIUP?=
 =?us-ascii?q?5981+h2TmR0wDT7flJIV47laXFMZ4t2L0wmYQJsUTFACD2nF/6jKiMdkUr4uSo?=
 =?us-ascii?q?6uLnbav6ppKEKYN4lgXzPr4zlsGxH+g0KBUCUmuH9eim1bDu/1X1QLBQgf03lq?=
 =?us-ascii?q?nZvoraJcMepqOhBw9V04Aj6wuwDju/09QXg2MHLFRbdxKDloTpPF/PIPbmAvel?=
 =?us-ascii?q?mFmsjjhryO7cPrH7AZXCMGLDkLH/crZ58UJczxAzzd9H65JOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HACh85Mg+0zPj9BNRyy4MTQmaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jXUhg18SYbGp3YcLaHC/BvlmI1+WYXvwgtgbFmcGpAo+TPHwh12EXj5efHKyX6?=
 =?us-ascii?q?M65jEmB4OqF4bDRoaxgLOf2Ce3BIFZZmdDClqUC3fna52EW+sQaCKVOsJhkDsE?=
 =?us-ascii?q?Wqa7R48i0hGusgn6y718I+rQ+y0Ys4/j1ddv6+3SkxEy6SJ7D8CH326RSGF0m3?=
 =?us-ascii?q?sCRyUq06BnvUx91lCD3LBijPxDFdxT4PBJXh0gNZHGzex3ENTyWgPHfteUR1eq?=
 =?us-ascii?q?WNSmATctTt0vx98CeVpyG9KnjhrbxSqlH6cVl6CXBJwz6q/c3GL+J8Bnx3bC1a?=
 =?us-ascii?q?kulV8mQsRUOG2ih65/8RXTBoHTn0WYkaaqaboT3CrX+GifymqOuVlSUBRsXqXd?=
 =?us-ascii?q?QXAfekzWoMzk6UzYUb+hF64rMgtbxs6EMatFdNvpgVJCRPfgPdTeZ3m8m2OxBR?=
 =?us-ascii?q?aO27ONY5Dme2Qb3CXBFkcElxof8mqBNQg7Hi2huX7RDCRyFVLzZEPh6fRxp2ml?=
 =?us-ascii?q?TkAq1Q2Kb1du17yu+hELg/yRUPcT3rMCuCc8pDR4Ble939TKC9WeowptZrlTYd?=
 =?us-ascii?q?Q44F1fz2LWqxR9PoC8L6BlnlMebwV3v0bp1xVrCoVBkdImrG8wwAp1M6KY1FJB?=
 =?us-ascii?q?dzWX3Z3rPr3XK2/y/A2gaqLM21He1sqW9bkL6Pgit1rjuwSpHFI483p7y9lVz2?=
 =?us-ascii?q?ec5pLSAQUIVZL+TEk2+AZ6pr3AeSY9+p7b2mdqMam3tT/CxckkBO8kyhamYtde?=
 =?us-ascii?q?P7mIFA70E80GGceuLPYmlESubhIBJOpS7rI7P9u6d/ua366mJOZhnC+8gWtb+o?=
 =?us-ascii?q?x800KM+DB6Su7HxJsFx/CY3g2aVzbzlluhs8b3mZxaajEWBGaw1S/kBItJbK1o?=
 =?us-ascii?q?YYkLEXuuI9GwxthmnZ7tWmJX+0S5B1wb38+lYxySYELn3Q1RzEgYvWaomS+lwD?=
 =?us-ascii?q?NqiTEpqayf0TfKw+TjchoHJ2FKSHNjjVfqPYi7kdQaUFK0YAgukRuv/Vz6yLRD?=
 =?us-ascii?q?pKRjM2nTRl9Ffij3L214Uqq8rKGCY9NJ6J4ztSVXUeK8YU2VS7Lnohsa1T/jEH?=
 =?us-ascii?q?VaxDwhaz6qvZD5lQRgiG2BNHZzsGbZecZoyBfd/tPcX/1R3jkBRCVikjnYHFu8?=
 =?us-ascii?q?P9qo/dWSiZjDtPuzV2agVp1VbCnqwpmMtCq95W12HxK/m+q/lcHgEQg/ySX7zc?=
 =?us-ascii?q?VlVT3UrBbgZYnmz6S7PvhgfkVyBl/86sx6F5p6kosxgpEQxHcbio+U/XoBjWf8?=
 =?us-ascii?q?L9Fb1bjiY3oKQD4B28TV7xT92E1/MnKJwJr0VnaHzctgfdW6Yn4W1Tg778BFE6?=
 =?us-ascii?q?qU6L1EnS1oolu3tw7RYP59nisDxvsq8nIVn+YJuA81xCWHHr8SBVVYPTDrlxmQ?=
 =?us-ascii?q?6tC+raZXa3y1fbm+ykV+hsyhA6+Yog5HRnn5YJgiEDR07sV+NlLMzXLy5pvleN?=
 =?us-ascii?q?nWcdIcqBmUnw3cgOhSLZI7juAKijZ/OWLhoX0lzPY2jQBp3ZG/poSGKn9i/KSk?=
 =?us-ascii?q?Ah5DLT31Ztge+jXsjaZYg8aX0JqjHpRnGjUXQpToSeikHy4VtfTiLwyOCiEzqm?=
 =?us-ascii?q?+HGbrDGg+S8FxpoGjIE5CvKnGbPn0Zzch5SRmZJUxfhh0UXTogkp44EACq2NLu?=
 =?us-ascii?q?cENj6j8N4V74rwNGyvh0OBnnTmffuACoZy82SJeFKRpZ8BpC613JMcCE7eJzAi?=
 =?us-ascii?q?JY/oCnrAOXMWyWfABIDWAPWkyZCFHvJLiu5d/c8+eGAuqyNefBYbKLqeZGTfeH?=
 =?us-ascii?q?2Yqv0pd6/zaLLsiOPn5iD+Ai2kpeR395Hd7Vmy4ISywRmCLAdMqbpBa6+i1qoc?=
 =?us-ascii?q?Gz6vXrWATz5YSRD7teK8lg+xezga2bLe6fmD55KSpE1pML3XLIyKYQ3F8RiyFt?=
 =?us-ascii?q?djmhC7cAtTTKTKLfhKBXFQMbazhoOctM7qI82BRNOMHBhtP00L54kuA6C1NfWV?=
 =?us-ascii?q?P9ncGpYNQAI3uhO1PfGEaLKLOGKCXRzMHqeqy8U6NfjeVOux20uDaWCEvjPjWF?=
 =?us-ascii?q?lzn0WBGjK+BMjCeHPBNAvIGxaApiCW/mTNj+cB20LMd3jSEqwb0znn7KKW8cMT?=
 =?us-ascii?q?1mf0xRtLGf8SNYjet5G2Fa6nplLO+EmzuW7uXCK5YWt+drDTpwl+5A/Hs6zL5V?=
 =?us-ascii?q?5jleRPNpgCvSssJuo1a+n+iP0DVnVh9OqjdNhI2TvERiOb/W9p9PWXvf+BIN7G?=
 =?us-ascii?q?OQCwkFptd/C93vvbxQxcbLlK7pNDhC9NfUroMgAJ3PNMuNNHcJLxXkAnjXARED?=
 =?us-ascii?q?QDrtMnvQwwRZkfeP5jiWo4I8p5zEhpUDUPlYWUYzG/dcDV5qT/IYJ5IiZTo/kb?=
 =?us-ascii?q?fTqMMW5Hz2+ALYX8VTurjEW+iUDPGpLyyW2+oXLyAUyK/1eNxAfrbw3FZvPxwj?=
 =?us-ascii?q?xNzH?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACKnwdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieMEowOgg0UlzgUgV8UGA0GAYdRIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIkGQEBNwEFCQEBHzEDQxEHEgWDHAGCAQQBC?=
 =?us-ascii?q?qQSgWwzgnYBAQWBMAGFdgMFh2+DE4EcF4FAP4ERh2ABEgGFeokRhyKQJQmCJIR?=
 =?us-ascii?q?fijQLGJEviQmEaYsMgUaBHHEzGggoCIMnE4IIDBeIXoVdIjIBgQQBAYhfgj4BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0ANAACKnwdch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieMEowOgg0UlzgUgV8UGA0GAYdRIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIkGQEBNwEFCQEBHzEDQxEHEgWDHAGCAQQBCqQSgWwzgnYBAQW?=
 =?us-ascii?q?BMAGFdgMFh2+DE4EcF4FAP4ERh2ABEgGFeokRhyKQJQmCJIRfijQLGJEviQmEa?=
 =?us-ascii?q?YsMgUaBHHEzGggoCIMnE4IIDBeIXoVdIjIBgQQBAYhfgj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="53898318"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 01:52:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729589AbeLEJu7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 04:50:59 -0500
Received: from mail.kernel.org ([198.145.29.99]:57148 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1729193AbeLEJu5 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 04:50:57 -0500
Received: from sasha-vm.mshome.net (unknown [213.57.143.11])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id ADD682082B;
        Wed,  5 Dec 2018 09:50:54 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544003456;
        bh=ydP1pqu5KvtF4FXPXSfciQdzg3eIzisWHBcbMRm9rn0=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=UDzyf6wqnB34sDHZhEgbF+xiK2F+xHAxrgl1IdVgTra49L2HWfpOlZoGb/xuxVXnC
         wEnNBa8PNW5GgNRyUtsYsQXKiw4e4DzPKCrWsu6Ng5S8xy7sZfS7pBMln1eVdC5eCC
         z13YHVI955lQLprHaSbJcJZl9uVE0ehdNlvgXBos=
From: Sasha Levin <sashal@kernel.org>
To: stable@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: "Y.C. Chen" <yc_chen@aspeedtech.com>,
        Dave Airlie <airlied@redhat.com>,
        Sasha Levin <sashal@kernel.org>,
        dri-devel@lists.freedesktop.org
Subject: [PATCH AUTOSEL 4.9 35/45] drm/ast: fixed reading monitor EDID not stable issue
Date: Wed,  5 Dec 2018 04:46:56 -0500
Message-Id: <20181205094706.7225-35-sashal@kernel.org>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181205094706.7225-1-sashal@kernel.org>
References: <20181205094706.7225-1-sashal@kernel.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: "Y.C. Chen" <yc_chen@aspeedtech.com>

[ Upstream commit 300625620314194d9e6d4f6dda71f2dc9cf62d9f ]

v1: over-sample data to increase the stability with some specific monitors
v2: refine to avoid infinite loop
v3: remove un-necessary "volatile" declaration

[airlied: fix two checkpatch warnings]

Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
Signed-off-by: Dave Airlie <airlied@redhat.com>
Link: https://patchwork.freedesktop.org/patch/msgid/1542858988-1127-1-git-send-email-yc_chen@aspeedtech.com
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 drivers/gpu/drm/ast/ast_mode.c | 36 ++++++++++++++++++++++++++++------
 1 file changed, 30 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/ast/ast_mode.c b/drivers/gpu/drm/ast/ast_mode.c
index 57205016b04a..201874b96dd6 100644
--- a/drivers/gpu/drm/ast/ast_mode.c
+++ b/drivers/gpu/drm/ast/ast_mode.c
@@ -954,9 +954,21 @@ static int get_clock(void *i2c_priv)
 {
 	struct ast_i2c_chan *i2c = i2c_priv;
 	struct ast_private *ast = i2c->dev->dev_private;
-	uint32_t val;
+	uint32_t val, val2, count, pass;
+
+	count = 0;
+	pass = 0;
+	val = (ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x10) >> 4) & 0x01;
+	do {
+		val2 = (ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x10) >> 4) & 0x01;
+		if (val == val2) {
+			pass++;
+		} else {
+			pass = 0;
+			val = (ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x10) >> 4) & 0x01;
+		}
+	} while ((pass < 5) && (count++ < 0x10000));
 
-	val = ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x10) >> 4;
 	return val & 1 ? 1 : 0;
 }
 
@@ -964,9 +976,21 @@ static int get_data(void *i2c_priv)
 {
 	struct ast_i2c_chan *i2c = i2c_priv;
 	struct ast_private *ast = i2c->dev->dev_private;
-	uint32_t val;
+	uint32_t val, val2, count, pass;
+
+	count = 0;
+	pass = 0;
+	val = (ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x20) >> 5) & 0x01;
+	do {
+		val2 = (ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x20) >> 5) & 0x01;
+		if (val == val2) {
+			pass++;
+		} else {
+			pass = 0;
+			val = (ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x20) >> 5) & 0x01;
+		}
+	} while ((pass < 5) && (count++ < 0x10000));
 
-	val = ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x20) >> 5;
 	return val & 1 ? 1 : 0;
 }
 
@@ -979,7 +1003,7 @@ static void set_clock(void *i2c_priv, int clock)
 
 	for (i = 0; i < 0x10000; i++) {
 		ujcrb7 = ((clock & 0x01) ? 0 : 1);
-		ast_set_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0xfe, ujcrb7);
+		ast_set_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0xf4, ujcrb7);
 		jtemp = ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x01);
 		if (ujcrb7 == jtemp)
 			break;
@@ -995,7 +1019,7 @@ static void set_data(void *i2c_priv, int data)
 
 	for (i = 0; i < 0x10000; i++) {
 		ujcrb7 = ((data & 0x01) ? 0 : 1) << 2;
-		ast_set_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0xfb, ujcrb7);
+		ast_set_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0xf1, ujcrb7);
 		jtemp = ast_get_index_reg_mask(ast, AST_IO_CRTC_PORT, 0xb7, 0x04);
 		if (ujcrb7 == jtemp)
 			break;
-- 
2.17.1

