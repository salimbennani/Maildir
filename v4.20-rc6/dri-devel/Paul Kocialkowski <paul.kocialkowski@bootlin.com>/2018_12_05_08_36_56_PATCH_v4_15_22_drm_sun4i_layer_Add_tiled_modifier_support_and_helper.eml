Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:47:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 05584580443;
	Wed,  5 Dec 2018 00:38:52 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 00:38:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ARZ7weBRVMR9K3QLfDEtoLbTfctpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRGPt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cZYBAeQCM+hfrYb9qVQBoxSlBQm0Bu7i0SNEi3zs0KEmyektDR3K0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8IX++v0anIySjIYfZR2Tjh6YjHaBQhofKLXbN+asrRykgvHB7Cg1WI?=
 =?us-ascii?q?s4PlIjeV2v4Os2ic8+VgVPigi2okqwF2rDmv3cQsiojSi40OzVDE8jl5wII0Jd?=
 =?us-ascii?q?2+UkJ0fdmkEJ5JuiycKoB4QdsiTnl2tComzrAKo4O3cSYUxJg92hLSaOCLf5KJ?=
 =?us-ascii?q?7x/hTOqcJSt0iGhmdb+8nRq+71WsxvfzW8S71ltBszBLncPWtn8X0hze8siHRe?=
 =?us-ascii?q?V5/kemwTuPyQ/T5f9eIUwulqrUNYQhwrgumZoXq0jDGTX2mErugK+XcEUr5PSo?=
 =?us-ascii?q?5vz5brn6opKQLZJ4hw/gPqg0h8CyAvg0PhIPUmWZ4ei80afs/Uz9QLVElP02la?=
 =?us-ascii?q?zZvYjeJcQaoK65HgBU3p8g6xmhFTem1soXnX0eIFJCdhOHiZbmO0vVLfDmAvew?=
 =?us-ascii?q?nU6snC1ox//YJL3hBIvCLnzZnLfmZ7Z95FZQyBAvwtBH+5JUFrYBLer3Wk/wt9?=
 =?us-ascii?q?zXEAU1MgOpw+v8DNV914UeWX+AA6ODMaPSt0OI6fwrI+WWeIAVvzP9IeA/5/Hy?=
 =?us-ascii?q?lX85hUMdfa6x0JsXcn+4H+hmLF+eYXb2gtcBDH0FvgwxTOHxjF2CUDhTZ2u9Xq?=
 =?us-ascii?q?4m5zE7Dp6mApnHRoy3nLOB2yK7FIVMZm9aElCMDWvod4KcVvcObyKdPNVtkj8D?=
 =?us-ascii?q?VbinTY8h0gqjtAv7y7phM+rV9TcUtZPl1Nhp+eLTkQs++iBzD8SYy2uNVX17nn?=
 =?us-ascii?q?sURz8q26ByuVZyykyD0ah/gPxUD8ZT6OlLUgohMZ7czup6C839Ww7bf9eJTkqm?=
 =?us-ascii?q?TcuiAT0rUt0xxNoOaV5nG9q+lhDDwzaqA7gNmryIHpM09LjQ33zwJ8lnzXbG27?=
 =?us-ascii?q?Isj10nQstJKG2nibRz9wnVB47VjUqZk7ymergb3C7I7G2D13aBvFlEUA5sVqXI?=
 =?us-ascii?q?RW0QaVHIrdvn/E/CT6WhCbI8MgRfz86OLa9Kat7sjVVCX/rjPNXeY2Ssm2a/Hx?=
 =?us-ascii?q?qIx7WMbJb0dGUZxinSFE8EkwUL93acKQc+Hjuho37ZDDF2CF3geV3s/vdkpHO7?=
 =?us-ascii?q?VEA0yRqKYFNn17eu/h4VhPqcS+4c374euSchrSl0E0i5397MF9WAoA9hdr1GYd?=
 =?us-ascii?q?wh+FdHyX7ZtwtlM5y8LqBig1kecxh3v0LuzRl3Fp9Mkc8wrHMuzQpyL62Y3UhF?=
 =?us-ascii?q?dzOZ25DwJ7LWJnPz/BCpd67ZxFXe3MyK9acI7fQys0/jsx2xFko+73Vn1MFY3G?=
 =?us-ascii?q?GY5prUAwsdT5LwXlws+Bhnur7VeC8954DT1X1yKqS0tj7C29Q0BOoq0BqgftFf?=
 =?us-ascii?q?ML+aGw/2CcEVG8+uKOkykVizch0EJPxS9LIzP86+d/qGxbSnM/p6kDOnjWRI+o?=
 =?us-ascii?q?Z90k2X+ip4S+7I2YsFwv6C0guGUTf8kEmussTtlY9YYjESG3K1yTL4C45Jeq1y?=
 =?us-ascii?q?YYELBH+0I8222tpxnYTtVGNf9FK5AVMJxtWpeRuLY1PhxwJQ0VkYrmK9mSu/yT?=
 =?us-ascii?q?x5iDUprquZ3CzTzOXubhsHOmhXRGZ8iVfgO5S7j9cfXEKwdQgmiAOl5Vrmx6hc?=
 =?us-ascii?q?vKl+L2jTTV1IfiTsNGFiT62wu6GGY85O7pMorCpWXP69YVCcVr7yvR8a3zn/EG?=
 =?us-ascii?q?tZwTAxbyuqtYnhnxxmlGKdK25+rHjDdsFqxhff59vcSeRK3jUcRyl4ijjXBl6i?=
 =?us-ascii?q?MNmv5tiUk5bDsuajV2OuTJFTcC/rzZ+euyu//2FlHRq/n/WrkN39DQc6yTP718?=
 =?us-ascii?q?VtVSjQrBfzeI7r2764MeJmeEllH1v868t8GoFjnYo8npAQ2X4GhpqL+XoLi3v8?=
 =?us-ascii?q?MdJe2ajmdnoCWSYLw8LJ4AjiwEBjLWiGx4PjWnWd38tufd+6YmwN1yI57sBKDr?=
 =?us-ascii?q?qU7bNekSt0pFq4sRzeYfxnkjgBzvsu7WYQg/sVtwo10iWdHrcSEFFdPSztlBSH?=
 =?us-ascii?q?9cqyratJa2a0bbi/ylB+ksu/A7GYrQFRQ3L5epYkHS9t4cRzKlPM0Hvv6o76fN?=
 =?us-ascii?q?ncd84cthqRkx3YlehaNIoxluYWhSpgIW/9oXoly+shgR1vx566upWHK352/KK4?=
 =?us-ascii?q?GRNYMjz1Z8UO+jDil6pen8CW35yxEZVlADkEQJzoTfewGjIIqfvnLxqOECE7qn?=
 =?us-ascii?q?qDArXQBwif6EN7r37VF5CrKmqaJH0YzdVkWRmcK1ZTgAESXDUmgJE5Ehqmy9Dm?=
 =?us-ascii?q?cEd8/joR/EL3qgNQyuJ0MBnySmXfqx2tajgqU5iTNgZW4htB50fIMsye8+RzED?=
 =?us-ascii?q?tD/pC6qAyNK2qbZxlHDG0TW0yEAUzjMaeq5dXa7+eYAe++JePUYbqSsexeS+uI?=
 =?us-ascii?q?xZW334pm+DaMK9yPPmR4AP09wEZDRnd5G8LWmzgUTywXliTNb9OUpRum+y13qN?=
 =?us-ascii?q?y//+rvWA71+YSPDL5SO811+x+qmaeDK/KQhCFhJDZYyJwMxHzIyLse3FIIiCFu?=
 =?us-ascii?q?bT6tEbseui7XUaLQgbRaDxoaayN1KctJ4Lgw3ghLOc7HlNz10qR0geIyC1dATV?=
 =?us-ascii?q?bhgN2mZdQWI2GhM1PKHFyENKmdKj3R3c72YbmwSblRjOhPsx2wuDCbE1LsPziZ?=
 =?us-ascii?q?ljnpUQyvPv9IjC2BIBNev4S9eA53CWf/VNLmdgG7MNhvgD0qwL00g2nGOnIGPT?=
 =?us-ascii?q?dgc0NCsLuQ4DhcgvV+HWxB83VkIfOFmyaf8+nXNJIWveF3DSRzkuJQ+G46xKdN?=
 =?us-ascii?q?7CFYWPx1nzPfr950rFGgl+mPyzxnXwJPqzZLno2Lu0piNL7d9plBX3bE4R0M4X?=
 =?us-ascii?q?+RCxQMu9tqFNnvt7pMxdjIkaKgYAtFpt7O/I4QCtbZLOqDMWE9KlznAjPZAAYe?=
 =?us-ascii?q?TiKsLSfYnUMZ2PWT8GCF65Egr93vlYAIR7tzUF0uCuhcC0JrBtUOLZ57GDQ+nv?=
 =?us-ascii?q?rTiM8O+Gr7rxTLQshelo7IW+jUAvj1Ljudy75eaEgm27T9eLwaK4mz+Etpa1B+?=
 =?us-ascii?q?n4PVAEnRFYRVqzBlKAwzq0RE9Ht5UXYw2mrvbQSx5H4VU/Wzm0hl2UNFfe0x+W?=
 =?us-ascii?q?K0sB8MLV3QqX51yRFplA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANAACqjQdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBJfjVCXOBSBXS4TAYdNIjQJDQEDAQEBAQEBAgETAQEBCA0?=
 =?us-ascii?q?JCCkvgjYkAYJiAwMBAiQLAS0ZBgkBAVADKSsHEgWDHIICBAGlcjODfYYvh2+EL?=
 =?us-ascii?q?4FXP4ERgmSEeCCFcgKLIZUuBwKCIASEH4pzI5EsiQmRNoINcFCCbIInF44ePzK?=
 =?us-ascii?q?BBAEBATuIH4JNAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANAACqjQdch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBJfjVCXOBSBXS4TAYdNIjQJDQEDAQEBAQEBAgETAQEBCA0JCCkvgjYkAYJiA?=
 =?us-ascii?q?wMBAiQLAS0ZBgkBAVADKSsHEgWDHIICBAGlcjODfYYvh2+EL4FXP4ERgmSEeCC?=
 =?us-ascii?q?FcgKLIZUuBwKCIASEH4pzI5EsiQmRNoINcFCCbIInF44ePzKBBAEBATuIH4JNA?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="55590524"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 00:38:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727588AbeLEIir (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 03:38:47 -0500
Received: from mail.bootlin.com ([62.4.15.54]:36295 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727410AbeLEIh6 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 03:37:58 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id EC83320E8F; Wed,  5 Dec 2018 09:37:55 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from localhost.localdomain (aaubervilliers-681-1-79-44.w90-88.abo.wanadoo.fr [90.88.21.44])
        by mail.bootlin.com (Postfix) with ESMTPSA id D62EC20D17;
        Wed,  5 Dec 2018 09:37:28 +0100 (CET)
From: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
To: dri-devel@lists.freedesktop.org,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Cc: Maxime Ripard <maxime.ripard@bootlin.com>,
        David Airlie <airlied@linux.ie>, Chen-Yu Tsai <wens@csie.org>,
        Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
        Sean Paul <sean@poorly.run>,
        Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
        linux-sunxi@googlegroups.com, Daniel Vetter <daniel@ffwll.ch>,
        Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Subject: [PATCH v4 15/22] drm/sun4i: layer: Add tiled modifier support and helper
Date: Wed,  5 Dec 2018 09:36:56 +0100
Message-Id: <20181205083703.21488-16-paul.kocialkowski@bootlin.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181205083703.21488-1-paul.kocialkowski@bootlin.com>
References: <20181205083703.21488-1-paul.kocialkowski@bootlin.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

This introduces a list of supported modifiers for the driver, that
includes the Allwinner tiled modifier, as well as a format_mod_supported
callback.

The callback uses both the backend and frontend helpers to indicate
per-format modifier support (including for the linear modifier).

Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Acked-by: Maxime Ripard <maxime.ripard@bootlin.com>
---
 drivers/gpu/drm/sun4i/sun4i_layer.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/sun4i/sun4i_layer.c b/drivers/gpu/drm/sun4i/sun4i_layer.c
index 8cf8ca997b1d..c5a999ca1d72 100644
--- a/drivers/gpu/drm/sun4i/sun4i_layer.c
+++ b/drivers/gpu/drm/sun4i/sun4i_layer.c
@@ -114,6 +114,13 @@ static void sun4i_backend_layer_atomic_update(struct drm_plane *plane,
 	sun4i_backend_layer_enable(backend, layer->id, true);
 }
 
+static bool sun4i_layer_format_mod_supported(struct drm_plane *plane,
+					     uint32_t format, uint64_t modifier)
+{
+	return sun4i_backend_format_is_supported(format, modifier) ||
+	       sun4i_frontend_format_is_supported(format, modifier);
+}
+
 static const struct drm_plane_helper_funcs sun4i_backend_layer_helper_funcs = {
 	.prepare_fb	= drm_gem_fb_prepare_fb,
 	.atomic_disable	= sun4i_backend_layer_atomic_disable,
@@ -127,6 +134,7 @@ static const struct drm_plane_funcs sun4i_backend_layer_funcs = {
 	.disable_plane		= drm_atomic_helper_disable_plane,
 	.reset			= sun4i_backend_layer_reset,
 	.update_plane		= drm_atomic_helper_update_plane,
+	.format_mod_supported	= sun4i_layer_format_mod_supported,
 };
 
 static const uint32_t sun4i_layer_formats[] = {
@@ -157,6 +165,12 @@ static const uint32_t sun4i_layer_formats[] = {
 	DRM_FORMAT_YVYU,
 };
 
+static const uint64_t sun4i_layer_modifiers[] = {
+	DRM_FORMAT_MOD_LINEAR,
+	DRM_FORMAT_MOD_ALLWINNER_TILED,
+	DRM_FORMAT_MOD_INVALID
+};
+
 static struct sun4i_layer *sun4i_layer_init_one(struct drm_device *drm,
 						struct sun4i_backend *backend,
 						enum drm_plane_type type)
@@ -173,7 +187,7 @@ static struct sun4i_layer *sun4i_layer_init_one(struct drm_device *drm,
 				       &sun4i_backend_layer_funcs,
 				       sun4i_layer_formats,
 				       ARRAY_SIZE(sun4i_layer_formats),
-				       NULL, type, NULL);
+				       sun4i_layer_modifiers, type, NULL);
 	if (ret) {
 		dev_err(drm->dev, "Couldn't initialize layer\n");
 		return ERR_PTR(ret);
-- 
2.19.2

