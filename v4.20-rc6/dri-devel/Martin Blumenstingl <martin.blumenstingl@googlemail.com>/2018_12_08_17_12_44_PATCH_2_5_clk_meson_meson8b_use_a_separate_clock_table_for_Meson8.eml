Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:56:34 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7D15D5804C1;
	Sat,  8 Dec 2018 09:16:40 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 09:16:40 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AwZLdChfp0fkoKl8IP6AM29JDlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc68YBSN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJtgqxVoxWvqB5xw4Hbb4+VL+J+c6HGcN8GRmdMRNpdWjZdDo+g?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YAqgGxBROwBOPuzD9Dm2L73akn0+QkDw7G2hcgH84PsH?=
 =?us-ascii?q?TSo9X1MLoZXOewzKbS1zXDc/JW2THn5IfTdhAhvPSMUqx2ccrK1UkvFgXFjlqU?=
 =?us-ascii?q?qYH+MDOV0eMNs2ef7+V+UOKgkW8nqwVrrjezwccsj5DEi4QIwV7H7SV02Jg5Kc?=
 =?us-ascii?q?G8RUJhfNKpHoVcuzuHO4Z1Xs8uWWBltSQixrEYpZK3YCYHxZE6yBHDbvGIboqF?=
 =?us-ascii?q?7xztVOuUOjh3nm5pdK66ihu970StyfDzW8y03VlWoCpFnNzBtn4T2BPI7sWKT/?=
 =?us-ascii?q?9w8Vq61juM0Q3Y9/tKLloulaXBLp4s2r4wmYQXsUTEBiL2hkr2g7GMdkk++ein?=
 =?us-ascii?q?9f7nYrP4qZ+YLYN0jRv+Mqs2lsy+B+Q3LBQOUnCF9eig0LDv51D1TbtUgvEsj6?=
 =?us-ascii?q?XUs4zWKd4aq6O7GwNV15ws6xe7DzeoytQYmnwHIUpBeBKGiYjpJl7PLOn7Dfih?=
 =?us-ascii?q?mVSslilkx/TfMr3mDJTNKGbMkK36cLZj5E5T1hAzwcpc551KELEBJuz8WkvruN?=
 =?us-ascii?q?zfFB85PBS4w/z7B9VlyoMeRWWPD7edMKPTsl+H+PgjIuaRZIIOvDb9Kv4l5+Ph?=
 =?us-ascii?q?jHMjmF8de7Wp0oUTaHyiAvtmJECZa2L2gtgdCWcKohY+TOvyhV2CSzFTZmqyUL?=
 =?us-ascii?q?g75j0hCIKmEJ3MRoaigLGa2Ce7H5tWZn1JC1yWEHfocZmEVOkIaC6IPsBhlTkE?=
 =?us-ascii?q?X6C7S4A9zRGuqBP6y71/I+rW/S0Xq4jv1Nty5+3VkxEy8id5D8Cc02GLUmF1kX?=
 =?us-ascii?q?kERz4w3KBjv0N9zk2P3rR/g/xdDdZT/e9GUh8mNZ7AyOx3E8r9WhnBfteOS1aq?=
 =?us-ascii?q?WM+mDiszTt8qx98OYkB9G8itjxzZ3iqqBaMVmKKPBJAu7q3c2H3xLd5ny3nazK?=
 =?us-ascii?q?khk0UmQsxXOG2lnKF/8RLfB4rIk0qDkaaqer8R3CrM9GeF0GqPs1tUUA92UaXZ?=
 =?us-ascii?q?Q38fYlHaosj+5kPHV7WuE6goMhNdyc6eLatHcsDmgk9YRPj9ItjeY3i+m2GrBR?=
 =?us-ascii?q?mWwLOAa47qe2YY3CXZE0UElwET/XCbNQkxHCuhomTeDCBwGlLreU/j7e5+qHaj?=
 =?us-ascii?q?RE8u0w6Kd1Fh16ay+hMNmPOTUe0T0awetCchsTp0Gk290MzQC9ebowphfaNcYc?=
 =?us-ascii?q?4y4Vtd1GLZsRB9MYKkL6x4mlEedAF3tVv01xprEoVAjdQqrHQywQpuKKKY1VRB?=
 =?us-ascii?q?dy+Y3ZHwILHXNnP+/Be1a67S21He1tmW97wL6PQ5rVXjoQ6oGlAj83Vhz9lazX?=
 =?us-ascii?q?+c6o/WAwoVVJL7Slw3+ARip7HGfik94JvZ2mdoMaaqvT7NxdIoCPE+xRa9YthQ?=
 =?us-ascii?q?KqWEFAz1E80EHMWuLO0qm160bhMLJuxS9ag0P9+4ePuCwqKkIOFgnDe+h2Rd/I?=
 =?us-ascii?q?99yl6M9zZ7SuPQ35cF3uuU0RedWzb9jFeuqMb3mY9faDEWH2q/zzXkBYFLaq1z?=
 =?us-ascii?q?e4YLFXmhI8mtytpigJ7tXmZS9ES/CFMexM+pZR2SYkTn3Q1RyUsYu2anlja/zz?=
 =?us-ascii?q?BulTEmsLCf3C3Xz+v+bhUHPnNES3d4jVfrJ4i5lNQaXEmubwg0mxqp/0f6x65H?=
 =?us-ascii?q?pKthK2nfW1tHfy/zL2t6SKu/qqKCY9JT6JMvqShWUOW8bUqaS7LnuBsaziXjEn?=
 =?us-ascii?q?BaxDA6cTGqp5r4kwZ7iGKbMHZ8sn7ZddtsyhfY4dzWXeRR0SYeRClklTnXAUCx?=
 =?us-ascii?q?P9uz8tWOlJfDsee+W3i6VpJJcinrzoKAtC2l6m1sGhC/m/Gzmtv6EQk1yyP71t?=
 =?us-ascii?q?9qVTnWoxb4eIXky6O6Med/dElyGFD889Z6Gp15koYohJAfw38aio+X/XoGl2f+?=
 =?us-ascii?q?KtFb2aP4bHoQSj8H2d/V4A752EJ9KnKF3Z72VnKYwsF5fdm1fnsW2j4h78BNEK?=
 =?us-ascii?q?qU76ZLnSpvrlq4sALee/59njgGxPsq6X4ahfwJuQU3wiWcBLASAVdXPSj2mxuU?=
 =?us-ascii?q?6NC+qb1dZHyzfrioyEp+gdehAamHogFdW3b2YI0uHCFu4cVkLFLDzmfz5Zr6d9?=
 =?us-ascii?q?nKYtIerRmUkxbGj+hIJ5M9jPsKhSx7OW3juX0p0fI0jRtr3ZuipoiIN31t/L6l?=
 =?us-ascii?q?Ah5fLjD1e8QT+jT3gadfhMmW2Z2vHo56GjUKR5boSfOoEDQPtfXoLQqOETs8qm?=
 =?us-ascii?q?uFFrrbBwOQ9EBmr3fXGZCxK36XPGUZzcllRBSFP0NQmgcUXDEnnpIjEgCq2dfs?=
 =?us-ascii?q?cEN45jAX+175pQFAyuNuNxnjTGjfoB2kZSszSJiaNBBW9B1N51/JMcyC6eJ+By?=
 =?us-ascii?q?NY8YekrAOTMWyXfRhIAXsKWkyZBFDjI7+u6sPb8+WDAuq+Lv3OYaiBqOBEVveI?=
 =?us-ascii?q?w46v3ZVi/zqWKsqPOXxiBeUh2kVfRXB5B9jZmzIXRi0XkCLNctebpAqm9S1xtM?=
 =?us-ascii?q?y/6/PrWATg5YaUD7tSMNNv+w25gKuZNu6Qgjp5Jihc1p8W2XDIz70f1kYIiy5y?=
 =?us-ascii?q?bzmtDagAtSnVQaLQhKBXDh0bayByNMdS7KI8xA5NOcHFhdPvy754leU4C1NEVV?=
 =?us-ascii?q?znh8GoatYGI2C7NFPbGkmLMK6KKiHMw8Hyeam8U6FfjP1Itx2svjaWC1XsPimY?=
 =?us-ascii?q?mDnzSR+uMftAjCWaPBFFvIG9cxBtCXXsTd78ax27NsN3giMywbEumnzKMmscOy?=
 =?us-ascii?q?Bmc0xRtr2Q8T9YgvJnFmxd73plKPOIlDqD4+bEKpYZr/1rDz9wl+Jb5nQ61rRU?=
 =?us-ascii?q?4DtFRPxzhCvdsNpur0u6nemIzzptSABOpSpThIKXoUViPr3U95laVnbC+RIN7G?=
 =?us-ascii?q?OQBAwLpttlENLvva9Qx8PLlKLyLjdC7t3V8dEdB8jSNMKILn4hPQD1Fz7TCQtW?=
 =?us-ascii?q?BQKsYGXegVFN1fiX8nqar5MSrpn3hIFIS7lVTlU5G/oWTEN/E5hKJJZxQyNhmr?=
 =?us-ascii?q?qYpNAH6GD4rxTLQshe+JfdWbbaA//1NTCUkZFObgoMwLniIMIYMYi/k0prcFxh?=
 =?us-ascii?q?gJ7NHUX4V9lcpixrdAJyq0JItDB9Tmw33kvjQgmk8XsSH+S52BUxj082e+Mn9H?=
 =?us-ascii?q?Tg/380K0DMqS92l1M+yvv/hjXEVTfrMKa2FatSFi/5sVMtM5X0R04haASogU1i?=
 =?us-ascii?q?cj3AWrdciaB8dGZkjCfTvpxAHfNZRKxAJhQXwKfENL0TzV1Ap3D/lgd87uzfBM?=
 =?us-ascii?q?46mQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAADH+wtch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCOyeME1+LMIIhlz2Bdg8BARgTAYddIjQJDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCgsJCCkjDII2IoJlAwMBAiQLAQ0BOAEDAgkBAQVLAzEBBQEcBxIFgxyBa?=
 =?us-ascii?q?QEDFQEEmWI8jAkzgncFhDsKQA2CFAIGEodggxOBHIFXP4ERhWmIBQKJLweHVY9?=
 =?us-ascii?q?qBwKCIQSPHyOJZguHTIkij2cCBAIEBQIFDyGBJYIONDyBAYI7ghsMF4NKilQ/M?=
 =?us-ascii?q?oEFAQGMMQEB?=
X-IPAS-Result: =?us-ascii?q?A0ARAADH+wtch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?COyeME1+LMIIhlz2Bdg8BARgTAYddIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjD?=
 =?us-ascii?q?II2IoJlAwMBAiQLAQ0BOAEDAgkBAQVLAzEBBQEcBxIFgxyBaQEDFQEEmWI8jAk?=
 =?us-ascii?q?zgncFhDsKQA2CFAIGEodggxOBHIFXP4ERhWmIBQKJLweHVY9qBwKCIQSPHyOJZ?=
 =?us-ascii?q?guHTIkij2cCBAIEBQIFDyGBJYIONDyBAYI7ghsMF4NKilQ/MoEFAQGMMQEB?=
X-IronPort-AV: E=Sophos;i="5.56,331,1539673200"; 
   d="scan'208";a="54392452"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 09:16:38 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726303AbeLHRNf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 12:13:35 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:40884 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726149AbeLHRNN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 12:13:13 -0500
Received: by mail-wm1-f65.google.com with SMTP id q26so7266986wmf.5;
        Sat, 08 Dec 2018 09:13:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlemail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=g/ziqGNC5yLrBEDwybl8/qjxm6QK9BvYPLsrSMmPZXs=;
        b=Z8x4ur7BNlb+pCA1O28knUs2ZgiQVu4mozJVz42xEH42EE/gSuXRtTSXaTPNoihzUi
         yS3NqVCBgAsP/klR2zRMhe0/3+pw8t5Ja+tRhEoGQHJVMH1IlDQfJ45LDC8UN1iCzQAO
         SKXPkdRetBOeh57I4mJ3qnQLCVQb8HRjEvY5rj50kY7HB73/uNT7SM53K63Be0+sNoBQ
         Qbt7rLR2FZARb9qupSMR7RWOEKxqehjBfdj1uznGpxFFxdfFoCUKIbNczbNKkH074zrW
         jbUuYrgxdBGT3gAdneYohWDNkYq6SWZAU5U+MzGxQGjcS4ZOT8komDJtIXpSd+lmB4TV
         mWuA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=g/ziqGNC5yLrBEDwybl8/qjxm6QK9BvYPLsrSMmPZXs=;
        b=PNILQV3sxR7DXEWLMinG3C8WENkTk360h2FE4b+81yIYiDuefAQ1AHbNxxPHH8cCIq
         L9/nIVuMUiPSEPg8vEijKZebZgP4KzARMt6Vgatba73SlZxcLuENcmvMDrchjyiBo+hy
         vV/D1li5XVcas1TqihGt1AkgmFCVJr2a+fp2GuxrSOO+R7dWgqfEL3obEw69fnb4v4PE
         hSPPkokW3ugc2BZ3PlrQ2IFAkDhtJPG1Tf52riGf+Fow9OZLVpQtWzUsC55JfguPhNUy
         YYp2IjGgG9lLD7TuAPHSJWenPk6RnQ3vHk4iOfccoGDB/N/Tw7wA2yFTeDe+QxUOvOoz
         BOOQ==
X-Gm-Message-State: AA+aEWbj5coahEnGU2Ig07PKfdelAMb3j5CIBq4YufI0zJalbfOlAu+3
        BlULES992OP1TzHzrF/VupU=
X-Google-Smtp-Source: AFSGD/WjDnIYj6G0+ArvdCA/uT5PumtmRC0Kc8LJmA9rMgoV8B+PeIUrmZJSqSOf5YfkM7x7NTpCRg==
X-Received: by 2002:a1c:b189:: with SMTP id a131mr5856966wmf.38.1544289190862;
        Sat, 08 Dec 2018 09:13:10 -0800 (PST)
Received: from blackbox.darklights.net (p200300DCD73FBA00428D5CFFFEB99DB8.dip0.t-ipconnect.de. [2003:dc:d73f:ba00:428d:5cff:feb9:9db8])
        by smtp.googlemail.com with ESMTPSA id r12sm4995851wrq.3.2018.12.08.09.13.09
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 08 Dec 2018 09:13:10 -0800 (PST)
From: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
To: linux-amlogic@lists.infradead.org, linux-clk@vger.kernel.org,
        jbrunet@baylibre.com, narmstrong@baylibre.com,
        khilman@baylibre.com, robh+dt@kernel.org
Cc: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        devicetree@vger.kernel.org, dri-devel@lists.freedesktop.org,
        sboyd@kernel.org, mturquette@baylibre.com,
        Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Subject: [PATCH 2/5] clk: meson: meson8b: use a separate clock table for Meson8
Date: Sat,  8 Dec 2018 18:12:44 +0100
Message-Id: <20181208171247.22238-3-martin.blumenstingl@googlemail.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181208171247.22238-1-martin.blumenstingl@googlemail.com>
References: <20181208171247.22238-1-martin.blumenstingl@googlemail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The Meson8 SoC is slightly different compared to Meson8b and Meson8m2
because it does not have the glitch-free Mali GPU clock mux. For Meson8b
and Meson8m2 there are currently no known differences.

Add a separate clk_hw_onecell_data table for Meson8 so these differences
can be implemented. For now meson8_hw_onecell_data is a clone of our
existing meson8b_hw_onecell_data.

Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
---
 drivers/clk/meson/meson8b.c | 203 ++++++++++++++++++++++++++++++++++--
 1 file changed, 197 insertions(+), 6 deletions(-)

diff --git a/drivers/clk/meson/meson8b.c b/drivers/clk/meson/meson8b.c
index 950d0e548c75..0b9353d8d4fd 100644
--- a/drivers/clk/meson/meson8b.c
+++ b/drivers/clk/meson/meson8b.c
@@ -1659,6 +1659,185 @@ static MESON_GATE(meson8b_ao_ahb_sram, HHI_GCLK_AO, 1);
 static MESON_GATE(meson8b_ao_ahb_bus, HHI_GCLK_AO, 2);
 static MESON_GATE(meson8b_ao_iface, HHI_GCLK_AO, 3);
 
+static struct clk_hw_onecell_data meson8_hw_onecell_data = {
+	.hws = {
+		[CLKID_XTAL] = &meson8b_xtal.hw,
+		[CLKID_PLL_FIXED] = &meson8b_fixed_pll.hw,
+		[CLKID_PLL_VID] = &meson8b_vid_pll.hw,
+		[CLKID_PLL_SYS] = &meson8b_sys_pll.hw,
+		[CLKID_FCLK_DIV2] = &meson8b_fclk_div2.hw,
+		[CLKID_FCLK_DIV3] = &meson8b_fclk_div3.hw,
+		[CLKID_FCLK_DIV4] = &meson8b_fclk_div4.hw,
+		[CLKID_FCLK_DIV5] = &meson8b_fclk_div5.hw,
+		[CLKID_FCLK_DIV7] = &meson8b_fclk_div7.hw,
+		[CLKID_CPUCLK] = &meson8b_cpu_clk.hw,
+		[CLKID_MPEG_SEL] = &meson8b_mpeg_clk_sel.hw,
+		[CLKID_MPEG_DIV] = &meson8b_mpeg_clk_div.hw,
+		[CLKID_CLK81] = &meson8b_clk81.hw,
+		[CLKID_DDR]		    = &meson8b_ddr.hw,
+		[CLKID_DOS]		    = &meson8b_dos.hw,
+		[CLKID_ISA]		    = &meson8b_isa.hw,
+		[CLKID_PL301]		    = &meson8b_pl301.hw,
+		[CLKID_PERIPHS]		    = &meson8b_periphs.hw,
+		[CLKID_SPICC]		    = &meson8b_spicc.hw,
+		[CLKID_I2C]		    = &meson8b_i2c.hw,
+		[CLKID_SAR_ADC]		    = &meson8b_sar_adc.hw,
+		[CLKID_SMART_CARD]	    = &meson8b_smart_card.hw,
+		[CLKID_RNG0]		    = &meson8b_rng0.hw,
+		[CLKID_UART0]		    = &meson8b_uart0.hw,
+		[CLKID_SDHC]		    = &meson8b_sdhc.hw,
+		[CLKID_STREAM]		    = &meson8b_stream.hw,
+		[CLKID_ASYNC_FIFO]	    = &meson8b_async_fifo.hw,
+		[CLKID_SDIO]		    = &meson8b_sdio.hw,
+		[CLKID_ABUF]		    = &meson8b_abuf.hw,
+		[CLKID_HIU_IFACE]	    = &meson8b_hiu_iface.hw,
+		[CLKID_ASSIST_MISC]	    = &meson8b_assist_misc.hw,
+		[CLKID_SPI]		    = &meson8b_spi.hw,
+		[CLKID_I2S_SPDIF]	    = &meson8b_i2s_spdif.hw,
+		[CLKID_ETH]		    = &meson8b_eth.hw,
+		[CLKID_DEMUX]		    = &meson8b_demux.hw,
+		[CLKID_AIU_GLUE]	    = &meson8b_aiu_glue.hw,
+		[CLKID_IEC958]		    = &meson8b_iec958.hw,
+		[CLKID_I2S_OUT]		    = &meson8b_i2s_out.hw,
+		[CLKID_AMCLK]		    = &meson8b_amclk.hw,
+		[CLKID_AIFIFO2]		    = &meson8b_aififo2.hw,
+		[CLKID_MIXER]		    = &meson8b_mixer.hw,
+		[CLKID_MIXER_IFACE]	    = &meson8b_mixer_iface.hw,
+		[CLKID_ADC]		    = &meson8b_adc.hw,
+		[CLKID_BLKMV]		    = &meson8b_blkmv.hw,
+		[CLKID_AIU]		    = &meson8b_aiu.hw,
+		[CLKID_UART1]		    = &meson8b_uart1.hw,
+		[CLKID_G2D]		    = &meson8b_g2d.hw,
+		[CLKID_USB0]		    = &meson8b_usb0.hw,
+		[CLKID_USB1]		    = &meson8b_usb1.hw,
+		[CLKID_RESET]		    = &meson8b_reset.hw,
+		[CLKID_NAND]		    = &meson8b_nand.hw,
+		[CLKID_DOS_PARSER]	    = &meson8b_dos_parser.hw,
+		[CLKID_USB]		    = &meson8b_usb.hw,
+		[CLKID_VDIN1]		    = &meson8b_vdin1.hw,
+		[CLKID_AHB_ARB0]	    = &meson8b_ahb_arb0.hw,
+		[CLKID_EFUSE]		    = &meson8b_efuse.hw,
+		[CLKID_BOOT_ROM]	    = &meson8b_boot_rom.hw,
+		[CLKID_AHB_DATA_BUS]	    = &meson8b_ahb_data_bus.hw,
+		[CLKID_AHB_CTRL_BUS]	    = &meson8b_ahb_ctrl_bus.hw,
+		[CLKID_HDMI_INTR_SYNC]	    = &meson8b_hdmi_intr_sync.hw,
+		[CLKID_HDMI_PCLK]	    = &meson8b_hdmi_pclk.hw,
+		[CLKID_USB1_DDR_BRIDGE]	    = &meson8b_usb1_ddr_bridge.hw,
+		[CLKID_USB0_DDR_BRIDGE]	    = &meson8b_usb0_ddr_bridge.hw,
+		[CLKID_MMC_PCLK]	    = &meson8b_mmc_pclk.hw,
+		[CLKID_DVIN]		    = &meson8b_dvin.hw,
+		[CLKID_UART2]		    = &meson8b_uart2.hw,
+		[CLKID_SANA]		    = &meson8b_sana.hw,
+		[CLKID_VPU_INTR]	    = &meson8b_vpu_intr.hw,
+		[CLKID_SEC_AHB_AHB3_BRIDGE] = &meson8b_sec_ahb_ahb3_bridge.hw,
+		[CLKID_CLK81_A9]	    = &meson8b_clk81_a9.hw,
+		[CLKID_VCLK2_VENCI0]	    = &meson8b_vclk2_venci0.hw,
+		[CLKID_VCLK2_VENCI1]	    = &meson8b_vclk2_venci1.hw,
+		[CLKID_VCLK2_VENCP0]	    = &meson8b_vclk2_vencp0.hw,
+		[CLKID_VCLK2_VENCP1]	    = &meson8b_vclk2_vencp1.hw,
+		[CLKID_GCLK_VENCI_INT]	    = &meson8b_gclk_venci_int.hw,
+		[CLKID_GCLK_VENCP_INT]	    = &meson8b_gclk_vencp_int.hw,
+		[CLKID_DAC_CLK]		    = &meson8b_dac_clk.hw,
+		[CLKID_AOCLK_GATE]	    = &meson8b_aoclk_gate.hw,
+		[CLKID_IEC958_GATE]	    = &meson8b_iec958_gate.hw,
+		[CLKID_ENC480P]		    = &meson8b_enc480p.hw,
+		[CLKID_RNG1]		    = &meson8b_rng1.hw,
+		[CLKID_GCLK_VENCL_INT]	    = &meson8b_gclk_vencl_int.hw,
+		[CLKID_VCLK2_VENCLMCC]	    = &meson8b_vclk2_venclmcc.hw,
+		[CLKID_VCLK2_VENCL]	    = &meson8b_vclk2_vencl.hw,
+		[CLKID_VCLK2_OTHER]	    = &meson8b_vclk2_other.hw,
+		[CLKID_EDP]		    = &meson8b_edp.hw,
+		[CLKID_AO_MEDIA_CPU]	    = &meson8b_ao_media_cpu.hw,
+		[CLKID_AO_AHB_SRAM]	    = &meson8b_ao_ahb_sram.hw,
+		[CLKID_AO_AHB_BUS]	    = &meson8b_ao_ahb_bus.hw,
+		[CLKID_AO_IFACE]	    = &meson8b_ao_iface.hw,
+		[CLKID_MPLL0]		    = &meson8b_mpll0.hw,
+		[CLKID_MPLL1]		    = &meson8b_mpll1.hw,
+		[CLKID_MPLL2]		    = &meson8b_mpll2.hw,
+		[CLKID_MPLL0_DIV]	    = &meson8b_mpll0_div.hw,
+		[CLKID_MPLL1_DIV]	    = &meson8b_mpll1_div.hw,
+		[CLKID_MPLL2_DIV]	    = &meson8b_mpll2_div.hw,
+		[CLKID_CPU_IN_SEL]	    = &meson8b_cpu_in_sel.hw,
+		[CLKID_CPU_IN_DIV2]	    = &meson8b_cpu_in_div2.hw,
+		[CLKID_CPU_IN_DIV3]	    = &meson8b_cpu_in_div3.hw,
+		[CLKID_CPU_SCALE_DIV]	    = &meson8b_cpu_scale_div.hw,
+		[CLKID_CPU_SCALE_OUT_SEL]   = &meson8b_cpu_scale_out_sel.hw,
+		[CLKID_MPLL_PREDIV]	    = &meson8b_mpll_prediv.hw,
+		[CLKID_FCLK_DIV2_DIV]	    = &meson8b_fclk_div2_div.hw,
+		[CLKID_FCLK_DIV3_DIV]	    = &meson8b_fclk_div3_div.hw,
+		[CLKID_FCLK_DIV4_DIV]	    = &meson8b_fclk_div4_div.hw,
+		[CLKID_FCLK_DIV5_DIV]	    = &meson8b_fclk_div5_div.hw,
+		[CLKID_FCLK_DIV7_DIV]	    = &meson8b_fclk_div7_div.hw,
+		[CLKID_NAND_SEL]	    = &meson8b_nand_clk_sel.hw,
+		[CLKID_NAND_DIV]	    = &meson8b_nand_clk_div.hw,
+		[CLKID_NAND_CLK]	    = &meson8b_nand_clk_gate.hw,
+		[CLKID_PLL_FIXED_DCO]	    = &meson8b_fixed_pll_dco.hw,
+		[CLKID_HDMI_PLL_DCO]	    = &meson8b_hdmi_pll_dco.hw,
+		[CLKID_PLL_SYS_DCO]	    = &meson8b_sys_pll_dco.hw,
+		[CLKID_CPU_CLK_DIV2]	    = &meson8b_cpu_clk_div2.hw,
+		[CLKID_CPU_CLK_DIV3]	    = &meson8b_cpu_clk_div3.hw,
+		[CLKID_CPU_CLK_DIV4]	    = &meson8b_cpu_clk_div4.hw,
+		[CLKID_CPU_CLK_DIV5]	    = &meson8b_cpu_clk_div5.hw,
+		[CLKID_CPU_CLK_DIV6]	    = &meson8b_cpu_clk_div6.hw,
+		[CLKID_CPU_CLK_DIV7]	    = &meson8b_cpu_clk_div7.hw,
+		[CLKID_CPU_CLK_DIV8]	    = &meson8b_cpu_clk_div8.hw,
+		[CLKID_ABP_SEL]		    = &meson8b_abp_clk_sel.hw,
+		[CLKID_ABP]		    = &meson8b_abp_clk_gate.hw,
+		[CLKID_PERIPH_SEL]	    = &meson8b_periph_clk_sel.hw,
+		[CLKID_PERIPH]		    = &meson8b_periph_clk_gate.hw,
+		[CLKID_AXI_SEL]		    = &meson8b_axi_clk_sel.hw,
+		[CLKID_AXI]		    = &meson8b_axi_clk_gate.hw,
+		[CLKID_L2_DRAM_SEL]	    = &meson8b_l2_dram_clk_sel.hw,
+		[CLKID_L2_DRAM]		    = &meson8b_l2_dram_clk_gate.hw,
+		[CLKID_HDMI_PLL_LVDS_OUT]   = &meson8b_hdmi_pll_lvds_out.hw,
+		[CLKID_HDMI_PLL_HDMI_OUT]   = &meson8b_hdmi_pll_hdmi_out.hw,
+		[CLKID_VID_PLL_IN_SEL]	    = &meson8b_vid_pll_in_sel.hw,
+		[CLKID_VID_PLL_IN_EN]	    = &meson8b_vid_pll_in_en.hw,
+		[CLKID_VID_PLL_PRE_DIV]	    = &meson8b_vid_pll_pre_div.hw,
+		[CLKID_VID_PLL_POST_DIV]    = &meson8b_vid_pll_post_div.hw,
+		[CLKID_VID_PLL_FINAL_DIV]   = &meson8b_vid_pll_final_div.hw,
+		[CLKID_VCLK_IN_SEL]	    = &meson8b_vclk_in_sel.hw,
+		[CLKID_VCLK_IN_EN]	    = &meson8b_vclk_in_en.hw,
+		[CLKID_VCLK_DIV1]	    = &meson8b_vclk_div1_gate.hw,
+		[CLKID_VCLK_DIV2_DIV]	    = &meson8b_vclk_div2_div.hw,
+		[CLKID_VCLK_DIV2]	    = &meson8b_vclk_div2_div_gate.hw,
+		[CLKID_VCLK_DIV4_DIV]	    = &meson8b_vclk_div4_div.hw,
+		[CLKID_VCLK_DIV4]	    = &meson8b_vclk_div4_div_gate.hw,
+		[CLKID_VCLK_DIV6_DIV]	    = &meson8b_vclk_div6_div.hw,
+		[CLKID_VCLK_DIV6]	    = &meson8b_vclk_div6_div_gate.hw,
+		[CLKID_VCLK_DIV12_DIV]	    = &meson8b_vclk_div12_div.hw,
+		[CLKID_VCLK_DIV12]	    = &meson8b_vclk_div12_div_gate.hw,
+		[CLKID_VCLK2_IN_SEL]	    = &meson8b_vclk2_in_sel.hw,
+		[CLKID_VCLK2_IN_EN]	    = &meson8b_vclk2_clk_in_en.hw,
+		[CLKID_VCLK2_DIV1]	    = &meson8b_vclk2_div1_gate.hw,
+		[CLKID_VCLK2_DIV2_DIV]	    = &meson8b_vclk2_div2_div.hw,
+		[CLKID_VCLK2_DIV2]	    = &meson8b_vclk2_div2_div_gate.hw,
+		[CLKID_VCLK2_DIV4_DIV]	    = &meson8b_vclk2_div4_div.hw,
+		[CLKID_VCLK2_DIV4]	    = &meson8b_vclk2_div4_div_gate.hw,
+		[CLKID_VCLK2_DIV6_DIV]	    = &meson8b_vclk2_div6_div.hw,
+		[CLKID_VCLK2_DIV6]	    = &meson8b_vclk2_div6_div_gate.hw,
+		[CLKID_VCLK2_DIV12_DIV]	    = &meson8b_vclk2_div12_div.hw,
+		[CLKID_VCLK2_DIV12]	    = &meson8b_vclk2_div12_div_gate.hw,
+		[CLKID_CTS_ENCT_SEL]	    = &meson8b_cts_enct_sel.hw,
+		[CLKID_CTS_ENCT]	    = &meson8b_cts_enct.hw,
+		[CLKID_CTS_ENCP_SEL]	    = &meson8b_cts_encp_sel.hw,
+		[CLKID_CTS_ENCP]	    = &meson8b_cts_encp.hw,
+		[CLKID_CTS_ENCI_SEL]	    = &meson8b_cts_enci_sel.hw,
+		[CLKID_CTS_ENCI]	    = &meson8b_cts_enci.hw,
+		[CLKID_HDMI_TX_PIXEL_SEL]   = &meson8b_hdmi_tx_pixel_sel.hw,
+		[CLKID_HDMI_TX_PIXEL]	    = &meson8b_hdmi_tx_pixel.hw,
+		[CLKID_CTS_ENCL_SEL]	    = &meson8b_cts_encl_sel.hw,
+		[CLKID_CTS_ENCL]	    = &meson8b_cts_encl.hw,
+		[CLKID_CTS_VDAC0_SEL]	    = &meson8b_cts_vdac0_sel.hw,
+		[CLKID_CTS_VDAC0]	    = &meson8b_cts_vdac0.hw,
+		[CLKID_HDMI_SYS_SEL]	    = &meson8b_hdmi_sys_sel.hw,
+		[CLKID_HDMI_SYS_DIV]	    = &meson8b_hdmi_sys_div.hw,
+		[CLKID_HDMI_SYS]	    = &meson8b_hdmi_sys.hw,
+		[CLK_NR_CLKS]		    = NULL,
+	},
+	.num = CLK_NR_CLKS,
+};
+
 static struct clk_hw_onecell_data meson8b_hw_onecell_data = {
 	.hws = {
 		[CLKID_XTAL] = &meson8b_xtal.hw,
@@ -2132,7 +2311,6 @@ static int meson8b_cpu_clk_notifier_cb(struct notifier_block *nb,
 
 static struct meson8b_nb_data meson8b_cpu_nb_data = {
 	.nb.notifier_call = meson8b_cpu_clk_notifier_cb,
-	.onecell_data = &meson8b_hw_onecell_data,
 };
 
 static const struct regmap_config clkc_regmap_config = {
@@ -2141,7 +2319,8 @@ static const struct regmap_config clkc_regmap_config = {
 	.reg_stride     = 4,
 };
 
-static void __init meson8b_clkc_init(struct device_node *np)
+static void __init meson8b_clkc_init_common(struct device_node *np,
+			struct clk_hw_onecell_data *clk_hw_onecell_data)
 {
 	struct meson8b_clk_reset *rstc;
 	const char *notifier_clk_name;
@@ -2192,14 +2371,16 @@ static void __init meson8b_clkc_init(struct device_node *np)
 	 */
 	for (i = CLKID_XTAL; i < CLK_NR_CLKS; i++) {
 		/* array might be sparse */
-		if (!meson8b_hw_onecell_data.hws[i])
+		if (!clk_hw_onecell_data->hws[i])
 			continue;
 
-		ret = clk_hw_register(NULL, meson8b_hw_onecell_data.hws[i]);
+		ret = clk_hw_register(NULL, clk_hw_onecell_data->hws[i]);
 		if (ret)
 			return;
 	}
 
+	meson8b_cpu_nb_data.onecell_data = clk_hw_onecell_data;
+
 	/*
 	 * FIXME we shouldn't program the muxes in notifier handlers. The
 	 * tricky programming sequence will be handled by the forthcoming
@@ -2215,13 +2396,23 @@ static void __init meson8b_clkc_init(struct device_node *np)
 	}
 
 	ret = of_clk_add_hw_provider(np, of_clk_hw_onecell_get,
-				     &meson8b_hw_onecell_data);
+				     clk_hw_onecell_data);
 	if (ret)
 		pr_err("%s: failed to register clock provider\n", __func__);
 }
 
+static void __init meson8_clkc_init(struct device_node *np)
+{
+	return meson8b_clkc_init_common(np, &meson8_hw_onecell_data);
+}
+
+static void __init meson8b_clkc_init(struct device_node *np)
+{
+	return meson8b_clkc_init_common(np, &meson8b_hw_onecell_data);
+}
+
 CLK_OF_DECLARE_DRIVER(meson8_clkc, "amlogic,meson8-clkc",
-		      meson8b_clkc_init);
+		      meson8_clkc_init);
 CLK_OF_DECLARE_DRIVER(meson8b_clkc, "amlogic,meson8b-clkc",
 		      meson8b_clkc_init);
 CLK_OF_DECLARE_DRIVER(meson8m2_clkc, "amlogic,meson8m2-clkc",
-- 
2.19.2

