Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 19:35:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DF7D458028E;
	Mon, 10 Dec 2018 02:28:57 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 02:28:57 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A7bVQwhAGols9UkPnZnCxUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/pcmwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobypVUBrQCmBQSuH+7v1iNEimPq0aEmyektDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OqMIXuCz0aLGyC/Mb+lM1jzg74XIcAouru2PXb9rasrR1FIvGB3fglqM?=
 =?us-ascii?q?qI3oJjWY3fkOvWiD9+dsS/6jhmo9pw1srDWj2N0ghpTKi44J0FzJ9Cd0zJ4oKd?=
 =?us-ascii?q?C8SEN3e8OoHZVQui2AKYd6XN8uT3t2tCs6xbALv4OwcjIQx5Q93RHfbuSKc4iW?=
 =?us-ascii?q?7RLnU+acOSl4hH17d7KlnRqy8lavyvf6Vsaq1FZGtC1FksPDtnwV1hzT7NaISu?=
 =?us-ascii?q?dl80u/xTqC0xrf5vxKLEwqj6bXNp0szqIqmpcSs0nPBir2l1/3jK+SeEUk4O+o?=
 =?us-ascii?q?6+H/b7Xip5+cMZJ0iw7nPqQthMO/G+I4PRYKX2SC/uS92rvj8lPjQLhRkP02nb?=
 =?us-ascii?q?fWsIrAKcQYuKG5GQlV3Zgn6xqlCDemytsYkWEdLF1ZYBKHk5TpO1bWLfD8DPe/?=
 =?us-ascii?q?gEqjnC1kxvDbJbDhBpTNLn7ekLbuZ7p96khcyBYtwtBb/Z5bFrYBIPfrUE/rqN?=
 =?us-ascii?q?PYFgM5MxCzw+v/CNVyzIIeWX6VDa+eKq/SsUKI6fgpI+mDf4IVvDf9K/445//h?=
 =?us-ascii?q?l3M5mFkdfbW30psTcny3AvNmI0CBa3r2ntgBCXsKvhY5TOHyil2CViBca2yxX6?=
 =?us-ascii?q?I74DE7DoWmAJzHRoCshryBwSi6EodXZmBAFlCDD3Poe5+YVPcLbSKYOtVhnSAc?=
 =?us-ascii?q?Vbi9V48h0gmjuxXhy7pnKerU+TcUtYj529h3/ODTkRAy9TppD8WSyW2NTmd0nn?=
 =?us-ascii?q?8WSD8yxqxwvUt9ylKb26hin/NYDcBT5+9OUgoiNp7T1ep6B8r2WgLAZNiJTlmm?=
 =?us-ascii?q?T86iATEwSNIx3tAPb1x8G9WkkhDMwS6qD6UJmLyMAZw+6rjc0GTpJ8Zh13bG07?=
 =?us-ascii?q?EsgEQ8TctRK2KqnK5/+BLVB47SjUqZkaGmdaAf3C7I8GeO1m6OvEBeUA5tXqTJ?=
 =?us-ascii?q?R3EfZk3Krdvn4kPOVaOhCbMiMgFZ086NNrNKasH1jVVBXPrsJc7RY3yvlGuqBR?=
 =?us-ascii?q?aH3LWMbJH0dGUbxyjdDEkEkwYO/XeJLwQ+ByGho37AAzxqD17gf0Ts8exmonOh?=
 =?us-ascii?q?UkA01x2Kb1Fm17et5h4VhPmcS/QP3rIEuCYtsSl0EEy639LMD9qApgxhfKpHbN?=
 =?us-ascii?q?M54VdH03/ZtgNnMpyhKaBimkARcwBts0zy0BV3D51KkdI2o3My0ApyNaWY3Utb?=
 =?us-ascii?q?eDOcw5/xNaPYK2no8B+0dq7Zx0vR0NCV+qcI9vQ1sFHjvACvFko//HRrydhV03?=
 =?us-ascii?q?2A5prUCAoeS47+UkEy9xJivbHVfjE955/I1X1rKaS1siLC18g1C+c/yxegf81Q?=
 =?us-ascii?q?MKWLFALpF80aBs6uKPElmlSzbxIEOvxS+7AwP8+8a/SG36urNv56nD26lWRH/J?=
 =?us-ascii?q?x90kWU+ipmS+7Hw4wKw+uF0QuATTv8ikmustr2mYxdeT4dBG6/xjX6C45LYa1y?=
 =?us-ascii?q?e50GCWOvI82x29V/iIThW39e9F6/GVwG3NWldgaVb1z4xQdQz1gYoWS7mSukyD?=
 =?us-ascii?q?x5izEorquF0C3O2ejibwcHOmhQSWlmjFfsJ5W0jt8AUEipaQgpiAWq5ULgy6dH?=
 =?us-ascii?q?o6R/KnHZQV1UcCjuM2FiTqywu6KAY8FV8pMosiZXUOOmbVCBULH9oBga0yLlH2?=
 =?us-ascii?q?RAwjA2bDWqupT/nxxnh2ORNndzrHzFec5uwRfT/sDTRflU3jAeXil3lSHXBkSg?=
 =?us-ascii?q?P9mu5diVl43MsuekW2KjV51TdzLmzYeBtCu9+G1rDgezn/G1mt37Dwc61TX32M?=
 =?us-ascii?q?VtVSXNtBz8eJXk17ymMeJ7eUllHFz85NB7Go1kkoswmYsf2X4VhpiO+XoHkGHz?=
 =?us-ascii?q?MchU2K7kbXoNQyILzMDR4AT/xEJjKXeJzZrjVnqB2sthe8W6YmQO1yI47sBKC7?=
 =?us-ascii?q?2b4KZKnCRruVq4sRzeYeJmkTgD0/su52UXg+UIuAor0yWcDaoeHUhePSzwiRuI?=
 =?us-ascii?q?68qyo7lQZGaqabKwzlZxnci9DLGepQFRQGr5epAnHSNq78RwKlTM0GDo6oH/ed?=
 =?us-ascii?q?nddtYTthySkxfdgOlZMpMxlvwWhSV5PWLxp2Eqy+k+jRZ2x5G1oJCHK3lx/KK+?=
 =?us-ascii?q?GhNXLSf6Z8QX+jHwl6pemtuW0purHpVgHDULQZTpQeipEDIUqfToKQKOHCcgpX?=
 =?us-ascii?q?ecHLrVBRWf51t+r3LTD5CrMGmaJHsDwtVnWhadP1ZTgBwOUDU5g545FR2qxMr7?=
 =?us-ascii?q?f0di/T0R4l/4qh1RyuNnLRX/U2HfpBu2ZTcwUpSQMB1W7gRa7UfPLcOe9v5zHz?=
 =?us-ascii?q?1f/pC5rA2NLXGbZx1VDW4TXEyIHUvjPr6o5dnP6OWYAuu+L/3TYbSBs+BeVvGI?=
 =?us-ascii?q?xY6x3Yti5TqDKsKPPnx6Bf0hxkVDRWx5G9jemzgXSywYiSPNb82YpBe94CF3rd?=
 =?us-ascii?q?q/8PPkWA3x/4uPFqBSPM5r+xC3h6eDKuGRiDx4KTZeypMD23vIxKID014VjiFk?=
 =?us-ascii?q?byOtHqgYtS7RUKLQnbdaAAQGayxoLstH8aI90hNJOc7akd710r94jvgoC1ZKT1?=
 =?us-ascii?q?Dhm8epZdAULGG5Ll/IGEGLNLGeLz3R3873eb+8SaFXjOhMqx2wuDObH1X/MTiZ?=
 =?us-ascii?q?izbpVw6gMedXgSGfPRxevpy9cxl3BWjiStLmdgO0MNttgTIqxr00g2vANXQAPj?=
 =?us-ascii?q?hkb0NNsrqQ4DtYg/plHWxB63tlLe+clCeY7+nXMJAWsfRwDyRwluJa5mk6yrRP?=
 =?us-ascii?q?4CFFQvx1hDXdrtp0r166lemPz2kvbB0biDtRg4eG9WpmOL7C+9EUW3nA/QkW4E?=
 =?us-ascii?q?2KBhgKrscjAdrq7fN+0N/KwYD6Ln9h+sjdtZ8eDsPXANmaK3dnOgi/S22cNxcM?=
 =?us-ascii?q?UTP+bTKXvEdaivzHsyTN9pU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BfAAA4Pw5ch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBZYFWghYnmCBQAQEGgTUUiQyQIi4TAYdqIjgSAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKS+CNiQBgmIBAgMBAiQTPwYJAQEKDgoJExIDDAUYMRMFGYMDgXUNBAGlc?=
 =?us-ascii?q?jOIRoFZjCEXeIEHgRGDEog2giYCiymVTAmRRAsYgVyIFSuHISyaYYF3TTg7gmy?=
 =?us-ascii?q?CJxeOHj8ygQUBAYxJAQE?=
X-IPAS-Result: =?us-ascii?q?A0BfAAA4Pw5ch0O0hNFjGwEBAQEDAQEBBwMBAQGBZYFWghY?=
 =?us-ascii?q?nmCBQAQEGgTUUiQyQIi4TAYdqIjgSAQMBAQEBAQECARMBAQEIDQkIKS+CNiQBg?=
 =?us-ascii?q?mIBAgMBAiQTPwYJAQEKDgoJExIDDAUYMRMFGYMDgXUNBAGlcjOIRoFZjCEXeIE?=
 =?us-ascii?q?HgRGDEog2giYCiymVTAmRRAsYgVyIFSuHISyaYYF3TTg7gmyCJxeOHj8ygQUBA?=
 =?us-ascii?q?YxJAQE?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="66084544"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 10 Dec 2018 02:28:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727246AbeLJK2x (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 05:28:53 -0500
Received: from mx2.suse.de ([195.135.220.15]:50358 "EHLO mx1.suse.de"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726146AbeLJK2w (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 05:28:52 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (unknown [195.135.220.254])
        by mx1.suse.de (Postfix) with ESMTP id D6549AE10;
        Mon, 10 Dec 2018 10:28:49 +0000 (UTC)
Received: by quack2.suse.cz (Postfix, from userid 1000)
        id DA8D51E13F8; Mon, 10 Dec 2018 11:28:46 +0100 (CET)
Date: Mon, 10 Dec 2018 11:28:46 +0100
From: Jan Kara <jack@suse.cz>
To: Jerome Glisse <jglisse@redhat.com>
Cc: John Hubbard <jhubbard@nvidia.com>,
        Matthew Wilcox <willy@infradead.org>,
        Dan Williams <dan.j.williams@intel.com>,
        John Hubbard <john.hubbard@gmail.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux MM <linux-mm@kvack.org>, Jan Kara <jack@suse.cz>,
        tom@talpey.com, Al Viro <viro@zeniv.linux.org.uk>, benve@cisco.com,
        Christoph Hellwig <hch@infradead.org>,
        Christopher Lameter <cl@linux.com>,
        "Dalessandro, Dennis" <dennis.dalessandro@intel.com>,
        Doug Ledford <dledford@redhat.com>,
        Jason Gunthorpe <jgg@ziepe.ca>,
        Michal Hocko <mhocko@kernel.org>, mike.marciniszyn@intel.com,
        rcampbell@nvidia.com,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-fsdevel <linux-fsdevel@vger.kernel.org>
Subject: Re: [PATCH 1/2] mm: introduce put_user_page*(), placeholder versions
Message-ID: <20181210102846.GC29289@quack2.suse.cz>
References: <a0adcf7c-5592-f003-abc5-a2645eb1d5df@nvidia.com>
 <CAPcyv4iNtamDAY9raab=iXhSZByecedBpnGybjLM+PuDMwq7SQ@mail.gmail.com>
 <3c91d335-921c-4704-d159-2975ff3a5f20@nvidia.com>
 <20181205011519.GV10377@bombadil.infradead.org>
 <20181205014441.GA3045@redhat.com>
 <59ca5c4b-fd5b-1fc6-f891-c7986d91908e@nvidia.com>
 <7b4733be-13d3-c790-ff1b-ac51b505e9a6@nvidia.com>
 <20181207191620.GD3293@redhat.com>
 <3c4d46c0-aced-f96f-1bf3-725d02f11b60@nvidia.com>
 <20181208022445.GA7024@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181208022445.GA7024@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri 07-12-18 21:24:46, Jerome Glisse wrote:
> Another crazy idea, why not treating GUP as another mapping of the page
> and caller of GUP would have to provide either a fake anon_vma struct or
> a fake vma struct (or both for PRIVATE mapping of a file where you can
> have a mix of both private and file page thus only if it is a read only
> GUP) that would get added to the list of existing mapping.
>
> So the flow would be:
>     somefunction_thatuse_gup()
>     {
>         ...
>         GUP(_fast)(vma, ..., fake_anon, fake_vma);
>         ...
>     }
> 
>     GUP(vma, ..., fake_anon, fake_vma)
>     {
>         if (vma->flags == ANON) {
>             // Add the fake anon vma to the anon vma chain as a child
>             // of current vma
>         } else {
>             // Add the fake vma to the mapping tree
>         }
> 
>         // The existing GUP except that now it inc mapcount and not
>         // refcount
>         GUP_old(..., &nanonymous, &nfiles);
> 
>         atomic_add(&fake_anon->refcount, nanonymous);
>         atomic_add(&fake_vma->refcount, nfiles);
> 
>         return nanonymous + nfiles;
>     }

Thanks for your idea! This is actually something like I was suggesting back
at LSF/MM in Deer Valley. There were two downsides to this I remember
people pointing out:

1) This cannot really work with __get_user_pages_fast(). You're not allowed
to get necessary locks to insert new entry into the VMA tree in that
context. So essentially we'd loose get_user_pages_fast() functionality.

2) The overhead e.g. for direct IO may be noticeable. You need to allocate
the fake tracking VMA, get VMA interval tree lock, insert into the tree.
Then on IO completion you need to queue work to unpin the pages again as you
cannot remove the fake VMA directly from interrupt context where the IO is
completed.

You are right that the cost could be amortized if gup() is called for
multiple consecutive pages however for small IOs there's no help...

So this approach doesn't look like a win to me over using counter in struct
page and I'd rather try looking into squeezing HMM public page usage of
struct page so that we can fit that gup counter there as well. I know that
it may be easier said than done...

								Honza
-- 
Jan Kara <jack@suse.com>
SUSE Labs, CR
