Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:52:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 1FE5C5804F9;
	Thu,  6 Dec 2018 12:15:31 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 12:15:30 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AHeDvahYGLoIVcdi4Naig+WX/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm4YB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPDOQPM+hXoIb/qFQSohW+HhGsCeH0xz9UhXL7x7E23/gvHAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKofT+C1zLPJzTXYc/NW3i/96IjWfRs8p/+CUq5+f9PTxkIyEA7KklWQ?=
 =?us-ascii?q?qZbkPzOOyuQNtHCb7+p+Wu61j24otRtxoj+vx8o3lobFn5kVxkrK9SVj2Ys4I8?=
 =?us-ascii?q?CzRkB8Yd6hCpRQtieaOpN1Qsw8WWFovjg1yrkctZ68ZigKx5IqzAPcZfyfa4WE?=
 =?us-ascii?q?/A7vWeKLLTtlin9pZqiziwux/ES80OHxV8u53E5OoydLiNXAq3IA2wbN5sWJS/?=
 =?us-ascii?q?Zx5Ems1SqJ2gvO8O9LO1o0mrDeK5M5wr4/iJ4TsUPbEy/ol0X5krWWel8n+ue2?=
 =?us-ascii?q?8eTnZKvpppuGO49zkAH+Pbwims25AesmLggDR3aX9fi42bH54EH0TqtGgucrnq?=
 =?us-ascii?q?TarJzWP8UWq6yhDw9QyIkj6hK/Dzm80NQfmHkKNFZFeBOBj4j0NFDCOfP4Auml?=
 =?us-ascii?q?g1Sqjjhrw+nKPrrvA5XLMHfDiqzsfahy60FC0go/19Nf6IxOCrEHPv3zXlX9tN?=
 =?us-ascii?q?vCDh82KwC02froCM1h1oMCXmKCGquZMKLRsVCW/O4uLPSMaZQRuDb8Lfgl+vHv?=
 =?us-ascii?q?gWU4mV8bYammw58XZGqkEfRhJkWTeWDsjcsZEWcWogo+S/TniF2YXj5Se3a9Ra?=
 =?us-ascii?q?U86is7CIK7F4jDQI+tjaeF3Ce6GJ1We29HBkqNEXfua4WLRfMMZDiOLc9mlzwO?=
 =?us-ascii?q?TaKhRJM51RGyqA/6zKJqLujT+iIGr57j19915+vVlRE17jF0C8Wd02eQT2B7hG?=
 =?us-ascii?q?8IRjk23Lxhrkx50FuMza94g/lAH9xJ+/xJShs6NYLbz+FiEd/yQQLBftCKSFq8?=
 =?us-ascii?q?WNWpGzMxQ8k1w98PZUZ9BtqjggrC3yqsH78aibiLCIYo/aLb2nj7P9x9xGre1K?=
 =?us-ascii?q?k9k1kmRdNCNW68ia557QTTA4/JnF+fl6albqkc2C/N9GGezWuBpk1YUQhwUbnb?=
 =?us-ascii?q?UnAbfEfZsdP55kbaRb+0FbsnKhdBydKFKqZSd9Lml0tGS+n5NNTeeW2xnXywCg?=
 =?us-ascii?q?iOxr+LaIrqeGAd3CHGBUgAkgAT+2uGNAckCiegpWLeECJhFVb1b0zw9ul+rWux?=
 =?us-ascii?q?TlUowAGSc01hy7219wYIivOGVfMcwKgIuCc7pDVyB1aywdTWBsGEpwpgeqVcfN?=
 =?us-ascii?q?w87E1G1WLfqwxyIJigI7p+iV4ZdgR9p1nu2AlvCoVcjcgqq2snzBZzKaKd11NB?=
 =?us-ascii?q?azOY3JDqNr3LMGXy+wqva6rX2lHY39ab4aMP6PU+q1X+swClDEsi83N709ZL13?=
 =?us-ascii?q?uQ/InFDA0XUZjpSEY46wB6p63GYik6/47bz3lsPre7szDc29MlHvAqygu9cNhF?=
 =?us-ascii?q?NqOEFwjyE9MBCsiqKewqnUWpbx0eMOBT8q40I92pd/+c1KG3O+ZgmSqsjX5b74?=
 =?us-ascii?q?BlzkKM6y18R/bI3pYY2f2XwhGLVjb8jFi7tMD3lptJZTUTHmq51CjlC5RdZqx0?=
 =?us-ascii?q?fYYXF2iuJ9e7ycl5h57oQ3RY7kKsB0sa2M+1fhqfd0b93QxM2ksNu3yohCy4wy?=
 =?us-ascii?q?Zykz43tKqf3TXCzPj4exoDJ2FEWnNijVDqIYWvi9AaXU6obxUmlRe/5Eb6wbRb?=
 =?us-ascii?q?q7p7L2XJXUhIeC32JXl4UqSsrrqCf9JP6JQwvCRXUeSwe1CbRqTmoxsH1SPuBG?=
 =?us-ascii?q?9exDE9dzG3tZT1hR16iGSBLHltqHrVY91/xRDa5NbEX/5ewiIGRDVkiTnQHlW8?=
 =?us-ascii?q?PcOm/c+Xl5fAteCyTXmhWYdQcSnozIOAsjW05WtxDB27nvCznMDnEAcg3S/60d?=
 =?us-ascii?q?lqSTvHrBLmbob30KS6NPptflN0C1/k98p6BoZ+n5MwhZ4K3ngWnJeV/XsBkWro?=
 =?us-ascii?q?NdVb2KT+bGcCRDIRwt7V5hTl11NnLn6T2435UXCdyNN7Z9amemMWxj4978dSBa?=
 =?us-ascii?q?eX9rNEnDF5olqlrQ3LZ/h9kSwQyf8v6H4cnuEItxAhziSbArAOA0ZYOTbgmAiP?=
 =?us-ascii?q?79C7tK9XfnqgcaCs1EpimtCsFLSCogBfWHnjYJsjEzF/7t5jMF3Syn388Z/reM?=
 =?us-ascii?q?Pfbd8Ish2UkhHAj/VaKZ4rl/oKgzZnNnz5vXE/1+E7ihlu14mgvIebM2Vt4L65?=
 =?us-ascii?q?AhlAOz3pYMMT/yvhjKdEkcaQwoCvBY5hGjQQUZvsTPKoFi8StPv9OwaPFj08tm?=
 =?us-ascii?q?mUGb7FEQCD70dmqmrFE4q3OHGPOHkZ0dJiSQGGK0NFhwAUWCg6koQ9FgC338Hh?=
 =?us-ascii?q?dEZ55jYM5l/3sBdMy+RoNwXhXWfbvgundjA0SJ2HJhpM8g5C/1vVMdCZ7u9rHS?=
 =?us-ascii?q?FX5JihoxKWKmCBewREF2IJWlGHB1D+OLmh/8LA/vOcBuq/KfvOfLqPpfZfV/eO?=
 =?us-ascii?q?2ZKgzI9m8yyQOcWIO3loF+c71VZbXXBlB8TZnC0CSiwQlyLQds6buQ2z+ittos?=
 =?us-ascii?q?Ck9/TrXg3v6JCLC7tTN9Vv5h+3jb2CN+6WmCZ2NzJY2okQyn/PzbgVxEQShD12?=
 =?us-ascii?q?dzmxDbQAsjbATKLOla9WDB4baCJzONFL76Im2QlNNtDUisno1r5jlfM1D1ZFVV?=
 =?us-ascii?q?r8msCmf8AKIme9NE/ZC0aPLriJOTrLw8Tva6OmVbJQlPlUtwG3uTuDCUDjIy+M?=
 =?us-ascii?q?lyP3WBGvK+1MiCCbMQdauIG8dBZtFGfiQMjnah29LN94kzk2zacoiXPNMG4WKS?=
 =?us-ascii?q?J8fF9Vrr2M8SNYhe1yG3BA7npgN+WLhzyV4PXYKpkIt/tmGSB0l+Nc4HQnxLpZ?=
 =?us-ascii?q?9iBERPppmCTMqt5iuU2pku6KyjB/ShpBti5LhJ6XvUVlIajY9oNPWXDB/BIM62?=
 =?us-ascii?q?WfExULp9t/Bd3ptKBd0dzPlKP1KDdf/NPY58ocB87IKM2ZNHotKwbmGDnRDFhN?=
 =?us-ascii?q?cTn+GWjZhkFZ2M2S8XiNtZ884szgkZwPR7sdSFwyE+sBDUJNGN0EKY1wGDQ+nu?=
 =?us-ascii?q?jIotQP4C+VrAPQX9ldppDKHta/O9LeYGKSjaNFfAcP2bP1a4AeLIrq80cncR90?=
 =?us-ascii?q?htKZSALrQdlRr3g5PUcPq0JX/S07FzVr1g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AcAAAtgglch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgmkDfyeDeoh4iy+BYAglFJc6gXMsCwgBh1ciNQgNAQMBAQEBAQE?=
 =?us-ascii?q?CARMBAQEIDQkIKSMMgjYkAYJiAQIDAQIgBAsBBUEGCQEBChgCAiYCAgMcOAYNB?=
 =?us-ascii?q?gIBAQGDHAGCAQQBCqZEfDOELQGBEoRngQuLFIFXP4ERJwyCX4gFglcCiTGBc5U?=
 =?us-ascii?q?7BwIcc4EVhGCKPB6CKYdJh0QsjU6EKYgPIQGCC3SDOAmCHheIXi6FEj4BATGBB?=
 =?us-ascii?q?QEBijoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AcAAAtgglch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBgmk?=
 =?us-ascii?q?DfyeDeoh4iy+BYAglFJc6gXMsCwgBh1ciNQgNAQMBAQEBAQECARMBAQEIDQkIK?=
 =?us-ascii?q?SMMgjYkAYJiAQIDAQIgBAsBBUEGCQEBChgCAiYCAgMcOAYNBgIBAQGDHAGCAQQ?=
 =?us-ascii?q?BCqZEfDOELQGBEoRngQuLFIFXP4ERJwyCX4gFglcCiTGBc5U7BwIcc4EVhGCKP?=
 =?us-ascii?q?B6CKYdJh0QsjU6EKYgPIQGCC3SDOAmCHheIXi6FEj4BATGBBQEBijoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="54874765"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 12:15:29 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726003AbeLFUP0 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 15:15:26 -0500
Received: from pegase1.c-s.fr ([93.17.236.30]:65401 "EHLO pegase1.c-s.fr"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725927AbeLFUPZ (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 15:15:25 -0500
Received: from localhost (mailhub1-int [192.168.12.234])
        by localhost (Postfix) with ESMTP id 439n0B71Wvz9tyh6;
        Thu,  6 Dec 2018 21:15:22 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
        by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
        with ESMTP id 2mtvfETmqdqw; Thu,  6 Dec 2018 21:15:22 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
        by pegase1.c-s.fr (Postfix) with ESMTP id 439n0B5jmwz9tyh5;
        Thu,  6 Dec 2018 21:15:22 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id DA3368B89D;
        Thu,  6 Dec 2018 21:15:22 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
        by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
        with ESMTP id aMlPjUKYU4SA; Thu,  6 Dec 2018 21:15:22 +0100 (CET)
Received: from [192.168.232.3] (unknown [192.168.232.3])
        by messagerie.si.c-s.fr (Postfix) with ESMTP id 2DD788B88E;
        Thu,  6 Dec 2018 21:15:18 +0100 (CET)
Subject: Re: [PATCH 2/2] kgdb/treewide: constify struct kgdb_arch
 arch_kgdb_ops
To: Daniel Thompson <daniel.thompson@linaro.org>
Cc: Vineet Gupta <vgupta@synopsys.com>,
        Russell King <linux@armlinux.org.uk>,
        Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        Yoshinori Sato <ysato@users.sourceforge.jp>,
        Richard Kuo <rkuo@codeaurora.org>,
        Michal Simek <monstr@monstr.eu>,
        Ralf Baechle <ralf@linux-mips.org>,
        Paul Burton <paul.burton@mips.com>,
        James Hogan <jhogan@kernel.org>,
        Ley Foon Tan <lftan@altera.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Paul Mackerras <paulus@samba.org>,
        Michael Ellerman <mpe@ellerman.id.au>,
        Rich Felker <dalias@libc.org>,
        "David S. Miller" <davem@davemloft.net>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        x86@kernel.org, Jason Wessel <jason.wessel@windriver.com>,
        Douglas Anderson <dianders@chromium.org>,
        Randy Dunlap <rdunlap@infradead.org>,
        "Gustavo A. R. Silva" <gustavo@embeddedor.com>,
        linux-snps-arc@lists.infradead.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org,
        uclinux-h8-devel@lists.sourceforge.jp,
        linux-hexagon@vger.kernel.org, linux-mips@vger.kernel.org,
        nios2-dev@lists.rocketboards.org, linuxppc-dev@lists.ozlabs.org,
        linux-sh@vger.kernel.org, sparclinux@vger.kernel.org,
        kgdb-bugreport@lists.sourceforge.net
References: <75bbcdd1e9277d66ebb06e349dda304bd01ce761.1543957194.git.christophe.leroy@c-s.fr>
 <6b1a19ffa0da02cff9b82b866ba31d57478501ce.1543957194.git.christophe.leroy@c-s.fr>
 <20181206140716.apapnpmdk3nrn7i3@holly.lan>
From: Christophe LEROY <christophe.leroy@c-s.fr>
Message-ID: <0aeb76ee-7250-3833-82f9-44db98cc142a@c-s.fr>
Date: Thu, 6 Dec 2018 21:15:17 +0100
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.2
MIME-Version: 1.0
In-Reply-To: <20181206140716.apapnpmdk3nrn7i3@holly.lan>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: fr
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org



Le 06/12/2018 à 15:07, Daniel Thompson a écrit :
> On Wed, Dec 05, 2018 at 04:41:11AM +0000, Christophe Leroy wrote:
>> checkpatch.pl reports the following:
>>
>>    WARNING: struct kgdb_arch should normally be const
>>    #28: FILE: arch/mips/kernel/kgdb.c:397:
>>    +struct kgdb_arch arch_kgdb_ops = {
>>
>> This report makes sense, as all other ops struct, this
>> one should also be const. This patch does the change.
>>
>> Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
> 
> Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
> 
> Similar to https://patchwork.kernel.org/patch/10701129/ I would be more
> comfortable to see a resend with the relevant arch maintainers
> explicitly called out with a Cc: entry here.

Done in v2

And
Acked-by: Paul Burton <paul.burton@mips.com>

Thanks
Christophe

> 
> 
>> ---
>>   arch/arc/kernel/kgdb.c        | 2 +-
>>   arch/arm/kernel/kgdb.c        | 2 +-
>>   arch/arm64/kernel/kgdb.c      | 2 +-
>>   arch/h8300/kernel/kgdb.c      | 2 +-
>>   arch/hexagon/kernel/kgdb.c    | 2 +-
>>   arch/microblaze/kernel/kgdb.c | 2 +-
>>   arch/mips/kernel/kgdb.c       | 2 +-
>>   arch/nios2/kernel/kgdb.c      | 2 +-
>>   arch/powerpc/kernel/kgdb.c    | 2 +-
>>   arch/sh/kernel/kgdb.c         | 2 +-
>>   arch/sparc/kernel/kgdb_32.c   | 2 +-
>>   arch/sparc/kernel/kgdb_64.c   | 2 +-
>>   arch/x86/kernel/kgdb.c        | 2 +-
>>   include/linux/kgdb.h          | 2 +-
>>   14 files changed, 14 insertions(+), 14 deletions(-)
>>
>> diff --git a/arch/arc/kernel/kgdb.c b/arch/arc/kernel/kgdb.c
>> index 9a3c34af2ae8..bfd04b442e36 100644
>> --- a/arch/arc/kernel/kgdb.c
>> +++ b/arch/arc/kernel/kgdb.c
>> @@ -204,7 +204,7 @@ void kgdb_roundup_cpus(unsigned long flags)
>>   	local_irq_disable();
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* breakpoint instruction: TRAP_S 0x3 */
>>   #ifdef CONFIG_CPU_BIG_ENDIAN
>>   	.gdb_bpt_instr		= {0x78, 0x7e},
>> diff --git a/arch/arm/kernel/kgdb.c b/arch/arm/kernel/kgdb.c
>> index caa0dbe3dc61..21a6d5958955 100644
>> --- a/arch/arm/kernel/kgdb.c
>> +++ b/arch/arm/kernel/kgdb.c
>> @@ -274,7 +274,7 @@ int kgdb_arch_remove_breakpoint(struct kgdb_bkpt *bpt)
>>    * and we handle the normal undef case within the do_undefinstr
>>    * handler.
>>    */
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   #ifndef __ARMEB__
>>   	.gdb_bpt_instr		= {0xfe, 0xde, 0xff, 0xe7}
>>   #else /* ! __ARMEB__ */
>> diff --git a/arch/arm64/kernel/kgdb.c b/arch/arm64/kernel/kgdb.c
>> index a20de58061a8..fe1d1f935b90 100644
>> --- a/arch/arm64/kernel/kgdb.c
>> +++ b/arch/arm64/kernel/kgdb.c
>> @@ -357,7 +357,7 @@ void kgdb_arch_exit(void)
>>   	unregister_die_notifier(&kgdb_notifier);
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops;
>> +const struct kgdb_arch arch_kgdb_ops;
>>   
>>   int kgdb_arch_set_breakpoint(struct kgdb_bkpt *bpt)
>>   {
>> diff --git a/arch/h8300/kernel/kgdb.c b/arch/h8300/kernel/kgdb.c
>> index 1a1d30cb0609..602e478afbd5 100644
>> --- a/arch/h8300/kernel/kgdb.c
>> +++ b/arch/h8300/kernel/kgdb.c
>> @@ -129,7 +129,7 @@ void kgdb_arch_exit(void)
>>   	/* Nothing to do */
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* Breakpoint instruction: trapa #2 */
>>   	.gdb_bpt_instr = { 0x57, 0x20 },
>>   };
>> diff --git a/arch/hexagon/kernel/kgdb.c b/arch/hexagon/kernel/kgdb.c
>> index 16c24b22d0b2..f1924d483e78 100644
>> --- a/arch/hexagon/kernel/kgdb.c
>> +++ b/arch/hexagon/kernel/kgdb.c
>> @@ -83,7 +83,7 @@ struct dbg_reg_def_t dbg_reg_def[DBG_MAX_REG_NUM] = {
>>   	{ "syscall_nr", GDB_SIZEOF_REG, offsetof(struct pt_regs, syscall_nr)},
>>   };
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* trap0(#0xDB) 0x0cdb0054 */
>>   	.gdb_bpt_instr = {0x54, 0x00, 0xdb, 0x0c},
>>   };
>> diff --git a/arch/microblaze/kernel/kgdb.c b/arch/microblaze/kernel/kgdb.c
>> index 6366f69d118e..130cd0f064ce 100644
>> --- a/arch/microblaze/kernel/kgdb.c
>> +++ b/arch/microblaze/kernel/kgdb.c
>> @@ -143,7 +143,7 @@ void kgdb_arch_exit(void)
>>   /*
>>    * Global data
>>    */
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   #ifdef __MICROBLAZEEL__
>>   	.gdb_bpt_instr = {0x18, 0x00, 0x0c, 0xba}, /* brki r16, 0x18 */
>>   #else
>> diff --git a/arch/mips/kernel/kgdb.c b/arch/mips/kernel/kgdb.c
>> index 31eff1bec577..edfdc2ec2d16 100644
>> --- a/arch/mips/kernel/kgdb.c
>> +++ b/arch/mips/kernel/kgdb.c
>> @@ -394,7 +394,7 @@ int kgdb_arch_handle_exception(int vector, int signo, int err_code,
>>   	return -1;
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   #ifdef CONFIG_CPU_BIG_ENDIAN
>>   	.gdb_bpt_instr = { spec_op << 2, 0x00, 0x00, break_op },
>>   #else
>> diff --git a/arch/nios2/kernel/kgdb.c b/arch/nios2/kernel/kgdb.c
>> index 117859122d1c..37b25f844a2d 100644
>> --- a/arch/nios2/kernel/kgdb.c
>> +++ b/arch/nios2/kernel/kgdb.c
>> @@ -165,7 +165,7 @@ void kgdb_arch_exit(void)
>>   	/* Nothing to do */
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* Breakpoint instruction: trap 30 */
>>   	.gdb_bpt_instr = { 0xba, 0x6f, 0x3b, 0x00 },
>>   };
>> diff --git a/arch/powerpc/kernel/kgdb.c b/arch/powerpc/kernel/kgdb.c
>> index 59c578f865aa..bdb588b1d8fb 100644
>> --- a/arch/powerpc/kernel/kgdb.c
>> +++ b/arch/powerpc/kernel/kgdb.c
>> @@ -477,7 +477,7 @@ int kgdb_arch_remove_breakpoint(struct kgdb_bkpt *bpt)
>>   /*
>>    * Global data
>>    */
>> -struct kgdb_arch arch_kgdb_ops;
>> +const struct kgdb_arch arch_kgdb_ops;
>>   
>>   static int kgdb_not_implemented(struct pt_regs *regs)
>>   {
>> diff --git a/arch/sh/kernel/kgdb.c b/arch/sh/kernel/kgdb.c
>> index 4f04c6638a4d..a24c48446e98 100644
>> --- a/arch/sh/kernel/kgdb.c
>> +++ b/arch/sh/kernel/kgdb.c
>> @@ -382,7 +382,7 @@ void kgdb_arch_exit(void)
>>   	unregister_die_notifier(&kgdb_notifier);
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* Breakpoint instruction: trapa #0x3c */
>>   #ifdef CONFIG_CPU_LITTLE_ENDIAN
>>   	.gdb_bpt_instr		= { 0x3c, 0xc3 },
>> diff --git a/arch/sparc/kernel/kgdb_32.c b/arch/sparc/kernel/kgdb_32.c
>> index 639c8e54530a..7580775a14b9 100644
>> --- a/arch/sparc/kernel/kgdb_32.c
>> +++ b/arch/sparc/kernel/kgdb_32.c
>> @@ -166,7 +166,7 @@ void kgdb_arch_set_pc(struct pt_regs *regs, unsigned long ip)
>>   	regs->npc = regs->pc + 4;
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* Breakpoint instruction: ta 0x7d */
>>   	.gdb_bpt_instr		= { 0x91, 0xd0, 0x20, 0x7d },
>>   };
>> diff --git a/arch/sparc/kernel/kgdb_64.c b/arch/sparc/kernel/kgdb_64.c
>> index a68bbddbdba4..5d6c2d287e85 100644
>> --- a/arch/sparc/kernel/kgdb_64.c
>> +++ b/arch/sparc/kernel/kgdb_64.c
>> @@ -195,7 +195,7 @@ void kgdb_arch_set_pc(struct pt_regs *regs, unsigned long ip)
>>   	regs->tnpc = regs->tpc + 4;
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* Breakpoint instruction: ta 0x72 */
>>   	.gdb_bpt_instr		= { 0x91, 0xd0, 0x20, 0x72 },
>>   };
>> diff --git a/arch/x86/kernel/kgdb.c b/arch/x86/kernel/kgdb.c
>> index 8e36f249646e..e7effc02f13c 100644
>> --- a/arch/x86/kernel/kgdb.c
>> +++ b/arch/x86/kernel/kgdb.c
>> @@ -804,7 +804,7 @@ int kgdb_arch_remove_breakpoint(struct kgdb_bkpt *bpt)
>>   				  (char *)bpt->saved_instr, BREAK_INSTR_SIZE);
>>   }
>>   
>> -struct kgdb_arch arch_kgdb_ops = {
>> +const struct kgdb_arch arch_kgdb_ops = {
>>   	/* Breakpoint instruction: */
>>   	.gdb_bpt_instr		= { 0xcc },
>>   	.flags			= KGDB_HW_BREAKPOINT,
>> diff --git a/include/linux/kgdb.h b/include/linux/kgdb.h
>> index e465bb15912d..3bf313311cca 100644
>> --- a/include/linux/kgdb.h
>> +++ b/include/linux/kgdb.h
>> @@ -281,7 +281,7 @@ struct kgdb_io {
>>   	int			is_console;
>>   };
>>   
>> -extern struct kgdb_arch		arch_kgdb_ops;
>> +extern const struct kgdb_arch		arch_kgdb_ops;
>>   
>>   extern unsigned long kgdb_arch_pc(int exception, struct pt_regs *regs);
>>   
>> -- 
>> 2.13.3
>>
