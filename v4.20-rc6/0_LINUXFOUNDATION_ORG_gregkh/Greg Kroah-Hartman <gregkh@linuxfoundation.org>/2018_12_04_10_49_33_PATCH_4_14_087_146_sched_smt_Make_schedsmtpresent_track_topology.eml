Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 20:37:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5DE88580375;
	Tue,  4 Dec 2018 03:19:09 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 03:19:09 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AhvXxFhKtCU84GojTTdmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/7+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYUIDeUBM+hXoIbhqFUBthu+HQuhCfjzyjJLiHL6wbc33v4jHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtNakSS/66zKbVxjvGdfNW3i3y6IjRfh4ju/6MR65wcc/LxkkpCgjIiVqQ?=
 =?us-ascii?q?qZb7MDOa1eQNs3OW7+5hVeKplm4mpA9xoj+yxscql4bGnJ4VylHD9SV/2oo1Is?=
 =?us-ascii?q?e4SEFibNOiDZBeuSaaN45sTcMjRWFloCU6xaMcuZ69YicKzI4rxxnFa/yIdYWD?=
 =?us-ascii?q?/xHtVP6JLDtmmH5ofKiziwu8/ES+0OHwS8q53EpQoidEkNTArnMA2hLJ5sWES/?=
 =?us-ascii?q?Zx5ESs1DKV2wzO9u1JI0Y5nrfBJZE72L4/jJ8TvFzDHiDonEX2i7ebdlsr+ue2?=
 =?us-ascii?q?8eTreLbmqYGGN49ylA7+Nr4imsulAeQ3KgQOXm6b9vqg1LD740H1XLFHgucrnq?=
 =?us-ascii?q?TXrpzWP9kXq62lDwNP04su6Q6zDzK839QZmXkHIkhFeBWCj4XxP1HOIfb4Deqw?=
 =?us-ascii?q?gli1kzdk2erGPrv/DZXJN3TDl7ngfbBj5E5G0wcz099f6IxOCr0bI/L8RFXxtN?=
 =?us-ascii?q?rGAR89KQC0xPznCNpl2oMERW2PGrOZML/VsVKQ4uIvIuqMa5EPtDfyNvgo/Pru?=
 =?us-ascii?q?jX4/mV8Acqilx5oXaHakHvt4J0WVe2bjgtAEEW0SpAoxUPTqiEGeUT5Uf3uyX7?=
 =?us-ascii?q?gz5jAnCI28CofPXICtgKGb0ye9EZ1bfWRGClGKEXf1eISIQfYMaCSOIsB/ljwI?=
 =?us-ascii?q?T6SuS4gk1Ru2rg/116JnLvbI+i0frZ/j1t916PPJmREx8jx0CcKd02aWQmFwn2?=
 =?us-ascii?q?MIQSI23a9lrUx8zFeDzbZ3g/hCGdNP4PNJVx8wNYTAwOxiF9DyRgXBc8+TR1a9?=
 =?us-ascii?q?QtWmBjIxQsgrw9AUYUZwANGijhHF3yq3DL4Zjb2LBJoo8q3C23j9Pdpyy3HD1K?=
 =?us-ascii?q?M5lVkpXtNPNXG6hq547wXTBJTGk0ODm6audKQTxijN9GiYwGqKvUFYVhNwUKrf?=
 =?us-ascii?q?UXAeYEvWscr25kfYQ7CyDrQnNxNLydSeJatSdt3pkVJGSe/+N9vEfWK+hX28BR?=
 =?us-ascii?q?aSybOKd4rlZWMd0CLZCEgHlgAT+W2LNQw/BienvmLfAyZiFVPpY0Pw7+Z+rGm3?=
 =?us-ascii?q?QVMzzwGPd0dhzaa6+gYJhfyATPMexq8Ltz0/qzpqBlq938jZC9ybpwV/eqVRet?=
 =?us-ascii?q?c94FZB1WLEuA1xJJ2gL6Z+hlEAdwR7pV/h1xJyCo9Yi8glsGsqzBZuKaKfyF5B?=
 =?us-ascii?q?azKY3ZX3Or3LKmnz/Aqja7LM1lHZytaW/qYP6PI3q1j4uAGpF0wi82ho0tVP0n?=
 =?us-ascii?q?uc4InKAxQWUZ7rTkk38B16ranAYiYh/4PUyWFsMa6svzDY39ImGuQkxQigfttF?=
 =?us-ascii?q?K6yECRL9HNccB8itL+wqhUOkbhYFPOBU6a41MNmqd/qA2K63IulgmCiqgnhA4I?=
 =?us-ascii?q?B4ykiM7TZzSvbU35YZxPGVxguGVyrmgFi9qMz2mIBEaisUHmqw0iXkAI9RZqtv?=
 =?us-ascii?q?fYcEE2uuIsu3xslgiJ7pQXJX6FmjB1Ye0s+zZRWSd0D93RFX1UkPu3ynmDe3wC?=
 =?us-ascii?q?Zukz40qaqTxirOzPr4dBoGI2JEWHNtjVPxLoeqldAaW06oYhMtlBuk40b62qda?=
 =?us-ascii?q?qL5+L2nVXUdHYSz2I3t+Xau3s7qIe9RP548wsSVLTOS8ZkiXS778oxcA0yLvBX?=
 =?us-ascii?q?BexC09dzyxvpX5nhp6iH+SLXpprXrZf91wygnb5NDGWfFR2T8GTjFiiTbLHli8?=
 =?us-ascii?q?I8Wp/dKMmpfBqO++TWGhVp5UcSXx1oOPrii75W5rAR25gf+znMbqEQw70S/9yt?=
 =?us-ascii?q?lrWj/ErBf6Yon3yau6NfhrcVVvBF/588B6AJ1xkpMshJEM3ngXnpWU8mAAkWvp?=
 =?us-ascii?q?M9Vb2KT+YWEJRT4Kxd7V/Qfk1FdiLnKP24L2SHGdztF9aNm9Z2Mcwjg94NxSCK?=
 =?us-ascii?q?eI8LxEmjN4olmiogLQe/R9niodxuEo6H4VmOwJvAstziOAArEdB0VYPCrslwiW?=
 =?us-ascii?q?4NC6tqlYeGGvcb2o3kpkgd+hFK2Coh1bWHvhf5ciHCxw4d9lPFPCznLz8Z3kd8?=
 =?us-ascii?q?fKbd0IqBKUiRjAgvNRKJIwkPoKmCVmNXj8vX0j1+40kxhu0Yums4iALmVn5Li5?=
 =?us-ascii?q?DQJANj3pe8MT/SngjbpZnsaTxYyuH49uGjMWXJvzVvKoESkftfDmNwaIDT09pW?=
 =?us-ascii?q?2XGbvZHQ+D9khmq2jDHIysN3GSPHMZ18ltRAGBJExDhwAZRC41kYQ+FgCu2czt?=
 =?us-ascii?q?akN55i0K6178qxtMzP9oNhblXmfeogeodik7SJyFIBVK6QFC4l/fMdaC4eJrAy?=
 =?us-ascii?q?FY4pqhoRSPKmOBYgRHE3oJVlaYB1z5Pbmu+NrA8/WeBuWkNPvDerGOqe1YV/eV?=
 =?us-ascii?q?ypOjyIpm/zCQNsqROnluFeE02k1GXXphAcTWhy0PSzALlyLKd8OapBC8+jBurs?=
 =?us-ascii?q?Ci6vvrXhjj5ZCIC7tUPtVi4BS2gaaFN+6Niyd1MzdY1pUQxXDWzLgTxkIdiyZr?=
 =?us-ascii?q?dzO1C7QPqTbNTL7Mmq9QFxMbaz18NMpL76I/3wlBI83bisny1r53kPE1EUpFVU?=
 =?us-ascii?q?f6l8GtZMwKJXy9NVzdCEaKMrSGOSPEw8XtbaygTr1Qif1etwestjaDD0/jIjOD?=
 =?us-ascii?q?miHzWBCyKu5Mlj+UPRxEtIG5cxZgEmzjTNPgah2mP957lzw2wbsohnzUMW4QKy?=
 =?us-ascii?q?Rzc0RIrreI9yNXnu1/G3Bd7npiNeSEhyeZ7+zCJpkKq/dkHiR0mPxc4Hkhz7tV?=
 =?us-ascii?q?7SdEROF6mSfIr95upU2mnfeLyjZ9TBVOrTNLjpqRvUp+IaXZ6oVAWXHc8RMN92?=
 =?us-ascii?q?qQDREKp9pjCtL3uqFQysLAlKT8KDpZ99LU/M0cB9XbKc6dMXohNwbpFyDQDAcf?=
 =?us-ascii?q?UTGrMmTf1ARhl6SW93uIvt05p4LqlZ4mVLBWTho2G+kcB0AjG8YNc7ltWTZxvq?=
 =?us-ascii?q?SWg4Yr/323rFzxTd9Gu5nBHqadG/jgKzaxibhCegsGxq7+IY0PN4r9nUt4ZQ8p?=
 =?us-ascii?q?z8zxB0PMUIUV8WVaZQgurRAIqSAmQw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAAhYQZch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYFZgQ+BAieDeYgZX4svgg0UiH2JP4R5gXMUGAsIAYgRIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCgsJCCkjDEIBEAGBYiQBgmIDAwECIA8BDQEBNwEFCQEBH?=
 =?us-ascii?q?wUCBSECAgMMEjYZBYJRSwGBaQMVBAEKoxFwgQgngnYBAQWBMAGDXQ2CFAMFgQu?=
 =?us-ascii?q?GZIMTgRwXgX+GeoIDgyuCV4kzgW+UYRguCYcDhxCDIyOBW4URijosjUCBDIl9g?=
 =?us-ascii?q?UaCDTMaCCgIgycTggiJAYVAPzIBAYEAAwEBIROFPIJVgk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAAAhYQZch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYF?=
 =?us-ascii?q?ZgQ+BAieDeYgZX4svgg0UiH2JP4R5gXMUGAsIAYgRIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCgsJCCkjDEIBEAGBYiQBgmIDAwECIA8BDQEBNwEFCQEBHwUCBSECAgMMEjY?=
 =?us-ascii?q?ZBYJRSwGBaQMVBAEKoxFwgQgngnYBAQWBMAGDXQ2CFAMFgQuGZIMTgRwXgX+Ge?=
 =?us-ascii?q?oIDgyuCV4kzgW+UYRguCYcDhxCDIyOBW4URijosjUCBDIl9gUaCDTMaCCgIgyc?=
 =?us-ascii?q?TggiJAYVAPzIBAYEAAwEBIROFPIJVgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="53735220"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 03:19:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727672AbeLDLEo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 06:04:44 -0500
Received: from mail.kernel.org ([198.145.29.99]:51904 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728021AbeLDLEl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 06:04:41 -0500
Received: from localhost (5356596B.cm-6-7b.dynamic.ziggo.nl [83.86.89.107])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 939B1214DE;
        Tue,  4 Dec 2018 11:04:39 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543921480;
        bh=aCqfoQCmjqEVVva0g0UsUHNejmRvsBMIAL4O8d0axPY=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=rE3oufYZ1j2cb+MtAIWLB7oIcRa1D1Z0/YU6Xoy73QoSBun2LXE+dWBb5mBc+xQTD
         T6p6GB3Gu6RlIQ8+eOAZIicDAjYse09yiEzqF8qCjmvBCjhIUog19UFLi5N0zYJQlL
         k8NoAzG0PO5EYvgtI7W2JDxNmsUH5DM+uSfE/EZ4=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org,
        "Peter Zijlstra (Intel)" <peterz@infradead.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@kernel.org>,
        Andy Lutomirski <luto@kernel.org>,
        Linus Torvalds <torvalds@linux-foundation.org>,
        Jiri Kosina <jkosina@suse.cz>,
        Tom Lendacky <thomas.lendacky@amd.com>,
        Josh Poimboeuf <jpoimboe@redhat.com>,
        Andrea Arcangeli <aarcange@redhat.com>,
        David Woodhouse <dwmw@amazon.co.uk>,
        Tim Chen <tim.c.chen@linux.intel.com>,
        Andi Kleen <ak@linux.intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        Casey Schaufler <casey.schaufler@intel.com>,
        Asit Mallick <asit.k.mallick@intel.com>,
        Arjan van de Ven <arjan@linux.intel.com>,
        Jon Masters <jcm@redhat.com>,
        Waiman Long <longman9394@gmail.com>,
        Dave Stewart <david.c.stewart@intel.com>,
        Kees Cook <keescook@chromium.org>
Subject: [PATCH 4.14 087/146] sched/smt: Make sched_smt_present track topology
Date: Tue,  4 Dec 2018 11:49:33 +0100
Message-Id: <20181204103730.330415318@linuxfoundation.org>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181204103726.750894136@linuxfoundation.org>
References: <20181204103726.750894136@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
X-Patchwork-Hint: ignore
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

4.14-stable review patch.  If anyone has any objections, please let me know.

------------------

From: Peter Zijlstra (Intel) peterz@infradead.org

commit c5511d03ec090980732e929c318a7a6374b5550e upstream

Currently the 'sched_smt_present' static key is enabled when at CPU bringup
SMT topology is observed, but it is never disabled. However there is demand
to also disable the key when the topology changes such that there is no SMT
present anymore.

Implement this by making the key count the number of cores that have SMT
enabled.

In particular, the SMT topology bits are set before interrrupts are enabled
and similarly, are cleared after interrupts are disabled for the last time
and the CPU dies.

Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Reviewed-by: Ingo Molnar <mingo@kernel.org>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Jiri Kosina <jkosina@suse.cz>
Cc: Tom Lendacky <thomas.lendacky@amd.com>
Cc: Josh Poimboeuf <jpoimboe@redhat.com>
Cc: Andrea Arcangeli <aarcange@redhat.com>
Cc: David Woodhouse <dwmw@amazon.co.uk>
Cc: Tim Chen <tim.c.chen@linux.intel.com>
Cc: Andi Kleen <ak@linux.intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Casey Schaufler <casey.schaufler@intel.com>
Cc: Asit Mallick <asit.k.mallick@intel.com>
Cc: Arjan van de Ven <arjan@linux.intel.com>
Cc: Jon Masters <jcm@redhat.com>
Cc: Waiman Long <longman9394@gmail.com>
Cc: Greg KH <gregkh@linuxfoundation.org>
Cc: Dave Stewart <david.c.stewart@intel.com>
Cc: Kees Cook <keescook@chromium.org>
Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/20181125185004.246110444@linutronix.de
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 kernel/sched/core.c |   19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -5617,15 +5617,10 @@ int sched_cpu_activate(unsigned int cpu)
 
 #ifdef CONFIG_SCHED_SMT
 	/*
-	 * The sched_smt_present static key needs to be evaluated on every
-	 * hotplug event because at boot time SMT might be disabled when
-	 * the number of booted CPUs is limited.
-	 *
-	 * If then later a sibling gets hotplugged, then the key would stay
-	 * off and SMT scheduling would never be functional.
+	 * When going up, increment the number of cores with SMT present.
 	 */
-	if (cpumask_weight(cpu_smt_mask(cpu)) > 1)
-		static_branch_enable_cpuslocked(&sched_smt_present);
+	if (cpumask_weight(cpu_smt_mask(cpu)) == 2)
+		static_branch_inc_cpuslocked(&sched_smt_present);
 #endif
 	set_cpu_active(cpu, true);
 
@@ -5669,6 +5664,14 @@ int sched_cpu_deactivate(unsigned int cp
 	 */
 	synchronize_rcu_mult(call_rcu, call_rcu_sched);
 
+#ifdef CONFIG_SCHED_SMT
+	/*
+	 * When going down, decrement the number of cores with SMT present.
+	 */
+	if (cpumask_weight(cpu_smt_mask(cpu)) == 2)
+		static_branch_dec_cpuslocked(&sched_smt_present);
+#endif
+
 	if (!sched_smp_initialized)
 		return 0;
 


