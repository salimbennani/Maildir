Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:55:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AE037580375;
	Mon,  3 Dec 2018 09:07:19 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 03 Dec 2018 09:07:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArkKiaxCHOzByMUq4YqUpUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+p8WwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95SWSJcAo2y?=
 =?us-ascii?q?cYUBAOgPPelEqIfyqFQArQCmBQSuH+7v1j1Fi2Xq0aAgz+gsDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OboIXuCv0KnD0DrMYOlQ2Tzg9IXIaQshru2MXb1ubMHczlIgFx3fgVWW?=
 =?us-ascii?q?s4PlJCiV2fgNs2eF9OdvT/6gi2s9pwF2uDivyd4hh4/UjYwW0lDJ7Tt1zJoxKN?=
 =?us-ascii?q?GiVUJ2b8CoHIFNuyyZK4d6WMIvTmNwtCoky7AKp4K3cS0XxJkn2xHSbuKLfJSV?=
 =?us-ascii?q?7R/mSuqdPTl1iXdldb2jmhm97U2tx+LiWsWqzFlHqyhIncLSun0O0hHc9NOIRe?=
 =?us-ascii?q?B980qnxD2BzRrc6vteLkAxjafbK4Auwro3lpcLr0TDETH5mF/sgK+VaEok4O6o?=
 =?us-ascii?q?5PrjYrn8oZ+cLYB0hhn/MqQohMO/Hfw1PhYSU2Wf4+iwybPu8VPjTLlXjfA6jr?=
 =?us-ascii?q?PVvZHYKMgDo662GQ5V0oIt6xalCDem1cwVnX0GLFJDZRKGgJHlO1LQL/DiC/ew?=
 =?us-ascii?q?nVCsnC5sx/HIOL3uHI/NI2PdkLfuY7l98VRQyAktwtBF4ZJbFLUBLOj0Wk/ru9?=
 =?us-ascii?q?zUFgU5PBCsw+b7FNV90ZsTWWaOAq+aLqzeq1CJ5v80LumIZY8Vviv9Kvc/6/7v?=
 =?us-ascii?q?i385hUESfa2z0ZQLb3C4G+xsI1+Fbnr0ntcBDWAKsxI+TOPwiV2CTSRcZ3GoU6?=
 =?us-ascii?q?I8+zE0EoSmDYjYS4CpgbyB2jq7H5JMamBHDFCMDWnnd4GeV/gQbyKSJ9drkiYY?=
 =?us-ascii?q?Wri5V48hyRauuRf4y7pgMOXY4C4YtZXl1Nhz4O3ejhUy9T1yD8SA3GCBVWB0nm?=
 =?us-ascii?q?UURzAo2KBzu1ByylCG0aJgmfxXCcRT5+9VUgc9LZPT1fd6C9D1WgLCZNuJUkyp?=
 =?us-ascii?q?Qte9DDE1T9IxxcIOYklnF9WjiBDDwzSlA7sPm7OXA5w097rW32LtKMZl13bGyK?=
 =?us-ascii?q?4hgkElQsRVM22qnKp/9wnJCI7PnEWUjKKqdaUa3C7Q+2aP12uOvEdEUAFuVaXJ?=
 =?us-ascii?q?R2wQZkzTrd7h/EPNU6euCag7MgtG0cONN7FFasP3gllcRPfsItLeY3mvlGe2Ah?=
 =?us-ascii?q?qIwrCMbI/ue2gG2CXdCU4Ekx0c/HqcNAg+ADuhrHzaDDB0CV3vZEbs+/FkqHyn?=
 =?us-ascii?q?Vk800x2Kb0p52rWo4BEVm+KTR+kT3r0evichsCt7HFCm0tLSCtqAoRdhfapGbd?=
 =?us-ascii?q?M85ldHyXzWtwhnMpO8KKBig0YUcx5rsEP2yxV3FoJAnNA2rHMryQpyLr6Y0FNB?=
 =?us-ascii?q?dj+CwZD8ILrXKnP2/BCuba7W1UrT0NKX+qcJ9fQ5pE/vvACvFko+7Xpn18NZ3G?=
 =?us-ascii?q?eb5pXPFAASS47+Ul4r9xhmoLHXejMy54fK2nxjL6a1siXO1Mk0BOQ40BmgedRf?=
 =?us-ascii?q?MKSaFALpF80aBs6uKPElmlSzbxIEOvxS+7AwP8+8a/SG36urNv56nD26lWRH/J?=
 =?us-ascii?q?x90kWU+it8V+7ExYoKz+uZ3wuHTTj8ilihv9vzmYBFYzESA2W+xTLlBI5Xeq19?=
 =?us-ascii?q?Y4ILBX2yLM2ww9V0n4TtVGJA9F6/G1MG39ekeQCTb1PhxwJQz1kYoXu9lSu+0T?=
 =?us-ascii?q?N0iTAporOD0yPUx+TtaQQIOnRMRGlkllrsJYm0j9YHXEmndQQplR2l5VrkyKhf?=
 =?us-ascii?q?vqhwM27TQUJQdSjsM25iSrewtqaFY8NX6JIosD9bUeSmbVCBV779pQAX0yfiH2?=
 =?us-ascii?q?tY2TA6eCumupT/nxxmlm2dKGx/o2beecF13R3f/sDTReZN3joaQyl1kTvXCUKm?=
 =?us-ascii?q?P9mq/tWUkI3PsvukWGKiVZ1TcC/rwp2GtCag4W1qABu/n+28m9H9EAg61zP72M?=
 =?us-ascii?q?duVSnSsBn8ZYzr3bygMe17ZkloGEP8681iF4B+iIQwg4sc2XobhpWT5ncHlWbz?=
 =?us-ascii?q?MdNG2aPxdnYNRDgLw8LL7wjhwkFsMnWJx4fhXHWH3sRhf8W6Yn8R2i8l7MBFEq?=
 =?us-ascii?q?aU4KZEnStouFW4qw3RbON5njccz/su9XEbj/sIuAor0iWSHLQSEVNEMizrkhSC?=
 =?us-ascii?q?98q+o7lPZGazbbiw01JzndWgDLGBuA5QQnj4dYk5HS9s8Mp/KknD32Pp6oHrY9?=
 =?us-ascii?q?TQadMTthuJkxbPleRVKZQxluYUiipjI27yoXoly+sjhxx0wZ66pJSHK3lq/K+h?=
 =?us-ascii?q?Hh5YMTj1a9kS+z73i6Zeg92W35uuHph6HjULXZ3oTe+nET4ItPTnMRqOHyM4qn?=
 =?us-ascii?q?uBBbXfGgqf4l98r33TC5CrK22XJH4BwNp5XhadI0hfgB0OUDU+g540DQSqxM3n?=
 =?us-ascii?q?cEdk6TEd/F/4qh1Qyu12MxnzSHvQpACtaj0sUpiQMAJW7h1e50fSKcGe7Ph8Hy?=
 =?us-ascii?q?RG8Z26tgCNNnaXZwdVDWEKR0yEAUrsPqK16NnE8uiYAPe+LvTUbbWPr+xeS+mH?=
 =?us-ascii?q?xZa13oR6+DaMM92FPmN+AP0jxkpDQXd5FtzZmjUIViwXjj/NYNSdpBum4S13qc?=
 =?us-ascii?q?a/8PvwVQLr5IuPDaZSMNp19xC3h6eDK/CfhCJjJTlE0ZMMwGfCyKID014KlyFu?=
 =?us-ascii?q?az6tHKwAtSHTTaLQmaxXDx8BZyNwLstI6K080RdXOc7GkdP4zbp4jv8zC1dYWl?=
 =?us-ascii?q?3tgMCpZcoWI26jMFPLHlqENLODJTfT2cH4fbu8SaFMjOVTrxC/oyubHFT5Pjud?=
 =?us-ascii?q?lzjlTRSvMeBXgSGfPRxevpy9cxl3BWjiStLmdgO0MNttgTIqxr00g2vANXQAPj?=
 =?us-ascii?q?hkb0NNsrqQ4DtEgvV+HmxN9GZqIfOYlCaZ8ebYLI0bsf9qAiRyiuJb7242y7pT?=
 =?us-ascii?q?7CFYWvN1nDHeocJpo1GjiuOP0CZoUAJSqjZXg4KGpUVjNr/f9plFWHbE+goC7G?=
 =?us-ascii?q?SQCxsQodtlBcbiu6RRytjJiaLyJy1O89PS/csAGcfULNiLP2YmMRrsS3boC149?=
 =?us-ascii?q?QCKmLynthk5Zi+2I/zXBtpUmp4L+sJsIRKVSWFE8GrUdEEszT/IYJ5IidDo+jf?=
 =?us-ascii?q?alhchAzGGlpxncDJFQoJnBX+mJCvXiAD+SiP9DfRRekuCwFpgaKoCugx8qUVJ9?=
 =?us-ascii?q?homfXhOIBd0=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAABzYgVch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBUgQBAQEBCwGBMII7mESCDRSXNIIFAQErAYgJIjUIDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBCgsJCCkvgjYkAYJiAwMBAnYGCQEBCkYDMQEFARwGGIMcggIBBJo1P?=
 =?us-ascii?q?Iw8hUGEYBKMCheBf4QjilwCj3Q2kBYJkVSJW4dLmEYGAgkHDyGBJgGCCzMaMIM?=
 =?us-ascii?q?wgiMCAReOPh+BNwEBIYo2AQE?=
X-IPAS-Result: =?us-ascii?q?A0ACAABzYgVch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBUgQ?=
 =?us-ascii?q?BAQEBCwGBMII7mESCDRSXNIIFAQErAYgJIjUIDQEDAQEBAQEBAgETAQEBCgsJC?=
 =?us-ascii?q?CkvgjYkAYJiAwMBAnYGCQEBCkYDMQEFARwGGIMcggIBBJo1PIw8hUGEYBKMChe?=
 =?us-ascii?q?Bf4QjilwCj3Q2kBYJkVSJW4dLmEYGAgkHDyGBJgGCCzMaMIMwgiMCAReOPh+BN?=
 =?us-ascii?q?wEBIYo2AQE?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="42529041"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 09:07:07 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726894AbeLCRHI (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 12:07:08 -0500
Received: from mail-pg1-f194.google.com ([209.85.215.194]:42324 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726855AbeLCRHI (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 12:07:08 -0500
Received: by mail-pg1-f194.google.com with SMTP id d72so5982978pga.9
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 09:07:03 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:message-id:subject:from:to:cc:date:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=zFJkM5XBvi3wb2HxvmOMvG0u+beYGog/eGkVjGSe4PQ=;
        b=EO2kjQ1w1qk6qYSyFsjvE182nUPWSHqGYBb94vvbG6Ttv4PPP5Noe22HKkt8zLRS4b
         zyl0HtsfaVuQrUwQfuSboRKDQXHCSfTo/cLnsiR9MFNEC9UJd8GnWKjp+ZcffuZunf9Y
         2hBeX2vnYN1/3SEF7HYZL8cIfzG6BO2p8g6Ijy6c4Nqei70RADJ8tDxdqfibig1GMHYP
         gTRSsEu8jGfjFjVTEe7u9YmIjv0x7o+g9LKiLgvQNCIYafkNba7OajLWRO5nLUcDlf6f
         gRkFaotLhxCifJMq5563W9ajwI9zQ3YBgkErBi7i8PSNmgbzjnImnMXEu8airNuFx/fX
         GsjQ==
X-Gm-Message-State: AA+aEWbg1irbCCH+4DZZgyLVtqeP4l98lFkyqBbLaiamLzIGmkra83UU
        xCL97Y9jODCZLpynkAnIgj0=
X-Google-Smtp-Source: AFSGD/W8Z130Y14fmgISnscmbBCZMXHuClgvMkoIKhZDt23TR+sDLgXVxkLCwkkrFySDtq+K5kJNVg==
X-Received: by 2002:a63:9e0a:: with SMTP id s10mr14028888pgd.239.1543856822790;
        Mon, 03 Dec 2018 09:07:02 -0800 (PST)
Received: from ?IPv6:2620:15c:2cd:203:5cdc:422c:7b28:ebb5? ([2620:15c:2cd:203:5cdc:422c:7b28:ebb5])
        by smtp.gmail.com with ESMTPSA id l19sm30623477pfi.71.2018.12.03.09.07.01
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 03 Dec 2018 09:07:02 -0800 (PST)
Message-ID: <1543856820.185366.159.camel@acm.org>
Subject: Re: [PATCH 25/27] locking/lockdep: Add support for dynamic keys
From: Bart Van Assche <bvanassche@acm.org>
To: Peter Zijlstra <peterz@infradead.org>
Cc: mingo@redhat.com, tj@kernel.org, johannes.berg@intel.com,
        linux-kernel@vger.kernel.org
Date: Mon, 03 Dec 2018 09:07:00 -0800
In-Reply-To: <20181129101000.GF2131@hirez.programming.kicks-ass.net>
References: <20181128234325.110011-1-bvanassche@acm.org>
         <20181128234325.110011-26-bvanassche@acm.org>
         <20181129101000.GF2131@hirez.programming.kicks-ass.net>
Content-Type: text/plain; charset="UTF-7"
X-Mailer: Evolution 3.26.2-1 
Mime-Version: 1.0
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 2018-11-29 at 11:10 +-0100, Peter Zijlstra wrote:
+AD4 On Wed, Nov 28, 2018 at 03:43:23PM -0800, Bart Van Assche wrote:
+AD4 +AD4 +-/+ACo hash+AF8-entry is used to keep track of dynamically allocated keys. +ACo-/
+AD4 +AD4  struct lock+AF8-class+AF8-key +AHs
+AD4 +AD4 +-	struct hlist+AF8-node		hash+AF8-entry+ADs
+AD4 +AD4  	struct lockdep+AF8-subclass+AF8-key	subkeys+AFs-MAX+AF8-LOCKDEP+AF8-SUBCLASSES+AF0AOw
+AD4 +AD4  +AH0AOw
+AD4 
+AD4 One consideration+ADs and maybe we should have a BUILD+AF8-BUG for that, is
+AD4 that this object should be no larger than the smallest lock primitive.
+AD4 
+AD4 That typically is raw+AF8-spinlock+AF8-t, which normally is 4 bytes, but with
+AD4 lockdep on that at least also includes struct lockdep+AF8-map.
+AD4 
+AD4 So what we want is:
+AD4 
+AD4 	sizeof(lock+AF8-class+AF8-key) +ADwAPQ sizeof(raw+AF8-spinlock+AF8-t)
+AD4 
+AD4 Otherwise, two consecutive spinlocks could end up with key overlap in
+AD4 their subclass range.
+AD4 
+AD4 Now, I think that is still valid after this patch, but it is something
+AD4 that gave me pause.

How about adding this as an additional patch before patch 25/27?

diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c
index 9a7cca6dc3d4..ce05b9b419f4 100644
--- a/kernel/locking/lockdep.c
+-+-+- b/kernel/locking/lockdep.c
+AEAAQA -725,6 +-725,15 +AEAAQA static bool assign+AF8-lock+AF8-key(struct lockdep+AF8-map +ACo-lock)
 +AHs
 	unsigned long can+AF8-addr, addr +AD0 (unsigned long)lock+ADs
 
+-	/+ACo
+-	 +ACo lockdep+AF8-free+AF8-key+AF8-range() assumes that struct lock+AF8-class+AF8-key
+-	 +ACo objects do not overlap. Since we use the address of lock
+-	 +ACo objects as class key for static objects, check whether the
+-	 +ACo size of lock+AF8-class+AF8-key objects does not exceed the size of
+-	 +ACo the smallest lock object.
+-	 +ACo-/
+-	BUILD+AF8-BUG+AF8-ON(sizeof(struct lock+AF8-class+AF8-key) +AD4 sizeof(raw+AF8-spinlock+AF8-t))+ADs
+-
 	if (+AF8AXw-is+AF8-kernel+AF8-percpu+AF8-address(addr, +ACY-can+AF8-addr))
 		lock-+AD4-key +AD0 (void +ACo)can+AF8-addr+ADs
 	else if (+AF8AXw-is+AF8-module+AF8-percpu+AF8-address(addr, +ACY-can+AF8-addr))

Thanks,

Bart.
