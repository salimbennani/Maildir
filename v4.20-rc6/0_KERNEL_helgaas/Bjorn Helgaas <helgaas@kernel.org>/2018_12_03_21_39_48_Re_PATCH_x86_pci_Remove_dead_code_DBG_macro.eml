Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:58:33 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 14C4558014B;
	Mon,  3 Dec 2018 13:39:57 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 13:39:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AW7MzmBHMz//Wg+YBR8MSdZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8i8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YZYMAeoPMulXs5TyqFkAohulHQmhBvjiyiNUinLswaE2z/4sHR/A0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOaoPU+C1y7PIzTPeZP1Uxzj97IfIfQo7rvGXQLl9dsrRxlcrFwPKlFqf?=
 =?us-ascii?q?s5flMiiW1usTqWib6fRvVea1h24gsQFxrSGiy8ExgYfKnoIY0k7I+Tl9zYovON?=
 =?us-ascii?q?G1RlB3bcS5HJZTqy2WLYp7T8E6T2xpvCs20L8LtYOhcCUF0pgr2gLTZ+CBfoOV?=
 =?us-ascii?q?+BzsTvyRLi19hH99eLKwmRKy8U+4x+3iWcm7zkxKojBGktbSrHAN0QLc6sydRv?=
 =?us-ascii?q?t65Eeh1i6D1wHV6u5aPUA5jbTXJ4Ilz7Iqi5Yev1rPEjXrlEj1kKOabEQp9+qw?=
 =?us-ascii?q?5+TieLrmp5ucN4FuigH5N6Qjgsi/AeU+MggTUGmX4Oe826P5/U3/XrpKiuQ6kq?=
 =?us-ascii?q?7XsZDcO8sbvLW0AxFa0ok98RazFTSm38oCnXkBMl1FfAiLj4/zO1HBOPz4F+uw?=
 =?us-ascii?q?g0ywkDd3wPDLJrnhApTOLnfdirvgcqt95lVYyAoyy9Bf+p1VBqsAIPL1Rk/+qt?=
 =?us-ascii?q?jYAgUlPAyzxubtEM992Z8GWWKTHq+ZN7vfsV+S6eIuP+mDfogVtCz9K/g4/fHu?=
 =?us-ascii?q?i3A5lEQZfamo25sXdX+5Eu5nI0WffXrjnNMBHX0WsQo5SezgkEeCXiJLZ3auQ6?=
 =?us-ascii?q?I84Sk2CIChDYjdXIytg7uB3CG9Hp1RfW1GDlGMEXH1d4SLQfsMaSSSItN/nTwA?=
 =?us-ascii?q?T7SuV4gh1RS2vg/g17VnNvbU+jEftZ/7ztd1/O3TlRYx9TBuFcSSyWONQnpwnm?=
 =?us-ascii?q?MJQT82wa9+rVZ8yleFzah3nfhYGcZP6PNOVwcwLYTcwPBiC9DuRgLBec+ESFW8?=
 =?us-ascii?q?TdWgGz0xStMxzMUIY0ZyANiiihHD3yy3A74ajbCLBZo08r7C0Hj1Pcpy13HG1K?=
 =?us-ascii?q?w5hVk8XsRPLXGmhrJ49wXLGoHGiVuZmLiweaQcxiHN8nyDwnSIvE1fVA5wUqDF?=
 =?us-ascii?q?XXQEa0vSrNT54F7CTrC0BbQmNAtB1dCNKq9QZtL1ilVGQe/pOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uRY4XwZWUSwj/RCEgenAAV5naJKw4+Czylo2LfCjxuCF3ub1nt8el4tHO0?=
 =?us-ascii?q?UEs0wxuWYE1m0rq/4gQViuCES/MPwrIEvz8sqyl1HFa42NLWF9qApgp7cKVAe9?=
 =?us-ascii?q?89501H1WbYtwx7MZytNKRihl8YcwRqsELizRR3CoNckcc0qHMm1hZ9KaWd0FlZ?=
 =?us-ascii?q?bTOXwYjwOqHLKmn15B2gcarW1U/R0dmI+qYD8u83q0j+sw6zEEoi8HJn08dO3n?=
 =?us-ascii?q?uY55XKChcSUJ3rXkY28Rh6u6/VYi0n64zI0n1sNLG+siXe1NIxGOsl1hGgcs9f?=
 =?us-ascii?q?MaOZDgP9D9cWBsmuKOMwnVipYQkJPORT9K4yIsOneOGK2K+tPOZ8gj2miX5L75?=
 =?us-ascii?q?x60kKJ7yB8UPLH344Zw/GE2QuKTy38jFa9vc/tg4BLeDYSEnC5ySf6Ho5RZ7R+?=
 =?us-ascii?q?cpoRBmeqPsK42M9+h5nrW3ND8F6jBlUG2NKmeBaIblz92xFQ2loToXC9hSS4yD?=
 =?us-ascii?q?l0mSkzrqWDxCzO3/jidB0fN29LRWlul1ftLZKvj9AHWkildAwplBqj5UbnyKlX?=
 =?us-ascii?q?vqV/L2/PQUhWeyj6NX1tUqy1trCaec5A9IsosTlLUOS7eV2aSKTyowEZ0yPgGG?=
 =?us-ascii?q?tS3is7eCupupX6nhx6jnySLHBooXrdeMFwwwrf5dPGSf5Q2DoGWDd3iT3NCleg?=
 =?us-ascii?q?ONmp+M2el43fveCmS2KhSppTfDHrzIyasyu3/29qARy5n/2ont3nEA460TL01t?=
 =?us-ascii?q?VwVCXIqgr8bZfv16igLe1neUxoDkfm68VmAoF+jpcwhJYI1HgZnJqV/GALkWfu?=
 =?us-ascii?q?MdpB36L+Y2EARToKw97T/Qjk11dvLnOPx4LlSHqdxtFtaMW9YmMTwig99dxFCL?=
 =?us-ascii?q?+I7LxYmit4ul+4rQPSYfdnhDscx+Uh6GUGg+4Xogoi1TuSAqodHURDOSzslhKI?=
 =?us-ascii?q?782xralNZWavd6Sw21R6ndy7EL6CpQRcUm7jepg+BS9w8tl/MFXU3X3v7YHkfc?=
 =?us-ascii?q?PcbNMJuR2SjhfAlPNVKJMqm/oOhCpnP3/9vHI/x+46ixxuwY+1vIydJ2px+6K5?=
 =?us-ascii?q?BwZSNifpaMML5jHtkaFek96N0I+1GZVhHigLUIHsTfK1Cz8SsfXnNwCTEDwzsH?=
 =?us-ascii?q?ubGLzfHROB50ditX7AD5erN3SPLnkD0dpiXAWdJFBYgA0MXjU1hJs5GR6xxMD7?=
 =?us-ascii?q?bEd1/DMR5kP7qhtRzOJnLQL/X3zbpAepbDc0VZeeIABX7gFE+0faL8ie4vhvEC?=
 =?us-ascii?q?Ff+52rtBaNJXCDZwRUEWEJXVSJBlDkPrmz/NnA7vKXBuykI/vVZrWOr+NeWuyM?=
 =?us-ascii?q?xZKu1Itm4jmNOt+OPnlkE/00xE5DUWplFMTenjUFUzYXmD7Vb86HuBe8/TV6rs?=
 =?us-ascii?q?Ch//TqWwLv5oqPB6FRMdV1/BC2jrmMN/SNhCZiMjtY0pIMxXnVyLkQxlISiidu?=
 =?us-ascii?q?dyWzHrQEryLCUKXQmqpPBR4BdyxzLNdI77473gRVI8Hbl8j61qRmgf81EVtFUV?=
 =?us-ascii?q?3hl9qtZcwLJWG9KVzGCFyKNLSAOT3E3cX3bbmgRr1XieVerwewtiqDE0//IjSD?=
 =?us-ascii?q?kCHkVwyuMeFJli2UIAZSt529chlzD2juV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuY7/PXKpATsftqBCR7j+Nb4HQgxLtT?=
 =?us-ascii?q?4yFJX/h1mCrUrt5zrFCqiOiPyjx7UBVQrjZHnp6EvUJnOfaRyp4VeHDL+1oo6m?=
 =?us-ascii?q?GWAg5C895kDNLok6Nd0N7CkOT0MjgUoPzO+s5JLcrTMsTPEHclPhPgA3aADAYB?=
 =?us-ascii?q?QjeiLkncilZbnfXU8Wea+Mtp4qPwkYYDH+cIHGc+EekXXwE8RIQP?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAACroQVch0O0hNFjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2sUE4wRjhoUlzSBJANMFBgTAYgJIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQEDAQIkEwYBATcBBQkBAQoOA?=
 =?us-ascii?q?wMBAgEJJQMMBTsOEwWDHIICBaVFgWwzgnYBAQWHJgiLAIEcF4F/gRGDEog2gia?=
 =?us-ascii?q?JKAoxhklQhGSKYgmRMQsYkSaYbYFGbIEhMxoIKAiDJ4IbDBeIXoVeITKBAgMBA?=
 =?us-ascii?q?SETiiYBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ABAACroQVch0O0hNFjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2sUE4wRjhoUlzSBJANMFBgTAYgJIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCgsJCCkjDII2JAGCYQEBAQEDAQIkEwYBATcBBQkBAQoOAwMBAgEJJQMMBTs?=
 =?us-ascii?q?OEwWDHIICBaVFgWwzgnYBAQWHJgiLAIEcF4F/gRGDEog2giaJKAoxhklQhGSKY?=
 =?us-ascii?q?gmRMQsYkSaYbYFGbIEhMxoIKAiDJ4IbDBeIXoVeITKBAgMBASETiiYBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="65126471"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 03 Dec 2018 13:39:55 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726020AbeLCVjw (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 16:39:52 -0500
Received: from mail.kernel.org ([198.145.29.99]:48140 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725903AbeLCVjv (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 16:39:51 -0500
Received: from localhost (unknown [69.71.4.100])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id D514B20672;
        Mon,  3 Dec 2018 21:39:49 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543873190;
        bh=9t2j9NdYFHEuBSNEPi5wpZL2KNQ6t0FuielaLR+kB84=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=gTAnzR3LmHb5HPAWkh4pQ18iVZ0+PrLH/llMPFXA3+58XcTIJg8JUFVE4G1QnnCD/
         MMFFsT/Mh69TKl9nH5LJ2l8kVsabq9FgjQJv7bhG/Ds8aa6bg+qCcVBnZ75aLXAUbA
         Oy3Lbp3SkvHDDeLC6hs68vfqWaVJUvwBcEvzf+R4=
Date: Mon, 3 Dec 2018 15:39:48 -0600
From: Bjorn Helgaas <helgaas@kernel.org>
To: Ingo Molnar <mingo@kernel.org>
Cc: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
        Thomas Gleixner <tglx@linutronix.de>,
        Borislav Petkov <bp@alien8.de>
Subject: Re: [PATCH] x86/pci: Remove dead code DBG() macro
Message-ID: <20181203213948.GC207198@google.com>
References: <20181203082140.GA15318@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181203082140.GA15318@gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 03, 2018 at 09:21:40AM +0100, Ingo Molnar wrote:
> From 22b71f970f18f5f38161be028ab7ce7cd1f769f7 Mon Sep 17 00:00:00 2001
> From: Ingo Molnar <mingo@kernel.org>
> Date: Mon, 3 Dec 2018 09:15:40 +0100
> Subject: [PATCH] x86/pci: Remove the dead-code DBG() macro
> 
> While reading arch/x86/include/asm/pci_x86.h I noticed that we have ancient
> residuals of debugging code, which is never actually enabled via any regular
> Kconfig mechanism:
> 
>  #undef DEBUG
> 
>  #ifdef DEBUG
>  #define DBG(fmt, ...) printk(fmt, ##__VA_ARGS__)
>  #else
>  #define DBG(fmt, ...)                          \
>  do {                                           \
>        if (0)                                  \
>                printk(fmt, ##__VA_ARGS__);     \
>  } while (0)
>  #endif
> 
> Remove this and the call sites. These messages might have been
> super interesting decades ago when the PCI code was first
> bootstrapped, but we have better mechanisms meanwhile, and code
> readability is king ... ;-)
> 
> Signed-off-by: Ingo Molnar <mingo@kernel.org>

Acked-by: Bjorn Helgaas <bhelgaas@google.com>

for both of these.  I have nothing in the queue for these files, so
probably easier if you just take them.  FWIW, recent history
capitalizes the subject lines as "x86/PCI: "

Thanks for all this cleanup!

> ---
>  arch/x86/include/asm/pci_x86.h | 12 ------------
>  arch/x86/pci/direct.c          |  1 -
>  arch/x86/pci/i386.c            |  2 --
>  arch/x86/pci/irq.c             | 29 +++--------------------------
>  arch/x86/pci/legacy.c          |  3 +--
>  arch/x86/pci/pcbios.c          |  9 ++-------
>  6 files changed, 6 insertions(+), 50 deletions(-)
> 
> diff --git a/arch/x86/include/asm/pci_x86.h b/arch/x86/include/asm/pci_x86.h
> index 959d618dbb17..3f8d9c75b9ee 100644
> --- a/arch/x86/include/asm/pci_x86.h
> +++ b/arch/x86/include/asm/pci_x86.h
> @@ -7,18 +7,6 @@
>  
>  #include <linux/ioport.h>
>  
> -#undef DEBUG
> -
> -#ifdef DEBUG
> -#define DBG(fmt, ...) printk(fmt, ##__VA_ARGS__)
> -#else
> -#define DBG(fmt, ...)				\
> -do {						\
> -	if (0)					\
> -		printk(fmt, ##__VA_ARGS__);	\
> -} while (0)
> -#endif
> -
>  #define PCI_PROBE_BIOS		0x0001
>  #define PCI_PROBE_CONF1		0x0002
>  #define PCI_PROBE_CONF2		0x0004
> diff --git a/arch/x86/pci/direct.c b/arch/x86/pci/direct.c
> index a51074c55982..68a115629568 100644
> --- a/arch/x86/pci/direct.c
> +++ b/arch/x86/pci/direct.c
> @@ -216,7 +216,6 @@ static int __init pci_sanity_check(const struct pci_raw_ops *o)
>  			return 1;
>  	}
>  
> -	DBG(KERN_WARNING "PCI: Sanity check failed\n");
>  	return 0;
>  }
>  
> diff --git a/arch/x86/pci/i386.c b/arch/x86/pci/i386.c
> index 8cd66152cdb0..5c2b31315750 100644
> --- a/arch/x86/pci/i386.c
> +++ b/arch/x86/pci/i386.c
> @@ -389,8 +389,6 @@ void __init pcibios_resource_survey(void)
>  {
>  	struct pci_bus *bus;
>  
> -	DBG("PCI: Allocating resources\n");
> -
>  	list_for_each_entry(bus, &pci_root_buses, node)
>  		pcibios_allocate_bus_resources(bus);
>  
> diff --git a/arch/x86/pci/irq.c b/arch/x86/pci/irq.c
> index 52e55108404e..1286f138e281 100644
> --- a/arch/x86/pci/irq.c
> +++ b/arch/x86/pci/irq.c
> @@ -77,11 +77,8 @@ static inline struct irq_routing_table *pirq_check_routing_table(u8 *addr)
>  	sum = 0;
>  	for (i = 0; i < rt->size; i++)
>  		sum += addr[i];
> -	if (!sum) {
> -		DBG(KERN_DEBUG "PCI: Interrupt Routing Table found at 0x%p\n",
> -			rt);
> +	if (!sum)
>  		return rt;
> -	}
>  	return NULL;
>  }
>  
> @@ -126,15 +123,6 @@ static void __init pirq_peer_trick(void)
>  	memset(busmap, 0, sizeof(busmap));
>  	for (i = 0; i < (rt->size - sizeof(struct irq_routing_table)) / sizeof(struct irq_info); i++) {
>  		e = &rt->slots[i];
> -#ifdef DEBUG
> -		{
> -			int j;
> -			DBG(KERN_DEBUG "%02x:%02x slot=%02x", e->bus, e->devfn/8, e->slot);
> -			for (j = 0; j < 4; j++)
> -				DBG(" %d:%02x/%04x", j, e->irq[j].link, e->irq[j].bitmap);
> -			DBG("\n");
> -		}
> -#endif
>  		busmap[e->bus] = 1;
>  	}
>  	for (i = 1; i < 256; i++) {
> @@ -163,10 +151,8 @@ void elcr_set_level_irq(unsigned int irq)
>  	elcr_irq_mask |= (1 << irq);
>  	printk(KERN_DEBUG "PCI: setting IRQ %u as level-triggered\n", irq);
>  	val = inb(port);
> -	if (!(val & mask)) {
> -		DBG(KERN_DEBUG " -> edge");
> +	if (!(val & mask))
>  		outb(val | mask, port);
> -	}
>  }
>  
>  /*
> @@ -836,16 +822,10 @@ static void __init pirq_find_router(struct irq_router *r)
>  	r->get = NULL;
>  	r->set = NULL;
>  
> -	DBG(KERN_DEBUG "PCI: Attempting to find IRQ router for [%04x:%04x]\n",
> -	    rt->rtr_vendor, rt->rtr_device);
> -
>  	pirq_router_dev = pci_get_domain_bus_and_slot(0, rt->rtr_bus,
>  						      rt->rtr_devfn);
> -	if (!pirq_router_dev) {
> -		DBG(KERN_DEBUG "PCI: Interrupt router not found at "
> -			"%02x:%02x\n", rt->rtr_bus, rt->rtr_devfn);
> +	if (!pirq_router_dev)
>  		return;
> -	}
>  
>  	for (h = pirq_routers; h->vendor; h++) {
>  		/* First look for a router match */
> @@ -1028,7 +1008,6 @@ void __init pcibios_fixup_irqs(void)
>  	struct pci_dev *dev = NULL;
>  	u8 pin;
>  
> -	DBG(KERN_DEBUG "PCI: IRQ fixup\n");
>  	for_each_pci_dev(dev) {
>  		/*
>  		 * If the BIOS has set an out of range IRQ number, just
> @@ -1119,8 +1098,6 @@ static const struct dmi_system_id pciirq_dmi_table[] __initconst = {
>  
>  void __init pcibios_irq_init(void)
>  {
> -	DBG(KERN_DEBUG "PCI: IRQ init\n");
> -
>  	if (raw_pci_ops == NULL)
>  		return;
>  
> diff --git a/arch/x86/pci/legacy.c b/arch/x86/pci/legacy.c
> index dfbe6ac38830..045089b34400 100644
> --- a/arch/x86/pci/legacy.c
> +++ b/arch/x86/pci/legacy.c
> @@ -17,7 +17,6 @@ static void pcibios_fixup_peer_bridges(void)
>  
>  	if (pcibios_last_bus <= 0 || pcibios_last_bus > 0xff)
>  		return;
> -	DBG("PCI: Peer bridge fixup\n");
>  
>  	for (n=0; n <= pcibios_last_bus; n++)
>  		pcibios_scan_specific_bus(n);
> @@ -45,7 +44,7 @@ void pcibios_scan_specific_bus(int busn)
>  	for (devfn = 0; devfn < 256; devfn += stride) {
>  		if (!raw_pci_read(0, busn, devfn, PCI_VENDOR_ID, 2, &l) &&
>  		    l != 0x0000 && l != 0xffff) {
> -			DBG("Found device at %02x:%02x [%04x]\n", busn, devfn, l);
> +
>  			pr_info("PCI: Discovered peer bus %02x\n", busn);
>  			pcibios_scan_root(busn);
>  			return;
> diff --git a/arch/x86/pci/pcbios.c b/arch/x86/pci/pcbios.c
> index 9c97d814125e..a6fc43aa668c 100644
> --- a/arch/x86/pci/pcbios.c
> +++ b/arch/x86/pci/pcbios.c
> @@ -160,8 +160,6 @@ static int __init check_pcibios(void)
>  		minor_ver = ebx & 0xff;
>  		if (pcibios_last_bus < 0)
>  			pcibios_last_bus = ecx & 0xff;
> -		DBG("PCI: BIOS probe returned s=%02x hw=%02x ver=%02x.%02x l=%02x\n",
> -			status, hw_mech, major_ver, minor_ver, pcibios_last_bus);
>  		if (status || signature != PCI_SIGNATURE) {
>  			printk (KERN_ERR "PCI: BIOS BUG #%x[%08x] found\n",
>  				status, signature);
> @@ -320,15 +318,13 @@ static const struct pci_raw_ops *__init pci_find_bios(void)
>  				check->fields.revision, check);
>  			continue;
>  		}
> -		DBG("PCI: BIOS32 Service Directory structure at 0x%p\n", check);
>  		if (check->fields.entry >= 0x100000) {
>  			printk("PCI: BIOS32 entry (0x%p) in high memory, "
>  					"cannot use.\n", check);
>  			return NULL;
>  		} else {
>  			unsigned long bios32_entry = check->fields.entry;
> -			DBG("PCI: BIOS32 Service Directory entry at 0x%lx\n",
> -					bios32_entry);
> +
>  			bios32_indirect.address = bios32_entry + PAGE_OFFSET;
>  			set_bios_x();
>  			if (check_pcibios())
> @@ -366,7 +362,6 @@ struct irq_routing_table * pcibios_get_irq_routing_table(void)
>  	opt.size = PAGE_SIZE;
>  	opt.segment = __KERNEL_DS;
>  
> -	DBG("PCI: Fetching IRQ routing table... ");
>  	__asm__("push %%es\n\t"
>  		"push %%ds\n\t"
>  		"pop  %%es\n\t"
> @@ -384,7 +379,7 @@ struct irq_routing_table * pcibios_get_irq_routing_table(void)
>  		  "S" (&pci_indirect),
>  		  "m" (opt)
>  		: "memory");
> -	DBG("OK  ret=%d, size=%d, map=%x\n", ret, opt.size, map);
> +
>  	if (ret & 0xff00)
>  		printk(KERN_ERR "PCI: Error %02x when fetching IRQ routing table.\n", (ret >> 8) & 0xff);
>  	else if (opt.size) {
