Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:51:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 240BE5803E4
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 08:56:22 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 08:56:21 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsaXgChPIHAJw/rHLHdQl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/3yrsbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRshfWSxfDI2/?=
 =?us-ascii?q?YYsAAPYOMvtaoIbzqFUAsAO+CAuuCu7g1zNFiGP63bck3OQ6CgzGwBUgEsgSvH?=
 =?us-ascii?q?jIttj4NqEfWv21wqnSyjXDautb1znn54jOcxAuv/WMVq9qf8bL1EIiCh3Kjk+K?=
 =?us-ascii?q?qYP/OTOV2f4KuHWc4uV7S+2vkXQnpBt3ojig2MghkZPJiZwIxVDE7yp53Jw5Ks?=
 =?us-ascii?q?G/SE5+eNOpFoZbuS+dN4tzWMwiQmdotT4hxbIYo567ZjIFyJIoxxHBcfCIb4+I?=
 =?us-ascii?q?4hf7WOafJTd4hW5qeLGlhxqo7Uegzej8WtGw0FZLtSVFjNjMtmoR1xDJ7ciHUP?=
 =?us-ascii?q?R98l+/1jaJywDc8OdEIU8wlaXFMpIh2r4wlp0PsUTEBCP2n1/2jKCOekUl/Oio?=
 =?us-ascii?q?8Pjnba/ppp+GLYB0jxvyPbgpmsy6B+kzLwsAX3CD9OiiyLHu/lf1TKhXgvA1iK?=
 =?us-ascii?q?XVrp7XKMQBqqKkAQJZypgv5wq7Aju8zdgVk2cLIEhYdB+EgYXlIU/CLfP+APyi?=
 =?us-ascii?q?mVqjii1ryOrDPrD5ApXCMHzDkLD5cLZ56k5c0xYzzctF65JbDLEBPej/WkjrtN?=
 =?us-ascii?q?zXFhM5Mgq0zPj7CNhlyI8SRWGCDrWEPK/PslKE/PwjLueMaYMPpTrwKeAp5/v0?=
 =?us-ascii?q?gn84nV8dc7Op3ZwSaH2gB/RpPUCZYWf1jtgcD2gKoBQxTOjzhFKZVj5TenCyUL?=
 =?us-ascii?q?4i6TEgD46mCYbDRoOzj7Cb0ya7A4VbZmRHClCKDHfpeJ+IW/YKaCKOPMBhliYI?=
 =?us-ascii?q?WqSmS48kzhyusgj6y7xoLurS5y0Ur5Xj1MJ65+HLjxE96SR0D9iB02GKV2x0mm?=
 =?us-ascii?q?IIRzwo06xlrk1910yO0ax5g/xeCNxS6OlFUgY8NZ7A0eN6D8r+VR7GfteMGx6b?=
 =?us-ascii?q?RM67C2QxUs4p2I1JJEJ8AMm5yBbE2SWsHvkSjbPMAZU19qfV2T/2P9p8zHDdk7?=
 =?us-ascii?q?AsikRjTsZROGn1u6hk6gKGAofIl1mexb+ncLlZ0CPT+WPG12eXoUxDTCZ2VqPK?=
 =?us-ascii?q?W21ZYVHZ+s/k7EHPRKP7FLI8LwFawtSDIKYZVtq8oFlbTe3vP5z+amiynHysTU?=
 =?us-ascii?q?KFxrqGb43xZ00H0SndAVRCmAcWqyW8OBA6Fxum9k7XCj1jERrXJQvG/PNkoXW0?=
 =?us-ascii?q?zwdgxQyQdURn2Led4BMZhfWADfgU2+RXlj0mrmBYFVC80taeM5zIjQd7Zqxabl?=
 =?us-ascii?q?J1tF1Kz3jQsQNwFoatI6BrmhgVdAEh7BCm7Al+FogVyZtil3gt1gcnbPvAiF4?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAAD9pQpcmBHrdtBjGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUwIBAQEBAQsBgTCBOYEWE4N6iHiLMoINfIZ7ghGNR4FzFBg?=
 =?us-ascii?q?HDYRAgx0iNgcNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCWwEBA?=
 =?us-ascii?q?QEDAQIgIwoiBwMDAQIGAQEKDgcDAgIFHQQCAgMBCwUpIBMFgxwBggEBBAqlVYE?=
 =?us-ascii?q?vhTEPg2CBCQWBC4sXEQaBf4ERgl0HLoIQgQ4CgWGDBIJXAokTIDKBQpVABwKHB?=
 =?us-ascii?q?oEHiTMLGIFciAeHVZVmgzWBTQmBfXAVggiBH4JQgziFFIU/QTGBBxyHfispgXc?=
 =?us-ascii?q?BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAAD9pQpcmBHrdtBjGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUwIBAQEBAQsBgTCBOYEWE4N6iHiLMoINfIZ7ghGNR4FzFBgHDYRAgx0iNgcNA?=
 =?us-ascii?q?QMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCWwEBAQEDAQIgIwoiBwM?=
 =?us-ascii?q?DAQIGAQEKDgcDAgIFHQQCAgMBCwUpIBMFgxwBggEBBAqlVYEvhTEPg2CBCQWBC?=
 =?us-ascii?q?4sXEQaBf4ERgl0HLoIQgQ4CgWGDBIJXAokTIDKBQpVABwKHBoEHiTMLGIFciAe?=
 =?us-ascii?q?HVZVmgzWBTQmBfXAVggiBH4JQgziFFIU/QTGBBxyHfispgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="55370411"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 08:56:07 -0800
Received: from localhost ([::1]:47143 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVJQ6-0005BP-Ok
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 11:56:06 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:52772)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gVJHQ-0004mg-1B
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 11:47:11 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <berrange@redhat.com>) id 1gVJHM-0008Oq-5d
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 11:47:07 -0500
Received: from mx1.redhat.com ([209.132.183.28]:13826)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <berrange@redhat.com>) id 1gVJHL-0006sN-RJ
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 11:47:04 -0500
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
	[10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id ADB703078AA3;
	Fri,  7 Dec 2018 16:46:37 +0000 (UTC)
Received: from redhat.com (ovpn-112-37.ams2.redhat.com [10.36.112.37])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 299975D971;
	Fri,  7 Dec 2018 16:46:31 +0000 (UTC)
Date: Fri, 7 Dec 2018 16:46:29 +0000
From: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
To: Eduardo Habkost <ehabkost@redhat.com>
Message-ID: <20181207164629.GP13784@redhat.com>
References: <20181025140631.634922-1-sameeh@daynix.com>
	<20181205171818.GA1136@redhat.com>
	<154404147264.6063.14869520867110106084@sif>
	<20181206100618.GF29540@redhat.com>
	<20181207163607.GD7395@habkost.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <20181207163607.GD7395@habkost.net>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.48]);
	Fri, 07 Dec 2018 16:46:37 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [RFC 0/2] Attempt to implement the standby feature
 for assigned network devices
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Reply-To: Daniel =?utf-8?B?UC4gQmVycmFuZ8Op?= <berrange@redhat.com>
Cc: Sameeh Jubran <sameeh@daynix.com>, "Michael S . Tsirkin" <mst@redhat.com>,
	Jason Wang <jasowang@redhat.com>, qemu-devel@nongnu.org,
	Michael Roth <mdroth@linux.vnet.ibm.com>, Yan Vugenfirer <yan@daynix.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Fri, Dec 07, 2018 at 02:36:07PM -0200, Eduardo Habkost wrote:
> On Thu, Dec 06, 2018 at 10:06:18AM +0000, Daniel P. Berrang=C3=A9 wrote=
:
> > On Wed, Dec 05, 2018 at 02:24:32PM -0600, Michael Roth wrote:
> > > Quoting Daniel P. Berrang=C3=A9 (2018-12-05 11:18:18)
> > > > On Thu, Oct 25, 2018 at 05:06:29PM +0300, Sameeh Jubran wrote:
> > > > > From: Sameeh Jubran <sjubran@redhat.com>
> > > > >=20
> > > > > Hi all,
> > > > >=20
> > > > > Background:
> > > > >=20
> > > > > There has been a few attempts to implement the standby feature =
for vfio
> > > > > assigned devices which aims to enable the migration of such dev=
ices. This
> > > > > is another attempt.
> > > > >=20
> > > > > The series implements an infrastructure for hiding devices from=
 the bus
> > > > > upon boot. What it does is the following:
> > > > >=20
> > > > > * In the first patch the infrastructure for hiding the device i=
s added
> > > > >   for the qbus and qdev APIs. A "hidden" boolean is added to th=
e device
> > > > >   state and it is set based on a callback to the standby device=
 which
> > > > >   registers itself for handling the assessment: "should the pri=
mary device
> > > > >   be hidden?" by cross validating the ids of the devices.
> > > > >=20
> > > > > * In the second patch the virtio-net uses the API to hide the v=
fio
> > > > >   device and unhides it when the feature is acked.
> > > >=20
> > > > IIUC, the general idea is that we want to provide a pair of assoc=
iated NIC
> > > > devices to the guest, one emulated, one physical PCI device. The =
guest would
> > > > put them in a bonded pair. Before migration the PCI device is unp=
lugged & a
> > > > new PCI device plugged on target after migration. The guest traff=
ic continues
> > > > without interuption due to the emulate device.
> > > >=20
> > > > This kind of conceptual approach can already be implemented today=
 by management
> > > > apps. The only hard problem that exists today is how the guest OS=
 can figure
> > > > out that a particular pair of devices it has are intended to be u=
sed together.=20
> > > >=20
> > > > With this series, IIUC, the virtio-net device is getting a given =
property which
> > > > defines the qdev ID of the associated VFIO device. When the guest=
 OS activates
> > > > the virtio-net device and acknowledges the STANDBY feature bit, q=
dev then
> > > > unhides the associated VFIO device.
> > > >=20
> > > > AFAICT the guest has to infer that the device which suddenly appe=
ars is the one
> > > > associated with the virtio-net device it just initialized, for pu=
rposes of
> > > > setting up the NIC bonding. There doesn't appear to be any explic=
it assocation
> > > > between the devices exposed to the guest.
> > > >=20
> > > > This feels pretty fragile for a guest needing to match up devices=
 when there
> > > > are many pairs of devices exposed to a single guest.
> > >=20
> > > The impression I get from linux.git:Documentation/networking/net_fa=
ilover.rst=20
> > > is that the matching is done based on the primary/standby NICs havi=
ng
> > > the same MAC address. In theory you pass both to a guest and based =
on
> > > MAC it essentially does automatic, and if you additionally add STAN=
DBY
> > > it'll know to use a virtio-net device specifically for failover.
> > >=20
> > > None of this requires any sort of hiding/plugging of devices from
> > > QEMU/libvirt (except for the VFIO unplug we'd need to initiate live=
 migration
> > > and the VFIO hotplug on the other end to switch back over).
> > >=20
> > > That simplifies things greatly, but also introduces the problem of =
how
> > > an older guest will handle seeing 2 NICs with the same MAC, which I=
IUC
> > > is why this series is looking at hotplugging the VFIO device only a=
fter
> > > we confirm STANDBY is supported by the virtio-net device, and why i=
t's
> > > being done transparent to management.
> > >
> > > >=20
> > > > Unless I'm mis-reading the patches, it looks like the VFIO device=
 always has
> > > > to be available at the time QEMU is started. There's no way to bo=
ot a guest
> > > > and then later hotplug a VFIO device to accelerate the existing v=
irtio-net NIC.
> > > > Or similarly after migration there might not be any VFIO device a=
vailable
> > > > initially when QEMU is started to accept the incoming migration. =
So it might
> > > > need to run in degraded mode for an extended period of time until=
 one becomes
> > > > available for hotplugging. The use of qdev IDs makes this trouble=
some, as the
> > > > qdev ID of the future VFIO device would need to be decided upfron=
t before it
> > > > even exists.
> > >=20
> > > >=20
> > > > So overall I'm not really a fan of the dynamic hiding/unhiding of=
 devices. I
> > > > would much prefer to see some way to expose an explicit relations=
hip between
> > > > the devices to the guest.
> > >=20
> > > If we place the burden of determining whether the guest supports ST=
ANDBY
> > > on the part of users/management, a lot of this complexity goes away=
. For
> > > instance, one possible implementation is to simply fail migration a=
nd say
> > > "sorry your VFIO device is still there" if the VFIO device is still=
 around
> > > at the start of migration (whether due to unplug failure or a
> > > user/management forgetting to do it manually beforehand).
> > >=20
> > > So how important is it that setting F_STANDBY cap doesn't break old=
er
> > > guests? If the idea is to support live migration with VFs then aren=
't
> > > we still dead in the water if the guest boots okay but doesn't have
> > > the requisite functionality to be migrated later? Shouldn't that al=
l
> > > be sorted out as early as possible? Is a very clear QEMU error mess=
age
> > > in this case insufficient?
> > >=20
> > > And if backward compatibility is important, are there alternative
> > > approaches? Like maybe starting off with a dummy MAC and switching =
over
> > > to the duplicate MAC only after F_STANDBY is negotiated? In that ca=
se
> > > we could still warn users/management about it but still have the gu=
est
> > > be otherwise functional.
> >=20
> > Relying on F_STANDBY negotiation to decide whether to activate the VF=
IO
> > device is a bad idea. PCI devices are precious, so if the guest OS do=
es
> > not support this standby feature, we must never add the VFIO device t=
o
> > QEMU in the first place.
> >=20
> > We have the libosinfo project which provides metadata on what feature=
s
> > different guest OS versions support. This can be used to indicate whe=
ther
> > a guest OS version supports the standby NIC concept and thus avoid ne=
eding
> > to allocate PCI devices to guests that will never use them.
> >=20
> > F_STANDBY is still useful as a flag to inform the guest OS that it sh=
ould
> > pair up NICs with identical MACs, as opposed to configuring them sepa=
rately.
> > It shouldn't be used to show/hide the device though, we should simply=
 never
> > add the 2nd device if we know it won't be used by a given guest OS ve=
rsion.
>=20
> The two mechanisms are not exclusive.  Not wasting a PCI device
> if the guest OS won't use it is a good idea.  Making the guest
> behave gracefully even when an older driver is loaded is also
> useful.

I'm not convinced it is useful enough to justify playing games in qdev
with dynamically hiding devices. This adds complexity to the code which
will make it harder to maintain and debug at runtime.


Regards,
Daniel
--=20
|: https://berrange.com      -o-    https://www.flickr.com/photos/dberran=
ge :|
|: https://libvirt.org         -o-            https://fstop138.berrange.c=
om :|
|: https://entangle-photo.org    -o-    https://www.instagram.com/dberran=
ge :|

