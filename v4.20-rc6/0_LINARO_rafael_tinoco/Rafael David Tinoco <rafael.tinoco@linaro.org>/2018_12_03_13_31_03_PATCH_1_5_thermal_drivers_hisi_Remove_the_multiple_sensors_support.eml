Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:52:35 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 68D7C580375;
	Mon,  3 Dec 2018 05:31:24 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 05:31:23 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AB/nTkhxYLB/fe2TXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0e4QIvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOSM3/m/UjcJ/jqxbrx2uqRxk247ZYpqYOOZ9c67HYd8XX3ZNUtpXWidcAo28?=
 =?us-ascii?q?dYwPD+8ZMOhEtYb9qUEBogW6BQKxCu3g0CFIhn7r0qYnzeohEAfG3As8ENIJrX?=
 =?us-ascii?q?/Zq8/1O70cUe+v0qbIyS/Pb+9X2Tf774jHbhchrOqIXbJxd8re01MvFwTfglWX?=
 =?us-ascii?q?s4zlMCqY2+IQuGaV6OpgUPigi28hqwxppjivx8EshZPThoIS0FzE8j95wIkzKN?=
 =?us-ascii?q?alS0B7ecapHIVMuyyeLYd6X80vT39ytConybAKpYS3cSkIxZg/2hLSZf+Kf5KW?=
 =?us-ascii?q?7h7/W+udOyl0iXJ/dL6hgxu/91WrxPfmWcmuyllKqzJIktnSuXAJ0Bze8taHSv?=
 =?us-ascii?q?Rj8Ue7wzqP1B7c6vtCIU8qkarXMZkhwqQ/lpYLsETDGDH5mFnugaOIakkp/vKk?=
 =?us-ascii?q?5/npb7n4vJOQKox5hh3kPqkvmMGzGeE4PRIPX2if9+S8zrrj/UjhTbVOj/02lL?=
 =?us-ascii?q?TZsZ/DKcQYuKG5GQlV3Zgn6xqmCDen3tIYkmcdLF9eZhKHgJbmO0vULPD7E/i/?=
 =?us-ascii?q?mVKsnylvx/zcOb3hGJrNImDZkLj9ZbZ991JcyA0rwNBb5pJUCa8OLOj8W0/sr9?=
 =?us-ascii?q?HYCh45Mwqpw+foEtl914UeWX6RDa+dKq/drViI5uc3KemWeIAVoCr9K+Qi5/P2?=
 =?us-ascii?q?jX82g14dfbWz0psQcny4HulmLF+fYXrjmdoBFWYKvgwjTO3lklGCUDhTZ2qsUK?=
 =?us-ascii?q?I4/D00FIWmDYLbTIC3nLOBxDu7HoFRZm1eCFCMFmnne5+HW/cLbiKSJMhhnycA?=
 =?us-ascii?q?VbigTY8hyB6vuBX7y7phMurb5CkYuYj/29hy4u3ZjQsy+iBsD8SBz2GNSHl5kX?=
 =?us-ascii?q?kTRz8226B/olZxyk2Z3qh6mPFYEd1T5/VUUgY1L5Lczup6C8zsVQLFZNuGVFGm?=
 =?us-ascii?q?QtC+CzErUt0x28MOY1p6G9i6jRDMxSyqD6URl7yKHpM09K3c0mP1J8Z8zXbGya?=
 =?us-ascii?q?Ygg0MnQstJKW2pmKp/+xLPCI7OlkWTj7yqergE3C7R6GeDynKDs1xCXw5uT6rJ?=
 =?us-ascii?q?R3AfaVHQrdTi+EzCSbiiCbAkMgtEzc6PMa9KatzvjVVbS/bvItXeY2Stm2iuAR?=
 =?us-ascii?q?aE3K+DbI3ve28FxiXSFFAEkxwP/XaBLQUxGz2uo3zAAzB0FVLgeUXs8fJgp3O9?=
 =?us-ascii?q?VUI0ywCKb0t817u64BIVhPqcS+8N0bIAoisutzJ0HFOl1dLMF9WAvxZhfLlbYd?=
 =?us-ascii?q?4l/FdH1GfZtwthPpygL6FunEIefx5wv0P00xV3C4NAkccxoXMuzQpyL7+Y0Vxb?=
 =?us-ascii?q?ezOZ25DwJqPYKm3o8B+zbK7W30nU0MyK9acX9PQ4t1LjsRmzGUom7Xpm3Mda0n?=
 =?us-ascii?q?uG6prREQodTIj+UkA09xh9ubHXeS0954LS1X1xPqi4qD7C29Q1BOQ7zhasZctQ?=
 =?us-ascii?q?MKSBFAXqCc0VG9CuKPA2m1iudh8FPP1S+LQoMM+8dvqG2LSkPOBvnD+9iWRH4Y?=
 =?us-ascii?q?Z90l+D9iZmS+7I2YoFzO+c3gedSzj8i1KhuNjtmY9YfTESAna/yS/8CY5LZ619?=
 =?us-ascii?q?YZwECX2zLM2w3Nl+gYDiW2RZ9FK6G1wJwsupdgeMYFzn2g1Q018aoXimmSu+0j?=
 =?us-ascii?q?x1nCslrquZ3CzS3evicAALNXJMRGlnlV3sO5S7j8gGXEi0aAgkjBuk5Ufgy6lb?=
 =?us-ascii?q?vqh/NHTTQUFTcijyLmFiVLawt7WYb85O7pMorTtYUOCmbV+GTb79pgMQ0zn/EG?=
 =?us-ascii?q?tG2DA7azaqt437nxNgkmKdL3VzrH3DdcFr3xjf59/cRf9X3jUYQil1kj3XBlm6?=
 =?us-ascii?q?P9m08tSYjZbDsuaiV22/Up1fazXkzYSFtCGj/21lHQW/n+yvmt3gCQU70TX019?=
 =?us-ascii?q?5wWSXKrRb8ZJLm16C7MeJhY0lpC0Xw68t8GoFijIQwgIsc1mQdhpWQ5XAHi3v8?=
 =?us-ascii?q?Mc1H2aLia3oAXT0LzMTU4AT/2E1jM2iGx4T2VniGxsthZt+6Yn4Z2y4n7sBKDr?=
 =?us-ascii?q?uU46JAnSdvvlW4qgfRa+BnnjgB0fsu9GIag+YRtQoozyWdAaodEVNWPCPyjBSI?=
 =?us-ascii?q?886xrL9Ma2mxa7iw21FzndSgDLGEvwFdV2z1epYkHS9s8Mp/NEjA32H06oHhYN?=
 =?us-ascii?q?PQd84ctgWIkxfciOhYMI4xlv0PhSZ9OGPyp3sly/MgjRx13JG3p4yHK2Rr/KKk?=
 =?us-ascii?q?DR9ULDz1Z8UP+j7ziaZShNqZ34eqHp95ADUEQIPoTe60EDIVrfnoLByBEDo4qn?=
 =?us-ascii?q?eGA7bfGRKf5Vxir3LOFZCrKn6WKGMYzdVkWBmSOkhfjBoIUzU9m54zDhqqy9D5?=
 =?us-ascii?q?cEdl+jAR4Ub1qhlWxeJtKRb/SX3TpBuyZjc3VZifLwdW7gdY6EfOKsGe6uNzHy?=
 =?us-ascii?q?dF/pyutgCNK2qbZxhWAmENQECLG1fjPry279na7+eYHva+L+fJYbiWqe1eUOqI?=
 =?us-ascii?q?xYuy0oR8+TaALN6PPn5kD/00wUdDWXF5G8LEmzQAUSAXliTNb9KFqxe44CF4ss?=
 =?us-ascii?q?e/8PHzUgL1+YSPE6dSMclo+x2ugaeMKe+QhCV6KTZZzJ8MxmXIyL8Q3FEMkSFu?=
 =?us-ascii?q?aiKtHK8EtS7MSqLQh6BWAwQaayN1KMtH8aY80hNRNs7cj9P/zqR4geItC1dZSV?=
 =?us-ascii?q?zhndmkatYXI26mLlPIGkaKOK6CJT3K2Mz3ZaK8SbtNjORbrRGwuDCbE1P9MTSH?=
 =?us-ascii?q?jTXmSxevMeRUhiGBIBNeoJ29cgpqCWX7UNLmaxi7PMVrgjEs3bI0hm3FNWgHPD?=
 =?us-ascii?q?h4ckNNqKCQ7CxCjvV+HWxB8mRqLe2elymF6OnYL44cseF3DSRsi+Ja/HM6xqNV?=
 =?us-ascii?q?7S5eQvx1nSrSrth2rFCnkumA0DxnUBVVpzZPhYKLu1hiOKrD+plBX3bE4AwC7W?=
 =?us-ascii?q?GKBxsWoNtlD46nh6cF0dHUlKv3ADRP6dTZ+Y0bHceHBtiANS8bOBTgFTqcIAIb?=
 =?us-ascii?q?TDLjCWDZgEda2KWI/3Oco5x8tpnqn5EJYrtaUlUvEbUdEEszT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr9BQ=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAABZLwVch0O0hNFiGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBUQYBAQELAYJpgQInjBGOFxSIfY43gXMSAQEYCwgBiAQiNAkNAQMBAQE?=
 =?us-ascii?q?BAQECARMBAQEKCwkIKSMMgjYigmUDAwECJAsBDQEBNwEFCQEBHx8SAx4MBwEFA?=
 =?us-ascii?q?RwZBYMcAYFpAxUFCplMPIodgWwzgnYBAQWEeQ2CFAMFEodbgxOBHIFXP4Z6RwQ?=
 =?us-ascii?q?YhyKJKAouhxyPGC4HAocAhw6DIwsYgVuIADaHFY1pgQuJUgIEAgQFAgUPIYElg?=
 =?us-ascii?q?g0zGjCDL4IbCAQXiF6FVygyAYEEAQGKbAEB?=
X-IPAS-Result: =?us-ascii?q?A0AFAABZLwVch0O0hNFiGwEBAQEDAQEBBwMBAQGBUQYBAQE?=
 =?us-ascii?q?LAYJpgQInjBGOFxSIfY43gXMSAQEYCwgBiAQiNAkNAQMBAQEBAQECARMBAQEKC?=
 =?us-ascii?q?wkIKSMMgjYigmUDAwECJAsBDQEBNwEFCQEBHx8SAx4MBwEFARwZBYMcAYFpAxU?=
 =?us-ascii?q?FCplMPIodgWwzgnYBAQWEeQ2CFAMFEodbgxOBHIFXP4Z6RwQYhyKJKAouhxyPG?=
 =?us-ascii?q?C4HAocAhw6DIwsYgVuIADaHFY1pgQuJUgIEAgQFAgUPIYElgg0zGjCDL4IbCAQ?=
 =?us-ascii?q?XiF6FVygyAYEEAQGKbAEB?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="43272003"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 05:31:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726127AbeLCNcT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 08:32:19 -0500
Received: from mail-qk1-f195.google.com ([209.85.222.195]:34034 "EHLO
        mail-qk1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726014AbeLCNcS (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 08:32:18 -0500
Received: by mail-qk1-f195.google.com with SMTP id a132so7291923qkg.1
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 05:31:16 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=A2F6pDiQKGzz6oIk7/k7tBCF05mIb2PLp1W0NJSuOD0=;
        b=aWUYb0pDM8TN4MJwh7SGnXQrA9R28l+VNusyVE0faDzsIjokebAFFXlB+A6JYoAPQX
         GNR8Aubkj1A+4eZlJSCzOzerIKM+me0o4mIgC6+9IArY0Al5DWKgV5o/xsb7iHFWq9SE
         28L08ILYAX57Tai848BId15KyUJwvywCrylRY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=A2F6pDiQKGzz6oIk7/k7tBCF05mIb2PLp1W0NJSuOD0=;
        b=XgTcrUCpszeIST1Pys6EUHTAXRwD9chNz/9UQjOcnHZYl3ali2AjL1BrFu2rdZMo6A
         jOtdf+ygyyRYEVb8JIQgMBl9D28ULkcdFhLkH1LTOF9snVRYwbrMw0D5VRaCFi770ygz
         vzL+D8aOh9u1pAD8L4zmm7UHO7ImTD/i0w3O+k21cV0ol8fa9Su3P+edtlCpQO5eAG5f
         aCnZDdtEhsoVww0KQAtEe8LuNyfo0Ru0xywBbh64+nyLAjUmIlWQehhFiiLX/Uoh3ejd
         8TZ1Z3IbXz7DarihMuN0AZUTv+JIM8F8iqzqJq3grzmfupYP4nWp0EUy8rad6fg0DCWV
         62Aw==
X-Gm-Message-State: AA+aEWawODG+iT11aoSi3pjnDUV5F+/mWhai3jcJr5ikbUVC2L5S73A4
        StjZqLkFo1feXjo+2A8lbNEJCg==
X-Google-Smtp-Source: AFSGD/XVXXxOvn0+5bBxEaWlrqCsRfrV1RZNtAcmj0px8oUuhk1L60WpfpvHAQ/3oyJ/Mck7kP+LoA==
X-Received: by 2002:a37:59c4:: with SMTP id n187mr15318058qkb.156.1543843875747;
        Mon, 03 Dec 2018 05:31:15 -0800 (PST)
Received: from workstation.celeiro.br ([138.204.25.29])
        by smtp.gmail.com with ESMTPSA id r56sm8619112qtj.30.2018.12.03.05.31.12
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 03 Dec 2018 05:31:15 -0800 (PST)
From: Rafael David Tinoco <rafael.tinoco@linaro.org>
To: sashal@kernel.org
Cc: rafael.tinoco@linaro.org, gregkh@linuxfoundation.org,
        rui.zhang@intel.com, edubezval@gmail.com,
        daniel.lezcano@linaro.org, linux-pm@vger.kernel.org,
        linux-kernel@vger.kernel.org, stable@vger.kernel.org
Subject: [PATCH 1/5] thermal/drivers/hisi: Remove the multiple sensors support
Date: Mon,  3 Dec 2018 11:31:03 -0200
Message-Id: <20181203133107.4002-2-rafael.tinoco@linaro.org>
X-Mailer: git-send-email 2.20.0.rc1
In-Reply-To: <20181203133107.4002-1-rafael.tinoco@linaro.org>
References: <20181203133107.4002-1-rafael.tinoco@linaro.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Daniel Lezcano <daniel.lezcano@linaro.org>

commit ff4ec2997df8fe7cc40513dbe5f86d9f88fb6be7 upstream.

By essence, the tsensor does not really support multiple sensor at the same
time. It allows to set a sensor and use it to get the temperature, another
sensor could be switched but with a delay of 3-5ms. It is difficult to read
simultaneously several sensors without a big delay.

Today, just one sensor is used, it is not necessary to deal with multiple
sensors in the code. Remove them and if it is needed in the future add them
on top of a code which will be clean up in the meantime.

Link: https://bugs.linaro.org/show_bug.cgi?id=4053 (PATCH 1/5)
Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
Reviewed-by: Leo Yan <leo.yan@linaro.org>
Acked-by: Wangtao (Kevin, Kirin) <kevin.wangtao@hisilicon.com>
Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
(cherry picked from commit ff4ec2997df8fe7cc40513dbe5f86d9f88fb6be7)
Signed-off-by: Rafael David Tinoco <rafael.tinoco@linaro.org>
---
 drivers/thermal/hisi_thermal.c | 75 +++++++++-------------------------
 1 file changed, 19 insertions(+), 56 deletions(-)

diff --git a/drivers/thermal/hisi_thermal.c b/drivers/thermal/hisi_thermal.c
index 6d8906d65476..aecbfe9fc8f2 100644
--- a/drivers/thermal/hisi_thermal.c
+++ b/drivers/thermal/hisi_thermal.c
@@ -40,6 +40,7 @@
 #define HISI_TEMP_STEP			(784)
 
 #define HISI_MAX_SENSORS		4
+#define HISI_DEFAULT_SENSOR		2
 
 struct hisi_thermal_sensor {
 	struct hisi_thermal_data *thermal;
@@ -54,9 +55,8 @@ struct hisi_thermal_data {
 	struct mutex thermal_lock;    /* protects register data */
 	struct platform_device *pdev;
 	struct clk *clk;
-	struct hisi_thermal_sensor sensors[HISI_MAX_SENSORS];
-
-	int irq, irq_bind_sensor;
+	struct hisi_thermal_sensor sensors;
+	int irq;
 	bool irq_enabled;
 
 	void __iomem *regs;
@@ -133,7 +133,7 @@ static void hisi_thermal_enable_bind_irq_sensor
 
 	mutex_lock(&data->thermal_lock);
 
-	sensor = &data->sensors[data->irq_bind_sensor];
+	sensor = &data->sensors;
 
 	/* setting the hdak time */
 	writel(0x0, data->regs + TEMP0_CFG);
@@ -181,31 +181,8 @@ static int hisi_thermal_get_temp(void *_sensor, int *temp)
 	struct hisi_thermal_sensor *sensor = _sensor;
 	struct hisi_thermal_data *data = sensor->thermal;
 
-	int sensor_id = -1, i;
-	long max_temp = 0;
-
 	*temp = hisi_thermal_get_sensor_temp(data, sensor);
 
-	sensor->sensor_temp = *temp;
-
-	for (i = 0; i < HISI_MAX_SENSORS; i++) {
-		if (!data->sensors[i].tzd)
-			continue;
-
-		if (data->sensors[i].sensor_temp >= max_temp) {
-			max_temp = data->sensors[i].sensor_temp;
-			sensor_id = i;
-		}
-	}
-
-	/* If no sensor has been enabled, then skip to enable irq */
-	if (sensor_id == -1)
-		return 0;
-
-	mutex_lock(&data->thermal_lock);
-	data->irq_bind_sensor = sensor_id;
-	mutex_unlock(&data->thermal_lock);
-
 	dev_dbg(&data->pdev->dev, "id=%d, irq=%d, temp=%d, thres=%d\n",
 		sensor->id, data->irq_enabled, *temp, sensor->thres_temp);
 	/*
@@ -218,7 +195,7 @@ static int hisi_thermal_get_temp(void *_sensor, int *temp)
 		return 0;
 	}
 
-	if (max_temp < sensor->thres_temp) {
+	if (*temp < sensor->thres_temp) {
 		data->irq_enabled = true;
 		hisi_thermal_enable_bind_irq_sensor(data);
 		enable_irq(data->irq);
@@ -245,22 +222,16 @@ static irqreturn_t hisi_thermal_alarm_irq_thread(int irq, void *dev)
 {
 	struct hisi_thermal_data *data = dev;
 	struct hisi_thermal_sensor *sensor;
-	int i;
 
 	mutex_lock(&data->thermal_lock);
-	sensor = &data->sensors[data->irq_bind_sensor];
+	sensor = &data->sensors;
 
 	dev_crit(&data->pdev->dev, "THERMAL ALARM: T > %d\n",
 		 sensor->thres_temp);
 	mutex_unlock(&data->thermal_lock);
 
-	for (i = 0; i < HISI_MAX_SENSORS; i++) {
-		if (!data->sensors[i].tzd)
-			continue;
-
-		thermal_zone_device_update(data->sensors[i].tzd,
-					   THERMAL_EVENT_UNSPECIFIED);
-	}
+	thermal_zone_device_update(data->sensors.tzd,
+				   THERMAL_EVENT_UNSPECIFIED);
 
 	return IRQ_HANDLED;
 }
@@ -317,7 +288,6 @@ static int hisi_thermal_probe(struct platform_device *pdev)
 {
 	struct hisi_thermal_data *data;
 	struct resource *res;
-	int i;
 	int ret;
 
 	data = devm_kzalloc(&pdev->dev, sizeof(*data), GFP_KERNEL);
@@ -359,14 +329,13 @@ static int hisi_thermal_probe(struct platform_device *pdev)
 	hisi_thermal_enable_bind_irq_sensor(data);
 	data->irq_enabled = true;
 
-	for (i = 0; i < HISI_MAX_SENSORS; ++i) {
-		ret = hisi_thermal_register_sensor(pdev, data,
-						   &data->sensors[i], i);
-		if (ret)
-			dev_err(&pdev->dev,
-				"failed to register thermal sensor: %d\n", ret);
-		else
-			hisi_thermal_toggle_sensor(&data->sensors[i], true);
+	ret = hisi_thermal_register_sensor(pdev, data,
+					   &data->sensors,
+					   HISI_DEFAULT_SENSOR);
+	if (ret) {
+		dev_err(&pdev->dev, "failed to register thermal sensor: %d\n",
+			ret);
+		return ret;
 	}
 
 	ret = devm_request_threaded_irq(&pdev->dev, data->irq,
@@ -378,6 +347,8 @@ static int hisi_thermal_probe(struct platform_device *pdev)
 		return ret;
 	}
 
+	hisi_thermal_toggle_sensor(&data->sensors, true);
+
 	enable_irq(data->irq);
 
 	return 0;
@@ -386,17 +357,9 @@ static int hisi_thermal_probe(struct platform_device *pdev)
 static int hisi_thermal_remove(struct platform_device *pdev)
 {
 	struct hisi_thermal_data *data = platform_get_drvdata(pdev);
-	int i;
-
-	for (i = 0; i < HISI_MAX_SENSORS; i++) {
-		struct hisi_thermal_sensor *sensor = &data->sensors[i];
-
-		if (!sensor->tzd)
-			continue;
-
-		hisi_thermal_toggle_sensor(sensor, false);
-	}
+	struct hisi_thermal_sensor *sensor = &data->sensors;
 
+	hisi_thermal_toggle_sensor(sensor, false);
 	hisi_thermal_disable_sensor(data);
 	clk_disable_unprepare(data->clk);
 
-- 
2.20.0.rc1

