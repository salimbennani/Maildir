Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:01:02 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 58A355804C1;
	Wed,  5 Dec 2018 15:55:45 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 15:55:44 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AB8LOfx3qKH7aDHZMsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segQL/nxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJPDICy?=
 =?us-ascii?q?YYwNAOoPMulWoJL9p0MMoBalGQWhB/nixiNSi3PqwaE31fkqHwHc3AwnGtIDqH?=
 =?us-ascii?q?Dao8/6NKgIV+C+0bfGwivAb/NXxDzw74rIfQouof6WW7J9atDeyUw1GAPfk1WQ?=
 =?us-ascii?q?rZbqPyiS1uQJrmib8+tgVeWpi248sQ1+vj+vxsI1h4TPm4kbyUjE+D1nzIopId?=
 =?us-ascii?q?C0UlN3bNC6HJdKqi2XNJd6TtkjTmxqoCo21KAKtJChcCQXzJkqxATTZ+GGfoSV?=
 =?us-ascii?q?+B7vSumcLDl+iXl4YrywnQyy/lKlyuDkVsm7zlJKri1dn9nSuXACyQbT5tKESv?=
 =?us-ascii?q?Rj5Eeh3yiA1wTJ5uFDO0A0mrLXK58nwrEuipoeqVrPEjPylUnskaObeFso9vK1?=
 =?us-ascii?q?5+nkfrnqvJ6ROo1shgH7KKsum8i/AeoiMggJWmiW4eC81Lzl/U3kT7RGl/42nb?=
 =?us-ascii?q?fDsJDcO8sbore1Awhb04Yl9Rm/FSyr0MoXnXYZNlJJYhGHgJbzO1HIPv/4Ce2z?=
 =?us-ascii?q?g1O2kDdk3/zGJKHuAo3RLnjfl7fsZbJ9609fyAUt19xe6I9UB6oFIPLyXE/xqd?=
 =?us-ascii?q?PZAgU4Mwyy3+boFtF92pkCVmKIB6+TKLnSvkOQ5uIzP+mMY5cYuDbnJPgk+/7h?=
 =?us-ascii?q?l3g5lUUdfam0x5QXbn+4E+9iI0WYZ3rsn9gAHX0Lvgo4UOzlllmCXSRPaHa1Wq?=
 =?us-ascii?q?I2/is7B56+DYffWoCth6SM3CW8HpJIfGxGCVeMEXHud4WDQPoMbCOSIsl8kj0L?=
 =?us-ascii?q?T7ShSokh1Q2wuw/+0bZoMu3U+igAv5L5yNd1//HTlQ019TFsFcudyGGNT2Z3nm?=
 =?us-ascii?q?8SXT85xqJ/rFd5yleC16h4nvNZGcZS5/NPTgc1K5rcw/ZmBND1XwLLZs2JR0q+?=
 =?us-ascii?q?QtW6HTExSco8w9wUbEZ7AdmiihHD0DCsA78ajLGLAJ008qTB33n+Pcp9ynDG1L?=
 =?us-ascii?q?U/gFkiWMdAKWqmhqtn/QjJG4HJi1mZl7qtdakEwSHC7nmDwnSUsEFYSgFwV77F?=
 =?us-ascii?q?Um4ZZkfRqdT55UbCT7u1BLQjMwtBz9OCK6RQZt3oi1VGWOnsONDEb22tnGewAA?=
 =?us-ascii?q?6CxqmQY4ryZ2UdwCLdBVAZnA8J43aJKxIyBie7rGLYFzxhC1Tvbljo8el/rnO7?=
 =?us-ascii?q?U0A1wxuLb01ny7q65BoVieaARPMU27IOoD0hpClsHFahw9LWDMKNpxZgfKVZZt?=
 =?us-ascii?q?M9/FdH1GLDuwxhJJCgKLpihlofcwRxsEPjzBF3CoRGkcg3o3Im1gtyKaSE0Fxf?=
 =?us-ascii?q?czOUx4z/OrrSKmPq5hCgd7bW2k3C0NaR4qoA8vA4pEvsvQ63Fksu6W5o08RI3H?=
 =?us-ascii?q?SG4JXKDw0SUYzqX0Yz9hh6oazaYyYn64PV031sLbe7sjvY1901A+slzw6qf81D?=
 =?us-ascii?q?P6OcCA/yD8oaCtCuKew3gVSmcggIPeFS9KEuOcOmeOCL2KqqPOZmgTKngn5L4I?=
 =?us-ascii?q?F70kKQ6SV8TvTE0IoCw/GdxgGHTSvzjE+9ssDrnoBJfSsSHmujxif+Ho5ee6py?=
 =?us-ascii?q?cZwNCWiwOc23x8xyiIL3VH5c6VGsGUkG2MiveReJa1z93AtQ1VkYoHC9mCu4yS?=
 =?us-ascii?q?B0nC8trqaFwCPOxOHifgIdOmFXXGlikUvsIY+sgtEaXUikdQgomAG+5UbnwahW?=
 =?us-ascii?q?v6B/L2jVQUdVcCn6NWBiUq2strWcZ85D8o8nsSJSUO6ke1CVVqb9owcG0yPkB2?=
 =?us-ascii?q?Zexio0dyupupX6mBx2knmdI2xwrHraeMFwwwnQ5NrHSP5V3zoGQjR4iDbNCli9?=
 =?us-ascii?q?Odmp4cubl5PZvu+iUGKhU4VZcTP3woOYqCu7+WpqDAW/nv+pnd3rCwo60S7919?=
 =?us-ascii?q?RxUSXIrRD8YpTk1qigMOJneFVoC0H468ZgBo5+lY4wjokK2XcGnpWV4WYHkWDr?=
 =?us-ascii?q?PNVYw63+bWABRT4Ww9HP5gjl11ZuLnaIx4L/S3WczdFtZ9i8YmMKxC0969pGB7?=
 =?us-ascii?q?uT7LxBhSF1uEa3rRrNYfhhmTcQ0f4u6H8Zg+4TogYswDuSAqsOHUZGJyzjjAqH?=
 =?us-ascii?q?78qxrKhMYGavcL6w1FdxnNy7DbGCpB1cV2j9eps4ASBw6cB/OkrW0HLv8oHkZM?=
 =?us-ascii?q?XQbdULux2IlBfAivJZKZMrmfoMmCpnInn9vXw+xu4/jBxu24y6vYedJ2Vs+qK5?=
 =?us-ascii?q?HgBXNjnva8wP/THtiL5UntyK0IC3ApVhBjILUYPzQv2yFzISsennOxyKED0hsX?=
 =?us-ascii?q?qbHbvfHQmC6EZptX7PEparN22JK3kd19ltWB6dJElHigAOQDo6hoI5FhytxMH5?=
 =?us-ascii?q?ckd2/DUR6UDjqhdW1uJkLRr/UnrcpAe1bDc7UoOfIQFS7gFD4UfVLMOf4vhyHy?=
 =?us-ascii?q?Fe4p2usgiNJnaHaARPCGEDQlaECEz7Prmy+dnA9PCVB+q5L/vTeLWOtPZRV/GS?=
 =?us-ascii?q?yZK01Ytm+TmMO96LPnljCf07x0VCUWp4G8TfhzUAVSgXmzjRYM6coRe24jd3od?=
 =?us-ascii?q?yn8PT3RALv4pOCC7tMPtVu+BC2gqaDO/SThCZjLjZY2Y0DxWXVyLgEx1MSjyBu?=
 =?us-ascii?q?dz+wEbUPryLNTaTQmrNJAB4fcS98KMxI76ck1AlXJcHbks/11qJ/jvMtEVhFSE?=
 =?us-ascii?q?fumtu3as0KOW29MFLHCV2PNLSHIz3L3s72bbm9Sb1WkOVbqRmwtSyHHE/kOzSJ?=
 =?us-ascii?q?jyPpWAy3MeFQkCGbOwRTuJ28chZoE2TsUMjqZQG7MNBpiz072rk0hnLMNW4BPj?=
 =?us-ascii?q?lwaUJNrruM7SxGhvVzAXBO7n1gLeOcgSaW8/HYKooKsftsGil1l/hV4HI/y7tU?=
 =?us-ascii?q?6iFLXP10mCvIod5orFGrie2PyjthUBpTpTdHnoOLvUN+OarH8plMQ2rL/BUI7T?=
 =?us-ascii?q?bYNxNfi95kFsf+85xX0N/MlKXtYGNO9tPI59paG8/OL8GHN2QJPh/gGTqSBwwA?=
 =?us-ascii?q?G3rjHmHSgQlsjbmu7XSU5swlp573sJEVS7IdU0Y6QLdSDkVjAcxHIZFvQy8Mj7?=
 =?us-ascii?q?GWlogL6GC4oR2XQ99V+tjDV/SPEbDsJSyfgL1seRQF2/X7IJ4VO4m93FZtLhFf?=
 =?us-ascii?q?nY/KEkfUFexXoyhodAQ0oQ0Z9Xl1TmQ+32rsbwq3/XsaDvmwgwI3jQ1lJ+8q8W?=
 =?us-ascii?q?Goq1M2IEfa4SI1mVMsndzNiDWYaiP1Jby3WZxKCi3yrA46NZaobRxyaFiQlENt?=
 =?us-ascii?q?Mn/4SrFQx+9ifG9ijifVvJJVBPpVVqpAfQMRwveMIf4v1AIP+W2c2UZb6L6dWt?=
 =?us-ascii?q?NZnwwwfMvp9ioY1g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AeAAA+ZQhch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBg2snjHGLLoIhlzgUgV0UAQEYEwGHUyI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQgNCQgpIwyCNiQBgmIDAwECJAsBDQEBNwEFCQEBUAMxAQUBHAYBCggFgxyCA?=
 =?us-ascii?q?gQBmkM8ih2BbDOCdgEBBYEAhikIEoZ7YkOCUIEcF4F/iGggBQyFZokrhwdRj1U?=
 =?us-ascii?q?JgiSEH4p0I198iAU2hxmCfYRygRqPTgIEAgQFAgUPIYEsBoIAMxoIGxWDJ4Ibg?=
 =?us-ascii?q?22KWzgygQQBAQE7ihcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AeAAA+ZQhch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBg2s?=
 =?us-ascii?q?njHGLLoIhlzgUgV0UAQEYEwGHUyI2Bw0BAwEBAQEBAQIBEwEBAQgNCQgpIwyCN?=
 =?us-ascii?q?iQBgmIDAwECJAsBDQEBNwEFCQEBUAMxAQUBHAYBCggFgxyCAgQBmkM8ih2BbDO?=
 =?us-ascii?q?CdgEBBYEAhikIEoZ7YkOCUIEcF4F/iGggBQyFZokrhwdRj1UJgiSEH4p0I198i?=
 =?us-ascii?q?AU2hxmCfYRygRqPTgIEAgQFAgUPIYEsBoIAMxoIGxWDJ4Ibg22KWzgygQQBAQE?=
 =?us-ascii?q?7ihcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,320,1539673200"; 
   d="scan'208";a="43756107"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 15:55:40 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728915AbeLEXwf (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 18:52:35 -0500
Received: from mail-wm1-f68.google.com ([209.85.128.68]:33136 "EHLO
        mail-wm1-f68.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728156AbeLEXwd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 18:52:33 -0500
Received: by mail-wm1-f68.google.com with SMTP id r24so12885994wmh.0
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 15:52:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amarulasolutions.com; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=rBYjCviXbp1GB9pLzlbZBcnM5Y0HUWSor8mlLMpmZyM=;
        b=SFZLKqa07jB+I+9eKm/4rEpndVBtrkls+WtaeK//lYJ70sIBn921bc3UrDOUl7o+cH
         iuTSK1kY1gKmCK5ghMdhMwZfGOJlZjxdm8DIfzb6VgLA6OOtd3yHi9bQnrNDnObYXwks
         gcD/1l75Mf6FjBOWHVcX+vSwEYaKtF866HsuI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=rBYjCviXbp1GB9pLzlbZBcnM5Y0HUWSor8mlLMpmZyM=;
        b=mS3r08DQzf7dXA4Enx2GUnIpNdwiGD4cZasimdUjxouf44WXh3+oYy+4bozL7T3JpG
         1003qZzOTn+iqFP3m86j1FBAFZIzx+rh1cKMDBH1HImQJN6s1SynNKdwNEQDlLoOHHVF
         cWkl05aM/i6jFvAtQWVh4/7n4r5a9nRwusKgep0LOU6x6/Wx+KFqqNsx5tQ4tFF3QrmL
         lT3/EeAgW6OG7NyiwDNy9Ew3tQ09J2L3QWpGYfaJCu3TzmdHEjkSePfZmvv6tl9iZ3QU
         PDb78ORC0DDw6K2gU54WZKl8k+92eU/jTA/UoCavAqQWj5Nb7HazSEIljCoaABBYMd3C
         +eww==
X-Gm-Message-State: AA+aEWa1C2BiinnqAavdaFdCJMp4xcnhvW12xQun96g4QsKV8gptm0O3
        HB6HAudoogMRCL/1W3UXfiSQ8g==
X-Google-Smtp-Source: AFSGD/XQDNliKlJmlnBnT0V5lCbVyFo0/Mnwytx7hEowZ/u54DhqIbdefL5WpZooQ8qwGr6IzCxRLA==
X-Received: by 2002:a1c:f8f:: with SMTP id 137mr17208559wmp.96.1544053951508;
        Wed, 05 Dec 2018 15:52:31 -0800 (PST)
Received: from localhost.localdomain (ip-161-243.sn-213-198.clouditalia.com. [213.198.161.243])
        by smtp.gmail.com with ESMTPSA id x15sm19113324wrs.27.2018.12.05.15.52.30
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 05 Dec 2018 15:52:30 -0800 (PST)
From: Jagan Teki <jagan@amarulasolutions.com>
To: Dmitry Torokhov <dmitry.torokhov@gmail.com>,
        Chen-Yu Tsai <wens@csie.org>, linux-input@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Michael Trimarchi <michael@amarulasolutions.com>,
        linux-amarula@amarulasolutions.com
Cc: Jagan Teki <jagan@amarulasolutions.com>
Subject: [PATCH v2 2/4] Input: goodix - Add ADVV28-supply regulator support
Date: Thu,  6 Dec 2018 05:22:18 +0530
Message-Id: <20181205235220.3461-2-jagan@amarulasolutions.com>
X-Mailer: git-send-email 2.18.0.321.gffc6fa0e3
In-Reply-To: <20181205235220.3461-1-jagan@amarulasolutions.com>
References: <20181205235220.3461-1-jagan@amarulasolutions.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Goodix CTP controllers have AVDD28 pin connected to voltage
regulator which may not be turned on by default, like for GT5663.

Add support for such ctp used boards by adding voltage regulator
handling code to goodix ctp driver.

Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
---
Changes for v2:
- disable regulator in remove
- fix to setup regulator in probe code

 drivers/input/touchscreen/goodix.c | 33 +++++++++++++++++++++++++-----
 1 file changed, 28 insertions(+), 5 deletions(-)

diff --git a/drivers/input/touchscreen/goodix.c b/drivers/input/touchscreen/goodix.c
index f2d9c2c41885..7371f6946098 100644
--- a/drivers/input/touchscreen/goodix.c
+++ b/drivers/input/touchscreen/goodix.c
@@ -27,6 +27,7 @@
 #include <linux/delay.h>
 #include <linux/irq.h>
 #include <linux/interrupt.h>
+#include <linux/regulator/consumer.h>
 #include <linux/slab.h>
 #include <linux/acpi.h>
 #include <linux/of.h>
@@ -47,6 +48,7 @@ struct goodix_ts_data {
 	struct touchscreen_properties prop;
 	unsigned int max_touch_num;
 	unsigned int int_trigger_type;
+	struct regulator *avdd28;
 	struct gpio_desc *gpiod_int;
 	struct gpio_desc *gpiod_rst;
 	u16 id;
@@ -786,25 +788,41 @@ static int goodix_ts_probe(struct i2c_client *client,
 	if (error)
 		return error;
 
+	ts->avdd28 = devm_regulator_get(&client->dev, "AVDD28");
+	if (IS_ERR(ts->avdd28)) {
+		error = PTR_ERR(ts->avdd28);
+		if (error != -EPROBE_DEFER)
+			dev_err(&client->dev,
+				"Failed to get AVDD28 regulator: %d\n", error);
+		return error;
+	}
+
+	/* power the controller */
+	error = regulator_enable(ts->avdd28);
+	if (error) {
+		dev_err(&client->dev, "Controller fail to enable AVDD28\n");
+		return error;
+	}
+
 	if (ts->gpiod_int && ts->gpiod_rst) {
 		/* reset the controller */
 		error = goodix_reset(ts);
 		if (error) {
 			dev_err(&client->dev, "Controller reset failed.\n");
-			return error;
+			goto error;
 		}
 	}
 
 	error = goodix_i2c_test(client);
 	if (error) {
 		dev_err(&client->dev, "I2C communication failure: %d\n", error);
-		return error;
+		goto error;
 	}
 
 	error = goodix_read_version(ts);
 	if (error) {
 		dev_err(&client->dev, "Read version failed.\n");
-		return error;
+		goto error;
 	}
 
 	ts->chip = goodix_get_chip_data(ts->id);
@@ -823,23 +841,28 @@ static int goodix_ts_probe(struct i2c_client *client,
 			dev_err(&client->dev,
 				"Failed to invoke firmware loader: %d\n",
 				error);
-			return error;
+			goto error;
 		}
 
 		return 0;
 	} else {
 		error = goodix_configure_dev(ts);
 		if (error)
-			return error;
+			goto error;
 	}
 
 	return 0;
+
+error:
+	regulator_disable(ts->avdd28);
+	return error;
 }
 
 static int goodix_ts_remove(struct i2c_client *client)
 {
 	struct goodix_ts_data *ts = i2c_get_clientdata(client);
 
+	regulator_disable(ts->avdd28);
 	if (ts->gpiod_int && ts->gpiod_rst)
 		wait_for_completion(&ts->firmware_loading_complete);
 
-- 
2.18.0.321.gffc6fa0e3

