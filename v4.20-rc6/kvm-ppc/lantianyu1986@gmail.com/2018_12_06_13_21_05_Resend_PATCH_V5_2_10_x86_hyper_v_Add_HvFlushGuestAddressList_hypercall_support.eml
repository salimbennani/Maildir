Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:46:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 36238580443;
	Thu,  6 Dec 2018 05:21:49 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 05:21:49 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A693vwBY+b6324QwT+7qZinr/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcm6Zx7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQctQHRWpHWsZRVjdBAp+i?=
 =?us-ascii?q?YIQSEuENOelVo5X4q1YIsBCwBxSjBPn3xzFIm3H406403eMjHgHIwgIgBMoOvX?=
 =?us-ascii?q?bPodnpKKsfS/y5wbPUwTnfaf5dxDfz6JLPchAkufyMWah/cczNyUkuDQzFiFWR?=
 =?us-ascii?q?qZH4Mz6R1ekAsnOW7+VlVe21im4nrxt9rSSoxscpjITCm4Ebykjc+Cln3Io4Ic?=
 =?us-ascii?q?e0RFN1bNK6CpdcqiKXO5dsTs4jQWxkoDg2x7IatZO0eSUKxpcqywLCZ/GCd4WE?=
 =?us-ascii?q?/g7vWPqULDtlnn1ofa+wihKp/ke9z+DxV9e430pLoydAkNTBuWwB2AfW58WDRP?=
 =?us-ascii?q?ty4kis1DCS3A7J8O5EO1o7la/DJp4h3LEwkp0TvFzdHi/5hkr2lrWadkY69eiy?=
 =?us-ascii?q?7eTofLHmqoWbN49uhQHyKqUumsqhDuQkKgUCQXSX9OCm2LH+80D1Xq9GguA1n6?=
 =?us-ascii?q?XFqpzXJMYWqra8AwBP04Yj7xi/Dy2h0NQdhXQHKFNFeBSaj4nmIl3OI+73De25?=
 =?us-ascii?q?g1uylDdn3vfGP7PnAprTNHjOi6nhfblj5E5G0gYzzs5Q54hSCr4fJPL/QEjxtM?=
 =?us-ascii?q?bXDhMhKQy73/7nCMlh1oMZQW+PBq6ZMKDMvlOS6eMvPvKBZIsUuDb7Nvgk6OTi?=
 =?us-ascii?q?jX4/mV8BY6ap2YEbZ2y/HvRjO0+Ze2bjgs8dEWcWuQozVOzqh0eDUT5PfXmyWL?=
 =?us-ascii?q?gw5jEmCI28C4fDSZuggLiA3Ce9A51XaXpKClGKEXf0aYqEX+0AZz6VIs9kijYE?=
 =?us-ascii?q?T6SuS5c91RGysw/307hnLu3K9SECtpLj09515+vUlRwp8Tx0DsKd03yCTm1un2?=
 =?us-ascii?q?MIQSM20757oUBn1liD1q14ieRCFdNP//NJThs6NZnEwuNgENDyWgXBftSTRFa8?=
 =?us-ascii?q?WNqmAyo8TtYww98IfkZ8FM+ujhHF3yq2HbAVk6aHC4Az8qLZx3LxPdpyy27a1K?=
 =?us-ascii?q?k9iFkrWshPOneghqJl8wjTBpTGk0OWl6uxcaQc3SjN9HqMzGaUvUFYVhJwXrvB?=
 =?us-ascii?q?XXwFekTWqtH57FvYT7CyEbQnLhdBycmaJ6RXcNLpk0tJSO3jONvEZWKxgHm/BR?=
 =?us-ascii?q?CPyrOIb4rqfmEd0T7ZCEgFlQAT4HmHORI/Bienv2LREjhuGUjzbEPr9Ol0sGm7?=
 =?us-ascii?q?QVMszwGWc01h0KK49QMPivyCVfwfxLIEtz0nqzVvAlm92cnbC96BpwpnYaVdbs?=
 =?us-ascii?q?kx4FZB1WLFqQN9OoasILxlhl4baw53pV/h1w1rCoVclsgntG8qzAt3KaKfzFNB?=
 =?us-ascii?q?dzOZ0YrsOrHNLWny5hSva6/Q2lHRy9uW/qYP6PIlq1Tspg2pF0wi82l53NlRyX?=
 =?us-ascii?q?eT+pLKDA8KW5LrTkk37wR6p63dYiQl/YzU0WNjMKaqvT7Cwd4mH/YlxQu6cNdZ?=
 =?us-ascii?q?M6OEExHyHtYeB8ivLuwqhleoYggFPOBU6K47Iceme+Ga166sOeZqhCimgnhf4I?=
 =?us-ascii?q?BhzkKM8DJxS+7V35of3/6UxAqGVzfmg1envcD6goREZTAUHmqixinoHo9RZqtu?=
 =?us-ascii?q?fYkVDWeiOdG4xtJ7h5T1QX5X6EajB08a2M+uYReSdV390hFK2kQNvHOnnjG0zz?=
 =?us-ascii?q?pqnDEzr6qTxTDBzP7mdBUaJGFLXm5ijVH3LIiwjtAaWlWobgczmBuk40b627ZU?=
 =?us-ascii?q?pKBlI2bPRkdIejD8L3t+XauoqrqCf8lP5YsosCVWSui9YUqWSqXgoxscyC7jG2?=
 =?us-ascii?q?pexDYmdzCloJn5nhp6iH6DI3Z3tnbWZcZwxRLH7tzGWfFRxiYGRDV/iTTPBFiz?=
 =?us-ascii?q?JcOp/daXl5fEqOy+THiuVp5QcSnqy4OPqi276HZuAR2+mfCzh9LmHRI70S/9y9?=
 =?us-ascii?q?llSyHIoAzgbYns0qSwKfhncVVwBF/g98p6HZlzk4sqi5EXw3QahJSV/XwcnGf3?=
 =?us-ascii?q?MNVb37/+bXUXST4Kxd7V/Bbq2El5In2VwIL5U22XwtF9aNmifmMWxiU94thJCK?=
 =?us-ascii?q?iO7bxIhyt1okeiogLXbvhwhTMdyfoo6H4HjOAFogstziOBAr8MGUlUJzDjlxON?=
 =?us-ascii?q?79qmtqVYeH6vcaSs1Ep5hd2hCbCCogJGV3rjdJYtAzRw7tlhP1LWy3L89JvkeN?=
 =?us-ascii?q?bLYNIXtx2UlQrAjudPJJIwkPoKmTRoOWbnsXI5zO47iARk3Yums4ifN2Vt4KW5?=
 =?us-ascii?q?DwZENj3yYsMf4DDsgrxYnsaLxICvBZRhFy4PXJvpS/KoDT0Tue7mNwaIDD0ztH?=
 =?us-ascii?q?ObFaDDEg+Y7Udst2jPHIyzN3GLOHkZys1vSwKHK0xYhAAUQS82npokFg2xwMzh?=
 =?us-ascii?q?cUF55i0e51LiqxtMzP5oOAf7UmvFuAiobTI0QoCFLBVK9gFC+1vVMcuG4+JxBS?=
 =?us-ascii?q?5Y+4OurBeXJmyHfQhIDnwJWk+ZB1DlJLau/sLN8+yZBuq4MvvPbq+Cqe1YV/eU?=
 =?us-ascii?q?252v1pFq8CqLNsWKJnNiFeE02lJfXXBlHMTUgzUOSysKlyLUcs6UvhG89jdsrs?=
 =?us-ascii?q?C49vTrVxni5Y+OC7tULNVu9Aq6gaaFN+6Mmil5LSxU2Y8LxX/N0LIfxkIdizly?=
 =?us-ascii?q?dzmxFrQNrS7NQ7zRmq9UDB4bajl/NMhS76I70QlCJ9Tbis7u1rNjiv41ClFFVU?=
 =?us-ascii?q?Hum82zZMwKJX29O03DBEqRKLuGIjjLydntYaygUb1QkPlUtxqotDmBDk/sJS6D?=
 =?us-ascii?q?mCfpVhy1NeFMjTqWPBhfuIG7bxZsBnLvTNPgah2nLtB3iSc6zqEzhnPPLWQcKy?=
 =?us-ascii?q?Rzc1tRrr2M6iNVmul/G21E7nZ/MeaIgTqW7+nGJZYQqvZrBiV0l+RH4HU10bdV?=
 =?us-ascii?q?7SdEROBrlyvWtNJhv1amkuyXwDp9TBVOsipLhJ6MvUh6OaTW7J9AWXPF/BIL9W?=
 =?us-ascii?q?qRChQKqMFjCt3goK1QztnPlKTuKDZN6d7U/M0cB9TKJ8KDKnYuLR3pGDuHRDcC?=
 =?us-ascii?q?GCOtMWDEm0FR1euf/XyNr5U8toO+y9JOTLgTaFtwFv4TBkl/VNsEaJZxRi440O?=
 =?us-ascii?q?21lskNsH63qgXQTcNLo8mWBqy6DvDmKTLfhr5BNEhA+q/xMYlGbt6z4EdlcFQv?=
 =?us-ascii?q?2dqSFg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACLIQlch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCBIIEbJ4gXg3yOGxSIayRuiCQghHmBcxIBARgTAYdXIjQJDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JIJjAwMBAiQZARsXBgEDAgkBAQUaMQMgE?=
 =?us-ascii?q?QEFARwZBYMcgWkBAxUBBJoNPBQBAYtzFgUBF4J3BYQ7ChknDV0TgSQCBhKCHIV?=
 =?us-ascii?q?BgWuBKIEcghaBEYdsgz+CQwKBKgEBAYdkhyGQLAEGAgGBVY9mI4lhh1SYZAYCC?=
 =?us-ascii?q?QcPIYElgg1wgW6BToIbDBcSgziKYDMygQUBAYgagk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0ARAACLIQlch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?BIIEbJ4gXg3yOGxSIayRuiCQghHmBcxIBARgTAYdXIjQJDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JIJjAwMBAiQZARsXBgEDAgkBAQUaMQMgEQEFARwZBYMcgWk?=
 =?us-ascii?q?BAxUBBJoNPBQBAYtzFgUBF4J3BYQ7ChknDV0TgSQCBhKCHIVBgWuBKIEcghaBE?=
 =?us-ascii?q?Ydsgz+CQwKBKgEBAYdkhyGQLAEGAgGBVY9mI4lhh1SYZAYCCQcPIYElgg1wgW6?=
 =?us-ascii?q?BToIbDBcSgziKYDMygQUBAYgagk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="141032376"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 05:21:47 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729716AbeLFNVp (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 08:21:45 -0500
Received: from mail-pf1-f196.google.com ([209.85.210.196]:41959 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728448AbeLFNVo (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 08:21:44 -0500
Received: by mail-pf1-f196.google.com with SMTP id b7so171959pfi.8;
        Thu, 06 Dec 2018 05:21:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=+S7SJ5bfWZvNyT+X230IvZbmjxt06W+jDJCB+AIfZhM=;
        b=pZ/wZuN0klIHZbUPMIYZMz0zx98DtChtOP7DX4rUcpuDz4/OMeNKqS+rUjvgUCgi/e
         RIFgOPj8f1Xom0UUenKZ2eQsvzKLCZe8WZ6sEAJa1jKtz3rothObVPuNnSvb5ppq5RPR
         TjarYf9dhB3oieqwXLVQERtRjRFaK04r/GUZpXP7bX8RlSDZCW//zqUrm4uwWo00JDFh
         f1Po2DA/ovwDQFVRY79vOsqlaprx7tRLNLpYSNM9nrl2j8so5z/lOi8tXOskQivQquvC
         9FmwAi+ThYrcHV45e3ZwKws5EpJH6OZbzcPBk9HoOuwKo5DpLN63drN4iCP99D3iFwj+
         wXiw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=+S7SJ5bfWZvNyT+X230IvZbmjxt06W+jDJCB+AIfZhM=;
        b=TvBe+r1vVfQvPckFzrkOGLLgBPg0HPL87nv0bAgt8l8x8gBtOyxERgvncrzx292FZM
         LCIr/j1cbwJq2gFKCC66lMaiZ1RwHyhM8MxMswGNwglm5dHfVUaX6yjd6hLW4yNg7yej
         6Vv/WuBn9pSJlMBvC00ez4CTXC+cGaoLdBGDqdwQ+a64DxMYpbJ+PlSke7HaCknQYWNU
         mvOpqPiA8zeArF5ENUW5llzK+YadafesmpuxxxgkNVTnTpAxjnESYEi7J7aoSknSnYSN
         g16UhGLwZZ/Wa+qM4FGBF64jrug53eEP8XDcs7gltAxfUiRTdE0ErANWpXXCIGaNJCQz
         ghZg==
X-Gm-Message-State: AA+aEWaOygikAVCtDFvjS+6hxD50p+ggtz/I1B1x0m6mhvo+tpYYzwQ5
        yvm/DOyJ0hx0N1pPAK5qBx4=
X-Google-Smtp-Source: AFSGD/X9QcN1hDAodYE4/BDzQw/bkfDLpWXJH9haHfzb4HV/lG3PB9QECVTfOSvGTkJwe84P5tue0Q==
X-Received: by 2002:a62:c28e:: with SMTP id w14mr28418646pfk.115.1544102502857;
        Thu, 06 Dec 2018 05:21:42 -0800 (PST)
Received: from localhost.corp.microsoft.com ([2404:f801:9000:1a:d9bd:62c6:740b:9fc4])
        by smtp.googlemail.com with ESMTPSA id y5sm2409246pge.49.2018.12.06.05.21.34
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 06 Dec 2018 05:21:42 -0800 (PST)
From: lantianyu1986@gmail.com
X-Google-Original-From: Tianyu.Lan@microsoft.com
Cc: Lan Tianyu <Tianyu.Lan@microsoft.com>, christoffer.dall@arm.com,
        marc.zyngier@arm.com, linux@armlinux.org.uk,
        catalin.marinas@arm.com, will.deacon@arm.com, jhogan@kernel.org,
        ralf@linux-mips.org, paul.burton@mips.com, paulus@ozlabs.org,
        benh@kernel.crashing.org, mpe@ellerman.id.au, kys@microsoft.com,
        haiyangz@microsoft.com, sthemmin@microsoft.com, tglx@linutronix.de,
        mingo@redhat.com, bp@alien8.de, hpa@zytor.com, x86@kernel.org,
        pbonzini@redhat.com, rkrcmar@redhat.com,
        linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
        linux-kernel@vger.kernel.org, linux-mips@linux-mips.org,
        kvm-ppc@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
        devel@linuxdriverproject.org, kvm@vger.kernel.org,
        michael.h.kelley@microsoft.com, vkuznets@redhat.com
Subject: [Resend PATCH V5 2/10] x86/hyper-v: Add HvFlushGuestAddressList hypercall support
Date: Thu,  6 Dec 2018 21:21:05 +0800
Message-Id: <20181206132113.2691-3-Tianyu.Lan@microsoft.com>
X-Mailer: git-send-email 2.14.4
In-Reply-To: <20181206132113.2691-1-Tianyu.Lan@microsoft.com>
References: <20181206132113.2691-1-Tianyu.Lan@microsoft.com>
To: unlisted-recipients:; (no To-header on input)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Lan Tianyu <Tianyu.Lan@microsoft.com>

Hyper-V provides HvFlushGuestAddressList() hypercall to flush EPT tlb
with specified ranges. This patch is to add the hypercall support.

Reviewed-by:  Michael Kelley <mikelley@microsoft.com>
Signed-off-by: Lan Tianyu <Tianyu.Lan@microsoft.com>
---
Change sincd v4:
       - Expose function hyperv_fill_flush_guest_mapping_list()
       out of hyperv file
       - Adjust parameter of hyperv_flush_guest_mapping_range()

Change since v2:
      Fix some coding style issues
        - Move HV_MAX_FLUSH_PAGES and HV_MAX_FLUSH_REP_COUNT to
	hyperv-tlfs.h.
	- Calculate HV_MAX_FLUSH_REP_COUNT in the macro definition
	- Use HV_MAX_FLUSH_REP_COUNT to define length of gpa_list in
	struct hv_guest_mapping_flush_list.

Change since v1:
       Add hyperv tlb flush struct to avoid use kvm tlb flush struct
in the hyperv file.
---
 arch/x86/hyperv/nested.c           | 79 ++++++++++++++++++++++++++++++++++++++
 arch/x86/include/asm/hyperv-tlfs.h | 32 +++++++++++++++
 arch/x86/include/asm/mshyperv.h    | 15 ++++++++
 3 files changed, 126 insertions(+)

diff --git a/arch/x86/hyperv/nested.c b/arch/x86/hyperv/nested.c
index b8e60cc50461..3d0f31e46954 100644
--- a/arch/x86/hyperv/nested.c
+++ b/arch/x86/hyperv/nested.c
@@ -7,6 +7,7 @@
  *
  * Author : Lan Tianyu <Tianyu.Lan@microsoft.com>
  */
+#define pr_fmt(fmt)  "Hyper-V: " fmt
 
 
 #include <linux/types.h>
@@ -54,3 +55,81 @@ int hyperv_flush_guest_mapping(u64 as)
 	return ret;
 }
 EXPORT_SYMBOL_GPL(hyperv_flush_guest_mapping);
+
+int hyperv_fill_flush_guest_mapping_list(
+		struct hv_guest_mapping_flush_list *flush,
+		u64 start_gfn, u64 pages)
+{
+	u64 cur = start_gfn;
+	u64 additional_pages;
+	int gpa_n = 0;
+
+	do {
+		/*
+		 * If flush requests exceed max flush count, go back to
+		 * flush tlbs without range.
+		 */
+		if (gpa_n >= HV_MAX_FLUSH_REP_COUNT)
+			return -ENOSPC;
+
+		additional_pages = min_t(u64, pages, HV_MAX_FLUSH_PAGES) - 1;
+
+		flush->gpa_list[gpa_n].page.additional_pages = additional_pages;
+		flush->gpa_list[gpa_n].page.largepage = false;
+		flush->gpa_list[gpa_n].page.basepfn = cur;
+
+		pages -= additional_pages + 1;
+		cur += additional_pages + 1;
+		gpa_n++;
+	} while (pages > 0);
+
+	return gpa_n;
+}
+EXPORT_SYMBOL_GPL(hyperv_fill_flush_guest_mapping_list);
+
+int hyperv_flush_guest_mapping_range(u64 as,
+		hyperv_fill_flush_list_func fill_flush_list_func, void *data)
+{
+	struct hv_guest_mapping_flush_list **flush_pcpu;
+	struct hv_guest_mapping_flush_list *flush;
+	u64 status = 0;
+	unsigned long flags;
+	int ret = -ENOTSUPP;
+	int gpa_n = 0;
+
+	if (!hv_hypercall_pg || !fill_flush_list_func)
+		goto fault;
+
+	local_irq_save(flags);
+
+	flush_pcpu = (struct hv_guest_mapping_flush_list **)
+		this_cpu_ptr(hyperv_pcpu_input_arg);
+
+	flush = *flush_pcpu;
+	if (unlikely(!flush)) {
+		local_irq_restore(flags);
+		goto fault;
+	}
+
+	flush->address_space = as;
+	flush->flags = 0;
+
+	gpa_n = fill_flush_list_func(flush, data);
+	if (gpa_n < 0) {
+		local_irq_restore(flags);
+		goto fault;
+	}
+
+	status = hv_do_rep_hypercall(HVCALL_FLUSH_GUEST_PHYSICAL_ADDRESS_LIST,
+				     gpa_n, 0, flush, NULL);
+
+	local_irq_restore(flags);
+
+	if (!(status & HV_HYPERCALL_RESULT_MASK))
+		ret = 0;
+	else
+		ret = status;
+fault:
+	return ret;
+}
+EXPORT_SYMBOL_GPL(hyperv_flush_guest_mapping_range);
diff --git a/arch/x86/include/asm/hyperv-tlfs.h b/arch/x86/include/asm/hyperv-tlfs.h
index 4139f7650fe5..405a378e1c62 100644
--- a/arch/x86/include/asm/hyperv-tlfs.h
+++ b/arch/x86/include/asm/hyperv-tlfs.h
@@ -10,6 +10,7 @@
 #define _ASM_X86_HYPERV_TLFS_H
 
 #include <linux/types.h>
+#include <asm/page.h>
 
 /*
  * The below CPUID leaves are present if VersionAndFeatures.HypervisorPresent
@@ -358,6 +359,7 @@ struct hv_tsc_emulation_status {
 #define HVCALL_POST_MESSAGE			0x005c
 #define HVCALL_SIGNAL_EVENT			0x005d
 #define HVCALL_FLUSH_GUEST_PHYSICAL_ADDRESS_SPACE 0x00af
+#define HVCALL_FLUSH_GUEST_PHYSICAL_ADDRESS_LIST 0x00b0
 
 #define HV_X64_MSR_VP_ASSIST_PAGE_ENABLE	0x00000001
 #define HV_X64_MSR_VP_ASSIST_PAGE_ADDRESS_SHIFT	12
@@ -757,6 +759,36 @@ struct hv_guest_mapping_flush {
 	u64 flags;
 };
 
+/*
+ *  HV_MAX_FLUSH_PAGES = "additional_pages" + 1. It's limited
+ *  by the bitwidth of "additional_pages" in union hv_gpa_page_range.
+ */
+#define HV_MAX_FLUSH_PAGES (2048)
+
+/* HvFlushGuestPhysicalAddressList hypercall */
+union hv_gpa_page_range {
+	u64 address_space;
+	struct {
+		u64 additional_pages:11;
+		u64 largepage:1;
+		u64 basepfn:52;
+	} page;
+};
+
+/*
+ * All input flush parameters should be in single page. The max flush
+ * count is equal with how many entries of union hv_gpa_page_range can
+ * be populated into the input parameter page.
+ */
+#define HV_MAX_FLUSH_REP_COUNT (PAGE_SIZE - 2 * sizeof(u64) /	\
+				sizeof(union hv_gpa_page_range))
+
+struct hv_guest_mapping_flush_list {
+	u64 address_space;
+	u64 flags;
+	union hv_gpa_page_range gpa_list[HV_MAX_FLUSH_REP_COUNT];
+};
+
 /* HvFlushVirtualAddressSpace, HvFlushVirtualAddressList hypercalls */
 struct hv_tlb_flush {
 	u64 address_space;
diff --git a/arch/x86/include/asm/mshyperv.h b/arch/x86/include/asm/mshyperv.h
index 1d0a7778e163..7da712f65398 100644
--- a/arch/x86/include/asm/mshyperv.h
+++ b/arch/x86/include/asm/mshyperv.h
@@ -22,6 +22,11 @@ struct ms_hyperv_info {
 
 extern struct ms_hyperv_info ms_hyperv;
 
+
+typedef int (*hyperv_fill_flush_list_func)(
+		struct hv_guest_mapping_flush_list *flush,
+		void *data);
+
 /*
  * Generate the guest ID.
  */
@@ -348,6 +353,11 @@ void set_hv_tscchange_cb(void (*cb)(void));
 void clear_hv_tscchange_cb(void);
 void hyperv_stop_tsc_emulation(void);
 int hyperv_flush_guest_mapping(u64 as);
+int hyperv_flush_guest_mapping_range(u64 as,
+		hyperv_fill_flush_list_func fill_func, void *data);
+int hyperv_fill_flush_guest_mapping_list(
+		struct hv_guest_mapping_flush_list *flush,
+		u64 start_gfn, u64 end_gfn);
 
 #ifdef CONFIG_X86_64
 void hv_apic_init(void);
@@ -370,6 +380,11 @@ static inline struct hv_vp_assist_page *hv_get_vp_assist_page(unsigned int cpu)
 	return NULL;
 }
 static inline int hyperv_flush_guest_mapping(u64 as) { return -1; }
+static inline int hyperv_flush_guest_mapping_range(u64 as,
+		hyperv_fill_flush_list_func fill_func, void *data);
+{
+	return -1;
+}
 #endif /* CONFIG_HYPERV */
 
 #ifdef CONFIG_HYPERV_TSCPAGE
-- 
2.14.4

