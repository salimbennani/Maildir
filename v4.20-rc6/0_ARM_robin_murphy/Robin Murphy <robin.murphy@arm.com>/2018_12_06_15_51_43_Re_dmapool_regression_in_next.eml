Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:49:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 6252658042F;
	Thu,  6 Dec 2018 07:51:52 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 07:51:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A21RNbhHNjZUkiDDa7HFaf51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75osS6bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSiJPHI28?=
 =?us-ascii?q?YYsMAeQPM+lXoIvyqEcBoxulHQmhBvjiyiNLi3LswaE2z+osHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakOVuC616jIzTPeZP1RxDf98pDIchAhoPqRWr9wa83RxlIuFwPDlFmQ?=
 =?us-ascii?q?rJHlPymN1uQNs2mW9PBvVfiqi2I9tw5xpT2vy94qh4LUiIwVzVXE+j94wIYzPd?=
 =?us-ascii?q?C4S1R7YN+nEJdKqS6aKpN6QsIkQ2FmoiY10KAJtoChcycX0pgnwATfa/OBfoOV?=
 =?us-ascii?q?4RzjTP6cLSlkiH9hYr6zmhi//Va6xuHhVcS4zExGoytHn9XUqHwByh7e5tKaRv?=
 =?us-ascii?q?Zy4kutwyuD2xzO5u1eI004iazWIIM7zLEqjJocq0HDEzf2mEroiK+WcV0p+van?=
 =?us-ascii?q?6+v5eLXqvJycOJFuigH4LKsuntazAeMiMggBR2Sb+OK826P//UDhXrlGkvk7nr?=
 =?us-ascii?q?PEvJ3UO8gXvLO1DgxJ3oo56huyDS+q0NECknkGKFJFdgiHj4/sO1zWJPD4DPG/?=
 =?us-ascii?q?g0mjkTtyxPDJIKfhApPTIXjHibvherh860hCxwop1t1f+Z1UBa8bIP7pWU/+qs?=
 =?us-ascii?q?bYDhknPAyw2ernD8991owGVWKVHqCZKL/SsUOP5u83J+mMZYwVtyjnJ/kq+v7j?=
 =?us-ascii?q?lns5mV4bfam00pobcnG4HvJ6I0qHZXrgmMsOEWAPvgAmVuzllEWCUSJPZ3a1R6?=
 =?us-ascii?q?885is0CIO6DYjZQYChmryB3DqhEZ1QaWBLEVSMEXbud4WZVPYAciOSIsl9kjMa?=
 =?us-ascii?q?UbitUZMu1RartAXi0bpoMvLU+jEEtZLkzNV15erTmg8o+Tx3CMSd1WeNT2Zvk2?=
 =?us-ascii?q?MMRj822r1/oENnxleC16h4n+JXFdhJ6/xVVQc6MIbWz/ZmBNDqRgLBYtCJRU68?=
 =?us-ascii?q?TdW9ATExSdExz8UUY0lnGdWvlRTD3yusA78ImL2HHp008qTA33fvI8Zx0WrJ1K?=
 =?us-ascii?q?4kj1M+WMtAKXWmhrJj9wjUH4PJkF+Wl6CweaQY3S7C7mGDzWWVsUFcUQ5wV7jF?=
 =?us-ascii?q?XH8FakvXq9T5+l3NT7u0Bbs7NQtBzNaIKrFWZd3xkVVGWPDjNczDbG2rhWe/Gw?=
 =?us-ascii?q?yExrOWY4rsYGUSwiPdBE8AkwAQ+HaGMRMzBiOgo2LYETxvGkjjY0Lq8elitny7?=
 =?us-ascii?q?SlU4wB2Nb01kz7C14AIaheSAS/MP2bIJoDoupC9qHFmjxd7WC8CPpwx6fKpCZ9?=
 =?us-ascii?q?Mw+1NH1WPftwxgMZ2sNaFihlgCcwtpu0PizQl4CoJFkcIytnMl0BJyKb6E0FNG?=
 =?us-ascii?q?bz6YwZHwOrjQKmnu/BCua7Ta2k3E3NaR4KcP7PU4q1PsvAyyEkoi8nNn08Ra0n?=
 =?us-ascii?q?eG55XKChYSXoz1Ukot6xd6oLTaaDEn54zIzX1sLbW0sjja1t0zAOsq1BmhcMlf?=
 =?us-ascii?q?Ma+eDwDyDtAVCNKoKOwpnFipcAkJPORT9K4yIsOneOGK2K+tPOZ8gj2miX5L75?=
 =?us-ascii?q?x60kKJ7yB8UPLH344Zw/GE2QuKTzf9jEq7vs/rg4xFZDESEXC5ySjrH4NRYqxy?=
 =?us-ascii?q?fYAWCWahOcG3x9N+h4LzVH5c7lKsG1QG2MqxcxqIc1P9xRFQ1VgQoXG/gyu4zi?=
 =?us-ascii?q?B7nCszrqWC2yzC2eLiewQdOm5KXWVtkU3jIYypgN8ERkioaA4pmQCh5Ub7wahb?=
 =?us-ascii?q?uat+I3PSQUdOYyj5MWViXrGsubqFZs5F8IkovjlPUOSgfVCaTabwohsb0y/5H2?=
 =?us-ascii?q?pS3is7dyysupjimxx6iWSdLGt8rXbDeMFwwwvf68LYRfJLwjUGQyx4gyHNBleg?=
 =?us-ascii?q?J9mp4cmUl5Dbv+C8TW2hTJ5TcSrszY+aryu0/25qAR6+n/C1hNLnFxM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5XoGnn30?=
 =?us-ascii?q?MdlB26L+bXwNSCUPw97U5gjlxUJiImiIx4L/SnWS3M9ha8OmbWMR3yI399pKB7?=
 =?us-ascii?q?uM7LxYgSt1pUK1rQHLbvh8hDsdyeYu52Qcg+EGowctyiSdArYPHUhXJyDslhKI?=
 =?us-ascii?q?78ygo6VTfmqgbb+w1E9ml9C7EL6Cuh1cWGr+epo6GC9w78Z/P0jW3Hz99I7kY8?=
 =?us-ascii?q?XQYswJthKPjRjAledVJYk1lvoLgypnJG38sWcky+49kRxhw5W6sJKbJGVq+aKz?=
 =?us-ascii?q?GgRYOSHtZ8MP5jHtir5TntqR34CqBJlgGy8EXJ31TfKzCzIStO/qNwKPED06t3?=
 =?us-ascii?q?eaFqDTHQ6Z6Ed6sX3PF4qnOG2QJHkc1d9iXgWSJFRDgAAIWzU3hoU2GRqtxMzl?=
 =?us-ascii?q?bUd1/DQR5kPjpxtIy+JoMQT/U2jFqAepbDc0VIaQLB5M4g5e4EfVNNSU7vhvEC?=
 =?us-ascii?q?FA4p2hsAuNJ3SZZwtSCGEGRFeEC0r/PrW05tnA7uuYBve4L/TUerWDsuheV/aO?=
 =?us-ascii?q?xZKy3Ypq5TeMNsOTPnZ8C/03wFZMXXd8G87BgTUAVzQXlz7Rb86cvBq9+ip3rt?=
 =?us-ascii?q?2m8PT2Qg3v45GDC6BVMdVp9BC7mqODN++WhCZkJjdUzJIMxXnUyLcB2F4ekT1h?=
 =?us-ascii?q?dz6oEb4Yry7CULrQmrNLDx4ccy5zNNVH76M/3glOOM7XkND11qR/jv46FVhFT0?=
 =?us-ascii?q?HhmtqyaMwOImG9Mk7HBUmROLSHIz3L39/4YaemRbJMi+VUsgW6uSyHHE/7IjSD?=
 =?us-ascii?q?iz7pWgi1PuFRly6bJgJRuYGnfhZpCGjuV9bmahy9MN9qgjw627w0hnXWNWECNT?=
 =?us-ascii?q?hwaV9CrrqV7SlAmPVwB3RB7mZ5LemDgyuZ8+jYKpMMvfR3GCh7i+Ja72o8y7ZO?=
 =?us-ascii?q?6CFERfp1mDbdr9J0olGmlPWPxSRjUBZUtjlLg4eLt114OarF7plARWrE/BUV4G?=
 =?us-ascii?q?SQERsKod5lCtzpu69Iy9nPlLj8KDFN89/P+cscBs7UKN+IMXY7MBrpHiLUAxUB?=
 =?us-ascii?q?TTKxKW7fgEldw7mu8SipqZ4r4rLlhIYDUKRRRRRhCvQcG05NF80ILY1xUy8lmq?=
 =?us-ascii?q?Xdh8kNsz72jwPDVd5IopfJHtGVE/HoNy2ajPEQZAEawpv7IJ4VO4m93FZtPB0y?=
 =?us-ascii?q?gIPMCmLZQddIoyFsKAQzpRZj6n97G1c00UPjIiaw+mcTBLbghBk8iw04ZPk37D?=
 =?us-ascii?q?f9y14tIxzBoy5mwxp5osnsnT3EKG25F6y3R4wDTnOs70U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ApAgDxRAlch0O0hNFkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YJqgQIng3qUJ4FgLRSOLYsALAsIAYdXIjgSAQMBAQEBAQECARMBAQEIDQkIKSM?=
 =?us-ascii?q?MgjYkAYJhAQEBAQIBAQEBIA8BBTYLBgkBAQoSBgICJgICAyQBIQ4GAQwGAgEBA?=
 =?us-ascii?q?YMcAYF5CAQBCqVxgS+ELQGBEoRogQuLFIFXP4E4gjY1gUEBgVwBAwGEYoJXAok?=
 =?us-ascii?q?1jDeKcwcCgiAEhGCGJIQYHoIph0mETIJ4iQ6EbIxvgXYzGiNQgmwJgh4MC4RLh?=
 =?us-ascii?q?BOFPz8BATGBBQEBijoBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ApAgDxRAlch0O0hNFkHQEBBQEHBQGBZYJqgQIng3qUJ4F?=
 =?us-ascii?q?gLRSOLYsALAsIAYdXIjgSAQMBAQEBAQECARMBAQEIDQkIKSMMgjYkAYJhAQEBA?=
 =?us-ascii?q?QIBAQEBIA8BBTYLBgkBAQoSBgICJgICAyQBIQ4GAQwGAgEBAYMcAYF5CAQBCqV?=
 =?us-ascii?q?xgS+ELQGBEoRogQuLFIFXP4E4gjY1gUEBgVwBAwGEYoJXAok1jDeKcwcCgiAEh?=
 =?us-ascii?q?GCGJIQYHoIph0mETIJ4iQ6EbIxvgXYzGiNQgmwJgh4MC4RLhBOFPz8BATGBBQE?=
 =?us-ascii?q?BijoBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="54822884"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 06 Dec 2018 07:51:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726117AbeLFPvr (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Thu, 6 Dec 2018 10:51:47 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:53920 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726010AbeLFPvr (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Dec 2018 10:51:47 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id D5FA880D;
        Thu,  6 Dec 2018 07:51:46 -0800 (PST)
Received: from [10.1.196.75] (e110467-lin.cambridge.arm.com [10.1.196.75])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id BE2253F59C;
        Thu,  6 Dec 2018 07:51:44 -0800 (PST)
Subject: Re: dmapool regression in next
To: Tony Battersby <tonyb@cybernetics.com>,
        Krzysztof Kozlowski <krzk@kernel.org>, tony@atomide.com
Cc: Stephen Rothwell <sfr@canb.auug.org.au>, john.garry@huawei.com,
        linux@armlinux.org.uk, linux-kernel@vger.kernel.org,
        andy.shevchenko@gmail.com, akpm@linux-foundation.org,
        linux-omap@vger.kernel.org, hch@lst.de,
        linux-arm-kernel@lists.infradead.org,
        Marek Szyprowski <m.szyprowski@samsung.com>
References: <20181206013054.GI6707@atomide.com>
 <CAJKOXPcoK5SsXfXjdAWPHLX2KZRCqOv61HVf2DK9wm4_m+vJ0w@mail.gmail.com>
 <09e73d24-467a-52bb-0433-a9596d4d6f02@cybernetics.com>
From: Robin Murphy <robin.murphy@arm.com>
Message-ID: <451215b8-548a-eff7-9e96-0ff5f8cbb614@arm.com>
Date: Thu, 6 Dec 2018 15:51:43 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <09e73d24-467a-52bb-0433-a9596d4d6f02@cybernetics.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-GB
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 06/12/2018 15:11, Tony Battersby wrote:
> On 12/6/18 4:25 AM, Krzysztof Kozlowski wrote:
>> On Thu, 6 Dec 2018 at 02:31, Tony Lindgren <tony@atomide.com> wrote:
>>> Hi,
>>>
>>> Looks like with commit 26abe88e830d ("mm/dmapool.c: improve scalability
>>> of dma_pool_free()") I'm now getting spammed with lots of "(bad vaddr)"
>>> on at least omap4 pandaboard, see below.
>>>
>>> Any ideas what might be going wrong?
>>>
>>> Regards,
>>>
>>> Tony
>>>
>>> 8< ---------------------
>>> omap-dma-engine 4a056000.dma-controller: dma_pool_free 4a056000.dma-controller, (ptrval) (bad vaddr)/0xbe800000
>>> omap-dma-engine 4a056000.dma-controller: dma_pool_free 4a056000.dma-controller, (ptrval) (bad vaddr)/0xbe80001c
>>> omap-dma-engine 4a056000.dma-controller: dma_pool_free 4a056000.dma-controller, (ptrval) (bad vaddr)/0xbe800038
>>> ...
>> I see it as well on all my Exynos boards, since yesterday's next. In
>> my case it is the USB EHCI driver:
>> exynos-ehci 12110000.usb: dma_pool_free ehci_qtd, (ptrval) (bad
>> vaddr)/0xb8844180
>> Full log here:
>> https://krzk.eu/#/builders/1/builds/2937/steps/12/logs/serial0
>>
>> Best regards,
>> Krzysztof
>>
> Here is the prototype:
> 
> void dma_pool_free(struct dma_pool *pool, void *vaddr, dma_addr_t dma);
> 
> With the old code, the 'dma' value had to be correct for use with
> pool_find_page(), or else you would get an error.Â  If the 'vaddr' value
> was incorrect, it would corrupt the dmapool freelist, but you wouldn't
> get an error unless DMAPOOL_DEBUG was enabled.
> 
> With my patch applied, 'vaddr' has to be correct for virt_to_page().Â  My
> code also checks that 'dma' is consistent with 'vaddr' even if
> DMAPOOL_DEBUG is disabled, since the check is fast and it will prevent
> problems like this in the future.

Unfortunately that logic has a fatal flaw - DMA pools are backed by 
dma_alloc_coherent(), and there is absolutely no guarantee that the 
memory dma_alloc_coherent() returns is backed by a struct page at all. 
Even if it is, there is still absolutely no guarantee that the vaddr 
value it returns is valid for virt_to_page() - on many systems it will 
be in vmalloc or some architecture-specific region of address space.

The problem is not that these drivers are buggy (they're not - the arch 
code is returning a vmalloc()ed non-cacheable remap in the first place), 
it's that 26abe88e830d is fundamentally unworkable and needs reverting. 
Apparently the original patches managed not to catch my eye as something 
I needed to review, sorry about that :(

Robin.

> 
> So if a buggy driver passes in a good value for 'dma' but a bad value
> for 'vaddr', then it may have appeared to work previously (but with
> possible data corruption, depending on the circumstances), but my patch
> will expose the problem.Â  You can confirm by reverting my dmapool
> patches and enabling DMAPOOL_DEBUG, which is at the top of mm/dmapool.c:
> 
> #if defined(CONFIG_DEBUG_SLAB) || defined(CONFIG_SLUB_DEBUG_ON)
> #define DMAPOOL_DEBUG 1
> #endif
> 
> Tony Battersby
> 
> 
> 
> _______________________________________________
> linux-arm-kernel mailing list
> linux-arm-kernel@lists.infradead.org
> http://lists.infradead.org/mailman/listinfo/linux-arm-kernel
> 
