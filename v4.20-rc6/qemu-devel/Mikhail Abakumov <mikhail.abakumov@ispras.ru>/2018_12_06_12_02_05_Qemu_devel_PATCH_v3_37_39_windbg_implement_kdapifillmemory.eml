Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:45:13 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga008.fm.intel.com (fmsmga008.fm.intel.com [10.253.24.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4C70058042F
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 04:20:39 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by fmsmga008-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 04:20:39 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AHq9jxhXQq53AObWqzpjbNfXkm1DV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRGHt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XlMJ+gqFVrxCvpxNxzIHbfI6bOudmfq7ff90XSndNU8hNWyNfGYOx?=
 =?us-ascii?q?dJcPAugbMOpEs4XwvVkDoB2jDgesHuPvzTpIi2fx06070OQhERvJ3A0kH9kTrH?=
 =?us-ascii?q?nbt8/6NKQPUeCwy6nI0yjIYvRT2Tf864jIcgouofCIXb5qa8Xe0lMgFwDYjlWV?=
 =?us-ascii?q?rozlISiY1uUWs2iD9epvT/mvh3Q9qwFsuzWiwNonhIrRho8N1FzI6SZ0zJwoKd?=
 =?us-ascii?q?GlS0N3e8CoHZVQui2AKod7QNsuTmJotSog17ELtoC3cDIXxJg6xRPTceKLf5aJ?=
 =?us-ascii?q?7x/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSs1FZKrzFFksXXtnwX2BzT7NWHRu?=
 =?us-ascii?q?F6/ke71jaDzwHT6udaLkAojafXNYItz70qmpYOrEjOHTX6lFv4gaKWbEko5+ql?=
 =?us-ascii?q?5/ziYrr8p5+cM4F0ihv5MqQrgsG/GPo3Mg0TX2SC5OuzyqPj8lP9QLlTlfI2lb?=
 =?us-ascii?q?TZsJbGKssFva61BAtV0ocg6xmhFTun38kYkGEDLFJEfhKHkofoN0vPIPD+Efew?=
 =?us-ascii?q?nVCsnC13yPDBO73sGZPNLn/FkLfue7Z99lRQyA0pzdBQ/55UEK0OIOrvWk/ts9?=
 =?us-ascii?q?zVFhs5Mw23w+n5Etl82Z4eVHmLAq+YNqPSrFCJ6vguI+mKeI8apjL9J+I56P7p?=
 =?us-ascii?q?iH9q0WIbZrSjiJsLdGijTLMhJ0SCfWGqhNAHHmEX+A0kQ6vvgVyGVDdVIHGqQ6?=
 =?us-ascii?q?M74Cp8EY+jEMLPS56ghO+82jymFMhTb2FCFlfeCHrtasCIVukBbGeIL9Z8nycY?=
 =?us-ascii?q?fb6mTYAnyFeprgCt0KdtLOff5ngFs4n+3sN+/ezZmEIO8mltAsGAlm2AUWxwtm?=
 =?us-ascii?q?UPQTAwweZ4u0Mu5E2E1P1dgv9YHN1Xr9pDWwQnMJnCh7h/CtPyUwPFON6DQVW7?=
 =?us-ascii?q?R9K4KTAqVsg42JkUfhAuSJ2Zkhnf0n/yUPcunLuRCcls/w=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ArAAB0EwlchxHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKDeoh4jReSeoR5gXEWGBSEOwODGCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?bDi+CNgUCAxgJglwDAwECIAQfCikDAwECBgEBJAIiBAICAwFDEBkFgxyCAgEDA?=
 =?us-ascii?q?aVGfDOKK4ELixOBVz+BRIgtgjeCVwKPfTOQLwcCgiAEhCOLF4pLhmosmF+BRoI?=
 =?us-ascii?q?NTTKBAQhWgU6CJxeOIG+BB4hwgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ArAAB0EwlchxHrdtBkHgEGBwaBUQkLAYEwgmKDeoh4jRe?=
 =?us-ascii?q?SeoR5gXEWGBSEOwODGCI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCAxgJg?=
 =?us-ascii?q?lwDAwECIAQfCikDAwECBgEBJAIiBAICAwFDEBkFgxyCAgEDAaVGfDOKK4ELixO?=
 =?us-ascii?q?BVz+BRIgtgjeCVwKPfTOQLwcCgiAEhCOLF4pLhmosmF+BRoINTTKBAQhWgU6CJ?=
 =?us-ascii?q?xeOIG+BB4hwgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,322,1539673200"; 
   d="scan'208";a="54084390"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 04:20:38 -0800
Received: from localhost ([::1]:40418 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUsdx-0007Gf-R8
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 07:20:37 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:42336)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gUsMM-0001Wl-C3
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 07:02:32 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gUsMH-0006Wg-MH
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 07:02:26 -0500
Received: from mail.ispras.ru ([83.149.199.45]:60512)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mikhail.abakumov@ispras.ru>) id 1gUsMG-0006FU-Pa
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 07:02:20 -0500
Received: from Misha-PC.lan02.inno (unknown [85.142.117.226])
	by mail.ispras.ru (Postfix) with ESMTPSA id 601DC540082;
	Thu,  6 Dec 2018 15:02:10 +0300 (MSK)
From: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
To: qemu-devel@nongnu.org
Date: Thu, 06 Dec 2018 15:02:05 +0300
Message-ID: <154409772559.5432.3961809771008633191.stgit@Misha-PC.lan02.inno>
In-Reply-To: <154409751316.5432.3325938832238028060.stgit@Misha-PC.lan02.inno>
References: <154409751316.5432.3325938832238028060.stgit@Misha-PC.lan02.inno>
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [fuzzy]
X-Received-From: 83.149.199.45
Subject: [Qemu-devel] [PATCH v3 37/39] windbg: implement kd_api_fill_memory
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: sw@weilnetz.de, lprosek@redhat.com, dovgaluk@ispras.ru,
	rkagan@virtuozzo.com, pbonzini@redhat.com, den@openvz.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Signed-off-by: Mikhail Abakumov <mikhail.abakumov@ispras.ru>
Signed-off-by: Pavel Dovgalyuk <dovgaluk@ispras.ru>
---
 include/exec/windbgstub-utils.h |    1 +
 windbgstub-utils.c              |   41 +++++++++++++++++++++++++++++++++++++++
 windbgstub.c                    |    4 ++++
 3 files changed, 46 insertions(+)

diff --git a/include/exec/windbgstub-utils.h b/include/exec/windbgstub-utils.h
index 4eb976260b..8192a7b849 100644
--- a/include/exec/windbgstub-utils.h
+++ b/include/exec/windbgstub-utils.h
@@ -85,6 +85,7 @@ void kd_api_read_msr(CPUState *cs, PacketData *pd);
 void kd_api_write_msr(CPUState *cs, PacketData *pd);
 void kd_api_search_memory(CPUState *cs, PacketData *pd);
 void kd_api_clear_all_internal_breakpoints(CPUState *cs, PacketData *pd);
+void kd_api_fill_memory(CPUState *cs, PacketData *pd);
 void kd_api_get_context_ex(CPUState *cs, PacketData *pd);
 void kd_api_set_context_ex(CPUState *cs, PacketData *pd);
 void kd_api_unsupported(CPUState *cs, PacketData *pd);
diff --git a/windbgstub-utils.c b/windbgstub-utils.c
index 3664a0d681..9b4f6f00b8 100644
--- a/windbgstub-utils.c
+++ b/windbgstub-utils.c
@@ -438,6 +438,47 @@ void kd_api_clear_all_internal_breakpoints(CPUState *cs, PacketData *pd)
 {
 }
 
+void kd_api_fill_memory(CPUState *cs, PacketData *pd)
+{
+    DBGKD_FILL_MEMORY *m64c = &pd->m64.u.FillMemory;
+    uint32_t len = ldl_p(&m64c->Length);
+    target_ulong addr = ldq_p(&m64c->Address);
+    uint16_t pattern = MIN(ldl_p(&m64c->PatternLength), pd->extra_size);
+    uint16_t flags = ldl_p(&m64c->Flags);
+    int err, offset = 0;
+
+    uint8_t *mem = g_new(uint8_t, pattern);
+    memcpy(mem, pd->extra, pattern);
+
+    pd->extra_size = 0;
+
+    switch (flags) {
+    case DBGKD_FILL_MEMORY_VIRTUAL:
+        while (offset < len) {
+            err = cpu_memory_rw_debug(cs, addr + offset, mem,
+                                      MIN(pattern, len - offset), 1);
+            offset += pattern;
+            if (err) {
+                DPRINTF("fill_memory: No physical page mapped: " FMT_ADDR "\n",
+                        addr);
+            }
+        }
+        break;
+
+    case DBGKD_FILL_MEMORY_PHYSICAL:
+        while (offset < len) {
+            cpu_physical_memory_rw(addr, mem, MIN(pattern, len - offset), 1);
+            offset += pattern;
+        }
+        break;
+
+    default:
+        break;
+    }
+
+    g_free(mem);
+}
+
 void kd_api_unsupported(CPUState *cs, PacketData *pd)
 {
     WINDBG_ERROR("Caught unimplemented api %s", kd_api_name(pd->m64.ApiNumber));
diff --git a/windbgstub.c b/windbgstub.c
index a50de68db5..daf6d37aa1 100644
--- a/windbgstub.c
+++ b/windbgstub.c
@@ -232,6 +232,10 @@ static void windbg_process_manipulate_packet(WindbgState *state)
         kd_api_clear_all_internal_breakpoints(cs, data);
         return;
 
+    case DbgKdFillMemoryApi:
+        kd_api_fill_memory(cs, data);
+        break;
+
     case DbgKdGetContextExApi:
         kd_api_get_context_ex(cs, data);
         break;


