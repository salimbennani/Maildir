Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:58:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 14D645804C1
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 11:47:57 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 11:47:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AFJnBWxGSMeh28sCRao/9N51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p8y4bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/ZhM9+gqVZrxKvqBNxzJPaYJmXOfR8ca7RYN0XSXZfUcZKTCFNHoCx?=
 =?us-ascii?q?YpETA+cbIepUs4/wrEYOoxukAgmsAfvixDFSiX/w3K01zeAhGhzE0gM+GdIOqn?=
 =?us-ascii?q?XUrMzoNKgMTOu40bPHzS/YYPNR2Dby8pXDfxc8rv6WW7JwcNTeyU0vFwzegVic?=
 =?us-ascii?q?tILoMiia1uQIqWeb7u5gWfizhG4grgF8uz6izdovhInRno8Z1EzI+CZjzIooON?=
 =?us-ascii?q?G1S1R3bcCqHZZQrS2WKol7Tts8T2xrpCo3xbgLtJG1cSQXzZknyRzSZ+Cbf4WN?=
 =?us-ascii?q?4h/sT+icLip9iX1/eb+wmhi//E2vx+D/V8S7zlNHoylYntTNt30A0hLe6sabRf?=
 =?us-ascii?q?Rn+EqqxCyB2BrJ6u5eJEA5jarbJIAlwr43jpcTtUXDHjTqmEXtlqOWeUMk+vWy?=
 =?us-ascii?q?5+TgeLXmqYeQN45yig7gLqQjgtKzDfg7PwQUQmSX5Oex2Kf98UD3QLhGlOA6n6?=
 =?us-ascii?q?vBvJDfP8sbp6q5AwFP0oYk7hayFy6m38odnXkaNV5KZQyIj5b3NFHKOfz3FvC/?=
 =?us-ascii?q?g0mqkDh32f/GJbrtApHMLnjAjrjtZ7l861NExQo3zNBf4Y9UC74bLPLyXE/xqM?=
 =?us-ascii?q?LXDhsjPwOoxObnDc5w1oUZWWKJDa+ZNr7SvUWP5uI1LOmAfJUVtyrlK/g5+/7u?=
 =?us-ascii?q?imc0mVscfamqw5Qbcn+5Hul9LkWdYHrshMoBEGgQsgo/SuzqlEONUTpJa3muWK?=
 =?us-ascii?q?I842JzNYS9EI2WRpyxmKfTm2C/H4ZKfSZADVaDF2qucJ+LHPIFaSaXK8kmlSQY?=
 =?us-ascii?q?VL+nUMg42BSz8QP31bdjfdfS4TAS4Jfq1dxp4L/KmBQvsDB5EcmZlnuAVnx5hX?=
 =?us-ascii?q?8gQTgw06Zi50tnxQCYzKJ6jvdEQMFV/O5DSQwgNJTRnNB9Xsn/Xx+EctqXRVKO?=
 =?us-ascii?q?RNKgDjcsCNUrzIwgeUF4TvmriBHO22KKDrkPlqWWCdQe+7jW2Gr4b5JxwnDH2a?=
 =?us-ascii?q?0hhQV/GeNAMGSnguh08A2FVN2BqFmQi6v/LfdU5yXK7mrWlWc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BUAAAcKghchxHrdtBdBx0BAQUBBwUBg?=
 =?us-ascii?q?VMGAQsBgTAlBYI4jHGLL4MJiAOOTYF2DwEBGBSHUyI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgbDiMMgjYFAgMYCYJcAwMBAiQLAQ0BBQoMHQECAQIBAgYBAQUQMwgDA?=
 =?us-ascii?q?R0CEQEFARwZBYJRS4FpAQMVAQSaZjyMCRYFAReCdwWCRIF3ChknDV1QZwIGEod?=
 =?us-ascii?q?dgxOBHIIWgRGCXYMMgheFbgKBKgEBAZNViyYtAQYCAYFVBYRph1GDIwsYiWCHT?=
 =?us-ascii?q?yyOU4lYBgIJBw8hgSwCggRNI4EBbYFOghsMFxKDOIprWgGBAwM7h0oHIi2BdwE?=
 =?us-ascii?q?B?=
X-IPAS-Result: =?us-ascii?q?A0BUAAAcKghchxHrdtBdBx0BAQUBBwUBgVMGAQsBgTAlBYI?=
 =?us-ascii?q?4jHGLL4MJiAOOTYF2DwEBGBSHUyI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMg?=
 =?us-ascii?q?jYFAgMYCYJcAwMBAiQLAQ0BBQoMHQECAQIBAgYBAQUQMwgDAR0CEQEFARwZBYJ?=
 =?us-ascii?q?RS4FpAQMVAQSaZjyMCRYFAReCdwWCRIF3ChknDV1QZwIGEoddgxOBHIIWgRGCX?=
 =?us-ascii?q?YMMgheFbgKBKgEBAZNViyYtAQYCAYFVBYRph1GDIwsYiWCHTyyOU4lYBgIJBw8?=
 =?us-ascii?q?hgSwCggRNI4EBbYFOghsMFxKDOIprWgGBAwM7h0oHIi2BdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="scan'208";a="54697776"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 11:47:55 -0800
Received: from localhost ([::1]:36447 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUd9D-00029T-LI
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 14:47:51 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60664)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <danielhb413@gmail.com>) id 1gUd8x-00027f-0S
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 14:47:36 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <danielhb413@gmail.com>) id 1gUd8u-0008K8-SU
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 14:47:34 -0500
Received: from mail-qk1-x744.google.com ([2607:f8b0:4864:20::744]:46074)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <danielhb413@gmail.com>)
	id 1gUd8s-0008F3-TV
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 14:47:32 -0500
Received: by mail-qk1-x744.google.com with SMTP id y78so12604313qka.12
	for <qemu-devel@nongnu.org>; Wed, 05 Dec 2018 11:47:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=Lidxpp7UAT4DFWX2WXJIFP5VdK4vrM1Kd1gJ0PRITII=;
	b=vIBw2S55sEoNLt42x1dgyugAlVqGdq6vBIEl8PHkChiRbb92BByxDZiTOFJ0tds3iA
	tMs8ZEx8fx7HN1zO8gjqhlWMHHou/H3mjxvVi4B5W5+pQXAiJCDEN37yQElP1jgxMj6K
	/dkVQNKkV/Uw3uMwuqkL2kzFhzq7xYZAmt80QOCmIOm8jkLsT93eIA5uUi304HWDepsf
	I1LkSRI+5KtT+HJYXdJVKQM6s/ugCaKd71fnYvHzHlEO7usvgW3833J1TrUj4y5eb3Uc
	s6Sfy96zy8/Py4l7oxzqQqAiII1nUEOhRaZvdWnbgrHBwe4RnraAceAZiUKO/4JLeNqj
	6UAQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=Lidxpp7UAT4DFWX2WXJIFP5VdK4vrM1Kd1gJ0PRITII=;
	b=kTHww7Mt7raA6fCzLpkzdOu9QzB2eCxollyU5lWKcsKXmiHrxcPszK6CVBUeawWgJg
	GkjuAR0PWFcWPmVIgsI5zn/9vELZzENqMpx199uE5yqJlkJg34h0ll3QK+k+kAzL/5/g
	M0WiF3b68Gtaizacv87wxsPXcaka/XtFSz+DSjKNqVVvipAnD3R2uZh2IhwphwAhJuxf
	t1y0FHReV48x1QbKDhy2Fds1A5ZwAq0gPLhtWi+mDwFEkJSzqirdclJGEOTsND/ca6gi
	EA67V3nybSQZS/ePk71MPjivoJe8AWvcsXfFWkDB2jk9oTZGd66nWidrUd55gAMeQzWl
	LJJA==
X-Gm-Message-State: AA+aEWbnj21q8maaDWWwnGquZ754cORB7FW/jkTachp1p5yFVGegv7+A
	1orNRN1A2NhTQ7JE4nx21L/xdLB6wFw=
X-Google-Smtp-Source: AFSGD/UFibJlptfkH3sOJ62KddsyRWEHr9xz4stvnTD4Tancrz3hrRMmxc2udj1piZezBOH+XynkVg==
X-Received: by 2002:a37:cf9b:: with SMTP id v27mr23146108qkl.160.1544039244400;
	Wed, 05 Dec 2018 11:47:24 -0800 (PST)
Received: from localhost.localdomain ([2804:431:f700:5b3d:a6d3:486e:8166:3fca])
	by smtp.gmail.com with ESMTPSA id
	q72sm12446248qki.24.2018.12.05.11.47.21
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Wed, 05 Dec 2018 11:47:23 -0800 (PST)
From: Daniel Henrique Barboza <danielhb413@gmail.com>
To: qemu-devel@nongnu.org
Date: Wed,  5 Dec 2018 17:47:01 -0200
Message-Id: <20181205194701.17836-4-danielhb413@gmail.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181205194701.17836-1-danielhb413@gmail.com>
References: <20181205194701.17836-1-danielhb413@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::744
Subject: [Qemu-devel] [PATCH v11 3/3] qmp hmp: Make system_wakeup check
 wake-up support and run state
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: ehabkost@redhat.com, mst@redhat.com,
	Daniel Henrique Barboza <danielhb413@gmail.com>,
	armbru@redhat.com, mdroth@linux.vnet.ibm.com, imammedo@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The qmp/hmp command 'system_wakeup' is simply a direct call to
'qemu_system_wakeup_request' from vl.c. This function verifies if
runstate is SUSPENDED and if the wake up reason is valid before
proceeding. However, no error or warning is thrown if any of those
pre-requirements isn't met. There is no way for the caller to
differentiate between a successful wakeup or an error state caused
when trying to wake up a guest that wasn't suspended.

This means that system_wakeup is silently failing, which can be
considered a bug. Adding error handling isn't an API break in this
case - applications that didn't check the result will remain broken,
the ones that check it will have a chance to deal with it.

Adding to that, the commit before previous created a new QMP API called
query-current-machine, with a new flag called wakeup-suspend-support,
that indicates if the guest has the capability of waking up from suspended
state. Although such guest will never reach SUSPENDED state and erroring
it out in this scenario would suffice, it is more informative for the user
to differentiate between a failure because the guest isn't suspended versus
a failure because the guest does not have support for wake up at all.

All this considered, this patch changes qmp_system_wakeup to check if
the guest is capable of waking up from suspend, and if it is suspended.
After this patch, this is the output of system_wakeup in a guest that
does not have wake-up from suspend support (ppc64):

(qemu) system_wakeup
wake-up from suspend is not supported by this guest
(qemu)

And this is the output of system_wakeup in a x86 guest that has the
support but isn't suspended:

(qemu) system_wakeup
Unable to wake up: guest is not in suspended state
(qemu)

Reported-by: Balamuruhan S <bala24@linux.vnet.ibm.com>
Signed-off-by: Daniel Henrique Barboza <danielhb413@gmail.com>
---
 hmp.c                   | 5 ++++-
 hw/acpi/core.c          | 3 ++-
 hw/char/serial.c        | 2 +-
 hw/input/ps2.c          | 6 +++---
 hw/timer/mc146818rtc.c  | 2 +-
 include/sysemu/sysemu.h | 3 ++-
 migration/migration.c   | 4 ++--
 qapi/misc.json          | 8 +++++++-
 qmp.c                   | 8 +++++++-
 vl.c                    | 6 ++++--
 10 files changed, 33 insertions(+), 14 deletions(-)

diff --git a/hmp.c b/hmp.c
index 7828f93a39..0f5d943413 100644
--- a/hmp.c
+++ b/hmp.c
@@ -1220,7 +1220,10 @@ void hmp_cont(Monitor *mon, const QDict *qdict)
 
 void hmp_system_wakeup(Monitor *mon, const QDict *qdict)
 {
-    qmp_system_wakeup(NULL);
+    Error *err = NULL;
+
+    qmp_system_wakeup(&err);
+    hmp_handle_error(mon, &err);
 }
 
 void hmp_nmi(Monitor *mon, const QDict *qdict)
diff --git a/hw/acpi/core.c b/hw/acpi/core.c
index 52e18d7810..d6f0709691 100644
--- a/hw/acpi/core.c
+++ b/hw/acpi/core.c
@@ -514,7 +514,8 @@ static uint32_t acpi_pm_tmr_get(ACPIREGS *ar)
 static void acpi_pm_tmr_timer(void *opaque)
 {
     ACPIREGS *ar = opaque;
-    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_PMTIMER);
+
+    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_PMTIMER, NULL);
     ar->tmr.update_sci(ar);
 }
 
diff --git a/hw/char/serial.c b/hw/char/serial.c
index 02463e3388..7c42a2abfc 100644
--- a/hw/char/serial.c
+++ b/hw/char/serial.c
@@ -611,7 +611,7 @@ static void serial_receive1(void *opaque, const uint8_t *buf, int size)
     SerialState *s = opaque;
 
     if (s->wakeup) {
-        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
     }
     if(s->fcr & UART_FCR_FE) {
         int i;
diff --git a/hw/input/ps2.c b/hw/input/ps2.c
index eb33ee9b6f..d3161f1e7c 100644
--- a/hw/input/ps2.c
+++ b/hw/input/ps2.c
@@ -255,7 +255,7 @@ static void ps2_put_keycode(void *opaque, int keycode)
     PS2KbdState *s = opaque;
 
     trace_ps2_put_keycode(opaque, keycode);
-    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
 
     if (s->translate) {
         if (keycode == 0xf0) {
@@ -285,7 +285,7 @@ static void ps2_keyboard_event(DeviceState *dev, QemuConsole *src,
         return;
     }
 
-    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
     assert(evt->type == INPUT_EVENT_KIND_KEY);
     qcode = qemu_input_key_value_to_qcode(key->key);
 
@@ -748,7 +748,7 @@ static void ps2_mouse_sync(DeviceState *dev)
     }
 
     if (s->mouse_buttons) {
-        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
     }
     if (!(s->mouse_status & MOUSE_STATUS_REMOTE)) {
         /* if not remote, send event. Multiple events are sent if
diff --git a/hw/timer/mc146818rtc.c b/hw/timer/mc146818rtc.c
index e4e4de8b8a..69483152c3 100644
--- a/hw/timer/mc146818rtc.c
+++ b/hw/timer/mc146818rtc.c
@@ -455,7 +455,7 @@ static void rtc_update_timer(void *opaque)
     if (qemu_clock_get_ns(rtc_clock) >= s->next_alarm_time) {
         irqs |= REG_C_AF;
         if (s->cmos_data[RTC_REG_B] & REG_B_AIE) {
-            qemu_system_wakeup_request(QEMU_WAKEUP_REASON_RTC);
+            qemu_system_wakeup_request(QEMU_WAKEUP_REASON_RTC, NULL);
         }
     }
 
diff --git a/include/sysemu/sysemu.h b/include/sysemu/sysemu.h
index 0446adacc6..162c4b16d9 100644
--- a/include/sysemu/sysemu.h
+++ b/include/sysemu/sysemu.h
@@ -74,7 +74,8 @@ void qemu_exit_preconfig_request(void);
 void qemu_system_reset_request(ShutdownCause reason);
 void qemu_system_suspend_request(void);
 void qemu_register_suspend_notifier(Notifier *notifier);
-void qemu_system_wakeup_request(WakeupReason reason);
+bool qemu_wakeup_suspend_enabled(void);
+void qemu_system_wakeup_request(WakeupReason reason, Error **errp);
 void qemu_system_wakeup_enable(WakeupReason reason, bool enabled);
 void qemu_register_wakeup_notifier(Notifier *notifier);
 void qemu_register_wakeup_support(void);
diff --git a/migration/migration.c b/migration/migration.c
index 49ffb9997a..ffc4d9e556 100644
--- a/migration/migration.c
+++ b/migration/migration.c
@@ -2408,7 +2408,7 @@ static int postcopy_start(MigrationState *ms)
     qemu_mutex_lock_iothread();
     trace_postcopy_start_set_run();
 
-    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
     global_state_store();
     ret = vm_stop_force_state(RUN_STATE_FINISH_MIGRATE);
     if (ret < 0) {
@@ -2612,7 +2612,7 @@ static void migration_completion(MigrationState *s)
     if (s->state == MIGRATION_STATUS_ACTIVE) {
         qemu_mutex_lock_iothread();
         s->downtime_start = qemu_clock_get_ms(QEMU_CLOCK_REALTIME);
-        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+        qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, NULL);
         s->vm_was_running = runstate_is_running();
         ret = global_state_store();
 
diff --git a/qapi/misc.json b/qapi/misc.json
index deb982ed38..03df2c37cf 100644
--- a/qapi/misc.json
+++ b/qapi/misc.json
@@ -1235,12 +1235,18 @@
 ##
 # @system_wakeup:
 #
-# Wakeup guest from suspend.  Does nothing in case the guest isn't suspended.
+# Wake up guest from suspend. If the guest has wake-up from suspend
+# support enabled (wakeup-suspend-support flag from
+# query-current-machine), wake-up guest from suspend if the guest is
+# in SUSPENDED state. Return an error otherwise.
 #
 # Since:  1.1
 #
 # Returns:  nothing.
 #
+# Note: prior to 4.0, this command does nothing in case the guest
+# isn't suspended.
+#
 # Example:
 #
 # -> { "execute": "system_wakeup" }
diff --git a/qmp.c b/qmp.c
index e7c0a2fd60..f557d1617d 100644
--- a/qmp.c
+++ b/qmp.c
@@ -183,7 +183,13 @@ void qmp_cont(Error **errp)
 
 void qmp_system_wakeup(Error **errp)
 {
-    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER);
+    if (!qemu_wakeup_suspend_enabled()) {
+        error_setg(errp,
+                   "wake-up from suspend is not supported by this guest");
+        return;
+    }
+
+    qemu_system_wakeup_request(QEMU_WAKEUP_REASON_OTHER, errp);
 }
 
 ObjectPropertyInfoList *qmp_qom_list(const char *path, Error **errp)
diff --git a/vl.c b/vl.c
index 8f5b3ef4e9..5b51bbc47c 100644
--- a/vl.c
+++ b/vl.c
@@ -1752,11 +1752,13 @@ void qemu_register_suspend_notifier(Notifier *notifier)
     notifier_list_add(&suspend_notifiers, notifier);
 }
 
-void qemu_system_wakeup_request(WakeupReason reason)
+void qemu_system_wakeup_request(WakeupReason reason, Error **errp)
 {
     trace_system_wakeup_request(reason);
 
     if (!runstate_check(RUN_STATE_SUSPENDED)) {
+        error_setg(errp,
+                   "Unable to wake up: guest is not in suspended state");
         return;
     }
     if (!(wakeup_reason_mask & (1 << reason))) {
@@ -1786,7 +1788,7 @@ void qemu_register_wakeup_support(void)
     wakeup_suspend_enabled = true;
 }
 
-static bool qemu_wakeup_suspend_enabled(void)
+bool qemu_wakeup_suspend_enabled(void)
 {
     return wakeup_suspend_enabled;
 }
-- 
2.19.2


