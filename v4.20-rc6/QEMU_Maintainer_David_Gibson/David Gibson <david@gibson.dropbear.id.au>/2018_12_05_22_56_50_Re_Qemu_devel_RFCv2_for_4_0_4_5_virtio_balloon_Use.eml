Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 09:00:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 690C25804C1
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 14:57:21 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 14:57:20 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AQ99fgB2gsFmrvxfbsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?sesWLP/xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJPUMhRSSJPAY28?=
 =?us-ascii?q?YIQTAOUcP+lXoZTzp0MMoBW8CgSgGe3ixiNWiX/txqA63PgtHBvc0QA8Bd8Crn?=
 =?us-ascii?q?LZp8j1OqcIVuC1ybHFwzvZYPNI2Dfy9ZXDfBEgof6XRrJwdszRwlQoGgzYlFqQ?=
 =?us-ascii?q?t43lMC6O2+QCsmiU9PFgVeWpi2I9tg5xuD+vxt83hYbXnI0V0ErI9SRkz4ovP9?=
 =?us-ascii?q?K4VVd2bNi5G5VesCGaMpF5QsIkQ2xwvyY7y7kGtoSgcygR0pgnwATfa/Off4eV?=
 =?us-ascii?q?+BLjU/6RLixmi31/YrKznRey/lWmx+bhVce0yE5HojRZntTPrHwBygHf58udRv?=
 =?us-ascii?q?dj8Eqs2SyD2x3R5+1cP0w5mrbXJ4Mkz7M+kpcfrVjPEyrolEjzkaObc0Ap9vau?=
 =?us-ascii?q?5u/6eLvpvIWcOJVxigzmMqQhhMi/AeMgPwgKXmib4vi81Kb58U32RrVKk+c6kq?=
 =?us-ascii?q?7DsJDVPcgbp6i5DBFJ0os79RqzEzSr3M4FkXUaL19JYgyLgobpNl3UPfz1D++z?=
 =?us-ascii?q?g1G2nzdqw/DGMKfhApLILnXbibfuY7N961NFxAUu099f+YxbCrUYLP3oXU/xqd?=
 =?us-ascii?q?rYAQMnPAyvxOrnDNR91oAAVm6VDa6ZLbvfsVuJ5uIpPumNa5UZuDf7K/g5+fHu?=
 =?us-ascii?q?iWU1lkMafamsxpYXbne4HvJpI0WffHrgmNABEX0FvgYmVuzllEWCUSJPZ3a1R6?=
 =?us-ascii?q?884jA7CIG4AovZSYGtnaeM3CO6Hp1Qe2BHBUqAEXbud4WYRfgMbDieLdNmkjwB?=
 =?us-ascii?q?BvCcTZQ830SuqBPi0Oggae7V4TED85Tk0tdz+qvUjx518DV1C8GU1SaKV311mW?=
 =?us-ascii?q?UTACY72b06rUFjx1PQ7K5jnvYNENVS4+9OAB43MIOZw+FkBtS3QA/YY9qSVH6g?=
 =?us-ascii?q?RdOpByx3Scg+lMQTaURwEMn3kxbYwiCxCKUUnbHYOJth3qvC3nS5B8d5x3vA3r?=
 =?us-ascii?q?MoiVVuFsdGK2yqrrRy+wjaG8jClEDPxIiwcqFJ8CfT9WvL4muEp0ZeGFp8WLvE?=
 =?us-ascii?q?UVgQZ0HNqtK/6lnFV7WjAK5hMwcHwNPUefgCUcHgkVgTHKSrA9/ZeW/k3j7oXR?=
 =?us-ascii?q?s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ACAABnVghchxHrdtBkFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgTCBOYEXEowSX4sugg2SU4R5gXMCDQUYBw2HUyI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCXAECAwECPQEBBAopA?=
 =?us-ascii?q?QIDAQIGAQEKGAkaAwgDAQsFGDETBQSDGAGCAQEEpSaCH4J2AQEFhyAHCIJtiBW?=
 =?us-ascii?q?BHBeBf4QjhEqGEokRl0cJgiSEX4o0CxhffE2PByyJYIZGiCyBRoINMxoIFxmDJ?=
 =?us-ascii?q?wmCEgwXEoFyhlqFUy0xgQQDiAVWgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ACAABnVghchxHrdtBkFgQBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgTCBOYEXEowSX4sugg2SU4R5gXMCDQUYBw2HUyI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCXAECAwECPQEBBAopAQIDAQIGAQEKGAk?=
 =?us-ascii?q?aAwgDAQsFGDETBQSDGAGCAQEEpSaCH4J2AQEFhyAHCIJtiBWBHBeBf4QjhEqGE?=
 =?us-ascii?q?okRl0cJgiSEX4o0CxhffE2PByyJYIZGiCyBRoINMxoIFxmDJwmCEgwXEoFyhlq?=
 =?us-ascii?q?FUy0xgQQDiAVWgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,319,1539673200"; 
   d="asc'?scan'208";a="55716235"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 14:57:19 -0800
Received: from localhost ([::1]:37645 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUg6Z-0002Ha-03
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 17:57:19 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:57185)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gUg6I-0002Gr-Lm
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 17:57:03 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gUg6H-0005Ja-4E
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 17:57:02 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:41215)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gUg6F-0005Eb-R5; Wed, 05 Dec 2018 17:57:00 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 439Dd25cqmz9s3q; Thu,  6 Dec 2018 09:56:54 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1544050614;
	bh=aEFBqfK02myfrZuvoYwL+WO3R+bHQURM9dLW+1D5jHw=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=UP/Y3TkiJvcrg+24PsksasIDRKLcBPyowQgriYhp9rhRhGtsaLbCAUA9izAlzJgkc
	kbHHEzom8tgrEWrH5elOF74DQCE+0PhsHBWwr41MQkigHPpSHFCvmqg2jAGe7qhQNK
	xDKd8Nz1fHV74QLFHrIcBtwJ/MzCXpzJq+UlxiUk=
Date: Thu, 6 Dec 2018 09:56:50 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: David Hildenbrand <david@redhat.com>
Message-ID: <20181205225649.GK768@umbus.fritz.box>
References: <20181205050641.864-1-david@gibson.dropbear.id.au>
	<20181205050641.864-5-david@gibson.dropbear.id.au>
	<587369f0-d3aa-3494-33a9-f634dae65213@redhat.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="qDymnuGqqhW10CwH"
Content-Disposition: inline
In-Reply-To: <587369f0-d3aa-3494-33a9-f634dae65213@redhat.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: Re: [Qemu-devel] [RFCv2 for-4.0 4/5] virtio-balloon: Use
 ram_block_discard_range() instead of raw madvise()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, ehabkost@redhat.com, mst@redhat.com,
	qemu-devel@nongnu.org, dhildenb@redhat.com, pbonzini@redhat.com,
	imammedo@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--qDymnuGqqhW10CwH
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Wed, Dec 05, 2018 at 08:59:06AM +0100, David Hildenbrand wrote:
> On 05.12.18 06:06, David Gibson wrote:
> > Currently, virtio-balloon uses madvise() with MADV_DONTNEED to actually
> > discard RAM pages inserted into the balloon.  This is basically a Linux
> > only interface (MADV_DONTNEED exists on some other platforms, but doesn=
't
> > always have the same semantics).  It also doesn't work on hugepages and=
 has
> > some other limitations.
> >=20
> > It turns out that postcopy also needs to discard chunks of memory, and =
uses
> > a better interface for it: ram_block_discard_range().  It doesn't cover
> > every case, but it covers more than going direct to madvise() and this
> > gives us a single place to update for more possibilities in future.
> >=20
> > There are some subtleties here to maintain the current balloon behaviou=
r:
> >=20
> > * For now, we just ignore requests to balloon in a hugepage backed regi=
on.
> >   That matches current behaviour, because MADV_DONTNEED on a hugepage w=
ould
> >   simply fail, and we ignore the error.
> >=20
> > * If host page size is > BALLOON_PAGE_SIZE we can frequently call this =
on
> >   non-host-page-aligned addresses.  These would also fail in madvise(),
> >   which we then ignored.  ram_block_discard_range() error_report()s cal=
ls
> >   on unaligned addresses, so we explicitly check that case to avoid
> >   spamming the logs.
> >=20
> > * We now call ram_block_discard_range() with the *host* page size, wher=
eas
> >   we previously called madvise() with BALLOON_PAGE_SIZE.  Surprisingly,
> >   this also matches existing behaviour.  Although the kernel fails madv=
ise
> >   on unaligned addresses, it will round unaligned sizes *up* to the host
> >   page size.  Yes, this means that if BALLOON_PAGE_SIZE < guest page si=
ze
> >   we can incorrectly discard more memory than the guest asked us to.  I=
'm
> >   planning to address that soon.
> >=20
> > Errors other than the ones discussed above, will now be reported by
> > ram_block_discard_range(), rather than silently ignored, which means we
> > have a much better chance of seeing when something is going wrong.
> >=20
> > Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
> > Reviewed-by: Michael S. Tsirkin <mst@redhat.com>
> > ---
> >  hw/virtio/virtio-balloon.c | 23 ++++++++++++++++++++++-
> >  1 file changed, 22 insertions(+), 1 deletion(-)
> >=20
> > diff --git a/hw/virtio/virtio-balloon.c b/hw/virtio/virtio-balloon.c
> > index c3a19aa27d..4435905c87 100644
> > --- a/hw/virtio/virtio-balloon.c
> > +++ b/hw/virtio/virtio-balloon.c
> > @@ -37,8 +37,29 @@ static void balloon_inflate_page(VirtIOBalloon *ball=
oon,
> >                                   MemoryRegion *mr, hwaddr offset)
> >  {
> >      void *addr =3D memory_region_get_ram_ptr(mr) + offset;
> > +    RAMBlock *rb;
> > +    size_t rb_page_size;
> > +    ram_addr_t ram_offset;
> > =20
> > -    qemu_madvise(addr, BALLOON_PAGE_SIZE, QEMU_MADV_DONTNEED);
> > +    /* XXX is there a better way to get to the RAMBlock than via a
> > +     * host address? */
>=20
> We have qemu_get_ram_block(). That one should work as long as we know
> that it is a valid guest ram address. (would have to make it !static)
>=20
> Then we would only have to pass to this function the original ram_addr_t
> handed over by the guest (which looks somewhat cleaner to me than going
> via memory regions)

So, I didn't use that because it's a hwaddr, not a ram_addr_t that the
guest gives us.  I think they have the same value for guest RAM
addresses, but I wasn't sure if it was safe to rely on that.

>=20
> > +    rb =3D qemu_ram_block_from_host(addr, false, &ram_offset);
> > +    rb_page_size =3D qemu_ram_pagesize(rb);
> > +
> > +    /* Silently ignore hugepage RAM blocks */
> > +    if (rb_page_size !=3D getpagesize()) {
> > +        return;
> > +    }
> > +
> > +    /* Silently ignore unaligned requests */
> > +    if (ram_offset & (rb_page_size - 1)) {
> > +        return;
> > +    }
> > +
> > +    ram_block_discard_range(rb, ram_offset, rb_page_size);
> > +    /* We ignore errors from ram_block_discard_range(), because it has
> > +     * already reported them, and failing to discard a balloon page is
> > +     * not fatal */
> >  }
> > =20
> >  static const char *balloon_stat_names[] =3D {
> >=20
>=20
>=20

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--qDymnuGqqhW10CwH
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwIV7EACgkQbDjKyiDZ
s5Lnaw/+OO8K/wr76hTOtAvfFTGC0vfOM12wl8knrLkTsSTtRvyD95VRL5OMgSSi
dCG9zjOH41BauKEC6hGPavjRtNOmZmVvAcnK2hb8lVEF62Cri6e3vgbFZHHy2gzW
Y9DDzU1my3sDa4os6+wTclAk+WlDDpU8DxGU7eVn/ok9BPVF8z4B1gTqJ5S0je9L
5JkAVCyBvS4zOF47hVtu1uaI3ofxZo0ecPKDAZndNxNN4L/Wh9DvCeqNxlezBY5j
djPD2qBVAauw119Lt83BqZf85vjk3wupgAD9AjybOl+9nQWNB4bOqgj3en5/NFxp
K6ltfZfIOQ2SCgVDV2NeKXerKO6Zu8qRh6PMJp8OEt4ajleQD3AugPFSpJH1ycz+
r8T9BWpMRwrJrxn5UYZ50TFzNhEaPpVX3yYEbrK5ueZNXOl2g8TyrDXp9zZTbv4j
DLrePkuaMeDoKXOmgEdoKhEB4qgo6wcy7Ii00bti/nGuuJvkJks5TCBl/Mt3Fj+P
3MwauvbMFCO7H4fVKs6BeYvYdsJ2SOidRECaCrbri9kJxeb2XaqzRRoaTy7iyihg
7LlgJAXlhfq26dIhiLgPOFx3mdOfIBvBDCXVeWbStw1WjmeQsTxY7qbzHZeMzUaW
OV1kkRoGMDgewrhFoulGARA1919t+slZ0beDg8kTqg2MMHFOg/I=
=uOzB
-----END PGP SIGNATURE-----

--qDymnuGqqhW10CwH--

