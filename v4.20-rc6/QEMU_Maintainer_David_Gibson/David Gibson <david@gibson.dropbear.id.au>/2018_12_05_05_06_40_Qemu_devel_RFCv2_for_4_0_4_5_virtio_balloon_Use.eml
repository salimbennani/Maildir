Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 14:29:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E015D58014B
	for <like.xu@linux.intel.com>; Tue,  4 Dec 2018 21:09:55 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 21:09:55 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AfBPT8BP3ZHx2I6z/lL4l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0I/T4rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0yRD+s7bpkSAXwhS?=
 =?us-ascii?q?kHKTA3/mLZhMtyg6JVrx2vqAFxw5bWbY+XO/dyY63Qcc8ESmpaRctdSzVBD5mg?=
 =?us-ascii?q?Y4YVE+YNIeBVpJT9qVsUqhu+ABGhCu31xT9Wh3/5wLAx3eUgEQ7dxwwgGNQOu2?=
 =?us-ascii?q?nTodroLqgST+G1w7TTwDXMbvNZwiz96I/Ochw7vP6MR7VwcdLKxkYxDQzFlE+c?=
 =?us-ascii?q?qY34MD+PzOsNrnGW4ux9Xuysk24qsx99riSsy8s2l4XFm4EYxkra+Sh3wIs5P8?=
 =?us-ascii?q?C0RUxjbdK6H5ZcqzyWOo54T84mX21kpCM3xqMDtJKmeSUHzYoryhjCYPKdaYeI?=
 =?us-ascii?q?+AjsVOOJLDd4mn1lfLW/ig628Uih0e38StK03ExFripDj9nArHcN1wbc6sSfS/?=
 =?us-ascii?q?t9+Fmu2SqX2gzN9u1JIlo4mbfGJ5Mi2LI8iJQevETZEiPrmkj6lKqWeV8l+uis?=
 =?us-ascii?q?5eTneLLmppqEOo9tlA7+N7kultWiDusmLAgBQWyb9f2n273k4E35RqlFgeMtkq?=
 =?us-ascii?q?XetJDaJMcbqbCjDw5az4Yu8xK/Dzag0NQFkngLNlNFeBSbj4f3P1HCOuz3DfC6?=
 =?us-ascii?q?g1m3ljdrwPbGPrLnApXQNHTDl63hfbll505G1AUz1cxf545TCrwZJPLzW0zxu8?=
 =?us-ascii?q?LCAh42Lgy52OLnCNR71oMDVmODGK6ZMKXOsVCW4uIjOfWDZIgQuGW1Fv4++vS7?=
 =?us-ascii?q?jWMlgURPOu6t3IALcza+GfJpJVjfZmDjxdIIEGMPtwx5S/T2iVqESnlKanOvGq?=
 =?us-ascii?q?4x+Dw/W7+gFprJE4Wkgbid23WiE5hLI2xLFF2IVG3lbpiJQOskbiWULcl81Dse?=
 =?us-ascii?q?Wu+6VoUj2Bqy4RL80KdtNeHO+ycV5q7kgdR15unfmBc43SZ5A8SUzyeGSGQw1m?=
 =?us-ascii?q?INTjoz0ax4iVZwxleKze5zhPkcXdFT7vlKVRwmHYTRw+xzF5b5XQeSUM2OTQOK?=
 =?us-ascii?q?S8unDXkeT9gqxNlGN0p0BdSuph/C1TGtBfkZjbuTDpE96OTd0z74OpAumD79yK?=
 =?us-ascii?q?A9ggx+EYN0Pmq8i/sn+g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AYAABdXQdchxHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgTCCYowSX6APhHmBcxQYFIdMIjQJDQEDAQEBAQEBAgETAQEBCgs?=
 =?us-ascii?q?JCBsOIwyCNgUCAxgJglwDAwECPQEBBAopAQIDAQIGAQFFAwgDASgrBxIFgxyCA?=
 =?us-ascii?q?gEEpBuCH4J2AQEFgkOEZQiHb4MTgRwXgX+IbYYSiRCXQQmCJI8SCxhffI9RLIh?=
 =?us-ascii?q?dgQOObYFGgg0zGggXGYMnghsMFxKBcowtLTGBBAOIWlaBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0AYAABdXQdchxHrdtBkHAEBAQQBAQcEAQGBUQcBAQsBgTC?=
 =?us-ascii?q?CYowSX6APhHmBcxQYFIdMIjQJDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCA?=
 =?us-ascii?q?xgJglwDAwECPQEBBAopAQIDAQIGAQFFAwgDASgrBxIFgxyCAgEEpBuCH4J2AQE?=
 =?us-ascii?q?FgkOEZQiHb4MTgRwXgX+IbYYSiRCXQQmCJI8SCxhffI9RLIhdgQOObYFGgg0zG?=
 =?us-ascii?q?ggXGYMnghsMFxKBcowtLTGBBAOIWlaBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,316,1539673200"; 
   d="scan'208";a="65363956"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mga01b.intel.com with ESMTP/TLS/AES256-SHA; 04 Dec 2018 21:09:39 -0800
Received: from localhost ([::1]:60059 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUPRL-0003RT-72
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 00:09:39 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:49203)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gUPOh-0008KF-Ta
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 00:06:56 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gUPOf-0004NM-9a
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 00:06:55 -0500
Received: from ozlabs.org ([2401:3900:2:1::2]:52277)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gUPOc-0004Hp-3c; Wed, 05 Dec 2018 00:06:51 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 438mtF03fsz9s9G; Wed,  5 Dec 2018 16:06:44 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1543986405;
	bh=jhqbuR3JMUgaJpujuO4fNd9rvNj4X90x6Kb+G5koxnA=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=DI6Mzf6BKu75O4ogWykACd1ttjSJ2Qh0Wg+Ts5MF7L83y2THQUpjVt3/VwQxq0pCy
	uCN9HKZp2AjA+Jal5WWJeUGq1i/gKIJMtVwmTbkRwbmSbZG9K3eqkm6KPL9z7YfXXR
	tZ93t69AbNfILu43/5LSmIJ7pbCL/7Qp5ZfS8PJs=
From: David Gibson <david@gibson.dropbear.id.au>
To: dhildenb@redhat.com,
	imammedo@redhat.com,
	ehabkost@redhat.com
Date: Wed,  5 Dec 2018 16:06:40 +1100
Message-Id: <20181205050641.864-5-david@gibson.dropbear.id.au>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181205050641.864-1-david@gibson.dropbear.id.au>
References: <20181205050641.864-1-david@gibson.dropbear.id.au>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2401:3900:2:1::2
Subject: [Qemu-devel] [RFCv2 for-4.0 4/5] virtio-balloon: Use
 ram_block_discard_range() instead of raw madvise()
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: pbonzini@redhat.com, David Gibson <david@gibson.dropbear.id.au>,
	qemu-ppc@nongnu.org, qemu-devel@nongnu.org, mst@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Currently, virtio-balloon uses madvise() with MADV_DONTNEED to actually
discard RAM pages inserted into the balloon.  This is basically a Linux
only interface (MADV_DONTNEED exists on some other platforms, but doesn't
always have the same semantics).  It also doesn't work on hugepages and h=
as
some other limitations.

It turns out that postcopy also needs to discard chunks of memory, and us=
es
a better interface for it: ram_block_discard_range().  It doesn't cover
every case, but it covers more than going direct to madvise() and this
gives us a single place to update for more possibilities in future.

There are some subtleties here to maintain the current balloon behaviour:

* For now, we just ignore requests to balloon in a hugepage backed region=
.
  That matches current behaviour, because MADV_DONTNEED on a hugepage wou=
ld
  simply fail, and we ignore the error.

* If host page size is > BALLOON_PAGE_SIZE we can frequently call this on
  non-host-page-aligned addresses.  These would also fail in madvise(),
  which we then ignored.  ram_block_discard_range() error_report()s calls
  on unaligned addresses, so we explicitly check that case to avoid
  spamming the logs.

* We now call ram_block_discard_range() with the *host* page size, wherea=
s
  we previously called madvise() with BALLOON_PAGE_SIZE.  Surprisingly,
  this also matches existing behaviour.  Although the kernel fails madvis=
e
  on unaligned addresses, it will round unaligned sizes *up* to the host
  page size.  Yes, this means that if BALLOON_PAGE_SIZE < guest page size
  we can incorrectly discard more memory than the guest asked us to.  I'm
  planning to address that soon.

Errors other than the ones discussed above, will now be reported by
ram_block_discard_range(), rather than silently ignored, which means we
have a much better chance of seeing when something is going wrong.

Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
Reviewed-by: Michael S. Tsirkin <mst@redhat.com>
---
 hw/virtio/virtio-balloon.c | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

diff --git a/hw/virtio/virtio-balloon.c b/hw/virtio/virtio-balloon.c
index c3a19aa27d..4435905c87 100644
--- a/hw/virtio/virtio-balloon.c
+++ b/hw/virtio/virtio-balloon.c
@@ -37,8 +37,29 @@ static void balloon_inflate_page(VirtIOBalloon *balloo=
n,
                                  MemoryRegion *mr, hwaddr offset)
 {
     void *addr =3D memory_region_get_ram_ptr(mr) + offset;
+    RAMBlock *rb;
+    size_t rb_page_size;
+    ram_addr_t ram_offset;
=20
-    qemu_madvise(addr, BALLOON_PAGE_SIZE, QEMU_MADV_DONTNEED);
+    /* XXX is there a better way to get to the RAMBlock than via a
+     * host address? */
+    rb =3D qemu_ram_block_from_host(addr, false, &ram_offset);
+    rb_page_size =3D qemu_ram_pagesize(rb);
+
+    /* Silently ignore hugepage RAM blocks */
+    if (rb_page_size !=3D getpagesize()) {
+        return;
+    }
+
+    /* Silently ignore unaligned requests */
+    if (ram_offset & (rb_page_size - 1)) {
+        return;
+    }
+
+    ram_block_discard_range(rb, ram_offset, rb_page_size);
+    /* We ignore errors from ram_block_discard_range(), because it has
+     * already reported them, and failing to discard a balloon page is
+     * not fatal */
 }
=20
 static const char *balloon_stat_names[] =3D {
--=20
2.19.2


