Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:51:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4AA31580224
	for <like.xu@linux.intel.com>; Sun,  2 Dec 2018 18:27:51 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga001-1.jf.intel.com with ESMTP; 02 Dec 2018 18:27:51 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AfSOvAxVgZSz6YSsMLqDY9mBq9WbV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZRSHuqdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzZhMx+grxYrhKvqBNw35Pbb4ObO/RjZqPQf9EUSGVcUstfSyBOHJi8?=
 =?us-ascii?q?YpAAD+YdJ+tVtZXxqkEToRa4GAKiBPnvyjhNhnLu06M1yfohEQDb0wc9HtwOsW?=
 =?us-ascii?q?/brM7yNKcUTOu4y7THwi/db/NXxDjw84fIchE6rvGXWrJwd9DdxlQ1FwPCllWf?=
 =?us-ascii?q?spLqMCmP1ugXsmiU8vBsWviyi2M+rQx6vzahxsApiobTh4IVzEjJ9SJ4wYYxP9?=
 =?us-ascii?q?K3U1V7bcSjEJtKuCGWL5Z5QtklQ2Fwoyk11KcJuYShcCgL1ZsqwQPUZf+fc4WQ?=
 =?us-ascii?q?/B7vSOWcLS1liH54e7+znQi+/Eagx+HmS8W50k5GojRZntTCrHwBygHf5tKFR/?=
 =?us-ascii?q?dg5EutxDCC3B3J5O5eO0A7j6/bJoYhwrEukpoTtlzOHiv3mEXtkK+WbV8o+ueu?=
 =?us-ascii?q?6+T6eLnmoYWcN4BshgH/NKQhhNC/DPwmPgQSXGWX4/mw2KDg8EHjXrlHgP07nr?=
 =?us-ascii?q?PEvJ3YPcgbo7S2Aw5R0oYt8Ra/CDKm3cwBnXYZKVJFZQuLgJX3NFHQPv/4Ce6z?=
 =?us-ascii?q?jE+rkDd2wfDJIqPuAo7KInjHkbfhfqhy51RTyQou1d1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYFVGKJBa+ZNqzSsVmV5u41JOmMfoAVtC7nK/c5//7u?=
 =?us-ascii?q?kWM5mVgFcKmt3JsXa263Eu5pIkWEenfshtYBEWEXvgsxVuDqiVuCUSJNaHa2Ra?=
 =?us-ascii?q?4z+jY7CIf1RbrFXZ2n1bydwD+gTNoRYmFdFkvKF3DueIOZHfAWZ2WXK85llzUC?=
 =?us-ascii?q?Er+5V44m0wrprQL/1v9rI/TZ/n4ls4n+3o1w7uzXiRZg7DFxEoGR3n+ASyRuk3?=
 =?us-ascii?q?oVSiQq9KZ4p0N71xGEy6cvmOFSF9FY+6ZUVBwnP4XX1e1wBoPOXVfq/9uTSV3u?=
 =?us-ascii?q?ZtjuLjY4Ut8ri4sFZ0lVGNylglbExSX8UJEPkLneKJUq866U8Hn7PMF7gyLK3b?=
 =?us-ascii?q?cgg3EpQ8FUMmvgirR47wLeDpSPkknfnrv8JvdU5zLE6GrWlTnGh0pfSgMlCag?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAAAQlARchxHrdtBjFgQBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVEFAQEBAQsBgTAqgQ+BKYwRX4sqgg2XSIFzAg0FGAcNh3YiNAk?=
 =?us-ascii?q?NAQMBAQEBAQECARMBAQEKCwkIGw4jDII2BQIDGAmCXAECAwECJBkBAQQKKQECA?=
 =?us-ascii?q?wECBgEBChgJHQgDAQsFGDETBQSCTUsBggABAQShb4FsM4J2AQEFhxIHCIJtiBO?=
 =?us-ascii?q?BHBeBf4ERgxKKXIkuMpZiCYIjhF2KMQsYX4FJjAaCeJBEiCmBRoINMxoIFxmDJ?=
 =?us-ascii?q?wmCEgwXEoFyhlqFUy0xgQQDikorKYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0ADAAAQlARchxHrdtBjFgQBAQEBAQIBAQEBBwIBAQEBgVE?=
 =?us-ascii?q?FAQEBAQsBgTAqgQ+BKYwRX4sqgg2XSIFzAg0FGAcNh3YiNAkNAQMBAQEBAQECA?=
 =?us-ascii?q?RMBAQEKCwkIGw4jDII2BQIDGAmCXAECAwECJBkBAQQKKQECAwECBgEBChgJHQg?=
 =?us-ascii?q?DAQsFGDETBQSCTUsBggABAQShb4FsM4J2AQEFhxIHCIJtiBOBHBeBf4ERgxKKX?=
 =?us-ascii?q?IkuMpZiCYIjhF2KMQsYX4FJjAaCeJBEiCmBRoINMxoIFxmDJwmCEgwXEoFyhlq?=
 =?us-ascii?q?FUy0xgQQDikorKYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,308,1539673200"; 
   d="asc'?scan'208";a="55778127"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 02 Dec 2018 18:27:50 -0800
Received: from localhost ([::1]:46483 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTdxI-0004Br-HW
	for like.xu@linux.intel.com; Sun, 02 Dec 2018 21:27:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:45711)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gTdwx-0004AK-3O
	for qemu-devel@nongnu.org; Sun, 02 Dec 2018 21:27:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <dgibson@ozlabs.org>) id 1gTdwt-0007ov-Td
	for qemu-devel@nongnu.org; Sun, 02 Dec 2018 21:27:07 -0500
Received: from ozlabs.org ([203.11.71.1]:39999)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <dgibson@ozlabs.org>)
	id 1gTdws-0007nm-TZ; Sun, 02 Dec 2018 21:27:03 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 437TQp1qvNz9s55; Mon,  3 Dec 2018 13:26:58 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1543804018;
	bh=QlnJ3qkTV1XSyodn6Uiua3PrTv2rSzMvIRm+d0D/dSM=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=XS9WWNGOjuRyiUX4uKiVWR3wMn8mg8RpfNWXC9uvV/QfUynBLY9ldayD1xDP6FBGq
	tNinQ6PUdejP+4CyS+59cqzUDLm87ge2f9R34UTvCDjsysyS8LCvaYmW4IQaguzQC6
	hlooWxXksxEWwZrsrgoN1wGNGOuisHGTvJhTFqLI=
Date: Mon, 3 Dec 2018 12:14:06 +1100
From: David Gibson <david@gibson.dropbear.id.au>
To: =?iso-8859-1?Q?C=E9dric?= Le Goater <clg@kaod.org>
Message-ID: <20181203011406.GP30479@umbus.fritz.box>
References: <20181116105729.23240-1-clg@kaod.org>
	<20181116105729.23240-7-clg@kaod.org>
	<20181122051302.GG10448@umbus.fritz.box>
	<390808b9-250e-e1ae-ea54-fcf47b309833@kaod.org>
	<20181130010410.GE30479@umbus.fritz.box>
	<d8ba2082-625f-b547-47af-416148c04e9c@kaod.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
	protocol="application/pgp-signature"; boundary="QKpLca3blcvhMJ0W"
Content-Disposition: inline
In-Reply-To: <d8ba2082-625f-b547-47af-416148c04e9c@kaod.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 203.11.71.1
Subject: Re: [Qemu-devel] [PATCH v5 06/36] ppc/xive: add support for the END
 Event State buffers
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>


--QKpLca3blcvhMJ0W
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Fri, Nov 30, 2018 at 07:41:33AM +0100, C=E9dric Le Goater wrote:
> On 11/30/18 2:04 AM, David Gibson wrote:
> > On Thu, Nov 29, 2018 at 11:06:13PM +0100, C=E9dric Le Goater wrote:
> >> On 11/22/18 6:13 AM, David Gibson wrote:
> >>> On Fri, Nov 16, 2018 at 11:56:59AM +0100, C=E9dric Le Goater wrote:
> >>>> The Event Notification Descriptor also contains two Event State
> >>>> Buffers providing further coalescing of interrupts, one for the
> >>>> notification event (ESn) and one for the escalation events (ESe). A
> >>>> MMIO page is assigned for each to control the EOI through loads
> >>>> only. Stores are not allowed.
> >>>>
> >>>> The END ESBs are modeled through an object resembling the 'XiveSourc=
e'
> >>>> It is stateless as the END state bits are backed into the XiveEND
> >>>> structure under the XiveRouter and the MMIO accesses follow the same
> >>>> rules as for the standard source ESBs.
> >>>>
> >>>> END ESBs are not supported by the Linux drivers neither on OPAL nor =
on
> >>>> sPAPR. Nevetherless, it provides a mean to study the question in the
> >>>> future and validates a bit more the XIVE model.
> >>>>
> >>>> Signed-off-by: C=E9dric Le Goater <clg@kaod.org>
> >>>> ---
> >>>>  include/hw/ppc/xive.h |  20 ++++++
> >>>>  hw/intc/xive.c        | 160 +++++++++++++++++++++++++++++++++++++++=
++-
> >>>>  2 files changed, 178 insertions(+), 2 deletions(-)
> >>>>
> >>>> diff --git a/include/hw/ppc/xive.h b/include/hw/ppc/xive.h
> >>>> index ce62aaf28343..24301bf2076d 100644
> >>>> --- a/include/hw/ppc/xive.h
> >>>> +++ b/include/hw/ppc/xive.h
> >>>> @@ -208,6 +208,26 @@ int xive_router_get_end(XiveRouter *xrtr, uint8=
_t end_blk, uint32_t end_idx,
> >>>>  int xive_router_set_end(XiveRouter *xrtr, uint8_t end_blk, uint32_t=
 end_idx,
> >>>>                          XiveEND *end);
> >>>> =20
> >>>> +/*
> >>>> + * XIVE END ESBs
> >>>> + */
> >>>> +
> >>>> +#define TYPE_XIVE_END_SOURCE "xive-end-source"
> >>>> +#define XIVE_END_SOURCE(obj) \
> >>>> +    OBJECT_CHECK(XiveENDSource, (obj), TYPE_XIVE_END_SOURCE)
> >>>
> >>> Is there a particular reason to make this a full QOM object, rather
> >>> than just embedding it in the XiveRouter?
> >>
> >> Coming back on this question because removing the chip_id from the
> >> router is a problem for the END triggering. At least with the current
> >> design. See below for the comment.
> >>
> >>>> +typedef struct XiveENDSource {
> >>>> +    SysBusDevice parent;
> >>>> +
> >>>> +    uint32_t        nr_ends;
> >>>> +
> >>>> +    /* ESB memory region */
> >>>> +    uint32_t        esb_shift;
> >>>> +    MemoryRegion    esb_mmio;
> >>>> +
> >>>> +    XiveRouter      *xrtr;
> >>>> +} XiveENDSource;
> >>>> +
> >>>>  /*
> >>>>   * For legacy compatibility, the exceptions define up to 256 differ=
ent
> >>>>   * priorities. P9 implements only 9 levels : 8 active levels [0 - 7]
> >>>> diff --git a/hw/intc/xive.c b/hw/intc/xive.c
> >>>> index 9cb001e7b540..5a8882d47a98 100644
> >>>> --- a/hw/intc/xive.c
> >>>> +++ b/hw/intc/xive.c
> >>>> @@ -622,8 +622,18 @@ static void xive_router_end_notify(XiveRouter *=
xrtr, uint8_t end_blk,
> >>>>       * even futher coalescing in the Router
> >>>>       */
> >>>>      if (!(end.w0 & END_W0_UCOND_NOTIFY)) {
> >>>> -        qemu_log_mask(LOG_UNIMP, "XIVE: !UCOND_NOTIFY not implement=
ed\n");
> >>>> -        return;
> >>>> +        uint8_t pq =3D GETFIELD(END_W1_ESn, end.w1);
> >>>> +        bool notify =3D xive_esb_trigger(&pq);
> >>>> +
> >>>> +        if (pq !=3D GETFIELD(END_W1_ESn, end.w1)) {
> >>>> +            end.w1 =3D SETFIELD(END_W1_ESn, end.w1, pq);
> >>>> +            xive_router_set_end(xrtr, end_blk, end_idx, &end);
> >>>> +        }
> >>>> +
> >>>> +        /* ESn[Q]=3D1 : end of notification */
> >>>> +        if (!notify) {
> >>>> +            return;
> >>>> +        }
> >>>>      }
> >>>> =20
> >>>>      /*
> >>>> @@ -706,6 +716,151 @@ void xive_eas_pic_print_info(XiveEAS *eas, uin=
t32_t lisn, Monitor *mon)
> >>>>                     (uint32_t) GETFIELD(EAS_END_DATA, eas->w));
> >>>>  }
> >>>> =20
> >>>> +/*
> >>>> + * END ESB MMIO loads
> >>>> + */
> >>>> +static uint64_t xive_end_source_read(void *opaque, hwaddr addr, uns=
igned size)
> >>>> +{
> >>>> +    XiveENDSource *xsrc =3D XIVE_END_SOURCE(opaque);
> >>>> +    XiveRouter *xrtr =3D xsrc->xrtr;
> >>>> +    uint32_t offset =3D addr & 0xFFF;
> >>>> +    uint8_t end_blk;
> >>>> +    uint32_t end_idx;
> >>>> +    XiveEND end;
> >>>> +    uint32_t end_esmask;
> >>>> +    uint8_t pq;
> >>>> +    uint64_t ret =3D -1;
> >>>> +
> >>>> +    end_blk =3D xrtr->chip_id;
> >>>> +    end_idx =3D addr >> (xsrc->esb_shift + 1);
> >>>> +    if (xive_router_get_end(xrtr, end_blk, end_idx, &end)) {
> >>
> >> The current END accessors require a block identifier, hence xrtr->chip=
_id,=20
> >> but in this case, we don't really need it because we are using the END=
T=20
> >> local to the router/chip.=20
> >=20
> >> I don't know how to handle simply this case without keeping chip_id :/
> >=20
> > I don't really follow how chip_id is relevant here.  AFAICT the END
> > accessors take a block id and the back end is responsible for
> > interpreting them.  The ponwernv one will map it to chip id, but the
> > PAPR one can just ignore it or only use block 0.
>=20
> Yes. But the block value comes from the xrtr->chip_id today, on PAPR and
> PowerNV, even if it's block 0.=20
>=20
> What I could do is add a "chip-id" property to XiveENDSource possibly.

This still seems wrong for the PAPR model.  Why can't you configure
the end_block value directly in the Xive components, then just set it
equal to the chip_id when you build the powernv machine?

--=20
David Gibson			| I'll have my music baroque, and my code
david AT gibson.dropbear.id.au	| minimalist, thank you.  NOT _the_ _other_
				| _way_ _around_!
http://www.ozlabs.org/~dgibson

--QKpLca3blcvhMJ0W
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEdfRlhq5hpmzETofcbDjKyiDZs5IFAlwEg10ACgkQbDjKyiDZ
s5IlxxAA07UD8GMO7hZFHyb2zPPuKIebcCZHPHuSoRwMeTIeF+k6MctEJ7kHAoXN
KEanCEV5FO3HKgXv8uZ45DzkXth97wwwYBQxkqTkksONTfQmcs0bb8V/RYww9PZN
PgFGy4ht2PeRwxf5Xyo6G3Ajn5IKGrlcKsRJm8W8vIr6fuqmTk0mn2MFPc+4k2xa
2hNzwjZiNjhasYicOAKe/jxnItfWekTf8OsBrNEhw0bqYbkysLtOLRMBhK1NZkKH
S0JI5jJEQrwn247w0l7VChYBNxXZfHIFHt1uZN6tukNa6KrckeW2vDb099Lc04zn
EtyafWm62cZKSX4evLFKRsK+KgaxuNAPtTgv0K2S7sggf6U/KWxYclq+lpEGKEFo
w4ET8lbVddwovxVZB5XHALyROe8ASEwLPW5S5Xk8tUVNY7qBxU/73OgZtHQoTSg/
WvdKKUTFsCCvyELDnWU2+Bw7y/b5V1DUaRH5JN/UAbU09Pr6X5yGsffdBLegF9Ga
QTiC1O3NZRujzbCoT6BQLRDxobNhFrSGJtOpCmY2bxMhow7ifIlW0004JQXOGdFG
qzLGVdUIHarR4U+e2+vgudtDrIByu+SWXzVZX5jVQu7mCCrYi1LeJygITRYm29A4
WkrcT+Dz3BSko/E/gZIjxr6DdRyQWBtyjJ87GNddG6aVzxYk96s=
=iZAz
-----END PGP SIGNATURE-----

--QKpLca3blcvhMJ0W--

