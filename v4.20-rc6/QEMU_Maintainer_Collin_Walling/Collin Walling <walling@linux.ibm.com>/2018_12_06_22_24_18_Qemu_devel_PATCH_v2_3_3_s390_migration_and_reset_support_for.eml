Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:54:47 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E6A9B580375
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 14:25:50 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 14:25:50 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AAHZGARxXczrUwyLXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoVLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7S60/Vza/4KdxUBLmiD?=
 =?us-ascii?q?kJOTA+/m7VhMx+j79VoAqjqhJ9zIPYfY+YOOZgcaPGZt4WWXZNU9xNWyFbHo+w?=
 =?us-ascii?q?c40CBPcBM+ZCqIn9okMDoAW5BQmoAOPvyzlIjWL20qIg1+QhFQDG3AovH9kTt3?=
 =?us-ascii?q?nVos/6NKMWUeC0yqnIwi7Ob/dX2Tf79YjJfQotofCXUrJ1a8be1U4vFwbcg1iW?=
 =?us-ascii?q?tIfrPCuV2/wTv2SH7OdsT/+jh3Mkpg1rvDSiyMchhpPUio8X0lzJ8T91zYY0KN?=
 =?us-ascii?q?GiSEN2YsSoHZtOuyycKoB4WNktQ3tytyY/0rAGuYC0fCwNyJk/wx7faueHc5ST?=
 =?us-ascii?q?4h75W+aRJyp4iGhieLKliBa+6UmgyuviWcmoyFtGsDZJn9rWunwQyhDe6dKLRu?=
 =?us-ascii?q?Vz80qhwzqDygLe5vlBIU8ulKrbL5AhwqQ3lpoWqUnDBzH5mEDrjKOPa0or5Pao?=
 =?us-ascii?q?5PrjYrn/vZCcMJJ0igfiPaswgcyzBuA4MgkNX2eF4+i926Dj8FX9QLVLiP02j6?=
 =?us-ascii?q?bYvIrbJcQduq62HQtV3pw/5Ba4Cjery9IYnX4BLFJKfhKHkpLlO1bUIPD3Ffu/?=
 =?us-ascii?q?mUijkC93x/DaOb3sGpHNLnnAkLj/Z7p85FNcxRE3zdBe4ZJUF74ALOjyWk/3qN?=
 =?us-ascii?q?zXEBs5PxaozObgDdUunr4YQn+FV6+FLLvJ4xjP4uM0P/LKYogTtzDgbf8/6Lnr?=
 =?us-ascii?q?hH49nFYbOq6xwZoQbmv/B/ljPgCVbGThhoQ8F3wXtF87Re3ulFrQSDNWejO+Ur?=
 =?us-ascii?q?wx4nQhBZu7AJzfboaqhrOHwWG8BJIBfX1MCF2HDSL1cZ6ZUewHciOYL5xdlWkd?=
 =?us-ascii?q?WL28DoMsyxyqnAn9zbVhM6zT4CJc/Yvu0cUw/LaCzQEa8ztyAMKAlWaXQCU8lW?=
 =?us-ascii?q?QIWjQ19LpyrUx01hGI1q08y+ZEFfRP+PJFXgM3c5jR06gyB9nsWw7pZNqFSF+6?=
 =?us-ascii?q?BN6hBHV5RNUrxcMUaktyFs+Kgh2F3iCvRbQSkvjDGJwp7qL0xXX9J89hjX3B0f?=
 =?us-ascii?q?oPlV4jF+BIMWmngOZA/gzXBojG2xGGnqKudKIT9CrM8nqTi2uEuQdTVwsmAvaN?=
 =?us-ascii?q?ZmwWekaD9Yex3UjFVbL7Ubk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUCABNoQlcmBHrdtBjHAECHwQBBgGBT?=
 =?us-ascii?q?QKBL4JijHKLMIMJllIUgV8SAQEYFIdXIjQJDQEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4vgjYFAgMYCYJcAgEDAQIPFR8KLAMBAgYBAUgIAwFTBxIFHYJ/ggIBAgKbc?=
 =?us-ascii?q?IlYAQEBgWoziiyHcIQvF4F/gRGCXYR/IIVyAo83fJAsCZFGAhaRNokOj1cCBAY?=
 =?us-ascii?q?FAhMBgUaCDTMaCBsVgyeCJxeOO1SBB4dtVoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AUCABNoQlcmBHrdtBjHAECHwQBBgGBTQKBL4JijHKLMIM?=
 =?us-ascii?q?JllIUgV8SAQEYFIdXIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFAgMYC?=
 =?us-ascii?q?YJcAgEDAQIPFR8KLAMBAgYBAUgIAwFTBxIFHYJ/ggIBAgKbcIlYAQEBgWoziiy?=
 =?us-ascii?q?HcIQvF4F/gRGCXYR/IIVyAo83fJAsCZFGAhaRNokOj1cCBAYFAhMBgUaCDTMaC?=
 =?us-ascii?q?BsVgyeCJxeOO1SBB4dtVoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,324,1539673200"; 
   d="scan'208";a="43932184"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 14:25:50 -0800
Received: from localhost ([::1]:43256 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gV25d-0007uz-AO
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 17:25:49 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:47969)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <walling@linux.ibm.com>) id 1gV259-0007rA-Lm
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 17:25:25 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <walling@linux.ibm.com>) id 1gV256-0003EN-0Z
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 17:25:17 -0500
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:46498
	helo=mx0a-001b2d01.pphosted.com)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <walling@linux.ibm.com>)
	id 1gV252-0003BL-Dw
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 17:25:14 -0500
Received: from pps.filterd (m0098413.ppops.net [127.0.0.1])
	by mx0b-001b2d01.pphosted.com (8.16.0.22/8.16.0.22) with SMTP id
	wB6MJ0xl023691
	for <qemu-devel@nongnu.org>; Thu, 6 Dec 2018 17:25:11 -0500
Received: from e33.co.us.ibm.com (e33.co.us.ibm.com [32.97.110.151])
	by mx0b-001b2d01.pphosted.com with ESMTP id 2p79gdg8cu-1
	(version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
	for <qemu-devel@nongnu.org>; Thu, 06 Dec 2018 17:25:10 -0500
Received: from localhost
	by e33.co.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
	Violators will be prosecuted
	for <qemu-devel@nongnu.org> from <walling@linux.ibm.com>;
	Thu, 6 Dec 2018 22:25:10 -0000
Received: from b03cxnp07028.gho.boulder.ibm.com (9.17.130.15)
	by e33.co.us.ibm.com (192.168.1.133) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	(version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
	Thu, 6 Dec 2018 22:25:06 -0000
Received: from b03ledav001.gho.boulder.ibm.com
	(b03ledav001.gho.boulder.ibm.com [9.17.130.232])
	by b03cxnp07028.gho.boulder.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id wB6MP5Yb17432768
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=FAIL); Thu, 6 Dec 2018 22:25:05 GMT
Received: from b03ledav001.gho.boulder.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4B9F06E04E;
	Thu,  6 Dec 2018 22:25:05 +0000 (GMT)
Received: from b03ledav001.gho.boulder.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9D3526E053;
	Thu,  6 Dec 2018 22:25:04 +0000 (GMT)
Received: from collin-ThinkPad-W541.pok.ibm.com (unknown [9.56.58.52])
	by b03ledav001.gho.boulder.ibm.com (Postfix) with ESMTP;
	Thu,  6 Dec 2018 22:25:04 +0000 (GMT)
From: Collin Walling <walling@linux.ibm.com>
To: qemu-devel@nongnu.org, qemu-s390x@nongnu.org, cohuck@redhat.com,
	rth@twiddle.net, david@redhat.com, borntraeger@de.ibm.com, thuth@redhat.com
Date: Thu,  6 Dec 2018 17:24:18 -0500
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1544135058-21380-1-git-send-email-walling@linux.ibm.com>
References: <1544135058-21380-1-git-send-email-walling@linux.ibm.com>
X-TM-AS-GCONF: 00
x-cbid: 18120622-0036-0000-0000-00000A66C123
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00010184; HX=3.00000242; KW=3.00000007;
	PH=3.00000004; SC=3.00000270; SDB=6.01127998; UDB=6.00585943;
	IPR=6.00908129; 
	MB=3.00024517; MTD=3.00000008; XFM=3.00000015; UTC=2018-12-06 22:25:08
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 18120622-0037-0000-0000-000049E2F116
Message-Id: <1544135058-21380-4-git-send-email-walling@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:, ,
	definitions=2018-12-06_08:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	priorityscore=1501
	malwarescore=0 suspectscore=0 phishscore=0 bulkscore=0 spamscore=0
	clxscore=1015 lowpriorityscore=0 mlxscore=0 impostorscore=0
	mlxlogscore=999 adultscore=0 classifier=spam adjust=0 reason=mlx
	scancount=1 engine=8.0.1-1810050000 definitions=main-1812060188
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 3.x [generic] [fuzzy]
X-Received-From: 148.163.158.5
Subject: [Qemu-devel] [PATCH v2 3/3] s390: migration and reset support for
 diagnose 318
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Diagnose 318 contains data regarding the guest's name code
and version code (collectively called the cpc) and must be
captured for migration. Since this instruction is executed
in the kernel during IPL, we register the migration handlers
during IPL as well.

Also add a reset method for the diagnose 318 related data so
we can clear it during a machine reset.

Signed-off-by: Collin Walling <walling@linux.ibm.com>
---
 hw/s390x/ipl.c             |  3 +++
 hw/s390x/s390-virtio-ccw.c |  3 +++
 target/s390x/diag.c        | 52 ++++++++++++++++++++++++++++++++++++++++++++++
 target/s390x/internal.h    |  4 +++-
 target/s390x/kvm-stub.c    | 10 +++++++++
 target/s390x/kvm.c         | 22 ++++++++++++++++++++
 target/s390x/kvm_s390x.h   |  2 ++
 7 files changed, 95 insertions(+), 1 deletion(-)

diff --git a/hw/s390x/ipl.c b/hw/s390x/ipl.c
index 21f64ad..6e3af65 100644
--- a/hw/s390x/ipl.c
+++ b/hw/s390x/ipl.c
@@ -27,6 +27,7 @@
 #include "qemu/cutils.h"
 #include "qemu/option.h"
 #include "exec/exec-all.h"
+#include "internal.h"
 
 #define KERN_IMAGE_START                0x010000UL
 #define LINUX_MAGIC_ADDR                0x010008UL
@@ -230,6 +231,8 @@ static void s390_ipl_realize(DeviceState *dev, Error **errp)
     ipl->compat_start_addr = ipl->start_addr;
     ipl->compat_bios_start_addr = ipl->bios_start_addr;
     qemu_register_reset(qdev_reset_all_fn, dev);
+
+    diag318_register();
 error:
     error_propagate(errp, err);
 }
diff --git a/hw/s390x/s390-virtio-ccw.c b/hw/s390x/s390-virtio-ccw.c
index a0615a8..2c670fc 100644
--- a/hw/s390x/s390-virtio-ccw.c
+++ b/hw/s390x/s390-virtio-ccw.c
@@ -37,6 +37,7 @@
 #include "cpu_models.h"
 #include "hw/nmi.h"
 #include "hw/s390x/tod.h"
+#include "internal.h"
 
 S390CPU *s390_cpu_addr2state(uint16_t cpu_addr)
 {
@@ -357,6 +358,7 @@ static void s390_machine_reset(void)
         }
         subsystem_reset();
         s390_crypto_reset();
+        diag318_reset();
         run_on_cpu(cs, s390_do_cpu_load_normal, RUN_ON_CPU_NULL);
         break;
     case S390_RESET_LOAD_NORMAL:
@@ -364,6 +366,7 @@ static void s390_machine_reset(void)
             run_on_cpu(t, s390_do_cpu_reset, RUN_ON_CPU_NULL);
         }
         subsystem_reset();
+        diag318_reset();
         run_on_cpu(cs, s390_do_cpu_initial_reset, RUN_ON_CPU_NULL);
         run_on_cpu(cs, s390_do_cpu_load_normal, RUN_ON_CPU_NULL);
         break;
diff --git a/target/s390x/diag.c b/target/s390x/diag.c
index acb0f3d..935862d 100644
--- a/target/s390x/diag.c
+++ b/target/s390x/diag.c
@@ -20,6 +20,7 @@
 #include "sysemu/cpus.h"
 #include "hw/s390x/ipl.h"
 #include "hw/s390x/s390-virtio-ccw.h"
+#include "kvm_s390x.h"
 
 int handle_diag_288(CPUS390XState *env, uint64_t r1, uint64_t r3)
 {
@@ -134,3 +135,54 @@ out:
         break;
     }
 }
+
+typedef struct Diag318Data {
+    uint64_t cpc;
+} Diag318Data;
+static Diag318Data diag318data;
+
+void diag318_reset(void)
+{
+    if (s390_has_feat(S390_FEAT_DIAG318)) {
+        kvm_s390_set_cpc(0);
+    }
+}
+
+static int diag318_post_load(void *opaque, int version_id)
+{
+    Diag318Data *d = opaque;
+
+    kvm_s390_set_cpc(d->cpc);
+    return 0;
+}
+
+static int diag318_pre_save(void *opaque)
+{
+    Diag318Data *d = opaque;
+
+    kvm_s390_get_cpc(&d->cpc);
+    return 0;
+}
+
+static bool diag318_needed(void *opaque)
+{
+    return s390_has_feat(S390_FEAT_DIAG318);
+}
+
+const VMStateDescription vmstate_diag318 = {
+    .name = "diag318",
+    .post_load = diag318_post_load,
+    .pre_save = diag318_pre_save,
+    .version_id = 1,
+    .minimum_version_id = 1,
+    .needed = diag318_needed,
+    .fields = (VMStateField[]) {
+        VMSTATE_UINT64(cpc, Diag318Data),
+        VMSTATE_END_OF_LIST()
+    }
+};
+
+void diag318_register(void)
+{
+    vmstate_register(NULL, 0, &vmstate_diag318, &diag318data);
+}
diff --git a/target/s390x/internal.h b/target/s390x/internal.h
index f2a771e..d53b1d0 100644
--- a/target/s390x/internal.h
+++ b/target/s390x/internal.h
@@ -383,10 +383,12 @@ int mmu_translate_real(CPUS390XState *env, target_ulong raddr, int rw,
                        target_ulong *addr, int *flags);
 
 
-/* misc_helper.c */
+/* diag.c */
 int handle_diag_288(CPUS390XState *env, uint64_t r1, uint64_t r3);
 void handle_diag_308(CPUS390XState *env, uint64_t r1, uint64_t r3,
                      uintptr_t ra);
+void diag318_register(void);
+void diag318_reset(void);
 
 
 /* translate.c */
diff --git a/target/s390x/kvm-stub.c b/target/s390x/kvm-stub.c
index bf7795e..1f0bee3 100644
--- a/target/s390x/kvm-stub.c
+++ b/target/s390x/kvm-stub.c
@@ -104,3 +104,13 @@ void kvm_s390_stop_interrupt(S390CPU *cpu)
 void kvm_s390_restart_interrupt(S390CPU *cpu)
 {
 }
+
+int kvm_s390_get_cpc(uint64_t *cpc)
+{
+    return 0;
+}
+
+int kvm_s390_set_cpc(uint64_t cpc)
+{
+    return 0;
+}
\ No newline at end of file
diff --git a/target/s390x/kvm.c b/target/s390x/kvm.c
index 3915e36..432f8ea 100644
--- a/target/s390x/kvm.c
+++ b/target/s390x/kvm.c
@@ -749,6 +749,28 @@ int kvm_s390_set_clock_ext(uint8_t tod_high, uint64_t tod_low)
     return kvm_vm_ioctl(kvm_state, KVM_SET_DEVICE_ATTR, &attr);
 }
 
+int kvm_s390_get_cpc(uint64_t *cpc)
+{
+    struct kvm_device_attr attr = {
+        .group = KVM_S390_VM_MACHINE,
+        .attr = KVM_S390_VM_MACHINE_CPC,
+        .addr = (uint64_t)cpc,
+    };
+
+    return kvm_vm_ioctl(kvm_state, KVM_GET_DEVICE_ATTR, &attr);
+}
+
+int kvm_s390_set_cpc(uint64_t cpc)
+{
+    struct kvm_device_attr attr = {
+        .group = KVM_S390_VM_MACHINE,
+        .attr = KVM_S390_VM_MACHINE_CPC,
+        .addr = (uint64_t)&cpc,
+    };
+
+    return kvm_vm_ioctl(kvm_state, KVM_SET_DEVICE_ATTR, &attr);
+}
+
 /**
  * kvm_s390_mem_op:
  * @addr:      the logical start address in guest memory
diff --git a/target/s390x/kvm_s390x.h b/target/s390x/kvm_s390x.h
index 6e52287..8c7b6a8 100644
--- a/target/s390x/kvm_s390x.h
+++ b/target/s390x/kvm_s390x.h
@@ -29,6 +29,8 @@ int kvm_s390_get_clock(uint8_t *tod_high, uint64_t *tod_clock);
 int kvm_s390_get_clock_ext(uint8_t *tod_high, uint64_t *tod_clock);
 int kvm_s390_set_clock(uint8_t tod_high, uint64_t tod_clock);
 int kvm_s390_set_clock_ext(uint8_t tod_high, uint64_t tod_clock);
+int kvm_s390_get_cpc(uint64_t *cpc);
+int kvm_s390_set_cpc(uint64_t cpc);
 void kvm_s390_enable_css_support(S390CPU *cpu);
 int kvm_s390_assign_subch_ioeventfd(EventNotifier *notifier, uint32_t sch,
                                     int vq, bool assign);
-- 
2.7.4


