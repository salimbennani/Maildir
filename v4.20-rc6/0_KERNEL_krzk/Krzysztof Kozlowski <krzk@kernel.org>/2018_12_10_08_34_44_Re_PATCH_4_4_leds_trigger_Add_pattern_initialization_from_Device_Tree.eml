Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 18:14:51 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A2F965800CB;
	Mon, 10 Dec 2018 00:35:03 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 00:35:03 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AMN1rDBVGRprFvEv23Kb7I3xnqqXV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZheOu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmTgLjhi?=
 =?us-ascii?q?UaOD4j6GzYhcJwg6BbrhyvpBJx3pDab52ONPpmfK7QZs8aSXZbU8pNSyBNHoGx?=
 =?us-ascii?q?Yo0SBOQBJ+ZYqIz9qkMLoxukBAitBPjvyz5Uhn/x060xzuEvEQbH3QwkGNIPvm?=
 =?us-ascii?q?/UrNb0NKwPVu21z7PIzDTAb/5N2jfy9pLIchY/rvGIR75wdtDRyUY2Gg7Dk16e?=
 =?us-ascii?q?qpTlMiuL2ugRt2WX9fdsWOyxh2I9tg18oSSjyt0th4TLno4Z1EzI+CFjzIs2Jd?=
 =?us-ascii?q?C0UlN3bN+mHZdKtyyWK417Sd44TW5yoiY10LgGtIa7fCcUzJQnwAbSa+KIc4eW?=
 =?us-ascii?q?+BLvTuWRLilihHJjZr2/gwy+8U+6yu3zTsW00VBKoTRZktTUqHwByxje5tKaRv?=
 =?us-ascii?q?Zz4EutwyuD2gPP5u1eIE05l7LXK5s7zb4xkpoTv17DHijzmEjuiK+Wd0Mk+vWn?=
 =?us-ascii?q?6uj+YbXpuIWcN4lqhQH6K6guncK+AeImPQgURGWb5+u826P5/UHjQ7VFkOc2kq?=
 =?us-ascii?q?/Hv5DeP8gbobS5AwBN3oY59xm/Fyum0MgfnXQfKFJFeRGHgJbzN1DBPfD1FvO/?=
 =?us-ascii?q?g1WqkDd2yPHKJLzhApPRLnfdlLftZ6py60lZyAAr19BQ+4pUCq0dIPL0QkLxtM?=
 =?us-ascii?q?bXDh4lMwOuxObrEtV91p4EVmKJDa+UK6fSsV6O5uIyLOiAfo4VuDDhK/c74/7i?=
 =?us-ascii?q?l2M2mVgYfaOxx5sYdGi4Huh6I0WeeXfsgNABHnkQsgo9S+zqjluCUTlIana2Xq?=
 =?us-ascii?q?I84Cw7CY28AYfCQICtnKKO3COhEpJKYWBGD0iGEW30eIWcR/cMdCWSL9d7nTwf?=
 =?us-ascii?q?VbihTIwh2Qu0tADgybpqNe7U+iwetZL+29l5/ezTlRcu9TNqC8SRyX2CT2Zxnm?=
 =?us-ascii?q?kQXT85wLh/oVBhyleEyaV4gOZXFdpJ6/NNUwc1L5jcz+NhBtD2WwLBeMqJSVm8?=
 =?us-ascii?q?TtWnBzExUsw+w9sUb0lhHNWiiwjJ3zC2DL8Ni7yLGJs0/7rB0HfrOcZy1WzK1K?=
 =?us-ascii?q?k7gFkgWctAK2umiql79wjQAo7Jl16Ul6KrdaQawS7M+32PzWuIvEFETgFwVb/J?=
 =?us-ascii?q?UmwYZkvTtd75/F/NT6eyCbQ7NQtM0dONJbFUatL3l1lGRO3sONLFY22vnWe9Hh?=
 =?us-ascii?q?KIxrKKbIr3dGQRxiTdCE4Ykw8N+XaKLxQxBiCko2jGFjxhCUrvY1/w8el5sH67?=
 =?us-ascii?q?Uk40zwSNb01917q0+gQZheCGR/MUxLIEvCYhqzN7HFum29LWCtyApxdufalGYN?=
 =?us-ascii?q?M95ktH2nzdtwBnIpOgKKVijEYEcwtrp0Puywl3CoJYnMcwqHMl0gVzJryY0V9b?=
 =?us-ascii?q?bDyYwI3/NafRKmnx+xCvdbXb2lXf0NaQ56cO5+40q1TlvAG1CEUi929r3MVS03?=
 =?us-ascii?q?uZ/p/KFhYdUYrtUkYr8Bh3v7HbYjQn64zIz3FtMKm0vSXE29ImH+Ylzhegf9FC?=
 =?us-ascii?q?MKKLDgPyEssaB9SwJ+wugVSmchUEPOVK/q4uI8ymb+eG2LKsPOt4hjKmjHhI75?=
 =?us-ascii?q?pn0k2R8CpwUOjI0Igfw/GZxweISy3zjFO8vc/pg4BEYjcSE3G7ySjlAo5Re6Jz?=
 =?us-ascii?q?cZwKCWeoP8242NF+i4TxVH5f8V6pH0kG19OxeRqOc1z92hVd1EQWoXC9mSq01S?=
 =?us-ascii?q?d0kywvrqeE2CzOwuLidAcIO2JRRWlii0vsLpawj9wAQEeoaA0pngO/5Unm36hb?=
 =?us-ascii?q?uLh/L27LTEdKZSf2NWJiUqi3traYeM5A8pAosSZWUOS6f1+aTKXwox8b0yPlAm?=
 =?us-ascii?q?tfyyo3dzCsupXlgRN6jHiRI2p0rHrcYctw3wvQ5MTARf5N2ToLXCl5hiPQBlSm?=
 =?us-ascii?q?Pdmp/NOUmozHsuC/UWKhS5JSfTPqzYOGqCu0+2lqDQejkPC0n93tCRI63jPj19?=
 =?us-ascii?q?l2SSXIqw7xYorx2KS7K+5nflRoC0X668p1AYx+loowhJcN2XkVnJmV/HwHkXvt?=
 =?us-ascii?q?PtVfw67xcH0NRTsTyd7P/AflwFFjLm6Ox4/hU3Wdw8hhaMOgbmIYxC099NxKB7?=
 =?us-ascii?q?mO7LNfgyR1uFW4oBnVYfh8mDcd1PQv5GQbg+EPpAoi0CGdDqoOEklfOCzmjw6I?=
 =?us-ascii?q?4MymrKVLeGavdqC91FZ5ndCkFr2DoxtTWHDkepc5Bi9w795yMFbN0H3194Hld8?=
 =?us-ascii?q?PcbdMVth2IjRjAi/JZJ442lvoPnSBnI37yvWU5y+4nihxjxYq1s5KAK2Vp4aK1?=
 =?us-ascii?q?GBpYNiDuasMX+zHti7ten8mM04CuGJVhBisEXJ/yQf20FzISsOztNxySHz0ktn?=
 =?us-ascii?q?ebBb3fEBed6Eh8qnLADYurO2uLJHUDztViWRqdJFFZgA8ORzU3hZo5FgGsxMz8?=
 =?us-ascii?q?f0Z1/DER5ljkqhRSzuJkLQXwUmDapA2wcDc7VICfLAZK7gFF/0rUMcue7v9qHy?=
 =?us-ascii?q?FF5JKhqhaBKnecZwROAmEEQUiEB1HlPrmz6tjM6emYBuyiL/TQZbWCs/BRV/CN?=
 =?us-ascii?q?xZi3yItp4y6MNtmTPnllF/A72lRMXXF6G8TamjUDUS8XlzjKb86Uuhi84DB3rt?=
 =?us-ascii?q?uk/fTvWQLv45aPCrRIPdVu/RC2nbmMN+qKiCllLjZY04sGxWXUx7gHwF4SlyZu?=
 =?us-ascii?q?eiG3HrQdriHNVrzfm69NAx4faiN+L89I76M63glQNs/XkNL11rhkjvErD1dJT0?=
 =?us-ascii?q?DumsasZcYSOWGyKEvHBFqXNLSBPTDL38D3YaamRbJMlulbqx2wtiidE0L4OjSD?=
 =?us-ascii?q?lj/pVw2gMO1WjSGbOgBet5+5chp3FWfjS9fmYAWhMNBrlT023aE0hnTSOG8cKz?=
 =?us-ascii?q?d8dUZNrryW7SxAg/R/G3ZO7nxqLeSfnyaZ7u/YKosZsPdxAyR0kf5a72o+y7dP?=
 =?us-ascii?q?8C5EQ/l1y2PuqYt2qk+rlsGSwSUhWwgdhCxMgdeop1dzIrfF8ZcIenHW+BUS9m?=
 =?us-ascii?q?aRQ0AJvclmIt7ioaZdzp7Ijq2le2QKyM7d4cZJX5ucE8mAKnd0aRc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BmAADgJA5ch0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?QGDaieDepQmgg0UiQyOMYFxFhgTAYdqIjYHDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDEIBDgGBZCKCZAEBAQECAQECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZB?=
 =?us-ascii?q?QODGYF1BQgFmRM8ih1wfDOCdgEBBYcaCIELiXqBHBeBQD+BEYJkLoVOgjeCV5V?=
 =?us-ascii?q?2iixVCZFPGJE9gwKWHw8hgSwGggFNMAhsBoI1ghsMF4hehUA/MoEFAQGDeohPA?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0BmAADgJA5ch0O0hNFjHgEGBwaBUwcLAQGDaieDepQmgg0?=
 =?us-ascii?q?UiQyOMYFxFhgTAYdqIjYHDQEDAQEBAQEBAgETAQEBCA0JCCkjDEIBDgGBZCKCZ?=
 =?us-ascii?q?AEBAQECAQECIAQZAQE3AQUJAQEKCw0CAiYCAgMfEgEFARwZBQODGYF1BQgFmRM?=
 =?us-ascii?q?8ih1wfDOCdgEBBYcaCIELiXqBHBeBQD+BEYJkLoVOgjeCV5V2iixVCZFPGJE9g?=
 =?us-ascii?q?wKWHw8hgSwGggFNMAhsBoI1ghsMF4hehUA/MoEFAQGDeohPAQE?=
X-IronPort-AV: E=Sophos;i="5.56,337,1539673200"; 
   d="scan'208";a="55223207"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 00:35:01 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726632AbeLJIe7 (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 03:34:59 -0500
Received: from mail.kernel.org ([198.145.29.99]:58502 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726029AbeLJIe6 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 03:34:58 -0500
Received: from mail-lf1-f50.google.com (mail-lf1-f50.google.com [209.85.167.50])
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 9C2E720874;
        Mon, 10 Dec 2018 08:34:57 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544430898;
        bh=lNLkRLuoIfZwUiemH76DsKLnqhpBlinuluGBwNK7sP0=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=XoQqAu2g/AolAOgMGF2x0tt/9h01orrjbOlkD31anUPbofJQPIxpzeNQSSEXzG9Nm
         KYI/Ojy8sWWG6srGvjojNqjFiM0u7Oex4xqf00P6eIND19mgzQyfDQw0IcNXiIIoi6
         OOKAl6Ok5RxbNqgrsVu4VGLj5pCeWEdUZk/aQ+2o=
Received: by mail-lf1-f50.google.com with SMTP id z13so7300035lfe.11;
        Mon, 10 Dec 2018 00:34:57 -0800 (PST)
X-Gm-Message-State: AA+aEWYu1dKvxwtdROoPCxOdskLNY9M5DwsaAHa+IoTmTjyL4RCqA7HT
        eMBpfDkULkCZevuhmvbm6KKjqc06uP7MMkCqFGE=
X-Google-Smtp-Source: AFSGD/WzSkZ6h4LPnEcO+HMeEvBoKgbiP1yf1wwucEeQMJnaUdw/1dOojRqFFv1TiDDzmGHNOfFf3OriGlCSsNhLREs=
X-Received: by 2002:a19:2d16:: with SMTP id k22mr5828522lfj.12.1544430895663;
 Mon, 10 Dec 2018 00:34:55 -0800 (PST)
MIME-Version: 1.0
References: <1544185974-5932-1-git-send-email-krzk@kernel.org>
 <1544185974-5932-4-git-send-email-krzk@kernel.org> <20181209081722.GB7561@amd>
In-Reply-To: <20181209081722.GB7561@amd>
From: Krzysztof Kozlowski <krzk@kernel.org>
Date: Mon, 10 Dec 2018 09:34:44 +0100
X-Gmail-Original-Message-ID: <CAJKOXPfGFUBsaUixth4T3qzDu_mdvZ9XQNhEUExWogv_5mfySg@mail.gmail.com>
Message-ID: <CAJKOXPfGFUBsaUixth4T3qzDu_mdvZ9XQNhEUExWogv_5mfySg@mail.gmail.com>
Subject: Re: [PATCH 4/4] leds: trigger: Add pattern initialization from Device Tree
To: pavel@ucw.cz
Cc: jacek.anaszewski@gmail.com, robh+dt@kernel.org,
        mark.rutland@arm.com, baolin.wang@linaro.org, rteysseyre@gmail.com,
        linux-leds@vger.kernel.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sun, 9 Dec 2018 at 09:17, Pavel Machek <pavel@ucw.cz> wrote:
>
> On Fri 2018-12-07 13:32:54, Krzysztof Kozlowski wrote:
> > Allow initialization of pattern used in pattern trigger from Device Tree
> > property.
> >
> > This is especially useful for embedded systems where the pattern trigger
> > would be used to indicate the process of boot status in a nice,
> > user-friendly blinking way.  This initialization pattern will be used
> > till user-space is brought up and sets its own pattern, indicating the
> > boot status is for example finished.
> >
> > Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
> > ---
> >  drivers/leds/trigger/ledtrig-pattern.c | 18 ++++++++++++++++++
> >  1 file changed, 18 insertions(+)
> >
> > diff --git a/drivers/leds/trigger/ledtrig-pattern.c b/drivers/leds/trigger/ledtrig-pattern.c
> > index 1870cf87afe1..96309d3bc43c 100644
> > --- a/drivers/leds/trigger/ledtrig-pattern.c
> > +++ b/drivers/leds/trigger/ledtrig-pattern.c
> > @@ -11,6 +11,7 @@
> >  #include <linux/leds.h>
> >  #include <linux/module.h>
> >  #include <linux/mutex.h>
> > +#include <linux/of.h>
> >  #include <linux/slab.h>
> >  #include <linux/timer.h>
> >
> > @@ -331,6 +332,21 @@ static const struct attribute_group *pattern_trig_groups[] = {
> >       NULL,
> >  };
> >
> > +static void pattern_init(struct led_classdev *led_cdev)
> > +{
> > +     struct device_node *np = dev_of_node(led_cdev->dev);
> > +     const char *pattern;
> > +
> > +     if (!np)
> > +             return;
> > +
> > +     if (!of_property_read_string(np, "linux,trigger-pattern", &pattern)) {
> > +             if (strlen(pattern))
> > +                     pattern_trig_store_patterns(led_cdev, pattern,
> > +                                                 strlen(pattern), false);
> > +     }
> > +}
>
> "  if (of_...())
>       return;
>
>    if (!strlen())
>        return"

Sure.

>
> Check return value of pattern_trig_store_patterns().

i can add printing of error in such case but I am not sure whether it
is worth to fail entire pattern_trig_activate().

Best regards,
Krzysztof
