Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 773B558042F;
	Fri,  7 Dec 2018 02:30:55 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 02:30:55 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AAtSsJR0mRjVOY/X4smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTLvjxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJcUMhPWSxPAoCy?=
 =?us-ascii?q?YYUBAOUOP+lXs4bzp0AWrRa8HgSsGOHixyVUinPq06A30eIsGhzG0gw6GNIOtW?=
 =?us-ascii?q?zZotLvO6cITe++0ajGzTLFb/JXwzj97JbHcxE8qvyLWLJ/a9DRxlU1GwLLlFmQ?=
 =?us-ascii?q?povlPzWU1+sXt2iU8ethWPmhi249tQ5+vCKjxsk2ioTQgI8e11PK9T1hzYorOd?=
 =?us-ascii?q?G1TFR3bcOqHZdOrS2WKoh7Tt84T2xpuis20qMKtYO1cSQQxpkqxgTTZv6df4SV?=
 =?us-ascii?q?7B/uUvuaLy1ii3J/Yr2/gg6/8Ui+xe34Ucm5yEhKriVbndnWrHwN1ALc6tKBSv?=
 =?us-ascii?q?Rj+ketwzGP1xrc6u1cIEA0k7TUK4I5z7IuipYetV7PEjL4lUnolqOaa0Yp9vSy?=
 =?us-ascii?q?5+nmYLjqvpqcOJV1igH6PKQugMu/AeEgPwgKXmib//m81bL68U36XrpKlPs2nb?=
 =?us-ascii?q?fdsJzDIsQaqKi5DBFP0os49Ra/ACmp0M4CkXkEMl1FYhSHgJbtO13UJ/D4F/i/?=
 =?us-ascii?q?j0y2kDh33/DGIqHhApLVI3jHkbfhfqhy51RTyQou1t1f45NUCrccIPP8QEPxtd?=
 =?us-ascii?q?rYDgMnPAyw2eroFNJ91oYGU2KVHqCZKL/SsUOP5u83I+mDfo4VuCrnJPgi/fLu?=
 =?us-ascii?q?jWI5lkUbfammxpYXbHG4HvJ7I0SWe3bsg9EBEXsUsQo6VuDllFqCUTtLbXaoQ6?=
 =?us-ascii?q?08/i07CJ6hDYrbRICth6KO0D24Hp1RYGBGDFeMHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXemgsp9Tx0CMSd0HuBT3tukW?=
 =?us-ascii?q?MKXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+AjE+VNQxz8UKY0Z8AdqiiB/D0jGuA78UkbyLGZM1/rjd33j3O8Zy1XLG2L?=
 =?us-ascii?q?M9gFkhR8tFLXemibJn9wjPG47JlF2UmLuweqQCwiHB7meDwnCIvEFDTgFwV6LJ?=
 =?us-ascii?q?XXQcZkvTqdT0/UfCT76oCbQ6PQpN08+CKq1WatL3iVVKXuvsONPbY2ipgWe/GQ?=
 =?us-ascii?q?6Ixq+QbIrtY2gSwT/SCFYanAwJ/XaJLw4+Bjy/rGLYFzFuEVPvY0Xx8ehxsn+7?=
 =?us-ascii?q?T0k0zx2UYE1lzba65hkVhfmEQfMJwr0EoDshqylzHFulw9LWCt+Apw19fKVcYd?=
 =?us-ascii?q?Ix+ktH2XjetwxnOpygLqZihlEFfgRzvkPu0Qh3C4pancgrqnMq0BR9KaaC3Fxd?=
 =?us-ascii?q?cDOY2Ij6OqfLJWnq4BCvd6nW10nE39aS5KgO5+o3qlX5sA6yC0ot7m9o099W03?=
 =?us-ascii?q?ub+JXHFw4SUZP3UkYq+Bl2vbDaYi8h54zK0X1gK7W7sjjH29gxHusq1g6gf8tD?=
 =?us-ascii?q?MKODDALzE9AaC9KyJ+AwmlmpbggLPOZd9KMvO8Omdv2G2LOkPep6nTKmi3hH75?=
 =?us-ascii?q?550k6W6yV8TevI1Y4fw/6ExguHSyv8jFC5v8DtmIBLeSsdHnCixijjHoJRYLN9?=
 =?us-ascii?q?fZwKCWu3P8K43NF+iIPzVH5C816jAUgL2MuoeRqUclz80hdc1UURoXy7hyS4yy?=
 =?us-ascii?q?Z4nC0urqqaxCbO2fjtdAIbOm5XQ2lvlVftIYmug9EaRkSodBUplB2+6Eb+xqhb?=
 =?us-ascii?q?orl/LmbJTUdJeSj2M39tUq+qurWeZM5P7YsisT9LX+SkfVCaVrn9rgMY0yz5BW?=
 =?us-ascii?q?texzM7dzawtpXihRN6i2GdLHd1rHXHf8F93hPf5N3aRf5M0TsKXih4iT/LBlei?=
 =?us-ascii?q?O9ml58mbl5DGsuqmTWKuSoVTcTX3zYOHrCa65XdlARqlk/Cxm93nFxM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5XkHnn3y?=
 =?us-ascii?q?MdlB2aL+cWACRTgEw9PO5Ajl2UtjLm+Gxo7jV3WdxNdhaMe+Ym8Mxi096MVKAr?=
 =?us-ascii?q?+O7LNYhSt1vka4rQXJbPh4nzcdyuEh5GQUgu4Xowot0juSAqoJEkZGJyzsmA+F?=
 =?us-ascii?q?79S/rKVReWaufqK81Et4ndC9Er6CphtQV2r+epcnBSVw9NlwMErQ0H3v7YHpYM?=
 =?us-ascii?q?XQbdUWthGOkhbPle5VKI8qlvoRhCpqImb9vXwjy+4mgh1ix5C6vI6bK2pz+KK1?=
 =?us-ascii?q?GAJXNjrwZ8kL4DHikb5entqK34CoBphuAS8EXJzsTfK1Cj4SsennOh2KED09rH?=
 =?us-ascii?q?ebBLXeERWe6Edgs3LADZSrO2uLK3keyNVoXAOdK1BHgAAIQDU6mYY0FgKwy8zk?=
 =?us-ascii?q?bkh5/Sod5kLiphtP1+JoNAT/UmHFqwezcTo0TJmfLBxL7gBN/UvVMMqe7v5tEC?=
 =?us-ascii?q?Fc5JGusAuNKmmDbQRSEW4JQlCEB0zkPrS25djA9PWYBvOjL/TUZ7WCs/deV/CO?=
 =?us-ascii?q?xZKgyYZm+zeMNsOSPnhtFfE720xDXWxnFMTdgTkAVysXlyfVZc6BuBi84jF3rt?=
 =?us-ascii?q?y48PnzWALg+4qPC7hRMdVu4Ry2gr2DN+mfhClnMzZYy4gMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv42aRljvEuEVdKS1?=
 =?us-ascii?q?zgltutZcwLOGy9MFLHBECWNLWJPzHLwsf3Yb+iRr1UlulbqxqwuTODGU/5IjuD?=
 =?us-ascii?q?jyXpVwyoMexUkCGbPRletJuhfRp3FWfjTMzpahugPd9zjD02x6A0h3zQOW4dNz?=
 =?us-ascii?q?h8b11CrrmK4SxEhfV/HnRL7mB5IumchyaZ8+7YJ44WsPRxBCR0kuNa4HIixLpU?=
 =?us-ascii?q?7CFLXvp1mCTJo95qolGmlPSPyzV9XBpPrDZLmJyEvUF4NarF8ZlAXCWMwBVYz2?=
 =?us-ascii?q?ieBQ4HtpNFF9Lo8/RSysXAk4r4LztP+s/O+tEVQc/OJ5TDeF8gOhrgFTqcMBYf?=
 =?us-ascii?q?VCOmKX3SzxhYjOyI72CYsoQ3gpLliZ4PQKVWElcyE6VeQn95EcQCLZE/dDQ1nf?=
 =?us-ascii?q?bPl8QP9HaWrxTLQshe+JfdWaTBL+/oLWO8hKNPLzQPx6HxKYkBftn+0lZpLEY8?=
 =?us-ascii?q?k4PMCUPUUMJlrDdsY0k6uhMeozBFUmQv1he9OUuW63gJGKvxx0Zuhw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BPAADTSgpch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBg2sng3qDe5AugWAIJRSJD44sgXMsEwGHWiI1CA0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQgNCQgpL4I2JAGCYgECAgEBAiBWBQEJAQEKDgwCJgICA1QGAQwGAgEBA?=
 =?us-ascii?q?YMcgWkBEAgEAaUJgS+FQIF8CYJqgQuLFFYkgRyBEScMgjEugUGGRIJXAosnhFq?=
 =?us-ascii?q?QZgcCgQ+BFo8gBhiJc4dFiRCRUwOCCE0ngziCM44pPzKBBQEBikABAQ?=
X-IPAS-Result: =?us-ascii?q?A0BPAADTSgpch0O0hNFjHAEBAQQBAQcEAQGBUgYBAQsBg2s?=
 =?us-ascii?q?ng3qDe5AugWAIJRSJD44sgXMsEwGHWiI1CA0BAwEBAQEBAQIBEwEBAQgNCQgpL?=
 =?us-ascii?q?4I2JAGCYgECAgEBAiBWBQEJAQEKDgwCJgICA1QGAQwGAgEBAYMcgWkBEAgEAaU?=
 =?us-ascii?q?JgS+FQIF8CYJqgQuLFFYkgRyBEScMgjEugUGGRIJXAosnhFqQZgcCgQ+BFo8gB?=
 =?us-ascii?q?hiJc4dFiRCRUwOCCE0ngziCM44pPzKBBQEBikABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="54956158"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 02:30:54 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726032AbeLGKau (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 05:30:50 -0500
Received: from smtp3-g21.free.fr ([212.27.42.3]:16191 "EHLO smtp3-g21.free.fr"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725985AbeLGKau (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 05:30:50 -0500
Received: from [192.168.108.68] (unknown [213.36.7.13])
        (Authenticated sender: marc.w.gonzalez)
        by smtp3-g21.free.fr (Postfix) with ESMTPSA id 77AA813F8D4;
        Fri,  7 Dec 2018 11:30:27 +0100 (CET)
Subject: Re: [PATCH v2] clk: qcom: smd: Add support for MSM8998 rpm clocks
To: Jeffrey Hugo <jhugo@codeaurora.org>,
        Michael Turquette <mturquette@baylibre.com>,
        Stephen Boyd <sboyd@kernel.org>
Cc: Rob Herring <robh@kernel.org>, Mark Rutland <mark.rutland@arm.com>,
        Bjorn Andersson <bjorn.andersson@linaro.org>,
        linux-clk <linux-clk@vger.kernel.org>,
        MSM <linux-arm-msm@vger.kernel.org>,
        LKML <linux-kernel@vger.kernel.org>
References: <1544134310-10227-1-git-send-email-jhugo@codeaurora.org>
From: Marc Gonzalez <marc.w.gonzalez@free.fr>
Message-ID: <be08a9ca-9782-6d10-7c44-523c9e8c56f5@free.fr>
Date: Fri, 7 Dec 2018 11:30:27 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <1544134310-10227-1-git-send-email-jhugo@codeaurora.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 06/12/2018 23:11, Jeffrey Hugo wrote:

> Add rpm smd clocks, PMIC and bus clocks which are required on MSM8998
> for clients to vote on.
> 
> Signed-off-by: Jeffrey Hugo <jhugo@codeaurora.org>
> ---
> v2
> -fix compatible ordering nits per Stephen
> 
>  .../devicetree/bindings/clock/qcom,rpmcc.txt       |  1 +
>  drivers/clk/qcom/clk-smd-rpm.c                     | 62 ++++++++++++++++++++++
>  include/dt-bindings/clock/qcom,rpmcc.h             |  6 +++
>  3 files changed, 69 insertions(+)
> 
> diff --git a/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt b/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
> index 87b4949..944719b 100644
> --- a/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
> +++ b/Documentation/devicetree/bindings/clock/qcom,rpmcc.txt
> @@ -16,6 +16,7 @@ Required properties :
>  			"qcom,rpmcc-msm8974", "qcom,rpmcc"
>  			"qcom,rpmcc-apq8064", "qcom,rpmcc"
>  			"qcom,rpmcc-msm8996", "qcom,rpmcc"
> +			"qcom,rpmcc-msm8998", "qcom,rpmcc"
>  			"qcom,rpmcc-qcs404", "qcom,rpmcc"
>  
>  - #clock-cells : shall contain 1
> diff --git a/drivers/clk/qcom/clk-smd-rpm.c b/drivers/clk/qcom/clk-smd-rpm.c
> index d3aadae..b1f95a9 100644
> --- a/drivers/clk/qcom/clk-smd-rpm.c
> +++ b/drivers/clk/qcom/clk-smd-rpm.c
> @@ -655,10 +655,72 @@ static int clk_smd_rpm_enable_scaling(struct qcom_smd_rpm *rpm)
>  	.num_clks = ARRAY_SIZE(qcs404_clks),
>  };
>  
> +/* msm8998 */
> +DEFINE_CLK_SMD_RPM(msm8998, snoc_clk, snoc_a_clk, QCOM_SMD_RPM_BUS_CLK, 1);
> +DEFINE_CLK_SMD_RPM(msm8998, cnoc_clk, cnoc_a_clk, QCOM_SMD_RPM_BUS_CLK, 2);
> +DEFINE_CLK_SMD_RPM(msm8998, ce1_clk, ce1_a_clk, QCOM_SMD_RPM_CE_CLK, 0);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, div_clk1, div_clk1_a, 0xb);
> +DEFINE_CLK_SMD_RPM(msm8998, ipa_clk, ipa_a_clk, QCOM_SMD_RPM_IPA_CLK, 0);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk1, bb_clk1_a, 1);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk2, bb_clk2_a, 2);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, bb_clk3_pin, bb_clk3_a_pin, 3);
> +DEFINE_CLK_SMD_RPM(msm8998, mmssnoc_axi_rpm_clk, mmssnoc_axi_rpm_a_clk,
> +		   QCOM_SMD_RPM_MMAXI_CLK, 0);
> +DEFINE_CLK_SMD_RPM(msm8998, aggre1_noc_clk, aggre1_noc_a_clk,
> +		   QCOM_SMD_RPM_AGGR_CLK, 1);
> +DEFINE_CLK_SMD_RPM(msm8998, aggre2_noc_clk, aggre2_noc_a_clk,
> +		   QCOM_SMD_RPM_AGGR_CLK, 2);
> +DEFINE_CLK_SMD_RPM_QDSS(msm8998, qdss_clk, qdss_a_clk,
> +			QCOM_SMD_RPM_MISC_CLK, 1);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, rf_clk1, rf_clk1_a, 4);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, rf_clk2_pin, rf_clk2_a_pin, 5);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, rf_clk3, rf_clk3_a, 6);
> +DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, rf_clk3_pin, rf_clk3_a_pin, 6);
> +static struct clk_smd_rpm *msm8998_clks[] = {
> +	[RPM_SMD_SNOC_CLK] = &msm8998_snoc_clk,
> +	[RPM_SMD_SNOC_A_CLK] = &msm8998_snoc_a_clk,
> +	[RPM_SMD_CNOC_CLK] = &msm8998_cnoc_clk,
> +	[RPM_SMD_CNOC_A_CLK] = &msm8998_cnoc_a_clk,
> +	[RPM_SMD_CE1_CLK] = &msm8998_ce1_clk,
> +	[RPM_SMD_CE1_A_CLK] = &msm8998_ce1_a_clk,
> +	[RPM_SMD_DIV_CLK1] = &msm8998_div_clk1,
> +	[RPM_SMD_DIV_A_CLK1] = &msm8998_div_clk1_a,
> +	[RPM_SMD_IPA_CLK] = &msm8998_ipa_clk,
> +	[RPM_SMD_IPA_A_CLK] = &msm8998_ipa_a_clk,
> +	[RPM_SMD_BB_CLK1] = &msm8998_bb_clk1,
> +	[RPM_SMD_BB_CLK1_A] = &msm8998_bb_clk1_a,
> +	[RPM_SMD_BB_CLK2] = &msm8998_bb_clk2,
> +	[RPM_SMD_BB_CLK2_A] = &msm8998_bb_clk2_a,
> +	[RPM_SMD_BB_CLK3_PIN] = &msm8998_bb_clk3_pin,
> +	[RPM_SMD_BB_CLK3_A_PIN] = &msm8998_bb_clk3_a_pin,
> +	[RPM_SMD_MMAXI_CLK] = &msm8998_mmssnoc_axi_rpm_clk,
> +	[RPM_SMD_MMAXI_A_CLK] = &msm8998_mmssnoc_axi_rpm_a_clk,
> +	[RPM_SMD_AGGR1_NOC_CLK] = &msm8998_aggre1_noc_clk,
> +	[RPM_SMD_AGGR1_NOC_A_CLK] = &msm8998_aggre1_noc_a_clk,
> +	[RPM_SMD_AGGR2_NOC_CLK] = &msm8998_aggre2_noc_clk,
> +	[RPM_SMD_AGGR2_NOC_A_CLK] = &msm8998_aggre2_noc_a_clk,
> +	[RPM_SMD_QDSS_CLK] = &msm8998_qdss_clk,
> +	[RPM_SMD_QDSS_A_CLK] = &msm8998_qdss_a_clk,
> +	[RPM_SMD_RF_CLK1] = &msm8998_rf_clk1,
> +	[RPM_SMD_RF_CLK1_A] = &msm8998_rf_clk1_a,
> +	[RPM_SMD_RF_CLK2_PIN] = &msm8998_rf_clk2_pin,
> +	[RPM_SMD_RF_CLK2_A_PIN] = &msm8998_rf_clk2_a_pin,
> +	[RPM_SMD_RF_CLK3] = &msm8998_rf_clk3,
> +	[RPM_SMD_RF_CLK3_A] = &msm8998_rf_clk3_a,
> +	[RPM_SMD_RF_CLK3_PIN] = &msm8998_rf_clk3_pin,
> +	[RPM_SMD_RF_CLK3_A_PIN] = &msm8998_rf_clk3_a_pin,
> +};
> +
> +static const struct rpm_smd_clk_desc rpm_clk_msm8998 = {
> +	.clks = msm8998_clks,
> +	.num_clks = ARRAY_SIZE(msm8998_clks),
> +};
> +
>  static const struct of_device_id rpm_smd_clk_match_table[] = {
>  	{ .compatible = "qcom,rpmcc-msm8916", .data = &rpm_clk_msm8916 },
>  	{ .compatible = "qcom,rpmcc-msm8974", .data = &rpm_clk_msm8974 },
>  	{ .compatible = "qcom,rpmcc-msm8996", .data = &rpm_clk_msm8996 },
> +	{ .compatible = "qcom,rpmcc-msm8998", .data = &rpm_clk_msm8998 },
>  	{ .compatible = "qcom,rpmcc-qcs404",  .data = &rpm_clk_qcs404  },
>  	{ }
>  };
> diff --git a/include/dt-bindings/clock/qcom,rpmcc.h b/include/dt-bindings/clock/qcom,rpmcc.h
> index 3658b0c..81dbd1f 100644
> --- a/include/dt-bindings/clock/qcom,rpmcc.h
> +++ b/include/dt-bindings/clock/qcom,rpmcc.h
> @@ -127,5 +127,11 @@
>  #define RPM_SMD_BIMC_GPU_A_CLK			77
>  #define RPM_SMD_QPIC_CLK			78
>  #define RPM_SMD_QPIC_CLK_A			79
> +#define RPM_SMD_BB_CLK3_PIN			80
> +#define RPM_SMD_BB_CLK3_A_PIN			81
> +#define RPM_SMD_RF_CLK3				82
> +#define RPM_SMD_RF_CLK3_A			83
> +#define RPM_SMD_RF_CLK3_PIN			84
> +#define RPM_SMD_RF_CLK3_A_PIN			85
>  
>  #endif
> 

What's the difference between RPM_SMD_LN_BB_CLK and RPM_SMD_BB_CLK1?

$ git grep RPM_SMD_LN_BB_CLK
arch/arm64/boot/dts/qcom/msm8996.dtsi:                  clocks = <&rpmcc RPM_SMD_LN_BB_CLK>,
arch/arm64/boot/dts/qcom/msm8996.dtsi:                          <&rpmcc RPM_SMD_LN_BB_CLK>,
drivers/clk/qcom/clk-smd-rpm.c: [RPM_SMD_LN_BB_CLK] = &msm8996_ln_bb_clk,
drivers/clk/qcom/clk-smd-rpm.c: [RPM_SMD_LN_BB_CLK] = &qcs404_ln_bb_clk,
include/dt-bindings/clock/qcom,rpmcc.h:#define RPM_SMD_LN_BB_CLK                        74


$ git grep 'RPM_SMD_BB_CLK1\>'
Documentation/devicetree/bindings/sound/qcom,wcd9335.txt:                <&rpmcc RPM_SMD_BB_CLK1>;
drivers/clk/qcom/clk-smd-rpm.c: [RPM_SMD_BB_CLK1]               = &msm8916_bb_clk1,
drivers/clk/qcom/clk-smd-rpm.c: [RPM_SMD_BB_CLK1] = &msm8996_bb_clk1,
drivers/clk/qcom/clk-smd-rpm.c: [RPM_SMD_BB_CLK1] = &msm8998_bb_clk1,
include/dt-bindings/clock/qcom,rpmcc.h:#define RPM_SMD_BB_CLK1                          10


Because the downstream kernel defines:

DEFINE_CLK_RPM_SMD_XO_BUFFER(ln_bb_clk1, ln_bb_clk1_ao, LN_BB_CLK1_ID);
DEFINE_CLK_RPM_SMD_XO_BUFFER_PINCTRL(ln_bb_clk1_pin, ln_bb_clk1_pin_ao,
				     LN_BB_CLK1_PIN_ID);
DEFINE_CLK_RPM_SMD_XO_BUFFER(ln_bb_clk2, ln_bb_clk2_ao, LN_BB_CLK2_ID);
DEFINE_CLK_RPM_SMD_XO_BUFFER_PINCTRL(ln_bb_clk2_pin, ln_bb_clk2_pin_ao,
				     LN_BB_CLK2_PIN_ID);
DEFINE_CLK_RPM_SMD_XO_BUFFER(ln_bb_clk3, ln_bb_clk3_ao, LN_BB_CLK3_ID);
DEFINE_CLK_RPM_SMD_XO_BUFFER_PINCTRL(ln_bb_clk3_pin, ln_bb_clk3_pin_ao,
				     LN_BB_CLK3_PIN_ID);

	CLK_LIST(ln_bb_clk1),
	CLK_LIST(ln_bb_clk1_ao),
	CLK_LIST(ln_bb_clk1_pin),
	CLK_LIST(ln_bb_clk1_pin_ao),
	CLK_LIST(ln_bb_clk2),
	CLK_LIST(ln_bb_clk2_ao),
	CLK_LIST(ln_bb_clk2_pin),
	CLK_LIST(ln_bb_clk2_pin_ao),
	CLK_LIST(ln_bb_clk3),
	CLK_LIST(ln_bb_clk3_ao),
	CLK_LIST(ln_bb_clk3_pin),
	CLK_LIST(ln_bb_clk3_pin_ao),


While your patch defines

DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk1, bb_clk1_a, 1);
DEFINE_CLK_SMD_RPM_XO_BUFFER(msm8998, bb_clk2, bb_clk2_a, 2);
DEFINE_CLK_SMD_RPM_XO_BUFFER_PINCTRL(msm8998, bb_clk3_pin, bb_clk3_a_pin, 3);

	[RPM_SMD_BB_CLK1] = &msm8998_bb_clk1,
	[RPM_SMD_BB_CLK1_A] = &msm8998_bb_clk1_a,
	[RPM_SMD_BB_CLK2] = &msm8998_bb_clk2,
	[RPM_SMD_BB_CLK2_A] = &msm8998_bb_clk2_a,
	[RPM_SMD_BB_CLK3_PIN] = &msm8998_bb_clk3_pin,
	[RPM_SMD_BB_CLK3_A_PIN] = &msm8998_bb_clk3_a_pin,


Regards.
