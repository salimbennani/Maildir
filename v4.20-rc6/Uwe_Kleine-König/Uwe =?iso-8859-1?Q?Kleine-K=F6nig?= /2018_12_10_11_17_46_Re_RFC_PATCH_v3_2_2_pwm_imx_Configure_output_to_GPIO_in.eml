Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 19:36:10 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 86284580297;
	Mon, 10 Dec 2018 03:17:58 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 03:17:58 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3ArnuzPxViXxpM6wHHlxe2pxZvCOfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGAvadThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGo2y?=
 =?us-ascii?q?YYsRAeQcPuhYoYbyqEcTohWxBwajCvjvyidKi3Ltwa030P4sHR3a0AE6Hd8Dtm?=
 =?us-ascii?q?nfotXvNKcVVOC41KfHzDvdYPhL3Dn97JbHchEnof6SRL5+dMzJyU8uFwPKk16d?=
 =?us-ascii?q?rpHlMymW1uQJrWeb7uxgWvy2h24krAF+vD6vxsYjioTSnoIa1FbE9SpkwIYpP9?=
 =?us-ascii?q?24T0h7Yd+rEZdKqi6VKZJ7T8U/SG9mvyY6z6cJuZ+9fCUS0JQo2Rjfa/Oac4iU?=
 =?us-ascii?q?+BLjU+CRITZ3hX5/Zb2wmRC/+lWjxO3kTsS4zkpGoy5fntXRuH0ByQbf5tWER/?=
 =?us-ascii?q?dh5Eus2DSC2xjN5u1YPUw4iK/WJp8jz7Esk5cesEbOEjPzlUnrkKOaakAp9vW1?=
 =?us-ascii?q?5OniZ7jpuoOQOolpgQ/kKKsugNawAeEgPwgOQWeb/eO82aX9/U32XrpKlOc6kq?=
 =?us-ascii?q?rHv5DAI8QUuKq5DxVS0oY55BazFzam0NIGknkbNF9JZg6LgozzN13TLv30E+2z?=
 =?us-ascii?q?j0mvnTt33fzLP7/sDo3ILnfZkbfhebh961RbyAo21d1f45NUCrccIPP8Q0Pxt8?=
 =?us-ascii?q?LXDgU/MwOqx+brEdJ9140YWW2RGK+UK73SsVCW6eI1OeWMZ5EauCz7K/c74/7i?=
 =?us-ascii?q?l3g5mUUSfaWxx5sYdGi4Huh6I0WeeXfshtYBEWQUsQYkQ+3qlUaPUTpSZ3a0Qq?=
 =?us-ascii?q?I96Ss3CIOgDYffWI+thKaN0zu8Hp1TfmpGEEyDEW/0d4WYXPcBcCKSLdVgkjwY?=
 =?us-ascii?q?T7ehTJUt1RGztADgzbpnIfHZ+ikZtZLlydh06PfflRA09TxoEcud13uBQH1znm?=
 =?us-ascii?q?MNXzU2xrxwoVRhylef1qh1m/5YFdtN6P9TUQc6Mpjcz+p9C93pXgLBf9GJSEup?=
 =?us-ascii?q?Q9m8ADExSM4xzMEKY0pnB9qiiRXD1TKwA7AJj7yLGIA08qXE0nfrPMZ9y3HG1K?=
 =?us-ascii?q?o7g1k8WMRPN3arhqp+9wjVGo7InF+Vl6esdaQAwiHN8H2PwnaJvEFdSARwS7nK?=
 =?us-ascii?q?XWgDZkvKqtT0/kDCQKWoCbg9NgtByNSNKq1FatDyiVVGRfHjOMnRYm6rmmewAw?=
 =?us-ascii?q?qIya2IbIbwZ2od2yDdAlAekw8P5XaGKRQ+BiC5rm3DFjNuC0zgb1ns8eZkrnO7?=
 =?us-ascii?q?VVE7zweNY01l1Lq1/xoViOeYS/MS2LIEpSggpy91HFa7w9LZFd6AqxB9c6VbZN?=
 =?us-ascii?q?M3+E1H2n7BtwxhIpygKLhviUMEfARpoUzizRV3BZ9GkcgxsnwqyhF/KaaZ0FNH?=
 =?us-ascii?q?ajOZ0or8OrzRKmnu4h+vb7Ta1U3Z0NaT4q0P8ug3q03/vAG1EUov62ln09hQ03?=
 =?us-ascii?q?ub+pXKDAoTXYjtUkot8Bh6vbXaYig754PbznBsNai0sjnf29MmHuclyxCgf8tB?=
 =?us-ascii?q?P6OADgP9D8oaB822Iuwwh1epdg4EPPxV9KMsJcymc+WJ2aG1M+dghj6plnlH75?=
 =?us-ascii?q?1n3UKK9Cp8TfDI0o0Bw/GZ2AuHSjj9gE2gssDxhYBLezUSEnCjxijjAY5bfrdy?=
 =?us-ascii?q?cpoTCWeyP823wc1zhp7wW3JC6FGvHVIH2M+zdhqUYFzwxglQ1UURoXy6liq01T?=
 =?us-ascii?q?10kzc1rqWB2CzC2fjtdB0COmRTXmltkU/sIZSoj9AdREWodQkpmwe/6kbg2qdb?=
 =?us-ascii?q?o75zL2/NTkdSfij6Nn1tXbG0trWffcFP8pQosSNMXeS4YFCaTKP9ohQA3yPiGW?=
 =?us-ascii?q?te2C40dzWwtprlmBx6jXqXLGxvo3rBZcFw2RDf6cTcRP5QxDYHRDN0iSLKBli6?=
 =?us-ascii?q?JNSp+dSUl5HesuGxTW6hV5tTcTX1woOErie0+WpqARinlfCphtLnCRQ60TP819?=
 =?us-ascii?q?RyVyXHtgz8Yoro16S9K+5nZVNnBFz/68p7HIFxjI0wiYoU2XgbgJWV4HUGnX3y?=
 =?us-ascii?q?MdVdxaLxcn4NSSQXzN7S5QjvwFdjIW6Rx4LlSnWdxdNsZtmgbWMRwC497cFKCK?=
 =?us-ascii?q?GP4bxAnCt1pEe4rA3Lbfh8mDcd1eUh6HoAj+4Vvwotyz2XAqoOEklAISzsixOI?=
 =?us-ascii?q?4si9rKpNZWaja7iw1FdkktCnA7GPuQVcWHf/epc/Ei589MR/MFTQ0HLt7oHoYs?=
 =?us-ascii?q?XfbdUWtheMiRfPk/BVKI4tlvoNnSdnPGP9vX4/xOIhgx1hw4q6vJSZJGV35622?=
 =?us-ascii?q?HARYNjLuasMX+zHti7ten8mM04CuGJVhBisEXJ/yQf20FzISsOztNxySHz0ktn?=
 =?us-ascii?q?ebBb3fEBeD6EdhqnLDCZGqOGuRJHkE1tViXxidKVdbgAAVWjU6g5E4GhqrxMzn?=
 =?us-ascii?q?bEd2+DQR6kTkpRtLz+JiLwP/XXvHpAe0djc0T4CSIwFM4QFF40fVLNaS7uZuHy?=
 =?us-ascii?q?xD+p2hrQqNKnGUZghSDGEJXFCECE7nPrW0+dbA9O2YDPKkL/TSebWOtfBeV/CQ?=
 =?us-ascii?q?yJKtyIRm+iiDNt6VMnl+FfE72VdDXXNkG8TfgToPUDcalybMb86duRe99Td7rs?=
 =?us-ascii?q?G58PT3Rg3v4ZGDBKdVMdVq4xq2m7uMN/aMhCZlLjZVzpMNxXjVyLgGwV4dkSdu?=
 =?us-ascii?q?eyO2EbQHsy7NQ7ndmqtWDx4ddiNyO9FE76M63glRJ8Hbjsn52aJ/jv4wE11FT0?=
 =?us-ascii?q?Dumtm1ZcwWJGGwLFPHC1iKNLSFJj3Lwtv7YaCmSb1Xg+VbqQewuSuAE0L4OjSD?=
 =?us-ascii?q?lj/pVw2gMO1WjSGbOgBet5+5chp3FWfjS9fmYAWhMNBrlT023aE0hnTSOGEGLD?=
 =?us-ascii?q?hzaFlNoaOQ7C9ChvV/GndM7n5kLemChiaY4PPUKpcQsft3HCt0k/hW72g9y7tQ?=
 =?us-ascii?q?9CtEXuB6mDPOrt5ypFGrivWPyjtiUBZUtjlHnp6EvUV8NqXf7ZRAXXfE/BQQ7W?=
 =?us-ascii?q?SfERgKpt1lCsHxtKBU0NTAiKXzKDJa+dLO4cQcH9TUKN6AMHc5MRvmAjjUDA4E?=
 =?us-ascii?q?TT6tLW7ehkxdn+uU9n2atZU6rpnsmJwTSr5UTlA1F/UaClh7E9wGOpt4QjQkkb?=
 =?us-ascii?q?vIxPIPsES5r5DaDOBbtZDOUrrGJPTkKD+dy4dDZBID6aLjKooPcIb83hoxREN9?=
 =?us-ascii?q?mdH3BEeYftRAoytsKyyqpkRCuCxjCG431kPjZ0au53IVFPGchhMwhRZie+Mr9S?=
 =?us-ascii?q?eq71phdQmCnzc5jERkwYatujuWajOkaf7oBYw=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BTAAD7Sg5ch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBAYEvgTmBAoQhlCaCDRRomEgUGAcMAYdqIjcGDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDEIBDgGBZCQBgmIBAgMBAiAECwFGBgkBAQgCGAICBSECAgMML?=
 =?us-ascii?q?RsGGBaDBgGCAQEDAYkhm1B8M4ofgQuLFoIWgRGCFEk1iAWCVwKLKYpLiixVBwK?=
 =?us-ascii?q?BFZAvI4lxh0yZMIFcgXhxgzwIgh4Xg32KIT+BNwEBgyWJJAEB?=
X-IPAS-Result: =?us-ascii?q?A0BTAAD7Sg5ch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBAYE?=
 =?us-ascii?q?vgTmBAoQhlCaCDRRomEgUGAcMAYdqIjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?EIBDgGBZCQBgmIBAgMBAiAECwFGBgkBAQgCGAICBSECAgMMLRsGGBaDBgGCAQE?=
 =?us-ascii?q?DAYkhm1B8M4ofgQuLFoIWgRGCFEk1iAWCVwKLKYpLiixVBwKBFZAvI4lxh0yZM?=
 =?us-ascii?q?IFcgXhxgzwIgh4Xg32KIT+BNwEBgyWJJAEB?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="66089427"
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 10 Dec 2018 03:17:56 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727399AbeLJLRy (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 06:17:54 -0500
Received: from metis.ext.pengutronix.de ([85.220.165.71]:51555 "EHLO
        metis.ext.pengutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727384AbeLJLRx (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 06:17:53 -0500
Received: from ptx.hi.pengutronix.de ([2001:67c:670:100:1d::c0])
        by metis.ext.pengutronix.de with esmtps (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256)
        (Exim 4.89)
        (envelope-from <ukl@pengutronix.de>)
        id 1gWJZL-0004uF-Uc; Mon, 10 Dec 2018 12:17:47 +0100
Received: from ukl by ptx.hi.pengutronix.de with local (Exim 4.89)
        (envelope-from <ukl@pengutronix.de>)
        id 1gWJZK-0002Nl-B4; Mon, 10 Dec 2018 12:17:46 +0100
Date: Mon, 10 Dec 2018 12:17:46 +0100
From: Uwe =?iso-8859-1?Q?Kleine-K=F6nig?= 
        <u.kleine-koenig@pengutronix.de>
To: =?utf-8?B?Vm9rw6HEjQ==?= Michal <Michal.Vokac@ysoft.com>
Cc: Thierry Reding <thierry.reding@gmail.com>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "linux-pwm@vger.kernel.org" <linux-pwm@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Lukasz Majewski <l.majewski@majess.pl>,
        Fabio Estevam <fabio.estevam@nxp.com>,
        Lothar =?iso-8859-1?Q?Wa=DFmann?= <LW@karo-electronics.de>,
        Linus Walleij <linus.walleij@linaro.org>
Subject: Re: [RFC PATCH v3 2/2] pwm: imx: Configure output to GPIO in
 disabled state
Message-ID: <20181210111746.36zyedeaajfcdfeh@pengutronix.de>
References: <1544103655-104466-1-git-send-email-michal.vokac@ysoft.com>
 <1544103655-104466-3-git-send-email-michal.vokac@ysoft.com>
 <20181206135902.un2nbreqfmi6mpd6@pengutronix.de>
 <01aaa6ff-fb3e-37a7-0e72-099ad013ee2a@ysoft.com>
 <20181206161622.okpfiecfphar77jk@pengutronix.de>
 <8b88d225-efc7-623a-d1a6-8b3cfcfd5e07@ysoft.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <8b88d225-efc7-623a-d1a6-8b3cfcfd5e07@ysoft.com>
User-Agent: NeoMutt/20170113 (1.7.2)
X-SA-Exim-Connect-IP: 2001:67c:670:100:1d::c0
X-SA-Exim-Mail-From: ukl@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de); SAEximRunCond expanded to false
X-PTX-Original-Recipient: linux-kernel@vger.kernel.org
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 10, 2018 at 11:15:05AM +0000, Vokáč Michal wrote:
> On 6.12.2018 17:16, Uwe Kleine-König wrote:
> > On Thu, Dec 06, 2018 at 03:37:55PM +0000, Vokáč Michal wrote:
> >> On 6.12.2018 14:59, Uwe Kleine-König wrote:
> >>> On Thu, Dec 06, 2018 at 01:41:31PM +0000, Vokáč Michal wrote:
> >>>
> >>> Can it happen, that pinctrl_pins_pwm is PTR_ERR(-EPROBE_DEFER)?
> >>
> >> No. The pinctrl_lookup_state either returns pointer to the pinctrl state
> >> or ERR_PTR(-ENODEV). But I do not explicitly test the pinctrl_pins_pwm
> >> for PTR_ERR(-EPROBE_DEFER), or do I?
> > 
> > You don't, I just wondered if this could happen and the function should
> > return -EPROBE_DEFER in this case, too.
> 
> OK.
> 
> >>> Maybe you only want to ignore PTR_ERR(-ENODEV) and for example propagate
> >>> -EIO? I think you want to put the gpio if the failure is because there
> >>> is a pinctrl related error.
> >>
> >> I think that is what I am doing. In case the GPIO is not ready the probe
> >> is deferred. In case of any other error with the GPIO or pinctrl failure
> >> I put the pinctrl. Or maybe I do not really understand what you mean.
> > 
> > Yes, you put the pinctrl, but not the GPIO. I.e. you're not undoing
> > devm_gpiod_get_optional(). Maybe only do this if the pinctrl stuff
> > succeeded to not touch the GPIO if it won't be used?
> 
> OK, I agree it seems better to get the pinctrl first and if it succeeds
> only then try to get the GPIO. In that case I need to use the non-optional
> variant of devm_gpio_get(). Note that then I do not really need to put the
> GPIO in the error path as it means I did not get it.
> The code would look like:
> 
> +static int imx_pwm_init_pinctrl_info(struct imx_chip *imx_chip,
> +				      struct platform_device *pdev)
> +{
> +	imx_chip->pinctrl = devm_pinctrl_get(&pdev->dev);
> +	if (IS_ERR(imx_chip->pinctrl)) {
> +		dev_dbg(&pdev->dev, "can not get pinctrl\n");
> +		return PTR_ERR(imx_chip->pinctrl);
> +	}
> +
> +	imx_chip->pinctrl_pins_pwm = pinctrl_lookup_state(imx_chip->pinctrl,
> +							  "pwm");
> +	imx_chip->pinctrl_pins_gpio = pinctrl_lookup_state(imx_chip->pinctrl,
> +							   "gpio");
> +
> +	if (IS_ERR(imx_chip->pinctrl_pins_pwm) ||
> +	    IS_ERR(imx_chip->pinctrl_pins_gpio)) {
> +		dev_dbg(&pdev->dev, "pinctrl information incomplete\n");
> +		goto out;
> +	}
> +
> +	imx_chip->pwm_gpiod = devm_gpiod_get(&pdev->dev, "pwm", GPIOD_IN);
> +	if (PTR_ERR(imx_chip->pwm_gpiod) == -EPROBE_DEFER) {
> +		return -EPROBE_DEFER;
> +	} else if (IS_ERR(imx_chip->pwm_gpiod)) {
> +		dev_dbg(&pdev->dev, "GPIO information incomplete\n");
> +		goto out;
> +	}
> +
> +	return 0;
> +
> +out:
> +	devm_pinctrl_put(imx_chip->pinctrl);
> +	imx_chip->pinctrl = NULL;
> +
> +	return 0;
> +}

This looks right.

> >>> ISTR that there was a patch that implements get_state for imx. Is there
> >>> a dependency on that one? Otherwise the state returned by
> >>> pwm_get_state() might not be what is actually configured.
> >>
> >> No, it should be independent. One can go without the other. I tested all
> >> three combinations (mainline with .get_state, mainline with this series,
> >> mainline with .get_state AND this series) and got the expected results.
> >> Without the .get_state() patch the core always returns the default which
> >> is disabled state so the gpio pinctrl state is selected in probe.
> > 
> > Without .get_state it won't be possible to smoothly take over a running
> > PWM.
> 
> But that is exactly how the current pwm-imx code works, right?

But then at least the pwm would run until the first consumer
reconfigures it.
 
Best regards
Uwe

-- 
Pengutronix e.K.                           | Uwe Kleine-König            |
Industrial Linux Solutions                 | http://www.pengutronix.de/  |
