Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:52:49 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DDA625804C1
	for <like.xu@linux.intel.com>; Wed,  5 Dec 2018 05:16:42 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga005-1.fm.intel.com with ESMTP; 05 Dec 2018 05:16:42 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AzCQJShGicjc5MB28noa+z51GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p869bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJWSJPAp2y?=
 =?us-ascii?q?YYgNAOoPOuZXoJXyqVQToxumBwSiBuzixiJGi3Pqw6I6yP8sER3E0QE6A94CrG?=
 =?us-ascii?q?jYoMvzOawPUe611q7IzTDbYv5I3jf98o7IfQ4lofGNR717bMjfyVQzGAPGk16d?=
 =?us-ascii?q?rpDqPzSV1uQQr2eb7PFtVfixhGE6qwF+uCSvyt0whYnOg4IY01bJ/jh3zoYyIN?=
 =?us-ascii?q?23Uk97Ydi8HZtTqS6aLY12Td0mQ21yvyY60LIGtYa0fCgL1JQnxwPfZOedf4eU?=
 =?us-ascii?q?5RLjUeCcKip7inJ9YL+zmQq+/Eu6xuHhS8W500xGojRLn9TMrHwByh7e5tCZRv?=
 =?us-ascii?q?dh+kqtwyuD2g7N5u1ePEw5lqTWJ4Q/zrMzkJcYrF7NETXsmErsia+bbkUk9fas?=
 =?us-ascii?q?6+Tgerjmop6cN5RoigHlKKgulcq/AfkiPggJRWib9vyw1Lzl/ULnXLVHluM6nr?=
 =?us-ascii?q?XavZzAOMgXu620DxVL3ost6xuzFSqq3dYAkXkCNl1FeRaHj4bzO1HJJfD1Fe6/?=
 =?us-ascii?q?jEqpkDd23vzJI6PuAovTIXjHibvuZrF961NayAUv099f/JVYCrUAIPLwRED9rt?=
 =?us-ascii?q?PZDgIhPgywwubnDsh914wEVWKOBK+ZLL3dsVuS6u0zJOmMYZQYuDD6K/gj6P7u?=
 =?us-ascii?q?i2I5lUUafamz0psbcGq4Eeh+I0WFfXrshc8MEWMLvgo9UuPmklKDUSNIana2Xq?=
 =?us-ascii?q?I84Cw7CY28AYfCQICtnKKO3COhEpJKYWBGDwPELHHzao/RW+sQcDnAZYhlkycY?=
 =?us-ascii?q?Tv6nTIku0wzosxX1jL9uL+7R8ytfsor/1d9z/KrKmBQvsDB5EcmZgFyLVHx+y2?=
 =?us-ascii?q?YBRjsq2/JmrElgj1uOz6V8xuZVDMFe/O9hVAA8OpjBietgBIfpRwjDc9yVHUug?=
 =?us-ascii?q?WcisGjorT9g8kOMJNmZ0H9SmxijKxCuhS+sNnqeKD7Qw86TBzz7wLcM7wHHDgv?=
 =?us-ascii?q?oPlV4jF+BIL2urgq92vyjODI2Bx06el7uhdowG0SLN/XvFxm2L6hILGDVsWLnI?=
 =?us-ascii?q?CChMLnDdqs70swabF+ej?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALAABqzgdchxHrdtBkGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMIE5gSmMcYsvgg2ZPxQYCwmHUiI3Bg0BAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECNwwKKQMCAQECBgEBC?=
 =?us-ascii?q?hgmCAMBUwYTBYMcAYF5CAEECqYUhUCEZgWMHhdyTj+BEYMSgwUZAoc8AolkgT6?=
 =?us-ascii?q?EWZBbCYcDijQLGIFbiAU2hxmNRiyLDIFcgXczGggbFYMnhgiFFIVAQDEBgQYci?=
 =?us-ascii?q?QqBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0ALAABqzgdchxHrdtBkGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMIE5gSmMcYsvgg2ZPxQYCwmHUiI3Bg0BAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgbDiMMgjYFAgMaAQaCWwEBAQECAQECNwwKKQMCAQECBgEBChgmCAMBUwYTBYM?=
 =?us-ascii?q?cAYF5CAEECqYUhUCEZgWMHhdyTj+BEYMSgwUZAoc8AolkgT6EWZBbCYcDijQLG?=
 =?us-ascii?q?IFbiAU2hxmNRiyLDIFcgXczGggbFYMnhgiFFIVAQDEBgQYciQqBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="42835674"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 05 Dec 2018 05:16:35 -0800
Received: from localhost ([::1]:34174 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUX2Y-0001n3-If
	for like.xu@linux.intel.com; Wed, 05 Dec 2018 08:16:34 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:34225)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <cohuck@redhat.com>) id 1gUWgv-0002bF-Db
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:54:16 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <cohuck@redhat.com>) id 1gUWgs-0006U3-Rz
	for qemu-devel@nongnu.org; Wed, 05 Dec 2018 07:54:13 -0500
Received: from mx1.redhat.com ([209.132.183.28]:53402)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <cohuck@redhat.com>)
	id 1gUWgs-0006TS-Ix; Wed, 05 Dec 2018 07:54:10 -0500
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.phx2.redhat.com
	[10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id BD8D530041F7;
	Wed,  5 Dec 2018 12:54:09 +0000 (UTC)
Received: from gondolin (dhcp-192-187.str.redhat.com [10.33.192.187])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 6177A608C4;
	Wed,  5 Dec 2018 12:54:05 +0000 (UTC)
Date: Wed, 5 Dec 2018 13:54:02 +0100
From: Cornelia Huck <cohuck@redhat.com>
To: Halil Pasic <pasic@linux.ibm.com>
Message-ID: <20181205135402.33c2b22d.cohuck@redhat.com>
In-Reply-To: <20181204160236.54de2784@oc2783563651>
References: <20181122165432.4437-1-cohuck@redhat.com>
	<20181204133810.66e8cfe5@oc2783563651>
	<20181204141130.06496b9b.cohuck@redhat.com>
	<20181204160236.54de2784@oc2783563651>
Organization: Red Hat GmbH
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.43]);
	Wed, 05 Dec 2018 12:54:09 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH 0/3] vfio-ccw: support hsch/csch (kernel
 part)
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Jason J . Herne" <jjherne@linux.ibm.com>, linux-s390@vger.kernel.org,
	Eric Farman <farman@linux.ibm.com>, kvm@vger.kernel.org,
	Pierre Morel <pmorel@linux.ibm.com>, qemu-s390x@nongnu.org,
	Farhan Ali <alifm@linux.ibm.com>, qemu-devel@nongnu.org,
	Alex Williamson <alex.williamson@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Tue, 4 Dec 2018 16:02:36 +0100
Halil Pasic <pasic@linux.ibm.com> wrote:

> On Tue, 4 Dec 2018 14:11:30 +0100
> Cornelia Huck <cohuck@redhat.com> wrote:
> 
> > On Tue, 4 Dec 2018 13:38:10 +0100
> > Halil Pasic <pasic@linux.ibm.com> wrote:
> >   
> > > On Thu, 22 Nov 2018 17:54:29 +0100
> > > Cornelia Huck <cohuck@redhat.com> wrote:
> > >   
> > > > [This is the Linux kernel part, git tree is available at
> > > > https://git.kernel.org/pub/scm/linux/kernel/git/kvms390/vfio-ccw.git vfio-ccw-caps
> > > > 
> > > > The companion QEMU patches are available at
> > > > https://github.com/cohuck/qemu vfio-ccw-caps]
> > > > 
> > > > Currently, vfio-ccw only relays START SUBCHANNEL requests to the real
> > > > device. This tends to work well for the most common 'good path' scenarios;
> > > > however, as we emulate {HALT,CLEAR} SUBCHANNEL in QEMU, things like
> > > > clearing pending requests at the device is currently not supported.
> > > > This may be a problem for e.g. error recovery.    
> > > 
> > > I'm wondering: what about MODIFY SUBCHANNEL? Do we plan to add MSCH
> > > as well or is it supposed to remain 'userspace emulated'? AFAIR MSCH
> > > may have an effect on error recovery as well.  
> > 
> > I think that would require a deeper change, as we have the requirement
> > to enable the subchannel before handing it to userspace. IOW, the guest
> > does not cause the subchannel to be enabled/disabled, but the host does.
> >   
> 
> My point is, when the subchannel is disabled, 'firmware' is responsible
> for suppressing interrupts and error conditions, and also for
> doing the appropriate recovery procedure, so to say under the hood.

I don't think there's actually much of a 'recovery' possible at a
subchannel level (other than 'have you tried turning it off and on
again?'); the interesting stuff is all at the device-specific level.

> 
> I think Jason has discovered some problems related to this while doing
> his DASD IPL with vfio-ccw work, but I don't quite remember any more.

cc:ing Jason, in case he remembers :)

> IMHO it may be possible to emulate enable/disable, but it seems way more
> error prone and complicated, than letting the guest enable/disable the
> host subchannel.
> 
> I have no idea what was the reason for going with the initial design.
> I would appreciate any hints or explanations, but I'm well aware that it
> was a long time ago.

I don't really remember either, and any non-public mails from that time
are inaccessible to me :(

It *might* be an artifact of the original design (which operated at the
ccw_device rather than the subchannel level), though.

> > Parameters (like for channel measurements) are a different game. It is
> > something we should look into, but it will need a different region.  
> 
> Yes emulation only channel measurements seem even less likely than proper
> enable/disable. And 'that would need a different' region helps me
> understanding the scope of async_cmd_region. Maybe we should reconsider
> the comment '+ * @cmd_region: MMIO region for asynchronous I/O commands
> other than START'.

What do you think is wrong with that comment?

> > > BTW I would like to have the concurrency discussion sorted out before
> > > I proceed with my review, because reviewing the stuff without a fair idea
> > > of what exactly are we trying to achieve would yield poor results.  
> > 
> > I'm not sure what is unclear about what we're trying to achieve (enable
> > the guest to issue halt/clear on real hardware)?  
> 
> Yeah, that is perfectly clear, but it ain't the complete story. E.g.
> are subsequent commands blocking until the preceding command finishes
> is part of the interface. And what is good implementation depends on the
> answer. What I mean, I first need to understand how things are supposed
> to work (together) so I can double check that against the
> implementation. Otherwise all I can do is nitpicking.
> 
> To get more tangible: we are in the middle of processing an SSCH request
> (e.g. doing the translation) when a HSCH comes in. What should happen?
> Should we start processing HSCH after he instruction part of SSCH is
> done -- which currently includes translation? Or should we -EBUSY? Or do
> we abort START related activities and do the HALT stuff?

I think most of the sorting-out-the-operations stuff should be done by
the hardware itself, and we should not really try to enforce anything
special in our vfio code.

For your example, it might be best if a hsch is always accepted and
send on towards the hardware. Probably best to reflect back -EAGAIN if
we're currently processing another instruction from another vcpu, so
that the user space caller can retry. Same for ssch, if another ssch is
already being processed. We *could* reflect cc 2 if the fctl bit is
already set, but that won't do for csch, so it is probably best to have
the hardware figure that out in any case.

If I read the code correctly, we currently reflect -EBUSY and not
-EAGAIN if we get a ssch request while already processing another one.
QEMU hands that back to the guest as a cc 2, which is not 100% correct.
In practice, we don't see this with Linux guests due to locking.

> > But yes, we need to sort out that concurrency thing; I'm currently
> > unsure if the core should do some things as well or if it's more of
> > a vendor-driver thing.
> >   
> 
> By core you mean vfio-mdev core? If yes, I think it is a vendor-driver
> thing: limiting concurrency for all vfio-mdev  does not make sense
> IMHO.

Also generic vfio. But I'm still unclear which guarantees we have. I
suspect none; I'm wondering whether other vfio devices might have
issues as well.

