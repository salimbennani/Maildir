Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:56:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga005.fm.intel.com (fmsmga005.fm.intel.com [10.253.24.32])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id AEDC95804C1;
	Sat,  8 Dec 2018 07:37:20 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga005-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 07:37:19 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A2MpBnBfDLwvfEeVFVk8KS6GglGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6/ZBGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPMuRWr4f6qFQBsRSwBRK0BO7t0TJImn370Lcm3+k7DQ3KwgotFM8Ovn?=
 =?us-ascii?q?TOq9X1Mb8fX+SyzKnO1zrDc/NW1i376IPVbB0uu/SMUqxqccrWz0kkCgTIjleR?=
 =?us-ascii?q?qYP5IT+Y2P8As2uF4Op6U+KglWonpxt2oji1ycchk4/EjZ8bxFDD8CV22oc1Jd?=
 =?us-ascii?q?ugRUFhZ96rCp9QtyaVN4dsXswiRGRotSAnwbMFoZ62ZDYGxIgjyhLFdvCKfZaE?=
 =?us-ascii?q?7gj+WOuSPTt0nnNodbCnixux7ESs0OnxW8iu3FpUoCdIncPAum0C2hHQ7MWMV+?=
 =?us-ascii?q?Fz8V272TmV0gDe8uFELl4wlarcM5Mh3LEwmYQJsUjZHS/5hl/2jKmIeUUg4OSo?=
 =?us-ascii?q?7P7nYrr+qp+dMY97lB3+P7wwlsCjBek0KBUCUmaF9eimybHu/lH1TK9Lg/A0iq?=
 =?us-ascii?q?XZtYrVJcUfpq63GQ9V1YMj5g67Dzen1tQYgHYGIEtGeB2ZlYjpPU/BIPThAfe4?=
 =?us-ascii?q?jVWslilkx+rdM73/DZXCMGLDnK3ifblj8U5czhQ8zdRF65JTELEBL+r/WlXtu9?=
 =?us-ascii?q?zAEh85Lwu0zv7jCNV81YMRR3iDA6CEMK7JtV+I5+QvI/SDZYMPuTb9LeQl6ODq?=
 =?us-ascii?q?jXMjhVAdeqyp14MNaH+kBvRmP1mZYX30j9cBC2gKvxY+Q/btiFGYUT5Temy9X6?=
 =?us-ascii?q?Qz5jwgDIKmDIHDRp2igbCb3Se7GIFWaX5CClyWDXjocICEUe8WaC2OOs9hjiAE?=
 =?us-ascii?q?Vb+5Ro8j0hGhqhX2y7lgLurS/C0Ysonu1Nx05+3ViBEz+iZ4D8Wb02GRUW50mn?=
 =?us-ascii?q?kESCMx3KB6uUZ90EuM0bBkg/xEEtxe/+lGUhw6NZ7bzOx2EcryVRjDftqSTFam?=
 =?us-ascii?q?Q9OmASw+T94rwt8OZVp9FMumjhzZwyWqBLoVnaSRBJMo6qLcw2TxJ8FlxnbFzq?=
 =?us-ascii?q?YhiUMqQs9ONWK8gK5/+BPeB4rIk0Wfiqarer4Q3C/L9Gef02WOuFtUXxJ3UaXA?=
 =?us-ascii?q?RXoffFfZrczl5kPeSL+jEakoPRFfycGcMKdKasfmjVNdRPj9PtTSZGaxm2S1BR?=
 =?us-ascii?q?aM3b6MaIvqe2MA3CTSEkQEkgYT/WqYOgg6HCuuv2XeDDl2H1L1f0zs6fV+qG+8?=
 =?us-ascii?q?TkIs0g6FdVNh2KSv9h4Vn/OcTegT0awCuCo6rzV0HVC938/ZCtaapgpherlcbs?=
 =?us-ascii?q?054FtdyW3ZsAl9NIS6L69+nl4ebxh3v0T22hVrC4VAlM8qrG8qzAtyM66YzElN?=
 =?us-ascii?q?dzSC3ZD0O73XLGby8Qura67X3FHezdmX9r0O6PQ+t1XsogWpGlA+/HVg1tlfy2?=
 =?us-ascii?q?Gc6YnSDAoOTZLxVV46+AJ+p77EbSgy+YPV2Wd3PqmprzDNwdQpBOgiyha+ZNpf?=
 =?us-ascii?q?NKKEFAnvE8wVHcSuKeoqm0S3YRIAJuxd6Kk0P8a+ffucxKGrJPpgnC6hjWlf4I?=
 =?us-ascii?q?F9z1iA+DZmRu/J35YK2feY3gScWjf4jVehtN33mI9eaTETGGq/1TbrBIpLaqJu?=
 =?us-ascii?q?eoYLDH+kI9erydVmm57tR3lY+Ua5B1MHxMCmYwCSYEH63QFK00QYv2anmSqhwz?=
 =?us-ascii?q?NoiT4pqreQ0zLUw+TlchoKIWpLRGhkjVfxLom4ldEaXE60bwc3kBup/1r1x69e?=
 =?us-ascii?q?pK5nNWncXV9IfzTqL2FlSqaxtruCb9RP6Z8yqiVXTeK8bEueSr78pRsaziziE3?=
 =?us-ascii?q?FfxDA9azGlpJH5kwZmh2KaKXZ5tGDZdt1oxRfD+NzcQuZc3jgcSyliijnXBV+8?=
 =?us-ascii?q?M8Oy/dqOlJfDseG+V2S/WZ1VaiTryYKAtC2m5WxlGxG/nvazmsH5Hgg+yyP0y9?=
 =?us-ascii?q?5qVSDQphbmfobrz7i6Mf5gfkRwBF7z8c16Fpt8kosxgpEdwnwahpST/Xoanmb/?=
 =?us-ascii?q?K9Rb2aTibHUTQT4H2cLa4A/g2Ed7NHKG25r5VmmBwstmf9S6YXkZ2iMn48BKFa?=
 =?us-ascii?q?eb9rpEnSRur1q8rALRZ+V9nzgHxfsv7n4an/8GuA43wiqBBbASGFFSPTbwmBSQ?=
 =?us-ascii?q?89C+sKJXaX6qcbix10pxh8qtDb+crQFHRHb2ZI0iEjRu4cVlP1LBy3nz6oDieN?=
 =?us-ascii?q?nNYtMfrByUkxHcj+dLLJI9jOYFhS1iOWjlp30q1/Y7jQBy3ZG9pIWHN2Jt/Kej?=
 =?us-ascii?q?Dh9ZLDL1Yd4T+ir2jaZfhcuW24GvHpN8GjQERpfoTPSoEC4MuvTjLQqBDDo8qn?=
 =?us-ascii?q?KDE7rFAQCf8Ftmr27IE52zLH6YPn4ZzdF/RBWHIExfnRsZXDE7np4/CwCry9bt?=
 =?us-ascii?q?cEZ/5jAN+FH4rgFAxf5vNxn6Sm3fvhunai8oSJiDKxpb9gNC6F3QMcOA9eJ/BT?=
 =?us-ascii?q?1Y8oeirAyQKWybegJIAnsSWkGfA1DjP7+u5cTP8uSCB+q+KefObquKqeBES/iI?=
 =?us-ascii?q?wpev2JN8/zmQLsWPImViD/oj10tDWnB5Bt3ZmygVRCwRjS7NdMmbpBGz+iBsqs?=
 =?us-ascii?q?C/8fLrWB/g5IeVCrtSN8lv9A6ygauZK+GQgyN5Iy5C1pwQ3X/I1KQf3FkKhiFu?=
 =?us-ascii?q?aTatELcAtS3MTK7Kma9XFRkbayxtO8tS8qI8xRJAOcraitPzy755geQ5C1ZDVV?=
 =?us-ascii?q?z9hM6pYdYGLH26NFPCHEyLLqiJJSXXw8HrZqOxUadfjPhPuB2qpzmaE1XvPjCC?=
 =?us-ascii?q?lzTyUxCvMOdMjDyUPRBEuYG9dAptBnbnTN78dhK7N9p3hyUswbIonnPKKXIcMT?=
 =?us-ascii?q?9kfkNRr72Q6DlUjellF2Nd7npqM++Elj2d7+nZLJYWrPRqDj51l+Jc/HQ11b9V?=
 =?us-ascii?q?4DtYS/xynSvYtsRurE2+kumT1jpnVwJDqzZRi4KNuEViOKPZ+YFBWHbE5h0N62?=
 =?us-ascii?q?qQBg8Op9tkDN3vpq9RxsLOlKL1NDdN7dbU8dEACMjTLcLUeEYmZD/oAjXZBUMu?=
 =?us-ascii?q?RCaxNGbFmgQJlfCI/XCc6JMzsoLtn4ATYrZdXVgyGbURDUEzT/IYJ5IifDQimK?=
 =?us-ascii?q?KbhchAznO7oQPWQo0OvJHMDKm6Avj1Ljudy75eaE1bkvvDMY0PO9ijiARZYV5g?=
 =?us-ascii?q?kdGPQhKIUA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAAc5Atch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBgmmBAieME1+LMFABB4E1FIkMhG0QiTSBcxQYDQYBh10iNAkNAQM?=
 =?us-ascii?q?BAQEBAQECARMBAQEKCwkIKSMMgjYkAYJhAQEBAQEBAQECJBMGAQE3AQQBCQEBC?=
 =?us-ascii?q?hUMJQMMSAYTBYMcAYF0BQgEAQqkXoFsM4J2AQEFgTABhXgIiwWBHIEPgQeEI4F?=
 =?us-ascii?q?BgV0BAoFEhXeBLAEBiX2EFEaQcQEGAgGKQ4cBIwqRM5V+gzKBRoIOMxowgWGBT?=
 =?us-ascii?q?gmCEhiDVYUUhT9AMgGBAQMBASETixQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AOAAAc5Atch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBgmm?=
 =?us-ascii?q?BAieME1+LMFABB4E1FIkMhG0QiTSBcxQYDQYBh10iNAkNAQMBAQEBAQECARMBA?=
 =?us-ascii?q?QEKCwkIKSMMgjYkAYJhAQEBAQEBAQECJBMGAQE3AQQBCQEBChUMJQMMSAYTBYM?=
 =?us-ascii?q?cAYF0BQgEAQqkXoFsM4J2AQEFgTABhXgIiwWBHIEPgQeEI4FBgV0BAoFEhXeBL?=
 =?us-ascii?q?AEBiX2EFEaQcQEGAgGKQ4cBIwqRM5V+gzKBRoIOMxowgWGBTgmCEhiDVYUUhT9?=
 =?us-ascii?q?AMgGBAQMBASETixQBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,330,1539673200"; 
   d="scan'208";a="55504063"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 07:37:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726182AbeLHPhP (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 10:37:15 -0500
Received: from mail.kernel.org ([198.145.29.99]:38838 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726147AbeLHPhP (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 10:37:15 -0500
Received: from archlinux (cpc91196-cmbg18-2-0-cust659.5-4.cable.virginm.net [81.96.234.148])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 26B6D205C9;
        Sat,  8 Dec 2018 15:37:11 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1544283433;
        bh=LTPtZ0jsAA2NeY60LDFUERRm7eCX2CAJrtLzCW1LI3w=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=wxr0MnODsehlnw4F5uIzalG20aLDJOr+E+ldETrEB/rKYXApYKRfrLgwBFiC8Y7vs
         gMapxbSJMbKXAiHEJiS0CajgNxwzW9llyxphR6ElHNFhBpLwARhbviNIV9ZecMOfKW
         kDhJNditbzku/7sXfR8fUwVUcnMHW8vNiCsHMIWo=
Date: Sat, 8 Dec 2018 15:37:08 +0000
From: Jonathan Cameron <jic23@kernel.org>
To: Mircea Caprioru <mircea.caprioru@analog.com>
Cc: <Michael.Hennerich@analog.com>, <knaack.h@gmx.de>,
        <lars@metafoo.de>, <pmeerw@pmeerw.net>,
        <gregkh@linuxfoundation.org>, <linux-kernel@vger.kernel.org>,
        <linux-iio@vger.kernel.org>, <devel@driverdev.osuosl.org>,
        Stefan Popa <stefan.popa@analog.com>
Subject: Re: [PATCH] iio:dac:ad5686: Add AD5310R support
Message-ID: <20181208153708.4e07154a@archlinux>
In-Reply-To: <20181206133830.20488-1-mircea.caprioru@analog.com>
References: <20181206133830.20488-1-mircea.caprioru@analog.com>
X-Mailer: Claws Mail 3.17.1 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 6 Dec 2018 15:38:30 +0200
Mircea Caprioru <mircea.caprioru@analog.com> wrote:

> From: Stefan Popa <stefan.popa@analog.com>
> 
> The AD5310R is a single channel DAC with 10-bit precision, which is
> part of the same family as AD5311R, except that it uses the spi interface
> instead of i2c. The device has a built-in 2.5V reference which is enabled
> by default.
> 
> Another important difference is that the SPI write command operation is
> 16 bits long. The first four bits represent the command, while the
> remaining 12 bits are for data. In the control reg, DB9 and DB10 are used
> for power-down modes, while DB8 is the REF bit. In order to accommodate
> this change, a new regmap type was defined and checked accordingly.
> 
> Because AD5310R does not have a readback register, the read_raw operation
> will return "Operation is not supported".
> 
> Datasheet:
> Link: http://www.analog.com/media/en/technical-documentation/data-sheets/AD5310R_5311R.pdf
> 
> Signed-off-by: Stefan Popa <stefan.popa@analog.com>
> Signed-off-by: Mircea Caprioru <mircea.caprioru@analog.com>
A few comments inline, but mostly just me being fussy about patch presentation
so applied to the togreg branch of iio.git and pushed out as testing
for the autobuilders to play with it.

Thanks,

Jonathan

> ---
>  drivers/iio/dac/ad5686-spi.c | 21 ++++++++++++++++++---
>  drivers/iio/dac/ad5686.c     | 16 ++++++++++++++++
>  drivers/iio/dac/ad5686.h     |  7 +++++++
>  3 files changed, 41 insertions(+), 3 deletions(-)
> 
> diff --git a/drivers/iio/dac/ad5686-spi.c b/drivers/iio/dac/ad5686-spi.c
> index 1df9143f55e9..665fa6bd9ced 100644
> --- a/drivers/iio/dac/ad5686-spi.c
> +++ b/drivers/iio/dac/ad5686-spi.c
> @@ -19,6 +19,12 @@ static int ad5686_spi_write(struct ad5686_state *st,
>  	u8 tx_len, *buf;
>  
>  	switch (st->chip_info->regmap_type) {
> +	case AD5310_REGMAP:
> +		st->data[0].d16 = cpu_to_be16(AD5310_CMD(cmd) |
> +					      val);
> +		buf = &st->data[0].d8[0];
> +		tx_len = 2;
> +		break;
>  	case AD5683_REGMAP:
>  		st->data[0].d32 = cpu_to_be32(AD5686_CMD(cmd) |
>  					      AD5683_DATA(val));
> @@ -56,10 +62,18 @@ static int ad5686_spi_read(struct ad5686_state *st, u8 addr)
>  	u8 cmd = 0;
>  	int ret;
>  
> -	if (st->chip_info->regmap_type == AD5686_REGMAP)
> -		cmd = AD5686_CMD_READBACK_ENABLE;
> -	else if (st->chip_info->regmap_type == AD5683_REGMAP)
> +	switch (st->chip_info->regmap_type) {

This is fine, though I'd prefer it done really as rework
patch without the new device support followed by adding the support
later in the series.   I prefer to have to do minimum thinking
whilst reviewing :)

> +	case AD5310_REGMAP:
> +		return -ENOTSUPP;
> +	case AD5683_REGMAP:
>  		cmd = AD5686_CMD_READBACK_ENABLE_V2;
> +		break;
> +	case AD5686_REGMAP:
> +		cmd = AD5686_CMD_READBACK_ENABLE;
> +		break;
> +	default:
> +		return -EINVAL;
> +	}
>  
>  	st->data[0].d32 = cpu_to_be32(AD5686_CMD(cmd) |
>  				      AD5686_ADDR(addr));
> @@ -86,6 +100,7 @@ static int ad5686_spi_remove(struct spi_device *spi)
>  }
>  
>  static const struct spi_device_id ad5686_spi_id[] = {
> +	{"ad5310r", ID_AD5310R},
>  	{"ad5672r", ID_AD5672R},
>  	{"ad5676", ID_AD5676},
>  	{"ad5676r", ID_AD5676R},
> diff --git a/drivers/iio/dac/ad5686.c b/drivers/iio/dac/ad5686.c
> index 0e134b13967a..54ff76b93366 100644
> --- a/drivers/iio/dac/ad5686.c
> +++ b/drivers/iio/dac/ad5686.c
> @@ -83,6 +83,10 @@ static ssize_t ad5686_write_dac_powerdown(struct iio_dev *indio_dev,
>  		st->pwr_down_mask &= ~(0x3 << (chan->channel * 2));
>  
>  	switch (st->chip_info->regmap_type) {
> +	case AD5310_REGMAP:
> +		shift = 9;
> +		ref_bit_msk = AD5310_REF_BIT_MSK;
> +		break;
>  	case AD5683_REGMAP:
>  		shift = 13;
>  		ref_bit_msk = AD5683_REF_BIT_MSK;
> @@ -221,6 +225,7 @@ static struct iio_chan_spec name[] = {				\
>  		AD5868_CHANNEL(7, 7, bits, _shift),		\
>  }
>  
> +DECLARE_AD5693_CHANNELS(ad5310r_channels, 10, 2);
>  DECLARE_AD5693_CHANNELS(ad5311r_channels, 10, 6);
>  DECLARE_AD5676_CHANNELS(ad5672_channels, 12, 4);
>  DECLARE_AD5676_CHANNELS(ad5676_channels, 16, 0);
> @@ -232,6 +237,12 @@ DECLARE_AD5693_CHANNELS(ad5692r_channels, 14, 2);
>  DECLARE_AD5693_CHANNELS(ad5691r_channels, 12, 4);
>  
>  static const struct ad5686_chip_info ad5686_chip_info_tbl[] = {
> +	[ID_AD5310R] = {
> +		.channels = ad5310r_channels,
> +		.int_vref_mv = 2500,
> +		.num_channels = 1,
> +		.regmap_type = AD5310_REGMAP,
> +	},
>  	[ID_AD5311R] = {
>  		.channels = ad5311r_channels,
>  		.int_vref_mv = 2500,
> @@ -419,6 +430,11 @@ int ad5686_probe(struct device *dev,
>  	indio_dev->num_channels = st->chip_info->num_channels;
>  
>  	switch (st->chip_info->regmap_type) {
> +	case AD5310_REGMAP:
> +		cmd = AD5686_CMD_CONTROL_REG;
> +		ref_bit_msk = AD5310_REF_BIT_MSK;
> +		st->use_internal_vref = !voltage_uv;
> +		break;
>  	case AD5683_REGMAP:
>  		cmd = AD5686_CMD_CONTROL_REG;
>  		ref_bit_msk = AD5683_REF_BIT_MSK;
> diff --git a/drivers/iio/dac/ad5686.h b/drivers/iio/dac/ad5686.h
> index 57b3c61bfb91..19f6917d4738 100644
> --- a/drivers/iio/dac/ad5686.h
> +++ b/drivers/iio/dac/ad5686.h
> @@ -13,7 +13,10 @@
>  #include <linux/mutex.h>
>  #include <linux/kernel.h>
>  
> +#define AD5310_CMD(x)				((x) << 12)
> +
>  #define AD5683_DATA(x)				((x) << 4)
> +

I'd rather these white space changes weren't in here, but they are small
enough it's not all that important.

>  #define AD5686_ADDR(x)				((x) << 16)
>  #define AD5686_CMD(x)				((x) << 20)
>  
> @@ -38,6 +41,8 @@
>  
>  #define AD5686_CMD_CONTROL_REG			0x4
>  #define AD5686_CMD_READBACK_ENABLE_V2		0x5
> +
> +#define AD5310_REF_BIT_MSK			BIT(8)
>  #define AD5683_REF_BIT_MSK			BIT(12)
>  #define AD5693_REF_BIT_MSK			BIT(12)
>  
> @@ -45,6 +50,7 @@
>   * ad5686_supported_device_ids:
>   */
>  enum ad5686_supported_device_ids {
> +	ID_AD5310R,
>  	ID_AD5311R,
>  	ID_AD5671R,
>  	ID_AD5672R,
> @@ -72,6 +78,7 @@ enum ad5686_supported_device_ids {
>  };
>  
>  enum ad5686_regmap_type {
> +	AD5310_REGMAP,
>  	AD5683_REGMAP,
>  	AD5686_REGMAP,
>  	AD5693_REGMAP

