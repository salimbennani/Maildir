Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:55:20 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0B10C58014B
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 08:56:39 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 08:56:38 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A2SGozhdMKQ1kLRiLHS5vwrwflGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc26YhKN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRfDIOy?=
 =?us-ascii?q?b4UPCOkPM+hWoIbypVQBsRSwCxS0BO7tyDFFiWL60KMm3+s/CgHLxxAgEtAUvX?=
 =?us-ascii?q?jIsNn4OqUfXOaox6fI1zXDaPZW1C/y5ojScxAuveyHUK90ccXLykkgCR7Og1KO?=
 =?us-ascii?q?poP+OzOazOcNvHaA4up6S+2glm4npBttojS12sgsjYzJi5sTx1vZ+yt5x4M1Ks?=
 =?us-ascii?q?e5SE59edOkFJpQuDqEN4t3WMMiX3tkuCEgyr0JoZK7ZTYFyJE6xxLFbPyHaYeI?=
 =?us-ascii?q?7xT+X+iSOTd1nGxpdK68ihqo7ESs1+7xWtOq3FtEridJiMTAu3IV2xDN9sSKTu?=
 =?us-ascii?q?Fx8lqv1DqRzQzf9+JJLE4umabFKJMsxKM7mIAJvkTZBCD2nV37jK+IeUUg/eil?=
 =?us-ascii?q?8+DnYrT9pp+ALI94kA7+MqIzmsClBuQ4KAcOU3Ca+eS6yrLj4VX0TKtWgvA1iK?=
 =?us-ascii?q?XVrY3WKMcBqqKnDQJY0pwv5wu9Aju+1dQXh3gHLFZLeBKdiIjpPknDIOnmAve6?=
 =?us-ascii?q?nlSgiSpkyO7YPrL/BpXBN2PMkLD8fbZ790FT1hEzwddb55JVCbEOPuj/W0DstN?=
 =?us-ascii?q?HACh85Mgq0w/voCdln14MeX36PDbGdMK/IrVCI4ecvLvKKZI8Svjb9JP4l5+P0?=
 =?us-ascii?q?gX8+g18dcrGl3YELZ3CgAvRmP0KZbGLogtcAEmcFoBAyTeP3iFCZVT5TZnCyX7?=
 =?us-ascii?q?8z5z0hCYKmC5vDSZ6pgLCbwCi7GZhWNSh7DEuRGyLoa5mcQKVLLyaTOdN61DoD?=
 =?us-ascii?q?U7enVskmzx7psQb7z79uKK3T4jEZspT4k8F44vCWmRws+DgnMsKGzmvYSmh1mn?=
 =?us-ascii?q?8PFSY72b06rUFjx1PGy6VhnvFDCfRV4PVGVBp8MoTTmPdnAdL/UR6UY9GSVVy9?=
 =?us-ascii?q?Sc+nCzxictVk4dYVZEA1JNykgViX3SOxBKAckbOjHpE48qvAmXP2IpA5g2/L0b?=
 =?us-ascii?q?Rkg1Q4T89nM2qgiahisQ/JCMqBi0iFmrzscK0N0CPJ8E+HzGyHpkYeVxR/Aovf?=
 =?us-ascii?q?WnVKS1HXppzT4krBQvf6BL4jOwhM4dSPJqtDdpviilAQF6SrA8jXf2/kwzT4Ph?=
 =?us-ascii?q?2P3L7ZKdOyI2g=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0COAADrXgVchxHrdtBgAxsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgWWBMYE5gRYTg3mId4stgWAIJXyIFZAqFBgDEYFLhj4iOBIBAwEBAQE?=
 =?us-ascii?q?BAQIBEwEBAQoLCQgbDiMMgjYFAgMaAQaCWwEBAQECAQECIAQRDgopAwIBAQIGA?=
 =?us-ascii?q?QEKDgoCAiIEAgIDAR02BgEMBgIBAQEUgwgBgWkDDQgBBKV/fDOFQII4BAmCHIE?=
 =?us-ascii?q?LixEXgUA/gREnDIIqNYJXggRtgj2CVwKJHoZWNo9oLgmHAIcOgygGGIFbTYREg?=
 =?us-ascii?q?m8QhzuJBIVwiXmBXYF2MxoIGxWDJwmCHheIXoVeIjGBBxyHb1WBdwEB?=
X-IPAS-Result: =?us-ascii?q?A0COAADrXgVchxHrdtBgAxsBAQEBAwEBAQcDAQEBgWWBMYE?=
 =?us-ascii?q?5gRYTg3mId4stgWAIJXyIFZAqFBgDEYFLhj4iOBIBAwEBAQEBAQIBEwEBAQoLC?=
 =?us-ascii?q?QgbDiMMgjYFAgMaAQaCWwEBAQECAQECIAQRDgopAwIBAQIGAQEKDgoCAiIEAgI?=
 =?us-ascii?q?DAR02BgEMBgIBAQEUgwgBgWkDDQgBBKV/fDOFQII4BAmCHIELixEXgUA/gREnD?=
 =?us-ascii?q?IIqNYJXggRtgj2CVwKJHoZWNo9oLgmHAIcOgygGGIFbTYREgm8QhzuJBIVwiXm?=
 =?us-ascii?q?BXYF2MxoIGxWDJwmCHheIXoVeIjGBBxyHb1WBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="140545881"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 08:56:37 -0800
Received: from localhost ([::1]:50642 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTrWP-0005jz-7G
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 11:56:37 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39095)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gTqvR-0005wf-4U
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:18:26 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <eblake@redhat.com>) id 1gTqvO-0002oJ-9c
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:18:25 -0500
Received: from mx1.redhat.com ([209.132.183.28]:48910)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <eblake@redhat.com>)
	id 1gTqvN-0002nn-Tj; Mon, 03 Dec 2018 11:18:22 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 5D51F7F6A7;
	Mon,  3 Dec 2018 16:18:20 +0000 (UTC)
Received: from [10.10.120.230] (ovpn-120-230.rdu2.redhat.com [10.10.120.230])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 719066A526;
	Mon,  3 Dec 2018 16:18:16 +0000 (UTC)
To: Jason Wang <jasowang@redhat.com>, qemu-devel@nongnu.org,
	peter.maydell@linaro.org
References: <20181203100608.28538-1-jasowang@redhat.com>
	<20181203100608.28538-2-jasowang@redhat.com>
From: Eric Blake <eblake@redhat.com>
Organization: Red Hat, Inc.
Message-ID: <7a639e00-105f-cf6d-5198-9c6e022bf29d@redhat.com>
Date: Mon, 3 Dec 2018 10:18:15 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
	Thunderbird/60.3.1
MIME-Version: 1.0
In-Reply-To: <20181203100608.28538-2-jasowang@redhat.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.25]);
	Mon, 03 Dec 2018 16:18:20 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH V4 for 3.1 1/4] net: drop too large packet
 early
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: thuth@redhat.com, mst@redhat.com, liq3ea@163.com, liq3ea@gmail.com,
	qemu-stable@nongnu.org, ppandit@redhat.com, pbonzini@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On 12/3/18 4:06 AM, Jason Wang wrote:
> We try to detect and drop too large packet (>INT_MAX) in 1592a9947036
> ("net: ignore packet size greater than INT_MAX") during packet
> delivering. Unfortunately, this is not sufficient as we may hit
> another integer overflow when trying to queue such large packet in
> qemu_net_queue_append_iov():
> 
> - size of the allocation may overflow on 32bit
> - packet->size is integer which may overflow even on 64bit
> 
> Fixing this by move the check to qemu_sendv_packet_async() which is

s/move/moving/

> the entrance of all networking codes and reduce the limit to
> NET_BUFSIZE to be more conservative.

Please mention commit 1592a994 in the commit message (since you are 
effectively reverting that with this as its replacement), and if this is 
(as I suspect) an additional patch required for the complete fix to 
CVE-2018-10839, also mention that.

> 
> Cc: qemu-stable@nongnu.org
> Cc: Li Qiang <liq3ea@163.com>
> Reported-by: Li Qiang <liq3ea@gmail.com>
> Reviewed-by: Li Qiang <liq3ea@gmail.com>
> Signed-off-by: Jason Wang <jasowang@redhat.com>
> ---
>   net/net.c | 13 +++++++------
>   1 file changed, 7 insertions(+), 6 deletions(-)
> 
> diff --git a/net/net.c b/net/net.c
> index 07c194a8f6..affe1877cf 100644
> --- a/net/net.c
> +++ b/net/net.c
> @@ -712,15 +712,11 @@ ssize_t qemu_deliver_packet_iov(NetClientState *sender,
>                                   void *opaque)
>   {
>       NetClientState *nc = opaque;
> -    size_t size = iov_size(iov, iovcnt);
>       int ret;
>   
> -    if (size > INT_MAX) {
> -        return size;
> -    }
>   
>       if (nc->link_down) {
> -        return size;
> +        return iov_size(iov, iovcnt);

Reverts 1592a994, and...

>       }
>   
>       if (nc->receive_disabled) {
> @@ -745,10 +741,15 @@ ssize_t qemu_sendv_packet_async(NetClientState *sender,
>                                   NetPacketSent *sent_cb)
>   {
>       NetQueue *queue;
> +    size_t size = iov_size(iov, iovcnt);
>       int ret;
>   
> +    if (size > NET_BUFSIZE) {
> +        return size;
> +    }

...returns early for packets larger than 68k (a much smaller limit than 
INT_MAX, which makes analysis for int overflow a lot easier) at a saner 
point in the code.  Returning a large value is weird, but auditing all 
callers:

hw/net/virtio-net.c:        ret = 
qemu_sendv_packet_async(qemu_get_subqueue(n->nic, queue_index),
  - only checks if ret is 0 (returns -EBUSY) or not (assumes packet was 
sent)
net/netmap.c:        iovsize = qemu_sendv_packet_async(&s->nc, s->iov, 
iovcnt,
  - only checks if ret is 0 (starts polling) or not (assumes packet was 
sent)
net/net.c:    return qemu_sendv_packet_async(nc, iov, iovcnt, NULL);
  - implementation of qemu_sendv_packet() - so we have to audit those 
callers as well:

hw/net/net_tx_pkt.c:        qemu_sendv_packet(nc, iov, iov_cnt);
hw/net/rocker/rocker_fp.c:        qemu_sendv_packet(nc, iov, iovcnt);
hw/net/rtl8139.c:            qemu_sendv_packet(qemu_get_queue(s->nic), 
iov, 3);
net/hub.c:        qemu_sendv_packet(&port->nc, iov, iovcnt);
- all four of these do not check the return status

So, it looks like none of the callers cares if the return value is 
overlarge (no further math on the values), just that it is non-zero 
(where the callers then presumably assume the packet was sent). 
However, I am not familiar enough with the code to know if skipping the 
packet by returning a non-zero value is going to have knock-on effects - 
that is, my audit shows what the callers do, but not whether it was sane.

> +
>       if (sender->link_down || !sender->peer) {
> -        return iov_size(iov, iovcnt);
> +        return size;
>       }

If this is indeed CVE fixing, then we want it in -rc4, but I don't know 
if the patch is correctly secure yet without answers to my questions. 
Especially on a CVE fix for -rc4, you want to make the reviewer's life 
as easy as possible by providing a commit message that includes enough 
details to make analysis easy.

-- 
Eric Blake, Principal Software Engineer
Red Hat, Inc.           +1-919-301-3266
Virtualization:  qemu.org | libvirt.org

