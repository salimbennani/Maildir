Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:53:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B898E580375;
	Mon,  3 Dec 2018 06:58:41 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga008-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 06:58:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A/4ULNB2bd/UlQOpesmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segQIv7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJBUMhPSiJPDICy?=
 =?us-ascii?q?YYwNAOoPMulWoJL9p0MMoBalGQWhB/nixiNSi3PqwaE31fkqHwHc3AwnGtIDqG?=
 =?us-ascii?q?rZrNXrO6cUSOy6zrTIxijdYfNNwzj96ZXDfxcvoP6SW7JwatHcxlU0FwPEkFqc?=
 =?us-ascii?q?s4vlPyma1ukUtWWQ8uluVfq3hmI5tw18piKjytoih4XXnI4Z11PJ+TljzIs0J9?=
 =?us-ascii?q?C0UFN3bNG4HJdKqi2WKpV6TtksTm10oio3yLwLtJimdyYQ0psn3QTQa/mffoiI?=
 =?us-ascii?q?/B3jUOGRLC9mhHJqZr2/nQy+8Uu+xe3mUMm7zlJKojBCktnWuXABzx3T6s6ZRf?=
 =?us-ascii?q?th5kqtxyqD2gTJ5u1ZL004i7DXJ4Miz7IsjJYesEbOEjfzmErsja+Wcksk+vKv?=
 =?us-ascii?q?6+Tierjmop6cN4lpigDxK6gumdKwAf4+MgcQW2iX4OO81bPl/ULnWrVHleM2kq?=
 =?us-ascii?q?bHv5DAP8gbpbC2AxVT0ok97xazFTCm0M4XnXUfNlJKZAqHj5T1O1HJOP34Cfa/?=
 =?us-ascii?q?g1eynztxyPHGI6bsApHMLnjFjbfgcqxx609ayAov099f44hYBa0GIPL2QkXxrs?=
 =?us-ascii?q?DXDgclMwyoxObqENV92ZkfWWKTGKCZN7nesV+V5u01JemMa5QYuDL8K/gj+v7v?=
 =?us-ascii?q?gmU1mV4bfam1w5QXbGq0EehhI0WceXDsmMsOEX8WvgoiS+znkF+CUTlNaHqoXK?=
 =?us-ascii?q?I84Tc7CIShDYrYQoCtgbqB3Dq0H5FMZ2BGDEyMHmnsd4meR/gMbyeSKNd7kjMY?=
 =?us-ascii?q?TbihV5Mh1Ra2uQDg0LpnLu3U+i4CuZL5ztd15fbelRUz9TxyEsSc3HuBT2Bynm?=
 =?us-ascii?q?MUWTA22LpzrlB6yleGyaJ4meBXFcRP5/NVVQc3LZ3cwPZ8C9zoXgLBf82GSFCp?=
 =?us-ascii?q?Qti9BTExT9Qxw8IBYkpnGtWiiAzD0DSuA7MPi7OLA5k0+LrG33ftP8Z912rG1K?=
 =?us-ascii?q?45glY7WMRPK3OpirR/9wfJAY7JiFuWl6CteaQY3y7N8WODwHGKvEFZVg5wTKrE?=
 =?us-ascii?q?UWoeZkvQsdT2+EfCQ6WyBrQgNwtL0dSCJbdSat31kVVGQ+/uN8nEbGKvhWi8Hx?=
 =?us-ascii?q?aIyamKbIrxZWod2j7QCEwFkwAV4HaHOhIyBiano2LCEjNuEUjjbF/r8el7sHm7?=
 =?us-ascii?q?VFM7zxmWb0190Lq44gIVhf2ZS/MUwrIEuCcgpy9oHFqn2NLWEd6ApwtnfKVTet?=
 =?us-ascii?q?495FZH1WTEtw1yJJCgLqZihkIAfARzpU/hyxJ3CoBYm8gwsHwq1BZyKb6f0F5Z?=
 =?us-ascii?q?bTyY2Y7/O7LJJWjy5hygcLPW1UzE39aQ+acP7+o4pk7nvAGoEEoi7npm38NU03?=
 =?us-ascii?q?ua+pXFEg4SXYjtXUYw8hhwv6vabTUl54PIyX1sNrG5sz/f294zGOQp0Behf9dF?=
 =?us-ascii?q?P6OCGw//CMkaB8moKOw3lFmldBMEPOZO9KEqO8OqbeeJ2KmuPOx4hjKpkXxH4J?=
 =?us-ascii?q?xh0kKL7yd8UO/I0IofzPGCwwSHUC3wjFG/vcDtmIBIfC0dEXC7ySf5GoFRfKpy?=
 =?us-ascii?q?fYAQBGeqIs23wMh+hpH3V35Z8l6jG00J2MuzdRWOaFz92BVa1V4Lrny/hSu40z?=
 =?us-ascii?q?t0nikpr6qexiDPw/7udAEaOm5NX2RiiVbsIY6pj9EVRkSobg4plAe76kb+3aRU?=
 =?us-ascii?q?uKN/L2zLS0dSYyf2N31iUre3treaYc5A8okosSZUUOS7e1yaUaTyoxgZ0yPiGW?=
 =?us-ascii?q?tR2jY7eiquupX4mRx6lW2cIGxyrHrfZcF/2xPf6MbASv5W2zoMXDN4hiXPBlig?=
 =?us-ascii?q?I9mp+s2ZlpfZveC5TW6hVJxTcS/wwIOEtSu743BqABKlk/CynN3nDRY10Svh29?=
 =?us-ascii?q?Z2UiXIqQ72YpP32KSiLeJnYk5oCUf/68VgG4FyiIswhIwK1ngciZWY5n4HkWb1?=
 =?us-ascii?q?MdVG1qPydnsNRTgXw9HL5AjpwlFsLnWMx4jhTHWS3tNhZ8WmYmMRwi896sFKCK?=
 =?us-ascii?q?SO47Bekyp6vEG4rR7PbvhnhTgS1+Eu6HEBjuENuQotyDidA78IEUlZOyzsiwqH?=
 =?us-ascii?q?79SkoKpLY2avdKC61FBiktC5ELGCvgZcVW7lepclGC989MR+P0jK0H3u8YHkY9?=
 =?us-ascii?q?jQYMkXth2VlRfAkudUJIgwlvoMmSpoJ2b9sWc5xO48iBxkxYu6s5SfK2Vx4KK5?=
 =?us-ascii?q?BQZVOSbvaMMU/jHtkLxSnsKL3420GpVhGzMLXIbnTP6yETISs+jnOBiKEDEmtn?=
 =?us-ascii?q?ibHr/fFxeF6Eh6t3LPD4yrN3aPKXkb19piQQeSJFdFjAAIRjk6nYM5FgO3xMzn?=
 =?us-ascii?q?akh5/Ssc5lr5qhtK1+JpOAPzUmbZpAe0dDg0TIKTIwZR7gFH/03VK9CR7vpvHy?=
 =?us-ascii?q?FE+Z2stAyMKmuGZwRREGEGQEqEC0r4Prmp49nA/POVBu6/L/vIfLWPpvZSV/aO?=
 =?us-ascii?q?xZKzzIRm+yyAOdmIPnlnF/c7wFZMXWhlG8TFnDUCUywXmDzMb86Ypxe8+zd7rs?=
 =?us-ascii?q?Ol8PTsVwLg+5GPC6ZJMdh0/xC2gKGDN/OfhSpjKDZY0I8MymHMyLQFwFESjCRu?=
 =?us-ascii?q?fSG3EbscrS7NUL7QmqhPAhEBdiN8L9FI4Lw83wVXPc7bi8j41rp5jv4zFldEWk?=
 =?us-ascii?q?btmsCvZcwWPW69MEnLC1qMNLSDPTfL2d34YbugSb1Mi+VZrwGwuTeeE0P5IjuP?=
 =?us-ascii?q?jSXmVxCxPuFKlyybOB1euIegchdiE2TjTdTmagGlP99zlzE53bo0hnbSP24GLT?=
 =?us-ascii?q?d8a19NrqGX7S5AgvRwAWpB7n9kLemCgymY7unYJYwQsftkGSl0k+Na4HIny7pa?=
 =?us-ascii?q?9i1ERfp1mDfMod5quV2pju6Pyj80GCZJ/xNClIOOsA1YOL3Q7JUIDXPN7BMI4C?=
 =?us-ascii?q?OKCgwDvddNANrop6RRzJ7Ek6elbH9r99/E9M0QHcWcAs+DNH0nMFK9ETrZHAID?=
 =?us-ascii?q?QSSmc2vSg0halvC6/HqSspw7rN7nn59YDvdyUFEuDfocBl5iVO4fJZJwFmct16?=
 =?us-ascii?q?yGicsPzWa5sxTLWMhRvtbGSqTWSdDuIzaQgL0MWwYS2K71MZgeftn+x1F4c0R3?=
 =?us-ascii?q?gJjHM0DZTNRMqDdsKAQzpRMJuENiQ3Uz1kStQAS87DdHDvSzjxIeiQZkZ+kpsj?=
 =?us-ascii?q?D27AFzbmDNrmMQnVMrmNPqyWSLdzTxb6usdYJbESz5sw42KJytB05QZBex1XZ5?=
 =?us-ascii?q?KDPNQb4Z275pb2MtkhLAvZJJFdZVV6gCaxgVk6K5ffIthH9cpyPi9FIP2fDMCN?=
 =?us-ascii?q?M2iwYsarantHNNnQV5Y4hmduTrOKNVww0I1eq1tSiy27V0mVdGKg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AOAAD6QwVch0O0hNFiHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBGMClIGgUmIfY43gXEuEwGICSI0CQ0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpL4I2JAGCYgMDAQIvAUYGCQEBPhIDHgsrBgESBYMcgWoDCA0Fpl6EA?=
 =?us-ascii?q?gGDcw2CHIdthC8XeIEHg3WDBYgFApApj2kuCY4OgyMLGJEmiQSFcIs/gg1NMAi?=
 =?us-ascii?q?DJ4InF41mAUMyM4EFAQGKVwEB?=
X-IPAS-Result: =?us-ascii?q?A0AOAAD6QwVch0O0hNFiHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBGMClIGgUmIfY43gXEuEwGICSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpL4I2J?=
 =?us-ascii?q?AGCYgMDAQIvAUYGCQEBPhIDHgsrBgESBYMcgWoDCA0Fpl6EAgGDcw2CHIdthC8?=
 =?us-ascii?q?XeIEHg3WDBYgFApApj2kuCY4OgyMLGJEmiQSFcIs/gg1NMAiDJ4InF41mAUMyM?=
 =?us-ascii?q?4EFAQGKVwEB?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="54286570"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 06:58:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726766AbeLCO6j (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 09:58:39 -0500
Received: from mirror2.csie.ntu.edu.tw ([140.112.30.76]:50896 "EHLO
        wens.csie.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726332AbeLCO6h (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 09:58:37 -0500
Received: by wens.csie.org (Postfix, from userid 1000)
        id 74C445FD96; Mon,  3 Dec 2018 22:58:27 +0800 (CST)
From: Chen-Yu Tsai <wens@csie.org>
To: Maxime Ripard <maxime.ripard@bootlin.com>,
        Alexandre Belloni <alexandre.belloni@bootlin.com>,
        Alessandro Zummo <a.zummo@towertech.it>,
        Michael Turquette <mturquette@baylibre.com>,
        Stephen Boyd <sboyd@kernel.org>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>
Cc: Chen-Yu Tsai <wens@csie.org>, linux-arm-kernel@lists.infradead.org,
        linux-rtc@vger.kernel.org, linux-clk@vger.kernel.org,
        devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-sunxi@googlegroups.com,
        Corentin Labbe <clabbe.montjoie@gmail.com>
Subject: [PATCH v2 07/14] rtc: sun6i: Add support for all known pre-H6 variants
Date: Mon,  3 Dec 2018 22:58:18 +0800
Message-Id: <20181203145825.20511-8-wens@csie.org>
X-Mailer: git-send-email 2.20.0.rc1
In-Reply-To: <20181203145825.20511-1-wens@csie.org>
References: <20181203145825.20511-1-wens@csie.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

There are different variants to the RTC hardware first seen on sun6i
(A31). The differences we care about in this driver are the clock rate
for the internal oscillator, prescalers, and the presence of an external
clock output.

This patch adds support for all the known pre-H6 base compatibles using
the variants data structure previously introduced.

Acked-by: Maxime Ripard <maxime.ripard@bootlin.com>
Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
Signed-off-by: Chen-Yu Tsai <wens@csie.org>
---
 drivers/rtc/rtc-sun6i.c | 46 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/drivers/rtc/rtc-sun6i.c b/drivers/rtc/rtc-sun6i.c
index d1866d90b9ef..46609ae56ffd 100644
--- a/drivers/rtc/rtc-sun6i.c
+++ b/drivers/rtc/rtc-sun6i.c
@@ -312,6 +312,48 @@ static void __init sun6i_a31_rtc_clk_init(struct device_node *node)
 CLK_OF_DECLARE_DRIVER(sun6i_a31_rtc_clk, "allwinner,sun6i-a31-rtc",
 		      sun6i_a31_rtc_clk_init);
 
+static const struct sun6i_rtc_clk_data sun8i_a23_rtc_data = {
+	.rc_osc_rate = 667000, /* datasheet says 600 ~ 700 KHz */
+	.has_prescaler = 1,
+	.has_out_clk = 1,
+};
+
+static void __init sun8i_a23_rtc_clk_init(struct device_node *node)
+{
+	sun6i_rtc_clk_init(node, &sun8i_a23_rtc_data);
+}
+CLK_OF_DECLARE_DRIVER(sun8i_a23_rtc_clk, "allwinner,sun8i-a23-rtc",
+		      sun8i_a23_rtc_clk_init);
+
+static const struct sun6i_rtc_clk_data sun8i_h3_rtc_data = {
+	.rc_osc_rate = 16000000,
+	.fixed_prescaler = 32,
+	.has_prescaler = 1,
+	.has_out_clk = 1,
+};
+
+static void __init sun8i_h3_rtc_clk_init(struct device_node *node)
+{
+	sun6i_rtc_clk_init(node, &sun8i_h3_rtc_data);
+}
+CLK_OF_DECLARE_DRIVER(sun8i_h3_rtc_clk, "allwinner,sun8i-h3-rtc",
+		      sun8i_h3_rtc_clk_init);
+/* As far as we are concerned, clocks for H5 are the same as H3 */
+CLK_OF_DECLARE_DRIVER(sun50i_h5_rtc_clk, "allwinner,sun50i-h5-rtc",
+		      sun8i_h3_rtc_clk_init);
+
+static const struct sun6i_rtc_clk_data sun8i_v3_rtc_data = {
+	.rc_osc_rate = 32000,
+	.has_out_clk = 1,
+};
+
+static void __init sun8i_v3_rtc_clk_init(struct device_node *node)
+{
+	sun6i_rtc_clk_init(node, &sun8i_v3_rtc_data);
+}
+CLK_OF_DECLARE_DRIVER(sun8i_v3_rtc_clk, "allwinner,sun8i-v3-rtc",
+		      sun8i_v3_rtc_clk_init);
+
 static irqreturn_t sun6i_rtc_alarmirq(int irq, void *id)
 {
 	struct sun6i_rtc_dev *chip = (struct sun6i_rtc_dev *) id;
@@ -625,6 +667,10 @@ static int sun6i_rtc_probe(struct platform_device *pdev)
  */
 static const struct of_device_id sun6i_rtc_dt_ids[] = {
 	{ .compatible = "allwinner,sun6i-a31-rtc" },
+	{ .compatible = "allwinner,sun8i-a23-rtc" },
+	{ .compatible = "allwinner,sun8i-h3-rtc" },
+	{ .compatible = "allwinner,sun8i-v3-rtc" },
+	{ .compatible = "allwinner,sun50i-h5-rtc" },
 	{ /* sentinel */ },
 };
 MODULE_DEVICE_TABLE(of, sun6i_rtc_dt_ids);
-- 
2.20.0.rc1

