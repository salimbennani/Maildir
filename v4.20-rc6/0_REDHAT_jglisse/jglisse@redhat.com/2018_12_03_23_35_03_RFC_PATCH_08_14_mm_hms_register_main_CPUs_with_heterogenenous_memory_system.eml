Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:59:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 5881958014B;
	Mon,  3 Dec 2018 15:36:18 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 15:36:17 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AFOCK5BKDtXAMOcoQFtmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUKfX7rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYQNAeoOMvpXoYbmp1sWrxazHhWsCeD1xzNUmnP6wa833uI8Gg/GxgwgGNcOvW?=
 =?us-ascii?q?zWrNX6MKcSUPu1zLLWwjjYdfNZxyry6IjSfRA9u/2DQbVwcc/XxEIyFA3Flk2d?=
 =?us-ascii?q?pZL5Mz6RzOgBrmaW4/R6We6yiGMrtxt9rzmty8s0lIXFmoYYxkrZ+Sh33oo5P8?=
 =?us-ascii?q?C0RU11bNK+DpddtCeXPJZsTMw4WWFnoiM6x6UGuZGleCgKz4wqxwDQa/OZaYiE?=
 =?us-ascii?q?+BHjW/iLITd+mn1lfKizhxGo8Uiv0uH8V8+030hWriddjNXAqnQA2wbO5sWJVP?=
 =?us-ascii?q?dx5Fqt1DWT2wzJ6+xJI1g4la/BJJ4gxr4wmIATsUPGHiLunEX2jamWdlgr++Sx?=
 =?us-ascii?q?6OTofK/mppmCOI9wkw3+NaovmsqhDuQiKQUOQWeb9vqm1LH5/k32Xq9Kjvsona?=
 =?us-ascii?q?ndqpzaIt4bpqGhDw9Pzokj8wq/Dyuh0NkAmXkHLVFFdwydg4nmJlHDO/T4Dfa5?=
 =?us-ascii?q?g1SxnzZn3fHGPrv9AprTKnjPiqvufbF460RE0go80chf545ICrEGOP/zWlX+tN?=
 =?us-ascii?q?3EDhAjNAy42ebnCMhn2YMYVmKCGauZMKLUsV+V6eMjOeiMZIkJuDnjL/gp/eLh?=
 =?us-ascii?q?jXg8mVUFZ6mmwYMXaGykHvRhO0iZY33sjckbHWcJuQo+SurqiFqZXD5XZnayWb?=
 =?us-ascii?q?885z4hBIKnC4fDWp6igLib0CinGZ1WY3hMCkqQHnfwa4WER/AMZTqILc96kjwE?=
 =?us-ascii?q?UruhR5U71R60tg/30L5nLuvS+i0FupPvztl15+vPlR4s8Tx4FdiS02aIT2tshG?=
 =?us-ascii?q?MHWyc23LxjoUx60lqD0rJ3g/pCGdxX5vNGSAE6NZHHwux+CtDyXB/Bf9iTRFan?=
 =?us-ascii?q?RNWmHS8+TtYrz9ASZEZ9Hs2ojgrf0CqyH78Vi7uLCYQp/a3GwXj+Odxxy3bc26?=
 =?us-ascii?q?knlFkpXM1POWqihq588gjTA5XEk0GYl6asaKQd0zTB9GaFzWqSok5YVBR8XrnC?=
 =?us-ascii?q?XXAafkHWt8j25lveT7+yDrQqKhZOxtScKqRUcNHpjU9JRPH4ONvAZWK8gGOwBR?=
 =?us-ascii?q?eOxrORY4vmYWQd3CPBCEcalwAf52qJNQ87Bi25uWLRECRuFU7zY0Pr6eR+tHK7?=
 =?us-ascii?q?TkozzwGWb01g16C5+gIPifybUfMT2rMEuCEuqzhvGFa93tTWC8ePpgZ7faVcZ8?=
 =?us-ascii?q?8970lD1W7DqwN9OZmgJbh4hlECawR3o1/u1xJvB4palcglsnwrwxRyKK6Cy1xB?=
 =?us-ascii?q?ai6X0or2Or3ULWny4guia6rX2lHYzdaX9b0D6PU+q1X/og6pElAu/Glg09lQy3?=
 =?us-ascii?q?Gc/InFDBIOUZLtVUY67xh7p6zAbiYh/Y/V1H1sPrOysj/NwN8pAOolyhC9f9ZQ?=
 =?us-ascii?q?Kq+EFQnyE9EECMiqMuAlh1+pbhccNuBI6KE0J9+md+eB2KOzJuZgnS6pgn5d4I?=
 =?us-ascii?q?9g1UKA7Sx8RfDS35YE2v2XwhGIVzPhg1i/qMD3noZEaCoWHmq+zyjkGYFQardz?=
 =?us-ascii?q?fYYNFWehPcm3ys9iiJ7qXn5S7ESjCE8e2M+1ZRqSaETw3A1R1UgNoX2rgzC4zy?=
 =?us-ascii?q?Fykzwyqqqf3SrOw/ntdRYdO25LQnVigknoIYSuk98aW02oZRAzlBS5/Ub627Rb?=
 =?us-ascii?q?pKNnImnRW0hIZSv2L2JlUqeqrbqNec1P6JApsSVRTuu8Z0uXSrr8oxscziPiEH?=
 =?us-ascii?q?FSxDE9dzG2pJr5mwZ2h36aLHZ2tHDZY91/xQ/D5NzAQv5cxjoHSzN/iTXNBFi8?=
 =?us-ascii?q?Pt+p8M6Ql5fCtOC+Sm2gWodScSnt0YOPqi+76Xd2Dh24mvC5gsfnHhQi0S/ny9?=
 =?us-ascii?q?lqUj3FrBXmbYnqzai6Mf9ncVNuBF/z8Md6HoB+ko0thJAfw3Qah5OV/WYZnmf3?=
 =?us-ascii?q?K9lUxaX+bH8VTz4R39HV+BTl2FFkLn+RwoL5V3adzdF7a9i0fGwWwT494N5QCK?=
 =?us-ascii?q?iP8rNEhyR1r0G8rQLQZ/h9gzgcxeEv6H4cn+EGpg4twj+BDbAVGElSJTbsmAiQ?=
 =?us-ascii?q?79CisKVXY36icaS31Ep7h9ygDauNogdBWHbiYZciHDR97sF+MFLKzX3y5ZvoeN?=
 =?us-ascii?q?jWbdIPqBKUlw3MgPRSKJI0jvAKnzZoOXrhvX05zO42lQdh0ou9vIiDNmVh5qa5?=
 =?us-ascii?q?AgNDOz3xZsMT/CztjKlEksaX2YCvAotuGjERUJT0SvKoFSoYte77OAaWDD08tn?=
 =?us-ascii?q?CbFKLdHQCF7UdpsWnPH4q3N32NJ3kZ0NZiRASbJENFmwAZRzE6np8/FgC3y83t?=
 =?us-ascii?q?akZ55jYN5lHmrhtA0P5nNx76Um3Hvgendi80SISDLBpR9gxD50DVMdGH7uJuBS?=
 =?us-ascii?q?5Y+IetrBeKKmydaARFFmUJWk2CB1D+Mbii/9jA8+6EBuWgK/vCe6mBqetbV/2Q?=
 =?us-ascii?q?35KgzpNm/yqQNsWIJnRiD+M02ktAXXB6GsTVgTYPSzYQlyLCccGbvgq8+jZso8?=
 =?us-ascii?q?C78fTrXh/v5ISVB7tTN9Vv5w65gaOZO+GMgyZ5LC5S1okQyn/Q1LgfwFkShjl0?=
 =?us-ascii?q?eDmwCrsArzDCTaLKlq9TDh4WcCdzNMpO76Ih0QhBI8/bitXp1rFmiv45EUtKVV?=
 =?us-ascii?q?vkmsuxf8wFP3m9NE/bBEaMLLmGOTzLw8TtbaygU7FfkOVUuAO2uTuAF0/jPzKD?=
 =?us-ascii?q?lyTmVhy1MOFMij2bMwJauI2nbhltDm3jRsr8ahKnKN93kSE2wbosi3LKL2EcNz?=
 =?us-ascii?q?18c0JLrrKI7CJYgu9wG2pO7nd+KemEmiCZ7/TXK5oMsPtrBDh0mPxe4Hgg17RV?=
 =?us-ascii?q?6yREF7RJn37Wr9hzsxSjl8GM1DNsU1xJsDkYqpiMuBBgNqHY7YJNcWzJ8BIE8S?=
 =?us-ascii?q?ObDBFZ9JNeFtTztvUImZD0n6XpJWIHqoqM8A=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A9AAAhvQVch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBg2sngzo/iHeNPRSZJxQYEwGEQINJIjcGDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCCkvgjYkAYJiAwMBAgkXBAsBRgYJAQEIFwUCJgICA1QZBYMcggIFijWbU?=
 =?us-ascii?q?HwziQKBLIELiE2CRBeBf4htVIJnglcCiR6CAYULkBYJhkGKcAsYiVuHS5htgVy?=
 =?us-ascii?q?Bd3CDPIInF447IQEBMQGBBAEBHIdxgk0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0A9AAAhvQVch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBg2s?=
 =?us-ascii?q?ngzo/iHeNPRSZJxQYEwGEQINJIjcGDQEDAQEBAQEBAgETAQEBCgsJCCkvgjYkA?=
 =?us-ascii?q?YJiAwMBAgkXBAsBRgYJAQEIFwUCJgICA1QZBYMcggIFijWbUHwziQKBLIELiE2?=
 =?us-ascii?q?CRBeBf4htVIJnglcCiR6CAYULkBYJhkGKcAsYiVuHS5htgVyBd3CDPIInF447I?=
 =?us-ascii?q?QEBMQGBBAEBHIdxgk0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="54755559"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 15:36:15 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726227AbeLCXgL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 18:36:11 -0500
Received: from mx1.redhat.com ([209.132.183.28]:46500 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726129AbeLCXgK (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 18:36:10 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com [10.5.11.11])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 3106A356D5;
        Mon,  3 Dec 2018 23:36:09 +0000 (UTC)
Received: from localhost.localdomain.com (ovpn-120-188.rdu2.redhat.com [10.10.120.188])
        by smtp.corp.redhat.com (Postfix) with ESMTP id D853560566;
        Mon,  3 Dec 2018 23:36:05 +0000 (UTC)
From: jglisse@redhat.com
To: linux-mm@kvack.org
Cc: Andrew Morton <akpm@linux-foundation.org>,
        linux-kernel@vger.kernel.org,
        =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
        "Rafael J . Wysocki" <rafael@kernel.org>,
        Ross Zwisler <ross.zwisler@linux.intel.com>,
        Dan Williams <dan.j.williams@intel.com>,
        Dave Hansen <dave.hansen@intel.com>,
        Haggai Eran <haggaie@mellanox.com>,
        Balbir Singh <balbirs@au1.ibm.com>,
        "Aneesh Kumar K . V" <aneesh.kumar@linux.ibm.com>,
        Benjamin Herrenschmidt <benh@kernel.crashing.org>,
        Felix Kuehling <felix.kuehling@amd.com>,
        Philip Yang <Philip.Yang@amd.com>,
        =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
        Paul Blinzer <Paul.Blinzer@amd.com>,
        Logan Gunthorpe <logang@deltatee.com>,
        John Hubbard <jhubbard@nvidia.com>,
        Ralph Campbell <rcampbell@nvidia.com>,
        Michal Hocko <mhocko@kernel.org>,
        Jonathan Cameron <jonathan.cameron@huawei.com>,
        Mark Hairgrove <mhairgrove@nvidia.com>,
        Vivek Kini <vkini@nvidia.com>,
        Mel Gorman <mgorman@techsingularity.net>,
        Dave Airlie <airlied@redhat.com>,
        Ben Skeggs <bskeggs@redhat.com>,
        Andrea Arcangeli <aarcange@redhat.com>
Subject: [RFC PATCH 08/14] mm/hms: register main CPUs with heterogenenous memory system
Date: Mon,  3 Dec 2018 18:35:03 -0500
Message-Id: <20181203233509.20671-9-jglisse@redhat.com>
In-Reply-To: <20181203233509.20671-1-jglisse@redhat.com>
References: <20181203233509.20671-1-jglisse@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.30]); Mon, 03 Dec 2018 23:36:09 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Jérôme Glisse <jglisse@redhat.com>

Register CPUs as initiator under HMS scheme. CPUs are registered per
node (one initiator device per node per CPU). We also add the CPU to
the node default link so it is connected to main memory for the node.
For details see Documentation/vm/hms.rst.

Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
Cc: Rafael J. Wysocki <rafael@kernel.org>
Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Haggai Eran <haggaie@mellanox.com>
Cc: Balbir Singh <balbirs@au1.ibm.com>
Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Cc: Felix Kuehling <felix.kuehling@amd.com>
Cc: Philip Yang <Philip.Yang@amd.com>
Cc: Christian König <christian.koenig@amd.com>
Cc: Paul Blinzer <Paul.Blinzer@amd.com>
Cc: Logan Gunthorpe <logang@deltatee.com>
Cc: John Hubbard <jhubbard@nvidia.com>
Cc: Ralph Campbell <rcampbell@nvidia.com>
Cc: Michal Hocko <mhocko@kernel.org>
Cc: Jonathan Cameron <jonathan.cameron@huawei.com>
Cc: Mark Hairgrove <mhairgrove@nvidia.com>
Cc: Vivek Kini <vkini@nvidia.com>
Cc: Mel Gorman <mgorman@techsingularity.net>
Cc: Dave Airlie <airlied@redhat.com>
Cc: Ben Skeggs <bskeggs@redhat.com>
Cc: Andrea Arcangeli <aarcange@redhat.com>
---
 drivers/base/cpu.c  |  5 +++++
 drivers/base/node.c | 18 +++++++++++++++++-
 include/linux/cpu.h |  4 ++++
 3 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/base/cpu.c b/drivers/base/cpu.c
index eb9443d5bae1..160454bc5c38 100644
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@ -76,6 +76,8 @@ void unregister_cpu(struct cpu *cpu)
 {
 	int logical_cpu = cpu->dev.id;
 
+	hms_initiator_unregister(&cpu->initiator);
+
 	unregister_cpu_under_node(logical_cpu, cpu_to_node(logical_cpu));
 
 	device_unregister(&cpu->dev);
@@ -392,6 +394,9 @@ int register_cpu(struct cpu *cpu, int num)
 	dev_pm_qos_expose_latency_limit(&cpu->dev,
 					PM_QOS_RESUME_LATENCY_NO_CONSTRAINT);
 
+	hms_initiator_register(&cpu->initiator, &cpu->dev,
+			       cpu_to_node(num), 0);
+
 	return 0;
 }
 
diff --git a/drivers/base/node.c b/drivers/base/node.c
index 05621ba3cf13..43f1820cdadb 100644
--- a/drivers/base/node.c
+++ b/drivers/base/node.c
@@ -375,9 +375,19 @@ int register_cpu_under_node(unsigned int cpu, unsigned int nid)
 	if (ret)
 		return ret;
 
-	return sysfs_create_link(&obj->kobj,
+	ret = sysfs_create_link(&obj->kobj,
 				 &node_devices[nid]->dev.kobj,
 				 kobject_name(&node_devices[nid]->dev.kobj));
+	if (ret)
+		return ret;
+
+	if (IS_ENABLED(CONFIG_HMS)) {
+		struct cpu *cpu = container_of(obj, struct cpu, dev);
+
+		hms_link_initiator(node_devices[nid]->link, cpu->initiator);
+	}
+
+	return 0;
 }
 
 int unregister_cpu_under_node(unsigned int cpu, unsigned int nid)
@@ -396,6 +406,12 @@ int unregister_cpu_under_node(unsigned int cpu, unsigned int nid)
 	sysfs_remove_link(&obj->kobj,
 			  kobject_name(&node_devices[nid]->dev.kobj));
 
+	if (IS_ENABLED(CONFIG_HMS)) {
+		struct cpu *cpu = container_of(obj, struct cpu, dev);
+
+		hms_unlink_initiator(node_devices[nid]->link, cpu->initiator);
+	}
+
 	return 0;
 }
 
diff --git a/include/linux/cpu.h b/include/linux/cpu.h
index 218df7f4d3e1..1e3a777bfa3d 100644
--- a/include/linux/cpu.h
+++ b/include/linux/cpu.h
@@ -14,6 +14,7 @@
 #ifndef _LINUX_CPU_H_
 #define _LINUX_CPU_H_
 
+#include <linux/hms.h>
 #include <linux/node.h>
 #include <linux/compiler.h>
 #include <linux/cpumask.h>
@@ -27,6 +28,9 @@ struct cpu {
 	int node_id;		/* The node which contains the CPU */
 	int hotpluggable;	/* creates sysfs control file if hotpluggable */
 	struct device dev;
+#if defined(CONFIG_HMS)
+	struct hms_initiator *initiator;
+#endif
 };
 
 extern void boot_cpu_init(void);
-- 
2.17.2

