Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:55:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id DD03B58014B
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 09:08:00 -0800 (PST)
Received: from fmsmga105.fm.intel.com ([10.1.193.10])
  by fmsmga006-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 09:08:00 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AsEXZ7hd40k0HEjXKLrWXG5a0lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW/YR7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgqxcoh2hqQFxw5bWbY+XO/dyY63Qcc8ESmpaRctdSzBND5mg?=
 =?us-ascii?q?Y4YVE+YNIeBVpJT9qVsUqhu+ABGhCv/uyjBUhn/5x7c63Pk8Gg/EwgMgGc8Bv2?=
 =?us-ascii?q?rOrNXuM6cSV/2+wa7SzTXCc/xW2S3y6JLVfRw7ofGDQ7RwftfPxkk1DAPFiVOQ?=
 =?us-ascii?q?pJfhPzOU0OQCqXKb7+16WeKokW4npBh8rz6yzckvkonEnpwZxkzH+Clj3Yo5ON?=
 =?us-ascii?q?61RFRlbdOqEJZcrTyWOoluTs8/QGxlvDw2xqMatZO0ZiQG1ZQqyhrFZ/CacYWE?=
 =?us-ascii?q?/BTuX/uLLzhinnJqYre/ig6y8Ue+zu38UdG50FJLripejtnMrWoB1xPV6siaUP?=
 =?us-ascii?q?d9+V2h2TmX2wDS7OFLP1w0mLLFJ5I9wbM8jIcfvVnAEyPshkn7gq+bel859uWq?=
 =?us-ascii?q?8+jnZ6/ppp6YN496kAH+NaEul9SmAesmNwgOQnGX9vmi273940L5RKxGgeYxkq?=
 =?us-ascii?q?nEtpDVOdoUprW+Dw9R04Yj6AiwAy2p0dQFhXQHKFNFeBSaj4nmIV3OIfb4Deuh?=
 =?us-ascii?q?jFSoijtk2/fGPrj6D5XLKXjDlrjhfbBg60JGzwoz199f64pOCr4dOPLzRlPxtN?=
 =?us-ascii?q?vAAx89Mgy0wPjoBM9y14MDQm+PBq6ZMKXPsV6H/O4vIu+MZJMLtzb5MfQq+/nu?=
 =?us-ascii?q?jXpq0WIbZrSjiJsLdGijTLMhJ0SCfWGqhNAHHmEX+A0kQ6vvgVyGVDdVIHGqQ6?=
 =?us-ascii?q?M74Cp8EY+jEMLPS56ghO+82jymFMhTb2FCFlfeCHrtasCIVukBbGeIL9Z8nycY?=
 =?us-ascii?q?fb6mTYAnyFeprgCt0KdtLOff5ngFs4n+3sN+/ezZmEIO8mltAsGAlm2AUWxwtm?=
 =?us-ascii?q?UPQTAwweZ4u0Mu5E2E1P1CgvdYHMZfr9NEVAs3L4XbyaQuEdH5WgvbcpGJRVCq?=
 =?us-ascii?q?T8+9BjcZStM3ysUJJUFnFIPx3Vj4wyO2DupNxPSwD5su//eE0g=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DZAABzYgVchxHrdtBjHgEGBwaBVAYLA?=
 =?us-ascii?q?YEwgmKMcIstm0gSAQEYFIgJIjcGDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgU?=
 =?us-ascii?q?CAxgJglwDAwECJBkBAQQKKQECAwECBgEBPgoIAwEwAQUBHBkFgxyCAgEBA5o1P?=
 =?us-ascii?q?IodgWwzgnYBAQWCQ4RZCBKHW4MTgRyBVz+DbosRiTKGepAWBwKCHwSPDgsYiVu?=
 =?us-ascii?q?HSyyYGgYCCQcPIYE7gXdNMIMvghsMF4hehV5TgQeIYIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0DZAABzYgVchxHrdtBjHgEGBwaBVAYLAYEwgmKMcIstm0g?=
 =?us-ascii?q?SAQEYFIgJIjcGDQEDAQEBAQEBAgETAQEBCgsJCBsOIwyCNgUCAxgJglwDAwECJ?=
 =?us-ascii?q?BkBAQQKKQECAwECBgEBPgoIAwEwAQUBHBkFgxyCAgEBA5o1PIodgWwzgnYBAQW?=
 =?us-ascii?q?CQ4RZCBKHW4MTgRyBVz+DbosRiTKGepAWBwKCHwSPDgsYiVuHSyyYGgYCCQcPI?=
 =?us-ascii?q?YE7gXdNMIMvghsMF4hehV5TgQeIYIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="140548467"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 09:07:59 -0800
Received: from localhost ([::1]:50710 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTrhO-0000vo-Iu
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 12:07:58 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:35418)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gTqmD-0001ej-Hl
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:08:58 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gTqmB-0003RO-9o
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:08:53 -0500
Received: from mail-oi1-x242.google.com ([2607:f8b0:4864:20::242]:37521)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gTqmB-0003R6-5Q
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 11:08:51 -0500
Received: by mail-oi1-x242.google.com with SMTP id y23so11385676oia.4
	for <qemu-devel@nongnu.org>; Mon, 03 Dec 2018 08:08:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=a2J3CQI2OQ70TK1sm7OIeOp1575wsiXhLstcSeE4Wk8=;
	b=RRRN/YhDO3xLLAirlaFPndlR69RzIpsD5BDuzQk3U2kS7xpkuK3E5WWrmuuoaWG3Vr
	7xBT3uZXT+5Owxs8xMFGe1bsmngSWJ/lyV5QipPF9ksoo6rn4FdVH6c3wrqm0nh72mUC
	rlyH7hqBVFh1giJfXKXlg7aqhG0EM0wwz50sA=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=a2J3CQI2OQ70TK1sm7OIeOp1575wsiXhLstcSeE4Wk8=;
	b=X9Hy6zsmhJ0Ef0zUA+Blr6aYHmKqbpfMEulhVAhC1Lsy4wnvx+pPzjStbudt/448WA
	aOVFNAJUJTMiw1LHTJasKYjs8zuahh/mdsBLQzC5clfXBGFaGMieJsdHBmZl+dsQMYxt
	th21Y7Eq7YwIF/xLgXeqjpTI558KrrtFOq0CxmaTnfRosDjqonVm2/V/kjHxevxeK/Wb
	z0YfEkWH3IAmN4USXeQDxtPhDtxGYzNRpgZE3RwIG+dMTkDdtOhHX6CBjpx3CJ6XXWhu
	LDIzJmTP+MbMSmVYqq1ivf0Msf/QLiUAM+QLNyMm1DQ/tkGW33wjxViv11AlSb9VPFSv
	BSZg==
X-Gm-Message-State: AA+aEWaDPPZh4m9MIuypEY3R31BA6UhCYtWSIqBxzSJkMb8BAQb7n4Zl
	r/RFspZhPskRJms4yPEgM2BxP4GC/no0AQ==
X-Google-Smtp-Source: AFSGD/Upb+/cd1Q09U6di5MHTSSlYadj9VeNXLrQC+9/Svf25idy3fUKoS/UCvYmdCq7Rj/UXO27FQ==
X-Received: by 2002:a54:440d:: with SMTP id k13mr8125592oiw.263.1543853330109; 
	Mon, 03 Dec 2018 08:08:50 -0800 (PST)
Received: from cloudburst.twiddle.net (172.189-204-159.bestel.com.mx.
	[189.204.159.172]) by smtp.gmail.com with ESMTPSA id
	c19sm6338165otl.16.2018.12.03.08.08.48
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Mon, 03 Dec 2018 08:08:49 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Mon,  3 Dec 2018 10:08:39 -0600
Message-Id: <20181203160840.15115-5-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181203160840.15115-1-richard.henderson@linaro.org>
References: <20181203160840.15115-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::242
Subject: [Qemu-devel] [PATCH for-4.0 4/5] tcg/i386: Precompute all
 guest_base parameters
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: cota@braap.org, alex.bennee@linaro.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

These values are constant between all qemu_ld/st invocations;
there is no need to figure this out each time.  If we cannot
use a segment or an offset directly for guest_base, load the
value into a register in the prologue.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 tcg/i386/tcg-target.inc.c | 101 +++++++++++++++-----------------------
 1 file changed, 40 insertions(+), 61 deletions(-)

diff --git a/tcg/i386/tcg-target.inc.c b/tcg/i386/tcg-target.inc.c
index 853c3c8465..b8d2dd5ba3 100644
--- a/tcg/i386/tcg-target.inc.c
+++ b/tcg/i386/tcg-target.inc.c
@@ -1854,22 +1854,31 @@ static void tcg_out_qemu_st_slow_path(TCGContext *s, TCGLabelQemuLdst *l)
     tcg_out_push(s, retaddr);
     tcg_out_jmp(s, qemu_st_helpers[opc & (MO_BSWAP | MO_SIZE)]);
 }
-#elif defined(__x86_64__) && defined(__linux__)
-# include <asm/prctl.h>
-# include <sys/prctl.h>
-
+#elif TCG_TARGET_REG_BITS == 32
+# define x86_guest_base_seg     0
+# define x86_guest_base_index   -1
+# define x86_guest_base_offset  guest_base
+#else
+static int x86_guest_base_seg;
+static int x86_guest_base_index = -1;
+static int32_t x86_guest_base_offset;
+# if defined(__x86_64__) && defined(__linux__)
+#  include <asm/prctl.h>
+#  include <sys/prctl.h>
 int arch_prctl(int code, unsigned long addr);
-
-static int guest_base_flags;
-static inline void setup_guest_base_seg(void)
+static inline int setup_guest_base_seg(void)
 {
     if (arch_prctl(ARCH_SET_GS, guest_base) == 0) {
-        guest_base_flags = P_GS;
+        return P_GS;
     }
+    return 0;
 }
-#else
-# define guest_base_flags 0
-static inline void setup_guest_base_seg(void) { }
+# else
+static inline int setup_guest_base_seg(void)
+{
+    return 0;
+}
+# endif
 #endif /* SOFTMMU */
 
 static void tcg_out_qemu_ld_direct(TCGContext *s, TCGReg datalo, TCGReg datahi,
@@ -2008,27 +2017,9 @@ static void tcg_out_qemu_ld(TCGContext *s, const TCGArg *args, bool is64)
     add_qemu_ldst_label(s, true, oi, datalo, datahi, addrlo, addrhi,
                         s->code_ptr, label_ptr);
 #else
-    {
-        int32_t offset = guest_base;
-        int index = -1;
-        int seg = 0;
-
-        /*
-         * Recall we store 32-bit values zero-extended.  No need for
-         * further manual extension or an addr32 (0x67) prefix.
-         */
-        if (guest_base == 0 || guest_base_flags) {
-            seg = guest_base_flags;
-            offset = 0;
-        } else if (TCG_TARGET_REG_BITS == 64 && offset != guest_base) {
-            tcg_out_movi(s, TCG_TYPE_I64, TCG_REG_L1, guest_base);
-            index = TCG_REG_L1;
-            offset = 0;
-        }
-
-        tcg_out_qemu_ld_direct(s, datalo, datahi,
-                               addrlo, index, offset, seg, is64, opc);
-    }
+    tcg_out_qemu_ld_direct(s, datalo, datahi, addrlo, x86_guest_base_index,
+                           x86_guest_base_offset, x86_guest_base_seg,
+                           is64, opc);
 #endif
 }
 
@@ -2144,28 +2135,8 @@ static void tcg_out_qemu_st(TCGContext *s, const TCGArg *args, bool is64)
     add_qemu_ldst_label(s, false, oi, datalo, datahi, addrlo, addrhi,
                         s->code_ptr, label_ptr);
 #else
-    {
-        int32_t offset = guest_base;
-        int index = -1;
-        int seg = 0;
-
-        /*
-         * Recall we store 32-bit values zero-extended.  No need for
-         * further manual extension or an addr32 (0x67) prefix.
-         */
-        if (guest_base == 0 || guest_base_flags) {
-            seg = guest_base_flags;
-            offset = 0;
-        } else if (TCG_TARGET_REG_BITS == 64 && offset != guest_base) {
-            /* ??? Note that we require L0 free for bswap.  */
-            tcg_out_movi(s, TCG_TYPE_I64, TCG_REG_L1, guest_base);
-            index = TCG_REG_L1;
-            offset = 0;
-        }
-
-        tcg_out_qemu_st_direct(s, datalo, datahi,
-                               addrlo, index, offset, seg, opc);
-    }
+    tcg_out_qemu_st_direct(s, datalo, datahi, addrlo, x86_guest_base_index,
+                           x86_guest_base_offset, x86_guest_base_seg, opc);
 #endif
 }
 
@@ -3412,6 +3383,21 @@ static void tcg_target_qemu_prologue(TCGContext *s)
 		         (ARRAY_SIZE(tcg_target_callee_save_regs) + 2) * 4
 			 + stack_addend);
 #else
+# ifndef CONFIG_SOFTMMU
+    if (guest_base) {
+        int seg = setup_guest_base_seg();
+        if (seg != 0) {
+            x86_guest_base_seg = seg;
+        } else if (guest_base == (int32_t)guest_base) {
+            x86_guest_base_offset = guest_base;
+        } else {
+            /* Choose R12 because, as a base, it requires a SIB byte. */
+            x86_guest_base_index = TCG_REG_R12;
+            tcg_out_mov(s, TCG_TYPE_PTR, x86_guest_base_index, guest_base);
+            tcg_regset_set_reg(s->reserved_regs, x86_guest_base_index);
+        }
+    }
+# endif
     tcg_out_mov(s, TCG_TYPE_PTR, TCG_AREG0, tcg_target_call_iarg_regs[0]);
     tcg_out_addi(s, TCG_REG_ESP, -stack_addend);
     /* jmp *tb.  */
@@ -3437,13 +3423,6 @@ static void tcg_target_qemu_prologue(TCGContext *s)
         tcg_out_pop(s, tcg_target_callee_save_regs[i]);
     }
     tcg_out_opc(s, OPC_RET, 0, 0, 0);
-
-#if !defined(CONFIG_SOFTMMU)
-    /* Try to set up a segment register to point to guest_base.  */
-    if (guest_base) {
-        setup_guest_base_seg();
-    }
-#endif
 }
 
 static void tcg_out_nop_fill(tcg_insn_unit *p, int count)
-- 
2.17.2


