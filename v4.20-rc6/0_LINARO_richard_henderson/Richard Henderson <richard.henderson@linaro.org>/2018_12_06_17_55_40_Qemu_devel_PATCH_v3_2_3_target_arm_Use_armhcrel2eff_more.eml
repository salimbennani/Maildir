Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 08:51:29 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C49E5580375
	for <like.xu@linux.intel.com>; Thu,  6 Dec 2018 10:08:06 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 06 Dec 2018 10:08:06 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3Aznt6vBTKxk8HHt8FJsdohVoO4dpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYRGN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJ+j6xVpxCupxJizY7MYoybNvVzcr7TcN8GW2VBRd1cWzBdDo6m?=
 =?us-ascii?q?c4cCFfYNMfpeooLgp1UOtxy+BQy0Ce3zyz9Hmn/20rcg0+s8DArI3hIvH9QTv3?=
 =?us-ascii?q?vKttX1L6ASUeaox6TP1zXDbu9Z2Tfn54jSbx8tu/GMUqx2ccXM10YvDRjFjlKW?=
 =?us-ascii?q?qYH+OzOV1+INvHKB7+pnT+6vjHQnqw5orzWp28wiiZHJi5oLxlzY9ih12ps5Kc?=
 =?us-ascii?q?C7RUJhf9KpHptduzuHO4Z0Ws8uXmJltSIgxrEYpZK2czIGxIknyhPbcfCLboqF?=
 =?us-ascii?q?7gzlWe2MOzl3nmhld6i6hxuq8Uiv1On8Vs6s3VZOrypFicXMtmsX2xzc7MiHV+?=
 =?us-ascii?q?Fx/kC72TaAzwzT6+dELl4olafDNZIt3r09moAOvUjeHSL6glv6gaGWe0k+5+Sl?=
 =?us-ascii?q?6fzrYrD8qZ+dM490hBv+MqMrmsGnGOQ3LA0OX3WC9euhyrLj41P2QLFTgvItla?=
 =?us-ascii?q?nZrZbaKtgFqa6iBANV1ocj6xWhADu839UYgGEKLFZEeBKBkojoNEvCIPH+Dfej?=
 =?us-ascii?q?nVuslC1nyOzBPr3kGZjNKH/DkLHufbZ79k5Q0g0zzcpQ555MELEOPOrzWlPttN?=
 =?us-ascii?q?zfFhI5Nw20w+X5B9ln2YIeRHmCAquYMKPUrF+J6fgjI+iKZI8Jpjn9L+Ip6OLp?=
 =?us-ascii?q?jX88yhcge7K0184XdGygBaYhZEGYemb3xNEGF2gMo0w5VuOtjVSDVTtaYTG1R7?=
 =?us-ascii?q?494TcgT5urCJqGSo2zjbjS4SGgA5cDY2lHDkyLQ27lcpjBV/oSZSbXOMJ4jzEf?=
 =?us-ascii?q?SZCnTIku0wzosxX1nKF6JOjZ8TFNqJT4ydJu7PfSnxxhyTshFsmYziSBQn95mk?=
 =?us-ascii?q?sOQDk52r05plZymXmZ1q0tuf1TFdVJ67tpXwE2OITHyOoyX8rzUQLIZNvPSFug?=
 =?us-ascii?q?Tti8GjY3ZtYwxdYUZAB6Adr03UOL5DajH7JAz+/DP5cz6K+Jh3U=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DvAQAWZQlcmBHrdtBkg0gqgjiMcoswg?=
 =?us-ascii?q?wmYRRIBARgUh1ciOBIBAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxgJglw?=
 =?us-ascii?q?DAwECJBkBAQQKKQECAwECBgEBPgoIAwEwAQUBHBkFgxyCAgEBA5pCPIodgWwzg?=
 =?us-ascii?q?nYBAQWCQ4RiCBKHXoMTgRyBVz+BEYJdixGQNZAsBwKCIASPFwsYiWKHVCyYOQY?=
 =?us-ascii?q?CCQcPIYE8gXZNMIMvgicXfwEHh1eFXlOBB4hDgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DvAQAWZQlcmBHrdtBkg0gqgjiMcoswgwmYRRIBARgUh1c?=
 =?us-ascii?q?iOBIBAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxgJglwDAwECJBkBAQQKK?=
 =?us-ascii?q?QECAwECBgEBPgoIAwEwAQUBHBkFgxyCAgEBA5pCPIodgWwzgnYBAQWCQ4RiCBK?=
 =?us-ascii?q?HXoMTgRyBVz+BEYJdixGQNZAsBwKCIASPFwsYiWKHVCyYOQYCCQcPIYE8gXZNM?=
 =?us-ascii?q?IMvgicXfwEHh1eFXlOBB4hDgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,323,1539673200"; 
   d="scan'208";a="43887016"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 06 Dec 2018 10:08:05 -0800
Received: from localhost ([::1]:42404 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gUy4C-0002wT-Sy
	for like.xu@linux.intel.com; Thu, 06 Dec 2018 13:08:04 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:46111)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gUy1L-0000gP-Fq
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 13:05:13 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gUxsL-0004DT-SN
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 12:55:51 -0500
Received: from mail-ot1-x344.google.com ([2607:f8b0:4864:20::344]:36906)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gUxsL-0004DF-NH
	for qemu-devel@nongnu.org; Thu, 06 Dec 2018 12:55:49 -0500
Received: by mail-ot1-x344.google.com with SMTP id 40so1243008oth.4
	for <qemu-devel@nongnu.org>; Thu, 06 Dec 2018 09:55:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=zq48Z2eg8XJ9v15+H+TssxaHrkLh4uLulKFqydJ78JY=;
	b=f9TtAPLxFBF5bJ/ZYZnolpiW9nKPe7R1KFA4P5niSJ0sXsYEgVSC8hgCw0JTtrf6M8
	Pdb++tmc0u0oXRKsPx81Xo8C5gzXJZ4F7hn7NPNCa9VXenfmJn7YcqYI6U+/Hbnm7e7r
	clk2So4vIiq4jSsQqjgPpH7VFcHbUWNgs+StI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=zq48Z2eg8XJ9v15+H+TssxaHrkLh4uLulKFqydJ78JY=;
	b=qLcLTlz7rm26liqo4dNmL/BxcPZjkDA/HwP/dv9hI6qmkRSb+glGDK1IB4J3oCmeLT
	CApLgXZt543MQyCXJRnXr1Xy82e/IcK0RiCABr9ILi2TcOkqYLEiIP0p44XSmy5R+ulB
	ArwyiDLiA/SiSyXbcdyKuWENwbwTyN3OL7mH1ADitHCHk1zjP/SXO2RfTnweoLZ/AepA
	fnhxsx2B0OCxrwfajy8uwuUVHOjjv0WlQmMimwOsMexh6KO8T8iZNnxYoLoschPKRp9y
	og+/SN7OwzTJyad4pf0CMvIFco9UThbvvMBonhvRlbJEu5lVbLgG0d+Mquk/lZxLIAQK
	8aJw==
X-Gm-Message-State: AA+aEWbXRaeZTt3fZztJcrh6PMorKplD6jZURwVuZfl5jmWs+pvMu0bb
	FZmjiFvnl+TC4Nnrdr4GqHzn2lOyaGoxdg==
X-Google-Smtp-Source: AFSGD/X5U4xj5/msq9xo2i/lfJ+YL9lSNL2Ce0NJR2RnhhEQhzSX/Nchj270QE3o8hxjL08Ptlmt8w==
X-Received: by 2002:a9d:3646:: with SMTP id w64mr17587875otb.118.1544118948548;
	Thu, 06 Dec 2018 09:55:48 -0800 (PST)
Received: from cloudburst.twiddle.net (172.189-204-159.bestel.com.mx.
	[189.204.159.172])
	by smtp.gmail.com with ESMTPSA id 18sm873756otf.59.2018.12.06.09.55.47
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Thu, 06 Dec 2018 09:55:47 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Thu,  6 Dec 2018 11:55:40 -0600
Message-Id: <20181206175541.29508-3-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181206175541.29508-1-richard.henderson@linaro.org>
References: <20181206175541.29508-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::344
Subject: [Qemu-devel] [PATCH v3 2/3] target/arm: Use arm_hcr_el2_eff more
 places
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Since arm_hcr_el2_eff includes a check against
arm_is_secure_below_el3, we can often remove a
nearby check against secure state.

In some cases, sort the call to arm_hcr_el2_eff
to the end of a short-circuit logical sequence.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
v3: Do not change regime_translation_disabled.
---
 target/arm/helper.c    | 12 +++++-------
 target/arm/op_helper.c | 14 ++++++--------
 2 files changed, 11 insertions(+), 15 deletions(-)

diff --git a/target/arm/helper.c b/target/arm/helper.c
index 63e02e9fa2..4d25bafd12 100644
--- a/target/arm/helper.c
+++ b/target/arm/helper.c
@@ -448,7 +448,7 @@ static CPAccessResult access_tdosa(CPUARMState *env, const ARMCPRegInfo *ri,
     int el = arm_current_el(env);
     bool mdcr_el2_tdosa = (env->cp15.mdcr_el2 & MDCR_TDOSA) ||
         (env->cp15.mdcr_el2 & MDCR_TDE) ||
-        (env->cp15.hcr_el2 & HCR_TGE);
+        (arm_hcr_el2_eff(env) & HCR_TGE);
 
     if (el < 2 && mdcr_el2_tdosa && !arm_is_secure_below_el3(env)) {
         return CP_ACCESS_TRAP_EL2;
@@ -468,7 +468,7 @@ static CPAccessResult access_tdra(CPUARMState *env, const ARMCPRegInfo *ri,
     int el = arm_current_el(env);
     bool mdcr_el2_tdra = (env->cp15.mdcr_el2 & MDCR_TDRA) ||
         (env->cp15.mdcr_el2 & MDCR_TDE) ||
-        (env->cp15.hcr_el2 & HCR_TGE);
+        (arm_hcr_el2_eff(env) & HCR_TGE);
 
     if (el < 2 && mdcr_el2_tdra && !arm_is_secure_below_el3(env)) {
         return CP_ACCESS_TRAP_EL2;
@@ -488,7 +488,7 @@ static CPAccessResult access_tda(CPUARMState *env, const ARMCPRegInfo *ri,
     int el = arm_current_el(env);
     bool mdcr_el2_tda = (env->cp15.mdcr_el2 & MDCR_TDA) ||
         (env->cp15.mdcr_el2 & MDCR_TDE) ||
-        (env->cp15.hcr_el2 & HCR_TGE);
+        (arm_hcr_el2_eff(env) & HCR_TGE);
 
     if (el < 2 && mdcr_el2_tda && !arm_is_secure_below_el3(env)) {
         return CP_ACCESS_TRAP_EL2;
@@ -4576,8 +4576,7 @@ int sve_exception_el(CPUARMState *env, int el)
         if (disabled) {
             /* route_to_el2 */
             return (arm_feature(env, ARM_FEATURE_EL2)
-                    && !arm_is_secure(env)
-                    && (env->cp15.hcr_el2 & HCR_TGE) ? 2 : 1);
+                    && (arm_hcr_el2_eff(env) & HCR_TGE) ? 2 : 1);
         }
 
         /* Check CPACR.FPEN.  */
@@ -6226,9 +6225,8 @@ static int bad_mode_switch(CPUARMState *env, int mode, CPSRWriteType write_type)
          * and CPS are treated as illegal mode changes.
          */
         if (write_type == CPSRWriteByInstr &&
-            (env->cp15.hcr_el2 & HCR_TGE) &&
             (env->uncached_cpsr & CPSR_M) == ARM_CPU_MODE_MON &&
-            !arm_is_secure_below_el3(env)) {
+            (arm_hcr_el2_eff(env) & HCR_TGE)) {
             return 1;
         }
         return 0;
diff --git a/target/arm/op_helper.c b/target/arm/op_helper.c
index 0d6e89e474..ef72361a36 100644
--- a/target/arm/op_helper.c
+++ b/target/arm/op_helper.c
@@ -33,8 +33,7 @@ void raise_exception(CPUARMState *env, uint32_t excp,
 {
     CPUState *cs = CPU(arm_env_get_cpu(env));
 
-    if ((env->cp15.hcr_el2 & HCR_TGE) &&
-        target_el == 1 && !arm_is_secure(env)) {
+    if (target_el == 1 && (arm_hcr_el2_eff(env) & HCR_TGE)) {
         /*
          * Redirect NS EL1 exceptions to NS EL2. These are reported with
          * their original syndrome register value, with the exception of
@@ -428,9 +427,9 @@ static inline int check_wfx_trap(CPUARMState *env, bool is_wfe)
      * No need for ARM_FEATURE check as if HCR_EL2 doesn't exist the
      * bits will be zero indicating no trap.
      */
-    if (cur_el < 2 && !arm_is_secure(env)) {
-        mask = (is_wfe) ? HCR_TWE : HCR_TWI;
-        if (env->cp15.hcr_el2 & mask) {
+    if (cur_el < 2) {
+        mask = is_wfe ? HCR_TWE : HCR_TWI;
+        if (arm_hcr_el2_eff(env) & mask) {
             return 2;
         }
     }
@@ -995,7 +994,7 @@ void HELPER(pre_smc)(CPUARMState *env, uint32_t syndrome)
                         exception_target_el(env));
     }
 
-    if (!secure && cur_el == 1 && (env->cp15.hcr_el2 & HCR_TSC)) {
+    if (cur_el == 1 && (arm_hcr_el2_eff(env) & HCR_TSC)) {
         /* In NS EL1, HCR controlled routing to EL2 has priority over SMD.
          * We also want an EL2 guest to be able to forbid its EL1 from
          * making PSCI calls into QEMU's "firmware" via HCR.TSC.
@@ -1098,8 +1097,7 @@ void HELPER(exception_return)(CPUARMState *env)
         goto illegal_return;
     }
 
-    if (new_el == 1 && (env->cp15.hcr_el2 & HCR_TGE)
-        && !arm_is_secure_below_el3(env)) {
+    if (new_el == 1 && (arm_hcr_el2_eff(env) & HCR_TGE)) {
         goto illegal_return;
     }
 
-- 
2.17.2


