Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:57:06 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E74A4580375;
	Mon,  3 Dec 2018 11:09:51 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 11:09:51 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AL75dsx22zWiPg/hbsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSLPrxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2y?=
 =?us-ascii?q?YYgSAeQfIelYtJH9qlkVoBuiGQWhHv/jxiNUinL026AxzuQvERvB3AwlB98DrH?=
 =?us-ascii?q?LUo8j1NawPTO61zLfHzSvfYPNWxzj97ovIchc8qvyLR71wd9feyEk1GwPejlWf?=
 =?us-ascii?q?t5LlMC+V1usTtWib7O1gWPmgi24isQ5xozyvyt0whYnOg4IY01bJ/jh6zoYtPd?=
 =?us-ascii?q?C0VlJ3bNq+HJdNuSyWKZF6Tt4hTm10oio3y78LtYalcCQWzJkr3R3SZvydf4SV?=
 =?us-ascii?q?4x/vSPydLSp8iX9lfr+0mgy8/lK6yuLmU8m5yFZKoTRBktnLrn0NyRPT5dadSv?=
 =?us-ascii?q?dn/UeuxyyP1wbN5eFAO0w0krDbK5E5zr4xkJocr1jDEzfolEnqiKKabFgo9+a2?=
 =?us-ascii?q?5+j9f7nrpYOQO5V1hwz8Kqgun9awAeU8MggARWib/uG82aXn/U34RrVKk/I3nr?=
 =?us-ascii?q?DasJ/EP8QboLC2AwtM3oYk5Re/CSmp0M4DkHkZI1JKZgiHg5LqO17QOvD4C+mw?=
 =?us-ascii?q?g1C2nDds3fDGMaXtAo/RIXjbjLfhYbF95lZYyAoyztBQ+YhYC74cIP/oXk/xtd?=
 =?us-ascii?q?rYDgI2MgCuwubnDsl92Z0aWW6VHqCZN6bSu0eS5u0zO+mMeJMVuDHlJvgl/fHu?=
 =?us-ascii?q?jGM5lkUafaWz3ZsXdWq3HvJpI0iCZXrsg9EBEXoFvwYkTezqjkGCXiBXZ3qoQ6?=
 =?us-ascii?q?084TQ7Apq8DYjfXoCtnKCB3CCjE51UYWBJFEqAEXTvd4WCXfcMbzmfIstgkjwC?=
 =?us-ascii?q?SLigRJUt1RCotA/m1bVnKvDY9TEftZLmzNJ1/fHclQku9TxoCMSQy3uCT3p0nm?=
 =?us-ascii?q?MPRD86xrp/rlZ/ylqY1ah4gvpYFcFc5v9TUwc6M4LcwPJ+C9zoRg3BedKJQk68?=
 =?us-ascii?q?Qtq6GTExUs4xw9gWbkZ+AdqiiArP3y6rA7APkbyLC4c58qbd33j3OsZ8xGzK1K?=
 =?us-ascii?q?gnj1k6XMRPMXeqibJ49wjWH4TJiVmWl762daQA2y7A7HqMwnCQvE5GSgJwUb/K?=
 =?us-ascii?q?XXYEZkTIq9T14UfCT7yrCbQjKQZBzc+CKq1Xatzml1lGRfHjOMjAbGK1gWu/GR?=
 =?us-ascii?q?GIxraUZorwZ2odxDndCFQDkw0L4HmJLxY+CTm7r2LeFjNuE0nvbF3q8eRlrHO7?=
 =?us-ascii?q?T0k0zxyFbkF71rq1/AIViuKYS/8Jwr0EvyIhoS1uHFmhx9LWF8aApw15caVAYN?=
 =?us-ascii?q?M95VBH1X7Ztw19JJCgM7puhlkEcwRzvkPu0Rp3B55EkcgrqnMq0QVzJbiZ0FNH?=
 =?us-ascii?q?azOXw5TwNqfLJWn1+RClc7TW1U3G0NaK5qcP7+w1pE/nvA63GUst7XVm38NO3H?=
 =?us-ascii?q?uB+5rFFgwSUZH2UkYp7BV6o7DaYi8g54Lbz3FsMK+0siPc1NItHucq1hGgf9JH?=
 =?us-ascii?q?OqOeCADyC9EaB9SpKOEym1mpcwgIM/xI+K81P8Opbf2G2KGwMeZknTKmi3lH4Y?=
 =?us-ascii?q?9n3kKN8Sp8VvDH35Ifz/6E2QuHUi/2jE29vcDvhYBEeTYSE3KlySjlGIFefLdy?=
 =?us-ascii?q?cpsMCWu0Jc242M9+h5/0V3FE7lGjA04J19GzeRqVaVzwxglQ1UURoXy6liq01T?=
 =?us-ascii?q?10kzc1rqWB2CzC2fjtdB0COmRTXmltkU/sIZSoj9AdREWpbwkpmAGl5Erg3Khb?=
 =?us-ascii?q?uaJ/InLXQUdJeSj2Mm5jXrGxtrqEf85A9pcovT9LX+S7ZFCQUqT9rAcC0yP/A2?=
 =?us-ascii?q?tewyg2dzOwtZXjnBx6i2WdIGxorHXDesFwxhbf5NrCSv5XxTcGQCh4iT/KBlmz?=
 =?us-ascii?q?JdWp/NOUl4vdveC6TW6uSppTcSzzx4OaqCS7/XFqAQG4n/2rmtzoCw863TX519?=
 =?us-ascii?q?lrUyXFtxL8Yojt16SnPuNrZEhoBFng68VkHoFyiJc/hJYV2XICnJWa4WIHkXvv?=
 =?us-ascii?q?MdVcwa/+b2ACRT8Rz97V/QjqwktjLn2SyoL9V3WdxNZhZtagbmMX3CI9895FCK?=
 =?us-ascii?q?OO4LNYmit1p0KyrRjNbvhlgjcd1fwu5WYfg+EIuwoi1D+RA74MEklDISzjiQ6I?=
 =?us-ascii?q?4Mugo6VNa2aiaryw1Et4ndC8A7COuABcWHDlepg8GS989NlwMFXJ0Hfr8IHrZM?=
 =?us-ascii?q?HQbc4Pth2TixrAk+9VKJcrmvsLnyVnP3/9vWY+y+46lhFu2ZC6vI6aK2Ri5q65?=
 =?us-ascii?q?AxhYNiHraMMX4D3ikaFensOO1YC1ApphAikLXIfvTf+wCz0dr/PnNwKTEDEmrn?=
 =?us-ascii?q?ebBKHSHQue6EdgsnLOHIqnN3CRJHkF09piQAORK1BYgAARRD86hII2Fhi2xMz9?=
 =?us-ascii?q?d0d0/jIR6UT9qhRS0eJkLQX/Xn3cpAe1aTc0VZ6fIwBN7gxZ40fVMMqe7v98Hi?=
 =?us-ascii?q?1C/52hqhCNJXKfZwhSEW4JXUmEDUj5Pray/dnA7/SYBu2mIvrOZrWOtPVeV+qS?=
 =?us-ascii?q?ypKpyIdm5DGMNsOAPnR5C/0720xDXW12GsjDmjUPTTAXmDzJb8KBuBi8/Sh3pN?=
 =?us-ascii?q?il8Pv3QALv+ZePC7xKPNVv5R+2gKSDN+2RhCpjKjZYzJQMxXDWx7gFwV4SkDpj?=
 =?us-ascii?q?dz2sEbQGqC7MQ7jcmq5RDx4HdSxzMNFE4L473glIIcTbkM/61qZkjv4pDFdITU?=
 =?us-ascii?q?bumtyyaswQPW68NEnLBEKKNLmdIT3Lwsf3Yb6zSLFKjeVUsQGwtiifE0P5IjuD?=
 =?us-ascii?q?kDzpXQi1Me5QlCGbIABeuIalfxZxCGjjScjqZQGhPNBrjT0537s0i2jONW4dNz?=
 =?us-ascii?q?h8bkxMoqeR7SNenvVwBWhB4mB5IumDniaT9/PYJYoOsft3HiR0kPpX4XQgxLtT?=
 =?us-ascii?q?6SFERfp1lzPTr95uuV6mlOaPxyFjUBpPrDZLmY2KsV9jOaXf6plPR3LE8AgR4m?=
 =?us-ascii?q?WXDhRZ7+diX8HuvbEW1dnJmLDhADhH+tPQu8AbApv6MsWCZVMnPQuhIz7ZEgAF?=
 =?us-ascii?q?QDioMimLjkpRgbeJ9nCLpZg3rJvrsJULQ75fElcyE6VJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtNvCLmoQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AgAAC0fgVch0O0hNFiHgEGBwaBUQkLA?=
 =?us-ascii?q?YNrFBODeYN7kjYUiQ6JLYR5gXMsEwGICSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pIwyCNiQBgmEBAQEBAgEBAiAEGQEbBBkBAwIJAQEFBQsNAgImAgIDHgEBEQEFA?=
 =?us-ascii?q?RwZBYMcgWkBAw0IBZpjPIsNfBYFAReCdwWEOAoZJw1dgTcCBhJ5ixGBVz+BEYM?=
 =?us-ascii?q?SgleFLoJXAokmCoFvhVuPGC4HAoIfBItrgy4YgVuFEYMlhxUsjkiJajCBJYINc?=
 =?us-ascii?q?IEBgjuCGwwXg0qKVT0zgQUBAYpaAQE?=
X-IPAS-Result: =?us-ascii?q?A0AgAAC0fgVch0O0hNFiHgEGBwaBUQkLAYNrFBODeYN7kjY?=
 =?us-ascii?q?UiQ6JLYR5gXMsEwGICSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBA?=
 =?us-ascii?q?QEBAgEBAiAEGQEbBBkBAwIJAQEFBQsNAgImAgIDHgEBEQEFARwZBYMcgWkBAw0?=
 =?us-ascii?q?IBZpjPIsNfBYFAReCdwWEOAoZJw1dgTcCBhJ5ixGBVz+BEYMSgleFLoJXAokmC?=
 =?us-ascii?q?oFvhVuPGC4HAoIfBItrgy4YgVuFEYMlhxUsjkiJajCBJYINcIEBgjuCGwwXg0q?=
 =?us-ascii?q?KVT0zgQUBAYpaAQE?=
X-IronPort-AV: E=Sophos;i="5.56,311,1539673200"; 
   d="scan'208";a="54721869"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 11:09:50 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726937AbeLCTJs (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 14:09:48 -0500
Received: from mail-qt1-f195.google.com ([209.85.160.195]:38835 "EHLO
        mail-qt1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726030AbeLCTJs (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 14:09:48 -0500
Received: by mail-qt1-f195.google.com with SMTP id p17so15110983qtl.5;
        Mon, 03 Dec 2018 11:09:46 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=c9B6ZvdHB5QzgldK0P6MI9mVpmAd5Mev5B7zmvE7Cvs=;
        b=ohCVMB10Mt8J7IVOoCHR+mwayqfuqCnGDua2kT7kWBGRE023wmDsQeWbwNYy3hNSFH
         ZO3LTNCPwS96B60KnYBTwSzbtC5iA3/yMTHNCyE8sVAydTspxtUkbfSgjYaUG3ZYZEoY
         twqgVxFst6KEy2VsfWND86tn/ktc8Tut9QYp4iDZ+D7GpfpffQxBLI3deBpUFuGouKp1
         Dz6ImqdaIYflfqMIqO9nf6m8V3M7YCCYfhBGeFQ1kU2kPUsswuhPiI6Ioui1pCOzjBcj
         dwtjQDOfl7esXalhvMRws3w6BOIlTaqC6EDEj+3JrpxryNvIv8rS867NMVkUnrUuXQc8
         QoJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=c9B6ZvdHB5QzgldK0P6MI9mVpmAd5Mev5B7zmvE7Cvs=;
        b=cBaKsGmcSHo3FxqNUDFLr0r/ScU7kRlu9h0+bpeCBM6KyzPMB7GPWi7pkf7fXWpPOe
         PO+cLmGfiVa6ZCxOuzzSoGzD+u01lpBPwdVsbfTdQF9PMP3DCYH99b9+52fmANFzYjLT
         BFFwJfhnonHT+TCqSN0FhVUmvlgnJ4hokG4OSAyJb0P42156RZQinwuQAF+A7mSxX39b
         ffV/6Ot9KPp0/A/T29O8ja8zf3uu6H7r1vsviRC8nK9fRSAWuJ3J9HLqDaSKN3H0au8F
         GCCeM0MdcgpWiKO6Sblhbtc9SFNAF8n9uHo0/iTS3Ni+K6n/xk86q9uXLtcoWbv7YRSa
         dobw==
X-Gm-Message-State: AA+aEWbnWZHbCmdIWVEGyI9M5BQ1bacVlcm9LZebR7fhTZKkIKFGkyJC
        RKJw0HuJLc25b5Hth4GGP6zQUmHq5d5wiB8eW4c=
X-Google-Smtp-Source: AFSGD/Wxx0BiHV7COBKME+1OAzp1RmiAzzQqE/uBjN7tZ1qb+HuFzIpJysCjjgWPH7R3cxbHUg/hY2TybU363BwqaIk=
X-Received: by 2002:a0c:c2ce:: with SMTP id c14mr17434788qvi.7.1543864185584;
 Mon, 03 Dec 2018 11:09:45 -0800 (PST)
MIME-Version: 1.0
References: <20181201155229.8532-1-tiny.windzz@gmail.com>
In-Reply-To: <20181201155229.8532-1-tiny.windzz@gmail.com>
From: Andy Shevchenko <andy.shevchenko@gmail.com>
Date: Mon, 3 Dec 2018 21:09:34 +0200
Message-ID: <CAHp75VdEbr9YfaCgHXNqScZC-KMobF2fU8rZb29nhZPBJvm2gg@mail.gmail.com>
Subject: Re: [PATCH] platform/x86: convert to DEFINE_SHOW_ATTRIBUTE
To: tiny.windzz@gmail.com
Cc: Rajneesh Bhardwaj <rajneesh.bhardwaj@intel.com>,
        Vishwanath Somayaji <vishwanath.somayaji@intel.com>,
        Darren Hart <dvhart@infradead.org>,
        Andy Shevchenko <andy@infradead.org>,
        David Box <david.e.box@linux.intel.com>,
        Platform Driver <platform-driver-x86@vger.kernel.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Content-Type: text/plain; charset="UTF-8"
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Sat, Dec 1, 2018 at 5:52 PM Yangtao Li <tiny.windzz@gmail.com> wrote:
>
> Use DEFINE_SHOW_ATTRIBUTE macro to simplify the code.

By some reason it's not applicable.
Please, rebase on top of our for-next branch, thanks!

>
> Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
> ---
>  drivers/platform/x86/intel_pmc_core.c         | 46 ++++---------------
>  .../platform/x86/intel_telemetry_debugfs.c    | 42 +++--------------
>  2 files changed, 14 insertions(+), 74 deletions(-)
>
> diff --git a/drivers/platform/x86/intel_pmc_core.c b/drivers/platform/x86/intel_pmc_core.c
> index 6b31d410cb09..95311ad6ec6f 100644
> --- a/drivers/platform/x86/intel_pmc_core.c
> +++ b/drivers/platform/x86/intel_pmc_core.c
> @@ -311,7 +311,7 @@ static void pmc_core_display_map(struct seq_file *s, int index,
>                    pf_map[index].bit_mask & pf_reg ? "Off" : "On");
>  }
>
> -static int pmc_core_ppfear_sts_show(struct seq_file *s, void *unused)
> +static int pmc_core_ppfear_show(struct seq_file *s, void *unused)
>  {
>         struct pmc_dev *pmcdev = s->private;
>         const struct pmc_bit_map *map = pmcdev->map->pfear_sts;
> @@ -330,17 +330,7 @@ static int pmc_core_ppfear_sts_show(struct seq_file *s, void *unused)
>         return 0;
>  }
>
> -static int pmc_core_ppfear_sts_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, pmc_core_ppfear_sts_show, inode->i_private);
> -}
> -
> -static const struct file_operations pmc_core_ppfear_ops = {
> -       .open           = pmc_core_ppfear_sts_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(pmc_core_ppfear);
>
>  /* This function should return link status, 0 means ready */
>  static int pmc_core_mtpmc_link_status(void)
> @@ -372,7 +362,7 @@ static int pmc_core_send_msg(u32 *addr_xram)
>         return 0;
>  }
>
> -static int pmc_core_mphy_pg_sts_show(struct seq_file *s, void *unused)
> +static int pmc_core_mphy_pg_show(struct seq_file *s, void *unused)
>  {
>         struct pmc_dev *pmcdev = s->private;
>         const struct pmc_bit_map *map = pmcdev->map->mphy_sts;
> @@ -425,17 +415,7 @@ static int pmc_core_mphy_pg_sts_show(struct seq_file *s, void *unused)
>         return err;
>  }
>
> -static int pmc_core_mphy_pg_sts_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, pmc_core_mphy_pg_sts_show, inode->i_private);
> -}
> -
> -static const struct file_operations pmc_core_mphy_pg_ops = {
> -       .open           = pmc_core_mphy_pg_sts_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(pmc_core_mphy_pg);
>
>  static int pmc_core_pll_show(struct seq_file *s, void *unused)
>  {
> @@ -472,17 +452,7 @@ static int pmc_core_pll_show(struct seq_file *s, void *unused)
>         return err;
>  }
>
> -static int pmc_core_pll_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, pmc_core_pll_show, inode->i_private);
> -}
> -
> -static const struct file_operations pmc_core_pll_ops = {
> -       .open           = pmc_core_pll_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(pmc_core_pll);
>
>  static ssize_t pmc_core_ltr_ignore_write(struct file *file, const char __user
>  *userbuf, size_t count, loff_t *ppos)
> @@ -602,19 +572,19 @@ static int pmc_core_dbgfs_register(struct pmc_dev *pmcdev)
>                             &pmc_core_dev_state);
>
>         debugfs_create_file("pch_ip_power_gating_status", 0444, dir, pmcdev,
> -                           &pmc_core_ppfear_ops);
> +                           &pmc_core_ppfear_fops);
>
>         debugfs_create_file("ltr_ignore", 0644, dir, pmcdev,
>                             &pmc_core_ltr_ignore_ops);
>
>         if (pmcdev->map->pll_sts)
>                 debugfs_create_file("pll_status", 0444, dir, pmcdev,
> -                                   &pmc_core_pll_ops);
> +                                   &pmc_core_pll_fops);
>
>         if (pmcdev->map->mphy_sts)
>                 debugfs_create_file("mphy_core_lanes_power_gating_status",
>                                     0444, dir, pmcdev,
> -                                   &pmc_core_mphy_pg_ops);
> +                                   &pmc_core_mphy_pg_fops);
>
>         if (pmcdev->map->slps0_dbg_maps) {
>                 debugfs_create_file("slp_s0_debug_status", 0444,
> diff --git a/drivers/platform/x86/intel_telemetry_debugfs.c b/drivers/platform/x86/intel_telemetry_debugfs.c
> index 40bce560eb30..98ba9185a27b 100644
> --- a/drivers/platform/x86/intel_telemetry_debugfs.c
> +++ b/drivers/platform/x86/intel_telemetry_debugfs.c
> @@ -466,17 +466,7 @@ static int telem_pss_states_show(struct seq_file *s, void *unused)
>         return 0;
>  }
>
> -static int telem_pss_state_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, telem_pss_states_show, inode->i_private);
> -}
> -
> -static const struct file_operations telem_pss_ops = {
> -       .open           = telem_pss_state_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(telem_pss_states);
>
>  static int telem_ioss_states_show(struct seq_file *s, void *unused)
>  {
> @@ -505,17 +495,7 @@ static int telem_ioss_states_show(struct seq_file *s, void *unused)
>         return 0;
>  }
>
> -static int telem_ioss_state_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, telem_ioss_states_show, inode->i_private);
> -}
> -
> -static const struct file_operations telem_ioss_ops = {
> -       .open           = telem_ioss_state_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(telem_ioss_states);
>
>  static int telem_soc_states_show(struct seq_file *s, void *unused)
>  {
> @@ -664,17 +644,7 @@ static int telem_soc_states_show(struct seq_file *s, void *unused)
>         return 0;
>  }
>
> -static int telem_soc_state_open(struct inode *inode, struct file *file)
> -{
> -       return single_open(file, telem_soc_states_show, inode->i_private);
> -}
> -
> -static const struct file_operations telem_socstate_ops = {
> -       .open           = telem_soc_state_open,
> -       .read           = seq_read,
> -       .llseek         = seq_lseek,
> -       .release        = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(telem_soc_states);
>
>  static int telem_s0ix_res_get(void *data, u64 *val)
>  {
> @@ -960,7 +930,7 @@ static int __init telemetry_debugfs_init(void)
>
>         f = debugfs_create_file("pss_info", S_IFREG | S_IRUGO,
>                                 debugfs_conf->telemetry_dbg_dir, NULL,
> -                               &telem_pss_ops);
> +                               &telem_pss_states_fops);
>         if (!f) {
>                 pr_err("pss_sample_info debugfs register failed\n");
>                 goto out;
> @@ -968,7 +938,7 @@ static int __init telemetry_debugfs_init(void)
>
>         f = debugfs_create_file("ioss_info", S_IFREG | S_IRUGO,
>                                 debugfs_conf->telemetry_dbg_dir, NULL,
> -                               &telem_ioss_ops);
> +                               &telem_ioss_states_fops);
>         if (!f) {
>                 pr_err("ioss_sample_info debugfs register failed\n");
>                 goto out;
> @@ -976,7 +946,7 @@ static int __init telemetry_debugfs_init(void)
>
>         f = debugfs_create_file("soc_states", S_IFREG | S_IRUGO,
>                                 debugfs_conf->telemetry_dbg_dir,
> -                               NULL, &telem_socstate_ops);
> +                               NULL, &telem_soc_states_fops);
>         if (!f) {
>                 pr_err("ioss_sample_info debugfs register failed\n");
>                 goto out;
> --
> 2.17.0
>


-- 
With Best Regards,
Andy Shevchenko
