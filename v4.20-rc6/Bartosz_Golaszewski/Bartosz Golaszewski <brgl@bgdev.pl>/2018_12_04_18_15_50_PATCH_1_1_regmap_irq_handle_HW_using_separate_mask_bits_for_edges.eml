Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:42:37 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C494A58014B;
	Tue,  4 Dec 2018 10:16:07 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 04 Dec 2018 10:16:06 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AwJyt6BXJh//PBrpaD9sC1BI8ymPV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhGOvKdThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxmUwHjhj?=
 =?us-ascii?q?sZODEl8WHXks1wg7xdoBK9vBx03orYbJiIOPZiYq/ReNUXTndDUMlMTSxMGoOy?=
 =?us-ascii?q?YZUSAeQPPuhWqIvyp1UBohWxHgmsHOHixyRUinL1x6A2z/4sHR3a0AEmAtkAsG?=
 =?us-ascii?q?7UrNLwNKoKTO261rPIzSnEb/NN2Db29YnGchclof6WRrJxcNTeyEc0FwPGj1Wb?=
 =?us-ascii?q?tIvoMCiP1uQCt2iW9PFvVe2yhGE5tQF9uCCvxsM1h4TPm4kbyUjE+D1nzIopId?=
 =?us-ascii?q?C0UlN3bNC6HJdKqi2XNJd6TtkjTmxqoCo21KcJtYKmcCUP1Jso3APTZOGCfoeS?=
 =?us-ascii?q?7BLuUeacLixkiH55fb+yhgu9/Em8xeD5VcS531JHoyRAn9XRrH8CzBze582aRf?=
 =?us-ascii?q?Rn40is2zCC3B3J5O5eO0A7j6/bJoYhwrEukpoTtlzOHjH5mErolq+abEYk9fay?=
 =?us-ascii?q?6+ThfLrmooWQN4huigHxKqgum8q/DvokMgUWQWSX5eCx2Kf+8UD3XrlGlOA6n6?=
 =?us-ascii?q?rFvJzAJMkWpLa1AwpP3YYi7xa/AS2m0NMdnXQfKFJFeRSHj5XmOl3XI/D3E+2/?=
 =?us-ascii?q?g1Kynzdv3vzGObPgApPTIXjZi7rhY7l95FBGyAYpztBQ+YhUCrcfL/L3QEPxs8?=
 =?us-ascii?q?bYDhAhPwyu3+nnEMl91p8ZWW+XBq+ZMaDSvkGS6uMgPumBf4sVuDf7K/g46P/i?=
 =?us-ascii?q?l345mVkBfaa32Zsbcmy3HvNjI0+Be3rjns8BEXsWvgo5VOHqiEeNUT9PZ3moWK?=
 =?us-ascii?q?Iw/DE7CJ+8AofFSYCgm7iB3Ca9Hp1LaWFKEFGMEXH0d4qaX/cAcj6dIshkkjYc?=
 =?us-ascii?q?T7iuV5ch1Q2ytA/907dnLO3U9TMCuZLg09h14evTlRYp+DxwDsSd1XyNTm5ukm?=
 =?us-ascii?q?MJQT82wL5woUhnxlif1qh4huRSFcZP6PNRTgc6KZncwvRgBNDpWgLBedSJREy8?=
 =?us-ascii?q?Qtq8AzE8VdYxw94IY0ZgFNSulBHD3yy2A7ALk7yHHoA78qXZ33LpPcZy127G1L?=
 =?us-ascii?q?U9j1khWsZPNnephqhl+wjXBo7GiUOZl6mxeKQY3S7N8nqDzGWUsEFZVg5wTbvK?=
 =?us-ascii?q?XXQFakTKqtT541vIT6WyBrQ/LgtB1cmCJ7NXZdLzk1VJWu3vONTEbGK3gGe/Gx?=
 =?us-ascii?q?CIyrSIbIrpfmUd2D7QCEwFkwAV4HaHOhIyBiano2LCEjNuEUjjbF/r8el7sHm7?=
 =?us-ascii?q?VFM7zxmWb0190Lq44gMaiuaCS/wNxL4EuD0uqzNvHFmj2dLbEN6ApwtnfKVBbt?=
 =?us-ascii?q?Ix+lZH1WTFtwNjOpysNbxthlkbcw5vpUPhyw13CplckcgttH4q0AtyKaef0FNd?=
 =?us-ascii?q?dzOZ3Yr8OqHNJmn15hCvb6/W2lfR0NuN/qcP6fI4q0jsvQ2zF0oi9Wln3MdR03?=
 =?us-ascii?q?eG+prKCw8SW4rrUkkr7xh6u63aYi4l6ozO0X1jL6a1vSHC2t4zH+Ql1wuvcM1Z?=
 =?us-ascii?q?MKOHEw/yDdYXB8yvKOwshlioYQgIPOFU9K4oIcymc+GK17KsPOZlhDiml3hI4J?=
 =?us-ascii?q?hh0kKQ8CpxUu7J34sfz/6ExAeGVjf8g02nssD4go1EYTASHmyiySnrHoJRZ6ty?=
 =?us-ascii?q?fZoVBmeqOcG42tJ+h5v1UX5C6FGjH08G2NOueReKdVz93BFf2l4NoXO6niu01T?=
 =?us-ascii?q?p0nC8zrqqexSDB3/7tdB4aNWFVXmliilHsLJOwj9AbWkiocgcomAGk5Ub826hU?=
 =?us-ascii?q?uqB/I3PPTkdPeij8N3tiXbeotrqef85P74slsCVWUOimYVGWUKX9owYc0y74G2?=
 =?us-ascii?q?texTY7dyylu5njnhx6jn6dI2h3rHbDZc5wwhLf7sTGRfFNxjoGWDV4iT7PC1i+?=
 =?us-ascii?q?Jdap59aUl5TEsuykTGKuTJ5TcSrqzYOGqiS743ZnARm+n/C1h93mHhI20S7919?=
 =?us-ascii?q?l2SyrIqAzwbZXs16S/KehnZFVnBEfg68pmHYFziosxi4sX2XQAhJWV/HwHnHz3?=
 =?us-ascii?q?MdVa36L+cXUMSSQKw97T/AjqxkljImiVyIL+U3WX2tFhaMWiYmMKxiI96NhHCK?=
 =?us-ascii?q?SO47xFhyd1oke4ohjXYfhyhTodzfou6HgHg+AGogYtzyOdAqwMEklcJyDjixOI?=
 =?us-ascii?q?79WmpqVNeGmvaaSw1FZ5nd25CbGCowJcV2zjdpYsAyBw9dl/P0zW0HLo9I7kYt?=
 =?us-ascii?q?bQYMkXth2VlRfAkudUJIgwlvoMmSpoJ2b9sWc5xO48iBxkxYu6s5SfK2Vx4KK5?=
 =?us-ascii?q?BQZVNiHyZ8MW4D3sjLxRnsCL34C0BZVhGy4GXJ/pTfKuDTITuu7rNweIED0gtH?=
 =?us-ascii?q?ibHaDTEhOY6Edjt3jPCYykN2mLJHkFytVvXAKSK1ZYgAAQQTU2hJo5Fh2xyczl?=
 =?us-ascii?q?cUd54C0R51HiphtNzOJoKwfwUmPFqAi0bTc0TYCVLABK4QFa+0fVLcue4/pxHy?=
 =?us-ascii?q?5C+52usheNJnaHZwhSDmEJR0+EB03lPra0/tnN6OyYBuu4L/vTbrSCs+1eV/GU?=
 =?us-ascii?q?xZ2x1otq5SqDNsKKPnN6Ff00xlJDXWxlG8TegzgOSysXlz/Ub86Gvhi8/Dd7rt?=
 =?us-ascii?q?u48PTtVwLi/o+PC7pUMdVy9BG6m6aDN+iMhClnLTZUzI8DxXjNyLIHxl4dlzlu?=
 =?us-ascii?q?dyWxEbQHrSPNTLzfmq5UDx4YaiN/LshI77g73glCJ8HbkM711qVjg/4xCldFU0?=
 =?us-ascii?q?Hhm86zacwLJWG9KE3IBEKROLuaIj3Lxtn9YbmgRr1IkOVUqxqwtC6BHE/+JTuD?=
 =?us-ascii?q?jSfmVhC1PeFIjSGWJxheuIC7chZwBmnvVtPmahunMNBpiT0626E7hnTPNWQEKz?=
 =?us-ascii?q?hzb1tNrqGM7SNfmvh/B21B7n9/IeaYgSqW8+nYJYgQsfZwBiR0luRa4Gk1yrdP?=
 =?us-ascii?q?7SFEQuB1lzXWrtJ0v16mleyPwCJ9UBVSsjZLmJ6LvUJ6NKTZ7JZAX3PE/BML7W?=
 =?us-ascii?q?qIChUKp8FqCtvgu61LztjPlaTzKCpN8t7O/MscAdTUJ9yDMHY7LRXpHzvUX0M5?=
 =?us-ascii?q?SmuOPHvcz2ZHl+6UvimftJ89rJnhsJkDULlWUBoyDPxMTgxKBtENaLRtWTok1J?=
 =?us-ascii?q?6SltIN7Hz2+BbLScpZvrjDV/SPEfvoNTCVhKVFYB1Oxqn3e8BbfLfy1UVvbhFY?=
 =?us-ascii?q?1MKCJFvLWttOo2cpOhU9rkxA9FB9Q3c11kajbRmitiw9D/mxyzQ/kBd5evZl2z?=
 =?us-ascii?q?Do6kwlK0XRpyp4xEMrltHNiz+dfSC3NKPmDtIeMDb9q0VkasCzeA1ydwDn2BU8?=
 =?us-ascii?q?bDo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAABJwwZch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUgYBAQsBgTCCOyeaLhSJC44qgSQDShQBARgTAYdMIjUIDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIkCwENAQE3AQUJAQEYBzEDMQEFARwGARIFg?=
 =?us-ascii?q?xyBdQ0BBJk9PIodgWwzgnYBAQWHKwgSh12DE4EcFz6BQYhthhKJL5ccCYJdjlk?=
 =?us-ascii?q?LGIlbh0uJBo9KAgQCBAUCBQ8hE4ETAYILfgeDJ4IbDBeDSopUPzIBgQMBAQEgh?=
 =?us-ascii?q?3WCTQEB?=
X-IPAS-Result: =?us-ascii?q?A0AXAABJwwZch0O0hNFkHAEBAQQBAQcEAQGBUgYBAQsBgTC?=
 =?us-ascii?q?COyeaLhSJC44qgSQDShQBARgTAYdMIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIkCwENAQE3AQUJAQEYBzEDMQEFARwGARIFgxyBdQ0BBJk9PIo?=
 =?us-ascii?q?dgWwzgnYBAQWHKwgSh12DE4EcFz6BQYhthhKJL5ccCYJdjlkLGIlbh0uJBo9KA?=
 =?us-ascii?q?gQCBAUCBQ8hE4ETAYILfgeDJ4IbDBeDSopUPzIBgQMBAQEgh3WCTQEB?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="56061609"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 10:16:03 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726055AbeLDSQC (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 13:16:02 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:36329 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725874AbeLDSP7 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 13:15:59 -0500
Received: by mail-wm1-f65.google.com with SMTP id a18so10371468wmj.1
        for <linux-kernel@vger.kernel.org>; Tue, 04 Dec 2018 10:15:58 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=bgdev-pl.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=X1dmBx0JVfBSs7y6AKVDKRrwdua0x+fx/5T+3iUjrVo=;
        b=WcPd3C/Ms/aqjxaGAybTHDJuP+iNNidQGOL0EbuUBC9gaUvU9MTx7gs+m0ihKk8vjO
         qIcVs2CFArvgy7chhCudrMgKTKYP9LZr9uStpavFqCUtggajksz1jBl+JbAqfuJ2kPzS
         d8u46XHHVBe7XnR0TtEQK/FhRcp0TzXR8ogfPZiWeo026+U1fzFbnWm1nFPZEHCspInX
         QxGa1ys3hNVSb4yAsQwSCKAx8QL68/lVe11v5XdXO8SU0z1WbtEW9veTj719JIoYCej5
         ZYieL+DH5LlDk2xh30kwyJXQeMPCqKDOY/w0zDhpk9MF4jDSS/nHEUPFAXrBoDkVtQZX
         ecMQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=X1dmBx0JVfBSs7y6AKVDKRrwdua0x+fx/5T+3iUjrVo=;
        b=uOWt5MTiEC2tRF9PJdmAEXZJWUR3jDNCLm7OrqI2921aoqctoD40P9C0opFhFhKgca
         zxlvxab/sd9FVxwSnIdIIHjxXNJziQEMh3v/5lfKJpxjEWw6t3dtUtu9v/zVRH5RKGze
         OTc8iEkOV3rpMp1d6udXZ25BuBzRhXVVHdzetFme6vEksox2Qdd19J+muju2YWjcxgWF
         5AEoz3Dw8HxuM4X3a4qVuqUVR+cspTLgsFOg5xEr0PB235WDOjX7vM0x/19IYD3zm+rs
         XxfFhkcSk9yNjqzUyREY5jZBmMmn5FdyuXGAhiK+bjBUTfJJrGljucuM0l26RgS5X2V2
         NmnQ==
X-Gm-Message-State: AA+aEWZPYE0J6aXxenXqteitB5uRius6NnemxggOffQmgeeCJ5CDeYwv
        yZAB+dk/FCiQ3123WqARyvqDTn3334A=
X-Google-Smtp-Source: AFSGD/UxOUsn52W/F2NAawJMU8CQtduSUCpfgkeD53xHY3UAeZt4/iLQlFk1CH0kFFPmf0jERMwuNA==
X-Received: by 2002:a7b:c397:: with SMTP id s23mr12905670wmj.127.1543947357528;
        Tue, 04 Dec 2018 10:15:57 -0800 (PST)
Received: from debian-brgl.home ([2a01:cb1d:af:5b00:6d6c:8493:1ab5:dad7])
        by smtp.gmail.com with ESMTPSA id l20sm37942897wrb.93.2018.12.04.10.15.56
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 04 Dec 2018 10:15:57 -0800 (PST)
From: Bartosz Golaszewski <brgl@bgdev.pl>
To: Mark Brown <broonie@kernel.org>,
        Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        "Rafael J . Wysocki" <rafael@kernel.org>
Cc: linux-kernel@vger.kernel.org,
        Bartosz Golaszewski <bgolaszewski@baylibre.com>
Subject: [PATCH 1/1] regmap: irq: handle HW using separate mask bits for edges
Date: Tue,  4 Dec 2018 19:15:50 +0100
Message-Id: <20181204181550.29122-2-brgl@bgdev.pl>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181204181550.29122-1-brgl@bgdev.pl>
References: <20181204181550.29122-1-brgl@bgdev.pl>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Bartosz Golaszewski <bgolaszewski@baylibre.com>

Some interrupt controllers use separate bits for controlling rising
and falling edge interrupts in the mask register.

Let's reuse the existing type fields in struct regmap_irq to make
regmap_irq_chip available to such HW.

If the type_base and mask_base offsets are the same - assume there
are separate bits for falling and rising edge interrupts and use
the value previously written to the type buffer by the set_type()
callback instead of the entire mask specified for this interrupt
so that we only enable the requested edge interrupts.

Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
---
 drivers/base/regmap/regmap-irq.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/base/regmap/regmap-irq.c b/drivers/base/regmap/regmap-irq.c
index 429ca8ed7e51..109ae353c526 100644
--- a/drivers/base/regmap/regmap-irq.c
+++ b/drivers/base/regmap/regmap-irq.c
@@ -194,8 +194,24 @@ static void regmap_irq_enable(struct irq_data *data)
 	struct regmap_irq_chip_data *d = irq_data_get_irq_chip_data(data);
 	struct regmap *map = d->map;
 	const struct regmap_irq *irq_data = irq_to_regmap_irq(d, data->hwirq);
+	unsigned int mask;
 
-	d->mask_buf[irq_data->reg_offset / map->reg_stride] &= ~irq_data->mask;
+	/*
+	 * If the type_base and mask_base addresses are the same, then
+	 * the underlying hardware uses separate mask bits for rising and
+	 * falling edge interrupts, but we want to make them into a single
+	 * virtual interrupt with configurable edge.
+	 *
+	 * Instead of using the regular mask bits for this interrupt, use
+	 * the value previously written to the type buffer at the
+	 * corresponding offset in regmap_irq_set_type().
+	 */
+	if (unlikely(d->chip->type_base == d->chip->mask_base))
+		mask = d->type_buf[irq_data->reg_offset / map->reg_stride];
+	else
+		mask = irq_data->mask;
+
+	d->mask_buf[irq_data->reg_offset / map->reg_stride] &= ~mask;
 }
 
 static void regmap_irq_disable(struct irq_data *data)
-- 
2.19.1

