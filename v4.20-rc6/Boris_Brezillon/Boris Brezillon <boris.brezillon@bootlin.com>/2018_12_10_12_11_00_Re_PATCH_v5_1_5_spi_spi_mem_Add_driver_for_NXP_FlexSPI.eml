Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 20:35:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9C643580380;
	Mon, 10 Dec 2018 04:13:27 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 04:13:27 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AsAOPqxDCnBUQmBQpYS9lUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7+pcuwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBAOgPPehfoIbyu1QArQCmBQSuH+7v1j1Fi2Xq0aAgz+gtDwfL1xEgEdIUt3?=
 =?us-ascii?q?TUqc34OboVUeCvzanI1ijIYu5M2Tjj6YnIcxQhofWLXbJ2bMHczlIgFwTfjlWR?=
 =?us-ascii?q?sozpJSia1v4TvGma7upgUeavi2khqwxquTevwcAsipXNhoIUzFDI7zl2wIEwJd?=
 =?us-ascii?q?ChTkNwfNCqEJxVty6ANot2RNsvTHp1uCY00LEGuJi7cS4Xw5ok3x7Sc+KLf5SM?=
 =?us-ascii?q?7x75SeqcLyl0iGh4dL+8mxq+60mtx+/kWsSwzFpGtClIn9rWunwTyhDf8MeKR/?=
 =?us-ascii?q?R780y8wziAzRrT5ftBIU0slarUNZohwrkom5oNvkTMADX2lF/1jKCIbEUk/Pan?=
 =?us-ascii?q?6+D9brXhvJ+cOJd4igD4MqswhsyyGfo0PhQKUmSB5Oix2qPv8VfkTLhJkvE6iK?=
 =?us-ascii?q?jUvZLCKcQevKG5AgtV0og56xa4CjeryNAYnXgBLFJYdxOLlovpNE/UIPD+E/i/?=
 =?us-ascii?q?h02gkDBlxvDAILLhGI7ALmbMkLj/Z7Zx8U1cxxQpzdBZ+Z1UDqsNIPXpWk/+rN?=
 =?us-ascii?q?DYFAM2MxSow+b7D9VwzoceWWOMAqCHKq/TvkKI6/krI+mNYo8VpTn8J+Ik5/7o?=
 =?us-ascii?q?kX82h1sdcbO10psQbXCyBu5mLFmBYXrwntcBFn8HvgokQ+zrlF2NSzlTa2yyX6?=
 =?us-ascii?q?Ih/D47Do2mAJzHRoCshryBwSi6EodXZmBAFlCDD3Poe5+YVPcLbSKYOtVhnSAc?=
 =?us-ascii?q?Vbi9V48h0gmjtA39y7V5NObU+SoYtZTl1Nhy/ODTkRAy9TppD8WSyW2NTmd0nn?=
 =?us-ascii?q?8WSD8yxqxwvUt9ylKb26hin/NYDcBT5+9OUgoiL5Hc1Ox6C9fxWg7bZNeGUlSm?=
 =?us-ascii?q?T86iATEwSNIx3tAPb1x8G9WkkhDMwS6qD6UJmLyMAZw+6rjc0GTpJ8Zh13bG07?=
 =?us-ascii?q?Esj1o8TctJL2Gmgq9/+BLVB47GiEiZk6eqdaIB3C/C7muDzGyOvF1GXw50S6nK?=
 =?us-ascii?q?QXcfZk7Op9Tj+kzCV6OuCaggMgZZ1MGNMLVKZcPzgVVGXvjjPs/ebHy3m2u3AR?=
 =?us-ascii?q?aIxbaMbI7xdmUZ3SXdDlUEkg8J8XaHMwg+Gjmuo2bEADNyElLvZlvm8fNip3Oj?=
 =?us-ascii?q?Uk800waKYlV82LWv5B4am+aQS/MJ0bICoycutTN0EU2539LXDdqAugVgcL9dYd?=
 =?us-ascii?q?M7/FdIy2bZuxZhMZynKqBonkQefBhvv0PyyxV3DZ1NkdQrrHMvywpyNaKY0VNb?=
 =?us-ascii?q?ezOEx5zwPafXKm3z/BCpZK7bwVXe0NeQ+qcS5/U0sVTjvAe1FkU893VrycVa03?=
 =?us-ascii?q?yZ5p/SFgodTYrxUlor9xh9v7zVeC096J3b1HJyMai4qCTN2880C+Q/zBagfNBf?=
 =?us-ascii?q?ML2fGQ/2Es0aAdWuKeMwl1ioaBIEIP5d9KouM8y6cPuG3bahPPx8kzK+kWRH/I?=
 =?us-ascii?q?d931qM9iphUOLHw4wJwvCY3gSdUTf8g0ysssT2mYBCeDETEXCzySniBI5NeKJy?=
 =?us-ascii?q?eZwHBnupI82y3t9+nYLiW2ZE9F6/AFMLwNWpeRuOYFPnxw1fyEMXrWahmSSm1T?=
 =?us-ascii?q?x0kiglobaF0yzK3uvtagAHOmlNRGR5iVfsII60j80VXUSybggpkgel6lj+x6RB?=
 =?us-ascii?q?uKt/KGzTS19SfyfqN2FiTrewtr2abs9P6ZMkqyVWXP6nYVCHTL7wuB8a0yLlH2?=
 =?us-ascii?q?tDyzE3bTCqupPlnxNkjGKRNmp8rH3cecto3xfQ+MTcReJN3joBXCR4iyPYBkK/?=
 =?us-ascii?q?P9mq+tWYjYzDvfq9V2KiV51TdzfkzYWbuSu/5G1qBwC/nv+plt3mFwg6zTH019?=
 =?us-ascii?q?1wWSrUqxb8Z5Hh176mPuJ/YkloGFj85tJ6G45klYs8npMQ2XkchpiO+XoHkGHz?=
 =?us-ascii?q?MchU2K7kbXoNQyILzMDR4AT/xEJjKXeJzZrjVnqB2sthe8W6YmQO1yI+9c9KCb?=
 =?us-ascii?q?2Y7LxZnSRvpFq4ohncYfx8njcb1Psv52QWg+APuAox0CqdBqoeElVfPSzpjx6I?=
 =?us-ascii?q?9cyxrL1LZGazdri9zE9+ndGiDL6YuA1dVmj2eow+HSBu9MVwK0zD0Gf86oz/fN?=
 =?us-ascii?q?nQbNQTtgCbkhvajuhVLo4xmeQOhSZ9JW39unglwfYhjRNyxZG6oJSHK2J18aKl?=
 =?us-ascii?q?BR5YMyf5ZsIJ9THrkKZehd2W34G0E5VlGzULWoboTP2yHDITs/TnKxiBEDkmpn?=
 =?us-ascii?q?iHHrrfGBeV6F16oHLXD5CrK3aXKWECwtp4QxmdIFFfjBoQXDUnhZM5EgGqxMr8?=
 =?us-ascii?q?cEZ2/DwR51j4qgdSxeJsLRXwTmDfpAKwYDcuVJefNAZW7h1F50rNM8yR9OdzED?=
 =?us-ascii?q?9D/pG7sAyBMG+bZxlLDWEUXEyLHUvjM6Kq5dnB9eiYG+W/I+HPYbWItexRSfOI?=
 =?us-ascii?q?yYiz3Yth+jaGLt+PMWV6D/0nxkpDWmh0GsTemzUSUiwXijjCb8iBqBen/S13qM?=
 =?us-ascii?q?+//e/vWALu44uPFrRTPc9u+xCwnaeMKeqQiDxlJjZf05MG3WXIx6QH3F4OlyFu?=
 =?us-ascii?q?cCGgEbQeui7MT6LQma5XAwQYayNpM8tI4Lwz3hNQOc7Akd710r94jvgoC1ZKT1?=
 =?us-ascii?q?Dhm8epZdAULGG5Ll/IGEGLNLGeLz3R3873eb+8SaFXjOhMrRKwpC2UE1X9MTWD?=
 =?us-ascii?q?jTXpUxGvPPpIjCGaOhxepY68fgxsCWjlUNLpdBm7PMVrgj0xxL0+nmnKOnIEMT?=
 =?us-ascii?q?hgb0NNqaWd7T9ZgvV6AWBO8mBpIvWEmymH6enVMZIWsfptAiRpmONW+nU6y71J?=
 =?us-ascii?q?7C5aQPx5gjfdrtlro1u+iOmA1iJnUAZSqjZMnI+KvV9tOaPc9plBX3bL5BMM7W?=
 =?us-ascii?q?WKBBQMqNtoEdnvu6FWytjSm6P/MjZC89TI/cQCA8jYMt6IMH0kMUmhJDmBPQwK?=
 =?us-ascii?q?QCWrfUfWnUVMmffa2XSItNBuu5/jlYEOTLZBXU08ELUVA1l/NNoSONF8WTZywp?=
 =?us-ascii?q?CBi8tdz32krQKZbt9XrJHDUvWUSaHlLyyYlv9OfRYawLf8KoI7PIr8x0hjbB9x?=
 =?us-ascii?q?m4GcSBmYZsxEviA0Nlx8m05K6nUrCzRrg08=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CBAAApWA5ch0O0hNFjGwEBAQEDAQEBB?=
 =?us-ascii?q?wMBAQGBZQKDaieMcosvgg0UaIgWhHsRiyYsEwGEQAKDKiI4EgEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkvQgEOAYFkJAGCYQEBAQECAQECJBM/BQEGAwEBChEEAQEBCR4HA?=
 =?us-ascii?q?wwSBwQaCQgGEwWDHIFqAw0IBAGldTOHdQ2CHIwhgVc/gRGCXTWCV4IEhgECiWW?=
 =?us-ascii?q?BRIRakEQuBwKCIQSLC3CDJCMKAoFQiECHIY8ji2qBd00jgzyCJBqOHj8ygQUBA?=
 =?us-ascii?q?SETgRyILYJMAQE?=
X-IPAS-Result: =?us-ascii?q?A0CBAAApWA5ch0O0hNFjGwEBAQEDAQEBBwMBAQGBZQKDaie?=
 =?us-ascii?q?Mcosvgg0UaIgWhHsRiyYsEwGEQAKDKiI4EgEDAQEBAQEBAgETAQEBCA0JCCkvQ?=
 =?us-ascii?q?gEOAYFkJAGCYQEBAQECAQECJBM/BQEGAwEBChEEAQEBCR4HAwwSBwQaCQgGEwW?=
 =?us-ascii?q?DHIFqAw0IBAGldTOHdQ2CHIwhgVc/gRGCXTWCV4IEhgECiWWBRIRakEQuBwKCI?=
 =?us-ascii?q?QSLC3CDJCMKAoFQiECHIY8ji2qBd00jgzyCJBqOHj8ygQUBASETgRyILYJMAQE?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="55680396"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 10 Dec 2018 04:13:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727548AbeLJMNS (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 10 Dec 2018 07:13:18 -0500
Received: from mail.bootlin.com ([62.4.15.54]:60240 "EHLO mail.bootlin.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726606AbeLJMNS (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 10 Dec 2018 07:13:18 -0500
Received: by mail.bootlin.com (Postfix, from userid 110)
        id 04A5A20CEC; Mon, 10 Dec 2018 13:13:16 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail.bootlin.com
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=ALL_TRUSTED,SHORTCIRCUIT,
        URIBL_BLOCKED shortcircuit=ham autolearn=disabled version=3.4.2
Received: from bbrezillon (aaubervilliers-681-1-79-44.w90-88.abo.wanadoo.fr [90.88.21.44])
        by mail.bootlin.com (Postfix) with ESMTPSA id 9C81220CE8;
        Mon, 10 Dec 2018 13:13:15 +0100 (CET)
Date: Mon, 10 Dec 2018 13:11:00 +0100
From: Boris Brezillon <boris.brezillon@bootlin.com>
To: Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com>
Cc: Schrempf Frieder <frieder.schrempf@kontron.de>,
        "linux-mtd@lists.infradead.org" <linux-mtd@lists.infradead.org>,
        "marek.vasut@gmail.com" <marek.vasut@gmail.com>,
        "broonie@kernel.org" <broonie@kernel.org>,
        "linux-spi@vger.kernel.org" <linux-spi@vger.kernel.org>,
        "devicetree@vger.kernel.org" <devicetree@vger.kernel.org>,
        "robh@kernel.org" <robh@kernel.org>,
        "mark.rutland@arm.com" <mark.rutland@arm.com>,
        "shawnguo@kernel.org" <shawnguo@kernel.org>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "computersforpeace@gmail.com" <computersforpeace@gmail.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI
 controller
Message-ID: <20181210131100.6e4801e2@bbrezillon>
In-Reply-To: <VI1PR04MB57269A32C1FF1592F117B97799A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
References: <1542366701-16065-1-git-send-email-yogeshnarayan.gaur@nxp.com>
        <1542366701-16065-2-git-send-email-yogeshnarayan.gaur@nxp.com>
        <eb8a31d8-2ba6-f27c-addf-545c77921b77@kontron.de>
        <VI1PR04MB57267D9F69719B4BEF38BF8699A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
        <20181210111909.35384eee@bbrezillon>
        <VI1PR04MB57268740CA806FFB164780EB99A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
        <20181210115001.6c7af1d7@bbrezillon>
        <VI1PR04MB5726F0DDAC84F1AEC20B56DF99A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
        <20181210120925.3c6336f6@bbrezillon>
        <VI1PR04MB57269A32C1FF1592F117B97799A50@VI1PR04MB5726.eurprd04.prod.outlook.com>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 10 Dec 2018 11:25:55 +0000
Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com> wrote:

> Hi Boris,
> 
> > -----Original Message-----
> > From: Boris Brezillon [mailto:boris.brezillon@bootlin.com]
> > Sent: Monday, December 10, 2018 4:39 PM
> > To: Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com>
> > Cc: Schrempf Frieder <frieder.schrempf@kontron.de>; linux-
> > mtd@lists.infradead.org; marek.vasut@gmail.com; broonie@kernel.org; linux-
> > spi@vger.kernel.org; devicetree@vger.kernel.org; robh@kernel.org;
> > mark.rutland@arm.com; shawnguo@kernel.org; linux-arm-
> > kernel@lists.infradead.org; computersforpeace@gmail.com; linux-
> > kernel@vger.kernel.org
> > Subject: Re: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI controller
> > 
> > On Mon, 10 Dec 2018 10:59:54 +0000
> > Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com> wrote:
> >   
> > > Hi Boris,
> > >  
> > > > -----Original Message-----
> > > > From: Boris Brezillon [mailto:boris.brezillon@bootlin.com]
> > > > Sent: Monday, December 10, 2018 4:20 PM
> > > > To: Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com>
> > > > Cc: Schrempf Frieder <frieder.schrempf@kontron.de>; linux-
> > > > mtd@lists.infradead.org; marek.vasut@gmail.com; broonie@kernel.org;
> > > > linux- spi@vger.kernel.org; devicetree@vger.kernel.org;
> > > > robh@kernel.org; mark.rutland@arm.com; shawnguo@kernel.org;
> > > > linux-arm- kernel@lists.infradead.org; computersforpeace@gmail.com;
> > > > linux- kernel@vger.kernel.org
> > > > Subject: Re: [PATCH v5 1/5] spi: spi-mem: Add driver for NXP FlexSPI
> > > > controller
> > > >
> > > > On Mon, 10 Dec 2018 10:43:56 +0000
> > > > Yogesh Narayan Gaur <yogeshnarayan.gaur@nxp.com> wrote:
> > > >  
> > > > > > > Thus, in LUT preparation we have assigned only the base address.
> > > > > > > Now if I have assigned ahb_buf_size to FSPI_FLSHXXCR0 register
> > > > > > > then for  
> > > > > > read/write data beyond limit of ahb_buf_size offset I get data corruption.
> > > > > >
> > > > > > Why would you do that? We have the ->adjust_op_size() exactly
> > > > > > for this reason, so, if someone tries to do a spi_mem_op with
> > > > > > data.nbytes > ahb_buf_size you should return an error.
> > > > > >  
> > > > > Let me explain my implementation with example. If I have to write
> > > > > data of size  
> > > > 0x100 bytes at offset 0x1200 for CS1, I would program as below:  
> > > > > In func nxp_fspi_select_mem(), would set value of controller
> > > > > address space  
> > > > size, memmap_phy_size, to FSPI_FLSHA2CR0 and rest all FSPI_FLSHXXCR0 as  
> > 0.  
> > > > > Value of memmap_phy_size is 0x10000000 i.e. 256 MB for my
> > > > > LX2160ARDB  
> > > > target.  
> > > > > Then in nxp_fspi_prepare_lut(), I would prepare LUT ADDR with
> > > > > address length  
> > > > requirement 3/4 byte for NOR or 1/2/3/4 bytes for NAND flash.  
> > > > > Also for LUT_NXP_WRITE would program data bytes as 0.
> > > > >
> > > > > Then inside func nxp_fspi_do_op(), set register FSPI_IPCR0 as the
> > > > > address offset i.e. 0x1200 and in register FSPI_IPCR1 program the
> > > > > data size to write i.e. 0x100
> > > > >
> > > > > If, as suggested if I tries to mark value of register
> > > > > FSPI_FLSHA2CR0 equal to  
> > > > ahb_buf_size (0x800), then access for address 0x1200 gives me wrong
> > > > data. This is because as per the controller specification access to
> > > > flash connected at CS1 can be performed under range of FSPI_ FLSHA1CR0  
> > and FSPI_ FLSHA2CR0.  
> > > >
> > > > Don't you have a way to set an offset to apply to the address
> > > > accessed through the AHB? And if you don't, how will it work if your
> > > > mapping is smaller than the flash size?  
> > >
> > > Write operations are triggered using IP commands instead of AHB command.
> > > For Read AHB command is used and in this we are adding the offset when  
> > performing memcpy_fromIO operation  
> > >       memcpy_fromio(op->data.buf.in, (f->ahb_addr + op->addr.val),
> > > len);
> > >
> > > AHB/IP operations are independent of the way how CS got selected. CS  
> > selection depends, e.g. CS1 on the value of register FSPI_FLSHA1CR0 and
> > FSPI_FLSHA2CR0.  
> > >
> > > Mapping can never going to be smaller than the connected flash size as per  
> > discussion with the Board design team and if it's possible by user manually
> > changes the non-soldered part then flash area beyond complete mapping is not
> > accessible.  
> > > On LX2160ARDB, with mapping of 256MB, for now we are having 4 flash  
> > devices connected with size as 64 MB. If user wants he can have only one single
> > flash with flash size of 256MB.
> > 
> > Given that the dirmap interface has now been merged and the MTD side of
> > things is soon to be merged, I'd recommend you to implement it in your
> > v6 and only use non-AHB accesses for the ->exec_op() implementation.  
> 
> This would going to be performance hit if I would use non-AHB accesses for ->exec_op().

Not if you implement the dirmap hooks.
