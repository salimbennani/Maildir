Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 09:35:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 64F4E580375;
	Mon,  3 Dec 2018 17:15:33 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 17:15:33 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AXzsAYRR+ksUB9r6NjvUK3xINWtpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YRaAt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZDI2y?=
 =?us-ascii?q?b5UBAfcCM+ZWoIbyu0YBohmwCgm3HOPiyCRFhmPq0aAgz+gtDRvL0BImEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO620qnH1zPDZO5T1zf974jIaBchofeNXLJwbMrRylQkGgTEjlWO?=
 =?us-ascii?q?s4PlOSmZ1ucNs2ic9epgUuSvim8nqwFsoTii3cMsiojPho0P0FDE8j91wIEvJd?=
 =?us-ascii?q?23UUN2Z8OvHpVXtyGfLYR2Q8UiTnlsuCY7zL0Jo4S7fC8QxJQg3R7fZPqKeJWL?=
 =?us-ascii?q?7BL7TOudPyt0iXZ/dL6iiRu+71KsxvD/W8WoylpHryhInsHRun0P1BHf8MyKR/?=
 =?us-ascii?q?Rn8ku/xTqDyhrf5+FALE0yiKHVMYQuwqQqmZoWqUnDHjH5mEHxjKKOaEUk9fan?=
 =?us-ascii?q?6/79brXluJCcLYl0hR/6Mqg0ncy/G+s4PhAPX2id5+u8yKXu8VPlTLhOlPE6j6?=
 =?us-ascii?q?fUvI7AKcgGpaO1HxVZ34ch5hqnCjepytUYnX0JLFJffxKHipDkO1XPIPD+EPe+?=
 =?us-ascii?q?jE2gkDR1yPDcOL3uHJHNImHEkLbve7Zy9VRcxREtzdBQ+Z1UEKsNIPHtVU/rst?=
 =?us-ascii?q?zXEBs5Pxazw+b9B9VxzpkeVn6XAq+FLKPStkeF5uYuI+mPeoAZojn8K+U+6v7q?=
 =?us-ascii?q?jH85n0IdfKaz0ZsWbnC4AuppI0GDbXXwhdcBFH8AvhAiQ+zylF2CTTlTam6yX6?=
 =?us-ascii?q?0m5zE7FJipDYDZSoCtnbyOxiG7HpJNa2BCC1CMF2rodoqeV/cNbiKSPtFukjge?=
 =?us-ascii?q?Wbe9TI8h0AmktBXmxLp/MurU5ioYuIrh1Nhy+eLfjxIy9TtyD8Sb1GGAVGV0nm?=
 =?us-ascii?q?IORz8r06Fzu019ylGf0admh/xUD8Bc5/RMUg0iL57T0/R6C8zuWgLGZtqGUk2m?=
 =?us-ascii?q?QtWhATEyVN4x2cUBY0RmFtWmjxDD2TeqArAPm7yKApw07rzT33zrK8lhzHbG0b?=
 =?us-ascii?q?Erj0M6TctXKW2mmql/+hDQB4HTlUWVjaKqdaUG0y7L+2eO1m6OvEBeUA5tXqTJ?=
 =?us-ascii?q?R3EfZk3Krdvn4kPOVaOhCbMiMgFZ086NNrNKasH1jVVBXPrsJc7RY3yvlGuqBR?=
 =?us-ascii?q?aH3LWMbJH0dGUb2yndDEsEkwUX/XudMQg+ByGho3/RDTB0FFLvZV/s/vd6qH+h?=
 =?us-ascii?q?UkA0yASKZVV717Wp4h4VmeCcS/QL070ZoightSt7EEy9393MDdqAvBRufKNHbN?=
 =?us-ascii?q?M54VdH03/ZtgNnMpyhKaBimkARcwBts0zy0BV3D51KkdI2o3My0ApyNaWY3Utd?=
 =?us-ascii?q?dzOZ2JDwPaHXKmny/Ry1d67awFbe0MyS+qcO7vQ4pE7uvAWoFkok7nVm3MNZ03?=
 =?us-ascii?q?qa5pXWEgUSVYj9XVow9xh/v7vaeDUy55vI1X1wNqm5qiXN29Y3C+oq1Bmhf81T?=
 =?us-ascii?q?P7iZFADvCcIaAcuuKOs0m1WyahIEPeZS9LM7Ps+8dvuG3rKrM/hknD68kWtH54?=
 =?us-ascii?q?V92FqW9yVgUu7Iw4oFw/aA0wqHSjfwlkuuvtr2mIBEfz4SGGW/xDPgBI5QYK1y?=
 =?us-ascii?q?YIkKBX2vI82x2tVxmZrtV2RE+16kAlMMwNWpdgaKb1zhwQ1Q0lwaoWammSSk1T?=
 =?us-ascii?q?N0iSwmrq2F0CzI3evibhsHNndXS2Z4iVfjPJa7j8odXEiudAUpkBql5UDnx6lU?=
 =?us-ascii?q?vqh/Lm/TQVtWcCjyNW1tTqywtr+aac5V9JwoqTlXUPi7YV2CSr/9ogEW0iP5E2?=
 =?us-ascii?q?tF2TA7cSqnupH4nxx8lWKcI2x/rHvfecFs2xjf4MbQSuJW3joDXCN4kyXYBkCg?=
 =?us-ascii?q?P9m1+tWZj5XDvfqkV2KiVZ1TdjPnzZiauyu45m1qABu/kO61mtD8FQg60Cn718?=
 =?us-ascii?q?RlVCnSrRb8ZJXr2Lq+Me59YkZoA1r84dJgGo5iioswmI0Q2X8Ci5SV53UHln3/?=
 =?us-ascii?q?Mdda2aL4d3cNQT8Lw9jI4AnqwkFjL3SJx57nWXWZ2Mdue966YmYO0CIn889KEL?=
 =?us-ascii?q?uU7KBDnSZtoVq3twPRbeJ9njcA0/Qu7nEajvoNuAosyCWdH78TEVNZPSzqixSH?=
 =?us-ascii?q?8dS+oL9La2aodLi6zFB+ksy5DLGevgFcX270epIjHS9z9MpzKlzN32Po6oH4Zt?=
 =?us-ascii?q?bQd8kcuQOOkxfPlOVVLJMxlvwXhStoI279vHsly/Ilghxqx521oI+HK2B19qKj?=
 =?us-ascii?q?HhFYLiH1Z98U+jz1kaZemcOW05quH5p7HDULQYDoTempED8JsfTnNgCOECAzq3?=
 =?us-ascii?q?uBGLrfGxOf51lir37VD5+rMHSXLmEDzdp+XBmdOFBfgAcMUTohhJE5EQSqxNH7?=
 =?us-ascii?q?fEd9+zAc/Vr4qhpKyuJ1OBjzSGbfpAG0ajgqTJiTNgZZ7gZH503NK8yR8vpzHz?=
 =?us-ascii?q?1E/p2mtAGNKHaUZwFWAmESQECEG0rvPrqz5dnD7uiYAPCxL+DVbLWKqOxeUeqI?=
 =?us-ascii?q?xJ213otn+TaMKtuAPn14A/In3UpDWGhzG97FlDUXVywXiyXNYtabpRe75y13t9?=
 =?us-ascii?q?2//+7tWA71/ouPDL1SMdp09hCygKeDMfOQhSljJTZZ0JMM2WHHyLwF0FEOjCFu?=
 =?us-ascii?q?ciGnEa4cui7VUKLQhqhXAgYbayxtNctI7KE83ghXNc7YkNP10bF4geAvC1dYTl?=
 =?us-ascii?q?zsgcWpZc0MI2GgO1LLHkeLNLKaJTLVx8H7e7+zSbpVjO9MrR2/pS6bE1P/PjSE?=
 =?us-ascii?q?jzTmTQ2vPvpWjC6FPB1SooW9chd2BGjnTdLmbAC7MdBtgT03x700mm3FNWoGPT?=
 =?us-ascii?q?dgdENNq6Wa7TlEjfVnB2xB8n1lIPGYmyaY6unUMIoZveF3DSR0ie1a5m83y79U?=
 =?us-ascii?q?7CFCWfx0lzHert9oo1G6jOaPziBrXwZJqjZOnIiLp1ltOb3F9plcXnbJ5BIM4n?=
 =?us-ascii?q?+WCxQPpttlDMXguqFQytfVkqLzJyxP89bV/csaGsjVJ9iLMHsnMRr1BjHUCBEJ?=
 =?us-ascii?q?QiKsNWHa1ARhl6S88nqPr5E84rblmZwDTrtaHAg7UP0TC0JoGNgDCJhyVzIg17?=
 =?us-ascii?q?WciZhby2C5qUzwWsxc9rPHUeiVB+fvNTXR2bhabh1OwrP/N4MVJI3m2GRma19z?=
 =?us-ascii?q?hoOMHFDfC4Me6hZ9ZxM59R0euEN1SXc+jge8Mlug?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AFAADK1AVch0O0hNFZChoBAQEBAQIBA?=
 =?us-ascii?q?QEBBwIBAQEBgVMDAQEBAQsBgmmBAieMcIswgg0UjXaJPhSBYg8BARgGDQGICSI?=
 =?us-ascii?q?2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmIBAgMBAjUCBgEBHhkBBQkBA?=
 =?us-ascii?q?QoOCgkUEQMMBSABBQEiGBaDBgGCAQQBCpl7PIodgh+CdgEBBYcuAwUSim6BHIF?=
 =?us-ascii?q?XP4MlSTWDHgQYgRMJEwSFb4ZugnCFUpESBwKCHwSEXYZRg2AjCoFRiACHS4oHg?=
 =?us-ascii?q?2KKXQYCCQcPIYEsCIF+fUOCbIIbCQMXiF6FQT4yAQEIeAMBASETCwGHdYJMAQE?=
X-IPAS-Result: =?us-ascii?q?A0AFAADK1AVch0O0hNFZChoBAQEBAQIBAQEBBwIBAQEBgVM?=
 =?us-ascii?q?DAQEBAQsBgmmBAieMcIswgg0UjXaJPhSBYg8BARgGDQGICSI2Bw0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQoLCQgpIwyCNiQBgmIBAgMBAjUCBgEBHhkBBQkBAQoOCgkUEQMMBSA?=
 =?us-ascii?q?BBQEiGBaDBgGCAQQBCpl7PIodgh+CdgEBBYcuAwUSim6BHIFXP4MlSTWDHgQYg?=
 =?us-ascii?q?RMJEwSFb4ZugnCFUpESBwKCHwSEXYZRg2AjCoFRiACHS4oHg2KKXQYCCQcPIYE?=
 =?us-ascii?q?sCIF+fUOCbIIbCQMXiF6FQT4yAQEIeAMBASETCwGHdYJMAQE?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="43385992"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 03 Dec 2018 17:15:20 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726041AbeLDBPO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 20:15:14 -0500
Received: from mail-lj1-f194.google.com ([209.85.208.194]:42618 "EHLO
        mail-lj1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725995AbeLDBPO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 20:15:14 -0500
Received: by mail-lj1-f194.google.com with SMTP id l15-v6so13269058lja.9
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 17:15:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=date:from:to:cc:subject:message-id:mail-followup-to:references
         :mime-version:content-disposition:in-reply-to:user-agent;
        bh=qjY0/lr0i2iY1KvYb8ENhQPuPF/rJY7wvA7Wu5ze3fo=;
        b=io3EiGCdxfK+Fh75mAbBow4v/Yjl/pTniHXp2eupw0j3Rw59O9Kvw1hmW5TS/e4ATH
         Q2nS5Vt0mvWbfgF0BKe9ffBB7GBsv0l8P/3E1GV7GwBuWecscskIiXYmXM5TuDbOPXQx
         8MsAKGaErCI6msnZ7F2hXA75VAo6I/zZMTCn8=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id
         :mail-followup-to:references:mime-version:content-disposition
         :in-reply-to:user-agent;
        bh=qjY0/lr0i2iY1KvYb8ENhQPuPF/rJY7wvA7Wu5ze3fo=;
        b=kwm1JW9waJ3Qot90EHwrbJ/owmFiNTvNJ2vB1Mw0PwiSiwqYelejih1rreXwI2inD2
         M1VNqKWvLyHSYUuujTaU9BBcKfuGVPXjN3DsBu8HyYmSI8gEj42xyzA5dZ81xim2iuB4
         0PzDkNHFdBJ4Z0neA57qfuF3amT66Ka6XWrtk0Z+JGI4/zbros1Saj8xHaGb2GEhmUJS
         x4IdzN14suNPRMAN1J3O64U42IntKVSgW2fVOpDLMEIGgzbuaH+hpw0DS5k4ook9GMNi
         MMtDXI8mRypcJYyttXyjTcDlxUERxmWYGTmkdS6qjAjbDPlDKUxEDjOZFAk/QOePBSt/
         bK+g==
X-Gm-Message-State: AA+aEWb0+WUajL7+OLdzZh4TqbOr1FQPwIXebbbmrjQ+80DoMUsEfWkL
        a+aOW7VSwpo6QKYx4rck+MdVUA==
X-Google-Smtp-Source: AFSGD/UJ2c7fQGPYk3Ih/0jRNOcSWrXS3BUO3us2OICIqd2saJ+UNx4RxesfBf/BqzlVjxBpHJtNpA==
X-Received: by 2002:a2e:484:: with SMTP id a4-v6mr11495497ljf.27.1543886110516;
        Mon, 03 Dec 2018 17:15:10 -0800 (PST)
Received: from khorivan (59-201-94-178.pool.ukrtel.net. [178.94.201.59])
        by smtp.gmail.com with ESMTPSA id h12-v6sm2778691ljb.80.2018.12.03.17.15.09
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Mon, 03 Dec 2018 17:15:09 -0800 (PST)
Date: Tue, 4 Dec 2018 03:15:07 +0200
From: Ivan Khoronzhuk <ivan.khoronzhuk@linaro.org>
To: Florian Fainelli <f.fainelli@gmail.com>
Cc: davem@davemloft.net, grygorii.strashko@ti.com,
        linux-omap@vger.kernel.org, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org, jiri@mellanox.com, andrew@lunn.ch
Subject: Re: [RFC PATCH net-next 0/5] net: allow hw addresses for virtual
 devices
Message-ID: <20181204011506.GG23230@khorivan>
Mail-Followup-To: Florian Fainelli <f.fainelli@gmail.com>,
        davem@davemloft.net, grygorii.strashko@ti.com,
        linux-omap@vger.kernel.org, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org, jiri@mellanox.com, andrew@lunn.ch
References: <20181203184023.3430-1-ivan.khoronzhuk@linaro.org>
 <ec39f484-0fec-0721-f944-01e3a552a667@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <ec39f484-0fec-0721-f944-01e3a552a667@gmail.com>
User-Agent: Mutt/1.9.4 (2018-02-28)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 03, 2018 at 02:25:40PM -0800, Florian Fainelli wrote:
>On 12/3/18 10:40 AM, Ivan Khoronzhuk wrote:
>> One of the reasons of this proposition is safety and performance -
>> host should not receive traffic which is not designated for it.
>>
>> Some network devices can hold separate address tables for vlans and
>> real device, but for some reason there is no possibility to apply it
>> with generic net addressing scheme easily. At this moment the fastest
>> solution is to add mcast/ucast entries for every created vlan
>> including real device. But it also adds holes in the filtering and
>> thus wastes cpus cycles.
>>
>> This patchseries tries to correct core to assign mcast and ucast
>> addresses only for vlans that really require it and as result an end
>> driver can exclusively and simply set its rx filters. As an example
>> it's implemented on cpsw TI driver, but generic changes provided by
>> this series can be reused by other ethernet drivers having similar
>> rx filter address possibilities.
>>
>> An address+vid is considered as separate address. The reserved device
>> address length is 32 Bytes, for ethernet devices it's additional
>> opportunity to pass auxiliary address info, like virtual ID
>> identifying a device the address belongs to. This series makes it
>> possible at least for ETH_P_8021Q, but can be easily extended for ab.
>> Thus end real device can setup separate tables for virtual devices
>> just retrieving VID from the address. A device address space can
>> maintain addresses and references on them separately for each virtual
>> device if it needs so, or only addresses for real device (and all its
>> vlans) it holds usually.
>>
>> A vlan device can be in any place of device chain upper real device,
>> say smth like rdevice/bonding/vlan or even rdevice/macvlan/vlan.
>> Similar approach can be used for passing additional information for
>> virtual devices as allmulti flag or/and promisc flag and do this per
>> vlan, but this is separate story and could be added as a continuation.
>>
>> I was biased by try to add exclusive mcast and ucast support for vlans
>> and now have same with small generic correction and mostly locally in
>> the cpsw driver:
>> https://git.linaro.org/people/ivan.khoronzhuk/tsn_kernel.git/log/?h=ucast_vlan_fix
>> https://git.linaro.org/people/ivan.khoronzhuk/tsn_kernel.git/log/?h=mcast_vlan
>> and can say it looks better with generic changes provided by this patchset,
>> that's why this RFC. Above links can be used as fallback.
>>
>> This series is verified on TI am572x EVM that can hold separate tables
>> for vlans. Potentially it can be easily extended to netcp driver for
>> keystone 2 boards (including k2g) and also new am6 chipsets. As a
>> simple test case, different combinations of vlan+macvlan, macvlan+vlan
>> were used and tested as with unicast as multicast addresses.
>
>I think I get what you want to do, which is make sure that on per VID
>basis, only the necessary UC and MC addresses are programmed into the
>respective filters, when each of your network ports operate in what cpsw
>calls "dual emac"? Which is really something that should be called "NIC"
dual emac here is just a mode when two ports using shared h/w tried to
behave as a completely separate interfaces. But no sense here about it, as
this change is applicable for just one NIC that can be part of any struct
of above devices.


>mode, and/or is analogous to how we bring up ports in DSA: each of them
>acts as a separate network device. Speaking of the later, we have some
>known issues in unmanaged mode with MC addresses which I am working on
>addressing.
>
>It seems to me, as replied in patch 2, that what you are missing is the
>source of the address programming request, and therefore either you pass
>an additional "source net_device" to functions like dev_{uc,mc}_sync(),
I don't know correct way to propagate vlan device to the end real devices.
The closest I've found is to propagate it along with adding vid to parent
devices, but even in this case, it requires changes for every device
being able to propagate vid to real dev, where not always "structure" is
clear. But this approach also has drawbacks with code on end device,
see next comments.

>or you pass a well defined structured that can encode the address as
>well as the interface type, but the approach you have right now, where
>the address storage is extended to include the VID is both extremely
The address length is not changed, only used part that was reserved and
was present always. Changing addr len is much more harder then it looks
like, I've tried ).

>specific to VLAN devices, as well as not scaling particularly well.
I would rather decipher it as virtual ID. VID, virtual ID is smth not
strictly related for vlans, it can be considered as any device
identification with assumptions other types of net devs can have also
some kind of virtual devices with its ids. And it's naming only, I think
name is Ok, but can be changed.

>With
>your patches we have VLAN devices covered, but what about MACVLAN, bond,
>team or anything that needs to look at specific MAC addresses to be
>filtered to make management decisions?
That why actually this fix, if it's part of vlan addressing scheme,
bond/team/macvlan/whatever should be aware of such scheme. Particularly
if take bond, it still syncs its addresses with its parent devices
using same mc_sync and uc_sync APIs, that were changed to propagate all
vlan addresses farther (implemented in patch 1 and enabled in patch 2).

>
>Also imagine being able to store up to 4K MAC addresses for a total of
>4K VLANs, this would have occupied 4K * sizeof(some structure) and now
Yes it's additional addresses, but kernel holds separate address entries
for each device in the structure and no problems...updating not only
references. In this change, in best case, only end device contains
additional set of addresses for vlans, but pay attention, it holds also
references and sync information for each address with h/w (in normal
implementations using dev_mc/uc_sync), and allows to make updates only
if address added/removed.

In contrast to "memory wasting" approach.
Lets assume the ability to get vlan dev, not depending on the device
structure on top of it, is present. Then each end real device needs to
pass thru each vlan, compare each address, refcounters and so, to be
able to identify the vlans. Drawback: any change in vlan core / netdev
core can brake it. Assume I need to add it to several devices....,
frankly it looks not very portable, then I can try to create auxiliary
function and reuse it, but it looks not very.
For comparison on cpsw:

mc implementation using vlan device from the vlan_info list:
https://git.linaro.org/people/ivan.khoronzhuk/tsn_kernel.git/commit/?h=mcast_vlan&id=984782e8e2f8907593a4956e0922477307c73999

uc implementation using vlan device from the vlan_info list even bigger:
https://git.linaro.org/people/ivan.khoronzhuk/tsn_kernel.git/commit/?h=ucast_vlan_fix&id=ebc88a7d8758759322d9ff88f25f8bac51ce7219

Both, mc and uc implementations using proposed patchset is much simpler:
https://git.linaro.org/people/ivan.khoronzhuk/tsn_kernel.git/commit/?h=just_mc_uc_cpsw_vaddr_example&id=e9613ef0acafb6cb00db73b068fc0445ae737b5a


>it's 2 bytes bigger...
Not bigger, it still uses same reserved length - 32 bytes
(26 of each were not used).

>
>>
>> Based on net-next/master
>>
>> Ivan Khoronzhuk (5):
>>   net: core: dev_addr_lists: add VID to device address space
>>   net: 8021q: vlan_dev: add vid tag for uc and mc address lists
>>   net: 8021q: vlan_dev: add vid tag for vlan device mac address
>>   net: ethernet: add default vid len for all ehternet kind devices
>>   net: ethernet: ti: cpsw: update mc vlan and add uc vlan support based
>>     on addr vids
>>
>>  drivers/net/ethernet/ti/cpsw.c |  86 +++++++++++++++++++----
>>  include/linux/if_vlan.h        |   1 +
>>  include/linux/netdevice.h      |   7 ++
>>  net/8021q/vlan.c               |   3 +
>>  net/8021q/vlan_core.c          |  10 +++
>>  net/8021q/vlan_dev.c           | 103 ++++++++++++++++++++++-----
>>  net/core/dev_addr_lists.c      | 124 +++++++++++++++++++++++++++------
>>  net/ethernet/eth.c             |  15 +++-
>>  8 files changed, 290 insertions(+), 59 deletions(-)
>>
>
>
>-- 
>Florian

-- 
Regards,
Ivan Khoronzhuk
