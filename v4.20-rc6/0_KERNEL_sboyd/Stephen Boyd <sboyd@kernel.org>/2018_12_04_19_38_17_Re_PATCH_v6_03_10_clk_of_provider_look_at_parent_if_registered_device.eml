Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:43:41 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 3E4E9580375;
	Tue,  4 Dec 2018 11:38:25 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by orsmga004-1.jf.intel.com with ESMTP; 04 Dec 2018 11:38:25 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtDDT6hHcUCWPGujRgvsRoJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o869bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjEl/27ZhdJ+gqJZrxKvpBJwzZPabo+ONPpmfK7QZs8aRXNbU8pNSyBMGIGx?=
 =?us-ascii?q?Yo0SBOQBJ+ZYqIz9qkMToxuiGwasHOPvxSFOhnTrwKA61OQgHhzb1wEnBNIBq3?=
 =?us-ascii?q?PUrdXoO6oJUuC60rPIzTPdYPNSwzv975LIch84rPyKQLl+ctLRxFExGw/Zilic?=
 =?us-ascii?q?s5HpMj2L2ugXrmSW7PZsWfiuhmMlsw19vySjy8g2hoXUiI8Z1ErI+TljzIs3Kt?=
 =?us-ascii?q?C1TlNwb8S+H5tKrS6aMpN7QsM8TGFsvyY30qMGuZGlcygQ0pgnxADQa+aBc4eW?=
 =?us-ascii?q?5hLvTuGRIS13hH59ebK/gQi98VS4x+HiSsW51ExGojdLn9XSrHwByh/e5tSdRv?=
 =?us-ascii?q?Z8/EqtwTOP2BrS6uFAL0A0j63bK5s5z740l5oTt1nDHyDvlEX1kqCWbEMk9fas?=
 =?us-ascii?q?6+j+ZbXnqJmcOJFuigzlLKQuldKwAf4iPggNQWeb4+K826Pn/UHjR7VKlPI2nr?=
 =?us-ascii?q?HDsJ/GPcQburK5AwhN34Yn6ha/DCmp3M4XnHkaN19FfBOHj470O1DBOvz4DPG/?=
 =?us-ascii?q?g0iynzdv3fzJIrrhApDVJHjZjLjhZap961JbyAcrzdBQ/ZNUCq0bL/L0QEPxtM?=
 =?us-ascii?q?HYAQU/Mwy72OvnDNR91oUDWWOAGKOZMaXSsUOW6eIrOeWDeIgVuDPlIfg/+/Hu?=
 =?us-ascii?q?lWM5mUMafaSx35sXb263Eu5lI0WeZ3rshNABHHwOvgo/SuzqlVKDXSRSZ3a0Q6?=
 =?us-ascii?q?Iz+DU7BJi6AofEQ4CnmKaB0zujHp1KemBGDUiBHm3zd4WEXPcMazieItV7nTwG?=
 =?us-ascii?q?TrWhT44h1ReztA710bZnL+zU+jEGupLnztR6++rTlRQq/zxuE8udy32NT31znm?=
 =?us-ascii?q?4QRD85xqZ/rVZ5yleCy6d4hfNYGMdX5/NIVAc6KJHdw/Z7C9D0RgLOYNOJREy6?=
 =?us-ascii?q?TdWhBDE7VsgxzMMWY0ZhB9WiiQjO0DewDL8LibOHHpw0/bja33jqOcl9zXHK1K?=
 =?us-ascii?q?0ij1kjRstCLmmmhq959wjOCI/FiUSZl6C2dasC2C7B7nuMzW2LvEtASg5/Tb3F?=
 =?us-ascii?q?XWwDZkvRtdn2+1nNT6GwBrg9MgtO08iCKrBUZd3vllhGQPbjONLDY2O+gWuwBB?=
 =?us-ascii?q?CIxq+SY4ruYWkSwCLdCE0cmQAJ4XmGLRQ+Bjumo2/GEDxuFFfvY0Tw8el+qHK3?=
 =?us-ascii?q?VFM0wxuNb01707q1+xgVhfOHRvMX37IEvjohqjpuEFa82dLWF8SPpw57cKpAZt?=
 =?us-ascii?q?M95U9N1XjFuAxlIpygM6dii0YEfARzoUzv2At4C4VanccxsXMl0RB9KaSb0FNG?=
 =?us-ascii?q?aTOVxpTwOrzRKmnv8xGjca/W2lfC0NmI/qcD8ug3q1LmvAuxDEot721n08VJ03?=
 =?us-ascii?q?ub/pjLDBcSXYjtXUot9hl6p6vVYi8y547P0X1sMK+0siLN2t4zBeslzAqgcMlb?=
 =?us-ascii?q?MK+eCADyFMgaDdC0KOM2g1ipcg4EPOdK+a4uPsOpa+GJ2LS2M+Znhj6mi3pI4J?=
 =?us-ascii?q?p80k6V6yVzUOrI0IsbzPGC2QuHUSzxjFOgssDxhIBFaiseHmu5ySj4GoFRYrd+?=
 =?us-ascii?q?cpoMCWerO8e33Mlxh4bxW35E816uH1MH2M6zdRuSdVD9xhBQ1UIMrHyjmCu4yS?=
 =?us-ascii?q?F0kj4zoqqe2izO3/rtdB4dNmFXQ2liiE/mIZKogNACQEiocw8pmQOn5Ung3ahb?=
 =?us-ascii?q?p6d/L27JTUdTZSf2LGJiUqq2trWcZc5C85cosSRRUOShblGWUL/9ox0G0yz9G2?=
 =?us-ascii?q?tS3iw0dzavup/hhRx1lHqdLGpvrHreYcxxxQ3Q5NvGSf5T3zoGQjJ1iT3WBli6?=
 =?us-ascii?q?Itmo8s+Yl5bFsuCiSW2hUodffjXszYOFrCG7/3FlAQWjn/Cvnd3qCQs63jX619?=
 =?us-ascii?q?VwVSXIsQzzYo/k16mhNeJnf09oBELz6sZgG4F+lJcwi48U2XQAmpqV+n8Hm3/p?=
 =?us-ascii?q?MdpHwaL+cGYNRTkTzt7Q4Qjl21dsImiHxo3nTXWd3tVuZ8OhbWwIwCI94NtHCK?=
 =?us-ascii?q?OV7LxCgCt0rUC0rQPXYfhhgDgdzeEi52Idg+EMoAAt1DmSAqgOHUlEOizhjwiI?=
 =?us-ascii?q?79e7rKlNZWega76w1FdlndC6DbGPuQVcWHf/epc/Ei589MR/MFTQ0HLt7oHoYs?=
 =?us-ascii?q?XfbdUWtheMiRfPk/BVKI4tlvoNnSdoInjyvXohy+4mlxBu2Yy6sZODK2Vs+qK5?=
 =?us-ascii?q?HxFZOif0Z8MV5jHik6JektyK0ICoG5VrAi8LU4fwTfK0DDISsuzqNwSUHz05tH?=
 =?us-ascii?q?ibAqDTHROF5EdlsnLPEI2rN3eNK3kC1thiQBidJEpCgAEbRjk6n5g5Fhy0y8zl?=
 =?us-ascii?q?akt2+jcR5lvgoBtW1u1oLwX/UnvYpAqwajY0T4WfLANL7g5Y4UfZK9ee7uV1Hy?=
 =?us-ascii?q?FX5ZChqA2NKmqGZwVHF20JW0qEB0z9Mbmq/9XP7++YBu+mJfvUfbqOsfBeV+uP?=
 =?us-ascii?q?xZ+30otp4TeMNsaMPnljFfE72VBDXXd2G8vHgTUPVjcXmjnJb86aohe85yJ2ot?=
 =?us-ascii?q?q+8PTtRALg+4+PB6FOPtVo/hC8mb2DOPKIhCZlNTZY0YsBymXVyLcExl4dlSFv?=
 =?us-ascii?q?eyOpEbQBriPNSKPQmqlKDx8UcS9zNc1I774i0QlJI8LUltT11rtghP4vF1hFTU?=
 =?us-ascii?q?Dhmt2uZcESP2G9NVbHCFyXO7icOTLLw9/4YaWnRL1UjeVUsQCwuDmBH0/iODSD?=
 =?us-ascii?q?iyfmVxS1Pe5QiyGbOQRUuJuhfRZ1FWjjUNXmZwW7MdBtiz02xLw0hnXSOm8dMT?=
 =?us-ascii?q?hzaUVNrrKL4CNcg/V/HXFB73V/IemFnSaZ8/fXKpIMvfR3BSR0krES3HNvzrJJ?=
 =?us-ascii?q?8CACWvV0hDfTqNNoi1+n1POIyj9qTQBJsjsNj4WO+Q1nMLfL95RbUH3P+w8L8U?=
 =?us-ascii?q?2fDh0Lo51uDdi8lbpXz430iK/rKDpEu/jT7MdUU9PeL9OLGHksKxzkHHjTFgRT?=
 =?us-ascii?q?Hm3jDn3Wm0EIyKLazXaStJVv8pU=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AZAABN1wZch0O0hNFkHQEBBQEHBQGBU?=
 =?us-ascii?q?QgBCwGDayeDeYgZjA6BaDlolk2BcRYYEwGEOwMCgwwiNAkNAQMBAQEBAQECARM?=
 =?us-ascii?q?BAQEIDQkIKSMMgjYigmUDAwECIAQZAQE3AQUJAQEKGgImAgIDRBAHEgWDHIICB?=
 =?us-ascii?q?aQFcHwzgnYBAQWHKAiBC4sTF4FAP4ERM4IqNYUBgwSCV5AxkBoJkUEYkSaCfYY?=
 =?us-ascii?q?Jj3GBRoINMxoIKAh4BQZWgU6CGwwXEohMhWAfMgGBAQMBASETii0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AZAABN1wZch0O0hNFkHQEBBQEHBQGBUQgBCwGDayeDeYg?=
 =?us-ascii?q?ZjA6BaDlolk2BcRYYEwGEOwMCgwwiNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMg?=
 =?us-ascii?q?jYigmUDAwECIAQZAQE3AQUJAQEKGgImAgIDRBAHEgWDHIICBaQFcHwzgnYBAQW?=
 =?us-ascii?q?HKAiBC4sTF4FAP4ERM4IqNYUBgwSCV5AxkBoJkUEYkSaCfYYJj3GBRoINMxoIK?=
 =?us-ascii?q?Ah4BQZWgU6CGwwXEohMhWAfMgGBAQMBASETii0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="56076168"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 11:38:23 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726031AbeLDTiT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 14:38:19 -0500
Received: from mail.kernel.org ([198.145.29.99]:42376 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725855AbeLDTiT (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 14:38:19 -0500
Received: from localhost (unknown [104.132.0.74])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id F009A2081C;
        Tue,  4 Dec 2018 19:38:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543952298;
        bh=cngnxl+fU+ayv84S7RyWF15Ik1K/InQVU3DcM+FUCIo=;
        h=To:From:In-Reply-To:Cc:References:Subject:Date:From;
        b=GiVJ17XPmwirSW3mJ0E2FkVcefeNrshizET7NcDG5jnG7MaXqI0k5osnMaoe5bl93
         N0qcwqGPHLoThI7bvvwW7BEyh5aqaCz7dfGbCTMTXf8GwCM4yC0mxMeuaDcfx1/NgI
         a7rHJUjnXT+FztrZ9FswBU/UCMObuhTN+6XwjK+A=
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
To: matti.vaittinen@fi.rohmeurope.com, mazziesaccount@gmail.com
From: Stephen Boyd <sboyd@kernel.org>
In-Reply-To: <a40442ad1a2f1d13798ba535eca371845bae9248.1543922403.git.matti.vaittinen@fi.rohmeurope.com>
Cc: mturquette@baylibre.com, cw00.choi@samsung.com, krzk@kernel.org,
        b.zolnierkie@samsung.com, linux@armlinux.org.uk,
        andy.gross@linaro.org, david.brown@linaro.org, pavel@ucw.cz,
        andrew.smirnov@gmail.com, pombredanne@nexb.com,
        sjhuang@iluvatar.ai, akshu.agrawal@amd.com, djkurtz@chromium.org,
        rafael.j.wysocki@intel.com, linux-doc@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-clk@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org
References: <cover.1543922403.git.matti.vaittinen@fi.rohmeurope.com>
 <a40442ad1a2f1d13798ba535eca371845bae9248.1543922403.git.matti.vaittinen@fi.rohmeurope.com>
Message-ID: <154395229720.88331.16585219136189943316@swboyd.mtv.corp.google.com>
User-Agent: alot/0.7
Subject: Re: [PATCH v6 03/10] clk: of-provider: look at parent if registered device
 has no provider info
Date: Tue, 04 Dec 2018 11:38:17 -0800
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Quoting Matti Vaittinen (2018-12-04 03:34:53)
> It seems to be usual for MFD devices that the created 'clock sub-device'
> do not have own DT node. The clock provider information is usually in the
> main device node which is owned by the MFD device. Change the devm variant
> of clk of-provider registration to check the parent device node if given
> device has no own node or if the node does not contain the #clock-cells
> property. In such case use the parent node if it contains the #clock-cell=
s.
> =

> Signed-off-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
> ---
>  drivers/clk/clk.c | 27 +++++++++++++++++++++++----
>  1 file changed, 23 insertions(+), 4 deletions(-)
> =

> diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
> index 78c90913f987..66dc7c1483d7 100644
> --- a/drivers/clk/clk.c
> +++ b/drivers/clk/clk.c
> @@ -3893,6 +3893,11 @@ static void devm_of_clk_release_provider(struct de=
vice *dev, void *res)
>         of_clk_del_provider(*(struct device_node **)res);
>  }
>  =

> +static int of_is_clk_provider(struct device_node *np)
> +{
> +       return !!of_find_property(np, "#clock-cells", NULL);
> +}
> +
>  /**
>   * devm_of_clk_add_hw_provider() - Managed clk provider node registration
>   * @dev: Device acting as the clock provider. Used for DT node and lifet=
ime.
> @@ -3901,8 +3906,11 @@ static void devm_of_clk_release_provider(struct de=
vice *dev, void *res)
>   *
>   * Returns 0 on success or an errno on failure.
>   *
> - * Registers clock provider for given device's node. Provider is automat=
ically
> - * released at device exit.
> + * Registers clock provider for given device's node. If the device has n=
o DT
> + * node or if the device node lacks of clock provider information (#cloc=
k-cells)
> + * then the parent device's node is scanned for this information. If par=
ent node
> + * has the #clock-cells then it is used in registration. Provider is
> + * automatically released at device exit.
>   */
>  int devm_of_clk_add_hw_provider(struct device *dev,
>                         struct clk_hw *(*get)(struct of_phandle_args *clk=
spec,
> @@ -3912,12 +3920,17 @@ int devm_of_clk_add_hw_provider(struct device *de=
v,
>         struct device_node **ptr, *np;
>         int ret;
>  =

> +       np =3D dev->of_node;
> +
> +       if (!of_is_clk_provider(dev->of_node))
> +               if (of_is_clk_provider(dev->parent->of_node))
> +                       np =3D dev->parent->of_node;

As said on v5, let's just modify of_clk_add_provider() to do the parent
search.

