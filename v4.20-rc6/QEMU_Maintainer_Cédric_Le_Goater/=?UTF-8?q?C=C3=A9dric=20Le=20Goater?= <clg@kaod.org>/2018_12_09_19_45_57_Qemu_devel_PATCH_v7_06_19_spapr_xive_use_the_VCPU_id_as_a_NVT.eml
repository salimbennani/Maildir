Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 08:56:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id B587D5805FF
	for <like.xu@linux.intel.com>; Sun,  9 Dec 2018 12:20:34 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Dec 2018 12:20:34 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ANBssLx/mSQN3rv9uRHKM819IXTAuvvDOBiVQ1KB2?=
 =?us-ascii?q?1eIcTK2v8tzYMVDF4r011RmVBdWds6oMotGVmpioYXYH75eFvSJKW713fDhBt/?=
 =?us-ascii?q?8rmRc9CtWOE0zxIa2iRSU7GMNfSA0tpCnjYgBaF8nkelLdvGC54yIMFRXjLwp1?=
 =?us-ascii?q?Ifn+FpLPg8it2O2+557ebx9UiDahfLh/MAi4oQLNu8cMnIBsMLwxyhzHontJf+?=
 =?us-ascii?q?RZ22ZlLk+Nkhj/+8m94odt/zxftPw9+cFAV776f7kjQrxDEDsmKWE169b1uhTF?=
 =?us-ascii?q?UACC+2ETUmQSkhpPHgjF8BT3VYr/vyfmquZw3jSRMNboRr4oRzut86ZrSAfpiC?=
 =?us-ascii?q?gZMT457HrXgdF0gK5CvR6tuwBzz4vSbYqINvRxY7ndcMsaS2RfUMhfVCtPDYGy?=
 =?us-ascii?q?b4QAE+UPMvtWr5H/qlUMohayGAehCP/xxT9TnXL2wbQ63v49HQzcwAAtHdQDu2?=
 =?us-ascii?q?nUotXvM6cSVPi4wbfSyjredfNW2Cvy45XOfB8/vPqCXLVwftDNyUYxDQPOk1Kd?=
 =?us-ascii?q?ppDhPzOazekNsHKU7+19Wu61jG4nsQ5xryGpy8wxiYfJnpoYxk7Y+Sh62oo5OM?=
 =?us-ascii?q?C0RU1hbdK6HpZdtzuWO5Z0T886R2xkpDw2x74CtJKhYSQHzJUqywTCZ/Cab4SF?=
 =?us-ascii?q?5A/oWvyLLjdinn1lfaqyhxas/kikze3xTs200FdRripZidnArH8N1xrO6sSdTf?=
 =?us-ascii?q?t95Eih1S6O1wDV9O5EPVg5mbTHJ5Mi2LI8i4cfvEfZEiPolkj7jLWaelgm9+Sw?=
 =?us-ascii?q?7uToeLTmppuSN49ujQH+N7wjmtWhDuQ9LwgCRnWU9vqi1LL9+U31Wa5Fjvorkq?=
 =?us-ascii?q?nfrJ/VO98bqqm9Aw9U0YYs9QyzDji70NkAmXkHLVRFeA+IjoTzOlHOJuz4Aum7?=
 =?us-ascii?q?g1i2jDhrwPXGM6bnApXKKHjDn7Hhfatn505b0gozwshT54hIBbEZPPLzRkjxuc?=
 =?us-ascii?q?TcDh84MAy73fzrCdpg1o4FXWKPA6mZML7dsFOS5+IvJfWMa5ERuDrnN/cl4Pvu?=
 =?us-ascii?q?3jcEn0QAd/ypwYcPcyL/WfBnOFmCJ3zrhNgHDCENpAV5SeXrjFiLV3lUf2qzWK?=
 =?us-ascii?q?QnoSg2DZ/jAYrdS4T+vbqawS3uG5RXYnxBWEmBFGqte4iaVvNJci+LP8J6jhQC?=
 =?us-ascii?q?Ur6uTZJn0guh4xTnwbhqJfaB5ysDqJj438J07eCAqRZn2TVqDsjV/GCHVGZy1j?=
 =?us-ascii?q?cETiE30IhwoEZmzVHF3bJ/m/ZVHMYV5v8PWxpsZrDGyOkvIFH+QAPKNvOEAHmh?=
 =?us-ascii?q?S8mrG3llRdY+69wHZEo7HM+t2EOQlxG2CqMYwuTYTKc/9bjRij2of55w?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BxAADxdw1cmBHrdtBkHgEGBwaBUwcLA?=
 =?us-ascii?q?QGBL4Jig3qIeIsugwmWVRSBXxQYFIddIjYHDQEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4vQgEMAYFmBQIDGgEGglwDAwECIAQfCiIHAwMBAgYBASQCGAoEAgIDATkaB?=
 =?us-ascii?q?hMFgxyCAgEDAaY2fDOFQINTgQ2BC4ZnhC8RBoF/gRGCXYR/IIMbglcCjz2ROAm?=
 =?us-ascii?q?RRAsYkT2ZMIFNAoIFTTAIgyeCJxeOHnGBBAODWIY7VoF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BxAADxdw1cmBHrdtBkHgEGBwaBUwcLAQGBL4Jig3qIeIs?=
 =?us-ascii?q?ugwmWVRSBXxQYFIddIjYHDQEDAQEBAQEBAgETAQEBAQEICwsGGw4vQgEMAYFmB?=
 =?us-ascii?q?QIDGgEGglwDAwECIAQfCiIHAwMBAgYBASQCGAoEAgIDATkaBhMFgxyCAgEDAaY?=
 =?us-ascii?q?2fDOFQINTgQ2BC4ZnhC8RBoF/gRGCXYR/IIMbglcCjz2ROAmRRAsYkT2ZMIFNA?=
 =?us-ascii?q?oIFTTAIgyeCJxeOHnGBBAODWIY7VoF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,335,1539673200"; 
   d="scan'208";a="56171592"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 09 Dec 2018 12:20:33 -0800
Received: from localhost ([::1]:56620 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gW5Z3-0007RE-3z
	for like.xu@linux.intel.com; Sun, 09 Dec 2018 15:20:33 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36305)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gW52i-0001ix-6Q
	for qemu-devel@nongnu.org; Sun, 09 Dec 2018 14:47:12 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gW52Z-00054q-2F
	for qemu-devel@nongnu.org; Sun, 09 Dec 2018 14:47:04 -0500
Received: from 11.mo6.mail-out.ovh.net ([188.165.38.119]:33626)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gW52X-0004uC-Ar
	for qemu-devel@nongnu.org; Sun, 09 Dec 2018 14:46:58 -0500
Received: from player695.ha.ovh.net (unknown [10.109.146.50])
	by mo6.mail-out.ovh.net (Postfix) with ESMTP id 0B67A19D3B7
	for <qemu-devel@nongnu.org>; Sun,  9 Dec 2018 20:46:55 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player695.ha.ovh.net (Postfix) with ESMTPSA id D20AA8A2213;
	Sun,  9 Dec 2018 19:46:49 +0000 (UTC)
From: =?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
To: David Gibson <david@gibson.dropbear.id.au>
Date: Sun,  9 Dec 2018 20:45:57 +0100
Message-Id: <20181209194610.29727-7-clg@kaod.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181209194610.29727-1-clg@kaod.org>
References: <20181209194610.29727-1-clg@kaod.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Ovh-Tracer-Id: 8155737451250748390
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudegfedgudefudcutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 188.165.38.119
Subject: [Qemu-devel] [PATCH v7 06/19] spapr/xive: use the VCPU id as a NVT
 identifier
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org,
	=?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The IVPE scans the O/S CAM line of the XIVE thread interrupt contexts
to find a matching Notification Virtual Target (NVT) among the NVTs
dispatched on the HW processor threads.

On a real system, the thread interrupt contexts are updated by the
hypervisor when a Virtual Processor is scheduled to run on a HW
thread. Under QEMU, the model will emulate the same behavior by
hardwiring the NVT identifier in the thread context registers at
reset.

The NVT identifier used by the sPAPRXive model is the VCPU id. The END
identifier is also derived from the VCPU id. A set of helpers doing
the conversion between identifiers are provided for the hcalls
configuring the sources and the ENDs.

The model does not need a NVT table but the XiveRouter NVT operations
are provided to perform some extra checks in the routing algorithm.

Signed-off-by: C=C3=A9dric Le Goater <clg@kaod.org>
---

 Changes since v6:

 - simplified the prototypes of helpers
 - introduced an assert in set_nvt() method

 hw/intc/spapr_xive.c | 56 +++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 55 insertions(+), 1 deletion(-)

diff --git a/hw/intc/spapr_xive.c b/hw/intc/spapr_xive.c
index eef5830d45c6..3ade419fdbb1 100644
--- a/hw/intc/spapr_xive.c
+++ b/hw/intc/spapr_xive.c
@@ -26,6 +26,26 @@
 #define SPAPR_XIVE_VC_BASE   0x0006010000000000ull
 #define SPAPR_XIVE_TM_BASE   0x0006030203180000ull
=20
+/*
+ * The allocation of VP blocks is a complex operation in OPAL and the
+ * VP identifiers have a relation with the number of HW chips, the
+ * size of the VP blocks, VP grouping, etc. The QEMU sPAPR XIVE
+ * controller model does not have the same constraints and can use a
+ * simple mapping scheme of the CPU vcpu_id
+ *
+ * These identifiers are never returned to the OS.
+ */
+
+#define SPAPR_XIVE_NVT_BASE 0x400
+
+/*
+ * sPAPR NVT and END indexing helpers
+ */
+static uint32_t spapr_xive_nvt_to_target(uint8_t nvt_blk, uint32_t nvt_i=
dx)
+{
+    return nvt_idx - SPAPR_XIVE_NVT_BASE;
+}
+
 /*
  * On sPAPR machines, use a simplified output for the XIVE END
  * structure dumping only the information related to the OS EQ.
@@ -40,7 +60,8 @@ static void spapr_xive_end_pic_print_info(sPAPRXive *xi=
ve, XiveEND *end,
     uint32_t nvt =3D GETFIELD_BE32(END_W6_NVT_INDEX, end->w6);
     uint8_t priority =3D GETFIELD_BE32(END_W7_F0_PRIORITY, end->w7);
=20
-    monitor_printf(mon, "%3d/%d % 6d/%5d ^%d", nvt,
+    monitor_printf(mon, "%3d/%d % 6d/%5d ^%d",
+                   spapr_xive_nvt_to_target(0, nvt),
                    priority, qindex, qentries, qgen);
=20
     xive_end_queue_pic_print_info(end, 6, mon);
@@ -246,6 +267,37 @@ static int spapr_xive_write_end(XiveRouter *xrtr, ui=
nt8_t end_blk,
     return 0;
 }
=20
+static int spapr_xive_get_nvt(XiveRouter *xrtr,
+                              uint8_t nvt_blk, uint32_t nvt_idx, XiveNVT=
 *nvt)
+{
+    uint32_t vcpu_id =3D spapr_xive_nvt_to_target(nvt_blk, nvt_idx);
+    PowerPCCPU *cpu =3D spapr_find_cpu(vcpu_id);
+
+    if (!cpu) {
+        /* TODO: should we assert() if we can find a NVT ? */
+        return -1;
+    }
+
+    /*
+     * sPAPR does not maintain a NVT table. Return that the NVT is
+     * valid if we have found a matching CPU
+     */
+    nvt->w0 =3D cpu_to_be32(NVT_W0_VALID);
+    return 0;
+}
+
+static int spapr_xive_write_nvt(XiveRouter *xrtr, uint8_t nvt_blk,
+                                uint32_t nvt_idx, XiveNVT *nvt,
+                                uint8_t word_number)
+{
+    /*
+     * We don't need to write back to the NVTs because the sPAPR
+     * machine should never hit a non-scheduled NVT. It should never
+     * get called.
+     */
+    g_assert_not_reached();
+}
+
 static const VMStateDescription vmstate_spapr_xive_end =3D {
     .name =3D TYPE_SPAPR_XIVE "/end",
     .version_id =3D 1,
@@ -308,6 +360,8 @@ static void spapr_xive_class_init(ObjectClass *klass,=
 void *data)
     xrc->get_eas =3D spapr_xive_get_eas;
     xrc->get_end =3D spapr_xive_get_end;
     xrc->write_end =3D spapr_xive_write_end;
+    xrc->get_nvt =3D spapr_xive_get_nvt;
+    xrc->write_nvt =3D spapr_xive_write_nvt;
 }
=20
 static const TypeInfo spapr_xive_info =3D {
--=20
2.17.2


