Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 08:56:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga008.jf.intel.com (orsmga008.jf.intel.com [10.7.209.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A17F45805FF
	for <like.xu@linux.intel.com>; Sun,  9 Dec 2018 12:14:42 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga008-1.jf.intel.com with ESMTP; 09 Dec 2018 12:14:42 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AoYpcnxAJ584k1R8ojJ2QUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP37psSwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95RWSJfDI2y?=
 =?us-ascii?q?bIwBAOUdMuhXsof9v1kDoxmxCAWxCu7j1iFHhmTt0K0myuQsCx3K0RY8E98Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTF0y/EYO5M2Tf89IfDbxYvru+RVrxxdsre01UvGB3fjl6N?=
 =?us-ascii?q?roHqIzeV1usWvmiY9eVgUv+gh3QgqwFrrTii38EhgZTHiIISz1DL7yR5wIAtKN?=
 =?us-ascii?q?23SU57fd6kEIZLuC2AK4R2RcYiT3lnuCY8170Ko5m7fDIFyJkh2hXRaOSHfpCW?=
 =?us-ascii?q?7h7/V+udOyp0iG9mdb6lmRq//0itxvfhWsS2yFpHqjZJnsPPu30JzRDf98yKR/?=
 =?us-ascii?q?pn8ku8xDqDywbe4fxeL08uj6rUMZshz6YwlpUNtUTDGTf7mEH3jK+NakUk4fKk?=
 =?us-ascii?q?6+vhYrX7vJOcMJV0ig7mPqQvnMywH/g4PxAQU2SH+umwzqDv8VD6TblQkPE7nK?=
 =?us-ascii?q?nUvIrHKckZvqK5BhVa0ocn6xaxFTem19EYkGEeLF1bfRKHkpHlNEzQL/DmE/i/?=
 =?us-ascii?q?h02gnyxsx/DbOL3uHovCLmPEnLflfLZ96FBTxBA8zNBC/59UDrABIPTuWk7+rt?=
 =?us-ascii?q?DYDxk5MxCqzObjEtlyyoQeWWeUD6+fN6PSt1CI5uQyI+WWY48Vojn9J+A/5/Hy?=
 =?us-ascii?q?lX85hUMdfa6x0JsTaXC4HeppL1+WYHrxmdoBFWYKvgwjTO3lklGCUDhTZ2qsUK?=
 =?us-ascii?q?I4/D00FIWmDYKQDr2rm6GLiSenAoVNNCcBDlGXDWyucYKCVPERLiWILYhkmz0A?=
 =?us-ascii?q?ULGnDIg5yRCpshS90rdiM6/Y9zMVscHe0sNo7bjWnBA26TsmFsmYziSBQn95mi?=
 =?us-ascii?q?YSSiYr0btjiUp6zFiFzO5/mfMPDsFZ5f5CTlInM4XBxfdxEdH4V1H9eYKlQUin?=
 =?us-ascii?q?Tp2JADsqSdR5l9MHfUdxM9qjhAvE2WymGbgNnbGCHto1/uTVwi6iCdx6ziPtVa?=
 =?us-ascii?q?U7jlJuZsYHGmqvmqNlv1zYA4HhkEyem+Ctb6tKj32Fz3uK0Wfb5BIQawV3S6iQ?=
 =?us-ascii?q?GClHPkY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BHAACRdg1cmBHrdtBkHgEGBwaBUQkLA?=
 =?us-ascii?q?QGBLyUFgQ+BKYN6iHiLLoMJkHCFZRSBWBsYCwmBKgGCT4NjIjQJDQEDAQEBAQE?=
 =?us-ascii?q?BAgETAQEBAQEICwsGGw4jDEIBDAGBZgUCAxoBBoJfBAIgBB8KKQMDAQIGAhwIA?=
 =?us-ascii?q?hgKBAICAwEkFQwUGIJRSwGCAQEDAQqmM3wzhC0BAwIMQj+DU4EIBYELhmeELxE?=
 =?us-ascii?q?GgX+BEYJdg1MBAQECgTcLBAEDgxiCVwKJNQEDCZczCYZGQoE+hGqEFAsYkT2OF?=
 =?us-ascii?q?YsbgUaCDk0wCIMngicXEm0BB4JDhRSFQHEBgQMDg1iGOwElMIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0BHAACRdg1cmBHrdtBkHgEGBwaBUQkLAQGBLyUFgQ+BKYN?=
 =?us-ascii?q?6iHiLLoMJkHCFZRSBWBsYCwmBKgGCT4NjIjQJDQEDAQEBAQEBAgETAQEBAQEIC?=
 =?us-ascii?q?wsGGw4jDEIBDAGBZgUCAxoBBoJfBAIgBB8KKQMDAQIGAhwIAhgKBAICAwEkFQw?=
 =?us-ascii?q?UGIJRSwGCAQEDAQqmM3wzhC0BAwIMQj+DU4EIBYELhmeELxEGgX+BEYJdg1MBA?=
 =?us-ascii?q?QECgTcLBAEDgxiCVwKJNQEDCZczCYZGQoE+hGqEFAsYkT2OFYsbgUaCDk0wCIM?=
 =?us-ascii?q?ngicXEm0BB4JDhRSFQHEBgQMDg1iGOwElMIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,335,1539673200"; 
   d="scan'208";a="43351803"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 09 Dec 2018 12:14:41 -0800
Received: from localhost ([::1]:56577 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gW5TN-0000dC-01
	for like.xu@linux.intel.com; Sun, 09 Dec 2018 15:14:41 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:36136)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gW52G-0001Qo-KM
	for qemu-devel@nongnu.org; Sun, 09 Dec 2018 14:46:44 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <clg@kaod.org>) id 1gW52C-00049a-Ea
	for qemu-devel@nongnu.org; Sun, 09 Dec 2018 14:46:40 -0500
Received: from 2.mo173.mail-out.ovh.net ([178.33.251.49]:33763)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <clg@kaod.org>) id 1gW52C-0003o7-4v
	for qemu-devel@nongnu.org; Sun, 09 Dec 2018 14:46:36 -0500
Received: from player695.ha.ovh.net (unknown [10.109.146.132])
	by mo173.mail-out.ovh.net (Postfix) with ESMTP id D57CEE374E
	for <qemu-devel@nongnu.org>; Sun,  9 Dec 2018 20:46:23 +0100 (CET)
Received: from kaod.org (lfbn-1-10605-110.w90-89.abo.wanadoo.fr
	[90.89.196.110]) (Authenticated sender: clg@kaod.org)
	by player695.ha.ovh.net (Postfix) with ESMTPSA id 352548A2197;
	Sun,  9 Dec 2018 19:46:17 +0000 (UTC)
From: =?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
To: David Gibson <david@gibson.dropbear.id.au>
Date: Sun,  9 Dec 2018 20:45:51 +0100
Message-Id: <20181209194610.29727-1-clg@kaod.org>
X-Mailer: git-send-email 2.17.2
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Ovh-Tracer-Id: 8146730254925204454
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgedtkedrudegfedgudefudcutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjpdevjffgvefmvefgnecuuegrihhlohhuthemucehtddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 178.33.251.49
Subject: [Qemu-devel] [PATCH v7 00/19] ppc: support for the XIVE interrupt
 controller (POWER9)
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-ppc@nongnu.org, qemu-devel@nongnu.org,
	=?UTF-8?q?C=C3=A9dric=20Le=20Goater?= <clg@kaod.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hello,

Here is the version 7 of the QEMU models adding support for the XIVE
interrupt controller to the sPAPR machine, under TCG only this
time. KVM support will be proposed in an other patchset, along with
the KVM XIVE device patchset, and so will PowerNV.

The most important changes for sPAPR are the introduction of the 4.0
machines. The sPAPRXive model still inherits from the XiveRouter. It
is possible to change the class inheritance tree but it does not bring
much for now.

I am not sure how we should handle the machine definitions, so I
proposed both, XIVE only and dual interrupt mode. The impact on the
XICS machine is limited with TCG but KVM support of the 'dual' machine
will change things. Let me know how you want to proceed.

Thanks,

C.

Changes in v7 :

 Common XIVE models :
=20
 - removed the 'chip-id' field from XiveRouter
 - introduced a 'block-id' field in XiveENDSource to lookup the XIVE
   END structure when doing a load in the MMIO ESB
 - removed reset XiveENDSource handler
 - introduced a xive_tctx_word2() helper to extract TM_WORD2 of a ring.
 - removed HW CAM line setting and use as it is only useful for PowerNV
 - made use of xive_tctx_word2() helper
 - made use of GETFIELD_BE32() to compare CAM lines
 - fixed initialization of XiveTCTXMatch

 sPAPR models :

 - simplified the prototypes of helpers
 - introduced an assert in set_nvt() method
 - introduced a fixed value for the controller block id value.
 - removed the hardwiring the HW CAM line. Back to v5 state.
 - removed patch "spapr: modify the irq backend 'init' method". It did
   not bring much
 - split the 'xive' sPAPR IRQ backend from the 'xive' machine
 - split the 'dual' sPAPR IRQ backend from the 'dual' machine
 - introduced 4.0* machines
=20
 KVM :

 - hardly no changes=20
 - will come later in a KVM patchset

 PowerNV:

 - will come later in a PowerNV patchset

Changes in v6 :

 https://lists.gnu.org/archive/html/qemu-devel/2018-12/msg00965.html

Changes in v5 :

 https://lists.gnu.org/archive/html/qemu-devel/2018-11/msg03218.html

Changes in v4 :

 https://lists.gnu.org/archive/html/qemu-devel/2018-06/msg01672.html


=3D XIVE =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D


The POWER9 processor comes with a new interrupt controller, called
XIVE as "eXternal Interrupt Virtualization Engine".


* Overall architecture


             XIVE Interrupt Controller
             +------------------------------------+      IPIs
             | +---------+ +---------+ +--------+ |    +-------+
             | |VC       | |CQ       | |PC      |----> | CORES |
             | |     esb | |         | |        |----> |       |
             | |     eas | |  Bridge | |   tctx |----> |       |
             | |SC   end | |         | |    nvt | |    |       |
 +------+    | +---------+ +----+----+ +--------+ |    +-+-+-+-+
 | RAM  |    +------------------|-----------------+      | | |
 |      |                       |                        | | |
 |      |                       |                        | | |
 |      |  +--------------------v------------------------v-v-v--+    othe=
r
 |      <--+                     Power Bus                      +--> chip=
s
 |  esb |  +---------+-----------------------+------------------+
 |  eas |            |                       |
 |  end |         +--|------+                |
 |  nvt |       +----+----+ |           +----+----+
 +------+       |SC       | |           |SC       |
                |         | |           |         |
                | PQ-bits | |           | PQ-bits |
                | local   |-+           |  in VC  |
                +---------+             +---------+
                   PCIe                 NX,NPU,CAPI

                  SC: Source Controller (aka. IVSE)
                  VC: Virtualization Controller (aka. IVRE)
                  PC: Presentation Controller (aka. IVPE)
                  CQ: Common Queue (Bridge)

             PQ-bits: 2 bits source state machine (P:pending Q:queued)
                 esb: Event State Buffer (Array of PQ bits in an IVSE)
                 eas: Event Assignment Structure
                 end: Event Notification Descriptor
                 nvt: Notification Virtual Target
                tctx: Thread interrupt Context


The XIVE IC is composed of three sub-engines :

  - Interrupt Virtualization Source Engine (IVSE), or Source
    Controller (SC). These are found in PCI PHBs, in the PSI host
    bridge controller, but also inside the main controller for the
    core IPIs and other sub-chips (NX, CAP, NPU) of the
    chip/processor. They are configured to feed the IVRE with events.

  - Interrupt Virtualization Routing Engine (IVRE) or Virtualization
    Controller (VC). Its job is to match an event source with an Event
    Notification Descriptor (END).

  - Interrupt Virtualization Presentation Engine (IVPE) or Presentation
    Controller (PC). It maintains the interrupt context state of each
    thread and handles the delivery of the external exception to the
    thread.


* XIVE internal tables

Each of the sub-engines uses a set of tables to redirect exceptions
from event sources to CPU threads.

                                          +-------+
  User or OS                              |  EQ   |
      or                          +------>|entries|
  Hypervisor                      |       |  ..   |
    Memory                        |       +-------+
                                  |           ^
                                  |           |
             +-------------------------------------------------+
                                  |           |
  Hypervisor      +------+    +---+--+    +---+--+   +------+
    Memory        | ESB  |    | EAT  |    | ENDT |   | NVTT |
   (skiboot)      +----+-+    +----+-+    +----+-+   +------+
                    ^  |        ^  |        ^  |       ^
                    |  |        |  |        |  |       |
             +-------------------------------------------------+
                    |  |        |  |        |  |       |
                    |  |        |  |        |  |       |
               +----|--|--------|--|--------|--|-+   +-|-----+    +------=
+
               |    |  |        |  |        |  | |   | | tctx|    |Thread=
|
   IPI or   ---+    +  v        +  v        +  v |---| +  .. |----->     =
|
  HW events    |                                 |   |       |    |      =
|
               |             IVRE                |   | IVPE  |    +------=
+
               +---------------------------------+   +-------+
           =20


The IVSE have a 2-bits state machine, P for pending and Q for queued,
for each source that allows events to be triggered. They are stored in
an Event State Buffer (ESB) array and can be controlled by MMIOs.

If the event is let through, the IVRE looks up in the Event Assignment
Structure (EAS) table for an Event Notification Descriptor (END)
configured for the source. Each Event Notification Descriptor defines
a notification path to a CPU and an in-memory Event Queue, in which
will be enqueued an EQ data for the OS to pull.

The IVPE determines if a Notification Virtual Target (NVT) can handle
the event by scanning the thread contexts of the VCPUs dispatched on
the processor HW threads. It maintains the interrupt context state of
each thread in a NVT table.


* Overview of the QEMU models for the XIVE sub-engines

The XiveSource models the IVSE in general, internal and external. It
handles the source ESBs and the MMIO interface to control them.

The XiveNotifier is a small helper interface interconnecting the
XiveSource to the XiveRouter.

The XiveRouter is an abstract model acting as a combined IVRE and
IVPE. It routes event notifications using the IVE and EQD tables to
the IVPE sub-engine which does a CAM scan to find a CPU to deliver the
exception. Storage should be provided by the inheriting classes.

XiveENDSource is a special source object. It exposes the EQ ESB MMIOs of
the Event Queues which are used for coalescing event notifications and
for escalation. Not used on the field, only to sync the EQ cache in
OPAL.

Finally, the XiveTCTX contains the interrupt state context of a thread,
four sets of registers, one for each exception that can be delivered
to a CPU. These contexts are scanned by the IVPE to find a matching VP
when a notification is triggered. It also models the Thread Interrupt
Management Area (TIMA), which exposes the thread context registers to
the CPU for interrupt management.


* XIVE for sPAPR

sPAPRXive models the XIVE interrupt controller of a sPAPR machine. It
inherits from the XiveRouter and provisions storage for the IVE and
END tables. The NVT table does not need a backend in sPAPR. It owns a
XiveSource object for the IPIs and the virtual device interrupts, a
memory region for the TIMA and a XiveENDSource to manage the END ESBs.
(not used by Linux).

These choices were made to have a sPAPR interrupt controller
consistent with the one found on baremetal and to facilitate KVM
support, the main difficulty being the host memory regions exposed to
the guest.

The NVT and tbe END indexing needs some care and a set of helpers are
defined to ease the conversion between the CPU id as seen by the guest
and the XIVE identifiers manipulated by the models.=20


* Integration in the sPAPR machine, xive only and dual

A new sPAPR IRQ backend is defined for XIVE. It introduces a couple of
new operations to handle the differences in the creation of the device
tree and in the allocation of the CPU interrupt controller. A new
'xive' only pseries machine is defined using this XIVE backend.

Being able to support both interrupt mode in the same machine requires
some more changes. As the machine chooses the interrupt mode at CAS
time, it is activated after a reconfiguration done in a reset. This is
handled by a new 'dual' sPAPR IRQ backend which is built on top of the
XICS and XIVE backend. A new 'dual' pseries machine is defined using
this backend.


* KVM support

Support for KVM introduces a set of specific XIVE models, very much
like XICS does, which self-connect to their KVM counterparts in the
Linux kernel. Two host memory regions are exposed to the guest and
need special care at initialization :

  - ESB mmios
  - Thread Interrupt Management Area (TIMA)

The models uses KVM accessors to synchronize the QEMU state with
KVM. The states are :

  - the source configuration (EAT)
  - the END configuration (ENDT)
  - the OS EQ state (toggle bit and index)
  - the thread interrupt context registers.

Hybrid guest using KVM and an emulated irqchip (kernel_irqchip=3Doff) is
supported. Migration under KVM is supported.

KVM support for the 'dual' machine required some more changes. Both
interrupt mode need to be initialized at the QEMU level to keep the
IRQ number space in sync and to allow switching from one mode to
another. At the KVM level, the whole initialization of the KVM device,
sources and presenters, needs to be done in the reset handler when the
interrupt mode is chosen. This is a major change in the KVM models.

KVM being initialized at reset, we loose the possiblity to fallback to
the QEMU emulated mode in case of failure and failures become fatal to
the machine.


* PowerNV models

The PnvXIVE model uses the XiveRouter abstract model just like
sPAPRXive. It provides accessors to the EAS, END and NVT tables which
are stored in the QEMU PowerNV machine and not in QEMU anymore. It
owns a set of memory regions for the IC registers, the ESBs, the END
ESBs, the TIMA, the notification MMIO.

Multichip is supported and the available IVSEs are the internal one
for the IPIS, the PSI host bridge controller and PHB4.

The next interesting step would be to add escalation events and model
the VCPU dispatching to support emulated KVM guests.


* GitHub trees
=20
QEMU sPAPR:

  https://github.com/legoater/qemu/commits/xive-v7-3.1
 =20
QEMU PowerNV:

  https://github.com/legoater/qemu/commits/powernv-3.1

Linux/KVM:

  https://github.com/legoater/linux/commits/xive-4.20

OPAL:

  https://github.com/legoater/skiboot/commits/xive

C=C3=A9dric Le Goater (19):
  ppc/xive: add support for the END Event State Buffers
  ppc/xive: introduce the XIVE interrupt thread context
  ppc/xive: introduce a simplified XIVE presenter
  ppc/xive: notify the CPU when the interrupt priority is more
    privileged
  spapr/xive: introduce a XIVE interrupt controller
  spapr/xive: use the VCPU id as a NVT identifier
  spapr: introduce a new machine IRQ backend for XIVE
  spapr: add hcalls support for the XIVE exploitation interrupt mode
  spapr: add device tree support for the XIVE exploitation mode
  spapr: allocate the interrupt thread context under the CPU core
  spapr: extend the sPAPR IRQ backend for XICS migration
  spapr: add a 'reset' method to the sPAPR IRQ backend
  spapr: add an extra OV5 field to the sPAPR IRQ backend
  spapr: set the interrupt presenter at reset
  spapr/xive: enable XIVE MMIOs at reset
  spapr: introduce a new sPAPR IRQ backend supporting XIVE and XICS
  spapr: Add a pseries-4.0 machine type
  spapr: add a 'pseries-4.0-xive' machine type
  spapr: add a 'pseries-4.0-dual' machine type

 default-configs/ppc64-softmmu.mak |    1 +
 include/hw/compat.h               |    3 +
 include/hw/ppc/spapr.h            |   23 +-
 include/hw/ppc/spapr_cpu_core.h   |    2 +
 include/hw/ppc/spapr_irq.h        |   12 +
 include/hw/ppc/spapr_xive.h       |   53 ++
 include/hw/ppc/xics.h             |    4 +-
 include/hw/ppc/xive.h             |   80 ++
 include/hw/ppc/xive_regs.h        |  106 +++
 hw/intc/spapr_xive.c              | 1480 +++++++++++++++++++++++++++++
 hw/intc/xics_spapr.c              |    3 +-
 hw/intc/xive.c                    |  883 ++++++++++++++++-
 hw/ppc/spapr.c                    |  100 +-
 hw/ppc/spapr_cpu_core.c           |   31 +-
 hw/ppc/spapr_hcall.c              |   13 +
 hw/ppc/spapr_irq.c                |  350 +++++++
 hw/intc/Makefile.objs             |    1 +
 17 files changed, 3119 insertions(+), 26 deletions(-)
 create mode 100644 include/hw/ppc/spapr_xive.h
 create mode 100644 hw/intc/spapr_xive.c

--=20
2.17.2


