Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:54:42 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 9FC585804F7;
	Fri,  7 Dec 2018 18:48:26 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 18:48:26 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AVpTA/RGPg1bfOZF7bxWFkJ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75pMS8bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjmk8qxlSgLniD?=
 =?us-ascii?q?0fOjA57m/Zl8J+gqFcrh2jqRxwzJLbYICONPpmfK7QZs8aSXZbU8pNTSFNHp+w?=
 =?us-ascii?q?Yo0SBOQBJ+ZYqIz9qkMUoxujGAKjBP3gyjlVjXLxxa06zuogHh/A3AE7H9IPsH?=
 =?us-ascii?q?vUrNLzNKsITe+1yrDFwDPeZP1VwTfw8JbEfgwlrP2WQL59f9TdxVMyGw7Gklmc?=
 =?us-ascii?q?s43oMjGN2ugQsWWX8fBsWfyhhmI9tg18oSKjy8gjh4XRm44Z10zI+T9kzIs2Jt?=
 =?us-ascii?q?C0Ukx2bcK+HJdNqi2XMZZ9TNk4TGFyoik6z6ULuZ6lcygOz5Qq3wDfa/OZfIiS?=
 =?us-ascii?q?+B7jV/ieIS1+hH17fLKznRGy8VKvyuHkV8m01khFrjZdn9XSqnwA0wbf5tWJR/?=
 =?us-ascii?q?dj5EutxDWC2xzJ5uxFI004ja/bJIQgwr40mJoTq0PDHirulUXyja+WcFgk++ex?=
 =?us-ascii?q?5+TkfLrmvJmcOJFwig3nNaQvlMq/DvoiMgUVQWib9vqz1Kf58U36XrpKlPs2nb?=
 =?us-ascii?q?fdsJzAIsQbvKG5DxdP0ok/8xa/Eyum0NMAkHkDLVJFewyIg5LmOlHTO/34Cfa/?=
 =?us-ascii?q?g1KxkDZk3fzGP7vhAonTIXjHirvuYbF960tEwgop0d9f/45UCq0GIP/rWk/+rt?=
 =?us-ascii?q?3YDgMjPAyz2ernCMh92ZkYWWKAGaKZNKLSsVmV5uMgOeWMZYkVuCrjJPgh/fLh?=
 =?us-ascii?q?kXg5mVoFd6mzwZQXcGy4HuhhI0iBY3rshckOHX0Jvgo5SuzqjlqCXCVXZ3azWa?=
 =?us-ascii?q?I8+z46BJinDYfFWoCinriB0D2nEZ1RY2BMEkqMHmvwd4WYR/cMbzqfLdV6kjwE?=
 =?us-ascii?q?UrihSJUt1Qu0uw/40LdnKuvU+isFtZPsztR15uvTlQ0s+jxwFciSz2aNT2RslG?=
 =?us-ascii?q?MSWzA2xLx/oVB6ylqb0qh3mfpYGcZX5/NISAg6M5Hcwvd+C9DzXALBY9iIREyn?=
 =?us-ascii?q?QtWgHTE+UNYxz8USbEZ6HtWolgrD0DayA78Ji7yLA4Q5/b/G0HjvOclx0XbG27?=
 =?us-ascii?q?Mnj1k9XMRPM2qqhqp89wjWA47EiEGZl6esdaQB0y/B7maDzWySvE5GVA58S7nK?=
 =?us-ascii?q?XXcaZkHOt9T2+lvCT6OyCbQgKgZO1NSNKrVUZdHzjVVJXvHjOM/AbGK3gGqwAR?=
 =?us-ascii?q?eIxrWRbIvlYWkd3SPdCFQanAAX53qJKQ8+BiK5qWLEEDNuDU7vY1/r8eRmtHO7?=
 =?us-ascii?q?T0o0zwaWb01h17u54AIVieabS/MJ2rIEuSEhqzpvEVa53tLWDceApgV7cKVdZ9?=
 =?us-ascii?q?M9/ElI1WbDuwNhOZygKrhohkQCfARvo0PuyxJ3B51ansgusnwrwxR9KKKC3Fxa?=
 =?us-ascii?q?ajOXwIr/OrvUKmn14hCicKrW2lDY0NaL9aYD8vU4q1P/vA63Ekou6Wlo095Q03?=
 =?us-ascii?q?GE/JXFEBISUY7tUkYw7xV7p6zabjMh6I/O1HxsMbO7sjnN298yAOslyxCgf8pQ?=
 =?us-ascii?q?Ma+eFQ/yFdEaCNaqKOAwh1epaRcENvhI9KEoJ8Oma+eG2KmzMeZ6nTKpkX5I4J?=
 =?us-ascii?q?pg3UKL7SZ8TPDH34wEw/2BwgSITTP8g0q/vcDtnoBEYyofHm6+ySjiGY5Qabd+?=
 =?us-ascii?q?fYcNCWeyPcK3ws9yiILqW35d7FSjHU8J2Ne1eRqOaFzwxQ1R1UUNrX2ngye41C?=
 =?us-ascii?q?F0kzcyo6qb3SzOxfnidRUdNm5KQmlikUnjIYyug98GW0ioahAjlAG56kbi26hb?=
 =?us-ascii?q?uKN/InHRQUhSZSj2LGJiUqyqurqZecFP65AosSRRUOuiZ1CXUbr9oxoc0yP+EG?=
 =?us-ascii?q?pS3jE7dze2uprnmxx2kn6SLHF2rHDBY8F/2Q/f5MDARf5WxjcHRDN3iT7NCli+?=
 =?us-ascii?q?Ptmp+86Zl5PCsuC4SmKgWYdfcSjtzYOcqiS74XdmDgG4n/C2gtfnCxQ10Tfn19?=
 =?us-ascii?q?l2UiXFtBX8bZPq16igMeJnY1NnBFnz68dhHoF+k40whIwf2HQAh5WV+2YHnnn3?=
 =?us-ascii?q?MdlBxa3+a38NTyYRw9HJ+AjlxFFjLnWRyoL8V3WdwdFua8O0Y2wIwSI9895FCL?=
 =?us-ascii?q?2P47Nahyt1rUG1rQbQYfh7gzccxuEi6H8cg+EVpgUtyj+RDawVHUldJSbsjQiH?=
 =?us-ascii?q?78iirKVLY2aiaaSw1E17ndy7DbCNuAdcWGviepc5HC999cF/MFPK0H3u5YDoYt?=
 =?us-ascii?q?jQbdQPthKKlxfMlfRaKJU0lvASnypoJXr9vWE5y+48lRFhxou1vI+DK2Vw5q65?=
 =?us-ascii?q?BgNYOybxZ8MS/DHtkKlfktyX34CpApVuBDELUIH0QvKvFTIYre7nOBqWED0gtn?=
 =?us-ascii?q?ebHqLSHQ2F50djsX3PCIqnN22NKHka0NViRwSdJEpFjwAPRzg6mp85Fga3xM3u?=
 =?us-ascii?q?akt55zYR5kLmpRtI0O5nKx7/UmLHrgeydjg0UISfLAZR7gxa50bVNtGe7vtuHy?=
 =?us-ascii?q?5C+J2ttheNKmudZwRHFmwJXk2EB1b+Prih/9XA8u6YBvagIPvKe7mBteteV/KQ?=
 =?us-ascii?q?z5K1zoRm5yqMNtmIPnR6D/00xEtDXXN6G8TYgTkPSDYXlyXCb8GFvhe85zZ3o9?=
 =?us-ascii?q?u78PTqXgLv+ISOB6FTMdVp5xC5n6ODO/SMiyZ+LDZSzokMymPQyLgDwF4SjDlj?=
 =?us-ascii?q?eCOwEbsbry7CUqLRlrVTDx4acC5zMMpI76Qh3ghCI8Lbi9X11qJmgf4xEVtKSV?=
 =?us-ascii?q?vhmsSxb8wQP269LE/HBFqMNLmeOT3LwsT3bbmgRrFKkOpUtwO/uTCAHk/nPzSD?=
 =?us-ascii?q?kSTpVh+1PeFNiiGbIAJRuIWnfhlxDmjjScrsagenP99vkT023bo0i2vKNGEGNz?=
 =?us-ascii?q?h8dkJNrruI4iJZgvVwAWpB7nV+IOmAmiaZ6fTYK5kMvftqBCR0i/xV4HAgx7RJ?=
 =?us-ascii?q?6yFEQa89pCyH+tR2i1iik+SJmnxrXUwdhCxMgdezoA1dNKORooFdRnvC1BIc4m?=
 =?us-ascii?q?KWTR8M8Yg2Qubzsrxdn4Cc3Jn4Ly1PporZ?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAACRMAtch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2sxjAmOHhSXPYIGASsBh10iNAkNAQMBAQEBAQECARMBAQEKCwk?=
 =?us-ascii?q?IKS+CNiKCZAEBAQECAQECdgUBCQEBChguA1QGDgqDHIF6BwEFqUQcijKHc4QvF?=
 =?us-ascii?q?4FAP4N1LoQ7gROFDgKJE4IUhQ+QMQmCJY8mAhaJc4dFmQQCBAIEBQIUgUaCDU0?=
 =?us-ascii?q?4gyiQZzIBAYE2AQGJDYEfgRwDAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAACRMAtch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?xjAmOHhSXPYIGASsBh10iNAkNAQMBAQEBAQECARMBAQEKCwkIKS+CNiKCZAEBA?=
 =?us-ascii?q?QECAQECdgUBCQEBChguA1QGDgqDHIF6BwEFqUQcijKHc4QvF4FAP4N1LoQ7gRO?=
 =?us-ascii?q?FDgKJE4IUhQ+QMQmCJY8mAhaJc4dFmQQCBAIEBQIUgUaCDU04gyiQZzIBAYE2A?=
 =?us-ascii?q?QGJDYEfgRwDAQE?=
X-IronPort-AV: E=Sophos;i="5.56,328,1539673200"; 
   d="scan'208";a="55440743"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 18:48:24 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726099AbeLHCsO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 21:48:14 -0500
Received: from [110.188.70.11] ([110.188.70.11]:61970 "EHLO spam2.hygon.cn"
        rhost-flags-FAIL-FAIL-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726065AbeLHCsO (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 21:48:14 -0500
Received: from MK-FE.hygon.cn ([172.23.18.61])
        by spam2.hygon.cn with ESMTP id wB82larc071897;
        Sat, 8 Dec 2018 10:47:36 +0800 (GMT-8)
        (envelope-from puwen@hygon.cn)
Received: from cncheex01.Hygon.cn ([172.23.18.10])
        by MK-FE.hygon.cn with ESMTP id wB82lUhp099967;
        Sat, 8 Dec 2018 10:47:30 +0800 (GMT-8)
        (envelope-from puwen@hygon.cn)
Received: from pw-vbox.hygon.cn (172.23.18.44) by cncheex01.Hygon.cn
 (172.23.18.10) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.1466.3; Sat, 8 Dec 2018
 10:47:31 +0800
From: Pu Wen <puwen@hygon.cn>
To: <bp@alien8.de>
CC: <tglx@linutronix.de>, <mingo@redhat.com>, <hpa@zytor.com>,
        <x86@kernel.org>, <linux-kernel@vger.kernel.org>,
        Pu Wen <puwen@hygon.cn>
Subject: Re: [PATCH] x86/cpu: Avoid endless loop to get the number of cache leaves
Date: Sat, 8 Dec 2018 10:46:54 +0800
Message-ID: <1544237214-18766-1-git-send-email-puwen@hygon.cn>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <20181115172155.GB25056@zn.tnic>
References: <1541422425-5855-1-git-send-email-puwen@hygon.cn>,<20181115172155.GB25056@zn.tnic>
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [172.23.18.44]
X-ClientProxiedBy: cncheex02.Hygon.cn (172.23.18.12) To cncheex01.Hygon.cn
 (172.23.18.10)
X-MAIL: spam2.hygon.cn wB82larc071897
X-DNSRBL: 
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Sorry for the late reply :)

On 2018/11/16 1:22, Borislav Petkov wrote:
>> @@ -640,7 +641,7 @@ static int find_num_cache_leaves(struct cpuinfo_x86 *c)
>>   		/* Do cpuid(op) loop to find out num_cache_leaves */
>>   		cpuid_count(op, i, &eax, &ebx, &ecx, &edx);
>>   		cache_eax.full = eax;
>> -	} while (cache_eax.split.type != CTYPE_NULL);
>> +	} while (cache_eax.split.type != CTYPE_NULL && i != CTYPE_MAX);
> i is an int and CTYPE_MAX is enum _cache_type. Huh?

How about define CTYPE_MAX like this:
#define CTYPE_MAX  4

> This works by chance because CTYPE_MAX is 4 and the termination CPUID
> leaf is the 4th too.

It will return CTYPE_NULL when accessing the 4th CPUID leaf in most of
the cases, but in certain case it will not. So I think it's better to
restrict the maximum CPUID access times to 4 for kernel robustness.

-- 
Regards,
Pu Wen

