Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 18:31:21 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 46838580375;
	Tue,  4 Dec 2018 02:20:57 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga002-1.fm.intel.com with ESMTP; 04 Dec 2018 02:20:56 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AZlHTwxLJ/04Po6vx0NmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgULfjzrarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQ8hfSSJBDIO7?=
 =?us-ascii?q?b4UMAeQOM+lXoIvhqFUBthu+HQuhCfjzyjJKnHD6wbE23uohHAzAwQcuH8gOsH?=
 =?us-ascii?q?PRrNjtOqscVvq6zLPLzTXedPNdxDfz5JLJfRw7pf+AR697f9PKxkYxDQPFjkiQ?=
 =?us-ascii?q?qYn7MDOP2OgGrm+W7+96WuK1iG4nthpxryOoxsg3lIbJnIIVyk3B9Spn2oY5P8?=
 =?us-ascii?q?G3SEl+YdO9FpZbqi+UN4xzQsw4QmFovj43yrodtpGlZigKyIknxxvBZPydaYSH?=
 =?us-ascii?q?/hXjVOOXLDxlh3xlYKqyiwiu/UWk0OHwS8e53EhQoiZYkdTAqmoB2h3R58SfSf?=
 =?us-ascii?q?Zx412t1SuT2wzJ9O1IP0M5mbDGJ5I/wbM9kIcYv17ZES/sgkr2ibebdkU69eis?=
 =?us-ascii?q?7OTqeqvmppCCOI9ukA3+Mbohmta5AesmNggCRW+b+f6z1LH7/E35RqtFjuEun6?=
 =?us-ascii?q?XHrJzXId4XqrO3DgNLyIov9hWyAyu83NkZn3QLNFdFdwiGj4jtNVHOOvf4DfKn?=
 =?us-ascii?q?jlSokTdrwe3GP7L4DpXOMHfDirHhcqh560JFzwoyw9Zf6IxOCrwaPvLzVVH+tM?=
 =?us-ascii?q?bCAh86LQO02eDnB8t51o8EXmKPGKCZPLvIsVCU/uIvP/WMZIgNtTb5Kvgl5ODh?=
 =?us-ascii?q?gWU2mF8AZqSp2ZoXaHalHvVpOUmZYHzsgssfHmcOpAYxUOvqiFiaWz5Je3myR7?=
 =?us-ascii?q?485i08CI++DYfMXIGtgKCb0ye8BJFWZn1GBUqKEXfnbIiEX/YMaCSPIs5uiDAE?=
 =?us-ascii?q?VL6hS5M/2hGqrgP1171nLu/M8C0CqZ3jzMR15/HUlRwq9zx0CNqS33uOT2FzmG?=
 =?us-ascii?q?MIQTg20bt7oUx8zFeDzKd5j+ZZFdxV+/NGTAM6OYTAwOx9DtD4QhjBccuRSFa6?=
 =?us-ascii?q?XtWmBik8Qcgqw98OZEZ9GM+ujgrZ0CqoGLIVk72LBJop8qPTxXTxJsB9y2rY26?=
 =?us-ascii?q?kllVUpXsxPNWi+jK5l6wfTH5LJk1mel6uydqQTxijN+H2HzWqPpk5YVgFwXL7B?=
 =?us-ascii?q?XXAeYEvWsNv46lnDT7+oFbQoLA9BxdSeJatNb93jlU9GS+v7ONTCf2KxnH+9Cg?=
 =?us-ascii?q?uSybOScoXmYWUd0z/bCEgfjQ8T+3GKNQw9Biekp2LTFzhuFVPpY0Px/uhysnK7?=
 =?us-ascii?q?Tkkozw6Ua01tzaa6+hkQhfaEUfMcwqoEuDs9qzVzBFuywsjZC8SeqAZ7fKVTe9?=
 =?us-ascii?q?U94ExZ2mLfrAF9Op2gL6Z/hl8RaQh3vkXu1wlpBYVEi8QlsHQqzA9qI6KCzFxB?=
 =?us-ascii?q?by+Y3Yz3OrDPNmny/RWva6nK2lHe0Nea4LsP5O4/q1X5uAGpF0wi83p83tlR0n?=
 =?us-ascii?q?uc4IjKDQUIXZLwVEY36wZ1p7XAbiYh4IPU0GVmMbOovT/ax9IpGOwlxw66cNdb?=
 =?us-ascii?q?LqyFGxH9Es0AC8e1NewlhkKmbhQHPOBV6q45JMemd/qA2K62M+dshjOmjWJb4I?=
 =?us-ascii?q?9j1kKA7TZzSunN35wd2fGXwhOHVyvgjFemqs32mZ1EaSsOEWalyCnkBJReZqt9?=
 =?us-ascii?q?fYsQDWeuIsu3xshxhpL3Wn5Y8kKjCE0C2MOzZRWSaFn91xVK1UsLuXynhTe4zz?=
 =?us-ascii?q?tsnjEzr6qQwDbBw/7/exoAIGJLQndtjU3tIYStk98VRkyoYBU3mxu/4kb6wbNW?=
 =?us-ascii?q?pKB+L2nVXEdJcDL6L2BkUqusqLWCZ9RD548vsSVSSO68e0yVSqbhoxsG1CPuB2?=
 =?us-ascii?q?tfxDEhezCqoJn5hAF6iGSGIXZ3rXrZf9xwxBjF6NzdQ/5RwiQJRC1ihTbLAVi8?=
 =?us-ascii?q?OsGj/c+ImJfbruC+S2WhW4VRcSbx14OAtyi75WpwDR2khf+zmd7nEQk80SDl0d?=
 =?us-ascii?q?lnTiHIrBf6Yon22KW2K+Nnfk90BFDi78p2AJ1xkow1hJsIw3gVmo2V/WYbkWf0?=
 =?us-ascii?q?Kdha2bjxbH0XST4Jwt7V5hPo2EliLnKP2oL4WW+RwspnZ9mmfGwW3jgx4NxNCK?=
 =?us-ascii?q?eR9LZEhzd6okKkrQLNZvhwhjQdxuEv6HIAg+EJpRAiziOSAr0JGUlYPCrslwmH?=
 =?us-ascii?q?7tykraVXYnqvfqa01EZkgd+hC7SCqBlGWHnlYpciATNw7sJnPVLJ0X3z6ZvrdM?=
 =?us-ascii?q?PebN0NrR2UjwnPj/JOJ50vjPoKijFqOWb8vX0j1u46ggZi3ZC8vIibNWpt+Li1?=
 =?us-ascii?q?DQJfNj3wf8kT4C3ijb5CnsaK2ICiBolhGjIOXJfyTPOnCjQSten8NwaVET0xsX?=
 =?us-ascii?q?ObGbvZHQ+C50ZqtXPPE5a3N36JIHkV18ltRB6YJEZHmgAbQC06noIlFgCt3MHu?=
 =?us-ascii?q?a1125jcV5l7lsBdMzv9oOgL7Umfeogeodzg1RIKeLBpQ8gFN+UPVPdaC4eJ0Gi?=
 =?us-ascii?q?FS5oehoxCVKmyHewRICnkEWk6eCFDmILau/sPM8/SCCuq9MvvOYqiOqepEWPeT?=
 =?us-ascii?q?3p+v1opm/zCRNsSAJHViDvs72lZdUnB9AcjWhzIPSykPnSLXc8GbvAu8+jFwrs?=
 =?us-ascii?q?2n8PXrXx/v5ZKSC7RIN9Vj4Qu2gaCFN+6fnyt5LTdY1pURxX7H0rQf3VgSiz1w?=
 =?us-ascii?q?eDmpC7gPqSnNTKfIkK9NExEbcz9zNNdP768k3glCJ8/bitD21r55lPI1CE1FVV?=
 =?us-ascii?q?vums63f8wKPnq9OUjDBEaKMrSGODLKz9v2YaO6Vb1fkuFUuwestjacFk/pJi6D?=
 =?us-ascii?q?mCXxVxCzLeFMizmWMwZDuI6maBZiF2jiQMjiah26K9J3iTw2wbsphnLFL2IcMD?=
 =?us-ascii?q?58c19Tob2U9y9XnvJ/G2lZ5Hp/MeaEgzqZ7/XfKpsOrftrAyF0m/hG73gg17RV?=
 =?us-ascii?q?7D9LRPpulSvWr95upUymk+aVxjpmVhpOtihEhIaRsUp+PqXZ84FKWWzY8xIV8W?=
 =?us-ascii?q?WQFxMKqsNlC9L1vaBQz9nPlKTrJzZD89Lb580cB8fPJcKDMXohNwfpGTHOAAsE?=
 =?us-ascii?q?Sz6rKX/Qh0hHnP6O8X2Vq8tylp+5lIESR6VRXXQuC+gXTE93WJQzPZpmX3sAkP?=
 =?us-ascii?q?bPiM8Z+HevrTHVRdtX+JvAU6TWSb/gMjuWjrlsYxoO3KP2KpkVOoTn2ktkLF5g?=
 =?us-ascii?q?k86CT0XKUN9OogVlbwkpsEtK7X5yR3Ey3ESjbRmitjtbX+GcxwEqzAZjK6x56x?=
 =?us-ascii?q?+1/EtxK0ec4GN6nE43k/3+jDuMaj/tPaK3QJpbTSHzsgJ5Zp/8RQxddgC5gFZl?=
 =?us-ascii?q?KCbBQK9Kgv1rcmU9zEeWvZpJBO4ZTqBeZhIU7e+Yau9u0llGrCijg0hd6qGNXZ?=
 =?us-ascii?q?9jkhY6NJ2htXRN3yp9Y9MvY6/dPqxEyh5XnK3Y7QGy0eVkiioXPUUQ6yu8Ph5O?=
 =?us-ascii?q?mgpAEbMrPSq1++F2o0TWnjJZe3UXf/0gr+hq60YwIaKLyCe2gO0LEVy4K+HKd/?=
 =?us-ascii?q?DRgGPHj8PdBwpojk4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAADnVAZch0O0hNFjHgEGBwaBUQkLA?=
 =?us-ascii?q?YJpA38nmCCCDRSXNYFxLgcMAYgRIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII?=
 =?us-ascii?q?2JAGCYgECAwECPQEBNgIFCQEBCgcRCRYPAwYDAgECAUUGAQwGAgEBAYMcAYIBB?=
 =?us-ascii?q?AGjFIIRDoJ2AQEFgQQBAYE9hGsIjB4RBoF/gRGDEopcjzJHkFAHAgKRV4lrhzu?=
 =?us-ascii?q?JBZEWIF+BLnAVgycJghKDbYocATc/ATGBBQEBixIBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AWAADnVAZch0O0hNFjHgEGBwaBUQkLAYJpA38nmCCCDRS?=
 =?us-ascii?q?XNYFxLgcMAYgRIjQJDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYgECAwECP?=
 =?us-ascii?q?QEBNgIFCQEBCgcRCRYPAwYDAgECAUUGAQwGAgEBAYMcAYIBBAGjFIIRDoJ2AQE?=
 =?us-ascii?q?FgQQBAYE9hGsIjB4RBoF/gRGDEopcjzJHkFAHAgKRV4lrhzuJBZEWIF+BLnAVg?=
 =?us-ascii?q?ycJghKDbYocATc/ATGBBQEBixIBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,313,1539673200"; 
   d="scan'208";a="55984279"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 02:20:43 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726153AbeLDKUk (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 05:20:40 -0500
Received: from mail.servus.at ([193.170.194.20]:52714 "EHLO mail.servus.at"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725613AbeLDKUj (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 05:20:39 -0500
Received: from localhost (localhost [127.0.0.1])
        by mail.servus.at (Postfix) with ESMTP id 999113000694;
        Tue,  4 Dec 2018 11:20:36 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=oberhumer.com; h=
        content-transfer-encoding:content-type:content-type:in-reply-to
        :mime-version:user-agent:date:date:message-id:organization:from
        :from:references:subject:subject:received:received; s=main; t=
        1543918834; x=1545733235; bh=Fw+hj3pVPsQRnpZvAJxFKSQglr7+hWbZ66N
        C0wszn10=; b=CbyVzUekV5PpQY59xIF1ZrbTDeD+n/eoR4KEOu4XIyfnf3S181Y
        EojE6rbpK5u3Fh18QItX70tYy/oH8NoO4+0T3s4I8hgWwbi27eIrgtc2hVCaWP5L
        ww8rxQ5SdcN1sUPi9U/DVdz6uc5bPpnOhd76n1fxMUwPQY9sHpJ0IpmE=
X-Virus-Scanned: amavisd-new at servus.at
Received: from mail.servus.at ([127.0.0.1])
        by localhost (mail.servus.at [127.0.0.1]) (amavisd-new, port 10024)
        with ESMTP id K6AhSrVQqxfE; Tue,  4 Dec 2018 11:20:34 +0100 (CET)
Received: from [192.168.216.53] (unknown [81.10.228.128])
        (Authenticated sender: oh_markus)
        by mail.servus.at (Postfix) with ESMTPSA id 1941D300069A;
        Tue,  4 Dec 2018 11:20:31 +0100 (CET)
Subject: Re: [PATCH v2] lzo: fix ip overrun during compress.
To: dsterba@suse.cz, Yueyi Li <liyueyi@live.com>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "w@1wt.eu" <w@1wt.eu>,
        "donb@securitymouse.com" <donb@securitymouse.com>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
References: <BLUPR13MB0289EFEB79833470EE62F48EDFD10@BLUPR13MB0289.namprd13.prod.outlook.com>
 <20181128135242.gy3avmbp2pdmjaka@twin.jikos.cz>
From: "Markus F.X.J. Oberhumer" <markus@oberhumer.com>
Organization: oberhumer.com
Message-ID: <5C0654EE.5040001@oberhumer.com>
Date: Tue, 4 Dec 2018 11:20:30 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.3.0
MIME-Version: 1.0
In-Reply-To: <20181128135242.gy3avmbp2pdmjaka@twin.jikos.cz>
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi,

I don't think that address space wraparound is legal in C, but I
understand that we are in kernel land and if you really want to
compress the last virtual page 0xfffffffffffff000 the following
small patch should fix that dubious case.

This also avoids slowing down the the hot path of the compression
core function.

Cheers,
Markus



diff --git a/lib/lzo/lzo1x_compress.c b/lib/lzo/lzo1x_compress.c
index 236eb21167b5..959dec45f6fe 100644
--- a/lib/lzo/lzo1x_compress.c
+++ b/lib/lzo/lzo1x_compress.c
@@ -224,8 +224,8 @@ int lzo1x_1_compress(const unsigned char *in, size_t in_len,
 
        while (l > 20) {
                size_t ll = l <= (M4_MAX_OFFSET + 1) ? l : (M4_MAX_OFFSET + 1);
-               uintptr_t ll_end = (uintptr_t) ip + ll;
-               if ((ll_end + ((t + ll) >> 5)) <= ll_end)
+               // check for address space wraparound
+               if (((uintptr_t) ip + ll + ((t + ll) >> 5)) <= (uintptr_t) ip)
                        break;
                BUILD_BUG_ON(D_SIZE * sizeof(lzo_dict_t) > LZO1X_1_MEM_COMPRESS);
                memset(wrkmem, 0, D_SIZE * sizeof(lzo_dict_t));



On 2018-11-28 14:52, David Sterba wrote:
> Adding Markus to to CC
> 
> On Wed, Nov 28, 2018 at 07:31:26AM +0000, Yueyi Li wrote:
>> It`s possible ip overrun in lzo1x_1_do_compress() when compressed page is
>> point to the end of memory and which virtual address is 0xfffffffffffff000.
>> Leading to a NULL pointer access during the get_unaligned_le32(ip).
> 
> So this could happen in practice in zram, but unlikely for other users
> of lzo (like btrfs). I'm not sure but expect that the last page would
> not be returned by allocator.
> 
> The fix is adding a few branches to code that's supposed to be as fast
> as possible. The branches would be evaluated all the time while
> protecting against one signle bad page address. This does not look like
> a good performance tradeoff.
> 
>> +#define OVERFLOW_ADD_CHECK(a, b)  \
>> +		(((a) + (b)) < (a))
> 
> I'm not sure if this is generally safe overflow check (never not
> optimized out). Here it depends on the types of 'a' and 'b' that are
> pointer (ip) and size_t (m_len). GCC has __builtin_add_overflow_p so
> that one should be used where possible.
> 

-- 
Markus Oberhumer, <markus@oberhumer.com>, http://www.oberhumer.com/
