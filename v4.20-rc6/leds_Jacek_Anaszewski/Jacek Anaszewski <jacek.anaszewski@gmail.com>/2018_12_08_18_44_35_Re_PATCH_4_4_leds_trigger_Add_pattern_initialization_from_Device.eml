Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:56:52 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga002.jf.intel.com (orsmga002.jf.intel.com [10.7.209.21])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 56D8B5804F7;
	Sat,  8 Dec 2018 10:45:29 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga002-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 10:45:29 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AOaYyzBZHC0iNfhnrrILsO+X/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZpcu/Yh7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v9LlgRgP2hy?=
 =?us-ascii?q?gbNj456GDXhdJ2jKJHuxKquhhzz5fJbI2JKPZye6XQds4YS2VcRMZcTzFPDJ2y?=
 =?us-ascii?q?b4UPDOQPM+hXoIb/qFQSohW+HhGsCeH0xz9UhHL7x7E23/gvHAzE2gErAtIAsG?=
 =?us-ascii?q?7TrNXwLKocVfq6w7XWwjXAcvhbxTH955LTchEgv/6NU6lwccnQyUIyEA7FjE+f?=
 =?us-ascii?q?ppD7MDOWzOgCqW6b4PB7VeOulWEmpRpxojuuxso3hYnJg5gaylHA9Slj3Ik1It?=
 =?us-ascii?q?i4RVd9bNW5E5VQrzmXO5VqTs4mWW1kpSg3xqMctZKmfyUG1I4ryh/dZvCfcIWF?=
 =?us-ascii?q?7AjvWPiSLDtimn5pZK6ziwyv/UWixODxUNS/3kxQoSpfiNbMs2gA1xzN5ciDTf?=
 =?us-ascii?q?tw5lmh2TmR2ADJ8O1EIl47lbDdK5E/xr48jJ0TsV7MHiPumUX2irGZdlk89+S2?=
 =?us-ascii?q?9+jqZq/qqoKSOoNqkA3yL6cjltClDek5MAUCR22b9v691L3n8035WrJKjvgun6?=
 =?us-ascii?q?ndsZDaI9kbp6GgDw9WzIkj8RC/ACmi0NgBmnkGIlRFdwydj4XyJVHOL+73De2l?=
 =?us-ascii?q?j1Svjjhr3fbGMaPlApnXKXjDirjhca5n60FA0Aoz0cxf55VMB7EFIfLzWVH+uM?=
 =?us-ascii?q?bXDx8kKAG0x+fnCNNg1oIRQ26PA6mZML/Mvl+M/O4gP+6MZIoNsjbnN/cl/+Lu?=
 =?us-ascii?q?jWM+mVIFfammx5oXaGyiEfRhOUmZYWfsjc0HEWcFpQc+SO3qiFufUT9cfXqyXq?=
 =?us-ascii?q?Q85i0lB4KiF4vMWoetgLmZ1iehApJWfnxGCkyLEXrwdYWEXOkDZDiRIs9mlDwE?=
 =?us-ascii?q?U7+hRpQl1RGvsg/61rVmIvDV+i0eqZLsytx16/fPmhE18Dx+F96d3H2VT2Fogm?=
 =?us-ascii?q?MIQCc707pkoUx9zVeD0rJ0g+ZCGtxR/P5JVgY6NZjBz+11EdzyWwTBfsuXR1ai?=
 =?us-ascii?q?WNmpHTYxTtcpyd8Uf0l9A8mijgzE3yeyAL8ajbqLCIYw8qLdxXfxIcl9xm3C1K?=
 =?us-ascii?q?kgiVkmX8ROOXenhq556wjcGYrJn1+FmKatcKQWxDTN+3ubzWqSoEFYVxZ9Xrjf?=
 =?us-ascii?q?UnABeETat9T56VnET7+1F7snNAxNycqBKqtPbt3kllFGRPblONTDbGO9gWawBR?=
 =?us-ascii?q?CUxrySaIrmYXkS3CLYCEIciQAc4W6GNRQiBiemu2/RESZhFUzxbE/28elxsnW7?=
 =?us-ascii?q?TlQqwAGMdEBh07u1+hgIhf2TUf8T37QEuDs/pDVwBlqyw9XWC9+YrQp7YKpcec?=
 =?us-ascii?q?894EtA1W/Bqwx9P5mgL6d+hl4ecwV7pV/u2w9wCoValcgqrXUqzAVpJKKc0VNB?=
 =?us-ascii?q?cS6Y3J/qNr3WLGny4A6ga6rM1l7C19aW/78F6O4kpFX7oAGpCk0i/m193NlRzX?=
 =?us-ascii?q?Sd6YvFDQoIXZ3qT0Y46gJ1p7fZYik6+YPZznlsMaiysj/f1NMlHuolyhC8f9hB?=
 =?us-ascii?q?NKOIDhP9E8ofB8K2Muwlh0Cpbg4YPOBV7KM1P96me+Ga16KxPedgnCipjWJI4I?=
 =?us-ascii?q?1m1kKM9ix8SvPH3pofwvGY2BeHWCn4jFu7rs/3noVEbykIHmWj0SjkGJJRZqpq?=
 =?us-ascii?q?cIYRCGehP9e4xs9jiJ7qQXJY8kCsB0kH2MOwZRWddVj90hBO2kQNpnynnzC1zz?=
 =?us-ascii?q?h1kzEvs6qe0zbCw+XkdBobJGFLQHNugkvrIYixl9oaRlSnbxA1lBu54kb336ha?=
 =?us-ascii?q?pKVlI2jTW0tIZDX2L2d5X6u0t7qCZdNP6ZwyvSVWVuS8fU6VSrrnrxQG1CPjGn?=
 =?us-ascii?q?NUxConeDGyppX5gxt6hXqfLHlptnrZesJwxRDF6NzHX/FR3TkGRCh+iTbJAFix?=
 =?us-ascii?q?JN2p/dSSl5feveGyTWOhVptPcSb1yYOMrje05WpvARenhfC8hsXnERQm0S/8z9?=
 =?us-ascii?q?RrVT/HrBHmbonp1qS6N/lqfk1pBF/69sp7FZtykoo2hJEMx3cago+Z8mYAkWf2?=
 =?us-ascii?q?Kd9bw77xbGIRRT4XxN7Y+Avl11diLn6Tx4L5S2+Sws1uZ9ShZmMW2yQ9791FCa?=
 =?us-ascii?q?uO7bxEmzd1rUS8rQ7Lffd9mTIdw+M06HEGm+EJpBYtziKFD7AXHElYPjbjmw6G?=
 =?us-ascii?q?7t+gt6VXeHigcaKr20Vgh9ChA6qPogVdWHb/Z5cjEjV87sR5MFLQznLz7pvod8?=
 =?us-ascii?q?XXbdIWrheUiQvPj/BJKJItkfoHnTZnOWX4vXE/yu80lxpu3YyhvIicKmVg56a5?=
 =?us-ascii?q?Ah9eNj3oaMIf4DDtjaBCnsmI24CjBIluGjIOXJHwV/KnDCoStej7NwaJCDAzsW?=
 =?us-ascii?q?2UGb3bHQ+C8ktmq2/PHouvN3GWInkZ0NpjSAOcJExZnAAbQjE6koQlGQCtwczr?=
 =?us-ascii?q?aF156SwJ5l7kthtMzfplNxvlXWfaugiocS04SISFIBpV8wFC5FrVMcqE4eJoBC?=
 =?us-ascii?q?xY+pyhrAqQKm2UfQhIDGcJWlCaCFDnJLWh+d7A8+2ADOqkM/TOeamOqfBZV/qQ?=
 =?us-ascii?q?xZOv1ZZm/y+RNsqVOHluFeY72k1FXXB2AMnZnzQPSyoKlyPCdcKbpRG8+jFpoc?=
 =?us-ascii?q?C76vjkRAXv5Y6XAbtILdpv4wy2gbuEN+OIhCZ2NzdY1pAPxX/J0rQf30QSiyZh?=
 =?us-ascii?q?dzazC7QAqDXNQbnUmq9WCR4bdixyONFJ76I6wglCJ8rbhsnp2b5/i/4/E01FWk?=
 =?us-ascii?q?D5msG1ecwKJHmwO0naBEmQLrSJOz3Kz9vzYaO9UrBQiORUtxutuTeUCUPjPzKD?=
 =?us-ascii?q?lyX3WBCrK+1DkCabPBlGsoGnbhltEXTjTM7hahCjLN93jDg2zacoiX/QKWEcMS?=
 =?us-ascii?q?Zzc0VWo72U7CNYhOh/GmNb4npkK+mEhziW7+3CJpkKtvtrBzx+l/hG73Qi17tV?=
 =?us-ascii?q?8CZESeR1mSTIqN5uplCmku+XxTtmUBpBsDBLhI2QsEVmOKXZ8IRAWHne8BIM62?=
 =?us-ascii?q?WQFwoFp99/BtLzvKBQz4uHqKWmCy1Q4snG4cwST+vTOsaAL2EiMFK9GyTGDyMG?=
 =?us-ascii?q?QCStOGWZgFZSxrXaznSLo5xyj5HnmJcNAutDXUI4EtsHAVsjF85UZN9NWTlssb?=
 =?us-ascii?q?OBls8O6jLqth7bRIZWorjEW+iUDPGpLyyW2/0MQhISwvvCMJgXP4v3kxhnY0N5?=
 =?us-ascii?q?2p7XB07ZW9xlqzdkKAQzpRMJuFJ3SWky3QraYwWiqCsZHPmwnxhwlQJ4bswp9T?=
 =?us-ascii?q?Hl+VBxIUDF8m94qkApmdzohXitfS/qN6qhR4weXzDoulkqKZ7qWQtdYgi7nEgi?=
 =?us-ascii?q?PzDBEfYZi7pmaHAujALQorNRFvNGC65JehkdwbeQffpsmVhRtCSsyFNd6ObtF5?=
 =?us-ascii?q?Rvjk0pfISqonYG3BhsKJYxJKrNNO9Kw0JWi6amoCClzKYyzRUYKkJL93mdKwAS?=
 =?us-ascii?q?v0ldFLAtKing1+pl8h6PhCBAeSBYVfMhr/Es/0U0IPaN0Dnj0pZML0mwM6qUKK?=
 =?us-ascii?q?bP6DuIrtKBXl5ljhBArEJC57UjlJ57K0c=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D6AADJEAxch0O0hNFjHgEGBwaBUwcLA?=
 =?us-ascii?q?QGCa38ng3qDe5AtgWAtFIkPbo1AgXEUAQEYEwGHXSI2Bw0BAwEBAQEBAQIBEwE?=
 =?us-ascii?q?BAQoLCQgpIwxCAQ4BgWQkAYJiAQIDAQIgBBEIARsEGgMCCQEBBQULAwoCAiYCA?=
 =?us-ascii?q?gMgEQEFARwGAQwGAgEBAYMcgWkBAxUEAZlCPIsNfBYFAReCdwWCRIFyChknDV2?=
 =?us-ascii?q?BNwIGEnmLFoFXP4ERJ4JriAWCVwKQA4VxiixVBwKCIQSPJAYYgVyFF4JzEIdHg?=
 =?us-ascii?q?wKGII9nAgQCBAUCBQ8hgSwIgX9wgQGCO4IbDBeDSopUPzKBBQEBgzeIegEB?=
X-IPAS-Result: =?us-ascii?q?A0D6AADJEAxch0O0hNFjHgEGBwaBUwcLAQGCa38ng3qDe5A?=
 =?us-ascii?q?tgWAtFIkPbo1AgXEUAQEYEwGHXSI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpIwxCA?=
 =?us-ascii?q?Q4BgWQkAYJiAQIDAQIgBBEIARsEGgMCCQEBBQULAwoCAiYCAgMgEQEFARwGAQw?=
 =?us-ascii?q?GAgEBAYMcgWkBAxUEAZlCPIsNfBYFAReCdwWCRIFyChknDV2BNwIGEnmLFoFXP?=
 =?us-ascii?q?4ERJ4JriAWCVwKQA4VxiixVBwKCIQSPJAYYgVyFF4JzEIdHgwKGII9nAgQCBAU?=
 =?us-ascii?q?CBQ8hgSwIgX9wgQGCO4IbDBeDSopUPzKBBQEBgzeIegEB?=
X-IronPort-AV: E=Sophos;i="5.56,331,1539673200"; 
   d="scan'208";a="55522548"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 08 Dec 2018 10:44:46 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726209AbeLHSoo (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sat, 8 Dec 2018 13:44:44 -0500
Received: from mail-lj1-f196.google.com ([209.85.208.196]:35957 "EHLO
        mail-lj1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726142AbeLHSon (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sat, 8 Dec 2018 13:44:43 -0500
Received: by mail-lj1-f196.google.com with SMTP id g11-v6so6267724ljk.3;
        Sat, 08 Dec 2018 10:44:42 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:to:references:from:message-id:date:user-agent:mime-version
         :in-reply-to:content-language:content-transfer-encoding;
        bh=LZLACOcCLED7YhS6FtIUV9p2SeZWScNM1UeKsefbuCk=;
        b=ZjQ9U6wzlfTBKRGNxjOnjvmgYj/WIU5/34MKDFpfwkD0uLWPhTwnyZaHLedQKu9H1M
         fPgtKtEn3uQD26Iu0faMIwhM0MdYtZrP/dNGeWra3IXHp2UHZ5MDVAgxESD65y7B7VvQ
         Jtnxoav/bdjJ6RyBTdz0yQeOdnWODRdVCOr49wpoYh1TYFCn6QkKzApsVgSYDyCr+aGu
         5gmc659LcVZhMhuNzWkHna0lU0u/3NpfBbIKZ4g7wWYD77ug6b6CRcSf4hTynKSgZfut
         8xdjRBEKURuTrGb/MhVvapn1EcL1NefLHRI/kuls06XdgM6iWZmRTLa+hyxeqt+TUxxG
         XKAQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=LZLACOcCLED7YhS6FtIUV9p2SeZWScNM1UeKsefbuCk=;
        b=Qv5RJeGexzKKnAAx90NCnOJah8FQJKVKKgKsIzGD4OuQl4E/KE2DmMm5Mp0DB4Y+s6
         Obpg1jKUejPET+6ufve3TGVFXHMn3N3D1qQVcWuKMMrKEKR3sORYFFDVbqa2BI29lnxg
         s9yemwHnEXsE0IDrh0WfFd+KqUdfSEBUUoLtuk3ubKbg9x8aGcmzxcUmqsZOU25K+0tK
         JQYiHZhOnA9D9A6J8K0sS0wjpfvSEexV+whKKbB0ctv0yg04um/Qrn5BEUywlVMtMnDa
         T0KEm/5PG2y75HbGB12I5GxyClN/sKAU27ujvnJRr5RaNt7gGKqO0y+3zz5hGykeBaSQ
         TpuQ==
X-Gm-Message-State: AA+aEWZ95EiXxFRL0qYxj3TO2crwD668mlGyKInaqQ7zYMcctafo9PDY
        7wyAPahhT6GLTpG6BCxFPAItmrZ6
X-Google-Smtp-Source: AFSGD/UeHV0YuL/ytFfxIfESYFwQarQAIaH8z8DuPkALgYadK67hA3v1x/1TzgZvKqdUxVenDAoVmw==
X-Received: by 2002:a2e:b1ca:: with SMTP id e10-v6mr4258718lja.16.1544294681147;
        Sat, 08 Dec 2018 10:44:41 -0800 (PST)
Received: from [192.168.1.18] (blg173.neoplus.adsl.tpnet.pl. [83.28.200.173])
        by smtp.gmail.com with ESMTPSA id l3-v6sm1198866ljg.21.2018.12.08.10.44.38
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sat, 08 Dec 2018 10:44:40 -0800 (PST)
Subject: Re: [PATCH 4/4] leds: trigger: Add pattern initialization from Device
 Tree
To: Krzysztof Kozlowski <krzk@kernel.org>, Pavel Machek <pavel@ucw.cz>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Baolin Wang <baolin.wang@linaro.org>,
        Raphael Teysseyre <rteysseyre@gmail.com>,
        linux-leds@vger.kernel.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <1544185974-5932-1-git-send-email-krzk@kernel.org>
 <1544185974-5932-4-git-send-email-krzk@kernel.org>
From: Jacek Anaszewski <jacek.anaszewski@gmail.com>
Message-ID: <8222f85b-4e61-69c4-6d31-ba559de02829@gmail.com>
Date: Sat, 8 Dec 2018 19:44:35 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <1544185974-5932-4-git-send-email-krzk@kernel.org>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Krzysztof,

Thank you for the patch set.

Applied 1/4 and 2/4.

I'll hold on merging 3/4 until we sort out the issues
I have with this one. Please refer to my comment below.

On 12/7/18 1:32 PM, Krzysztof Kozlowski wrote:
> Allow initialization of pattern used in pattern trigger from Device Tree
> property.
> 
> This is especially useful for embedded systems where the pattern trigger
> would be used to indicate the process of boot status in a nice,
> user-friendly blinking way.  This initialization pattern will be used
> till user-space is brought up and sets its own pattern, indicating the
> boot status is for example finished.
> 
> Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
> ---
>   drivers/leds/trigger/ledtrig-pattern.c | 18 ++++++++++++++++++
>   1 file changed, 18 insertions(+)
> 
> diff --git a/drivers/leds/trigger/ledtrig-pattern.c b/drivers/leds/trigger/ledtrig-pattern.c
> index 1870cf87afe1..96309d3bc43c 100644
> --- a/drivers/leds/trigger/ledtrig-pattern.c
> +++ b/drivers/leds/trigger/ledtrig-pattern.c
> @@ -11,6 +11,7 @@
>   #include <linux/leds.h>
>   #include <linux/module.h>
>   #include <linux/mutex.h>
> +#include <linux/of.h>
>   #include <linux/slab.h>
>   #include <linux/timer.h>
>   
> @@ -331,6 +332,21 @@ static const struct attribute_group *pattern_trig_groups[] = {
>   	NULL,
>   };
>   
> +static void pattern_init(struct led_classdev *led_cdev)
> +{
> +	struct device_node *np = dev_of_node(led_cdev->dev);
> +	const char *pattern;
> +
> +	if (!np)
> +		return;
> +
> +	if (!of_property_read_string(np, "linux,trigger-pattern", &pattern)) {
> +		if (strlen(pattern))
> +			pattern_trig_store_patterns(led_cdev, pattern,
> +						    strlen(pattern), false);
> +	}
> +}
> +
>   static int pattern_trig_activate(struct led_classdev *led_cdev)
>   {
>   	struct pattern_trig_data *data;
> @@ -354,6 +370,8 @@ static int pattern_trig_activate(struct led_classdev *led_cdev)
>   	timer_setup(&data->timer, pattern_trig_timer_function, 0);
>   	led_cdev->activated = true;
>   
> +	pattern_init(led_cdev);

It means that the pattern defined in DT would be applied
whenever the pattern trigger is set for a LED class device,
whereas it should happen only on LED class device initialization,
if linux,default-trigger is set to "pattern".

What we would need for making that work is a generic support for
parsing trigger specific initialization data in the
of_led_classdev_register().

> +
>   	return 0;
>   }
>   
> 

-- 
Best regards,
Jacek Anaszewski
