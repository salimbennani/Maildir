Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:42:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 0BF48580375;
	Tue,  4 Dec 2018 09:54:48 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga004-1.fm.intel.com with ESMTP; 04 Dec 2018 09:54:47 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AoOzc/BAH9uMpfBqpokh8UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP7/osiwAkXT6L1XgUPTWs2DsrQY07qQ6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXdrXKo8DEdBAj0OxZr?=
 =?us-ascii?q?KeTpAI7SiNm82/yv95HJbAhEmDmwbaluIBmqsA7cqtQYjYx+J6gr1xDHuGFIe+?=
 =?us-ascii?q?NYxWNpIVKcgRPx7dqu8ZBg7ipdpesv+9ZPXqvmcas4S6dYDCk9PGAu+MLrrxjD?=
 =?us-ascii?q?QhCR6XYaT24bjwBHAwnB7BH9Q5fxri73vfdz1SWGIcH7S60/VC+85Kl3VhDnlC?=
 =?us-ascii?q?YHNyY48G7JjMxwkLlbqw+lqxBm3oLYfJ2ZOP94c6jAf90VWHBBU95fWSJBHI2y?=
 =?us-ascii?q?cogBD+QOMulEsobzqFkBohWlBQm0Bu7i0SNIi3zq0aEmz+gsCwPL0Qo9FNwOqn?=
 =?us-ascii?q?TUq9D1Ob8UX+C00qnIzCjDZO5Y1zfg9YfHaA0hquyLULx2cMrR10gvFx7fglue?=
 =?us-ascii?q?tIzqIima1vkWvmeB9epgUPijhHIgqwF0uzWiwNonhIrRho8N1FzI6SF0zJwoKd?=
 =?us-ascii?q?C2VkJ3e8OoHZhMuy2ANoZ7QNsuT391tCs40LEKpJG2cDQQxJg62xLTduaLfoqU?=
 =?us-ascii?q?7h/lSe2fOy13hGh/d7K6nxuy8Vavyun7VsSszlZKoTRKksPWunAOyRPT8M6HRe?=
 =?us-ascii?q?V5/ku73jaPzQ/T5vlFIUAyi6XbN4YszqAsmpcXq0jPAyH7lFvsgKOLdUgo5vKk?=
 =?us-ascii?q?5uXlb7n+o5+TLY50igXwMqQ0ncy/BPw1MgwPX2id5OS926Tv/U7nT7VQiP05jK?=
 =?us-ascii?q?3ZvIndJcUVoK62HRVV35096xawETimys4UnXoZI1JffhKIkYzpN0vJIPDiAvez?=
 =?us-ascii?q?m06snytzx/DaIr3hBY3ALnzCkLfiY7lx8UFdyBcowNBb5pJUDKwBIf3pVk/wst?=
 =?us-ascii?q?zYEgE2Mwiuz+n7D9V905sUWXiTDa+BLKPSrViI6/ovI+aWZY8VpCzyK/8/6/7u?=
 =?us-ascii?q?kH82g1kdfaay0JsTaXC4GOlmIkqDbXrthNcBDXkFvg4kQOP2j12CVCZZZ2yuUK?=
 =?us-ascii?q?Ik+jE7FIWmAJ/BRoCqnrONxiS7HppQZmBADVCBCnPod4SCW/cRZyOeOM5hkjoY?=
 =?us-ascii?q?Vbe/T48tzw2htAj/y7B/NOrb5jUYtY7/1Nhy/+Dcjwoy9TxzD8SeyW2NVXt7nm?=
 =?us-ascii?q?ETSj8y3aB/p1F9y1iZ3ah5hfxYCcJc5/dTXggmMp7cyvRwC8ruVQLZYteJVFGm?=
 =?us-ascii?q?T82lAT4rSNI92dsOY0dnFNWkgRDOxC6qA74Tl7yWC5046KPc337tJ8ljz3bKzr?=
 =?us-ascii?q?Uuj14jQsFXL22pmrZ/9xTPB47Oi0iWiryldboC0yLX9GeM12yOvFpGXw52VqnF?=
 =?us-ascii?q?WXMfZk7Srdni4kPCTrmuCakoMwdbyM6CLLdKZcPtjVlcWPjjP9HeaXqrm2isHR?=
 =?us-ascii?q?aI2q+MbI3ydmoAxirdFlYLnxoT/XmcMwg+HTmuo2TFATxqFFLvZV7s8OZkpHO6?=
 =?us-ascii?q?SE800x+Fb0l727Wp/R4VgOSWS+kP0bIcpCchtzJ0EU6h39LXDtqAoBZhfKVcYN?=
 =?us-ascii?q?8n/FdLz2XZtxZ5PpyhKaBiiUUTcwB2v0PoyhV2BZ9MkcksrHM20gVyLbiU309G?=
 =?us-ascii?q?dzOdxZrwIKHYKnHu/BCzbK7bwkvR0NKI9aYA9vs5q0/vsxq0FkU/6Xpn1dpV03?=
 =?us-ascii?q?yC5pjRCAoSUJTxUls49hRgprHaZDU96J3Q1XF2Laa0tTrC0cozBOQ50hagY8tf?=
 =?us-ascii?q?MKScGQ7yDs0WHdShJPYrmlipdB0EOu9S+bUwP8OncfuGxaGqMPxhnDKgkWRI/o?=
 =?us-ascii?q?R93liQ+Cp7T+7Cx4wFzO2A3gubSzf8i0+sstr2mY9Yfz4SBHewyS/+CI5XeKJy?=
 =?us-ascii?q?Z4cLBX6yLMKtwtVxmoDiW2Rf9F6lHF4G3M6peRyPb13yxwFQ1EIXoWC5liu81T?=
 =?us-ascii?q?B7jzYprq+H1izU3+vibAYHOnJMRGR6jVbsIJK4jtAAUEizcggpkgCo5UL7x6hd?=
 =?us-ascii?q?uaR+IHPfQUZOfyjqMW5iVrG8uaaFY85K8JkoqzlYUPygYVCGTb7wuxka3Dn5H2?=
 =?us-ascii?q?tdxzA7cCumuo7jkBx5i2KdLXBzo2TfecxrwRff5drcReNe3zYcRSl4jyXXCUa4?=
 =?us-ascii?q?P9Wz4dqUkJLDuPikV229Tp1TbTXrzYSYuSq7/2JqBgezn/Kymt3hCgU61S7719?=
 =?us-ascii?q?93VSTHthr8Y4/r17ikPuJjZEVnGFj8689iEIFkjoQwnI0Q2WQdhpiN/noIi2bz?=
 =?us-ascii?q?Pc9b2aLjdnUNQzELzsXR4Ajk3k1jM32Iy5j4VnWb3stued26bnkK1SI66sBAEL?=
 =?us-ascii?q?2U46BcnStpvlq4qhrcYf18njce0/Qi8nAbjP8SuAox0CqdGKsdEldCPSzjjBmI?=
 =?us-ascii?q?69G+rKNKZGega7Sw1Ux+ncy/A7GGuA1TRHH5epI6Fy9q8sp/KE7M0GH06oz8ZN?=
 =?us-ascii?q?nQatcTugeVkhjaiehVNYkxluELhSd8PWL9vHsly/M0jBB03JG6upSHJHtp/K6j?=
 =?us-ascii?q?HhFYMTj1bdsJ+j7xlaZegtqW34e3E5p6ADoLW5/oTe+yHDIWqPTqLAKOEDw6qn?=
 =?us-ascii?q?eGFrvTBw6f6EF6r33RF5CnLW2YJH4czd96XhmSOFRfgBwIXDU9hpM5FBqlxMn/?=
 =?us-ascii?q?f0di/DwR+kT0qhhRyuJrKhn/VH3QpByzZzcwSZifKgdW7w5Y60fUN8ye8vx8Hy?=
 =?us-ascii?q?VC8pK9qwyNL3SRZx5UAmERRkyEG1fjM6Gu5NnH7uiYH/e+IOHIYbmUsuxeUPGI?=
 =?us-ascii?q?xZ2034ti/jaMMNiPP3Z4A/063EpDQW52G8DDlzoTTCwXkjrHb9SHqxek5i13ss?=
 =?us-ascii?q?e//ezrWA3x5IuPCLhSMdR19xC1m6eDMOGQizhjKTZFzZMB3nvIyLkZ3F4PhCBi?=
 =?us-ascii?q?bTitEbIctSHTSKLcgLNYDxkeaylrLstH87o83hVROc7ckt76zKN4geUvC1hbVV?=
 =?us-ascii?q?3tgMWpZc0RLmG5NVPHAluLNbucKT3KxcH3fb2zSblKgOpIsB2wvC6RE1X/MTSb?=
 =?us-ascii?q?iznpSxevPPlQjCGaORxSop2yfgxxBmjjUt3mbAa2MNt2jT0w3L01iWnGNW8aMT?=
 =?us-ascii?q?hgbUxNqqec4j9fgvV6A2ZB9GZqLfGYmyaF6OnVMpYXvuFtAiRxluJa5mw1yrpV?=
 =?us-ascii?q?7C5eQvx1lzDfrtpvo1Ggj+mOxSBrUBtIqjZXmo2LuV9uNrne9plFCj74+0ck/G?=
 =?us-ascii?q?yWQzQDo9doEJW7krFZzJ7vnab/JS1q+sjRu8AbAp6HBtiANS8FMAToBXb4EQcM?=
 =?us-ascii?q?UHb/EWDBhlEbvOye/2C9p4I/7JPrncxdGfdgSFUpG6ZCWQxeF9sYLcIyB2t8nA?=
 =?us-ascii?q?=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ABAAAevgZch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBUQQBAQEBAQsBg2sUE4N5iBlfjT0UkjyEeYFxLhMBhECDDCI?=
 =?us-ascii?q?0CQ0BAwEBAQEBAQIBEwEBAQgNCQgpL4I2JAGCYgECAwECIAQLASAmBgkBAQoYA?=
 =?us-ascii?q?gIFGgcCAgMMBRgxEwWDHIICBAGlEnwzii+BC4sTgVc/gRGDEoUBgwSCVwKJMYF?=
 =?us-ascii?q?vlSkHAoIkjxIjkSYsglCXQYINMxojgzyCUI4LPwEBMYEFAQGKYgEB?=
X-IPAS-Result: =?us-ascii?q?A0ABAAAevgZch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BUQQBAQEBAQsBg2sUE4N5iBlfjT0UkjyEeYFxLhMBhECDDCI0CQ0BAwEBAQEBA?=
 =?us-ascii?q?QIBEwEBAQgNCQgpL4I2JAGCYgECAwECIAQLASAmBgkBAQoYAgIFGgcCAgMMBRg?=
 =?us-ascii?q?xEwWDHIICBAGlEnwzii+BC4sTgVc/gRGDEoUBgwSCVwKJMYFvlSkHAoIkjxIjk?=
 =?us-ascii?q?SYsglCXQYINMxojgzyCUI4LPwEBMYEFAQGKYgEB?=
X-IronPort-AV: E=Sophos;i="5.56,314,1539673200"; 
   d="scan'208";a="42711749"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 09:54:45 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727396AbeLDRvm (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 12:51:42 -0500
Received: from foss.arm.com ([217.140.101.70]:38126 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726073AbeLDRvl (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 12:51:41 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 294E8A78;
        Tue,  4 Dec 2018 09:51:41 -0800 (PST)
Received: from e110455-lin.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id CA4823F59C;
        Tue,  4 Dec 2018 09:51:40 -0800 (PST)
Received: by e110455-lin.cambridge.arm.com (Postfix, from userid 1000)
        id 347996801C3; Tue,  4 Dec 2018 17:51:39 +0000 (GMT)
Date: Tue, 4 Dec 2018 17:51:39 +0000
From: Liviu Dudau <Liviu.Dudau@arm.com>
To: Ayan Halder <Ayan.Halder@arm.com>
Cc: Brian Starkey <Brian.Starkey@arm.com>,
        "malidp@foss.arm.com" <malidp@foss.arm.com>,
        "airlied@linux.ie" <airlied@linux.ie>,
        "dri-devel@lists.freedesktop.org" <dri-devel@lists.freedesktop.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "maxime.ripard@bootlin.com" <maxime.ripard@bootlin.com>,
        "sean@poorly.run" <sean@poorly.run>,
        "maarten.lankhorst@linux.intel.com" 
        <maarten.lankhorst@linux.intel.com>,
        "corbet@lwn.net" <corbet@lwn.net>,
        "mchehab+samsung@kernel.org" <mchehab+samsung@kernel.org>,
        "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>,
        "davem@davemloft.net" <davem@davemloft.net>,
        "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
        "nicolas.ferre@microchip.com" <nicolas.ferre@microchip.com>,
        "arnd@arndb.de" <arnd@arndb.de>,
        "linux-doc@vger.kernel.org" <linux-doc@vger.kernel.org>,
        nd <nd@arm.com>
Subject: Re: [RFC AFBC 10/12] drm/arm/malidp:- Use the newly introduced
 malidp_format_get_bpp() instead of relying on cpp for calculating
 framebuffer size
Message-ID: <20181204175139.GR988@e110455-lin.cambridge.arm.com>
References: <1543836703-8491-1-git-send-email-ayan.halder@arm.com>
 <1543836703-8491-11-git-send-email-ayan.halder@arm.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <1543836703-8491-11-git-send-email-ayan.halder@arm.com>
User-Agent: Mutt/1.11.1 (2018-12-01)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Dec 03, 2018 at 11:32:04AM +0000, Ayan Halder wrote:
> Formats like DRM_FORMAT_VUY101010, DRM_FORMAT_YUV420_8BIT and
> DRM_FORMAT_YUV420_10BIT are expressed in bits per pixel as they have a non
> integer value of cpp (thus denoted as '0' in drm_format_info[]). Therefore,
> the calculation of AFBC framebuffer size needs to use malidp_format_get_bpp().
> 
> Signed-off-by: Ayan Kumar halder <ayan.halder@arm.com>

Reviewed-by: Liviu Dudau <liviu.dudau@arm.com>

Best regards,
Liviu

> ---
>  drivers/gpu/drm/arm/malidp_drv.c | 13 ++++++++-----
>  1 file changed, 8 insertions(+), 5 deletions(-)
> 
> diff --git a/drivers/gpu/drm/arm/malidp_drv.c b/drivers/gpu/drm/arm/malidp_drv.c
> index 2f0b553..b2b97db 100644
> --- a/drivers/gpu/drm/arm/malidp_drv.c
> +++ b/drivers/gpu/drm/arm/malidp_drv.c
> @@ -297,6 +297,7 @@ malidp_verify_afbc_framebuffer_size(struct drm_device *dev,
>  	struct drm_gem_object *objs = NULL;
>  	u32 afbc_superblock_size = 0, afbc_superblock_height = 0;
>  	u32 afbc_superblock_width = 0, afbc_size = 0;
> +	int bpp = 0;
>  
>  	switch (mode_cmd->modifier[0] & AFBC_SIZE_MASK) {
>  	case AFBC_SIZE_16X16:
> @@ -313,15 +314,17 @@ malidp_verify_afbc_framebuffer_size(struct drm_device *dev,
>  	n_superblocks = (mode_cmd->width / afbc_superblock_width) *
>  		(mode_cmd->height / afbc_superblock_height);
>  
> -	afbc_superblock_size = info->cpp[0] * afbc_superblock_width *
> -		afbc_superblock_height;
> +	bpp = malidp_format_get_bpp(info->format);
> +
> +	afbc_superblock_size = (bpp * afbc_superblock_width * afbc_superblock_height) / BITS_PER_BYTE;
>  
>  	afbc_size = ALIGN(n_superblocks * AFBC_HEADER_SIZE, AFBC_SUPERBLK_ALIGNMENT);
>  	afbc_size += n_superblocks * ALIGN(afbc_superblock_size, AFBC_SUPERBLK_ALIGNMENT);
>  
> -	if (mode_cmd->width * info->cpp[0] != mode_cmd->pitches[0]) {
> -		DRM_DEBUG_KMS("Invalid value of pitch (=%u) should be same as width (=%u) * cpp (=%u)\n",
> -			      mode_cmd->pitches[0], mode_cmd->width, info->cpp[0]);
> +	if ((mode_cmd->width * bpp) != (mode_cmd->pitches[0] * BITS_PER_BYTE)) {
> +		DRM_DEBUG_KMS("Invalid value of (pitch * BITS_PER_BYTE) (=%u) "
> +			      "should be same as width (=%u) * bpp (=%u)\n",
> +			      (mode_cmd->pitches[0] * BITS_PER_BYTE), mode_cmd->width, bpp);
>  		return false;
>  	}
>  
> -- 
> 2.7.4
> 

-- 
====================
| I would like to |
| fix the world,  |
| but they're not |
| giving me the   |
 \ source code!  /
  ---------------
    ¯\_(ツ)_/¯
