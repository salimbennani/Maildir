Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:56:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga002.fm.intel.com (fmsmga002.fm.intel.com [10.253.24.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id CC9BC580375;
	Wed,  5 Dec 2018 09:03:14 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga002-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 09:03:13 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Am5TgZBdz2YqQn8e588Y8uPfilGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc6+YxKN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4qF2QxHqlS?=
 =?us-ascii?q?gHLSY0/mHJhMJtgqxVoxWvqB5xw4Hbb4+VL+J+c6HGcN8GRmdMRNpdWjZdDo+g?=
 =?us-ascii?q?aYYEEuoPPfxfr4n4v1YAqhq+ChWsBOz11DBIgmL907Am0+Q7Cw7GwRcvEMwTu3?=
 =?us-ascii?q?nTt9X1KL0SXvqozKbT0zrPdfdW2Tb76IjVfREsuv6MXbdqfsrQzUkjDR/KjlKV?=
 =?us-ascii?q?qYH8OT6ey+cDs3CD4uZ+Se6ij3Qrpxx/rzSx3Msgl4rEip4Pxl3F9yh12Jg5Ks?=
 =?us-ascii?q?ekREJlZNOpE4Zcuz2ZOoZzQc4vQ31ntDo/x7AIo5G2fycHxZE6yxPbdvCKd42F?=
 =?us-ascii?q?7Qz/W+mKLjp1gW9pdbKliBu99EWv1+zxWdKu31tMsyFLiMPDtmoX2BzW8sWHSu?=
 =?us-ascii?q?Vy/kOm2TuXyQDT5f9LIVoumarYNZEh2LgwmYQXsUjZGS/2gkr2gLeXdkUi5Oeo?=
 =?us-ascii?q?9/zqbqv6qpKYLYN4lw/zPro0lsCiAuk0LhICUmmZ9Oik0b3s50z5QLFEjv0sla?=
 =?us-ascii?q?nZtYjXJcAapq6/Hg9U3Z8v6xWhADe81tQXg30HIEtCeBOJiYjmJUvOLevmDfew?=
 =?us-ascii?q?nVusii1nx/PYMb37BJXCMHzDnK3mfbZn5E5Q0BAzwsxH55JIFrEBJ+r+WkvwtN?=
 =?us-ascii?q?zbEBA1KQO1w/v8BdV514MeX3+PA6CDPKPTt1+I+vwgI+2WaIAJvzb9LuAv5+Ty?=
 =?us-ascii?q?gn8hhV8dYa6p0IMXaH+iH/RmP1+WYX32jtcBDGcFpAw+TOPxhV2GUD5TYWuyXq?=
 =?us-ascii?q?0m6jE6DoKmEZnMRoS3jLOd2ye7G4VcZnpaBVCUDXfoa4KEVu8OaCKVPMBtiD8E?=
 =?us-ascii?q?Vb+nS48n0hGjrwv6y7thLurJ9SwUr5Pj1N5p5+LNkRE+7yB7D8OY02uVVWF7gn?=
 =?us-ascii?q?sIRyMq3KB4uUFy0EyD0ah/g/xbD9BT/elGUgUhOJ7Yzux6Dc3yWw3bcteITlam?=
 =?us-ascii?q?XsupATUrQt0txN8OZl53G8++gRDbwyqqH7gVmqSIBJMu9KLQxXzxJ8dnxHbA26?=
 =?us-ascii?q?kslF0mQspJNW27ia9z7QnTB4jVk0qHk6amb7gT3CnI9G2b12qBoFlYUBJsUaXC?=
 =?us-ascii?q?RX0Qe1HZrcrn6U/YT7+hE7InMhBfxs6ELadKbt7pjVBCRPr4PNTeYmSxm3q/BB?=
 =?us-ascii?q?qSx7OMapbqdHsZ3CnHFEcElAUT926cNQciHiehv37eDDt2GF3yeUzs7/dxpGm7?=
 =?us-ascii?q?TkAuyQGKdFNu17yu9x4RhPycTe4T370etCcgrTV0AEiy39bMB9WcoApheb1WYc?=
 =?us-ascii?q?kh71dfyWLZqwt9M4S8L6Bjg14edBh3v0Pu1hltFoVMi88qrGkuzApzL6KY30hM?=
 =?us-ascii?q?dzeZ3ZD2J73WJXP+/BGpa67KxF7e1Mya9bsI6PQ9s1/jph2mFlI+83V71NlYy2?=
 =?us-ascii?q?GT5pHUAwsdT53wUlw7+ANnp77HeCY94YDU1XpyMaSvtj/C2tQpBPYqyxq6ftdf?=
 =?us-ascii?q?Nr+EGxH2E8EAG8euL+kqkUCzbh0YJOBS6LI0P8S+evqGxa6nJvpvkCinjGRH+o?=
 =?us-ascii?q?991E2M+jF4Su7J2ZYF3v6Z0hGGVzf6kFeurMT3lZpYajEVG2q10TLkC5JJZq1u?=
 =?us-ascii?q?YYYLDn+jI9e2xtpinZHtQWNX9Fm5C1MAxsCpYxuSY0Xh0gJK0UQYvGKomTG/zz?=
 =?us-ascii?q?xyiDwpqquf3CrTw+XtbhYHO2hLRHV8glfoO4S7k9caXE2wZQgziBSl/Vr6x7Rc?=
 =?us-ascii?q?pKlnL2jTQF1EfijsI2F5T6uwsKGPY8pO6JMurCVWX/6wYVGcSr7hvRQa1znvEH?=
 =?us-ascii?q?dZxDA+bzuqoIn2nwRmiGKBK3Z+tHjZdttqxRfc59zcQuRd3iEcSyl7ijnXB168?=
 =?us-ascii?q?MMev/diPk5fDs+a+V3+uV5FJcCnry5+AuzW/5WFwHRK/mPWzkMX9EQcmyS/7y8?=
 =?us-ascii?q?VqVSLQoRf8eIbr0L62MeBmfkluH1L878t6Godjkoo/np0Q2H4ahomL8noDi2v8?=
 =?us-ascii?q?LdJb2afmZnoXWTEL28LV4BTi2EB7LXKG3YP5Wm+dwst8fda6ZGwW1zk578BLDq?=
 =?us-ascii?q?eU8bNFkTF0olq+sQLef/x9ki0Bxvsp7X4Qm/sJtxY1ziWBHrASGlFVPSntlxSL?=
 =?us-ascii?q?9d+ytqtWa3i0cbisykV+h8uuA6+YogFTQ3v5fpYiHSlt7sRwKl7M0Xvz6p36d9?=
 =?us-ascii?q?nUd94cqhqUkxLYhehPNJ0xjuYKhTZgOW/loX0lzOs7gQZv3J6guoiHNn5t/Lm4?=
 =?us-ascii?q?AhNDMj31ZsUT+izijKpEn8aW2ZyvEYtlGjkRQJToSveoGioItfv7LwaODCE8qn?=
 =?us-ascii?q?CDFLXEBwCf70Nmr2/VH5CvKnGaP30ZzdRkRBmAK01TmgEUXDMmnpEnEgCm3tDu?=
 =?us-ascii?q?cEB85joJ/F73tgNMyv50Nxn4Smrfph2najIqR5iENhZW8htO50TIMcyd8+JzGT?=
 =?us-ascii?q?tX/oa6oQyJK2ybYRlIDG4TVkyFAVDjIqeh5d3a/+eEAeq+KuPEYa+SpuxGS/eI?=
 =?us-ascii?q?2ZWv35Nm/jaLK8WPJ2RiAOc92kZZRnB5HMLZmzoURiwTliLNadObpRim9i12qM?=
 =?us-ascii?q?C/7OrkWAb16YSTDLtSNM1l+wqqjqebK+6QmCF5JC5Y1pwSxH/Iy7sf3F8IhyFt?=
 =?us-ascii?q?bTmtFrsAujDXTKLNga9aFBobayJ1NMtV4KMwxAhNOcjHitzr0r50lOI6C1BAVV?=
 =?us-ascii?q?b5gMGmedQKI32hNFPAHEuELqmGKibRw87pYaKwU7lQjORPuh20uDabFVLjPzuZ?=
 =?us-ascii?q?mznoURCvLf9DjCWBMBNCv4G9dw5nCXL/Q9L+dh27LNh3gCUqwb01g3PGL3ITPS?=
 =?us-ascii?q?JgfENNsLKQ6zhVgvF+G2xH83pkIvOImyef7+nENJkWteFnDThzl+Jf+H460ada?=
 =?us-ascii?q?7DlYRPxpnyvftt5vrEugkumKyzpnVgJBqzdLhI2Ru0ViNr7U9p1BWXbC4RIM4n?=
 =?us-ascii?q?+cCxUMp9t5FNLvv7pcxcTIlKL2e39+9Ifb58YTBMj8LMOBLWovNgfvFDfIDQwD?=
 =?us-ascii?q?CzmxOjLxnUtYxdST/X2co5xykYT2kYcER/cPT0AvH+4QBwJhHdofML94Wzollf?=
 =?us-ascii?q?iQi8tetin2lwXYWMgP5sOPbfmVG/i6cDs=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AwAACjAwhch0O0hNFkHgEGBwaBUggLA?=
 =?us-ascii?q?YEwgTmBAieYIIIhlziBdg8BARgTAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCk?=
 =?us-ascii?q?jDII2IoJlAwMBAiQLAQ0BGx0BAwIJAQEFEDsDHgIRAQUBHBkFgxwBgWgBAxUBB?=
 =?us-ascii?q?Jo6PIwJFgUBF4J3BYQ6ChknDV2BNwIGEoddgxOBHIIWgRGFaYgFAokzlnUuBwK?=
 =?us-ascii?q?GQ4dRgyMLGF6JAodPLI5TiVgCBAIEBQIFDyGBJwKCCTMaI4EBgjuCGwwXEoM4i?=
 =?us-ascii?q?lQ/MoEEAQEBO4ohAQE?=
X-IPAS-Result: =?us-ascii?q?A0AwAACjAwhch0O0hNFkHgEGBwaBUggLAYEwgTmBAieYIII?=
 =?us-ascii?q?hlziBdg8BARgTAYdTIjUIDQEDAQEBAQEBAgETAQEBCA0JCCkjDII2IoJlAwMBA?=
 =?us-ascii?q?iQLAQ0BGx0BAwIJAQEFEDsDHgIRAQUBHBkFgxwBgWgBAxUBBJo6PIwJFgUBF4J?=
 =?us-ascii?q?3BYQ6ChknDV2BNwIGEoddgxOBHIIWgRGFaYgFAokzlnUuBwKGQ4dRgyMLGF6JA?=
 =?us-ascii?q?odPLI5TiVgCBAIEBQIFDyGBJwKCCTMaI4EBgjuCGwwXEoM4ilQ/MoEEAQEBO4o?=
 =?us-ascii?q?hAQE?=
X-IronPort-AV: E=Sophos;i="5.56,318,1539673200"; 
   d="scan'208";a="55047335"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 09:03:11 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728196AbeLERDJ (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 12:03:09 -0500
Received: from mail-wm1-f65.google.com ([209.85.128.65]:40845 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728135AbeLERDG (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 12:03:06 -0500
Received: by mail-wm1-f65.google.com with SMTP id q26so13609342wmf.5
        for <linux-kernel@vger.kernel.org>; Wed, 05 Dec 2018 09:03:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=a8Kl5HlNdxxfoD4rhcKSir+vhVYp1fLuoWJSXS0Kcaw=;
        b=ZEf5dTg2XdMIIwSaJs4e7GBBcUfHrtGgWcM62S2mGD8dCliqmTNvEgnBH0rLAj69MV
         PhvLrGbG7tSACDRy8/4UphRNw1fuQPX3yxIsiI/j98JUqYdPRoeiEXhPxjGE4ez3WMUd
         89aodnR1iw33c3kFT5s0AW/es2tF/Z6A4NHAFRXON8kfomTYWwCrVYRlsT7URcSXOYWD
         +BP+REGZARoKmrhuQxua/eSRPJxpmMgoj9SW5dTgSHLTNcnHndKkeTirUY00fFUiDkat
         LJvYBfiNgVwF5JLBpa1Nxq9RFPmVmv0YWTDjASt95EUxfOO+fmzKJzyVUVPKV2GP8BEh
         jdQQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=a8Kl5HlNdxxfoD4rhcKSir+vhVYp1fLuoWJSXS0Kcaw=;
        b=E6dfcgygy4EIVQx/Eb/pw5JepqfXFXNOTzU2H66mpTsLO8DPOOVvb1dNcebS82Fm9Y
         /gm8GEpUhM5ICd+akTE09OmKpmTRrExhnayllr8I4mZVe0THsNW82R/A720eRrKNfWn3
         +NwXoqIZx05ti7seePRMKf26g0gYZnYeEZq/hdYEMS5QK/3rDhn9qkWW+WQY/odwT8WQ
         IqHthu9zolRRjm41WkgDAHLmHlwfhhXq9X41SNCfTjiiqdnStJ9Zy95XIvRdC5wJAWHj
         QPzuD4XT++l2MrNIctCv8bJ1oAoCPoVxnRDvT9KjxYNMhN/HTR5A71nDwJ3gh/RSB6jv
         6NWA==
X-Gm-Message-State: AA+aEWYShT3dFXOp8TFyAsoZoZx0VveZkpOBz9FsaZ3Ga48zs1SDcXLl
        kg2969waKC91v+WZdwQNhrw=
X-Google-Smtp-Source: AFSGD/V+jyVOaUKCYnthwAHvK3/Gn+tITApCkltc9SRGLvDhicuGVaXEGRre40B4Oohg7asV9ngx3A==
X-Received: by 2002:a1c:709:: with SMTP id 9mr15685174wmh.39.1544029382806;
        Wed, 05 Dec 2018 09:03:02 -0800 (PST)
Received: from localhost.localdomain ([2a02:8108:85c0:3a84:1919:ecb4:15a4:d6ba])
        by smtp.gmail.com with ESMTPSA id n127sm7949825wmd.20.2018.12.05.09.03.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 05 Dec 2018 09:03:02 -0800 (PST)
From: Michael Straube <straube.linux@gmail.com>
To: gregkh@linuxfoundation.org
Cc: devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org,
        Michael Straube <straube.linux@gmail.com>
Subject: [PATCH 04/12] staging: rtl8188eu: remove unnecessary parentheses in rtw_wlan_util.c
Date: Wed,  5 Dec 2018 18:02:39 +0100
Message-Id: <20181205170247.5401-4-straube.linux@gmail.com>
X-Mailer: git-send-email 2.19.2
In-Reply-To: <20181205170247.5401-1-straube.linux@gmail.com>
References: <20181205170247.5401-1-straube.linux@gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Remove unnecessary parentheses reported by checkpatch.

Signed-off-by: Michael Straube <straube.linux@gmail.com>
---
 .../staging/rtl8188eu/core/rtw_wlan_util.c    | 64 +++++++++----------
 1 file changed, 32 insertions(+), 32 deletions(-)

diff --git a/drivers/staging/rtl8188eu/core/rtw_wlan_util.c b/drivers/staging/rtl8188eu/core/rtw_wlan_util.c
index 76c7010c3a5c..0e2653a68f4f 100644
--- a/drivers/staging/rtl8188eu/core/rtw_wlan_util.c
+++ b/drivers/staging/rtl8188eu/core/rtw_wlan_util.c
@@ -377,7 +377,7 @@ int is_client_associated_to_ap(struct adapter *padapter)
 		return _FAIL;
 
 	pmlmeext = &padapter->mlmeextpriv;
-	pmlmeinfo = &(pmlmeext->mlmext_info);
+	pmlmeinfo = &pmlmeext->mlmext_info;
 
 	if ((pmlmeinfo->state & WIFI_FW_ASSOC_SUCCESS) && ((pmlmeinfo->state&0x03) == WIFI_FW_STATION_STATE))
 		return true;
@@ -388,7 +388,7 @@ int is_client_associated_to_ap(struct adapter *padapter)
 int is_client_associated_to_ibss(struct adapter *padapter)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	if ((pmlmeinfo->state & WIFI_FW_ASSOC_SUCCESS) && ((pmlmeinfo->state&0x03) == WIFI_FW_ADHOC_STATE))
 		return true;
@@ -400,7 +400,7 @@ int is_IBSS_empty(struct adapter *padapter)
 {
 	unsigned int i;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	for (i = IBSS_START_MAC_ID; i < NUM_STA; i++) {
 		if (pmlmeinfo->FW_sta_info[i].status == 1)
@@ -465,7 +465,7 @@ int allocate_fw_sta_entry(struct adapter *padapter)
 {
 	unsigned int mac_id;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	for (mac_id = IBSS_START_MAC_ID; mac_id < NUM_STA; mac_id++) {
 		if (pmlmeinfo->FW_sta_info[mac_id].status == 0) {
@@ -481,7 +481,7 @@ int allocate_fw_sta_entry(struct adapter *padapter)
 void flush_all_cam_entry(struct adapter *padapter)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	rtw_hal_set_hwreg(padapter, HW_VAR_CAM_INVALID_ALL, NULL);
 
@@ -491,9 +491,9 @@ void flush_all_cam_entry(struct adapter *padapter)
 int WMM_param_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 {
 	/* struct registry_priv	*pregpriv = &padapter->registrypriv; */
-	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
+	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	if (pmlmepriv->qospriv.qos_option == 0) {
 		pmlmeinfo->WMM_enable = 0;
@@ -501,7 +501,7 @@ int WMM_param_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 	}
 
 	pmlmeinfo->WMM_enable = 1;
-	memcpy(&(pmlmeinfo->WMM_param), (pIE->data + 6), sizeof(struct WMM_para_element));
+	memcpy(&pmlmeinfo->WMM_param, pIE->data + 6, sizeof(struct WMM_para_element));
 	return true;
 }
 
@@ -513,7 +513,7 @@ void WMMOnAssocRsp(struct adapter *padapter)
 	u32	acParm, i;
 	u32	edca[4], inx[4];
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 	struct xmit_priv		*pxmitpriv = &padapter->xmitpriv;
 	struct registry_priv	*pregpriv = &padapter->registrypriv;
 
@@ -609,9 +609,9 @@ static void bwmode_update_check(struct adapter *padapter, struct ndis_802_11_var
 	unsigned char	 new_bwmode;
 	unsigned char  new_ch_offset;
 	struct HT_info_element	 *pHT_info;
-	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
+	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 	struct registry_priv *pregistrypriv = &padapter->registrypriv;
 	struct ht_priv			*phtpriv = &pmlmepriv->htpriv;
 
@@ -660,7 +660,7 @@ static void bwmode_update_check(struct adapter *padapter, struct ndis_802_11_var
 
 	if (pmlmeinfo->bwmode_updated) {
 		struct sta_info *psta;
-		struct wlan_bssid_ex	*cur_network = &(pmlmeinfo->network);
+		struct wlan_bssid_ex	*cur_network = &pmlmeinfo->network;
 		struct sta_priv	*pstapriv = &padapter->stapriv;
 
 		/* set_channel_bwmode(padapter, pmlmeext->cur_channel, pmlmeext->cur_ch_offset, pmlmeext->cur_bwmode); */
@@ -687,7 +687,7 @@ void HT_caps_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 	unsigned int	i;
 	u8	max_AMPDU_len, min_MPDU_spacing;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
 	struct ht_priv			*phtpriv = &pmlmepriv->htpriv;
 	u8 *HT_cap = (u8 *)(&pmlmeinfo->HT_caps);
@@ -728,7 +728,7 @@ void HT_caps_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 void HT_info_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 	struct mlme_priv		*pmlmepriv = &padapter->mlmepriv;
 	struct ht_priv			*phtpriv = &pmlmepriv->htpriv;
 
@@ -742,7 +742,7 @@ void HT_info_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 		return;
 
 	pmlmeinfo->HT_info_enable = 1;
-	memcpy(&(pmlmeinfo->HT_info), pIE->data, pIE->Length);
+	memcpy(&pmlmeinfo->HT_info, pIE->data, pIE->Length);
 }
 
 void HTOnAssocRsp(struct adapter *padapter)
@@ -751,7 +751,7 @@ void HTOnAssocRsp(struct adapter *padapter)
 	unsigned char		min_MPDU_spacing;
 	/* struct registry_priv	 *pregpriv = &padapter->registrypriv; */
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	DBG_88E("%s\n", __func__);
 
@@ -779,20 +779,20 @@ void HTOnAssocRsp(struct adapter *padapter)
 void ERP_IE_handler(struct adapter *padapter, struct ndis_802_11_var_ie *pIE)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	if (pIE->Length > 1)
 		return;
 
 	pmlmeinfo->ERP_enable = 1;
-	memcpy(&(pmlmeinfo->ERP_IE), pIE->data, pIE->Length);
+	memcpy(&pmlmeinfo->ERP_IE, pIE->data, pIE->Length);
 }
 
 void VCS_update(struct adapter *padapter, struct sta_info *psta)
 {
 	struct registry_priv	 *pregpriv = &padapter->registrypriv;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	switch (pregpriv->vrtl_carrier_sense) { /* 0:off 1:on 2:auto */
 	case 0: /* off */
@@ -831,7 +831,7 @@ int rtw_check_bcn_info(struct adapter  *Adapter, u8 *pframe, u32 packet_len)
 	unsigned int		len;
 	unsigned char		*p;
 	unsigned short	val16, subtype;
-	struct wlan_network *cur_network = &(Adapter->mlmepriv.cur_network);
+	struct wlan_network *cur_network = &Adapter->mlmepriv.cur_network;
 	/* u8 wpa_ie[255], rsn_ie[255]; */
 	u16 wpa_len = 0, rsn_len = 0;
 	u8 encryp_protocol = 0;
@@ -1061,8 +1061,8 @@ unsigned int is_ap_in_tkip(struct adapter *padapter)
 	u32 i;
 	struct ndis_802_11_var_ie *pIE;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	struct wlan_bssid_ex		*cur_network = &(pmlmeinfo->network);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
+	struct wlan_bssid_ex		*cur_network = &pmlmeinfo->network;
 
 	if (rtw_get_capability((struct wlan_bssid_ex *)cur_network) & WLAN_CAPABILITY_PRIVACY) {
 		for (i = sizeof(struct ndis_802_11_fixed_ie); i < pmlmeinfo->network.ie_length;) {
@@ -1093,8 +1093,8 @@ unsigned int is_ap_in_wep(struct adapter *padapter)
 	u32 i;
 	struct ndis_802_11_var_ie *pIE;
 	struct mlme_ext_priv *pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
-	struct wlan_bssid_ex		*cur_network = &(pmlmeinfo->network);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
+	struct wlan_bssid_ex		*cur_network = &pmlmeinfo->network;
 
 	if (rtw_get_capability((struct wlan_bssid_ex *)cur_network) & WLAN_CAPABILITY_PRIVACY) {
 		for (i = sizeof(struct ndis_802_11_fixed_ie); i < pmlmeinfo->network.ie_length;) {
@@ -1192,7 +1192,7 @@ int support_short_GI(struct adapter *padapter, struct ieee80211_ht_cap *pHT_caps
 {
 	unsigned char					bit_offset;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	if (!(pmlmeinfo->HT_enable))
 		return _FAIL;
@@ -1335,7 +1335,7 @@ unsigned char check_assoc_AP(u8 *pframe, uint len)
 void update_IOT_info(struct adapter *padapter)
 {
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	switch (pmlmeinfo->assoc_AP_vendor) {
 	case HT_IOT_PEER_MARVELL:
@@ -1366,7 +1366,7 @@ void update_IOT_info(struct adapter *padapter)
 void update_capinfo(struct adapter *Adapter, u16 updateCap)
 {
 	struct mlme_ext_priv	*pmlmeext = &Adapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 	bool		ShortPreamble;
 
 	/*  Check preamble mode, 2005.01.06, by rcnjko. */
@@ -1448,8 +1448,8 @@ void update_wireless_mode(struct adapter *padapter)
 
 void update_bmc_sta_support_rate(struct adapter *padapter, u32 mac_id)
 {
-	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	if (pmlmeext->cur_wireless_mode & WIRELESS_11B) {
 		/*  Only B, B/G, and B/G/N AP could use CCK rate */
@@ -1464,8 +1464,8 @@ int update_sta_support_rate(struct adapter *padapter, u8 *pvar_ie, uint var_ie_l
 	unsigned int	ie_len;
 	struct ndis_802_11_var_ie *pIE;
 	int	supportRateNum = 0;
-	struct mlme_ext_priv	*pmlmeext = &(padapter->mlmeextpriv);
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	pIE = (struct ndis_802_11_var_ie *)rtw_get_ie(pvar_ie, _SUPPORTEDRATES_IE_, &ie_len, var_ie_len);
 	if (!pIE)
@@ -1495,7 +1495,7 @@ void process_addba_req(struct adapter *padapter, u8 *paddba_req, u8 *addr)
 	struct sta_priv *pstapriv = &padapter->stapriv;
 	struct ADDBA_request	*preq = (struct ADDBA_request *)paddba_req;
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
-	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
+	struct mlme_ext_info	*pmlmeinfo = &pmlmeext->mlmext_info;
 
 	psta = rtw_get_stainfo(pstapriv, addr);
 
-- 
2.19.2

