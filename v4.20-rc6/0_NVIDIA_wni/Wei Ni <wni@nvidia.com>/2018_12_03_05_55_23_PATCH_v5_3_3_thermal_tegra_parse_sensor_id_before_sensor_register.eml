Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 16:52:25 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4DD83580117;
	Sun,  2 Dec 2018 21:56:46 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga004-1.jf.intel.com with ESMTP; 02 Dec 2018 21:56:46 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3A5NQbRB3g9oxBNxNismDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSKf7xwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QLYpUjqg8qhrUgflhi?=
 =?us-ascii?q?cZOTAk/m/Zict+g6BVoB2uuxN/2JbUbYOOOfpiYq/QZ88WSHBdUspNUSFKH4Oy?=
 =?us-ascii?q?b5EID+oEJetXr5fyp1oTphWmBAmnGeTiyzFOhn/3xqA61fohEQDb0wwhBd0Cqm?=
 =?us-ascii?q?jbrNLwNKoLV+2+0arGzS3bYv9IxTvw7JLEfg0vrP2SR758bMncxVU1Gw7EjFic?=
 =?us-ascii?q?sZLpMy6U2+gXrWSX8eltWfiyh2I5tg19uDmiy8gqh4LUnIwa0ErE+j98wIstJd?=
 =?us-ascii?q?23Vkp7Ydm8HZtOuCGVKZF2TtkhQ252oiY6zKMJuZqhcCgN0pQnyAbTa/2Bc4eW?=
 =?us-ascii?q?/hLuTPidLSt8iX5/Zb6yiQi+/VK9xuD/SsW4yldHoyhdntnJrH8N1hjT6sadSv?=
 =?us-ascii?q?t6+0eswTKP1wHV6uFZLkE4jKnbJIA7wr42iJUTtV3PHij4mUXwkqCWbF4p+van?=
 =?us-ascii?q?6+v5eLXqvJycOJFuigH4LKsuntazAeMiMggBR2Sb4/iz1KX//U3lR7VHlvk2kq?=
 =?us-ascii?q?jasJ/EP8gaqbO5DhRR0oYi7Ra/Ejin3M4ZnXkBMFJKZhaHg5L1NFHJJfDyFe2/?=
 =?us-ascii?q?jEi0kDd32/DGOaXsApXXIXjCjLfuZ7F951RcyAou199f4Z1UB6oFIPLyXE/xqd?=
 =?us-ascii?q?PZAgU4Mwyy3+boFtF92pkCVmKIB6+TKLnSvkOQ5uIzP+mMY5cYuDT6K/c7/fLu?=
 =?us-ascii?q?jng5mVkbfamuxpYXbHG4HvJ7I0SWe3bsg9EBEXsUsQo6VuDllFqCUTtLbXaoQ6?=
 =?us-ascii?q?08/i07CJ6hDYrbXI+tm7yB3CC4HpFMfGBJEFKMHGzsd4WFXfcMdS2TLtVgkjwC?=
 =?us-ascii?q?SbiuVYsh2Quyuw/9zrptNvDU9TEAtZL/yNh14PXelRIo+jxyFcid12CNQHtynm?=
 =?us-ascii?q?MHXDI22KF/oUpgylaMy6R4gvpYFcBN6PNNSAs1KZncz+liAdDoRg3BZsuJSEqh?=
 =?us-ascii?q?Qti+HD4+VMwxzMEUb0Z9AdqiiAvD0DSsA7MSk7yLB5k08qbH0nj1JsZ9zWvG1a?=
 =?us-ascii?q?Y7g1knRMtPKXOphqpl+wfPAI7Jll2Tl7y2eqQEwC7N6GCDwHKTs05CTg5/T7/J?=
 =?us-ascii?q?XXAFaUvQttT2+EXCQqSqCbQmNAtB1MGDJrFLat3vkVVJWvPjNM7CbGK2nme6HQ?=
 =?us-ascii?q?yIya+UbIr2Z2Ud2z3QCFQFkwAW+naGKQg+Bye7r2LCFjBuEkjvY0ft8el4p3O2?=
 =?us-ascii?q?VUs0zwCMb0182Lu54B8VhfqAS/wN2rIIojsuqzJxHFylxdLZF8KApxZ9fKVbed?=
 =?us-ascii?q?4y+lNH2nzWtgNjPp2sNbtthkMDfAttuUPu1BJ3CptbnMgurXMqyhdyKK2C3FNA?=
 =?us-ascii?q?cTOYwY7/OrnNJmbu+xCvbrbc2kvC39aO5qcP9PM4pk3jvQG0DEYt729r0thV03?=
 =?us-ascii?q?SG4JXKAxEfUZbwUkYx6hh7qKvWYig754PIy3JsNbO4vSPF29IsHOEl0Aqvf89D?=
 =?us-ascii?q?MKOYEw//C9caB8myJ+MwgVimcxUEMPpU9KEqJcOmduKK17KxM+ZkgT2pk35H4I?=
 =?us-ascii?q?d70k+X8yp8S+jI34sKwv2C3wuHUSv8g0mlsszthY9EYjQSFHKlySf4HI5RerFy?=
 =?us-ascii?q?fYETBGauIs273NV/i4T2W35F8l6uHFcG2M6veRqPYF3xxwxQ1UILoXO5nSu01S?=
 =?us-ascii?q?B7kzYsrqCHxizB3/zidAYbOm5MXGRij03jIZK3j9AZW0ikdRMpmwGm5Ub5xqhb?=
 =?us-ascii?q?orpwL2/ITEdMfij2KXxiU6SqurqDZc5P9I0nsSFNXOugZlCaT6b3owEG3CP7A2?=
 =?us-ascii?q?te2Dc7eimqu5rjmBx2kmCdLHd1rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIODriS75HdmAR2in/+pnN3nHhM30Sv619?=
 =?us-ascii?q?lsSCXJowzwYojt16SmL+1nelNkC0P768p/Aot+iJc/hIkM2XgGgZWY5X8HkWbw?=
 =?us-ascii?q?MdpBw67/YmQCRSUXw9HL+gjqw1NsLmiGx4/iUnWdw81hZ8S1Y28M2yI96dxKB7?=
 =?us-ascii?q?mQ7LBegSR1pV+4pxrLYfdhhjcd1ecu6HkCjuEVvwotyz+RA7EIEkleICzsjA+I?=
 =?us-ascii?q?79GloaVTZWavd6Ww1UVkkdCgCrGCvh9TWHLjdpg+Gi9w6911MEjQ333r9oHkZN?=
 =?us-ascii?q?7QYMoIuRKOlBfAi/VVJIg1lvoXnidnPWP9vXs4y+80lxBu3Je6vJSZJGVp5q62?=
 =?us-ascii?q?HhlYNjjtbcMJ5j7tlbpentqR3423HJVuADALU4XzTf6yDDIer/fnNxuNED0hrH?=
 =?us-ascii?q?eUA6HfEBSb6EdnqXLPDp+qO2uWJHkf0dVtWh2dKFZDjwATWTUwhoQ5GRyyxMz9?=
 =?us-ascii?q?bEd54Sgc517/qhtR0+JoKgPwUmHFqAezbTc0TpefIQFS7gFD4UfVLMOf4vhyHy?=
 =?us-ascii?q?Fe4p2usgiNJnaHaARPCGEDQlaECEz7Prmy+dnA9PCVBuqgIPvPYrWOqu1eW+2L?=
 =?us-ascii?q?xZK11Ytm8CiDNt+SPnl5FPA73ktDXXZkG8XWgTkPSioXlz7TYM6fvhuz5ip3rs?=
 =?us-ascii?q?Wn+vTxRA3v/ZePC6dVMdh34R+2nLyMN/SOiyd5MzpY0pIMyGTMyLge2l4Sli5v?=
 =?us-ascii?q?eyOsEbQGqS7CUqbQlrVLAB4cbiN5LNFI4L4k3glRJc7bjcv41qJ5jv4wEVtKSU?=
 =?us-ascii?q?btld2pZcMUJWGwL1fHBEeNNLSbKjzH2cD3YaWgSbJOiOVYrQG/uTGeE0X7JDSM?=
 =?us-ascii?q?iyHpVwyzMeFLlCyaPAZRuIe4chZsD2jsVNPnah2hP99xgj072rk0hnLMNW4BPj?=
 =?us-ascii?q?lwaUJNrruM7SxGhvVzAXBO7n1gLbrMpyHMu/XYK5sMq+otGCl4luRVyHs/wrpR?=
 =?us-ascii?q?qipDQaox0H/ep9hvrlXgluSdwTNhVzJKqzBCnoXNul9tb+GRop1BX2vUuQ4A4n?=
 =?us-ascii?q?+ZIwoFqsEjCdD1va1UjN/Vm/SgBi1F9ofr8MpUIcmcfN2BMVInLxvlGTeSBwwA?=
 =?us-ascii?q?G234fVrDjlBQxanBvkaeqYI3/8Dh?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ARAAANxQRch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBGMCYIhlzSBcRYYEwGHeSI0CQ0BAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgpIwyCNiKCZQMDAQIkGQEBNwEFCQEBUANUBgENBQWDHIICBaN6gWwzgnYBA?=
 =?us-ascii?q?QWHGQiHbYMTgRwXgUA/gRGNbokogXmED3tRj0YJDZEvAhaRJokEj2mBRoINcBW?=
 =?us-ascii?q?DJ4IbDBeDSopgMwExgQUBAYxsAQE?=
X-IPAS-Result: =?us-ascii?q?A0ARAAANxQRch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBGMCYIhlzSBcRYYEwGHeSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiKCZ?=
 =?us-ascii?q?QMDAQIkGQEBNwEFCQEBUANUBgENBQWDHIICBaN6gWwzgnYBAQWHGQiHbYMTgRw?=
 =?us-ascii?q?XgUA/gRGNbokogXmED3tRj0YJDZEvAhaRJokEj2mBRoINcBWDJ4IbDBeDSopgM?=
 =?us-ascii?q?wExgQUBAYxsAQE?=
X-IronPort-AV: E=Sophos;i="5.56,309,1539673200"; 
   d="scan'208";a="42458448"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 02 Dec 2018 21:55:39 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1725923AbeLCFzi (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 00:55:38 -0500
Received: from hqemgate15.nvidia.com ([216.228.121.64]:10636 "EHLO
        hqemgate15.nvidia.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725912AbeLCFzh (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 00:55:37 -0500
Received: from hqpgpgate101.nvidia.com (Not Verified[216.228.121.13]) by hqemgate15.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
        id <B5c04c51d0000>; Sun, 02 Dec 2018 21:54:37 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
  by hqpgpgate101.nvidia.com (PGP Universal service);
  Sun, 02 Dec 2018 21:55:34 -0800
X-PGP-Universal: processed;
        by hqpgpgate101.nvidia.com on Sun, 02 Dec 2018 21:55:34 -0800
Received: from HQMAIL102.nvidia.com (172.18.146.10) by HQMAIL103.nvidia.com
 (172.20.187.11) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Mon, 3 Dec
 2018 05:55:34 +0000
Received: from HQMAIL105.nvidia.com (172.20.187.12) by HQMAIL102.nvidia.com
 (172.18.146.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Mon, 3 Dec
 2018 05:55:33 +0000
Received: from hqnvemgw02.nvidia.com (172.16.227.111) by HQMAIL105.nvidia.com
 (172.20.187.12) with Microsoft SMTP Server (TLS) id 15.0.1395.4 via Frontend
 Transport; Mon, 3 Dec 2018 05:55:33 +0000
Received: from niwei-ubuntu.nvidia.com (Not Verified[10.19.225.182]) by hqnvemgw02.nvidia.com with Trustwave SEG (v7,5,8,10121)
        id <B5c04c5540000>; Sun, 02 Dec 2018 21:55:33 -0800
From: Wei Ni <wni@nvidia.com>
To: <thierry.reding@gmail.com>, <daniel.lezcano@linaro.org>,
        <linux-tegra@vger.kernel.org>
CC: <rui.zhang@intel.com>, <edubezval@gmail.com>, <srikars@nvidia.com>,
        <linux-kernel@vger.kernel.org>, Wei Ni <wni@nvidia.com>
Subject: [PATCH v5 3/3] thermal: tegra: parse sensor id before sensor register
Date: Mon, 3 Dec 2018 13:55:23 +0800
Message-ID: <1543816523-10525-4-git-send-email-wni@nvidia.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1543816523-10525-1-git-send-email-wni@nvidia.com>
References: <1543816523-10525-1-git-send-email-wni@nvidia.com>
X-NVConfidentiality: public
MIME-Version: 1.0
Content-Type: text/plain
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
        t=1543816477; bh=WX7r0yE1+r8NYIP1EWb90nCZekGg+Ill3ql4gk+ytA0=;
        h=X-PGP-Universal:From:To:CC:Subject:Date:Message-ID:X-Mailer:
         In-Reply-To:References:X-NVConfidentiality:MIME-Version:
         Content-Type;
        b=dKgGQFDqXUowqthUAmTCMchnf1rAH6RPXUq9JNgI5PDbrsmr8fEmkmk8Ta8WkajBN
         QFJS5r2aYWoJ+Puchqo6YNgLUSAoRhmmcwPMeoi4KhoW7YMtr3S5yUMep7ju2ohs2P
         0F8RYWqACZbfHF/D2YGXlfxUREMrEfJ3fvIDQH9BQT2CYnzLroRf19w8bUZe3R5KES
         O8j6VBYOq5XmcNszoiraIhELPuHEBulkBbMoWgsVXS8C3I2sOXKZaHl1YAA0ywxCwp
         SVTrup3RyFWAtR4T5ANc0MC01vtWb+42GX5k9YOTR0ksHsUERsfaq7QLt2rLQ4hm98
         okpF1KzlpzU9Q==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Since different platforms may not support all 4
sensors, so the sensor registration may be failed.
Add codes to parse dt to find sensor id which
need to be registered. So that the registration
can be successful on all platform.

Signed-off-by: Wei Ni <wni@nvidia.com>
---
 drivers/thermal/tegra/soctherm.c | 45 ++++++++++++++++++++++++++++++++++++++--
 1 file changed, 43 insertions(+), 2 deletions(-)

diff --git a/drivers/thermal/tegra/soctherm.c b/drivers/thermal/tegra/soctherm.c
index fd2703c0cfc5..45e3ae8aac86 100644
--- a/drivers/thermal/tegra/soctherm.c
+++ b/drivers/thermal/tegra/soctherm.c
@@ -1224,6 +1224,41 @@ static void soctherm_init(struct platform_device *pdev)
 	tegra_soctherm_throttle(&pdev->dev);
 }
 
+static bool tegra_soctherm_find_sensor_id(unsigned int sensor_id)
+{
+	bool ret = false;
+	struct of_phandle_args sensor_specs;
+	struct device_node *np, *sensor_np;
+
+	np = of_find_node_by_name(NULL, "thermal-zones");
+	if (!np)
+		return ret;
+
+	for_each_available_child_of_node(np, sensor_np) {
+		if (of_parse_phandle_with_args(sensor_np, "thermal-sensors",
+						 "#thermal-sensor-cells",
+						 0, &sensor_specs))
+			continue;
+
+		if (sensor_specs.args_count != 1) {
+			WARN(sensor_specs.args_count != 1,
+			     "%s: wrong cells in sensor specifier %d\n",
+			     sensor_specs.np->name, sensor_specs.args_count);
+			continue;
+		}
+
+		if (sensor_specs.args[0] == sensor_id) {
+			ret = true;
+			break;
+		}
+	}
+
+	of_node_put(np);
+	of_node_put(sensor_np);
+
+	return ret;
+}
+
 static const struct of_device_id tegra_soctherm_of_match[] = {
 #ifdef CONFIG_ARCH_TEGRA_124_SOC
 	{
@@ -1365,13 +1400,16 @@ static int tegra_soctherm_probe(struct platform_device *pdev)
 		zone->sg = soc->ttgs[i];
 		zone->ts = tegra;
 
+		if (!tegra_soctherm_find_sensor_id(soc->ttgs[i]->id))
+			continue;
+
 		z = devm_thermal_zone_of_sensor_register(&pdev->dev,
 							 soc->ttgs[i]->id, zone,
 							 &tegra_of_thermal_ops);
 		if (IS_ERR(z)) {
 			err = PTR_ERR(z);
-			dev_err(&pdev->dev, "failed to register sensor: %d\n",
-				err);
+			dev_err(&pdev->dev, "failed to register sensor %s: %d\n",
+				soc->ttgs[i]->name, err);
 			goto disable_clocks;
 		}
 
@@ -1434,6 +1472,9 @@ static int __maybe_unused soctherm_resume(struct device *dev)
 		struct thermal_zone_device *tz;
 
 		tz = tegra->thermctl_tzs[soc->ttgs[i]->id];
+		if (!tz)
+			continue;
+
 		err = tegra_soctherm_set_hwtrips(dev, soc->ttgs[i], tz);
 		if (err) {
 			dev_err(&pdev->dev,
-- 
2.7.4

