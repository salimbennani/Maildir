Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 08:57:05 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A2F685805FF;
	Sun,  9 Dec 2018 12:45:16 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Dec 2018 12:45:16 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AEKh8lRWYhwjMQAaKea7fgQCcCsfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYZhCCu6dThVPEFb/W9+hDw7KP9fy4CSpYud6oizMrSNR0TRgLiM?=
 =?us-ascii?q?EbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpTEdFQ/iOgVr?=
 =?us-ascii?q?O+/7BpDdj9it1+C15pbffxhEiCCybL9uLxi6txndutULioZ+N6g9zQfErGFVcO?=
 =?us-ascii?q?pM32NoIlyTnxf45siu+ZNo7jpdtfE8+cNeSKv2Z6s3Q6BWAzQgKGA1+dbktQLf?=
 =?us-ascii?q?QguV53sTSXsZnxxVCAXY9h76X5Pxsizntuph3SSRIMP7QawoVTmk8qxkRgXoiC?=
 =?us-ascii?q?MaPDAn9m/ZhNF7gKZFrB69ohByxZPfboOIO/pkZq7Tfc0US3dPUMhSUCJODYyy?=
 =?us-ascii?q?b5AXD+cDJutUs4rwqkESoRakGQWgGOXiwSJIiH/s2q061vwsHx/G3QM8H9IOt2?=
 =?us-ascii?q?nfocnzNKgPT++11rLIwivFb/hL3jr99IjJfQwhofGLRr9wbcrQxlUvFwPClFmR?=
 =?us-ascii?q?p5flMiqT2+8QsGab9/JtWfyzh2MjsQ19vzaiytk2hoXUhY8Z1krI+CR7zYotJ9?=
 =?us-ascii?q?C0VVR3bcC5HJZTrS2WKoV7T804T211tis3xbsLsoOhcicQ0pQo3RvfZuSHc4eW?=
 =?us-ascii?q?5hLjU/6cISl3hH17YrKznRWy/la6yu36SMa01ExGri1fktnDrnwN1hrT5dabSv?=
 =?us-ascii?q?Zl4EutxTKC2xrO5uxKP0w4j7fXJp09zrIql5ces1zPHirsl0X3iK+WeF8k+u+t?=
 =?us-ascii?q?6+n/ZrXmp5mcN5J7iw3nMaQhhNa/AeImPQgKRmSb/uq91Lv98k3jW7hKkPI2nb?=
 =?us-ascii?q?fDsJzAJsQUuLS5AwlL3YYn8Rq/CC2m0NsAkXkdMF1FYA6Hj5TuO1zWJPD4DPS/?=
 =?us-ascii?q?jEq2nDZk2vDLJbnhApTLLnjen7btZ7d960hAyAUtydBT/Y5bCrYEIPjrQE/+qM?=
 =?us-ascii?q?TYDgMlMwyz2+vnCM9y1oICWW2VBa+VKqPSsUKS6eIpLOmBf4sVuDf7K/g46P/i?=
 =?us-ascii?q?l345mVkBfaa32Zsbcmy3HvNjI0+Be3rjns8BEXsWvgo5VOHqilqCXiBJa3axWK?=
 =?us-ascii?q?I84Dc7CIW9AIfHR4CthqGB3SihEp1XYGBGFk6DEXPye4qYXPcMbTqYItV9nTwc?=
 =?us-ascii?q?SbihV4gh2Am0uw/hy7pnKenU9jcCtZ351th4/OnTlRA09TxpAMWRyWCNT2donm?=
 =?us-ascii?q?wWQz86xrxwoUt4yl2by6h3n+RYFcBP5/NOSgo6NoTTz+pgB9D2WwLOZNGJSFm9?=
 =?us-ascii?q?T9WiADExSM8xwtAUb0Z8HdWikg7M3y6wD7AJkLyLAYQ+8rjA0HjpO8Z913HG2b?=
 =?us-ascii?q?E8gFY8XMtAK3eqhq5l+AjVHI7GjUOZm6GudaQf2S7N8HyOzW6PvEFeTQ5xXr/J?=
 =?us-ascii?q?XXEZZkvKs9v54lnOQKOpCbQiKgFB09KNKrNWat31ilVLXOrsN87AY22vgWuwBQ?=
 =?us-ascii?q?yHxrWXbIX0fWUQxyHdCEkCkwAO8neKLwk+BiG9o23ACDxiD07gY0Tp8eNmsnO0?=
 =?us-ascii?q?Ulc0zx2Wb01mz7e15h8VhfmbS/MP3rIFuD0tqyluEFa6xdLWD9uApwxufKhHZd?=
 =?us-ascii?q?M94VFH1X/WtgBnP5ygKbxiiUAacwhto0zu0BB3AJ1akcc2tHMq0BZyKaWA3Vxb?=
 =?us-ascii?q?czOXw5/xNaPXK2Xo5x+vdrPZ1UvY0NaV/acP9u81q1HivAGvC0oj/G9r09hT03?=
 =?us-ascii?q?uA+JrKCBAeXo72UkYy7xJ6va3VYjEh54PI0n1hKam1siLY1901HuckyxagcM1Z?=
 =?us-ascii?q?MKOLDwLyF8waB86zKO0lgVSpbxQEPPxM+64wJc+pa/yG2KuzNuZ6gD2mlXhH4J?=
 =?us-ascii?q?x60k+U7Sp8S/LH0Iwfw/6F2QuLTTH8g0m7ssD2gIxLeSsdHm6ixif6Ho5RYaty?=
 =?us-ascii?q?cJ0PCWevJc2329p/i4TsW35e6F6sGVcG1NW1dhqValz3xRdQ2lgPoXy7hSu4yC?=
 =?us-ascii?q?R5kjEorqaF3C3C2f/idAcBOmNQQGlijFHsIZW7jtwAXUioaRQpmwWh5Urg26db?=
 =?us-ascii?q?o6F/JXHJQUhUZyj2M31iUqyou7qAecFP8pAosSZQUOimelCVUL39oxgb0yPlAW?=
 =?us-ascii?q?Rewis2dzWrupX/ghx7h3iRLHd1rHrFZ85wwQ3T68DbRf5UxjAGXjV3iSHLBlig?=
 =?us-ascii?q?ONmk5dWVmI3EsuykVWKhV5tTfDLvzYOBsiu7+GJrDQe+n/C1ht3oDww63TXn2N?=
 =?us-ascii?q?ltUCXCtAz8bZXz16SmLeJneVFlBFzm5Mp7AI1+kpYwi4sW2XgVnZiV+XsHkWHu?=
 =?us-ascii?q?MdRUw67+bXwNRSIVzN7R+gTqxEpjLneRzYLjSnqd2tdhZ8W9Ym4O3yI97sNKB7?=
 =?us-ascii?q?2O4L1KgyR1uUa4ohzLYfdmgDgd0/Qu5WUeg+EIvgot0yqcDqoTHUleISzjiRCI?=
 =?us-ascii?q?48qio6VQYWalaaKw21ZmndC9ELGCpRlRWGr+epcnByNx799wMFTR0H3o8YHkec?=
 =?us-ascii?q?LdbdYSth2SjhfBgPJZKJM3lvoWmyVnPXjxsmEiy+4+lRZux421vJCbK2Vx+6K0?=
 =?us-ascii?q?GgVXOSfyZ8MX5zHhl6JentuN0oCrH5VhHCgLXZTyQfKpFjISqeroNwKUHDIgrX?=
 =?us-ascii?q?ebHKLVHRWD50d+s3LPD5erOmmVJHYDyNVtWgKdKFZDgAwOXzU6g505Fh2sxMP7?=
 =?us-ascii?q?a0d0/TQR5l/+qhtRxeNkLRj/UmHDpAi2bjc4UoSQLB1T7gta/UfaLdSe7v5vHy?=
 =?us-ascii?q?Ff5pCgrAuNKnGCZwRVF24JXFaIB0vkPrmo6tnN6OyYBuu4L/vTbrSCs+1eV/GU?=
 =?us-ascii?q?xZ2x1otq5SqDNsKKPnN6Ff00xlJDXWxlG8TegzgPSzIYlyPOb86YpRew4C53rt?=
 =?us-ascii?q?q48PTkRg3v/5aPC6BJPNVr+hC2h7qDNuGKiCZ4LzZYyo0DxXvSxLcD214Sjjlk?=
 =?us-ascii?q?dyOxHrQYqS7NUKXQl7dNAB4GcCxzLtVH7qIm0glJOM7Wkdf11r9+jv4oBFZJT1?=
 =?us-ascii?q?3hmse1ZcMUJ2GxLk/IBEGONL6ePz3E39n3Yb+gSb1XlOhUqxywuTOBH0D/JDiM?=
 =?us-ascii?q?iznpWA6pMexXiCGbPRpeuJyycxp3CGjjSs7mZQO/MNNtkTI2xrg0jGvQNWEAKT?=
 =?us-ascii?q?h8b19NrrqI4CJYmPp/HWlB7ntjLeacmieZ7/PXKpAZsfZwBiR0luRa4Gk1yrdP?=
 =?us-ascii?q?7SFEQuB1lzXWrtJ0v16mleyPmXJbV09KqzBWlMeQpUx4Iqjx6JZNQzDH8QgL4G?=
 =?us-ascii?q?HWDA4F45NmB8fptqQVytHVmK/1KTFN29bV5tcHQc/MJcSYOX4ldxHuHW36FgwA?=
 =?us-ascii?q?GAK6PmHYz2VbnPyI7XCT5swmu5Psn7ISW7RbUxoqDaVJWQxeANUeLcIvDXsfmr?=
 =?us-ascii?q?mBgZtSvXc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AnAAAcfg1ch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUwUBAQsBgVqCESeMcosugiGXPYEkA0cXAQEYEwGHXSI2Bw0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwyCNgyDAgIvAQ0BATcBBQkCPhIDMQEFAQIhEgWDHIICBZp3P?=
 =?us-ascii?q?Iodgh+CdgEBBYJDhFgIEodggxOBHBeBf45/kDyQOwmCJY8fCxhgiQaHVyyIdo9?=
 =?us-ascii?q?nAgQCBAUCBQ8hgSwOgXlNOIMnghsMF38BCIJCinMgMgGBAwEBAYxgAQE?=
X-IPAS-Result: =?us-ascii?q?A0AnAAAcfg1ch0O0hNFkHAEBAQQBAQcEAQGBUwUBAQsBgVq?=
 =?us-ascii?q?CESeMcosugiGXPYEkA0cXAQEYEwGHXSI2Bw0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wyCNgyDAgIvAQ0BATcBBQkCPhIDMQEFAQIhEgWDHIICBZp3PIodgh+CdgEBBYJ?=
 =?us-ascii?q?DhFgIEodggxOBHBeBf45/kDyQOwmCJY8fCxhgiQaHVyyIdo9nAgQCBAUCBQ8hg?=
 =?us-ascii?q?SwOgXlNOIMnghsMF38BCIJCinMgMgGBAwEBAYxgAQE?=
X-IronPort-AV: E=Sophos;i="5.56,336,1539673200"; 
   d="scan'208";a="55182783"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 09 Dec 2018 12:45:14 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726292AbeLIUpL (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 9 Dec 2018 15:45:11 -0500
Received: from mail-it1-f196.google.com ([209.85.166.196]:37299 "EHLO
        mail-it1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726219AbeLIUpK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 9 Dec 2018 15:45:10 -0500
Received: by mail-it1-f196.google.com with SMTP id b5so14912808iti.2
        for <linux-kernel@vger.kernel.org>; Sun, 09 Dec 2018 12:45:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=tycho-ws.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=QNaI3hDAMnUXZFjlHQHpvHuAp7kuC48ucAbx4V8btwc=;
        b=NC7tOk5WhKeOvqzr3cxn9lEQ1e8117UHymSLTKFys18259B7ObIPwrJjJqau2LcZPs
         Mko4AqGTobSiIuXMh0AxUcgvtEU8IeQpOtM6XIMhgIMerHag722VJ6imuPPI/rZwfUYp
         a0ngz5Wp62M2JsonOUaR6cgXNGQ/kiJokuXUTibthbVeK4rJo7BVHPlFFhmWfZItyL/W
         0OrN/00Q9gKuoDlXPnYq24Z9BLGX6mJ5UHcCRl8WEN03b3R21dFp00ZO0Xs9q8jlhODw
         jp2Urr9oHSeB1XmzmSR97Xk4ap88+ZV0EfPdXYQwV1AaR+rTAUj5YGV+c5TcoV3qCJgk
         qHCw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=QNaI3hDAMnUXZFjlHQHpvHuAp7kuC48ucAbx4V8btwc=;
        b=dDDYO/uJ7SubnpVBdsFFgx+YJ8M8te8hBgl9DTTQ8nDbqM0YUliTy0XMvZRG7oZJLb
         nqpJtnNaKNAEeUmiNdEhQg/ireOCoqD1oWGPW9n4nydxZss/ESSGCF2u08YRXGAS6QtV
         2vhpS6ZQnkqiTMQHGBLYTPfZDsxmIi79cyY5NAz4Z7v0UUjCoMDHCnZz5tEzvd6eCUXc
         45LFeuM38POr1V0Zg1RTpJGQGf4cY4B/Q1J5SNX9v7nBGJHsxL2UHe7zpygP05KJepZG
         cOLGcchIK9IHKiQXzeSGfTvNthj69D9rKU9ceuzjeMFznH8EDEkuIbyM1lDtbCKqV4iL
         Go9A==
X-Gm-Message-State: AA+aEWYvmV5AMfsy9yThm/ctGszzRQtgoXzPm1rPeVKzQl1H6FbmEKh2
        MQa9AmtFAgWOZAnbrjRCZ5hywDDSNlU=
X-Google-Smtp-Source: AFSGD/Wpe5dEucVsQv8KJvYs/vlhm3HYWH9HLw0CHQ3mYEO7+yTgbjo+qSBHfN1wX0UBrWcMX7M2TQ==
X-Received: by 2002:a02:95e4:: with SMTP id b91mr8532356jai.15.1544388309320;
        Sun, 09 Dec 2018 12:45:09 -0800 (PST)
Received: from cisco.lan (71-218-133-134.hlrn.qwest.net. [71.218.133.134])
        by smtp.gmail.com with ESMTPSA id 72sm4282606itw.16.2018.12.09.12.45.08
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 09 Dec 2018 12:45:08 -0800 (PST)
From: Tycho Andersen <tycho@tycho.ws>
To: linux-sparse@vger.kernel.org, kernel-hardening@lists.openwall.com
Cc: linux-kernel@vger.kernel.org, Tycho Andersen <tycho@tycho.ws>
Subject: [RFC v1] copy_{to,from}_user(): only inline when !__CHECKER__
Date: Sun,  9 Dec 2018 13:44:49 -0700
Message-Id: <20181209204449.18906-1-tycho@tycho.ws>
X-Mailer: git-send-email 2.19.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

While working on some additional copy_to_user() checks for sparse, I
noticed that sparse's current copy_to_user() checks are not triggered. This
is because copy_to_user() is declared as __always_inline, and sparse
specifically looks for a call instruction to copy_to_user() when it tries
to apply the checks.

A quick fix is to explicitly not inline when __CHECKER__ is defined, so
that sparse will be able to analyze all the copy_{to,from}_user calls.
There may be some refactoring in sparse that we can do to fix this,
although it's not immediately obvious to me how, hence the RFC-ness of this
patch.

Signed-off-by: Tycho Andersen <tycho@tycho.ws>
---
 include/linux/uaccess.h | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/include/linux/uaccess.h b/include/linux/uaccess.h
index efe79c1cdd47..f20a2d173e1f 100644
--- a/include/linux/uaccess.h
+++ b/include/linux/uaccess.h
@@ -140,7 +140,13 @@ extern unsigned long
 _copy_to_user(void __user *, const void *, unsigned long);
 #endif
 
-static __always_inline unsigned long __must_check
+#ifdef __CHECKER__
+#define uaccess_inline __attribute__((__noinline__))
+#else
+#define uaccess_inline __always_inline
+#endif
+
+static uaccess_inline unsigned long __must_check
 copy_from_user(void *to, const void __user *from, unsigned long n)
 {
 	if (likely(check_copy_size(to, n, false)))
@@ -148,7 +154,7 @@ copy_from_user(void *to, const void __user *from, unsigned long n)
 	return n;
 }
 
-static __always_inline unsigned long __must_check
+static uaccess_inline unsigned long __must_check
 copy_to_user(void __user *to, const void *from, unsigned long n)
 {
 	if (likely(check_copy_size(from, n, true)))
-- 
2.19.1

