Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 08:55:54 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 27B1A5805FF;
	Sun,  9 Dec 2018 10:24:36 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Dec 2018 10:24:36 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AHsC1Yh2yLdot4aiAsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segSLPXxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfVwZKPdec4RS3RHUMhfSidNBp2w?=
 =?us-ascii?q?Y5cKA+cHIO1WrZTyp0EWoBW+GweiGe3hxDxPiHD006013OsvERre3AEiBN8CrH?=
 =?us-ascii?q?fZoc/pOKoITey50K/FxijDYfNM3jf97ZDFfA4hoP6QXbJwdtfaxFUpFwzYkFqQ?=
 =?us-ascii?q?s5flMC2T1u8QtGWb8+phWv6vi24gsAxxvjiuydssionOnI4UxEvE+Dx/zY0oJt?=
 =?us-ascii?q?O4UFZ2bcC4HJZUrS2WKoV7Tt04T211uys21qcKtJ+5cSQSypkr2gTTZ+Kaf4WL?=
 =?us-ascii?q?+B7vSeicLDliiH54dr+yiBC/+lW6xOLmTMm7ylNKozJFktbSsnAN0ATe6taISv?=
 =?us-ascii?q?Rj5EetwzWP2B7J6uFCP080kbDXK5k7wr4/jpYTsELDETHqmEjukqOaakEp9vK1?=
 =?us-ascii?q?5+npfLnqvIKQOoxohg3kM6kjmNSzAeEiPQgPW2ib9/681Lrm/UDhRLVKj/s2kr?=
 =?us-ascii?q?TWsZzDJsQUuLS5AwlL3YYn8hq/CDmn0NIGknkdN19FZh2HgJbzO13UI/D3E+2/?=
 =?us-ascii?q?g1Kynzdv3fzGOafhAprVInjZjLjhZap961JbyAcrydBf5pFUBa8bLPP8R0/8r9?=
 =?us-ascii?q?jYDh4/MwypzOfrEtR91oUCWW2RBq+VKr/dsViN5ug3OemDeJcVuCrhK/gi//Pu?=
 =?us-ascii?q?jWU2mV4Bfaaz2psbcnC4Hul8LEWfbnrhmdMBEWYMvgojQ+3mklyCUThPZ3msW6?=
 =?us-ascii?q?Iw/C00CIWjDY3bXICinKSB3DunHp1Rfm1GCFeMHmnye4WHXPcMbiSSIsh6nzwA?=
 =?us-ascii?q?VLihTZIh1B60uA/7zbpnMvTb+ikCuZ3/09h14vXZlQsu+jxsE8Sdz2aNQnlukW?=
 =?us-ascii?q?MTRz8226N/rVZnyliZ06h1mPhYFd1V5/NUXQY2L5/cz+pmC9/sXgLNZMuGSFGj?=
 =?us-ascii?q?Qt++GzE+Usoxw8MSY0Z6A9iijQrM3yywD78RlryEHpo08q3H0nj1JsZ9zWvG1a?=
 =?us-ascii?q?Y7g1knRMtPKXOphqpl+wfPAI7Jll2Tl7y2eqQEwC7N6GCDwHKTs05CTg5/T7/J?=
 =?us-ascii?q?XXAFaUvQttT2+EXCQ7iqCbQkNwtBzdWPKq9Lat3vkFVHS+3vONXYY2KthWiwAQ?=
 =?us-ascii?q?yEya+LbIrvY28dxjnSCFAYkwAP+naLLRUxCT2/o23AFjBuFUjgY0X38eZgrnO2?=
 =?us-ascii?q?VUs0zwCMb0182Lu54B8VhfqAS/wN2rIIojsuqzJxHFylxdLZF8KApxZ9fKVbed?=
 =?us-ascii?q?49/FZH1WfetwxhPpyhL7puhkIEfwRwpUPu0xR3CoNPkcUxqHMqzQxyKb+X0V9b?=
 =?us-ascii?q?djOY24zwNaPTKmXo4B+vbKvW0EnE0NmK4qcP9Og4q1L7sQ6zEkot7Xpm3MdV0n?=
 =?us-ascii?q?eG/ZrKERcdXoj3UkY08Bh6uarXYi0854PSyH1tPrO4sj7E29I1GuQlzgyscMtY?=
 =?us-ascii?q?MKOBDAXyCdEVB9CyKOw2nFikdhIFPP1I+KEoJc+ndvuG17StPOZvhz+miWVH4I?=
 =?us-ascii?q?Zg0kOD7SZ8S+jI34obzPGcxAeISzD8jFK5uMDthY9EfS0SHna4ySX8Ho5RZ7F9?=
 =?us-ascii?q?cpwRCWizJM273NN+iID3W35Z7VKsG0kJ2Mu0dhWMdVz92gtQ2F8ToXymnyu40j?=
 =?us-ascii?q?N1nysorqqZwCzB3eDieAAbNW5MQWlolU3sLpSsj9AGQEioaBAklRuk5Urgx6lX?=
 =?us-ascii?q?vr9/L3TVQUpTeyj2LmdiUra/t7aYYs5P7o8ovjtTUOimfV+aTbv9qQMA0yz/B2?=
 =?us-ascii?q?te2Cw7dzayt5X7hRN6kmGdLHV0rHbDYsF/3xTf5N/dRf5XwDUGQjJ1iT3WBli6?=
 =?us-ascii?q?Itmo8s+Yl5bFsuCiSW2hUodffjXszYOFrCG7/3FlAQWjn/Cvnd3qCQg73jX819?=
 =?us-ascii?q?VwVyXIrRD8b5Lv16S7N+JnY0ZpCEX968p8BoFxjI8wiIsM1ngdg5Wf5WAHnnvr?=
 =?us-ascii?q?MdVHxaL+a2IART0RzN7U+gTl2FBjIWiPx4L2TXidxsphZ9+nYmIZwC497sZKCL?=
 =?us-ascii?q?uK47xAhyd6vl24rQfJa/hngjgd0ecu6GIdg+wRvQotzyadDaoIEUhWIyPsjAiI?=
 =?us-ascii?q?4M6krKpMemmva7ew2VF6ndCgCrGCvw5dVGz4epckAS9/8MF/PEjQ333074HuYM?=
 =?us-ascii?q?PQYs4Lth2IjxfAiPBYKI42lvoPnyZmOHjyvXs4y+4glhxu3Iq3vIyGK2Vr4aK4?=
 =?us-ascii?q?DQRUNjzzZ8MP5D7tibxSkdqR34CqBp9hACkEXIP0TfK0FzIfre/oOByJED04t3?=
 =?us-ascii?q?eXA77fHRKE5UdirnLPFY2rNn6NKHkYy9ViWAeSJEhFjA8IWzU6m4YzFhq2y8z5?=
 =?us-ascii?q?bEd5+jcR60b6qhRWz+JnKQL/Xn3DpAuyaTc0VZufLAdQ7g5Y/EfYKsie7uN1Hy?=
 =?us-ascii?q?FF8Zyttg2NKmqHZwtWCWEFQFCLB1fmPrO2/9nP7/CYBvaiL/vJebiPqeteV+qR?=
 =?us-ascii?q?xZKyyIRm+SyANt6IPnlkAP02wU5DXXF/G8TElDQDUS0XlyTRb8GFoBew4DF4rs?=
 =?us-ascii?q?e68P7zQgLg+ZOPC6dOMdVo4x22gbmMN++ThCZ6KDZUzJAMxWXPyLgQwlESkTxu?=
 =?us-ascii?q?dyK2HLQEtC7NSr/Qm6BNAx4abSNzKNVH76Ym0gZRPs7bj8v/1qRkgf4tF1dFSV?=
 =?us-ascii?q?vhl9mzaswXOG69Lk3IBUaROLSCJD3G2MX3YaK6Sb1Ng+RYrRywuTCHE0D9OjSP?=
 =?us-ascii?q?jSXmVxeqMetUliGUIAReuJ2hchZqEWXjUNPmahihPNBrlzE53b00iW3MNWMHNT?=
 =?us-ascii?q?h8ckVNrqCf7C9Cg/V/HXBB4WRhLeWehymZ6OzYII4MsfR3GiR0i/5a4HMixrpV?=
 =?us-ascii?q?9i5EQvl1mCrUrtF2olCmkvOAyjxoUBdVrjZLhYSLvVhtOKnD95lAX2rE8wwJ7W?=
 =?us-ascii?q?mKFxsKoN5lWZXTvPVzx9XU3In0LzQKp9HZ8NAXAM/XAMmHKn0kMAfsXjnOA11W?=
 =?us-ascii?q?YySsMDTjlkddl7m78HGYtIM3rNC4hIsFSrhzSE0+FvRcFV8zT49KG4t+Qj5xye?=
 =?us-ascii?q?3Tt8UP/3fr6UmJSQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AWAAC3XA1ch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBAYNqJ4wTX4svgiGXPYEkA0wSAQEYEwGHXSI0CQ0BAwEBAQEBAQI?=
 =?us-ascii?q?BEwEBAQoLCQgpIwxCAQ4BgWQkgmMDAwECLwENAQE3AQUJAQE+EgMxAQUBAhoGE?=
 =?us-ascii?q?wWDHIICBZpaPIodgh+CdgEBBYcdCBKHYIMTgRwXgX+DbosRiReCFIURkDsJgiW?=
 =?us-ascii?q?PHwsYYIkGh1eZCQIEAgQFAgUPIYElgg5NOIMnghsMF4NKinMgMgGBAwEBAYZDh?=
 =?us-ascii?q?h0BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AWAAC3XA1ch0O0hNFjHAEBAQQBAQcEAQGBUQcBAQsBAYN?=
 =?us-ascii?q?qJ4wTX4svgiGXPYEkA0wSAQEYEwGHXSI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgpI?=
 =?us-ascii?q?wxCAQ4BgWQkgmMDAwECLwENAQE3AQUJAQE+EgMxAQUBAhoGEwWDHIICBZpaPIo?=
 =?us-ascii?q?dgh+CdgEBBYcdCBKHYIMTgRwXgX+DbosRiReCFIURkDsJgiWPHwsYYIkGh1eZC?=
 =?us-ascii?q?QIEAgQFAgUPIYElgg5NOIMnghsMF4NKinMgMgGBAwEBAYZDhh0BAQ?=
X-IronPort-AV: E=Sophos;i="5.56,335,1539673200"; 
   d="scan'208";a="55602228"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 09 Dec 2018 10:24:34 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726268AbeLISYb (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 9 Dec 2018 13:24:31 -0500
Received: from mail-it1-f195.google.com ([209.85.166.195]:55403 "EHLO
        mail-it1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726243AbeLISY2 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 9 Dec 2018 13:24:28 -0500
Received: by mail-it1-f195.google.com with SMTP id o19so14187842itg.5
        for <linux-kernel@vger.kernel.org>; Sun, 09 Dec 2018 10:24:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=tycho-ws.20150623.gappssmtp.com; s=20150623;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=fw0iadnZoE1rpR9EWful/wBtVOwH2siiPuGARnKBIfY=;
        b=imt7hWLve5ATBy9O5xDxc/cCYO20emdusQniNm46uIkiGMRaLLKUTj1RYeJTCbyBeh
         xcZhNvg2VfL8yGtJzVN56Ku0Q7JwL/5PShXC7Nyp0tb2gUjnSAo70eas73+YTPn+xgAK
         FzX0LGf3hYI8PxoMOBhg1We0LZh7UXnTIAcVN6rUlK+lfPZnbsa0nZQE6ir3FbeExsEP
         LrERMHblCB+zyCdulIJoujr0UCOIsPFfj/OF7RQIA7uQS17alqlBHsncGTq+xMB0m6Aa
         RDey2BrBIaZIchqSo65rUHWi2DSJzX+ijhlRmQcP0uj4J5l+5ZunZVoTHJS/J4bcCeRU
         1xZg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=fw0iadnZoE1rpR9EWful/wBtVOwH2siiPuGARnKBIfY=;
        b=bMzrU5sNn+UUP2+dGUaa03Sm6Vl0LBR9Gbc4YuQ1hThYBZorJ/HBq88ieMCoUHkMlz
         jcpq+kT0q/Oj+3Pp/vqZUmEvZG8p3+OrNk886876sS2C93mq3hzfimfloXJc3rkmQ0t2
         24YbmZgsIquC3VUQ8ikhVGTYZEkaGXv2LdDSrLCTgOsSbsGAVD53OCyy+5eECCeTJSVv
         l8BQcYpPIhGmiE03VCkFm9bZ3zIfkWl7B2QfHMfLHjlXMl7tzOYghaeLhWl/7KZVPL0d
         jKSsVJ4nl97uKk+v7baKHVXDtU0RBKkdBLoJOqq7Qf/1VhSbNves1gxiT1Uhig1gyfF/
         OntA==
X-Gm-Message-State: AA+aEWYcEEGYzBUvvOKvvDXEOh0vhafMtoGE6b8YmLdzhEhN4UL1OFmC
        ngyCKYtQG5887kln8qWKBrPOsA==
X-Google-Smtp-Source: AFSGD/XNCwcmYGtvGtD5pL97D0XYClSe9qMi4nQVrc845xxLSQvYu2T+WUq0jVUmvQJi9D3uJc9mgg==
X-Received: by 2002:a02:1509:: with SMTP id j9mr9331726jad.5.1544379866835;
        Sun, 09 Dec 2018 10:24:26 -0800 (PST)
Received: from cisco.lan (71-218-133-134.hlrn.qwest.net. [71.218.133.134])
        by smtp.gmail.com with ESMTPSA id l25sm3270631ioj.68.2018.12.09.10.24.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 09 Dec 2018 10:24:26 -0800 (PST)
From: Tycho Andersen <tycho@tycho.ws>
To: Kees Cook <keescook@chromium.org>
Cc: Andy Lutomirski <luto@amacapital.net>,
        Oleg Nesterov <oleg@redhat.com>,
        "Eric W . Biederman" <ebiederm@xmission.com>,
        "Serge E . Hallyn" <serge@hallyn.com>,
        Christian Brauner <christian@brauner.io>,
        Tyler Hicks <tyhicks@canonical.com>,
        Akihiro Suda <suda.akihiro@lab.ntt.co.jp>,
        Aleksa Sarai <asarai@suse.de>, Jann Horn <jannh@google.com>,
        linux-kernel@vger.kernel.org,
        containers@lists.linux-foundation.org, linux-api@vger.kernel.org,
        Tycho Andersen <tycho@tycho.ws>
Subject: [PATCH v10 2/4] seccomp: switch system call argument type to void *
Date: Sun,  9 Dec 2018 11:24:12 -0700
Message-Id: <20181209182414.30862-3-tycho@tycho.ws>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181209182414.30862-1-tycho@tycho.ws>
References: <20181209182414.30862-1-tycho@tycho.ws>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The const qualifier causes problems for any code that wants to write to the
third argument of the seccomp syscall, as we will do in a future patch in
this series.

The third argument to the seccomp syscall is documented as void *, so
rather than just dropping the const, let's switch everything to use void *
as well.

I believe this is safe because of 1. the documentation above, 2. there's no
real type information exported about syscalls anywhere besides the man
pages.

Signed-off-by: Tycho Andersen <tycho@tycho.ws>
CC: Kees Cook <keescook@chromium.org>
CC: Andy Lutomirski <luto@amacapital.net>
CC: Oleg Nesterov <oleg@redhat.com>
CC: Eric W. Biederman <ebiederm@xmission.com>
CC: "Serge E. Hallyn" <serge@hallyn.com>
Acked-by: Serge Hallyn <serge@hallyn.com>
CC: Christian Brauner <christian@brauner.io>
CC: Tyler Hicks <tyhicks@canonical.com>
CC: Akihiro Suda <suda.akihiro@lab.ntt.co.jp>
---
v10: change type in include/linux/syscalls.h too to avoid compilation error
     in the !CONFIG_ARCH_HAS_SYSCALL_WRAPPER case
---
 include/linux/seccomp.h  | 2 +-
 include/linux/syscalls.h | 2 +-
 kernel/seccomp.c         | 8 ++++----
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/include/linux/seccomp.h b/include/linux/seccomp.h
index e5320f6c8654..b5103c019cf4 100644
--- a/include/linux/seccomp.h
+++ b/include/linux/seccomp.h
@@ -43,7 +43,7 @@ extern void secure_computing_strict(int this_syscall);
 #endif
 
 extern long prctl_get_seccomp(void);
-extern long prctl_set_seccomp(unsigned long, char __user *);
+extern long prctl_set_seccomp(unsigned long, void __user *);
 
 static inline int seccomp_mode(struct seccomp *s)
 {
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 2ac3d13a915b..a60694fb0f58 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -879,7 +879,7 @@ asmlinkage long sys_renameat2(int olddfd, const char __user *oldname,
 			      int newdfd, const char __user *newname,
 			      unsigned int flags);
 asmlinkage long sys_seccomp(unsigned int op, unsigned int flags,
-			    const char __user *uargs);
+			    void __user *uargs);
 asmlinkage long sys_getrandom(char __user *buf, size_t count,
 			      unsigned int flags);
 asmlinkage long sys_memfd_create(const char __user *uname_ptr, unsigned int flags);
diff --git a/kernel/seccomp.c b/kernel/seccomp.c
index 96afc32e041d..393e029f778a 100644
--- a/kernel/seccomp.c
+++ b/kernel/seccomp.c
@@ -924,7 +924,7 @@ static long seccomp_get_action_avail(const char __user *uaction)
 
 /* Common entry point for both prctl and syscall. */
 static long do_seccomp(unsigned int op, unsigned int flags,
-		       const char __user *uargs)
+		       void __user *uargs)
 {
 	switch (op) {
 	case SECCOMP_SET_MODE_STRICT:
@@ -944,7 +944,7 @@ static long do_seccomp(unsigned int op, unsigned int flags,
 }
 
 SYSCALL_DEFINE3(seccomp, unsigned int, op, unsigned int, flags,
-			 const char __user *, uargs)
+			 void __user *, uargs)
 {
 	return do_seccomp(op, flags, uargs);
 }
@@ -956,10 +956,10 @@ SYSCALL_DEFINE3(seccomp, unsigned int, op, unsigned int, flags,
  *
  * Returns 0 on success or -EINVAL on failure.
  */
-long prctl_set_seccomp(unsigned long seccomp_mode, char __user *filter)
+long prctl_set_seccomp(unsigned long seccomp_mode, void __user *filter)
 {
 	unsigned int op;
-	char __user *uargs;
+	void __user *uargs;
 
 	switch (seccomp_mode) {
 	case SECCOMP_MODE_STRICT:
-- 
2.19.1

