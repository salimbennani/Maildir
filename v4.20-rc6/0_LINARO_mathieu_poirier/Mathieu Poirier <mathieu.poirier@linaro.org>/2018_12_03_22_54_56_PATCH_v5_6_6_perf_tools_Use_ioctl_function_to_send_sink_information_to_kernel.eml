Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 04 Dec 2018 08:59:04 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id A1CF4580375;
	Mon,  3 Dec 2018 14:58:23 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga004-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 14:58:22 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AwP1EoxNeUf3qk91FO1Ql6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj9ocbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/nzZhMJzi6xUohyhpwdnw4PWe4yZKOZyc7nBcd4AWWZNQsBcXDFBDIOm?=
 =?us-ascii?q?aIsPCvIMM+FCoInhp1sOrAWxBRSxD+31zT9Ih2X23awk3OQ7DArL2wkgEMgSsH?=
 =?us-ascii?q?TUrdX6KroSXfqtzKnPzDXDdfJW1inn6IXTdhAhoPeMUqhqccrW00UvEBnFjlqJ?=
 =?us-ascii?q?pIHjIjib1fwNvnCF4+Z8Ue+jkXMrpg9vrjS128shiZXFipgUx13G7Sl0wYU4Kc?=
 =?us-ascii?q?elREN0Y9OoCphduzuEO4Z2Tc4vRXxjtjwgxb0co5G7eTAHyJQ5yB7bbPyKa5aI?=
 =?us-ascii?q?4h39W+aLOzt4h2xqeKi5hxms9Uis0Or8VtO70FpSrypFlMfDtmwV2hDN9sSKTu?=
 =?us-ascii?q?Fx8lqv1DqRzQzf9+JJLVwumafaKZMt2rswmYASsUTHEC/2gkL2jKqOe0Ug++io?=
 =?us-ascii?q?7fnnY7r/qp+fKYB0kAf+PboqmsCmBuQ5PA4OUHaB+emnyr3j8lP2QK9Qgv01jK?=
 =?us-ascii?q?bZqpbaKtofpqKjBA9VyIkj5w6lDzi6yNQYgWUHLFVddRKDjojpOE/BLOr3DPei?=
 =?us-ascii?q?mFmslDZrx/bbPrzuGJnNL37DkKv/crZ58UJT1A0zzdVH7ZJOFr4BOO7zWlP2tN?=
 =?us-ascii?q?HADh82KQ20w/r9B9V6zI8eWX+PDbWfMKPdqlKI4uMvI++RZI4aojr9Kv4l5+Lw?=
 =?us-ascii?q?gn89g1MSYa6p3Z4PYnCiAvtmO1mZYWbrgtoZE2cKuRQxQPbpiF2FVz5TYXGyUr?=
 =?us-ascii?q?k45jE6DoKmEIjCSpqsgLyHwCe0AJlWanpaBVCLFHfib5+EVOsUaCKOPs9hlSQJ?=
 =?us-ascii?q?WqK6S48h0hGutxX2y6B9IerW4SAYsZPj1N5o5+zcjx0y9Dp0D9iD3GGJVW17gm?=
 =?us-ascii?q?QIRzou1qBlvUN90kuD0bR/g/FAFtxc/fVJXh0+NZ7d1eN6Dd/yVxnFfteITlam?=
 =?us-ascii?q?X9qnDSswTtI3398BfUJ9F8++gRDE2iqgG6UVmKCTBJwo7qLc2GD8KNtnxHbYyq?=
 =?us-ascii?q?YtlVkmTdFJNW29mKF/8Q/fB4rKk0Wck6anbqAc3C/L9GeewmuCpkBYUAhsUarb?=
 =?us-ascii?q?WXATfFfZrdP85knaVb+hFawnMhddyc6FMqZFd8fmjUtYS/v5ONTReWSxm3yuCh?=
 =?us-ascii?q?aO3b6MaIvqe2MA3CTSEkQEkgYT/WqYOgg6HCuuv2XeDDl2H1L1f0zs6fV+qG+8?=
 =?us-ascii?q?TkIs0wGKbkhh172p+h4Vhf2QUe8T0qgDuCc7rzV0HVC9393NBtqEpgpherhcYN?=
 =?us-ascii?q?wn7FdG02LZqxJyPpi6I69+gV4edhx9v1ny2BVvFoVAjc8qoWswwwp2N62Z301O?=
 =?us-ascii?q?djOC0Z/rJ73YN3P9/Basa67RxFHTy9KW+qYJ6PQlpFTvpgCpFkw+83p519lZyW?=
 =?us-ascii?q?eT5pLPDAAKS5L+Tl439wRmp7HdeiQ8557U2WdwPqWusz7C28gmBO0qyhu7e9df?=
 =?us-ascii?q?MaWEFBL9EsEABsiuLvAqlEatbh4eIO9S86s0Ndu8d/SawK6rIPpgnDW+gGRd4Y?=
 =?us-ascii?q?ByzliD9zBhRe7PxZoFxe+X3hGGVzvlkFiuqMT3lp1aajEIGWq/zzPpBIpQZq10?=
 =?us-ascii?q?YIYKBn2iI8yxxtVimZHtX2RU+0KkB1MDwMWpYwadb0Th3Q1M0kQauXymmSqiwz?=
 =?us-ascii?q?10iT0ptbef3CrVzuTmdRoHPHNLRWZ4gVftJ4i0k84VXEyyYwc1kxul4F7wx7JH?=
 =?us-ascii?q?q6RnM2nTXUBIcjD0L254SKuwtbmCY8lV5JMzqypXU+e8YVGcSrHjpRsXyCfjH2?=
 =?us-ascii?q?pYxDAmeDCmoJT5nxpmiG2DKHZ/tmbWecZ1xR3H/tzTWeZR3iYaRCl/kTTWBkKz?=
 =?us-ascii?q?P96z8dWWlpfDtPuzV2agVp1VbCnqwpmMtCq95W12HxK/m+q/lcHgEQg/ySX7zc?=
 =?us-ascii?q?VlVT3UrBbgZYnmz6e6PvhmfkVyBF/89tB1GodxkoYrgJEQ2H4ahoia/HYdkGfz?=
 =?us-ascii?q?N8lb1rz6bHYXWTELxNvV6hD/2EJ/NnKJ2575VnKFz8tkZtm6YXkZ1jgz7s9UE6?=
 =?us-ascii?q?eU8KJLnTFurVWmtwLRbuNwnjMcyfso9X4bjPsFuAsrziWBHL8SGVNUMjDrlxSN?=
 =?us-ascii?q?99q+trlYZH6zcbis00pzhcyhDLaHog1GWXf2YJEiHTJr7sVkMVLBy3nz6oDieN?=
 =?us-ascii?q?nNYtMfrByUkxHcj+dLLJI9jOYFhS1iOWjlp30q1/Y7jQBy3ZG9pIWIMH9i/KW9?=
 =?us-ascii?q?Ah5FLDH1Y94T9yrpjaZfmMaWwo+uEo9gGjUNQJvnU/aoHCgOuvTgMgaECCc8pW?=
 =?us-ascii?q?uDGbrDAQ+f719rr3DVHJCuKX6XP2MVzcl4SBmeOUxfgx0UXDMgkZ4iDQ2qwM3h?=
 =?us-ascii?q?cEFk5jEe/FL4qx1Myv52OBn7SGvQuACoajIsQpiFMBVW9h1C51vSMcGG7uNzGD?=
 =?us-ascii?q?xY/oS8rAOXLGyXfR9IDWYPWkyLHF3jOriu5d/d8+mXHOa+Lv3OYamQpuxaTfuH?=
 =?us-ascii?q?2ZWv0o5+9TaWKsqPJmViD+E82kdbXXB2BcXZmzYMSywWjS7NbNSbpBCz+iJptM?=
 =?us-ascii?q?C/7e/rVRnr5YuODbtSLNpu9wq3gaeFK+6fmiJ5JSxE2ZMLwH/C0KIf00IKiyFy?=
 =?us-ascii?q?azmtFqwNujTQTK3LgK9YER4aZzl3NMtJ9K882ghNOcjGitL6zLJ4j/g1C0tbWl?=
 =?us-ascii?q?zlgM2mecsKI2SlPlPdGEmLLKiGJSHMw8zvfaO8SLhQgP9IuBGqpTmbE1HsPjKY?=
 =?us-ascii?q?mjntVhCvN/xMjS6BMBxfvoG9bghiCWz5QN36bR27Ncd9jScqzr0smnPKKWkcPC?=
 =?us-ascii?q?B8ckxXqL2Q6CJYgvNnFG1A7npqN++EmymC4uncK5YWt+ZrAytum+Jb5nQ616Va?=
 =?us-ascii?q?7CVeSPNpnyvSq40mn1bzm+KKxxJkXQBIpzINg5iE+Q16NLnU7ItoWHDK5hsB4G?=
 =?us-ascii?q?ycTRMQqJ8tBcfitKNQ4tzOkr/jJjBf9d7d4cobAY7TMs3UHmAmNE/MESLUDQYY?=
 =?us-ascii?q?BQasNHveilYVxPSb6n2Uo4V8sp/tgpsDUJdfVVo8DPRcDV5qSo9RaKxrVy8pxO?=
 =?us-ascii?q?bIxPUD4mCz+UHc?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BOAABztAVch0O0hNFjHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgVqCESeMcI1Pl0iBXxIBARgTAYgJIjcGDQEDAQEBAQEBAgETAQE?=
 =?us-ascii?q?BCgsJCCkjDII2IoJlAwMBAiQZAQE3AQUJAQE+EgMxAQUBHAcSBYJRS4ICBZpGP?=
 =?us-ascii?q?IodgWwzgnYBAQWHKAgSh1uDE4EcgVc/gRGCZIRzhhePMHyQFgcCgh8EjxkCFoM?=
 =?us-ascii?q?8hh+EWoJxiQSPQgIEAgkCBQ8hgTuBdzMaMIMvghuJAYVfIDKBBQEBiloBAQ?=
X-IPAS-Result: =?us-ascii?q?A0BOAABztAVch0O0hNFjHAEBAQQBAQcEAQGBVAQBAQsBgVq?=
 =?us-ascii?q?CESeMcI1Pl0iBXxIBARgTAYgJIjcGDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2I?=
 =?us-ascii?q?oJlAwMBAiQZAQE3AQUJAQE+EgMxAQUBHAcSBYJRS4ICBZpGPIodgWwzgnYBAQW?=
 =?us-ascii?q?HKAgSh1uDE4EcgVc/gRGCZIRzhhePMHyQFgcCgh8EjxkCFoM8hh+EWoJxiQSPQ?=
 =?us-ascii?q?gIEAgkCBQ8hgTuBdzMaMIMvghuJAYVfIDKBBQEBiloBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,312,1539673200"; 
   d="scan'208";a="65135055"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 03 Dec 2018 14:58:21 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726166AbeLCWzT (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Mon, 3 Dec 2018 17:55:19 -0500
Received: from mail-pf1-f194.google.com ([209.85.210.194]:41588 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726120AbeLCWzK (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 3 Dec 2018 17:55:10 -0500
Received: by mail-pf1-f194.google.com with SMTP id b7so7128616pfi.8
        for <linux-kernel@vger.kernel.org>; Mon, 03 Dec 2018 14:55:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=3vpJNza9or+DqAPy2Ouz+IaFpD2uwWIrDBJByTZlu+A=;
        b=dKui9vrQfBjN7EW8N937VokmclZqajH1JGzyoa16yHvUwKfx6Al5KjESQQs9Ro9+2P
         0u5Q5IECHU3Oe8W2VZ3NlpD5cVMTOuoRtXXB7xacHUkJ7Xd0eM1m5cTJtRoS5bQexVb3
         uDZslqp9Y9n/UVkr+tYme+8Uq+hgQNAolvrcU=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=3vpJNza9or+DqAPy2Ouz+IaFpD2uwWIrDBJByTZlu+A=;
        b=VQFl8ew+J45Yr30gOwJolVpktdyi7+INqu0Tq6z5uEvSj5fWLz4raZr8QuGt9jotV1
         NKkRKyPNmqsBBRcuYC8vqN3MIZsuD1t3fIHfgC9FwkxkxPtayYaNiHKkTragBsFRKCx4
         D+iN6toBgmXqw9E3d+BppE0Yk3RoHpCX+oACP0QEYtj8zLbQ0A07CLKkt/ueJAhY4BX/
         TyHaFeUbi8Guvp2CnrVAzg9xxRqAQO25G64OxIqy1YafS/Dv/KLIKhh6Ea/1hCmvWaX4
         aV3Ncv/8z2o1/SzY5+dDvNS228dPj2CHNYa8xXCjlJ5lzo2rc7Cns46WZ1nbCNvKdhGc
         tpNQ==
X-Gm-Message-State: AA+aEWZ4AytAPHQy7hVXjZ6hhiDEYAtGZz9WiasbiCOfCJGf0EPud77y
        gwE/KSJTMqUtkK4VuWLLsO9LSrQC5+c=
X-Google-Smtp-Source: AFSGD/WCfhAVS3Rr85zZIWf8gp40TUyaehMWbcaUuyPjoNpPjcEmmex7H1rJs/U2prA0VSMkg5r5Vw==
X-Received: by 2002:a63:e754:: with SMTP id j20mr14307610pgk.228.1543877709046;
        Mon, 03 Dec 2018 14:55:09 -0800 (PST)
Received: from xps15.cg.shawcable.net (S0106002369de4dac.cg.shawcable.net. [68.147.8.254])
        by smtp.gmail.com with ESMTPSA id v9sm20933057pfg.144.2018.12.03.14.55.07
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Mon, 03 Dec 2018 14:55:08 -0800 (PST)
From: Mathieu Poirier <mathieu.poirier@linaro.org>
To: acme@kernel.org, peterz@infradead.org, gregkh@linuxfoundation.org
Cc: mingo@redhat.com, tglx@linutronix.de,
        alexander.shishkin@linux.intel.com, schwidefsky@de.ibm.com,
        heiko.carstens@de.ibm.com, will.deacon@arm.com,
        mark.rutland@arm.com, jolsa@redhat.com, namhyung@kernel.org,
        adrian.hunter@intel.com, ast@kernel.org, hpa@zytor.com,
        suzuki.poulosi@arm.com, linux-s390@vger.kernel.org,
        linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org
Subject: [PATCH v5 6/6] perf tools: Use ioctl function to send sink information to kernel
Date: Mon,  3 Dec 2018 15:54:56 -0700
Message-Id: <1543877696-17174-7-git-send-email-mathieu.poirier@linaro.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1543877696-17174-1-git-send-email-mathieu.poirier@linaro.org>
References: <1543877696-17174-1-git-send-email-mathieu.poirier@linaro.org>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

The communication of sink information for a trace session doesn't work when
more than one CPU is involved in the scenario due to the static nature of
sysfs.  As such communicate the sink information to each event by using the
an ioctl command.  The information sent to the kernel is the component's HW
address, which is guaranteed to be unique on the CoreSight bus and known to
the kernel.

Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
---
 tools/perf/arch/arm/util/cs-etm.c | 66 +++++++++++++++++++++++++++++++++++++--
 tools/perf/util/evsel.c           |  6 ++++
 tools/perf/util/evsel.h           |  1 +
 3 files changed, 71 insertions(+), 2 deletions(-)

diff --git a/tools/perf/arch/arm/util/cs-etm.c b/tools/perf/arch/arm/util/cs-etm.c
index d8081c2e6d44..41e394806707 100644
--- a/tools/perf/arch/arm/util/cs-etm.c
+++ b/tools/perf/arch/arm/util/cs-etm.c
@@ -22,11 +22,13 @@
 #include "../../util/thread_map.h"
 #include "../../util/cs-etm.h"
 
+#include <stdio.h>
 #include <stdlib.h>
 #include <sys/stat.h>
 
 #define ENABLE_SINK_MAX	128
 #define CS_BUS_DEVICE_PATH "/bus/coresight/devices/"
+#define AMBA_BUS_DEVICE_PATH "/bus/amba/devices/"
 
 struct cs_etm_recording {
 	struct auxtrace_record	itr;
@@ -619,6 +621,41 @@ static FILE *cs_device__open_file(const char *name)
 
 }
 
+static int cs_etm_check_drv_config_term(const char *name, u64 *addr)
+{
+	char path[PATH_MAX];
+	const char *sysfs;
+	int err;
+	FILE *file;
+	u64 start;
+
+	/* CS devices are all found under sysFS */
+	sysfs = sysfs__mountpoint();
+	if (!sysfs)
+		return -EINVAL;
+
+	/* The resource file contains the HW start address of this component */
+	snprintf(path, PATH_MAX,
+		 "%s" AMBA_BUS_DEVICE_PATH "%s" "/resource", sysfs, name);
+
+	file = fopen(path, "r");
+	if (!file) {
+		pr_debug("Unable to open file: %s\n", path);
+		return -EINVAL;
+	}
+
+	/* We just need the first value */
+	err = fscanf(file, "%016lx", &start);
+	if (err != 1) {
+		pr_debug("Unable to get resource start value for: %s\n", path);
+		return -EINVAL;
+	}
+
+	*addr = start;
+
+	return 0;
+}
+
 static int __printf(2, 3) cs_device__print_file(const char *name, const char *fmt, ...)
 {
 	va_list args;
@@ -635,7 +672,7 @@ static int __printf(2, 3) cs_device__print_file(const char *name, const char *fm
 	return ret;
 }
 
-static int cs_etm_set_drv_config_term(struct perf_evsel_config_term *term)
+static int cs_etm_set_drv_config_term_sysfs(struct perf_evsel_config_term *term)
 {
 	int ret;
 	char enable_sink[ENABLE_SINK_MAX];
@@ -650,6 +687,21 @@ static int cs_etm_set_drv_config_term(struct perf_evsel_config_term *term)
 	return 0;
 }
 
+static int cs_etm_set_drv_config_term_ioctl(struct perf_evsel *evsel,
+					    struct perf_evsel_config_term *term)
+{
+	u64 addr;
+	int ret;
+
+	/* First check the input */
+	ret = cs_etm_check_drv_config_term(term->val.drv_cfg, &addr);
+	if (ret)
+		return ret;
+
+	/* All good, apply configuration */
+	return perf_evsel__apply_drv_config(evsel, addr);
+}
+
 int cs_etm_set_drv_config(struct perf_evsel *evsel,
 			  struct perf_evsel_config_term **err_term)
 {
@@ -660,7 +712,17 @@ int cs_etm_set_drv_config(struct perf_evsel *evsel,
 		if (term->type != PERF_EVSEL__CONFIG_TERM_DRV_CFG)
 			continue;
 
-		err = cs_etm_set_drv_config_term(term);
+		/* First try the new interface, i.e ioctl() */
+		err = cs_etm_set_drv_config_term_ioctl(evsel, term);
+		if (!err)
+			continue;
+
+		/*
+		 * Something went wrong, we are probably working with an older
+		 * kernel.  As such use the sysFS interface, which will only
+		 * work for per-thread scenarios.
+		 */
+		err = cs_etm_set_drv_config_term_sysfs(term);
 		if (err) {
 			*err_term = term;
 			break;
diff --git a/tools/perf/util/evsel.c b/tools/perf/util/evsel.c
index 6d187059a373..8aa2b79c3314 100644
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@ -1195,6 +1195,12 @@ static int perf_evsel__append_filter(struct perf_evsel *evsel,
 	return -1;
 }
 
+int perf_evsel__apply_drv_config(struct perf_evsel *evsel, u64 addr)
+{
+	return perf_evsel__run_ioctl(evsel,
+				     PERF_EVENT_IOC_SET_DRV_CONFIG, &addr);
+}
+
 int perf_evsel__append_tp_filter(struct perf_evsel *evsel, const char *filter)
 {
 	return perf_evsel__append_filter(evsel, "(%s) && (%s)", filter);
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h
index 3147ca76c6fc..6be7560bc986 100644
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@ -276,6 +276,7 @@ int perf_evsel__append_tp_filter(struct perf_evsel *evsel, const char *filter);
 int perf_evsel__append_addr_filter(struct perf_evsel *evsel,
 				   const char *filter);
 int perf_evsel__apply_filter(struct perf_evsel *evsel, const char *filter);
+int perf_evsel__apply_drv_config(struct perf_evsel *evsel, u64 addr);
 int perf_evsel__enable(struct perf_evsel *evsel);
 int perf_evsel__disable(struct perf_evsel *evsel);
 
-- 
2.7.4

