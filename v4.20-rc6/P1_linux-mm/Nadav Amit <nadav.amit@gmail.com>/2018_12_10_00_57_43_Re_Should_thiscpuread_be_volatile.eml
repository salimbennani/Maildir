Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 09:18:11 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 8167E5804A8;
	Sun,  9 Dec 2018 16:57:53 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Dec 2018 16:57:53 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AK1QqkxHCX2BWKDnYrTCSmZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ75o8S+bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSyNODZ6y?=
 =?us-ascii?q?YYsNAOQPMuhWrIf9qUUJoxulHQmhBvjiyiNRhn/zwaE60/gtHAPA0Qc9H9wOqn?=
 =?us-ascii?q?PUrNDtOakKS++60bPHzSveZP5K3Df96ZTIeQ0mrPGKR71/bNDeyVc1Gwzfi1WQ?=
 =?us-ascii?q?qJDlMiia1uQIqWeb7u5gWfizhG4grgF8uz6izdoihInOg4Ia0FHE9SNhzYYwP9?=
 =?us-ascii?q?K4UlJ0bcSlEJtWuSGaMI17Sd4hTWFwoCs21KEKtJqhcCQXxpkr2QTTZ+GEfoSU?=
 =?us-ascii?q?+B7uVeScLS9miH55e7+znRK//VW6xuHiTMW4zVBHpTdfnNbWrHACzRnT59CHSv?=
 =?us-ascii?q?Rj+keh3i6C1x7c6u5aO0A4j6nbJIA7wr42iJUTtV7PHijsmEX5lKOWd0Mk9fa0?=
 =?us-ascii?q?6+n/fLnqupuRO5VphgzwLKgigNGzDOckPgQUXmWW+/yw1Lj58k34RLVKgOc2kq?=
 =?us-ascii?q?7csJ3CIcQbp6i5AxJa04o66BawES2m0NIGknkDNV5FfxyGj473NFHUO/34E/i/?=
 =?us-ascii?q?jEq2kDtxxPDJIKfhApPTIXjHirvheqx960FExAop0d9f/45UCq0GIP/rXk/xtd?=
 =?us-ascii?q?/YAQEjPw273ubqE9F91oIYWWKSDa6VKqLSsVmU5u0xJ+mAfpMauDH4K/I9/f7h?=
 =?us-ascii?q?kWc5mUMBfamuxZYXaGq3HvV6I0qDZnrgmNcBEXoQsQo4Q+znk1mCUT9VZ3avUK?=
 =?us-ascii?q?Mw/DA7CIS6DYjdQoChmqCO3CC+HpdOfGBJFkiMEWv0d4WDQ/oMaiWSLdF7njwH?=
 =?us-ascii?q?UrihTYkh1Ra1uQ/+yrpnKPfU+yICuZLi0th1+/PclRUo+TNoCMSd1nmHT3tokW?=
 =?us-ascii?q?MQWz82wKd/rFRnxVeY0ah4hP9YGcZJ5/xTUAc3Lprcz+18C9DvVQPNZNaJSFC6?=
 =?us-ascii?q?Qtq4BTE9VM4+w9gLY0xlAdWtkgjD3za2A78Sj7GLB4Y78qTG03j1JsZy0XDG1K?=
 =?us-ascii?q?Y6glkiQ8tPM3Cmh6Fl+wjSAY7Jj1uWl6KweasA2y7N8X+JzXCSs0FATA5wTaLF?=
 =?us-ascii?q?UGgCaUTMs9T2+FnOT7+0BrQhKQtO18iCJqxOat3qiFVGQOzuONDfY2K3hmexCg?=
 =?us-ascii?q?yExrKKbIr2ZWod2D/RB1QDkwAW5XyGLxQxBj+9o2LCCzxjDU/gbFny8eZgsn+7?=
 =?us-ascii?q?TlU7zweRb0J/0bq44RoVhf2aS/MO0bMIoiYhqzNoHFmj29LaEcaPpw1kfK9Ee9?=
 =?us-ascii?q?My/E9H1X7Ftwx6JpGgM6FihlsZcwRrv0Pv1w97CplancgttnMqyAtyKaSX0F5a?=
 =?us-ascii?q?czOY3JbwOqDYK2Xo/RCvbbLW1U/a0NqM5qgP7/E4oU35vA61Dkoi72ln095N3n?=
 =?us-ascii?q?SG4pXFEgUTXozxU0ot7Bd6uqzVbTM754PX0n1sL7K5sjvD29IvGeskxQysf9ZZ?=
 =?us-ascii?q?MKOYCgDyF9cWCNSpKOwvg1KpdA4LPPhO9K4oOMOrb/uH2LOxMOl8hj6njGRH75?=
 =?us-ascii?q?p70kKD7Cd8Tu/I35AYw/CXxAeHVjH8jEu/vcDzg4xLeTYSHm+nwyj+GIFRfrFy?=
 =?us-ascii?q?fZoMCWq2Oc23x8lxiIT3W3FF816vHVUG19GzeRqTdlDywRdf1UAKrnO5gyu4yD?=
 =?us-ascii?q?p0niotrqqe2izO3uvjeAAGOm5NWGltk1PsLZKogNAdWUiidxIpmwe95Ubm26hb?=
 =?us-ascii?q?o7xyLmnSQUtSfyn6NXpiUra2treZZ85P6ZUosThYUeimYFCaTKL9rAUe0y/5A2?=
 =?us-ascii?q?RewzU7fSmwuprlhxx6lH6dLHFroXrbY85w3xTf5N/bRfJLxToJXip4iTrWBli6?=
 =?us-ascii?q?Idap+86Zl5PCsuC4SmKgWYdfcSjtzYOcqiS74XdmDgG4n/C2gtfnCxQ10Tfn19?=
 =?us-ascii?q?l2UiXFtBb9bZPs16igM+Jnf09oCUT468p7HIF+j4QxiIsR2XgcmpWa434HnX3v?=
 =?us-ascii?q?PtVc3KL0dGANSiITw97J/Ajl31VuLnGTyIL4THmdwtZhaMO8YmMZwS8968FKCK?=
 =?us-ascii?q?GJ7L1Lhyd1o1y4rR7Pbvh5hDsS1fwu6HsCieETpAUt1jmdAqwVHURAOCzslheI?=
 =?us-ascii?q?4MqkoKRZemmvaqSw21Rknd+6Er6CuA5cVW39epcjGy9w88p+PEjN0H319oHrZt?=
 =?us-ascii?q?3QYcgPuR2TlhfKl/JVJ44plvoWmSpnPnrwvWEiy+4+lxBv3Iu1vI6aK2V256K5?=
 =?us-ascii?q?AwVVNjn0Z8MV5zHsgrxSnseQ34CzAJphHi8HU4fvTfKtCDgSr+joNx6SED0grX?=
 =?us-ascii?q?eWAaHQEhWY6EdisnLDCZSrN2yMKXkdzNViQgSdJUNFjAAVWjU6goA2FgSwyMP9?=
 =?us-ascii?q?d0d54ygb5kTkpRtU1uJoKx7/X3/dpAiybzc7VoOfIABK7g1Y5EfVLM+e7v91Hy?=
 =?us-ascii?q?5C5Z2stwiNKm2dZwRVAmAFQE2EB1b/Praw4dnM6fSXBu27L/HWe7WBtfReV+uU?=
 =?us-ascii?q?xZKoyoZn/zGMNtiWPnl/FfI73FBPXWt+G8TflDUCUCgXlyPLb86Gqxaw4Cx3rs?=
 =?us-ascii?q?aj8Pv1XALj/5eAC7xXMd934RC5nb+DN/KMhCZ+MTtY1o0DxX7LyLgc3V4ekSJu?=
 =?us-ascii?q?dyOqEbQPqyHNVr/QmrRMAh4faiNzMtZI7q0m0glMP87bls361rpigvEpDFdFUE?=
 =?us-ascii?q?Trmtu1aswSP2G9KFTHCV6RO7SbPjLL2d/4YKOmRb1UjeVZrBmwuTedE0/+MTWP?=
 =?us-ascii?q?jTjpVxazMe5SiCGXJgBRuIa4chx1E2jsUMrmagGnMN9wlTA23bw0hnbQOWEAKz?=
 =?us-ascii?q?Rzb0NNoaOW7S5DhvV/GmpB7mdqLOWemiaZ6fXYJYgSsfdxHit0kOda6mwgy7RJ?=
 =?us-ascii?q?9CFEWOB1mCzKo99uuV6mlOyPyjthUBVWqzdLhJiEvUNtOajC8plAWHDE/A8C7G?=
 =?us-ascii?q?mKChQKocdlBcPru6xK1tfPk6fze39+9Ifs8NcRHYDmKcCDK2Y7OFK9ADPIAREX?=
 =?us-ascii?q?ZT+tO3vWi0FUnLeV7HLD/bYgrZ25vpMCQ6ETfVk0CrtODE1pFcJEKZJ2QhsrlL?=
 =?us-ascii?q?eaiIgD4n/o/0qZf9lTop2SDqHaOv7oMjvMyOAcPxY=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AXAACBuQ1ch0O0hNFkGQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQcBAQEBAQGBZYJqgQIng3qUJoINFIl9jzMSAQEYCwgBhECDHSI4EgEDAQE?=
 =?us-ascii?q?BAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQECAQECIAQZARsdAQMBAQkBAQUFC?=
 =?us-ascii?q?w0CAiYCAgMgEQEFARwGEwWDHAGBaAEDDQgFCpoDPIsNfBYFAReCdwWEMQoZJw1?=
 =?us-ascii?q?dgTcCAQUSeYsWgVc/gTgfgkyDHgQYgUeDBDGCJgKLKYURj2ZVBwKCIQSEY4pHG?=
 =?us-ascii?q?IlmEIdHLI1piBeCXQIEAgQFAgUPIYE8gXczGiN6AQaCOxMrgV0JAxeDSoJZiBs?=
 =?us-ascii?q?fMoEFAQGKGSuCIAEB?=
X-IPAS-Result: =?us-ascii?q?A0AXAACBuQ1ch0O0hNFkGQEBAQEBAQEBAQEBAQcBAQEBAQG?=
 =?us-ascii?q?BZYJqgQIng3qUJoINFIl9jzMSAQEYCwgBhECDHSI4EgEDAQEBAQEBAgETAQEBC?=
 =?us-ascii?q?gsJCCkjDII2JAGCYQEBAQECAQECIAQZARsdAQMBAQkBAQUFCw0CAiYCAgMgEQE?=
 =?us-ascii?q?FARwGEwWDHAGBaAEDDQgFCpoDPIsNfBYFAReCdwWEMQoZJw1dgTcCAQUSeYsWg?=
 =?us-ascii?q?Vc/gTgfgkyDHgQYgUeDBDGCJgKLKYURj2ZVBwKCIQSEY4pHGIlmEIdHLI1piBe?=
 =?us-ascii?q?CXQIEAgQFAgUPIYE8gXczGiN6AQaCOxMrgV0JAxeDSoJZiBsfMoEFAQGKGSuCI?=
 =?us-ascii?q?AEB?=
X-IronPort-AV: E=Sophos;i="5.56,336,1539673200"; 
   d="scan'208";a="55628020"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 09 Dec 2018 16:57:51 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726397AbeLJA5t (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 9 Dec 2018 19:57:49 -0500
Received: from mail-pf1-f176.google.com ([209.85.210.176]:36494 "EHLO
        mail-pf1-f176.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726317AbeLJA5s (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 9 Dec 2018 19:57:48 -0500
Received: by mail-pf1-f176.google.com with SMTP id b85so4535314pfc.3
        for <linux-kernel@vger.kernel.org>; Sun, 09 Dec 2018 16:57:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=q7/lCL9FJdyhz/T1CmCRiZjq32YE0nsxJB+Y/sBlV3g=;
        b=ZXRIHmUQ5TiGwj3GnTIu3I6rlLVW++ahpF2g0aGsK/0vHZMAwGPNlltIxQLNzhcfEw
         AD5anQSWRvtsakjUzd9A7muAP68PZK7ggIds88hHmE8+iiskHhWN+NMmzGjGLWSNuFkW
         1089qZdBXaa7vQf+T3D+oRhtovmZh4eOiyMMfNzPqTHkoczEU+EaM0WXWcambTwxixY/
         3Kr8/TkpnwvscB4OLn1RpjeQorKeKUJrvrioqBux/J7T18zQL+kSBdwYS/diR4f0cMP5
         aD0u1oVo6hnGxMojiaJkc5gDYqCdSt2G724VAUg4BnvMpkDV1ODpfsGaigwQ0wc5bgYc
         GXtA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=q7/lCL9FJdyhz/T1CmCRiZjq32YE0nsxJB+Y/sBlV3g=;
        b=FErNvGJg1V0CBy5eZl06bMLUP3OIMdeIxSWNTLVS1hXcGPTp3F+w4c005l+RLKRWlV
         ctZNsAP8zaE8BkB19wnYJpu9moxVkWWrjeolnZuE2uPPTw0ymdJPQLdcySW70Mv5mT5U
         kRYIFqq4WC2s1Pi+bhXkSiMLwUsgb2NphtTqyAJjFS0kbBPhjFDo5cZsbxpc+Km41hSo
         RsWYC67tLUdTnIxA0ZFbiiYq1TX9rhLMR3LwVYOQZm5Le+loiqtcrODer99DEQIh+o42
         qeW6H5Nphz2Ql/91MZFQIdrHvshJVgsDRcQlCxpVJwBhMZc7Ob7v5M660mANLyiLv/W8
         QMeQ==
X-Gm-Message-State: AA+aEWY0UzNkqda6TKdnR5AY29Bv4Drm7+PifRFwRqIsqMv6VRcnj6zk
        eTc5/tByX8Yyvgmgnlcto5I=
X-Google-Smtp-Source: AFSGD/WDmNx03wI15bjO6ktwaefn1HmxQPZgsfhy3p6kvJjJJ0fqXA5ufseYgubDmTKVKFZzj1wYEw==
X-Received: by 2002:a62:7892:: with SMTP id t140mr10370777pfc.237.1544403466252;
        Sun, 09 Dec 2018 16:57:46 -0800 (PST)
Received: from [10.2.19.70] ([208.91.2.1])
        by smtp.gmail.com with ESMTPSA id k137sm17297319pfd.56.2018.12.09.16.57.44
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 09 Dec 2018 16:57:45 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.1 \(3445.101.1\))
Subject: Re: Should this_cpu_read() be volatile?
From: Nadav Amit <nadav.amit@gmail.com>
In-Reply-To: <20181208105220.GF5289@hirez.programming.kicks-ass.net>
Date: Sun, 9 Dec 2018 16:57:43 -0800
Cc: Matthew Wilcox <willy@infradead.org>,
        Vlastimil Babka <vbabka@suse.cz>,
        Linux-MM <linux-mm@kvack.org>,
        LKML <linux-kernel@vger.kernel.org>, X86 ML <x86@kernel.org>,
        Ingo Molnar <mingo@redhat.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Andy Lutomirski <luto@kernel.org>
Content-Transfer-Encoding: quoted-printable
Message-Id: <5DE00B41-835C-4E68-B192-2A3C7ACB4392@gmail.com>
References: <20181203161352.GP10377@bombadil.infradead.org>
 <4F09425C-C9AB-452F-899C-3CF3D4B737E1@gmail.com>
 <20181203224920.GQ10377@bombadil.infradead.org>
 <C377D9EF-A0F4-4142-8145-6942DC29A353@gmail.com>
 <EB579DAE-B25F-4869-8529-8586DF4AECFF@gmail.com>
 <20181206102559.GG13538@hirez.programming.kicks-ass.net>
 <55B665E1-3F64-4D87-B779-D1B4AFE719A9@gmail.com>
 <20181207084550.GA2237@hirez.programming.kicks-ass.net>
 <C29C792A-3F47-482D-B0D8-99EABEDF8882@gmail.com>
 <C064896E-268A-4462-8D51-E43C1CF10104@gmail.com>
 <20181208105220.GF5289@hirez.programming.kicks-ass.net>
To: Peter Zijlstra <peterz@infradead.org>
X-Mailer: Apple Mail (2.3445.101.1)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

> On Dec 8, 2018, at 2:52 AM, Peter Zijlstra <peterz@infradead.org> =
wrote:
>=20
> On Fri, Dec 07, 2018 at 04:40:52PM -0800, Nadav Amit wrote:
>=20
>>> I'm actually having difficulty finding the this_cpu_read() in any of =
the
>>> functions you mention, so I cannot make any concrete suggestions =
other
>>> than pointing at the alternative functions available.
>>=20
>>=20
>> So I got deeper into the code to understand a couple of differences. =
In the
>> case of select_idle_sibling(), the patch (Peter=E2=80=99s) increase =
the function
>> code size by 123 bytes (over the baseline of 986). The per-cpu =
variable is
>> called through the following call chain:
>>=20
>> 	select_idle_sibling()
>> 	=3D> select_idle_cpu()
>> 	=3D> local_clock()
>> 	=3D> raw_smp_processor_id()
>>=20
>> And results in 2 more calls to sched_clock_cpu(), as the compiler =
assumes
>> the processor id changes in between (which obviously wouldn=E2=80=99t =
happen).
>=20
> That is the thing with raw_smp_processor_id(), it is allowed to be =
used
> in preemptible context, and there it _obviously_ can change between
> subsequent invocations.
>=20
> So again, this change is actually good.
>=20
> If we want to fix select_idle_cpu(), we should maybe not use
> local_clock() there but use sched_clock_cpu() with a stable argument,
> this code runs with IRQs disabled and therefore the CPU number is =
stable
> for us here.
>=20
>> There may be more changes around, which I didn=E2=80=99t fully =
analyze. But
>> the very least reading the processor id should not get =
=E2=80=9Cvolatile=E2=80=9D.
>>=20
>> As for finish_task_switch(), the impact is only few bytes, but still
>> unnecessary. It appears that with your patch preempt_count() causes =
multiple
>> reads of __preempt_count in this code:
>>=20
>>       if (WARN_ONCE(preempt_count() !=3D 2*PREEMPT_DISABLE_OFFSET,
>>                     "corrupted preempt_count: %s/%d/0x%x\n",
>>                     current->comm, current->pid, preempt_count()))
>>               preempt_count_set(FORK_PREEMPT_COUNT);
>=20
> My patch proposed here:
>=20
>  https://marc.info/?l=3Dlinux-mm&m=3D154409548410209
>=20
> would actually fix that one I think, preempt_count() uses
> raw_cpu_read_4() which will loose the volatile with that patch.

Sorry for the spam from yesterday. That what happens when I try to write
emails on my phone while I=E2=80=99m distracted.

I tested the patch you referenced, and it certainly improves the =
situation
for reads, but there are still small and big issues lying around.

The biggest one is that (I think) smp_processor_id() should apparently =
use
__this_cpu_read(). Anyhow, when preemption checks are on, it is =
validated
that smp_processor_id() is not used while preemption is enabled, and =
IRQs
are not supposed to change its value. Otherwise the generated code of =
many
functions is affected.

There are all kind of other smaller issues, such as set_irq_regs() and
get_irq_regs(), which should run with disabled interrupts. They affect =
the
generated code in do_IRQ() and others.

But beyond that, there are so many places in the code that use
this_cpu_read() while IRQs are guaranteed to be disabled. For example
arch/x86/mm/tlb.c is full with this_cpu_read/write() and almost(?) all
should be running with interrupts disabled. Having said that, in my =
build
only flush_tlb_func_common() was affected.

