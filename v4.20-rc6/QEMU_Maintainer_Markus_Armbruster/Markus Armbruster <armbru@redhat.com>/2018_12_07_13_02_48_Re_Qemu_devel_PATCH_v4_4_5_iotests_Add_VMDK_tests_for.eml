Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:48:58 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga007.fm.intel.com (fmsmga007.fm.intel.com [10.253.24.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 58FC05803E4
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 05:04:10 -0800 (PST)
Received: from fmsmga103.fm.intel.com ([10.1.193.90])
  by fmsmga007-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 05:04:10 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AZELj8RE1aeQi7CiZxuNZNZ1GYnF86YWxBRYc798d?=
 =?us-ascii?q?s5kLTJ76p8y/bnLW6fgltlLVR4KTs6sC17KG9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCa+bL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJVyJPHI28?=
 =?us-ascii?q?YYUNAOQCM+lXoJXyqUYWrRa8BwehC/7jxzFUinDoxq03yPghHR3c0QA8A94Dqm?=
 =?us-ascii?q?jYodPoP6kSS+C1y6zIwC3EYfxMwzf965XIcgs8qvyQR7JwdNHeyVMyFwPeklWf?=
 =?us-ascii?q?t5blNC6S2+sXqWib6vFvVfiyi2M8sQF+vCWgxsc2hYnVnI4a1lfE9SBgzYszON?=
 =?us-ascii?q?a2Rkl7Ydu+H5tRsSGXL4R2QsU/Q21yvyY60LIGtJimdyYJ0JQq3wDTZ+CEfoSS?=
 =?us-ascii?q?/x7vSeWcLS1miH9reL+znQu+/Eq4xuHiSsW51ExGojdLn9XSrHwByh/e58adRv?=
 =?us-ascii?q?dj/Uqs3yuE2RrJ5eFeO080kLLWK54/zb40kZoeqUDDHi7tmEXql6+abEok+u61?=
 =?us-ascii?q?6+j9ZbXmvJCcO5d1igH4LKsuhtSyDfokPgUNRWSX5Pmw2b758UHnTrhHjuc6nr?=
 =?us-ascii?q?TbvZzCIMQUvK+5Awtb0oY57Ba/Ci+r0M0GknkCMVJJYQ+IgJb3O17QJPD0FOyw?=
 =?us-ascii?q?g1OxkDdt2//JIKbhDpLJLnjCk7fuY6xx6kFByAcrydBf5pRUCqwOIf7pW0/xss?=
 =?us-ascii?q?DYAQE9MwCu3+nnD9B925gYWWKIBK+ZP6XSsUKS6uIoOemMa5cZuCzhJPg9+/7u?=
 =?us-ascii?q?kXg5lEcZfamo3psYdmq0H/t7I0iCZXrsg9EBEXoFvwYkTezqjkGCXiBXZ3qoQ6?=
 =?us-ascii?q?084TQ7W8qbC5zeTNWtnKCZx3X8WZlXfXxdTFaLF3juasODQfhLbSuTJspolHsD?=
 =?us-ascii?q?TaSgTIk6kgijsRK/x7d5I+6HxysDqJi20dF04/HUxwg/8CExA8mD3mXIVWxtg2?=
 =?us-ascii?q?4TWxcw26Zwp1E7zU2MhrNlif5VHsAG+vVSTw0hPoTdxeEpN9eneQ/ff9HBd1Gi?=
 =?us-ascii?q?TJ3yAi42StwZ2dICY09hXd6li0aQ8TCtBuownqaIGYd827jZ1WLsPNpw0T6S3b?=
 =?us-ascii?q?MkhUM7atFCOW2vmuh08A2FVN2BqFmQi6v/LfdU5yXK7mrWiDPW5Ew=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AGAgAZbwpcmBHrdtBjHgEGBwaBZYExg?=
 =?us-ascii?q?TmBFhOMcosxgg2JII5DgV8UGAcNgUuGECI4EgEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4jDII2BQIDGgEGglwBAgIBAQJDCikDAgEBAgYBAQoOEx0IAwELAQQYMRMFB?=
 =?us-ascii?q?IMYAYF0BQgBBKYwii6MHxeBf4ERgxKDE4EzhhYCiSWGFpBmRgmRSxiJY4dVkGu?=
 =?us-ascii?q?IMIFdgXZwFYMnCYsThUBAMYEHHIgtgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AGAgAZbwpcmBHrdtBjHgEGBwaBZYExgTmBFhOMcosxgg2?=
 =?us-ascii?q?JII5DgV8UGAcNgUuGECI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDG?=
 =?us-ascii?q?gEGglwBAgIBAQJDCikDAgEBAgYBAQoOEx0IAwELAQQYMRMFBIMYAYF0BQgBBKY?=
 =?us-ascii?q?wii6MHxeBf4ERgxKDE4EzhhYCiSWGFpBmRgmRSxiJY4dVkGuIMIFdgXZwFYMnC?=
 =?us-ascii?q?YsThUBAMYEHHIgtgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="54968893"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 05:04:08 -0800
Received: from localhost ([::1]:46099 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVFnb-00029d-MV
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 08:04:07 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:44117)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gVFmY-0001Ce-4O
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 08:03:05 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gVFmR-000139-Qs
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 08:03:02 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60080)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>)
	id 1gVFmM-0000vk-Pa; Fri, 07 Dec 2018 08:02:50 -0500
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
	[10.5.11.22])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id D00B630D17EC;
	Fri,  7 Dec 2018 13:02:49 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 7411E1001F3C;
	Fri,  7 Dec 2018 13:02:49 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 2A440113860E; Fri,  7 Dec 2018 14:02:48 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: Kevin Wolf <kwolf@redhat.com>
References: <20181207115343.6747-1-kwolf@redhat.com>
	<20181207115343.6747-5-kwolf@redhat.com>
Date: Fri, 07 Dec 2018 14:02:48 +0100
In-Reply-To: <20181207115343.6747-5-kwolf@redhat.com> (Kevin Wolf's message of
	"Fri, 7 Dec 2018 12:53:42 +0100")
Message-ID: <871s6txzev.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.47]);
	Fri, 07 Dec 2018 13:02:49 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v4 4/5] iotests: Add VMDK tests for
 blockdev-create
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel@nongnu.org, qemu-block@nongnu.org, mreitz@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Kevin Wolf <kwolf@redhat.com> writes:

> Signed-off-by: Fam Zheng <famz@redhat.com>
> Signed-off-by: Kevin Wolf <kwolf@redhat.com>
> ---
>  tests/qemu-iotests/237     | 233 +++++++++++++++++++++++++
>  tests/qemu-iotests/237.out | 347 +++++++++++++++++++++++++++++++++++++
>  tests/qemu-iotests/group   |   1 +
>  3 files changed, 581 insertions(+)
>  create mode 100755 tests/qemu-iotests/237
>  create mode 100644 tests/qemu-iotests/237.out
>
> diff --git a/tests/qemu-iotests/237 b/tests/qemu-iotests/237
> new file mode 100755
> index 0000000000..e04a1ac6be
> --- /dev/null
> +++ b/tests/qemu-iotests/237
> @@ -0,0 +1,233 @@
> +#!/usr/bin/env python
> +#
> +# Test vmdk and file image creation
> +#
> +# Copyright (C) 2018 Red Hat, Inc.
> +#
> +# Creator/Owner: Kevin Wolf <kwolf@redhat.com>
> +#
> +# This program is free software; you can redistribute it and/or modify
> +# it under the terms of the GNU General Public License as published by
> +# the Free Software Foundation; either version 2 of the License, or
> +# (at your option) any later version.
> +#
> +# This program is distributed in the hope that it will be useful,
> +# but WITHOUT ANY WARRANTY; without even the implied warranty of
> +# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
> +# GNU General Public License for more details.
> +#
> +# You should have received a copy of the GNU General Public License
> +# along with this program.  If not, see <http://www.gnu.org/licenses/>.
> +#
> +
> +import iotests
> +from iotests import imgfmt
> +
> +iotests.verify_image_format(supported_fmts=['vmdk'])
> +
> +def blockdev_create(vm, options):
> +    result = vm.qmp_log('blockdev-create', job_id='job0', options=options)
> +
> +    if 'return' in result:
> +        assert result['return'] == {}
> +        vm.run_job('job0')
> +    iotests.log("")
> +
> +with iotests.FilePath('t.vmdk') as disk_path, \
> +     iotests.FilePath('t.vmdk.1') as extent1_path, \
> +     iotests.FilePath('t.vmdk.2') as extent2_path, \
> +     iotests.FilePath('t.vmdk.3') as extent3_path, \
> +     iotests.VM() as vm:
> +
> +    #
> +    # Successful image creation (defaults)
> +    #
> +    iotests.log("=== Successful image creation (defaults) ===")
> +    iotests.log("")
> +
> +    size = 5 * 1024 * 1024 * 1024
> +
> +    vm.launch()
> +    blockdev_create(vm, { 'driver': 'file',
> +                          'filename': disk_path,
> +                          'size': 0 })
> +
> +    vm.qmp_log('blockdev-add', driver='file', filename=disk_path,
> +               node_name='imgfile')
> +
> +    blockdev_create(vm, { 'driver': imgfmt,
> +                          'file': 'imgfile',
> +                          'size': size })
> +    vm.shutdown()
> +
> +    iotests.img_info_log(disk_path)
> +
> +    #
> +    # Successful image creation (inline blockdev-add, explicit defaults)
> +    #
> +    iotests.log("=== Successful image creation (inline blockdev-add, explicit defaults) ===")
> +    iotests.log("")
> +
> +    # Choose a different size to show that we got a new image
> +    size = 64 * 1024 * 1024
> +
> +    vm.launch()
> +    blockdev_create(vm, { 'driver': 'file',
> +                          'filename': disk_path,
> +                          'size': 0 })
> +
> +    blockdev_create(vm, { 'driver': imgfmt,
> +                          'file': {
> +                              'driver': 'file',
> +                              'filename': disk_path,
> +                          },
> +                          'size': size,
> +                          'extents': [],
> +                          'subformat': 'monolithicSparse',
> +                          'adapter-type': 'ide',
> +                          'hwversion': '4',
> +                          'zeroed-grain': False })
> +    vm.shutdown()
> +
> +    iotests.img_info_log(disk_path)
> +
> +    #
> +    # Successful image creation (non-default options)
> +    #
> +    iotests.log("=== Successful image creation (with non-default options) ===")
> +    iotests.log("")
> +
> +    # Choose a different size to show that we got a new image
> +    size = 32 * 1024 * 1024
> +
> +    vm.launch()
> +    blockdev_create(vm, { 'driver': 'file',
> +                          'filename': disk_path,
> +                          'size': 0 })
> +
> +    blockdev_create(vm, { 'driver': imgfmt,
> +                          'file': {
> +                              'driver': 'file',
> +                              'filename': disk_path,
> +                          },
> +                          'size': size,
> +                          'extents': [],
> +                          'subformat': 'monolithicSparse',
> +                          'adapter-type': 'buslogic',
> +                          'zeroed-grain': True })
> +    vm.shutdown()
> +
> +    iotests.img_info_log(disk_path)
> +
> +    #
> +    # Invalid BlockdevRef
> +    #
> +    iotests.log("=== Invalid BlockdevRef ===")
> +    iotests.log("")
> +
> +    vm.launch()
> +    blockdev_create(vm, { 'driver': imgfmt,
> +                          'file': "this doesn't exist",
> +                          'size': size })
> +    vm.shutdown()
> +
> +    #
> +    # Adapter types
> +    #
> +
> +    iotests.log("=== Adapter types ===")
> +    iotests.log("")
> +
> +    vm.add_blockdev('driver=file,filename=%s,node-name=node0' % (disk_path))
> +
> +    # Valid
> +    iotests.log("== Valid adapter types ==")
> +    iotests.log("")
> +
> +    vm.launch()
> +    for adapter_type in [ 'ide', 'buslogic', 'lsilogic', 'legacyESX' ]:
> +        blockdev_create(vm, { 'driver': imgfmt,
> +                              'file': 'node0',
> +                              'size': size,
> +                              'adapter-type': adapter_type })
> +    vm.shutdown()
> +
> +    # Invalid
> +    iotests.log("== Invalid adapter types ==")
> +    iotests.log("")
> +
> +    vm.launch()
> +    for adapter_type in [ 'foo', 'IDE', 'legacyesx', 1 ]:
> +        blockdev_create(vm, { 'driver': imgfmt,
> +                              'file': 'node0',
> +                              'size': size,
> +                              'adapter-type': adapter_type })
> +    vm.shutdown()
> +
> +    #
> +    # Other subformats
> +    #
> +    iotests.log("=== Other subformats ===")
> +    iotests.log("")
> +
> +    for path in [ extent1_path, extent2_path, extent3_path ]:
> +        msg = iotests.qemu_img_pipe('create', '-f', imgfmt, path, '0')
> +        iotests.log(msg, [iotests.filter_testfiles])
> +

You lost

  +    vm.add_blockdev('driver=file,filename=%s,node-name=node0' % (disk_path))

here since v3.  Intentional?

> +    vm.add_blockdev('driver=file,filename=%s,node-name=ext1' % (extent1_path))
> +    vm.add_blockdev('driver=file,filename=%s,node-name=ext2' % (extent2_path))
> +    vm.add_blockdev('driver=file,filename=%s,node-name=ext3' % (extent3_path))
[...]

