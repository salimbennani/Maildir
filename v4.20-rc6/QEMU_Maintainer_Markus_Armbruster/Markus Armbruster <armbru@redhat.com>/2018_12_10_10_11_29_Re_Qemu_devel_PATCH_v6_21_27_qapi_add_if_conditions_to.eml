Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 18:15:46 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id D16CF580310
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 02:11:51 -0800 (PST)
Received: from orsmga103.jf.intel.com ([10.7.208.35])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 10 Dec 2018 02:11:51 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AGCMq1xXVXGRDdPS9CyNi4ue6guLV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbR2Et8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAo2y?=
 =?us-ascii?q?cYUPAeQDMuhboYbyqEcBoxSjCwm0Bu7hyDBFimL40KEmzeshChrL3BA5H98UrH?=
 =?us-ascii?q?jYsM/4OaUUXOuozKfI1zLDb/ZO1Dn68ofIaBMhoeyXXbltbcfR00wvGBjfjlWN?=
 =?us-ascii?q?sozlIy2a1v4QuGWc9eVgT+evhHU9qwFsuTWv3NkjhZTJho0P1lDI7zl2wIEwJd?=
 =?us-ascii?q?ChTkNwfN2qEINIui2EK4d7QdkuT3x1tCs50LEKp5C2cSgQxJg6xRPTc+KLf5SM?=
 =?us-ascii?q?7x75SeqcLyl0iGh4dL+8iRu+61asx+76W8KpylhFtDBFncPJtn0V1xzc9MyHSv?=
 =?us-ascii?q?xl80el2DaPzBzT6vpeLUA7k6rbNoQtwrkqlpocqUjDHyn2l1vqjKKOaEko5uul?=
 =?us-ascii?q?5/76brn7pZKQLZF4hw/+P6g0h8CyA/w0Mg0UUGia/eS82qfj/Ur8QLhSl/05jK?=
 =?us-ascii?q?zZsI3DKcsGuKG5HRFa0oI65xmkCDemzdIYkmUZI1Jefx6Hi4npO1LQL/ziAva/?=
 =?us-ascii?q?nkyhkDNqx/DAI73gDY/BLnnFkLf9Y7l971RQxxY0zdBa/J9UDLYBIPT8Wk/3qd?=
 =?us-ascii?q?zUFBg5Mxa7w+r/EtVyypseWX6TAq+eKK7StV6I5uExLOWWa44VpS3wK/wk5/7o?=
 =?us-ascii?q?kH84lkURfaiv3ZsLdn+4Gu5qLFmeYXrp0Z88F3wXtF8+UPDykw/FFjpSfGqpGa?=
 =?us-ascii?q?Q74D49FcShF4iEQ4mshLmI2mC8BoFXYWZdTUmBFGqte4iaVvNfVSSJP8U0lzUF?=
 =?us-ascii?q?UaSmGZYs0AzruALkxr4iNOfN5yADqbrl09564fCVkgs9oidpBcaQ2H3YUmdvg2?=
 =?us-ascii?q?kTTCU31q0snUso716Z2u1RhfBClJR3+ulEWxpyYZvV1edzDdzoV0TFY82EQUuO?=
 =?us-ascii?q?WNiqATgtCNk2xoldTVx6HoCHhwrAwjHiKqUQnaaWH4A56OqI1mL0Ldxg42zL2K?=
 =?us-ascii?q?kokx8tRc4ZZj7uvbJ26wWGX92BqE6ejav/MP1EhCM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DsAgDBOg5cmBHrdtBjHgEGBwaBZYExg?=
 =?us-ascii?q?k8Tg3qIeIsugg2JIJAiFhgUhECDKiI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4?=
 =?us-ascii?q?vgjYFAgMaAQaCWwEBAQECAQECICMKKQMCAQECBgEBChgCAgUdBAICAwELAQQYM?=
 =?us-ascii?q?RMFgxyBdQUIAQSkaoEvih+BC4sWF4F/gRGDEoUBgwSCVwKJFZcLVQmRTxiJZod?=
 =?us-ascii?q?XmTCBXYF3cBWDJ4JQjgxAMYEHHIo2gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DsAgDBOg5cmBHrdtBjHgEGBwaBZYExgk8Tg3qIeIsugg2?=
 =?us-ascii?q?JIJAiFhgUhECDKiI4EgEDAQEBAQEBAgETAQEBAQEICwsGGw4vgjYFAgMaAQaCW?=
 =?us-ascii?q?wEBAQECAQECICMKKQMCAQECBgEBChgCAgUdBAICAwELAQQYMRMFgxyBdQUIAQS?=
 =?us-ascii?q?kaoEvih+BC4sWF4F/gRGDEoUBgwSCVwKJFZcLVQmRTxiJZodXmTCBXYF3cBWDJ?=
 =?us-ascii?q?4JQjgxAMYEHHIo2gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="55669925"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 02:11:50 -0800
Received: from localhost ([::1]:60014 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWIXV-0004is-UC
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 05:11:49 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:33708)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWIXM-0004ij-45
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 05:11:41 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <armbru@redhat.com>) id 1gWIXI-00047v-63
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 05:11:40 -0500
Received: from mx1.redhat.com ([209.132.183.28]:57334)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <armbru@redhat.com>) id 1gWIXH-00047V-R3
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 05:11:36 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 4113281F0E
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 10:11:34 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-116-56.ams2.redhat.com
	[10.36.116.56])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id ED311600D6;
	Mon, 10 Dec 2018 10:11:30 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
	id 5DD6C113860E; Mon, 10 Dec 2018 11:11:29 +0100 (CET)
From: Markus Armbruster <armbru@redhat.com>
To: =?utf-8?Q?Marc-Andr=C3=A9?= Lureau <marcandre.lureau@redhat.com>
References: <20180706105753.26700-1-marcandre.lureau@redhat.com>
	<20180706105753.26700-22-marcandre.lureau@redhat.com>
	<87bm5y8sce.fsf@dusky.pond.sub.org>
	<CAMxuvaz6zpraY=1U0UJ6jvneTENk9HzvoGtztvbjQJWon0CuaA@mail.gmail.com>
	<87d0q9onoc.fsf@dusky.pond.sub.org>
Date: Mon, 10 Dec 2018 11:11:29 +0100
In-Reply-To: <87d0q9onoc.fsf@dusky.pond.sub.org> (Markus Armbruster's message
	of "Mon, 10 Dec 2018 08:17:55 +0100")
Message-ID: <87lg4xk7xq.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Mon, 10 Dec 2018 10:11:34 +0000 (UTC)
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: Re: [Qemu-devel] [PATCH v6 21/27] qapi: add #if conditions to
 generated code members
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: qemu-devel <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Markus Armbruster <armbru@redhat.com> writes:

> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
>> Hi
>> On Thu, Dec 6, 2018 at 9:42 PM Markus Armbruster <armbru@redhat.com> wro=
te:
>>>
>>> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>>>
>>> > Wrap generated enum/struct members and code with #if/#endif, using the
>>>
>>> enum and struct members
>>
>> ok
>>
>>>
>>> > .ifcond members added in the previous patches.
>>> >
>>> > Some types generate both enum and struct members for example, so a
>>> > step-by-step is unnecessarily complicated to deal with (it would
>>> > easily generate invalid intermediary code).
>>>
>>> Can you give an example of a schema definition that would lead to
>>> complications?
>>>
>>
>> Honestly, I don't remember well (it's been a while I wrote that code).
>
> I know...
>
>> It must be related to implicit enums, such as union kind... If there
>> is no strong need to split this patch, I would rather not do that
>> extra work.
>
> I'm not looking for reasons to split this patch, I'm looking for
> stronger reasons to keep it just like it is :)
>
> Your hunch that complications would arise for simple unions plausible:
> there the same conditional needs to be applied both to the C enum's
> member and the C union member.
>
> For the generated C code to compile, each union tag enum member
> conditional must imply the corresponding variant conditional.
>
> For flat unions, the two are separate.  The QAPI generator makes no
> effort to check the enum member's if condition implies the union
> variant's if condition; if you mess them up in the schema, you get to
> deal with the C compilation errors.
>
> For simple unions, the two are one.
>
> If we separate the generator updates for enums and for union members,
> and do enum members first, then unions with conditional tag members
> can't compile.  Corrollary: simple unions with conditional variants
> can't compile.
>
> What if we do union members first?
>
> Again, I'm not asking for patch splitting here, I'm just trying to
> arrive at a clearer understanding to avoid making insufficiently
> supported claims in the commit message.  The combined patch looks small
> and clean enough to keep it combined.
>
> [...]

What about this commit message:

    qapi: Add #if conditions to generated code members

    Wrap generated enum and struct members and their supporting code with
    #if/#endif, using the .ifcond members added in the previous patches.

    We do enum and struct in a single patch because union tag enum and the
    associated variants tie them together, and dealing with that to split
    the patch doesn't seem worthwhile.

