Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 05 Dec 2018 08:45:01 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga005.jf.intel.com (orsmga005.jf.intel.com [10.7.209.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id EC8B858014B;
	Tue,  4 Dec 2018 13:56:43 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga005-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 04 Dec 2018 13:56:43 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AtURuCR0hlhJzVrjJsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segTLfTxwZ3uMQTl6Ol3ixeRBMOHs6IC07KempujcFRI2YyGvnEGfc4EfD4+ou?=
 =?us-ascii?q?JSoTYdBtWYA1bwNv/gYn9yNs1DUFh44yPzahANS47xaFLIv3K98yMZFAnhOgpp?=
 =?us-ascii?q?POT1HZPZg9iq2+yo9JDffwZFiCChbb9uMR67sRjfus4KjIV4N60/0AHJonxGe+?=
 =?us-ascii?q?RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugLd?=
 =?us-ascii?q?QgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oiD?=
 =?us-ascii?q?8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJcUMhPWSxPAoCy?=
 =?us-ascii?q?YYUBAOUOP+lYrpXyqVQVrRumBwShH//vxz1Si3PqwaE33eYsHAfb1wIgBdIOt3?=
 =?us-ascii?q?HUoc3xOqcVUeC1yrTDwzfeb/xNwjjy8pLIfQ08qvyLX7JwcdfRxlI0GAzflFWf?=
 =?us-ascii?q?tJfoPzWL1uQMrmeb7vBvWfizhG4grgF8uz6izdoihInOg4Ia0FHE9SNhzYY2O9?=
 =?us-ascii?q?K4Ukh7bsCgEJdKsCGaLYR2TtsmQ2BmviY20LsGtoCnfCUM1Z8pxAbfZuSZf4SU?=
 =?us-ascii?q?5h/vTvudLDlmiH5/Zb6yhAq+/VKhx+D+TsW4zUpGojBYntXSuX0BzQHf5tKHR/?=
 =?us-ascii?q?dl4EutxDeC2xrN5u1aIk04j7fXJ4A8zrIql5cesULOFTLslkrslq+ZbEAk9/Co?=
 =?us-ascii?q?6+v5ZrXmoYeRN5F7ig7gKKQigM+/DvoiMggIQWeb/f6w1Lr5/U32WLlKj/s2nb?=
 =?us-ascii?q?fFsJ3CO8gXuqq0DxVI3ost9RqzFSqq3dcEkXUdLV9IegqLj43zNFHPJPD4A+2/?=
 =?us-ascii?q?g1OpkDpzw/DGP7vhAojCL3Tak7fuY6x960hCxwo31Nxf4JxVCrcfL/LpQULxqt?=
 =?us-ascii?q?PYAQEjMwCuwOboFs991oUAVmKLGKOZN7nSsVCQ6uI1P+aMfJMVuCr6K/U94/7u?=
 =?us-ascii?q?jHw5lkEHcaimwJsac3S4HvVgI0WEbnvgmNYBEWEWvgUgSOzmkkGNUTlWZ3yqRa?=
 =?us-ascii?q?Iz+ik7CJ66DYfEXo2tgKaO3CanHpJMYWBKEFCMEWryeIWCVPcBcyaSIs5nkjwZ?=
 =?us-ascii?q?WrmtUY4h1ReytADkz7prNPbb+iodtZj7zth6+/XTlQ0u9TxzF8md0WaNQH9ukm?=
 =?us-ascii?q?MLQD822qZ/oUtmx1eH0Kh4heFYFNNJ6/NIVAc6KYDTz+hgB9/uXQLBe8+DSEy6?=
 =?us-ascii?q?TdW+HTExUtUxzscUbEZmG9WiiRPD0zCwA7APlbyGH5g08qPa33jsKMdx0XfG1K?=
 =?us-ascii?q?89j1Y4RstDL3Gphql69wLLHY7Gj12Zl7q2daQbxCPN932MzWyUsEFcUQ5/S6PF?=
 =?us-ascii?q?XX8Ea0vSrNT54F7CTrC0BbQmNAtB1dCNKq9QZtL1ilVGQe/pOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uRY4XwZWUSwj/RCEgenAAV5naJKw4+CiClo2LdCTxuEUniY0ft8el4tXO6?=
 =?us-ascii?q?QVU4zwCMb019ybW1/gQZiuCbS/MWxrgEojsuqy1oHFah2NLbE8ePqBB/fKpCe9?=
 =?us-ascii?q?894E1I1WTCtwNjOJytNKRihl8YcwRqsELizRR3CoNckcc0qHMm1hZ9KaWd0FlZ?=
 =?us-ascii?q?bTOXwYjwOqHLKmn15B2vd6/W2lTZ0NaK+qcO6O40q0n5sAGuDEoi93Rn099a03?=
 =?us-ascii?q?aH4pXKDQwSUY/+U0ot9hh6oa3abTc554/OyXJsNqy0uCfY2901HOsl1gqgf9BH?=
 =?us-ascii?q?PayeEA/9DcIbCNauKeAwgFepcw8LM/pU9K43OMOmaeCL2KqqPOZmgTKngn5L4I?=
 =?us-ascii?q?F70kKQ6SV8TvTE0IoCw/GdxgGHTSvzjE+9ssDrnoBJfTETHnelxSf4HoJQZ61y?=
 =?us-ascii?q?cpwNCWehOMC3wtR+h5jwW39X7lKjBlUG2NO3dhqWdVDywQpQ1UEPq3y9hSS41y?=
 =?us-ascii?q?B0ky0urqeHxizOwvjtewAdOmFWQ2lul1HsLpauj9AbRUSncxImlB+46knk3ahb?=
 =?us-ascii?q?o6J/InLXQUdJeSj2Mm5jXrGxtrqEf85A9pcovT9LX+S7ZFCQUqT9rAcC0yP/A2?=
 =?us-ascii?q?tewyg2djGrupnjnx12knmdLGt1rHfCfcFwxBHf5MHTRPJL3zoGQjV4hifTBlSm?=
 =?us-ascii?q?I9ap+tCUnY/Zsu+iT2KhSoFTcS7zwIOCriS7/25qAR64n/ypgd3oCws60Sz619?=
 =?us-ascii?q?lsSyrIqg3xYo3q16S8LOJmcVNkBF7668pmBI5+lpE8i40X2Xgfnp+V52YIkX/v?=
 =?us-ascii?q?MdVH3qLzdHoMSiQMw9LP4gjl2UtjI2mNx4L4UHWd38Rga8O7YmMQxiIy8cRKBL?=
 =?us-ascii?q?2I47xDmCt/ukC4oh7JYfhhgjcdzuMj6H0AjOEIogYtzjidDaoUHUlXJiHskxWI?=
 =?us-ascii?q?79ajrKRYfmqvcL6w1FZgktClFr2NvgZcWHPhcJc4ASBw9tl/ME7L0HDr74Hked?=
 =?us-ascii?q?rQYsgJuhyajRjAlPRVJ4wrlvURmyVnI239sGYhy+46ixxuwJ67sJKGK2Vr4KK2?=
 =?us-ascii?q?HBpYOifpaMMU/zHnlbxekdqO34CzApVhHS0GXIfvTfKtCj4TtO7oNwCTED0nsX?=
 =?us-ascii?q?ebGKHSHQue6EdgsnLOHIqnN3CRJHkF09piQAORK1BYgAARRD86hII2Fhi2xMz9?=
 =?us-ascii?q?d0d0/ise6UT/qhtI1+JkLR3/UnrEqQesazc0ToWfLRVM4gFD4UfVLdKR7uZpEy?=
 =?us-ascii?q?5E+Z2hqRSHKnaHaARQEWEJRkuECkjhPra04NnP7fOYCvCiL/fUYrWOtO9eV+qO?=
 =?us-ascii?q?xZ21yYtr5DKMNsSJPnl/APw3wEtDXXZlG8vHnzUDUTAYlyXIb8SDvhez5jV3rt?=
 =?us-ascii?q?yj8PTsQA/u5YyPC6ZLMdVy4R+2h72PN/WXhCZ/JjZVzZcMxX7OyLgC018ekSBu?=
 =?us-ascii?q?dz+xEbsesS7BVr7fmqhSDxQDcSN8KNNI774g3glKIcPbis361r97jv42CldJT1?=
 =?us-ascii?q?/hmtuuZcwFPW69Lk7HBF2QObSCJD3Lxdz3YKymRb1RiuVUqwO/uTKBH0D/OTSD?=
 =?us-ascii?q?kiHjVwqzPuFUkCGbIBtetZmnfRZwEmfjVszpax2hPN9zjD072rk0hnLMNW4BPj?=
 =?us-ascii?q?lwaUJNrruM7SxGhvVzAXBO7n1gLeOcgSaW8/HYKooKsftsGil0i+Na4HEgx7RJ?=
 =?us-ascii?q?9i1LWPx1lzXUrtN1p1Gmk++PyidoURZUqzZLgp6LsltmOanD6pZAXnPE9goX7W?=
 =?us-ascii?q?qMExQKu8dlCtr3tqFQ0NfPkqfzKDZE893M/MocB9LbKMSIMHc6NRrpGTjUDBYK?=
 =?us-ascii?q?TDKxNGHfgVBdn++W9nGPspc6rZ3sy9IyTep3XVp9KfIeDkVsGcdKdJt+WHUm16?=
 =?us-ascii?q?GaiMoJ7H+lhBjXWMhe+JvAU6TWSdfoKDDRraRObRISzfusL4MTMMv7xkZoY0N2?=
 =?us-ascii?q?tIvPEkvUG9tKp3syQBUzpRBv93h4Bk0u0UjscA/ltH0TCPS+lwQ6og1gYOgs/X?=
 =?us-ascii?q?Hn5FJhdQmCnzc5jERkwYatujuWajOkaf7oBYw=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AVAADs9gZch0O0hNFcCBsBAQEBAwEBA?=
 =?us-ascii?q?QcDAQEBgVQDAQEBCwGCaYECJwqDb5QngWAIJRSIfZApFhgLCAGBG4YxIjcGDQE?=
 =?us-ascii?q?DAQEBAQEBAgETAQEBCA0JCCkjDII2JAGCYQEBAQEDAQIgHQEBJhEBBQkBAQoVA?=
 =?us-ascii?q?wICJgICAx4mEAYBDAEFAgEBAYMcAYFpAxUFCqQvcIEvgnYBAQWBMAELAYEGgko?=
 =?us-ascii?q?NghQDBYELiXeBHBeBQD+BOAyCX4JXRwEDgTqDKYJXiSGCAYRYN49sLgmHA4cQg?=
 =?us-ascii?q?ygGGIFbiBCHOyyIWoEDg2WBDIl9gVyBdzMaCBsVgycTDIF8g22EWTuFYB8BMQE?=
 =?us-ascii?q?BgQMBAYlCgR8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AVAADs9gZch0O0hNFcCBsBAQEBAwEBAQcDAQEBgVQDAQE?=
 =?us-ascii?q?BCwGCaYECJwqDb5QngWAIJRSIfZApFhgLCAGBG4YxIjcGDQEDAQEBAQEBAgETA?=
 =?us-ascii?q?QEBCA0JCCkjDII2JAGCYQEBAQEDAQIgHQEBJhEBBQkBAQoVAwICJgICAx4mEAY?=
 =?us-ascii?q?BDAEFAgEBAYMcAYFpAxUFCqQvcIEvgnYBAQWBMAELAYEGgkoNghQDBYELiXeBH?=
 =?us-ascii?q?BeBQD+BOAyCX4JXRwEDgTqDKYJXiSGCAYRYN49sLgmHA4cQgygGGIFbiBCHOyy?=
 =?us-ascii?q?IWoEDg2WBDIl9gVyBdzMaCBsVgycTDIF8g22EWTuFYB8BMQEBgQMBAYlCgR8BA?=
 =?us-ascii?q?Q?=
X-IronPort-AV: E=Sophos;i="5.56,315,1539673200"; 
   d="scan'208";a="43563667"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 04 Dec 2018 13:56:42 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726337AbeLDV4j (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Tue, 4 Dec 2018 16:56:39 -0500
Received: from hqemgate16.nvidia.com ([216.228.121.65]:18830 "EHLO
        hqemgate16.nvidia.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726078AbeLDV4j (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 4 Dec 2018 16:56:39 -0500
Received: from hqpgpgate102.nvidia.com (Not Verified[216.228.121.13]) by hqemgate16.nvidia.com (using TLS: TLSv1.2, DES-CBC3-SHA)
        id <B5c06f8160000>; Tue, 04 Dec 2018 13:56:38 -0800
Received: from hqmail.nvidia.com ([172.20.161.6])
  by hqpgpgate102.nvidia.com (PGP Universal service);
  Tue, 04 Dec 2018 13:56:37 -0800
X-PGP-Universal: processed;
        by hqpgpgate102.nvidia.com on Tue, 04 Dec 2018 13:56:37 -0800
Received: from [10.110.48.28] (10.124.1.5) by HQMAIL101.nvidia.com
 (172.20.187.10) with Microsoft SMTP Server (TLS) id 15.0.1395.4; Tue, 4 Dec
 2018 21:56:36 +0000
Subject: Re: [PATCH 1/2] mm: introduce put_user_page*(), placeholder versions
To: Dan Williams <dan.j.williams@intel.com>,
        John Hubbard <john.hubbard@gmail.com>
CC: Andrew Morton <akpm@linux-foundation.org>,
        Linux MM <linux-mm@kvack.org>, Jan Kara <jack@suse.cz>,
        <tom@talpey.com>, Al Viro <viro@zeniv.linux.org.uk>,
        <benve@cisco.com>, Christoph Hellwig <hch@infradead.org>,
        Christopher Lameter <cl@linux.com>,
        "Dalessandro, Dennis" <dennis.dalessandro@intel.com>,
        Doug Ledford <dledford@redhat.com>,
        Jason Gunthorpe <jgg@ziepe.ca>,
        =?UTF-8?B?SsOpcsO0bWUgR2xpc3Nl?= <jglisse@redhat.com>,
        Matthew Wilcox <willy@infradead.org>,
        Michal Hocko <mhocko@kernel.org>, <mike.marciniszyn@intel.com>,
        <rcampbell@nvidia.com>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        linux-fsdevel <linux-fsdevel@vger.kernel.org>
References: <20181204001720.26138-1-jhubbard@nvidia.com>
 <20181204001720.26138-2-jhubbard@nvidia.com>
 <CAPcyv4h99JVHAS7Q7k3iPPUq+oc1NxHdyBHMjpgyesF1EjVfWA@mail.gmail.com>
X-Nvconfidentiality: public
From: John Hubbard <jhubbard@nvidia.com>
Message-ID: <a0adcf7c-5592-f003-abc5-a2645eb1d5df@nvidia.com>
Date: Tue, 4 Dec 2018 13:56:36 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.2
MIME-Version: 1.0
In-Reply-To: <CAPcyv4h99JVHAS7Q7k3iPPUq+oc1NxHdyBHMjpgyesF1EjVfWA@mail.gmail.com>
X-Originating-IP: [10.124.1.5]
X-ClientProxiedBy: HQMAIL101.nvidia.com (172.20.187.10) To
 HQMAIL101.nvidia.com (172.20.187.10)
Content-Type: text/plain; charset="utf-8"
Content-Language: en-US-large
Content-Transfer-Encoding: 7bit
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nvidia.com; s=n1;
        t=1543960598; bh=7W2wfTpgdToO6GpOI/NSe9+5+c9YZgpSZTI6IpFX1Vo=;
        h=X-PGP-Universal:Subject:To:CC:References:X-Nvconfidentiality:From:
         Message-ID:Date:User-Agent:MIME-Version:In-Reply-To:
         X-Originating-IP:X-ClientProxiedBy:Content-Type:Content-Language:
         Content-Transfer-Encoding;
        b=YbBuOH9eie1gri8DKOFeUC4jDGkI5KLAADnmkOQo2/34Vgcoa+Oev4ouHVTeFTNma
         Vyt628PcOHN5bE8bixBfJCNM75XeI20SbOEOVn1Kq6RTN3+ildVPrETzLzpk5G+PkO
         fveqdO3dXySQnD9R74UdtRS2LDFU2/OqVTgzPmyi8YT3PUrv5mlNdCY73Q86Gwt4wA
         GzFCt5+oc9PIyIVtkDAx0ldmFOgHXe8ZubOE4SiAz1743eLXOEMMh9jSrteWFBkQNM
         RLFaDPFFGi86oBpJH74O6YxWZQgys58aHpA2CUj59wV2u2VVJ4AHY+pGi4TINyqX6G
         QEkrGNicjHVtw==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/4/18 12:28 PM, Dan Williams wrote:
> On Mon, Dec 3, 2018 at 4:17 PM <john.hubbard@gmail.com> wrote:
>>
>> From: John Hubbard <jhubbard@nvidia.com>
>>
>> Introduces put_user_page(), which simply calls put_page().
>> This provides a way to update all get_user_pages*() callers,
>> so that they call put_user_page(), instead of put_page().
>>
>> Also introduces put_user_pages(), and a few dirty/locked variations,
>> as a replacement for release_pages(), and also as a replacement
>> for open-coded loops that release multiple pages.
>> These may be used for subsequent performance improvements,
>> via batching of pages to be released.
>>
>> This is the first step of fixing the problem described in [1]. The steps
>> are:
>>
>> 1) (This patch): provide put_user_page*() routines, intended to be used
>>    for releasing pages that were pinned via get_user_pages*().
>>
>> 2) Convert all of the call sites for get_user_pages*(), to
>>    invoke put_user_page*(), instead of put_page(). This involves dozens of
>>    call sites, and will take some time.
>>
>> 3) After (2) is complete, use get_user_pages*() and put_user_page*() to
>>    implement tracking of these pages. This tracking will be separate from
>>    the existing struct page refcounting.
>>
>> 4) Use the tracking and identification of these pages, to implement
>>    special handling (especially in writeback paths) when the pages are
>>    backed by a filesystem. Again, [1] provides details as to why that is
>>    desirable.
> 
> I thought at Plumbers we talked about using a page bit to tag pages
> that have had their reference count elevated by get_user_pages()? That
> way there is no need to distinguish put_page() from put_user_page() it
> just happens internally to put_page(). At the conference Matthew was
> offering to free up a page bit for this purpose.
> 

...but then, upon further discussion in that same session, we realized that
that doesn't help. You need a reference count. Otherwise a random put_page
could affect your dma-pinned pages, etc, etc.

I was not able to actually find any place where a single additional page
bit would help our situation, which is why this still uses LRU fields for
both the two bits required (the RFC [1] still applies), and the dma_pinned_count.


[1] https://lore.kernel.org/r/20181110085041.10071-7-jhubbard@nvidia.com



>> [1] https://lwn.net/Articles/753027/ : "The Trouble with get_user_pages()"
>>
>> Reviewed-by: Jan Kara <jack@suse.cz>
> 
> Wish, you could have been there Jan. I'm missing why it's safe to
> assume that a single put_user_page() is paired with a get_user_page()?
> 

A put_user_page() per page, or a put_user_pages() for an array of pages. See
patch 0002 for several examples.

thanks,
-- 
John Hubbard
NVIDIA
