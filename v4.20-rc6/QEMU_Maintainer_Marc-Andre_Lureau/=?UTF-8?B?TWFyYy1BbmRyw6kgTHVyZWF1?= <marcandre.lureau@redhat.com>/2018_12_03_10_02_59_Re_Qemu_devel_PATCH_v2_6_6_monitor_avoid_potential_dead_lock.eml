Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 03 Dec 2018 20:24:30 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from FMSMGA003.fm.intel.com (fmsmga003.fm.intel.com [10.253.24.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 03C82580224
	for <like.xu@linux.intel.com>; Mon,  3 Dec 2018 02:03:27 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by FMSMGA003-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Dec 2018 02:03:27 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A9TjQiRw04cxMMzbXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0uoXLvad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWVOXshTWCJBDI2y?=
 =?us-ascii?q?bJUBAPYOM+hFt4nwpVkAoBSjCQSiGO/g1CRIi2Tq3a0jyektDR3K0BAiEt8IrX?=
 =?us-ascii?q?/arM/1NKAXUe2ty6fH1y/DYO9P1Trh7ojHbwohpuuRVrx2bMrR01cgGBnYjl6N?=
 =?us-ascii?q?roHlOima1v4RvGeB6epvSPivhHA9pwF1vziv3NkjhZPUho8O0FDL6zh2wIYvKt?=
 =?us-ascii?q?2kUkJ0fdmkEJ5JuiycKoB4QdsiTnl2tComybAKo4O3cDUJxZg92RLSZfyKf5KV?=
 =?us-ascii?q?7h/hTOqdPyt0iXZ/dL+8hxu+61asxvPiWsWuzVpHry5In9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/lAIUA1jqrbN4UhzqQ/lpoVrETPBCj2mF/5jKOOd0Uk/Pan?=
 =?us-ascii?q?6/j/b7n4upORNJV4hhzjPqktgMCzH+o1PwgUU2SG++mwzLjj8lf4QLVOgP02iK?=
 =?us-ascii?q?7ZsJXCKMQCuKG5BhJV3p8+5BmhETepztAYkWAcI1JCZRKHiZTmNE/VIPz/Cfe/?=
 =?us-ascii?q?glesnylxy/HJI73sGpHNLnnFkLf8crdx8U9cyAwvzd9B45JYEK0OIPX2WkLqst?=
 =?us-ascii?q?zYCRk5MwOyw+b6Etl90ZkeWW2XDq+DLKzSqUOI5v4oI+SUYI8VuTX9JOY/6//h?=
 =?us-ascii?q?kH80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TL+itVuZTDQGZ2quR7?=
 =?us-ascii?q?luoXY/CZm6FsHFQYaihqHH2z20WZhfZ2RDA1bLFm/0doKCQLAVZSePZ8NsjDEA?=
 =?us-ascii?q?BoWnUJIrgBSntQvmzOh+I+/JvyEVq5/nkcJ4/vDejg0a8ztyAMKAlWaXQDZvg2?=
 =?us-ascii?q?kKSjQqib15ulF30VyZ0KJ10MBfQJZ6/fZDSBohKZPGi6RfAsrxRxmLNoOAUlOs?=
 =?us-ascii?q?WMiOGzw9TtsthdQJZhAuNc+li0Xm1jChRpYTm6YKTLgp6K/VwjClIs9nwH/A2L?=
 =?us-ascii?q?MsyV07WMZGKEW8i6J//hSVDInMxRbK3522fLgRiXaevFyIynCD6QQBCFZ9?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AiAACS/gRchxHrdtBiHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwKoIlE4N5iHeNN4d2ghGNQYFzFBgUhECDQyI0CQ0BAwEBAQEBAQIBEwEBAQo?=
 =?us-ascii?q?LCQgbDi+CNgUCAxoBBoJcAQIDAQIgIwopAwMBAgYBAQoLDQICIgQCAgMBHhIBB?=
 =?us-ascii?q?QEcBhMFglFLggIBBJklPIsNgS+JEIEOEnmLEYIWgRGDEoRrFoMEglcCiQyHG5A?=
 =?us-ascii?q?ZBwKKMocKGJEmmF4PIYElgg0zGiOBAQaCNYInFxKOEDwxgQeIdYF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0AiAACS/gRchxHrdtBiHgEGBwaBUQkLAYEwKoIlE4N5iHe?=
 =?us-ascii?q?NN4d2ghGNQYFzFBgUhECDQyI0CQ0BAwEBAQEBAQIBEwEBAQoLCQgbDi+CNgUCA?=
 =?us-ascii?q?xoBBoJcAQIDAQIgIwopAwMBAgYBAQoLDQICIgQCAgMBHhIBBQEcBhMFglFLggI?=
 =?us-ascii?q?BBJklPIsNgS+JEIEOEnmLEYIWgRGDEoRrFoMEglcCiQyHG5AZBwKKMocKGJEmm?=
 =?us-ascii?q?F4PIYElgg0zGiOBAQaCNYInFxKOEDwxgQeIdYF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,310,1539673200"; 
   d="scan'208";a="55258489"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 03 Dec 2018 02:03:26 -0800
Received: from localhost ([::1]:47685 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gTl4Y-0001jM-6Y
	for like.xu@linux.intel.com; Mon, 03 Dec 2018 05:03:26 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:35782)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gTl4O-0001Wu-DL
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 05:03:17 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <mlureau@redhat.com>) id 1gTl4J-0001hK-C1
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 05:03:16 -0500
Received: from mail-qk1-f169.google.com ([209.85.222.169]:46182)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <mlureau@redhat.com>) id 1gTl4J-0001h1-6P
	for qemu-devel@nongnu.org; Mon, 03 Dec 2018 05:03:11 -0500
Received: by mail-qk1-f169.google.com with SMTP id q1so6903710qkf.13
	for <qemu-devel@nongnu.org>; Mon, 03 Dec 2018 02:03:11 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=VWLwznmFxhyuVgUUj90jncR+GjUk4Myo3BYPrQ6mCq0=;
	b=b7jwAVafICcB9zEGCrdLSgMCu/qG4rFGgEncVkicSQEsuCqfaPjfkanUzQrEEgi+gE
	PLu3mlp8e/jvT+Nr+aYBfkIrA/yhjuMkAKDRb3Tvv3ZDRz05mjFZwedE+koMioVwUcxJ
	LQuZ0UpTjv5cbW+SmDHSExmcThqlWVJ+N0a8uEBxcB0VjL1Tvm8htZrKg6msY+YZ+1ET
	RK2FAM2VTIbOdZfPEXgdr0RNKmfTqNSX4evOJTQkHS6YAguLdAUYa3LhLSeAPvUuIIP8
	JMvIIZ+bfktGIdfJk7FtOT1+YBrmLveoqt0MMWUUdwMsyTQJ2VplAJK8Ac7uBOUchGyB
	5k5A==
X-Gm-Message-State: AA+aEWZlfkWRv1cyWZdT1se2xgwr+/1A/1351/FylDgPfjO+KrXRPEsK
	bSHZcGxIne6QbXAylmUe1gMryFSck0OGy0kp8Flxzw==
X-Google-Smtp-Source: AFSGD/UHGwtEI7tQPg3xL0G7hCu8eVeiy2mpolzH55jxryl6UZjgC/6GoXDZcjUpe4MeqW0Lk/EJSB6Tawqm3cOMGBI=
X-Received: by 2002:a37:af85:: with SMTP id
	y127mr13471199qke.352.1543831390549; 
	Mon, 03 Dec 2018 02:03:10 -0800 (PST)
MIME-Version: 1.0
References: <20181029125733.14597-1-marcandre.lureau@redhat.com>
	<20181029125733.14597-7-marcandre.lureau@redhat.com>
	<87h8fv6jwy.fsf@dusky.pond.sub.org>
In-Reply-To: <87h8fv6jwy.fsf@dusky.pond.sub.org>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@redhat.com>
Date: Mon, 3 Dec 2018 14:02:59 +0400
Message-ID: <CAMxuvay5YayhLaawFgroDh=DLGfjCYKnq3y+SKbecvEDTj9cjw@mail.gmail.com>
To: "Armbruster, Markus" <armbru@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.85.222.169
Subject: Re: [Qemu-devel] [PATCH v2 6/6] monitor: avoid potential dead-lock
 when cleaning up
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: "Bonzini, Paolo" <pbonzini@redhat.com>, qemu-devel <qemu-devel@nongnu.org>,
	Peter Xu <peterx@redhat.com>,
	"Dr. David Alan Gilbert" <dgilbert@redhat.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

On Mon, Dec 3, 2018 at 1:26 PM Markus Armbruster <armbru@redhat.com> wrote:
>
> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
> > When a monitor is connected to a Spice chardev, the monitor cleanup
> > can dead-lock:
> >
> >  #0  0x00007f43446637fd in __lll_lock_wait () at /lib64/libpthread.so.0
> >  #1  0x00007f434465ccf4 in pthread_mutex_lock () at /lib64/libpthread.s=
o.0
> >  #2  0x0000556dd79f22ba in qemu_mutex_lock_impl (mutex=3D0x556dd81c9220=
 <monitor_lock>, file=3D0x556dd7ae3648 "/home/elmarco/src/qq/monitor.c", li=
ne=3D645) at /home/elmarco/src/qq/util/qemu-thread-posix.c:66
> >  #3  0x0000556dd7431bd5 in monitor_qapi_event_queue (event=3DQAPI_EVENT=
_SPICE_DISCONNECTED, qdict=3D0x556dd9abc850, errp=3D0x7fffb7bbddd8) at /hom=
e/elmarco/src/qq/monitor.c:645
> >  #4  0x0000556dd79d476b in qapi_event_send_spice_disconnected (server=
=3D0x556dd98ee760, client=3D0x556ddaaa8560, errp=3D0x556dd82180d0 <error_ab=
ort>) at qapi/qapi-events-ui.c:149
> >  #5  0x0000556dd7870fc1 in channel_event (event=3D3, info=3D0x556ddad1b=
590) at /home/elmarco/src/qq/ui/spice-core.c:235
> >  #6  0x00007f434560a6bb in reds_handle_channel_event (reds=3D<optimized=
 out>, event=3D3, info=3D0x556ddad1b590) at reds.c:316
> >  #7  0x00007f43455f393b in main_dispatcher_self_handle_channel_event (i=
nfo=3D0x556ddad1b590, event=3D3, self=3D0x556dd9a7d8c0) at main-dispatcher.=
c:197
> >  #8  0x00007f43455f393b in main_dispatcher_channel_event (self=3D0x556d=
d9a7d8c0, event=3Devent@entry=3D3, info=3D0x556ddad1b590) at main-dispatche=
r.c:197
> >  #9  0x00007f4345612833 in red_stream_push_channel_event (s=3Ds@entry=
=3D0x556ddae2ef40, event=3Devent@entry=3D3) at red-stream.c:414
> >  #10 0x00007f434561286b in red_stream_free (s=3D0x556ddae2ef40) at red-=
stream.c:388
> >  #11 0x00007f43455f9ddc in red_channel_client_finalize (object=3D0x556d=
d9bb21a0) at red-channel-client.c:347
> >  #12 0x00007f434b5f9fb9 in g_object_unref () at /lib64/libgobject-2.0.s=
o.0
> >  #13 0x00007f43455fc212 in red_channel_client_push (rcc=3D0x556dd9bb21a=
0) at red-channel-client.c:1341
> >  #14 0x0000556dd76081ba in spice_port_set_fe_open (chr=3D0x556dd9925e20=
, fe_open=3D0) at /home/elmarco/src/qq/chardev/spice.c:241
> >  #15 0x0000556dd796d74a in qemu_chr_fe_set_open (be=3D0x556dd9a37c00, f=
e_open=3D0) at /home/elmarco/src/qq/chardev/char-fe.c:340
> >  #16 0x0000556dd796d4d9 in qemu_chr_fe_set_handlers (b=3D0x556dd9a37c00=
, fd_can_read=3D0x0, fd_read=3D0x0, fd_event=3D0x0, be_change=3D0x0, opaque=
=3D0x0, context=3D0x0, set_open=3Dtrue) at /home/elmarco/src/qq/chardev/cha=
r-fe.c:280
> >  #17 0x0000556dd796d359 in qemu_chr_fe_deinit (b=3D0x556dd9a37c00, del=
=3Dfalse) at /home/elmarco/src/qq/chardev/char-fe.c:233
> >  #18 0x0000556dd7432240 in monitor_data_destroy (mon=3D0x556dd9a37c00) =
at /home/elmarco/src/qq/monitor.c:786
> >  #19 0x0000556dd743b968 in monitor_cleanup () at /home/elmarco/src/qq/m=
onitor.c:4683
> >  #20 0x0000556dd75ce776 in main (argc=3D3, argv=3D0x7fffb7bbe458, envp=
=3D0x7fffb7bbe478) at /home/elmarco/src/qq/vl.c:4660
> >
> > Because spice code tries to emit a "disconnected" signal on the
> > monitors. Fix this dead-lock by releasing the monitor lock for
> > flush/destroy.
> >
> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
> > ---
> >  monitor.c | 2 ++
> >  1 file changed, 2 insertions(+)
> >
> > diff --git a/monitor.c b/monitor.c
> > index 7fe89daa87..b55e604a98 100644
> > --- a/monitor.c
> > +++ b/monitor.c
> > @@ -4643,8 +4643,10 @@ void monitor_cleanup(void)
> >      monitor_destroyed =3D true;
> >      QTAILQ_FOREACH_SAFE(mon, &mon_list, entry, next) {
> >          QTAILQ_REMOVE(&mon_list, mon, entry);
> > +        qemu_mutex_unlock(&monitor_lock);
> >          monitor_flush(mon);
> >          monitor_data_destroy(mon);
> > +        qemu_mutex_lock(&monitor_lock);
> >          g_free(mon);
> >      }
> >      qemu_mutex_unlock(&monitor_lock);
>
> I think a comment hinting at the reason for relinquishing the lock would
> be in order.  Perhaps
>
>            /* Permit QAPI event emission from character frontend release =
*/
>            qemu_mutex_unlock(&monitor_lock);
>
> We need to demonstrate calling monitor_flush() and
> monitor_data_destroy() without holding @monitor_lock is safe.
>
> @monitor_lock's comment states it "protects mon_list,
> monitor_qapi_event_state."  Looks plausible from how it's used.
>
> As far as I can tell, monitor_flush() and monitor_data_destroy() don't
> access mon_list and monitor_qapi_event_state.
>
> monitor_cleanup()'s loop itself is safe because it uses
> QTAILQ_FOREACH_SAFE(), unlike similar loops elsewhere.
>
> I think we're good.  I'd like you to work this argument into the commit
> message.

What about adding:

    monitor_lock protects mon_list, monitor_qapi_event_state and
    monitor_destroyed. monitor_flush() and monitor_data_destroy() don't
    access any of those variables.

    monitor_cleanup()'s loop is safe because it uses
    QTAILQ_FOREACH_SAFE(), and no further monitor can be added after
    calling monitor_cleanup() thanks to monitor_destroyed check in
    monitor_list_append().

