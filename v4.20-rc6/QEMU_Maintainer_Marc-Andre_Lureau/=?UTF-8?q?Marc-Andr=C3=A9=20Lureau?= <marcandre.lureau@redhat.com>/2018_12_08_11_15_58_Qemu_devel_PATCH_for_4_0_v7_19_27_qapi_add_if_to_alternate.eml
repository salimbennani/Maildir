Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:55:36 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga006.fm.intel.com (fmsmga006.fm.intel.com [10.253.24.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id F23435804FD
	for <like.xu@linux.intel.com>; Sat,  8 Dec 2018 03:30:57 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by fmsmga006-1.fm.intel.com with ESMTP; 08 Dec 2018 03:30:57 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AvCUpgxwCwJdtm2DXCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?2uMTIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CRWRPQMhfWS9DDYOy?=
 =?us-ascii?q?YIQAE+UPM/tAr4T/pVUDogayCAewCOzx0T9FnWP23bQg3ug9DQ3KwA4tEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPiywqbS1zXMc+pa1Cv76IfVaBAmu+yHU7RtccrL10YgDR7FhUiX?=
 =?us-ascii?q?pIzgJTyVzPgCvHKd7+V9T+KglXQrqwVsoji12MgjkJTJi5kPyl/a6Cp5wJw6Jc?=
 =?us-ascii?q?GiREFnZt6kFYJduieHPIV1WsMvW39ktDo5x7EcpJK3YSsHxI45yxPRa/GLaZWE?=
 =?us-ascii?q?7xD7WOqPPTt1gGhpdK+xihqs60Ss1+7xW8eu3FpUrSdIlMTHuGoX2BzJ8MeHT+?=
 =?us-ascii?q?Nw/ke/1jaL0ADe8uVEIUEvlarHMJ4t2LEwlpwOsUjZGS/2gkr2gLeXdkUi5Oeo?=
 =?us-ascii?q?9/zqbqv6qpKfLYN4lxzyP6c0lsChD+k1MhICU3WZ9Oik0b3s50z5QLFEjv0sla?=
 =?us-ascii?q?nZtYjXJd0Fqa68Hg9Zy5ss5AihDzi41NQUhGIILFVYeBKBk4fmJUrOLPf8Dfe+?=
 =?us-ascii?q?gFSjji1nxv/bPrD5BpXNL37DkKrufLpn6k5czhYzws5b555OFr4BJ/fzV1T3tN?=
 =?us-ascii?q?zfCB85PAq0w/v9BNV6zIMeVnqDArWFP6PKrV+I+uUvLvGIZI8UuzbyNeIp5vHz?=
 =?us-ascii?q?jXIinV8dfK+p3YYYaXyiH/RmJVmZbmTogtsbDWgKuQ8+H6TXjkafW2tTe2qqRP?=
 =?us-ascii?q?B7oTU6E569S4HEQI+rnfqGxij8G5RXYmVPDBeLCWvpcIOfHO4BbT/XLsJ/nzhX?=
 =?us-ascii?q?aL66VoV00BivsBP9maNqK/eR9iAGuJamztVs+uDIiTk08jp7Cdnb1HuCGHpplG?=
 =?us-ascii?q?EFTCNjwaZkvEZmwU2C26Urv/sNDNFW+rZFXxk3MbbayOp1Dc20XRjOLfmTT1Pz?=
 =?us-ascii?q?Z9y8CnQYSN4rQpcqflxwEsjq2hXKxSGjBbMPmvqPGYY5+7/0xXX9J89hjX3B0f?=
 =?us-ascii?q?9y3BEdXsJTODj+1eZE/A/JCtuMyh3Bmg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A0AgBUqgtcmBHrdtBkHQEBBQEHBQGBZ?=
 =?us-ascii?q?YExgTmBKYN6iHiLMptRFBgDEYddIjgSAQMBAQEBAQECARMBAQEBAQgLCwYbDiM?=
 =?us-ascii?q?MgjYFAgMaAQaCXAMDAQIgIwopAwMBAgYBASQCIgQCAgMBUxkFgxwBggEBBKcDg?=
 =?us-ascii?q?S+FQINkgQ2BC4sXghaBEYsXglcCjzt6kDUHAocIijsLGIIphzuHV4d2kTiBXYF?=
 =?us-ascii?q?2MxojUIJsCYtkhHM8MYEHHIk0gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0A0AgBUqgtcmBHrdtBkHQEBBQEHBQGBZYExgTmBKYN6iHi?=
 =?us-ascii?q?LMptRFBgDEYddIjgSAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMgjYFAgMaAQaCX?=
 =?us-ascii?q?AMDAQIgIwopAwMBAgYBASQCIgQCAgMBUxkFgxwBggEBBKcDgS+FQINkgQ2BC4s?=
 =?us-ascii?q?XghaBEYsXglcCjzt6kDUHAocIijsLGIIphzuHV4d2kTiBXYF2MxojUIJsCYtkh?=
 =?us-ascii?q?HM8MYEHHIk0gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,330,1539673200"; 
   d="scan'208";a="43265332"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 08 Dec 2018 03:30:52 -0800
Received: from localhost ([::1]:50411 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVaot-00027O-R7
	for like.xu@linux.intel.com; Sat, 08 Dec 2018 06:30:51 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:60156)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gVacy-0005Q8-Bp
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:18:35 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gVacw-0004ct-IB
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:18:32 -0500
Received: from mx1.redhat.com ([209.132.183.28]:36222)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gVacw-0004cQ-75
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:18:30 -0500
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
	[10.5.11.11])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 77ABA83F3D;
	Sat,  8 Dec 2018 11:18:29 +0000 (UTC)
Received: from localhost (unknown [10.36.112.11])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 5041360144;
	Sat,  8 Dec 2018 11:18:25 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Sat,  8 Dec 2018 15:15:58 +0400
Message-Id: <20181208111606.8505-20-marcandre.lureau@redhat.com>
In-Reply-To: <20181208111606.8505-1-marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.27]);
	Sat, 08 Dec 2018 11:18:29 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH for-4.0 v7 19/27] qapi: add 'if' to alternate
 members
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
	armbru@redhat.com, Michael Roth <mdroth@linux.vnet.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Add 'if' key to alternate members:

{ 'alternate': 'TestIfAlternate', 'data':
  { 'alt': { 'type': 'TestStruct', 'if': 'COND' } } }

Generated code is not changed by this patch but with "qapi: add #if
conditions to generated code".

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
---
 scripts/qapi/common.py                  | 10 +++++-----
 docs/devel/qapi-code-gen.txt            |  2 +-
 tests/qapi-schema/qapi-schema-test.json |  4 +++-
 tests/qapi-schema/qapi-schema-test.out  |  1 +
 4 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
index 44020779dd..a70d6dec3b 100644
--- a/scripts/qapi/common.py
+++ b/scripts/qapi/common.py
@@ -857,7 +857,7 @@ def check_alternate(expr, info):
         if isinstance(value, dict):
             check_known_keys(info,
                              "member '%s' of alternate '%s'" % (key, nam=
e),
-                             value, ['type'], [])
+                             value, ['type'], ['if'])
             typ =3D value['type']
         else:
             typ =3D value
@@ -1784,8 +1784,8 @@ class QAPISchema(object):
                                               self._make_members(data, i=
nfo),
                                               None))
=20
-    def _make_variant(self, case, typ):
-        return QAPISchemaObjectTypeVariant(case, typ)
+    def _make_variant(self, case, typ, ifcond):
+        return QAPISchemaObjectTypeVariant(case, typ, ifcond)
=20
     def _make_simple_variant(self, case, typ, ifcond, info):
         if isinstance(typ, list):
@@ -1808,7 +1808,7 @@ class QAPISchema(object):
                 name, info, doc, ifcond,
                 'base', self._make_members(base, info))
         if tag_name:
-            variants =3D [self._make_variant(key, value['type'])
+            variants =3D [self._make_variant(key, value['type'], value.g=
et('if'))
                         for (key, value) in data.items()]
             members =3D []
         else:
@@ -1829,7 +1829,7 @@ class QAPISchema(object):
         name =3D expr['alternate']
         data =3D expr['data']
         ifcond =3D expr.get('if')
-        variants =3D [self._make_variant(key, value['type'])
+        variants =3D [self._make_variant(key, value['type'], value.get('=
if'))
                     for (key, value) in data.items()]
         tag_member =3D QAPISchemaObjectTypeMember('type', 'QType', False=
)
         self._def_entity(
diff --git a/docs/devel/qapi-code-gen.txt b/docs/devel/qapi-code-gen.txt
index 6f2457a2e0..5ea62cb111 100644
--- a/docs/devel/qapi-code-gen.txt
+++ b/docs/devel/qapi-code-gen.txt
@@ -754,7 +754,7 @@ gets its generated code guarded like this:
=20
 Where a member can be defined with a single string value for its type,
 it is also possible to supply a dictionary instead with both 'type'
-and 'if' keys. (TODO: alternate)
+and 'if' keys.
=20
 Example: a conditional 'bar' member
=20
diff --git a/tests/qapi-schema/qapi-schema-test.json b/tests/qapi-schema/=
qapi-schema-test.json
index 0d28475f4c..d58cc49028 100644
--- a/tests/qapi-schema/qapi-schema-test.json
+++ b/tests/qapi-schema/qapi-schema-test.json
@@ -218,7 +218,9 @@
 { 'command': 'TestIfUnionCmd', 'data': { 'union_cmd_arg': 'TestIfUnion' =
},
   'if': 'defined(TEST_IF_UNION)' }
=20
-{ 'alternate': 'TestIfAlternate', 'data': { 'foo': 'int', 'bar': 'TestSt=
ruct' },
+{ 'alternate': 'TestIfAlternate', 'data':
+  { 'foo': 'int',
+    'bar': { 'type': 'TestStruct', 'if': 'defined(TEST_IF_ALT_BAR)'} },
   'if': 'defined(TEST_IF_ALT) && defined(TEST_IF_STRUCT)' }
=20
 { 'command': 'TestIfCmd', 'data':
diff --git a/tests/qapi-schema/qapi-schema-test.out b/tests/qapi-schema/q=
api-schema-test.out
index aedc668aa4..59d7ed17a1 100644
--- a/tests/qapi-schema/qapi-schema-test.out
+++ b/tests/qapi-schema/qapi-schema-test.out
@@ -300,6 +300,7 @@ alternate TestIfAlternate
     tag type
     case foo: int
     case bar: TestStruct
+        if ['defined(TEST_IF_ALT_BAR)']
     if ['defined(TEST_IF_ALT) && defined(TEST_IF_STRUCT)']
 object q_obj_TestIfCmd-arg
     member foo: TestIfStruct optional=3DFalse
--=20
2.20.0.rc1


