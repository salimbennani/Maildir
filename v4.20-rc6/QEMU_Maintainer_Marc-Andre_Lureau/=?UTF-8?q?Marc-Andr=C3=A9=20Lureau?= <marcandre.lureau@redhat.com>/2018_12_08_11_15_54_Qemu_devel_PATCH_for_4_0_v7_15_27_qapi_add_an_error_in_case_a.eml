Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:55:43 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id E50FB5803E4
	for <like.xu@linux.intel.com>; Sat,  8 Dec 2018 03:43:24 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 03:43:24 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3AceFw0h2auruDhib2smDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seMfL/ad9pjvdHbS+e9qxAeQG9mDu7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q99pHPYAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWpPUNhfWSJCAIy8?=
 =?us-ascii?q?YYQAAPYOM+hFt4nwpVkAoBSjCQSiGO/g1CRIi2Tq3a0jyektDR3K0BAiEt8IrX?=
 =?us-ascii?q?/arM/1NKAXUe2ty6fH1y/DYO9P1Trh7ojHbwohpuuRVrx2bMrR01cgGBnYjl6N?=
 =?us-ascii?q?roHlOima1v4RvGeB6epvSPivhHA9pwF1vziv3NkjhZPUho8O0FDL6zh2wIYvKt?=
 =?us-ascii?q?2kUkJ0fdmkEJ5JuiycKoB4QdsiTnl2tComybAKo4O3cDUJxZg92RLSZfyKf5KV?=
 =?us-ascii?q?7h/hTOqdPyt0iXZ/dL6iiRu+71KsxvD/W8S6ylpGsClIn9/RvX4XzRPT8NKISv?=
 =?us-ascii?q?5l80ehxzmP0wfT5/lAIUA1jqrbN4UhzqQ/lpoVrETPBCj2mF/5jKOOd0Uk/Pan?=
 =?us-ascii?q?6/j/b7n4upORNJV4hhzjPqktgMCzH+o1PwgUU2SG++mwzLjj8lf4QLVOgP02iK?=
 =?us-ascii?q?7ZsJXCKMQCuKG5BhJV3p8+5BmhETepztAYkWAcI1JCZRKHiZTmNE/VIPz/Cfe/?=
 =?us-ascii?q?glesnylxy/HJI73sGpHNLnnFkLf8crdx8U9cyAwvzd9B45JYEK0OIPX2WkLqst?=
 =?us-ascii?q?zYCRk5MwOyw+b6Etl90ZkeWW2XDq+DLKzSqUOI5v4oI+SUYI8VuTX9JOY/6//h?=
 =?us-ascii?q?kH80glsdfaiv3ZsKZ3G0BPVmI0OFYXXyhtcNC3sFvg07TL+itVuZTDQGZ2quR7?=
 =?us-ascii?q?luoXY/CZm6FsHFQYaihqHH2z20WZhfZ2RDA1bLFm/0doKCQLAVZSePZ8NsjDEA?=
 =?us-ascii?q?BoWnUJIrgBSntQvmzOh+I+/JvyEVq5/nkcJ4/vDejg0a8ztyAMKAlWaXQDZvg2?=
 =?us-ascii?q?kKSjQqib15ulF30VyZ0KJ10MBfQMVe4u4MXgokOJr0yet8BNbvHAXbcYSnUlGj?=
 =?us-ascii?q?F/CvGzp0Z9Q92V5GR1tnFty/xkTG1jChCrkZjbHNAIEu/6vB92L8K8Z01zDN06?=
 =?us-ascii?q?x33ApueddGKWDz3v03zAPUHYOc1hzBz6s=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AfAAAirQtcmBHrdtBkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgTCBOYEpg3qIeIsxm1EUGAMRh10iNwYNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?BAQgLCwYbDiMMgjYFAgMaAQaCXAMDAQIgIwopAwMBAgYBASQCIgQCAgMBUxkFg?=
 =?us-ascii?q?xwBggEBBKZygS+FQINkgQ2BC4sWghaMKIJXAo89epA+BwKHCIo8CxiCKYc9h1e?=
 =?us-ascii?q?ZMIFcgXgzGiODPAmCR4kdhHM8MYEHHIk1gXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AfAAAirQtcmBHrdtBkHAEBAQQBAQcEAQGBVAQBAQsBgTC?=
 =?us-ascii?q?BOYEpg3qIeIsxm1EUGAMRh10iNwYNAQMBAQEBAQECARMBAQEBAQgLCwYbDiMMg?=
 =?us-ascii?q?jYFAgMaAQaCXAMDAQIgIwopAwMBAgYBASQCIgQCAgMBUxkFgxwBggEBBKZygS+?=
 =?us-ascii?q?FQINkgQ2BC4sWghaMKIJXAo89epA+BwKHCIo8CxiCKYc9h1eZMIFcgXgzGiODP?=
 =?us-ascii?q?AmCR4kdhHM8MYEHHIk1gXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,330,1539673200"; 
   d="scan'208";a="44122833"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 08 Dec 2018 03:43:23 -0800
Received: from localhost ([::1]:50400 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVanP-0001FZ-Cz
	for like.xu@linux.intel.com; Sat, 08 Dec 2018 06:29:19 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59981)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gVacZ-00056L-RX
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:18:08 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gVacW-0004Bo-MO
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:18:07 -0500
Received: from mx1.redhat.com ([209.132.183.28]:51750)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gVacW-0004Bg-D1
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:18:04 -0500
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
	[10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id ACB153001C2D;
	Sat,  8 Dec 2018 11:18:03 +0000 (UTC)
Received: from localhost (unknown [10.36.112.11])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 4DB4818A49;
	Sat,  8 Dec 2018 11:17:59 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Sat,  8 Dec 2018 15:15:54 +0400
Message-Id: <20181208111606.8505-16-marcandre.lureau@redhat.com>
In-Reply-To: <20181208111606.8505-1-marcandre.lureau@redhat.com>
References: <20181208111606.8505-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.47]);
	Sat, 08 Dec 2018 11:18:03 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH for-4.0 v7 15/27] qapi: add an error in case a
 discriminator is conditional
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
	armbru@redhat.com, Michael Roth <mdroth@linux.vnet.ibm.com>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Making a discriminator conditional doesn't make much sense. Instead,
the union could be made conditional.

Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
---
 scripts/qapi/common.py                          |  8 ++++++++
 tests/Makefile.include                          |  1 +
 .../flat-union-invalid-if-discriminator.err     |  1 +
 .../flat-union-invalid-if-discriminator.exit    |  1 +
 .../flat-union-invalid-if-discriminator.json    | 17 +++++++++++++++++
 .../flat-union-invalid-if-discriminator.out     |  0
 6 files changed, 28 insertions(+)
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.err
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.exit
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.json
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.out

diff --git a/scripts/qapi/common.py b/scripts/qapi/common.py
index aec51acb07..f79b3fad54 100644
--- a/scripts/qapi/common.py
+++ b/scripts/qapi/common.py
@@ -578,6 +578,7 @@ def find_alternate_member_qtype(qapi_type):
 # Return the discriminator enum define if discriminator is specified as =
an
 # enum type, otherwise return None.
 def discriminator_find_enum_define(expr):
+    name =3D expr['union']
     base =3D expr.get('base')
     discriminator =3D expr.get('discriminator')
=20
@@ -594,6 +595,7 @@ def discriminator_find_enum_define(expr):
=20
     if isinstance(discriminator_value, dict):
         discriminator_value =3D discriminator_value['type']
+
     return enum_types.get(discriminator_value)
=20
=20
@@ -800,7 +802,12 @@ def check_union(expr, info):
                                "struct '%s'"
                                % (discriminator, base))
         if isinstance(discriminator_value, dict):
+            if discriminator_value.get('if'):
+                raise QAPISemError(info, 'The discriminator %s.%s for un=
ion %s '
+                                   'must not be conditional' %
+                                   (base, discriminator, name))
             discriminator_value =3D discriminator_value['type']
+
         enum_define =3D enum_types.get(discriminator_value)
         allow_metas =3D ['struct']
         # Do not allow string discriminator
@@ -1023,6 +1030,7 @@ def check_exprs(exprs):
=20
         if 'include' in expr:
             continue
+        info =3D expr_elem['info']
         if 'union' in expr and not discriminator_find_enum_define(expr):
             name =3D '%sKind' % expr['union']
         elif 'alternate' in expr:
diff --git a/tests/Makefile.include b/tests/Makefile.include
index ea5d1e8787..3f5a1d0c30 100644
--- a/tests/Makefile.include
+++ b/tests/Makefile.include
@@ -409,6 +409,7 @@ qapi-schema +=3D flat-union-inline-invalid-dict.json
 qapi-schema +=3D flat-union-int-branch.json
 qapi-schema +=3D flat-union-invalid-branch-key.json
 qapi-schema +=3D flat-union-invalid-discriminator.json
+qapi-schema +=3D flat-union-invalid-if-discriminator.json
 qapi-schema +=3D flat-union-no-base.json
 qapi-schema +=3D flat-union-optional-discriminator.json
 qapi-schema +=3D flat-union-string-discriminator.json
diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.err b/=
tests/qapi-schema/flat-union-invalid-if-discriminator.err
new file mode 100644
index 0000000000..0c94c9860d
--- /dev/null
+++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.err
@@ -0,0 +1 @@
+tests/qapi-schema/flat-union-invalid-if-discriminator.json:13: The discr=
iminator TestBase.enum1 for union TestUnion must not be conditional
diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.exit b=
/tests/qapi-schema/flat-union-invalid-if-discriminator.exit
new file mode 100644
index 0000000000..d00491fd7e
--- /dev/null
+++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.exit
@@ -0,0 +1 @@
+1
diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.json b=
/tests/qapi-schema/flat-union-invalid-if-discriminator.json
new file mode 100644
index 0000000000..618ec36396
--- /dev/null
+++ b/tests/qapi-schema/flat-union-invalid-if-discriminator.json
@@ -0,0 +1,17 @@
+{ 'enum': 'TestEnum',
+  'data': [ 'value1', 'value2' ] }
+
+{ 'struct': 'TestBase',
+  'data': { 'enum1': { 'type': 'TestEnum', 'if': 'FOO' } } }
+
+{ 'struct': 'TestTypeA',
+  'data': { 'string': 'str' } }
+
+{ 'struct': 'TestTypeB',
+  'data': { 'integer': 'int' } }
+
+{ 'union': 'TestUnion',
+  'base': 'TestBase',
+  'discriminator': 'enum1',
+  'data': { 'value1': 'TestTypeA',
+            'value2': 'TestTypeB' } }
diff --git a/tests/qapi-schema/flat-union-invalid-if-discriminator.out b/=
tests/qapi-schema/flat-union-invalid-if-discriminator.out
new file mode 100644
index 0000000000..e69de29bb2
--=20
2.20.0.rc1


