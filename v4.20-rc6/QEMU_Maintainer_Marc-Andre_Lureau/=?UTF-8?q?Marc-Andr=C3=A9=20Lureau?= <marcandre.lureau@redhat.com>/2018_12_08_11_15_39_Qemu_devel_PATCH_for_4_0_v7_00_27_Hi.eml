Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:55:26 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga003.jf.intel.com (orsmga003.jf.intel.com [10.7.209.27])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 4307E5804FD
	for <like.xu@linux.intel.com>; Sat,  8 Dec 2018 03:16:34 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga003-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 08 Dec 2018 03:16:34 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A67kONxdKWpZdYTkgNxcMC634lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcW/ZB7h7PlgxGXEQZ/co6odzbaO4+a4ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTahYr5+Ngm6oRnMvcQKnIVuLbo8xAHUqXVSYe?=
 =?us-ascii?q?RWwm1oJVOXnxni48q74YBu/SdNtf8/7sBMSar1cbg2QrxeFzQmLns65Nb3uhnZ?=
 =?us-ascii?q?TAuA/WUTX2MLmRdVGQfF7RX6XpDssivms+d2xSeXMdHqQb0yRD+v6bpgRh31hy?=
 =?us-ascii?q?cdLzM38H/ZhMJzgq1UvB2vqAFxw5bWbY+XO/dyY63Qcc8ESmpaRctRSzVBD5mg?=
 =?us-ascii?q?Y4cTE+YMP+BVpJT9qVsUqhu+ABGhCuT1xT9SmnD6xLE30+I8HgHcxgsrAtQAsG?=
 =?us-ascii?q?nOrNrrLqgSTP2+wa7NzTrZdfNZxS3y6I7VfRA7v/6AR7ZwcdfLyUYxDQzFk06d?=
 =?us-ascii?q?qZb7MDyI1uQCqXSb4/B8WuKojm4qsgd8qSWsyMc0koTFmJ4Zx1Pe+Slk3Yo4Js?=
 =?us-ascii?q?e0RFB1bNOkCpdcqiOXO5NoTs8+R2xkojs2x7MYtZKhYSQHy5oqywTBZ/GEdYWD?=
 =?us-ascii?q?/wjtW/yLIThigXJoYLK/iAi28Uin0uD8Usi00E1WripeiNXMuXYN1wHJ5siAUP?=
 =?us-ascii?q?t98V+t2TeJ1w/N9uFJOV44mbbYJpI737I8i5kevV7dEiL4mEj6lrKae0c89uit?=
 =?us-ascii?q?8evnY7HmppGGN49zjwHzKr0uldK6AeQlKwQBQnaU+fqi273n5EH2W7JKjuAwkq?=
 =?us-ascii?q?bFrp/aPsMXpqq4Aw9WzIkv8Rm+Dyq+3dQcnHkHKk9FeR2dg4joPVHOPO73DfOl?=
 =?us-ascii?q?j1uwlzdrwuvLPrvmApXLIXjDlqrhcax6605Gxwo/1cpf6I5MCrEdPPLzXVf8tN?=
 =?us-ascii?q?jZDh86LQO42enmCMhm24MaWGKPBLKZMazIvV+J4OIvP/eDZIsPtDnhLPgl4q2m?=
 =?us-ascii?q?sHkihFVIfbW1xYBFLze8H+96OAOfZnzjhMpHFn0F+Q83TejvgVvFViZPZnG0RO?=
 =?us-ascii?q?Ul6zQmTY6rE4rHFb2rm6GLiSKyH5lKYTJfB1WRVHvlaYiAHu0BcT+fOdNJlDsC?=
 =?us-ascii?q?Wr68DYg72ka1qQX4xrF7e/fS4TASrpn51dJ4tNHUwAg/8CExA8mD3mWlSWZykW?=
 =?us-ascii?q?UVATgs0/NRu0t4n3KKy6M9qvpUD10bw+5TXw4nfcrZxvZxAtb+QA+HesqTRV+7?=
 =?us-ascii?q?as+rDTE4UpQ6xNpYMBU1IMmrkh2Wh3niOLQSjbHeXJE=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DOAAA4pwtcmBHrdtBkHgEGBwaBVAYLA?=
 =?us-ascii?q?YEwKoEPgSmDeoh4izKbVBEYAxGHXSI3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhs?=
 =?us-ascii?q?OIwyCNgUCAxgJgl8EAiAjCikDAwECBgIkAiIEAgIDAXGCUUsBggEBBKcagS+EQ?=
 =?us-ascii?q?UA/g2SBDYELixeCFowoglcCiROGKHqQNQcChwiKOwsYgimHO4dXiw+OH4FcgXc?=
 =?us-ascii?q?zGiODPAmLZIRzPDGBBxyJNIF3AQE?=
X-IPAS-Result: =?us-ascii?q?A0DOAAA4pwtcmBHrdtBkHgEGBwaBVAYLAYEwKoEPgSmDeoh?=
 =?us-ascii?q?4izKbVBEYAxGHXSI3Bg0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCNgUCAxgJg?=
 =?us-ascii?q?l8EAiAjCikDAwECBgIkAiIEAgIDAXGCUUsBggEBBKcagS+EQUA/g2SBDYELixe?=
 =?us-ascii?q?CFowoglcCiROGKHqQNQcChwiKOwsYgimHO4dXiw+OH4FcgXczGiODPAmLZIRzP?=
 =?us-ascii?q?DGBBxyJNIF3AQE?=
X-IronPort-AV: E=Sophos;i="5.56,330,1539673200"; 
   d="scan'208";a="44121830"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 08 Dec 2018 03:16:33 -0800
Received: from localhost ([::1]:50333 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVab2-0003mH-LV
	for like.xu@linux.intel.com; Sat, 08 Dec 2018 06:16:32 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59519)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gVaar-0003m9-Su
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:16:23 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@redhat.com>) id 1gVaao-0003W5-No
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:16:21 -0500
Received: from mx1.redhat.com ([209.132.183.28]:45870)
	by eggs.gnu.org with esmtps (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.71) (envelope-from <marcandre.lureau@redhat.com>)
	id 1gVaao-0003Vf-FK
	for qemu-devel@nongnu.org; Sat, 08 Dec 2018 06:16:18 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com
	[10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 1B00CCD4C2
	for <qemu-devel@nongnu.org>; Sat,  8 Dec 2018 11:16:17 +0000 (UTC)
Received: from localhost (unknown [10.36.112.11])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 601BF5C5FE;
	Sat,  8 Dec 2018 11:16:08 +0000 (UTC)
From: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>
To: qemu-devel@nongnu.org
Date: Sat,  8 Dec 2018 15:15:39 +0400
Message-Id: <20181208111606.8505-1-marcandre.lureau@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.38]);
	Sat, 08 Dec 2018 11:16:17 +0000 (UTC)
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: GNU/Linux 2.2.x-3.x [generic]
	[fuzzy]
X-Received-From: 209.132.183.28
Subject: [Qemu-devel] [PATCH for-4.0 v7 00/27] Hi,
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: =?UTF-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@redhat.com>,
	armbru@redhat.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

This is the second part of the "add #if pre-processor conditions to
generated code" series, adding schema member conditions (roughly
16-38/49).

Members can be exploded as dictionnary with 'type'/'if' keys:

{ 'struct': 'TestIfStruct', 'data':
  { 'foo': 'int',
    'bar': { 'type': 'int', 'if': 'defined(TEST_IF_STRUCT_BAR)'} } }

Enum values can be exploded as dictionnary with 'type'/'if' keys:

{ 'enum': 'TestIfEnum', 'data':
  [ 'foo',
    { 'name' : 'bar', 'if': 'defined(TEST_IF_ENUM_BAR)' } ] }

v7:
- replaced osdep.h include by a #warning check
- renamed event_names/event_enum_members, enum_name/event_enum_ename
- move normalization after checking
- simplify make_enum_members()
- some tests changes
- rebase/conflicts tweaks
- squash documentation changes in related patches
- tweak generated documentation code & output
- modify commit comments, add rb tags

v6:
- subset of v5 series: add schema member conditions
- split "qapi: factor out check_known_keys()", error report improvements
- add a patch to "qapi: include osdep.h in type headers" to avoid
  potential build configuration change issues
- rebased, on top of Markus's qapi-next branch (first 4 patches,
  included for patchew testing)

Marc-Andr=C3=A9 Lureau (27):
  qapi: make sure osdep.h is included in type headers
  qapi: do not define enumeration value explicitly
  qapi: rename QAPISchemaEnumType.values to .members
  qapi: change enum visitor and gen_enum* to take QAPISchemaMember
  tests: print enum type members more like object type members
  qapi: factor out checking for keys
  qapi: improve reporting of unknown or missing keys
  qapi: add a dictionary form with 'name' key for enum members
  qapi: add 'if' to enum members
  qapi-events: add 'if' condition to implicit event enum
  qapi: pass long form enum to make_enum_members
  qapi: rename allow_dict to allow_implicit
  qapi: add a dictionary form for TYPE
  qapi: add 'if' to implicit struct members
  qapi: add an error in case a discriminator is conditional
  qapi: add 'if' to union members
  qapi: simplify make_enum_members()
  tests/qapi: add command with condition on union argument
  qapi: add 'if' to alternate members
  tests/qapi: add command with condition on alternate argument
  qapi: add #if conditions to generated code members
  qapi: add 'If:' condition to enum values documentation
  qapi: add 'If:' condition to struct members documentation
  qapi: add condition to variants documentation
  qapi: break long lines at 'data' member
  qapi: add more conditions to SPICE
  qapi: add conditions to REPLICATION type/commands on the schema

 qapi/block-core.json                          |  26 +-
 qapi/char.json                                | 150 ++++++-----
 qapi/migration.json                           |  15 +-
 qapi/misc.json                                |   7 +-
 qapi/net.json                                 |   3 +-
 qapi/tpm.json                                 |   5 +-
 qapi/ui.json                                  |   3 +-
 scripts/qapi/common.py                        | 253 ++++++++++++------
 scripts/qapi/doc.py                           |  30 ++-
 scripts/qapi/events.py                        |  13 +-
 scripts/qapi/introspect.py                    |  16 +-
 scripts/qapi/types.py                         |  13 +-
 scripts/qapi/visit.py                         |   8 +-
 migration/colo.c                              |  16 +-
 monitor.c                                     |   5 -
 docs/devel/qapi-code-gen.txt                  |  19 ++
 tests/Makefile.include                        |  11 +-
 tests/qapi-schema/alternate-base.err          |   1 +
 tests/qapi-schema/alternate-invalid-dict.err  |   1 +
 ...ember.exit =3D> alternate-invalid-dict.exit} |   0
 tests/qapi-schema/alternate-invalid-dict.json |   4 +
 ...-member.out =3D> alternate-invalid-dict.out} |   0
 tests/qapi-schema/comments.out                |  14 +-
 tests/qapi-schema/doc-bad-section.out         |  13 +-
 tests/qapi-schema/doc-good.json               |  11 +-
 tests/qapi-schema/doc-good.out                |  22 +-
 tests/qapi-schema/doc-good.texi               |   7 +-
 tests/qapi-schema/double-type.err             |   1 +
 tests/qapi-schema/empty.out                   |   9 +-
 tests/qapi-schema/enum-bad-member.err         |   1 +
 tests/qapi-schema/enum-bad-member.exit        |   1 +
 tests/qapi-schema/enum-bad-member.json        |   2 +
 tests/qapi-schema/enum-bad-member.out         |   0
 .../qapi-schema/enum-dict-member-unknown.err  |   2 +
 .../qapi-schema/enum-dict-member-unknown.exit |   1 +
 .../qapi-schema/enum-dict-member-unknown.json |   2 +
 .../qapi-schema/enum-dict-member-unknown.out  |   0
 tests/qapi-schema/enum-dict-member.err        |   1 -
 tests/qapi-schema/enum-dict-member.json       |   2 -
 tests/qapi-schema/enum-if-invalid.err         |   1 +
 tests/qapi-schema/enum-if-invalid.exit        |   1 +
 tests/qapi-schema/enum-if-invalid.json        |   3 +
 tests/qapi-schema/enum-if-invalid.out         |   0
 tests/qapi-schema/event-case.out              |   9 +-
 .../qapi-schema/event-member-invalid-dict.err |   1 +
 .../event-member-invalid-dict.exit            |   1 +
 .../event-member-invalid-dict.json            |   2 +
 .../qapi-schema/event-member-invalid-dict.out |   0
 tests/qapi-schema/event-nest-struct.json      |   2 +-
 .../flat-union-inline-invalid-dict.err        |   1 +
 .../flat-union-inline-invalid-dict.exit       |   1 +
 .../flat-union-inline-invalid-dict.json       |  11 +
 .../flat-union-inline-invalid-dict.out        |   0
 tests/qapi-schema/flat-union-inline.json      |   2 +-
 .../flat-union-invalid-if-discriminator.err   |   1 +
 .../flat-union-invalid-if-discriminator.exit  |   1 +
 .../flat-union-invalid-if-discriminator.json  |  17 ++
 .../flat-union-invalid-if-discriminator.out   |   0
 tests/qapi-schema/ident-with-escape.out       |   9 +-
 tests/qapi-schema/include-relpath.out         |  14 +-
 tests/qapi-schema/include-repetition.out      |  14 +-
 tests/qapi-schema/include-simple.out          |  14 +-
 tests/qapi-schema/indented-expr.out           |   9 +-
 .../nested-struct-data-invalid-dict.err       |   1 +
 .../nested-struct-data-invalid-dict.exit      |   1 +
 .../nested-struct-data-invalid-dict.json      |   3 +
 .../nested-struct-data-invalid-dict.out       |   0
 tests/qapi-schema/nested-struct-data.json     |   2 +-
 tests/qapi-schema/qapi-schema-test.json       |  39 ++-
 tests/qapi-schema/qapi-schema-test.out        |  74 ++++-
 .../struct-member-invalid-dict.err            |   1 +
 .../struct-member-invalid-dict.exit           |   1 +
 .../struct-member-invalid-dict.json           |   3 +
 .../struct-member-invalid-dict.out            |   0
 tests/qapi-schema/test-qapi.py                |   9 +-
 .../qapi-schema/union-branch-invalid-dict.err |   1 +
 .../union-branch-invalid-dict.exit            |   1 +
 .../union-branch-invalid-dict.json            |   4 +
 .../qapi-schema/union-branch-invalid-dict.out |   0
 tests/qapi-schema/unknown-expr-key.err        |   3 +-
 tests/qapi-schema/unknown-expr-key.json       |   2 +-
 81 files changed, 681 insertions(+), 266 deletions(-)
 create mode 100644 tests/qapi-schema/alternate-invalid-dict.err
 rename tests/qapi-schema/{enum-dict-member.exit =3D> alternate-invalid-d=
ict.exit} (100%)
 create mode 100644 tests/qapi-schema/alternate-invalid-dict.json
 rename tests/qapi-schema/{enum-dict-member.out =3D> alternate-invalid-di=
ct.out} (100%)
 create mode 100644 tests/qapi-schema/enum-bad-member.err
 create mode 100644 tests/qapi-schema/enum-bad-member.exit
 create mode 100644 tests/qapi-schema/enum-bad-member.json
 create mode 100644 tests/qapi-schema/enum-bad-member.out
 create mode 100644 tests/qapi-schema/enum-dict-member-unknown.err
 create mode 100644 tests/qapi-schema/enum-dict-member-unknown.exit
 create mode 100644 tests/qapi-schema/enum-dict-member-unknown.json
 create mode 100644 tests/qapi-schema/enum-dict-member-unknown.out
 delete mode 100644 tests/qapi-schema/enum-dict-member.err
 delete mode 100644 tests/qapi-schema/enum-dict-member.json
 create mode 100644 tests/qapi-schema/enum-if-invalid.err
 create mode 100644 tests/qapi-schema/enum-if-invalid.exit
 create mode 100644 tests/qapi-schema/enum-if-invalid.json
 create mode 100644 tests/qapi-schema/enum-if-invalid.out
 create mode 100644 tests/qapi-schema/event-member-invalid-dict.err
 create mode 100644 tests/qapi-schema/event-member-invalid-dict.exit
 create mode 100644 tests/qapi-schema/event-member-invalid-dict.json
 create mode 100644 tests/qapi-schema/event-member-invalid-dict.out
 create mode 100644 tests/qapi-schema/flat-union-inline-invalid-dict.err
 create mode 100644 tests/qapi-schema/flat-union-inline-invalid-dict.exit
 create mode 100644 tests/qapi-schema/flat-union-inline-invalid-dict.json
 create mode 100644 tests/qapi-schema/flat-union-inline-invalid-dict.out
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.err
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.exit
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.json
 create mode 100644 tests/qapi-schema/flat-union-invalid-if-discriminator=
.out
 create mode 100644 tests/qapi-schema/nested-struct-data-invalid-dict.err
 create mode 100644 tests/qapi-schema/nested-struct-data-invalid-dict.exi=
t
 create mode 100644 tests/qapi-schema/nested-struct-data-invalid-dict.jso=
n
 create mode 100644 tests/qapi-schema/nested-struct-data-invalid-dict.out
 create mode 100644 tests/qapi-schema/struct-member-invalid-dict.err
 create mode 100644 tests/qapi-schema/struct-member-invalid-dict.exit
 create mode 100644 tests/qapi-schema/struct-member-invalid-dict.json
 create mode 100644 tests/qapi-schema/struct-member-invalid-dict.out
 create mode 100644 tests/qapi-schema/union-branch-invalid-dict.err
 create mode 100644 tests/qapi-schema/union-branch-invalid-dict.exit
 create mode 100644 tests/qapi-schema/union-branch-invalid-dict.json
 create mode 100644 tests/qapi-schema/union-branch-invalid-dict.out

--=20
2.20.0.rc1


