Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 09 Dec 2018 18:52:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga004.jf.intel.com (orsmga004.jf.intel.com [10.7.209.38])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C63CD5804F9;
	Fri,  7 Dec 2018 11:23:18 -0800 (PST)
Received: from orsmga101.jf.intel.com ([10.7.208.22])
  by orsmga004-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 11:23:18 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AUG0X6hLau/oP7oIr+NmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL///rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZQsleWDFPDIO7?=
 =?us-ascii?q?YYQNAeQPMuVWr4fjqVsVtRuzBxKhBP/2yj9NmnP23bE23uYnHArb3AIgBdUOsH?=
 =?us-ascii?q?HModjpMqcdTOC0x7TOwzXec/NW3jL96InSchA6ovGMXK97fM3VyUkyCwPFiU6d?=
 =?us-ascii?q?ppbgPzyPyusCqXCb7+t8Ve21j24rsQdxrSazxso1jITCm4Ebykjc+Cln3Io4Ic?=
 =?us-ascii?q?e0RFN1bNK6CpdcqiKXO5dsTs4jQWxkoDg2x7watZKneSUG1YgrywPDZ/GCaIeE?=
 =?us-ascii?q?/gzvW/iULDp8mn5oerOyihOp/kWvzuDxVMy530pQoSdLj9bBs3QA2hLO5cecT/?=
 =?us-ascii?q?Z98Eas1SuR2A3V9+pKO1o7lbDBJJ4k2rMwloQcsUDEHiLuhkX2g7GZdl8+9uir?=
 =?us-ascii?q?9evneLPmqYGYN4NujQH+KKsultS+AeQ+LAcOQ3CW9fqg2LDn50H1XbtHguMsnq?=
 =?us-ascii?q?XEs53WOd4Xq6+7DgNN14Ys8Re/DzOo0NQCmnkHKUpIeBaGj4jvJlHPL+n0DfSh?=
 =?us-ascii?q?jFS2ljdk2fTGMqTmApTDKHjMjq3hcK1j605T1gUz18pT55FKBbEbJvL8REvxuM?=
 =?us-ascii?q?bfDh8jPAy42/znB8ll1oMCRWKPBbeUMKfTsV+L+O0jOeaNZJIOtTb5Kvgl4ePu?=
 =?us-ascii?q?jHAjlV8ce6mpwYUYaHSiEvt6JEWZZGLmgs0dHmcSogo+UOvqhUWCUTFJZnayQ7?=
 =?us-ascii?q?gz5jYhBIKmEIfMXIatgLOa0Se/H51WYH1GC1+WHXfpcYWER+kDaCaILsB9lTwE?=
 =?us-ascii?q?UKCrS5U92hG2qA/6171nI/LW+i0fq53vztt15+rVlRE08jx5FMCd02CLT2FpkW?=
 =?us-ascii?q?IEXT423KZjoUNjzlePy7R3g/tdFdZL/fNGTh86NYLAz+x9E939QBnBfteOSFal?=
 =?us-ascii?q?WNmmGys+TtAqzt8KYkZ9Hciijx/Z0yqrBb8Vi6KEBJgu/q3A2HjxIt53y2za26?=
 =?us-ascii?q?k5k1kmXsxPOHWlhqFl8QjfHYrJk0SDmKaseqQRxyrN9GaFzWqTs0BUSg9wUaPZ?=
 =?us-ascii?q?XX8BYkvat8j25kTHT7W2E7QoLhNBydKeKqtNctDmkE9JROn9N9jEY2K+gWGwBQ?=
 =?us-ascii?q?2WybOKa4bqf2Yd3CDZCEUflwAT/HCGNRUxByu7omLeCiBuGkzrY0/27eZ+r3a7?=
 =?us-ascii?q?RFcuzw6Wd01hy6a1+hkNiPOBUfwTwKwLtD0hqzpuGla9xMzZC9ybqgplfaVcZ8?=
 =?us-ascii?q?494Vhd2WLYsQx9IoKvL6R4ilECdAR3ulvk1w9rBYVYjcgqsHQqwRJuKaKZ1VNB?=
 =?us-ascii?q?cC+Y3ZDwO7HNNmn+5heva7TS2lHf1taW9bwC6PA5q1XloQGoGVAu83Rh09lJzX?=
 =?us-ascii?q?Sc4o/GAxYVUZL0Skw37QR1p6nGYikh4IPZzWdjMa2qvT7Nxd0oBPEpxQ29f9hC?=
 =?us-ascii?q?KqyEEgzyE8oEB8W1LOwqml6pbg8LPexI9a40Od+meOWC2KKxIOlgmzemh3xd4I?=
 =?us-ascii?q?9hykKM6zZ8SunQ0pcF3vGUxBeIWy39jVehqM/3n49EaCoWHmq+zyjkGYFQardz?=
 =?us-ascii?q?fYYNFWehPcm3ys9iiJ7qXn5S7ESjCE8e2M+1ZRqSaETw3RdR1UsLu3Ongza3zz?=
 =?us-ascii?q?tunzEvsKWfxi3Oz/3+exUdPm5EWXdtjU3rIYiylN0aWEmobw40lBqq/0r6xq5b?=
 =?us-ascii?q?pLhhIGnXW0tHYy/2L2R6WKuqqrWCe9JP6I8vsShPUOW8YEqWS77nrxsBziPjGX?=
 =?us-ascii?q?BTxDQ6dzGsp5X4kAZ2iGObLHZvsnXZfdt8ygvY5NzZXfRRxCYJRDFkiTnLAVix?=
 =?us-ascii?q?J9up8s+Ol5fAseC+UHitVoZJfinozoOAtS276nNsARCkm/Czm9vnERU10CPh1t?=
 =?us-ascii?q?lqUznIowj4YoXxy6u6NudndFFyBFDg88p6Bp1+kowoiZAQw3cagY+Z/XgGkWf1?=
 =?us-ascii?q?Kthb3aP+bHwQRT8E2dLV4Q7l2FF9IXKN3Y72SnKdws55bdmgfmwWwj4979xNCK?=
 =?us-ascii?q?qM77xLhyp1rkC4rQLMe/d9mDgdxOAq6H4bheEJpQUswj+cArAUAUlXIyjsmw6U?=
 =?us-ascii?q?4NC5qaVdfHyvfqSo1EpigdChC6mPogRdWHb6YJguByFx4dtkMFLQznLz8Jrrd8?=
 =?us-ascii?q?fKbdIcrRCUlxbAj+5IKJM+jPYKhCxnOX7jsn0h0eI0kRtu3ZSitoidN2pt5L65?=
 =?us-ascii?q?AgJfNjDte8MT/TTtgbxfn8mM2YCvA45hGi4KXJbzSfKoETQStenoNgqUET08rG?=
 =?us-ascii?q?ubFqTbHQOF9EhmqHfPGYixN36LPHkZ0cliRB6FKUNEmg8UWzE6noMjGgCu2czs?=
 =?us-ascii?q?a0N55jEX5l7lpRpA0ONoNx/jUmjBoAekcCs7SJ+aLBBO9AFN+1/VMdCC7uJ0By?=
 =?us-ascii?q?xY/IeurAmTJWyAfQhIEXsFWk+ZB1DgI7mu48PP8/ODC+q6LvvOZ6iOqONEW/eJ?=
 =?us-ascii?q?w5KvzpVp/zKWOsqTOXliCuUx2lBfUnBhB8TZhzIPRjQXliLKcs6bvQq89Tdxrs?=
 =?us-ascii?q?yl6/TrXwTv5YSUBrtWMNVv/Q22gKiZO+6RgiZ5NShX1pcWyXDUz7gf2UYYizty?=
 =?us-ascii?q?eDm1DbQAqSnNQbrQmqBJDh4baCBzNMpS46I/xAlNPsHbhc3v1r5llf44EFNFVV?=
 =?us-ascii?q?3nmsG0as0GOWC9NFXbBEmVMLSKPyHEw8byYamkU71fkP1UtwGsuTacC0LsJCmD?=
 =?us-ascii?q?mCLzVx+xMeBAliWbPB1FtYG5cxZtD3XjTd38Zh26Nt93kSM5wbkuinzWMm4cNC?=
 =?us-ascii?q?B2c1lRob2I8SNYnvJ/FnRd7npkKOmIgTqW4/PEJZYWr/RrBD95l+Zb4HQ81rtU?=
 =?us-ascii?q?4ztIRP1zmCvOsNFup0uqnfWIyjpiSBBOsCpEhJqXvUV+PqXU7plBVmzC/BII7G?=
 =?us-ascii?q?WQDQwFptplCtL1vaBQxcPClKbyKDdE7tLV8tEQB8nSKMKbLnUhNQDlFyLTDAsA?=
 =?us-ascii?q?HnaXMjTkikVb2NqS7HyOsp8iqpX2g50IAutAWVUzUPFcAUR/HcceJ493Uyk/lr?=
 =?us-ascii?q?izjcgU6H74px7UEpZ0pJfCA9uUDeSnDCuFirxFfQALwPusKZkPMaXy3kVpY0F7?=
 =?us-ascii?q?gI3OXUzdQYYe8WVacgYorRAVozBFRWop1hegM1v17Q=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AHAADuxwpch0O0hNFjGgEBAQEBAgEBA?=
 =?us-ascii?q?QEHAgEBAQGBVAIBAQEBCwGBMII7J4N6lCpQAQEGgTUUiQyJNYYeA0oUAQEYEwG?=
 =?us-ascii?q?EQIMdIjcGDQEDAQEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQECAQECIAQZA?=
 =?us-ascii?q?QE3AQQBCQEBChgCAiYCAgMxAQUBHAYTBYMcgXUFCAEEmhU8ih1wfDOCdgEBBYc?=
 =?us-ascii?q?oCBJ5ixcXeIEHgTgfgkyFAYMEMYImiymFEJAwCZFdBoljh1UslWuCXQIEAgQFA?=
 =?us-ascii?q?gUPIYE7gXd7CmUBgkE+gV0MFxKDOIp0HzIBgQQBASGKRAEB?=
X-IPAS-Result: =?us-ascii?q?A0AHAADuxwpch0O0hNFjGgEBAQEBAgEBAQEHAgEBAQGBVAI?=
 =?us-ascii?q?BAQEBCwGBMII7J4N6lCpQAQEGgTUUiQyJNYYeA0oUAQEYEwGEQIMdIjcGDQEDA?=
 =?us-ascii?q?QEBAQEBAgETAQEBCgsJCCkjDII2JAGCYQEBAQECAQECIAQZAQE3AQQBCQEBChg?=
 =?us-ascii?q?CAiYCAgMxAQUBHAYTBYMcgXUFCAEEmhU8ih1wfDOCdgEBBYcoCBJ5ixcXeIEHg?=
 =?us-ascii?q?TgfgkyFAYMEMYImiymFEJAwCZFdBoljh1UslWuCXQIEAgQFAgUPIYE7gXd7CmU?=
 =?us-ascii?q?BgkE+gV0MFxKDOIp0HzIBgQQBASGKRAEB?=
X-IronPort-AV: E=Sophos;i="5.56,327,1539673200"; 
   d="scan'208";a="44059541"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 07 Dec 2018 11:23:17 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726233AbeLGTXO (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Fri, 7 Dec 2018 14:23:14 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:38244 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726069AbeLGTXO (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 7 Dec 2018 14:23:14 -0500
Received: by mail-pl1-f194.google.com with SMTP id e5so2254055plb.5
        for <linux-kernel@vger.kernel.org>; Fri, 07 Dec 2018 11:23:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=amacapital-net.20150623.gappssmtp.com; s=20150623;
        h=mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=tpMgLz8022es6nTdDC6vCIIc+GNybJRH05E0J5Oj2VU=;
        b=WObCZGoLaYqDPSDDilAbJevIjVQAGoAq0HCrkKmpUqL+bMw3yop0+HR0MELHqr/Q16
         ka3Ilw5f+EtP1Bn4SB0X6PfClstVxywWLavqinXG+wKpnfU/HtqBQotTW0R3eA99lrjv
         S4p0UcjNkgACVR16VIVaCuin9dyOGjGDRJYZ2LBcjR7HnHEqquX1yQf+dq1jCwapUQ5H
         06nct7T1hQdvS0c2yc70Cr8+HVVrjwybUjX+IwTIlW34QX5rJY6dyQEP1vlvyGGLqXdF
         LGmlXGRL74+0E+D3DtWb8HXy1rdOeLlww7g54L3lxVJZaiCXwoQ8k02yCK4f1PeAP5bh
         HPwg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:subject:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to;
        bh=tpMgLz8022es6nTdDC6vCIIc+GNybJRH05E0J5Oj2VU=;
        b=mLNtRSHsRHW7IPkCPp0wRi1FXR31Bp377JzLWCVEd0gVO9qVKr1/6sJRpX1Up8RJKH
         80M+pHloKqsU1vMPvqUPGK2963bDgHA6abZQumYzSlxetAfSfk71wJjXDRO7HXVSgsCO
         9WEfc+E61/8lJhy62bxYm4qtXK28dx8uMkEUp5yUZDwSIe2DQqLPjC57Ra6H0HvT1VpX
         /RNr9PUpi2vNywdqMiVITWJ0ncu+hdM47lxiTrHzOb9DD2AImVgVzFMGIAKhZKr9sg4f
         UXGYUDQfNeBIFPXCj+KvqAzjTKLSi80MOkX+buVslXKmDT4++2oOKJOIhwhmPMv5kHyS
         GcDg==
X-Gm-Message-State: AA+aEWartmv7dsNOeBn8cPshLJJONUpFIG5LJ7vaNhln3tQRBuAoJGht
        YHm1fTGPhO5py2hLJxAC7mmIQA==
X-Google-Smtp-Source: AFSGD/XQLYK0sTtJacSi7NJF8SDvbleyWRHM0FivyT4oYZ6o3Nlhz/AAHEo1lnCAWvhUCb73BQPQUA==
X-Received: by 2002:a17:902:8c91:: with SMTP id t17mr3173993plo.119.1544210593296;
        Fri, 07 Dec 2018 11:23:13 -0800 (PST)
Received: from ?IPv6:2600:1010:b02e:9276:b497:ca3d:93db:f61e? ([2600:1010:b02e:9276:b497:ca3d:93db:f61e])
        by smtp.gmail.com with ESMTPSA id p7sm6260039pfa.22.2018.12.07.11.23.11
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 07 Dec 2018 11:23:12 -0800 (PST)
Content-Type: text/plain;
        charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: [RFC PATCH v2 4/4] x86/vdso: Add __vdso_sgx_enter_enclave() to wrap SGX enclave transitions
From: Andy Lutomirski <luto@amacapital.net>
X-Mailer: iPhone Mail (16B92)
In-Reply-To: <20181207190257.GC10404@linux.intel.com>
Date: Fri, 7 Dec 2018 11:23:10 -0800
Cc: Andy Lutomirski <luto@kernel.org>,
        Thomas Gleixner <tglx@linutronix.de>,
        Ingo Molnar <mingo@redhat.com>, Borislav Petkov <bp@alien8.de>,
        X86 ML <x86@kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Peter Zijlstra <peterz@infradead.org>,
        "H. Peter Anvin" <hpa@zytor.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>,
        Josh Triplett <josh@joshtriplett.org>,
        linux-sgx@vger.kernel.org, haitao.huang@linux.intel.com,
        Jethro Beekman <jethro@fortanix.com>,
        "Dr. Greg Wettstein" <greg@enjellic.com>
Content-Transfer-Encoding: quoted-printable
Message-Id: <EFA99261-BE93-49DA-9A8F-E6FD28069AFC@amacapital.net>
References: <20181206221922.31012-1-sean.j.christopherson@intel.com> <20181206221922.31012-5-sean.j.christopherson@intel.com> <CALCETrXRJ645=08fyeoMQ949fLB1TvhsgERFVx5mAHdViEjq8Q@mail.gmail.com> <20181207165145.GB10404@linux.intel.com> <CALCETrVkEW82PzQZhJ5iS849DLY1gbd8YjH5F7P1J7hgjkjiOQ@mail.gmail.com> <20181207190257.GC10404@linux.intel.com>
To: Sean Christopherson <sean.j.christopherson@intel.com>
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


> On Dec 7, 2018, at 11:02 AM, Sean Christopherson <sean.j.christopherson@in=
tel.com> wrote:
>=20
>> On Fri, Dec 07, 2018 at 09:56:09AM -0800, Andy Lutomirski wrote:
>> On Fri, Dec 7, 2018 at 8:51 AM Sean Christopherson
>> <sean.j.christopherson@intel.com> wrote:
>>> I like that the exit handler allows userspace to trap/panic with the ful=
l
>>> call stack in place, and in a dedicated path, i.e. outside of the basic
>>> enter/exit code.  An exit handler probably doesn't fundamentally change
>>> what userspace can do with respect to debugging/reporting, but I think
>>> it would actually simplify some userspace implementations, e.g. I'd use
>>> it in my tests like so:
>>>=20
>>> long fault_handler(struct sgx_enclave_exit_info *exit_info, void *tcs, v=
oid *priv)
>>> {
>>>        if (exit_info->leaf =3D=3D SGX_EEXIT)
>>>                return 0;
>>>=20
>>>        <report exception and die/hang>
>>> }
>>>=20
>>=20
>> Hmm.  That't not totally silly, although you could accomplish almost
>> the same thing by wrapping the vDSO helper in another function.
>=20
> True, but I think there's value in having the option to intercept an
> exception at the exact(ish) point of failure, without having to return
> up the stack.
>=20
> The enclave has full access to the process' memory space, including the
> untrsuted stack.  It's not too far fetched to envision a scenario where
> the enclave corrupts the stack even if the enclave isn't intentionally
> using the stack, e.g. the host passes in variable that a points at the
> stack instead of whatever memory is supposed to be shared between the
> enclave and host.  It'd be nice to have the ability to triage something
> like that without having to e.g. configure breakpoints on the stack.

Ah, I see. You=E2=80=99re saying that, if the non-enclave stare is corrupted=
 such that RIP  is okay and RSP still points somewhere reasonable but the re=
turn address is garbage, then we can at least get to the fault handler and p=
rint something?  This only works if the fault handler pointer itself is okay=
, though, which somewhat limits the usefulness, given that its pointer is qu=
ite likely to be on the stack very close to the return address.

I really wish the ENCLU instruction had seen fit to preserve some registers.=
