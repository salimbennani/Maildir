Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:34:43 -0000
Received: from icoremail.net (unknown [209.85.215.170])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv36GP+RbdHJgAQ--.29736S3;
	Thu, 08 Nov 2018 21:52:06 +0800 (CST)
Received: from mail-pg1-f170.google.com (unknown [209.85.215.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwD32UWFP+RbqfkcAA--.9017S3;
	Thu, 08 Nov 2018 21:52:05 +0800 (CST)
Received: by mail-pg1-f170.google.com with SMTP id k1-v6so8898961pgq.1
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 05:52:05 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:content-transfer-encoding:in-reply-to
         :user-agent:sender:precedence:list-id;
        bh=6cDY3Vpse2ltF02ifz0VltdGNY78MlFUhKwx6RGNQ5c=;
        b=MhboX50YS4iPVZaEUWaV9KkKqDjASXZrIrLn0zWW3e8w3KFA8dulM9zmYvSadVGzy3
         uchf4VZe0TSQque2HKehT8WQH3VOnnefXk8N6so7GuQwPIqA/hfXIVXoCWQSYolEXKle
         Pmm+RMyQU7jofu10RazNosFeODp8j35F6Pt9hSlXr8+MAqH458upwmdjthVou8B41C2h
         o6shxFYJHC9zYpYrb7qF1GE8SyCBEcO7NL2r9rfQn5UnjnIZxTpIKcXc4iCTrYd+SdHH
         OVkNVxpMsKN5WJU4By/05FWU95oDjky/SirOuSff1w91huMRRyX+b4+h4ZQg0Boq0HyO
         0wTQ==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gKULrUYDEGmWBgOWg33Npsov7bo/pRUywfpTlgnFtevDIG+WUfI
	56OVVG1m83TJon7QK6niCVojewcGjs0Amyd7iTIVPi4YdG58ZEes2g==
X-Received: by 2002:a62:da54:: with SMTP id w20-v6mr4617902pfl.106.1541685125530;
        Thu, 08 Nov 2018 05:52:05 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp210134pjt;
        Thu, 8 Nov 2018 05:52:04 -0800 (PST)
X-Google-Smtp-Source: AJdET5cPcjRiHCkPUh3cX7Duh+jJH3V4RixR8VX5LOJp6Rso+UIbDTeoC2uP9B7I+fuzh15aZiPA
X-Received: by 2002:a62:5cc4:: with SMTP id q187-v6mr4522806pfb.47.1541685124604;
        Thu, 08 Nov 2018 05:52:04 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541685124; cv=none;
        d=google.com; s=arc-20160816;
        b=m2TcJ0K9cM5ZVr0nnzDMJ1iV/MqnHuyn2MpbOy+q4Aeh+BqZuCQjwo3YCFsTl16Nfn
         IKIl5vuKUQ0q68+1hn27STi5L3UoYCgwKnqx2oSOzDxOQ4rpOmQPq8rC7wPK3HnVbg4G
         d31qP9VHnam8sC+P6/Wf4mlQsbTbEal27epqKvbkfj36yUNj99Bmkr9v5SRDAtou9ydm
         KCyciyBrWeSFjswNs7+imViqRfKDXo2kLjsUswl/H+lv1BLok97lp7xFQzt4WTKjnZHX
         fVrbFu0XzBddrOGQuhSVqigwz7057fQjeD7bC+RnxlbDz7HS0XSNXbqkf4Pm7X63dLdr
         6leg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-transfer-encoding:content-disposition:mime-version
         :references:message-id:subject:cc:to:from:date;
        bh=6cDY3Vpse2ltF02ifz0VltdGNY78MlFUhKwx6RGNQ5c=;
        b=HG66yK1/VS477W2lY1pvzvpd7o5KHLmPARvFeG2h7e24pHfgK51Hflo+8mU2wbD729
         HEJpbaRgr5EZ2IKrLY/fRQbDXgSTW24dzV6sirckmTGKGOa35U+8qdT3ZxFiraCCJEmA
         yQKwzvMxsm4vtZ9NzTbGQxeAemIH+fBgQW6HkxWICaL5T1ll/adHE+cvyHjplzxrtq3q
         4FSA8ytiD4Q9Xslur90EtiaKRfHSSqHRIAIOr57UBFZvCkjvWAaaDayae3fg/19lbWGv
         G6MQY4uRcldTr9T8Puv1o6PPRfWIj41O8FNVYgVGg1ogej8cVTup0lqAHp34l7mNebSt
         OljA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id k18-v6si4916581pfd.163.2018.11.08.05.51.49;
        Thu, 08 Nov 2018 05:52:04 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727174AbeKHX1B (ORCPT <rfc822;ankurbansal210989@gmail.com>
        + 99 others); Thu, 8 Nov 2018 18:27:01 -0500
Received: from foss.arm.com ([217.140.101.70]:41288 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726897AbeKHX1B (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 18:27:01 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 71EB5EBD;
        Thu,  8 Nov 2018 05:51:26 -0800 (PST)
Received: from lakrids.cambridge.arm.com (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id CA6013F5BD;
        Thu,  8 Nov 2018 05:51:24 -0800 (PST)
Date: Thu, 8 Nov 2018 13:51:22 +0000
From: Mark Rutland <mark.rutland@arm.com>
To: Alex =?utf-8?Q?Benn=C3=A9e?= <alex.bennee@linaro.org>
Cc: kvm@vger.kernel.org, marc.zyngier@arm.com,
        Catalin Marinas <catalin.marinas@arm.com>,
        Will Deacon <will.deacon@arm.com>,
        open list <linux-kernel@vger.kernel.org>,
        linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
        christoffer.dall@linaro.org
Subject: Re: [RFC PATCH] KVM: arm64: don't single-step for non-emulated faults
Message-ID: <20181108135122.llmfsel32dbe2q7o@lakrids.cambridge.arm.com>
References: <20181107171031.22573-1-alex.bennee@linaro.org>
 <20181107180120.urnvkcrkh46ytsdb@lakrids.cambridge.arm.com>
 <20181107180829.sex54bxhd5wyqvan@lakrids.cambridge.arm.com>
 <87r2fv68us.fsf@linaro.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <87r2fv68us.fsf@linaro.org>
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwD32UWFP+RbqfkcAA--.9017S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxCw43Jw4UXFyxGrWfZryDGFg_yoW5KrWfpF
	WfCF15Cr4qgFWY9a42yw4ftr4S9395Gr47JrWUJ343twn0kryftF4rK34Y9FW5CrWrX3Wa
	vF10yF9rWa4UAa7anT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUBEb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik26cxK6xAEc7vF6xCjj44lc2xSY4AK
	6IIF6ry8MxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7IYx2IY67AKxVW8JVW5JwCYIxAIcV
	C0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E87Iv67AKxVW0oVCq3wCYIxAIcVC2
	z280aVCY1x0267AKxVW0oVCq3wCF04k20xvY0x0EwIxGrwCF04k20xvEw4C26cxK6c8Ij2
	8IcwCF72vE77IF4wCFx2IqxVCFs4IE7xkEbVWUJVW8JwC20s026c02F40E14v26r1j6r18
	MI8I3I0E7480Y4vE14v26r106r1rMI8E67AF67kF1VAFwI0_Jw0_GFylIxkGc2Ij64vIr4
	1lIxAIcVCF04k26cxKx2IYs7xG6r4j6FyUYxBIdaVFxhVjvjDU0xZFpf9x07bljjkUUUUU
	=

On Thu, Nov 08, 2018 at 12:40:11PM +0000, Alex Bennée wrote:
> Mark Rutland <mark.rutland@arm.com> writes:
> > On Wed, Nov 07, 2018 at 06:01:20PM +0000, Mark Rutland wrote:
> >> On Wed, Nov 07, 2018 at 05:10:31PM +0000, Alex Bennée wrote:
> >> > Not all faults handled by handle_exit are instruction emulations. For
> >> > example a ESR_ELx_EC_IABT will result in the page tables being updated
> >> > but the instruction that triggered the fault hasn't actually executed
> >> > yet. We use the simple heuristic of checking for a changed PC before
> >> > seeing if kvm_arm_handle_step_debug wants to claim we stepped an
> >> > instruction.
> >> >
> >> > Signed-off-by: Alex Bennée <alex.bennee@linaro.org>
> >> > ---
> >> >  arch/arm64/kvm/handle_exit.c | 4 +++-
> >> >  1 file changed, 3 insertions(+), 1 deletion(-)
> >> >
> >> > diff --git a/arch/arm64/kvm/handle_exit.c b/arch/arm64/kvm/handle_exit.c
> >> > index e5e741bfffe1..b8252e72f882 100644
> >> > --- a/arch/arm64/kvm/handle_exit.c
> >> > +++ b/arch/arm64/kvm/handle_exit.c
> >> > @@ -214,6 +214,7 @@ static exit_handle_fn kvm_get_exit_handler(struct kvm_vcpu *vcpu)
> >> >  static int handle_trap_exceptions(struct kvm_vcpu *vcpu, struct kvm_run *run)
> >> >  {
> >> >  	int handled;
> >> > +        unsigned long old_pc = *vcpu_pc(vcpu);
> >> >
> >> >  	/*
> >> >  	 * See ARM ARM B1.14.1: "Hyp traps on instructions
> >> > @@ -233,7 +234,8 @@ static int handle_trap_exceptions(struct kvm_vcpu *vcpu, struct kvm_run *run)
> >> >  	 * kvm_arm_handle_step_debug() sets the exit_reason on the kvm_run
> >> >  	 * structure if we need to return to userspace.
> >> >  	 */
> >> > -	if (handled > 0 && kvm_arm_handle_step_debug(vcpu, run))
> >> > +	if (handled > 0 && *vcpu_pc(vcpu) != old_pc &&
> >>
> >> This doesn't work if the emulation is equivalent to a branch-to-self, so
> >> I don't think that we want to do this.
> >>
> >> When are we failing to advance the single-step state machine
> >> correctly?
> 
> When the trap is not actually an instruction emulation - e.g. setting up
> the page tables on a fault. Because we are in the act of single-stepping
> an instruction that didn't actually execute we erroneously return to
> userspace pretending we did even though we shouldn't.

I think one problem here is that we're trying to use one bit of state
(the KVM_GUESTDBG_SINGLESTEP) when we actually need two.

I had expected that we'd follow the architectural single-step state
machine, and have three states:

* inactive/disabled: not single stepping

* active-not-pending: the current instruction will be stepped, and we'll
  transition to active-pending before executing the next instruction.

* active-pending: the current instruction will raise a software step
  debug exception, before being executed.

For that to work, all we have to do is advence the state machine when we
emulate/skip an instruction, and the HW will raise the exception for us
when we enter the guest (which is the only place we have to handle the
step exception).

We need two bits of internal state for that, but KVM only gives us a
single KVM_GUESTDBG_SINGLESTEP flag, and we might exit to userspace
mid-emulation (e.g. for MMIO). To avoid that resulting in skipping two
instructions at a time, we currently add explicit
kvm_arm_handle_step_debug() checks everywhere after we've (possibly)
emulated an instruction, but these seem to hit too often.

One problem is that I couldn't spot when we advance the PC for an MMIO
trap. I presume we do that in the kernel, *after* the MMIO trap, but I
can't see where that happens.

Thanks,
Mark.
