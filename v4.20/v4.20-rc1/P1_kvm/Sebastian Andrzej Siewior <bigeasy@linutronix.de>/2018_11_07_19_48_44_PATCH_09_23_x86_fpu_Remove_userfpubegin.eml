Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 00:34:02 -0000
Received: from icoremail.net (unknown [209.85.210.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDXv95wQuNbC1RaAQ--.27271S3;
	Thu, 08 Nov 2018 03:52:17 +0800 (CST)
Received: from mail-pf1-f177.google.com (unknown [209.85.210.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwDnvTluQuNb9BQZAA--.711S3;
	Thu, 08 Nov 2018 03:52:14 +0800 (CST)
Received: by mail-pf1-f177.google.com with SMTP id y18-v6so5757970pfn.1
        for <xuliker@zju.edu.cn>; Wed, 07 Nov 2018 11:52:14 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding:sender:precedence:list-id;
        bh=77YM+edSdVcNNKPbWxQj4HYx6UXchcEvKs+i1EOnCSg=;
        b=OkU1Gnp2gI2EO/WvunanyBNZDdec/Gh+46MH0sMcxprc6uIbxOlOa2RstDAMNtaNoJ
         AptLKo5XXYRg3NLMrO04qRf4MS3Yr4ujoQ7vORMtJcwSXDwiewUXCvYEBVqdObHGLCUJ
         EnNEOmO8RBxVZ35OrhFSlbk30SiiKQct8Tw/OXds1WIktlK3aBENuM4veNHKBBC5fWM1
         IH+D9PgXx8qzM3MQ/655KxdXWxiqhlC2IIRMFyFLG+WbPPRI4D4JKnvWr45GHBbdY309
         5dEzFL25j6EbBfD5IL8WycY0GgS3OkjwHgoRGjNEbX31OrLgWqdSfMRB4JXkzZ/vYOMm
         DzGw==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJOJTB6jAmw3NHN0qd56nvk3WZGUubtZbxEgApBQjuADqUGamPq
	AHrhpoiunJ9mfX0mz9kHpPPR+Kb+JDFODhUVKejxh8SkYr4XZnI3SA==
X-Received: by 2002:a63:1d10:: with SMTP id d16-v6mr1317080pgd.228.1541620334486;
        Wed, 07 Nov 2018 11:52:14 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp5671597pjt;
        Wed, 7 Nov 2018 11:52:13 -0800 (PST)
X-Google-Smtp-Source: AJdET5dyoP79VFe7/I3FBGEdwOPr9KekQCHl9xUqwt0Mc+kkkjitEvc08hQk04y31wTOl63ik0L6
X-Received: by 2002:a17:902:e10f:: with SMTP id cc15-v6mr1612948plb.309.1541620333639;
        Wed, 07 Nov 2018 11:52:13 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541620333; cv=none;
        d=google.com; s=arc-20160816;
        b=TS9V7Ya83adQi0aGI77iaWAbukXV4QjZkDKW0ib94Tc9AIEtQj0tuJFiRq7sfcKzLz
         cjH1NwHAjPQZrAktzkvmktV2Qxk16iwCil0Ns5MTCT9/adswoeQGwluYxWKust42g4rM
         OolcXdjFttUSpbcp55QDCmJkFeCBdm5clSnSVyNusceHrgOjYf0MxmseTng7Vm7m/yXF
         EGlxFtlCyW9RNwV8hMgsmLHKGEKz+vc3sP6JZh2VCmJvTmhMfBw9o84Jwo3V2D0ealRu
         XDKf1W6+tOY+ahA2zexw9GFZyZ5Y5qrup2tCozMNKF/VijZilkPaPwR4rYZUPHH1BkI5
         I52Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :references:in-reply-to:message-id:date:subject:cc:to:from;
        bh=77YM+edSdVcNNKPbWxQj4HYx6UXchcEvKs+i1EOnCSg=;
        b=VB8e0y34Ca9VHuHCOzHdGe7w/iM8wkR48ZuIy0LVvXjiiLtrd8vvXQrN0YEQ7pycVY
         0DVnfs1HHIaxAo6mRqKvIKRXdNT5a4wU2Z0rYYT36h0L4EqMEFa6wY7/TgCwcjLrqN56
         tMadaY4q69JajrZNnj3XBO9hcA9srYA+MY2k1QA0hg6dGccgEjlRZ8AgXckAwg7bD5Wn
         APSX+zrFwYBIohxz5YYev5vPSN5Dwx0RMxoFeBgLzW0gDOg+BtgaR7XeHG2oAcpKXTYf
         xzVZedpe4yWzav8fEbyfKu8uuX4uWOqTVT+86LxNN+2hsgQgjMIMzcucUZ3wK0rieQAs
         DiwA==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id d3-v6si1639815plj.372.2018.11.07.11.51.58;
        Wed, 07 Nov 2018 11:52:13 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727517AbeKHFVM (ORCPT <rfc822;wanghaifine@gmail.com>
        + 99 others); Thu, 8 Nov 2018 00:21:12 -0500
Received: from Galois.linutronix.de ([146.0.238.70]:41895 "EHLO
        Galois.linutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726948AbeKHFVM (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 00:21:12 -0500
Received: from localhost ([127.0.0.1] helo=bazinga.breakpoint.cc)
        by Galois.linutronix.de with esmtp (Exim 4.80)
        (envelope-from <bigeasy@linutronix.de>)
        id 1gKTpB-00070Q-Ec; Wed, 07 Nov 2018 20:49:13 +0100
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
To: linux-kernel@vger.kernel.org
Cc: x86@kernel.org, Andy Lutomirski <luto@kernel.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        =?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= <rkrcmar@redhat.com>,
        kvm@vger.kernel.org, "Jason A. Donenfeld" <Jason@zx2c4.com>,
        Rik van Riel <riel@surriel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Subject: [PATCH 09/23] x86/fpu: Remove user_fpu_begin()
Date: Wed,  7 Nov 2018 20:48:44 +0100
Message-Id: <20181107194858.9380-10-bigeasy@linutronix.de>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181107194858.9380-1-bigeasy@linutronix.de>
References: <20181107194858.9380-1-bigeasy@linutronix.de>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwDnvTluQuNb9BQZAA--.711S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWryDGFyDZFyrKFWxZFy7ZFb_yoW5Ww4fpF
	ZIyrn7GF48W3Z8ZayDAr1kWrWfC3Z8K3Wfuas5G3s5A3WYy347Jr92yasxZryUu3yrGF1F
	qFWF9ayFqa4DX3DanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVWxJr0_GcWl84ACjcxK6I8E87Iv6xkF7I0E14v26F4UJVW0owAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	GVWUXwAv7VC2z280aVAFwI0_Jr0_Gr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_WwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_Xr0_Ar1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8JVWxJwCYIxAIcVC2z280aVAFwI0_Gr1j6F4UJwCY
	IxAIcVC2z280aVCY1x0267AKxVW8Jr0_Cr1UMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUtVW8ZwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_GrUvcSsGvfC2KfnxnUUI43ZEXa7I
	UOtgA3UUUUU==

user_fpu_begin() sets fpu_fpregs_owner_ctx to task's fpu struct. This is
always the case since there is no lazy FPU anymore.
fpu_fpregs_owner_ctx is used during context switch to decide if it needs
to load the saved registers or if the currently loaded registers are
valid. This field is always updated on context switch so setting it
manually has no benefit.
Before the removal of the ->initialized member, fpu_fpregs_owner_ctx
wouldn't be updated for kernel threads. But kernel threads don't use the
fpu struct so again, user_fpu_begin() would not make a difference in
user context (and would be wrong in kernel context).

Remove user_fpu_begin(), it does not change fpu_fpregs_owner_ctx's
content.

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 arch/x86/include/asm/fpu/internal.h | 17 -----------------
 arch/x86/kernel/fpu/core.c          |  4 +---
 arch/x86/kernel/fpu/signal.c        |  1 -
 3 files changed, 1 insertion(+), 21 deletions(-)

diff --git a/arch/x86/include/asm/fpu/internal.h b/arch/x86/include/asm/fpu/internal.h
index d7ef8ac8b17eb..d7f9e14c73c19 100644
--- a/arch/x86/include/asm/fpu/internal.h
+++ b/arch/x86/include/asm/fpu/internal.h
@@ -559,23 +559,6 @@ static inline void switch_fpu_finish(struct fpu *new_fpu, int cpu)
 	}
 }
 
-/*
- * Needs to be preemption-safe.
- *
- * NOTE! user_fpu_begin() must be used only immediately before restoring
- * the save state. It does not do any saving/restoring on its own. In
- * lazy FPU mode, it is just an optimization to avoid a #NM exception,
- * the task can lose the FPU right after preempt_enable().
- */
-static inline void user_fpu_begin(void)
-{
-	struct fpu *fpu = &current->thread.fpu;
-
-	preempt_disable();
-	fpregs_activate(fpu);
-	preempt_enable();
-}
-
 /*
  * MXCSR and XCR definitions:
  */
diff --git a/arch/x86/kernel/fpu/core.c b/arch/x86/kernel/fpu/core.c
index 2ed82c6e646b9..02bbd40fe1e95 100644
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@ -328,10 +328,8 @@ void fpu__clear(struct fpu *fpu)
 	 * Make sure fpstate is cleared and initialized.
 	 */
 	fpu__initialize(fpu);
-	if (static_cpu_has(X86_FEATURE_FPU)) {
-		user_fpu_begin();
+	if (static_cpu_has(X86_FEATURE_FPU))
 		copy_init_fpstate_to_fpregs();
-	}
 }
 
 /*
diff --git a/arch/x86/kernel/fpu/signal.c b/arch/x86/kernel/fpu/signal.c
index 30e65085dc4d9..f61f4d804537a 100644
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@ -328,7 +328,6 @@ static int __fpu__restore_sig(void __user *buf, void __user *buf_fx, int size)
 		 * For 64-bit frames and 32-bit fsave frames, restore the user
 		 * state to the registers directly (with exceptions handled).
 		 */
-		user_fpu_begin();
 		if (copy_user_to_fpregs_zeroing(buf_fx, xfeatures, fx_only)) {
 			fpu__clear(fpu);
 			return -1;
-- 
2.19.1
