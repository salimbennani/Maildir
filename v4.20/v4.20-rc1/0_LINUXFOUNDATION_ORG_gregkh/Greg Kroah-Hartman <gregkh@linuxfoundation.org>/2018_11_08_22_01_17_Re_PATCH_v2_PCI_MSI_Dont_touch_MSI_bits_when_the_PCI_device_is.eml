Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:38:59 -0000
Received: from icoremail.net (unknown [209.85.215.177])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+Y+teRb+fJiAQ--.29696S3;
	Fri, 09 Nov 2018 06:14:22 +0800 (CST)
Received: from mail-pg1-f177.google.com (unknown [209.85.215.177])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCHaUU7teRbweMeAA--.8516S3;
	Fri, 09 Nov 2018 06:14:19 +0800 (CST)
Received: by mail-pg1-f177.google.com with SMTP id y4so9007158pgc.12
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 14:14:19 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:date:from:to:cc
         :subject:message-id:references:mime-version:content-disposition
         :in-reply-to:user-agent:sender:precedence:list-id;
        bh=mYbqDvXhgmeeA2jVoFS6PqsLxR15rtcvsAslx13tsnA=;
        b=E9sn1CoTFmEk2ubzrgQD/xXniZ6CBR6X2bEs8wAAl5bsexSANC5oQ3fsfe6vlP/qQ5
         a2vXwZWK+EkBH8wSxf1AnKd24k+fypvUMVroUFzXhKQKCmuHBNvxv2mNlec8iYKlt/ha
         4azfEwBuXRgSyDHSN67hs28hH2IKITugQwTQccTbO99nu3aSnuqiCPO80uFEJrQh9dpZ
         L/kLqoInggvLzOTC9BopMsAS/78rDIGQ2wcmkq7mKvjX8JMepydCwEE+USDH2NBAx+1i
         ajowPPsmyzB0h145KdoTwxILkD4cWF2XKEPYeFk8UmKZATP6Timm0Hpz6P7DbyUFoDMJ
         GxWg==
X-Gm-Message-State: AGRZ1gKsXjXOQUzDVpSoxIYfnw2Ho7cq5rnTP5GKLsZYWQi9MgY1fxcz
	mTcOCePnDRGa2A7SeZr0EFMZU9Y1ngtBgwqkcjBUwwe8JJWSizXmCA==
X-Received: by 2002:a62:3687:: with SMTP id d129-v6mr6430068pfa.56.1541715259516;
        Thu, 08 Nov 2018 14:14:19 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp793917pjt;
        Thu, 8 Nov 2018 14:14:18 -0800 (PST)
X-Google-Smtp-Source: AJdET5cfFrkEvlOHiafGmSdeL70O7jucvm1I+UEaXbEyAA8CVzrY+Lngzw+8Z8XkYKgY/sHJqRyO
X-Received: by 2002:a17:902:9a94:: with SMTP id w20-v6mr6321461plp.115.1541715258582;
        Thu, 08 Nov 2018 14:14:18 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541715258; cv=none;
        d=google.com; s=arc-20160816;
        b=Re5A+69HjRk4tRDImJBP/GPj1JoO5sM6HT0rLbCzFR4PcoS9YeTZCdNy81s+7ZIu5W
         C225n0cW6ou9mfi+0dAhxty2I5m2Mj4/Cw2UIEb+QG4xVOjNykSJa4+j8UdbOwp8Yc7+
         ndEhw7z83AanEPdxe1IswCI0noGkHDsWOrDNKCgra2v+a3PKyCrJohrIeRHvw/8yQQbk
         Timbk28x3vwkh0cW0kA59F7USGleUMiP8C0EPPqsxwYLw99focCQxDn2XfV2N2o+SckC
         eQHkaOY9SlxfctKuBUv3R7JwbtoM1nVdUNTI3wRxJK+hMXujdUdtkCDbo8nh2fKbmMwo
         KI+A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:user-agent:in-reply-to
         :content-disposition:mime-version:references:message-id:subject:cc
         :to:from:date:dkim-signature;
        bh=mYbqDvXhgmeeA2jVoFS6PqsLxR15rtcvsAslx13tsnA=;
        b=DOHpnseXxINKU6N9jzNtryQ8jaffomMTT3iTISTNW4AmH+G+JEoLXgJrrYKEZ8FNyM
         Uygl90C+ZnTJYSNBfaDVIIiQJHDbpJBJUV5dzQbSKJnSIT9f0y256ujJ42AQvxhM8keV
         YMRG4GanBVDsLi7TKwu+A02AkVhBRqWDwHEgGiRMx+rZrpRCu/eMoch3Yi4C4YOyhoD2
         bpKmX6Cll7Q++C8lIsKV24cWs4DvTT/yRQUpXqfznObmqn4wKjcKLiE/K2eHRqwylMNf
         Kuk2/ke+DBl6XPC2mJhgEYs4evPm2Oxe83Y+xViiOoc4bIiUNfXZngSUfO3Sjmfoax2p
         i0IA==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=kAsVnCWo;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id z3-v6si4570486pgh.250.2018.11.08.14.13.52;
        Thu, 08 Nov 2018 14:14:18 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731976AbeKIHu6 (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 02:50:58 -0500
Received: from mail.kernel.org ([198.145.29.99]:43742 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1731528AbeKIHu5 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 02:50:57 -0500
Received: from localhost (unknown [208.72.13.198])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id B8BC32081D;
        Thu,  8 Nov 2018 22:13:23 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541715203;
        bh=5M1VOJvvYq/OFBB6DLvzqTe/U/E4V5r3oHEXRB0cirs=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=kAsVnCWoH6o97XE5zky7RNUtHzAM+q7p8Xk6zToloxMoN22gKc12xZl/4ziYxKpIY
         M+38sAObudf0apph6LAK5mTgGtU5+rndGSFJZVYSQpKWma58Hpd/qkOEMIUwYxHYRB
         tykMNQGmui/QlSdJlZzw0efOTUXdFhQ4ph4Kwusc=
Date: Thu, 8 Nov 2018 14:01:17 -0800
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: Bjorn Helgaas <helgaas@kernel.org>
Cc: Alexandru Gagniuc <mr.nuke.me@gmail.com>,
        linux-pci@vger.kernel.org, keith.busch@intel.com,
        alex_gagniuc@dellteam.com, austin_bolen@dell.com,
        shyam_iyer@dell.com, linux-kernel@vger.kernel.org,
        Jonathan Derrick <jonathan.derrick@intel.com>,
        Lukas Wunner <lukas@wunner.de>,
        Russell Currey <ruscur@russell.cc>,
        Sam Bobroff <sbobroff@linux.ibm.com>,
        Oliver O'Halloran <oohall@gmail.com>,
        linuxppc-dev@lists.ozlabs.org
Subject: Re: [PATCH v2] PCI/MSI: Don't touch MSI bits when the PCI device is
 disconnected
Message-ID: <20181108220117.GA11466@kroah.com>
References: <20180918221501.13112-1-mr.nuke.me@gmail.com>
 <20181107234257.GC41183@google.com>
 <20181108200855.GE41183@google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181108200855.GE41183@google.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCHaUU7teRbweMeAA--.8516S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxWF18XF15Zw17Cw4UJFW5Wrg_yoW5uF4fpF
	Waga97KF4DGr1a9rsFvr40gFyfJr4ktFyfJr95W34I9398Zr95Xry5Ka13u34rXrZYyF4j
	v3yYqrZ5uayDAaUanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUB0b7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	XVWUAwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcVAKI4
	8JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkIecxEwVCI4VW3MxkI7II2jI8vz4vE
	wIxGrwCYIxAIcVC0I7IYx2IY67AKxVWDJVCq3wCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r
	4UJVWxJr1lcIIF0xvEx4A2jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AKxVWx
	Jr0_GcWl42xK82IYc2Ij64vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I
	8I3I0E4IkC6x0Yz7v_Jr0_Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AK
	xVWUGVWUWwC2zVAF1VAY17CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI
	8IcIk0rVWUJVWUCbIYCTnIWIevJa73UjIFyTuYvjxUmKLvDUUUU

On Thu, Nov 08, 2018 at 02:09:17PM -0600, Bjorn Helgaas wrote:
> [+cc Jonathan, Greg, Lukas, Russell, Sam, Oliver for discussion about
> PCI error recovery in general]
> 
> On Wed, Nov 07, 2018 at 05:42:57PM -0600, Bjorn Helgaas wrote:
> > On Tue, Sep 18, 2018 at 05:15:00PM -0500, Alexandru Gagniuc wrote:
> > > When a PCI device is gone, we don't want to send IO to it if we can
> > > avoid it. We expose functionality via the irq_chip structure. As
> > > users of that structure may not know about the underlying PCI device,
> > > it's our responsibility to guard against removed devices.
> > > 
> > > .irq_write_msi_msg() is already guarded inside __pci_write_msi_msg().
> > > .irq_mask/unmask() are not. Guard them for completeness.
> > > 
> > > For example, surprise removal of a PCIe device triggers teardown. This
> > > touches the irq_chips ops some point to disable the interrupts. I/O
> > > generated here can crash the system on firmware-first machines.
> > > Not triggering the IO in the first place greatly reduces the
> > > possibility of the problem occurring.
> > > 
> > > Signed-off-by: Alexandru Gagniuc <mr.nuke.me@gmail.com>
> > 
> > Applied to pci/misc for v4.21, thanks!
> 
> I'm having second thoughts about this.  One thing I'm uncomfortable
> with is that sprinkling pci_dev_is_disconnected() around feels ad hoc
> instead of systematic, in the sense that I don't know how we convince
> ourselves that this (and only this) is the correct place to put it.

I think my stance always has been that this call is not good at all
because once you call it you never really know if it is still true as
the device could have been removed right afterward.

So almost any code that relies on it is broken, there is no locking and
it can and will race and you will loose.

I think your patch suffers from this race:

> +static u32 mmio_readl(struct pci_dev *dev, const volatile void __iomem *addr)
> +{
> +	u32 val, id;
> +
> +	if (pci_dev_is_disconnected(dev))
> +		return ~0;

Great, but what happens if I yank the device out right here?

> +	val = readl(addr);

This value could now be all FF, if the device is gone, so what did the
check above help with?

> +	/*
> +	 * If an MMIO read from the device returns ~0 data, that data may
> +	 * be valid, or it may indicate a bus error.  If config space is
> +	 * readable, assume it's valid data; otherwise, assume a bus error.
> +	 */
> +	if (val == ~0) {
> +		pci_read_config_dword(dev, PCI_VENDOR_ID, &id);
> +		if (id == ~0)
> +			pci_dev_set_disconnected(dev, NULL);

So why do the check above for "is disconnected"?  What does this buy us
here, just short-circuiting the readl()?

> +	}
> +
> +	return val;
> +}
> +
> +static void mmio_writel(struct pci_dev *dev, u32 val,
> +			volatile void __iomem *addr)
> +{
> +	if (pci_dev_is_disconnected(dev))
> +		return;
> +
> +	writel(val, addr);

Why even check, what's wrong with always doing the write?

I understand the wish to make this easier, but I think the only way is
that the driver themselves should be checking on their reads.  And they
have to check on all reads, or at least on some subset of reads and be
able to handle 0xff for the other ones without going crazy.

I _think_ the xhci driver does this given that it is hot added/removed
all the time dynamically due to the way that modern laptops are made
where the bios adds/removed the xhci controller when a USB device is
added/removed.

thanks,

greg k-h
