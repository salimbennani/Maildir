Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (124.160.105.205:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 09 Nov 2018 00:39:49 -0000
Received: from icoremail.net (unknown [209.85.215.179])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH_o7vORbvRVjAQ--.30104S3;
	Fri, 09 Nov 2018 06:44:11 +0800 (CST)
Received: from mail-pg1-f179.google.com (unknown [209.85.215.179])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwCXcz85vORbSAEfAA--.8971S3;
	Fri, 09 Nov 2018 06:44:09 +0800 (CST)
Received: by mail-pg1-f179.google.com with SMTP id f8-v6so9488855pgq.5
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 14:44:09 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:delivered-to:dkim-signature:from:to:cc:subject
         :date:message-id:in-reply-to:references:user-agent:mime-version
         :content-transfer-encoding:sender:precedence:list-id;
        bh=4vEc3HjTFagq/vZAF7QVJvf//s7KBndOGCK3b7NWT7g=;
        b=Nrx5pf4temBiMftm9ZYbBgUZTK13aPiDFLkGPbDpE2B2ks3APVbftRIFl8swBbYt/Q
         hIyKOvECwbpDXwFic8fU8qpeSjOSAjLMPuVvrukEfSULk3ngXGHocTLur1Ok80i/Xhbu
         twBARkjvs4jG99PoJ2qCGD4jKE/Z74zEN1UuLFCZghcAQWjieqHS+JWWFcNnd7skVQZc
         a19mogcF08UChDUWmeKaBY9nWNWXBhCwm6SJmyO6I/g+ET24rCKEURe0AYYE2OUKtCZc
         F8VzrPrvfLbTlrYBxzZMV9Xa23oB4ic0hd+ph5D/0mBKNRT95CmyZAtbhj0Nk+sRl1nM
         H64A==
X-Gm-Message-State: AGRZ1gKSyX75ull1XiVHgf7o4C20B2Q+SLShw74TFj4VUYZNs35Zkg0t
	OkNXD0KfNgFb8/dqQWpKWK2TFSPV/LzyTuwvJLPCE7RKOvLBGPcIdg==
X-Received: by 2002:aa7:8498:: with SMTP id u24-v6mr6423510pfn.220.1541717048831;
        Thu, 08 Nov 2018 14:44:08 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp818255pjt;
        Thu, 8 Nov 2018 14:44:07 -0800 (PST)
X-Google-Smtp-Source: AJdET5f0b583iAA7FojM3JlK5Y6n+rBRLHeUXkbfZ143nFX/jRjldlgzXk8I6WgHAABfmQrnWmkE
X-Received: by 2002:a63:63c3:: with SMTP id x186mr5342247pgb.330.1541717047632;
        Thu, 08 Nov 2018 14:44:07 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541717047; cv=none;
        d=google.com; s=arc-20160816;
        b=U12+nUhom8pXCM8yAtg6zmhJAziAFAYU089HeTQ9KVBqLp6Hrz+Jzk2S1ImJvxH6Cc
         vifXcJyMMpHhQehpV7aKnCfCM8dBR2u0xcSCM1RpX6+O9TCGCaWcNFfxdaYN7gDgP4D4
         fCNf35nY5gQz9LL++i9b18VMphS7ZGqaE8HUyKmMMhxCVh8b8NNHPK3RWnySpUg8NbLE
         fkKUreizxpWX6kZfeGFKdHLEHpoyJNXr2KdkPcgx9toJVwQLKlhTKn5SMcJC5ILS6nk0
         +GQIcHbuLqkJPlf3ZUuhj6aTq8q6sKrBYSHPG1ua7slZTAgbjfxKcNhbVRFmD0NsTIhd
         m7zw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding:mime-version
         :user-agent:references:in-reply-to:message-id:date:subject:cc:to
         :from:dkim-signature;
        bh=4vEc3HjTFagq/vZAF7QVJvf//s7KBndOGCK3b7NWT7g=;
        b=tzAC+SlgN6n9xF2R7MTU8SNa+uwNjLmmd1hBPKaBnkplaL38lIek0L9ojjr0Y/090m
         bXWgdlvbBOjqNc7psgcfa87jedN2CRMVUga/CliClJc3jGmtNOm8c4fDoGFj2AKb+xtg
         tOpxN/k/CAXusSNqZn0/ZSjwTqzhnWAX+UifExqDBSh01znTnjpjoXvNGeo0bjSGHxYk
         AsoDx94Zk4PbfF1v8uGyfSAhAgG9g/OTO47GKyWA2imJ1kNwy7qXAdFX19a9cY+6/tdM
         ivauuzeV9DChTnyGDJNeWiLZVqo7PlDZ11LFpA2CK6W1b2kNC7ThQVb/137mhHsTxXpt
         173A==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@kernel.org header.s=default header.b=OxyXf7OW;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id bg12-v6si5443994plb.319.2018.11.08.14.43.52;
        Thu, 08 Nov 2018 14:44:07 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728691AbeKIHdG (ORCPT <rfc822;tu.k.phung@gmail.com>
        + 99 others); Fri, 9 Nov 2018 02:33:06 -0500
Received: from mail.kernel.org ([198.145.29.99]:48382 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1727633AbeKIHdF (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 9 Nov 2018 02:33:05 -0500
Received: from localhost (unknown [208.72.13.198])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id B76492089F;
        Thu,  8 Nov 2018 21:55:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1541714137;
        bh=nN28tH+xMkPbeOmvgjXHGvm/iXKM4O3VW9xeJ7DfTD4=;
        h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
        b=OxyXf7OWwtaL4GHUNO98YcL/49J0k5+7bc2cTBmMXX1NE4sIUzVqPXHCCEloOHOR4
         rkitpOlRLwUWAluwGdbavi77j7SEkRN3baXpK/UG/FjvqMgKV0lWwdNFJdweElaJ+R
         8REDe24bPLTJNw+PqRfdIwciTL7Vlk0MlWhQE9bQ=
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
        stable@vger.kernel.org, Michael Ellerman <mpe@ellerman.id.au>,
        Steven Rostedt <rostedt@goodmis.org>,
        Sasha Levin <sashal@kernel.org>
Subject: [PATCH 3.18 071/144] tracing: Fix enabling of syscall events on the command line
Date: Thu,  8 Nov 2018 13:50:42 -0800
Message-Id: <20181108215100.235364805@linuxfoundation.org>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20181108215054.826084593@linuxfoundation.org>
References: <20181108215054.826084593@linuxfoundation.org>
User-Agent: quilt/0.65
X-stable: review
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwCXcz85vORbSAEfAA--.8971S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxZr4UuF1UAF1fCw13uFWfZrb_yoWrWFyxpF
	1ftF93tr48JrWIvr43Ww4DAry5J3yrC3srtwn8G34fZr1DCr1rXF4fta4FyFyF9rWDGFya
	y3Z2vF1UCrWUZaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUPSb7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_tr0E3s1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr1j6F4UJwA2z4x0Y4vE
	x4A2jsIE14v26rxl6s0DM28EF7xvwVC2z280aVCY1x0267AKxVW0oVCq3wAS0I0E0xvYzx
	vE52x082IY62kv0487Mc02F40EFcxC0VAKzVAqx4xG6I80ewAv7VC0I7IYx2IY67AKxVWU
	AVWUtwAv7VC2z280aVAFwI0_Gr0_Cr1lOx8S6xCaFVCjc4AY6r1j6r4UM4x0Y48IcxkI7V
	AKI48JMx02cVCv0xWlc7CjxVAKzI0EY4vE52x082I5MxkFs20EY4vE44CYbxCE4x80FwCY
	02Avz4vEIxC_ZwCY0x0Ix7I2Y4AK64vIr41lcIIF0xvE2Ix0cI8IcVAFwI0_tr0E3s1lcI
	IF0xvE2Ix0cI8IcVCY1x0267AKxVW8Jr0_Cr1UMxvI42IY6I8E87Iv67AKxVWxJr0_GcWl
	cIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7VAKI48JMxAIw28IcVAKzI
	0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j6r4UMI8I3I0E5I8CrVAF
	wI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7AF67AKxVWUAVWUtwCIc4
	0Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_JFI_GrUvcSsGvfC2KfnxnUUI43ZEXa7I
	UOAUU5UUUUU==

3.18-stable review patch.  If anyone has any objections, please let me know.

------------------

[ Upstream commit ce1039bd3a89e99e4f624e75fb1777fc92d76eb3 ]

Commit 5f893b2639b2 "tracing: Move enabling tracepoints to just after
rcu_init()" broke the enabling of system call events from the command
line. The reason was that the enabling of command line trace events
was moved before PID 1 started, and the syscall tracepoints require
that all tasks have the TIF_SYSCALL_TRACEPOINT flag set. But the
swapper task (pid 0) is not part of that. Since the swapper task is the
only task that is running at this early in boot, no task gets the
flag set, and the tracepoint never gets reached.

Instead of setting the swapper task flag (there should be no reason to
do that), re-enabled trace events again after the init thread (PID 1)
has been started. It requires disabling all command line events and
re-enabling them, as just enabling them again will not reset the logic
to set the TIF_SYSCALL_TRACEPOINT flag, as the syscall tracepoint will
be fooled into thinking that it was already set, and wont try setting
it again. For this reason, we must first disable it and re-enable it.

Link: http://lkml.kernel.org/r/1421188517-18312-1-git-send-email-mpe@ellerman.id.au
Link: http://lkml.kernel.org/r/20150115040506.216066449@goodmis.org

Reported-by: Michael Ellerman <mpe@ellerman.id.au>
Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---
 kernel/trace/trace_events.c | 69 +++++++++++++++++++++++++++++--------
 1 file changed, 55 insertions(+), 14 deletions(-)

diff --git a/kernel/trace/trace_events.c b/kernel/trace/trace_events.c
index 51c47bc832d4..edf6ab4d8650 100644
--- a/kernel/trace/trace_events.c
+++ b/kernel/trace/trace_events.c
@@ -2400,12 +2400,39 @@ static __init int event_trace_memsetup(void)
 	return 0;
 }
 
+static __init void
+early_enable_events(struct trace_array *tr, bool disable_first)
+{
+	char *buf = bootup_event_buf;
+	char *token;
+	int ret;
+
+	while (true) {
+		token = strsep(&buf, ",");
+
+		if (!token)
+			break;
+		if (!*token)
+			continue;
+
+		/* Restarting syscalls requires that we stop them first */
+		if (disable_first)
+			ftrace_set_clr_event(tr, token, 0);
+
+		ret = ftrace_set_clr_event(tr, token, 1);
+		if (ret)
+			pr_warn("Failed to enable trace event: %s\n", token);
+
+		/* Put back the comma to allow this to be called again */
+		if (buf)
+			*(buf - 1) = ',';
+	}
+}
+
 static __init int event_trace_enable(void)
 {
 	struct trace_array *tr = top_trace_array();
 	struct ftrace_event_call **iter, *call;
-	char *buf = bootup_event_buf;
-	char *token;
 	int ret;
 
 	if (!tr)
@@ -2427,18 +2454,7 @@ static __init int event_trace_enable(void)
 	 */
 	__trace_early_add_events(tr);
 
-	while (true) {
-		token = strsep(&buf, ",");
-
-		if (!token)
-			break;
-		if (!*token)
-			continue;
-
-		ret = ftrace_set_clr_event(tr, token, 1);
-		if (ret)
-			pr_warn("Failed to enable trace event: %s\n", token);
-	}
+	early_enable_events(tr, false);
 
 	trace_printk_start_comm();
 
@@ -2449,6 +2465,31 @@ static __init int event_trace_enable(void)
 	return 0;
 }
 
+/*
+ * event_trace_enable() is called from trace_event_init() first to
+ * initialize events and perhaps start any events that are on the
+ * command line. Unfortunately, there are some events that will not
+ * start this early, like the system call tracepoints that need
+ * to set the TIF_SYSCALL_TRACEPOINT flag of pid 1. But event_trace_enable()
+ * is called before pid 1 starts, and this flag is never set, making
+ * the syscall tracepoint never get reached, but the event is enabled
+ * regardless (and not doing anything).
+ */
+static __init int event_trace_enable_again(void)
+{
+	struct trace_array *tr;
+
+	tr = top_trace_array();
+	if (!tr)
+		return -ENODEV;
+
+	early_enable_events(tr, true);
+
+	return 0;
+}
+
+early_initcall(event_trace_enable_again);
+
 static __init int event_trace_init(void)
 {
 	struct trace_array *tr;
-- 
2.17.1


