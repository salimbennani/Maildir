Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 11:49:53 -0000
Received: from icoremail.net (unknown [209.85.215.170])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH96LHeRbIaBfAQ--.28532S3;
	Thu, 08 Nov 2018 19:27:08 +0800 (CST)
Received: from mail-pg1-f170.google.com (unknown [209.85.215.170])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwBHHzuEHeRbJXIcAA--.1390S3;
	Thu, 08 Nov 2018 19:27:00 +0800 (CST)
Received: by mail-pg1-f170.google.com with SMTP id f8-v6so8749418pgq.5
        for <xuliker@zju.edu.cn>; Thu, 08 Nov 2018 03:27:00 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=67XS6S5lUfph+1sHRQibssprjwRDbvKAo8o6FeOJGJs=;
        b=lUkVsUpTAZ2TfTKE7Ob9eWKCAiEU5KZhFD6Nm1MDzIYi2+wevI1IWpJHqPYiBhpfU0
         sXxXxmQlA4tJKAvFFBYNldb3yQWdIOfe4DunS4jQ0sal7LjGSe7tDauRDjgjGy2gWewO
         ZjFM2Evw7MlXlWZw+vt379P3NEmtnZx2Ar7ftDBkH4OeN6mPpyFkPUkhWxMgytH6G1+C
         tb+soP3pAVTMBVcU01ex+SVo8poYvsQTuGUayM2zKNT/ZctlWnx0ltZEZIxkeX+osLFK
         rOyaKab2uxlmGdqlAXOy6HEw4XnokpU2Qg5hkP4WD1+KnxOSnGwuRGDGFx3DizgYpZYg
         FYng==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gL2KmSwGYVKVX5EN08bWrTEGiN0/cUu5FQf8peNg9MrWWLAQpew
	xgUIwRUcHO0DwOMig9o9XQH5cym8ODOgDpoVJ7GV3NUaIysX7QSWmg==
X-Received: by 2002:a63:a91a:: with SMTP id u26mr3424444pge.349.1541676420309;
        Thu, 08 Nov 2018 03:27:00 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp66131pjt;
        Thu, 8 Nov 2018 03:26:59 -0800 (PST)
X-Google-Smtp-Source: AJdET5ddVnBFFOeajSd+dIu8BYOasm0j+NPLtS17GnCTdUrfFkwX5R7fdCry/wS0yAeY5OGv0Ziy
X-Received: by 2002:a17:902:3181:: with SMTP id x1-v6mr4149643plb.240.1541676419529;
        Thu, 08 Nov 2018 03:26:59 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541676419; cv=none;
        d=google.com; s=arc-20160816;
        b=QcSecmaB+SvPv1Pp2hj4XKVUPQqeFk7imQy44TjJQHpPr58SLSnmEON9eR7CUnGc07
         CHEYeKY+G+wUsWY2LYA99h+IZ3Bl1VszlZdGW83zaAguVqmrRR15N3hmlfLCNTNx9dGr
         CCuH+cMOMRnx3+B8kVZoicuGN+aFwm9Yan3emtBsMKHuEuc7rEljOJhfo2P1beEt9s9L
         zOKgZQ4deSzSG08s+fKJpfCMqexG3lq9RATz3chhKrQKqZ6pNOsnoDo8v52m0swFPlB5
         0BAWtYjSRnlPVGTkAZ5+/0s3S+S9gbZopQI19x7FbE2zl4/Pn0Qt1FFq66HvjnAYy4Bk
         HRBQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=67XS6S5lUfph+1sHRQibssprjwRDbvKAo8o6FeOJGJs=;
        b=rDmY4oW9ZUHBys/8Vzleb+sgfEEDtyTy+xF+D0DcK5P/5jAIcD8XpEmJTxx78bAmPd
         XzS0SSsl91OKN3B9meNxfwI+tG+ufS65bGb5esTw9u9iu3EUT9NFYLU0uSVOZ4H51jvq
         OAD5Fwp9tg0qZahf2l0+OphExUgNoQBYjrixqw9fkPX4peumxFBum+eNz3Ja+90zALem
         y8EByOxH1rXFWepUDuoMgpudo5GKM4oC0c3atuGUbUQhG2/RcXcNSp8Mgtx3762Cwmm9
         SxxXTKb57HaM4kH+WxQ9mId4SqT7DWf9F1w4Q/m3ugJBMLxYaHYon23QZAv5SQtg57PN
         zc6Q==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id y16-v6si3015967pgk.479.2018.11.08.03.26.44;
        Thu, 08 Nov 2018 03:26:59 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727503AbeKHVBI (ORCPT <rfc822;lumpython@gmail.com> + 99 others);
        Thu, 8 Nov 2018 16:01:08 -0500
Received: from foss.arm.com ([217.140.101.70]:38690 "EHLO foss.arm.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726252AbeKHVBI (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 16:01:08 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 149A080D;
        Thu,  8 Nov 2018 03:26:06 -0800 (PST)
Received: from [10.1.197.36] (e112298-lin.cambridge.arm.com [10.1.197.36])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id BC4BC3F5CF;
        Thu,  8 Nov 2018 03:26:03 -0800 (PST)
Subject: Re: [PATCH 08/10] irqchip/gic-v3-its: Decouple its initialization
 from gic
To: Robert Richter <rrichter@cavium.com>,
        Marc Zyngier <marc.zyngier@arm.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Jason Cooper <jason@lakedaemon.net>
Cc: "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        Stuart Yoder <stuyoder@gmail.com>,
        Laurentiu Tudor <laurentiu.tudor@nxp.com>,
        Matthias Brugger <matthias.bgg@gmail.com>,
        Will Deacon <will.deacon@arm.com>,
        Lorenzo Pieralisi <Lorenzo.Pieralisi@arm.com>,
        "Richter, Robert" <Robert.Richter@cavium.com>
References: <20181107220254.6116-1-rrichter@cavium.com>
 <20181107220254.6116-9-rrichter@cavium.com>
From: Julien Thierry <julien.thierry@arm.com>
Message-ID: <21a0183b-bf4b-1895-d10b-8287dbff930a@arm.com>
Date: Thu, 8 Nov 2018 11:26:02 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.8.0
MIME-Version: 1.0
In-Reply-To: <20181107220254.6116-9-rrichter@cavium.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwBHHzuEHeRbJXIcAA--.1390S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoW3ArWfJr1UXry5Ww4xAF1DWrg_yoWxAw4rpF
	W5W3yfZF4fCFW8WrWqkrnFvFyavwn7K3y7GrWxWFn7J34DuryDWF1fCryY9Fn7JrWxWF43
	ZF40qrZ8Ca9rAFJanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Ar0_tr1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Cr0_Gr1UM28EF7xvwVC2
	z280aVAFwI0_GcCE3s1l84ACjcxK6I8E87Iv6xkF7I0E14v26rxl6s0DM2AIxVAIcxkEcV
	Aq07x20xvEncxIr21l5I8CrVACY4xI64kE6c02F40Ex7xfMcIj6xIIjxv20xvE14v26r1j
	6r18McIj6I8E87Iv67AKxVW8JVWxJwAm72CE4IkC6x0Yz7v_Jr0_Gr1lF7xvr2IY64vIr4
	1l7I0Y6sxI4wCYjI0SjxkI62AI1cAE67vIY487MxkF7I0Ew4C26cxK6c8Ij28IcwCY1Ik2
	6cxK6xAEc7vF6xCjj44lc2xSY4AK6IIF6r4kMxkI7II2jI8vz4vEwIxGrwCYIxAIcVC0I7
	IYx2IY67AKxVW5JVW7JwCYIxAIcVC0I7IYx2IY6xkF7I0E14v26r4j6F4UMxvI42IY6I8E
	87Iv67AKxVWxJr0_GcWlcIIF0xvEx4A2jsIEc7CjxVAFwI0_Cr1j6rxdMxAIw28IcxkI7V
	AKI48JMxAIw28IcVAKzI0EY4vE52x082I5MxCjnVCjjxCrMxC20s026xCaFVCjc4AY6r1j
	6r4UMI8I3I0E5I8CrVAFwI0_Jr0_Jr4lx2IqxVCjr7xvwVAFwI0_JrI_JrWlx4CE17CEb7
	AF67AKxVWUtVW8ZwCIc40Y0x0EwIxGrwCI42IY6xAIw20EY4v20xvaj40_Gr0_ZrUvcSsG
	vfC2KfnxnUUI43ZEXa7IUOWCJJUUUUU==



On 07/11/18 22:03, Robert Richter wrote:
> This patch separates its initialization from the gic. Probing and
> initialization of its nodes is separate now. There is an own cpu
> notifier for its now.
> 
> Signed-off-by: Robert Richter <rrichter@cavium.com>
> ---
>   drivers/irqchip/irq-gic-v3-its.c   | 58 +++++++++++++++++++++++++-------------
>   drivers/irqchip/irq-gic-v3.c       | 14 ++++-----
>   include/linux/cpuhotplug.h         |  1 +
>   include/linux/irqchip/arm-gic-v3.h |  2 +-
>   4 files changed, 48 insertions(+), 27 deletions(-)
> 
> diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
> index c28f4158ff70..fd8561fcfdf3 100644
> --- a/drivers/irqchip/irq-gic-v3-its.c
> +++ b/drivers/irqchip/irq-gic-v3-its.c
> @@ -167,6 +167,7 @@ static struct {
>   } vpe_proxy;
>   
>   static LIST_HEAD(its_nodes);
> +static LIST_HEAD(its_probed);
>   static DEFINE_RAW_SPINLOCK(its_lock);
>   static struct rdists *gic_rdists;
>   static struct irq_domain *its_parent;
> @@ -3482,20 +3483,13 @@ static int __init its_compute_its_list_map(struct its_node *its)
>   
>   static void its_free(struct its_node *its)
>   {
> -	raw_spin_lock(&its_lock);
> -	list_del(&its->entry);
> -	raw_spin_unlock(&its_lock);
> -
>   	kfree(its);
>   }
>   
> -static int __init its_init_one(struct its_node *its);
> -
>   static int __init its_probe_one(struct resource *res,
>   				struct fwnode_handle *handle, int numa_node)
>   {
>   	struct its_node *its;
> -	int err;
>   
>   	its = kzalloc(sizeof(*its), GFP_KERNEL);
>   	if (!its)
> @@ -3510,16 +3504,12 @@ static int __init its_probe_one(struct resource *res,
>   	its->numa_node = numa_node;
>   
>   	raw_spin_lock(&its_lock);
> -	list_add_tail(&its->entry, &its_nodes);
> +	list_add_tail(&its->entry, &its_probed);
>   	raw_spin_unlock(&its_lock);
>   
>   	pr_info("ITS %pR\n", res);
>   
> -	err = its_init_one(its);
> -	if (err)
> -		its_free(its);
> -
> -	return err;
> +	return 0;
>   }
>   
>   static int __init its_init_one(struct its_node *its)
> @@ -3717,7 +3707,7 @@ static int redist_disable_lpis(void)
>   	return 0;
>   }
>   
> -int its_cpu_init(void)
> +static int its_cpu_init(unsigned int cpu)
>   {
>   	if (!list_empty(&its_nodes)) {
>   		int ret;
> @@ -3913,8 +3903,6 @@ static void __init its_acpi_probe(void)
>   static void __init its_acpi_probe(void) { }
>   #endif
>   
> -static int __init its_init(void);
> -
>   int __init its_probe(struct fwnode_handle *handle, struct rdists *rdists,
>   		     struct irq_domain *parent_domain)
>   {
> @@ -3929,23 +3917,51 @@ int __init its_probe(struct fwnode_handle *handle, struct rdists *rdists,
>   
>   	gic_rdists = rdists;
>   
> -	return its_init();
> +	return 0;
>   }
>   
> -static int __init its_init(void)
> +int __init its_init(void)
>   {
>   	struct its_node *its;
>   	bool has_v4 = false;
>   	int err;
>   
> +	if (list_empty(&its_probed))
> +		return 0;
> +
> +	raw_spin_lock(&its_lock);
> +redo:
> +	list_for_each_entry(its, &its_probed, entry) {
> +		list_del_init(&its->entry);
> +
> +		raw_spin_unlock(&its_lock);
> +
> +		/* Needs to be called in non-atomic context */
> +		err = its_init_one(its);
> +		if (err)
> +			its_free(its);
> +
> +		raw_spin_lock(&its_lock);
> +
> +		if (!err)
> +			list_add_tail(&its->entry, &its_nodes);
> +
> +		goto redo;

Again, you're starting a loop only to work on the first element and then 
restarting the loop.

Just do a while (!list_empty()), and without gotos...

> +	}
> +
> +	raw_spin_unlock(&its_lock);
> +
>   	if (list_empty(&its_nodes)) {
>   		pr_warn("ITS: No ITS available, not enabling LPIs\n");
>   		return -ENXIO;
>   	}
>   
>   	err = allocate_lpi_tables();
> -	if (err)
> +	if (err) {
> +		pr_warn("ITS: Failed to initialize (%d), not enabling LPIs\n",
> +			err);
>   		return err;
> +	}
>   
>   	list_for_each_entry(its, &its_nodes, entry)
>   		has_v4 |= its->is_v4;
> @@ -3960,5 +3976,9 @@ static int __init its_init(void)
>   
>   	register_syscore_ops(&its_syscore_ops);
>   
> +	cpuhp_setup_state(CPUHP_AP_IRQ_GIC_ITS_STARTING,
> +			"irqchip/arm/gicv3-its:starting",
> +			its_cpu_init, NULL);
> +
>   	return 0;
>   }
> diff --git a/drivers/irqchip/irq-gic-v3.c b/drivers/irqchip/irq-gic-v3.c
> index e04108b7c6b7..d2942efdb6d5 100644
> --- a/drivers/irqchip/irq-gic-v3.c
> +++ b/drivers/irqchip/irq-gic-v3.c
> @@ -685,9 +685,6 @@ static int gic_starting_cpu(unsigned int cpu)
>   {
>   	gic_cpu_init();
>   
> -	if (gic_dist_supports_lpis())
> -		its_cpu_init();
> -
>   	return 0;
>   }
>   
> @@ -815,7 +812,7 @@ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
>   #else
>   #define gic_set_affinity	NULL
>   #define gic_smp_init()		do { } while(0)
> -#endif
> +#endif	/* CONFIG_SMP */
>   
>   #ifdef CONFIG_CPU_PM
>   /* Check whether it's single security state view */
> @@ -1131,10 +1128,8 @@ static int __init gic_init_bases(void __iomem *dist_base,
>   	gic_cpu_init();
>   	gic_cpu_pm_init();
>   
> -	if (gic_dist_supports_lpis()) {
> +	if (gic_dist_supports_lpis())
>   		its_probe(handle, &gic_data.rdists, gic_data.domain);
> -		its_cpu_init();
> -	}
>   
>   	return 0;
>   
> @@ -1327,6 +1322,9 @@ static int __init gic_of_init(struct device_node *node, struct device_node *pare
>   
>   	if (static_branch_likely(&supports_deactivate_key))
>   		gic_of_setup_kvm_info(node);
> +
> +	its_init();
> +
>   	return 0;
>   
>   out_unmap_rdist:
> @@ -1630,6 +1628,8 @@ gic_acpi_init(struct acpi_subtable_header *header, const unsigned long end)
>   	if (static_branch_likely(&supports_deactivate_key))
>   		gic_acpi_setup_kvm_info();
>   
> +	its_init();
> +
>   	return 0;
>   
>   out_fwhandle_free:
> diff --git a/include/linux/cpuhotplug.h b/include/linux/cpuhotplug.h
> index e0cd2baa8380..584f73585142 100644
> --- a/include/linux/cpuhotplug.h
> +++ b/include/linux/cpuhotplug.h
> @@ -96,6 +96,7 @@ enum cpuhp_state {
>   	CPUHP_AP_SCHED_STARTING,
>   	CPUHP_AP_RCUTREE_DYING,
>   	CPUHP_AP_IRQ_GIC_STARTING,
> +	CPUHP_AP_IRQ_GIC_ITS_STARTING,
>   	CPUHP_AP_IRQ_HIP04_STARTING,
>   	CPUHP_AP_IRQ_ARMADA_XP_STARTING,
>   	CPUHP_AP_IRQ_BCM2836_STARTING,
> diff --git a/include/linux/irqchip/arm-gic-v3.h b/include/linux/irqchip/arm-gic-v3.h
> index a6fdb2910f73..f4348fa4260a 100644
> --- a/include/linux/irqchip/arm-gic-v3.h
> +++ b/include/linux/irqchip/arm-gic-v3.h
> @@ -602,9 +602,9 @@ struct rdists {
>   
>   struct irq_domain;
>   struct fwnode_handle;
> -int its_cpu_init(void);
>   int its_probe(struct fwnode_handle *handle, struct rdists *rdists,
>   	      struct irq_domain *domain);
> +int its_init(void);
>   int mbi_init(struct fwnode_handle *fwnode, struct irq_domain *parent);
>   
>   static inline bool gic_enable_sre(void)
> 

-- 
Julien Thierry
