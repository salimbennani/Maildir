Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from pop3.zju.edu.cn (61.164.42.155:110) by
  likexu-MOBL1.ccr.corp.intel.com with POP3; 08 Nov 2018 10:28:21 -0000
Received: from icoremail.net (unknown [209.85.210.169])
	by mail-app2 (Coremail) with SMTP id by_KCgDHH+4A4+NbczNeAQ--.28427S3;
	Thu, 08 Nov 2018 15:17:21 +0800 (CST)
Received: from mail-pf1-f169.google.com (unknown [209.85.210.169])
	by mx2.icoremail.net (Coremail) with SMTP id AQAAfwB3Uz__4uNbI4AbAA--.5751S3;
	Thu, 08 Nov 2018 15:17:19 +0800 (CST)
Received: by mail-pf1-f169.google.com with SMTP id s9-v6so1551867pfm.13
        for <xuliker@zju.edu.cn>; Wed, 07 Nov 2018 23:17:19 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-original-authentication-results:x-gm-message-state:delivered-to
         :subject:to:cc:references:from:message-id:date:user-agent
         :mime-version:in-reply-to:content-language:content-transfer-encoding
         :sender:precedence:list-id;
        bh=8cOn9o6CS0UbGuPpemKR1D8NK17LbVSN8qtRNvP0nww=;
        b=NoJuCAhueIfYll/ZIJq2zqwj0BqWKylQSojJk8RGEsQ2poOn22c3bSuaEPi9Db0P9+
         aw3DnqHijYSNRK8RB8qrm2UJq36s6z3gh5cqNlAN/aLs253vCFL17sl1GA6pxw6yj69D
         iyJukhUPfjoRqypfQxOWJpocCV1PJAnbvTxUHcPK1V46mDq76bC7WEJAmcGx/oeEPWf3
         x/aI8bhYvL1Y4KOxHUYZepBJ2/U+2H7WE5miYEZSOv2W4Lptm0GKAyK10LoCmdLj/UB3
         UlXymn3t2p11XU01HBEpil4Yb8kaHXtrWKKXmaPveOvJFxZQdOsneGx0Z4yAvqp43aMJ
         tW6g==
X-Original-Authentication-Results: mx.google.com;       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
X-Gm-Message-State: AGRZ1gJbOW2/ez8bfV1FZqZbwol6GcwIqYMTv17BUQK4Tqxiak6TiwPJ
	Irt6RITa2NuYIax6fRg8OSmFPlFI8C56RiYM3GZpOPU8uhGum+Fzqw==
X-Received: by 2002:a62:c184:: with SMTP id i126-v6mr3504278pfg.53.1541661439227;
        Wed, 07 Nov 2018 23:17:19 -0800 (PST)
X-Forwarded-To: xuliker@zju.edu.cn
X-Forwarded-For: liker.xu@gmail.com xuliker@zju.edu.cn
Delivered-To: liker.xu@gmail.com
Received: by 2002:a17:90a:c304:0:0:0:0 with SMTP id g4-v6csp181644pjt;
        Wed, 7 Nov 2018 23:17:18 -0800 (PST)
X-Google-Smtp-Source: AJdET5cD88fxuDmQb1pWnYPAHQaa4y9S8t6O2+c6MSP45c92cIGgmFPA/mGbbDFMTrqh9dSmzn08
X-Received: by 2002:a62:380e:: with SMTP id f14-v6mr3424225pfa.203.1541661438329;
        Wed, 07 Nov 2018 23:17:18 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1541661438; cv=none;
        d=google.com; s=arc-20160816;
        b=FWlj98+uT7cUWCo4+5zLIbmEzGWPwgxNFL+JmfFEMvmnwXNZYOnMXK6QEPbb/0jLM9
         cnbOeALPcgOI7YIlfZxwmL/yPhtZIAJion3ZjVWn85U9ngQBHoE4tngWjOnezlyehdvN
         fAczKp9pOBdrxmmWRctKLqYxCN29xKRq3VREfyt+n5AOkAz2Y3CTjbN0j9pUd9RVU3pI
         HkZW9dZY5zx/1FFtR53zPGMV0ruuD5OPWdqfcWdTbBJ54D7MWsQyhzsyGFARptIqReYI
         we7elO1JJF+71NQ/eO+uAgoY8oBdZBNJFOHYDJQWgpk5ztHhGPGVCQka2Tlp3JZOb8lt
         KlvQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=list-id:precedence:sender:content-transfer-encoding
         :content-language:in-reply-to:mime-version:user-agent:date
         :message-id:from:references:cc:to:subject;
        bh=8cOn9o6CS0UbGuPpemKR1D8NK17LbVSN8qtRNvP0nww=;
        b=MqyF1n1tYzg82h2bOWbV+k/PvXzxwgqtDNkSzaBQMfBxdFEkwGGQ+kTRsGw3MfhS4X
         9EMqoUfNdyXEpKV1+u4l8nW2P8hS7mKdKrAX7TAWKYVAWAZ7/mX1ziugQCIPqKzN4Y+O
         hGmnZLWCEmfVcjumDPvHmMBVWzsGcS1QG6LP15qgrLIrFukN1TN1fClVUWIXOT++byUV
         zb3FXEl9CUSKjSCid3G+S3WH3H7v84JrYVa3vgWi8mXJXPF0Jsy+LxXwhzWXSltsifiQ
         IBLxk6bekHWkMTkzjYmiNt6IUB/rTXUo7eJ+bnarJY9lL8XWtHlWKPk+sWlxm86kOg/T
         vqmg==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) smtp.mailfrom=linux-kernel-owner@vger.kernel.org
Received: from vger.kernel.org (vger.kernel.org. [209.132.180.67])
        by mx.google.com with ESMTP id m7si2962098pgi.547.2018.11.07.23.17.02;
        Wed, 07 Nov 2018 23:17:18 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of linux-kernel-owner@vger.kernel.org designates 209.132.180.67 as permitted sender) client-ip=209.132.180.67;
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726417AbeKHQu7 (ORCPT <rfc822;lumpython@gmail.com> + 99 others);
        Thu, 8 Nov 2018 11:50:59 -0500
Received: from usa-sjc-mx-foss1.foss.arm.com ([217.140.101.70]:35502 "EHLO
        foss.arm.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725724AbeKHQu7 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 8 Nov 2018 11:50:59 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
        by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 57416A78;
        Wed,  7 Nov 2018 23:16:52 -0800 (PST)
Received: from [10.162.0.72] (p8cg001049571a15.blr.arm.com [10.162.0.72])
        by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 499363F5BD;
        Wed,  7 Nov 2018 23:16:50 -0800 (PST)
Subject: Re: [RFC PATCH 5/5] mm, memory_hotplug: be more verbose for memory
 offline failures
To: Michal Hocko <mhocko@kernel.org>, linux-mm@kvack.org
Cc: Andrew Morton <akpm@linux-foundation.org>,
        Oscar Salvador <OSalvador@suse.com>,
        Baoquan He <bhe@redhat.com>,
        LKML <linux-kernel@vger.kernel.org>,
        Michal Hocko <mhocko@suse.com>
References: <20181107101830.17405-1-mhocko@kernel.org>
 <20181107101830.17405-6-mhocko@kernel.org>
From: Anshuman Khandual <anshuman.khandual@arm.com>
Message-ID: <b23ebcb3-e4f1-be78-bd5f-84c685979ab7@arm.com>
Date: Thu, 8 Nov 2018 12:46:47 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.9.1
MIME-Version: 1.0
In-Reply-To: <20181107101830.17405-6-mhocko@kernel.org>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Sender: liker.xu+caf_=xuliker=zju.edu.cn@gmail.com
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org
X-CM-TRANSID: AQAAfwB3Uz__4uNbI4AbAA--.5751S3
Authentication-Results: mail-app2; spf=pass smtp.mail=liker.xu+caf_=xu
	liker=zju.edu.cn@gmail.com;
X-Coremail-Antispam: 1UD129KBjvJXoWxAry3Wr4UJFW7Kr1kCr47XFb_yoW5uF43pF
	WfG3Wjk3ykA345G3srArn7urn5Cw4DGFW5GrZrG345Z3W3Xryjvrsrtrn09rWfWrWkJa17
	XFWaqFyxZF4DAaDanT9S1TB71UUUUUUqnTZGkaVYY2UrUUUU0bIjqfuFe4nvWSU8nxnvy2
	9KBjDU0xBIdaVrnRJUUUmab7Iv0xC_Kw4lb4IE77IF4wAFF20E14v26r1j6r4UM7CIcVAF
	z4kK6r1j6r18M28lY4IEw2IIxxk0rwA2F7IY1VAKz4vEj48ve4kI8wA2z4x0Y4vE2Ix0cI
	8IcVAFwI0_Xr0_Ar1l84ACjcxK6xIIjxv20xvEc7CjxVAFwI0_Gr0_Cr1l84ACjcxK6I8E
	87Iv67AKxVW0oVCq3wA2z4x0Y4vEx4A2jsIEc7CjxVAFwI0_GcCE3s1le2I262IYc4CY6c
	8Ij28IcVAaY2xG8wAqx4xG64xvF2IEw4CE5I8CrVC2j2WlYx0E2Ix0cI8IcVAFwI0_Jr0_
	Jr4lYx0Ex4A2jsIE14v26r4j6F4UMcvjeVCFs4IE7xkEbVWUJVW8JwACjcxG0xvEwIxGrw
	CjxxvEa2IrMxk0xIA0c2IEe2xFo4CEbIxvr21lc7CjxVAKzI0EY4vE52x082I5MxkFs20E
	Y4vE44CYbxCE4x80FwCY02Avz4vEIxC_GF4lc2IjII80xcxEwVAKI48JMxvI42IY6xIIjx
	v20xvE14v26r1I6r4UMxvI42IY6xIIjxv20xvEc7CjxVAFwI0_Jr0_Gr1lcIIF0xvEx4A2
	jsIE14v26F4UJVW0owCYIxAIcVC2z280aVCY1x0267AKxVWxJr0_GcWl42xK82IYc2Ij64
	vIr41l42xK82IY64kExVAvwVAq07x20xyl4x8a6x804xWl4I8I3I0E4IkC6x0Yz7v_Jr0_
	Gr1lx2IqxVAqx4xG67AKxVWUJVWUGwC20s026x8GjcxK67AKxVWUGVWUWwC2zVAF1VAY17
	CE14v26r1q6r43MIIYrxkI7VAKI48JMIIF0xvE42xK8VAvwI8IcIk0rVW3JVWrJrUvcSsG
	vfC2KfnxnUUI43ZEXa7IUOgiStUUUUU==



On 11/07/2018 03:48 PM, Michal Hocko wrote:
> From: Michal Hocko <mhocko@suse.com>
> 
> There is only very limited information printed when the memory offlining
> fails:
> [ 1984.506184] rac1 kernel: memory offlining [mem 0x82600000000-0x8267fffffff] failed due to signal backoff
> 
> This tells us that the failure is triggered by the userspace
> intervention but it doesn't tell us much more about the underlying
> reason. It might be that the page migration failes repeatedly and the
> userspace timeout expires and send a signal or it might be some of the
> earlier steps (isolation, memory notifier) takes too long.
> 
> If the migration failes then it would be really helpful to see which
> page that and its state. The same applies to the isolation phase. If we
> fail to isolate a page from the allocator then knowing the state of the
> page would be helpful as well.
> 
> Dump the page state that fails to get isolated or migrated. This will
> tell us more about the failure and what to focus on during debugging.
> 
> Signed-off-by: Michal Hocko <mhocko@suse.com>
> ---
>  mm/memory_hotplug.c | 12 ++++++++----
>  mm/page_alloc.c     |  1 +
>  2 files changed, 9 insertions(+), 4 deletions(-)
> 
> diff --git a/mm/memory_hotplug.c b/mm/memory_hotplug.c
> index 1badac89c58e..bf214beccda3 100644
> --- a/mm/memory_hotplug.c
> +++ b/mm/memory_hotplug.c
> @@ -1388,10 +1388,8 @@ do_migrate_range(unsigned long start_pfn, unsigned long end_pfn)
>  						    page_is_file_cache(page));
>  
>  		} else {
> -#ifdef CONFIG_DEBUG_VM
> -			pr_alert("failed to isolate pfn %lx\n", pfn);
> +			pr_warn("failed to isolate pfn %lx\n", pfn)>  			dump_page(page, "isolation failed");
> -#endif
>  			put_page(page);
>  			/* Because we don't have big zone->lock. we should
>  			   check this again here. */
> @@ -1411,8 +1409,14 @@ do_migrate_range(unsigned long start_pfn, unsigned long end_pfn)
>  		/* Allocate a new page from the nearest neighbor node */
>  		ret = migrate_pages(&source, new_node_page, NULL, 0,
>  					MIGRATE_SYNC, MR_MEMORY_HOTPLUG);
> -		if (ret)
> +		if (ret) {
> +			list_for_each_entry(page, &source, lru) {
> +				pr_warn("migrating pfn %lx failed ",
> +				       page_to_pfn(page), ret);

Seems like pr_warn() needs to have %d in here to print 'ret'. Though
dumping return code from migrate_pages() makes sense, wondering if
it is required for each and every page which failed to migrate here
or just one instance is enough.

> +				dump_page(page, NULL);
> +			}

s/NULL/failed to migrate/ for dump_page().

>  			putback_movable_pages(&source);
> +		}
>  	}
>  out:
>  	return ret;
> diff --git a/mm/page_alloc.c b/mm/page_alloc.c
> index a919ba5cb3c8..23267767bf98 100644
> --- a/mm/page_alloc.c
> +++ b/mm/page_alloc.c
> @@ -7845,6 +7845,7 @@ bool has_unmovable_pages(struct zone *zone, struct page *page, int count,
>  	return false;
>  unmovable:
>  	WARN_ON_ONCE(zone_idx(zone) == ZONE_MOVABLE);
> +	dump_page(pfn_to_page(pfn+iter), "has_unmovable_pages");

s/has_unmovable_pages/is unmovable/

If we eally care about the function name, then dump_page() should be
followed by dump_stack() like the case in some other instances.

>  	return true;

This will be dumped from HugeTLB and CMA allocation paths as well through
alloc_contig_range(). But it should be okay as those occurrences should be
rare and dumping page state then will also help.
