Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:46:57 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga004.fm.intel.com (fmsmga004.fm.intel.com [10.253.24.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 34B7B58014B;
	Wed,  5 Dec 2018 00:27:42 -0800 (PST)
Received: from orsmga102-1.jf.intel.com (HELO mga09.intel.com) ([10.7.208.27])
  by fmsmga004-1.fm.intel.com with ESMTP; 05 Dec 2018 00:27:41 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AOen+zhN8ZPGQvwpyPW8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0KPj7pcbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJOT43/n/KhMJzgqJUrw6uqAF9zIHae4GVLPhzc7jBfd8GX2dNQtpdWjZfDo66?=
 =?us-ascii?q?coABD/ABPeFdr4TlqFQOrB2+BQ6xC+jyzzFIgWL23akn2OkmDwHG3wsgH88KsH?=
 =?us-ascii?q?nPr9X6Kr0SUearw6nM1znDaOlW2Tjk5YXObxsvoumMUKpufcbNzUQjDR7Jg1uO?=
 =?us-ascii?q?pYD/Ij+Y1fgBv3Ka4udiTe6jlnIrpgBrrjSx2ssgl5PFip8Lxl3L7yl13YQ4KN?=
 =?us-ascii?q?6+RUVme9CrCoFQuDufN4ZuQsMtXWVouCEix70Ytp60YjIKxI4kxxHBcfyHdZaH?=
 =?us-ascii?q?4hb5WOaWOzd4i2ppeLO5hxms7Uit0vPwWtWw3VpQsyZInMfAumoQ2xHQ9sSLUP?=
 =?us-ascii?q?pw80W51TaKzQ/T6+VEIU4ularcLp4s2rowlpsVsUTeES76gUb2g7GMdkUi5Oeo?=
 =?us-ascii?q?7/3rYrLop5+aKYB0kBrzMrohmsOhG+Q0KAsOUHaB+eS6yrLj+Vf1QLJQjv05iq?=
 =?us-ascii?q?XZqozVJdwHpq6lBA9YyoIj6xe8Dzi4ytgZkmQHIUlBeBKGiYjpJl7PLOr5Dfe5?=
 =?us-ascii?q?n1SjjjNry+raMb3mB5XHNmLDn6v5fbZh905czxI+zdBF6JJVFrEOOvXzVlXxtN?=
 =?us-ascii?q?zFFBA5NQO0zv3jCNV80IMeRG2ODrWYMKPUrV+H+OYvL/OQa48SvTb3M+Il6OL2?=
 =?us-ascii?q?jX8lhV8derGk3ZkQaH+mBPhmIEKZYXzqgtcGCmoKugs+TOr3iFyNSzJTZnCyX7?=
 =?us-ascii?q?4i6TE/Eo6pEYDDRoW1irybwCi7BoFWZnxBCl2UC3jobIWEW/APaC6IOM9uiD4E?=
 =?us-ascii?q?WKOlS48g0xGuqQD7x6BmLurS5i0Xq5bj2MJp6O3UkBE47SZ0ANiF02GRU2F0mX?=
 =?us-ascii?q?sFRzws06B5u0B9zlaD3rJ+g/xXDtFT4/JJUgEnNZ/T1eB6CtbyWh7fcdeNUlqp?=
 =?us-ascii?q?XtKmATQpRNIr39AOe1p9G8mljh3bwiWlGaEVmKKRCJw06K3c2WPxKNh7y3rB0K?=
 =?us-ascii?q?khjFwmQs9UOG2ih65/8RXTBoHTn0WYkaaqaboT3CrX+GifymqOuVlSUBRsXqXd?=
 =?us-ascii?q?QXAfekzWoMzk6UzYUb+hF64rMgtbxs6EMatFdNvpgE5CRPfiPtTefm2wl32xBR?=
 =?us-ascii?q?aO2rODco7qd38B0yXaDUgOixoT8mqeNQgiGiehpHrTDCBvFVLqZEPs7el+qXOh?=
 =?us-ascii?q?Qk8o1Q2KaFdh1760+h4TivyRUPcT3rMCuCc8pDR4Ble939TKC9WeowptZrlTYd?=
 =?us-ascii?q?Q44F1fz2LWqxR9PoC8L6BlnlMRaQB3sF3h1hppCoRMi9MlrG43wwVoL6KY01RB?=
 =?us-ascii?q?dy2D0JD0O73XLHTy/R+1Z67X3FHezMiZ+qMV5PskrFXjuRmjFlA+/HV/z9lVz3?=
 =?us-ascii?q?yc643KDQoPS57+Tlw79hl6p77AZCk96JjZ1XltMamyrz/D1MglBOojyha8Ydhf?=
 =?us-ascii?q?NLmIGxP1E80fH8KuMvAlm0C1bhIYO+Bf7LQ0P8K6ePScwq6kIeFgkCigjWtZ+o?=
 =?us-ascii?q?B901uA+DZmRe7MwpkK3euY3gyBVzrniFehs8b3mZ1LZD0IH2q/zzTkC5BVZqFo?=
 =?us-ascii?q?YYkLDmKuKdWtxtpin57tR2JY9Fm7ClIG2c+lYxqTY0bm3Q1N00QauninmSq+zz?=
 =?us-ascii?q?xpnDAltKuf3CrSw+v8cBoLIHJERG5njV30O4i7k8gaXFS0bwgujBal51z1x7JY?=
 =?us-ascii?q?pKR8KGnfW1xIcDL1L2FhU6uwsKSNY8hU5ZMssCVXVvm8YF+ARr78pRsazz3sH2?=
 =?us-ascii?q?9EyD8ncDGqv43znwZmh2KFMHZzsH3ZdNlwxBjF49zQX/xR3jsARCRjjTnXB168?=
 =?us-ascii?q?P8Sm/NmOlpfDtPy+WHylVpFJbSbryoaAvjOh5WJ2GR2/g+yzmtr/HAg5yyD71s?=
 =?us-ascii?q?NmVSXVrBnmZInr2L+3MeZmfkluGV/95NB2GoB4kossmp4Q3WIWiYmS/XoCiW3z?=
 =?us-ascii?q?K8lU2bribHoRQj4G29vV4Anm2EJ5NH6IyZz2Vm6BwsR/fdm1eX0Z2jgy781RDK?=
 =?us-ascii?q?eU7bpEnTZ6o1airALRZ+R9kSkZyfc09HEahOQJshI3ziqBGrASAVVYPSv0mhSU?=
 =?us-ascii?q?6NC+qb9bZWe1fri2yUp+hsuhDLCZrwFYWXb5fIoiHCBq4sV+NlLMzGP86oX+dN?=
 =?us-ascii?q?bMatITswWekw3cgOhNNJIxiv0KiDJ8Nm3nun0lz/M7gQZq3ZGnp4WHL2Rt/KSk?=
 =?us-ascii?q?Ah9XLDH1ZsUT+i3zgqZahMqZw4evHpB5EDURQJToVe6oEC4Vtfn/NQaBCjg8pW?=
 =?us-ascii?q?mAGbbFAQ+T8kRmr2/ME5C2MXGYPmIZwM5mRBmcIkxfnQ8VUC87np4/CgCl2sjh?=
 =?us-ascii?q?fF1l6TAW417ysgFMxf5wNxnjTmffox+lazczSJiCNRpW8xtN50HPPcyF6eJzGS?=
 =?us-ascii?q?5Y84alrAyMLGybegtJAXsIWkyCG1DsIL2u6cPc/OifA+q0N+HObqmWqexCS/eI?=
 =?us-ascii?q?woqi0ot48DaNNcWPPXhiA+c42kpZWnB5FNrWmy8SSywMjC/Na8+bpBGh+ix4tM?=
 =?us-ascii?q?y/8fLrWB7x6ouLEbddLdJv+xWui6eZK+GQnDp5KSpf1p4U33DI1aMQ3EQMhCBu?=
 =?us-ascii?q?bTWtFbUAuDXJTKLRnK9XEhEaZzlyNMtO86IzwA1NNdTHhdPy075yluQ1BEtdVV?=
 =?us-ascii?q?z9hsGpYtQHI328NFPCHkqEKK6KKiHLw87pZ6OxUrlQjORStx2ttjeXCU7jPjKf?=
 =?us-ascii?q?lzb3UxCjK/1DjCaePBZGooGybg5tCXT/TNLhchC6MMV4jTszwb01gHPFLW8dMT?=
 =?us-ascii?q?hmfENLob2d9idYgvR5G2xc4XtpN+iEmyCF7+bGLpYaq+dkAiNxl7ES3HNv+rJT?=
 =?us-ascii?q?4z1NQ7RRmWOGst9oshe5k++D2ChPXx9HqzINj4WO6xZMI6Lco6dBX3HItDEK8G?=
 =?us-ascii?q?HYXwoJoMZhIt7ioaZdzp7Ijq2le2QKyM7d4cZJX5ucE8mAKnd0aRc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AQAADKigdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBUQcBAQsBg2snjBKOGxSIfo46gXMUGBMBh00iNAkNAQMBAQEBAQECARMBAQE?=
 =?us-ascii?q?IDQkIKSMMgjYigmQBAQEBAgEBAiQTBgEBNwEEAQkBAQoOCgklAwwFDTwLCAWDH?=
 =?us-ascii?q?IFqAw0HAQWkCYFsM4J2AQEFhQYNghQIiwKBHBeBQD+BEYMSgleFX4ImiTSGAnu?=
 =?us-ascii?q?Pci4JjhODIyMKAoFPhRSDJ4cWLI5RiXyBRoINMxoIKAiDJ4IbDBeIXoVHODKBA?=
 =?us-ascii?q?gMBASETinMBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AQAADKigdch0O0hNFkHAEBAQQBAQcEAQGBUQcBAQsBg2s?=
 =?us-ascii?q?njBKOGxSIfo46gXMUGBMBh00iNAkNAQMBAQEBAQECARMBAQEIDQkIKSMMgjYig?=
 =?us-ascii?q?mQBAQEBAgEBAiQTBgEBNwEEAQkBAQoOCgklAwwFDTwLCAWDHIFqAw0HAQWkCYF?=
 =?us-ascii?q?sM4J2AQEFhQYNghQIiwKBHBeBQD+BEYMSgleFX4ImiTSGAnuPci4JjhODIyMKA?=
 =?us-ascii?q?oFPhRSDJ4cWLI5RiXyBRoINMxoIKAiDJ4IbDBeIXoVHODKBAgMBASETinMBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,317,1539673200"; 
   d="scan'208";a="56155084"
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Unscannable: 2
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 00:27:32 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727139AbeLEI1a (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 03:27:30 -0500
Received: from mail.kernel.org ([198.145.29.99]:52726 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726861AbeLEI1a (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 03:27:30 -0500
Received: from localhost (unknown [106.201.124.178])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 49CC52082B;
        Wed,  5 Dec 2018 08:27:27 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=default; t=1543998448;
        bh=4bgy+e3deoxq9Y9P2TbrKO8J5FuY/oovPON9+Cl2Pnk=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=jBtEISKlk+Frm0yKMvT7FuWoblbpZFqQoySiZda38yoTKOY3ZXcXxtbpsorJ9bjeh
         wX1uUMLaznWV/tuPQiOSx2rLJi3rKakXd7BZ6dYqeWjdc1qUjeJh4gydvapbT1AI/4
         0HEocEoU5QZ1ASuuRI+KwZaFoQ/fWoiBBggjIBRs=
Date: Wed, 5 Dec 2018 13:57:19 +0530
From: Vinod Koul <vkoul@kernel.org>
To: Yangtao Li <tiny.windzz@gmail.com>
Cc: dan.j.williams@intel.com, sudeep.dutt@intel.com,
        ashutosh.dixit@intel.com, daniel@zonque.org,
        haojian.zhuang@gmail.com, robert.jarzmik@free.fr, okaya@kernel.org,
        andy.gross@linaro.org, david.brown@linaro.org,
        dmaengine@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-arm-kernel@lists.infradead.org,
        linux-arm-msm@vger.kernel.org, linux-soc@vger.kernel.org
Subject: Re: [PATCH] dmaengine: remove DBGFS_FUNC_DECL()
Message-ID: <20181205082719.GF2847@vkoul-mobl>
References: <20181130154249.3222-1-tiny.windzz@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20181130154249.3222-1-tiny.windzz@gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 30-11-18, 10:42, Yangtao Li wrote:
> We already have the DEFINE_SHOW_ATTRIBUTE,There is no need to define
> such a macro,so remove DBGFS_FUNC_DECL.Also use macro to simplify some
> code.

Spaces after full stop and comma please

> 
> Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
> ---
>  drivers/dma/amba-pl08x.c     | 14 ++------------
>  drivers/dma/mic_x100_dma.c   | 22 +++-------------------
>  drivers/dma/pxa_dma.c        | 24 ++++++++++++------------
>  drivers/dma/qcom/hidma_dbg.c | 33 ++++++---------------------------

Do you mind splitting it per file.

>  4 files changed, 23 insertions(+), 70 deletions(-)
> 
> diff --git a/drivers/dma/amba-pl08x.c b/drivers/dma/amba-pl08x.c
> index 97483df1f82e..fc8c2bab563c 100644
> --- a/drivers/dma/amba-pl08x.c
> +++ b/drivers/dma/amba-pl08x.c
> @@ -2505,24 +2505,14 @@ static int pl08x_debugfs_show(struct seq_file *s, void *data)
>  	return 0;
>  }
>  
> -static int pl08x_debugfs_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, pl08x_debugfs_show, inode->i_private);
> -}
> -
> -static const struct file_operations pl08x_debugfs_operations = {
> -	.open		= pl08x_debugfs_open,
> -	.read		= seq_read,
> -	.llseek		= seq_lseek,
> -	.release	= single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(pl08x_debugfs);
>  
>  static void init_pl08x_debugfs(struct pl08x_driver_data *pl08x)
>  {
>  	/* Expose a simple debugfs interface to view all clocks */
>  	(void) debugfs_create_file(dev_name(&pl08x->adev->dev),
>  			S_IFREG | S_IRUGO, NULL, pl08x,
> -			&pl08x_debugfs_operations);
> +			&pl08x_debugfs_fops);
>  }
>  
>  #else
> diff --git a/drivers/dma/mic_x100_dma.c b/drivers/dma/mic_x100_dma.c
> index adfd316db1a8..6a91e28d537d 100644
> --- a/drivers/dma/mic_x100_dma.c
> +++ b/drivers/dma/mic_x100_dma.c
> @@ -676,7 +676,7 @@ static void mic_dma_dev_unreg(struct mic_dma_device *mic_dma_dev)
>  }
>  
>  /* DEBUGFS CODE */
> -static int mic_dma_reg_seq_show(struct seq_file *s, void *pos)
> +static int mic_dma_reg_show(struct seq_file *s, void *pos)
>  {
>  	struct mic_dma_device *mic_dma_dev = s->private;
>  	int i, chan_num, first_chan = mic_dma_dev->start_ch;
> @@ -707,23 +707,7 @@ static int mic_dma_reg_seq_show(struct seq_file *s, void *pos)
>  	return 0;
>  }
>  
> -static int mic_dma_reg_debug_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, mic_dma_reg_seq_show, inode->i_private);
> -}
> -
> -static int mic_dma_reg_debug_release(struct inode *inode, struct file *file)
> -{
> -	return single_release(inode, file);
> -}
> -
> -static const struct file_operations mic_dma_reg_ops = {
> -	.owner   = THIS_MODULE,
> -	.open    = mic_dma_reg_debug_open,
> -	.read    = seq_read,
> -	.llseek  = seq_lseek,
> -	.release = mic_dma_reg_debug_release
> -};
> +DEFINE_SHOW_ATTRIBUTE(mic_dma_reg);
>  
>  /* Debugfs parent dir */
>  static struct dentry *mic_dma_dbg;
> @@ -747,7 +731,7 @@ static int mic_dma_driver_probe(struct mbus_device *mbdev)
>  		if (mic_dma_dev->dbg_dir)
>  			debugfs_create_file("mic_dma_reg", 0444,
>  					    mic_dma_dev->dbg_dir, mic_dma_dev,
> -					    &mic_dma_reg_ops);
> +					    &mic_dma_reg_fops);
>  	}
>  	return 0;
>  }
> diff --git a/drivers/dma/pxa_dma.c b/drivers/dma/pxa_dma.c
> index 825725057e00..8e1e1b07d32f 100644
> --- a/drivers/dma/pxa_dma.c
> +++ b/drivers/dma/pxa_dma.c
> @@ -189,7 +189,7 @@ bool pxad_filter_fn(struct dma_chan *chan, void *param);
>  #include <linux/uaccess.h>
>  #include <linux/seq_file.h>
>  
> -static int dbg_show_requester_chan(struct seq_file *s, void *p)
> +static int requester_chan_show(struct seq_file *s, void *p)
>  {
>  	struct pxad_phy *phy = s->private;
>  	int i;
> @@ -220,7 +220,7 @@ static int is_phys_valid(unsigned long addr)
>  #define PXA_DCSR_STR(flag) (dcsr & PXA_DCSR_##flag ? #flag" " : "")
>  #define PXA_DCMD_STR(flag) (dcmd & PXA_DCMD_##flag ? #flag" " : "")
>  
> -static int dbg_show_descriptors(struct seq_file *s, void *p)
> +static int descriptors_show(struct seq_file *s, void *p)
>  {
>  	struct pxad_phy *phy = s->private;
>  	int i, max_show = 20, burst, width;
> @@ -263,7 +263,7 @@ static int dbg_show_descriptors(struct seq_file *s, void *p)
>  	return 0;
>  }
>  
> -static int dbg_show_chan_state(struct seq_file *s, void *p)
> +static int chan_state_show(struct seq_file *s, void *p)
>  {
>  	struct pxad_phy *phy = s->private;
>  	u32 dcsr, dcmd;
> @@ -306,7 +306,7 @@ static int dbg_show_chan_state(struct seq_file *s, void *p)
>  	return 0;
>  }
>  
> -static int dbg_show_state(struct seq_file *s, void *p)
> +static int state_show(struct seq_file *s, void *p)
>  {
>  	struct pxad_device *pdev = s->private;
>  
> @@ -329,10 +329,10 @@ static const struct file_operations dbg_fops_##name = { \
>  	.release	= single_release, \
>  }
>  
> -DBGFS_FUNC_DECL(state);
> -DBGFS_FUNC_DECL(chan_state);
> -DBGFS_FUNC_DECL(descriptors);
> -DBGFS_FUNC_DECL(requester_chan);
> +DEFINE_SHOW_ATTRIBUTE(state);
> +DEFINE_SHOW_ATTRIBUTE(chan_state);
> +DEFINE_SHOW_ATTRIBUTE(descriptors);
> +DEFINE_SHOW_ATTRIBUTE(requester_chan);
>  
>  static struct dentry *pxad_dbg_alloc_chan(struct pxad_device *pdev,
>  					     int ch, struct dentry *chandir)
> @@ -348,13 +348,13 @@ static struct dentry *pxad_dbg_alloc_chan(struct pxad_device *pdev,
>  
>  	if (chan)
>  		chan_state = debugfs_create_file("state", 0400, chan, dt,
> -						 &dbg_fops_chan_state);
> +						 &chan_state_fops);
>  	if (chan_state)
>  		chan_descr = debugfs_create_file("descriptors", 0400, chan, dt,
> -						 &dbg_fops_descriptors);
> +						 &descriptors_fops);
>  	if (chan_descr)
>  		chan_reqs = debugfs_create_file("requesters", 0400, chan, dt,
> -						&dbg_fops_requester_chan);
> +						&requester_chan_fops);
>  	if (!chan_reqs)
>  		goto err_state;
>  
> @@ -375,7 +375,7 @@ static void pxad_init_debugfs(struct pxad_device *pdev)
>  		goto err_root;
>  
>  	pdev->dbgfs_state = debugfs_create_file("state", 0400, pdev->dbgfs_root,
> -						pdev, &dbg_fops_state);
> +						pdev, &state_fops);
>  	if (!pdev->dbgfs_state)
>  		goto err_state;
>  
> diff --git a/drivers/dma/qcom/hidma_dbg.c b/drivers/dma/qcom/hidma_dbg.c
> index 3bdcb8056a36..9523faf7acdc 100644
> --- a/drivers/dma/qcom/hidma_dbg.c
> +++ b/drivers/dma/qcom/hidma_dbg.c
> @@ -85,11 +85,11 @@ static void hidma_ll_devstats(struct seq_file *s, void *llhndl)
>  }
>  
>  /*
> - * hidma_chan_stats: display HIDMA channel statistics
> + * hidma_chan_show: display HIDMA channel statistics
>   *
>   * Display the statistics for the current HIDMA virtual channel device.
>   */
> -static int hidma_chan_stats(struct seq_file *s, void *unused)
> +static int hidma_chan_show(struct seq_file *s, void *unused)
>  {
>  	struct hidma_chan *mchan = s->private;
>  	struct hidma_desc *mdesc;
> @@ -117,11 +117,11 @@ static int hidma_chan_stats(struct seq_file *s, void *unused)
>  }
>  
>  /*
> - * hidma_dma_info: display HIDMA device info
> + * hidma_dma_show: display HIDMA device info
>   *
>   * Display the info for the current HIDMA device.
>   */
> -static int hidma_dma_info(struct seq_file *s, void *unused)
> +static int hidma_dma_show(struct seq_file *s, void *unused)
>  {
>  	struct hidma_dev *dmadev = s->private;
>  	resource_size_t sz;
> @@ -138,29 +138,8 @@ static int hidma_dma_info(struct seq_file *s, void *unused)
>  	return 0;
>  }
>  
> -static int hidma_chan_stats_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, hidma_chan_stats, inode->i_private);
> -}
> -
> -static int hidma_dma_info_open(struct inode *inode, struct file *file)
> -{
> -	return single_open(file, hidma_dma_info, inode->i_private);
> -}
> -
> -static const struct file_operations hidma_chan_fops = {
> -	.open = hidma_chan_stats_open,
> -	.read = seq_read,
> -	.llseek = seq_lseek,
> -	.release = single_release,
> -};
> -
> -static const struct file_operations hidma_dma_fops = {
> -	.open = hidma_dma_info_open,
> -	.read = seq_read,
> -	.llseek = seq_lseek,
> -	.release = single_release,
> -};
> +DEFINE_SHOW_ATTRIBUTE(hidma_chan);
> +DEFINE_SHOW_ATTRIBUTE(hidma_dma);
>  
>  void hidma_debug_uninit(struct hidma_dev *dmadev)
>  {
> -- 
> 2.17.0

-- 
~Vinod
