Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 06 Dec 2018 08:55:17 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga006.jf.intel.com (orsmga006.jf.intel.com [10.7.209.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id C3473580433;
	Wed,  5 Dec 2018 08:05:37 -0800 (PST)
Received: from fmsmga102.fm.intel.com ([10.1.193.69])
  by orsmga006-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Dec 2018 08:05:37 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3Ab6ZaVxIoEFdJ4Nhj2dmcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgUL/n+rarrMEGX3/hxlliBBdydt6oUzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxlLiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXshfSTFPDI2/?=
 =?us-ascii?q?YYQNAeoBJv5YoovmqlcSsRezHxWgCP/zxjNUgHL9wK000/4mEQHDxAEuG9MOsG?=
 =?us-ascii?q?7VrN7oLakSVfu1w7PVxjjEbfNW3jP96JPSfR06ovGDQ6hwcczPxkkrDQ/FiU+Q?=
 =?us-ascii?q?qYP8Mj6Ty+8DvW+b7+96WuKujW4qswJxrSa1xscqlIbJgpgZylfe9SV2xos+ON?=
 =?us-ascii?q?62SFZjbNK6DJddszuWO5Z4T888WW1kpSU3xqEctZO6fiUG0IorywLbZvCdboSF?=
 =?us-ascii?q?7AzvWPyMLTp7in9pYqyzihW0/EO90OPzTNO030xPriddktnDqHQN1xvL58iZRf?=
 =?us-ascii?q?ty4F2h1SyM1w/N8OFEJ147la7BJ54m2L4wmYIfsUXFHiDohEX7lLGaelkg9+Sy?=
 =?us-ascii?q?9ujqbKvqqoWBO4J3lg3yKKUjl86nDeQ9KAcOXmyb+eqm1L3k+E30WLFKjvwwkq?=
 =?us-ascii?q?nEv5HWPMcbqbCjAw9TzIkj7w+zDzCo0dQeg3YHNklIeAyIj4f3IVHCOvP4Auml?=
 =?us-ascii?q?g1Sqjjhrw+rKPrr7ApXCNnTDiqvufa5h605Azwo+1dRf55NXCr4fOv7yVVLxuc?=
 =?us-ascii?q?fcDh84NQy03unmBM981oMYRWKAHKuZPLnOvl+P4+IlO/OMa5MNuDbhN/gl4Obj?=
 =?us-ascii?q?jX8jll8cYammx5wXZGq4HvR7OUqZZ3Xsj8wFEWcLuAo+UePrhEeDUT5Ve3a9Qa?=
 =?us-ascii?q?Y86isnB4KhCIfJXpqtj6CZ3CenAp1WYXhLClKLEXj2bYmEWPAMaCSUIs9miTEE?=
 =?us-ascii?q?UbmhS4k81RChrgP6yrxnLvbK9S0cr57syN915+jLnxEo6TN0F9id032KT2xshG?=
 =?us-ascii?q?wIXD823Kd8oUBn0FeMy6p4judcFdxS4fNJTwg7OYTdz+x8F9D9RAbBcs2VR1ah?=
 =?us-ascii?q?R9WsGSsxQc4pw98Sf0Z9HM2vjhPZ0CqsGbMVk72LC4Yy8qLTxHXxI8d9y3Db1K?=
 =?us-ascii?q?gulVUmQ81PNXG4ia577QTcG4nJk0CBnaawaascxDLN9HuEzWeWoU5XShBwXrvf?=
 =?us-ascii?q?UXAffETWq8/56V3ET7OpDbQnMQ5BycqZJ6tOa93pi0hGRfj5NNTfZWKxh3m/BR?=
 =?us-ascii?q?KSyryQa4rqfn0X3D/BB0gcjwAT4XGGOBAjCSi7vWLREiZiFVL1bEPq6ulxtnW7?=
 =?us-ascii?q?Q1QwzwGLaU1hyrW09gQUhfyaV/McwLYEtD09pDVzGVa3x8jWBMaYpwp9YKVcZs?=
 =?us-ascii?q?sw4EtG1WLcsAx9IpygLqB4il4CaQh3uFnu1xF2CoVGnsgnt3cqzAt0KaKF31JN?=
 =?us-ascii?q?bTKY3ZbsOrLJLmn+5gyga6nT2lvGytaZ5r8P6Ogkq1XkpAymDE4i/Gto0tZL03?=
 =?us-ascii?q?qQ/I7FDBcPXp3rVEY39B96p6/Bbyk55oPU02BsMKauvj/D3dIpGPUqyhK6c9hD?=
 =?us-ascii?q?N6OEERf4E9cGCMi2NOwqh1+pYwoEPeBP7qI7I9mqdvqG2KGxOuZgkymrjWBG4I?=
 =?us-ascii?q?B7z0KN+DBwSu/O35YZ3f6Y2hGLWCv7jFekqsr3g5xLZSkOHmqjzijpHJRRZqxu?=
 =?us-ascii?q?cokRE2ehPsq3ys94h5HzQX5Y9UevCE8c18+tZBWdcUb93QpW1UkMpXynmC24zy?=
 =?us-ascii?q?F7kj0zr6qf2jDOzPrmdBYdJmFLQ2xih0/2IYeol9AaQFSobw8xmRql5Eb23aha?=
 =?us-ascii?q?qL5kL2nOR0dFZCz2L2BkUqutubuOec9P6JU0sSpJVOSwe0yVSrn4oxECySPsA3?=
 =?us-ascii?q?NexCwndzGtopj5nQZ1iHieLHZwq3rVY9pwyg3c5NzfRP5R2CQJRC9jhDnTB1i8?=
 =?us-ascii?q?OcSp/NqOm5fCtOC+S3yuVplJfSb3yoOAsTOx5Xd2Dh2ng/CzhtrnHBA60CDh0N?=
 =?us-ascii?q?lmTyfIrBf6YoTw06S6MORnflRnBVPm6sp6HJ1+nZU0hJ0KxXcagZCV92IdkWjv?=
 =?us-ascii?q?KdVbxb7+bH0VSD4I2dHV4RLp2E1+Ln2TwYL5WW6Qws9gZ9m8f2MX1Tgx78FMCK?=
 =?us-ascii?q?eI8rNEmTF5rUa/rQLUefJ9hCsSyeMy6H4GhOEEoA8tziSeAr8IB0VZMzLjlw+U?=
 =?us-ascii?q?79+gtqVYf3igcaK/1EdlmdChDbeCohxTWXrje5ciGzNw4dt7MF7WzHLz7YTkcs?=
 =?us-ascii?q?HKbd0Prh2UjwvAj+9NJZItkfoKgDBrOGPnsn0j1u47lgdu3ZChsYiDKmVt+r+5?=
 =?us-ascii?q?AxFCOj30YcMT5i/ijaJEksmK2ICvG41rGi8XU5vwUfKoDDUSuOz8OAmUFz08rm?=
 =?us-ascii?q?qbFaDbHQ+C80pmq3PPE5a2N3CYPnUZzNNiRAWDK0xbmgwbQDI6npshHACw2MPh?=
 =?us-ascii?q?aFt55iwW5lPgqBtD0OdoOAfkUmvFuAekcDQ0SIWcLBpL6AFN/VzVPNea7uJyGS?=
 =?us-ascii?q?FY45KgoBaMKmydewRHE2UJVlaYCFDkO7mk/cPA/PSABuqiM/vOZq2DqOxZV/eV?=
 =?us-ascii?q?3JKvz5Fp/zCWOsWUOXliCfI711FHXXB4HcTZhjoORzYWlyLLc86UuhO89jdroc?=
 =?us-ascii?q?C49fThQBjv6peXC7tOLdVv/Ai7gaedOO6RhyZ5KjdY2okPxX/Sz7gf00Adiztz?=
 =?us-ascii?q?dzm2CrkAsS/NTKTNmq5YFRIbaiVzNNdW4KI4xAVCJcnbitbt3L5ikvE1E0tFVU?=
 =?us-ascii?q?Dmmsyxf8MKPnqyNEnZC0eLLriGITzLztrzYaO9T71QkepVuwexuTadD0/sIDCD?=
 =?us-ascii?q?myP1WBCoNOFGlDubMwBGuIGhbhZtDnDuTM7nah2+KtN4kSc6zqE0hnzUM24RKj?=
 =?us-ascii?q?x8c0JLrr2N4iJUmPR/G2pd7nV7KemIgTqW7+7dKpwOq/tkHjx0l/5G4HQ907ZU?=
 =?us-ascii?q?7DtLRPpwmCvTqN5hu1CnkumVxTphXxpDsTJLhIONvUV/NqTV7JhAWXDY/B0T6W?=
 =?us-ascii?q?WcEQgFp9xgCo6nh6cF48LJnab/L39p+sjK9M8cAIDYJYqiPX4meU7gEzvZJAgI?=
 =?us-ascii?q?VzimMSfYnUML1Lmp6nCLo55ykJ/3hJcCVvcPTlsuCv4WFmxqG9sOJZZsGDQ+nu?=
 =?us-ascii?q?jfxPYF+Xek5CvQRsFBoorOHqabR+2pOjebiaJYfRIgyrP1KYAUcIv/jR9McF5/?=
 =?us-ascii?q?yabLAUuYetRWq2U1bAgwu0xl83VkSGA3nUX/ZVX+szcoCfeok0tu2UNFauM3+W?=
 =?us-ascii?q?Kpug9vKw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BOAAAX9gdch0O0hNFkHAEBAQQBAQcEA?=
 =?us-ascii?q?QGBVAQBAQsBgVqBD4ECJ4xxiy+CIZI/hmwUGAsIAYdTIjcGDQEDAQEBAQEBAgE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2JAGCYgMDAQIkUgYJAQFQA1QGARIFglFLAYIBBQqmPzOKK?=
 =?us-ascii?q?IweF4FAP4ERjW4CiyKVNAmHA4o0CxiCKIc4h08siF2BcIJ5iwyBXIF3MxoIKAi?=
 =?us-ascii?q?DJwmCHheIXoVAPgEBMQEBgQMBARyKQAEB?=
X-IPAS-Result: =?us-ascii?q?A0BOAAAX9gdch0O0hNFkHAEBAQQBAQcEAQGBVAQBAQsBgVq?=
 =?us-ascii?q?BD4ECJ4xxiy+CIZI/hmwUGAsIAYdTIjcGDQEDAQEBAQEBAgETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2JAGCYgMDAQIkUgYJAQFQA1QGARIFglFLAYIBBQqmPzOKKIweF4FAP4ERjW4?=
 =?us-ascii?q?CiyKVNAmHA4o0CxiCKIc4h08siF2BcIJ5iwyBXIF3MxoIKAiDJwmCHheIXoVAP?=
 =?us-ascii?q?gEBMQEBgQMBARyKQAEB?=
X-IronPort-AV: E=Sophos;i="5.56,318,1539673200"; 
   d="scan'208";a="55647803"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mtab.intel.com with ESMTP; 05 Dec 2018 08:05:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728428AbeLEQFd (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Wed, 5 Dec 2018 11:05:33 -0500
Received: from mx1.redhat.com ([209.132.183.28]:46619 "EHLO mx1.redhat.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1728361AbeLEQFb (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 5 Dec 2018 11:05:31 -0500
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mx1.redhat.com (Postfix) with ESMTPS id 6840B3DE04;
        Wed,  5 Dec 2018 16:05:30 +0000 (UTC)
Received: from krava.brq.redhat.com (unknown [10.43.17.30])
        by smtp.corp.redhat.com (Postfix) with ESMTP id DF1805C5FD;
        Wed,  5 Dec 2018 16:05:27 +0000 (UTC)
From: Jiri Olsa <jolsa@kernel.org>
To: Arnaldo Carvalho de Melo <acme@kernel.org>,
        Steven Rostedt <rostedt@goodmis.org>,
        Peter Zijlstra <a.p.zijlstra@chello.nl>
Cc: lkml <linux-kernel@vger.kernel.org>,
        Ingo Molnar <mingo@kernel.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        "Luis Claudio R. Goncalves" <lclaudio@uudg.org>, ldv@altlinux.org,
        esyr@redhat.com, Frederic Weisbecker <fweisbec@gmail.com>
Subject: [PATCH 6/8] perf tools: Add ordered_events__flush_time interface
Date: Wed,  5 Dec 2018 17:05:07 +0100
Message-Id: <20181205160509.1168-7-jolsa@kernel.org>
In-Reply-To: <20181205160509.1168-1-jolsa@kernel.org>
References: <20181205160509.1168-1-jolsa@kernel.org>
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16 (mx1.redhat.com [10.5.110.29]); Wed, 05 Dec 2018 16:05:30 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Adding OE_FLUSH__TIME flush type, to be able to flush
only certain amount of the queue based on the provided
timestamp. It will be used in following patches.

Link: http://lkml.kernel.org/n/tip-a3na77vemwr1g92lfhlrztg5@git.kernel.org
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
---
 tools/perf/util/ordered-events.c | 23 +++++++++++++++++++----
 tools/perf/util/ordered-events.h |  2 ++
 2 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/tools/perf/util/ordered-events.c b/tools/perf/util/ordered-events.c
index c5412db05683..b5c6a854379f 100644
--- a/tools/perf/util/ordered-events.c
+++ b/tools/perf/util/ordered-events.c
@@ -219,8 +219,7 @@ int ordered_events__queue(struct ordered_events *oe, union perf_event *event,
 	return 0;
 }
 
-static int __ordered_events__flush(struct ordered_events *oe,
-				   bool show_progress)
+static int do_flush(struct ordered_events *oe, bool show_progress)
 {
 	struct list_head *head = &oe->events;
 	struct ordered_event *tmp, *iter;
@@ -263,7 +262,8 @@ static int __ordered_events__flush(struct ordered_events *oe,
 	return 0;
 }
 
-int ordered_events__flush(struct ordered_events *oe, enum oe_flush how)
+static int __ordered_events__flush(struct ordered_events *oe, enum oe_flush how,
+				   u64 time)
 {
 	static const char * const str[] = {
 		"NONE",
@@ -302,6 +302,11 @@ int ordered_events__flush(struct ordered_events *oe, enum oe_flush how)
 		break;
 	}
 
+	case OE_FLUSH__TIME:
+		oe->next_flush = time;
+		show_progress = false;
+		break;
+
 	case OE_FLUSH__ROUND:
 	case OE_FLUSH__NONE:
 	default:
@@ -312,7 +317,7 @@ int ordered_events__flush(struct ordered_events *oe, enum oe_flush how)
 		   str[how], oe->nr_events);
 	pr_oe_time(oe->max_timestamp, "max_timestamp\n");
 
-	err = __ordered_events__flush(oe, show_progress);
+	err = do_flush(oe, show_progress);
 
 	if (!err) {
 		if (how == OE_FLUSH__ROUND)
@@ -328,6 +333,16 @@ int ordered_events__flush(struct ordered_events *oe, enum oe_flush how)
 	return err;
 }
 
+int ordered_events__flush(struct ordered_events *oe, enum oe_flush how)
+{
+	return __ordered_events__flush(oe, how, 0);
+}
+
+int ordered_events__flush_time(struct ordered_events *oe, u64 time)
+{
+	return __ordered_events__flush(oe, OE_FLUSH__TIME, time);
+}
+
 void ordered_events__init(struct ordered_events *oe, ordered_events__deliver_t deliver,
 			  void *data)
 {
diff --git a/tools/perf/util/ordered-events.h b/tools/perf/util/ordered-events.h
index 0c6e26aec0e3..6ef81e5be052 100644
--- a/tools/perf/util/ordered-events.h
+++ b/tools/perf/util/ordered-events.h
@@ -19,6 +19,7 @@ enum oe_flush {
 	OE_FLUSH__ROUND,
 	OE_FLUSH__HALF,
 	OE_FLUSH__TOP,
+	OE_FLUSH__TIME,
 };
 
 struct ordered_events;
@@ -55,6 +56,7 @@ int ordered_events__queue(struct ordered_events *oe, union perf_event *event,
 			  u64 timestamp, u64 file_offset);
 void ordered_events__delete(struct ordered_events *oe, struct ordered_event *event);
 int ordered_events__flush(struct ordered_events *oe, enum oe_flush how);
+int ordered_events__flush_time(struct ordered_events *oe, u64 time);
 void ordered_events__init(struct ordered_events *oe, ordered_events__deliver_t deliver,
 			  void *data);
 void ordered_events__free(struct ordered_events *oe);
-- 
2.17.2

