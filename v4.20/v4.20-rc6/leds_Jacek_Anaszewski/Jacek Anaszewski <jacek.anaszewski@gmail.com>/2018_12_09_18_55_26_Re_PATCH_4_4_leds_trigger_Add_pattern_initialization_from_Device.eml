Return-Path: <linux-kernel-owner@vger.kernel.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 08:56:03 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from fmsmga001.fm.intel.com (fmsmga001.fm.intel.com [10.253.24.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 2F8A95805FF;
	Sun,  9 Dec 2018 10:55:53 -0800 (PST)
Received: from fmsmga101.fm.intel.com ([10.1.193.65])
  by fmsmga001-1.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 09 Dec 2018 10:55:52 -0800
X-SG-BADATTACHMENTNOREPLY: True
IronPort-PHdr: =?us-ascii?q?9a23=3AYBmLhhQ83osiHANzs/4xZ8vnSNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64YxGFt8tkgFKBZ4jH8fUM07OQ7/iwHzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9xIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZH42y?=
 =?us-ascii?q?b5UBD+QCM+hWoYbyqFkBogexCwm3HOPiyCRFhmP10KAgz+gtDQ/L0Q4mEtkTsH?=
 =?us-ascii?q?rUttL1NKIKXO6x1qbH0SvMb/BL0jrh7ojHaAshoPCSUrN+asrRykgvHB7Cg1WS?=
 =?us-ascii?q?s4PqIy2a1ucXv2eB6epvT/mvim85pAB/uTivxcYsh5LGhoIQ0F/E9CF5zJwpKt?=
 =?us-ascii?q?2/TU52eNipG4ZTuSGCL4Z6XN8uTmVytConxLAKp4S3cDUJxZg73RLSav6Kf5CL?=
 =?us-ascii?q?7x/tTuqcLyp0iGhqdb+xnRq/9Uqtx+vhXceuyllKtDBKktzUu3ANyRPT7s+HR+?=
 =?us-ascii?q?Nj/keuxzmPzRrf6uJaLkAuk6rUNZohzqQ3lpoJvkTPBi72mEPog6+Kbkgo5PSk?=
 =?us-ascii?q?5uD9brn7qJKQKZV4hhz9P6gygMCyAOY1PhALX2eB+OS80LPj/Vf+QLVPlvA2lq?=
 =?us-ascii?q?jZsJbHJcUUv6K5ABFa0pwl6xmhCzeqydMYnHcBLF1bYhKKlJbpO17QL/DiF/u/?=
 =?us-ascii?q?gEqjkC1tx//YOr3tGJLNLmLMkLv5Z7Zy91ZcyBYvzdBY/59UDrABIPHtVUPru9?=
 =?us-ascii?q?3YEwQ0Mwi1w+bhFdV82ZkSWWOJAq+FLqzStUWE6f4oI+mJfIUVoiryK+A55/7y?=
 =?us-ascii?q?in80gV8dcrOo3ZsLcn+4Ge5qI0WEYXX2hNcBHnwHvg4/TOzslV2DXiRfZ3e0X6?=
 =?us-ascii?q?Ig+D47DJiqApvERoComLaBxju0HoVKZmBaDVCBCXXod4KaVPsWayKSJclhkjoD?=
 =?us-ascii?q?VbW6T48h1BeutBL1yrZ9L+rU/DEYuozn1NRv++LTkhQy/yRuD8uBy2GNU310nm?=
 =?us-ascii?q?QQSjAsx6B/oUt9ylSZ3ahimfNYF8de5/dIUgc8KJ7dwPZ2C9H0WgLdYNiJTEyq?=
 =?us-ascii?q?TcmhATE0Vtgx2cMBY15hG9W+iRDOxymqDKUTl7CRAJw087jT337+J8tmz3bG1a?=
 =?us-ascii?q?8hj0QpQ8dVNG2mgLJ/+BbXB4LTj0qZkKOqf7wG3CHR7GeD0XaOvEZAXQFtS6rF?=
 =?us-ascii?q?Q24QalHWrdvj4EPCVKGhCbIgPgtFys6CL69KZ8btjVVHQvfjJdvfb3iwm2e2GR?=
 =?us-ascii?q?aH2LeMYJD2dGUa2SXXEFIEnBwL/XaaKQg+AT+srH/EAzxwC13jeUPs/vN4qHOg?=
 =?us-ascii?q?UEA0yRqHb0lg17qz5x4UiuaQS/IV3rIYpighry94E0q639LTE9CAvRZufL1AYd?=
 =?us-ascii?q?Mh51dKzX7Ztw14PpynM6Bihl4ffx5rv0/00BV3EIFAkcksrHMl1wdyLaOY0FVc?=
 =?us-ascii?q?dzKXx5zwO7vXKnXs8xCrcaLZxlbe0NOO8KcV9Ps4s0njvB2uFkc66Xpn18da0n?=
 =?us-ascii?q?SC6ZTKFgYdSo/xXVst+Bh8pLHaZTc96pjQ1X1tN6m0rzDD18goBOsj1havYdNf?=
 =?us-ascii?q?PLmYGw/1Fs0QH9KuJ/Aym1i1chIEO/hf9a4pP8+8a/SKwq+qPOZ6kzKggmRK+4?=
 =?us-ascii?q?R90kOK9yphRe/ExZcFw/eE3gSZUzfwlkuussfymYpcfzEdAnK/yTT4BI5WfqBy?=
 =?us-ascii?q?Z4cLBnu0LM2t29p+gIThW3hG+165BlMKwdOmdgCWb1PgwwJQz0MXoXq8lCu8zj?=
 =?us-ascii?q?x0lSwpr6WF0CzPxeTiaAQIOmpRSGZ+ilfsJJC+j8oGU0iwcwgpiByl6F76xqha?=
 =?us-ascii?q?vqh+L3PfQVxVfyjwNGxiVqqwtryfY89A8p8osCNXUPiiblCeULLyvxwa0yb7FW?=
 =?us-ascii?q?tE2D87by2quon+nxFiimKSNmxzrHnaecF33xvf/8bTRf1S3joHQil3lz/XC0O4?=
 =?us-ascii?q?P9mo+9WUipjCvvq/V2KnSp1cby3rwZmcuyu84G1gGQe/kOyrmt37DQg61jf21t?=
 =?us-ascii?q?lwWiXPthr8YIjr16KhPOJjf0loAkL86sVgFoF/lIswmI8f2XwAipqJ+noHlH/5?=
 =?us-ascii?q?Mc9H1qLmcHoNWTkLzsbW4Af/2U1vNHKJx5/jWXWbzctsfN26YmIQ2iIg4MFGEq?=
 =?us-ascii?q?aU7LpYnSRrplq0tx7eYf94nj0F0/sh9GYag/0VuAoq1iidB7ESHUpCMiD2mRWH?=
 =?us-ascii?q?8cu+rLlJa2a1are/ylB+nd+6AbGGowFcXmv5e5g4ES9x6MV/LEzD0Hnp5o74f9?=
 =?us-ascii?q?nQaMoZtgeInBfYk+hVNJUxm+IWhSpgPGLxp3wkxPQ9jRxzxpG6p4mHJn5p/KK4?=
 =?us-ascii?q?BB5YKzL0a9kS+jHrkaZRgMKW05qzEZVmHzUBRIHoQu6wEDIOqfTnMB6DHyYmpX?=
 =?us-ascii?q?ecHbrfABWT6EN7r3/UF5CrNneXJGQWzNl4RRmdIlBfjx4QXDkggpE5EQWqztT7?=
 =?us-ascii?q?cEhl/jAR+kL4qhxUx+JqLRb/V3nQpByyZjcoUpSfLwdW7gJf50fTK8Oe9fl+Hy?=
 =?us-ascii?q?VZ/p2nsQyMJXaXZwVODWEVREOEA0rvMaWp5dnF6+KYHPaxL+PSYbWSruxTT/eJ?=
 =?us-ascii?q?xZWy0ot/4jaDLMOPMmN5D/083EpDUmt0G8DYmzUJViwWmDjBb8+dpBeg5CJ3qt?=
 =?us-ascii?q?qz/+jsWALq/YGPEaddMc1z+xCqhqeOL+6Qizh4KTZb1ZMMxGXEyLsF3F4VhCFh?=
 =?us-ascii?q?aSOtEakbtSPWSKLQm6lXDwMUai9pNctI6b480RdJOcLBltz10bt4hOYvC1hZTV?=
 =?us-ascii?q?zhht2pZcsSLm6nKVPIH1yLO6qGJDHRx8H3YLixSblRjOVSqh2xtiyXE07lPjSf?=
 =?us-ascii?q?iTbpUwqjPv1LjCGeJBZeop2ycg5xCWj/S9LrcgG7MN5yjTEs3bI4nG/FNW4CPj?=
 =?us-ascii?q?h6aE5NqryQ7SVFgvRwAWBB73xlLfWalCad9eXXNpEWsf5zCCRui+1a+Gg6y6dS?=
 =?us-ascii?q?7CxcRP16gi3Srttvo1GgiuaOyzpnXwBIqjZEn4+LuURiOaPE9phPQ3rE/RQN7X?=
 =?us-ascii?q?mOBBQOvddqFtrvu6UDguTIwYHpOiZZ4c7T84M/ANrQL92cM3tpZRnzCj38DwYf?=
 =?us-ascii?q?SzOvc2bFiBoZ2Mmb6HCR5r0zoZjhm9JaUrZFWVgdC/gFTE93SphKGpB9FhMpi6?=
 =?us-ascii?q?SaisFAsWC5phmSSNlyvZ3dUP+WR/L1J2DdxZxNfRhA+67kKY0VOsWv3kV4aR9g?=
 =?us-ascii?q?gZjOEkzcddlXp2tqaQpi5A1n+X96T2t75EvjZUv56nYUEf+y2AE/jARWZeUr/S?=
 =?us-ascii?q?3rpVAtKQyO7BE5iEk4lNGtvT2AayX8Pb29FdVMFyflrFM8I4n2awlwZAy220dj?=
 =?us-ascii?q?MWGAD7ZQiaZwMGRmhBT0p5RCA7hfQLdCbRtWwuuYI70k3EpdoSi730JKzfXKBI?=
 =?us-ascii?q?EklwYwd5Oo6XVa1EYraN8zOLyVJ6dTyFVUrryBszXu1e0rxgIaYUEX/zC8YikN?=
 =?us-ascii?q?7W4BPbQlbwOu9/d+5BOZmDoLLGoFXPcp5Pts/1gvNvubzCPI3LtKK0T3POuaef?=
 =?us-ascii?q?DK81PcnNKFFwtjnngDkFNIqP0viZ8u?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BaCAC6ZA1ch0O0hNFjHgEGBwaBZYJtf?=
 =?us-ascii?q?yeDeoN7kCyBYAglFIkPbo8zEgEBGBMBh10iOBIBAwEBAQEBAQIBEwEBAQoLCQg?=
 =?us-ascii?q?pIwyCNiQBgmEBAQEBAgEBAiAECwEFCAEbBBoDAQEJAQEFAwILAwoCAiYCAgMgE?=
 =?us-ascii?q?QEFARwGAQwGAgEBAYMcgWkBAw0IBAGKXZAHPIsNfBYFAReCdwWEMwoZJw1dgTc?=
 =?us-ascii?q?CBhJ5ixaBVz+BEScMgl+IBYJXAqAgVQcCgiEEjyQGGIFchReCcxCHR4MChiCPZ?=
 =?us-ascii?q?wIEAgQFAgUPIYE8gXdwgQGCO4IbDBeDSopUPzKBBQEBjGABAQ?=
X-IPAS-Result: =?us-ascii?q?A0BaCAC6ZA1ch0O0hNFjHgEGBwaBZYJtfyeDeoN7kCyBYAg?=
 =?us-ascii?q?lFIkPbo8zEgEBGBMBh10iOBIBAwEBAQEBAQIBEwEBAQoLCQgpIwyCNiQBgmEBA?=
 =?us-ascii?q?QEBAgEBAiAECwEFCAEbBBoDAQEJAQEFAwILAwoCAiYCAgMgEQEFARwGAQwGAgE?=
 =?us-ascii?q?BAYMcgWkBAw0IBAGKXZAHPIsNfBYFAReCdwWEMwoZJw1dgTcCBhJ5ixaBVz+BE?=
 =?us-ascii?q?ScMgl+IBYJXAqAgVQcCgiEEjyQGGIFchReCcxCHR4MChiCPZwIEAgQFAgUPIYE?=
 =?us-ascii?q?8gXdwgQGCO4IbDBeDSopUPzKBBQEBjGABAQ?=
X-IronPort-AV: E=Sophos;i="5.56,335,1539673200"; 
   d="scan'208";a="66020814"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from vger.kernel.org ([209.132.180.67])
  by mga01b.intel.com with ESMTP; 09 Dec 2018 10:55:35 -0800
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726236AbeLISzd (ORCPT <rfc822;like.xu@linux.intel.com>
        + 23 others); Sun, 9 Dec 2018 13:55:33 -0500
Received: from mail-lj1-f195.google.com ([209.85.208.195]:38603 "EHLO
        mail-lj1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726134AbeLISzd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Sun, 9 Dec 2018 13:55:33 -0500
Received: by mail-lj1-f195.google.com with SMTP id c19-v6so7658361lja.5;
        Sun, 09 Dec 2018 10:55:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=subject:from:to:references:message-id:date:user-agent:mime-version
         :in-reply-to:content-language:content-transfer-encoding;
        bh=itRQ8suyIq9UlplYVR+WqdNG7qNHhSsNmijEKYsf6xA=;
        b=pifrzaPDqNDVS6eP++cY3FBllzRYA5f4zZSyI/ibVB81kigc8eNo+zP2UGIXtPCM7V
         2Cuf8yBhXasVpe9UGW0Q0jSZCHMygOD+tvQqjty6bIXIYvejgZZ6KWoercKwdc2d1jJP
         H6nqm2MHovnFxcFijTKqHWwoHLI2y1HNLjg+3hjCZeyAvKguj8jpAX9akxUU2DWwx8Hr
         Hjk7OG23RBJAr+8aJxMJzKGmoj2OdXfUtWIQZPfxy0tWIOHZdNCUWlBu6aSSYCABEz0U
         yAMvtoQzZcJJTkNrE3RdmKibhySelqlj1VIwMCSm5LqkFF/wCjoYoNMmlpjY2/WXbgfR
         ZGFQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:from:to:references:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=itRQ8suyIq9UlplYVR+WqdNG7qNHhSsNmijEKYsf6xA=;
        b=c3zf5H6VQD9qrwr7iBEyfePSxWafVRX+Ml/7yYwY4Sef1wK9aMfAnrwSpyiKZA41vl
         uy8RWRax0vj8BuBBw2/WE2u5+QZ5Mi1C9qEqnb9+bR/wpyMW2G1BNCfikCxs1LmDZ7x2
         DMkSLnh2OchrByHVU9v7neMh6gr3F9afUa0054a7JRrvu4ikLgDLZkc8yHYFdRRqpKIr
         iSuy3KDDVGT2aQ8gpIf9psexSUNPdylp44OsKDH75w3dVpLJpbZMZhEHOg05552uOVoU
         g0SNBCbi0J4d6n+RPjDeojdLf4Kz9aox75+w4rID4On+vQMvUuGf9brf+lfgFy1Vh4HQ
         lcdA==
X-Gm-Message-State: AA+aEWaaDHlLVXsseoqVOtpKTIwiTVtE2Nmi2I17UJMiqcvNk34xqdVw
        lMX0NhkPwNZpC8T23qZ1Jsbh5PSDIGQ=
X-Google-Smtp-Source: AFSGD/VVkQBBuBtES+VskEivPT0gFRAkpoKraS+e/9QpmAnsq3sNlSdvB2Cb4j2iJLYy7IsNGaAVnw==
X-Received: by 2002:a2e:8989:: with SMTP id c9-v6mr5346673lji.124.1544381730685;
        Sun, 09 Dec 2018 10:55:30 -0800 (PST)
Received: from [192.168.1.18] (cit97.neoplus.adsl.tpnet.pl. [83.31.43.97])
        by smtp.gmail.com with ESMTPSA id s62sm858072lfg.34.2018.12.09.10.55.28
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 09 Dec 2018 10:55:29 -0800 (PST)
Subject: Re: [PATCH 4/4] leds: trigger: Add pattern initialization from Device
 Tree
From: Jacek Anaszewski <jacek.anaszewski@gmail.com>
To: Krzysztof Kozlowski <krzk@kernel.org>, Pavel Machek <pavel@ucw.cz>,
        Rob Herring <robh+dt@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Baolin Wang <baolin.wang@linaro.org>,
        Raphael Teysseyre <rteysseyre@gmail.com>,
        linux-leds@vger.kernel.org, devicetree@vger.kernel.org,
        linux-kernel@vger.kernel.org
References: <1544185974-5932-1-git-send-email-krzk@kernel.org>
 <1544185974-5932-4-git-send-email-krzk@kernel.org>
 <8222f85b-4e61-69c4-6d31-ba559de02829@gmail.com>
Message-ID: <fcb28be6-7d6a-1216-5a22-339f30366fd1@gmail.com>
Date: Sun, 9 Dec 2018 19:55:26 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.3.0
MIME-Version: 1.0
In-Reply-To: <8222f85b-4e61-69c4-6d31-ba559de02829@gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 12/8/18 7:44 PM, Jacek Anaszewski wrote:
> Hi Krzysztof,
> 
> Thank you for the patch set.
> 
> Applied 1/4 and 2/4.
> 
> I'll hold on merging 3/4 until we sort out the issues
> I have with this one. Please refer to my comment below.
> 
> On 12/7/18 1:32 PM, Krzysztof Kozlowski wrote:
>> Allow initialization of pattern used in pattern trigger from Device Tree
>> property.
>>
>> This is especially useful for embedded systems where the pattern trigger
>> would be used to indicate the process of boot status in a nice,
>> user-friendly blinking way.  This initialization pattern will be used
>> till user-space is brought up and sets its own pattern, indicating the
>> boot status is for example finished.
>>
>> Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
>> ---
>>   drivers/leds/trigger/ledtrig-pattern.c | 18 ++++++++++++++++++
>>   1 file changed, 18 insertions(+)
>>
>> diff --git a/drivers/leds/trigger/ledtrig-pattern.c 
>> b/drivers/leds/trigger/ledtrig-pattern.c
>> index 1870cf87afe1..96309d3bc43c 100644
>> --- a/drivers/leds/trigger/ledtrig-pattern.c
>> +++ b/drivers/leds/trigger/ledtrig-pattern.c
>> @@ -11,6 +11,7 @@
>>   #include <linux/leds.h>
>>   #include <linux/module.h>
>>   #include <linux/mutex.h>
>> +#include <linux/of.h>
>>   #include <linux/slab.h>
>>   #include <linux/timer.h>
>> @@ -331,6 +332,21 @@ static const struct attribute_group 
>> *pattern_trig_groups[] = {
>>       NULL,
>>   };
>> +static void pattern_init(struct led_classdev *led_cdev)
>> +{
>> +    struct device_node *np = dev_of_node(led_cdev->dev);
>> +    const char *pattern;
>> +
>> +    if (!np)
>> +        return;
>> +
>> +    if (!of_property_read_string(np, "linux,trigger-pattern", 
>> &pattern)) {
>> +        if (strlen(pattern))
>> +            pattern_trig_store_patterns(led_cdev, pattern,
>> +                            strlen(pattern), false);
>> +    }
>> +}
>> +
>>   static int pattern_trig_activate(struct led_classdev *led_cdev)
>>   {
>>       struct pattern_trig_data *data;
>> @@ -354,6 +370,8 @@ static int pattern_trig_activate(struct 
>> led_classdev *led_cdev)
>>       timer_setup(&data->timer, pattern_trig_timer_function, 0);
>>       led_cdev->activated = true;
>> +    pattern_init(led_cdev);

With my recent patches it would suffice to replace above line with:

if (led_cdev->flags & LED_INIT_DEFAULT_TRIGGER) {
	pattern_init(led_cdev);
	led_cdev->flags &= ~LED_INIT_DEFAULT_TRIGGER;
}

> It means that the pattern defined in DT would be applied
> whenever the pattern trigger is set for a LED class device,
> whereas it should happen only on LED class device initialization,
> if linux,default-trigger is set to "pattern".
> 
> What we would need for making that work is a generic support for
> parsing trigger specific initialization data in the
> of_led_classdev_register().
> 
>> +
>>       return 0;
>>   }
>>
> 

-- 
Best regards,
Jacek Anaszewski
