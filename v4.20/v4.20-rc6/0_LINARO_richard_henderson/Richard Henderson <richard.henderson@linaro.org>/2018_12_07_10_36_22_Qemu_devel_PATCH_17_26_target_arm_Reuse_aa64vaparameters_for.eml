Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 07 Dec 2018 21:01:45 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga007.jf.intel.com (orsmga007.jf.intel.com [10.7.209.58])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 7F7A95804C1
	for <like.xu@linux.intel.com>; Fri,  7 Dec 2018 02:45:30 -0800 (PST)
Received: from fmsmga104.fm.intel.com ([10.1.193.100])
  by orsmga007-1.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 07 Dec 2018 02:45:30 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3A/0ziMBC1wmXEFSj8Vu44UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPX+osbcNUDSrc9gkEXOFd2Cra4c26yO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUhzexe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oJNyA3/m/UhMJ3jq1brg+vpwR9zoDWb4yZKfRzcr/DctMBXmdNQtpdWjZdDo6m?=
 =?us-ascii?q?c4cDE+wMNvtYoYnnoFsOqAOzCxWtBOzzyj9HnGX20rAn2OojDw7G2hEvEMwUsH?=
 =?us-ascii?q?TPq9X1MroZXOevzKnJ0TrDb+lZ2S3g54TSchAuv/eMUq9ufsrL0kkvEAXFg06U?=
 =?us-ascii?q?qYzkOTOazP4Ns2+B4+pnT+KvhHcqpgdsqTas3schkpfFip4Wx1ze6Cl13YU4Kc?=
 =?us-ascii?q?emREN1YdOoCoZcuiOCO4drQc4vR3tktDgmxrAJo5K3YSgHxZA9yxLCafGLbY6F?=
 =?us-ascii?q?6Q/5WumLOzd3nndldaq/hxms9UigzfXxVs210FZRsipFicPAtn8L1xzO8MSHTe?=
 =?us-ascii?q?F9/ki51TaO0QDc9P1ELFgqmabHKJMt2KM8mocQvEjZACP7lkX7gLWLekgm4uSo?=
 =?us-ascii?q?7v7oYrTipp+SLY90jQT+P7w3msOhBOQ4LxECUHWF9uSiyrLj+VT1T65Njv0rlK?=
 =?us-ascii?q?nWrI7VJd8cqq69Ag9V0Zgs5wywDje7yNkYmXgHLFRYeBOIlYTpOlfOIOzmAve7?=
 =?us-ascii?q?mVijjDBrx/XdM73nBZXNKHfDkLH8fbpn7E5c0gUzwchF551IErEBPO7zWkjpud?=
 =?us-ascii?q?zcDx85MBK7z/zoCdVgzY4eXWOPAqmEMKLdq1OI5+QvI/WSa48RojryN/8l5/u9?=
 =?us-ascii?q?xUI/gkIXKKm1wYMMOjf/GvV9P17fZ33qjdEcV2AQsU07Re3ujVSEFjlLe3e1Wb?=
 =?us-ascii?q?l7/zw+FceqAJnOQtOQhqec1nK+F5xSemcUE12JDDLkepuJX7IWZTuPL9R9ujoD?=
 =?us-ascii?q?U7enVskmzx75rxLwybdsMr/J/DYFv4noztl/6r7vkkQr+DlpSsiQzWyJZ2dzmG?=
 =?us-ascii?q?wOWnkxxq8sj1Z6zwK50KN4iuZUXfxe4f9ESBw9M9aI1e1xC9noVkTBc9GFRUy9?=
 =?us-ascii?q?RdOOBTA3R8g2hdgUbBAuSJ2Zkhnf0n/yUPcunLuRCcls/w=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AhAADiTQpcmBHrdtBjHgEGBwaBUQkLA?=
 =?us-ascii?q?YEwgmKMcosxgwmRWYR6gXMSAQEYFIdaIjQJDQEDAQEBAQEBAgETAQEBAQEICws?=
 =?us-ascii?q?GGw4jDII2BQIDGAmCXAMDAQIkGQEBBAokBQECAwECBgEBPgoIAwEwAQUBHBkFg?=
 =?us-ascii?q?xyCAgEBA5k9PIodgWwzgnYBAQWCQ4RnCBKHXoMTgRyBVz+BEYJdixGJNQSHAJA?=
 =?us-ascii?q?wBwKCIQSPGwsYiWOHVSyYSAYCCQcPIYElgg1NMIMvghsMFxKITIVeU4EHiEmBd?=
 =?us-ascii?q?wEB?=
X-IPAS-Result: =?us-ascii?q?A0AhAADiTQpcmBHrdtBjHgEGBwaBUQkLAYEwgmKMcosxgwm?=
 =?us-ascii?q?RWYR6gXMSAQEYFIdaIjQJDQEDAQEBAQEBAgETAQEBAQEICwsGGw4jDII2BQIDG?=
 =?us-ascii?q?AmCXAMDAQIkGQEBBAokBQECAwECBgEBPgoIAwEwAQUBHBkFgxyCAgEBA5k9PIo?=
 =?us-ascii?q?dgWwzgnYBAQWCQ4RnCBKHXoMTgRyBVz+BEYJdixGJNQSHAJAwBwKCIQSPGwsYi?=
 =?us-ascii?q?WOHVSyYSAYCCQcPIYElgg1NMIMvghsMFxKITIVeU4EHiEmBdwEB?=
X-IronPort-AV: E=Sophos;i="5.56,326,1539673200"; 
   d="scan'208";a="54239945"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 07 Dec 2018 02:45:29 -0800
Received: from localhost ([::1]:45294 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gVDdQ-0002BZ-UD
	for like.xu@linux.intel.com; Fri, 07 Dec 2018 05:45:28 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:59246)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gVDVH-0008EA-4y
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:04 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <richard.henderson@linaro.org>) id 1gVDVG-0007sD-7A
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:03 -0500
Received: from mail-oi1-x241.google.com ([2607:f8b0:4864:20::241]:33509)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <richard.henderson@linaro.org>)
	id 1gVDVG-0007qb-1T
	for qemu-devel@nongnu.org; Fri, 07 Dec 2018 05:37:02 -0500
Received: by mail-oi1-x241.google.com with SMTP id c206so3018048oib.0
	for <qemu-devel@nongnu.org>; Fri, 07 Dec 2018 02:37:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=wX3ccSw4O9RNkScWYoSfbfKoW98SciKAV8QH4pR1k8Q=;
	b=Vebv5Rq3Dzk+fSwWHmLbBlHmg2aJbaiuMZMwNCcrgpvCMFcBFxT4XdnONJnJR+3A7W
	z/nXIo+2NJx342Y3McEVqSrR7h6dn40+I7smPjUONXT7BghFzsAdU7T1GdtIuVyntTY9
	zpQBDaUa4hCy1XOGS+Htw85XLR66minkgT1+E=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=wX3ccSw4O9RNkScWYoSfbfKoW98SciKAV8QH4pR1k8Q=;
	b=jYRydcytMy1I6hWChTfFxeQRKxfVpXdR0u5fSUnjFMDcHpHW26cCFJRjZEeymvhx32
	OcpUgkKy08nDKNhwMLO5eRha3EURWeUFNIG9AxH578dT2MaeU168cBmQCkoYqRT/txV5
	vGgInM2bVAfUtw6tvS5mSovkru2d2KY6y0Cpg8O0uPh/2nPSTHqjiyb0xfAzaAMhbqKE
	YOcpFC98EDYMaGYbTdxnE75OfdVPxi6Hy9ot+8UsCLSztn++e6AD/DSTztIM+TnROB9p
	gGZ5KYvqpX8fSjD8WfUXESAhJcK4ZhLAe4SDLDFm9jyCIDoWyGqoxt8G7DSqXUy4r6uI
	s8TQ==
X-Gm-Message-State: AA+aEWZMcHFLFPpsnAHj4xAoJfYH6kciEJffhGwIpPlq05Ws2Y6mDROx
	RyvwjeIXXQa5OIljY4ThGGDZYqFdF/Q=
X-Google-Smtp-Source: AFSGD/VcNeGLg5m4hD3jie5Ee4CGineoHqH20UyeF4S6tsrSOlL6DCaKNZ689nGnZqgyyY3uLr9MTQ==
X-Received: by 2002:aca:a60d:: with SMTP id p13mr979833oie.2.1544179021126;
	Fri, 07 Dec 2018 02:37:01 -0800 (PST)
Received: from cloudburst.twiddle.net (172.189-204-159.bestel.com.mx.
	[189.204.159.172]) by smtp.gmail.com with ESMTPSA id
	c19sm2037594otl.16.2018.12.07.02.36.59
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Fri, 07 Dec 2018 02:37:00 -0800 (PST)
From: Richard Henderson <richard.henderson@linaro.org>
To: qemu-devel@nongnu.org
Date: Fri,  7 Dec 2018 04:36:22 -0600
Message-Id: <20181207103631.28193-18-richard.henderson@linaro.org>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20181207103631.28193-1-richard.henderson@linaro.org>
References: <20181207103631.28193-1-richard.henderson@linaro.org>
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2607:f8b0:4864:20::241
Subject: [Qemu-devel] [PATCH 17/26] target/arm: Reuse aa64_va_parameters for
 setting tbflags
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: peter.maydell@linaro.org, ramana.radhakrishnan@arm.com
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

The arm_regime_tbi{0,1} functions are replacable with the new function
by giving the lowest and highest address.

Signed-off-by: Richard Henderson <richard.henderson@linaro.org>
---
 target/arm/cpu.h    | 35 -----------------------------
 target/arm/helper.c | 55 +++++++++------------------------------------
 2 files changed, 10 insertions(+), 80 deletions(-)

diff --git a/target/arm/cpu.h b/target/arm/cpu.h
index 6bac5c18d0..f7a0eace68 100644
--- a/target/arm/cpu.h
+++ b/target/arm/cpu.h
@@ -3065,41 +3065,6 @@ static inline bool arm_cpu_bswap_data(CPUARMState *env)
 }
 #endif
 
-#ifndef CONFIG_USER_ONLY
-/**
- * arm_regime_tbi0:
- * @env: CPUARMState
- * @mmu_idx: MMU index indicating required translation regime
- *
- * Extracts the TBI0 value from the appropriate TCR for the current EL
- *
- * Returns: the TBI0 value.
- */
-uint32_t arm_regime_tbi0(CPUARMState *env, ARMMMUIdx mmu_idx);
-
-/**
- * arm_regime_tbi1:
- * @env: CPUARMState
- * @mmu_idx: MMU index indicating required translation regime
- *
- * Extracts the TBI1 value from the appropriate TCR for the current EL
- *
- * Returns: the TBI1 value.
- */
-uint32_t arm_regime_tbi1(CPUARMState *env, ARMMMUIdx mmu_idx);
-#else
-/* We can't handle tagged addresses properly in user-only mode */
-static inline uint32_t arm_regime_tbi0(CPUARMState *env, ARMMMUIdx mmu_idx)
-{
-    return 0;
-}
-
-static inline uint32_t arm_regime_tbi1(CPUARMState *env, ARMMMUIdx mmu_idx)
-{
-    return 0;
-}
-#endif
-
 void cpu_get_tb_cpu_state(CPUARMState *env, target_ulong *pc,
                           target_ulong *cs_base, uint32_t *flags);
 
diff --git a/target/arm/helper.c b/target/arm/helper.c
index 99ceed2cab..3ad5909b1e 100644
--- a/target/arm/helper.c
+++ b/target/arm/helper.c
@@ -8967,48 +8967,6 @@ static inline ARMMMUIdx stage_1_mmu_idx(ARMMMUIdx mmu_idx)
     return mmu_idx;
 }
 
-/* Returns TBI0 value for current regime el */
-uint32_t arm_regime_tbi0(CPUARMState *env, ARMMMUIdx mmu_idx)
-{
-    TCR *tcr;
-    uint32_t el;
-
-    /* For EL0 and EL1, TBI is controlled by stage 1's TCR, so convert
-     * a stage 1+2 mmu index into the appropriate stage 1 mmu index.
-     */
-    mmu_idx = stage_1_mmu_idx(mmu_idx);
-
-    tcr = regime_tcr(env, mmu_idx);
-    el = regime_el(env, mmu_idx);
-
-    if (el > 1) {
-        return extract64(tcr->raw_tcr, 20, 1);
-    } else {
-        return extract64(tcr->raw_tcr, 37, 1);
-    }
-}
-
-/* Returns TBI1 value for current regime el */
-uint32_t arm_regime_tbi1(CPUARMState *env, ARMMMUIdx mmu_idx)
-{
-    TCR *tcr;
-    uint32_t el;
-
-    /* For EL0 and EL1, TBI is controlled by stage 1's TCR, so convert
-     * a stage 1+2 mmu index into the appropriate stage 1 mmu index.
-     */
-    mmu_idx = stage_1_mmu_idx(mmu_idx);
-
-    tcr = regime_tcr(env, mmu_idx);
-    el = regime_el(env, mmu_idx);
-
-    if (el > 1) {
-        return 0;
-    } else {
-        return extract64(tcr->raw_tcr, 38, 1);
-    }
-}
-
 /* Return the TTBR associated with this translation regime */
 static inline uint64_t regime_ttbr(CPUARMState *env, ARMMMUIdx mmu_idx,
                                    int ttbrn)
@@ -13041,9 +12999,16 @@ void cpu_get_tb_cpu_state(CPUARMState *env, target_ulong *pc,
 
         *pc = env->pc;
         flags = ARM_TBFLAG_AARCH64_STATE_MASK;
-        /* Get control bits for tagged addresses */
-        flags |= (arm_regime_tbi0(env, mmu_idx) << ARM_TBFLAG_TBI0_SHIFT);
-        flags |= (arm_regime_tbi1(env, mmu_idx) << ARM_TBFLAG_TBI1_SHIFT);
+
+#ifndef CONFIG_USER_ONLY
+        /* Get control bits for tagged addresses.  Note that the
+         * translator only uses this for instruction addresses.
+         */
+        flags |= (aa64_va_parameters(env, 0, mmu_idx, false).tbi
+                  << ARM_TBFLAG_TBI0_SHIFT);
+        flags |= (aa64_va_parameters(env, -1, mmu_idx, false).tbi
+                  << ARM_TBFLAG_TBI1_SHIFT);
+#endif
 
         if (cpu_isar_feature(aa64_sve, cpu)) {
             int sve_el = sve_exception_el(env, current_el);
-- 
2.17.2


