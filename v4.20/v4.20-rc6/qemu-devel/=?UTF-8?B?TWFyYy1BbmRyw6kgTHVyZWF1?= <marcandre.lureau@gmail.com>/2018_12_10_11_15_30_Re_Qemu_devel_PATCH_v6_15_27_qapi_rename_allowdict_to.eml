Return-Path: <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>
Delivered-To: unknown
Received: from linux.intel.com (10.54.29.200:995) by likexu-workstation with
  POP3-SSL; 10 Dec 2018 19:36:08 -0000
X-Original-To: like.xu@linux.intel.com
Delivered-To: like.xu@linux.intel.com
Received: from orsmga001.jf.intel.com (orsmga001.jf.intel.com [10.7.209.18])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by linux.intel.com (Postfix) with ESMTPS id 23EBD580297
	for <like.xu@linux.intel.com>; Mon, 10 Dec 2018 03:15:57 -0800 (PST)
Received: from orsmga106.jf.intel.com ([10.7.208.65])
  by orsmga001-1.jf.intel.com with ESMTP; 10 Dec 2018 03:15:56 -0800
IronPort-PHdr: =?us-ascii?q?9a23=3ABvc8cx+oDH9Fbf9uRHKM819IXTAuvvDOBiVQ1KB+?=
 =?us-ascii?q?0+wUIJqq85mqBkHD//Il1AaPAd2Lraocw8Pt8InYEVQa5piAtH1QOLdtbDQizf?=
 =?us-ascii?q?ssogo7HcSeAlf6JvO5JwYzHcBFSUM3tyrjaRsdF8nxfUDdrWOv5jAOBBr/KRB1?=
 =?us-ascii?q?JuPoEYLOksi7ze+/94HQbglSmDaxfa55IQmrownWqsQYm5ZpJLwryhvOrHtIeu?=
 =?us-ascii?q?BWyn1tKFmOgRvy5dq+8YB6/ShItP0v68BPUaPhf6QlVrNYFygpM3o05MLwqxbO?=
 =?us-ascii?q?SxaE62YGXWUXlhpIBBXF7A3/U5zsvCb2qvZx1S+HNsDtU7s6RSqt4LtqSB/wiS?=
 =?us-ascii?q?cIKTg58H3MisdtiK5XuQ+tqwBjz4LRZoyeKfhwcb7Hfd4CSmVBUMReWSxPDI2/?=
 =?us-ascii?q?cYUAE+UPM/tAr4T/pVUDogayCAewCOzx0T9FnWP23bQg3ug9DQ3KwA4tEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPiywqbS1zXMc+pa1Cv76IfVaBAmu+yHU7RtccrL10YgDR7FhUiX?=
 =?us-ascii?q?pIzgJTyVzPgCvHKd7+V9T+KglXQrqwVsoji12MgjkJTJi5kaylDB7yp5wYI1Kc?=
 =?us-ascii?q?ekR058ZN6pCZ1dvDyUOYtxR8MtWWBouCAix70Avp67eicKyJI6xxLFbPyHaYeI?=
 =?us-ascii?q?7xT+X+iSOTd1nGxpdK68ihqo7ESs1+7xWtOq3FtEridJiMTAu3IV2xDN8MeLVu?=
 =?us-ascii?q?dx80K81TuA1w3f9uRJLE83mKfaJJMsx6A8moYWvEnGECL7l1v6gamLfUs+4Oeo?=
 =?us-ascii?q?8f7oYrD+q5+cKYB0jgb+P7wqmsy+GuQ4LhMOU3KU+eS6yb3v50r5QK9FjvEuk6?=
 =?us-ascii?q?nZto7VJdgDq6KnHwNY0Zwv5wuiAzqlytgUg3cKIVJfdB6ajYXlI1TOL+r5Dfe7?=
 =?us-ascii?q?jVSsijBrx/XeM734HJrNK2XDnK78crlj9U5T1g4zwclE6JJTF7EBJu78VVHqtN?=
 =?us-ascii?q?DfCh85Mg+0zPj9BNRyy4MTQWaPAq6fMKPPvl6E/OMvI++QZIALvDbxMeQq5/nr?=
 =?us-ascii?q?jXIin18deq+p3ZQRaHClBPhmJF+ZYXX0jtcbDWgKphY+TPDtiFCaVT5TZnWyUL?=
 =?us-ascii?q?wm6jA0FYKrFoPDRoGrgLyc0ya3BJxWZmZaCl+SFXfkbZmLW/AJaHHaH8l6jzZR?=
 =?us-ascii?q?VaS9U5RzklaqtRTm0PxhKezb/DBesojsk9185unWnBd18iRoDsObyCaUQmRp22?=
 =?us-ascii?q?8FWTIyj515ulF3n1KK0KxkhK5BGNlOov9ETAo+cITR1vF3EMzaXAXHcdGUDlG8?=
 =?us-ascii?q?TYK9HDszQ9ktlsIIeFt3AN64jxrOjBatVpocjb+WH9Qd6KfWxWXqO8tngyLPzq?=
 =?us-ascii?q?wrlUQOWMZDNWS6wKV48l6AKZTOlhC8nryhMI0a0DRMvEOe12eHoQkMVQdqWqzD?=
 =?us-ascii?q?UWoSIE/Lt9nw+2vNSravDfIsNQ4Xmp3KEbdDdtC81QYOf/zkItmLJjvpw2o=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ADAwALSg5cmBHrdtBjHQIfBQeBTQKBL?=
 =?us-ascii?q?4E5gSmDeoh4iy6CDYoICY1AgXMUGAsJhECDKiI2Bw0BAwEBAQEBAQIBEwEBAQE?=
 =?us-ascii?q?BCAsLBhsOIwyCNgUCAxoBBoJcAQIDAQIgHQEFCgwdAQIBAgECBgEBBQULAwoCA?=
 =?us-ascii?q?iIEAgIDAR4BBQwBBQEcBhMFgxwBgWgBAxUBBAqZKjyLDYESBQEXgncFgTEBAwI?=
 =?us-ascii?q?MQoIrChknDV0xgQYCBhJ5ixaCFoQjgx4BAgKBXoMEglcCjz16hFaLaAcChwiGK?=
 =?us-ascii?q?IQfGIIpjxQsjWmLDA8hgSwNgXozGiNQMYI7CYV/hRRRhHM8MQGBBopSgXcBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ADAwALSg5cmBHrdtBjHQIfBQeBTQKBL4E5gSmDeoh4iy6?=
 =?us-ascii?q?CDYoICY1AgXMUGAsJhECDKiI2Bw0BAwEBAQEBAQIBEwEBAQEBCAsLBhsOIwyCN?=
 =?us-ascii?q?gUCAxoBBoJcAQIDAQIgHQEFCgwdAQIBAgECBgEBBQULAwoCAiIEAgIDAR4BBQw?=
 =?us-ascii?q?BBQEcBhMFgxwBgWgBAxUBBAqZKjyLDYESBQEXgncFgTEBAwIMQoIrChknDV0xg?=
 =?us-ascii?q?QYCBhJ5ixaCFoQjgx4BAgKBXoMEglcCjz16hFaLaAcChwiGKIQfGIIpjxQsjWm?=
 =?us-ascii?q?LDA8hgSwNgXozGiNQMYI7CYV/hRRRhHM8MQGBBopSgXcBAQ?=
X-IronPort-AV: E=Sophos;i="5.56,338,1539673200"; 
   d="scan'208";a="43409302"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from lists.gnu.org ([208.118.235.17])
  by mtab.intel.com with ESMTP/TLS/AES256-SHA; 10 Dec 2018 03:15:56 -0800
Received: from localhost ([::1]:60206 helo=lists.gnu.org)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>)
	id 1gWJXX-0002bk-ID
	for like.xu@linux.intel.com; Mon, 10 Dec 2018 06:15:55 -0500
Received: from eggs.gnu.org ([2001:4830:134:3::10]:51645)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <marcandre.lureau@gmail.com>) id 1gWJXN-0002bT-4o
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:15:46 -0500
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <marcandre.lureau@gmail.com>) id 1gWJXM-0007NN-2B
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:15:45 -0500
Received: from mail-wm1-x342.google.com ([2a00:1450:4864:20::342]:54319)
	by eggs.gnu.org with esmtps (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.71) (envelope-from <marcandre.lureau@gmail.com>)
	id 1gWJXL-0007Mb-Rk
	for qemu-devel@nongnu.org; Mon, 10 Dec 2018 06:15:43 -0500
Received: by mail-wm1-x342.google.com with SMTP id a62so3065511wmh.4
	for <qemu-devel@nongnu.org>; Mon, 10 Dec 2018 03:15:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
	h=mime-version:references:in-reply-to:from:date:message-id:subject:to
	:cc:content-transfer-encoding;
	bh=Vhs/Vx6UjHShbkthAQxAHgBrnar96CWGNm0qQup2uwo=;
	b=lg5zFygTlmQYkEqkheS/pkwFsr7VCWIYiO16+h/SQwWe890xybbaQa+xhLjkwvchCD
	eic/UsFK6zDx9nuRrKxqn0lMcpyuH6TDAbgqj1LtaoqCYPjiLYrxdIDGMPrB/jNKG604
	7+dZDy3Vtrh/LB9WFUqSWp5Zhl6etWmKz1MDvoyRe0/A39BfQVZJWkDrhYAYvMJVWq6Y
	6WenCYVe8g0pDeDKkRQWyLKLakMGGbXNegA9Mf4u6wA4FZHAB0uF9TTsUl8wjWXrBSOw
	VAO0IIf5PyjPJHpMfmWpa5DHNTpTCEtVQWI5WltufcDdMyEG9FqkdbLUGhr7aukWEM8U
	8FZw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:references:in-reply-to:from:date
	:message-id:subject:to:cc:content-transfer-encoding;
	bh=Vhs/Vx6UjHShbkthAQxAHgBrnar96CWGNm0qQup2uwo=;
	b=Bi9S/KLQu/2D7LKgKOrnTH8a8n2GaYmCIzfHdGmIVU8HzRZwVKH3kPnBdK/ck0fSKR
	UVQctmf/ihnZrotGMK+Gp9Nzi72snTKvWsfGqPdCVO/+SbjxT6vZaDyvC4XSY1u1vej+
	e3T65bLJ+ixdvLAEcB6IsFPgaOKdtKepl0fKaXsotJGG3BqV4m6ukObXz/40lECLoOcW
	Lne7vnUmZCTEsegQm2X5dA3R0hJZlIQiuhKwUbmLFgvALQb5FAawOAT93CEKzcsyam0J
	Irdf7mrF1QAbGuM9LICondBmiON0Xi3FI0gPPdSzTWjQ0P5hNZuPTiReTeUyRMpGztkB
	cD+g==
X-Gm-Message-State: AA+aEWYSVa3RsyhjX6MikdwYuJPNP09IozCEE0INx9RA/4NyQ0wyx0mo
	/eyk3IhiMTqQFL1pMFCS24E/RrrDpGx8R7NHA28=
X-Google-Smtp-Source: AFSGD/WtVVT0n9rGXxBlYRNx2nQeKOW8fxNSgfnPKZhbqSF9QZYCytNHgmVBAdskBvhBs5Ok3hXznX6keKaIuExzCZI=
X-Received: by 2002:a1c:a3c3:: with SMTP id m186mr10181134wme.16.1544440542685;
	Mon, 10 Dec 2018 03:15:42 -0800 (PST)
MIME-Version: 1.0
References: <20180706105753.26700-1-marcandre.lureau@redhat.com>
	<20180706105753.26700-16-marcandre.lureau@redhat.com>
	<87lg53olyf.fsf@dusky.pond.sub.org>
	<CAMxuvaxENFTV9SV0jF9Q9qcf2p5vAdPZ5t8BumQLVXvqP9knrA@mail.gmail.com>
	<8736r5n4sz.fsf@dusky.pond.sub.org>
In-Reply-To: <8736r5n4sz.fsf@dusky.pond.sub.org>
From: =?UTF-8?B?TWFyYy1BbmRyw6kgTHVyZWF1?= <marcandre.lureau@gmail.com>
Date: Mon, 10 Dec 2018 15:15:30 +0400
Message-ID: <CAJ+F1CKt0Z+Xe9w0W3O6S8Od2Z8+vSXAJGtcTJF8+MBQ_75qfw@mail.gmail.com>
To: Markus Armbruster <armbru@redhat.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 2a00:1450:4864:20::342
Subject: Re: [Qemu-devel] [PATCH v6 15/27] qapi: rename allow_dict to
 allow_implicit
X-BeenThere: qemu-devel@nongnu.org
X-Mailman-Version: 2.1.21
Precedence: list
List-Id: <qemu-devel.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/qemu-devel/>
List-Post: <mailto:qemu-devel@nongnu.org>
List-Help: <mailto:qemu-devel-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/qemu-devel>,
	<mailto:qemu-devel-request@nongnu.org?subject=subscribe>
Cc: QEMU <qemu-devel@nongnu.org>
Errors-To: qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org
Sender: "Qemu-devel" <qemu-devel-bounces+like.xu=linux.intel.com@nongnu.org>

Hi
On Mon, Dec 10, 2018 at 12:51 PM Markus Armbruster <armbru@redhat.com> wrot=
e:
>
> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
>
> > On Wed, Dec 5, 2018 at 10:41 PM Markus Armbruster <armbru@redhat.com> w=
rote:
> >>
> >> Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com> writes:
> >>
> >> > This makes it a bit clearer what is the intent of the dictionnary fo=
r
> >>
> >> dictionary
> >
> > sigh, this must be a very common misspell (dictionnaire in french)
>
> Muscle memory...
>
> >> > the check_type() function, since there was some confusion on a
> >> > previous iteration of this series.
> >>
> >> I don't remember... got a pointer to that confusion handy?
> >
> > https://lists.nongnu.org/archive/html/qemu-devel/2017-12/msg01584.html
>
> Thanks!
>
> My review comment was
>
>     > diff --git a/scripts/qapi.py b/scripts/qapi.py
>     > index df2a304e8f..15711f96fa 100644
>     > --- a/scripts/qapi.py
>     > +++ b/scripts/qapi.py
>     > @@ -696,7 +696,15 @@ def check_type(info, source, value, allow_arra=
y=3DFalse,
>     >          return
>     >
>     >      if not allow_dict:
>     > -        raise QAPISemError(info, "%s should be a type name" % sour=
ce)
>     > +        if isinstance(value, dict) and 'type' in value:
>     > +            check_type(info, source, value['type'], allow_array,
>     > +                       allow_dict, allow_optional, allow_metas)
>     > +            if 'if' in value:
>     > +                check_if(value, info)
>     > +            check_unknown_keys(info, value, {'type', 'if'})
>     > +            return
>     > +        else:
>     > +            raise QAPISemError(info, "%s should be a type name" % =
source)
>
>     @allow_dict becomes a misnomer: dictionaries are now always allowed, =
but
>     they have different meaning (implicit type vs. named type with
>     additional attributes).
>
>     Rename to @allow_implicit?
>
> As far as I can tell, it's not an issue in the current version of your
> patches anymore:
>
>     def check_type(info, source, value, allow_array=3DFalse,
>                    allow_implicit=3DFalse, allow_optional=3DFalse,
>                    allow_metas=3D[]):
>         global all_names
>
>         if value is None:
>             return
>
>         # Check if array type for value is okay
>         if isinstance(value, list):
>             if not allow_array:
>                 raise QAPISemError(info, "%s cannot be an array" % source=
)
>             if len(value) !=3D 1 or not isinstance(value[0], str):
>                 raise QAPISemError(info,
>                                    "%s: array type must contain single ty=
pe name" %
>                                    source)
>             value =3D value[0]
>
>         # Check if type name for value is okay
>         if isinstance(value, str):
>             if value not in all_names:
>                 raise QAPISemError(info, "%s uses unknown type '%s'"
>                                    % (source, value))
>             if not all_names[value] in allow_metas:
>                 raise QAPISemError(info, "%s cannot use %s type '%s'" %
>                                    (source, all_names[value], value))
>             return
>
>         if not allow_implicit:
>             raise QAPISemError(info, "%s should be a type name" % source)
>
>         if not isinstance(value, OrderedDict):
>             raise QAPISemError(info,
>                                "%s should be a dictionary or type name" %=
 source)
>
>         # value is a dictionary, check that each member is okay
>         for (key, arg) in value.items():
>             check_name(info, "Member of %s" % source, key,
>                        allow_optional=3Dallow_optional)
>             if c_name(key, False) =3D=3D 'u' or c_name(key, False).starts=
with('has_'):
>                 raise QAPISemError(info, "Member of %s uses reserved name=
 '%s'"
>                                    % (source, key))
>             # Todo: allow dictionaries to represent default values of
>             # an optional argument.
>             if isinstance(arg, dict):
>                 check_known_keys(info, "member '%s' of %s" % (key, source=
),
>                                  arg, ['type'], ['if'])
>                 typ =3D arg['type']
>             else:
>                 typ =3D arg
>             check_type(info, "Member '%s' of %s" % (key, source),
>                        typ, allow_array=3DTrue,
>                        allow_metas=3D['built-in', 'union', 'alternate', '=
struct',
>                                     'enum'])
>
>
> >> > Suggested-by: Markus Armbruster <armbru@redhat.com>
> >> > Signed-off-by: Marc-Andr=C3=A9 Lureau <marcandre.lureau@redhat.com>
>

Feel free to drop it (allow_implicit seems a bit more clear to me though).

--=20
Marc-Andr=C3=A9 Lureau

